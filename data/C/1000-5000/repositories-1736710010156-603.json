{
  "metadata": {
    "timestamp": 1736710010156,
    "page": 603,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "distcc/distcc",
      "stars": 2101,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.375,
          "content": "*.o\n*.d\n*.out\n*.err\n# binaries\n/*.exe\ndistcc\ndistccd\ndistccmon-text\nlsdistcc\npump\nupdate-distcc-symlinks\n\n# files generated by build tools\nMakefile\n_include_server/\naclocal.m4\nautom4te.cache/\nconfig.log\nconfig.status\nconfigure\nlzo/.stamp-conf\nsrc/config.h\nsrc/config.h.in\nsrc/config.h.stamp\nman/*.gz\n_testtmp/\n__pycache__/\n/h_*\n\n# `make dist` products\ndistcc-*.tar.*\ndistcc-*.NEWS\n*~\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.64453125,
          "content": "notifications:\n  email:\n    recipients:\n      - shawn@git.icu\n    on_success: change # default: change\n    on_failure: always # default: always\n\nlanguage: c\n\ncache: ccache\n\naddons:\n  apt:\n    packages:\n      - python3-dev\n      - libiberty-dev\n      - clang\n      - libavahi-client-dev \n\nscript:\n  - ./autogen.sh\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then ./configure; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then ./configure --without-libiberty; fi\n  - make\n  - make check\n\nmatrix:\n  include:\n  - os: linux\n    compiler: gcc\n    dist: trusty\n  - os: linux\n    compiler: clang\n    dist: trusty\n  - os: osx\n    osx_image: xcode11.3\n    compiler: clang\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.255859375,
          "content": "Author and maintainer emeritus of distcc:\n \n  Martin Pool\n\nAuthors of \"pump\" functionality, and maintainers of distcc:\n\n  Nils Klarlund <distcc-pump@google.com>\n  Fergus Henderson\n  Craig Silverstein\n  Manos Renieris\n\nSee NEWS for credits of other contributors.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.5703125,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year  name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 785.8408203125,
          "content": "2011-10-26 02:49  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  After my change to gzip the man pages before installing them,\n\t  I had to make a couple more changes to get \"make distcheck\" to pass.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2011-10-25 01:49  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in, man:\n\t  \n\t  Gzip the man pages before installing them.\n\t  \n\t  This is required by the Debian policy manual\n\t  <http://www.debian.org/doc/debian-policy/ch-docs.html>\n\t  and is also assumed by our packaging/RedHat/rpm.spec file\n\t  which we use for building both RPM and Debian packages.\n\t  \n\t  Also some whitespaces changes; only the first of the\n\t  four segments in this patch has non-whitespace changes.\n\n2011-10-25 00:42  Fergus Henderson <opensource@google.com>\n\n\t* ChangeLog, NEWS, configure.ac:\n\t  \n\t  Update the NEWS and ChangeLog files, and set the version number to\n\t  3.2rc1,\n\t  in preparation for releasing distcc version 3.2.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2011-10-24 23:26  Fergus Henderson <opensource@google.com>\n\n\t* doc/web/man/distcc_1.html, doc/web/man/distccd_1.html,\n\t  doc/web/man/distccmon_text_1.html, doc/web/man/include_server_1.html,\n\t  doc/web/man/pump_1.html, man/distcc.1, man/include_server.1:\n\t  \n\t  Regenerate the checked-in HTML for the man pages.\n\t  \n\t  The HTML files were generated automatically using\n\t  \n\t  sudo apt-get install troffcvt\n\t  make man-html\n\t  \n\t  But I have also changed the man source files to ensure that\n\t  the generated output still looks nice. The changes were\n\t  mainly replacing blank lines with \".PP\", but there were a\n\t  few other tweaks needed too.\n\t  \n\t  Tested by viewing the output on both Chrome and Safari,\n\t  and using \"man\" and (equivalently) \"nroff -man\" and\n\t  examining the changes.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2011-10-24 00:57  Fergus Henderson <opensource@google.com>\n\n\t* man/distccd.1:\n\t  \n\t  Apply a suggestion from Craig Silverstein: update the documentation\n\t  for the --whitelist option to make it clear that distcc will accept\n\t  connections *only* from users on the list.\n\n2011-10-21 01:26  Fergus Henderson <opensource@google.com>\n\n\t* popt/popthelp.c, src/dotd.c:\n\t  \n\t  Fix a couple of compiler warnings.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2011-06-28 20:13  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Apply patch from Ihor Kaharlichenko <madkinder> to fix issue 81\n\t  <http://code.google.com/p/distcc/issues/detail?id=81>:\n\t  SyntaxError_Case was failing with recent versions of gcc,\n\t  due to the error message format having changed to now\n\t  include the column number.\n\t  \n\t  Also remove an old \"XXX\" comment that no longer applies.\n\n2011-04-06 14:49  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Fix a syntax error in my last change.\n\n2011-04-06 14:36  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Update Makefile.in for compatibility with autoconf >= 2.60.\n\t  This avoids the following warning\n\t  config.status: WARNING: 'Makefile.in' seems to ignore the\n\t  --datarootdir setting\n\t  and ensures that our configure script supports that --datarootdir\n\t  flag.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2011-04-06 14:35  Fergus Henderson <opensource@google.com>\n\n\t* src/clinet.c, src/dotd.c, src/emaillog.c, src/hosts.c, src/mon.c,\n\t  src/netutil.c, src/serve.c, src/snprintf.c, src/snprintf.h,\n\t  src/srvnet.c, src/srvrpc.c, src/stats.c, src/trace.c, src/util.c:\n\t  \n\t  Fix warnings about unused return values. This includes some code\n\t  changes\n\t  to do a better job of error checking.\n\n2011-04-06 14:11  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Fix some issues that caused the gdb-related tests to fail:\n\t  \n\t  1. Recent gcc versions want us to use -Wl,--build-id\n\t  rather than --build-id.\n\t  \n\t  2. We had missed one of the places where we need to be passing\n\t  that flag in.\n\t  \n\t  3. With recent gcc/gdb versions, \"break main; run\"\n\t  will sometimes stop at the first statement inside of main\n\t  rather than on the function declaration.\n\t  So \"break main; run; step\" may end up inside the code to\n\t  puts() rather than in the code for main().\n\t  My fix was to use \"break main; run; next\" instead.\n\t  It is inderminate (varies based on whether you use \"-O\", for example)\n\t  whether we end up at the call to puts() or after the call to puts(),\n\t  but either way the call to puts() should be in the gdb output log.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2011-04-06 14:09  Fergus Henderson <opensource@google.com>\n\n\t* configure.ac:\n\t  \n\t  Support Python 2.6.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2011-04-05 18:57  Fergus Henderson <opensource@google.com>\n\n\t* src/hosts.c:\n\t  \n\t  Fix indentation (layout changes only, no code changes).\n\n2010-11-16 19:05  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Fix for <http://code.google.com/p/distcc/issues/detail?id=61>\n\t  \"Gdb tests fail in pumped mode on Ubuntu 9.10 amd64\":\n\t  pass --build-id to gcc versions that support it.\n\t  (See <http://fedoraproject.org/wiki/RolandMcGrath/BuildID>\n\t  for a description of the --build-id switch.)\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2010-11-16 18:51  Fergus Henderson <opensource@google.com>\n\n\t* man/include_server.1:\n\t  \n\t  Fix error in manual: to disable fallback, set DISTCC_FALLBACK to 0 not\n\t  1.\n\t  Resolves <http://code.google.com/p/distcc/issues/detail?id=75>.\n\n2010-10-08 19:33  Fergus Henderson <opensource@google.com>\n\n\t* src/access.c:\n\t  \n\t  Apply patch from Ian Kumlien <Ian.Kumlien@gmail.com>,\n\t  to fix <http://code.google.com/p/distcc/issues/detail?id=70>.\n\t  This patch fixes a compile error on Gentoo Linux due to \"s6_addr\"\n\t  being #defined by a system header file and thus not available for\n\t  use as a local variable name.\n\n2010-10-08 18:29  Fergus Henderson <opensource@google.com>\n\n\t* src/clirpc.c, src/compile.c, src/remote.c, src/state.c, src/state.h,\n\t  src/where.c:\n\t  \n\t  Apply patch from Jeremy Murphy <jeremy.william.murphy@gmail.com>,\n\t  tested and reviewed by cheepero@gmail.com, to address\n\t  <http://code.google.com/p/distcc/issues/detail?id=36>\n\t  \"distcc-mon-gnome displays multiple rows for same host/slot\".\n\n2010-09-10 22:09  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Fix failures of the Gdb_* test cases:\n\t  \n\t  1. These tests were failing if you have anything in your ~/.gdbinit\n\t  file that causes gdb to issue an error message. The fix here is\n\t  to create an empty .gdbinit in the test directory; gdb will\n\t  read that one in preference to the one in $HOME.\n\t  \n\t  2. These tests were failing due to a new spurious warning from gdb.\n\t  \n\t  3. There were a bug in the code for the Gdb_Case test which previously\n\t  caused part of the test to be executed only in pump mode. When\n\t  invoking gcc to check whether preprocessing preserves the pwd info,\n\t  the command line had not been updated to reflect the fact that this\n\t  command is run in a subdirectory; as a consequence,\n\t  gcc_preprocessing_preserves_pwd was always set to false.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2010-08-19 22:51  Fergus Henderson <opensource@google.com>\n\n\t* src/access.c:\n\t  \n\t  Some minor stylistic improvements:\n\t  use array indexing rather than pointer arithmetic;\n\t  simplify for loops;\n\t  change a parameter name to match comment describing it;\n\t  eliminate trailing whitespace.\n\t  \n\t  Reviewed by Bob Ham\n\n2010-08-19 20:07  Fergus Henderson <opensource@google.com>\n\n\t* src/daemon.c, src/daemon.h, src/serve.c:\n\t  \n\t  Change directory back to the original server working directory after\n\t  each\n\t  distcc-pump compilation. This fixes a bug where distcc-pump was\n\t  changing\n\t  to a directory and then deleting that directory and not changing back\n\t  to the original directory. That caused problems when you used a server\n\t  first in distcc-pump mode and then in distcc mode, and the compiler\n\t  invoked a shell script. The compilation would succeed, but the shell\n\t  would\n\t  report a confusing warning (\"shell-init: error retrieving current\n\t  directory:\n\t  getcwd: cannot access parent directories: No such file or directory\").\n\n2010-08-19 19:23  Fergus Henderson <opensource@google.com>\n\n\t* include_server/compiler_defaults.py, include_server/parse_command.py,\n\t  include_server/parse_command_test.py:\n\t  \n\t  Apply --sysroot patch from Simon Baldwin <simonb@google.com>:\n\t  \n\t  2010-08-18 Simon Baldwin <simonb@google.com>\n\t  \n\t  * include_server/compiler_defaults.py (_SystemSearchdirsGCC):\n\t  Add a 'sysroot' parameter. Add --sysroot, if needed, to the gcc\n\t  invocation that identifies search directories and default paths.\n\t  Add debugging output.\n\t  (SetSystemDirsDefaults): Add 'sysroot' parameter. Add another\n\t  dictionary level to system_dirs_default for sysroot values.\n\t  Add debugging output.\n\t  * include_server/parse_command.py (ParseCommandArgs): Identify\n\t  and handle arguments of the form '--opt=value'. Pass any\n\t  --sysroot value to compiler_defaults.SetSystemDirsDefaults, use\n\t  it in compiler_defaults.system_dirs_default lookups.\n\t  (CPP_OPTIONS_APPEARING_AS_ASSIGNMENTS): New.\n\t  * include_server/parse_command_test.py (Mock_SetSystemDirsDefaults):\n\t  Add sysroot parameter, verify it on function calls.\n\t  (ParseCommandUnitTest): Add --sysroot to mock gcc invocations.\n\n2010-06-29 15:51  Fergus Henderson <opensource@google.com>\n\n\t* src/fix_debug_info.c:\n\t  \n\t  Trivial fix for slight mistake in distccd debug message.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2010-05-04 20:09  Fergus Henderson <opensource@google.com>\n\n\t* src/serve.c, src/stats.c, src/stats.h, src/util.c, src/util.h:\n\t  \n\t  Apply patch from Ryan Burns <rburns@pixar.com>:\n\t  add 1, 3, 5 minute averages of the number of children\n\t  used on a server to the statistics collected by the\n\t  stats server.\n\n2010-05-04 19:52  Fergus Henderson <opensource@google.com>\n\n\t* man/distcc.1, src/compile.c:\n\t  \n\t  Apply patch from Ryan Burns <rburns@pixar.com>:\n\t  add an environment variable DISTCC_SKIP_LOCAL_RETRY for skipping\n\t  the local retry in case of a remote compilation failure.\n\n2010-03-02 08:24  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Apply slightly cleaned up version of patch from perezdiez@gmail.com\n\t  to fix failure of PreprocessAsm_Case on ARM.\n\n2010-03-02 08:13  Fergus Henderson <opensource@google.com>\n\n\t* src/emaillog.c:\n\t  \n\t  Apply patch from Akim Demaille <demaille@gostai.com>:\n\t  \n\t  * src/emaillog.c (dcc_maybe_send_email): Pacify GCC's warnings\n\t  about format strings by getting rid of a useless temporary\n\t  string.\n\n2010-03-02 08:10  Fergus Henderson <opensource@google.com>\n\n\t* ChangeLog, src/hosts.c:\n\t  \n\t  Apply patch from Akim Demaille <demaille@gostai.com>:\n\t  \n\t  * src/hosts.c (strndup): Use the standard signature (without\n\t  static), so that we don't conflict with GCC's builtin signature.\n\t  Now that it is not static, declare it, to avoid warnings.\n\n2010-02-18 23:40  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Apply patch from madkinder: use #include rather than #import in C++\n\t  test case.\n\t  This fixes a test case failure with gcc 4.4.1, which warns about use\n\t  of #import.\n\t  \n\t  (The use of #import was an accidental cut-and-paste error resulting\n\t  from copying\n\t  the C++ test case from the Objective-C/C++ test case.)\n\n2010-02-18 23:33  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Change the PreprocessAsm_Case so that it reports NOTRUN\n\t  rather than PASS for systems where it is not run.\n\n2010-02-10 03:31  Lei Zhang <opensource@google.com>\n\n\t* man/distcc.1, src/daemon.c, src/distcc.h, src/io.c, src/pump.c,\n\t  src/sendfile.c:\n\t  \n\t  Add support for $DISTCC_IO_TIMEOUT.\n\t  \n\t  Reviewed by Fergus Henderson.\n\n2009-12-30 04:25  Fergus Henderson <opensource@google.com>\n\n\t* packaging/RedHat/init.d/distcc:\n\t  \n\t  Apply patch from Tal <tal.bav@gmail.com>:\n\t  \n\t  In packaging/RedHat/init.d/distcc the executable is once refereed to\n\t  using the variable EXEC, and once as with the explicit expected name.\n\t  Change it to always use the EXEC variable.\n\n2009-12-01 04:46  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Apply patch from <avassalotti@gmail.com>:\n\t  \n\t  This is a simple patch that adds the standard TAGS target for Emacs\n\t  users.\n\n2009-08-03 23:33  Lei Zhang <opensource@google.com>\n\n\t* man/distcc.1, man/pump.1, pump.in, src/compile.c:\n\t  \n\t  Make max_discrepancies_before_demotion configurable via\n\t  DISTCC_MAX_DISCREPANCY environment variable.\n\n2009-07-24 17:30  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Pass \"-c\" to gcc for the Dotd_Case tests.\n\t  \n\t  This fixes a problem where this test was failing on some systems\n\t  due to link errors when compiling C++ source files with \"gcc foo.cpp\".\n\t  To link C++ code, you now need to use \"g++ foo.cpp\" or \"gcc foo.cpp\n\t  -lstdc++\",\n\t  even if the C++ code in question doesn't use any C++ library features.\n\t  Rather than changing the code to use \"g++\" or \"-lstdc++\", I though it\n\t  was\n\t  better to avoid the link step entirely, since it is not needed for the\n\t  things\n\t  this test is testing, and removing it will speed up the test.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2009-07-24 16:59  Fergus Henderson <opensource@google.com>\n\n\t* man/distccd.1, src/auth.h, src/auth_common.c, src/auth_distcc.c,\n\t  src/auth_distccd.c, src/daemon.c, src/dopt.c, src/dopt.h,\n\t  src/dparent.c, src/dsignal.c:\n\t  \n\t  Apply patch from Ian.Baker@cern.ch:\n\t  \n\t  Optional Black/Whitelist Functionality.\n\t  \n\t  This patch is used to implement optional server-side access control\n\t  through a specified black or whitelist file. This option is specified\n\t  through a command line option.\n\t  \n\t  Revised by me (Fergus Henderson):\n\t  fixed spelling error, added a comment.\n\n2009-07-24 16:31  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in, configure.ac, src/h_getline.c[ADD], src/util.c,\n\t  src/util.h, test/testdistcc.py:\n\t  \n\t  Define a GNU-compatible getline() implementation,\n\t  in case we don't have getline() available.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2009-07-24 01:32  Fergus Henderson <opensource@google.com>\n\n\t* src/h_parsemask.c:\n\t  \n\t  Fix compile errors for \"make check\" caused by distcc-v6-acl-2.patch.\n\n2009-07-23 02:16  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in, configure.ac, man/distcc.1, man/distccd.1,\n\t  src/auth.h[ADD], src/auth_common.c[ADD], src/auth_distcc.c[ADD],\n\t  src/auth_distccd.c[ADD], src/clirpc.c, src/daemon.c, src/distcc.c,\n\t  src/dopt.c, src/dopt.h, src/dparent.c, src/dsignal.c, src/exitcode.h,\n\t  src/help.c, src/hosts.c, src/hosts.h, src/lock.c, src/remote.c,\n\t  src/serve.c:\n\t  \n\t  Apply patch from Ian.Baker@cern.ch:\n\t  \n\t  Optional GSS-API Functionality.\n\t  \n\t  This patch implements mutual authentication, out of sequence and\n\t  replay detection using the GSS-API. The changes implemented are\n\t  optional and are turned off by default.\n\t  \n\t  This option is specified to the client through an environment variable\n\t  as is the name of the server principal to authenticate. Currently\n\t  the server principal can be left unspecified and a default based on\n\t  the host keytab will be used.\n\t  \n\t  This option is specified to the daemon through a command line option,\n\t  with the name of the principal whose credentials the daemon should\n\t  use specified as an environment variable. A simple handshake is\n\t  exchanged between the client and server in order to prevent\n\t  unecessary delays and protocol derailments when mixing authenticating\n\t  and non-authenticating clients and servers.\n\t  \n\t  Revised based on review comments.\n\t  GSS-API authentication is now implemented as a per host option.\n\t  \n\t  Revised further by me (Fergus Henderson) to fix a spelling error\n\t  and to rename the per host option from \",gssapi\" to \",auth\".\n\n2009-07-23 02:15  Fergus Henderson <opensource@google.com>\n\n\t* doc/protocol-gssapi.txt[ADD]:\n\t  \n\t  Apply patch from Ian.Baker@cern.ch:\n\t  \n\t  Protocol Documentation for GSSAPI extension.\n\n2009-07-22 21:39  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Add Makefile target \"man-html\" for rebuilding the (checked-in) HTML\n\t  versions of the man pages. This allows you to view the changes with\n\t  \"svn diff\" before running \"make upload-man\" which commits them.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2009-07-22 17:29  Fergus Henderson <opensource@google.com>\n\n\t* src/access.c, src/access.h, src/srvnet.c, src/zeroconf-reg.c:\n\t  \n\t  Apply distcc-v6-acl-2.patch from Bob Ham <rah@bash.sh>:\n\t  - Implements IPv6 support for access control.\n\t  - Restrict zeroconf advertisements to IPv4 if\n\t  RFC2553 support isn't enabled.\n\t  - Modifies the non-RFC2553 code to use inet_aton()\n\t  instead of the RFC2553-specific inet_pton().\n\n2009-07-22 17:22  Fergus Henderson <opensource@google.com>\n\n\t* man/include_server.1:\n\t  \n\t  Improve some slightly misleading documentation.\n\n2009-06-30 21:37  Fergus Henderson <opensource@google.com>\n\n\t* gnome/distccmon-gnome.desktop:\n\t  \n\t  Swedish translation, from Nille <nille.kungen@gmail.com>.\n\n2009-04-18 00:03  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Apply patch from Assar <assar@permabit.com>:\n\t  \n\t  If any of the files in the source directory are not writable, running\n\t  \"make dist\" will prompt you if you want to remove those files in the\n\t  temporary distribution directory (distcc-3.1).\n\t  \n\t  The following tiny patch fixes that.\n\n2009-04-14 03:10  benizi\n\n\t* src/zeroconf.c:\n\t  \n\t  Remove duplicate hosts from the zeroconf list.\n\t  \n\t  Fixes issue 43 <http://code.google.com/p/distcc/issues/detail?id=43>.\n\t  As mentioned in issue 34\n\t  <http://code.google.com/p/distcc/issues/detail?id=34>,\n\t  hosts with both IPv4 and IPv6 addresses showed up twice if avahi is\n\t  IPv6-enabled. So, filter out duplicates using the service name.\n\n2009-04-10 20:26  Fergus Henderson <opensource@google.com>\n\n\t* src/exec.c:\n\t  \n\t  (1) Layout/whitespace changes; the layout of this file\n\t  seems to have gotten mixed up when we changed from\n\t  using tabs to using spaces.\n\t  \n\t  (2) Fix spacing in a log message.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2009-04-10 19:26  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Fix a distcc test that was failing on modern kernels:\n\t  ignore a spurious warning from gdb.\n\t  \n\t  According to Paul Pluzhnikov, the warning is gone from current GDB,\n\t  fixed by the following patch:\n\t  \n\t  2008-04-21 Pedro Alves <pedro@codesourcery.com>\n\t  \n\t  * symfile.c (syms_from_objfile): Don't warn if lowest loadable\n\t  section is not a code section.\n\t  \n\t  But since there are going to be some versions of gdb in the wild that\n\t  don't have that patch, we still need to work around it in the distcc\n\t  tests.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2009-04-10 17:37  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  A fix for distcc issue 44 \"Failed tests on make check (gentoo\n\t  gcc-4.3.3)\"\n\t  <http://code.google.com/p/distcc/issues/detail?id=44>.\n\t  We were using an invalid signature for main(), and newer versions of\n\t  gcc\n\t  are stricter about checking this.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2009-03-06 13:55  IanRichardBaker\n\n\t* src/include_server_if.c:\n\t  \n\t  Fixed a portability issue that causes compilation to fail on 64 bit\n\t  boxes.\n\n2009-02-17 23:10  Fergus Henderson <opensource@google.com>\n\n\t* src/dotd.c, src/emaillog.c, src/include_server_if.c, src/lsdistcc.c,\n\t  src/rslave.c, src/stringmap.c, src/timeval.c:\n\t  \n\t  Ensure that all \".c\" files start with \"#include <config.h>\".\n\t  \n\t  This will hopefully fix issue 39\n\t  <http://code.google.com/p/distcc/issues/detail?id=39>.\n\t  Some header files were using #if statements that depended on macros\n\t  defined in config.h\n\t  without #including config.h first. The result was a compilation error,\n\t  because\n\t  \"#if !HAVE_DECL_SNPRINTF\" was evaluating to true because config.h\n\t  hadn't been included,\n\t  causing us to declare snprintf() when we shouldn't, leading to a\n\t  conflict with the\n\t  declaration in the standard header files.\n\t  \n\t  (The alternative solution would have been to add \"#include <config.h>\"\n\t  to every header file that uses '#if'. I decided not to do that, just\n\t  for consistency with the existing code.)\n\n2009-02-17 23:10  Fergus Henderson <opensource@google.com>\n\n\t* packaging/rpm.sh:\n\t  \n\t  Fix a non-portability in rpm.sh:\n\t  use \"trap ... HUP\" rather than \"trap ... SIGHUP\".\n\t  \n\t  The Posix.1 standard\n\t  <http://www.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#trap>\n\t  says:\n\t  The condition can be EXIT, 0 (equivalent to EXIT), or a signal\n\t  specified\n\t  using a symbolic name, without the SIG prefix, as listed in the tables\n\t  of signal names in the <signal.h> header [...]; for example, HUP, INT,\n\t  QUIT, TERM. Implementations may permit names with the SIG prefix or\n\t  ignore case in signal names as an extension.\n\t  \n\t  Previously, the code was relying on this optional extension.\n\n2009-01-30 17:27  Fergus Henderson <opensource@google.com>\n\n\t* include_server/macro_eval.py, include_server/parse_file.py,\n\t  test/testdistcc.py:\n\t  \n\t  Fix issue 35 <http://code.google.com/p/distcc/issues/detail?id=35>.\n\t  This was a bug where the include server was crashing in certain cases\n\t  (when the argument to a macro ended in a backslash) due to an escaping\n\t  problem in the use of Python's re.sub() function. The fix was to\n\t  replace all occurrences of backslash in the replacement string\n\t  with double-backslash, which re.sub() will then translate back to\n\t  a single backslash. (I also changed the code to not bother using\n\t  re.compile() since we only use the regexp once.)\n\t  \n\t  Also, fix a bug where we were not allowing backslashes in filenames.\n\t  \n\t  I added regression tests for both of these bugs\n\t  (and I verified that they were true regression tests).\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2009-01-26 23:50  Fergus Henderson <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Handle failure of \"mktemp\" more gracefully in the pump script.\n\t  It was printing an error message, but then it would continue\n\t  on even if mktemp had failed (it called \"exit 1\", but only\n\t  in a subshell). It would then go on and try to start the\n\t  include server, which would end up hanging.\n\t  The fix is to make sure that we call \"exit 1\" from the main\n\t  shell whenever MakeTmpFile fails.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2009-01-22 05:33  adshea\n\n\t* man/distcc.1, src/hosts.c, src/zeroconf.c:\n\t  \n\t  IPv6 patch for Zeroconf and and IPv6 literals in hosts file.\n\t  * Still needs configure flag masking for IPv6 literals\n\t  * Needs some fix for zeroconf hosts that have both and IPv6 and IPv4\n\t  address\n\n2009-01-20 22:22  Fergus Henderson <opensource@google.com>\n\n\t* doc/web/index.html, doc/web/man/index.html[ADD]:\n\t  \n\t  - Add pointer to the INSTALL file to the main page.\n\t  - Create an index.html in doc/web/man to make the\n\t  presentation of that page prettier.\n\t  Previously it was a rather ugly directory listing\n\t  of file names like \"distcc_1.html\", \"distccd_1.html\", etc.\n\t  - Add links to the INSTALL file and README* files\n\t  from that doc/web/man/index.html page.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2009-01-09 17:46  Fergus Henderson <opensource@google.com>\n\n\t* doc/web/index.html:\n\t  \n\t  Fix broken link to distccWebView.\n\n2009-01-09 08:54  akim.demaille\n\n\t* src/distcc.c:\n\t  \n\t  \"distcc --scan-includes\" dumps core.\n\t  \n\t  * src/distcc.c (main): Don't dump --help on the user on command\n\t  line error, rather, return the `Try --help' message on stderr.\n\t  Check that --scan-includes is given arguments.\n\n2009-01-05 22:48  Fergus Henderson <opensource@google.com>\n\n\t* src/distcc.c:\n\t  \n\t  Document the --scan-includes option in the output of \"distcc --help\".\n\n2009-01-05 20:29  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in, pump.in:\n\t  \n\t  Avoid using \"echo -n\", because it's not portable.\n\n2009-01-05 20:18  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Portability fix: the CPlusPlus_SystemIncludeDirectories_Case\n\t  was assuming that /usr/include/sys/types.h exists, but was\n\t  not checking this assumption.\n\n2008-12-22 22:21  Fergus Henderson <opensource@google.com>\n\n\t* include_server/compiler_defaults.py:\n\t  \n\t  Fix a bug where the SystemIncludeDirectories_Case test\n\t  was failing on systems where /tmp was a symlink.\n\t  This failure indicated a real bug: on such systems,\n\t  distcc was not correctly handling -I<dir> where\n\t  <dir> is a subdirectory of a system include directory,\n\t  e.g. -I/usr/include/foo.\n\t  \n\t  The code was calling _RealPrefix(client_root + system_dir)\n\t  but was implicitly assuming that the answer would always\n\t  start with client_root. That is, it was implicitly assuming\n\t  that client_root did not contain any symlinks.\n\t  \n\t  I changed the code to use\n\t  _RealPrefixWithinClientRoot(client_root, system_dir)\n\t  so that it would find the appropriate prefix of system_dir\n\t  rather than looking at the prefixes of client_root.\n\n2008-12-22 21:56  Fergus Henderson <opensource@google.com>\n\n\t* include_server/compiler_defaults.py:\n\t  \n\t  When computing the compiler's default search path by parsing the\n\t  output\n\t  from \"gcc -v\", ignore Apple-modified MacOS gcc's \"framework\"\n\t  directories.\n\n2008-12-10 20:22  Fergus Henderson <opensource@google.com>\n\n\t* INSTALL:\n\t  \n\t  Clarify installation instructions; in particular, if you have python\n\t  installed, you need to also have Python.h installed before building\n\t  distcc.\n\t  \n\t  Reviewer: Craig Silverstein\n\n2008-12-03 00:54  Fergus Henderson <opensource@google.com>\n\n\t* include_server/setup.py:\n\t  \n\t  Avoid a spurious message 'setup.py: PYTHON_CFLAGS must be defined.'\n\t  The top-level Makefile sets CFLAGS=\"$(CFLAGS) $(PYTHON_CFLAGS)\"\n\t  before invoking setup.py, so there's no need for it to set\n\t  PYTHON_CFLAGS.\n\n2008-12-02 21:49  Fergus Henderson <opensource@google.com>\n\n\t* ChangeLog:\n\t  \n\t  Update ChangeLog with some more changes for distcc 3.1.\n\n2008-12-02 21:44  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in, NEWS, configure.ac, include_server/setup.py:\n\t  \n\t  1. Fix some compilation errors arising from the use of\n\t  -Wwrite-strings when compiling the python extension module,\n\t  due to lack of const correctness in the Python 2.2\n\t  \"Python.h\" header file.\n\t  This problem was introduced by the fix for distcc issue 26\n\t  <http://code.google.com/p/distcc/issues/detail?id=26>.\n\t  The solution was to explicitly disable these warnings\n\t  with -Wno-write-strings.\n\t  \n\t  2. Centralize the use of gcc-specific compilation options\n\t  in conditional code in configure.ac that is only executed\n\t  if we're using gcc. Previously include_server/setup.py\n\t  was hard-coding gcc-specific options, regardless of\n\t  whether we're using gcc.\n\t  \n\t  3. Don't use -Wuninitialized if CFLAGS doesn't contain \"-O*\",\n\t  because -Wuninitialized only works if optimization is enabled.\n\t  This avoids a gcc warning (and hence an error with -Werror)\n\t  about -Wuninitialized not having any effect\n\t  when distcc is configured with \"CFLAGS=-g ./configure\".\n\t  \n\t  4. Add a new configure option \"--disable-Werror\".\n\t  \n\t  For the 3.0 release of distcc, some people porting distcc\n\t  resorted to patching distcc to remove the -Werror option.\n\t  -Werror is useful, so I want to keep it enabled by default,\n\t  but I'd prefer that people are able to port distcc easily,\n\t  hence the configure option.\n\t  \n\t  This addresses distcc issue 20\n\t  <http://code.google.com/p/distcc/issues/detail?id=20>.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-12-01 23:44  Fergus Henderson <opensource@google.com>\n\n\t* ChangeLog, NEWS, configure.ac:\n\t  \n\t  Bump version number to 3.1, and update the NEWS file and ChangeLog.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2008-10-27 22:11  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Apply matsuu's patch to fix issue 26 \"missing CFLAGS for\n\t  include-server\"\n\t  <http://code.google.com/p/distcc/issues/detail?id=26>.\n\n2008-10-27 14:38  Fergus Henderson <opensource@google.com>\n\n\t* include_server/c_extensions/distcc_pump_c_extensions_module.c:\n\t  \n\t  Applied matsuu's patch for issue 27 \"failed to make distcc\"\n\t  <http://code.google.com/p/distcc/issues/detail?id=27>,\n\t  which was a build problem on \"Gentoo, x86-64, gcc-4.1.2,\n\t  glibc-2.6.1, python-2.5.2\".\n\n2008-10-27 14:17  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Include the \"m4\" directory in the source distribution tarball,\n\t  so that users of the source distribution can (re)run \"autogen.sh\".\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-10-05 16:43  Fergus Henderson <opensource@google.com>\n\n\t* src/arg.c:\n\t  \n\t  Fix a silly mistake (missing \"== 0\" after strcmp() call)\n\t  that broke the parsing of \"-Wp,-MMD,...\" options.\n\t  \n\t  This fixes <http://code.google.com/p/distcc/issues/detail?id=22>.\n\n2008-09-27 01:57  Fergus Henderson <opensource@google.com>\n\n\t* include_server/test_data/gws-main.o.cmd[DEL]:\n\t  \n\t  Delete an unused test data file; it became dead after my\n\t  previous change which deleted the test that used it.\n\n2008-09-27 01:55  Fergus Henderson <opensource@google.com>\n\n\t* include_server/parse_command_test.py:\n\t  \n\t  Delete an unused test case: the test was hard-coded to always pass\n\t  anyway,\n\t  so it wasn't testing anything useful.\n\n2008-09-13 17:23  Fergus Henderson <opensource@google.com>\n\n\t* doc/web/man/distcc_1.html, man/distcc.1, src/exitcode.h:\n\t  \n\t  Incorporate 01_distcc_man.dpatch from debian distribution.\n\t  This patch adds documentation of all of the exit codes to the man\n\t  page.\n\t  \n\t  Also add comment to exitcode.h reminding maintainers to update the man\n\t  page.\n\t  \n\t  Also update the HTML versions of the man pages.\n\n2008-09-11 18:48  Fergus Henderson <opensource@google.com>\n\n\t* NEWS, include_server/include_analyzer.py, man/distcc.1, src/clirpc.c,\n\t  src/compile.c, src/compile.h, src/distcc.c, src/distcc.h,\n\t  src/include_server_if.c, src/include_server_if.h, src/util.c,\n\t  test/testdistcc.py:\n\t  \n\t  Provides a simple shell API to the include server:\n\t  add a new \"--scan-includes\" option to distcc which shows\n\t  which headers distcc would send to the remote machine in\n\t  pump mode, without actually compiling anything.\n\n2008-09-10 02:39  Fergus Henderson <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Fix <http://code.google.com/p/distcc/issues/detail?id=19>:\n\t  the pump script was hard-coding /etc/distcc/hosts rather\n\t  than using the prefix specified to configure.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2008-09-08 17:51  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in, src/hosts.c:\n\t  \n\t  Report a better error message if a host specification contains \",cpp\"\n\t  but not \",lzo\".\n\t  \n\t  Previously, setting \",cpp\" without \",lzo\" would quietly set the\n\t  protocol\n\t  version to -1, which the server would then quietly reject (logging as\n\t  \"REJ_BAD_REQ\"), and then the client would guess (poorly) at why the\n\t  server had dropped the connection.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2008-08-07 22:58  Fergus Henderson <opensource@google.com>\n\n\t* doc/web/man/distcc_1.html, doc/web/man/pump_1.html:\n\t  \n\t  Update the HTML versions of the man pages.\n\n2008-08-07 22:50  Fergus Henderson <opensource@google.com>\n\n\t* doc/web/index.html:\n\t  \n\t  Delete a duplicate link in the side-bar.\n\n2008-08-06 20:37  Fergus Henderson <opensource@google.com>\n\n\t* ChangeLog, NEWS, configure.ac:\n\t  \n\t  Change version number to \"3.0\", and update NEWS file and ChangeLog.\n\n2008-08-06 15:37  Fergus Henderson <opensource@google.com>\n\n\t* man/distcc.1, man/pump.1:\n\t  \n\t  Some final documentation updates before 3.0.\n\t  \n\t  In the distcc man page:\n\t  - remove description of a bug that's been fixed now (distcc issue 7)\n\t  - make it a little clearer that in pump mode we don't ship the header\n\t  files from the default system header directories to the server\n\t  - add a new section header \"RESTRICTIONS OF PUMP MODE\"\n\t  - some typographical corrections.\n\t  \n\t  In the pump man page:\n\t  - add a prominent pointer to the distcc man page,\n\t  in particular to the \"RESTRICTIONS OF PUMP MODE\" section.\n\t  \n\t  Reviewers: Craig Silverstein\n\n## distcc 3.0rc4.\n\n2008-08-02 19:54  Fergus Henderson <opensource@google.com>\n\n\t* ChangeLog, NEWS, configure.ac:\n\t  \n\t  Time for another release candidate.\n\n2008-08-02 19:49  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Add C++ version of the SystemIncludeDirectories test.\n\t  \n\t  Also, reduce code duplication a little by adding a compileOpts()\n\t  function to\n\t  the CompilationCase class, and overriding that, rather than\n\t  compileCmd(),\n\t  in various derived classes.\n\n2008-08-02 17:50  Fergus Henderson <opensource@google.com>\n\n\t* include_server/compiler_defaults.py:\n\t  \n\t  Fix a TODO in compiler_defaults.py that was responsible for a bug\n\t  that broke pump mode when one of the default system include\n\t  directories\n\t  was a subdirectory of another, as turns out to be the case for GNU\n\t  C++.\n\t  \n\t  The CPlusPlus_SystemIncludeDirectories_Case, which was failing before\n\t  this\n\t  change, now passes. (TODO: re-enable it.)\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-08-02 01:30  Fergus Henderson <opensource@google.com>\n\n\t* bench/benchmark.py:\n\t  \n\t  Make the benchmarking script's stdout and stderr line buffered.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-08-02 01:27  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Add a test of C++ compilation, and refactor the tests of Objective-C\n\t  and Objective-C++ to share the common code.\n\t  \n\t  Also, fix some bugs in the tests of Objective-C and Objective-C++.\n\t  These tests were never being activated, even when the right compiler\n\t  is\n\t  installed, because in the test compilation (not using distcc) it was\n\t  compiling with \"-o /dev/null\" and then testing that testtmp.o exists,\n\t  which it never did. There was also a missing \"std::\" in the\n\t  Objective-C++\n\t  test. I still haven't run the Objective-C++ test, because I still\n\t  haven't\n\t  figured out how to install Objective-C++, but it's pretty similar to\n\t  the C++ and Objective-C tests, and both of those now run and pass.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-08-01 20:59  Fergus Henderson <opensource@google.com>\n\n\t* bench/ProjectDefs.py:\n\t  \n\t  Update a stale URL.\n\n## distcc 3.0rc3.\n\n2008-08-01 03:42  Fergus Henderson <opensource@google.com>\n\n\t* include_server/basics.py:\n\t  \n\t  Increase MAX_COMPONENTS_IN_SERVER_ROOT from 10 to 20.\n\t  \n\t  It turns out that our own test infrastructure (test/testdistcc.py)\n\t  sets TMPDIR before invoking distccd, so this needs to be reasonably\n\t  high, otherwise 'make distcheck' will fail.\n\n2008-08-01 03:11  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  List va_copy.h in HEADERS, so that it gets included in the source\n\t  distribution.\n\n2008-07-31 19:19  Fergus Henderson <opensource@google.com>\n\n\t* ChangeLog, NEWS, configure.ac:\n\t  \n\t  Bump version number to 3.0rc3, and update NEWS file and ChangeLog.\n\t  \n\t  Reviewed by Craig Silverstein.\n\n2008-07-31 05:40  Fergus Henderson <opensource@google.com>\n\n\t* src/distcc.h, src/filename.c:\n\t  \n\t  Fix issue 10 <http://code.google.com/p/distcc/issues/detail?id=10>:\n\t  add a work-around for a spurious gcc warning.\n\t  \n\t  Also, add a missing check for strdup() returning NULL.\n\n2008-07-30 22:56  Fergus Henderson <opensource@google.com>\n\n\t* src/dotd.c, src/serve.c, src/strip.c, test/testdistcc.py:\n\t  \n\t  Add a test case to test \"-MT\" and \"-MF\" without spaces after them.\n\t  \n\t  Some more bug fixes to make the test case pass.\n\t  \n\t  Also, make the DashWpMD_Case test a bit more strict: disable\n\t  fallbacks, so that it tests that we can distribute such jobs.\n\n2008-07-30 02:28  Fergus Henderson <opensource@google.com>\n\n\t* src/fix_debug_info.c, src/netutil.c, src/snprintf.c, src/srvnet.c:\n\t  \n\t  Fix some warnings with -Wcast-align that show up only on machines\n\t  that don't support unaligned accesses.\n\t  \n\t  Fix some const correctness warnings that show up only on machines\n\t  that don't have vsnprintf().\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-07-30 02:27  Fergus Henderson <opensource@google.com>\n\n\t* src/arg.c:\n\t  \n\t  Fix issue 13 <http://code.google.com/p/distcc/issues/detail?id=13>:\n\t  allow distcc to distribute commands that use \"-MF<filename>\"\n\t  rather than \"-MF <filename>\", and likewise for -MT and -MQ.\n\n2008-07-30 01:13  Fergus Henderson <opensource@google.com>\n\n\t* src/clirpc.c, src/tempfile.c:\n\t  \n\t  Apply patch from e...@jessies.org in\n\t  <http://code.google.com/p/distcc/issues/detail?id=9>:\n\t  \n\t  use S_ISLNK and S_ISDIR macros, to make the code more readable.\n\n2008-07-29 23:04  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  In the Makefile, add a target for running a single test in pump mode.\n\n2008-07-29 22:19  Fergus Henderson <opensource@google.com>\n\n\t* include_server/basics.py, include_server/cache_basics.py,\n\t  include_server/compiler_defaults.py,\n\t  include_server/include_analyzer.py, include_server/macro_eval_test.py,\n\t  include_server/mirror_path.py, include_server/mirror_path_test.py,\n\t  include_server/parse_command_test.py, src/srvrpc.c, src/tempfile.c,\n\t  test/testdistcc.py:\n\t  \n\t  This is based on klarlund's original version of this patch\n\t  (klarlund/d3b3):\n\t  gvn --project https://distcc.googlecode.com/svn/trunk review\n\t  klarlund/d3b3\n\t  \n\t  Fix Issue 7: Compiling with -I/usr/include/FOO or ... in pump mode\n\t  \n\t  Problem:\n\t  \n\t  Default system include directories are the directories on the default\n\t  include\n\t  search path, such as /usr/include, that is determined by the compiler.\n\t  Distcc\n\t  will not send default system include directories to the distcc\n\t  compilation\n\t  servers. Nevertheless, distcc on the server blindly rewrites -I\n\t  options such\n\t  as -I/usr/include/foo to -I/tmp/distccNNN/usr/include/foo.\n\t  \n\t  This doesn't work, since the files in /usr/include/foo are not sent to\n\t  the\n\t  distccd server.\n\t  \n\t  Solution:\n\t  \n\t  The present solution keeps the rewriting on the server, because we\n\t  would like\n\t  to not manage starting the compiler, parsing its output, and storing\n\t  the\n\t  default system paths on the server\n\t  \n\t  Instead, we use the existing mechanism for defining relative symbolic\n\t  links\n\t  under the server root. We escape from the root by using a sufficient\n\t  number\n\t  of '../'s.\n\t  \n\t  All this is tremendously complicated by:\n\t  \n\t  -- The possibility that other links encountered may point into the\n\t  system\n\t  default dirs in which case the usual mirroring of the reachable places\n\t  should not take place, because the routing of such links will go\n\t  through\n\t  the link created for the system directory.\n\t  \n\t  -- The fact that determination of default-system-dirness is lazy: a\n\t  deeply-seated link in a default system dir may become obsolete if it\n\t  is\n\t  later determined that a higher directory than the parent directory of\n\t  the\n\t  link is in fact also a default system dir. In that case, a new\n\t  symlink,\n\t  sitting in a place higher than the previous one will need to be\n\t  created.\n\t  \n\t  Tests:\n\t  \n\t  make check\n\t  benchmarks: samba (still 3X faster than with distcc), linux 2.6\n\t  kernel, and\n\t  a couple of others\n\t  \n\t  TODO: better testing\n\t  TODO:\n\t  > In compiler_defaults.py, _MakeLinkFromMirrorToRealLocation:\n\t  > Maybe comment each of the 'if' cases with an example of how this\n\t  case\n\t  > might be triggered. eg the real_prefix == rooted_system_dir is\n\t  > triggered when we see /usr/include/foo, and the later see\n\t  > /usr/include.\n\n2008-07-29 22:17  Fergus Henderson <opensource@google.com>\n\n\t* configure.ac, src/snprintf.c, src/trace.c, src/va_copy.h:\n\t  \n\t  Fix a bug that caused \"make check\" to fail: MissingCompiler_Case\n\t  was reporting an unexpected exit status: 139 instead of 110.\n\t  This was caused by a seg fault in distccd, deep in the bowels of\n\t  vsnprintf(), which appears to be due to calling vsnprintf() twice\n\t  on the same va_list. The fix is to use va_copy() in src/trace.c.\n\t  \n\t  Of course it's never quite as easy as that. va_copy() exists\n\t  only in C99, not in C89. Some implementations have __va_copy()\n\t  but not va_copy(). So we need to autoconf it. There was\n\t  already an autoconf test for this, but only for __va_copy.\n\t  I've moved the code which defined VA_COPY from snprintf.c to\n\t  a new header file va_copy.h, and added a VA_COPY_END macro.\n\t  \n\t  Also, fix another bug that I noticed at the same time:\n\t  snprintf.c was using va_copy(), but was not matching each\n\t  call to va_copy with a corresponding call to va_end(),\n\t  as required by the C99 standard.\n\n2008-07-17 21:59  Lei Zhang <opensource@google.com>\n\n\t* configure.ac:\n\t  \n\t  This adds an option for disabling avahi and friends. This is useful\n\t  for\n\t  building distcc targeted to machines without libavahi on a machine\n\t  with libavahi.\n\t  \n\t  Reviewed by Fergus Henderson.\n\n2008-07-02 00:34  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Fix a bug reported by Aaron P. Perez <Aaron.Perez@hospira.com>\n\t  where \"make install\" was failing on Cygwin.\n\t  \n\t  The problem was due to the install.log file generated by Python's\n\t  distutils being generated in DOS text mode format rather than\n\t  Unix text mode format. The fix is to use 'sed' to convert\n\t  DOS text format to Unix text format when generating install.log.\n\t  \n\t  Note: this fix is slightly different than the original patch\n\t  that I posted to the distcc mailing list. This patch is better\n\t  because it fixes the install.log file, rather than just the\n\t  grep command; this is important because the install.log file\n\t  is also used for \"make uninstall\".\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-06-30 17:10  Nils Klarlund <opensource@google.com>\n\n\t* include_server/include_analyzer.py,\n\t  include_server/include_analyzer_memoizing_node.py,\n\t  include_server/include_analyzer_memoizing_node_test.py,\n\t  include_server/include_analyzer_test.py,\n\t  include_server/parse_command.py, include_server/parse_command_test.py:\n\t  \n\t  Revert r393.\n\t  \n\t  This change is mostly reverted -- some variable renamings are not\n\t  changed back. A subsequent CL proposes a less arbitrary way to solve\n\t  the problem of -I<some_dir_in_default_place_where_compiler_looks>,\n\t  which involves sending no system default header files at all.\n\t  \n\t  Tests: make pump-check and make include-server-check\n\n2008-06-27 21:59  Fergus Henderson <opensource@google.com>\n\n\t* NEWS:\n\t  \n\t  Delete a duplicate entry from the NEWS file.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-06-24 22:06  Fergus Henderson <opensource@google.com>\n\n\t* packaging/googlecode_upload.py:\n\t  \n\t  Fix wrong description for uploaded distcc-<version>.tar{.gz,.bz2}\n\t  files.\n\t  \n\t  Reviewers: Craig Silverstein\n\n## distcc 3.0rc2.\n\n2008-06-20 15:17  Fergus Henderson <opensource@google.com>\n\n\t* ChangeLog, NEWS:\n\t  \n\t  Update NEWS file and ChangeLog for distcc 3.0rc2.\n\t  \n\t  Also mention new website, repository and maintainer in NEWS file.\n\n2008-06-20 02:54  Fergus Henderson <opensource@google.com>\n\n\t* configure.ac:\n\t  \n\t  Bump version number to 3.0rc2.\n\n2008-06-19 22:25  Fergus Henderson <opensource@google.com>\n\n\t* src/gcc-id.c, src/zeroconf-reg.c, src/zeroconf.c:\n\t  \n\t  Add \"Copyright (C) 2007 Lennart Poettering\" to zeroconf.c,\n\t  zeroconf-reg.c,\n\t  and gcc-id.c. Remove Google copyright notice from src/gcc-id.c, since\n\t  the Google changes to that file were very minor.\n\n2008-06-19 20:55  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in, packaging/deb.sh, packaging/rpm.sh:\n\t  \n\t  Change the deb.sh and rpm.sh scripts to remove old .deb or .rpm\n\t  files (for the same package and version) before generating the new\n\t  ones.\n\t  Similarly change \"make install-deb\" and \"make upload-dist\" so that\n\t  they are more selective in which files they install.\n\t  \n\t  This fixes a bug where \"make install-deb\" tried to install the wrong\n\t  .deb files, because it just did \"rpm -i *.deb\", and there can be old\n\t  .deb files lying around. It also fixes a similar problem in \"make\n\t  upload-dist\".\n\t  \n\t  Also, add a \"tags\" target to the Makefile.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-06-18 03:30  Fergus Henderson <opensource@google.com>\n\n\t* include_server/compiler_defaults.py:\n\t  \n\t  Fix bug where the include server would crash if the PATH environment\n\t  variable wasn't set.\n\n2008-06-18 02:23  Fergus Henderson <opensource@google.com>\n\n\t* packaging/RedHat/conf/clients.allow:\n\t  \n\t  Fix a missing word in a comment.\n\n2008-06-17 20:26  Fergus Henderson <opensource@google.com>\n\n\t* src/compile.c, src/lock.c, src/remote.c, src/where.c, src/where.h:\n\t  \n\t  Fix for a deadlock bug\n\t  <http://code.google.com/p/distcc/issues/detail?id=1>\n\t  that I observed (once!) when compiling the Linux kernel in pump mode:\n\t  \n\t  - Ensure that locks are acquired in the reverse order that they will\n\t  be released: acquire remote lock before local lock.\n\t  - Ensure that locks are released on all fallback paths.\n\t  - Rename dcc_pick_host_from_list() as\n\t  dcc_pick_host_from_list_and_lock_it(),\n\t  so that its locking effect is clearer.\n\t  - Document the lock ordering invariants.\n\t  - Document the unlocking behaviour of dcc_compile_remote().\n\t  \n\t  Reviewers: Craig Silverstein, Nils Klarlund\n\n2008-06-17 18:32  Fergus Henderson <opensource@google.com>\n\n\t* man/distcc.1:\n\t  \n\t  Document the limitations of pump mode w.r.t. debugging on\n\t  systems with non-ELF object files.\n\t  \n\t  Reviewers: Craig Silverstein, Nils Klarlund\n\n2008-06-11 16:10  Fergus Henderson <opensource@google.com>\n\n\t* src/arg.c:\n\t  \n\t  Apply patch from Maks Verver which fixes a bug where distcc\n\t  was not doing the right thing when invoked with \"-march=native\"\n\t  or \"mtune=native\".\n\t  \n\t  This fixes <https://bugs.edge.launchpad.net/distcc/+bug/188813>.\n\n2008-06-10 21:21  Fergus Henderson <opensource@google.com>\n\n\t* doc/web/faq.html:\n\t  \n\t  Document the use of ssh connection sharing.\n\n2008-06-10 05:51  Craig Silverstein <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  When I moved the envvar declarations to inside the 'eval', I had to\n\t  quote them to protect them from the extra level of evaluation, but I\n\t  had failed to do this. This change makes it so I do.\n\t  \n\t  Tested by running 'make pump-maintainer-check on linux (ubuntu).\n\t  \n\t  Detected and reviewed by fergus\n\n## distcc 3.0rc1.\n\n## The following changes were made internally to Google, and not integrated\n## into the main distcc distribution until 2008.  The dates here are\n## the dates they were applied to the internal-Google branch, and\n## interleave with the changes to the main branch, below.\n\n2008-06-10 02:20  Nils Klarlund <opensource@google.com>\n\n\t* doc/web/benchmark.html:\n\t  \n\t  Improve wording and accuracy of claims.\n\t  \n\t  Just various relatively minor suggestions. I didn't understand the\n\t  remarks\n\t  about the importance of having 'beefier' remote machines (their raw\n\t  CPU power\n\t  are not different although RAM and number of CPUs per machine differ),\n\t  so I took\n\t  them out. Instead, a made a separate point about what would have\n\t  happened if\n\t  we'd used multiple-CPU clients. I put in a reference to our gws:gws\n\t  benchmark,\n\t  which drove our work.\n\t  \n\t  Also,\n\t  \n\t  -- Add side point about possible configurations issues and link to man\n\t  pages.\n\t  \n\t  -- The number 'four' (for # of hello compilations) was obtained by\n\t  inspection of\n\t  the distcc log.\n\t  \n\t  \n\t  Review: csilvers and fergus (at Google).\n\n2008-06-10 00:52  Craig Silverstein <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Apparently, for freebsd's sh at least, \"eval FOO=a bar\" lets bar see\n\t  FOO=a, while \"FOO=a eval bar\" does not. So change from the latter\n\t  formulation to the former.\n\t  \n\t  Tested by running 'make pump-maintainer-check' on freebsd and on linux\n\t  (ubuntu).\n\t  \n\t  Reviewed by klarlund\n\n2008-06-10 00:09  Craig Silverstein <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  While testdistcc.py tries to use port 42000 to communicate, if it\n\t  fails it tries 42001, etc. When checking output, make sure we match\n\t  the port we actually ended up binding on.\n\t  \n\t  Tested by running 'make check' on a wide variety or architectures,\n\t  including a FreeBSD machine where make check failed before this\n\t  change.\n\t  \n\t  Reviewed by fergus\n\n2008-06-09 23:12  Craig Silverstein <opensource@google.com>\n\n\t* man/distcc.1, man/distccd.1, man/include_server.1, man/pump.1:\n\t  \n\t  Update date to june 9 instead of june 2.\n\n2008-06-09 23:08  Craig Silverstein <opensource@google.com>\n\n\t* configure.ac:\n\t  \n\t  I had talked Fergus into changing the version number from 3.0rc1 to\n\t  3.0-rc1. But now rpm is complaining that - is illegal in a version\n\t  string, so I'm changing it back to 3.0rc1. Sorry Fergus...\n\n2008-06-09 23:07  Craig Silverstein <opensource@google.com>\n\n\t* ChangeLog:\n\t  \n\t  I had talked Fergus into changing the version number from 3.0rc1 to\n\t  3.0-rc1. But now rpm is complaining that - is illegal in a version\n\t  string, so I'm changing it back to 3.0rc1. Sorry Fergus...\n\n2008-06-09 22:02  Fergus Henderson <opensource@google.com>\n\n\t* configure.ac:\n\t  \n\t  Change version number to 3.0rc1\n\t  (for \"release candidate 1\").\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-06-09 21:22  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in, doc/web/man/distcc_1.html,\n\t  doc/web/man/include_server_1.html, packaging/RedHat/rpm.spec:\n\t  \n\t  Update the html version of the man pages, based on the .1 updates.\n\t  Add include_server, which is a new man page. Update the Makefile to\n\t  know about the new man page, include it in the distribution, etc.\n\t  Also update the rpm spec to include it too.\n\n2008-06-09 20:31  Fergus Henderson <opensource@google.com>\n\n\t* TODO:\n\t  \n\t  Some updates to the TODO list to mark as done issues which are\n\t  addressed\n\t  in distcc 3.0.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-06-09 20:28  Fergus Henderson <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Rename \"Critique\" function as \"ReportDiscrepancies\",\n\t  to make it clearer what the function does.\n\t  \n\t  Reviewers: Craig Silverstein, Nils Klarlund\n\n2008-06-09 19:59  Nils Klarlund <opensource@google.com>\n\n\t* include_server/include_server.py, man/distcc.1, man/include_server.1,\n\t  pump.in:\n\t  \n\t  The missing include_server(1) man page and additional material about\n\t  the basic\n\t  assumptions of distcc-pump added to man/distcc.1 as well. The BUGS\n\t  section\n\t  of distcc.1 has been updated.\n\t  \n\t  A spelling error correction is made to man/distcc.1.\n\t  \n\t  The pump.in script is changed so that it does not introduce other\n\t  certain\n\t  defaults than those mentioned in the manual (which are those of the of\n\t  include\n\t  server).\n\t  \n\t  Finally, I changed the order of the options in the include server\n\t  source code to\n\t  be alphabetical in accordance with include_server(1) man page.\n\t  \n\t  Reviewers: fergus, csilvers.\n\n2008-06-09 19:53  Nils Klarlund <opensource@google.com>\n\n\t* find_c_extension.sh:\n\t  \n\t  Correct obscure bug (that quoting a variable eliminates the conversion\n\t  of\n\t  newlines to spaces).\n\t  \n\t  Reviewers: fergus and csilvers (at Google).\n\n2008-06-09 16:38  Lei Zhang <opensource@google.com>\n\n\t* src/lsdistcc.c, test/testdistcc.py:\n\t  \n\t  lsdistcc should print non-default port numbers.\n\t  \n\t  Reviewed by fergus\n\n2008-06-09 15:04  Fergus Henderson <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Fix typo in Nils' previous change.\n\n2008-06-09 14:14  Nils Klarlund <opensource@google.com>\n\n\t* pump.in, src/compile.c:\n\t  \n\t  Add necessary message to pump script with warning that compilations\n\t  were forced\n\t  from distcc-pump mode into plain mode.\n\t  \n\t  I had resisted doing this at first, because of the\n\t  max_discrepancies_before_demotion constant in src/compile.c, which\n\t  actually\n\t  controls whether there were sufficiently many discrepancies to force a\n\t  demotion.\n\t  The problem is that the constant is not known to the pump script. It\n\t  should be\n\t  made configurable, through gosh, another env var. But that'll be for\n\t  later.\n\t  \n\t  This constant is currently 1 and it shouldn't be changed.\n\t  \n\t  Reviewers: fergus and csilvers.\n\n2008-06-07 01:21  Craig Silverstein <opensource@google.com>\n\n\t* doc/web/benchmark.html, doc/web/compared.html, doc/web/compilers.html,\n\t  doc/web/faq.html, doc/web/index.html, doc/web/results.html,\n\t  doc/web/scenarios.html, doc/web/security.html:\n\t  \n\t  Add a link to the man pages from the side-bar.\n\t  \n\t  Also, fixed up the side-bar from a few non-top-level pages to be\n\t  consistent with the top-level-pages bars: compilers.html and\n\t  compared.html.\n\n2008-06-07 01:16  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  When uploading the package, we try to update the website as well.\n\t  Since the website contents are checked into svn, that's just a matter\n\t  of checking in any auto-generated html-ized pages (eg the man pages).\n\n2008-06-07 01:13  Craig Silverstein <opensource@google.com>\n\n\t* doc/web/benchmark.html, doc/web/man/distcc_1.html,\n\t  doc/web/man/distccd_1.html, doc/web/man/distccmon_text_1.html,\n\t  doc/web/man/pump_1.html:\n\t  \n\t  Oops, the attribute is called svn:mime-type, not svn:content-type.\n\n2008-06-07 01:10  Craig Silverstein <opensource@google.com>\n\n\t* doc/web/man/distcc_1.html:\n\t  \n\t  Update from the empty file.\n\n2008-06-07 01:08  Craig Silverstein <opensource@google.com>\n\n\t* doc/web/man, doc/web/man/distcc_1.html, doc/web/man/distccd_1.html,\n\t  doc/web/man/distccmon_text_1.html, doc/web/man/pump_1.html:\n\t  \n\t  Html version of the man pages, auto-generated.\n\n2008-06-04 07:06  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  The avahi files (zeroconf.c, etc), were being left out of the\n\t  distribution tarball. Add them in.\n\t  \n\t  Tested by running 'make distcheck' on a machine with avahi libs\n\t  installed.\n\t  \n\t  Reviewed by fergus\n\n2008-06-04 06:04  Craig Silverstein <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Get rid of setting is_in_installation; that variable isn't used\n\t  anywhere anymore, so no reason to set it.\n\t  \n\t  Tested by running 'make pump-maintainer-check'.\n\t  \n\t  Reviewed by klarlund\n\n2008-06-04 05:17  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  It turns out setup.py has a bug(?) in its --record output: in theory,\n\t  the paths of the --record fields should start with --prefix, but\n\t  sometimes the paths remove the leading / from --prefix:\n\t  \n\t  % env CPPFLAGS='-Isrc -Ilzo -Ipopt' SRCDIR=`pwd`\n\t  include_server/setup.py install --prefix=/tmp/distcc-bar\n\t  --record=/dev/stdout --root=/var/\n\t  tmp/distcc-bar/lib/python2.4/site-packages/include_server/parse_file_test.pyc\n\t  [...]\n\t  \n\t  % env CPPFLAGS='-Isrc -Ilzo -Ipopt' SRCDIR=`pwd`\n\t  include_server/setup.py install --prefix=/tmp/distcc-bar\n\t  --record=/dev/stdout --root=/var\n\t  /tmp/distcc-bar/lib/python2.4/site-packages/include_server/parse_file_test.pyc\n\t  [...]\n\t  \n\t  It's hard to predict how, when and why it does this (--root=/ and\n\t  --root=\"\" are particularly confusing cases), but luckily we know we\n\t  always want the leading slash: configure dies if --prefix isn't an\n\t  absolute path. So with this change, we just let setup.py write\n\t  whatever it wants to, and then add a leading slash before each line of\n\t  the --record output if it's missing.\n\t  \n\t  Tested by running\n\t  ./configure --prefix=/tmp/distcc\n\t  rm -rf /tmp/distcc; make install\n\t  rm -rf /var/tmp/tmp/distcc; make install DESTDIR=/var/tmp\n\t  rm -rf /var/tmp/tmp/distcc; make install DESTDIR=/var/tmp/\n\t  and verified that files ended up where expected, and the pump script\n\t  looked like expected (with pump's sibling files living in\n\t  /tmp/distcc/...).\n\t  \n\t  Reviewed by fergus\n\n2008-06-03 23:06  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in, configure.ac:\n\t  \n\t  Fix up the list of zeroconf files needed to actually compile distcc\n\t  and distccd.\n\t  \n\t  Tested by installing avahi and running 'make' plus 'make check'.\n\t  \n\t  Reviewed by klarlund\n\n2008-06-03 21:00  Craig Silverstein <opensource@google.com>\n\n\t* src/zeroconf.h:\n\t  \n\t  Fix up the top-of-file comments to look the same as for all the other\n\t  files.\n\n2008-06-03 20:58  Craig Silverstein <opensource@google.com>\n\n\t* src/zeroconf-reg.c, src/zeroconf.c:\n\t  \n\t  Fix some extra comment specifiers that shouldn't have been there.\n\n2008-06-03 12:30  Nils Klarlund <opensource@google.com>\n\n\t* man/distcc.1, man/distccd.1, man/pump.1:\n\t  \n\t  Various edits:\n\t  \n\t  -- refer to pump(1) credits (and remove distcc(1) credits from pump(1)\n\t  credentials)\n\t  -- detail fundamental include server assumption\n\t  -- clean up incl server discussion\n\t  -- refer to include_server(1) for hairy stuff (this man page is to\n\t  follow shortly in separate CL)\n\t  -- discuss shell scripts instead of symlinks\n\t  -- change date to June 2 2008\n\t  -- other minor edits\n\n2008-06-03 05:43  Craig Silverstein <opensource@google.com>\n\n\t* NEWS:\n\t  \n\t  Update the release date.\n\n2008-06-03 05:32  Craig Silverstein <opensource@google.com>\n\n\t* bench/ProjectDefs.py:\n\t  \n\t  Add some new benchmark routines (including C++ projects like yate and\n\t  ACE), and normalize syntax for existing ones. I've tested that we can\n\t  at least build all of these projects locally, as long as all neccesary\n\t  dependent packages are installed.\n\t  \n\t  Reviewed by fergus\n\n2008-06-03 03:45  Fergus Henderson <opensource@google.com>\n\n\t* bench/Build.py, pump.in:\n\t  \n\t  Fix a bug in the pump script where it wasn't waiting for the include\n\t  server to terminate before exiting.\n\t  \n\t  Reviewers: Nils Klarlund, Craig Silverstein\n\n2008-06-03 00:32  Craig Silverstein <opensource@google.com>\n\n\t* doc/web/faq.html, doc/web/index.html, doc/web/results.html,\n\t  doc/web/scenarios.html, doc/web/security.html:\n\t  \n\t  Revamp the toc sidebar to organize the categories a bit better. Also\n\t  added a benchmark line.\n\n2008-06-03 00:32  Craig Silverstein <opensource@google.com>\n\n\t* doc/web/benchmark.html:\n\t  \n\t  Add benchmark results, and a discussion of same.\n\t  \n\t  Reviewed by klarlund\n\n2008-06-02 22:38  Fergus Henderson <opensource@google.com>\n\n\t* src/clirpc.c:\n\t  \n\t  Fix spelling error and punctuation in warning message.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-06-02 19:35  Nils Klarlund <opensource@google.com>\n\n\t* include_server/basics.py, include_server/cache_basics.py,\n\t  include_server/include_server.py, pump.in:\n\t  \n\t  Fix option real_path_warning_re not working.\n\t  \n\t  I renamed the option to path_observation_re. Now by prefixing\n\t  \n\t  INCLUDE_SERVER_ARGS='-d1 --path_observation_re=\"/usr/.*\"'\n\t  \n\t  to say make include-server-maintainer-check, one gets a message each\n\t  time the\n\t  include server finds a path whose realpath name matches the regular\n\t  expression.\n\t  That results in messages like:\n\t  \n\t  WARNING include server: For translation unit 'src/testtmp.c', lookup\n\t  of file\n\t  'bits/stdio_lim.h' resolved to '/usr/include/bits/stdio_lim.h' whose\n\t  realpath is\n\t  '/usr/include/bits/stdio_lim.h'.\n\t  \n\t  To make the interpretation of quoted arguments within\n\t  INCLUDE_SERVER_ARGS\n\t  correct, I added 'eval' to the command that cranks up the include\n\t  server. I\n\t  remembered to put extra quoted quotes inside the parameters that\n\t  should be\n\t  considered a token after the double interpretation that eval implies.\n\n2008-05-31 00:38  Nils Klarlund <opensource@google.com>\n\n\t* test/comfychair.py, test/testdistcc.py:\n\t  \n\t  Tidy-up testing framework to overcome recently introduced bug.\n\t  \n\t  Testing on cygwine revealed that as tests were being issued the\n\t  temporary\n\t  testing directory would suffer from longer and longer prefixes until a\n\t  'filename\n\t  too long' error would stop the party. This is result of an earlier\n\t  attempt to\n\t  avoid too much printing to stdout during tests, spefically during\n\t  recursive test\n\t  invocations.\n\t  \n\t  The problem is that the teardown mechanism of the comfychair\n\t  enviroment is not\n\t  expressed -- by any name at all (it could be 'teardown' for example).\n\t  So, I\n\t  added a name --- but because there's no expectation that the TestCase\n\t  class\n\t  defined there has its teardown method called from derived classes ---\n\t  I chose\n\t  the name CleanUps, which corresponds to the private variable.\n\t  \n\t  I also made an abstraction for running a test. This new\n\t  Comfychair.runtest\n\t  function can the conveniently by called to carry out a subtest.\n\t  \n\t  With this CL, 'make pump-maintainer-check' now works on cygwin.\n\n2008-05-30 22:57  Craig Silverstein <opensource@google.com>\n\n\t* AUTHORS, INSTALL, README, README.pump, configure.ac, doc/example/init,\n\t  doc/web/compared.html, doc/web/compilers.html, doc/web/faq.html,\n\t  doc/web/favicon.ico, doc/web/index.html, doc/web/results.html,\n\t  doc/web/scenarios.html, doc/web/security.html, man/distcc.1,\n\t  man/distccd.1, man/distccmon-text.1, man/pump.1:\n\t  \n\t  Documentation fixes:\n\t  \n\t  1) Replace http://distcc.samba.org with the new google code location\n\t  2) Add favicon.ico from the distcc.samba.org site\n\t  3) Use distcc@lists.samba.org as the only distcc mailing list (there\n\t  were at least three mailing lists scattered around the docs, some of\n\t  which don't even exist anymore!)\n\t  4) Update man pages and other docs to not use \"distcc-pump\" anywhere;\n\t  it's now \"pump mode\" or \"distcc's pump mode\", or \"distcc-pump\n\t  mode\".\n\t  \n\t  I also add, to the README, some discussion of scaling to hundreds of\n\t  machines.\n\t  \n\t  Reviewed by fergus and klarlund\n\n2008-05-30 07:46  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in, packaging/RedHat/rpm.spec:\n\t  \n\t  Fix a bug where the \"pump\" man page was not included in the RPM\n\t  and Debian packages.\n\t  \n\t  Also, fix a bug where the Makefile rules for building HTML files were\n\t  not working when srcdir != builddir.\n\t  \n\t  Tested by \"make install-deb; man pump\".\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-29 21:44  Nils Klarlund <opensource@google.com>\n\n\t* bench/Build.py:\n\t  \n\t  Add include server option '--unsafe_absolute_includes' to all\n\t  benchmarks in pump\n\t  mode.\n\t  \n\t  This is harmless I think, and it's easy to forget this option. It is\n\t  of\n\t  importance to at least Samba-2.2.7.\n\n2008-05-29 18:51  Nils Klarlund <opensource@google.com>\n\n\t* bench/benchmark.py, bench/compiler.py:\n\t  \n\t  Tigthen how compilers are located. This overcomes issues on Cygwin. I\n\t  also\n\t  changed default C++ compiler to 'c++' instead of 'cxx'. 'c++' is the\n\t  more common\n\t  name I believe. Witht this change, both compilers must exist for\n\t  benchmark.py\n\t  to run.\n\t  \n\t  REVIEW: Craig Silverstein\n\n2008-05-29 18:51  Nils Klarlund <opensource@google.com>\n\n\t* bench/Build.py, bench/Summary.py, bench/statistics.py:\n\t  \n\t  Enhance performance reporting for benchmarking.\n\t  \n\t  This CL adds reporting of:\n\t  \n\t  - number of processors\n\t  - total cpu time\n\t  - cpu utilization\n\t  - include server cpu time\n\t  \n\t  I corrected issues with overly loose specification of compiler\n\t  locations. (I\n\t  developed this CL under Cygwin and encountered new problems.) This\n\t  resulted in\n\t  evil recursive invocations of distcc.\n\t  \n\t  I also:\n\t  \n\t  -- removed an unnecessary parameter from Build(..)\n\t  \n\t  -- pruned the number of decimals reported from 4 to 1.\n\t  \n\t  -- removed the dependency of 'Numeric', which is a non-standard\n\t  package and\n\t  rewrote the math do to std deviation\n\t  \n\t  -- use shell built-in 'time' instead of Python time functionality\n\t  \n\t  -- corrected deficient error reporting: builds would fail with\n\t  non-zero status\n\t  and not be reported as failing.\n\t  \n\t  REVIEW: Craig Silverstein\n\t  \n\t  TESTS:\n\t  DISTCC_HOSTS=\"--randomize `/home/klarlund/svn-distcc/distcc/lsdistcc\n\t  -P1 -k100 -d`\" PATH=`pwd`:$PATH bench/benchmark.py\n\t  --cc='/usr/crosstool/v10/gcc-4.2.1-glibc-2.3.2/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc'\n\t  -n 1 -c 'pump,h40,j120' -c 'dist,h40,j32' linux-2.6.25\n\t  \n\t  Part of the printout for hello-2.1.1:\n\t  \n\t  Local number of CPUs: 4\n\t  Linux klarlund-warp.nyc.corp.google.com\n\t  2.6.18.5-gg34workstation-mixed64-32 #1 SMP Thu May 8 01:31:23 UTC 2008\n\t  x86_64 GNU/Linux\n\t  project compiler time s.d. CPU time CPU util incl serv\n\t  hello-2.1.1 pump_h39_j120 0.9s 0.0s 0.5s 13.5% 0.2s\n\t  hello-2.1.1 dist_h39_j32 0.4s 0.1s 0.3s 18.1%\n\t  \n\t  \n\t  (For this small program, pump is a disadvantage.)\n\n2008-05-29 05:38  Craig Silverstein <opensource@google.com>\n\n\t* bench/Build.py, bench/Project.py, bench/actions.py,\n\t  bench/benchmark.py, bench/compiler.py:\n\t  \n\t  Some changes to the benchmark framework to not redo work\n\t  unnecessarily. Most prominently, no longer re-run 'tar xf &&\n\t  configure' every benchmark run. Instead, if configure was\n\t  successfully executed last benchmark run, just do 'make clean'. This\n\t  is equivalent to what we do now between build runs, when the\n\t  repeat-count is > 1.\n\t  \n\t  This feature is not turned on by default, but must be enabled with the\n\t  new --force=0 flag. --force=1 keeps the same behavior as before: we\n\t  always re-run configure in each build-directory. --force=2 adds more\n\t  repeat-work than before; in --force=2 mode, we always re-download the\n\t  package from the web, even if we had successfully downloaded it\n\t  before.\n\t  \n\t  Note that the 'tar' command currently warms the file-cache, which\n\t  makes build times more consistent, so there is so cost to setting\n\t  --force=0, in terms of the data collected.\n\t  \n\t  Reviewed by klarlund\n\n2008-05-29 02:04  Nils Klarlund <opensource@google.com>\n\n\t* bench/Build.py, bench/Project.py, bench/ProjectDefs.py:\n\t  \n\t  Add include server args to benchmarking framework.\n\t  \n\t  This makes the linux kernel build with pump-mode when the benchmark\n\t  script is\n\t  used.\n\t  \n\t  Also, include the '-t' option to the include server; that prints out\n\t  the elapsed\n\t  and CPU times at the end of the build.\n\t  \n\t  REVIEW: Craig Silverstein\n\t  TESTS: (on quad-cpu workstation)\n\t  DISTCC_HOSTS=\"--randomize `/home/klarlund/svn-distcc/distcc/lsdistcc\n\t  -P1 -k100 -d`\" PATH=`pwd`:$PATH bench/benchmark.py\n\t  --cc='/usr/crosstool/v10/gcc-4.2.1-glibc-2.3.2/x86_64-unknown-linux-gnu/bin/x86_64-unknown-linux-gnu-gcc'\n\t  --cxx='void' -n 5 -c 'pump,h40,j120' -c 'dist,h40,j32' linux-2.6.25\n\t  \n\t  project compiler time s.d.\n\t  linux-2.6.25 pump_h39_j120 69.6525s 3.0969s\n\t  linux-2.6.25 dist_h39_j32 103.8416s 10.8041s\n\n2008-05-29 01:57  Nils Klarlund <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Add critique of pump-mode when include server shuts down.\n\t  \n\t  Print a message like:\n\t  \n\t  __________Warning: 1 pump-mode compilation(s) failed on server, but\n\t  succeeded locally.\n\t  \n\t  when compile discrepancies have occurred. Currently, a user may think\n\t  that all\n\t  is well because we do not terminate a build when discrepancies occur\n\t  and the\n\t  warning messages occurring in the middle of a build may easily be\n\t  overlooked.\n\t  \n\t  REVIEW: Craig Silverstein\n\t  TESTS: make linux-kernel without stat reset triggers to observe\n\t  message\n\n2008-05-29 01:46  Craig Silverstein <opensource@google.com>\n\n\t* src/dotd.c, src/dotd.h, src/emaillog.c, src/emaillog.h:\n\t  \n\t  Fix some of the written-on dates for some google patches. Pointed out\n\t  by fergus.\n\n2008-05-28 13:12  Nils Klarlund <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Fix unproctected invocation of distcc and numeric designation of one\n\t  with a\n\t  plural noun.\n\t  \n\t  I discovered this bug by deleting /usr/bin/distcc. I did that after I\n\t  found out\n\t  that the Linux kernel compilation is suffering from a similar issue\n\t  (amongst\n\t  others), because the PATH is apparently rewritten.\n\t  \n\n2008-05-28 02:32  Nils Klarlund <opensource@google.com>\n\n\t* include_server/cache_basics.py, include_server/parse_command.py:\n\t  \n\t  Remove spurious warning messages about absolute filepaths.\n\t  \n\t  During compilation of the Linux kernel messages like:\n\t  \n\t  absolute filepath blabla.h was IGNORED (correctness of build may be\n\t  affected)\n\t  \n\t  are issued. They are wrong. The problem is that -include or -imacro or\n\t  even\n\t  source file names with absolute filepaths trigger a complaint from the\n\t  caching\n\t  mechanism usually used for relative file names.\n\t  \n\t  We correct this problem.\n\t  \n\t  We also substitute fp_map for includepath_map, which is the now\n\t  preferred term.\n\t  \n\t  REVIEWER: Craig Silverstein\n\t  \n\t  TESTS:\n\t  \n\t  make pump-maintainer-check\n\t  make include-server-maintainer-check\n\n2008-05-28 02:19  Nils Klarlund <opensource@google.com>\n\n\t* src/compile.c:\n\t  \n\t  Fix race condition that may prevent the warning message that pump-mode\n\t  is no\n\t  longer used from being displayed.\n\t  \n\t  This is the current crop of error messages. A couple of them *really*\n\t  should be\n\t  suppressed, but not the last one, which the CL is about.\n\t  \n\t  distcc[4333] ERROR: compile arch/x86/kernel/syscall_64.c on\n\t  distcc4.nyc.corp.google.com,lzo,cpp failed\n\t  distcc[4333] (dcc_build_somewhere) Warning: remote compilation of\n\t  'arch/x86/kernel/syscall_64.c' failed, retrying locally\n\t  distcc[4333] Warning: failed to distribute\n\t  arch/x86/kernel/syscall_64.c to distcc4.nyc.corp.google.com,lzo,cpp,\n\t  running locally instead\n\t  distcc[4333] (dcc_please_send_email_after_investigation) Warning:\n\t  remote compilation of 'arch/x86/kernel/syscall_64.c' failed, retried\n\t  locally and got a different result.\n\t  distcc[4333] (dcc_please_send_email_after_investigation) Warning: file\n\t  'include/asm/asm-offsets.h', a dependency of\n\t  arch/x86/kernel/syscall_64.c, changed during the build\n\t  distcc[4333] (dcc_note_discrepancy) Warning: now using plain distcc,\n\t  possibly due to inconsistent file system changes during build\n\t  \n\t  The last message may not occur: the code contains a race condition,\n\t  because more\n\t  processes may increment the unary file, after it has reached the size\n\t  of\n\t  max_discrepancies_before_demotion, preventing the equality from ever\n\t  becoming true.\n\n2008-05-27 20:33  Nils Klarlund <opensource@google.com>\n\n\t* include_server/include_analyzer.py,\n\t  include_server/include_analyzer_memoizing_node.py,\n\t  include_server/include_analyzer_memoizing_node_test.py,\n\t  include_server/include_analyzer_test.py,\n\t  include_server/parse_command.py, include_server/parse_command_test.py:\n\t  \n\t  Make the Linux 2.6 kernel build with distcc-pump mode.\n\t  \n\t  Add a new piece of command line parse information: send_systemdirs.\n\t  This\n\t  boolean is normally false. It is true if there is a -isystem option\n\t  with a\n\t  default system directory (one known to the compiler).\n\t  \n\t  With send_systemdirs true, the compiler headers of system headers are\n\t  sent to\n\t  the servers and mounted under the server root. The isystem option is\n\t  as usual\n\t  rewritten to be relative to the root. Without this flag setting,\n\t  distcc quickly\n\t  decides that pump mode is not viable because remote compilations fail.\n\t  \n\t  Also, fixed the comment:\n\t  # TODO(klarlund): Make mechanism for handling -U, -undef options,\n\t  along with\n\t  # default symbols.\n\t  \n\t  (-D options are handled.)\n\t  \n\t  ---------------\n\t  \n\t  TESTS: make pump-maintainer-check\n\t  make include-server-maintainer-check\n\t  make 'linux kernel' in a directory made by the benchmark script (as\n\t  shown below)\n\t  \n\t  DISTCC_EMAILLOG_WHOM_TO_BLAME=Nils Klarlund <opensource@google.com>\n\t  DISTCC_ENABLE_DISCREPANCY_EMAIL=1 INCLUDE_SERVER_ARGS='-d1 -t --email\n\t  --unsafe_absolute_includes --send_systemdirs\n\t  --stat_reset_triggers=include/linux/*' DISTCC_HOSTS=\"--randomize\n\t  `/home/klarlund/svn-distcc/distcc/lsdistcc -P3 -k100 -d`\"\n\t  PATH=/home/klarlund/svn-distcc/distcc:$PATH ./masquerade pump make\n\t  -j120\n\t  \n\t  REVIVIEWER: Craig Silverstein <opensource@google.com>\n\t  \n\t  TRIVIA: the about 1000 files in the kernel build involve on average\n\t  400\n\t  headers. The build time on a quad-cpu machine drops from about 1m40 s\n\t  to 1m20s.\n\t  With pump-mode, the machine is underutilized judging from the total\n\t  sys + user\n\t  time, which is around only 2m20s.\n\t  \n\t  NOTE: this is a successor to 'g6n8', which simply introduced a command\n\t  line\n\t  option to force sending of system files. A bug in gvn did not allow me\n\t  to\n\t  resuse that change list.\n\n2008-05-23 22:24  Craig Silverstein <opensource@google.com>\n\n\t* bench/Build.py, bench/Project.py, bench/Summary.py, bench/actions.py,\n\t  bench/benchmark.py, bench/buildutil.py, bench/compiler.py,\n\t  bench/statistics.py, include_server/basics.py,\n\t  include_server/basics_test.py, include_server/c_extensions_test.py,\n\t  include_server/cache_basics.py, include_server/compiler_defaults.py,\n\t  include_server/compress_files.py, include_server/include_analyzer.py,\n\t  include_server/include_analyzer_memoizing_node.py,\n\t  include_server/include_analyzer_memoizing_node_test.py,\n\t  include_server/include_analyzer_test.py,\n\t  include_server/include_server.py,\n\t  include_server/include_server_test.py, include_server/macro_eval.py,\n\t  include_server/macro_eval_test.py, include_server/mirror_path.py,\n\t  include_server/mirror_path_test.py, include_server/parse_command.py,\n\t  include_server/parse_command_test.py, include_server/parse_file.py,\n\t  include_server/parse_file_test.py, include_server/run.py,\n\t  include_server/setup.py, include_server/statistics.py, src/access.c,\n\t  src/access.h, src/arg.c, src/argutil.c, src/backoff.c, src/bulk.c,\n\t  src/bulk.h, src/cleanup.c, src/climasq.c, src/clinet.c, src/clinet.h,\n\t  src/clirpc.c, src/compile.c, src/compile.h, src/compress.c, src/cpp.c,\n\t  src/daemon.c, src/daemon.h, src/distcc.c, src/distcc.h, src/dopt.c,\n\t  src/dopt.h, src/dotd.c, src/dotd.h, src/dparent.c, src/dsignal.c,\n\t  src/emaillog.c, src/emaillog.h, src/exec.c, src/exec.h,\n\t  src/exitcode.h, src/filename.c, src/fix_debug_info.c,\n\t  src/fix_debug_info.h, src/gcc-id.c, src/h_argvtostr.c,\n\t  src/h_compile.c, src/h_dotd.c, src/h_exten.c, src/h_hosts.c,\n\t  src/h_issource.c, src/h_parsemask.c, src/h_sa2str.c, src/h_scanargs.c,\n\t  src/h_strip.c, src/help.c, src/history.c, src/hostfile.c, src/hosts.c,\n\t  src/hosts.h, src/implicit.c, src/implicit.h, src/include_server_if.c,\n\t  src/include_server_if.h, src/io.c, src/loadfile.c, src/lock.c,\n\t  src/lock.h, src/lsdistcc.c, src/mon-gnome.c, src/mon-notify.c,\n\t  src/mon-text.c, src/mon.c, src/mon.h, src/ncpus.c, src/netutil.c,\n\t  src/netutil.h, src/prefork.c, src/pump.c, src/remote.c,\n\t  src/renderer.c, src/renderer.h, src/rpc.c, src/rpc.h, src/rslave.c,\n\t  src/rslave.h, src/safeguard.c, src/sendfile.c, src/serve.c,\n\t  src/setuid.c, src/snprintf.h, src/srvnet.c, src/srvnet.h,\n\t  src/srvrpc.c, src/ssh.c, src/state.c, src/state.h, src/stats.c,\n\t  src/stats.h, src/stringmap.c, src/stringmap.h, src/strip.c,\n\t  src/tempfile.c, src/timefile.c, src/timefile.h, src/timeval.c,\n\t  src/timeval.h, src/trace.c, src/trace.h, src/traceenv.c, src/types.h,\n\t  src/util.c, src/util.h, src/where.c, src/where.h, src/zeroconf-reg.c,\n\t  src/zeroconf.c, src/zeroconf.h, test/comfychair.py,\n\t  test/testdistcc.py:\n\t  \n\t  Normalize the copyright text, to the latest version of the GPLv2 text\n\t  (typically the only change is in the FSF street address). Add Google\n\t  copyright line in some places it was missing. Add GPLv2 notice to\n\t  avahi patches.\n\t  \n\t  OKed by fergus\n\n2008-05-23 20:43  Craig Silverstein <opensource@google.com>\n\n\t* packaging/RedHat/rpm.spec:\n\t  \n\t  Update install-message wording.\n\t  \n\t  Reviewed by fergus\n\n2008-05-23 07:33  Craig Silverstein <opensource@google.com>\n\n\t* configure.ac:\n\t  \n\t  Update copyright and GPL notice.\n\n2008-05-23 07:29  Craig Silverstein <opensource@google.com>\n\n\t* pump.in, test/onetest.py:\n\t  \n\t  Fix author lines. Also, add gpl text.\n\t  \n\t  OKed by fergus and klarlund\n\n2008-05-23 06:30  Fergus Henderson <opensource@google.com>\n\n\t* packaging/RedHat/conf/clients.allow, packaging/RedHat/rpm.spec:\n\t  \n\t  Do not include 127.0.0.1 in clients.allow by default,\n\t  because it is a security risk: it may allow other\n\t  users on the machine to execute arbitrary code as\n\t  the distcc user.\n\t  \n\t  Instead, leave clients.allow empty by default,\n\t  and require the system admistrator to edit\n\t  clients.allow manually, if they want to use distcc\n\t  in TCP mode.\n\t  \n\t  We still install distccd as a service, but distccd\n\t  will exit immediately unless you've already added\n\t  some hosts to clients.allow.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-23 03:19  Fergus Henderson <opensource@google.com>\n\n\t* include_server/include_analyzer_memoizing_node.py:\n\t  \n\t  Fix a typo in a comment.\n\n2008-05-23 03:18  Fergus Henderson <opensource@google.com>\n\n\t* src/dopt.c:\n\t  \n\t  Fix a bug: --wizard is supposed to imply --log-level debug, but this\n\t  wasn't working, because the code that handles --wizard wasn't setting\n\t  opt_log_level_num.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-23 03:12  Nils Klarlund <opensource@google.com>\n\n\t* include_server/include_analyzer.py, include_server/mirror_path.py:\n\t  \n\t  Fix unsoundess of directory replication.\n\t  \n\t  Testing of distcc-pump mode on the Linux kernel showed that the\n\t  computed include\n\t  closure was sometimes wrong: header files were missing.\n\t  \n\t  Further testing showed that sometimes apparently not even the\n\t  compilation unit\n\t  made it across to the server or rather, the c-file in its real\n\t  location would\n\t  come across, but the path designating it would not.\n\t  \n\t  Take as an example: compilation unit is designated by the path\n\t  ../bar/baz.c and\n\t  the current directory is /foo but no files in /foo are in actuality\n\t  referenced\n\t  during include processing. Then the compilation server will get\n\t  /PREFIX/bar/baz.h -- the image of the real file -- but /PREFIX/foo,\n\t  the image of\n\t  the current directory, will not even be created!\n\t  \n\t  So, this CL corrects an oversight in the way that the include\n\t  processor\n\t  explores files: although it does take into account the chasing of\n\t  symbolic links,\n\t  no provisions are in place to properly model '..' for climbing up\n\t  directories.\n\t  Specifically, to climb up a directory, it must exist! Usually, the\n\t  directory in\n\t  fact would exist on the server, because it would be replicated thanks\n\t  to the\n\t  header files it contains. But there is no guarentee.\n\t  \n\t  We solve this problem by forcing the creation of dummy .c files the\n\t  first time a\n\t  path is explored. Because paths are being investigated backwards (from\n\t  the end),\n\t  forcing results in extra files only at the \"deep\" levels. Since files\n\t  are\n\t  usually clustered together in directories, the addition of a dummy\n\t  file per deep\n\t  directory should be inconsequential for performance.\n\t  \n\t  TBD: integration level tests that this really work. I will either\n\t  include that\n\t  later or in a separate CL.\n\t  \n\t  Tested:\n\t  \n\t  make pump-maintainer-check\n\t  \n\t  build the Linux 2.6 kernel in true pump-mode (with extra patch, to be\n\t  described separately that sends compiler system files to the server)\n\t  [all\n\t  files but a few towards the end suffer from absolute includes are\n\t  preprocessed and compiled on the compile servers!]\n\t  \n\t  The command I used is:\n\t  \n\t  DISTCC_EMAILLOG_WHOM_TO_BLAME=Nils Klarlund <opensource@google.com>\n\t  DISTCC_ENABLE_DISCREPANCY_EMAIL=1 INCLUDE_SERVER_ARGS='-d1 -t --email\n\t  --stat_reset_triggers=include/linux/compile.h'\n\t  DISTCC_HOSTS=\"--randomize `/home/klarlund/svn-distcc/distcc/lsdistcc\n\t  -P3 -k100 -d`\" PATH=/home/klarlund/svn-distcc/distcc:$PATH\n\t  ./masquerade pump make -j120\n\t  \n\t  I had to delete /usr/bin/distcc for this work, because of the PATH\n\t  acrobatics\n\t  that the kernel makefiles apparently exercise. Otherwise,\n\t  /usr/bin/distcc\n\t  would sometimes get called.\n\t  \n\t  Reviewed:\n\t  \n\t  Fergus Henderson <opensource@google.com>, Craig Silverstein <opensource@google.com>\n\n2008-05-23 03:03  Fergus Henderson <opensource@google.com>\n\n\t* INSTALL:\n\t  \n\t  Some trivial style changes.\n\n2008-05-23 02:35  Nils Klarlund <opensource@google.com>\n\n\t* bench/Build.py, bench/benchmark.py, bench/compiler.py:\n\t  \n\t  Set-up masquerading for benchmarks.\n\t  \n\t  Follow the advice of the distcc man page for executing the benchmarks\n\t  to not\n\t  rely on CC and CXX variables by also routing naked calls of 'cc',\n\t  'gcc', etc to\n\t  a 'farm' of tiny shell scripts.\n\t  \n\t  Also, provide a little wrapper script that does this for people who\n\t  have to\n\t  debug a benchmark build.\n\t  \n\t  This change is convenient for running the benchmark on the linux\n\t  kernel,\n\t  because building the kernel uses naked 'gcc' calls.\n\t  \n\t  Testing:\n\t  \n\t  Building the linux kernel.\n\n2008-05-23 01:41  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Fix a bug which broke the Debian and RPM distributions: the generated\n\t  pump\n\t  script was referring to DESTDIR.\n\t  \n\t  Files should be installed into DESTDIR, but they should never refer to\n\t  DESTDIR,\n\t  because it is only a temporary location used for constructing the RPM\n\t  file;\n\t  when the package is actually installed, the files will get put in e.g.\n\t  /usr\n\t  rather than DESTDIR/usr.\n\t  \n\t  Tested with \"make install-deb && make daemon-installcheck\".\n\t  \n\t  Reviewers: Nils Klarlund\n\n2008-05-23 01:11  Manos Renieris <opensource@google.com>\n\n\t* NEWS, README.pump, doc/protocol-3-impl.txt, doc/protocol-3.txt,\n\t  man/distcc.1, man/pump.1:\n\t  \n\t  Minor documentation changes.\n\n2008-05-22 19:06  Fergus Henderson <opensource@google.com>\n\n\t* src/dotd.h, src/include_server_if.h:\n\t  \n\t  Remove \"svn:executable\" property (the \"+x\" permission bit) from header\n\t  files.\n\t  \n\t  Reviewers: Manos Renieris\n\n2008-05-22 05:36  Fergus Henderson <opensource@google.com>\n\n\t* survey.txt:\n\t  \n\t  Direct survey response to distcc-survey@google.com rather than to\n\t  Martin Pool.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-22 05:35  Fergus Henderson <opensource@google.com>\n\n\t* INSTALL:\n\t  \n\t  A major overhaul of the INSTALL file. Describe pump mode better, and\n\t  explain the effects of installing via RPM or Debian package.\n\t  Also a bunch of other minor edits.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-22 04:51  Fergus Henderson <opensource@google.com>\n\n\t* configure.ac:\n\t  \n\t  Bump version number to 3.0-prerelease3.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-22 04:49  Fergus Henderson <opensource@google.com>\n\n\t* include_server/include_analyzer_test.py:\n\t  \n\t  Fix a test case that was failing on MacOS X.\n\t  The test was implicitly assuming that /tmp == realpath(/tmp).\n\t  But in MacOS X, /tmp is a symbolic link to /private/tmp.\n\t  \n\t  Reviewers: Craig Silverstein, Nils Klarlund\n\n2008-05-22 04:40  Fergus Henderson <opensource@google.com>\n\n\t* doc/web/index.html:\n\t  \n\t  Update the \"60 second instructions\" to use pump mode.\n\t  \n\t  I considered mentioning both regular mode and pump mode in the 60\n\t  second instructions, but 60 seconds doesn't really give you much\n\t  time to describe the difference between the two, so I thought it\n\t  was simpler to just go with pump mode.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-21 22:42  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Disable the Gdb_Case test in non-pump mode when using gcc versions\n\t  that don't preserve the source directory in the preprocessed output.\n\t  \n\t  Reviewers: Nils Karlund, Craig Silverstein\n\n2008-05-21 20:28  Nils Klarlund <opensource@google.com>\n\n\t* src/clirpc.c:\n\t  \n\t  Make an obscure and common error message more informative.\n\t  \n\t  Currently, our users get the following error message when their\n\t  workstation is\n\t  not in the allowed domains as specified in the server configuration:\n\t  \n\t  distcc[20742] (dcc_readx) ERROR: unexpected eof on fd5\n\t  distcc[20742] (dcc_r_token_int) ERROR: read failed while waiting for\n\t  token \"DONE\"\n\t  \n\t  With this change, a message explains some likely causes of the\n\t  problem.\n\n2008-05-21 16:37  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Disable some tests that were failing if you don't have a C++ compiler\n\t  installed.\n\t  \n\t  Also, tidy up the output from the DotD_Case test: instead of\n\t  \n\t  DotD_Case TempCompile_Case OK\n\t  TempCompile_Case OK\n\t  TempCompile_Case OK\n\t  TempCompile_Case OK\n\t  TempCompile_Case OK\n\t  TempCompile_Case OK\n\t  TempCompile_Case OK\n\t  TempCompile_Case OK\n\t  TempCompile_Case OK\n\t  TempCompile_Case OK\n\t  TempCompile_Case OK\n\t  TempCompile_Case OK\n\t  OK\n\t  \n\t  you now get just\n\t  \n\t  DotD_Case OK\n\t  \n\t  Also, fix a problem where ObjectiveCPlusPlus_Case test was on some\n\t  systems\n\t  being run even though the system didn't have Objective C++ installed.\n\t  \n\t  Reviewers: Nils Klarlund\n\n2008-05-21 16:26  Nils Klarlund <opensource@google.com>\n\n\t* include_server/basics.py, include_server/cache_basics.py,\n\t  include_server/include_analyzer_test.py,\n\t  include_server/include_server.py:\n\t  \n\t  Add '--unsafe_absolute_includes' option so that more can be compiled\n\t  in\n\t  pump-mode.\n\t  \n\t  An occurrence of say\n\t  \n\t  #include \"/usr/include/acl.h\"\n\t  \n\t  will normally force the include processor to abort (even when this\n\t  include is\n\t  platform-specific and #ifdef'ed away), because there are no guarantees\n\t  that the\n\t  file /usr/include/acl.h exists on the host. With this option, these\n\t  includes\n\t  will be ignored.\n\t  \n\t  A message like:\n\t  \n\t  WARNING include server: absolute filepath '/usr/include/acl.h' was\n\t  IGNORED (correctness of build may be affected)\n\t  \n\t  will be printed.\n\t  \n\t  The normal message raised when this option is off, the default, has\n\t  been\n\t  modified. It now mentions the option.\n\t  \n\t  An include server manual page is to follow, which explains the\n\t  consequences in\n\t  detail of using this option.\n\t  \n\t  Testing: this makes the samba-2.2.7 benchmark build without hiccups\n\t  using distcc\n\t  pump. Without the change many compilations fail because the include\n\t  server\n\t  bails out and because another unrelated bug in the include server\n\t  makes it later\n\t  dish up with include closures that are too small.\n\t  \n\t  Revievers: Craig Silverstein <opensource@google.com>, Fergus Henderson <opensource@google.com>\n\n2008-05-21 09:04  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in, pump.in, src/include_server_if.c:\n\t  \n\t  Some usability improvements, in particular better diagnostics for\n\t  common setup errors.\n\t  \n\t  In pump script:\n\t  - If DISTCC_HOSTS is set, print out a message saying how many hosts\n\t  there are (similar to the one that we already print if you instead\n\t  set DISTCC_POTENTIAL_HOSTS) and how many of them have pump enabled.\n\t  - Report an error if you run pump using a host list containing no\n\t  hosts with ',cpp'. (Should this be a warning instead?)\n\t  - Report an error if you run pump using an empty host list.\n\t  (Should this be a warning instead?)\n\t  \n\t  In distcc client:\n\t  - Improve the warning messages that you get if you run distcc using\n\t  hosts with \",cpp\" without running pump.\n\n2008-05-21 06:13  Craig Silverstein <opensource@google.com>\n\n\t* bench/Project.py, bench/ProjectDefs.py:\n\t  \n\t  Document the options that the Package constructor takes.\n\t  \n\t  Get rid of source_name, which isn't used anywhere.\n\t  \n\t  Also, add a few more benchmark projects. These are big(ish) and\n\t  written in C++, to test distcc on C++ code.\n\t  \n\t  Reviewed by Nils Klarlund\n\n2008-05-20 21:49  Craig Silverstein <opensource@google.com>\n\n\t* bench/Build.py, bench/benchmark.py:\n\t  \n\t  In the benchmark code, make sure a directory exists before cd-ing into\n\t  it. This is to handle projects like ACE, which require you to build\n\t  from an entirely new directory.\n\t  \n\t  Also fix up an obsolete help-text sentence.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-20 20:23  Fergus Henderson <opensource@google.com>\n\n\t* include_server/basics.py, include_server/compiler_defaults.py,\n\t  include_server/parse_command.py, include_server/parse_command_test.py,\n\t  test/testdistcc.py:\n\t  \n\t  Re-enable Objective C and Objective C++ support.\n\t  \n\t  This required the following changes:\n\t  - Compute the default search paths for each language lazily,\n\t  when the language is first encountered, rather than\n\t  computing it for 'c' and 'c++'.\n\t  - Make the tests of Objective C and Objective C++\n\t  conditional on the relevant compiler being installed.\n\t  \n\t  Tested by \"make check\" on two systems:\n\t  - One with Objective C installed, but not Objective C++.\n\t  - One with neither installed.\n\t  I didn't test on a system with Objective C++ installed,\n\t  because I didn't have one easily available.\n\t  \n\t  Reviewers: Craig Silverstein, Nils Klarlund.\n\n2008-05-20 20:19  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Disable part of the DashWpMD_Case test, because it doesn't pass :-(\n\t  \n\t  Tested with \"make check\"; fails before this CL, passes afterwards.\n\t  \n\t  Reviewers: Nils Klarlund, Craig Silverstein.\n\n2008-05-20 18:16  Craig Silverstein <opensource@google.com>\n\n\t* src/access.c, src/access.h, src/arg.c, src/backoff.c, src/bulk.c,\n\t  src/bulk.h, src/cleanup.c, src/climasq.c, src/clinet.c, src/clinet.h,\n\t  src/clirpc.c, src/compile.c, src/compile.h, src/compress.c, src/cpp.c,\n\t  src/daemon.c, src/daemon.h, src/distcc.c, src/distcc.h, src/dopt.c,\n\t  src/dopt.h, src/dotd.c, src/dotd.h, src/dparent.c, src/dsignal.c,\n\t  src/emaillog.c, src/emaillog.h, src/exec.c, src/exec.h,\n\t  src/exitcode.h, src/fix_debug_info.c, src/fix_debug_info.h,\n\t  src/gcc-id.c, src/h_hosts.c, src/h_parsemask.c, src/help.c,\n\t  src/history.c, src/hostfile.c, src/hosts.c, src/hosts.h,\n\t  src/implicit.c, src/implicit.h, src/include_server_if.c,\n\t  src/include_server_if.h, src/io.c, src/loadfile.c, src/lock.c,\n\t  src/lock.h, src/lsdistcc.c, src/mon-gnome.c, src/mon-notify.c,\n\t  src/mon-text.c, src/mon.c, src/mon.h, src/ncpus.c, src/netutil.c,\n\t  src/netutil.h, src/prefork.c, src/pump.c, src/remote.c,\n\t  src/renderer.c, src/renderer.h, src/rpc.c, src/rpc.h, src/rslave.c,\n\t  src/rslave.h, src/safeguard.c, src/sendfile.c, src/serve.c,\n\t  src/setuid.c, src/snprintf.c, src/snprintf.h, src/srvnet.c,\n\t  src/srvnet.h, src/srvrpc.c, src/ssh.c, src/state.c, src/state.h,\n\t  src/stats.c, src/stats.h, src/stringmap.c, src/stringmap.h,\n\t  src/strip.c, src/tempfile.c, src/timefile.c, src/timefile.h,\n\t  src/timeval.c, src/timeval.h, src/trace.c, src/trace.h,\n\t  src/traceenv.c, src/types.h, src/util.c, src/util.h, src/where.c,\n\t  src/where.h, src/zeroconf-reg.c, src/zeroconf.c, src/zeroconf.h:\n\t  \n\t  Change C++-style // comments to /**/.\n\t  \n\t  Also, fix the emacs var-setting line: it was missing a semicolon\n\t  before, which means the entire line was being ignored.\n\t  \n\t  No contentful change.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-20 06:13  Craig Silverstein <opensource@google.com>\n\n\t* src/access.c, src/access.h, src/arg.c, src/argutil.c, src/backoff.c,\n\t  src/bulk.c, src/bulk.h, src/climasq.c, src/clinet.c, src/clinet.h,\n\t  src/clirpc.c, src/compile.c, src/compile.h, src/compress.c, src/cpp.c,\n\t  src/daemon.c, src/daemon.h, src/distcc.c, src/distcc.h, src/dopt.c,\n\t  src/dopt.h, src/dotd.c, src/dotd.h, src/dparent.c, src/dsignal.c,\n\t  src/emaillog.c, src/emaillog.h, src/exec.c, src/exec.h,\n\t  src/exitcode.h, src/filename.c, src/fix_debug_info.c,\n\t  src/fix_debug_info.h, src/gcc-id.c, src/h_argvtostr.c,\n\t  src/h_compile.c, src/h_dotd.c, src/h_exten.c, src/h_hosts.c,\n\t  src/h_issource.c, src/h_parsemask.c, src/h_sa2str.c, src/h_scanargs.c,\n\t  src/h_strip.c, src/help.c, src/history.c, src/hostfile.c, src/hosts.c,\n\t  src/hosts.h, src/implicit.c, src/implicit.h, src/include_server_if.c,\n\t  src/include_server_if.h, src/io.c, src/loadfile.c, src/lock.c,\n\t  src/lock.h, src/lsdistcc.c, src/mon-gnome.c, src/mon-notify.c,\n\t  src/mon-text.c, src/mon.c, src/mon.h, src/ncpus.c, src/netutil.c,\n\t  src/netutil.h, src/prefork.c, src/pump.c, src/remote.c,\n\t  src/renderer.c, src/renderer.h, src/rpc.c, src/rpc.h, src/rslave.c,\n\t  src/rslave.h, src/safeguard.c, src/sendfile.c, src/serve.c,\n\t  src/setuid.c, src/snprintf.c, src/snprintf.h, src/srvnet.c,\n\t  src/srvnet.h, src/srvrpc.c, src/ssh.c, src/state.c, src/state.h,\n\t  src/stats.c, src/stats.h, src/stringmap.c, src/stringmap.h,\n\t  src/strip.c, src/tempfile.c, src/timefile.c, src/timefile.h,\n\t  src/timeval.c, src/timeval.h, src/trace.c, src/trace.h,\n\t  src/traceenv.c, src/types.h, src/util.c, src/util.h, src/where.c,\n\t  src/where.h, src/zeroconf-reg.c, src/zeroconf.c, src/zeroconf.h:\n\t  \n\t  Turned all tabs into 4 spaces. Got rid of whitespace at the end of\n\t  lines. Fixed up resulting mis-indented code I noticed (mostly in\n\t  files that used 8 space indents, or used 4-space and 8-space indents\n\t  in the same file (!)). Added the emacs tab-var setting for all files,\n\t  not just some of them.\n\t  \n\t  I also added in copyright notices for files I noticed that didn't have\n\t  them. We'll want to do another pass-through to fix these up properly,\n\t  though.\n\t  \n\t  I used the following perl snippet to check for mis-indented code after\n\t  converting tabs to whitespace:\n\t  \n\t  $ for i in *.{c,h}; do echo $i; perl -nle 'if ($indent > 0) {$sp=\" \" x\n\t  $indent; /^$sp[^ ]/ && print \"$.: $_\"; $indent=0;}; if (/^( *).*{/ )\n\t  {$indent=length($1);} else {$indent=0;}' $i; done | less\n\t  \n\t  It had false positives, but hopefully didn't miss anything.\n\t  \n\t  Reviewed by Nils Klarlund\n\n2008-05-20 05:58  Craig Silverstein <opensource@google.com>\n\n\t* bench/benchmark.py:\n\t  \n\t  Add --output to benchmark.py, to print the final timing summary to a\n\t  file in addition to stdout. Also made sure we don't try to access\n\t  opt_cc and opt_cxx until after all flags are read, so flag order\n\t  doesn't matter. Finally, fixed indentation so we only print the\n\t  default actions when --help is specified (as intended).\n\t  \n\t  Tested by running make benchmark.\n\t  \n\t  Reviewed by Nils Klarlund\n\n2008-05-20 03:32  Nils Klarlund <opensource@google.com>\n\n\t* src/emaillog.c:\n\t  \n\t  Fix polarity of condition.\n\t  \n\t  Reviewers: Fergus Henderson\n\t  Tests: manual (both with and without DISTCC_EMAILLOG_WHOM_TO_BLAME\n\t  set).\n\n2008-05-20 03:31  Nils Klarlund <opensource@google.com>\n\n\t* bench/benchmark.py:\n\t  \n\t  Corrent option name.\n\t  \n\t  The option is said to be 'distcc', but it's actually implemented as\n\t  'dist'. The\n\t  latter is fine with me: we have 'dist' and 'pump', with 'pump' being a\n\t  more\n\t  advanced 'dist'.\n\n2008-05-20 03:31  Nils Klarlund <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Improve assert message.\n\t  \n\t  Revievers: Fergus Henderson <opensource@google.com>\n\n2008-05-19 10:00  Fergus Henderson <opensource@google.com>\n\n\t* bench/compiler.py, test/testdistcc.py:\n\t  \n\t  Add 'DashWpMD_Case' to the list of test cases that actually get run.\n\t  \n\t  Also, an unrelated change to the benchmarking scripts:\n\t  fix a cut-and-paste error in an error message.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-19 09:58  Fergus Henderson <opensource@google.com>\n\n\t* src/arg.c:\n\t  \n\t  Whitespace change: make indentation more consistent.\n\n2008-05-18 06:06  Fergus Henderson <opensource@google.com>\n\n\t* src/arg.c, src/argutil.c, src/compile.c, src/distcc.c, src/dotd.c,\n\t  src/implicit.c, src/strip.c:\n\t  \n\t  Fix bugs in my previous change to handle \"-Wp,\" options: arguments\n\t  to str_startswith() were in the wrong order, and in one place I had\n\t  wrongly passed 'argv' instead of 'new_argv'.\n\t  \n\t  Move the call to dcc_expand_preprocessor_options() from\n\t  dcc_get_dotd_info() to gcc_build_somewhere(), so that it is pretty\n\t  much the first thing done to argv. Not sure if this is really needed,\n\t  but it seems like a good idea.\n\t  \n\t  Fix various memory management problems, including some introduced by\n\t  moving the call to dcc_expand_preprocessor_options(). One problem\n\t  was that dcc_find_compiler() was producing a result that was sometimes\n\t  allocated with malloc() and sometimes not, so the caller couldn't\n\t  safely deallocate it. I changed dcc_find_compiler to always return\n\t  a dynamically allocated result.\n\t  \n\t  Fix some places where return values were being ignored.\n\t  Also fix one place where distcc was inconsistenly calling exit()\n\t  rather than returning a return code.\n\t  \n\t  Like my previous change, this one is necessary, but perhaps not\n\t  sufficient, for building the Linux kernel with distcc-pump.\n\t  \n\t  Tested by \"make valgrind-check\", and by building and installing the\n\t  debian package and the building Linux 2.6.25 in pump mode using the\n\t  benchmark.py script.\n\t  \n\t  Reviewers\n\n2008-05-18 06:03  Fergus Henderson <opensource@google.com>\n\n\t* packaging/RedHat/init.d/distcc:\n\t  \n\t  Fix a bug where \"/etc/init.d/distcc stop\" was not working when you had\n\t  installed a new distcc. It wasn't working properly because the call to\n\t  \"start-stop-daemon --stop\" used the \"--exec /usr/bin/distccd\" option,\n\t  and (perhaps due to a bug in start-stop-daemon?) that option checks\n\t  /proc/<pid>/exe against /usr/bin/distccd by comparing inode numbers.\n\t  Comparing inode numbers doesn't work, because when we install a new\n\t  distccd, we create a fresh file with a new inode number, so the inode\n\t  number used by running processes won't match the inode number of\n\t  /usr/bin/distccd on disk after you've installed a new version.\n\t  \n\t  The fix was to remove the \"--exec /usr/bin/distccd\"\n\t  option from the call to start-stop-daemon. We're already passing\n\t  \"--name distccd\", which is sufficient to indentify the running\n\t  distccd processes.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-17 16:24  Fergus Henderson <opensource@google.com>\n\n\t* src/compile.c, src/compile.h, src/h_compile.c, test/testdistcc.py:\n\t  \n\t  Fix a typo: s/ddc_/dcc_/\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-17 15:18  Nils Klarlund <opensource@google.com>\n\n\t* include_server/basics.py, include_server/include_server.py:\n\t  \n\t  Tune gc for 25% speed-up of include processor.\n\t  \n\t  Set first parameter of gc.set_threshold to 10000 instead of default\n\t  700.\n\t  \n\t  See comments in program text.\n\t  \n\t  \n\t  Notes\n\t  -----\n\t  \n\t  I used a little script to find the include server timings as a\n\t  function of this\n\t  parameter.\n\t  \n\t  This script executes:\n\t  \n\t  \"DISTCC_PUMP_INSTALLATION=/tmp/distcc3.0 INCLUDE_SERVER_ARGS='-t\n\t  --gc_threshold=700' \\\n\t  /usr/bin/time -p make-dbg -j120 -r -experimental-ld -g0 gws:gws\"\n\t  \n\t  with various values of gc_threshold.\n\t  \n\t  The measurement were done on a four processor system (dual Opterons),\n\t  loaded\n\t  with an nxserver process. Files were served through Fuse.\n\t  \n\t  \n\t  gc include server user + sys time\n\t  setting\n\t  \n\t  700 155.1s 154.0s 164.7s 186.1s 154.3s Mean: 162.8\n\t  10000 123.8s 125.4s 120.6s 120.4s 121.0s Mean: 122.2\n\t  100000 123.4s 123.3s 122.2s 123.3s 116.5s Mean: 121.7\n\t  \n\t  700 166.5s 156.4s 150.8s 153.4s 155.4s Mean: 156.5\n\t  10000 120.7s 142.1s 118.3s 117.7s 119.2s Mean: 123.6\n\t  100000 140.3s 117.1s 149.7s 116.7s 141.6s Mean: 123.6\n\t  \n\t  \n\t  The corresponding elapsed times:\n\t  \n\t  371.0s 363.3s 361.9s 370.8s 369.0s Mean: 367.2\n\t  341.8s 346.1s 336.3s 338.3s 340.5s Mean: 340.6\n\t  345.9s 338.5s 342.9s 374.4s 340.0s Mean: 348.3\n\t  \n\t  377.4s 379.9s 387.1s 377.4s 373.2s Mean: 379.0\n\t  332.1s 337.7s 336.5s 332.2s 314.7s Mean: 330.6\n\t  341.1s 334.6s 357.8s 338.5s 352.4s Mean: 344.9\n\t  \n\t  Note that the saving in include server time is around 35s, but the\n\t  savings in\n\t  elapsed time is around 44s. These numbers are uncertain. Even so, they\n\t  strongly\n\t  indicate that the include server is a signifcant bottleneck.\n\t  \n\t  BTW, for comparison with plain distcc:\n\t  \n\t  821.4s 822.0s 842.4s 821.5s 852.0s Mean: 831.9\n\t  878.7s 857.2s 860.3s 880.1s 856.0s Mean: 866.5\n\t  \n\t  Thus, pump-mode 2.5X is faster than plain distcc (with the\n\t  set_threshold =\n\t  10000 of this CL).\n\t  \n\t  Revievers: Fergus Henderson <opensource@google.com>, Craig Silverstein <opensource@google.com>\n\n2008-05-16 23:12  Craig Silverstein <opensource@google.com>\n\n\t* src/exec.c:\n\t  \n\t  There's cygwin-specific code in exec.c, but it seems to assume that\n\t  when running under cygwin, we'll be using a native windows app to\n\t  compile. But sometimes we're using a cygwin app (eg /bin/gcc).\n\t  Trying to use native-windows forking routines with cygwin apps causes\n\t  a segfault (and takes a while to do it); we need to use unix forking\n\t  routines there.\n\t  \n\t  With this change, when we're asked to spawn a sub-process, we try to\n\t  guess whether the sup-process app is windows or cygwin, based on its\n\t  path location (this benefits from using absolute paths):\n\t  /bin/gcc\n\t  vs\n\t  C:\\Program Files\\Microsoft Visual Studio .NET 2003\\Vc7\\bin\\cl.exe\n\t  or even\n\t  C:/Program Files/Microsoft Visual Studio .NET 2003/Vc7/bin/cl.exe\n\t  \n\t  If we decide it's a windows app but are wrong, then the\n\t  windows-forking code should eventually fail with \"file not found\"; in\n\t  that case, we fall through to the normal unix-fork case, to give\n\t  cygwin a chance to find the binary.\n\t  \n\t  I also took the opportunity to clean up some of the code (handles\n\t  should be initialized to ILLEGAL_HANDLE values, not NULL). I also\n\t  replaced the crazy permissions the code was asking for before, with\n\t  normal GENERIC_READ/GENERIC_WRITE. This allows the code to work when\n\t  the tmpdir is c:\\windows, which was failing before.\n\t  \n\t  Tested on cygwin using /bin/gcc as the compiler, like so:\n\t  ./distcc /bin/gcc -c testtmp.c -o testtmp.o\n\t  where testtmp.c is a simple \"hello world\" program.\n\t  \n\t  I also tested by running 'make check'. With this change, 'make check'\n\t  passes on cygwin! (Using gcc to do compilations.)\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-16 22:00  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in, src/compile.c:\n\t  \n\t  Two bug fixes:\n\t  - Fix a bug where 'valgrind-check' was invoking 'pump-check',\n\t  but 'pump-check' was disabling valgrind.\n\t  - Fix an off-by-one error caught by valgrind.\n\t  \n\t  Tested by \"make check\" and \"make valgrind-check\".\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-16 21:54  Fergus Henderson <opensource@google.com>\n\n\t* src/arg.c, src/distcc.h, src/dotd.c, test/testdistcc.py:\n\t  \n\t  Handle '-Wp,-MD,<dotdfile>' option.\n\t  This is needed to build the Linux kernel.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-16 20:46  Fergus Henderson <opensource@google.com>\n\n\t* bench/ProjectDefs.py:\n\t  \n\t  In the list of projects to benchmark:\n\t  - comment out Linux 2.5.51, because it doesn't compile\n\t  - add Linux 2.6.25.\n\t  \n\t  Reviewers: Nils Klarlund, Craig Silverstein\n\n2008-05-16 20:44  Fergus Henderson <opensource@google.com>\n\n\t* bench/actions.py:\n\t  \n\t  In the benchmarking script, don't remove the build directories by\n\t  default, because the log files get stored in the build directories,\n\t  and it's useful to have the log files around afterwards.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-16 18:08  Craig Silverstein <opensource@google.com>\n\n\t* src/dotd.c:\n\t  \n\t  Comment the need to handle gcc's -Wp flag.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-16 01:15  Nils Klarlund <opensource@google.com>\n\n\t* include_server/include_analyzer_test.py:\n\t  \n\t  Fix freak name collision on OSs that do not distinguish upper and\n\t  lowercase in\n\t  file names.\n\t  \n\t  The symbol 'TESTING' is potentially unevaluated according to the\n\t  overapproximation semantics of the include server. So if this symbol\n\t  is used in\n\t  a file name and if 'TESTING' really means 'testing' according to the\n\t  OS and if\n\t  in fact 'testing' does exist as file, then there is trouble.\n\t  \n\t  Revievewers: Craig Silverstein <opensource@google.com>\n\t  \n\t  Testing:\n\t  make include-server-maintainer-check (on Linux)\n\n2008-05-16 01:10  Nils Klarlund <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Fix: speed-up the include processor a few times by exporting\n\t  PYTHONOPTIMIZE.\n\t  \n\t  This took a little while: fortunately, the tracing information is\n\t  dependent on\n\t  the PYTHONOPTIMIZE setting, so after a diff on the outputs of the gws\n\t  example\n\t  before and after, it finally dawned upon me what was wrong.\n\t  \n\t  Tested: manually on the gws example with 600 include directories.\n\n2008-05-16 00:59  Nils Klarlund <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Fix removal of 'pump'.\n\t  \n\t  Review: Craig Silverstein\n\n2008-05-16 00:52  Nils Klarlund <opensource@google.com>\n\n\t* Makefile.in, pump.in:\n\t  \n\t  Fix variable that denotes the source location.\n\t  \n\t  (1) It was not documented. I rewrote the documentation for a couple\n\t  of associated variables.\n\t  (2) There was no default value.\n\t  \n\t  Now, the variable does not need to be set from 'make', so I've removed\n\t  it from\n\t  Makefile.in. And, I've made it into a standard shell lowercase\n\t  variable.\n\t  \n\t  Reviewers: Fergus Henderson, Craig Silverstein\n\t  Tests: (1) make distcheck\n\t  (2) Running the pump script out of the build directory.\n\n2008-05-15 21:45  Craig Silverstein <opensource@google.com>\n\n\t* find_c_extension.sh, test/testdistcc.py:\n\t  \n\t  Modifications to the pump and test framework for cygwin.\n\t  \n\t  1) find_c_extension looks for .dll files in addition to .so files.\n\t  \n\t  2) Likewise, testdistcc.py has to check whether binary names might end\n\t  in .exe. Usually that doesn't matter, but sometimes (eg when running\n\t  cp on them), it does.\n\t  \n\t  3) testdistcc.py adds a routine to detect PE binaries. These, like\n\t  dwarf binaries, do not always give reproducible output on the same\n\t  input, so take that into account in the gdb tests.\n\t  \n\t  4) In the lsdistcc test, we assumed that when the ping failed,\n\t  127.0.0.2 isn't available. But it's also possible ping is just broken\n\t  (or different) on that machine. So in the failed-ping case, we no\n\t  longer make any assumption about 127.0.0.2, one way or the other.\n\t  \n\t  Tested by running 'make check' on cygwin. Most every test passes!\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-15 20:11  Nils Klarlund <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Add 'pump' to 'all' target. Add 'rm pump' to 'clean' target.\n\t  \n\t  - 'pump' is a dependency of 'install'.\n\t  - 'include_server' is a dependency of 'all.\n\t  \n\t  So I propose that 'pump' should be a dependency of 'all'.\n\t  \n\t  Reviewers: Fergus Henderson\n\t  Test: make distcheck\n\n2008-05-15 19:39  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in, configure.ac, pump.in:\n\t  \n\t  Instead of a hack to figure out if pump is installed or not -- one\n\t  that fails on macs with python 2.5 (at least) because of weirdnesses\n\t  with distutils installation on that platform -- just rewrite pump at\n\t  install-time to indicate it's installed. We take the opportunity to\n\t  tell pump where the installed include_server.py is, because it needs\n\t  to know, and we know that during 'make install'.\n\t  \n\t  Tested by running 'make distcheck' on linux (ubuntu) with python 2.4,\n\t  and mac 10.5 with python 2.5. I also tested by running, on the linux\n\t  machine,\n\t  ./configure --prefix=/tmp/distcc.install && make install && make\n\t  DISTCC_INSTALLATION=/tmp/distcc.install/bin installcheck\n\t  \n\t  Furthermore, I manually inspected the installed pump file after that\n\t  to make sure it looked correct.\n\t  \n\t  Reviewed by Nils Klarlund and Fergus Henderson\n\n2008-05-15 02:53  Craig Silverstein <opensource@google.com>\n\n\t* include_server/compiler_defaults.py:\n\t  \n\t  Add a comment. From Nils Klarlund <opensource@google.com>:\n\t  \n\t  \"Assume that:\n\t  \n\t  (1) 'gcc' is a link to 'distcc' earlier on PATH than the real gcc.\n\t  (2) gcc is invoked; in fact that invokes distcc, which will rewrite\n\t  the PATH in src/climasq.c before invoking 'gcc' again.\n\t  \n\t  That will make calls by distcc such as 'gcc -E' for preprocessing work\n\t  OK, but the include processor will in fact be calling the 'distcc' as\n\t  'gcc' again! But because the input argument is an I/O redirection,\n\t  distcc will then correctly call 'gcc'. In args.c it fails to recognize\n\t  an input file.\"\n\n2008-05-15 02:40  Craig Silverstein <opensource@google.com>\n\n\t* src/access.c, src/access.h, src/arg.c, src/backoff.c, src/bulk.c,\n\t  src/bulk.h, src/cleanup.c, src/climasq.c, src/clinet.c, src/clinet.h,\n\t  src/clirpc.c, src/compile.h, src/compress.c, src/cpp.c, src/daemon.c,\n\t  src/daemon.h, src/distcc.c, src/distcc.h, src/dopt.c, src/dopt.h,\n\t  src/dparent.c, src/dsignal.c, src/exec.h, src/exitcode.h,\n\t  src/h_hosts.c, src/h_parsemask.c, src/help.c, src/history.c,\n\t  src/hostfile.c, src/hosts.c, src/hosts.h, src/implicit.c,\n\t  src/implicit.h, src/io.c, src/loadfile.c, src/lock.c, src/lock.h,\n\t  src/mon-gnome.c, src/mon-notify.c, src/mon-text.c, src/mon.c,\n\t  src/mon.h, src/ncpus.c, src/netutil.c, src/netutil.h, src/prefork.c,\n\t  src/pump.c, src/remote.c, src/renderer.c, src/renderer.h, src/rpc.c,\n\t  src/rpc.h, src/safeguard.c, src/sendfile.c, src/serve.c, src/setuid.c,\n\t  src/srvnet.c, src/srvnet.h, src/srvrpc.c, src/ssh.c, src/state.c,\n\t  src/state.h, src/stats.c, src/stats.h, src/strip.c, src/tempfile.c,\n\t  src/timefile.c, src/timefile.h, src/traceenv.c, src/types.h,\n\t  src/util.c, src/util.h, src/where.c, src/where.h:\n\t  \n\t  Add a consistent emacs-variable header to all source files. This\n\t  affects the way emacs users will see these files, when visiting them\n\t  in emacs. In particular, tabs will show up as 4 spaces, which is\n\t  (clearly) the setting the original distcc author used when writing the\n\t  code.\n\t  \n\t  We also set an emacs variable to never insert new tabs, but use spaces\n\t  instead. This will help stop the problem we have now with mixed tabs\n\t  and spaces. In a future cleanup, we may replace all tabs with 4\n\t  spaces, and make other whitespace improvements.\n\t  \n\t  The final new variable set, is to set line-wrapping at 78 chars.\n\t  Personally, I would have made it more like 72, but some existing files\n\t  already had the 78 limit, so I just do that everywhere, to be\n\t  consistent.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-15 01:58  Craig Silverstein <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  The gdb tests was making two assumptions that the input was ELF, which\n\t  was failing on OS X (Which uses Mach-O). One is that two identical\n\t  link commands always produce the same output, which is not true for\n\t  mach-o. The other is just a test of ELF-specific code, without an\n\t  \"iself\" check. Now I check the object-file type and run the\n\t  appropriate test, based on the type, in each case.\n\t  \n\t  Tested by running 'make check' on linux (ubuntu 6) and OS X (10.5).\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-15 01:36  Craig Silverstein <opensource@google.com>\n\n\t* include_server/compiler_defaults.py:\n\t  \n\t  When running gcc -v, we were clearing the environment too\n\t  aggressively: in particular, we were clearing $PATH, which is needed\n\t  to find gcc when it's in an unusual location. Now we clear everything\n\t  but $PATH.\n\t  \n\t  Tested by running 'make include-server-maintainer-check' on solaris\n\t  x86, which has gcc outside the standard path, and on linux (ubuntu),\n\t  which does not.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-15 01:15  Craig Silverstein <opensource@google.com>\n\n\t* src/tempfile.c:\n\t  \n\t  The tmpdir-creation routine has an (undocumented) invariant that the\n\t  tmpdir should not end in a slash -- at least, inside distcc, you see\n\t  code like this:\n\t  snprintf(\"%s/%s\", tmpdir, filename)\n\t  \n\t  On the other hand, windows's routine to create a tempdir guarantees it\n\t  will end with a slash. I'm not sure it really matters, but get rid of\n\t  the slash in that case. That way we don't have to worry about how\n\t  filenames are interpreted (since // does have a special meaning for\n\t  filenames in windows, though probably not in a way this code could\n\t  generate before; still, no harm in normalizing to one slash).\n\t  \n\t  Tested by running 'make check' on cygwin.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-14 21:01  Craig Silverstein <opensource@google.com>\n\n\t* test/comfychair.py:\n\t  \n\t  Replace an os.system calls ('rm -rf') with python (shutil.rmtree).\n\t  This should improve portability. It seems to help on cygwin, for\n\t  instance.\n\t  \n\t  I also got rid of anotehr os.system call that was redundant: it did a\n\t  \"mkdir -p foo\" after the previous line had done a \"mkdir -p foo/bar\".\n\t  \n\t  Tested by running 'make check on linux (ubuntu) and cygwin.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-14 19:48  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  1) Fix up a PATH= assignment that would fail if builddir had spaces in\n\t  it (because the output of `cd \"$builddir\" && pwd` was not being\n\t  quoted). As a bonus, make the PATH= fit on one line, which makes some\n\t  shells happier.\n\t  \n\t  2) Fixed up some install targets. On some systems, tar without -f\n\t  reads from stdin, but that's non-standard (it should read from some\n\t  tape-drive device in /dev in that case). Add -f- to $(TAR) in that\n\t  case, which should work everywhere.\n\t  \n\t  3) cp -a isn't supported on all systems. I checked what automake\n\t  does, and it emits cp -pR, so that's what I do too. We don't have any\n\t  internal symlinks that I need to worry about -P or anything like\n\t  that.\n\t  \n\t  Tested by running 'make installcheck' on a freebsd 6.0 system.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-14 19:22  Craig Silverstein <opensource@google.com>\n\n\t* include_server/include_server_test.py:\n\t  \n\t  Show more data when an assert fails, to help in debugging.\n\t  \n\t  Reviewed by Nils Klarlund and Fergus Henderson\n\n2008-05-14 18:59  Craig Silverstein <opensource@google.com>\n\n\t* m4/acx_pthread.m4:\n\t  \n\t  Update acx_pthread to the latest version we use internally. This is\n\t  like the one on the cryp.to autoconf repository website, but with the\n\t  avahi patches added in to deal with some compiler quirks. However,\n\t  these patches have been rewritten internally within google to make\n\t  them more robust. In particular, the new code now works with cygwin,\n\t  which it previously didn't (resulting in the spurious error: \"Unable\n\t  to determine how to use pthreads with shared libraries\").\n\t  \n\t  Tested by running configure on cygwin.\n\t  \n\t  Reviewed by Nils Klarlund and Fergus Henderson\n\n2008-05-14 14:26  Nils Klarlund <opensource@google.com>\n\n\t* configure.ac, include_server/include_server_test.py:\n\t  \n\t  Make distcc 3.0 compatible with Python 2.5.\n\t  \n\t  Tests:\n\t  \n\t  I made PATH=$PATH:/usr/python/bin (where python2.5 resides on my\n\t  machine). I ran\n\t  autogen and reconfigured. Then I did:\n\t  \n\t  make include-server-maintainer-check\n\t  make pump-maintainer-check\n\t  \n\t  and I made sure that -Is now are set according to Python2.5.\n\n2008-05-14 08:03  Craig Silverstein <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Ick. On some systems test is in /bin, and in others /usr/bin. Now\n\t  figure out where it is before running it, and fall back on the shell\n\t  test if no binary can be found.\n\t  \n\t  Tested by running 'make check' on a FreeBSD machine (/bin/test) and\n\t  linux (/usr/bin/test).\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-14 07:28  Craig Silverstein <opensource@google.com>\n\n\t* src/compile.c:\n\t  \n\t  getc returns an int, not a char. We're checking whether a char ==\n\t  EOF, which isn't kosher, and on systems where -funsigned-char is true,\n\t  dangerous. Change the type of the var to an int.\n\t  \n\t  Tested by running on linux (ubuntu) and on linux ppc (debian), the\n\t  latter of which complained at compile time.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-14 07:15  Fergus Henderson <opensource@google.com>\n\n\t* packaging/RedHat/init.d/distcc:\n\t  \n\t  Fix problems where distcc's init script was using the wrong\n\t  exit status and giving misleading messages as a result.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-14 07:14  Fergus Henderson <opensource@google.com>\n\n\t* packaging/RedHat/conf/commands.allow.sh:\n\t  \n\t  Increase the set of commands allowed by default:\n\t  allow cc, c++, c89, c99, and g++, in addition to gcc.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-14 02:27  Craig Silverstein <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Fix a test to work on solaris sh.\n\t  \n\t  Tested by running 'make check' on linux (ubuntu) and solaris 10 x86.\n\t  \n\t  Reviewed by Nils Klarlund and Fergus Henderson\n\n2008-05-14 01:00  Nils Klarlund <opensource@google.com>\n\n\t* include_server/basics.py, include_server/basics_test.py,\n\t  include_server/include_server.py:\n\t  \n\t  Finish refactoring and add tests. Move _CleanOutClientRoot and\n\t  _CleanOutOthers\n\t  to the ClientRootKeeper package in basics. Replace\n\t  _RemoveDirectoryTree with\n\t  shutil function. Add tests to see that directories are created and\n\t  deleted.\n\t  Add a couple of title headers to basics.py. Remove a couple of now\n\t  irrelevant\n\t  comments.\n\t  \n\t  Tests: make pump-maintainer-check\n\t  make include-server-maintainer-check\n\t  \n\t  Reviewer: Craig Silverstein\n\n2008-05-14 00:42  Craig Silverstein <opensource@google.com>\n\n\t* include_server/setup.py:\n\t  \n\t  Include snprintf.c in the source-list for the python extension. This\n\t  is needed on systems that don't define asprintf/etc on their own.\n\t  \n\t  Tested by running 'make check' on a linux ubuntu machine and on a\n\t  solaris machine.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-14 00:31  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in, find_c_extension.sh, pump.in:\n\t  \n\t  A few more cleanups:\n\t  \n\t  1) No ! outside of a 'test' (sh-compatibility).\n\t  2) grep >/dev/null instead of grep -q (solaris portability).\n\t  3) Improved the quote hygenie a little.\n\t  4) prepend to PYTHONPATH instead of overriding it.\n\t  \n\t  Tested by running on a solaris machine, and on a machine where\n\t  PYTHONPATH is needed to locate the python distribution (which is not\n\t  in the standard location).\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-13 23:53  Craig Silverstein <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  On some systems (FreeBSD), it looks like connect() can return EINVAL.\n\t  This isn't documented, but there's some talk about it on the web, eg\n\t  http://mail-index.netbsd.org/netbsd-bugs/2003/08/18/0002.html\n\t  \n\t  It looks like the cause is that the first connect fails for whatever\n\t  reason, and then subsequent ones fail with EINVAL.\n\t  \n\t  I've detected that in the NoDetachDaemon_Case, both on FreeBSD and OS\n\t  X machines. The symptom is that sock.connect_ex(('127.0.0.1',\n\t  self.server_port) continually returns EINVAL, and no amount of time\n\t  will fix things.\n\t  \n\t  I'm not exactly sure why, but I figure one possible problem is the\n\t  connect is happening before distccd has started listening, and that\n\t  causes problems. So I put in a bit of a delay to give distccd time to\n\t  start up. I figure it can't hurt, and may well help.\n\t  \n\t  Tested by running 'make check' on a ubuntu machine (not subject to\n\t  this problem) and a freebsd machine (which sometimes is). It\n\t  certainly didn't hurt, though I can't tell if it solved the problem\n\t  for good.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-13 23:36  Craig Silverstein <opensource@google.com>\n\n\t* include_server/setup.py:\n\t  \n\t  I found a machine whose python was compiled with _FORTIFY_SOURCE,\n\t  which -- on linux FC5 at least -- gives warnings (which we turn into\n\t  errors via -Werror) on distcc code for libc functions where we ignore\n\t  the return value. Unfortunately, setup.py always uses the same flags\n\t  that python was compiled with on the local machine, so _FORTIFY_SOURCE\n\t  is always set when compiling distcc extensions via setup.py, and that\n\t  compilation fails.\n\t  \n\t  Without getting into a philosophical debate about the merits of the\n\t  warn-unused warnings, we'd rather the code compile, so I turn off\n\t  _FORTIFY_SOURCE when it exists.\n\t  \n\t  Tested by running 'make check' on a goobuntu machine (no\n\t  _FORTIFY_SOURCE) and an FC5 machine (with _FORTIFY_SOURCE).\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-13 20:33  Nils Klarlund <opensource@google.com>\n\n\t* src/compile.c:\n\t  \n\t  Fix buglet: insert (void) in call of strcpy to avoid gcc 4.1.1. making\n\t  trouble.\n\t  \n\t  gcc 4.1.1 with glibc 2.2.2. insists that the return value must be\n\t  used. That\n\t  appears to be a bug in gcc.\n\t  \n\t  Reviewers: Fergus Henderson, Craig Silverstein.\n\n2008-05-13 18:59  Craig Silverstein <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Two changes to robustify the unittests:\n\t  \n\t  1) Don't try to run the gdb tests on machines that don't have gdb\n\t  installed. Likewise, don't try to run the implicit-cc test on a\n\t  machine that doesn't have cc installed (it happens! Sometimes\n\t  there's only gcc.)\n\t  \n\t  2) Raise the file-descriptor limit if we can. Mac OS X likes to keep\n\t  the limit at 256, but some of these tests need more.\n\t  \n\t  Tested by running 'make check' on linux and mac os x 10.5. On linux,\n\t  I ran on both a machine with gdb installed, and one without.\n\t  \n\t  Reviewed by Nils Klarlund and Fergus Henderson\n\n2008-05-13 18:40  Craig Silverstein <opensource@google.com>\n\n\t* src/exec.c:\n\t  \n\t  We were logging a char* that could be NULL. With glibc, the printf\n\t  would just print \"(null)\", but on solaris libc it would segfault.\n\t  Explicitly test that case now.\n\t  \n\t  Tested by running 'make check' on linux and solaris x86.\n\t  \n\t  Reviewed by Nils Klarlund and Fergus Henderson\n\n2008-05-13 17:49  Nils Klarlund <opensource@google.com>\n\n\t* include_server/basics.py, include_server/basics_test.py,\n\t  include_server/compress_files.py, include_server/include_analyzer.py,\n\t  include_server/include_analyzer_memoizing_node.py,\n\t  include_server/include_analyzer_memoizing_node_test.py,\n\t  include_server/include_analyzer_test.py,\n\t  include_server/include_server.py,\n\t  include_server/include_server_test.py,\n\t  include_server/parse_file_test.py:\n\t  \n\t  Clean-up the handling of directories for storing compressed files.\n\t  \n\t  The code was lacked encapsulation and proper object-orientation. (I\n\t  wrote it --\n\t  it had started out much simpler.) For example, key parameteres were\n\t  communicated through file name patterns expressed in file names on\n\t  disk. These\n\t  patterns were then inferred from reading file names. Now the patterns\n\t  are\n\t  properly abstracted away in a class.\n\t  \n\t  There should be no semantic changes.\n\t  \n\t  Testing:\n\t  \n\t  make include-server-maintainer-check\n\t  make pump-maintainer-check\n\t  DISTCC_CLIENT_TMP='/tmp' make pump-maintainer-check\n\t  \n\t  The latter test exercices the padding gymnastics.\n\n2008-05-13 07:02  Craig Silverstein <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Rewrite 'pump' to remove bash-isms. This should now work with\n\t  standard sh.\n\t  \n\t  This involved the following changes:\n\t  \n\t  1) `cmd` instead of $(cmd).\n\t  2) [ -n \"$VAR\" ] instead of [ \"$VAR\" ]\n\t  3) \"Here document\" (<<EOF) instead of a multi-line string (for\n\t  CheckUsage)\n\t  4) if/then instead of fancy var stuff like $(var-foo)\n\t  5) if/then instead of x || { cmd1; cmd2; } (probably not necessary)\n\t  6) [ ! foo ] instead of ! [ foo ] (that is, ! inside the test command)\n\t  7) No more \"local\" for variable declarations\n\t  8) I rewrote a case statement as an if, to not need bash extensions\n\t  \n\t  Not too much, actually. I've verified that the following \"fancy\"\n\t  features are supported by all the sh's I have access to (bash,\n\t  freebsd's sh, and solaris 10's sh):\n\t  \n\t  1) Use of 'exec' to redirect the shell's stdin and stdout\n\t  2) Functions returning values, which are checkable via $?\n\t  3) Assigning text emitted via a funcion using `` (a=`MyFunc arg1\n\t  arg2`)\n\t  4) trap\n\t  \n\t  In addition to the above conversions, I also cleaned up quote hygenie\n\t  (in case variables have spaces in them).\n\t  \n\t  Tested by running 'make pump-maintainer-check' on a linux machine and\n\t  freebsd machine. On the solaris machine, I ran 'pump' manually\n\t  (setting various environment vars to try to test different codepaths),\n\t  but could not successfully run 'make pump-maintainer-check' since that\n\t  machine lacks the necessary version of python.\n\t  \n\t  Really, we should probably rewrite this script in python one day (it\n\t  calls python scripts, so that's not adding a new dependency), and then\n\t  we won't have to worry about portability at all. But that will have\n\t  to wait for another day.\n\t  \n\t  Reviewed by Nils Klarlund and Fergus Henderson\n\n2008-05-13 07:00  Craig Silverstein <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  printenv doesn't exist on all systems. 'env' does, and does the same\n\t  thing as printenv when no arguments are given, so just use env instead\n\t  of printenv.\n\t  \n\t  Tested by running 'make check' on a linux machine (which has both env\n\t  and printenv).\n\t  \n\t  To be reviewed by Fergus Henderson\n\n2008-05-13 05:28  Craig Silverstein <opensource@google.com>\n\n\t* include_server/include_server.py:\n\t  \n\t  Be more informative on an assert.\n\t  \n\t  Reviewed by Fergus Henderson and Nils Klarlund\n\n2008-05-13 01:49  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in, configure.ac:\n\t  \n\t  In the non-included popt case, POPT_INCLUDES was the empty string,\n\t  leading to a compile command that had -I\"\" in it. Who knows what that\n\t  means? Now the -I is part of POPT_INCLUDES, so when it's absent we\n\t  don't add anything to CPPFLAGS.\n\t  \n\t  Tested on a machine where POPT_INCLUDES is not empty and one where it\n\t  is.\n\t  \n\t  Reviewed by Nils Klarlund\n\n2008-05-12 23:53  Fergus Henderson <opensource@google.com>\n\n\t* bench/benchmark.py:\n\t  \n\t  Fix a typo in my previous change:\n\t  s/parse_opt_compiler/parse_compiler_opt/\n\n2008-05-12 23:07  Fergus Henderson <opensource@google.com>\n\n\t* include_server/parse_command.py, test/testdistcc.py:\n\t  \n\t  Handle gcc's \"-MF\" option in the include server.\n\t  \n\t  This option only affects the name of the \".d\" file, not the include\n\t  closure, so the include server doesn't need to do anything for this\n\t  option; the actual handling of this option in distcc is done by the\n\t  distcc\n\t  client, which already handles it correctly. This change just stops the\n\t  include server from throwing an exception whenever '-MF' is\n\t  encountered.\n\t  \n\t  Reviewers: Nils Klarlund\n\n2008-05-12 23:02  Fergus Henderson <opensource@google.com>\n\n\t* bench/benchmark.py, bench/compiler.py:\n\t  \n\t  Add new options '--cc' and '--cxx' for specifying the paths to use for\n\t  the C and C++ compilers.\n\t  \n\t  Also, update the help message to document the new format for the\n\t  --compiler option.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-12 20:18  Nils Klarlund <opensource@google.com>\n\n\t* include_server/c_extensions/distcc_pump_c_extensions_module.c:\n\t  \n\t  Fix call of 'realpath' to work on FreeBSD. Also fix memory leak.\n\t  \n\t  Reviewer: Craig Silverstein, Fergus Henderson.\n\t  Tests: make pump-maintainer-check\n\t  make include-server-maintainer-check\n\n2008-05-12 19:11  Fergus Henderson <opensource@google.com>\n\n\t* bench/Build.py, bench/ProjectDefs.py, bench/Summary.py,\n\t  bench/buildutil.py, bench/compiler.py, bench/statistics.py:\n\t  \n\t  Add support for pump mode to the benchmarking scripts.\n\t  \n\t  Also add support for setting the number of hosts to use.\n\t  \n\t  Fix division by zero error that occurred when running benchmark script\n\t  with the \"-a\" option.\n\t  \n\t  Fix broken URL for GNU hello package.\n\t  \n\t  Reviewers: Craig Silverstein, Nils Klarlund\n\n2008-05-12 18:32  Nils Klarlund <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Fix 'ps' invocation to be more FreeBSD friendly.\n\t  \n\t  Reviewers: Fergus Henderson, Craig Silverstein\n\t  Tests: make pump-maintainer-check\n\n2008-05-12 16:19  Nils Klarlund <opensource@google.com>\n\n\t* include_server/include_analyzer_test.py:\n\t  \n\t  Fix include server test so that it passes on system w/o /dev/shm.\n\t  \n\t  Reviewers: Craig Silverstein, Fergus Henderson\n\t  Tests: make include-server-maintainer-check\n\n2008-05-12 16:15  Nils Klarlund <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Get rid of 'readlink -f', which is a Gnuism.\n\t  \n\t  The purpose of the readlink -f was to give the absolute path of the\n\t  installation; that happens to reveal the installation date given the\n\t  way we set\n\t  up distcc-pump at Google. But this does not work under FreeBSD. The\n\t  installation information can be communicated in different ways (for\n\t  example by\n\t  explicit actions of the build system).\n\t  \n\t  Reviewers: Fergus Henderson, Craig Silverstein\n\n2008-05-11 19:06  Craig Silverstein <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Annoyingly, different versions of gcc are inconsistent in how they\n\t  treat a non-existent #include file when invoked with \"-MMD\": some\n\t  versions treat it as an error (rc 1), some as a warning (rc 0). When\n\t  distcc is responsible for preprocessing (_server_options includes\n\t  'cpp'), we need to figure out which our gcc does, in order to verify\n\t  distcc is doing the same thing.\n\t  \n\t  Before this change, we just hard-coded in one sort of gcc behavior\n\t  (that it always warns). This change actually tries gcc out to see\n\t  which it does, to make sure distcc does the same.\n\t  \n\t  Tested by running 'make pump-maintainer-check' on both Linux gcc 4.0.3\n\t  (which warns) and FreeBSD gcc 3.4.4 (which errors).\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-10 06:54  Craig Silverstein <opensource@google.com>\n\n\t* src/sendfile.c:\n\t  \n\t  No matter what the reason, if we can't use sendfile() but it's still\n\t  safe to fall back on readwrite(), do that. Before we only did this\n\t  for certain errors, but we might as well do it for any error we don't\n\t  expect to be able to recover from.\n\t  \n\t  Tested by running on mac os x 10.4, which has a problem with sendfile\n\t  failing sometimes. The relevant test succeeds after this patch.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-10 00:58  Nils Klarlund <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Double-quote unprotected directory reference.\n\t  \n\t  Reviewers: csilvers\n\t  Tests: make distcheck\n\n2008-05-10 00:56  Nils Klarlund <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Cosmetic clean-up of Makefile.in.\n\t  \n\t  -- Put a @ in front of a comment shell command (it shouldn't be\n\t  printed). It is\n\t  the only comment in the action part of a build rule in the whole\n\t  Makefile. In\n\t  Emacs, this comment is flagged as a syntax issue.\n\t  -- Group all .PHONYs at beginning of section.\n\t  \n\t  Tests: make distcheck\n\t  Reviewers: fergus, csilvers\n\n2008-05-09 23:19  Nils Klarlund <opensource@google.com>\n\n\t* configure.ac, pump.in:\n\t  \n\t  Make the identification of Python 'binaries' more robust.\n\t  \n\t  Use the distutil function that generates the library name for locating\n\t  the\n\t  Python stuff in an installation.\n\t  \n\t  Reviewers: Fergus Henderson, Craig Silverstein\n\t  Test: make distcheck\n\n2008-05-09 23:17  Nils Klarlund <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Speed-up integration/systems tests.\n\n2008-05-09 21:02  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Add \"daemon-installcheck\" target.\n\t  \n\t  This tests that the distcc daemon is running, and that it and distcc\n\t  and the pump script have been installed correctly, by compiling a\n\t  simple\n\t  hello world program with distcc and distcc-pump.\n\n2008-05-09 20:36  Craig Silverstein <opensource@google.com>\n\n\t* src/lsdistcc.c:\n\t  \n\t  A whitespace-only change. Got rid of spaces at the end of lines, and\n\t  also of tabs. Went through to normalize indents and so forth (some\n\t  functions were using 4-space indents, and others were using 8-space\n\t  indents, which were probably actually originally written as tabs on a\n\t  system with 4-space tabs).\n\t  \n\t  diff -w shows no diffs; this is really whitespace-only.\n\t  \n\t  Tested by making sure the file still compiles.\n\n2008-05-09 20:33  Craig Silverstein <opensource@google.com>\n\n\t* src/lsdistcc.c:\n\t  \n\t  Modify lsdistcc to reduce the number of concurrent fd's it tries to\n\t  open, when the system doesn't support a lot of concurrent fd's (which\n\t  we see by default in freebsd). It uses getrlimit and setrlimit to get\n\t  as many fd's as it can, and then stick to that number.\n\t  \n\t  I modified the main search loop to work in stages, where each stage\n\t  uses at most maxfd's fd's. In the common -- almost universal -- case\n\t  there will only need to be one stage, and the code will behave the\n\t  same as before. In some limited environments, you might see multiple\n\t  stages. You can reproduce this artificially via code like this:\n\t  $ ulimit -SH -n 32 # in sh-like shells\n\t  $ ./lsdistcc\n\t  \n\t  Tested by running manually on a configuration that gives 141 hosts.\n\t  Tested both with many fd's available, and arbitrarily limited to 32\n\t  (via the ulimit command above).\n\t  \n\t  Reviewed by Nils Klarlund\n\n2008-05-09 19:45  Fergus Henderson <opensource@google.com>\n\n\t* packaging/RedHat/init.d/distcc:\n\t  \n\t  Fix a bug in my changes to add 'commands.allow.sh' that broke the\n\t  Debian\n\t  distribution.\n\t  \n\t  There was a spurious assignment to CMDLIST. CMDLIST used for the\n\t  output of /etc/distcc/commands.allow.sh; it is supposed to be set to\n\t  /var/state/distcc/commands.allow. But due to the spurious assignment,\n\t  CMDLIST was being set to /etc/distcc/commands.allow.sh, causing the\n\t  script to overwrite itself.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-09 19:24  Nils Klarlund <opensource@google.com>\n\n\t* packaging/RedHat/rpm.spec:\n\t  \n\t  Fix so that include server record can be found.\n\n2008-05-09 19:23  Fergus Henderson <opensource@google.com>\n\n\t* src/stringmap.c:\n\t  \n\t  Fix what appears to be a bug in the handling of DISTCC_CMDLIST.\n\t  \n\t  The documentation is not very clear, but distccd was documented\n\t  as matching against the last DISTCC_CMDLIST_NUMWORDS words of the\n\t  command, where I think by words they meant directory components.\n\t  For example, if the file refered to by DISTCC_CMDLIST contains the\n\t  line\n\t  \"/usr/bin/i686-blah-blah/gcc\", and DISTCC_CMDLIST_NUMWORDS=2, only\n\t  commands which end in \"/i686-blah-blah/gcc\" would be matched.\n\t  The bug is that a command \"i686-blah-blah/gcc\" should be considered\n\t  to match.\n\t  \n\t  Likewise, if DISTCC_CMDLIST contains the line \"/usr/bin/gcc\", and\n\t  DISTCC_CMDLIST_NUMWORDS is 1 (or not set), then plain \"gcc\" should be\n\t  allowed to match.\n\t  \n\t  Reviewers: Dan Kegel, Craig Silverstein\n\n2008-05-09 18:15  Nils Klarlund <opensource@google.com>\n\n\t* Makefile.in, configure.ac, popt/system.h, src/access.c, src/arg.c,\n\t  src/argutil.c, src/backoff.c, src/bulk.c, src/cleanup.c,\n\t  src/climasq.c, src/clinet.c, src/clirpc.c, src/compile.c,\n\t  src/compress.c, src/cpp.c, src/daemon.c, src/distcc.c, src/dopt.c,\n\t  src/dparent.c, src/dsignal.c, src/exec.c, src/filename.c,\n\t  src/fix_debug_info.c, src/gcc-id.c, src/h_argvtostr.c,\n\t  src/h_compile.c, src/h_dotd.c, src/h_exten.c, src/h_hosts.c,\n\t  src/h_issource.c, src/h_parsemask.c, src/h_sa2str.c, src/h_scanargs.c,\n\t  src/h_strip.c, src/help.c, src/history.c, src/hostfile.c, src/hosts.c,\n\t  src/implicit.c, src/io.c, src/loadfile.c, src/lock.c, src/mon-gnome.c,\n\t  src/mon-notify.c, src/mon-text.c, src/mon.c, src/ncpus.c,\n\t  src/netutil.c, src/prefork.c, src/pump.c, src/remote.c,\n\t  src/renderer.c, src/rpc.c, src/safeguard.c, src/sendfile.c,\n\t  src/serve.c, src/setuid.c, src/snprintf.c, src/srvnet.c, src/srvrpc.c,\n\t  src/ssh.c, src/state.c, src/stats.c, src/strip.c, src/tempfile.c,\n\t  src/timefile.c, src/trace.c, src/traceenv.c, src/util.c, src/where.c,\n\t  src/zeroconf-reg.c, src/zeroconf.c:\n\t  \n\t  Make handling of config.h sound.\n\t  \n\t  (1) Correct order of -Is in Makefile.\n\t  \n\t  (2) remove unnessary PATH modification in configure.ac (this is\n\t  fergus's\n\t  suggestion -- hopefully this will do, this replaces a circumvention\n\t  mechanism I\n\t  had originally concocted.\n\t  \n\t  (3) Fix place of the include of popt in CPPFLAGS.\n\t  \n\t  (4) Convert quoted includes of config.h to angle bracket includes so\n\t  that the\n\t  build version, not the source version, of this file is picked up.\n\t  \n\t  The order of -Is in the build system is wrong: it contradicts the\n\t  VPATH mechanism.\n\t  \n\t  This means that builds in a build directory different from that\n\t  of the source (distribution) directory will find wrong files even\n\t  after the hapless developer has issued only a 'configure' command\n\t  in the source directory (but not actually 'made' any thing\n\t  there). For in that case, the src/config.h will be generated in\n\t  the source directory and this will be the file picked in the\n\t  build directory even if that directory has it's own src/config.h.\n\t  This can lead to wrong builds and it can be hard to diagnose the\n\t  problem.\n\t  \n\t  Currently, this what CPPFLAGS end up being (as found in the\n\t  generated Makefile):\n\t  \n\t  CPPFLAGS = -DHAVE_CONFIG_H -D_GNU_SOURCE \\\n\t  -I../distcc/popt -I../distcc/src \\\n\t  ${DIR_DEFS} \\\n\t  -Isrc -Ilzo \\\n\t  -I\"$(srcdir)/src\" -I\"$(srcdir)/lzo\" \\\n\t  \n\t  Here my source dir was ../distcc.\n\t  \n\t  The presence of '-I../distcc/popt' in front of -Isrc is the exact\n\t  opposite of the semantics of VPATH mechanism, which looks for\n\t  files in the build directory, then in the source directory.\n\t  \n\t  Also, note the remarks in:\n\t  \n\t  http://www.gnu.org/software/autoconf/manual/autoconf.html#Configuration-Headers\n\t  \n\t  (they do not quite correctly discuss the search path, btw).\n\t  \n\t  TESTING: I verified that with a corrupted config.h file in the source\n\t  directory,\n\t  building now succeeds.\n\t  \n\t  Also: make distcheck (it fails the same place as before: this is\n\t  corrected in\n\t  another change of mine --- I'll verify that with that change in place,\n\t  this\n\t  change makes 'make distcheck' succeed.)\n\t  \n\t  REVIEWERS: Fergus Henderson, Craig Silverstein\n\n2008-05-09 18:00  Nils Klarlund <opensource@google.com>\n\n\t* Makefile.in, find_c_extension.sh, include_server/setup.py, pump.in:\n\t  \n\t  Rewrite setup.py and associated logic to fix multiple build problems.\n\t  \n\t  The recent distcheck revealed that paths were set incorrectly for the\n\t  setup.py\n\t  script. Also, as I dug deeper, it turned out that built files were\n\t  placed in\n\t  the src directory (thanks to os.path.join I found in the distutil's\n\t  source code,\n\t  that trips up the location if relative paths contains too many\n\t  '..'s.). [The\n\t  distccheck revealed this!] I didn't like either that setup was run in\n\t  the\n\t  source directory and not from the build directory (that's asking for\n\t  trouble).\n\t  I did't like either that the search path, the list of includes, in\n\t  setup.py was\n\t  handcoded and not simply that of CPPFLAGS. Finally, I was confused by\n\t  _builddir\n\t  being another build directory under $(buildir). I renamed the former\n\t  _include_server to better explain its role.\n\t  \n\t  So, I rewrote most of setup.py (correcting some of the documentation\n\t  strings\n\t  along the way). Also, I partly removed the 'jumping through the hoops'\n\t  gymnastics from the Makefile.\n\t  \n\t  TESTING: 'make distcheck'\n\t  REVIEWERS: csilvers, fergus\n\n2008-05-08 23:18  Fergus Henderson <opensource@google.com>\n\n\t* doc/web/compared.html, doc/web/compilers.html, doc/web/faq.html,\n\t  doc/web/security.html:\n\t  \n\t  Update web pages to correct statements that are no longer accurate for\n\t  distcc 3.0.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-08 19:41  Fergus Henderson <opensource@google.com>\n\n\t* doc/example/README, doc/example/default, doc/example/hosts.allow,\n\t  doc/example/logrotate, doc/example/services, doc/example/xinetd,\n\t  packaging/RedHat/logrotate.d/distcc, packaging/RedHat/rpm.spec:\n\t  \n\t  Revise the doc/example directory:\n\t  - Add README file to the doc/example directory.\n\t  - Add files in doc/example for every system configuration file\n\t  installed or modified by the RPM installation script (rpm.spec).\n\t  - Update some comments in rpm.spec.\n\t  - Some whitespace changes to doc/example/logrotate and\n\t  packaging/RedHat/logrotate.d/distcc to make those two files match.\n\t  - Copy warning from packaging/RedHat/xinetd.d/distcc to\n\t  doc/examples/xinetd.\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-08 16:33  Nils Klarlund <opensource@google.com>\n\n\t* include_server/basics.py:\n\t  \n\t  Make this file mostly conformant with gpylint. There should be no\n\t  semantic\n\t  consequences.\n\t  \n\t  TESTS: make distcheck\n\t  REVIEWER: Fergus Henderson\n\n2008-05-07 23:50  Craig Silverstein <opensource@google.com>\n\n\t* NEWS, doc/web/compared.html, doc/web/compilers.html, doc/web/faq.html,\n\t  doc/web/index.html, doc/web/results.html, doc/web/scenarios.html,\n\t  doc/web/security.html:\n\t  \n\t  Change NEWS links to point to the actual NEWS file, rather than the\n\t  svn history-log for the NEWS file.\n\t  \n\t  Also changed the NEWS file itself to use ^L instead of a ^ + L, for\n\t  the top instance.\n\n2008-05-07 23:03  Fergus Henderson <opensource@google.com>\n\n\t* man/pump.1:\n\t  \n\t  Add a man page for the \"pump\" script.\n\t  \n\t  The contents are similar to the output of \"pump --help\",\n\t  but with a bit more mark-up, and with additional sections\n\t  \"INVOKING LSDISTCC\", \"BUGS\", \"AUTHORS\", \"LICENSE\", and \"SEE ALSO\".\n\t  \n\t  Reviewers: Craig Silverstein, Nils Klarlund.\n\n2008-05-07 18:54  Craig Silverstein <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  The DaemonBadPort test case was not passing in --allow, which is a new\n\t  flag required by distcc 3 (all other tests had been modified to add\n\t  it). We never noticed until now because the distccd command is\n\t  *expected* to fail with a \"bad arguments\" error code -- though the bad\n\t  argument is supposed to be --port, not --allow. So this change gets\n\t  this test actually testing what it's supposed to, again.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-07 18:21  Fergus Henderson <opensource@google.com>\n\n\t* include_server/include_server.py:\n\t  \n\t  Insert \"Usage: \" at the start of the usage message for the include\n\t  server.\n\n2008-05-07 18:01  Craig Silverstein <opensource@google.com>\n\n\t* doc/web, doc/web/compared.html, doc/web/compilers.html,\n\t  doc/web/distcc-green.css, doc/web/distcc-lca-2004.html,\n\t  doc/web/distcc-lca-2004.pdf, doc/web/distcc-lca2003.ps.gz,\n\t  doc/web/distccmon-gnome-2003-09-23-01.png, doc/web/faq.html,\n\t  doc/web/index.html, doc/web/results.html, doc/web/scenarios.html,\n\t  doc/web/security.html:\n\t  \n\t  Add the documentation files, as downloaded from distcc.samba.org. I\n\t  then modified the files slightly, mostly by deleting content that\n\t  referred to files on the samba.org server and replacing them by files\n\t  (or, usually, links) to Google Code. For instance, the 'source' link\n\t  now points to the Google Code svn page for distcc, rather than a page\n\t  holding tarball information. Likewise, the News page now just points\n\t  to the svn trunk's NEWS file.\n\t  \n\t  For the record, here's email from Martin Pool OK-ing this move/copy:\n\t  ---\n\t  From: Martin Pool <mbp@sourcefrog.net>\n\t  Date: Sun, May 4, 2008 at 9:31 PM\n\t  Subject: Re: sources for distcc web site\n\t  To: Fergus Henderson <Fergus Henderson <opensource@google.com>>\n\t  \n\t  Hi,\n\t  \n\t  The sources are at\n\t  <http://sourcefrog.net/archive/distcc-web-200411.tar.bz2>\n\t  \n\t  You are welcome to either work from these or scrape the web site. You\n\t  can make any reasonable use of the text in making a new web site.\n\t  \n\t  --\n\t  Martin <http://launchpad.net/~mbp/ <http://launchpad.net/%7Embp/>>\n\t  ---\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-05 15:31  Fergus Henderson <opensource@google.com>\n\n\t* man/distcc.1, man/distccd.1:\n\t  \n\t  Document Zeroconf support: the \"--zeroconf\" option to distccd\n\t  and the \"+zeroconf\" entry in the distcc hosts list.\n\t  \n\t  Reviewers: Craig Silverstein, Nils Klarlund.\n\n2008-05-05 15:26  Fergus Henderson <opensource@google.com>\n\n\t* man/distcc.1:\n\t  \n\t  Document the -j and --show-hosts options in the man page.\n\t  Also mention that pump mode requires release 3.0 or later,\n\t  and a few other minor corrections.\n\n2008-05-02 23:07  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Change Lsdistcc_Case to work on hosts for which 127.0.0.2 is not a\n\t  loopback address.\n\t  \n\t  Tested by \"(g)make TESTNAME=Lsdistcc_Case single-test\" on both Linux\n\t  and FreeBSD.\n\t  \n\t  Reviewers: Craig Silverstein, Nils Klarlund.\n\n2008-05-02 21:11  Fergus Henderson <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Fix EmptySource_Case test so that it passes with gcc 3.4.x.\n\t  \n\t  Tested by \"(g)make SINGLETEST=EmptySource_Case single-test\"\n\t  on both FreeBSD (gcc 3.4.4) and Linux (gcc 4.0.3).\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-02 19:54  Nils Klarlund <opensource@google.com>\n\n\t* configure.ac, lzo/.stamp-conf.in, popt/.stamp-conf.in:\n\t  \n\t  Explain stamp files and remove unneeded @src_dir@ (which was\n\t  misspelled?).\n\t  \n\t  TESTED: make distcheck\n\t  REVIEWED: Craig Silverstein, Fergus Henderson\n\n2008-05-02 19:09  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in, configure.ac:\n\t  \n\t  For machines without python installed, before this change we'd check\n\t  for that case, but still give an error rc in that case, so the make\n\t  would fail. Now I make sure we don't fail just because we don't have\n\t  python installed.\n\t  \n\t  Also, some machines (solaris 10) don't have a grep with -q, so just\n\t  use >/dev/null insteasd.\n\t  \n\t  Third, we had left out a file to add to the tarball: ontest.py.\n\t  \n\t  Fourth, 'make distcheck' fails a bit on the pump-installcheck. I've\n\t  addressed some of the problems, but others remain.\n\t  \n\t  Finally -- and this is the bulk of the change, line-count wise, I\n\t  added quotes around all variables, so we do the right thing when\n\t  variables have spaces or other shell-meaningful characters in them, as\n\t  indeed they often do on windows machines.\n\t  \n\t  Tested by running 'make check' on various architectures, including\n\t  solaris 10 x86 and cygwin.\n\t  \n\t  Reviewed by Nils Klarlund and Fergus Henderson\n\n2008-05-02 18:49  Fergus Henderson <opensource@google.com>\n\n\t* src/sendfile.c:\n\t  \n\t  Treat ENOTSOCK errors from sendfile() the same way that we treat\n\t  ENONSYS and EINVAL errors: fall back to using read() and write().\n\t  This fixes the failure of SyntaxError_Case and MissingCompiler_Case\n\t  on FreeBSD.\n\t  \n\t  Tested by \"make check\".\n\t  \n\t  Reviewers: Craig Silverstein\n\n2008-05-02 18:17  Nils Klarlund <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Remove .d test case for which gcc stumbles on Mac OS.\n\n2008-05-02 18:11  Craig Silverstein <opensource@google.com>\n\n\t* src/distcc.h:\n\t  \n\t  This adds an #two that's technically needed to compile. Cygwin\n\t  happened to notice this was missing.\n\t  \n\t  Tested by compiling (via 'make') on cygwin and ubuntu.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-02 18:10  Craig Silverstein <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Four improvements to the test framework:\n\t  \n\t  1) While pump-mode requires python 2.4, the test framework is designed\n\t  to work with python 2.2 and later. A few non-2.2 features have snuck\n\t  in though. I replaced them with 2.2-compatible code.\n\t  \n\t  2) The test system used the --ex flag to gdb, which is only supported\n\t  in more recent gdb's. I've changed the code to use --command instead,\n\t  which is supported in old gdb's as well. I also added a workaround\n\t  for a buggy error-message that gdb sometimes emits. See\n\t  http://www.archlinux.org/pipermail/arch/2007-January/013366.html\n\t  \n\t  3) I fixed a regexp for the gcc-options case, to handle correctly\n\t  systems that don't name gcc \"gcc\" (for instance, they might name it\n\t  powerpc-apple-darwin8-gcc-4.0.1).\n\t  \n\t  4) Use shell quoting, when appropriate, to deal with paths that have\n\t  spaces (eg on windows) or other weird characters in them.\n\t  \n\t  Tested by running 'make maintainer-check' on a variety of\n\t  architectures, including os x and cygwin. The tests successfully run\n\t  on all of them (though not all tests successfully pass yet...)\n\t  \n\t  Reviewed by Fergus Henderson and Nils Klarlund\n\n2008-05-02 00:10  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Small wording change, suggested by Nils Klarlund <opensource@google.com>\n\n2008-05-01 23:52  Craig Silverstein <opensource@google.com>\n\n\t* configure.ac:\n\t  \n\t  This test was broken before: I needed to escape [ and ] from m4.\n\t  \n\t  Tested by running configure on a machine with python 2.2 installed.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-05-01 23:51  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Previously, 'make check' was a noop because we do not require python\n\t  to be installed for distcc, but the tests require python. Therefore,\n\t  to run the tests you had to run 'make maintainer-check' instead (since\n\t  maintainers of distcc *do* have to have python installed).\n\t  \n\t  Now, I have 'make check' check if python is installed. If so, it runs\n\t  the tests. Otherwise, it prints a message and exits.\n\t  \n\t  Tested by running 'make check' and 'make installcheck' manually, on\n\t  systems with the various pythons installed as well as a few without.\n\t  \n\t  Code reviewed by Fergus Henderson\n\n2008-05-01 23:02  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in, configure.ac:\n\t  \n\t  Include-server requires python 2.4 or higher, but the test framework\n\t  only requires python 2.2. Check for both, so for folks with python\n\t  2.2 or python 2.3, they can at least run the tests, even if they can't\n\t  install the include-server.\n\n2008-05-01 00:58  Nils Klarlund <opensource@google.com>\n\n\t* include_server/c_extensions_test.py:\n\t  \n\t  Clean up Python code.\n\t  \n\t  -- Do TODOs.\n\t  -- Heed most pylint warnings.\n\n2008-04-30 22:46  Nils Klarlund <opensource@google.com>\n\n\t* Makefile.in, find_c_extension.sh, include_server/c_extensions_test.py,\n\t  pump.in:\n\t  \n\t  Make install-checks work and a lot of clean-up in regards to the\n\t  'checking'\n\t  targets.\n\t  \n\t  - Remove temporary installation for include server tests. The current\n\t  scheme\n\t  doesn't make too much sense: when testing a real installation, the\n\t  include\n\t  server is tested in the separate temporary installation.\n\t  \n\t  Instead, we propose to make the installation tests run only the\n\t  regression\n\t  tests in the 'test' directory, unpumped and pumped. The include server\n\t  is now\n\t  tested as part of maintainer-check only, but run out of the source\n\t  directory,\n\t  except for the C extension module.\n\t  \n\t  - The maintainer-check and the maintainer-install-check now run the\n\t  integration\n\t  test (test/testdistcc.py) also in pump mode.\n\t  \n\t  - A new script, find_c_extension.sh, is added; it finds the location\n\t  of the\n\t  shared library. It is used for both running the include server tests\n\t  and the\n\t  regression tests out of the built (not installed) version of the\n\t  software. It\n\t  was cut of the 'pump' script, which now has been simplified.\n\t  \n\t  - Reorganize the order of affected targets. Introduce\n\t  '###############...' as\n\t  separator between sections of Makefile in a more consistent way. Make\n\t  each\n\t  section consistently declare all the phony targets at the beginning of\n\t  the\n\t  section.\n\t  \n\t  - Introduce DISTCC_INSTALLATION variable to account for the precise\n\t  location\n\t  of the tested binaries in an installation.\n\t  \n\t  - Add verify-binaries-installcheck target to ensure that binaries are\n\t  in this\n\t  location.\n\t  \n\t  - Also, this target reports the location to users:\n\t  \n\t  Make sure all paths below are where you expect them to be:\n\t  **********************************************************\n\t  /home/klarlund/svn-distcc/mybin/installation/bin/distcc\n\t  /home/klarlund/svn-distcc/mybin/installation/bin/distccd\n\t  /home/klarlund/svn-distcc/mybin/installation/bin/distccmon-text\n\t  /home/klarlund/svn-distcc/mybin/installation/bin/lsdistcc\n\t  **********************************************************\n\t  \n\t  \n\t  - Absolutize a couple of relative directory references before they are\n\t  passed to\n\t  scripts, because otherwise things won't work with the disciplined\n\t  approach to\n\t  DISTCC_INSTALLATION.\n\t  \n\t  - Change a randomly generated filename so that it resides in /tmp (in\n\t  c_extensions_test.py) and not inside the build directory tree. Fix up\n\t  logic\n\t  for filenaming to be more secure. This makes 'make distcheck' pass w/o\n\t  permission problems. Also, delete the temporary file and directory\n\t  when\n\t  test passes.\n\t  \n\t  - Make include-server-maintainer-check remove the .out file when test\n\t  passes.\n\t  This makes 'make distcheck' pass the final test of the clean-out.\n\t  \n\t  - Remove the 'Filtering' of the c_extensions_test output. This\n\t  filtering was\n\t  necessary in a previous version that printed all output to stdout to\n\t  reduce\n\t  user confusion. But now the test results go to intermediate files.\n\t  This\n\t  change was forced by the removal of the .out files (above).\n\t  \n\t  REVIEWED: fergus, csilvers.\n\t  \n\t  TESTS: make distcheck\n\t  make maintainer-installcheck\n\t  make include-server-maintainer-check\n\t  make maintainer-check\n\n2008-04-28 21:52  Craig Silverstein <opensource@google.com>\n\n\t* src/sendfile.c:\n\t  \n\t  OS X added sendfile support in 10.5, so add this case to sendfile.c.\n\t  Looking at the man pages, it looks like os x sendfile is pretty much\n\t  the same as BSD's, so I copied much of the code from the existing BSD\n\t  case.\n\t  \n\t  Tested by ensuring the code compiles and links on os x 10.5. No\n\t  attempt to see if it runs correctly, though.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-04-28 19:23  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in, configure.ac, include_server/setup.py, src/compile.c,\n\t  src/distcc.h, src/dotd.c, src/emaillog.c, src/exec.c,\n\t  src/fix_debug_info.c, src/io.c, src/lsdistcc.c, src/netutil.c,\n\t  src/snprintf.c, src/srvrpc.c, src/tempfile.c, src/trace.c, src/util.c:\n\t  \n\t  These changes are enough to get code to compile, and at least some of\n\t  the unittests to pass, on FreeBSD 6.0, Solaris 10 x86, and OS X\n\t  Leopard. You have to use gmake instead of standard bsd make, though,\n\t  because neither bsd nor solari make understand 'include */*.d' and\n\t  'CFLAGS += $(POPT_FLAGS).' These may be fixable later.\n\t  \n\t  Most changes fall into four categories:\n\t  1) #include differences\n\t  2) New errors due to some #ifdef paths being taken differently\n\t  3) Undefined functions (see, eg, the new HAVE_STRSEP)\n\t  4) Type differences (eg tv_usec is an int on os x, not a long int)\n\t  \n\t  As one concrete example, snprintf.c is an empty file on linux, where\n\t  all the functionality is part of glibc. But on Solaris, some of its\n\t  functionality is useful. This turned up a bug where if you have\n\t  vsnprintf on your system but not vasnprintf, then dopr() was not being\n\t  used but was being defined, leading to an \"unused static function\"\n\t  warning in gcc.\n\t  \n\t  As another, solaris would complain about \"index\" being used as a\n\t  variable, since it's also a function name. The var was renamed idx.\n\t  \n\t  Tested by compiling on FreeBSD, Solaris 10, and OS X leopard (x86). I\n\t  also compiled and ran unittests under Linux Ubuntu, to make sure\n\t  this change didn't break anything there.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-04-25 06:29  Craig Silverstein <opensource@google.com>\n\n\t* include_server/include_analyzer_test.py,\n\t  include_server/test_data/symlink_farm/foo,\n\t  include_server/test_data/symlink_farm/sub_farm/link_to_dd_dd_dfoo_include_dotdot_foo[CPY],\n\t  include_server/test_data/symlink_farm/sub_farm/link_to_dotdot_dotdot_dfoo_include_dotdot_foo[DEL]:\n\t  \n\t  Some older versions of tar have problems with filenames > 100\n\t  characters. To maximize compatibility, I renamed the only file we\n\t  have that is close to that limitation, to be shorter.\n\n2008-04-24 06:40  Craig Silverstein <opensource@google.com>\n\n\t* configure.ac:\n\t  \n\t  Neglected to commit this with the Makefile.am changes from last time,\n\t  though it's needed to define UNINSTALL_GNOME.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-04-24 05:39  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Add uninstall targets, to undo the effects of 'make install'. I try\n\t  to be semi-smart about deleting empty directories.\n\t  \n\t  Unfortunately, python's setup.py does not have an --uninstall mode, so\n\t  I can only uninstall the include-server if a python-record-file was\n\t  preserved during make install. This record-file must be passed in for\n\t  make uninstall as well.\n\t  \n\t  Tested by running 'make install' followed by 'make uninstall' on my\n\t  local machine.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-04-23 00:40  Craig Silverstein <opensource@google.com>\n\n\t* TODO:\n\t  \n\t  Update the TODO file to add an entry on better non-ELF support. Also\n\t  get rid of the TODO for Latte, since we're not going to be using any\n\t  doc-template system on Google Code.\n\t  \n\t  While in the area, normalize a little bit the number of blank lines\n\t  between entries (I try to make it 2).\n\n2008-04-19 23:40  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in, configure.ac, packaging/googlecode_upload.py:\n\t  \n\t  Fix some bugs in the googlecode-upload script, and modify the upload\n\t  target in the Makefile to call it. Also added googlecode_upload.py to\n\t  the dist tarball.\n\t  \n\t  Also update the version number to prerelease2. As part of testing\n\t  this change, I actually uploaded the tarballs and rpm files to\n\t  code.google.com.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-04-18 19:19  Nils Klarlund <opensource@google.com>\n\n\t* Makefile.in, test/comfychair.py:\n\t  \n\t  Rename directory testtmp to _testtmp in line with our current practice\n\t  for\n\t  generated directories.\n\n2008-04-18 18:51  Craig Silverstein <opensource@google.com>\n\n\t* .:\n\t  \n\t  Another auto-generated file I had forgotten last time.\n\n2008-04-18 18:32  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in, packaging/RedHat/conf,\n\t  packaging/RedHat/conf/clients.allow,\n\t  packaging/RedHat/conf/commands.allow.sh, packaging/RedHat/conf/hosts,\n\t  packaging/RedHat/default, packaging/RedHat/default/distcc,\n\t  packaging/RedHat/init.d/distcc, packaging/RedHat/rpm.spec:\n\t  \n\t  A bunch of changes to the configuration files and installation:\n\t  \n\t  (1) Remove the Google crosstool-specific stuff from\n\t  packaging/RedHat/init.d/distcc; instead, make it\n\t  source a new configuration file \"commands.allow.sh\".\n\t  \n\t  (2) Install default versions of all the configuration files\n\t  in $(sysconfdir), i.e. /etc:\n\t  distcc/hosts, distcc/clients.allow, commands.allow.sh,\n\t  and defaults/distcc.\n\t  \n\t  (3) Fix a bug in Makefile.in: \"make install\" didn't work when you\n\t  configured with srcdir != builddir. Added \"$(srcdir)/\" in various\n\t  places to make it work. (There's similar problems with \"make dist\",\n\t  but I gave up on those for now.)\n\t  \n\t  (4) Add \"install-deb\" rule, to install the \".deb\" files.\n\t  \n\t  (5) Don't run install-for-include-server-tests as part of \"make\n\t  install\".\n\t  That target is part of \"make check\", not \"make install\".\n\t  \n\t  (6) Add missing dependency on \"include-server\" to \"pump-check\" rule.\n\t  \n\t  (7) Remove some bash-isms from the \"init.d/distcc\" script.\n\t  \n\t  Tested by running \"make install-deb\" followed by\n\t  \"distcc /usr/bin/gcc -c foo.c\" - this now works \"out-of-the-box\"! :->\n\t  \n\t  Also ran \"make maintainer-check\" and \"make pump-check\".\n\n2008-04-18 16:01  Fergus Henderson <opensource@google.com>\n\n\t* autogen.sh:\n\t  \n\t  Address review comments on an earlier change:\n\t  - autogen.sh now uses \"#!/bin/sh -e\" rather than \"|| exit 1\"\n\t  everywhere.\n\t  - autogen.sh now determines srcdir automatically from $0\n\t  - autogen.sh no longer tells you to run \"./configure --srcdir=.\".\n\n2008-04-18 15:13  Nils Klarlund <opensource@google.com>\n\n\t* test/testdistcc.py:\n\t  \n\t  Fix-up test in regard to angle bracket includes of non-existent files\n\t  in order\n\t  to explicitly accommodate the rather strange difference between\n\t  running gcc\n\t  locally and running it remotely in pump mode. In the former case, gcc\n\t  fails\n\t  with an error message; in the latter it succeeds and the error has\n\t  been demoted\n\t  to a warning.\n\t  \n\t  TESTING:\n\t  make maintainer-check\n\t  make pump-check\n\n2008-04-18 08:59  Fergus Henderson <opensource@google.com>\n\n\t* man/distccd.1:\n\t  \n\t  The --allow option to distccd is no longer optional.\n\t  Update the distccd man page to better reflect that.\n\n2008-04-18 06:53  Craig Silverstein <opensource@google.com>\n\n\t* ., lzo, packaging, popt, src, test:\n\t  \n\t  Update the svn:ignore property on these directories, so 'svn status'\n\t  doesn't show the auto-generated files that can show up, such as\n\t  distcc.d or config.h.in.\n\n2008-04-18 06:37  Craig Silverstein <opensource@google.com>\n\n\t* packaging/googlecode_upload.py:\n\t  \n\t  Add distcc-specific code to googlecode_upload. This allows us to\n\t  upload all the package files we create in one fell swoop (they must be\n\t  specified on the commandline). We figure out the summary to give to\n\t  each file and the label to apply, and then upload each in turn.\n\t  \n\t  I've also turned off the feature to figure out the name and password\n\t  directly from the local svn repository, because that feature is broken\n\t  (alas), with the current python-subversion bindings. Instead, I\n\t  prompt for them, but at least it's only once per upload as opposed to\n\t  once per file!\n\t  \n\t  Not yet tested (will do so when I add to the Makefile to actually use\n\t  it).\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-04-18 01:12  Nils Klarlund <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Add missing dependency on pump for target pump-check and\n\t  pump-installcheck. To\n\t  do so, introduce new phony intermediate target. Add TODO about the\n\t  `pwd` in\n\t  maintainer-installcheck target.\n\n2008-04-18 01:08  Fergus Henderson <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Fix missing line continuation in a Makefile rule.\n\t  \n\t  Also, use \"@\" to avoid printing out a line with disturbing contents\n\t  (\"ERROR\")\n\t  during normal successful test execution.\n\n2008-04-18 01:05  Fergus Henderson <opensource@google.com>\n\n\t* autogen.sh:\n\t  \n\t  Support running autogen.sh in the build directory, rather than the\n\t  source directory.\n\t  Now the source directory should be completely untouched, so we should\n\t  be able\n\t  to autogen, configure, and build even if the source directory is\n\t  read-only.\n\n2008-04-18 01:03  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Quick fix to my previous commit: I have to make sure every Make line\n\t  ends in success, when it in fact succeeds. Thus you need to use ||\n\t  sometimes instead of &&.\n\n2008-04-18 01:00  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in:\n\t  \n\t  Augment 'make distcheck' to ensure that 'make', 'make check', 'make\n\t  install', etc. only write into builddir and instdir, not srcdir. In\n\t  the process, fixed up a typo -- introduced when I merged all the\n\t  Makefile.in's -- that affected us in the (common) case DISTDIR is the\n\t  empty string.\n\t  \n\t  Tested by running 'make distcheck'.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-04-18 00:07  Craig Silverstein <opensource@google.com>\n\n\t* packaging/googlecode_upload.py:\n\t  \n\t  Add googlecode_upload.py, a script to help upload tarballs and package\n\t  files to the Google Code location of distcc. This is the version as\n\t  downloaded from the web, at\n\t  http://support.googlecode.com/svn-history/r57/trunk/scripts/googlecode_upload.py\n\t  \n\t  After this pristine version is checked in, we'll hack on it to add\n\t  some distcc-specific features (multiple uploads, etc). We'll also add\n\t  it to the Makefile at that time, both to use ('make upload') and as\n\t  part of the distribution (hey, why not).\n\n2008-04-17 22:27  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in, build-distcc.sh[DEL], distcc.spec[DEL],\n\t  packaging/RedHat/rpm.spec[CPY], packaging/deb.sh,\n\t  packaging/rpm.sh[CPY]:\n\t  \n\t  Add 'make rpm' to make the rpm files for this project (much like 'make\n\t  dist' makes a tar.gz file), and 'make deb' to make the deb files.\n\t  'make alldist' will make all three (well, four): .tar.gz, .tar.bz2,\n\t  .rpm, and .deb.\n\t  \n\t  The rpm.spec file that's used is based on the old distcc.spec file,\n\t  which is now deleted. However, it's reordered to look a bit more like\n\t  other spec files for Google projects, removes the obsolete\n\t  'include-server' package (that's now part of the distcc package\n\t  proper), and takes out all the ChangeLog entries that don't relate to\n\t  the spec file in particular.\n\t  \n\t  I also added a script, rpm.sh, to build the rpm file, which is a\n\t  combination of the rpm.sh script used to build other google projects,\n\t  and the existing build-distcc.sh, which is now deleted. Mostly it\n\t  just calls rpmbuild with the right flags. deb.sh could have re-done\n\t  all the work that rpm.spec and rpm.sh does, but instead we just use\n\t  \"alien\" to convert the rpm to a deb file.\n\t  \n\t  Tested by installing the deb files (both client and server) on my home\n\t  machine and then running 'make maintainer-installcheck'.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-04-17 05:42  Fergus Henderson <opensource@google.com>\n\n\t* README.pump:\n\t  \n\t  Avoid referring to \"the distcc-pump\".\n\t  \n\t  Reviewed by Nils Klarlund.\n\n2008-04-17 02:45  Craig Silverstein <opensource@google.com>\n\n\t* INSTALL, Makefile.in, configure.ac, include_server/setup.py:\n\t  \n\t  Resolve some TODO's in the Makefile (and, to a lesser extent, in\n\t  configure.ac):\n\t  \n\t  1) Create a .gz tarfile as well as a .bz2 tarfile, with \"make dist\".\n\t  I've also added a few more dist rules: \"make rpm\", \"make deb\", and\n\t  \"make alldist\", though currently they're commented out since the\n\t  scripts they call have yet to be written.\n\t  \n\t  2) setup.py looks at os.environ(\"BUILDDIR\"), so make sure that\n\t  environment variable is always set properly.\n\t  \n\t  3) setup.py was hard-coding the version number. Instead, have it get\n\t  it from the environment (\"DISTCC_VERSION\"), and set that envvar\n\t  before calling setup.py in the Makefile. (The alternate solution,\n\t  of making a setup.py.in and having configure set the version number\n\t  in setup.py, did not work well because the Makefile really wants\n\t  setup.py to be in $srcdir, that the configure option puts it in\n\t  builddir.)\n\t  \n\t  4) Clean up distcheck to have three separate directories: src, build,\n\t  and install. Before src and build were the same. This pulled up\n\t  several places that were using srcdir instead of builddir, which I\n\t  fixed.\n\t  \n\t  5) Clean up distcheck to make sure that 'make distclean' cleans all\n\t  the build files created during the build. At first it didn't\n\t  quite, so I fixed that up as well.\n\t  \n\t  6) Added some new files to 'make dist': particularly, the files used\n\t  to build rpm and deb files.\n\t  \n\t  7) Have maintainer-check and maintainer-installcheck both call the\n\t  same routine (via recursive make) rather than copy all that code.\n\t  This simplifies things surprisingly, especially since the main\n\t  check logic no longer has be inside a big \"if $(PYTHON)\".\n\t  \n\t  8) (Various rules:) replace $^, which is not very portable, with a\n\t  repetition of the dependency line.\n\t  \n\t  9) Rename GZIP to GZIP_BIN, since GZIP as an envvar is read by gzip\n\t  and parsed as gzip options.\n\t  \n\t  10) In include_server/setup.py, we weren't setting builddir/src as an\n\t  include dir, and it needs to be (as 'make distcheck' shows). I'm\n\t  not sure builddir/../../src really needs to be anymore, but I guess\n\t  it can't hurt, so I've left it in.\n\t  \n\t  11) Updated INSTALL to refer to autogen.sh, which will create\n\t  configure if it's not already there.\n\n2008-04-15 02:23  Nils Klarlund <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Clean logic and error messaging in pump script.\n\t  \n\t  - There were missing error messages.\n\t  - Some of them did not go to stderr.\n\t  - Global variable include_server_started_successfully was ugly.\n\t  Changed to a\n\t  status variable.\n\t  - Also, joined some lines that were joinable.\n\t  - Fixed a spurious parameter to a function ExportDISTCC_HOSTS. Added a\n\t  parameter to same function.\n\t  \n\t  Tests\n\t  -----\n\t  \n\t  Can run 'pump-check'.\n\t  \n\t  Also, when I forced more than one C extension, I get the following\n\t  tirade.\n\t  \n\t  __________Using distcc-pump from /home/klarlund/svn-distcc/distcc\n\t  __________Shared libraries for multiple architectures discovered.\n\t  __________Cannot determine which one to use among:\n\t  ./_builddir/lib.blah/include_server/distcc_pump_c_extensions.so\n\t  ./_builddir/lib.linux-x86_64-2.4/include_server/distcc_pump_c_extensions.so\n\t  __________Could not start distcc-pump include server\n\n2008-04-14 23:17  Craig Silverstein <opensource@google.com>\n\n\t* ChangeLog:\n\t  \n\t  Added some Google-branch changes to the ChangeLog file, now that we've\n\t  integrated them back into the main branch in preparation for distcc\n\t  3.0. These messages were taken from the rpm.spec ChangeLog, where\n\t  they had been living before. I can't say that it's a complete list of\n\t  google-branch patches, but it's a good started.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-04-14 17:11  Nils Klarlund <opensource@google.com>\n\n\t* pump.in:\n\t  \n\t  Fix up pump.in:\n\t  \n\t  - Rename DISTCC_PUMP_LOCATION because there is now no distinct such\n\t  entity.\n\t  \n\t  - Comment 'return 0'.\n\t  \n\t  - Fix logic in Main so that script aborts when include server not\n\t  started.\n\t  \n\t  - Add missing line: include_server_started_successfully=0.\n\n2008-04-12 00:58  Craig Silverstein <opensource@google.com>\n\n\t* Makefile.in, autogen.sh, bench/Build.py, bench/Project.py,\n\t  bench/ProjectDefs.py, bench/Summary.py, bench/actions.py,\n\t  bench/benchmark.py, bench/buildutil.py, bench/compiler.py,\n\t  bench/statistics.py, configure.ac, distcc[DEL],\n\t  include_server/basics.py, include_server/setup.py, pump.in:\n\t  \n\t  The second part of my change to hoist everything in the distcc/\n\t  directory up to the top level: delete the distcc directory (I already\n\t  copied it all to the top level in my last commit).\n\t  \n\t  This requires changing all files that refer to distcc/FOO to refer\n\t  directly to FOO instead. Mostly this is Makefile.in and setup.py, but\n\t  there are a few other changes in scripts that have to hard-code paths,\n\t  like configure.ac and pump.in. Also, several files changed their\n\t  comments to refer to the new location, which isn't strictly necessary\n\t  but I did anyway.\n\t  \n\t  The only other change I made was to get rid of the hack I had put in\n\t  before, which renamed distcc to distcc-bin. I had needed to do that\n\t  before, temporarily, because \"distcc\" was already the name of a\n\t  directory, and couldn't also be the name of a binary. Now that the\n\t  distcc directory is going away, I can rename the target back to\n\t  distcc.\n\t  \n\t  Tested by running './autogen; ./configure; make maintainer-check'.\n\t  I also ran 'make pump-check' and 'make distcheck'.\n\t  \n\t  To be reviewed (post-facto) by Nils Klarlund and\n\t  Fergus Henderson <opensource@google.com>\n\n2008-04-11 22:36  Craig Silverstein <opensource@google.com>\n\n\t* bench[CPY], contrib[CPY], doc[CPY], gnome[CPY], lzo[CPY], m4[CPY],\n\t  m4/pkg.m4[CPY], man[CPY], packaging[CPY], popt[CPY], src[CPY],\n\t  survey.txt[CPY], test[CPY]:\n\t  \n\t  The first step of moving everything in the distcc directory to the top\n\t  level. I'm doing this in two stages, because I don't understand svn\n\t  enough to be confident to do it in one. This first stage just copies\n\t  all the files from distcc/FOO to FOO. Now there are two copies of\n\t  each file under distcc; the Makefile/etc uses the one in distcc and\n\t  ignores the one at the top level.\n\t  \n\t  The next commit will delete everything under distcc, and rewrite the\n\t  Makefile/etc to use the top-level versions instead.\n\n2008-04-11 22:20  Craig Silverstein <opensource@google.com>\n\n\t* INSTALL, Makefile.in[CPY], autogen.sh[CPY], build-distcc.sh,\n\t  config.guess[CPY], config.sub[CPY], configure.ac[CPY],\n\t  distcc/Makefile.in[DEL], distcc/autogen.sh[DEL],\n\t  distcc/config.guess[DEL], distcc/config.sub[DEL],\n\t  distcc/configure.ac[DEL], distcc/install-sh[DEL], distcc/m4/pkg.m4,\n\t  distcc/mkinstalldirs[DEL], include_server/Makefile.in[DEL],\n\t  include_server/configure.ac[DEL], include_server/setup.py,\n\t  install-sh[CPY], mkinstalldirs[CPY], pump.in,\n\t  run_all_autoconf.sh[DEL], version.sh[DEL]:\n\t  \n\t  Merge configure.ac, distcc/configure.ac, and\n\t  include_server/configure.ac into a single, top-level configure.ac\n\t  script. Likewise with the three Makefile.in scripts. Now one config\n\t  file at the top level controls everything.\n\t  \n\t  I had to rewrite quite a bit of code to account for the new level-up.\n\t  In particular, I had to add \"distcc/\" in front of many things in order\n\t  to refer to the same files I used to refer to when the\n\t  configure.ac/Makefile.in text lived in the distcc/ directory rather\n\t  than the top-level directory. Likewise (though to a lesser extent)\n\t  for include_server.\n\t  \n\t  I also had to do a bit of merge work. Typically I'd leave the\n\t  originally-distcc-directory content as close to the original as\n\t  possible, and then try to put in the include_server directory stuff.\n\t  \n\t  Most of the top-level configure.ac and Makefile.in could go away,\n\t  since they were glue before. I also could get rid of other top-level\n\t  helper scripts that were used for the glue, such as version.sh.\n\t  \n\t  I also fixed a number of typos and other bugs:\n\t  \n\t  Makefile.in:\n\t  1) Removed obsolete CVS comment (we're 3 source-control systems past\n\t  that now!)\n\t  \n\t  2) distcc/Makefile.in was using top_builddir without importing it from\n\t  the configure script.\n\t  \n\t  3) Add zeroconf.h to HEADERS, which is needed for 'make dist'. I also\n\t  added all the include_server files to 'make dist'.\n\t  \n\t  4) \"make dist\" was passing 'h' (\"no symlinks\") to tar. This does not\n\t  work with the include_server test-suite, which includes symlinks.\n\t  I verified no other part of the distribution uses symlinks.\n\t  Removed the h.\n\t  \n\t  5) \"make dist\" was missing a lot of stuff (including almost all the\n\t  include-server files). Updated it to get it all now. Likewise,\n\t  updated \"make clean\" and its cousins to be more precise. Also made\n\t  \"make distcheck\" more careful in checking that kind of thing.\n\t  \n\t  6) Declared more phony targets .PHONY.\n\t  \n\t  7) The include-server build commands do a lot of 'cd'-ing (since\n\t  setup.py requires it), and then using make variables that might\n\t  store relative directory paths. I now go through some hoops to\n\t  make those directory paths absolute before the cd.\n\t  \n\t  8) \"make pump-check\" was not setting the path, so it was using the\n\t  installed distcc instead of the local one in the client. Fixed\n\t  that, and added a new target, \"make pump-installcheck\", to use the\n\t  installed distcc instead (parallel to the maintainer-check and\n\t  maintainer-installcheck targets).\n\t  \n\t  configure.ac:\n\t  1) popt test was using $srcdir rather than required ${srcdir}, and\n\t  thus was always getting the empty string. (Luckily, srcdir is\n\t  usually \".\", and the empty string is usually equivalent.)\n\t  Likewise when setting CPPFLAGS, which again didn't matter because\n\t  it turns out the relevant code was redundant with what autoconf\n\t  already does automatically.\n\t  \n\t  2) A merge error: apparently the avahi check was added twice. Get rid\n\t  of the second one.\n\t  \n\t  3) Was using obsolete AC_OUTPUT format. Use AC_CONFIG_FILES instead.\n\t  \n\t  4) Added pkg.m4 to the m4/ directory. Before it only lived in\n\t  autoconf.m4. But my system, at least, doesn't have it.\n\t  \n\t  5) include-server requires python2.4, so remove checks for earlier\n\t  pythons.\n\t  \n\t  autogen.sh:\n\t  1) Added aclocal call. I think it was a bug that it was left out\n\t  before.\n\t  \n\t  pump.in:\n\t  1) Fixed it to notice when it can't find the .so file it needs.\n\t  \n\t  I also modified INSTALL to point to the new file locations, and the\n\t  new instructions to run them (eg no more run_all_autoconf.sh).\n\t  \n\t  Despite all these bugfixes, I made the minimal changes possible to get\n\t  things to work. I marked with \"TODO\" further improvements I'd like to\n\t  make later.\n\t  \n\t  One particular TODO is that I had to rename the \"distcc\" target -- the\n\t  main executable -- because it conflicts with the existing distcc\n\t  directory. This is a temporary breakage which will be fixed in the\n\t  next submit after this one, where I move the subdirs under distcc to\n\t  the top level, getting rid of the artificial extra directory\n\t  introduced.\n\t  \n\t  Tested by running 'make maintainer-check', 'make distcheck', and 'make\n\t  pump-check' on my local machine, which passed. I've not tested all\n\t  the various configurations and options (including using avahi, using\n\t  the library popt library, building without python, etc). I've also\n\t  not tried 'make benchmark'.\n\t  \n\t  Reviewed by Nils Klarlund and Fergus Henderson\n\n2008-04-11 20:40  Fergus Henderson <opensource@google.com>\n\n\t* README.pump:\n\t  \n\t  Update README.pump to better describe performance on small clusters.\n\n2008-04-11 18:45  Fergus Henderson <opensource@google.com>\n\n\t* distcc/Makefile.in:\n\t  \n\t  In the rule for 'make pump-check', set DISTCC_HOSTS, so that\n\t  'pump' won't complain that it isn't set.\n\n2008-04-10 00:27  Craig Silverstein <opensource@google.com>\n\n\t* distcc/README[DEL]:\n\t  \n\t  I meant to delete this as part of my last commit, but apparently\n\t  neglected to...\n\n2008-04-09 23:19  Craig Silverstein <opensource@google.com>\n\n\t* AUTHORS[CPY], ChangeLog[CPY], INSTALL, NEWS[CPY], README,\n\t  README.packaging[CPY], README.pump[CPY], TODO[CPY],\n\t  distcc/AUTHORS[DEL], distcc/COPYING[DEL], distcc/ChangeLog[DEL],\n\t  distcc/ChangeLog.old[DEL], distcc/INSTALL[DEL], distcc/NEWS[DEL],\n\t  distcc/README.packaging[DEL], distcc/TODO[DEL]:\n\t  \n\t  Take these human-readable files and normalize their content and\n\t  location:\n\t  README Our blurp, tooting our horn\n\t  INSTALL The run_all_autoconf and friends incantations\n\t  COPYING GPL 2.0 license\n\t  distcc/README Martin's blurp\n\t  distcc/INSTALL Also: more on masquerading, host lists,\n\t  distcc/COPYING GPL 2.0 license\n\t  distcc/NEWS Recently updated\n\t  distcc/AUTHORS Martin Pool\n\t  distcc/README.packaging Various advice (version numbering etc)\n\t  distcc/TODO A very long list (not updated)\n\t  distcc/ChangeLog All changes under arch and under bzr\n\t  distcc/ChangeLog.old All changes from before arch.\n\t  \n\t  Now all live in the top-level directory. This is the first step\n\t  towards our eventual goal of getting rid of the second-level distcc\n\t  and include_server directories, and just having everything under one\n\t  top-level directory. We're all part of the same project now!\n\t  \n\t  Here's how I merged and updated content:\n\t  \n\t  . README became README.pump. It was slightly edited for clarity. (I\n\t  also redid all the line-wrapping, which makes diff-ing\n\t  difficult. :-( ) distcc/README became README, with a small amount\n\t  of text added to describe 'pump' mode, and point to README.pump.\n\t  \n\t  . distcc/NEWS became NEWS. pump functionality was added (a new\n\t  \"distcc-3.0\" entry). I also added all new features and bug-fixes\n\t  since we moved from arch to bzr. It looks like NEWS was\n\t  well-maintained before the move to bzr, so this might be pretty\n\t  complete. There may be some more pump-developed bugfixes we need to\n\t  add, though.\n\t  \n\t  . I got rid of distcc/COPYING. Now COPYING is the only license in\n\t  this directory. This file was not changed. It remains the GPL 2.0\n\t  license.\n\t  \n\t  . distcc/AUTHORS became AUTHORS. I changed Martin to maintainer\n\t  emeritus. I added the Google authors as authors of the \"pump\"\n\t  functionality, and current maintainers. I set the Google email\n\t  address to be distcc@googlegroups.com, which is a new group I've set\n\t  up to be the clearinghouse for distcc discussions.\n\t  \n\t  . distcc/README.packaging became README.packaging. It was not\n\t  otherwise changed.\n\t  \n\t  . distcc/TODO became TODO. It was not otherwise changed, except I\n\t  added that folks should look for FIXMEs in source files, not just\n\t  TODOs.\n\t  \n\t  . I merged INSTALL and distcc/INSTALL (in that order). I rearranged\n\t  the text a little bit to remove redundancy (both talked about\n\t  running 'configure'), but did not make any contentful changes.\n\t  \n\t  . I merged distcc/ChangeLog and distcc/ChangeLog.old to have a single\n\t  changelog again going all the way to 2002. Comments now separate\n\t  the various version control systems used. (svn is #4!) The single\n\t  ChangeLog file now lives in the top-level directory.\n\n2008-04-09 23:11  Craig Silverstein <opensource@google.com>\n\n\t* distcc/ChangeLog, distcc/Makefile.in, distcc/configure.ac, distcc/m4,\n\t  distcc/m4/acx_pthread.m4, distcc/src/distcc.c, distcc/src/distcc.h,\n\t  distcc/src/dopt.c, distcc/src/dopt.h, distcc/src/dparent.c,\n\t  distcc/src/gcc-id.c, distcc/src/help.c, distcc/src/hostfile.c,\n\t  distcc/src/hosts.c, distcc/src/io.c, distcc/src/tempfile.c,\n\t  distcc/src/zeroconf-reg.c, distcc/src/zeroconf.c,\n\t  distcc/src/zeroconf.h:\n\t  \n\t  Integrate the following post-bzr (post 2.18.3) patch from the mainline\n\t  distcc sources (http://bazaar.launchpad.net/%7Embp/distcc/trunk/):\n\t  \n\t  % bzr log -r3\n\t  message: merge avahi patch from Lennart Poettering\n\t  \n\t  (This patch comes from http://0pointer.de/public/distcc-avahi.patch,\n\t  which is the version of the patch I applied, since the one in the bzr\n\t  repository was missing the new files from the avahi patch.)\n\t  \n\t  I've also manually updated ChangeLog, which is not automatically\n\t  updated by bzr the same way it is by arch.\n\t  \n\t  I've also added a new m4 directory, including non-standard autoconf\n\t  macros that we use. For now, it only includes ACX_PTHREAD (added by\n\t  the avahi patch) which I got from 0pointer.de. See the notes at the\n\t  top of m4/acx_pthread.m4 for more details.\n\t  \n\t  I removed the change to Makefile.in that added in distccmon-gnome.1.\n\t  This file is not actually added in as part of this patch (it seems to\n\t  be part of a separate patch, at\n\t  http://patches.ubuntu.com/d/distcc/extracted/02_distccmongnome_man.dpatch),\n\t  and may have gotten in here by accident.\n\t  \n\t  Tested by running 'make maintainer-check'. However, I did not test\n\t  with avahi installed, so I don't know how well that works.\n\t  \n\t  Reviewed by Fergus Henderson and Nils Klarlund\n\n2008-04-09 16:21  Fergus Henderson <opensource@google.com>\n\n\t* version.sh:\n\t  \n\t  Change the version number from \"distcc 2.18.3-17gg1.pump20\" (ugh!)\n\t  to \"distcc 3.0-prerelease1\".\n\n2008-04-09 00:38  Craig Silverstein <opensource@google.com>\n\n\t* distcc/ChangeLog, distcc/NEWS, distcc/src/lock.c:\n\t  \n\t  Integrate the following post-bzr (post 2.18.3) patches -- all of them,\n\t  so far -- from the mainline distcc sources\n\t  (http://bazaar.launchpad.net/%7Embp/distcc/trunk/):\n\t  \n\t  % bzr log -r2\n\t  message: Add more ignored files\n\t  % bzr log -r4\n\t  message: Locks taken through F_SETLK or lockf() must be\n\t  explicitly released, because closing the file does not do\n\t  so. (Sascha Demetrio)\n\t  \n\t  r2 is a noop for us, since it just updates a .bzr config file (which\n\t  we may want to update in svn-land too, one day, but not for now).\n\t  \n\t  r3, not part of this CL, is the \"avahi\" patch\n\t  (http://0pointer.de/public/distcc-avahi.patch). It was imperfectly\n\t  applied: the new files that are part of this patch were not added to\n\t  the bzr repository. We're following up with the patch-applier to see\n\t  if these files can be taken verbatim from the patch in the 0pointer\n\t  website. We'll also have to audit this patch to make sure it works\n\t  with distcc-pump without needing any changes. For those reasons,\n\t  we'll apply that patch in a separate change.\n\t  \n\t  I've also manually updated ChangeLog, which is not automatically\n\t  updated by bzr the same way it is by arch.\n\t  \n\t  Tested by running 'make maintainer-check'.\n\t  \n\t  Reviewed by Nils Klarlund\n\n2008-03-31 04:38  Craig Silverstein <opensource@google.com>\n\n\t* distcc/ChangeLog, distcc/Makefile.in, distcc/NEWS,\n\t  distcc/man/distcc.1, distcc/src/clinet.c:\n\t  \n\t  Integrate the following post-2.18.3 patches from the mainline\n\t  distcc sources (distcc--devel--2/mbp@sourcefrog.net--2004):\n\t  \n\t  % tla cat-log patch-179:\n\t  Summary: More details on error 110\n\t  % tla cat-log patch-180:\n\t  Summary: draft patch for substituting compiler command name\n\t  % tla cat-log patch-181:\n\t  Summary: fix error check in dcc_connect_by_add\n\t  % tla cat-log patch-182:\n\t  Summary: build fix for --as-needed\n\t  % tla cat-log patch-183:\n\t  Summary: ignore tags file\n\t  \n\t  Note only one of these (patch-181) affects code in the src/\n\t  directory.\n\t  \n\t  Tested by running 'make maintainer-check'.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-03-29 19:19  Craig Silverstein <opensource@google.com>\n\n\t* distcc/ChangeLog, distcc/NEWS, distcc/autogen.sh,\n\t  distcc/bench/ProjectDefs.py, distcc/configure.ac, distcc/src/exec.c,\n\t  distcc/src/exitcode.h, distcc/src/io.c, distcc/src/tempfile.c,\n\t  distcc/test/comfychair.py, distcc/test/testdistcc.py:\n\t  \n\t  Integrate the following post-2.18.3 patches from the mainline\n\t  distcc sources (distcc--devel--2/mbp@sourcefrog.net--2004):\n\t  \n\t  % tla cat-log patch-167:\n\t  Summary: - better autogen message\n\t  % tla cat-log patch-168:\n\t  Summary: use python2.4 if available\n\t  % tla cat-log patch-169:\n\t  Summary: bump version number\n\t  % tla cat-log patch-170:\n\t  Summary: return error on timeout in dcc_select_for_write\n\t  % tla cat-log patch-171:\n\t  Summary: doc\n\t  % tla cat-log patch-172:\n\t  Summary: doc\n\t  % tla cat-log patch-173:\n\t  Summary: [patch] cygwin improvements from Alex Besogonov\n\t  % tla cat-log patch-174:\n\t  Summary: update patch to fix up gdb line numbers\n\t  % tla cat-log patch-175:\n\t  Summary: [patch] update stale benchmark source URLS (Dongmin\n\t  Zhang)\n\t  % tla cat-log patch-176:\n\t  Summary: update benchmark project urls and md5s\n\t  % tla cat-log patch-177:\n\t  Summary: Update more benchmark project definitions\n\t  % tla cat-log patch-178:\n\t  Summary: set locale when running make maintainer-check\n\t  \n\t  Note only two of these (patch-170 and patch-173) affect non-comment\n\t  code in the src/ directory. patch-173 introduced an \"unused variable\"\n\t  warning in tempfile.c when run in non-cygwin mode, which I fixed up\n\t  separate to the above patches.\n\t  \n\t  Tested by running 'make maintainer-check'.\n\t  \n\t  Reviewed by Fergus Henderson\n\n2008-03-29 04:40  Craig Silverstein <opensource@google.com>\n\n\t* run_all_autoconf.sh:\n\t  \n\t  Replace the sanity-check in run_all_autoconf.sh with a more accurate\n\t  one.\n\t  \n\t  Reviewed by Nils Klarlund\n\n2008-03-28 22:38  Craig Silverstein <opensource@google.com>\n\n\t* distcc/ChangeLog, distcc/NEWS, distcc/TODO, distcc/man/distcc.1,\n\t  distcc/src/arg.c, distcc/src/clinet.c, distcc/test/testdistcc.py:\n\t  \n\t  Integrate the following post-2.18.3 patches from the mainline\n\t  distcc sources (distcc--devel--2/mbp@sourcefrog.net--2004):\n\t  \n\t  % tla cat-log patch-160:\n\t  Summary: note on .incbin from asm()\n\t  % tla cat-log patch-161:\n\t  Summary: args: -d must be local\n\t  % tla cat-log patch-162:\n\t  Summary: manpage correction from Frerich\n\t  % tla cat-log patch-163:\n\t  Summary: todo\n\t  % tla cat-log patch-164:\n\t  Summary: add note that the mDNS patch cannot be legally merged\n\t  % tla cat-log patch-165:\n\t  Summary: add hosts-from-dnsdomain patch from dan\n\t  % tla cat-log patch-166:\n\t  Summary: [patch] better checking for errors on connect()\n\t  \n\t  Note only two of these (patch-161 and patch-166) affect the\n\t  src/ or test/ directories.\n\t  \n\t  Tested via 'make maintainer-check'.\n\n2008-03-28 17:39  Fergus Henderson <opensource@google.com>\n\n\t* distcc/Makefile.in:\n\t  \n\t  Fix typo.\n\n2008-03-28 17:38  Fergus Henderson <opensource@google.com>\n\n\t* distcc/src/fix_debug_info.c:\n\t  \n\t  Work around spurious gcc warning that was causing trouble with\n\t  -Werror.\n\n2008-03-28 17:30  Fergus Henderson <opensource@google.com>\n\n\t* distcc/src/lsdistcc.c:\n\t  \n\t  Fix a portability issue: compile error on 64-bit platform.\n\n## This is the point at which the code was moved to the svn repository.\n## The changes below this were made in an internal Google repository.\n\n2008/03/03 11:35:34  Fergus Henderson <opensource@google.com>\n\n\tAdd extra \"-I\" option that seems to be needed when building distcc-pump\n\twith Blaze: we need _two_ \"..\"'s to get from $BUILDDIR/include_server/build\n\tto $BUILDDIR/distcc/src/config.h.\n\t\n\tWithout this change, building distcc fails with a compilation\n\terror about \"config.h\" not found when run in a fresh workspace.\n\n\tR=klarlund\n\tDELTA=2  (2 added, 0 deleted, 0 changed)\n\n\t* include_server/setup.py: edit\n\n\n2007/12/14 19:17:16  Fergus Henderson <opensource@google.com>\n\n\tFix a bug which showed up if the include server was run from\n\ta different directory than the distcc clients: in that case,\n\tit was at some times wrongly interpreting relative paths in the\n\t--stat_reset_trigger option as relative to the distcc client's\n\tcwd, rather than the include server's cwd.\n\t\n\tTODO(fergus): add a regression test.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tAPPROVED=klarlund\n\tDELTA=20  (18 added, 2 deleted, 0 changed)\n\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_analyzer_memoizing_node_test.py: edit\n\n\n2007/12/14 10:26:29  Nils Klarlund <opensource@google.com>\n\n\tFix location of stamp file that record autoconf execution.\n\t\n\tThe location was incorrect: the stamp file that pertains to autoconf\n\tmust necessarily be in the source code directory because autoconf'ing is\n\tthe process of generating the configure script. Only the result of\n\tconfiguring is to be carried out in the object directory.\n\t\n\tR=fergus\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* Makefile.in: edit\n\n\n2007/12/13 21:52:59  Nils Klarlund <opensource@google.com>\n\n\tFix typos in Makefile.in.\n\t\n\tR=fergus\n\tDELTA=2  (0 added, 0 deleted, 2 changed)\n\n\t* include_server/Makefile.in: edit\n\n\n2007/12/07 16:19:16  Nils Klarlund <opensource@google.com>\n\n\tThis file is generated by run_all_autoconf.sh and should not be checked\n\tin. (Because that leads to Perforce complaints about 'clobbering'.)\n\t\n\tR=fergus\n\tDELTA=262  (0 added, 262 deleted, 0 changed)\n\n\t* distcc/src/config.h.in: delete\n\n\n2007/12/07 12:57:55  Nils Klarlund <opensource@google.com>\n\n\tFix bug caused by non-idempotency of 'ln' and ensuing falsely positive\n\ttest result.\n\t\n\tSo, it turns out that 'ln -sf' is not idempotent. If C/D and E are\n\tdirectories, then\n\t\n\t     ln -sf $(readlink -f C/D) E/D\n\t\n\tcreates a link E/D -> realpath(C/D) and subsequent\n\t\n\t     ln -sf $(readlink -f C/D) E/D\n\t\n\tcreates a link C/D/D -> realpath(C/D), a self-reference of sorts. This\n\tis nasty because the second link created is in C/D, which was supposed\n\tto be just a target directory, not something to be modified!\n\t\n\tThis bug enabled a faulty test to pass: the directory structure created\n\tby the non-potency bug is not cleaned on make clean. And the existence of\n\tthe inserted extra directory made resolution of a certain include path\n\tpossible when it should not have.\n\t\n\tR=fergus\n\tCC=manos\n\tDELTA=11  (9 added, 0 deleted, 2 changed)\n\n\t* include_server/Makefile.in: edit\n\t* include_server/include_analyzer_test.py: edit\n\n\n2007/12/03 18:37:17  Nils Klarlund <opensource@google.com>\n\n\t\n\tThis version is to incorporate:\n\t\n' Fix bug that leads to concurre'  \t  Change 2007/12/03 by Nils Klarlund <opensource@google.com>\n\t\n\tR=fergus\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* version.sh: edit\n\n\n2007/12/03 16:36:06  Nils Klarlund <opensource@google.com>\n\n\t\n\tFix bug that leads to concurrent build interference: one distcc-pump\n\tbuild will severely affect another. The logic for naming the root\n\tdirectory was flawed: it used the pid of the parent, not the child,\n\twhich is where the include server resides.\n\t\n\tAlso fix less severe bug that allowed the cleaning up to end\n\tprematurely.\n\t\n\tThe code is refactored at the same time -- for better readability and to\n\taddress the parent/child pid confusion.\n\t\n\tThe fix also includes the introduction of an additional communication\n\tmechanism, a semaphor: the child is now starting the include server and\n\tit must tell the parent that it has done so before the parent is allowed\n\tto exit.\n\t\n\tTesting:\n\t\n\t- 'make check'\n\t- Made several concurrent runs and verified that interference no longer\n\t  takes place.\n\t\n\tR=fergus\n\tDELTA=65  (45 added, 1 deleted, 19 changed)\n\n\t* include_server/include_server.py: edit\n\n\n2007/11/29 12:30:45  Nils Klarlund <opensource@google.com>\n\n\t\n\tAdd more meta-dependencies (those that involve autoconf) to the\n\tMakefile.in files and add sanity check to run_all_autoconf.sh.\n\t\n\tThese dependencies should help prevent builds that do not reflect the\n\tconfiguration changes such as to version.sh or configure.ac.\n\t\n\tDependencies are added, so this should be a conservative CL: making\n\tthis build system less fragile.\n\t\n\tTests: patched this CL into a clean client and rebuilt software:\n\t\n\t  ./run_all_autoconf.sh  \t    \n\t\t  ./configure --prefix=$(pwd)/installation\n\t  make\n\t  make install\n\t\n\tR=fergus\n\tDELTA=73  (62 added, 0 deleted, 11 changed)\n\n\t* Makefile.in: edit\n\t* distcc/Makefile.in: edit\n\t* include_server/Makefile.in: edit\n\t* run_all_autoconf.sh: edit\n\n\n2007/11/06 15:58:38  Nils Klarlund <opensource@google.com>\n\n\tPrepare 'pump19'. It contains:\n\t\n'Add basics_test rule to include'  \tChange 2007/11/06 12:43:59 by Nils Klarlund <opensource@google.com>\n' Fix typo and missing condition'  \tChange 2007/11/06 11:51:01 by Nils Klarlund <opensource@google.com>\n'Fix an infinite loop in the inc'  \tChange 2007/11/05 14:11:47 by Nils Klarlund <opensource@google.com>\n' Bump up length of interval tha'  \tChange 2007/11/05 07:25:13 by Nils Klarlund <opensource@google.com>\n' Make the _CleanOutOthers routi'  \tChange 2007/11/02 12:36:27 by Nils Klarlund <opensource@google.com>\n' Increase include server timeou'  \tChange 2007/11/01 14:46:44 by Nils Klarlund <opensource@google.com>\n'Fix buglet: when the contents o'  \tChange 2007/11/01 14:28:22 by Nils Klarlund <opensource@google.com>\n\t\n\tR=fergus\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* version.sh: edit\n\n\n2007/11/06 15:43:59  Nils Klarlund <opensource@google.com>\n\n\tAdd basics_test rule to include_server/Makefile.in. This enables\n\t'make check' to run all tests.\n\t\n\tTest:\n\t\n\t    ./run_all_autoconf.sh; ./configure --prefix=$(pwd)/installation\n\t    make basics_test\n\t    make -C include_server basics_test\n\t    make check\n\t\n\tR=fergus\n\tDELTA=4  (4 added, 0 deleted, 0 changed)\n\n\t* include_server/Makefile.in: edit\n\n\n2007/11/06 14:51:01  Nils Klarlund <opensource@google.com>\n\n\t\n\tFix typo and missing conditional of a previous change, which \"broke\" the build.\n\t\n\tTests:\n\t - make -C include_server check\n\t\n\tR=fergus\n\tDELTA=3  (1 added, 0 deleted, 2 changed)\n\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_server.py: edit\n\n\n2007/11/05 17:11:47  Nils Klarlund <opensource@google.com>\n\n\tFix an infinite loop in the include server. FindNode would call itself\n\tad infinitum prompted by unusual link structures and includes.\n\t\n\tThis change is non-trivial. In particular, it relates to a\n\tprevious bug fix which is rolled-back as part of the present\n\tchange -- and then the problem reported in the bug report is\n\tsolved instead by properly mending the code that was removed in\n\tthat change.  The fix consists of making the memoization removed\n\tin that change cognizant of the file directory or rather the\n\tabsolute path of the file directory, see extensive new comments\n\tin class IncludeAnalyzerMemoizingNode.\n\t\n\tSmall stuff: we change 'filepath' to 'fp' in all identifiers in\n\tFindNode. That's because the identifiers were otherwise getting too long\n\tin the new code. And, we used that abbreviation already.\n\t\n\tTesting: a test_DotdotInInclude test case specifically exercices the\n\tsituation in the bug.  [Plus additional Google-specific correctness\n\tand performance tests.]\n\t\n\tAdditionally, we're now doing the test_IncludeAnalyzer in two ways:\n\tdirectly and through a symlink farm. This helps us test regression\n\tagainst subtle bugs that may occur with symbolic links.\n\t\n\tR=fergus\n\tDELTA=327  (194 added, 12 deleted, 121 changed)\n\n\t* include_server/cache_basics.py: edit\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\t* include_server/include_analyzer_test.py: edit\n\t* include_server/test_data/dfoo/include_dotdot_foo: add\n\t* include_server/test_data/symlink_farm/abc_post.c: add\n\t* include_server/test_data/symlink_farm/abc_pre.c: add\n\t* include_server/test_data/symlink_farm/computed_includes.c: add\n\t* include_server/test_data/symlink_farm/dbar: add\n\t* include_server/test_data/symlink_farm/dfoo: add\n\t* include_server/test_data/symlink_farm/foo: add\n\t* include_server/test_data/symlink_farm/p1.h: add\n\t* include_server/test_data/symlink_farm/parse.c: add\n\t* include_server/test_data/symlink_farm/sub_farm/link_to_dotdot_dotdot_dfoo_include_dotdot_foo: add\n\t* include_server/test_data/symlink_farm/test_directory_probing.c: add\n\t* include_server/test_data/symlink_farm/test_include_next: add\n\n\n2007/11/05 10:25:13  Nils Klarlund <opensource@google.com>\n\n\t\n\tBump up length of interval that determines when SIGALRM is\n\traised. Testing showed that with srcfs -- which increases user time --\n\tI/O between distcc and include server (in the C extension part) would be\n\ttripped up by SIGALRM when it is raised every 2s. This results in a\n\tPython exception such as IOError, which is wrong and even harmful,\n\tbecause it terminates the include server.  The interval in the currently\n\treleased version is 3s, so 4s is better.\n\t\n\tThis is to be followed up by CL that makes the algorithmic code\n\t\"protected\" by SIGALRM free of I/O.\n\t\n\tR=fergus\n\tDELTA=5  (4 added, 0 deleted, 1 changed)\n\n\t* include_server/basics.py: edit\n\n\n2007/11/02 15:36:27  Nils Klarlund <opensource@google.com>\n\n\t\n\tMake the _CleanOutOthers routine be called. Before this CL, this routine\n\twas not called at all, because a variable describing the tmp directory\n\thas not been initialized. We split the InitializeTmpDirectories function\n\tinto two parts to distinguish between creation of the temporary\n\tdirectory and the creation of client root under it.\n\t\n\tAlso, fixed bug in the glob expression.\n\t\n\tAlso, don't write out warning when cleaning -- that's just bound to\n\tconfuse users. Demote message to TRACE level.\n\t\n\tAlso, fix basics_test.py and make sure it's called as part of \n\t'make check'.\n\t\n\tR=fergus\n\tDELTA=97  (52 added, 17 deleted, 28 changed)\n\n\t* include_server/Makefile.in: edit\n\t* include_server/basics.py: edit\n\t* include_server/basics_test.py: edit\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_analyzer_memoizing_node_test.py: edit\n\t* include_server/include_analyzer_test.py: edit\n\t* include_server/include_server.py: edit\n\t* include_server/include_server_test.py: edit\n\t* include_server/parse_file_test.py: edit\n\n\n2007/11/01 17:46:44  Nils Klarlund <opensource@google.com>\n\n\t\n\tIncrease include server timeout to 3.8s.  We are still getting emails\n\tabout the include server running out of time for gws files and many\n\tothers.\n\t\n\tR=fergus\n\tDELTA=2  (0 added, 0 deleted, 2 changed)\n\n\t* include_server/basics.py: edit\n\n\n2007/11/01 17:28:22  Nils Klarlund <opensource@google.com>\n\n\tFix buglet: when the contents of the file descriptor would contain\n\tpercent signs the call to DEBUG would fail.\n\t\n\tR=fergus\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* include_server/include_server.py: edit\n\n\n2007/10/23 17:56:23  Nils Klarlund <opensource@google.com>\n\n\tPrepare new release, pump18, changing a timing constant in include server.\n\t\n\tR=fergus\n\tCC=distcc-pump\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* version.sh: edit\n\n\n2007/10/23 17:53:40  Nils Klarlund <opensource@google.com>\n\n\tIncrease time quota introduced in a previous change for handling a request.  We\n\treleased pump17 10/22. One day later, it turns out that there are a\n\tcases where the include server spends more than 2s processsing a\n\tcompilation unit. Here we increase the 2s to 3s.\n\t\n\tR=fergus\n\tDELTA=9  (4 added, 0 deleted, 5 changed)\n\n\t* include_server/basics.py: edit\n\n\n2007/10/22 13:43:09  Nils Klarlund <opensource@google.com>\n\n\t\n\tLimit the time that the includer analyzer is allowed to spend servicing\n\ta request. We use the rudimentary SIGALRM mechanism, because generally\n\tPython does not allow one thread to raise an exception in another. \n\t\n\tExperiments show that SIGALRM interferes with the use of Popen. When\n\tdetermining the default compiler, the include server uses Popen to\n\tinvoke gcc. If the SIGALRM is raised, then it be caught in the 'select',\n\twhich then aborts.\n\t\n\tTherefore, we stop the timer while the include server determines default\n\tcompilers.\n\t\n\tThe timeout exception is raised according to utime passed, not real\n\ttime. That prevents the include server from going bananas, restarting\n\tagain and again, because of NFS delays.\n\t\n\tThe risk with this CL is that something else breaks in unexpected ways,\n\tperhaps a file operation, with the signaling. However, we've put the\n\tfirst signal to occur 2s after the start of the request. That should be\n\tmore than ample time. In practice, we have not seen the include server\n\tusing more than 2s per request (but this is based on limited\n\tmeasurements).\n\t\n\tWe have also tested this change with a 1s timer. That showed the SIGALRM\n\tproblem with Popen. After, we fixed that this CL seems to work fine.\n\t\n\tR=manos\n\tCC=distcc-pump\n\tDELTA=110  (89 added, 1 deleted, 20 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/compiler_defaults.py: edit\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_server.py: edit\n\n\n2007/10/22 12:46:42  Nils Klarlund <opensource@google.com>\n\n\tMake version 'pump17'.\n\t\n\tR=fergus\n\tCC=distcc-pump\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* version.sh: edit\n\n\n2007/10/22 12:39:29  Nils Klarlund <opensource@google.com>\n\n\tFix name of stamp file. Remove initial '.'.\n\t\n\tR=manos\n\tCC=fergus\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* run_all_autoconf.sh: edit\n\n\n2007/10/22 11:06:40  Fergus Henderson <opensource@google.com>\n\n\tPartial rollback of a previous change.\n\t\n\tIn particular, comment out the code to support the Objective-C file\n\textensions and the Objective-C test case.  Currently Objective-C\n\tsupport breaks things if you don't have an Objective-C compiler\n\tinstalled, even if distcc is used only to compile C/C++ code; we try\n\tto compute the default include paths for all languages at startup,\n\tand barf it if fails.\n\t\n\tLeave in place the support for \"#import\".\n\tIt turns out that \"#import\" can be used in GNU C/C++ code,\n\tas a GNU extension, and some Google code makes use of this.\n\t\n\t*** Original change description ***\n\t\n\tAdd support for Objective-C to distcc-pump.\n\t\n\tIn particular, recognize the Objective-C file extensions (\".m\", \".mi\")\n\tand the \"#import\" declaration.  (#import is like #include, but never\n\tincludes the same file twice.  So for the distcc-pump include server,\n\tprocessing of #import is exactly the same as processing of #include.)\n\t\n\tTested with \"make maintainer-check\" (all tests pass) and\n\t\"make pump-check\" (no regressions).  Also added a test of\n\tObjective-C compilation.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tAPPROVED=klarlund\n\tDELTA=21  (11 added, 0 deleted, 10 changed)\n\n\t* distcc/test/testdistcc.py: edit\n\t* include_server/basics.py: edit\n\n\n2007/10/19 16:52:44  Nils Klarlund <opensource@google.com>\n\n\tLoosen assumption about the syntax -D options. A user had written\n\tsomething the include server couldn't understand. It provoked a rare\n\tinternal error. The compilation did not succeed locally either. The\n\tinclude server must remain unfazed when confronted with weird syntax.\n\t\n\tAlso, corrected comment for ParseCommandArgs.\n\t\n\tR=fergus\n\tCC=distcc-pump\n\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\t* include_server/parse_command.py: edit\n\t* include_server/parse_command_test.py: edit\n\n\n2007/10/19 16:28:57  Nils Klarlund <opensource@google.com>\n\n\tWhen storing warning messages in temporary file, we are using 'print\n\t>>', which appends a newline. Then, when presenting the errors to the\n\tuser, we'd also use 'print', which appends another newline. With this\n\tfix, the newline is not append the first time around (we append\n\t','). The other use of the contents of the temporary file, in the mail\n\tsending routines, should not be affected by one less newline.\n\t\n\tR=manos\n\tCC=fergus\n\tDELTA=3  (0 added, 0 deleted, 3 changed)\n\n\t* include_server/include_server.py: edit\n\n\n2007/10/19 10:57:39  Nils Klarlund <opensource@google.com>\n\n\tFix so that 'make' fails when version.sh is out of date. We remade the\n\tdependency checking in the makefile so that the need to autoreconf is\n\texpressed as a depedency on something certainly produced by autoreconf\n\twhen run through our script, namely a time stamp file.\n\t\n\tR=fergus\n\tDELTA=27  (4 added, 12 deleted, 11 changed)\n\n\t* Makefile.in: edit\n\t* run_all_autoconf.sh: edit\n\n\n2007/10/19 10:15:14  Nils Klarlund <opensource@google.com>\n\n\tDon't send email when a file that exists cannot be read. Also, slight\n\tcorrection to error message.\n\t\n\tR=fergus\n\tDELTA=5  (4 added, 0 deleted, 1 changed)\n\n\t* include_server/parse_file.py: edit\n\n\n2007/10/18 15:56:20  Fergus Henderson <opensource@google.com>\n\n\tFix a missing word in a comment.\n\t\n\tR=klarlund\n\tDELTA=5  (0 added, 2 deleted, 3 changed)\n\n\t* distcc/src/compile.c: edit\n\n\n2007/10/18 11:41:46  Fergus Henderson <opensource@google.com>\n\n\tAdd support for Objective-C to distcc-pump.\n\t\n\tIn particular, recognize the Objective-C file extensions (\".m\", \".mi\")\n\tand the \"#import\" declaration.  (#import is like #include, but never\n\tincludes the same file twice.  So for the distcc-pump include server,\n\tprocessing of #import is exactly the same as processing of #include.)\n\t\n\tTested with \"make maintainer-check\" (all tests pass) and\n\t\"make pump-check\" (no regressions).  Also added a test of\n\tObjective-C compilation.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tAPPROVED=klarlund\n\tDELTA=136  (100 added, 8 deleted, 28 changed)\n\n\t* distcc/test/testdistcc.py: edit\n\t* include_server/basics.py: edit\n\t* include_server/parse_command.py: edit\n\t* include_server/parse_file.py: edit\n\n\n2007/10/12 14:10:36  Nils Klarlund <opensource@google.com>\n\n\tThis corrects description of the previous change.\n\t\n\tPrepare a new release, pump16.  Deploy in NYC only. To be\n\tinstalled under 2007.10.12 in buildstatic. This release includes:\n\t\n'Rather than just replacing the '  \tChange 2007/10/11 by Fergus Henderson <opensource@google.com>\n'Prevent distcc-pump from revert'  \tChange 2007/10/11 by Nils Klarlund <opensource@google.com>\n\t\n\tR=fergus\n\tCC=manos\n\tDELTA=2  (2 added, 0 deleted, 0 changed)\n\n\t* version.sh: edit\n\n\n2007/10/12 11:30:45  Nils Klarlund <opensource@google.com>\n\n\tPrepare a new release, pump16, to include the change \"Prevent\n\tdistcc-pump from reverting to local compilations\". Deploy in \n\tNYC only. To be installed under 2007.10.11 in buildstatic.\n\t\n\tR=fergus\n\tCC=manos\n\tDELTA=2  (0 added, 0 deleted, 2 changed)\n\n\t* version.sh: edit\n\n\n2007/10/11 22:06:33  Fergus Henderson <opensource@google.com>\n\n\tRather than just replacing the server's current working directory\n\twith the clients' current working directory, we need to replace\n\tthe server's root directory with the client's root directory.\n\t\n\tThis is needed because the problems with gdb arise not only\n\tfrom the \"current working directory\" field (DW_AT_comp_dir),\n\tbut also with the file names (DW_AT_file_name).  These file names\n\tcan be absolute paths to files that are outside of the current\n\tworking directory.\n\t\n\tThis change is basically just a one-line fix in serve.c, but\n\tfor clarity I've also changed some variable names and comments\n\tin fix_debug_info.c.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=36  (13 added, 0 deleted, 23 changed)\n\n\t* distcc/src/fix_debug_info.c: edit\n\t* distcc/src/serve.c: edit\n\n\n2007/10/11 16:20:33  Nils Klarlund <opensource@google.com>\n\n\tPrevent distcc-pump from reverting to local compilations hundreds\n\tor thousands of times. Such a situation should never occur but if it\n\toccurs, we want to fall back to distcc behavior. For example, this is\n\tdesirable if the include server for reason picks up files that don't\n\texist any more or symbolic links that changed surreptiously during the\n\tbuild.\n\t\n\tA typical output is shown below (where we have tampered with the include\n\tserver to produce too few files).  Note that ERRORs still occur in the\n\toutput (from the remote server).\n\t\n\tdistcc[7791] ERROR: compile third_party/pcre/pcre-7.3/pcre_globals.c on 192.168.1.137,lzo,cpp failed\n\tdistcc[7791] (dcc_build_somewhere) Warning: remote compilation of 'third_party/pcre/pcre-7.3/pcre_globals.c' failed, retrying locally\n\tdistcc[7791] Warning: failed to distribute third_party/pcre/pcre-7.3/pcre_globals.c to 192.168.1.137,lzo,cpp, running locally instead\n\tdistcc[7708] (dcc_please_send_email_note_discrepancy_except_fresh_dependency) Warning: remote compilation of 'third_party/pcre/pcre-7.3/pcre_chartables.c' failed, retried locally and got a different result.\n\tdistcc[7708] (dcc_note_discrepancy) Warning: now using plain distcc, possibly due to inconsistent file system changes during build\n\tdistcc[7708] Warning: Will send an email to distcc-pump-errors@google.com\n\tdistcc[7780] ERROR: compile third_party/pcre/pcre-7.3/pcre_get.c on 192.168.1.135,lzo,cpp failed\n\tdistcc[7780] (dcc_build_somewhere) Warning: remote compilation of 'third_party/pcre/pcre-7.3/pcre_get.c' failed, retrying locally\n\tdistcc[7780] Warning: failed to distribute third_party/pcre/pcre-7.3/pcre_get.c to 192.168.1.135,lzo,cpp, running locally instead\n\tdistcc[7869] ERROR: compile third_party/pcre/pcre-7.3/pcre_ord2utf8.c on 192.168.1.124,lzo,cpp failed\n\tdistcc[7869] (dcc_build_somewhere) Warning: remote compilation of 'third_party/pcre/pcre-7.3/pcre_ord2utf8.c' failed, retrying locally\n\tdistcc[7869] Warning: failed to distribute third_party/pcre/pcre-7.3/pcre_ord2utf8.c to 192.168.1.124,lzo,cpp, running locally instead\n\t__________Compiling obj/gcc-4.2.1-glibc-2.2.2-piii-linux-dbg/bin/third_party/pcre/pcre-7.3/pcre_ucp_searchfuncs.c.o\n\tdistcc[7780] (dcc_please_send_email_note_discrepancy_except_fresh_dependency) Warning: remote compilation of 'third_party/pcre/pcre-7.3/pcre_get.c' failed, retried locally and got a different result.\n\tdistcc[7780] Warning: Will send an email to distcc-pump-errors@google.com\n\tdistcc[7791] (dcc_please_send_email_note_discrepancy_except_fresh_dependency) Warning: remote compilation of 'third_party/pcre/pcre-7.3/pcre_globals.c' failed, retried locally and got a different result.\n\tdistcc[7791] Warning: Will send an email to distcc-pump-errors@google.com\n\t__________Compiling obj/gcc-4.2.1-glibc-2.2.2-piii-linux-dbg/bin/third_party/pcre/pcre-7.3/pcre_valid_utf8.c.o\n\tdistcc[7723] (dcc_please_send_email_note_discrepancy_except_fresh_dependency) Warning: remote compilation of 'third_party/pcre/pcre-7.3/pcre_compile.c' failed, retried locally and got a different result.\n\tdistcc[7723] Warning: Will send an email to distcc-pump-errors@google.com\n\t\n\tR=fergus,manos\n\tDELTA=211  (174 added, 8 deleted, 29 changed)\n\n\t* distcc/src/compile.c: edit\n\t* distcc/src/compile.h: edit\n\t* distcc/src/h_compile.c: edit\n\t* distcc/test/testdistcc.py: edit\n\n\n2007/10/09 12:40:31  Nils Klarlund <opensource@google.com>\n\n\t\n\tThe obvious radical approach to clearing all caches. With this CL, we\n\trun all the initialization code of the major include analyzer object.\n\tThis changes passes all usual tests and some third_party tests. \n\tAll to be run before release.\n\t\n\tR=fergus,manos\n\tDELTA=52  (17 added, 32 deleted, 3 changed)\n\n\t* include_server/cache_basics.py: edit\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\t* include_server/mirror_path.py: edit\n\n\n2007/10/09 12:38:53  Nils Klarlund <opensource@google.com>\n\n\tIntroduce a time analysis of source files in order to improve S/N\n\tratio of automatically generated error emails. Currently, we send\n\tan email in situations where:\n\t\n\t -- the remote compilation fails because a file contains something bad,\n\t -- the file is changed to not contain bad stuff, and consequently the\n\t -- the local compilation succeeds.\n\t\n\tThis makes it sometimes impossible for us to determine accurately from\n\tthe email whether some error really occurred or whether the user changed\n\tsource files during the build.\n\t\n\tWe can carry out the analysis only if there is a .d file. We check each\n\tdependency descriped there. If anyone changed after the build started,\n\tthen we really don't want to hear about distcc-pump errors, because\n\tdependencies shouldn't change. The generated files are exceptions. To\n\tdisregard these, the distcc user may specify a glob pattern in\n\tenvironment variable DISTCC_EXCLUDE_FRESH_FILES defined when\n\tinvoking distcc.\n\t\n\tR=fergus\n\tAPPROVED=fergus,sunq\n\tDELTA=378  (362 added, 4 deleted, 12 changed)\n\n\t* distcc/Makefile.in: edit\n\t* distcc/configure.ac: edit\n\t* distcc/src/compile.c: edit\n\t* distcc/src/compile.h: edit\n\t* distcc/src/emaillog.c: edit\n\t* distcc/src/h_compile.c: add\n\t* distcc/test/testdistcc.py: edit\n\t* pump.in: edit\n\n\n2007/10/09 12:08:14  Nils Klarlund <opensource@google.com>\n\n\tRelease pump15 to buildstatic under name 2007.10.09. To include:\n\t\n\t  Fix a bug with the check to see whether /usr/lib/rpm/...\n\t  The obvious radical approach to...\n\t  Ensure that the build process reruns...\n\t  Introduce a time analysis of source files...\n\t\n\tR=fergus,manos\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* version.sh: edit\n\n\n2007/10/08 22:56:48  Fergus Henderson <opensource@google.com>\n\n\tFix a bug with the check to see whether /usr/lib/rpm/find-requires\n\thas been patched to special-case the linux-gate.so dependency.\n\tThe sense of the check was inverted.  On my system, find-requires\n\thad been properly patched already, but build-distcc.sh was\n\tincorrectly telling me that I needed to patch it.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* build-distcc.sh: edit\n\n\n2007/10/08 22:49:19  Fergus Henderson <opensource@google.com>\n\n\tEnsure that the build process reruns autoconf and autoheader.\n\tThis is needed in case configure.ac has been changed since\n\tthe last build.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=1  (1 added, 0 deleted, 0 changed)\n\n\t* distcc.spec: edit\n\n\n2007/10/08 10:35:13  Nils Klarlund <opensource@google.com>\n\n\tStart a new snaphost of the file system when caches are cleared as part\n\tof the stat trigger mechanism.\n\t\n\tThe stat reset is supposed to mean: ``don't trust anything about\n\tprevious analyses of includes.'' So files, directories, and symbolic\n\tlinks, as known to the include server, are all invalid.\n\t\n\tIn particular, all information gathered in the client root directory is\n\tstale. (This is where we compress source file and mirror the directory\n\tand link structure of the part of the file system explored for include\n\tanalysis.)\n\t\n\tWith this CL, we make the client root concept generational, as indicated\n\tby a new suffix, a generation number, added to the automatically\n\tgenerated root name.  A trigger event bumps the generation number by\n\tone.\n\t\n\tR=manos,fergus\n\tDELTA=86  (60 added, 4 deleted, 22 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/compress_files.py: edit\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_analyzer_test.py: edit\n\t* include_server/include_server.py: edit\n\t* include_server/mirror_path.py: edit\n\n\n2007/10/04 18:18:18  Manos Renieris <opensource@google.com>\n\n\tUpdate the init script. Major difference is the understanding of comments.\n\t\n\tR=klarlund\n\tCC=ahyun,distcc-pump\n\tDELTA=248  (25 added, 62 deleted, 161 changed)\n\n\t* distcc/packaging/RedHat/init.d/distcc: edit\n\n\n2007/10/04 15:05:43  Fergus Henderson <opensource@google.com>\n\n\tTidy up the output from c_extensions_test.\n\tAlso change the test so that it will die if some unreachable code is\n\treached, rather than quietly ignoring the error condition,\n\tand avoid using the message \"internal error 3\" for two different errors.\n\t\n\tR=manos\n\tCC=distcc-pump\n\tAPPROVED=klarlund\n\tDELTA=8  (5 added, 0 deleted, 3 changed)\n\n\t* include_server/Makefile.in: edit\n\t* include_server/c_extensions_test.py: edit\n\n\n2007/10/04 13:25:56  Nils Klarlund <opensource@google.com>\n\n\tWarning message clean-up.\n\t\n\t1) Change all information printed by Debug to go to stderr.\n\t\n\t2) When an exception is raised it should generally be reported as a new\n\twarning (as defined by Debug called with DEBUG_WARNING, so that this\n\toutput is controllable), not just printed to stderr.  In particular,\n\tthis change makes situations not covered by the include processor (such\n\tas absolute filepaths in #include's) be reported as warnings.\n\t\n\t3) We removed an unnecessary try/except block for totally unexpected\n\tsiutations. Those are to be handled by the general except clause of the\n\t'handler'.\n\t\n\tFatal issues and timing information (not normally used) is still\n\treported to stderr through print statements.\n\t\n\tR=fergus,manos\n\tDELTA=18  (0 added, 4 deleted, 14 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/include_server.py: edit\n\n\n2007/10/04 13:06:01  Fergus Henderson <opensource@google.com>\n\n\tInclude h_fix_debug_info in the list of check_programs,\n\tso that it gets removed by \"make clean\".\n\t\n\tR=klarlund\n\tDELTA=1  (1 added, 0 deleted, 0 changed)\n\n\t* distcc/Makefile.in: edit\n\n\n2007/10/04 11:37:39  Nils Klarlund <opensource@google.com>\n\n\tIf Ctrl-c is issued while the include server is running in 'handle',\n\tthen an unfortunate double error message would sometimes occur, along\n\twith a stack trace. Fixed here by propagating exception to outer handler\n\tin 'Main'. [While we're at it, we change 'main' to 'Main'. There's no\n\treason to lowercase it.]\n\t\n\tAlso, we fix the situations where the exception raised in 'handle' is an\n\tinternal error or the one corresponding to SIGTERM. Both situations are\n\tuncommon. And, in both cases, we raise SIGTERM for Main to catch, so\n\tthat include server can be terminated without stack traces to be printed\n\tout.\n\t\n\tR=fergus,manos\n\tDELTA=6  (0 added, 0 deleted, 6 changed)\n\n\t* include_server/include_server.py: edit\n\n\n2007/10/04 10:13:58  Fergus Henderson <opensource@google.com>\n\n\tSet VPATH.  This is needed to make things work if you run configure\n\tin a different directory than the source directory.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=1  (1 added, 0 deleted, 0 changed)\n\n\t* Makefile.in: edit\n\n\n2007/10/04 01:10:42  Fergus Henderson <opensource@google.com>\n\n\tAdd the header file for a source file I added in a previous change.\n\tI had accidentally omitted this file from that CL.\n\t\n\tR=iant\n\tCC=distcc-pump\n\tAPPROVED=iant\n\tDELTA=10  (10 added, 0 deleted, 0 changed)\n\n\t* distcc/src/fix_debug_info.h: add\n\n\n2007/10/03 20:41:00  Nils Klarlund <opensource@google.com>\n\n\tVersion 14 will contain:\n\t\n\t- a server update (for .o rewriting), to be installed 10/4 in NYC\n\t- fix for include server failure to update symbolic links when clearing\n\t  caches\n\t- minor changes to messages in exception circumstances\n\t- possibly, change that analyzes .d files before sending emails \n\t  about discrepancies between server and client\n\t\n\tR=fergus,manos\n\n\t* version.sh: edit\n\n\n2007/10/03 15:03:24  Nils Klarlund <opensource@google.com>\n\n\tAdd clarifying comment.\n\t\n\tR=fergus,manos\n\tAPPROVED=manos\n\tDELTA=1  (1 added, 0 deleted, 0 changed)\n\n\t* include_server/test_data/dfoo/foo2.h: edit\n\n\n2007/10/03 12:04:55  Fergus Henderson <opensource@google.com>\n\n\tChange distcc so that it generates the correct value for\n\tthe \"current directory\" field in the debug info.\n\t\n\tI do this by mmapping the \".o\" file into memory, parsing the\n\tELF headers to find the \".debug_info\" section, and then doing a\n\tblind string search and replace in that section.  This should be\n\tquite safe: although there is a remote possibility of false hits,\n\tthey will only affect the debug_info section.\n\t\n\tR=iant,klarlund\n\tCC=distcc-pump\n\tAPPROVED=klarlund\n\tDELTA=628  (594 added, 5 deleted, 29 changed)\n\n\t* distcc/Makefile.in: edit\n\t* distcc/configure.ac: edit\n\t* distcc/src/config.h.in: edit\n\t* distcc/src/fix_debug_info.c: add\n\t* distcc/src/serve.c: edit\n\t* distcc/test/testdistcc.py: edit\n\n\n2007/09/28 17:52:51  Nils Klarlund <opensource@google.com>\n\n\tFix .d target error. This error was unfortunately introduced with \n\ta previous change, which corrected other errors and attempted to put this \n\tlogic into a unit test straightjacket.\n\t\n\tR=fergus,manos\n\tDELTA=2  (0 added, 1 deleted, 1 changed)\n\n\t* distcc/src/dotd.c: edit\n\t* distcc/test/testdistcc.py: edit\n\n\n2007/09/28 17:13:53  Nils Klarlund <opensource@google.com>\n\n\tPrepare release of pump13 to overcome bug in yesterday's release.\n\t\n\tR=fergus,manos\n\n\t* version.sh: edit\n\n\n2007/09/27 14:18:09  Nils Klarlund <opensource@google.com>\n\n\tPrepare new release.\n\t\n\tR=fergus,manos\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* version.sh: edit\n\n\n2007/09/26 22:31:54  Nils Klarlund <opensource@google.com>\n\n\tAllow globs in trigger path expressions.\n\t\n\tR=fergus,manos\n\tDELTA=101  (85 added, 0 deleted, 16 changed)\n\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_analyzer_test.py: edit\n\t* include_server/include_server.py: edit\n\t* pump.in: edit\n\n\n2007/09/26 22:01:05  Nils Klarlund <opensource@google.com>\n\n\tFix parsing of -D options to allow for function-like macros.\n\t\n\tR=fergus,manos\n\tDELTA=88  (55 added, 28 deleted, 5 changed)\n\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\t* include_server/include_analyzer_test.py: edit\n\t* include_server/parse_file.py: edit\n\t* include_server/test_data/func_macro.c: add\n\n\n2007/09/26 21:51:45  Nils Klarlund <opensource@google.com>\n\n\tThe interpretation of the # operator of CPP was incorrect because\n\twhitespace after # was not ignored. For example,\n\t\n\t  # a\n\t\n\tmust expand to\n\t\n\t  \"a\"\n\t\n\tnot\n\t\n\t  \"\" a\n\t\n\t      We fix this problem here.\n\t\n\tR=fergus,manos\n\tDELTA=3  (2 added, 0 deleted, 1 changed)\n\n\t* include_server/macro_eval.py: edit\n\t* include_server/macro_eval_test.py: edit\n\n\n2007/09/21 22:57:17  Fergus Henderson <opensource@google.com>\n\n\tFix two compiler warnings, one of them serious:\n\t  - The type of the \"len\" argument in a call to\n\t\tPyArg_ParseType(\"#s\", &string, &len)\n\t    must be \"int\", not \"size_t\".  This could cause\n\t    serious problems for a 64-bit architecture.\n\t  - Include \"distcc.h\" before the other header file,\n\t    so that we get the definition of 'enum dcc_protover'\n\t    before it is used.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=4  (1 added, 2 deleted, 1 changed)\n\n\t* include_server/c_extensions/distcc_pump_c_extensions_module.c: edit\n\n\n2007/09/21 22:56:33  Fergus Henderson <opensource@google.com>\n\n\tWhen compiling the distcc code and the extension module, enable C\n\tcompiler warnings (\"-Wall -Wextra\"), and enforce them (\"-Werror\").\n\tAlso make sure that we compile with \"-D_GNU_SOURCE\", since distcc\n\tuses that, and we need that to avoid some compiler warnings.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=3  (0 added, 0 deleted, 3 changed)\n\n\t* include_server/setup.py: edit\n\n\n2007/09/21 22:56:08  Fergus Henderson <opensource@google.com>\n\n\tPass the \"-v\" (verbose) option to \"autoreconf\".\n\t\n\tR=klarlund\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* run_all_autoconf.sh: edit\n\n\n2007/09/21 13:41:36  Nils Klarlund <opensource@google.com>\n\n\tFix bugs in dcc_get_dotd_info that give rise to erroneous .d file names\n\tor erroneous target names in .d files.\n\t\n\t- If derived from the file name given by -o, then the suffix must be\n\t  stripped before .d is appended.\n\t\n\t- If the file name ends in '.', then only \"d\" is appended.\n\t\n\t- If an -o name is given and the name ends in '.', then this name, not\n\t  the input filename, is still to be used for the name of the .d file.\n\t\n\t- If a target is provided in DEPENDENCIES_OUTPUT, then this target must\n\t  be returned -- otherwise the .d file computed on the server will be\n\t  incorrect if the target happens not to be the object file.\n\t\n\tExtra: a test for the length of the string in variable extension was\n\tunnecessary.\n\t\n\tTests: We made a unit test that exercices the function in a number of\n\tways.  Heuristics about the names of .d files, expressed as globs, are\n\tused to pinpoint the actual naming conventions used by gcc.\n\t\n\tR=manos,fergus\n\tDELTA=255  (217 added, 20 deleted, 18 changed)\n\n\t* distcc/Makefile.in: edit\n\t* distcc/src/dotd.c: edit\n\t* distcc/src/h_dotd.c: add\n\t* distcc/test/testdistcc.py: edit\n\n\n2007/09/20 11:36:58  Nils Klarlund <opensource@google.com>\n\n\tFix sending of emails by include server. Avoid sending emails when\n\ttranslation unit could not be found or if command line is\n\tmalformed. Also, fix buglet that made the previous translation unit name\n\tappear in the case of malformed command line.\n\t\n\tR=fergus,manos\n\tDELTA=6  (2 added, 0 deleted, 4 changed)\n\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_server_test.py: edit\n\t* include_server/parse_command.py: edit\n\n\n2007/09/20 11:33:48  Nils Klarlund <opensource@google.com>\n\n\tPrepare new release to include \"Reset caches more aggressively\".\n\t\n\tR=fergus,manos\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* version.sh: edit\n\n\n2007/09/20 07:54:03  Nils Klarlund <opensource@google.com>\n\n\tReset caches more aggressively. According to a bug report,\n\tthere are uncommon build situations where distcc-pump fails. We address\n\tthis by:\n\t\n\t-- Making sure to reset the cache use by the link-gathering mechanism of\n\t   mirror_path in the include server. This is a real bug although\n\t   probably not the culprit.\n\t\n\t-- Also monitoring 'includes/third_party/stl/third_party/stl', which is\n\t   the symbolic link changed (with path-doubling) by the set symlink\n\t   mechanism of the third_party/stl/BUILD file.\n\t\n\tR=fergus,manos\n\tDELTA=6  (5 added, 0 deleted, 1 changed)\n\n\t* include_server/include_analyzer.py: edit\n\t* include_server/mirror_path.py: edit\n\t* pump.in: edit\n\n\n2007/09/18 13:03:49  Nils Klarlund <opensource@google.com>\n\n\tPrepare 'pump10' release. This release is to correct minor issues such\n\tas interaction with ccache and the handling of command line -D options.\n\t\n\tR=fergus,manos\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* version.sh: edit\n\n\n2007/09/18 12:59:45  Nils Klarlund <opensource@google.com>\n\n\tCorrect two mistakes in the handling of filepaths:\n\t\n\t-- an elementary one in basics.py: the rstrip() function of string is\n\t   functional\n\t\n\t-- a more tricky one: in an include of the form \"#include ./foo.h\", we\n\t   must normalize the file name to 'foo.h', otherwise an infinite regression\n\t   would occur if foo.h includes ./foo.h.\n\t\n\tR=fergus,manos\n\tDELTA=13  (10 added, 1 deleted, 2 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/cache_basics.py: edit\n\n\n2007/09/17 14:51:56  Nils Klarlund <opensource@google.com>\n\n\t\n\tFix client to change protocol version from 3 (pump) to 2 (plain) in\n\tsituations involving already preprocessed code, such as arising from\n\tccache use, or involving certain insidious environment variables.\n\t\n\tTest: \n\t   make -C distcc valgrind-check\n\t\n\tR=fergus,manos\n\tDELTA=41  (40 added, 1 deleted, 0 changed)\n\n\t* distcc/src/compile.c: edit\n\n\n2007/09/17 13:56:56  Nils Klarlund <opensource@google.com>\n\n\tWhen announcing pump installation, show the real location -- unmasked\n\tby symbolic links.\n\t\n\tR=fergus,manos\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* pump.in: edit\n\n\n2007/09/17 13:26:48  Fergus Henderson <opensource@google.com>\n\n\tFix a bug in \"pump --startup\": don't print out a setting for\n\tDISTCC_HOSTS if we didn't set DISTCC_HOSTS.\n\t\n\t(Note: this is not an urgent fix, because I've made Blaze work\n\taround the bug.  But worth fixing nevertheless.)\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=3  (2 added, 0 deleted, 1 changed)\n\n\t* pump.in: edit\n\n\n2007/09/17 12:33:21  Nils Klarlund <opensource@google.com>\n\n\tMake 'pump' executable.\n\t\n\tR=fergus,manos\n\tDELTA=2  (1 added, 0 deleted, 1 changed)\n\n\t* configure.ac: edit\n\n\n2007/09/17 09:48:08  Nils Klarlund <opensource@google.com>\n\n\tPropagate symbols defined through -D options to include analyzer. This\n\tmakes computed includes operable wtih values provided on the command\n\tline.\n\t\n\tTests: \n\t\n\t1. New tests exercise that when reissuing an analysis for the same file\n\tand with same search directories, but with a symbol definition affecting\n\ta previously computed include, the include graph is recalculated, not\n\treused, and the new value of the symbol is used for resolving the\n\tcomputed include.\n\t\n\t2. The new code was also verified to solve the problem reported in \n\ta bug report (I used a workstation in ZRH to build the\n\tactual code that cause the issue).\n\t\n\t3. I did 'make maintainer-check'.\n\t\n\tR=fergus,manos\n\tDELTA=66  (56 added, 0 deleted, 10 changed)\n\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\t* include_server/include_analyzer_memoizing_node_test.py: edit\n\t* include_server/include_analyzer_test.py: edit\n\t* include_server/parse_command.py: edit\n\t* include_server/parse_command_test.py: edit\n\n\n2007/09/15 21:47:49  Nils Klarlund <opensource@google.com>\n\n\tUpdate a comment as per Fergus's review comment for a previous change.\n\t\n\tR=fergus,manos\n\tDELTA=3  (1 added, 0 deleted, 2 changed)\n\n\t* include_server/compiler_defaults.py: edit\n\n\n2007/09/13 23:40:04  Nils Klarlund <opensource@google.com>\n\n\tIntroduces mechanism for monitoring the real paths that are resolved\n\tduring include analysis. Invoke as --realpath_warning_re=RE. For more,\n\tsee include_server.py, Usage() in this CL. This allows a user to find\n\tout which source files are actually picked out by the include analysis\n\tduring the build. Such information can useful if it is suspected that\n\tinclude directories are wrong.\n\t\n\tTESTING: this CL passes make check and make maintainer-check. It was\n\ttested earlier on Google software as part of the\n\tdiscussion of this feature now found on the distcc-pump wiki.\n\t\n\tFrom the wiki:\n\t\n\t    INCLUDE_SERVER_ARGS='--realpath_warning_re=RE' make-dbg ....\n\t\n\t  makes the include server write a warning to stderr whenever a filename\n\t  is resolved to a realpath (a canonicalized absolute pathname - see\n\t  'man realpath') that is matched by RE, which is a regular expression\n\t  in Python syntax. For example, to find out which C/C++ files from\n\t  /home/build/buildonly are used during a build of gws:gws, do:\n\t\n\t    INCLUDE_SERVER_ARGS='--realpath_warning_re=/auto/buildonly' make-dbg -distcc_pump -g0 gws:gws\n\t\n\t  Then, you will see messages like:\n\t\n\t  WARNING include server: For translation unit\n\t    'foo/bar.cc'\n\t  while processing 'foo/bar.cc'\n\t  lookup of file 'baz.h' resolved to \n\t    '../whatever/baz.h'\n\t  whose realpath is \n\t    '/auto/whatever/blah/blah/baz.h'.\n\t\n\t  (Here we have formatted the message from it's one-liner original.)\n\t  Note that the include server currently does not identify the header\n\t  file containing the #include for which the realpath matched, but only\n\t  the translation unit. Also, because of caching in the include server,\n\t  a message for a particular resolution appears usually only once. Thus\n\t  this analysis cannot be used to find out which files a particular\n\t  compilation unit uses.\n\t\n\tR=fergus,manos\n\tDELTA=42  (40 added, 0 deleted, 2 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/cache_basics.py: edit\n\t* include_server/include_server.py: edit\n\n\n2007/09/13 23:15:37  Nils Klarlund <opensource@google.com>\n\n\tIntroduce flag for NotCoveredError exceptions that specify whether\n\temail is to be sent or not.\n\t\n\tWe use this parameter to suppress warnings that related to \n\t\n\t  #include \"/foo/bar.h\"\n\t\n\tand similar uses.\n\t\n\tAlso, clean up of some error messages (add '.'). We fix a few typos and\n\tunneeded variables (e.g.: opt_build_stat_verify), while we're looking at\n\tthese files.\n\t\n\tAdditionally, improve NotCovered messages by adding the file name (in\n\tmost cases).\n\t\n\tFinally, introduce option --no-email to negate the default of --email in\n\tthe pump script if so desired through INCLUDE_SERVER_ARGS.\n\t\n\tTESTING: \n\t\n\tThis change passes 'make check' and 'make maintainer-check'. We also ran\n\tsystem tests and verified that occurences of #include \"/foo/bar.h\" now\n\tdoes not result in mail being generated. These tests are not part of\n\tthis changelist, but contained in another change.\n\t\n\tR=manos,fergus\n\tDELTA=186  (93 added, 49 deleted, 44 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/cache_basics.py: edit\n\t* include_server/include_server.py: edit\n\t* include_server/include_server_test.py: edit\n\t* include_server/parse_file.py: edit\n\n\n2007/09/13 18:18:25  Nils Klarlund <opensource@google.com>\n\n\tReorganize and extend tests:\n\t\n\t- move existing tests in include_server.py to new include_server_test.py\n\t\n\t- test the main 'handler' in include_server, including how exceptions,\n\t  such as internal error, affect automated email generation\n\t\n\tR=fergus,manos\n\tDELTA=613  (374 added, 198 deleted, 41 changed)\n\n\t* include_server/Makefile.in: edit\n\t* include_server/include_analyzer_test.py: add\n\t* include_server/include_server_test.py: edit\n\t* include_server/test_data/contains_abs_include.c: add\n\n\n2007/09/13 14:54:43  Nils Klarlund <opensource@google.com>\n\n\tPrepare for release; bump to version 'pump9'.\n\t\n\tR=fergus,manos\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* version.sh: edit\n\n\n2007/09/13 14:41:34  Nils Klarlund <opensource@google.com>\n\n\tRemove Google crosstool specification (which made the build fail\n\tanyway).\n\t\n\tR=manos,fergus\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* build-distcc.sh: edit\n\n\n2007/09/13 14:38:24  Nils Klarlund <opensource@google.com>\n\n\tCorrect flawed configuration scripts and introduce configuration sanity\n\tchecks.\n\t\n\tautoconfig assumes that if an .ac script has not changed then the\n\tresulting configure scripts do not need to change. \n\t\n\tThis assumption is untrue because we use a shell escape. (This\n\tescape has been rewritten according to Fergus's suggestion.)\n\t\n\tMoreover, m4 caches processed files. This royally messes up things\n\tbeyond and in addition to just the aforementioned problem.\n\t\n\tWe fix this by using autoreconf (suggested by Fergus). It seems to\n\taddress these issues.\n\t\n\tWe have verified that:\n\t\n\t  ./run_all_autoconf.sh; ./configure; make clean; make all\n\t\n\tworks and embeds a changed version number (in version.sh) in the right\n\tplaces.\n\t\n\tWith further CLs \"Remove Google crosstool specification\" and\n\t\"Introduce needed cast.\", it is possible to use\n\t./build-distcc.sh to make RPM and .deb packages.\n\t\n\tR=fergus,manos\n\tDELTA=76  (36 added, 20 deleted, 20 changed)\n\n\t* Makefile.in: edit\n\t* configure.ac: edit\n\t* distcc/configure.ac: edit\n\t* include_server/configure.ac: edit\n\t* run_all_autoconf.sh: edit\n\t* version.sh: edit\n\n\n2007/09/13 14:21:11  Nils Klarlund <opensource@google.com>\n\n\tIntroduce needed cast. This problem was detected with gcc \n\tversion 4.0.3 (Ubuntu 4.0.3-1ubuntu5).\n\t\n\tR=fergus,manos\n\tDELTA=3  (2 added, 0 deleted, 1 changed)\n\n\t* distcc/src/stats.c: edit\n\n\n2007/09/13 14:18:44  Nils Klarlund <opensource@google.com>\n\n\tNot deleting .d files breaks the build sometimes.\n\t\n\tR=fergus,manos\n\tDELTA=4  (1 added, 0 deleted, 3 changed)\n\n\t* distcc/Makefile.in: edit\n\n\n2007/09/12 21:08:29  Fergus Henderson <opensource@google.com>\n\n\tUse the standard autoconf substitution process to create pump\n\tfrom pump.in, rather than a hand-crafted Makefile rule.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=16  (4 added, 6 deleted, 6 changed)\n\n\t* Makefile.in: edit\n\t* configure.ac: edit\n\t* pump.in: edit\n\n\n2007/09/12 20:49:57  Fergus Henderson <opensource@google.com>\n\n\tFix a Posix conformance bug: we were passing the same fd set to\n\tselect() for both the writeable fd set and the error fd set, but\n\taccording to Posix (specifically The Open Group Base Specifications Issue 6,\n\tavailable at <http://www.opengroup.org/onlinepubs/009695399/>),\n\tthe arguments to select() are declared with the \"restrict\" attribute,\n\twhich means they must not be aliased.\n\t\n\tAlso, issue a trace message in the case when select() returns\n\tdue to an error condition on the fd rather than because the fd\n\thas become writable.\n\t\n\tR=manos\n\tCC=distcc-pump\n\tDELTA=23  (18 added, 0 deleted, 5 changed)\n\n\t* distcc/src/io.c: edit\n\n\n2007/09/12 18:57:03  Fergus Henderson <opensource@google.com>\n\n\tFix manual memory management bugs, and simplify the memory management\n\ta bit.\n\t\n\tdcc_set_output() was inconsistent about whether it copied its\n\tinput argument or aliased it, about whether it freed the previous\n\tvalue in that slot.  I changed the function so that it always\n\tcopies the input argument, and always frees the previous value\n\tin the argv array slot that it is about to overwrite.\n\tI likewise changed dcc_set_input to copy its argument.\n\t\n\tdcc_set_output() was also inconsistent about whether or not it\n\tlogged the change to the argument; I fixed that too, by always\n\tlogging it.\n\t\n\tIn serve.c I simplified the code and comments a little - there\n\tis no longer any aliasing going on, so the deallocation logic\n\tis simpler.\n\t\n\tR=manos\n\tCC=distcc-pump\n\tDELTA=35  (9 added, 12 deleted, 14 changed)\n\n\t* distcc/src/arg.c: edit\n\t* distcc/src/serve.c: edit\n\n\n2007/09/12 18:51:05  Fergus Henderson <opensource@google.com>\n\n\tAdd support for running a single test case at a time,\n\trather than running all of them.  This is useful for\n\tdebugging.\n\t\n\tR=manos\n\tCC=distcc-pump\n\tAPPROVED=klarlund\n\tDELTA=46  (46 added, 0 deleted, 0 changed)\n\n\t* distcc/Makefile.in: edit\n\t* distcc/test/onetest.py: add\n\n\n2007/09/12 18:48:53  Fergus Henderson <opensource@google.com>\n\n\tFix a timing dependence in the distcc test suite that caused the\n\t'NoDetachDaemon_Case' test case to sometimes fail when run under\n\tvalgrind.  Specifically, when running the server in --no-detach mode,\n\twait until the server starts accepting connections before running\n\tthe test, rather than just waiting 0.5 seconds, which under valgrind\n\tis not always long enough.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=6  (3 added, 0 deleted, 3 changed)\n\n\t* distcc/test/testdistcc.py: edit\n\n\n2007/09/12 18:47:34  Fergus Henderson <opensource@google.com>\n\n\tAdd \"--startup\" and \"--shutdown\" options to the pump script,\n\tfor use by Blaze.  Blaze can't use the ordinary mode of the\n\tpump script, because the Blaze server's lifetime is greater than\n\tthe lifetime of the include server.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=181  (119 added, 12 deleted, 50 changed)\n\n\t* pump.in: edit\n\n\n2007/09/11 13:59:25  Nils Klarlund <opensource@google.com>\n\n\tAnnul enviroment when probing for built-in include path. Fixes subtle\n\tproblem reported in a bug report.\n\t\n\tR=fergus,manos\n\tDELTA=6  (3 added, 0 deleted, 3 changed)\n\n\t* include_server/compiler_defaults.py: edit\n\n\n2007/09/11 12:37:56  Nils Klarlund <opensource@google.com>\n\n\tFix leftover comment from earlier fix: delete it.\n\t\n\tR=manos\n\tDELTA=3  (0 added, 3 deleted, 0 changed)\n\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\n\n2007/09/06 16:02:39  Nils Klarlund <opensource@google.com>\n\n\tImprove mechanishm for overcoming unsoundness in build system. Change\n\tthe semantics of stat_reset_triggers so that the changing of a symbolic\n\tlink during the build triggers a reset of all include server caches.\n\t\n\tR=fergus,manos\n\tDELTA=57  (28 added, 1 deleted, 28 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\t* include_server/include_server.py: edit\n\t* include_server/include_server_test.py: edit\n\n\n2007/09/05 15:50:58  Fergus Henderson <opensource@google.com>\n\n\tMake distcc warning-free:\n\t- Remove \"-Wconversion\" from CFLAGS; this warning was useful for\n\t  writing code that had to be compatible with pre-C89 C compilers\n\t  that didn't support prototypes, but that isn't needed anymore,\n\t  and it causes too many spurious warnings for perfectly legitimate\n\t  code.\n\t- Add \"-Wno-unused\" to cflags for popt/*.c; those files have\n\t  a bunch of unused parameters.\n\t- Eliminate all the remaining compiler warnings.\n\t- Add \"-Werror\" to CFLAGS so we won't get any regressions!\n\t\n\tTESTED = make maintainer-check valgrind-check\n\t\n\tR=manos\n\tCC=distcc-pump\n\tAPPROVED=manos\n\tDELTA=56  (27 added, 6 deleted, 23 changed)\n\n\t* distcc/Makefile.in: edit\n\t* distcc/configure.ac: edit\n\t* distcc/popt/popt.c: edit\n\t* distcc/popt/popt.h: edit\n\t* distcc/popt/popthelp.c: edit\n\t* distcc/src/bulk.c: edit\n\t* distcc/src/emaillog.c: edit\n\t* distcc/src/exec.c: edit\n\t* distcc/src/hosts.c: edit\n\t* distcc/src/include_server_if.c: edit\n\t* distcc/src/lsdistcc.c: edit\n\t* distcc/src/prefork.c: edit\n\t* distcc/src/srvnet.c: edit\n\t* distcc/src/stats.c: edit\n\n\n2007/08/30 14:01:37  Manos Renieris <opensource@google.com>\n\n\tWhen receiving a string, print it out.\n\t\n\tR=klarlund,fergus\n\tDELTA=2  (2 added, 0 deleted, 0 changed)\n\n\t* distcc/src/rpc.c: edit\n\n\n2007/08/30 13:58:45  Nils Klarlund <opensource@google.com>\n\n\tMake tracing for client print out strings that are sent, not just their lengths.\n\t\n\tR=manos\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* distcc/src/rpc.c: edit\n\n\n2007/08/29 21:44:15  Nils Klarlund <opensource@google.com>\n\n\tFix bug in include server that gives rise to the include server being\n\tunable to find the translation unit.  Also, delete some unneeded\n\tvariables and make the remaining ones lowercased.\n\t\n\tR=manos,fergus\n\tDELTA=86  (73 added, 0 deleted, 13 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/basics_test.py: add\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_server.py: edit\n\n\n2007/08/29 21:35:45  Nils Klarlund <opensource@google.com>\n\n\tPrepare new release.\n\t\n\tR=manos,fergus\n\tDELTA=3  (2 added, 0 deleted, 1 changed)\n\n\t* version.sh: edit\n\n\n2007/08/28 17:56:22  Nils Klarlund <opensource@google.com>\n\n\tFix typos incidentally introduced in a previous change -- and fix a function\n\tthat scrubs file names in a test; it didn't work with links.\n\t\n\tR=manos\n\tDELTA=10  (1 added, 0 deleted, 9 changed)\n\n\t* include_server/include_server.py: edit\n\t* include_server/include_server_test.py: edit\n\n\n2007/08/28 17:50:46  Nils Klarlund <opensource@google.com>\n\n\tAdd test files, missing from a previous change.\n\t\n\tR=manos,fergus\n\tAPPROVED=manos\n\tDELTA=1  (1 added, 0 deleted, 0 changed)\n\n\t* include_server/test_data/dfoo/stat_triggers.h: add\n\t* include_server/test_data/stat_triggers.c: add\n\t* include_server/test_data/stat_triggers.h: add\n\n\n2007/08/28 17:47:06  Manos Renieris <opensource@google.com>\n\n\tObserve the HAVE_SENDFILE config variable.\n\t\n\tR=klarlund\n\tDELTA=7  (6 added, 0 deleted, 1 changed)\n\n\t* distcc/src/bulk.c: edit\n\n\n2007/08/28 16:23:43  Nils Klarlund <opensource@google.com>\n\n\tMake a central place for defining versions. Remove various generated\n\tfiles from source control.\n\t\n\tR=manos,fergus\n\tDELTA=13450  (41 added, 13401 deleted, 8 changed)\n\n\t* INSTALL: edit\n\t* build-distcc.sh: edit\n\t* configure: delete\n\t* configure.ac: edit\n\t* distcc/configure: delete\n\t* distcc/configure.ac: edit\n\t* include_server/configure: delete\n\t* include_server/configure.ac: edit\n\t* run_all_autoconf.sh: add\n\t* version.sh: add\n\n\n2007/08/28 12:41:59  Nils Klarlund <opensource@google.com>\n\n\t\n\tNew option --stat_reset_triggers.  The --stat_reset_triggers\n\targument is a list of path names. If any such path changes from\n\tnon-existing to existing during the build, then all stat-related caches\n\tare cleared.\n\t\n\tA test in include_server_test.py checks that the include analysis of a\n\tfile is done from scratch after a trigger path went from non-existing to\n\texisting.\n\t\n\tR=manos,fergus\n\tDELTA=229  (174 added, 44 deleted, 11 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/cache_basics.py: edit\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\t* include_server/include_server.py: edit\n\t* include_server/include_server_test.py: edit\n\t* pump.in: edit\n\n\n2007/08/27 14:05:26  Manos Renieris <opensource@google.com>\n\n\tPart of a change from Nils, with a test added. This once fixes the \n\t#include\"foobar\"\n\tcase.\n\t\n\tR=klarlund,fergus\n\tAPPROVED=klarlund\n\tDELTA=5  (4 added, 0 deleted, 1 changed)\n\n\t* include_server/parse_file.py: edit\n\t* include_server/parse_file_test.py: edit\n\n\n2007/08/27 13:56:47  Manos Renieris <opensource@google.com>\n\n\tPart of a change from Nils. This one adds support for the -include flag.\n\tI've moved the test data and added a test for parse_command.py.\n\t\n\tR=klarlund,fergus\n\tAPPROVED=klarlund\n\tDELTA=1545  (1498 added, 9 deleted, 38 changed)\n\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_analyzer_memoizing_node_test.py: edit\n\t* include_server/parse_command_test.py: edit\n\t* include_server/test_data/distcc/README: add\n\t* include_server/test_data/distcc/src/bulk.h: add\n\t* include_server/test_data/distcc/src/compile.h: add\n\t* include_server/test_data/distcc/src/config.h: add\n\t* include_server/test_data/distcc/src/distcc.c: add\n\t* include_server/test_data/distcc/src/distcc.h: add\n\t* include_server/test_data/distcc/src/emaillog.h: add\n\t* include_server/test_data/distcc/src/exitcode.h: add\n\t* include_server/test_data/distcc/src/hosts.h: add\n\t* include_server/test_data/distcc/src/implicit.h: add\n\t* include_server/test_data/distcc/src/include_me.h: add\n\t* include_server/test_data/distcc/src/state.h: add\n\t* include_server/test_data/distcc/src/trace.h: add\n\t* include_server/test_data/distcc/src/util.h: add\n\n\n2007/08/27 13:05:08  Manos Renieris <opensource@google.com>\n\n\tReport the client ip if we refuse a connection.\n\t\n\tR=dkegel,klarlund,fergus\n\tCC=ahyun\n\tDELTA=14  (7 added, 1 deleted, 6 changed)\n\n\t* distcc/src/srvnet.c: edit\n\n\n2007/08/20 13:21:57  Manos Renieris <opensource@google.com>\n\n\tAdd include_analyzer_memoizing_node_test to the list of tests.\n\t\n\tR=klarlund,fergus\n\tDELTA=2  (1 added, 0 deleted, 1 changed)\n\n\t* include_server/Makefile.in: edit\n\n\n2007/08/20 12:00:47  Manos Renieris <opensource@google.com>\n\n\tMinimize the output during tests; it obscures the test results.\n\t\n\tR=klarlund,fergus\n\tAPPROVED=klarlund\n\tDELTA=22  (1 added, 1 deleted, 20 changed)\n\n\t* include_server/c_extensions_test.py: edit\n\t* include_server/include_server_test.py: edit\n\t* include_server/macro_eval_test.py: edit\n\n\n2007/08/10 11:21:02  Nils Klarlund <opensource@google.com>\n\n\tFix a bug: memoization in the central FindNode algorithm was too\n\toptimistic.\n\t\n\tR=fergus,manos\n\tDELTA=20  (0 added, 20 deleted, 0 changed)\n\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\n\n2007/08/08 17:42:57  Nils Klarlund <opensource@google.com>\n\n\tMake include server not write a stack trace when the exception is \n\tNotCovered. Such a situation is not bad.\n\t\n\tAlso, remove a couple of unnecessary imports.\n\t\n\tR=manos,fergus\n\tDELTA=19  (5 added, 4 deleted, 10 changed)\n\n\t* include_server/include_server.py: edit\n\n\n2007/08/08 15:22:54  Nils Klarlund <opensource@google.com>\n\n\tMore missing test files. This time for computed includes.\n\t\n\tR=fergus,manos\n\tAPPROVED=manos\n\tDELTA=21  (21 added, 0 deleted, 0 changed)\n\n\t* include_server/test_data/test_computed_includes/helper.c: add\n\t* include_server/test_data/test_computed_includes/incl.h: add\n\t* include_server/test_data/test_computed_includes/inclA.h: add\n\t* include_server/test_data/test_computed_includes/src.c: add\n\t* include_server/test_data/test_computed_includes/srcA.c: add\n\n\n2007/08/08 00:58:27  Nils Klarlund <opensource@google.com>\n\n\tFix the problem that stat's in the main 'Resolve' routine of\n\tcache_basics were based on os.path.exists, not on os.path.isfile. Write \n\tnew test to verify that the behavior is now correct. Fix little problem\n\tin compress_files.py\n\t\n\tR=fergus,manos\n\tAPPROVED=fergus,manos\n\tDELTA=88  (66 added, 0 deleted, 22 changed)\n\n\t* include_server/c_extensions/distcc_pump_c_extensions_module.c: edit\n\t* include_server/c_extensions_test.py: edit\n\t* include_server/cache_basics.py: edit\n\t* include_server/compress_files.py: edit\n\t* include_server/include_server_test.py: edit\n\t* include_server/test_data/dfoo/i_am_perhaps_a_directory.h: add\n\t* include_server/test_data/i_am_perhaps_a_directory.h/empty_file: add\n\t* include_server/test_data/test_directory_probing.c: add\n\n\n2007/08/07 23:06:24  Nils Klarlund <opensource@google.com>\n\n\t'make test' was failing --- this CL fixes that.\n\t\n\tR=fergus,manos\n\tDELTA=1  (1 added, 0 deleted, 0 changed)\n\n\t* include_server/setup.py: edit\n\n\n2007/08/07 23:06:00  Nils Klarlund <opensource@google.com>\n\n\tMake release subversion = pump6.\n\t\n\tR=fergus,manos\n\tDELTA=31  (0 added, 0 deleted, 31 changed)\n\n\t* build-distcc.sh: edit\n\t* configure: edit\n\t* configure.ac: edit\n\t* distcc/configure: edit\n\t* distcc/configure.ac: edit\n\t* include_server/configure: edit\n\t* include_server/configure.ac: edit\n\n\n2007/08/07 16:26:27  Manos Renieris <opensource@google.com>\n\n\ta) Include the server side error messages in the maintainer email\n\tb) Don't output them on the screen.\n\t\n\tR=fergus,klarlund\n\tDELTA=116  (107 added, 1 deleted, 8 changed)\n\n\t* distcc/src/bulk.c: edit\n\t* distcc/src/bulk.h: edit\n\t* distcc/src/clirpc.c: edit\n\t* distcc/src/compile.c: edit\n\t* distcc/src/compile.h: edit\n\t* distcc/src/distcc.h: edit\n\t* distcc/src/emaillog.c: edit\n\t* distcc/src/emaillog.h: edit\n\t* distcc/src/remote.c: edit\n\n\n2007/08/07 16:20:57  Manos Renieris <opensource@google.com>\n\n\tFor testing purposes, add a way to stub out the include server.\n\t\n\tR=fergus,klarlund\n\tDELTA=73  (72 added, 1 deleted, 0 changed)\n\n\t* distcc/src/include_server_if.c: edit\n\t* distcc/src/util.c: edit\n\t* distcc/src/util.h: edit\n\n\n2007/08/06 23:07:25  Nils Klarlund <opensource@google.com>\n\n\tReintroduced 'introspection' so that an installed package can \n\tbe moved from say buildstaticrw to buildstatic with all references\n\tto executables moving along. Added overide mechanism as well.\n\t\n\tAlso, introduced a necessary check when running off source directory so\n\tsee whether there's more than on .so file.\n\t\n\tFinally, changed messages so that we're printing a message that the\n\tinclude server has started instead of one indicating that is starting.\n\t\n\tR=fergus,manos\n\tDELTA=74  (52 added, 9 deleted, 13 changed)\n\n\t* Makefile.in: edit\n\t* pump.in: edit\n\n\n2007/08/06 21:56:31  Nils Klarlund <opensource@google.com>\n\n\tVarious minor changes in response to comment by Fergus for a previous\n\tchange.\n\t\n\tR=fergus\n\tDELTA=12  (3 added, 0 deleted, 9 changed)\n\n\t* include_server/include_server.py: edit\n\n\n2007/08/06 14:29:44  Nils Klarlund <opensource@google.com>\n\n\tCheck that /dev/shm is actually writable and executable. Also, correct\n\ttwo very, very minor mistakes.\n\t\n\tR=fergus,manos\n\tDELTA=14  (4 added, 1 deleted, 9 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/compress_files.py: edit\n\t* include_server/include_server.py: edit\n\n\n2007/08/02 16:15:06  Nils Klarlund <opensource@google.com>\n\n\tAdd email notifications from include server. Delete email notifications\n\tfrom distcc client when caused by include server providing an error\n\tindication.\n\t\n\tFeatures:\n\t - new command line flags for enabling emails for exception conditions\n\t - a limit on the number of emails sent due to NotCovered exception\n\t - stack trace is included\n\t\n\tTesting:\n\t - tested new commnand line arguments\n\t - tested for each of the three exception handlers where email is\n\t   sent that email is indeed being sent\n\t - 'make test' for include_server\n\t\n\tR=fergus,manos\n\tDELTA=106  (86 added, 2 deleted, 18 changed)\n\n\t* distcc/src/compile.c: edit\n\t* include_server/basics.py: edit\n\t* include_server/include_server.py: edit\n\t* pump.in: edit\n\n\n2007/08/02 14:40:27  Nils Klarlund <opensource@google.com>\n\n\tAdd option -t or --time for total time spent in include server to be \n\tprinted on stderr. Example:\n\t\n\t Include server timing.  Elapsed: 18.2s User: 0.1s System: 0.0s Total: 0.1s\n\t\n\tR=fergus,manos\n\tDELTA=47  (32 added, 0 deleted, 15 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/include_server.py: edit\n\n\n2007/08/01 17:33:50  Nils Klarlund <opensource@google.com>\n\n\t\n\tMake the handling of computed includes sound. Upto now, the include\n\tserver failed to reprocess a file F with the property:\n\t- F transitively includes a file G\t\n\t- G contains a computed include and the support of its expression\n\t  contains a symbol X\n\t- X is defined or redefined after G is processed the first time\n\t\n\tWe hope to compile OpenOffice with this fix.\n\t\n\tLittle things:\n\t\n\t- Fixed include_analyzer_memoizing_node_test.py to allow regression test\n\t  for distcc itself to pass.\n\t\n\t- Removed dead code EvalExprDirs in include_analyzer.py.\n\t\n\t\n\tCorrectness testing:\n\t\n\t - In include_server: 'make test' works.\n\t\n\t - Function test_AdvancedComputedIncludes is added in \n\t   'include_server/include_server_test.py'. It contains the basic\n\t   scenario we are correcting for.\n\t\n\t - We ran multiple tests 'make-dbg -r -j80 third_party/lzo'; every test\n\t   succeeded. These did not succeed with existing version.\n\t\n\t - We built gws:gws and localsearch/mustang\n\t\n\tPerformance testing:\n\t\n\t  For make-dbg gws:gws -g0, the best time before the change:\n\t\n\t    make-dbg\n\t\n\t\t    real    7m44.230s\n\t\t    user    7m0.494s\n\t\t    sys     2m25.385s\n\t\n\t    Include server\n\t            Elapsed: 463.9s User: 72.5s System: 37.3s Total: 109.9s\n\t\n\t\n\tThe best time after:\n\t\n\t    make-dbg\n\t\t    real    7m44.772s\n\t\t    user    6m46.249s\n\t\t    sys     2m2.944s\n\t    Include server\n\t            Elapsed: 464.6s User: 87.4s System: 36.9s User + System: 124.3s\n\t\n\tThus, it seems that we've added 15s or about 8% to the include server\n\ttime. (These times are on a hyperthreaded machine and therefore hard to\n\tinterpret.)\n\t\n\tRemarks: the central algorithm still is in the need of refactoring. That\n\t8% running time was added because of the current change adds to my\n\timpression that the refactoring must be done with care.\n\t\n\tR=fergus,manos\n\tDELTA=316  (237 added, 25 deleted, 54 changed)\n\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\t* include_server/include_analyzer_memoizing_node_test.py: edit\n\t* include_server/include_server_test.py: edit\n\t* include_server/macro_eval.py: edit\n\t* include_server/macro_eval_test.py: edit\n\t* include_server/parse_file.py: edit\n\n\n2007/07/30 17:10:04  Manos Renieris <opensource@google.com>\n\n\tBump up the release number.\n\t\n\tR=klarlund,fergus\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* build-distcc.sh: edit\n\n\n2007/07/27 20:23:30  Manos Renieris <opensource@google.com>\n\n\tPush declaration to the top of block so that it's more portable.\n\t\n\tTBR=klarlund,fergus\n\tDELTA=4  (2 added, 2 deleted, 0 changed)\n\n\t* distcc/src/compile.c: edit\n\t* distcc/src/serve.c: edit\n\n\n2007/07/27 19:40:59  Manos Renieris <opensource@google.com>\n\n\tRespect the second part of the DEPENDENCIES_OUTPUT env variable.\n\t\n\tR=fergus,klarlund\n\tDELTA=79  (65 added, 5 deleted, 9 changed)\n\n\t* distcc/src/compile.c: edit\n\t* distcc/src/distcc.h: edit\n\t* distcc/src/dotd.c: edit\n\t* distcc/src/dotd.h: edit\n\t* distcc/src/serve.c: edit\n\n\n2007/07/27 09:09:53  Nils Klarlund <opensource@google.com>\n\n\tThis file went MIA. This CL will make 'make -C include_server test' pass.\n\t\n\tR=fergus,manos\n\tDELTA=14  (14 added, 0 deleted, 0 changed)\n\n\t* include_server/test_data/more_macros.c: add\n\n\n2007/07/26 21:25:25  Manos Renieris <opensource@google.com>\n\n\tPrint the protocol description even if opt_numeric is true.\n\t\n\tR=fergus,klarlund\n\tDELTA=4  (1 added, 0 deleted, 3 changed)\n\n\t* distcc/src/lsdistcc.c: edit\n\n\n2007/07/26 15:39:00  Manos Renieris <opensource@google.com>\n\n\tExplicitly rewrite the .d file dependency on the server;\n\t-MT does not work quite as advertised \n\t(see http://gcc.gnu.org/bugzilla/show_bug.cgi?id=12448):\n\tgcc adds the argument of -MT to the list of object files in\n\tthe dependencies, rather than replacing the default object file name\n\twith the argument of -MT; dotd does not tolerate two object\n\tfiles in the .d file.\n\t\n\tR=fergus,klarlund\n\tDELTA=71  (59 added, 5 deleted, 7 changed)\n\n\t* distcc/src/compile.c: edit\n\t* distcc/src/dotd.c: edit\n\t* distcc/src/dotd.h: edit\n\t* distcc/src/serve.c: edit\n\n\n2007/07/26 15:07:34  Fergus Henderson <opensource@google.com>\n\n\tAdd -Wuninitialized to CFLAGS.\n\t\n\tTESTED= Ran \"autoconf && configure && make clean && make\" and\n\t       verified that no new warnings were generated.\n\t\n\tR=manos\n\tCC=distcc-pump\n\tDELTA=2  (2 added, 0 deleted, 0 changed)\n\n\t* distcc/configure: edit\n\t* distcc/configure.ac: edit\n\n\n2007/07/25 11:28:33  Manos Renieris <opensource@google.com>\n\n\tDon't output the statistics for the doti file if there is no doti file.\n\t\n\tR=fergus,klarlund\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* distcc/src/remote.c: edit\n\n\n2007/07/25 11:26:03  Manos Renieris <opensource@google.com>\n\n\tFix a (serious) bug. sets_dotd was not initialized, and we were\n\tnot rewritting the dependency in the .d file.\n\t\n\tR=fergus,klarlund\n\tDELTA=2  (1 added, 0 deleted, 1 changed)\n\n\t* distcc/src/compile.c: edit\n\t* distcc/src/dotd.c: edit\n\n\n2007/07/24 17:33:23  Manos Renieris <opensource@google.com>\n\n\tAlways close the file descriptors after communicating with the\n\tserver, regardless of how soon we bail out.\n\t\n\tR=fergus,klarlund\n\tDELTA=19  (9 added, 9 deleted, 1 changed)\n\n\t* distcc/src/remote.c: edit\n\n\n2007/07/18 19:49:54  Manos Renieris <opensource@google.com>\n\n\tDon't try to send the preprocessed file to the server if the local \n\tpreprocessing failed.\n\t\n\tOtherwise, either the file sent to the server is wrong, or it does not\n\texist at all. In the first case, the result of the compilation is \n\twrong. In the second, trying to send an existing file is considered a\n\tcommunication or remote error, and we end up thinking that the\n\tremote host is down or in some other way unresponsive.\n\t\n\tUnder the current fallback mode, this ends up printing the erro\n\tmessages from local preprocessing twice, once while its trying to\n\tpreprocess the file to send it to the server, and once while trying to\n\tcompile locally. I think that's ok.\n\t\n\tR=fergus,klarlund\n\tDELTA=3  (3 added, 0 deleted, 0 changed)\n\n\t* distcc/src/remote.c: edit\n\n\n2007/07/18 16:21:35  Manos Renieris <opensource@google.com>\n\n\tAdded some notes on the implementation of protocol version 3.\n\t\n\tR=fergus,klarlund\n\tDELTA=61  (61 added, 0 deleted, 0 changed)\n\n\t* distcc/doc/protocol-3-impl.txt: add\n\n\n2007/07/13 14:22:13  Manos Renieris <opensource@google.com>\n\n\tTiny change to use the phony feature directly for the pump target.\n\t\n\tR=klarlund,fergus\n\tDELTA=5  (1 added, 3 deleted, 1 changed)\n\n\t* Makefile.in: edit\n\n\n2007/07/12 15:17:54  Nils Klarlund <opensource@google.com>\n\n\tAddressing Fergus's comments for a previous change + more changes.\n\t\n\tR=fergus,manos\n\tDELTA=45  (27 added, 6 deleted, 12 changed)\n\n\t* README: edit\n\n2007/07/10 17:18:31  Manos Renieris <opensource@google.com>\n\n\tAdded a description for protocol version 3.\n\t\n\tR=klarlund,fergus\n\tDELTA=82  (82 added, 0 deleted, 0 changed)\n\n\t* distcc/doc/protocol-3.txt: add\n\n\n2007/07/09 16:01:36  Nils Klarlund <opensource@google.com>\n\n\tNew subversion number for packages.\n\t\n\tR=fergus,manos\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* build-distcc.sh: edit\n\n\n2007/07/09 13:50:11  Nils Klarlund <opensource@google.com>\n\n\tWhen using --verbose, the variable denoting the option level is not\n\ttouched. So, --verbose is not equivalent to setting the option level to \n\t'debug' as the manual says.  This is fixed.\n\t\n\tR=fergus,manos\n\tDELTA=1  (1 added, 0 deleted, 0 changed)\n\n\t* distcc/src/dopt.c: edit\n\n\n2007/07/09 13:41:11  Nils Klarlund <opensource@google.com>\n\n\tSimplify memory allocation strategy in dcc_run_job.\n\t\n\tTests: 'make valgrind-check'.\n\t\n\tR=fergus,manos\n\tDELTA=22  (9 added, 3 deleted, 10 changed)\n\n\t* distcc/src/serve.c: edit\n\n\n2007/07/05 14:38:09  Nils Klarlund <opensource@google.com>\n\n\tFix server and include server to allow absolute translation unit. I\n\trefactored a bit to cut down the length of dcc_run_job (which is still\n\ttoo long).\n\t\n\tTESTING: I have verified that regexp-options.cc now compiles on pump\n\tserver. I have compiled several hundred other files.  Also, I verified\n\tthat 'make valgrind-check' passes. \n\t\n\tNote: a problem occurred in an lsdistcc test. The output from lsdistcc\n\twas not in the expected order. I changed the test to sort the output\n\tbefore the comparison.\n\t\n\tR=fergus,manos\n\tDELTA=241  (145 added, 76 deleted, 20 changed)\n\n\t* distcc/src/serve.c: edit\n\t* distcc/test/testdistcc.py: edit\n\t* include_server/include_analyzer.py: edit\n\n\n2007/06/29 15:19:42  Nils Klarlund <opensource@google.com>\n\n\tFix email address in comments and code by introducing an abstraction.\n\t\n\tR=fergus,manos\n\tDELTA=7  (1 added, 0 deleted, 6 changed)\n\n\t* distcc/src/compile.c: edit\n\t* distcc/src/emaillog.c: edit\n\t* distcc/src/emaillog.h: edit\n\n\n2007/06/29 15:15:39  Nils Klarlund <opensource@google.com>\n\n\tFix problem that a stack trace was produced for Ctrl-C. In particular,\n\twe discovered that printing out args[0] of the instance object is not\n\twise, because an index error may ensue.\n\t\n\tR=fergus,manos\n\tDELTA=20  (9 added, 5 deleted, 6 changed)\n\n\t* include_server/include_server.py: edit\n\n\n2007/06/28 18:30:54  Nils Klarlund <opensource@google.com>\n\n\tRemove offensive code. I'm now handling configuring of pump in an\n\tauxiliary script, also called 'pump'.\n\t\n\tR=fergus,manos\n\tDELTA=11  (0 added, 8 deleted, 3 changed)\n\n\t* Makefile.in: edit\n\t* pump.in: edit\n\n\n2007/06/28 15:51:09  Manos Renieris <opensource@google.com>\n\n\tChange the address we send errors to.\n\t\n\tR=fergus,klarlund\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* distcc/src/emaillog.c: edit\n\n\n2007/06/26 22:03:23  Manos Renieris <opensource@google.com>\n\n\tAdded -Pprotocol option, which will print out only the servers that \n\tsupport (at least) the given protocol. \n\tlsdistcc wll now print the protocol type out with the host\n\ti.e. host.domain.com,lzo.\n\t\n\tR=fergus,klarlund\n\tCC=distcc-pump\n\tDELTA=134  (116 added, 9 deleted, 9 changed)\n\n\t* distcc/Makefile.in: edit\n\t* distcc/src/lsdistcc.c: edit\n\n\n2007/06/21 17:45:39  Manos Renieris <opensource@google.com>\n\n\tTell the user why they are seeing error messages twice.\n\t\n\tR=fergus,klarlund\n\tDELTA=3  (2 added, 0 deleted, 1 changed)\n\n\t* distcc/src/compile.c: edit\n\n\n2007/06/21 16:40:25  Manos Renieris <opensource@google.com>\n\n\tForgot emaillog.h. Oops!\n\t\n\tR=fergus,klarlund\n\tDELTA=8  (8 added, 0 deleted, 0 changed)\n\n\t* distcc/src/emaillog.h: add\n\n\n2007/06/21 13:04:17  Manos Renieris <opensource@google.com>\n\n\tAdd email logging.\n\t\n\tR=klarlund,fergus\n\tDELTA=170  (137 added, 15 deleted, 18 changed)\n\n\t* distcc/Makefile.in: edit\n\t* distcc/src/compile.c: edit\n\t* distcc/src/distcc.c: edit\n\t* distcc/src/emaillog.c: add\n\t* distcc/src/trace.c: edit\n\t* distcc/src/traceenv.c: edit\n\n\n2007/06/20 16:10:59  Nils Klarlund <opensource@google.com>\n\n\tFix spelling error in Makefile.in, bump-up subversion number.\n\t\n\tR=fergus,manos\n\tDELTA=2  (0 added, 0 deleted, 2 changed)\n\n\t* build-distcc.sh: edit\n\t* include_server/Makefile.in: edit\n\n\n2007/06/20 15:36:43  Nils Klarlund <opensource@google.com>\n\n\tFurther enviroment variables for controlling behavior of include server\n\twhen invoked through pump.\n\t\n\tAlso, we fixed the problem that for the common situation that configure\n\tis run in the top level directory of the source tree it was impossible\n\tto run 'pump'. \n\t\n\tThe solution is to regard the script alteration by the Makefile rule for\n\t'pump' something that regards mainly the installed version. The source\n\ttree version of pump finds its Python files in the source directory and\n\tits .so file under the 'build/lib.xxx/include_server' subdirectory of th\n\tscr directory.\n\t\n\tFinally, we took out the hardcoding for values of the potential distcc\n\tservers.  When the make rule for 'pump' is run, the environment variable\n\tDISTCC_POTENTIAL_HOSTS with its current value is copied into 'pump' --\n\tif it is set. \n\t\n\tSo, now I prepare distribution by doing:\n\t\n\t    DISTCC_POTENTIAL_HOSTS=\"test-distcc1.ame test-distcc2.ame test-distcc3.ame test-distcc4.ame test-distcc5.ame pump1.ame pump2.ame pump3.ame pump4.ame pump5.ame pump6.ame pump7.ame pump8.ame pump9.ame distcc1\" make pump\n\t\n\tThis also of course makes the 'pump' script work in the source\n\tdirectory, where it'll now pick up the servers I specified for the ad\n\thoc and regression tests I run.\n\t\n\tWith this machinery, I was again able to easily test the other pending\n\tchangelists for the include server.\n\t\n\n\t* Makefile.in: edit\n\t* pump.in: edit\n\n\n2007/06/20 01:38:51  Fergus Henderson <opensource@google.com>\n\n\tWhen aborting, make sure we exit with a non-zero exit status.\n\t\n\tTBR=klarlund\n\n\t* include_server/include_server.py: edit\n\n\n2007/06/19 23:44:15  Nils Klarlund <opensource@google.com>\n\n\tFix the problem that source was nuked by 'make clean'.\n\t\n\tR=manos,fergus\n\tDELTA=6  (0 added, 1 deleted, 5 changed)\n\n\t* include_server/Makefile.in: edit\n\n\n2007/06/19 23:41:55  Nils Klarlund <opensource@google.com>\n\n\tReapplying after rollback.\n\tMake --verify mode work with the include server and improve error\n\t     \treporting. An internal error would now look like:\n\t\n\t   WARNING: Preprocessing locally. Include server internal error:\n\t   'exceptions.TypeError: expected string or buffer' for translation unit\n\t   'maps/frontend/geocode_api_renderer.cc'\n\t\n\t We also fix a bug regarding TERM signal that would not properly terminate an\n\t include server.\n\t\n\tR=fergus,manos\n\tDELTA=58  (38 added, 2 deleted, 18 changed)\n\n\t* include_server/cache_basics.py: edit\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_server.py: edit\n\n\n2007/06/19 23:39:46  Nils Klarlund <opensource@google.com>\n\n\t\n\tWe fix several bugs in the include server.\n\t\n\t- The macro evaluator has been completely rewritten. In particular, it\n\t  can now be used to parse files in maps/frontend that involve computed\n\t  includes like:\n\t\n\t    #include MAPS_TEMPLATE_VARNAMES(map_kml_results)\n\t\n\t- We also now parse macro calls on arguments that contain macro calls.\n\t\n\t- We implement the 'disabled' semantics of macro invocation (for\n\t  infinite recursion prevention).\n\t\n\t- We now apply # and ## only as part of expanding function-like macros.\n\t\n\t- We added several new tests, in part taken from the CPP Internals\n\t  document.\n\t\n\t- A test for ResolveExpr with pedagodical value has been added (and\n\t  another file for this test to work).\n\t\n\t- The macro evaluator has been thouroughly commented.\n\t\n\t- The parser has been updated so that it no longer thinks that '//'\n\t  within a filepath is a C++ comment.\n\t\n\t- The parser's handling of macro calls (and definitions) was\n\t  improved. Note that we now only use the parser's understanding of\n\t  macros for function-like defines, not for macro invocations, which are\n\t  treated in a new routine in macro_eval.\n\t\n\tR=fergus,manos\n\tDELTA=531  (373 added, 68 deleted, 90 changed)\n\n\t* include_server/macro_eval.py: edit\n\t* include_server/macro_eval_test.py: edit\n\t* include_server/parse_file.py: edit\n\t* include_server/parse_file_test.py: edit\n\t* include_server/test_data/maps/foo.tpl.varnames.h: add\n\t* include_server/test_data/parse.c: edit\n\n\n2007/06/19 13:27:49  Manos Renieris <opensource@google.com>\n\n\tUpdate the rpm prefix to be /usr, because that's where\n\tthe init.d scripts expect it.\n\t\n\tR=klarlund,fergus\n\tDELTA=4  (0 added, 0 deleted, 4 changed)\n\n\t* distcc.spec: edit\n\n\n2007/06/18 23:10:26  Fergus Henderson <opensource@google.com>\n\n\tGive better error messages in cases where we can't determine the\n\tcompiler's default search path(s).  Also don't try to terminate the\n\tinclude server in those cases (it wasn't actually terminating anyway,\n\tsince the sys.exit() exception was being caught by the SocketServer\n\tclass, I think).\n\t\n\tR=karlund\n\tCC=distcc-pump\n\tDELTA=17  (9 added, 0 deleted, 8 changed)\n\n\t* include_server/compiler_defaults.py: edit\n\n\n2007/06/15 15:07:45  Fergus Henderson <opensource@google.com>\n\n\tAnother change towards getting \"make check\" working again.\n\t\n\tTBR=manos\n\n\t* include_server/Makefile.in: edit\n\n\n2007/06/15 14:58:27  Fergus Henderson <opensource@google.com>\n\n\tMake the \"pump\" target depend on the \"Makefile\" target,\n\tso that it gets rebuilt if you configure with a different\n\tprefix.\n\tThis is in response to manos' verbal post-submit review\n\tcomments on a previous change.\n\t\n\tTBR=manos\n\n\t* Makefile.in: edit\n\n\n2007/06/15 14:52:08  Nils Klarlund <opensource@google.com>\n\n\tThis CL was submitted too early.\n\t\n\tAutomated g4 rollback of a previous change:\n\t\n\t      Make --verify mode work with the include server and improve error\n\t      reporting. An internal error would now look like:\n\t\n\t WARNING: Preprocessing locally. Include server internal error:\n\t 'exceptions.TypeError: expected string or buffer' for translation unit\n\t 'maps/frontend/geocode_api_renderer.cc'\n\t\n\t      We fix a bug regarding TERM signal that would not properly terminate an\n\t      include server.\n\t\n\n\t* include_server/cache_basics.py: edit\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_server.py: edit\n\n\n2007/06/15 14:35:39  Fergus Henderson <opensource@google.com>\n\n\tFix bugs with the generation of the \"pump\" script from \"pump.in\":\n\t  - $ was not properly escaped and was being interpreted\n\t    by Make rather than the shell\n\t  - the pump.in script that is being copied could be read-only\n\t    and we did not (a) remove the old read-only copy nor (b) make\n\t    the new copy writable.\n\t  - pump should be a real target, not a phony target\n\t  - we need a dependency \"all: pump\"\n\t\n\tP.S. After syncing this change, you need to run \"autoconf\" (or\n\tsync Manos' change which updated the configure script),\n\t\"configure\", and then \"make\".\n\t\n\tTBR=manos\n\tCC=distcc-pump\n\tDELTA=5  (1 added, 0 deleted, 4 changed)\n\n\t* Makefile.in: edit\n\n\n2007/06/15 14:33:52  Fergus Henderson <opensource@google.com>\n\n\tTemporary work-around for problem where \"make clean\" nukes the source\n\ttree.\n\t\n\tTBR=manos,klarlund\n\n\t* include_server/Makefile.in: edit\n\n\n2007/06/15 14:26:45  Fergus Henderson <opensource@google.com>\n\n\tAdd support for running tests in lzo mode or in pump mode.\n\t\n\tR=manos\n\tCC=distcc-pump\n\tDELTA=38  (27 added, 2 deleted, 9 changed)\n\n\t* distcc/Makefile.in: edit\n\t* distcc/test/testdistcc.py: edit\n\n\n2007/06/15 13:34:48  Manos Renieris <opensource@google.com>\n\n\tUpdate the configure script.\n\tRemove pump, which is now generated by make.\n\t\n\tR=klarlund,fergus\n\tDELTA=272  (52 added, 219 deleted, 1 changed)\n\n\t* configure: edit\n\t* pump: delete\n\n\n2007/06/15 07:13:52  Nils Klarlund <opensource@google.com>\n\n\tFix file permission to +x.\n\t\n\tR=manos\n\n\t* build-distcc.sh: edit\n\n\n2007/06/14 22:51:35  Nils Klarlund <opensource@google.com>\n\n\t      Make --verify mode work with the include server and improve error\n\t      reporting. An internal error would now look like:\n\t\n\t WARNING: Preprocessing locally. Include server internal error:\n\t 'exceptions.TypeError: expected string or buffer' for translation unit\n\t 'maps/frontend/geocode_api_renderer.cc'\n\t\n\t      We fix a bug regarding TERM signal that would not properly terminate an\n\t      include server.\n\t\n\tR=fergus,manos\n\n\t* include_server/cache_basics.py: edit\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_server.py: edit\n\n\n2007/06/14 17:21:22  Manos Renieris <opensource@google.com>\n\n\tScript and spec file for building rpm.\n\t\n\tR=fergus,klarlund\n\tDELTA=490  (490 added, 0 deleted, 0 changed)\n\n\t* build-distcc.sh: add\n\t* distcc.spec: add\n\n\n2007/06/14 16:10:47  Manos Renieris <opensource@google.com>\n\n\tAdd DESTDIR so that rpm building can find the pump script.\n\t\n\tR=fergus,klarlund\n\tDELTA=6  (3 added, 0 deleted, 3 changed)\n\n\t* Makefile.in: edit\n\n\n2007/06/14 14:06:05  Manos Renieris <opensource@google.com>\n\n\tRevamp the configure/make/make install process:\n\t- the python building and installation is done by setup.py.\n\t- include_server is now a python package.\n\t- include_server/c_extensions is not buildable by itself anymore.\n\t- include_server tests are build into their own directory.\n\t- the pump script is \"finished\" at make time, before install.\n\t- run.py is not needed anymore\n\t\n\tR=fergus,klarlund\n\tDELTA=633  (456 added, 147 deleted, 30 changed)\n\n\t* Makefile.in: edit\n\t* configure.ac: edit\n\t* distcc/configure: edit\n\t* distcc/configure.ac: edit\n\t* include_server/Makefile.in: edit\n\t* include_server/__init__.py: add\n\t* include_server/c_extensions/Makefile.in: delete\n\t* include_server/c_extensions/setup.py: delete\n\t* include_server/c_extensions_test.py: edit\n\t* include_server/configure: edit\n\t* include_server/configure.ac: edit\n\t* include_server/setup.py: add\n\t* pump.in: add\n\n\n2007/06/11 16:30:54  Nils Klarlund <opensource@google.com>\n\n\tImproving start-up time. It turns out that the include server\n\tis not the bottleneck -- it's about 200ms to start it. But\n\tlsdistcc is. So with change I'm just trying to save that\n\tamount of time by starting the include server while doing lsdistcc.\n\t\n\tR=fergus,manos\n\tDELTA=106  (70 added, 2 deleted, 34 changed)\n\n\t* pump: edit\n\n\n2007/06/11 16:22:37  Nils Klarlund <opensource@google.com>\n\n\t\n\tFix \"ERROR: failed to connect to UNIX-DOMAIN\n\t/dev/shm/include-server: Resource temporarily\n\tunavailable\". The former assignment to\n\tserver.request_queue_size was ineffectual because this\n\tparameter is used by the constructor for a server. The\n\tparameter is passed to socket.listen.\n\t\n\tR=manos,fergus\n\tDELTA=22  (17 added, 2 deleted, 3 changed)\n\n\t* include_server/include_server.py: edit\n\n\n2007/06/08 18:15:16  Fergus Henderson <opensource@google.com>\n\n\tSome minor fixes to avoid warnings from gcc.\n\t\n\tAlso a small bug fix: when cleanup_tempfiles is invoked from\n\ta signal handler, we should not call free(), because it is\n\tunsafe to call free() from an asynchronous signal handler\n\tthat could be executed in the middle of another call to malloc()\n\tor free().  Also fix the use of volatile in cleanup_tempfiles.\n\t\n\tR=manos\n\tCC=distcc-pump\n\tDELTA=87  (42 added, 16 deleted, 29 changed)\n\n\t* distcc/src/cleanup.c: edit\n\t* distcc/src/distcc.c: edit\n\t* distcc/src/distcc.h: edit\n\t* distcc/src/dsignal.c: edit\n\t* distcc/src/trace.c: edit\n\t* distcc/src/util.c: edit\n\n\n2007/06/08 17:52:40  Fergus Henderson <opensource@google.com>\n\n\tAllow \".i\" and \".ii\" file names as inputs to the include server.\n\tAlso some improvements to the messages produced by the include server.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=26  (11 added, 7 deleted, 8 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/include_server.py: edit\n\t* include_server/parse_command.py: edit\n\t* include_server/parse_file.py: edit\n\t* include_server/run.py: edit\n\n\n2007/06/08 16:40:16  Nils Klarlund <opensource@google.com>\n\n\tImprove warning messages regarding include server failures.\n\t\n\tR=fergus,manos\n\tDELTA=3  (2 added, 0 deleted, 1 changed)\n\n\t* distcc/src/compile.c: edit\n\t* distcc/src/include_server_if.c: edit\n\n\n2007/06/07 21:41:25  Manos Renieris <opensource@google.com>\n\n\tPut all declarations before executable code, for compatibility with older\n\tC compilers.\n\t\n\tR=fergus,klarlund\n\tDELTA=15  (6 added, 7 deleted, 2 changed)\n\n\t* distcc/src/clirpc.c: edit\n\t* distcc/src/include_server_if.c: edit\n\t* distcc/src/srvrpc.c: edit\n\t* include_server/c_extensions/distcc_pump_c_extensions_module.c: edit\n\n\n2007/06/07 15:47:57  Nils Klarlund <opensource@google.com>\n\n\tCheck that execution of gcc to find defaults succeeds and warns\n\tappropriately if not.\n\t\n\tR=fergus,manos\n\tDELTA=17  (11 added, 5 deleted, 1 changed)\n\n\t* include_server/compiler_defaults.py: edit\n\n\n2007/06/07 15:41:55  Nils Klarlund <opensource@google.com>\n\n\tFixed bugs from the autoconf conversions.  Now, the include\n\tserver extension builds.\n\t\n\tR=fergus,manos\n\tDELTA=8  (0 added, 3 deleted, 5 changed)\n\n\t* distcc/Makefile.in: edit\n\t* include_server/c_extensions/setup.py: edit\n\n\n2007/06/05 14:50:22  Nils Klarlund <opensource@google.com>\n\n\tFixes: so that we can find the include server, also in\n\tinstallation. Note that we erase previous value of PYTHONPATH\n\tfor performance reasons.\n\t\n\tR=fergus\n\tDELTA=137  (91 added, 23 deleted, 23 changed)\n\n\t* include_server/run.py: edit\n\t* pump: edit\n\n\n2007/06/04 17:46:36  Nils Klarlund <opensource@google.com>\n\n\tThis is to repair a previous change, which I submitted by\n\tmistake.\n\tThis CL together with the previous CL fix bugs:\n\t\n\t- check that include_server_pid exists before killing it\n\t\n\t- don't strip \\n before stuffing hosts into temporary variable\n\t\n\tAlso fixes a couple of minor syntax issues in comments.\n\t\n\tR=manos,fergus\n\tDELTA=4  (1 added, 0 deleted, 3 changed)\n\n\t* pump: edit\n\n\n2007/06/04 16:04:51  Fergus Henderson <opensource@google.com>\n\n\tFix a bug where we were attempting to use memory that had already been\n\tfreed.  (I detected this by running the tests under valgrind.)\n\t\n\tR=manos\n\tCC=distcc-pump\n\tDELTA=19  (13 added, 0 deleted, 6 changed)\n\n\t* distcc/src/serve.c: edit\n\n\n2007/06/04 14:53:03  Nils Klarlund <opensource@google.com>\n\n\tFixed bug: 'opts' were appended to only last host. Fixed very\n\tminor syntax issues in comments.\n\t\n\n\t* pump: edit\n\n\n2007/06/04 14:32:33  Fergus Henderson <opensource@google.com>\n\n\t1.  Use srcdir rather than top_srcdir to locate the mkinstalldirs script;\n\t    now that distcc_pump has its own autoconf-generated configure script,\n\t    top_srcdir is now \"distcc_pump\" rather than \"distcc\".\n\t\n\t2.  Add USE_VALGRIND variable, and use it in the maintainer-check rule,\n\t    so that you can do 'make USE_VALGRIND=--valgrind\" maintainer-check'\n\t    to run the tests under valgrind.\n\t\n\tR=manos\n\tCC=distcc-pump\n\tDELTA=7  (5 added, 0 deleted, 2 changed)\n\n\t* distcc/Makefile.in: edit\n\n\n2007/06/04 13:43:00  Manos Renieris <opensource@google.com>\n\n\tMake lsdistcc 80 columns wide.\n\t\n\tR=klarlund,fergus\n\tDELTA=199  (113 added, 5 deleted, 81 changed)\n\n\t* distcc/src/lsdistcc.c: edit\n\n\n2007/06/04 11:40:08  Fergus Henderson <opensource@google.com>\n\n\tAdd support for running tests under valgrind.\n\t\n\tR=manos\n\tCC=distcc-pump\n\tDELTA=108  (59 added, 3 deleted, 46 changed)\n\n\t* distcc/test/testdistcc.py: edit\n\n\n2007/06/04 11:31:24  Fergus Henderson <opensource@google.com>\n\n\tAdd \"install\" targets to the makefiles.\n\t\n\tUse autoconf-generated configure scripts, in order to support\n\tthe standard configure options such as '--prefix', etc.\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=4959  (4816 added, 110 deleted, 33 changed)\n\n\t* Makefile: delete\n\t* Makefile.in: add\n\t* configure: edit\n\t* configure.ac: add\n\t* include_server/Makefile: delete\n\t* include_server/Makefile.in: add\n\t* include_server/c_extensions/Makefile: delete\n\t* include_server/c_extensions/Makefile.in: add\n\t* include_server/configure: add\n\t* include_server/configure.ac: add\n\n\n2007/06/04 11:20:11  Fergus Henderson <opensource@google.com>\n\n\tRewrite the pump script using functions.\n\tUse lowercase names for shell variables that are local to this process.\n\tDocument the DISTCC_PUMP_LOCATION environment variable in the usage\n\tmessage.\n\tEnsure error messages go to stderr rather than stdout.\n\tFix some problems with the cleanup: the order of cleanup was wrong.\n\tIt was doing \"rmdir $SOCKET_DIR\" before \"rm $SOCKET\", which meant\n\tthe rmdir could fail since the directory isn't empty yet.\n\tCheck for \"lsdistcc\" in the same directory as \"pump\", if it isn't\n\tfound in the \"distcc\" subdirectory.\n\t\n\tR=klarlund\n\tCC=manos,distcc-pump\n\tDELTA=197  (119 added, 51 deleted, 27 changed)\n\n\t* pump: edit\n\n\n2007/06/04 00:27:53  Fergus Henderson <opensource@google.com>\n\n\tUse gcc's automatic dependency generation.\n\t\n\tWithout this change, the Makefile was missing dependencies on\n\tall the header files, so editing say src/distcc.h and then\n\trunning \"make\" would not cause a recompile.\n\t\n\tR=manos\n\tCC=distcc-pump\n\tDELTA=5  (3 added, 0 deleted, 2 changed)\n\n\t* distcc/Makefile.in: edit\n\t* distcc/configure: edit\n\t* distcc/configure.ac: edit\n\n\n2007/06/01 19:24:28  Nils Klarlund <opensource@google.com>\n\n\t      Handshake mechanism for starting include server.\n\t      Introduce os.fork() in include server, so that the parent\n\t      returns right after starting the child. The child becomes the\n\t      real include server.  Change options so as to allow the parent\n\t      to write the child pid to a file. That will allow an invoking\n\t      script to send SIGTERM to the include server later.\n\t\n\t      Fix missing deletion of temp file in include_server.\n\t\n\t      Also, fixed bug: the initialization of the temp directory was\n\t      done twice, from two different modules.\n\t\n\tR=fergus,manos\n\tDELTA=168  (85 added, 8 deleted, 75 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/include_server.py: edit\n\t* pump: edit\n\n\n2007/06/01 19:06:50  Nils Klarlund <opensource@google.com>\n\n\tChange file permission to +x.\n\t\n\n\t* distcc/contrib/distccd-on-servers: edit\n\n\n2007/06/01 19:04:28  Nils Klarlund <opensource@google.com>\n\n\t\n\tNew tests for include analyzer; corrections to DirNameCache.\n\t\n\tDirnameCache was hardcoded to return absolute directories --\n\tthat was wrong.\n\t\n\tAlso, define helper function RetrieveDirectoriesExceptSys in\n\tcache_basic for test purposes.\n\t\n\tMake _CalculateIncludeClosureExceptSystem call Fillcache so as\n\tto avoid prerequisite condition.\n\t\n\tFix missing deletion of temp file in include_server.\n\t\n\tFix another couple of minor bugs.\n\t\n\tR=fergus,manos\n\tDELTA=331  (266 added, 21 deleted, 44 changed)\n\n\t* include_server/Makefile: edit\n\t* include_server/cache_basics.py: edit\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\t* include_server/include_analyzer_memoizing_node_test.py: add\n\t* include_server/include_server_test.py: edit\n\t* include_server/parse_command_test.py: edit\n\t* include_server/run.py: edit\n\n\n2007/06/01 15:48:51  Nils Klarlund <opensource@google.com>\n\n\tFixes bug so that 'status' works as intended. Also fixes bugs\n\tthat meant that the return command was given a non-integer argument.\n\t\n\tR=fergus,manos\n\tDELTA=17  (3 added, 0 deleted, 14 changed)\n\n\t* distcc/contrib/distccd-on-servers: edit\n\n\n2007/06/01 13:22:00  Manos Renieris <opensource@google.com>\n\n\tPlug memory leaks in the server.\n\t\n\tR=klarlund,fergus\n\tCC=distcc-pump\n\tDELTA=111  (54 added, 26 deleted, 31 changed)\n\n\t* distcc/src/arg.c: edit\n\t* distcc/src/serve.c: edit\n\t* distcc/src/srvrpc.c: edit\n\n\n2007/05/31 20:26:35  Nils Klarlund <opensource@google.com>\n\n\tInitial submission: script for handling distccd on servers.\n\t\n\tR=fergus,manos\n\tDELTA=142  (142 added, 0 deleted, 0 changed)\n\n\t* distcc/contrib/distccd-on-servers: add\n\n\n2007/05/31 19:14:53  Fergus Henderson <opensource@google.com>\n\n\tChange the distcc_pump Makefile and configure script to support\n\tbuilding with the build directory being different than the\n\tsource directory, e.g.\n\t\n\t\tmkdir obj\n\t\tcd obj\n\t\t../configure\n\t\tmake\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=144  (91 added, 14 deleted, 39 changed)\n\n\t* INSTALL: edit\n\t* Makefile: edit\n\t* configure: edit\n\t* distcc/Makefile.in: edit\n\t* include_server/Makefile: edit\n\t* include_server/c_extensions/Makefile: edit\n\t* include_server/c_extensions/setup.py: edit\n\t* include_server/run.py: edit\n\n\n2007/05/31 15:32:41  Manos Renieris <opensource@google.com>\n\n\tRetry connecting if we get EAGAIN.\n\t\n\tR=klarlund,fergus\n\tDELTA=5  (4 added, 0 deleted, 1 changed)\n\n\t* distcc/src/clinet.c: edit\n\n\n2007/05/30 20:13:37  Nils Klarlund <opensource@google.com>\n\n\tContinuing \"Continuing cleanup of the code...\",\n\twe fix various tiny buglets and wipe unnecessary variables\n\tfrom mirror-path.\n\t\n\tTESTED=(cd include_closure; make test)\n\t\n\tR=fergus\n\tCC=csilvers\n\tDELTA=24  (0 added, 17 deleted, 7 changed)\n\n\t* include_server/compiler_defaults.py: edit\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\t* include_server/macro_eval.py: edit\n\t* include_server/mirror_path.py: edit\n\t* include_server/mirror_path_test.py: edit\n\n\n2007/05/30 16:59:02  Craig Silverstein <opensource@google.com>\n\n\tContinuing cleanup of the code, mostly to get varnames to\n\tbe consistent.  But also some functionality changes:\n\t\n\t1) Separated out the realpath_map into two data structures,\n\t   one that canonicalizes the paths, and the other that keeps\n\t   the systemdir-prefix information.  Both are now part of the\n\t   mondo-cache object.  There's still a bit more work to be\n\t   done to get the systemdir-prefix cache working intuitively.\n\t\n\t2) Added RelpathMapToIndex, which requires that its keys not\n\t   start with a /.  Use this new class for includepaths, so we\n\t   get better error checking; we'll now correctly fail when we\n\t   see code like #include </usr/local/string.h>, which we\n\t   can't handle properly.\n\t\n\t3) [smaller] We now fall back on the python equivalents if we\n\t   don't have the C-speedups for realpath and stat().\n\t\n\t4) [smaller] Modified the convenience functions to be per\n\t   data-type rather than per varialbe: we have SearchdirIndex\n\t   and CurrdirIndex rather than just DirectoryIndex.  (Since\n\t   this function is never used, it doesn't really matter,\n\t   but...)\n\t\n\tThese were more syntactic cleanup:\n\t\n\t1) Use currdir everywhere to mean the current directory, to\n\t   match cache_basics.py.\n\t\n\t2) I started some comment changes to be more consistent.  For\n\t   instance, every time we had a realpath_map argument, I try\n\t   to say what a realpath_map is (in one line!) rather than\n\t   just say its type -- which is, admittedly, better than\n\t   nothing.  Only small work done here; still lots more.\n\t\n\t3) Some places are still using fp instead of includepath.\n\t   I've fixed up most, but for some I'm not sure that the fp\n\t   is an includepath exactly, so I'm waiting to clean those\n\t   up.\n\t\n\t4) Several places would pass a list in to a routine by\n\t   reference, so the procedure would fill the passed-in list\n\t   rather than returning a new list.  This can be more\n\t   efficient, but is harder to follow, especially in python\n\t   where pass-by-value is expected.  Change to a more natural\n\t   control-flow in situations where efficiency isn't critical.\n\t\n\tI also corrected the following deviations from the style\n\tguide:\n\t\n\t1) (Almost) no \"naked\" exceptions.  Before there was lots of\n\t   \"try: os-operation except: die\".  Now we actually check\n\t   that it's an IOError or an OSError.  We also now print out\n\t   the 'why' status as part of the error message.\n\t\n\t2) Got rid of unused imports.\n\t\n\t3) Made sure there was at least two spaces between code and\n\t   end-of-line comments.  Still more places to fix this one...\n\t\n\t4) Nixed trailing whitespace (at the end of each line).\n\t\n\tR=klarlund\n\tDELTA=719  (297 added, 193 deleted, 229 changed)\n\n\t* include_server/basics.py: edit\n\t* include_server/cache_basics.py: edit\n\t* include_server/compiler_defaults.py: edit\n\t* include_server/compress_files.py: edit\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\t* include_server/include_server.py: edit\n\t* include_server/include_server_test.py: edit\n\t* include_server/macro_eval.py: edit\n\t* include_server/macro_eval_test.py: edit\n\t* include_server/mirror_path.py: edit\n\t* include_server/mirror_path_test.py: edit\n\t* include_server/parse_command_test.py: edit\n\t* include_server/parse_file.py: edit\n\t* include_server/parse_file_test.py: edit\n\n\n2007/05/25 18:35:29  Nils Klarlund <opensource@google.com>\n\n\t\n\tThe sed -i command I ran to perform renaming according to\n\tcache_basics.py tricked me; these files were not added to\n\tmy CL that took care of several little changes. I have\n\tverified that \n\t\n\t  make -C include_server test\n\t\n\tnow works.\n\t\n\tR=fergus,csilvers\n\tDELTA=8  (0 added, 0 deleted, 8 changed)\n\n\t* include_server/include_analyzer_memoizing_node.py: edit\n\t* include_server/include_server_test.py: edit\n\t* include_server/mirror_path_test.py: edit\n\n\n2007/05/25 17:53:45  Nils Klarlund <opensource@google.com>\n\n\tInstallation and use improvements.\n\t\n\tNow the 'pump' wrapper is generic; no-hardcoded hosts, but a \n\tan environment variable must be set. Also, it uses lsdistcc to\n\tdiscover which potential hosts are actually ready.\n\t\n\tThe INSTALL instructions are still rudimentary, but improved.\n\t\n\tThe 'configure' script simply calls 'configure' in distcc subdir.\n\t\n\tR=fergus,csilvers\n\tDELTA=82  (47 added, 33 deleted, 2 changed)\n\n\t* INSTALL: edit\n\t* configure: add\n\t* pump: edit\n\n\n2007/05/25 16:05:37  Nils Klarlund <opensource@google.com>\n\n\tAdd test targets.\n\t\n\tR=fergus\n\tDELTA=26  (26 added, 0 deleted, 0 changed)\n\n\t* include_server/Makefile: edit\n\n\n2007/05/25 15:49:30  Nils Klarlund <opensource@google.com>\n\n\tIt turns out that the gcc system path discovery command\n\tcreates a temporary file. Make tempdir to overcome this problem.\n\t\n\tR=fergus,manos\n\tDELTA=14  (4 added, 0 deleted, 10 changed)\n\n\t* include_server/compiler_defaults.py: edit\n\n\n2007/05/25 15:48:56  Nils Klarlund <opensource@google.com>\n\n\tMake safer tempdir mechanism.\n\t\n\tR=fergus\n\tDELTA=4  (1 added, 0 deleted, 3 changed)\n\n\t* include_server/basics.py: edit\n\n\n2007/05/25 15:47:27  Nils Klarlund <opensource@google.com>\n\n\tLots of little changes for final integration. One theme: names\n\tchanges.\n\t\n\tR=fergus,manos\n\tDELTA=145  (51 added, 26 deleted, 68 changed)\n\n\t* include_server/include_analyzer.py: edit\n\t* include_server/include_server.py: edit\n\t* include_server/macro_eval_test.py: edit\n\t* include_server/mirror_path.py: edit\n\t* include_server/parse_command_test.py: edit\n\t* include_server/parse_file.py: edit\n\t* include_server/parse_file_test.py: edit\n\t* include_server/statistics.py: edit\n\t* include_server/test_data/gws-main.o.cmd: edit\n\n\n2007/05/25 15:17:51  Nils Klarlund <opensource@google.com>\n\n\tThis CL should have accompanied \"This CL is in response to csilvers's questions..\"\n\t\n\n\t* include_server/parse_command.py: edit\n\n\n2007/05/25 15:15:43  Nils Klarlund <opensource@google.com>\n\n\tInitial submission: \"Compress files in an include closure.\"\n\t\n\n\t* include_server/compress_files.py: add\n\n\n2007/05/25 13:47:00  Nils Klarlund <opensource@google.com>\n\n\t\tA unittest for module mirror_path, featuring dependency\n\t\tinjection.  This version is working. It replaces something that didn't.\n\t\n\tR=fergus,manos\n\tDELTA=121  (87 added, 3 deleted, 31 changed)\n\n\t* include_server/mirror_path_test.py: edit\n\n\n2007/05/25 11:38:56  Nils Klarlund <opensource@google.com>\n\n\t       Initial submit of module to compute approximation of\n\t       include dependencies for C/C++. Also, some accompanying\n\t       changes to basics.py\n\t\n\n\t* include_server/basics.py: edit\n\t* include_server/include_server.py: add\n\t* include_server/include_server_test.py: add\n\n\n2007/05/25 11:29:51  Nils Klarlund <opensource@google.com>\n\n\t      Wrapper script for distcc-pump test users.\n\t\n\tR=fergus,manos\n\tDELTA=80  (80 added, 0 deleted, 0 changed)\n\n\t* pump: add\n\n\n2007/05/24 21:49:42  Fergus Henderson <opensource@google.com>\n\n\tAdd -r<PORT> option to lsdistcc to specify which port to connect\n\tto.  (\"-p\", \"-o\", and \"-t\" were already taken.)\n\tFix a bug where \"lsdistcc distcc%d\" was only returning the first host.\n\tAdd some unit tests for lsdistcc.\n\tAlso tidy up the usage message a little.\n\t\n\tR=manos\n\tCC=distcc-pump,dkegel,aaw\n\tDELTA=57  (47 added, 0 deleted, 10 changed)\n\n\t* distcc/src/lsdistcc.c: edit\n\t* distcc/test/testdistcc.py: edit\n\n\n2007/05/24 18:12:30  Fergus Henderson <opensource@google.com>\n\n\tFix a bug that broke \"cd distcc; configure; make\":\n\tmove definition of the \"echo_common_obj\" target to the end of the file,\n\tso that it doesn't become the default target (Make treats the first\n\trule in the file as the default target).\n\t\n\tR=klarlund\n\tCC=distcc-pump\n\tDELTA=10  (5 added, 5 deleted, 0 changed)\n\n\t* distcc/Makefile.in: edit\n\n\n2007/05/24 14:17:43  Nils Klarlund <opensource@google.com>\n\n\tFix \"Usage\" logic and printing error. Improve error reporting\n\twhen path to execute is not found.\n\t\n\tR=fergus,manos\n\tDELTA=12  (7 added, 0 deleted, 5 changed)\n\n\t* include_server/run.py: edit\n\n\n2007/05/24 09:14:17  Nils Klarlund <opensource@google.com>\n\n\tTests for distcc_pump_c_extensions. Writes out doc strings and\n\tcalls some distcc rpc functions. Also, times the speed-up of \n\tusing libc versions of os.path.realpath and os.path.exists.\n\t\n\tR=fergus,manos\n\tDELTA=115  (115 added, 0 deleted, 0 changed)\n\n\t* include_server/c_extensions_test.py: add\n\n\n2007/05/24 09:11:50  Nils Klarlund <opensource@google.com>\n\n\tA file used for testing parse_command.py. Should not be part\n\tof open source release.\n\t\n\n\t* include_server/test_data/gws-main.o.cmd: add\n\n\n2007/05/24 09:03:57  Nils Klarlund <opensource@google.com>\n\n\tWrapper for running include server and tests. Initial submission.\n\t\n\tR=fergus,manos\n\tDELTA=49  (49 added, 0 deleted, 0 changed)\n\n\t* include_server/run.py: add\n\n\n2007/05/23 23:48:11  Nils Klarlund <opensource@google.com>\n\n\tdirectory and link structure.\"\n\t\n\tR=fergus,manos\n\tDELTA=159  (159 added, 0 deleted, 0 changed)\n\n\t* include_server/mirror_path.py: add\n\t* include_server/mirror_path_test.py: add\n\n\n2007/05/23 23:12:36  Nils Klarlund <opensource@google.com>\n\n\tInitial submission: CPP macro evaluation. This admittedly needs a little\n\tmore work as explained. But there are some tests.\n\t\n\tR=manos,fergus\n\tDELTA=338  (338 added, 0 deleted, 0 changed)\n\n\t* include_server/macro_eval.py: add\n\t* include_server/macro_eval_test.py: add\n\n\n2007/05/23 22:31:52  Nils Klarlund <opensource@google.com>\n\n\t\n\tInitial submission.  \n\t\n\tinclude_analyzer: \"The skeleton, including caches, of an\n\t\t  include analyzer.\"\n\t\n\tinclude_analyzer_memoizing_node: \"An graph-based algorithm \n\t  for memoizing include closure calculations.\n\t\n\tR=fergus,csilvers\n\tDELTA=545  (545 added, 0 deleted, 0 changed)\n\n\t* include_server/include_analyzer.py: add\n\t* include_server/include_analyzer_memoizing_node.py: add\n\n\n2007/05/23 19:01:57  Craig Silverstein <opensource@google.com>\n\n\tAugment comments and normalize variable names.  In addition,\n\tclean up the code a bit, mostly by removing redundant code.\n\tThat said, with the variable-name changing, almost every line\n\tin this file is affected by this CL.\n\t\n\tThe file now is at a point where it makes sense to me!, though\n\tI am perhaps too close to the algorithm these days to be a\n\tgood 'outside observer' judge.  I think it's more consistent\n\tin its naming, in any case.\n\t\n\tThat said, I left in many TODOs where I still need some\n\tclarification of functionality, or have cleanups to do\n\tlater (I tried not to change the functionality too much).\n\t\n\tSome outside-visible function/variable names may have changed\n\tas a result of this CL, so other changes may be needed to get\n\tthe system working again after this.\n\t\n\tR=klarlund\n\tDELTA=411  (108 added, 35 deleted, 268 changed)\n\n\t* include_server/cache_basics.py: edit\n\n\n2007/05/22 15:25:09  Nils Klarlund <opensource@google.com>\n\n\t\n\tThis bunch of files is used for various tests of the include\n\tserver. I submit them as a bundle for further perusal with the\n\tvarious *_test.py code.\n\t\n\tR=fergus,manos\n\tDELTA=52  (52 added, 0 deleted, 0 changed)\n\n\t* include_server/test_data/abc_post.c: add\n\t* include_server/test_data/abc_pre.c: add\n\t* include_server/test_data/computed_includes.c: add\n\t* include_server/test_data/dbar/dbar1/bar.h: add\n\t* include_server/test_data/dbar/foo.h: add\n\t* include_server/test_data/dfoo/foo.h: add\n\t* include_server/test_data/dfoo/foo2.h: add\n\t* include_server/test_data/dfoo/include_next_foo.h: add\n\t* include_server/test_data/include_include_next_foo.h: add\n\t* include_server/test_data/p1.h: add\n\t* include_server/test_data/parse.c: add\n\t* include_server/test_data/test_include_next/bar/x.h: add\n\t* include_server/test_data/test_include_next/bar/y.h: add\n\t* include_server/test_data/test_include_next/baz/start_x.c: add\n\t* include_server/test_data/test_include_next/baz/start_y.c: add\n\t* include_server/test_data/test_include_next/baz/x.h: add\n\t* include_server/test_data/test_include_next/baz/y.h: add\n\t* include_server/test_data/test_include_next/biz/x.h: add\n\t* include_server/test_data/test_include_next/foo/x.h: add\n\t* include_server/test_data/test_include_next/foo/y.h: add\n\n\n2007/05/21 18:37:57  Manos Renieris <opensource@google.com>\n\n\tChange the test regexp to match the version text.\n\t\n\tR=fergus,klarlund\n\tDELTA=4  (2 added, 0 deleted, 2 changed)\n\n\t* distcc/test/testdistcc.py: edit\n\n\n2007/05/21 18:29:41  Nils Klarlund <opensource@google.com>\n\n\tInitial submission. \"How to find system path defaults for gcc.\"\n\t\n\tR=fergus,manos\n\tAPPROVED=fergus\n\tDELTA=136  (136 added, 0 deleted, 0 changed)\n\n\t* include_server/compiler_defaults.py: add\n\n\n2007/05/21 17:01:16  Nils Klarlund <opensource@google.com>\n\n\tInitial submissin. Statistics gathering for the distcc-pump include server.\n\t\n\tR=fergus,manos\n\tDELTA=110  (110 added, 0 deleted, 0 changed)\n\n\t* include_server/statistics.py: add\n\n\n2007/05/21 12:09:10  Nils Klarlund <opensource@google.com>\n\n\t\n\tThis CL is in response to csilvers's questions about the use\n\tof indices and caches in the include server.  I've tried to\n\tmake the terminology coherent and to make the distinction\n\tbetween indexed and string representation clearer. Also, I\n\tmoved the actual use of the classes into function SetUpCaches\n\tthat constructs the intended hierarchy for memoization.\n\t\n\tNow: also includes parse_command.\n\t\n\tR=fergus,csilvers\n\tCC=manos\n\tDELTA=410  (184 added, 40 deleted, 186 changed)\n\n\t* include_server/cache_basics.py: edit\n\n\n2007/05/21 11:59:41  Manos Renieris <opensource@google.com>\n\n\tInitialize needs_dotd.\n\t\n\tR=klarlund,fergus\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* distcc/src/compile.c: edit\n\n\n2007/05/21 11:59:13  Manos Renieris <opensource@google.com>\n\n\tFix the cleanup function.\n\t\n\tR=klarlund,fergus\n\tDELTA=3  (0 added, 0 deleted, 3 changed)\n\n\t* distcc/src/cleanup.c: edit\n\n\n2007/05/18 17:22:48  Manos Renieris <opensource@google.com>\n\n\tAdded the new files and one missing file to the Makefile.\n\t\n\tR=klarlund,fergus\n\tDELTA=8  (3 added, 0 deleted, 5 changed)\n\n\t* distcc/Makefile.in: edit\n\n\n2007/05/18 11:37:55  Manos Renieris <opensource@google.com>\n\n\tUndo the local_cpu lock if we are using the include server.\n\t\n\tR=fergus,klarlund\n\tDELTA=6  (5 added, 0 deleted, 1 changed)\n\n\t* distcc/src/compile.c: edit\n\n\n2007/05/17 18:21:26  Nils Klarlund <opensource@google.com>\n\n\tInitial check-in of directives-only C/C++ parser.\n\t\n\tR=manos,fergus\n\tDELTA=395  (395 added, 0 deleted, 0 changed)\n\n\t* include_server/parse_file.py: add\n\t* include_server/parse_file_test.py: add\n\n\n2007/05/17 17:27:24  Nils Klarlund <opensource@google.com>\n\n\tThis change accompanies a previous change. It allows the extension\n\tmodule to extract the needed .o files from the distcc Makefile.\n\t\n\tR=fergus,manos\n\tDELTA=5  (5 added, 0 deleted, 0 changed)\n\n\t* distcc/Makefile.in: edit\n\n\n2007/05/17 16:15:36  Nils Klarlund <opensource@google.com>\n\n\tThis CL enables us to compile distcc and to install the Python\n\textension module that provides access to some distcc rpc\n\tfunctions as well as lzo.  It no longer uses the Python\n\tinterface that is part of the lzo distribution. \n\t\n\tThe CL also include some initial attempts a Makefile's.\n\t\n\tR=fergus,manos\n\tDELTA=467  (467 added, 0 deleted, 0 changed)\n\n\t* INSTALL: add\n\t* Makefile: add\n\t* include_server/Makefile: add\n\t* include_server/c_extensions/Makefile: add\n\t* include_server/c_extensions/distcc_pump_c_extensions_module.c: add\n\t* include_server/c_extensions/setup.py: add\n\n\n2007/05/17 11:09:39  Nils Klarlund <opensource@google.com>\n\n\t\n\tInclude server for distcc-pump.  The basic stuff. Initial submit.\n\tThe basic caching mechanisms for distcc-pump. Initial submit.\n\t\n\tR=manos,fergus\n\tDELTA=596  (596 added, 0 deleted, 0 changed)\n\n\t* include_server/basics.py: add\n\t* include_server/cache_basics.py: add\n\n\n2007/05/16 17:03:03  Fergus Henderson <opensource@google.com>\n\n\tUpdate the output from \"distcc --version\".\n\t1. src/help.c: mention that it supports version 3 of the protocol,\n\t    i.e. distcc_pump\n\t2. configure.ac: change version to \"distcc 2.18.3-13gg-pump1\"\n\t    rather than \"distcc 2.18.3\", i.e. include both\n\t    a. \"-13gg\" to show it has all the existing Google patches, and\n\t    b. \"-pump1\" for the distcc_pump extensions that support\n\t        preprocessing on the server.\n\t3. configure: regenerate based on the new configure.ac.\n\t    This resulted in some slight differences due to different\n\t    autoconf versions, but they appear innocuous.\n\t\n\tTESTED=Ran make and manually verified the output of \"distcc --version\"\n\t       and \"distccd --version\".\n\t       Tried running \"make maintainer-check\"; that failed, but I think\n\t       the failures are unrelated to my change (probably they're due\n\t       to problems with the merge of distcc-pump with the Google distcc\n\t       patches).\n\t\n\tR=manos\n\tCC=distcc-pump\n\tDELTA=135  (24 added, 86 deleted, 25 changed)\n\n\t* distcc/configure: edit\n\t* distcc/configure.ac: edit\n\t* distcc/src/help.c: edit\n\n\n2007/05/16 15:04:29  Manos Renieris <opensource@google.com>\n\n\tChange the name of the temp directories to reflect that\n\tthey are server-side.\n\t\n\tR=fergus,klarlund\n\tDELTA=1  (0 added, 0 deleted, 1 changed)\n\n\t* distcc/src/tempfile.c: edit\n\n\n2007/05/14 17:16:41  Craig Silverstein <opensource@google.com>\n\n\tRewrite the argument-parser to be more efficient: this code\n\tnow runs about 50% faster than it used to (tested by\n\ttime_ParseCommandArguments.py).\n\t\n\tI can't totally vouch for the fact the output is the same now\n\tas before, since there's not a complete test for this code yet,\n\tbut it seems to be on the one example I tried.\n\t\n\tAlso, a few TODOs remain to deal with some obscure cases I\n\tdidn't understand (how does \"-iquote=foo\" differ from \"-iquote\n\tfoo\"?).  But the basics should be right on.\n\t\n\tR=klarlund,fergus\n\tDELTA=295  (153 added, 76 deleted, 66 changed)\n\n\t* include_server/parse_command.py: edit\n\t* include_server/parse_command_test.py: edit\n\n\n2007/05/14 17:05:15  Manos Renieris <opensource@google.com>\n\n\tImprove the robustness of cleanup.\n\t\n\tR=klarlund,fergus\n\tDELTA=33  (18 added, 1 deleted, 14 changed)\n\n\t* distcc/src/cleanup.c: edit\n\t* distcc/src/srvrpc.c: edit\n\t* distcc/src/tempfile.c: edit\n\n\n2007/05/14 11:37:26  Manos Renieris <opensource@google.com>\n\n\tMark the top tmp directory for deletion.\n\t\n\tR=fergus,klarlund\n\tDELTA=3  (3 added, 0 deleted, 0 changed)\n\n\t* distcc/src/tempfile.c: edit\n\n\n2007/05/14 11:22:04  Manos Renieris <opensource@google.com>\n\n\tClose the file descriptors after being done talking to\n\tthe include server.\n\t\n\tR=klarlund,fergus\n\tDELTA=14  (11 added, 1 deleted, 2 changed)\n\n\t* distcc/src/include_server_if.c: edit\n\n\n2007/05/10 10:04:32  Nils Klarlund <opensource@google.com>\n\n\tThe routines for interpreting a gcc command, along with tests.\n\tTwo issues still to be resolved:\n\t- This code is too slow.\n\t- For computed includes, we need to parse -D etc.\n\t\n\tR=fergus,manos\n\tDELTA=518  (518 added, 0 deleted, 0 changed)\n\n\t* include_server/parse_command.py: add\n\t* include_server/parse_command_test.py: add\n\n\n2007/05/09 23:13:18  Fergus Henderson <opensource@google.com>\n\n\tUpdate Makefile.in to fix some bugs introduced in CL a previous change (which just\n\tapplied the Google and LSB-specific patches). Some object files had been\n\tmoved into $(common_obj), but were still listed in h_*_obj, resulting\n\tin duplicate symbol errors when running \"make maintainer-check\".\n\t\n\tR=manos\n\tCC=dkegel,klarlund\n\tDELTA=3  (0 added, 1 deleted, 2 changed)\n\n\t* distcc/Makefile.in: edit\n\n\n2007/05/09 19:12:09  Manos Renieris <opensource@google.com>\n\n\tA bit more const-correctness.\n\t\n\tR=fergus\n\tDELTA=6  (2 added, 0 deleted, 4 changed)\n\n\t* distcc/src/serve.c: edit\n\n\n2007/05/09 18:41:10  Manos Renieris <opensource@google.com>\n\n\tDistcc-pump first implementation.\n\t\n\tVarious little changes, making functions from static into\n\tglobal, all around the code; a bug fix in argutil.c.\n\t\n\tImportant changes are:\n\t- On the protocol, which is extended as \"version 3\", that \n\t  supports compression and also cpp on the server. \n\t  - distcc.h: Added the enum for where to do the cpp.\n\t  - hosts.c: Map a set of features (currently a subset of\n\t\twhere to do cpp and whether to do compression) onto\n\t\ta protocol number.\n\t  - rpc.c:  The client sometimes sends either a file, or\n\t    a link to the server. The server needs to be able to\n\t    accept either, so dcc_r_sometoken_int allows some \n\t    alternation to the protocol.\n\t- Talking to the include server:\n\t  - compile.c: dcc_build_somewhere tries to talk to the\n\t\tinclude server, and pushes the information about\n\t\tthe dotd file to dcc_compile_remote. This is where\n\t\tthe fallback-to-the-original-protocol code lives.\n\t  - include_server_if.c: Talk to the include server.\n\t- The communication from client to server. The client needs to\n\t  send multiple files, and perhaps links, to the server; the \n\t  client also needs to sent its current working directory,\n\t  - remote.c: Entry points for sending multiple files to \n\t        the server.\n\t  - rpc.c: The server needs to handle not only files, but also\n\t\tlinks (directories are handled implicitly). \n\t  - clirpc.c: Added a function to send the current working \n\t\tdirectory.  Added a function, dcc_x_many_files. It sends\n\t\tmultiple files to the server.  In addition, it changes \n\t\tthe filenames to chop off the additions of the include \n\t\tserver. \n\t  - serve.c: Added a function to receive the current working \n\t\tdirectory. \n\t- On the server side, the server receives multiple files,\n\t  and the working directory, builds a directory structure (which\n\t  it keeps of, to clean it up at the end)\n\t  - srvrpc.c: \n\t        Added a function, dcc_r_many_files, to receive multiple \n\t\tfiles.  In addition, it changes the filenames to put all\n\t\tthe files under a \"fake root\" directory.\n\t  - serve.c: lots of work to set up \"fake root\" directories,\n\t\tchdir to the right place, produce a .d file, and \n\t\tabsolutize include directives.\n\t  - tempfile.c: Creation of whole temp directories, \n\t        not just files.\n\t  - cleanup.c: Since we are receiving multiple files,\n\t\twe need to keep a dynamic list of what temporary\n\t\tfiles we create. It can now handle directories.\n\t- \".d\" files: the client needs to find out where the dotd file\n\t        should go; the server needs to produce it, remove all\n\t\treferences to the local filesystem (gcc can't do\n\t\tthat from the outside) and send it back to the client.\n\t  - dotd.c: Most of the code that handles the dotd: figuring\n\t\tout if we need it, and where it should go; also,\n\t\tcleaning it up after it gets created on the server.\n\t  - clirpc.c Changed dcc_retrieve_results to retrieve\n\t\tthe dotd file.\n\t\n\tR=klarlund,fergus\n\tDELTA=1208  (1058 added, 36 deleted, 114 changed)\n\n\t* distcc/Makefile.in: edit\n\t* distcc/README.google: add\n\t* distcc/src/arg.c: edit\n\t* distcc/src/argutil.c: edit\n\t* distcc/src/bulk.c: edit\n\t* distcc/src/bulk.h: edit\n\t* distcc/src/cleanup.c: edit\n\t* distcc/src/clinet.c: edit\n\t* distcc/src/clinet.h: edit\n\t* distcc/src/clirpc.c: edit\n\t* distcc/src/compile.c: edit\n\t* distcc/src/compile.h: edit\n\t* distcc/src/compress.c: edit\n\t* distcc/src/distcc.h: edit\n\t* distcc/src/dotd.c: add\n\t* distcc/src/dotd.h: add\n\t* distcc/src/filename.c: edit\n\t* distcc/src/hosts.c: edit\n\t* distcc/src/hosts.h: edit\n\t* distcc/src/include_server_if.c: add\n\t* distcc/src/include_server_if.h: add\n\t* distcc/src/lock.c: edit\n\t* distcc/src/remote.c: edit\n\t* distcc/src/rpc.c: edit\n\t* distcc/src/rpc.h: edit\n\t* distcc/src/serve.c: edit\n\t* distcc/src/srvrpc.c: edit\n\t* distcc/src/tempfile.c: edit\n\n\n2007/05/08 17:53:54  Manos Renieris <opensource@google.com>\n\n\tA few \"\\n\\\" were missing.\n\t\n\tR=fergus,klarlund\n\tDELTA=4  (0 added, 0 deleted, 4 changed)\n\n\t* distcc/src/lsdistcc.c: edit\n\n\n## More changes that were made internally to Google, and not integrated\n## into the main distcc distribution until 2008.  These log messages\n## are from the RPM spec file's changlog.\n\n* Thu Jun 14 2007 Manos Renieris <opensource@google.com>\n- Added all the distcc-pump related parts to distcc.spec.\n- Changed the way the package is built.\n- Remove source package generation.\n- Man pages are now unzipped.\n\n* Mon Feb 8 2007 Dongmin Zhang <opensource@google.com>\n- Added hosts list option to lsdistcc, such that lsdistcc can check only the\n  hosts listed on the given list. The host list is given in command line.\n\n* Wed Jan 31 2007 Dongmin Zhang <opensource@google.com>\n- Added _libdir definition in rpms.epc.\n- Changed Name, Version, and Release to the ones passed by --define.\n- Updated the server init script to give different path of ACL files for grhat\n  and goobuntu as suggested by Arthur Hyun <opensource@google.com>.\n\n* Mon Jan 22 2007 Dongmin Zhang <opensource@google.com>\n- Fixed a bug in timeout patch. Added sigaction to catch SIGCHLD such that the\n  select() in dcc_collect_child() could break out when the file is finished to\n  compile.\n\n* Fri Dec 1 2006 Ollie Wild <opensource@google.com>\n- Removed the 01-distcc-gdb-20051210.patch patch.  The parser in this was too\n  naive to deal with output generate with the -directives-only flag.  Also, it\n  should no longer be needed with recent versions of gcc.\n- Removed the 10-distcc-before-cpp_locking-sub-gdb.patch and\n  12-distcc-after-cpp_locking-add-gdb.patch patches.  These were just modifying\n  the former patch.\n\n* Fri Sep 8 2006 Michael Moss <opensource@google.com>\n- Update install and init scripts to work on Debian and Red Hat (allowing the\n  .rpm to be converted to .deb with alien, and then installed on Debian).\n  Some noteworthy changes:\n  - Deb - Remove unused defaults file /etc/default/distcc.\n  - Deb - No longer uses debconf.\n  - RH  - useradd is run in post- rather than pre- install.\n  - RH  - distcc server is automatically started.\n- Added enable/disable commands to init scripts so the daemon can be\n  \"permanently\" disabled on misbehaving hosts.\n- Added patches to allow building LSB-compliant binaries.\n- Reorganized some existing patches to better partition functionality.\n\n* Tue Feb 28 2006 Dan Kegel <dank@kegel.com>\n- removed cache again\n\n* Mon Feb 20 2006 Dan Kegel <dank@kegel.com>\n- added cache\n\n* Mon Feb 6 2006 Dan Kegel <dank@kegel.com>\n- use Josh's randomize patch instead of Michael's,\n  since Josh's seems to perform better in our tests\n- added disk space statistic on http interface\n- lsdistcc now has -x option to output info even on down hosts (will be useful for server side caching)\n\n* Tue Jan 2 2006 Dan Kegel <dank@kegel.com>\n- removed load shedding patch (we have swap turned on, so overload isn't as bad)\n- added stats for timeout\n\n* Wed Dec 8 2005 Dan Kegel <dank@kegel.com>\n- lsdistcc now has -l option, better -v output\n- distccd now has nicer logging, --limit-load option, bugfixes in load shedding\n\n* Tue Nov 22 2005 Dan Kegel <dank@kegel.com>\n- rejects jobs if load too high\n- serves up stats via http on port 3633\n- lsdistcc now has new -p and -c0 options\n\n* Wed Nov  2 2005 Dan Kegel <dank@kegel.com>\n- updated lsdistcc to use the longer of the two of HOST and HOSTNAME\n  to handle shells that set HOST to the nonqualified hostname,\n  but HOSTNAME to the FQDN\n\n* Thu Oct 13 2005 Dan Kegel <dank@kegel.com>\n- updated lsdistcc patch\n- removed gcc as a dependency, since we want to use it with\n  a wide range of other compilers (and in our case, not the\n  standard gcc), and it's impractical to list them all as dependencies\n\n* Fri Sep 16 2005 Dan Kegel <dank@kegel.com>\n- now reads /etc/distcc/hosts instead of /usr/etc/distcc/hosts\n- replaced distcc-2.18.3-rhl.patch with distcc-2.18.3-stringmap.patch\n  The stringmap patch updates the rhl init.d script to know about\n  all installed crosstool toolchains, and enables fuzzy path matching\n  This is useful if the toolchains are not installed at the same\n  prefix on all systems\n- removed distcc-domain.patch\n- added distcc-2.18.3-lsdistcc.patch\n\n* Sat Sep  3 2005 Dan Kegel <dank@kegel.com>\n- now reads /etc/distcc/hosts instead of /usr/etc/distcc/hosts\n- applied distcc-domain-2.patch\n\n* Thu Jun 15 2005 Dan Kegel <dank@kegel.com>\n- Updated to 2.18.3\n- applied --randomize patch and cpp_locking patch\n- redhat init.d script reads /etc/distccd.allow to construct --allow arguments\n- added scriptlets from dag's package, but don't start service on install,\n  and call it distcc rather than distccd (to match the current \n  packaging's old practice)\n\n\n## These changes are from when development was done under bzr.\n## bzr branch: http://bazaar.launchpad.net/%7Embp/distcc/trunk/\n\n2008-03-14 13:31:23 +1100 Martin Pool <mbp@sourcefrog.net>      revno: 4\n\n    message:\n      Locks taken through F_SETLK or lockf() must be explicitly released,\n      because closing the file does not do so.\n      (Sascha Demetrio)\n\t\n\n2007-09-22 21:32:03 +1000 Martin Pool <mbp@sourcefrog.net>      revno: 3\n\n    message:\n      merge avahi patch from Lennart Poettering\n      (http://0pointer.de/public/distcc-avahi.patch)\n\n\n2007-09-22 21:32:03 +1000 Martin Pool <mbp@sourcefrog.net>      revno: 2\n\n    message:\n      Add more ignored files\n\n\n## These changes are from when development was done under arch.\n## arch-tag: automatic-ChangeLog--mbp@sourcefrog.net--2004/distcc--devel--2\n\n2006-04-05 23:35:36 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-183\n\n    Summary:\n      ignore tags file\n    Revision:\n      distcc--devel--2--patch-183\n\n\n    modified files:\n     ChangeLog {arch}/=tagging-method\n\n\n2006-04-03 17:56:54 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-182\n\n    Summary:\n      build fix for --as-needed\n    Revision:\n      distcc--devel--2--patch-182\n\n\n    modified files:\n     ChangeLog Makefile.in NEWS\n\n\n2006-03-03 00:10:56 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-181\n\n    Summary:\n      fix error check in dcc_connect_by_add\n    Revision:\n      distcc--devel--2--patch-181\n\n    Found in code review from recent list thread -- error check was done\n    incorrectly for nonblocking commits.\n    \n\n    modified files:\n     ChangeLog src/clinet.c\n\n\n2006-02-21 05:38:41 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-180\n\n    Summary:\n      draft patch for substituting compiler command name\n    Revision:\n      distcc--devel--2--patch-180\n\n    \n    \n\n    new files:\n     patches/.arch-ids/distcc-substitute-command.diff.id\n     patches/distcc-substitute-command.diff\n\n    modified files:\n     ChangeLog\n\n\n2006-01-20 23:40:53 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-179\n\n    Summary:\n      More details on error 110\n    Revision:\n      distcc--devel--2--patch-179\n\n    \n    \n\n    modified files:\n     ChangeLog man/distcc.1\n\n\n2006-01-11 04:03:16 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-178\n\n    Summary:\n      set locale when running make maintainer-check\n    Revision:\n      distcc--devel--2--patch-178\n\n\n    modified files:\n     ChangeLog NEWS test/comfychair.py\n\n\n2006-01-11 03:58:36 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-177\n\n    Summary:\n      Update more benchmark project definitions\n    Revision:\n      distcc--devel--2--patch-177\n\n\n    modified files:\n     ChangeLog bench/ProjectDefs.py test/testdistcc.py\n\n\n2006-01-05 00:20:52 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-176\n\n    Summary:\n      update benchmark project urls and md5s\n    Revision:\n      distcc--devel--2--patch-176\n\n\n    modified files:\n     ChangeLog bench/ProjectDefs.py\n\n\n2006-01-05 00:12:56 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-175\n\n    Summary:\n      [patch] update stale benchmark source URLS (Dongmin Zhang)\n    Revision:\n      distcc--devel--2--patch-175\n\n    \n    \n\n    modified files:\n     ChangeLog bench/ProjectDefs.py\n\n\n2005-12-12 05:47:20 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-174\n\n    Summary:\n      update patch to fix up gdb line numbers\n    Revision:\n      distcc--devel--2--patch-174\n\n    Updated patch from Dan Kegel to workaround wrong source file names in debug\n    symbols for older versions of gcc.\n    \n    \n\n    new files:\n     patches/.arch-ids/fix-line-numbers.diff.id\n     patches/fix-line-numbers.diff\n\n    removed files:\n     patches/.arch-ids/distcc-line3.diff.id\n     patches/.arch-ids/timj-line1.diff.id patches/distcc-line3.diff\n     patches/timj-line1.diff\n\n    modified files:\n     ChangeLog\n\n\n2005-11-28 03:00:58 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-173\n\n    Summary:\n      [patch] cygwin improvements from Alex Besogonov\n    Revision:\n      distcc--devel--2--patch-173\n\n    \n    \n\n    modified files:\n     ChangeLog NEWS src/exec.c src/tempfile.c\n\n\n2005-11-28 02:50:23 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-172\n\n    Summary:\n      doc\n    Revision:\n      distcc--devel--2--patch-172\n\n\n    modified files:\n     ChangeLog src/exitcode.h\n\n\n2005-11-28 02:49:19 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-171\n\n    Summary:\n      doc\n    Revision:\n      distcc--devel--2--patch-171\n\n\n    modified files:\n     ChangeLog src/exitcode.h\n\n\n2005-10-05 00:44:49 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-170\n\n    Summary:\n      return error on timeout in dcc_select_for_write\n    Revision:\n      distcc--devel--2--patch-170\n\n\n    modified files:\n     ChangeLog src/io.c\n\n\n2005-10-05 00:14:16 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-169\n\n    Summary:\n      bump version number\n    Revision:\n      distcc--devel--2--patch-169\n\n\n    modified files:\n     ChangeLog configure.ac\n\n\n2005-10-05 00:07:50 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-168\n\n    Summary:\n      use python2.4 if available\n    Revision:\n      distcc--devel--2--patch-168\n\n\n    modified files:\n     ChangeLog NEWS configure.ac\n\n\n2005-10-05 00:05:20 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-167\n\n    Summary:\n      - better autogen message\n    Revision:\n      distcc--devel--2--patch-167\n\n\n    modified files:\n     ChangeLog autogen.sh\n\n\n2005-10-05 00:04:18 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-166\n\n    Summary:\n      [patch] better checking for errors on connect()\n    Revision:\n      distcc--devel--2--patch-166\n\n\n    modified files:\n     ChangeLog NEWS src/clinet.c\n\n\n2005-09-05 01:36:22 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-165\n\n    Summary:\n      add hosts-from-dnsdomain patch from dan\n    Revision:\n      distcc--devel--2--patch-165\n\n\n    new files:\n     patches/.arch-ids/kegel-distcc-domain.patch.id\n     patches/kegel-distcc-domain.patch\n\n    modified files:\n     ChangeLog\n\n\n2005-08-16 01:39:54 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-164\n\n    Summary:\n      add note that the mDNS patch cannot be legally merged\n    Revision:\n      distcc--devel--2--patch-164\n\n\n    modified files:\n     ChangeLog patches/howl-mdns.diff\n\n\n2005-06-10 09:58:57 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-163\n\n    Summary:\n      todo\n    Revision:\n      distcc--devel--2--patch-163\n\n\n    modified files:\n     ChangeLog TODO\n\n\n2005-01-19 03:17:27 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-162\n\n    Summary:\n      manpage correction from Frerich\n    Revision:\n      distcc--devel--2--patch-162\n\n\n    modified files:\n     ChangeLog man/distcc.1\n\n\n2004-12-21 02:11:57 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-161\n\n    Summary:\n      args: -d must be local\n    Revision:\n      distcc--devel--2--patch-161\n\n\n    modified files:\n     ChangeLog NEWS src/arg.c test/testdistcc.py\n\n\n2004-12-20 12:40:10 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-160\n\n    Summary:\n      note on .incbin from asm()\n    Revision:\n      distcc--devel--2--patch-160\n\n\n    new files:\n     doc/todo/.arch-ids/unhandled-cases.txt.id\n     doc/todo/unhandled-cases.txt\n\n    modified files:\n     ChangeLog\n\n\n2004-12-15 00:11:05 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-159\n\n    Summary:\n      remove obsolete web targets from makefile\n    Revision:\n      distcc--devel--2--patch-159\n\n\n    modified files:\n     ChangeLog Makefile.in\n\n\n2004-12-14 07:07:01 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-158\n\n    Summary:\n      add pending Howl mDNS patch from Lennart Poettering\n    Revision:\n      distcc--devel--2--patch-158\n\n\n    new files:\n     patches/.arch-ids/howl-mdns.diff.id patches/howl-mdns.diff\n\n    modified files:\n     ChangeLog\n\n\n2004-11-30 19:05:36 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-157\n\n    Summary:\n      Add freshmeat submission data\n    Revision:\n      distcc--devel--2--patch-157\n\n\n    new files:\n     freshmeat/.arch-ids/2.18.3.id freshmeat/.arch-ids/=id\n     freshmeat/2.18.3\n\n    modified files:\n     ChangeLog\n\n    new directories:\n     freshmeat freshmeat/.arch-ids\n\n\n2004-11-30 12:25:10 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-156\n\n    Summary:\n      Fix for -x and -specs bug\n    Revision:\n      distcc--devel--2--patch-156\n\n\n    modified files:\n     ChangeLog NEWS src/arg.c\n\n\n2004-11-30 12:11:30 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-155\n\n    Summary:\n      Better text for -x and -specs\n    Revision:\n      distcc--devel--2--patch-155\n\n\n    modified files:\n     ChangeLog NEWS TODO configure.ac test/testdistcc.py\n\n\n2004-11-12 03:33:34 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-154\n\n    Summary:\n      Prepare for 2.18.2 release\n    Revision:\n      distcc--devel--2--patch-154\n\n\n    modified files:\n     ChangeLog NEWS configure.ac\n\n\n2004-11-12 03:32:54 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-153\n\n    Summary:\n      Notes on performance influence of mmap\n    Revision:\n      distcc--devel--2--patch-153\n\n\n    new files:\n     doc/.arch-ids/mmap-influence.txt.id doc/mmap-influence.txt\n\n    modified files:\n     ChangeLog\n\n\n2004-11-12 03:31:51 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-152\n\n    Summary:\n      fix size_t/unsigned mismatch\n    Revision:\n      distcc--devel--2--patch-152\n\n\n    modified files:\n     ChangeLog NEWS src/distcc.h\n\n\n2004-11-12 03:23:15 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-151\n\n    Summary:\n      fix for checking uninitialized errno\n    Revision:\n      distcc--devel--2--patch-151\n\n\n    modified files:\n     ChangeLog NEWS src/clinet.c\n\n\n2004-11-03 02:20:56 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-150\n\n    Summary:\n      gcc -specs must also be run locally\n    Revision:\n      distcc--devel--2--patch-150\n\n\n    modified files:\n     ChangeLog NEWS src/arg.c test/testdistcc.py\n\n\n2004-11-02 07:12:57 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-149\n\n    Summary:\n      mon-gnome: fix tree_model warning\n    Revision:\n      distcc--devel--2--patch-149\n\n\n    modified files:\n     ChangeLog NEWS src/mon-gnome.c\n\n\n2004-10-23 08:42:53 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-148\n\n    Summary:\n      fold io.h into distcc.h\n    Revision:\n      distcc--devel--2--patch-148\n\n\n    removed files:\n     src/.arch-ids/io.h.id src/io.h\n\n    modified files:\n     ChangeLog Makefile.in src/arg.c src/argutil.c src/backoff.c\n     src/bulk.c src/clinet.c src/clirpc.c src/compress.c\n     src/daemon.c src/distcc.h src/dopt.c src/dparent.c src/exec.c\n     src/h_exten.c src/h_issource.c src/h_scanargs.c src/h_strip.c\n     src/hostfile.c src/io.c src/loadfile.c src/lock.c\n     src/mon-gnome.c src/mon-notify.c src/mon-text.c src/mon.c\n     src/prefork.c src/pump.c src/remote.c src/renderer.c src/rpc.c\n     src/safeguard.c src/sendfile.c src/serve.c src/srvnet.c\n     src/srvrpc.c src/ssh.c src/state.c src/strip.c src/timefile.c\n     src/util.c\n\n\n2004-10-23 08:23:22 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-147\n\n    Summary:\n      fix some signedness/type warnings\n    Revision:\n      distcc--devel--2--patch-147\n\n\n    modified files:\n     ChangeLog src/bulk.c src/climasq.c src/clirpc.c src/distcc.h\n     src/hosts.c src/io.h src/mon-gnome.c src/netutil.c\n     src/netutil.h src/rpc.c src/trace.c src/util.c src/where.c\n\n\n2004-10-23 08:11:25 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-146\n\n    Summary:\n      Turn off -Wunreachable-code\n    Revision:\n      distcc--devel--2--patch-146\n\n\n    modified files:\n     ChangeLog configure.ac\n\n\n2004-10-23 08:00:12 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-145\n\n    Summary:\n      turn on more warnings\n    Revision:\n      distcc--devel--2--patch-145\n\n\n    modified files:\n     ChangeLog configure.ac\n\n\n2004-10-21 23:06:54 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-144\n\n    Summary:\n      Allow for host files containing \\r\n    Revision:\n      distcc--devel--2--patch-144\n\n\n    modified files:\n     ChangeLog NEWS src/hosts.c test/testdistcc.py\n\n\n2004-10-13 02:37:50 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-143\n\n    Summary:\n      Return errors, rather than aborting.\n    Revision:\n      distcc--devel--2--patch-143\n\n    Don't call rs_fatal; instead return an error.  It was giving warnings on\n    non-gcc compilers because it wasn't seen as noreturn, and anyhow aborting\n    is a bit untidy.\n\n    modified files:\n     ChangeLog src/arg.c src/bulk.c src/cleanup.c src/cpp.c\n     src/dopt.c src/h_ccvers.c src/history.c src/hosts.c src/io.c\n     src/lock.c src/mon.c src/pump.c src/remote.c src/rpc.c\n     src/serve.c src/ssh.c src/trace.h src/util.c\n\n\n2004-10-13 02:23:11 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-142\n\n    Summary:\n      fix header problem for Solaris\n    Revision:\n      distcc--devel--2--patch-142\n\n    * src/distcc.h: Need sys/types.h for pid_t.\n    \n    \n\n    modified files:\n     ChangeLog NEWS bench/Build.py bench/Project.py\n     bench/ProjectDefs.py src/distcc.h\n\n\n2004-10-12 06:28:10 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-141\n\n    Summary:\n      Add samba 3.0.7 as benchmark project\n    Revision:\n      distcc--devel--2--patch-141\n\n\n    modified files:\n     ChangeLog bench/ProjectDefs.py\n\n\n2004-10-12 05:41:38 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-140\n\n    Summary:\n      benchmark: scrub results on completion by default\n    Revision:\n      distcc--devel--2--patch-140\n\n\n    modified files:\n     ChangeLog bench/actions.py\n\n\n2004-10-12 05:37:21 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-139\n\n    Summary:\n      advance version to 2.19pre\n    Revision:\n      distcc--devel--2--patch-139\n\n\n    modified files:\n     ChangeLog configure.ac\n\n\n2004-10-12 05:13:54 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-138\n\n    Summary:\n      Prepare for release\n    Revision:\n      distcc--devel--2--patch-138\n\n\n    modified files:\n     ChangeLog NEWS configure.ac\n\n\n2004-10-12 05:10:31 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-137\n\n    Summary:\n      Always build conftest.c locally\n    Revision:\n      distcc--devel--2--patch-137\n\n    Problem: configure tests are typically very quick to build; also\n    configure can be very sensitive to stderr warnings or other small\n    variations between machines.\n    \n    Fix: To make things faster and safer, build conftest.* locally; also\n    tmp.conftest.* used by ccache.\n    \n    * src/filename.c (dcc_source_needs_local): New function.\n    \n    * src/arg.c (dcc_scan_args): Check.\n    \n    * cases/conftest.c: Manual test case.\n    \n\n    new files:\n     cases/conftest.c\n\n    modified files:\n     ChangeLog NEWS TODO src/arg.c src/distcc.h src/filename.c\n\n\n2004-10-12 04:50:41 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-136\n\n    Summary:\n      Reset PATH when running maintainer-check\n    Revision:\n      distcc--devel--2--patch-136\n\n    Problem: Installed copies of distcc and/or ccache were getting invoked\n    from inside the test suite in a confusing way.\n    \n    Fix: Force the path to just /bin:/usr/bin:`pwd`\n    \n\n    modified files:\n     ChangeLog Makefile.in\n\n\n2004-10-12 04:43:39 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-135\n\n    Summary:\n      Remove mmap when receiving uncompressed data\n    Revision:\n      distcc--devel--2--patch-135\n\n    Problem: Calling msync seems likely to force disk IO, but not calling it\n    is unsafe.\n    \n    Fix: In fact, we can probably do fine by just using plain IO to receive\n    data.  This is already done for compressed data.\n    \n    * src/pump.c (dcc_r_bulk_plain): Remove.\n    \n    * src/pump.c (dcc_r_bulk): Just pump bytes through when receiving data;\n      don't worry about mmap.  Doc.\n    \n    * src/bulk.c (dcc_r_file): Output files can be WRONLY if we're not using\n      mmap.\n    \n    * src/io.c (dcc_want_mmap): Remove.\n    \n    * man/distcc.1, man/distccd.1: No more mmap!\n    \n\n    modified files:\n     ChangeLog NEWS man/distcc.1 man/distccd.1 src/bulk.c src/io.c\n     src/pump.c src/sendfile.c\n\n\n2004-10-12 04:38:27 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-134\n\n    Summary:\n      fix headers\n    Revision:\n      distcc--devel--2--patch-134\n\n\n    modified files:\n     ChangeLog src/history.c\n\n\n2004-10-12 04:27:45 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-133\n\n    Summary:\n      todo: conftest.c\n    Revision:\n      distcc--devel--2--patch-133\n\n\n    modified files:\n     ChangeLog TODO\n\n\n2004-10-12 04:20:05 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-132\n\n    Summary:\n      doc\n    Revision:\n      distcc--devel--2--patch-132\n\n\n    modified files:\n     ChangeLog src/pump.c\n\n\n2004-10-12 04:10:49 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-131\n\n    Summary:\n      Select-based non-blocking connect()\n    Revision:\n      distcc--devel--2--patch-131\n\n    * src/clinet.c (dcc_connect_by_addr): Make socket non-blocking at connect\n      time and impose a timeout on connection attempts; currently hardcoded\n      to 5s.\n    \n\n    modified files:\n     ChangeLog NEWS src/clinet.c src/io.c\n\n\n2004-10-12 03:10:31 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-130\n\n    Summary:\n      ssh: doc\n    Revision:\n      distcc--devel--2--patch-130\n\n\n    modified files:\n     ChangeLog src/ssh.c\n\n\n2004-10-12 03:02:18 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-129\n\n    Summary:\n      Ignore HTML manpages\n    Revision:\n      distcc--devel--2--patch-129\n\n\n    new files:\n     man/.arch-inventory\n\n    modified files:\n     ChangeLog\n\n\n2004-10-12 02:59:16 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-128\n\n    Summary:\n      ssh: doc\n    Revision:\n      distcc--devel--2--patch-128\n\n\n    modified files:\n     ChangeLog src/ssh.c\n\n\n2004-10-12 02:15:39 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-127\n\n    Summary:\n      remove signal-based timeouts\n    Revision:\n      distcc--devel--2--patch-127\n\n    Problem: Using alarms to enforce timeouts is inherently unsafe, because\n    it might leave e.g. the resolver or C library in an inconsistent state.\n    \n    Fix: Don't use signals.  We can do something simpler and safer using\n    select() in a future commit.\n    \n    We no longer have a timeout on name resolution; the best fix for this is\n    to set an appropriate timeout in resolv.conf.\n\n    removed files:\n     src/.arch-ids/timeout.c.id src/timeout.c\n\n    modified files:\n     ChangeLog Makefile.in man/distcc.1 src/distcc.h src/remote.c\n     src/serve.c\n\n\n2004-10-11 09:09:47 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-126\n\n    Summary:\n      distcc(1): mention timeouts\n    Revision:\n      distcc--devel--2--patch-126\n\n\n    modified files:\n     ChangeLog man/distcc.1\n\n\n2004-10-11 08:15:05 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-125\n\n    Summary:\n      no timeout on cpp\n    Revision:\n      distcc--devel--2--patch-125\n\n    Refactor code that waits for cpp to finish, and disarm the timeout during\n    this phase.\n    \n\n    modified files:\n     ChangeLog NEWS src/remote.c\n\n\n2004-10-11 07:28:00 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-124\n\n    Summary:\n      Adjust timeouts\n    Revision:\n      distcc--devel--2--patch-124\n\n    Short 5s CONNECT timeout covers only name resolution and TCP\n    connection.\n    \n    SEND phase and timeout should include sending the header, and waiting\n    for cpp to complete.  60s to send.\n    \n    Allow up to 20mins for compilation.\n    \n\n    modified files:\n     ChangeLog src/remote.c src/serve.c\n\n\n2004-10-11 07:17:31 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-123\n\n    Summary:\n      fix timeout crash bug\n    Revision:\n      distcc--devel--2--patch-123\n\n    Problem: Was using longjmp() from the SIGALRM handler to return an\n    error.  This is not safe.\n    \n    Fix: Use siglongjmp() instead.  That may not be completely safe\n    either, but it might fix the problem.\n\n    modified files:\n     ChangeLog NEWS src/timeout.c\n\n\n2004-10-11 06:24:35 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-122\n\n    Summary:\n      Add test case for siglongjmp\n    Revision:\n      distcc--devel--2--patch-122\n\n\n    new files:\n     cases/.arch-ids/.arch-inventory.id\n     cases/.arch-ids/tryjump.c.id cases/.arch-inventory\n     cases/tryjump.c\n\n    modified files:\n     ChangeLog NEWS\n\n\n2004-10-11 06:21:43 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-121\n\n    Summary:\n      todo: problems with state file sharing\n    Revision:\n      distcc--devel--2--patch-121\n\n\n    modified files:\n     ChangeLog TODO\n\n\n2004-10-09 13:26:15 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-120\n\n    Summary:\n      distccmon-text(1): Clarify client requirements\n    Revision:\n      distcc--devel--2--patch-120\n\n\n    modified files:\n     ChangeLog man/distccmon-text.1\n\n\n2004-09-25 10:01:05 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-119\n\n    Summary:\n      doc\n    Revision:\n      distcc--devel--2--patch-119\n\n\n    modified files:\n     ChangeLog TODO\n\n\n2004-09-25 09:57:52 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-118\n\n    Summary:\n      distcc.1: make it clearer this is a client-side monitor\n    Revision:\n      distcc--devel--2--patch-118\n\n\n    modified files:\n     ChangeLog man/distccmon-text.1\n\n\n2004-09-17 00:41:14 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-117\n\n    Summary:\n      --allow is now mandatory\n    Revision:\n      distcc--devel--2--patch-117\n\n\n    modified files:\n     ChangeLog NEWS src/daemon.c src/dopt.c\n\n\n2004-09-16 05:58:09 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-116\n\n    Summary:\n      sa_family_t Tru64 portability cleanup -- just remove test\n    Revision:\n      distcc--devel--2--patch-116\n\n\n    modified files:\n     ChangeLog NEWS configure.ac src/distcc.h\n\n\n2004-09-16 05:20:08 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-115\n\n    Summary:\n      include state.h from within distcc.h\n    Revision:\n      distcc--devel--2--patch-115\n\n\n    modified files:\n     ChangeLog src/compile.c src/distcc.c src/distcc.h\n     src/history.c src/mon-gnome.c src/mon-notify.c src/mon-text.c\n     src/mon.c src/remote.c src/renderer.c src/serve.c src/state.c\n     src/timeout.c src/where.c\n\n\n2004-09-16 05:12:42 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-114\n\n    Summary:\n      doc\n    Revision:\n      distcc--devel--2--patch-114\n\n\n    modified files:\n     ChangeLog src/distcc.h\n\n\n2004-09-16 05:08:07 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-113\n\n    Summary:\n      Improved check for gcc>=3.4 for warn_unused_result\n    Revision:\n      distcc--devel--2--patch-113\n\n\n    modified files:\n     ChangeLog src/distcc.h\n\n\n2004-09-16 04:55:26 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-112\n\n    Summary:\n      fix enum type warning from Dmitri\n    Revision:\n      distcc--devel--2--patch-112\n\n\n    modified files:\n     ChangeLog src/distcc.h src/timeout.c\n\n\n2004-09-16 04:46:42 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-111\n\n    Summary:\n      fix unused var warning\n    Revision:\n      distcc--devel--2--patch-111\n\n\n    modified files:\n     ChangeLog src/state.c\n\n\n2004-09-16 04:46:26 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-110\n\n    Summary:\n      bump version\n    Revision:\n      distcc--devel--2--patch-110\n\n\n    modified files:\n     ChangeLog configure.ac\n\n\n2004-08-24 12:12:50 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-109\n\n    Summary:\n      Prepare for 2.17.1 release\n    Revision:\n      distcc--devel--2--patch-109\n\n\n    modified files:\n     ChangeLog NEWS\n\n\n2004-08-24 12:10:43 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-108\n\n    Summary:\n      Update version to 2.17.1\n    Revision:\n      distcc--devel--2--patch-108\n\n\n    modified files:\n     ChangeLog configure.ac\n\n\n2004-08-24 12:07:55 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-107\n\n    Summary:\n      Don't use warn_unused_result on old gcc\n    Revision:\n      distcc--devel--2--patch-107\n\n\n    modified files:\n     ChangeLog src/distcc.h\n\n\n2004-08-13 22:06:05 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-106\n\n    Summary:\n      distcc.1: better explanation of using distcc with ccache\n    Revision:\n      distcc--devel--2--patch-106\n\n\n    modified files:\n     ChangeLog Makefile.in man/distcc.1\n\n\n2004-08-06 00:34:21 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-105\n\n    Summary:\n      doc\n    Revision:\n      distcc--devel--2--patch-105\n\n\n    modified files:\n     ChangeLog src/compile.c\n\n\n2004-08-05 23:29:15 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-104\n\n    Summary:\n      Fix dcc_trace bug\n    Revision:\n      distcc--devel--2--patch-104\n\n\n    modified files:\n     ChangeLog NEWS src/clinet.c\n\n\n2004-08-02 18:41:07 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-103\n\n    Summary:\n      doc\n    Revision:\n      distcc--devel--2--patch-103\n\n\n    modified files:\n     ChangeLog src/distcc.h\n\n\n2004-08-01 05:52:01 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-102\n\n    Summary:\n      fix usage of dcc_timeout_arm\n    Revision:\n      distcc--devel--2--patch-102\n\n\n    modified files:\n     ChangeLog src/serve.c\n\n\n2004-08-01 05:50:45 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-101\n\n    Summary:\n      prepare for 2.17 release\n    Revision:\n      distcc--devel--2--patch-101\n\n\n    modified files:\n     ChangeLog\n\n\n2004-08-01 05:49:42 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-100\n\n    Summary:\n      add server-side timeouts\n    Revision:\n      distcc--devel--2--patch-100\n\n\n    modified files:\n     ChangeLog Makefile.in NEWS src/serve.c\n\n\n2004-08-01 05:45:46 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-99\n\n    Summary:\n      fix usage of dcc_timeout_arm\n    Revision:\n      distcc--devel--2--patch-99\n\n\n    modified files:\n     ChangeLog src/remote.c\n\n\n2004-08-01 05:43:10 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-98\n\n    Summary:\n      merge from happy\n    Revision:\n      distcc--devel--2--patch-98\n\n    Patches applied:\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-26\n       dcc_timeout_arm: add WARN_UNUSED\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-27\n       merge to devel\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-28\n       add WARN_UNUSED to some functions\n    \n\n    modified files:\n     ChangeLog src/distcc.h\n\n    new patches:\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-26\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-27\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-28\n\n\n2004-08-01 05:39:19 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-97\n\n    Summary:\n      add WARN_UNUSED to some functions\n    Revision:\n      distcc--devel--2--patch-97\n\n    Patches applied:\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-26\n       dcc_timeout_arm: add WARN_UNUSED\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-27\n       merge to devel\n    \n\n    modified files:\n     ChangeLog src/distcc.h\n\n\n2004-07-29 21:38:23 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-96\n\n    Summary:\n      cleanups\n    Revision:\n      distcc--devel--2--patch-96\n\n    Patches applied:\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-23\n       check return codes from dcc_timeout_arm\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-24\n       ifdef __attribute__ on GNUC\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-25\n       dcc_build_somewhere: cleanup\n    \n\n    modified files:\n     ChangeLog src/compile.c src/distcc.h\n\n    new patches:\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-23\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-24\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-25\n\n\n2004-07-29 21:32:11 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-95\n\n    Summary:\n      doc\n    Revision:\n      distcc--devel--2--patch-95\n\n    Patches applied:\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-16\n       update todo items\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-17\n       merged to devel\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-18\n       doc\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-19\n       notes on timeouts\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-20\n       timeouts are done\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-21\n       correct version number\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-22\n       treat emacs temporary files  as backups\n    \n\n    modified files:\n     ChangeLog NEWS TODO configure.ac doc/roadmap.txt src/remote.c\n     {arch}/=tagging-method\n\n    new patches:\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-16\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-17\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-18\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-19\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-20\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-21\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-22\n\n\n2004-07-29 19:35:33 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-94\n\n    Summary:\n      more timeouts and cleanups\n    Revision:\n      distcc--devel--2--patch-94\n\n    Patches applied:\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-11\n       portability fix for WCOREDUMP\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-12\n       remove obsolete patch\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-13\n       dcc_compile_remote: add more client-side timeouts\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-14\n       dcc_connect_by_addr: handle EINTR from connect()\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-15\n       bump version number\n    \n\n    removed files:\n     patches/.arch-ids/resolver-timeout.diff.id\n     patches/resolver-timeout.diff\n\n    modified files:\n     ChangeLog NEWS configure.ac src/clinet.c src/distcc.h\n     src/exec.c src/remote.c\n\n    new patches:\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-11\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-12\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-13\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-14\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-15\n\n\n2004-07-29 19:12:49 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-93\n\n    Summary:\n      alarm-based connection timeout\n    Revision:\n      distcc--devel--2--patch-93\n\n    Patches applied:\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--base-0\n       import from ozlabs\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-1\n       tweak version output more\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-2\n       Add EXIT_TIMEOUT\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-3\n       Add overall connection timeout\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-4\n       remove docs for deleted DISTCC_CONNECT_TIMEOUT\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-5\n       fold in backoff.h\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-6\n       remove select-based timeout in client connect\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-7\n       dcc_connect_by_addr: remove host and port params\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-8\n       dcc_connect_by_addr: cleanup trace\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-9\n       dcc_build_somewhere: better message on fallback\n    \n     * mbp@sourcefrog.net--happy/distcc--devel--2--patch-10\n       dcc_timeout_arm: doc\n    \n\n    new files:\n     src/.arch-ids/timeout.c.id src/timeout.c\n\n    removed files:\n     src/.arch-ids/backoff.h.id src/backoff.h\n\n    modified files:\n     ChangeLog Makefile.in NEWS man/distcc.1 src/backoff.c\n     src/clinet.c src/compile.c src/distcc.h src/exitcode.h\n     src/help.c src/remote.c src/ssh.c src/util.c src/util.h\n     src/where.c\n\n    new patches:\n     mbp@sourcefrog.net--happy/distcc--devel--2--base-0\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-1\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-2\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-3\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-4\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-5\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-6\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-7\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-8\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-9\n     mbp@sourcefrog.net--happy/distcc--devel--2--patch-10\n\n\n2004-07-28 18:38:20 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-92\n\n    Summary:\n      mention miniLZO in --version\n    Revision:\n      distcc--devel--2--patch-92\n\n\n    modified files:\n     ChangeLog src/help.c\n\n\n2004-07-23 13:47:05 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-91\n\n    Summary:\n      Manpage fix from Jean Delvare.\n    Revision:\n      distcc--devel--2--patch-91\n\n\n    modified files:\n     ChangeLog NEWS man/distcc.1\n\n\n2004-07-15 08:27:57 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-90\n\n    Summary:\n      Add CVE number for netmask problem\n    Revision:\n      distcc--devel--2--patch-90\n\n\n    modified files:\n     ChangeLog NEWS\n\n\n2004-07-14 05:32:41 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-89\n\n    Summary:\n      notes on mod_backhand load balancing\n    Revision:\n      distcc--devel--2--patch-89\n\n\n    new files:\n     doc/todo/.arch-ids/backhand.txt.id doc/todo/backhand.txt\n\n    modified files:\n     ChangeLog\n\n\n2004-07-14 05:32:16 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-88\n\n    Summary:\n      dcc_set_row_idle: reduce unnecessary tree model updates\n    Revision:\n      distcc--devel--2--patch-88\n\n\n    modified files:\n     ChangeLog src/mon-gnome.c\n\n\n2004-07-14 05:27:54 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-87\n\n    Summary:\n      dcc_build_somewhere: don't retry if remote compiler crashed\n    Revision:\n      distcc--devel--2--patch-87\n\n\n    modified files:\n     ChangeLog NEWS src/compile.c\n\n\n2004-07-12 07:39:35 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-86\n\n    Summary:\n      Cleanup\n    Revision:\n      distcc--devel--2--patch-86\n\n\n    modified files:\n     ChangeLog src/mon-gnome.c\n\n\n2004-07-12 07:23:46 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-85\n\n    Summary:\n      make sure idle periods get drawn in history\n    Revision:\n      distcc--devel--2--patch-85\n\n\n    modified files:\n     ChangeLog src/renderer.c\n\n\n2004-07-12 07:21:41 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-84\n\n    Summary:\n      mon-gnome: Use circular array not GQueue for history\n    Revision:\n      distcc--devel--2--patch-84\n\n    Using a doubly-linked list to hold integers uses a lot of time and\n    memory.  Instead we use just a simple circular array.\n    \n    history.c: New file holding this.\n    \n\n    new files:\n     src/.arch-ids/history.c.id src/history.c\n\n    modified files:\n     ChangeLog Makefile.in NEWS src/mon-gnome.c src/mon.h\n     src/renderer.c\n\n\n2004-07-12 06:53:56 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-83\n\n    Summary:\n      s/dcc_history/dcc_task_state/\n    Revision:\n      distcc--devel--2--patch-83\n\n\n    modified files:\n     ChangeLog src/mon-fake.c src/mon-gnome.c src/mon-text.c\n     src/mon.c src/mon.h src/state.c src/state.h\n\n\n2004-07-12 06:49:54 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-82\n\n    Summary:\n      s/dcc_state/dcc_phase/\n    Revision:\n      distcc--devel--2--patch-82\n\n\n    modified files:\n     ChangeLog src/mon-fake.c src/mon-gnome.c src/mon-text.c\n     src/mon.c src/mon.h src/renderer.c src/renderer.h src/state.c\n     src/state.h\n\n\n2004-07-12 06:46:16 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-81\n\n    Summary:\n      Rename DCC_STATE_* to DCC_PHASE_*\n    Revision:\n      distcc--devel--2--patch-81\n\n\n    modified files:\n     ChangeLog src/clirpc.c src/compile.c src/mon-fake.c\n     src/mon-gnome.c src/mon-text.c src/mon.c src/remote.c\n     src/renderer.c src/renderer.h src/state.c src/state.h\n     src/where.c\n\n\n2004-07-12 06:45:29 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-80\n\n    Summary:\n      Fix warning\n    Revision:\n      distcc--devel--2--patch-80\n\n\n    modified files:\n     ChangeLog src/daemon.h\n\n\n2004-07-12 06:39:40 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-79\n\n    Summary:\n      Doc\n    Revision:\n      distcc--devel--2--patch-79\n\n\n    modified files:\n     ChangeLog src/mon-gnome.c\n\n\n2004-07-12 06:20:10 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-78\n\n    Summary:\n      dcc_draw_state_stripe: inline into the only caller\n    Revision:\n      distcc--devel--2--patch-78\n\n\n    modified files:\n     ChangeLog src/renderer.c\n\n\n2004-07-12 05:24:32 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-77\n\n    Summary:\n      Doc\n    Revision:\n      distcc--devel--2--patch-77\n\n\n    modified files:\n     ChangeLog src/renderer.c\n\n\n2004-07-09 05:16:20 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-76\n\n    Summary:\n      todo: monitor ideas\n    Revision:\n      distcc--devel--2--patch-76\n\n\n    new files:\n     doc/todo/.arch-ids/monitor-clear.txt.id\n     doc/todo/.arch-ids/monitor-count.txt.id\n     doc/todo/monitor-clear.txt doc/todo/monitor-count.txt\n\n    modified files:\n     ChangeLog\n\n\n2004-07-09 04:56:11 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-75\n\n    Summary:\n      benchmark: notes on building glibc\n    Revision:\n      distcc--devel--2--patch-75\n\n\n    modified files:\n     ChangeLog bench/ProjectDefs.py\n\n\n2004-07-08 07:40:50 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-74\n\n    Summary:\n      fix warnings about sockaddr\n    Revision:\n      distcc--devel--2--patch-74\n\n\n    modified files:\n     ChangeLog src/netutil.h\n\n\n2004-07-08 07:39:35 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-73\n\n    Summary:\n      setuid.h: remove\n    Revision:\n      distcc--devel--2--patch-73\n\n\n    removed files:\n     src/.arch-ids/setuid.h.id src/setuid.h\n\n    modified files:\n     ChangeLog Makefile.in src/daemon.c src/daemon.h src/dopt.c\n     src/setuid.c\n\n\n2004-07-08 07:36:08 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-72\n\n    Summary:\n      filename.h: remove\n    Revision:\n      distcc--devel--2--patch-72\n\n\n    removed files:\n     src/.arch-ids/filename.h.id src/filename.h\n\n    modified files:\n     ChangeLog Makefile.in src/arg.c src/argutil.c src/cpp.c\n     src/distcc.c src/distcc.h src/filename.c src/h_exten.c\n     src/h_issource.c src/implicit.c src/mon-notify.c\n     src/mon-text.c src/mon.c src/serve.c src/srvrpc.c src/state.c\n\n\n2004-07-08 07:32:43 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-71\n\n    Summary:\n      cpp.h: removed\n    Revision:\n      distcc--devel--2--patch-71\n\n\n    removed files:\n     src/.arch-ids/cpp.h.id src/cpp.h\n\n    modified files:\n     ChangeLog Makefile.in src/compile.c src/cpp.c src/distcc.h\n\n\n2004-07-08 07:31:15 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-70\n\n    Summary:\n      strip.h: removed\n    Revision:\n      distcc--devel--2--patch-70\n\n\n    removed files:\n     src/.arch-ids/strip.h.id src/strip.h\n\n    modified files:\n     ChangeLog doc/roadmap.txt src/compile.c src/cpp.c src/distcc.h\n     src/h_strip.c src/strip.c\n\n\n2004-07-08 06:02:34 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-69\n\n    Summary:\n      doc\n    Revision:\n      distcc--devel--2--patch-69\n\n\n    modified files:\n     ChangeLog src/mon-text.c\n\n\n2004-07-08 05:57:05 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-68\n\n    Summary:\n      note leak fixes\n    Revision:\n      distcc--devel--2--patch-68\n\n\n    modified files:\n     ChangeLog\n\n\n2004-07-08 05:56:54 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-67\n\n    Summary:\n      distccmon-text: fix memory leak\n    Revision:\n      distcc--devel--2--patch-67\n\n\n    modified files:\n     ChangeLog src/mon-text.c\n\n\n2004-07-08 05:52:06 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-66\n\n    Summary:\n      dcc_history_free: Fix memory leak\n    Revision:\n      distcc--devel--2--patch-66\n\n\n    modified files:\n     ChangeLog src/mon.c\n\n\n2004-07-08 05:48:31 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-65\n\n    Summary:\n      mon-gnome: fix leak in setting title; don't set title twice\n    Revision:\n      distcc--devel--2--patch-65\n\n\n    modified files:\n     ChangeLog src/mon-gnome.c\n\n\n2004-07-08 05:10:10 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-64\n\n    Summary:\n      dcc_mon_load_state: fix leak on error path\n    Revision:\n      distcc--devel--2--patch-64\n\n\n    modified files:\n     ChangeLog NEWS src/mon.c\n\n\n2004-07-08 04:56:58 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-63\n\n    Summary:\n      Prepare for 2.16 release\n    Revision:\n      distcc--devel--2--patch-63\n\n\n    modified files:\n     ChangeLog NEWS configure.ac\n\n\n2004-07-08 04:52:43 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-62\n\n    Summary:\n      distccmon-gnome: use a GNOME status bar with a grab handle\n    Revision:\n      distcc--devel--2--patch-62\n\n    Patch from Nathan Fredrickson.\n    \n\n    modified files:\n     ChangeLog NEWS src/mon-gnome.c\n\n\n2004-07-08 04:32:35 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-61\n\n    Summary:\n      testdistcc.py: update to work on ia64 linux\n    Revision:\n      distcc--devel--2--patch-61\n\n\n    modified files:\n     ChangeLog NEWS test/testdistcc.py\n\n\n2004-07-08 04:31:44 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-60\n\n    Summary:\n      Rephrase news\n    Revision:\n      distcc--devel--2--patch-60\n\n\n    modified files:\n     ChangeLog NEWS\n\n\n2004-07-07 05:49:15 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-59\n\n    Summary:\n      testdistcc: allow for --version output to have more than two lines\n    Revision:\n      distcc--devel--2--patch-59\n\n\n    modified files:\n     ChangeLog test/testdistcc.py\n\n\n2004-07-07 05:44:23 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-58\n\n    Summary:\n      dcc_parse_mask: fix 64-bit bugs\n    Revision:\n      distcc--devel--2--patch-58\n\n\n    modified files:\n     ChangeLog NEWS src/access.c\n\n\n2004-07-07 05:21:02 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-57\n\n    Summary:\n      h_parsemask: stub for trace\n    Revision:\n      distcc--devel--2--patch-57\n\n\n    modified files:\n     ChangeLog src/h_parsemask.c\n\n\n2004-07-07 04:47:00 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-56\n\n    Summary:\n      dcc_show_version: Include copyright and licence\n    Revision:\n      distcc--devel--2--patch-56\n\n\n    modified files:\n     ChangeLog NEWS src/distcc.c src/distcc.h src/dopt.c src/help.c\n\n\n2004-07-07 04:38:53 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-55\n\n    Summary:\n      configure: if using system popt, need to use -lpopt\n    Revision:\n      distcc--devel--2--patch-55\n\n\n    modified files:\n     ChangeLog configure.ac\n\n\n2004-07-07 02:14:54 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-54\n\n    Summary:\n      dcc_log_child_exited: Fix bizarre syntax bug, remove #ifdef\n    Revision:\n      distcc--devel--2--patch-54\n\n\n    modified files:\n     ChangeLog NEWS src/dparent.c\n\n\n2004-07-07 02:07:47 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-53\n\n    Summary:\n      draft patch for faster polling when blocked\n    Revision:\n      distcc--devel--2--patch-53\n\n\n    new files:\n     patches/.arch-ids/shorter-boredom-poll.diff.id\n     patches/shorter-boredom-poll.diff\n\n    modified files:\n     ChangeLog\n\n\n2004-07-07 02:06:53 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-52\n\n    Summary:\n      doc: note popt fix\n    Revision:\n      distcc--devel--2--patch-52\n\n\n    modified files:\n     ChangeLog NEWS\n\n\n2004-07-07 01:59:58 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-51\n\n    Summary:\n      doc: benchmarks\n    Revision:\n      distcc--devel--2--patch-51\n\n\n    modified files:\n     ChangeLog doc/results.txt\n\n\n2004-07-07 01:59:39 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-50\n\n    Summary:\n      configure.ac: fix problem detecting popt.h\n    Revision:\n      distcc--devel--2--patch-50\n\n    Problem: Some people might have libpopt, but no popt.h, in which case\n    we tried to use the system copy and failed.\n    \n    Fix: Check for popt.h.  If not present, use ./popt.\n\n    modified files:\n     ChangeLog configure.ac\n\n\n2004-07-06 13:05:12 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-49\n\n    Summary:\n      Prepare for 2.15 release\n    Revision:\n      distcc--devel--2--patch-49\n\n\n    modified files:\n     ChangeLog NEWS configure.ac\n\n\n2004-07-06 13:00:16 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-48\n\n    Summary:\n      Notes on version checking\n    Revision:\n      distcc--devel--2--patch-48\n\n\n    modified files:\n     ChangeLog doc/todo/version-check.txt\n\n\n2004-07-06 12:47:38 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-47\n\n    Summary:\n      Doc\n    Revision:\n      distcc--devel--2--patch-47\n\n\n    new files:\n     doc/todo/.arch-ids/monitor-legend.txt.id\n     doc/todo/monitor-legend.txt\n\n    modified files:\n     ChangeLog\n\n\n2004-07-06 09:03:44 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-46\n\n    Summary:\n      compress: assume a larger decompression buffer by default so less likely to retry\n    Revision:\n      distcc--devel--2--patch-46\n\n\n    modified files:\n     ChangeLog src/compress.c\n\n\n2004-07-06 08:50:24 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-45\n\n    Summary:\n      remove mmap/lzo support\n    Revision:\n      distcc--devel--2--patch-45\n\n\n    modified files:\n     ChangeLog NEWS doc/results.txt src/compress.c\n\n\n2004-07-06 08:27:44 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-44\n\n    Summary:\n      dcc_r_bulk_lzo1x: fix nasty bug in mmap recv lzo\n    Revision:\n      distcc--devel--2--patch-44\n\n    When reading in compressed data, our initial buffer might not be large\n    enough for the actual compressed data, so we need to free it and make\n    a larger one.  When freeing the mmapped buffer, we need to pass both\n    address and length of the mapping.  \n    \n    The bug was that we increased the length before unmapping and\n    therefore randomly unmapped some block of memory, causing a crash\n    later on.\n    \n    Fix: don't increase the length until we're done with the old value.\n    \n    This code is really too complex to be safe.\n\n    modified files:\n     ChangeLog src/compress.c\n\n\n2004-07-06 08:09:27 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-43\n\n    Summary:\n      fix warning\n    Revision:\n      distcc--devel--2--patch-43\n\n\n    modified files:\n     ChangeLog src/daemon.c\n\n\n2004-07-06 08:09:03 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-42\n\n    Summary:\n      tempfile.h: remove\n    Revision:\n      distcc--devel--2--patch-42\n\n\n    removed files:\n     src/.arch-ids/tempfile.h.id src/tempfile.h\n\n    modified files:\n     ChangeLog Makefile.in src/backoff.c src/cleanup.c src/cpp.c\n     src/daemon.c src/distcc.c src/distcc.h src/dparent.c\n     src/dsignal.c src/hosts.c src/lock.c src/mon-notify.c\n     src/mon-text.c src/mon.c src/prefork.c src/remote.c\n     src/serve.c src/state.c src/tempfile.c src/timefile.c\n     src/where.c\n\n\n2004-07-06 08:06:57 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-41\n\n    Summary:\n      distccd: chdir to $TMPDIR not / at startup\n    Revision:\n      distcc--devel--2--patch-41\n\n\n    modified files:\n     ChangeLog NEWS src/daemon.c\n\n\n2004-07-06 08:05:30 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-40\n\n    Summary:\n      dcc_get_tmp_top: make public\n    Revision:\n      distcc--devel--2--patch-40\n\n\n    modified files:\n     ChangeLog src/tempfile.c src/tempfile.h\n\n\n2004-07-06 08:00:29 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-39\n\n    Summary:\n      dcc_log_child_exited: indicate if core was produced\n    Revision:\n      distcc--devel--2--patch-39\n\n\n    modified files:\n     ChangeLog src/dparent.c\n\n\n2004-07-06 05:10:05 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-38\n\n    Summary:\n      \n    Revision:\n      distcc--devel--2--patch-38\n\n    \n    \n\n    modified files:\n     ChangeLog src/arg.c src/argutil.c src/distcc.c src/distcc.h\n     src/implicit.c\n\n\n2004-07-06 05:03:25 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-37\n\n    Summary:\n      argutil.c: Doc\n    Revision:\n      distcc--devel--2--patch-37\n\n\n    modified files:\n     ChangeLog src/argutil.c\n\n\n2004-07-06 05:00:57 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-36\n\n    Summary:\n      arg.h: fold into distcc.h\n    Revision:\n      distcc--devel--2--patch-36\n\n\n    removed files:\n     src/.arch-ids/arg.h.id src/arg.h\n\n    modified files:\n     ChangeLog Makefile.in src/arg.c src/argutil.c src/clirpc.c\n     src/compile.c src/cpp.c src/distcc.c src/distcc.h src/exec.c\n     src/h_argvtostr.c src/h_ccvers.c src/h_scanargs.c\n     src/h_strip.c src/implicit.c src/serve.c src/srvrpc.c\n     src/ssh.c src/strip.c\n\n\n2004-07-06 04:54:15 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-35\n\n    Summary:\n      dcc_free_argv: new function\n    Revision:\n      distcc--devel--2--patch-35\n\n\n    modified files:\n     ChangeLog src/arg.h src/argutil.c\n\n\n2004-07-06 04:47:46 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-34\n\n    Summary:\n      Remove redundant temporary file cleanup in non-forking mode.\n    Revision:\n      distcc--devel--2--patch-34\n\n\n    modified files:\n     ChangeLog NEWS src/dparent.c src/serve.c\n\n\n2004-06-18 23:47:56 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-33\n\n    Summary:\n      roadmap update\n    Revision:\n      distcc--devel--2--patch-33\n\n\n    modified files:\n     ChangeLog doc/roadmap.txt\n\n\n2004-06-17 04:15:48 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-32\n\n    Summary:\n      Doc\n    Revision:\n      distcc--devel--2--patch-32\n\n\n    modified files:\n     ChangeLog src/lock.c\n\n\n2004-06-12 08:47:59 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-31\n\n    Summary:\n      dcc_service_job: Doc\n    Revision:\n      distcc--devel--2--patch-31\n\n\n    modified files:\n     ChangeLog src/serve.c\n\n\n2004-06-11 08:31:22 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-30\n\n    Summary:\n      protocol-3: I think there's no need for hash after all\n    Revision:\n      distcc--devel--2--patch-30\n\n\n    modified files:\n     ChangeLog doc/protocol-3.txt\n\n\n2004-06-11 08:19:20 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-29\n\n    Summary:\n      protocol-3: describe request format; propose adding CRC\n    Revision:\n      distcc--devel--2--patch-29\n\n\n    modified files:\n     ChangeLog doc/protocol-3.txt\n\n\n2004-06-10 04:55:25 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-28\n\n    Summary:\n      protocol-3 design development\n    Revision:\n      distcc--devel--2--patch-28\n\n\n    modified files:\n     ChangeLog doc/protocol-3.txt\n\n\n2004-06-10 03:18:55 GMT\tMartin Pool <mbp@hp.com>\tpatch-27\n\n    Summary:\n      todo: notes on file permissions\n    Revision:\n      distcc--devel--2--patch-27\n\n\n    new files:\n     doc/todo/.arch-ids/permissions.txt.id doc/todo/permissions.txt\n\n    modified files:\n     ChangeLog TODO\n\n\n2004-06-10 02:47:13 GMT\tMartin Pool <mbp@hp.com>\tpatch-26\n\n    Summary:\n      cases/hello.c: Include more headers to trigger compression\n    Revision:\n      distcc--devel--2--patch-26\n\n\n    modified files:\n     ChangeLog cases/hello.c\n\n\n2004-06-01 06:52:14 GMT\tMartin Pool <mbp@hp.com>\tpatch-25\n\n    Summary:\n      distccmon-text(1) typo fix from Lisa\n    Revision:\n      distcc--devel--2--patch-25\n\n\n    modified files:\n     ChangeLog man/distccmon-text.1\n\n\n2004-05-30 05:54:37 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-24\n\n    Summary:\n      Add fixme comments for places where memory is probably leaked\n    Revision:\n      distcc--devel--2--patch-24\n\n\n    modified files:\n     ChangeLog src/arg.c src/compile.c src/cpp.c src/where.c\n\n\n2004-05-30 05:48:09 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-23\n\n    Summary:\n      Doc\n    Revision:\n      distcc--devel--2--patch-23\n\n\n    new files:\n     doc/todo/.arch-ids/gnome-leak.txt.id doc/todo/gnome-leak.txt\n\n    modified files:\n     ChangeLog\n\n\n2004-05-29 05:10:27 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-22\n\n    Summary:\n      More TODO notes on scheduling\n    Revision:\n      distcc--devel--2--patch-22\n\n    \n\n    new files:\n     doc/todo/.arch-ids/host-selection.txt.id\n     doc/todo/.arch-ids/randomize-order.txt.id\n     doc/todo/host-selection.txt doc/todo/randomize-order.txt\n\n    modified files:\n     ChangeLog\n\n\n2004-05-28 23:42:32 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-21\n\n    Summary:\n      patch from joshh to randomize host list\n    Revision:\n      distcc--devel--2--patch-21\n\n    In http://lists.samba.org/archive/distcc/2004q2/002250.html, Dan\n    proposed randomizing the hosts list.  Here's a patch to add that\n    feature, controlled by a special --randomize option in the hosts list.\n    On a large shared build cluster, this helps spread the load\n    without requiring separate hosts lists for each user.\n    Martin, what do you think?\n    \n    \n    \n\n    new files:\n     patches/.arch-ids/joshh-random.diff.id\n     patches/joshh-random.diff\n\n    modified files:\n     ChangeLog\n\n\n2004-05-08 12:16:47 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-20\n\n    Summary:\n      Update plans\n    Revision:\n      distcc--devel--2--patch-20\n\n\n    new files:\n     doc/todo/.arch-ids/window-geometry.txt.id\n     doc/todo/window-geometry.txt\n\n    modified files:\n     ChangeLog doc/roadmap.txt\n\n\n2004-05-06 03:20:08 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-19\n\n    Summary:\n      'make uninstall' note\n    Revision:\n      distcc--devel--2--patch-19\n\n\n    new files:\n     doc/todo/.arch-ids/make-uninstall.txt.id\n     doc/todo/make-uninstall.txt\n\n    modified files:\n     ChangeLog\n\n\n2004-05-05 06:34:07 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-18\n\n    Summary:\n      Doc\n    Revision:\n      distcc--devel--2--patch-18\n\n\n    modified files:\n     ChangeLog NEWS src/remote.c\n\n\n2004-05-03 00:41:02 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-17\n\n    Summary:\n      Red Hat fix from Colin\n    Revision:\n      distcc--devel--2--patch-17\n\n    Patches applied:\n    \n     * walters@verbum.org--2003/distcc--devel--2.14--patch-5\n       merge from mbp\n    \n     * walters@verbum.org--2003/distcc--devel--2.14--patch-6\n       actually expand variables\n    \n\n    modified files:\n     ChangeLog contrib/redhat/init contrib/redhat/logrotate\n     contrib/redhat/xinetd\n\n    new patches:\n     walters@verbum.org--2003/distcc--devel--2.14--patch-5\n     walters@verbum.org--2003/distcc--devel--2.14--patch-6\n\n\n2004-05-02 10:42:57 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-16\n\n    Summary:\n      Note rate calculation\n    Revision:\n      distcc--devel--2--patch-16\n\n\n    modified files:\n     ChangeLog NEWS\n\n\n2004-05-02 10:40:35 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-15\n\n    Summary:\n      Client calculates overall compilation rate for remote jobs\n    Revision:\n      distcc--devel--2--patch-15\n\n\n    modified files:\n     ChangeLog src/bulk.c src/distcc.h src/remote.c\n\n\n2004-05-02 10:30:00 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-14\n\n    Summary:\n      Collect SSH child even when it fails\n    Revision:\n      distcc--devel--2--patch-14\n\n\n    modified files:\n     ChangeLog src/remote.c\n\n\n2004-05-02 10:22:22 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-13\n\n    Summary:\n      Remove unnecessary check that cpp produced output\n    Revision:\n      distcc--devel--2--patch-13\n\n\n    modified files:\n     ChangeLog src/remote.c\n\n\n2004-05-02 10:20:01 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-12\n\n    Summary:\n      Pass back size of transmitted files \n    Revision:\n      distcc--devel--2--patch-12\n\n    Also fix printf formats for file sizes.\n    \n    Remove old prototype for dcc_x_file_timed.\n\n    modified files:\n     ChangeLog src/bulk.c src/bulk.h src/remote.c src/serve.c\n\n\n2004-05-02 10:06:11 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-11\n\n    Summary:\n      Ignore gtags temporaries\n    Revision:\n      distcc--devel--2--patch-11\n\n\n    modified files:\n     ChangeLog src/.arch-inventory\n\n\n2004-05-02 10:05:11 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-10\n\n    Summary:\n      Remove dcc_send_job_corked wrapper\n    Revision:\n      distcc--devel--2--patch-10\n\n    Just insert/remove corks at the right places.\n\n    modified files:\n     ChangeLog src/remote.c\n\n\n2004-05-02 10:00:52 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-9\n\n    Summary:\n      Split out code to wait for cpp\n    Revision:\n      distcc--devel--2--patch-9\n\n\n    modified files:\n     ChangeLog src/remote.c\n\n\n2004-05-02 09:58:22 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-8\n\n    Summary:\n      Refactor code to send requests into remote.c\n    Revision:\n      distcc--devel--2--patch-8\n\n\n    modified files:\n     ChangeLog src/clirpc.c src/distcc.h src/remote.c\n\n\n2004-05-02 09:49:23 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-7\n\n    Summary:\n      Plan for calculating rate \n    Revision:\n      distcc--devel--2--patch-7\n\n\n    new files:\n     doc/todo/.arch-ids/show-rate.txt.id doc/todo/show-rate.txt\n\n    modified files:\n     ChangeLog\n\n\n2004-05-02 09:38:40 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-6\n\n    Summary:\n      Remove relic zip.c\n    Revision:\n      distcc--devel--2--patch-6\n\n\n    removed files:\n     src/.arch-ids/zip.c.id src/zip.c\n\n    modified files:\n     ChangeLog Makefile.in\n\n\n2004-05-02 09:35:26 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-5\n\n    Summary:\n      Remove old prototypes\n    Revision:\n      distcc--devel--2--patch-5\n\n\n    modified files:\n     ChangeLog src/daemon.h src/dparent.c\n\n\n2004-05-02 08:46:14 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-4\n\n    Summary:\n      Remove non-prefork mode\n    Revision:\n      distcc--devel--2--patch-4\n\n    Only choices now are preforking, or not forking at all.\n\n    modified files:\n     ChangeLog NEWS src/dopt.c src/dparent.c\n\n\n2004-05-02 08:35:51 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-3\n\n    Summary:\n      Set version to 2.15pre\n    Revision:\n      distcc--devel--2--patch-3\n\n\n    modified files:\n     ChangeLog NEWS configure.ac\n\n\n2004-05-02 08:34:49 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-2\n\n    Summary:\n      Plans for upcoming releases\n    Revision:\n      distcc--devel--2--patch-2\n\n\n    modified files:\n     ChangeLog doc/roadmap.txt\n\n\n2004-05-02 08:25:17 GMT\tMartin Pool <mbp@sourcefrog.net>\tpatch-1\n\n    Summary:\n      New ChangeLog for new revision\n    Revision:\n      distcc--devel--2--patch-1\n\n\n    new files:\n     ChangeLog\n\n    renamed files:\n     ChangeLog\n       ==> ChangeLog-2.14\n\n\n2004-05-02 05:07:46 GMT\tMartin Pool <mbp@sourcefrog.net>\tbase-0\n\n    Summary:\n      tag of mbp@sourcefrog.net--2004/distcc--devel--2.14--version-0\n    Revision:\n      distcc--devel--2--base-0\n\n    (automatically generated log message)\n\n    new patches:\n     mbp@sourcefrog.net--2004-happy/distcc--devel--2.14--base-0\n     mbp@sourcefrog.net--2004-happy/distcc--devel--2.14--patch-1\n     mbp@sourcefrog.net--2004-happy/distcc--devel--2.14--patch-2\n     mbp@sourcefrog.net--2004-happy/distcc--devel--2.14--patch-3\n     mbp@sourcefrog.net--2004-happy/distcc--devel--2.14--patch-4\n     mbp@sourcefrog.net--2004-happy/distcc--devel--2.14--patch-5\n     mbp@sourcefrog.net--2004-happy/distcc--devel--2.14--patch-6\n     mbp@sourcefrog.net--2004-happy/distcc--devel--2.14--patch-7\n     mbp@sourcefrog.net--2004-happy/distcc--devel--2.14--patch-8\n     mbp@sourcefrog.net--2004-happy/distcc--devel--2.14--patch-9\n     mbp@sourcefrog.net--2004-happy/distcc--devel--2.14--patch-10\n     mbp@sourcefrog.net--2004-happy/distcc--devel--2.14--patch-11\n     mbp@sourcefrog.net--2004-happy/distcc--devel--2.14--patch-12\n     mbp@sourcefrog.net--2004/distcc--cvs--0--base-0\n     mbp@sourcefrog.net--2004/distcc--cvs--0--patch-1\n     mbp@sourcefrog.net--2004/distcc--cvs--0--patch-2\n     mbp@sourcefrog.net--2004/distcc--cvs--0--patch-3\n     mbp@sourcefrog.net--2004/distcc--cvs--0--patch-4\n     mbp@sourcefrog.net--2004/distcc--cvs--0--patch-5\n     mbp@sourcefrog.net--2004/distcc--cvs--0--patch-6\n     mbp@sourcefrog.net--2004/distcc--cvs--0--patch-7\n     mbp@sourcefrog.net--2004/distcc--cvs--0--patch-8\n     mbp@sourcefrog.net--2004/distcc--cvs--0--patch-9\n     mbp@sourcefrog.net--2004/distcc--cvs--0--patch-10\n     mbp@sourcefrog.net--2004/distcc--cvs--0--patch-11\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--base-0\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-1\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-2\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-3\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-4\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-5\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-6\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-7\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-8\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-9\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-10\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-11\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-12\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-13\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-14\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-15\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-16\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-17\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-18\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-19\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-20\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-21\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-22\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-23\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-24\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-25\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-26\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-27\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-28\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-29\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-30\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-31\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-32\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-33\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-34\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-35\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-36\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-37\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-38\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-39\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-40\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-41\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-42\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-43\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-44\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-45\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-46\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--patch-47\n     mbp@sourcefrog.net--2004/distcc--devel--2.14--version-0\n     mbp@sourcefrog.net--2004/distcc--release--2.13--base-0\n     walters@verbum.org--2003/distcc--devel--2.14--base-0\n     walters@verbum.org--2003/distcc--devel--2.14--patch-1\n     walters@verbum.org--2003/distcc--devel--2.14--patch-2\n     walters@verbum.org--2003/distcc--devel--2.14--patch-3\n     walters@verbum.org--2003/distcc--devel--2.14--patch-4\n\n\n## These changes are from before development was done under arch.\n\n2004-04-10  Martin Pool  <mbp@sourcefrog.net>\n\n\t* src/mon-gnome.c (dcc_gnome_make_mainwin): Check gtk version and\n\tdon't use gtk_window_set_icon_from_file before 2.2.0.  Reported by\n\tDag Wieers.\n\n2004-03-21  Martin Pool  <mbp@sourcefrog.net>\n\n\t* src/exec.c (dcc_critique_status): Log input filename.\n\n\t* src/clirpc.c (dcc_send_job): Log input filename,\n\n\t* src/remote.c (dcc_compile_remote): Log input filename.\n\n\t* src/serve.c (dcc_run_job): Log input filename.\n\n\t* src/compile.c (dcc_compile_local): Log input filename.\n\n2004-03-03  Martin Pool  <mbp@sourcefrog.net>\n\n\t* src/mon-gnome.c: Quieten g_messages.\n\n\t* src/distcc.c (dcc_show_usage): Describe DISTCC_DIR and other\n\tthings.\n\n\t* man/distcc.1: Document DISTCC_DIR and fix some spelling errors.\n\tPatch from Thomas Schwinge.\n\n\t* src/hosts.c (dcc_get_hostlist): Get hosts from\n\t$DISTCC_DIR/hosts, rather than hardcoding to ~/.distcc.\n\n\t* src/tempfile.c (dcc_get_top_dir): Make this public.  Just log a\n\twarning if $HOME is not set.\n\n2004-03-02  Martin Pool  <mbp@sourcefrog.net>\n\n\t* src/srvnet.c (dcc_listen_by_addr): Don't create the socket, just\n\tlisten() on it.\n\t(dcc_check_client): Do access control checks on ipv4-mapped or\n\tipv4-compat IPv6 addresses.\n\n\t* src/srvnet.c (dcc_socket_listen) [ENABLE_RFC2553]: Try creating\n\tsockets in every returned address family until we get one that\n\tworks.  Fix leak of addrinfo list.\n\n\t* src/srvnet.c (dcc_socket_listen) [!ENABLE_RFC2553]: Create\n\tsocket here.\n\t\n2004-03-01  Martin Pool  <mbp@sourcefrog.net>\n\n\t* src/cleanup.c (dcc_cleanup_tempfiles): If DISTCC_SAVE_TEMPS is\n\tset, then we still need to remove temp files from the list or it\n\twill overflow.\n\n\t* src/mon-gnome.c, src/mon.c: Don't include netutil.\n\n\t* src/dparent.c (dcc_standalone_server): Set defer-accept bit.\n\n\t* man/distccd.1: Document DISTCC_TCP_DEFER_ACCEPT.\n\n\t* src/netutil.c (dcc_defer_accept): New function.\n\n2004-02-29  Martin Pool  <mbp@sourcefrog.net>\n\n\t* test/testdistcc.py (ScanArgs_Case): Test -Wa,-xarch=v8.\n\n\t* src/arg.c (dcc_scan_args): Allow \"-Wa,-xarch=v8\" to be remote.\n\tReported by Ben Scarlet.\n\n\t* test/testdistcc.py (ScanArgs_Case): Add test cases for -x\n\thandling.\n\n\t* src/arg.c (dcc_scan_args): Handle invocations like \"-xcpp\" with\n\tno space after -x.  Suggested by Ben Scarlet.\n\n\t* test/testdistcc.py (CompressedCompile_Case): Add a test of\n\tcompression.\n\n\t* src/mon-gnome.c: Include sys/loadavg.h if available.\n\n\t* configure.ac: Check for sys/loadavg.h.  Suggested by Dimitri\n\tPapadopoulos.\n\n\t* man/distcc.1: Document comments in host files.\n\n\t* test/testdistcc.py (ParseHostSpec_Case): Add test for\n\t\"localhostbutnotreally\".\n\n\t* src/hosts.c (dcc_parse_hosts): Fix matching of hosts with names\n\tlike \"localhost2\".\n\n2004-02-20  Martin Pool  <mbp@sourcefrog.net>\n\n\t* src/compress.c (dcc_r_bulk_lzo1x): ftruncate the file after\n\tmunmapping, rather than before.  Might be better on HP-UX which\n\thas problems with IO on mapped files.\n\n\t* README.packaging: Update description of why packagers should\n\tchange version numbers.\n\n2004-02-19  Martin Pool  <mbp@sourcefrog.net>\n\n\t* src/netutil.c (dcc_sockaddr_to_string): Handle null sockaddr.\n\n\t* src/srvnet.c (dcc_check_client): Handle null sockaddr.\n\n\t* src/daemon.c (dcc_inetd_server): If there is no sockaddr, pass\n\tit as NULL.\n\n\t* src/netutil.c (dcc_sockaddr_to_string) [ENABLE_RFC2553]:\n \tFailure to convert the address to a string should be just a\n \twarning, not an error.  Add special cases for unix-domain sockets\n \tand unknown address families.  Possibly fixes SSH connections with\n \tENABLE_RFC2553.\n \t\n\t* src/daemon.c (dcc_inetd_server): Downgrade warning on\n\tgetpeername failure to just a notice message.\n\n2004-02-19  Albert China  <china@thewrittenword.com>\n\n\t* test/testdistcc.py: Get test suite working on most of the\n\tplatforms we support:\n\t\n\t  1. Not much use in testing with the native compiler so we\n\t     *force* the test suite to use gcc.\n\n\t  2. Rather than picking up gcc from $PATH, we pass the full path\n\t     to GCC. This avoids problems when distccd is running.\n\n\t  3. I've added known failures on some platforms. For example, the\n\t     assembler test should only run on Linux x86. Where we know\n\t     the test will fail, we print:\n\n\tDashONoSpace_Case              NOTRUN, GCC mips-tfile wants space after -o\n\t...\n\tRemoteAssemble_Case            NOTRUN, Linux x86 only\n\tPreprocessAsm_Case             NOTRUN, Linux x86 only\n\t...\n\n\tThe tests pass on: HP-UX 10.20, 11.00, 11i; IRIX 6.5; Redhat Linux\n\t7.1, 9; Solaris 7, 8, 9; Tru64 UNIX 4.0d, 5.1\n\n2004-02-18  Albert China  <china@thewrittenword.com>\n\n\tThese patches were tested on: AIX 4.3.2, 5.1; HP-UX 10.20, 11.00,\n\t11i; IRIX 6.5; Redhat Linux 7.1, 9; Solaris 2.5.1, 2.6, 7, 8, 9;\n\tTru64 UNIX 4.0D, 5.1:\n\n\t* src/exitcode.h: IBM C compiler doesn't like trailing commas\n\tafter last enum constant.\n\t\n\t* src/clinet.c: Define h_errno for HP-UX 10.20.\n\t\n\t* src/distcc.h: Forward declaration of 'struct sockaddr' gives\n\tproblems with IBM C compiler. And, it's not needed.\n\t\n\t* src/serve.c: Forgot to include <sys/socket.h> Needed on HP-UX\n\t10.20, 11.00, 11i.\n\t\n\t* src/types.h: Remove definition of socklen_t if unavailable. We\n\tnot declare it correctly via autoconf.\n\t\n\t* configure.ac:\n\ta) Better detection for socklen_t. This code is taken from curl but\n\twe submitted it so we own the copyright. Feel free to use as you\n\tplease.\n\tb) Existence of mmap() doesn't imply MAP_FAILED exists. So, test\n\tand define it if unavailable.\n\tc) Replace the AC_CHECK_FUNCS(connect) mess.\n\t\n2004-01-30  Martin Pool  <mbp@sourcefrog.net>\n\n\t* src/hosts.c (dcc_parse_hosts): Fix problem where we accidentally\n\tdetected localhost at end of string.\n\n\t* src/h_hosts.c (main): Fix up verbose mode.\n\n\t* test/testdistcc.py (ParseHostSpec_Case.runtest): Test parsing of\n\tcomments in host specifications.\n\n\t* src/hosts.c (dcc_parse_hosts): Skip over hash comments in host\n\tspecifications.\n\n2004-01-11  Martin Pool  <mbp@sourcefrog.net>\n\n\t* src/srvnet.c (dcc_check_client): Take list of allowed addresses\n\tas a new parameter so that this file doesn't depend on opt.c.\n\n\t* src/h_sa2str.c: New test harness.\n\n\t* Makefile.in (h_sa2str): new test.\n\n2004-01-09  Martin Pool  <mbp@sourcefrog.net>\n\n\t* configure.ac: Make --without-gnome, --without-gtk,\n\t--disable-profile all turn the relevant options off rather than\n\ton.\n\n\t* Makefile.in: Add man/distccmon-text.1, and clean up manpage\n\thandling.\n\n\t* man/distccmon-text.1: Fix some typos.\n\n\t* src/dopt.c (distccd_parse_options): Option arguments should be\n\theld in (const char *).\n\n\t* src/setuid.c (dcc_discard_root): Must setuid after setgid, not\n\tbefore.  Fix from Wayne Davison.\n\n\t* src/mon.c (dcc_mon_check_orphans): When checking if a process\n\texists, accept EPERM as indicating it exists but isn't ours.  This\n\tallows watching the directory of a different user.  Reported by\n\tErnst Bachmann.\n\n2003-12-21  Shri Shrikumar <shri@urbyte.com>\n\n\t* man/distccmon-text.1: New manpage.\n\n2003-12-15  Martin Pool  <mbp@sourcefrog.net>\n\n\t* man/distccd.1: Mention TMPDIR.\n\n\t* man/distcc.1: We don't use a subdirectory of TMPDIR anymore.\n\n2003-11-28  Harold L Hunt II  <huntharo@msu.edu>\n\n\t* configure.ac, Makefile.in: Add --with-docdir=PATH option to set\n\tinstall location for documents.  The default is the same as\n\tpreviously: ${datadir}/doc/distcc.\n\n2003-11-28  Martin Pool  <mbp@sourcefrog.net>\n\n\t* src/distcc.h (dcc_sockaddr_storage): Different method for\n\tchoosing the type for dcc_sockaddr_storage.  We now use a plain\n\tsockaddr unless RFC2553 was requested, in which case we use\n\tsockaddr_storage.  HAVE_SOCKADDR_STORAGE is only used as a check\n\tthat the RFC2553 implementation is reasonable.\n\n\t* src/distcc.h (dcc_sockaddr_storage): Use a new type name for our\n\treplacement of sockaddr_storage, rather than calling it\n\tsockaddr_storage, to make it more clear that it's determined by\n\tautoconf. \n\t\n\t* src/prefork.c (dcc_preforked_child): Use dcc_sockaddr_storage.\n\n\t* src/dparent.c (dcc_forking_parent): Likewise.\n\n\t* src/daemon.c (dcc_inetd_server): Likewise.\n\n2003-11-23  Martin Pool  <mbp@sourcefrog.net>\n\n\t* src/netutil.c (dcc_sockaddr_to_string) [ENABLE_RFC2553]: Include\n\tthe port number in the returned string, as for !ENABLE_RFC2553.\n\tThis looks a bit wierd for IPv6 but is legible and unambiguous at\n\tleast for output.  Increase static buffer size.\n\n\t* src/clinet.c (dcc_connect_timed): Check SO_ERROR to see if the\n\tconnection failed so that we can trap it at this point rather than\n\twaiting until we start doing IO.\n\n\t* src/distcc.h [ENABLE_RFC2553]: sockaddr_storage is required for\n\tRFC2553.\n\n\t* src/dparent.c (dcc_nofork_parent, dcc_forking_parent): Socket\n\taddresses should be stored on the stack in sockaddr_storage so\n\tthat IPv6 addresses will fit.  We always have this type, or can\n\tsimulate it.\n\n\t* src/prefork.c (dcc_preforked_child): Likewise.\n\n\t* src/srvnet.c (dcc_socket_listen) [ENABLE_RFC2553]: Don't prefer\n\tto listen on IPv4 addresses, just use whatever the operating\n\tsystem thinks is best.\n\n\t* INSTALL: Suggest using --with-gnome and --enable-rfc2553.\n\n\t* man/distccd.1: Add description of --log-level.\n\n\t* src/dopt.c: New --log-level option to accomodate people who only\n\twant to log errors.\n\n\t* src/trace.c, src/trace.h (rs_loglevel_from_name): New function.\n\n\t* configure.ac, Makefile.in: Check pkg-config information for\n\tGNOME/GTK+ at configure time, not build time.  This is a bit\n\tquicker than running the script for every file we build, and means\n\tthat PKG_CONFIG_PATH only needs to be set for configure.\n\n\t* src/lock.c: Doc.\n\n2003-11-17  Lionel Sausin  <lionel.sausin@free.fr>\n\n\t* man/fr/distcc.1, man/fr/distccd.1: French translations of the\n\tmanual pages.\n\n2003-11-17  Martin Pool  <mbp@sourcefrog.net>\n\n\t* distcc.h: MAXPATHLEN is not defined on GNU/Hurd, so supply a\n\treasonable default value of 4096.  Reported by Santiago Vila.\n\n2003-11-17  Martin Pool  <mbp@sourcefrog.net>\n\n\t* sendfile.c: Documentation updates.\n\n2003-11-17  Allan Saddi  <allan@saddi.com>\n\n\t* sendfile.c (sys_sendfile): BSD implementation of this function\n\tneeds to return -1 when transmission fails with EAGAIN and no\n\tbytes were sent.\n\n2003-11-17  Martin Pool  <mbp@sourcefrog.net>\n\n\t* setuid.c (dcc_discard_root): Wayne suggests calling\n\tsetgid()/setuid() before doing setgroups().  setgroups() on Mac OS\n\tX Jaguar can't seem to handle setting to 0 groups, so just set it\n\tto the same as the regular group.\n\n2003-10-30 19:02  Martin Pool <mbp@samba.org>\n\n\t* doc/release-names.txt: [no log message]\n\n2003-10-28 11:38  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Bump version.\n\n2003-10-23 13:36  Martin Pool <mbp@samba.org>\n\n\t* autogen.sh: Remove check on autoconf version because it breaks\n\t  on non-numeric   versions like \"2.57a\".\n\n2003-10-23 10:50  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1: Add some description of search paths.\n\n2003-10-23 10:44  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Add some description of search paths.\n\n2003-10-23 10:14  Martin Pool <mbp@samba.org>\n\n\t* TODO: More tasks to do.\n\n2003-10-23 09:56  Martin Pool <mbp@samba.org>\n\n\t* NEWS, configure.ac: Prepare for 2.11.2 release\n\n2003-10-14 14:23  Martin Pool <mbp@samba.org>\n\n\t* gnome/distccmon-gnome.desktop, NEWS: Desktop file corrections\n\t  from Dag Wieers.\n\n2003-10-13 23:57  Martin Pool <mbp@samba.org>\n\n\t* TODO: Notes on current bugs.\n\n2003-10-13 20:05  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Don't trim the path at all when our invocation\n\t  name is \"distcc\".\n\n2003-10-13 19:52  Martin Pool <mbp@samba.org>\n\n\t* src/util.c: dcc_trim_path: Trace the compiler name.\n\n2003-10-13 19:51  Martin Pool <mbp@samba.org>\n\n\t* src/util.c: dcc_trim_path: Doc.\n\n2003-10-13 19:39  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Doc.\n\n2003-10-13 19:24  Martin Pool <mbp@samba.org>\n\n\t* src/climasq.c: Doc.\n\n2003-10-13 19:03  Martin Pool <mbp@samba.org>\n\n\t* NEWS, src/distcc.c, src/dsignal.c: Fatal signal handlers for\n\t  client and daemon should reset the signal vector before doing\n\t  anything else, to protect against an (unlikely) spin if the\n\t  signal is re-sent.\n\n2003-10-13 19:00  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Doc typo\n\n2003-10-13 18:39  Martin Pool <mbp@samba.org>\n\n\t* src/: distcc.c, dsignal.c: Use AC_TYPE_SIGNAL to set signal\n\t  handler return type for portability.\n\n2003-10-13 18:38  Martin Pool <mbp@samba.org>\n\n\t* doc/example/xinetd, NEWS: Add type = UNLISTED to cope without\n\t  an /etc/services entry.\n\n2003-10-13 18:34  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Doc\n\n\t  * Add check for signal return type.\n\n2003-10-13 17:56  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Bump date.\n\n2003-10-13 17:56  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1, NEWS: Clear up meaning of UNCACHED_ERR_FD.\n\n2003-10-13 17:37  Martin Pool <mbp@samba.org>\n\n\t* README.packaging: Suggest adding to /etc/services.\n\n2003-10-13 17:06  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1: Clarifications/corrections to --allow\n\t  description.\n\n2003-10-13 16:52  Martin Pool <mbp@samba.org>\n\n\t* NEWS: IRIX fixes.\n\n2003-10-13 16:42  Martin Pool <mbp@samba.org>\n\n\t* src/serve.c: dcc_check_compiler_masq: Remove dead variable.\n\n2003-10-13 16:40  Martin Pool <mbp@samba.org>\n\n\t* src/dparent.c: dcc_log_child_exited: Use appropriate log\n\t  severity to match the   signal severity, even on machines that\n\t  don't have strsignal().\n\n2003-10-13 16:37  Martin Pool <mbp@samba.org>\n\n\t* TODO: Notes on better scheduling.\n\n2003-10-13 16:26  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Remove dependency on libglade.\n\n\t  * Fix --without-gnome.\n\n2003-10-13 16:24  Martin Pool <mbp@samba.org>\n\n\t* gnome/: distccmon-gnome.glade, distccmon-gnome.gladep: Remove\n\t  Glade packages.\n\n2003-10-13 16:20  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Set icon on monitor window from png file.\n\n2003-10-13 16:15  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Remove dependency on Glade by rolling back to\n\t  by-hand construction\t of window components, based on the code in\n\t  2.10.\n\n2003-10-13 16:10  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Don't require libglade.\n\n2003-10-13 16:09  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Correct the handling of --without-gnome, etc.\n\t  Previously this was\ttreated the same as --with-gnome.\n\n\t  * Don't require libglade.\n\n2003-10-13 15:31  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Bump version\n\n2003-10-08 15:47  Martin Pool <mbp@samba.org>\n\n\t* NEWS, configure.ac: Prepare for 2.11.1 release.\n\n2003-10-08 15:45  Martin Pool <mbp@samba.org>\n\n\t* NEWS, src/arg.c, test/testdistcc.py: C++ compilation with\n\t  -frepo must be local, because it emits .rpo\tfiles.\n\n2003-10-07 16:12  Martin Pool <mbp@samba.org>\n\n\t* src/bulk.c: dcc_x_file_lzo1x should return any errors that\n\t  occur.\n\n2003-10-07 16:07  Martin Pool <mbp@samba.org>\n\n\t* src/exec.c: dcc_inside_child should be void and should never\n\t  return.\n\n2003-10-07 16:01  Martin Pool <mbp@samba.org>\n\n\t* src/: util.c, util.h: dcc_exit can be void.\n\n2003-10-07 15:52  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Typo fix from Lionel Sausin.\n\n2003-10-01 13:56  Martin Pool <mbp@samba.org>\n\n\t* src/mon.h, NEWS: Description from Frerich of how to write\n\t  monitor programs, with some\tedits by me.\n\n2003-09-30 12:54  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Put Gnome data files into PKGDATADIR, e.g.\n\t  /usr/local/share/distcc/,   rather than the top-level datadir.\n\n2003-09-30 12:49  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, src/mon-gnome.c: Put Gnome data files into\n\t  PKGDATADIR, e.g. /usr/local/share/distcc/,   rather than the\n\t  top-level datadir.\n\n2003-09-30 12:42  Martin Pool <mbp@samba.org>\n\n\t* configure.ac, Makefile.in: New @INSTALL_GNOME@ substitution so\n\t  that Gnome/GTK data files are   only installed when necessary.\n\n2003-09-30 12:40  Martin Pool <mbp@samba.org>\n\n\t* INSTALL: Give dependencies for --with-gtk.\n\n2003-09-30 09:54  Martin Pool <mbp@samba.org>\n\n\t* src/state.h: Remove stdint.h.  We don't use it, and it does not\n\t  exist on FreeBSD   4-STABLE, according to Frerich Raabe.\n\n2003-09-29 22:23  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Set datestamp.\n\n2003-09-29 22:21  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Fix for state.h\n\n2003-09-29 22:19  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Documentation corrections from Lionel Sausin.\n\n2003-09-29 16:57  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c, NEWS: Check that we have permission to write to\n\t  the specified TMPDIR, or   otherwise fail.\n\n2003-09-29 16:46  Martin Pool <mbp@samba.org>\n\n\t* src/mon.h: Doc rename to dcc_history.\n\n2003-09-29 16:44  Martin Pool <mbp@samba.org>\n\n\t* src/mon.h: Explain why dnotify is cut out.\n\n2003-09-29 16:33  Martin Pool <mbp@samba.org>\n\n\t* NEWS: stdint.h is not on iricks or sloaris either.\n\n2003-09-29 16:30  Martin Pool <mbp@samba.org>\n\n\t* src/access.c, src/h_parsemask.c, src/mon-text.c, src/state.c,\n\t  configure.ac: Remove stdint.h.  We don't use it, and it does\n\t  not exist on FreeBSD\t 4-STABLE, according to Frerich Raabe.\n\n2003-09-29 16:16  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Make it just --with-gtk.\n\n2003-09-29 16:15  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Fix help string for --with-gtk+.\n\n2003-09-29 16:13  Martin Pool <mbp@samba.org>\n\n\t* NEWS, configure.ac: Add support for building with either GNOME\n\t  or plain GTK+.\n\n2003-09-29 16:08  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Remove unnecessary inclusion of headers for\n\t  pango.\n\n\t  * Allow compilation with either GNOME or plain GTK+, depending on\n\t    WITH_GNOME and WITH_GTK.\n\n2003-09-29 16:06  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Remove unnecessary inclusion of headers for\n\t  gnome, pango and glade,   and use of gettext macro.\n\n2003-09-27 23:13  Martin Pool <mbp@samba.org>\n\n\t* src/state.h: Fix state.h for use with C++.\tPatch from Frerich\n\t  Raabe.\n\n2003-09-27 19:42  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Bump version.\n\n2003-09-25 13:39  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Include GTK as well.\n\n2003-09-24 15:33  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Change for new log archiving method.\n\n2003-09-23 16:12  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Prepare for release.\n\n2003-09-23 15:58  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Run tests for GNOME packages when --with-gnome is\n\t  set.\n\n2003-09-23 15:51  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Bump to version 2.11.\n\n2003-09-23 15:43  Martin Pool <mbp@samba.org>\n\n\t* NEWS, src/distcc.c: Client catches SIGINT, SIGHUP and SIGTERM\n\t  and cleans up temporary   files before terminating.\n\n2003-09-23 15:26  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Make directories and state files with weak mode bits, to\n\t  try to   avoid conflicts in shared distcc_dirs.\n\n2003-09-23 15:24  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: dcc_mkdir: Make directory with weak mode bits,\n\t  to try to avoid   conflicts in shared distcc_dirs.\n\n2003-09-23 15:22  Martin Pool <mbp@samba.org>\n\n\t* src/lock.c: dcc_open_lockfile: Open lockfile with weak mode\n\t  bits, to try to   avoid conflicts in shared distcc_dirs.\n\n2003-09-23 15:18  Martin Pool <mbp@samba.org>\n\n\t* gnome/: .cvsignore, distccmon-gnome-icon.png,\n\t  distccmon-gnome.desktop, distccmon-gnome.glade,\n\t  distccmon-gnome.gladep: Merge from branch-pretty.\n\n\t  Update desktop file to include the right name.\n\n2003-09-23 15:12  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Distribute and install GNOME data files.\n\n2003-09-23 15:00  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Change to --with-gnome for consistency with other\n\t  packages.\n\n2003-09-23 14:57  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py: The access mask 1.2.3.4/0 should match\n\t  anything.\n\n2003-09-23 14:53  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Fix bad bug in main() that caused us to exit\n\t  through the wrong path.\n\n2003-09-23 14:38  Martin Pool <mbp@samba.org>\n\n\t* configure.ac, INSTALL: Change to --with-gnome for consistency\n\t  with other packages.\n\n2003-09-23 14:28  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: LINUXDOC is no longer a special variable.\n\n2003-09-23 14:23  Martin Pool <mbp@samba.org>\n\n\t* INSTALL, Makefile.in, NEWS, TODO, configure.ac,\n\t  doc/release-names.txt, src/clirpc.c, src/compile.c, src/distcc.c,\n\t  src/distcc.h, src/mon-fake.c, src/mon-gnome.c, src/mon-text.c,\n\t  src/mon.c, src/mon.h, src/remote.c, src/renderer.c,\n\t  src/renderer.h, src/state.c, src/state.h, src/util.c, src/util.h,\n\t  src/where.c: Merge the new GNOME monitor back from\n\t  'branch-pretty':\n\n\t  * GNOME monitor now uses a custom GtkCellRenderer subclass\n\t  (renderer.c, renderer.h) to draw a scarf-style history of the\n\t  states   for the slot.\n\n\t  * Now uses binary state files that are quicker to write out and\n\t  read\t in.  Not compatible with monitors from the previous\n\t  version.\n\n\t  * Structure renamed from dcc_mon_list to dcc_history.  Text\n\t  fields are   held directly in the structure to allow it to be\n\t  directly written   out.\n\n\t  * State files are written and rewritten in place, rather than\n\t  always   being renamed into place.  We cope reasonably gracefully\n\t  when\t reading back files that are truncated.\n\n\t  * New strlcpy() utility.\n\n\t  * Clean up cruft in dcc_lock_one() from when we had transmission\n\t  lock\t files.\n\n\t  * Better handling of EXEEXT to allow tab completion to work in\n\t  Makefiles.\n\n\t  * GNOME monitor is now constructed using libglade-2, rather than\n\t  the\thard way.\n\n\t  * New --enable-profile option for gprof.\n\n\t  * Depends on libglade, pango, libgnome, libgnomeui, at least if\n\t  you\twant the graphical monitor.\n\n\t  * Change UNUSED() macro to make sure the variable is not\n\t  accidentally\t used.\n\n\t  * Rename state tags to consistent DCC_STATE_*\n\n2003-09-23 14:02  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Doc.\n\n2003-09-23 14:00  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Change colors to a set selected from the GNOME\n\t  palette that are   easier to distinguish.\n\n2003-09-23 13:44  Martin Pool <mbp@samba.org>\n\n\t* gnome/distccmon-gnome.glade, src/mon-gnome.c: Remove About and\n\t  Key windows, which don't do anything very useful at\tthe moment.\n\n2003-09-22 17:33  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Check structure size when loading binary state\n\t  files.\n\n2003-09-22 17:32  Martin Pool <mbp@samba.org>\n\n\t* src/: state.c, state.h, where.c: Don't make the client's state\n\t  structure global.\n\n\t  * Don't need dcc_timeval_to_microseconds anymore.\n\n2003-09-22 17:29  Martin Pool <mbp@samba.org>\n\n\t* TODO: Remove done items.\n\n2003-09-22 17:24  Martin Pool <mbp@samba.org>\n\n\t* src/state.h: Add a size field to the state struct.\n\n2003-09-22 17:22  Martin Pool <mbp@samba.org>\n\n\t* src/mon.h: Don't need dcc_timeval_to_double\n\n2003-09-22 17:13  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Don't need sys/time.h\n\n2003-09-22 17:12  Martin Pool <mbp@samba.org>\n\n\t* src/lock.c: Don't need state.h anymore.\n\n2003-09-22 17:10  Martin Pool <mbp@samba.org>\n\n\t* src/: compile.c, distcc.c: Don't use STARTUP state anymore.\n\n2003-09-22 16:50  Martin Pool <mbp@samba.org>\n\n\t* INSTALL: Note gnome dependencies.\n\n2003-09-22 15:53  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Lower the priority of scanning for changes, so\n\t  that we're more   likely to keep the UI responsive.\n\n2003-09-22 14:53  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Doc\n\n2003-09-22 14:51  Martin Pool <mbp@samba.org>\n\n\t* src/remote.c: Store hostname in state file, not the host\n\t  definition string.\n\n2003-09-20 19:36  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Try safe lzo decompressor, to try to catch cases where\n\t  the\tcompressed data is corrupt or our output buffer is too\n\t  small.\n\n2003-09-20 16:42  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: Try safe lzo decompressor, to try to catch\n\t  cases where the   compressed data is corrupt or our output buffer\n\t  is too small.\n\n2003-09-19 17:23  Martin Pool <mbp@samba.org>\n\n\t* gnome/: distccmon-gnome-icon.png, distccmon-gnome.glade,\n\t  distccmon-gnome.gladep: Move icons.\n\n\t  * Add menu item to show color key.\n\n\t  * Set size through allocation of scroll area, not through the\n\t  window default_size.\n\n2003-09-19 17:21  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Add menu option to show chart key.\n\n2003-09-19 17:21  Martin Pool <mbp@samba.org>\n\n\t* src/: renderer.c, renderer.h: Set bar width so that the whole\n\t  history cell is filled.\n\n2003-09-19 16:53  Martin Pool <mbp@samba.org>\n\n\t* gnome/.cvsignore: Rename icon PNG\n\n2003-09-19 16:51  Martin Pool <mbp@samba.org>\n\n\t* gnome/distccmon-gnome.glade: Rename icon png.\n\n2003-09-19 16:35  Martin Pool <mbp@samba.org>\n\n\t* gnome/distccmon-gnome.desktop: Add draft FreeDesktop .desktop\n\t  definition.\n\n2003-09-19 16:02  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Choose bar width such that the complete history\n\t  roughly fills the cell.\n\n2003-09-19 15:40  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Quieten warnings when polling state files.\n\n2003-09-19 15:39  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Change state name to \"Preprocess\".\n\n2003-09-19 15:15  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Doc.\n\n2003-09-19 14:57  Martin Pool <mbp@samba.org>\n\n\t* src/: mon-gnome.c, renderer.c, renderer.h: Create graphics\n\t  contexts for drawing state strips just once at   startup, rather\n\t  than every time we draw a rectangle.\tOught to be   much more\n\t  efficient.\n\n2003-09-19 14:43  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Add --enable-profile option.\n\n\t  * Cleanup CPPFLAGS generation.\n\n2003-09-19 14:29  Martin Pool <mbp@samba.org>\n\n\t* src/dparent.c, NEWS: In non-forking mode, make sure to close\n\t  the accepted fd after   processing a request.\n\n2003-09-19 14:01  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Allow access masks like 0.0.0.0/0, meaning allow access\n\t  from\t anywhere.  Some adjustments required to allow for\n\t  behaviour of C   bitshift operators.\n\n2003-09-19 13:58  Martin Pool <mbp@samba.org>\n\n\t* src/access.c: Allow access masks like 0.0.0.0/0, meaning allow\n\t  access from\tanywhere.  Some adjustments required to allow for\n\t  behaviour of C   bitshift operators.\n\n2003-09-19 13:07  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Use an autoconf substitution for EXEEXT, rather\n\t  than a Make\tvariable, so that bash's tab completion doesn't get\n\t  confused by the   targets.\n\n2003-09-19 12:45  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Manpage updates.\n\n2003-09-19 12:44  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Suggest using SCons.\n\n2003-09-19 12:41  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: [no log message]\n\n2003-09-19 12:35  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: More explanation of Make and compiler errors.\n\n2003-09-19 12:30  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: More discussion of where to place localhost in\n\t  the list.\n\n2003-09-19 12:21  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: [no log message]\n\n2003-09-19 12:06  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-09-19 12:03  Martin Pool <mbp@samba.org>\n\n\t* patches/: backlog-sample.c, colorgcc, compression.patch,\n\t  connect-timeout-02.diff, daemon-address-binding.diff,\n\t  distcc-ethereal.diff, distcc-hostlist.diff, distcc-hostopt.patch,\n\t  distccd-clean-path.diff, prefork-sample.c, state-in-home.diff,\n\t  trylzo.c: Remove obsolete patches.\n\n2003-09-19 11:47  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-09-18 19:53  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Retain history of 100 states.\n\n2003-09-18 18:58  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Draw \"DONE\" states as empty.\n\n2003-09-18 18:32  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Render the slot history as a set of state\n\t  stripes.  This looks\t great!\n\n2003-09-18 18:18  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Kill dead code.\n\n2003-09-18 18:01  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Trim the history queue length every time we\n\t  add to it.\n\n2003-09-18 17:58  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Cope with the \"history\" property being a GQueue\n\t  of state values,   rather than a list of dcc_history structures.\n\n\t  * Just the first state is drawn through the whole cell at the\n\t  moment.\n\n2003-09-18 17:57  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Fix pointer error in prepending to an existing\n\t  history queue.\n\n2003-09-18 17:55  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Fix up code to insert at end.\n\n2003-09-18 17:48  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Actually go ahead and store the state history\n\t  in a queue in all   rows.  Create this queue when the row is\n\t  first inserted.\n\n\t  * Change appended rows to go through dcc_insert_row_from_task()\n\t  so   that we can set up the queue.\n\n2003-09-18 17:25  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Doc\n\n\t  * Store a GQueue of state values in the table row, so that the\n\t  cell\t renderer can easily read back all of them and draw them.\n\n\t  * Split out code to insert a row into dcc_insert_row_from_task(),\n\t    because it needs to construct a new GQueue.\n\n\t  * rename dcc_clear_row -> dcc_set_row_idle()\n\n2003-09-18 17:05  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Fix number of columns.\n\n2003-09-18 17:04  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Add textual State column.\n\n2003-09-18 17:00  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Don't sort localhost specially.\tI think this was\n\t  buggy.\n\n2003-09-18 16:28  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: After we finish the task list, clear any rows\n\t  remaining in the   table.\n\n2003-09-18 16:21  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: dcc_update_store_from_tasks: Fix bug that\n\t  caused it to lock up when   it hit a host with no name or file or\n\t  in DONE state.\n\n2003-09-18 16:13  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Silently ignore NULL \"history\" properties.\n\n2003-09-18 16:12  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Add a \"Slot\" column, visible in the list.\n\n\t  * First cut at a method for updating the tree model in place,\n\t  rather   than deleting it and creating a new one.  Takes\n\t  advantage of the   tree model and the task list being in the same\n\t  order to detect   changed, added or deleted rows.\n\n\t    Partially working.\n\n2003-09-18 15:40  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Typo\n\n2003-09-18 15:38  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Split code for merging task list into list\n\t  store into new function   dcc_update_store_From_tasks(), in\n\t  preparation for doing an   update-in-place rather than clearing\n\t  it and reloading.\n\n\t  * COLUMN_HISTORY is currently set to NULL.  It will become a\n\t  pointer   to a list of state values.\n\n\t  * task_list is no longer global.  It is held in memory only\n\t  during the   update.\n\n2003-09-18 15:22  Martin Pool <mbp@samba.org>\n\n\t* gnome/distccmon-gnome.glade: Vertical scrollbar auto;\n\t  horizontal scrollbar never.\n\n2003-09-18 15:20  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Doc.\n\n\t  * Move gtk_list_store_new() to near the column number\n\t  declarations to   help keep them in step.\n\n\t  * Drop unused dcc_timeval_to_double().\n\n2003-09-18 15:06  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Render the state cell solidly filled with the\n\t  color for the current state.\n\n2003-09-18 15:02  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Remove dead code.\n\n2003-09-18 14:59  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Show file name in the table too.\n\n2003-09-18 14:54  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, gnome/distccmon-gnome.glade, src/mon-gnome.c,\n\t  src/renderer.c: Roll back to using a table and cellrenderer.\n\n\t    I think the immediately previous approach of having the monitor\n\t  keep\n\t    track of state history and draw an unlabelled striped bar is\n\t    probably pretty good.  However, I'd like to also rely on the\n\t  regular\n\t    table widget to give us space to draw it.\n\n\t    This code builds and gives an empty table.\tThe renderer is\n\t  here but\n\t    disabled.\n\n2003-09-18 14:14  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: Fix up types for printing size_ts and for\n\t  interfacing with minilzo.    Detected when building on ia64 for\n\t  Debian.\n\n2003-09-18 10:48  Martin Pool <mbp@samba.org>\n\n\t* autogen.sh: \"sed 1q\" is more portable than using head to chop\n\t  the version out of   autoconf.  Reported by Alexandre Oliva.\n\n2003-09-18 10:39  Martin Pool <mbp@samba.org>\n\n\t* AUTHORS: [no log message]\n\n2003-09-18 10:20  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Note portability fixes.\n\n2003-09-18 10:17  Martin Pool <mbp@samba.org>\n\n\t* src/ncpus.c, NEWS: In all cases, if we failed to determine the\n\t  number of CPUs using\t sysconf, then assume 1.\n\n2003-09-18 10:15  Martin Pool <mbp@samba.org>\n\n\t* src/ncpus.c: If we failed to determine the number of CPUs using\n\t  sysconf, then   assume 1.\n\n2003-09-18 10:14  Martin Pool <mbp@samba.org>\n\n\t* src/ncpus.c: bsdi can use the BSD method of finding NCPUs as\n\t  well.  Reported by   Nick Amato.\n\n2003-09-17 17:24  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Accumulate all task lists in a GSList\n\t  (currently never truncated)\tand draw striped bars showing past\n\t  tasks.  Currently they are not   placed on the right row, so the\n\t  stripes are all pushed up towards   the top.\n\n2003-09-17 16:10  Martin Pool <mbp@samba.org>\n\n\t* src/: mon-gnome.c, state.c, state.h: Rework monitor yet again:\n\t  :-/\n\n\t  * State files no longer hold a history of that process's state,\n\t  just\t its current information, and they are removed when the\n\t  process   exits.\n\n\t    This means that we cannot get very fine-grained plots of\n\t  transitions\n\t    between states, but it seemed to be hard to get that\n\t  information\n\t    displayed smoothly without burning a lot of CPU.  In addition,\n\t  we\n\t    were getting hundreds of leftover state files, which slow down\n\t    traversing the directory and are not really necessary.\n\n\t    I'll try instead putting the burden of remembering and painting\n\t    history onto the monitor, since it's the only program that\n\t  really\n\t    needs that information.\n\n2003-09-17 15:44  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Files only 60s old are now considered too old.\n\n2003-09-17 15:41  Martin Pool <mbp@samba.org>\n\n\t* NEWS, autogen.sh: Fix autogen.sh for recent versions of GNU\n\t  coreutils.  Reported\t by Lisa Seelye.\n\n2003-09-17 15:36  Martin Pool <mbp@samba.org>\n\n\t* src/: state.c, distcc.c: Move back towards removing state files\n\t  when the client process that\t they belong to exits.\n\n2003-09-17 12:27  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Skip tasks on no host\n\n\t  * Draw labels again\n\n\t  * Refresh every 300ms\n\n2003-09-17 12:24  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: GtkCellRenderer is no longer needed\n\n2003-09-17 12:21  Martin Pool <mbp@samba.org>\n\n\t* COPYING.FDL: The GNU FDL need not be included, because the SGML\n\t  manual is gone.    All the documentation is in the manpages,\n\t  which are GPL'd.\n\n2003-09-17 12:16  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Set date.\n\n2003-09-17 12:14  Martin Pool <mbp@samba.org>\n\n\t* man/: distccd.1, distcc.1: Add no-warranty statement.\n\n2003-09-17 12:11  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: COPYING.FDL is no longer included, because the\n\t  manpages are GPL'd.\n\n2003-09-16 19:27  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Only draw rectangles of >=1 width.\n\n2003-09-16 19:17  Martin Pool <mbp@samba.org>\n\n\t* src/: mon-gnome.c, mon.c, state.c, state.h: Handle times as\n\t  microseconds-since-epoch rather than doubles.\n\n\t  * Rework task drawing routine to correctly handle tasks that have\n\t    already completed.\n\n\t  Currently working but a bit slow.\n\n2003-09-16 19:06  Martin Pool <mbp@samba.org>\n\n\t* patches/lisa--recursive-mkdir-uid-distccdir.patch: Patch from\n\t  Lisa.\n\n2003-09-16 19:00  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Better attempt at drawing current and previous\n\t  tasks.\n\n2003-09-16 18:38  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Make a better attempt at always recording DONE\n\t  when we are.\n\n2003-09-16 18:13  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Center text labels in bars.\n\n\t  * Set bar height to 1.5x text height.\n\n\t  * Draw host name once per row.\n\n2003-09-16 18:03  Martin Pool <mbp@samba.org>\n\n\t* src/: mon-gnome.c, state.h: Much simpler fix for identifying\n\t  multiple tasks in the same slot:   now that things are sorted\n\t  properly, we can just find neighbouring   history reports and\n\t  check if they're the same.  That should make\t drawing past tasks\n\t  easy...\n\n2003-09-16 15:57  Martin Pool <mbp@samba.org>\n\n\t* src/state.h: Add a pointer to the next on this slot.\n\n2003-09-16 15:55  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Update every 200ms\n\n\t  * Allocate rows for each host slot, so that we can draw multiple\n\t  tasks   onto each line.\n\n2003-09-16 15:08  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Sort localhost to the front of the list of tasks.\n\n2003-09-16 15:04  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Return list of running tasks sorted by hostname and\n\t  slot to make\t monitor displays more likely to keep tasks in a\n\t  stable position.\n\n2003-09-16 14:36  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Don't need signal.c\n\n2003-09-16 14:23  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Note that we should now work on BSD/OS.\n\n2003-09-16 14:20  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Call getpgrp() rather than getpgid(), because it's the\n\t  POSIX.1   standard function.\tSuggestion from Nick Amato.\n\n2003-09-16 14:19  Martin Pool <mbp@samba.org>\n\n\t* src/exec.c: Call getpgrp() rather than getpgid(), because it's\n\t  the POSIX.1\tstandard function.\n\n2003-09-16 13:56  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Don't draw border.\n\n\t  * Do get proper alignment between host names and task bars.\n\n\t  * Include slot number in the name.\n\n2003-09-16 13:28  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Draw host names on left.  (Not very well. :-)\n\n2003-09-16 13:24  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Leave space on the left to draw hostnames, and\n\t  draw a splitter bar\tat that point.\n\n\t  * Draw a border around the drawingarea.\n\n2003-09-16 13:10  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Roll back to using a GtkDrawingArea rather than a\n\t  table.  renderer.c   is no longer needed.\n\n2003-09-16 13:08  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Fix up rollback.\n\n2003-09-16 13:07  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Roll back to 1.43.2.37, using a GtkDrawingArea\n\t  rather than a table.\n\n2003-09-16 12:42  Martin Pool <mbp@samba.org>\n\n\t* gnome/distccmon-gnome.glade: Merge back to DrawingArea in\n\t  1.1.2.14.  No other changes.\n\n2003-09-15 17:57  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Redraw the chart more frequently than we\n\t  reload the task list, so   that scrolling seems smoother.\n\n2003-09-15 17:32  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Fix horizontal gaps between stripes.\n\n2003-09-15 17:30  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Update every 200ms\n\n2003-09-15 17:23  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Draw tasks as multiple strips for each state.\n\n2003-09-15 17:18  Martin Pool <mbp@samba.org>\n\n\t* src/: mon-gnome.c, mon.h: Remove old GCs\n\n\t  * Make dcc_timeval_to_double global\n\n2003-09-15 17:14  Martin Pool <mbp@samba.org>\n\n\t* src/mon-fake.c: Split out code for fake monitor data; currently\n\t  not used.\n\n2003-09-15 17:02  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Partially merge some code from the old\n\t  GtkDrawingArea   implementation, so that we have better-factored\n\t  code for drawing   state strips.\n\n2003-09-15 16:50  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Fix unused params.\n\n2003-09-15 16:36  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.h: UNUSED macro should mangle the variable name to\n\t  make sure that   parameters marked UNUSED are not accidentally\n\t  used.\n\n2003-09-15 16:34  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Draw state color and filename from the history\n\t  record.\n\n2003-09-15 16:29  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Go back to a \"history\" property, being a\n\t  pointer to a list of tasks.\n\n2003-09-15 16:21  Martin Pool <mbp@samba.org>\n\n\t* src/: renderer.c, mon-gnome.c: Go back to a \"history\" property,\n\t  being a pointer to a list of tasks.\n\n2003-09-15 16:04  Martin Pool <mbp@samba.org>\n\n\t* src/where.c: Only enter BLOCKED state when we need to sleep\n\t  waiting for a slot.\n\n2003-09-15 16:03  Martin Pool <mbp@samba.org>\n\n\t* src/where.c: Sleep only 1s when bored.\n\n2003-09-15 16:02  Martin Pool <mbp@samba.org>\n\n\t* src/state.h: Expose client state.\n\n2003-09-15 16:01  Martin Pool <mbp@samba.org>\n\n\t* src/where.c: Fix code that caused us not to record the right\n\t  slot number for   local builds.  Remove old code left over from\n\t  transmission locks.\n\n2003-09-15 15:53  Martin Pool <mbp@samba.org>\n\n\t* src/: lock.c, mon-gnome.c, renderer.c, state.c, state.h, where.c:\n\t  * Store slot number as an integer in the state file.\n\n2003-09-15 15:51  Martin Pool <mbp@samba.org>\n\n\t* src/mon-text.c: Show slot number in text display.\n\n2003-09-15 15:33  Martin Pool <mbp@samba.org>\n\n\t* src/: mon-gnome.c, renderer.c, state.h: Change to storing slot\n\t  name in the state file so that we can easily\t work out which\n\t  tasks to draw on which line.\tUse a global variable\tto publish\n\t  that information to the cell renderer.\n\n2003-09-15 14:54  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Make the colored region fill the whole strip.\n\n2003-09-15 14:46  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Draw text for jobs vertically centered within\n\t  their rectangle.\n\n2003-09-15 00:41  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Draw text into the task blocks.\n\n2003-09-14 20:17  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Draw a border around the state rectangle, and\n\t  try to take the   padding into account when drawing.\n\n2003-09-14 19:48  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Cosmetic\n\n2003-09-14 19:24  Martin Pool <mbp@samba.org>\n\n\t* src/: mon-gnome.c, renderer.c: Renderer now draws process\n\t  states in something like the right color.\n\n2003-09-14 17:43  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Add get/set code for history property.\n\n2003-09-14 17:40  Martin Pool <mbp@samba.org>\n\n\t* src/: renderer.c, renderer.h: The implementation structures for\n\t  the cell renderer can be more   private.\n\n2003-09-14 17:38  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Add a \"task-history\" property to the\n\t  CellRenderer, currently storing   only an integer that will be\n\t  the current task's state.  We don't\thandle sets/gets on it yet.\n\n2003-09-14 17:33  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Allow sorting by host name.\n\n\t  * Make the tasks column in the list model store an integer, so\n\t  that we   can give it the current task's state.  Bind this cell\n\t  to the   \"task-history\" property of the renderer.\n\n2003-09-14 17:18  Martin Pool <mbp@samba.org>\n\n\t* src/: mon-gnome.c, mon-text.c, mon.c, mon.h, state.c, state.h:\n\t  Rename dcc_client_history to just dcc_history.\n\n2003-09-14 17:17  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Add release header.\n\n2003-09-14 17:09  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Doc\n\n2003-09-12 17:23  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.h: Add state field to _DccCellRendererChart\n\n2003-09-12 17:16  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Implement dcc_cell_renderer_chart_get_size\n\n2003-09-12 17:08  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Add a simpleminded implementation of\n\t  dcc_cell_renderer_chart_render() that can draw the chart cells as\n\t  black rectangles.\n\n2003-09-12 15:58  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Implement the get_property and set_property\n\t  methods.\n\n2003-09-12 15:49  Martin Pool <mbp@samba.org>\n\n\t* src/renderer.c: Fix call to g_type_register_static, which needs\n\t  a reference to the   parent type.\n\n2003-09-12 15:46  Martin Pool <mbp@samba.org>\n\n\t* src/: renderer.c, renderer.h: Add GTK Type boilerplate to\n\t  create a new GtkCellRenderer.\n\n2003-09-12 13:08  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, src/mon-gnome.c, src/renderer.c, src/renderer.h:\n\t  Put renderer interface into renderer.h\n\n2003-09-12 13:05  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, src/mon-gnome.c, src/renderer.c: Split out draft\n\t  GtkCellRenderer into its own file.\n\n2003-09-11 19:07  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Start adding a custom renderer.  Doesn't do\n\t  anything yet.\n\n2003-09-11 18:57  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: As an experiment, draw pixbufs into the task\n\t  cells using a GtkCellRendererPixmap, rather than text.  This\n\t  seems to be working OK.\n\n2003-09-11 18:47  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Put hostname and state into the tree model as\n\t  they're updated.\n\n2003-09-11 18:47  Martin Pool <mbp@samba.org>\n\n\t* gnome/distccmon-gnome.glade: Turn off rules_hint on table.\n\n2003-09-11 18:23  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Add a task column.\n\n2003-09-11 18:17  Martin Pool <mbp@samba.org>\n\n\t* gnome/distccmon-gnome.glade, src/mon-gnome.c: Move back towards\n\t  using a table, but now with space for our own   GtkCellRenderer\n\t  to draw a chart for each host slot.  At the moment   nothing is\n\t  in the table, just a column for host names.\n\n2003-09-11 17:44  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Cut out trace messages.\n\n2003-09-11 17:31  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Use real task information.\n\n\t  * Avoid coloring in areas that will be hidden by the border.\n\n\t  * Make the border the correct width.\n\n2003-09-11 17:15  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Draw text labels in black.\n\n\t  * Add a second file to the fake information.\n\n\t  * Set the start time on fake files.\n\n\t  * Draw all states for a file, using the old code but adapted to\n\t  drawing on the DrawingArea not a canvas.\n\n2003-09-11 15:19  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Draw tasks from a faked up list, rather than\n\t  just drawing arbitrary   rectangles.\n\n\t  * Redraw window using gtk_widget_queue_draw rather than Gdk.\n\t  This\t seems to fix a problem with redraw.  Perhaps we were\n\t  passing the\twrong rectangle.\n\n2003-09-11 15:02  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Set bar height from font height.\n\n\t  Now when you change the GNOME system font, all the bars redraw to\n\t  the right height.  That is so cool. :-)\n\n2003-09-10 22:51  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Cut out expose trace events.\n\n2003-09-10 22:48  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Stub out display of tasks so that we do get\n\t  something correctly\tdrawn again.\n\n2003-09-10 18:27  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, configure.ac: We need Pango as well for GNOME.\n\n2003-09-10 18:27  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Start adding support for fake monitor data for\n\t  testing.\n\n2003-09-10 17:03  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Draw tasks from the task list.\n\n2003-09-10 16:25  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Draw tasks by creating a new PangoLayout each\n\t  time using the GTK+\thelper.\n\n2003-09-10 16:13  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Draw labels onto file rectangles using Pango.\n\t  How cool!\n\n2003-09-10 15:27  Martin Pool <mbp@samba.org>\n\n\t* gnome/distccmon-gnome.glade: Put the chart drawing into a\n\t  GtkAlignment so that we can get a 6px   border around it.  It was\n\t  looking a bit cramped against the window border.\n\n2003-09-10 15:17  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Allocate GCs for all states.\n\n\t  * Draw nice gray outlines around all task rectangles.\n\n2003-09-10 15:05  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Invalidate/repaint the chart widget every time\n\t  we update the list.\n\n2003-09-10 15:00  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Factor out code for drawing state rectangles\n\t  (back) into\tdcc_draw_state_rect().\n\n\t  * Draw a whole array of dummy tasks.\n\n2003-09-10 14:55  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Allocate a graphics context in the appropriate\n\t  color and use it to\tdraw our dummy tasks.\n\n2003-09-10 14:32  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Stub for on_chart_drawing_expose().\n\n2003-09-10 14:19  Martin Pool <mbp@samba.org>\n\n\t* gnome/distccmon-gnome.glade, src/mon-gnome.c: Rework again:\n\n\t  * Start adding a 'key' window showing all the state colors.\n\n\t  * Go back to a DrawingArea for showing the chart (just\n\t  experimental).\n\n\t  * Delete table view from monitor.\n\n2003-09-09 18:17  Martin Pool <mbp@samba.org>\n\n\t* src/state.h: States must be listed in the order in which\n\t  they're run.\n\n2003-09-09 18:15  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Update every 150ms.\n\n\t  * Don't update the table.\n\n\t  * Don't include DONE tasks.\n\n\t  * Left-align filename.\n\n\t  * Don't outline tasks.\n\n\t  * Reorder color list for new state enum.\n\n\t  * Make sure all states are drawn properly.\n\n\t  This is leaking memory badly!\n\n2003-09-09 17:54  Martin Pool <mbp@samba.org>\n\n\t* src/compile.c: Record input filename as soon as it is known.\n\n2003-09-09 17:53  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Don't update state times that are already\n\t  recorded.\n\n2003-09-09 17:52  Martin Pool <mbp@samba.org>\n\n\t* src/where.c: Go into BLOCKED state at the start of the locking\n\t  phase, so that we   don't need to update repeatedly.\n\n2003-09-09 17:29  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Draw compilation tasks as striated rectangles.\n\t  Handling of DONE   tasks is not OK yet.\n\n2003-09-09 17:14  Martin Pool <mbp@samba.org>\n\n\t* src/: compile.c, distcc.c: Go into STARTUP state earlier in the\n\t  client process.\n\n2003-09-09 17:09  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Make sure the time is recorded even for state 0.\n\t  In fact, always   update the time whenever dcc_note_state() is\n\t  called.\n\n2003-09-09 16:57  Martin Pool <mbp@samba.org>\n\n\t* src/compile.c: Please do use DCC_STATE_STARTUP so that we know\n\t  when we started.\n\n2003-09-09 16:43  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Factor out code to create canvas items for the\n\t  task\n\n2003-09-09 16:21  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Color task bars according to current state.\n\n2003-09-08 21:12  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Check for glade definition file in ., ./gnome,\n\t  and DATADIR.\n\n2003-09-08 21:10  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Fix Make syntax\n\n2003-09-08 21:09  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Pass in DATADIR (e.g. /usr/local/share) when\n\t  installing.\n\n2003-09-08 18:11  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: More experiments in drawing.\n\n2003-09-08 18:10  Martin Pool <mbp@samba.org>\n\n\t* gnome/distccmon-gnome.glade: Try a Canvas in a GtkAlignment\n\n2003-09-08 17:47  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: More progress on canvas display\n\n\t  * Skip done tasks\n\n\t  * Show a nice vertical stack of running tasks, with the file name\n\t  in   each, and drawn with reasonable colors.\n\n2003-09-08 17:33  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: More progress on canvas display\n\n\t  * Put all bars into an overall group, so that they can all be\n\t  removed   every time we redraw.\n\n\t  * Create all process bars in one group each time.\n\n2003-09-08 16:39  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: More fixups for new state mechanism\n\n\t  * Convert state to a string before putting it into the table.\n\n\t  * Skip done tasks.\n\n2003-09-08 16:26  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Fix up (mostly renames) for new monitor\n\t  interface.\n\n2003-09-08 16:21  Martin Pool <mbp@samba.org>\n\n\t* src/mon-text.c: Skip display of Done tasks.\n\n2003-09-08 16:20  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Add missing state names.\n\n2003-09-08 16:19  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Make sure to actually record our state!\n\n2003-09-08 16:12  Martin Pool <mbp@samba.org>\n\n\t* src/: state.c, state.h, mon-text.c: Put state names into a new\n\t  function dcc_get_state_name, rather than   into constants.\n\n2003-09-08 16:08  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Processes that have exited can still be returned.\n\n2003-09-08 16:01  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Now that we're storing client history, it's OK to\n\t  return information   about processes that have already exited.\n\t  We just need to make sure   that their state gets set to\n\t  DCC_STATE_DONE.\n\n2003-09-08 15:59  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Put the client pid into the state file.\n\n2003-09-08 15:57  Martin Pool <mbp@samba.org>\n\n\t* src/: mon.c, state.c, state.h: Store a magic number in the\n\t  binary state file as a little   protection.\n\n\t  * Align magic and pid fields to unsigned longs.\n\n2003-09-08 15:51  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Store history of state transitions in the state\n\t  file.\n\n2003-09-08 15:48  Martin Pool <mbp@samba.org>\n\n\t* NEWS, src/clirpc.c, src/compile.c, src/distcc.c, src/mon-text.c,\n\t  src/mon.c, src/mon.h, src/remote.c, src/state.c, src/state.h,\n\t  src/where.c: Many changes to the representation of the client\n\t  state to make it easier to draw a history.\n\n\t  * State is now stored as a natively encoded struct in a disk\n\t  file,   rather than using our network protocol.  This is slightly\n\t  faster,   makes it easier to store multiple fields, and avoids\n\t  tangling up the   state file handling (which ought to ignore\n\t  errors) with network IO.\n\n\t  * States can now be written and read with one atomic IO, and we\n\t  don't   use temporary files.\n\n\t  * States are represented by integers not strings.\n\n\t  * There is space in the state file for a history of times that it\n\t    entered particular states.\n\n2003-09-08 15:29  Martin Pool <mbp@samba.org>\n\n\t* src/: util.h, util.c: Add strlcpy() if missing.\n\n2003-09-08 15:29  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Add check for strlcpy().\n\n2003-09-08 13:17  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Draw rectangles onto the canvas for each job\n\t  that's currently running.\n\n2003-09-08 13:11  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Set canvas scroll region at startup.\n\n2003-09-08 13:04  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Draw little rectangles into the chart from the\n\t  timer callback to   prove that we can.\n\n2003-09-08 12:51  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Prepare to update both table and chart from\n\t  one timer callback.\t Refactor into a part that gets the process\n\t  list and a new function    that updates the table model.\n\n\t  * Add some prototypes for functions called by glade to silence\n\t  compiler warnings.\n\n2003-09-08 12:45  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Rename setup_proc_view -> setup_table_view.\n\n\t  * Doc.\n\n2003-09-08 12:44  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Document design of chart view.\n\n2003-09-07 22:54  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Draw a rectangle onto the chart to see it\n\t  working.\n\n2003-09-07 19:09  Martin Pool <mbp@samba.org>\n\n\t* gnome/distccmon-gnome.glade: Swich from a DrawingArea to a\n\t  Canvas for the chart view.\n\n2003-09-07 19:04  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Swich from a DrawingArea to a Canvas for the\n\t  chart view.\n\n2003-09-07 19:03  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Move mon-gnome.c back to src/\n\n\t  * Pull out common list of packages to be passed to pkg-config.\n\n\t  * Compile mon-gnome.c separate from linking.\n\n2003-09-07 18:53  Martin Pool <mbp@samba.org>\n\n\t* gnome/mon-gnome.c, src/mon-gnome.c: Move mon-gnome.c back to\n\t  src/\n\n2003-09-05 17:01  Martin Pool <mbp@samba.org>\n\n\t* gnome/mon-gnome.c: Abort if we can't find the glade XML file.\n\n2003-09-04 15:20  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Clear up explanation of --allow option.\n\n\t  * Note that \"gcc hello.c\" is not split.\n\n2003-09-03 12:41  Martin Pool <mbp@samba.org>\n\n\t* src/where.c, NEWS: Sleep only one second when blocked, to try\n\t  to reduce idle time when   recovering from an overloaded period.\n\n2003-09-01 23:20  Martin Pool <mbp@samba.org>\n\n\t* gnome/: distccmon-gnome.glade, mon-gnome.c: Draw big black\n\t  ellipse in the chart area.\n\n2003-09-01 23:15  Martin Pool <mbp@samba.org>\n\n\t* gnome/: distccmon-gnome.glade, mon-gnome.c: Try to make View\n\t  menu items toggle each other.  Not working yet.\n\n2003-09-01 23:09  Martin Pool <mbp@samba.org>\n\n\t* gnome/distccmon-gnome.glade: Put tabs on the notebook just for\n\t  the time being.\n\n2003-09-01 23:02  Martin Pool <mbp@samba.org>\n\n\t* gnome/: distccmon-gnome.glade, mon-gnome.c: Flip between view\n\t  notebook pages when view menu items are chosen.\n\n2003-09-01 22:47  Martin Pool <mbp@samba.org>\n\n\t* gnome/: distccmon-gnome.glade, mon-gnome.c: Add a cute monkey\n\t  icon.\n\n\t  * Add an About box and hook it up appropriately.\n\n2003-09-01 22:23  Martin Pool <mbp@samba.org>\n\n\t* gnome/: distccmon-gnome.glade, mon-gnome.c: Hook up process\n\t  table to Glade.  The existing processs monitoring   functions are\n\t  now working again.\n\n2003-09-01 22:09  Martin Pool <mbp@samba.org>\n\n\t* gnome/: distccmon-gnome.glade, mon-gnome.c: Get load bar hooked\n\t  up for Gnome monitor.\n\n2003-09-01 22:04  Martin Pool <mbp@samba.org>\n\n\t* gnome/: distccmon-gnome.glade, mon-gnome.c: More merges of\n\t  monitor code into Glade interface.\n\n\t  * Set size of Glade window at startup and tweak scrollbars.\n\n2003-09-01 21:39  Martin Pool <mbp@samba.org>\n\n\t* gnome/mon-gnome.c: Merge in all the GNOME monitor code from\n\t  HEAD.\n\n2003-09-01 21:23  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Check for other necessary libraries when\n\t  --enable-gnome is given.\n\n\t  * Bump version.\n\n2003-09-01 13:33  Martin Pool <mbp@samba.org>\n\n\t* TODO: Idea of using gkrellm\n\n2003-09-01 11:30  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1: Add a little more explanation of --allow.\n\n2003-08-28 15:05  Martin Pool <mbp@samba.org>\n\n\t* TODO: Update for done tasks.\n\n2003-08-28 15:02  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1: Note that ccache can't be called from distccd.\n\n2003-08-28 14:33  Martin Pool <mbp@samba.org>\n\n\t* NEWS, man/distcc.1: Note about problems with no_subtree_check.\n\n2003-08-28 14:31  Martin Pool <mbp@samba.org>\n\n\t* TODO: DEPENDENCIES_OUTPUT is not directly a problem for distcc.\n\n2003-08-28 12:48  Martin Pool <mbp@samba.org>\n\n\t* cases/mmaptest.c: Bug has been isolated; no longer need this\n\t  test case.\n\n2003-08-28 12:45  Martin Pool <mbp@samba.org>\n\n\t* cases/mmaptest.c: More tests for NFS bug.\n\n2003-08-26 15:56  Martin Pool <mbp@samba.org>\n\n\t* cases/mmaptest.c: Do the mmapped IO in a child process, to be\n\t  more similar to ccache/distcc.\n\n2003-08-26 12:01  Martin Pool <mbp@samba.org>\n\n\t* cases/: .cvsignore, mmaptest.c: Add test for mmap-on-NFS\n\t  problems\n\n2003-08-25 16:06  Martin Pool <mbp@samba.org>\n\n\t* src/pump.c: Doc\n\n2003-08-25 12:48  Martin Pool <mbp@samba.org>\n\n\t* src/: arg.c, compile.c, compress.c, serve.c: Patch from Wayne\n\t  Davison to fix Solaris warnings\n\n2003-08-25 11:55  Martin Pool <mbp@samba.org>\n\n\t* src/: compress.c, io.c, io.h, pump.c: Add DISTCC_MMAP option,\n\t  defaults to on.  May be useful in working   around bugs with mmap\n\t  on NFS.\n\n2003-08-25 11:13  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1, man/distccd.1, NEWS: Document DISTCC_MMAP.\n\n2003-08-15 14:17  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, gnome/distccmon-gnome.glade,\n\t  gnome/distccmon-gnome.gladep, gnome/mon-gnome.c: Initial stub\n\t  version of the monitor.\n\n2003-08-15 14:16  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Move gnome monitor into its own directory.\n\n2003-08-14 18:12  Martin Pool <mbp@samba.org>\n\n\t* TODO, gnome/distccmon-gnome.glade, gnome/distccmon-gnome.gladep,\n\t  gnome/mon-gnome.c: Start doing a better GNOME monitor.\n\n2003-08-13 13:05  Martin Pool <mbp@samba.org>\n\n\t* TODO: Note problem with DEPENDENCIES_OUTPUT.\n\n2003-08-13 12:57  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Bump version.\n\n2003-08-12 13:34  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Update manpage date.\n\n2003-08-12 13:27  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py: Set DISTCC_DIR when running tests to give\n\t  better isolation between   tests and anything else that might be\n\t  happening on the machine.\n\n2003-08-12 13:18  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: make distcheck ought to run maintainer-check and\n\t  also check that the directory can be cleaned.\n\n2003-08-12 13:10  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Note \"make clean\" problem is fixed.\n\n2003-08-12 13:09  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Bump version to 2.10.1\n\n2003-08-12 11:42  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Fix \"make clean\" problem in lzo.  Reported by Lisa\n\t  Marie Seelye.\n\n2003-08-11 16:09  Martin Pool <mbp@samba.org>\n\n\t* cases/hello.c: Make hello actually say hello\n\n2003-08-11 16:07  Martin Pool <mbp@samba.org>\n\n\t* distcc-check: Allow the compiler to be changed.\n\n2003-08-11 16:05  Martin Pool <mbp@samba.org>\n\n\t* NEWS, configure.ac: Prepare for release.\n\n2003-08-11 15:51  Martin Pool <mbp@samba.org>\n\n\t* TODO: Suggestions from Lisa on the monitor.\n\n2003-08-11 15:46  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Fix from wayned for crash when DISTCC_DIR is\n\t  set.\n\n2003-08-11 15:43  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Doc.\n\n2003-08-11 15:40  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py: [no log message]\n\n2003-08-11 15:33  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-08-11 15:32  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Corrections from Frerich Raabe.\n\n2003-08-11 15:18  Martin Pool <mbp@samba.org>\n\n\t* src/exec.c, NEWS: For simple compile failures, don't say \"with\n\t  exit code 1\".\n\n2003-08-11 15:15  Martin Pool <mbp@samba.org>\n\n\t* src/exec.c: Doc.\n\n2003-08-07 15:42  Martin Pool <mbp@samba.org>\n\n\t* TODO: [no log message]\n\n2003-08-05 12:09  Martin Pool <mbp@samba.org>\n\n\t* src/exitcode.h: Add include guard.\n\n2003-08-05 11:56  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Remove roadmap page, because it's now largely\n\t  complete.\n\n2003-08-05 11:53  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Make sure examples get installed into doc/example.\n\n2003-08-05 11:48  Martin Pool <mbp@samba.org>\n\n\t* doc/example-init, doc/example/init, doc/example/init-suse,\n\t  doc/example/logrotate, doc/example/xinetd, Makefile.in,\n\t  doc/example.xinetd: Move all example files into doc/example.\n\n2003-07-25 17:34  Martin Pool <mbp@samba.org>\n\n\t* doc/results.txt: [no log message]\n\n2003-07-25 17:25  Martin Pool <mbp@samba.org>\n\n\t* bench/Summary.py: Show summary table properly.\n\n2003-07-25 15:50  Martin Pool <mbp@samba.org>\n\n\t* src/state.c, NEWS: Roll back to writing state into temporary\n\t  files.\n\n2003-07-25 15:36  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py: Doc\n\n2003-07-25 15:35  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py: If the daemon fails to bind to the desired\n\t  port, keep trying other ones.\n\n2003-07-25 15:21  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Store state files by writing and rewriting them directly,\n\t  rather   than renaming every time.  That was starting to take a\n\t  fair fraction   of our syscalls.\n\n2003-07-25 15:15  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Fix state file names.\n\n2003-07-25 15:14  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Store state files by writing and rewriting them\n\t  directly, rather   than renaming every time.\tThat was starting\n\t  to take a fair fraction   of our syscalls.\n\n2003-07-25 14:56  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-07-25 14:53  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Make temp filenames more random.\n\n2003-07-25 14:51  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Check return code when closing the temporary\n\t  file after creating it.\n\n2003-07-25 14:47  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: O_NOFOLLOW is not needed with O_EXCL and\n\t  O_CREAT, because they never\tfollow symlinks.\n\n\t  * Doc.\n\n2003-07-25 14:39  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: dcc_make_tmpnam: Fix the case where the chosen\n\t  name already exists.\n\n2003-07-25 14:34  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Create temporary files in a loop, with O_EXCL\n\t  and O_NOFOLLOW to try   to guard against collision with existing\n\t  files or links.\n\n2003-07-25 14:15  Martin Pool <mbp@samba.org>\n\n\t* src/: cpp.c, serve.c: Better template names for temporary\n\t  files.\n\n2003-07-25 14:08  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Check for gettimeofday\n\n2003-07-25 13:52  Martin Pool <mbp@samba.org>\n\n\t* src/: tempfile.c, tempfile.h: dcc_get_top_dir can be static,\n\t  and does not need to return a   newly-allocated string.\n\n2003-07-25 13:32  Martin Pool <mbp@samba.org>\n\n\t* src/: lock.c, mon.c, state.c, tempfile.c, tempfile.h: Make sure\n\t  lock dir and state dir are only created the first time we   use\n\t  them.\n\n2003-07-25 13:22  Martin Pool <mbp@samba.org>\n\n\t* NEWS, src/lock.c, src/mon.c, src/state.c, src/tempfile.c,\n\t  src/tempfile.h: Temporary directory is now gone.  Working files\n\t  are created directly\t under $TMPDIR, as they are for gcc.  Lock\n\t  files and state files are   stored under DISTCC_DIR.\n\n2003-07-25 13:18  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Temporary directory is no longer used.\n\n2003-07-25 12:35  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: cleanup.c is also needed by monitors.\n\n2003-07-25 11:53  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Daemon runs from root directory, not the\n\t  temporary directory.\n\n\t  * Doc.\n\n2003-07-25 11:51  Martin Pool <mbp@samba.org>\n\n\t* src/daemon.c, src/tempfile.h, NEWS: Daemon runs from root\n\t  directory, not the temporary directory.\n\n2003-07-24 18:58  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Doc\n\n2003-07-24 18:46  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Remove dead fifo code.\n\n2003-07-24 18:45  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, src/cleanup.c, src/tempfile.c, src/tempfile.h:\n\t  Factor out tempfile cleanup into a new file cleanup.c\n\n2003-07-24 18:43  Martin Pool <mbp@samba.org>\n\n\t* patches/ccache-uncached-err.diff: Patch to ccache to avoid\n\t  caching network errors.\n\n2003-07-24 18:20  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Note about tmpdir fixes.\n\n2003-07-24 18:17  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: dcc_get_tempdir: Make sure that if we fail the\n\t  first time we don't\tpass back a bogus directory on future\n\t  attempts.\n\n2003-07-24 18:12  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Check up front in the client that the working\n\t  directory can be   created, otherwise we get a whole pile of\n\t  errors when it fails.\n\n2003-07-24 17:58  Martin Pool <mbp@samba.org>\n\n\t* src/: cpp.c, lock.c, lock.h, serve.c, state.c, tempfile.c,\n\t  tempfile.h, timefile.c: Change temporary filename handling to\n\t  consistently use error returns   and check them.\n\n2003-07-23 17:19  Martin Pool <mbp@samba.org>\n\n\t* src/: state.c, tempfile.c, tempfile.h: dcc_make_dir: Rename to\n\t  dcc_safe_mkdir.  Check the ownership of the\tdirectory after it\n\t  is created to help guard against an attacker\t creating the\n\t  directory.\n\n2003-07-23 17:18  Martin Pool <mbp@samba.org>\n\n\t* TODO: [no log message]\n\n2003-07-23 16:56  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Doc.\n\n2003-07-23 16:11  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Don't check that TMPDIR starts with '/'.\n\n\t  * dcc_setup_tempdir can be static.\n\n2003-07-23 16:11  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.h: dcc_setup_tempdir can be static.\n\n2003-07-23 16:09  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Don't check that TMPDIR starts with '/'.\n\n2003-07-22 18:02  Martin Pool <mbp@samba.org>\n\n\t* src/pump.c: Doc.\n\n2003-07-22 17:36  Martin Pool <mbp@samba.org>\n\n\t* src/lock.c: Be strict about enums.\n\n2003-07-22 17:35  Martin Pool <mbp@samba.org>\n\n\t* src/: clirpc.c, rpc.c, rpc.h: waitstatus is not unsigned.\n\n2003-07-22 17:34  Martin Pool <mbp@samba.org>\n\n\t* src/filename.c: dcc_output_from_source: Remove dead variable.\n\n2003-07-22 17:33  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Remove doubled CFLAG.\n\n2003-07-22 17:30  Martin Pool <mbp@samba.org>\n\n\t* src/exec.c: waitstatus is not unsigned.\n\n2003-07-22 17:25  Martin Pool <mbp@samba.org>\n\n\t* src/: exec.h, distcc.h: waitstatus is not unsigned.\n\n2003-07-22 17:24  Martin Pool <mbp@samba.org>\n\n\t* src/compile.c: Signedness warning correction; reported by\n\t  Dimitri Papadopoulos.\n\n2003-07-22 17:21  Martin Pool <mbp@samba.org>\n\n\t* src/remote.c: timeval.h is not needed.\n\n2003-07-22 17:19  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Snip out dcc_mkfifo\n\n2003-07-22 16:58  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-07-22 16:57  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Document UNCACHED_ERR_FD.\n\n2003-07-22 16:55  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Note that ccache doesn't handle compilation from\n\t  .i files.\n\n2003-07-22 16:47  Martin Pool <mbp@samba.org>\n\n\t* src/daemon.c: Factor out code for setting the daemon's path.\n\n\t  * Show path for daemon at startup.\n\n2003-07-22 16:43  Martin Pool <mbp@samba.org>\n\n\t* src/daemon.c: daemon/main: The daemon no longer trims its path,\n\t  because it will   emit warnings if a masqueraded directory is\n\t  detected.\n\n2003-07-22 16:42  Martin Pool <mbp@samba.org>\n\n\t* src/util.c: dcc_trim_path: This is no longer called by the\n\t  server, only by the\tclient.  So remove support for detecting\n\t  ccache, and require the   compiler name to always be specified.\n\n2003-07-22 16:38  Martin Pool <mbp@samba.org>\n\n\t* TODO: [no log message]\n\n2003-07-22 16:35  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Remove duplicated dcc_find_basename().\n\n2003-07-22 14:16  Martin Pool <mbp@samba.org>\n\n\t* distcc-check: Doc\n\n2003-07-22 14:13  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Default niceness is 5.\n\n2003-07-22 14:11  Martin Pool <mbp@samba.org>\n\n\t* src/: daemon.c, dopt.c, dopt.h, util.c: Increment niceness by 5\n\t  by default.\n\n2003-07-22 14:08  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1: Clarify that niceness is an increment not an\n\t  absolute value.\n\n\t  * Default niceness is 5.\n\n2003-07-22 13:58  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Nasty note about SCO.\n\n2003-07-22 13:53  Martin Pool <mbp@samba.org>\n\n\t* doc/results.txt: SSH results.\n\n2003-07-22 12:43  Martin Pool <mbp@samba.org>\n\n\t* README.packaging: More suggestions about cross compiling from\n\t  Dag Wieers.\n\n2003-07-21 17:37  Martin Pool <mbp@samba.org>\n\n\t* src/serve.c: dcc_run_job: Before executing the compiler, check\n\t  the server's path   and emit a warning if it looks like a symlink\n\t  to distcc.\n\n2003-07-21 17:36  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Note about finding the right compiler on the volunteer.\n\n2003-07-21 17:14  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Doc.\n\n2003-07-21 16:35  Martin Pool <mbp@samba.org>\n\n\t* src/: distcc.c: Doc.\n\n2003-07-21 16:31  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: distcc/main: Rename variable.\n\n2003-07-21 16:25  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: dcc_get_my_basename: Rename to dcc_find_basename,\n\t  which is a better   name, and just make it work on a string,\n\t  rather than looking in an   argv.  This function is really no\n\t  longer distcc-specific.\n\n2003-07-21 16:06  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Bump version.\n\n2003-07-21 15:50  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Remove PP\n\n2003-07-21 15:24  Martin Pool <mbp@samba.org>\n\n\t* configure.ac, NEWS: 2.9 release.\n\n2003-07-21 15:14  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Make sure GNOME_BIN actually gets set.\n\n2003-07-21 15:10  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: lzoconf.h needs to be distributed.\n\n2003-07-21 15:07  Martin Pool <mbp@samba.org>\n\n\t* doc/results.txt: [no log message]\n\n2003-07-21 14:59  Martin Pool <mbp@samba.org>\n\n\t* src/util.c, NEWS: When trimming the path to avoid recursive\n\t  invocations, stop as soon   as we find one non-symlink compiler.\n\t  This should help avoid the   path getting trimmed down far too\n\t  much on the server.  Patch from   Wayne Davison.\n\n2003-07-21 14:49  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1: Suggest inetd limit be raised to 6000\n\n2003-07-21 14:42  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-07-21 14:40  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: dcc_compress_lzo1x_alloc can be static.\n\n2003-07-21 14:20  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.h: dcc_compress_lzo1x_alloc can be static.\n\n2003-07-21 12:45  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Note about documentation.\n\n2003-07-21 12:35  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: Trace message for use of mmap.\n\n2003-07-21 12:31  Martin Pool <mbp@samba.org>\n\n\t* src/pump.c: Trace message for receipt using mmap.\n\n2003-07-21 12:23  Martin Pool <mbp@samba.org>\n\n\t* src/daemon.c: Tweak daemon startup message.\n\n2003-07-21 12:21  Martin Pool <mbp@samba.org>\n\n\t* src/daemon.c: Show gnu-host in daemon startup message.\n\n2003-07-21 12:13  Martin Pool <mbp@samba.org>\n\n\t* src/: daemon.c, daemon.h, dparent.c: Factor out code to show\n\t  daemon startup message, and include the   daemon mode in it.\n\n2003-07-21 12:08  Martin Pool <mbp@samba.org>\n\n\t* TODO: [no log message]\n\n2003-07-21 12:02  Martin Pool <mbp@samba.org>\n\n\t* src/hosts.c: Update host grammar from manpage.\n\n2003-07-21 12:01  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Grammar fixes:\n\n\t  * Be consistent about quoting.  * Add LOCAL_HOST.  * Make USER\n\t  option in SSH production.\n\n2003-07-21 11:59  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Add ccache URL\n\n\t  * Cleanup\n\n2003-07-21 11:56  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1: Some cleanups from Tim and myself.\n\n2003-07-21 11:42  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Many suggestions from Tim:\n\n\t  * Add quickstart section.\n\n\t  * Consistent capitalization of \"make\"\n\n\t  * Grammar/readability fixes.\n\n\t  * Move up section about ccache with distcc\n\n\t  * Clear up host grammar section.\n\n\t  * What to do about broken makefiles.\n\n2003-07-21 11:21  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Note mmap support.\n\n\t  * Delete trailing whitespace.\n\n2003-07-21 11:17  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Add information about compression.\n\n2003-07-18 16:50  Martin Pool <mbp@samba.org>\n\n\t* src/pump.c: dcc_r_bulk_plain: For uncompressed data coming in,\n\t  we know the exact   right length and so we only need to truncate\n\t  the file once.\n\n2003-07-18 16:48  Martin Pool <mbp@samba.org>\n\n\t* src/pump.c: Receive bulk data by writing into an mmaped file,\n\t  or otherwise\t reading in and writing out one big buffer.\n\n2003-07-18 16:41  Martin Pool <mbp@samba.org>\n\n\t* doc/results.txt: [no log message]\n\n2003-07-18 16:39  Martin Pool <mbp@samba.org>\n\n\t* src/pump.c: Start implementing dcc_r_bulk_plain\n\n2003-07-18 16:32  Martin Pool <mbp@samba.org>\n\n\t* src/: bulk.c, clirpc.c, io.c, io.h, pump.c: Rename dcc_pump_in\n\t  for consistency.\n\n\t  * Doc.\n\n2003-07-18 16:21  Martin Pool <mbp@samba.org>\n\n\t* src/: bulk.c, compress.c, compress.h, distcc.h, pump.c: Make\n\t  compression function naming consistent.\n\n\t  * Remove compress.h\n\n2003-07-18 16:00  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py: Fix silly error in ParseHostSpec_Case.\n\n2003-07-18 15:59  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py: Fix VersionOption_Case for new version\n\t  string that mentions two   protocols.\n\n2003-07-18 15:58  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py: Add partial test for parsing host\n\t  specifications with the LZO\toption.\n\n2003-07-18 15:57  Martin Pool <mbp@samba.org>\n\n\t* src/hosts.c: ',' should also terminate TCP hostnames.\n\n2003-07-18 15:48  Martin Pool <mbp@samba.org>\n\n\t* NEWS: More about compression.\n\n2003-07-18 15:45  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Add support for \",lzo\" option at the end of host\n\t  specifications.\n\n2003-07-18 15:43  Martin Pool <mbp@samba.org>\n\n\t* src/hosts.c: ',' should also terminate SSH hostnames.\n\n2003-07-18 15:42  Martin Pool <mbp@samba.org>\n\n\t* src/hosts.c: Add support for \",lzo\" option at the end of host\n\t  specifications.\n\n2003-07-18 15:02  Martin Pool <mbp@samba.org>\n\n\t* doc/results.txt: Results from 3.4 snapshot.\n\n2003-07-18 13:16  Martin Pool <mbp@samba.org>\n\n\t* src/: rpc.h, rpc.c: Remove obsolete dcc_compr_for_proto()\n\n2003-07-18 13:15  Martin Pool <mbp@samba.org>\n\n\t* src/: clirpc.c, distcc.h, hosts.c, hosts.h, lock.c, remote.c:\n\t  Store both protocol and compression method in the host\n\t  definition.\t Simpler than converting between them all the way\n\t  through.\n\n2003-07-18 12:21  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.h: Reorder enums to top.\n\n2003-07-18 12:18  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.h: Make dcc_compress values not be 0-based.\n\n2003-07-18 12:01  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, src/clirpc.c, src/clirpc.h, src/distcc.h,\n\t  src/remote.c: Remove clirpc.h.\n\n2003-07-18 11:35  Martin Pool <mbp@samba.org>\n\n\t* src/: clirpc.c, distcc.h, help.c, hosts.h, lock.c, mon-gnome.c,\n\t  mon-text.c, mon.c, remote.c, rpc.c, rpc.h, serve.c, srvrpc.c,\n\t  state.c: Start adding support for talking either protocol 1 or\n\t  2.  Store   protocol in host specification and propagate it\n\t  through relevant functions.\n\n2003-07-17 22:09  Martin Pool <mbp@samba.org>\n\n\t* src/hosts.c: Document upcoming compression option for host\n\t  specifications.\n\n2003-07-17 22:01  Martin Pool <mbp@samba.org>\n\n\t* doc/protocol-2.txt: [no log message]\n\n2003-07-17 22:00  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Include description of protocol version 2.\n\n2003-07-17 21:59  Martin Pool <mbp@samba.org>\n\n\t* doc/protocol-2.txt: Description of protocol version 2.\n\n2003-07-17 17:18  Martin Pool <mbp@samba.org>\n\n\t* src/bulk.c: Doc.\n\n2003-07-17 17:16  Martin Pool <mbp@samba.org>\n\n\t* src/: compile.c, compile.h, remote.c: Pass source filename to\n\t  dcc_compile_remote and set the state file   from there so that we\n\t  can get the filename in the first status   message.\n\n2003-07-17 17:11  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: Doc.\n\n\t  * Only use mmap for buffers larger than 64k.\n\n2003-07-17 17:04  Martin Pool <mbp@samba.org>\n\n\t* TODO: [no log message]\n\n2003-07-17 17:03  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Add hostspec grammar\n\n\t  * Some formatting changes.\n\n2003-07-17 17:00  Martin Pool <mbp@samba.org>\n\n\t* src/hosts.c: Fix grammar nit.\n\n2003-07-17 16:39  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1, src/dopt.c: Document --wizard.\n\n2003-07-17 16:35  Martin Pool <mbp@samba.org>\n\n\t* NEWS, man/distccd.1: Change to starting 2+NCPUS jobs by\n\t  default.\n\n2003-07-17 16:31  Martin Pool <mbp@samba.org>\n\n\t* src/dparent.c: Change to starting 2+NCPUS jobs by default.\n\n2003-07-17 16:24  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Clean lzo/ directory.\tPatch from Wayne Davison.\n\n2003-07-17 15:52  Martin Pool <mbp@samba.org>\n\n\t* distcc-check: Doc\n\n2003-07-17 10:37  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1: There was some confusion about the meaning of\n\t  \"proportional to\" in\t the description of -j.  Now make it\n\t  clearer that the number of jobs   is higher than the number of\n\t  CPUs.\n\n2003-07-16 12:33  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Remove the \"tested\" page.\n\n2003-07-15 19:00  Martin Pool <mbp@samba.org>\n\n\t* src/mapfile.c: Remove  mapfile; mmap is now called directly.\n\n2003-07-15 18:51  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: Quieten warning.\n\n2003-07-15 18:50  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: Doc\n\n\t  * dcc_receive_lzo1x: Pass the right value to munmap().\n\n2003-07-15 18:47  Martin Pool <mbp@samba.org>\n\n\t* src/bulk.c: dcc_r_file: We need to open the file read/write,\n\t  not just wronly, to\tbe able to mmap it.\n\n2003-07-15 18:45  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: dcc_compress_lzo1x_file: Make sure to return an\n\t  error if the munmap\tfailed, because we might not have managed\n\t  to write everything out.\n\n\t  * dcc_receive_lzo1x: First cut at decompressing into a writable\n\t  mmap'd buffer.\n\n2003-07-15 18:23  Martin Pool <mbp@samba.org>\n\n\t* src/compile.c: Disable \"startup\" state.\n\n2003-07-15 18:21  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: dcc_compress_lzo1x_file: Try to use mmap() to\n\t  read the input file if   mmap() is available.  If not, fall back\n\t  to using malloc and read().\n\n2003-07-15 18:20  Martin Pool <mbp@samba.org>\n\n\t* doc/results.txt: Results from compilation on 10Mbps network.\n\n2003-07-15 18:18  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: mapfile is no longer needed -- we just mmap as\n\t  necessary.\n\n2003-07-15 18:10  Martin Pool <mbp@samba.org>\n\n\t* configure.ac, NEWS: Don't check for GTK+ unless --enable-gnome\n\t  is requested, because   it's a needless portability risk on\n\t  platforms that don't have it.\n\n2003-07-15 18:04  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Check for mmap()\n\n2003-07-15 18:02  Martin Pool <mbp@samba.org>\n\n\t* src/: bulk.c, compress.c, compress.h: Factor out code to\n\t  compress from a file.\n\n2003-07-15 17:57  Martin Pool <mbp@samba.org>\n\n\t* src/bulk.c: dcc_calc_rate: Guard against division by zero\n\t  (which never seems to   happen).\n\n\t  * Doc.\n\n2003-07-15 17:51  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Note compression.\n\n2003-07-15 17:40  Martin Pool <mbp@samba.org>\n\n\t* src/: distcc.h, dopt.h, srvnet.c: Clean up dopt headers.\n\n2003-07-15 17:38  Martin Pool <mbp@samba.org>\n\n\t* doc/results.txt: Notes on testing compression.\n\n2003-07-15 17:23  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.h: Change protocol version to 2 so that\n\t  incompatibilities with old   servers are trapped.\n\n\t    Eventually we need to switch intelligently.\n\n2003-07-15 17:12  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Make columns in the GNOME monitor resizable,\n\t  as well as auto-resizing.\n\n2003-07-15 11:32  Martin Pool <mbp@samba.org>\n\n\t* src/bulk.c: dcc_r_file: Doc.  Fix uninitialized variable for\n\t  0-length files.\n\n2003-07-14 22:02  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: Show decompression ratio as small:large.\n\n2003-07-14 21:51  Martin Pool <mbp@samba.org>\n\n\t* src/pump.c: dcc_pump_in: Handle 0-byte optimization too.\n\n2003-07-14 21:45  Martin Pool <mbp@samba.org>\n\n\t* src/bulk.c: Add optimization of not doing any compression for\n\t  0-byte files.\n\n2003-07-14 21:39  Martin Pool <mbp@samba.org>\n\n\t* src/pump.c: dcc_pump_out: No longer needed because dcc_x_file\n\t  now switches\t based on compression.\n\n\t  * Fix parameter ordering bug for dcc_pump_in\n\n2003-07-14 21:38  Martin Pool <mbp@samba.org>\n\n\t* src/io.h: compress.h: New header.\n\n2003-07-14 21:38  Martin Pool <mbp@samba.org>\n\n\t* src/dopt.c: Fix --wizard.\n\n2003-07-14 21:38  Martin Pool <mbp@samba.org>\n\n\t* src/: compress.c, compress.h: dcc_compress_lzo1x_alloc: New\n\t  function to just compress in memory\twithout doing IO.\n\n\t  * compress.h: New header.\n\n2003-07-14 21:36  Martin Pool <mbp@samba.org>\n\n\t* src/bulk.c: New dcc_x_file_lzo1x: Read in the file, compress\n\t  it, and then write   out that buffer.  This has to be done in a\n\t  single level because the   token has to include the compressed\n\t  length.\n\n\t  * dcc_x_file: Handle compression.\n\n2003-07-14 21:24  Martin Pool <mbp@samba.org>\n\n\t* src/dopt.c: Rename to --wizard.\n\n2003-07-14 21:22  Martin Pool <mbp@samba.org>\n\n\t* src/dopt.c: Add -X, --maintainer option that adds all settings\n\t  for running under gdb.\n\n2003-07-14 18:10  Martin Pool <mbp@samba.org>\n\n\t* src/: bulk.c, bulk.h, clirpc.c, serve.c: dcc_x_file doesn't\n\t  need to return the file size anymore.\n\n2003-07-14 18:07  Martin Pool <mbp@samba.org>\n\n\t* src/: bulk.c, bulk.h, remote.c, serve.c: Set default\n\t  compression to LZO1X -- which is not working now, and   breaks\n\t  compatibility\n\n\t  * Start factoring out code for receiving a token and file into\n\t  dcc_r_token_file\n\n2003-07-14 17:55  Martin Pool <mbp@samba.org>\n\n\t* src/: bulk.c, bulk.h, clirpc.c, clirpc.h, remote.c, serve.c:\n\t  Propagate compression setting through all routines.\n\n2003-07-14 17:49  Martin Pool <mbp@samba.org>\n\n\t* src/: bulk.c, bulk.h, clirpc.c, compress.c, distcc.h, io.h,\n\t  pump.c: Start moving bulk data receipt through dcc_pump_in,\n\t  which does   decompression if needed.  Remove null\n\t  dcc_r_file_body.\n\n2003-07-14 17:43  Martin Pool <mbp@samba.org>\n\n\t* src/: compress.c, io.h, pump.c: Rename compression functions to\n\t  lzo_1x, the generic name for the   algorithm family we're using.\n\n2003-07-14 17:38  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: Doc\n\n2003-07-14 17:35  Martin Pool <mbp@samba.org>\n\n\t* doc/results.txt: [no log message]\n\n2003-07-14 17:35  Martin Pool <mbp@samba.org>\n\n\t* man/.cvsignore: Ignore built HTML files.\n\n2003-07-14 16:56  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1: [no log message]\n\n2003-07-14 16:52  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Don't install README.packaging or SuSE example\n\t  init script.\n\n2003-07-14 16:49  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Strip out linuxdoc, because all the information\n\t  there has been   merged into the manpages.\n\n2003-07-14 16:47  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Add upload-man target to make the manual available\n\t  on the web page.\n\n\t  * There's no need to install README.popt.\n\n\t  * Fix targets to build html from troff.\n\n2003-07-14 16:44  Martin Pool <mbp@samba.org>\n\n\t* man/: distccd.1, distcc.1: Credit other people.\n\n2003-07-14 16:35  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1: Document DISTCC_SAVE_TEMPS\n\n2003-07-14 16:34  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1: Merge option descriptions and other things.\n\n2003-07-14 16:15  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Merge more information.\n\n2003-07-14 15:50  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1: Merge more information.\n\n2003-07-14 15:44  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Merge more information.\n\n2003-07-14 15:16  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Merge more information.\n\n2003-07-14 14:54  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Add targets to build HTML from manpages.\n\n2003-07-14 14:47  Martin Pool <mbp@samba.org>\n\n\t* man/distccd.1: Start adding more details about the server.\n\n2003-07-14 14:46  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Merge stuff about cross-compiling.\n\n\t  * More about security.\n\n2003-07-14 14:41  Martin Pool <mbp@samba.org>\n\n\t* INSTALL: More about how to install distccd.\n\n2003-07-14 14:33  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: More manpage documentation.\n\n2003-07-14 13:45  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Put a lot more useful information into the manual\n\t  page.\n\n2003-07-14 12:42  Martin Pool <mbp@samba.org>\n\n\t* linuxdoc/distcc.sgml: Information on reporting bugs has been\n\t  merged into a separate file.\n\n2003-07-14 12:35  Martin Pool <mbp@samba.org>\n\n\t* doc/reporting-bugs.txt: Merge more information on reporting\n\t  problems from the SGML manual.\n\n2003-07-14 12:32  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Include information on how to report bugs\n\t  effectively.\n\n2003-07-14 12:31  Martin Pool <mbp@samba.org>\n\n\t* doc/reporting-bugs.txt: Information on how to report bugs\n\t  effectively.\n\n2003-07-14 12:20  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Include example-init in package.\n\n2003-07-14 12:14  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Increase allowable age of state files to 300s.\n\n2003-07-14 12:09  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: mon-notify.o is not currently used by the\n\t  monitors.\n\n2003-07-14 11:53  Martin Pool <mbp@samba.org>\n\n\t* bench/compiler.py: Don't put commas in path names because they\n\t  can cause trouble with   some linker command.\n\n2003-07-14 10:51  Martin Pool <mbp@samba.org>\n\n\t* src/: mon-gnome.c, mon-notify.c, mon.c: Fix header ordering.\n\n2003-07-14 10:47  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Remove standard GTK test macros because we don't\n\t  use them.\n\n2003-07-13 18:40  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Clean up files which were duplicated in dist_files\n\t  and pkgdoc_DOCS.\n\n2003-07-13 18:09  Martin Pool <mbp@samba.org>\n\n\t* patches/.cvsignore: Add built program.\n\n2003-07-13 18:08  Martin Pool <mbp@samba.org>\n\n\t* src/: distcc.h, h_argvtostr.c, h_exten.c, h_issource.c,\n\t  h_scanargs.c, h_strip.c, io.h, mon-text.c, state.c: Clean up\n\t  header inclusions.\n\n2003-07-13 18:07  Martin Pool <mbp@samba.org>\n\n\t* src/arg.c: Doc\n\n2003-07-13 17:57  Martin Pool <mbp@samba.org>\n\n\t* TODO: [no log message]\n\n2003-07-13 17:55  Martin Pool <mbp@samba.org>\n\n\t* DEPENDENCIES, Makefile.in: Remove DEPENDENCIES file, which is\n\t  being merged into INSTALL.\n\n2003-07-13 17:30  Martin Pool <mbp@samba.org>\n\n\t* INSTALL: Rewrite installation instructions to be specific to\n\t  distcc and to   cover all the main steps.\n\n2003-07-13 12:44  Martin Pool <mbp@samba.org>\n\n\t* configure.ac, NEWS: Autodetect the right behaviour for\n\t  --enable-gnome:\n\n\t    If explicitly enabled, insist that the GTK+ libraries be\n\t  present.\n\n\t    If explicitly disabled, don't even look for them.\n\n\t    Otherwise, build the GTK+ monitor if possible.\n\n2003-07-12 22:57  Martin Pool <mbp@samba.org>\n\n\t* man/distcc.1: Correction for duplicated word by Tobias\n\t  Stoeckmann.\n\n2003-07-12 17:04  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py: Doc.\n\n2003-07-12 16:57  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py: Fix up checks for remote assembly listings:\n\t  we *can* distribute\tthese, unless a filename is specified.\n\n2003-07-12 16:52  Martin Pool <mbp@samba.org>\n\n\t* src/arg.c, NEWS: Add checks for -Wa options that produce an\n\t  assembler listing file.\n\n2003-07-12 11:45  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py: Add tests for new -o and -Wa,-al handling.\n\n2003-07-12 01:31  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: Add implementation of LZO decompression.\n\n2003-07-12 01:30  Martin Pool <mbp@samba.org>\n\n\t* TODO: [no log message]\n\n2003-07-12 00:58  Martin Pool <mbp@samba.org>\n\n\t* src/arg.c: Doc.\n\n2003-07-11 18:21  Martin Pool <mbp@samba.org>\n\n\t* bench/Build.py: Make sure full paths are generated for log\n\t  files.\n\n\t  * Add support for programs that use C++.\n\n2003-07-11 18:20  Martin Pool <mbp@samba.org>\n\n\t* bench/compiler.py: Make default compiler setups consistent with\n\t  ones specified by -c\n\n\t  * Add support for programs that use C++\n\n2003-07-11 18:19  Martin Pool <mbp@samba.org>\n\n\t* bench/ProjectDefs.py: Add other definitions needed for building\n\t  firebird.\n\n2003-07-11 18:18  Martin Pool <mbp@samba.org>\n\n\t* cases/simple.c: Simple test with no header files.\n\n2003-07-11 17:27  Martin Pool <mbp@samba.org>\n\n\t* bench/compiler.py: New/better naming of build directories: now\n\t  just 'dist,2'.\n\n2003-07-11 17:26  Martin Pool <mbp@samba.org>\n\n\t* bench/ProjectDefs.py: Comment out Mozilla, which is having\n\t  trouble on Debian.\n\n\t  * Add MozillaFirebird.\n\n2003-07-11 17:25  Martin Pool <mbp@samba.org>\n\n\t* bench/Build.py: Put build logs in the build directory so\n\t  they're easier to find and use.\n\n2003-07-11 15:19  Martin Pool <mbp@samba.org>\n\n\t* bench/ProjectDefs.py: Fix unpacked_subdir for Mozilla\n\n2003-07-11 15:15  Martin Pool <mbp@samba.org>\n\n\t* distcc-check: Make sure we do move into the right scratch\n\t  directory\n\n\t  * Remove with -f on completion so that we don't fail if the files\n\t  were\t never created.\n\n2003-07-11 15:14  Martin Pool <mbp@samba.org>\n\n\t* bench/Project.py: We need wget --continue to get the intended\n\t  behaviour.\n\n2003-07-11 15:10  Martin Pool <mbp@samba.org>\n\n\t* bench/Summary.py: Don't give an error when trying to print a\n\t  summary table of no compilations.\n\n2003-07-11 15:06  Martin Pool <mbp@samba.org>\n\n\t* doc/results.txt: More benchmark stuff.\n\n2003-07-11 14:50  Martin Pool <mbp@samba.org>\n\n\t* bench/Summary.py: Fix uname usage.\n\n2003-07-11 14:50  Martin Pool <mbp@samba.org>\n\n\t* bench/Project.py: Use wget not snarf, because its progress bar\n\t  works better with tty   and non-tty setups.\n\n2003-07-11 14:47  Martin Pool <mbp@samba.org>\n\n\t* bench/benchmark.py: Show -a in help.\n\n2003-07-11 14:47  Martin Pool <mbp@samba.org>\n\n\t* bench/ProjectDefs.py: Fix apache 2.0.43 link, which has moved.\n\n\t  * Add Mozilla 1.4 (not tested yet)\n\n2003-07-11 14:28  Martin Pool <mbp@samba.org>\n\n\t* NEWS: When run as \"distcc foo.o -o foo\", work out that foo.o is\n\t  an object   file not a compiler name.  This can happen with\n\t  Mozilla.\n\n2003-07-11 14:28  Martin Pool <mbp@samba.org>\n\n\t* src/implicit.c: When run as \"distcc foo.o -o foo\", work out\n\t  that foo.o is an object   file not a compiler name.  This can\n\t  happen with Mozilla.\n\n\t  * Many documentation updates to reflect the way that masquerade\n\t  invocation now works -- a lot of the comments in this file were\n\t  written before it was added.\n\n2003-07-11 14:20  Martin Pool <mbp@samba.org>\n\n\t* src/: filename.h, distcc.h, implicit.c: Move declarations for\n\t  filename.c into filename.h.\n\n2003-07-11 14:18  Martin Pool <mbp@samba.org>\n\n\t* src/filename.h: dcc_is_object: New function.\n\n2003-07-11 14:17  Martin Pool <mbp@samba.org>\n\n\t* src/filename.c: dcc_is_object: New function.\n\n\t  * filename.c: Doesn't need sys/stat.h.\n\n\t  * Doc.\n\n2003-07-11 14:13  Martin Pool <mbp@samba.org>\n\n\t* Doxyfile: Don't produce LaTeX\n\n2003-07-11 14:10  Martin Pool <mbp@samba.org>\n\n\t* src/filename.c: Doc\n\n2003-07-11 14:09  Martin Pool <mbp@samba.org>\n\n\t* patches/.cvsignore: Ignore built programs.\n\n2003-07-11 13:34  Martin Pool <mbp@samba.org>\n\n\t* src/: exec.c, exec.h: dcc_execvp() can be static\n\n2003-07-09 18:30  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c, TODO: Start a decompressor.\n\n2003-07-09 18:06  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: First cut at implementation of dcc_send_lzo1x1.\n\n2003-07-09 18:05  Martin Pool <mbp@samba.org>\n\n\t* src/mapfile.c: Finish implementing dcc_map_input_file.\n\n2003-07-09 17:52  Martin Pool <mbp@samba.org>\n\n\t* src/mapfile.c, Makefile.in, src/io.h: Add simple mmap routine\n\t  for reading input files.\n\n2003-07-09 17:42  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Check for sys/mman.h\n\n2003-07-09 17:39  Martin Pool <mbp@samba.org>\n\n\t* src/pump.c: Call dcc_send_lzo1x1 for compressed mode.\n\n2003-07-09 17:38  Martin Pool <mbp@samba.org>\n\n\t* src/: hostfile.c, io.h, loadfile.c: Rename dcc_load_file to\n\t  dcc_load_file_string to be more clear.\n\n2003-07-09 17:17  Martin Pool <mbp@samba.org>\n\n\t* patches/trylzo.c: Simple test harness to measure lzo1x1\n\t  compression.\n\n2003-07-09 16:49  Martin Pool <mbp@samba.org>\n\n\t* src/compress.c: Stub file for doing bulk compression.\n\n2003-07-09 16:28  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, src/bulk.c, src/bulk.h, src/clirpc.c, src/clirpc.h,\n\t  src/io.c, src/io.h, src/pump.c, src/remote.c, src/serve.c:\n\t  Refactor bulk-IO code, and start adding support for compression.\n\t  Nothing is actually compressed yet.\n\n2003-07-09 16:25  Martin Pool <mbp@samba.org>\n\n\t* src/timebuild: Remove 'timebuild' script because it's replaced\n\t  by a better\tbenchmark script.\n\n2003-07-09 15:54  Martin Pool <mbp@samba.org>\n\n\t* src/sendfile.c: Handle EINTR from sendfile().\n\n2003-07-09 15:44  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Remove check for poptGetContext that made us get\n\t  an unnecessary   second -lpopt option.\n\n2003-07-09 15:39  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Doc\n\n2003-07-09 15:38  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Start including lzo support: include it on the\n\t  include path and in\tthe distribution and build minilzo.o.\n\n2003-07-09 15:37  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Bump version.\n\n2003-07-09 14:31  Martin Pool <mbp@samba.org>\n\n\t* TODO: Notes on distcc-check and globally visible state.\n\n2003-07-09 14:17  Martin Pool <mbp@samba.org>\n\n\t* TODO: Update for current progress.\n\n2003-07-09 13:41  Martin Pool <mbp@samba.org>\n\n\t* TODO: 0-length output files are now handled OK.\n\n2003-07-09 13:13  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Correction to NEWS: in fact the GNOME monitor is not\n\t  smart about\tmaking updates only when visible.\n\n2003-07-09 13:04  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Credit Marcelo Matus.\n\n2003-07-09 12:46  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Bump version to 2.8\n\n2003-07-09 12:01  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Bump version to 2.8\n\n2003-07-08 17:02  Martin Pool <mbp@samba.org>\n\n\t* doc/results.txt: More results from SSH\n\n2003-07-08 16:58  Martin Pool <mbp@samba.org>\n\n\t* src/md.c, Makefile.in: Remove md.c because we can't do anything\n\t  very useful here.\n\n2003-07-08 16:49  Martin Pool <mbp@samba.org>\n\n\t* src/arg.c: Doc.\n\n2003-07-08 16:49  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, src/cpp.h: Remove md.c\n\n2003-07-08 16:45  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Add security page.\n\n2003-07-08 16:11  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-07-08 15:59  Martin Pool <mbp@samba.org>\n\n\t* src/cpp.c: Doc.\n\n2003-07-08 15:45  Martin Pool <mbp@samba.org>\n\n\t* src/: arg.c, arg.h, argutil.c, clirpc.c, compile.c, cpp.c,\n\t  distcc.c, distcc.h, exec.c, implicit.c, md.c, serve.c, srvrpc.c,\n\t  ssh.c, strip.c: Move argument-handing prototypes to arg.h\n\n2003-07-08 15:41  Martin Pool <mbp@samba.org>\n\n\t* src/arg.h, Makefile.in: arg.h: new file.\n\n2003-07-08 15:17  Martin Pool <mbp@samba.org>\n\n\t* src/arg.c: Doc.\n\n2003-07-08 15:11  Martin Pool <mbp@samba.org>\n\n\t* src/md.c: Doc\n\n2003-07-08 15:05  Martin Pool <mbp@samba.org>\n\n\t* src/cpp.c: dcc_cpp_maybe: Call dcc_fudge_md.\n\n2003-07-08 15:03  Martin Pool <mbp@samba.org>\n\n\t* src/: md.c, cpp.h: md.c: new file for dependency generation.\n\n2003-07-08 14:59  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: md.c: new file.\n\n2003-07-08 14:53  Martin Pool <mbp@samba.org>\n\n\t* src/strip.c: Doc.\n\n2003-07-08 14:49  Martin Pool <mbp@samba.org>\n\n\t* src/cpp.c: Doc.\n\n2003-07-08 14:44  Martin Pool <mbp@samba.org>\n\n\t* src/arg.c: Doc.\n\n2003-07-08 14:36  Martin Pool <mbp@samba.org>\n\n\t* src/: arg.c, argutil.c: Move functions that are to do with\n\t  handling argv[] arrays but not   really distcc-specific\n\t  intelligence from arg.c to argutil.c.\n\n\t  * Delete dcc_deepcopy_argv which is no longer used.\n\n2003-07-08 14:34  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: argutil.c: New file containing argv[] utilities.\n\n\t  * Clean up harness object lists to use $(common_obj)\n\n2003-07-08 14:31  Martin Pool <mbp@samba.org>\n\n\t* src/argutil.c: New file containing argv[] utilities.\n\n2003-07-08 14:24  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py: Add test for distcc cc -otesttmp.o\n\n2003-07-08 14:01  Martin Pool <mbp@samba.org>\n\n\t* NEWS: dcc_set_output: Add support for -ofoo.o.  Based on a\n\t  patch from   Tsutomu Yasuda.\n\n2003-07-08 13:57  Martin Pool <mbp@samba.org>\n\n\t* src/arg.c: dcc_set_output: Add support for -ofoo.o.  Based on a\n\t  patch from   Tsutomu Yasuda.\n\n2003-07-08 13:46  Martin Pool <mbp@samba.org>\n\n\t* distcc-check: Simple sanity-check script.\n\n2003-07-08 13:23  Martin Pool <mbp@samba.org>\n\n\t* doc/example-init: Example Red Hat init file from Andrew Morton.\n\n2003-07-08 13:20  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Example xinetd configuration from akpm.\n\n2003-07-08 13:19  Martin Pool <mbp@samba.org>\n\n\t* doc/example.xinetd: Doc\n\n2003-07-08 13:16  Martin Pool <mbp@samba.org>\n\n\t* doc/example.xinetd, Makefile.in: Example xinetd configuration\n\t  from akpm.\n\n2003-07-08 13:06  Martin Pool <mbp@samba.org>\n\n\t* src/remote.c: Doc.\n\n2003-07-08 12:42  Martin Pool <mbp@samba.org>\n\n\t* src/: clinet.c, io.c, io.h, sendfile.c: dcc_select_for_write,\n\t  dcc_select_for_read: Both now take a timeout\t parameter, which\n\t  is set by default to 15 for opening connections,   and 300s for\n\t  IO during a transfer.  This should reduce problems with\n\t  timeouts during an SSH connection.\n\n2003-07-08 12:39  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-07-08 12:18  Martin Pool <mbp@samba.org>\n\n\t* src/clinet.c: dcc_connect_timed: When connecting, we need to\n\t  select() until the   new socket is writeable, not readable.  This\n\t  bug was previously   masked by the inverted call in\n\t  dcc_select_for_read().\n\n2003-07-08 12:14  Martin Pool <mbp@samba.org>\n\n\t* src/remote.c: dcc_remote_connect: Factor out code to open a\n\t  connection from dcc_compile_remote.\n\n2003-07-07 23:57  Martin Pool <mbp@samba.org>\n\n\t* NEWS: dcc_run_job: Use separate input and output file\n\t  descriptors, to   support sshds that use pipes to run programs\n\t  rather than local   sockets.\t Suggestion from Felix Lee.\n\n2003-07-07 23:53  Martin Pool <mbp@samba.org>\n\n\t* src/io.c: Handle EINTR from read and write.\n\n2003-07-07 23:44  Martin Pool <mbp@samba.org>\n\n\t* src/io.c: dcc_select_for_write: Handle EINTR.\n\n\t  * Doc.\n\n2003-07-07 23:37  Martin Pool <mbp@samba.org>\n\n\t* src/io.c, NEWS: dcc_select_for_read: Fix silly parameter\n\t  ordering mistake.\n\n2003-07-07 23:31  Martin Pool <mbp@samba.org>\n\n\t* src/io.c: dcc_select_for_read: Fix warning.\n\n2003-07-07 23:27  Martin Pool <mbp@samba.org>\n\n\t* src/io.c: dcc_select_for_read: Better trace messages.\n\n2003-07-07 23:17  Martin Pool <mbp@samba.org>\n\n\t* src/: daemon.c, daemon.h, dparent.c, prefork.c, serve.c:\n\t  dcc_run_job: Use separate input and output file descriptors, to\n\t  support sshds that use pipes to run programs rather than local\n\t  sockets.   Suggestion from Felix Lee.\n\n2003-07-07 23:15  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Don't give a warning about linuxdoc, because we\n\t  do it during\t installation.\n\n2003-07-07 23:03  Martin Pool <mbp@samba.org>\n\n\t* src/: serve.c: Doc.\n\n2003-07-07 22:57  Martin Pool <mbp@samba.org>\n\n\t* NEWS: If Linuxdoc was not detected, just give a small warning\n\t  and not an   error while installing.\n\n2003-07-07 22:25  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: If Linuxdoc was not detected, just give a small\n\t  warning and not an   error while installing.\n\n2003-07-07 18:35  Martin Pool <mbp@samba.org>\n\n\t* doc/protocol-1.txt: Document the changes to support 0-byte\n\t  output.\n\n2003-07-07 18:34  Martin Pool <mbp@samba.org>\n\n\t* TODO: [no log message]\n\n2003-07-07 18:33  Martin Pool <mbp@samba.org>\n\n\t* test/badcc: Add mode to generate empty output.\n\n2003-07-07 18:08  Martin Pool <mbp@samba.org>\n\n\t* src/clirpc.c: Retrieval of the output file is now determined by\n\t  the remote   compiler status, not the DOTO length.  This allows\n\t  us to correctly   get back a 0-length output file from a\n\t  successful compile.\n\n2003-07-07 18:03  Martin Pool <mbp@samba.org>\n\n\t* src/remote.c: Doc.\n\n2003-07-07 17:59  Martin Pool <mbp@samba.org>\n\n\t* src/serve.c: Doc.\n\n2003-07-07 17:48  Martin Pool <mbp@samba.org>\n\n\t* src/: bulk.h, bulk.c: Be more careful about treating token\n\t  parameters as unsigned.\n\n2003-07-07 17:28  Martin Pool <mbp@samba.org>\n\n\t* configure.ac, NEWS: Better test for vararg macro support that\n\t  correctly identifies apple   gcc brokenness.\tFrom Matt Watson\n\t  <mwatson@apple.com>.\n\n2003-07-07 16:44  Martin Pool <mbp@samba.org>\n\n\t* NEWS: distccmon-text: Output should always be line-buffered,\n\t  even if not\twriting to a terminal.\n\n2003-07-07 15:27  Martin Pool <mbp@samba.org>\n\n\t* src/mon-text.c: distccmon-text: Output should always be\n\t  line-buffered, even if not   writing to a terminal.\n\n2003-07-07 15:23  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Doc.\n\n2003-07-07 13:50  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: dcc_note_state: Quote strings in trace message.\n\n2003-07-07 12:55  Martin Pool <mbp@samba.org>\n\n\t* src/mon.h, NEWS: Protect against repeated inclusion.\n\t  Suggestion from Fr'ed'eric Forjan.\n\n2003-07-07 12:53  Martin Pool <mbp@samba.org>\n\n\t* src/mon.h: mon.h now uses \"extern C\" so that it can be included\n\t  from C++   programs.\tSuggestion from Fr'ed'eric Forjan.\n\n2003-06-25 17:50  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Doc.\n\n2003-06-25 17:48  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Always update load, even if not onscreen, so\n\t  that we don't show a\t dummy message at startup.\n\n2003-06-25 17:46  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Increase niceness at startup.\n\n2003-06-25 17:43  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c, NEWS: distccmon-gnome: Prevent selection of\n\t  rows in the treeview.    Emphasize horizontal rows\n\t  (\"rules-hint\").\n\n2003-06-25 17:28  Martin Pool <mbp@samba.org>\n\n\t* NEWS: distccmon-gnome: Check whether the window is iconified or\n\t  withdrawn,   and if so then don't update.  This slightly reduces\n\t  the load in\tthose cases.\n\n2003-06-25 17:12  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Expose a reference to the GtkTreeView widget\n\t  and use that in the\tupdate callback.\n\n\t  * Check whether the window is iconified or withdrawn, and if so\n\t  then\t don't update.\tThis slightly reduces the load in those\n\t  cases.\n\n2003-06-25 11:31  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Prepare for 2.7.1\n\n2003-06-25 11:28  Martin Pool <mbp@samba.org>\n\n\t* patches/state-in-home.diff: Store rolled-back ~/.distcc/state\n\t  patch.\n\n2003-06-25 11:27  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Fix EXEEXT on gnome binaries.\n\n2003-06-25 11:26  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Prepare for 2.7.1\n\n\t  * Fix EXEEXT on gnome binaries.\n\n2003-06-25 10:59  Martin Pool <mbp@samba.org>\n\n\t* src/state.c, NEWS: Roll back: put the state in the temporary\n\t  directory, because storing   it in home does not seem to fix\n\t  ebuild.\n\n2003-06-24 13:40  Martin Pool <mbp@samba.org>\n\n\t* patches/hosts-from-file-raabe.diff: hosts-from-file-raabe.diff\n\t  Has been merged\n\n2003-06-21 14:21  Martin Pool <mbp@samba.org>\n\n\t* DEPENDENCIES: Note that libgnome is no longer required.\n\n2003-06-21 13:45  Martin Pool <mbp@samba.org>\n\n\t* TODO: Updates based on work done recently.\n\n2003-06-21 13:42  Martin Pool <mbp@samba.org>\n\n\t* NEWS, src/state.c: State files now in ~/.distcc/state\n\n2003-06-21 13:13  Martin Pool <mbp@samba.org>\n\n\t* src/arg.c: Fix constness.\n\n2003-06-20 17:32  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Doc.\n\n2003-06-20 17:29  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Add autoconf test for GTK+-2.0 (but don't call it\n\t  yet.)\n\n\t  * Change --enable-gnome to just check for GTK+.\n\n2003-06-20 17:25  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: stdint.h is not needed.\n\n2003-06-20 17:23  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, NEWS: distccmon-gnome now depends only on gtk+-2.0\n\n2003-06-20 17:18  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Follow the advice in the GTK+ 2.2 API:\n\n\t   * Don't call gtk_widget_set_usize and gtk_window_set_policy, but\n\t     instead just gtk_window_set_default_size.\n\n\t     This gives us the same default size and allows the user to\n\t  shrink\n\t     the window, but doesn't let them shrink it right down to zero.\n\n2003-06-20 17:15  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Add some other necessary headers.\n\n2003-06-20 17:14  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Update to use just the GTK+ 2.0 API, and\n\t  nothing from libgnomeui.\n\n2003-06-16 18:40  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Remove stupid autom4te.cache from distclean\n\n2003-06-16 18:36  Martin Pool <mbp@samba.org>\n\n\t* src/arg.c: Remove TODO about -MD because the information is in\n\t  TODO and I think   I know how to fix it now.\n\n2003-06-16 18:33  Martin Pool <mbp@samba.org>\n\n\t* src/cpp.c: Doc\n\n2003-06-16 18:30  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Bump version\n\n2003-06-16 17:51  Martin Pool <mbp@samba.org>\n\n\t* configure.ac, NEWS: Release 2.7.\n\n2003-06-16 17:50  Martin Pool <mbp@samba.org>\n\n\t* src/arg.c: Doc\n\n2003-06-16 17:39  Martin Pool <mbp@samba.org>\n\n\t* TODO: [no log message]\n\n2003-06-16 17:06  Martin Pool <mbp@samba.org>\n\n\t* TODO: Notes on dnotify.\n\n2003-06-16 16:59  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-06-16 16:50  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Need to link LIBS in to get functions like\n\t  inet_ntoa on Solaris, etc.\n\n2003-06-16 16:31  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Make the tree sortable.\n\n2003-06-16 14:39  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Doc.\n\n2003-06-16 14:38  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Put commas in load average line.\n\n2003-06-16 14:37  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Load bar now actually shows the system load as\n\t  we go.\n\n\t  * Load bar is initialized at startup.\n\n2003-06-16 14:31  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Add a callback to update the load indicator.\n\n2003-06-16 14:26  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Fix up load indicator.\n\n2003-06-16 14:17  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Start adding a load indicator at the bottom of\n\t  the window.\n\n2003-06-16 13:48  Martin Pool <mbp@samba.org>\n\n\t* src/mon-notify.c, Makefile.in, src/mon.c: mon-notify.c: New\n\t  file to keep the dnotify stuff out of mon.c\n\n2003-06-16 13:41  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Remove dnotify support, because the signals\n\t  seem to cause trouble   with GNOME, and too-frequent updates are\n\t  bad for our CPU usage.\n\n2003-06-16 13:15  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Doc\n\n2003-06-16 13:07  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Check for sys/select.h, which is not present on HP-UX.\n\n2003-06-16 13:03  Martin Pool <mbp@samba.org>\n\n\t* configure.ac, src/io.c: Check for sys/select.h, which is not\n\t  present on HP-UX.\n\n2003-06-16 12:48  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Doc.\n\n2003-06-16 12:43  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Doc.\n\n2003-06-16 12:33  Martin Pool <mbp@samba.org>\n\n\t* src/: clirpc.c, clirpc.h, compile.c, exec.c, exec.h, mon.c,\n\t  rpc.c, rpc.h, serve.c, srvrpc.c: Store all token parameter\n\t  values, including lengths and waitstatuses   to unsigned\n\t  throughout the program.  Fixes some warnings on Sun and\n\t  probably a bit safer.\n\n2003-06-16 12:25  Martin Pool <mbp@samba.org>\n\n\t* src/arg.c: dcc_note_compiled: Fix constness.\n\n2003-06-16 12:25  Martin Pool <mbp@samba.org>\n\n\t* src/util.c: snprintf.h is needed.\n\n2003-06-16 12:24  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.h: Change dcc_trace_argv macro to try to quieten\n\t  warnings on Sun.\n\n2003-06-16 12:21  Martin Pool <mbp@samba.org>\n\n\t* src/trace.h: Add RS_STMT_START macros from glib, to quieten\n\t  warnings on Sun.\n\n2003-06-16 12:19  Martin Pool <mbp@samba.org>\n\n\t* src/hosts.c: snprintf.h is needed.\n\n2003-06-16 12:17  Martin Pool <mbp@samba.org>\n\n\t* src/: mon-gnome.c, mon.c, mon.h: Rename dcc_gnome_setup_dnotify\n\t  to dcc_gnome_setup_notify to be less\t Linux-specific.\n\n\t  * Add documentation on the mon interface to help people writing\n\t  new\tmonitors.\n\n2003-06-16 12:08  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Doc\n\n2003-06-16 12:05  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Fix configure messages.\n\n2003-06-16 12:04  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Only check for libgnomeui-2.0 if --enable-gnome\n\t  was specified.\n\n2003-06-16 11:27  Martin Pool <mbp@samba.org>\n\n\t* doc/results.txt: Notes on performance of monitor with dnotify.\n\n2003-06-14 20:09  Martin Pool <mbp@samba.org>\n\n\t* TODO: IPv6 is now done.\n\n2003-06-14 20:08  Martin Pool <mbp@samba.org>\n\n\t* TODO: Notes on nicely handling gcc -MD.\n\n2003-06-13 17:30  Martin Pool <mbp@samba.org>\n\n\t* src/clinet.c: Doc.\n\n2003-06-13 14:57  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Change default size\n\n\t  * Print out a star when we reread the directory.\n\n2003-06-13 14:39  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Even if we can use dnotify, still poll every\n\t  10s to clean up dead files.\n\n2003-06-13 14:33  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Also listen for deletion notifications to make sure\n\t  that we notice   when the last compiler quits.\n\n2003-06-13 14:31  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Attach to dnotify prompts from mon.c and drain\n\t  them as they arrive.\n\n2003-06-13 14:28  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: dcc_mon_setup_dnotify: Check that the fcntl to set\n\t  F_NOTIFY suceeded   -- this can fail on linux systems that don't\n\t  have dnotify in the\tkernel.\n\n2003-06-13 12:55  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Fix spelling mistake.\n\n2003-06-13 12:18  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Dnotify stuff now actually writes to the dummy pipe\n\t  when the state   changes.\n\n2003-06-13 12:14  Martin Pool <mbp@samba.org>\n\n\t* src/: mon.c, state.c: Doc.\n\n2003-06-12 22:02  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Doc\n\n2003-06-12 21:58  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Fix up half-committed code.\n\n2003-06-12 21:55  Martin Pool <mbp@samba.org>\n\n\t* configure.ac, src/mon-gnome.c: Fix up half-committed code.\n\n2003-06-12 18:13  Martin Pool <mbp@samba.org>\n\n\t* TODO, src/mon-gnome.c, src/mon.c, src/mon.h: Start adding\n\t  dnotify support for monitor rather than polling.\n\n2003-06-12 18:02  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Fix distccmon-gnome\n\n2003-06-12 18:00  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Make sure to use the right cpp flags when building\n\t  distccmon-gnome\n\n2003-06-12 17:56  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: distccmon-gnome needs nonblocking routines from\n\t  netutil.o\n\n2003-06-12 17:50  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Refactor\n\n2003-06-12 17:37  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Doc.\n\n2003-06-12 17:27  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: GTK 2.0 manual says that gtk_timeout_add is\n\t  deprecated in favour of   g_timeout_add.\n\n2003-06-12 17:26  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Show USER@HOST in monitor title bar, because\n\t  it's possible people\t will run this remotely.\n\n2003-06-12 16:57  Martin Pool <mbp@samba.org>\n\n\t* NEWS: If --enable-gnome was specified, then check that\n\t  libgnomeui is   actually present.\n\n2003-06-12 16:52  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Bump version\n\n\t  * If --enable-gnome was specified, then check that libgnomeui is\n\t   actually present.\n\n2003-06-12 16:38  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Doc\n\n2003-06-12 16:27  Martin Pool <mbp@samba.org>\n\n\t* DEPENDENCIES: Describe dependencies for GNOME.\n\n2003-06-12 16:25  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: The GTK tree model is now updated on each new\n\t  monitor state.  It   seems to be working correctly.\n\n2003-06-12 16:09  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Reindent only.\n\n2003-06-12 16:06  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Add a callback every 0.5s.  At the moment it\n\t  does nothing.\n\n2003-06-12 15:56  Martin Pool <mbp@samba.org>\n\n\t* TODO: More small updates.\n\n2003-06-12 15:51  Martin Pool <mbp@samba.org>\n\n\t* TODO: Remove many done TODO items, and add notes on some\n\t  continuing ones.\n\n2003-06-12 15:40  Martin Pool <mbp@samba.org>\n\n\t* src/clirpc.c: Doc\n\n2003-06-12 13:47  Martin Pool <mbp@samba.org>\n\n\t* src/compile.c: dcc_build_somewhere: input_fname must be\n\t  initialized to NULL so that\tin the case of a very early\n\t  fallback to local compilation we don't   read an invalid pointer\n\t  and crash.\n\n2003-06-12 13:44  Martin Pool <mbp@samba.org>\n\n\t* src/: clirpc.c, remote.c, state.c: Remove infrequently-hit\n\t  states.\n\n2003-06-12 13:42  Martin Pool <mbp@samba.org>\n\n\t* src/compile.c: Remove \"Startup\" state because it's very\n\t  unlikely to be hit.\n\n2003-06-12 12:53  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Prepare for 2.6 release.\n\n2003-06-12 12:41  Martin Pool <mbp@samba.org>\n\n\t* src/prefork.c: dcc_preforking_parent: Put in another 1s sleep\n\t  between collecting   dead children and starting new ones.\n\n2003-06-12 12:35  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Reorder sections.\n\n\t  Patch from Sean MacLennan:\n\n\t  * dcc_ncpus for Linux: make sure that we don't return 0 cpus.\n\n2003-06-12 12:34  Martin Pool <mbp@samba.org>\n\n\t* src/ncpus.c: Patch from Sean MacLennan:\n\n\t  * dcc_ncpus for Linux: make sure that we don't return 0 cpus.\n\n2003-06-12 12:14  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Get ready for 2.66 release.\n\n2003-06-12 12:04  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Include doc/status-1.txt in distribution.\n\n2003-06-12 12:00  Martin Pool <mbp@samba.org>\n\n\t* doc/status-1.txt: Update to describe the implemented monitor\n\t  design.\n\n2003-06-12 09:53  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Reorder items\n\n2003-06-12 09:30  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Note changed tmpdir name.\n\n2003-06-12 00:34  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Skip state files for which the process no longer\n\t  exists.\n\n2003-06-12 00:29  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Call the blocked state \"starved\".\n\n2003-06-12 00:28  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Call the blocked state \"bored\"\n\n2003-06-12 00:26  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Doc.\n\n2003-06-12 00:17  Martin Pool <mbp@samba.org>\n\n\t* src/clirpc.c: Doc.\n\n2003-06-12 00:15  Martin Pool <mbp@samba.org>\n\n\t* src/clirpc.c: Add more states: distinguish more states: waiting\n\t  for preprocessor,   sending source, and receiving object.\n\n2003-06-12 00:12  Martin Pool <mbp@samba.org>\n\n\t* src/: state.h, state.c: Add more states.\n\n2003-06-12 00:09  Martin Pool <mbp@samba.org>\n\n\t* src/mon-text.c: Clip columns to appropriate widths.\n\n2003-06-12 00:04  Martin Pool <mbp@samba.org>\n\n\t* src/: compile.c: Note input filename as soon as it has been\n\t  determined.\n\n2003-06-12 00:03  Martin Pool <mbp@samba.org>\n\n\t* src/: compile.c, compile.h, remote.c, where.c, where.h: Roll\n\t  back the rest of the xmit lock code.\n\n\t  * Rely on state code to keep track of what source file we're\n\t  compiling.\n\n2003-06-11 22:41  Martin Pool <mbp@samba.org>\n\n\t* src/: compile.c, state.c, state.h: Show another state during\n\t  startup.\n\n2003-06-11 22:38  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Doc\n\n2003-06-11 22:37  Martin Pool <mbp@samba.org>\n\n\t* src/clirpc.c: dcc_retrieve_results: Try to keep the right file\n\t  name when updating   state.\n\n2003-06-11 22:36  Martin Pool <mbp@samba.org>\n\n\t* TODO: Thoughts on -MD support.\n\n2003-06-11 22:36  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-06-11 22:34  Martin Pool <mbp@samba.org>\n\n\t* src/remote.c: Doc\n\n2003-06-11 22:31  Martin Pool <mbp@samba.org>\n\n\t* src/remote.c: dcc_compile_remote: Try to keep the right file\n\t  name when updating   state.\n\n2003-06-11 22:30  Martin Pool <mbp@samba.org>\n\n\t* src/where.c: dcc_lock_pause: Set state notification when\n\t  blocked.\n\n2003-06-11 22:29  Martin Pool <mbp@samba.org>\n\n\t* src/: state.c, state.h: dcc_note_state: constness\n\n2003-06-11 22:29  Martin Pool <mbp@samba.org>\n\n\t* src/: filename.h, filename.c: dcc_find_basename: constness\n\n2003-06-11 22:26  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: dcc_note_state: Remember the previously-set\n\t  filename and host, so   that we can just change state without\n\t  needing to always know the   filename.\n\n2003-06-11 22:22  Martin Pool <mbp@samba.org>\n\n\t* src/: state.c, state.h: Add STATE_BLOCKED.\n\n2003-06-11 22:21  Martin Pool <mbp@samba.org>\n\n\t* src/state.h: Delete garbage comment.\n\n2003-06-11 17:22  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Doc.\n\n2003-06-11 17:20  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Remove done todo\n\n2003-06-11 17:19  Martin Pool <mbp@samba.org>\n\n\t* doc/results.txt: Measurements with state notes turned on.\n\n2003-06-11 17:18  Martin Pool <mbp@samba.org>\n\n\t* src/: compile.c, compile.h, remote.c: dcc_compile_remote: Input\n\t  filename is passed in for use in state notes.\n\n2003-06-11 17:17  Martin Pool <mbp@samba.org>\n\n\t* src/remote.c: dcc_compile_remote: xmit_lock_fd is unused for\n\t  now.\n\n2003-06-11 17:14  Martin Pool <mbp@samba.org>\n\n\t* src/remote.c: Doc.\n\n2003-06-11 17:07  Martin Pool <mbp@samba.org>\n\n\t* src/mon-text.c: Doc.\n\n2003-06-11 17:02  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-06-11 16:59  Martin Pool <mbp@samba.org>\n\n\t* src/mon-text.c: Take one optional parameter, which sets a time\n\t  to wait between   refreshes.\n\n\t    Currently done using usleep(), which may not be portable.\n\n2003-06-11 16:58  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: dcc_mon_poll: Fix memory scribble.\n\n2003-06-11 16:53  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Doc.\n\n2003-06-11 16:46  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-06-11 16:29  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Only unlink file before replacing on cygwin.\n\n2003-06-11 16:24  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: Write state out into temporary files and rename\n\t  into place, to try   to avoid monitors ever seeing half-full\n\t  files.\n\n2003-06-11 15:19  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Reduce max age to 30s.\n\n2003-06-11 15:06  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Include hostname in tempdir name, to avoid\n\t  problems when /tmp is   shared.\n\n2003-06-11 15:03  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Note distccmon-text.\n\n2003-06-11 15:00  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: dcc_make_tmpnam: Just use asprintf() now we\n\t  have it, rather than\t doing the equivalent by hand.\n\n\t    Use the plain pid in temporary filenames rather than\n\t  zero-filling\n\t    it.\n\n2003-06-11 14:55  Martin Pool <mbp@samba.org>\n\n\t* src/mon-text.c: Dump out the monitor list in a simple text\n\t  table form.\n\n2003-06-11 14:50  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Doc\n\n\t  * dcc_mon_kill_old: Always close fd on failure.\n\n\t  * Build up a list of dcc_mon_list structures as the files are\n\t  read in.\n\n\t  * dcc_mon_list_free: Walk down the list, freeing each link.\n\n2003-06-11 14:24  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Read host and file variabels from state.\n\n2003-06-11 14:22  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Put in constant for the time to allow statefiles to\n\t  live, and reduce   to 60s.\n\n\t  * Read state string.\n\n2003-06-11 14:19  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: Check for and kill old state files.\n\n\t  * Read in the start of the state file.\n\n2003-06-11 14:15  Martin Pool <mbp@samba.org>\n\n\t* src/: rpc.c, rpc.h, srvrpc.c: dcc_r_token_string: New function\n\t  factored out.\n\n2003-06-11 14:06  Martin Pool <mbp@samba.org>\n\n\t* src/exitcode.h: Add EXIT_GONE\n\n2003-06-11 12:41  Martin Pool <mbp@samba.org>\n\n\t* src/mon-text.c: distccmon-gnome: Emit blank at end.\n\n2003-06-11 12:41  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: dcc_mon_do_file: Open each state file and handle\n\t  missing ones.\n\n\t  * dcc_mon_poll: Fix reference to freed memory.\n\n2003-06-11 12:35  Martin Pool <mbp@samba.org>\n\n\t* src/: state.c, state.h: dcc_state_prefix: Export identifying\n\t  prefix for state files.\n\n2003-06-11 12:35  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: dcc_mon_do_file: New function.  Skip everything but\n\t  state files.\n\n2003-06-11 12:31  Martin Pool <mbp@samba.org>\n\n\t* src/mon.c: dcc_mon_poll: Partial implementation that just\n\t  traverses the directory.\n\n2003-06-11 12:30  Martin Pool <mbp@samba.org>\n\n\t* src/mon-text.c: Set trace level from environment.\n\n2003-06-11 12:30  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c, src/distcc.h, src/traceenv.c, Makefile.in:\n\t  dcc_set_trace_from_env: Split out into new file src/traceenv.c,\n\t  so   that this can also be used from monitor programs.\n\n2003-06-11 12:29  Martin Pool <mbp@samba.org>\n\n\t* .cvsignore: Ignore distccmon-text binary.\n\n2003-06-11 12:24  Martin Pool <mbp@samba.org>\n\n\t* src/trace.c: Default trace should get all messages allowed by\n\t  log level.\n\n2003-06-11 12:22  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Build and install distccmon-text\n\n2003-06-11 12:19  Martin Pool <mbp@samba.org>\n\n\t* src/trace.c: Typo\n\n2003-06-11 12:18  Martin Pool <mbp@samba.org>\n\n\t* src/trace.c: If no logger has been initialized when the first\n\t  message goes out,   then write to stderr.\n\n2003-06-11 12:13  Martin Pool <mbp@samba.org>\n\n\t* src/mon.h: Declare part of the monitor API\n\n2003-06-11 12:13  Martin Pool <mbp@samba.org>\n\n\t* src/mon-text.c: Hook in to trace code.\n\n2003-06-11 12:11  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: More routines are needed for monitors\n\n2003-06-11 12:06  Martin Pool <mbp@samba.org>\n\n\t* src/mon-text.c: Hook in to trace code.\n\n\t  * Doc.\n\n2003-06-11 12:04  Martin Pool <mbp@samba.org>\n\n\t* src/: exec.c, util.c: dcc_remove_if_exists: Move to util.c\n\n2003-06-11 12:04  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Add mon_obj variable for building monitor\n\t  programs.\n\n2003-06-11 11:58  Martin Pool <mbp@samba.org>\n\n\t* src/mon-text.c: src/mon-text.c: New file.\n\n2003-06-11 11:57  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Include src/mon-gnome.c in distribution\n\n\t  * src/mon-text.c: New file.\n\n2003-06-11 11:51  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: dcc_note_state: Put client pid in state.\n\n2003-06-11 11:50  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, src/mon.c, src/mon.h: src/mon.c, src/mon.h: New\n\t  files.\n\n2003-06-11 11:48  Martin Pool <mbp@samba.org>\n\n\t* src/: clirpc.c, remote.c: Add more calls to publish state.\n\n2003-06-11 11:43  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: dcc_note_state: Handle null file or host names.\n\n2003-06-11 11:39  Martin Pool <mbp@samba.org>\n\n\t* src/: distcc.c, state.c, state.h: Call dcc_remove_state_file\n\t  from atexit in client.\n\n2003-06-11 11:37  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: dcc_remove_state_file: Implement.\n\n2003-06-11 11:35  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: dcc_open_state_file: Release memory after use.\n\n2003-06-11 11:32  Martin Pool <mbp@samba.org>\n\n\t* src/: rpc.c, rpc.h: dcc_x_token_string: Make buffer const.\n\n2003-06-11 11:31  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: dcc_note_state: Include file and host too.\n\n2003-06-11 11:28  Martin Pool <mbp@samba.org>\n\n\t* src/state.c: dcc_note_state: Include state string as well.\n\n2003-06-11 11:26  Martin Pool <mbp@samba.org>\n\n\t* src/clirpc.c: dcc_x_argv: Call dcc_x_token_string rather than\n\t  doing it inline.\n\n2003-06-11 11:22  Martin Pool <mbp@samba.org>\n\n\t* src/: rpc.h, rpc.c: dcc_x_token_string: New function factored\n\t  out.\n\n2003-06-11 11:06  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Subst in LINUXDOC.\n\n2003-06-11 11:02  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: AC_ARG_VAR LINUXDOC\n\n2003-06-11 11:00  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Add a check for existence of linuxdoc.\n\n2003-06-11 10:47  Martin Pool <mbp@samba.org>\n\n\t* src/snprintf.h: snprintf.h needs to include stdarg.h to get\n\t  va_list.  Possibly fixes IRIX.\n\n2003-06-10 18:23  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Patch from Paul Russell:\n\n\t   * If the compiler is not found on the server and is a\n\t  fully-qualified\n\t     name, then strip off the full name and just look for it on the\n\t     path.\n\n2003-06-10 18:16  Martin Pool <mbp@samba.org>\n\n\t* src/exec.c: Doc.\n\n2003-06-10 18:15  Martin Pool <mbp@samba.org>\n\n\t* src/exec.c: Patch from Paul Russell:\n\n\t   * If the compiler is not found on the server and is a\n\t  fully-qualified\n\t     name, then strip off the full name and just look for it on the\n\t     path.\n\n2003-06-10 18:00  Martin Pool <mbp@samba.org>\n\n\t* doc/release-names.txt: [no log message]\n\n2003-06-10 18:00  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Note new state files.\n\n2003-06-10 17:57  Martin Pool <mbp@samba.org>\n\n\t* src/stat.c, src/stat.h, src/state.c, src/state.h, Makefile.in,\n\t  src/compile.c: Rename stat.* to state.*\n\n2003-06-10 17:57  Martin Pool <mbp@samba.org>\n\n\t* src/stat.h: dcc_remove_state_file: New function.\n\n2003-06-10 17:56  Martin Pool <mbp@samba.org>\n\n\t* src/stat.c: dcc_get_state_file: New function to return the name\n\t  of the state\t file for this process.\n\n\t  * dcc_note_state: Start writing into state file.\n\n2003-06-10 17:43  Martin Pool <mbp@samba.org>\n\n\t* src/compile.c: Update state directory when compiling locally.\n\n2003-06-10 17:42  Martin Pool <mbp@samba.org>\n\n\t* src/arg.c: Factor out \"compile from %s to %s\" message into its\n\t  own function,   and log only the basename.  Should prevent\n\t  page-widening in server   logs.\n\n2003-06-10 17:41  Martin Pool <mbp@samba.org>\n\n\t* src/: stat.c, stat.h: dcc_note_state only logs the basename of\n\t  the file.\n\n2003-06-10 17:39  Martin Pool <mbp@samba.org>\n\n\t* src/stat.c: dcc_note_state: Trim filename down to basename.\n\n2003-06-10 17:37  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Try to fix UTF-8 coding, which seemed to be mangled by\n\t  CVS.\n\n2003-06-10 17:31  Martin Pool <mbp@samba.org>\n\n\t* NEWS: In compilation log message, just show the basename of the\n\t  file\t     to make it more compact.\n\n2003-06-10 17:23  Martin Pool <mbp@samba.org>\n\n\t* src/: stat.h, stat.c: Add compile state constants.\n\n2003-06-10 17:16  Martin Pool <mbp@samba.org>\n\n\t* src/: filename.h, filename.c: dcc_find_basename: New function.\n\n2003-06-10 16:57  Martin Pool <mbp@samba.org>\n\n\t* src/compile.c: Remove unneeded header.\n\n2003-06-10 16:55  Martin Pool <mbp@samba.org>\n\n\t* src/: stat.c, stat.h: dcc_note_state: New function to record\n\t  what the client's up to.\n\n2003-06-10 16:54  Martin Pool <mbp@samba.org>\n\n\t* src/: bulk.c, distcc.h: Move O_BINARY ifdef to distcc.h\n\n2003-06-10 15:56  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: New file stat.h\n\n2003-06-10 15:55  Martin Pool <mbp@samba.org>\n\n\t* src/: stat.c, stat.h: New file stat.h\n\n\t  * Add routine to open a state file.\n\n2003-06-10 15:55  Martin Pool <mbp@samba.org>\n\n\t* .cvsignore: Ignore distccmon-gnome.\n\n2003-06-10 15:49  Martin Pool <mbp@samba.org>\n\n\t* src/stat.c: Doc\n\n\t  * Add function to create/return state directory.\n\n2003-06-10 15:47  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.h: Split code for idempotent directory creation\n\t  out into a new function   dcc_make_dir, so that it can be used by\n\t  state file code.\n\n2003-06-10 15:33  Martin Pool <mbp@samba.org>\n\n\t* src/tempfile.c: Split code for idempotent directory creation\n\t  out into a new function   dcc_make_dir, so that it can be used by\n\t  state file code.\n\n2003-06-10 15:23  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Add columns for file and host\n\n\t  * Add more sample data\n\n\t  * Refactor code to create table view.\n\n2003-06-10 15:14  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Set a more reasonable default size.\n\n2003-06-10 15:09  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Refactor into smaller functions\n\n\t  * Remove horizontal scrollbar; vertical only as needed.\n\n\t  * Remove dummy text entry\n\n2003-06-10 15:00  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Start adding a GNOME-based monitor.\n\n2003-06-10 14:58  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: make clean: Remove distccmon-gnome, even if it's\n\t  currently not   configured on.\n\n2003-06-10 14:57  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, configure.ac: Add --enable-gnome configure option.\n\t  When set, build and install\t distccmon-gnome.\n\n2003-06-09 23:09  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Add more sample data.\n\n2003-06-09 23:07  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Add hardcoded rule for distccmon-gnome.\n\n2003-06-09 23:05  Martin Pool <mbp@samba.org>\n\n\t* doc/status-1.txt: Update status indicator notes.\n\n2003-06-09 23:03  Martin Pool <mbp@samba.org>\n\n\t* src/stat.c: Stub for status indicator.\n\n2003-06-09 19:23  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gnome.c: Start of a monitor implementation in GTK+-2.2.\n\t  Displays a window   with a list containing only \"42\".\n\n2003-06-09 18:37  Martin Pool <mbp@samba.org>\n\n\t* src/: mon-gnome.c, mon-gtk.c: Stub implementation of GNOME\n\t  monitor.\n\n2003-06-09 18:35  Martin Pool <mbp@samba.org>\n\n\t* src/: netutil.c, netutil.h: Add implementation of hstrerror()\n\t  for systems that don't have it.\n\n2003-06-09 18:28  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: src/stat.c: New file.\n\n2003-06-09 15:23  Martin Pool <mbp@samba.org>\n\n\t* src/mon-gtk.c: Add a stub GTK+ monitor interface -- compiles\n\t  and shows an empty   window but does nothing.\n\n2003-06-09 14:26  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Note that hstrerror() is now supplied.\n\n2003-06-09 12:47  Martin Pool <mbp@samba.org>\n\n\t* src/remote.c: Remove more unneeded headers.\n\n2003-06-09 12:43  Martin Pool <mbp@samba.org>\n\n\t* src/: distcc.c, compile.c: Remove more unneeded headers.\n\n2003-06-09 12:36  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Remove more unneeded headers.\n\n2003-06-09 12:33  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Remove unneeded headers.\n\n2003-06-08 20:05  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py, NEWS: Fix silly typo that made\n\t  maintainer-check fail in ParseHostSpec_Case.\n\n2003-06-08 19:52  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, src/compile.c, src/compile.h, src/distcc.c: Split\n\t  other client-side compile functionality into src/compile.c.\n\t  src/distcc.c now only has the top-level client code.\n\n\t  * src/compile.c: New file.\n\n2003-06-08 19:43  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in, src/compile.h, src/distcc.c, src/remote.c: Split\n\t  dcc_compile_remote into src/remote.c, and make it public.\n\n\t  * compile.h, remote.c: New files.\n\n2003-06-08 19:36  Martin Pool <mbp@samba.org>\n\n\t* TODO: Multiple updates to TODO file.\n\n2003-06-08 19:19  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c, NEWS: Look for UNCACHED_ERR_FD environment\n\t  variable, to allow distcc   networking errors to avoid being\n\t  cached by ccache.\n\n2003-06-06 13:07  Martin Pool <mbp@samba.org>\n\n\t* TODO: OpenMOSIX autodiscovery\n\n2003-06-05 17:44  Martin Pool <mbp@samba.org>\n\n\t* TODO: Rearrange comments on DNS A and SRV records.\n\n\t  * Move question about --enable-final to web.\n\n2003-06-05 17:34  Martin Pool <mbp@samba.org>\n\n\t* TODO: 2.5 bug is fixed.\n\n2003-06-05 17:26  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Include doc/protocol-1.txt in distribution.\n\n2003-06-05 17:21  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Bump version back to 2.6cvs\n\n2003-06-05 17:03  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Note connection timeout added in 2.5.1.\n\n2003-06-05 16:53  Martin Pool <mbp@samba.org>\n\n\t* NEWS, configure.ac: Prepare for 2.5.1 release.\n\n2003-06-05 16:48  Martin Pool <mbp@samba.org>\n\n\t* src/io.c, NEWS: sys/time.h might be needed for select on SuSE\n\t  7.1 (spe158).\n\n2003-06-05 16:45  Martin Pool <mbp@samba.org>\n\n\t* src/hosts.c, NEWS: dcc_parse_multiplier must advance over the\n\t  multiplier to be able to   read things like \"angry/30:3000\"\n\t  correctly.  Patch from Wayne Davison.\n\n2003-06-05 16:43  Martin Pool <mbp@samba.org>\n\n\t* linuxdoc/distcc.sgml: Get out these fixes in 2.5.1.\n\n2003-06-05 16:42  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py, NEWS: Add check for support of old\n\t  multiplier format. (angry/44:300)\n\n2003-06-05 16:41  Martin Pool <mbp@samba.org>\n\n\t* test/testdistcc.py: Doc\n\n2003-06-05 16:39  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Get out these fixes in 2.5.1.\n\n2003-06-05 16:36  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Get out these fixes in 2.5.1.\n\n2003-06-05 16:17  Martin Pool <mbp@samba.org>\n\n\t* src/: clinet.c, netutil.c, netutil.h, srvnet.c: Rename\n\t  everything called 'sa_len' because this is #defined on IRIX.\n\t  (Yuk)\n\n2003-06-05 16:12  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Fix IRIX.\n\n2003-06-05 16:09  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Recode as UTF-8.\n\n2003-06-05 16:08  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Solaris fixes from Tomas.\n\n2003-06-05 16:08  Martin Pool <mbp@samba.org>\n\n\t* src/daemon.h: dcc_master_pid is really a pid_t.\n\n2003-06-05 16:07  Martin Pool <mbp@samba.org>\n\n\t* src/netutil.c: Can't use \"sun\" as an identifier on gcc Solaris\n\t  8.\n\n2003-06-05 16:03  Martin Pool <mbp@samba.org>\n\n\t* doc/release-names.txt: [no log message]\n\n2003-06-04 23:19  Martin Pool <mbp@samba.org>\n\n\t* src/dparent.c: Doc.\n\n2003-06-04 11:22  Martin Pool <mbp@samba.org>\n\n\t* doc/status-1.txt: Notes on design possibilities.\n\n2003-06-03 08:37  Martin Pool <mbp@samba.org>\n\n\t* doc/noent.txt: Transient bug while compiling.\n\n2003-06-03 08:23  Martin Pool <mbp@samba.org>\n\n\t* doc/status-1.txt: Notes on status reporting\n\n2003-06-02 15:48  Martin Pool <mbp@samba.org>\n\n\t* src/netutil.c: This file needs snprintf.h\n\n\t  * AF_LOCAL might be missing on Solaris.\n\n2003-06-02 15:45  Martin Pool <mbp@samba.org>\n\n\t* TODO: [no log message]\n\n2003-06-02 14:46  Martin Pool <mbp@samba.org>\n\n\t* doc/release-names.txt: [no log message]\n\n2003-06-02 13:20  Martin Pool <mbp@samba.org>\n\n\t* src/dparent.c: Clarify \"%d CPUs online\" message.\n\n\t  http://groups.google.com/groups?q=distcc&hl=en&lr=&ie=UTF-8&oe=UTF-8&scoring=d&selm=1054494726.347698%40auth2.dns.griffin.net.uk&rnum=1\n\n2003-06-02 13:13  Martin Pool <mbp@samba.org>\n\n\t* survey.txt: Clarify privacy clause for survey.\n\n2003-06-02 13:11  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-05-31 00:29  Martin Pool <mbp@samba.org>\n\n\t* doc/protocol-1.txt: Start handling empty output files.\n\n2003-05-31 00:29  Martin Pool <mbp@samba.org>\n\n\t* TODO: [no log message]\n\n2003-05-30 23:49  Martin Pool <mbp@samba.org>\n\n\t* src/: bulk.c, distcc.h: dcc_open_read can be static.\n\n2003-05-30 23:47  Martin Pool <mbp@samba.org>\n\n\t* src/bulk.c: Remove dead code.\n\n2003-05-30 12:58  Martin Pool <mbp@samba.org>\n\n\t* linuxdoc/distcc.sgml: Add section about Mailing lists.\n\n2003-05-30 12:45  Martin Pool <mbp@samba.org>\n\n\t* src/dsignal.c: Doc.\n\n2003-05-29 09:00  Martin Pool <mbp@samba.org>\n\n\t* src/access.c: Doc\n\n2003-05-28 17:34  Martin Pool <mbp@samba.org>\n\n\t* src/: clinet.c, io.c: Increase timeout to 15s.\n\n\t  * Move select() check into dcc_select_for_read\n\n2003-05-28 17:28  Martin Pool <mbp@samba.org>\n\n\t* src/clinet.c: dcc_connect_timed: Add trace.\n\n2003-05-28 17:16  Martin Pool <mbp@samba.org>\n\n\t* src/clinet.c: Doc\n\n2003-05-28 17:13  Martin Pool <mbp@samba.org>\n\n\t* TODO, doc/results.txt: [no log message]\n\n2003-05-28 17:01  Martin Pool <mbp@samba.org>\n\n\t* src/clinet.c: Impose 5s timeout on opening TCP connections.\n\t  Change to using   nonblocking sockets (just while opening).\n\n2003-05-28 16:16  Martin Pool <mbp@samba.org>\n\n\t* Makefile.in: Move check functionality to maintainer-check,\n\t  because I don't want\t it to run by default on the build farm.\n\n2003-05-28 16:13  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-05-28 16:11  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Include hostdef string in \"failed to distribute\"\n\t  warning.\n\n2003-05-28 16:03  Martin Pool <mbp@samba.org>\n\n\t* src/: netutil.h, ssh.c, netutil.c: dcc_set_nonblocking,\n\t  dcc_set_blocking: Move to netutil.h\n\n2003-05-28 15:57  Martin Pool <mbp@samba.org>\n\n\t* TODO: The server in fact already generates the right extension\n\t  name for   temporary files.  But this might be a problem for the\n\t  proposed new protocol.\n\n2003-05-28 15:50  Martin Pool <mbp@samba.org>\n\n\t* src/serve.c: dcc_run_job: Split some code out into\n\t  dcc_input_tmpnam.\n\n2003-05-28 15:50  Martin Pool <mbp@samba.org>\n\n\t* doc/results.txt: [no log message]\n\n2003-05-28 15:46  Martin Pool <mbp@samba.org>\n\n\t* TODO: Preforking is now done.\n\n2003-05-28 15:45  Martin Pool <mbp@samba.org>\n\n\t* TODO: Thoughts on boredom and temporary file extensions.\n\n2003-05-28 15:29  Martin Pool <mbp@samba.org>\n\n\t* linuxdoc/distcc.sgml, NEWS: Document use from inetd.\n\n\t  * Document -j option.\n\n2003-05-28 15:08  Martin Pool <mbp@samba.org>\n\n\t* linuxdoc/distcc.sgml: Notes on running daemon from init and\n\t  standalone.\n\n2003-05-28 14:51  Martin Pool <mbp@samba.org>\n\n\t* NEWS: dcc_setpgid: Rename to dcc_new_pgrp.\n\n\t  * dcc_new_pgrp: Don't call setpgid() if we're already a process\n\t  group   leader, because this fails with EPERM if we happen to\n\t  also be a   session group leader.\n\n2003-05-28 14:42  Martin Pool <mbp@samba.org>\n\n\t* src/: dparent.c, exec.c, exec.h: dcc_setpgid: Rename to\n\t  dcc_new_pgrp.\n\n\t  * dcc_new_pgrp: Don't call setpgid() if we're already a process\n\t  group   leader, because this fails with EPERM if we happen to\n\t  also be a   session group leader.\n\n2003-05-28 14:31  Martin Pool <mbp@samba.org>\n\n\t* configure.ac: Bump version\n\n2003-05-28 14:13  Martin Pool <mbp@samba.org>\n\n\t* NEWS: Need types.h\n\n2003-05-28 14:03  Martin Pool <mbp@samba.org>\n\n\t* src/daemon.c: Need types.h\n\n2003-05-27 19:18  Martin Pool <mbp@samba.org>\n\n\t* src/serve.c: Tweak trace message.\n\n2003-05-27 19:17  Martin Pool <mbp@samba.org>\n\n\t* src/bulk.c: Disable dcc_x_file_timed, which is no longer\n\t  called.\n\n2003-05-27 19:12  Martin Pool <mbp@samba.org>\n\n\t* configure.ac, NEWS, doc/release-names.txt: Prepare for 2.5\n\t  release.\n\n2003-05-27 19:11  Martin Pool <mbp@samba.org>\n\n\t* src/daemon.c: Doc.\n\n\t  * If getpeername() fails on a socket then continue anyhow.\n\n2003-05-27 19:08  Martin Pool <mbp@samba.org>\n\n\t* TODO: SSH child is now collected by the client.\n\n2003-05-27 18:55  Martin Pool <mbp@samba.org>\n\n\t* NEWS: [no log message]\n\n2003-05-27 18:54  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Only collect SSH child if we actually started\n\t  one.\t(How   embarrassing.)\n\n2003-05-27 18:48  Martin Pool <mbp@samba.org>\n\n\t* src/distcc.c: Log elapsed time for whole compilation.\n\n2003-05-27 18:42  Martin Pool <mbp@samba.org>\n\n\t* src/: serve.c, clirpc.c: Don't time transmission of a file:\n\t  because a large fraction of it   can be stuck in network buffers\n\t  it is not a very accurate measure.\n\n2003-05-27 18:39  Martin Pool <mbp@samba.org>\n\n\t* TODO: [no log message]\n\n2003-05-27 18:35  Martin Pool <mbp@samba.org>\n\n\t* TODO: Note on handling SIGCHLD from cpp.\n\n2003-05-27 18:17  Martin Pool <mbp@samba.org>\n\n\t* src/: distcc.c: Doc.\n\n2003-05-27 18:16  Martin Pool <mbp@samba.org>\n\n\t* src/: clirpc.c, distcc.c, exec.c, exec.h, serve.c:\n\t  dcc_report_rusage: Merge into dcc_collect_child because they're\n\t  coupled.\n\n\t  * dcc_collect_child: Don't pass back rusage.\tDo take a\n\t  descriptive\tname for the child.\n\n\t  * dcc_compile_rem"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 10.4716796875,
          "content": "Installation instructions for distcc                  -*- indented-text -*-\n\ndistcc is free software; you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation; either version 2 of the License, or (at your\noption) any later version. distcc comes with ABSOLUTELY NO WARRANTY,\nfor details see the licence.\n\nPlease report any problems to distcc@lists.samba.com.\n\n\nQUICK SUMMARY\n=============\n\n0. Install prerequisites.  For example, on Debian or Ubuntu, you could use\n\n      sudo apt-get install gcc make python3 python3-dev python3-setuptools autoconf\n\n1. Build and install\n\n      ./autogen.sh              # If \"configure\" does not already exist.\n      ./configure\n      make\n      make check                # Optional! Should have python >= 3.1 installed.\n      make install              # You may need to use \"sudo\" for this command.\n      make installcheck         # Optional! Should have python >= 3.1 installed.\n      update-distcc-symlinks    # Needs \"sudo\". Run this again if you install/remove compilers\n\n   Repeat installation for each server machine.\n\n2. Run distccd on each server machine,\n   with --allow options to limit access.\n\n3. On your client machine, set DISTCC_POTENTIAL_HOSTS to the list\n   of distcc server machines:\n\n      export DISTCC_POTENTIAL_HOSTS='localhost red green blue'\n\n4. Build your software using distcc:\n\n      cd ~/my_sources/my_project\n      pump make -j40 CC=\"distcc gcc\" <your target>\n\n5. If you run into problems it is highly recommended to use DISTCC_VERBOSE=1\n   on the client and \"--log-level debug\" on the server.\n\nDETAILED INSTRUCTIONS\n=====================\n\nPrerequisites\n-------------\n\nTo build distcc you need\n\n   GNU Make\n   A C compiler\n\nIt is also highly desirable to have\n\n   Python >=3.1\n\n     To use \"pump\" mode, or to run the full test suite with \"make check\",\n     or to run the benchmarks.\n\nIf you have any version of Python installed, then you need to have\nthe corresponding Python.h file installed (e.g. sudo apt-get install python-dev).\n\nYou can optionally have\n\n   libpopt\n\n     If this is not found on your system, the popt version that is part of\n     the distcc distribution will be statically linked in.\n\n   linuxdoc SGML tools\n\n     To rebuild the documentation from its SGML source.\n\n   autoconf >=2.5\n\n     To rebuild the configure scripts if you edit configure.ac.\n\nTo build the optional GNOME monitor (--with-gnome), you need the\nGNOME2 development libraries, and in particular\n\n  gtk+ >=2.0\n  libgnome >=2.0\n  libgnomeui >= 2.0\n  libglade >= 2.0\n  libpango\n\nThe monitor can also be built without GNOME desktop integration\n(--with-gtk), in which case you need only\n\n  gtk+ >=2.0\n  libglade >= 2.0\n\n\nPreliminaries\n-------------\n\ndistcc can be installed and used without requiring root access.\nAdjust directories appropriately when installing.\n\n\nConfiguring distcc\n------------------\n\nNote that the default GNU \"sysconfdir\" is /usr/local/etc.  You may\nwant to change this to /etc.\n\n  $ ./configure --sysconfdir=/etc\n\nYou can set an installation prefix if you want to put distcc in /opt:\n\n  $ ./configure --prefix=/opt/distcc/\n\ndistcc needs to be installed on all client and server machines.\n\nIf you would like a graphical client-side monitor to show running\njobs, you can choose either --with-gnome or --with-gtk.\n\nIf you would like to try running distcc over IPv6, use\n--enable-rfc2553.  You must have a reasonably recent operating system\nor this is likely to fail in complex ways.\n\n\nBuilding distcc\n---------------\n\nThe simple way to build distcc is to just do\n\n  ./autogen.sh    # if \"configure\" does not already exist in this directory\n  ./configure && make\n\nbut the recommended way is to build in a different directory tree\nthan the source tree:\n\n  ./autogen.sh\n  mkdir obj\n  cd obj\n  ../configure && make\n\nYou can optionally run \"make check\" afterwards to verify that everything\nbuilt OK.\n\n\nInstalling distcc\n-----------------\n\nIf your system supports RPM packages, you can build RPMs with \"make rpm\"\nand then install them with \"rpm -i packaging/*.rpm\".\n\nIf your system supports Debian packages, you can build them with \"make deb\"\nand then install them with \"make install-deb\".\n\nOtherwise, you can use the regular \"make install\".  But it is preferable\nto install via an RPM or Debian package if possible, because those\nmethods will do a bit more of the setup work.\n\nYou can optionally run \"make installcheck\" afterwards to verify that\nwas installed OK.  This works regardless of which installation method\nyou used.\n\n\nStarting the daemon\n-------------------\n\nThis stage is only required if you want to run distcc over TCP\nsockets, rather than SSH connections.  TCP is faster but less secure\nand should only be used on trusted networks.\n\nIn TCP mode distccd can run either from inetd or as a standalone\ndaemon.  Running standalone is recommended.\n\nIf you installed via the debian or RPM package, then the daemon will be\ninstalled as a service, running as a standalone daemon, and it should get\nstarted up automatically, so you can skip the rest of this section\n\"Starting the daemon\".  The rest of this section only applies if you\ninstalled via \"make install\".\n\nTo run standalone, run a command like this, either from the command\nline or from the system startup scripts.\n\n  distccd --daemon\n\nIf the daemon is started from an rc script, then make sure that it\nsees a PATH setting which can find any compilers installed in\nnonstandard directories.\n\nYou should create a \"distcc\" account on server machines so that distcc\ncan run with minimal privilege.  It is not necessary for this account\nto own any files or have a home directory.  If this account doesn't\nexist, distccd uses the \"nobody\" account.\n\nBy default distccd writes messages to the \"daemon\" syslog, which\ntypically ends up in /var/log/messages or /var/log/daemon.\n\nYou can set IP-based access control using the --allow and --listen\noptions, in either inetd or daemon mode:\n\n  distccd --allow 10.4.20.0/24\n\ndistccd does not need to run on machines that will only act as\nclients.\n\nSee the manual for more information.\n\n\nEditing the daemon configuration files\n--------------------------------------\n\nIf you installed via the RPM or Debian package, then you\nwill have an /etc/init.d/distcc script which reads several\nconfiguration files to decide if and how to invoke distccd.\nThese configuration files are\n\n   /etc/default/distcc\n   /etc/distcc/clients.allow\n   /etc/distcc/commands.allow.sh\n\nIf you installed via the RPM or Debian package, then you\nshould edit those configuration files, especially the\nclients.allow file.\n\nIf you installed via \"make install\", then those configuration\nfiles will be installed, but they will NOT be used, unless\nyou manually install the init.d/distcc script from\npackaging/RedHat/init.d/distcc and tailor it for your system.\n\nIf you start distccd manually, rather than via the init.d/distcc script,\nthen distccd won't use any configuration files; the allowed client IP\naddresses will be determined by the --allow options that you pass to\ndistccd and the allowed commands will be determined by the DISTCC_CMDLIST\nenvironment variable; see the distccd(1) man page for details.\n\nSee also the doc/example directory and its README file, which\nhas examples of the configuration files that you need.\n\n\nSetting up the host list\n------------------------\n\nOn the client machines, store a list of servers names in\n~/.distcc/hosts or /etc/hosts, or in the DISTCC_HOSTS\nenvironment variable.\n\nIf you're using TCP connections, it should look like\nthis:\n\n  localhost red green blue\n\nFor SSH connections\n\n  localhost @red @green @blue\n\nThe hosts should be listed in descending order of speed.  localhost\nshould normally be first, unless it is significantly slower than\nanother machine.  If you have many hosts (say ten or more), it's probably\nbetter to leave localhost out of the list.\n\nThe host list also needs \",cpp,lzo\" after each host if you're using\npump mode - see README.pump for details.  Another alternative if you're\nusing pump mode is to set the DISTCC_POTENTIAL_HOSTS environment\nvariable; in that case, the pump script will use \"lsdistcc\" to\nset DISTCC_HOSTS, automatically eliminating hosts that are down\nor inaccessible or that don't have distccd running.\n\nSee the distcc(1) manual and the pump(1) manual for more information.\n\n\nUsing distcc\n------------\n\nDistcc will only improve performance if your build is parallelized.\nSo you need to use the \"-j\" option to make, or its equivalent with\nyour build tools.  If your build contains too many sequential steps,\ne.g. if your Makefile contains\n\n   all:\n            for subdir in $(SUBDIRS); do make -C $$subdir all; done\n\nthen you may need to rewrite your Makefile to get better parallelism.\nThis is especially important if you're using pump mode.\n\n\nUsing pump mode\n---------------\n\nTo use pump mode, invoke your build command via the \"pump\" script, e.g.\n\n      export DISTCC_POTENTIAL_HOSTS=\"localhost red blue green\"\n      cd ~/my_sources/my_project\n      pump make -j40 CC=\"distcc gcc\" my_target\n\nPump mode assumes that source files are not modified during the build.\nIf this assumption does not hold, you should not use pump mode.\nYou can disable pump mode by not using the pump script.\nIn that case, you need to set DISTCC_HOSTS rather than\nDISTCC_POTENTIAL_HOSTS.\n\n      export DISTCC_HOSTS=\"localhost red blue green\"\n      cd ~/my_sources/my_project\n      make -j40 CC=\"distcc gcc\" my_target\n\n\nCreating the masquerade directories\n-----------------------------------\n\nThe easiest way to use distcc is in \"masquerade\" mode, where it is\ninstalled on the PATH to \"catch\" calls to the compiler and redirect\nthem over the network.  Other options are discussed in the manual.\n\nFor instance, you could create the directory named /usr/lib/distcc\nand populate it with links.\n\n# mkdir /usr/lib/distcc\n# cd /usr/lib/distcc\n# ln -s /usr/bin/distcc gcc\n# ln -s /usr/bin/distcc cc\n# ln -s /usr/bin/distcc g++\n# ln -s /usr/bin/distcc c++\n\nIf you installed via the RedHat or Debian package, then this masquerade\ndirectory is already set up automatically in /usr/lib/distcc.\nDo this for all compiler names that you use.\n\nThen, to use distcc, a user just needs to put the directory\n/usr/lib/distcc/bin early in the PATH and distcc will handle the rest.\n\n  export PATH=/usr/lib/distcc/bin:$PATH\n\n\nUse with ccache\n---------------\n\nThe best way to use is to set up a similar masquerade directory for\nccache and put it on the PATH before distcc.\n\nNOTE: This use of ccache is incompatible with use of distcc's \"pump\" mode.\n\n(If you're using \"pump\" mode, it might be possible to use ccache on\nthe distcc server machines. But we haven't tried that setup.)\n"
        },
        {
          "name": "Makefile.in",
          "type": "blob",
          "size": 41.98046875,
          "content": "# Top-level Makefile(.in) for distcc\n\n# Copyright (C) 2002, 2003, 2004, 2025 by Martin Pool\n\n# Note that distcc no longer uses automake, but this file is still\n# structured in a somewhat similar way.\n\n## VARIABLES\n\nPACKAGE = @PACKAGE_NAME@\nVERSION = @PACKAGE_VERSION@\nPACKAGE_TARNAME = @PACKAGE_TARNAME@\nSHELL = @SHELL@\n\n# These autoconf variables may contain recursive Make expansions, and\n# so they have to be done here rather than written into config.h.\n\nCFLAGS = @CFLAGS@ @POPT_CFLAGS@\nWERROR_CFLAGS = @WERROR_CFLAGS@\nPYTHON_CFLAGS = @PYTHON_CFLAGS@\n\nLDFLAGS = @LDFLAGS@\nCC = @CC@\nCPP = @CPP@\n# We add a few cppflags.  -Isrc is so that config.h can be found in the build\n# directory.  It is before I\"$(srcdir)/src\" to reflect VPATH semantics.\nCPPFLAGS = @CPPFLAGS@ ${DIR_DEFS} \\\n\t   -Isrc -I\"$(srcdir)/src\" -I\"$(srcdir)/lzo\"\n\nPYTHON = @PYTHON@\n\nsrcdir = @srcdir@\ntop_srcdir = @top_srcdir@\nbuilddir = @builddir@\ntop_builddir = @top_builddir@\nVPATH = @srcdir@\nprefix = @prefix@\nexec_prefix = @exec_prefix@\n\nbindir = @bindir@\nsbindir = @sbindir@\nlibexecdir = @libexecdir@\ndatarootdir = @datarootdir@\ndatadir = @datadir@\nsysconfdir = @sysconfdir@\nsharedstatedir = @sharedstatedir@\nlocalstatedir = @localstatedir@\nlibdir = @libdir@\nmandir = @mandir@\nincludedir = @includedir@\noldincludedir = /usr/include\ndocdir = @docdir@\nicondir = $(datarootdir)/pixmaps\ndesktopdir = $(datarootdir)/applications\n\ninclude_server_builddir = $(builddir)/_include_server\n\n# These must be done from here, not from autoconf, because they can\n# contain variable expansions written in Make syntax.  Ew.\nDIR_DEFS = -DLIBDIR=\"\\\"${prefix}/lib\\\"\" -DSYSCONFDIR=\"\\\"${sysconfdir}\\\"\" -DICONDIR=\"\\\"${icondir}\\\"\"\n\n# arguments to pkgconfig\nGNOME_PACKAGES = @GNOME_PACKAGES@\nGNOME_CFLAGS = @GNOME_CFLAGS@\nGNOME_LIBS = @GNOME_LIBS@\n\nLIBS = @LIBS@ @POPT_LIBS@\n\nDESTDIR =\n\nINSTALL = @INSTALL@\nINSTALL_PROGRAM = @INSTALL_PROGRAM@\nINSTALL_DATA = @INSTALL_DATA@\nINSTALL_SCRIPT = @INSTALL_SCRIPT@\n\n# RESTRICTED_PATH is a colon separated list of directory names.  It\n# contains the locations of 'make', 'sh', 'gcc', and 'python' for use\n# in installation tests.  This path is used to avoid confusion caused\n# by distcc masquerades on the normal path.  See the\n# 'maintainer-check-no-set-path' target.\nRESTRICTED_PATH = /usr/local/bin:/bin:/usr/bin\n\n# The DISTCC_INSTALLATION variable is a colon separated list of\n# directory names of possible locations for the installation to be\n# checked.  Change the value of this variable to @bindir@ to check the\n# installation at the location determined by 'configure'.\nDISTCC_INSTALLATION = $(RESTRICTED_PATH)\n\ndist_files =\t\t\t\t\t\t\t\\\n\tsrc/config.h.in\t\t\t\t\t\t\\\n\t$(dist_lzo)\t\t\t\t\t\t\\\n\t$(dist_contrib)\t\t\t\t\t\t\\\n\t$(dist_patches)\t\t\t\t\t\t\\\n\t$(dist_common)\t\t\t\t\t\t\\\n\t$(MEN)\t\t\t\t\t\t\t\\\n\t$(pkgdoc_DOCS)\t\t\t\t\t\t\\\n\t$(example_DOCS)\t\t\t\t\t\t\\\n\t$(SRC) $(HEADERS)\t\t\t\t\t\\\n\t$(update_distcc_symlinks_PY)\t\t\t\t\\\n\t$(test_SOURCE)\t\t\t\t\t\t\\\n\t$(bench_PY)\t\t\t\t\t\t\\\n\t$(include_server_PY)                                    \\\n\t$(dist_include_server_SH)                               \\\n\t$(include_server_SRC)                                   \\\n\t$(check_include_server_DATA)                            \\\n\t$(check_include_server_PY)                              \\\n\t$(conf_files)                                           \\\n\t$(default_files)                                        \\\n\t$(dist_extra)\t\t\t\t\t\t\\\n\t$(gnome_data)\n\ndist_dirs = m4 include_server/test_data\n\ndist_lzo = lzo/minilzo.c \\\n\tlzo/minilzo.h \\\n\tlzo/lzoconf.h \\\n\tlzo/lzodefs.h \\\n\tlzo/.stamp-conf.in\n\ndist_contrib = contrib/distcc-absolutify\t\\\n\tcontrib/distcc.sh\t\t\\\n\tcontrib/distccd-init\t\t\\\n\tcontrib/distccd-on-servers\t\\\n\tcontrib/dmake\t\t\t\\\n\tcontrib/make-j\t\t\t\\\n\tcontrib/netpwd\t\t\t\\\n\tcontrib/stage-cc-wrapper.patch\t\\\n\tcontrib/redhat/init\t\t\\\n\tcontrib/redhat/logrotate\t\t\\\n\tcontrib/redhat/sysconfig\t\t\\\n\tcontrib/redhat/xinetd\n\ndist_include_server_SH = \\\n\tpump.in\n\nbench_PY = bench/Build.py \\\n\tbench/Project.py \\\n\tbench/ProjectDefs.py \\\n\tbench/Summary.py \\\n\tbench/actions.py \\\n\tbench/benchmark.py \\\n\tbench/buildutil.py \\\n\tbench/compiler.py \\\n\tbench/statistics.py\n\npkgdoc_DOCS = AUTHORS COPYING NEWS \\\n\tREADME README.pump \\\n\tINSTALL \\\n\tTODO \\\n\tdoc/protocol-1.txt doc/status-1.txt \\\n\tdoc/protocol-2.txt \\\n\tdoc/protocol-3.txt doc/protocol-3-impl.txt \\\n\tdoc/protocol-gssapi.txt \\\n\tdoc/reporting-bugs.txt\n\nexample_DOCS = \\\n\tdoc/example/README \\\n\tdoc/example/default \\\n\tdoc/example/hosts.allow \\\n\tdoc/example/services \\\n\tdoc/example/init doc/example/init-suse\t\\\n\tdoc/example/logrotate\t\t\t\t\\\n\tdoc/example/xinetd\t\t\t\t\\\n\ninclude_server_PY = \\\n\tinclude_server/basics.py \\\n\tinclude_server/cache_basics.py \\\n\tinclude_server/compiler_defaults.py \\\n\tinclude_server/compress_files.py \\\n\tinclude_server/include_analyzer.py \\\n\tinclude_server/include_analyzer_memoizing_node.py \\\n\tinclude_server/include_server.py \\\n\tinclude_server/macro_eval.py \\\n\tinclude_server/mirror_path.py \\\n\tinclude_server/parse_command.py \\\n\tinclude_server/parse_file.py \\\n\tinclude_server/run.py \\\n\tinclude_server/setup.py \\\n\tinclude_server/statistics.py\n\ninclude_server_SRC = \\\n\tinclude_server/c_extensions/distcc_pump_c_extensions_module.c\n\nupdate_distcc_symlinks_PY = update-distcc-symlinks.py\n\n# These are included in the distribution but not installed anywhere.\ndist_extra =\t\t\t\t\t\t\t\\\n\tREADME.packaging ChangeLog \\\n\tpackaging/RedHat/rpm.spec \\\n\tpackaging/RedHat/logrotate.d/distcc \\\n\tpackaging/RedHat/init.d/distcc \\\n\tpackaging/RedHat/xinetd.d/distcc \\\n\tpackaging/deb.sh \\\n\tpackaging/rpm.sh \\\n\tpackaging/googlecode_upload.py\n\n\nmkinstalldirs = $(SHELL) $(srcdir)/mkinstalldirs\nman1dir = $(mandir)/man1\nman8dir = $(mandir)/man8\n\ntest_SOURCE = test/comfychair.py \\\n\ttest/onetest.py \\\n\ttest/testdistcc.py \\\n\tfind_c_extension.sh\n\ndist_common = Makefile.in install-sh configure configure.ac \\\n\tconfig.guess config.sub mkinstalldirs autogen.sh\n\n# It seems a bit unnecessary to ship patches in the released tarballs.\n# People who are so keen as to apply unsupported patches ought to use\n# CVS, or at least get them from the list.\ndist_patches =\n\nTAR = tar\nGZIP_BIN = gzip\n# This is set on the environment, and automatically read by gzip.\n# This way we always get best compression, even when gzip is run in a\n# script we call, rather than being called by us directly.\nGZIP = -9v\nBZIP2_BIN = bzip2\n\ndistdir = $(PACKAGE_TARNAME)-$(VERSION)\ntarball = $(PACKAGE_TARNAME)-$(VERSION).tar\ntarball_bz2 = $(tarball).bz2\ntarball_gz = $(tarball).gz\ntarball_sig_bz2 = $(tarball_bz2).asc\ntarball_sig_gz = $(tarball_gz).asc\ndistnews = $(PACKAGE_TARNAME)-$(VERSION).NEWS\n\nrpm_glob_pattern = \"$(PACKAGE)\"*[-_.]\"$(VERSION)\"[-_.]*.rpm\ndeb_glob_pattern = \"$(PACKAGE)\"*[-_.]\"$(VERSION)\"[-_.]*.deb\n\ncommon_obj = src/arg.o src/argutil.o\t\t\t\t\t\\\n\tsrc/cleanup.o src/compress.o\t\t\t\t\t\\\n\tsrc/trace.o src/util.o src/io.o src/exec.o\t\t\t\\\n\tsrc/rpc.o src/tempfile.o src/bulk.o src/help.o src/filename.o\t\\\n\tsrc/lock.o\t\t\t\t\t\t\t\\\n\tsrc/netutil.o\t\t\t\t\t\t\t\\\n\tsrc/pump.o\t\t\t\t\t\t\t\\\n\tsrc/sendfile.o\t\t\t\t\t\t\t\\\n\tsrc/safeguard.o src/snprintf.o src/timeval.o\t\t\t\\\n\tsrc/dotd.o \t\t\t\t\t\t\t\\\n\tsrc/hosts.o src/hostfile.o\t\t\t\t\t\\\n\tsrc/implicit.o src/loadfile.o\t\t\t\t\t\\\n\tlzo/minilzo.o                                                   \\\n\t@ZEROCONF_COMMON_OBJS@\t\t\t\t\t\t\\\n\t@AUTH_COMMON_OBJS@\n\ndistcc_obj = src/backoff.o\t\t\t\t\t\t\\\n\tsrc/climasq.o src/clinet.o src/clirpc.o\t\t\t\t\\\n\tsrc/compile.o src/cpp.o\t\t\t\t\t\t\\\n\tsrc/distcc.o\t\t\t\t\t\t\t\\\n\tsrc/remote.o\t\t\t\t\t\t\t\\\n\tsrc/ssh.o src/state.o src/strip.o\t\t\t\t\\\n\tsrc/timefile.o src/traceenv.o\t\t\t\t\t\\\n\tsrc/include_server_if.o\t\t\t\t\t\t\\\n\tsrc/where.o\t\t\t\t\t\t\t\\\n\t@ZEROCONF_DISTCC_OBJS@\t\t\t\t\t\t\\\n\t@AUTH_DISTCC_OBJS@\t\t\t\t\t\t\\\n\tsrc/emaillog.o\t\t\t\t\t\t\t\\\n\t$(common_obj)\n\ndistccd_obj = src/access.o\t\t\t\t\t\t\\\n\tsrc/daemon.o  src/dopt.o src/dparent.o src/dsignal.o\t\t\\\n\tsrc/ncpus.o\t\t\t\t\t\t\t\\\n\tsrc/prefork.o\t\t\t\t\t\t\t\\\n\tsrc/stringmap.o\t\t\t\t\t\t\t\\\n\tsrc/serve.o src/setuid.o src/srvnet.o src/srvrpc.o src/state.o\t\\\n\tsrc/stats.o\t\t\t\t\t\t\t\\\n\tsrc/fix_debug_info.o\t\t\t\t\t\t\\\n\t@ZEROCONF_DISTCCD_OBJS@\t\t\t\t\t\t\\\n\t@AUTH_DISTCCD_OBJS@\t\t\t\t\t\t\\\n\t$(common_obj)\n\nlsdistcc_obj = src/lsdistcc.o \t\t\t\t\t\t\\\n\tsrc/clinet.o src/io.o src/netutil.o src/trace.o src/util.o \t\\\n\tsrc/rslave.o src/snprintf.o                                     \\\n\tlzo/minilzo.o\n\n# Objects that need to be linked in to build monitors\nmon_obj =\t\t\t\t\t\t\t\t\\\n\tsrc/cleanup.o\t\t\t\t\t\t\t\\\n\tsrc/filename.o\t\t\t\t\t\t\t\\\n\tsrc/io.o\t\t\t\t\t\t\t\\\n\tsrc/mon.o\t\t\t\t\t\t\t\\\n\tsrc/netutil.o\t\t\t\t\t\t\t\\\n\tsrc/argutil.o\t\t\t\t\t\t\t\\\n\tsrc/rpc.o\t\t\t\t\t\t\t\\\n\tsrc/snprintf.o src/state.o \t\t\t\t\t\\\n\tsrc/tempfile.o src/trace.o src/traceenv.o\t\t\t\\\n\tsrc/util.o\n\ngnome_obj = src/history.o src/mon-gnome.o\t\t\t\t\\\n\tsrc/renderer.o\n\nh_exten_obj = src/h_exten.o $(common_obj)\nh_issource_obj = src/h_issource.o $(common_obj)\nh_scanargs_obj = src/h_scanargs.o $(common_obj)\nh_hosts_obj = src/h_hosts.o $(common_obj)\nh_argvtostr_obj = src/h_argvtostr.o $(common_obj)\nh_strip_obj = src/h_strip.o $(common_obj) src/strip.o\nh_parsemask_obj = src/h_parsemask.o $(common_obj) src/access.o\nh_sa2str_obj = src/h_sa2str.o $(common_obj) src/srvnet.o src/access.o\nh_ccvers_obj = src/h_ccvers.o $(common_obj)\nh_dotd_obj = src/h_dotd.o $(common_obj)\nh_fix_debug_info = src/h_fix_debug_info.o $(common_obj)\nh_compile_obj = src/h_compile.o $(common_obj) src/compile.o src/timefile.o \\\n                src/backoff.o src/emaillog.o src/remote.o src/clinet.o \\\n\t        src/clirpc.o src/include_server_if.o src/state.o src/where.o \\\n\t\tsrc/ssh.o src/strip.o src/cpp.o @AUTH_DISTCC_OBJS@\nh_getline_obj = src/h_getline.o $(common_obj)\n\n# All source files, for the purposes of building the distribution\nSRC =\tsrc/stats.c\t\t\t\t\t\t\t\\\n\tsrc/access.c src/arg.c src/argutil.c\t\t\t\t\\\n\tsrc/auth_common.c src/auth_distcc.c src/auth_distccd.c\t\t\\\n\tsrc/backoff.c src/bulk.c\t\t\t\t\t\\\n\tsrc/cleanup.c\t\t\t\t\t\t\t\\\n\tsrc/climasq.c src/clinet.c src/clirpc.c src/compile.c\t\t\\\n\tsrc/compress.c src/cpp.c\t\t\t\t\t\\\n\tsrc/daemon.c src/distcc.c src/dsignal.c\t\t\t\t\\\n\tsrc/dopt.c src/dparent.c src/exec.c src/filename.c\t\t\\\n\tsrc/h_argvtostr.c\t\t\t\t\t\t\\\n\tsrc/h_exten.c src/h_hosts.c src/h_issource.c src/h_parsemask.c\t\\\n\tsrc/h_sa2str.c src/h_scanargs.c src/h_strip.c\t\t\t\\\n\tsrc/h_dotd.c src/h_compile.c src/h_getline.c\t\t\t\\\n\tsrc/help.c src/history.c src/hosts.c src/hostfile.c\t\t\\\n\tsrc/implicit.c src/io.c\t\t\t\t\t\t\\\n\tsrc/loadfile.c src/lock.c \t\t\t\t\t\\\n\tsrc/mon.c src/mon-notify.c src/mon-text.c\t\t\t\\\n\tsrc/mon-gnome.c\t\t\t\t\t\t\t\\\n\tsrc/ncpus.c src/netutil.c\t\t\t\t\t\\\n\tsrc/prefork.c src/pump.c\t\t\t\t\t\\\n\tsrc/remote.c src/renderer.c src/rpc.c\t\t\t\t\\\n\tsrc/safeguard.c src/sendfile.c src/setuid.c src/serve.c\t\t\\\n\tsrc/snprintf.c src/state.c\t\t\t\t\t\\\n\tsrc/srvnet.c src/srvrpc.c src/ssh.c \t\t\t\t\\\n\tsrc/stringmap.c src/strip.c\t\t\t\t\t\\\n\tsrc/tempfile.c src/timefile.c                     \t\t\\\n\tsrc/timeval.c src/traceenv.c\t\t\t\t\t\\\n\tsrc/trace.c src/util.c src/where.c\t\t\t\t\\\n\tsrc/lsdistcc.c src/rslave.c\t\t\t\t\t\\\n\tsrc/dotd.c src/include_server_if.c\t\t\t\t\\\n\tsrc/emaillog.c\t\t\t\t\t\t\t\\\n\tsrc/fix_debug_info.c\t\t\t\t\t\t\\\n\tsrc/zeroconf.c src/zeroconf-reg.c src/gcc-id.c\n\n\nHEADERS = src/stats.h\t\t\t\t\t\t\t\\\n\tsrc/access.h\t\t\t\t\t\t\t\\\n\tsrc/auth.h\t\t\t\t\t\t\t\\\n\tsrc/bulk.h\t\t\t\t\t\t\t\\\n\tsrc/clinet.h src/compile.h\t\t\t\t\t\\\n\tsrc/daemon.h\t\t\t\t\t\t\t\\\n\tsrc/distcc.h src/dopt.h src/exitcode.h\t\t\t\t\\\n\tsrc/fix_debug_info.h\t\t\t\t\t\t\\\n\tsrc/hosts.h src/implicit.h\t\t\t\t\t\\\n\tsrc/mon.h\t\t\t\t\t\t\t\\\n\tsrc/netutil.h\t\t\t\t\t\t\t\\\n\tsrc/renderer.h src/rpc.h\t\t\t\t\t\\\n\tsrc/snprintf.h src/state.h\t\t \t\t\t\\\n\tsrc/stringmap.h\t\t\t\t\t\t\t\\\n\tsrc/timefile.h src/timeval.h src/trace.h\t\t\t\\\n\tsrc/types.h\t\t\t\t\t\t\t\\\n\tsrc/util.h\t\t\t\t\t\t\t\\\n\tsrc/exec.h src/lock.h src/where.h src/srvnet.h\t\t\t\\\n\tsrc/rslave.h\t\t\t\t\t\t\t\\\n\tsrc/dotd.h src/include_server_if.h\t\t\t\t\\\n\tsrc/emaillog.h \t\t\t\t\t\t\t\\\n\tsrc/va_copy.h \t\t\t\t\t\t\t\\\n\tsrc/zeroconf.h\n\nconf_dir = packaging/RedHat/conf\nconf_files = $(conf_dir)/hosts \\\n\t     $(conf_dir)/clients.allow \\\n\t     $(conf_dir)/commands.allow.sh\ndefault_dir = packaging/RedHat/default\ndefault_files = $(default_dir)/distcc\n\nman1_MEN = man/distcc.1 man/distccd.1 man/distccmon-text.1 \\\n           man/lsdistcc.1 man/pump.1 man/include_server.1\nman_HTML = man/distcc_1.html man/distccd_1.html man/distccmon_text_1.html \\\n           man/lsdistcc_1.html man/pump_1.html man/include_server_1.html\nMEN = $(man1_MEN)\n\ngnome_data = gnome/distccmon-gnome.png\t\\\n\tgnome/distccmon-gnome.desktop\n\n# You might think that distccd ought to be in sbin, because it's a\n# daemon.  It is a grey area.  However, the Linux Filesystem Hierarchy\n# Standard (FHS 2.2) says that sbin is for programs \"used exclusively\n# by the system administrator\".\n\n# distccd will often be used by non-root users, and when we support\n# ssh it will be somewhat important that it be found in their default\n# path.  Therefore on balance it seems better to put it in bin/.\n\n# Package maintainers can override this if absolutely necessary, but I\n# would prefer that they do not. -- mbp\n\nbin_PROGRAMS = \\\n\tdistcc@EXEEXT@ \\\n\tdistccd@EXEEXT@ \\\n\tdistccmon-text@EXEEXT@ \\\n\tlsdistcc@EXEEXT@ \\\n\t@GNOME_BIN@\n\nsbin_PROGRAMS = \\\n\tupdate-distcc-symlinks\n\ncheck_PROGRAMS = \\\n\th_argvtostr@EXEEXT@ \\\n\th_exten@EXEEXT@ \\\n\th_fix_debug_info@EXEEXT@ \\\n\th_hosts@EXEEXT@ \\\n\th_issource@EXEEXT@ \\\n\th_parsemask@EXEEXT@ \\\n\th_sa2str@EXEEXT@ \\\n\th_scanargs@EXEEXT@ \\\n\th_strip@EXEEXT@ \\\n\th_dotd@EXEEXT@ \\\n\th_compile@EXEEXT@ \\\n\th_getline@EXEEXT@\n\ncheck_include_server_PY = \\\n\tinclude_server/c_extensions_test.py \\\n\tinclude_server/include_server_test.py \\\n\tinclude_server/macro_eval_test.py \\\n\tinclude_server/mirror_path_test.py \\\n\tinclude_server/parse_command_test.py \\\n\tinclude_server/parse_file_test.py \\\n\tinclude_server/include_analyzer_test.py \\\n\tinclude_server/include_analyzer_memoizing_node_test.py \\\n\tinclude_server/basics_test.py\n\n\n######################################################################\n## IMPLICIT BUILD rules\n\n.SUFFIXES: .html .latte .o .c\n\n.c.o:\n\t$(CC) $(CPPFLAGS) $(WERROR_CFLAGS) $(CFLAGS) -o $@ -c $<\n\n\n######################################################################\n## OVERALL targets\n\n.PHONY: all include-server\n\n## NOTE: \"all\" must be the first (default) rule, aside from patterns.\n\nall: $(bin_PROGRAMS) $(sbin_PROGRAMS) pump include-server\n\n#  src/config.h.in is used by config.status\nMakefile: Makefile.in src/config.h.in config.status\n\t./config.status\n\n\n######################################################################\n## BUILD targets\n\n# We would like to detect when config.h.in has changed: this should trigger\n# config.status to be rerun. But if the config.h file actually does not change\n# as a result of running config.status (a feature of autoconf), then\n# config.status will be rerun every time. That's confusing. So, the rule\n#\n# src/config.h: src/config.h.in\n#        ./config.status\n#\n# is not sufficient.\n\nsrc/config.h: src/config.h.stamp\n\nsrc/config.h.stamp: src/config.h.in\n\techo \"path: $$PATH\"\n\t./config.status\n\ttouch src/config.h.stamp\n\npump: pump.in config.status\n\t./config.status\n\n# Grab the dependency files generated by gcc's -MD option.\n-include */*.d\n\ndistcc@EXEEXT@: $(distcc_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(distcc_obj) $(LIBS)\n\ndistccd@EXEEXT@: $(distccd_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(distccd_obj) $(LIBS)\n\ndistccmon-text@EXEEXT@: $(mon_obj) src/mon-text.o\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(mon_obj) src/mon-text.o $(LIBS)\n\nlsdistcc@EXEEXT@: $(lsdistcc_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(lsdistcc_obj) $(LIBS)\n\nupdate-distcc-symlinks: $(update_distcc_symlinks_PY)\n\tsed -e \"s;\\@prefix\\@;${prefix};g\" $< > $@.tmp\n\tchmod +x $@.tmp\n\tmv $@.tmp $@\n\nh_exten@EXEEXT@: $(h_exten_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(h_exten_obj) $(LIBS)\n\nh_issource@EXEEXT@: $(h_issource_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(h_issource_obj) $(LIBS)\n\nh_sa2str@EXEEXT@: $(h_sa2str_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(h_sa2str_obj) $(LIBS)\n\nh_scanargs@EXEEXT@: $(h_scanargs_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(h_scanargs_obj) $(LIBS)\n\nh_hosts@EXEEXT@: $(h_hosts_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(h_hosts_obj) $(LIBS)\n\nh_argvtostr@EXEEXT@: $(h_argvtostr_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(h_argvtostr_obj) $(LIBS)\n\nh_parsemask@EXEEXT@: $(h_parsemask_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(h_parsemask_obj) $(LIBS)\n\nh_strip@EXEEXT@: $(h_strip_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(h_strip_obj) $(LIBS)\n\nh_ccvers@EXEEXT@: $(h_ccvers_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(h_ccvers_obj) $(LIBS)\n\nh_dotd@EXEEXT@: $(h_dotd_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(h_dotd_obj) $(LIBS)\n\nh_fix_debug_info@EXEEXT@: $(h_fix_debug_info)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(h_fix_debug_info) $(LIBS)\n\nh_compile@EXEEXT@: $(h_compile_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(h_compile_obj) $(LIBS)\n\nh_getline@EXEEXT@: $(h_getline_obj)\n\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(h_getline_obj) $(LIBS)\n\n\nsrc/h_fix_debug_info.o: src/fix_debug_info.c\n\t$(CC) -c -o $@ $(CPPFLAGS) $(CFLAGS) \\\n\t\t-DTEST \\\n\t\t$(srcdir)/src/fix_debug_info.c\n\nsrc/mon-gnome.o: src/mon-gnome.c\n\t$(CC) -c -o $@ $(CPPFLAGS) $(CFLAGS) \\\n\t\t$(GNOME_CFLAGS) \\\n\t\t$(srcdir)/src/mon-gnome.c\n\nsrc/renderer.o: src/renderer.c\n\t$(CC) -c -o $@ $(CPPFLAGS) $(CFLAGS)\t\t\t\\\n\t\t$(GNOME_CFLAGS) \\\n\t\t$(srcdir)/src/renderer.c\n\ndistccmon-gnome@EXEEXT@: $(mon_obj) $(gnome_obj)\n\t$(CC) -o $@ $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) \\\n\t\t$(mon_obj) $(gnome_obj) \\\n\t\t$(LIBS) $(GNOME_CFLAGS) $(GNOME_LIBS)\n\n# The include-server is a python app, so we use Python's build system.  We pass\n# the distcc version, the source location, the CPP flags (for location of the\n# includes), and the build location.\ninclude-server:\n\tif test -z \"$(PYTHON)\"; then\t\\\n\t  echo \"Not building $@: No suitable python found\"; \\\n\telse\t\t\t\t\t\t\\\n\t  mkdir -p \"$(include_server_builddir)\" &&      \\\n\t  DISTCC_VERSION=\"$(VERSION)\"\t\t\t\\\n\t  SRCDIR=\"$(srcdir)\"                            \\\n\t  CFLAGS=\"$(CFLAGS) $(PYTHON_CFLAGS)\"           \\\n\t  CPPFLAGS=\"$(CPPFLAGS)\"                        \\\n\t  $(PYTHON) \"$(srcdir)/include_server/setup.py\" \\\n\t      build \t\t\t\t\t\\\n\t        --build-base=\"$(include_server_builddir)\"  \\\n\t        --build-temp=\"$(include_server_builddir)\"; \\\n\tfi\n\n\n######################################################################\n## DIST TARGETS\n\n.PHONY: dist distcheck dist-sign dist-files\n\n# The sub-targets copy (and if necessary, build) various files that\n# have to go into the tarball.  They also create necessary directories\n# -- bear in mind that they might be run in parallel.\n\n# This looks a bit gross to me, but it's not as bad as it might be :-/\n\n# TODO(csilvers): add 'make rpm' and 'make deb'.\n\ndist:\n\t-rm -fr \"$(distdir)\"\n\t$(MAKE) dist-files\n\t$(TAR) cf \"$(tarball)\" \"$(distdir)\"\n\t$(GZIP_BIN) --help >/dev/null 2>&1 && \\\n\t\t$(GZIP_BIN) -fc \"$(tarball)\" > \"$(tarball_gz)\"\n\t$(BZIP2_BIN) --help 2>/dev/null && \\\n\t\t$(BZIP2_BIN) -vfc \"$(tarball)\" > \"$(tarball_bz2)\"\n\trm -f \"$(tarball)\"\n\trm -fr \"$(distdir)\"\n\tcp \"$(srcdir)/NEWS\" \"$(distnews)\"\n\n# We create two new directories: one for the build and one to install,\n# and make sure we can build and install from different directories\n# than the source directory.  Then we run a \"make distclean\" and\n# verify it got rid of everything not in the tarball by deleting every\n# file mentioned in the tarball, and then making sure nothing is left.\ndistcheck: dist\n\t[ ! -d +distcheck ] || chmod -R u+w +distcheck\n\trm -rf '+distcheck'\n\tmkdir '+distcheck'\n\tcd '+distcheck' && $(GZIP_BIN) -d < \"../$(tarball_gz)\" | $(TAR) xvf -\n\tmkdir \"+distcheck/$(distdir)/_build\"\n\tmkdir \"+distcheck/$(distdir)/_inst\"\n\tchmod -R a-w +distcheck\n\tchmod u+w \"+distcheck/$(distdir)/_build\" \"+distcheck/$(distdir)/_inst\"\n\tdc_install_base=`cd \"+distcheck/$(distdir)/_inst\" && pwd` \\\n\t&& cd \"+distcheck/$(distdir)/_build\" \\\n\t&& ../configure --srcdir=.. --prefix=\"$$dc_install_base\" \\\n\t&& $(MAKE) && $(MAKE) maintainer-check \\\n\t&& $(MAKE) install \\\n\t&& $(MAKE) DISTCC_INSTALLATION=\"$$dc_install_base/bin\" \\\n\t        maintainer-installcheck \\\n\t&& $(MAKE) distclean\n\tchmod -R u+w +distcheck\n\ttest `find \"+distcheck/$(distdir)/_build\" -type f -print | wc -l` -eq 0 \\\n\t\t|| { echo \"ERROR: files left in build-dir after distclean:\"; \\\n                     find \"+distcheck/$(distdir)/_build\" -type f -print; \\\n\t             rm -rf '+distcheck'; \\\n\t             exit 1; }\n\trm -rf '+distcheck'\n\ndist-sign:\n\tgpg -a --detach-sign \"$(tarball_bz2)\"\n\n# For the dirs we copy, we don't want to copy control files like '.cvs'.\n# We use find for this; if 'find' doesn't work, just don't worry about it.\ndist-files: $(dist_files)\n\tfor f in $(dist_files) $(dist_dirs); do \\\n\t  mkdir -p \"$(distdir)\"/`dirname \"$$f\"` || exit 1; \\\n\t  cp -pR \"$(srcdir)/$$f\" \"$(distdir)/$$f\" 2>/dev/null || \\\n\t      cp -pR \"$$f\" \"$(distdir)/$$f\" || exit 1; \\\n\tdone\n\tfor f in $(dist_dirs); do \\\n\t  find \"$(distdir)/$$f\" -name '.[^.]*' -exec rm -rf \\{\\} \\; -prune ; \\\n\tdone\n\n\n######################################################################\n## BUILD manual targets\n\nman/distcc_1.html: man/distcc.1\n\ttroff2html -man \"$(srcdir)\"/man/distcc.1 > $@\n\nman/distccd_1.html: man/distccd.1\n\ttroff2html -man \"$(srcdir)\"/man/distccd.1 > $@\n\nman/distccmon_text_1.html: man/distccmon-text.1\n\ttroff2html -man \"$(srcdir)\"/man/distccmon-text.1 > $@\n\nman/lsdistcc_1.html: man/lsdistcc.1\n\ttroff2html -man \"$(srcdir)\"/man/lsdistcc.1 > $@\n\nman/pump_1.html: man/pump.1\n\ttroff2html -man \"$(srcdir)\"/man/pump.1 > $@\n\nman/include_server_1.html: man/include_server.1\n\ttroff2html -man \"$(srcdir)\"/man/include_server.1 > $@\n\n######################################################################\n## CHECK targets for code that has been build.\n\n.PHONY: check_programs\n.PHONY: maintainer-check-no-set-path distcc-maintainer-check\n.PHONY: include-server-maintainer-check pump-maintainer-check\n.PHONY: maintainer-check\n.PHONY: check\n.PHONY: lzo-check valgrind-check single-test pump-single-test\n\ncheck_programs: $(check_PROGRAMS) $(bin_PROGRAMS)\n\nTESTDISTCC_OPTS =\n\n# This target is for internal use by distcc-maintainer-check and\n# distcc-installcheck.  These rules differ only in their choice of the value of\n# PATH to use.  PATH must be set appropriately so that python, distcc binaries,\n# gcc, and those of the check_PROGRAMS, can be found on PATH.  This is done in\n# the call of this target through use of the variable RESTRICTED_PATH.\n#\n# The more prominent of these conditions are checked explicitly checked below.\n#\n# TODO(klarlund): the outermost if assumes that the include-server target may be\n# satisfied w/o actually building an include server (or rather the C extension);\n# this logic needs to be verified or amended.\nmaintainer-check-no-set-path:\n\t@if ! $(PYTHON) -c 'import sys; print(sys.version)'; then \\\n\t  echo \"WARNING: python not found; tests skipped\"; \\\n\telse \\\n\t  if ! $(CC) --version 2>/dev/null; then \\\n\t    echo \"Could not find CC on the restricted path used to avoid\"; \\\n\t    echo \"confusion caused by distcc masquerades on the normal path.\"; \\\n\t    echo \"PATH is currently '$$PATH'.\"; \\\n\t    echo \"Please change RESTRICTED_PATH to change this PATH value.\"; \\\n\t    exit 1; \\\n\t  fi; \\\n\t  $(PYTHON) \"$(srcdir)/test/testdistcc.py\" $(TESTDISTCC_OPTS); \\\n\tfi\n\ndistcc-maintainer-check: check_programs\n\t $(MAKE) PATH=\"`pwd`:$(RESTRICTED_PATH)\" \\\n\t   TESTDISTCC_OPTS=\"$(TESTDISTCC_OPTS)\" maintainer-check-no-set-path\n\n# If the include server extension module was built, then run the tests include\n# server.  TODO(klarlund): the outermost if assumes that the include-server\n# target may be satisfied w/o actually building an include server (or rather the\n# C extension); this logic needs to be verified or amended.\n# TODO(csilvers): keep track of failures instead of exiting on the first one.\ninclude-server-maintainer-check: include-server\n\t@if ! test -d \"$(include_server_builddir)\"; then \\\n\t  echo \"Skipped include-server check\"; \\\n\telse \\\n\t  CURDIR=`pwd`; \\\n\t  include_server_loc=`\"$(srcdir)/find_c_extension.sh\" \"$(builddir)\"`; \\\n\t  test $$? = 0 || (echo 'Could not locate extension.' 1>&2 && exit 1); \\\n\t  cd \"$(srcdir)/include_server\"; \\\n\t  for p in $(check_include_server_PY); do \\\n\t    p_base=`basename \"$$p\"`; \\\n\t    echo \"Running:\" \\\n              \"PYTHONPATH=$$CURDIR/$$include_server_loc:$$PYTHONPATH $(PYTHON) $$p_base\"; \\\n\t    if PYTHONPATH=\"$$CURDIR/$$include_server_loc:$$PYTHONPATH\" $(PYTHON) \"$$p_base\" \\\n\t\t > \"$$CURDIR/$(tempdir)/$$p_base.out\" 2>&1; then \\\n\t      echo \"PASS\"; \\\n\t      rm \"$$CURDIR/$(tempdir)/$$p_base.out\"; \\\n            else \\\n              echo \"FAIL\"; cat \"$$CURDIR/$(tempdir)/$$p_base.out\"; exit 1; \\\n\t    fi; \\\n\t  done; \\\n\tfi\n\n# Do distcc-maintainer-check in pump-mode, if possible.\npump-maintainer-check: pump include-server check_programs\n\t@if [ -d \"$(include_server_builddir)\" ]; then \\\n\t  DISTCC_HOSTS='<invalid>,cpp,lzo' \\\n\t    \"$(builddir)/pump\" \\\n\t        $(MAKE) \\\n\t        RESTRICTED_PATH=\"$(RESTRICTED_PATH)\" \\\n\t        TESTDISTCC_OPTS=\"--pump $(TESTDISTCC_OPTS)\" \\\n\t        distcc-maintainer-check; \\\n\tfi\n\n# Do distcc-maintainer-check, for non-pumped distcc, and try the include_server\n# check to check the include server's behavior, if applicable.  If the include\n# server exists, then carry out distcc-maintainer-check in pump-mode.\nmaintainer-check: distcc-maintainer-check include-server-maintainer-check \\\n\tpump-maintainer-check\n\ncheck:\n\t@if test -n \"$(PYTHON)\"; then \\\n\t   $(MAKE) maintainer-check; \\\n\telse \\\n\t   echo \"WARNING: pump-mode not being tested\"; \\\n\t   $(MAKE) distcc-maintainer-check; \\\n\tfi\n\n# Runs the tests in lzo-mode.\nlzo-check:\n\t$(MAKE) TESTDISTCC_OPTS=--lzo maintainer-check\n\n# Runs the tests with valgrind.\nvalgrind-check:\n\t$(MAKE) TESTDISTCC_OPTS=--valgrind maintainer-check\n\n# The following target is useful for running a single test at a time.\n# Sample usage:\n#    make TESTNAME=Lsdistcc_Case single-test\n#    make TESTNAME=Lsdistcc_Case TESTDISTCC_OPTS=--valgrind single-test\nTESTNAME = NoDetachDaemon_Case  # Override this with the desired test.\nsingle-test: check_programs\n\tPATH=\"`pwd`:$(RESTRICTED_PATH)\" \\\n\t    $(PYTHON) \"$(srcdir)/test/onetest.py\" $(TESTDISTCC_OPTS) $(TESTNAME)\n\n# Run a single test in pump-mode.\npump-single-test: pump include-server check_programs\n\tDISTCC_HOSTS='<invalid>,cpp,lzo' \\\n\t    \"$(builddir)/pump\" \\\n\t        $(MAKE) \\\n\t        RESTRICTED_PATH=\"$(RESTRICTED_PATH)\" \\\n\t        TESTDISTCC_OPTS=\"--pump $(TESTDISTCC_OPTS)\" \\\n\t        single-test\n\n######################################################################\n## CHECK targets for code that has been installed.\n\n.PHONY: pump-installcheck distcc-installcheck maintainer-installcheck\n.PHONY: installcheck verify-binaries-installcheck daemon-installcheck\n\n# Verify that DISTCC_INSTALLATION contains the expected set of binaries.\nverify-binaries-installcheck:\n\t@echo \"Locating binaries in\" \\\n\t      \"DISTCC_INSTALLATION='$(DISTCC_INSTALLATION)'\"\n\t@echo \"To use installation in @bindir@, remake with\" \\\n\t       \"argument 'DISTCC_INSTALLATION=@bindir@'.\"\n\t@echo \"Make sure all paths below are where you expect them to be:\"\n\t@echo \"**********************************************************\"\n\t@for p in $(bin_PROGRAMS); do \\\n\t  if ! PATH=\"$(DISTCC_INSTALLATION)\" `which which` \"$$p\"; then \\\n\t    echo \"Binary '$$p' could not be found in DISTCC_INSTALLATION.\"; \\\n\t    exit 1; \\\n\t  fi; \\\n\tdone\n\t@echo \"**********************************************************\"\n\n# Lookup distcc programs to be checked in $(DISTCC_INSTALLATION).  The\n# check_PROGRAMS binaries, however, are to be found in $(builddir).\ndistcc-installcheck: $(check_PROGRAMS)\n\tBUILDDIR=`cd \"$(builddir)\" && pwd`; \\\n\tPATH=\"$(DISTCC_INSTALLATION):$$BUILDDIR:$(RESTRICTED_PATH)\" \\\n\t  TESTDISTCC_OPTS=\"$(TESTDISTCC_OPTS)\" \\\n\t  $(MAKE) maintainer-check-no-set-path\n\n# Check the installation to see whether pump-mode works.\npump-installcheck:\n\twhich_loc=`which which`; \\\n\tpump_loc=`PATH=\"$(DISTCC_INSTALLATION)\" \"$$which_loc\" pump`; \\\n\tDISTCC_HOSTS='<invalid>,cpp,lzo' \\\n\t  \"$$pump_loc\" \\\n            $(MAKE) DISTCC_INSTALLATION=\"$(DISTCC_INSTALLATION)\" \\\n\t      RESTRICTED_PATH=\"$(RESTRICTED_PATH)\" \\\n              TESTDISTCC_OPTS=--pump distcc-installcheck; \\\n\n# \"make maintainer-installcheck\" verifies the currently installed version in\n# RESTRICTED_PATH.  It does not have the \"install\" target as a dependency so\n# that you can can check an installation that is installed via some different\n# method (e.g. rpm or debian package).  You must specify the location of such an\n# installation by overriding the value of DISTCC_INSTALLATION.\n#\n# The maintainer-installcheck does not run the include server unit tests;\n# but the integration tests in 'test' are run in pump mode.\nmaintainer-installcheck: verify-binaries-installcheck distcc-installcheck \\\n\tpump-installcheck\n\ninstallcheck:\n\t@if test -n \"$(PYTHON)\"; then \\\n\t   $(MAKE) maintainer-installcheck; \\\n\telif test -n \"$(PYTHON)\"; then \\\n\t   echo \"WARNING: pump-mode not being tested\"; \\\n\t   $(MAKE) distcc-maintainer-installcheck; \\\n\telse \\\n\t   echo \"Cannot run install-tests: python binary not found\"; \\\n\t   false; \\\n\tfi\n\n# This tests that the distcc daemon is running, and that it and distcc\n# and the pump script have been installed correctly, by compiling a simple\n# hello world program with distcc and distcc-pump.\n# This can be used after \"make install-deb\".\n#\n# This uses distcc from your PATH and (for the first test)\n# may use DISTCC_HOSTS from your environment or /etc/distcc/hosts.\n#\n# This test might fail if the --allow options passed to distccd\n# (which may be set in the /etc/distcc/clients.allow file)\n# do not include 127.0.0.1.\ndaemon-installcheck:\n\tmkdir -p _testtmp/daemon-installcheck && \\\n\t    cd _testtmp/daemon-installcheck && \\\n\t    echo '#include <stdio.h>' > hello.c && \\\n\t    echo 'int main(void) { puts(\"hello world\"); return 0; }' >> hello.c && \\\n\t    rm -f hello.o && \\\n\t    DISTCC_FALLBACK=0 distcc $(CC) $(CFLAGS) -c hello.c -o hello.o && \\\n\t    test -f hello.o && \\\n\t    rm -f hello.o && \\\n\t    DISTCC_POTENTIAL_HOSTS=127.0.0.1 DISTCC_FALLBACK=0 \\\n\t        pump distcc $(CC) $(CFLAGS) -c hello.c -o hello.o && \\\n\t    test -f hello.o\n\n######################################################################\n## BENCHMARK targets\n\n.PHONY: benchmark\n\nbenchmark:\n\t@echo \"The distcc macro-benchmark uses your existing distcc installation\"\n\t@if [ -n \"$$DISTCC_HOSTS\" ]; \\\n\tthen echo \"DISTCC_HOSTS=\\\"$$DISTCC_HOSTS\\\"\"; \\\n\telse echo \"You must set up servers and set DISTCC_HOSTS before running the benchmark\"; \\\n\texit 1; \\\n\tfi\n\t@echo \"This benchmark may download a lot of source files, and it takes a \"\n\t@echo \"long time to run.  Interrupt now if you want.\"\n\t@echo\n\t@echo \"Pass BENCH_ARGS to make to specify which benchmarks to run.\"\n\t@echo\n\t@sleep 5\n\tcd bench && $(PYTHON) benchmark.py $(BENCH_ARGS)\n\n\n######################################################################\n## CLEAN targets\n\n.PHONY: clean clean-autoconf clean-lzo clean-include-server\n.PHONY: maintainer-clean maintainer-clean-autoconf distclean distclean-autoconf\n\n# Also clean binaries which are optionally built. Also remove .d files; old ones\n# may confuse 'make'.\nclean: clean-autoconf clean-lzo clean-include-server\n\trm -f src/*.[od]\n\trm -f test/*.pyc\n\trm -f $(check_PROGRAMS) $(bin_PROGRAMS) $(sbin_PROGRAMS)\n\trm -f `echo $(man1_MEN) | sed -e 's/ /.gz /g' -e 's/$$/.gz/'`\n\trm -f $(man_HTML)\n\trm -f distccmon-gnome\n\trm -rf _testtmp  # produced by test/testdistcc.py and daemon-installcheck\n\trm -rf +distcheck\n\trm -rf \"$(include_server_builddir)\"\n\nclean-autoconf:\n\trm -f config.cache config.log\n\nclean-lzo:\n\trm -f lzo/*.[od] lzo/testmini\n\n\nclean-include-server:\n\tif test -n \"$(PYTHON)\"; then\t\\\n\t  DISTCC_VERSION=\"$(VERSION)\"\t\t\t\\\n\t  SRCDIR=\"$(srcdir)\"                            \\\n\t  CFLAGS=\"$(CFLAGS) $(PYTHON_CFLAGS)\"           \\\n\t  CPPFLAGS=\"$(CPPFLAGS)\"                        \\\n\t  $(PYTHON) \"$(srcdir)/include_server/setup.py\" \\\n\t      clean\t\\\n\t         --build-base=\"$(include_server_builddir)\"  \\\n\t         --build-temp=\"$(include_server_builddir)\"; \\\n\tfi\n\nmaintainer-clean: distclean \\\n\tmaintainer-clean-autoconf clean\n\n# configure and co are distributed, but not in CVS\nmaintainer-clean-autoconf:\n\trm -f configure src/config.h.in\n\ndistclean-autoconf:\n\trm -f Makefile src/config.h src/config.h.stamp pump\n\trm -f lzo/.stamp-conf\n\trm -f config.status config.cache config.log aclocal.m4\n\trm -rf autom4te.cache\n\ndistclean: distclean-autoconf clean\n\n\n######################################################################\n## MAINTAINER targets\n\n.PHONY: man-html upload-man upload-dist rpm deb install-deb\n\nman-html: $(man_HTML)\n\tmkdir -p doc/web/man\n\tcp -f $(man_HTML) doc/web/man\n\nupload-man: man-html\n\tsvn commit doc/web/man\n\n# When uploading the package, we try to update the website as well.\n# However, that's just best-effort, and if we can't (because, say, we\n# don't have troff2html installed), we just upload the tarballs.\nupload-dist: alldist\n\t-$(MAKE) upload-man\n\t\"$(srcdir)/packaging/googlecode_upload.py\" \\\n\t    \"$(tarball_gz)\" \\\n\t    \"$(tarball_bz2)\" \\\n\t    packaging/$(rpm_glob_pattern) \\\n\t    packaging/$(deb_glob_pattern)\n\nrpm: dist packaging/rpm.sh packaging/RedHat/rpm.spec\n\tcd packaging && ./rpm.sh $(PACKAGE) $(VERSION)\n\n# This uses the output of 'make rpm' to convert rpm files to deb files\ndeb: rpm packaging/deb.sh\n\tcd packaging && ./deb.sh $(PACKAGE) $(VERSION) *.rpm\n\n# We copy .deb files to /tmp to avoid problems with NFS root_squash.\ninstall-deb: deb\n\ttmpdir=`mktemp -d /tmp/distcc-install-deb-XXXXXX` && \\\n\tcp packaging/*.deb $$tmpdir && \\\n\tcd \"$$tmpdir\" && \\\n\tsudo dpkg -i $(deb_glob_pattern) && \\\n\trm -rf $$tmpdir\n\n# deb creates rpm files first, which in turn creates .gz files\nalldist: deb\n\t@echo dist files created:\n\t@ls -1 \"$(tarball_gz)\" \"$(tarball_bz2)\"\n\t@ls -1 packaging/$(rpm_glob_pattern)\n\t@ls -1 packaging/$(deb_glob_pattern)\n\n### INSTALL (and UNINSTALL) targets\n\n.PHONY: showpaths install install-programs install-include-server\n.PHONY: install-man install-doc install-example install-gnome-data\n.PHONY: install-conf\n\n# TODO: Allow root directory to be overridden for use in building\n# packages.\n\nshowpaths:\n\t@echo \"'make install' will install distcc as follows:\"\n\t@echo \"  man pages            $(DESTDIR)$(man1dir)\"\n\t@echo \"  documents            $(DESTDIR)$(docdir)\"\n\t@echo \"  programs             $(DESTDIR)$(bindir)\"\n\t@echo \"  sbin programs        $(DESTDIR)$(sbindir)\"\n\t@echo \"  system configuration $(DESTDIR)$(sysconfdir)\"\n\t@echo \"  icon file            $(DESTDIR)$(icondir)\"\n\t@echo \"  application file     $(DESTDIR)$(desktopdir)\"\n\n\n# install-sh can't handle multiple arguments, but we don't need any\n# tricky features so mkinstalldirs and cp will do\n\ninstall: showpaths install-doc install-man install-programs \\\n\tinstall-include-server install-example @INSTALL_GNOME@ install-conf\n\ninstall-programs: $(bin_PROGRAMS) $(sbin_PROGRAMS)\n\t$(mkinstalldirs) \"$(DESTDIR)$(bindir)\"\n\t$(mkinstalldirs) \"$(DESTDIR)$(sbindir)\"\n\tfor p in $(bin_PROGRAMS); do \\\n\t  $(INSTALL_PROGRAM) \"$$p\" \"$(DESTDIR)$(bindir)\" || exit 1; \\\n\tdone\n\tfor p in $(sbin_PROGRAMS); do \\\n\t  $(INSTALL_PROGRAM) \"$$p\" \"$(DESTDIR)$(sbindir)\" || exit 1; \\\n\tdone\n\n# See comments for the include-server target.  Also, we work around an issue in\n# the change_root function of distutils/utils.py that turns the absolute prefix\n# into a relative reference if the root is the empty string: we absolutize the\n# destination directory in order to substitute '/' for the empty prefix (the\n# default) when defining the '--root' parameter.\n# The final complex issue involves installing pump.  pump wants to\n# know the installed-location of include_server.py.  The only way to\n# tell is to have setup.py install it, and then look what it says (via\n# the --record output).  So when installing pump, we look at the\n# --record output and modify the installed pump to have that location.\n# Note: --record output is inconsistent (buggy?) and sometimes leaves out\n# the leading slash in $prefix, even though we require prefix start with\n# a slash.  We use sed to add it back in at cp time.\n# Also, on Cygwin the --record output is in DOS text file format (CR LF\n# line endings), so we need to convert it from DOS text file format to\n# Unix text file format (LF line endings); we use sed for that too.\ninstall-include-server: include-server pump\n\tif test -z \"$(PYTHON)\"; then\t\\\n\t  echo \"Not building $@: No suitable python found\"; \\\n\telse\t\t\t\t\t\t\\\n\t  mkdir -p \"$(include_server_builddir)\" &&      \\\n\t  DESTDIR=`cd \"$(DESTDIR)/\" && pwd` &&            \\\n\t  DISTCC_VERSION=\"$(VERSION)\"\t\t\t\\\n\t  SRCDIR=\"$(srcdir)\"                            \\\n\t  CFLAGS=\"$(CFLAGS) $(PYTHON_CFLAGS)\"           \\\n\t  CPPFLAGS=\"$(CPPFLAGS)\"                        \\\n\t  $(PYTHON) \"$(srcdir)/include_server/setup.py\" \\\n\t      build \t\t\t\t\t\\\n\t        --build-base=\"$(include_server_builddir)\" \\\n\t        --build-temp=\"$(include_server_builddir)\" \\\n\t      install \t\t\t\t\t\\\n\t         --prefix=\"$(prefix)\" \t\t\t\\\n\t         --record=\"$(include_server_builddir)/install.log.pre\" \\\n\t         --root=\"$$DESTDIR\"                     \\\n\t    || exit 1; \\\n\t  sed -e '/^[^\\/]/ s,^,/,' \\\n\t      -e 's/\\r$$//' \\\n\t      \"$(include_server_builddir)/install.log.pre\" \\\n\t      > \"$(include_server_builddir)/install.log\"; \\\n\t  if test -n \"$(PYTHON_INSTALL_RECORD)\"; then \\\n\t    cp -f \"$(include_server_builddir)/install.log\" \"$(PYTHON_INSTALL_RECORD)\"; \\\n\t  fi; \\\n\t  $(mkinstalldirs) \"$(DESTDIR)$(bindir)\" && \\\n\t  INCLUDE_SERVER=`grep '/include_server.py$$' \"$(include_server_builddir)/install.log\"` && \\\n\t  sed \"s,^include_server='',include_server='$$INCLUDE_SERVER',\" \\\n\t    pump > \"$(include_server_builddir)/pump\" && \\\n\t  $(INSTALL_SCRIPT) \"$(include_server_builddir)/pump\" \"$(DESTDIR)$(bindir)\"; \\\n\tfi\n\ninstall-man: $(man1_MEN)\n\t$(mkinstalldirs) \"$(DESTDIR)$(man1dir)\"\n\tfor p in $(man1_MEN); do \\\n\t  if $(GZIP_BIN) --help >/dev/null 2>&1; then \\\n\t    mkdir -p \"`dirname $$p`\"; \\\n\t    if [ -e \"$(DESTDIR)$(man1dir)$$p\" ]; then rm -fv \"$(DESTDIR)$(man1dir)$$p\"; fi; \\\n\t    $(GZIP_BIN) < \"$(srcdir)/$$p\" > \"$$p.gz\"; \\\n\t    $(INSTALL_DATA) \"$$p.gz\" \"$(DESTDIR)$(man1dir)\" || exit 1; \\\n\t  else \\\n\t    echo \"Warning: no working gzip, installing man pages uncompressed\" 1>&2; \\\n\t    if [ -e \"$(DESTDIR)$(man1dir)$$p.gz\" ]; then rm -fv \"$(DESTDIR)$(man1dir)$$p.gz\"; fi; \\\n\t    $(INSTALL_DATA) \"$(srcdir)/$$p\" \"$(DESTDIR)$(man1dir)\" || exit 1; \\\n\t  fi; \\\n\tdone\n\ninstall-doc: $(pkgdoc_DOCS)\n\t$(mkinstalldirs) \"$(DESTDIR)$(docdir)\"\n\tfor p in $(pkgdoc_DOCS); do \\\n\t  $(INSTALL_DATA) \"$(srcdir)/$$p\" \"$(DESTDIR)$(docdir)\" || exit 1; \\\n\tdone\n\ninstall-example: $(example_DOCS)\n\t$(mkinstalldirs) \"$(DESTDIR)$(docdir)/example\"\n\tfor p in $(example_DOCS); do \\\n\t  $(INSTALL_DATA) \"$(srcdir)/$$p\" \"$(DESTDIR)$(docdir)/example\" || exit 1; \\\n\tdone\n\ninstall-gnome-data: $(gnome_data)\n\t$(mkinstalldirs) \"$(DESTDIR)$(icondir)\"\n\t$(mkinstalldirs) \"$(DESTDIR)$(desktopdir)\"\n\t$(INSTALL_DATA) $(srcdir)/gnome/distccmon-gnome.png \"$(DESTDIR)$(icondir)\"\n\t$(INSTALL_DATA) $(srcdir)/gnome/distccmon-gnome.desktop \"$(DESTDIR)$(desktopdir)\"\n\ninstall-conf: $(conf_files) $(default_files)\n\t$(mkinstalldirs) \"$(DESTDIR)$(sysconfdir)/distcc\"\n\t$(mkinstalldirs) \"$(DESTDIR)$(sysconfdir)/default\"\n\t@for p in $(conf_files); do                              \\\n\t  base=`basename $$p`;                                   \\\n\t  target=\"$(DESTDIR)$(sysconfdir)/distcc/$$base\";        \\\n\t  if test -e \"$$target\"; then                            \\\n\t    echo \"******************************************\";   \\\n\t    echo \"*** Configuration file '$$target'\";            \\\n\t    echo \"*** already exists; not installing '$$p'.\";    \\\n\t  else                                                   \\\n\t    echo \"$(INSTALL_DATA) $(srcdir)/$$p $$target\";       \\\n\t    $(INSTALL_DATA) \"$(srcdir)/$$p\" \"$$target\"           \\\n\t        || exit 1;                                       \\\n\t  fi;                                                    \\\n\tdone\n\t@for p in $(default_files); do                           \\\n\t  base=`basename $$p`;                                   \\\n\t  target=\"$(DESTDIR)$(sysconfdir)/default/$$base\";       \\\n\t  if test -e \"$$target\"; then                            \\\n\t    echo \"******************************************\";   \\\n\t    echo \"*** Configuration file '$$target'\";            \\\n\t    echo \"*** already exists; not installing '$$p'.\";    \\\n\t  else                                                   \\\n\t    echo \"$(INSTALL_DATA) $(srcdir)/$$p $$target\";       \\\n\t    $(INSTALL_DATA) \"$(srcdir)/$$p\" \"$$target\"           \\\n\t        || exit 1;                                       \\\n\t  fi;                                                    \\\n\tdone\n\n# For best results, uninstall-example has to run before uninstall-doc,\n# so we clean up the doc subdirectory before cleaning up doc itself.\n\nuninstall: uninstall-man uninstall-programs @UNINSTALL_GNOME@ \\\n\tuninstall-include-server uninstall-example uninstall-doc uninstall-conf\n\nuninstall-programs:\n\tfor p in $(bin_PROGRAMS) pump; do\t\t\t\\\n\t  file=\"$(DESTDIR)$(bindir)/`basename $$p`\";            \\\n\t  if [ -e \"$$file\" ]; then rm -fv \"$$file\"; fi          \\\n\tdone\n\tfor p in $(sbin_PROGRAMS); do\t\t\t\\\n\t  file=\"$(DESTDIR)$(sbindir)/`basename $$p`\";            \\\n\t  if [ -e \"$$file\" ]; then rm -fv \"$$file\"; fi          \\\n\tdone\n\t-[ \"`basename $(bindir)`\" = \"$(PACKAGE)\" ] && rmdir \"$(DESTDIR)$(bindir)\"\n\t-[ \"`basename $(sbindir)`\" = \"$(PACKAGE)\" ] && rmdir \"$(DESTDIR)$(sbindir)\"\n\n# There's no setup.py --uninstall. :-( So I depend on\n# PYTHON_INSTALL_RECORD being set.  If it was used at --install time,\n# I can use it again to uninstall.\nuninstall-include-server:\n\tif [ -e \"$(PYTHON_INSTALL_RECORD)\" ]; then              \\\n\t  cat \"$(PYTHON_INSTALL_RECORD)\" | xargs rm -fv;        \\\n\t  cat \"$(PYTHON_INSTALL_RECORD)\" | sed 's/py$/pyc/' | xargs rm -fv; \\\n\t  cat \"$(PYTHON_INSTALL_RECORD)\" | sed 's/py$/pyo/' | xargs rm -fv; \\\n\telse                                                    \\\n\t  echo \"Cannot uninstall include-server: no PYTHON_INSTALL_RECORD\"; \\\n\tfi\n\nuninstall-man:\n\tfor p in $(man1_MEN); do\t\t\t\t\\\n\t  file=\"$(DESTDIR)$(man1dir)/`basename $$p`\";           \\\n\t  if [ -e \"$$file\" ]; then rm -fv \"$$file\"; fi;         \\\n\t  if [ -e \"$$file.gz\" ]; then rm -fv \"$$file.gz\"; fi    \\\n\tdone\n\t-[ \"`basename $(man1dir)`\" = \"$(PACKAGE)\" ] && rmdir \"$(DESTDIR)$(man1dir)\"\n\nuninstall-doc:\n\tfor p in $(pkgdoc_DOCS); do\t\t\t\t\\\n\t  file=\"$(DESTDIR)$(docdir)/`basename $$p`\";            \\\n\t  if [ -e \"$$file\" ]; then rm -fv \"$$file\"; fi          \\\n\tdone\n\t-[ \"`basename $(docdir)`\" = \"$(PACKAGE)\" ] && rmdir \"$(DESTDIR)$(docdir)\"\n\nuninstall-example:\n\tfor p in $(example_DOCS); do\t\t\t\t\\\n\t  file=\"$(DESTDIR)$(docdir)/example/`basename $$p`\";    \\\n\t  if [ -e \"$$file\" ]; then rm -fv \"$$file\"; fi          \\\n\tdone\n\t-rmdir \"$(DESTDIR)$(docdir)/example\"\n\nuninstall-gnome-data:\n\tfor p in $(gnome_data); do\t\t\t\t\\\n\t  file=\"$(DESTDIR)$(pkgdir)/`basename $$p`\";            \\\n\t  if [ -e \"$$file\" ]; then rm -fv \"$$file\"; fi          \\\n\tdone\n\t-[ `basename $(pkgdir)` = $(PACKAGE) ] && rmdir \"$(DESTDIR)$(pkgdir)\"\n\nuninstall-conf:\n\tfor p in $(conf_files); do                              \\\n\t  file=\"$(DESTDIR)$(sysconfdir)/distcc/`basename $$p`\"; \\\n\t  if [ -e \"$$file\" ]; then rm -fv \"$$file\"; fi          \\\n\tdone\n\t-rmdir \"$(DESTDIR)$(sysconfdir)/distcc\"\n\tfor p in $(default_files); do                           \\\n\t  file=\"$(DESTDIR)$(sysconfdir)/default/`basename $$p`\";\\\n\t  if [ -e \"$$file\" ]; then rm -fv \"$$file\"; fi          \\\n\tdone\n\ntags: $(SRC) $(HEADERS)\n\tctags --defines --globals --typedefs-and-c++ --no-warn $(SRC) $(HEADERS)\n\nTAGS: $(SRC) $(HEADERS)\n\tetags --declarations $(SRC) $(HEADERS)\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 69.2041015625,
          "content": "distcc-3.z 2024-6-10\n\n  CHANGED:\n\n   * The popt library is no longer shipped: it must be separately installed\n     as a dependency before building.\n\n  UNRELEASED FEATURES:\n\n   * (Linux) Added dcc_free_mem reporting of available system memory in the\n     \"stats\" output. PR #523 (Whisperity)\n\ndistcc-3.4 \"Lax lexer\" 2021-4-11\n\n  FEATURES:\n\n   * distccmon-gnome ported from gtk2 to gtk3\n\n   * Remove debug lag in spawning new threads. (better multi-core performance)\n\n   * Bug fixes.\n\ndistcc-3.3 \"Charlie the unicorn\" 2018-3-3\n\n  FEATURES:\n\n   * Use masquerade as compiler white-list. Bug #155 d849ca2. (Shawn Landden)\n\n   * New --allow-private (the default) which allows non-global\n     IP and IPv6 addresses. (Shawn Landden)\n\n   * Cross-compilation support. PR #244. (Shawn Landden)\n\n   * Fix parsing of IPv6 addresses. PR #175 (Bing Sun)\n\n   * Python 3, not python 2.\n\n   * Can build without python (and without pump mode or tests).\n\ndistcc-3.2 \"Back in black\"  2011-10-11\n\n  FEATURES:\n\n   * IPv6 support (adshea, Benjamin R. Haskell, Bob Ham).\n\n   * Optional support for GSS-API authentication (Ian Baker at CERN)\n\n   * Added an environment variable DISTCC_SKIP_LOCAL_RETRY for skipping\n     the local retry in case of a remote compilation failure (Ryan Burns).\n\n   * Some constants that were previously hard-coded in the\n     sources are now configurable via environment variables:\n     DISTCC_MAX_DISCREPANCY, DISTCC_IO_TIMEOUT (Lei Zhang).\n\n  BUG FIXES:\n\n   * Fixed the following 20 issues <http://code.google.com/p/distcc/issues/list>:\n\n     30: 3.0 on OSX: ValueError: Expected absolute path, but got '(framework'.\n     33: distcc --scan-includes dumps core\n     34: Zeroconf fails if avahi supports IPv6\n     35: Include server internal error: '<class 'sre_constants.error'>: ('bogus escape (end of line)',)'\n     36: distcc-mon-gnome displays multiple rows for same host/slot\n     39: build with gcc 4.1 snprintf.h error \"expected declaration specifiers\"\n     42: distcc --show-hosts fails when using Avahi with IPv6 support and +zeroconf for distcc.\n     43: Remove duplicate hosts from zeroconf list\n     44: Failed tests on make check (gentoo gcc-4.3.3)\n     46: Add TAGS target to Makefile.in\n     49: make check fails on PreprocessAsm_Case\n     57: Fix warnings\n     58: PUMP mode can`t PARSE the HOSTS\n     60: CPlusPlus test case fails with GCC 4.4.1\n     61: Gdb tests fail in pumped mode on Ubuntu 9.10 amd64\n     66: pump mode fails to compile certain KDE-4 packages, finds/looks for incorrect headers\n     70: variable overlapping causing errors..\n     75: include_server documentation, distcc_fallback flag incorrect\n     81: distcc 3.1 will not compile correctly with current version of gcc\n\ndistcc-3.1 \"Humming along\"  2008-11-21\n\n  FEATURES:\n\n   * New \"--scan-includes\" option to distcc.  This shows which\n     headers distcc would send to the remote machine in pump mode,\n     without actually compiling anything.  This provides a simple\n     interface to the include server.\n\n   * New \"--disable-Werror\" option to configure.\n     This disables the use of gcc's -Werror option when building\n     distcc, allowing compilation of distcc to succeed even if\n     gcc issues warnings.\n\n  DOCUMENTATION:\n\n   * Document all of the exit codes in the man page\n     (Carsten Wolff <carsten@wolffcarsten.de>, via Debian).\n\n  BUG FIXES:\n\n   * Handle \"-Wp,-MMD,...\".\n\n   * Report a better error message if a host specification contains \",cpp\"\n     but not \",lzo\".\n\n   * Fix a bug where the \"m4\" directory wasn't included in the\n     source distribution tarball, which caused it to stop working\n     if you ran autogen.sh.\n\n  PORTABILITY:\n\n   * Fixed a bug where the pump script was hard-coding /etc/distcc/hosts\n     rather than using the prefix specified to configure.\n\n   * Fixed build errors on Gentoo Linux and some other systems\n     (Matsuu Takuto).\n\n\ndistcc-3.0 \"The moment has arrived\"   2008-08-06\n\n  DOCUMENTATION:\n\n   * Minor improvements to the man pages.\n\ndistcc-3.0rc4 \"Pump up the volume\"   2008-08-04\n\n  BUG FIXES:\n\n   * Fixed a bug in 3.0rc3 that broke pump mode for C++ compilations\n     that use -I options that refer to a subdirectory of one of the\n     default system include directories, e.g. -I/usr/include/foo.\n\ndistcc-3.0rc3 \"Third time lucky?\"   2008-07-31\n\n  FEATURES:\n\n   * New \"--without-avahi\" option to configure (Lei Zhang).\n\n  BUG FIXES:\n\n   * Fixed a problem where pump mode was falling back to local compilation\n     when compiling with -I options that refer to a subdirectory of one\n     of the default system include directories (Nils Klarlund, Fergus Henderson).\n\n   * Allow distcc to distribute commands that use \"-MF<filename>\"\n     rather than \"-MF <filename>\", and likewise for \"-MT<target>\".\n\n  PORTABILITY:\n\n   * Fixed a build problem on ARM and Solaris systems.\n\n   * Fixed a build problem on some Linux systems reported by Daisuke Nishikawa.\n\n   * Fixed failure of \"make install\" on Cygwin.\n\ndistcc-3.0rc2 \"Anti-aliasing.\"   2008-06-19\n\n  BUG FIXES:\n\n   * Fallback to local compilation for \"-march=native\" or \"mtune=native\"\n     (Maks Verver).\n\n   * Fix for deadlock in pump mode.\n\ndistcc-3.0rc1 \"My prices are insane.\"   2008-06-09\n\n  FEATURES:\n\n   * New protocol, version 3, allowing for preprocessing on distcc\n     servers (\"pump\" mode).\n\n   * New component: an include server for incremental static analysis of include\n     dependencies.  This software is written in Python 2.4.\n\n   * Support for getting hosts via avahi (Lennart Poettering)\n\n  BUG FIXES:\n\n   * gcc debug option -d must be run locally because it produces\n     secondary files.  Reported by Nadim Khemir.\n\n   * Improved checking for errors on socket connection.  Patch\n     from Dan Kegel.\n\n\n  PORTABILITY:\n\n   * \"Pump\" code tested under Linux only.  Processing of object code\n      rewrites debug info (so server paths are replaced with client\n      paths), but this works for ELF code only.\n\n   * Fix failure of 'make maintainer-check' in non-English locales.\n     (Niklaus Giger)\n\n   * Locks taken through F_SETLK or lockf() must be explicitly released,\n     because closing the file does not do so.\n     (Sascha Demetrio)\n\n   * Use python2.4 if available.\n\n   * Execute compiler with correctly redirected output using win32 apis on\n     Cygwin/Mingw.  Place temporary files using GetTempPath.  (Alex Besogonov)\n\n   * Make distccmon-gnome link properly with gnu ld's new --as-needed\n     flag.  (Ben Skeggs, Lisa Seelye)\n\n  OTHER CHANGES:\n\n   * New web site: <http://distcc.googlecode.com>.\n   * New repository: <http://distcc.googlecode.com/svn/trunk/>.\n   * New maintainer: Fergus Henderson.\n\n\f\ndistcc-2.18.3  \"Porsche safari\"  2004-11-30\n\n  BUG FIXES:\n\n   * Fix for incorrect handling of -x and -specs from Michal Welnicki.\n\n\n  TESTS:\n\n   * Fix false pass in tests for -x and -specs.\n\n\f\ndistcc-2.18.2  \"Bees and lavender\"  2004-11-12\n\n  BUG FIXES:\n\n    * Fix problem in checking errno after connect().  Fix by Jean\n      Delvare and Dan Kegel.\n\n\n  PORTABILITY:\n\n    * Fix prototype problem causing build failure on amd64.  Patch\n      from Andreas Jochens.  (Debian #280399, #280644).\n\f\ndistcc-2.18.1  \"Reality-based computing\"  2004-11-03\n\n  BUG FIXES:\n\n    * Fix run-time warnings about gtk_tree_model_row_changed() when\n      built with recent versions of GTK+.\n\n    * gcc option -specs= must be run locally so that it can read the\n      local spec file.  Reported by Chris Yeoh.\n\n\n  PORTABILITY:\n\n    * Fix Solaris build problem reported by Dimitri Papadopoulos.\n\n    * Fix problem with reading hosts files in DOS CRLF format.\n      Reported by Sebastien Perochon.\n\n\f\ndistcc-2.18  \"Billionaires on stilts\"  2004-10-12\n\n  BUG FIXES:\n\n    * Fix longjmp() bug that can cause distcc to crash when a timeout\n      elapses.\n\n    * Fix compile-time problem with dcc_trace when configured with\n      --enable-rfc2553.  Reported by Greg Earle.\n\n    * Fix warning about warn_unused_result for older versions of gcc.\n\n    * No timeout on local preprocessing or on compilation.  No\n      timeouts on DNS lookups other than whatever is built in to the\n      DNS resolver.  There are timeouts on network transmission and on\n      opening connections.\n\n    * Remove mmap() for receive of uncompressed data, to avoid various\n      problems.\n\n\n  CHANGES:\n\n    * The --allow option is now mandatory for daemon mode.  As a\n      security feature, distccd will refuse to run without an IP\n      access control list.\n\n    * conftest.* built by autoconf is always done locally, to make\n      configure tests faster and safer.\n\n\n  DOCUMENTATION:\n\n    * Better description of use with ccache.\n\n\n  PORTABILITY:\n\n    * Fix various warnings reported by Dimitri Papadopoulos.\n\n    * Fix Tru64 build problem reported by Gary V. Vaughan.\n\n\f\ndistcc-2.17  \"Divers Alarums\"  2004-07-31\n\n  FEATURES:\n\n    * Performance improvements for distccmon-gnome.\n\n    * Added timeous for connection to servers, transmission of jobs\n      and remote compilation.  If the timeout expires, the job is run\n      locally.  This should make distcc cope better if some or all of\n      the servers are unreachable or failing.\n\n    * Also add timeouts in server to kick out stalled or disconnected\n      clients.\n\n\n  BUG FIXES:\n\n    * If remote compilation fails because of a signal in a later phase\n      of the compilation causing an exit with code >=128, retry\n      compilation locally.  Patch from Jakub Stachowski.\n\n\n  DOCUMENTATION:\n\n    * Manpage fix from Jean Delvare.\n\n\n  PORTABILITY:\n\n    * Cygwin portability fix for WCOREDUMP, reported by Eric Frias.\n\n\f\ndistcc-2.16  \"Salt\"  2004-07-08\n\n  SECURITY:\n\n    * Fix bug that might cause IP-based access control rules not to be\n      interpreted correctly on 64-bit platforms.  (CAN-2004-0601)\n\n\n  BUG FIXES:\n\n    * Fix small memory leaks in distccmon-gnome and distccmon-text.\n\n\n  FEATURES:\n\n    * Use a GNOME status bar with a grab handle for distccmon-gnome.\n      Patch from Nathan Fredrickson.\n\n\n  PORTABILITY:\n\n    * Better detection of systems with a popt library installed but\n      no popt.h.  Reported by Sean Kelly.\n\n    * Fix bug in reporting crashed daemon children that showed up on\n      systems without strsignal, such as Mac OS 10.2.  Reported by\n      Benjamin Reed.\n\n    * Update testdistcc.py to work on ia64 linux.\n\n\n  INTERNAL:\n\n    * Simplify dcc_log_child_exited.\n\n    * Include copyright and licence in --version output, as suggested\n      by GNU programs.\n\n\f\ndistcc-2.15  \"feel good for ten seconds\"  2004-07-06\n\n  BUG FIXES:\n\n    * Fix crash bug in receiving LZO compressed data into a mmapped\n      file.  Reported by Arkadiusz Miskiewicz.\n\n    * Remove redundant temporary file cleanup in non-forking mode.\n\n\n  FEATURES:\n\n    * Client calculates and can display the overall throughput in\n      preprocessed bytes per second for remote jobs.\n\n\n  REMOVALS:\n\n    * The deprecated fork-after-exec mode controlled by the\n      --no-prefork option has been removed.\n\n    * mmap is no longer used for compressed data to simplify the code.\n\n\n  PORTABILITY:\n\n    * Additional fixes to Red Hat / Fedora scripts, by Colins Walters.\n\n\n  INTERNAL:\n\n    * Daemon now chdirs to $TMPDIR at startup rather than /.  This\n      allows dumping core, among other things.\n\n\f\ndistcc-2.14  \"Lake Albina\"  2004-05-02\n\n  FEATURES:\n\n    * The host file is looked up in $DISTCC_DIR/hosts, not hardcoded\n      to ~/.distcc/hosts.  The default for $DISTCC_DIR is still\n      ~/.distcc.  Suggested by Sebastien Perochon.\n\n    * Source file name is included in success/failure messages, e.g.\n\n         distcc[6655] ERROR: compile ./cases/bad.c on cardhu failed\n\n    * distcc can now be built with a build directory separate from the\n      source directory.  Patch from Dennis Henriksen.\n\n    * Added --randomize option to host list to help spread the load\n      across large shared clusters.  From patch by Google\n      (Josh Hyman <joshh@google.com>).\n\n  DOCUMENTATION:\n\n    * Add documentation of DISTCC_DIR, and other fixes.  Patch from\n      Thomas Schwinge.\n\n    * Slightly improved distcc --help.\n\n\n  BUG FIXES:\n\n    * Decompression buffer can dynamically resize to allow for very\n      gassy files.  From a patch by Joe Buehler.\n\n\n  PORTABILITY:\n\n    * Add sample scripts for Red Hat / Fedora, by Colin Walters.\n\n    * mmap is always disabled on HP-UX, because the inconsistent page\n      case is a bit dangerous for the way distcc uses mmap.  Suggested\n      by Joe Buehler.\n\n\f\ndistcc-2.13  \"Carnal Bunt\"  2004-03-02\n\n  SECURITY:\n\n    * Enforce IPv4 access control lists when the daemon is listening\n      on an IPv6 port.  This only applies when the server was compiled\n      using --enable-rfc2553 and run with --allow.\n\n\n  FEATURES:\n\n    * Hash comments are allowed in host list files.\n\n\n  INTERNAL:\n\n    * Use TCP_DEFER_ACCEPT on Linux to avoid some wasted context\n      switching when a new connection comes in to the server.\n\n\n  BUG FIXES:\n\n    * Some fixes for connections over SSH when built using\n      --enable-rfc2553.  Reported by Jeff Rizzo.\n\n    * Handle arguments like \"-xcpp\" and \"-Wa,-xarch=v8\".  Suggested by\n      Ben Scarlet.\n\n    * Fix resource exhaustion when DISTCC_SAVE_TEMPS is set.  Reported\n      by Mark DeGeorge.\n\n    * Fix problems in running IPv6-enabled builds on kernels without\n      IPv6 support.  Reported by Lisa Seelye.\n\n\n  DOCUMENTATION:\n\n    * More instructions for distributors/packagers.\n\n\n  PORTABILITY:\n\n    * Many portability patches from Albert Chin.  These patches were\n      tested on: AIX 4.3.2, 5.1; HP-UX 10.20, 11.00, 11i; IRIX 6.5;\n      Redhat Linux 7.1, 9; Solaris 2.5.1, 2.6, 7, 8, 9; Tru64 UNIX\n      4.0D, 5.1.\n\n    * Possibly fix mmap problem on HP-UX with compressed transfers.\n      Reported by Joe Buehler.\n\n\n  TESTING:\n\n    * Add test for compilation with compression.\n\n    * Testsuite portability patch from Albert Chin.  The tests pass\n      on: HP-UX 10.20, 11.00, 11i; IRIX 6.5; Redhat Linux7.1, 9;\n      Solaris 7, 8, 9; Tru64 UNIX 4.0d, 5.1.\n\n\f\ndistcc-2.12.1  \"Shatner's Bassoon\"  2004-01-09\n\n  BUG FIXES:\n\n    * When checking if a process exists, accept EPERM as indicating it\n      exists but isn't ours.  This allows watching the directory of a\n      different user, subject only to filesystem permissions.\n      Reported by Ernst Bachmann.\n\n    * Correct a bug introduced in 2.12 that made distccd fail to start\n      when run by root because setgid failed.  Fix from Wayne Davison.\n\n    * --without-gnome, --without-gtk now turn those options off rather\n      than on.\n\n  DOCUMENTATION:\n\n    * New man page for distccmon-text, by Shri Shrikumar and Martin\n      Pool.\n\n\f\ndistcc-2.12  \"Figgy Pudding\"  2003-12-19\n\n  FEATURES:\n\n    * New --log-level feature allows logging of only errors rather\n      than messages for each connection.\n\n    * IPv6 support now works better when distcc is configured with\n      --enable-rfc2553.  The server can normally accept either IPv4 or\n      IPv6 connections.\n\n    * New --with-docdir configure option to set install location for\n      documents.  The default is the same as previously.  Patch from\n      Harold L Hunt II.\n\n\n  INTERNAL:\n\n    * GNU-style ChangeLog is now included in the package.  Please keep\n      it up to date if you make your own changes!\n\n\n  PORTABILITY:\n\n    * setgroups() was broken by Mac OS X Panther so that it will not\n      accept setgroups(0, NULL) to clear the group list.  Instead we\n      now set the group list to our single primary gid.  Suggestion\n      from Wayne Davison.\n\n    * sendfile problems on FreeBSD 4.9-RC fixed.  Patch from Allan\n      Saddi.\n\n    * MAXPATHLEN is provided if it's not defined, which is the case on\n      GNU Hurd.  Reported by Santiago Vila as Debian #219600.\n\n\n  BUG FIXES:\n\n    * Check pkg-config information GNOME/GTK+ is now checked at\n      configure time, not build time.  This is a bit quicker than\n      running the script for every file we build, and means that\n      PKG_CONFIG_PATH only needs to be set for configure.\n\n\n  DOCUMENTATION:\n\n    * Small documentation corrections.\n\n\f\ndistcc-2.11.2  \"Muscovado\"  2003-10-23\n\n  BUG FIXES:\n\n    * Correct the handling of --without-gnome.  Reported by Dimitri\n      Papadopoulos.\n\n    * Fatal signal handlers for client and daemon should reset the\n      signal vector before doing anything else, to protect against an\n      (unlikely) spin if the signal is re-sent.\n\n    * Corrections to .desktop file from Dag Wieers.\n\n\n  INTERNAL:\n\n    * Remove dependency on libglade for GTK+ and GNOME monitor\n      programs.\n\n\n  PORTABILITY:\n\n    * IRIX portability fixes from Dimitri Papadopoulos.\n\n    * Use AC_TYPE_SIGNAL to generate correct signal handler return\n      types.  (It can be either int or void.)\n\n\n  DOCUMENTATION:\n\n    * Various manual updates.\n\n    * Update to xinetd example from Dag Wieers.\n\n\f\ndistcc-2.11.1  \"Burnt sugar\"  2003-10-08\n\n  FEATURES:\n\n    * The graphical monitor can now be configured with either\n      --with-gnome or --with-gtk.  In the second case, the GNOME\n      libraries are not used.  In both cases the resulting program is\n      called distccmon-gnome and the functional differences are fairly\n      small.\n\n\n  BUG FIXES:\n\n    * An error message is emitted and compilation fails if distcc\n      cannot use the specified TMPDIR.  This can happen if distccd is\n      started by root with a TMPDIR only accessible to root.\n      Reported by Brett Dikeman.\n\n    * GNOME data files are now only installed when the application is\n      configured with --with-gnome or --with-gtk.  Files are installed\n      into a distcc/ subdirectory of the configured data directory.\n      (By default this is /usr/local/share/distcc/).  Reported by Erik\n      Jan Tromp and Noe`l Ko\"the.\n\n    * Fix bug in sending compressed files where errors were ignored.\n\n    * C++ compilation using -frepo must be local.  Reported by Andrew\n      Slater.\n\n\n  PORTABILITY:\n\n    * Don't use stdint.h, which is not available on FreeBSD 4-STABLE,\n      IRIX or Solaris.  Reported by Frerich Raabe.\n\n\n  DOCUMENTATION:\n\n    * Corrections to distcc manpage reported by Lionel Sausin.\n\n    * Documentation of how to write monitor programs, from Frerich\n      Raabe.\n\n\n  INTERNAL:\n\n    * Fix state.h for use with C++.  Patch from Frerich Raabe.\n\n\f\ndistcc-2.11  \"Sugar fix\"  2003-09-23\n\n  INCOMPATIBILITIES:\n\n    * The GNOME monitor is now configured using --with-gnome (not\n      --enable-gnome) to be more consistent with GNU standards.\n\n    * The state file format has changed, so old distcc monitor\n      programs will not see new compiler processes and vice versa.\n\n\n  FEATURES:\n\n    * Nice new GNOME monitor, showing strip-charts (or \"scarves\") of\n      the state of each processor slot over time.\n\n    * --allow 0.0.0.0/0 is accepted as meaning \"allow access from\n      anywhere\".  Debian #207831, suggested by Matthijs Kooijman.\n\n\n  BUG FIXES:\n\n    * If we fail to determine the number of CPUs on the machine,\n      assume it is 1.  This may fix problems on exotic machines where\n      the detection call is almost but not quite right.\n\n    * In non-forking mode, make sure to close the accepted fd after\n      processing a request.\n\n    * Use \"safe\" LZO1 decompression for protection against program or\n      network errors.\n\n    * Lock and state files are created with the weakest permissions\n      permitted by the umask.  This is intended to reduce problems\n      seen when $DISTCC_DIR is shared between two users, such as when\n      compiling as root during program installation.\n\n    * Client deletes temporary files when interrupted.\n\n\n  INTERNAL:\n\n    * Add debugging option DISTCC_MMAP, which can be set to 0 to\n      disable use of mmap for receiving files.\n\n    * New --enable-profile configure option to turn on gprof.\n\n    * Many changes to the representation of the client state to make\n      it easier to draw a history.  State is now stored as a natively\n      encoded struct in a disk file, rather than using our network\n      protocol.\n\n\n  PERFORMANCE:\n\n    * Sleep only one second when blocked waiting for a CPU, to try to\n      reduce idle time when recovering from an overloaded period.\n\n\n  DOCUMENTATION:\n\n    * Document problems with \"no_subtree_check\" on NFS.\n\n    * The GNU Free Documentation License is no longer distributed,\n      because the documentation is now included under the GNU GPL.\n\n    * Document bad Makefiles or mismatched compilers as common causes\n      of failure.\n\n    * Describe where to put \"localhost\" in the host list.\n\n\n  PORTABILITY:\n\n    * Fixes for BSD/OS (BSDi) from Nick Amato.\n\n    * Fixes for portability issues in  autogen.sh from Lisa Seelye and\n      Alexandre Oliva.\n\n\f\ndistcc-2.10.1  2003-08-12\n\n  BUG FIXES:\n\n    * Fix problem in \"make clean\" reported by Lisa Seelye.\n\n\f\ndistcc-2.10  \"Hunger is the best sauce\"  2003-08-11\n\n  SECURITY:\n\n    * Fix issues in temporary file handling that could allow a local\n      attacker to interfere with another user's distcc processes.\n\n\n  FEATURES:\n\n    * Daemon niceness is incremented by +5 by default.  (This can be\n      changed by --nice.)\n\n    * The per-user configuration directory can be set by $DISTCC_DIR.\n      It defaults to the old value of ~/.distcc/.\n\n    * For regular compile failure, don't say \"with exit code 1\".\n\n\n  BUG FIXES:\n\n    * The server now emits warnings to the log and to the client if\n      its PATH is set such that it will recursively run a distcc\n      client.  This check is done at run time for the requested\n      compiler name.  The server's $PATH is not modified in other\n      ways.  This may help reduce problems with finding the right\n      remote compiler.\n\n\n  PORTABILITY:\n\n    * SCO/Caldera operating systems are no longer supported due to\n      their recent absurd attacks against Linux and IBM.\n\n    * TMPDIR is no longer required to start with '/', so that Cygwin\n      paths starting with a drive letter may be used.  Reported by\n      Heiko Elger.\n\n\n  DOCUMENTATION:\n\n    * Various man page updates.\n\n\n  INTERNAL:\n\n    * Daemon now sits in the root directory while running, not the\n      temporary directory.\n\n    * Temporary directory is gone.  Working files are created directly\n      under $TMPDIR.\n\n    * Lock files and state files are stored under DISTCC_DIR, rather\n      than in /tmp.\n\n\n  TESTING:\n\n    * Test cases are more robust in choosing a daemon port number.\n\f\ndistcc-2.9   \"Grace under pressure\"  2003-07-21\n\n  FEATURES:\n\n    * Optional LZO1X compression of network traffic, to make distcc\n      faster on slow or overloaded networks.  This is turned on by\n      appending \",lzo\" to each host specification.\n\n      Both client and server must be updated for this to work.  Old\n      clients and servers are supported when compression is off, which\n      is the default.\n\n      Compression is probably only worthwhile on networks slower than\n      100Mbps, but it will depend on the usual factors of CPU, network\n      and code complexity.  Thanks to Markus F.X.J. Oberhumer for the\n      LZO library.\n\n\n  BUG FIXES:\n\n    * Handle invocations like \"distcc foo.o -o foo\", which can be\n      generated by Mozilla.\n\n    * Handle invocations like \"distcc -Wa,-al=foo.lst -c foo.c\", which\n      write an assembler listing to a file and cannot be run remotely.\n\n    * When trimming the path to avoid recursive invocations, stop as\n      soon as we find one non-symlink compiler.  This should help\n      avoid the path getting trimmed down far too much on the server.\n      Patch from Wayne Davison.\n\n\n  PERFORMANCE:\n\n    * The daemon by default allows 2+NCPUS, rather than 3*NCPUS.  The\n      two extras are to allow for some processes to be blocked on\n      network IO, but allowing more than two of them is probably not\n      useful on multiprocessor machines.\n\n    * Larger files are sent and received using memory mappings where\n      possible.\n\n    * Use of mmap and compression makes distcc substantially faster in\n      at least some cases.\n\n\n  DOCUMENTATION:\n\n    * Convert the documentation to a series of regular Unix manpages\n      for easier reference and so they can be used more easily on\n      diverse platforms.  The Linuxdoc-SGML manual has been removed\n      from the distribution.  Thanks to Tim Potter for review\n      suggestions.\n\n\n  TESTING:\n\n    * Add tests for new -o and -Wa,-al handling.\n\n\n\f\ndistcc-2.8  \"Play in the traffic\"  2003-07-09\n\n  FEATURES:\n\n    * Small enhancements to GNOME monitor appearance.\n\n\n  BUG FIXES:\n\n    * Fix problem with nonblocking IO for SSH connections that causes\n      a busy spin.  SSH connections are now far more efficient.\n      Reported by Marcelo Matus.\n\n    * distccmon-text flushes output after each line, even if stdout is\n      not a terminal.  This allows it to more easily be run in polling\n      mode under another program.  Suggestion from Hamish Rodda.\n\n    * distccd now works properly with SSH servers that use pipes\n      rather than socketpairs to run the daemon.  Previously it would\n      fail with an error when trying to write to stdin.  Suggestion\n      from Felix Lee.\n\n    * Correctly handle invocations like \"gcc -ofoo.o -c foo.c\", where\n      the output filename is run on to the -o option.  Based on a\n      patch from Tsutomu Yasuda.\n\n\n  INTERNAL:\n\n    * mon.h is now safe for inclusion in C++ programs, and protected\n      against multiple inclusion.  Suggestion from Fr�d�rick Forjan.\n\n    * Increased timeout for nonblocking network IO apart from\n      connections to 5 minutes.\n\n\n  PORTABILITY:\n\n    * Detect and avoid Apple gcc cpp-precomp brokenness.  Patch from\n      Matt Watson.\n\n    * Better handling of builds on machines which do not have the\n      linuxdoc-sgml toolchain.  Suggestion from Frerich Raabe.\n\n\n  DOCUMENTATION:\n\n    * Include an example xinetd configuration file from Andrew Morton.\n\n\f\ndistcc-2.7.1  \"Expedition\"  2003-06-25\n\n  PORTABILITY:\n\n    * distccmon-gnome now depends only on GTK+ 2.0, not on the GNOME\n      libraries.\n\n    * Fix for compilation of the GNOME monitor on BSD.\n\n    * Fix for compilation of the monitor on Cygwin.\n\n\f\ndistcc-2.7  \"The Hard Way\"  2003-06-16\n\n  FEATURES:\n\n    * Graphical compile monitor for GNOME 2.x.  Configure with\n      --enable-gnome to build it.\n\n\n  PORTABILITY:\n\n    * Possible fix for compilation on HP-UX.\n\n\n  INTERNAL:\n\n    * Sanity check GNOME libraries during configuration if\n      --enable-gnome was specified.\n\n\f\ndistcc-2.6  \"The Watcher in the Water\"  2003-06-12\n\n  FEATURES:\n\n    * New program distccmon-text shows the state of any distcc\n      processes run by the current user.  It can be run by hand or\n      read by a shell script.  Should be popular with vmstat fans.\n\n    * New environment variable $UNCACHED_ERR_FD allows client errors\n      to be redirected from stderr to another file descriptor, so that\n      distcc errors are not cached by ccache.  This is an improvment\n      because (almost?) all distcc messages are transient things such\n      as failure to connect to a remote host, and it is confusing to\n      have them cached.\n\n      (This needs a corresponding patch to ccache to set this, or for\n      it to be assigned to a duplicate of stderr before invoking\n      cccache.)\n\n    * In compilation log message, just show the basename of the file\n      to make it more compact.\n\n\n  BUG FIXES:\n\n    * If an compiler cannot be executed then try searching the path\n      for the basename of the compiler.  This can fix cases where the\n      compiler is invoked with an absolute name but it is in a\n      different directory on the server.  Patch from Paul Russell.\n\n\n  PORTABILITY:\n\n    * Fix build on platforms that don't have hstrerror(), such as\n      Solaris 2.6.\n\n    * Handle sysconf(_SC_NPROCESSORS_ONLN) returning 0 processors,\n      which has been observed on ARM Linux and previously threw\n      distccd into a spin.  Patch from Sean MacLennan.\n\n\n  INTERNAL:\n\n    * New mon.c interface for writing compilation monitors.\n\n    * State directory name includes hostname for robustness when the\n      temporary directory is shared.\n\n    * Client writes out notes about its state to files that can be\n      watched by external monitor programs.\n\n    * Partial GNOME-based monitor interface, built when distcc is\n      configured with --enable-gnome.\n\n\n  TESTING\n\n    * Fix silly typo that made maintainer-check give a false failure\n      in ParseHostSpec_Case.\n\n\f\ndistcc-2.5.1  \"disable extra paranoia\"  2003-06-05\n\n  FEATURES:\n\n    * Fifteen second timeout on connection attempts.  Hosts that are\n      unreachable in this time are blacklisted for another minute.\n\n\n  BUG FIXES:\n\n    * Fix setpgid() failure when started directly from init(8).\n      Reported by George Garvey.\n\n    * Correct parsing of old-style TCP multiplier specification\n      (e.g. \"phathost/10:3600\").  Patch from Wayne Davison.\n\n\n  PORTABILITY:\n\n    * Fix socklen_t compilation problem on Darwin.\n\n    * Fix compilation problems on Solaris 8.  Report from Tomas �gren.\n\n    * Fix compilation problems on IRIX.  (IRIX cannot accept a\n      variable named \"sa_len\".)  Report from Peter Naulls.\n\n    * Fix compilation on SuSE Linux 7.1 for Alpha.\n\n\n  DOCUMENTATION:\n\n    * Add more details about starting distccd to the user manual.\n\n\n  TESTING:\n\n    * Add test for correct parsing of old-style TCP multiplier\n      specification (e.g. \"phathost/10:3600\").\n\n\f\ndistcc-2.5  \"give them heaps\"  2003-05-27\n\n  FEATURES:\n\n    * The standalone daemon now \"preforks\" before accepting\n      connections to reduce per-request overhead.  Can be disabled by\n      --no-prefork, which restores the standard Unix behaviour.\n\n    * Restrict the number of jobs accepted onto the server at any\n      time.  By default this is determined automatically depending on\n      the number of CPUs on the server, but it can be set using the\n      --jobs, -j option.  Replaces never-used --concurrent, -n\n      option.\n\n    * When the daemon is terminated, the entire process group is shut\n      down, including any compilations in progress.\n\n    * Load limits on TCP hosts can now be specified in the more\n      consistent form of \"HOST:PORT/MUL\" rather than \"HOST/MUL:PORT\".\n      The old form is still supported.\n\n    * Better error message for \"bind failed\".\n\n    * Better \"listening on\" message at startup.\n\n    * More meaningful reporting of transmission and compilation times\n      in logs.\n\n\n  BUG FIXES:\n\n    * Fix bug that caused some messages to go to the 'user' syslog\n      facility rather than 'daemon' as presently.\n\n    * Fix problem with terminating the daemon when running under\n      Valgrind.\n\n\n  INTERNAL:\n\n    * Refactor daemon loop.\n\n    * Server-side temporary object files are called .o, not .out.\n      Suggestion from rishikesh shetty.\n\n    * Temporary directory name changed to decimal userid, rather than\n      hexadecimal userid.  Easier to recognize.\n\n    * Daemon changes into state directory at startup.\n\n    * SSH child is collected and checked when the connection is\n      closed.\n\n\f\ndistcc-2.4.2  \"hard and fast\"  2003-05-23\n\n  BUG FIXES:\n\n    * Fix compilation directed to /dev/null by handling output files\n      the same way as the GNU BFD library.  Reported by Hal Duston.\n\n    * Better error messages if DISTCC_HOSTS or host files are empty.\n      Patch from Wayne Davison.\n\n    * Fix string allocation bug in dcc_sockaddr_to_ip that could cause\n      a server crash.\n\n\f\ndistcc-2.4.1   2003-05-22\n\n  PORTABILITY:\n\n    * Add strndup() for non-GNU platforms.  Patch from Frerich Raabe.\n\n\f\ndistcc-2.4  \"sparky will reign\"  2003-05-21\n\n  FEATURES:\n\n    * Preliminary support for distribution of Objective C and\n      Objective C++ compilation.  Based on a patch from Dara Hazeghi.\n\n    * If remote compilation fails, give a visible error.  People might\n      want to know, particularly if something is failing on one\n      particular machine.\n\n    * Error messages report host definitions more consistently, rather\n      than just hostnames.\n\n    * Better handling of attempts to run more concurrent compilations\n      than there are available slots.  distcc now sleeps for a few\n      seconds to avoid thrashing the client machine.\n\n    * Unavailable servers are now shunned for 60 seconds so as to\n      avoid wasting time connecting to machines that are down, not\n      running distccd, etc.  (However hosts that are simply not\n      responding (e.g. firewalled) are not handled perfectly yet.)\n\n\n  BUG FIXES:\n\n    * If an IO error occurs while trying to get a lock, bail out rather\n      than getting stuck.\n\n    * Don't use the RFC2553 getaddrinfo/getnameinfo API by default,\n      because it seems to be slower on OS X and possibly problematic\n      on other systems.  It can be enabled with --enable-rfc2553 if\n      you want to use IPv6, multi-homed servers, or want to test the\n      new API.\n\n\n  PORTABILITY:\n\n     * Preliminary STRATUS VOS portability work from Paul Green.\n\n\n  DOCUMENTATION:\n\n     * More description of execution over SSH.\n\n\n\f\ndistcc-2.3  \"come down like a ton of bricks\"  2003-05-16\n\n  FEATURES:\n\n    * Respond more gracefully to protocol derailments.  In particular,\n      banner messages sometimes seem to get into the stream when\n      distcc is run from inetd, and they were previously a bit hard to\n      diagnose.  This won't fix the configuration problem that causes\n      them, but it should make the problem obvious.\n\n    * The client now tries all addresses for each server, in the order\n      returned by the resolver.\n\n    * Client and server now use IPv6 if requested, where this is\n      supported by the system.  The server still binds to an IPv4\n      address by default, but this can be set by the --listen option.\n      Client access control is not supported yet for IPv6.\n\n\n  BUG FIXES:\n\n    * Fix possible bug in loading host list files.\n\n    * Startup errors are now reported to stderr, unless that is a\n      socket in which case they are sent to syslog.  This should be a\n      better tradeoff between making errors obvious and the\n      requirements of inetd mode.\n\n\n  DOCUMENTATION:\n\n    * Add description of --listen to manual, plus other improvements.\n      Patch from Frerich Raabe.\n\n    * Various clarifications to the manual.\n\n    * Add documentation of DISTCC_FALLBACK, DISTCC_SSH, execution over\n      SSH, and host list files.\n\n\n  PORTABILITY:\n\n    * Two Mac OS X fixes from Benjamin Reed: Use the BSD method to\n      discover the number of CPUs, and include types.h where it is\n      needed.\n\n    * Improved portability of snprintf fallback implementation.  Now\n      works again on dietlibc/Linux.  Some fixes merged from Samba\n      HEAD.\n\n\f\ndistcc-2.2  \"nosurname\"  2003-05-05\n\n  FEATURES:\n\n    * If $DISTCC_HOSTS is not set, the host list is taken from from\n      ~/.distcc/hosts, if that exists, or otherwise\n      ${sysconfdir}/distcc/hosts.  (The location of this last one is\n      set by the configure option --sysconfdir.  It defaults to\n      /usr/local/etc.)\n\n    * Add --listen option to distccd, to control which IP address is\n      used to listen for connections.  May be useful for access\n      control on dual-homed machines.  Based on a patch by Neil\n      Mansilla.\n\n\n  DOCUMENTATION:\n\n    * Add documentation for --allow and --user, by Frerich Raabe.\n\n\n  TESTING:\n\n    * Add test case for host list file.\n\n    * Try to prevent server messages getting into syslog during\n      testing.\n\n\f\ndistcc-2.1  \"Don't mind if I do!\"  2003-05-03\n\n  FEATURES:\n\n    * Support for execution over ssh!\n\n      Hosts to be contacted over SSH should be specified as '@HOST' or\n      'USER@HOST'.  distccd must be installed on the volunteer host, but it\n      need not be running and there is no need to set up ssh tunnels.\n\n      Compilations run under the user's account, and connections are securely\n      authenticated and encrypted.\n\n      SSH is substantially slower than plain TCP connections, but they can\n      still be faster than local compilation.\n\n\n    * The search path is examined in both the client and server, and\n      directories containing distcc (and ccache, where appropriate) masquerade\n      hooks are removed.  This should help prevent distcc accidentally\n      invoking itself recursively on either client or server.  Patch from\n      Wayne Davison.\n\n\n  BUG FIXES:\n\n    * Fix up warning about pid file being removed twice.\n\n    * Better error handling when corks are not supported on a particular\n      system or socket.\n\n    * Fix incorrect display of CPU usage statistics in server log and client.\n\n    * Change behaviour of distccd for log messages encountered during startup,\n      before options are parsed.  These are now written to stderr only if that\n      is a tty, and otherwise to syslog.  This is intended to prevent log\n      messages from distccd getting mixed into the network protocol when it is\n      run from inetd.\n\n    * Correctly trap unexpected end of input when copying a file using\n      read/write.\n\n    * Test harnesses may need snprintf.o linked in as well.  Reported by Joe\n      Meslovich as broken on Solaris.\n\n\n  TESTING:\n\n    * Add test that --allow does in fact deny connections as it should.\n\n    * Add tests for parsing of --allow options.\n\n    * Add DISTCC_FALLBACK environment variable.  If set to 0, means that\n      failure to distribute will be considered an overall failure.  By\n      default, a networking error means that compilation will be retried\n      locally.\n\n\n  INTERNALS:\n\n    * Many cleanups of error handling code.\n\n    * Trace distcc version at startup to help with bug reporting.\n\n    * Update IO code to handle nonblocking sockets, because we (may?) need to\n      use nonblocking socketpairs to talk to SSH.\n\n\n\f\ndistcc-2.0.1  \"colorful savings on all your favorite medications\"  2003-03-28\n\n  BUG FIXES:\n\n    * Fix comfychair.py library missing from distribution.\n\n\f\ndistcc-2.0  \"shoot through like a Bondi tram\"  2003-03-28\n\n  BUG FIXES:\n\n    * Fix small signal handling race that would occasionally cause distccd not\n      to exit when signalled.  Pointed out by Vance Lankhaar.\n\n    * If DISTCC_LOG is an empty string, treat as undefined.\n\n    * If the file specified by DISTCC_LOG can't be opened, then show an\n      error and use stderr.  Previously, error messages were just lost.\n\n\n  FEATURES:\n\n    * New \"masquerade\" mode: distcc can be linked into a directory on the\n      search path as 'cc'.  By Wayne Davison and Martin Pool.\n\n    * Detect number of online processors on the server.  At the moment it is\n      just logged but in the future it might be used to guide scheduling.\n      Thanks to Dimitri Papadopoulos-Orfanos for describing how to do this on\n      many operating systems.\n\n    * Log signal name when terminating, on systems with strsignal().\n\n\n  PERFORMANCE:\n\n    * Internal CPU efficiency fixes in logging and RPC code.\n\n\n  PORTABILITY:\n\n    * Apparently now builds on IRIX.  Reports about whether it works would be\n      welcome.\n\n    * Fix cast in call to sprintf for platforms where ssize_t != int.  Found\n      on Alpha Linux in the hp Compaq testdrive.\n\n    * Clean up some warnings on IRIX.\n\n    * Fix problem with vsnprintf() declarations on Solaris 8.\n\n    * Cope when in_addr_t and socklen_t are not defined, as is the case on\n      FreeBSD 3.3.\n\n    * Fix test suite to allow for 'true' and 'false' being in /usr/bin on\n      BSD.\n\n\n  TESTING:\n\n    * Many internal updates to ComfyChair framework.\n\n    * Test suite now works with Python 1.5 or later.\n\n    * Add new undocumented (heh) \"--lifetime\" option that causes the daemon to\n      expire after a certain period.\n\n    * Specify limited lifetime when running daemon, so that if it is not\n      cleaned up by the tests it will go away after a little while anyhow.\n\n    * Use \"--allow\" to limit connections to localhost when running\n      daemon for testing.\n\n    * Use randomly chosen TCP port for the server when running tests.  This\n      makes repeated or concurrent invocations of the test less likely to\n      conflict.\n\n    * On machines without Python, just say \"test skipped\" rather than failing.\n\n    * Test DISTCC_LOG being set to an unwriteable file.\n\n\n  REMOVALS:\n\n    * The GNU Info form of the manual is no longer included in the source\n      distribution or installed by default.  It can be built from SGML if\n      desired, with \"make install-linuxdoc-info\".\n\n\f\ndistcc-1.2.3  \"stubborn tiny lights\"  2003-03-02\n\n  PORTABILITY:\n\n    * Don't use ':' in lock filenames, because that's a bit too tough for\n      Windows.  This only affects Cygwin clients, not servers.  Pointed out by\n      Heiko Elger.\n\n    * Check existence of ctype.h.  Fixes warnings when building popt.  Pointed\n      out by Tom Matelich.\n\n    * Fix \"access denied\" errors on lock files on HP-UX and Cygwin, so clients\n      on those platforms should work.  Reported by Tom Matelich, Heiko Elger\n      and others.\n\n\f\ndistcc-1.2.2  \"clustering darkness forever\"  2003-02-27\n\n  BUG FIXES:\n\n    * \"make distclean\" should not remove ./configure.\n\n\n  PORTABILITY:\n\n    * Don't assume POSIX-style reentrant file locks, which can't be supported on\n      Cygwin.\n\n    * Check for inet_aton in libresolv, which might fix Solaris 2.6.\n\n    * Remove some gnudity from the Makefile in an attempt to build with\n      non-GNU Make.\n\n    * Attempted fix for header files on BSD.\n\n    * Attempted sendfile implementation for HP-UX.\n\n\n  TESTING:\n\n    * Add a simple \"make distcheck\" target to test that the tarball is built\n      properly.\n\f\ndistcc-1.2.1  \"you know you're right\"  2003-02-25\n\n  BUG FIXES:\n\n    * Better detection of python2.2 during configuration.\n\n    * Allow installation from CVS on machines that don't have the Linuxdoc tools.\n\n    * Check for autoconf >= 2.53 when configuring.  Remove dependencies on\n      features from later versions of autoconf to allow autogen to run on Red\n      Hat Linux 7.2 systems.\n\n\n  TESTING:\n\n    * Add \"make installcheck\" target.\n\n    * \"make check\" now fails if any of the tests fail to run.\n\n    * distcc is now built on the build.samba.org build farm.  Please contribute\n      machines if you want your platform to be properly supported.\n\n\n  PORTABILITY:\n\n    * Remove libiberty, and use Samba's asprintf() implementation instead.  Yay\n      copy and paste.  This should fix problems with asprintf and ansidecls.h on\n      Solaris, BSD, and Cygwin.\n\n\f\ndistcc-1.2  \"lizard drinking\"  2003-02-22\n\n  FEATURES:\n\n    * New scheduler makes a better attempt at keeping remote machines solidly\n      loaded by allowing only one request at a time to be in transit to remote\n      machines, therefore letting the actual compiler start sooner.  Gives\n      about a 10% improvement in some circumstances.  The new algorithm should\n      also be a better foundation for adding compression or server-side load\n      limiting.\n\n    * New --allow option for distccd allows IP-based access control in either\n      inetd or standalone daemon modes.\n\n    * Locking mechanism now distinguishes between daemons on different ports\n      of the same machine for the purposes of load balancing.\n\n    * Print timing and estimated rate on bulk data transfers.\n\n    * Open binary files in O_BINARY mode on Cygwin.  May fix some corruption\n      problems on this platform.  More investigation would be appreciated.\n      Based on a patch by Helind.\n\n\n  PORTABILITY:\n\n    * Use putenv() rather than setenv() to fit into SUSv2 and work on Solaris\n      8.  Pointed out by Dimitri Papadopoulos.\n\n    * Add some functions from libiberty to aid portability.\n\n\f\ndistcc-1.1  \"balls to the wall\"  2003-01-28\n\n  BUGS:\n\n    * Flag platforms that have a sendfile() function, but that aren't\n      explicitly supported, because it seems to vary substantially.  At the\n      moment only FreeBSD and Linux are known.\n\n    * Fix configure test for hstrerror().  Patch from Frerich Raabe.\n\n    * Check for inadvertent recursion, where distcc calls itself as the\n      compiler.  Causes an exit with value 111.\n\n    * Don't log client hostname, only the IP address.  It's not really\n      necessary and can slow us down.\n\n    * If run by root, discard privileges rather than flagging an error.  The\n      persona to assume is set by the --user option and defaults to \"distcc\".\n      The user \"nobody\" or uid 65534 is used as a fallback if the named user\n      is not found.\n\n\n  BENCHMARK:\n\n    * Allow for running benchmarks repeatedly, printing the mean and standard\n      deviation of run time.\n\n    * Projects may now be selected by an unambiguous prefix of their name, so\n      you can just say \"benchmark hello\" rather than \"benchmark hello-2.1.1\".\n\n    * Print better explanatory messages while the benchmark is running.\n\n\n  TESTING:\n\n    * Update some tests to work with changed behaviour of gcc 3.2 as well as\n      2.95.\n\n\n  DOCUMENTATION:\n\n    * Many updates to distcc User Manual.\n\n    * Comply with GNU Standards by keeping all messages in the NEWS file, not\n      just those for the current release.\n\n\f\ndistcc-1.0  \"consider the oyster\"  2003-01-16\n\n  BUG FIXES:\n\n    * Fix sendfile() bug on FreeBSD that could cause files to be\n      mistransmitted.  Perhaps not manifest on x86?  Reported by Kris\n      Kennaway.\n\n\n  PACKAGING:\n\n    * Distribute as .tar.bz2 rather than .tar.gz.  (We pay by the byte.)\n\n\n  DOCUMENTATION:\n\n    * The recommended convention for gcc names is <target>-gcc-<version>, and\n      GCC 3.3 will install itself under this name.  (Alexandre Oliva, Claes\n      Wallin)\n\n\n  BENCHMARK:\n\n    * New macro-benchmark and test suite for distcc.  Invoke it with \"make\n      benchmark.\"  It takes a long time to run and causes a lot of source code\n      to be downloaded, but should be self-contained.\n\n      This is the start of a script that runs distcc to build various open\n      source programs, as an overall test of correctness, and to measure\n      performance of a distcc installation.  It relies on the user to install\n      and configure distcc servers and clients, but handles the work of\n      downloading, preparing, and building packages by itself.\n\n      There are still some rough edges on the script, but it may be of\n      interest.\n\n    * Add control over which phases of the benchmark are run.\n\n    * Add ability to run tests repeatedly and report mean and standard\n      deviation.\n\n\n  REMOVALS:\n\n    * Remove Plucker file: nobody seems to be downloading it, and it's\n      easy enough for people to build if they're interested.\n\n    * Remove PDF and Postscript from documentation in tarball.  They are still\n      available from the web site or may be built from source.\n\f\ndistcc-0.15  \"petrified forest\"  2002-12-12\n\n   INCOMPATIBILITIES:\n\n    * Change default port from 4200 to IANA-assigned standard for distcc\n      service \"3632\".  Compatibility with old installations can be retained by\n      explicitly setting --port=4200 on the server, or using \"HOST:PORT\" on\n      the client.\n\n    * Fake-root directory for \"make install\" is now set by DESTDIR, not\n      TARGET_ROOT.  (Alexandre Oliva.)\n\n\n   BUG FIXES:\n\n    * Run the preprocessor with output sent to stdout and redirected to a\n      file, rather than by using the -o option.  This should fix some\n      compilers that can't handle \"-E -o\".  It may improve gcc behaviour with\n      -MD, but because gcc behaviour has changed over time it may not be a\n      complete fix.\n\n      For gcc 3.2 it is recommended that -MF be used to explicitly set the\n      dependency output filename.\n\n\n  TESTING:\n\n    * Add test case for transmission of a zero-byte file.\n\n    * Add badly-behaved compiler drop-in for use in testing.\n\n\n  PORTABILITY:\n\n    * Use the correct autoconf macros to detect whether install(1) is\n      available and working, and if not, fall back to using the included\n      install-sh script.  This should fix \"make install\" on Solaris.  (Mike\n      Santy)\n\n    * Fix waitpid() takes three options.  Required for Irix.  (Michael Santy)\n\n    * Fix autoconf detection of resolv.h on Solaris.  (Dimitri Papadopoulos)\n\n\n  DOCUMENTATION:\n\n    * Describe information to include in a bug report.\n\n    * Remove \"Results\" chapter from manual: there are now many more detailed\n      results on the web site, and this information is better suited to\n      storage there, because it will be updated on a different cycle.\n      End-users don't really need to have it in their reference.\n\n    * Remove \"MOC Compatibility\" section from manual because at the moment\n      there is nothing to say.\n\n    * Add a new section about the complexities of gcc -MD.\n\n    * Remove \"Bugs\" section from the manual, and put it into a new TOOD file\n      instead.  Keep information about reporting bugs and using the test\n      suite, but put it in a different section.\n\n\f\ndistcc-0.14  \"no agonizing hanging weights\"  2002-11-13\n\n  BUG FIXES:\n\n    * Take lock on localhost only when compiling locally, not for all\n      compilations.  This removes the accidental limit of only 4 overall jobs.\n      (Martin Pool)\n\n    * Fix Makefile bug that caused HTML documentation to be missing from the\n      distribution tarball.  (Frerich Raabe, Martin Pool)\n\n    * Make PreprocessPlainText_Case run in appropriate subdirectory.  (Martin\n      Pool)\n\n\n  PORTABILITY:\n\n    * Test for wait4 and wait3, which are missing on IRIX.  (Mike Santy,\n      Martin Pool)\n\n\n  DOCUMENTATION:\n\n    * Include example init.d script.  (Jason Thomas)\n\f\ndistcc-0.13  \"Armistice\"  2002-11-11\n\n  FEATURES:\n\n    * New --no-detach option to cause the server not to detach from its\n      parent.  It still forks normally when a connection is accepted.  This\n      may be useful with daemontools or other frameworks that prefer the\n      daemon not to detach.  (Martin Pool)\n\n    * Log messages on the server of severity \"warning\" or higher are captured\n      and sent back to the client.  (Martin Pool)\n\n    * If the local preprocessor fails, do not re-run the job locally because\n      it would presumably fail in the same way.  (Martin Pool)\n\n    * By default, the client only sends \"warning\" or higher messages to\n      stderr, so that nothing extra is logged unless there is possibly a\n      failure in distcc itself.  With a DISTCC_LOG file, \"notices\" and higher\n      are logged.  (Martin Pool)\n\n    * Better messages when a compiler exits or crashes.  (Martin Pool)\n\n    * If the compiler because of a signal, return 128+SIGNAL, per Unix\n      convention.  (Martin Pool)\n\n    * Compilers and preprocessors are now run in their own process groups, and\n      terminated if the daemon is killed.  (Martin Pool)\n\n    * When the daemon parent is terminated, it does not kill all its children.\n      Instead, they're allowed to finish whatever they're working on, and then\n      exit.  This allows for more graceful shutdown.  (Martin Pool)\n\n    * More specific exit codes for some error cases.  Don't panic.  (Martin\n      Pool)\n\n    * Include popt library and --with-included-popt configure option to aid\n      installation on systems that don't have it.  By default it is statically\n      linked in only if the build machine does not have a suitable library and\n      header.  (Martin Pool)\n\n\n  REMOVALS:\n\n    * Remove support for feeding the compiler from a fifo.  The gain from\n      using fifos does not seem to justify the maintenance burden.  (Martin Pool)\n\n       - This makes the behaviour more consistent, because some platforms\n         (Cygwin) or filesystems (NFS, strangely) can't use fifos.  It removes\n         a code path and a slightly complex autodetection.\n\n       - Using fifos makes some potential scheduling improvements hard: the\n         server can't make good decisions about how many tasks to run, because\n         each one will only use a fraction of the CPU.  The client cannot\n         serialize file transmission, which would probably be desirable.\n\n       - Using fifos makes reliably handling compiler failures slightly\n         harder: the compiler may crash or exit at any time, which will in\n         turn cause the server to hang if it later tries to open or write to\n         the fifo.  In previous versions, distcc tried to handle this by\n         catching SIGCHLD when the child terminated, and aborting the\n         operation, but I am not sure that the method is completely reliable.\n\n\n  BUG FIXES:\n\n    * Detached daemon now ignores hangup signal.  (Martin Pool)\n\n    * When the parent is terminated, don't kill its process group.  Allow\n      children to finish in their own time.  (Martin Pool)\n\n    * Detect the case where cpp claims to have succeeded, but did not actually\n      produce any output.  (Martin Pool)\n\n    * Do not use atexit() to clean up temporary files, because this can cause\n      havoc if it's ever called from a child process that forked but failed to\n      exec.  (Martin Pool)\n\n    * Handle \"gcc -S foo.c -o -\", which ought to write assembly to stdout.\n      (Alexandre Oliva)\n\n    * Fix bug in handling IO errors (e.g. dropped connection) in the server.\n      (Martin Pool)\n\n    * If we fail to cork a socket, continue anyhow.  (Martin Pool)\n\n    * Make error handling for IO more consistent.  (Martin Pool)\n\n    * Follow Unix convention of returning 128+SIGNAL if the compiler exits\n      with a signal.  (Martin Pool)\n\n\n  TESTING:\n\n    * Add tests for parsing slot limit from host specification.  (Martin Pool)\n\n    * Daemon tests collect dead servers faster, so the tests run a bit\n      faster.  (Martin Pool)\n\n    * Nicer handling of ^C while running tests: print \"INTERRUPT\" and\n      terminate the whole test.  (Martin Pool)\n\n    * Add new tests for scanning command lines with an implied compiler name.\n      (Martin Pool)\n\n    * When the parent is terminated, don't kill its process group.  Allow\n      children to finish in their own time.  (Martin Pool)\n\n    * Detect the case where cpp claims to have succeeded, but did not actually\n      produce any output.  (Martin Pool)\n\n    * Add test case for #error directive.  (Martin Pool)\n\n    * Add test case for preprocessing non-C text, as is done by (for example)\n      xrdb.  (Martin Pool)\n\n    * Add test case for invocations like \"distcc -c test1.c test2.c\".  (Martin Pool)\n\n    * Add test for handling of a compiler missing from the server.  (Martin Pool)\n\n    * Allow distcc's version to be set to something like \"0.13cvs-nofifo\".\n      (Martin Pool)\n\n    * Add test for handling of a compiler missing from the server.  (Martin\n      Pool)\n\n    * Improved ComfyChair testing framework.  (Tim Potter, Martin Pool)\n\n\n  PORTABILITY:\n\n    * Includes example init.d script for SuSE 7.x and 8.0.  Not installed by\n      default.  (Brandon Forehand)\n\n\n  DOCUMENTATION:\n\n    * Document use with Gentoo Linux.  (Dean Bailey, Ernesto, Martin Pool)\n\n\n  INTERNAL:\n\n    * Get rid of recursive Make and fix various small Makefile bugs.  (Martin\n      Pool)\n\n    * Add $(TARGET_ROOT) variable for \"make install\", for use in building\n      binary packages.  (Martin Pool, Nick Moffitt)\n\n    * wait4() on Solaris can't handle a pid of -1, which means \"any child\" on\n      Linux and BSD.  Use pid of 0 instead to collect any children from the\n      same process group.  (Kevin Bailey)\n\n    * Client does not abruptly drop network connection on compiler failure but\n      rather reads the 0-byte object file token.  (Martin Pool)\n\n    * Rework logger library to allow multiple logger callbacks to be active at\n      once.  This is used for the server, which can write to its own log files\n      and also send a copy of messages to a buffer to be sent to the client.\n      (Martin Pool)\n\f\ndistcc-0.12  \"Klein, kosten- und schn�rkellos\"  2002-10-07\n\n  BUG FIXES:\n\n    * Handle \"gcc -S foo.c -o -\", which ought to write assembly to stdout.\n      (Alexandre Oliva)\n\n  PORTABILITY:\n\n    * wait4() on Solaris can't handle a pid of -1, which means \"any child\" on\n      Linux and BSD.  Use pid of 0 instead to collect any children from the\n      same process group.  (Kevin Bailey)\n\n  TESTING:\n\n    * Add tests for \"-o -\".  (Martin Pool)\n\f\ndistcc-0.11  \"Nuclear Bedtime Story\"  2002-09-25\n\n  FEATURES:\n\n    * More helpful message explaining that popt is needed if it is missing at\n      build time.  (Martin Pool)\n\n    * Better stripping of options from remote command lines.  (Martin Pool)\n\n    * Handle the new -MM, -MG, -MP, -MF, -MT, -MQ options for gcc 3.x.\n      (Stephan Kulow, Martin Pool)\n\n\n  PERFORMANCE:\n\n    * Whenever a command by either the client or the server, it counts towards\n      the load on that machine.  This covers undistributed commands, cpp, and\n      compilation.  This should avoid the bias in earlier versions towards\n      overloading the client.  (Martin Pool)\n\n\n  BUG FIXES:\n\n    * IO errors should not cause the process to terminate straight away,\n      because they are properly handled and we may have important cleanup to\n      do.  (Martin Pool)\n\n    * Fix error handling in code for executing compilers.  (Martin Pool)\n\n    * Fix leakage of file descriptors when trying to acquire a lock.  (Martin\n      Pool)\n\n    * Do not object to running as group 0, because on BSD this is \"wheel\" and\n      many non-privileged users are in it.  (Frerich Raabe, Martin Pool)\n\n    * Fix (non-exploitable) buffer overrun bug.  (Dave Zarzycki)\n\n\n  PORTABILITY:\n\n    * Fixes to build on Linux libc5.  (Richard Zidlicky, Martin Pool)\n\n\n  TESTING:\n\n    * Keep $TMPDIR separate for each test case.  (Martin Pool)\n\n    * testdistcc.py now optionally takes arguments saying which tests to run.\n      (Martin Pool)\n\n    * Test permissions on output files are correct.  (Martin Pool)\n\n    * Add more test cases for implicit compiler name handling.  Extend\n      h_scanargs to exercise this.  (Martin Pool)\n\n    * More tests for argument stripping.  (Martin Pool)\n\f\ndistcc-0.10  \"shiny fast red thing\"  2002-09-12\n\n  FEATURES:\n\n    * Allow distcc to be directly used with the same syntax as a compiler:\n      \"distcc -c hello.c\".  At the moment, always calls \"cc\".  (Martin Pool)\n\n    * If distribution fails, show the name of the server that we were trying\n      to use.  (Martin Pool)\n\n    * Strip -D, -I, -L, -M* options before passing the command line across the\n      network, for clarity (and perhaps a tiny performance improvement.)\n      Also, this allows new clients which support -MD to be used with old\n      servers that can't handle it.  (Martin Pool)\n\n\n  BUG FIXES:\n\n    * Correctly handle \"gcc -c -S hello.c\", which should only assemble, not\n      compile.  (Alexandre Oliva)\n\n    * If the volunteer compiler exits without reading all of its input, return\n      the compiler's own exit code across the network, rather than\n      EXIT_DISTCC_FAILED.  (Martin Pool)\n\n    * Attempt to fix a race where the compiler process could exit without\n      opening its input before we started writing to the FIFO.  In that case,\n      the daemon would hang forever waiting for the compiler to arrive.  In\n      the new code, SIGCHLD causes a longjmp to break out of trying to feed\n      the compiler.  (Martin Pool)\n\n    * If .o file is 0 bytes or not created on the server, do not create it on\n      the client either.  (Martin Pool)\n\n    * Fix bug that caused compilation to fail if an old compiler output file\n      existed.  (Martin Pool)\n\n    * Try to make sure to uncork client socket before closing if cpp fails, to\n      work around Linux 2.2 bug that causes the socket to jam in FIN_WAIT1.\n      See <http://marc.theaimsgroup.com/?l=linux-netdev&r=1&b=200209&w=2>.\n      (Martin Pool)\n\n    * Invocations of gcc that use -MD or -MMD can be distributed, although -M\n      cannot be.  Both client and server must be updated to make this work.\n      (Martin Pool)\n\n    * It turns out that .s and .S files in fact cannot be assembled remotely,\n      because they might use the gas '.include' pseudo op, which is resolved\n      by the assembler and would end up reading something from the volunteer's\n      disk.  (Richard Zidlicky, Martin Pool)\n\n\n  PORTABILITY:\n\n    * Solaris portability fixes.  (Dimitri PAPADOPOULOS-ORFANOS)\n\n\n  TESTS:\n\n    * Test handling of -c and -S.  (Martin Pool)\n\n    * Test handling of a file that causes a preprocessor error.  (Martin Pool)\n\n    * Test compiler that succeeds without reading input.  (Martin Pool)\n\n    * Test many simple compilations, in case there is an infrequent error.\n      (Martin Pool)\n\n    * Test many concurrent compilations.  (Martin Pool)\n\n    * Test using -D on the compiler command line.  (Martin Pool)\n\n    * Tests for .s and .S files.  (Martin Pool)\n\f\ndistcc-0.9  \"samui desu ne?\"  2002-09-03\n\n  FEATURES:\n\n    * Add new environment variable for client and server, DISTCC_TCP_CORK.\n      Defaults to on, intended mostly for performance comparison or\n      debugging.  (Martin Pool)\n\n  PORTABILITY:\n\n    * Properly support platforms with 32-bit pids, such as Cygwin.  (Aaron\n      Lehmann, Martin Pool)\n\n    * On FreeBSD, the sa_family_t type is defined in <sys/socket.h>  (Dennis\n      Taylor)\n\n  BUG FIXES:\n\n    * Fix bugs related to leftover fifos in the temporary directory causing\n      occasional server hangs.  (Martin Pool)\n\n    * Stop the compiler from inheriting file descriptors connected to the\n      network.  This was causing the client to hang if the server abnormally\n      terminated while the compiler was reading from a fifo.  (Martin Pool)\n\n    * Handle the case of sendfile() transmitting only part of the supplied\n      data, similarly to a short write on a socket.  This doesn't often\n      happen, but can occur if a ptrace debugger attaches while sendfile is\n      running.  (Martin Pool)\n\n    * When run with --daemon and not --no-fork, the parent does not detach\n      until the pid file has been created.  This removes a slight race window\n      that sometimes confused the test scripts.  (Martin Pool)\n\n    * Message for completion of local cpp now gives the correct hostname.\n      (Martin Pool)\n\n    * Do not try to collect daemon children if --no-fork was specified.\n      (Martin Pool)\n\n    * Set SIGPIPE handler back to default before starting compiler tasks.\n      (Martin Pool)\n\n    * If a network error is detected while feeding input to the compiler, then\n      it is terminated with a SIGHUP.  (Martin Pool)\n\n    * If transmission to the server fails, close the socket sooner rather than\n      later so as not to make the server process wait around unnecessarily.\n      (Martin Pool)\n\n    * Better handling of the case where the compiler command exits without\n      reading its input.  (Martin Pool)\n\n    * Make sure compilation children are always properly collected, even if\n      transmission failed.  (Martin Pool)\n\n  PERFORMANCE:\n\n    * Write token/parameters using a single write() call.  May be very\n      slightly more efficient in CPU and perhaps packets.  (Martin Pool)\n\n  TESTS:\n\n    * Display test names while they're running so that long tests are easier\n      to follow.  (Martin Pool)\n\n    * When cleaning up after running the dameon, make sure it's really dead\n      before proceeding, so that tests don't trip over each other.  (Martin\n      Pool)\n\n    * New test of compilation of a largish (~4MB) C file to a ~5MB object\n      file.  (Martin Pool)\n\f\ndistcc-0.8  \"cat and girl\"  2002-08-15\n\n  FEATURES:\n\n    * If for any reason a job can't be distributed, it is run locally rather\n      than failing.  This includes servers which are not running or\n      unreachable, servers which crash, bad host specifications, etc.  (Martin\n      Pool)\n\n    * --help for distcc explains more about host specifications.  (Martin\n      Pool)\n\n  BUG FIXES:\n\n    * Correctly handle compilation of C++ code under ccache, by properly\n      recognizing the .ii extension.  (Stephen White, Chris Halls)\n\n    * Boolean environment variables (e.g. DISTCC_SAVE_TEMPS, DISTCC_VERBOSE)\n      are now consistently required to be literally \"1\" to count as true.\n      (Martin Pool)\n\n  DOCUMENTATION:\n\n    * Document that $DISTCC_HOSTS can now specify ports.  (Martin Pool)\n\n    * Document --no-fifo and --log-stderr.  (Martin Pool)\n\f\ndistcc-0.7  \"Pipeline Authority\"  2002-08-05\n\n  FEATURES:\n\n   * Can now either use fifos for feeding the compiler or not.  This can be\n     controlled by --no-fifo to the server.  By default, it tries a fifo and\n     falls back to using regular temporarily files if that fails, as it will\n     on Cygwin or an NFS-mounted /tmp.  (Martin Pool)\n\n   * --log-stderr option, intended mainly for debugging or testing.  (Martin\n       Pool)\n\n   * DISTCC_HOSTS can now specify non-default port numbers using \"host:port\"\n     syntax.  (Martin Pool)\n\n  DOCUMENTATION:\n\n   * Built documentation (HTML, PS, PDF, Info) is now shipped in the\n     distributed tarball, so that you can more easily install it on a machine\n     lacking the Linuxdoc SGML tools.  You still need them to modify and\n     rebuild the documentation, of course.  (Martin Pool)\n\n  BUG FIXES:\n\n   * Log pid even if running with --no-fork.  Remove pid file on exit.\n     (Martin Pool)\n\n  PORTABILITY:\n\n    * Try fcntl locks in addition to lockf and flock; apparently this helps\n      portability to Cygwin.  (Martin Pool, Marco Alanen)\n\n    * Port to Cygwin.  (Martin Pool, Marco Alanen)\n\n    * Partial port to Solaris.  (Dimitri PAPADOPOULOS-ORFANOS, Martin Pool)\n\n  TESTABILITY:\n\n    * Further internal improvements to test suite.  (Martin Pool)\n\n    * Test suite should now run whether or not there is a daemon listening on\n      localhost, because it uses a non-standard port for testing.  (Martin\n      Pool)\n\f\ndistcc-0.6  \"reptilian agenda\"  (12 July 2002)\n\n  FEATURES:\n\n   * Daemon now refuses to run as root, because this is just too ridiculously\n     insecure.  (Martin Pool)\n\n   * Output shows CPU time taken by distcc and programs that it runs.  (Martin\n     Pool)\n\n   * distcc will now distribute jobs which use -s to compile but not assemble.\n     Previously they were always run locally, but there's no strong reason why\n     they must be.  Unfortunately you need to upgrade both the client and\n     server for this to work, because old servers will refuse to run gcc with\n     -s.  (Martin Pool)\n\n  BUG FIXES:\n\n   * -M<anything> option implies that cpp must be run locally, because it will\n      want to write dependency information to a file.  (Martin Pool)\n\n   * Add --daemon and --inetd options, so that you can properly start a remote\n     daemon with a single-line ssh command.  (Martin Pool)\n\n   * Fix bugs related to collecting child processes.  (Probably not very\n     user-visible.)  (Martin Pool)\n\n   * Fixed some Makefile-related bugs causing \"make install\" breakage and\n     similar things.  (Martin Pool)\n\n   * If the system supports sendfile, but the particular filesystem we're on\n     (e.g. tmpfs) doesn't, then fall back to using read/write.  (Eivind Magnus\n     Hvidevold, Martin Pool)\n\n   * Change to argument analyzer to placate Valgrind.  Possibly this was a\n     memory corruption bug, but I can't see it.  I think Valgrind was just too\n     picky.  (Martin Pool)\n\n  PORTABILITY:\n\n   * Build on FreeBSD, though you do need GNU make.  (Lauri Watts, Martin\n     Pool)\n\n  DOCUMENTATION:\n\n   * Better description of how to do cross-compilation.  (Martin Pool)\n\n  TESTING:\n\n   * Improved Python test suite.  (Martin Pool)\n\n  INTERNAL CHANGES:\n\n   * Get rid of automake; just use plain autoconf 2.53.  (Martin Pool)\n\n   * If $DISTCC_SAVE_TEMPS is set to \"1\", then files are not actually deleted\n      -- good for debugging.  (Martin Pool)\n\f\ndistcc-0.5  \"Unacceptable Behaviour\"  (27 June 2002)\n\n  FEATURES:\n\n   * Use more specific return codes when the remote compiler fails:\n     EXIT_COMPILER_CRASHED for a signal, or the return code from the\n     compiler if it exited non-0.\n\n  FIXES:\n\n    * Fix bug in h_hosts that caused us to write off the end of the\n      real argv[], rather than a copy.  Thanks to Julian Seward.\n      (Martin Pool)\n\n  PORTABILITY:\n\n    * Cope on compilers without varargs macros.  (Petter Reinholdtsen, Martin\n      Pool)\n\n    * Build on Solaris.  (Petter Reinholdtsen, Martin Pool)\n\n    * FreeBSD fixes.  (Claes Wallin, Frerich Raabe, Michael\n      Nottebrock, Martin Pool)\n\n  DOCUMENTATION:\n\n    * Manpages are correctly distributed and installed.  (Petter Reinholdtsen)\n\n  TESTING:\n\n    * Test suite now runs a server on localhost and tests against it,\n      and shuts it down on completion.  (Martin Pool)\n\n    * More test cases.  (Martin Pool)\n\f\ndistcc-0.4  \"Wisdom Like Silence\"  (9 June 2002)\n\n  ENHANCEMENTS:\n\n   * Assembly and assembly-with-preprocessor files can now be\n     assembled remotely.  (Martin Pool)\n\n   * Client now emits no messages unless there is a warning or error,\n     or $DISTCC_VERBOSE is specified.  This improves operation with\n     ccache.  (Martin Pool)\n\n   * Client and server both respect $TMPDIR if set.  (Martin Pool)\n\n   * Standalone server puts itself in the background and detaches from\n     controlling tty.  (Martin Pool)\n\n   * Server has --port option.  Currently useless, since there's no\n     corresponding option on the client.  (Martin Pool)\n\n   * Server has --pid-file option.  (Martin Pool)\n\n   * Server now allows multiple concurrent compile tasks, forking per\n     connection.  (Martin Pool)\n\n  BUG FIXES:\n\n    * gcc invocations with -fprofile-arcs or -ftest-coverage that\n      would emit coverage information to a local file are always run\n      locally.  (Martin Pool)\n\n    * Handle lines like \"gcc -c -c hello.c\".  (Martin Pool)\n\n  DOCUMENTATION:\n\n    * Various enhancements to the user manual.  (Martin Pool)\n\n  INTERNAL:\n\n    * Add a partial test suite based on PyUnit.  Python 2 is now\n      required to run the test suite, though not to just build or run\n      distcc.  (Martin Pool)\n\f\ndistcc-0.3  \"The Anticipation of a New Lover's Arrival\"  (28 May 2002)\n\n  ENHANCEMENTS:\n\n    * Support C++ compilation (including with ccache) by correctly\n      detecting prefixes.  (Ian Reinhart Geiser, Martin Pool)\n\n    * Use a FIFO to feed preprocessed source from the daemon into the\n      compiler, so that compilation can be overlapped with network\n      transit.  (Martin Pool)\n\n\n  BUG FIXES:\n\n    * Only fiddle with the compiler's stdin/out/err when running on\n      the server, not on the client.  This should make cpp from stdin\n      work.  (Reported by Ian Reinhart Geiser from KDE) (Martin Pool)\n\n    * Prevent server crashing on aborted connectiong by using EPIPE\n      rather than SIGPIPE in daemon as well as client.  (Martin Pool,\n      Ben Elliston.)\n\n\n  PORTABILITY:\n\n    * Builds on GNU/Linux, FreeBSD, and others if you're lucky.\n      (Martin Pool, Frerich Raabe, Luke Gorrie)\n\n\n  INTERNAL:\n\n    * Convert to using GNU automake and autoconf, so that distcc can\n      better handle portability, distribution and testing.  (Martin\n      Pool, Frerich Raabe, Ian Reinhart Geiser)\n\n    * Start adding some \"make check\" tests. (Martin Pool)\n\f\ndistcc-0.2 (17 May 2002)\n\n  ENHANCEMENTS:\n\n    * First public release\n\n    * Correctly and usefully builds various large programs\n\f\nLocal variables:\nmode: indented-text\nindented-tabs-mode: nil\ncoding: utf-8\nEnd:\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 2.515625,
          "content": "\n\t  distcc -- a free distributed C/C++ compiler system\n\n\t\t   https://github.com/distcc/distcc\n\n\t\t    by Martin Pool\n\n\t\t    \"pump\" functionality added by\n Fergus Henderson, Nils Klarlund, Manos Renieris, and Craig Silverstein\n\t\t\t    (Google Inc.)\n\ndistcc is a program to distribute compilation of C or C++ code across\nseveral machines on a network. distcc should always generate the same\nresults as a local compile, is simple to install and use, and is often\ntwo or more times faster than a local compile.\n\nUnlike other distributed build systems, distcc does not require all\nmachines to share a filesystem, have synchronized clocks, or to have\nthe same libraries or header files installed. Machines can be running\ndifferent operating systems, as long as they have compatible binary\nformats or cross-compilers.\n\nBy default, distcc sends the complete preprocessed source code across\nthe network for each job, so all it requires of the volunteer machines\nis that they be running the distccd daemon, and that they have an\nappropriate compiler installed.\n\nThe distcc \"pump\" functionality, added in distcc 3.0, improves on\ndistcc by distributing not only compilation but also preprocessing to\ndistcc servers. This requires that the server and client have the same\nsystem headers (the client takes responsibility for transmitting\napplication-specific headers).  Given that, distcc in pump mode yields\nthe same results that distcc would in non-pump mode, but faster, since\nthe preprocessor no longer runs locally. For more details on the pump\nfunctionality, see README.pump.\n\ndistcc is not itself a compiler, but rather a front-end to the GNU\nC/C++ compiler (gcc), or another compiler of your choice. All the\nregular gcc options and features work as normal.\n\ndistcc is designed to be used with GNU make's parallel-build feature\n(-j). Shipping files across the network takes time, but few cycles on\nthe client machine. Any files that can be built remotely are\nessentially \"for free\" in terms of client CPU.  This is even more true\nin \"pump\" mode, where the client does not even have to take time to\npreprocess the source files.  distcc has been successfully used in\nenvironments with hundreds of distcc servers, supporting dozens of\nsimultaneous compiles.\n\ndistcc is now reasonably stable and can successfully compile the Linux\nkernel, rsync, KDE, GNOME (via GARNOME), Samba and Ethereal.  distcc\nis nearly linearly scalable for small numbers of machines: for a\ntypical case, three machines are 2.6 times faster than one.\n\ndistcc is distributed under the GNU General Public Licence v2.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.6982421875,
          "content": "# distcc -- a free distributed C/C++ compiler system\n\nby Martin Pool\n\nCurrent Documents: <https://distcc.github.io/>\n\nFormerly <http://distcc.org/>\n\n\"pump\" functionality added by\nFergus Henderson, Nils Klarlund, Manos Renieris, and Craig Silverstein (Google Inc.)\n\ndistcc is a program to distribute compilation of C or C++ code across\nseveral machines on a network. distcc should always generate the same\nresults as a local compile, is simple to install and use, and is often\ntwo or more times faster than a local compile.\n\nUnlike other distributed build systems, distcc does not require all\nmachines to share a filesystem, have synchronized clocks, or to have\nthe same libraries or header files installed. Machines can be running\ndifferent operating systems, as long as they have compatible binary\nformats or cross-compilers.\n\nBy default, distcc sends the complete preprocessed source code across\nthe network for each job, so all it requires of the volunteer machines\nis that they be running the distccd daemon, and that they have an\nappropriate compiler installed.\n\nThe distcc \"pump\" functionality, added in distcc 3.0, improves on\ndistcc by distributing not only compilation but also preprocessing to\ndistcc servers. This requires that the server and client have the same\nsystem headers (the client takes responsibility for transmitting\napplication-specific headers).  Given that, distcc in pump mode yields\nthe same results that distcc would in non-pump mode, but faster, since\nthe preprocessor no longer runs locally. For more details on the pump\nfunctionality, see README.pump.\n\ndistcc is not itself a compiler, but rather a front-end to the GNU\nC/C++ compiler (gcc), or another compiler of your choice. All the\nregular gcc options and features work as normal.\n\ndistcc is designed to be used with GNU make's parallel-build feature\n(-j). Shipping files across the network takes time, but few cycles on\nthe client machine. Any files that can be built remotely are\nessentially \"for free\" in terms of client CPU.  This is even more true\nin \"pump\" mode, where the client does not even have to take time to\npreprocess the source files.  distcc has been successfully used in\nenvironments with hundreds of distcc servers, supporting dozens of\nsimultaneous compiles.\n\ndistcc is now reasonably stable and can successfully compile the Linux\nkernel, rsync, KDE, GNOME (via GARNOME), Samba and Ethereal.  distcc\nis nearly linearly scalable for small numbers of machines: for a\ntypical case, three machines are 2.6 times faster than one.\n\n## Licence\n\ndistcc is distributed under the GNU General Public Licence v2.\n\n## Resources\n\n* Repo, questions, and bugs: https://github.com/distcc/distcc\n\n* [Stack Overflow questions](http://stackoverflow.com/questions/tagged/distcc)\n"
        },
        {
          "name": "README.packaging",
          "type": "blob",
          "size": 3.408203125,
          "content": "$Id: README.packaging,v 1.7 2004/02/20 04:11:26 mbp Exp $  -*- indented-text -*-\n\nPlease read this file if you distribute packages of distcc and\nconsider these requests.\n\n - If you make available packages or ports for some system, please\n   send mail to the list so that I can include a link on the web site.\n\n - If you make change to program, please append to the version number\n   so that it can be distinguished from the upstream version, e.g. in\n   bug reports, and document your changes.  (For example, change it to\n   \"0.13-foo11\" if you modify it for the Fooix distribution.)\n\n   I request this because I have had distributors introduce broken\n   patches into distcc, and if somebody asks for support I want to\n   know they're not using the same source.  I have seen this happen on\n   samba and rsync as well and it wastes everybody's time when the two\n   parties see different programs as \"foo-1.2.3\".\n\n   In the steady state there ought to be little need for distributors\n   to patch anything; any reasonably portability fixes will be merged\n   and if they add new features it deserves a different version.\n\n - Please install distccd into a directory that is on the default\n   $PATH.  (If sbin is not on the path for all users, please don't put\n   it there.)  This is important to making ssh work without hassle,\n   and is compliant with the Linux filesystem hierarchy standard\n   (FHS).\n\n - distcc uses the standard GNU configure options to set installation\n   directories.  In particular, you may want to change --prefix=/usr,\n   and --sysconfdir=/etc.  In addition you can use $(DESTDIR) when\n   doing \"make install\" to install into a virtual root directory.\n\n - Because the daemon does not authenticate connections, please check\n   that the administrator understands the consequences before starting\n   it.  Do not start it automatically when the package is installed.\n\n - If your installation script prompts for parameters, consider asking\n   for a list of allowed netmasks to pass to the daemon's --allow\n   option.\n\n - When installing the daemon, please create a system user called\n   \"distcc\" for the use of the daemon.  This is better than running\n   the daemon as \"nobody\".  You can either remove the user or leave it\n   around if the package is uninstalled, depending on your\n   distribution's policy.\n\n - I'd prefer for distributions to arrange for distccd to run as a\n   standalone daemon (--daemon), not from inetd.  It is a bit easier\n   to support, and in the future there may be optimizations that only\n   work in standalone mode.\n\n - If any patches are necessary for portability please forward them to\n   me so that they can be considered for inclusion upstream.\n\n - Check that distcc uses shared libraries for popt and other things,\n   if that makes sense on your system.  In particular, make sure\n   libraries in /usr/local are linked properly.\n\n - Try to make sure gcc is installed with fully-qualified names to aid\n   users of distcc.  (e.g. 'gcc-3.2', 'i386-linux-gcc-3.2' and\n   'i386-redhat-linux-cc-3.2.2').  This makes it much more likely that\n   people will be able to plug-and-go for cross-architecture or\n   cross-OS builds.  It's good to name even native compilers this way\n   so that they can participate in heterogeneous builds.  If you don't\n   maintain the compiler packages for your OS, please talk to the\n   person who does.\n\n - Consider putting this line into /etc/services\n\ndistcc\t\t3632/tcp\t\t\t# distributed compiler\n\n\nThankyou for your help.\n"
        },
        {
          "name": "README.pump",
          "type": "blob",
          "size": 2.6357421875,
          "content": "See README for basic information on distcc.\n\nDistcc's \"pump\" mode improves on plain distcc by distributing not only\ncompilation but also preprocessing to distcc servers.\n\nThe pump mode uses an \"include server\" process that runs during\nthe build. The include server parses and analyzes source (including\nheader) files. It runs on the workstation that initiates the build.\nThe include server analyzes each header file only a few times during a build,\nsometimes just once. In contrast, during ordinary distcc operation,\nthe preprocessor examines each header file multiple times, even hundreds of \ntimes for a large build.\n\nIn pump mode, a static analysis algorithm inspects each #include directive\nand computes a superset of the possible values of its argument.\nThe resulting dependency graph among header files persists during\nthe lifetime of the include server, which then acts as a cache for include\nanalysis.\n\nThe include server compresses source files into a temporary directory\nas they are encountered. In this way, a given source file is\ncompressed only once during the build.\n\nIt may happen that a header file is included via an absolutely\nspecified include directory such as -I/absolute/path. But on the\ncompilation server the path -I/absolute/path does not exist; instead\nthe server places foo.h under /server_temporary_path/absolute/path for\nsome /server_temporary_path root directory. This directory has no\nmeaning on the workstation. Before compressing foo.h, the include\nserver therefore inserts a #line directive in foo.h, to inform the\npreprocessor that the real location is /absolute/path.\n\nThe distcc client asks the include server for the list of\ncompressed files that constitute the transitive closure of the source\nfile to be compiled. It then spools these files to a distcc\nserver. The distcc server unpacks these files in the\n/server_temporary_path directory before preprocessing and compiling.\nThe server also rewrites include options, such as -I's, to reflect the\nnew locations of the files on the server. The .d and the .o files are\nboth rewritten as necessary to refer to client-side filenames and \nreturned to the pump-mode client.\n\nPump mode is able to distribute compilations up to 10X faster than\nplain distcc. But because building also involves linking and perhaps\ngeneration of source files, the overall speed-up of the build time is\nvariable.\n\nThe pump mode was developed to be used with large clusters of distcc\nservers, providing hundreds of CPUs. With versions of gcc >= 4.1.1,\npump mode will probably not show major performance gains using\nclusters of less than ten CPUs. The preprocessor running on the\nworkstation is fast enough to keep that many machines busy.\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 36.8720703125,
          "content": "TODO list for distcc\n\n--> See also TODO and FIXME comments in source files and doc/todo/\n\n\nshould rewrite non-ELF, non-DWARF2 object files\n\n    The existing include-server code will rewrite ELF files to refer\n    to source-file names (in the DWARF2 sections) as they would appear\n    on the client machine, rather than as they appear when rewritten\n    on the server machine.  We should enhance that functionality to\n    work with other object formats, such as Mach-O (used by OS X).\n\n\nshould probably actually check the number of CPUs for use on localhost\n\n\nfailing to resolve a host should be a soft failure\n\n\nState files depend on host byte order and break when DISTCC_DIR is\nshared between heterogeneous machines.  Of course sharing this\ndirectory is probably a bad idea anyhow.\n\n\nerror messages get badly interleaved\n\n    Large writes are not always atomic.  \n\n    When running parallel compiles that produce many warnings/errors,\n    the errors can get mixed up, both between lines and within lines.\n\n    Someone suggested writing out through stdio, but I don't see why\n    that would particularly help.\n\n    This needs to be done even when writing to a file.\n\n    It might be more useful to voluntarily write output one line at a\n    time so as to increase the chance that each line is written atomically.\n    \n\nhardcode \"gcc\" not \"cc\"?\n\n    I don't think distcc works with anything else.  So why take the\n    risk of calling anything else?\n\n\nmonitor/state/lock files be on NFS\n\n    What happens if the processes are missing?\n\n    Should we perhaps specially handle files created by a remote\n    machine, e.g. but the hostname in?\n\n    Handle ESTALE or short EOF.\n\n    http://groups.google.com/groups?selm=netappCJyvKo.MrI%40netcom.com\n\n\nif connection fails, reschedule remotely?\n\n    See messages from Heiko\n\n    Perhaps if compilation on one remote machine fails, try another, rather\n    than falling back to localhost?\n\n    However, we do need to make sure that if all remote possibilities\n    are eliminated, then we still run locally.\n\n    Perhaps we should more carefully distinguish e.g. \"failed to connect\",\n    \"server dropped connection\", etc etc.  \n\n    Backing off from downed machines makes this a little\n    less unnecessary.\n\n\nauto-check socklen_t mess\n\n    Dmitri says:           \n\n> By the way, about the accept() argument type (int, size_t, or socklen_t)\n> issue I had already reported in a previous post, an autoconf macro is\n> available after all. See:\n> http://www.gnu.org/software/ac-archive/htmldoc/ac_prototype_accept.html\n> http://www.gnu.org/software/ac-archive/htmldoc/ac_func_accept_argtypes.html\n> It would be better to fix this specific issue, as I think it could break\n> 64-bit builds where the type of the argument is actually important.\n\n\n    Perhaps it should be int if not defined.  See accept(2).\n\n\nsome kind of memory leak in gnome monitor?\n\n\n\"compiler not found\"\n\n    Perhaps distinguish this as a separate error case.  We need to\n    trap the error from exec on the server, pass that back across the\n    network, and then handle it specially on the client.\n\n    Back off from the machine where it failed and retry locally?\n\n    This would be more useful when we explicitly set compiler versions.\n\n\nscheduler should allow for clock/bus speed\n\n    (Perhaps front-side bus speed is dominant, since compiling won't\n    fit in cache?)\n\n    Suppose we have one 2GHz and one 1GHz machine.  Jobs will take\n    roughly twice as long to run on the second one; conversely we can\n    run two jobs on the first one in the time it takes to run one on\n    the second machine.\n\n\n\ngkrellm monitor for distcc\n\n    Ought to work with client-server mode\n \n    Possibly easier than writing everything ourselves\n\n    Show number of running jobs?\n\n\ndon't change the path\n\n    Rather than getting into this mess of changing the $PATH, perhaps\n    we should just check more carefully at the moment that we execute\n    things?\n\n    One problem with this might be interaction with ccache.  If we\n    have doubly masqueraded distcc:ccache:gcc, then ccache probably\n    needs to see itself as the first item on the path to be able to\n    find the right gcc.\n\n    Perhaps we should remove items from the path, rather than trimming\n    the path?\n\n    It would be good to unify the code in dcc_support_masquerade()\n    with dcc_trim_path().\n\n    Perhaps distccd should do path munging when it gets a request\n    rather than at startup.  It's ugly that the daemon's idea of the\n    correct path may be wrong if files are changed after the daemon is\n    started.\n\n\nDEPENDENCIES_OUTPUT\n\n    The problem is when the preprocessor and compiler are both run\n    with this variable set.  The compiler appends directions for\n    compiling from the temporary .i to the temporary .o, which is\n    unwanted.\n\n    This is a problem for ccache (now fixed), but not a problem for\n    distcc because we always run the preprocessor and always locally.\n    The remote compiler doesn't see the variable.\n\n\nmultiple cleanup calls at end\n\n    why is this happening?\n\n\nmonitor\n\n    There's two things that could be monitored.  First is the daemon running\n    on `this' computer and the client that is sending processes across the\n    network.\n\n    lisa writes:\n    \n    Some things I'd like to see for the daemon:\n    1) Uptime\n    2) Configuration (port, lzo compression? ssh enabled? etc)\n    3) Number of jobs done (and a spread of the types of errors reported)\n    4) Average throughput\n    5) Current compiling tasks (pid, Src, filesize, filename, time recv'd)\n\n\n    For the client (ie, distccmon-gnome replacement):\n    On a per job basis\n    For SEND and RECEIVE state:\n    1) Current throughput\n    2) Type of connection (ssh? port? lzo?)\n    3) pid\n    4) filename\n    For (remote) COMPILE state:\n    1) The actual pre-processed filename\n    2) Type of connection (ssh? port? lzo?)\n    3) pid\n    For (local) LINKING state:\n    1) The actual pre-processed filename\n    2) pid\n    3) Where the object code was compiled\n    4) The post-linked filenamed (gcc ... -o [display this])\n    For (local) PREPROCESS state:\n    1) filename\n    2) pid\n\n    A tall order to be sure, and it'd suck to do the GUI... but you asked.\n    :)\n\n\n\nunlink .i file as soon as it has been opened for sending\n\n    Might help with vm performance by hinting to the kernel that it\n    will be discarded.\n\n    Possibly reduces the chances of temporary files being left behind.\n\n    However, will not work on Windows.\n\n\n\nvariable to add extra remote cflags, to handle icpc\n\n\n\nhandle -xc++, etc\n\n    Can be either one or two arguments.\n\n\nhandle -Wp,-MF\n\n    Some makefiles seem to generate this.  Aarg!\n\n\n\nInstallation as an SSH subsystem\n\n    Might make use easier on Windows.  I don't see any real advantage\n    on Unix.\n \n    I think the daemon should already be OK for this.  It just\n    requires a slight change in the way we call ssh from the client.\n\n    In fact, if you just wrote a small script that rearranged the\n    arguments and put that in DISTCC_SSH then everything would\n    probably be fine already.\n\n\ncontrol through command line\n\n    Handle options like\n\n       --distcc-verbose\n       --distcc-hosts=\n\n    to allow options to be set on the command line.\n\n    I'm not sure this is a good idea or useful.\n\n\nIf we have produced a .i file and need to fall back to running locally\nthen use that rather than the original source.  On the other hand,\nfalling back to running the original command is possibly more robust.\n\n * @todo Make absolutely sure that if we fail, the .o file is removed.\n * Perhaps it would be better to receive to a temporary file and then\n * rename into place?  On the other hand, gcc seems to just write\n * directly, and if we fail or crash then Make ought to know not to\n * use it.\n *\n * @todo Count the preprocessor, and any compilations run locally, against the\n * load of localhost.  In doing this, make sure that we cannot deadlock\n * against a load limit, by having a case where we need to hold one lock and\n * take another to make progress.  I don't think there should be any such case\n * -- we can release the cpp lock before starting the main compiler.\n *\n\nallow more control over verbosity\n\n    For example, for the client, it would be nice to get just 'info'\n    level messages about things that can or can't be distributed.\n\n\nsplit gcc-specific argument parsing into a separate module\n\n\n\nboredom\n\n    When there are too many jobs submitted by make, then we have to\n    wait until any slot is available.  Unfortunately there is no\n    OS-level locking system I can think of that allows us to block\n    waiting for any one of a number of resources.\n\n    If there are no slots to run, then at the moment we just sleep for\n    2s.  This is OK, but can leave the processor idle.  It would be\n    better to be woken up by other processes as they exit.  One way to\n    do this would be to listen on a named pipe for notifications.\n\n    This must be backed up by a sleep timer because we may not get the\n    notification if e.g. the other process is killed.  Also it won't\n    work on Cygwin, which doesn't have named pipes.\n\n    Simply doing a select() on a pipe allows us to block for a while\n    or until signalled.  Simply doing a nonblocking write of one byte\n    to the pipe ought to allow waking up exactly one of the sleepers.\n\n    Using an OS level semaphore to guard access to slots might work\n    with some fudging, but there is no good portable implementation of\n    them so it is moot.\n    \n    When woken, the clients can do one full round of trying to get a\n    slot and then go back to sleep.\n\n    This \"guides\" the OS scheduler towards keeping (almost) the exact\n    number of clients activated, without too many of them spinning.\n\n    We can't make the timeout too high, or the client will idle for a\n    long time waiting for it.  But if we make it too low then we have\n    the thundering herd problem that currently exists...\n\n    Perhaps this is overengineering: people shouldn't make the -j\n    number so high that this is hit very often, and we need to have\n    the timeout anyhow, so why not just rely on it.\n\n    Just listening on a pipe is cheaper than checking all the locks.\n\n\n\nintel CC\n\n    Does not understand the .ii extension.\n\n    We need to specify -xc++ to make it properly compile C++ from\n    preprocessed source.\n\n    Is it OK to just get the user to add this?\n\n    Perhaps we could add it always?\n    \n    Do we need a DISTCC_ADD_OPTIONS variable?\n\n\nclean up temp files when a client is signalled\n\n    Interrupting a compilation is pretty common.  It might be good to\n    handle this more cleanly.\n\n    We can also remove status files.  This would reduce the need for\n    monitor clients to handle dead state files, which might reduce\n    problems to do with viewing compilations by another user.\n\n\nglobally visible status files\n    \n    Perhaps store in a world-writable /var/lib/distcc, so that\n    they're visible even when TMPDIR or HOME has been reset, as when\n    building with emerge.\n\n    Another good case to support is compilation from inside a chroot\n    jail.\n    \n    It might also be nice to be able to see other people using your\n    machine either as a client or as a server.\n\n    This requires passing a trust boundary when publishing information\n    across accounts.  The directory needs to be writable and the\n    programs need to be robust against other users trying to cause\n    mischief.  \n\n    It's perhaps not great to allow that kind of security issue in a\n    default installation.  Should we really create a mode 777\n    directory by default?  umask will put some restrictions on what\n    can be seen.\n\n    Alternatively, have an environment variable that sets the state\n    location.  If people want it globally visible they can set it to a\n    global location.\n\n\ndnotify in monitor\n\n    This has been implemented, but I pulled it out because I'm not\n    convinced it is a good idea.   \n\n    Signals into GTK seem to cause some trouble when running from\n    valgrind etc.\n\n    Polling is not too expensive, and is nice and simple.  It also\n    allows easier ways to handle corner cases like cleaning up state\n    files left over after a compiler is terminated.\n\n    Could set up dnotify on the state directory so that we don't have\n    to keep polling it.  This would slightly reduce our CPU usage when\n    idle, and might allow for faster updates when busy.\n\n    We still have to scan the whole directory though, so we don't want\n    to do it too often.\n\n    I'm not sure how to nicely integrate this into GNOME though.\n    dnotify sends us a signal, which doesn't seem to fit in well with\n    the GNOME system.  Perhaps the dummy pipe trick?  Or perhaps we\n    can jump out of the signal?  \n\n    We can't call GTK code from inside.\n\n    state changes are \"committed\" by renaming the file, so we'd want\n    to listen for DN_RENAME I think.\n\n    We need to make sure not to get into a loop by reacting to our own\n    delete events.\n\n\nMasquerade\n\n    It might be nice to automatically create the directory and\n    symlinks.  However we don't know what compiler names they'll want\n    to hook...  \n\n    Probably the best that we can do is provide clear instructions for\n    users or package distributors to set this up.\n\n\nPackaging\n\n    What about an apt repository?\n\n\nStatistics\n\n    Accumulate statistics on how many jobs are built on various machines.\n\n    Want to be able to do something like \"watch ccache -s\".\n\n    Perhaps just dump files into a status directory where they can be\n    examined?\n\n    Ignore (or delete) files over ~60s old.  This avoids problems with\n    files hanging around from interrupted compilations. \n\n\nrefactor name handling\n\n    Common function that looks at file extensions and returns\n    information about them\n\n        - what is the preprocessed form of this extension?\n        - does this need preprocessing?\n        - is this a source file?\n\n\ncheck that EINTR is handled in all cases\n\n\ncheck that all lengths are unsigned 32-bit\n\n    I think this is done, but it's worth checking a bit more.\n\n\nin plain (non-pump) mode, abort when cpp fails\n\n    The same SIGCHLD handling approach used to feed the compiler from\n    a fifo might be used to abort early if the preprocessor fails.\n    This will happen reasonably often, whenever there is a problem\n    with an include, ifdef, comment, etc.  \n\n    It might save waiting for a long connection to complete.\n\n    One complication is that we know the compiler ought to consume all\n    its input but we don't know when cpp ought to finish.  So the\n    sigchld handler will have to check if it failed or not.  If it\n    failed, then abort compilation.  If it did not fail, then keep\n    going with the connection or whatever.\n\n    This is probably not worthwhile at the moment because connections\n    generally seem faster than waiting for cpp.\n\n\nfeed compiler from fifo\n\n    Probably quite desirable, because it allows the compiler to start\n    work sooner.\n\n    This was originally removed because of some hitches to do with\n    process termination.  I think it can be put back in reliably, but\n    only if this is fixed.  Perhaps we need to write to the compiler\n    in nonblocking mode?\n\n    Perhaps it would be better to talk to both the compiler and\n    network in nonblocking mode?  It is pretty desirable to pull\n    information from the network as soon as possible, so that the TCP\n    windows and buffers can open right up.\n\n    Check CVS to remember what originally went wrong here.\n\n    Events that we need to consider:\n\n        Client forks\n        \n        Compiler opens pipe\n        \n        Client exits\n\n        Server opens pipe\n        \n    There are a few possibilities here:\n\n        Client opens fifo, reads all input, and exits.  The normal\n        success case.\n\n        Client never reads from fifo and just exits.  Would happen if\n        the compiler command line was wrong.\n\n        Client reads from fifo but not the whole thing, and then\n        exits.\n\n    Opening the fifo is a synchronization point: in blocking mode\n    neither the compiler or server can proceed past here until the other\n    one opens it.  If the compiler exits, then the server ought to be\n    broken out of it by a SIGCHLD.  But there is a race condition\n    here: the SIGCHLD might happen just before the open() call.  \n\n    We need to either jump out of the signal handler and abort the\n    compilation, or use a non-blocking open and a dummy pipe to break\n    the select().\n\n    If we jump out with longjmp then this makes the code a bit\n    convoluted.\n\n    Alternatively the signal handler could just do a nonblocking open\n    on the pipe, which would allow the open to complete, if it had not\n    already.\n\n    This was last supported in 0.12.  That version doesn't handle the\n    compiler exiting without opening the pipe though.\n\n\nstreaming input output\n\n    We could start sending the preprocessed source out before it is\n    complete.  This would require a protocol that allows us to send\n    little chunks from various streams, followed by an EOF.  \n\n    This can certainly be done -- fsh and ssh do it.  However,\n    particularly if we want to allow for streaming more than one thing\n    at a time, then getting all the timing conditions right to avoid\n    deadlock caused by bubbles of data in TCP pipes.  rsync has had\n    trouble with this.  It's even more hairy when running over ssh.\n\n    So on the whole I am very skeptical about doing this.  Even when\n    refactored into a general 'distexec', this is more about batch\n    than interactive processing.\n\n\nassemble on client\n\n    May be useful if there is a cross compiler but no cross assembler,\n    as is supposed to be the case for PPC AIX.  See thread by Stuart D\n    Gathman.  Would also allow piping output back to client, if the\n    protocol was changed to support that.\n\n\nweb site\n\n    http://user-mode-linux.sourceforge.net/thanks.html\n\n\nsendfile\n \n    perhaps try sendfile to receive as well, if this works on any platforms.\n\n\nstatic linking\n    \n    cachegrind shows that a large fraction of client runtime is spent in the\n    dynamic linker, which is kind of a waste.  In principle using dietlibc\n    might reduce the fixed overhead of the client.  However, the nsswitch\n    functions are always dynamically linked: even if we try to produce a\n    static client it will include dlopen and eventually indirectly get libc,\n    so it's probably not practical.\n\n\ntesting\n\n    How to use Debian's make-kpkg with distcc?  Does it work with the\n    masquerade feature?\n\n    http://moin.conectiva.com.br/files/AptRpm/attachments/apt-0.5.5cnc4.1.tar.bz2\n\n\ncoverage\n\n    Try running with gcov.  May require all tests to be run from the same\n    directory (no chdir) so that the .da files can accumulate properly.\n\n\nslow networks\n\n    Use Linux Traffic Control to simulate compilation across a slow\n    network.\n\n\nscheduling onto localhost\n\n    Where does local execution fit into the picture?\n\n    Perhaps we could talk to a daemon on localhost to coordinate with\n    other processes, though that's a bit yucky.\n\n    However the client should use the same information and shared\n    state as the daemon when deciding whether it can take on another\n    job.\n\n    At the moment we just use a fixed number of slots, by default 4,\n    and this seems to work adequately.\n\n\nmake \"localhost\" less magic\n\n    Recognizing this magic string and treating it differently from\n    127.0.0.1 or the canonical name of the host is perhaps a bit\n    strange.  People do seem to get it wrong.  I can't think of a\n    better simple solution though.\n\n\nblacklist/lock by IP, not by name\n               \n    Means we need reliable addr-to-string for IPv4 and IPv6.\n\n    Any downside to this?\n\n    Would fix Zygo's open Debian bug.\n\n\nDNS multi-A-records\n\n    build.foo.com expands to a list of all IP addresses for building. \n\n    Need to choose an appropriate target that has the right compilers.\n\n    Probably not a good idea.\n\n    If we go to using DNS roundrobin records, or if people have the same\n    HOSTS set on different machines, then we can't rely on the ordering of\n    hosts.  Perhaps we should always shuffle them?\n\n    ssh is an interesting case because we probably want to open the\n    connection using the hostname, so that the ssh config's \"Host\"\n    sections can have the proper effect.\n\n    Sometimes people use multi A records for machines with several\n    routeable interfaces.  In that case it would be bad to assume the\n    machine can run multiple jobs, and it is better to let the\n    resolver work out which address to use.\n\n\nDNS SRV records\n    \n    Can only be updated by zone administrator -- unless you have\n    dynamic DNS, which is quite possible.\n\n\n\nbetter scheduler\n\n    What's the best way to schedule jobs?  Multiprocessor machines present\n    a considerable complication, because we ought to schedule to them even\n    if they're already busy.\n\n    We don't know how many more jobs will arrive in the future.  This\n    might be the first of many, or it might be the last, or all jobs might\n    be sequenced in this stage of compilation.\n\n    Generic OS scheduling theory suggests (??) that we should schedule a\n    job in the place where it is likely to complete fastest.  In other\n    words, we should put it on the fastest CPU that's not currently busy.\n\n    We can't control the overall amount of concurrency -- that's down to\n    Make.  I think all we really want is to keep roughly the same number\n    of jobs running on each machine.\n\n    I would rather not require all clients to know the capabilities of the\n    machines they might like to use, but it's probably acceptable.\n\n    We could also take the current load of the CPUs into account, but I'm\n    not sure if we could get the information back fast enough for it to\n    make a difference.\n\n    Note that loadavg on Linux includes processes stuck in D state,\n    which are not necessarily using any CPU.\n\n\n    We want to approximate all tasks on the network being in a single queue,\n    from which the servers invite tasks as cycles become available.  \n\n    However, we also want to preserve the classic-TCP model of clients opening\n    connections to servers, because this makes the security model\n    straightforward, works over plain TCP, and also can work over SSH.\n\n    http://www.cs.panam.edu/~meng/Course/CS6354/Notes/meng/master/node4.html\n\n    Research this more.\n\n    We \"commit\" to using a particular server at the last possible moment: when\n    we start sending a job to it.  This is almost certainly preferable to\n    queueing up on a particular server when we don't know that it will be the\n    next one free. \n\n    One analogy for this is patients waiting in a medical center to see one of\n    several doctors.  They all wait in a common waiting room (the queue) until\n    a doctor (server) is free.  Normally the doctors would come into the\n    waiting room to say \"who's next?\", but the constraint of running over TCP\n    means that in our case the doctors cannot initiate the transaction.\n    \n    One approach would be to have a central controller (ie receptionist), who\n    knows which clients are waiting and which servers are free, but I don't\n    really think the complexity is justified at this stage.\n\n    Imagine if the clients sat so that they could see which doctor had their\n    door open and was ready to accept a new patient.  The first client who\n    sees that then gets up to go through that door.  There is a possibility of\n    a race when two patients head for the door at the same time, but we just\n    need to make sure that only one of them wins, and that the other returns\n    to her seat and keeps looking rather than getting stuck.\n\n    Ideally this will be built on top of some mechanism that does not rely on\n    polling.\n\n    I had wondered whether it would work to use refused TCP connections to\n    indicate that a server's door is closed, but I think that is no good.  \n\n    It seems that at least on Linux, and probably on other platforms, you\n    cannot set the TCP SYN backlog down to zero for a socket.  The kernel will\n    still accept new connections on behalf of the process if it is listening,\n    even if it's asked for no backlog and if it's not accepting them yet.\n    netstat shows these processes just in \n\n    It looks like the only way to reliably have the server turn away\n    connections is to either close its listening socket when it's too busy, or\n    drop connections.  This would work OK, but it forces the client into\n    retrying, which is inefficient and ugly.\n\n    Suppose clients connect and then wait for a prompt from the server before\n    they begin to send.  For multiple servers the client would keep opening\n    connections to new machines until it got an invitation to send a job.\n\n    This requires a change to the protocol but it can be made backward\n    compatible if necessary, though perhaps that's not necessary.\n\n    This would have the advantage of working over either TCP or SSH.  The main\n    problem is that the client will potentially need to open connections to\n    many machines before it can proceed.\n\n    We almost certainly need to do this with nonblocking IO, but that should\n    be reasonably portable.\n    \n    Local compilation needs to be handled by lockfiles or some similar\n    mechanism.\n\n    So in pseudocode this will be something like\n\n    looking_fds = []\n    while not accepted:\n      select() on looking_fds:\n        if any have failed, remove them\n\tif any have sent an invitation:\n\t  close all others\n\t  use the accepted connection\n      open a new connection\n\n    I'm not sure if connections should be opened in random order or the order\n    they're listed.\n\n    Clients are almost certainly not going to be accepted in the order in\n    which they arrive. \n\n    If the client sends its job early then it doesn't hurt anybody else.  I\n    suppose it could open a lot of connections but that sort of fairness issue\n    is not really something that distcc needs to handle.  (Just block the user\n    if they misbehave.)\n\n    We can't use select() to check for the ability to run a process locally.\n    Perhaps the select() needs to timeout and we can then, say, check the load\n    average.\n\n\nproblems with new protocol\n\n    Does anyone actually want this?  I really need an example of\n    somewhere where it would be useful.\n\n    The server may need to know the right extension for the temporary\n    file to make the compiler behave in the right way.  In fact,\n    knowing the acceptable temporary filenames is part of the\n    application definition.\n\n\nCompression\n\n    Can compression automatically be turned on, rather than requiring\n    user configuration?  I can't tell at the moment when would be the\n    right time to do that.\n    \n    Is it cheap enough to always have it on?  We not only pay the cost\n    of compression, but we also need to give up on using sendfile()\n    and therefore pay for more kernel-userspace transitions and some\n    data copying.  Therefore probably not, at least for GigE.\n\n\nUser Manual\n\n    The UML manual is very good\n\n - Add some documentation of the benchmark system.  Does this belong\n   in the manual, or in a separate manual?\n\n - FAQ: Can't you check the gcc version?  No, because gcc programs which\n   report the same versions number can have different behaviours, perhaps due\n   to vendor/distributor patches.\n\n\n\nJust cpp and linker?\n\n   Is it easy to describe how to install only the bits of gcc needed for\n   distcc clients?  Basically the driver, header, linker, and specs.  Would\n   this save much space?\n\n   Certainly installing gcc is much easier than installing a full cross\n   development environment, because you don't need headers or libraries.  So\n   if you have a target machine that is a bit slower but not terrible (or you\n   don't have many of them) it might be convenient to do most of your builds\n   on the target, but rely on helpers with cross-compilers to help out.\n\n\n-g support\n\n    I'm told that gcc may fix this properly in a future release.  There would\n    then be no need to kludge around it in distcc.  [Yes, this is now\n    fixed in gcc 4.0 and later.]\n\n    Perhaps detect the -g option, and then absolutify filenames passed to the\n    compiler.  This will cause absolute filenames to appear in error messages,\n    but I don't see any easy way to have both correct stabs info and also\n    correct error messages.\n\n    Is anything else wrong with this approach?\n\n  \nkill compiler\n\n    If the client is killed, it will close the connection.  The server ought\n    to kill the compiler so as to prevent runaway processes on the server. \n\n    This probably involves selecting() for read on the connection.\n\n    The compilation will complete relatively soon anyhow, so it's not worth\n    doing this unless there is a simple implementation.\n    \n\ntcp fiddling\n\n    I wonder if increasing the maximum window size (sys.net.core.wmem_default,\n    etc) will help anything?  It's probably dominated by scheduling\n    inefficiency at the moment.\n\n    The client does seem to spend time in wait_for_tcp_memory, which\n    might be benefitted by increasing the available memory.\n\n\nbenchmark\n\n    Try aspell and xmms, which may have strange Makefiles.\n\n    glibc\n    gtk/glib\n    glibc++\n    qt\n    gcc\n    gdb\n    linux\n    openoffice\n    mozilla\n\n\nrsync-like distributed caching\n\n    Look in the remote machine's cache as well.\n\n    Perhaps use a SQUID-like broadcast of the file digest and other critical\n    details to find out if any machine in the workgroup has the file cached.\n    Perhaps this could be built on top of a more general file-caching\n    mechanism that maps from hash to body.  At the moment this sounds like\n    premature optimization.\n\n    Send source as an rdiff against the previous version.\n\n    Needs to be able to fall back to just sending plain text of course.\n\n    Perhaps use different compression for source and binary.\n\n    librsync is probably not stable enough to do this very well.\n\n\n--ping option [Done - see \"lsdistcc\"]\n       \n    It would be nice to have a <tt>--ping</tt> client option to contact\n    all the remote servers, and perhaps return some kind of interesting\n    information.  \n\n    Output should be machine-parseable e.g. to use in removing\n    unreachable machines from the host list.\n\n    Perhaps send little fixed signatures, based on --version.  Would\n    this ever be useful?\n\n\nnon-CC-specific Protocol\n\n  Perhaps rather than getting the server to reinterpret the command\n  line, we should mark the input and output parameters on the client.\n  So what's sent across the network might be\n\n    distcc -c @@INPUT@@ -o @@OUTPUT@@\n\n  It's probably better to add additional protocol sections to say\n  which words should be the input and output files than to use magic\n  values.\n\n  The attraction is that this would allow a particularly knotty part\n  of code to be included only in the client and run only once.  If any\n  bugs are fixed in this, then only the client will need to be\n  upgraded.  This might remove most of the gcc-specific knowledge from\n  the server.\n\n  Different clients might be used to support various very different\n  distributable jobs.\n\n  We ought to allow for running commands that don't take an input or\n  output file, in case we want to run \"gcc --version\".\n\n  The drawback is that probably new servers need to be installed to\n  handle the new protocol version.\n\n  I don't know if there's really a compelling reason to do this.  If\n  the argument parser depends on things that can only be seen on the\n  client, such as checking whether files exist, then this may be\n  needed.\n  \n  The server needs to use an appropriately-named temporary file.\n\n\ngcc wierdnesses:\n\n    distcc needs to  handle <tt>$COMPILER_PATH</tt> and\n    <tt>$GCC_EXEC_PREFIX</tt> in some sensible way, if there is one.\n    Not urgent because I have never heard of them being used.\n\n\nnetworking timeouts:\n\n    Also we want a timeout for name resolution.  The GNU resolver has\n    a specific feature to do this.  On other systems we probably need\n    to use alarm(), but that might be more trouble than it is worth.  Jonas\n    Jensen says:\n\n\tTiming out the connect call could be done easier than this, just by\n\tinterrupting it with a SIGALRM, but that's not enough to abort\n\tgethostbyname. This method of longjmp'ing from a signal handler is what\n\tthey use in curl, so it should be ok.\n\n\n\n\nconfigurable timeout?\n\n    Maybe make the various timeouts configurable?  Isn't it possible\n    to choose values that suit everyone?\n\n    Maybe the initial connection timeout should be shorter?\n\n\nwaitstatus\n\n    Make sure that native waitstatus formats are the same as the\n    Unix/Linux/BSD formats used on the wire.  (See\n    <http://www.opengroup.org/onlinepubs/007904975/functions/wait.html>,\n    which says they may only be interpreted by macros.)  I don't know\n    of any system where they're different.\n\n\noverride compiler name\n\t    \n    distcc could support cross-compilation by a per-volunteer option to\n    override the compiler name.  On the local host, it might invoke gcc\n    directly, but on some volunteers it might be necessary to specify a more\n    detailed description of the compiler to get the appropriate cross tool.\n    This might be insufficient for Makefiles that need to call several\n    different compilers, perhaps gcc and g++ or different versions of gcc.\n    Perhaps they can make do with changing the DISTCC host settings at\n    appropriate times.\n\n    I'm not convinced this complexity is justified.\n\n    Rusty is doing this in ccontrol, which is possibly a better place\n    for it.\n\n\nuse spawn() on Windows\n \n     fork() is very slow.  Can we get away with only using spawn()?\n\n\n\nInstallable package for Windows\n\n    Also, it would be nice to have an easily installable package for Windows\n    that makes the machine be a Cygwin-based compile volunteer.  It probably\n    needs to include cross-compilers for Linux (or whatever), or at least\n    simple instructions for building them.\n\n\n\nautodetection (Rendezvous, etc)\n\n    http://dotlocal.org/mdnsd/\n\n    The Apple licence is apparently not GPL compatible.\n\n    Brad reckons SLP is a better fit.\n\n    Automatic detection (\"zero configuration\") of compile volunteers is\n    probably not a good idea, because it might be complicated to implement,\n    and would possibly cause breakage by distributing to machines which are\n    not properly configured.\n\n\nOpenMOSIX autodiscovery\n\n    what is this?\n\n    [This is probably moot now - I think ZeroConf support\n    accomplishes the same goals?]\n\n\ncentral configuration\n\n\n    Notwithstanding the previous point, centralized configuration for a site\n    would be good, and probably quite practical.  Setting up a list of\n    machines centrally rather than configuring each one sounds more friendly.\n    The most likely design is to use DNS SRV records (RFC2052), or perhaps\n    multi-RR A records.  For example, compile.ozlabs.foo.com would resolve to\n    all relevant machines.  Another possibility would be to use SLP, the\n    Service Location Protocol, but that adds a larger dependency and it seems\n    not to be widely deployed.\n\n\n\nLarge-scale Distribution\n\n    distcc in it's present form works well on small numbers of close machines\n    owned by the same people.  It might be an interesting project to\n    investigate scaling up to large numbers of machines, which potentially do\n    not trust each other.  This would make distcc somewhat more like other\n    \"peer-to-peer\" systems like Freenet and Napster.\n\n\n-------------------------------------------------------------------------------\nDONE TODOs\n-------------------------------------------------------------------------------\n\npreprocess remotely [Done! This is distcc 3.0's \"pump\" mode.]\n\n    Some people might like to assume that all the machines have the same\n    headers installed, in which case we really can preprocess remotely and\n    only ship the source.  Imagine e.g. a Clearcase environment where the same\n    filesystem view is mounted on all machines, and they're all running the\n    exact same system release.\n\n    It's probably not really a good idea, because it will be marginally faster\n    but much more risky.  It is possible, though, and perhaps people building\n    files with enormous headers would like it.\n\n    Perhaps those people should just use a different tool like dmake, etc.\n\nSSH connection hoarding\n\n    It might be nice to hold open SSH connections to avoid the network\n    and CPU overhead of opening new ones.  \n\n    However, fsh is far too slow, probably because of being written in\n    Python. \n\n    It's only going to work on systems which can pass file descriptors\n    and therefore needs to be optional.  Probably this only works on\n    Unix.\n\n    Building the kernel between the three x2000s seems to make\n    localhost thrash.  A few jobs (but not many) get passed out to the\n    other machines.\n\n    Perhaps for C++ or something with really large files fsh would be\n    better because the cost of starting Python would be amortized\n    across more work.\n\n    I don't think this needs to be done in distcc.  It can be a\n    completely separate project to just rewrite fsh into C.  Indeed\n    you could even be compatible with the Python implementation and\n    just write the short-lived client bit in C.\n\n    [This has been done, in ssh itself: the -M option and the\n    ControlMaster and ControlPath configuration settings.]\n\nPackaging\n\n    Perhaps build RPMS and .debs? [DONE]\n\n    Is it easy to build a static (or LSB-compliant?) .rpm on Debian? [DONE]\n    \n\nLocal variables:\nmode: indented-text\nindent-tabs-mode: nil\nEnd:\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.82421875,
          "content": "#! /bin/sh -e\n\n# Usage: autogen.sh [srcdir]\n# Run this script to build distcc from CVS.\n\n## first try the default names\nACLOCAL=\"aclocal\"\nAUTOHEADER=\"autoheader\"\nAUTOCONF=\"autoconf\"\n\nif which $AUTOCONF > /dev/null\nthen\n    :\nelse\n    echo \"$0: need autoconf 2.53 or later to regenerate configure scripts\" >&2\n    exit 1\nfi\n\nsrcdir=`dirname \"$0\"`\nbuilddir=`pwd`\n\necho \"$0: running $ACLOCAL\"\n(cd $srcdir && $ACLOCAL -I m4 --output=$builddir/aclocal.m4)\n\necho \"$0: running $AUTOHEADER\"\n[ -d src ] || mkdir src  # Needed for autoheader to generate src/config.h.in.\n$AUTOHEADER $srcdir/configure.ac\n\necho \"$0: running $AUTOCONF\"\n$AUTOCONF $srcdir/configure.ac > configure\nchmod +x configure\n\nif [ \"$srcdir\" = \".\" ]; then\n  echo \"Now run './configure' and then 'make'.\"\nelse\n  echo \"Now run './configure --srcdir=$srcdir' and then 'make'.\"\nfi\nexit 0\n"
        },
        {
          "name": "bench",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.guess",
          "type": "blob",
          "size": 43.2216796875,
          "content": "#! /bin/sh\n# Attempt to guess a canonical system name.\n#   Copyright 1992-2017 Free Software Foundation, Inc.\n\ntimestamp='2017-05-27'\n\n# This file is free software; you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see <http://www.gnu.org/licenses/>.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n#\n# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n#\n# You can get the latest version of this script from:\n# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n#\n# Please send patches to <config-patches@gnu.org>.\n\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION]\n\nOutput the configuration name of the system \\`$me' is run on.\n\nOperation modes:\n  -h, --help         print this help, then exit\n  -t, --time-stamp   print date of last modification, then exit\n  -v, --version      print version number, then exit\n\nReport bugs and patches to <config-patches@gnu.org>.\"\n\nversion=\"\\\nGNU config.guess ($timestamp)\n\nOriginally written by Per Bothner.\nCopyright 1992-2017 Free Software Foundation, Inc.\n\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n\nhelp=\"\nTry \\`$me --help' for more information.\"\n\n# Parse command line\nwhile test $# -gt 0 ; do\n  case $1 in\n    --time-stamp | --time* | -t )\n       echo \"$timestamp\" ; exit ;;\n    --version | -v )\n       echo \"$version\" ; exit ;;\n    --help | --h* | -h )\n       echo \"$usage\"; exit ;;\n    -- )     # Stop option processing\n       shift; break ;;\n    - )\t# Use stdin as input.\n       break ;;\n    -* )\n       echo \"$me: invalid option $1$help\" >&2\n       exit 1 ;;\n    * )\n       break ;;\n  esac\ndone\n\nif test $# != 0; then\n  echo \"$me: too many arguments$help\" >&2\n  exit 1\nfi\n\ntrap 'exit 1' 1 2 15\n\n# CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n# compiler to aid in system detection is discouraged as it requires\n# temporary files to be created and, as you can see below, it is a\n# headache to deal with in a portable fashion.\n\n# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still\n# use `HOST_CC' if defined, but it is deprecated.\n\n# Portable tmp directory creation inspired by the Autoconf team.\n\nset_cc_for_build='\ntrap \"exitcode=\\$?; (rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null) && exit \\$exitcode\" 0 ;\ntrap \"rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null; exit 1\" 1 2 13 15 ;\n: ${TMPDIR=/tmp} ;\n { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n { test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||\n { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n { echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; } ;\ndummy=$tmp/dummy ;\ntmpfiles=\"$dummy.c $dummy.o $dummy.rel $dummy\" ;\ncase $CC_FOR_BUILD,$HOST_CC,$CC in\n ,,)    echo \"int x;\" > $dummy.c ;\n\tfor c in cc gcc c89 c99 ; do\n\t  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then\n\t     CC_FOR_BUILD=\"$c\"; break ;\n\t  fi ;\n\tdone ;\n\tif test x\"$CC_FOR_BUILD\" = x ; then\n\t  CC_FOR_BUILD=no_compiler_found ;\n\tfi\n\t;;\n ,,*)   CC_FOR_BUILD=$CC ;;\n ,*,*)  CC_FOR_BUILD=$HOST_CC ;;\nesac ; set_cc_for_build= ;'\n\n# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n# (ghazi@noc.rutgers.edu 1994-08-24)\nif (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n\tPATH=$PATH:/.attbin ; export PATH\nfi\n\nUNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\nUNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\nUNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown\nUNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n\ncase \"${UNAME_SYSTEM}\" in\nLinux|GNU|GNU/*)\n\t# If the system lacks a compiler, then just pick glibc.\n\t# We could probably try harder.\n\tLIBC=gnu\n\n\teval $set_cc_for_build\n\tcat <<-EOF > $dummy.c\n\t#include <features.h>\n\t#if defined(__UCLIBC__)\n\tLIBC=uclibc\n\t#elif defined(__dietlibc__)\n\tLIBC=dietlibc\n\t#else\n\tLIBC=gnu\n\t#endif\n\tEOF\n\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n\t;;\nesac\n\n# Note: order is significant - the case branches are not exclusive.\n\ncase \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n    *:NetBSD:*:*)\n\t# NetBSD (nbsd) targets should (where applicable) match one or\n\t# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,\n\t# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently\n\t# switched to ELF, *-*-netbsd* would select the old\n\t# object file format.  This provides both forward\n\t# compatibility and a consistent mechanism for selecting the\n\t# object file format.\n\t#\n\t# Note: NetBSD doesn't particularly care about the vendor\n\t# portion of the name.  We always set it to \"unknown\".\n\tsysctl=\"sysctl -n hw.machine_arch\"\n\tUNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \\\n\t    /sbin/$sysctl 2>/dev/null || \\\n\t    /usr/sbin/$sysctl 2>/dev/null || \\\n\t    echo unknown)`\n\tcase \"${UNAME_MACHINE_ARCH}\" in\n\t    armeb) machine=armeb-unknown ;;\n\t    arm*) machine=arm-unknown ;;\n\t    sh3el) machine=shl-unknown ;;\n\t    sh3eb) machine=sh-unknown ;;\n\t    sh5el) machine=sh5le-unknown ;;\n\t    earmv*)\n\t\tarch=`echo ${UNAME_MACHINE_ARCH} | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n\t\tendian=`echo ${UNAME_MACHINE_ARCH} | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n\t\tmachine=${arch}${endian}-unknown\n\t\t;;\n\t    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;\n\tesac\n\t# The Operating System including object format, if it has switched\n\t# to ELF recently (or will in the future) and ABI.\n\tcase \"${UNAME_MACHINE_ARCH}\" in\n\t    earm*)\n\t\tos=netbsdelf\n\t\t;;\n\t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n\t\teval $set_cc_for_build\n\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t\t| grep -q __ELF__\n\t\tthen\n\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n\t\t    # Return netbsd for either.  FIX?\n\t\t    os=netbsd\n\t\telse\n\t\t    os=netbsdelf\n\t\tfi\n\t\t;;\n\t    *)\n\t\tos=netbsd\n\t\t;;\n\tesac\n\t# Determine ABI tags.\n\tcase \"${UNAME_MACHINE_ARCH}\" in\n\t    earm*)\n\t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n\t\tabi=`echo ${UNAME_MACHINE_ARCH} | sed -e \"$expr\"`\n\t\t;;\n\tesac\n\t# The OS release\n\t# Debian GNU/NetBSD machines have a different userland, and\n\t# thus, need a distinct triplet. However, they do not need\n\t# kernel version information, so it can be replaced with a\n\t# suitable tag, in the style of linux-gnu.\n\tcase \"${UNAME_VERSION}\" in\n\t    Debian*)\n\t\trelease='-gnu'\n\t\t;;\n\t    *)\n\t\trelease=`echo ${UNAME_RELEASE} | sed -e 's/[-_].*//' | cut -d. -f1,2`\n\t\t;;\n\tesac\n\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n\t# contains redundant information, the shorter form:\n\t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n\techo \"${machine}-${os}${release}${abi}\"\n\texit ;;\n    *:Bitrig:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n\techo ${UNAME_MACHINE_ARCH}-unknown-bitrig${UNAME_RELEASE}\n\texit ;;\n    *:OpenBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n\techo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}\n\texit ;;\n    *:LibertyBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n\techo ${UNAME_MACHINE_ARCH}-unknown-libertybsd${UNAME_RELEASE}\n\texit ;;\n    *:ekkoBSD:*:*)\n\techo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}\n\texit ;;\n    *:SolidBSD:*:*)\n\techo ${UNAME_MACHINE}-unknown-solidbsd${UNAME_RELEASE}\n\texit ;;\n    macppc:MirBSD:*:*)\n\techo powerpc-unknown-mirbsd${UNAME_RELEASE}\n\texit ;;\n    *:MirBSD:*:*)\n\techo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}\n\texit ;;\n    *:Sortix:*:*)\n\techo ${UNAME_MACHINE}-unknown-sortix\n\texit ;;\n    alpha:OSF1:*:*)\n\tcase $UNAME_RELEASE in\n\t*4.0)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n\t\t;;\n\t*5.*)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n\t\t;;\n\tesac\n\t# According to Compaq, /usr/sbin/psrinfo has been available on\n\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase \"$ALPHA_CPU_TYPE\" in\n\t    \"EV4 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"EV4.5 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"LCA4 (21066/21068)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"EV5 (21164)\")\n\t\tUNAME_MACHINE=alphaev5 ;;\n\t    \"EV5.6 (21164A)\")\n\t\tUNAME_MACHINE=alphaev56 ;;\n\t    \"EV5.6 (21164PC)\")\n\t\tUNAME_MACHINE=alphapca56 ;;\n\t    \"EV5.7 (21164PC)\")\n\t\tUNAME_MACHINE=alphapca57 ;;\n\t    \"EV6 (21264)\")\n\t\tUNAME_MACHINE=alphaev6 ;;\n\t    \"EV6.7 (21264A)\")\n\t\tUNAME_MACHINE=alphaev67 ;;\n\t    \"EV6.8CB (21264C)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.8AL (21264B)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.8CX (21264D)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.9A (21264/EV69A)\")\n\t\tUNAME_MACHINE=alphaev69 ;;\n\t    \"EV7 (21364)\")\n\t\tUNAME_MACHINE=alphaev7 ;;\n\t    \"EV7.9 (21364A)\")\n\t\tUNAME_MACHINE=alphaev79 ;;\n\tesac\n\t# A Pn.n version is a patched version.\n\t# A Vn.n version is a released version.\n\t# A Tn.n version is a released field test version.\n\t# A Xn.n version is an unreleased experimental baselevel.\n\t# 1.2 uses \"1.2\" for uname -r.\n\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n\texitcode=$?\n\ttrap '' 0\n\texit $exitcode ;;\n    Alpha\\ *:Windows_NT*:*)\n\t# How do we know it's Interix rather than the generic POSIX subsystem?\n\t# Should we change UNAME_MACHINE based on the output of uname instead\n\t# of the specific Alpha model?\n\techo alpha-pc-interix\n\texit ;;\n    21064:Windows_NT:50:3)\n\techo alpha-dec-winnt3.5\n\texit ;;\n    Amiga*:UNIX_System_V:4.0:*)\n\techo m68k-unknown-sysv4\n\texit ;;\n    *:[Aa]miga[Oo][Ss]:*:*)\n\techo ${UNAME_MACHINE}-unknown-amigaos\n\texit ;;\n    *:[Mm]orph[Oo][Ss]:*:*)\n\techo ${UNAME_MACHINE}-unknown-morphos\n\texit ;;\n    *:OS/390:*:*)\n\techo i370-ibm-openedition\n\texit ;;\n    *:z/VM:*:*)\n\techo s390-ibm-zvmoe\n\texit ;;\n    *:OS400:*:*)\n\techo powerpc-ibm-os400\n\texit ;;\n    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n\techo arm-acorn-riscix${UNAME_RELEASE}\n\texit ;;\n    arm*:riscos:*:*|arm*:RISCOS:*:*)\n\techo arm-unknown-riscos\n\texit ;;\n    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)\n\techo hppa1.1-hitachi-hiuxmpp\n\texit ;;\n    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n\tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n\t\techo pyramid-pyramid-sysv3\n\telse\n\t\techo pyramid-pyramid-bsd\n\tfi\n\texit ;;\n    NILE*:*:*:dcosx)\n\techo pyramid-pyramid-svr4\n\texit ;;\n    DRS?6000:unix:4.0:6*)\n\techo sparc-icl-nx6\n\texit ;;\n    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)\n\tcase `/usr/bin/uname -p` in\n\t    sparc) echo sparc-icl-nx7; exit ;;\n\tesac ;;\n    s390x:SunOS:*:*)\n\techo ${UNAME_MACHINE}-ibm-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n\texit ;;\n    sun4H:SunOS:5.*:*)\n\techo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n\texit ;;\n    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n\techo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n\texit ;;\n    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n\techo i386-pc-auroraux${UNAME_RELEASE}\n\texit ;;\n    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n\teval $set_cc_for_build\n\tSUN_ARCH=i386\n\t# If there is a compiler, see if it is configured for 64-bit objects.\n\t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n\t# This test works for both compilers.\n\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t(CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\tgrep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tSUN_ARCH=x86_64\n\t    fi\n\tfi\n\techo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n\texit ;;\n    sun4*:SunOS:6*:*)\n\t# According to config.sub, this is the proper way to canonicalize\n\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n\t# it's likely to be more like Solaris than SunOS4.\n\techo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n\texit ;;\n    sun4*:SunOS:*:*)\n\tcase \"`/usr/bin/arch -k`\" in\n\t    Series*|S4*)\n\t\tUNAME_RELEASE=`uname -v`\n\t\t;;\n\tesac\n\t# Japanese Language versions have a version number like `4.1.3-JL'.\n\techo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`\n\texit ;;\n    sun3*:SunOS:*:*)\n\techo m68k-sun-sunos${UNAME_RELEASE}\n\texit ;;\n    sun*:*:4.2BSD:*)\n\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n\ttest \"x${UNAME_RELEASE}\" = x && UNAME_RELEASE=3\n\tcase \"`/bin/arch`\" in\n\t    sun3)\n\t\techo m68k-sun-sunos${UNAME_RELEASE}\n\t\t;;\n\t    sun4)\n\t\techo sparc-sun-sunos${UNAME_RELEASE}\n\t\t;;\n\tesac\n\texit ;;\n    aushp:SunOS:*:*)\n\techo sparc-auspex-sunos${UNAME_RELEASE}\n\texit ;;\n    # The situation for MiNT is a little confusing.  The machine name\n    # can be virtually everything (everything which is not\n    # \"atarist\" or \"atariste\" at least should have a processor\n    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n    # the system name \"TOS\" denotes a system which is actually not\n    # MiNT.  But MiNT is downward compatible to TOS, so this should\n    # be no problem.\n    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n\techo m68k-atari-mint${UNAME_RELEASE}\n\texit ;;\n    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n\techo m68k-atari-mint${UNAME_RELEASE}\n\texit ;;\n    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n\techo m68k-atari-mint${UNAME_RELEASE}\n\texit ;;\n    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n\techo m68k-milan-mint${UNAME_RELEASE}\n\texit ;;\n    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n\techo m68k-hades-mint${UNAME_RELEASE}\n\texit ;;\n    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n\techo m68k-unknown-mint${UNAME_RELEASE}\n\texit ;;\n    m68k:machten:*:*)\n\techo m68k-apple-machten${UNAME_RELEASE}\n\texit ;;\n    powerpc:machten:*:*)\n\techo powerpc-apple-machten${UNAME_RELEASE}\n\texit ;;\n    RISC*:Mach:*:*)\n\techo mips-dec-mach_bsd4.3\n\texit ;;\n    RISC*:ULTRIX:*:*)\n\techo mips-dec-ultrix${UNAME_RELEASE}\n\texit ;;\n    VAX*:ULTRIX*:*:*)\n\techo vax-dec-ultrix${UNAME_RELEASE}\n\texit ;;\n    2020:CLIX:*:* | 2430:CLIX:*:*)\n\techo clipper-intergraph-clix${UNAME_RELEASE}\n\texit ;;\n    mips:*:*:UMIPS | mips:*:*:RISCos)\n\teval $set_cc_for_build\n\tsed 's/^\t//' << EOF >$dummy.c\n#ifdef __cplusplus\n#include <stdio.h>  /* for printf() prototype */\n\tint main (int argc, char *argv[]) {\n#else\n\tint main (argc, argv) int argc; char *argv[]; {\n#endif\n\t#if defined (host_mips) && defined (MIPSEB)\n\t#if defined (SYSTYPE_SYSV)\n\t  printf (\"mips-mips-riscos%ssysv\\n\", argv[1]); exit (0);\n\t#endif\n\t#if defined (SYSTYPE_SVR4)\n\t  printf (\"mips-mips-riscos%ssvr4\\n\", argv[1]); exit (0);\n\t#endif\n\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n\t  printf (\"mips-mips-riscos%sbsd\\n\", argv[1]); exit (0);\n\t#endif\n\t#endif\n\t  exit (-1);\n\t}\nEOF\n\t$CC_FOR_BUILD -o $dummy $dummy.c &&\n\t  dummyarg=`echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n\t  SYSTEM_NAME=`$dummy $dummyarg` &&\n\t    { echo \"$SYSTEM_NAME\"; exit; }\n\techo mips-mips-riscos${UNAME_RELEASE}\n\texit ;;\n    Motorola:PowerMAX_OS:*:*)\n\techo powerpc-motorola-powermax\n\texit ;;\n    Motorola:*:4.3:PL8-*)\n\techo powerpc-harris-powermax\n\texit ;;\n    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)\n\techo powerpc-harris-powermax\n\texit ;;\n    Night_Hawk:Power_UNIX:*:*)\n\techo powerpc-harris-powerunix\n\texit ;;\n    m88k:CX/UX:7*:*)\n\techo m88k-harris-cxux7\n\texit ;;\n    m88k:*:4*:R4*)\n\techo m88k-motorola-sysv4\n\texit ;;\n    m88k:*:3*:R3*)\n\techo m88k-motorola-sysv3\n\texit ;;\n    AViiON:dgux:*:*)\n\t# DG/UX returns AViiON for all architectures\n\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n\tif [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]\n\tthen\n\t    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \\\n\t       [ ${TARGET_BINARY_INTERFACE}x = x ]\n\t    then\n\t\techo m88k-dg-dgux${UNAME_RELEASE}\n\t    else\n\t\techo m88k-dg-dguxbcs${UNAME_RELEASE}\n\t    fi\n\telse\n\t    echo i586-dg-dgux${UNAME_RELEASE}\n\tfi\n\texit ;;\n    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n\techo m88k-dolphin-sysv3\n\texit ;;\n    M88*:*:R3*:*)\n\t# Delta 88k system running SVR3\n\techo m88k-motorola-sysv3\n\texit ;;\n    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n\techo m88k-tektronix-sysv3\n\texit ;;\n    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n\techo m68k-tektronix-bsd\n\texit ;;\n    *:IRIX*:*:*)\n\techo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`\n\texit ;;\n    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n\techo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id\n\texit ;;               # Note that: echo \"'`uname -s`'\" gives 'AIX '\n    i*86:AIX:*:*)\n\techo i386-ibm-aix\n\texit ;;\n    ia64:AIX:*:*)\n\tif [ -x /usr/bin/oslevel ] ; then\n\t\tIBM_REV=`/usr/bin/oslevel`\n\telse\n\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n\tfi\n\techo ${UNAME_MACHINE}-ibm-aix${IBM_REV}\n\texit ;;\n    *:AIX:2:3)\n\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\teval $set_cc_for_build\n\t\tsed 's/^\t\t//' << EOF >$dummy.c\n\t\t#include <sys/systemcfg.h>\n\n\t\tmain()\n\t\t\t{\n\t\t\tif (!__power_pc())\n\t\t\t\texit(1);\n\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n\t\t\texit(0);\n\t\t\t}\nEOF\n\t\tif $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`\n\t\tthen\n\t\t\techo \"$SYSTEM_NAME\"\n\t\telse\n\t\t\techo rs6000-ibm-aix3.2.5\n\t\tfi\n\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\techo rs6000-ibm-aix3.2.4\n\telse\n\t\techo rs6000-ibm-aix3.2\n\tfi\n\texit ;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n\t\tIBM_ARCH=powerpc\n\tfi\n\tif [ -x /usr/bin/lslpp ] ; then\n\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc |\n\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n\telse\n\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n\tfi\n\techo ${IBM_ARCH}-ibm-aix${IBM_REV}\n\texit ;;\n    *:AIX:*:*)\n\techo rs6000-ibm-aix\n\texit ;;\n    ibmrt:4.4BSD:*|romp-ibm:BSD:*)\n\techo romp-ibm-bsd4.4\n\texit ;;\n    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n\techo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to\n\texit ;;                             # report: romp-ibm BSD 4.3\n    *:BOSX:*:*)\n\techo rs6000-bull-bosx\n\texit ;;\n    DPX/2?00:B.O.S.:*:*)\n\techo m68k-bull-sysv3\n\texit ;;\n    9000/[34]??:4.3bsd:1.*:*)\n\techo m68k-hp-bsd\n\texit ;;\n    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n\techo m68k-hp-bsd4.4\n\texit ;;\n    9000/[34678]??:HP-UX:*:*)\n\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n\tcase \"${UNAME_MACHINE}\" in\n\t    9000/31? )            HP_ARCH=m68000 ;;\n\t    9000/[34]?? )         HP_ARCH=m68k ;;\n\t    9000/[678][0-9][0-9])\n\t\tif [ -x /usr/bin/getconf ]; then\n\t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n\t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n\t\t    case \"${sc_cpu_version}\" in\n\t\t      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0\n\t\t      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1\n\t\t      532)                      # CPU_PA_RISC2_0\n\t\t\tcase \"${sc_kernel_bits}\" in\n\t\t\t  32) HP_ARCH=hppa2.0n ;;\n\t\t\t  64) HP_ARCH=hppa2.0w ;;\n\t\t\t  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20\n\t\t\tesac ;;\n\t\t    esac\n\t\tfi\n\t\tif [ \"${HP_ARCH}\" = \"\" ]; then\n\t\t    eval $set_cc_for_build\n\t\t    sed 's/^\t\t//' << EOF >$dummy.c\n\n\t\t#define _HPUX_SOURCE\n\t\t#include <stdlib.h>\n\t\t#include <unistd.h>\n\n\t\tint main ()\n\t\t{\n\t\t#if defined(_SC_KERNEL_BITS)\n\t\t    long bits = sysconf(_SC_KERNEL_BITS);\n\t\t#endif\n\t\t    long cpu  = sysconf (_SC_CPU_VERSION);\n\n\t\t    switch (cpu)\n\t\t\t{\n\t\t\tcase CPU_PA_RISC1_0: puts (\"hppa1.0\"); break;\n\t\t\tcase CPU_PA_RISC1_1: puts (\"hppa1.1\"); break;\n\t\t\tcase CPU_PA_RISC2_0:\n\t\t#if defined(_SC_KERNEL_BITS)\n\t\t\t    switch (bits)\n\t\t\t\t{\n\t\t\t\tcase 64: puts (\"hppa2.0w\"); break;\n\t\t\t\tcase 32: puts (\"hppa2.0n\"); break;\n\t\t\t\tdefault: puts (\"hppa2.0\"); break;\n\t\t\t\t} break;\n\t\t#else  /* !defined(_SC_KERNEL_BITS) */\n\t\t\t    puts (\"hppa2.0\"); break;\n\t\t#endif\n\t\t\tdefault: puts (\"hppa1.0\"); break;\n\t\t\t}\n\t\t    exit (0);\n\t\t}\nEOF\n\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`\n\t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n\t\tfi ;;\n\tesac\n\tif [ ${HP_ARCH} = hppa2.0w ]\n\tthen\n\t    eval $set_cc_for_build\n\n\t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n\t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n\t    # generating 64-bit code.  GNU and HP use different nomenclature:\n\t    #\n\t    # $ CC_FOR_BUILD=cc ./config.guess\n\t    # => hppa2.0w-hp-hpux11.23\n\t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n\t    # => hppa64-hp-hpux11.23\n\n\t    if echo __LP64__ | (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) |\n\t\tgrep -q __LP64__\n\t    then\n\t\tHP_ARCH=hppa2.0w\n\t    else\n\t\tHP_ARCH=hppa64\n\t    fi\n\tfi\n\techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n\texit ;;\n    ia64:HP-UX:*:*)\n\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n\techo ia64-hp-hpux${HPUX_REV}\n\texit ;;\n    3050*:HI-UX:*:*)\n\teval $set_cc_for_build\n\tsed 's/^\t//' << EOF >$dummy.c\n\t#include <unistd.h>\n\tint\n\tmain ()\n\t{\n\t  long cpu = sysconf (_SC_CPU_VERSION);\n\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n\t     results, however.  */\n\t  if (CPU_IS_PA_RISC (cpu))\n\t    {\n\t      switch (cpu)\n\t\t{\n\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n\t\t}\n\t    }\n\t  else if (CPU_IS_HP_MC68K (cpu))\n\t    puts (\"m68k-hitachi-hiuxwe2\");\n\t  else puts (\"unknown-hitachi-hiuxwe2\");\n\t  exit (0);\n\t}\nEOF\n\t$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&\n\t\t{ echo \"$SYSTEM_NAME\"; exit; }\n\techo unknown-hitachi-hiuxwe2\n\texit ;;\n    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )\n\techo hppa1.1-hp-bsd\n\texit ;;\n    9000/8??:4.3bsd:*:*)\n\techo hppa1.0-hp-bsd\n\texit ;;\n    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n\techo hppa1.0-hp-mpeix\n\texit ;;\n    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )\n\techo hppa1.1-hp-osf\n\texit ;;\n    hp8??:OSF1:*:*)\n\techo hppa1.0-hp-osf\n\texit ;;\n    i*86:OSF1:*:*)\n\tif [ -x /usr/sbin/sysversion ] ; then\n\t    echo ${UNAME_MACHINE}-unknown-osf1mk\n\telse\n\t    echo ${UNAME_MACHINE}-unknown-osf1\n\tfi\n\texit ;;\n    parisc*:Lites*:*:*)\n\techo hppa1.1-hp-lites\n\texit ;;\n    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n\techo c1-convex-bsd\n\texit ;;\n    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n\tif getsysinfo -f scalar_acc\n\tthen echo c32-convex-bsd\n\telse echo c2-convex-bsd\n\tfi\n\texit ;;\n    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n\techo c34-convex-bsd\n\texit ;;\n    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n\techo c38-convex-bsd\n\texit ;;\n    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n\techo c4-convex-bsd\n\texit ;;\n    CRAY*Y-MP:*:*:*)\n\techo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*[A-Z]90:*:*:*)\n\techo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \\\n\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n\t      -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*TS:*:*:*)\n\techo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*T3E:*:*:*)\n\techo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*SV1:*:*:*)\n\techo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    *:UNICOS/mp:*:*)\n\techo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n\techo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n\texit ;;\n    5000:UNIX_System_V:4.*:*)\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo ${UNAME_RELEASE} | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n\techo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n\texit ;;\n    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n\techo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}\n\texit ;;\n    sparc*:BSD/OS:*:*)\n\techo sparc-unknown-bsdi${UNAME_RELEASE}\n\texit ;;\n    *:BSD/OS:*:*)\n\techo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}\n\texit ;;\n    *:FreeBSD:*:*)\n\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n\tcase ${UNAME_PROCESSOR} in\n\t    amd64)\n\t\tUNAME_PROCESSOR=x86_64 ;;\n\t    i386)\n\t\tUNAME_PROCESSOR=i586 ;;\n\tesac\n\techo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n\texit ;;\n    i*:CYGWIN*:*)\n\techo ${UNAME_MACHINE}-pc-cygwin\n\texit ;;\n    *:MINGW64*:*)\n\techo ${UNAME_MACHINE}-pc-mingw64\n\texit ;;\n    *:MINGW*:*)\n\techo ${UNAME_MACHINE}-pc-mingw32\n\texit ;;\n    *:MSYS*:*)\n\techo ${UNAME_MACHINE}-pc-msys\n\texit ;;\n    i*:windows32*:*)\n\t# uname -m includes \"-pc\" on this system.\n\techo ${UNAME_MACHINE}-mingw32\n\texit ;;\n    i*:PW*:*)\n\techo ${UNAME_MACHINE}-pc-pw32\n\texit ;;\n    *:Interix*:*)\n\tcase ${UNAME_MACHINE} in\n\t    x86)\n\t\techo i586-pc-interix${UNAME_RELEASE}\n\t\texit ;;\n\t    authenticamd | genuineintel | EM64T)\n\t\techo x86_64-unknown-interix${UNAME_RELEASE}\n\t\texit ;;\n\t    IA64)\n\t\techo ia64-unknown-interix${UNAME_RELEASE}\n\t\texit ;;\n\tesac ;;\n    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)\n\techo i${UNAME_MACHINE}-pc-mks\n\texit ;;\n    8664:Windows_NT:*)\n\techo x86_64-pc-mks\n\texit ;;\n    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)\n\t# How do we know it's Interix rather than the generic POSIX subsystem?\n\t# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we\n\t# UNAME_MACHINE based on the output of uname instead of i386?\n\techo i586-pc-interix\n\texit ;;\n    i*:UWIN*:*)\n\techo ${UNAME_MACHINE}-pc-uwin\n\texit ;;\n    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n\techo x86_64-unknown-cygwin\n\texit ;;\n    p*:CYGWIN*:*)\n\techo powerpcle-unknown-cygwin\n\texit ;;\n    prep*:SunOS:5.*:*)\n\techo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n\texit ;;\n    *:GNU:*:*)\n\t# the GNU system\n\techo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-${LIBC}`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`\n\texit ;;\n    *:GNU/*:*:*)\n\t# other systems with GNU libc and userland\n\techo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}\n\texit ;;\n    i*86:Minix:*:*)\n\techo ${UNAME_MACHINE}-pc-minix\n\texit ;;\n    aarch64:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    aarch64_be:Linux:*:*)\n\tUNAME_MACHINE=aarch64_be\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    alpha:Linux:*:*)\n\tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' < /proc/cpuinfo` in\n\t  EV5)   UNAME_MACHINE=alphaev5 ;;\n\t  EV56)  UNAME_MACHINE=alphaev56 ;;\n\t  PCA56) UNAME_MACHINE=alphapca56 ;;\n\t  PCA57) UNAME_MACHINE=alphapca56 ;;\n\t  EV6)   UNAME_MACHINE=alphaev6 ;;\n\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n\tesac\n\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n\tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    arc:Linux:*:* | arceb:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    arm*:Linux:*:*)\n\teval $set_cc_for_build\n\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_EABI__\n\tthen\n\t    echo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\telse\n\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t| grep -q __ARM_PCS_VFP\n\t    then\n\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabi\n\t    else\n\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabihf\n\t    fi\n\tfi\n\texit ;;\n    avr32*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    cris:Linux:*:*)\n\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n\texit ;;\n    crisv32:Linux:*:*)\n\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n\texit ;;\n    e2k:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    frv:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    hexagon:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    i*86:Linux:*:*)\n\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n\texit ;;\n    ia64:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    k1om:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    m32r*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    m68*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    mips:Linux:*:* | mips64:Linux:*:*)\n\teval $set_cc_for_build\n\tsed 's/^\t//' << EOF >$dummy.c\n\t#undef CPU\n\t#undef ${UNAME_MACHINE}\n\t#undef ${UNAME_MACHINE}el\n\t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n\tCPU=${UNAME_MACHINE}el\n\t#else\n\t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n\tCPU=${UNAME_MACHINE}\n\t#else\n\tCPU=\n\t#endif\n\t#endif\nEOF\n\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`\n\ttest x\"${CPU}\" != x && { echo \"${CPU}-unknown-linux-${LIBC}\"; exit; }\n\t;;\n    mips64el:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    openrisc*:Linux:*:*)\n\techo or1k-unknown-linux-${LIBC}\n\texit ;;\n    or32:Linux:*:* | or1k*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    padre:Linux:*:*)\n\techo sparc-unknown-linux-${LIBC}\n\texit ;;\n    parisc64:Linux:*:* | hppa64:Linux:*:*)\n\techo hppa64-unknown-linux-${LIBC}\n\texit ;;\n    parisc:Linux:*:* | hppa:Linux:*:*)\n\t# Look for CPU level\n\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n\t  PA7*) echo hppa1.1-unknown-linux-${LIBC} ;;\n\t  PA8*) echo hppa2.0-unknown-linux-${LIBC} ;;\n\t  *)    echo hppa-unknown-linux-${LIBC} ;;\n\tesac\n\texit ;;\n    ppc64:Linux:*:*)\n\techo powerpc64-unknown-linux-${LIBC}\n\texit ;;\n    ppc:Linux:*:*)\n\techo powerpc-unknown-linux-${LIBC}\n\texit ;;\n    ppc64le:Linux:*:*)\n\techo powerpc64le-unknown-linux-${LIBC}\n\texit ;;\n    ppcle:Linux:*:*)\n\techo powerpcle-unknown-linux-${LIBC}\n\texit ;;\n    riscv32:Linux:*:* | riscv64:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    s390:Linux:*:* | s390x:Linux:*:*)\n\techo ${UNAME_MACHINE}-ibm-linux-${LIBC}\n\texit ;;\n    sh64*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    sh*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    sparc:Linux:*:* | sparc64:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    tile*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    vax:Linux:*:*)\n\techo ${UNAME_MACHINE}-dec-linux-${LIBC}\n\texit ;;\n    x86_64:Linux:*:*)\n\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n\texit ;;\n    xtensa*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    i*86:DYNIX/ptx:4*:*)\n\t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n\t# earlier versions are messed up and put the nodename in both\n\t# sysname and nodename.\n\techo i386-sequent-sysv4\n\texit ;;\n    i*86:UNIX_SV:4.2MP:2.*)\n\t# Unixware is an offshoot of SVR4, but it has its own version\n\t# number series starting with 2...\n\t# I am not positive that other SVR4 systems won't match this,\n\t# I just have to hope.  -- rms.\n\t# Use sysv4.2uw... so that sysv4* matches it.\n\techo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}\n\texit ;;\n    i*86:OS/2:*:*)\n\t# If we were able to find `uname', then EMX Unix compatibility\n\t# is probably installed.\n\techo ${UNAME_MACHINE}-pc-os2-emx\n\texit ;;\n    i*86:XTS-300:*:STOP)\n\techo ${UNAME_MACHINE}-unknown-stop\n\texit ;;\n    i*86:atheos:*:*)\n\techo ${UNAME_MACHINE}-unknown-atheos\n\texit ;;\n    i*86:syllable:*:*)\n\techo ${UNAME_MACHINE}-pc-syllable\n\texit ;;\n    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)\n\techo i386-unknown-lynxos${UNAME_RELEASE}\n\texit ;;\n    i*86:*DOS:*:*)\n\techo ${UNAME_MACHINE}-pc-msdosdjgpp\n\texit ;;\n    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)\n\tUNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\\/MP$//'`\n\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n\t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}\n\telse\n\t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}\n\tfi\n\texit ;;\n    i*86:*:5:[678]*)\n\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n\tcase `/bin/uname -X | grep \"^Machine\"` in\n\t    *486*)\t     UNAME_MACHINE=i486 ;;\n\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n\tesac\n\techo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\n\texit ;;\n    i*86:*:3.2:*)\n\tif test -f /usr/options/cb.name; then\n\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n\t\techo ${UNAME_MACHINE}-pc-isc$UNAME_REL\n\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n\t\tUNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`\n\t\t(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486\n\t\t(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i586\n\t\t(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i686\n\t\t(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i686\n\t\techo ${UNAME_MACHINE}-pc-sco$UNAME_REL\n\telse\n\t\techo ${UNAME_MACHINE}-pc-sysv32\n\tfi\n\texit ;;\n    pc:*:*:*)\n\t# Left here for compatibility:\n\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n\t# the processor, so we play safe by assuming i586.\n\t# Note: whatever this is, it MUST be the same as what config.sub\n\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n\t# this is a cross-build.\n\techo i586-pc-msdosdjgpp\n\texit ;;\n    Intel:Mach:3*:*)\n\techo i386-pc-mach3\n\texit ;;\n    paragon:*:*:*)\n\techo i860-intel-osf1\n\texit ;;\n    i860:*:4.*:*) # i860-SVR4\n\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n\t  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4\n\telse # Add other i860-SVR4 vendors below as they are discovered.\n\t  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4\n\tfi\n\texit ;;\n    mini*:CTIX:SYS*5:*)\n\t# \"miniframe\"\n\techo m68010-convergent-sysv\n\texit ;;\n    mc68k:UNIX:SYSTEM5:3.51m)\n\techo m68k-convergent-sysv\n\texit ;;\n    M680?0:D-NIX:5.3:*)\n\techo m68k-diab-dnix\n\texit ;;\n    M68*:*:R3V[5678]*:*)\n\ttest -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;\n    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)\n\tOS_REL=''\n\ttest -r /etc/.relid \\\n\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4; exit; } ;;\n    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n\tOS_REL='.3'\n\ttest -r /etc/.relid \\\n\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t    && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n\techo m68k-unknown-lynxos${UNAME_RELEASE}\n\texit ;;\n    mc68030:UNIX_System_V:4.*:*)\n\techo m68k-atari-sysv4\n\texit ;;\n    TSUNAMI:LynxOS:2.*:*)\n\techo sparc-unknown-lynxos${UNAME_RELEASE}\n\texit ;;\n    rs6000:LynxOS:2.*:*)\n\techo rs6000-unknown-lynxos${UNAME_RELEASE}\n\texit ;;\n    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)\n\techo powerpc-unknown-lynxos${UNAME_RELEASE}\n\texit ;;\n    SM[BE]S:UNIX_SV:*:*)\n\techo mips-dde-sysv${UNAME_RELEASE}\n\texit ;;\n    RM*:ReliantUNIX-*:*:*)\n\techo mips-sni-sysv4\n\texit ;;\n    RM*:SINIX-*:*:*)\n\techo mips-sni-sysv4\n\texit ;;\n    *:SINIX-*:*:*)\n\tif uname -p 2>/dev/null >/dev/null ; then\n\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n\t\techo ${UNAME_MACHINE}-sni-sysv4\n\telse\n\t\techo ns32k-sni-sysv\n\tfi\n\texit ;;\n    PENTIUM:*:4.0*:*)\t# Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n\t\t\t# says <Richard.M.Bartel@ccMail.Census.GOV>\n\techo i586-unisys-sysv4\n\texit ;;\n    *:UNIX_System_V:4*:FTX*)\n\t# From Gerald Hewes <hewes@openmarket.com>.\n\t# How about differentiating between stratus architectures? -djm\n\techo hppa1.1-stratus-sysv4\n\texit ;;\n    *:*:*:FTX*)\n\t# From seanf@swdc.stratus.com.\n\techo i860-stratus-sysv4\n\texit ;;\n    i*86:VOS:*:*)\n\t# From Paul.Green@stratus.com.\n\techo ${UNAME_MACHINE}-stratus-vos\n\texit ;;\n    *:VOS:*:*)\n\t# From Paul.Green@stratus.com.\n\techo hppa1.1-stratus-vos\n\texit ;;\n    mc68*:A/UX:*:*)\n\techo m68k-apple-aux${UNAME_RELEASE}\n\texit ;;\n    news*:NEWS-OS:6*:*)\n\techo mips-sony-newsos6\n\texit ;;\n    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n\tif [ -d /usr/nec ]; then\n\t\techo mips-nec-sysv${UNAME_RELEASE}\n\telse\n\t\techo mips-unknown-sysv${UNAME_RELEASE}\n\tfi\n\texit ;;\n    BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n\techo powerpc-be-beos\n\texit ;;\n    BeMac:BeOS:*:*)\t# BeOS running on Mac or Mac clone, PPC only.\n\techo powerpc-apple-beos\n\texit ;;\n    BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n\techo i586-pc-beos\n\texit ;;\n    BePC:Haiku:*:*)\t# Haiku running on Intel PC compatible.\n\techo i586-pc-haiku\n\texit ;;\n    x86_64:Haiku:*:*)\n\techo x86_64-unknown-haiku\n\texit ;;\n    SX-4:SUPER-UX:*:*)\n\techo sx4-nec-superux${UNAME_RELEASE}\n\texit ;;\n    SX-5:SUPER-UX:*:*)\n\techo sx5-nec-superux${UNAME_RELEASE}\n\texit ;;\n    SX-6:SUPER-UX:*:*)\n\techo sx6-nec-superux${UNAME_RELEASE}\n\texit ;;\n    SX-7:SUPER-UX:*:*)\n\techo sx7-nec-superux${UNAME_RELEASE}\n\texit ;;\n    SX-8:SUPER-UX:*:*)\n\techo sx8-nec-superux${UNAME_RELEASE}\n\texit ;;\n    SX-8R:SUPER-UX:*:*)\n\techo sx8r-nec-superux${UNAME_RELEASE}\n\texit ;;\n    SX-ACE:SUPER-UX:*:*)\n\techo sxace-nec-superux${UNAME_RELEASE}\n\texit ;;\n    Power*:Rhapsody:*:*)\n\techo powerpc-apple-rhapsody${UNAME_RELEASE}\n\texit ;;\n    *:Rhapsody:*:*)\n\techo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}\n\texit ;;\n    *:Darwin:*:*)\n\tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n\teval $set_cc_for_build\n\tif test \"$UNAME_PROCESSOR\" = unknown ; then\n\t    UNAME_PROCESSOR=powerpc\n\tfi\n\tif test `echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'` -le 10 ; then\n\t    if [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n\t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t       grep IS_64BIT_ARCH >/dev/null\n\t\tthen\n\t\t    case $UNAME_PROCESSOR in\n\t\t\ti386) UNAME_PROCESSOR=x86_64 ;;\n\t\t\tpowerpc) UNAME_PROCESSOR=powerpc64 ;;\n\t\t    esac\n\t\tfi\n\t\t# On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n\t\tif (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t       grep IS_PPC >/dev/null\n\t\tthen\n\t\t    UNAME_PROCESSOR=powerpc\n\t\tfi\n\t    fi\n\telif test \"$UNAME_PROCESSOR\" = i386 ; then\n\t    # Avoid executing cc on OS X 10.9, as it ships with a stub\n\t    # that puts up a graphical alert prompting to install\n\t    # developer tools.  Any system running Mac OS X 10.7 or\n\t    # later (Darwin 11 and later) is required to have a 64-bit\n\t    # processor. This is not true of the ARM version of Darwin\n\t    # that Apple uses in portable devices.\n\t    UNAME_PROCESSOR=x86_64\n\tfi\n\techo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}\n\texit ;;\n    *:procnto*:*:* | *:QNX:[0123456789]*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tif test \"$UNAME_PROCESSOR\" = x86; then\n\t\tUNAME_PROCESSOR=i386\n\t\tUNAME_MACHINE=pc\n\tfi\n\techo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}\n\texit ;;\n    *:QNX:*:4*)\n\techo i386-pc-qnx\n\texit ;;\n    NEO-*:NONSTOP_KERNEL:*:*)\n\techo neo-tandem-nsk${UNAME_RELEASE}\n\texit ;;\n    NSE-*:NONSTOP_KERNEL:*:*)\n\techo nse-tandem-nsk${UNAME_RELEASE}\n\texit ;;\n    NSR-*:NONSTOP_KERNEL:*:*)\n\techo nsr-tandem-nsk${UNAME_RELEASE}\n\texit ;;\n    NSX-*:NONSTOP_KERNEL:*:*)\n\techo nsx-tandem-nsk${UNAME_RELEASE}\n\texit ;;\n    *:NonStop-UX:*:*)\n\techo mips-compaq-nonstopux\n\texit ;;\n    BS2000:POSIX*:*:*)\n\techo bs2000-siemens-sysv\n\texit ;;\n    DS/*:UNIX_System_V:*:*)\n\techo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}\n\texit ;;\n    *:Plan9:*:*)\n\t# \"uname -m\" is not consistent, so use $cputype instead. 386\n\t# is converted to i386 for consistency with other x86\n\t# operating systems.\n\tif test \"$cputype\" = 386; then\n\t    UNAME_MACHINE=i386\n\telse\n\t    UNAME_MACHINE=\"$cputype\"\n\tfi\n\techo ${UNAME_MACHINE}-unknown-plan9\n\texit ;;\n    *:TOPS-10:*:*)\n\techo pdp10-unknown-tops10\n\texit ;;\n    *:TENEX:*:*)\n\techo pdp10-unknown-tenex\n\texit ;;\n    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)\n\techo pdp10-dec-tops20\n\texit ;;\n    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)\n\techo pdp10-xkl-tops20\n\texit ;;\n    *:TOPS-20:*:*)\n\techo pdp10-unknown-tops20\n\texit ;;\n    *:ITS:*:*)\n\techo pdp10-unknown-its\n\texit ;;\n    SEI:*:*:SEIUX)\n\techo mips-sei-seiux${UNAME_RELEASE}\n\texit ;;\n    *:DragonFly:*:*)\n\techo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n\texit ;;\n    *:*VMS:*:*)\n\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n\tcase \"${UNAME_MACHINE}\" in\n\t    A*) echo alpha-dec-vms ; exit ;;\n\t    I*) echo ia64-dec-vms ; exit ;;\n\t    V*) echo vax-dec-vms ; exit ;;\n\tesac ;;\n    *:XENIX:*:SysV)\n\techo i386-pc-xenix\n\texit ;;\n    i*86:skyos:*:*)\n\techo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE} | sed -e 's/ .*$//'`\n\texit ;;\n    i*86:rdos:*:*)\n\techo ${UNAME_MACHINE}-pc-rdos\n\texit ;;\n    i*86:AROS:*:*)\n\techo ${UNAME_MACHINE}-pc-aros\n\texit ;;\n    x86_64:VMkernel:*:*)\n\techo ${UNAME_MACHINE}-unknown-esx\n\texit ;;\n    amd64:Isilon\\ OneFS:*:*)\n\techo x86_64-unknown-onefs\n\texit ;;\nesac\n\ncat >&2 <<EOF\n$0: unable to guess system type\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite\nconfig.guess and config.sub with the latest versions from:\n\n  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\nand\n  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n\nIf $0 has already been updated, send the following data and any\ninformation you think might be pertinent to config-patches@gnu.org to\nprovide the necessary information to handle your system.\n\nconfig.guess timestamp = $timestamp\n\nuname -m = `(uname -m) 2>/dev/null || echo unknown`\nuname -r = `(uname -r) 2>/dev/null || echo unknown`\nuname -s = `(uname -s) 2>/dev/null || echo unknown`\nuname -v = `(uname -v) 2>/dev/null || echo unknown`\n\n/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`\n/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`\n\nhostinfo               = `(hostinfo) 2>/dev/null`\n/bin/universe          = `(/bin/universe) 2>/dev/null`\n/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`\n/bin/arch              = `(/bin/arch) 2>/dev/null`\n/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n\nUNAME_MACHINE = ${UNAME_MACHINE}\nUNAME_RELEASE = ${UNAME_RELEASE}\nUNAME_SYSTEM  = ${UNAME_SYSTEM}\nUNAME_VERSION = ${UNAME_VERSION}\nEOF\n\nexit 1\n\n# Local variables:\n# eval: (add-hook 'write-file-hooks 'time-stamp)\n# time-stamp-start: \"timestamp='\"\n# time-stamp-format: \"%:y-%02m-%02d\"\n# time-stamp-end: \"'\"\n# End:\n"
        },
        {
          "name": "config.sub",
          "type": "blob",
          "size": 35.6591796875,
          "content": "#! /bin/sh\n# Configuration validation subroutine script.\n#   Copyright 1992-2017 Free Software Foundation, Inc.\n\ntimestamp='2017-04-02'\n\n# This file is free software; you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see <http://www.gnu.org/licenses/>.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n\n\n# Please send patches to <config-patches@gnu.org>.\n#\n# Configuration subroutine to validate and canonicalize a configuration type.\n# Supply the specified configuration type as an argument.\n# If it is invalid, we print an error message on stderr and exit with code 1.\n# Otherwise, we print the canonical config type on stdout and succeed.\n\n# You can get the latest version of this script from:\n# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n\n# This file is supposed to be the same for all GNU packages\n# and recognize all the CPU types, system types and aliases\n# that are meaningful with *any* GNU software.\n# Each package is responsible for reporting which valid configurations\n# it does not support.  The user should be able to distinguish\n# a failure to support a valid configuration from a meaningless\n# configuration.\n\n# The goal of this file is to map all the various variations of a given\n# machine specification into a single specification in the form:\n#\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n# or in some cases, the newer four-part form:\n#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n# It is wrong to echo any other type of specification.\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n\nCanonicalize a configuration name.\n\nOperation modes:\n  -h, --help         print this help, then exit\n  -t, --time-stamp   print date of last modification, then exit\n  -v, --version      print version number, then exit\n\nReport bugs and patches to <config-patches@gnu.org>.\"\n\nversion=\"\\\nGNU config.sub ($timestamp)\n\nCopyright 1992-2017 Free Software Foundation, Inc.\n\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n\nhelp=\"\nTry \\`$me --help' for more information.\"\n\n# Parse command line\nwhile test $# -gt 0 ; do\n  case $1 in\n    --time-stamp | --time* | -t )\n       echo \"$timestamp\" ; exit ;;\n    --version | -v )\n       echo \"$version\" ; exit ;;\n    --help | --h* | -h )\n       echo \"$usage\"; exit ;;\n    -- )     # Stop option processing\n       shift; break ;;\n    - )\t# Use stdin as input.\n       break ;;\n    -* )\n       echo \"$me: invalid option $1$help\"\n       exit 1 ;;\n\n    *local*)\n       # First pass through any local machine types.\n       echo $1\n       exit ;;\n\n    * )\n       break ;;\n  esac\ndone\n\ncase $# in\n 0) echo \"$me: missing argument$help\" >&2\n    exit 1;;\n 1) ;;\n *) echo \"$me: too many arguments$help\" >&2\n    exit 1;;\nesac\n\n# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).\n# Here we must recognize all the valid KERNEL-OS combinations.\nmaybe_os=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\2/'`\ncase $maybe_os in\n  nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \\\n  linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \\\n  knetbsd*-gnu* | netbsd*-gnu* | netbsd*-eabi* | \\\n  kopensolaris*-gnu* | cloudabi*-eabi* | \\\n  storm-chaos* | os2-emx* | rtmk-nova*)\n    os=-$maybe_os\n    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`\n    ;;\n  android-linux)\n    os=-linux-android\n    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`-unknown\n    ;;\n  *)\n    basic_machine=`echo $1 | sed 's/-[^-]*$//'`\n    if [ $basic_machine != $1 ]\n    then os=`echo $1 | sed 's/.*-/-/'`\n    else os=; fi\n    ;;\nesac\n\n### Let's recognize common machines as not being operating systems so\n### that things like config.sub decstation-3100 work.  We also\n### recognize some manufacturers as not being operating systems, so we\n### can provide default operating systems below.\ncase $os in\n\t-sun*os*)\n\t\t# Prevent following clause from handling this invalid input.\n\t\t;;\n\t-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \\\n\t-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \\\n\t-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \\\n\t-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\\\n\t-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \\\n\t-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \\\n\t-apple | -axis | -knuth | -cray | -microblaze*)\n\t\tos=\n\t\tbasic_machine=$1\n\t\t;;\n\t-bluegene*)\n\t\tos=-cnk\n\t\t;;\n\t-sim | -cisco | -oki | -wec | -winbond)\n\t\tos=\n\t\tbasic_machine=$1\n\t\t;;\n\t-scout)\n\t\t;;\n\t-wrs)\n\t\tos=-vxworks\n\t\tbasic_machine=$1\n\t\t;;\n\t-chorusos*)\n\t\tos=-chorusos\n\t\tbasic_machine=$1\n\t\t;;\n\t-chorusrdb)\n\t\tos=-chorusrdb\n\t\tbasic_machine=$1\n\t\t;;\n\t-hiux*)\n\t\tos=-hiuxwe2\n\t\t;;\n\t-sco6)\n\t\tos=-sco5v6\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-sco5)\n\t\tos=-sco3.2v5\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-sco4)\n\t\tos=-sco3.2v4\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-sco3.2.[4-9]*)\n\t\tos=`echo $os | sed -e 's/sco3.2./sco3.2v/'`\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-sco3.2v[4-9]*)\n\t\t# Don't forget version if it is 3.2v4 or newer.\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-sco5v6*)\n\t\t# Don't forget version if it is 3.2v4 or newer.\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-sco*)\n\t\tos=-sco3.2v2\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-udk*)\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-isc)\n\t\tos=-isc2.2\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-clix*)\n\t\tbasic_machine=clipper-intergraph\n\t\t;;\n\t-isc*)\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-lynx*178)\n\t\tos=-lynxos178\n\t\t;;\n\t-lynx*5)\n\t\tos=-lynxos5\n\t\t;;\n\t-lynx*)\n\t\tos=-lynxos\n\t\t;;\n\t-ptx*)\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`\n\t\t;;\n\t-windowsnt*)\n\t\tos=`echo $os | sed -e 's/windowsnt/winnt/'`\n\t\t;;\n\t-psos*)\n\t\tos=-psos\n\t\t;;\n\t-mint | -mint[0-9]*)\n\t\tbasic_machine=m68k-atari\n\t\tos=-mint\n\t\t;;\nesac\n\n# Decode aliases for certain CPU-COMPANY combinations.\ncase $basic_machine in\n\t# Recognize the basic CPU types without company name.\n\t# Some are omitted here because they have special meanings below.\n\t1750a | 580 \\\n\t| a29k \\\n\t| aarch64 | aarch64_be \\\n\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \\\n\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \\\n\t| am33_2.0 \\\n\t| arc | arceb \\\n\t| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv7[arm] \\\n\t| avr | avr32 \\\n\t| ba \\\n\t| be32 | be64 \\\n\t| bfin \\\n\t| c4x | c8051 | clipper \\\n\t| d10v | d30v | dlx | dsp16xx \\\n\t| e2k | epiphany \\\n\t| fido | fr30 | frv | ft32 \\\n\t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n\t| hexagon \\\n\t| i370 | i860 | i960 | ia16 | ia64 \\\n\t| ip2k | iq2000 \\\n\t| k1om \\\n\t| le32 | le64 \\\n\t| lm32 \\\n\t| m32c | m32r | m32rle | m68000 | m68k | m88k \\\n\t| maxq | mb | microblaze | microblazeel | mcore | mep | metag \\\n\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n\t| mips16 \\\n\t| mips64 | mips64el \\\n\t| mips64octeon | mips64octeonel \\\n\t| mips64orion | mips64orionel \\\n\t| mips64r5900 | mips64r5900el \\\n\t| mips64vr | mips64vrel \\\n\t| mips64vr4100 | mips64vr4100el \\\n\t| mips64vr4300 | mips64vr4300el \\\n\t| mips64vr5000 | mips64vr5000el \\\n\t| mips64vr5900 | mips64vr5900el \\\n\t| mipsisa32 | mipsisa32el \\\n\t| mipsisa32r2 | mipsisa32r2el \\\n\t| mipsisa32r6 | mipsisa32r6el \\\n\t| mipsisa64 | mipsisa64el \\\n\t| mipsisa64r2 | mipsisa64r2el \\\n\t| mipsisa64r6 | mipsisa64r6el \\\n\t| mipsisa64sb1 | mipsisa64sb1el \\\n\t| mipsisa64sr71k | mipsisa64sr71kel \\\n\t| mipsr5900 | mipsr5900el \\\n\t| mipstx39 | mipstx39el \\\n\t| mn10200 | mn10300 \\\n\t| moxie \\\n\t| mt \\\n\t| msp430 \\\n\t| nds32 | nds32le | nds32be \\\n\t| nios | nios2 | nios2eb | nios2el \\\n\t| ns16k | ns32k \\\n\t| open8 | or1k | or1knd | or32 \\\n\t| pdp10 | pdp11 | pj | pjl \\\n\t| powerpc | powerpc64 | powerpc64le | powerpcle \\\n\t| pru \\\n\t| pyramid \\\n\t| riscv32 | riscv64 \\\n\t| rl78 | rx \\\n\t| score \\\n\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n\t| sh64 | sh64le \\\n\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n\t| spu \\\n\t| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \\\n\t| ubicom32 \\\n\t| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \\\n\t| visium \\\n\t| wasm32 \\\n\t| we32k \\\n\t| x86 | xc16x | xstormy16 | xtensa \\\n\t| z8k | z80)\n\t\tbasic_machine=$basic_machine-unknown\n\t\t;;\n\tc54x)\n\t\tbasic_machine=tic54x-unknown\n\t\t;;\n\tc55x)\n\t\tbasic_machine=tic55x-unknown\n\t\t;;\n\tc6x)\n\t\tbasic_machine=tic6x-unknown\n\t\t;;\n\tleon|leon[3-9])\n\t\tbasic_machine=sparc-$basic_machine\n\t\t;;\n\tm6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip)\n\t\tbasic_machine=$basic_machine-unknown\n\t\tos=-none\n\t\t;;\n\tm88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)\n\t\t;;\n\tms1)\n\t\tbasic_machine=mt-unknown\n\t\t;;\n\n\tstrongarm | thumb | xscale)\n\t\tbasic_machine=arm-unknown\n\t\t;;\n\txgate)\n\t\tbasic_machine=$basic_machine-unknown\n\t\tos=-none\n\t\t;;\n\txscaleeb)\n\t\tbasic_machine=armeb-unknown\n\t\t;;\n\n\txscaleel)\n\t\tbasic_machine=armel-unknown\n\t\t;;\n\n\t# We use `pc' rather than `unknown'\n\t# because (1) that's what they normally are, and\n\t# (2) the word \"unknown\" tends to confuse beginning users.\n\ti*86 | x86_64)\n\t  basic_machine=$basic_machine-pc\n\t  ;;\n\t# Object if more than one company name word.\n\t*-*-*)\n\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n\t\texit 1\n\t\t;;\n\t# Recognize the basic CPU types with company name.\n\t580-* \\\n\t| a29k-* \\\n\t| aarch64-* | aarch64_be-* \\\n\t| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \\\n\t| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \\\n\t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \\\n\t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n\t| avr-* | avr32-* \\\n\t| ba-* \\\n\t| be32-* | be64-* \\\n\t| bfin-* | bs2000-* \\\n\t| c[123]* | c30-* | [cjt]90-* | c4x-* \\\n\t| c8051-* | clipper-* | craynv-* | cydra-* \\\n\t| d10v-* | d30v-* | dlx-* \\\n\t| e2k-* | elxsi-* \\\n\t| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \\\n\t| h8300-* | h8500-* \\\n\t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n\t| hexagon-* \\\n\t| i*86-* | i860-* | i960-* | ia16-* | ia64-* \\\n\t| ip2k-* | iq2000-* \\\n\t| k1om-* \\\n\t| le32-* | le64-* \\\n\t| lm32-* \\\n\t| m32c-* | m32r-* | m32rle-* \\\n\t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n\t| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \\\n\t| microblaze-* | microblazeel-* \\\n\t| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \\\n\t| mips16-* \\\n\t| mips64-* | mips64el-* \\\n\t| mips64octeon-* | mips64octeonel-* \\\n\t| mips64orion-* | mips64orionel-* \\\n\t| mips64r5900-* | mips64r5900el-* \\\n\t| mips64vr-* | mips64vrel-* \\\n\t| mips64vr4100-* | mips64vr4100el-* \\\n\t| mips64vr4300-* | mips64vr4300el-* \\\n\t| mips64vr5000-* | mips64vr5000el-* \\\n\t| mips64vr5900-* | mips64vr5900el-* \\\n\t| mipsisa32-* | mipsisa32el-* \\\n\t| mipsisa32r2-* | mipsisa32r2el-* \\\n\t| mipsisa32r6-* | mipsisa32r6el-* \\\n\t| mipsisa64-* | mipsisa64el-* \\\n\t| mipsisa64r2-* | mipsisa64r2el-* \\\n\t| mipsisa64r6-* | mipsisa64r6el-* \\\n\t| mipsisa64sb1-* | mipsisa64sb1el-* \\\n\t| mipsisa64sr71k-* | mipsisa64sr71kel-* \\\n\t| mipsr5900-* | mipsr5900el-* \\\n\t| mipstx39-* | mipstx39el-* \\\n\t| mmix-* \\\n\t| mt-* \\\n\t| msp430-* \\\n\t| nds32-* | nds32le-* | nds32be-* \\\n\t| nios-* | nios2-* | nios2eb-* | nios2el-* \\\n\t| none-* | np1-* | ns16k-* | ns32k-* \\\n\t| open8-* \\\n\t| or1k*-* \\\n\t| orion-* \\\n\t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n\t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n\t| pru-* \\\n\t| pyramid-* \\\n\t| riscv32-* | riscv64-* \\\n\t| rl78-* | romp-* | rs6000-* | rx-* \\\n\t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n\t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n\t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n\t| sparclite-* \\\n\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx*-* \\\n\t| tahoe-* \\\n\t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n\t| tile*-* \\\n\t| tron-* \\\n\t| ubicom32-* \\\n\t| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \\\n\t| vax-* \\\n\t| visium-* \\\n\t| wasm32-* \\\n\t| we32k-* \\\n\t| x86-* | x86_64-* | xc16x-* | xps100-* \\\n\t| xstormy16-* | xtensa*-* \\\n\t| ymp-* \\\n\t| z8k-* | z80-*)\n\t\t;;\n\t# Recognize the basic CPU types without company name, with glob match.\n\txtensa*)\n\t\tbasic_machine=$basic_machine-unknown\n\t\t;;\n\t# Recognize the various machine names and aliases which stand\n\t# for a CPU type and a company and sometimes even an OS.\n\t386bsd)\n\t\tbasic_machine=i386-unknown\n\t\tos=-bsd\n\t\t;;\n\t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n\t\tbasic_machine=m68000-att\n\t\t;;\n\t3b*)\n\t\tbasic_machine=we32k-att\n\t\t;;\n\ta29khif)\n\t\tbasic_machine=a29k-amd\n\t\tos=-udi\n\t\t;;\n\tabacus)\n\t\tbasic_machine=abacus-unknown\n\t\t;;\n\tadobe68k)\n\t\tbasic_machine=m68010-adobe\n\t\tos=-scout\n\t\t;;\n\talliant | fx80)\n\t\tbasic_machine=fx80-alliant\n\t\t;;\n\taltos | altos3068)\n\t\tbasic_machine=m68k-altos\n\t\t;;\n\tam29k)\n\t\tbasic_machine=a29k-none\n\t\tos=-bsd\n\t\t;;\n\tamd64)\n\t\tbasic_machine=x86_64-pc\n\t\t;;\n\tamd64-*)\n\t\tbasic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tamdahl)\n\t\tbasic_machine=580-amdahl\n\t\tos=-sysv\n\t\t;;\n\tamiga | amiga-*)\n\t\tbasic_machine=m68k-unknown\n\t\t;;\n\tamigaos | amigados)\n\t\tbasic_machine=m68k-unknown\n\t\tos=-amigaos\n\t\t;;\n\tamigaunix | amix)\n\t\tbasic_machine=m68k-unknown\n\t\tos=-sysv4\n\t\t;;\n\tapollo68)\n\t\tbasic_machine=m68k-apollo\n\t\tos=-sysv\n\t\t;;\n\tapollo68bsd)\n\t\tbasic_machine=m68k-apollo\n\t\tos=-bsd\n\t\t;;\n\taros)\n\t\tbasic_machine=i386-pc\n\t\tos=-aros\n\t\t;;\n\tasmjs)\n\t\tbasic_machine=asmjs-unknown\n\t\t;;\n\taux)\n\t\tbasic_machine=m68k-apple\n\t\tos=-aux\n\t\t;;\n\tbalance)\n\t\tbasic_machine=ns32k-sequent\n\t\tos=-dynix\n\t\t;;\n\tblackfin)\n\t\tbasic_machine=bfin-unknown\n\t\tos=-linux\n\t\t;;\n\tblackfin-*)\n\t\tbasic_machine=bfin-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\tos=-linux\n\t\t;;\n\tbluegene*)\n\t\tbasic_machine=powerpc-ibm\n\t\tos=-cnk\n\t\t;;\n\tc54x-*)\n\t\tbasic_machine=tic54x-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tc55x-*)\n\t\tbasic_machine=tic55x-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tc6x-*)\n\t\tbasic_machine=tic6x-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tc90)\n\t\tbasic_machine=c90-cray\n\t\tos=-unicos\n\t\t;;\n\tcegcc)\n\t\tbasic_machine=arm-unknown\n\t\tos=-cegcc\n\t\t;;\n\tconvex-c1)\n\t\tbasic_machine=c1-convex\n\t\tos=-bsd\n\t\t;;\n\tconvex-c2)\n\t\tbasic_machine=c2-convex\n\t\tos=-bsd\n\t\t;;\n\tconvex-c32)\n\t\tbasic_machine=c32-convex\n\t\tos=-bsd\n\t\t;;\n\tconvex-c34)\n\t\tbasic_machine=c34-convex\n\t\tos=-bsd\n\t\t;;\n\tconvex-c38)\n\t\tbasic_machine=c38-convex\n\t\tos=-bsd\n\t\t;;\n\tcray | j90)\n\t\tbasic_machine=j90-cray\n\t\tos=-unicos\n\t\t;;\n\tcraynv)\n\t\tbasic_machine=craynv-cray\n\t\tos=-unicosmp\n\t\t;;\n\tcr16 | cr16-*)\n\t\tbasic_machine=cr16-unknown\n\t\tos=-elf\n\t\t;;\n\tcrds | unos)\n\t\tbasic_machine=m68k-crds\n\t\t;;\n\tcrisv32 | crisv32-* | etraxfs*)\n\t\tbasic_machine=crisv32-axis\n\t\t;;\n\tcris | cris-* | etrax*)\n\t\tbasic_machine=cris-axis\n\t\t;;\n\tcrx)\n\t\tbasic_machine=crx-unknown\n\t\tos=-elf\n\t\t;;\n\tda30 | da30-*)\n\t\tbasic_machine=m68k-da30\n\t\t;;\n\tdecstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)\n\t\tbasic_machine=mips-dec\n\t\t;;\n\tdecsystem10* | dec10*)\n\t\tbasic_machine=pdp10-dec\n\t\tos=-tops10\n\t\t;;\n\tdecsystem20* | dec20*)\n\t\tbasic_machine=pdp10-dec\n\t\tos=-tops20\n\t\t;;\n\tdelta | 3300 | motorola-3300 | motorola-delta \\\n\t      | 3300-motorola | delta-motorola)\n\t\tbasic_machine=m68k-motorola\n\t\t;;\n\tdelta88)\n\t\tbasic_machine=m88k-motorola\n\t\tos=-sysv3\n\t\t;;\n\tdicos)\n\t\tbasic_machine=i686-pc\n\t\tos=-dicos\n\t\t;;\n\tdjgpp)\n\t\tbasic_machine=i586-pc\n\t\tos=-msdosdjgpp\n\t\t;;\n\tdpx20 | dpx20-*)\n\t\tbasic_machine=rs6000-bull\n\t\tos=-bosx\n\t\t;;\n\tdpx2* | dpx2*-bull)\n\t\tbasic_machine=m68k-bull\n\t\tos=-sysv3\n\t\t;;\n\te500v[12])\n\t\tbasic_machine=powerpc-unknown\n\t\tos=$os\"spe\"\n\t\t;;\n\te500v[12]-*)\n\t\tbasic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\tos=$os\"spe\"\n\t\t;;\n\tebmon29k)\n\t\tbasic_machine=a29k-amd\n\t\tos=-ebmon\n\t\t;;\n\telxsi)\n\t\tbasic_machine=elxsi-elxsi\n\t\tos=-bsd\n\t\t;;\n\tencore | umax | mmax)\n\t\tbasic_machine=ns32k-encore\n\t\t;;\n\tes1800 | OSE68k | ose68k | ose | OSE)\n\t\tbasic_machine=m68k-ericsson\n\t\tos=-ose\n\t\t;;\n\tfx2800)\n\t\tbasic_machine=i860-alliant\n\t\t;;\n\tgenix)\n\t\tbasic_machine=ns32k-ns\n\t\t;;\n\tgmicro)\n\t\tbasic_machine=tron-gmicro\n\t\tos=-sysv\n\t\t;;\n\tgo32)\n\t\tbasic_machine=i386-pc\n\t\tos=-go32\n\t\t;;\n\th3050r* | hiux*)\n\t\tbasic_machine=hppa1.1-hitachi\n\t\tos=-hiuxwe2\n\t\t;;\n\th8300hms)\n\t\tbasic_machine=h8300-hitachi\n\t\tos=-hms\n\t\t;;\n\th8300xray)\n\t\tbasic_machine=h8300-hitachi\n\t\tos=-xray\n\t\t;;\n\th8500hms)\n\t\tbasic_machine=h8500-hitachi\n\t\tos=-hms\n\t\t;;\n\tharris)\n\t\tbasic_machine=m88k-harris\n\t\tos=-sysv3\n\t\t;;\n\thp300-*)\n\t\tbasic_machine=m68k-hp\n\t\t;;\n\thp300bsd)\n\t\tbasic_machine=m68k-hp\n\t\tos=-bsd\n\t\t;;\n\thp300hpux)\n\t\tbasic_machine=m68k-hp\n\t\tos=-hpux\n\t\t;;\n\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n\t\tbasic_machine=hppa1.0-hp\n\t\t;;\n\thp9k2[0-9][0-9] | hp9k31[0-9])\n\t\tbasic_machine=m68000-hp\n\t\t;;\n\thp9k3[2-9][0-9])\n\t\tbasic_machine=m68k-hp\n\t\t;;\n\thp9k6[0-9][0-9] | hp6[0-9][0-9])\n\t\tbasic_machine=hppa1.0-hp\n\t\t;;\n\thp9k7[0-79][0-9] | hp7[0-79][0-9])\n\t\tbasic_machine=hppa1.1-hp\n\t\t;;\n\thp9k78[0-9] | hp78[0-9])\n\t\t# FIXME: really hppa2.0-hp\n\t\tbasic_machine=hppa1.1-hp\n\t\t;;\n\thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n\t\t# FIXME: really hppa2.0-hp\n\t\tbasic_machine=hppa1.1-hp\n\t\t;;\n\thp9k8[0-9][13679] | hp8[0-9][13679])\n\t\tbasic_machine=hppa1.1-hp\n\t\t;;\n\thp9k8[0-9][0-9] | hp8[0-9][0-9])\n\t\tbasic_machine=hppa1.0-hp\n\t\t;;\n\thppa-next)\n\t\tos=-nextstep3\n\t\t;;\n\thppaosf)\n\t\tbasic_machine=hppa1.1-hp\n\t\tos=-osf\n\t\t;;\n\thppro)\n\t\tbasic_machine=hppa1.1-hp\n\t\tos=-proelf\n\t\t;;\n\ti370-ibm* | ibm*)\n\t\tbasic_machine=i370-ibm\n\t\t;;\n\ti*86v32)\n\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n\t\tos=-sysv32\n\t\t;;\n\ti*86v4*)\n\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n\t\tos=-sysv4\n\t\t;;\n\ti*86v)\n\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n\t\tos=-sysv\n\t\t;;\n\ti*86sol2)\n\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n\t\tos=-solaris2\n\t\t;;\n\ti386mach)\n\t\tbasic_machine=i386-mach\n\t\tos=-mach\n\t\t;;\n\ti386-vsta | vsta)\n\t\tbasic_machine=i386-unknown\n\t\tos=-vsta\n\t\t;;\n\tiris | iris4d)\n\t\tbasic_machine=mips-sgi\n\t\tcase $os in\n\t\t    -irix*)\n\t\t\t;;\n\t\t    *)\n\t\t\tos=-irix4\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tisi68 | isi)\n\t\tbasic_machine=m68k-isi\n\t\tos=-sysv\n\t\t;;\n\tleon-*|leon[3-9]-*)\n\t\tbasic_machine=sparc-`echo $basic_machine | sed 's/-.*//'`\n\t\t;;\n\tm68knommu)\n\t\tbasic_machine=m68k-unknown\n\t\tos=-linux\n\t\t;;\n\tm68knommu-*)\n\t\tbasic_machine=m68k-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\tos=-linux\n\t\t;;\n\tm88k-omron*)\n\t\tbasic_machine=m88k-omron\n\t\t;;\n\tmagnum | m3230)\n\t\tbasic_machine=mips-mips\n\t\tos=-sysv\n\t\t;;\n\tmerlin)\n\t\tbasic_machine=ns32k-utek\n\t\tos=-sysv\n\t\t;;\n\tmicroblaze*)\n\t\tbasic_machine=microblaze-xilinx\n\t\t;;\n\tmingw64)\n\t\tbasic_machine=x86_64-pc\n\t\tos=-mingw64\n\t\t;;\n\tmingw32)\n\t\tbasic_machine=i686-pc\n\t\tos=-mingw32\n\t\t;;\n\tmingw32ce)\n\t\tbasic_machine=arm-unknown\n\t\tos=-mingw32ce\n\t\t;;\n\tminiframe)\n\t\tbasic_machine=m68000-convergent\n\t\t;;\n\t*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)\n\t\tbasic_machine=m68k-atari\n\t\tos=-mint\n\t\t;;\n\tmips3*-*)\n\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`\n\t\t;;\n\tmips3*)\n\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown\n\t\t;;\n\tmonitor)\n\t\tbasic_machine=m68k-rom68k\n\t\tos=-coff\n\t\t;;\n\tmorphos)\n\t\tbasic_machine=powerpc-unknown\n\t\tos=-morphos\n\t\t;;\n\tmoxiebox)\n\t\tbasic_machine=moxie-unknown\n\t\tos=-moxiebox\n\t\t;;\n\tmsdos)\n\t\tbasic_machine=i386-pc\n\t\tos=-msdos\n\t\t;;\n\tms1-*)\n\t\tbasic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`\n\t\t;;\n\tmsys)\n\t\tbasic_machine=i686-pc\n\t\tos=-msys\n\t\t;;\n\tmvs)\n\t\tbasic_machine=i370-ibm\n\t\tos=-mvs\n\t\t;;\n\tnacl)\n\t\tbasic_machine=le32-unknown\n\t\tos=-nacl\n\t\t;;\n\tncr3000)\n\t\tbasic_machine=i486-ncr\n\t\tos=-sysv4\n\t\t;;\n\tnetbsd386)\n\t\tbasic_machine=i386-unknown\n\t\tos=-netbsd\n\t\t;;\n\tnetwinder)\n\t\tbasic_machine=armv4l-rebel\n\t\tos=-linux\n\t\t;;\n\tnews | news700 | news800 | news900)\n\t\tbasic_machine=m68k-sony\n\t\tos=-newsos\n\t\t;;\n\tnews1000)\n\t\tbasic_machine=m68030-sony\n\t\tos=-newsos\n\t\t;;\n\tnews-3600 | risc-news)\n\t\tbasic_machine=mips-sony\n\t\tos=-newsos\n\t\t;;\n\tnecv70)\n\t\tbasic_machine=v70-nec\n\t\tos=-sysv\n\t\t;;\n\tnext | m*-next )\n\t\tbasic_machine=m68k-next\n\t\tcase $os in\n\t\t    -nextstep* )\n\t\t\t;;\n\t\t    -ns2*)\n\t\t      os=-nextstep2\n\t\t\t;;\n\t\t    *)\n\t\t      os=-nextstep3\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tnh3000)\n\t\tbasic_machine=m68k-harris\n\t\tos=-cxux\n\t\t;;\n\tnh[45]000)\n\t\tbasic_machine=m88k-harris\n\t\tos=-cxux\n\t\t;;\n\tnindy960)\n\t\tbasic_machine=i960-intel\n\t\tos=-nindy\n\t\t;;\n\tmon960)\n\t\tbasic_machine=i960-intel\n\t\tos=-mon960\n\t\t;;\n\tnonstopux)\n\t\tbasic_machine=mips-compaq\n\t\tos=-nonstopux\n\t\t;;\n\tnp1)\n\t\tbasic_machine=np1-gould\n\t\t;;\n\tneo-tandem)\n\t\tbasic_machine=neo-tandem\n\t\t;;\n\tnse-tandem)\n\t\tbasic_machine=nse-tandem\n\t\t;;\n\tnsr-tandem)\n\t\tbasic_machine=nsr-tandem\n\t\t;;\n\tnsx-tandem)\n\t\tbasic_machine=nsx-tandem\n\t\t;;\n\top50n-* | op60c-*)\n\t\tbasic_machine=hppa1.1-oki\n\t\tos=-proelf\n\t\t;;\n\topenrisc | openrisc-*)\n\t\tbasic_machine=or32-unknown\n\t\t;;\n\tos400)\n\t\tbasic_machine=powerpc-ibm\n\t\tos=-os400\n\t\t;;\n\tOSE68000 | ose68000)\n\t\tbasic_machine=m68000-ericsson\n\t\tos=-ose\n\t\t;;\n\tos68k)\n\t\tbasic_machine=m68k-none\n\t\tos=-os68k\n\t\t;;\n\tpa-hitachi)\n\t\tbasic_machine=hppa1.1-hitachi\n\t\tos=-hiuxwe2\n\t\t;;\n\tparagon)\n\t\tbasic_machine=i860-intel\n\t\tos=-osf\n\t\t;;\n\tparisc)\n\t\tbasic_machine=hppa-unknown\n\t\tos=-linux\n\t\t;;\n\tparisc-*)\n\t\tbasic_machine=hppa-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\tos=-linux\n\t\t;;\n\tpbd)\n\t\tbasic_machine=sparc-tti\n\t\t;;\n\tpbb)\n\t\tbasic_machine=m68k-tti\n\t\t;;\n\tpc532 | pc532-*)\n\t\tbasic_machine=ns32k-pc532\n\t\t;;\n\tpc98)\n\t\tbasic_machine=i386-pc\n\t\t;;\n\tpc98-*)\n\t\tbasic_machine=i386-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tpentium | p5 | k5 | k6 | nexgen | viac3)\n\t\tbasic_machine=i586-pc\n\t\t;;\n\tpentiumpro | p6 | 6x86 | athlon | athlon_*)\n\t\tbasic_machine=i686-pc\n\t\t;;\n\tpentiumii | pentium2 | pentiumiii | pentium3)\n\t\tbasic_machine=i686-pc\n\t\t;;\n\tpentium4)\n\t\tbasic_machine=i786-pc\n\t\t;;\n\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n\t\tbasic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tpentiumpro-* | p6-* | 6x86-* | athlon-*)\n\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tpentium4-*)\n\t\tbasic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tpn)\n\t\tbasic_machine=pn-gould\n\t\t;;\n\tpower)\tbasic_machine=power-ibm\n\t\t;;\n\tppc | ppcbe)\tbasic_machine=powerpc-unknown\n\t\t;;\n\tppc-* | ppcbe-*)\n\t\tbasic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tppcle | powerpclittle)\n\t\tbasic_machine=powerpcle-unknown\n\t\t;;\n\tppcle-* | powerpclittle-*)\n\t\tbasic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tppc64)\tbasic_machine=powerpc64-unknown\n\t\t;;\n\tppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tppc64le | powerpc64little)\n\t\tbasic_machine=powerpc64le-unknown\n\t\t;;\n\tppc64le-* | powerpc64little-*)\n\t\tbasic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tps2)\n\t\tbasic_machine=i386-ibm\n\t\t;;\n\tpw32)\n\t\tbasic_machine=i586-unknown\n\t\tos=-pw32\n\t\t;;\n\trdos | rdos64)\n\t\tbasic_machine=x86_64-pc\n\t\tos=-rdos\n\t\t;;\n\trdos32)\n\t\tbasic_machine=i386-pc\n\t\tos=-rdos\n\t\t;;\n\trom68k)\n\t\tbasic_machine=m68k-rom68k\n\t\tos=-coff\n\t\t;;\n\trm[46]00)\n\t\tbasic_machine=mips-siemens\n\t\t;;\n\trtpc | rtpc-*)\n\t\tbasic_machine=romp-ibm\n\t\t;;\n\ts390 | s390-*)\n\t\tbasic_machine=s390-ibm\n\t\t;;\n\ts390x | s390x-*)\n\t\tbasic_machine=s390x-ibm\n\t\t;;\n\tsa29200)\n\t\tbasic_machine=a29k-amd\n\t\tos=-udi\n\t\t;;\n\tsb1)\n\t\tbasic_machine=mipsisa64sb1-unknown\n\t\t;;\n\tsb1el)\n\t\tbasic_machine=mipsisa64sb1el-unknown\n\t\t;;\n\tsde)\n\t\tbasic_machine=mipsisa32-sde\n\t\tos=-elf\n\t\t;;\n\tsei)\n\t\tbasic_machine=mips-sei\n\t\tos=-seiux\n\t\t;;\n\tsequent)\n\t\tbasic_machine=i386-sequent\n\t\t;;\n\tsh)\n\t\tbasic_machine=sh-hitachi\n\t\tos=-hms\n\t\t;;\n\tsh5el)\n\t\tbasic_machine=sh5le-unknown\n\t\t;;\n\tsh64)\n\t\tbasic_machine=sh64-unknown\n\t\t;;\n\tsparclite-wrs | simso-wrs)\n\t\tbasic_machine=sparclite-wrs\n\t\tos=-vxworks\n\t\t;;\n\tsps7)\n\t\tbasic_machine=m68k-bull\n\t\tos=-sysv2\n\t\t;;\n\tspur)\n\t\tbasic_machine=spur-unknown\n\t\t;;\n\tst2000)\n\t\tbasic_machine=m68k-tandem\n\t\t;;\n\tstratus)\n\t\tbasic_machine=i860-stratus\n\t\tos=-sysv4\n\t\t;;\n\tstrongarm-* | thumb-*)\n\t\tbasic_machine=arm-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tsun2)\n\t\tbasic_machine=m68000-sun\n\t\t;;\n\tsun2os3)\n\t\tbasic_machine=m68000-sun\n\t\tos=-sunos3\n\t\t;;\n\tsun2os4)\n\t\tbasic_machine=m68000-sun\n\t\tos=-sunos4\n\t\t;;\n\tsun3os3)\n\t\tbasic_machine=m68k-sun\n\t\tos=-sunos3\n\t\t;;\n\tsun3os4)\n\t\tbasic_machine=m68k-sun\n\t\tos=-sunos4\n\t\t;;\n\tsun4os3)\n\t\tbasic_machine=sparc-sun\n\t\tos=-sunos3\n\t\t;;\n\tsun4os4)\n\t\tbasic_machine=sparc-sun\n\t\tos=-sunos4\n\t\t;;\n\tsun4sol2)\n\t\tbasic_machine=sparc-sun\n\t\tos=-solaris2\n\t\t;;\n\tsun3 | sun3-*)\n\t\tbasic_machine=m68k-sun\n\t\t;;\n\tsun4)\n\t\tbasic_machine=sparc-sun\n\t\t;;\n\tsun386 | sun386i | roadrunner)\n\t\tbasic_machine=i386-sun\n\t\t;;\n\tsv1)\n\t\tbasic_machine=sv1-cray\n\t\tos=-unicos\n\t\t;;\n\tsymmetry)\n\t\tbasic_machine=i386-sequent\n\t\tos=-dynix\n\t\t;;\n\tt3e)\n\t\tbasic_machine=alphaev5-cray\n\t\tos=-unicos\n\t\t;;\n\tt90)\n\t\tbasic_machine=t90-cray\n\t\tos=-unicos\n\t\t;;\n\ttile*)\n\t\tbasic_machine=$basic_machine-unknown\n\t\tos=-linux-gnu\n\t\t;;\n\ttx39)\n\t\tbasic_machine=mipstx39-unknown\n\t\t;;\n\ttx39el)\n\t\tbasic_machine=mipstx39el-unknown\n\t\t;;\n\ttoad1)\n\t\tbasic_machine=pdp10-xkl\n\t\tos=-tops20\n\t\t;;\n\ttower | tower-32)\n\t\tbasic_machine=m68k-ncr\n\t\t;;\n\ttpf)\n\t\tbasic_machine=s390x-ibm\n\t\tos=-tpf\n\t\t;;\n\tudi29k)\n\t\tbasic_machine=a29k-amd\n\t\tos=-udi\n\t\t;;\n\tultra3)\n\t\tbasic_machine=a29k-nyu\n\t\tos=-sym1\n\t\t;;\n\tv810 | necv810)\n\t\tbasic_machine=v810-nec\n\t\tos=-none\n\t\t;;\n\tvaxv)\n\t\tbasic_machine=vax-dec\n\t\tos=-sysv\n\t\t;;\n\tvms)\n\t\tbasic_machine=vax-dec\n\t\tos=-vms\n\t\t;;\n\tvpp*|vx|vx-*)\n\t\tbasic_machine=f301-fujitsu\n\t\t;;\n\tvxworks960)\n\t\tbasic_machine=i960-wrs\n\t\tos=-vxworks\n\t\t;;\n\tvxworks68)\n\t\tbasic_machine=m68k-wrs\n\t\tos=-vxworks\n\t\t;;\n\tvxworks29k)\n\t\tbasic_machine=a29k-wrs\n\t\tos=-vxworks\n\t\t;;\n\twasm32)\n\t\tbasic_machine=wasm32-unknown\n\t\t;;\n\tw65*)\n\t\tbasic_machine=w65-wdc\n\t\tos=-none\n\t\t;;\n\tw89k-*)\n\t\tbasic_machine=hppa1.1-winbond\n\t\tos=-proelf\n\t\t;;\n\txbox)\n\t\tbasic_machine=i686-pc\n\t\tos=-mingw32\n\t\t;;\n\txps | xps100)\n\t\tbasic_machine=xps100-honeywell\n\t\t;;\n\txscale-* | xscalee[bl]-*)\n\t\tbasic_machine=`echo $basic_machine | sed 's/^xscale/arm/'`\n\t\t;;\n\tymp)\n\t\tbasic_machine=ymp-cray\n\t\tos=-unicos\n\t\t;;\n\tz8k-*-coff)\n\t\tbasic_machine=z8k-unknown\n\t\tos=-sim\n\t\t;;\n\tz80-*-coff)\n\t\tbasic_machine=z80-unknown\n\t\tos=-sim\n\t\t;;\n\tnone)\n\t\tbasic_machine=none-none\n\t\tos=-none\n\t\t;;\n\n# Here we handle the default manufacturer of certain CPU types.  It is in\n# some cases the only manufacturer, in others, it is the most popular.\n\tw89k)\n\t\tbasic_machine=hppa1.1-winbond\n\t\t;;\n\top50n)\n\t\tbasic_machine=hppa1.1-oki\n\t\t;;\n\top60c)\n\t\tbasic_machine=hppa1.1-oki\n\t\t;;\n\tromp)\n\t\tbasic_machine=romp-ibm\n\t\t;;\n\tmmix)\n\t\tbasic_machine=mmix-knuth\n\t\t;;\n\trs6000)\n\t\tbasic_machine=rs6000-ibm\n\t\t;;\n\tvax)\n\t\tbasic_machine=vax-dec\n\t\t;;\n\tpdp10)\n\t\t# there are many clones, so DEC is not a safe bet\n\t\tbasic_machine=pdp10-unknown\n\t\t;;\n\tpdp11)\n\t\tbasic_machine=pdp11-dec\n\t\t;;\n\twe32k)\n\t\tbasic_machine=we32k-att\n\t\t;;\n\tsh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)\n\t\tbasic_machine=sh-unknown\n\t\t;;\n\tsparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)\n\t\tbasic_machine=sparc-sun\n\t\t;;\n\tcydra)\n\t\tbasic_machine=cydra-cydrome\n\t\t;;\n\torion)\n\t\tbasic_machine=orion-highlevel\n\t\t;;\n\torion105)\n\t\tbasic_machine=clipper-highlevel\n\t\t;;\n\tmac | mpw | mac-mpw)\n\t\tbasic_machine=m68k-apple\n\t\t;;\n\tpmac | pmac-mpw)\n\t\tbasic_machine=powerpc-apple\n\t\t;;\n\t*-unknown)\n\t\t# Make sure to match an already-canonicalized machine name.\n\t\t;;\n\t*)\n\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n\t\texit 1\n\t\t;;\nesac\n\n# Here we canonicalize certain aliases for manufacturers.\ncase $basic_machine in\n\t*-digital*)\n\t\tbasic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`\n\t\t;;\n\t*-commodore*)\n\t\tbasic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`\n\t\t;;\n\t*)\n\t\t;;\nesac\n\n# Decode manufacturer-specific aliases for certain operating systems.\n\nif [ x\"$os\" != x\"\" ]\nthen\ncase $os in\n\t# First match some system type aliases\n\t# that might get confused with valid system types.\n\t# -solaris* is a basic system type, with this one exception.\n\t-auroraux)\n\t\tos=-auroraux\n\t\t;;\n\t-solaris1 | -solaris1.*)\n\t\tos=`echo $os | sed -e 's|solaris1|sunos4|'`\n\t\t;;\n\t-solaris)\n\t\tos=-solaris2\n\t\t;;\n\t-svr4*)\n\t\tos=-sysv4\n\t\t;;\n\t-unixware*)\n\t\tos=-sysv4.2uw\n\t\t;;\n\t-gnu/linux*)\n\t\tos=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`\n\t\t;;\n\t# First accept the basic system types.\n\t# The portable systems comes first.\n\t# Each alternative MUST END IN A *, to match a version number.\n\t# -sysv* is not here because it comes later, after sysvr4.\n\t-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \\\n\t      | -*vms* | -sco* | -esix* | -isc* | -aix* | -cnk* | -sunos | -sunos[34]*\\\n\t      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \\\n\t      | -sym* | -kopensolaris* | -plan9* \\\n\t      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \\\n\t      | -aos* | -aros* | -cloudabi* | -sortix* \\\n\t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n\t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n\t      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \\\n\t      | -bitrig* | -openbsd* | -solidbsd* | -libertybsd* \\\n\t      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \\\n\t      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \\\n\t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n\t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n\t      | -chorusos* | -chorusrdb* | -cegcc* | -glidix* \\\n\t      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n\t      | -midipix* | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \\\n\t      | -linux-newlib* | -linux-musl* | -linux-uclibc* \\\n\t      | -uxpv* | -beos* | -mpeix* | -udk* | -moxiebox* \\\n\t      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \\\n\t      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \\\n\t      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \\\n\t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n\t      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \\\n\t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \\\n\t      | -onefs* | -tirtos* | -phoenix* | -fuchsia* | -redox*)\n\t# Remember, each alternative MUST END IN *, to match a version number.\n\t\t;;\n\t-qnx*)\n\t\tcase $basic_machine in\n\t\t    x86-* | i*86-*)\n\t\t\t;;\n\t\t    *)\n\t\t\tos=-nto$os\n\t\t\t;;\n\t\tesac\n\t\t;;\n\t-nto-qnx*)\n\t\t;;\n\t-nto*)\n\t\tos=`echo $os | sed -e 's|nto|nto-qnx|'`\n\t\t;;\n\t-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \\\n\t      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \\\n\t      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)\n\t\t;;\n\t-mac*)\n\t\tos=`echo $os | sed -e 's|mac|macos|'`\n\t\t;;\n\t-linux-dietlibc)\n\t\tos=-linux-dietlibc\n\t\t;;\n\t-linux*)\n\t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n\t\t;;\n\t-sunos5*)\n\t\tos=`echo $os | sed -e 's|sunos5|solaris2|'`\n\t\t;;\n\t-sunos6*)\n\t\tos=`echo $os | sed -e 's|sunos6|solaris3|'`\n\t\t;;\n\t-opened*)\n\t\tos=-openedition\n\t\t;;\n\t-os400*)\n\t\tos=-os400\n\t\t;;\n\t-wince*)\n\t\tos=-wince\n\t\t;;\n\t-osfrose*)\n\t\tos=-osfrose\n\t\t;;\n\t-osf*)\n\t\tos=-osf\n\t\t;;\n\t-utek*)\n\t\tos=-bsd\n\t\t;;\n\t-dynix*)\n\t\tos=-bsd\n\t\t;;\n\t-acis*)\n\t\tos=-aos\n\t\t;;\n\t-atheos*)\n\t\tos=-atheos\n\t\t;;\n\t-syllable*)\n\t\tos=-syllable\n\t\t;;\n\t-386bsd)\n\t\tos=-bsd\n\t\t;;\n\t-ctix* | -uts*)\n\t\tos=-sysv\n\t\t;;\n\t-nova*)\n\t\tos=-rtmk-nova\n\t\t;;\n\t-ns2 )\n\t\tos=-nextstep2\n\t\t;;\n\t-nsk*)\n\t\tos=-nsk\n\t\t;;\n\t# Preserve the version number of sinix5.\n\t-sinix5.*)\n\t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n\t\t;;\n\t-sinix*)\n\t\tos=-sysv4\n\t\t;;\n\t-tpf*)\n\t\tos=-tpf\n\t\t;;\n\t-triton*)\n\t\tos=-sysv3\n\t\t;;\n\t-oss*)\n\t\tos=-sysv3\n\t\t;;\n\t-svr4)\n\t\tos=-sysv4\n\t\t;;\n\t-svr3)\n\t\tos=-sysv3\n\t\t;;\n\t-sysvr4)\n\t\tos=-sysv4\n\t\t;;\n\t# This must come after -sysvr4.\n\t-sysv*)\n\t\t;;\n\t-ose*)\n\t\tos=-ose\n\t\t;;\n\t-es1800*)\n\t\tos=-ose\n\t\t;;\n\t-xenix)\n\t\tos=-xenix\n\t\t;;\n\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n\t\tos=-mint\n\t\t;;\n\t-aros*)\n\t\tos=-aros\n\t\t;;\n\t-zvmoe)\n\t\tos=-zvmoe\n\t\t;;\n\t-dicos*)\n\t\tos=-dicos\n\t\t;;\n\t-nacl*)\n\t\t;;\n\t-ios)\n\t\t;;\n\t-none)\n\t\t;;\n\t*)\n\t\t# Get rid of the `-' at the beginning of $os.\n\t\tos=`echo $os | sed 's/[^-]*-//'`\n\t\techo Invalid configuration \\`$1\\': system \\`$os\\' not recognized 1>&2\n\t\texit 1\n\t\t;;\nesac\nelse\n\n# Here we handle the default operating systems that come with various machines.\n# The value should be what the vendor currently ships out the door with their\n# machine or put another way, the most popular os provided with the machine.\n\n# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n# \"-sun\"), then you have to tell the case statement up towards the top\n# that MANUFACTURER isn't an operating system.  Otherwise, code above\n# will signal an error saying that MANUFACTURER isn't an operating\n# system, and we'll never get to this point.\n\ncase $basic_machine in\n\tscore-*)\n\t\tos=-elf\n\t\t;;\n\tspu-*)\n\t\tos=-elf\n\t\t;;\n\t*-acorn)\n\t\tos=-riscix1.2\n\t\t;;\n\tarm*-rebel)\n\t\tos=-linux\n\t\t;;\n\tarm*-semi)\n\t\tos=-aout\n\t\t;;\n\tc4x-* | tic4x-*)\n\t\tos=-coff\n\t\t;;\n\tc8051-*)\n\t\tos=-elf\n\t\t;;\n\thexagon-*)\n\t\tos=-elf\n\t\t;;\n\ttic54x-*)\n\t\tos=-coff\n\t\t;;\n\ttic55x-*)\n\t\tos=-coff\n\t\t;;\n\ttic6x-*)\n\t\tos=-coff\n\t\t;;\n\t# This must come before the *-dec entry.\n\tpdp10-*)\n\t\tos=-tops20\n\t\t;;\n\tpdp11-*)\n\t\tos=-none\n\t\t;;\n\t*-dec | vax-*)\n\t\tos=-ultrix4.2\n\t\t;;\n\tm68*-apollo)\n\t\tos=-domain\n\t\t;;\n\ti386-sun)\n\t\tos=-sunos4.0.2\n\t\t;;\n\tm68000-sun)\n\t\tos=-sunos3\n\t\t;;\n\tm68*-cisco)\n\t\tos=-aout\n\t\t;;\n\tmep-*)\n\t\tos=-elf\n\t\t;;\n\tmips*-cisco)\n\t\tos=-elf\n\t\t;;\n\tmips*-*)\n\t\tos=-elf\n\t\t;;\n\tor32-*)\n\t\tos=-coff\n\t\t;;\n\t*-tti)\t# must be before sparc entry or we get the wrong os.\n\t\tos=-sysv3\n\t\t;;\n\tsparc-* | *-sun)\n\t\tos=-sunos4.1.1\n\t\t;;\n\tpru-*)\n\t\tos=-elf\n\t\t;;\n\t*-be)\n\t\tos=-beos\n\t\t;;\n\t*-haiku)\n\t\tos=-haiku\n\t\t;;\n\t*-ibm)\n\t\tos=-aix\n\t\t;;\n\t*-knuth)\n\t\tos=-mmixware\n\t\t;;\n\t*-wec)\n\t\tos=-proelf\n\t\t;;\n\t*-winbond)\n\t\tos=-proelf\n\t\t;;\n\t*-oki)\n\t\tos=-proelf\n\t\t;;\n\t*-hp)\n\t\tos=-hpux\n\t\t;;\n\t*-hitachi)\n\t\tos=-hiux\n\t\t;;\n\ti860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)\n\t\tos=-sysv\n\t\t;;\n\t*-cbm)\n\t\tos=-amigaos\n\t\t;;\n\t*-dg)\n\t\tos=-dgux\n\t\t;;\n\t*-dolphin)\n\t\tos=-sysv3\n\t\t;;\n\tm68k-ccur)\n\t\tos=-rtu\n\t\t;;\n\tm88k-omron*)\n\t\tos=-luna\n\t\t;;\n\t*-next )\n\t\tos=-nextstep\n\t\t;;\n\t*-sequent)\n\t\tos=-ptx\n\t\t;;\n\t*-crds)\n\t\tos=-unos\n\t\t;;\n\t*-ns)\n\t\tos=-genix\n\t\t;;\n\ti370-*)\n\t\tos=-mvs\n\t\t;;\n\t*-next)\n\t\tos=-nextstep3\n\t\t;;\n\t*-gould)\n\t\tos=-sysv\n\t\t;;\n\t*-highlevel)\n\t\tos=-bsd\n\t\t;;\n\t*-encore)\n\t\tos=-bsd\n\t\t;;\n\t*-sgi)\n\t\tos=-irix\n\t\t;;\n\t*-siemens)\n\t\tos=-sysv4\n\t\t;;\n\t*-masscomp)\n\t\tos=-rtu\n\t\t;;\n\tf30[01]-fujitsu | f700-fujitsu)\n\t\tos=-uxpv\n\t\t;;\n\t*-rom68k)\n\t\tos=-coff\n\t\t;;\n\t*-*bug)\n\t\tos=-coff\n\t\t;;\n\t*-apple)\n\t\tos=-macos\n\t\t;;\n\t*-atari*)\n\t\tos=-mint\n\t\t;;\n\t*)\n\t\tos=-none\n\t\t;;\nesac\nfi\n\n# Here we handle the case where we know the os, and the CPU type, but not the\n# manufacturer.  We pick the logical manufacturer.\nvendor=unknown\ncase $basic_machine in\n\t*-unknown)\n\t\tcase $os in\n\t\t\t-riscix*)\n\t\t\t\tvendor=acorn\n\t\t\t\t;;\n\t\t\t-sunos*)\n\t\t\t\tvendor=sun\n\t\t\t\t;;\n\t\t\t-cnk*|-aix*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t-beos*)\n\t\t\t\tvendor=be\n\t\t\t\t;;\n\t\t\t-hpux*)\n\t\t\t\tvendor=hp\n\t\t\t\t;;\n\t\t\t-mpeix*)\n\t\t\t\tvendor=hp\n\t\t\t\t;;\n\t\t\t-hiux*)\n\t\t\t\tvendor=hitachi\n\t\t\t\t;;\n\t\t\t-unos*)\n\t\t\t\tvendor=crds\n\t\t\t\t;;\n\t\t\t-dgux*)\n\t\t\t\tvendor=dg\n\t\t\t\t;;\n\t\t\t-luna*)\n\t\t\t\tvendor=omron\n\t\t\t\t;;\n\t\t\t-genix*)\n\t\t\t\tvendor=ns\n\t\t\t\t;;\n\t\t\t-mvs* | -opened*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t-os400*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t-ptx*)\n\t\t\t\tvendor=sequent\n\t\t\t\t;;\n\t\t\t-tpf*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t-vxsim* | -vxworks* | -windiss*)\n\t\t\t\tvendor=wrs\n\t\t\t\t;;\n\t\t\t-aux*)\n\t\t\t\tvendor=apple\n\t\t\t\t;;\n\t\t\t-hms*)\n\t\t\t\tvendor=hitachi\n\t\t\t\t;;\n\t\t\t-mpw* | -macos*)\n\t\t\t\tvendor=apple\n\t\t\t\t;;\n\t\t\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n\t\t\t\tvendor=atari\n\t\t\t\t;;\n\t\t\t-vos*)\n\t\t\t\tvendor=stratus\n\t\t\t\t;;\n\t\tesac\n\t\tbasic_machine=`echo $basic_machine | sed \"s/unknown/$vendor/\"`\n\t\t;;\nesac\n\necho $basic_machine$os\nexit\n\n# Local variables:\n# eval: (add-hook 'write-file-hooks 'time-stamp)\n# time-stamp-start: \"timestamp='\"\n# time-stamp-format: \"%:y-%02m-%02d\"\n# time-stamp-end: \"'\"\n# End:\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 16.099609375,
          "content": "dnl Process this file with autoconf to produce a configure script\n\n#\t\t\"We are ugly but we have the music\"\n#\t\t\t-- Leonard Cohen\n#\n# http://jerkcity.com/jerkcity1335.html\n\n# This is the configure script for distcc.\n# Copyright (C) 2002, 2003, 2004 by Martin Pool\n\n# As of 0.6cvs, distcc no longer uses automake, only autoconf.\nAC_PREREQ([2.71])\nAC_INIT([distcc],[3.4],[https://github.com/distcc/distcc])\n\nAC_CONFIG_HEADERS(src/config.h)\nAC_CONFIG_MACRO_DIRS([m4])\n\nAC_CANONICAL_HOST\nAC_MSG_CHECKING([if the host system type is Linux])\ncase \"${host_os}\" in\nlinux*)\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE(HAVE_LINUX, 1, [Define to 1 if the host system type is Linux.])\n\t;;\n*)\n\tAC_MSG_RESULT(no)\n\t;;\nesac\n\n# FreeBSD installs its version of libpopt into /usr/local/, but does\n# not put that on the default library and header path.\n# Solaris doesn't even ship libpopt.  We used to add that path if\n# building on *bsd*, but bje points out that will break\n# cross-compilation, and it's kind of ugly anyhow.  Anyhow, you can\n# either set CPPFLAGS and LDFLAGS when running configure, or use\n# --with-extra-foo.\n\n# Check for socklen_t, and do something appropriate on systems\n# that don't have it.\nAC_CHECK_TYPE([socklen_t], ,[\n\tAC_MSG_CHECKING([for socklen_t equivalent])\n\tAC_CACHE_VAL([dcc_cv_socklen_t_equiv],\n\t[\n\t# Systems have either \"struct sockaddr{,_in} *\" or\n\t# \"void *\" as the second argument to getpeername\n\tdcc_cv_socklen_t_equiv=\n\tfor arg2 in \"struct sockaddr_in\" \"struct sockaddr\" void; do\n\t\tfor t in int size_t unsigned long \"unsigned long\"; do\n\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#include <sys/types.h>\n#include <sys/socket.h>\n\nint getpeername (int, $arg2 *, $t *);\n]], [[\n$t len;\ngetpeername(0,0,&len);\n]])],[\n\tdcc_cv_socklen_t_equiv=\"$t\"\n\tbreak\n],[])\n\t\tdone\n\tdone\n\n\tif test \"x$dcc_cv_socklen_t_equiv\" = x; then\n\t\tAC_MSG_ERROR([Cannot find a type to use in place of socklen_t])\n\tfi\n\t])\n\tAC_MSG_RESULT($dcc_cv_socklen_t_equiv)\n\tAC_DEFINE_UNQUOTED(socklen_t, $dcc_cv_socklen_t_equiv,\n\t\t[type to use in place of socklen_t if not defined])],\n\t[#include <sys/types.h>\n#include <sys/socket.h>])\n\ndnl Android requires -llog for printf and friends\ndnl and will only run position independent executables\nAC_MSG_CHECKING([if building on Android])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[\n  #ifdef __BIONIC__\n  int ok;\n  (void)ok;\n  #else\n  choke me\n  #endif]])],[AC_MSG_RESULT(yes)\n LDFLAGS=\"$LDFLAGS -llog -pie\"],[AC_MSG_RESULT(no)])\n\n# TODO: Handle program transform rules by autoconf.\n\n### Checks for configure options\n\nAC_ARG_ENABLE(pump-mode,\n\tAS_HELP_STRING([--disable-pump-mode],[include server support (pump mode), requires python]),\n\t\t[pump_mode=${enableval}], [pump_mode=yes])\n\nAM_PATH_PYTHON([3.1],,[:])\nAC_ARG_VAR(PYTHON, [Python interpreter])\nAC_SUBST(PYTHON_RELATIVE_LIB)\n\nAC_ARG_ENABLE(rfc2553,\n\tAS_HELP_STRING([--enable-rfc2553],[use getaddrinfo, getnameinfo, etc]))\n\nif test x\"$enable_rfc2553\" = xyes\nthen\n    AC_DEFINE(ENABLE_RFC2553,1,[use getaddrinfo(), getnameinfo(), etc])\nfi\n\nAC_ARG_WITH(gnome,\n        AS_HELP_STRING([--with-gnome],[build GNOME-based monitor]))\n\nif test x\"$with_gnome\" = xyes\nthen\n    GNOME_BIN=distccmon-gnome\n    AC_DEFINE(WITH_GNOME,1,[Use GNOME])\nfi\n\nAC_ARG_WITH(gtk,\n        AS_HELP_STRING([--with-gtk],[build GTK+-based monitor]))\nif test x\"$with_gtk\" = xyes\nthen\n    GNOME_BIN=distccmon-gnome\n    AC_DEFINE(WITH_GTK,1,[Use GTK+])\nfi\n\nAC_ARG_ENABLE(profile,\n        AS_HELP_STRING([--enable-profile],[turn on gprof]))\n\nif test x\"$enable_profile\" = xyes\nthen\n    CFLAGS=\"$CFLAGS -pg -g\"\nfi\n\nAC_ARG_ENABLE(Werror,\n        AS_HELP_STRING([--disable-Werror],[don't use gcc's -Werror option when building]))\n\n# Now get the package configuration information for whatever packages\n# we need.  It's faster to just do it once during configuration.\nif test \"x${with_gnome}\" = xyes\nthen\n    GNOME_PACKAGES=\"gtk+-3.0 libgnome-3.0 libgnomeui-3.0 pango\"\nelif test \"x${with_gtk}\" = xyes\nthen\n    GNOME_PACKAGES=\"gtk+-3.0\"\nelse\n    GNOME_PACKAGES=\"\"\nfi\n\nfor pkg in $GNOME_PACKAGES\ndo\n    AC_MSG_CHECKING([version of $pkg])\n    if gnomevers=`pkg-config --modversion $pkg`\n    then\n        AC_MSG_RESULT($gnomevers)\n    else\n        AC_MSG_ERROR([$pkg was not found by pkg-config])\n    fi\ndone\n\nif test x${with_gnome} = xyes -o x${with_gtk} = xyes\nthen\n    INSTALL_GNOME=\"install-gnome-data\"\n    UNINSTALL_GNOME=\"uninstall-gnome-data\"\n    AC_MSG_CHECKING([GNOME/GTK+ cflags])\n    GNOME_CFLAGS=\"`pkg-config --cflags $GNOME_PACKAGES`\" || AC_MSG_ERROR([failed to get cflags])\n    AC_MSG_RESULT([${GNOME_CFLAGS}])\n\n    AC_MSG_CHECKING([GNOME/GTK+ libraries])\n    GNOME_LIBS=\"`pkg-config --libs $GNOME_PACKAGES`\" || AC_MSG_ERROR([failed to get libs])\n    AC_MSG_RESULT([${GNOME_LIBS}])\nfi\n\nAC_SUBST(GNOME_PACKAGES)\nAC_SUBST(GNOME_CFLAGS)\nAC_SUBST(GNOME_LIBS)\nAC_SUBST(INSTALL_GNOME)\nAC_SUBST(UNINSTALL_GNOME)\n\ndnl Checks for programs\nAC_PROG_CC\nWERROR_CFLAGS=\"\"\nPYTHON_CFLAGS=\"\"\nif test x\"$GCC\" = xyes\nthen\n    CFLAGS=\"$CFLAGS -MD \\\n-W -Wall -Wimplicit \\\n-Wshadow -Wpointer-arith -Wcast-align -Wwrite-strings \\\n-Waggregate-return -Wstrict-prototypes -Wmissing-prototypes \\\n-Wnested-externs -Wmissing-declarations\"\n\n    # -Wuninitialized requires -O\n    case \"$CFLAGS\" in \"-O\"*|*\" -O\"*)\n        CFLAGS=\"$CFLAGS -Wuninitialized\"\n        ;;\n    esac\n    # Would like -Wunreachable-code here, but it generates too many false\n    # positives.\n\n    # We want warnings to be treated as errors,\n    # unless the --disable-Werror configure option was used.\n    # Note that we can't include this in CFLAGS,\n    # because that would affect the configure tests,\n    # causing some of the tests to fail when they should succeed.\n    if test x\"$enable_Werror\" != xno\n    then\n      WERROR_CFLAGS=\"-Werror\"\n\t  # -Wp,-U_FORTIFY_SOURCE is to turn off _FORTIFY_SOURCE on systems where\n\t  # it's in the Python Makefile (and hence inherited by us).\n\t  # -Werror -D_FORTIFY_SOURCE gives compiler errors for some distcc routines that\n\t  # ignore the return value from libc functions (like getcwd).\n\t  # That would cause this code to not compile, which is no good.\n\t  PYTHON_CFLAGS=\"-Wp,-U_FORTIFY_SOURCE\"\n    fi\n\n    # Additional flags for compiling Python extension modules.\n    # We disable -Wmissing-prototypes and -Wmissing-declarations,\n    # which don't apply to python extensions (it exports global fns via a\n    # pointer), and -Wwrite-strings, which just had too many false\n    # positives (for Python 2.2, anyway; looks like these may be fixed\n    # in Python 2.5).\n    PYTHON_CFLAGS=\"$PYTHON_CFLAGS -Wno-missing-prototypes -Wno-missing-declarations \\\n-Wno-write-strings\"\n\n    AC_MSG_NOTICE([Adding gcc options: $CFLAGS])\nfi\nAC_SUBST(WERROR_CFLAGS)\nAC_SUBST(PYTHON_CFLAGS)\nAC_SEARCH_LIBS([strerror],[cposix])\n\n\n# Apple's OS X gcc has a cpp-precomp \"feature\" that breaks standard\n# variadic macros.  If we can disable it, do so.\n\n\n# This is needed for our included version of lzo.\nCPPFLAGS=\"$CPPFLAGS -DMINILZO_HAVE_CONFIG_H\"\n\nCPPFLAGS=\"$CPPFLAGS -DHAVE_CONFIG_H\"\n\n# Needed to get various GNU-only functions.  They're all autodetected\n# by configure so we can cope without them, but we want them if they're\n# there.\nCPPFLAGS=\"$CPPFLAGS -D_GNU_SOURCE\"\n\nAC_PROG_MAKE_SET\nAC_PROG_INSTALL\n\nAC_C_INLINE\nAC_C_BIGENDIAN\n\n########################################################################\n### Checks for header files\n\nAC_CHECK_HEADERS([unistd.h sys/types.h sys/sendfile.h])\nAC_CHECK_HEADERS([ctype.h sys/resource.h sys/socket.h sys/select.h])\nAC_CHECK_HEADERS([netinet/in.h], [], [],\n[#if HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n])\nAC_CHECK_HEADERS([arpa/nameser.h], [], [],\n[#if HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n])\nAC_CHECK_HEADERS([resolv.h], [], [],\n[#if HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#if HAVE_NETINET_IN_H\n# include <netinet/in.h>\n#endif\n#if HAVE_ARPA_NAMESER_H\n# include <arpa/nameser.h>\n#endif\n])\n\nAC_CHECK_HEADERS([float.h mcheck.h alloca.h sys/mman.h sys/loadavg.h])\nAC_CHECK_HEADERS([elf.h])\nAC_CHECK_HEADERS([fnmatch.h])\n\n######################################################################\ndnl Checks for types\n\nAC_CHECK_TYPES([in_port_t, in_addr_t], , ,\n\t       [\n#if HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#if HAVE_SYS_SOCKET_H\n# include <sys/socket.h>\n#endif\n#if HAVE_NETINET_IN_H\n# include <netinet/in.h>\n#endif\n#if HAVE_ARPA_NAMESER_H\n# include <arpa/nameser.h>\n#endif\n])\n\n\n\n########################################################################\n### Checks for libraries.\n\n# The following test taken from the cvs sources via Samba:\n# If we can't find connect, try looking in -lsocket, -lnsl, and -linet.\n# The Irix 5 libc.so has connect and gethostbyname, but Irix 5 also has\n# libsocket.so which has a bad implementation of gethostbyname (it\n# only looks in /etc/hosts), so we only look for -lsocket if we need\n# it.\nAC_SEARCH_LIBS(gethostent, [nsl])\nAC_SEARCH_LIBS(setsockopt, [socket])\nAC_SEARCH_LIBS(hstrerror, [resolv])\nAC_SEARCH_LIBS(inet_aton, [resolv])\n\nPKG_CHECK_MODULES(POPT, [popt >= 1.7])\nAC_SUBST(POPT_CFLAGS)\nAC_SUBST(POPT_LIBS)\n\n########################################################################\n# Checks for library functions, using libraries discovered above\n\n# The line below was commented out: it should not be necessary for the\n# AC_CHECK_FUNCS, which link against libraries on the host. For the subsequent\n# explicit compilation tests below, no distcc libraries are used.\n# TODO(klarlund): remove the line.\n\n# CPPFLAGS=\"$CPPFLAGS -I$srcdir/src\"\n\nAC_CHECK_FUNCS([getpagesize])\nAC_CHECK_FUNCS([sendfile setsid flock lockf hstrerror strerror setuid setreuid])\nAC_CHECK_FUNCS([getuid geteuid mcheck wait4 wait3 waitpid setgroups])\nAC_CHECK_FUNCS([snprintf vsnprintf vasprintf asprintf getcwd getwd mkdtemp])\nAC_CHECK_FUNCS([getrusage strsignal gettimeofday])\nAC_CHECK_FUNCS([getaddrinfo getnameinfo inet_ntop inet_ntoa])\nAC_CHECK_FUNCS([strndup strsep mmap strlcpy])\n\nAC_CHECK_FUNCS([getloadavg])\nAC_CHECK_FUNCS([getline])\n\nAC_CHECK_FUNCS([fstatat])\n\nAC_CHECK_DECLS([snprintf, vsnprintf, vasprintf, asprintf, strndup])\n\nAC_MSG_CHECKING([if mmap() supports MAP_FAILED])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#include <stddef.h>\n#ifdef HAVE_SYS_MMAN_H\n#  include <sys/mman.h>\n#endif]], [[\n#ifdef HAVE_MMAP\nif (mmap (NULL, 0, 0, 0, 0, 0) == MAP_FAILED)\n\treturn 0;\n#else\n#error mmap unavailable\n#endif]])],[AC_MSG_RESULT(yes)],[\n\tAC_MSG_RESULT(no)\n\tAC_DEFINE([MAP_FAILED], [(void *)-1L],\n\t[Define if MAP_FAILED constant not available])\n])\n\ndnl\ndnl Test if the preprocessor understand vararg macros\ndnl\nAC_MSG_CHECKING([for vararg macro support])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#define func(a, b...) do { } while (0)]], [[func(\"a\"); func(\"a\", \"b\"); func(\"a\", \"b\", \"c\")]])],[AC_MSG_RESULT(yes)\n AC_DEFINE(HAVE_VARARG_MACROS, , [Define if your cpp has vararg macros])],[AC_MSG_RESULT(no)])\n\nAC_CACHE_CHECK([for va_copy],dcc_cv_HAVE_VA_COPY,[\nAC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <stdarg.h>\nva_list ap1,ap2;]], [[va_copy(ap1,ap2);]])],[dcc_cv_HAVE_VA_COPY=yes],[dcc_cv_HAVE_VA_COPY=no])])\nif test x\"$dcc_cv_HAVE_VA_COPY\" = x\"yes\"; then\n    AC_DEFINE(HAVE_VA_COPY,1,[Whether va_copy() is available])\nfi\nAC_CACHE_CHECK([for __va_copy],dcc_cv_HAVE_UNDERSCORE_UNDERSCORE_VA_COPY,[\nAC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <stdarg.h>\nva_list ap1,ap2;]], [[__va_copy(ap1,ap2);]])],[dcc_cv_HAVE_UNDERSCORE_UNDERSCORE_VA_COPY=yes],[dcc_cv_HAVE_UNDERSCORE_UNDERSCORE_VA_COPY=no])])\nif test x\"$dcc_cv_HAVE_UNDERSCORE_UNDERSCORE_VA_COPY\" = x\"yes\"; then\n    AC_DEFINE(HAVE_UNDERSCORE_UNDERSCORE_VA_COPY,1,[Whether __va_copy() is available])\nfi\n\nAC_CACHE_CHECK([for C99 vsnprintf],rsync_cv_HAVE_C99_VSNPRINTF,[\nAC_RUN_IFELSE([AC_LANG_SOURCE([[\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/types.h>\n#include <stdarg.h>\nstatic int foo(const char *format, ...) {\n       va_list ap;\n       int len;\n       char buf[5];\n\n       va_start(ap, format);\n       len = vsnprintf(0, 0, format, ap);\n       va_end(ap);\n       if (len != 5) return 1;\n\n       if (snprintf(buf, 3, \"hello\") != 5 || strcmp(buf, \"he\") != 0) return 1;\n\n       return 0;\n}\nint main() { return foo(\"hello\"); }\n]])],[rsync_cv_HAVE_C99_VSNPRINTF=yes],[rsync_cv_HAVE_C99_VSNPRINTF=no],[rsync_cv_HAVE_C99_VSNPRINTF=cross])])\nif test x\"$rsync_cv_HAVE_C99_VSNPRINTF\" = x\"yes\"; then\n    AC_DEFINE(HAVE_C99_VSNPRINTF, 1, [define if vsnprintf is C99 compliant])\nfi\n\n\nAC_CACHE_CHECK([for working socketpair],rsync_cv_HAVE_SOCKETPAIR,[\nAC_RUN_IFELSE([AC_LANG_SOURCE([[\n#include <sys/types.h>\n#include <sys/socket.h>\n\nint main() {\n       int fd[2];\n       return (socketpair(AF_UNIX, SOCK_STREAM, 0, fd) != -1) ? 0 : 1;\n}]])],[rsync_cv_HAVE_SOCKETPAIR=yes],[rsync_cv_HAVE_SOCKETPAIR=no],[rsync_cv_HAVE_SOCKETPAIR=cross])])\nif test x\"$rsync_cv_HAVE_SOCKETPAIR\" = x\"yes\"; then\n    AC_DEFINE(HAVE_SOCKETPAIR, 1, [define if you have a working socketpair])\nfi\n\ndnl Checks for structures\nAC_CHECK_MEMBER([struct sockaddr_storage.ss_family],\n    AC_DEFINE(HAVE_SOCKADDR_STORAGE, 1, [define if you have struct sockaddr_storage]),,\n    [#include <sys/socket.h>])\n\nAC_ARG_WITH(avahi,\n        AS_HELP_STRING([--without-avahi],[build without avahi]))\n\ndnl check for avahi\nif test x\"$with_avahi\" != xno; then\n    PKG_CHECK_MODULES(AVAHI, [avahi-client >= 0.6],\n    [AC_DEFINE(HAVE_AVAHI, 1, [defined if Avahi is available])\n    CFLAGS=\"$CFLAGS $AVAHI_CFLAGS\"\n    LIBS=\"$LIBS $AVAHI_LIBS\"\n    ZEROCONF_COMMON_OBJS=\"src/zeroconf.o src/gcc-id.o\"\n    ZEROCONF_DISTCC_OBJS=\"\"\n    ZEROCONF_DISTCCD_OBJS=\"src/zeroconf-reg.o\"],\n    [ZEROCONF_COMMON_OBJS=\"\"\n    ZEROCONF_DISTCC_OBJS=\"\"\n    ZEROCONF_DISTCCD_OBJS=\"\"])\n    AC_SUBST(ZEROCONF_COMMON_OBJS)\n    AC_SUBST(ZEROCONF_DISTCC_OBJS)\n    AC_SUBST(ZEROCONF_DISTCCD_OBJS)\nfi\n\nAUTH_COMMON_OBJS=\"\"\nAUTH_DISTCC_OBJS=\"\"\nAUTH_DISTCCD_OBJS=\"\"\n\n#check for GSS-API\nAC_ARG_WITH([auth],\n\t    [AS_HELP_STRING([--with-auth],\n\t    [provide mutual authentication services via the GSS-API])])\n\nif test x\"$with_auth\" = xyes; then\n        AC_SEARCH_LIBS([gss_init_sec_context],\n                        [gssapi gssapi_krb5 gss],\n\t                AC_DEFINE(HAVE_GSSAPI, 1, [Define if the GSS_API is available])\n\t                AUTH_COMMON_OBJS=\"src/auth_common.o\"\n\t                AUTH_DISTCC_OBJS=\"src/auth_distcc.o\"\n\t                AUTH_DISTCCD_OBJS=\"src/auth_distccd.o\",\n\t                AC_MSG_FAILURE([--with-auth was given but no GSS-API library found])\n\t                AUTH_COMMON_OBJS=\"\"\n                        AUTH_DISTCC_OBJS=\"\"\n                        AUTH_DISTCCD_OBJS=\"\")\nfi\n\nAC_SUBST(AUTH_COMMON_OBJS)\nAC_SUBST(AUTH_DISTCC_OBJS)\nAC_SUBST(AUTH_DISTCCD_OBJS)\n\ndnl ##### Output\nAC_SUBST(CFLAGS)\nAC_SUBST(LDFLAGS)\nAC_SUBST(CPPFLAGS)\nAC_SUBST(GNOME_BIN)\n\n\n# Sometimes canonical triples as used by configure differ from GCC ones\n# x86: configure: x86_64-pc-linux-gnu, GCC: x86_64-linux-gnu\n# ALT Linux: configure: ${arch}-alt-linux-gnu, GCC: ${arch}-alt-linux\n# Therefore ask the compiler for its triple\nif test \"x${GCC}\" = xyes ; then\n\tnative_compiler_triple=`$CC -dumpmachine`\nfi\nif test \"x$native_compiler_triple\" = \"x\"; then\n\tnative_compiler_triple=\"$host\"\nfi\nAC_MSG_NOTICE([Native compiler triple: $native_compiler_triple])\n\nAC_DEFINE_UNQUOTED(NATIVE_COMPILER_TRIPLE, [\"$native_compiler_triple\"], [Native compiler triple])\n\nAC_DEFINE_UNQUOTED(GNU_HOST, [\"$host\"], [Your gnu-style host triple])\n# The '.stamp-conf' files force creation of the containing directories in the\n# build tree.\nAC_CONFIG_FILES([Makefile]  lzo/.stamp-conf)\nAC_CONFIG_FILES([pump], [chmod +x pump])\nAC_OUTPUT\n\n\n##### Finalization\n\n# Display success, installation paths, and GPL licence statement.\necho ' '\n${MAKE-make} showpaths\necho ' '\ncat <<EOF\n\n    $PACKAGE_NAME $PACKAGE_VERSION configured\n\n    Copyright (C) 2002 - 2025 by Martin Pool\n    Portions Copyright 2005 Google Inc.\n\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,\n    USA.\n\nEOF\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "find_c_extension.sh",
          "type": "blob",
          "size": 1.271484375,
          "content": "#! /bin/sh\n\n# Usage: find_c_extension.sh BUILDDIR\n#\n# Write path of directory containing C-extension of build directory.\n#\n# More precisely, locate the unique directory of the form:\n#\n#   _include_server/lib.*/include_server/\n#\n# that contains file 'distcc_pump_c_extensions.so'. Write the path of this \n# directory to stdout and exit with status 0. If such a path does not exist \n# then write error message to stderr and exit with status 1.\n\nbuilddir=\"$1\"\n# We want to catch the file whether it's .so (unix) or .dll (cygwin).\n# The '[sd][ol]*' glob does that without having to worry about\n# unpredictable 'ls' behavior when a glob has no matches.\n# (Side note: there is intense internal debate about whether the\n# '[sd][ol]' hack is \"so ugly I can't stand it\" or \"kinda cute\".)\nso_files=`ls $builddir/_include_server/lib.*/include_server/\\\ndistcc_pump_c_extensions*.[sd][ol]*`\nif [ -z \"$so_files\" ]; then\n  echo \\\n    '__________Could not find shared libraries for distcc-pump' 1>&2\n  exit 1\nelif [ `echo \"$so_files\" | wc -l` -ge 2 ]; then\n  echo \\\n    '__________Shared libraries for multiple architectures discovered.' \\\n    1>&2\n  echo \\\n    \"__________Cannot determine which one to use among: $so_files\" \\\n    1>&2\n  exit 1\nelse\n  # There was only one such file.\n  dirname \"$so_files\"\n  exit 0\nfi\n"
        },
        {
          "name": "gnome",
          "type": "tree",
          "content": null
        },
        {
          "name": "include_server",
          "type": "tree",
          "content": null
        },
        {
          "name": "install-sh",
          "type": "blob",
          "size": 5.466796875,
          "content": "#!/bin/sh\n#\n# install - install a program, script, or datafile\n# This comes from X11R5 (mit/util/scripts/install.sh).\n#\n# Copyright 1991 by the Massachusetts Institute of Technology\n#\n# Permission to use, copy, modify, distribute, and sell this software and its\n# documentation for any purpose is hereby granted without fee, provided that\n# the above copyright notice appear in all copies and that both that\n# copyright notice and this permission notice appear in supporting\n# documentation, and that the name of M.I.T. not be used in advertising or\n# publicity pertaining to distribution of the software without specific,\n# written prior permission.  M.I.T. makes no representations about the\n# suitability of this software for any purpose.  It is provided \"as is\"\n# without express or implied warranty.\n#\n# Calling this script install-sh is preferred over install.sh, to prevent\n# `make' implicit rules from creating a file called install from it\n# when there is no Makefile.\n#\n# This script is compatible with the BSD install script, but was written\n# from scratch.  It can only install one file at a time, a restriction\n# shared with many OS's install programs.\n\n\n# set DOITPROG to echo to test this script\n\n# Don't use :- since 4.3BSD and earlier shells don't like it.\ndoit=\"${DOITPROG-}\"\n\n\n# put in absolute paths if you don't have them in your path; or use env. vars.\n\nmvprog=\"${MVPROG-mv}\"\ncpprog=\"${CPPROG-cp}\"\nchmodprog=\"${CHMODPROG-chmod}\"\nchownprog=\"${CHOWNPROG-chown}\"\nchgrpprog=\"${CHGRPPROG-chgrp}\"\nstripprog=\"${STRIPPROG-strip}\"\nrmprog=\"${RMPROG-rm}\"\nmkdirprog=\"${MKDIRPROG-mkdir}\"\n\ntransformbasename=\"\"\ntransform_arg=\"\"\ninstcmd=\"$mvprog\"\nchmodcmd=\"$chmodprog 0755\"\nchowncmd=\"\"\nchgrpcmd=\"\"\nstripcmd=\"\"\nrmcmd=\"$rmprog -f\"\nmvcmd=\"$mvprog\"\nsrc=\"\"\ndst=\"\"\ndir_arg=\"\"\n\nwhile [ x\"$1\" != x ]; do\n    case $1 in\n\t-c) instcmd=\"$cpprog\"\n\t    shift\n\t    continue;;\n\n\t-d) dir_arg=true\n\t    shift\n\t    continue;;\n\n\t-m) chmodcmd=\"$chmodprog $2\"\n\t    shift\n\t    shift\n\t    continue;;\n\n\t-o) chowncmd=\"$chownprog $2\"\n\t    shift\n\t    shift\n\t    continue;;\n\n\t-g) chgrpcmd=\"$chgrpprog $2\"\n\t    shift\n\t    shift\n\t    continue;;\n\n\t-s) stripcmd=\"$stripprog\"\n\t    shift\n\t    continue;;\n\n\t-t=*) transformarg=`echo $1 | sed 's/-t=//'`\n\t    shift\n\t    continue;;\n\n\t-b=*) transformbasename=`echo $1 | sed 's/-b=//'`\n\t    shift\n\t    continue;;\n\n\t*)  if [ x\"$src\" = x ]\n\t    then\n\t\tsrc=$1\n\t    else\n\t\t# this colon is to work around a 386BSD /bin/sh bug\n\t\t:\n\t\tdst=$1\n\t    fi\n\t    shift\n\t    continue;;\n    esac\ndone\n\nif [ x\"$src\" = x ]\nthen\n\techo \"install:\tno input file specified\"\n\texit 1\nelse\n\ttrue\nfi\n\nif [ x\"$dir_arg\" != x ]; then\n\tdst=$src\n\tsrc=\"\"\n\t\n\tif [ -d $dst ]; then\n\t\tinstcmd=:\n\t\tchmodcmd=\"\"\n\telse\n\t\tinstcmd=mkdir\n\tfi\nelse\n\n# Waiting for this to be detected by the \"$instcmd $src $dsttmp\" command\n# might cause directories to be created, which would be especially bad \n# if $src (and thus $dsttmp) contains '*'.\n\n\tif [ -f $src -o -d $src ]\n\tthen\n\t\ttrue\n\telse\n\t\techo \"install:  $src does not exist\"\n\t\texit 1\n\tfi\n\t\n\tif [ x\"$dst\" = x ]\n\tthen\n\t\techo \"install:\tno destination specified\"\n\t\texit 1\n\telse\n\t\ttrue\n\tfi\n\n# If destination is a directory, append the input filename; if your system\n# does not like double slashes in filenames, you may need to add some logic\n\n\tif [ -d $dst ]\n\tthen\n\t\tdst=\"$dst\"/`basename $src`\n\telse\n\t\ttrue\n\tfi\nfi\n\n## this sed command emulates the dirname command\ndstdir=`echo $dst | sed -e 's,[^/]*$,,;s,/$,,;s,^$,.,'`\n\n# Make sure that the destination directory exists.\n#  this part is taken from Noah Friedman's mkinstalldirs script\n\n# Skip lots of stat calls in the usual case.\nif [ ! -d \"$dstdir\" ]; then\ndefaultIFS='\t\n'\nIFS=\"${IFS-${defaultIFS}}\"\n\noIFS=\"${IFS}\"\n# Some sh's can't handle IFS=/ for some reason.\nIFS='%'\nset - `echo ${dstdir} | sed -e 's@/@%@g' -e 's@^%@/@'`\nIFS=\"${oIFS}\"\n\npathcomp=''\n\nwhile [ $# -ne 0 ] ; do\n\tpathcomp=\"${pathcomp}${1}\"\n\tshift\n\n\tif [ ! -d \"${pathcomp}\" ] ;\n        then\n\t\t$mkdirprog \"${pathcomp}\"\n\telse\n\t\ttrue\n\tfi\n\n\tpathcomp=\"${pathcomp}/\"\ndone\nfi\n\nif [ x\"$dir_arg\" != x ]\nthen\n\t$doit $instcmd $dst &&\n\n\tif [ x\"$chowncmd\" != x ]; then $doit $chowncmd $dst; else true ; fi &&\n\tif [ x\"$chgrpcmd\" != x ]; then $doit $chgrpcmd $dst; else true ; fi &&\n\tif [ x\"$stripcmd\" != x ]; then $doit $stripcmd $dst; else true ; fi &&\n\tif [ x\"$chmodcmd\" != x ]; then $doit $chmodcmd $dst; else true ; fi\nelse\n\n# If we're going to rename the final executable, determine the name now.\n\n\tif [ x\"$transformarg\" = x ] \n\tthen\n\t\tdstfile=`basename $dst`\n\telse\n\t\tdstfile=`basename $dst $transformbasename | \n\t\t\tsed $transformarg`$transformbasename\n\tfi\n\n# don't allow the sed command to completely eliminate the filename\n\n\tif [ x\"$dstfile\" = x ] \n\tthen\n\t\tdstfile=`basename $dst`\n\telse\n\t\ttrue\n\tfi\n\n# Make a temp file name in the proper directory.\n\n\tdsttmp=$dstdir/#inst.$$#\n\n# Move or copy the file name to the temp name\n\n\t$doit $instcmd $src $dsttmp &&\n\n\ttrap \"rm -f ${dsttmp}\" 0 &&\n\n# and set any options; do chmod last to preserve setuid bits\n\n# If any of these fail, we abort the whole thing.  If we want to\n# ignore errors from any of these, just make sure not to ignore\n# errors from the above \"$doit $instcmd $src $dsttmp\" command.\n\n\tif [ x\"$chowncmd\" != x ]; then $doit $chowncmd $dsttmp; else true;fi &&\n\tif [ x\"$chgrpcmd\" != x ]; then $doit $chgrpcmd $dsttmp; else true;fi &&\n\tif [ x\"$stripcmd\" != x ]; then $doit $stripcmd $dsttmp; else true;fi &&\n\tif [ x\"$chmodcmd\" != x ]; then $doit $chmodcmd $dsttmp; else true;fi &&\n\n# Now rename the file to the real destination.\n\n\t$doit $rmcmd -f $dstdir/$dstfile &&\n\t$doit $mvcmd $dsttmp $dstdir/$dstfile \n\nfi &&\n\n\nexit 0\n"
        },
        {
          "name": "lzo",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkinstalldirs",
          "type": "blob",
          "size": 0.7041015625,
          "content": "#! /bin/sh\n# mkinstalldirs --- make directory hierarchy\n# Author: Noah Friedman <friedman@prep.ai.mit.edu>\n# Created: 1993-05-16\n# Public domain\n\n# $Id: mkinstalldirs,v 1.1 2002/05/28 02:43:45 mbp Exp $\n\nerrstatus=0\n\nfor file\ndo\n   set fnord `echo \":$file\" | sed -ne 's/^:\\//#/;s/^://;s/\\// /g;s/^#/\\//;p'`\n   shift\n\n   pathcomp=\n   for d\n   do\n     pathcomp=\"$pathcomp$d\"\n     case \"$pathcomp\" in\n       -* ) pathcomp=./$pathcomp ;;\n     esac\n\n     if test ! -d \"$pathcomp\"; then\n        echo \"mkdir $pathcomp\"\n\n        mkdir \"$pathcomp\" || lasterr=$?\n\n        if test ! -d \"$pathcomp\"; then\n  \t  errstatus=$lasterr\n        fi\n     fi\n\n     pathcomp=\"$pathcomp/\"\n   done\ndone\n\nexit $errstatus\n\n# mkinstalldirs ends here\n"
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "pump.in",
          "type": "blob",
          "size": 19.5009765625,
          "content": "#!/bin/sh\n#\n# Copyright 2007 Google Inc.\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,\n# USA.\n#\n# Authors: Nils Klarlund, Fergus Henderson\n#\n# 'pump': a script for using distcc-pump with build commands.\n\n# This file is processed by configure, which substitutes in the right\n# value for @PYTHON@, @prefix@, etc.\n# NOTE: do we need to do the expansion of these variables by using sed\n# in Makefile.in rather than by having configure process this file?\n# The autoconf manual suggests that we do.  Right now it doesn't seem\n# to be needed in practice, though.\n\nPYTHON=@PYTHON@\nprefix=@prefix@\nexec_prefix=@exec_prefix@\nsysconfdir=@sysconfdir@\nsrcdir=@srcdir@\n\n# This is where include_server.py lives.  It's set to the empty string\n# before pump is installed into its final location.  At install-time,\n# the 'make install' command will rewrite this line of pump to point\n# to the installed include_server.py.\n# NOTE: DO NOT CHANGE THE LINE BELOW WITHOUT CHANGING THE SED IN\n#       Makefile.in:install-include-server.\ninclude_server=''\n\n\nCheckUsage() {\n  if [ \"$1\" = \"\" -o \"$1\" = '-h' -o \"$1\" = '--help' ]; then\n    cat <<'EOF'\nUsage:\n    pump COMMAND [ARG...]\nor\n    pump --startup\n    pump --shutdown\n\nDescription:\n  Pump, also known as distcc-pump, accelerates remote compilation with\n  distcc by also distributing preprocessing to the servers.\n\n  The simplest usage is the form \"pump COMMAND [ARG...]\".\n  This will start an include server for distcc-pump; set some environment\n  variables; change PATH to use the distcc-pump \"distcc\" client; execute\n  COMMAND with the specified ARG(s); and then shutdown the include server.\n  The COMMAND is typically a parallel build command, such as\n  \"make -j80\", that will do many concurrent invocations of distcc.\n\n  An alternative way of invoking pump is to explicitly invoke \"pump --startup\"\n  to start the include server and \"pump --shutdown\" to stop the include server.\n  The \"pump --startup\" command will start up the include server, and will print\n  out some environment variable settings.  These environment variables are used\n  to communicate between the distcc-pump \"distcc\" client and the include\n  server, and to communicate between \"pump --startup\" and \"pump --shutdown\".\n  The caller of \"pump --startup\" is responsible for setting those environment\n  variables before invoking \"distcc\" or \"pump --shutdown\".  For example:\n\n      eval `pump --startup`\n      make -j80\n      pump --shutdown\n\n  Note that distcc-pump assumes that sources files will not be modified during\n  the lifetime of the include server, so modifying source files during a build\n  may cause inconsistent results.\n\nEnvironment variables (all optional):\n\n  DISTCC_LOCATION        Either the distcc 'bin' install directory (when the\n                         pump script in the installation executes) or the build\n                         directory (when the pump script is run during \n                         development).\n\n                         This location is normally inferred from the dirname\n                         of argv[0].  It is resolved with respect to links.\n\n                         If this location is the bin directory inside an\n                         installation, then Python executables and distcc\n                         itself will be retrieved from the parent directory of\n                         the location.\n\n                         If this location is the build directory, then Python \n                         sources are retrieved from the source directory.\n\n  DISTCC_POTENTIAL_HOSTS The distcc servers that will be queried by lsdistcc\n                         in order to produce a value for DISTCC_HOSTS.\n                         This value may be unset or null. In such\n                         cases, use DISTCC_HOSTS.\n\n  DISTCC_HOSTS           This variable is passed through to distcc but only if \n                         DISTCC_POTENTIAL_HOSTS is not set.\n\n  LSDISTCC_ARGS          Extra arguments to lsdistcc.\n\n  INCLUDE_SERVER_ARGS    Extra arguments to the include server.\n\n  PYTHONOPTIMIZE         If set to \"\", then Python optimization is disabled.\n\nExample: \n  pump make\nEOF\n    exit 0\n  fi\n}\n\n# Get the directory of a command. The argument is $0 as received from\n# argv[0].  If $0 is of the form /path/symlink and symlink points to\n# another directory than /path, then `basename $0` does not return\n# the directory where the executable lives. We fix this here.\nGetScriptDir() {\n  if [ -h \"$0\" ]; then\n    dir=`dirname \"$0\"`\n    link=`readlink \"$0\"`\n    linkdir=`dirname \"$link\"`\n    case $linkdir in\n         /*) echo \"$linkdir\" ;;\n         *)  echo \"$dir/$linkdir\" ;;\n    esac\n  else\n    dirname \"$0\"\n  fi\n}\n\n# Constants used by this process.\n\n# The default value must be the same as that in src/compile.c. See\n# comment there.\nmax_discrepancies_before_demotion=1\nif [ -n \"$DISTCC_MAX_DISCREPANCY\" ] ; then\n  if [ \"$DISTCC_MAX_DISCREPANCY\" -le 0 ] ; then\n    echo \"$0:\" \\\n            \"Bad DISTCC_MAX_DISCREPANCY value: \\\"$DISTCC_MAX_DISCREPANCY\\\".\" \\\n            \"Needs to be 1 or greater.\" \\\n            1>&2\n    exit 1\n  fi\n  max_discrepancies_before_demotion=\"$DISTCC_MAX_DISCREPANCY\"\nfi\n\n\n# Variables inherited from the environment of the caller.\nif [ -z \"$DISTCC_LOCATION\" ]; then\n   # Set the default for location of 'pump' script'.\n   DISTCC_LOCATION=`GetScriptDir \"$0\"`\nfi\n\n\n# Variables used by this process.\nprogram_name=\"$0\"\nsocket_dir=''           # Temporary directory created by this process.\ntmp_pid_file=''         # Temporary file created by this process.\navailable_hosts_file='' # Temporary file for newline separated list of hosts.\nsocket=''               # Temporary socket file, inside $socket_dir.\ninclude_server_stdout=''  # Temporary file, inside $socket_dir.\ninclude_server_stderr=''  # Temporary file, inside $socket_dir.\ninclude_server_pid=''\ninclude_server_relative=''  # Set by Initialize(). This path is relative to\n                            # the 'bin' directory of a distcc-pump installation.\ndistcc_location='' # Set by Initialize().  The directory of the distcc binary.\nDISTCC='distcc'    # the name of the distcc binary\nverbose=1          # Print progress messages to stdout? (1 means yes.)\nredirect_io=0      # Redirect include server's I/O streams? (1 means yes.)\n\n# Make temp file using distinguishing prefix $1. Use optional argument\n# $2=\"-d\" to make a directory. The name of the created temp file or\n# directory is written to stdout.\nMakeTmpFile() {\n  if mktemp $2 \"${TMPDIR-/tmp}/$1.XXXXXX\"; then\n    :   # mktemp prints the output we want; no need to do more\n  else\n    echo \"$program_name: Could not make temp \\\"$1\\\"\" 1>&2\n    exit 1\n  fi\n}\n\nInitialize() {\n  # We know the value of $PYTHON when this function is executed. The value is\n  # set when the 'pump' script is made from 'pump.in'. Use this value in the\n  # formation of the relative path that takes us from the 'bin' directory of an\n  # installation to the 'include_server' directory.\n  include_server_relative=\"../$PYTHON_RELATIVE_LIB/include_server\"\n\n  distcc_location=\"$DISTCC_LOCATION\"\n\n  # Check that we're getting exactly the distcc client we want: the\n  # one that is part of this build.\n  if [ ! -x \"$distcc_location/$DISTCC\" ]; then\n    echo \"$0: error: can't find distcc (looked in $distcc_location)\" 1>&2\n    exit 1\n  fi\n}\n\nPrintIncludeServerStatusMessage() {\n  include_server_status=$1\n  if [ \"$verbose\" = 1 ]; then\n    if [ \"$include_server_status\" = 0 ]; then\n      echo '__________Started distcc-pump include server'\n    else\n      echo '__________Could not start distcc-pump include server' 1>&2\n    fi\n  fi\n}\n\nAnnounce() {\n  if [ \"$verbose\" = 1 ]; then\n    echo \"__________Using distcc-pump from $DISTCC_LOCATION\"\n  fi\n}\n\n# Starts up the include server.  Sets $socket, $socket_dir, and\n# $include_server_pid.  If successful (with exit status 0), sets exported\n# variable $INCLUDE_SERVER_PORT to the socket file ($socket), to tell the distcc\n# clients where to find the include server.\nStartIncludeServer() {\n  # If include_server already exists, that means we're a\n  # installed pump (in /usr/local/bin somewhere or something), and\n  # include_server points to the installed include_server.py.\n  if [ -n \"$include_server\" ]; then\n    pythonpath=`dirname \"$include_server\"`\n  else\n    # We assume this script is run from the build directory.  We pick up .py\n    # files from the include_server directory in the source tree, and we pick up\n    # the .so file from the include_server/build/libXXX/include_server\n    # directory. \n    #\n    # Calculate the location of the source directory.\n    distcc_srcdir=`cd \"$DISTCC_LOCATION\"; cd \"$srcdir\"; pwd`\n    # The source tree location must be passed.\n    include_server=\"$distcc_srcdir/include_server/include_server.py\"\n    # Now locate the single directory containing the .so file from the build\n    # directory. Possibly there may be more than one such file; first identify\n    # them all.\n    so_dir=`\"$distcc_srcdir/find_c_extension.sh\" \"$DISTCC_LOCATION\"`\n    pythonpath=\"$so_dir\"\n  fi\n\n  # Create a temporary directory $socket_dir.\n  socket_dir=`MakeTmpFile \"distcc-pump\" -d` || exit 1\n\n  # The socket file on which the include server accepts connections.\n  socket=\"$socket_dir/socket\"\n\n  # Files for the include server's stdout/stderr.\n  # When a build tool invokes 'pump --startup', stdout/stderr may be\n  # pipes, in which case the invocation may hang unless the include\n  # server process closes them.  So to avoid this, we need to redirect\n  # the include server's output to temporary files.\n  # We print these files during shutdown; better late than never!\n  include_server_stdout=\"$socket_dir/stdout\"\n  include_server_stderr=\"$socket_dir/stderr\"\n\n  # File for the include server process id.\n  tmp_pid_file=`MakeTmpFile \"distcc-pump-pid\"` || exit 1\n\n  # Start include server in optimized mode (no assertions) and with\n  # debug level 1 for tracing warnings.\n  # The include server will fork off\n  # a background process to handle the requests;\n  # the main process will exit only when the background\n  # process is ready to accept connections.\n\n  (\n    # Optionally redirect the I/O streams for the include server.\n    case $redirect_io in\n      1) exec < /dev/null            \\\n           > $include_server_stdout  \\\n           2> $include_server_stderr\n         ;;\n      *)\n          rm -f $include_server_stdout $include_server_stderr\n          ;;\n    esac\n\n    if [ -z \"$PYTHONOPTIMIZE\" ]; then PYTHONOPTIMIZE=1; fi\n    # We use 'eval' so that INCLUDE_SERVER_ARGS can use shell quoting such \n    # as in:\n    #\n    #   INCLUDE_SERVER_ARGS='--stat_reset_triggers=\"*\"'\n    #\n    # which will pass '*' to the include server (that is, the string consisting\n    # of one asterisk) without filename expansion.\n    eval \\\n      \"PYTHONOPTIMIZE='$PYTHONOPTIMIZE' \" \\\n      \"PYTHONPATH='$pythonpath${PYTHONPATH:+:$PYTHONPATH}' \" \\\n      \"'$PYTHON'\"                       \\\n         \"'$include_server'\"            \\\n         --port \"'$socket'\"             \\\n         --pid_file \"'$tmp_pid_file'\"   \\\n         -d1                            \\\n         $INCLUDE_SERVER_ARGS\n  )\n\n  # solaris sh's built-in test does not support -S, so we need to use\n  # the binary.\n  if [ -x /bin/test ]; then\n    TEST=/bin/test\n  elif [ -x /usr/bin/test ]; then\n    TEST=/usr/bin/test\n  else\n    TEST=test\n  fi\n  if $TEST ! -S \"$socket\"; then\n    echo \"__________Expected a socket at '$socket'\" 1>&2\n    PrintIncludeServerStatusMessage 1\n    return 1\n  fi\n\n  include_server_pid=`cat $tmp_pid_file`\n  rm \"$tmp_pid_file\"\n\n  # Make sure $include_server_pid looks like a pid\n  if echo \"$include_server_pid\" | grep '^[0-9][0-9]*$' >/dev/null; then\n    # We got a number.  Tell the distcc clients where to find it.\n    INCLUDE_SERVER_PORT=\"$socket\"\n    export INCLUDE_SERVER_PORT\n  else\n    # We got something that's not a number.  This indicates the\n    # socket is not working.\n    include_server_pid=''\n    PrintIncludeServerStatusMessage 1\n    return 1\n  fi\n}\n\nReportDiscrepancies() {\n  # The discrepancy_counter file is created when a pump-mode distcc invocation\n  # failed remotely but succeeded locally.\n  num_discrepancies=`(cat $socket_dir/discrepancy_counter 2>/dev/null | wc -c \\\n                      || echo 0)`\n  if [ $num_discrepancies -eq 0 ]; then\n    return 0\n  fi\n  echo \"__________Warning: $num_discrepancies\" \\\n       'pump-mode compilation(s) failed on server,' \\\n       'but succeeded locally.' 1>&2\n  if [ $num_discrepancies -ge $max_discrepancies_before_demotion ]; then\n    echo '__________Distcc-pump was demoted to plain mode.' 1>&2\n  fi\n  echo 'See the Distcc Discrepancy Symptoms section in the' \\\n       'include_server(1) man page.' 1>&2\n}\n\nShutDown() {\n  ReportDiscrepancies\n  # Always -- at exit -- shut down include_server and remove $socket_dir\n  if [ -n \"$include_server_pid\" ] && \\\n    ps -p \"$include_server_pid\" > /dev/null; then\n    if [ \"$verbose\" = 1 ]; then\n      echo '__________Shutting down distcc-pump include server'\n    fi\n    kill $include_server_pid\n    # Wait until it's really dead.  We need to do this because the\n    # include server may produce output after receiving SIGTERM.\n    # Note that while 'sleep 0.01' is relying on a feature of GNU sleep,\n    # that's OK; on systems that don't support it, it's effectively the\n    # same as 'sleep 0', i.e. we'll just busy-wait rather than sleeping.\n    while kill -0 $include_server_pid; do sleep 0.01; done >/dev/null 2>&1\n  fi\n\n  if [ -f \"$include_server_stdout\" ]; then\n    cat \"$include_server_stdout\"\n  fi\n  if [ -f \"$include_server_stderr\" ]; then\n    cat \"$include_server_stderr\" >&2\n  fi\n\n  if [ -n \"$socket_dir\" ];  then\n    rm -rf \"$socket_dir\"\n  fi\n  if [ -n \"$tmp_pid_file\" ]; then\n    rm -f \"$tmp_pid_file\"\n  fi\n  if [ -n \"$available_hosts_file\" ]; then\n    rm -f \"$available_hosts_file\"\n  fi\n}\n\n# Invokes lsdistcc to find the available servers. This list is\n# \\n-separated and written to the filepath provided as $1.\nAvailableHosts() {\n  available_hosts=\"$1\"\n  lsdistcc=\"$DISTCC_LOCATION/lsdistcc\"\n  if [ ! -x \"$lsdistcc\" ]; then\n     echo \"$0: error: can't find lsdistcc (looked in $DISTCC_LOCATION)\" 1>&2\n     exit 1\n  fi\n  # Call lsdistcc and let it wait no more than 150ms unless overridden in\n  # LSDISTCC_ARGS.\n  \"$lsdistcc\" -c150 $LSDISTCC_ARGS $DISTCC_POTENTIAL_HOSTS > \"$available_hosts\"\n}\n\n# Exports DISTCC_HOSTS as a function of the single argument and the global\n# variable $available_hosts_file.\nExportDISTCC_HOSTS() {\n  include_server_status=\"$1\"\n  opts=''\n  if [ \"$include_server_status\" = 0 ]; then\n    # The include server is up.\n    # Make 'cpp' mode (with lzo) the default.\n    opts=\",cpp,lzo\"\n  else\n    # The include server is not ready.\n    # Make 'lzo' mode the default.\n    if [ \"$?\" = 1 ]; then\n      echo \"__________Warning: distcc-pump include server failed;\" \\\n        \"running unpumped\" 1>&2\n    fi\n    opts=\",lzo\"\n  fi\n  # When calculating final value of DISTCC_HOSTS, we get rid of\n  # newlines (thanks to \"`sed ...`\").\n  export DISTCC_HOSTS=\"--randomize `sed s/'$'/$opts/ $available_hosts_file`\"\n  if [ \"$verbose\" = 1 ]; then\n    echo \"__________Found\" \\\n         \"`wc -l < $available_hosts_file` available distcc servers\"\n  fi\n}\n\nStartIncludeServerAndDetermineHosts() {\n  include_server_status=1 # ie, not running (yet)\n  if [ -n \"$DISTCC_POTENTIAL_HOSTS\" ]; then\n    # Probe the distcc servers. It may take up to a second. But\n    # starting the include server takes about 150ms. Make these\n    # activities happen in parallel. \n\n    # First, the lsdistcc command goes in the background.\n    available_hosts_file=`MakeTmpFile \"distcc-pump-hosts\"` || exit 1\n    AvailableHosts \"$available_hosts_file\" &\n\n    # Second, the include server goes in the foreground so variables can be set.\n    StartIncludeServer && include_server_status=0\n\n    # Await for AvailableHosts to finish.\n    wait \n    ExportDISTCC_HOSTS \"$include_server_status\"\n    rm -f \"$available_hosts_file\"\n  else\n    if [ -z \"$DISTCC_HOSTS\" ] &&\n       [ -z \"$DISTCC_DIR\" -o ! -f \"$DISTCC_DIR/hosts\" ] &&\n       [ -z \"$HOME\" -o ! -f \"$HOME/.distcc/hosts\" ] &&\n       [ ! -f \"$sysconfdir/distcc/hosts\" ]\n    then\n      echo \"$program_name:\" \\\n              \"expected environment variables \\\"DISTCC_HOSTS\\\" or\" \\\n              \"\\\"DISTCC_POTENTIAL_HOSTS\\\" to be set, or to find a\" \\\n              \"distcc hosts file in \\\"\\$DISTCC_DIR/hosts\\\",\" \\\n              \"\\\"\\$HOME/.distcc/hosts\\\", or \\\"$sysconfdir/distcc/hosts\\\".\" \\\n              1>&2\n      exit 1\n    else\n      hosts=`$distcc_location/distcc --show-hosts`\n      num_hosts=`echo \"$hosts\" | wc -l`\n      num_pump_hosts=`echo \"$hosts\" | grep ',cpp' | wc -l`\n      if [ $num_hosts -eq 0 ]; then\n        echo \"$program_name: error: distcc hosts list is empty!\" 1>&2\n        exit 1\n      elif [ $num_pump_hosts -eq 0 ]; then\n        echo \"$program_name: error: pump mode requested, but distcc\" \\\n          \"hosts list does not contain any hosts with ',cpp' option\" 1>&2\n        exit 1\n      else\n        if [ \"$verbose\" = 1 ]; then\n          server_word=\"servers\"\n          if [ $num_hosts = 1 ]; then\n            server_word=\"server\"\n          fi\n          if [ $num_hosts -eq $num_pump_hosts ]; then\n            echo \"__________Using $num_hosts distcc $server_word in pump mode\"\n          else\n            echo \"__________Using $num_hosts distcc $server_word, of which\" \\\n                 \"only $num_pump_hosts support(s) pump mode\"\n          fi\n        fi\n      fi\n    fi\n    StartIncludeServer && include_server_status=0\n  fi\n  return \"$include_server_status\"\n}\n\n# Prints out environment variable settings, for the --startup option.\nDumpEnvironmentVariables() {\n  # Variables used by \"pump --shutdown\"\n  echo export INCLUDE_SERVER_PID=\\'$include_server_pid\\'\n  echo export INCLUDE_SERVER_DIR=\\'$socket_dir\\'\n  # Variables used by the distcc client\n  echo export INCLUDE_SERVER_PORT=\\'$INCLUDE_SERVER_PORT\\'\n  if [ -n \"$DISTCC_HOSTS\" ]; then\n    echo export DISTCC_HOSTS=\\'$DISTCC_HOSTS\\'\n  fi\n  echo export PATH=\\'$distcc_location:$PATH\\'\n}\n\nMain() {\n  CheckUsage \"$@\"\n\n  Initialize\n\n  # Do not write on stdout if we're testing pump mode\n  if [ \"0$DISTCC_TESTING_INCLUDE_SERVER\" -ne \"0\" ]; then\n    verbose=0\n  fi\n\n  case \"$*\" in\n    --startup)\n      # Don't put ordinary progress messages on stdout,\n      # because they interfere with the environment variable\n      # settings that we print out.\n      verbose=0\n      # Redirect the include server's stdin/stdout/stderr\n      redirect_io=1\n      trap 'ShutDown' EXIT  # In case we get interrupted.\n      StartIncludeServerAndDetermineHosts\n      include_server_status=$?\n      trap '' EXIT\n      if [ \"$include_server_status\" = 0 ]; then\n        DumpEnvironmentVariables\n        exit 0\n      else\n        exit 1\n      fi\n      ;;\n    --shutdown)\n      include_server_pid=\"$INCLUDE_SERVER_PID\"\n      socket_dir=\"$INCLUDE_SERVER_DIR\"\n      include_server_stdout=\"$socket_dir/stdout\"\n      include_server_stderr=\"$socket_dir/stderr\"\n      ShutDown\n      exit 0\n      ;;\n    *)\n      trap 'ShutDown' EXIT\n      Announce\n      StartIncludeServerAndDetermineHosts || exit 1\n      # Now execute the command that is the argument of 'pump'.\n      PATH=\"$distcc_location:$PATH\" \\\n        \"$@\"\n      # When we exit, the ShutDown function will be called.\n      ;;\n  esac\n}\n\nMain \"$@\"\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "update-distcc-symlinks.py",
          "type": "blob",
          "size": 2.0087890625,
          "content": "#!/usr/bin/env python3\n\nimport subprocess\nimport string\nimport os\nimport stat\nimport re\n\ndistcc_dir = \"@prefix@/lib/distcc\"\nGCC_LIBEXEC_DIRS = (\n    '/usr/lib/gcc',  # Debian native GCC compilers\n    '/usr/lib/gcc-cross',  # Debian GCC cross-compilers\n    '/usr/libexec/gcc', # rpm-based distros\n)\nold_symlinks = set()\nnew_symlinks = set()\nstandard_names = [\"cc\", \"c++\", \"c89\", \"c99\"]\n\nif not os.access(distcc_dir, os.X_OK):\n    os.mkdir(distcc_dir)\n\n\ndef consider(name):\n    if os.access(f\"/usr/bin/{name}\", os.X_OK):\n        new_symlinks.add(name)\n        print(name)\n\n\ndef consider_gcc(prefix, suffix=\"\"):\n    consider(f\"{prefix}gcc{suffix}\")\n    consider(f\"{prefix}g++{suffix}\")\n\n\ndef consider_clang(suffix):\n    consider(f\"clang{suffix}\")\n    consider(f\"clang++{suffix}\")\n\n\nfor x in standard_names:\n    consider(x)\n\nconsider_gcc(\"\")\nconsider_gcc(\"c89-\")\nconsider_gcc(\"c99-\")\n\n\ndef sloppy_listdir(thedir):\n    try:\n        return os.listdir(thedir)\n    except FileNotFoundError:\n        pass\n    except NotADirectoryError:\n        pass\n    return []\n\n\ndef scan_gcc_libexec(gcc_dir):\n    for gnu_host in sloppy_listdir(gcc_dir):\n        consider_gcc(f\"{gnu_host}-\")\n        for version in sloppy_listdir(gcc_dir + \"/\" + gnu_host):\n            consider_gcc(\"\", f\"-{version}\")\n            consider_gcc(f\"{gnu_host}-\", f\"-{version}\")\n\n\nfor gcc_dir in GCC_LIBEXEC_DIRS:\n    scan_gcc_libexec(gcc_dir)\n\n\nconsider_clang(\"\")\nfor ent in os.listdir(\"/usr/lib\"):\n    if ent.startswith(\"llvm-\"):\n        version = ent.split(\"-\")[1]\n        consider_clang(f\"-{version}\")\n\nfor name in os.listdir(distcc_dir):\n    mode = os.lstat(distcc_dir + \"/\" + name).st_mode\n    if stat.S_ISLNK(mode):\n        if os.access(distcc_dir + \"/\" + name, os.X_OK):\n            old_symlinks.add(name)\n        else:\n            os.unlink(distcc_dir + \"/\" + name)\n\nfor link in old_symlinks:\n    if link not in new_symlinks:\n        os.unlink(distcc_dir + \"/\" + link)\n\nfor link in new_symlinks:\n    if link not in old_symlinks:\n        os.symlink(\"../../bin/distcc\", distcc_dir + \"/\" + link)\n"
        }
      ]
    }
  ]
}