{
  "metadata": {
    "timestamp": 1736709718578,
    "page": 103,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "3proxy/3proxy",
      "stars": 4037,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4716796875,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.9892578125,
          "content": "#################\n## Eclipse\n#################\n\n*.pydevproject\n.project\n.metadata\n*.exe\n*.dll\n*.exp\n*.lib\n*.key\n*.pem\n*.so\nbin/3proxy\nbin/proxy\nbin/socks\nbin/tcppm\nbin/udppm\nbin/pop3p\nbin/smtpp\nbin/ftppr\nbin/mycrypt\nbin/tlspr\nbin64/\ndll/\ntmp/\n*.tmp\n*.bak\n*.bat\n*.swp\n*.o\n*.idb\n*.err\nres\nversion.c\nversion\nversion.sh\nbuildlinux.sh\n3proxy.res\n\nsrc/3proxy\nsrc/proxy\nsrc/socks\nsrc/tcppm\nsrc/udppm\nsrc/pop3p\nsrc/smtpp\nsrc/ftppr\nsrc/icqpr\nsrc/mycrypt\nsrc/dighosts\n*.ld.so\n*.dSYM\ndoc/html/man3/\ndoc/html/man8/\n*.var\nverfile.sh\n/Makefile\ncopytgz.sh\n*~.nib\nlocal.properties\n.classpath\n.settings/\n.loadpath\n\n# External tool builders\n.externalToolBuilders/\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n\n# CDT-specific\n.cproject\n\n# PDT-specific\n.buildpath\n\n\n#################\n## Visual Studio\n#################\n\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n\n[Dd]ebug/\n[Rr]elease/\nx64/\nbuild/\n[Oo]bj/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n*_i.c\n*_p.c\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.log\n*.scc\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n*.ncrunch*\n.*crunch*.local.xml\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.Publish.xml\n*.pubxml\n\n# NuGet Packages Directory\n## TODO: If you have NuGet Package Restore enabled, uncomment the next line\n#packages/\n\n# Windows Azure Build Output\ncsx\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.[Pp]ublish.xml\n*.pfx\n*.publishsettings\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file to a newer\n# Visual Studio version. Backup files are not needed, because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\nApp_Data/*.mdf\nApp_Data/*.ldf\n\n#############\n## Windows detritus\n#############\n\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Mac crap\n.DS_Store\n\n\n#############\n## Python\n#############\n\n*.py[co]\n\n# Packages\n*.egg\n*.egg-info\ndist/\nbuild/\neggs/\nparts/\nvar/\nsdist/\ndevelop-eggs/\n.installed.cfg\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.tox\n\n#Translations\n*.mo\n\n#Mr Developer\n.mr.developer.cfg\n"
        },
        {
          "name": "Dockerfile.full",
          "type": "blob",
          "size": 2.4990234375,
          "content": "# 3proxy.full is fully functional 3proxy build based on busibox:glibc\n#\n#to  build:\n# docker build -f Dockerfile.full -t 3proxy.full .\n#to run:\n# by default 3proxy uses safe chroot environment with chroot to /usr/local/3proxy with uid/gid 65535/65535 and expects\n# configuration file to be placed in /usr/local/etc/3proxy.\n# Paths in configuration file must be relative to /usr/local/3proxy, that is use /logs instead of \n# /usr/local/3proxy/logs. nserver in chroot is required for DNS resolution. An example:\n#\n# echo nserver 8.8.8.8 >/path/to/local/config/directory/3proxy.cfg\n# echo proxy -p3129 >>/path/to/local/config/directory/3proxy.cfg\n# docker run -p 3129:3129 -v /path/to/local/config/directory:/usr/local/3proxy/conf -name 3proxy.full 3proxy.full\n#\n# /path/to/local/config/directory in this example must conrain 3proxy.cfg\n# if you need 3proxy to be executed without chroot with root permissions, replace /etc/3proxy/3proxy.cfg by e.g. mounting config\n# dir to /etc/3proxy ot by providing config file /etc/3proxy/3proxy.cfg\n# docker run -p 3129:3129 -v /path/to/local/config/directory:/etc/3proxy -name 3proxy.full 3proxy.full\n#\n# use \"log\" without pathname in config to log to stdout.\n# plugins are located in /usr/local/3proxy/libexec (/libexec for chroot config).\n\n\nFROM gcc AS buildenv\nCOPY . 3proxy\nRUN cd 3proxy &&\\\n echo \"\">> Makefile.Linux &&\\\n echo PLUGINS = StringsPlugin TrafficPlugin PCREPlugin TransparentPlugin SSLPlugin>>Makefile.Linux &&\\\n echo LIBS = -l:libcrypto.a -l:libssl.a -ldl >>Makefile.Linux &&\\\n make -f Makefile.Linux &&\\\n strip bin/3proxy &&\\\n strip bin/StringsPlugin.ld.so &&\\\n strip bin/TrafficPlugin.ld.so &&\\\n strip bin/PCREPlugin.ld.so &&\\\n strip bin/TransparentPlugin.ld.so &&\\\n strip bin/SSLPlugin.ld.so &&\\\n mkdir /usr/local/lib/3proxy &&\\\n cp \"/lib/`gcc -dumpmachine`\"/libdl.so.* /usr/local/lib/3proxy/\n\nFROM busybox:glibc\nCOPY --from=buildenv /usr/local/lib/3proxy/libdl.so.* /lib/\nCOPY --from=buildenv 3proxy/bin/3proxy /bin/\nCOPY --from=buildenv 3proxy/bin/*.ld.so /usr/local/3proxy/libexec/\nRUN mkdir /usr/local/3proxy/logs &&\\\n mkdir /usr/local/3proxy/conf &&\\\n chown -R 65535:65535 /usr/local/3proxy &&\\\n chmod -R 550  /usr/local/3proxy &&\\\n chmod 750  /usr/local/3proxy/logs &&\\\n chmod -R 555 /usr/local/3proxy/libexec &&\\\n chown -R root /usr/local/3proxy/libexec &&\\\n mkdir /etc/3proxy/ &&\\\n echo chroot /usr/local/3proxy 65535 65535 >/etc/3proxy/3proxy.cfg &&\\\n echo include /conf/3proxy.cfg >>/etc/3proxy/3proxy.cfg &&\\\n chmod 440  /etc/3proxy/3proxy.cfg\nCMD [\"/bin/3proxy\", \"/etc/3proxy/3proxy.cfg\"]\n"
        },
        {
          "name": "Dockerfile.minimal",
          "type": "blob",
          "size": 1.359375,
          "content": "# dockerfile for \"interactive\" minimal 3proxy execution, no configuration mounting is required, configuration\n# is accepted from stdin. Use \"end\" command to indicate the end of configuration. Use \"log\" for stdout logging.\n#\n# This is busybox based docker with only 3proxy static executable and empty non-writable \"run\" directory.\n#\n# \"plugin\" is not supported\n#\n# Build:\n#\n# docker build -f Dockerfile.minimal -t 3proxy.minimal .\n#\n# Run example:\n#\n# docker run -i -p 3129:3129 --name 3proxy 3proxy.minimal  \n#or\n# docker start -i 3proxy\n#<chroot run 65535 65535\n#<nserver 8.8.8.8\n#<nscache 65535\n#<log\n#<proxy -p3129\n#<end\n#\n# use \"chroot run 65536 65536\" in config for safe chroot environment. nserver is required for DNS resolutions in chroot.\n\n\nFROM gcc AS buildenv\nCOPY . 3proxy\nRUN cd 3proxy &&\\\n echo \"\">>Makefile.Linux &&\\\n echo LDFLAGS = -fPIC -O2 -fno-strict-aliasing -pthread >>Makefile.Linux &&\\\n echo PLUGINS = >>Makefile.Linux &&\\\n echo LIBS = >>Makefile.Linux &&\\\n echo CFLAGS = -g  -fPIC -O2 -fno-strict-aliasing -c -pthread -DWITHSPLICE -D_GNU_SOURCE -DGETHOSTBYNAME_R -D_THREAD_SAFE -D_REENTRANT -DNOODBC -DWITH_STD_MALLOC -DFD_SETSIZE=4096 -DWITH_POLL -DWITH_NETFILTER -DNOPLUGINS >>Makefile.Linux &&\\\n make -f Makefile.Linux &&\\\n strip bin/3proxy\n \nFROM busybox:glibc\nCOPY --from=buildenv 3proxy/bin/3proxy /bin/3proxy\nRUN mkdir /run && chmod 555 /run\nCMD [\"/bin/3proxy\"]\n"
        },
        {
          "name": "Makefile.FreeBSD",
          "type": "blob",
          "size": 1.71484375,
          "content": "#\n# 3 proxy Makefile for GCC/Unix\n#\n# remove -DNOODBC from CFLAGS and add -lodbc to LDFLAGS to compile with ODBC\n# library support. Add -DSAFESQL for poorely written ODBC library / drivers.\n\nBUILDDIR = ../bin/\nCC ?= cc\n\nCFLAGS += -c -fno-strict-aliasing -DNOODBC -DWITH_STD_MALLOC -DFD_SETSIZE=4096 -DWITH_POLL\nCOUT = -o \nLN ?= ${CC}\nLDFLAGS += -pthread -fno-strict-aliasing \n# -lpthreads may be reuiured on some platforms instead of -pthreads\n# -ldl or -lld may be required for some platforms\nDCFLAGS = -fPIC\nDLFLAGS = -shared\nDLSUFFICS = .so\nLIBS =\nLIBSPREFIX = -l\nLIBSSUFFIX = \nLNOUT = -o \nEXESUFFICS =\nOBJSUFFICS = .o\nDEFINEOPTION = -D\nCOMPFILES = *~\nREMOVECOMMAND = rm -f\nAFTERCLEAN = (find . -type f -name \"*.o\" -delete && find src/ -type f -name \"Makefile.var\" -delete && find bin/ -type f -perm +111 -delete) || true\nTYPECOMMAND = cat\nCOMPATLIBS =\nMAKEFILE = Makefile.FreeBSD\nPLUGINS = StringsPlugin TrafficPlugin PCREPlugin PamAuth TransparentPlugin\n\ninclude Makefile.inc\n\ninstall: all\n\tif [ ! -d \"/usr/local/3proxy/bin\" ]; then mkdir -p /usr/local/3proxy/bin/; fi\n\tinstall bin/3proxy /usr/local/3proxy/bin/3proxy\n\tinstall bin/mycrypt /usr/local/3proxy/bin/mycrypt\n\tinstall scripts/add3proxyuser.sh /usr/local/3proxy/bin/\n\tif [ -s /usr/local/etc/3proxy/3proxy.cfg ]; then /usr/local/3proxy/3proxy.cfg already exists ; else install scripts/3proxy.cfg /usr/local/etc/3proxy/; fi\n\tif [ ! -d /var/log/3proxy/ ]; then mkdir /var/log/3proxy/; fi\n\ttouch /usr/local/3proxy/passwd\n\ttouch /usr/local/3proxy/counters\n\ttouch /usr/local/3proxy/bandlimiters\n\techo Run /usr/local/3proxy/bin/add3proxyuser.sh to add \\'admin\\' user\n\nallplugins:\n\t@list='$(PLUGINS)'; for p in $$list; do cp Makefile Makefile.var plugins/$$p; cd plugins/$$p ; make ;\tcd ../.. ; done\n"
        },
        {
          "name": "Makefile.Linux",
          "type": "blob",
          "size": 4.10546875,
          "content": "#\n# 3 proxy Makefile for GCC/Linux/Cygwin\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# remove -DNOODBC from CFLAGS and add -lodbc to LIBS to compile with ODBC\n# library support. Add -DSAFESQL for poorely written ODBC library / drivers.\n\nBUILDDIR = ../bin/\nCC = gcc\n\nCFLAGS = -g  -fPIC -O2 -fno-strict-aliasing -c -pthread -DWITHSPLICE -D_GNU_SOURCE -DGETHOSTBYNAME_R -D_THREAD_SAFE -D_REENTRANT -DNOODBC -DWITH_STD_MALLOC -DFD_SETSIZE=4096 -DWITH_POLL -DWITH_NETFILTER\nCOUT = -o \nLN = $(CC)\nDCFLAGS = \nLDFLAGS = -fPIC -O2 -fno-strict-aliasing -pthread\nDLFLAGS = -shared\nDLSUFFICS = .ld.so\n# -lpthreads may be reuqired on some platforms instead of -pthreads\nLIBSPREFIX = -l\nLIBSSUFFIX = \nLNOUT = -o \nEXESUFFICS =\nOBJSUFFICS = .o\nDEFINEOPTION = -D\nCOMPFILES = *~\nREMOVECOMMAND = rm -f\nAFTERCLEAN = (find . -type f -name \"*.o\" -delete && find src/ -type f -name \"Makefile.var\" -delete && find bin/ -type f -executable -delete) || true\nTYPECOMMAND = cat\nCOMPATLIBS =\nMAKEFILE = Makefile.Linux\n# PamAuth requires libpam, you may require pam-devel package to be installed\n# SSLPlugin requires  -lcrypto -lssl\n#LIBS = -lcrypto -lssl -ldl \nLIBS = -ldl \n#PLUGINS = SSLPlugin StringsPlugin TrafficPlugin PCREPlugin TransparentPlugin PamAuth\nPLUGINS = StringsPlugin TrafficPlugin PCREPlugin TransparentPlugin\n\ninclude Makefile.inc\n\nallplugins:\n\t@list='$(PLUGINS)'; for p in $$list; do cp Makefile Makefile.var plugins/$$p; cd plugins/$$p ; make ;\tcd ../.. ; done\n\nDESTDIR\t\t=\nprefix\t\t= \nexec_prefix\t= $(prefix)\nman_prefix\t= /usr/share\nchroot_prefix\t= /usr/local\n\nINSTALL\t\t= /usr/bin/install\nINSTALL_BIN\t= $(INSTALL) -m 755\nINSTALL_DATA\t= $(INSTALL) -m 644\nINSTALL_OBJS\t= bin/3proxy \\\n\t\t  bin/ftppr \\\n\t\t  bin/mycrypt \\\n\t\t  bin/pop3p \\\n\t\t  bin/proxy \\\n\t\t  bin/socks \\\n\t\t  bin/tcppm \\\n\t\t  bin/udppm\n\t\t  \n\nINSTALL_CFG\t = scripts/3proxy.cfg.chroot\nINSTALL_CFG_OBJS = scripts/3proxy.cfg \\\n\t\t   scripts/add3proxyuser.sh\n\nINSTALL_CFG_OBJS2 = counters bandlimiters\n\nINSTALL_INITD_SCRIPT = scripts/init.d/3proxy.sh\nINSTALL_SYSTEMD_SCRIPT = scripts/3proxy.service\n\nCHROOTDIR\t= $(DESTDIR)$(chroot_prefix)/3proxy\nCHROOTREL\t= ../..$(chroot_prefix)/3proxy\nMANDIR1\t\t= $(DESTDIR)$(man_prefix)/man/man1\nMANDIR3\t\t= $(DESTDIR)$(man_prefix)/man/man3\nMANDIR8\t\t= $(DESTDIR)$(man_prefix)/man/man8\nBINDIR\t\t= $(DESTDIR)$(exec_prefix)/bin\nETCDIR\t\t= $(DESTDIR)/etc/3proxy\nINITDDIR\t= $(DESTDIR)/etc/init.d\nRUNBASE\t\t= $(DESTDIR)/var/run\nRUNDIR\t\t= $(RUNBASE)/3proxy\nLOGBASE\t\t= $(DESTDIR)/var/log\nLOGDIR\t\t= $(LOGBASE)/3proxy\nINSTALL_CFG_DEST = $(ETCDIR)/conf\nSYSTEMDDIR\t= $(DESTDIR)/usr/lib/systemd/system/\n\ninstall-bin:\n\t$(INSTALL_BIN) -d $(BINDIR)\n\t$(INSTALL_BIN) -s $(INSTALL_OBJS) $(BINDIR)\n\t$(INSTALL_BIN) -s bin/*.ld.so $(CHROOTDIR)/libexec\n\tchmod -R a-w $(CHROOTDIR)/libexec\n\ninstall-etc-dir:\n\t$(INSTALL_BIN) -d $(ETCDIR)\n\ninstall-chroot-dir:\n\t$(INSTALL_BIN) -d $(CHROOTDIR)\n\t$(INSTALL_BIN) -d $(CHROOTDIR)/conf\n\t$(INSTALL_BIN) -d $(CHROOTDIR)/logs\n\t$(INSTALL_BIN) -d $(CHROOTDIR)/count\n\t$(INSTALL_BIN) -d $(CHROOTDIR)/libexec\n\tchmod -R o-rwx $(CHROOTDIR)\n\ninstall-etc-default-config:\n\tif [ ! -d $(INSTALL_CFG_DEST) ]; then \\\n\t   ln -s $(CHROOTREL)/conf $(INSTALL_CFG_DEST); \\\n\t   $(INSTALL_BIN) $(INSTALL_CFG) $(ETCDIR)/3proxy.cfg; \\\n\t   $(INSTALL_BIN) $(INSTALL_CFG_OBJS) $(INSTALL_CFG_DEST); \\\n\tfi\n\ninstall-etc: install-etc-dir install-etc-default-config\n\tfor file in $(INSTALL_CFG_OBJS2); \\\n\tdo \\\n\t  touch $(INSTALL_CFG_DEST)/$$file; chmod 0600 $(INSTALL_CFG_DEST)/$$file; \\\n\tdone;\n\ninstall-man:\n\t$(INSTALL_BIN) -d $(MANDIR3)\n\t$(INSTALL_BIN) -d $(MANDIR8)\n\t$(INSTALL_DATA) man/*.3 $(MANDIR3)\n\t$(INSTALL_DATA) man/*.8 $(MANDIR8)\n\ninstall-init:\n\t$(INSTALL_BIN) -d $(INITDDIR)\n\t$(INSTALL_BIN) $(INSTALL_INITD_SCRIPT) $(INITDDIR)/3proxy\n\t$(INSTALL_BIN) -d $(SYSTEMDDIR)\n\t$(INSTALL_DATA) $(INSTALL_SYSTEMD_SCRIPT) $(SYSTEMDDIR)\n\ninstall-run:\n\t$(INSTALL_BIN) -d $(RUNDIR)\n\ninstall-log:\n\t$(INSTALL_BIN) -d $(LOGBASE)\n\t@if [ ! -d $(LOGDIR) ]; then \\\n\t ln -s $(CHROOTREL)/logs $(LOGDIR);\\\n\tfi\n\ninstall: install-chroot-dir install-bin install-etc install-log install-man install-run install-init\n\t@if [ \"$(DESTDIR)\" = \"\" ]; then \\\n\t sh scripts/debian/preinst; \\\n\t sh scripts/debian/postinst; \\\n\tfi\n"
        },
        {
          "name": "Makefile.Solaris",
          "type": "blob",
          "size": 1.1123046875,
          "content": "#\n# 3 proxy Makefile for Solaris/SunCC\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# remove -DNOODBC from CFLAGS and add -lodbc to LDFLAGS to compile with ODBC\n# library support. Add -DSAFESQL for poorely written ODBC library / drivers.\n\nBUILDDIR = ../bin/\nCC = cc\nCFLAGS = -xO3 -c -D_SOLARIS -D_THREAD_SAFE -DGETHOSTBYNAME_R -D_REENTRANT -DNOODBC -DWITH_STD_MALLOC -DFD_SETSIZE=4096 -DWITH_POLL\nCOUT = -o ./\nLN = $(CC)\nLDFLAGS = -xO3\nDCFLAGS = -fPIC\nDLFLAGS = -shared\nDLSUFFICS = .ld.so\nLIBS = -lpthread -lsocket -lnsl -lresolv -ldl\nLIBSPREFIX = -l\nLIBSSUFFIX = \nLNOUT = -o ./\nEXESUFFICS =\nOBJSUFFICS = .o\nDEFINEOPTION = -D\nCOMPFILES = *~\nREMOVECOMMAND = rm -f\nAFTERCLEAN = (find . -type f -name \"*.o\" -delete && find src/ -type f -name \"Makefile.var\" -delete && find bin/ -type f -executable -delete) || true\nTYPECOMMAND = cat\nCOMPATLIBS =\nMAKEFILE = Makefile.Solaris\nPLUGINS = StringsPlugin TrafficPlugin PCREPlugin TransparentPlugin\n\ninclude Makefile.inc\n\nallplugins:\n\t@list='$(PLUGINS)'; for p in $$list; do cp Makefile Makefile.var plugins/$$p; cd plugins/$$p ; make ;\tcd ../.. ; done\n"
        },
        {
          "name": "Makefile.Solaris-gcc",
          "type": "blob",
          "size": 1.1171875,
          "content": "#\n# 3 proxy Makefile for Solaris/gcc\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# remove -DNOODBC from CFLAGS and add -lodbc to LDFLAGS to compile with ODBC\n# library support. Add -DSAFESQL for poorely written ODBC library / drivers.\n\n\nBUILDDIR = ../bin/\nCC = gcc\nCFLAGS = -O2 -fno-strict-aliasing -c -D_SOLARIS -D_THREAD_SAFE -DGETHOSTBYNAME_R -D_REENTRANT -DNOODBC -DWITH_STD_MALLOC -DFD_SETSIZE=4096 -DWITH_POLL\nCOUT = -o ./\nLN = $(CC)\nLDFLAGS = -O3\nDCFLAGS = -fPIC\nDLFLAGS = -shared\nDLSUFFICS = .ld.so\nLIBS = -lpthread -lsocket -lnsl -lresolv -ldl\nLIBSPREFIX = -l\nLIBSSUFFIX = \nLNOUT = -o ./\nEXESUFFICS =\nOBJSUFFICS = .o\nDEFINEOPTION = -D\nCOMPFILES = *~\nREMOVECOMMAND = rm -f\nAFTERCLEAN = (find . -type f -name \"*.o\" -delete && find src/ -type f -name \"Makefile.var\" -delete && find bin/ -type f -executable -delete) || true\nTYPECOMMAND = cat\nCOMPATLIBS =\nMAKEFILE = Makefile.Solaris-gcc\nPLUGINS = StringsPlugin TrafficPlugin PCREPlugin\n\ninclude Makefile.inc\n\nallplugins:\n\t@list='$(PLUGINS)'; for p in $$list; do cp Makefile Makefile.var plugins/$$p; cd plugins/$$p ; make ;\tcd ../.. ; done\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 0.0380859375,
          "content": "SUBDIRS = src man\nEXTRA_DIST = doc cfg\n"
        },
        {
          "name": "Makefile.debug",
          "type": "blob",
          "size": 0.6884765625,
          "content": "#\n# 3 proxy Makefile for Microsoft Visual C compiler (for both make and nmake)\n#\n# You can try to add /D \"WITH_STD_MALLOC\" to CFLAGS to use standard malloc\n# libraries\n\nBUILDDIR = ../bin/\nCC = cl\nCFLAGS = /FD /MDd /nologo /W3 /ZI /Wp64 /GS /Gs /RTCsu /EHs- /GA /GF /DEBUG /D \"WITH_STD_MALLOC\" /D \"_DEBUG\" /D \"WIN32\" /D \"_CONSOLE\" /D \"_MBCS\" /D \"_WIN32\"  /c\nCOUT = /Fo\nLN = link\nLDFLAGS = /nologo /subsystem:console /machine:I386 /DEBUG\nLIBS = ws2_32.lib advapi32.lib odbc32.lib user32.lib\nLNOUT = /out:\nEXESUFFICS = .exe\nOBJSUFFICS = .obj\nDEFINEOPTION = /D \nCOMPFILES = *.pch *.idb\nREMOVECOMMAND = del 2>NUL >NUL\nTYPECOMMAND = type\nCOMPATLIBS =\nMAKEFILE = Makefile.debug\n\ninclude Makefile.inc\n\nallplugins:"
        },
        {
          "name": "Makefile.inc",
          "type": "blob",
          "size": 0.1923828125,
          "content": "#\n# 3 proxy common Makefile\n#\n\nall:\n\t@$(TYPECOMMAND) $(MAKEFILE) > src/Makefile.var\n\t@cd src && $(MAKE)\n\nclean:\n\t@cd src && $(REMOVECOMMAND) *$(OBJSUFFICS) $(COMPFILES) && cd ..\n\t@$(AFTERCLEAN)\n\t\n\n"
        },
        {
          "name": "Makefile.intl",
          "type": "blob",
          "size": 0.97265625,
          "content": "#\n# 3 proxy Makefile for Intel C compiler for Windows (for both make and nmake)\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# Add /DSAFESQL to CFLAGS if you are using poorely written/tested ODBC driver\n\n\nBUILDDIR = ../bin/\nCC = icl\nCFLAGS = /nologo /MD /W3 /G6 /GX /O2 /D \"WITH_STD_MALLOC\" /D \"NDEBUG\" /D \"WIN32\" /D \"_CONSOLE\" /D \"_MBCS\" /D \"_WIN32\" /Fp\"proxy.pch\" /YX /FD /c\nCOUT = /Fo\nLN = xilink\nLDFLAGS = /nologo /subsystem:console /incremental:no /machine:I386\nLIBS = ws2_32.lib advapi32.lib odbc32.lib user32.lib\nDLFLAGS = /DLL\nDLSUFFICS = .dll\nLNOUT = /out:\nEXESUFFICS = .exe\nOBJSUFFICS = .obj\nDEFINEOPTION = /D \nCOMPFILES = *.pch *.idb\nREMOVECOMMAND = del 2>NUL\nTYPECOMMAND = type\nCOMPATLIBS =\nMAKEFILE = Makefile.intl\nPLUGINS = WindowsAuthentication TrafficPlugin PCREPlugin\n\ninclude Makefile.inc\n\nallplugins:\n\tfor /D %%i in ($(PLUGINS)) do (copy Makefile Makefile.var plugins\\%%i && cd plugins\\%%i && nmake && del *.obj *.idb &&cd ..\\..)\n"
        },
        {
          "name": "Makefile.llvm",
          "type": "blob",
          "size": 1.0419921875,
          "content": "#\n# 3 proxy Makefile for GCC/windows\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# remove -DNOODBC from CFLAGS and add -lodbc to LDFLAGS to compile with ODBC\n# library support\n\n\nBUILDDIR = ../bin/\nCC = clang\nCFLAGS = -O2 -fno-strict-aliasing -c -pthread -static -DWITH_STD_MALLOC -DNOIPV6\nCOUT = -o \nLN = $(CC)\nLDFLAGS = -O2 -fno-strict-aliasing -static -s\nDLFLAGS = -shared\nDLSUFFICS = .dll\nLIBS = -lws2_32 -lodbc32 -ladvapi32\nLIBSPREFIX = -l\nLIBSSUFFIX = \nLNOUT = -o \nEXESUFFICS = .exe\nOBJSUFFICS = .o\nDEFINEOPTION = -D\nCOMPFILES = *.tmp\nREMOVECOMMAND = rm -f\nAFTERCLEAN = find src/ -type f -name \"*.o\" -delete && find src/ -type f -name \"Makefile.var\" -delete && find bin/ -type f -executable -delete\nTYPECOMMAND = cat\nCOMPATLIBS =\nMAKEFILE = Makefile.win\nPLUGINS = utf8tocp1251 WindowsAuthentication TrafficPlugin StringsPlugin PCREPlugin\n\ninclude Makefile.inc\n\nallplugins:\n\tfor /D %%i in ($(PLUGINS)) do (copy Makefile plugins\\%%i && copy Makefile.var plugins\\%%i && cd plugins\\%%i && nmake && del *.o &&cd ..\\..)\n"
        },
        {
          "name": "Makefile.msvc",
          "type": "blob",
          "size": 1.6015625,
          "content": "#\n# 3 proxy Makefile for Microsoft Visual C compiler (for both make and nmake)\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# Add /DSAFESQL to CFLAGS if you are using poorely written/tested ODBC driver\n\nBUILDDIR = ../bin/\nCC = cl\nCFLAGS = /nologo /MT /W3 /Ox /GS /EHs- /GA /GF /D \"MSVC\" /D \"WITH_STD_MALLOC\" /D \"WITH_WSAPOLL\" /D \"NDEBUG\" /D \"WIN32\" /D \"WITH_SSL\" /D \"_CONSOLE\" /D \"_MBCS\" /D \"_WIN32\" /D \"PRINTF_INT64_MODIFIER=\\\"I64\\\"\" /Fp\"proxy.pch\" /FD /c $(VERSION) $(BUILDDATE)\nCOUT = /Fo\nLN = link\nLDFLAGS =  /nologo /subsystem:console /incremental:no /machine:I386\nDLFLAGS = /DLL\nDLSUFFICS = .dll\nLIBS = ws2_32.lib advapi32.lib odbc32.lib user32.lib kernel32.lib Gdi32.lib Crypt32.lib libcrypto64MT.lib libssl64MT.lib\nLIBSOLD = libeay32MT.lib ssleay32MT.lib\nLIBSPREFIX = \nLIBSSUFFIX = .lib\nLIBEXT = .lib                                                                                               \nLNOUT = /out:\nEXESUFFICS = .exe\nOBJSUFFICS = .obj\nDEFINEOPTION = /D \nCOMPFILES = *.pch *.idb\nREMOVECOMMAND = del\nTYPECOMMAND = type\nCOMPATLIBS =\nMAKEFILE = Makefile.msvc\nPLUGINS = utf8tocp1251 WindowsAuthentication TrafficPlugin StringsPlugin PCREPlugin FilePlugin SSLPlugin\nVERFILE = 3proxy.res $(VERFILE)\nVERSION = $(VERSION)\nVERSIONDEP = 3proxy.res $(VERSIONDEP)\nBUILDDATE = $(BUILDDATE)\nAFTERCLEAN = if exist src\\*.res (del src\\*.res) && if exist src\\*.err (del src\\*.err)\n\ninclude Makefile.inc\n\n3proxy.res:\n\trc 3proxy.rc\n\nallplugins:\n\tfor /D %%i in ($(PLUGINS)) do (copy Makefile plugins\\%%i && copy Makefile.var plugins\\%%i && cd plugins\\%%i && nmake && del *.obj *.idb &&cd ..\\..)\n\t"
        },
        {
          "name": "Makefile.msvc64",
          "type": "blob",
          "size": 1.4716796875,
          "content": "#\n# 3 proxy Makefile for Microsoft Visual C compiler (for both make and nmake)\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# Add /DSAFESQL to CFLAGS if you are using poorely written/tested ODBC driver\n\nBUILDDIR = ../bin64/\nCC = cl\nCFLAGS = /nologo /MT /W3 /Ox /EHs- /GS /GA /GF /D \"MSVC\" /D \"WITH_STD_MALLOC\" /D \"WITH_SSL\" /D \"WITH_WSAPOLL\" /D \"NDEBUG\" /D \"WIN32\" /D \"_CONSOLE\" /D \"_MBCS\" /D \"_WIN32\" /D \"PRINTF_INT64_MODIFIER=\\\"I64\\\"\" /Fp\"proxy.pch\" /FD /c $(VERSION) $(BUILDDATE)\nCOUT = /Fo\nLN = link\nLDFLAGS = /nologo /subsystem:console /incremental:no /machine:x64\nDLFLAGS = /DLL\nDLSUFFICS = .dll\nLIBS = ws2_32.lib advapi32.lib odbc32.lib user32.lib kernel32.lib Gdi32.lib Crypt32.lib libcrypto64MT.lib libssl64MT.lib\nLIBSOLD = libeay32.lib ssleay32.lib\nLIBSPREFIX = \nLIBSSUFFIX = .lib\nLIBEXT = .lib\nLNOUT = /out:\nEXESUFFICS = .exe\nOBJSUFFICS = .obj\nDEFINEOPTION = /D \nCOMPFILES = *.pch *.idb\nREMOVECOMMAND = del 2>NUL >NUL\nTYPECOMMAND = type\nCOMPATLIBS =\nVERFILE = 3proxy.res $(VERFILE)\nVERSIONDEP = 3proxy.res $(VERSIONDEP)\nPLUGINS = utf8tocp1251 WindowsAuthentication TrafficPlugin StringsPlugin PCREPlugin FilePlugin SSLPlugin\nAFTERCLEAN = del src\\*.res\n\ninclude Makefile.inc\n\n3proxy.res:\n\trc 3proxy.rc\n\n3proxyres.obj: ../3proxy.res\n\tcvtres /out:3proxyres.obj /machine:x64 ../3proxy.res\n\n\nallplugins:\n\tfor /D %%i in ($(PLUGINS)) do (copy Makefile plugins\\%%i && copy Makefile.var plugins\\%%i && cd plugins\\%%i && nmake && del *.obj *.idb &&cd ..\\..)\n\n"
        },
        {
          "name": "Makefile.msvcARM64",
          "type": "blob",
          "size": 1.47265625,
          "content": "#\n# 3 proxy Makefile for Microsoft Visual C compiler (for both make and nmake)\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# Add /DSAFESQL to CFLAGS if you are using poorely written/tested ODBC driver\n\nBUILDDIR = ../bin64/\nCC = cl\nCFLAGS = /nologo /MT /W3 /Ox /EHs- /GS /GA /GF /D \"MSVC\" /D \"WITH_STD_MALLOC\" /D \"WITH_WSAPOLL\" /D \"WITH_SSL\" /D \"NDEBUG\" /D \"WIN32\" /D \"_CONSOLE\" /D \"_MBCS\" /D \"_WIN32\" /D \"PRINTF_INT64_MODIFIER=\\\"I64\\\"\" /Fp\"proxy.pch\" /FD /c $(VERSION) $(BUILDDATE)\nCOUT = /Fo\nLN = link\nLDFLAGS = /nologo /subsystem:console /incremental:no /machine:arm64\nDLFLAGS = /DLL\nDLSUFFICS = .dll\nLIBS = ws2_32.lib advapi32.lib odbc32.lib user32.lib kernel32.lib Gdi32.lib libcrypto_static.lib libssl_static.lib\nLIBSOLD =\nLIBSPREFIX = \nLIBSSUFFIX = .lib\nLIBEXT = .lib\nLNOUT = /out:\nEXESUFFICS = .exe\nOBJSUFFICS = .obj\nDEFINEOPTION = /D \nCOMPFILES = *.pch *.idb\nREMOVECOMMAND = del 2>NUL >NUL\nTYPECOMMAND = type\nCOMPATLIBS =\nMAKEFILE = Makefile.msvcARM64\nPLUGINS = utf8tocp1251 WindowsAuthentication TrafficPlugin StringsPlugin PCREPlugin FilePlugin SSLPlugin\nVERFILE = 3proxy.res $(VERFILE)\nVERSIONDEP = 3proxy.res $(VERSIONDEP)\nAFTERCLEAN = del src\\*.res\n\n\ninclude Makefile.inc\n\n3proxy.res:\n\trc 3proxy.rc\n\n3proxyres.obj: ../3proxy.res\n\tcvtres /out:3proxyres.obj /machine:x64 ../3proxy.res\n\n\nallplugins:\n\tfor /D %%i in ($(PLUGINS)) do (copy Makefile plugins\\%%i && copy Makefile.var plugins\\%%i && cd plugins\\%%i && nmake && del *.obj *.idb &&cd ..\\..)\n\n"
        },
        {
          "name": "Makefile.msvcCE",
          "type": "blob",
          "size": 1.0927734375,
          "content": "#\n# 3 proxy Makefile for Microsoft Visual C compiler (for both make and nmake)\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# Add /DSAFESQL to CFLAGS if you are using poorely written/tested ODBC driver\n\nBUILDDIR = ../bin/\nCC = cl\nCFLAGS = /DARM /D \"NOODBC\" /nologo /MT /W3 /Wp64 /Ox /GS /EHs- /GA /GF /D \"MSVC\" /D \"_WINCE\" /D \"WITH_STD_MALLOC\" /D \"NDEBUG\" /D \"WIN32\" /D \"_CONSOLE\" /D \"_MBCS\" /D \"_WIN32\" /D \"PRINTF_INT64_MODIFIER=\\\"I64\\\"\" /Fp\"proxy.pch\" /FD /c\nCOUT = /Fo\nLN = link\nLDFLAGS = /nologo /subsystem:console /incremental:no\nDLFLAGS = /DLL\nDLSUFFICS = .dll\nLIBS = ws2_32.lib advapi32.lib odbc32.lib user32.lib\nLIBEXT = .lib\nLNOUT = /out:\nEXESUFFICS = .exe\nOBJSUFFICS = .obj\nDEFINEOPTION = /D \nCOMPFILES = *.pch *.idb\nREMOVECOMMAND = del 2>NUL >NUL\nTYPECOMMAND = type\nCOMPATLIBS =\nMAKEFILE = Makefile.msvc\nPLUGINS = WindowsAuthentication TrafficPlugin StringsPlugin PCREPlugin\n\n\ninclude Makefile.inc\n\nallplugins:\n\tfor /D %%i in ($(PLUGINS)) do (copy Makefile plugins\\%%i && copy Makefile.var plugins\\%%i && cd plugins\\%%i && nmake && del *.obj *.idb &&cd ..\\..)\n\t"
        },
        {
          "name": "Makefile.openwrt-mips",
          "type": "blob",
          "size": 2.751953125,
          "content": "#\n# 3 proxy Makefile for GCC/Linux/Cygwin\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# remove -DNOODBC from CFLAGS and add -lodbc to LIBS to compile with ODBC\n# library support. Add -DSAFESQL for poorely written ODBC library / drivers.\n\nBUILDDIR = ../bin/\nCC = mips-openwrt-linux-gcc\n\nCFLAGS = -g -O2 -fno-strict-aliasing -c -pthread -DGETHOSTBYNAME_R -D_THREAD_SAFE -D_REENTRANT -DNOODBC -DWITH_STD_MALLOC -DFD_SETSIZE=4096 -DWITH_POLL -DWITH_NETFILTER\nCOUT = -o \nLN = $(CC)\nDCFLAGS = -fPIC\nLDFLAGS = -O2 -fno-strict-aliasing -pthread -s\nDLFLAGS = -shared\nDLSUFFICS = .ld.so\n# -lpthreads may be reuqired on some platforms instead of -pthreads\nLIBSPREFIX = -l\nLIBSSUFFIX = \nLNOUT = -o \nEXESUFFICS =\nOBJSUFFICS = .o\nDEFINEOPTION = -D\nCOMPFILES = *~\nREMOVECOMMAND = rm -f\nAFTERCLEAN = (find . -type f -name \"*.o\" -delete && find src/ -type f -name \"Makefile.var\" -delete && find bin/ -type f -executable -delete) || true\nTYPECOMMAND = cat\nCOMPATLIBS =\nMAKEFILE = Makefile.openwrt-mips\n# PamAuth requires libpam, you may require pam-devel package to be installed\n# SSLPlugin requires  -lcrypto -lssl\n#LIBS = -lcrypto -lssl -ldl \nLIBS = -ldl \n#PLUGINS = SSLPlugin StringsPlugin TrafficPlugin PCREPlugin TransparentPlugin PamAuth\nPLUGINS = StringsPlugin TrafficPlugin PCREPlugin TransparentPlugin\n\ninclude Makefile.inc\n\nallplugins:\n\t@list='$(PLUGINS)'; for p in $$list; do cp Makefile Makefile.var plugins/$$p; cd plugins/$$p ; make ;\tcd ../.. ; done\n\nDESTDIR\t\t=\nprefix\t\t= /usr/local\nexec_prefix\t= $(prefix)\nman_prefix\t= $(prefix)/share\n\nINSTALL\t\t= /usr/bin/install\nINSTALL_BIN\t= $(INSTALL) -m 755\nINSTALL_DATA\t= $(INSTALL) -m 644\nINSTALL_OBJS\t= src/3proxy \\\n\t\t  src/ftppr \\\n\t\t  src/mycrypt \\\n\t\t  src/pop3p \\\n\t\t  src/proxy \\\n\t\t  src/socks \\\n\t\t  src/tcppm \\\n\t\t  src/udppm\n\t\t  \n\nINSTALL_CFG_OBJS = scripts/3proxy.cfg \\\n\t\t   scripts/add3proxyuser.sh\nINSTALL_CFG_DEST = config\n\nINSTALL_CFG_OBJS2 = passwd counters bandlimiters\n\nMANDIR1\t\t= $(DESTDIR)$(man_prefix)/man/man1\nMANDIR3\t\t= $(DESTDIR)$(man_prefix)/man/man3\nMANDIR8\t\t= $(DESTDIR)$(man_prefix)/man/man8\nBINDIR\t\t= $(DESTDIR)$(exec_prefix)/bin\nETCDIR\t\t= $(DESTDIR)$(prefix)/etc/3proxy\n\ninstall-bin:\n\t$(INSTALL_BIN) -d $(BINDIR)\n\t$(INSTALL_BIN) -s $(INSTALL_OBJS) $(BINDIR)\n\ninstall-etc-dir:\n\t$(INSTALL_BIN) -d $(ETCDIR)\n\ninstall-etc-default-config:\n\tif [ -f $(ETCDIR)/$(INSTALL_CFG_DEST) ]; then \\\n\t   : ; \\\n\telse \\\n\t   $(INSTALL_DATA) $(INSTALL_CFG_OBJS) $(ETCDIR)/$(INSTALL_CFG_DEST) \\\n\tfi\n\ninstall-etc: install-etc-dir\n\tfor file in $(INSTALL_CFG_OBJS2); \\\n\tdo \\\n\t  touch $(ETCDIR)/$$file; chmod 0600 $(ETCDIR)/$$file; \\\n\tdone;\n\ninstall-man:\n\t$(INSTALL_BIN) -d $(MANDIR3)\n\t$(INSTALL_BIN) -d $(MANDIR8)\n\t$(INSTALL_DATA) man/*.3 $(MANDIR3)\n\t$(INSTALL_DATA) man/*.8 $(MANDIR8)\n\ninstall: install-bin install-etc install-man\n\n"
        },
        {
          "name": "Makefile.unix",
          "type": "blob",
          "size": 2.00390625,
          "content": "#\n# 3 proxy Makefile for GCC/Unix\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# remove -DNOODBC from CFLAGS and add -lodbc to LDFLAGS to compile with ODBC\n# library support. Add -DSAFESQL for poorely written ODBC library / drivers.\n\nBUILDDIR = ../bin/\nCC = gcc\n\n# you may need -L/usr/pkg/lib for older NetBSD versions\nCFLAGS = -g -O2 -fno-strict-aliasing -c -pthread -D_THREAD_SAFE -D_REENTRANT -DNOODBC -DWITH_STD_MALLOC -DFD_SETSIZE=4096 -DWITH_POLL\nCOUT = -o \nLN = $(CC)\nLDFLAGS = -O2 -fno-strict-aliasing -pthread\n# -lpthreads may be reuqired on some platforms instead of -pthreads\n# -ldl or -lld may be required for some platforms\nDCFLAGS = -fPIC\nDLFLAGS = -shared\nDLSUFFICS = .ld.so\nLIBS =\nLIBSPREFIX = -l\nLIBSSUFFIX = \nLNOUT = -o \nEXESUFFICS =\nOBJSUFFICS = .o\nDEFINEOPTION = -D\nCOMPFILES = *~\nREMOVECOMMAND = rm -f\nAFTERCLEAN = (find . -type f -name \"*.o\" -delete && find src/ -type f -name \"Makefile.var\" -delete && find bin/ -type f -executable -delete) || true\nTYPECOMMAND = cat\nCOMPATLIBS =\nMAKEFILE = Makefile.unix\nPLUGINS = StringsPlugin TrafficPlugin PCREPlugin PamAuth TransparentPlugin\n\ninclude Makefile.inc\n\ninstall: all\n\tif [ ! -d /usr/local/etc/3proxy/bin ]; then mkdir -p /usr/local/etc/3proxy/bin/; fi\n\tinstall bin/3proxy /usr/local/etc/3proxy/bin/3proxy\n\tinstall bin/mycrypt /usr/local/etc/3proxy/bin/mycrypt\n\tinstall scripts/rc.d/proxy.sh /usr/local/etc/rc.d/proxy.sh\n\tinstall scripts/add3proxyuser.sh /usr/local/etc/3proxy/bin/\n\tif [ -s /usr/local/etc/3proxy/3proxy.cfg ]; then\n\techo /usr/local/etc/3proxy/3proxy.cfg already exists\n\telse\n\tinstall scripts/3proxy.cfg /usr/local/etc/3proxy/\n\tif [ ! -d /var/log/3proxy/ ]; then\n\tmkdir /var/log/3proxy/\n\tfi\n\ttouch /usr/local/etc/3proxy/passwd\n\ttouch /usr/local/etc/3proxy/counters\n\ttouch /usr/local/etc/3proxy/bandlimiters\n\techo Run /usr/local/etc/3proxy/bin/add3proxyuser.sh to add \\'admin\\' user\n\tfi\n\nallplugins:\n\t@list='$(PLUGINS)'; for p in $$list; do cp Makefile Makefile.var plugins/$$p; cd plugins/$$p ; make ;\tcd ../.. ; done\n"
        },
        {
          "name": "Makefile.unix-install",
          "type": "blob",
          "size": 1.349609375,
          "content": "DESTDIR\t\t=\nprefix\t\t= /usr/local\nexec_prefix\t= $(prefix)\nman_prefix\t= $(prefix)/share\n\nINSTALL\t\t= /usr/bin/install\nINSTALL_BIN\t= $(INSTALL) -m 755\nINSTALL_DATA\t= $(INSTALL) -m 644\nINSTALL_OBJS\t= bin/3proxy \\\n\t\t  bin/ftppr \\\n\t\t  bin/mycrypt \\\n\t\t  bin/pop3p \\\n\t\t  bin/proxy \\\n\t\t  bin/socks \\\n\t\t  bin/tcppm \\\n\t\t  bin/udppm \\\n\t\t  scripts/add3proxyuser.sh\n\nINSTALL_CFG_OBJS = scripts/3proxy.cfg\nINSTALL_CFG_DEST = config\n\nINSTALL_CFG_OBJS2 = passwd counters bandlimiters\n\nMANDIR1\t\t= $(DESTDIR)$(man_prefix)/man/man1\nMANDIR3\t\t= $(DESTDIR)$(man_prefix)/man/man3\nMANDIR8\t\t= $(DESTDIR)$(man_prefix)/man/man8\nBINDIR\t\t= $(DESTDIR)$(exec_prefix)/bin\nETCDIR\t\t= $(DESTDIR)$(prefix)/etc/3proxy\n\ninstall-bin:\n\t$(INSTALL_BIN) -d $(BINDIR)\n\t$(INSTALL_BIN) -s $(INSTALL_OBJS) $(BINDIR)\n\ninstall-etc-dir:\n\t$(INSTALL_BIN) -d $(ETCDIR)\n\ninstall-etc-default-config:\n\tif [ -f $(ETCDIR)/$(INSTALL_CFG_DEST) ]; then \\\n\t   : ; \\\n\telse \\\n\t   $(INSTALL_DATA) $(INSTALL_CFG_OBJS) $(ETCDIR)/$(INSTALL_CFG_DEST) \\\n\tfi\n\ninstall-etc: install-etc-dir\n\tfor file in $(INSTALL_CFG_OBJS2); \\\n\tdo \\\n\t  touch $(ETCDIR)/$$file; chmod 0600 $(ETCDIR)/$$file; \\\n\tdone;\n\ninstall-man:\n\t$(INSTALL_BIN) -d $(MANDIR1)\n\t$(INSTALL_BIN) -d $(MANDIR3)\n\t$(INSTALL_BIN) -d $(MANDIR8)\n\t$(INSTALL_DATA) man/*.1 $(MANDIR1)\n\t$(INSTALL_DATA) man/*.3 $(MANDIR3)\n\t$(INSTALL_DATA) man/*.8 $(MANDIR8)\n\ninstall: install-bin install-etc install-man\n\n"
        },
        {
          "name": "Makefile.watcom",
          "type": "blob",
          "size": 1.9091796875,
          "content": "#\n# 3 proxy Makefile for Open Watcom 2\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# Add /DSAFESQL to CFLAGS if you are using poorely written/tested ODBC driver\n\nBUILDDIR = ../bin/\nCC = cl\nCFLAGS = /nologo /Ox /MT /D \"NOIPV6\" /D \"NODEBUG\" /D \"NOODBC\" /D \"NORADIUS\" /D\"WATCOM\" /D \"MSVC\" /D \"WITH_STD_MALLOC\" /D \"WIN32\" /D \"_CONSOLE\" /D \"_MBCS\" /D \"_WIN32\" /D \"PRINTF_INT64_MODIFIER=\\\"I64\\\"\" /c $(VERSION) $(BUILDDATE)\nCOUT = /Fo\nLN = link\nLDFLAGS = /nologo /subsystem:console /incremental:no \nDLFLAGS = /DLL\nDLSUFFICS = .dll\nLIBS = ws2_32.lib advapi32.lib user32.lib kernel32.lib\nLIBSOLD = libeay32MT.lib ssleay32MT.lib\nLIBSPREFIX = \nLIBSSUFFIX = .lib\nLIBEXT = .lib                                                                                               \nLNOUT = /out:\nEXESUFFICS = .exe\nOBJSUFFICS = .obj\nDEFINEOPTION = /D \nCOMPFILES = *.pch *.idb *.err\nREMOVECOMMAND = del 2>NUL >NUL\nTYPECOMMAND = type\nCOMPATLIBS =\nMAKEFILE = Makefile.watcom\nPLUGINS = utf8tocp1251 WindowsAuthentication TrafficPlugin StringsPlugin PCREPlugin\nVERFILE = $(VERFILE)\nVERSION = $(VERSION)\nVERSIONDEP = 3proxy.res $(VERSIONDEP)\nBUILDDATE = $(BUILDDATE)\n\ninclude Makefile.inc\n\n3proxy.res:\n\trc 3proxy.rc\n\nallplugins:\n\tcopy Makefile plugins\\utf8tocp1251\n\tcopy Makefile.var plugins\\utf8tocp1251\n\tcd plugins\\utf8tocp1251\n\tnmake\n\tdel *.obj *.idb\n\tcd ../../\n\tcopy Makefile plugins\\WindowsAuthentication\n\tcopy Makefile.var plugins\\WindowsAuthentication\n\tcd plugins\\WindowsAuthentication\n\tnmake\n\tdel *.obj *.idb\n\tcd ../../\n\tcopy Makefile plugins\\TrafficPlugin\n\tcopy Makefile.var plugins\\TrafficPlugin\n\tcd plugins\\TrafficPlugin\n\tnmake\n\tdel *.obj *.idb\n\tcd ../../\n\tcopy Makefile plugins\\StringsPlugin\n\tcopy Makefile.var plugins\\StringsPlugin\n\tcd plugins\\StringsPlugin\n\tnmake\n\tdel *.obj *.idb\n\tcd ../../\n\tcopy Makefile plugins\\PCREPlugin\n\tcopy Makefile.var plugins\\PCREPlugin\n\tcd plugins\\PCREPlugin\n\tnmake\n\tdel *.obj *.idb\n\tcd ../../\n"
        },
        {
          "name": "Makefile.win",
          "type": "blob",
          "size": 0.85546875,
          "content": "#\n# 3 proxy Makefile for GCC/windows\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# remove -DNOODBC from CFLAGS and add -lodbc to LDFLAGS to compile with ODBC\n# library support\n\n\nBUILDDIR = ../bin/\nCC = gcc\nCFLAGS = -O2 -s -c -mthreads -DWITH_STD_MALLOC -DNOIPV6 -DNORADIUS\nCOUT = -o \nLN = gcc\nLDFLAGS = -O2 -s -mthreads\nDLFLAGS = -shared\nDLSUFFICS = .dll\nLIBS = -lws2_32 -lodbc32 -ladvapi32\nLIBSPREFIX = -l\nLIBSSUFFIX = \nLNOUT = -o \nEXESUFFICS = .exe\nOBJSUFFICS = .o\nDEFINEOPTION = -D\nCOMPFILES = *.tmp\nREMOVECOMMAND = rm -f\nTYPECOMMAND = cat\nCOMPATLIBS =\nMAKEFILE = Makefile.win\nPLUGINS = utf8tocp1251 WindowsAuthentication TrafficPlugin StringsPlugin PCREPlugin\n\ninclude Makefile.inc\n\nallplugins:\n\t@list='$(PLUGINS)'; for p in $$list; do cp Makefile Makefile.var plugins/$$p; cd plugins/$$p ; make ;  rm *.o ; cd ../.. ; done\n"
        },
        {
          "name": "Makefile.winCE",
          "type": "blob",
          "size": 0.8701171875,
          "content": "#\n# 3 proxy Makefile for GCC/windows\n#\n# You can try to remove -DWITH_STD_MALLOC to CFLAGS to use optimized malloc\n# libraries\n#\n# remove -DNOODBC from CFLAGS and add -lodbc to LDFLAGS to compile with ODBC\n# library support\n\n\nBUILDDIR = ../bin/\nCC = /opt/cegcc/arm-wince-cegcc/bin/gcc\nCFLAGS = -O2 -s -c -mthreads -DWITH_STD_MALLOC -DNOODBC -D_WINCE -D_WIN32 -DNORADIUS -D__USE_W32_SOCKETS\nCOUT = -o \nLN = /opt/cegcc/arm-wince-cegcc/bin/gcc\nLDFLAGS = -O2 -s -mthreads\nDLFLAGS = -shared\nDLSUFFICS = .dll\nLIBS = -lws2\nLNOUT = -o \nEXESUFFICS = .exe\nOBJSUFFICS = .o\nDEFINEOPTION = -D\nCOMPFILES = *.tmp\nREMOVECOMMAND = rm -f\nTYPECOMMAND = more\nCOMPATLIBS =\nMAKEFILE = Makefile.winCE\nPLUGINS = TrafficPlugin StringsPlugin PCREPlugin\n\ninclude Makefile.inc\n\nallplugins:\n\t@list='$(PLUGINS)'; for p in $$list; do cp Makefile Makefile.var plugins/$$p; cd plugins/$$p ; make ;  rm *.o ; cd ../.. ; done\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 8.1357421875,
          "content": "# 3APA3A 3proxy tiny proxy server\n(c) 2002-2021 by Vladimir '3APA3A' Dubrovin <3proxy@3proxy.org>\n\n\nBranches:\nMaster (stable) branch - 3proxy 0.9 \nDevel branch - 3proxy 10\n\n\nDownload: \n\tBinaries for released (master) versions (Windows, Linux):\n\thttps://github.com/z3APA3A/3proxy/releases\n\tBinaries for devel version (Windows, Linux):\n\thttps://3proxy.org/download/devel/\n\tDocker images:\n\thttps://hub.docker.com/repository/docker/3proxy/3proxy\nArchive of old versions: https://github.com/z3APA3A/3proxy-archive\n\n\nWindows installation:\n\n3proxy --install \n\t\n\tinstalls and starts proxy as Windows service\n\t(config file should be located in the same directory)\n\n3proxy --remove \n\n\tremoves the service (should be stopped before via\n\t'net stop 3proxy').\n\nTo build in Linux install git and build-essential packages, use\n\ngit clone https://github.com/z3apa3a/3proxy\ncd 3proxy\nln -s Makefile.Linux Makefile\nmake\nsudo make install\n\nDefault configuration (for Linux/Unix):\n3proxy uses 2 configuration files:\n/etc/3proxy/3proxy.cfg (before-chroot). This configuration file is executed before chroot and should not be modified.\n/usr/local/3proxy/conf/3proxy.cfg symlinked from /etc/3proxy/conf/3proxy.cfg (after-chroot) is a main configuration file. Modify this file, if required.\nAll paths in /usr/local/3proxy/conf/3proxy.cfg are relative to chroot directory (/usr/local/3proxy). For future versions it's planned to move\n3proxy chroot direcory to /var.\nLog files are created in /usr/local/3proxy/logs symlinked from /var/log/3proxy.\nBy default, socks is started on 0.0.0.0:1080 and proxy on 0.0.0.0:3128 with basic auth, no users are added by default.\n\nuse /etc/3proxy/conf/add3proxyuser.sh script to add users.\n\nusage: /etc/3proxy/conf/add3proxyuser.sh username password [day_limit] [bandwidth]\n        day_limit - traffic limit in MB per day\n        bandwidth - bandwith in bits per second 1048576 = 1Mbps\n\nor modify /etc/3proxy/conf/ files directly.\n\nPlease read doc/html/index.html and man pages.\n\n Features:\n  1. General\n\t+ IPv6 support for incoming and outgoing connection,\n\t  can be used as a proxy between IPv4 and IPv6 networks\n\t  in either direction.\n\t+ HTTP/1.1 Proxy with keep-alive client and server support,\n          transparent proxy support.\n\t+ HTTPS (CONNECT) proxy (compatible with HTTP/2 / SPDY)\n\t+ Anonymous and random client IP emulation for HTTP proxy mode\n\t+ FTP over HTTP support.\n\t+ DNS caching with built-in resolver\n\t+ DNS proxy\n\t+ DNS over TCP support, redirecting DNS traffic via parent\n\t  proxy\n\t+ SOCKSv4/4.5 Proxy\n\t+ SOCKSv5 Proxy\n\t+ SOCKSv5 UDP and BIND support (fully compatible with\n\t  SocksCAP/FreeCAP for UDP)\n\t+ Transparent SOCKS redirection for HTTP, POP3, FTP, SMTP\n\t+ POP3 Proxy\n\t+ FTP proxy\n\t+ TCP port mapper (port forwarding)\n\t+ UDP port mapper (port forwarding)\n\t+ SMTP proxy\n\t+ Threaded application (no child process).\n\t+ Web administration and statistics\n\t+ Plugins for functionality extension\n\t+ Native 32/64 bit application\n  2. Proxy chaining and network connections\n\t+ Can be used as a bridge between client and different proxy type\n\t  (e.g. convert incoming HTTP proxy request from client to SOCKSv5\n\t  request to parent server).\n\t+ Connect back proxy support to bypass firewalls\n\t+ Parent proxy support for any type of incoming connection\n\t+ Username/password authentication for parent proxy(s).\n\t+ HTTPS/SOCKS4/SOCKS5 and ip/port redirection parent support\n\t+ Random parent selection\n\t+ Chain building (multihop proxing)\n\t+ Load balancing between few network connections by choosing network\n\t  interface\n  3. Logging\n\t+ tuneable log format compatible with any log parser\n\t+ stdout logging\n\t+ file logging\n\t+ syslog logging (Unix)\n\t+ ODBC logging\n\t+ RADIUS accounting\n\t+ log file rotation\n\t+ automatic log file processing with external archiver (for files)\n\t+ Character filtering for log files\n\t+ different log files for different servces are supported\n  4. Access control\n\t+ ACL-driven Access control by username, source IP,\n\tdestination IP/hostname, destination port and destination action\n\t(POST, PUT, GET, etc), weekday and daytime.\n\t+ ACL-driven (user/source/destination/protocol/weekday/daytime or\n\tcombined) bandwith limitation for incoming and (!)outgoing trafic.\n\t+ ACL-driven traffic limitation per day, week or month for incoming and\n\toutgoing traffic\n\t+ Connection limitation and ratelimting\n\t+ User authentication by username / password\n\t+ RADIUS Authentication and Authorization\n\t+ User authentication by DNS hostname\n\t+ Authentication cache with possibility to limit user to single IP address\n\t+ Access control by username/password for SOCKSv5 and HTTP/HTTPS/FTP\n\t+ Cleartext or encrypted (crypt/MD5 or NT) passwords.\n\t+ Connection redirection\n\t+ Access control by requested action (CONNECT/BIND, \n\t  HTTP GET/POST/PUT/HEAD/OTHER).\n\t+ All access control entries now support weekday and time limitations\n\t+ Hostnames and * templates are supported instead of IP address\n  5. Extensions\n\t+ Regular expression filtering (with PCRE) via PCREPlugin\n\t+ Authentication with Windows username/password (cleartext only)\n\t+ SSL/TLS decryptions with certificate spoofing\n\t+ Transparent redirection support for Linux and *BSD\n  6. Configuration\n\t+ support for configuration files\n\t+ support for includes in configuration files\n\t+ interface binding\n\t+ socket options\n\t+ running as daemon process\n\t+ utility for automated networks list building\n\t+ configuration reload on any file change\n     Unix\n\t+ support for chroot\n\t+ support for setgid\n\t+ support for setuid\n\t+ support for signals (SIGUSR1 to reload configuration)\n     Windows\n\t+ support --install as service\n\t+ support --remove as service\n\t+ support for service START, STOP, PAUSE and CONTINUE commands (on\n\tPAUSE no new connection accepted, but active connections still in\n\tprogress, on CONTINUE configuration is reloaded)\n     Windows 95/98/ME\n\t+ support --install as service\n\t+ support --remove as service\n  6. Compilation\n\t+ MSVC (static)\n\t+ OpenWatcom (static)\n\t+ Intel Windows Compiler (msvcrt.dll)\n\t+ Windows/gcc (msvcrt.dll)\n\t+ Cygwin/gcc (cygwin.dll)\n\t+ Unix/gcc\n\t+ Unix/ccc\n\t+ Solaris\n\t+ Mac OS X, iPhone OS\n\t+ Linux and derivered systems\n\t+ Lite version for Windows 95/98/NT/2000/XP/2003\n\t+ 32 bit and 64 bit versions for Windows Vista and above, Windows 2008 server and above \n\n3proxy    \tCombined proxy server may be used as\n\t\texecutable or service (supports installation and removal).\n\t\tIt uses config file to read it's configuration (see\n\t\t3proxy.cfg.sample for details).\n\t\t3proxy.exe is all-in-one, it doesn't require all others .exe\n\t\tto work.\n\t\tSee 3proxy.cfg.sample for examples, see man 3proxy.cfg\n\nproxy    \tHTTP proxy server, binds to port 3128\nftppr    \tFTP proxy server, binds to port 21\nsocks    \tSOCKS 4/5 proxy server, binds to port 1080\nftppr\t\tFTP proxy server, please do not mess it with FTP over HTTP\n\t\tproxy used in browsers\npop3p    \tPOP3 proxy server, binds to port 110. You must specify\n\t\tPOP3 username as username@target.host.ip[:port]\n\t\tport is 110 by default.\n\t\tExmple: in Username configuration for you e-mail reader\n\t\tset someuser@pop.example.org, to obtains mail for someuser\n\t\tfrom pop.somehost.ru via proxy.\nsmtpp    \tSMTP proxy server, binds to port 25. You must specify\n\t\tSMTP username as username@target.host.ip[:port]\n\t\tport is 25 by default.\n\t\tExmple: in Username configuration for you e-mail reader\n\t\tset someuser@mail.example.org, to send mail as someuser\n\t\tvia mail.somehost.ru via proxy.\ntcppm    \tTCP port mapping. Maps some TCP port on local machine to\n\t\tTCP port on remote host.\nudppm    \tUDP port mapping. Maps some UDP port on local machine to\n\t\tUDP port on remote machine. Only one user simulationeously\n\t\tcan use UDP mapping, so it cann't be used for public service\n\t\tin large networks. It's OK to use it to map to DNS server\n\t\tin small network or to map Counter-Strike server for single\n\t\tclient (you can use few mappings on different ports for\n\t\tdifferent clients in last case).\nmycrypt    \tProgram to obtain crypted password fro cleartext. Supports\n\t\tboth MD5/crypt and NT password.\n\t\t\tmycrypt password\n\t\tproduces NT password\n\t\t\tmycrypt salt password\n\t\tproduces MD5/crypt password with salt \"salt\".\n\n\nRun utility with --help option for command line reference.\n\nLatest version is available from https://3proxy.org/\n\nWant to donate the project? https://3proxy.org/donations/"
        },
        {
          "name": "RELEASE",
          "type": "blob",
          "size": 0.0048828125,
          "content": "0.9.4"
        },
        {
          "name": "authors",
          "type": "blob",
          "size": 0.0595703125,
          "content": "(c) 2002-2021 by Vladimir '3APA3A' Dubrovin <vlad@3proxy.org>"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "cfg",
          "type": "tree",
          "content": null
        },
        {
          "name": "copying",
          "type": "blob",
          "size": 2.392578125,
          "content": "3proxy 0.9 Public License Agreement\n\n(c) 2000-2020 by 3APA3A (3APA3A@3proxy.ru)\n(c) 2000-2020 by 3proxy.org (https://3proxy.org/)\n(c) 2000-2020 by Vladimir Dubrovin (vlad@3proxy.org)\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThis software is FREEWARE. \n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that following conditions\nare met (BSD style license):\n\n    * Redistributions of source code must retain the above copyright notice,\n    this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n    * Neither the name of the SecurityVulns.COM nor the names of its\n    contributors may be used to endorse or promote products derived from this\n    software without specific prior written permission.\n\n\nInstead of this license, you can also use and redistribute this software under\nterms of compatible license, including:\n\n1. Apache License, Version 2.0 or (at your option) any later version\n   You may obtain a copy of the License at\n\n\thttps://www.apache.org/licenses/LICENSE-2.0\n\n2. GNU General Public License as published by\n   the Free Software Foundation; either version 2 of the License, or\n   (at your option) any later version.\n   You may obtain a copy of the License at\n\n\thttps://www.gnu.org/licenses/gpl.txt\n\n3. GNU Lesser General Public License as published by the\n   Free Software Foundation; either version 2.1 of the License, or\n   (at your option) any later version.\n   You may obtain a copy of the License at\n\n\thttps://www.gnu.org/licenses/lgpl.txt\n\n\n"
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "rus.3ps",
          "type": "blob",
          "size": 8.6396484375,
          "content": "[--admin--]\nHTTP/1.0 401 Authentication Required\\n\nWWW-Authenticate: Basic realm=\"proxy\", encoding=\"utf-8\"\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>401 Authentication Required</title></head>\\n\n<body><h2>401 Authentication Required</h2>\n<h3>Access to requested resource disallowed by administrator or you need valid username/password to use this resource<br><hr>\nДоступ запрещен администратором или Вы ввели неправильное имя/пароль.\n</h3></body></html>\\n\n[end]\nHTTP/1.0 200 OK\\n\nConnection: close\\n\nExpires: Thu, 01 Dec 1994 16:00:00 GMT\\n\nCache-Control: no-cache\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<http><head><title>%s Страница конфигурации</title></head>\\n\n<table width='100%%' border='0'>\\n\n<tr><td width='150' valign='top'>\\n\n<h2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h2>\\n\n<A HREF='/C'>Счетчики</A><br><br>\\n\n<A HREF='/R'>Перезагрузка конфигурации сервера</A><br><br>\\n\n<A HREF='/S'>Запущенные сервисы</A><br><br>\\n\n<A HREF='/F'>Настройка сервера</A>\\n\n</td><td>\n<h2>%s %s Конфигурация</h2>\n[end]\nHTTP/1.0 200 OK\\n\nConnection: close\\n\nCache-Control: no-cache\\n\nContent-type: text/xml; charset=utf-8 \\n\n\\n\n<?xml version=\"1.0\"?>\\n\n<?xml-stylesheet href=\"/SX\" type=\"text/css\"?>\\n\n<services>\\n\n<description>Текущие запущенные сервисы и подключившиеся клиенты</description>\\n\n[end]\n</services>\\n\n[end]\nHTTP/1.0 200 OK\\n\nConnection: close\\n\nCache-Control: no-cache\\n\nContent-type: text/css\\n\n\\n\nservices {\\n\n\tdisplay: block;\\n\n\tmargin: 10px auto 10px auto;\\n\n\twidth: 80%;\\n\n\tbackground: black;\\n\"\n\tfont-family: sans-serif;\\n\n\tfont-size: small;\\n\n\tcolor: silver;\\n\n\t}\\n\nitem {\\n\n\tdisplay: block;\\n\n\tmargin-bottom: 10px;\\n\n\tborder: 2px solid #CCC;\\n\n\tpadding: 10px;\\n\n\tspacing: 2px;\\n\n\t}\\n\nparameter {\\n\n\tdisplay: block;\\n\n\tpadding: 2px;\\n\n\tmargin-top: 10px;\\n\n\tborder: 1px solid grey;\\n\n\tbackground: #EEE;\\n\n\tcolor: black;\\n\n\t}\\n\nname {\\n\n\tdisplay: inline;\\n\n\tfloat: left;\\n\n\tmargin-right: 5px;\\n\n\tfont-weight: bold;\\n\n\t}\\n\ntype {\\n\n\tdisplay: inline;\\n\n\tfont-size: x-small;\\n\n\tmargin-right: 5px;\\n\n\tcolor: #666;\\n\n\twhite-space: nowrap;\\n\n\tfont-style: italic;\\n\n\t}\\n\ndescription {\\n\n\tdisplay: inline;\\n\n\tmargin-right: 5px;\\n\n\twhite-space: nowrap;\\n\n\t}\\n\nvalue {\\n\n\tdisplay: block;\\n\n\tmargin-right: 5px;\\n\n\t}\\n\n[end]\n<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\\n\n<pre><font size='-2'><b>\n(c)3APA3A, Владимир Дубровин и <A href='https://3proxy.ru/'>3proxy.ru</A>\\n\n</b></font>\\n\n</td></tr></table></body></html>\n[end]\n<h3>Счетчики</h3>\\n\n<table border = '1'>\\n\n<tr align='center'><td>Описание</td><td>Активный</td>\n<td>Пользователи</td><td>Адрес источника</td><td>Адрес назначения</td>\n<td>Порты</td>\n<td>Лимит</td><td>Ед.</td><td>Значение</td>\n<td>Дата сброса</td><td>Дата обновения</td><td>Номер</td></tr>\\n\n[end]\n</table>\\n\n[end]\n[/--admin--]\n[--proxy--]\nHTTP/1.0 400 Bad Request\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>400 Bad Request</title></head>\\n\n<body><h2>400 Bad Request</h2>\n<h2>400 Ошибка: Неправильный запрос.</h2>\n</body>\n</html>\\n\n[end]\nHTTP/1.0 502 Bad Gateway\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>502 Bad Gateway</title></head>\\n\n<body><h2>502 Bad Gateway</h2><h3>Host Not Found or connection failed <br><hr>\nОшибка: Удалённый сервер не найден или не удалось связаться с ним.</h3>\n</body></html>\\n\n[end]\nHTTP/1.0 503 Service Unavailable\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>503 Service Unavailable</title></head>\\n\n<body><h2>503 Service Unavailable</h2><h3>You have exceeded your traffic limit <br><hr> \nВы превысили свой лимит трафика.\n</h3></body></html>\\n\n[end]\nHTTP/1.0 503 Service Unavailable\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>503 Service Unavailable</title></head>\\n\n<body><h2>503 Service Unavailable</h2><h3>Recursion detected<br><hr>\nОшибка: Сервис не доступен, обнаружена рекурсия\n</h3></body></html>\\n\n[end]\nHTTP/1.0 501 Not Implemented\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>501 Not Implemented</title></head>\\n\n<body><h2>501 Not Implemented</h2><h3>Required action is not supported by proxy server <br><hr>\nОшибка: Действие не поддерживается в данном proxy сервере\n</h3></body></html>\\n\n[end]\nHTTP/1.0 502 Bad Gateway\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>502 Bad Gateway</title></head>\\n\n<body><h2>502 Bad Gateway</h2><h3>Failed to connect parent proxy <br><hr>\nОшибка: Невозможно соединиться c вышестоящим proxy сервером\n</h3></body></html>\\n\",\n[end]\nHTTP/1.0 500 Internal Error\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>500 Internal Error</title></head>\\n\n<body><h2>500 Internal Error</h2><h3>Internal proxy error during processing your request <br><hr>\nОшибка: Возникла внутренняя ошибка proxy сервера при обработке вашего запроса\n</h3></body></html>\\n\n[end]\nHTTP/1.0 407 Proxy Authentication Required\\n\nProxy-Authenticate: Basic realm=\"proxy\", encoding=\"utf-8\"\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>407 Proxy Authentication Required</title></head>\\n\n<body><h2>407 Proxy Authentication Required</h2><h3>Access to requested resource disallowed by administrator or you need valid username/password to use this resource.<br><hr>\nДоступ запрещен администратором или Вы ввели неправильное имя/пароль.\n</h3></body></html>\\n\n[end]\nHTTP/1.0 200 Connection established\\n\\n\n[end]\nHTTP/1.0 200 Connection established\\n\nContent-Type: text/html\\n\\n\n[end]\nHTTP/1.0 404 Not Found\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>404 Not Found</title></head>\\n\n<body><h2>404 Not Found</h2><h3>File not found <br><hr>\nФайл не найден\n</h3></body></html>\\n\n[end]\t\nHTTP/1.0 403 Forbidden\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>403 Access Denied</title></head>\\n\n<body><h2>403 Access Denied</h2><h3>Access control list denies you to access this resource.<br><hr>\nДоступ к данному ресурсу запрещен списком доступа на proxy сервер. \nЕсли Вы считаете, что это ошибка обратитесь к администратору\n</h3></body></html>\\n\n[end]\nHTTP/1.0 407 Proxy Authentication Required\\n\nProxy-Authenticate: NTLM\\n\nProxy-Authenticate: basic realm=\"proxy\", encoding=\"utf-8\"\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>407 Proxy Authentication Required</title></head>\\n\n<body><h2>407 Proxy Authentication Required</h2><h3>Access to requested resource disallowed by administrator or you need valid username/password to use this resource.<br><hr>\nДоступ запрещен администратором или Вы ввели неправильное имя/пароль.\n</h3></body></html>\\n\n[end]\nHTTP/1.0 407 Proxy Authentication Required\\n\nConnection: keep-alive\\n\nContent-Length: 0\\n\nProxy-Authenticate: NTLM \n[end]\nHTTP/1.0 403 Forbidden\\n\nConnection: close\\n\nContent-type: text/html; charset=us-ascii\\n\n\\n\n<pre>\n[end]\nHTTP/1.0 503 Service Unavailable\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>503 Service Unavailable</title></head>\\n\n<body><h2>503 Service Unavailable</h2><h3>Your request violates configured policy<br><hr>\nЗапрос не сответствует сконфигурированной политике.\n</h3></body></html>\\n\n[end]\nHTTP/1.0 401 Authentication Required\\n\nWWW-Authenticate: basic realm=\"FTP Server\", encoding=\"utf-8\"\\n\nConnection: close\\n\nContent-type: text/html; charset=utf-8\\n\n\\n\n<html><head><title>401 FTP Server requires authentication</title></head>\\n\n<body><h2>401 FTP Server requires authentication</h2><h3>This FTP server rejects anonymous access<br><hr>\nЭтот  FTP  сервер отвергает анонимный доступ.\n</h3></body></html>\\n\n[end]\nHTTP/1.1 100 Continue\\n\n\\n\n[end]\n[/--proxy--]"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}