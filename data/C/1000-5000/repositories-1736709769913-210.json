{
  "metadata": {
    "timestamp": 1736709769913,
    "page": 210,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cuber/ngx_http_google_filter_module",
      "stars": 3343,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2177734375,
          "content": "# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.849609375,
          "content": "language: c\n\ncompiler:\n  - clang\n  - gcc\n\nscript: \n  - wget \"http://nginx.org/download/nginx-1.7.8.tar.gz\" \n  - git clone https://github.com/yaoweibin/ngx_http_substitutions_filter_module \n  - tar xzvf nginx-1.7.8.tar.gz \n  - cd nginx-1.7.8 \n  - ./configure\n   --prefix=../nginx-build\n   --add-module=../ngx_http_substitutions_filter_module\n   --add-module=../ \n  - make\n  - make install\n  - echo \"\n   daemon on;\n   worker_processes  1;\n   \n   events {\n     worker_connections  1024;\n   }\n   \n   http {\n     include       mime.types;\n     default_type  application/octet-stream;\n     server {\n       listen 8080;\n       server_name wen.lu;\n       resolver 8.8.8.8;\n       location / {\n         google on;\n       }\n     }\n   }\" > ../nginx-build/conf/nginx.conf \n  - ../nginx-build/sbin/nginx -t\n  - ../nginx-build/sbin/nginx\n  - curl \"http://wen.lu\" -x 127.0.0.1:8080 -I\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.3642578125,
          "content": "/* \n * Copyright (C) 2002-2015 Igor Sysoev\n * Copyright (C) 2011-2015 Nginx, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.119140625,
          "content": "Nginx Module for Google\n=======================\n\n[![Build Status](https://travis-ci.org/cuber/ngx_http_google_filter_module.svg?branch=dev)](https://travis-ci.org/cuber/ngx_http_google_filter_module)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/cuber/ngx_http_google_filter_module?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n#### Description ####\n`ngx_http_google_filter_module` is a filter module which makes google mirror much easier to deploy.    \nRegular expressions, uri locations and other complex configurations have been built-in already.    \nThe native nginx module ensure the efficiency of handling cookies, gstatic scoures and redirections.   \nLet's see how `easy` it is to setup a google mirror.\n```nginx\nlocation / {\n  google on;\n}\n```\n> _What? Are you kidding me?_   \n> _Yes, it's just that simple!_\n  \n#### Demo site [https://g2.wen.lu](https://g2.wen.lu) ####\n![Demo Site](http://ww2.sinaimg.cn/large/68bd1777gw1f13naidonmj212i0najsy.jpg)\n  \n#### Dependency ####\n  1. [`pcre`](http://www.pcre.org/) *regular expression support*\n  1. [`ngx_http_proxy_module`](http://nginx.org/en/docs/http/ngx_http_proxy_module.html) *backend proxy support*\n  1. [`ngx_http_substitutions_filter_module`](https://github.com/yaoweibin/ngx_http_substitutions_filter_module) *mutiple substitutions support*\n\n#### Installation ####\n##### Download sources first #####\n```\n#\n# download the newest source\n# @see http://nginx.org/en/download.html\n#\nwget http://nginx.org/download/nginx-1.7.8.tar.gz\n\n#\n# clone ngx_http_google_filter_module\n# @see https://github.com/cuber/ngx_http_google_filter_module\n#\ngit clone https://github.com/cuber/ngx_http_google_filter_module\n\n#\n# clone ngx_http_substitutions_filter_module\n# @see https://github.com/yaoweibin/ngx_http_substitutions_filter_module\n#\ngit clone https://github.com/yaoweibin/ngx_http_substitutions_filter_module\n```\n##### Brand new installation #####\n``` bash\n#\n# configure nginx customly\n# replace </path/to/> with your real path\n#\n./configure \\\n  <your configuration> \\\n  --add-module=</path/to/>ngx_http_google_filter_module \\\n  --add-module=</path/to/>ngx_http_substitutions_filter_module\n```\n\n##### Migrate from existed distribution #####\n```bash\n#\n# get the configuration of existed nginx\n# replace </path/to/> with your real path\n#\n</path/to/>nginx -V\n> nginx version: nginx/ <version>\n> built by gcc 4.x.x\n> configure arguments: <configuration>\n\n#\n# download the same version of nginx source\n# @see http://nginx.org/en/download.html\n# replace <version> with your nginx version\n#\nwget http://nginx.org/download/nginx-<version>.tar.gz\n  \n#\n# configure nginx\n# replace <configuration> with your nginx configuration\n# replace </path/to/> with your real path\n#\n./configure \\\n  <configuration> \\\n  --add-module=</path/to/>ngx_http_google_filter_module \\\n  --add-module=</path/to/>ngx_http_substitutions_filter_module\n#\n# if some libraries were missing, you should install them with the package manager\n#   eg. apt-get, pacman, yum ...\n#\n```\n\n#### Usage ####\n##### Basic Configuration #####\n  `resolver` is needed to resolve domains.\n```nginx\nserver {\n  # ... part of server configuration\n  resolver 8.8.8.8;\n  location / {\n    google on;\n  }\n  # ...\n}\n```\n\n##### Google Scholar #####\n`google_scholar` depends on `google`, so `google_scholar` cannot be used independently.    \nNowadays google scholar has migrate from `http` to `https`, and `ncr` is supported, so the `tld` of google scholar is no more needed.     \n``` nginx\nlocation / {\n  google on;\n  google_scholar on;\n}\n```\n\n##### Google Language #####\nThe default language can be set through `google_language`, if it is not setup, `zh-CN` will be the default language.\n```nginx\nlocation / {\n  google on;\n  google_scholar on;\n  # set language to German\n  google_language de; \n}\n```\n\nSupported languages are listed below.\n```txt\nar    -> Arabic\nbg    -> Bulgarian\nca    -> Catalan\nzh-CN -> Chinese (Simplified)\nzh-TW -> Chinese (Traditional)\nhr    -> Croatian\ncs    -> Czech\nda    -> Danish\nnl    -> Dutch\nen    -> English\ntl    -> Filipino\nfi    -> Finnish\nfr    -> French\nde    -> German\nel    -> Greek\niw    -> Hebrew\nhi    -> Hindi\nhu    -> Hungarian\nid    -> Indonesian\nit    -> Italian\nja    -> Japanese\nko    -> Korean\nlv    -> Latvian\nlt    -> Lithuanian\nno    -> Norwegian\nfa    -> Persian\npl    -> Polish\npt-BR -> Portuguese (Brazil)\npt-PT -> Portuguese (Portugal)\nro    -> Romanian\nru    -> Russian\nsr    -> Serbian\nsk    -> Slovak\nsl    -> Slovenian\nes    -> Spanish\nsv    -> Swedish\nth    -> Thai\ntr    -> Turkish\nuk    -> Ukrainian\nvi    -> Vietnamese\n```\n\n##### Spider Exclusion #####\nThe spiders of any search engines are not allowed to crawl google mirror.    \nDefault `robots.txt` listed below was build-in aleady.\n```txt\nUser-agent: *\nDisallow: /\n```     \nIf `google_robots_allow` set to `on`, the `robots.txt` will be replaced with the version of google itself.   \n```nginx\n  #...\n  location / {\n    google on;\n    google_robots_allow on;\n  }\n  #...\n```\n\n##### Upstreaming #####\n`upstream` can help you to avoid name resolving cost, decrease the possibility of google robot detection and proxy through some specific servers.   \n``` nginx\nupstream www.google.com {\n  server 173.194.38.1:443;\n  server 173.194.38.2:443;\n  server 173.194.38.3:443;\n  server 173.194.38.4:443;\n}\n```\n\n##### Proxy Protocol #####\nBy default, the proxy will use `https` to communicate with backend servers.      \nYou can use `google_ssl_off` to force some domains to fall back to `http` protocol.      \nIt is useful, if you want to proxy some domains through another gateway without ssl certificate.\n```nginx\n#\n# eg. \n# i want to proxy the domain 'www.google.com' like this\n# vps(hk) -> vps(us) -> google\n#\n\n#\n# configuration of vps(hk)\n#\nserver {\n  # ...\n  location / {\n    google on;\n    google_ssl_off \"www.google.com\";\n  }\n  # ...\n}\n\nupstream www.google.com {\n  server < ip of vps(us) >:80;\n}\n\n#\n# configuration of vps(us)\n#\nserver {\n  listen 80;\n  server_name www.google.com;\n  # ...\n  location / {\n    proxy_pass https://www.google.com;\n  }\n  # ...\n}\n```\n\n\n#### Copyright & License ####\n  All codes are under the same [LICENCE](http://nginx.org/LICENSE) with [Nginx](http://nginx.org)    \n  Copyright (C) 2014 by Cube.\n\n\n\n\n"
        },
        {
          "name": "README.zh-CN.md",
          "type": "blob",
          "size": 10.1884765625,
          "content": "Nginx Google 扩展\n=================\n\n[![Build Status](https://travis-ci.org/cuber/ngx_http_google_filter_module.svg?branch=dev)](https://travis-ci.org/cuber/ngx_http_google_filter_module)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/cuber/ngx_http_google_filter_module?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n#### 扯两句 ####\n`wen.lu` 一路走到现在, 离不开大家的支持!\n> 很多朋友通过各种方式问过我: \"你丫怎么不开源啊...\"     \n> 先向那些朋友道歉啊, 其实不是我不想开源, 只是之前的版本配置实在太复杂.\n> `nginx` 三方扩展用了一大堆, 外加 `lua`, 以及突破千行的配置`工程`, 这么拙劣的技艺, 实在不好意思拿出来分享      \n\n遂决定写一个扩展, 让`google`反代的配置和使用`wen.lu`一样简单.\n```nginx\nlocation / {\n  google on;\n}\n```\n> _你没有看错, “一行配置, google 我有！”_   \n  \n#### 现在 [g2.wen.lu](https://g2.wen.lu) 就是由该扩展驱动 ####\n![Demo Site](http://ww2.sinaimg.cn/large/68bd1777gw1f13naidonmj212i0najsy.jpg)\n  \n#### 依赖库 ####\n  1. [`pcre`](http://www.pcre.org/) *正则*\n  1. [`ngx_http_proxy_module`](http://nginx.org/en/docs/http/ngx_http_proxy_module.html) *反向代理*\n  1. [`ngx_http_substitutions_filter_module`](https://github.com/yaoweibin/ngx_http_substitutions_filter_module) *多重替换*\n\n#### 安装 ####\n> **以 ubuntu 14.04 为例** \n> *i386, x86_64 均适用*\n\n##### 最简安装 #####\n```bash\n#\n# 安装 gcc & git\n#\napt-get install build-essential git gcc g++ make\n\n#\n# 下载最新版源码\n# nginx 官网: \n# http://nginx.org/en/download.html\n#\nwget \"http://nginx.org/download/nginx-1.7.8.tar.gz\"\n\n#\n# 下载最新版 pcre\n# pcre 官网:\n# http://www.pcre.org/\n#\nwget \"http://ftp.cs.stanford.edu/pub/exim/pcre/pcre-8.38.tar.gz\"\n\n#\n# 下载最新版 openssl\n# opessl 官网:\n# https://www.openssl.org/\n#\nwget \"https://www.openssl.org/source/openssl-1.0.1j.tar.gz\"\n\n#\n# 下载最新版 zlib\n# zlib 官网:\n# http://www.zlib.net/\n#\nwget \"http://zlib.net/fossils/zlib-1.2.8.tar.gz\"\n\n#\n# 下载本扩展\n#\ngit clone https://github.com/cuber/ngx_http_google_filter_module\n\n#\n# 下载 substitutions 扩展\n#\ngit clone https://github.com/yaoweibin/ngx_http_substitutions_filter_module\n\n\n#\n# 解压缩\n#\ntar xzvf nginx-1.7.8.tar.gz\ntar xzvf pcre-8.38.tar.gz\ntar xzvf openssl-1.0.1j.tar.gz\ntar xzvf zlib-1.2.8.tar.gz\n\n#\n# 进入 nginx 源码目录\n#\ncd nginx-1.7.8\n\n#\n# 设置编译选项\n#\n./configure \\\n  --prefix=/opt/nginx-1.7.8 \\\n  --with-pcre=../pcre-8.38 \\\n  --with-openssl=../openssl-1.0.1j \\\n  --with-zlib=../zlib-1.2.8 \\\n  --with-http_ssl_module \\\n  --add-module=../ngx_http_google_filter_module \\\n  --add-module=../ngx_http_substitutions_filter_module\n  \n#\n# 编译, 安装\n# 如果扩展有报错, 请发 issue 到\n# https://github.com/cuber/ngx_http_google_filter_module/issues\n#\nmake\nsudo make install\n\n#\n# 启动, 安装过程到此结束\n#\nsudo /opt/nginx-1.7.8/sbin/nginx\n\n#\n# 配置修改后, 需要 reload nginx 来让配置生效, \n#\nsudo /opt/nginx-1.7.8/sbin/nginx -s reload\n```\n\n##### 从发行版迁移 #####\n``` bash\n#\n# 安装 gcc & git\n#\napt-get install build-essential git gcc g++ make\n\n#\n# 安装发行版\n# (已安装的请忽略)\n#\napt-get install nginx\n\n#\n# 查看发行版编译选项及版本\n#\nnginx -V\n# nginx version: nginx/1.4.7\n# built by gcc 4.8.2 (Ubuntu 4.8.2-19ubuntu1)\n# TLS SNI support enabled\n# configure arguments: \n#  --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' \\\n#  --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro' \\\n#  --prefix=/usr/share/nginx \\\n#  --conf-path=/etc/nginx/nginx.conf \\\n#  --http-log-path=/var/log/nginx/access.log \\\n#  --error-log-path=/var/log/nginx/error.log \\\n#  --lock-path=/var/lock/nginx.lock \\\n#  --pid-path=/run/nginx.pid \\\n#  --http-client-body-temp-path=/var/lib/nginx/body \\\n#  --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \\\n#  --http-proxy-temp-path=/var/lib/nginx/proxy \\\n#  --http-scgi-temp-path=/var/lib/nginx/scgi \\\n#  --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \\\n#  --with-debug \\\n#  --with-pcre-jit \\\n#  --with-ipv6 \\\n#  --with-http_ssl_module \\\n#  --with-http_stub_status_module \\\n#  --with-http_realip_module \\\n#  --with-http_addition_module \\\n#  --with-http_dav_module \\\n#  --with-http_geoip_module \\\n#  --with-http_gzip_static_module \\\n#  --with-http_image_filter_module \\\n#  --with-http_spdy_module \\\n#  --with-http_sub_module \\\n#  --with-http_xslt_module \\\n#  --with-mail \\\n#  --with-mail_ssl_module\n\n#\n# 下载对应 nginx 大版本\n# nginx 官网: \n# http://nginx.org/en/download.html\n#\nwget \"http://nginx.org/download/nginx-1.4.7.tar.gz\"\n\n#\n# 下载本扩展\n#\ngit clone https://github.com/cuber/ngx_http_google_filter_module\n\n#\n# 下载 substitutions 扩展\n#\ngit clone https://github.com/yaoweibin/ngx_http_substitutions_filter_module\n\n#\n# 安装依赖库的 dev 包\n#\napt-get install libpcre3-dev libssl-dev zlib1g-dev libxslt1-dev libgd-dev libgeoip-dev\n\n#\n# 请对照自己发行版的 configure 参数进行 configure, 勿直接 copy 以下配置\n#\n./configure \\\n  --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' \\\n  --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro' \\\n  --prefix=/usr/share/nginx \\\n  --conf-path=/etc/nginx/nginx.conf \\\n  --http-log-path=/var/log/nginx/access.log \\\n  --error-log-path=/var/log/nginx/error.log \\\n  --lock-path=/var/lock/nginx.lock \\\n  --pid-path=/run/nginx.pid \\\n  --http-client-body-temp-path=/var/lib/nginx/body \\\n  --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \\\n  --http-proxy-temp-path=/var/lib/nginx/proxy \\\n  --http-scgi-temp-path=/var/lib/nginx/scgi \\\n  --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \\\n  --with-debug \\\n  --with-pcre-jit \\\n  --with-ipv6 \\\n  --with-http_ssl_module \\\n  --with-http_stub_status_module \\\n  --with-http_realip_module \\\n  --with-http_addition_module \\\n  --with-http_dav_module \\\n  --with-http_geoip_module \\\n  --with-http_gzip_static_module \\\n  --with-http_image_filter_module \\\n  --with-http_spdy_module \\\n  --with-http_sub_module \\\n  --with-http_xslt_module \\\n  --with-mail \\\n  --with-mail_ssl_module \\\n  --add-module=../ngx_http_google_filter_module \\\n  --add-module=../ngx_http_substitutions_filter_module\n  \n#\n# 覆盖二进制文件\n#\ncp -rf objs/nginx /usr/sbin/nginx\n\n#\n# 重启 nginx 至此, 迁移工作结束\n# \nservice nginx stop\nservice nginx start\n\n#\n# 配置修改后, 需要 restart nginx 来让配置生效\n#\nservice nginx restart\n```\n\n#### 基本配置方法 ####\n`http`配置方式\n```nginx\nserver {\n  server_name <你的域名>;\n  listen 80;\n\n  resolver 8.8.8.8;\n  location / {\n    google on;\n  }\n}\n```\n`https`配置方式\n```nginx\nserver {\n  server_name <你的域名>;\n  listen 443;\n\n  ssl on;\n  ssl_certificate <你的证书>;\n  ssl_certificate_key <你的私钥>;\n\n  resolver 8.8.8.8;\n  location / {\n    google on;\n  }\n}\n```\n#### 进阶配置方法 ####\n##### 基本搜索 #####\n需要配置 `resolver` 用于域名解析\n```nginx\nserver {\n  # ... 仅列举部分配置\n  resolver 8.8.8.8;\n  location / {\n    google on;\n  }\n  # ...\n}\n```\n\n##### 谷歌学术 #####\n`google_scholar` 依赖于 `google`, 所以 `google_scholar` 无法独立使用.    \n由于谷歌学术近日升级, 强制使用 `https` 协议, 并且 `ncr` 已经支持, 所以不再需要指定谷歌学术的 `tld`     \n配置 nginx\n``` nginx\nlocation / {\n  google on;\n  google_scholar on;\n}\n```\n\n##### 默认语言偏好 #####\n默认的语言偏好可用 `google_language` 来设置, 如果没有设置, 默认使用 `zh-CN` (中文)\n```nginx\nlocation / {\n  google on;\n  google_scholar on;\n  # 设置成德文\n  google_language \"de\"; \n}\n```\n\n支持的语言如下.\n```txt\nar    -> 阿拉伯\nbg    -> 保加利亚\nca    -> 加泰罗尼亚\nzh-CN -> 中国 (简体)\nzh-TW -> 中国 (繁体)\nhr    -> 克罗地亚\ncs    -> 捷克\nda    -> 丹麦\nnl    -> 荷兰\nen    -> 英语\ntl    -> 菲律宾\nfi    -> 芬兰\nfr    -> 法国\nde    -> 德国\nel    -> 希腊\niw    -> 希伯来\nhi    -> 印地文\nhu    -> 匈牙利\nid    -> 印度尼西亚\nit    -> 意大利\nja    -> 日本\nko    -> 朝鲜\nlv    -> 拉脱维亚\nlt    -> 立陶宛\nno    -> 挪威\nfa    -> 波斯\npl    -> 波兰\npt-BR -> 葡萄牙 (巴西)\npt-PT -> 葡萄牙 (葡萄牙)\nro    -> 罗马尼亚\nru    -> 俄罗斯\nsr    -> 塞尔维亚\nsk    -> 斯洛伐克\nsl    -> 斯洛文尼亚\nes    -> 西班牙\nsv    -> 瑞典\nth    -> 泰国\ntr    -> 土耳其\nuk    -> 乌克兰\nvi    -> 越南\n```\n\n##### 搜索引擎爬虫许可 #####\n任何搜索引擎爬虫都不被允许爬取 google 镜像       \n如下的默认 `robots.txt` 已经内置.\n```txt\nUser-agent: *\nDisallow: /\n```     \n如果想要使用 `google` 自己的 `robots.txt` 请将 `google_robots_allow` 设为 `on`\n```nginx\n  #...\n  location / {\n    google on;\n    google_robots_allow on;\n  }\n  #...\n```\n\n##### Upstreaming #####\n`upstream` 减少一次域名解析的开销, 并且通过配置多个网段的 google ip 能够一定程度上减少被 google 机器人识别程序侦测到的几率 (弹验证码).\n```bash\n# 可以通过如下方法获取 google ip\n➜  ~  dig www.google.com @8.8.8.8 +short\n173.194.38.209\n173.194.38.211\n173.194.38.212\n173.194.38.210\n173.194.38.208\n```\n然后将获取到的 ip 配置如下即可\n``` nginx\nupstream www.google.com {\n  server 173.194.38.209:443;\n  server 173.194.38.211:443;\n  server 173.194.38.212:443;\n  server 173.194.38.210:443;\n  server 173.194.38.208:443;\n}\n```\n\n##### Proxy Protocal #####\n默认采用 `https` 与后端服务器通信.    \n你可以使用 `google_ssl_off` 来强制将一些域降到 `http` 协议.    \n这个设置可以让一些需要二次转发的域通过 `http` 协议进行转发, 从而不再依赖 `ssl` 证书.\n```nginx\n#\n# 例如 'www.google.com' 按如下方式代理\n# vps(hk) -> vps(us) -> google\n#\n\n#\n# vps(hk) 配置\n#\nserver {\n  # ...\n  location / {\n    google on;\n    google_ssl_off \"www.google.com\";\n  }\n  # ...\n}\n\nupstream www.google.com {\n  server < vps(us) 的 ip >:80;\n}\n\n#\n# vps(us) 配置\n#\nserver {\n  listen 80;\n  server_name www.google.com;\n  # ...\n  location / {\n    proxy_pass https://www.google.com;\n  }\n  # ...\n}\n```\n\n#### Copyright & License ####\n  所有代码都遵循与 [Nginx](http://nginx.org/LICENSE) 相同的开源协议   \n  Copyright (C) 2014 by Cube.\n\n\n\n"
        },
        {
          "name": "config",
          "type": "blob",
          "size": 0.4248046875,
          "content": "ngx_addon_name=ngx_http_google_filter_module\nif test -n \"$ngx_module_link\"; then\n    ngx_module_type=FILTER\n    ngx_module_name=ngx_http_google_filter_module\n    ngx_module_srcs=\"$ngx_addon_dir/src/*.c\"\n\n    . auto/module\nelse\n    HTTP_AUX_FILTER_MODULES=\"$HTTP_AUX_FILTER_MODULES ngx_http_google_filter_module\"\n    NGX_ADDON_SRCS=\"$NGX_ADDON_SRCS $ngx_addon_dir/src/*.c\"\n    NGX_ADDON_DEPS=\"$NGX_ADDON_DEPS $ngx_addon_dir/src/*.h\"\nfi\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}