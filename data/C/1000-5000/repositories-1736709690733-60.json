{
  "metadata": {
    "timestamp": 1736709690733,
    "page": 60,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "coreutils/coreutils",
      "stars": 4391,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3017578125,
          "content": "*.texi* diff=texinfo\n\n# Put something like the following e.g., in your ~/.gitconfig file\n# # Include proper \"function name\" string in diffs of texinfo.\n# # Derived from the regexp in emacs' lisp/add-log.el.\n# [diff \"texinfo\"]\n#         funcname = \"^@node[ \\t][ \\t]*\\\\([^,][^,]*\\\\)\"\n\ngl/lib/*.diff -whitespace\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.341796875,
          "content": "*.I[12]\n*.[EIOXao]\n*.bak\n*.gcda\n*.gcno\n*~\n._bootmp\n.deps\n.gdb-history\n.kludge-stamp\n.version\n/*.patch\n/.Tpo\n/.am*\n/.re-list\n/.sc-start-*\n/ABOUT-NLS\n/ChangeLog\n/GNUmakefile\n/INSTALL\n/THANKS-to-translators\n/aclocal.m4\n/autom4te.cache\n/build-aux/.gitignore\n/build-aux/ar-lib\n/build-aux/compile\n/build-aux/config.guess\n/build-aux/config.rpath\n/build-aux/config.sub\n/build-aux/depcomp\n/build-aux/install-sh\n/build-aux/mdate-sh\n/build-aux/missing\n/build-aux/snippet/\n/build-aux/test-driver\n/build-aux/texinfo.tex\n/build-aux/ylwrap\n/confdefs*\n/config.cache\n/config.log\n/config.status\n/configure\n/conftest*\n/coreutils-*.tar.gz\n/coreutils-*.tar.gz.sig\n/coreutils-*.tar.xz\n/coreutils-*.tar.xz.sig\n/doc/coverage\n/doc/manual\n/gnulib-tests\n/lib/.dirstamp\n/lib/.gitignore\n/lib/alloca.h\n/lib/arg-nonnull.h\n/lib/arpa/inet.h\n/lib/assert.h\n/lib/byteswap.h\n/lib/c++defs.h\n/lib/charset.alias\n/lib/config.h\n/lib/config.hin\n/lib/configmake.h\n/lib/crc-sliceby8.h\n/lib/ctype.h\n/lib/dirent.h\n/lib/endian.h\n/lib/errno.h\n/lib/error.h\n/lib/fcntl.h\n/lib/float.h\n/lib/fnmatch.h\n/lib/getopt-cdefs.h\n/lib/getopt.h\n/lib/glthread\n/lib/gmp.h\n/lib/iconv.h\n/lib/iconv_open-aix.h\n/lib/iconv_open-hpux.h\n/lib/iconv_open-irix.h\n/lib/iconv_open-osf.h\n/lib/iconv_open-solaris.h\n/lib/iconv_open-zos.h\n/lib/inttypes.h\n/lib/langinfo.h\n/lib/limits.h\n/lib/link-warning.h\n/lib/locale.h\n/lib/malloc/\n/lib/math.h\n/lib/netdb.h\n/lib/netinet/in.h\n/lib/obstack.h\n/lib/parse-datetime-gen.h\n/lib/parse-datetime.c\n/lib/poll.h\n/lib/printf.c\n/lib/pthread.h\n/lib/ref-add.sed\n/lib/ref-del.sed\n/lib/sched.h\n/lib/se-context.h\n/lib/se-label.h\n/lib/se-selinux.h\n/lib/selinux\n/lib/signal.h\n/lib/spawn.h\n/lib/stamp-h1\n/lib/stdarg.h\n/lib/stdbool.h\n/lib/stdbit.h\n/lib/stdckdint.h\n/lib/stddef.h\n/lib/stdint.h\n/lib/stdio.h\n/lib/stdlib.h\n/lib/string.h\n/lib/strings.h\n/lib/sys/\n/lib/termios.h\n/lib/time.h\n/lib/uchar.h\n/lib/unicase.h\n/lib/unicase/\n/lib/unictype\n/lib/unictype.h\n/lib/uninorm.h\n/lib/unistd.h\n/lib/unistr\n/lib/unistr.h\n/lib/unitypes.h\n/lib/uniwidth\n/lib/uniwidth.h\n/lib/utime.h\n/lib/warn-on-use.h\n/lib/wchar.h\n/lib/wctype.h\n/m4/.cvsignore\n/m4/.gitignore\n/m4/codeset.m4\n/m4/cu-progs.m4\n/m4/fcntl-o.m4\n/m4/gettext.m4\n/m4/glibc2.m4\n/m4/glibc21.m4\n/m4/gnulib-cache.m4\n/m4/iconv.m4\n/m4/intdiv0.m4\n/m4/intl.m4\n/m4/intldir.m4\n/m4/intlmacosx.m4\n/m4/intmax.m4\n/m4/inttypes-pri.m4\n/m4/inttypes_h.m4\n/m4/lcmessage.m4\n/m4/lib-ld.m4\n/m4/lib-link.m4\n/m4/lib-prefix.m4\n/m4/lock.m4\n/m4/longlong.m4\n/m4/nls.m4\n/m4/po.m4\n/m4/printf-posix.m4\n/m4/progtest.m4\n/m4/size_max.m4\n/m4/stdint_h.m4\n/m4/threadlib.m4\n/m4/uintmax_t.m4\n/m4/visibility.m4\n/m4/wchar_t.m4\n/m4/wint_t.m4\n/m4/xsize.m4\n/maint.mk\n/man/*.1\n/po/*.gmo\n/po/*.po\n/po/.gitignore\n/po/.reference\n/po/LINGUAS\n/po/Makefile.in\n/po/Makefile.in.in\n/po/Makevars\n/po/Makevars.template\n/po/POTFILES\n/po/Rules-quot\n/po/boldquot.sed\n/po/checksums\n/po/coreutils.pot\n/po/en@boldquot.header\n/po/en@quot.header\n/po/insert-header.sin\n/po/quot.sed\n/po/remove-potcdate.sed\n/po/remove-potcdate.sin\n/po/stamp-po\n/src/coreutils.h\n/src/coreutils_shebangs\n/src/coreutils_symlinks\n/src/cu-progs.mk\n/src/fs-def\n/src/fs-kernel-magic\n/src/fs-latest-magic.h\n/src/fs-magic\n/src/make-prime-list\n/src/primes.h\n/src/single-binary.mk\n/src/version.c\n/src/version.h\n/stamp-h1\n/tests/*/*.log\n/tests/*/*.trs\n/tests/.built-programs\n/tests/factor/t[0-9][0-9].sh\n/tests/init.sh\n/tests/t?\n/tests/test-suite.log\n/tight-scope.mk\nID\nMakefile\nMakefile.in\nTAGS\nTHANKS\nTHANKS-to-translators\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0986328125,
          "content": "[submodule \"gnulib\"]\n        path = gnulib\n        url = https://git.savannah.gnu.org/git/gnulib.git\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 1.837890625,
          "content": "# Map git author names and email addresses to canonical/preferred form.\n<jim@meyering.net> <meyering@fb.com>\n<jim@meyering.net> <meyering@iou.iou>\n<jim@meyering.net> <meyering@redhat.com>\n<jim@meyering.net> <meyering@rho.meyering.net>\n<jim@meyering.net> <meyering@vm.meyering.net.localdomain>\nPaul Eggert <eggert@cs.ucla.edu> <eggert@penguin.cs.ucla.edu>\nPaul Eggert <eggert@cs.ucla.edu> <eggert@CS.UCLA.EDU>\n<eggert@cs.ucla.edu> <eggert@twinsun.com>\n\n# Evan's two changes listed my email address.\nEvan Hunt <ethanol@armory.com> Evan Hunt <jim@meyering.net>\n\n<P@draigBrady.com> <P@draigBrady.com  (trivial change)>\nPádraig Brady <P@draigBrady.com>\n<chen.guo.0625@gmail.com> <chenguo4@yahoo.com>\n<chen.guo.0625@gmail.com> <chenguo4@ucla.edu>\n<schwab@linux-m68k.org> <schwab@suse.de>\n<aurel32@debian.org> <aurelien@aurel32.net>\n<bob@proulx.com> <rwp@fc.hp.com>\n<bkorb@gnu.org> <bkorb@veritas.com>\n<bruno@clisp.org> <haible@clisp.cons.org>\n<eblake@redhat.com> <ebb9@byu.net>\n<jrv@debian.org> <jrvz@comcast.net>\n<dave.anglin@nrc.ca> <dave@hiauly1.hia.nrc.ca>\n<psfales@alcatel-lucent.com> <psfales@lucent.com>\n<karl@gnu.org> <karl@freefriends.org>\n<stephane.raimbault@gmail.com> <stephane.raimbault@makina-corpus.com>\n<jarkko.sakkinen@iki.fi> <jarkko.sakkinen@linux.intel.com>\n<tobias@stoeckmann.org> <tobias@bugol.de>\n<cjwatson@debian.org> <cjwatson@ubuntu.com>\n\n# Prefer spelled-out middle name and its address.\nArne Henrik Juul <arnej@imf.unit.no> Arne H. Juul <arnej@solan.unit.no>\n\n# Had email as name.\nDan Jacobson <jidanni@jidanni.org> jidanni@jidanni.org <jidanni@jidanni.org>\n\n# Consolidate names of same email address.\nJeff Liu <jeff.liu@oracle.com> jeff.liu <jeff.liu@oracle.com>\nJeff Liu <jeff.liu@oracle.com> Jie Liu <jeff.liu@oracle.com>\n\n# Convert to latin1 for a better 'THANKS' sort order.\nAleksej Shilin <rootlexx@mail.ru> Алексей Шилин <rootlexx@mail.ru>\n"
        },
        {
          "name": ".prev-version",
          "type": "blob",
          "size": 0.00390625,
          "content": "9.5\n"
        },
        {
          "name": ".vg-suppressions",
          "type": "blob",
          "size": 1.935546875,
          "content": "# Suppress valgrind diagnostics we don't care about.\n\n# Copyright (C) 2003-2025 Free Software Foundation, Inc.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n{\n   libc_dl_open\n   Memcheck:Cond\n   fun:_dl_relocate_object\n   obj:/lib/libc-2.3.2.so\n   fun:_dl_catch_error\n   fun:_dl_open\n}\n\n{\n   libc_dl_catch_error__map_object\n   Memcheck:Addr1\n   obj:/lib/ld-2.3.2.so\n   fun:_dl_map_object\n   obj:/lib/libc-2.3.2.so\n   fun:_dl_catch_error\n}\n{\n   libc_dl_catch_error__map_versions\n   Memcheck:Addr1\n   obj:/lib/ld-2.3.2.so\n   fun:_dl_check_map_versions\n   obj:/lib/libc-2.3.2.so\n   fun:_dl_catch_error\n}\n\n{\n   jm_libc_sigaction\n   Memcheck:Param\n   sigaction(act)\n   fun:__libc_sigaction\n}\n\n{\n   libc_expand_dynamic_string_token\n   Memcheck:Cond\n   fun:strlen\n   fun:expand_dynamic_string_token\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n}\n{\n   libc__dl_new_object\n   Memcheck:Cond\n   fun:strlen\n   fun:_dl_new_object\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n}\n{\n   libc_fillin_rpath\n   Memcheck:Cond\n   fun:strlen\n   fun:fillin_rpath\n}\n{\n   libc-getpwuid-leak\n   Memcheck:Leak\n   fun:malloc\n   fun:nss_parse_service_list\n   fun:__nss_database_lookup\n   obj:*\n   obj:*\n   fun:getpwuid_r@@GLIBC_2.2.5\n   fun:getpwuid\n   fun:getuser\n   fun:format_user_width\n   fun:gobble_file\n   fun:main\n}\n{\n   utimensat-NULL\n   Memcheck:Param\n   utimensat(filename)\n   fun:futimens\n   fun:gl_futimens\n   fun:main\n}\n"
        },
        {
          "name": ".x-update-copyright",
          "type": "blob",
          "size": 0.068359375,
          "content": "^COPYING$\n^bootstrap$\n^doc/fdl\\.texi$\n^man/help2man$\n^tests/init\\.sh$\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 3.748046875,
          "content": "Here are the names of the programs in this package,\neach followed by the name(s) of its author(s).\n\narch: David MacKenzie, Karel Zak\nb2sum: Pádraig Brady, Samuel Neves\nbase32: Simon Josefsson\nbase64: Simon Josefsson\nbasename: David MacKenzie\nbasenc: Simon Josefsson, Assaf Gordon\ncat: Torbjörn Granlund, Richard M. Stallman\nchcon: Russell Coker, Jim Meyering\nchgrp: David MacKenzie, Jim Meyering\nchmod: David MacKenzie, Jim Meyering\nchown: David MacKenzie, Jim Meyering\nchroot: Roland McGrath\ncksum: Pádraig Brady, Q. Frank Xia\ncomm: Richard M. Stallman, David MacKenzie\ncoreutils: Alex Deymo\ncp: Torbjörn Granlund, David MacKenzie, Jim Meyering\ncsplit: Stuart Kemp, David MacKenzie\ncut: David M. Ihnat, David MacKenzie, Jim Meyering\ndate: David MacKenzie\ndd: Paul Rubin, David MacKenzie, Stuart Kemp\ndf: Torbjörn Granlund, David MacKenzie, Paul Eggert\ndir: Richard M. Stallman, David MacKenzie\ndircolors: H. Peter Anvin\ndirname: David MacKenzie, Jim Meyering\ndu: Torbjörn Granlund, David MacKenzie, Paul Eggert, Jim Meyering\necho: Brian Fox, Chet Ramey\nenv: Richard Mlynarik, David MacKenzie, Assaf Gordon\nexpand: David MacKenzie\nexpr: Mike Parker, James Youngman, Paul Eggert\nfactor: Paul Rubin, Torbjörn Granlund, Niels Möller\nfalse: Jim Meyering\nfmt: Ross Paterson\nfold: David MacKenzie\nginstall: David MacKenzie\ngroups: David MacKenzie, James Youngman\nhead: David MacKenzie, Jim Meyering\nhostid: Jim Meyering\nhostname: Jim Meyering\nid: Arnold Robbins, David MacKenzie\njoin: Mike Haertel\nkill: Paul Eggert\nlink: Michael Stone\nln: Mike Parker, David MacKenzie\nlogname: FIXME: unknown\nls: Richard M. Stallman, David MacKenzie\nmd5sum: Ulrich Drepper, Scott Miller, David Madore\nmkdir: David MacKenzie\nmkfifo: David MacKenzie\nmknod: David MacKenzie\nmktemp: Jim Meyering, Eric Blake\nmv: Mike Parker, David MacKenzie, Jim Meyering\nnice: David MacKenzie\nnl: Scott Bartram, David MacKenzie\nnohup: Jim Meyering\nnproc: Giuseppe Scrivano\nnumfmt: Assaf Gordon\nod: Jim Meyering\npaste: David M. Ihnat, David MacKenzie\npathchk: Paul Eggert, David MacKenzie, Jim Meyering\npinky: Joseph Arceneaux, David MacKenzie, Kaveh Ghazi\npr: Pete TerMaat, Roland Huebner\nprintenv: David MacKenzie, Richard Mlynarik\nprintf: David MacKenzie\nptx: François Pinard\npwd: Jim Meyering\nreadlink: Dmitry V. Levin\nrealpath: Pádraig Brady\nrm: Paul Rubin, David MacKenzie, Richard M. Stallman, Jim Meyering\nrmdir: David MacKenzie\nruncon: Russell Coker\nseq: Ulrich Drepper\nsha1sum: Ulrich Drepper, Scott Miller, David Madore\nsha224sum: Ulrich Drepper, Scott Miller, David Madore\nsha256sum: Ulrich Drepper, Scott Miller, David Madore\nsha384sum: Ulrich Drepper, Scott Miller, David Madore\nsha512sum: Ulrich Drepper, Scott Miller, David Madore\nshred: Colin Plumb\nshuf: Paul Eggert\nsleep: Jim Meyering, Paul Eggert\nsort: Mike Haertel, Paul Eggert\nsplit: Torbjörn Granlund, Richard M. Stallman\nstat: Michael Meskes\nstdbuf: Pádraig Brady\nstty: David MacKenzie\nsum: Kayvan Aghaiepour, David MacKenzie\nsync: Jim Meyering, Giuseppe Scrivano\ntac: Jay Lepreau, David MacKenzie\ntail: Paul Rubin, David MacKenzie, Ian Lance Taylor, Jim Meyering\ntee: Mike Parker, Richard M. Stallman, David MacKenzie\ntest: Kevin Braunsdorf, Matthew Bradburn\ntimeout: Pádraig Brady\ntouch: Paul Rubin, Arnold Robbins, Jim Kingdon, David MacKenzie, Randy Smith\ntr: Jim Meyering\ntrue: Jim Meyering\ntruncate: Pádraig Brady\ntsort: Mark Kettenis\ntty: David MacKenzie\nuname: David MacKenzie\nunexpand: David MacKenzie\nuniq: Richard M. Stallman, David MacKenzie\nunlink: Michael Stone\nuptime: Joseph Arceneaux, David MacKenzie, Kaveh Ghazi\nusers: Joseph Arceneaux, David MacKenzie\nvdir: Richard M. Stallman, David MacKenzie\nwc: Paul Rubin, David MacKenzie\nwho: Joseph Arceneaux, David MacKenzie, Michael Stone\nwhoami: Richard Mlynarik\nyes: David MacKenzie\n\n;; Local Variables:\n;; coding: utf-8\n;; End:\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "HACKING",
          "type": "blob",
          "size": 23.302734375,
          "content": "Coreutils Contribution Guidelines\n\n\nPrerequisites\n=============\nYou will need the \"git\" version control tools.  On Fedora-based\nsystems, do \"yum install git\".  On Debian-based ones install the\n\"git-core\" package.  Then run \"git --version\".  If that says it's\nolder than version 1.4.4, then you'd do well to get a newer version.\nAt worst, just download the latest stable release from\nhttps://git-scm.com/ and build from source.\n\nFor details on building the programs in this package, see the file,\nREADME-hacking.\n\n\nUse the latest upstream sources\n===============================\nBase any changes you make on the latest upstream sources.  You can get\na copy of the latest with this command:\n\n    git clone https://git.savannah.gnu.org/git/coreutils.git\n    cd coreutils\n\nThat downloads the entire repository, including revision control history\ndating back to 1991.  The repository (the part you download, and which\nresides in coreutils/.git) currently weighs in at about 30MB.  So you\ndon't want to download it more often than necessary.  Once downloaded,\nyou can get incremental updates by running one of these commands from\ninside your new coreutils/ directory:\n\nIf you have made *no* changes:\n    git pull\n\nIf you *have* made changes and mistakenly committed them to \"master\",\ndo the following to put your changes on a private branch, \"br\", and\nto restore master to its unmodified (relative-to-upstream) state:\n    git checkout -b br\n    git checkout master\n    git reset --hard origin\n\nThen \"git pull\" should work.\n\n\n*Before* you commit changes\n===========================\n\nIn this project, we much prefer patches that automatically record\nauthorship.  That is important not just to give credit where due, but\nalso from a legal standpoint (see below).  To create author-annotated\npatches with git, you must first tell git who you are.  That information\nis best recorded in your ~/.gitconfig file.  Edit that file, creating\nit if needed, and put your name and email address in place of these\nexample values:\n\n[user]\n  name = Joe X. User\n  email = joe.user@example.com\n\n\nYour first commit: the quick and dirty way\n==========================================\nFirst of all, realize that to \"commit\" a change in git is a purely\nlocal operation.  It affects only the local repository (the .git/ dir)\nin your current coreutils/ hierarchy.\n\nTo try this out, modify a file or two.  If you create a new file, you'll\nneed to tell git about it with \"git add new-file.c\".  Commit all changes\nwith \"git commit -a\".  That prompts you for a log message, which should\ninclude a one-line summary, a blank line, and ChangeLog-style entries\nfor all affected files.  More on that below.\n\nOnce your change is committed, you can create a proper patch that includes\na log message and authorship information as well as any permissions\nchanges.  Use this command to save that single, most-recent change set:\n\n  git format-patch --stdout -1 > DIFF\n\nThe trouble with this approach is that you've just checked in a change\n(remember, it's only local) on the \"master\" branch, and that's where new\nchanges would normally appear when you pull the latest from \"upstream\".\nWhen you \"pull\" from a remote repository to get the latest, your local\nchanges on \"master\" may well induce conflicts.   For this reason, you\nmay want to keep \"master\" free of any local changes, so that you can\nuse it to track unadulterated upstream sources.\n\nHowever, if your cloned directory is for a one-shot patch submission and\nyou're going to remove it right afterwards, then this approach is fine.\nOtherwise, for a more sustainable (and more generally useful, IMHO)\nprocess, read on about \"topic\" branches.\n\n\nMake your changes on a private \"topic\" branch\n=============================================\nSo you checked out coreutils like this:\n\n  git clone https://git.savannah.gnu.org/git/coreutils.git\n\nNow, cd into the coreutils/ directory and run:\n\n  git checkout -b my-topic\n\nThat creates the my-topic branch and puts you on it.\nTo see which branch you're on, type \"git branch\".\nRight after the clone, you were on \"master\" (aka the trunk).\nTo get back to the trunk, do this:\n\n  git checkout master\n\nNote 1:\n    Be careful to run \"git pull\" only when on the \"master\" branch,\n    not when on a branch.  With newer versions of git, you can't cause\n    trouble if you forget, so this is a good reason to ensure you're\n    using 1.5.3.1 or newer.\n\nNote 2:\n    It's best not to try to switch from one branch to another if\n    you have pending (uncommitted) changes.  Sometimes it works,\n    sometimes the checkout will fail, telling you that your local\n    modifications conflict with changes required to switch branches.\n    However, in any case, you will *not* lose your uncommitted changes.\n    Run \"git stash\" to temporarily hide uncommitted changes in your\n    local directory, restoring a clean working directory.\n\nAnyhow, get back onto your just-created branch:\n\n  git checkout my-topic\n\nNow, modify some file and commit it:\n\n  git commit some-file.c\n\nPersonally, no matter what package I'm working on, I find it useful to\nput the ChangeLog entries *only* in the commit log, initially, unless\nI plan to commit/push right away.  Otherwise, I tend to get unnecessary\nmerge conflicts with each rebase (see below).  In coreutils, I've gone\na step further, and no longer maintain an explicit ChangeLog file in\nversion control.  Instead, in a git working directory, you can view\nChangeLog information via \"git log\".  However, each distribution tarball\ndoes include a ChangeLog file that is automatically generated from the\ngit logs.\n\nSo, you've committed a change.  But it's only in your local repository,\nand only on your \"my-topic\" branch.  Let's say you wait a day, and\nthen see that someone else changed something and pushed it to the\npublic repository.  Now, you want to update your trunk and \"rebase\"\nyour changes on the branch so that they are once again relative to the\ntip of the trunk.  Currently, your branch is attached to the trunk at\nthe next-to-last change set.\n\nFirst: update the trunk from the public repo:\n[you've first made sure that \"git diff\" produces no output]\n\n  git checkout master\n  git pull\n\nNow, return to your branch, and \"rebase\" relative to trunk (master):\n\n  git checkout my-topic\n  git rebase master\n\nIf there are no conflicts, this requires no more work from you.\nHowever, let's say there was one in ChangeLog, since you didn't\nfollow my advice and modified it anyway.\ngit rebase will tell you there was a conflict and in which\nfile, and instruct you to resolve it and then resume with\n\"git rebase --continue\" once that's done.\n\nSo you resolve as usual, by editing ChangeLog (which has the\nusual conflict markers), then type \"git rebase --continue\".\nThat will fail, with a diagnostic telling you to mark\nthe file as \"conflict resolved\" by doing this:\n\n  git add ChangeLog\n\nThen, finally, you can proceed (possibly onto more conflict resolution,\nif there are conflicts in other files):\n\n  git rebase --continue\n\nOnce it finishes, your changes on the branch are now relative to\nthe tip of the trunk.\n\nNow use git format-patch, as above.\n\n\nAmending the most recent change on your private branch\n======================================================\nLet's say you've just committed a change on your private\nbranch, and then realize that something about it is not right.\nIt's easy to adjust:\n\n  edit your files # this can include running \"git add NEW\" or \"git rm BAD\"\n  git commit --amend -a\n  git format-patch --stdout -1 > your-branch.diff\n\nThat replaces the most recent change-set with the revised one.\n\n\n\nCoreutils-specific:\n\nNo more ChangeLog files\n=======================\nDo not modify any of the ChangeLog files in coreutils.  Starting in\n2008, the policy changed.  Before, we would insert the exact same text\n(or worse, sometimes slightly differing) into both the ChangeLog file\nand the commit log.  Now we put that information only in the commit log,\nand generate the top-level ChangeLog file from logs at \"make dist\" time.\nAs such, there are strict requirements on the form of the commit log\nmessages.\n\n\nCommit log requirements\n=======================\nYour commit log should always start with a one-line summary, the second\nline should be blank, and the remaining lines are usually ChangeLog-style\nentries for all affected files.  However, it's fine -- even recommended --\nto write a few lines of prose describing the change, when the summary\nand ChangeLog entries don't give enough of the big picture.  Omit the\nleading TABs that you're used to seeing in a \"real\" ChangeLog file, but\nkeep the maximum line length at 72 or smaller, so that the generated\nChangeLog lines, each with its leading TAB, will not exceed 80 columns.\nAs for the ChangeLog-style content, please follow these guidelines:\n\n  https://www.gnu.org/prep/standards/standards.html#Change-Logs\n\nTry to make the summary line fit one of the following forms:\n\n  program_name: change-description\n  prog1, prog2: change-description\n  doc: change-description\n  tests: change-description\n  build: change-description\n  maint: change-description\n\nIf your commit fixes a bug, try to find the commit that introduced that\nbug.  If you do that, add a note in your new commit log saying something\nlike \"Introduced by commit v8.12-103-g54cbe6e.\" and add something like\n[bug introduced in coreutils-8.13] in the corresponding NEWS blurb.\nAssuming you found the bug in commit 54cbe6e6, \"git describe 54cbe6e6\"\nwill print the longer tag-relative string that you'll need.\nNote that we used to use an 8-byte SHA1 prefix like \"54cbe6e6\", because\nthat was automatically rendered as a clickable link by \"gitk\", but with\ngit-1.7.10, the more descriptive version-containing \"git describe\" format\nthat we now require is also highlighted.\n\n\nCurly braces: use judiciously\n=============================\nOmit the curly braces around an \"if\", \"while\", \"for\" etc. body only when\nthat body occupies a single line.  In every other case we require the braces.\nThis ensures that it is trivially easy to identify a single-*statement* loop:\neach has only one *line* in its body.\n\nOmitting braces with a single-line body is fine:\n\n     while (expr)\n       single_line_stmt ();\n\nHowever, the moment your loop/if/else body extends onto a second line,\nfor whatever reason (even if it's just an added comment), then you should\nadd braces.  Otherwise, it would be too easy to insert a statement just\nbefore that comment (without adding braces), thinking it is already a\nmulti-statement loop:\n\n     while (true)\n       /* comment... */      // BAD: multi-line body without braces\n       single_line_stmt ();\n\nDo this instead:\n\n     while (true)\n       {  /* Always put braces around a multi-line body.  */\n         /* explanation... */\n         single_line_stmt ();\n       }\n\nThere is one exception: when the second body line is not at the same\nindentation level as the first body line.\n\n     if (expr)\n       error (0, 0, _(\"a diagnostic that would make this line\"\n                      \" extend past the 80-column limit\"));\n\nIt is safe to omit the braces in the code above, since the\nfurther-indented second body line makes it obvious that this is still\na single-statement body.\n\nTo reiterate, don't do this:\n\n     if (expr)\n       while (expr_2)        // BAD: multi-line body without braces\n         {\n           ...\n         }\n\nDo this, instead:\n\n     if (expr)\n       {\n         while (expr_2)\n           {\n             ...\n           }\n       }\n\nHowever, there is one exception in the other direction, when even a\none-line block should have braces.  That occurs when that one-line,\nbrace-less block is an \"else\" block, and the corresponding \"then\" block\n*does* use braces.  In that case, either put braces around the \"else\"\nblock, or negate the \"if\"-condition and swap the bodies, putting the\none-line block first and making the longer, multi-line block be the\n\"else\" block.\n\n    if (expr)\n      {\n        ...\n        ...\n      }\n    else\n      x = y;    // BAD: braceless \"else\" with braced \"then\"\n\nThis is preferred, especially when the multi-line body is more than a\nfew lines long, because it is easier to read and grasp the semantics of\nan if-then-else block when the simpler block occurs first, rather than\nafter the more involved block:\n\n    if (!expr)\n      x = y;                  /* more readable */\n    else\n      {\n        ...\n        ...\n      }\n\nIf you'd rather not negate the condition, then add braces:\n\n    if (expr)\n      {\n        ...\n        ...\n      }\n    else\n      {\n        x = y;\n      }\n\n\nUse SPACE-only indentation in all[*] files\n==========================================\nWe use space-only indentation in nearly all files.\nIf you use Emacs and your coreutils working directory name matches,\nthis code enables the right mode:\n\n  ;; In coreutils, indent with spaces everywhere (not TABs).\n  ;; Exceptions: Makefile and ChangeLog modes.\n  (add-hook 'find-file-hook '(lambda ()\n    (if (and buffer-file-name\n             (string-match \"/coreutils\\\\>\" (buffer-file-name))\n             (not (string-equal mode-name \"Change Log\"))\n             (not (string-equal mode-name \"Makefile\")))\n        (setq indent-tabs-mode nil))))\n\nIf you use vim (7+ compiled with autocommands), and coreutils working\ndirectory name also matches, add the following in ~/.vimrc:\n\n  \" Set GNU style indentation, spaces instead of TABs\n  function! CoreutilsIndent()\n      \" Check if 'coreutils' is part of the current working directory\n      if match(getcwd(), \"coreutils\") > 0\n          \" The next 3 lines below set the GNU indentation\n          setlocal cinoptions=>4,n-2,{2,^-2,:2,=2,g0,h2,p5,t0,+2,(0,u0,w1,m1\n          setlocal shiftwidth=2\n          setlocal tabstop=8\n          \" Coreutils specific, expand TABs with spaces\n          setlocal expandtab\n      endif\n  endfunction\n\n  autocmd BufEnter *.c,*.h call CoreutilsIndent()\n\n[*] Makefile and ChangeLog files are exempt, of course.\n\n\nSend patches to the address listed in --help output\n===================================================\nPlease follow the guidelines in the \"Sending your patches.\" section of\ngit's own SubmittingPatches:\n\n  https://github.com/git/git/blob/master/Documentation/SubmittingPatches\n\n\nAdd documentation\n=================\nIf you add a feature or change some user-visible aspect of a program,\ndocument it.  If you add an option, document it both in --help output\n(i.e., in the usage function that generates the --help output) and in\ndoc/*.texi.  The man pages are generated from --help output, so\nyou shouldn't need to change anything under man/.  User-visible changes\nare usually documented in NEWS, too.\n\nWhen writing prose (documentation, comments, log entries), use an\nactive voice, not a passive one.  I.e., say \"print the frobnozzle\",\nnot \"the frobnozzle will be printed\".\n\nPlease add comments per the GNU Coding Standard:\n  https://www.gnu.org/prep/standards/html_node/Comments.html\n\n\nMinor syntactic preferences\n===========================\n[I hesitate to write this one down, because it appears to be an\n acquired taste, at least for native-English speakers.  It seems odd\n (if not truly backwards) to nearly anyone who doesn't have a strong\n mathematics background and perhaps a streak of something odd in their\n character ;-) ]\nIn writing arithmetic comparisons, use \"<\" and \"<=\" rather than\n\">\" and \">=\".  For some justification, read this:\n  http://www.gelato.unsw.edu.au/archives/git/0505/4507.html\n\nconst placement:\nWrite \"Type const *var\", not \"const Type *var\".\nFIXME: dig up justification\n\n\nBe nice to translators\n======================\nDon't change translatable strings if you can avoid it.\nIf you must rearrange individual lines (e.g., in multi-line --help\nstrings), extract and create new strings, rather than extracting\nand moving into existing blocks.  This avoids making unnecessary\nwork for translators.\n\n\nAdd tests\n==========\nNearly every significant change must be accompanied by a test suite\naddition that exercises it.  If you fix a bug, add at least one test that\nfails without the patch, but that succeeds once your patch is applied.\nIf you add a feature, add tests to exercise as much of the new code\nas possible.  If you add a new test file (as opposed to adding a test to\nan existing test file) add the new test file to 'tests/local.mk'.\nNote to run tests/misc/new-test in isolation you can do:\n\n  make check TESTS=tests/misc/new-test SUBDIRS=. VERBOSE=yes\n\nVariables that are significant for tests with their default values are:\n\n  VERBOSE=yes\n  RUN_EXPENSIVE_TESTS=no\n  RUN_VERY_EXPENSIVE_TESTS=no\n  SHELL=/bin/sh\n  NON_ROOT_USERNAME=nobody\n  NON_ROOT_GID=$(id -g $NON_ROOT_USERNAME)\n  COREUTILS_GROUPS=$(id -G)\n\nThere are hundreds of tests in the tests/ directories.  You can use\ntests/sample-test as a template, or one of the various Perl-based ones\nin tests/misc.\n\nIf writing tests is not your thing, don't worry too much about it,\nbut do provide scenarios, input/output pairs, or whatever, along with\nexamples of running the tool to demonstrate the new or changed feature,\nand someone else will massage that into a test (writing portable tests\ncan be a challenge).\n\n\nCopyright assignment\n====================\nIf your change is significant (i.e., if it adds more than ~10 lines),\nthen you'll have to have a copyright assignment on file with the FSF.\nSince that involves first an email exchange between you and the FSF,\nand then the exchange (FSF to you, then back) of an actual sheet of paper\nwith your signature on it, and finally, some administrative processing\nin Boston, the process can take a few weeks.\n\nThe forms to choose from are in gnulib's doc/Copyright/ directory.\nIf you want to assign a single change, you should use the file,\ndoc/Copyright/request-assign.changes:\n\n    https://www.gnu.org/software/gnulib/Copyright/request-assign.changes\n\nIf you would like to assign past and future contributions to a project,\nyou'd use doc/Copyright/request-assign.future:\n\n    https://www.gnu.org/software/gnulib/Copyright/request-assign.future\n\nYou may make assignments for up to four projects at a time.\n\nIn case you're wondering why we bother with all of this, read this:\n\n    https://www.gnu.org/licenses/why-assign.html\n\n\nRun \"make syntax-check\", or even \"make distcheck\"\n================================================\nMaking either of those targets runs many integrity and\nproject-specific policy-conformance tests.  For example, the former\nensures that you add no trailing blanks and no uses of certain deprecated\nfunctions.  The latter performs all \"syntax-check\" tests, and also\nensures that the build completes with no warnings when using a certain\nset of gcc -W... options.  Don't even bother running \"make distcheck\"\nunless you have a reasonably up to date installation including recent\nversions of gcc and the linux kernel, and modern GNU tools.\n\n\nEnsure that your changes are indented properly.\n===============================================\nFormat the code the way GNU indent does.\nFiltering most source files through \"indent --no-tabs\" should\ninduce no change in indentation.  Try not to add any more.\n\n\nAvoid trailing white space\n==========================\nYou may notice that the only trailing blanks in coreutils'\nversion-controlled files are in a single directory: tests/pr,\nwhich contains expected output from various invocations of pr.\n\nDo not add any more trailing blanks anywhere.  While \"make syntax-check\"\nwill alert you if you slip up, it's better to nip any problem in the\nbud, as you're typing.  A good way to help you adapt to this rule is\nto configure your editor to highlight any offending characters in the\nfiles you edit.  If you use Emacs, customize its font-lock mode\nor use its WhiteSpace mode:\n\n    https://www.emacswiki.org/emacs/WhiteSpace\n\nIf you use vim, add this to ~/.vimrc:\n\n    let c_space_errors=1\n    highlight RedundantSpaces ctermbg=red guibg=red\n    match RedundantSpaces /\\s\\+$\\| \\+\\ze\\t/\n\n\nGit can help too, by stopping you from committing any change that would\nadd trailing blanks.  The example pre-commit hook contains code to check\nfor trailing whitespace and spaces before tabs; enable it by moving it\nto the right place and making sure it is executable:\n\n    mv .git/hooks/pre-commit.sample .git/hooks/pre-commit\n\nWith a repository created by git-1.5.6 or older, use this command:\n\n    chmod +x .git/hooks/pre-commit\n\nTo manually check for whitespace errors before committing, you can use\n\n    git diff --check\n\nGit also has some settings to enable suitable internal whitespace checks.\nSee the manpage for git-apply for details.\n\n\n-------------------------------------------\n\nMiscellaneous useful git commands\n=================================\n\n  * gitk: give a graphical view of the revision graph of the current branch\n  * gitk --all: same, but display all branches\n  * git log: to get most of the same info in text form\n  * git log -p: same as above, but with diffs\n  * git log -p SOME_FILE: same as above, but limit to SOME_FILE\n  * git log -p -2 SOME_FILE: same as above, but print only two deltas\n  * git log -p -1: print the most recently committed change set\n  * git format-patch --stdout -1 > FILE: output the most recently committed\n      change set, in a format suitable to be submitted and/or applied via\n      \"git am FILE\".\n  * git reset --soft HEAD^: Commit the delta required to restore\n      state to the revision just before HEAD (i.e., next-to-last).\n  * git rebase -i master: run this from on a branch, and it gives\n      you an interface with which you can reorder and modify arbitrary\n      change sets on that branch.\n\n  * if you \"misplace\" a change set, i.e., via git reset --hard ..., so that\n    it's no longer reachable by any branch, you can use \"git fsck\" to find\n    its SHA1 and then tag it or cherry-pick it onto an existing branch.\n    For example, run this:\n      git fsck --lost-found HEAD && cd .git/lost-found/commit \\\n        && for i in *; do git show $i|grep SOME_IDENTIFYING_STRING \\\n        && echo $i; done\n    The \"git fsck ...\" command creates the .git/lost-found/... hierarchy\n    listing all unreachable objects.  Then the for loop\n    print SHA1s for commits that match via log or patch.\n    For example, say that found 556fbb57216b119155cdda824c98dc579b8121c8,\n    you could run \"git show 556fbb57216b119\" to examine the change set,\n    or \"git checkout -b found 556fbb5721\" to give it a branch name.\n    Finally, you might run \"git checkout master && git cherry-pick 556fbb5721\"\n    to put that change on the tip of \"master\".\n\n-------------------------------------------\n\nFinding things to do\n====================\nIf you don't know where to start, check out the TODO file for projects\nthat look like they're at your skill-/interest-level.  Another good\noption is always to improve tests.  You never know what you might\nuncover when you improve test coverage, and even if you don't find\nany bugs your contribution is sure to be appreciated.\n\nA good way to quickly assess current test coverage, for standard\nand root only tests, is to follow these steps (requires lcov to be installed):\n\n  # Do a standard run as the current user\n  make -j$(nproc) coverage\n\n  # Add the root only tests\n  sudo make -j$(nproc) build-coverage NON_ROOT_USERNAME=$USER SUBDIRS=.\n\n  # Generate the report with the combined results\n  make gen-coverage\n\n  # view the HTML report:\n  xdg-open doc/coverage/index.html\n\n========================================================================\nCopyright (C) 2009-2025 Free Software Foundation, Inc.\n\nPermission is granted to copy, distribute and/or modify this document\nunder the terms of the GNU Free Documentation License, Version 1.3 or\nany later version published by the Free Software Foundation; with no\nInvariant Sections, with no Front-Cover Texts, and with no Back-Cover\nTexts.  A copy of the license is included in the \"GNU Free\nDocumentation License\" file as part of this distribution.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 7.86328125,
          "content": "# Make coreutils.\t\t\t\t\t-*-Makefile-*-\n\n# Copyright (C) 1990-2025 Free Software Foundation, Inc.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nALL_RECURSIVE_TARGETS =\n\nSUBDIRS = po . gnulib-tests\n\nEXTRA_DIST =\t\t\t\t\\\n  .mailmap\t\t\t\t\\\n  .prev-version\t\t\t\t\\\n  .version\t\t\t\t\\\n  .vg-suppressions\t\t\t\\\n  README-install\t\t\t\\\n  THANKS.in\t\t\t\t\\\n  THANKS-to-translators\t\t\t\\\n  THANKStt.in\t\t\t\t\\\n  bootstrap\t\t\t\t\\\n  bootstrap.conf\t\t\t\\\n  build-aux/gen-lists-of-programs.sh\t\\\n  build-aux/gen-single-binary.sh\t\\\n  cfg.mk\t\t\t\t\\\n  dist-check.mk\t\t\t\t\\\n  maint.mk\t\t\t\t\\\n  tests/GNUmakefile\t\t\t\\\n  thanks-gen\n\ngen_progs_lists = $(top_srcdir)/build-aux/gen-lists-of-programs.sh\ngen_single_binary = $(top_srcdir)/build-aux/gen-single-binary.sh\n\n# Keep these in sync with bootstrap.conf:bootstrap_post_import_hook().\n# Use '$(top_srcdir)/m4' and '$(srcdir)/src' for the benefit of non-GNU\n# makes: it is with those directories that 'cu-progs.m4' and 'cu-progs.mk'\n# appear in our dependencies.\n$(top_srcdir)/m4/cu-progs.m4: $(gen_progs_lists)\n\t$(AM_V_GEN)rm -f $@ $@-t \\\n\t  && $(SHELL) $(gen_progs_lists) --autoconf >$@-t \\\n\t  && chmod a-w $@-t && mv -f $@-t $@\n$(srcdir)/src/cu-progs.mk: $(gen_progs_lists)\n\t$(AM_V_GEN)rm -f $@ $@-t \\\n\t  && $(SHELL) $(gen_progs_lists) --automake >$@-t \\\n\t  && chmod a-w $@-t && mv -f $@-t $@\n$(srcdir)/src/single-binary.mk: $(gen_single_binary) $(srcdir)/src/local.mk\n\t$(AM_V_GEN)rm -f $@ $@-t \\\n\t  && $(SHELL) $(gen_single_binary) $(srcdir)/src/local.mk >$@-t \\\n\t  && chmod a-w $@-t && mv -f $@-t $@\n\nACLOCAL_AMFLAGS = -I m4\n\n# Shortcut targets to make it easier to run (very) expensive tests.\ncheck-expensive:\n\t$(MAKE) check RUN_EXPENSIVE_TESTS=yes\ncheck-very-expensive:\n\t$(MAKE) check-expensive RUN_VERY_EXPENSIVE_TESTS=yes\n\n# Just prior to distribution, ...\n# transform the automake-generated rule that runs 'rm -f rm'.\n# On some systems, that command would fail with a diagnostic like\n# \"rm: cannot unlink 'rm': Text file busy\" when '.' appears so early\n# in the shell's search path that running 'rm' would run the 'rm'\n# executable in the current directory.\n# Similarly, adjust the clean-binPROGRAMS rule.\nrm_subst = \\\n  s!(rm -f (rm\\b|\\$$\\(bin_PROGRAMS\\)$$))!$$1 > /dev/null 2>&1 || /bin/$$1!\n\nBUILT_SOURCES = .version\n.version:\n\t$(AM_V_GEN)echo $(VERSION) > $@-t && mv $@-t $@\n\n# Have no read-only files in the tarball to allow easy removal.\n# Have .tarball-version based versions only in tarball builds.\n# The perl substitution is to change some key uses of \"rm\" to \"/bin/rm\".\n# See the rm_subst comment for details.\n# The touch avoids a subtle, spurious \"make distcheck\" failure.\ndist-hook: gen-ChangeLog\n\t$(AM_V_GEN)chmod -R +rw $(distdir)\n\t$(AM_V_GEN)echo $(VERSION) > $(distdir)/.tarball-version\n\t$(AM_V_at)perl -pi -e '$(rm_subst)' $(distdir)/Makefile.in\n\t$(AM_V_at)touch $(distdir)/doc/constants.texi \\\n\t  $(distdir)/doc/coreutils.info\n\ngen_start_ver = 8.31\n.PHONY: gen-ChangeLog\ngen-ChangeLog:\n\t$(AM_V_GEN)if test -d .git; then\t\t\t\t\\\n\t  log_fix=\"$(srcdir)/build-aux/git-log-fix\";\t\t\t\\\n\t  test -e \"$$log_fix\"\t\t\t\t\t\t\\\n\t    && amend_git_log=\"--amend=$$log_fix\"\t\t\t\\\n\t    || amend_git_log=;\t\t\t\t\t\t\\\n\t  $(top_srcdir)/build-aux/gitlog-to-changelog $$amend_git_log\t\\\n\t    -- v$(gen_start_ver)~.. > $(distdir)/cl-t &&\t\t\\\n\t    { printf '\\n\\nSee the source repo for older entries\\n'\t\\\n\t      >> $(distdir)/cl-t &&\t\t\t\t\t\\\n\t      rm -f $(distdir)/ChangeLog &&\t\t\t\t\\\n\t      mv $(distdir)/cl-t $(distdir)/ChangeLog; }\t\t\\\n\tfi\n\nALL_RECURSIVE_TARGETS += distcheck-hook\ndistcheck-hook: check-ls-dircolors\n\t$(MAKE) my-distcheck\n\t$(MAKE) taint-distcheck\n\nDISTCLEANFILES = VERSION\nMAINTAINERCLEANFILES = THANKS-to-translators\nTHANKS-to-translators: po/LINGUAS THANKStt.in\n\t$(AM_V_GEN)(\t\t\t\t\t\t\t\\\n\t  cat $(srcdir)/THANKStt.in;\t\t\t\t\t\\\n\t  for lang in `cat $(srcdir)/po/LINGUAS`; do\t\t\t\\\n\t    echo https://translationproject.org/team/$$lang.html;\t\\\n\t  done;\t\t\t\t\t\t\t\t\\\n\t) > $@-tmp && mv $@-tmp $@\n\n# Ensure that the sets of two-letter codes in ls.c and dircolors.c\n# remain in sync.\n.PHONY: check-ls-dircolors\ncheck-ls-dircolors:\n\t$(AM_V_GEN)dc=$$(sed -n '/static.*ls_codes\\[/,/};'/p\t\\\n\t    $(srcdir)/src/dircolors.c\t\t\t\t\\\n\t  |sed -n '/^  *\"/p'|tr , '\\n'|sed 's/^  *//'\t\t\\\n\t  |sed -n 's/^\"\\(..\\)\"/\\1/p'|sort -u);\t\t\t\\\n\tls=$$(sed -n '/static.*indicator_name\\[/,/};'/\\p\t\\\n\t    $(srcdir)/src/ls.c\t\t\t\t\t\\\n\t  |sed -n '/^  *{/ { s/{.\\([a-z]\\).,.\\([a-z]\\).}/\"\\1\\2\"/g; p; }' \\\n\t  |tr , '\\n'|sed 's/^  *//'\t\t\\\n\t  |sed -n 's/^\"\\(..\\)\"/\\1/p'|sort -u);\t\t\t\\\n\ttest \"$$dc\" = \"$$ls\"\n\n# Sort in traditional ASCII order, regardless of the current locale;\n# otherwise we may get into trouble with distinct strings that the\n# current locale considers to be equal.\nASSORT = LC_ALL=C sort\n\n# Extract all lines up to the first one starting with \"##\".\nprologue = perl -ne '/^\\#\\#/ and exit; print' $(srcdir)/THANKS.in\n\n# FIXME: avoid dependency to build our own 'sort' for 'make dist' ...\n# when common platforms have a functional case-folding implementation:\n#   $ test 'abácad' = \"$(printf '%s\\n' 'ab' 'ác' 'ad' \\\n#                          | LC_ALL=en_US.UTF-8 sort -f \\\n#                          | tr -d '\\n')\" && echo GOOD || echo BAD\n# Note we don't enable case folding (-f) in the sort below, due to bugs\n# in the I18N patch used in many distros (as of 2015).  Also using our\n# own src/sort here would induce awkward dependencies for `make dist`.\nTHANKS: THANKS.in Makefile.am .mailmap thanks-gen .version\n\t$(AM_V_GEN)rm -f $@-t $@;\t\t\t\t\t\\\n\t{\t\t\t\t\t\t\t\t\\\n\t  $(prologue); echo;\t\t\t\t\t\t\\\n\t  { perl -ne '/^$$/.../^$$/ and !/^$$/ and s/  +/\\0/ and print'\t\\\n\t      $(srcdir)/THANKS.in;\t\t\t\t\t\\\n\t    git log --pretty=format:'%aN%x00%aE'\t\t\t\\\n\t      | $(ASSORT) -u;\t\t\t\t\t\t\\\n\t  } | $(srcdir)/thanks-gen\t\t\t\t\t\\\n\t    | LC_ALL=en_US.UTF-8 sort -k1,1;\t\t\t\t\\\n\t  echo;\t\t\t\t\t\t\t\t\\\n\t  printf ';; %s\\n' 'Local Variables:' 'coding: utf-8' End:;\t\\\n\t} > $@-t && chmod a-w $@-t && mv $@-t $@\n\n# Some of our git hook scripts are supposed to be identical to git's samples.\n# See if they are still in sync.\n.PHONY: check-git-hook-script-sync\ncheck-git-hook-script-sync:\n\t@fail=0;\t\t\t\t\t\t\t\\\n\tt=$$(mktemp -d)\t\t\t\t\t\t\t\\\n\t  && cd $$t && git init -q && cd .git/hooks\t\t\t\\\n\t  && for i in pre-commit pre-applypatch applypatch-msg; do\t\\\n\t       diff $(abs_top_srcdir)/scripts/git-hooks/$$i $$i.sample\t\\\n\t\t || fail=1;\t\t\t\t\t\t\\\n\t     done;\t\t\t\t\t\t\t\\\n\trm -rf $$t;\t\t\t\t\t\t\t\\\n\ttest $$fail = 0\n\n# If we are building a single-binary, create symlinks or shebangs for\n# the selected tools when installing.\ninstall-exec-hook:\n\t$(AM_V_at)ctrans=$$(printf coreutils | sed -e \"$(transform)\");\t\\\n\tfor p in x $(single_binary_progs); do\t\t\t\t\\\n\t  test $$p = x && continue;\t\t\t\t\t\\\n\t  ptrans=$$(printf '%s' \"$$p\" | sed -e \"$(transform)\");\t\t\\\n\t  rm -f $(DESTDIR)$(bindir)/$$ptrans$(EXEEXT) || exit $$?;\t\\\n\t  if test \"x$(single_binary_install_type)\" = xshebangs; then\t\\\n\t    printf '#!%s --coreutils-prog-shebang=%s\\n'\t\t\t\\\n\t      $(bindir)/$$ctrans$(EXEEXT) $$p\t\t\t\t\\\n\t      >$(DESTDIR)$(bindir)/$$ptrans$(EXEEXT) || exit $$?;\t\\\n\t    chmod a+x,a-w $(DESTDIR)$(bindir)/$$ptrans$(EXEEXT) || exit $$?;\\\n\t  else\t\t\t\t\t\t\t\t\\\n\t    $(LN_S) -s $$ctrans$(EXEEXT)\t\t\t\t\\\n\t      $(DESTDIR)$(bindir)/$$ptrans$(EXEEXT) || exit $$?;\t\\\n\t  fi\t\t\t\t\t\t\t\t\\\n\tdone\n\nnoinst_LIBRARIES =\nMOSTLYCLEANFILES =\nCLEANFILES =\nMOSTLYCLEANDIRS =\n\nAM_CPPFLAGS = -Ilib -I$(top_srcdir)/lib -Isrc -I$(top_srcdir)/src\n\ninclude $(top_srcdir)/gl/local.mk\ninclude $(top_srcdir)/lib/local.mk\ninclude $(top_srcdir)/src/local.mk\ninclude $(top_srcdir)/doc/local.mk\ninclude $(top_srcdir)/man/local.mk\ninclude $(top_srcdir)/tests/local.mk\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 247.5244140625,
          "content": "GNU coreutils NEWS                                    -*- outline -*-\n\n* Noteworthy changes in release ?.? (????-??-??) [?]\n\n** Bug fixes\n\n  cp fixes support for --update=none-fail, which would have been\n  rejected as an invalid option.\n  [bug introduced in coreutils-9.5]\n\n  cp,mv --update no longer overrides --interactive or --force.\n  [bug introduced in coreutils-9.3]\n\n  csplit no longer creates empty files given empty input.\n  [This bug was present in \"the beginning\".]\n\n  ls and printf fix shell quoted output in the edge case of escaped\n  first and last characters, and single quotes in the string.\n  [bug introduced in coreutils-8.26]\n\n  ls -l no longer outputs \"Permission denied\" errors on NFS\n  which may happen with files without read permission, and which resulted\n  in inaccurate indication of ACLs (missing '+' flag after mode).\n  [bug introduced in coreutils-9.4]\n\n  mv works again with macFUSE file systems.  Previously it would\n  have exited with a \"Function not implemented\" error.\n  [bug introduced in coreutils-8.28]\n\n  nproc gives more consistent results on systems with more than 1024 CPUs.\n  Previously it would have ignored the affinity mask on such systems.\n  [bug introduced with nproc in coreutils-8.1]\n\n  numfmt --from=iec-i now works with numbers without a suffix.\n  Previously such numbers were rejected with an error.\n  [bug introduced with numfmt in coreutils-8.21]\n\n  printf now diagnoses attempts to treat empty strings as numbers,\n  as per POSIX. For example, \"printf '%d' ''\" now issues a diagnostic\n  and fails instead of silently succeeding.\n  [This bug was present in \"the beginning\".]\n\n  pwd no longer outputs an erroneous double slash on systems\n  where the system getcwd() was completely replaced.\n  [bug introduced in coreutils-9.2]\n\n  'shuf' generates more-random output when the output is small.\n  [bug introduced in coreutils-8.6]\n\n  `tail --follow=name` no longer waits indefinitely for watched\n  file names that are moved elsewhere within the same file system.\n  [bug introduced in coreutils-8.24]\n\n  `tail --follow` without --retry, will consistently exit with failure status\n  where inotify is not used, when all followed files become inaccessible.\n  [This bug was present in \"the beginning\".]\n\n  `tail --follow --pid=PID` will now exit when the PID dies,\n  even in the presence of blocking inputs like unopened fifos.\n  [This bug was present in \"the beginning\".]\n\n  'tail -c 4096 /dev/zero' no longer loops forever.\n  [This bug was present in \"the beginning\".]\n\n** Changes in behavior\n\n  'factor' now buffers output more efficiently in some cases.\n\n  install -C now dereferences symlink sources when comparing,\n  rather than always treating as different and performing the copy.\n\n  kill -l and -t now list signal 0, as it's a valid signal to send.\n\n  ls's -f option now simply acts like -aU, instead of also ignoring\n  some earlier options.  For example 'ls -fl' and 'ls -lf' are now\n  equivalent because -f no longer ignores an earlier -l.  The new\n  behavior is more orthogonal and is compatible with FreeBSD.\n\n  stat -f -c%T now reports the \"fuseblk\" file system type as \"fuse\",\n  given that there is no longer a distinct \"ctl\" fuse variant file system.\n\n** New Features\n\n  cksum -a now supports the \"crc32b\" option, which calculates the CRC\n  of the input as defined by ITU V.42, as used by gzip for example.\n  For performance pclmul instructions are used where supported.\n\n  ls now supports the --sort=name option,\n  to explicitly select the default operation of sorting by file name.\n\n  printf now supports indexed arguments, using the POSIX:2024 specified\n  %<i>$ format, where '<i>' is an integer referencing a particular argument,\n  thus allowing repetition or reordering of printf arguments.\n\n  test supports the POSIX:2024 specified '<' and '>' operators with strings,\n  to compare the string locale collating order.\n\n  timeout now supports the POSIX:2024 specified -f, and -p short options,\n  corresponding to --foreground, and --preserve-status respectively.\n\n** Improvements\n\n  cksum -a crc, makes use of AVX2, AVX512, and ARMv8 SIMD extensions\n  for time reductions of up to 40%, 60%, and 80% respectively.\n\n  'head -c NUM', 'head -n NUM', 'nl -l NUM', 'nproc --ignore NUM',\n  'tail -c NUM', 'tail -n NUM', and 'tail --max-unchanged-stats NUM’\n  no longer fail merely because NUM stands for 2**64 or more.\n\n  sort operates more efficiently when used on pseudo files with\n  an apparent size of 0, like those in /proc.\n\n  stat and tail now know about the \"bcachefs\", and \"pidfs\" file system types.\n  stat -f -c%T now reports the file system type,\n  and tail -f uses inotify for these file systems.\n\n  wc now reads a minimum of 256KiB at a time.\n  This was previously 16KiB and increasing to 256KiB was seen to increase\n  wc -l performance by about 10% when reading cached files on modern systems.\n\n\n* Noteworthy changes in release 9.5 (2024-03-28) [stable]\n\n** Bug fixes\n\n  chmod -R now avoids a race where an attacker may replace a traversed file\n  with a symlink, causing chmod to operate on an unintended file.\n  [This bug was present in \"the beginning\".]\n\n  cp, mv, and install no longer issue spurious diagnostics like \"failed\n  to preserve ownership\" when copying to GNU/Linux CIFS file systems.\n  They do this by working around some Linux CIFS bugs.\n\n  cp --no-preserve=mode will correctly maintain set-group-ID bits\n  for created directories.  Previously on systems that didn't support ACLs,\n  cp would have reset the set-group-ID bit on created directories.\n  [bug introduced in coreutils-8.20]\n\n  join and uniq now support multi-byte characters better.\n  For example, 'join -tX' now works even if X is a multi-byte character,\n  and both programs now treat multi-byte characters like U+3000\n  IDEOGRAPHIC SPACE as blanks if the current locale treats them so.\n\n  numfmt options like --suffix no longer have an arbitrary 127-byte limit.\n  [bug introduced with numfmt in coreutils-8.21]\n\n  mktemp with --suffix now better diagnoses templates with too few X's.\n  Previously it conflated the insignificant --suffix in the error.\n  [bug introduced in coreutils-8.1]\n\n  sort again handles thousands grouping characters in single-byte locales\n  where the grouping character is greater than CHAR_MAX.  For e.g. signed\n  character platforms with a 0xA0 (aka &nbsp) grouping character.\n  [bug introduced in coreutils-9.1]\n\n  split --line-bytes with a mixture of very long and short lines\n  no longer overwrites the heap (CVE-2024-0684).\n  [bug introduced in coreutils-9.2]\n\n  tail no longer mishandles input from files in /proc and /sys file systems,\n  on systems with a page size larger than the stdio BUFSIZ.\n  [This bug was present in \"the beginning\".]\n\n  timeout avoids a narrow race condition, where it might kill arbitrary\n  processes after a failed process fork.\n  [bug introduced with timeout in coreutils-7.0]\n\n  timeout avoids a narrow race condition, where it might fail to\n  kill monitored processes immediately after forking them.\n  [bug introduced with timeout in coreutils-7.0]\n\n  wc no longer fails to count unprintable characters as parts of words.\n  [bug introduced in textutils-2.1]\n\n** Changes in behavior\n\n  base32 and base64 no longer require padding when decoding.\n  Previously an error was given for non padded encoded data.\n\n  base32 and base64 have improved detection of corrupted encodings.\n  Previously encodings with non zero padding bits were accepted.\n\n  basenc --base16 -d now supports lower case hexadecimal characters.\n  Previously an error was given for lower case hex digits.\n\n  cp --no-clobber, and mv -n no longer exit with failure status if\n  existing files are encountered in the destination.  Instead they revert\n  to the behavior from before v9.2, silently skipping existing files.\n\n  ls --dired now implies long format output without hyperlinks enabled,\n  and will take precedence over previously specified formats or hyperlink mode.\n\n  numfmt will accept lowercase 'k' to indicate Kilo or Kibi units on input,\n  and uses lowercase 'k' when outputting such units in '--to=si' mode.\n\n  pinky no longer tries to canonicalize the user's login location by default,\n  rather requiring the new --lookup option to enable this often slow feature.\n\n  wc no longer ignores encoding errors when counting words.\n  Instead, it treats them as non white space.\n\n** New features\n\n  chgrp now accepts the --from=OWNER:GROUP option to restrict changes to files\n  with matching current OWNER and/or GROUP, as already supported by chown(1).\n\n  chmod adds support for -h, -H,-L,-P, and --dereference options, providing\n  more control over symlink handling.  This supports more secure handling of\n  CLI arguments, and is more consistent with chown, and chmod on other systems.\n\n  cp now accepts the --keep-directory-symlink option (like tar), to preserve\n  and follow existing symlinks to directories in the destination.\n\n  cp and mv now accept the --update=none-fail option, which is similar\n  to the --no-clobber option, except that existing files are diagnosed,\n  and the command exits with failure status if existing files.\n  The -n,--no-clobber option is best avoided due to platform differences.\n\n  env now accepts the -a,--argv0 option to override the zeroth argument\n  of the command being executed.\n\n  mv now accepts an --exchange option, which causes the source and\n  destination to be exchanged.  It should be combined with\n  --no-target-directory (-T) if the destination is a directory.\n  The exchange is atomic if source and destination are on a single\n  file system that supports atomic exchange; --exchange is not yet\n  supported in other situations.\n\n  od now supports printing IEEE half precision floating point with -t fH,\n  or brain 16 bit floating point with -t fB, where supported by the compiler.\n\n  tail now supports following multiple processes, with repeated --pid options.\n\n** Improvements\n\n  cp,mv,install,cat,split now read and write a minimum of 256KiB at a time.\n  This was previously 128KiB and increasing to 256KiB was seen to increase\n  throughput by 10-20% when reading cached files on modern systems.\n\n  env,kill,timeout now support unnamed signals. kill(1) for example now\n  supports sending such signals, and env(1) will list them appropriately.\n\n  SELinux operations in file copy operations are now more efficient,\n  avoiding unneeded MCS/MLS label translation.\n\n  sort no longer dynamically links to libcrypto unless -R is used.\n  This decreases startup overhead in the typical case.\n\n  wc is now much faster in single-byte locales and somewhat faster in\n  multi-byte locales.\n\n\n* Noteworthy changes in release 9.4 (2023-08-29) [stable]\n\n** Bug fixes\n\n  On GNU/Linux s390x and alpha, programs like 'cp' and 'ls' no longer\n  fail on files with inode numbers that do not fit into 32 bits.\n  [This bug was present in \"the beginning\".]\n\n  'b2sum --check' will no longer read unallocated memory when\n  presented with malformed checksum lines.\n  [bug introduced in coreutils-9.2]\n\n  'cp --parents' again succeeds when preserving mode for absolute directories.\n  Previously it would have failed with a \"No such file or directory\" error.\n  [bug introduced in coreutils-9.1]\n\n  'cp --sparse=never' will avoid copy-on-write (reflinking) and copy offloading,\n  to ensure no holes present in the destination copy.\n  [bug introduced in coreutils-9.0]\n\n  cksum again diagnoses read errors in its default CRC32 mode.\n  [bug introduced in coreutils-9.0]\n\n  'cksum --check' now ensures filenames with a leading backslash character\n  are escaped appropriately in the status output.\n  This also applies to the standalone checksumming utilities.\n  [bug introduced in coreutils-8.25]\n\n  dd again supports more than two multipliers for numbers.\n  Previously numbers of the form '1024x1024x32' gave \"invalid number\" errors.\n  [bug introduced in coreutils-9.1]\n\n  factor, numfmt, and tsort now diagnose read errors on the input.\n  [This bug was present in \"the beginning\".]\n\n  'install --strip' now supports installing to files with a leading hyphen.\n  Previously such file names would have caused the strip process to fail.\n  [This bug was present in \"the beginning\".]\n\n  ls now shows symlinks specified on the command line that can't be traversed.\n  Previously a \"Too many levels of symbolic links\" diagnostic was given.\n  [This bug was present in \"the beginning\".]\n\n  pinky, uptime, users, and who no longer misbehave on 32-bit GNU/Linux\n  platforms like x86 and ARM where time_t was historically 32 bits.\n  Also see the new --enable-systemd option mentioned below.\n  [bug introduced in coreutils-9.0]\n\n  'pr --length=1 --double-space' no longer enters an infinite loop.\n  [This bug was present in \"the beginning\".]\n\n  shred again operates on Solaris when built for 64 bits.\n  Previously it would have exited with a \"getrandom: Invalid argument\" error.\n  [bug introduced in coreutils-9.0]\n\n  tac now handles short reads on its input.  Previously it may have exited\n  erroneously, especially with large input files with no separators.\n  [This bug was present in \"the beginning\".]\n\n  'uptime' no longer incorrectly prints \"0 users\" on OpenBSD,\n  and is being built again on FreeBSD and Haiku.\n  [bugs introduced in coreutils-9.2]\n\n  'wc -l' and 'cksum' no longer crash with an \"Illegal instruction\" error\n  on x86 Linux kernels that disable XSAVE YMM.  This was seen on Xen VMs.\n  [bug introduced in coreutils-9.0]\n\n** Changes in behavior\n\n  'cp -v' and 'mv -v' will no longer output a message for each file skipped\n  due to -i, or -u.  Instead they only output this information with --debug.\n  I.e., 'cp -u -v' etc. will have the same verbosity as before coreutils-9.3.\n\n  'cksum -b' no longer prints base64-encoded checksums.  Rather that\n  short option is reserved to better support emulation of the standalone\n  checksum utilities with cksum.\n\n  'mv dir x' now complains differently if x/dir is a nonempty directory.\n  Previously it said \"mv: cannot move 'dir' to 'x/dir': Directory not empty\",\n  where it was unclear whether 'dir' or 'x/dir' was the problem.\n  Now it says \"mv: cannot overwrite 'x/dir': Directory not empty\".\n  Similarly for other renames where the destination must be the problem.\n  [problem introduced in coreutils-6.0]\n\n** Improvements\n\n  cp, mv, and install now avoid copy_file_range on linux kernels before 5.3\n  irrespective of which kernel version coreutils is built against,\n  reinstating that behavior from coreutils-9.0.\n\n  comm, cut, join, od, and uniq will now exit immediately upon receiving a\n  write error, which is significant when reading large / unbounded inputs.\n\n  split now uses more tuned access patterns for its potentially large input.\n  This was seen to improve throughput by 5% when reading from SSD.\n\n  split now supports a configurable $TMPDIR for handling any temporary files.\n\n  tac now falls back to '/tmp' if a configured $TMPDIR is unavailable.\n\n  'who -a' now displays the boot time on Alpine Linux, OpenBSD,\n  Cygwin, Haiku, and some Android distributions\n\n  'uptime' now succeeds on some Android distributions, and now counts\n  VM saved/sleep time on GNU (Linux, Hurd, kFreeBSD), NetBSD, OpenBSD,\n  Minix, and Cygwin.\n\n  On GNU/Linux platforms where utmp-format files have 32-bit timestamps,\n  pinky, uptime, and who can now work for times after the year 2038,\n  so long as systemd is installed, you configure with a new, experimental\n  option --enable-systemd, and you use the programs without file arguments.\n  (For example, with systemd 'who /var/log/wtmp' does not work because\n  systemd does not support the equivalent of /var/log/wtmp.)\n\n\n* Noteworthy changes in release 9.3 (2023-04-18) [stable]\n\n** Bug fixes\n\n  cp --reflink=auto (the default), mv, and install\n  will again fall back to a standard copy in more cases.\n  Previously copies could fail with permission errors on\n  more restricted systems like android or containers etc.\n  [bug introduced in coreutils-9.2]\n\n  cp --recursive --backup will again operate correctly.\n  Previously it may have issued \"File exists\" errors when\n  it failed to appropriately rename files being replaced.\n  [bug introduced in coreutils-9.2]\n\n  date --file and dircolors will now diagnose a failure to read a file.\n  Previously they would have silently ignored the failure.\n  [This bug was present in \"the beginning\".]\n\n  md5sum --check again correctly prints the status of each file checked.\n  Previously the status for files was printed as 'OK' once any file had passed.\n  This also applies to cksum, sha*sum, and b2sum.\n  [bug introduced in coreutils-9.2]\n\n  wc will now diagnose if any total counts have overflowed.\n  [This bug was present in \"the beginning\".]\n\n  `wc -c` will again correctly update the read offset of inputs.\n  Previously it deduced the size of inputs while leaving the offset unchanged.\n  [bug introduced in coreutils-8.27]\n\n  Coreutils programs no longer fail for timestamps past the year 2038\n  on obsolete configurations with 32-bit signed time_t, because the\n  build procedure now rejects these configurations.\n  [This bug was present in \"the beginning\".]\n\n** Changes in behavior\n\n  'cp -n' and 'mv -n' now issue an error diagnostic if skipping a file,\n  to correspond with -n inducing a nonzero exit status as of coreutils 9.2.\n  Similarly 'cp -v' and 'mv -v' will output a message for each file skipped\n  due to -n, -i, or -u.\n\n** New features\n\n  cp and mv now support --update=none to always skip existing files\n  in the destination, while not affecting the exit status.\n  This is equivalent to the --no-clobber behavior from before v9.2.\n\n\n* Noteworthy changes in release 9.2 (2023-03-20) [stable]\n\n** Bug fixes\n\n  'comm --output-delimiter=\"\" --total' now delimits columns in the total\n  line with the NUL character, consistent with NUL column delimiters in\n  the rest of the output.  Previously no delimiters were used for the\n  total line in this case.\n  [bug introduced with the --total option in coreutils-8.26]\n\n  'cp -p' no longer has a security hole when cloning into a dangling\n  symbolic link on macOS 10.12 and later.\n  [bug introduced in coreutils-9.1]\n\n  'cp -rx / /mnt' no longer complains \"cannot create directory /mnt/\".\n  [bug introduced in coreutils-9.1]\n\n  cp, mv, and install avoid allocating too much memory, and possibly\n  triggering \"memory exhausted\" failures, on file systems like ZFS,\n  which can return varied file system I/O block size values for files.\n  [bug introduced in coreutils-6.0]\n\n  cp, mv, and install now immediately acknowledge transient errors\n  when creating copy-on-write or cloned reflink files, on supporting\n  file systems like XFS, BTRFS, APFS, etc.\n  Previously they would have tried again with other copy methods\n  which may have resulted in data corruption.\n  [bug introduced in coreutils-7.5 and enabled by default in coreutils-9.0]\n\n  cp, mv, and install now handle ENOENT failures across CIFS file systems,\n  falling back from copy_file_range to a better supported standard copy.\n  [issue introduced in coreutils-9.0]\n\n  'mv --backup=simple f d/' no longer mistakenly backs up d/f to f~.\n  [bug introduced in coreutils-9.1]\n\n  rm now fails gracefully when memory is exhausted.\n  Previously it may have aborted with a failed assertion in some cases.\n  [This bug was present in \"the beginning\".]\n\n  rm -d (--dir) now properly handles unreadable empty directories.\n  E.g., before, this would fail to remove d: mkdir -m0 d; src/rm -d d\n  [bug introduced in v8.19 with the addition of this option]\n\n  runcon --compute no longer looks up the specified command in the $PATH\n  so that there is no mismatch between the inspected and executed file.\n  [bug introduced when runcon was introduced in coreutils-6.9.90]\n\n  'sort -g' no longer infloops when given multiple NaNs on platforms\n  like x86_64 where 'long double' has padding bits in memory.\n  Although the fix alters sort -g's NaN ordering, that ordering has\n  long been documented to be platform-dependent.\n  [bug introduced 1999-05-02 and only partly fixed in coreutils-8.14]\n\n  stty ispeed and ospeed options no longer accept and silently ignore\n  invalid speed arguments, or give false warnings for valid speeds.\n  Now they're validated against both the general accepted set,\n  and the system supported set of valid speeds.\n  [This bug was present in \"the beginning\".]\n\n  stty now wraps output appropriately for the terminal width.\n  Previously it may have output 1 character too wide for certain widths.\n  [bug introduced in coreutils-5.3]\n\n  tail --follow=name works again with non seekable files.  Previously it\n  exited with an \"Illegal seek\" error when such a file was replaced.\n  [bug introduced in fileutils-4.1.6]\n\n  'wc -c' will again efficiently determine the size of large files\n  on all systems.  It no longer redundantly reads data from certain\n  sized files larger than SIZE_MAX.\n  [bug introduced in coreutils-8.24]\n\n** Changes in behavior\n\n  Programs now support the new Ronna (R), and Quetta (Q) SI prefixes,\n  corresponding to 10^27 and 10^30 respectively,\n  along with their binary counterparts Ri (2^90) and Qi (2^100).\n  In some cases (e.g., 'sort -h') these new prefixes simply work;\n  in others, where they exceed integer width limits, they now elicit\n  the same integer overflow diagnostics as other large prefixes.\n\n  'cp --reflink=always A B' no longer leaves behind a newly created\n  empty file B merely because copy-on-write clones are not supported.\n\n  'cp -n' and 'mv -n' now exit with nonzero status if they skip their\n  action because the destination exists, and likewise for 'cp -i',\n  'ln -i', and 'mv -i' when the user declines.  (POSIX specifies this\n  for 'cp -i' and 'mv -i'.)\n\n  cp, mv, and install again read in multiples of the reported block size,\n  to support unusual devices that may have this constraint.\n  [behavior inadvertently changed in coreutils-7.2]\n\n  du --apparent now counts apparent sizes only of regular files and\n  symbolic links.  POSIX does not specify the meaning of apparent\n  sizes (i.e., st_size) for other file types, and counting those sizes\n  could cause confusing and unwanted size mismatches.\n\n  'ls -v' and 'sort -V' go back to sorting \".0\" before \".A\",\n  reverting to the behavior in coreutils-9.0 and earlier.\n  This behavior is now documented.\n\n  ls --color now matches a file extension case sensitively\n  if there are different sequences defined for separate cases.\n\n  printf unicode \\uNNNN, \\UNNNNNNNN syntax, now supports all valid\n  unicode code points.  Previously is was restricted to the C\n  universal character subset, which restricted most points <= 0x9F.\n\n  runcon now exits with status 125 for internal errors.  Previously upon\n  internal errors it would exit with status 1, which was less distinguishable\n  from errors from the invoked command.\n\n  'split -n N' now splits more evenly when the input size is not a\n  multiple of N, by creating N output files whose sizes differ by at\n  most 1 byte.  Formerly, it did this only when the input size was\n  less than N.\n\n  'stat -c %s' now prints sizes as unsigned, consistent with 'ls'.\n\n** New Features\n\n  cksum now accepts the --base64 (-b) option to print base64-encoded\n  checksums.  It also accepts/checks such checksums.\n\n  cksum now accepts the --raw option to output a raw binary checksum.\n  No file name or other information is output in this mode.\n\n  cp, mv, and install now accept the --debug option to\n  print details on how a file is being copied.\n\n  factor now accepts the --exponents (-h) option to print factors\n  in the form p^e, rather than repeating the prime p, e times.\n\n  ls now supports the --time=modification option, to explicitly\n  select the default mtime timestamp for display and sorting.\n\n  mv now supports the --no-copy option, which causes it to fail when\n  asked to move a file to a different file system.\n\n  split now accepts options like '-n SIZE' that exceed machine integer\n  range, when they can be implemented as if they were infinity.\n\n  split -n now accepts piped input even when not in round-robin mode,\n  by first copying input to a temporary file to determine its size.\n\n  wc now accepts the --total={auto,never,always,only} option\n  to give explicit control over when the total is output.\n\n** Improvements\n\n  cp --sparse=auto (the default), mv, and install,\n  will use the copy_file_range syscall now also with sparse files.\n  This may be more efficient, by avoiding user space copies,\n  and possibly employing copy offloading or reflinking,\n  for the non sparse portion of such sparse files.\n\n  On macOS, cp creates a copy-on-write clone in more cases.\n  Previously cp would only do this when preserving mode and timestamps.\n\n  date --debug now diagnoses if multiple --date or --set options are\n  specified, as only the last specified is significant in that case.\n\n  rm outputs more accurate diagnostics in the presence of errors\n  when removing directories.  For example EIO will be faithfully\n  diagnosed, rather than being conflated with ENOTEMPTY.\n\n  tail --follow=name now works with single non regular files even\n  when their modification time doesn't change when new data is available.\n  Previously tail would not show any new data in this case.\n\n  tee -p detects when all remaining outputs have become broken pipes, and\n  exits, rather than waiting for more input to induce an exit when written.\n\n  tee now handles non blocking outputs, which can be seen for example with\n  telnet or mpirun piping through tee to a terminal.\n  Previously tee could truncate data written to such an output and fail,\n  and also potentially output a \"Resource temporarily unavailable\" error.\n\n\n* Noteworthy changes in release 9.1 (2022-04-15) [stable]\n\n** Bug fixes\n\n  chmod -R no longer exits with error status when encountering symlinks.\n  All files would be processed correctly, but the exit status was incorrect.\n  [bug introduced in coreutils-9.0]\n\n  If 'cp -Z A B' checks B's status and some other process then removes B,\n  cp no longer creates B with a too-generous SELinux security context\n  before adjusting it to the correct value.\n  [bug introduced in coreutils-8.17]\n\n  'cp --preserve=ownership A B' no longer ignores the umask when creating B.\n  Also, 'cp --preserve-xattr A B' is less likely to temporarily chmod u+w B.\n  [bug introduced in coreutils-6.7]\n\n  On macOS, 'cp A B' no longer miscopies when A is in an APFS file system\n  and B is in some other file system.\n  [bug introduced in coreutils-9.0]\n\n  On macOS, fmt no longer corrupts multi-byte characters\n  by misdetecting their component bytes as spaces.\n  [This bug was present in \"the beginning\".]\n\n  'id xyz' now uses the name 'xyz' to determine groups, instead of xyz's uid.\n  [bug introduced in coreutils-8.22]\n\n  'ls -v' and 'sort -V' no longer mishandle corner cases like \"a..a\" vs \"a.+\"\n  or lines containing NULs.  Their behavior now matches the documentation\n  for file names like \".m4\" that consist entirely of an extension,\n  and the documentation has been clarified for unusual cases.\n  [bug introduced in coreutils-7.0]\n\n  On macOS, 'mv A B' no longer fails with \"Operation not supported\"\n  when A and B are in the same tmpfs file system.\n  [bug introduced in coreutils-9.0]\n\n  'mv -T --backup=numbered A B/' no longer miscalculates the backup number\n  for B when A is a directory, possibly inflooping.\n  [bug introduced in coreutils-6.3]\n\n** Changes in behavior\n\n  cat now uses the copy_file_range syscall if available, when doing\n  simple copies between regular files.  This may be more efficient, by avoiding\n  user space copies, and possibly employing copy offloading or reflinking.\n\n  chown and chroot now warn about usages like \"chown root.root f\",\n  which have the nonstandard and long-obsolete \".\" separator that\n  causes problems on platforms where user names contain \".\".\n  Applications should use \":\" instead of \".\".\n\n  cksum no longer allows abbreviated algorithm names,\n  so that forward compatibility and robustness is improved.\n\n  date +'%-N' now suppresses excess trailing digits, instead of always\n  padding them with zeros to 9 digits.  It uses clock_getres and\n  clock_gettime to infer the clock resolution.\n\n  dd conv=fsync now synchronizes output even after a write error,\n  and similarly for dd conv=fdatasync.\n\n  dd now counts bytes instead of blocks if a block count ends in \"B\".\n  For example, 'dd count=100KiB' now copies 100 KiB of data, not\n  102,400 blocks of data.  The flags count_bytes, skip_bytes and\n  seek_bytes are therefore obsolescent and are no longer documented,\n  though they still work.\n\n  ls no longer colors files with capabilities by default, as file-based\n  capabilities are rarely used, and lookup increases processing per file by\n  about 30%.  It's best to use getcap [-r] to identify files with capabilities.\n\n  ls no longer tries to automount files, reverting to the behavior\n  before the statx() call was introduced in coreutils-8.32.\n\n  stat no longer tries to automount files by default, reverting to the\n  behavior before the statx() call was introduced in coreutils-8.32.\n  Only `stat --cached=never` will continue to automount files.\n\n  timeout --foreground --kill-after=... will now exit with status 137\n  if the kill signal was sent, which is consistent with the behavior\n  when the --foreground option is not specified.  This allows users to\n  distinguish if the command was more forcefully terminated.\n\n** New Features\n\n  dd now supports the aliases iseek=N for skip=N, and oseek=N for seek=N,\n  like FreeBSD and other operating systems.\n\n  dircolors takes a new --print-ls-colors option to display LS_COLORS\n  entries, on separate lines, colored according to the entry color code.\n\n  dircolors will now also match COLORTERM in addition to TERM environment\n  variables.  The default config will apply colors with any COLORTERM set.\n\n** Improvements\n\n  cp, mv, and install now use openat-like syscalls when copying to a directory.\n  This avoids some race conditions and should be more efficient.\n\n  On macOS, cp creates a copy-on-write clone if source and destination\n  are regular files on the same APFS file system, the destination does\n  not already exist, and cp is preserving mode and timestamps (e.g.,\n  'cp -p', 'cp -a').\n\n  The new 'date' option --resolution outputs the timestamp resolution.\n\n  With conv=fdatasync or conv=fsync, dd status=progress now reports\n  any extra final progress just before synchronizing output data,\n  since synchronizing can take a long time.\n\n  printf now supports printing the numeric value of multi-byte characters.\n\n  sort --debug now diagnoses issues with --field-separator characters\n  that conflict with characters possibly used in numbers.\n\n  'tail -f file | filter' now exits on Solaris when filter exits.\n\n  root invoked coreutils, that are built and run in single binary mode,\n  now adjust /proc/$pid/cmdline to be more specific to the utility\n  being run, rather than using the general \"coreutils\" binary name.\n\n** Build-related\n\n  AIX builds no longer fail because some library functions are not found.\n  [bug introduced in coreutils-8.32]\n\n\n* Noteworthy changes in release 9.0 (2021-09-24) [stable]\n\n** Bug fixes\n\n  chmod -v no longer misreports modes of dangling symlinks.\n  [bug introduced in coreutils-5.3.0]\n\n  cp -a --attributes-only now never removes destination files,\n  even if the destination files are hardlinked, or the source\n  is a non regular file.\n  [bug introduced in coreutils-8.6]\n\n  csplit --suppress-matched now elides the last matched line\n  when a specific number of pattern matches are performed.\n  [bug introduced with the --suppress-matched feature in coreutils-8.22]\n\n  df no longer outputs duplicate remote mounts in the presence of bind mounts.\n  [bug introduced in coreutils-8.26]\n\n  df no longer mishandles command-line args that it pre-mounts\n  [bug introduced in coreutils-8.29]\n\n  du no longer crashes on XFS file systems when the directory hierarchy is\n  heavily changed during the run.\n  [bug introduced in coreutils-8.25]\n\n  env -S no longer crashes when given unusual whitespace characters\n  [bug introduced in coreutils-8.30]\n\n  expr no longer mishandles unmatched \\(...\\) in regular expressions.\n  [bug introduced in coreutils-6.0]\n\n  ls no longer crashes when printing the SELinux context for unstattable files.\n  [bug introduced in coreutils-6.9.91]\n\n  mkdir -m no longer mishandles modes more generous than the umask.\n  [bug introduced in coreutils-8.22]\n\n  nl now handles single character --section-delimiter arguments,\n  by assuming a second ':' character has been specified, as specified by POSIX.\n  [This bug was present in \"the beginning\".]\n\n  pr again adjusts tabs in input, to maintain alignment in multi column output.\n  [bug introduced in coreutils-6.9]\n\n  rm no longer skips an extra file when the removal of an empty directory fails.\n  [bug introduced by the rewrite to use fts in coreutils-8.0]\n\n  split --number=K/N will again correctly split chunk K of N to stdout.\n  Previously a chunk starting after 128KiB, output the wrong part of the file.\n  [bug introduced in coreutils-8.26]\n\n  tail -f no longer overruns a stack buffer when given too many files\n  to follow and ulimit -n exceeds 1024.\n  [bug introduced in coreutils-7.5]\n\n  tr no longer crashes when using --complement with certain\n  invalid combinations of case character classes.\n  [bug introduced in coreutils-8.6]\n\n  basenc --base64 --decode no longer silently discards decoded characters\n  on (1024*5) buffer boundaries\n  [bug introduced in coreutils-8.31]\n\n** Changes in behavior\n\n  cp and install now default to copy-on-write (COW) if available.\n  I.e., cp now uses --reflink=auto mode by default.\n\n  cp, install and mv now use the copy_file_range syscall if available.\n  Also, they use lseek+SEEK_HOLE rather than ioctl+FS_IOC_FIEMAP on sparse\n  files, as lseek is simpler and more portable.\n\n  On GNU/Linux systems, ls no longer issues an error message on a\n  directory merely because it was removed.  This reverts a change\n  that was made in release 8.32.\n\n  ptx -T no longer attempts to substitute old-fashioned TeX escapes\n  for 8-bit non-ASCII alphabetic characters.  TeX indexes should\n  instead use '\\usepackage[latin1]{inputenc}' or equivalent.\n\n  stat will use decomposed (major,minor) device numbers in its default format.\n  This is less ambiguous, and more consistent with ls.\n\n  sum [-r] will output a file name, even if only a single name is passed.\n  This is consistent with sum -s, cksum, and other sum(1) implementations.\n\n** New Features\n\n  cksum now supports the -a (--algorithm) option to select any\n  of the existing sum, md5sum, b2sum, sha*sum implementations etc.\n  cksum now subsumes all of these programs, and coreutils\n  will introduce no future standalone checksum utility.\n\n  cksum -a now supports the 'sm3' argument, to use the SM3 digest algorithm.\n\n  cksum --check now supports auto detecting the digest type to use,\n  when verifying tagged format checksums.\n\n  expr and factor now support bignums on all platforms.\n\n  ls --classify now supports the \"always\", \"auto\", or \"never\" flags,\n  to support only outputting classifier characters if connected to a tty.\n\n  ls now accepts the --sort=width option, to sort by file name width.\n  This is useful to more compactly organize the default vertical column output.\n\n  ls now accepts the --zero option, to terminate each output line with\n  NUL instead of newline.\n\n  nl --line-increment can now take a negative number to decrement the count.\n\n  stat supports more formats for representing decomposed device numbers.\n  %Hd,%Ld and %Hr,%Lr will output major,minor device numbers and device types\n  respectively.  %d corresponds to st_dev and %r to std_rdev.\n\n** Improvements\n\n  cat --show-ends will now show \\r\\n as ^M$.  Previously the \\r was taken\n  literally, thus overwriting the first character in the line with '$'.\n\n  cksum [-a crc] is now up to 4 times faster by using a slice by 8 algorithm,\n  and at least 8 times faster where pclmul instructions are supported.\n  A new --debug option will indicate if pclmul is being used.\n\n  md5sum --check now supports checksum files with CRLF line endings.\n  This also applies to cksum, sha*sum, and b2sum.\n\n  df now recognizes these file systems as remote:\n  acfs, coda, fhgfs, gpfs, ibrix, ocfs2, and vxfs.\n\n  rmdir now clarifies the error if a symlink_to_dir/ has not been traversed.\n  This is the case on GNU/Linux systems, where the trailing slash is ignored.\n\n  stat and tail now know about the \"devmem\", \"exfat\", \"secretmem\", \"vboxsf\",\n  and \"zonefs\" file system types.  stat -f -c%T now reports the file system\n  type, and tail -f uses polling for \"vboxsf\" and inotify for the others.\n\n  timeout now supports sub-second timeouts on macOS.\n\n  wc is up to 5 times faster when counting only new line characters,\n  where avx2 instructions are supported.\n  A new --debug option will indicate if avx2 is being used.\n\n\n* Noteworthy changes in release 8.32 (2020-03-05) [stable]\n\n** Bug fixes\n\n  cp now copies /dev/fd/N correctly on platforms like Solaris where\n  it is a character-special file whose minor device number is N.\n  [bug introduced in fileutils-4.1.6]\n\n  dd conv=fdatasync no longer reports a \"Bad file descriptor\" error\n  when fdatasync is interrupted, and dd now retries interrupted calls\n  to close, fdatasync, fstat and fsync instead of incorrectly\n  reporting an \"Interrupted system call\" error.\n  [bugs introduced in coreutils-6.0]\n\n  df now correctly parses the /proc/self/mountinfo file for unusual entries\n  like ones with '\\r' in a field value (\"mount -t tmpfs tmpfs /foo$'\\r'bar\"),\n  when the source field is empty ('mount -t tmpfs \"\" /mnt'), and when the\n  filesystem type contains characters like a blank which need escaping.\n  [bugs introduced in coreutils-8.24 with the introduction of reading\n   the /proc/self/mountinfo file]\n\n  factor again outputs immediately when stdout is a tty but stdin is not.\n  [bug introduced in coreutils-8.24]\n\n  ln works again on old systems without O_DIRECTORY support (like Solaris 10),\n  and on systems where symlink (\"x\", \".\") fails with errno == EINVAL\n  (like Solaris 10 and Solaris 11).\n  [bug introduced in coreutils-8.31]\n\n  rmdir --ignore-fail-on-non-empty now works correctly for directories\n  that fail to be removed due to permission issues.  Previously the exit status\n  was reversed, failing for non empty and succeeding for empty directories.\n  [bug introduced in coreutils-6.11]\n\n  'shuf -r -n 0 file' no longer mistakenly reads from standard input.\n  [bug introduced with the --repeat feature in coreutils-8.22]\n\n  split no longer reports a \"output file suffixes exhausted\" error\n  when the specified number of files is evenly divisible by 10, 16, 26,\n  for --numeric, --hex, or default alphabetic suffixes respectively.\n  [bug introduced in coreutils-8.24]\n\n  seq no longer prints an extra line under certain circumstances (such as\n  'seq -f \"%g \" 1000000 1000000').\n  [bug introduced in coreutils-6.10]\n\n** Changes in behavior\n\n  Several programs now check that numbers end properly.  For example,\n  'du -d 1x' now reports an error instead of silently ignoring the 'x'.\n  Affected programs and options include du -d, expr's numeric operands\n  on non-GMP builds, install -g and -o, ls's TABSIZE environment\n  variable, mknod b and c, ptx -g and -w, shuf -n, and sort --batch-size\n  and --parallel.\n\n  date now parses military time zones in accordance with common usage:\n    \"A\" to \"M\"  are equivalent to UTC+1 to UTC+12\n    \"N\" to \"Y\"  are equivalent to UTC-1 to UTC-12\n    \"Z\" is \"zulu\" time (UTC).\n  For example, 'date -d \"09:00B\" is now equivalent to 9am in UTC+2 time zone.\n  Previously, military time zones were parsed according to the obsolete\n  rfc822, with their value negated (e.g., \"B\" was equivalent to UTC-2).\n  [The old behavior was introduced in sh-utils 2.0.15 ca. 1999, predating\n  coreutils package.]\n\n  date now pads nanoseconds on the right, not the left.  For example,\n  if the time is currently 1590020079.003388470 seconds after the\n  Epoch, then \"date '+%s.%-N'\" formerly output \"1590020079.3388470\",\n  and it now outputs \"1590020079.00338847\".\n\n  ls issues an error message on a removed directory, on GNU/Linux systems.\n  Previously no error and no entries were output, and so indistinguishable\n  from an empty directory, with default ls options.\n\n  uniq no longer uses strcoll() to determine string equivalence,\n  and so will operate more efficiently and consistently.\n\n** New Features\n\n  ls now supports the --time=birth option to display and sort by\n  file creation time, where available.\n\n  od --skip-bytes now can use lseek even if the input is not a regular\n  file, greatly improving performance in some cases.\n\n  stat(1) supports a new --cached= option, used on systems with statx(2)\n  to control cache coherency of file system attributes,\n  useful on network file systems.\n\n** Improvements\n\n  stat and ls now use the statx() system call where available, which can\n  operate more efficiently by only retrieving requested attributes.\n\n  stat and tail now know about the \"binderfs\", \"dma-buf-fs\", \"erofs\",\n  \"ppc-cmm-fs\", and \"z3fold\" file systems.\n  stat -f -c%T now reports the file system type, and tail -f uses inotify.\n\n** Build-related\n\n  gzip-compressed tarballs are distributed once again\n\n\n* Noteworthy changes in release 8.31 (2019-03-10) [stable]\n\n** Bug fixes\n\n  'base64 a b' now correctly diagnoses 'b' as the extra operand, not 'a'.\n  [bug introduced in coreutils-5.3.0]\n\n  When B already exists, 'cp -il A B' no longer immediately fails\n  after asking the user whether to proceed.\n  [This bug was present in \"the beginning\".]\n\n  df no longer corrupts displayed multibyte characters on macOS.\n  [bug introduced with coreutils-8.18]\n\n  seq no longer outputs inconsistent decimal point characters\n  for the last number, when locales are misconfigured.\n  [bug introduced in coreutils-7.0]\n\n  shred, sort, and split no longer falsely report ftruncate errors\n  when outputting to less-common file types.  For example, the shell\n  command 'sort /dev/null -o /dev/stdout | cat' no longer fails with\n  an \"error truncating\" diagnostic.\n  [bug was introduced with coreutils-8.18 for sort and split, and\n   (for shared memory objects only) with fileutils-4.1 for shred]\n\n  sync no longer fails for write-only file arguments.\n  [bug introduced with argument support to sync in coreutils-8.24]\n\n  'tail -f file | filter' no longer exits immediately on AIX.\n  [bug introduced in coreutils-8.28]\n\n  'tail -f file | filter' no longer goes into an infinite loop\n  if filter exits and SIGPIPE is ignored.\n  [bug introduced in coreutils-8.28]\n\n** Changes in behavior\n\n  cksum, dd, hostid, hostname, link, logname, sleep, tsort, unlink,\n  uptime, users, whoami, yes: now always process --help and --version options,\n  regardless of any other arguments present before any optional '--'\n  end-of-options marker.\n\n  nohup now processes --help and --version as first options even if other\n  parameters follow.\n\n  'yes a -- b' now outputs 'a b' instead of including the end-of-options\n  marker as before: 'a -- b'.\n\n  echo now always processes backslash escapes when the POSIXLY_CORRECT\n  environment variable is set.\n\n  When possible 'ln A B' now merely links A to B and reports an error\n  if this fails, instead of statting A and B before linking.  This\n  uses fewer system calls and avoids some races.  The old statting\n  approach is still used in situations where hard links to directories\n  are allowed (e.g., NetBSD when superuser).\n\n  ls --group-directories-first will also group symlinks to directories.\n\n  'test -a FILE' is not supported anymore.  Long ago, there were concerns about\n  the high probability of humans confusing the -a primary with the -a binary\n  operator, so POSIX changed this to 'test -e FILE'.  Scripts using it were\n  already broken and non-portable; the -a unary operator was never documented.\n\n  wc now treats non breaking space characters as word delimiters\n  unless the POSIXLY_CORRECT environment variable is set.\n\n** New features\n\n  id now supports specifying multiple users.\n\n  'date' now supports the '+' conversion specification flag,\n  introduced in POSIX.1-2017.\n\n  printf, seq, sleep, tail, and timeout now accept floating point\n  numbers in either the current or the C locale.  For example, if the\n  current locale's decimal point is ',', 'sleep 0,1' and 'sleep 0.1'\n  now mean the same thing.  Previously, these commands accepted only\n  C-locale syntax with '.' as the decimal point.  The new behavior is\n  more compatible with other implementations in non-C locales.\n\n  test now supports the '-N FILE' unary operator (like e.g. bash) to check\n  whether FILE exists and has been modified since it was last read.\n\n  env now supports '--default-signal[=SIG]', '--ignore-signal[=SIG]', and\n  '--block-signal[=SIG], to setup signal handling before executing a program.\n\n  env now supports '--list-signal-handling' to indicate non-default\n  signal handling before executing a program.\n\n** New programs\n\n  basenc is added to complement existing base64,base32 commands,\n  and encodes and decodes printable text using various common encodings:\n  base64,base64url,base32,base32hex,base16,base2,z85.\n\n** Improvements\n\n  ls -l now better aligns abbreviated months containing digits,\n  which is common in Asian locales.\n\n  stat and tail now know about the \"sdcardfs\" file system on Android.\n  stat -f -c%T now reports the file system type, and tail -f uses inotify.\n\n  stat now prints file creation time when supported by the file system,\n  on GNU Linux systems with glibc >= 2.28 and kernel >= 4.11.\n\n\n* Noteworthy changes in release 8.30 (2018-07-01) [stable]\n\n** Bug fixes\n\n  'cp --symlink SRC DST' will again correctly validate DST.\n  If DST is a regular file and SRC is a symlink to DST,\n  then cp will no longer allow that operation to clobber DST.\n  Also with -d, if DST is a symlink, then it can always be replaced,\n  even if it points to SRC on a separate device.\n  [bugs introduced with coreutils-8.27]\n\n  'cp -n -u' and 'mv -n -u' now consistently ignore the -u option.\n  Previously, this option combination suffered from race conditions\n  that caused -u to sometimes override -n.\n  [bug introduced with coreutils-7.1]\n\n  'cp -a --no-preserve=mode' now sets appropriate default permissions\n  for non regular files like fifos and character device nodes etc.,\n  and leaves mode bits of existing files unchanged.\n  Previously it would have set executable bits on created special files,\n  and set mode bits for existing files as if they had been created.\n  [bug introduced with coreutils-8.20]\n\n  'cp --remove-destination file symlink' now removes the symlink\n  even if it can't be traversed.\n  [bug introduced with --remove-destination in fileutils-4.1.1]\n\n  ls no longer truncates the abbreviated month names that have a\n  display width between 6 and 12 inclusive.  Previously this would have\n  output ambiguous months for Arabic or Catalan locales.\n\n  'ls -aA' is now equivalent to 'ls -A', since -A now overrides -a.\n  [bug introduced in coreutils-5.3.0]\n\n  'mv -n A B' no longer suffers from a race condition that can\n  overwrite a simultaneously-created B.  This bug fix requires\n  platform support for the renameat2 or renameatx_np syscalls, found\n  in recent Linux and macOS kernels.  As a side effect, 'mv -n A A'\n  now silently does nothing if A exists.\n  [bug introduced with coreutils-7.1]\n\n** Changes in behavior\n\n  'cp --force file symlink' now removes the symlink even if\n  it is self referential.\n\n  ls --color now matches file extensions case insensitively.\n\n** New features\n\n  cp --reflink now supports --reflink=never to enforce a standard copy.\n\n  env supports a new -v/--debug option to show verbose information about\n  each processing step.\n\n  env supports a new -S/--split-string=S option to split a single argument\n  string into multiple arguments. Used to pass multiple arguments in scripts\n  (shebang lines).\n\n  md5sum accepts a new option: --zero (-z) to delimit the output lines with a\n  NUL instead of a newline character.  This also disables file name escaping.\n  This also applies to sha*sum and b2sum.\n\n  rm --preserve-root now supports the --preserve-root=all option to\n  reject any command line argument that is mounted to a separate file system.\n\n** Improvements\n\n  cut supports line lengths up to the max file size on 32 bit systems.\n  Previously only offsets up to SIZE_MAX-1 were supported.\n\n  stat and tail now know about the \"exfs\" file system, which is a\n  version of XFS.  stat -f --format=%T now reports the file system type,\n  and tail -f uses inotify.\n\n  wc avoids redundant processing of ASCII text in multibyte locales,\n  which is especially significant on macOS.\n\n\n* Noteworthy changes in release 8.29 (2017-12-27) [stable]\n\n** Bug fixes\n\n  b2sum no longer crashes when processing certain truncated check files.\n  [bug introduced with b2sum coreutils-8.26]\n\n  dd now ensures the correct cache ranges are specified for the \"nocache\"\n  and \"direct\" flags.  Previously some pages in the page cache were not\n  invalidated.  [bug introduced for \"direct\" in coreutils-7.5,\n  and with the \"nocache\" implementation in coreutils-8.11]\n\n  df no longer hangs when given a fifo argument.\n  [bug introduced in coreutils-7.3]\n\n  ptx -S no longer infloops for a pattern which returns zero-length matches.\n  [the bug dates back to the initial implementation]\n\n  shred --remove will again repeatedly rename files with shortening names\n  to attempt to hide the original length of the file name.\n  [bug introduced in coreutils-8.28]\n\n  stty no longer crashes when processing settings with -F also specified.\n  [bug introduced in fileutils-4.0]\n\n  tail --bytes again supports non seekable inputs on all systems.\n  On systems like android it always tried to process as seekable inputs.\n  [bug introduced in coreutils-8.24]\n\n  timeout will again notice its managed command exiting, even when\n  invoked with blocked CHLD signal, or in a narrow window where\n  this CHLD signal from the exiting child was missed.  In each case\n  timeout would have then waited for the time limit to expire.\n  [bug introduced in coreutils-8.27]\n\n** New features\n\n  timeout now supports the --verbose option to diagnose forced termination.\n\n** Improvements\n\n  dd now supports iflag=direct with arbitrary sized files on all file systems.\n\n  tail --bytes=NUM will efficiently seek to the end of block devices,\n  rather than reading from the start.\n\n  Utilities which do not support long options (other than the default --help\n  and --version), e.g. cksum and sleep, now use more consistent error diagnostic\n  for unknown long options.\n\n** Build-related\n\n  Default man pages are now distributed which are used if perl is\n  not available on the build system, or when cross compiling.\n\n\n* Noteworthy changes in release 8.28 (2017-09-01) [stable]\n\n** Bug fixes\n\n  cp and mv now merely warn about any failure to preserve symlink ownership.\n  Before, cp (without -p) would exit with a failure status, and a cross-device\n  mv would leave such symlinks behind in the source file system.\n  [the bug dates back to the initial implementation]\n\n  When creating numbered backups, cp, install, ln, and mv now avoid\n  races that could lose backup data in unlikely circumstances.  Since\n  the fix relies on the renameat2 system call of Linux kernel 3.15 and\n  later, the races are still present on other platforms.\n  [the bug dates back to the initial implementation]\n\n  cp, install, ln, and mv no longer lose data when asked to copy a\n  backup file to its original via a differently-spelled file name.\n  E.g., 'rm -f a a~; : > a; echo data > a~; cp --backup=simple a~ ./a'\n  now fails instead of losing the data.\n  [the bug dates back to the initial implementation]\n\n  cp, install, ln, and mv now ignore nonsensical backup suffixes.\n  For example, --suffix='/' and --suffix='' are now no-ops.\n  [the bug dates back to the initial implementation]\n\n  date and touch no longer overwrite the heap with large\n  user specified TZ values (CVE-2017-7476).\n  [bug introduced in coreutils-8.27]\n\n  dd status=progress now just counts seconds; e.g., it outputs \"6 s\"\n  consistently rather than sometimes outputting \"6.00001 s\".\n  [bug introduced in coreutils-8.24]\n\n  df no longer interacts with excluded file system types, so for example\n  specifying -x nfs no longer hangs with problematic nfs mounts.\n  [bug introduced in coreutils-8.21]\n\n  df no longer interacts with dummy file system types, so for example\n  no longer hangs with problematic nfs mounted via system.automount(5).\n  [bug introduced in coreutils-8.21]\n\n  `groups inva:lid root` no longer exits immediately upon failure.\n  Now, it prints a diagnostic or a line to stdout for each argument.\n  [bug introduced in the bourne-shell-to-C rewrite for coreutils-6.11]\n\n  kill now converts from number to signal name correctly on AIX.\n  Previously it would have always returned the 'EXIT' name.\n  [bug introduced in fileutils-4.1.9]\n\n  ls now quotes symlink targets consistently.  Previously it may not\n  have quoted the target name if the link name itself didn't need quoting.\n  [bug introduced in coreutils-8.26]\n\n  split no longer exits when invocations of a --filter return EPIPE.\n  [bug introduced in coreutils-8.26]\n\n  md5sum --check no longer incorrectly enables BSD reversed format mode when\n  ignoring some non checksum lines.  This also affects sha*sum and b2sum.\n  [bug introduced in coreutils-8.14]\n\n  tail -F 'dir/file' is now monitored even when 'dir' is replaced.\n  [bug introduced with inotify support added in coreutils-7.5]\n\n  tail -f with --pid=PID now processes all inotify events.\n  Previously events may have been ignored completely upon PID death,\n  or ignored until future events on the monitored files.\n  [bug introduced with inotify support added in coreutils-7.5]\n\n  tail -f /dev/tty is now supported by not using inotify when any\n  non regular files are specified, as inotify is ineffective with these.\n  [bug introduced with inotify support added in coreutils-7.5]\n\n  uptime no longer outputs the AM/PM component of the current time,\n  as that's inconsistent with the 24 hour time format used.\n  [bug introduced in coreutils-7.0]\n\n  expr now returns number of characters matched (instead of incorrect\n  number of bytes matched) with 'match'/':' operators on multibyte strings.\n\n** New features\n\n  expand and unexpand now support specifying an offset for tab stops\n  by prefixing the last specified number like --tabs=1,+8 which is\n  useful for visualizing diff output for example.\n\n  ls supports a new --hyperlink[=when] option to output file://\n  format links to files, supported by some terminals.\n\n  split supports a new --hex-suffixes[=from] option to create files with\n  lower case hexadecimal suffixes, similar to the --numeric-suffixes option.\n\n  env now has a --chdir (-C) option to change the working directory before\n  executing the subsidiary program.\n\n  expr supports multibyte strings for all string operations.\n\n** Changes in behavior\n\n  tail -f now exits immediately if the output is piped and the reader of\n  the pipe terminates.  That allows `tail -f file | grep -q foo` to return\n  responsively, but does make `tail -f file | :` exit immediately without\n  waiting for data.  Instead one should now `tail -f file | grep -q .`\n\n** Improvements\n\n  mv --verbose now distinguishes rename and copy operations.\n\n  stat -f -c %l, used to output the max file name length on a file system,\n  is now supported on FreeBSD and OpenBSD.\n\n  tail -f no longer erroneously warns about being ineffective\n  when following a single tty, as the simple blocking loop used\n  is effective in this case.\n\n\n* Noteworthy changes in release 8.27 (2017-03-08) [stable]\n\n** Bug fixes\n\n  cp --parents will now set an SELinux context for created directories,\n  as appropriate for the -a, --preserve=context, or -Z options.\n  [bug present since SELinux support added in coreutils-6.10]\n\n  date again converts from a specified time zone.  Previously output was\n  not converted to the local time zone, and remained in the specified one.\n  [bug introduced in coreutils-8.26]\n\n  Commands like 'cp --no-dereference -l A B' are no longer quiet no-ops\n  when A is a regular file and B is a symbolic link that points to A.\n  [bug introduced in fileutils-4.0]\n\n  factor no longer goes into an infinite loop for certain numbers like\n  158909489063877810457 and 222087527029934481871.\n  [bug introduced in coreutils-8.20]\n\n  tail no longer prints redundant file headers with interleaved inotify events,\n  which could be triggered especially when tail was suspended and resumed.\n  [bug introduced with inotify support added in coreutils-7.5]\n\n  timeout no longer has a race that may terminate the wrong process.\n  The race is unlikely, as timeout(1) needs to receive a signal right\n  after the command being monitored finishes.  Also the system needs\n  to have reallocated that command's pid in that short time window.\n  [bug introduced when timeout was added in coreutils-7.0]\n\n  wc --bytes --files0-from now correctly reports byte counts.\n  Previously it may have returned values that were too large,\n  depending on the size of the first file processed.\n  [bug introduced in coreutils-8.24]\n\n** Improvements\n\n  The new 'date' option --rfc-email is now the long form for -R.\n  The new option spelling is intended to avoid the need to track the\n  Internet RFC number for email dates (currently RFC 5322).  The old\n  option spellings --rfc-2822 and --rfc-822 still work.\n\n  date now outputs \"-00\" for a numeric time zone if the time is UTC\n  and the time zone abbreviation begins with \"-\", indicating that the\n  time zone is indeterminate.\n\n  nproc now honors the OMP_THREAD_LIMIT environment variable to\n  set the maximum returned value.  OMP_NUM_THREADS continues to\n  set the minimum returned value, but is updated to support the\n  nested level syntax allowed in this variable.\n\n  stat and tail now know about the \"rdt\" file system, which is an interface\n  to Resource Director Technology.  stat -f --format=%T now reports the\n  file system type, and tail -f uses inotify.\n\n  stty now validates arguments before interacting with the device,\n  ensuring there are no side effects to specifying an invalid option.\n\n  If the file B already exists, commands like 'ln -f A B' and\n  'cp -fl A B' no longer remove B before creating the new link.\n  That is, there is no longer a brief moment when B does not exist.\n\n** New features\n\n  expand and unexpand now support specifying a tab size to use\n  after explicitly specified tab stops, by prefixing the last\n  specified number like --tabs=2,4,/8.\n\n\n* Noteworthy changes in release 8.26 (2016-11-30) [stable]\n\n** Bug fixes\n\n  cp, mv, and install no longer run into undefined behavior when\n  handling ACLs on Cygwin and Solaris platforms. [bug introduced in\n  coreutils-8.24]\n\n  cp --parents --no-preserve=mode, no longer copies permissions from source\n  directories, instead using default permissions for created directories.\n  [bug introduced in coreutils-5.93]\n\n  chcon, chgrp, chmod, chown, du, and rm, or specifically utilities\n  using the FTS interface, now diagnose failures returned by readdir().\n  [this bug was inherent in the use of fts: thus, for rm the bug was\n  introduced in coreutils-8.0.  du, chmod, chgrp and chown started using\n  fts in 6.0.  chcon was added in coreutils-6.9.91 with fts support.  ]\n\n  date, du, ls, and pr no longer mishandle time zone abbreviations on\n  System V style platforms where this information is available only\n  in the global variable 'tzname'. [bug introduced in coreutils-8.24]\n\n  factor again outputs immediately when numbers are input interactively.\n  [bug introduced in coreutils-8.24]\n\n  head no longer tries to process non-seekable input as seekable,\n  which resulted in failures on FreeBSD 11 at least.\n  [bug introduced in coreutils-8.24]\n\n  install -DZ and mkdir -pZ now set default SELinux context correctly even if\n  two or more directories nested in each other are created and each of them\n  defaults to a different SELinux context.\n\n  ls --time-style no longer mishandles '%%b' in formats.\n  [bug introduced in coreutils-7.2]\n\n  md5sum --check --ignore-missing no longer treats files with checksums\n  starting with \"00\" as missing.  This also affects sha*sum.\n  [bug introduced with the --ignore-missing feature in coreutils-8.25]\n\n  nl now resets numbering for each page section rather than just for each page.\n  [This bug was present in \"the beginning\".]\n\n  pr now handles specified separator strings containing tabs correctly.\n  Previously it would have output random data from memory.\n  [This bug was detected with ASAN and present in \"the beginning\".]\n\n  sort -h -k now works even in locales that use blank as thousands separator.\n\n  stty --help no longer outputs extraneous gettext header lines\n  for translated languages. [bug introduced in coreutils-8.24]\n\n  stty \"sane\" again sets \"susp\" to ^z on Solaris, and leaves \"swtch\" undefined.\n  [This bug previously fixed only on some older Solaris systems]\n\n  seq now immediately exits upon write errors.\n  [This bug was present in \"the beginning\".]\n\n  tac no longer crashes when there are issues reading from non-seekable inputs.\n  [bug introduced in coreutils-8.15]\n\n  tail -F now continues to process initially untailable files that are replaced\n  by a tailable file.  This was handled correctly when inotify was available,\n  and is now handled correctly in all cases.\n  [bug introduced in fileutils-4.0h]\n\n  tail -f - 'untailable file' will now terminate when there is no more data\n  to read from stdin.  Previously it behaved as if --retry was specified.\n  [This bug was present in \"the beginning\".]\n\n  tail -f 'remote file' will now avoid outputting repeated data on network\n  file systems that misreport file sizes through stale metadata.\n  [This bug was present in \"the beginning\" but exacerbated in coreutils-8.24]\n\n  tail -f --retry 'missing file' will now process truncations of that file.\n  Previously truncation was ignored thus not outputting new data in the file.\n  [bug introduced in coreutils-5.3.0]\n\n  tail -f will no longer continually try to open inaccessible files,\n  only doing so if --retry is specified.\n  [This bug was present in \"the beginning\".]\n\n  yes now handles short writes, rather than assuming all writes complete.\n  [bug introduced in coreutils-8.24]\n\n** Changes in behavior\n\n  rm no longer accepts shortened variants of the --no-preserve-root option.\n\n  seq no longer accepts 0 value as increment, and now also rejects NaN\n  values for any argument.\n\n  stat now outputs nanosecond information for timestamps even if\n  they are out of localtime range.\n\n  sort, tail, and uniq now support traditional usage like 'sort +2'\n  and 'tail +10' on systems conforming to POSIX 1003.1-2008 and later.\n  The 2008 edition of POSIX dropped the requirement that arguments\n  like '+2' must be treated as file names.\n\n** Improvements\n\n  dd now warns about counts specified with a 0x \"prefix\", since dd will\n  interpret those as a zero multiplier rather than a hex constant.\n  The warning suggests to use 00x if a zero multiplier is really intended.\n\n  df now filters the system mount list more efficiently, with 20000\n  mount entries now being processed in about 1.1s compared to 1.7s.\n\n  du, shuf, sort, and uniq no longer fail to process a specified file\n  when their stdin is closed, which would have happened with glibc >= 2.14.\n\n  install -Z now also sets the default SELinux context for created directories.\n\n  ls is now fully responsive to signals until the first escape sequence is\n  written to a terminal.\n\n  ls now aligns quoted items with non quoted items, which is easier to read,\n  and also better indicates that the quote is not part of the actual name.\n\n  stat and tail now know about these file systems:\n    \"balloon-kvm-fs\"    KVM dynamic RAM allocation support,\n    \"cgroup2\"           Linux Control Groups V2 support,\n    \"daxfs\"             Optical media file system,\n    \"m1fs\"              A Plexistor file system,\n    \"prl_fs\"            A parallels file system,\n    \"smb2\"              Samba for SMB protocol V2,\n    \"wslfs\"             Windows Subsystem for Linux,\n    \"zsmalloc\"          Linux compressed swap support,\n  stat -f --format=%T now reports the file system type, and\n  tail -f uses polling for \"prl_fs\" and \"smb2\", and inotify for others.\n\n  stat --format=%N for quoting file names now honors the\n  same QUOTING_STYLE environment variable values as ls.\n\n** New programs\n\n  b2sum is added to support the BLAKE2 digest algorithm with\n  a similar interface to the existing md5sum and sha1sum, etc. commands.\n\n** New Features\n\n  comm now accepts the --total option to output a summary at the end.\n\n  date now accepts the --debug option, to annotate the parsed date string,\n  display timezone information, and warn about potential misuse.\n\n  date now accepts the %q format to output the quarter of the year.\n\n\n* Noteworthy changes in release 8.25 (2016-01-20) [stable]\n\n** Bug fixes\n\n  cp now correctly copies files with a hole at the end of the file,\n  and extents allocated beyond the apparent size of the file.\n  That combination resulted in the trailing hole not being reproduced.\n  [bug introduced in coreutils-8.10]\n\n  cut --fields no longer outputs extraneous characters on some uClibc configs.\n  [bug introduced in coreutils-6.11]\n\n  install -D again copies relative file names when absolute file names\n  are also specified along with an absolute destination directory name.\n  [bug introduced in coreutils-6.2]\n\n  ls no longer prematurely wraps lines when printing short file names.\n  [bug introduced in coreutils-5.1.0]\n\n  mv no longer causes data loss due to removing a source directory specified\n  multiple times, when that directory is also specified as the destination.\n  [bug introduced in coreutils-8.24]\n\n  shred again uses defined patterns for all iteration counts.\n  [bug introduced in coreutils-5.93]\n\n  sort --debug -b now correctly marks the matching extents for keys\n  that specify an offset for the first field.\n  [bug introduced with the --debug feature in coreutils-8.6]\n\n  tail -F now works with initially non existent files on a remote file system.\n  [bug introduced in coreutils-7.5]\n\n** New programs\n\n  base32 is added to complement the existing base64 command,\n  and encodes and decodes printable text as per RFC 4648.\n\n** New features\n\n  comm,cut,head,numfmt,paste,tail now have the -z,--zero-terminated option, and\n  tac --separator accepts an empty argument, to work with NUL delimited items.\n\n  dd now summarizes sizes in --human-readable format too, not just --si.\n  E.g., \"3441325000 bytes (3.4 GB, 3.2 GiB) copied\".  It omits the summaries\n  if they would not provide useful information, e.g., \"3 bytes copied\".\n  Its status=progress output now uses the same format as ordinary status,\n  perhaps with trailing spaces to erase previous progress output.\n\n  md5sum now supports the --ignore-missing option to allow\n  verifying a subset of files given a larger list of checksums.\n  This also affects sha1sum, sha224sum, sha256sum, sha384sum and sha512sum.\n\n  printf now supports the '%q' format to print arguments in a form that\n  is reusable by most shells, with non-printable characters escaped\n  with the POSIX proposed $'...' syntax.\n\n  stty now supports the \"[-]drain\" setting to control whether to wait\n  for transmission of pending output before application of settings.\n\n** Changes in behavior\n\n  base64 no longer supports hex or oct --wrap parameters,\n  thus better supporting decimals with leading zeros.\n\n  date --iso-8601 now uses +00:00 timezone format rather than +0000.\n  The standard states to use this \"extended\" format throughout a timestamp.\n\n  df now prefers sources towards the root of a device when\n  eliding duplicate bind mounted entries.\n\n  ls now quotes file names unambiguously and appropriate for use in a shell,\n  when outputting to a terminal.\n\n  join, sort, uniq with --zero-terminated, now treat '\\n' as a field delimiter.\n\n** Improvements\n\n  All utilities now quote user supplied arguments in error strings,\n  which avoids confusing error messages in the presence of '\\r' chars etc.\n\n  Utilities that traverse directories, like chmod, cp, and rm etc., will operate\n  more efficiently on XFS through the use of \"leaf optimization\".\n\n  md5sum now ensures a single line per file for status on standard output,\n  by using a '\\' at the start of the line, and replacing any newlines with '\\n'.\n  This also affects sha1sum, sha224sum, sha256sum, sha384sum and sha512sum.\n\n  dircolors now supports globbing of TERM entries in its database.\n  For example \"TERM *256color*\" is now supported.\n\n  du no longer stats all mount points at startup, only doing so\n  upon detection of a directory cycle.\n  [issue introduced in coreutils-8.20]\n\n  ls -w0 is now interpreted as no limit on the length of the outputted line.\n\n  stat -f --format=%T now reports the file system type for new Linux\n  pseudo file systems \"bpf_fs\", \"btrfs_test\", \"nsfs\", \"overlayfs\"\n  and \"tracefs\", and remote file system \"acfs\".\n\n  wc now ensures a single line per file for counts on standard output,\n  by quoting names containing '\\n' characters; appropriate for use in a shell.\n\n\n* Noteworthy changes in release 8.24 (2015-07-03) [stable]\n\n** Bug fixes\n\n  dd supports more robust SIGINFO/SIGUSR1 handling for outputting statistics.\n  Previously those signals may have inadvertently terminated the process.\n\n  df --local no longer hangs with inaccessible remote mounts.\n  [bug introduced in coreutils-8.21]\n\n  du now silently ignores all directory cycles due to bind mounts.\n  Previously it would issue a warning and exit with a failure status.\n  [bug introduced in coreutils-8.1 and partially fixed in coreutils-8.23]\n\n  chroot again calls chroot(DIR) and chdir(\"/\"), even if DIR is \"/\".\n  This handles separate bind mounted \"/\" trees, and environments\n  depending on the implicit chdir(\"/\").\n  [bugs introduced in coreutils-8.23]\n\n  cp no longer issues an incorrect warning about directory hardlinks when a\n  source directory is specified multiple times.  Now, consistent with other\n  file types, a warning is issued for source directories with duplicate names,\n  or with -H the directory is copied again using the symlink name.\n\n  factor avoids writing partial lines, thus supporting parallel operation.\n  [the bug dates back to the initial implementation]\n\n  head, od, split, tac, tail, and wc no longer mishandle input from files in\n  /proc and /sys file systems that report somewhat-incorrect file sizes.\n\n  mkdir --parents -Z now correctly sets the context for the last component,\n  even if the parent directory exists and has a different default context.\n  [bug introduced with the -Z restorecon functionality in coreutils-8.22]\n\n  numfmt no longer outputs incorrect overflowed values seen with certain\n  large numbers, or with numbers with increased precision.\n  [bug introduced when numfmt was added in coreutils-8.21]\n\n  numfmt now handles leading zeros correctly, not counting them when\n  settings processing limits, and making them optional with floating point.\n  [bug introduced when numfmt was added in coreutils-8.21]\n\n  paste no longer truncates output for large input files.  This would happen\n  for example with files larger than 4GiB on 32 bit systems with a '\\n'\n  character at the 4GiB position.\n  [the bug dates back to the initial implementation]\n\n  rm indicates the correct number of arguments in its confirmation prompt,\n  on all platforms.  [bug introduced in coreutils-8.22]\n\n  shuf -i with a single redundant operand, would crash instead of issuing\n  a diagnostic.  [bug introduced in coreutils-8.22]\n\n  tail releases inotify resources when unused.  Previously it could exhaust\n  resources with many files, or with -F if files were replaced many times.\n  [bug introduced in coreutils-7.5]\n\n  tail -f again follows changes to a file after it's renamed.\n  [bug introduced in coreutils-7.5]\n\n  tail --follow no longer misses changes to files if those files were\n  replaced before inotify watches were created.\n  [bug introduced in coreutils-7.5]\n\n  tail --follow consistently outputs all data for a truncated file.\n  [bug introduced in the beginning]\n\n  tail --follow=name correctly outputs headers for multiple files\n  when those files are being created or renamed.\n  [bug introduced in coreutils-7.5]\n\n** New features\n\n  chroot accepts the new --skip-chdir option to not change the working directory\n  to \"/\" after changing into the chroot(2) jail, thus retaining the current wor-\n  king directory.  The new option is only permitted if the new root directory is\n  the old \"/\", and therefore is useful with the --group and --userspec options.\n\n  dd accepts a new status=progress level to print data transfer statistics\n  on stderr approximately every second.\n\n  numfmt can now process multiple fields with field range specifications similar\n  to cut, and supports setting the output precision with the --format option.\n\n  split accepts a new --separator option to select a record separator character\n  other than the default newline character.\n\n  stty allows setting the \"extproc\" option where supported, which is\n  a useful setting with high latency links.\n\n  sync no longer ignores arguments, and syncs each specified file, or with the\n  --file-system option, the file systems associated with each specified file.\n\n  tee accepts a new --output-error option to control operation with pipes\n  and output errors in general.\n\n** Changes in behavior\n\n  df no longer suppresses separate exports of the same remote device, as\n  these are generally explicitly mounted.  The --total option does still\n  suppress duplicate remote file systems.\n  [suppression was introduced in coreutils-8.21]\n\n  mv no longer supports moving a file to a hardlink, instead issuing an error.\n  The implementation was susceptible to races in the presence of multiple mv\n  instances, which could result in both hardlinks being deleted.  Also on case\n  insensitive file systems like HFS, mv would just remove a hardlinked 'file'\n  if called like `mv file File`.  The feature was added in coreutils-5.0.1.\n\n  numfmt --from-unit and --to-unit options now interpret suffixes as SI units,\n  and IEC (power of 2) units are now specified by appending 'i'.\n\n  tee will exit early if there are no more writable outputs.\n\n  tee does not treat the file operand '-' as meaning standard output any longer,\n  for better conformance to POSIX.  This feature was added in coreutils-5.3.0.\n\n  timeout --foreground no longer sends SIGCONT to the monitored process,\n  which was seen to cause intermittent issues with GDB for example.\n\n** Improvements\n\n  cp,install,mv will convert smaller runs of NULs in the input to holes,\n  and cp --sparse=always avoids speculative preallocation on XFS for example.\n\n  cp will read sparse files more efficiently when the destination is a\n  non regular file.  For example when copying a disk image to a device node.\n\n  mv will try a reflink before falling back to a standard copy, which is\n  more efficient when moving files across BTRFS subvolume boundaries.\n\n  stat and tail now know about IBRIX.  stat -f --format=%T now reports the file\n  system type, and tail -f uses polling for files on IBRIX file systems.\n\n  wc -l processes short lines much more efficiently.\n\n  References from --help and the man pages of utilities have been corrected\n  in various cases, and more direct links to the corresponding online\n  documentation are provided.\n\n\n* Noteworthy changes in release 8.23 (2014-07-18) [stable]\n\n** Bug fixes\n\n  chmod -Rc no longer issues erroneous warnings for files with special bits set.\n  [bug introduced in coreutils-6.0]\n\n  cp -a, mv, and install --preserve-context, once again set the correct SELinux\n  context for existing directories in the destination.  Previously they set\n  the context of an existing directory to that of its last copied descendant.\n  [bug introduced in coreutils-8.22]\n\n  cp -a, mv, and install --preserve-context, no longer seg fault when running\n  with SELinux enabled, when copying from file systems that return an error\n  when reading the SELinux context for a file.\n  [bug introduced in coreutils-8.22]\n\n  cp -a and mv now preserve xattrs of symlinks copied across file systems.\n  [bug introduced with extended attribute preservation feature in coreutils-7.1]\n\n  date could crash or go into an infinite loop when parsing a malformed TZ=\"\".\n  [bug introduced with the --date='TZ=\"\" ..' parsing feature in coreutils-5.3.0]\n\n  dd's ASCII and EBCDIC conversions were incompatible with common practice and\n  with POSIX, and have been corrected as follows.  First, conv=ascii now\n  implies conv=unblock, and conv=ebcdic and conv=ibm now imply conv=block.\n  Second, the translation tables for dd conv=ascii and conv=ebcdic have been\n  corrected as shown in the following table, where A is the ASCII value, W is\n  the old, wrong EBCDIC value, and E is the new, corrected EBCDIC value; all\n  values are in octal.\n\n      A   W   E\n     041 117 132\n     133 112 255\n     135 132 275\n     136 137 232\n     174 152 117\n     176 241 137\n     313 232 152\n     325 255 112\n     345 275 241\n\n  [These dd bugs were present in \"the beginning\".]\n\n  df has more fixes related to the newer dynamic representation of file systems:\n  Duplicates are elided for virtual file systems like tmpfs.\n  Details for the correct device are output for points mounted multiple times.\n  Placeholder values are output for inaccessible file systems, rather than\n  than error messages or values for the wrong file system.\n  [These bugs were present in \"the beginning\".]\n\n  df now outputs all appropriate entries in the presence of bind mounts.\n  On some systems, entries would have been incorrectly elided due to\n  them being considered \"dummy\" mounts.\n  [bug introduced in coreutils-8.22]\n\n  du now silently ignores directory cycles introduced with bind mounts.\n  Previously it would issue a warning and exit with a failure status.\n  [bug introduced in coreutils-8.1]\n\n  head --bytes=-N and --lines=-N now handles devices more\n  consistently, not ignoring data from virtual devices like /dev/zero,\n  or on BSD systems data from tty devices.\n  [bug introduced in coreutils-5.0.1]\n\n  head --bytes=-N - no longer fails with a bogus diagnostic when stdin's\n  seek pointer is not at the beginning.\n  [bug introduced with the --bytes=-N feature in coreutils-5.0.1]\n\n  head --lines=-0, when the input does not contain a trailing '\\n',\n  now copies all input to stdout.  Previously nothing was output in this case.\n  [bug introduced with the --lines=-N feature in coreutils-5.0.1]\n\n  id, when invoked with no user name argument, now prints the correct group ID.\n  Previously, in the default output format, it would print the default group ID\n  in the password database, which may be neither real nor effective.  For e.g.,\n  when run set-GID, or when the database changes outside the current session.\n  [bug introduced in coreutils-8.1]\n\n  ln -sf now replaces symbolic links whose targets can't exist.  Previously\n  it would display an error, requiring --no-dereference to avoid the issue.\n  [bug introduced in coreutils-5.3.0]\n\n  ln -sr '' F no longer segfaults.  Now works as expected.\n  [bug introduced with the --relative feature in coreutils-8.16]\n\n  numfmt now handles blanks correctly in all unibyte locales.  Previously\n  in locales where character 0xA0 is a blank, numfmt would mishandle it.\n  [bug introduced when numfmt was added in coreutils-8.21]\n\n  ptx --format long option parsing no longer falls through into the --help case.\n  [bug introduced in TEXTUTILS-1_22i]\n\n  ptx now consistently trims whitespace when processing multiple files.\n  [This bug was present in \"the beginning\".]\n\n  seq again generates correct output with start or end values = -0.\n  [bug introduced in coreutils-8.20.]\n\n  shuf --repeat no longer dumps core if the input is empty.\n  [bug introduced with the --repeat feature in coreutils-8.22]\n\n  sort when using multiple threads now avoids undefined behavior with mutex\n  destruction, which could cause deadlocks on some implementations.\n  [bug introduced in coreutils-8.6]\n\n  tail -f now uses polling mode for VXFS to cater for its clustered mode.\n  [bug introduced with inotify support added in coreutils-7.5]\n\n** New features\n\n  od accepts a new option: --endian=TYPE to handle inputs with different byte\n  orders, or to provide consistent output on systems with disparate endianness.\n\n  configure accepts the new option --enable-single-binary to build all the\n  selected programs in a single binary called \"coreutils\".  The selected\n  programs can still be called directly using symlinks to \"coreutils\" or\n  shebangs with the option --coreutils-prog= passed to this program.  The\n  install behavior is determined by the option --enable-single-binary=symlinks\n  or --enable-single-binary=shebangs (the default).  With the symlinks option,\n  you can't make a second symlink to any program because that will change the\n  name of the called program, which is used by coreutils to determine the\n  desired program.  The shebangs option doesn't suffer from this problem, but\n  the /proc/$pid/cmdline file might not be updated on all the platforms.  The\n  functionality of each program is not affected but this single binary will\n  depend on all the required dynamic libraries even to run simple programs.\n  If you desire to build some tools outside the single binary file, you can\n  pass the option --enable-single-binary-exceptions=PROG_LIST with the comma\n  separated list of programs you want to build separately.  This flag\n  considerably reduces the overall size of the installed binaries which makes\n  it suitable for embedded system.\n\n** Changes in behavior\n\n  chroot with an argument of \"/\" no longer implicitly changes the current\n  directory to \"/\", allowing changing only user credentials for a command.\n\n  chroot --userspec will now unset supplemental groups associated with root,\n  and instead use the supplemental groups of the specified user.\n\n  cut -d$'\\n' again outputs lines identified in the --fields list, having\n  not done so in v8.21 and v8.22.  Note using this non portable functionality\n  will result in the delayed output of lines.\n\n  ls with none of LS_COLORS or COLORTERM environment variables set,\n  will now honor an empty or unknown TERM environment variable,\n  and not output colors even with --colors=always.\n\n** Improvements\n\n  chroot has better --userspec and --group look-ups, with numeric IDs never\n  causing name look-up errors.  Also look-ups are first done outside the chroot,\n  in case the look-up within the chroot fails due to library conflicts etc.\n\n  install now allows the combination of the -D and -t options.\n\n  numfmt supports zero padding of numbers using the standard printf\n  syntax of a leading zero, for example --format=\"%010f\".\n  Also throughput was improved by up to 800% by avoiding redundant processing.\n\n  shred now supports multiple passes on GNU/Linux tape devices by rewinding\n  the tape before each pass, avoids redundant writes to empty files,\n  uses direct I/O for all passes where possible, and attempts to clear\n  inode storage used for small files on some file systems.\n\n  split avoids unnecessary input buffering, immediately writing input to output\n  which is significant with --filter or when writing to fifos or stdout etc.\n\n  stat and tail work better with HFS+, HFSX, LogFS and ConfigFS.  stat -f\n  --format=%T now reports the file system type, and tail -f now uses inotify,\n  rather than the default of issuing a warning and reverting to polling.\n\n\n* Noteworthy changes in release 8.22 (2013-12-13) [stable]\n\n** Bug fixes\n\n  df now processes the mount list correctly in the presence of unstattable\n  mount points.  Previously it may have failed to output some mount points.\n  [bug introduced in coreutils-8.21]\n\n  df now processes symbolic links and relative paths to special files containing\n  a mounted file system correctly.  Previously df displayed the statistics about\n  the file system the file is stored on rather than the one inside.\n  [This bug was present in \"the beginning\".]\n\n  df now processes disk device nodes correctly in the presence of bind mounts.\n  Now df shows the base mounted file system rather than the last one mounted.\n  [This bug was present in \"the beginning\".]\n\n  install now removes the target file if the strip program failed for any\n  reason.  Before, that file was left behind, sometimes even with wrong\n  permissions.\n  [This bug was present in \"the beginning\".]\n\n  ln --relative now updates existing symlinks correctly.  Previously it based\n  the relative link on the dereferenced path of an existing link.\n  [This bug was introduced when --relative was added in coreutils-8.16.]\n\n  ls --recursive will no longer exit with \"serious\" exit code (2), if there\n  is an error reading a directory not specified on the command line.\n  [Bug introduced in coreutils-5.3.0]\n\n  mkdir, mkfifo, and mknod now work better when creating a file in a directory\n  with a default ACL whose umask disagrees with the process's umask, on a\n  system such as GNU/Linux where directory ACL umasks override process umasks.\n  [bug introduced in coreutils-6.0]\n\n  mv will now replace empty directories in the destination with directories\n  from the source, when copying across file systems.\n  [This bug was present in \"the beginning\".]\n\n  od -wN with N larger than 64K on a system with 32-bit size_t would\n  print approximately 2*N bytes of extraneous padding.\n  [Bug introduced in coreutils-7.0]\n\n  rm -I now prompts for confirmation before removing a write protected file.\n  [Bug introduced in coreutils-6.8]\n\n  shred once again uses direct I/O on systems requiring aligned buffers.\n  Also direct I/O failures for odd sized writes at end of file are now handled.\n  [The \"last write\" bug was introduced in coreutils-5.3.0 but masked\n   by the alignment bug introduced in coreutils-6.0]\n\n  tail --retry -f now waits for the files specified to appear.  Before, tail\n  would immediately exit when such a file is initially inaccessible.\n  [This bug was introduced when inotify support was added in coreutils-7.5]\n\n  tail -F has improved handling of symlinks.  Previously tail didn't respond\n  to the symlink target (re)appearing after being (re)created.\n  [This bug was introduced when inotify support was added in coreutils-7.5]\n\n** New features\n\n  cp, install, mkdir, mknod, mkfifo and mv now support \"restorecon\"\n  functionality through the -Z option, to set the SELinux context\n  appropriate for the new item location in the file system.\n\n  csplit accepts a new option: --suppressed-matched, to elide the lines\n  used to identify the split points.\n\n  df --output now accepts a 'file' field, to propagate a specified\n  command line argument through to the output.\n\n  du accepts a new option: --inodes to show the number of inodes instead\n  of the blocks used.\n\n  id accepts a new option: --zero (-z) to delimit the output entries by\n  a NUL instead of a white space character.\n\n  id and ls with -Z report the SMACK security context where available.\n  mkdir, mkfifo and mknod with --context set the SMACK context where available.\n\n  id can now lookup by user ID, in addition to the existing name lookup.\n\n  join accepts a new option: --zero-terminated (-z). As with the sort,uniq\n  option of the same name, this makes join consume and produce NUL-terminated\n  lines rather than newline-terminated lines.\n\n  uniq accepts a new option: --group to print all items, while separating\n  unique groups with empty lines.\n\n  shred accepts new parameters to the --remove option to give greater\n  control over that operation, which can greatly reduce sync overhead.\n\n  shuf accepts a new option: --repeat (-r), which can repeat items in\n  the output.\n\n** Changes in behavior\n\n  cp --link now dereferences a symbolic link as source before creating the\n  hard link in the destination unless the -P,--no-deref option is specified.\n  Previously, it would create a hard link of the symbolic link, even when\n  the dereferencing options -L or -H were specified.\n\n  cp, install, mkdir, mknod and mkfifo no longer accept an argument to the\n  short -Z option.  The --context equivalent still takes an optional argument.\n\n  dd status=none now suppresses all non fatal diagnostic messages,\n  not just the transfer counts.\n\n  df no longer accepts the long-obsolescent --megabytes option.\n\n  stdbuf now requires at least one buffering mode option to be specified,\n  as per the documented interface.\n\n** Improvements\n\n  base64 encoding throughput for bulk data is increased by about 60%.\n\n  md5sum can use libcrypto hash routines where allowed to potentially\n  get better performance through using more system specific logic.\n  sha1sum for example has improved throughput by 40% on an i3-2310M.\n  This also affects sha1sum, sha224sum, sha256sum, sha384sum and sha512sum.\n\n  stat and tail work better with EFIVARFS, EXOFS, F2FS, HOSTFS, SMACKFS, SNFS\n  and UBIFS.  stat -f --format=%T now reports the file system type, and tail -f\n  now uses inotify for files on all those except SNFS, rather than the default\n  (for unknown file system types) of issuing a warning and reverting to polling.\n\n  shuf outputs subsets of large inputs much more efficiently.\n  Reservoir sampling is used to limit memory usage based on the number of\n  outputs, rather than the number of inputs.\n\n  shred increases the default write block size from 12KiB to 64KiB\n  to align with other utilities and reduce the system call overhead.\n\n  split --line-bytes=SIZE, now only allocates memory as needed rather\n  than allocating SIZE bytes at program start.\n\n  stty now supports configuring \"stick\" (mark/space) parity where available.\n\n** Build-related\n\n  factor now builds on aarch64 based systems [bug introduced in coreutils-8.20]\n\n\n* Noteworthy changes in release 8.21 (2013-02-14) [stable]\n\n** New programs\n\n  numfmt: reformat numbers\n\n** New features\n\n  df now accepts the --output[=FIELD_LIST] option to define the list of columns\n  to include in the output, or all available columns if the FIELD_LIST is\n  omitted.  Note this enables df to output both block and inode fields together.\n\n  du now accepts the --threshold=SIZE option to restrict the output to entries\n  with such a minimum SIZE (or a maximum SIZE if it is negative).\n  du recognizes -t SIZE as equivalent, for compatibility with FreeBSD.\n\n  timeout now accepts the --preserve-status option to always propagate the exit\n  status, useful for commands that can run for an indeterminate amount of time.\n\n** Bug fixes\n\n  cp --no-preserve=mode now no longer exits non-zero.\n  [bug introduced in coreutils-8.20]\n\n  cut with a range like \"N-\" no longer allocates N/8 bytes.  That buffer\n  would never be used, and allocation failure could cause cut to fail.\n  [bug introduced in coreutils-8.10]\n\n  cut no longer accepts the invalid range 0-, which made it print empty lines.\n  Instead, cut now fails and emits an appropriate diagnostic.\n  [This bug was present in \"the beginning\".]\n\n  cut now handles overlapping to-EOL ranges properly.  Before, it would\n  interpret \"-b2-,3-\" like \"-b3-\".  Now it's treated like \"-b2-\".\n  [This bug was present in \"the beginning\".]\n\n  cut no longer prints extraneous delimiters when a to-EOL range subsumes\n  another range.  Before, \"echo 123|cut --output-delim=: -b2-,3\" would print\n  \"2:3\".  Now it prints \"23\".  [bug introduced in 5.3.0]\n\n  cut -f no longer inspects input line N+1 before fully outputting line N,\n  which avoids delayed output for intermittent input.\n  [bug introduced in TEXTUTILS-1_8b]\n\n  factor no longer loops infinitely on 32 bit powerpc or sparc systems.\n  [bug introduced in coreutils-8.20]\n\n  install -m M SOURCE DEST no longer has a race condition where DEST's\n  permissions are temporarily derived from SOURCE instead of from M.\n\n  pr -n no longer crashes when passed values >= 32.  Also, line numbers are\n  consistently padded with spaces, rather than with zeros for certain widths.\n  [bug introduced in TEXTUTILS-1_22i]\n\n  seq -w ensures that for numbers input in scientific notation,\n  the output numbers are properly aligned and of the correct width.\n  [This bug was present in \"the beginning\".]\n\n  seq -w ensures correct alignment when the step value includes a precision\n  while the start value does not, and the number sequence narrows.\n  [This bug was present in \"the beginning\".]\n\n  seq -s no longer prints an erroneous newline after the first number, and\n  outputs a newline after the last number rather than a trailing separator.\n  Also seq no longer ignores a specified step value when the end value is 1.\n  [bugs introduced in coreutils-8.20]\n\n  timeout now ensures that blocking of ALRM signals is not inherited from\n  its parent, which would cause timeouts to be ignored.\n  [the bug dates back to the initial implementation]\n\n** Changes in behavior\n\n  df --total now prints '-' into the target column (mount point) of the\n  summary line, accommodating the --output option where the target field\n  can be in any column.  If there is no source column, then df prints\n  'total' in the target column.\n\n  df now properly outputs file system information with bind mounts present on\n  the system by skipping duplicate entries (identified by the device number).\n  Consequently, df also elides the early-boot pseudo file system type \"rootfs\".\n\n  cut -d$'\\n' no longer outputs lines identified in the --fields list,\n  to align with other implementations and to avoid delayed output of lines.\n\n  nl no longer supports the --page-increment option, which has been\n  deprecated since coreutils-7.5.  Use --line-increment instead.\n\n** Improvements\n\n  readlink now supports multiple arguments, and a complementary\n  -z, --zero option to delimit output items with the NUL character.\n\n  stat and tail now know about CEPH.  stat -f --format=%T now reports the file\n  system type, and tail -f uses polling for files on CEPH file systems.\n\n  stty now supports configuring DTR/DSR hardware flow control where available.\n\n** Build-related\n\n  Perl is now more of a prerequisite.  It has long been required in order\n  to run (not skip) a significant percentage of the tests.  Now, it is\n  also required in order to generate proper man pages, via help2man.  The\n  generated man/*.1 man pages are no longer distributed.  Building without\n  perl, you would create stub man pages.  Thus, while perl is not an\n  official prerequisite (build and \"make check\" will still succeed), any\n  resulting man pages would be inferior.  In addition, this fixes a bug\n  in distributed (not from clone) Makefile.in that could cause parallel\n  build failure when building from modified sources, as is common practice\n  for a patched distribution package.\n\n  factor now builds on x86_64 with x32 ABI, 32 bit MIPS, and all HPPA systems,\n  by avoiding incompatible asm.  [bug introduced in coreutils-8.20]\n\n  A root-only test predicate would always fail.  Its job was to determine\n  whether our dummy user, $NON_ROOT_USERNAME, was able to run binaries from\n  the build directory.  As a result, all dependent tests were always skipped.\n  Now, those tests may be run once again.  [bug introduced in coreutils-8.20]\n\n\n* Noteworthy changes in release 8.20 (2012-10-23) [stable]\n\n** New features\n\n  dd now accepts 'status=none' to suppress all informational output.\n\n  md5sum now accepts the --tag option to print BSD-style output with GNU\n  file name escaping.  This also affects sha1sum, sha224sum, sha256sum,\n  sha384sum and sha512sum.\n\n** Bug fixes\n\n  cp could read from freed memory and could even make corrupt copies.\n  This could happen with a very fragmented and sparse input file,\n  on GNU/Linux file systems supporting fiemap extent scanning.\n  This bug also affects mv when it resorts to copying, and install.\n  [bug introduced in coreutils-8.11]\n\n  cp --no-preserve=mode now no longer preserves the original file's\n  permissions but correctly sets mode specified by 0666 & ~umask\n\n  du no longer emits a \"disk-corrupted\"-style diagnostic when it detects\n  a directory cycle that is due to a bind-mounted directory.  Instead,\n  it detects this precise type of cycle, diagnoses it as such and\n  eventually exits nonzero.\n\n  factor (when using gmp) would mistakenly declare some composite numbers\n  to be prime, e.g., 465658903, 2242724851, 6635692801 and many more.\n  The fix makes factor somewhat slower (~25%) for ranges of consecutive\n  numbers, and up to 8 times slower for some worst-case individual numbers.\n  [bug introduced in coreutils-7.0, with GNU MP support]\n\n  ls now correctly colors dangling symlinks when listing their containing\n  directories, with orphaned symlink coloring disabled in LS_COLORS.\n  [bug introduced in coreutils-8.14]\n\n  rm -i -d now prompts the user then removes an empty directory, rather\n  than ignoring the -d option and failing with an 'Is a directory' error.\n  [bug introduced in coreutils-8.19, with the addition of --dir (-d)]\n\n  rm -r S/ (where S is a symlink-to-directory) no longer gives the invalid\n  \"Too many levels of symbolic links\" diagnostic.\n  [bug introduced in coreutils-8.6]\n\n  seq now handles arbitrarily long non-negative whole numbers when the\n  increment is 1 and when no format-changing option is specified.\n  Before, this would infloop:\n    b=100000000000000000000; seq $b $b\n  [the bug dates back to the initial implementation]\n\n** Changes in behavior\n\n  nproc now diagnoses with an error, non option command line parameters.\n\n** Improvements\n\n  factor's core has been rewritten for speed and increased range.\n  It can now factor numbers up to 2^128, even without GMP support.\n  Its speed is from a few times better (for small numbers) to over\n  10,000 times better (just below 2^64).  The new code also runs a\n  deterministic primality test for each prime factor, not just a\n  probabilistic test.\n\n  seq is now up to 70 times faster than it was in coreutils-8.19 and prior,\n  but only with non-negative whole numbers, an increment of 1, and no\n  format-changing options.\n\n  stat and tail know about ZFS, VZFS and VMHGFS.  stat -f --format=%T now\n  reports the file system type, and tail -f now uses inotify for files on\n  ZFS and VZFS file systems, rather than the default (for unknown file\n  system types) of issuing a warning and reverting to polling.  tail -f\n  still uses polling for files on VMHGFS file systems.\n\n** Build-related\n\n  root-only tests now check for permissions of our dummy user,\n  $NON_ROOT_USERNAME, before trying to run binaries from the build directory.\n  Before, we would get hard-to-diagnose reports of failing root-only tests.\n  Now, those tests are skipped with a useful diagnostic when the root tests\n  are run without following the instructions in README.\n\n  We now build most directories using non-recursive make rules.  I.e.,\n  rather than running make in man/, lib/, src/, tests/, instead, the top\n  level Makefile.am includes a $dir/local.mk that describes how to build\n  the targets in the corresponding directory.  Two directories remain\n  unconverted: po/, gnulib-tests/.  One nice side-effect is that the more\n  accurate dependencies have eliminated a nagging occasional failure that\n  was seen when running parallel \"make syntax-check\".\n\n\n* Noteworthy changes in release 8.19 (2012-08-20) [stable]\n\n** Bug fixes\n\n  df now fails when the list of mounted file systems (/etc/mtab) cannot\n  be read, yet the file system type information is needed to process\n  certain options like -a, -l, -t and -x.\n  [This bug was present in \"the beginning\".]\n\n  sort -u could fail to output one or more result lines.\n  For example, this command would fail to print \"1\":\n  (yes 7 | head -11; echo 1) | sort --p=1 -S32b -u\n  [bug introduced in coreutils-8.6]\n\n  sort -u could read freed memory.\n  For example, this evokes a read from freed memory:\n  perl -le 'print \"a\\n\".\"0\"x900'|valgrind sort --p=1 -S32b -u>/dev/null\n  [bug introduced in coreutils-8.6]\n\n** New features\n\n  rm now accepts the --dir (-d) option which makes it remove empty directories.\n  Since removing empty directories is relatively safe, this option can be\n  used as a part of the alias rm='rm --dir'.  This improves compatibility\n  with Mac OS X and BSD systems which also honor the -d option.\n\n\n* Noteworthy changes in release 8.18 (2012-08-12) [stable]\n\n** Bug fixes\n\n  cksum now prints checksums atomically so that concurrent\n  processes will not intersperse their output.\n  [the bug dates back to the initial implementation]\n\n  date -d \"$(printf '\\xb0')\" would print 00:00:00 with today's date\n  rather than diagnosing the invalid input.  Now it reports this:\n  date: invalid date '\\260'\n  [This bug was present in \"the beginning\".]\n\n  df no longer outputs control characters present in the mount point name.\n  Such characters are replaced with '?', so for example, scripts consuming\n  lines output by df, can work reliably.\n  [This bug was present in \"the beginning\".]\n\n  df --total now exits with an appropriate diagnostic and error code, when\n  file system --type options do not lead to a processed file system.\n  [This bug dates back to when --total was added in coreutils-7.0]\n\n  head --lines=-N (-n-N) now resets the read pointer of a seekable input file.\n  This means that \"head -n-3\" no longer consumes all of its input, and lines\n  not output by head may be processed by other programs.  For example, this\n  command now prints the final line, 2, while before it would print nothing:\n    seq 2 > k; (head -n-1 > /dev/null; cat) < k\n  [This bug was present in \"the beginning\".]\n\n  ls --color would mis-color relative-named symlinks in /\n  [bug introduced in coreutils-8.17]\n\n  split now ensures it doesn't overwrite the input file with generated output.\n  [the bug dates back to the initial implementation]\n\n  stat and df now report the correct file system usage,\n  in all situations on GNU/Linux, by correctly determining the block size.\n  [df bug since coreutils-5.0.91, stat bug since the initial implementation]\n\n  tail -f no longer tries to use inotify on AUFS or PanFS file systems\n  [you might say this was introduced in coreutils-7.5, along with inotify\n   support, but even now, its magic number isn't in the usual place.]\n\n** New features\n\n  stat -f recognizes the new remote file system types: aufs, panfs.\n\n** Changes in behavior\n\n  su: this program has been removed.  We stopped installing \"su\" by\n  default with the release of coreutils-6.9.90 on 2007-12-01.  Now,\n  that the util-linux package has the union of the Suse and Fedora\n  patches as well as enough support to build on the Hurd, we no longer\n  have any reason to include it here.\n\n** Improvements\n\n  sort avoids redundant processing in the presence of inaccessible inputs,\n  or unwritable output.  Sort now diagnoses certain errors at start-up,\n  rather than after potentially expensive processing.\n\n  sort now allocates no more than 75% of physical memory by default,\n  to better share system resources, and thus operate more efficiently.\n  [The default max memory usage changed from 50% to 100% in coreutils-8.16]\n\n\n* Noteworthy changes in release 8.17 (2012-05-10) [stable]\n\n** Bug fixes\n\n  id and groups, when invoked with no user name argument, would print\n  the default group ID listed in the password database, and sometimes\n  that ID would be neither real nor effective.  For example, when run\n  set-GID, or in a session for which the default group has just been\n  changed, the new group ID would be listed, even though it is not\n  yet effective. [bug introduced in coreutils-8.1]\n\n  cp S D is no longer subject to a race: if an existing D were removed\n  between the initial stat and subsequent open-without-O_CREATE, cp would\n  fail with a confusing diagnostic saying that the destination, D, was not\n  found.  Now, in this unusual case, it retries the open (but with O_CREATE),\n  and hence usually succeeds.  With NFS attribute caching, the condition\n  was particularly easy to trigger, since there, the removal of D could\n  precede the initial stat.  [This bug was present in \"the beginning\".]\n\n  split --number=C /dev/null no longer appears to infloop on GNU/Hurd\n  [bug introduced in coreutils-8.8]\n\n  stat no longer reports a negative file size as a huge positive number.\n  [bug present since 'stat' was introduced in fileutils-4.1.9]\n\n** New features\n\n  split and truncate now allow any seekable files in situations where\n  the file size is needed, instead of insisting on regular files.\n\n  fmt now accepts the --goal=WIDTH (-g) option.\n\n  stat -f recognizes new file system types: bdevfs, inodefs, qnx6\n\n** Changes in behavior\n\n  cp,mv,install,cat,split: now read and write a minimum of 64KiB at a time.\n  This was previously 32KiB and increasing to 64KiB was seen to increase\n  throughput by about 10% when reading cached files on 64 bit GNU/Linux.\n\n  cp --attributes-only no longer truncates any existing destination file,\n  allowing for more general copying of attributes from one file to another.\n\n\n* Noteworthy changes in release 8.16 (2012-03-26) [stable]\n\n** New features\n\n  As a GNU extension, 'chmod', 'mkdir', and 'install' now accept operators\n  '-', '+', '=' followed by octal modes; for example, 'chmod +40 FOO' enables\n  and 'chmod -40 FOO' disables FOO's group-read permissions.  Operator\n  numeric modes can be combined with symbolic modes by separating them with\n  commas; for example, =0,u+r clears all permissions except for enabling\n  user-read permissions.  Unlike ordinary numeric modes, operator numeric\n  modes do not preserve directory setuid and setgid bits; for example,\n  'chmod =0 FOO' clears all of FOO's permissions, including setuid and setgid.\n\n  Also, ordinary numeric modes with five or more digits no longer preserve\n  setuid and setgid bits, so that 'chmod 00755 FOO' now clears FOO's setuid\n  and setgid bits.  This allows scripts to be portable to other systems which\n  lack the GNU extension mentioned previously, and where ordinary numeric\n  modes do not preserve directory setuid and setgid bits.\n\n  dd now accepts the count_bytes, skip_bytes iflags and the seek_bytes\n  oflag, to more easily allow processing portions of a file.\n\n  dd now accepts the conv=sparse flag to attempt to create sparse\n  output, by seeking rather than writing to the output file.\n\n  ln now accepts the --relative option, to generate a relative\n  symbolic link to a target, irrespective of how the target is specified.\n\n  split now accepts an optional \"from\" argument to --numeric-suffixes,\n  which changes the start number from the default of 0.\n\n  split now accepts the --additional-suffix option, to append an\n  additional static suffix to output file names.\n\n  basename now supports the -a and -s options, which allow processing\n  of more than one argument at a time.  Also the complementary\n  -z option was added to delimit output items with the NUL character.\n\n  dirname now supports more than one argument.  Also the complementary\n  -z option was added to delimit output items with the NUL character.\n\n** Bug fixes\n\n  du --one-file-system (-x) would ignore any non-directory specified on\n  the command line.  For example, \"touch f; du -x f\" would print nothing.\n  [bug introduced in coreutils-8.15]\n\n  mv now lets you move a symlink onto a same-inode destination file that\n  has two or more hard links.  Before, it would reject that, saying that\n  they are the same, implicitly warning you that the move would result in\n  data loss.  In this unusual case, when not moving the symlink onto its\n  referent, there is no risk of data loss, since the symlink will\n  typically still point to one of the hard links.\n\n  \"mv A B\" could succeed, yet A would remain.  This would happen only when\n  both A and B were hard links to the same symlink, and with a kernel for\n  which rename(\"A\",\"B\") does nothing and returns 0 (POSIX mandates this\n  surprising rename no-op behavior).  Now, mv handles this case by skipping\n  the usually-useless rename and simply unlinking A.\n\n  realpath no longer mishandles a root directory.  This was most\n  noticeable on platforms where // is a different directory than /,\n  but could also be observed with --relative-base=/ or\n  --relative-to=/.  [bug since the beginning, in 8.15]\n\n** Improvements\n\n  ls can be much more efficient, especially with large directories on file\n  systems for which getfilecon-, ACL-check- and XATTR-check-induced syscalls\n  fail with ENOTSUP or similar.\n\n  'realpath --relative-base=dir' in isolation now implies '--relative-to=dir'\n  instead of causing a usage failure.\n\n  split now supports an unlimited number of split files as default behavior.\n\n\n* Noteworthy changes in release 8.15 (2012-01-06) [stable]\n\n** New programs\n\n  realpath: print resolved file names.\n\n** Bug fixes\n\n  du -x no longer counts root directories of other file systems.\n  [bug introduced in coreutils-5.1.0]\n\n  ls --color many-entry-directory was uninterruptible for too long\n  [bug introduced in coreutils-5.2.1]\n\n  ls's -k option no longer affects how ls -l outputs file sizes.\n  It now affects only the per-directory block counts written by -l,\n  and the sizes written by -s.  This is for compatibility with BSD\n  and with POSIX 2008.  Because -k is no longer equivalent to\n  --block-size=1KiB, a new long option --kibibyte stands for -k.\n  [bug introduced in coreutils-4.5.4]\n\n  ls -l would leak a little memory (security context string) for each\n  nonempty directory listed on the command line, when using SELinux.\n  [bug probably introduced in coreutils-6.10 with SELinux support]\n\n  rm -rf DIR would fail with \"Device or resource busy\" on Cygwin with NWFS\n  and NcFsd file systems.  This did not affect Unix/Linux-based kernels.\n  [bug introduced in coreutils-8.0, when rm began using fts]\n\n  split -n 1/2 FILE no longer fails when operating on a growing file, or\n  (on some systems) when operating on a non-regular file like /dev/zero.\n  It would report \"/dev/zero: No such file or directory\" even though\n  the file obviously exists.  Same for -n l/2.\n  [bug introduced in coreutils-8.8, with the addition of the -n option]\n\n  stat -f now recognizes the FhGFS and PipeFS file system types.\n\n  tac no longer fails to handle two or more non-seekable inputs\n  [bug introduced in coreutils-5.3.0]\n\n  tail -f no longer tries to use inotify on GPFS or FhGFS file systems\n  [you might say this was introduced in coreutils-7.5, along with inotify\n   support, but the new magic numbers weren't in the usual places then.]\n\n** Changes in behavior\n\n  df avoids long UUID-including file system names in the default listing.\n  With recent enough kernel/tools, these long names would be used, pushing\n  second and subsequent columns far to the right.  Now, when a long name\n  refers to a symlink, and no file systems are specified, df prints the\n  usually-short referent instead.\n\n  tail -f now uses polling (not inotify) when any of its file arguments\n  resides on a file system of unknown type.  In addition, for each such\n  argument, tail -f prints a warning with the FS type magic number and a\n  request to report it to the bug-reporting address.\n\n\n* Noteworthy changes in release 8.14 (2011-10-12) [stable]\n\n** Bug fixes\n\n  ls --dereference no longer outputs erroneous \"argetm\" strings for\n  dangling symlinks when an 'ln=target' entry is in $LS_COLORS.\n  [bug introduced in fileutils-4.0]\n\n  ls -lL symlink once again properly prints \"+\" when the referent has an ACL.\n  [bug introduced in coreutils-8.13]\n\n  sort -g no longer infloops for certain inputs containing NaNs\n  [bug introduced in coreutils-8.5]\n\n** Improvements\n\n  md5sum --check now supports the -r format from the corresponding BSD tool.\n  This also affects sha1sum, sha224sum, sha384sum and sha512sum.\n\n  pwd now works also on systems without openat.  On such systems, pwd\n  would fail when run from a directory whose absolute name contained\n  more than PATH_MAX / 3 components.  The df, stat and readlink programs\n  are also affected due to their use of the canonicalize_* functions.\n\n** Changes in behavior\n\n  timeout now only processes the first signal received from the set\n  it is handling (SIGTERM, SIGINT, ...).  This is to support systems that\n  implicitly create threads for some timer functions (like GNU/kFreeBSD).\n\n** Build-related\n\n  \"make dist\" no longer builds .tar.gz files.\n  xz is portable enough and in wide-enough use that distributing\n  only .tar.xz files is enough.\n\n\n* Noteworthy changes in release 8.13 (2011-09-08) [stable]\n\n** Bug fixes\n\n  chown and chgrp with the -v --from= options, now output the correct owner.\n  I.e., for skipped files, the original ownership is output, not the new one.\n  [bug introduced in sh-utils-2.0g]\n\n  cp -r could mistakenly change the permissions of an existing destination\n  directory.  [bug introduced in coreutils-6.8]\n\n  cp -u -p would fail to preserve one hard link for each up-to-date copy\n  of a src-hard-linked name in the destination tree.  I.e., if s/a and s/b\n  are hard-linked and dst/s/a is up to date, \"cp -up s dst\" would copy s/b\n  to dst/s/b rather than simply linking dst/s/b to dst/s/a.\n  [This bug appears to have been present in \"the beginning\".]\n\n  fts-using tools (rm, du, chmod, chgrp, chown, chcon) no longer use memory\n  proportional to the number of entries in each directory they process.\n  Before, rm -rf 4-million-entry-directory would consume about 1GiB of memory.\n  Now, it uses less than 30MB, no matter how many entries there are.\n  [this bug was inherent in the use of fts: thus, for rm the bug was\n  introduced in coreutils-8.0.  The prior implementation of rm did not use\n  as much memory.  du, chmod, chgrp and chown started using fts in 6.0.\n  chcon was added in coreutils-6.9.91 with fts support.  ]\n\n  pr -T no longer ignores a specified LAST_PAGE to stop at.\n  [bug introduced in textutils-1.19q]\n\n  printf '%d' '\"' no longer accesses out-of-bounds memory in the diagnostic.\n  [bug introduced in sh-utils-1.16]\n\n  split --number l/... no longer creates extraneous files in certain cases.\n  [bug introduced in coreutils-8.8]\n\n  timeout now sends signals to commands that create their own process group.\n  timeout is no longer confused when starting off with a child process.\n  [bugs introduced in coreutils-7.0]\n\n  unexpand -a now aligns correctly when there are spaces spanning a tabstop,\n  followed by a tab.  In that case a space was dropped, causing misalignment.\n  We also now ensure that a space never precedes a tab.\n  [bug introduced in coreutils-5.3.0]\n\n** Changes in behavior\n\n  chmod, chown and chgrp now output the original attributes in messages,\n  when -v or -c specified.\n\n  cp -au (where --preserve=links is implicit) may now replace newer\n  files in the destination, to mirror hard links from the source.\n\n** New features\n\n  date now accepts ISO 8601 date-time strings with \"T\" as the\n  separator.  It has long parsed dates like \"2004-02-29 16:21:42\"\n  with a space between the date and time strings.  Now it also parses\n  \"2004-02-29T16:21:42\" and fractional-second and time-zone-annotated\n  variants like \"2004-02-29T16:21:42.333-07:00\"\n\n  md5sum accepts the new --strict option.  With --check, it makes the\n  tool exit non-zero for any invalid input line, rather than just warning.\n  This also affects sha1sum, sha224sum, sha384sum and sha512sum.\n\n  split accepts a new --filter=CMD option.  With it, split filters output\n  through CMD.  CMD may use the $FILE environment variable, which is set to\n  the nominal output file name for each invocation of CMD.  For example, to\n  split a file into 3 approximately equal parts, which are then compressed:\n    split -n3 --filter='xz > $FILE.xz' big\n  Note the use of single quotes, not double quotes.\n  That creates files named xaa.xz, xab.xz and xac.xz.\n\n  timeout accepts a new --foreground option, to support commands not started\n  directly from a shell prompt, where the command is interactive or needs to\n  receive signals initiated from the terminal.\n\n** Improvements\n\n  cp -p now copies trivial NSFv4 ACLs on Solaris 10.  Before, it would\n  mistakenly apply a non-trivial ACL to the destination file.\n\n  cp and ls now support HP-UX 11.11's ACLs, thanks to improved support\n  in gnulib.\n\n  df now supports disk partitions larger than 4 TiB on MacOS X 10.5\n  or newer and on AIX 5.2 or newer.\n\n  join --check-order now prints \"join: FILE:LINE_NUMBER: bad_line\" for an\n  unsorted input, rather than e.g., \"join: file 1 is not in sorted order\".\n\n  shuf outputs small subsets of large permutations much more efficiently.\n  For example 'shuf -i1-$((2**32-1)) -n2' no longer exhausts memory.\n\n  stat -f now recognizes the GPFS, MQUEUE and PSTOREFS file system types.\n\n  timeout now supports sub-second timeouts.\n\n** Build-related\n\n  Changes inherited from gnulib address a build failure on HP-UX 11.11\n  when using /opt/ansic/bin/cc.\n\n  Numerous portability and build improvements inherited via gnulib.\n\n\n* Noteworthy changes in release 8.12 (2011-04-26) [stable]\n\n** Bug fixes\n\n  tail's --follow=name option no longer implies --retry on systems\n  with inotify support.  [bug introduced in coreutils-7.5]\n\n** Changes in behavior\n\n  cp's extent-based (FIEMAP) copying code is more reliable in the face\n  of varying and undocumented file system semantics:\n  - it no longer treats unwritten extents specially\n  - a FIEMAP-based extent copy always uses the FIEMAP_FLAG_SYNC flag.\n      Before, it would incur the performance penalty of that sync only\n      for 2.6.38 and older kernels.  We thought all problems would be\n      resolved for 2.6.39.\n  - it now attempts a FIEMAP copy only on a file that appears sparse.\n      Sparse files are relatively unusual, and the copying code incurs\n      the performance penalty of the now-mandatory sync only for them.\n\n** Portability\n\n  dd once again compiles on AIX 5.1 and 5.2\n\n\n* Noteworthy changes in release 8.11 (2011-04-13) [stable]\n\n** Bug fixes\n\n  cp -a --link would not create a hardlink to a symlink, instead\n  copying the symlink and then not preserving its timestamp.\n  [bug introduced in coreutils-8.0]\n\n  cp now avoids FIEMAP issues with BTRFS before Linux 2.6.38,\n  which could result in corrupt copies of sparse files.\n  [bug introduced in coreutils-8.10]\n\n  cut could segfault when invoked with a user-specified output\n  delimiter and an unbounded range like \"-f1234567890-\".\n  [bug introduced in coreutils-5.3.0]\n\n  du would infloop when given --files0-from=DIR\n  [bug introduced in coreutils-7.1]\n\n  sort no longer spawns 7 worker threads to sort 16 lines\n  [bug introduced in coreutils-8.6]\n\n  touch built on Solaris 9 would segfault when run on Solaris 10\n  [bug introduced in coreutils-8.8]\n\n  wc would dereference a NULL pointer upon an early out-of-memory error\n  [bug introduced in coreutils-7.1]\n\n** New features\n\n  dd now accepts the 'nocache' flag to the iflag and oflag options,\n  which will discard any cache associated with the files, or\n  processed portion thereof.\n\n  dd now warns that 'iflag=fullblock' should be used,\n  in various cases where partial reads can cause issues.\n\n** Changes in behavior\n\n  cp now avoids syncing files when possible, when doing a FIEMAP copy.\n  The sync is only needed on Linux kernels before 2.6.39.\n  [The sync was introduced in coreutils-8.10]\n\n  cp now copies empty extents efficiently, when doing a FIEMAP copy.\n  It no longer reads the zero bytes from the input, and also can efficiently\n  create a hole in the output file when --sparse=always is specified.\n\n  df now aligns columns consistently, and no longer wraps entries\n  with longer device identifiers, over two lines.\n\n  install now rejects its long-deprecated --preserve_context option.\n  Use --preserve-context instead.\n\n  test now accepts \"==\" as a synonym for \"=\"\n\n\n* Noteworthy changes in release 8.10 (2011-02-04) [stable]\n\n** Bug fixes\n\n  du would abort with a failed assertion when two conditions are met:\n  part of the hierarchy being traversed is moved to a higher level in the\n  directory tree, and there is at least one more command line directory\n  argument following the one containing the moved sub-tree.\n  [bug introduced in coreutils-5.1.0]\n\n  join --header now skips the ordering check for the first line\n  even if the other file is empty.  [bug introduced in coreutils-8.5]\n\n  join -v2 now ensures the default output format prints the match field\n  at the start of the line when it is different to the match field for\n  the first file. [bug present in \"the beginning\".]\n\n  rm -f no longer fails for EINVAL or EILSEQ on file systems that\n  reject file names invalid for that file system.\n\n  uniq -f NUM no longer tries to process fields after end of line.\n  [bug introduced in coreutils-7.0]\n\n** New features\n\n  cp now copies sparse files efficiently on file systems with FIEMAP\n  support (ext4, btrfs, xfs, ocfs2).  Before, it had to read 2^20 bytes\n  when copying a 1MiB sparse file.  Now, it copies bytes only for the\n  non-sparse sections of a file.  Similarly, to induce a hole in the\n  output file, it had to detect a long sequence of zero bytes.  Now,\n  it knows precisely where each hole in an input file is, and can\n  reproduce them efficiently in the output file.  mv also benefits\n  when it resorts to copying, e.g., between file systems.\n\n  join now supports -o 'auto' which will automatically infer the\n  output format from the first line in each file, to ensure\n  the same number of fields are output for each line.\n\n** Changes in behavior\n\n  join no longer reports disorder when one of the files is empty.\n  This allows one to use join as a field extractor like:\n  join -a1 -o 1.3,1.1 - /dev/null\n\n\n* Noteworthy changes in release 8.9 (2011-01-04) [stable]\n\n** Bug fixes\n\n  split no longer creates files with a suffix length that\n  is dependent on the number of bytes or lines per file.\n  [bug introduced in coreutils-8.8]\n\n\n* Noteworthy changes in release 8.8 (2010-12-22) [stable]\n\n** Bug fixes\n\n  cp -u no longer does unnecessary copying merely because the source\n  has finer-grained timestamps than the destination.\n\n  od now prints floating-point numbers without losing information, and\n  it no longer omits spaces between floating-point columns in some cases.\n\n  sort -u with at least two threads could attempt to read through a\n  corrupted pointer. [bug introduced in coreutils-8.6]\n\n  sort with at least two threads and with blocked output would busy-loop\n  (spinlock) all threads, often using 100% of available CPU cycles to\n  do no work.  I.e., \"sort < big-file | less\" could waste a lot of power.\n  [bug introduced in coreutils-8.6]\n\n  sort with at least two threads no longer segfaults due to use of pointers\n  into the stack of an expired thread. [bug introduced in coreutils-8.6]\n\n  sort --compress no longer mishandles subprocesses' exit statuses,\n  no longer hangs indefinitely due to a bug in waiting for subprocesses,\n  and no longer generates many more than NMERGE subprocesses.\n\n  sort -m -o f f ... f no longer dumps core when file descriptors are limited.\n\n** Changes in behavior\n\n  sort will not create more than 8 threads by default due to diminishing\n  performance gains.  Also the --parallel option is no longer restricted\n  to the number of available processors.\n\n** New features\n\n  split accepts the --number/-n option to generate a specific number of\n  files, as well as the --elide-empty-files/-e and --unbuffered/-u\n  options to fine-tune the resulting output.\n\n\n* Noteworthy changes in release 8.7 (2010-11-13) [stable]\n\n** Bug fixes\n\n  cp, install, mv, and touch no longer crash when setting file times\n  on Solaris 10 Update 9 [Solaris PatchID 144488 and newer expose a\n  latent bug introduced in coreutils 8.1, and possibly a second latent\n  bug going at least as far back as coreutils 5.97]\n\n  csplit no longer corrupts heap when writing more than 999 files,\n  nor does it leak memory for every chunk of input processed\n  [the bugs were present in the initial implementation]\n\n  tail -F once again notices changes in a currently unavailable\n  remote directory [bug introduced in coreutils-7.5]\n\n** Changes in behavior\n\n  cp --attributes-only now completely overrides --reflink.\n  Previously a reflink was needlessly attempted.\n\n  stat's %X, %Y, and %Z directives once again print only the integer\n  part of seconds since the epoch.  This reverts a change from\n  coreutils-8.6, that was deemed unnecessarily disruptive.\n  To obtain a nanosecond-precision timestamp for %X use %.X;\n  if you want (say) just 3 fractional digits, use %.3X.\n  Likewise for %Y and %Z.\n\n  stat's new %W format directive would print floating point seconds.\n  However, with the above change to %X, %Y and %Z, we've made %W work\n  the same way as the others.\n\n  stat gained support for several printf-style flags, such as %'s for\n  listing sizes with the current locale's thousands separator.\n\n\n* Noteworthy changes in release 8.6 (2010-10-15) [stable]\n\n** Bug fixes\n\n  du no longer multiply counts a file that is a directory or whose\n  link count is 1, even if the file is reached multiple times by\n  following symlinks or via multiple arguments.\n\n  du -H and -L now consistently count pointed-to files instead of\n  symbolic links, and correctly diagnose dangling symlinks.\n\n  du --ignore=D now ignores directory D even when that directory is\n  found to be part of a directory cycle.  Before, du would issue a\n  \"NOTIFY YOUR SYSTEM MANAGER\" diagnostic and fail.\n\n  split now diagnoses read errors rather than silently exiting.\n  [bug introduced in coreutils-4.5.8]\n\n  tac would perform a double-free when given an input line longer than 16KiB.\n  [bug introduced in coreutils-8.3]\n\n  tail -F once again notices changes in a currently unavailable directory,\n  and works around a Linux kernel bug where inotify runs out of resources.\n  [bugs introduced in coreutils-7.5]\n\n  tr now consistently handles case conversion character classes.\n  In some locales, valid conversion specifications caused tr to abort,\n  while in all locales, some invalid specifications were undiagnosed.\n  [bugs introduced in coreutils 6.9.90 and 6.9.92]\n\n** New features\n\n  cp now accepts the --attributes-only option to not copy file data,\n  which is useful for efficiently modifying files.\n\n  du recognizes -d N as equivalent to --max-depth=N, for compatibility\n  with FreeBSD.\n\n  sort now accepts the --debug option, to highlight the part of the\n  line significant in the sort, and warn about questionable options.\n\n  sort now supports -d, -f, -i, -R, and -V in any combination.\n\n  stat now accepts the %m format directive to output the mount point\n  for a file.  It also accepts the %w and %W format directives for\n  outputting the birth time of a file, if one is available.\n\n** Changes in behavior\n\n  df now consistently prints the device name for a bind mounted file,\n  rather than its aliased target.\n\n  du now uses less than half as much memory when operating on trees\n  with many hard-linked files.  With --count-links (-l), or when\n  operating on trees with no hard-linked files, there is no change.\n\n  ls -l now uses the traditional three field time style rather than\n  the wider two field numeric ISO style, in locales where a style has\n  not been specified.  The new approach has nicer behavior in some\n  locales, including English, which was judged to outweigh the disadvantage\n  of generating less-predictable and often worse output in poorly-configured\n  locales where there is an onus to specify appropriate non-default styles.\n  [The old behavior was introduced in coreutils-6.0 and had been removed\n   for English only using a different method since coreutils-8.1]\n\n  rm's -d now evokes an error;  before, it was silently ignored.\n\n  sort -g now uses long doubles for greater range and precision.\n\n  sort -h no longer rejects numbers with leading or trailing \".\", and\n  no longer accepts numbers with multiple \".\".  It now considers all\n  zeros to be equal.\n\n  sort now uses the number of available processors to parallelize\n  the sorting operation.  The number of sorts run concurrently can be\n  limited with the --parallel option or with external process\n  control like taskset for example.\n\n  stat now provides translated output when no format is specified.\n\n  stat no longer accepts the --context (-Z) option.  Initially it was\n  merely accepted and ignored, for compatibility.  Starting two years\n  ago, with coreutils-7.0, its use evoked a warning.  Printing the\n  SELinux context of a file can be done with the %C format directive,\n  and the default output when no format is specified now automatically\n  includes %C when context information is available.\n\n  stat no longer accepts the %C directive when the --file-system\n  option is in effect, since security context is a file attribute\n  rather than a file system attribute.\n\n  stat now outputs the full sub-second resolution for the atime,\n  mtime, and ctime values since the Epoch, when using the %X, %Y, and\n  %Z directives of the --format option.  This matches the fact that\n  %x, %y, and %z were already doing so for the human-readable variant.\n\n  touch's --file option is no longer recognized.  Use --reference=F (-r)\n  instead.  --file has not been documented for 15 years, and its use has\n  elicited a warning since coreutils-7.1.\n\n  truncate now supports setting file sizes relative to a reference file.\n  Also errors are no longer suppressed for unsupported file types, and\n  relative sizes are restricted to supported file types.\n\n\n* Noteworthy changes in release 8.5 (2010-04-23) [stable]\n\n** Bug fixes\n\n  cp and mv once again support preserving extended attributes.\n  [bug introduced in coreutils-8.4]\n\n  cp now preserves \"capabilities\" when also preserving file ownership.\n\n  ls --color once again honors the 'NORMAL' dircolors directive.\n  [bug introduced in coreutils-6.11]\n\n  sort -M now handles abbreviated months that are aligned using blanks\n  in the locale database.  Also locales with 8 bit characters are\n  handled correctly, including multi byte locales with the caveat\n  that multi byte characters are matched case sensitively.\n\n  sort again handles obsolescent key formats (+POS -POS) correctly.\n  Previously if -POS was specified, 1 field too many was used in the sort.\n  [bug introduced in coreutils-7.2]\n\n** New features\n\n  join now accepts the --header option, to treat the first line of each\n  file as a header line to be joined and printed unconditionally.\n\n  timeout now accepts the --kill-after option which sends a kill\n  signal to the monitored command if it's still running the specified\n  duration after the initial signal was sent.\n\n  who: the \"+/-\" --mesg (-T) indicator of whether a user/tty is accepting\n  messages could be incorrectly listed as \"+\", when in fact, the user was\n  not accepting messages (mesg no).  Before, who would examine only the\n  permission bits, and not consider the group of the TTY device file.\n  Thus, if a login tty's group would change somehow e.g., to \"root\",\n  that would make it unwritable (via write(1)) by normal users, in spite\n  of whatever the permission bits might imply.  Now, when configured\n  using the --with-tty-group[=NAME] option, who also compares the group\n  of the TTY device with NAME (or \"tty\" if no group name is specified).\n\n** Changes in behavior\n\n  ls --color no longer emits the final 3-byte color-resetting escape\n  sequence when it would be a no-op.\n\n  join -t '' no longer emits an error and instead operates on\n  each line as a whole (even if they contain NUL characters).\n\n\n* Noteworthy changes in release 8.4 (2010-01-13) [stable]\n\n** Bug fixes\n\n  nproc --all is now guaranteed to be as large as the count\n  of available processors, which may not have been the case\n  on GNU/Linux systems with neither /proc nor /sys available.\n  [bug introduced in coreutils-8.1]\n\n** Build-related\n\n  Work around a build failure when using buggy <sys/capability.h>.\n  Alternatively, configure with --disable-libcap.\n\n  Compilation would fail on systems using glibc-2.7..2.9 due to changes in\n  gnulib's wchar.h that tickled a bug in at least those versions of glibc's\n  own <wchar.h> header.  Now, gnulib works around the bug in those older\n  glibc <wchar.h> headers.\n\n  Building would fail with a link error (cp/copy.o) when XATTR headers\n  were installed without the corresponding library.  Now, configure\n  detects that and disables xattr support, as one would expect.\n\n\n* Noteworthy changes in release 8.3 (2010-01-07) [stable]\n\n** Bug fixes\n\n  cp -p, install -p, mv, and touch -c could trigger a spurious error\n  message when using new glibc coupled with an old kernel.\n  [bug introduced in coreutils-6.12].\n\n  ls -l --color no longer prints \"argetm\" in front of dangling\n  symlinks when the 'LINK target' directive was given to dircolors.\n  [bug introduced in fileutils-4.0]\n\n  pr's page header was improperly formatted for long file names.\n  [bug introduced in coreutils-7.2]\n\n  rm -r --one-file-system works once again.\n  The rewrite to make rm use fts introduced a regression whereby\n  a command of the above form would fail for all subdirectories.\n  [bug introduced in coreutils-8.0]\n\n  stat -f recognizes more file system types: k-afs, fuseblk, gfs/gfs2, ocfs2,\n  and rpc_pipefs. Also Minix V3 is displayed correctly as minix3, not minux3.\n  [bug introduced in coreutils-8.1]\n\n  tail -f (inotify-enabled) once again works with remote files.\n  The use of inotify with remote files meant that any changes to those\n  files that was not done from the local system would go unnoticed.\n  [bug introduced in coreutils-7.5]\n\n  tail -F (inotify-enabled) would abort when a tailed file is repeatedly\n  renamed-aside and then recreated.\n  [bug introduced in coreutils-7.5]\n\n  tail -F (inotify-enabled) could fail to follow renamed files.\n  E.g., given a \"tail -F a b\" process, running \"mv a b\" would\n  make tail stop tracking additions to \"b\".\n  [bug introduced in coreutils-7.5]\n\n  touch -a and touch -m could trigger bugs in some file systems, such\n  as xfs or ntfs-3g, and fail to update timestamps.\n  [bug introduced in coreutils-8.1]\n\n  wc now prints counts atomically so that concurrent\n  processes will not intersperse their output.\n  [the issue dates back to the initial implementation]\n\n\n* Noteworthy changes in release 8.2 (2009-12-11) [stable]\n\n** Bug fixes\n\n  id's use of mgetgroups no longer writes beyond the end of a malloc'd buffer\n  [bug introduced in coreutils-8.1]\n\n  id no longer crashes on systems without supplementary group support.\n  [bug introduced in coreutils-8.1]\n\n  rm once again handles zero-length arguments properly.\n  The rewrite to make rm use fts introduced a regression whereby\n  a command like \"rm a '' b\" would fail to remove \"a\" and \"b\", due to\n  the presence of the empty string argument.\n  [bug introduced in coreutils-8.0]\n\n  sort is now immune to the signal handling of its parent.\n  Specifically sort now doesn't exit with an error message\n  if it uses helper processes for compression and its parent\n  ignores CHLD signals. [bug introduced in coreutils-6.9]\n\n  tail without -f no longer accesses uninitialized memory\n  [bug introduced in coreutils-7.6]\n\n  timeout is now immune to the signal handling of its parent.\n  Specifically timeout now doesn't exit with an error message\n  if its parent ignores CHLD signals. [bug introduced in coreutils-7.6]\n\n  a user running \"make distcheck\" in the coreutils source directory,\n  with TMPDIR unset or set to the name of a world-writable directory,\n  and with a malicious user on the same system\n  was vulnerable to arbitrary code execution\n  [bug introduced in coreutils-5.0]\n\n\n* Noteworthy changes in release 8.1 (2009-11-18) [stable]\n\n** Bug fixes\n\n  chcon no longer exits immediately just because SELinux is disabled.\n  Even then, chcon may still be useful.\n  [bug introduced in coreutils-8.0]\n\n  chcon, chgrp, chmod, chown and du now diagnose an ostensible directory cycle\n  and arrange to exit nonzero.  Before, they would silently ignore the\n  offending directory and all \"contents.\"\n\n  env -u A=B now fails, rather than silently adding A to the\n  environment.  Likewise, printenv A=B silently ignores the invalid\n  name.  [the bugs date back to the initial implementation]\n\n  ls --color now handles files with capabilities correctly.  Previously\n  files with capabilities were often not colored, and also sometimes, files\n  without capabilities were colored in error. [bug introduced in coreutils-7.0]\n\n  md5sum now prints checksums atomically so that concurrent\n  processes will not intersperse their output.\n  This also affected sum, sha1sum, sha224sum, sha384sum and sha512sum.\n  [the bug dates back to the initial implementation]\n\n  mktemp no longer leaves a temporary file behind if it was unable to\n  output the name of the file to stdout.\n  [the bug dates back to the initial implementation]\n\n  nice -n -1 PROGRAM now runs PROGRAM even when its internal setpriority\n  call fails with errno == EACCES.\n  [the bug dates back to the initial implementation]\n\n  nice, nohup, and su now refuse to execute the subsidiary program if\n  they detect write failure in printing an otherwise non-fatal warning\n  message to stderr.\n\n  stat -f recognizes more file system types: afs, cifs, anon-inode FS,\n  btrfs, cgroupfs, cramfs-wend, debugfs, futexfs, hfs, inotifyfs, minux3,\n  nilfs, securityfs, selinux, xenfs\n\n  tail -f (inotify-enabled) now avoids a race condition.\n  Before, any data appended in the tiny interval between the initial\n  read-to-EOF and the inotify watch initialization would be ignored\n  initially (until more data was appended), or forever, if the file\n  were first renamed or unlinked or never modified.\n  [The race was introduced in coreutils-7.5]\n\n  tail -F (inotify-enabled) now consistently tails a file that has been\n  replaced via renaming.  That operation provokes either of two sequences\n  of inotify events.  The less common sequence is now handled as well.\n  [The bug came with the implementation change in coreutils-7.5]\n\n  timeout now doesn't exit unless the command it is monitoring does,\n  for any specified signal. [bug introduced in coreutils-7.0].\n\n** Changes in behavior\n\n  chroot, env, nice, and su fail with status 125, rather than 1, on\n  internal error such as failure to parse command line arguments; this\n  is for consistency with stdbuf and timeout, and avoids ambiguity\n  with the invoked command failing with status 1.  Likewise, nohup\n  fails with status 125 instead of 127.\n\n  du (due to a change in gnulib's fts) can now traverse NFSv4 automounted\n  directories in which the stat'd device number of the mount point differs\n  during a traversal.  Before, it would fail, because such a mismatch would\n  usually represent a serious error or a subversion attempt.\n\n  echo and printf now interpret \\e as the Escape character (0x1B).\n\n  rm -f /read-only-fs/nonexistent now succeeds and prints no diagnostic\n  on systems with an unlinkat syscall that sets errno to EROFS in that case.\n  Before, it would fail with a \"Read-only file system\" diagnostic.\n  Also, \"rm /read-only-fs/nonexistent\" now reports \"file not found\" rather\n  than the less precise \"Read-only file system\" error.\n\n** New programs\n\n  nproc: Print the number of processing units available to a process.\n\n** New features\n\n  env and printenv now accept the option --null (-0), as a means to\n  avoid ambiguity with newlines embedded in the environment.\n\n  md5sum --check now also accepts openssl-style checksums.\n  So do sha1sum, sha224sum, sha384sum and sha512sum.\n\n  mktemp now accepts the option --suffix to provide a known suffix\n  after the substitution in the template.  Additionally, uses such as\n  \"mktemp fileXXXXXX.txt\" are able to infer an appropriate --suffix.\n\n  touch now accepts the option --no-dereference (-h), as a means to\n  change symlink timestamps on platforms with enough support.\n\n\n* Noteworthy changes in release 8.0 (2009-10-06) [beta]\n\n** Bug fixes\n\n  cp --preserve=xattr and --archive now preserve extended attributes even\n  when the source file doesn't have write access.\n  [bug introduced in coreutils-7.1]\n\n  touch -t [[CC]YY]MMDDhhmm[.ss] now accepts a timestamp string ending in .60,\n  to accommodate leap seconds.\n  [the bug dates back to the initial implementation]\n\n  ls --color now reverts to the color of a base file type consistently\n  when the color of a more specific type is disabled.\n  [bug introduced in coreutils-5.90]\n\n  ls -LR exits with status 2, not 0, when it encounters a cycle\n\n  \"ls -is\" is now consistent with ls -lis in ignoring values returned\n  from a failed stat/lstat.  For example ls -Lis now prints \"?\", not \"0\",\n  for the inode number and allocated size of a dereferenced dangling symlink.\n\n  tail --follow --pid now avoids a race condition where data written\n  just before the process dies might not have been output by tail.\n  Also, tail no longer delays at all when the specified pid is not live.\n  [The race was introduced in coreutils-7.5,\n   and the unnecessary delay was present since textutils-1.22o]\n\n** Portability\n\n  On Solaris 9, many commands would mistakenly treat file/ the same as\n  file.  Now, even on such a system, path resolution obeys the POSIX\n  rules that a trailing slash ensures that the preceding name is a\n  directory or a symlink to a directory.\n\n** Changes in behavior\n\n  id no longer prints SELinux \" context=...\" when the POSIXLY_CORRECT\n  environment variable is set.\n\n  readlink -f now ignores a trailing slash when deciding if the\n  last component (possibly via a dangling symlink) can be created,\n  since mkdir will succeed in that case.\n\n** New features\n\n  ln now accepts the options --logical (-L) and --physical (-P),\n  added by POSIX 2008.  The default behavior is -P on systems like\n  GNU/Linux where link(2) creates hard links to symlinks, and -L on\n  BSD systems where link(2) follows symlinks.\n\n  stat: without -f, a command-line argument of \"-\" now means standard input.\n  With --file-system (-f), an argument of \"-\" is now rejected.\n  If you really must operate on a file named \"-\", specify it as\n  \"./-\" or use \"--\" to separate options from arguments.\n\n** Improvements\n\n  rm: rewrite to use gnulib's fts\n  This makes rm -rf significantly faster (400-500%) in some pathological\n  cases, and slightly slower (20%) in at least one pathological case.\n\n  rm -r deletes deep hierarchies more efficiently.  Before, execution time\n  was quadratic in the depth of the hierarchy, now it is merely linear.\n  However, this improvement is not as pronounced as might be expected for\n  very deep trees, because prior to this change, for any relative name\n  length longer than 8KiB, rm -r would sacrifice official conformance to\n  avoid the disproportionate quadratic performance penalty.  Leading to\n  another improvement:\n\n  rm -r is now slightly more standard-conforming when operating on\n  write-protected files with relative names longer than 8KiB.\n\n\n* Noteworthy changes in release 7.6 (2009-09-11) [stable]\n\n** Bug fixes\n\n  cp, mv now ignore failure to preserve a symlink timestamp, when it is\n  due to their running on a kernel older than what was implied by headers\n  and libraries tested at configure time.\n  [bug introduced in coreutils-7.5]\n\n  cp --reflink --preserve now preserves attributes when cloning a file.\n  [bug introduced in coreutils-7.5]\n\n  cp --preserve=xattr no longer leaks resources on each preservation failure.\n  [bug introduced in coreutils-7.1]\n\n  dd now exits with non-zero status when it encounters a write error while\n  printing a summary to stderr.\n  [bug introduced in coreutils-6.11]\n\n  dd cbs=N conv=unblock would fail to print a final newline when the size\n  of the input was not a multiple of N bytes.\n  [the non-conforming behavior dates back to the initial implementation]\n\n  df no longer requires that each command-line argument be readable\n  [bug introduced in coreutils-7.3]\n\n  ls -i now prints consistent inode numbers also for mount points.\n  This makes ls -i DIR less efficient on systems with dysfunctional readdir,\n  because ls must stat every file in order to obtain a guaranteed-valid\n  inode number.  [bug introduced in coreutils-6.0]\n\n  tail -f (inotify-enabled) now flushes any initial output before blocking.\n  Before, this would print nothing and wait: stdbuf -o 4K tail -f /etc/passwd\n  Note that this bug affects tail -f only when its standard output is buffered,\n  which is relatively unusual.\n  [bug introduced in coreutils-7.5]\n\n  tail -f once again works with standard input.  inotify-enabled tail -f\n  would fail when operating on a nameless stdin.  I.e., tail -f < /etc/passwd\n  would say \"tail: cannot watch `-': No such file or directory\", yet the\n  relatively baroque tail -f /dev/stdin < /etc/passwd would work.  Now, the\n  offending usage causes tail to revert to its conventional sleep-based\n  (i.e., not inotify-based) implementation.\n  [bug introduced in coreutils-7.5]\n\n** Portability\n\n  ln, link: link f z/ would mistakenly succeed on Solaris 10, given an\n  existing file, f, and nothing named \"z\".  ln -T f z/ has the same problem.\n  Each would mistakenly create \"z\" as a link to \"f\".  Now, even on such a\n  system, each command reports the error, e.g.,\n  link: cannot create link `z/' to `f': Not a directory\n\n** New features\n\n  cp --reflink accepts a new \"auto\" parameter which falls back to\n  a standard copy if creating a copy-on-write clone is not possible.\n\n** Changes in behavior\n\n  tail -f now ignores \"-\" when stdin is a pipe or FIFO.\n  tail-with-no-args now ignores -f unconditionally when stdin is a pipe or FIFO.\n  Before, it would ignore -f only when no file argument was specified,\n  and then only when POSIXLY_CORRECT was set.  Now, :|tail -f - terminates\n  immediately.  Before, it would block indefinitely.\n\n\n* Noteworthy changes in release 7.5 (2009-08-20) [stable]\n\n** Bug fixes\n\n  dd's oflag=direct option now works even when the size of the input\n  is not a multiple of e.g., 512 bytes.\n\n  dd now handles signals consistently even when they're received\n  before data copying has started.\n\n  install runs faster again with SELinux enabled\n  [introduced in coreutils-7.0]\n\n  ls -1U (with two or more arguments, at least one a nonempty directory)\n  would print entry names *before* the name of the containing directory.\n  Also fixed incorrect output of ls -1RU and ls -1sU.\n  [introduced in coreutils-7.0]\n\n  sort now correctly ignores fields whose ending position is specified\n  before the start position. Previously in numeric mode the remaining\n  part of the line after the start position was used as the sort key.\n  [This bug appears to have been present in \"the beginning\".]\n\n  truncate -s failed to skip all whitespace in the option argument in\n  some locales.\n\n** New programs\n\n  stdbuf: A new program to run a command with modified stdio buffering\n  for its standard streams.\n\n** Changes in behavior\n\n  ls --color: files with multiple hard links are no longer colored differently\n  by default. That can be enabled by changing the LS_COLORS environment\n  variable. You can control that using the MULTIHARDLINK dircolors input\n  variable which corresponds to the 'mh' LS_COLORS item. Note these variables\n  were renamed from 'HARDLINK' and 'hl' which were available since\n  coreutils-7.1 when this feature was introduced.\n\n** Deprecated options\n\n  nl --page-increment: deprecated in favor of --line-increment, the new option\n  maintains the previous semantics and the same short option, -i.\n\n** New features\n\n  chroot now accepts the options --userspec and --groups.\n\n  cp accepts a new option, --reflink: create a lightweight copy\n  using copy-on-write (COW).  This is currently only supported within\n  a btrfs file system.\n\n  cp now preserves timestamps on symbolic links, when possible\n\n  sort accepts a new option, --human-numeric-sort (-h): sort numbers\n  while honoring human readable suffixes like KiB and MB etc.\n\n  tail --follow now uses inotify when possible, to be more responsive\n  to file changes and more efficient when monitoring many files.\n\n\n* Noteworthy changes in release 7.4 (2009-05-07) [stable]\n\n** Bug fixes\n\n  date -d 'next mon', when run on a Monday, now prints the date\n  7 days in the future rather than the current day.  Same for any other\n  day-of-the-week name, when run on that same day of the week.\n  [This bug appears to have been present in \"the beginning\". ]\n\n  date -d tuesday, when run on a Tuesday -- using date built from the 7.3\n  release tarball, not from git -- would print the date 7 days in the future.\n  Now, it works properly and prints the current date.  That was due to\n  human error (including not-committed changes in a release tarball)\n  and the fact that there is no check to detect when the gnulib/ git\n  submodule is dirty.\n\n** Build-related\n\n  make check: two tests have been corrected\n\n** Portability\n\n  There have been some ACL-related portability fixes for *BSD,\n  inherited from gnulib.\n\n\n* Noteworthy changes in release 7.3 (2009-05-01) [stable]\n\n** Bug fixes\n\n  cp now diagnoses failure to preserve selinux/xattr attributes when\n  --preserve=context,xattr is specified in combination with -a.\n  Also, cp no longer suppresses attribute-preservation diagnostics\n  when preserving SELinux context was explicitly requested.\n\n  ls now aligns output correctly in the presence of abbreviated month\n  names from the locale database that have differing widths.\n\n  ls -v and sort -V now order names like \"#.b#\" properly\n\n  mv: do not print diagnostics when failing to preserve xattr's on file\n  systems without xattr support.\n\n  sort -m no longer segfaults when its output file is also an input file.\n  E.g., with this, touch 1; sort -m -o 1 1, sort would segfault.\n  [introduced in coreutils-7.2]\n\n** Changes in behavior\n\n  shred, sort, shuf: now use an internal pseudorandom generator by default.\n  This is mainly noticeable in shred where the 3 random passes it does by\n  default should proceed at the speed of the disk.  Previously /dev/urandom\n  was used if available, which is relatively slow on GNU/Linux systems.\n\n** Improved robustness\n\n  cp would exit successfully after copying less than the full contents\n  of a file larger than ~4000 bytes from a linux-/proc file system to a\n  destination file system with a fundamental block size of 4KiB or greater.\n  Reading into a 4KiB-or-larger buffer, cp's \"read\" syscall would return\n  a value smaller than 4096, and cp would interpret that as EOF (POSIX\n  allows this).  This optimization, now removed, saved 50% of cp's read\n  syscalls when copying small files.  Affected linux kernels: at least\n  2.6.9 through 2.6.29.\n  [the optimization was introduced in coreutils-6.0]\n\n** Portability\n\n  df now pre-mounts automountable directories even with automounters for\n  which stat-like syscalls no longer provoke mounting.  Now, df uses open.\n\n  'id -G $USER' now works correctly even on Darwin and NetBSD. Previously it\n  would either truncate the group list to 10, or go into an infinite loop,\n  due to their non-standard getgrouplist implementations.\n  [truncation introduced in coreutils-6.11]\n  [infinite loop introduced in coreutils-7.1]\n\n\n* Noteworthy changes in release 7.2 (2009-03-31) [stable]\n\n** New features\n\n  pwd now accepts the options --logical (-L) and --physical (-P).  For\n  compatibility with existing scripts, -P is the default behavior\n  unless POSIXLY_CORRECT is requested.\n\n** Bug fixes\n\n  cat once again immediately outputs data it has processed.\n  Previously it would have been buffered and only output if enough\n  data was read, or on process exit.\n  [bug introduced in coreutils-6.0]\n\n  comm's new --check-order option would fail to detect disorder on any pair\n  of lines where one was a prefix of the other.  For example, this would\n  fail to report the disorder: printf 'Xb\\nX\\n'>k; comm --check-order k k\n  [bug introduced in coreutils-7.0]\n\n  cp once again diagnoses the invalid \"cp -rl dir dir\" right away,\n  rather than after creating a very deep dir/dir/dir/... hierarchy.\n  The bug strikes only with both --recursive (-r, -R) and --link (-l).\n  [bug introduced in coreutils-7.1]\n\n  ls --sort=version (-v) sorted names beginning with \".\" inconsistently.\n  Now, names that start with \".\" are always listed before those that don't.\n\n  pr: fix the bug whereby --indent=N (-o) did not indent header lines\n  [bug introduced in coreutils-6.9.90]\n\n  sort now handles specified key ends correctly.\n  Previously -k1,1b would have caused leading space from field 2 to be\n  included in the sort while -k2,3.0 would have not included field 3.\n\n** Changes in behavior\n\n  cat,cp,install,mv,split: these programs now read and write a minimum\n  of 32KiB at a time.  This was seen to double throughput when reading\n  cached files on GNU/Linux-based systems.\n\n  cp -a now tries to preserve extended attributes (xattr), but does not\n  diagnose xattr-preservation failure.  However, cp --preserve=all still does.\n\n  ls --color: hard link highlighting can be now disabled by changing the\n  LS_COLORS environment variable. To disable it you can add something like\n  this to your profile: eval `dircolors | sed s/hl=[^:]*:/hl=:/`\n\n\n* Noteworthy changes in release 7.1 (2009-02-21) [stable]\n\n** New features\n\n  Add extended attribute support available on certain filesystems like ext2\n  and XFS.\n    cp: Tries to copy xattrs when --preserve=xattr or --preserve=all specified\n    mv: Always tries to copy xattrs\n    install: Never copies xattrs\n\n  cp and mv accept a new option, --no-clobber (-n): silently refrain\n  from overwriting any existing destination file\n\n  dd accepts iflag=cio and oflag=cio to open the file in CIO (concurrent I/O)\n  mode where this feature is available.\n\n  install accepts a new option, --compare (-C): compare each pair of source\n  and destination files, and if the destination has identical content and\n  any specified owner, group, permissions, and possibly SELinux context, then\n  do not modify the destination at all.\n\n  ls --color now highlights hard linked files, too\n\n  stat -f recognizes the Lustre file system type\n\n** Bug fixes\n\n  chgrp, chmod, chown --silent (--quiet, -f) no longer print some diagnostics\n  [bug introduced in coreutils-5.1]\n\n  cp uses much less memory in some situations\n\n  cp -a now correctly tries to preserve SELinux context (announced in 6.9.90),\n  doesn't inform about failure, unlike with --preserve=all\n\n  du --files0-from=FILE no longer reads all of FILE into RAM before\n  processing the first file name\n\n  seq 9223372036854775807 9223372036854775808 now prints only two numbers\n  on systems with extended long double support and good library support.\n  Even with this patch, on some systems, it still produces invalid output,\n  from 3 to at least 1026 lines long. [bug introduced in coreutils-6.11]\n\n  seq -w now accounts for a decimal point added to the last number\n  to correctly print all numbers to the same width.\n\n  wc --files0-from=FILE no longer reads all of FILE into RAM, before\n  processing the first file name, unless the list of names is known\n  to be small enough.\n\n** Changes in behavior\n\n  cp and mv: the --reply={yes,no,query} option has been removed.\n  Using it has elicited a warning for the last three years.\n\n  dd: user specified offsets that are too big are handled better.\n  Previously, erroneous parameters to skip and seek could result\n  in redundant reading of the file with no warnings or errors.\n\n  du: -H (initially equivalent to --si) is now equivalent to\n  --dereference-args, and thus works as POSIX requires\n\n  shred: now does 3 overwrite passes by default rather than 25.\n\n  ls -l now marks SELinux-only files with the less obtrusive '.',\n  rather than '+'.  A file with any other combination of MAC and ACL\n  is still marked with a '+'.\n\n\n* Noteworthy changes in release 7.0 (2008-10-05) [beta]\n\n** New programs\n\n  timeout: Run a command with bounded time.\n  truncate: Set the size of a file to a specified size.\n\n** New features\n\n  chgrp, chmod, chown, chcon, du, rm: now all display linear performance,\n  even when operating on million-entry directories on ext3 and ext4 file\n  systems.  Before, they would exhibit O(N^2) performance, due to linear\n  per-entry seek time cost when operating on entries in readdir order.\n  Rm was improved directly, while the others inherit the improvement\n  from the newer version of fts in gnulib.\n\n  comm now verifies that the inputs are in sorted order.  This check can\n  be turned off with the --nocheck-order option.\n\n  comm accepts new option, --output-delimiter=STR, that allows specification\n  of an output delimiter other than the default single TAB.\n\n  cp and mv: the deprecated --reply=X option is now also undocumented.\n\n  dd accepts iflag=fullblock to make it accumulate full input blocks.\n  With this new option, after a short read, dd repeatedly calls read,\n  until it fills the incomplete block, reaches EOF, or encounters an error.\n\n  df accepts a new option --total, which produces a grand total of all\n  arguments after all arguments have been processed.\n\n  If the GNU MP library is available at configure time, factor and\n  expr support arbitrarily large numbers.  Pollard's rho algorithm is\n  used to factor large numbers.\n\n  install accepts a new option --strip-program to specify the program used to\n  strip binaries.\n\n  ls now colors names of files with capabilities if libcap is available.\n\n  ls -v now uses filevercmp function as sort predicate (instead of strverscmp)\n\n  md5sum now accepts the new option, --quiet, to suppress the printing of\n  'OK' messages.  sha1sum, sha224sum, sha384sum, and sha512sum accept it, too.\n\n  sort accepts a new option, --files0-from=F, that specifies a file\n  containing a null-separated list of files to sort.  This list is used\n  instead of filenames passed on the command-line to avoid problems with\n  maximum command-line (argv) length.\n\n  sort accepts a new option --batch-size=NMERGE, where NMERGE\n  represents the maximum number of inputs that will be merged at once.\n  When processing more than NMERGE inputs, sort uses temporary files.\n\n  sort accepts a new option --version-sort (-V, --sort=version),\n  specifying that ordering is to be based on filevercmp.\n\n** Bug fixes\n\n  chcon --verbose now prints a newline after each message\n\n  od no longer suffers from platform bugs in printf(3).  This is\n  probably most noticeable when using 'od -tfL' to print long doubles.\n\n  seq -0.1 0.1 2 now prints 2,0 when locale's decimal point is \",\".\n  Before, it would mistakenly omit the final number in that example.\n\n  shuf honors the --zero-terminated (-z) option, even with --input-range=LO-HI\n\n  shuf --head-count is now correctly documented.  The documentation\n  previously claimed it was called --head-lines.\n\n** Improvements\n\n  Improved support for access control lists (ACLs): On MacOS X, Solaris 7..10,\n  HP-UX 11, Tru64, AIX, IRIX 6.5, and Cygwin, \"ls -l\" now displays the presence\n  of an ACL on a file via a '+' sign after the mode, and \"cp -p\" copies ACLs.\n\n  join has significantly better performance due to better memory management\n\n  ls now uses constant memory when not sorting and using one_per_line format,\n  no matter how many files are in a given directory.  I.e., to list a directory\n  with very many files, ls -1U is much more efficient.\n\n  od now aligns fields across lines when printing multiple -t\n  specifiers, and no longer prints fields that resulted entirely from\n  padding the input out to the least common multiple width.\n\n** Changes in behavior\n\n  stat's --context (-Z) option has always been a no-op.\n  Now it evokes a warning that it is obsolete and will be removed.\n\n\n* Noteworthy changes in release 6.12 (2008-05-31) [stable]\n\n** New features\n\n  cp, install, mv, and touch now preserve nanosecond resolution on\n  file timestamps, on platforms that have the 'utimensat' and\n  'futimens' system calls.\n\n** Bug fixes\n\n  chcon, runcon: --help output now includes the bug-reporting address\n\n  cp -p copies permissions more portably.  For example, on MacOS X 10.5,\n  \"cp -p some-fifo some-file\" no longer fails while trying to copy the\n  permissions from the some-fifo argument.\n\n  id with no options now prints the SELinux context only when invoked\n  with no USERNAME argument.\n\n  id and groups once again print the AFS-specific nameless group-ID (PAG).\n  Printing of such large-numbered, kernel-only (not in /etc/group) group-IDs\n  was suppressed in 6.11 due to ignorance that they are useful.\n\n  uniq: avoid subtle field-skipping malfunction due to isblank misuse.\n  In some locales on some systems, isblank(240) (aka &nbsp) is nonzero.\n  On such systems, uniq --skip-fields=N would fail to skip the proper\n  number of fields for some inputs.\n\n  tac: avoid segfault with --regex (-r) and multiple files, e.g.,\n  \"echo > x; tac -r x x\".  [bug present at least in textutils-1.8b, from 1992]\n\n** Changes in behavior\n\n  install once again sets SELinux context, when possible\n  [it was deliberately disabled in 6.9.90]\n\n\n* Noteworthy changes in release 6.11 (2008-04-19) [stable]\n\n** Bug fixes\n\n  configure --enable-no-install-program=groups now works.\n\n  \"cp -fR fifo E\" now succeeds with an existing E.  Before this fix, using\n  -fR to copy a fifo or \"special\" file onto an existing file would fail\n  with EEXIST.  Now, it once again unlinks the destination before trying\n  to create the destination file.  [bug introduced in coreutils-5.90]\n\n  dd once again works with unnecessary options like if=/dev/stdin and\n  of=/dev/stdout.  [bug introduced in fileutils-4.0h]\n\n  id now uses getgrouplist, when possible.  This results in\n  much better performance when there are many users and/or groups.\n\n  ls no longer segfaults on files in /proc when linked with an older version\n  of libselinux.  E.g., ls -l /proc/sys would dereference a NULL pointer.\n\n  md5sum would segfault for invalid BSD-style input, e.g.,\n  echo 'MD5 (' | md5sum -c -  Now, md5sum ignores that line.\n  sha1sum, sha224sum, sha384sum, and sha512sum are affected, too.\n  [bug introduced in coreutils-5.1.0]\n\n  md5sum -c would accept a NUL-containing checksum string like \"abcd\\0...\"\n  and would unnecessarily read and compute the checksum of the named file,\n  and then compare that checksum to the invalid one: guaranteed to fail.\n  Now, it recognizes that the line is not valid and skips it.\n  sha1sum, sha224sum, sha384sum, and sha512sum are affected, too.\n  [bug present in the original version, in coreutils-4.5.1, 1995]\n\n  \"mkdir -Z x dir\" no longer segfaults when diagnosing invalid context \"x\"\n  mkfifo and mknod would fail similarly.  Now they're fixed.\n\n  mv would mistakenly unlink a destination file before calling rename,\n  when the destination had two or more hard links.  It no longer does that.\n  [bug introduced in coreutils-5.3.0]\n\n  \"paste -d'\\' file\" no longer overruns memory (heap since coreutils-5.1.2,\n  stack before then) [bug present in the original version, in 1992]\n\n  \"pr -e\" with a mix of backspaces and TABs no longer corrupts the heap\n  [bug present in the original version, in 1992]\n\n  \"ptx -F'\\' long-file-name\" would overrun a malloc'd buffer and corrupt\n  the heap.  That was triggered by a lone backslash (or odd number of them)\n  at the end of the option argument to --flag-truncation=STRING (-F),\n  --word-regexp=REGEXP (-W), or --sentence-regexp=REGEXP (-S).\n\n  \"rm -r DIR\" would mistakenly declare to be \"write protected\" -- and\n  prompt about -- full DIR-relative names longer than MIN (PATH_MAX, 8192).\n\n  \"rmdir --ignore-fail-on-non-empty\" detects and ignores the failure\n  in more cases when a directory is empty.\n\n  \"seq -f % 1\" would issue the erroneous diagnostic \"seq: memory exhausted\"\n  rather than reporting the invalid string format.\n  [bug introduced in coreutils-6.0]\n\n** New features\n\n  join now verifies that the inputs are in sorted order.  This check can\n  be turned off with the --nocheck-order option.\n\n  sort accepts the new option --sort=WORD, where WORD can be one of\n  general-numeric, month, numeric or random.  These are equivalent to the\n  options --general-numeric-sort/-g, --month-sort/-M, --numeric-sort/-n\n  and --random-sort/-R, resp.\n\n** Improvements\n\n  id and groups work around an AFS-related bug whereby those programs\n  would print an invalid group number, when given no user-name argument.\n\n  ls --color no longer outputs unnecessary escape sequences\n\n  seq gives better diagnostics for invalid formats.\n\n** Portability\n\n  rm now works properly even on systems like BeOS and Haiku,\n  which have negative errno values.\n\n** Consistency\n\n  install, mkdir, rmdir and split now write --verbose output to stdout,\n  not to stderr.\n\n\n* Noteworthy changes in release 6.10 (2008-01-22) [stable]\n\n** Bug fixes\n\n  Fix a non-portable use of sed in configure.ac.\n  [bug introduced in coreutils-6.9.92]\n\n\n* Noteworthy changes in release 6.9.92 (2008-01-12) [beta]\n\n** Bug fixes\n\n  cp --parents no longer uses uninitialized memory when restoring the\n  permissions of a just-created destination directory.\n  [bug introduced in coreutils-6.9.90]\n\n  tr's case conversion would fail in a locale with differing numbers\n  of lower case and upper case characters.  E.g., this would fail:\n  env LC_CTYPE=en_US.ISO-8859-1 tr '[:upper:]' '[:lower:]'\n  [bug introduced in coreutils-6.9.90]\n\n** Improvements\n\n  \"touch -d now writable-but-owned-by-someone-else\" now succeeds\n  whenever that same command would succeed without \"-d now\".\n  Before, it would work fine with no -d option, yet it would\n  fail with the ostensibly-equivalent \"-d now\".\n\n\n* Noteworthy changes in release 6.9.91 (2007-12-15) [beta]\n\n** Bug fixes\n\n  \"ls -l\" would not output \"+\" on SELinux hosts unless -Z was also given.\n\n  \"rm\" would fail to unlink a non-directory when run in an environment\n  in which the user running rm is capable of unlinking a directory.\n  [bug introduced in coreutils-6.9]\n\n\n* Noteworthy changes in release 6.9.90 (2007-12-01) [beta]\n\n** New programs\n\n  arch: equivalent to uname -m, not installed by default\n  But don't install this program on Solaris systems.\n\n  chcon: change the SELinux security context of a file\n\n  mktemp: create a temporary file or directory (or names)\n\n  runcon: run a program in a different SELinux security context\n\n** Programs no longer installed by default\n\n  hostname, su\n\n** Changes in behavior\n\n  cp, by default, refuses to copy through a dangling destination symlink\n  Set POSIXLY_CORRECT if you require the old, risk-prone behavior.\n\n  pr -F no longer suppresses the footer or the first two blank lines in\n  the header.  This is for compatibility with BSD and POSIX.\n\n  tr now warns about an unescaped backslash at end of string.\n  The tr from coreutils-5.2.1 and earlier would fail for such usage,\n  and Solaris' tr ignores that final byte.\n\n** New features\n\n  Add SELinux support, based on the patch from Fedora:\n  * cp accepts new --preserve=context option.\n  * \"cp -a\" works with SELinux:\n  Now, cp -a attempts to preserve context, but failure to do so does\n  not change cp's exit status.  However \"cp --preserve=context\" is\n  similar, but failure *does* cause cp to exit with nonzero status.\n  * install accepts new \"-Z, --context=C\" option.\n  * id accepts new \"-Z\" option.\n  * stat honors the new %C format directive: SELinux security context string\n  * ls accepts a slightly modified -Z option.\n  * ls: contrary to Fedora version, does not accept --lcontext and --scontext\n\n  The following commands and options now support the standard size\n  suffixes kB, M, MB, G, GB, and so on for T, P, Y, Z, and Y:\n  head -c, head -n, od -j, od -N, od -S, split -b, split -C,\n  tail -c, tail -n.\n\n  cp -p tries to preserve the GID of a file even if preserving the UID\n  is not possible.\n\n  uniq accepts a new option: --zero-terminated (-z).  As with the sort\n  option of the same name, this makes uniq consume and produce\n  NUL-terminated lines rather than newline-terminated lines.\n\n  wc no longer warns about character decoding errors in multibyte locales.\n  This means for example that \"wc /bin/sh\" now produces normal output\n  (though the word count will have no real meaning) rather than many\n  error messages.\n\n** New build options\n\n  By default, \"make install\" no longer attempts to install (or even build) su.\n  To change that, use ./configure --enable-install-program=su.\n  If you also want to install the new \"arch\" program, do this:\n  ./configure --enable-install-program=arch,su.\n\n  You can inhibit the compilation and installation of selected programs\n  at configure time.  For example, to avoid installing \"hostname\" and\n  \"uptime\", use ./configure --enable-no-install-program=hostname,uptime\n  Note: currently, \"make check\" passes, even when arch and su are not\n  built (that's the new default).  However, if you inhibit the building\n  and installation of other programs, don't be surprised if some parts\n  of \"make check\" fail.\n\n** Remove deprecated options\n\n  df no longer accepts the --kilobytes option.\n  du no longer accepts the --kilobytes or --megabytes options.\n  ls no longer accepts the --kilobytes option.\n  ptx longer accepts the --copyright option.\n  who no longer accepts -i or --idle.\n\n** Improved robustness\n\n  ln -f can no longer silently clobber a just-created hard link.\n  In some cases, ln could be seen as being responsible for data loss.\n  For example, given directories a, b, c, and files a/f and b/f, we\n  should be able to do this safely: ln -f a/f b/f c && rm -f a/f b/f\n  However, before this change, ln would succeed, and thus cause the\n  loss of the contents of a/f.\n\n  stty no longer silently accepts certain invalid hex values\n  in its 35-colon command-line argument\n\n** Bug fixes\n\n  chmod no longer ignores a dangling symlink.  Now, chmod fails\n  with a diagnostic saying that it cannot operate on such a file.\n  [bug introduced in coreutils-5.1.0]\n\n  cp attempts to read a regular file, even if stat says it is empty.\n  Before, \"cp /proc/cpuinfo c\" would create an empty file when the kernel\n  reports stat.st_size == 0, while \"cat /proc/cpuinfo > c\" would \"work\",\n  and create a nonempty one. [bug introduced in coreutils-6.0]\n\n  cp --parents no longer mishandles symlinks to directories in file\n  name components in the source, e.g., \"cp --parents symlink/a/b d\"\n  no longer fails.  Also, 'cp' no longer considers a destination\n  symlink to be the same as the referenced file when copying links\n  or making backups.  For example, if SYM is a symlink to FILE,\n  \"cp -l FILE SYM\" now reports an error instead of silently doing\n  nothing.  The behavior of 'cp' is now better documented when the\n  destination is a symlink.\n\n  \"cp -i --update older newer\" no longer prompts; same for mv\n\n  \"cp -i\" now detects read errors on standard input, and no longer consumes\n  too much seekable input; same for ln, install, mv, and rm.\n\n  cut now diagnoses a range starting with zero (e.g., -f 0-2) as invalid;\n  before, it would treat it as if it started with 1 (-f 1-2).\n\n  \"cut -f 2-0\" now fails; before, it was equivalent to \"cut -f 2-\"\n\n  cut now diagnoses the '-' in \"cut -f -\" as an invalid range, rather\n  than interpreting it as the unlimited range, \"1-\".\n\n  date -d now accepts strings of the form e.g., 'YYYYMMDD +N days',\n  in addition to the usual 'YYYYMMDD N days'.\n\n  du -s now includes the size of any stat'able-but-inaccessible directory\n  in the total size.\n\n  du (without -s) prints whatever it knows of the size of an inaccessible\n  directory.  Before, du would print nothing for such a directory.\n\n  ls -x DIR would sometimes output the wrong string in place of the\n  first entry.  [introduced in coreutils-6.8]\n\n  ls --color would mistakenly color a dangling symlink as if it were\n  a regular symlink.  This would happen only when the dangling symlink\n  was not a command-line argument and in a directory with d_type support.\n  [introduced in coreutils-6.0]\n\n  ls --color, (with a custom LS_COLORS envvar value including the\n  ln=target attribute) would mistakenly output the string \"target\"\n  before the name of each symlink.  [introduced in coreutils-6.0]\n\n  od's --skip (-j) option now works even when the kernel says that a\n  nonempty regular file has stat.st_size = 0.  This happens at least\n  with files in /proc and linux-2.6.22.\n\n  \"od -j L FILE\" had a bug: when the number of bytes to skip, L, is exactly\n  the same as the length of FILE, od would skip *no* bytes.  When the number\n  of bytes to skip is exactly the sum of the lengths of the first N files,\n  od would skip only the first N-1 files. [introduced in textutils-2.0.9]\n\n  ./printf %.10000000f 1 could get an internal ENOMEM error and generate\n  no output, yet erroneously exit with status 0.  Now it diagnoses the error\n  and exits with nonzero status.  [present in initial implementation]\n\n  seq no longer mishandles obvious cases like \"seq 0 0.000001 0.000003\",\n  so workarounds like \"seq 0 0.000001 0.0000031\" are no longer needed.\n\n  seq would mistakenly reject some valid format strings containing %%,\n  and would mistakenly accept some invalid ones. e.g., %g%% and %%g, resp.\n\n  \"seq .1 .1\" would mistakenly generate no output on some systems\n\n  Obsolete sort usage with an invalid ordering-option character, e.g.,\n  \"env _POSIX2_VERSION=199209 sort +1x\" no longer makes sort free an\n  invalid pointer [introduced in coreutils-6.5]\n\n  sorting very long lines (relative to the amount of available memory)\n  no longer provokes unaligned memory access\n\n  split --line-bytes=N (-C N) no longer creates an empty file\n  [this bug is present at least as far back as textutils-1.22 (Jan, 1997)]\n\n  tr -c no longer aborts when translating with Set2 larger than the\n  complement of Set1.  [present in the original version, in 1992]\n\n  tr no longer rejects an unmatched [:lower:] or [:upper:] in SET1.\n  [present in the original version]\n\n\n* Noteworthy changes in release 6.9 (2007-03-22) [stable]\n\n** Bug fixes\n\n  cp -x (--one-file-system) would fail to set mount point permissions\n\n  The default block size and output format for df -P are now unaffected by\n  the DF_BLOCK_SIZE, BLOCK_SIZE, and BLOCKSIZE environment variables.  It\n  is still affected by POSIXLY_CORRECT, though.\n\n  Using pr -m -s (i.e., merging files, with TAB as the output separator)\n  no longer inserts extraneous spaces between output columns.\n\n* Noteworthy changes in release 6.8 (2007-02-24) [not-unstable]\n\n** Bug fixes\n\n  chgrp, chmod, and chown now honor the --preserve-root option.\n  Before, they would warn, yet continuing traversing and operating on /.\n\n  chmod no longer fails in an environment (e.g., a chroot) with openat\n  support but with insufficient /proc support.\n\n  \"cp --parents F/G D\" no longer creates a directory D/F when F is not\n  a directory (and F/G is therefore invalid).\n\n  \"cp --preserve=mode\" would create directories that briefly had\n  too-generous permissions in some cases.  For example, when copying a\n  directory with permissions 777 the destination directory might\n  temporarily be setgid on some file systems, which would allow other\n  users to create subfiles with the same group as the directory.  Fix\n  similar problems with 'install' and 'mv'.\n\n  cut no longer dumps core for usage like \"cut -f2- f1 f2\" with two or\n  more file arguments.  This was due to a double-free bug, introduced\n  in coreutils-5.3.0.\n\n  dd bs= operands now silently override any later ibs= and obs=\n  operands, as POSIX and tradition require.\n\n  \"ls -FRL\" always follows symbolic links on Linux.  Introduced in\n  coreutils-6.0.\n\n  A cross-partition \"mv /etc/passwd ~\" (by non-root) now prints\n  a reasonable diagnostic.  Before, it would print this:\n  \"mv: cannot remove `/etc/passwd': Not a directory\".\n\n  pwd and \"readlink -e .\" no longer fail unnecessarily when a parent\n  directory is unreadable.\n\n  rm (without -f) could prompt when it shouldn't, or fail to prompt\n  when it should, when operating on a full name longer than 511 bytes\n  and getting an ENOMEM error while trying to form the long name.\n\n  rm could mistakenly traverse into the wrong directory under unusual\n  conditions: when a full name longer than 511 bytes specifies a search-only\n  directory, and when forming that name fails with ENOMEM, rm would attempt\n  to open a truncated-to-511-byte name with the first five bytes replaced\n  with \"[...]\".  If such a directory were to actually exist, rm would attempt\n  to remove it.\n\n  \"rm -rf /etc/passwd\" (run by non-root) now prints a diagnostic.\n  Before it would print nothing.\n\n  \"rm --interactive=never F\" no longer prompts for an unwritable F\n\n  \"rm -rf D\" would emit a misleading diagnostic when failing to\n  remove a symbolic link within the unwritable directory, D.\n  Introduced in coreutils-6.0.  Similarly, when a cross-partition\n  \"mv\" fails because the source directory is unwritable, it now gives\n  a reasonable diagnostic.  Before, this would print\n    $ mkdir /tmp/x; touch /tmp/x/y; chmod -w /tmp/x;\n    $ test $(stat -c %d /tmp/x) -ne $(stat -c %d .) && mv /tmp/x/y .\n    mv: cannot remove `/tmp/x/y': Not a directory\n  Now it prints this:\n    mv: cannot remove `/tmp/x/y': Permission denied.\n\n** New features\n\n  sort's new --compress-program=PROG option specifies a compression\n  program to use when writing and reading temporary files.\n  This can help save both time and disk space when sorting large inputs.\n\n  sort accepts the new option -C, which acts like -c except no diagnostic\n  is printed.  Its --check option now accepts an optional argument, and\n  --check=quiet and --check=silent are now aliases for -C, while\n  --check=diagnose-first is an alias for -c or plain --check.\n\n\n* Noteworthy changes in release 6.7 (2006-12-08) [stable]\n\n** Bug fixes\n\n  When cp -p copied a file with special mode bits set, the same bits\n  were set on the copy even when ownership could not be preserved.\n  This could result in files that were setuid to the wrong user.\n  To fix this, special mode bits are now set in the copy only if its\n  ownership is successfully preserved.  Similar problems were fixed\n  with mv when copying across file system boundaries.  This problem\n  affects all versions of coreutils through 6.6.\n\n  cp --preserve=ownership would create output files that temporarily\n  had too-generous permissions in some cases.  For example, when\n  copying a file with group A and mode 644 into a group-B sticky\n  directory, the output file was briefly readable by group B.\n  Fix similar problems with cp options like -p that imply\n  --preserve=ownership, with install -d when combined with either -o\n  or -g, and with mv when copying across file system boundaries.\n  This bug affects all versions of coreutils through 6.6.\n\n  du --one-file-system (-x) would skip subdirectories of any directory\n  listed as second or subsequent command line argument.  This bug affects\n  coreutils-6.4, 6.5 and 6.6.\n\n\n* Noteworthy changes in release 6.6 (2006-11-22) [stable]\n\n** Bug fixes\n\n  ls would segfault (dereference a NULL pointer) for a file with a\n  nameless group or owner.  This bug was introduced in coreutils-6.5.\n\n  A bug in the latest official m4/gettext.m4 (from gettext-0.15)\n  made configure fail to detect gettext support, due to the unusual\n  way in which coreutils uses AM_GNU_GETTEXT.\n\n** Improved robustness\n\n  Now, du (and the other fts clients: chmod, chgrp, chown) honor a\n  trailing slash in the name of a symlink-to-directory even on\n  Solaris 9, by working around its buggy fstatat implementation.\n\n\n* Major changes in release 6.5 (2006-11-19) [stable]\n\n** Bug fixes\n\n  du (and the other fts clients: chmod, chgrp, chown) would exit early\n  when encountering an inaccessible directory on a system with native\n  openat support (i.e., linux-2.6.16 or newer along with glibc-2.4\n  or newer).  This bug was introduced with the switch to gnulib's\n  openat-based variant of fts, for coreutils-6.0.\n\n  \"ln --backup f f\" now produces a sensible diagnostic\n\n** New features\n\n  rm accepts a new option: --one-file-system\n\n\n* Major changes in release 6.4 (2006-10-22) [stable]\n\n** Bug fixes\n\n  chgrp and chown would malfunction when invoked with both -R and -H and\n  with one or more of the following: --preserve-root, --verbose, --changes,\n  --from=o:g (chown only).  This bug was introduced with the switch to\n  gnulib's openat-based variant of fts, for coreutils-6.0.\n\n  cp --backup dir1 dir2, would rename an existing dir2/dir1 to dir2/dir1~.\n  This bug was introduced in coreutils-6.0.\n\n  With --force (-f), rm no longer fails for ENOTDIR.\n  For example, \"rm -f existing-non-directory/anything\" now exits\n  successfully, ignoring the error about a nonexistent file.\n\n\n* Major changes in release 6.3 (2006-09-30) [stable]\n\n** Improved robustness\n\n  pinky no longer segfaults on Darwin 7.9.0 (MacOS X 10.3.9) due to a\n  buggy native getaddrinfo function.\n\n  rm works around a bug in Darwin 7.9.0 (MacOS X 10.3.9) that would\n  sometimes keep it from removing all entries in a directory on an HFS+\n  or NFS-mounted partition.\n\n  sort would fail to handle very large input (around 40GB) on systems with a\n  mkstemp function that returns a file descriptor limited to 32-bit offsets.\n\n** Bug fixes\n\n  chmod would fail unnecessarily in an unusual case: when an initially-\n  inaccessible argument is rendered accessible by chmod's action on a\n  preceding command line argument.  This bug also affects chgrp, but\n  it is harder to demonstrate.  It does not affect chown.  The bug was\n  introduced with the switch from explicit recursion to the use of fts\n  in coreutils-5.1.0 (2003-10-15).\n\n  cp -i and mv -i occasionally neglected to prompt when the copy or move\n  action was bound to fail.  This bug dates back to before fileutils-4.0.\n\n  With --verbose (-v), cp and mv would sometimes generate no output,\n  or neglect to report file removal.\n\n  For the \"groups\" command:\n\n    \"groups\" no longer prefixes the output with \"user :\" unless more\n    than one user is specified; this is for compatibility with BSD.\n\n    \"groups user\" now exits nonzero when it gets a write error.\n\n    \"groups\" now processes options like --help more compatibly.\n\n  shuf would infloop, given 8KB or more of piped input\n\n** Portability\n\n  Versions of chmod, chown, chgrp, du, and rm (tools that use openat etc.)\n  compiled for Solaris 8 now also work when run on Solaris 10.\n\n\n* Major changes in release 6.2 (2006-09-18) [stable candidate]\n\n** Changes in behavior\n\n  mkdir -p and install -d (or -D) now use a method that forks a child\n  process if the working directory is unreadable and a later argument\n  uses a relative file name.  This avoids some race conditions, but it\n  means you may need to kill two processes to stop these programs.\n\n  rm now rejects attempts to remove the root directory, e.g., 'rm -fr /'\n  now fails without removing anything.  Likewise for any file name with\n  a final './' or '../' component.\n\n  tail now ignores the -f option if POSIXLY_CORRECT is set, no file\n  operand is given, and standard input is any FIFO; formerly it did\n  this only for pipes.\n\n** Infrastructure changes\n\n  Coreutils now uses gnulib via the gnulib-tool script.\n  If you check the source out from CVS, then follow the instructions\n  in README-cvs.  Although this represents a large change to the\n  infrastructure, it should cause no change in how the tools work.\n\n** Bug fixes\n\n  cp --backup no longer fails when the last component of a source file\n  name is \".\" or \"..\".\n\n  \"ls --color\" would highlight other-writable and sticky directories\n  no differently than regular directories on a file system with\n  dirent.d_type support.\n\n  \"mv -T --verbose --backup=t A B\" now prints the \" (backup: B.~1~)\"\n  suffix when A and B are directories as well as when they are not.\n\n  mv and \"cp -r\" no longer fail when invoked with two arguments\n  where the first one names a directory and the second name ends in\n  a slash and doesn't exist.  E.g., \"mv dir B/\", for nonexistent B,\n  now succeeds, once more.  This bug was introduced in coreutils-5.3.0.\n\n\n* Major changes in release 6.1 (2006-08-19) [unstable]\n\n** Changes in behavior\n\n  df now considers BSD \"kernfs\" file systems to be dummies\n\n** New features\n\n  printf now supports the 'I' flag on hosts whose underlying printf\n  implementations support 'I', e.g., \"printf %Id 2\".\n\n** Bug fixes\n\n  cp --sparse preserves sparseness at the end of a file, even when\n  the file's apparent size is not a multiple of its block size.\n  [introduced with the original design, in fileutils-4.0r, 2000-04-29]\n\n  df (with a command line argument) once again prints its header\n  [introduced in coreutils-6.0]\n\n  ls -CF would misalign columns in some cases involving non-stat'able files\n  [introduced in coreutils-6.0]\n\n* Major changes in release 6.0 (2006-08-15) [unstable]\n\n** Improved robustness\n\n  df: if the file system claims to have more available than total blocks,\n  report the number of used blocks as being \"total - available\"\n  (a negative number) rather than as garbage.\n\n  dircolors: a new autoconf run-test for AIX's buggy strndup function\n  prevents malfunction on that system;  may also affect cut, expand,\n  and unexpand.\n\n  fts no longer changes the current working directory, so its clients\n  (chmod, chown, chgrp, du) no longer malfunction under extreme conditions.\n\n  pwd and other programs using lib/getcwd.c work even on file systems\n  where dirent.d_ino values are inconsistent with those from stat.st_ino.\n\n  rm's core is now reentrant: rm --recursive (-r) now processes\n  hierarchies without changing the working directory at all.\n\n** Changes in behavior\n\n  basename and dirname now treat // as different from / on platforms\n  where the two are distinct.\n\n  chmod, install, and mkdir now preserve a directory's set-user-ID and\n  set-group-ID bits unless you explicitly request otherwise.  E.g.,\n  'chmod 755 DIR' and 'chmod u=rwx,go=rx DIR' now preserve DIR's\n  set-user-ID and set-group-ID bits instead of clearing them, and\n  similarly for 'mkdir -m 755 DIR' and 'mkdir -m u=rwx,go=rx DIR'.  To\n  clear the bits, mention them explicitly in a symbolic mode, e.g.,\n  'mkdir -m u=rwx,go=rx,-s DIR'.  To set them, mention them explicitly\n  in either a symbolic or a numeric mode, e.g., 'mkdir -m 2755 DIR',\n  'mkdir -m u=rwx,go=rx,g+s' DIR.  This change is for convenience on\n  systems where these bits inherit from parents.  Unfortunately other\n  operating systems are not consistent here, and portable scripts\n  cannot assume the bits are set, cleared, or preserved, even when the\n  bits are explicitly mentioned.  For example, OpenBSD 3.9 'mkdir -m\n  777 D' preserves D's setgid bit but 'chmod 777 D' clears it.\n  Conversely, Solaris 10 'mkdir -m 777 D', 'mkdir -m g-s D', and\n  'chmod 0777 D' all preserve D's setgid bit, and you must use\n  something like 'chmod g-s D' to clear it.\n\n  'cp --link --no-dereference' now works also on systems where the\n  link system call cannot create a hard link to a symbolic link.\n  This change has no effect on systems with a Linux-based kernel.\n\n  csplit and nl now use POSIX syntax for regular expressions, not\n  Emacs syntax.  As a result, character classes like [[:print:]] and\n  interval expressions like A\\{1,9\\} now have their usual meaning,\n  . no longer matches the null character, and \\ must precede the + and\n  ? operators.\n\n  date: a command like date -d '2006-04-23 21 days ago' would print\n  the wrong date in some time zones.  (see the test for an example)\n\n  df changes:\n\n    df now considers \"none\" and \"proc\" file systems to be dummies and\n    therefore does not normally display them.  Also, inaccessible file\n    systems (which can be caused by shadowed mount points or by\n    chrooted bind mounts) are now dummies, too.\n\n    df now fails if it generates no output, so you can inspect the\n    exit status of a command like \"df -t ext3 -t reiserfs DIR\" to test\n    whether DIR is on a file system of type \"ext3\" or \"reiserfs\".\n\n  expr no longer complains about leading ^ in a regular expression\n  (the anchor is ignored), or about regular expressions like A** (the\n  second \"*\" is ignored).  expr now exits with status 2 (not 3) for\n  errors it detects in the expression's values; exit status 3 is now\n  used only for internal errors (such as integer overflow, which expr\n  now checks for).\n\n  install and mkdir now implement the X permission symbol correctly,\n  e.g., 'mkdir -m a+X dir'; previously the X was ignored.\n\n  install now creates parent directories with mode u=rwx,go=rx (755)\n  instead of using the mode specified by the -m option; and it does\n  not change the owner or group of parent directories.  This is for\n  compatibility with BSD and closes some race conditions.\n\n  ln now uses different (and we hope clearer) diagnostics when it fails.\n  ln -v now acts more like FreeBSD, so it generates output only when\n  successful and the output is easier to parse.\n\n  ls now defaults to --time-style='locale', not --time-style='posix-long-iso'.\n  However, the 'locale' time style now behaves like 'posix-long-iso'\n  if your locale settings appear to be messed up.  This change\n  attempts to have the default be the best of both worlds.\n\n  mkfifo and mknod no longer set special mode bits (setuid, setgid,\n  and sticky) with the -m option.\n\n  nohup's usual diagnostic now more precisely specifies the I/O\n  redirections, e.g., \"ignoring input and appending output to\n  nohup.out\".  Also, nohup now redirects stderr to nohup.out (or\n  $HOME/nohup.out) if stdout is closed and stderr is a tty; this is in\n  response to Open Group XCU ERN 71.\n\n  rm --interactive now takes an optional argument, although the\n  default of using no argument still acts like -i.\n\n  rm no longer fails to remove an empty, unreadable directory\n\n  seq changes:\n\n    seq defaults to a minimal fixed point format that does not lose\n    information if seq's operands are all fixed point decimal numbers.\n    You no longer need the '-f%.f' in 'seq -f%.f 1048575 1024 1050623',\n    for example, since the default format now has the same effect.\n\n    seq now lets you use %a, %A, %E, %F, and %G formats.\n\n    seq now uses long double internally rather than double.\n\n  sort now reports incompatible options (e.g., -i and -n) rather than\n  silently ignoring one of them.\n\n  stat's --format=FMT option now works the way it did before 5.3.0:\n  FMT is automatically newline terminated.  The first stable release\n  containing this change was 5.92.\n\n  stat accepts the new option --printf=FMT, where FMT is *not*\n  automatically newline terminated.\n\n  stat: backslash escapes are interpreted in a format string specified\n  via --printf=FMT, but not one specified via --format=FMT.  That includes\n  octal (\\ooo, at most three octal digits), hexadecimal (\\xhh, one or\n  two hex digits), and the standard sequences (\\a, \\b, \\f, \\n, \\r, \\t,\n  \\v, \\\", \\\\).\n\n  With no operand, 'tail -f' now silently ignores the '-f' only if\n  standard input is a FIFO or pipe and POSIXLY_CORRECT is set.\n  Formerly, it ignored the '-f' when standard input was a FIFO, pipe,\n  or socket.\n\n** Scheduled for removal\n\n  ptx's --copyright (-C) option is scheduled for removal in 2007, and\n  now evokes a warning.  Use --version instead.\n\n  rm's --directory (-d) option is scheduled for removal in 2006.  This\n  option has been silently ignored since coreutils 5.0.  On systems\n  that support unlinking of directories, you can use the \"unlink\"\n  command to unlink a directory.\n\n  Similarly, we are considering the removal of ln's --directory (-d,\n  -F) option in 2006.  Please write to <bug-coreutils@gnu.org> if this\n  would cause a problem for you.  On systems that support hard links\n  to directories, you can use the \"link\" command to create one.\n\n** New programs\n\n  base64: base64 encoding and decoding (RFC 3548) functionality.\n  sha224sum: print or check a SHA224 (224-bit) checksum\n  sha256sum: print or check a SHA256 (256-bit) checksum\n  sha384sum: print or check a SHA384 (384-bit) checksum\n  sha512sum: print or check a SHA512 (512-bit) checksum\n  shuf: Shuffle lines of text.\n\n** New features\n\n  chgrp now supports --preserve-root, --no-preserve-root (default),\n  as it was documented to do, and just as chmod, chown, and rm do.\n\n  New dd iflag= and oflag= flags:\n\n    'directory' causes dd to fail unless the file is a directory, on\n    hosts that support this (e.g., Linux kernels, version 2.1.126 and\n    later).  This has limited utility but is present for completeness.\n\n    'noatime' causes dd to read a file without updating its access\n    time, on hosts that support this (e.g., Linux kernels, version\n    2.6.8 and later).\n\n    'nolinks' causes dd to fail if the file has multiple hard links,\n    on hosts that support this (e.g., Solaris 10 and later).\n\n  ls accepts the new option --group-directories-first, to make it\n  list directories before files.\n\n  rm now accepts the -I (--interactive=once) option.  This new option\n  prompts once if rm is invoked recursively or if more than three\n  files are being deleted, which is less intrusive than -i prompting\n  for every file, but provides almost the same level of protection\n  against mistakes.\n\n  shred and sort now accept the --random-source option.\n\n  sort now accepts the --random-sort (-R) option and 'R' ordering option.\n\n  sort now supports obsolete usages like \"sort +1 -2\" unless\n  POSIXLY_CORRECT is set.  However, when conforming to POSIX\n  1003.1-2001 \"sort +1\" still sorts the file named \"+1\".\n\n  wc accepts a new option --files0-from=FILE, where FILE contains a\n  list of NUL-terminated file names.\n\n** Bug fixes\n\n  cat with any of the options, -A -v -e -E -T, when applied to a\n  file in /proc or /sys (linux-specific), would truncate its output,\n  usually printing nothing.\n\n  cp -p would fail in a /proc-less chroot, on some systems\n\n  When 'cp -RL' encounters the same directory more than once in the\n  hierarchy beneath a single command-line argument, it no longer confuses\n  them with hard-linked directories.\n\n  fts-using tools (chmod, chown, chgrp, du) no longer fail due to\n  a double-free bug -- it could be triggered by making a directory\n  inaccessible while e.g., du is traversing the hierarchy under it.\n\n  fts-using tools (chmod, chown, chgrp, du) no longer misinterpret\n  a very long symlink chain as a dangling symlink.  Before, such a\n  misinterpretation would cause these tools not to diagnose an ELOOP error.\n\n  ls --indicator-style=file-type would sometimes stat a symlink\n  unnecessarily.\n\n  ls --file-type worked like --indicator-style=slash (-p),\n  rather than like --indicator-style=file-type.\n\n  mv: moving a symlink into the place of an existing non-directory is\n  now done atomically;  before, mv would first unlink the destination.\n\n  mv -T DIR EMPTY_DIR no longer fails unconditionally.  Also, mv can\n  now remove an empty destination directory: mkdir -p a b/a; mv a b\n\n  rm (on systems with openat) can no longer exit before processing\n  all command-line arguments.\n\n  rm is no longer susceptible to a few low-probability memory leaks.\n\n  rm -r no longer fails to remove an inaccessible and empty directory\n\n  rm -r's cycle detection code can no longer be tricked into reporting\n  a false positive (introduced in fileutils-4.1.9).\n\n  shred --remove FILE no longer segfaults on Gentoo systems\n\n  sort would fail for large inputs (~50MB) on systems with a buggy\n  mkstemp function.  sort and tac now use the replacement mkstemp\n  function, and hence are no longer subject to limitations (of 26 or 32,\n  on the maximum number of files from a given template) on HP-UX 10.20,\n  SunOS 4.1.4, Solaris 2.5.1 and OSF1/Tru64 V4.0F&V5.1.\n\n  tail -f once again works on a file with the append-only\n  attribute (affects at least Linux ext2, ext3, xfs file systems)\n\n* Major changes in release 5.97 (2006-06-24) [stable]\n* Major changes in release 5.96 (2006-05-22) [stable]\n* Major changes in release 5.95 (2006-05-12) [stable]\n* Major changes in release 5.94 (2006-02-13) [stable]\n\n[see the b5_9x branch for details]\n\n* Major changes in release 5.93 (2005-11-06) [stable]\n\n** Bug fixes\n\n  dircolors no longer segfaults upon an attempt to use the new\n  STICKY_OTHER_WRITABLE (OWT) attribute.\n\n  du no longer overflows a counter when processing a file larger than\n  2^31-1 on some 32-bit systems (at least some AIX 5.1 configurations).\n\n  md5sum once again defaults to using the ' ' non-binary marker\n  (rather than the '*' binary marker) by default on Unix-like systems.\n\n  mkdir -p and install -d no longer exit nonzero when asked to create\n  a directory like 'nonexistent/.'\n\n  rm emits a better diagnostic when (without -r) it fails to remove\n  a directory on e.g., Solaris 9/10 systems.\n\n  tac now works when stdin is a tty, even on non-Linux systems.\n\n  \"tail -c 2 FILE\" and \"touch 0101000000\" now operate as POSIX\n  1003.1-2001 requires, even when coreutils is conforming to older\n  POSIX standards, as the newly-required behavior is upward-compatible\n  with the old.\n\n  The documentation no longer mentions rm's --directory (-d) option.\n\n** Build-related bug fixes\n\n  installing .mo files would fail\n\n\n* Major changes in release 5.92 (2005-10-22) [stable]\n\n** Bug fixes\n\n  chmod now diagnoses an invalid mode string starting with an octal digit\n\n  dircolors now properly quotes single-quote characters\n\n\n* Major changes in release 5.91 (2005-10-17) [stable candidate]\n\n** Bug fixes\n\n  \"mkdir -p /a/b/c\" no longer fails merely because a leading prefix\n  directory (e.g., /a or /a/b) exists on a read-only file system.\n\n** Removed options\n\n  tail's --allow-missing option has been removed.  Use --retry instead.\n\n  stat's --link and -l options have been removed.\n  Use --dereference (-L) instead.\n\n** Deprecated options\n\n  Using ls, du, or df with the --kilobytes option now evokes a warning\n  that the long-named option is deprecated.  Use '-k' instead.\n\n  du's long-named --megabytes option now evokes a warning.\n  Use -m instead.\n\n\n* Major changes in release 5.90 (2005-09-29) [unstable]\n\n** Bring back support for 'head -NUM', 'tail -NUM', etc. even when\n  conforming to POSIX 1003.1-2001.  The following changes apply only\n  when conforming to POSIX 1003.1-2001; there is no effect when\n  conforming to older POSIX versions.\n\n  The following usages now behave just as when conforming to older POSIX:\n\n    date -I\n    expand -TAB1[,TAB2,...]\n    fold -WIDTH\n    head -NUM\n    join -j FIELD\n    join -j1 FIELD\n    join -j2 FIELD\n    join -o FIELD_NAME1 FIELD_NAME2...\n    nice -NUM\n    od -w\n    pr -S\n    split -NUM\n    tail -[NUM][bcl][f] [FILE]\n\n  The following usages no longer work, due to the above changes:\n\n    date -I TIMESPEC  (use 'date -ITIMESPEC' instead)\n    od -w WIDTH       (use 'od -wWIDTH' instead)\n    pr -S STRING      (use 'pr -SSTRING' instead)\n\n  A few usages still have behavior that depends on which POSIX standard is\n  being conformed to, and portable applications should beware these\n  problematic usages.  These include:\n\n    Problematic       Standard-conforming replacement, depending on\n       usage            whether you prefer the behavior of:\n                      POSIX 1003.2-1992    POSIX 1003.1-2001\n    sort +4           sort -k 5            sort ./+4\n    tail +4           tail -n +4           tail ./+4\n    tail - f          tail f               [see (*) below]\n    tail -c 4         tail -c 10 ./4       tail -c4\n    touch 12312359 f  touch -t 12312359 f  touch ./12312359 f\n    uniq +4           uniq -s 4            uniq ./+4\n\n    (*) \"tail - f\" does not conform to POSIX 1003.1-2001; to read\n    standard input and then \"f\", use the command \"tail -- - f\".\n\n  These changes are in response to decisions taken in the January 2005\n  Austin Group standardization meeting.  For more details, please see\n  \"Utility Syntax Guidelines\" in the Minutes of the January 2005\n  Meeting <https://www.opengroup.org/austin/docs/austin_239.html>.\n\n** Binary input and output are now implemented more consistently.\n  These changes affect only platforms like MS-DOS that distinguish\n  between binary and text files.\n\n  The following programs now always use text input/output:\n\n    expand unexpand\n\n  The following programs now always use binary input/output to copy data:\n\n    cp install mv shred\n\n  The following programs now always use binary input/output to copy\n  data, except for stdin and stdout when it is a terminal.\n\n    head tac tail tee tr\n    (cat behaves similarly, unless one of the options -bensAE is used.)\n\n  cat's --binary or -B option has been removed.  It existed only on\n  MS-DOS-like platforms, and didn't work as documented there.\n\n  md5sum and sha1sum now obey the -b or --binary option, even if\n  standard input is a terminal, and they no longer report files to be\n  binary if they actually read them in text mode.\n\n** Changes for better conformance to POSIX\n\n  cp, ln, mv, rm changes:\n\n    Leading white space is now significant in responses to yes-or-no questions.\n    For example, if \"rm\" asks \"remove regular file `foo'?\" and you respond\n    with \" y\" (i.e., space before \"y\"), it counts as \"no\".\n\n  dd changes:\n\n    On a QUIT or PIPE signal, dd now exits without printing statistics.\n\n    On hosts lacking the INFO signal, dd no longer treats the USR1\n    signal as if it were INFO when POSIXLY_CORRECT is set.\n\n    If the file F is non-seekable and contains fewer than N blocks,\n    then before copying \"dd seek=N of=F\" now extends F with zeroed\n    blocks until F contains N blocks.\n\n  fold changes:\n\n    When POSIXLY_CORRECT is set, \"fold file -3\" is now equivalent to\n    \"fold file ./-3\", not the obviously-erroneous \"fold file ./-w3\".\n\n  ls changes:\n\n    -p now marks only directories; it is equivalent to the new option\n    --indicator-style=slash.  Use --file-type or\n    --indicator-style=file-type to get -p's old behavior.\n\n  nice changes:\n\n    Documentation and diagnostics now refer to \"nicenesses\" (commonly\n    in the range -20...19) rather than \"nice values\" (commonly 0...39).\n\n  nohup changes:\n\n    nohup now ignores the umask when creating nohup.out.\n\n    nohup now closes stderr if it is a terminal and stdout is closed.\n\n    nohup now exits with status 127 (not 1) when given an invalid option.\n\n  pathchk changes:\n\n    It now rejects the empty name in the normal case.  That is,\n    \"pathchk -p ''\" now fails, and \"pathchk ''\" fails unless the\n    current host (contra POSIX) allows empty file names.\n\n    The new -P option checks whether a file name component has leading \"-\",\n    as suggested in interpretation \"Austin-039:XCU:pathchk:pathchk -p\"\n    <https://collaboration.opengroup.org/austin/interps/documents.php?action=show&gdid=6232>.\n    It also rejects the empty name even if the current host accepts it; see\n    <https://collaboration.opengroup.org/austin/interps/documents.php?action=show&gdid=6233>.\n\n    The --portability option is now equivalent to -p -P.\n\n** Bug fixes\n\n  chmod, mkdir, mkfifo, and mknod formerly mishandled rarely-used symbolic\n  permissions like =xX and =u, and did not properly diagnose some invalid\n  strings like g+gr, ug,+x, and +1.  These bugs have been fixed.\n\n  csplit could produce corrupt output, given input lines longer than 8KB\n\n  dd now computes statistics using a realtime clock (if available)\n  rather than the time-of-day clock, to avoid glitches if the\n  time-of-day is changed while dd is running.  Also, it avoids\n  using unsafe code in signal handlers; this fixes some core dumps.\n\n  expr and test now correctly compare integers of unlimited magnitude.\n\n  expr now detects integer overflow when converting strings to integers,\n  rather than silently wrapping around.\n\n  ls now refuses to generate timestamps containing more than 1000 bytes, to\n  foil potential denial-of-service attacks on hosts with very large stacks.\n\n  \"mkdir -m =+x dir\" no longer ignores the umask when evaluating \"+x\",\n  and similarly for mkfifo and mknod.\n\n  \"mkdir -p /tmp/a/b dir\" no longer attempts to create the '.'-relative\n  directory, dir (in /tmp/a), when, after creating /tmp/a/b, it is unable\n  to return to its initial working directory.  Similarly for \"install -D\n  file /tmp/a/b/file\".\n\n  \"pr -D FORMAT\" now accepts the same formats that \"date +FORMAT\" does.\n\n  stat now exits nonzero if a file operand does not exist\n\n** Improved robustness\n\n  Date no longer needs to allocate virtual memory to do its job,\n  so it can no longer fail due to an out-of-memory condition,\n  no matter how large the result.\n\n** Improved portability\n\n  hostid now prints exactly 8 hexadecimal digits, possibly with leading zeros,\n  and without any spurious leading \"fff...\" on 64-bit hosts.\n\n  nice now works on Darwin 7.7.0 in spite of its invalid definition of NZERO.\n\n  'rm -r' can remove all entries in a directory even when it is on a\n  file system for which readdir is buggy and that was not checked by\n  coreutils' old configure-time run-test.\n\n  sleep no longer fails when resumed after being suspended on linux-2.6.8.1,\n  in spite of that kernel's buggy nanosleep implementation.\n\n** New features\n\n  chmod -w now complains if its behavior differs from what chmod a-w\n  would do, and similarly for chmod -r, chmod -x, etc.\n\n  cp and mv: the --reply=X option is deprecated\n\n  date accepts the new option --rfc-3339=TIMESPEC.  The old --iso-8601 (-I)\n  option is deprecated; it still works, but new applications should avoid it.\n  date, du, ls, and pr's time formats now support new %:z, %::z, %:::z\n  specifiers for numeric time zone offsets like -07:00, -07:00:00, and -07.\n\n  dd has new iflag= and oflag= flags \"binary\" and \"text\", which have an\n  effect only on nonstandard platforms that distinguish text from binary I/O.\n\n  dircolors now supports SETUID, SETGID, STICKY_OTHER_WRITABLE,\n  OTHER_WRITABLE, and STICKY, with ls providing default colors for these\n  categories if not specified by dircolors.\n\n  du accepts new options: --time[=TYPE] and --time-style=STYLE\n\n  join now supports a NUL field separator, e.g., \"join -t '\\0'\".\n  join now detects and reports incompatible options, e.g., \"join -t x -t y\",\n\n  ls no longer outputs an extra space between the mode and the link count\n  when none of the listed files has an ACL.\n\n  md5sum --check now accepts multiple input files, and similarly for sha1sum.\n\n  If stdin is a terminal, nohup now redirects it from /dev/null to\n  prevent the command from tying up an OpenSSH session after you logout.\n\n  \"rm -FOO\" now suggests \"rm ./-FOO\" if the file \"-FOO\" exists and\n  \"-FOO\" is not a valid option.\n\n  stat -f -c %S outputs the fundamental block size (used for block counts).\n  stat -f's default output format has been changed to output this size as well.\n  stat -f recognizes file systems of type XFS and JFS\n\n  \"touch -\" now touches standard output, not a file named \"-\".\n\n  uname -a no longer generates the -p and -i outputs if they are unknown.\n\n* Major changes in release 5.3.0 (2005-01-08) [unstable]\n\n** Bug fixes\n\n  Several fixes to chgrp and chown for compatibility with POSIX and BSD:\n\n    Do not affect symbolic links by default.\n    Now, operate on whatever a symbolic link points to, instead.\n    To get the old behavior, use --no-dereference (-h).\n\n    --dereference now works, even when the specified owner\n    and/or group match those of an affected symlink.\n\n    Check for incompatible options.  When -R and --dereference are\n    both used, then either -H or -L must also be used.  When -R and -h\n    are both used, then -P must be in effect.\n\n    -H, -L, and -P have no effect unless -R is also specified.\n    If -P and -R are both specified, -h is assumed.\n\n    Do not optimize away the chown() system call when the file's owner\n    and group already have the desired value.  This optimization was\n    incorrect, as it failed to update the last-changed time and reset\n    special permission bits, as POSIX requires.\n\n    \"chown : file\", \"chown '' file\", and \"chgrp '' file\" now succeed\n    without changing the uid or gid, instead of reporting an error.\n\n    Do not report an error if the owner or group of a\n    recursively-encountered symbolic link cannot be updated because\n    the file system does not support it.\n\n  chmod now accepts multiple mode-like options, e.g., \"chmod -r -w f\".\n\n  chown is no longer subject to a race condition vulnerability, when\n  used with --from=O:G and without the (-h) --no-dereference option.\n\n  cut's --output-delimiter=D option works with abutting byte ranges.\n\n  dircolors's documentation now recommends that shell scripts eval\n  \"`dircolors`\" rather than `dircolors`, to avoid shell expansion pitfalls.\n\n  du no longer segfaults when a subdirectory of an operand\n  directory is removed while du is traversing that subdirectory.\n  Since the bug was in the underlying fts.c module, it also affected\n  chown, chmod, and chgrp.\n\n  du's --exclude-from=FILE and --exclude=P options now compare patterns\n  against the entire name of each file, rather than against just the\n  final component.\n\n  echo now conforms to POSIX better.  It supports the \\0ooo syntax for\n  octal escapes, and \\c now terminates printing immediately.  If\n  POSIXLY_CORRECT is set and the first argument is not \"-n\", echo now\n  outputs all option-like arguments instead of treating them as options.\n\n  expand and unexpand now conform to POSIX better.  They check for\n  blanks (which can include characters other than space and tab in\n  non-POSIX locales) instead of spaces and tabs.  Unexpand now\n  preserves some blanks instead of converting them to tabs or spaces.\n\n  \"ln x d/\" now reports an error if d/x is a directory and x a file,\n  instead of incorrectly creating a link to d/x/x.\n\n  ls no longer segfaults on systems for which SIZE_MAX != (size_t) -1.\n\n  md5sum and sha1sum now report an error when given so many input\n  lines that their line counter overflows, instead of silently\n  reporting incorrect results.\n\n  Fixes for \"nice\":\n\n    If it fails to lower the niceness due to lack of permissions,\n    it goes ahead and runs the command anyway, as POSIX requires.\n\n    It no longer incorrectly reports an error if the current niceness\n    happens to be -1.\n\n    It no longer assumes that nicenesses range from -20 through 19.\n\n    It now consistently adjusts out-of-range nicenesses to the\n    closest values in range; formerly it sometimes reported an error.\n\n  pathchk no longer accepts trailing options, e.g., \"pathchk -p foo -b\"\n  now treats -b as a file name to check, not as an invalid option.\n\n  'pr --columns=N' was not equivalent to 'pr -N' when also using\n  either -s or -w.\n\n  pr now supports page numbers up to 2**64 on most hosts, and it\n  detects page number overflow instead of silently wrapping around.\n  pr now accepts file names that begin with \"+\" so long as the rest of\n  the file name does not look like a page range.\n\n  printf has several changes:\n\n    It now uses 'intmax_t' (not 'long int') to format integers, so it\n    can now format 64-bit integers on most modern hosts.\n\n    On modern hosts it now supports the C99-inspired %a, %A, %F conversion\n    specs, the \"'\" and \"0\" flags, and the ll, j, t, and z length modifiers\n    (this is compatible with recent Bash versions).\n\n    The printf command now rejects invalid conversion specifications\n    like %#d, instead of relying on undefined behavior in the underlying\n    printf function.\n\n  ptx now diagnoses invalid values for its --width=N (-w)\n  and --gap-size=N (-g) options.\n\n  mv (when moving between partitions) no longer fails when\n  operating on too many command-line-specified nonempty directories.\n\n  \"readlink -f\" is more compatible with prior implementations\n\n  rm (without -f) no longer hangs when attempting to remove a symlink\n  to a file on an off-line NFS-mounted partition.\n\n  rm no longer gets a failed assertion under some unusual conditions.\n\n  rm no longer requires read access to the current directory.\n\n  \"rm -r\" would mistakenly fail to remove files under a directory\n  for some types of errors (e.g., read-only file system, I/O error)\n  when first encountering the directory.\n\n  \"sort\" fixes:\n\n    \"sort -o -\" now writes to a file named \"-\" instead of to standard\n    output; POSIX requires this.\n\n    An unlikely race condition has been fixed where \"sort\" could have\n    mistakenly removed a temporary file belonging to some other process.\n\n    \"sort\" no longer has O(N**2) behavior when it creates many temporary files.\n\n  tac can now handle regular, nonseekable files like Linux's\n  /proc/modules.  Before, it would produce no output for such a file.\n\n  tac would exit immediately upon I/O or temp-file creation failure.\n  Now it continues on, processing any remaining command line arguments.\n\n  \"tail -f\" no longer mishandles pipes and fifos.  With no operands,\n  tail now ignores -f if standard input is a pipe, as POSIX requires.\n  When conforming to POSIX 1003.2-1992, tail now supports the SUSv2 b\n  modifier (e.g., \"tail -10b file\") and it handles some obscure cases\n  more correctly, e.g., \"tail +cl\" now reads the file \"+cl\" rather\n  than reporting an error, \"tail -c file\" no longer reports an error,\n  and \"tail - file\" no longer reads standard input.\n\n  tee now exits when it gets a SIGPIPE signal, as POSIX requires.\n  To get tee's old behavior, use the shell command \"(trap '' PIPE; tee)\".\n  Also, \"tee -\" now writes to standard output instead of to a file named \"-\".\n\n  \"touch -- MMDDhhmm[yy] file\" is now equivalent to\n  \"touch MMDDhhmm[yy] file\" even when conforming to pre-2001 POSIX.\n\n  tr no longer mishandles a second operand with leading \"-\".\n\n  who now prints user names in full instead of truncating them after 8 bytes.\n\n  The following commands now reject unknown options instead of\n  accepting them as operands, so that users are properly warned that\n  options may be added later.  Formerly they accepted unknown options\n  as operands; e.g., \"basename -a a\" acted like \"basename -- -a a\".\n\n    basename dirname factor hostname link nohup sync unlink yes\n\n** New features\n\n  For efficiency, 'sort -m' no longer copies input to a temporary file\n  merely because the input happens to come from a pipe.  As a result,\n  some relatively-contrived examples like 'cat F | sort -m -o F - G'\n  are no longer safe, as 'sort' might start writing F before 'cat' is\n  done reading it.  This problem cannot occur unless '-m' is used.\n\n  When outside the default POSIX locale, the 'who' and 'pinky'\n  commands now output timestamps like \"2004-06-21 13:09\" instead of\n  the traditional \"Jun 21 13:09\".\n\n  pwd now works even when run from a working directory whose name\n  is longer than PATH_MAX.\n\n  cp, install, ln, and mv have a new --no-target-directory (-T) option,\n  and -t is now a short name for their --target-directory option.\n\n  cp -pu and mv -u (when copying) now don't bother to update the\n  destination if the resulting timestamp would be no newer than the\n  preexisting timestamp.  This saves work in the common case when\n  copying or moving multiple times to the same destination in a file\n  system with a coarse timestamp resolution.\n\n  cut accepts a new option, --complement, to complement the set of\n  selected bytes, characters, or fields.\n\n  dd now also prints the number of bytes transferred, the time, and the\n  transfer rate.  The new \"status=noxfer\" operand suppresses this change.\n\n  dd has new conversions for the conv= option:\n\n    nocreat   do not create the output file\n    excl      fail if the output file already exists\n    fdatasync physically write output file data before finishing\n    fsync     likewise, but also write metadata\n\n  dd has new iflag= and oflag= options with the following flags:\n\n    append    append mode (makes sense for output file only)\n    direct    use direct I/O for data\n    dsync     use synchronized I/O for data\n    sync      likewise, but also for metadata\n    nonblock  use non-blocking I/O\n    nofollow  do not follow symlinks\n    noctty    do not assign controlling terminal from file\n\n  stty now provides support (iutf8) for setting UTF-8 input mode.\n\n  With stat, a specified format is no longer automatically newline terminated.\n  If you want a newline at the end of your output, append '\\n' to the format\n  string.\n\n  'df', 'du', and 'ls' now take the default block size from the\n  BLOCKSIZE environment variable if the BLOCK_SIZE, DF_BLOCK_SIZE,\n  DU_BLOCK_SIZE, and LS_BLOCK_SIZE environment variables are not set.\n  Unlike the other variables, though, BLOCKSIZE does not affect\n  values like 'ls -l' sizes that are normally displayed as bytes.\n  This new behavior is for compatibility with BSD.\n\n  du accepts a new option --files0-from=FILE, where FILE contains a\n  list of NUL-terminated file names.\n\n  Date syntax as used by date -d, date -f, and touch -d has been\n  changed as follows:\n\n    Dates like 'January 32' with out-of-range components are now rejected.\n\n    Dates can have fractional timestamps like 2004-02-27 14:19:13.489392193.\n\n    Dates can be entered via integer counts of seconds since 1970 when\n    prefixed by '@'.  For example, '@321' represents 1970-01-01 00:05:21 UTC.\n\n    Time zone corrections can now separate hours and minutes with a colon,\n    and can follow standard abbreviations like \"UTC\".  For example,\n    \"UTC +0530\" and \"+05:30\" are supported, and are both equivalent to \"+0530\".\n\n    Date values can now have leading TZ=\"...\" assignments that override\n    the environment only while that date is being processed.  For example,\n    the following shell command converts from Paris to New York time:\n\n      TZ=\"America/New_York\" date --date='TZ=\"Europe/Paris\" 2004-10-31 06:30'\n\n  'date' has a new option --iso-8601=ns that outputs\n  nanosecond-resolution timestamps.\n\n  echo -e '\\xHH' now outputs a byte whose hexadecimal value is HH,\n  for compatibility with bash.\n\n  ls now exits with status 1 on minor problems, 2 if serious trouble.\n\n  ls has a new --hide=PATTERN option that behaves like\n  --ignore=PATTERN, except that it is overridden by -a or -A.\n  This can be useful for aliases, e.g., if lh is an alias for\n  \"ls --hide='*~'\", then \"lh -A\" lists the file \"README~\".\n\n  In the following cases POSIX allows the default GNU behavior,\n  so when POSIXLY_CORRECT is set:\n\n    false, printf, true, unlink, and yes all support --help and --option.\n    ls supports TABSIZE.\n    pr no longer depends on LC_TIME for the date format in non-POSIX locales.\n    printf supports \\u, \\U, \\x.\n    tail supports two or more files when using the obsolete option syntax.\n\n  The usual '--' operand is now supported by chroot, hostid, hostname,\n  pwd, sync, and yes.\n\n  'od' now conforms to POSIX better, and is more compatible with BSD:\n\n    The older syntax \"od [-abcdfilosx]... [FILE] [[+]OFFSET[.][b]]\" now works\n    even without --traditional.  This is a change in behavior if there\n    are one or two operands and the last one begins with +, or if\n    there are two operands and the latter one begins with a digit.\n    For example, \"od foo 10\" and \"od +10\" now treat the last operand as\n    an offset, not as a file name.\n\n    -h is no longer documented, and may be withdrawn in future versions.\n    Use -x or -t x2 instead.\n\n    -i is now equivalent to -t dI (not -t d2), and\n    -l is now equivalent to -t dL (not -t d4).\n\n    -s is now equivalent to -t d2.  The old \"-s[NUM]\" or \"-s NUM\"\n    option has been renamed to \"-S NUM\".\n\n    The default output format is now -t oS, not -t o2, i.e., short int\n    rather than two-byte int.  This makes a difference only on hosts like\n    Cray systems where the C short int type requires more than two bytes.\n\n  readlink accepts new options: --canonicalize-existing (-e)\n  and --canonicalize-missing (-m).\n\n  The stat option --filesystem has been renamed to --file-system, for\n  consistency with POSIX \"file system\" and with cp and du --one-file-system.\n\n** Removed features\n\n  md5sum and sha1sum's undocumented --string option has been removed.\n\n  tail's undocumented --max-consecutive-size-changes option has been removed.\n\n* Major changes in release 5.2.1 (2004-03-12) [stable]\n\n** Bug fixes\n\n  mv could mistakenly fail to preserve hard links when moving two\n  or more arguments between partitions.\n\n  'cp --sparse=always F /dev/hdx' no longer tries to use lseek to create\n  holes in the destination.\n\n  nohup now sets the close-on-exec flag for its copy of the stderr file\n  descriptor.  This avoids some nohup-induced hangs.  For example, before\n  this change, if you ran 'ssh localhost', then 'nohup sleep 600 </dev/null &',\n  and then exited that remote shell, the ssh session would hang until the\n  10-minute sleep terminated.  With the fixed nohup, the ssh session\n  terminates immediately.\n\n  'expr' now conforms to POSIX better:\n\n    Integers like -0 and 00 are now treated as zero.\n\n    The '|' operator now returns 0, not its first argument, if both\n    arguments are null or zero.  E.g., 'expr \"\" \\| \"\"' now returns 0,\n    not the empty string.\n\n    The '|' and '&' operators now use short-circuit evaluation, e.g.,\n    'expr 1 \\| 1 / 0' no longer reports a division by zero.\n\n** New features\n\n  'chown user.group file' now has its traditional meaning even when\n  conforming to POSIX 1003.1-2001, so long as no user has a name\n  containing '.' that happens to equal 'user.group'.\n\n\n* Major changes in release 5.2.0 (2004-02-19) [stable]\n\n** Bug fixes\n\n  none\n\n\n* Major changes in release 5.1.3 (2004-02-08): candidate to become stable 5.2.0\n\n** Bug fixes\n\n  'cp -d' now works as required even on systems like OSF V5.1 that\n  declare stat and lstat as 'static inline' functions.\n\n  timestamps output by stat now include actual fractional seconds,\n  when available -- or .0000000 for files without that information.\n\n  seq no longer infloops when printing 2^31 or more numbers.\n  For reference, seq `echo 2^31|bc` > /dev/null takes about one hour\n  on a 1.6 GHz Athlon 2000 XP.  Now it can output 2^53-1 numbers before\n  misbehaving.\n\n* Major changes in release 5.1.2 (2004-01-25):\n\n** Bug fixes\n\n  rmdir -p exits with status 1 on error; formerly it sometimes exited\n  with status 0 when given more than one argument.\n\n  nohup now always exits with status 127 when it finds an error,\n  as POSIX requires; formerly it sometimes exited with status 1.\n\n  Several programs (including cut, date, dd, env, hostname, nl, pr,\n  stty, and tr) now always exit with status 1 when they find an error;\n  formerly they sometimes exited with status 2.\n\n  factor no longer reports a usage error if stdin has the wrong format.\n\n  paste no longer infloops on ppc systems (bug introduced in 5.1.1)\n\n\n* Major changes in release 5.1.1 (2004-01-17):\n\n** Configuration option\n\n  You can select the default level of POSIX conformance at configure-time,\n  e.g., by ./configure DEFAULT_POSIX2_VERSION=199209\n\n** Bug fixes\n\n  fold -s works once again on systems with differing sizes for int\n  and size_t (bug introduced in 5.1.0)\n\n** New features\n\n  touch -r now specifies the origin for any relative times in the -d\n  operand, if both options are given.  For example, \"touch -r FOO -d\n  '-5 seconds' BAR\" sets BAR's modification time to be five seconds\n  before FOO's.\n\n  join: The obsolete options \"-j1 FIELD\", \"-j2 FIELD\", and\n  \"-o LIST1 LIST2...\" are no longer supported on POSIX 1003.1-2001 systems.\n  Portable scripts should use \"-1 FIELD\", \"-2 FIELD\", and\n  \"-o LIST1,LIST2...\" respectively.  If join was compiled on a\n  POSIX 1003.1-2001 system, you may enable the old behavior\n  by setting _POSIX2_VERSION=199209 in your environment.\n  [This change was reverted in coreutils 5.3.1.]\n\n\n* Major changes in release 5.1.0 (2003-12-21):\n\n** New features\n\n  chgrp, chmod, and chown can now process (with -R) hierarchies of virtually\n  unlimited depth.  Before, they would fail to operate on any file they\n  encountered with a relative name of length PATH_MAX (often 4096) or longer.\n\n  chgrp, chmod, chown, and rm accept the new options:\n  --preserve-root, --no-preserve-root (default)\n\n  chgrp and chown now accept POSIX-mandated -L, -H, and -P options\n\n  du can now process hierarchies of virtually unlimited depth.\n  Before, du was limited by the user's stack size and it would get a\n  stack overflow error (often a segmentation fault) when applied to\n  a hierarchy of depth around 30,000 or larger.\n\n  du works even when run from an inaccessible directory\n\n  du -D now dereferences all symlinks specified on the command line,\n  not just the ones that reference directories\n\n  du now accepts -P (--no-dereference), for compatibility with du\n  of NetBSD and for consistency with e.g., chown and chgrp\n\n  du's -H option will soon have the meaning required by POSIX\n  (--dereference-args, aka -D) rather then the current meaning of --si.\n  Now, using -H elicits a warning to that effect.\n\n  When given -l and similar options, ls now adjusts the output column\n  widths to fit the data, so that output lines are shorter and have\n  columns that line up better.  This may adversely affect shell\n  scripts that expect fixed-width columns, but such shell scripts were\n  not portable anyway, even with old GNU ls where the columns became\n  ragged when a datum was too wide.\n\n  du accepts a new option, -0/--null, to make it produce NUL-terminated\n  output lines\n\n** Bug fixes\n\n  printf, seq, tail, and sleep now parse floating-point operands\n  and options in the C locale.  POSIX requires this for printf.\n\n  od -c -w9999999 no longer segfaults\n\n  csplit no longer reads from freed memory (dumping core on some systems)\n\n  csplit would mistakenly exhaust virtual memory in some cases\n\n  ls --width=N (for very large N) is no longer subject to an address\n  arithmetic bug that could result in bounds violations.\n\n  ls --width=N (with -x or -C) no longer allocates more space\n  (potentially much more) than necessary for a given directory.\n\n  dd 'unblock' and 'sync' may now be combined (e.g., dd conv=unblock,sync)\n\n* Major changes in release 5.0.91 (2003-09-08):\n\n** New features\n\n  date accepts a new option --rfc-2822, an alias for --rfc-822.\n\n  split accepts a new option -d or --numeric-suffixes.\n\n  cp, install, mv, and touch now preserve microsecond resolution on\n  file timestamps, on platforms that have the 'utimes' system call.\n  Unfortunately there is no system call yet to preserve file\n  timestamps to their full nanosecond resolution; microsecond\n  resolution is the best we can do right now.\n\n  sort now supports the zero byte (NUL) as a field separator; use -t '\\0'.\n  The -t '' option, which formerly had no effect, is now an error.\n\n  sort option order no longer matters for the options -S, -d, -i, -o, and -t.\n  Stronger options override weaker, and incompatible options are diagnosed.\n\n  'sha1sum --check' now accepts the BSD format for SHA1 message digests\n  in addition to the BSD format for MD5 ones.\n\n  who -l now means 'who --login', not 'who --lookup', per POSIX.\n  who's -l option has been eliciting an unconditional warning about\n  this impending change since sh-utils-2.0.12 (April 2002).\n\n** Bug fixes\n\n  Mistakenly renaming a file onto itself, e.g., via 'mv B b' when 'B' is\n  the same directory entry as 'b' no longer destroys the directory entry\n  referenced by both 'b' and 'B'.  Note that this would happen only on\n  file systems like VFAT where two different names may refer to the same\n  directory entry, usually due to lower->upper case mapping of file names.\n  Now, the above can happen only on file systems that perform name mapping and\n  that support hard links (stat.st_nlink > 1).  This mitigates the problem\n  in two ways: few file systems appear to be affected (hpfs and ntfs are),\n  when the bug is triggered, mv no longer removes the last hard link to a file.\n  *** ATTENTION ***: if you know how to distinguish the following two cases\n  without writing to the file system in question, please let me know:\n  1) B and b refer to the same directory entry on a file system like NTFS\n       (B may well have a link count larger than 1)\n  2) B and b are hard links to the same file\n\n  stat no longer overruns a buffer for format strings ending in '%'\n\n  fold -s -wN would infloop for N < 8 with TABs in the input.\n  E.g., this would not terminate: printf 'a\\t' | fold -w2 -s\n\n  'split -a0', although of questionable utility, is accepted once again.\n\n  'df DIR' used to hang under some conditions on OSF/1 5.1.  Now it doesn't.\n\n  seq's --width (-w) option now works properly even when the endpoint\n  requiring the larger width is negative and smaller than the other endpoint.\n\n  seq's default step is 1, even if LAST < FIRST.\n\n  paste no longer mistakenly outputs 0xFF bytes for a nonempty input file\n  without a trailing newline.\n\n  'tail -n0 -f FILE' and 'tail -c0 -f FILE' no longer perform what amounted\n  to a busy wait, rather than sleeping between iterations.\n\n  tail's long-undocumented --allow-missing option now elicits a warning\n\n\n* Major changes in release 5.0.90 (2003-07-29):\n\n** New features\n\n  sort is now up to 30% more CPU-efficient in some cases\n\n  'test' is now more compatible with Bash and POSIX:\n\n    'test -t', 'test --help', and 'test --version' now silently exit\n    with status 0.  To test whether standard output is a terminal, use\n    'test -t 1'.  To get help and version info for 'test', use\n    '[ --help' and '[ --version'.\n\n    'test' now exits with status 2 (not 1) if there is an error.\n\n  wc count field widths now are heuristically adjusted depending on the input\n  size, if known.  If only one count is printed, it is guaranteed to\n  be printed without leading spaces.\n\n  Previously, wc did not align the count fields if POSIXLY_CORRECT was set,\n  but POSIX did not actually require this undesirable behavior, so it\n  has been removed.\n\n** Bug fixes\n\n  kill no longer tries to operate on argv[0] (introduced in 5.0.1)\n  Why wasn't this noticed?  Although many tests use kill, none of\n  them made an effort to avoid using the shell's built-in kill.\n\n  '[' invoked with no arguments no longer evokes a segfault\n\n  rm without --recursive (aka -r or -R) no longer prompts regarding\n  unwritable directories, as required by POSIX.\n\n  uniq -c now uses a SPACE, not a TAB between the count and the\n  corresponding line, as required by POSIX.\n\n  expr now exits with status 2 if the expression is syntactically valid,\n  and with status 3 if an error occurred.  POSIX requires this.\n\n  expr now reports trouble if string comparison fails due to a collation error.\n\n  split now generates suffixes properly on EBCDIC hosts.\n\n  split -a0 now works, as POSIX requires.\n\n  'sort --version' and 'sort --help' fail, as they should\n  when their output is redirected to /dev/full.\n\n  'su --version > /dev/full' now fails, as it should.\n\n** Fewer arbitrary limitations\n\n  cut requires 97% less memory when very large field numbers or\n  byte offsets are specified.\n\n\n* Major changes in release 5.0.1 (2003-07-15):\n\n** New programs\n- new program: '[' (much like 'test')\n\n** New features\n- head now accepts --lines=-N (--bytes=-N) to print all but the\n  N lines (bytes) at the end of the file\n- md5sum --check now accepts the output of the BSD md5sum program, e.g.,\n  MD5 (f) = d41d8cd98f00b204e9800998ecf8427e\n- date -d DATE can now parse a DATE string like May-23-2003\n- chown: '.' is no longer recognized as a separator in the OWNER:GROUP\n  specifier on POSIX 1003.1-2001 systems.  If chown *was not* compiled\n  on such a system, then it still accepts '.', by default.  If chown\n  was compiled on a POSIX 1003.1-2001 system, then you may enable the\n  old behavior by setting _POSIX2_VERSION=199209 in your environment.\n- chown no longer tries to preserve set-user-ID and set-group-ID bits;\n  on some systems, the chown syscall resets those bits, and previous\n  versions of the chown command would call chmod to restore the original,\n  pre-chown(2) settings, but that behavior is problematic.\n  1) There was a window whereby a malicious user, M, could subvert a\n  chown command run by some other user and operating on files in a\n  directory where M has write access.\n  2) Before (and even now, on systems with chown(2) that doesn't reset\n  those bits), an unwary admin. could use chown unwittingly to create e.g.,\n  a set-user-ID root copy of /bin/sh.\n\n** Bug fixes\n- chown --dereference no longer leaks a file descriptor per symlink processed\n- 'du /' once again prints the '/' on the last line\n- split's --verbose option works once again [broken in 4.5.10 and 5.0]\n- tail -f is no longer subject to a race condition that could make it\n  delay displaying the last part of a file that had stopped growing.  That\n  bug could also make tail -f give an unwarranted 'file truncated' warning.\n- du no longer runs out of file descriptors unnecessarily\n- df and 'readlink --canonicalize' no longer corrupt the heap on\n  non-glibc, non-solaris systems\n- 'env -u UNSET_VARIABLE' no longer dumps core on non-glibc systems\n- readlink's --canonicalize option now works on systems like Solaris that\n  lack the canonicalize_file_name function but do have resolvepath.\n- mv now removes 'a' in this example on all systems: touch a; ln a b; mv a b\n  This behavior is contrary to POSIX (which requires that the mv command do\n  nothing and exit successfully), but I suspect POSIX will change.\n- date's %r format directive now honors locale settings\n- date's '-' (no-pad) format flag now affects the space-padded-by-default\n  conversion specifiers, %e, %k, %l\n- fmt now diagnoses invalid obsolescent width specifications like '-72x'\n- fmt now exits nonzero when unable to open an input file\n- tsort now fails when given an odd number of input tokens,\n  as required by POSIX.  Before, it would act as if the final token\n  appeared one additional time.\n\n** Fewer arbitrary limitations\n- tail's byte and line counts are no longer limited to OFF_T_MAX.\n  Now the limit is UINTMAX_MAX (usually 2^64).\n- split can now handle --bytes=N and --lines=N with N=2^31 or more.\n\n** Portability\n- 'kill -t' now prints signal descriptions (rather than '?') on systems\n  like Tru64 with __sys_siglist but no strsignal function.\n- stat.c now compiles on Ultrix systems\n- sleep now works on AIX systems that lack support for clock_gettime\n- rm now works around Darwin6.5's broken readdir function\n  Before 'rm -rf DIR' would fail to remove all files in DIR\n  if there were more than 338.\n\n* Major changes in release 5.0 (2003-04-02):\n- false --help now exits nonzero\n\n[4.5.12]\n* printf no longer treats \\x specially when POSIXLY_CORRECT is set\n* printf avoids buffer overrun with format ending in a backslash and\n* printf avoids buffer overrun with incomplete conversion specifier\n* printf accepts multiple flags in a single conversion specifier\n\n[4.5.11]\n* seq no longer requires that a field width be specified\n* seq no longer fails when given a field width of '0'\n* seq now accepts \" \" and \"'\" as valid format flag characters\n* df now shows a HOSTNAME: prefix for each remote-mounted file system on AIX 5.1\n* portability tweaks for HP-UX, AIX 5.1, DJGPP\n\n[4.5.10]\n* printf no longer segfaults for a negative field width or precision\n* shred now always enables --exact for non-regular files\n* du no longer lists hard-linked files more than once\n* du no longer dumps core on some systems due to \"infinite\" recursion\n  via nftw's use of the buggy replacement function in getcwd.c\n* portability patches for a few vendor compilers and 64-bit systems\n* du -S *really* now works like it did before the change in 4.5.5\n\n[4.5.9]\n* du no longer truncates file sizes or sums to fit in 32-bit size_t\n* work around Linux kernel bug in getcwd (fixed in 2.4.21-pre4), so that pwd\n  now fails if the name of the working directory is so long that getcwd\n  truncates it.  Before it would print the truncated name and exit successfully.\n* 'df /some/mount-point' no longer hangs on a GNU libc system when another\n  hard-mounted NFS file system (preceding /some/mount-point in /proc/mounts)\n  is inaccessible.\n* rm -rf now gives an accurate diagnostic when failing to remove a file\n  under certain unusual conditions\n* mv and 'cp --preserve=links' now preserve multiple hard links even under\n  certain unusual conditions where they used to fail\n\n[4.5.8]\n* du -S once again works like it did before the change in 4.5.5\n* stat accepts a new file format, %B, for the size of each block reported by %b\n* du accepts new option: --apparent-size\n* du --bytes (-b) works the same way it did in fileutils-3.16 and before\n* du reports proper sizes for directories (not zero) (broken in 4.5.6 or 4.5.7)\n* df now always displays under 'Filesystem', the device file name\n  corresponding to the listed mount point.  Before, for a block- or character-\n  special file command line argument, df would display that argument.  E.g.,\n  'df /dev/hda' would list '/dev/hda' as the 'Filesystem', rather than say\n  /dev/hda3 (the device on which '/' is mounted), as it does now.\n* test now works properly when invoked from a set user ID or set group ID\n  context and when testing access to files subject to alternate protection\n  mechanisms.  For example, without this change, a set-UID program that invoked\n  'test -w F' (to see if F is writable) could mistakenly report that it *was*\n  writable, even though F was on a read-only file system, or F had an ACL\n  prohibiting write access, or F was marked as immutable.\n\n[4.5.7]\n* du would fail with more than one DIR argument when any but the last did not\n  contain a slash (due to a bug in ftw.c)\n\n[4.5.6]\n* du no longer segfaults on Solaris systems (fixed heap-corrupting bug in ftw.c)\n* du --exclude=FILE works once again (this was broken by the rewrite for 4.5.5)\n* du no longer gets a failed assertion for certain hierarchy lay-outs\n  involving hard-linked directories\n* 'who -r' no longer segfaults when using non-C-locale messages\n* df now displays a mount point (usually '/') for non-mounted\n  character-special and block files\n\n[4.5.5]\n* ls --dired produces correct byte offset for file names containing\n  nonprintable characters in a multibyte locale\n* du has been rewritten to use a variant of GNU libc's ftw.c\n* du now counts the space associated with a directory's directory entry,\n  even if it cannot list or chdir into that subdirectory.\n* du -S now includes the st_size of each entry corresponding to a subdirectory\n* rm on FreeBSD can once again remove directories from NFS-mounted file systems\n* ls has a new option --dereference-command-line-symlink-to-dir, which\n  corresponds to the new default behavior when none of -d, -l -F, -H, -L\n  has been specified.\n* ls dangling-symlink now prints 'dangling-symlink'.\n  Before, it would fail with 'no such file or directory'.\n* ls -s symlink-to-non-dir and ls -i symlink-to-non-dir now print\n  attributes of 'symlink', rather than attributes of their referents.\n* Fix a bug introduced in 4.5.4 that made it so that ls --color would no\n  longer highlight the names of files with the execute bit set when not\n  specified on the command line.\n* shred's --zero (-z) option no longer gobbles up any following argument.\n  Before, 'shred --zero file' would produce 'shred: missing file argument',\n  and worse, 'shred --zero f1 f2 ...' would appear to work, but would leave\n  the first file untouched.\n* readlink: new program\n* cut: new feature: when used to select ranges of byte offsets (as opposed\n  to ranges of fields) and when --output-delimiter=STRING is specified,\n  output STRING between ranges of selected bytes.\n* rm -r can no longer be tricked into mistakenly reporting a cycle.\n* when rm detects a directory cycle, it no longer aborts the entire command,\n  but rather merely stops processing the affected command line argument.\n\n[4.5.4]\n* cp no longer fails to parse options like this: --preserve=mode,ownership\n* 'ls --color -F symlink-to-dir' works properly\n* ls is much more efficient on directories with valid dirent.d_type.\n* stty supports all baud rates defined in linux-2.4.19.\n* 'du symlink-to-dir/' would improperly remove the trailing slash\n* 'du \"\"' would evoke a bounds violation.\n* In the unlikely event that running 'du /' resulted in 'stat (\"/\", ...)'\n  failing, du would give a diagnostic about '' (empty string) rather than '/'.\n* printf: a hexadecimal escape sequence has at most two hex. digits, not three.\n* The following features have been added to the --block-size option\n  and similar environment variables of df, du, and ls.\n  - A leading \"'\" generates numbers with thousands separators.\n    For example:\n      $ ls -l --block-size=\"'1\" file\n      -rw-rw-r--    1 eggert   src      47,483,707 Sep 24 23:40 file\n  - A size suffix without a leading integer generates a suffix in the output.\n    For example:\n      $ ls -l --block-size=\"K\"\n      -rw-rw-r--    1 eggert   src          46371K Sep 24 23:40 file\n* ls's --block-size option now affects file sizes in all cases, not\n  just for --block-size=human-readable and --block-size=si.  Fractional\n  sizes are now always rounded up, for consistency with df and du.\n* df now displays the block size using powers of 1000 if the requested\n  block size seems to be a multiple of a power of 1000.\n* nl no longer gets a segfault when run like this 'yes|nl -s%n'\n\n[4.5.3]\n* du --dereference-args (-D) no longer fails in certain cases\n* 'ln --target-dir=DIR' no longer fails when given a single argument\n\n[4.5.2]\n* 'rm -i dir' (without --recursive (-r)) no longer recurses into dir\n* 'tail -c N FILE' now works with files of size >= 4GB\n* 'mkdir -p' can now create very deep (e.g. 40,000-component) directories\n* rmdir -p dir-with-trailing-slash/ no longer fails\n* printf now honors the '--' command line delimiter\n* od's 8-byte formats x8, o8, and u8 now work\n* tail now accepts fractional seconds for its --sleep-interval=S (-s) option\n\n[4.5.1]\n* du and ls now report sizes of symbolic links (before they'd always report 0)\n* uniq now obeys the LC_COLLATE locale, as per POSIX 1003.1-2001 TC1.\n\n========================================================================\nHere are the NEWS entries made from fileutils-4.1 until the\npoint at which the packages merged to form the coreutils:\n\n[4.1.11]\n* 'rm symlink-to-unwritable' doesn't prompt [introduced in 4.1.10]\n[4.1.10]\n* rm once again gives a reasonable diagnostic when failing to remove a file\n    owned by someone else in a sticky directory [introduced in 4.1.9]\n* df now rounds all quantities up, as per POSIX.\n* New ls time style: long-iso, which generates YYYY-MM-DD HH:MM.\n* Any time style can be preceded by \"posix-\"; this causes \"ls\" to\n  use traditional timestamp format when in the POSIX locale.\n* The default time style is now posix-long-iso instead of posix-iso.\n  Set TIME_STYLE=\"posix-iso\" to revert to the behavior of 4.1.1 through 4.1.9.\n* 'rm dangling-symlink' doesn't prompt [introduced in 4.1.9]\n* stat: remove support for --secure/-s option and related %S and %C format specs\n* stat: rename --link/-l to --dereference/-L.\n    The old options will continue to work for a while.\n[4.1.9]\n* rm can now remove very deep hierarchies, in spite of any limit on stack size\n* new programs: link, unlink, and stat\n* New ls option: --author (for the Hurd).\n* 'touch -c no-such-file' no longer fails, per POSIX\n[4.1.8]\n* mv no longer mistakenly creates links to preexisting destination files\n    that aren't moved\n[4.1.7]\n* rm: close a hole that would allow a running rm process to be subverted\n[4.1.6]\n* New cp option: --copy-contents.\n* cp -r is now equivalent to cp -R.  Use cp -R -L --copy-contents to get the\n  traditional (and rarely desirable) cp -r behavior.\n* ls now accepts --time-style=+FORMAT, where +FORMAT works like date's format\n* The obsolete usage 'touch [-acm] MMDDhhmm[YY] FILE...' is no longer\n  supported on systems conforming to POSIX 1003.1-2001.  Use touch -t instead.\n* cp and inter-partition mv no longer give a misleading diagnostic in some\n    unusual cases\n[4.1.5]\n* cp -r no longer preserves symlinks\n* The block size notation is now compatible with SI and with IEC 60027-2.\n  For example, --block-size=1MB now means --block-size=1000000,\n  whereas --block-size=1MiB now means --block-size=1048576.\n  A missing 'B' (e.g. '1M') has the same meaning as before.\n  A trailing 'B' now means decimal, not binary; this is a silent change.\n  The nonstandard 'D' suffix (e.g. '1MD') is now obsolescent.\n* -H or --si now outputs the trailing 'B', for consistency with the above.\n* Programs now output trailing 'K' (not 'k') to mean 1024, as per IEC 60027-2.\n* New df, du short option -B is short for --block-size.\n* You can omit an integer '1' before a block size suffix,\n  e.g. 'df -BG' is equivalent to 'df -B 1G' and to 'df --block-size=1G'.\n* The following options are now obsolescent, as their names are\n  incompatible with IEC 60027-2:\n   df, du: -m or --megabytes (use -BM or --block-size=1M)\n   df, du, ls: --kilobytes (use --block-size=1K)\n[4.1.4]\n* df --local no longer lists smbfs file systems whose name starts with //\n* dd now detects the Linux/tape/lseek bug at run time and warns about it.\n[4.1.3]\n* ls -R once again outputs a blank line between per-directory groups of files.\n    This was broken by the cycle-detection change in 4.1.1.\n* dd once again uses 'lseek' on character devices like /dev/mem and /dev/kmem.\n    On systems with the linux kernel (at least up to 2.4.16), dd must still\n    resort to emulating 'skip=N' behavior using reads on tape devices, because\n    lseek has no effect, yet appears to succeed.  This may be a kernel bug.\n[4.1.2]\n* cp no longer fails when two or more source files are the same;\n    now it just gives a warning and doesn't copy the file the second time.\n    E.g., cp a a d/ produces this:\n    cp: warning: source file `a' specified more than once\n* chmod would set the wrong bit when given symbolic mode strings like\n    these: g=o, o=g, o=u.  E.g., 'chmod a=,o=w,ug=o f' would give a mode\n    of --w-r---w- rather than --w--w--w-.\n[4.1.1]\n* mv (likewise for cp), now fails rather than silently clobbering one of\n    the source files in the following example:\n    rm -rf a b c; mkdir a b c; touch a/f b/f; mv a/f b/f c\n* ls -R detects directory cycles, per POSIX.  It warns and doesn't infloop.\n* cp's -P option now means the same as --no-dereference, per POSIX.\n    Use --parents to get the old meaning.\n* When copying with the -H and -L options, cp can preserve logical\n    links between source files with --preserve=links\n* cp accepts new options:\n    --preserve[={mode,ownership,timestamps,links,all}]\n    --no-preserve={mode,ownership,timestamps,links,all}\n* cp's -p and --preserve options remain unchanged and are equivalent\n    to '--preserve=mode,ownership,timestamps'\n* mv and cp accept a new option: --reply={yes,no,query};  provides a consistent\n    mechanism to control whether one is prompted about certain existing\n    destination files.  Note that cp's and mv's -f options don't have the\n    same meaning: cp's -f option no longer merely turns off '-i'.\n* remove portability limitations (e.g., PATH_MAX on the Hurd, fixes for\n    64-bit systems)\n* mv now prompts before overwriting an existing, unwritable destination file\n    when stdin is a tty, unless --force (-f) is specified, as per POSIX.\n* mv: fix the bug whereby 'mv -uf source dest' would delete source,\n    even though it's older than dest.\n* chown's --from=CURRENT_OWNER:CURRENT_GROUP option now works\n* cp now ensures that the set-user-ID and set-group-ID bits are cleared for\n    the destination file when when copying and not preserving permissions.\n* 'ln -f --backup k k' gives a clearer diagnostic\n* ls no longer truncates user names or group names that are longer\n    than 8 characters.\n* ls's new --dereference-command-line option causes it to dereference\n  symbolic links on the command-line only.  It is the default unless\n  one of the -d, -F, or -l options are given.\n* ls -H now means the same as ls --dereference-command-line, as per POSIX.\n* ls -g now acts like ls -l, except it does not display owner, as per POSIX.\n* ls -n now implies -l, as per POSIX.\n* ls can now display dates and times in one of four time styles:\n\n  - The 'full-iso' time style gives full ISO-style timestamps like\n    '2001-05-14 23:45:56.477817180 -0700'.\n  - The 'iso' time style gives ISO-style timestamps like '2001-05-14 '\n    and '05-14 23:45'.\n  - The 'locale' time style gives locale-dependent timestamps like\n    'touko  14  2001' and 'touko  14 23:45' (in a Finnish locale).\n  - The 'posix-iso' time style gives traditional POSIX-locale\n    timestamps like 'May 14  2001' and 'May 14 23:45' unless the user\n    specifies a non-POSIX locale, in which case it uses ISO-style dates.\n    This is the default.\n\n  You can specify a time style with an option like --time-style='iso'\n  or with an environment variable like TIME_STYLE='iso'.  GNU Emacs 21\n  and later can parse ISO dates, but older Emacs versions cannot, so\n  if you are using an older version of Emacs outside the default POSIX\n  locale, you may need to set TIME_STYLE=\"locale\".\n\n* --full-time is now an alias for \"-l --time-style=full-iso\".\n\n\n========================================================================\nHere are the NEWS entries made from sh-utils-2.0 until the\npoint at which the packages merged to form the coreutils:\n\n [2.0.15]\n* date no longer accepts e.g., September 31 in the MMDDhhmm syntax\n* fix a bug in this package's .m4 files and in configure.ac\n [2.0.14]\n* nohup's behavior is changed as follows, to conform to POSIX 1003.1-2001:\n  - nohup no longer adjusts scheduling priority; use \"nice\" for that.\n  - nohup now redirects stderr to stdout, if stderr is not a terminal.\n  - nohup exit status is now 126 if command was found but not invoked,\n    127 if nohup failed or if command was not found.\n [2.0.13]\n* uname and uptime work better on *BSD systems\n* pathchk now exits nonzero for a path with a directory component\n    that specifies a non-directory\n [2.0.12]\n* kill: new program\n* who accepts new options: --all (-a), --boot (-b), --dead (-d), --login,\n   --process (-p), --runlevel (-r), --short (-s), --time (-t), --users (-u).\n   The -u option now produces POSIX-specified results and is the same as\n   the long option '--users'.  --idle is no longer the same as -u.\n* The following changes apply on systems conforming to POSIX 1003.1-2001:\n   - 'date -I' is no longer supported.  Instead, use 'date --iso-8601'.\n   - 'nice -NUM' is no longer supported.  Instead, use 'nice -n NUM'.\n  [This change was reverted in coreutils 5.3.1.]\n* New 'uname' options -i or --hardware-platform, and -o or --operating-system.\n   'uname -a' now outputs -i and -o information at the end.\n   New uname option --kernel-version is an alias for -v.\n   Uname option --release has been renamed to --kernel-release,\n   and --sysname has been renamed to --kernel-name;\n   the old options will work for a while, but are no longer documented.\n* 'expr' now uses the LC_COLLATE locale for string comparison, as per POSIX.\n* 'expr' now requires '+' rather than 'quote' to quote tokens;\n    this removes an incompatibility with POSIX.\n* date -d 'last friday' would print a date/time that was one hour off\n    (e.g., 23:00 on *thursday* rather than 00:00 of the preceding friday)\n    when run such that the current time and the target date/time fall on\n    opposite sides of a daylight savings time transition.\n    This problem arose only with relative date strings like 'last monday'.\n    It was not a problem with strings that include absolute dates.\n* factor is twice as fast, for large numbers\n [2.0.11]\n* setting the date now works properly, even when using -u\n* 'date -f - < /dev/null' no longer dumps core\n* some DOS/Windows portability changes\n [2.0j]\n* 'date -d DATE' now parses certain relative DATEs correctly\n [2.0i]\n* fixed a bug introduced in 2.0h that made many programs fail with a\n 'write error' when invoked with the --version option\n [2.0h]\n* all programs fail when printing --help or --version output to a full device\n* printf exits nonzero upon write failure\n* yes now detects and terminates upon write failure\n* date --rfc-822 now always emits day and month names from the 'C' locale\n* portability tweaks for Solaris8, Ultrix, and DOS\n [2.0g]\n* date now handles two-digit years with leading zeros correctly.\n* printf interprets unicode, \\uNNNN \\UNNNNNNNN, on systems with the\n  required support;  from Bruno Haible.\n* stty's rprnt attribute now works on HPUX 10.20\n* seq's --equal-width option works more portably\n [2.0f]\n* fix build problems with ut_name vs. ut_user\n [2.0e]\n* stty: fix long-standing bug that caused test failures on at least HPUX\n  systems when COLUMNS was set to zero\n* still more portability fixes\n* unified lib/: now that directory and most of the configuration framework\n  is common between fileutils, textutils, and sh-utils\n [2.0d]\n* fix portability problem with sleep vs lib/strtod.c's requirement for -lm\n [2.0c]\n* fix portability problems with nanosleep.c and with the new code in sleep.c\n [2.0b]\n* Regenerate lib/Makefile.in so that nanosleep.c is distributed.\n [2.0a]\n* sleep accepts floating point arguments on command line\n* sleep's clock continues counting down when sleep is suspended\n* when a suspended sleep process is resumed, it continues sleeping if\n  there is any time remaining\n* who once again prints whatever host information it has, even without --lookup\n\n========================================================================\nFor older NEWS entries for the fileutils, textutils, and sh-utils\npackages, see ./old/*/NEWS.\n\n  This package began as the union of the following:\n  textutils-2.1, fileutils-4.1.11, sh-utils-2.0.15.\n\n========================================================================\n\nCopyright (C) 2001-2025 Free Software Foundation, Inc.\n\nPermission is granted to copy, distribute and/or modify this document\nunder the terms of the GNU Free Documentation License, Version 1.3 or\nany later version published by the Free Software Foundation; with no\nInvariant Sections, with no Front-Cover Texts, and with no Back-Cover\nTexts.  A copy of the license is included in the \"GNU Free\nDocumentation License\" file as part of this distribution.\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 6.4931640625,
          "content": "These are the GNU core utilities.  This package is the union of\nthe GNU fileutils, sh-utils, and textutils packages.\n\nMost of these programs have significant advantages over their Unix\ncounterparts, such as greater speed, additional options, and fewer\narbitrary limits.\n\nThe programs that can be built with this package are:\n\n  [ arch b2sum base32 base64 basename basenc cat chcon chgrp chmod chown\n  chroot cksum comm coreutils cp csplit cut date dd df dir dircolors dirname\n  du echo env expand expr factor false fmt fold groups head hostid hostname\n  id install join kill link ln logname ls md5sum mkdir mkfifo mknod mktemp\n  mv nice nl nohup nproc numfmt od paste pathchk pinky pr printenv printf ptx\n  pwd readlink realpath rm rmdir runcon seq sha1sum sha224sum sha256sum\n  sha384sum sha512sum shred shuf sleep sort split stat stdbuf stty sum sync\n  tac tail tee test timeout touch tr true truncate tsort tty uname unexpand\n  uniq unlink uptime users vdir wc who whoami yes\n\nSee the file NEWS for a list of major changes in the current release.\n\nIf you obtained this file as part of a \"git clone\", then see the\nREADME-hacking file.  If this file came to you as part of a tar archive,\nthen see the file INSTALL for general compilation and installation\ninstructions, or README-install for system and coreutils specific instructions.\n\nLike the rest of the GNU system, these programs mostly conform to\nPOSIX, with BSD and other extensions.  For closer conformance, or\nconformance to a particular POSIX version, set the POSIXLY_CORRECT\nand the _POSIX2_VERSION environment variables, as described in\nthe documentation under \"Standards conformance\".\n\nThe ls, dir, and vdir commands are all separate executables instead of\none program that checks argv[0] because people often rename these\nprograms to things like gls, gnuls, l, etc.  Renaming a program\nfile shouldn't affect how it operates, so that people can get the\nbehavior they want with whatever name they want.\n\nSpecial thanks to Paul Eggert, Brian Matthews, Bruce Evans, Karl Berry,\nKaveh Ghazi, and François Pinard for help with debugging and porting\nthese programs.  Many thanks to all of the people who have taken the\ntime to submit problem reports and fixes.  All contributed changes are\nattributed in the commit logs.\n\nAnd thanks to the following people who have provided accounts for\nportability testing on many different types of systems: Bob Proulx,\nChristian Robert, François Pinard, Greg McGary, Harlan Stenn,\nJoel N. Weber, Mark D. Roth, Matt Schalit, Nelson H. F. Beebe,\nRéjean Payette, Sam Tardieu.\n\nThanks to Michael Stone for inflicting test releases of this package\non Debian's unstable distribution, and to all the kind folks who used\nthat distribution and found and reported bugs.\n\nNote that each man page is now automatically generated from a template\nand from the corresponding --help usage message.  Patches to the template\nfiles (man/*.x) are welcome.  However, the authoritative documentation\nis in texinfo form in the doc directory.\n\n\n***************\nFeature requests:\n---------------\n\nIf you would like to add a new feature, please try to get some sort of\nconsensus that it is a worthwhile change.  One way to do that is to send\nmail to coreutils@gnu.org including as much description and justification\nas you can.  Based on the feedback that generates, you may be able to\nconvince us that it's worth adding.  Please also consult the list of\npreviously discussed but ultimately rejected feature requests at:\nhttps://www.gnu.org/software/coreutils/rejected_requests.html\n\n\n***************\nReporting bugs:\n---------------\n\nSend bug reports, questions, comments, etc. to bug-coreutils@gnu.org.\nTo suggest a patch, see the files README-hacking and HACKING for tips.\n\nAll of these programs except 'test' recognize the '--version' option.\nWhen reporting bugs, please include in the subject line both the package\nname/version and the name of the program for which you found a problem.\n\nIf you have a problem with 'sort', try running 'sort --debug', as it\ncan often help find and fix problems without having to wait for an\nanswer to a bug report.  If the debug output does not suffice to fix\nthe problem on your own, please compress and attach it to the rest of\nyour bug report.\n\nIMPORTANT: if you take the time to report a test failure,\nplease be sure to include the output of running 'make check'\nin verbose mode for each failing test.  For example,\nif the test that fails is tests/df/df-P.sh, then you would\nrun this command:\n\n  make check TESTS=tests/df/df-P.sh VERBOSE=yes SUBDIRS=. >> log 2>&1\n\nFor some tests, particularly perl tests, you can get even more detail by adding\nDEBUG=yes. Then include the contents of the file 'log' in your bug report.\n\n\n***************************************\n\nThere are many tests, but nowhere near as many as we need.\nAdditions and corrections are very welcome.\n\nIf you see a problem that you've already reported, feel free to re-report\nit -- it won't bother us to get a reminder.  Besides, the more messages we\nget regarding a particular problem the sooner it'll be fixed -- usually.\nIf you sent a complete patch and, after a couple weeks you haven't\nreceived any acknowledgement, please ping us.  A complete patch includes\na well-written ChangeLog entry, unified (diff -u format) diffs relative\nto the most recent test release (or, better, relative to the latest\nsources in the public repository), an explanation for why the patch is\nnecessary or useful, and if at all possible, enough information to\nreproduce whatever problem prompted it.  Plus, you'll earn lots of\nkarma if you include a test case to exercise any bug(s) you fix.\nHere are instructions for checking out the latest development sources:\n\n  https://savannah.gnu.org/git/?group=coreutils\n\nFor general documentation on the coding and usage standards\nthis distribution follows, see the GNU Coding Standards at:\nhttps://www.gnu.org/prep/standards/\n\nFor any copyright year range specified as YYYY-ZZZZ in this package\nnote that the range specifies every single year in that closed interval.\n\nPlease see the file COPYING for copying conditions.\n\n========================================================================\n\nCopyright (C) 1998-2025 Free Software Foundation, Inc.\n\nPermission is granted to copy, distribute and/or modify this document\nunder the terms of the GNU Free Documentation License, Version 1.3 or\nany later version published by the Free Software Foundation; with no\nInvariant Sections, with no Front-Cover Texts, and with no Back-Cover\nTexts.  A copy of the license is included in the \"GNU Free\nDocumentation License\" file as part of this distribution.\n"
        },
        {
          "name": "README-hacking",
          "type": "blob",
          "size": 4.2666015625,
          "content": "Building from a Git repository\t\t\t\t-*- outline -*-\n\nThese notes intend to help people working on the checked-out sources.\nThese requirements do not apply when building from a distribution tarball.\nIf this package has a file HACKING, please also read that file for\nmore detailed contribution guidelines.\n\n* Requirements\n\nWe've opted to keep only the highest-level sources in the Git repository.\nThis eases our maintenance burden (fewer merges etc.), but imposes more\nrequirements on anyone wishing to build from the just-checked-out sources.\n(The requirements to build from a release are much less and are just\nthe requirements of the standard './configure && make' procedure.)\nSpecific development tools and versions will be checked for and listed by\nthe bootstrap script.  See README-prereq for specific notes on obtaining\nthese prerequisite tools.\n\nValgrind <https://valgrind.org/> is also highly recommended, if\nValgrind supports your architecture.  See also README-valgrind\n(if present).\n\nWhile building from a just-cloned source tree may require installing a\nfew prerequisites, later, a plain 'git pull && make' typically suffices.\n\n* First Git checkout\n\nYou can get a copy of the source repository like this:\n\n        $ git clone https://git.savannah.gnu.org/git/<packagename>\n        $ cd <packagename>\n\nwhere '<packagename>' stands for 'coreutils' or whatever other package\nyou are building.\n\nTo use the most-recent Gnulib (as opposed to the Gnulib version that\nthe package last synchronized to), do this next:\n\n        $ git submodule foreach git pull origin master\n        $ git commit -m 'build: update gnulib submodule to latest' gnulib\n\nAs an optional step, if you already have a copy of the Gnulib Git\nrepository, then you can use it as a reference to reduce download\ntime and file system space requirements:\n\n        $ export GNULIB_SRCDIR=/path/to/gnulib\n\nThe next steps are to get and check other files needed to build,\nand complete the build:\n\n        $ make -f cfg.mk\n\nFor reference the above command runs the following steps,\nwhich can be done individually if required to give more control:\n\n        $ ./bootstrap\n        $ ./configure --quiet #[--disable-gcc-warnings] [*]\n        $ make #[check]\n\nAt this point, there should be no difference between your local copy,\nand the Git master copy:\n\n        $ git diff\n\nshould output no difference.\n\nEnjoy!\n\n[*] By default GCC warnings are enabled when building from Git.\nIf you get warnings with recent GCC and Glibc with default\nconfigure-time options, please report the warnings to the bug\nreporting address of this package instead of to bug-gnulib,\neven if the problem seems to originate in a Gnulib-provided file.\nIf you get warnings with other configurations, you can run\n'./configure --disable-gcc-warnings' or 'make WERROR_CFLAGS='\nto build quietly or verbosely, respectively.\n-----\n\n* Submitting patches\n\nIf you develop a fix or a new feature, please send it to the\nappropriate bug-reporting address as reported by the --help option of\neach program.  One way to do this is to use vc-dwim\n<https://www.gnu.org/software/vc-dwim/>), as follows.\n\n  Run the command \"vc-dwim --initialize\" from the top-level directory\n  of this package's git-cloned hierarchy.\n\n  Edit the (empty) ChangeLog file that this command creates, creating a\n  properly-formatted entry according to the GNU coding standards\n  <https://www.gnu.org/prep/standards/html_node/Change-Logs.html>.\n\n  Make your changes.\n\n  Run the command \"vc-dwim\" and make sure its output (the diff of all\n  your changes) looks good.\n\n  Run \"vc-dwim --commit\".\n\n  Run the command \"git format-patch --stdout -1\", and email its output\n  in, using the output's subject line.\n\n-----\n\nCopyright (C) 2002-2025 Free Software Foundation, Inc.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README-install",
          "type": "blob",
          "size": 4.349609375,
          "content": "Please see the file INSTALL for generic build and installation instructions.\nThis file details coreutils and system specific build instructions.\n\n\n*********************\nPre-C99 build failure\n---------------------\n\nIn 2009 we added this requirement:\nTo build the coreutils from source, you must have a C99-conforming\ncompiler, due to the use of declarations after non-declaration statements\nin several files in src/.  There is code in configure to find and, if\npossible, enable an appropriate compiler.  However, if configure doesn't\nfind a C99 compiler, it continues nonetheless, and your build will fail.\nThere used to be a \"c99-to-c89.diff\" patch you could apply to convert\nto code that even an old pre-c99 compiler can handle, but it was too\ntedious to maintain, so has been removed.\n\n\n***********************\nHPUX 11.x build failure\n-----------------------\n\nA known problem exists when compiling on HPUX on both hppa and ia64\nin 64-bit mode (i.e., +DD64) on HP-UX 11.0, 11.11, and 11.23.  This\nis not due to a bug in the package but instead due to a bug in the\nsystem header file which breaks things in 64-bit mode.  The default\ncompilation mode is 32-bit and the software compiles fine using the\ndefault mode.  To build this software in 64-bit mode you will need\nto fix the system /usr/include/inttypes.h header file.  After\ncorrecting that file the software also compiles fine in 64-bit mode.\nHere is one possible patch to correct the problem:\n\n--- /usr/include/inttypes.h.orig\tThu May 30 01:00:00 1996\n+++ /usr/include/inttypes.h\tSun Mar 23 00:20:36 2003\n@@ -489 +489 @@\n-#ifndef __STDC_32_MODE__\n+#ifndef __LP64__\n\n\n************************\nOSF/1 4.0d and AIX build failures\n------------------------\n\nIf you use /usr/bin/make on these systems, the build will fail due\nto the presence of the \"[\" target.  OSF/1 make(1) appears to\ntreat \"[\" as some syntax relating to locks, while AIX make(1)\nappears to skip the \"[\" target.  To work around these issues\nthe best solution is to use GNU make.  Otherwise, simply remove\nall mention of \"[$(EXEEXT)\" from src/Makefile.\n\n\n************************\n32 bit time_t build failures\n------------------------\n\nAlthough 32-bit builds fail if that forces time_t to be 32 bits, this\ncan be fixed by using 64-bit builds.  For example, on AIX where GCC\ndefaults to 32 bits, one can use \"./configure CC='gcc -maix64' AR='ar\n-X64'\"; similarly, on Solaris one can configure with CC='gcc -m64'.\nIf all else fails one can configure with --disable-year2038;\nhowever, this will mishandle timestamps after 2038, and please file\nbug reports for any such situations.\n\n\n*************************************************\n\"make check\" failure on IRIX 6.5 and Solaris <= 9\n-------------------------------------------------\n\nUsing the vendor make program to run \"make check\" fails on these two systems.\nIf you want to run all of the tests there, use GNU make.\n\n\n\n**********************\nRunning tests as root:\n----------------------\n\nIf you run the tests as root, note that a few of them create files\nand/or run programs as a non-root user, 'nobody' by default.\nIf you want to use some other non-root username, specify it via\nthe NON_ROOT_USERNAME environment variable.  Depending on the\npermissions with which the working directories have been created,\nusing 'nobody' may fail, because that user won't have the required\nread and write access to the build and test directories.\nI find that it is best to unpack and build as a non-privileged\nuser, and then to run the following command as that user in order\nto run the privilege-requiring tests:\n\n  sudo env PATH=\"$PATH\" NON_ROOT_USERNAME=$USER make -k check-root\n\nIf you can run the tests as root, please do so and report any\nproblems.  We get much less test coverage in that mode, and it's\narguably more important that these tools work well when run by\nroot than when run by less privileged users.\n\n\n\n**********************\nautotools considerations:\n----------------------\n\nWARNING:  Now that we use the ./bootstrap script, you should not run\nautoreconf manually.  Doing that will overwrite essential source files\nwith older versions, which may make the package unbuildable or introduce\nsubtle bugs.\n\nWARNING:  If you modify files like configure.in, m4/*.m4, aclocal.m4,\nor any Makefile.am, then don't be surprised if what gets regenerated no\nlonger works.  To make things work, you'll have to be using appropriate\nversions of the tools listed in bootstrap.conf's buildreq string.\n"
        },
        {
          "name": "README-package-renamed-to-coreutils",
          "type": "blob",
          "size": 0.53125,
          "content": "On 2002-09-01, the GNU fileutils, textutils, and sh-utils\npackages were merged into one, called the GNU coreutils.\nSee https://www.gnu.org/software/coreutils/coreutils.html for a description.\nHere's the FAQ list:\n\n  https://www.gnu.org/software/coreutils/faq/\n\nFor information on the mailing lists associated with the\ncoreutils package, including archive locations, see these:\n\n  https://lists.gnu.org/mailman/listinfo/coreutils-announce\n  https://lists.gnu.org/mailman/listinfo/bug-coreutils\n  https://lists.gnu.org/mailman/listinfo/coreutils\n"
        },
        {
          "name": "README-prereq",
          "type": "blob",
          "size": 1.8291015625,
          "content": "This gives some notes on obtaining the tools required for development.\nThese tools can be used by the 'bootstrap' and 'configure' scripts,\nas well as by 'make'.  They include:\n\n- Autoconf   <https://www.gnu.org/software/autoconf/>\n- Automake   <https://www.gnu.org/software/automake/>\n- Bison      <https://www.gnu.org/software/bison/>\n- Gettext    <https://www.gnu.org/software/gettext/>\n- Git        <https://git-scm.com/>\n- Gperf      <https://www.gnu.org/software/gperf/>\n- Gzip       <https://www.gnu.org/software/gzip/>\n- Help2man   <https://www.gnu.org/software/help2man/>\n- M4         <https://www.gnu.org/software/m4/>\n- Make       <https://www.gnu.org/software/make/>\n- Perl       <https://www.cpan.org/>\n- Tar        <https://www.gnu.org/software/tar/>\n- Texinfo    <https://www.gnu.org/software/texinfo/>\n- Wget       <https://www.gnu.org/software/wget/>\n- XZ Utils   <https://tukaani.org/xz/>\n\nIt is generally better to use official packages for your system.\nIf a package is not officially available you can build it from source\nand install it into a directory that you can then use to build this\npackage.  If some packages are available but are too old, install the\ntoo-old versions first as they may be needed to build newer versions.\n\nHere is an example of how to build a program from source.  This\nexample is for Autoconf; a similar approach should work for the other\ndeveloper prerequisites.  This example assumes Autoconf 2.71; it\nshould be OK to use a later version of Autoconf, if available.\n\n  prefix=$HOME/prefix   # (or wherever else you choose)\n  export PATH=$prefix/bin:$PATH\n  wget https://ftp.gnu.org/pub/gnu/autoconf/autoconf-2.71.tar.gz\n  gzip -d <autoconf-2.71.tar.gz | tar xf -\n  cd autoconf-2.71\n  ./configure --prefix=$prefix\n  make install\n\nOnce the prerequisites are installed, you can build this package as\ndescribed in README-hacking.\n"
        },
        {
          "name": "README-release",
          "type": "blob",
          "size": 4.9892578125,
          "content": "Here are most of the steps we (maintainers) follow when making a release.\n\n* start from a clean, up-to-date git directory.\n\n    git checkout master; git pull\n\n* Run ./configure && make maintainer-clean\n\n* Ensure that the desired versions of autoconf, automake, bison, etc.\n  are in your PATH.  See the buildreq list in bootstrap.conf for\n  the complete list.\n\n* Ensure that you're on \"master\" with no uncommitted diffs.\n  This should produce no output: git checkout master; git diff\n\n* Ensure that you've pushed all changes that belong in the release\n  and that the NixOS/Hydra autobuilder is reporting all is well:\n\n      https://hydra.nixos.org/jobset/gnu/coreutils-master\n\n* Run bootstrap one last time.  This downloads any new translations:\n\n    ./bootstrap\n\nFIXME: enable excluded programs like arch? to get their manual pages?\n\n* Check for new file system types by running the following command on\n  a system with the most recent kernel possible (e.g., Fedora rawhide):\n\n    make src/fs-magic-compare\n\n  Or download the latest header first like:\n\n    kgit='https://git.kernel.org/cgit/linux/kernel/git'\n    wget -q $kgit/torvalds/linux.git/plain/include/uapi/linux/magic.h \\\n      -O src/fs-latest-magic.h\n\n  If it finds a new file system magic number, add it to src/stat.c.\n  If it is a remote file system tag it as such.\n\n  Note there may be some new file systems magic values not defined\n  in that linux/magic.h file, which can be seen at:\n\n    https://www.livegrep.com/search/linux\\\n    ?q=%23define+.*_SUPER_MAGIC+-file%3Amagic\\.h\n\n\n* Pre-release testing:\n\n  Run the following on at least one SELinux-enabled (enforcing) and\n  one non-SELinux system:\n\n    n=$(( ($(nproc) + 1) / 2 ))\n    sudo env PATH=\"$PATH\" NON_ROOT_USERNAME=$USER \\\n      make -k -j$(nproc) check-root SUBDIRS=. \\\n      && make distcheck \\\n      && make -j$n check RUN_VERY_EXPENSIVE_TESTS=yes RUN_EXPENSIVE_TESTS=yes\n\n  If testing on systems with a non standard default shell, spurious failures\n  may occur.  Often there are other shells available, and you can select\n  those by using for example, SHELL=bash in the commands above.\n\n  Note that the use of -j$n tells make to use approximately half of the\n  available processing units.  If you use -jN, for larger N, some of the\n  expensive tests are likely to interfere with concurrent performance-measuring\n  or timing-sensitive tests, resulting in spurious failures.\n\n  If \"make distcheck\" doesn't run \"make syntax-check\" for you, then run\n  it manually:\n\n    make syntax-check\n\n* To set the date, version number, and release type [stable/alpha/beta] on\n  line 3 of NEWS, commit that, and tag the release; run:\n\n    build-aux/do-release-commit-and-tag X.Y stable\n\n* Run the following to create release tarballs.  Your choice selects the\n  corresponding upload-to destination in the emitted gnupload command.\n  The different destinations are specified in cfg.mk.  See the definitions\n  of gnu_ftp_host-{alpha,beta,stable}.\n\n    # \"TYPE\" must be stable, beta or alpha\n    make TYPE\n\n* Test the tarball.  copy it to a few odd-ball systems and ensure that\n  it builds and passes all tests.\n\n* While that's happening, write the release announcement that you will\n  soon post.  Start with the template, $HOME/announce-coreutils-X.Y\n  that was just created by that \"make\" command.\n\n  For generating counts use:\n   oldrel=$(cat .prev-version)\n   printf \"There have been %d commits by %d people %s\\n\" \\\n     $(($(git log --oneline v$oldrel.. | wc -l) - 3))    \\\n     $(git shortlog v$oldrel.. | grep \"^[^ ]\" | wc -l)   \\\n     \"in the [X] weeks since $oldrel\"\n\n   git shortlog v$oldrel.. | sed -n 's/:$//p' |\n   sed 's/^/  /' | column -c 70 | expand\n\nOnce all the builds and tests have passed,\n\n* Run the gnupload command that was suggested by your \"make stable\" run above.\n\n* Wait a few minutes (maybe up to 30?) and then use the release URLs to\n  download all tarball/signature pairs and use gpg --verify to ensure\n  that they're all valid.\n\n* Push the NEWS-updating changes and the new tag:\n\n    v=$(cat .prev-version)\n    git push origin master tag v$v\n\n* Announce it on Savannah first, so you can include the preferable\n  savannah.org announcement link in the email message.\n\n  From here:\n    https://savannah.gnu.org/projects/coreutils/\n  click on the \"submit news\", then write something like the following:\n  (If there is no such button, then enable \"News\" for the project via\n   the Main -> \"Select Features\" menu item, or via this link:\n   https://savannah.gnu.org/project/admin/editgroupfeatures.php?group=coreutils)\n\n    Subject: coreutils-X.Y released [stable]\n    +verbatim+\n    ...paste the announcement here...\n    -verbatim-\n\n  Then go here to approve it:\n    https://savannah.gnu.org/news/approve.php?group=coreutils\n\n* Send the announcement email message (signed with the release key)\n\n* Approve the announcement here:\n  https://lists.gnu.org/mailman/admindb/coreutils-announce\n\n* After each non-alpha release, update the on-line manual accessible via\n\n    https://www.gnu.org/software/coreutils/manual/\n\n  by running this:\n\n    build-aux/gnu-web-doc-update --mirror\n"
        },
        {
          "name": "README-valgrind",
          "type": "blob",
          "size": 1.79296875,
          "content": "#! /bin/bash\n# Convert this package for use with valgrind.\n\n# Copyright (C) 2002-2025 Free Software Foundation, Inc.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n\n\n# Convert Makefile.am files:\n#  find tests -name check.mk | xargs grep -wl PATH |\n#    xargs perl -pi -e 's,src(\\$\\(PATH_SEPARATOR\\)),src/vg$1,'\n# To restore:\n#  find tests -name check.mk | xargs grep -wl PATH |\n#    xargs perl -pi -e 's,src/vg,src,'\n#\n# Create this symlink for suppressions (this is no longer necessary,\n# with Linux kernel 2.6.9 and valgrind-2.2.0):\n# ln -s $PWD/.vg-suppressions /tmp/cu-vg\n\n\n# Create src/vg:\n\ncoreutils=$(echo 'spy:;@echo $(all_programs) $(noinst_PROGRAMS)' |\n            (cd src; make -f Makefile -f - spy | tr -s '\\n ' '  '))\nmkdir -p src/vg\npwd=`pwd`\nsrcdir=$pwd/src\n_path='export PATH='$srcdir':${PATH#*:}'\npre='#!/bin/sh\\n'\"$_path\"'\\n'\nn=15 # stack trace depth\nlog_fd=3 # One can redirect this to file like 3>vg.log\ntest -e /tmp/cu-vg && suppressions='--suppressions=/tmp/cu-vg'\nvg=\"exec /usr/bin/valgrind $suppressions --log-fd=$log_fd \\\n--leak-check=yes --track-fds=yes --leak-check=full --num-callers=$n\"\ncat <<EOF > src/vg/gen\nfor i in $coreutils; do\n  printf \"$pre$vg -- \\$i\"' \"\\$@\"\\n' > \\$i\n  chmod a+x \\$i\ndone\nEOF\ncd src/vg\n. ./gen\n"
        },
        {
          "name": "THANKS.in",
          "type": "blob",
          "size": 37.642578125,
          "content": "These people have contributed to the GNU coreutils (formerly, the fileutils,\ntextutils, and/or sh-utils packages).  Some have reported problems, others\nhave contributed improvements to the documentation, actual code, and even\ncomplete programs.  Those contributions are described in the version control\nlogs and ChangeLog files.  If your name has been left out, if you'd rather\nnot be listed, or if you'd prefer a different address be used, please send a\nnote to the GNU coreutils mailing list <coreutils@gnu.org>.\n##\n## There is no need to list here any name that appears as an Author in\n## \"git log\" output.  Those are automatically added when this template\n## is used to generate the THANKS file.  Note that numerous people listed\n## here would have been listed as commit authors if we had been using git\n## for version control when they contributed.\n##\n## Let's keep the list in this order ... which sc_THANKS_in_sorted ensures:\n##   $ LC_ALL=en_US.UTF-8 src/sort -f -k1,1\n\n???                                 kytek@cybercomm.net\nA Costa                             agcosta@gis.net\nAaron Davies                        aaron.davies@gmail.com\nAaron Hawley                        ashawley@uvm.edu\nAchim Blumensath                    blume@corona.oche.de\nAdam Jimerson                       vendion@charter.net\nAdam Klein                          aklein@debian.org\nAdam Sampson                        ats@offog.org\nAdrian Bunk                         bunk@stusta.de\nAIDA Shinra                         shinra@j10n.org\nAlain Magloire                      alain@qnx.com\nAlan Iwi                            iwi@atm.ox.ac.uk\nAlan Jenkins                        alan-jenkins@tuffmail.co.uk\nAlbert Chin-A-Young                 china@thewrittenword.com\nAlbert Hopkins                      ahopkins@dynacare.com\nAlberto Accomazzi                   alberto@cfa0.harvard.edu\naldomel                             aldomel@ix.netcom.com\nAlen Muzinic                        zveki@fly.cc.fer.hr\nAlexander Nguyen                    vinh@seas.ucla.edu\nAlexander V. Lukyanov               lav@netis.ru\nAlexandre Duret-Lutz                duret_g@epita.fr\nAlexey Solovyov                     alekso@math.uu.se\nAlexey Vyskubov                     alexey@pippuri.mawhrin.net\nAlfred M. Szmidt                    ams@kemisten.nu\nAllen Hewes                         allen@decisiv.net\nAmbrose Feinstein                   ambrose@google.com\nAmr Ali                             amr.ali.cc@gmail.com\nAnders Kaseorg                      andersk@mit.edu\nAndi Kleen                          freitag@alancoxonachip.com\nAndre Novaes Cunha                  Andre.Cunha@br.global-one.net\nAndreas Frische                     andreasfrische@gmail.com\nAndreas Jaeger                      jaeger@gnu.org\nAndreas Luik                        luik@isa.de\nAndreas Stolcke                     stolcke@ICSI.Berkeley.EDU\nAndrei Gaponenko                    andr@triumf.ca\nAndres Soolo                        andres@soolo.matti.ee\nAndrew Burgess                      aab@cichlid.com\nAndrew Dalke                        dalke@bioreason.com\nAndrew Fabbro                       andrew@fabbro.org\nAndrew Pham                         andpha@us.ibm.com\nAndrew Tridgell                     tridge@samba.org\nAndrey Borzenkov                    arvidjaar@mail.ru\nAndries Brouwer                     Andries.Brouwer@cwi.nl\nAndy Longton                        alongton@metamark.com\nAnoop Sharma                        sendtoanoop@gmail.com\nAnthony Thyssen                     anthony@griffith.edu.au\nAntonio Rendas                      ajrendas@yahoo.com\nAriel Faigon                        ariel@cthulhu.engr.sgi.com\nArjan Opmeer                        arjan.opmeer@gmail.com\nArkadiusz Miśkiewicz                arekm@maven.pl\nArne Henrik Juul                    arnej@imf.unit.no\nArnold Robbins                      arnold@skeeve.com\nArthur Pool                         pool@commerce.uq.edu.au\nArun Sharma                         arun.sharma@intel.com\nArvind Autar                        Autar022@planet.nl\nAugey Mikus                         mikus@dqc.org\nAustin Donnelly                     Austin.Donnelly@cl.cam.ac.uk\nAxel Dörfler                        axeld@pinc-software.de\nAxel Kittenberger                   Anshil@gmx.net\nBarry Kelly                         http://blog.barrkel.com/\nBauke Jan Douma                     bjdouma@xs4all.nl\nBen Elliston                        bje@air.net.au\nBen Harris                          bjh21@netbsd.org\nBengt Martensson                    bengt@mathematik.uni-Bremen.de\nBenjamin Cutler                     cutlerbc@simla.colostate.edu\nBernard Giroud                      bernard.giroud@creditlyonnais.ch\nBernd Eckenfels                     ecki@debian.org\nBernd Leibing                       bernd.leibing@rz.uni-ulm.de\nBernd Melchers                      melchers@cis.fu-berlin.de\nBernhard Baehr                      bernhard.baehr@gmx.de\nBernhard Gabler                     bernhard@uni-koblenz.de\nBernhard Rosenkraenzer              bero@redhat.de\nBert Deknuydt                       Bert.Deknuydt@esat.kuleuven.ac.be\nBert Wesarg                         bert.wesarg@googlemail.com\nBill Brelsford                      wb@k2di.net\nBill Peters                         peters@gaffel.as.arizona.edu\nBjorn Helgaas                       helgaas@rsn.hp.com\nBob McCracken                       kerouac@ravenet.com\nBranden Robinson                    branden@necrotic.deadbeast.net\nBrendan O'Dea                       bod@compusol.com.au\nBrian Foster                        bfoster@redhat.com\nBrian Kimball                       bfk@footbag.org\nBrian M. Carlson                    sandals@crustytoothpaste.ath.cx\nBrian Silverman                     bsilverman@conceptxdesign.com\nBrian Youmans                       3diff@gnu.org\nBritton Leo Kerin                   fsblk@aurora.uaf.edu\nBruce Robertson                     brucer@theodolite.dyndns.org\nBrynnen Owen                        owen@illinois.edu\nCarl Johnson                        carlj@cjlinux.home.org\nCarl Lowenstein                     cdl@mpl.UCSD.EDU\nCarl Roth                           roth@urs.us\nCarlos Canau                        Carlos.Canau@relay.puug.pt\nCharles Karney                      karney@pppl.gov\nCharles Randall                     crandall@matchlogic.com\nChas. Owens                         chas.owens@gmail.com\nChip Salzenberg                     chip@valinux.com\nChoi Jongu                          zoopi01@gmail.com\nChris Clayton                       chris2553@googlemail.com\nChris Faylor                        cgf@cygnus.com\nChris J. Bednar                     cjb@AdvancedDataSolutions.com\nChris Jones                         cjns1989@gmail.com\nChris Lesniewski                    ctl@mit.edu\nChris Sylvain                       csylvain@umm.edu\nChris Yeo                           cyeo@biking.org\nChristi Alice Scarborough           christi@chiark.greenend.org.uk\nChristian Harkort                   christian.harkort@web.de\nChristian Jullien                   eligis@orange.fr\nChristian Krackowizer               ckrackowiz@std.schuler-ag.com\nChristian Rose                      menthos@menthos.com\nChristian von Roques                roques@pond.sub.org\nChristophe LYON                     christophe.lyon@st.com\nChuck Hedrick                       hedrick@klinzhai.rutgers.edu\nChusslove Illich                    caslav.ilic@gmx.net\nClark Morgan                        cmorgan@aracnet.com\nClement Wang                        clem.wang@overture.com\nColin Plumb                         colin@nyx.net\nCollin Rogowski                     collin@rogowski.de\nCray-Cyber Project                  https://www.cray-cyber.org\nCristian Cadar                      cristic@stanford.edu\nCyril Bouthors                      cyril@bouthors.org\nDale Scheetz                        dwarf@polaris.net\nDameon G. Rogers                    dgr03@uark.edu\nDan Hagerty                         hag@gnu.ai.it.edu\nDan Pascu                           dan@services.iiruc.ro\nDaniel Bergstrom                    noa@melody.se\nDaniel Carpenter                    dansebpub@gmail.com\nDaniel Mach                         dmach@redhat.com\nDaniel P. Berrangé                  berrange@redhat.com\nDaniel Stavrovski                   d@stavrovski.net\nDaniel Tschinder                    daniel.tschinder@project-a.com\nDániel Varga                        danielv@axelero.hu\nDanny Levinson                      danny.levinson@overture.com\nDarrel Francis                      d.francis@cheerful.com\nDarren Salt                         ds@youmustbejoking.demon.co.uk\nDave Beckett                        dajobe@dajobe.org\nDavid Alan Gilbert                  gilbertd@treblig.org\nDavid Diggles                       david.diggles@dnrm.qld.gov.au\nDavid Dyck                          dcd@tc.fluke.COM\nDavid Eisner                        cradle@umd.edu\nDavid Flynn                         dav@chess.plus.com\nDavid Gast                          dgast@csulb.edu\nDavid Godfrey                       dave@delta.demon.co.uk\nDavid Luyer                         david_luyer@pacific.net.au\nDavid Madore                        david.madore@ens.fr\nDavid Malone                        dwmalone@cnri.dit.ie\nDavid Matei                         matei@cs.toronto.edu\nDavid Pinto                         carandraug+dev@gmail.com\nDavide Canova                       kc.canova@gmail.com\nDawson Engler                       engler@stanford.edu\nDean Gaudet                         dean-savannah@arctic.org\nDeepak Goel                         deego@gnufans.org\nDenis Excoffier                     gcc@Denis-Excoffier.org\nDenis McKeon                        dmckeon@swcp.com\nDennis Clarke                       dclarke@blastwave.org\nDennis Henriksen                    opus@flamingo.osrl.dk\nDennis Smit                         ds@nerds-incorporated.org\nDerek Clegg                         dclegg@next.com\nDick Streefland                     dick_streefland@tasking.com\nDirk Lattermann                     dlatt@t-online.de\nDirk-Jan Faber                      djfaber@snow.nl\nDmitry Rutsky                       rutsky@school.ioffe.rssi.ru\nDon Parsons                         dparsons@synapse.kent.edu\nDonni Erpel                         donald@appc11.gsi.de\nDoug Coleman                        coleman@iarc1.ece.utexas.edu\nDoug McLaren                        dougmc@comco.com\nDragos Harabor                      dharabor@us.oracle.com\nDuncan Roe                          duncanr@optimation.com.au\nEdward Schwartz                     edmcman@cmu.edu\nEdzer Pebesma                       Edzer.Pebesma@rivm.nl\nEgmont Koblinger                    egmont@uhulinux.hu\nEirik Fuller                        eirik@hackrat.com\nEivind                              eivindt@multinet.no\nElbert Pol                          elbert.pol@gmail.com\nEldon Stegall                       eldon@eldondev.com\nEli Zaretskii                       eliz@is.elta.co.il\nEmanuel Landeholm                   emanuel.landeholm@gmail.com\nEmile LeBlanc                       leblanc@math.toronto.edu\nEmmanuel Lacour                     elacour@home-dn.net\nEric Backus                         ericb@lsid.hp.com\nEric Bergen                         eric.bergen@gmail.com\nEric G. Miller                      egm2@jps.net\nEric Pemente                        pemente@northpark.edu\nEric S. Raymond                     esr@snark.thyrsus.com\nErik Bennett                        bennett@cvo.oneworld.com\nErik Bernstein                      erik@fscking.org\nErik Corry                          erik@kroete2.freinet.de\nFelix Lee                           flee@teleport.com\nFelix Rauch Valenti                 frauch@cse.unsw.edu.au\nFerdinand                           fw@scenic.mine.nu\nFletcher Mattox                     fletcher@cs.utexas.edu\nFlorent Bayle                       florent@sarcelle.net\nFlorian Schlichting                 fschlich@cis.fu-berlin.de\nFlorin Iucha                        fiucha@hsys.mic.ro\nFrancesco Montorsi                  fr_m@hotmail.com\nFrançois Pinard                     pinard@iro.umontreal.ca\nFrançois Rigault                    rigault.francois@gmail.com\nFrank Adler                         fadler@allesklar.de\nFrank Busse                         f.busse@imperial.ac.uk\nFrank T Lofaro                      ftlofaro@snooks.Egr.UNLV.EDU\nFred Fish                           fnf@ninemoons.com\nFrédéric L. W. Meunier              0@pervalidus.net\nFrederik Eaton                      frederik@caltech.edu\nGabor Z. Papp                       gzp@gzp.org.hu\nGaël Quéri                          gqueri@mail.dotcom.fr\nGalen Hazelwood                     galenh@micron.net\nGary Anderson                       ganderson@clark.net\nGary Johnson                        garyjohn@spk.agilent.com\nGary V. Vaughan                     gary@gnu.org\nGaute Hvoslef Kvalnes               gaute@verdsveven.com\nGeoff Collyer                       geoff at collyer.net\nGeoff Kuenning                      geoff@cs.hmc.edu\nGeoff Odhner                        geoff@franklin.com\nGeoff Whale                         geoffw@cse.unsw.EDU.AU\nGerald Pfeifer                      gerald@pfeifer.com\nGerhard Poul                        gpoul@gnu.org\nGermano Leichsenring                germano@jedi.cs.kobe-u.ac.jp\nGlen Lenker                         glen.lenker@gmail.com\nGlenn Golden                        gdg@zplane.com\nGOTO Masanori                       gotom@debian.or.jp\nGreg Louis                          glouis@dynamicro.on.ca\nGreg McGary                         gkm@gnu.org\nGreg Metcalfe                       metcalfegreg@qwest.net\nGreg Schafer                        gschafer@zip.com.au\nGreg Troxel                         gdt@bbn.com\nGregory Leblanc                     gleblanc@cu-portland.edu\nGuido Leenders                      guido.leenders@invantive.com\nGuntram Blohm                       Extern.Guntram.Blohm@AUDI.DE\nGuochun Shi                         gshi@ncsa.uiuc.edu\nH. J. Lu                            hjl@valinux.com\nHans Ginzel                         hans@matfyz.cz\nHans Lermen                         lermen@fgan.de\nHans Verkuil                        hans@wyst.hobby.nl\nHarald Dunkel                       harald.dunkel@t-online.de\nHarry Liu                           rliu@lek.ugcs.caltech.edu\nHarti Brandt                        brandt@fokus.fraunhofer.de\nHarvey Eneman                       Harvey.Eneman@oracle.com\nHeiko Marr                          h.marr@webmasters.de\nHelen Faulkner                      helen_ml_faulkner@yahoo.co.uk\nHerbert Xu                          herbert@gondor.apana.org.au\nHolger Berger                       hberger@ess.nec.de\nHon-Yin Kok                         hkok@yoda.unl.edu\nHugh Daniel                         hugh@xanadu.com\nIain Calder                         ic56@rogers.com\nIan Bruce                           ian.bruce@myrealbox.com\nIan Jackson                         ijackson@chiark.greenend.org.uk\nIan Kent                            ikent@redhat.com\nIan Lance Taylor                    ian@cygnus.com\nIan Turner                          vectro@pipeline.com\nIida Yosiaki                        iida@gnu.org\nIllia Bobyr                         ibobyr@google.com\nIlya N. Golubev                     gin@mo.msk.ru\nIngo Saitz                          ingo@debian.org\nIvan Labath                         labath3@st.fmph.uniba.sk\nIvo Timmermans                      ivo@debian.org\nJack Howarth                        howarth.mailing.lists@gmail.com\nJacky Fong                          jacky.fong@utoronto.ca\nJames Antill                        jmanti%essex.ac.uk@seralph21.essex.ac.uk\nJames Hunt                          jamesodhunt@hotmail.com\nJames                               james@albion.glarp.com\nJames Lemley                        James.Lemley@acxiom.com\nJames Ralston                       ralston@pobox.com\nJames Sneeringer                    jvs@ocslink.com\nJames Tanis                         jtt@soscorp.com\nJamie Lokier                        jamie@imbolc.ucc.ie\nJamie McClelland                    jm@mayfirst.org\nJan Engelhardt                      jengelh@medozas.de\nJan Fedak                           J.Fedak@sh.cvut.cz\nJan Moringen                        jan.moringen@uni-bielefeld.de\nJanos Farkas                        chexum@shadow.banki.hu\nJan-Pawel Wrozstinski               jpwroz@gmail.com\nJari Aalto                          jari.aalto@cante.net\nJarkko Hietaniemi                   jhi@epsilon.hut.fi\nJarod Wilson                        jwilson@redhat.com\nJason Smith                         jasonmsmith@google.com\nJean Charles Delepine               delepine@u-picardie.fr\nJean-Pierre Tosoni                  jpt.7196@gmail.com\nJeff Moore                          jbm@mordor.com\nJeff Sheinberg                      jeff@bsrd.net\nJens Elkner                         elkner@imsgroup.de\nJens Schmidt                        jms@jsds.hamburg.com\nJeph Cowan                          jeph@ucar.edu\nJeremy Maitin-Shepard               jbms@cmu.edu\nJérémy Magrin                       jeremy.magrin@epitech.eu\nJerome Abela                        abela@hsc.fr\nJérôme Zago                         bug-coreutils-ml@agt-the-walker.net\nJesse Kornblum                      kornblum@usna.edu\nJesse Thilo                         jgt2@eecs.lehigh.edu\nJie Xu                              xuj@iag.net\nJim Blandy                          jimb@cyclic.com\nJim Dennis                          jimd@starshine.org\nJirka Hladky                        jhladky@redhat.com\nJoakim Rosqvist                     dvljrt@cs.umu.se\nJochen Hein                         jochen@jochen.org\nJoe Orton                           joe@manyfish.co.uk\nJoerg Sonnenberger                  joerg@britannica.bec.de\nJoey Hess                           joeyh@debian.org\nJohan Boule                         bohan@bohan.dyndns.org\nJohan Danielsson                    joda@pdc.kth.se\nJohannes Altmanninger               aclopte@gmail.com\nJohn Bley                           jbb6@acpub.duke.edu\nJohn Gatewood Ham                   zappaman@alphabox.compsci.buu.ac.th\nJohn Gotts                          jgotts@umich.edu\nJohn Kendall                        kendall@capps.com\nJohn Kodis                          kodis@acm.org\nJohn Murphy                         jam@philabs.research.philips.com\nJohn Roll                           john@panic.harvard.edu\nJohn Salmon                         johns@mullet.anu.edu.au\nJohn Stanley                        johnstops@verizon.net\nJohn Summerfield                    summer@OS2.ami.com.au\nJon Peatfield                       J.S.Peatfield@damtp.cam.ac.uk\nJoost van Baal                      joostvb@xs4all.nl\nJordi Pujol                         jordipujolp@gmail.com\nJorge Stolfi                        stolfi@ic.unicamp.br\nJoseph D. Wagner                    joe@josephdwagner.info\nJoseph S. Myers                     jsm28@cam.ac.uk\nJosh Triplett                       josh@freedesktop.org\nJoshua Hudson                       joshudson@gmail.com\nJosselin Mouette                    joss@debian.org\nJuan F. Codagnone                   juam@arnet.com.ar\nJuan M. Guerrero                    st001906@hrz1.hrz.tu-darmstadt.de\nJulian Bradfield                    jcb@inf.ed.ac.uk\nJulian Büning                       julian.buening@rwth-aachen.de\nJungshik Shin                       jshin@pantheon.yale.edu\nJuraj Marko                         jmarko@redhat.com\nJürgen Fluk                         louis@dachau.marco.de\nJurriaan                            thunder7@xs4all.nl\nJustin Pryzby                       justinpryzby@users.sourceforge.net\njvogel                              jvogel@linkny.com\nKai Henningsen                      kai@debian.org\nKai-Uwe Rommel                      rommel@informatik.tu-muenchen.de\nKalle Olavi Niemitalo               kon@iki.fi\nKamal Paul Nigam                    Kamal_Paul_Nigam@gs35.sp.cs.cmu.edu\nKarl Eichwalder                     keichwa@gmx.net\nKarl-Michael Schneider              schneide@phil.uni-passau.de\nKarsten Thygesen                    karthy@kom.auc.dk\nKaveh R. Ghazi                      ghazi@caip.rutgers.edu\nKeith M. Briggs                     keith.briggs@bt.com\nKeith Owens                         kaos@audio.apana.org.au\nKeith Thompson                      Keith.S.Thompson@gmail.com\nKen Irving                          ken.irving@alaska.edu\nKen Pizzini                         kenp@halcyon.com\nKevin Mudrick                       kmudrick@healthmarketscience.com\nKirk Kelsey                         kirk.kelsey@0x4b.net\nKjetil Torgrim Homme                kjetilho@ifi.uio.no\nKonrad Wróblewski                   coni@o2.pl\nKristin E Thomas                    kristint@us.ibm.com\nKristoffer Rose                     kris@diku.dk\nLadislav Hagara                     ladislav.hagara@unob.cz\nLarry McVoy                         lm@sgi.com\nLars Hecking                        lhecking@nmrc.ucc.ie\nLeah Q                              eequor@earthlink.net\nLehti Rami                          rammer@cs.tut.fi\nLeonard N. Zubkoff                  lnz@dandelion.com\nLeonardo Milano                     lmilano@udel.edu\nLluís Batlle                        viriketo@gmail.com\nLorne Baker                         lbaker@nitro.avint.net\nLuke Hassell                        lukehassell@yahoo.com\nLuke Kendall                        lukekendall@optushome.com.au\nM. P. Suzuki                        mpsuzuki@hiroshima-u.ac.jp\nMaciej Kwapulinski                  pikpok@univ.gda.pl\nManas Garg                          manas@cygsoft.com\nManfred Hollstein                   manfred@s-direktnet.de\nMarc Boucher                        marc@mbsi.ca\nMarc Haber                          mh+debian-bugs@zugschlus.de\nMarc Lehman                         schmorp@schmorp.de\nMarc Mengel                         mengel@fnal.gov\nMarc Olzheim                        marcolz@stack.nl\nMarcel Böhme                        https://www.comp.nus.edu.sg/~mboehme\nMarco Franzen                       Marco.Franzen@Thyron.com\nMarcus Brinkmann                    https://www.marcus-brinkmann.de\nMarcus Daniels                      marcus@ee.pdx.edu\nMark A. Thomas                      thommark@access.digex.net\nMark Conty                          Mark_Conty@cargill.com\nMark D. Roth                        roth@uiuc.edu\nMark Funkenhauser                   mfunkenhauser@rogers.com\nMark Harris                         mark@monitor.designacc.com\nMark Hewitt                         mhewitt@armature.com\nMark Hounschell                     markh@compro.net\nMark Hubbart                        discord@mac.com\nMark Kettenis                       kettenis@phys.uva.nl\nMark Korenberg                      socketpair@gmail.com\nMark Melahn                         mmelahn@gmail.com\nMark Nudelman                       marknu@flash.net\nMark W. Eichin                      eichin@cygnus.com\nMarkus Demleitner                   msdemlei@auriga.ari.uni-heidelberg.de\nMartin Buck                         martin.buck@ascom.ch\nMartin Gallant                      martyg@goodbit.net\nMartin Hippe                        martin.hippe@schlund.de\nMartin Jacobs                       martin.jacobs@arcor.de\nMartin                              martin@dresden.nacamar.de\nMartin Michlmayr                    tbm@cyrius.com\nMartin Mitchell                     martin@debian.org\nMartin P.J. Zinser                  zinser@decus.de\nMarty Leisner                       leisner@sdsp.mc.xerox.com\nMasami Takikawa                     takikawm@CS.ORST.EDU\nMate Wierdl                         mw@moni.msci.memphis.edu\nMatej Vela                          mvela@public.srce.hr\nMatheus Afonso Martins Moreira      matheus.a.m.moreira@gmail.com\nMathias Brodala                     info@noctus.net\nMatias A. Fonzo                     selk@dragora.org\nMatt Kraai                          kraai@ftbfs.org\nMatt McCutchen                      matt@mattmccutchen.net\nMatt Perry                          matt@primefactor.com\nMatt Pham                           mattvpham@gmail.com\nMatt Schalit                        mschalit@pacbell.net\nMatt Swift                          swift@alum.mit.edu\nMatthew Arnison                     maffew@cat.org.au\nMatthew Braun                       matthew@ans.net\nMatthew Clarke                      Matthew_Clarke@mindlink.bc.ca\nMatthew M. Boedicker                matthewm@boedicker.org\nMatthew Pfeiffer                    spferical@gmail.com\nMatthew S. Levine                   mslevine@theory.lcs.mit.edu\nMatthew Smith                       matts@bluesguitar.org\nMatthew Swift                       swift@alum.mit.edu\nMatthias Urlichs                    smurf@noris.de\nMatti Aarnio                        matti.aarnio@zmailer.org\nMattias Wadenstein                  maswan@acc.umu.se\nMax Chang                           maxchang@ucla.edu\nMeelis Roos                         mroos@tartu.cyber.ee\nMichael Bacarella                   mbac@netgraft.com\nMichael Deutschmann                 michael@talamasca.ocis.net\nMichael Elizabeth Chastain          mec.gnu@mindspring.com\nMichael Gaughen                     mgaughen@polyserve.com\nMichael Hasselberg                  mikelh@zonta.ping.de\nMichael Hohn                        hohn@math.utah.edu\nMichael J. Croghan                  mcroghan@usatoday.com\nMichael J. Daniel                   michael.j.daniel@comcast.net\nMichael McFarland                   sidlon@yahoo.com\nMichael McLagan                     mmclagan@invlogic.com\nMichael                             michael@aplatform.com\nMichael ???                         michael@roka.net\nMichael Mol                         mikemol@gmail.com\nMichael Piefel                      piefel@informatik.hu-berlin.de\nMichael Price                       mprice@atl.lmco.com\nMichael Steffens                    michael.steffens@s.netic.de\nMichael Stummvoll                   michael@stummi.org\nMichael Stutz                       stutz@dsl.org\nMichael van Elst                    mlelstv@dev.de.cw.net\nMichael Veksler                     mveksler@techunix.technion.ac.il\nMichail Litvak                      mci@owl.openwall.com\nMichal Politowski                   mpol@charybda.icm.edu.pl\nMichal Svec                         msvec@suse.cz\nMichal Trunecka                     mtruneck@redhat.com\nMichel Robitaille                   robitail@IRO.UMontreal.CA\nMichiel Bacchiani                   bacchian@raven.bu.edu\nMike Castle                         dalgoda@ix.netcom.com\nMike Coleman                        mkc@mathdogs.com\nMike Jetzer                         mjetzer@mke.catalystwms.com\nMikko Tuumanen                      m@sorvankyla.yok.utu.fi\nMikulas Patocka                     mikulas@artax.karlin.mff.cuni.cz\nMiles Bader                         miles@gnu.ai.mit.edu\nMinh Tran-Le                        tranle@intellicorp.com\nMorten Welinder                     terra@diku.dk\nNao Nishijima                       nao.nishijima.xt@hitachi.com\nNeal H Walfield                     neal@cs.uml.edu\nNeil F. Brown                       neilb@suse.de\nNelson H. F. Beebe                  beebe@math.utah.edu\nNick Estes                          debian@nickstoys.com\nNick Graham                         nick.d.graham@gmail.com\nNick Lawes                          nlawes@silverplatter.com\nNickolai Zeldovich                  nickolai@cs.stanford.edu\nNicolas François                    nicolas.francois@centraliens.net\nNiklas Edmundsson                   nikke@acc.umu.se\nNikola Milutinovic                  Nikola.Milutinovic@ev.co.yu\nNikolaus Rath                       Nikolaus@rath.org\nNikos Mavrogiannopoulos             nmav@redhat.com\nNima Nikzad                         nnikzad@ucla.edu\nNoah Friedman                       friedman@splode.com\nNoel Cragg                          noel@red-bean.com\nNorbert Kiesel                      nkiesel@tbdnetworks.com\nNorihiro Kamae                      norihiro@nagater.net\nOlatunji Oluwabukunmi Ruwase        tjruwase@stanford.edu\nOlav Morkrid                        olav@funcom.com\nOle Laursen                         olau@hardworking.dk\nOliver Kiddle                       okiddle@yahoo.co.uk\nOlivier Fourdan                     ofourdan@redhat.com\nØrn E. Hansen                       oehansen@daimi.aau.dk\nOskar Liljeblad                     osk@hem.passagen.se\nOtavio Salvador                     otavio@ossystems.com.br\nPatrick Mauritz                     oxygene@studentenbude.ath.cx\nPaul D. Smith                       psmith@gnu.org\nPaul Ghaleb                         paul.ghaleb@st.com\nPaul Jarc                           prj@po.cwru.edu\nPaul Marinescu                      paul.marinescu@imperial.ac.uk\nPaul Nevai                          nevai@ops.mps.ohio-state.edu\nPaul Sauer                          paul@alexa.com\nPaul Slootman                       paul@debian.org\nPaul Townsend                       aab@purdue.edu\nPaul Worrall                        paul@basilisk.uklinux.net\nPawel Prokop                        pablo@wizard.ae.krakow.pl\nPeng Yu                             pengyu.ut@gmail.com\nPer Cederqvist                      ceder@lysator.liu.se\nPer Kristian Hove                   perhov@math.ntnu.no\nPer Starbäck                        starback@stp.lingfil.uu.se\nPeter Breitenlohner                 peb@mppmu.mpg.de\nPeter Dyballa                       peter_dyballa@web.de\nPeter Eriksson                      peter@ifm.liu.se\nPeter Evans                         peter@ixp.jp\nPeter Horst                         peter@ointment.org\nPeter Moulder                       reiter@netspace.net.au\nPeter Samuelson                     psamuels@sampo.creighton.edu\nPeter Seebach                       seebs@taniemarie.solon.com\nPetr Pisar                          petr.pisar@atlas.cz\nPetr Uzel                           petr.uzel@suse.cz\nPetter Reinholdtsen                 pere@hungry.com\nPhelippe Neveu                      pneveu@pcigeomatics.com\nPhil Richards                       phil.richards@vf.vodafone.co.uk\nPhilipp Gortan                      gortan@gmail.com\nPhilippe De Muyter                  phdm@macqel.be\nPhilippe Schnoebelen                Philippe.Schnoebelen@imag.fr\nPhillip Jones                       mouse@datastacks.com\nPiergiorgio Sartor                  sartor@sony.de\nPieter Bowman                       bowman@math.utah.edu\nPiotr Gackiewicz                    gacek@intertele.pl\nPiotr Kwapulinski                   kwap@univ.gda.pl\nPrashant TR                         tr@eth.net\nPriit Jõerüüt                       jemm4jemm@yahoo.com\nPrimoz PETERLIN                     primozz.peterlin@gmail.com\nRaimonds Miltins                    raimonds@pro-9.com\nRainer Orth                         ro@TechFak.Uni-Bielefeld.DE\nRalf W. Stephan                     stephan@tmt.de\nRalph Loader                        loader@maths.ox.ac.uk\nRaul Miller                         moth@magenta.com\nRaúl Núñez de Arenas Coronado       raul@pleyades.net\nRich Burridge                       rich.burridge@oracle.com\nRichard A Downing                   richard.downing@bcs.org.uk\nRichard Braakman                    dark@xs4all.nl\nRichard Dawe                        rich@phekda.freeserve.co.uk\nRichard J. Rauenzahn                rrauenza@hairball.cup.hp.com\nRichard Neill                       rn214@hermes.cam.ac.uk\nRichard Sharman                     rsharman@magmacom.com\nRick Sladkey                        jrs@world.std.com\nRick Stanley                        rstanley@rsiny.com\nRik Faith                           faith@cs.unc.edu\nRisto Kankkunen                     kankkune@lingsoft.fi\nRob Wortman                         wyrm@haell.com\nRobert H. de Vries                  robert@and.nl\nRobert Lindgren                     robert@orcafat.com\nRobert Millan                       zeratul2@wanadoo.es\nRobert Schwebel                     r.schwebel@pengutronix.de\nRobin H. Johnson                    robbat2@gentoo.org\nRogier Wolff                        R.E.Wolff@BitWizard.nl\nRoland Huebner                      ro-huebner@gmx.de\nRoland Turner                       raz.tah.bet@raz.cx\nRonald F. Guilmette                 rfg@netcom.com\nRoss Alexander                      r.alexander@auckland.ac.nz\nRoss Paterson                       rap@doc.ic.ac.uk\nRoss Ridge                          rridge@calum.csclub.uwaterloo.ca\nRudolf Kastl                        rkastl@redhat.com\nSahil Amoli                         sahilamoli@gmail.com\nSami Farin                          sfarin@ratol.fi\nSamuel Neves                        sneves@dei.uc.pt\nSamuel Thibault                     samuel.thibault@ens-lyon.org\nSamuli Karkkainen                   Samuli.Karkkainen@hut.fi\nSander van Malssen                  svm@kozmix.ow.nl\nSantiago Vila Doncel                sanvila@unex.es\nSavochkin Andrey Vladimirovich      saw@msu.ru\nScott Harrison                      scott.gnu.2009@scottrix.co.uk\nScott Lurndal                       slurn@griffin.engr.sgi.com\nSébastien Maret                     smaret@umich.edu\nSergei Steshenko                    sergstesh@yahoo.com\nSergey Vlasov                       vsu@altlinux.org\nShing-Shong Shei                    shei@cs.indiana.edu\nSoeren Sonnenburg                   sonnenburg@informatik.hu-berlin.de\nSolar Designer                      solar@owl.openwall.com\nStanislav Ievlev                    inger@altlinux.ru\nStavros Passas                      stabat@ics.forth.gr\nStefan Vargyas                      stvar@yahoo.com\nStéphane Chazelas                   Stephane_CHAZELAS@yahoo.fr\nStephen Depooter                    sbdep@myrealbox.com\nStephen Eglen                       eglen@pcg.wustl.edu\nStephen Gildea                      gildea@stop.mail-abuse.org\nStephen Shirley                     kormat@gmail.com\nStephen Smoogen                     smooge@mindspring.com\nSteve McConnel                      steve@acadcomp.sil.org\nSteve McIntyre                      steve@einval.com\nSteve Ward                          planet36@gmail.com\nSteven Drake                        sbd@users.sourceforge.net\nSteven G. Johnson                   stevenj@alum.mit.edu\nSteven Mocking                      ufo@quicknet.nl\nSteven Parkes                       smparkes@smparkes.net\nSteven P Watson                     steven@magelico.net\nSteven Schveighoffer                schveiguy@yahoo.com\nStuart Citrin                       ctrn3e8@gmail.com\nStuart Kemp                         skemp@peter.bmc.com\nStuart Shelton                      stuart@shelton.me\nSven Breuner                        sven.breuner@itwm.fraunhofer.de\nSzakacsits Szabolcs                 szaka@sienet.hu\nTadayoshi Funaba                    tadf@kt.rim.or.jp\nTAKAI Kousuke                       takai@vlsi.kuee.kyoto-u.ac.jp\nThe Wanderer                        inverseparadox@comcast.net\nTheodore Ts'o                       tytso@rsts-11.mit.edu\nThomas Bushnell                     thomas@gnu.ai.mit.edu\nThomas Goerlich                     thomas@schnappmatik.de\nThomas Hood                         jdthood@yahoo.co.uk\nThomas Luzat                        thomas@luzat.com\nThomas M.Ott                        thmo-13@gmx.de\nThomas Quinot                       thomas@Cuivre.FR.EU.ORG\nThomas Schwinge                     tschwinge@gnu.org\nThomas Wolff                        mined@towo.net\nTim J. Robbins                      tjr@FreeBSD.org\nTim Mooney                          mooney@dogbert.cc.ndsu.NoDak.edu\nTim Ryan                            Tim_Ryan@bnz.co.nz\nTim Smithers                        mouse@dmouse.com.au\nTim Underwood                       timunderwood@gmail.com\nTim Waugh                           twaugh@redhat\nToby Peterson                       toby@opendarwin.org\nTodd A. Jacobs                      tjacobs@codegnome.org\nTom Fitzhenry                       tom@tom-fitzhenry.me.uk\nTom Haynes                          thomas@netapp.com\nTom Quinn                           trq@dionysos.thphys.ox.ac.uk\nTomas Pospisek                      tpo@sourcepole.ch\nTommi Kyntola                       tkyntola@cc.hut.fi\nTon Hospel                          thospel@mail.dma.be\nTon Nijkes                          ton@murphy.nl\nTony Kocurko                        akocurko@mun.ca\nTony Leneis                         tony@plaza.ds.adp.com\nTony Robinson                       ajr@eng.cam.ac.uk\nToomas Soome                        Toomas.Soome@Elion.ee\nToralf Förster                      toralf.foerster@gmx.de\nTorbjörn Lindgren                   tl@funcom.no\nTorsten Landschoff                  torsten@pclab.ifg.uni-kiel.de\nTravis Gummels                      tgummels@redhat.com\nTristan Miller                      psychonaut@nothingisreal.com\nTzvi Rotshtein                      tzvi.ro@gmail.com\nUlrich Drepper                      drepper@gnu.org\nUlrich Hermisson                    ulrich_hermisson@hotmail.com\nUrs Thuermann                       urs@isnogud.escape.de\nUwe H. Steinfeld                    usteinfeld@gmx.net\nVesselin Atanasov                   vesselin@bgnet.bg\nVin Shelton                         acs@alumni.princeton.edu\nVineet Chadha                       chadha@acis.ufl.edu\nVitali Lovich                       vlovich@gmail.com\nVitaly A. Ostanin                   vyt@altlinux.org\nVito Caputo                         vcaputo@pengaru.com\nVlada Macek                         tuttle@bbs.fsik.cvut.cz\nVolker Borchert                     bt@teknon.de\nVolker Paul                         vpaul@dohle.com\nWartan Hachaturow                   wart@tepkom.ru\nWayne Stewart                       wstewa@atl.com\nWenjun Zheng                        zwj@yahoo.com\nWerner Almesberger                  Werner.Almesberger@epfl.ch\nWichert Akkerman                    wichert@cistron.nl\nWill Edgington                      wedgingt@acm.org\nWilliam Bader                       william@nscs.fast.net\nWilliam Dowling                     will@franklin.com\nWilliam Lewis                       wiml@omnigroup.com\nwiregauze                           wiregauze@yahoo.com\nWis Macomson                        wis.macomson@intel.com\nWojciech Purczynski                 cliph@isec.pl\nWolfram Kleff                       kleff@cs.uni-bonn.de\nWon-kyu Park                        wkpark@chem.skku.ac.kr\nXu Zhongxing                        xu_zhong_xing@163.com\nYang Ren                            ryang@redhat.com\nYanko Kaneti                        yaneti@declera.com\nYann Dirson                         dirson@debian.org\nYoungjun Song                       mastojun@gmail.com\nYutaka Amanai                       yasai-itame1942@jade.plala.or.jp\n\n;; Local Variables:\n;; coding: utf-8\n;; End:\n"
        },
        {
          "name": "THANKStt.in",
          "type": "blob",
          "size": 0.1181640625,
          "content": "The following teams have translated the many diagnostics of this\npackage into many different languages.  Thank you!\n\n---\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 6.484375,
          "content": "If you're interested in helping, here are some tasks that we've considered\nover the years.  Beware: some are quite old and no longer valid.  To avoid\nwasting your time by duplicating work or by working on a task that is no\nlonger pertinent, please search the mailing list and post your intent\nbefore embarking on a big project.\n\n==================================================\nModify chmod so that it does not change an inode's st_ctime\n  when the selected operation would have no other effect.\n  First suggested by Hans Ecke <https://hans.ecke.ws> in\n    https://lists.gnu.org/r/bug-coreutils/2004-09/msg00145.html\n  Discussed more recently on <https://bugs.debian.org/497514>.\n\ndocument the following in coreutils.texi:\n  [\n  pinky\n\nSuggestion from Paul Eggert:\n  More generally, there's not that much use for imaxtostr nowadays,\n  since the inttypes module and newer versions of gettext allow things\n  like _(\"truncating %s at %jd bytes\") to work portably.\n  I suspect that (if someone cares to take the time) we can remove\n  all instances of imaxtostr and umaxtostr in coreutils and gnulib.\n\ncp --recursive: use fts and *at functions to perform directory traversals\n  in source and destination hierarchy rather than forming full file names.\n  The latter (current) approach fails unnecessarily when the names\n  become very long, and requires space and time that is quadratic in the\n  depth of the hierarchy.  [Bo Borgerson is working on this]\n\nprintf:\n  Now that gnulib supports *printf(\"%a\"), import one of the\n  *printf-posix modules so that printf(1) will support %a even on\n  platforms where the native *printf(3) is deficient.\n  Suggestion from Eric Blake.\n\nconsider adding some implementation of the \"col\" utility\n  Suggested by Karl Berry.\n\ndoc/coreutils.texi:\n  Address this comment: FIXME: mv's behavior in this case is system-dependent\n  Better still: fix the code so it's *not* system-dependent.\n\nls: add --format=FORMAT option that controls how each line is printed.\n\ncopy.c: Address the FIXME-maybe comment in copy_internal.\nAnd once that's done, add an exclusion so that 'cp --link'\nno longer incurs the overhead of saving src. dev/ino and dest. filename\nin the hash table.\n\nWrite an autoconf test to work around build failure in HPUX's 64-bit mode.\nSee notes in README-install -- and remove them once there's a work-around.\n\nIntegrate use of sendfile, suggested here:\n  https://lists.gnu.org/r/bug-fileutils/2003-03/msg00030.html\nI don't plan to do that, since a few tests demonstrate no significant benefit.\n\nprintf: consider adapting builtins/printf.def from bash\n\ntail: don't use xlseek; it *exits*.\n  Instead, maybe use a macro and return nonzero.\n\ntr: support nontrivial equivalence classes, e.g. [=e=] with LC_COLLATE=fr_FR\n\nlib/strftime.c: Since %N is the only format that we need but that\n  glibc's strftime doesn't support, consider using a wrapper that\n  would expand /%(-_)?\\d*N/ to the desired string and then pass the\n  resulting string to glibc's strftime.\n\nsort: Investigate better sorting algorithms; see Knuth vol. 3.\n\n  We tried list merge sort, but it was about 50% slower than the\n  recursive algorithm currently used by sortlines, and it used more\n  comparisons.  We're not sure why this was, as the theory suggests it\n  should do fewer comparisons, so perhaps this should be revisited.\n  List merge sort was implemented in the style of Knuth algorithm\n  5.2.4L, with the optimization suggested by exercise 5.2.4-22.  The\n  test case was 140,213,394 bytes, 426,4424 lines, text taken from the\n  GCC 3.3 distribution, sort.c compiled with GCC 2.95.4 and running on\n  Debian 3.0r1 GNU/Linux, 2.4GHz Pentium 4, single pass with no\n  temporary files and plenty of RAM.\n\n  Since comparisons seem to be the bottleneck, perhaps the best\n  algorithm to try next should be merge insertion.  See Knuth section\n  5.3.1, who credits Lester Ford, Jr. and Selmer Johnson, American\n  Mathematical Monthly 66 (1959), 387-389.\n\nshred: Update shred as described here to conform to DoD 5220 rules:\nhttps://lists.gnu.org/r/bug-coreutils/2007-05/msg00075.html\n\nRemove suspicious uses of alloca (ones that may allocate more than\n   about 4k)\n\nImprove test coverage.\n  See HACKING for instructions on generating an html test coverage report.\n  Find a program that has poor coverage and improve.\n\nChanges expected to go in, someday.\n======================================\n\n  dd patch from Olivier Delhomme\n\n  test/mv/*: clean up $other_partition_tmpdir in all cases\n\n  ls: when both -l and --dereference-command-line-symlink-to-dir are\n  specified, consider whether to let the latter select whether to\n  dereference command line symlinks to directories.  Since -l has\n  an implicit --NO-dereference-command-line-symlink-to-dir meaning.\n  Pointed out by Karl Berry.\n\n  Pending copyright papers:\n  ------------------------\n  getpwnam from Bruce Korb\n\n  pb (progress bar) from Miika Pekkarinen\n\n  ------------------------------\n\nRemove long-deprecated options.  Search case-insensitive for\n'deprecated' and 'remove in '.  Automate this.\n\nAdd a distcheck-time test to ensure that every distributed\nfile is either read-only(indicating generated) or is\nversion-controlled and up to date.\n\nremove all uses of the 'register' keyword: Done.  add a maint.mk rule\n  for this, too.\n\nremove or adjust chown's --changes option, since it\n  can't always do what it currently says it does.\n\nSupport arbitrary-precision arithmetic in those tools for which it\nmakes sense.  Factor and expr already support this via libgmp.\nThe \"test\" program is covered via its string-based comparison of\nintegers.  To be converted: seq.\n\nAdapt tools like wc, tr, fmt, etc. (most of the textutils) to be\n  multibyte aware.  The problem is that I want to avoid duplicating\n  significant blocks of logic, yet I also want to incur only minimal\n  (preferably 'no') cost when operating in single-byte mode.\n\npr's use of nstrftime can make it malloc a very large (up to SIZE_MAX) buffer\n\n-----\n\nCopyright (C) 2002-2025 Free Software Foundation, Inc.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "bootstrap",
          "type": "blob",
          "size": 54.9150390625,
          "content": "#! /bin/sh\n# DO NOT EDIT! GENERATED AUTOMATICALLY!\n\n# Bootstrap this package from checked-out sources.\n\nscriptversion=2024-07-04.10; # UTC\n\n# Copyright (C) 2003-2025 Free Software Foundation, Inc.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n# Originally written by Paul Eggert.  The canonical version of this\n# script is maintained as top/bootstrap in gnulib. However, to be\n# useful to your package, you should place a copy of it under version\n# control in the top-level directory of your package.  The intent is\n# that all customization can be done with a bootstrap.conf file also\n# maintained in your version control; gnulib comes with a template\n# build-aux/bootstrap.conf to get you started.\n\n# Please report bugs or propose patches to bug-gnulib@gnu.org.\n\nme=\"$0\"\nmedir=`dirname \"$me\"`\n\n# Read the function library and the configuration.\n\n# A library of shell functions for autopull.sh, autogen.sh, and bootstrap.\n\nscriptlibversion=2024-11-12.21; # UTC\n\n# Copyright (C) 2003-2025 Free Software Foundation, Inc.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n# Originally written by Paul Eggert.  The canonical version of this\n# script is maintained as top/bootstrap-funclib.sh in gnulib.  However,\n# to be useful to your package, you should place a copy of it under\n# version control in the top-level directory of your package.  The\n# intent is that all customization can be done with a bootstrap.conf\n# file also maintained in your version control; gnulib comes with a\n# template build-aux/bootstrap.conf to get you started.\n\nnl='\n'\n\n# Ensure file names are sorted consistently across platforms.\nLC_ALL=C\nexport LC_ALL\n\n# Honor $PERL, but work even if there is none.\nPERL=\"${PERL-perl}\"\n\ndefault_gnulib_url=https://git.savannah.gnu.org/git/gnulib.git\n\n# Copyright year, for the --version output.\ncopyright_year=`echo \"$scriptlibversion\" | sed -e 's/[^0-9].*//'`\ncopyright=\"Copyright (C) ${copyright_year} Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\"\n\n# warnf_ FORMAT-STRING ARG1...\nwarnf_ ()\n{\n  warnf_format_=$1\n  shift\n  nl='\n'\n  case $* in\n    *$nl*) me_=$(printf \"$me\"|tr \"$nl|\" '??')\n       printf \"$warnf_format_\" \"$@\" | sed \"s|^|$me_: |\" ;;\n    *) printf \"$me: $warnf_format_\" \"$@\" ;;\n  esac >&2\n}\n\n# warn_ WORD1...\nwarn_ ()\n{\n  # If IFS does not start with ' ', set it and emit the warning in a subshell.\n  case $IFS in\n    ' '*) warnf_ '%s\\n' \"$*\";;\n    *)    (IFS=' '; warn_ \"$@\");;\n  esac\n}\n\n# die WORD1...\ndie() { warn_ \"$@\"; exit 1; }\n\n# ------------------------------ Configuration. ------------------------------\n\n# Directory that contains package-specific gnulib modules and/or overrides.\nlocal_gl_dir=gl\n\n# Name of the Makefile.am\n# XXX Not used.\ngnulib_mk=gnulib.mk\n\n# List of gnulib modules needed.\ngnulib_modules=\n\n# Any gnulib files needed that are not in modules.\ngnulib_files=\n\n# A function to be called for each unrecognized option.  Returns 0 if\n# the option in $1 has been processed by the function.  Returns 1 if\n# the option has not been processed by the function.  Override it via\n# your own definition in bootstrap.conf\nbootstrap_option_hook() { return 1; }\n\n# A function to be called in order to print the --help information\n# corresponding to user-defined command-line options.\nbootstrap_print_option_usage_hook() { :; }\n\n# A function to be called at the end of autopull.sh.\n# Override it via your own definition in bootstrap.conf.\nbootstrap_post_pull_hook() { :; }\n\n# A function to be called right after gnulib-tool is run.\n# Override it via your own definition in bootstrap.conf.\nbootstrap_post_import_hook() { :; }\n\n# A function to be called after everything else in this script.\n# Override it via your own definition in bootstrap.conf.\nbootstrap_epilogue() { :; }\n\n# The command to download all .po files for a specified domain into a\n# specified directory.  Fill in the first %s with the destination\n# directory and the second with the domain name.\npo_download_command_format=\\\n\"wget --mirror --level=1 -nd -nv -A.po -P '%s' \\\n https://translationproject.org/latest/%s/\"\n\n# Prefer a non-empty tarname (4th argument of AC_INIT if given), else\n# fall back to the package name (1st argument with munging).\nextract_package_name='\n  /^AC_INIT(\\[*/{\n     s///\n     /^[^,]*,[^,]*,[^,]*,[ []*\\([^][ ,)]\\)/{\n       s//\\1/\n       s/[],)].*//\n       p\n       q\n     }\n     s/[],)].*//\n     s/^GNU //\n     y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/\n     s/[^abcdefghijklmnopqrstuvwxyz0123456789_]/-/g\n     p\n  }\n'\npackage=$(${AUTOCONF:-autoconf} --trace AC_INIT:\\$4 configure.ac 2>/dev/null)\nif test -z \"$package\"; then\n  package=$(sed -n \"$extract_package_name\" configure.ac) \\\n      || die 'cannot find package name in configure.ac'\nfi\ngnulib_name=lib$package\n\nbuild_aux=build-aux\nsource_base=lib\nm4_base=m4\ndoc_base=doc\ntests_base=tests\ngnulib_extra_files=\"\n        build-aux/install-sh\n        build-aux/mdate-sh\n        build-aux/texinfo.tex\n        build-aux/depcomp\n        build-aux/config.guess\n        build-aux/config.sub\n        doc/INSTALL\n\"\n\n# Additional gnulib-tool options to use.  Use \"\\newline\" to break lines.\ngnulib_tool_option_extras=\n\n# Other locale categories that need message catalogs.\nEXTRA_LOCALE_CATEGORIES=\n\n# Additional xgettext options to use.  Use \"\\\\\\newline\" to break lines.\nXGETTEXT_OPTIONS='\\\\\\\n --flag=_:1:pass-c-format\\\\\\\n --flag=N_:1:pass-c-format\\\\\\\n --flag=error:3:c-format --flag=error_at_line:5:c-format\\\\\\\n'\n\n# Package bug report address and copyright holder for gettext files\nCOPYRIGHT_HOLDER='Free Software Foundation, Inc.'\nMSGID_BUGS_ADDRESS=bug-$package@gnu.org\n\n# Files we don't want to import.\n# XXX Not used.\nexcluded_files=\n\n# File that should exist in the top directory of a checked out hierarchy,\n# but not in a distribution tarball.\ncheckout_only_file=README-hacking\n\n# Set this to '.cvsignore .gitignore' in bootstrap.conf if you want\n# those files to be generated in directories like lib/, m4/, and po/.\n# Or set it to 'auto' to make this script select which to use based\n# on which version control system (if any) is used in the source directory.\nvc_ignore=auto\n\n# Set this to true in bootstrap.conf to enable --bootstrap-sync by\n# default.\nbootstrap_sync=false\n\n# Override the default configuration, if necessary.\n# Make sure that bootstrap.conf is sourced from the current directory\n# if we were invoked as \"sh bootstrap\".\nconffile=`dirname \"$me\"`/bootstrap.conf\ntest -r \"$conffile\" && . \"$conffile\"\n\n# ------------------------- Build-time prerequisites -------------------------\n\ncheck_exists() {\n  if test \"$1\" = \"--verbose\"; then\n    ($2 --version </dev/null) >/dev/null 2>&1\n    if test $? -ge 126; then\n      # If not found, run with diagnostics as one may be\n      # presented with env variables to set to find the right version\n      ($2 --version </dev/null)\n    fi\n  else\n    ($1 --version </dev/null) >/dev/null 2>&1\n  fi\n\n  test $? -lt 126\n}\n\n# Note this deviates from the version comparison in automake\n# in that it treats 1.5 < 1.5.0, and treats 1.4.4a < 1.4-p3a\n# but this should suffice as we won't be specifying old\n# version formats or redundant trailing .0 in bootstrap.conf.\n# If we did want full compatibility then we should probably\n# use m4_version_compare from autoconf.\nsort_ver() { # sort -V is not generally available\n  ver1=\"$1\"\n  ver2=\"$2\"\n\n  # split on '.' and compare each component\n  i=1\n  while : ; do\n    p1=$(echo \"$ver1\" | cut -d. -f$i)\n    p2=$(echo \"$ver2\" | cut -d. -f$i)\n    if [ ! \"$p1\" ]; then\n      echo \"$1 $2\"\n      break\n    elif [ ! \"$p2\" ]; then\n      echo \"$2 $1\"\n      break\n    elif [ ! \"$p1\" = \"$p2\" ]; then\n      if [ \"$p1\" -gt \"$p2\" ] 2>/dev/null; then # numeric comparison\n        echo \"$2 $1\"\n      elif [ \"$p2\" -gt \"$p1\" ] 2>/dev/null; then # numeric comparison\n        echo \"$1 $2\"\n      else # numeric, then lexicographic comparison\n        lp=$(printf \"%s\\n%s\\n\" \"$p1\" \"$p2\" | LANG=C sort -n | tail -n1)\n        if [ \"$lp\" = \"$p2\" ]; then\n          echo \"$1 $2\"\n        else\n          echo \"$2 $1\"\n        fi\n      fi\n      break\n    fi\n    i=$(($i+1))\n  done\n}\n\nget_version_sed='\n# Move version to start of line.\ns/.*[v ]\\([0-9]\\)/\\1/\n\n# Skip lines that do not start with version.\n/^[0-9]/!d\n\n# Remove characters after the version.\ns/[^.a-z0-9-].*//\n\n# The first component must be digits only.\ns/^\\([0-9]*\\)[a-z-].*/\\1/\n\n#the following essentially does s/5.005/5.5/\ns/\\.0*\\([1-9]\\)/.\\1/g\np\nq'\n\nget_version() {\n  app=$1\n\n  $app --version >/dev/null 2>&1 || { $app --version; return 1; }\n\n  $app --version 2>&1 | sed -n \"$get_version_sed\"\n}\n\ncheck_versions() {\n  ret=0\n\n  while read app req_ver; do\n    # We only need libtoolize from the libtool package.\n    if test \"$app\" = libtool; then\n      app=libtoolize\n    fi\n    # Exempt git if git is not needed.\n    if test \"$app\" = git; then\n      $check_git || continue\n    fi\n    # Honor $APP variables ($TAR, $AUTOCONF, etc.)\n    appvar=$(echo $app | LC_ALL=C tr '[a-z]-' '[A-Z]_')\n    test \"$appvar\" = TAR && appvar=AMTAR\n    case $appvar in\n        GZIP) ;; # Do not use $GZIP:  it contains gzip options.\n        PERL::*) ;; # Keep perl modules as-is\n        *) eval \"app=\\${$appvar-$app}\" ;;\n    esac\n\n    # Handle the still-experimental Automake-NG programs specially.\n    # They remain named as the mainstream Automake programs (\"automake\",\n    # and \"aclocal\") to avoid gratuitous incompatibilities with\n    # preexisting usages (by, say, autoreconf, or custom autogen.sh\n    # scripts), but correctly identify themselves (as being part of\n    # \"GNU automake-ng\") when asked their version.\n    case $app in\n      automake-ng|aclocal-ng)\n        app=${app%-ng}\n        ($app --version | grep '(GNU automake-ng)') >/dev/null 2>&1 || {\n          warn_ \"Error: '$app' not found or not from Automake-NG\"\n          ret=1\n          continue\n        } ;;\n      # Another check is for perl modules.  These can be written as\n      # e.g. perl::XML::XPath in case of XML::XPath module, etc.\n      perl::*)\n        # Extract module name\n        app=\"${app#perl::}\"\n        if ! $PERL -m\"$app\" -e 'exit 0' >/dev/null 2>&1; then\n          warn_ \"Error: perl module '$app' not found\"\n          ret=1\n        fi\n        continue\n        ;;\n    esac\n    if [ \"$req_ver\" = \"-\" ]; then\n      # Merely require app to exist; not all prereq apps are well-behaved\n      # so we have to rely on $? rather than get_version.\n      if ! check_exists --verbose $app; then\n        warn_ \"Error: '$app' not found\"\n        ret=1\n      fi\n    else\n      # Require app to produce a new enough version string.\n      inst_ver=$(get_version $app)\n      if [ ! \"$inst_ver\" ]; then\n        warn_ \"Error: '$app' not found\"\n        ret=1\n      else\n        latest_ver=$(sort_ver $req_ver $inst_ver | cut -d' ' -f2)\n        if [ ! \"$latest_ver\" = \"$inst_ver\" ]; then\n          warnf_ '%s\\n'                                        \\\n              \"Error: '$app' version == $inst_ver is too old\"  \\\n              \"       '$app' version >= $req_ver is required\"\n          ret=1\n        fi\n      fi\n    fi\n  done\n\n  return $ret\n}\n\nprint_versions() {\n  echo \"Program    Min_version\"\n  echo \"----------------------\"\n  printf %s \"$buildreq\"\n  echo \"----------------------\"\n  # can't depend on column -t\n}\n\n# check_build_prerequisites check_git\ncheck_build_prerequisites()\n{\n  check_git=\"$1\"\n\n  # gnulib-tool requires at least automake and autoconf.\n  # If either is not listed, add it (with minimum version) as a prerequisite.\n  case $buildreq in\n    *automake*) ;;\n    *) buildreq=\"automake 1.9\n$buildreq\" ;;\n  esac\n  case $buildreq in\n    *autoconf*) ;;\n    *) buildreq=\"autoconf 2.59\n$buildreq\" ;;\n  esac\n\n  # When we can deduce that gnulib-tool will require patch,\n  # and when patch is not already listed as a prerequisite, add it, too.\n  if test -d \"$local_gl_dir\" \\\n     && ! find \"$local_gl_dir\" -name '*.diff' -exec false {} +; then\n    case $buildreq in\n      *patch*) ;;\n      *) buildreq=\"patch -\n$buildreq\" ;;\n    esac\n  fi\n\n  if ! printf '%s' \"$buildreq\" | check_versions; then\n    echo >&2\n    if test -f README-prereq; then\n      die \"See README-prereq for how to get the prerequisite programs\"\n    else\n      die \"Please install the prerequisite programs\"\n    fi\n  fi\n\n  # Warn the user if autom4te appears to be broken; this causes known\n  # issues with at least gettext 0.18.3.\n  probe=$(echo 'm4_quote([hi])' | autom4te -l M4sugar -t 'm4_quote:$%' -)\n  if test \"x$probe\" != xhi; then\n    warn_ \"WARNING: your autom4te wrapper eats stdin;\"\n    warn_ \"if bootstrap fails, consider upgrading your autotools\"\n  fi\n}\n\n# find_tool ENVVAR NAMES...\n# -------------------------\n# Search for a required program.  Use the value of ENVVAR, if set,\n# otherwise find the first of the NAMES that can be run.\n# If found, set ENVVAR to the program name, die otherwise.\n#\n# FIXME: code duplication, see also gnu-web-doc-update.\nfind_tool ()\n{\n  find_tool_envvar=$1\n  shift\n  find_tool_names=$@\n  eval \"find_tool_res=\\$$find_tool_envvar\"\n  if test x\"$find_tool_res\" = x; then\n    for i; do\n      if check_exists $i; then\n        find_tool_res=$i\n        break\n      fi\n    done\n  fi\n  if test x\"$find_tool_res\" = x; then\n    warn_ \"one of these is required: $find_tool_names;\"\n    die   \"alternatively set $find_tool_envvar to a compatible tool\"\n  fi\n  eval \"$find_tool_envvar=\\$find_tool_res\"\n  eval \"export $find_tool_envvar\"\n}\n\n# --------------------- Preparing GNULIB_SRCDIR for use. ---------------------\n# This is part of autopull.sh, but bootstrap needs it too, for self-upgrading.\n\n# cleanup_gnulib fails, removing the directory $gnulib_path first.\ncleanup_gnulib() {\n  status=$?\n  rm -fr \"$gnulib_path\"\n  exit $status\n}\n\ngit_modules_config () {\n  test -f .gitmodules && git config --file .gitmodules \"$@\"\n}\n\nprepare_GNULIB_SRCDIR ()\n{\n  if test -n \"$GNULIB_SRCDIR\"; then\n    # Use GNULIB_SRCDIR directly.\n    # We already checked that $GNULIB_SRCDIR references a directory.\n    # Verify that it contains a gnulib checkout.\n    test -f \"$GNULIB_SRCDIR/gnulib-tool\" \\\n      || die \"Error: --gnulib-srcdir or \\$GNULIB_SRCDIR is specified,\" \\\n             \"but does not contain gnulib-tool\"\n    if test -n \"$GNULIB_REVISION\" && $use_git; then\n      # The 'git checkout \"$GNULIB_REVISION\"' command succeeds if the\n      # GNULIB_REVISION is a commit hash that exists locally, or if it is\n      # branch name that can be fetched from origin. It fails, however,\n      # if the GNULIB_REVISION is a commit hash that only exists in\n      # origin. In this case, we need a 'git fetch' and then retry\n      # 'git checkout \"$GNULIB_REVISION\"'.\n      git -C \"$GNULIB_SRCDIR\" checkout \"$GNULIB_REVISION\" 2>/dev/null \\\n      || { git -C \"$GNULIB_SRCDIR\" fetch origin \\\n           && git -C \"$GNULIB_SRCDIR\" checkout \"$GNULIB_REVISION\"; } \\\n      || exit $?\n    fi\n  else\n    if ! $use_git; then\n      die \"Error: --no-git is specified,\" \\\n          \"but neither --gnulib-srcdir nor \\$GNULIB_SRCDIR is specified\"\n    fi\n    if git submodule -h | grep -- --reference > /dev/null; then\n      :\n    else\n      die \"git version is too old, git >= 1.6.4 is required\"\n    fi\n    gnulib_path=$(git_modules_config submodule.gnulib.path)\n    if test -n \"$gnulib_path\"; then\n      # A submodule 'gnulib' is configured.\n      # Get gnulib files.  Populate $gnulib_path, updating the submodule.\n      if test -n \"$GNULIB_REFDIR\" && test -d \"$GNULIB_REFDIR\"/.git; then\n        # Use GNULIB_REFDIR as a reference.\n        echo \"$0: getting gnulib files...\"\n        git submodule update --init --reference \"$GNULIB_REFDIR\" \"$gnulib_path\"\\\n          || exit $?\n      else\n        # GNULIB_REFDIR is not set or not usable. Ignore it.\n        if git_modules_config submodule.gnulib.url >/dev/null; then\n          echo \"$0: getting gnulib files...\"\n          git submodule init -- \"$gnulib_path\" || exit $?\n          git submodule update -- \"$gnulib_path\" || exit $?\n        else\n          die \"Error: submodule 'gnulib' has no configured url\"\n        fi\n      fi\n    else\n      gnulib_path='gnulib'\n      if test ! -d \"$gnulib_path\"; then\n        # The subdirectory 'gnulib' does not yet exist. Clone into it.\n        echo \"$0: getting gnulib files...\"\n        trap cleanup_gnulib HUP INT PIPE TERM\n        gnulib_url=${GNULIB_URL:-$default_gnulib_url}\n        if test -n \"$GNULIB_REFDIR\" && test -d \"$GNULIB_REFDIR\"/.git; then\n          # Use GNULIB_REFDIR as a reference.\n          git clone \"$GNULIB_REFDIR\" \"$gnulib_path\" \\\n          && git -C \"$gnulib_path\" remote set-url origin \"$gnulib_url\" \\\n          && if test -z \"$GNULIB_REVISION\"; then\n               git -C \"$gnulib_path\" pull origin \\\n               && {\n                 # We want the default branch of \"$gnulib_url\" (since that's\n                 # the behaviour if GNULIB_REFDIR is not specified), not the\n                 # current branch of \"$GNULIB_REFDIR\".\n                 default_branch=`LC_ALL=C git -C \"$gnulib_path\" \\\n                                              remote show origin \\\n                                 | sed -n -e 's/^ *HEAD branch: //p'`\n                 test -n \"$default_branch\" || default_branch='master'\n                 git -C \"$gnulib_path\" checkout \"$default_branch\"\n               }\n             else\n               # The 'git checkout \"$GNULIB_REVISION\"' command succeeds if the\n               # GNULIB_REVISION is a commit hash that exists locally, or if it\n               # is a branch name that can be fetched from origin. It fails,\n               # however, if the GNULIB_REVISION is a commit hash that only\n               # exists in origin. In this case, we need a 'git fetch' and then\n               # retry 'git checkout \"$GNULIB_REVISION\"'.\n               git -C \"$gnulib_path\" checkout \"$GNULIB_REVISION\" 2>/dev/null \\\n               || { git -C \"$gnulib_path\" fetch origin \\\n                    && git -C \"$gnulib_path\" checkout \"$GNULIB_REVISION\"; }\n             fi \\\n          || cleanup_gnulib\n        else\n          # GNULIB_REFDIR is not set or not usable. Ignore it.\n          shallow=\n          if test -z \"$GNULIB_REVISION\"; then\n            if git clone -h 2>&1 | grep -- --depth > /dev/null; then\n              shallow='--depth 2'\n            fi\n            git clone $shallow \"$gnulib_url\" \"$gnulib_path\" \\\n              || cleanup_gnulib\n          else\n            if git fetch -h 2>&1 | grep -- --depth > /dev/null; then\n              shallow='--depth 2'\n            fi\n            mkdir -p \"$gnulib_path\"\n            # Only want a shallow checkout of $GNULIB_REVISION, but git does not\n            # support cloning by commit hash. So attempt a shallow fetch by\n            # commit hash to minimize the amount of data downloaded and changes\n            # needed to be processed, which can drastically reduce download and\n            # processing time for checkout. If the fetch by commit fails, a\n            # shallow fetch cannot be performed because we do not know what the\n            # depth of the commit is without fetching all commits. So fall back\n            # to fetching all commits.\n            git -C \"$gnulib_path\" init\n            git -C \"$gnulib_path\" remote add origin \"$gnulib_url\"\n            git -C \"$gnulib_path\" fetch $shallow origin \"$GNULIB_REVISION\" \\\n              || git -C \"$gnulib_path\" fetch origin \\\n              || cleanup_gnulib\n            git -C \"$gnulib_path\" reset --hard FETCH_HEAD\n            git -C \"$gnulib_path\" checkout \"$GNULIB_REVISION\" || cleanup_gnulib\n          fi\n        fi\n        trap - HUP INT PIPE TERM\n      else\n        # The subdirectory 'gnulib' already exists.\n        if test -n \"$GNULIB_REVISION\"; then\n          if test -d \"$gnulib_path/.git\"; then\n            # The 'git checkout \"$GNULIB_REVISION\"' command succeeds if the\n            # GNULIB_REVISION is a commit hash that exists locally, or if it\n            # is a branch name that can be fetched from origin. It fails,\n            # however, if the GNULIB_REVISION is a commit hash that only\n            # exists in origin. In this case, we need a 'git fetch' and then\n            # retry 'git checkout \"$GNULIB_REVISION\"'.\n            git -C \"$gnulib_path\" checkout \"$GNULIB_REVISION\" 2>/dev/null \\\n            || { git -C \"$gnulib_path\" fetch origin \\\n                 && git -C \"$gnulib_path\" checkout \"$GNULIB_REVISION\"; } \\\n            || exit $?\n          else\n            die \"Error: GNULIB_REVISION is specified in bootstrap.conf,\" \\\n                \"but '$gnulib_path' contains no git history\"\n          fi\n        fi\n      fi\n    fi\n    # Verify that $gnulib_path contains a gnulib checkout.\n    test -f \"$gnulib_path/gnulib-tool\" \\\n      || die \"Error: '$gnulib_path' is supposed to contain a gnulib checkout,\" \\\n             \"but does not contain gnulib-tool\"\n    GNULIB_SRCDIR=$gnulib_path\n  fi\n  # $GNULIB_SRCDIR now points to the version of gnulib to use, and\n  # we no longer need to use git or $gnulib_path below here.\n}\n\n# -------- Upgrading bootstrap to the version found in GNULIB_SRCDIR. --------\n\nupgrade_bootstrap ()\n{\n  if test -f \"$medir\"/bootstrap-funclib.sh; then\n    update_lib=true\n    { cmp -s \"$medir\"/bootstrap \"$GNULIB_SRCDIR/top/bootstrap\" \\\n      && cmp -s \"$medir\"/bootstrap-funclib.sh \\\n                \"$GNULIB_SRCDIR/top/bootstrap-funclib.sh\" \\\n      && cmp -s \"$medir\"/autopull.sh \"$GNULIB_SRCDIR/top/autopull.sh\" \\\n      && cmp -s \"$medir\"/autogen.sh \"$GNULIB_SRCDIR/top/autogen.sh\"; \\\n    }\n  else\n    update_lib=false\n    cmp -s \"$medir\"/bootstrap \"$GNULIB_SRCDIR/build-aux/bootstrap\"\n  fi || {\n    if $update_lib; then\n      echo \"$0: updating bootstrap & companions and restarting...\"\n    else\n      echo \"$0: updating bootstrap and restarting...\"\n    fi\n    case $(sh -c 'echo \"$1\"' -- a) in\n      a) ignored=--;;\n      *) ignored=ignored;;\n    esac\n    u=$update_lib\n    exec sh -c \\\n      '{ if '$u' && test -f \"$1\"; then cp \"$1\" \"$3\"; else cp \"$2\" \"$3\"; fi; } &&\n       { if '$u' && test -f \"$4\"; then cp \"$4\" \"$5\"; else rm -f \"$5\"; fi; } &&\n       { if '$u' && test -f \"$6\"; then cp \"$6\" \"$7\"; else rm -f \"$7\"; fi; } &&\n       { if '$u' && test -f \"$8\"; then cp \"$8\" \"$9\"; else rm -f \"$9\"; fi; } &&\n       shift && shift && shift && shift && shift &&\n       shift && shift && shift && shift &&\n       exec \"${CONFIG_SHELL-/bin/sh}\" \"$@\"' \\\n      $ignored \\\n      \"$GNULIB_SRCDIR/top/bootstrap\" \"$GNULIB_SRCDIR/build-aux/bootstrap\" \\\n      \"$medir/bootstrap\" \\\n      \"$GNULIB_SRCDIR/top/bootstrap-funclib.sh\" \"$medir/bootstrap-funclib.sh\" \\\n      \"$GNULIB_SRCDIR/top/autopull.sh\" \"$medir/autopull.sh\" \\\n      \"$GNULIB_SRCDIR/top/autogen.sh\" \"$medir/autogen.sh\" \\\n      \"$0\" \"$@\" --no-bootstrap-sync\n  }\n}\n\n# ----------------------------------------------------------------------------\n\nif test x\"$gnulib_modules$gnulib_files$gnulib_extra_files\" = x; then\n  use_gnulib=false\nelse\n  use_gnulib=true\nfi\n\n# -------- Fetch auxiliary files from the network.  --------------------------\n\nautopull_usage() {\n  cat <<EOF\nUsage: $me [OPTION]...\nBootstrap this package from the checked-out sources, phase 1:\nPull files from the network.\n\nOptional environment variables:\n  GNULIB_SRCDIR            Specifies the local directory where gnulib\n                           sources reside.  Use this if you already\n                           have gnulib sources on your machine, and\n                           you want to use these sources.\n  GNULIB_REFDIR            Specifies the local directory where a gnulib\n                           repository (with a .git subdirectory) resides.\n                           Use this if you already have gnulib sources\n                           and history on your machine, and do not want\n                           to waste your bandwidth downloading them again.\n  GNULIB_URL               URL of the gnulib repository.  The default is\n                           $default_gnulib_url,\n                           which is Gnulib's upstream repository.\n\nOptions:\n\n  --bootstrap-sync         If this bootstrap script is not identical to\n                           the version in the local gnulib sources,\n                           update this script, and then restart it with\n                           /bin/sh or the shell \\$CONFIG_SHELL.\n  --no-bootstrap-sync      Do not check whether bootstrap is out of sync.\n\n  --force                  Attempt to bootstrap even if the sources seem\n                           not to have been checked out.\n  --no-git                 Do not use git to update gnulib.  Requires that\n                           \\$GNULIB_SRCDIR points to a gnulib repository\n                           with the correct revision.\n  --skip-po                Do not download *.po files.\nEOF\n  bootstrap_print_option_usage_hook\n  cat <<EOF\nIf the file bootstrap.conf exists in the same directory as this script, its\ncontents are read as shell variables to configure the bootstrap.\n\nFor build prerequisites, environment variables like \\$AUTOCONF and \\$AMTAR\nare honored.\n\nGnulib sources can be fetched in various ways:\n\n * If the environment variable GNULIB_SRCDIR is set, then sources are\n   fetched from that local directory.  If it is a git repository and the\n   configuration variable GNULIB_REVISION is set in bootstrap.conf, then\n   that revision is checked out.\n\n * Otherwise, if this package is in a git repository with a 'gnulib'\n   submodule configured, then that submodule is initialized and updated\n   and sources are fetched from there.  If the environment variable\n   GNULIB_REFDIR is set and is a git repository, then it is used as a\n   reference.\n\n * Otherwise, if the 'gnulib' directory does not exist, Gnulib sources\n   are cloned into that directory using git from \\$GNULIB_URL, defaulting\n   to $default_gnulib_url; if GNULIB_REFDIR is set and is a git repository\n   its contents may be used to accelerate the process.\n   If the configuration variable GNULIB_REVISION is set in bootstrap.conf,\n   then that revision is checked out.\n\n * Otherwise, the existing Gnulib sources in the 'gnulib' directory are\n   used.  If it is a git repository and the configuration variable\n   GNULIB_REVISION is set in bootstrap.conf, then that revision is\n   checked out.\n\nIf you maintain a package and want to pin a particular revision of the\nGnulib sources that has been tested with your package, then there are\ntwo possible approaches: either configure a 'gnulib' submodule with the\nappropriate revision, or set GNULIB_REVISION (and if necessary\nGNULIB_URL) in bootstrap.conf.\n\nRunning without arguments will suffice in most cases.\nEOF\n}\n\n# Fetch auxiliary files that are omitted from the version control\n# repository of this package.\nautopull()\n{\n  # Ensure that CDPATH is not set.  Otherwise, the output from cd\n  # would cause trouble in at least one use below.\n  (unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n  # Parse options.\n\n  # Use git to update gnulib sources\n  use_git=true\n\n  for option\n  do\n    case $option in\n    --help)\n      autopull_usage\n      return;;\n    --version)\n      set -e\n      echo \"autopull.sh $scriptlibversion\"\n      echo \"$copyright\"\n      return 0\n      ;;\n    --skip-po)\n      SKIP_PO=t;;\n    --force)\n      checkout_only_file=;;\n    --bootstrap-sync)\n      bootstrap_sync=true;;\n    --no-bootstrap-sync)\n      bootstrap_sync=false;;\n    --no-git)\n      use_git=false;;\n    *)\n      bootstrap_option_hook $option || die \"$option: unknown option\";;\n    esac\n  done\n\n  $use_git || test -n \"$GNULIB_SRCDIR\" \\\n    || die \"Error: --no-git requires \\$GNULIB_SRCDIR environment variable\" \\\n           \"or --gnulib-srcdir option\"\n  test -z \"$GNULIB_SRCDIR\" || test -d \"$GNULIB_SRCDIR\" \\\n    || die \"Error: \\$GNULIB_SRCDIR environment variable\" \\\n           \"or --gnulib-srcdir option is specified,\" \\\n           \"but does not denote a directory\"\n\n  if test -n \"$checkout_only_file\" && test ! -r \"$checkout_only_file\"; then\n    die \"Running this script from a non-checked-out distribution is risky.\"\n  fi\n\n  check_build_prerequisites $use_git\n\n  if $use_gnulib || $bootstrap_sync; then\n    prepare_GNULIB_SRCDIR\n    if $bootstrap_sync; then\n      upgrade_bootstrap \"$@\"\n    fi\n  fi\n\n  # Find sha1sum, named gsha1sum on MacPorts, shasum on Mac OS X 10.6.\n  # Also find the compatible sha1 utility on the BSDs\n  if test x\"$SKIP_PO\" = x; then\n    find_tool SHA1SUM sha1sum gsha1sum shasum sha1\n  fi\n\n  # See if we can use gnulib's git-merge-changelog merge driver.\n  if $use_git && test -d .git && check_exists git; then\n    if git config merge.merge-changelog.driver >/dev/null ; then\n      :\n    elif check_exists git-merge-changelog; then\n      echo \"$0: initializing git-merge-changelog driver\"\n      git config merge.merge-changelog.name 'GNU-style ChangeLog merge driver'\n      git config merge.merge-changelog.driver 'git-merge-changelog %O %A %B'\n    else\n      echo \"$0: consider installing git-merge-changelog from gnulib\"\n    fi\n  fi\n\n  case $SKIP_PO in\n  '')\n    if test -d po; then\n      update_po_files po $package || return\n    fi\n\n    if test -d runtime-po; then\n      update_po_files runtime-po $package-runtime || return\n    fi;;\n  esac\n\n  # ---------------------------------------------------------------------------\n\n  bootstrap_post_pull_hook \\\n    || die \"bootstrap_post_pull_hook failed\"\n\n  # Don't proceed if there are uninitialized submodules.  In particular,\n  # autogen.sh will remove dangling links, which might be links into\n  # uninitialized submodules.\n  # But it's OK if the 'gnulib' submodule is uninitialized, as long as\n  # GNULIB_SRCDIR is set.\n  if $use_git; then\n    # Uninitialized submodules are listed with an initial dash.\n    uninitialized=`git submodule | grep '^-' | awk '{ print $2 }'`\n    if test -n \"$GNULIB_SRCDIR\"; then\n      uninitialized=`echo \"$uninitialized\" | grep -v '^gnulib$'`\n    fi\n    if test -n \"$uninitialized\"; then\n      uninit_comma=`echo \"$uninitialized\" | tr '\\n' ',' | sed -e 's|,$|.|'`\n      die \"Some git submodules are not initialized: \"$uninit_comma \\\n          \"Either use option '--no-git',\" \\\n          \"or run 'git submodule update --init' and bootstrap again.\"\n    fi\n  fi\n\n  if test -f \"$medir\"/autogen.sh; then\n    echo \"$0: done.  Now you can run '$medir/autogen.sh'.\"\n  fi\n}\n\n# ----------------------------- Get translations. -----------------------------\n\ndownload_po_files() {\n  subdir=$1\n  domain=$2\n  echo \"$me: getting translations into $subdir for $domain...\"\n  cmd=$(printf \"$po_download_command_format\" \"$subdir\" \"$domain\")\n  eval \"$cmd\"\n}\n\n# Mirror .po files to $po_dir/.reference and copy only the new\n# or modified ones into $po_dir.  Also update $po_dir/LINGUAS.\n# Note po files that exist locally only are left in $po_dir but will\n# not be included in LINGUAS and hence will not be distributed.\nupdate_po_files() {\n  # Directory containing primary .po files.\n  # Overwrite them only when we're sure a .po file is new.\n  po_dir=$1\n  domain=$2\n\n  # Mirror *.po files into this dir.\n  # Usually contains *.s1 checksum files.\n  ref_po_dir=\"$po_dir/.reference\"\n\n  test -d $ref_po_dir || mkdir $ref_po_dir || return\n  download_po_files $ref_po_dir $domain \\\n    && ls \"$ref_po_dir\"/*.po 2>/dev/null |\n      sed 's|.*/||; s|\\.po$||' > \"$po_dir/LINGUAS\" || return\n\n  for po in x $(ls $ref_po_dir | sed -n 's/\\.po$//p'); do\n    case $po in x) continue;; esac\n    new_po=\"$ref_po_dir/$po.po\"\n    cksum_file=\"$ref_po_dir/$po.s1\"\n    if ! test -f \"$cksum_file\" ||\n        ! test -f \"$po_dir/$po.po\" ||\n        ! $SHA1SUM -c \"$cksum_file\" < \"$new_po\" > /dev/null 2>&1; then\n      echo \"$me: updated $po_dir/$po.po...\"\n      cp \"$new_po\" \"$po_dir/$po.po\" \\\n          && $SHA1SUM < \"$new_po\" > \"$cksum_file\" || return\n    fi\n  done\n}\n\n# -------- Generate files automatically from existing sources.  --------------\n\nautogen_usage() {\n  cat <<EOF\nUsage: $me [OPTION]...\nBootstrap this package from the checked-out sources, phase 2:\nGenerate files from local files (no network access).\n\nOptional environment variables:\n  GNULIB_SRCDIR            Specifies the local directory where gnulib\n                           sources reside.  Use this if you already\n                           have gnulib sources on your machine, and\n                           you want to use these sources.\n\nOptions:\n  --copy                   Copy files instead of creating symbolic links.\n  --force                  Attempt to bootstrap even if the sources seem\n                           not to have been checked out.\nEOF\n  bootstrap_print_option_usage_hook\n  cat <<EOF\nIf the file bootstrap.conf exists in the same directory as this script, its\ncontents are read as shell variables to configure the bootstrap.\n\nFor build prerequisites, environment variables like \\$AUTOCONF and \\$AMTAR\nare honored.\n\nGnulib sources are assumed to be present:\n  * in \\$GNULIB_SRCDIR, if that environment variable is set,\n  * otherwise, in the 'gnulib' submodule, if such a submodule is configured,\n  * otherwise, in the 'gnulib' subdirectory.\n\nRunning without arguments will suffice in most cases.\nEOF\n}\n\n\nversion_controlled_file() {\n  parent=$1\n  file=$2\n  if test -d .git; then\n    git rm -n \"$file\" > /dev/null 2>&1\n  elif test -d .svn; then\n    svn log -r HEAD \"$file\" > /dev/null 2>&1\n  elif test -d CVS; then\n    grep -F \"/${file##*/}/\" \"$parent/CVS/Entries\" 2>/dev/null |\n             grep '^/[^/]*/[0-9]' > /dev/null\n  else\n    warn_ \"no version control for $file?\"\n    false\n  fi\n}\n\n# Strip blank and comment lines to leave significant entries.\ngitignore_entries() {\n  sed '/^#/d; /^$/d' \"$@\"\n}\n\n# If $STR is not already on a line by itself in $FILE, insert it at the start.\n# Entries are inserted at the start of the ignore list to ensure existing\n# entries starting with ! are not overridden.  Such entries support\n# whitelisting exceptions after a more generic blacklist pattern.\ninsert_if_absent() {\n  file=$1\n  str=$2\n  test -f $file || touch $file\n  test -r $file || die \"Error: failed to read ignore file: $file\"\n  duplicate_entries=$(gitignore_entries $file | sort | uniq -d)\n  if [ \"$duplicate_entries\" ] ; then\n    die \"Error: Duplicate entries in $file: \" $duplicate_entries\n  fi\n  linesold=$(gitignore_entries $file | wc -l)\n  linesnew=$( { echo \"$str\"; cat $file; } | gitignore_entries | sort -u | wc -l)\n  if [ $linesold != $linesnew ] ; then\n    { echo \"$str\" | cat - $file > $file.bak && mv $file.bak $file; } \\\n      || die \"insert_if_absent $file $str: failed\"\n  fi\n}\n\n# Adjust $PATTERN for $VC_IGNORE_FILE and insert it with\n# insert_if_absent.\ninsert_vc_ignore() {\n  vc_ignore_file=\"$1\"\n  pattern=\"$2\"\n  case $vc_ignore_file in\n  *.gitignore)\n    # A .gitignore entry that does not start with '/' applies\n    # recursively to subdirectories, so prepend '/' to every\n    # .gitignore entry.\n    pattern=$(echo \"$pattern\" | sed s,^,/,);;\n  esac\n  insert_if_absent \"$vc_ignore_file\" \"$pattern\"\n}\n\nsymlink_to_dir()\n{\n  src=$1/$2\n  dst=${3-$2}\n\n  test -f \"$src\" && {\n\n    # If the destination directory doesn't exist, create it.\n    # This is required at least for \"lib/uniwidth/cjk.h\".\n    dst_dir=$(dirname \"$dst\")\n    if ! test -d \"$dst_dir\"; then\n      mkdir -p \"$dst_dir\"\n\n      # If we've just created a directory like lib/uniwidth,\n      # tell version control system(s) it's ignorable.\n      # FIXME: for now, this does only one level\n      parent=$(dirname \"$dst_dir\")\n      for dot_ig in x $vc_ignore; do\n        test $dot_ig = x && continue\n        ig=$parent/$dot_ig\n        insert_vc_ignore $ig \"${dst_dir##*/}/\"\n      done\n    fi\n\n    if $copy; then\n      {\n        test ! -h \"$dst\" || {\n          echo \"$me: rm -f $dst\" &&\n          rm -f \"$dst\"\n        }\n      } &&\n      test -f \"$dst\" &&\n      cmp -s \"$src\" \"$dst\" || {\n        echo \"$me: cp -fp $src $dst\" &&\n        cp -fp \"$src\" \"$dst\"\n      }\n    else\n      # Leave any existing symlink alone, if it already points to the source,\n      # so that broken build tools that care about symlink times\n      # aren't confused into doing unnecessary builds.  Conversely, if the\n      # existing symlink's timestamp is older than the source, make it afresh,\n      # so that broken tools aren't confused into skipping needed builds.  See\n      # <https://lists.gnu.org/r/bug-gnulib/2011-05/msg00326.html>.\n      test -h \"$dst\" &&\n      src_ls=$(ls -diL \"$src\" 2>/dev/null) && set $src_ls && src_i=$1 &&\n      dst_ls=$(ls -diL \"$dst\" 2>/dev/null) && set $dst_ls && dst_i=$1 &&\n      test \"$src_i\" = \"$dst_i\" &&\n      both_ls=$(ls -dt \"$src\" \"$dst\") &&\n      test \"X$both_ls\" = \"X$dst$nl$src\" || {\n        dot_dots=\n        case $src in\n        /*) ;;\n        *)\n          case /$dst/ in\n          *//* | */../* | */./* | /*/*/*/*/*/)\n             die \"invalid symlink calculation: $src -> $dst\";;\n          /*/*/*/*/)    dot_dots=../../../;;\n          /*/*/*/)      dot_dots=../../;;\n          /*/*/)        dot_dots=../;;\n          esac;;\n        esac\n\n        echo \"$me: ln -fs $dot_dots$src $dst\" &&\n        ln -fs \"$dot_dots$src\" \"$dst\"\n      }\n    fi\n  }\n}\n\n# Regenerate all autogeneratable files that are omitted from the\n# version control repository.  In particular, regenerate all\n# aclocal.m4, config.h.in, Makefile.in, configure files with new\n# versions of autoconf or automake.\nautogen()\n{\n  # Ensure that CDPATH is not set.  Otherwise, the output from cd\n  # would cause trouble in at least one use below.\n  (unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n  # Environment variables that may be set by the user.\n  : \"${AUTOPOINT=autopoint}\"\n  : \"${AUTORECONF=autoreconf}\"\n\n  if test \"$vc_ignore\" = auto; then\n    vc_ignore=\n    test -d .git && vc_ignore=.gitignore\n    test -d CVS && vc_ignore=\"$vc_ignore .cvsignore\"\n  fi\n\n\n  # Parse options.\n\n  # Whether to use copies instead of symlinks.\n  copy=false\n\n  for option\n  do\n    case $option in\n    --help)\n      autogen_usage\n      return;;\n    --version)\n      set -e\n      echo \"autogen.sh $scriptlibversion\"\n      echo \"$copyright\"\n      return 0\n      ;;\n    --force)\n      checkout_only_file=;;\n    --copy)\n      copy=true;;\n    *)\n      bootstrap_option_hook $option || die \"$option: unknown option\";;\n    esac\n  done\n\n  test -z \"$GNULIB_SRCDIR\" || test -d \"$GNULIB_SRCDIR\" \\\n    || die \"Error: \\$GNULIB_SRCDIR environment variable or --gnulib-srcdir\" \\\n           \"option is specified, but does not denote a directory\"\n\n  if test -n \"$checkout_only_file\" && test ! -r \"$checkout_only_file\"; then\n    die \"Running this script from a non-checked-out distribution is risky.\"\n  fi\n\n  if $use_gnulib; then\n    if test -z \"$GNULIB_SRCDIR\"; then\n      gnulib_path=$(test -f .gitmodules &&\n                    git config --file .gitmodules submodule.gnulib.path)\n      test -z \"$gnulib_path\" && gnulib_path=gnulib\n      GNULIB_SRCDIR=$gnulib_path\n    fi\n  fi\n\n  # Die if there is no AC_CONFIG_AUX_DIR($build_aux) line in configure.ac.\n  found_aux_dir=no\n  grep '^[\t ]*AC_CONFIG_AUX_DIR(\\['\"$build_aux\"'])' configure.ac \\\n      >/dev/null && found_aux_dir=yes\n  grep '^[\t ]*AC_CONFIG_AUX_DIR('\"$build_aux\"')' configure.ac \\\n      >/dev/null && found_aux_dir=yes\n  test $found_aux_dir = yes \\\n    || die \"configure.ac lacks 'AC_CONFIG_AUX_DIR([$build_aux])'; add it\"\n\n  # If $build_aux doesn't exist, create it now, otherwise some bits\n  # below will malfunction.  If creating it, also mark it as ignored.\n  if test ! -d $build_aux; then\n    mkdir $build_aux\n    for dot_ig in x $vc_ignore; do\n      test $dot_ig = x && continue\n      insert_vc_ignore $dot_ig $build_aux/\n    done\n  fi\n\n  check_build_prerequisites false\n\n  use_libtool=0\n  # We'd like to use grep -E, to see if any of LT_INIT,\n  # AC_PROG_LIBTOOL, AM_PROG_LIBTOOL is used in configure.ac,\n  # but that's not portable enough (e.g., for Solaris).\n  grep '^[\t ]*A[CM]_PROG_LIBTOOL' configure.ac >/dev/null \\\n    && use_libtool=1\n  grep '^[\t ]*LT_INIT' configure.ac >/dev/null \\\n    && use_libtool=1\n  if test $use_libtool = 1; then\n    find_tool LIBTOOLIZE glibtoolize libtoolize\n  fi\n\n  if $use_gnulib; then\n    gnulib_tool=$GNULIB_SRCDIR/gnulib-tool\n    <$gnulib_tool || return\n  fi\n\n  # NOTE: we have to be careful to run both autopoint and libtoolize\n  # before gnulib-tool, since gnulib-tool is likely to provide newer\n  # versions of files \"installed\" by these two programs.\n  # Then, *after* gnulib-tool (see below), we have to be careful to\n  # run autoreconf in such a way that it does not run either of these\n  # two just-pre-run programs.\n\n  # Import from gettext.\n  with_gettext=yes\n  grep '^[\t ]*AM_GNU_GETTEXT_VERSION(' configure.ac >/dev/null || \\\n      with_gettext=no\n\n  if test $with_gettext = yes || test $use_libtool = 1; then\n\n    tempbase=.bootstrap$$\n    trap \"rm -f $tempbase.0 $tempbase.1\" HUP INT PIPE TERM\n\n    > $tempbase.0 > $tempbase.1 &&\n    find . ! -type d -print | sort > $tempbase.0 || return\n\n    if test $with_gettext = yes; then\n      # Released autopoint has the tendency to install macros that have been\n      # obsoleted in current gnulib, so run this before gnulib-tool.\n      echo \"$0: $AUTOPOINT --force\"\n      $AUTOPOINT --force || return\n    fi\n\n    # Autoreconf runs aclocal before libtoolize, which causes spurious\n    # warnings if the initial aclocal is confused by the libtoolized\n    # (or worse out-of-date) macro directory.\n    # libtoolize 1.9b added the --install option; but we support back\n    # to libtoolize 1.5.22, where the install action was default.\n    if test $use_libtool = 1; then\n      install=\n      case $($LIBTOOLIZE --help) in\n        *--install*) install=--install ;;\n      esac\n      echo \"running: $LIBTOOLIZE $install --copy\"\n      $LIBTOOLIZE $install --copy\n    fi\n\n    find . ! -type d -print | sort >$tempbase.1\n    old_IFS=$IFS\n    IFS=$nl\n    for file in $(comm -13 $tempbase.0 $tempbase.1); do\n      IFS=$old_IFS\n      parent=${file%/*}\n      version_controlled_file \"$parent\" \"$file\" || {\n        for dot_ig in x $vc_ignore; do\n          test $dot_ig = x && continue\n          ig=$parent/$dot_ig\n          insert_vc_ignore \"$ig\" \"${file##*/}\"\n        done\n      }\n    done\n    IFS=$old_IFS\n\n    rm -f $tempbase.0 $tempbase.1\n    trap - HUP INT PIPE TERM\n  fi\n\n  # Import from gnulib.\n\n  if $use_gnulib; then\n    gnulib_tool_options=\"\\\n     --no-changelog\\\n     --aux-dir=$build_aux\\\n     --doc-base=$doc_base\\\n     --lib=$gnulib_name\\\n     --m4-base=$m4_base/\\\n     --source-base=$source_base/\\\n     --tests-base=$tests_base\\\n     --local-dir=$local_gl_dir\\\n     $gnulib_tool_option_extras\\\n    \"\n    if test $use_libtool = 1; then\n      case \"$gnulib_tool_options \" in\n        *' --libtool '*) ;;\n        *) gnulib_tool_options=\"$gnulib_tool_options --libtool\" ;;\n      esac\n    fi\n    echo \"$0: $gnulib_tool $gnulib_tool_options --import ...\"\n    $gnulib_tool $gnulib_tool_options --import $gnulib_modules \\\n      || die \"gnulib-tool failed\"\n\n    if test $with_gettext = yes && test ! -f $m4_base/gettext.m4; then\n      # The gnulib-tool invocation has removed $m4_base/gettext.m4, that the\n      # AUTOPOINT invocation had installed. This can occur when the gnulib\n      # module 'gettext' was previously present but is now not present any more.\n      # Repeat the AUTOPOINT invocation and the gnulib-tool invocation.\n\n      echo \"$0: $AUTOPOINT --force\"\n      $AUTOPOINT --force || return\n\n      echo \"$0: $gnulib_tool $gnulib_tool_options --import ...\"\n      $gnulib_tool $gnulib_tool_options --import $gnulib_modules \\\n        || die \"gnulib-tool failed\"\n    fi\n\n    for file in $gnulib_files; do\n      symlink_to_dir \"$GNULIB_SRCDIR\" $file \\\n        || die \"failed to symlink $file\"\n    done\n  fi\n\n  bootstrap_post_import_hook \\\n    || die \"bootstrap_post_import_hook failed\"\n\n  # Remove any dangling symlink matching \"*.m4\" or \"*.[ch]\" in some\n  # gnulib-populated directories.  Such .m4 files would cause aclocal to fail.\n  # The following requires GNU find 4.2.3 or newer.  Considering the usual\n  # portability constraints of this script, that may seem a very demanding\n  # requirement, but it should be ok.  Ignore any failure, which is fine,\n  # since this is only a convenience to help developers avoid the relatively\n  # unusual case in which a symlinked-to .m4 file is git-removed from gnulib\n  # between successive runs of this script.\n  find \"$m4_base\" \"$source_base\" \\\n    -depth \\( -name '*.m4' -o -name '*.[ch]' \\) \\\n    -type l -xtype l -delete > /dev/null 2>&1\n\n  # Invoke autoreconf with --force --install to ensure upgrades of tools\n  # such as ylwrap.\n  AUTORECONFFLAGS=\"--verbose --install --force -I $m4_base $ACLOCAL_FLAGS\"\n  AUTORECONFFLAGS=\"$AUTORECONFFLAGS --no-recursive\"\n\n  # Tell autoreconf not to invoke autopoint or libtoolize; they were run above.\n  echo \"running: AUTOPOINT=true LIBTOOLIZE=true $AUTORECONF $AUTORECONFFLAGS\"\n  AUTOPOINT=true LIBTOOLIZE=true $AUTORECONF $AUTORECONFFLAGS \\\n    || die \"autoreconf failed\"\n\n  # Get some extra files from gnulib, overriding existing files.\n  for file in $gnulib_extra_files; do\n    case $file in\n      */INSTALL) dst=INSTALL;;\n      build-aux/*) dst=$build_aux/${file#build-aux/};;\n      *) dst=$file;;\n    esac\n    symlink_to_dir \"$GNULIB_SRCDIR\" $file $dst \\\n      || die \"failed to symlink $file\"\n  done\n\n  if test $with_gettext = yes; then\n    # Create gettext configuration.\n    echo \"$0: Creating po/Makevars from po/Makevars.template ...\"\n    rm -f po/Makevars\n    sed '\n      /^EXTRA_LOCALE_CATEGORIES *=/s/=.*/= '\"$EXTRA_LOCALE_CATEGORIES\"'/\n      /^COPYRIGHT_HOLDER *=/s/=.*/= '\"$COPYRIGHT_HOLDER\"'/\n      /^MSGID_BUGS_ADDRESS *=/s|=.*|= '\"$MSGID_BUGS_ADDRESS\"'|\n      /^XGETTEXT_OPTIONS *=/{\n        s/$/ \\\\/\n        a\\\n            '\"$XGETTEXT_OPTIONS\"' $${end_of_xgettext_options+}\n      }\n    ' po/Makevars.template >po/Makevars \\\n      || die 'cannot generate po/Makevars'\n\n    # If the 'gettext' module is in use, grab the latest Makefile.in.in.\n    # If only the 'gettext-h' module is in use, assume autopoint already\n    # put the correct version of this file into place.\n    case $gnulib_modules in\n      *gettext-h*) ;;\n      *gettext*)\n        cp $GNULIB_SRCDIR/build-aux/po/Makefile.in.in po/Makefile.in.in \\\n          || die \"cannot create po/Makefile.in.in\"\n        ;;\n    esac\n\n    if test -d runtime-po; then\n      # Similarly for runtime-po/Makevars, but not quite the same.\n      rm -f runtime-po/Makevars\n      sed '\n        /^DOMAIN *=.*/s/=.*/= '\"$package\"'-runtime/\n        /^subdir *=.*/s/=.*/= runtime-po/\n        /^MSGID_BUGS_ADDRESS *=/s/=.*/= bug-'\"$package\"'@gnu.org/\n        /^XGETTEXT_OPTIONS *=/{\n          s/$/ \\\\/\n          a\\\n              '\"$XGETTEXT_OPTIONS_RUNTIME\"' $${end_of_xgettext_options+}\n        }\n      ' po/Makevars.template >runtime-po/Makevars \\\n      || die 'cannot generate runtime-po/Makevars'\n\n      # Copy identical files from po to runtime-po.\n      cp -p po/Makefile.in.in po/*-quot po/*.header po/*.sed po/*.sin runtime-po\n    fi\n  fi\n\n  bootstrap_epilogue\n\n  echo \"$0: done.  Now you can run './configure'.\"\n}\n\n# ----------------------------------------------------------------------------\n\n# Local Variables:\n# eval: (add-hook 'before-save-hook 'time-stamp nil t)\n# time-stamp-start: \"scriptlibversion=\"\n# time-stamp-format: \"%:y-%02m-%02d.%02H\"\n# time-stamp-time-zone: \"UTC0\"\n# time-stamp-end: \"; # UTC\"\n# End:\n\nusage() {\n  cat <<EOF\nUsage: $me [OPTION]...\nBootstrap this package from the checked-out sources.\n\nOptional environment variables:\n  GNULIB_SRCDIR            Specifies the local directory where gnulib\n                           sources reside.  Use this if you already\n                           have gnulib sources on your machine, and\n                           you want to use these sources.\n  GNULIB_REFDIR            Specifies the local directory where a gnulib\n                           repository (with a .git subdirectory) resides.\n                           Use this if you already have gnulib sources\n                           and history on your machine, and do not want\n                           to waste your bandwidth downloading them again.\n                           Only used for phase 1 (--pull).\n  GNULIB_URL               URL of the gnulib repository.  The default is\n                           $default_gnulib_url,\n                           which is Gnulib's upstream repository.\n                           Only used for phase 1 (--pull).\n\nOptions:\n\n  --pull                   Do phase 1: Pull files from the network.\n  --gen                    Do phase 2: Generate files from local files\n                           (no network access).\n                           (The default is to do both phases.)\n\n  --gnulib-srcdir=DIRNAME  Specifies the local directory where gnulib\n                           sources reside.  Use this if you already\n                           have gnulib sources on your machine, and\n                           you want to use these sources.  Defaults\n                           to \\$GNULIB_SRCDIR.\n  --gnulib-refdir=DIRNAME  Specifies the local directory where a gnulib\n                           repository (with a .git subdirectory) resides.\n                           Use this if you already have gnulib sources\n                           and history on your machine, and do not want\n                           to waste your bandwidth downloading them again.\n                           Defaults to \\$GNULIB_REFDIR.\n                           Only used for phase 1 (--pull).\n\n  --bootstrap-sync         If this bootstrap script is not identical to\n                           the version in the local gnulib sources,\n                           update this script, and then restart it with\n                           /bin/sh or the shell \\$CONFIG_SHELL.\n  --no-bootstrap-sync      Do not check whether bootstrap is out of sync.\n\n  --copy                   Copy files instead of creating symbolic links.\n                           Only used for phase 2 (--gen).\n  --force                  Attempt to bootstrap even if the sources seem\n                           not to have been checked out.\n  --no-git                 Do not use git to update gnulib.  Requires that\n                           \\$GNULIB_SRCDIR or the --gnulib-srcdir option\n                           points to a gnulib repository with the correct\n                           revision.\n                           Only used for phase 1 (--pull).\n  --skip-po                Do not download *.po files.\n                           Only used for phase 1 (--pull).\nEOF\n  bootstrap_print_option_usage_hook\n  cat <<EOF\nIf the file bootstrap.conf exists in the same directory as this script, its\ncontents are read as shell variables to configure the bootstrap.\n\nFor build prerequisites, environment variables like \\$AUTOCONF and \\$AMTAR\nare honored.\n\nGnulib sources can be fetched in various ways:\n\n * If GNULIB_SRCDIR is set (either as an environment variable or via the\n   --gnulib-srcdir option), then sources are fetched from that local\n   directory.  If it is a git repository and the configuration variable\n   GNULIB_REVISION is set in bootstrap.conf, then that revision is\n   checked out.\n\n * Otherwise, if this package is in a git repository with a 'gnulib'\n   submodule configured, then that submodule is initialized and updated\n   and sources are fetched from there.  If GNULIB_REFDIR is set (either\n   as an environment variable or via the --gnulib-refdir option) and is\n   a git repository, then it is used as a reference.\n\n * Otherwise, if the 'gnulib' directory does not exist, Gnulib sources\n   are cloned into that directory using git from \\$GNULIB_URL, defaulting\n   to $default_gnulib_url; if GNULIB_REFDIR is set and is a git repository\n   its contents may be used to accelerate the process.\n   If the configuration variable GNULIB_REVISION is set in bootstrap.conf,\n   then that revision is checked out.\n\n * Otherwise, the existing Gnulib sources in the 'gnulib' directory are\n   used.  If it is a git repository and the configuration variable\n   GNULIB_REVISION is set in bootstrap.conf, then that revision is\n   checked out.\n\nIf you maintain a package and want to pin a particular revision of the\nGnulib sources that has been tested with your package, then there are\ntwo possible approaches: either configure a 'gnulib' submodule with the\nappropriate revision, or set GNULIB_REVISION (and if necessary\nGNULIB_URL) in bootstrap.conf.\n\nRunning without arguments will suffice in most cases.\nEOF\n}\n\n# Parse options.\n\n# Whether to pull and generate.\npull=false\ngen=false\n\n# Whether to use copies instead of symlinks.\ncopy=false\n\n# Use git to update gnulib sources\nuse_git=true\n\nfor option\ndo\n  case $option in\n  --help)\n    usage\n    exit;;\n  --version)\n    set -e\n    echo \"bootstrap $scriptversion lib $scriptlibversion\"\n    echo \"$copyright\"\n    exit 0\n    ;;\n  --pull)\n    pull=true;;\n  --gen)\n    gen=true;;\n  --gnulib-srcdir=*)\n    GNULIB_SRCDIR=${option#--gnulib-srcdir=};;\n  --gnulib-refdir=*)\n    GNULIB_REFDIR=${option#--gnulib-refdir=};;\n  --skip-po)\n    SKIP_PO=t;;\n  --force)\n    checkout_only_file=;;\n  --copy)\n    copy=true;;\n  --bootstrap-sync)\n    bootstrap_sync=true;;\n  --no-bootstrap-sync)\n    bootstrap_sync=false;;\n  --no-git)\n    use_git=false;;\n  *)\n    bootstrap_option_hook $option || die \"$option: unknown option\";;\n  esac\ndone\n\n# Default is to do both.\n$pull || $gen || pull=true gen=true\n\n$use_git || test -n \"$GNULIB_SRCDIR\" \\\n  || die \"Error: --no-git requires \\$GNULIB_SRCDIR environment variable\" \\\n         \"or --gnulib-srcdir option\"\ntest -z \"$GNULIB_SRCDIR\" || test -d \"$GNULIB_SRCDIR\" \\\n  || die \"Error: \\$GNULIB_SRCDIR environment variable or --gnulib-srcdir\" \\\n         \"option is specified, but does not denote a directory\"\n\nif test -n \"$checkout_only_file\" && test ! -r \"$checkout_only_file\"; then\n  die \"Bootstrapping from a non-checked-out distribution is risky.\"\nfi\n\ncheck_build_prerequisites $use_git\n\nif $bootstrap_sync; then\n  prepare_GNULIB_SRCDIR\n  upgrade_bootstrap \"$@\"\n  # Since we have now upgraded if needed, no need to try it a second time below.\n  bootstrap_sync=false\nfi\n\necho \"$0: Bootstrapping from checked-out $package sources...\"\n\n# Pass GNULIB_SRCDIR and GNULIB_REFDIR to any subsidiary commands that care.\nexport GNULIB_SRCDIR\nexport GNULIB_REFDIR\n\nif $pull && { $use_git || test -z \"$SKIP_PO\"; }; then\n  autopull \\\n      `if $bootstrap_sync; then\n         echo ' --bootstrap-sync'\n       else\n         echo ' --no-bootstrap-sync'\n       fi` \\\n      `if test -z \"$checkout_only_file\"; then echo ' --force'; fi` \\\n      `if ! $use_git; then echo ' --no-git'; fi` \\\n      `if test -n \"$SKIP_PO\"; then echo ' --skip-po'; fi` \\\n    || die \"could not fetch auxiliary files\"\nfi\n\nif $gen; then\n  autogen \\\n      `if $copy; then echo ' --copy'; fi` \\\n      `if test -z \"$checkout_only_file\"; then echo ' --force'; fi` \\\n    || die \"could not generate auxiliary files\"\nfi\n\n# ----------------------------------------------------------------------------\n\n# Local Variables:\n# eval: (add-hook 'before-save-hook 'time-stamp nil t)\n# time-stamp-start: \"scriptversion=\"\n# time-stamp-format: \"%:y-%02m-%02d.%02H\"\n# time-stamp-time-zone: \"UTC0\"\n# time-stamp-end: \"; # UTC\"\n# End:\n"
        },
        {
          "name": "bootstrap.conf",
          "type": "blob",
          "size": 7.662109375,
          "content": "# Bootstrap configuration.\n\n# Copyright (C) 2006-2025 Free Software Foundation, Inc.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n\n# We don't need these modules.\navoided_gnulib_modules='\n  --avoid=canonicalize-lgpl\n  --avoid=dummy\n  --avoid=mbuiter\n  --avoid=mbuiterf\n'\n\n# gnulib modules used by this package.\ngnulib_modules=\"\n  $avoided_gnulib_modules\n  acl\n  acl-permissions\n  alignalloc\n  alignasof\n  alloca\n  announce-gen\n  areadlink-with-size\n  areadlinkat-with-size\n  argmatch\n  argv-iter\n  assert\n  assert-h\n  assure\n  attribute\n  autobuild\n  backup-rename\n  backupfile\n  base32\n  base64\n  bool\n  btoc32\n  buffer-lcm\n  c-strcase\n  c32iscntrl\n  c32isspace\n  c32width\n  canon-host\n  canonicalize\n  chmodat\n  chown\n  chownat\n  cl-strtod\n  cl-strtold\n  closein\n  closeout\n  config-h\n  configmake\n  copy-file-range\n  crc-x86_64\n  crypto/md5\n  crypto/sha1\n  crypto/sha256\n  crypto/sha512\n  crypto/sm3\n  cycle-check\n  d-ino\n  d-type\n  di-set\n  dirfd\n  dirname\n  do-release-commit-and-tag\n  dtoastr\n  dup2\n  endian\n  environ\n  error\n  euidaccess\n  exclude\n  exitfail\n  explicit_bzero\n  faccessat\n  fadvise\n  fchdir\n  fchmodat\n  fchownat\n  fclose\n  fcntl\n  fcntl-safer\n  fd-reopen\n  fdatasync\n  fdopen\n  fdutimensat\n  file-has-acl\n  file-type\n  fileblocks\n  filemode\n  filenamecat\n  filevercmp\n  flexmember\n  fnmatch-gnu\n  fopen-safer\n  fprintftime\n  fpurge\n  free-posix\n  freopen\n  freopen-safer\n  fseeko\n  fstatat\n  fsusage\n  fsync\n  ftoastr\n  ftruncate\n  fts\n  full-read\n  full-write\n  gethrxtime\n  getline\n  getloadavg\n  getlogin\n  getndelim2\n  getopt-gnu\n  getpagesize\n  gettext-h\n  gettime\n  gettime-res\n  git-version-gen\n  gitlog-to-changelog\n  gnu-web-doc-update\n  gnumakefile\n  gnupload\n  hard-locale\n  hash\n  hash-triple\n  heap\n  host-os\n  human\n  idcache\n  idx\n  ignore-value\n  inttostr\n  inttypes-h\n  isapipe\n  isatty\n  isblank\n  largefile\n  lchmod\n  ldtoastr\n  lib-ignore\n  libgmp\n  linebuffer\n  link\n  link-follow\n  linkat\n  long-options\n  lstat\n  maintainer-makefile\n  malloc-gnu\n  manywarnings\n  mbrlen\n  mbrtoc32\n  mbrtowc\n  mbschr\n  mbslen\n  mbswidth\n  mbszero\n  mcel-prefer\n  memcasecmp\n  memchr\n  memcmp2\n  mempcpy\n  memrchr\n  minmax\n  mkancesdirs\n  mkdir\n  mkdir-p\n  mkdirat\n  mkfifo\n  mkfifoat\n  mknod\n  mkostemp\n  mkstemp\n  mktime\n  modechange\n  mountlist\n  mpsort\n  nproc\n  nstrftime\n  nullptr\n  obstack\n  open\n  openat-safer\n  parse-datetime\n  parse-datetime2\n  pathmax\n  perl\n  physmem\n  pipe-posix\n  pipe2\n  posix-shell\n  posixtm\n  posixver\n  priv-set\n  progname\n  propername-lite\n  pthread-cond\n  pthread-mutex\n  pthread-thread\n  pthread_sigmask\n  putenv-gnu\n  quote\n  quotearg\n  randint\n  randperm\n  rawmemchr\n  read-file\n  readtokens\n  readtokens0\n  readutmp\n  regex\n  remove\n  renameat\n  renameatu\n  rmdir\n  root-dev-ino\n  safe-read\n  same\n  save-cwd\n  savedir\n  savewd\n  select\n  selinux-at\n  setenv\n  settime\n  sig2str\n  sigaction\n  skipchars\n  smack\n  ssize_t\n  stat-macros\n  stat-size\n  stat-time\n  stdc_leading_zeros\n  stdc_trailing_zeros\n  stdckdint-h\n  stdlib-safer\n  stpcpy\n  strdup-posix\n  strnlen\n  strnumcmp\n  strsignal\n  strtoimax\n  strtoumax\n  symlinkat\n  sys_ioctl-h\n  sys_resource-h\n  sys_stat-h\n  sys_types-h\n  sys_wait-h\n  targetdir\n  tempname\n  termios-h\n  time_rz\n  timer-time\n  timespec\n  tmpdir\n  uname\n  unicodeio\n  unistd-safer\n  unlink-busy\n  unlinkat\n  unlinkdir\n  unlocked-io\n  unsetenv\n  update-copyright\n  useless-if-before-free\n  userspec\n  utimecmp\n  utimens\n  utimensat\n  vasprintf-posix\n  vc-list-files\n  verify\n  verror\n  version-etc-fsf\n  winsz-ioctl\n  winsz-termios\n  write-any-file\n  xalignalloc\n  xalloc\n  xbinary-io\n  xdectoint\n  xfts\n  xgetcwd\n  xgetgroups\n  xgethostname\n  xmemcoll\n  xnanosleep\n  xprintf\n  xprintf-posix\n  xreadlink\n  xstrtod\n  xstrtoimax\n  xstrtol\n  xstrtol-error\n  xstrtold\n  xstrtoumax\n  xvasprintf\n  year2038-recommended\n  yesno\n\"\n\n# Other locale categories that need message catalogs.\nEXTRA_LOCALE_CATEGORIES=LC_TIME\n\n# Additional xgettext options to use.  Use \"\\\\\\newline\" to break lines.\nXGETTEXT_OPTIONS=$XGETTEXT_OPTIONS'\\\\\\\n --flag=asnprintf:3:c-format\\\\\\\n --flag=asprintf:2:c-format\\\\\\\n --flag=error:3:c-format\\\\\\\n --flag=error_at_line:5:c-format\\\\\\\n --flag=vasnprintf:3:c-format\\\\\\\n --flag=vasprintf:2:c-format\\\\\\\n --flag=verror:3:c-format\\\\\\\n --flag=verror_at_line:5:c-format\\\\\\\n --flag=wrapf:1:c-format\\\\\\\n --flag=xasprintf:1:c-format\\\\\\\n --flag=xfprintf:2:c-format\\\\\\\n --flag=xprintf:1:c-format\\\\\\\n --from-code=UTF-8\\\\\\\n'\n\n# Append these, since we use the propername module.\nsee_manual='\"This is a proper name. See the gettext manual, section Names.\"'\nsee_manual=\\'\"$see_manual\"\\'\nXGETTEXT_OPTIONS=$XGETTEXT_OPTIONS'\\\\\\\n --keyword=proper_name:1,'\"$see_manual\"'\\\\\\\n --keyword=proper_name_lite:1,'\"$see_manual\"'\\\\\\\n'\n\ngnulib_tool_option_extras=\"--tests-base=gnulib-tests --with-tests --symlink\\\n --makefile-name=gnulib.mk --automake-subdir\n\"\n\n# Build prerequisites\nbuildreq=\"\\\nautoconf   2.64\nautomake   1.11.2\nautopoint  0.19.2\nbison      -\ngettext    0.19.2\ngit        1.4.4\ngperf      -\ngzip       -\nm4         -\nmakeinfo   6.1\ntexi2pdf   6.1\npatch      -\nperl       5.5\ntar        -\nwget       -\nxz         -\n\"\n\nbootstrap_post_import_hook ()\n{\n  # Automake requires that ChangeLog exist.\n  touch ChangeLog || return 1\n  # List of coreutils programs.  See heading comments in the invoked\n  # script for more info.  Keep this in sync with the rules in\n  (m4f=m4/cu-progs.m4 mkf=src/cu-progs.mk tmp=cu-progs.tmp \\\n    && rm -f $m4f $mkf $tmp-1 $tmp-2 \\\n    && build-aux/gen-lists-of-programs.sh --autoconf >$tmp-1 \\\n    && build-aux/gen-lists-of-programs.sh --automake >$tmp-2 \\\n    && chmod a-w $tmp-1 $tmp-2 \\\n    && mv -f $tmp-1 $m4f && mv -f $tmp-2 $mkf)\n\n  # Regenerate src/single-binary.mk\n  (mkf=src/single-binary.mk tmp=single-binary.tmp \\\n    && rm -f $mkf $tmp \\\n    && build-aux/gen-single-binary.sh src/local.mk >$tmp \\\n    && chmod a-w $tmp \\\n    && mv -f $tmp $mkf)\n\n  # Copy tests/init.sh from Gnulib.\n  $gnulib_tool --copy-file tests/init.sh\n}\n\n\nbootstrap_epilogue()\n{\n  # Since this is a \"GNU\" package, replace this line\n  #   if LC_ALL=C grep 'GNU @PACKAGE@' $(top_srcdir)/* 2>/dev/null \\\n  #      | grep -v 'libtool:' >/dev/null; then\n  # with this:\n  #   if true; then\n  # Why?  That pipeline searches all files in $(top_srcdir), and if you\n  # happen to have large files (or apparently large sparse files), the\n  # first grep may well run out of memory.\n  perl -pi -e 's/if LC_ALL=C grep .GNU .PACKAGE.*; then/if true; then/' \\\n    po/Makefile.in.in\n\n  # Add dummy 'install-html' target, required for packages using\n  # non-recursive makefiles with older gettext.\n  # See https://debbugs.gnu.org/25690\n  if ! grep -w 'install-html' po/Makefile.in.in ; then\n    printf 'install-%s:;\\n' dvi ps pdf html >> po/Makefile.in.in\n  fi\n\n  # Install our git hooks, as long as \"cp\" accepts the --backup option,\n  # so that we can back up any existing files.\n  case $(cp --help) in *--backup*) backup=1;; *) backup=0;; esac\n  if test $backup = 1; then\n    hooks=$(cd scripts/git-hooks && git ls-files)\n    for f in $hooks; do\n      # If it is identical, skip it.\n      cmp scripts/git-hooks/$f .git/hooks/$f > /dev/null \\\n        && continue\n      cp --backup=numbered scripts/git-hooks/$f .git/hooks\n      chmod a-w .git/hooks/$f\n    done\n  fi\n}\n"
        },
        {
          "name": "build-aux",
          "type": "tree",
          "content": null
        },
        {
          "name": "cfg.mk",
          "type": "blob",
          "size": 36.7783203125,
          "content": "# Customize maint.mk                           -*- makefile -*-\n# Copyright (C) 2003-2025 Free Software Foundation, Inc.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n# Used in maint.mk's web-manual rule\nmanual_title = Core GNU utilities\n\n# Use the direct link.  This is guaranteed to work immediately, while\n# it can take a while for the faster mirror links to become usable.\nurl_dir_list = https://ftp.gnu.org/gnu/$(PACKAGE)\n\n# Exclude bundled external projects from syntax checks\nVC_LIST_ALWAYS_EXCLUDE_REGEX = src/blake2/.*$$\n\n# Tests not to run as part of \"make distcheck\".\nlocal-checks-to-skip = \\\n  sc_indent\n\n# Tools used to bootstrap this package, used for \"announcement\".\nbootstrap-tools = autoconf,automake,gnulib,bison\n\n# Now that we have better tests, make this the default.\nexport VERBOSE = yes\n\n# Comparing tarball sizes compressed using different xz presets, we see that\n# an -8e-compressed tarball is only 9KiB larger than the -9e-compressed one.\n# Using -8e is preferred, since that lets the decompression process use half\n# the memory (32MiB rather than 64MiB).\n# $ for i in {7,8,9}{e,}; do \\\n#     (n=$(xz -$i < coreutils-8.15*.tar|wc -c);echo $n $i) & done |sort -nr\n# 5129388 7\n# 5036524 7e\n# 5017476 8\n# 5010604 9\n# 4923016 8e\n# 4914152 9e\nexport XZ_OPT = -8e\n\nold_NEWS_hash = 853a6f5bc2e9d25346d494bef9eaf8a3\n\n# Add an exemption for sc_makefile_at_at_check.\n_makefile_at_at_check_exceptions = \\\n  ' && !/MAKEINFO/ && !/^cu_install_prog/ && !/dynamic-dep/'\n\n# Our help-version script is in a slightly different location.\n_hv_file ?= $(srcdir)/tests/misc/help-version\n\nworld:\n\t./bootstrap && \\\n\t./configure --quiet && \\\n\t$(MAKE) $(AM_MAKEFLAGS) -j $$(nproc 2>/dev/null || echo 1)\n\n# Ensure that the list of O_ symbols used to compute O_FULLBLOCK is complete.\ndd = $(srcdir)/src/dd.c\nsc_dd_O_FLAGS:\n\t@rm -f $@.1 $@.2\n\t@{ echo O_FULLBLOCK; echo O_NOCACHE;\t\t\t\t\\\n\t  perl -nle '/^ +\\| (O_\\w*)$$/ and print $$1' $(dd); } | sort > $@.1\n\t@{ echo O_NOFOLLOW; perl -nle '/{\"[a-z]+\",\\s*(O_\\w+)},/ and print $$1' \\\n\t  $(dd); } | sort > $@.2\n\t@diff -u $@.1 $@.2; diff=$$?;\t\t\t\t\t\\\n\trm -f $@.1 $@.2;\t\t\t\t\t\t\\\n\ttest \"$$diff\" = 0\t\t\t\t\t\t\\\n\t  || { echo '$(ME): $(dd) has inconsistent O_ flag lists'>&2;\t\\\n\t       exit 1; }\n\n# Ensure that dd's definition of LONGEST_SYMBOL stays in sync\n# with the strings from the two affected variables.\ndd_c = $(srcdir)/src/dd.c\nsc_dd_max_sym_length:\nifneq ($(wildcard $(dd_c)),)\n\t@len=$$( (sed -n '/conversions\\[] =$$/,/^};/p' $(dd_c);\\\n\t\t sed -n '/flags\\[] =$$/,/^};/p' $(dd_c) )\t\\\n\t\t|sed -n '/\"/s/^[^\"]*\"\\([^\"]*\\)\".*/\\1/p'| wc -L);\\\n\tmax=$$(sed -n '/^#define LONGEST_SYMBOL /s///p' $(dd_c)\t\\\n\t      |tr -d '\"' | wc -L);\t\t\\\n\tif test \"$$len\" = \"$$max\"; then :; else\t\t\t\\\n\t  echo 'dd.c: LONGEST_SYMBOL is not longest' 1>&2;\t\\\n\t  exit 1;\t\t\t\t\t\t\\\n\tfi\nendif\n\n# Many m4 macros names once began with 'jm_'.\n# On 2004-04-13, they were all changed to start with gl_ instead.\n# Make sure that none are inadvertently reintroduced.\nsc_prohibit_jm_in_m4:\n\t@grep -nE 'jm_[A-Z]'\t\t\t\t\t\t\\\n\t\t$$($(VC_LIST) m4 |grep '\\.m4$$'; echo /dev/null) &&\t\\\n\t    { echo '$(ME): do not use jm_ in m4 macro names'\t\t\\\n\t      1>&2; exit 1; } || :\n\n# Ensure that each root-requiring test is run via the \"check-root\" rule.\nsc_root_tests:\n\t@t1=sc-root.expected; t2=sc-root.actual;\t\t\t\\\n\tgrep -nl '^ *require_root_$$' `$(VC_LIST) tests` |\t\t\\\n\t  sed 's|.*/tests/|tests/|' | sort > $$t1;\t\t\t\\\n\tfor t in $(all_root_tests); do echo $$t; done | sort > $$t2;\t\\\n\tst=0; diff -u $$t1 $$t2 || st=1;\t\t\t\t\\\n\trm -f $$t1 $$t2;\t\t\t\t\t\t\\\n\texit $$st\n\n# Ensure that all version-controlled test cases are listed in $(all_tests).\nsc_tests_list_consistency:\n\t@bs=\"\\\\\";\t\t\t\t\t\t\t\\\n\ttest_extensions_rx=`echo $(TEST_EXTENSIONS)\t\t\t\\\n\t  | sed -e \"s/ /|/g\" -e \"s/$$bs./$$bs$$bs./g\"`;\t\t\t\\\n\t{\t\t\t\t\t\t\t\t\\\n\t  for t in $(all_tests); do echo $$t; done;\t\t\t\\\n\t  cd $(top_srcdir);\t\t\t\t\t\t\\\n\t  $(SHELL) build-aux/vc-list-files tests\t\t\t\\\n\t    | grep -Ev '^tests/(factor/(run|create-test)|init)\\.sh$$'\t\\\n\t    | grep -E \"($$test_extensions_rx)$$\";\t\t\t\\\n\t} | sort | uniq -u | grep . && exit 1; :\n\n# Ensure that all version-controlled test scripts are executable.\nsc_tests_executable:\n\t@set -o noglob 2>/dev/null || set -f;\t\t\t\t   \\\n\tcd $(srcdir);\t\t\t\t\t\t\t   \\\n\tfind_ext=\"-name '' \"`printf -- \"-o -name *%s \" $(TEST_EXTENSIONS)`;\\\n\tfind $(srcdir)/tests/ \\( $$find_ext \\) \\! -perm -u+x -print\t   \\\n\t  | { sed \"s|^$(srcdir)/||\"; git ls-files $(srcdir)/tests/; }\t   \\\n\t  | sort | uniq -d\t\t\t\t\t\t   \\\n\t  | sed -e \"s/^/$(ME): Please make test executable: /\" | grep .\t   \\\n\t    && exit 1; :\n\n# Ensure all gnulib patches apply cleanly\nsc_ensure_gl_diffs_apply_cleanly:\n\t@find $(srcdir)/gl/ -name '*.diff' | while read p; do\t\t\\\n\t  patch --fuzz=0 -f -s -d $(srcdir)/gnulib/ -p1 --dry-run < \"$$p\" >&2 \\\n\t    || { echo \"$$p\" >&2; echo 'To refresh all gl patches run:'\t\\\n\t\t 'make refresh-gnulib-patches' >&2; exit 1; }\t\t\\\n\tdone\n\n# Avoid :>file which doesn't propagate errors\nsc_prohibit_colon_redirection:\n\t@cd $(srcdir)/tests && GIT_PAGER= git grep -En ': *>.*\\|\\|'\t\\\n\t  && { echo '$(ME): '\"The leading colon in :> will hide errors\" >&2; \\\n\t       exit 1; }  \\\n\t  || :\n\n# Ensure emit_mandatory_arg_note() is called if required\nsc_ensure_emit_mandatory_arg_note:\n\t@cd $(srcdir)/src && GIT_PAGER= git \\\n\t  grep -l -- '^ *-[^-].*--.*[^[]=' *.c \\\n\t  | xargs grep -L emit_mandatory_arg_note | grep . \\\n\t  && { echo '$(ME): '\"emit_mandatory_arg_note() missing\" 1>&2; \\\n\t       exit 1; } || :\n\n# Create a list of regular expressions matching the names\n# of files included from system.h.  Exclude a couple.\n.re-list:\n\t@sed -n '/^# *include /s///p' $(srcdir)/src/system.h \\\n\t  | grep -Ev 'sys/(param|file)\\.h' \\\n\t  | sed 's/ .*//;;s/^[\"<]/^# *include [<\"]/;s/\\.h[\">]$$/\\\\.h[\">]/' \\\n\t  > $@-t\n\t@mv $@-t $@\n\ndefine gl_trap_\n  Exit () { set +e; (exit $$1); exit $$1; };\t\t\t\t\\\n  for sig in 1 2 3 13 15; do\t\t\t\t\t\t\\\n    eval \"trap 'Exit $$(expr $$sig + 128)' $$sig\";\t\t\t\\\n  done\nendef\n\n# Files in src/ should not include directly any of\n# the headers already included via system.h.\nsc_system_h_headers: .re-list\n\t@if test -f $(srcdir)/src/system.h; then\t\t\t\\\n\t  trap 'rc=$$?; rm -f .re-list; exit $$rc' 0;\t\t\t\\\n\t  $(gl_trap_);\t\t\t\t\t\t\t\\\n\t  grep -nE -f .re-list\t\t\t\t\t\t\\\n\t      $$($(VC_LIST_EXCEPT) | grep -E '^($(srcdir)/)?src/')\t\\\n\t    && { echo '$(ME): the above are already included via system.h'\\\n\t\t  1>&2;  exit 1; } || :;\t\t\t\t\\\n\tfi\n\n# Files in src/ should not use '%s' notation in format strings,\n# i.e., single quotes around %s (or similar) should be avoided.\nsc_prohibit_quotes_notation:\n\t@cd $(srcdir)/src && GIT_PAGER= git grep -n \"\\\".*[\\`']%s'.*\\\"\" *.c \\\n\t  && { echo '$(ME): '\"Use quote() to avoid quoted '%s' notation\" 1>&2; \\\n\t       exit 1; }  \\\n\t  || :\n\nerror_fns = (error|diagnose)\n\n# Files in src/ should quote all strings in error() output, so that\n# unexpected input chars like \\r etc. don't corrupt the error.\n# In edge cases this can be avoided by putting the format string\n# on a separate line to the arguments, or the arguments in parenthesis.\nsc_error_quotes:\n\t@cd $(srcdir)/src \\\n\t  && GIT_PAGER= git grep -E -n '$(error_fns) *\\(.*%s.*, [^(]*\\);$$' \\\n\t  *.c | grep -v ', q' \\\n\t  && { echo '$(ME): '\"Use quote() for error string arguments\" 1>&2; \\\n\t       exit 1; }  \\\n\t  || :\n\n# Files in src/ should quote all file names in error() output\n# using quotef(), to provide quoting only when necessary,\n# but also provide better support for copy and paste when used.\nsc_error_shell_quotes:\n\t@cd $(srcdir)/src && \\\n\t  { GIT_PAGER= git grep -E \\\n\t    '$(error_fns) \\(.*%s[:\"], .*(name|file)[^\"]*\\);$$' *.c; \\\n\t    GIT_PAGER= git grep -E \\\n\t    ' quote[ _].*file' *.c; } \\\n\t  | grep -Ev '(quotef|q[^ ]*name)' \\\n\t  && { echo '$(ME): '\"Use quotef() for colon delimited names\" 1>&2; \\\n\t       exit 1; }  \\\n\t  || :\n\n# Files in src/ should quote all file names in error() output\n# using quoteaf() when the name is separated with spaces,\n# to distinguish the file name at issue and\n# to provide better support for copy and paste.\nsc_error_shell_always_quotes:\n\t@cd $(srcdir)/src && GIT_PAGER= git grep -E \\\n\t    '$(error_fns) \\(.*[^:] %s[ \"].*, .*(name|file)[^\"]*\\);$$' \\\n\t    *.c | grep -Ev '(quoteaf|q[^ ]*name)' \\\n\t  && { echo '$(ME): '\"Use quoteaf() for space delimited names\" 1>&2; \\\n\t       exit 1; }  \\\n\t  || :\n\t@cd $(srcdir)/src && GIT_PAGER= git grep -E -A1 \\\n\t    '$(error_fns) \\([^%]*[^:] %s[ \"]' *.c | grep 'quotef' \\\n\t  && { echo '$(ME): '\"Use quoteaf() for space delimited names\" 1>&2; \\\n\t       exit 1; }  \\\n\t  || :\n\n# Avoid unstyled quoting to internal slots and thus destined for diagnostics\n# as that can leak unescaped control characters to the output, when using\n# the default \"literal\" quoting style.\n# Instead use quotef(), or quoteaf() or in edge cases quotearg_n_style_colon().\n# A more general PCRE would be @prohibit='quotearg_.*(?!(style|buffer))'\nsc_prohibit-quotearg:\n\t@prohibit='quotearg(_n)?(|_colon|_char|_mem) ' \\\n\tin_vc_files='\\.c$$' \\\n\thalt='Unstyled diagnostic quoting detected' \\\n\t  $(_sc_search_regexp)\n\nsc_prohibit-skip:\n\t@prohibit='\\|\\| skip ' \\\n\thalt='Use skip_ not skip' \\\n\t  $(_sc_search_regexp)\n\nsc_sun_os_names:\n\t@grep -nEi \\\n\t    'solaris[^[:alnum:]]*2\\.(7|8|9|[1-9][0-9])|sunos[^[:alnum:]][6-9]' \\\n\t    $$($(VC_LIST_EXCEPT)) &&\t\t\t\t\t\\\n\t  { echo '$(ME): found misuse of Sun OS version numbers' 1>&2;\t\\\n\t    exit 1; } || :\n\n# Ensure that the list of programs and author names is accurate.\n# We need a UTF8 locale.  If a lack of locale support or a missing\n# translation inhibits printing of UTF-8 names, just skip this test.\nau_dotdot = authors-dotdot\nau_actual = authors-actual\nsc_check-AUTHORS: $(all_programs)\n\t@locale=en_US.UTF-8;\t\t\t\t\\\n\tLC_ALL=$$locale ./src/factor --version\t\t\\\n\t    | grep ' Torbjorn '\t> /dev/null\t\t\\\n\t  && { echo \"$@: skipping this check\"; exit 0; }; \\\n\trm -f $(au_actual) $(au_dotdot);\t\t\\\n\tfor i in `ls $(all_programs)\t\t\t\\\n\t    | sed -e 's,^src/,,' -e 's,$(EXEEXT)$$,,'\t\\\n\t    | sed /libstdbuf/d\t\t\t\t\\\n\t    | $(ASSORT) -u`; do\t\t\t\t\\\n\t  test \"$$i\" = '[' && continue;\t\t\t\\\n\t  exe=$$i;\t\t\t\t\t\\\n\t  if test \"$$i\" = install; then\t\t\t\\\n\t    exe=ginstall;\t\t\t\t\\\n\t  elif test \"$$i\" = test; then\t\t\t\\\n\t    exe='[';\t\t\t\t\t\\\n\t  fi;\t\t\t\t\t\t\\\n\t  LC_ALL=$$locale ./src/$$exe --version\t\t\\\n\t    | perl -0 -p -e 's/,\\n/, /gm'\t\t\\\n\t    | sed -n -e '/Written by /{ s//'\"$$i\"': /;'\t\\\n\t\t  -e 's/,* and /, /; s/\\.$$//; p; }';\t\\\n\tdone > $(au_actual) &&\t\t\t\t\\\n\tsed -n '/^[^ ][^ ]*:/p' $(srcdir)/AUTHORS > $(au_dotdot) \\\n\t  && diff $(au_actual) $(au_dotdot) \\\n\t  && rm -f $(au_actual) $(au_dotdot)\n\n# Ensure the alternative __attribute (keyword) form isn't used as\n# that form is not elided where required.  Also ensure that we don't\n# directly use attributes already defined by gnulib.\n# TODO: move the check for _GL... attributes to gnulib.\nsc_prohibit-gl-attributes:\n\t@prohibit='__attribute |__(unused|pure|const)__'\t\\\n\tin_vc_files='\\.[ch]$$'\t\t\t\t\t\\\n\thalt='Use _GL... attribute macros'\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Prefer the const declaration form, with const following the type\nsc_prohibit-const-char:\n\t@prohibit='const char \\*'\t\t\t\t\\\n\tin_vc_files='\\.[ch]$$'\t\t\t\t\t\\\n\thalt='Use char const *, not const char *'\t\t\\\n\t  $(_sc_search_regexp)\n\n# Look for lines longer than 80 characters, except omit:\n# - urls\n# - the fdl.texi file copied from gnulib,\n# - the help2man script copied from upstream,\n# - tests involving long checksum lines, and\n# - the 'pr' test cases.\nFILTER_LONG_LINES =\t\t\t\t\t\t\\\n  \\|^[^:]*NEWS:.*https\\{,1\\}://| d;\t\t\t\t\t\\\n  \\|^[^:]*doc/fdl.texi:| d;\t\t\t\t\t\\\n  \\|^[^:]*man/help2man:| d;\t\t\t\t\t\\\n  \\|^[^:]*tests/cksum/sha[0-9]*sum.*\\.pl[-:]| d;\t\t\t\\\n  \\|^[^:]*tests/pr/|{ \\|^[^:]*tests/pr/pr-tests:| !d; };\nsc_long_lines:\n\t@wc -L /dev/null >/dev/null 2>/dev/null\t\t\t\t\\\n\t   || { echo \"$@: skipping: wc -L not supported\"; exit 0; };\t\\\n\tsed -r 1q /dev/null 2>/dev/null\t\t\t\t\t\\\n\t   || { echo \"$@: skipping: sed -r not supported\"; exit 0; };\t\\\n\tfiles=$$($(VC_LIST_EXCEPT) | xargs wc -L | sed -rn '/ total$$/d;\\\n\t\t  s/^ *(8[1-9]|9[0-9]|[0-9]{3,}) //p');\t\t\t\\\n\thalt='line(s) with more than 80 characters; reindent';\t\t\\\n\tfor file in $$files; do\t\t\t\t\t\t\\\n\t  expand $$file | grep -nE '^.{80}.' |\t\t\t\t\\\n\t  sed -e \"s|^|$$file:|\" -e '$(FILTER_LONG_LINES)';\t\t\\\n\tdone | grep . && { msg=\"$$halt\" $(_sc_say_and_exit) } || :\n\n# Option descriptions should not start with a capital letter.\n# One could grep source directly as follows:\n# grep -E \" {2,6}-.*[^.]  [A-Z][a-z]\" $$($(VC_LIST_EXCEPT) | grep '\\.c$$')\n# but that would miss descriptions not on the same line as the -option.\nsc_option_desc_uppercase: $(ALL_MANS)\n\t@grep '^\\\\fB\\\\-' -A1 man/*.1 | LC_ALL=C grep '\\.1.[A-Z][a-z]'\t\\\n\t  && { echo 1>&2 '$@: found initial capitals in --help'; exit 1; } || :\n\n# '--' should not be treated as '–' (U+2013 EN DASH) in long option names.\nsc_texi_long_option_escaped: doc/coreutils.info\n\t@grep ' –[^ ]' '$<'\t\t\t\t\t\t\\\n\t  && { echo 1>&2 '$@: found unquoted --long-option'; exit 1; } || :\n\n# Ensure all man/*.[1x] files are present.\nsc_man_file_correlation: check-x-vs-1 check-programs-vs-x\n\n# Ensure that for each .x file in the 'man/' subdirectory, there is a\n# corresponding .1 file in the definition of $(EXTRA_MANS).\n# But since that expansion usually lacks programs like arch and hostname,\n# add them here manually.\n.PHONY: check-x-vs-1\ncheck-x-vs-1:\n\t@PATH=./src$(PATH_SEPARATOR)$$PATH; export PATH;\t\t\\\n\tt=$@-t;\t\t\t\t\t\t\t\t\\\n\t(cd $(srcdir)/man && ls -1 *.x)\t\t\t\t\t\\\n\t  | sed 's/\\.x$$//' | $(ASSORT) > $$t;\t\t\t\t\\\n\t(echo $(patsubst man/%,%,$(ALL_MANS))\t\t\t\t\\\n\t  | tr -s ' ' '\\n' | sed 's/\\.1$$//')\t\t\t\t\\\n\t  | $(ASSORT) -u | diff - $$t || { rm $$t; exit 1; };\t\t\\\n\trm $$t\n\n# Ensure that non-trivial .x files in the 'man/' subdirectory,\n# i.e., files exceeding a line count of 20 or a byte count of 1000,\n# contain a Copyright notice.\n.PHONY: sc_man_check_x_copyright\nsc_man_check_x_copyright:\n\t@status=0;\t\t\t\t\t\t\t\\\n\tcd $(srcdir) && wc -cl man/*.x | head -n-1\t\t\t\\\n\t  | awk '$$1 >= 20 || $$2 >= 1000 {print $$3}'\t\t\t\\\n\t  | xargs grep -L 'Copyright .* Free Software Foundation'\t\\\n\t  | grep .\t\t\t\t\t\t\t\\\n\t  && { echo  1>&2 '$@: exceeding file size/line count limit'\t\\\n\t\t  '- please add a copyright note'; status=1; };\t\t\\\n\texit $$status\n\n# Writing a portable rule to generate a manpage like '[.1' would be\n# a nightmare, so filter that out.\nall-progs-but-lbracket = $(filter-out [,$(patsubst src/%,%,$(all_programs)))\n\n# Ensure that for each coreutils program there is a corresponding\n# '.x' file in the 'man/' subdirectory.\n.PHONY: check-programs-vs-x\ncheck-programs-vs-x:\n\t@status=0;\t\t\t\t\t\\\n\tfor p in dummy $(all-progs-but-lbracket); do\t\\\n\t  case $$p in *.so) continue;; esac;\t\t\\\n\t  test $$p = dummy && continue;\t\t\t\\\n\t  test $$p = ginstall && p=install || : ;\t\\\n\t  test -f $(srcdir)/man/$$p.x\t\t\t\\\n\t    || { echo missing $$p.x 1>&2; status=1; };\t\\\n\tdone;\t\t\t\t\t\t\\\n\texit $$status\n\n# Ensure we can check out on case insensitive file systems\nsc_case_insensitive_file_names: src/uniq\n\t@git -C $(srcdir) ls-files | sort -f | src/uniq -Di | grep . && \\\n\t  { echo \"$(ME): the above file(s) conflict on case insensitive\" \\\n\t  \" file systems\" 1>&2; exit 1; } || :\n\n# Ensure that the end of each release's section is marked by two empty lines.\nsc_NEWS_two_empty_lines:\n\t@sed -n 4,/Noteworthy/p $(srcdir)/NEWS\t\t\t\t\\\n\t    | perl -n0e '/(^|\\n)\\n\\n\\* Noteworthy/ or exit 1'\t\t\\\n\t  || { echo '$(ME): use two empty lines to separate NEWS sections' \\\n\t\t 1>&2; exit 1; } || :\n\n# With split lines, don't leave an operator at end of line.\n# Instead, put it on the following line, where it is more apparent.\n# Don't bother checking for \"*\" at end of line, since it provokes\n# far too many false positives, matching constructs like \"TYPE *\".\n# Similarly, omit \"=\" (initializers).\nbinop_re_ ?= [-/+^!<>]|[-/+*^!<>=]=|&&?|\\|\\|?|<<=?|>>=?\nsc_prohibit_operator_at_end_of_line:\n\t@prohibit='. ($(binop_re_))$$'\t\t\t\t\t\\\n\tin_vc_files='\\.[chly]$$'\t\t\t\t\t\\\n\thalt='found operator at end of line'\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Partial substitutes for GNU extensions \\< and \\> in regexps.\nbegword = (^|[^_[:alnum:]])\nendword = ($$|[^_[:alnum:]])\n\n# Don't use address of \"stat\" or \"lstat\" functions\nsc_prohibit_stat_macro_address:\n\t@prohibit='$(begword)l?stat '':|&l?stat$(endword)'\t\t\\\n\thalt='stat() and lstat() may be function-like macros'\t\t\\\n\t  $(_sc_search_regexp)\n\n# Ensure that date's --help output stays in sync with the info\n# documentation for GNU strftime.  The only exception is %N and %q,\n# which date accepts but GNU strftime does not.\n#\n# \"info foo\" fails with error, but not \"info foo >/dev/null\".\nextract_char = sed 's/^[^%][^%]*%\\(.\\).*/\\1/'\nsc_strftime_check:\n\t@if test -f $(srcdir)/src/date.c; then\t\t\t\t\\\n\t  if info libc date calendar format 2>/dev/null |\t\t\\\n\t\tgrep \"^ *['\\`]%.'$$\" >$@-tmp; then\t\t\t\\\n\t    { echo N; echo q; $(extract_char) $@-tmp; }| sort\t\t\\\n\t      >$@-info;\t\t\t\t\t\t\t\\\n\t    grep '^  %.  ' $(srcdir)/src/date.c | sort\t\t\t\\\n\t      | $(extract_char) > $@-src;\t\t\t\t\\\n\t    diff -u $@-src $@-info || exit 1;\t\t\t\t\\\n\t  else\t\t\t\t\t\t\t\t\\\n\t    echo '$(ME): skipping $@: libc info not installed' 1>&2;\t\\\n\t  fi;\t\t\t\t\t\t\t\t\\\n\t  rm -f $@-info $@-src $@-tmp;\t\t\t\t\t\\\n\tfi\n\n# Indent only with spaces.\nsc_prohibit_tab_based_indentation:\n\t@prohibit='^ *\t'\t\t\t\t\t\t\\\n\thalt='TAB in indentation; use only spaces'\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Enforce lowercase 'e' in \"I.e.\".\nsc_prohibit_uppercase_id_est:\n\t@prohibit='I\\.E\\.'\t\t\t\t\t\t\\\n\thalt='Uppercase \"Id Est\" abbreviation; use \"I.e.,\" instead'\t\\\n\t  $(_sc_search_regexp)\n\n# Enforce double-space before \"I.e.\" at the beginning of a sentence.\nsc_ensure_dblspace_after_dot_before_id_est:\n\t@prohibit='\\. I\\.e\\.'\t\t\t\t\t\t\\\n\thalt='Single space after dot before \"i.e.\"; use \".  i.e.\" instead' \\\n\t  $(_sc_search_regexp)\n\n# Enforce comma after \"i.e.\" (at least before a blank or at EOL).\nsc_ensure_comma_after_id_est:\n\t@prohibit='[Ii]\\.e\\.( |$$)'\t\t\t\t\t\\\n\thalt='Missing comma after \"i.e.\"; use \"i.e.,\" instead'\t\t\\\n\t  $(_sc_search_regexp)\n\n# The SEE ALSO section of a man page should not be terminated with\n# a period.  Check the first line after each \"SEE ALSO\" line in man/*.x:\nsc_prohibit_man_see_also_period:\n\t@grep -nB1 '\\.$$' $$($(VC_LIST_EXCEPT) | grep 'man/.*\\.x$$')\t\\\n\t    | grep -A1 -e '-\\[SEE ALSO]' | grep '\\.$$' &&\t\t\\\n\t  { echo '$(ME): do not end \"SEE ALSO\" section with a period'\t\\\n\t      1>&2; exit 1; } || :\n\nsc_prohibit_exit_write_error:\n\t@prohibit='error.*EXIT_FAILURE.*write error' \\\n\tin_vc_files='\\.c$$' \\\n\thalt='Use write_error() instead' \\\n\t  $(_sc_search_regexp)\n\nsc_prohibit_NULL:\n\t@prohibit='$(begword)NULL$(endword)'\t\t\t\t\\\n\tin_vc_files='\\.[ch]$$'\t\t\t\t\t\t\\\n\thalt='use nullptr instead'\t\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Don't use \"indent-tabs-mode: nil\" anymore.  No longer needed.\nsc_prohibit_emacs__indent_tabs_mode__setting:\n\t@prohibit='^( *[*#] *)?indent-tabs-mode:'\t\t\t\\\n\thalt='use of emacs indent-tabs-mode: setting'\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Ensure that tests don't include a redundant fail=0.\nsc_prohibit_fail_0:\n\t@prohibit='$(begword)fail=0$(endword)'\t\t\t\t\\\n\thalt='fail=0 initialization'\t\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Ensure that tests don't use `cmd ... && fail=1` as that hides crashes.\n# The \"exclude\" expression allows common idioms like `test ... && fail=1`\n# and the 2>... portion allows commands that redirect stderr and so probably\n# independently check its contents and thus detect any crash messages.\nsc_prohibit_and_fail_1:\n\t@prohibit='&& fail=1'\t\t\t\t\t\t\\\n\texclude='(returns_|stat|kill|test |EGREP|grep|compare|2> *[^/])' \\\n\thalt='&& fail=1 detected. Please use: returns_ 1 ... || fail=1'\t\\\n\tin_vc_files='^tests/'\t\t\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Ensure that tests don't use `cmd ... || fail` as that's a noop.\nsc_prohibit_or_fail:\n\t@prohibit='\\|\\| fail$$'\t\t\t\t\t\t\\\n\texclude=':#'\t\t\t\t\t\t\t\\\n\thalt='|| fail detected. Please use: || fail=1'\t\t\t\\\n\tin_vc_files='^tests/'\t\t\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Ensure that env vars are not passed through returns_ as\n# that was seen to fail on FreeBSD /bin/sh at least\nsc_prohibit_env_returns:\n\t@prohibit='=[^ ]* returns_ '\t\t\t\t\t\\\n\texclude='_ returns_ '\t\t\t\t\t\t\\\n\thalt='Passing env vars to returns_ is non portable'\t\t\\\n\tin_vc_files='^tests/'\t\t\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# The mode part of a setfacl -m option argument must be three bytes long.\n# I.e., an argument of user:bin:rw or user:bin:r will make Solaris 10's\n# setfacl reject it with: \"Unrecognized character found in mode field\".\n# Use hyphens to give it a length of 3: \"...:rw-\" or \"...:r--\".\nsc_prohibit_short_facl_mode_spec:\n\t@prohibit='$(begword)setfacl .*-m.*:.*:[rwx-]{1,2} '\t\t\\\n\thalt='setfacl mode string length < 3; extend with hyphen(s)'\t\\\n\t  $(_sc_search_regexp)\n\n# Ensure that \"stdio--.h\" is used where appropriate.\nsc_require_stdio_safer:\n\t@if $(VC_LIST_EXCEPT) | grep -l '\\.[ch]$$' > /dev/null; then\t\\\n\t  files=$$(grep -El '$(begword)freopen ?\\(' $$($(VC_LIST_EXCEPT)\\\n\t      | grep '\\.[ch]$$'));\t\t\t\t\t\\\n\t  test -n \"$$files\" && grep -LE 'include \"stdio--.h\"' $$files\t\\\n\t      | grep . &&\t\t\t\t\t\t\\\n\t  { echo '$(ME): the above files should use \"stdio--.h\"'\t\\\n\t\t1>&2; exit 1; } || :;\t\t\t\t\t\\\n\telse :;\t\t\t\t\t\t\t\t\\\n\tfi\n\n# Ensure that \"stdlib--.h\" is used where appropriate.\nsc_require_stdlib_safer:\n\t@if $(VC_LIST_EXCEPT) | grep -l '\\.[ch]$$' > /dev/null; then\t\\\n\t  files=$$(grep -El '$(begword)mkstemp ?\\(' $$($(VC_LIST_EXCEPT)\\\n\t      | grep '\\.[ch]$$'));\t\t\t\t\t\\\n\t  test -n \"$$files\" && grep -LE 'include \"stdlib--.h\"' $$files\t\\\n\t      | grep . &&\t\t\t\t\t\t\\\n\t  { echo '$(ME): the above files should use \"stdlib--.h\"'\t\\\n\t\t1>&2; exit 1; } || :;\t\t\t\t\t\\\n\telse :;\t\t\t\t\t\t\t\t\\\n\tfi\n\nsc_prohibit_perl_hash_quotes:\n\t@prohibit=\"\\{'[A-Z_]+' *[=}]\"\t\t\t\t\t\\\n\thalt=\"in Perl code, write \\$$hash{KEY}, not \\$$hash{'K''EY'}\"\t\\\n\t  $(_sc_search_regexp)\n\n# Prefer xnanosleep over other less-precise sleep methods\nsc_prohibit_sleep:\n\t@prohibit='$(begword)(nano|u)?sleep \\('\t\t\t\t\\\n\thalt='prefer xnanosleep over other sleep interfaces'\t\t\\\n\t  $(_sc_search_regexp)\n\n# Use print_ver_ (from init.cfg), not open-coded $VERBOSE check.\nsc_prohibit_verbose_version:\n\t@prohibit='test \"\\$$VERBOSE\" = yes && .* --version'\t\t\\\n\thalt='use the print_ver_ function instead...'\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Enforce print_ver_ tracking of dependencies\n# Each coreutils specific program a test requires\n# should be tagged by calling through env(1).\nsc_env_test_dependencies:\n\t@cd $(top_srcdir) && GIT_PAGER= git grep -E \\\n\t    \"env ($$(build-aux/gen-lists-of-programs.sh --list-progs | \\\n\t\tgrep -vF '[' |paste -d'|' -s))\" tests | \\\n\t    sed \"s/\\([^:]\\):.*env \\([^)' ]*\\).*/\\1 \\2/\" | uniq | \\\n\t    while read test prog; do \\\n\t      printf '%s' $$test | grep '\\.pl$$' >/dev/null && continue; \\\n\t      grep \"print_ver_.* $$prog\" $$test >/dev/null \\\n\t\t|| echo $$test should call: print_ver_ $$prog; \\\n\t    done | grep . && exit 1 || :\n\n# Use framework_failure_, not the old name without the trailing underscore.\nsc_prohibit_framework_failure:\n\t@prohibit='$(begword)framework_''failure$(endword)'\t\t\\\n\thalt='use framework_failure_ instead'\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Prohibit the use of `...` in tests/.  Use $(...) instead.\nsc_prohibit_test_backticks:\n\t@prohibit='`' in_vc_files='^tests/'\t\t\t\t\\\n\thalt='use $$(...), not `...` in tests/'\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Ensure that compare is used to check empty files\n# so that the unexpected contents are displayed\nsc_prohibit_test_empty:\n\t@prohibit='test -s.*&&' in_vc_files='^tests/'\t\t\t\\\n\thalt='use `compare /dev/null ...`, not `test -s ...` in tests/'\t\\\n\t  $(_sc_search_regexp)\n\n# Programs like sort, ls, expr use PROG_FAILURE in place of EXIT_FAILURE.\n# Others, use the EXIT_CANCELED, EXIT_ENOENT, etc. macros defined in system.h.\n# In those programs, ensure that EXIT_FAILURE is not used by mistake.\nsc_some_programs_must_avoid_exit_failure:\n\t@cd $(srcdir)\t\t\t\t\t\t\t\\\n\t&& grep -nw EXIT_FAILURE\t\t\t\t\t\\\n\t    $$(git grep -El '[^T]_FAILURE|EXIT_CANCELED' src/)\t\t\\\n\t  | grep -v '^src/system\\.h:'\t\t\t\t\t\\\n\t  | grep -vE '= EXIT_FAILURE|return .* \\?' | grep .\t\t\\\n\t    && { echo '$(ME): do not use EXIT_FAILURE in the above'\t\\\n\t\t  1>&2; exit 1; } || :\n\n# Ensure that tests call the get_min_ulimit_v_ function if using ulimit -v\nsc_prohibit_test_ulimit_without_require_:\n\t@(git -C $(srcdir) grep -l get_min_ulimit_v_ tests;\t\t\\\n\t  git -C $(srcdir) grep -l 'ulimit -v' tests)\t\t\t\\\n\t  | sort | uniq -u | grep . && { echo \"$(ME): the above test(s)\"\\\n\t  \" should match get_min_ulimit_v_ with ulimit -v\" 1>&2; exit 1; } || :\n\n# Ensure that tests call the cleanup_ function if using background processes\nsc_prohibit_test_background_without_cleanup_:\n\t@(git -C $(srcdir) grep -El '( &$$|&[^&]*=\\$$!)' tests;\t\t\\\n\t  git -C $(srcdir) grep -l 'cleanup_()' tests | sed p)\t\t\\\n\t  | sort | uniq -u | grep . && { echo \"$(ME): the above test(s)\"\\\n\t  \" should use cleanup_ for background processes\" 1>&2; exit 1; } || :\n\n# Ensure that tests call the print_ver_ function for programs which are\n# actually used in that test.\nsc_prohibit_test_calls_print_ver_with_irrelevant_argument:\n\t@git -C $(srcdir) grep -w print_ver_ tests\t\t\t\\\n\t  | sed 's#:print_ver_##'\t\t\t\t\t\\\n\t  | { fail=0;\t\t\t\t\t\t\t\\\n\t      while read file name; do\t\t\t\t\t\\\n\t\tfor i in $$name; do\t\t\t\t\t\\\n\t\t  case \"$$i\" in install) i=ginstall;; esac;\t\t\\\n\t\t  grep -w \"$$i\" $$file|grep -vw print_ver_|grep . >/dev/null \\\n\t\t    || { fail=1;\t\t\t\t\t\\\n\t\t\t echo \"*** Test: $$file, offending: $$i.\" 1>&2; };\\\n\t\tdone;\t\t\t\t\t\t\t\\\n\t      done;\t\t\t\t\t\t\t\\\n\t      test $$fail = 0 || exit 1;\t\t\t\t\\\n\t    } || { echo \"$(ME): the above test(s) call print_ver_ for\"\t\\\n\t\t    \"program(s) they don't use\" 1>&2; exit 1; }\n\n# Exempt the contents of any usage function from the following.\n_continued_string_col_1 = \\\ns/^usage .*?\\n}//ms;/\\\\\\n\\w/ and print (\"$$ARGV\\n\"),$$e=1;END{$$e||=0;exit $$e}\n# Ding any source file that has a continued string with an alphabetic in the\n# first column of the following line.  We prohibit them because they usually\n# trigger false positives in tools that try to map an arbitrary line number\n# to the enclosing function name.  Of course, very many strings do precisely\n# this, *when they are part of the usage function*.  That is why we exempt\n# the contents of any function named \"usage\".\nsc_prohibit_continued_string_alpha_in_column_1:\n\t@perl -0777 -ne '$(_continued_string_col_1)' \\\n\t    $$($(VC_LIST_EXCEPT) | grep '\\.[ch]$$') \\\n\t  || { echo '$(ME): continued string with word in first column' \\\n\t\t1>&2; exit 1; } || :\n# Use this to list offending lines:\n# git ls-files |grep '\\.[ch]$' | xargs \\\n#   perl -n -0777 -e 's/^usage.*?\\n}//ms;/\\\\\\n\\w/ and print \"$ARGV\\n\"' \\\n#     | xargs grep -A1 '\\\\$'|grep '\\.[ch][:-][_a-zA-Z]'\n\n\n###########################################################\n_p0 = \\([^\"'/]\\|\"\\([^\\\"]\\|[\\].\\)*\"\\|'\\([^\\']\\|[\\].\\)*'\n_pre = $(_p0)\\|[/][^\"'/*]\\|[/]\"\\([^\\\"]\\|[\\].\\)*\"\\|[/]'\\([^\\']\\|[\\].\\)*'\\)*\n_pre_anchored = ^\\($(_pre)\\)\n_comment_and_close = [^*]\\|[*][^/*]\\)*[*][*]*/\n# help font-lock mode: '\n\n# A sed expression that removes ANSI C and ISO C99 comments.\n# Derived from the one in GNU gettext's 'moopp' preprocessor.\n_sed_remove_comments =\t\t\t\t\t\\\n/[/][/*]/{\t\t\t\t\t\t\\\n  ta;\t\t\t\t\t\t\t\\\n  :a;\t\t\t\t\t\t\t\\\n  s,$(_pre_anchored)//.*,\\1,;\t\t\t\t\\\n  te;\t\t\t\t\t\t\t\\\n  s,$(_pre_anchored)/[*]\\($(_comment_and_close),\\1 ,;\t\\\n  ta;\t\t\t\t\t\t\t\\\n  /^$(_pre)[/][*]/{\t\t\t\t\t\\\n    s,$(_pre_anchored)/[*].*,\\1 ,;\t\t\t\\\n    tu;\t\t\t\t\t\t\t\\\n    :u;\t\t\t\t\t\t\t\\\n    n;\t\t\t\t\t\t\t\\\n    s,^\\($(_comment_and_close),,;\t\t\t\\\n    tv;\t\t\t\t\t\t\t\\\n    s,^.*$$,,;\t\t\t\t\t\t\\\n    bu;\t\t\t\t\t\t\t\\\n    :v;\t\t\t\t\t\t\t\\\n  };\t\t\t\t\t\t\t\\\n  :e;\t\t\t\t\t\t\t\\\n}\n# Quote all single quotes.\n_sed_rm_comments_q = $(subst ','\\'',$(_sed_remove_comments))\n# help font-lock mode: '\n\n_space_before_paren_exempt =? \\\\n\\\\$$\n_space_before_paren_exempt = \\\n  (^ *\\#|\\\\n\\\\$$|%s\\(to %s|(date|group|character)\\(s\\))\n# Ensure that there is a space before each open parenthesis in C code.\nsc_space_before_open_paren:\n\t@if $(VC_LIST_EXCEPT) | grep -l '\\.[ch]$$' > /dev/null; then\t\\\n\t  fail=0;\t\t\t\t\t\t\t\\\n\t  for c in $$($(VC_LIST_EXCEPT) | grep '\\.[ch]$$'); do\t\t\\\n\t    sed '$(_sed_rm_comments_q)' $$c 2>/dev/null\t\t\t\\\n\t      | grep -i '[[:alnum:]]('\t\t\t\t\t\\\n\t      | grep -vE '$(_space_before_paren_exempt)'\t\t\\\n\t      | grep . && { fail=1; echo \"*** $$c\"; };\t\t\t\\\n\t  done;\t\t\t\t\t\t\t\t\\\n\t  test $$fail = 1 &&\t\t\t\t\t\t\\\n\t    { echo '$(ME): the above files lack a space-before-open-paren' \\\n\t\t1>&2; exit 1; } || :;\t\t\t\t\t\\\n\telse :;\t\t\t\t\t\t\t\t\\\n\tfi\n\n# Similar to the gnulib maint.mk rule for sc_prohibit_strcmp\n# Use STREQ_LEN or STRPREFIX rather than comparing strncmp == 0, or != 0.\nsc_prohibit_strncmp:\n\t@prohibit='^[^#].*str''ncmp *\\('\t\t\t\t\\\n\thalt='use STREQ_LEN or STRPREFIX instead of str''ncmp'\t\t\\\n\t  $(_sc_search_regexp)\n\n# Enforce recommended preprocessor indentation style.\nsc_preprocessor_indentation:\n\t@if cppi --version >/dev/null 2>&1; then\t\t\t\\\n\t  $(VC_LIST_EXCEPT) | grep '\\.[ch]$$' | xargs cppi -a -c\t\\\n\t    || { echo '$(ME): incorrect preprocessor indentation' 1>&2;\t\\\n\t\texit 1; };\t\t\t\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t  echo '$(ME): skipping test $@: cppi not installed' 1>&2;\t\\\n\tfi\n\n# THANKS.in is a list of name/email pairs for people who are mentioned in\n# commit logs (and generated ChangeLog), but who are not also listed as an\n# author of a commit.  Name/email pairs of commit authors are automatically\n# extracted from the repository.  As a very minor factorization, when\n# someone who was initially listed only in THANKS.in later authors a commit,\n# this rule detects that their pair may now be removed from THANKS.in.\nsc_THANKS_in_duplicates:\n\t@{ git -C $(srcdir) log --pretty=format:%aN | sort -u;\t\t\\\n\t    cut -b-36 $(srcdir)/THANKS.in\t\t\t\t\\\n\t      | sed '/^$$/,/^$$/!d;/^$$/d;s/  *$$//'; }\t\t\t\\\n\t  | sort | uniq -d | grep .\t\t\t\t\t\\\n\t    && { echo '$(ME): remove the above names from THANKS.in'\t\\\n\t\t  1>&2; exit 1; } || :\n\n# Ensure the contributor list stays sorted.  However, if the system's\n# en_US.UTF-8 locale data is erroneous, give a diagnostic and skip\n# this test.  This affects OS X, up to at least 10.11.6.\n# Use our sort as other implementations may result in a different order.\nsc_THANKS_in_sorted:\n\t@printf 'a\\n.b\\n'|LC_ALL=en_US.UTF-8 src/sort -c 2> /dev/null\t\\\n\t  && {\t\t\t\t\t\t\t\t\\\n\t    sed '/^$$/,/^$$/!d;/^$$/d' $(srcdir)/THANKS.in > $@.1 &&\t\\\n\t    LC_ALL=en_US.UTF-8 src/sort -f -k1,1 $@.1 > $@.2 &&\t\t\\\n\t    diff -u $@.1 $@.2; diff=$$?;\t\t\t\t\\\n\t    rm -f $@.1 $@.2;\t\t\t\t\t\t\\\n\t    test \"$$diff\" = 0\t\t\t\t\t\t\\\n\t      || { echo '$(ME): THANKS.in is unsorted' 1>&2; exit 1; };\t\\\n\t    }\t\t\t\t\t\t\t\t\\\n\t  || { echo '$(ME): this system has erroneous locale data;'\t\\\n\t\t    'skipping $@' 1>&2; }\n\n# Look for developer diagnostics that are marked for translation.\n# This won't find any for which devmsg's format string is on a separate line.\nsc_marked_devdiagnostics:\n\t@prohibit='$(begword)devmsg *\\(.*_\\('\t\t\t\t\\\n\thalt='found marked developer diagnostic(s)'                     \\\n\t  $(_sc_search_regexp)\n\n# Ensure we keep hex constants as 4 or 8 bytes for consistency\n# and so that make src/fs-magic-compare works consistently\nsc_fs-magic-compare:\n\t@sed -n 's|.*/\\* \\(0x[0-9A-Fa-f]\\{1,\\}\\) .*\\*/|\\1|p'\t\t\\\n\t  $(srcdir)/src/stat.c | grep -Ev '^0x([0-9A-F]{4}){1,2}$$'\t\\\n\t    && { echo '$(ME): Constants in src/stat.c should be 4 or 8' \\\n\t\t      'upper-case chars' 1>&2; exit 1; } || :\n\n# Ensure gnulib generated files are ignored\n# TODO: Perhaps augment gnulib-tool to do this in lib/.gitignore?\nsc_gitignore_missing:\n\t@{ sed -n '/^\\/lib\\/.*\\.h$$/{p;p}' $(srcdir)/.gitignore;\t\\\n\t    find lib -name '*.in*' ! -name '*~' ! -name 'sys_*' |\t\\\n\t      sed 's|^|/|; s|_\\(.*in\\.h\\)|/\\1|; s/\\.in//'; } |\t\t\\\n\t      sort | uniq -u | grep . && { echo '$(ME): Add above'\t\\\n\t\t'entries to .gitignore' >&2; exit 1; } || :\n\n# Flag redundant entries in .gitignore\n# Disabled for now as too aggressive flagging\n# entries like /lib/arg-nonnull.h\n#sc_gitignore_redundant:\n#\t@{ grep ^/lib $(srcdir)/.gitignore;\t\t\t\t\\\n#\t   sed 's|^|/lib|' $(srcdir)/lib/.gitignore; } |\t\t\\\n#\t    sort | uniq -d | grep . && { echo '$(ME): Remove above'\t\\\n#\t      'entries from .gitignore' >&2; exit 1; } || :\n\n# Ensure gl/ files are distributed\nsc_gldist_missing:\n\t@cd $(srcdir);\t\t\t\t\t\t\t\\\n\tgrep '^gl/' gl/local.mk > $@.a;\t\t\t\t\t\\\n\tfind gl '(' -name Makefile.am ')' -prune -o -type f\t\t\\\n\t\t'!' '(' -name '*.orig' -or -name '*~' -or\t\t\\\n\t\t        -name 'ChangeLog.*' ')' -printf '%p\\n' |\t\\\n\tLC_ALL=C sort | tr '\\012' @ | sed 's/@$$/%/;s/@/ \\\\@/g' |\t\\\n\ttr @% '\\012\\012' > $@.e;\t\t\t\t\t\\\n\tdiff -u $@.a $@.e; diff=$$?;\t\t\t\t\t\\\n\trm -f $@.a $@.e;\t\t\t\t\t\t\\\n\ttest \"$$diff\" = 0\t\t\t\t\t\t\\\n\t  || { echo '$(ME): Inconsistent EXTRA_DIST in gl/local.mk'>&2;\t\\\n\t       exit 1; }\n\nsc_prohibit-form-feed:\n\t@prohibit=$$'\\f' \\\n\tin_vc_files='\\.[chly]$$' \\\n\thalt='Form Feed (^L) detected' \\\n\t  $(_sc_search_regexp)\n\n# Override the default Cc: used in generating an announcement.\nannouncement_Cc_ = $(translation_project_), \\\n  coreutils@gnu.org, coreutils-announce@gnu.org\n\n-include $(srcdir)/dist-check.mk\n\nupdate-copyright-env = \\\n  UPDATE_COPYRIGHT_FORCE=1 \\\n  UPDATE_COPYRIGHT_USE_INTERVALS=2 \\\n  UPDATE_COPYRIGHT_MAX_LINE_LENGTH=79\n\n# List syntax-check exemptions.\nexclude_file_name_regexp--sc_space_tab = \\\n  ^(tests/pr/|tests/misc/nl\\.sh$$|gl/.*\\.diff$$|man/help2man$$)\nexclude_file_name_regexp--sc_bindtextdomain = \\\n  ^(gl/.*|lib/euidaccess-stat|src/make-prime-list|src/cksum)\\.c$$\nexclude_file_name_regexp--sc_trailing_blank = \\\n  ^(tests/pr/|gl/.*\\.diff$$|man/help2man)\nexclude_file_name_regexp--sc_system_h_headers = \\\n  ^src/((system|copy|chown-core|find-mount-point)\\.h|make-prime-list\\.c)$$\n\n_src := (false|lbracket|chown-(chgrp|chown)\n_src := $(_src)|ls-(dir|ls|vdir)|tac-pipe|uname-(arch|uname))\n_gl_src = (xdecto.max|cl-strtold)\nexclude_file_name_regexp--sc_require_config_h_first = \\\n  (^lib/buffer-lcm\\.c|gl/lib/$(_gl_src)\\.c|src/$(_src)\\.c)$$\nexclude_file_name_regexp--sc_require_config_h = \\\n  $(exclude_file_name_regexp--sc_require_config_h_first)\n\nexclude_file_name_regexp--sc_po_check = ^(gl/|man/help2man)\nexclude_file_name_regexp--sc_prohibit_always-defined_macros = \\\n  ^src/(seq|remove)\\.c$$\nexclude_file_name_regexp--sc_prohibit_empty_lines_at_EOF = ^tests/pr/\nexclude_file_name_regexp--sc_program_name = \\\n  ^(gl/.*|lib/euidaccess-stat|src/make-prime-list)\\.c$$\nexclude_file_name_regexp--sc_file_system = \\\n  NEWS|^(init\\.cfg|src/df\\.c|tests/df/df-P\\.sh|tests/df/df-output\\.sh)$$\nexclude_file_name_regexp--sc_prohibit_always_true_header_tests = \\\n  ^m4/stat-prog\\.m4$$\nexclude_file_name_regexp--sc_prohibit_fail_0 = \\\n  (^.*/git-hooks/commit-msg|^tests/init\\.sh|Makefile\\.am|\\.mk|.*\\.texi)$$\nexclude_file_name_regexp--sc_prohibit_test_minus_ao = doc/.*\\.texi$$\nexclude_file_name_regexp--sc_prohibit_atoi_atof = ^lib/euidaccess-stat\\.c$$\n\n# longlong.h is maintained elsewhere.\n_ll = ^src/longlong\\.h$$\nexclude_file_name_regexp--sc_useless_cpp_parens = $(_ll)\nexclude_file_name_regexp--sc_space_before_open_paren = $(_ll)\n\ntbi_1 = ^tests/pr/|(\\.mk|^man/help2man)$$\ntbi_2 = ^scripts/git-hooks/(pre-commit|pre-applypatch|applypatch-msg)$$\ntbi_3 = (GNU)?[Mm]akefile(\\.am)?$$|$(_ll)\nexclude_file_name_regexp--sc_prohibit_tab_based_indentation = \\\n  $(tbi_1)|$(tbi_2)|$(tbi_3)\n\nexclude_file_name_regexp--sc_preprocessor_indentation = \\\n  ^(gl/lib/rand-isaac\\.[ch]|gl/tests/test-rand-isaac\\.c)$$|$(_ll)\nexclude_file_name_regexp--sc_prohibit_stat_st_blocks = \\\n  ^(src/system\\.h|tests/du/2g\\.sh)$$\n\nexclude_file_name_regexp--sc_prohibit_continued_string_alpha_in_column_1 = \\\n  ^src/(system\\.h|od\\.c|printf\\.c|getlimits\\.c)$$\n\n_cksum = ^tests/cksum/cksum-base64\\.pl$$\nexclude_file_name_regexp--sc_prohibit_test_backticks = \\\n  ^tests/(local\\.mk|(init|misc/stdbuf|factor/create-test)\\.sh)$$|$(_cksum)\n\n# Exempt test.c, since it's nominally shared, and relatively static.\nexclude_file_name_regexp--sc_prohibit_operator_at_end_of_line = \\\n  ^src/(ptx|test|head)\\.c$$\n\nexclude_file_name_regexp--sc_error_message_uppercase = ^src/factor\\.c$$\nexclude_file_name_regexp--sc_prohibit_atoi_atof = ^src/make-prime-list\\.c$$\n\n# Exception here as we don't want __attribute elided on non GCC\nexclude_file_name_regexp--sc_prohibit-gl-attributes = ^src/libstdbuf\\.c$$\n\nexclude_file_name_regexp--sc_prohibit_uppercase_id_est = \\.diff$$\nexclude_file_name_regexp--sc_ensure_dblspace_after_dot_before_id_est = \\.diff$$\nexclude_file_name_regexp--sc_ensure_comma_after_id_est = \\.diff|$(_ll)$$\nexclude_file_name_regexp--sc_long_lines = \\.diff$$|$(_ll)|$(_cksum)|bootstrap\n\n# `grep . -q` is not exactly equivalent to `grep . >/dev/null`\n# and this difference is significant in the NEWS description\nexclude_file_name_regexp--sc_unportable_grep_q = NEWS\n\n# Augment AM_CFLAGS to include our per-directory options:\nAM_CFLAGS += $($(@D)_CFLAGS)\n\nsrc_CFLAGS = $(WARN_CFLAGS)\nlib_CFLAGS = $(GNULIB_WARN_CFLAGS)\ngnulib-tests_CFLAGS = $(GNULIB_TEST_WARN_CFLAGS)\n\n# Configuration to make the tight-scope syntax-check rule work with\n# non-recursive make.\n# Note _gl_TS_headers use _single line_ extern function declarations,\n# while *_SOURCES use the _two line_ form.\nexport _gl_TS_headers = $(noinst_HEADERS)\n# Add exceptions for --enable-single-binary renamed functions.\n_gl_TS_unmarked_extern_functions = main usage\n_gl_TS_unmarked_extern_functions += single_binary_main_.* _usage_.*\n# Headers to search for single line extern _data_ declarations.\n_gl_TS_other_headers = $(srcdir)/src/*.h src/*.h\n# Avoid tight_scope rule stating these should be static\n# as there is no way to achieve that with the way these are defined.\n_gl_TS_unmarked_extern_vars = ptr_MD5_.*\n# Other tight_scope settings\n_gl_TS_dir = .\n_gl_TS_obj_files = src/*.$(OBJEXT)\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 30.552734375,
          "content": "# -*- autoconf -*-\n# Process this file with autoconf to produce a configure script.\n\n# Copyright (C) 1991-2025 Free Software Foundation, Inc.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\ndnl Written by Jim Meyering.\n\nAC_PREREQ([2.69])\n\n# Make inter-release version strings look like, e.g., v6.9-219-g58ddd, which\n# indicates that it is built from the 219th delta (in _some_ repository)\n# following the v6.9 tag, and that 58ddd is a prefix of the commit SHA1.\n# The explicit URL can be removed when autoconf > 2.69 is released.\nAC_INIT([GNU coreutils],\n        m4_esyscmd([build-aux/git-version-gen .tarball-version]),\n        [bug-coreutils@gnu.org],\n        [coreutils],\n        [https://www.gnu.org/software/coreutils/])\n\nAC_CONFIG_SRCDIR([src/ls.c])\n\nAC_CONFIG_AUX_DIR([build-aux])\nAC_CONFIG_HEADERS([lib/config.h:lib/config.hin])\n\nAM_INIT_AUTOMAKE([1.11.2 dist-xz color-tests parallel-tests subdir-objects])\nAM_SILENT_RULES([yes]) # make --enable-silent-rules the default.\n\ndnl POSIXCHECK is worthwhile for maintainers, but adds several seconds\ndnl (more than 10% execution time) to ./configure, with no benefit for\ndnl most users.  Using it to look for bugs requires:\ndnl   GNULIB_POSIXCHECK=1 autoreconf -f\ndnl   ./configure\ndnl   make\ndnl   make -C src clean\ndnl   make CFLAGS=-DGNULIB_POSIXCHECK=1\ndnl FIXME: Once we figure out how to avoid false positives, we should\ndnl have 'make my-distcheck' in dist-check.mk exercise this.\nm4_syscmd([test \"${GNULIB_POSIXCHECK+set}\" = set])\nm4_if(m4_sysval, [0], [], [dnl\ngl_ASSERT_NO_GNULIB_POSIXCHECK])\n\nAC_PROG_CC\nAM_PROG_CC_C_O\nAC_PROG_CPP\nAC_PROG_RANLIB\nAC_PROG_EGREP\nAC_PROG_LN_S\ngl_EARLY\ngl_SET_CRYPTO_CHECK_DEFAULT([auto-gpl-compat])\ngl_INIT\ncoreutils_MACROS\n\n# These are safe, since 'sort', coreutils's only multithreaded app,\n# does not use the relevant modules.\nAC_DEFINE([GNULIB_EXCLUDE_SINGLE_THREAD], [1],\n  [Define to 1 if apps call 'exclude' functions from a single thread.])\nAC_DEFINE([GNULIB_REGEX_SINGLE_THREAD], [1],\n  [Define to 1 if apps call 'regex' functions from a single thread.])\n# Although 'sort' is multithreaded and can use these functions,\n# it uses them only from the main thread.\nAC_DEFINE([GNULIB_MBRTOWC_SINGLE_THREAD], [1],\n  [Define to 1 if apps call mbrtowc, mbrtoc32, and 'regex' functions\n   from a single thread.])\n# This is safe, since all apps set locale early.\nAC_DEFINE([GNULIB_WCHAR_SINGLE_LOCALE], [1],\n  [Define to 1 if apps don't set the locale after calling\n   locale-sensitive functions like mbrtowc and wcwidth.])\n\nAC_DEFINE([GNULIB_MBRTOC32_REGULAR], [1],\n  [Do not worry about rare encodings like CP864, EBCDIC, Johab, and Shift JIS\n   that glibc does not support.])\n\n# The test suite needs to know if we have a working perl.\nAM_CONDITIONAL([HAVE_PERL], [test \"$gl_cv_prog_perl\" != no])\n\n# gl_GCC_VERSION_IFELSE([major], [minor], [run-if-found], [run-if-not-found])\n# ------------------------------------------------\n# If $CPP is gcc-MAJOR.MINOR or newer, then run RUN-IF-FOUND.\n# Otherwise, run RUN-IF-NOT-FOUND.\nAC_DEFUN([gl_GCC_VERSION_IFELSE],\n  [AC_PREPROC_IFELSE(\n    [AC_LANG_PROGRAM(\n      [[\n#if ($1) < __GNUC__ || (($1) == __GNUC__ && ($2) <= __GNUC_MINOR__)\n/* ok */\n#else\n# error \"your version of gcc is older than $1.$2\"\n#endif\n      ]]),\n    ], [$3], [$4])\n  ]\n)\n\nAC_ARG_ENABLE([single-binary],\n  [AS_HELP_STRING([--enable-single-binary=[shebangs|symlinks]],\n     [Compile all the tools in a single binary, reducing the overall size.\n      When compiled this way, shebangs (default when enabled) or symlinks are\n      installed for each tool that points to the single binary.])],\n  [gl_single_binary=no ;\n   case $enableval in\n     yes) gl_single_binary=shebangs ;;\n     no|shebangs|symlinks) gl_single_binary=$enableval ;;\n     *)      AC_MSG_ERROR([bad value $enableval for single-binary option.\n                           Options are: symlinks, shebangs, no.]) ;;\n   esac],\n  [gl_single_binary=no]\n)\nAC_ARG_ENABLE([single-binary-exceptions],\n  [AS_HELP_STRING([--enable-single-binary-exceptions=PROG_LIST],\n     [When used with --enable-single-binary, exclude the PROG_LIST from\n      it, so these programs are compiled as separated files\n      (comma-separated, default none))])],\n  [gl_single_binary_exceptions=$enableval],\n  [gl_single_binary_exceptions=]\n)\nif test \"$gl_single_binary\" = 'symlinks'; then\n  if ! test \"`echo ls | sed \\\"$program_transform_name\\\"`\" = 'ls'; then\n    AC_MSG_ERROR([program name transformations are not currently supported\n                  with --enable-single-binary=symlinks.])\n  fi\nfi\nAM_CONDITIONAL([SINGLE_BINARY], [test \"$gl_single_binary\" != no])\n\nAC_ARG_ENABLE([bold-man-page-references],\n  [AS_HELP_STRING([--disable-bold-man-page-references],\n     [When generating man pages, do not apply bold style around any\n      references like name(1) etc.])],\n  [gl_bold_manpages=yes ;\n   case $enableval in\n     no|yes) gl_bold_manpages=$enableval ;;\n     *)      AC_MSG_ERROR([bad value $enableval for bold-man-page-references.\n                           Options are: yes, no.]) ;;\n   esac],\n  [gl_bold_manpages=yes]\n)\nAM_CONDITIONAL([BOLD_MAN_REFS], [test \"$gl_bold_manpages\" != no])\n\nAC_ARG_ENABLE([gcc-warnings],\n  [AS_HELP_STRING([--enable-gcc-warnings@<:@=TYPE@:>@],\n    [control generation of GCC warnings.  The TYPE 'no' disables\n     warnings (default for non-developer builds); 'yes' generates\n     cheap warnings if available (default for developer builds);\n     'expensive' in addition generates expensive-to-compute warnings\n     if available.])],\n  [case $enableval in\n     no|yes|expensive) ;;\n     *)      AC_MSG_ERROR([bad value $enableval for gcc-warnings option]) ;;\n   esac\n   gl_gcc_warnings=$enableval],\n  [\n   # GCC provides fine-grained control over diagnostics which\n   # is used in gnulib for example to suppress warnings from\n   # certain sections of code.  So if this is available and\n   # we're running from a git repo, then auto enable the warnings.\n   gl_gcc_warnings=no\n   gl_GCC_VERSION_IFELSE([4], [6],\n                         [test -d \"$srcdir\"/.git \\\n                          && ! test -f \"$srcdir\"/.tarball-version \\\n                          && gl_gcc_warnings=yes])]\n)\n\n# clang is unduly picky about some things, even by default.\nif test \"$gl_cv_compiler_clang\" = yes; then\n  gl_WARN_ADD([-Wno-format-extra-args])\n  gl_WARN_ADD([-Wno-implicit-const-int-float-conversion])\n  gl_WARN_ADD([-Wno-tautological-constant-out-of-range-compare])\nfi\n\nif test $gl_gcc_warnings != no; then\n  gl_WARN_ADD([-Werror], [WERROR_CFLAGS])\n  AC_SUBST([WERROR_CFLAGS])\n\n  ew=\n  AS_IF([test $gl_gcc_warnings != expensive],\n    [# -fanalyzer and related options slow GCC considerably.\n     ew=\"$ew -fanalyzer -Wno-analyzer-malloc-leak\"])\n\n  # This, $nw, is the list of warnings we disable.\n  nw=$ew\n  nw=\"$nw -Wdeclaration-after-statement\" # too useful to forbid\n  nw=\"$nw -Waggregate-return\"       # anachronistic\n  nw=\"$nw -Wlong-long\"              # C90 is anachronistic (lib/gethrxtime.h)\n  nw=\"$nw -Wc++-compat\"             # We don't care about C++ compilers\n  nw=\"$nw -Wundef\"                  # Warns on '#if GNULIB_FOO' etc in gnulib\n  nw=\"$nw -Wtraditional\"            # Warns on #elif which we use often\n  nw=\"$nw -Wcast-qual\"              # Too many warnings for now\n  nw=\"$nw -Wconversion\"             # Too many warnings for now\n  nw=\"$nw -Wsign-conversion\"        # Too many warnings for now\n  nw=\"$nw -Wtraditional-conversion\" # Too many warnings for now\n  nw=\"$nw -Wunreachable-code\"       # Too many warnings for now\n  nw=\"$nw -Wpadded\"                 # Our structs are not padded\n  nw=\"$nw -Wredundant-decls\"        # openat.h declares e.g., mkdirat\n  nw=\"$nw -Wformat-nonliteral\"      # who.c and pinky.c strftime uses\n  nw=\"$nw -Wnested-externs\"         # use of XARGMATCH/verify_function__\n  nw=\"$nw -Wswitch-enum\"            # Too many warnings for now\n  nw=\"$nw -Wswitch-default\"         # Too many warnings for now\n  nw=\"$nw -Wstack-protector\"        # not worth working around\n  nw=\"$nw -Wformat-overflow=2\"      # False alarms due to GCC bug 110333\n  nw=\"$nw -Wformat-truncation=2\"    # False alarm in ls.c, probably related\n  # things I might fix soon:\n  nw=\"$nw -Wfloat-equal\"            # sort.c, seq.c\n  nw=\"$nw -Wmissing-format-attribute\" # copy.c\n  nw=\"$nw -Wunsafe-loop-optimizations\" # a few src/*.c\n  nw=\"$nw -Winline\"                 # system.h's readdir_ignoring_dot_and_dotdot\n  nw=\"$nw -Wvector-operation-performance\" # warns about randperm.c\n\n  # Suppress noreturn warnings with single binaries; otherwise\n  # GCC complains about the renamed 'main' not being declared noreturn\n  # because 'main_exit' calls 'exit' when linting.\n  if test \"$gl_single_binary\" != no; then\n    nw=\"$nw -Wsuggest-attribute=noreturn\"\n  fi\n\n  # Using -Wstrict-overflow is a pain, but the alternative is worse.\n  # For an example, see the code that provoked this report:\n  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=33498\n  # Code like that still infloops with gcc-4.6.0 and -O2.  Scary indeed.\n\n  gl_MANYWARN_ALL_GCC([ws])\n  gl_MANYWARN_COMPLEMENT([ws], [$ws], [$nw])\n  for w in $ws; do\n    gl_WARN_ADD([$w])\n  done\n  gl_WARN_ADD([-Wno-sign-compare])     # Too many warnings for now\n  gl_WARN_ADD([-Wno-unused-parameter]) # Too many warnings for now\n  gl_WARN_ADD([-Wno-format-nonliteral])\n\n  gl_WARN_ADD([-fdiagnostics-show-option])\n  gl_WARN_ADD([-funit-at-a-time])\n\n  AC_SUBST([WARN_CFLAGS])\n\n  AC_DEFINE([lint], [1], [Define to 1 if the compiler is checking for lint.])\n  AH_VERBATIM([FORTIFY_SOURCE],\n  [/* Enable compile-time and run-time bounds-checking, and some warnings,\n      without upsetting glibc 2.15+. */\n   #if !defined _FORTIFY_SOURCE && defined __OPTIMIZE__ && __OPTIMIZE__\n   # define _FORTIFY_SOURCE 2\n   #endif\n  ])\n  AC_DEFINE([GNULIB_PORTCHECK], [1], [enable some gnulib portability checks])\n\n  # We use a slightly smaller set of warning options for lib/.\n  # Remove the following and save the result in GNULIB_WARN_CFLAGS.\n  nw=$ew\n  nw=\"$nw -Wduplicated-branches\"    # Too many false alarms\n  nw=\"$nw -Wformat-truncation=2\"\n  nw=\"$nw -Wmissing-variable-declarations\"\n  nw=\"$nw -Wstrict-overflow\"\n  nw=\"$nw -Wuninitialized\"\n  nw=\"$nw -Wunused-macros\"\n  nw=\"$nw -Wmissing-prototypes\"\n  nw=\"$nw -Wold-style-definition\"\n  # FIXME: it may be easy to remove this, since it affects only one file:\n  # the snprintf call at ftoastr.c:132.\n  nw=\"$nw -Wdouble-promotion\"\n\n  # FIXME: remove this line when gcc improves\n  # FP in careadlinkat.c w/gcc 10.0.1 20200205\n  gl_WARN_ADD([-Wno-return-local-addr])\n\n  # FIXME: remove this line when gcc improves\n  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=88443\n  gl_WARN_ADD([-Wno-stringop-overflow])\n\n  gl_MANYWARN_COMPLEMENT([GNULIB_WARN_CFLAGS], [$WARN_CFLAGS], [$nw])\n  AC_SUBST([GNULIB_WARN_CFLAGS])\n\n  # For gnulib-tests, the set is slightly smaller still.\n  nw=\n  nw=\"$nw -Wstrict-prototypes\"\n  # It's not worth being this picky about test programs.\n  nw=\"$nw -Wsuggest-attribute=cold\"\n  nw=\"$nw -Wsuggest-attribute=const\"\n  nw=\"$nw -Wsuggest-attribute=format\"\n  nw=\"$nw -Wsuggest-attribute=pure\"\n  gl_MANYWARN_COMPLEMENT([GNULIB_TEST_WARN_CFLAGS],\n                         [$GNULIB_WARN_CFLAGS], [$nw])\n  AC_SUBST([GNULIB_TEST_WARN_CFLAGS])\nfi\n\nAC_FUNC_FORK\n\noptional_bin_progs=\nAC_CHECK_FUNCS([chroot],\n        gl_ADD_PROG([optional_bin_progs], [chroot]))\nAC_CHECK_FUNCS([gethostid],\n        gl_ADD_PROG([optional_bin_progs], [hostid]))\nAC_CHECK_FUNCS([sigsuspend],\n        gl_ADD_PROG([optional_bin_progs], [timeout]))\n\ngl_WINSIZE_IN_PTEM\n\nAC_MSG_CHECKING([whether localtime caches TZ])\nAC_CACHE_VAL([utils_cv_localtime_cache],\n[if test x$ac_cv_func_tzset = xyes; then\nAC_RUN_IFELSE([AC_LANG_SOURCE([[#include <time.h>\n#if STDC_HEADERS\n# include <stdlib.h>\n#endif\nextern char **environ;\nvoid unset_TZ (void)\n{\n  char **from, **to;\n  for (to = from = environ; (*to = *from); from++)\n    if (! (to[0][0] == 'T' && to[0][1] == 'Z' && to[0][2] == '='))\n      to++;\n}\nint\nmain ()\n{\n  time_t now = time ((time_t *) 0);\n  int hour_GMT0, hour_unset;\n  if (putenv (\"TZ=GMT0\") != 0)\n    return 1;\n  hour_GMT0 = localtime (&now)->tm_hour;\n  unset_TZ ();\n  hour_unset = localtime (&now)->tm_hour;\n  if (putenv (\"TZ=PST8\") != 0)\n    return 1;\n  if (localtime (&now)->tm_hour == hour_GMT0)\n    return 1;\n  unset_TZ ();\n  if (localtime (&now)->tm_hour != hour_unset)\n    return 1;\n  return 0;\n}]])],\n[utils_cv_localtime_cache=no],\n[utils_cv_localtime_cache=yes],\n[# If we have tzset, assume the worst when cross-compiling.\nutils_cv_localtime_cache=yes])\nelse\n        # If we lack tzset, report that localtime does not cache TZ,\n        # since we can't invalidate the cache if we don't have tzset.\n        utils_cv_localtime_cache=no\nfi])dnl\nAC_MSG_RESULT([$utils_cv_localtime_cache])\nif test $utils_cv_localtime_cache = yes; then\n  AC_DEFINE([LOCALTIME_CACHE], [1], [FIXME])\nfi\n\n# Find the library for dynamic loading of shared libraries.\nAC_SEARCH_LIBS([dlopen], [dl])\nAS_CASE([$ac_cv_search_dlopen],\n  [no | 'none required'],\n    [LIB_DL=],\n  [*],\n    [LIB_DL=\"$ac_cv_search_dlopen\"])\nAC_SUBST([LIB_DL])\n\n# Should 'sort' link libcrypto dynamically?\nAS_CASE([$LIB_CRYPTO],\n  [-lcrypto],\n    [# Check for dlopen and libcrypto dynamic linking in one program,\n     # as there's little point to checking them separately.\n     AC_CACHE_CHECK([for dlopen and whether libcrypto is linked dynamically],\n       [utils_cv_dlopen_libcrypto],\n       [utils_cv_dlopen_libcrypto=no\n        saved_LIBS=$LIBS\n        LIBS=\"$LIBS $LIB_DL $LIB_CRYPTO\"\n        AC_LINK_IFELSE(\n          [AC_LANG_PROGRAM(\n             [[#include <dlfcn.h>\n               #include <openssl/sha.h>\n               /* Use SHA512 rather than MD5 here to avoid deprecation warnings.\n                  So need to check HAVE_OPENSSL_MD5.. with DLOPEN_LIBCRYPTO. */\n             ]],\n             [[return !(dlopen (\"libcrypto.so\", RTLD_LAZY | RTLD_GLOBAL)\n                        && SHA512 (0, 0, 0));]])],\n          [# readelf works with cross-builds; ldd works on more platforms.\n           LIBCRYPTO_SONAME=\"`(readelf -d conftest$EXEEXT || ldd conftest$EXEEXT\n                              ) 2>/dev/null |\n                              sed -n 's/.*\\(libcrypto\\.so\\.[[.0-9]]*\\).*/\\1/p'`\"\n           AS_CASE([$LIBCRYPTO_SONAME],\n             [*libcrypto*],\n               [utils_cv_dlopen_libcrypto=yes])])\n        LIBS=$saved_LIBS])\n     AS_CASE([$utils_cv_dlopen_libcrypto],\n       [yes],\n         [AC_DEFINE([DLOPEN_LIBCRYPTO], [1],\n                    [Define to 1 if dlopen exists and libcrypto is\n                     linked dynamically.])\n          AC_DEFINE_UNQUOTED([LIBCRYPTO_SONAME], [\"$LIBCRYPTO_SONAME\"],\n                             [versioned libcrypto])\n         ])])\n\n# macOS >= 10.12\nAC_CHECK_FUNCS([fclonefileat])\n\n# Assume that if getattrat exists, it's compatible with Solaris 11.\nAC_CHECK_FUNCS([getattrat])\nif test $ac_cv_func_getattrat = yes; then\n  LIB_NVPAIR=-lnvpair\n  AC_SUBST([LIB_NVPAIR])\nfi\n\n# glibc >= 2.28 and linux kernel >= 4.11\nAC_CHECK_FUNCS([statx])\n\n# SCO-ODT-3.0 is reported to need -los to link programs using initgroups\nAC_CHECK_FUNCS([initgroups])\nif test $ac_cv_func_initgroups = no; then\n  AC_CHECK_LIB([os], [initgroups])\nfi\n\nAC_CHECK_FUNCS([syslog])\nif test $ac_cv_func_syslog = no; then\n  # syslog is not in the default libraries.  See if it's in some other.\n  for lib in bsd socket inet; do\n    AC_CHECK_LIB([$lib], [syslog], [AC_DEFINE([HAVE_SYSLOG], [1], [FIXME])\n      LIBS=\"$LIBS -l$lib\"; break])\n  done\nfi\n\nAC_CACHE_CHECK([for 3-argument setpriority function],\n  [utils_cv_func_setpriority],\n  [AC_LINK_IFELSE(\n    [AC_LANG_PROGRAM(\n       [[#include <sys/time.h>\n         #include <sys/resource.h>\n       ]],\n       [[setpriority (0, 0, 0);]])],\n    [utils_cv_func_setpriority=yes],\n    [utils_cv_func_setpriority=no])])\nif test $utils_cv_func_setpriority = no; then\n  AC_CHECK_FUNCS([nice])\nfi\ncase $utils_cv_func_setpriority,$ac_cv_func_nice in\n*yes*)\n  gl_ADD_PROG([optional_bin_progs], [nice])\nesac\n\nif test \"$cross_compiling\" = yes || test -c /dev/stdin <.; then\n  AC_DEFINE([DEV_FD_MIGHT_BE_CHR], [1],\n    [Define to 1 if /dev/std{in,out,err} and /dev/fd/N, if they exist, might be\n     character-special devices whose minor device number is the file\n     descriptor number, such as on Solaris.  Leave undefined if they are\n     definitely the actual files.  This determination should be done after any\n     symbolic links are followed.])\nfi\n\nAC_DEFUN([coreutils_DUMMY_1],\n[\n  AC_REQUIRE([gl_READUTMP])\n  if test $ac_cv_header_utmp_h = yes || test $ac_cv_header_utmpx_h = yes; then\n    gl_ADD_PROG([optional_bin_progs], [who])\n    gl_ADD_PROG([optional_bin_progs], [users])\n    gl_ADD_PROG([optional_bin_progs], [pinky])\n  fi\n])\ncoreutils_DUMMY_1\n\nAC_SYS_POSIX_TERMIOS()\ngl_HEADER_TIOCGWINSZ_NEEDS_SYS_IOCTL\n\nif test $ac_cv_sys_posix_termios = yes; then\n  gl_ADD_PROG([optional_bin_progs], [stty])\n\n  AC_MSG_CHECKING([whether termios.h needs _XOPEN_SOURCE])\n  AC_CACHE_VAL([su_cv_sys_termios_needs_xopen_source],\n  [AC_EGREP_CPP([yes], [#include <termios.h>\n#ifdef IUCLC\nyes\n#endif], su_cv_sys_termios_needs_xopen_source=no,\n   AC_EGREP_CPP([yes], [#define _XOPEN_SOURCE\n#include <termios.h>\n#ifdef IUCLC\nyes\n#endif], su_cv_sys_termios_needs_xopen_source=yes,\n   su_cv_sys_termios_needs_xopen_source=no))])\n  AC_MSG_RESULT([$su_cv_sys_termios_needs_xopen_source])\n  test $su_cv_sys_termios_needs_xopen_source = yes &&\n    AC_DEFINE([TERMIOS_NEEDS_XOPEN_SOURCE], [1], [FIXME])\n\n  AC_MSG_CHECKING([c_line in struct termios])\n  AC_CACHE_VAL([su_cv_sys_c_line_in_termios],\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#if TERMIOS_NEEDS_XOPEN_SOURCE\n                                      #define _XOPEN_SOURCE\n                                     #endif\n                                     #include <sys/types.h>\n                                     #include <termios.h>\n                                     struct termios t;\n                                     int s = sizeof t.c_line;]])],\n    [su_cv_sys_c_line_in_termios=yes],\n    [su_cv_sys_c_line_in_termios=no])])\n  AC_MSG_RESULT([$su_cv_sys_c_line_in_termios])\n  test $su_cv_sys_c_line_in_termios = yes \\\n    && AC_DEFINE([HAVE_C_LINE], [1], [FIXME])\nfi\n\n# FIXME: note that this macro appears above, too.\n# I'm leaving it here for now.  This whole thing needs to be modernized...\ngl_WINSIZE_IN_PTEM\n\ngl_HEADER_TIOCGWINSZ_IN_TERMIOS_H\n\nif test $gl_cv_sys_tiocgwinsz_needs_termios_h = no && \\\n   test $gl_cv_sys_tiocgwinsz_needs_sys_ioctl_h = no; then\n  AC_MSG_CHECKING([TIOCGWINSZ in sys/pty.h])\n  AC_CACHE_VAL([su_cv_sys_tiocgwinsz_in_sys_pty_h],\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n#ifdef WINSIZE_IN_PTEM\n# include <sys/stream.h>\n# include <sys/ptem.h>\n#endif\n#include <sys/ioctl.h>\n#include <sys/tty.h>\n#include <sys/pty.h>]], [[int x = TIOCGWINSZ;]])],\n    [su_cv_sys_tiocgwinsz_in_sys_pty_h=yes],\n    [su_cv_sys_tiocgwinsz_in_sys_pty_h=no])])\n  AC_MSG_RESULT([$su_cv_sys_tiocgwinsz_in_sys_pty_h])\n\n  test $su_cv_sys_tiocgwinsz_in_sys_pty_h = yes \\\n      && AC_DEFINE([GWINSZ_IN_SYS_PTY], [1],\n                   [Define if your system defines TIOCGWINSZ in sys/pty.h.])\nfi\n\n# Build df only if there's a point to it.\nif test $gl_cv_list_mounted_fs = yes && test $gl_cv_fs_space = yes; then\n  gl_ADD_PROG([optional_bin_progs], [df])\nfi\n\n# Build stdbuf only if supported\nac_save_CFLAGS=$CFLAGS\nac_save_LDFLAGS=$LDFLAGS\ncu_save_c_werror_flag=$ac_c_werror_flag\nAC_LANG_WERROR\n# Detect warnings about ignored \"constructor\" attributes.\ngl_WARN_ADD([-Werror], [CFLAGS])\ngl_WARN_ADD([-errwarn], [CFLAGS])\n# Put this message here, after gl_WARN_ADD's chatter.\nAC_MSG_CHECKING([whether this system supports stdbuf])\nCFLAGS=\"-fPIC $CFLAGS\"\nLDFLAGS=\"-shared $LDFLAGS\"\nAC_CACHE_VAL([utils_cv_stdbuf_supported],[\nutils_cv_stdbuf_supported=no\n# Note we only LINK here rather than RUN to support cross compilation\nAC_LINK_IFELSE(\n  [AC_LANG_PROGRAM([[\n    static int stdbuf = 0;\n\n    void __attribute__ ((constructor))\n    stdbuf_init (void)\n    {\n      stdbuf = 1;\n    }]],[[\n    if (stdbuf != 1)\n      return 1;]])\n  ],\n  [utils_cv_stdbuf_supported=yes])])\nAC_MSG_RESULT([$utils_cv_stdbuf_supported])\nif test \"$utils_cv_stdbuf_supported\" = \"yes\" && test -z \"$EXEEXT\"; then\n  gl_ADD_PROG([optional_bin_progs], [stdbuf])\nfi\nCFLAGS=$ac_save_CFLAGS\nLDFLAGS=$ac_save_LDFLAGS\nac_c_werror_flag=$cu_save_c_werror_flag\n\n# Test compiler support for half precision floating point types (for od)\nAC_MSG_CHECKING([IEEE 16 bit floating point])\nAC_CACHE_VAL([utils_cv_ieee_16_bit_supported],[\n AC_RUN_IFELSE(\n   [AC_LANG_SOURCE([[\n     int\n     main (void)\n     {\n        volatile _Float16 hf = 1;\n        float f = hf;  /* Ensure compiler can promote to float.  */\n        return !(f == 1.0f);\n     }\n  ]])\n  ],[\n    utils_cv_ieee_16_bit_supported=yes\n  ],[\n    utils_cv_ieee_16_bit_supported=no\n  ],[\n    utils_cv_ieee_16_bit_supported=no\n  ])])\nAC_MSG_RESULT([$utils_cv_ieee_16_bit_supported])\nif test $utils_cv_ieee_16_bit_supported = yes; then\n  AC_DEFINE([FLOAT16_SUPPORTED], [1], [IEEE 16 bit float supported])\nfi\n\nAC_MSG_CHECKING([Brain 16 bit floating point])\nAC_CACHE_VAL([utils_cv_brain_16_bit_supported],[\n AC_RUN_IFELSE(\n   [AC_LANG_SOURCE([[\n     int\n     main (void)\n     {\n        volatile __bf16 hf = 1;\n        float f = hf;  /* Ensure compiler can promote to float.  */\n        return !(f == 1.0f);\n     }\n  ]])\n  ],[\n    utils_cv_brain_16_bit_supported=yes\n  ],[\n    utils_cv_brain_16_bit_supported=no\n  ],[\n    utils_cv_brain_16_bit_supported=no\n  ])])\nAC_MSG_RESULT([$utils_cv_brain_16_bit_supported])\nif test $utils_cv_brain_16_bit_supported = yes; then\n  AC_DEFINE([BF16_SUPPORTED], [1], [Brain 16 bit float supported])\nfi\n\nac_save_CFLAGS=$CFLAGS\nCFLAGS=\"-march=armv8-a+crypto $CFLAGS\"\nAC_MSG_CHECKING([if vmull intrinsic exists])\nAC_CACHE_VAL([utils_cv_vmull_intrinsic_exists],[\nAC_LINK_IFELSE(\n  [AC_LANG_SOURCE([[\n    #include <stdio.h>\n    #include <sys/auxv.h>\n    #include <asm/hwcap.h>\n    #include <arm_neon.h>\n\n    int\n    main (void)\n    {\n      uint64x2_t a;\n      poly64_t shift64 = vget_lane_p64(vcreate_p64(0xB8BC6765), 0);\n      a = vreinterpretq_u64_p128(vmull_p64(shift64, vreinterpretq_p128_u64(a)));\n      return (getauxval(AT_HWCAP) & HWCAP_PMULL) > 0;\n    }\n  ]])\n  ],[\n    utils_cv_vmull_intrinsic_exists=yes\n  ],[\n    utils_cv_vmull_intrinsic_exists=no\n  ])])\nAC_MSG_RESULT([$utils_cv_vmull_intrinsic_exists])\nif test $utils_cv_vmull_intrinsic_exists = yes; then\n  AC_DEFINE([USE_VMULL_CRC32], [1],\n            [CRC32 calculation by vmull hardware instruction enabled])\nfi\nAM_CONDITIONAL([USE_VMULL_CRC32],\n               [test $utils_cv_vmull_intrinsic_exists = yes])\nCFLAGS=$ac_save_CFLAGS\n\nac_save_CFLAGS=$CFLAGS\nCFLAGS=\"-mavx -mpclmul $CFLAGS\"\nAC_MSG_CHECKING([if pclmul intrinsic exists])\nAC_CACHE_VAL([utils_cv_pclmul_intrinsic_exists],[\nAC_LINK_IFELSE(\n  [AC_LANG_SOURCE([[\n    #include <x86intrin.h>\n\n    int\n    main (void)\n    {\n      __m128i a, b;\n      a = _mm_clmulepi64_si128 (a, b, 0x00);\n      a = _mm_shuffle_epi8 (a, b);\n      return __builtin_cpu_supports (\"pclmul\");\n    }\n  ]])\n  ],[\n    utils_cv_pclmul_intrinsic_exists=yes\n  ],[\n    utils_cv_pclmul_intrinsic_exists=no\n  ])])\nAC_MSG_RESULT([$utils_cv_pclmul_intrinsic_exists])\nif test $utils_cv_pclmul_intrinsic_exists = yes; then\n  AC_DEFINE([USE_PCLMUL_CRC32], [1],\n            [CRC32 calculation by pclmul hardware instruction enabled])\nfi\nAM_CONDITIONAL([USE_PCLMUL_CRC32],\n               [test $utils_cv_pclmul_intrinsic_exists = yes])\nCFLAGS=$ac_save_CFLAGS\n\nac_save_CFLAGS=$CFLAGS\nCFLAGS=\" -mavx2 -mvpclmulqdq $CFLAGS\"\nAC_MSG_CHECKING([if avx2 pclmul intrinsic exists])\nAC_CACHE_VAL([utils_cv_avx2_pclmul_intrinsic_exists],[\nAC_LINK_IFELSE(\n  [AC_LANG_SOURCE([[\n    #include <x86intrin.h>\n\n    int\n    main (void)\n    {\n      __m256i a, b;\n      a = _mm256_clmulepi64_epi128 (a, b, 0x00);\n      a = _mm256_shuffle_epi8 (a, b);\n      return __builtin_cpu_supports (\"avx2\") &&\n        __builtin_cpu_supports (\"vpclmulqdq\");\n    }\n  ]])\n  ],[\n    utils_cv_avx2_pclmul_intrinsic_exists=yes\n  ],[\n    utils_cv_avx2_pclmul_intrinsic_exists=no\n  ])])\nAC_MSG_RESULT([$utils_cv_avx2_pclmul_intrinsic_exists])\nif test $utils_cv_avx2_pclmul_intrinsic_exists = yes; then\n  AC_DEFINE([USE_AVX2_CRC32], [1],\n            [CRC32 calculation by avx2 hardware instructions enabled])\nfi\nAM_CONDITIONAL([USE_AVX2_CRC32],\n               [test $utils_cv_avx2_pclmul_intrinsic_exists = yes])\nCFLAGS=$ac_save_CFLAGS\n\nac_save_CFLAGS=$CFLAGS\nCFLAGS=\" -mavx512bw -mavx512f -mvpclmulqdq $CFLAGS\"\nAC_MSG_CHECKING([if avx512 pclmul intrinsic exists])\nAC_CACHE_VAL([utils_cv_avx512_pclmul_intrinsic_exists],[\nAC_LINK_IFELSE(\n  [AC_LANG_SOURCE([[\n    #include <x86intrin.h>\n\n    int\n    main (void)\n    {\n      __m512i a, b;\n      a = _mm512_clmulepi64_epi128 (a, b, 0x00);\n      a = _mm512_shuffle_epi8 (a, b);\n      return __builtin_cpu_supports (\"avx512bw\") &&\n        __builtin_cpu_supports (\"avx512f\");\n    }\n  ]])\n  ],[\n    utils_cv_avx512_pclmul_intrinsic_exists=yes\n  ],[\n    utils_cv_avx512_pclmul_intrinsic_exists=no\n  ])])\nAC_MSG_RESULT([$utils_cv_avx512_pclmul_intrinsic_exists])\nif test $utils_cv_avx512_pclmul_intrinsic_exists = yes; then\n  AC_DEFINE([USE_AVX512_CRC32], [1],\n            [CRC32 calculation by avx512 hardware instructions enabled])\nfi\nAM_CONDITIONAL([USE_AVX512_CRC32],\n               [test $utils_cv_avx512_pclmul_intrinsic_exists = yes])\nCFLAGS=$ac_save_CFLAGS\n\nCFLAGS=\"-mavx2 $CFLAGS\"\nAC_MSG_CHECKING([for avx2 intrinsics])\nAC_CACHE_VAL([utils_cv_avx2_intrinsic_exists],[\nAC_LINK_IFELSE(\n  [AC_LANG_SOURCE([[\n    #include <x86intrin.h>\n\n    int\n    main (void)\n    {\n      __m256i matches = _mm256_setzero_si256 ();\n      int mask = _mm256_movemask_epi8 (matches);\n      int lines = __builtin_popcount (mask);\n      return __builtin_cpu_supports (\"avx2\");\n    }\n  ]])\n  ],[\n    utils_cv_avx2_intrinsic_exists=yes\n  ],[\n    utils_cv_avx2_intrinsic_exists=no\n  ])])\nAC_MSG_RESULT([$utils_cv_avx2_intrinsic_exists])\nif test $utils_cv_avx2_intrinsic_exists = yes; then\n  AC_DEFINE([USE_AVX2_WC_LINECOUNT], [1], [Counting lines with AVX2 enabled])\nfi\nAM_CONDITIONAL([USE_AVX2_WC_LINECOUNT],\n               [test $utils_cv_avx2_intrinsic_exists = yes])\n\nCFLAGS=$ac_save_CFLAGS\n\n############################################################################\n\ndnl Autogenerated by the 'gen-lists-of-programs.sh' auxiliary script.\ndnl Issue proper calls to the macros gl_INCLUDE_EXCLUDE_PROG and\ndnl gl_ADD_PROG (updating $optional_bin_progs), and generate the list\ndnl of coreutils programs to be built only upon explicit user request,\ndnl saving that list in the $no_install_progs_default shell variable.\nm4_include([m4/cu-progs.m4])\n\n# Now that we know which programs will actually be built, determine\n# which optional helper progs should be compiled.\n# Note it adding to pkglibexec_PROGRAMS, $(transform) in src/local.mk\n# may need to be updated accordingly.\ncase \" $optional_bin_progs \" in\n  *' stdbuf '*) pkglibexec_PROGRAMS='src/libstdbuf.so';;\n  *) pkglibexec_PROGRAMS='';;\nesac\n\nman1_MANS=`\n  for p in $optional_bin_progs; do\n    # Change \"ginstall.1\" to \"install.1\".\n    test $p = ginstall && p=install\n    # Ignore the \"[\" program, since writing a portable make rule to\n    # generate its manpage is not practical.\n    dnl Use the autoconf-provided quadrigraph to represent \"[\",\n    dnl otherwise we will incur in dreadful quoting issues.\n    test x$p = x'@<:@' && continue\n    echo \"man/$p.1\"\n  done`\n\n# Not installed by \"make install\", but must be built when creating\n# a distribution tarball.\nEXTRA_MANS=`for p in $no_install_progs_default $gl_no_install_prog; do\n              echo man/$p.1\n            done`\n\n# Replace all the programs by the single binary and symlinks if specified.\nsingle_binary_progs=\nsingle_binary_libs=\nsingle_binary_deps=\nsingle_binary_install_type=\nif test \"$gl_single_binary\" != no; then\n  man1_MANS=\"$man1_MANS man/coreutils.1\"\n  # Convert the list to a space separated list\n  gl_single_binary_exceptions=`echo $gl_single_binary_exceptions | tr ',' ' '`\n\n  single_binary_progs=`echo $optional_bin_progs`\n  optional_bin_progs=\"coreutils\"\n  for prog in $gl_single_binary_exceptions; do\n    # Fail if requested to exclude a program than was not part of coreutils.\n    case \" $single_binary_progs \" in\n      *\" $prog \"*)\n        gl_REMOVE_PROG([single_binary_progs], [$prog]) ;\n        gl_ADD_PROG([optional_bin_progs], [$prog]) ;;\n      *) AC_MSG_ERROR(['$prog' is not being compiled.]) ;;\n    esac\n  done\n\n  # single_binary_libs holds the list of libs required by the selected\n  # programs, such as for example -lrt.\n  single_binary_libs=`\n    for p in $single_binary_progs; do\n      # Convert '[' to '_'\n      test x\"$p\" = x'@<:@' && p='_'\n      printf '$(src_libsinglebin_%s_a_ldadd) ' \"$p\"\n    done`\n  # single_binary_deps holds the list of libsinglebin_*.a files that have the\n  # compiled code of each selected program in a \"library\" format.\n  single_binary_deps=`\n    for p in $single_binary_progs; do\n      # Convert '[' to '_'\n      test x\"$p\" = x'@<:@' && p='_'\n      printf 'src/libsinglebin_%s.a ' \"$p\"\n    done`\n  single_binary_install_type=\"$gl_single_binary\"\nfi\nAC_SUBST([single_binary_progs], [$single_binary_progs])\nAC_SUBST([single_binary_libs], [$single_binary_libs])\nAC_SUBST([single_binary_deps], [$single_binary_deps])\nAC_SUBST([single_binary_install_type], [$single_binary_install_type])\n\n\n# The programs built and installed by \"make && make install\".\n# Since this is AC_SUBST'd, Automake won't be able to perform rewrite\n# with $(EXEEXT) appending on it, so we have to do it ourselves -- in\n# this case, only for $(bin_PROGRAMS).\nbin_PROGRAMS=`\n  for p in $optional_bin_progs; do echo src/\"$p\"'$(EXEEXT)'; done`\n\n# Normalize whitespace.\nman1_MANS=`echo $man1_MANS`\nEXTRA_MANS=`echo $EXTRA_MANS`\nbin_PROGRAMS=`echo $bin_PROGRAMS`\npkglibexec_PROGS=`echo $pkglibexec_PROGRAMS`\n\nAC_SUBST([bin_PROGRAMS])        AM_SUBST_NOTMAKE([bin_PROGRAMS])\nAC_SUBST([pkglibexec_PROGRAMS]) AM_SUBST_NOTMAKE([pkglibexec_PROGRAMS])\nAC_SUBST([man1_MANS])           AM_SUBST_NOTMAKE([man1_MANS])\nAC_SUBST([EXTRA_MANS])          AM_SUBST_NOTMAKE([EXTRA_MANS])\n\nAC_SUBST([built_programs], [$optional_bin_progs])\n\nAM_CONDITIONAL([CROSS_COMPILING], [test \"$cross_compiling\" = yes])\n\n############################################################################\n\n# As long as \"grep 'PRI[diouxX]' po/*.pot\" reports matches in\n# translatable strings, we must use need-formatstring-macros here.\nAM_GNU_GETTEXT([external], [need-formatstring-macros])\nAM_GNU_GETTEXT_VERSION([0.19.2])\n\n# For a test of uniq: it uses the $LOCALE_FR envvar.\ngt_LOCALE_FR\n\nAC_CONFIG_FILES(\n  Makefile\n  po/Makefile.in\n  gnulib-tests/Makefile\n  )\nAC_OUTPUT\n"
        },
        {
          "name": "dist-check.mk",
          "type": "blob",
          "size": 4.5068359375,
          "content": "# Most of this is probably too coreutils-centric to be useful to other packages.\n\nbin=bin-$$$$\n\nwrite_loser = printf '\\#!%s\\necho $$0: bad path 1>&2; exit 1\\n' '$(SHELL)'\n\ntmpdir = $(abs_top_builddir)/tests/torture\n\nt=$(tmpdir)/$(PACKAGE)/test\npfx=$(t)/i\n\nbuilt_programs := $(sort $(patsubst src/%$(EXEEXT),%,$(bin_PROGRAMS)))\n\n# More than once, tainted build and source directory names would\n# have caused at least one \"make check\" test to apply \"chmod 700\"\n# to all directories under $HOME.  Make sure it doesn't happen again.\ntp = $(tmpdir)/taint\nt_prefix = $(tp)/a\nt_taint = '$(t_prefix) b'\nfake_home = $(tp)/home\n\n# When extracting from a distribution tarball, extract using the fastest\n# method possible.  With dist-xz, that means using the *.xz file.\nifneq ('', $(filter *.xz, $(DIST_ARCHIVES)))\n  tar_decompress_opt_ = J\n  suffix_ = xz\nelse\n  ifneq ('', $(filter *.gz, $(DIST_ARCHIVES)))\n    tar_decompress_opt_ = z\n    suffix_ = gz\n  else\n    tar_decompress_opt_ = j\n    suffix_ = bz2\n  endif\nendif\namtar_extract_ = $(AMTAR) -$(tar_decompress_opt_)xf\npreferred_tarball_ = $(distdir).tar.$(suffix_)\n\n# Ensure that tests run from tainted build and src dir names work,\n# and don't affect anything in $HOME.  Create witness files in $HOME,\n# record their attributes, and build/test.  Then ensure that the\n# witnesses were not affected.\n# Skip this test when using libtool, since libtool-generated scripts\n# cannot deal with a space-tainted srcdir.\nALL_RECURSIVE_TARGETS += taint-distcheck\ntaint-distcheck: $(DIST_ARCHIVES)\n\tgrep '^[\t ]*LT_INIT' configure.ac >/dev/null && exit 0 || :\n\ttest -d $(t_taint) && chmod -R 700 $(t_taint) || :\n\t-rm -rf $(t_taint) $(fake_home)\n\tmkdir -p $(t_prefix) $(t_taint) $(fake_home)\n\t$(amtar_extract_) $(preferred_tarball_) -C $(t_taint)\n\tmkfifo $(fake_home)/fifo\n\ttouch $(fake_home)/f\n\tmkdir -p $(fake_home)/d/e\n\tls -lR $(fake_home) $(t_prefix) > $(tp)/.ls-before\n\tHOME=$(fake_home); export HOME;\t\t\t\\\n\tcd $(t_taint)/$(distdir)\t\t\t\\\n\t  && ./configure\t\t\t\t\\\n\t  && $(MAKE)\t\t\t\t\t\\\n\t  && $(MAKE) check\t\t\t\t\\\n\t  && ls -lR $(fake_home) $(t_prefix) > $(tp)/.ls-after \\\n\t  && diff $(tp)/.ls-before $(tp)/.ls-after\t\\\n\t  && test -d $(t_prefix)\n\trm -rf $(tp)\n\n# Verify that a twisted use of --program-transform-name=PROGRAM works.\ndefine install-transform-check\n  echo running install-transform-check\t\t\t\\\n    && rm -rf $(pfx)\t\t\t\t\t\\\n    && $(MAKE) program_transform_name='s/.*/zyx/'\t\\\n      prefix=$(pfx) install\t\t\t\t\\\n    && test \"$$(echo $(pfx)/bin/*)\" = \"$(pfx)/bin/zyx\"\t\\\n    && test \"$$(find $(pfx)/share/man -type f|sed 's,.*/,,;s,\\..*,,')\" = \"zyx\"\nendef\n\n# Install, then verify that all binaries and man pages are in place.\n# Note that neither the binary, ginstall, nor the [.1 man page is installed.\ndefine my-instcheck\n  echo running my-instcheck;\t\t\t\t\\\n  $(MAKE) prefix=$(pfx) install\t\t\t\t\\\n    && test ! -f $(pfx)/bin/ginstall\t\t\t\\\n    && { fail=0;\t\t\t\t\t\\\n      for i in $(built_programs); do\t\t\t\\\n        test \"$$i\" = ginstall && i=install;\t\t\\\n        for j in \"$(pfx)/bin/$$i\"\t\t\t\\\n                 \"$(pfx)/share/man/man1/$$i.1\"; do\t\\\n          case $$j in *'[.1') continue;; esac;\t\t\\\n          test -f \"$$j\" && :\t\t\t\t\\\n            || { echo \"$$j not installed\"; fail=1; };\t\\\n        done;\t\t\t\t\t\t\\\n      done;\t\t\t\t\t\t\\\n      test $$fail = 1 && exit 1 || :;\t\t\t\\\n    }\nendef\n\n# Use this to make sure we don't run these programs when building\n# from a virgin compressed tarball file, below.\nnull_AM_MAKEFLAGS ?= \\\n  ACLOCAL=false \\\n  AUTOCONF=false \\\n  AUTOMAKE=false \\\n  AUTOHEADER=false \\\n  GPERF=false \\\n  MAKEINFO=false\n\nALL_RECURSIVE_TARGETS += my-distcheck\nmy-distcheck: $(DIST_ARCHIVES) $(local-check)\n\t$(MAKE) syntax-check\n\t$(MAKE) check\n\t-rm -rf $(t)\n\tmkdir -p $(t)\n\t$(amtar_extract_) $(preferred_tarball_) -C $(t)\n\t(set -e; cd $(t)/$(distdir);\t\t\t\\\n\t  ./configure --quiet --enable-gcc-warnings --disable-nls; \\\n\t  $(MAKE) AM_MAKEFLAGS='$(null_AM_MAKEFLAGS)';\t\\\n\t  $(MAKE) dvi;\t\t\t\t\t\\\n\t  $(install-transform-check);\t\t\t\\\n\t  $(my-instcheck);\t\t\t\t\\\n\t  $(MAKE) distclean\t\t\t\t\\\n\t)\n\t(cd $(t) && mv $(distdir) $(distdir).old\t\\\n\t  && $(amtar_extract_) - ) < $(preferred_tarball_)\n# With post-v1.15 automake, \"distclean\" would fail to remove .deps\n# directories, leading to a spurious failure of the following recursive diff.\n# FIXME: remove this, once automake is fixed.\n\tfind $(t)/$(distdir).old $(t)/$(distdir) -name .deps | xargs -r rmdir\n\tdiff -ur $(t)/$(distdir).old $(t)/$(distdir)\n\t-rm -rf $(t)\n\trmdir $(tmpdir)/$(PACKAGE) $(tmpdir)\n\t@echo \"========================\"; \\\n\techo \"ready for distribution:\"; \\\n\tfor i in $(DIST_ARCHIVES); do echo \"  $$i\"; done; \\\n\techo \"========================\"\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "gl",
          "type": "tree",
          "content": null
        },
        {
          "name": "gnulib",
          "type": "commit",
          "content": null
        },
        {
          "name": "gnulib-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "init.cfg",
          "type": "blob",
          "size": 21.6416015625,
          "content": "# This file is sourced by init.sh, *before* its initialization.\n\n# Copyright (C) 2010-2025 Free Software Foundation, Inc.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n# This goes hand in hand with the \"exec 9>&2;\" in tests/Makefile.am's\n# TESTS_ENVIRONMENT definition.\nstderr_fileno_=9\n\n# Having an unsearchable directory in PATH causes execve to fail with EACCES\n# when applied to an unresolvable program name, contrary to the desired ENOENT.\n# Avoid the problem by rewriting PATH to exclude unsearchable directories.\n# Also, if PATH lacks /sbin and/or /usr/sbin, append it/them.\nsanitize_path_()\n{\n  # FIXME: remove double quotes around $IFS when all tests use init.sh.\n  # They constitute a work-around for a bug in FreeBSD 8.1's /bin/sh.\n  local saved_IFS=\"$IFS\"\n    IFS=:\n    set -- $PATH\n  IFS=$saved_IFS\n\n  local d d1\n  local colon=\n  local new_path=\n  for d in \"$@\"; do\n    test -z \"$d\" && d1=. || d1=$d\n    if ls -d \"$d1/.\" > /dev/null 2>&1; then\n      new_path=\"$new_path$colon$d\"\n      colon=':'\n    fi\n  done\n\n  for d in /sbin /usr/sbin ; do\n    case \":$new_path:\" in\n      *:$d:*) ;;\n      *) new_path=\"$new_path:$d\" ;;\n    esac\n  done\n\n  PATH=$new_path\n  export PATH\n}\n\ngetlimits_()\n{\n  eval $(getlimits)\n  test \"$INT_MAX\" || fatal_ \"running getlimits\"\n}\n\nrequire_no_default_acl_()\n{\n  if getfacl --version < /dev/null > /dev/null 2>&1; then\n    getfacl \"$1\" | grep '^default:' && skip_ 'Default ACL detected'\n  else\n    ls -ld \"$1\" | grep '.........+' && skip_ 'ACL detected'\n  fi\n}\n\nrequire_acl_()\n{\n  getfacl --version < /dev/null > /dev/null 2>&1 \\\n    && setfacl --version < /dev/null > /dev/null 2>&1 \\\n      || skip_ \"This test requires getfacl and setfacl.\"\n\n  id -u bin > /dev/null 2>&1 \\\n    || skip_ \"This test requires a local user named bin.\"\n}\n\nis_local_dir_()\n{\n  test $# = 1 || framework_failure_\n  df --local \"$1\" >/dev/null 2>&1\n}\n\nrequire_mount_list_()\n{\n  local mount_list_fail='cannot read table of mounted file systems'\n  df --local 2>&1 | grep -F \"$mount_list_fail\" >/dev/null &&\n    skip_ \"$mount_list_fail\"\n}\n\ndump_mount_list_()\n{\n  cat /proc/self/mountinfo ||\n  cat /proc/self/mounts ||\n  cat /proc/mounts ||\n  cat /etc/mtab\n}\n\nrequire_local_dir_()\n{\n  require_mount_list_\n  is_local_dir_ . ||\n    skip_ \"This test must be run on a local file system.\"\n}\n\nrequire_selinux_()\n{\n  # When in a chroot of an SELinux-enabled system, but with a mock-simulated\n  # SELinux-*disabled* system, recognize that SELinux is disabled system wide:\n  grep 'selinuxfs$' /proc/filesystems > /dev/null \\\n    || skip_ \"this system lacks SELinux support\"\n\n  # Independent of whether SELinux is enabled system-wide,\n  # the current file system may lack SELinux support.\n  # Also the current build may have SELinux support disabled.\n  case $(ls -Zd .) in\n    '? .'|'unlabeled .')\n      test -z \"$CONFIG_HEADER\" \\\n        && framework_failure_ 'CONFIG_HEADER not defined'\n      grep '^#define HAVE_SELINUX_SELINUX_H 1' \"$CONFIG_HEADER\" > /dev/null \\\n        && selinux_missing_=\"(file) system\" || selinux_missing_=\"build\"\n      skip_ \"this $selinux_missing_ lacks SELinux support\"\n    ;;\n  esac\n}\n\n# Return the SELinux type component if available\nget_selinux_type() { ls -Zd \"$1\" | sed -n 's/.*:\\(.*_t\\)[: ].*/\\1/p'; }\n\n# Whether SELinux Multi Level Security is enabled\nmls_enabled_() {\n  sestatus 2>&1 |\n  grep 'Policy MLS status:.*enabled' > /dev/null\n}\n\n# Skip this test if we're not in SELinux \"enforcing\" mode.\nrequire_selinux_enforcing_()\n{\n  require_selinux_\n  test \"$(getenforce)\" = Enforcing \\\n    || skip_ \"This test is useful only with SELinux in Enforcing mode.\"\n}\n\nrequire_smack_()\n{\n  grep 'smackfs$' /proc/filesystems > /dev/null \\\n    || skip_ \"this system lacks SMACK support\"\n\n  test \"$(ls -Zd .)\" != '? .' \\\n    || skip_ \"this file system lacks SMACK support\"\n}\n\nrequire_openat_support_()\n{\n  # Skip this test if your system has neither the openat-style functions\n  # nor /proc/self/fd support with which to emulate them.\n\n  test -z \"$CONFIG_HEADER\" \\\n    && framework_failure_ 'CONFIG_HEADER not defined'\n\n  _skip=yes\n  grep '^#define HAVE_OPENAT' \"$CONFIG_HEADER\" > /dev/null && _skip=no\n  test -d /proc/self/fd && _skip=no\n  if test $_skip = yes; then\n    skip_ 'this system lacks openat support'\n  fi\n}\n\n# Return true if command runs with the\n# ulimit specified in the first argument\nulimit_supported_()\n{\n  local v\n  v=\"$1\"\n  shift\n\n  (\n    # Try to disable core dumps which may\n    # occur with memory constraints\n    trap '' SEGV; ulimit -c 0;\n\n    ulimit -v $v && \"$@\"\n  ) >/dev/null 2>&1\n}\n\n# Determine the minimum required VM limit to run the given command.\n# Output that value to stdout ... to be used by the caller.\n# Return 0 in case of success, and a non-Zero value otherwise.\nget_min_ulimit_v_()\n{\n  local v\n  local page_size\n\n  # Increase result by this amount to avoid alignment issues\n  page_size=$(getconf PAGESIZE || echo 4096)\n  page_size=$(($page_size / 1024))\n\n  for v in $( seq 5000 5000 50000 ); do\n    if ulimit_supported_ $v \"$@\"; then\n      local prev_v\n      prev_v=$v\n      for v in $( seq $(($prev_v-1000)) -1000 1000 ); do\n        ulimit_supported_ $v \"$@\" ||\n          {\n            ret_v=$((prev_v + $page_size))\n            echo $ret_v\n            return 0\n          }\n        prev_v=$v\n      done\n    fi\n  done\n  # The above did not find a working limit.  Echo a very small number - just\n  # in case the caller does not handle the non-Zero return value.\n  echo 1; return 1\n}\n\nrequire_readable_root_()\n{\n  test -r / || skip_ \"/ is not readable\"\n}\n\n# Skip the current test if strace is not available or doesn't work\n# with the named syscall.  Usage: require_strace_ unlink\nrequire_strace_()\n{\n  test $# = 1 || framework_failure_\n\n  strace -V < /dev/null > /dev/null 2>&1 ||\n    skip_ 'no strace program'\n\n  strace -qe \"$1\" echo > /dev/null 2>&1 ||\n    skip_ 'strace -qe \"'\"$1\"'\" does not work'\n\n  # On some linux/sparc64 systems, strace works fine on 32-bit executables,\n  # but prints only one line of output for every 64-bit executable.\n  strace -o log-help ls --help >/dev/null || framework_failure_\n  n_lines_help=$(wc -l < log-help)\n  rm -f log-help\n  if test $n_lines_help = 0 || test $n_lines_help = 1; then\n    skip_ 'strace produces no more than one line of output'\n  fi\n}\n\n# Skip the current test if valgrind doesn't work,\n# which could happen if not installed,\n# or hasn't support for the built architecture,\n# or hasn't appropriate error suppressions installed etc.\nrequire_valgrind_()\n{\n  valgrind --error-exitcode=1 true 2>/dev/null ||\n    skip_ \"requires a working valgrind\"\n}\n\n# Skip the current test if setfacl doesn't work on the current file system,\n# which could happen if not installed, or if ACLs are not supported by the\n# kernel or the file system, or are turned off via mount options.\n#\n# Work around the following two issues:\n#\n# 1) setfacl maps ACLs into file permission bits if on \"noacl\" file systems.\n#\n# On file systems which do not support ACLs (e.g. ext4 mounted with -o noacl),\n# setfacl operates on the regular file permission bits, and only fails if the\n# given ACL spec does not fit into there.  Thus, to test if ACLs really work\n# on the current file system, pass an ACL spec which can't be mapped that way.\n# \"Default\" ACLs (-d) seem to fulfill this requirement.\n#\n# 2) setfacl only invokes the underlying system call if the ACL would change.\n#\n# If the given ACL spec would not change the ACLs on the file, then setfacl\n# does not invoke the underlying system call - setxattr().  Therefore, to test\n# if setting ACLs really works on the current file system, call setfacl twice\n# with conflicting ACL specs.\nrequire_setfacl_()\n{\n  local d='acltestdir_'\n  mkdir $d || framework_failure_\n  local f=0\n\n  setfacl -d -m user::r-x $d \\\n    && setfacl -d -m user::rwx $d \\\n    || f=1\n  rm -rf $d || framework_failure_\n  test $f = 0 \\\n    || skip_ \"setfacl does not work on the current file system\"\n}\n\n# Require a controlling input 'terminal'.\nrequire_controlling_input_terminal_()\n{\n  have_input_tty=yes\n  tty -s || have_input_tty=no\n  test -t 0 || have_input_tty=no\n  if test \"$have_input_tty\" = no; then\n    skip_ 'requires controlling input terminal\nThis test must have a controlling input \"terminal\", so it may not be\nrun via \"batch\", \"at\", or \"ssh\".  On some systems, it may not even be\nrun in the background.'\n  fi\n}\n\nrequire_built_()\n{\n  skip_=no\n  for i in \"$@\"; do\n    case \" $built_programs \" in\n      *\" $i \"*) ;;\n      *) echo \"$i: not built\" 1>&2; skip_=yes ;;\n    esac\n  done\n\n  test $skip_ = yes && skip_ \"required program(s) not built\"\n}\n\nrequire_file_system_bytes_free_()\n{\n  local req=$1\n  local expr=$(stat -f --printf \"$req / %S <= %a\" .)\n  $AWK \"BEGIN{ exit !($expr) }\" \\\n    || skip_ \"this test needs at least $req bytes of free space\"\n}\n\nuid_is_privileged_()\n{\n  # Make sure id -u succeeds.\n  my_uid=$(id -u) \\\n    || { echo \"$0: cannot run 'id -u'\" 1>&2; return 1; }\n\n  # Make sure it gives valid output.\n  case $my_uid in\n    0) ;;\n    *[!0-9]*)\n      echo \"$0: invalid output ('$my_uid') from 'id -u'\" 1>&2\n      return 1 ;;\n    *) return 1 ;;\n  esac\n}\n\nget_process_status_()\n{\n  sed -n '/^State:[\t ]*\\([[:alpha:]]\\).*/s//\\1/p' /proc/$1/status\n}\n\n# Convert an ls-style permission string, like drwxr----x and -rw-r-x-wx\n# to the equivalent chmod --mode (-m) argument, (=,u=rwx,g=r,o=x and\n# =,u=rw,g=rx,o=wx).  Ignore ACLs.\nrwx_to_mode_()\n{\n  case $# in\n    1) rwx=$1;;\n    *) echo \"$0: wrong number of arguments\" 1>&2\n      echo \"Usage: $0 ls-style-mode-string\" 1>&2\n      return;;\n  esac\n\n  case $rwx in\n    [ld-][rwx-][rwx-][rwxsS-][rwx-][rwx-][rwxsS-][rwx-][rwx-][rwxtT-]) ;;\n    [ld-][rwx-][rwx-][rwxsS-][rwx-][rwx-][rwxsS-][rwx-][rwx-][rwxtT-][+.]) ;;\n    *) echo \"$0: invalid mode string: $rwx\" 1>&2; return;;\n  esac\n\n  # Perform these conversions:\n  # S  s\n  # s  xs\n  # T  t\n  # t  xt\n  # The 'T' and 't' ones are only valid for 'other'.\n  s='s/S/@/;s/s/x@/;s/@/s/'\n  t='s/T/@/;s/t/x@/;s/@/t/'\n\n  u=$(echo $rwx|sed 's/^.\\(...\\).*/,u=\\1/;s/-//g;s/^,u=$//;'$s)\n  g=$(echo $rwx|sed 's/^....\\(...\\).*/,g=\\1/;s/-//g;s/^,g=$//;'$s)\n  o=$(echo $rwx|sed 's/^.......\\(...\\).*/,o=\\1/;s/-//g;s/^,o=$//;'$s';'$t)\n  echo \"=$u$g$o\"\n}\n\n# Set the global variable stty_reversible_ to a space-separated list of the\n# reversible settings from stty.c.  stty_reversible_ also starts and ends\n# with a space.\nstty_reversible_init_()\n{\n  require_perl_\n  # Pad start with one space for the first option to match in query function.\n  stty_reversible_=' '$(perl -lne '/^ *{\"(.*?)\",.*\\bREV\\b/ and print $1' \\\n    \"$abs_top_srcdir\"/src/stty.c | tr '\\n' ' ')\n  # Ensure that there are at least 62, i.e., so we're alerted if\n  # reformatting the source empties the list.\n  test 62 -le $(echo \"$stty_reversible_\"|wc -w)  \\\n    || framework_failure_ \"too few reversible settings\"\n}\n\n# Test whether $1 is one of stty's reversible options.\nstty_reversible_query_()\n{\n  case $stty_reversible_ in\n    '')\n      framework_failure_ \"stty_reversible_init_() not called?\";;\n    *\" $1 \"*)\n      return 0;;\n    *)\n      return 1;;\n  esac\n}\n\nskip_if_()\n{\n  case $1 in\n    root) skip_ must be run as root ;;\n    non-root) skip_ must be run as non-root ;;\n    *) ;;  # FIXME?\n  esac\n}\n\nvery_expensive_()\n{\n  if test \"$RUN_VERY_EXPENSIVE_TESTS\" != yes; then\n    skip_ 'very expensive: disabled by default\nThis test is very expensive, so it is disabled by default.\nTo run it anyway, rerun make check with the RUN_VERY_EXPENSIVE_TESTS\nenvironment variable set to yes.  E.g.,\n\n  env RUN_VERY_EXPENSIVE_TESTS=yes make check\n\nor use the shortcut target of the toplevel Makefile,\n\n  make check-very-expensive\n'\n  fi\n}\n\nexpensive_()\n{\n  if test \"$RUN_EXPENSIVE_TESTS\" != yes; then\n    skip_ 'expensive: disabled by default\nThis test is relatively expensive, so it is disabled by default.\nTo run it anyway, rerun make check with the RUN_EXPENSIVE_TESTS\nenvironment variable set to yes.  E.g.,\n\n  env RUN_EXPENSIVE_TESTS=yes make check\n\nor use the shortcut target of the toplevel Makefile,\n\n  make check-expensive\n'\n  fi\n}\n\n# Test whether we can run our just-built root owned rm,\n# i.e., that $NON_ROOT_USERNAME has access to the build directory.\nnonroot_has_perm_()\n{\n  require_built_ chroot\n\n  local rm_version=$(\n    chroot --skip-chdir --user=$NON_ROOT_USERNAME / env PATH=\"$PATH\" \\\n      rm --version |\n    sed -n '1s/.* //p'\n  )\n  case \":$rm_version:\" in\n      :$PACKAGE_VERSION:) ;;\n      *) return 1;;\n  esac\n}\n\nrequire_root_()\n{\n  uid_is_privileged_ || skip_ \"must be run as root\"\n  NON_ROOT_USERNAME=${NON_ROOT_USERNAME=nobody}\n  NON_ROOT_GID=${NON_ROOT_GID=$(id -g $NON_ROOT_USERNAME)}\n\n  # When the current test invokes chroot, call nonroot_has_perm_\n  # to check for a common problem.\n  grep '^[ ]*chroot' \"../$0\" \\\n    && { nonroot_has_perm_ \\\n           || skip_ \"user $NON_ROOT_USERNAME lacks execute permissions\"; }\n}\n\nskip_if_root_() { uid_is_privileged_ && skip_ \"must be run as non-root\"; }\n\n# Set 'groups' to a space-separated list of at least two groups\n# of which the user is a member.\nrequire_membership_in_two_groups_()\n{\n  test $# = 0 || framework_failure_\n\n  groups=\n  for group_ in 1 \\\n    ${COREUTILS_GROUPS-$( (id -G || /usr/xpg4/bin/id -G) 2>/dev/null)}\n  do\n    # Skip group numbers equal to 2**N - 1 for common N,\n    # as they are possibly reserved groups like 'nogroup'.\n    case $group_ in\n      1 | 32767 | 65535 | 2147483647 | 4294967295) ;;\n      9223372036854775807 | 18446744073709551615) ;;\n      *) test -z \"$groups\" || groups=\"$groups \"\n         groups=\"$groups$group_\";;\n    esac\n  done\n  case \"$groups\" in\n    *' '*) ;;\n    *) skip_ 'requires membership in two groups\nthis test requires that you be a member of more than one group,\nbut running '\\''id -G'\\'' either failed or found just one.  If you really\nare a member of at least two groups, then rerun this test with\nCOREUTILS_GROUPS set in your environment to the space-separated list\nof group names or numbers.  E.g.,\n\n  env COREUTILS_GROUPS='\\''users cdrom'\\'' make check\n\n'\n     ;;\n  esac\n}\n\n# Is /proc/$PID/status supported?\nrequire_proc_pid_status_()\n{\n    sleep 2 &\n    local pid=$!\n    sleep .5\n    grep '^State:[\t ]*[S]' /proc/$pid/status > /dev/null 2>&1 ||\n    skip_ \"/proc/$pid/status: missing or 'different'\"\n    kill $pid\n}\n\n# Does trap support signal names?\n# Old versions of ash did not.\nrequire_trap_signame_()\n{\n    (trap '' CHLD) || skip_ 'requires trap with signal name support'\n}\n\n# Does kill support sending signal to whole group?\n# dash 0.5.8 at least does not.\nrequire_kill_group_()\n{\n    kill -0 -- -1 || skip_ 'requires kill with group signaling support'\n}\n\n# Return nonzero if the specified path is on a file system for\n# which SEEK_DATA support exists.\nseek_data_capable_()\n{\n  # Check that SEEK_HOLE support is enabled\n  # Note APFS was seen to not create sparse files < 16MiB\n  if ! truncate -s16M file.sparse_; then\n      warn_ \"can't create a sparse file: assuming not SEEK_DATA capable\"\n      return 1\n  fi\n  if ! cp --debug --reflink=never file.sparse_ file.sparse_.cp \\\n       | grep SEEK_HOLE; then\n      return 1\n  fi\n\n  # Check that SEEK_HOLE is supported on the passed file\n  { python3 < /dev/null && PYTHON_=python3; } ||\n  { python  < /dev/null && PYTHON_=python; }\n\n  if test x\"$PYTHON_\" = x; then\n      warn_ 'seek_data_capable_: python missing: assuming not SEEK_DATA capable'\n      return 1\n  fi\n\n  # Use timeout if available to skip cases where SEEK_DATA takes a long time.\n  # We saw FreeBSD 9.1 take 35s to return from SEEK_DATA for a 1TiB empty file.\n  # Note lseek() is uninterruptible on FreeBSD 9.1, but it does eventually\n  # return, and the timeout will ensure a failure return from the process.\n  timeout --version >/dev/null && TIMEOUT_='timeout 10'\n\n  $TIMEOUT_ $PYTHON_ \"$abs_srcdir\"/tests/seek-data-capable \"$@\"\n}\n\n# Skip the current test if \".\" lacks d_type support.\nrequire_dirent_d_type_()\n{\n  python < /dev/null \\\n    || skip_ python missing: assuming no d_type support\n\n  python \"$abs_srcdir\"/tests/d_type-check \\\n    || skip_ requires d_type support\n}\n\n# Skip the current test if we lack Perl.\nrequire_perl_()\n{\n  : ${PERL=perl}\n  $PERL -e 'use warnings' > /dev/null 2>&1 \\\n    || skip_ 'configure did not find a usable version of Perl'\n}\n\n# Does the current (working-dir) file system support sparse files?\nrequire_sparse_support_()\n{\n  test $# = 0 || framework_failure_\n  # Test whether we can create a sparse file.\n  # For example, on Darwin6.5 with a file system of type hfs, it's not possible.\n  # NTFS requires 128K before a hole appears in a sparse file.\n  t=sparse.$$\n  dd bs=1 seek=128K of=$t < /dev/null 2> /dev/null\n  set x $(du -sk $t)\n  kb_size=$2\n  rm -f $t\n  if test $kb_size -ge 128; then\n    skip_ 'this file system does not support sparse files'\n  fi\n}\n\n# Libraries needed when we compile a shared library.\ngcc_shared_libs_=\n\n# Compile a shared lib using the GCC options for doing so.\n# Pass input and output file as parameters respectively.\n# Any other optional parameters are passed to $CC.\ngcc_shared_()\n{\n  local in=$1\n  local out=$2\n  shift 2 || return 1\n\n  $CC -Wall -shared --std=gnu99 -fPIC -O2 $* \"$in\" -o \"$out\" $gcc_shared_libs_\n}\n\n# There are a myriad of ways to build shared libs,\n# so we only consider running tests requiring shared libs,\n# on platforms that support building them as follows.\nrequire_gcc_shared_()\n{\n  # Try two different values for gcc_shared_libs_.\n  gcc_shared_libs_='-ldl'\n  if gcc_shared_ '-' 'd.so' -xc < /dev/null 2>&1; then\n    :\n  else\n    gcc_shared_libs_=\n    if gcc_shared_ '-' 'd.so' -xc < /dev/null 2>&1; then\n      :\n    else\n      skip_ '$CC -shared ... failed to build a shared lib'\n    fi\n  fi\n  rm -f d.so\n}\n\nmkfifo_or_skip_()\n{\n  test $# = 1 || framework_failure_\n  if ! mkfifo \"$1\"; then\n    # Make an exception of this case -- usually we interpret framework-creation\n    # failure as a test failure.  However, in this case, when running on a SunOS\n    # system using a file system NFS mounted from OpenBSD, the above fails like\n    # this:\n    # mkfifo: cannot make fifo 'fifo-10558': Not owner\n    skip_ 'unable to create a fifo'\n  fi\n}\n\ntrap_sigpipe_or_skip_()\n{\n  timeout --version >/dev/null ||\n    skip_ 'trapping SIGPIPE cannot be safely checked'\n\n  (trap '' PIPE && timeout 10 yes |:) 2>&1 | grep 'Broken pipe' >/dev/null ||\n    skip_ 'trapping SIGPIPE is not supported'\n}\n\nrequire_bash_as_SHELL_()\n{\n  if bash --version >/dev/null 2>&1; then\n    SHELL='bash'\n  else\n    skip_ 'bash is required'\n  fi\n}\n\n# Disable the current test if the working directory seems to have\n# the setgid bit set.\nskip_if_setgid_()\n{\n  setgid_tmpdir=setgid-$$\n  (umask 77; mkdir $setgid_tmpdir)\n  perms=$(stat --printf %A $setgid_tmpdir)\n  rmdir $setgid_tmpdir\n  case $perms in\n    drwx------);;\n    drwxr-xr-x);;  # Windows98 + DJGPP 2.03\n    *) skip_ 'this directory has the setgid bit set';;\n  esac\n}\n\n# Skip if files are created with a different group to the current user\n# This can happen due to a setgid dir, or by some other mechanism on OS X:\n# https://unix.stackexchange.com/q/63865\n# https://bugs.gnu.org/14024#41\nskip_if_nondefault_group_()\n{\n  touch grp.$$\n  gen_ug=$(stat -c '%u:%g' grp.$$)\n  rm grp.$$\n  test \"$gen_ug\" = \"$(id -ru):$(id -rg)\" ||\n    skip_ 'Files are created with a different gid'\n}\n\nskip_if_mcstransd_is_running_()\n{\n  test $# = 0 || framework_failure_\n\n  # When mcstransd is running, you'll see only the 3-component\n  # version of file-system context strings.  Detect that,\n  # and if it's running, skip this test.\n  __ctx=$(stat --printf='%C\\n' .) || framework_failure_\n  case $__ctx in\n    *:*:*:*) __ctx_ok=1 ;; # four components is ok\n    *:*:*)  # three components is ok too if there is no MLS\n        mls_enabled_ || __ctx_ok=1 ;;\n  esac\n\n  test \"$__ctx_ok\" ||\n   skip_ \"unexpected context '$__ctx'; turn off mcstransd\"\n}\n\n# Skip the current test if umask doesn't work as usual.\n# This test should be run in the temporary directory that ends\n# up being removed via the trap commands.\nworking_umask_or_skip_()\n{\n  umask 022\n  touch file1 file2\n  chmod 644 file2\n  perms=$(ls -l file1 file2 | sed 's/ .*//' | uniq)\n  rm -f file1 file2\n\n  case $perms in\n  *'\n  '*) skip_ 'your build directory has unusual umask semantics'\n  esac\n}\n\n# Retry a function requiring a sufficient delay to _pass_\n# using a truncated exponential backoff method.\n#     Example: retry_delay_ dd_reblock_1 .1 6\n# This example will call the dd_reblock_1 function with\n# an initial delay of .1 second and call it at most 6 times\n# with a max delay of 3.2s (doubled each time), or a total of 6.3s\n# Note ensure you do _not_ quote the parameter to GNU sleep in\n# your function, as it may contain separate values that sleep\n# needs to accumulate.\n# Further function arguments will be forwarded to the test function.\nretry_delay_()\n{\n  local test_func=$1\n  local init_delay=$2\n  local max_n_tries=$3\n  shift 3 || return 1\n\n  local attempt=1\n  local num_sleeps=$attempt\n  local time_fail\n  while test $attempt -le $max_n_tries; do\n    local delay=$($AWK -v n=$num_sleeps -v s=\"$init_delay\" \\\n                  'BEGIN { print s * n }')\n    \"$test_func\" \"$delay\" \"$@\" && { time_fail=0; break; } || time_fail=1\n    attempt=$(expr $attempt + 1)\n    num_sleeps=$(expr $num_sleeps '*' 2)\n  done\n  test \"$time_fail\" = 0\n}\n\n# Call this with a list of programs under test immediately after\n# sourcing init.sh.\nprint_ver_()\n{\n  require_built_ \"$@\"\n  if test \"$VERBOSE\" = yes; then\n    local i\n    for i in $*; do\n      env $i --version\n    done\n  fi\n}\n\n# Are we running on GNU/Hurd?\nrequire_gnu_()\n{\n  test \"$(uname)\" = GNU \\\n    || skip_ 'not running on GNU/Hurd'\n}\n\nsanitize_path_\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "thanks-gen",
          "type": "blob",
          "size": 0.4306640625,
          "content": "#!/usr/bin/perl -nl\n# Use Perl's multi-byte alignment code, via sprintf, while\n# performing a rudimentary check for duplicate names and\n# removing duplicate name,email pairs.\nuse Encode;\n\nBEGIN { my (%seen, %name) }\n\nchomp;\nmy ($name, $email) = split '\\0', decode ('UTF-8', $_);\n\n$seen{$name}++\n  and warn \"$0: THANKS.in: duplicate name: $name\\n\";\n\nprint encode ('UTF-8', sprintf ('%-36s', $name)), $email\n  unless $seen{\"$name\\0$email\"}++;\n"
        }
      ]
    }
  ]
}