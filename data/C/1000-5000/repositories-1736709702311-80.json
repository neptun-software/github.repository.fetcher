{
  "metadata": {
    "timestamp": 1736709702311,
    "page": 80,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zpoint/CPython-Internals",
      "stars": 4198,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1533203125,
          "content": "*.css linguist-language=Python\n*.less linguist-language=Python\n*.js linguist-language=Python\n*.html linguist-language=Python\n*.md linguist-language=Markdown\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0166015625,
          "content": ".DS_Store\n.idea*\n"
        },
        {
          "name": "BasicObject",
          "type": "tree",
          "content": null
        },
        {
          "name": "Extension",
          "type": "tree",
          "content": null
        },
        {
          "name": "Interpreter",
          "type": "tree",
          "content": null
        },
        {
          "name": "Modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.8017578125,
          "content": "# Cpython Internals![image title](http://www.zpoint.xyz:8080/count/tag.svg?url=github%2FCPython-Internals)\n\n![cpython logo](https://docs.google.com/drawings/d/e/2PACX-1vQKKPvv9xI22zZcRtElIMx_-G22qYcLUvl-gbngubjf76dr80ZjsYQZCCKVqEvJnmBnwZyDXqG9GPlu/pub?w=300&h=200) \n\n* [简体中文](https://github.com/zpoint/CPython-Internals/blob/master/README_CN.md)\n* [한국어](https://github.com/zpoint/CPython-Internals/blob/master/README_KR.md)\n*  **Watch** this repo if you need to be notified when there's update\n\nThis repository is my notes/blog for [cpython](https://github.com/python/cpython) source code\n\nTrying to illustrate every detail of cpython implementation\n\n```shell script\n# based on version 3.8.0a0\ncd cpython\ngit reset --hard ab54b9a130c88f708077c2ef6c4963b632c132b3\n```\n\nThe following contents are suitable for those who have python programming experience and interested in internal of python interpreter, for those who needs beginner or advanced material please refer to [awesome-python-books](https://github.com/Junnplus/awesome-python-books)\n\n# Table of Contents\n\n* [Objects](#Objects)\n* [Modules](#Modules)\n* [Lib](#Lib)\n* [Interpreter](#Interpreter)\n* [Extension](#Extension)\n* [Learning material](#Learning-material)\n* [Contribution](#Contribution)\n* [License](#License)\n\n\n# Objects\n - [x] [dict](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/dict/dict.md)\n - [x] [long/int](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/long/long.md)\n - [x] [unicode/str](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/str/str.md)\n - [x] [set](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/set/set.md)\n - [x] [list(timsort)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/list/list.md)\n - [x] [tuple](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/tuple/tuple.md)\n - [x] [bytes](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/bytes/bytes.md)\n - [x] [bytearray(buffer protocol)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/bytearray/bytearray.md)\n - [x] [float](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/float/float.md)\n - [x] [func(user-defined method)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/func/func.md)\n - [x] [method(builtin method)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/method/method.md)\n - [x] [iter](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/iter/iter.md)\n - [x] [gen(generator/coroutine/async generator)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/gen/gen.md)\n - [x] [class(bound method/classmethod/staticmethod)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/class/class.md)\n - [x] [complex](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/complex/complex.md)\n - [x] [enum](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/enum/enum.md)\n - [x] [type(mro/metaclass/creation of class/instance)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/type/type.md)\n\n# Modules\n\n - [ ] io\n \t- [x] [fileio](https://github.com/zpoint/CPython-Internals/blob/master/Modules/io/fileio/fileio.md)\n - [x] [pickle](https://github.com/zpoint/CPython-Internals/blob/master/Modules/pickle/pickle.md)\n\n# Lib\n\n - [x] [re(regex)](https://github.com/zpoint/CPython-Internals/blob/master/Modules/re/re.md)\n - [ ] asyncio\n\n# Interpreter\n\n - [x] [gil(Global Interpreter Lock)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/gil/gil.md)\n - [x] [gc(Garbage Collection)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/gc/gc.md)\n - [x] [memory management](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/memory_management/memory_management.md)\n - [x] [descr(how does attribute access work/`__get__`/`__getattribute__`/`__getattr__`)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/descr/descr.md)\n - [x] [exception(exception handling)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/exception/exception.md)\n - [x] [module(how does import work)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/module/module.md)\n - [x] [frame](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/frame/frame.md)\n - [x] [code](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/code/code.md)\n - [x] [slots/`__slots__`(how does attribute initialized in the creation of class/instance)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/slot/slot.md)\n - [x] [thread](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/thread/thread.md)\n - [x] [PyObject(overview)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/pyobject/pyobject.md)\n\n# Extension\n\n - [x] [C API(profile python code and write pure C extension)](https://github.com/zpoint/CPython-Internals/blob/master/Extension/C/c.md)\n - [ ] Cython(C extension)\n - [x] [Boost C++ libaries (C\\+\\+ extension)](https://github.com/zpoint/Boost-Python-Examples)\n - [ ] [C++ extension](https://github.com/zpoint/CPython-Internals/blob/master/Extension/CPP/cpp.md)\n \t- [x] integrate with NumPy\n \t- [x] bypass the GIL\n\n# Grammar\n\n - [x] [Compile Phase](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/compile/compile.md)\n    - [x] [Grammar/MetaGrammar to DFA](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/compile/compile.md)\n    - [x] [CST to AST](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/compile2/compile.md)\n    - [x] [AST to python byte code](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/compile3/compile.md)\n\n\n# Learning material\n\nI will only recommend what I've read\n\n* [CPython internals - Interpreter and source code overview(youtube video)](https://www.youtube.com/watch?v=LhadeL7_EIU&list=PLzV58Zm8FuBL6OAv1Yu6AwXZrnsFbbR0S)\n* [< < Inside The Python Virtual Machine > >](https://leanpub.com/insidethepythonvirtualmachine)\n* [< < Python源码剖析 > >](https://book.douban.com/subject/3117898/)\n* [rushter(blog/eng)](https://rushter.com/)\n* [YET ANOTHER PYTHON INTERNALS BLOG(blog/eng)](https://pythoninternal.wordpress.com/)\n* [Junnplus(blog/cn)](https://github.com/Junnplus/blog/issues)\n* [manjusaka(blog/cn)](https://manjusaka.itscoder.com/)\n* [aoik-Python's compiler series(blog/eng)](https://aoik.me/blog/posts/python-compiler-from-grammar-to-dfa)\n\n# Contribution\n\nAll kinds of contributions are welcome\n\n* submit a pull request\n  *  if you want to share any knowledge you know\n  * post a new article\n  * correct any technical mistakes\n  * correct english grammar\n  * translation\n  * anything else\n* open an issue \n  * any suggestions\n  * any questions\n  * correct mistakes\n  * anything else\n\n# [License](https://creativecommons.org/licenses/by-nc-sa/4.0/)"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 6.8818359375,
          "content": "# Cpython Internals![image title](http://www.zpoint.xyz:8080/count/tag.svg?url=github%2FCPython-Internals-CN)\n\n* [English](https://github.com/zpoint/CPython-Internals/blob/master/README.md)\n* [한국어](https://github.com/zpoint/CPython-Internals/blob/master/README_KR.md)\n* 如果你需要接收更新通知, 点击右上角的 **Watch**, 当有文章更新时会在 issue 发布相关标题和链接\n* 如果有任何链接无法打开请自行搭梯子O(∩_∩)O\n\n这个仓库是笔者分析 [cpython](https://github.com/python/cpython) 源码的时候做的记录/博客\n\n笔者将尝试尽可能的讲清楚 cpython 底层实现的细节\n\n```shell script\n# 基于 3.8.0a0 版本\ncd cpython\ngit reset --hard ab54b9a130c88f708077c2ef6c4963b632c132b3\n\n```\n\n这里的内容适用于有过 python 编程经验并且对解释器的实现感兴趣的同学, 如果你需要的的是入门到进阶之类的学习资料, 请参考 [awesome-python-books](https://github.com/Junnplus/awesome-python-books/blob/master/README-ZH_CN.md)\n\n\n# 目录\n\n* [基本对象](#基本对象)\n* [模块](#模块)\n* [库](#库)\n* [解释器相关](#解释器相关)\n* [扩展](#扩展)\n* [学习资料](#学习资料)\n* [参与贡献](#参与贡献)\n\n* [授权](#授权)\n\n\n# 基本对象\n- [x] [dict](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/dict/dict_cn.md)\n- [x] [long/int](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/long/long_cn.md)\n- [x] [unicode/str](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/str/str_cn.md)\n- [x] [set](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/set/set_cn.md)\n- [x] [list(timsort)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/list/list_cn.md)\n- [x] [tuple](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/tuple/tuple_cn.md)\n- [x] [bytes](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/bytes/bytes_cn.md)\n- [x] [bytearray(buffer protocol)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/bytearray/bytearray_cn.md)\n- [x] [float](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/float/float_cn.md)\n- [x] [func(user-defined method)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/func/func_cn.md)\n- [x] [method(builtin method)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/method/method_cn.md)\n- [x] [iter](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/iter/iter_cn.md)\n- [x] [gen(generator/coroutine/async generator)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/gen/gen_cn.md)\n- [x] [class(bound method/classmethod/staticmethod)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/class/class_cn.md)\n- [x] [complex](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/complex/complex_cn.md)\n- [x] [enum](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/enum/enum_cn.md)\n- [x] [type(mro/metaclass/类/实例的创建过程)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/type/type_cn.md)\n\n# 模块\n\n - [ ] io\n \t- [x] [fileio](https://github.com/zpoint/CPython-Internals/blob/master/Modules/io/fileio/fileio_cn.md)\n - [x] [pickle](https://github.com/zpoint/CPython-Internals/blob/master/Modules/pickle/pickle_cn.md)\n\n# 库\n\n - [x] [re(正则)](https://github.com/zpoint/CPython-Internals/blob/master/Modules/re/re_cn.md)\n - [ ] asyncio\n\n# 解释器相关\n\n - [x] [gil(全局解释器锁)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/gil/gil_cn.md)\n - [x] [gc(垃圾回收机制)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/gc/gc_cn.md)\n - [x] [memory management(内存管理机制)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/memory_management/memory_management_cn.md)\n - [x] [descr(访问(类/实例)属性时发生了什么/`__get__`/`__getattribute__`/`__getattr__`)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/descr/descr_cn.md)\n - [x] [exception(异常处理机制)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/exception/exception_cn.md)\n - [x] [module(import实现机制)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/module/module_cn.md)\n - [x] [frame](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/frame/frame_cn.md)\n - [x] [code](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/code/code_cn.md)\n - [x] [slots/`__slots__`(属性在类/实例创建时是如何初始化的)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/slot/slot_cn.md)\n - [x] [thread(线程)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/thread/thread_cn.md)\n - [x] [PyObject(基础篇/概述)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/pyobject/pyobject_cn.md)\n\n# 扩展\n\n - [x] [C API(python 性能分析和 C 扩展)](https://github.com/zpoint/CPython-Internals/blob/master/Extension/C/c_cn.md)\n - [ ] Cython(C extension)\n - [x] [Boost C++ libaries (C\\+\\+ extension)](https://github.com/zpoint/Boost-Python-Examples)\n - [x] [C++ 扩展](https://github.com/zpoint/CPython-Internals/blob/master/Extension/CPP/cpp_cn.md)\n \t- [x] 写 NumPy 扩展\n \t- [x] 绕过 GIL\n\n# 语法\n\n[编译阶段](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/compile/compile.md)\n\n* [x] [从语法/元语法到DFA](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/compile/compile_cn.md)\n* [x] [从 CST 到 AST](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/compile2/compile_cn.md)\n* [x] [从 AST 到 字节码](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/compile3/compile_cn.md)\n\n\n# 学习资料\n\n以下的资料笔者遵循先阅读后推荐的原则\n\n* [CPython internals - Interpreter and source code overview(油管视频)](https://www.youtube.com/watch?v=LhadeL7_EIU&list=PLzV58Zm8FuBL6OAv1Yu6AwXZrnsFbbR0S)\n* [< < Inside The Python Virtual Machine > >](https://leanpub.com/insidethepythonvirtualmachine)\n* [< < Python源码剖析 > >](https://book.douban.com/subject/3117898/)\n* [rushter(blog/eng)](https://rushter.com/)\n* [YET ANOTHER PYTHON INTERNALS BLOG(blog/eng)](https://pythoninternal.wordpress.com/)\n* [Junnplus(blog/中文)](https://github.com/Junnplus/blog/issues)\n* [manjusaka(blog/中文)](https://manjusaka.itscoder.com/)\n* [aoik-Python's compiler series(blog/eng)](https://aoik.me/blog/posts/python-compiler-from-grammar-to-dfa)\n\n## 参与贡献\n\n欢迎所有形式的贡献\n\n* 提交一个 pull request\n  * 如果你想分享任何你知道的相关知识\n  *  发布一篇文章\n  * 更正技术性错误\n  * 更正语法性错误\n  * 翻译\n  * 其他情况, 不限于上述\n* 提交一个 issue \n  * 任何建议\n  * 任何问题\n  * 更正错误\n  * 其他情况, 不限于上述\n\n# [授权](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)\n\n"
        },
        {
          "name": "README_KR.md",
          "type": "blob",
          "size": 7.1708984375,
          "content": "# Cpython Internals!![image title](http://www.zpoint.xyz:8080/count/tag.svg?url=github%2FCPython-Internals-KR)\n\n![cpython logo](https://docs.google.com/drawings/d/e/2PACX-1vQKKPvv9xI22zZcRtElIMx_-G22qYcLUvl-gbngubjf76dr80ZjsYQZCCKVqEvJnmBnwZyDXqG9GPlu/pub?w=300&h=200)\n\n* [English](https://github.com/zpoint/CPython-Internals/blob/master/README.md)\n* [简体中文](https://github.com/zpoint/CPython-Internals/blob/master/README_CN.md)\n*  업데이트가 있을 때 알림을 받으려면, **Watch** 하세요.\n\n이 저장소는 [cpython](https://github.com/python/cpython) 소스코드에 대한 나의 노트/블로그 입니다.\n\ncpython 구현의 모든 상세한 부분들을 설명하도록 할 것 입니다.\n\n```shell script\n# 3.8.0a0 버전을 기반으로 합니다.\ncd cpython\ngit reset --hard ab54b9a130c88f708077c2ef6c4963b632c132b3\n\n```\n\n다음의 내용들은 파이쎤 프로그래밍 경험이 있거나 파이썬 인터프리터 내부 구현에 관심이 있는 사람들을 위한 것이며, 초보자나 고급 자료가 필요하다면 [awesome-python-books](https://github.com/Junnplus/awesome-python-books) 을 참고하세요.\n\n# 목차\n\n* [객체들(Objects)](#객체들(Objects))\n* [모듈들(Modules)](#모듈들(Modules))\n* [라이브러리(Lib)](#라이브러리(Lib))\n* [인터프리터(Interpreter)](#인터프리터(Interpreter))\n* [확장(Extension)](#확장(Extension))\n* [공부할 자료(Learning material)](#공부할-자료)\n* [기여(Contribution)](#Contribution)\n* [라이센스(License)](#License)\n\n\n\n# 객체들(Objects)\n - [x] [dict](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/dict/dict.md)\n - [x] [long/int](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/long/long.md)\n - [x] [unicode/str](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/str/str.md)\n - [x] [set](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/set/set.md)\n - [x] [list(timsort)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/list/list.md)\n - [x] [tuple](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/tuple/tuple.md)\n - [x] [bytes](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/bytes/bytes.md)\n - [x] [bytearray(buffer protocol)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/bytearray/bytearray.md)\n - [x] [float](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/float/float.md)\n - [x] [func(user-defined method)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/func/func.md)\n - [x] [method(builtin method)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/method/method.md)\n - [x] [iter](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/iter/iter.md)\n - [x] [gen(generator/coroutine/async generator)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/gen/gen.md)\n - [x] [class(bound method/classmethod/staticmethod)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/class/class.md)\n - [x] [complex](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/complex/complex.md)\n - [x] [enum](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/enum/enum.md)\n - [x] [type(mro/metaclass/creation of class/instance)](https://github.com/zpoint/CPython-Internals/blob/master/BasicObject/type/type.md)\n\n# 모듈들(Modules)\n\n - [ ] io\n \t- [x] [fileio](https://github.com/zpoint/CPython-Internals/blob/master/Modules/io/fileio/fileio.md)\n - [ ] [pickle](https://github.com/zpoint/CPython-Internals/blob/master/Modules/pickle/pickle.md)\n\n# 라이브러리(Lib)\n\n - [x] [re(regex)](https://github.com/zpoint/CPython-Internals/blob/master/Modules/re/re.md)\n - [ ] asyncio\n\n# 인터프리터(Interpreter)\n\n - [x] [gil(Global Interpreter Lock)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/gil/gil.md)\n - [x] [gc(Garbage Collection)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/gc/gc.md)\n - [x] [memory management](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/memory_management/memory_management.md)\n - [x] [descr(how does attribute access work/`__get__`/`__getattribute__`/`__getattr__`)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/descr/descr.md)\n - [x] [exception(exception handling)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/exception/exception.md)\n - [x] [module(how does import work)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/module/module.md)\n - [x] [frame](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/frame/frame.md)\n - [x] [code](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/code/code.md)\n - [x] [slots/`__slots__`(how does attribute initialized in the creation of class/instance)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/slot/slot.md)\n - [x] [thread](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/thread/thread.md)\n - [x] [PyObject(overview)](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/pyobject/pyobject.md)\n\n# 확장(Extension)\n\n - [x] [C API(profile python code and write pure C extension)](https://github.com/zpoint/CPython-Internals/blob/master/Extension/C/c.md)\n - [ ] Cython(C extension)\n - [x] [Boost C++ libaries (C\\+\\+ extension)](https://github.com/zpoint/Boost-Python-Examples)\n - [ ] [C++ extension](https://github.com/zpoint/CPython-Internals/blob/master/Extension/CPP/cpp.md)\n \t- [x] integrate with NumPy\n \t- [x] bypass the GIL\n\n\n# 문법(Grammar)\n\n- [x] [Compile Phase](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/compile/compile.md)\n   - [x] [Grammar/MetaGrammar to DFA](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/compile/compile.md)\n   - [x] [CST to AST](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/compile2/compile.md)\n   - [x] [AST to python byte code](https://github.com/zpoint/CPython-Internals/blob/master/Interpreter/compile3/compile.md)\n\n# 공부할 자료(Learning material)\n\n읽어본 자료들만 추천할 것 입니다.\n\n* [CPython internals - Interpreter and source code overview(youtube video)](https://www.youtube.com/watch?v=LhadeL7_EIU&list=PLzV58Zm8FuBL6OAv1Yu6AwXZrnsFbbR0S)\n* [< < Inside The Python Virtual Machine > >](https://leanpub.com/insidethepythonvirtualmachine)\n* [< < Python源码剖析 > >](https://book.douban.com/subject/3117898/)\n* [rushter(blog/eng)](https://rushter.com/)\n* [YET ANOTHER PYTHON INTERNALS BLOG(blog/eng)](https://pythoninternal.wordpress.com/)\n* [Junnplus(blog/cn)](https://github.com/Junnplus/blog/issues)\n* [manjusaka(blog/cn)](https://manjusaka.itscoder.com/)\n* [aoik-Python's compiler series(blog/eng)](https://aoik.me/blog/posts/python-compiler-from-grammar-to-dfa)\n\n# 기여(Contribution)\n\n모든 기여는 환영입니다!\n\n* pull request 제출하기\n  *  당신이 공유하기를 원하는 지식\n  * 새로운 내용 추가\n  * 기술적 결함 교정\n  * 영어 문법 교정\n  * 번역\n  * 그밖에 다른 무엇이든지\n* issue 열기\n  * 제안\n  * 질문\n  * 실수 교정\n  * 그밖에 다른 무엇이든지\n\n# [라이센스(License)](https://creativecommons.org/licenses/by-nc-sa/4.0/)\n"
        },
        {
          "name": "change_code_reference.py",
          "type": "blob",
          "size": 1.703125,
          "content": "# coding = utf8\nimport os\nimport re\n\n\ndef replace_func(match):\n    full_text = match.group(0)\n    if \"int \" in full_text or \"char \" in full_text or \"void \" in full_text or \"PyObject\" in full_text or \"#define \" in full_text or \"typedef \" in full_text or \"usedpools\" in full_text or \"for (\" in full_text:\n        lang = \"c\"\n    elif \"redis-cli\" in full_text or \"cd \" in full_text or \"git \" in full_text or \"mkdir \" in full_text or \"Timer \" in full_text:\n        lang = \"shell script\"\n    else:\n        lang = \"python3\"\n    if full_text[-2] != \"\\n\":\n        full_text += \"\\n\"\n    middle = full_text[1:-2]\n    final_middle = \"\"\n    for line in middle.split(\"\\n\"):\n        if line:\n            if line[0] == \"\\t\":\n                skip_index = 1\n            else:\n                skip_index = 4\n            final_middle += line[skip_index:] + \"\\n\"\n        else:\n            final_middle += \"\\n\"\n    full_text = full_text[0] + \"\\n```\" + lang + final_middle + \"\\n```\" + full_text[-2:]\n    return full_text\n\n\ndef replace(text):\n    r = re.sub(\"\\n\\n((((?:\\t|    ).+?\\n)|\\n)+)(?:\\n(?!\\t|    )|$)\", replace_func, text, flags=re.DOTALL)\n    return r\n\n\ndef replace_all():\n    for each in os.walk(\"./\"):\n        if each[2]:\n            for each_file in each[2]:\n                suffix = each_file.split(\".\")[-1]\n                if suffix == \"md\":\n                    full_file = each[0] + os.path.sep + each_file\n                    with open(full_file, \"r\") as f:\n                        text = f.read()\n                    replaced_text = replace(text)\n                    with open(full_file, \"w\") as f:\n                        f.write(replaced_text)\n                    print(\"replaced: %s\" % (full_file, ))\n\n\nif __name__ == \"__main__\":\n    replace_all()\n"
        }
      ]
    }
  ]
}