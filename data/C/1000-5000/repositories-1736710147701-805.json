{
  "metadata": {
    "timestamp": 1736710147701,
    "page": 805,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "osqp/osqp",
      "stars": 1763,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.267578125,
          "content": "# https://editorconfig.org\n\nroot = true\n\n[*.{c, h, cpp, hpp}]\ncharset = utf-8\nindent_style = space\nindent_size = 2\nend_of_line = lf\ntrim_trailing_whitespace = true\n\n\n# Python\n[*.py]\nindent_size = 4\n\n# Python\n[*.yml]\nindent_size = 2\n\n# CMake\n[CMakeLists.txt]\nindent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0390625,
          "content": "* text=auto\n*.c text\n*.h text\n*.cpp text"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.7978515625,
          "content": "# C language\n# -------------------------------------------------------------------\n# Compile commands for cquery\ncompile_commands.json\n\n# Out folder\nout/\n\n# Prerequisites\n*.d\n\n# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Linker output\n*.ilk\n*.map\n*.exp\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Debug files\n*.dSYM/\n*.su\n*.idb\n*.pdb\n\n# Kernel Module Compile Results\n*.mod*\nmodules.order\nModule.symvers\nMkfile.old\ndkms.conf\n\n# Code coverage\n*.gcda\n*.gcno\ncoverage.info\ncoverage_html/\n\n# Doxygen output\ndocs/doxygen_out\n\n# Editor files\n# -------------------------------------------------------------------\n*.swp\n.ycm_extra_conf.py\n*.swo\n*.vscode/\n\n\n\n# Gurobi\n# -------------------------------------------------------------------\ngurobi.log\n\n\n# Tags\n# -------------------------------------------------------------------\ntags\n.tags\n.tags1\nTAGS\n\n# Python Language\n# -------------------------------------------------------------------\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild*/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# IPython Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# dotenv\n.env\n\n# virtualenv\n.venv/\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n\n# Rope project settings\n.ropeproject\n\n# Python 3 porting backup files\n*.bak\n\n# Mac OSX Files\n# -------------------------------------------------------------------\n.DS_Store\n\n\n# Matlab\n# -------------------------------------------------------------------\n# Files generated during compilation\n*.o\n*.m~\n*.mexmaci64*\n*.mexw64*\n*.mexa64*\nout/\n*.asv\n\n# Other data files\n# *.mat\n\n# Emacs\n\\#*\\#\n.\\#*\n*~\n\n# Clang completer\n# -------------------------------------------------------------------\n.clang_complete\n\n# CMake Files\n# -------------------------------------------------------------------\n*.stamp\n\n.cquery_cached_index\n\n# CMake FetchContent folders\nalgebra/_common/lin_sys/qdldl/qdldl_sources\nalgebra/_common/lin_sys/direct/qdldl_sources\nalgebra/default/lin_sys/direct/qdldl_sources\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.2119140625,
          "content": "# See https://pre-commit.com for more information\n# See https://pre-commit.com/hooks.html for more hooks\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n    - id: check-yaml\n"
        },
        {
          "name": ".valgrind-suppress.supp",
          "type": "blob",
          "size": 1.1103515625,
          "content": "{\n   ignore_get_max_threads_intel\n   Memcheck:Param\n   sched_setaffinity(mask)\n   fun:syscall\n   fun:__kmp_affinity_determine_capable\n   fun:_Z20__kmp_env_initializePKc\n   fun:__kmp_middle_initialize\n   fun:omp_get_num_procs@@VERSION\n   fun:mkl_serv_domain_get_max_threads\n   obj:*\n}\n\n{\n   ignore mkl_get_max_threads\n   Memcheck:Cond\n   fun:mkl_serv_domain_get_max_threads\n   obj:*\n}\n\n{\n   ignore_libiomp_intel\n   Memcheck:Cond\n   fun:__intel_sse2_strrchr\n   fun:*_INTERNAL_45_______src_thirdparty_tbb_omp_dynamic_link_cpp_*\n   fun:__sti__$E\n   obj:*libiomp*.so\n}\n\n\n{\n   mkl_malloc\n   Memcheck:Leak\n   match-leak-kinds: definite\n   fun:malloc\n   fun:_dl_signal_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:mkl_serv_inspector_suppress\n   fun:mkl_serv_lock\n   fun:mkl_serv_core_register_cleanup\n   fun:__sti__$E\n   fun:call_init.part.0\n}\n\n{\n   another_intel\n   Memcheck:Addr16\n   fun:__intel_sse2_strrchr\n   fun:_ZN67_INTERNAL_45_______src_thirdparty_tbb_omp_dynamic_link_cpp_d77f5ef55__kmp12init_dl_dataEv\n   fun:__sti__$E\n   obj:*libiomp5.so\n   obj:*libiomp5.so\n}\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.607421875,
          "content": "Version 1.0.0.beta0 (May 31, 2021)\n----------------------------------\nFirst beta release of OSQP v1.0\n\nNew features:\n* Introduced new linear algebra backend system allowing compute framework to be changed at compile time.\n* Merged cuOSQP project into main OSQP project (inside algebra/cuda directory).\n* Introduced an Intel MKL-based algebra backend using the MKL sparse BLAS API, Vector Math Library.\n  This backend contains both the Pardiso solver and an RCI conjugate gradient implementation.\n* Added code generation capabilities to the C-level API (note, only problem export is in the C API, no file\n  copying is done).\n* Added initial adjoint derivative computation to the C-level API.\n\nMain changes:\n* Updated QDLDL to 0.1.7.\n* Changed QDLDL to be included through CMake FetchContent instead of a git submodule.\n* The MKL Pardiso solver is only available with the MKL backend.\n* CMake installs CMake config files for consuming applications to use.\n* All of OSQP's API is contained inside the `public` include files (there should be no need for users to include anything in `private`).\n* All OSQP functions, defines and types are prefixed with `OSQP` (in some capitalization) to namespace the API.\n\nDeveloper-centric changes:\n* Test suite switched to Catch2 and now incorporates modern C++ for memory management and organization.\n* ASAN flags integrated into main OSQP CMake build system.\n\n\nVersion 0.6.3 (25 May 2023)\n------------------------------\n* Fix MKL function prototypes (required for CRAN compilation) (PR [#487](https://github.com/osqp/osqp/pull/487))\n* Use a constant interval for adaptive rho when in embedded=2 mode (PR [#347](https://github.com/osqp/osqp/pull/347))\n* Include version.h in the OSQP installed headers (Fixes [#323](https://github.com/osqp/osqp/issues/323))\n* Switch unit testing to use Catch2\n* Switch to GitHub actions CI system\n* Switched binary distribution from bintray to GitHub releases\n* Various documentation fixes and improvements\n\n\nVersion 0.6.2 (6 January 2021)\n------------------------------\n* Fix segfault python multithreading\n* Compatibility python 3.9\n* Updated QDLDL to version 0.1.5\n* Drop Python 2.7 support\n\n\n\nVersion 0.6.0 (30 August 2019)\n------------------------------\n* Added meaningful return values to internal functions. Changed syntax of `osqp_setup` function. It now returns an exitflag.\n* `osqp_setup` function requires `P` to be upper triangular. It returns a nonzero exitflag otherwise.\n* Custom memory allocators via cmake and the configure file.\n* Changed interfaces to linsys solver functions. The solve function now computes `(x_tilde,z_tilde)` instead of `(x_tilde,nu)`. This allows to implement custom linear system solvers (also indirect).\n* Added `solve` function in Python interface that performs `setup` `solve` and `cleanup` for you directly and disables GIL.\n* Improved code generation folder structure.\n\n\nVersion 0.5.0 (10 December 2018)\n----------------\n* Added `update_time` to the info structure.\n* Fixed [#101](https://github.com/osqp/osqp/issues/101).\n\n\nVersion 0.4.1 (25 September 2018)\n---------------------------------\n* Updated QDLDL to version 0.1.3.\n* Added check for nonconvex cost function (non-positive semidefinite `P`) after factorization is performed.\n* Added complete sources distribution on bintray.com (including QDLDL).\n\n\nVersion 0.4.0 (23 July 2018)\n----------------------------\n* Added check for nonconvex cost function (non-positive semidefinite `P`).\n* Removed SuiteSparse LDL in favor of [QDLDL](https://github.com/osqp/qdldl).\n* Static library `libosqpstatic` now renamed as `libosqp`.\n\n\nVersion 0.3.1 (10 June 2018)\n----------------------------\n* Fixed [#62](https://github.com/osqp/osqp/issues/62).\n* Moved interfaces to separate repositories\n* Fixed [#54](https://github.com/osqp/osqp/issues/54).\n* Changes to support Matlab 2018a\n* Added support for new interface in R\n\nVersion 0.3.0 (5 March 2018)\n----------------------------\n* Added `time_limit` option\n* Added CUTEst interface\n* Fixed bug in upper triangular `P` extraction. Now the solver can accept both complete `P` matrix or just the upper triangular part.\n* Fixed [#33](https://github.com/osqp/osqp/issues/33)\n* Fixed [#34](https://github.com/osqp/osqp/issues/34)\n* Allow `eps_rel=0` [#40](https://github.com/osqp/osqp/issues/40)\n* Fixed bug when calling `osqp_solve` or `osqp_cleanup` after failed linear system initialization\n* Add \"install\" CMake target and installation of CMake configuration files\n* Fixed potential name conflict with SCS [47](https://github.com/osqp/osqp/issues/47)\n* Changed `set_default_settings` to `osqp_set_default_settings` and brought function to main API header `osqp.h`\n* Fixed [#49](https://github.com/osqp/osqp/issues/49)\n\n\nVersion 0.2.1 (25 November 2017)\n---------------------------------\n* Fixed problem with code generation and pypi `data_files` (everything now in [MANIFEST.in](https://github.com/pypa/sampleproject/issues/30))\n\n\nVersion 0.2.0 (23 November 2017)\n---------------------------------\n*   Added adaptive rho -> Much more reliable convergence!\n*   Simplified several settings\n    *  \"early_terminate\" and \"early_terminate_interval\" -> \"check_termination\"\n    *  \"scaling_iter\" removed and put inside \"scaling\" parameter\n*   Julia interface [OSQP.jl](https://github.com/osqp/OSQP.jl)\n*   Shared libraries available on bintray.com\n*   Added inaccurate return statuses\n*   Added new object-oriented structure for linear system solvers\n*   Added MKL Pardiso interface using shared dynamic library loader\n*   Added diagonal rho vector with different values for equality/inequality constraints (interface still have scalar rho)\n*   Return certificates of infeasibility in results structure\n*   Now code generation produces a static library\n\n\nVersion 0.1.3 (21 September 2017)\n---------------------------------\n* Fixed sources distribution on Python\n\n\nVersion 0.1.2 (20 July 2017)\n------------------------------\n*   Added option to terminate with scaled or unscaled residual\n*   Now Matlab interface does support logical entries for the settings\n*   Fixed bug in index ordering of sparse matrices of Python interface\n*   Changed 2-norms to inf-norms\n*   Fixed code generation bug when scaling is disabled [#7](https://github.com/osqp/osqp/issues/7)\n*   Removed warnings in code-generation for standard <= C99\n*   Fixed MATLAB 2015b compatibility [#6](https://github.com/osqp/osqp/issues/6)\n\n\nVersion 0.1.1 (11 April 2017)\n-----------------------------\n*   Fixed crashes during polishing when factorization fails\n*   Added package to Pypi\n*   Fixed relative paths Matlab\n\n\nVersion 0.1.0 (10 April 2017)\n-----------------------------\n*   Linux, Mac and Windows\n*   Interface to Python 2.7, 3.5+\n*   Interface to Matlab 2015b+\n*   Embedded code generation\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 1.1064453125,
          "content": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite the article from the preferred-citation below.\"\ntitle: \"OSQP Solver\"\nauthors:\n  - family-names: \"Stellato\"\n    given-names: \"Bartolomeo\"\n  - family-names: \"Banjac\"\n    given-names: \"Goran\"\n  - family-names: \"Goulart\"\n    given-names: \"Paul\"\n  - family-names: \"Bemporad\"\n    given-names: \"Alberto\"\n  - family-names: \"Boyd\"\n    given-names: \"Stephen\"\nurl: \"https://github.com/osqp/osqp\"\n\n# This is the main OSQP paper that describes the algorithm\npreferred-citation:\n  type: article\n  authors:\n  - family-names: \"Stellato\"\n    given-names: \"Bartolomeo\"\n  - family-names: \"Banjac\"\n    given-names: \"Goran\"\n  - family-names: \"Goulart\"\n    given-names: \"Paul\"\n  - family-names: \"Bemporad\"\n    given-names: \"Alberto\"\n  - family-names: \"Boyd\"\n    given-names: \"Stephen\"\n  title: \"OSQP: an operator splitting solver for quadratic programs\"\n  journal: \"Mathematical Programming Computation\"\n  start: 637 # First page number\n  end: 672 # Last page number\n  volume: 12\n  issue: 4\n  year: 2020\n  doi: 10.1007/s12532-020-00179-2\n  url: https://doi.org/10.1007/s12532-020-00179-2\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 19.9326171875,
          "content": "cmake_minimum_required(VERSION 3.18)\nproject(osqp)\n\ninclude(GNUInstallDirs)\ninclude(CMakeDependentOption)\ninclude(CMakePackageConfigHelpers)\n\n# Detect the CMake build type and use that as the debug indicator\nif(DEFINED CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE} CACHE STRING \"Set to either \\\"Release\\\" or \\\"Debug\\\"\")\nelse()\n    set(CMAKE_BUILD_TYPE Release CACHE STRING \"Set to either \\\"Release\\\" or \\\"Debug\\\"\")\nendif()\n\nif(CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n  set(OSQP_ENABLE_DEBUG ON)\n  set(CMAKE_VERBOSE_MAKEFILE ON)\n  set(CMAKE_EXPORT_COMPILE_COMMANDS ON)\nendif()\n\nmessage(STATUS \"Debug mode: ${OSQP_ENABLE_DEBUG}\")\n\n# Detect operating system\n# ----------------------------------------------\nmessage(STATUS \"We are on a ${CMAKE_SYSTEM_NAME} system\")\nif(${CMAKE_SYSTEM_NAME} STREQUAL \"Linux\")\n  set(IS_LINUX ON)\nelseif(${CMAKE_SYSTEM_NAME} STREQUAL \"Darwin\")\n  set(IS_MAC ON)\nelseif(${CMAKE_SYSTEM_NAME} STREQUAL \"Windows\")\n  set(IS_WINDOWS ON)\nendif()\n\n# OSQP Versioning\n# ----------------------------------------------\nset(OSQP_VERSION\n    \"0.0.0\"\n    CACHE STRING \"The version number of OSQP\")\nif(NOT OSQP_VERSION STREQUAL \"0.0.0\")\n  configure_file(\"${PROJECT_SOURCE_DIR}/configure/version.h.in\" \"${PROJECT_SOURCE_DIR}/include/private/version.h\")\nendif()\n\n# Setup the output directories\nset(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/out)\nset(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/out)\n\n# Prevent generation of output Debug/ folder on MSVC See https://stackoverflow.com/questions/543203\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG \"${EXECUTABLE_OUTPUT_PATH}\")\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE \"${EXECUTABLE_OUTPUT_PATH}\")\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG \"${LIBRARY_OUTPUT_PATH}\")\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE \"${LIBRARY_OUTPUT_PATH}\")\n\n# Some non-standard CMake modules\nlist(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/configure/cmake)\ninclude(Utils)\n\n# Set options\n# ----------------------------------------------\noption(OSQP_BUILD_SHARED_LIB \"Build the shared library\" ON)\noption(OSQP_BUILD_STATIC_LIB \"Build the static library\" ON)\n\ncmake_dependent_option( OSQP_BUILD_DEMO_EXE\n                        \"Build the demo executable (requires the static library)\"\n                        ON    # Default to on\n                        OSQP_BUILD_STATIC_LIB OFF ) # Force off if the static library isn't built\n\ncmake_dependent_option( OSQP_BUILD_UNITTESTS\n                        \"Build the unit testing suite\"\n                        OFF    # Default to off\n                        OSQP_BUILD_STATIC_LIB OFF ) # Force off if the static library isn't built\n\ncmake_dependent_option( OSQP_COVERAGE_CHECK\n                        \"Check the code coverage of the unit tests\"\n                        OFF    # Default to off\n                        OSQP_BUILD_UNITTESTS OFF ) # Force off if the unit tests aren't built\n\nset(OSQP_ALGEBRA_BACKEND\n    \"builtin\"\n    CACHE STRING \"The Algebra to use (builtin/mkl/cuda)\")\n\noption(OSQP_ENABLE_PRINTING \"Enable solver printing\" ON)\noption(OSQP_ENABLE_PROFILING \"Enable solver profiling (timing)\" ON)\noption(OSQP_ENABLE_INTERRUPT \"Enable user interrupt (e.g. Ctrl-C)\" ON)\n\nset(OSQP_PROFILER_ANNOTATIONS \"OFF\" CACHE STRING\n    \"Enable profiler annotations (NVTX for CUDA backend, ITT otherwise)\")\n\n# Allow appending a string to the end of the library and the soname so people can have\n# multiple libraries side-by-side on an install.\nset(OSQP_LIB_SUFFIX \"\" CACHE STRING \"String to append to the library name\")\nmark_as_advanced(OSQP_LIB_SUFFIX)\n\n# Set the relevant boolean values for the algebra\nif(${OSQP_ALGEBRA_BACKEND} STREQUAL \"builtin\")\n  set(OSQP_ALGEBRA_BUILTIN ON)\nelseif(${OSQP_ALGEBRA_BACKEND} STREQUAL \"mkl\")\n  set(OSQP_ALGEBRA_MKL ON)\nelseif(${OSQP_ALGEBRA_BACKEND} STREQUAL \"cuda\")\n  set(OSQP_ALGEBRA_CUDA ON)\nendif()\n\n# Is the code generated for embedded platforms? 1 :   Yes. Matrix update not allowed. 2 :   No. Matrix update allowed.\nif(DEFINED OSQP_EMBEDDED_MODE)\n  if(NOT OSQP_ALGEBRA_BUILTIN)\n    message(WARNING \"Forcing OSQP_ALGEBRA_BACKEND=builtin for OSQP_EMBEDDED_MODE mode.\")\n  endif()\n\n  set(OSQP_ALGEBRA_BACKEND \"builtin\")\n  set(OSQP_ALGEBRA_BUILTIN ON)\n  unset(OSQP_ALGEBRA_CUDA)\n  unset(OSQP_ALGEBRA_MKL)\n\n  if(OSQP_ENABLE_PRINTING AND NOT OSQP_CUSTOM_PRINTING)\n    message(WARNING \"Disabling printing in OSQP_EMBEDDED_MODE mode.\")\n    set(OSQP_ENABLE_PRINTING OFF)\n  endif()\n\n  if(OSQP_ENABLE_INTERRUPT AND NOT OSQP_CUSTOM_INTERRUPT)\n    message(WARNING \"Disabling interrupts in OSQP_EMBEDDED_MODE mode.\")\n    set(OSQP_ENABLE_INTERRUPT OFF)\n  endif()\n\n  if(OSQP_ENABLE_PROFILING AND NOT OSQP_CUSTOM_TIMING)\n    message(WARNING \"Disabling profiling (timing) for OSQP_EMBEDDED_MODE mode.\")\n    set(OSQP_ENABLE_PROFILING OFF)\n  endif()\n\n  # Disable shared library and demo exe on embedded applications\n  if(${OSQP_BUILD_SHARED_LIB} OR ${OSQP_BUILD_DEMO_EXE})\n    message(WARNING \"Disabling shared library and demo executable for OSQP_EMBEDDED_MODE mode.\")\n  endif()\n\n  set(OSQP_BUILD_SHARED_LIB OFF)\n  set(OSQP_BUILD_DEMO_EXE OFF)\n\n  if(OSQP_EMBEDDED_MODE EQUAL 1)\n    message(STATUS \"Embedded mode: Vector updates\")\n  elseif(OSQP_EMBEDDED_MODE EQUAL 2)\n    message(STATUS \"Embedded mode: Matrix updates\")\n  else()\n    error(\"Unknown OSQP_EMBEDDED_MODE mode: ${OSQP_EMBEDDED_MODE}\")\n  endif()\nelse()\n  message(STATUS \"Embedded mode: OFF\")\nendif()\n\n# Display final algebra chosen\nmessage(STATUS \"Algebra backend: ${OSQP_ALGEBRA_BACKEND}\")\n\n# Display final profiling behaviour\nmessage(STATUS \"Solver profiling: ${OSQP_ENABLE_PROFILING}\")\n\n# Display final interrupt behaviour\nmessage(STATUS \"Solver interrupt: ${OSQP_ENABLE_INTERRUPT}\")\n\nif(OSQP_ALGEBRA_CUDA)\n  # Some options have different defaults for the CUDA algebra\n  option(OSQP_USE_FLOAT \"Use floats instead of doubles\" ON)\n  option(OSQP_USE_LONG \"Use long integers (64bit) for indexing\" OFF)\nelse()\n  option(OSQP_USE_FLOAT \"Use floats instead of doubles\" OFF)\n  option(OSQP_USE_LONG \"Use long integers (64bit) for indexing\" ON)\nendif()\n\nif(OSQP_USE_FLOAT AND OSQP_ALGEBRA_MKL)\n  message(WARNING \"Disabling OSQP_USE_FLOAT for MKL (Intel RCI ISS does not support single-precision values yet.)\")\n  set(OSQP_USE_FLOAT OFF)\nendif()\n\nif(OSQP_USE_FLOAT)\n  message(STATUS \"Using single precision floating-point\")\nelse()\n  message(STATUS \"Using double precision floating-point\")\nendif()\n\nif(NOT (CMAKE_SIZEOF_VOID_P EQUAL 8))\n  message(WARNING \"Disabling long integers (64bit) on 32bit machine.\")\n  set(OSQP_USE_LONG OFF)\nendif()\n\nif(OSQP_ALGEBRA_CUDA AND OSQP_USE_LONG)\n  message(WARNING \"Disabling long integers (64bit) for CUDA.\")\n  set(OSQP_USE_LONG OFF)\nelseif(DEFINED OSQP_EMBEDDED_MODE)\n  # The long long type is not in the C89 spec, and our embedded code must be C89 compliant\n  message(STATUS \"Disabling long integers (64bit) for embedded mode\")\n  set(OSQP_USE_LONG OFF)\nendif()\n\nif(OSQP_USE_LONG)\n  message(STATUS \"Using long integers\")\nelse()\n  message(STATUS \"Using standard (int) integers\")\nendif()\n\noption(OSQP_ASAN \"Enable ASAN\" OFF)\n\ncmake_dependent_option( OSQP_CODEGEN \"Enable code generation\"\n                        ON\n                        \"OSQP_ALGEBRA_BUILTIN;NOT DEFINED OSQP_EMBEDDED_MODE\" OFF )\n\nmessage(STATUS \"Code generation: ${OSQP_CODEGEN}\")\n\ncmake_dependent_option( OSQP_ENABLE_DERIVATIVES \"Enable derivative computation\"\n                        ON\n                        \"OSQP_ALGEBRA_BUILTIN;NOT DEFINED EMBEDDED\" OFF )\n\nmessage( STATUS \"Derivative support: ${OSQP_ENABLE_DERIVATIVES}\" )\n\n# Rename compile-time constants & configure\n# ----------------------------------------------\n# If we are creating any OSQP_* compile-time constants from CMake variables, do so here.\nif(OSQP_ENABLE_PRINTING AND OSQP_CUSTOM_PRINTING)\n  message(STATUS \"Using custom printing header: ${OSQP_CUSTOM_PRINTING}\")\nendif()\n\nif(OSQP_CUSTOM_MEMORY)\n  message(STATUS \"Using custom memory management header: ${OSQP_CUSTOM_MEMORY}\")\nendif()\n\nconfigure_file(${CMAKE_CURRENT_SOURCE_DIR}/configure/osqp_configure.h.in\n               ${CMAKE_CURRENT_BINARY_DIR}/include/public/osqp_configure.h NEWLINE_STYLE LF)\n\n\n# CUDA support\n# ----------------------------------------------\nif(OSQP_ALGEBRA_CUDA)\n  # Our backend uses both CUDA and C++\n  enable_language(CXX)\n  enable_language(CUDA)\n  find_package(CUDA)\n\n  # Locate the individual CUDA libraries and create targets for them\n  find_package(CUDAToolkit)\n\n  # sm_75 -> Turing support\n  if(OSQP_USE_FLOAT)\n    set(CMAKE_CUDA_ARCHITECTURES 52 75)\n    # set(CMAKE_CUDA_FLAGS \"${CMAKE_CUDA_FLAGS} --gpu-architecture=compute_52 --gpu-code=sm_52,sm_75\")\n  else()\n    # To use doubles we need compute capability 6.0 for atomic operations\n    set(CMAKE_CUDA_ARCHITECTURES 60 75)\n    # set(CMAKE_CUDA_FLAGS \"${CMAKE_CUDA_FLAGS} --gpu-architecture=compute_60 --gpu-code=sm_60,sm_75\")\n  endif()\nendif()\n\n\n# Set Compiler flags\n# ----------------------------------------------\nset(CMAKE_POSITION_INDEPENDENT_CODE ON) # -fPIC\n\nif(NOT MSVC)\n  if(OSQP_COVERAGE_CHECK)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} --coverage\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} --coverage\")\n    if(FORTRAN)\n      set(CMAKE_FORTRAN_FLAGS \"${CMAKE_FORTRAN_FLAGS} --coverage\")\n    endif(FORTRAN)\n  endif()\n\n  if(OSQP_ASAN)\n        set( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -g -fsanitize=address -fno-optimize-sibling-calls -fsanitize-address-use-after-scope -fno-omit-frame-pointer\" )\n        set( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -g -D_GLIBCXX_SANITIZE_VECTOR -fsanitize=address -fno-optimize-sibling-calls -fsanitize-address-use-after-scope -fno-omit-frame-pointer\" )\n\n        # ASAN shouldn't be used with these options (https://github.com/google/sanitizers/wiki/AddressSanitizer#faq)\n        set( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fno-stack-protector -U_FORTIFY_SOURCE\" )\n        set( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-stack-protector -U_FORTIFY_SOURCE\" )\n  endif()\n\n  if(OSQP_ENABLE_DEBUG)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -O0 -g\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -O0 -g\")\n    set(CMAKE_CUDA_FLAGS \"${CMAKE_CUDA_FLAGS} -G -g\")\n  else()\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -O3\")\n  endif()\n\n  set(CMAKE_C_STANDARD_LIBRARIES \"${CMAKE_C_STANDARD_LIBRARIES} -lm\") # Include math\n  # Include real time library in linux\n  if(IS_LINUX)\n    set(CMAKE_C_STANDARD_LIBRARIES \"${CMAKE_C_STANDARD_LIBRARIES} -lrt -ldl\")\n  endif()\nendif(NOT MSVC)\n\n# ----------------------------------------------\n# Initialize the code generation file copying\n# ----------------------------------------------\nif( OSQP_CODEGEN )\n  set( EMBEDDED_BUILD_ROOT_DIR \"${CMAKE_BINARY_DIR}/codegen_src\" )\n\n  set( EMBEDDED_BUILD_SRC_DIR \"${EMBEDDED_BUILD_ROOT_DIR}/src\" )\n  set( EMBEDDED_BUILD_PUBLIC_INC_DIR \"${EMBEDDED_BUILD_ROOT_DIR}/inc/public\" )\n  set( EMBEDDED_BUILD_PRIVATE_INC_DIR \"${EMBEDDED_BUILD_ROOT_DIR}/inc/private\" )\n\n  file( MAKE_DIRECTORY ${EMBEDDED_BUILD_ROOT_DIR} )\n  file( MAKE_DIRECTORY ${EMBEDDED_BUILD_SRC_DIR} )\n  file( MAKE_DIRECTORY ${EMBEDDED_BUILD_PUBLIC_INC_DIR} )\n  file( MAKE_DIRECTORY ${EMBEDDED_BUILD_PRIVATE_INC_DIR} )\n\n  add_custom_target(copy_codegen_files ALL\n                    COMMENT \"Copying source files needed for code generation\" )\n\n  # Copy a sample makefile into the build tree\n  add_custom_command(OUTPUT \"${EMBEDDED_BUILD_ROOT_DIR}/Makefile\"\n                     COMMAND ${CMAKE_COMMAND} -E copy \"${CMAKE_CURRENT_SOURCE_DIR}/configure/Makefile.emosqp\" \"${EMBEDDED_BUILD_ROOT_DIR}/Makefile\"\n                     DEPENDS \"${CMAKE_CURRENT_SOURCE_DIR}/configure/Makefile.emosqp\"\n                     COMMENT \"Copying codegen makefile\" )\n\n  add_custom_target( copy_codegen_makefile DEPENDS \"${EMBEDDED_BUILD_ROOT_DIR}/Makefile\" )\n  add_dependencies( copy_codegen_files copy_codegen_makefile )\nendif()\n\n# ----------------------------------------------\n# OSQPLIB\n# ----------------------------------------------\nadd_library(OSQPLIB OBJECT \"\")\n\nadd_subdirectory(include)\nadd_subdirectory(src)\nadd_subdirectory(algebra)\n\nget_property(\n  osqplib_includes\n  TARGET OSQPLIB\n  PROPERTY INCLUDE_DIRECTORIES)\nget_property(\n  osqplib_sources\n  TARGET OSQPLIB\n  PROPERTY SOURCES)\n\nget_property(\n  osqplib_link_libs\n  TARGET OSQPLIB\n  PROPERTY LINK_LIBRARIES)\n\n# ----------------------------------------------\n# Language-specific compilation checks\n# ----------------------------------------------\nif(PYTHON)\n  if(NOT PYTHON_INCLUDE_DIRS)\n    message(FATAL_ERROR \"You need Python include directories to build the Python interface\")\n  endif(NOT PYTHON_INCLUDE_DIRS)\n\n  include_directories(${PYTHON_INCLUDE_DIRS})\n  add_definitions(-DPYTHON)\n\n  if(OSQP_BUILD_UNITTESTS)\n    message(STATUS \"Disabling OSQP_BUILD_UNITTESTS because we are building Python interface\")\n    set(OSQP_BUILD_UNITTESTS OFF)\n  endif(OSQP_BUILD_UNITTESTS)\nendif(PYTHON)\n\nif(R_LANG)\n  find_package(R)\n  if(NOT R_FOUND)\n    message(FATAL_ERROR \"You need R libraries to build the R interface\")\n  endif(NOT R_FOUND)\n\n  message(STATUS \"R exec is: \" ${R_EXEC})\n  message(STATUS \"R root dir is: \" ${R_ROOT_DIR})\n  message(STATUS \"R includes are in: \" ${R_INCLUDE_DIRS})\n\n  include_directories(${R_INCLUDE_DIRS})\n  add_definitions(-DR_LANG)\n\n  if(OSQP_BUILD_UNITTESTS)\n    message(STATUS \"Disabling OSQP_BUILD_UNITTESTS because we are building the R interface\")\n    set(OSQP_BUILD_UNITTESTS OFF)\n  endif(OSQP_BUILD_UNITTESTS)\nendif(R_LANG)\n\nif(PYTHON OR R_LANG)\n  # Disable shared library and demo exe when building the interfaces\n  set(OSQP_BUILD_SHARED_LIB OFF)\n  set(OSQP_BUILD_DEMO_EXE OFF)\nendif()\n\n# ----------------------------------------------\n# Static Library - osqpstatic\n# ----------------------------------------------\nmessage( STATUS \"Build static library: \" ${OSQP_BUILD_STATIC_LIB} )\n\nif( OSQP_BUILD_STATIC_LIB )\n  add_library(osqpstatic STATIC\n              $<TARGET_OBJECTS:OSQPLIB>\n              \"${CMAKE_CURRENT_SOURCE_DIR}/src/osqp_api.c\")\n\n  # Append the algebra name to the library file if desired\n  if(OSQP_LIB_SUFFIX)\n    set_target_properties(osqpstatic PROPERTIES OUTPUT_NAME \"osqpstatic_${OSQP_LIB_SUFFIX}\")\n  else()\n    set_target_properties(osqpstatic PROPERTIES OUTPUT_NAME \"osqpstatic\")\n  endif()\n\n  # Link against the libraries for the algebras\n  target_link_libraries(osqpstatic PUBLIC ${osqplib_link_libs})\n\n  if(OSQP_ALGEBRA_BUILTIN)\n    # Transitive dependency on OBJECT library does not work. See https://gitlab.kitware.com/cmake/cmake/-/issues/18682\n    target_sources(osqpstatic PRIVATE $<TARGET_OBJECTS:qdldlobject>)\n  endif()\n  target_include_directories(osqpstatic PRIVATE ${osqplib_includes})\n  target_include_directories(\n    osqpstatic PUBLIC \"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include/public;${CMAKE_CURRENT_BINARY_DIR}/include/public>\"\n                      \"$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/osqp>\")\nendif()\n\n# ----------------------------------------------\n# Shared Library - osqp\n# ----------------------------------------------\nmessage( STATUS \"Build shared library: \" ${OSQP_BUILD_SHARED_LIB} )\n\nif(OSQP_BUILD_SHARED_LIB)\n  add_library(osqp SHARED\n              $<TARGET_OBJECTS:OSQPLIB>\n              \"${CMAKE_CURRENT_SOURCE_DIR}/src/osqp_api.c\")\n  if(OSQP_ALGEBRA_BUILTIN)\n    # Transitive dependency on OBJECT library does not work. See https://gitlab.kitware.com/cmake/cmake/-/issues/18682\n    target_sources(osqp PRIVATE $<TARGET_OBJECTS:qdldlobject>)\n  endif()\n  target_include_directories(osqp PRIVATE ${osqplib_includes})\n  target_include_directories(osqp PUBLIC \"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include/public;${CMAKE_CURRENT_BINARY_DIR}/include/public>\"\n                                         \"$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/osqp>\")\n\n  # Link against the libraries for the algebras\n  target_link_libraries(osqp PRIVATE ${osqplib_link_libs})\n\n  # Declare that we are building the shared library to get proper symbol exports.\n  # Shared library consumers should also define OSQP_SHARED_LIB to get the library\n  # exports properly, so we do it for them in the CMake interface by defining it as\n  # a PUBLIC compile definition.\n  target_compile_definitions(osqp PRIVATE BUILDING_OSQP)\n  target_compile_definitions(osqp PUBLIC  OSQP_SHARED_LIB)\n\n  # Modify the soname of the library to include the algebra if desired\n  if(OSQP_LIB_SUFFIX)\n    set_target_properties(osqp PROPERTIES OUTPUT_NAME \"osqp_${OSQP_LIB_SUFFIX}\")\n  endif()\nendif()\n\n# ----------------------------------------------\n# Application - osqp_demo\n# ----------------------------------------------\nmessage( STATUS \"Build demo executable: \" ${OSQP_BUILD_DEMO_EXE} )\n\nif(OSQP_BUILD_DEMO_EXE)\n  add_executable(osqp_demo ${PROJECT_SOURCE_DIR}/examples/osqp_demo.c)\n  #target_include_directories(osqp_demo PRIVATE ${osqplib_includes})\n  target_link_libraries(osqp_demo osqpstatic ${osqplib_link_libs})\n\n  if(OSQP_CODEGEN)\n    add_executable(osqp_codegen_demo ${PROJECT_SOURCE_DIR}/examples/osqp_codegen_demo.c)\n    target_link_libraries(osqp_codegen_demo osqpstatic)\n  endif()\nendif()\n\n# ----------------------------------------------\n# Installation / Uninstallation\n# ----------------------------------------------\n\n# Install the OSQP Headers\ninstall(FILES ${osqp_headers}\n        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/osqp\")\n\n############################################################\n# Generate and install build system library config files\n############################################################\nif(OSQP_BUILD_STATIC_LIB)\n  install(\n    TARGETS osqpstatic\n    EXPORT osqpstatic\n    ARCHIVE DESTINATION \"${CMAKE_INSTALL_LIBDIR}\"\n    LIBRARY DESTINATION \"${CMAKE_INSTALL_LIBDIR}\"\n    RUNTIME DESTINATION \"${CMAKE_INSTALL_BINDIR}\")\n\n  export(\n    EXPORT osqpstatic\n    FILE \"${CMAKE_CURRENT_BINARY_DIR}/osqpstatic-targets.cmake\"\n    NAMESPACE osqp::)\n\n  install(\n    EXPORT osqpstatic\n    FILE osqpstatic-targets.cmake\n    NAMESPACE osqp::\n    DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/osqp\")\nendif()\n\nif(OSQP_BUILD_SHARED_LIB)\n  install(\n    TARGETS osqp\n    EXPORT osqp\n    LIBRARY DESTINATION \"${CMAKE_INSTALL_LIBDIR}\"\n    ARCHIVE DESTINATION \"${CMAKE_INSTALL_LIBDIR}\"\n    RUNTIME DESTINATION \"${CMAKE_INSTALL_BINDIR}\")\n\n  export(\n    EXPORT osqp\n    FILE \"${CMAKE_CURRENT_BINARY_DIR}/osqp-targets.cmake\"\n    NAMESPACE osqp::)\n\n  install(\n    EXPORT osqp\n    FILE osqp-targets.cmake\n    NAMESPACE osqp::\n    DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/osqp\")\nendif()\n\nif(OSQP_BUILD_STATIC_LIB OR OSQP_BUILD_SHARED_LIB)\n  # Generate CMake config file that includes the exports\n  configure_package_config_file(\n    \"${CMAKE_CURRENT_SOURCE_DIR}/configure/cmake/osqp-config.cmake.in\"\n    \"${CMAKE_CURRENT_BINARY_DIR}/osqp-config.cmake\"\n    INSTALL_DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/osqp\"\n    NO_SET_AND_CHECK_MACRO\n    NO_CHECK_REQUIRED_COMPONENTS_MACRO)\n\n  write_basic_package_version_file(\n    \"${CMAKE_CURRENT_BINARY_DIR}/osqp-config-version.cmake\"\n    VERSION \"${OSQP_VERSION}\"\n    COMPATIBILITY SameMajorVersion)\n\n  install(FILES\n          \"${CMAKE_CURRENT_BINARY_DIR}/osqp-config.cmake\"\n          \"${CMAKE_CURRENT_BINARY_DIR}/osqp-config-version.cmake\"\n          DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/osqp)\n\n  # Only install the dependency locating file if it exists (not all algebras have dependencies)\n  if( EXISTS \"${CMAKE_CURRENT_BINARY_DIR}/osqp-findAlgebraDependency.cmake\" )\n    install(FILES\n            \"${CMAKE_CURRENT_BINARY_DIR}/osqp-findAlgebraDependency.cmake\"\n            DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/osqp)\n  endif()\nendif()\n\nif(OSQP_CODEGEN)\n  set(OSQP_CODEGEN_INSTALL_DIR \"${CMAKE_INSTALL_DATAROOTDIR}/osqp/codegen_files\" CACHE PATH \"Location of codegen install\")\n  install(DIRECTORY\n          \"${EMBEDDED_BUILD_ROOT_DIR}/\"\n          DESTINATION \"${OSQP_CODEGEN_INSTALL_DIR}\" COMPONENT codegen)\nendif()\n\nif(NOT TARGET uninstall)\n  configure_file(\"${CMAKE_CURRENT_SOURCE_DIR}/configure/cmake/cmake_uninstall.cmake.in\"\n                 \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\" IMMEDIATE @ONLY)\n\n  add_custom_target(uninstall COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)\nendif()\n\n# ----------------------------------------------\n# Testing\n# ----------------------------------------------\nif(CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME AND OSQP_BUILD_UNITTESTS)\n  include(CTest)\n\n  message( STATUS \"Building unit tests\" )\n\n  if( OSQP_COVERAGE_CHECK )\n    message( STATUS \"Enabling code coverage file generation\" )\n  endif()\n\n  add_subdirectory(tests)\nendif()\n"
        },
        {
          "name": "CMakePresets.json",
          "type": "blob",
          "size": 2.1103515625,
          "content": "{\n  \"version\": 3,\n  \"cmakeMinimumRequired\": {\n    \"major\": 3,\n    \"minor\": 21,\n    \"patch\": 0\n  },\n  \"configurePresets\": [\n    {\n      \"name\": \"builtin\",\n      \"displayName\": \"Builtin linear algebra (Release)\",\n      \"description\": \"Builtin linear algebra brackend\",\n      \"binaryDir\": \"${sourceDir}/build.builtin\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": \"Release\",\n        \"OSQP_ALGEBRA_BACKEND\": \"builtin\"\n      }\n    },\n    {\n      \"name\": \"mkl\",\n      \"displayName\": \"MKL linear algebra (Release)\",\n      \"description\": \"MKL linear algebra brackend\",\n      \"binaryDir\": \"${sourceDir}/build.mkl\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": \"Release\",\n        \"OSQP_ALGEBRA_BACKEND\": \"mkl\"\n      }\n    },\n    {\n      \"name\": \"cuda\",\n      \"displayName\": \"CUDA linear algebra (Release)\",\n      \"description\": \"CUDA linear algebra brackend\",\n      \"binaryDir\": \"${sourceDir}/build.cuda\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": \"Release\",\n        \"OSQP_ALGEBRA_BACKEND\": \"cuda\"\n      }\n    },\n    {\n      \"name\": \"builtin-debug\",\n      \"displayName\": \"Builtin linear algebra (Debug + ASAN)\",\n      \"description\": \"Builtin linear algebra brackend\",\n      \"binaryDir\": \"${sourceDir}/build.debug.builtin\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": \"Debug\",\n        \"OSQP_ALGEBRA_BACKEND\": \"builtin\",\n        \"OSQP_BUILD_UNITTESTS\": \"ON\",\n        \"OSQP_ASAN\": \"ON\"\n      }\n    },\n    {\n      \"name\": \"mkl-debug\",\n      \"displayName\": \"MKL linear algebra (Debug + ASAN)\",\n      \"description\": \"MKL linear algebra brackend\",\n      \"binaryDir\": \"${sourceDir}/build.debug.mkl\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": \"Debug\",\n        \"OSQP_ALGEBRA_BACKEND\": \"mkl\",\n        \"OSQP_BUILD_UNITTESTS\": \"ON\",\n        \"OSQP_ASAN\": \"ON\"\n      }\n    },\n    {\n      \"name\": \"cuda-debug\",\n      \"displayName\": \"CUDA linear algebra (Debug + ASAN)\",\n      \"description\": \"CUDA linear algebra brackend\",\n      \"binaryDir\": \"${sourceDir}/build.debug.cuda\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": \"Debug\",\n        \"OSQP_ALGEBRA_BACKEND\": \"cuda\",\n        \"OSQP_BUILD_UNITTESTS\": \"ON\"\n      }\n    }\n  ]\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.1240234375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2021 Bartolomeo Stellato, Goran Banjac, Paul Goulart, Stephen Boyd\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.408203125,
          "content": "OSQP\nCopyright (c) 2019 Bartolomeo Stellato, Goran Banjac, Paul Goulart, Stephen Boyd\n\nThis product includes software developed at Stanford University and at the University of Oxford.\n\n\nThe following external modules are included in this software library\n\nQDLDL\nCopyright (c) 2018, Paul Goulart, Bartolomeo Stellato, Goran Banjac.\n\nAMD\nCopyright (c) 1996-2015, Timothy A. Davis, Patrick R. Amestoy, and Iain S. Duff.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.8974609375,
          "content": "# The Operator Splitting QP Solver\n\n[![CI](https://github.com/osqp/osqp/actions/workflows/main.yml/badge.svg)](https://github.com/osqp/osqp/actions/workflows/main.yml)\n[![Code coverage](https://coveralls.io/repos/github/osqp/osqp/badge.svg?branch=master)](https://coveralls.io/github/osqp/osqp?branch=master)\n![License](https://img.shields.io/badge/License-Apache%202.0-brightgreen.svg)\n\n\n![PyPI - downloads](https://img.shields.io/pypi/dm/osqp.svg?label=Pypi%20downloads)\n![Conda - downloads](https://img.shields.io/conda/dn/conda-forge/osqp.svg?label=Conda%20downloads)\n\n[**Visit our GitHub Discussions page**](https://github.com/orgs/osqp/discussions) for any questions related to the solver!\n\n**The documentation** is available at [**osqp.org**](https://osqp.org/)\n\nThe OSQP (Operator Splitting Quadratic Program) solver is a numerical optimization package for solving problems in the form\n```\nminimize        0.5 x' P x + q' x\n\nsubject to      l <= A x <= u\n```\n\nwhere `x in R^n` is the optimization variable. The objective function is defined by a positive semidefinite matrix `P in S^n_+` and vector `q in R^n`. The linear constraints are defined by matrix `A in R^{m x n}` and vectors `l` and `u` so that `l_i in R U {-inf}` and `u_i in R U {+inf}` for all `i in 1,...,m`.\n\n\n## Citing OSQP\n\nIf you are using OSQP for your work, we encourage you to\n\n* [Cite the related papers](https://osqp.org/citing/),\n* Put a star on this repository.\n\n**We are looking forward to hearing your success stories with OSQP!** Please [share them with us](mailto:bartolomeo.stellato@gmail.com).\n\n\n## Bug reports and support\n\nPlease report any issues via the [Github issue tracker](https://github.com/osqp/osqp/issues). All types of issues are welcome including bug reports, documentation typos, feature requests and so on.\n\n\n## Numerical benchmarks\nNumerical benchmarks against other solvers are available [here](https://github.com/osqp/osqp_benchmarks).\n"
        },
        {
          "name": "algebra",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}