{
  "metadata": {
    "timestamp": 1736710079787,
    "page": 700,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "0015/ThatProject",
      "stars": 1913,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.4296875,
          "content": "# Miscellaneous\n*.class\n*.log\n*.pyc\n*.swp\n.DS_Store\n.atom/\n.buildlog/\n.history\n.svn/\n\n# IntelliJ related\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# The .vscode folder contains launch configuration and tasks you configure in\n# VS Code which you may wish to be included in version control, so this line\n# is commented out by default.\n#.vscode/\n\n# Flutter/Dart/Pub related\n**/doc/api/\n.dart_tool/\n.flutter-plugins\n.packages\n.pub-cache/\n.pub/\n/build/\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n**/android/gradlew\n**/android/gradlew.bat\n**/android/local.properties\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n\n# Exceptions to above rules.\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n\n**/node_modules/\n"
        },
        {
          "name": "Cellular",
          "type": "tree",
          "content": null
        },
        {
          "name": "E-Paper_Projects",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32-LoRa",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32CAM_Projects",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32_BT_CLASSIC",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32_Flutter_JoyPad",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32_LVGL",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32_MICROPHONE",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32_MQTT",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32_MultiTouch_FT6236",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32_OTA",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32_TTGO",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32_UWB",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32_VideoPlayer",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32_dust_sensor_firestore_FLUTTER",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP32_vs_PortentaH7",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP8266_BASIC_GPS",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP8266_GOOGLEMAP_GPS",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP8266_GPS_DATA_LOG",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESP8266_Twitter_Hash_Search",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESPNOW",
          "type": "tree",
          "content": null
        },
        {
          "name": "ESp32_Flutter_Android_wifi_credential_update_via_USB",
          "type": "tree",
          "content": null
        },
        {
          "name": "Esp32_BLE_to_BLE",
          "type": "tree",
          "content": null
        },
        {
          "name": "Esp32_Flutter_Android_usb_serial_comm",
          "type": "tree",
          "content": null
        },
        {
          "name": "Esp32_Flutter_BLE_LocalNoti",
          "type": "tree",
          "content": null
        },
        {
          "name": "Esp32_Flutter_firebase_DHT",
          "type": "tree",
          "content": null
        },
        {
          "name": "Esp32_MPU6050_MahonyARHS",
          "type": "tree",
          "content": null
        },
        {
          "name": "Esp32_MPU6050_ble_FLUTTER",
          "type": "tree",
          "content": null
        },
        {
          "name": "Esp32_display_ssd1351_jpeg",
          "type": "tree",
          "content": null
        },
        {
          "name": "Esp32_dust_sensor_ble_FLUTTER",
          "type": "tree",
          "content": null
        },
        {
          "name": "Esp32_jpeg",
          "type": "tree",
          "content": null
        },
        {
          "name": "Esp32_temperature_humidity",
          "type": "tree",
          "content": null
        },
        {
          "name": "Esp32_temperature_humidity_ble_FLUTTER",
          "type": "tree",
          "content": null
        },
        {
          "name": "Esp32_ultrasonic_range_finder",
          "type": "tree",
          "content": null
        },
        {
          "name": "Esp32_wifi_ssid_pw_via_ble",
          "type": "tree",
          "content": null
        },
        {
          "name": "FIREBASE",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MESSAGE",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 26.91796875,
          "content": "# [That Project](https://youtube.com/@ThatProject) \n\nWelcome to my project repository. \nThe source code for each project can be downloaded here, and please refer to the below video for the project tutorial.\nThank you. \n\n## ESP32/ESP32-S3 Projects\n\n<p align=\"left\">\n    <a href=\"https://youtu.be/4GVH3JicaPo\">\n        <img src=\"https://github.com/0015/ThatProject/blob/master/ESP32-LoRa/misc/Chat_APP_SX1262.jpg\"/>\n    </a>\n</p>\n\n[[USB-Serial] Android Phone + ESP32-LoRa Module + Chat App = Text Transceiver!]\n[[Video]](https://youtu.be/4GVH3JicaPo)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32-LoRa/Chat_APP_SX1262)\n\n#\n\n<p align=\"left\">\n    <a href=\"https://youtu.be/qq2FRv0lCPw\">\n        <img src=\"https://github.com/0015/ThatProject/blob/master/ESP32_MICROPHONE/Broadcasting_Your_Voice/thumbnail/project_thumbnail.jpg\"/>\n    </a>\n</p>\n\n[Broadcasting Your Voice with ESP32-S3 & INMP441]\n[[Video]](https://youtu.be/qq2FRv0lCPw)[[Source Code]](https://github.com/0015/ThatProject/blob/master/ESP32_MICROPHONE/Broadcasting_Your_Voice)\n\n#\n\n<p align=\"left\">\n    <a href=\"https://youtu.be/QDrJKkUJmFE\">\n        <img src=\"https://github.com/0015/ThatProject/blob/master/ESP32_LVGL/LVGL8_SquareLine/04_Turntable_MP3_Player/demo/demo.gif\"/>\n    </a>\n</p>\n\n[Creating Stunning Animations in MCU Using LVGL and SquareLine Studio with ESP32-S3]\n[[Video]](https://youtu.be/QDrJKkUJmFE)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_LVGL/LVGL8_SquareLine/04_Turntable_MP3_Player)\n\n#\n\n<p align=\"left\">\n    <a href=\"https://youtu.be/kOYJ-4oZ8Ws\">\n        <img src=\"https://github.com/0015/ThatProject/blob/master/Cellular/T-SIMCAM/demo/T_SIMCAM.jpg\"/>\n    </a>\n</p>\n\n[T-SIMCAM, ESP32-S3 + Camera Module(OV2640) + LTE Modem(SIM7600G-H) + Google Fi SIM]\n[[Video]](https://youtu.be/kOYJ-4oZ8Ws)[[Source Code]](https://github.com/0015/ThatProject/tree/master/Cellular/T-SIMCAM/01_T-SIMCAM_ImageUploader)\n\n#\n\n<p align=\"left\">\n    <a href=\"https://youtu.be/J0AYSS8xxOY\">\n        <img src=\"https://github.com/0015/ThatProject/blob/master/ESP32_LVGL/LVGL8_SquareLine/03_Let's_build_a_GPS_Speedometer/demo/part_1_demo.gif\"/>\n    </a>\n    <a href=\"https://youtu.be/b_4m1A3A2yw\">\n        <img src=\"https://github.com/0015/ThatProject/blob/master/ESP32_LVGL/LVGL8_SquareLine/03_Let's_build_a_GPS_Speedometer/demo/part_2_demo.gif\"/>\n    </a>\n</p>\n\n[Developing Embedded GUI with SquareLine Studio [2/2]]\n[[Video]](https://youtu.be/b_4m1A3A2yw)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_LVGL/LVGL8_SquareLine/03_Let's_build_a_GPS_Speedometer)\n\n[Let's build a GPS Speedometer with ESP32-S3 and BN-880Q(GPS, Compass) [1/2]]\n[[Video]](https://youtu.be/J0AYSS8xxOY)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_LVGL/LVGL8_SquareLine/03_Let's_build_a_GPS_Speedometer)\n\n#\n\n<p align=\"left\">\n    <a href=\"https://youtu.be/2TOVohmUqOE\">\n        <img src=\"https://github.com/0015/ThatProject/blob/master/ESP32_VideoPlayer/MiniLegoTV/demo/demo.gif\"/>\n    </a>\n</p>\n\n[Mini Lego TV based on ESP32]\n[[Video]](https://youtu.be/2TOVohmUqOE)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_VideoPlayer/MiniLegoTV)\n\n#\n\n<p align=\"left\">\n    <a href=\"https://youtu.be/gliwNg25fLE\">\n        <img src=\"https://github.com/0015/ThatProject/blob/master/ESP32_LVGL/LVGL8/5_System_Monitor/demo/demo.gif\"/>\n    </a>\n</p>\n\n[Make your own System Monitor with ESP32 + LVGL 8]\n[[Video]](https://youtu.be/gliwNg25fLE)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_LVGL/LVGL8/5_System_Monitor)\n\n#\n\n<p align=\"left\">\n    <a href=\"https://youtu.be/zJvDw4UVDLc\">\n        <img src=\"https://i.ytimg.com/vi/zJvDw4UVDLc/hqdefault.jpg\"/>\n    </a>\n</p>\n\n[LoRa, GPS Data showing on the Map]\n[[Video]](https://youtu.be/zJvDw4UVDLc)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32-LoRa/LoRa_GPS_Data_Viewer)[[Try here]](https://0015.github.io/LoRa_GPS_Viewer)\n\n#\n\n<p align=\"left\">\n    <a href=\"https://youtu.be/vaYJydZcObU\">\n        <img src=\"https://i.ytimg.com/vi/vaYJydZcObU/hqdefault.jpg\"/>\n    </a>\n</p>\n\n[My ESP32 Tag App for my own ESP32Tag Device!]\n[[Video]](https://youtu.be/vaYJydZcObU)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_UWB/2_My-ESP32Tag-App)[[Google Play]](https://play.google.com/store/apps/details?id=com.thatproject.my_esp32tag)\n\n#\n\n* [QR Code Maker (ESP32+LVGL8)][[Video]](https://youtu.be/Ss3zBO-V9kI)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_LVGL/LVGL8/4_QR_Code_Maker)\n\n* [Part.2: Creating Tesla's Website in SquareLine Studio (ESP32+LVGL)][[Video]](https://youtu.be/7PXBPRm_8_Y)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_LVGL/LVGL8_SquareLine/02_Tesla_Multi_Pages)\n\n* [Creating Tesla's Website in SquareLine Studio (ESP32+LVGL)][[Video]](https://youtu.be/LrvqSjLzo44)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_LVGL/LVGL8_SquareLine/01_Tesla_Single_Page)\n\n* [ESP32 + UWB | Warning sounds depending on the distance][[Video]](https://youtu.be/xrDvu8QT1Qs)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_UWB/1_My_Anchor_With_Audio)\n\n* [Not AirTag, But ESP32Tag][[Video]](https://youtu.be/_Bu3lw49m5s)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_UWB/0_ESP32TAG)\n\n* [ESP32 | LVGL8 | Ep 3. Base Project for WiFi Settings][[Video]](https://youtu.be/r62vfOhWXeo)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_LVGL/LVGL8/3_BaseProject_Network_Selector)\n\n* [Auto Focus with OV5640 on ESP32 AI-Thinker Board][[Video]](https://youtu.be/922BWy3OOoQ)\n\n* [OV5640 for ESP32 Camera (Compared to OV2640)][[Video]](https://youtu.be/BCvOBMQSliY)\n\n* [ESP32CAM | Sending images via UDP?][[Video]](https://youtu.be/1kHxd5FOUEU)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_UDP)\n\n* [Tic Tac Camera Using ESP32CAM And Wireless Charging][[Video]](https://youtu.be/hteut2R8eQ0)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/TicTacCamera)\n\n* [ESP32 | LVGL8 | Ep 2. Shortcuts for Pull Stack Developer][[Video]](https://youtu.be/i4qrWbHXH3U)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_LVGL/LVGL8/2_LILYPI_StackOverflow_BLE)\n\n* [ESP32 | LVGL8 | Ep 1. Demos with LILY PI][[Video]](https://youtu.be/kRTFc2vY5A8)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_LVGL/LVGL8/1_LILYPI_ST7796_LovyanGFX)\n\n* [ESP32 | LVGL8 | Ep 0. GFX Setup (ft. LovyanGFX)][[Video]](https://youtu.be/IPCvQ4o_WP8)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_LVGL/LVGL8/0_ILI9488_LovyanGFX)\n\n* [Mini E-Paper | Ep1. Uploading Emoji to E-Paper from Flutter App (iOS & Android)][[Video]](https://youtu.be/pP9YXFNOBhY)[[Source Code]](https://github.com/0015/ThatProject/tree/master/E-Paper_Projects/01_Emoji2MiniE-Paper)\n\n* [IoT | Cloud Firestore - Ep 4. Firebase Client Flutter App for iOS and Android][[Video]](https://youtu.be/nsopdabOcug)[[Source Code]](https://github.com/0015/ThatProject/tree/master/FIREBASE/Cloud_Firestore_Application/4_iot_firestore_flutter_app)\n\n* [Send an SMS from ESP32 (ft. Twilio)][[Video]](https://youtu.be/SP4pvYCQAfc)[[Source Code]](https://github.com/0015/ThatProject/tree/master/MESSAGE/Twilio/0_ESP32TTGO_FIRESTORE_SMS)\n\n* [ESP32 | Cloud Firestore - Ep 3. Status Icons on Display (The End)][[Video]](https://youtu.be/LR_FgObfuCw)[[Source Code]](https://github.com/0015/ThatProject/tree/master/FIREBASE/Cloud_Firestore_Application/3_Display_Done)\n\n* [ESP32 | Cloud Firestore - Ep 2. Firebase Client For ESP32][[Video]](https://youtu.be/KiF9uGFkA_o)[[Source Code]](https://github.com/0015/ThatProject/tree/master/FIREBASE/Cloud_Firestore_Application/2_Firebase_Client)\n\n* [ESP32 | Cloud Firestore - Ep 1. Firebase Setup][[Video]](https://youtu.be/KV0D8nrsBLg)[[Source Code]](https://github.com/0015/ThatProject/tree/master/FIREBASE/Cloud_Firestore_Application/1_Network_Class)\n\n* [ESP32 | Cloud Firestore - Ep 0. Showing temp/humidity from DHT11 on TTGO display [Upgraded Version]][[Video]](https://youtu.be/aAUIlCWs_bc)[[Source Code]](https://github.com/0015/ThatProject/tree/master/FIREBASE/Cloud_Firestore_Application/0_ESP32TTGO_DHT11)\n\n* [OTA Solution - Build your own OTA platform (2/2, ESP32 OTA Application)][[Video]](https://youtu.be/oNFqwvYYWe4)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_OTA/Simple_OTA_Solution/Simple_OTA_Application)\n\n* [OTA Solution - Build your own OTA platform (1/2, Preparing Python Flask API Server)][[Video]](https://youtu.be/_uTZad8RMZk)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_OTA/Simple_OTA_Solution/Python_Flask_REST_API_Server)\n\n* [AWS IoT | Python MQTT Client for Multiple ESP32CAM][[Video]](https://youtu.be/-0L0PrfuSEo)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_MQTT/3_Python_MQTT_Client_App)\n\n* [AWS IoT | Flutter MQTT Client App [Full Version]][[Video]](https://youtu.be/aY7i0xnQW54)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_MQTT/2_Flutter_MQTT_Client_App/mqtt_esp32cam_viewer_full_version)\n\n* [AWS IoT | Flutter MQTT Client App for macOS - UI Part (For Newbies)][[Video]](https://youtu.be/viGjd3VDlr4)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_MQTT/2_Flutter_MQTT_Client_App/mqtt_esp32cam_viewer_ui_part)\n\n* [AWS IoT | ESP32CAM working as a publisher on MQTT][[Video]](https://youtu.be/7_3qbou_keg)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_MQTT/1_ESP32CAM_AWSMQTT)\n\n* [AWS IoT | How to install Mosquitto Broker on Amazon EC2][[Video]](https://youtu.be/SDrkv2hUzAc)[[Template Code]](https://github.com/0015/ThatProject/tree/master/ESP32_MQTT/0_AWS_Mosquitto_Test)\n\n* [ESP32 | LVGL7 = My Shortcuts for Windows 10 = (ft. BLE HID Keyboard)][[Video]](https://youtu.be/EWKAyQBdcYM)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_LVGL/MyShortcuts_LVGL7)\n\n* [ESP32 | Multi-Touch Test(ft. FT6236)][[Video]](https://youtu.be/8sp4LKYSdEk)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_MultiTouch_FT6236/GetTouchEvent)\n\n* [ESP32CAM | Android(Flutter App) Wired Communication - Base64 Encoding/Decoding [2/2]][[Video]](https://youtu.be/-jygTxRmroA)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/WIRED_ESP32_CAM_with_FlutterApp/Part.2_FlutterAppForSerialCam)\n\n* [ESP32CAM | Android(Flutter App) Wired Communication - Baud Rate Test [1/2]][[Video]](https://youtu.be/Mod9gX7NWA8)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/WIRED_ESP32_CAM_with_FlutterApp/Part.1_BaudRateTest)\n\n* [What's different TTGO T-Camera Plus vs ESP32CAM AI-THINKER?][[Video]](https://youtu.be/ixtT7kt4YdI)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_TTGO/TTGO_T-Camera/CameraWebServerForTCamera)\n\n* [GY-BNO055 | Ep.0: Connecting with ESP32 TTGO via I2C (ft. Heading Direction)][[Video]](https://youtu.be/dgCpOPEA6ZM)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_TTGO/GY-BNO055/TTGO_GY-BNO055_Heading)\n\n* [ESP32 | Walkie-Talkie based on Node.js Server for multi-clients (ft. PCM speaker)][[Video]](https://youtu.be/vq7mPgecGKA)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32_TTGO/Walkie-Talkie_Project/Server_NodeJS)\n\n* [ESP32 | Walkie-Talkie, Half-duplex communication based on WebSocket][[Video]](https://youtu.be/kw30vLdrGE8)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_TTGO/Walkie-Talkie_Project)\n\n* [Wireless Wiretap System using 2x ESP32, INMP441 & MAX98357A][[Video]](https://youtu.be/5q5a5pee4ZQ)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_MICROPHONE/Wiretap_INMP441_MAX98357A_via_websocket)\n\n* [ESP32 Bluetooth LE Secure Server for multi clients (ft. PassKey)][[Video]](https://youtu.be/TwexLJwdLEw)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_TTGO/BLE_Secure_Server)\n\n* [ESP32TTGO - Battery Indicator 🔋⚡][[Video]](https://youtu.be/osAOdmZuvDc)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_TTGO/TTGO_Battery_Indicator)\n\n* [ESP32TTGO | INMP441 - Drawing a meter bar for sound level display (ft. TFT_eFEX)][[Video]](https://youtu.be/IqXVAG8ssjg)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_TTGO/INMP441_MeterBarForSoundLevel)\n\n* [[ESP32TTGO x ESP32CAM] Which One Is Faster? RGB565 vs. JPEG (ft. Dedicated JPEG Decoder)][[Video]](https://youtu.be/aD3C-mGh7I8)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_TTGO/ESP32CAM_WiFi_Direct_v2_Faster)\n\n* [[ESP32TTGO x ESP32CAM] Wi-Fi Direct! Output images of ESP32CAM to TTGO display. (ft. WebSocket)][[Video]](https://youtu.be/OdEmfRKDJts)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_TTGO/ESP32CAM_WiFi_Direct)\n\n* [[ESP32 TTGO] My hardware key to operate my app (Ep.2/2 - Completing App)][[Video]](https://youtu.be/aGuBQSU2oMs)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_TTGO/my_hardware_key_demo_app)\n\n* [[ESP32 TTGO] Getting Started! #StartingLine #BasicSetup (ft. Image Animation)][[Video]](https://youtu.be/Bl1C7Vdl3GA)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_TTGO/AnimationImage)\n\n* [Toy Camera = ESP32CAM + ILI9488 + LVGL7 | Part 2, LVGL Configure #ESP32CAM #TOYCAM][[Video]](https://youtu.be/K4VEvUVOkG0)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_TOY_CAMERA/PART2)\n\n* [Toy Camera = ESP32CAM + ILI9488 + LVGL7 | Part 1, Live Feed Display #ESP32CAM #TOYCAM][[Video]](https://youtu.be/K5Tr0AjK-Uc)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_TOY_CAMERA/PART1)\n\n* [ESP32 | MPU6050 | MahonyAHRS - Adding BLE module(ft. String vs Float)][[Video]](https://youtu.be/lpnG7K0-E88)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_MPU6050_MahonyARHS)\n\n* [ESP32 | MPU6050 - Using MahonyAHRS (ft. dice)][[Video]](https://youtu.be/UgROd5juFtM)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_MPU6050_MahonyARHS)\n\n* [ESP32 | BLE HID - Camera Shutter App for the smartphone [Part. 3/3 ADD BLE HID]][[Video]](https://youtu.be/I6rlpXpBimc)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_LVGL/ESP-IDF_Camera_Timer_For_Smartphone_LVGL7/Part.3/camera_timer_ble_hid)\n\n* [ESP32 | BLE HID - Camera Shutter App for the smartphone [Part. 2/3 UI Design in LVGL]][[Video]](https://youtu.be/IQsND5MwSEQ)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_LVGL/ESP-IDF_Camera_Timer_For_Smartphone_LVGL7/Part.2/camera_timer_ble_hid)\n\n* [ESP32 | BLE HID - Camera Shutter App for the smartphone [Part. 1/3 LVGL on ESP-IDF]][[Video]](https://youtu.be/7-QiGUAWkys)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_LVGL/ESP-IDF_Camera_Timer_For_Smartphone_LVGL7/Part.1/camera_timer_ble_hid)\n\n* [💬Chat App | ESP32 + ESP-NOW + LVGL7 | Part 2/2 - ESP-NOW bidirectional Comm (Primary - Secondary)\n][[Video]](https://youtu.be/Kpqz00_IzTc)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_LVGL/ChatApp_LVGL7/Step_2_ESP-NOW)\n\n* [💬Chat App | ESP32 + ESP-NOW + LVGL7 | Part 1/2 - LVGL UI Layout][[Video]](https://youtu.be/zRLQPF5417Y)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_LVGL/ChatApp_LVGL7/Step_1_UI)\n\n* [ESP32 Dynamic WIFI configuration GUI using LVGL7.x][[Video]](https://youtu.be/AvJms6_Pf_o)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_LVGL/DynamicWIFIConnector_LVGL7)\n\n* [ESP32 CAM with Arduino IDE | Tutorial - [Part.10] Multiple CAM Secure Dashboard (ft. HTTPS, WSS)🔒][[Video]](https://youtu.be/mxfj5Jg206A)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_MULTICAM/Part.10-Multiple_CAM_Dashboard_with_HTTPS_WSS)\n\n* [ESP32 CAM with Arduino IDE | Tutorial - [Part.9] Multiple CAM Dashboard With New Features (ft. ⏯️🔴💾)][[Video]](https://youtu.be/ba9NLj0FKRU)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_MULTICAM/Part.9-Multiple_CAM_Dashboard_with_new_features)\n\n* [ESP32 CAM with Arduino IDE | Tutorial - [Part.8] Multiple CAM Dashboard (ft. Modified Jpeg Header)][[Video]](https://youtu.be/rTY2Ibk-gco)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_MULTICAM/Part.8-Multiple_CAM_Dashboard)\n\n* [ESP32 | BLUETOOTH CLASSIC | FLUTTER - Generate your own QR code and display it on the SSD1351🔲][[Video]](https://youtu.be/7HLh-7vONT4)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_BT_CLASSIC/ESP32_SSD1351_QR_BT_SERIAL)\n\n* [ESP32 | BLUETOOTH CLASSIC | FLUTTER - *Realtime* Audio Recorder🗣️🎙️(ft. INMP441)][[Video]](https://youtu.be/AFGC9iYBxFQ)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_BT_CLASSIC/ESP32_INMP441_BT_SERIAL)\n\n* [ESP32CAM | BLUETOOTH CLASSIC | FLUTTER - TWO-WAY Serial BT Communication (ft. uint8_t* buffer)🖼️][[Video]](https://youtu.be/Fl3tDWzTWk8)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_BT_CLASSIC/ESP32CAM_BT_SERIAL)\n\n* [ESP32 | BLUETOOTH CLASSIC | FLUTTER - Let's build BT Serial based on the examples. (Ft. Chat App)][[Video]](https://youtu.be/WUw-_X66dLE)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_BT_CLASSIC/ESP32_BLUETOOTH_SERIAL_DEMO)\n\n* [ESP32CAM | INMP441 - Doorbell🚪🔔 Project Rev.1 (Ft. Telegram)][[Video]](https://youtu.be/Fj21iHHUvf4)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_DOORBELL/Rev.1)\n\n* [ESP32 | INMP441 | Tutorial - [Part.5] Speech-to-Text Powered by Google Cloud machine learning][[Video]](https://youtu.be/RZVzZfndIS0)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_MICROPHONE/ESP32_INMP441_SPEECH_TO_TEXT)\n\n* [ESP32 | INMP441 | Tutorial - [Part.4] Capturing audio from i2s mic to save WAV file (I2S interface)][[Video]](https://youtu.be/qmruNKeIN-o)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_MICROPHONE/ESP32_INMP441_RECORDING)\n\n* [ESP32 | INMP441 | Flutter | Tutorial - [Part.3] App for Sound Level Meter Viewer (ft. BLE Client)][[Video]](https://youtu.be/CcLt-nBLWJU)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_MICROPHONE/ESP32_INMP441_FLUTTER_BLE_APP/flutter_app_slm)\n\n* [ESP32 | INMP441 | Tutorial - [Part.2] Emitting Sound Level Meter through BLE (ft. FreeRTOS)][[Video]](https://youtu.be/F88HRGTiiNw)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_MICROPHONE/ESP32_INMP441_SLM_BLE)\n\n* [ESP32 | INMP441 | Introduce - [Part.1] Sound Level Meter][[Video]](https://youtu.be/QREKVWaZLi4)\n\n* [ESP32 | INMP441 | Tutorial - [Part.0] Set up I2S for Microphone][[Video]](https://youtu.be/m8LwPNXqK9o)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_MICROPHONE/ESP32_INMP441_SETUP)\n\n* [ESP32 | LittlevGL | Arduino IDE - [Part.2] By LittlevGL for Simple Note App📝][[Video]](https://youtu.be/PIzMeCShNZA)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_LVGL/SimpleNoteAPP_LVGL6/Part2)\n\n* [ESP32 | LittlevGL | Arduino IDE - [Part.1] Basic LittlevGL for Simple Note App📝][[Video]](https://youtu.be/dErIWm-IVhc)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_LVGL/SimpleNoteAPP_LVGL6/Part1)\n\n* [ESP32 | LittlevGL | Arduino IDE - [Part.0] Touch Display Setup for Simple Note App📝][[Video]](https://youtu.be/OXUZEHMFFwc)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_LVGL/SimpleNoteAPP_LVGL6/Part0)\n\n* [ESP32 CAM | Google Vision - [Part.7] AI Camera📷🔥(Image labeling)][[Video]](https://youtu.be/bpCCqerQ56o)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_AICamera_Labelling)\n\n* [ESP32 CAM | Flutter App - [Part.6] In wireless directly, a mobile app connecting ESP32CAM (Dash Cam)][[Video]](https://youtu.be/6FUbo9HRCoU)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_Dashcam_FLUTTER)\n\n* [ESP32 CAM | Tutorial - [Part.5] In wireless directly, connecting ESP32CAM to ESP32 (feat. TFT LCD)][[Video]](https://youtu.be/TfuEI1-YrsA)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_WIFI_CONNECT)\n\n* [ESP32 CAM with Flutter | Tutorial - [Part.4] Video Recording with FFmpeg (Baby Monitor)][[Video]](https://youtu.be/Z5vBs8Mk5rA)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_Xiaomi_Clone_FLUTTER/flutter_xiaomi_clone_app_ffmpeg)\n\n* [ESP32 CAM with Flutter | Tutorial - [Part.3] Xiaomi YI Home App Clone (Baby Monitor)][[Video]](https://youtu.be/9GyOTlOGjSA)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_Xiaomi_Clone_FLUTTER/flutter_xiaomi_clone_app)\n\n* [ESP32 CAM with Arduino IDE | Tutorial - [Part.2] World Wide Access to ESP32CAM (feat. GCP)][[Video]](https://youtu.be/CpIkG9N5-JM)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_GoogleCloudServer)\n\n* [ESP32 CAM with Arduino IDE | Tutorial - [Part.1] Streaming into the local network][[Video]](https://youtu.be/kE0idrJYPII)[[Source Code]](https://github.com/0015/ThatProject/tree/master/ESP32CAM_Projects/ESP32_CAM_LocalServer)\n\n* [ESP32 | FLUTTER | FIRESTORE - Dust Sensor, A simple Air Monitor App (Serverless REST API with Firestore)][[Video]](https://youtu.be/Z8ju93IYZ1A)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_dust_sensor_firestore_FLUTTER)\n\n* [ESP32 | FLUTTER | BLE - MPU6050, Rotate your 3d object in the app][[Video]](https://youtu.be/FMZO4UTVZBk)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_MPU6050_ble_FLUTTER)\n\n* [ESP32 | FLUTTER | BLE - Dust Sensor, A simple Air Monitor App (with Graph)][[Video]](https://youtu.be/w6jo2kJanqU)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_dust_sensor_ble_FLUTTER)\n\n* [ESP32 | FLUTTER | WIFI | USB SERIAL - UPDATE WIFI CREDENTIALS VIA USB SERIAL (FEAT. UART)][[Video]](https://youtu.be/Be0vYIiJlyg)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESp32_Flutter_Android_wifi_credential_update_via_USB)\n\n* [ESP32 | FLUTTER | USB SERIAL - HOW TO CONNECT THE ESP32 TO THE ANDROID(FLUTTER) USING THE USB CABLE (feat. UART)][[Video]](https://youtu.be/zk0xY88l6Rc)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_Flutter_Android_usb_serial_comm)\n\n* [ESP32 | FLUTTER | BLE | WIFI - HOW TO UPDATE WIFI SSID & PW VIA BLE in ESP32][[Video]](https://youtu.be/-N52wL8xQzM)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_wifi_ssid_pw_via_ble)\n\n* [ESP32 | FLUTTER | BLE | Data --* Server (feat. JoyPad)][[Video]](https://youtu.be/fQz7aajslJc)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP32_Flutter_JoyPad)\n\n* [ESP32 | FLUTTER | BLE - Local Notification][[Video]](https://youtu.be/a71xc5Dm8xU)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_Flutter_BLE_LocalNoti)\n\n* [ESP32 | BLE | SERVER - CLIENT][[Video]](https://youtu.be/jcGIA99V0c0)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_BLE_to_BLE)\n\n* [ESP32 | FLUTTER | BLE - Ultrasonic Range Finder with 1.5inch OLED, Part 2][[Video]](https://youtu.be/s_BTQveXpwY)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_ultrasonic_range_finder)\n\n* [ESP32 | FLUTTER | BLE - Ultrasonic Range Finder with 1.5inch OLED, Part 1][[Video]](https://youtu.be/sTaa4bGqVwc)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_ultrasonic_range_finder/Esp32_Ultrasonic_module)\n\n* [ESP32 | Flutter | FIREBASE - Flutter application with ESP32 to get the sensor data through FIREBASE realtime DB][[Video]](https://youtu.be/nVrACWPXi8g)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_Flutter_firebase_DHT)\n\n* [ESP32 | Flutter | Ble - Flutter application with ESP32 to get the sensor data through BLE][[Video]](https://youtu.be/13voX5Y9fTc)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_temperature_humidity_ble_FLUTTER)\n\n* [ESP32 Project - Temperature & Humidity Check App with 1.5inch OLED SSD1351 and DHT11][[Video]](https://youtu.be/TF4Dm8Lq7Pc)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_temperature_humidity)\n\n* [ESP32 Project - Hardware SPI vs Software SPI with SSD1351][[Video]](https://youtu.be/COPe5fKlkqA)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_display_ssd1351_jpeg)\n\n* [ESP32 Project - Fast Jpeg images in 3.2-inch TFT LCD (ILI9341)][[Video]](https://youtu.be/4eD6recBq4M)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/Esp32_jpeg)\n\n\n## NodeMCU(ESP8266) Projects\n* [Youtube NodeMCU(ESP8266) Project](https://www.youtube.com/playlist?list=PLnq7JUnBumAxh2Sr-vKQYxeyW7a6qje7x) \n\n* [Twitter Hash Search Application with #️⃣NodeMCU(ESP8266) #️⃣ILI9341][[Video]](https://youtu.be/lhOlv6Y4_vw)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP8266_Twitter_Hash_Search)\n\n* [FIREBASE | FLUTTER | Stream builder from Realtime DB to Flutter(iOS, Android)][[Video]](https://youtu.be/uoQtH2IYBCU)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/FIREBASE/STREAMING_FROM_ESP_TO_FLUTTER/flutter_realtime_dht11)\n\n* [FIREBASE | Streaming from ESP32 to ESP8266(Ft. DHT11 - Temperature, Humidity & Heat Index)][[Video]](https://youtu.be/-iKCn9lTD2Q)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/FIREBASE/STREAMING_FROM_ESP32_TO_ESP8266)\n\n* [ESP-NOW | Communication between NodeMCU(ESP8266) as [Master] and two ESP32 as [Slave]][[Video]](https://youtu.be/F_h22AXZ7ts)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESPNOW/ESPNOW_ESP8266_MASTER_ESP32_SLAVE)\n\n* [NodeMCU(ESP8266) | GPS | CSV Data Logging - GPS Tracker (feat. GPS Visualizer)🛰️][[Video]](https://youtu.be/edD3X6KG8AE)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP8266_GPS_DATA_LOG/ESP8266_GPS_TRACKER)\n\n* [NodeMCU(ESP8266) | GPS | ILI9488 - Showing Google Map with Device Position on Display🗺️][[Video]](https://youtu.be/lQ157ftTnSs)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP8266_GOOGLEMAP_GPS)\n\n* [NodeMCU(ESP8266) | GPS | ILI9488 - Showing the Latitude and Longitude on Display][[Video]](https://youtu.be/9wrHhbfYFXg)[[Source Code]](https://github.com/0015/IdeasNProjects/tree/master/ESP8266_BASIC_GPS)\n\n\n### Created & Maintained By\n\n[Eric Nam](https://github.com/0015)\n([Youtube](https://www.youtube.com/ThatProject))\n([Facebook](https://www.facebook.com/groups/138965931539175))\n\n\n## License\n\nCopyright 2019 - 2022 Eric N\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        }
      ]
    }
  ]
}