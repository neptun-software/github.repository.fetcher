{
  "metadata": {
    "timestamp": 1736710179440,
    "page": 865,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RedisBloom/RedisBloom",
      "stars": 1677,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.1123046875,
          "content": "IndentWidth: 4\nColumnLimit: 100\nSortIncludes: false\nAlignEscapedNewlinesLeft: false\nSpacesBeforeTrailingComments: 1"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1767578125,
          "content": ".vscode\n*.o\n*.so\n*.dSYM\n*.rdb\n*.pyc\n*.gcov\n*.gcda\n*.gcno\n*.png\n*.html\n*.info\n*.css\n/tests/flow/logs/\n/site/\n/venv/\n/infer-out/\n.idea\n/tests/benchmarks/profile_*\n/bin/\n/1/\n.DS_Store\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.3408203125,
          "content": "[submodule \"deps/readies\"]\n\tpath = deps/readies\n\turl = https://github.com/RedisLabsModules/readies.git\n[submodule \"deps/t-digest-c\"]\n\tpath = deps/t-digest-c\n\turl = https://github.com/RedisBloom/t-digest-c\n\tbranch = v0.4.1\n[submodule \"deps/RedisModulesSDK\"]\n\tpath = deps/RedisModulesSDK\n\turl = https://github.com/RedisLabsModules/RedisModulesSDK.git\n"
        },
        {
          "name": ".install",
          "type": "tree",
          "content": null
        },
        {
          "name": ".spellcheck.yml",
          "type": "blob",
          "size": 0.08203125,
          "content": "files:\n  - docs/**/*.md\nno-suggestions: true\ndictionaries:\n  - wordlist\nquiet: true\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.1826171875,
          "content": "# BUILD redisfab/redistimeseries:${VERSION}-${ARCH}-${OSNICK}\n\nARG REDIS_VER=6.2.10\n\n# stretch|bionic|buster\nARG OSNICK=buster\n\n# ARCH=x64|arm64v8|arm32v7\nARG ARCH=x64\n\n#----------------------------------------------------------------------------------------------\nFROM redisfab/redis:${REDIS_VER}-${ARCH}-${OSNICK} AS builder\n\nARG REDIS_VER\n\nRUN if [ -f /root/.profile ]; then sed -ie 's/mesg n/tty -s \\&\\& mesg -n/g' /root/.profile; fi\nSHELL [\"/bin/bash\", \"-l\", \"-c\"]\nADD . /build\nWORKDIR /build\n\nRUN ./deps/readies/bin/getupdates\nRUN ./sbin/setup\nRUN set -ex ;\\\n    if [ -e /usr/bin/apt-get ]; then \\\n        apt-get update -qq; \\\n        apt-get upgrade -yqq; \\\n        rm -rf /var/cache/apt; \\\n    fi\nRUN if [ -e /usr/bin/yum ]; then \\\n        yum update -y; \\\n        rm -rf /var/cache/yum; \\\n    fi\n\nRUN make fetch\nRUN make all\n\n#----------------------------------------------------------------------------------------------\nFROM redisfab/redis:${REDIS_VER}-${ARCH}-${OSNICK}\n\nARG REDIS_VER\nENV LIBDIR /usr/lib/redis/modules\nWORKDIR /data\nRUN mkdir -p \"$LIBDIR\"\n\nCOPY --from=builder /build/redisbloom.so \"$LIBDIR\"\n\nEXPOSE 6379\nCMD [\"redis-server\", \"--loadmodule\", \"/usr/lib/redis/modules/redisbloom.so\"]\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 0.2509765625,
          "content": "Except as otherwise specified in the source code headers for specific files, the source code in this repository is made available to you under your choice of \n(i) Redis Source Available License 2.0 (RSALv2) or (ii) the Server Side Public License v1 (SSPLv1)"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 9.4111328125,
          "content": "\nROOT=.\n\ninclude $(ROOT)/deps/readies/mk/main\n\nMK_ALL_TARGETS=bindirs deps build\n\n#----------------------------------------------------------------------------------------------\n\n# export T_DIGEST_C_BINDIR=$(ROOT)/bin/$(FULL_VARIANT.release)/t-digest-c\nexport T_DIGEST_C_BINDIR=$(ROOT)/bin/$(FULL_VARIANT)/t-digest-c\ninclude $(ROOT)/build/t-digest-c/Makefile.defs\n\n#----------------------------------------------------------------------------------------------\n\ndefine HELPTEXT\nmake setup         # install packages required for build\nmake fetch         # download and prepare dependant modules\n\nmake build\n  DEBUG=1          # build debug variant\n  VARIANT=name     # use a build variant 'name'\n  PROFILE=1        # enable profiling compile flags (and debug symbols) for release type\n                   # You can consider this as build type release with debug symbols and -fno-omit-frame-pointer\n  DEPS=1           # also build dependant modules\n  COV=1            # perform coverage analysis (implies debug build)\nmake clean         # remove binary files\n  ALL=1            # remove binary directories\n  DEPS=1           # also clean dependant modules\n\nmake deps          # build dependant modules\nmake all           # build all libraries and packages\n\nmake run           # run redis-server with module\nmake test          # run all tests\n\nmake unit-tests    # run unit tests\n\nmake flow-tests    # run tests\n  TEST=name        # run test matching 'name'\n  TEST_ARGS=\"...\"  # RLTest arguments\n  QUICK=1          # shortcut for GEN=1 AOF=0 SLAVES=0 OSS_CLUSTER=0\n  GEN=1            # run general tests on a standalone Redis topology\n  AOF=1            # run AOF persistency tests on a standalone Redis topology\n  SLAVES=1         # run replication tests on standalone Redis topology\n  OSS_CLUSTER=1    # run general tests on an OSS Cluster topology\n  SHARDS=num       # run OSS cluster with `num` shards (default: 3)\n  RLEC=1           # flow tests on RLEC\n  COV=1            # perform coverage analysis\n  VALGRIND|VG=1    # run specified tests with Valgrind\n  EXT=1            # run tests with existing redis-server running\n\nmake pack          # build packages (ramp & dependencies)\nmake upload-artifacts   # copy snapshot packages to S3\n  OSNICK=nick             # copy snapshots for specific OSNICK\nmake upload-release     # copy release packages to S3\n\ncommon options for upload operations:\n  STAGING=1             # copy to staging lab area (for validation)\n  FORCE=1               # allow operation outside CI environment\n  VERBOSE=1             # show more details\n  NOP=1                 # do not copy, just print commands\n\nmake coverage      # perform coverage analysis\nmake show-cov      # show coverage analysis results (implies COV=1)\nmake upload-cov    # upload coverage analysis results to codecov.io (implies COV=1)\n\nmake docker        # build for specific Linux distribution\n  OSNICK=nick        # Linux distribution to build for\n  REDIS_VER=ver      # use Redis version `ver`\n  TEST=1             # test aftar build\n  PACK=1             # create packages\n  ARTIFACTS=1        # copy artifacts from docker image\n  PUBLISH=1          # publish (i.e. docker push) after build\n\nmake static-analysis   # Perform static analysis via fbinter\n\nmake benchmarks     # run all benchmarks\n  BENCHMARK=file      # run benchmark specified by `file`\n  BENCH_ARGS=\"...\"    # redisbench_admin extra arguments\n\nendef\n\n#----------------------------------------------------------------------------------------------\n\nMK_CUSTOM_CLEAN=1\n\nBINDIR=$(BINROOT)\nSRCDIR=.\n\n#----------------------------------------------------------------------------------------------\n\nTARGET=$(BINROOT)/redisbloom.so\n\nCC_C_STD=gnu99\n\ndefine CC_DEFS +=\n\t_GNU_SOURCE\n\tREDIS_MODULE_TARGET\n\tREDISMODULE_SDK_RLEC\nendef\n\ndefine CC_INCLUDES +=\n\t.\n\tsrc\n\t$(ROOT)/deps/RedisModulesSDK\n\t$(ROOT)/deps\n\t$(ROOT)/deps/murmur2\n\t$(ROOT)/deps/t-digest-c/src\nendef\n\nLD_LIBS += $(T_DIGEST_C)\n\nifeq ($(VG),1)\n\tCC_DEFS += _VALGRIND\nendif\n\nifeq ($(PROFILE),1)\nSO_LD_FLAGS += -flto\nendif\n\nifneq ($(DEBUG),1)\nSO_LD_FLAGS += -flto\nendif\n\n_SOURCES=\\\n\tdeps/bloom/bloom.c \\\n\tdeps/murmur2/MurmurHash2.c \\\n\tdeps/rmutil/util.c \\\n\tsrc/rebloom.c \\\n\tsrc/sb.c \\\n\tsrc/cf.c \\\n\tsrc/rm_topk.c \\\n\tsrc/rm_tdigest.c \\\n\tsrc/topk.c \\\n\tsrc/rm_cms.c \\\n\tsrc/cms.c \\\n\tsrc/config.c\n\nifeq ($(DEBUG),1)\n_SOURCES += deps/readies/cetara/diag/gdb.c\nendif\n\nSOURCES=$(addprefix $(SRCDIR)/,$(_SOURCES))\nHEADERS=$(sort $(wildcard src/*.h $(patsubst %.c,%.h,$(SOURCES))))\nOBJECTS=$(patsubst $(SRCDIR)/%.c,$(BINDIR)/%.o,$(SOURCES))\n\nCC_DEPS = $(patsubst $(SRCDIR)/%.c, $(BINDIR)/%.d, $(SOURCES) $(TEST_SOURCES))\n\ninclude $(MK)/defs\n\n#----------------------------------------------------------------------------------------------\n\nMISSING_DEPS:=\nifeq ($(wildcard $(T_DIGEST_C)),)\nMISSING_DEPS += $(T_DIGEST_C)\nendif\n\nifneq ($(MISSING_DEPS),)\nDEPS=1\nendif\n\nDEPENDENCIES=t-digest-c\n\nifneq ($(filter all deps $(DEPENDENCIES) pack,$(MAKECMDGOALS)),)\nDEPS=1\nendif\n\n.PHONY: deps $(DEPENDENCIES)\n\n#----------------------------------------------------------------------------------------------\n\n.PHONY: all deps clean lint format pack run tests unit-tests flow-tests docker bindirs\n\nall: bindirs $(TARGET)\n\ninclude $(MK)/rules\n\n#----------------------------------------------------------------------------------------------\n\nifeq ($(DEPS),1)\n\n.PHONY: t-digest-c\n\ndeps: $(T_DIGEST_C)\n\nt-digest-c: $(T_DIGEST_C)\n\n$(T_DIGEST_C):\n\t@echo Building $@ ...\n\t$(SHOW)$(MAKE) --no-print-directory -C $(ROOT)/build/t-digest-c\n\n#----------------------------------------------------------------------------------------------\n\nelse\n\ndeps: ;\n\nendif # DEPS\n\n#----------------------------------------------------------------------------------------------\n\nclean:\nifeq ($(ALL),1)\n\t-$(SHOW)rm -rf $(BINDIR) $(TARGET)\nelse\n\t-$(SHOW)[ -e $(BINDIR) ] && find $(BINDIR) -name '*.[oadh]' -type f -delete\n\t-$(SHOW)rm -f $(TARGET)\nendif\nifdef ($(DEPS),1)\n\t-$(SHOW)$(MAKE) --no-print-directory -C $(ROOT)/build/t-digest-c clean\nendif\n\n-include $(CC_DEPS)\n\n$(BINDIR)/%.o: $(SRCDIR)/%.c\n\t@echo Compiling $<...\n\t$(SHOW)$(CC) $(CC_FLAGS) -c $< -o $@\n\n$(TARGET): $(BIN_DIRS) $(MISSING_DEPS) $(OBJECTS)\n\t@echo Linking $@...\n\t$(SHOW)$(CC) $(SO_LD_FLAGS) $(LD_FLAGS) -o $@ $(OBJECTS) $(LD_LIBS)\n\n#----------------------------------------------------------------------------------------------\n\nNO_LINT_PATTERNS=./deps/\n\nLINT_SOURCES=$(call filter-out2,$(NO_LINT_PATTERNS),$(SOURCES) $(HEADERS))\n\nlint:\n\t$(SHOW)clang-format -Werror -n $(LINT_SOURCES)\n\nformat:\n\t$(SHOW)clang-format -i $(LINT_SOURCES)\n\n#----------------------------------------------------------------------------------------------\n\nrun: $(TARGET)\n\t$(SHOW)redis-server --loadmodule $(realpath $(TARGET))\n\n#----------------------------------------------------------------------------------------------\n\ntest: unit-tests flow-tests\n\n#----------------------------------------------------------------------------------------------\n\nunit-tests: $(TARGET)\n\t@echo Running unit tests...\n\t$(SHOW)$(MAKE) -C tests/unit build test\n\n#----------------------------------------------------------------------------------------------\n\nifeq ($(QUICK),1)\nexport GEN=1\nexport SLAVES=0\nexport AOF=0\nexport OSS_CLUSTER=0\nelse\nexport GEN ?= 1\nexport SLAVES ?= 1\nexport AOF ?= 1\nexport OSS_CLUSTER ?= 1\nendif\n\nifneq ($(RLEC),1)\n\nflow-tests: #$(TARGET)\n\t$(SHOW)\\\n\tMODULE=$(realpath $(TARGET)) \\\n\tGEN=$(GEN) AOF=$(AOF) SLAVES=$(SLAVES) OSS_CLUSTER=$(OSS_CLUSTER) \\\n\tVALGRIND=$(VALGRIND) \\\n\tTEST=$(TEST) \\\n\t$(ROOT)/tests/flow/tests.sh\n\nelse # RLEC\n\nflow-tests: #$(TARGET)\n\t$(SHOW)RLEC=1 $(ROOT)/tests/flow/tests.sh\n\nendif # RLEC\n\n#----------------------------------------------------------------------------------------------\n\nifneq ($(REMOTE),1)\nBENCHMARK_ARGS=run-local\nelse\nBENCHMARK_ARGS=run-remote \nendif\n\nBENCHMARK_ARGS += \\\n\t--module_path $(realpath $(TARGET)) \\\n\t--required-module bf \\\n\t--dso $(realpath $(TARGET))\n\nifneq ($(BENCHMARK),)\nBENCHMARK_ARGS += --test $(BENCHMARK)\nendif\n\nifneq ($(BENCH_ARGS),)\nBENCHMARK_ARGS += $(BENCH_ARGS)\nendif\n\nbenchmark: $(TARGET)\n\t$(SHOW)set -e; cd $(ROOT)/tests/benchmarks; redisbench-admin $(BENCHMARK_ARGS)\n\n.PHONY: benchmark\n\n#----------------------------------------------------------------------------------------------\n\npack: $(TARGET)\n\t@echo Creating packages...\n\t$(SHOW)BINDIR=$(BINDIR) $(ROOT)/sbin/pack.sh $(realpath $(TARGET))\n\nupload-release:\n\t$(SHOW)RELEASE=1 ./sbin/upload-artifacts\n\nupload-artifacts:\n\t$(SHOW)SNAPSHOT=1 ./sbin/upload-artifacts\n\n.PHONY: pack upload-artifacts upload-release\n\n#----------------------------------------------------------------------------------------------\n\nINFER=infer\nINFER_DOCKER=redisbench/infer-linux64:1.0.0\n\nstatic-analysis: #$(TARGET)\nifeq ($(DOCKER),1)\n\t$(SHOW)docker run -v $(ROOT)/:/RedisBloom/ --user \"$(username):$(usergroup)\" $(INFER_DOCKER) \\\n\t\tbash -c \"cd RedisBloom && CC=clang infer run --fail-on-issue --biabduction --skip-analysis-in-path  -- make\"\nelse\n\t$(SHOW)CC=clang $(INFER) run --fail-on-issue --biabduction --skip-analysis-in-path -- $(MAKE) VARIANT=infer\nendif\n\n#----------------------------------------------------------------------------------------------\n\ncoverage:\n\t$(SHOW)$(MAKE) build COV=1\n\t$(SHOW)$(COVERAGE_RESET)\n\t$(SHOW)$(MAKE) test COV=1\n\t$(SHOW)$(COVERAGE_COLLECT_REPORT)\n\n.PHONY: coverage\n\n#----------------------------------------------------------------------------------------------\n\ndocker:\n\t$(SHOW)$(MAKE) -C build/docker\nifeq ($(PUBLISH),1)\n\t$(SHOW)make -C build/docker publish\nendif\n\n.PHONY: docker\n\n#----------------------------------------------------------------------------------------------\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.0185546875,
          "content": "[![GitHub issues](https://img.shields.io/github/release/RedisLabsModules/redisbloom.svg)](https://github.com/RedisBloom/RedisBloom/releases/latest)\n[![CircleCI](https://circleci.com/gh/RedisBloom/RedisBloom.svg?style=svg)](https://circleci.com/gh/RedisBloom/RedisBloom)\n[![Dockerhub](https://img.shields.io/docker/pulls/redis/redis-stack-server?label=redis-stack-server)](https://img.shields.io/docker/pulls/redis/redis-stack-server)\n[![codecov](https://codecov.io/gh/RedisBloom/RedisBloom/branch/master/graph/badge.svg)](https://codecov.io/gh/RedisBloom/RedisBloom)\n\n# RedisBloom: Probabilistic Data Structures for Redis\n[![Forum](https://img.shields.io/badge/Forum-RedisBloom-blue)](https://forum.redis.com/c/modules/redisbloom)\n[![Discord](https://img.shields.io/discord/697882427875393627?style=flat-square)](https://discord.gg/wXhwjCQ)\n\n<img src=\"docs/docs/images/logo.svg\" alt=\"logo\" width=\"300\"/>\n\n## Overview\n\nRedisBloom adds a set of probabilistic data structures to Redis, including Bloom filter, Cuckoo filter, Count-min sketch, Top-K, and t-digest. Using this capability, you can query streaming data without needing to store all the elements of the stream. Probabilistic data structures each answer the following questions:\n\n- Bloom filter and Cuckoo filter:\n  -  Did value _v_ already appear in the data stream?\n- Count-min sketch:\n  - How many times did value _v_ appear in the data stream?\n- Top-k:\n  - What are the _k_ most frequent values in the data stream?\n- t-digest:\n  - Which fraction of the values in the data stream are smaller than a given value?\n  - How many values in the data stream are smaller than a given value?\n  - Which value is smaller than _p_ percent of the values in the data stream? (What is the _p_-percentile value?)\n  - What is the mean value between the _p1_-percentile value and the _p2_-percentile value?\n  - What is the value of the *n*ᵗʰ smallest/largest value in the data stream? (What is the value with [reverse] rank _n_?)\n\nAnswering each of these questions accurately can require a huge amount of memory, but you can lower the memory requirements drastically at the cost of reduced accuracy. Each of these data structures allows you to set a controllable trade-off between accuracy and memory consumption. In addition to having a smaller memory footprint, probabilistic data structures are generally much faster than accurate algorithms.\n\nRedisBloom is part of [Redis Stack](https://github.com/redis-stack).\n\n### How do I Redis?\n\n[Learn for free at Redis University](https://university.redis.com/)\n\n[Build faster with the Redis Launchpad](https://launchpad.redis.com/)\n\n[Try the Redis Cloud](https://redis.com/try-free/)\n\n[Dive in developer tutorials](https://developer.redis.com/)\n\n[Join the Redis community](https://redis.com/community/)\n\n[Work at Redis](https://redis.com/company/careers/jobs/)\n\n## Setup\n\nYou can either get RedisBloom setup in a Docker container or on your own machine.\n\n### Docker\nTo quickly try out RedisBloom, launch an instance using docker:\n```sh\ndocker run -p 6379:6379 -it --rm redis/redis-stack-server:latest\n```\n\n### Build it yourself\n\nYou can also build RedisBloom on your own machine. Major Linux distributions as well as macOS are supported.\n\nFirst step is to have Redis installed, of course. The following, for example, builds Redis on a clean Ubuntu docker image (`docker pull ubuntu`):\n\n```\nmkdir ~/Redis\ncd ~/Redis\napt-get update -y && apt-get upgrade -y\napt-get install -y wget make pkg-config build-essential\nwget https://download.redis.io/redis-stable.tar.gz\ntar -xzvf redis-stable.tar.gz\ncd redis-stable\nmake distclean\nmake\nmake install\n```\n\nNext, you should get the RedisBloom repository from git and build it:\n\n```\napt-get install -y git\ncd ~/Redis\ngit clone --recursive https://github.com/RedisBloom/RedisBloom.git\ncd RedisBloom\n./sbin/setup\nbash -l\nmake\n```\n\nThen `exit` to exit bash.\n\n**Note:** to get a specific version of RedisBloom, e.g. 2.4.5, add `-b v2.4.5` to the `git clone` command above.\n\nNext, run `make run -n` and copy the full path of the RedisBloom executable (e.g., `/root/Redis/RedisBloom/bin/linux-x64-release/redisbloom.so`).\n\nNext, add RedisBloom module to `redis.conf`, so Redis will load when started:\n\n```\napt-get install -y vim\ncd ~/Redis/redis-stable\nvim redis.conf\n```\nAdd: `loadmodule /root/Redis/RedisBloom/bin/linux-x64-release/redisbloom.so` under the MODULES section (use the full path copied above). \n\nSave and exit vim (ESC :wq ENTER)\n\nFor more information about modules, go to the [Redis official documentation](https://redis.io/topics/modules-intro).\n\n### Run\n\nRun redis-server in the background and then redis-cli:\n\n```\ncd ~/Redis/redis-stable\nredis-server redis.conf &\nredis-cli\n```\n\n## Give it a try\n\nAfter you setup RedisBloom, you can interact with it using redis-cli.\n\nCreate a new bloom filter by adding a new item:\n```\n# 127.0.0.1:6379> BF.ADD newFilter foo\n(integer) 1\n```\n\nFind out whether an item exists in the filter:\n```\n# 127.0.0.1:6379> BF.EXISTS newFilter foo\n(integer) 1\n```\n\nIn this case, `1` means that the `foo` is most likely in the set represented by `newFilter`. But recall that false positives are possible with Bloom filters.\n\n```\n# 127.0.0.1:6379> BF.EXISTS newFilter bar\n(integer) 0\n```\n\nA value `0` means that `bar` is definitely not in the set. Bloom filters do not allow for false negatives.\n\n## Client libraries\n\n| Project | Language | License | Author | Stars | Package | Comment |\n| ------- | -------- | ------- | ------ | ----- | ------- | ------- |\n| [jedis][jedis-url] | Java | MIT | [Redis][redis-url] | ![Stars][jedis-stars] | [Maven][jedis-package]||\n| [redis-py][redis-py-url] | Python | MIT | [Redis][redis-url] | ![Stars][redis-py-stars] | [pypi][redis-py-package]||\n| [node-redis][node-redis-url] | Node.JS | MIT | [Redis][redis-url] | ![Stars][node-redis-stars] | [npm][node-redis-package]||\n| [nredisstack][nredisstack-url] | .NET | MIT | [Redis][redis-url] | ![Stars][nredisstack-stars] | [nuget][nredisstack-package]||\n| redisbloom-go | Go | BSD | [Redis](https://redis.com) |  ![Stars](https://img.shields.io/github/stars/RedisBloom/redisbloom-go.svg?style=social&amp;label=Star&amp;maxAge=2592000) | [GitHub](https://github.com/RedisBloom/redisbloom-go) ||\n| rueidis | Go | Apache License 2.0 | [Rueian](https://github.com/rueian) |  ![Stars](https://img.shields.io/github/stars/rueian/rueidis.svg?style=social&amp;label=Star&amp;maxAge=2592000) | [GitHub](https://github.com/rueian/rueidis) ||\n| rebloom | JavaScript | MIT | [Albert Team](https://cvitae.now.sh/) | ![Stars](https://img.shields.io/github/stars/albert-team/rebloom.svg?style=social&amp;label=Star&amp;maxAge=2592000) |[GitHub](https://github.com/albert-team/rebloom) ||\n| phpredis-bloom | PHP | MIT | [Rafa Campoy](https://github.com/averias) | ![Stars](https://img.shields.io/github/stars/averias/phpredis-bloom.svg?style=social&amp;label=Star&amp;maxAge=2592000) | [GitHub](https://github.com/averias/phpredis-bloom) ||\n| phpRebloom | PHP | MIT | [Alessandro Balasco](https://github.com/palicao) | ![Stars](https://img.shields.io/github/stars/palicao/phprebloom.svg?style=social&amp;label=Star&amp;maxAge=2592000) | [GitHub](https://github.com/palicao/phpRebloom) ||\n| vertx-redis-client | Java | Apache License 2.0 | [Eclipse Vert.x](https://github.com/vert-x3) | ![Stars](https://img.shields.io/github/stars/vert-x3/vertx-redis-client.svg?style=social&amp;label=Star&amp;maxAge=2592000) | [GitHub](https://github.com/vert-x3/vertx-redis-client) ||\n| rustis | Rust | MIT | [Dahomey Technologies](https://github.com/dahomey-technologies) | ![Stars](https://img.shields.io/github/stars/dahomey-technologies/rustis.svg?style=social&amp;label=Star&amp;maxAge=2592000) | [GitHub](https://github.com/dahomey-technologies/rustis) |\n\n[redis-url]: https://redis.com\n\n[redis-py-url]: https://github.com/redis/redis-py\n[redis-py-stars]: https://img.shields.io/github/stars/redis/redis-py.svg?style=social&amp;label=Star&amp;maxAge=2592000\n[redis-py-package]: https://pypi.python.org/pypi/redis\n\n[jedis-url]: https://github.com/redis/jedis\n[jedis-stars]: https://img.shields.io/github/stars/redis/jedis.svg?style=social&amp;label=Star&amp;maxAge=2592000\n[Jedis-package]: https://search.maven.org/artifact/redis.clients/jedis\n\n[nredisstack-url]: https://github.com/redis/nredisstack\n[nredisstack-stars]: https://img.shields.io/github/stars/redis/nredisstack.svg?style=social&amp;label=Star&amp;maxAge=2592000\n[nredisstack-package]: https://www.nuget.org/packages/nredisstack/\n\n[node-redis-url]: https://github.com/redis/node-redis\n[node-redis-stars]: https://img.shields.io/github/stars/redis/node-redis.svg?style=social&amp;label=Star&amp;maxAge=2592000\n[node-redis-package]: https://www.npmjs.com/package/redis\n\n## Documentation\nDocumentation and full command reference at [redisbloom.io](http://redisbloom.io).\n\n## Mailing List / Forum\nGot questions? Feel free to ask at the [RedisBloom mailing list](https://forum.redis.com/c/modules/redisbloom).\n\n## License\nRedisBloom is licensed under the [Redis Source Available License 2.0 (RSALv2)](https://redis.com/legal/rsalv2-agreement) or the [Server Side Public License v1 (SSPLv1)](https://www.mongodb.com/licensing/server-side-public-license).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.6162109375,
          "content": "# Security Policy\n\n## Supported Versions\n\nRedisBloom is generally backwards compatible with very few exceptions, so we\nrecommend users to always use the latest version to experience stability,\nperformance and security.\n\nWe generally backport security issues to a single previous version,\nunless this is not possible or feasible with a reasonable effort.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 2.8     | :white_check_mark: |\n| 2.6     | :white_check_mark: |\n| < 2.6   | :x:                |\n\n## Reporting a Vulnerability\n\nIf you believe you've discovered a serious vulnerability, please contact the\nRedis core team at redis@redis.io. We will evaluate your report and if\nnecessary issue a fix and an advisory. If the issue was previously undisclosed,\nwe'll also mention your name in the credits.\n\n## Responsible Disclosure\n\nIn some cases, we may apply a responsible disclosure process to reported or\notherwise discovered vulnerabilities. We will usually do that for a critical\nvulnerability, and only if we have a good reason to believe information about\nit is not yet public.\n\nThis process involves providing an early notification about the vulnerability,\nits impact and mitigations to a short list of vendors under a time-limited\nembargo on public disclosure.\n\nVendors on the list are individuals or organizations that maintain Redis\ndistributions or provide Redis as a service, who have third party users who\nwill benefit from the vendor's ability to prepare for a new version or deploy a\nfix early.\n\nIf you believe you should be on the list, please contact us and we will\nconsider your request based on the above criteria.\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "changelog",
          "type": "blob",
          "size": 0.2060546875,
          "content": "2.0.0   Added Count-Min Sketch sub-module\n        Added Top-K sub-module\n\n2.0.2   Fixed replication\n\n2.0.3   Fixed hash function break\n\n2.0.X   Change return value of CMS.INCRBY to current count instead of \"OK\"."
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.5078125,
          "content": "codecov:\n  notify:\n    require_ci_to_pass: yes\n\ncoverage:\n  precision: 2\n  round: down\n  range: \"70...100\"\n\n  status:\n    project: yes\n    patch: yes\n    changes: no\n\nparsers:\n  gcov:\n    branch_detection:\n      conditional: yes\n      loop: yes\n      method: no\n      macro: no\n\ncomment:\n  layout: \"header, diff\"\n  behavior: default\n  require_changes: no\n\nignore:\n  - \"contrib\"  # ignore folders and all its contents\n  - \"rmutil\"  # ignore folders and all its contents\n  - \"tests\"  # ignore folders and all its contents\n"
        },
        {
          "name": "commands.json",
          "type": "blob",
          "size": 22.4921875,
          "content": "{\n  \"BF.RESERVE\": {\n    \"summary\": \"Creates a new Bloom Filter\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"error_rate\",\n        \"type\": \"double\"\n      },\n      {\n        \"name\": \"capacity\",\n        \"type\": \"integer\"\n      },\n      {\n        \"name\": \"expansion\",\n        \"type\": \"integer\",\n        \"token\": \"EXPANSION\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"nonscaling\",\n        \"type\": \"pure-token\",\n        \"token\": \"NONSCALING\",\n        \"optional\": true\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"bf\"\n  },\n  \"BF.ADD\": {\n    \"summary\": \"Adds an item to a Bloom Filter\",\n    \"complexity\": \"O(k), where k is the number of hash functions used by the last sub-filter\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"bf\"\n  },\n  \"BF.MADD\": {\n    \"summary\": \"Adds one or more items to a Bloom Filter. A filter will be created if it does not exist\",\n    \"complexity\": \"O(k * n), where k is the number of hash functions and n is the number of items\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"bf\"\n  },\n  \"BF.INSERT\": {\n    \"summary\": \"Adds one or more items to a Bloom Filter. A filter will be created if it does not exist\",\n    \"complexity\": \"O(k * n), where k is the number of hash functions and n is the number of items\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"capacity\",\n        \"type\": \"integer\",\n        \"token\": \"CAPACITY\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"error\",\n        \"type\": \"double\",\n        \"token\": \"ERROR\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"expansion\",\n        \"type\": \"integer\",\n        \"token\": \"EXPANSION\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"nocreate\",\n        \"token\": \"NOCREATE\",\n        \"type\": \"pure-token\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"nonscaling\",\n        \"token\": \"NONSCALING\",\n        \"type\": \"pure-token\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"items\",\n        \"token\": \"ITEMS\",\n        \"type\": \"pure-token\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"bf\"\n  },\n  \"BF.EXISTS\": {\n    \"summary\": \"Checks whether an item exists in a Bloom Filter\",\n    \"complexity\": \"O(k), where k is the number of hash functions used by the last sub-filter\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"bf\"\n  },\n  \"BF.MEXISTS\": {\n    \"summary\": \"Checks whether one or more items exist in a Bloom Filter\",\n    \"complexity\": \"O(k * n), where k is the number of hash functions and n is the number of items\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"bf\"\n  },\n  \"BF.SCANDUMP\": {\n    \"summary\": \"Begins an incremental save of the bloom filter\",\n    \"complexity\": \"O(n), where n is the capacity\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"iterator\",\n        \"type\": \"integer\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"bf\"\n  },\n  \"BF.LOADCHUNK\": {\n    \"summary\": \"Restores a filter previously saved using SCANDUMP\",\n    \"complexity\": \"O(n), where n is the capacity\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"iterator\",\n        \"type\": \"integer\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"bf\"\n  },\n  \"BF.INFO\": {\n    \"summary\": \"Returns information about a Bloom Filter\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"single_value\",\n        \"type\": \"oneof\",\n        \"optional\": true,\n        \"arguments\": [\n            {\n              \"name\": \"capacity\",\n              \"type\": \"pure-token\",\n              \"token\": \"CAPACITY\"\n            },\n            {\n              \"name\": \"size\",\n              \"type\": \"pure-token\",\n              \"token\": \"SIZE\"\n            },\n            {\n              \"name\": \"filters\",\n              \"type\": \"pure-token\",\n              \"token\": \"FILTERS\"\n            },\n            {\n              \"name\": \"items\",\n              \"type\": \"pure-token\",\n              \"token\": \"ITEMS\"\n            },\n            {\n              \"name\": \"expansion\",\n              \"type\": \"pure-token\",\n              \"token\": \"EXPANSION\"\n            }\n        ]\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"bf\"\n  },\n  \"BF.CARD\": {\n    \"summary\": \"Returns the cardinality of a Bloom filter\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      }\n    ],\n    \"since\": \"2.4.4\",\n    \"group\": \"bf\"\n  },\n  \"CF.RESERVE\": {\n    \"summary\": \"Creates a new Cuckoo Filter\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"capacity\",\n        \"type\": \"integer\"\n      },\n      {\n        \"name\": \"bucketsize\",\n        \"type\": \"integer\",\n        \"token\": \"BUCKETSIZE\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"maxiterations\",\n        \"type\": \"integer\",\n        \"token\": \"MAXITERATIONS\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"expansion\",\n        \"type\": \"integer\",\n        \"token\": \"EXPANSION\",\n        \"optional\": true\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"cf\"\n  },\n  \"CF.ADD\": {\n    \"summary\": \"Adds an item to a Cuckoo Filter\",\n    \"complexity\": \"O(k + i), where k is the number of sub-filters and i is maxIterations\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"cf\"\n  },\n  \"CF.ADDNX\": {\n    \"summary\": \"Adds an item to a Cuckoo Filter if the item did not exist previously.\",\n    \"complexity\": \"O(k + i), where k is the number of sub-filters and i is maxIterations\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"cf\"\n  },\n  \"CF.INSERT\": {\n    \"summary\": \"Adds one or more items to a Cuckoo Filter. A filter will be created if it does not exist\",\n    \"complexity\": \"O(n * (k + i)), where n is the number of items, k is the number of sub-filters and i is maxIterations\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"capacity\",\n        \"type\": \"integer\",\n        \"token\": \"CAPACITY\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"nocreate\",\n        \"token\": \"NOCREATE\",\n        \"type\": \"pure-token\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"items\",\n        \"token\": \"ITEMS\",\n        \"type\": \"pure-token\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"cf\"\n  },\n  \"CF.INSERTNX\": {\n    \"summary\": \"Adds one or more items to a Cuckoo Filter if the items did not exist previously. A filter will be created if it does not exist\",\n    \"complexity\": \"O(n * (k + i)), where n is the number of items, k is the number of sub-filters and i is maxIterations\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"capacity\",\n        \"type\": \"integer\",\n        \"token\": \"CAPACITY\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"nocreate\",\n        \"token\": \"NOCREATE\",\n        \"type\": \"pure-token\",\n        \"optional\": true\n      },\n      {\n        \"name\": \"items\",\n        \"token\": \"ITEMS\",\n        \"type\": \"pure-token\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"cf\"\n  },\n  \"CF.EXISTS\": {\n    \"summary\": \"Checks whether one or more items exist in a Cuckoo Filter\",\n    \"complexity\": \"O(k), where k is the number of sub-filters\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"cf\"\n  },\n  \"CF.MEXISTS\": {\n    \"summary\": \"Checks whether one or more items exist in a Cuckoo Filter\",\n    \"complexity\": \"O(k * n), where k is the number of sub-filters and n is the number of items\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"cf\"\n  },\n  \"CF.DEL\": {\n    \"summary\": \"Deletes an item from a Cuckoo Filter\",\n    \"complexity\": \"O(k), where k is the number of sub-filters\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"cf\"\n  },\n  \"CF.COUNT\": {\n    \"summary\": \"Return the number of times an item might be in a Cuckoo Filter\",\n    \"complexity\": \"O(k), where k is the number of sub-filters\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"cf\"\n  },\n  \"CF.SCANDUMP\": {\n    \"summary\": \"Begins an incremental save of the bloom filter\",\n    \"complexity\": \"O(n), where n is the capacity\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"iterator\",\n        \"type\": \"integer\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"cf\"\n  },\n  \"CF.LOADCHUNK\": {\n    \"summary\": \"Restores a filter previously saved using SCANDUMP\",\n    \"complexity\": \"O(n), where n is the capacity\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"iterator\",\n        \"type\": \"integer\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"string\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"cf\"\n  },\n  \"CF.INFO\": {\n    \"summary\": \"Returns information about a Cuckoo Filter\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      }\n    ],\n    \"since\": \"1.0.0\",\n    \"group\": \"cf\"\n  },\n  \"CMS.INITBYDIM\": {\n    \"summary\": \"Initializes a Count-Min Sketch to dimensions specified by user\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"width\",\n        \"type\": \"integer\"\n      },\n      {\n        \"name\": \"depth\",\n        \"type\": \"integer\"\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"cms\"\n  },\n  \"CMS.INITBYPROB\": {\n    \"summary\": \"Initializes a Count-Min Sketch to accommodate requested tolerances.\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"error\",\n        \"type\": \"double\"\n      },\n      {\n        \"name\": \"probability\",\n        \"type\": \"double\"\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"cms\"\n  },\n  \"CMS.INCRBY\": {\n    \"summary\": \"Increases the count of one or more items by increment\",\n    \"complexity\": \"O(n) where n is the number of items\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"items\",\n        \"type\": \"block\",\n        \"multiple\": true,\n        \"arguments\": [\n          {\n            \"name\": \"item\",\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"increment\",\n            \"type\": \"integer\"\n          }\n        ]\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"cms\"\n  },\n  \"CMS.QUERY\": {\n    \"summary\": \"Returns the count for one or more items in a sketch\",\n    \"complexity\": \"O(n) where n is the number of items\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"cms\"\n  },\n  \"CMS.MERGE\": {\n    \"summary\": \"Merges several sketches into one sketch\",\n    \"complexity\": \"O(n) where n is the number of sketches\",\n    \"arguments\": [\n      {\n        \"name\": \"destination\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"numKeys\",\n        \"type\": \"integer\"\n      },\n      {\n        \"name\": \"source\",\n        \"type\": \"key\",\n        \"multiple\": true\n      },\n      {\n        \"name\": \"weight\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"weights\",\n            \"token\": \"WEIGHTS\",\n            \"type\": \"pure-token\"\n          },\n          {\n            \"name\": \"weight\",\n            \"type\": \"double\",\n            \"multiple\": true\n          }\n        ]\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"cms\"\n  },\n  \"CMS.INFO\": {\n    \"summary\": \"Returns information about a sketch\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"cms\"\n  },\n  \"TOPK.RESERVE\": {\n    \"summary\": \"Initializes a TopK with specified parameters\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"topk\",\n        \"type\": \"integer\"\n      },\n      {\n        \"name\": \"params\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"width\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"depth\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"decay\",\n            \"type\": \"double\"\n          }\n        ]\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"topk\"\n  },\n  \"TOPK.ADD\": {\n    \"summary\": \"Increases the count of one or more items by increment\",\n    \"complexity\": \"O(n * k) where n is the number of items and k is the depth\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"items\",\n        \"type\": \"string\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"topk\"\n  },\n  \"TOPK.INCRBY\": {\n    \"summary\": \"Increases the count of one or more items by increment\",\n    \"complexity\": \"O(n * k * incr) where n is the number of items, k is the depth and incr is the increment\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"items\",\n        \"type\": \"block\",\n        \"multiple\": true,\n        \"arguments\": [\n          {\n            \"name\": \"item\",\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"increment\",\n            \"type\": \"integer\"\n          }\n        ]\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"topk\"\n  },\n  \"TOPK.QUERY\": {\n    \"summary\": \"Checks whether one or more items are in a sketch\",\n    \"complexity\": \"O(n) where n is the number of items\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"topk\"\n  },\n  \"TOPK.COUNT\": {\n    \"summary\": \"Return the count for one or more items are in a sketch\",\n    \"complexity\": \"O(n) where n is the number of items\",\n    \"deprecated_since\": \"2.4\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"item\",\n        \"type\": \"string\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"topk\"\n  },\n  \"TOPK.LIST\": {\n    \"summary\": \"Return full list of items in Top K list\",\n    \"complexity\": \"O(k) where k is the value of top-k\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"withcount\",\n        \"token\": \"WITHCOUNT\",\n        \"type\": \"pure-token\",\n        \"optional\": true\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"topk\"\n  },\n  \"TOPK.INFO\": {\n    \"summary\": \"Returns information about a sketch\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      }\n    ],\n    \"since\": \"2.0.0\",\n    \"group\": \"topk\"\n  },\n  \"TDIGEST.CREATE\": {\n    \"summary\": \"Allocates memory and initializes a new t-digest sketch\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"compression\",\n        \"type\": \"integer\",\n        \"token\": \"COMPRESSION\",\n        \"optional\": true\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  },\n  \"TDIGEST.RESET\": {\n    \"summary\": \"Resets a t-digest sketch: empty the sketch and re-initializes it.\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  },\n  \"TDIGEST.ADD\": {\n    \"summary\": \"Adds one or more observations to a t-digest sketch\",\n    \"complexity\": \"O(N) , where N is the number of samples to add\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"values\",\n        \"type\": \"block\",\n        \"multiple\": true,\n        \"arguments\": [\n          {\n            \"name\": \"value\",\n            \"type\": \"double\"\n          }\n        ]\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  },\n  \"TDIGEST.MERGE\": {\n    \"summary\": \"Merges multiple t-digest sketches into a single sketch\",\n    \"complexity\": \"O(N*K), where N is the number of centroids and K being the number of input sketches\",\n    \"arguments\": [\n      {\n        \"name\": \"destination-key\",\n        \"type\": \"key\"\n      }\n      ,\n      {\n        \"name\": \"numkeys\",\n        \"type\": \"integer\"\n      },\n      {\n        \"name\": \"source-key\",\n        \"type\": \"key\",\n        \"multiple\": true\n      },\n      {\n        \"name\": \"config\",\n        \"type\": \"block\",\n        \"optional\": true,\n        \"arguments\": [\n          {\n            \"name\": \"compression\",\n            \"token\": \"COMPRESSION\",\n            \"type\": \"pure-token\"\n          },\n          {\n            \"name\": \"compression\",\n            \"type\": \"integer\"\n          }\n        ]\n      },\n      {\n        \"name\": \"override\",\n        \"type\": \"pure-token\",\n        \"token\": \"OVERRIDE\",\n        \"optional\": true\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  },\n  \"TDIGEST.MIN\": {\n    \"summary\": \"Returns the minimum observation value from a t-digest sketch\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  },\n  \"TDIGEST.MAX\": {\n    \"summary\": \"Returns the maximum observation value from a t-digest sketch\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  },\n  \"TDIGEST.QUANTILE\": {\n    \"summary\": \"Returns, for each input fraction, an estimation of the value (floating point) that is smaller than the given fraction of observations\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"quantile\",\n        \"type\": \"double\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  },\n  \"TDIGEST.CDF\": {\n    \"summary\": \"Returns, for each input value, an estimation of the fraction (floating-point) of (observations smaller than the given value + half the observations equal to the given value)\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"double\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  },\n  \"TDIGEST.TRIMMED_MEAN\": {\n    \"summary\": \"Returns an estimation of the mean value from the sketch, excluding observation values outside the low and high cutoff quantiles\",\n    \"complexity\": \"O(N) where N is the number of centroids\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"low_cut_quantile\",\n        \"type\": \"double\"\n      },\n      {\n        \"name\": \"high_cut_quantile\",\n        \"type\": \"double\"\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  },\n  \"TDIGEST.RANK\": {\n    \"summary\": \"Returns, for each input value (floating-point), the estimated rank of the value (the number of observations in the sketch that are smaller than the value + half the number of observations that are equal to the value)\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"double\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  },\n  \"TDIGEST.REVRANK\": {\n    \"summary\": \"Returns, for each input value (floating-point), the estimated reverse rank of the value (the number of observations in the sketch that are larger than the value + half the number of observations that are equal to the value)\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"double\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  },\n  \"TDIGEST.BYRANK\": {\n    \"summary\": \"Returns, for each input rank, an estimation of the value (floating-point) with that rank\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"rank\",\n        \"type\": \"double\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  },\n  \"TDIGEST.BYREVRANK\": {\n    \"summary\": \"Returns, for each input reverse rank, an estimation of the value (floating-point) with that reverse rank\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      },\n      {\n        \"name\": \"reverse_rank\",\n        \"type\": \"double\",\n        \"multiple\": true\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  },\n  \"TDIGEST.INFO\": {\n    \"summary\": \"Returns information and statistics about a t-digest sketch\",\n    \"complexity\": \"O(1)\",\n    \"arguments\": [\n      {\n        \"name\": \"key\",\n        \"type\": \"key\"\n      }\n    ],\n    \"since\": \"2.4.0\",\n    \"group\": \"tdigest\"\n  }\n}\n"
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "pack",
          "type": "tree",
          "content": null
        },
        {
          "name": "sbin",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}