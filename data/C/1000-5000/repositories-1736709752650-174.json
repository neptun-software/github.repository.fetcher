{
  "metadata": {
    "timestamp": 1736709752650,
    "page": 174,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "stephane/libmodbus",
      "stars": 3581,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 0.4462890625,
          "content": "## Operating System (VM environment) ##\nplatform: x64\nimage: Visual Studio 2017\n\n## Install Script ##\ninstall:\n  - set CYGWIN_ROOT=C:\\cygwin64\n  - set PATH=%CYGWIN_ROOT%\\bin;%PATH%\n  - bash --version\n  - bash -c 'autoreconf --version'\n  - bash -c 'make --version'\n\n## Disable MSBuild (default) ##\nbuild: off\n\n## Build Script ##\nbuild_script:\n  - bash autogen.sh\n  - bash configure\n  - bash -c 'make'\n\n## Test Script ##\ntest_script:\n  - bash -c 'make check'\n"
        },
        {
          "name": ".clabot",
          "type": "blob",
          "size": 1.1787109375,
          "content": "{\n    \"contributors\": [\n        \"0x34d\",\n        \"20162026\",\n        \"2128506\",\n        \"alongl\",\n        \"arkapkaj\",\n        \"bobbybelieve\",\n        \"ccdmuro\",\n        \"cedricboudinet\",\n        \"DavidKorczynski\",\n        \"devotip\",\n        \"diplfranzhoepfinger\",\n        \"embeddedmz\",\n        \"fcntlcc\",\n        \"fedepell\",\n        \"franzhoepfinger\",\n        \"franzhollerer\",\n        \"ghorwin\",\n        \"jbysewski\",\n        \"jcarrano\",\n        \"jeroendoggen\",\n        \"jetforme\",\n        \"jiriki86\",\n        \"jordanjohnson56\",\n        \"kay30kim\",\n        \"kyllingstad\",\n        \"mek-x\",\n        \"merkag\",\n        \"mhei\",\n        \"msk-repo-0x4d\",\n        \"ndunks\",\n        \"peternewman\",\n        \"philj56\",\n        \"raymondbh\",\n        \"ringlej\",\n        \"rm5248\",\n        \"rongli-eaton\",\n        \"sebastianpsm\",\n        \"SergeyMy\",\n        \"sirsoweird\",\n        \"taikiakita\",\n        \"vancepym\",\n        \"vvck\",\n        \"woodsnake\"\n    ],\n    \"message\": \"We require contributors to sign our Contributor License Agreement. In order for us to review and merge your code, please fill https://forms.gle/5635zjphDo5JEJQSA to get added. Your document will be manually checked by the maintainer. Be patient...\"\n}\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.5458984375,
          "content": "---\nBasedOnStyle: LLVM\nAlignArrayOfStructures: Left\nAlignOperands: true\nAlignConsecutiveAssignments: false\nAlignConsecutiveMacros: true\nAlignEscapedNewlines: Left\nAlignTrailingComments: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortEnumsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: Never\nBreakBeforeBraces: Custom\nBraceWrapping:\n    AfterClass: false\n    AfterControlStatement: false\n    AfterEnum: false\n    AfterFunction: true\n    AfterNamespace: true\n    AfterObjCDeclaration: true\n    AfterStruct: false\n    AfterUnion: false\n    AfterExternBlock: false\n    BeforeCatch: false\n    BeforeElse: false\n    IndentBraces: false\n    SplitEmptyFunction: true\n    SplitEmptyRecord: true\n    SplitEmptyNamespace: true\nBinPackArguments: false\nBinPackParameters: false\nColumnLimit: 90\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nIncludeBlocks: Preserve\nIndentWidth: 4\nObjCBlockIndentWidth: 4\nPointerAlignment: Right\nReferenceAlignment: Right\nSpaceAfterCStyleCast: true\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatementsExceptForEachMacros\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInContainerLiterals: false\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nSeparateDefinitionBlocks: Always\nUseTab: Never\nPPIndentWidth: 2\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2177734375,
          "content": "root = true\n\n# Unix-style newlines with a newline ending every file\n[*]\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\n\n# Tab indentation (no size specified)\n[Makefile]\nindent_style = tab\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6064453125,
          "content": "# Temporary files\n*~\n*.swp\n*.o\n*.la\n*.lo\n*.log\n*.trs\n.deps\n.libs\n.DS_Store\n\n# Editors\n/*.sublime-*\n/.vscode\n/.venv\n\n# Generated by Autotools\nINSTALL\nMakefile\nMakefile.in\n/aclocal.m4\n/autom4te.cache\n/build-aux\n/config.*\n/configure\n/configure.scan\n/depcomp\n/install-sh\n/libmodbus.pc\n/libtool\n/ltmain.sh\n/missing\n/stamp-h1\nsrc/modbus-version.h\nsrc/win32/modbus.dll.manifest\ntests/unit-test.h\n\n# mkdocs\n/site\n\n# Binary\ntests/bandwidth-client\ntests/bandwidth-server-many-up\ntests/bandwidth-server-one\ntests/random-test-client\ntests/random-test-server\ntests/unit-test-client\ntests/unit-test-server\ntests/version\ntests/stamp-h2\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.328125,
          "content": "Stéphane Raimbault <stephane.raimbault@gmail.com>\nTobias Doerffel <tobias.doerffel@gmail.com> - CLA\nFlorian Forster <ff@octo.it>\noldfaber <oldfaber@gmail.com>\nHannu Vuolasaho <vuokkosetae@gmail.com> - CLA\nMichael Heimpold <mhei@heimpold.de> - CLA\nJimmy Bergström <jimmy@ekontroll.com> - CLA\nJakob Bysewski <kontakt@jbysewski.de> - CLA"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.28125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at stephane.raimbault@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.173828125,
          "content": "# How Do I Submit A Good Bug Report?\n\nPlease, don't send direct emails to Stéphane Raimbault unless you want\ncommercial support.\n\nTake care to read the documentation at http://libmodbus.org/.\n\n- *Be sure it's a bug before creating an issue*, in doubt, post a message on\n  <https://groups.google.com/forum/#!forum/libmodbus> or send an email to\n  <libmodbus@googlegroups.com>\n\n- *Use a clear and descriptive title* for the issue to identify\n\n- *Which version of libmodbus are you using?* you can obtain this information\nfrom your package manager or by running `pkg-config --modversion libmodbus`.\nYou can provide the sha1 of the commit if you have fetched the code with `git`.\n\n- *Which operating system are you using?*\n\n- *Describe the exact steps which reproduce the problem* in as many details as\npossible. For example, the software/equipment which runs the Modbus server, how\nthe clients are connected (TCP, RTU, ASCII) and the source code you are using.\n\n- *Enable the debug mode*, libmodbus provides a function to display the content\nof the Modbus messages and it's very convenient to analyze issues\n(http://libmodbus.org/docs/modbus_set_debug/).\n\nGood bug reports provide right and quick fixes!\n"
        },
        {
          "name": "COPYING.LESSER",
          "type": "blob",
          "size": 25.908203125,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 2.66796875,
          "content": "Please read the following carefully before submitting this new issue.\n\n- Please ensure, that you are really reporting a bug. When in doubt, post a\n  message on <https://groups.google.com/forum/#!forum/libmodbus> or send an\n  email to libmodbus@googlegroups.com\n\n- Please do not open issues to ask questions about using libmodbus. Use the\n  mailing list for this as there are many more people reading that list, who\n  could help you.\n\n- When using libmodbus from a distribution (Debian, Fedora...), please report\n  the bug first in the bug tracker of the distribution. The reason for doing so\n  is that the package maintainer should have a chance to look at the issue first\n  as it might be a packaging error. If/when the package maintainer comes to the\n  conclusion that is really an upstream bug, then he/she will usually report it\n  here by himself/herself. This is because he/she is interested in staying in\n  the notification chain to decide about a backport as soon as a bugfix is\n  available. Otherwise you (distribution user) will be asked to do so\n  explicitly.\n\nWhen you get here and you are still convinced that you want to report a bug:\n\n- *Use a clear and descriptive title* for the issue to identify\n\n- *Which version of libmodbus are you using?* you can obtain this information\n   from your package manager or by running `pkg-config --modversion libmodbus`.\n   You can provide the sha1 of the commit if you have fetched the code with `git`.\n\n- *Which operating system are you using?*\n\n- *Describe the exact steps which reproduce the problem* in as many details as\n   possible. For example, the software/equipment which runs the Modbus server, how\n   the clients are connected (TCP, RTU, ASCII) and the source code you are using.\n\n- *Enable the debug mode*, libmodbus provides a function to display the content\n   of the Modbus messages and it's very convenient to analyze issues\n   (<http://libmodbus.org/docs/modbus_set_debug/>).\n\nGood bug reports provide right and quick fixes!\n\nFinally, thank you very much for using libmodbus and taking the time to\nfile a good bug report. Doing so signals your respect for the developers.\n\nThe following template helps you to address the points above. Please delete\neverything up to and including the following line which starts with ---.\n\n---\n\n## libmodbus version\n\n  <libmodbus version or sha1 of the latest commit>\n\n## OS and/or distribution\n\n  <e.g. Windows, Linux... version>\n\n## Environment\n\n  <e.g. CPU architecture, 32 vs. 64 bit...>\n\n## Description\n\n  <...>\n\n## Actual behavior if applicable\n\n  <...>\n\n## Expected behavior or suggestion\n\n  <...>\n\n## Steps to reproduce the behavior (commands or source code)\n\n  <...>\n\n## libmodbus output with debug mode enabled\n\n  <...>\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 0.298828125,
          "content": "CLEANFILES =\nACLOCAL_AMFLAGS = -I m4 ${ACLOCAL_FLAGS}\nAM_MAKEFLAGS = --no-print-directory\n\npkgconfigdir = $(libdir)/pkgconfig\npkgconfig_DATA = libmodbus.pc\nEXTRA_DIST = libmodbus.pc.in\nCLEANFILES += libmodbus.pc\n\ndist_doc_DATA = AUTHORS NEWS README.md\n\nSUBDIRS = src\n\nif BUILD_TESTS\nSUBDIRS += tests\nendif\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 26.482421875,
          "content": "# NEWS\n\n## libmodbus 3.1.11 (2024-10-22)\n\n- RTU - Check CRC before filtering on slave ID\n- HAVE_NETINET_IN_H as guard around header (closes #765)\n- Use default port 502 in documentation.\n- Fix float endianness issue introduced in v3.1.8 (49af73d).\n  Thank you @ghorwin for your excellent work on the subject.\n  Closes #665, #694, #757, #770.\n- Proper display of used CFLAGS.\n- Don't build with debug flag by default anymore.\n- Check request length in `modbus_reply` when used in `memcpy`.\n  Thank you Nozomi Networks Labs Advisory for the report.\n- Fix insecure data handling. CID 416366: INTEGER_OVERFLOW found with Coverity\n  Scan.\n- Remove useless cast in setsockopt call (closes #721)\n- Link against socket and nsl libs when building on SunOS. Thank you @lanurmi.\n- Update documentation about tcp-pi requiring 1 KiB of extra memory (closes #715).\n  Thank you @psychon.\n- Documentation improvements by @cedricboudinet and @mhei.\n- Revert TCP checks for recovery (closes #711).\n- Don't use loop initial declaration (closes #752).\n- Fix wrong generated version for double number in win32 (closes #675).\n- Don't use gai_strerror if not available.\n- Add checks for netinet/ip.h and gai_strerror (#745)\n- Log error in read input registers if debug (closes #755).\n- Fix errno value on timeout with TCP connect (closes #736, #756).\n  Thank you @kyllingstad for the issue and @psychon for the fix.\n- Free addrinfo struct on getaddrinfo() gerrors.\n- Fix doc of modbus_mapping_new_start_address (#615).\n\n## libmodbus 3.1.10 (2022-12-07)\n\nUrgent release to fix a regression.\n\n- Fix baud rate handling with RTU under Linux\n- Fix modbus_disable_quirks signature\n\n## libmodbus 3.1.9 (2022-12-03)\n\n- Remove Travis CI\n- Move content about migration to libmodbus.org\n- Avoid negative value in FD_SET call\n- Test socket against positive value instead of -1\n- Improvements to autotools by @ndim\n- Fix doc links by @jordanjohnson56\n- Test the protocol id for 0 by @metapsychologe\n- Fix double negative in tests\n- New quirks handler (closes #38 #533)\n- Fix bitwise OR in documentation\n- Improve doc about slave ID in RTU\n- Add .clang-format and format code (closes #394)\n- Remove constraints on baud rate values\n- Accept IP or device in arg of unit test progs\n- Avoid compilation issue with VS2022 with strdup\n- Display created files in configure.js\n- Use strcpy_s under Windows\n- Replace inet_addr by inet_pton calls\n- Replace inet_ntoa by inet_ptop\n- Update configure.ac/config.h.win32 for new inet functions\n- Instructions to build libmodbus in a VS project\n- Fix connection check for Windows RTU (closes #660, #662)\n- Add CIFuzz Github action\n- Convert a few int to unsigned int (#402)\n\n## libmodbus 3.1.8 (2022-08-17)\n\n- Major rewrite of documentation with Material for mkdocs\n- Reduce memory use of TCP PI backend (closes #621)\n- Fixed MODBUS_ERROR_RECOVERY_LINK not working on Windows (@embeddedmz)\n- Replace Travis CI by GitHub CI\n- Fix linker error for Windows (VCLinkerTool)\n- Address check in single register / coil responses added (#463)\n- Swap CRC bytes in request data but not at CRC computing (#397)\n- Fix float endianness issue on big endian architecture\n- Fix comment about EMBUNKEXC (closes #566)\n- Fix network library detection on Haiku\n- Fix typos (closes #620)\n\n## libmodbus 3.1.7 (2022-01-09)\n\n- modbus_reply: fix copy & paste error in sanity check (fixes #614)\n- Add SECURITY.md (closes #613)\n- Fix typo in comment (closes #588)\n- Replace obsolete AC_PROG_CC_STDC by AC_PROG_CC\n- Fix position of CC flags in documentation (closes #599)\n- Remove duplicate ';' (closes #602)\n- Add the baud rate of 256k for Windows (closes #603)\n- cosmetic changes in man page standardizing itemization\n- Fix many typos\n- Replace .dir-locals.el (Emacs) by .editorconfig\n- Include the test LICENSE in tarball\n- Install the NEWS and AUTHORS files\n- Update README.md\n- docs: fix simple typo, reponse -> response\n- Add modbus\\_[get|set]\\_indication_timeout to doc build\n- Fix warning issues\n- Move malloc before starting unit tests\n- Fixed MODBUS*GET*\\* macros in case of negative values\n- SPDX: change LGPL-2.1+ to LGPL-2.1-or-later\n\nThank you to @yegorich, @i-ky, @jobol, @timgates42, @anton-bondarev,\n@richardash1981, @stefannilsson, @Zugschlus, @qqq89513 and @mhei.\n\n## libmodbus 3.1.6 (2019-07-31)\n\n- Fix awful typo in fix for VD-1301 vulnerability.\n    Thank you @karlp.\n\n## libmodbus 3.1.5 (2019-07-29)\n\n- Fix URL\n- Add appveyor.com config\n- Update libmodbus.txt\n- Change arg value from int to const uint16_t in modbus_write_register\n- Mark raw_req argument as const in modbus_send_raw_request (closes #479)\n- Add unit tests for VD-1301 and VD-1302 vulnerabilities\n- Fix VD-1301 and VD-1302 vulnerabilities\n- Create CODE_OF_CONDUCT.md\n- modbus_mapping_t is now a named typedef (to allow forward declaration)\n- Rename type as flags for consistency between functions\n- Add missing SOCK_CLOEXEC flag on socket creation\n- Remove wrong and harmful checks in configure.ac\n- Oops fix OR on RS485 settings (1c5d969)\n- Only set SER_RS485_ENABLED bit of existing RS485 settings\n- Add .vscode/ to .gitignore\n- Fix wrong function name\n- Remove a duplicated semi-colon\n- Fix a small typo in test message\n- Fix modbus_reply for TCP when unit id == 0 (fixes #376)\n- New functions to define the indication timeout (#95)\n- Remove CYGWIN condition to provide bswap16 fallback (#383)\n- typo fix\n- Use builtin bswap16 of gcc 4.8 (#377)\n- Handle out-of-memory conditions more gracefully\n- [doc] Add entry points for accept/listen in libmodbus index\n- Fix typo\n- Refine issue template for Github\n- Move WINVER definition before other includes (#350)\n- Add new function modbus_get_slave()\n- Fix LIBMODBUS_VERSION_HEX encoding (closes #345)\n- tcp_modbus_accept mustn't close socket on error (closes #333)\n\n## libmodbus 3.1.4 (2016-05-28)\n\n- C_PROG_RANLIB is rendered obsolete by LT_INIT\n- Improve ifdef around bswap_16 for **CYGWIN**\n- Improve Cygwin support. Thanks to StalderT.\n- Another round of DRY in modbus_reply()\n- Rename raw_rep to raw_rsp in unit-test-client\n- Fix wrong function name in debug message\n- Fix handling of invalid function code (closes #315)\n- Add debug message on unknown function and new unit test\n- DRY in modbus_reply by improving response_exception()\n- Fix typo in 3053bd0adb\n- CID 69145 - Argument cannot be negative in unit-test-server\n- CID 69142 - Unchecked return value in unit-test-server\n- Fix CID 69140 - Bad bit shift operation (coverity) in tests\n- Rewrite and rename README as README.md in tests/\n- Github's contributing and issue template files\n- Fix small leak (64 bytes in TCP) in unit-test-client\n- Add unit-tests.sh to tarball\n- Add ./configure.scan to .gitignore\n- Move setting of option inside the relevant conditional group\n- Add links to new modbus*\\*\\_float*\\* functions in index\n- Slight change to modbus_report_slave_id doc.\n\n## libmodbus 3.1.3 (2016-05-11)\n\n- New bswap macros for Max OSX by Jakob Bysewski.\n- Fix \"wildcard address\" in TCP IPv6 by Shoichi Sakane.\n- Introduce offsets in modbus mappings with modbus_mapping_new_start_address.\n    Thanks to Michael Heimpold and Stéphane Raimbault.\n- Fix address range in random-test-client.\n    Thanks to Martin Galvan.\n- Add an option to disable tests compilation by Yegor Yefremov.\n- Define MSG_DONTWAIT to MSG_NONBLOCK on AIX (#294).\n    Thanks to Fabrice Cantos.\n- Fix building when byteswap.h is not defined by Tomasz Mon.\n- Add some more macros for data manipulation and documentation.\n- Remove duplicate install of modbus.h (closes #290).\n    Thanks to Daniel Sutcliffe.\n- Move MIGRATION and README.md to dist_doc_DATA target.\n- Change order of few functions in modbus RTU code.\n- Add entries for modbus*rtu*[get|set]\\_delay in documentation index.\n- Implemented runtime configurable RTS delay by Jimmy Bergström.\n- Add an entry in libmodbus index page for modbus_rtu_set_custom_rts.\n- Add support for user defined RTS toggle function by Jimmy\n    Bergström.\n- Added ILLEGAL_DATA_ADDRESS tests for modbus_write_register[|s].\n    Thanks to Andrey Skvortsov.\n- Update documentation of modbus_rtu_set_rts\n- Fix rts signal switch time by Hiromasa Ihara.\n- Improve new_rtu and set_slave documentation (related to #276).\n- Fix late check of ctx in modbus_reply[|_exception] (closes #269).\n- Wait the server for 1 second before running tests (help Travis).\n- A libmodbus context isn't thread safe and won't be (closes #246).\n- Fix buffer overflow in modbus_mask_write_register (#265).\n- Minor adjustments to README about AsciiDoc.\n- Export MODBUS_MAX_ADU_LENGTH and documentation (ref #241).\n- Explicit check against Modbus broadcast address.\n- Do not reply on broadcast requests (fixes #153). Thanks to Michael.\n- Add Travis support.\n- Run unit tests with standard: make check (closes #205, closes #238).\n    This patch has been developed by Andrey Skvortsov, Michael Heimpold\n    and Stéphane Raimbault.\n- modbus_send_raw_request: limit request length (fixes #207).\n    Thanks to Hanno Neuer for spotting this security flaw.\n- Add new contributors to AUTHORS\n- Introduce SPDX license identifiers. Thanks to Michael Heimpold.\n\n## libmodbus 3.1.2 (2015-02-13)\n\nIf you still want to listen any addresses in your TCP IPv4 server, you must now\nset the IP address to NULL in modbus_new_tcp before listening. Now,\nmodbus_tcp_listen only listen the IP address set in the Modbus context (see\ndocumentation).\n\nThis release introduces API changes on modbus_get_byte_timeout,\nmodbus_get_response_timeout, modbus_set_byte_timeout,\nmodbus_set_response_timeout to ease writing of language bindings.\n\n- Rewrite documentation building system\n- Fix timeouts in unit tests\n- Don't flush on illegal address errors in single write functions\n- Fix compilation on compilers not supporting c99 mode.\n    Thanks to Michael Heimpold.\n- Update license for the tests in Debian packaging (#221)\n- Move check of device earlier to avoid a free call\n- Unit test for baud rate check and error message.\n- Fix crash modbus_new_rtu when baud is 0.\n    Thank you to Daniel Schürmann.\n- Removed function prototype without implementation\n    Thank you Andrej Skvortzov.\n- Switch test programs to a BSD license\n- Fix remote buffer overflow vulnerability on write requests\n- Avoid twice connect() in source code (closes #194)\n- Fix compilation with MinGW (GCC 4.8.1) under Win7 (closes #163)\n    Thank you MarjanTomas and SwissKnife.\n- Fix TCP IPv4 modbus_connect() on win32 (closes #100 and #165)\n    Thank you Petr Gladkiy and Marjan Tomas.\n- Fix 24a05ebd3c0 - win32: init of modbus_tcp_pi_listen (#187)\n- INADDR\\_\\* macros are defined in host byte order\n- Filter of IP addresses in IPv4 server (closes #190)\n- Allow to listen any hosts in IPv6 (closes #32)\n- Define and public export of MODBUS_MAX_PDU_LENGTH (closes #167)\n- Truncate data from response in report_slave_id to new max arg (closes #167)\n- Fix response timeout modification on connect (closes #80)\n- New API to set/get response and byte timeouts.\n    New unit tests and updated documentation.\n- Export Modbus function codes supported by libmodbus\n- Fix bandwidth-server-one (closes #152)\n- Check debug flag in RTU code\n- Remove warnings caused by shadowed 'index' variable.\n    Thanks to Åke Forslund.\n- Use accept4 in TCP PI if available\n- Add documentation for tcp[_pi]\\_accept (closes #31)\n- Fix mistake in modbus_tcp_listen documentation\n- Add documentation for modbus_tcp_pi_listen\n- Fix for MinGW and Windows (#144, #169, #175, #180, #181, #187)\n    Thanks to Marjan Tomas.\n- Many other fixes (#134, #157, #158, #183, #184) and improvements.\n\n## libmodbus 3.1.1 (2013-10-06)\n\nMore robust to exploits, more compliant and better handling of connect/close\nsequences. Windows support still broken.\n\n- New unit tests\n- Fix remote buffer overflow vulnerability (closes #25, #105)\n- Explain how to define response timeouts when many RTU slaves\n- Fix receiving of incorrect queries in write_single and mask_write_register\n    Thanks to James Nutaro.\n- Check return value of autoreconf.\n    Thanks to Lauri Nurmi\n- Constant for broacast and test ordering\n- Fix the fix of device string check\n- Various changes to try to improve *broken* Windows support\n- Try to fix MinGW compilation\n- Portable use of bswap_32\n- Improve support of MacOS X\n- Fix socket value on init/close\n- Returns -1 on invalid mode in modbus_rtu_set_rts\n- Protect all public functions against invalid context\n- Sleep for delay of response timeout before reconnect (closes #77).\n    Thanks to Karl Palsson.\n- Baud rate until 4,000,000 (POSIX), 1,000,000 (Windows) (closes #93)\n- New modbus_get|set_float_dcba to get|set float in inversed byte order\n- Remove unsupported -Wtype-limits for GCC < 4.3.5 (closes #109)\n- Enable out-of-source build. Thanks to Yegor Yefremov.\n- Fix alignment problem on ARMv5 platform\n- Improvement to Debian package. Thanks to Alexander Klauer.\n- Improve support of VS 2005. Thanks to Petr Gladkiy.\n- Add documentation for modbus_mask_write_register (closes #91).\n    Thanks to Martijn de Gouw.\n- Avoid C99 declaration in win32 section code (closes #92).\n    Thanks to oldfaber and endrelovas.\n- Add a windows scripting host configure file.\n    Thanks to oldfaber and Stéphane Raimbault.\n- Fix typo in modbus_strerror documentation. Thanks to Mirko Rajkovaca.\n- Rename reserved C++ keywords of modbus_mask_write_register.\n    Thanks Tobias Doerffel.\n- Another quick workaround for deficient OS (closes #63)\n- Add support for Mask Write Register\n- Fix missing close on socket in random-test-server.\n    Thanks to Damian Zieliński.\n- Use nonblocking sockets on Win32 and OS X/iOS too.\n    Thanks to Julian Raschke.\n- Fix all compilations warnings spotted by new compilation flags\n- Major update of build system\n- Calculate RTS activation time by send length\n- Dynamic memory allocation of device name (closes #11)\n- Add unit tests for modbus_mapping_new\n- Add Visual Studio 2008 project files by oldfaber\n- Fix missing argument in synopsis section of modbus_rtu_set_serial_mode\n- Fix wrong constant names to create version number\n- More compilation fixes for Windows by oldfaber.\n- Fix wrong constant names to create version number.\n    Thanks to Denis Davydov.\n\n## libmodbus 3.1.0 (2012-06-22)\n\nMajor changes to handle many slaves in RTU mode, non blocking connections and\nRTS flow control.\n\n- Fixes for Microsoft Visual C++ compiler\n- Fixes for Windows. Thanks to oldfaber\n- Return value of \\_modbus_tcp_pi_connect() on failure (closes #61)\n- Avoid ioctl call on non-RS485 ports. Thanks to Michael Haberler\n- Display node and service in PI and port in IPv4 at connection\n- Return -1 on getaddrinfo error and print error in debug mode\n- More robust way to establish the connection in non blocking mode\n- TCP - Socket in non blocking mode by default. Thanks to Thomas Stalder\n- Apply CLOEXEC flag for TCP protocol independent too (IPv6)\n- New RTU receive() to ignore confirmation from other slaves (closes #18)\n- Move RTU filtering in CRC check to avoid useless call to modbus_reply\n- Unique transaction identifier by TCP connection\n- Use accept4 with SOCK_CLOEXEC when available (Linux)\n- Open fd and socket with the CLOEXEC flag when available\n- Exception response on report slave ID wasn't detected (closes #27)\n- Provides a way to disable the byte timeout (Alex Stapleton)\n- Added slave ID check for response messages (Alex Stapleton)\n- RTS flow control with modbus_rtu_set_rts and modbus_rtu_get_rts\n    functions by Torello Querci <tquerci@gmail.com> and Stéphane Raimbault.\n\n## libmodbus 3.0.8 (2019-07-31)\n\n- Fix awful typo in fix for VD-1301 vulnerability.\n    Thank you @karlp.\n\n## libmodbus 3.0.7 (2019-07-29)\n\n- Backport fixes for VD-1301 and VD-1302 vulnerabilities\n- Move WINVER definition before other includes (closes #350)\n- Replace signed int by unsigned\n\n## libmodbus 3.0.6 (2014-02-21)\n\n- Backport fix remote buffer overflow vulnerability on write requests\n- Replace deprecated INCLUDES by AM_CPPFLAGS\n\n## libmodbus 3.0.5 (2013-10-06)\n\n- Fix remote buffer overflow vulnerability\n- Fix receiving of incorrect queries in write_single\n\n## libmodbus 3.0.4 (2012-05-08)\n\n- autogen.sh creates symlinks instead of copies\n- Add missing m4 directory (closes #103)\n- Fix alignment problem on ARMv5 platform\n    Thanks to Alexander Dahl\n- Remove useless test on error_recovery argument\n    Thanks to Carlos Tangerino\n\n## libmodbus 3.0.3 (2012-05-25)\n\n- Fix another Visual C++ 2008/2010 deficiency (closes #53)\n- Add -lsocket to compile on QNX\n- Fix TCP PI init under Windows.\n    Thanks to oldfaber.\n- Fix a missing free in random-test-client\n    Thanks again to Stefan Finzel.\n- Fix OMG bug in modbus_mapping_free not freeing memory.\n    Thanks to Stefan Finzel for the bug report.\n- Fix semicolon typo and unistd.h include under Windows.\n    Thanks to Andrew Kravchuk.\n\n## libmodbus 3.0.2 (2012-01-16)\n\n- Update Debian package\n- Documentation fixes and additions\n- Add missing C++ macros in public headers.\n    Thanks to Bernhard Agthe.\n- Protects modbus_mapping_free against NULL argument.\n    Thanks to Andrea Mattia\n- Fix check on file doc/libmodbus.7 in acinclude.m4 (closes #28)\n- Close file descriptor when the settings don't apply in RTU.\n    Original patch provided by Thomas Stalder.\n- unit-test.h is now generated to avoid config.h dependency.\n- Request for Windows Sockets specification version 2.2 instead of 2.0\n    Thanks to Pavel Mazniker for the report.\n\n## libmodbus 3.0.1 (2011-07-18)\n\n- Avoid useless serial_mode integer when TIOCSRS485 isn't supported\n- Fix compilation failure on Windows (RS485 support) by Tobias Doerffel\n    <tobias.doerffel@gmail.com>\n- Properly check TIOCSRS485 define by Matthijs Kool\n- Rename package to libmodbus5 to fix lintian warning\n\n## libmodbus 3.0.0 (2011-07-11)\n\n- Revert libmodbus licence from LGPLv3 to LGPLv2.1 to avoid\n    incompatibility with GPLv2 program. This change has been approved\n    by Tobias Doerffel, Florian octo Forster and Hannu Vuolasaho.\n- Enable RS485 support only when available\n- Export modbus_set/get_serial_mode functions on all platforms\n- API change for read/write multiple registers function:\n    - modbus_read_and_write_registers -> modbus_write_and_read_registers\n        The function name was confusing because the write operation is performed\n        before the read. Take care to swap the arguments in the migration process.\n- Documentation of modbus*write_and_read_registers, modbus_mapping_new/free,\n    report_slave_id. modbus_get_byte_from_bits, modbus_set_bits_from_byte(s),\n    modbus*[gs]et_float, modbus_reply and modbus_reply_exception.\n- Enhanced report slave ID\n- New RPM spec file to package documentation and development files\n\n## libmodbus 2.9.4 (2011-06-05)\n\n- IPv6 support\n    Make the TCP implementation \"protocol independent\" by Florian Forster\n    and Stéphane Raimbault.\n- Fix compilation on Windows 7 (x64) with MinGW/MSYS and GCC 4.5\n    Reported by Patsy Kaye.\n- Documentation of libmodbus functions with AsciiDoc (man and HTML) by Stéphane\n    Raimbault\n- Avoid an iteration in flush function\n- New functions to send and receive raw requests (modbus_send_raw_request,\n    modbus_receive_confirmation)\n- Fix flush function of TCP backend on Windows\n- API changes for server/slave:\n    - modbus_receive doesn't take socket/fd argument anymore\n    - new function modbus_set_socket to set socket/fd\n- API changes for timeout functions:\n    - modbus_get_timeout_begin -> modbus_get_response_timeout\n    - modbus_set_timeout_begin -> modbus_set_response_timeout\n    - modbus_get_timeout_end -> modbus_get_byte_timeout\n    - modbus_set_timeout_end -> modbus_set_byte_timeout\n- Fix longstanding limitation of server to wait forever\n- New functions modbus_set/get_serial_mode by Manfred Gruber and Stéphane\n    Raimbault for RS485 communications\n- Improved recovery mode (see modbus_set_error_recovery documentation) for\n    data link and protocol errors.\n- Fix compilation issue with Microsoft Visual Studio 2008.\n    Reported by Allan Cornet.\n\n## libmodbus 2.9.3 (2011-01-14)\n\n- Major rewriting of the message reading (no more timeouts on exception)\n    by Stéphane Raimbault\n- New function to reply to an indication with an exception message\n    modbus_reply_exception()\n- New function modbus_get_header_length(modbus_t \\*ctx)\n- New functions to manipulate data:\n    - MODBUS_GET_INT32_FROM_INT16\n    - MODBUS_GET_INT16_FROM_INT8\n    - MODBUS_SET_INT16_TO_INT8\n- Fix GH-2. Read/write were swapped in \\_FC_READ_AND_WRITE_REGISTERS\n- Install an ignore handler for SIGPIPE on \\*BSD\n    Original patch by Jason Oster.\n- Fix closing of Win32 socket.\n    Reported by Petr Parýzek.\n- Fix unit identifier not copied by the TCP server.\n    Reported by Antti Manninen.\n- Fix missing modbus_flush() in unit tests\n- Fixes for OpenBSD by Barry Grumbine and Jason Oster\n\n## libmodbus 2.9.2 (2010-12-05)\n\n- Win32 support by Tobias Doerffel\n- Split source code around RTU and TCP (backends)\n- Rename modbus*[listen|accept] to modbus_tcp*[listen|accept]\n- Remove slave argument from modbus_new_rtu()\n- Check received function code\n- Fix segfault in bandwidth-server-many-up on inet_ntoa() call\n- Fix unit test of report slave ID in RTU\n- Fix GH-3. Remove inclusion of config.h in modbus.h\n- Correctly detect if we are cross-compiling for win32 by Kirill Smelkov.\n- Fix setting of the broadcast address\n\n## libmodbus 2.9.1 (2010-08-16)\n\n- Brand new API (see MIGRATION notes)!\n- Remove the internal function set_message_length_tcp\n- Restore slave ID (server ID) argument in functions\n- Error conventions of POSIX systems and error recover\n- Parity setting is now a single char ('N', 'E' or 'O')\n- Report slave ID server side\n- OpenBSD support by Anibal Limón.\n- New read and write registers function by Hannu Vuolasaho.\n- Versioning infrastructure\n    Inspired by the Clutter project and the work done by Florian Forster.\n- Fix the broadcast constant (255 -> 0)\n    Reported by David Olivari.\n- Fix #463299 - New functions to define the timeouts of begin and end of trame\n    Original patch by Sisyph (eric-paul).\n- Fix #591142 - Slave id check should be disabled in TCP connection\n    Reported by aladdinwu.\n\n## libmodbus 2.1.0 (2010-03-24)\n\n- New API to read and write float values by Stéphane Raimbault and Florian\n    Forster.\n- New API for slave server (see MIGRATION)\n- New slave server able to handle multiple connections\n- Slave only replies to broadcast queries or queries with its slave ID\n- Improved Modbus protocol conformance\n- modbus_param_t is smaller (2 int removed)\n- Better error management and SIGPIPE signal is blocked\n- Faster\n- Fix #333455 - Cygwin IPTOS_LOWDELAY not supported on cygwin\n    Reported by Jeff Laughlin and Yishin Li.\n- Fix #375926 - modbus.c:164: error: `MSG_DONTWAIT' undeclared\n    Reported and tested by Yishin Li.\n- Fix #378981 - CRC error on RTU response doesn't return negative value\n    Reported by Henrik Munktell.\n- Fix report slave ID request\n    Patch (bzr) provided by Paul Fertser.\n- Fix #425604 - Conditional jump or move depends on uninitialised value(s)\n    Occurs on first occurrence of slave timeout.\n    Reported by Henrik Munktell.\n- Fix #457200 - FreeBSD support\n    Patch provided by Norbert Koch.\n\nOther changes:\n\n- The code is now published and developed on <http://github.com/stephane/libmodbus>\n- Waf support has been removed\n\n## libmodbus 2.0.3 (2009-03-22)\n\n- Fix CRC error when a slave RTU send a response.\n    Thanks to Justin Carroll to have reported and tested my patch.\n- Remove an assignment in compute_response_length()\n- Remove duplicate counter in read_io_status()\n- Fix #274511 reported by 'Kylesch'\n    Invalid error check in modbus_init_listen_tcp\n\n## libmodbus 2.0.2 (2008-08-10)\n\n- Fix a bug reported by email by Davide Pippa\n    The function modbus_receive must check the number of values\n    indicated in the response accordingly to the query.\n- Fix #241006 reported by Jesus Hernandez Tapia\n    modbus_check_response() crashes on an invalid exception code\n- Reduce the number of function calls (read_reg_response and\n    preset_response have been removed)\n- Add a new unit test for bad response\n- Catch the timeout even if the length is equal to a exception trame\n- Test only msg_length_computed on change\n- Many comments and cleanups\n\n## libmodbus 2.0.1 (2008-07-02)\n\n- Include libmodbus.spec in the tarball\n- Fix #241006 reported by Jesus Hernandez Tapia\n    modbus_check_response() crashes on an invalid exception code\n\n## libmodbus 2.0.0 (2008-05-18)\n\n- Slave API\n    <https://blueprints.launchpad.net/libmodbus/+spec/slave-api>\n- No more glib dependency\n    <https://blueprints.launchpad.net/libmodbus/+spec/glib-dependency>\n- Unit testing and many test programs\n- Waf build support\n    <https://blueprints.launchpad.net/libmodbus/+spec/waf-support>\n- MacOS X support by Matthew Butch\n    <https://blueprints.launchpad.net/libmodbus/+spec/macosx-support>\n- Unit testing (unit-test-slave and unit-test-master)\n- Port number is now defined at initialisation by Dirk Reusch\n- Better memory management (uint8_t \\*data and packing of\n    modbus_param_t)\n- Better error management\n- Declare many static functions and const arrays\n- Enhance an integer division\n- The GNU licences LGPL and GPL are in version 3\n- Debian and RPM packages (#224496)\n- Many cleanups\n- Fix #159443 reported by Stefan Bisanz\n    Index of incoming data in force multiple coils function\n- Fix #161989 reported by Konstantinos Togias\n    Serial device paths more than 10 chars long (eg. /dev/ttyUSB0) don't\n    fit to modbus_param_t -> device char[11] var.\n- Fix #188189 reported by Chris Hellyar\n    Compute_response_size() no entry for read_input_status()\n- Fix #191039 reported by Todd Denniston\n    modbus.h is not installed at prefix.\n- Fix #211460 reported by Todd Denniston\n    With TCP, automatic reconnect on error may not be desired.\n- Fix #224485 reported by Todd Denniston\n    libmodbus does not link with c++ code.\n- Fix #224496 reported by Todd Denniston\n    It is easier to install on rpm based systems with a spec file.\n\n## libmodbus 1.2.5 (2008-05-18)\n\n- Fix #224485 reported by Todd Denniston\n    libmodbus does not link with c++ code.\n\n## libmodbus 1.2.4 (2008-03-14)\n\n- Fix #191039 reported by Todd Denniston\n    modbus.h is not installed at prefix.\n\n## libmodbus 1.2.3 (2008-02-03)\n\n- Fix #188189 reported by Chris Hellyar\n    Compute_response_size() no entry for read_input_status()\n- Fix #181887 reported by Jesus Hernandez Tapia.\n    Slave address in build_request_packet_tcp() is hardcoded as 0xFF.\n\n## libmodbus 1.2.2 (2007-11-12)\n\n- Fix #161989 reported by Konstantinos Togias\n    Serial device paths more than 10 chars long (eg. /dev/ttyUSB0) don't\n    fit to modbus_param_t -> device char[11] var.\n- Structure is also bit better 'packed' to conserve memory (see the\n    trunk for a real enhancement).\n\n## libmodbus 1.2.1 (2007-11-02)\n\n- Fix #159443 reported by Stefan Bisanz\n    Index of incoming data in force multiple coils function\n- Deleted useless code in check_crc16()\n- Untabify source code\n- Changed author's email to Stéphane Raimbault\n\n## libmodbus 1.2.0 (2007-05-10)\n\n- FIX Compilation GCC-4.0\n- Project name in autogen.sh\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.810546875,
          "content": "# A groovy modbus library\n\n![Build Status](https://github.com/stephane/libmodbus/actions/workflows/build.yml/badge.svg)\n[![Coverity Scan Build Status](https://scan.coverity.com/projects/8058/badge.svg)](https://scan.coverity.com/projects/libmodbus)\n\n## Overview\n\nlibmodbus is a free software library to send/receive data with a device which\nrespects the Modbus protocol. This library can use a serial port or an Ethernet\nconnection.\n\nThe functions included in the library have been derived from the Modicon Modbus\nProtocol Reference Guide which can be obtained from [www.modbus.org](http://www.modbus.org).\n\nThe license of libmodbus is *LGPL v2.1 or later*.\n\nThe official website is [www.libmodbus.org](http://www.libmodbus.org). The\nwebsite contains the latest version of the documentation.\n\nThe library is written in C and designed to run on Linux, Mac OS X, FreeBSD, Embox,\nQNX and Windows.\n\nYou can use the library on MCUs with Embox RTOS.\n\n## Installation\n\nYou will only need to install automake, autoconf, libtool and a C compiler (gcc\nor clang) to compile the library and asciidoc and xmlto to generate the\ndocumentation (optional).\n\nTo install, just run the usual dance, `./configure && make install`. Run\n`./autogen.sh` first to generate the `configure` script if required.\n\nYou can change installation directory with prefix option, eg. `./configure\n--prefix=/usr/local/`. You have to check that the installation library path is\nproperly set up on your system (*/etc/ld.so.conf.d*) and library cache is up to\ndate (run `ldconfig` as root if required).\n\nThe library provides a *libmodbus.pc* file to use with `pkg-config` to ease your\nprogram compilation and linking.\n\nIf you want to compile with Microsoft Visual Studio, you should follow the\ninstructions in `./src/win32/README.md`.\n\nTo compile under Windows, install [MinGW](http://www.mingw.org/) and MSYS then\nselect the common packages (gcc, automake, libtool, etc). The directory\n*./src/win32/* contains a Visual C project.\n\nTo compile under OS X with [homebrew](http://mxcl.github.com/homebrew/), you\nwill need to install the following dependencies first: `brew install autoconf\nautomake libtool`.\n\nTo build under Embox, you have to use its build system.\n\n## Testing\n\nSome tests are provided in *tests* directory, you can freely edit the source\ncode to fit your needs (it's Free Software :).\n\nSee *tests/README* for a description of each program.\n\nFor a quick test of libmodbus, you can run the following programs in two shells:\n\n1. ./unit-test-server\n2. ./unit-test-client\n\nBy default, all TCP unit tests will be executed (see --help for options).\n\nIt's also possible to run the unit tests with `make check`.\n\n## To report a bug or to contribute\n\nSee [CONTRIBUTING](CONTRIBUTING.md) document.\n\n## Documentation\n\nYou can serve the local documentation with:\n\n```shell\npip install mkdocs-material\nmkdocs serve\n```\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.4892578125,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 3.1.x   | :white_check_mark: |\n| 3.0.x   | :x:                |\n\n## Reporting a Vulnerability\n\nTo report a vulnerability, you can send a mail to the maintainer at\nStéphane Raimbault <stephane.raimbault@gmail.com>.\n\nOnce the vulnerability is fixed, new releases will be published and an issue\nwill be created to disclose the vulnerability.\n\nThe reporter name will be credited (if you wish).\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.544921875,
          "content": "#! /bin/sh\ndo_symlink=\nif ln -s autogen-symlink-test autogen-symlink-test-link > /dev/null 2>&1; then\n    do_symlink=--symlink\n    rm autogen-symlink-test-link\nfi\nif autoreconf --install $do_symlink --force; then\n\techo\n\techo \"------------------------------------------------------\"\n\techo \"Initialized build system. You can now run ./configure \"\n\techo \"------------------------------------------------------\"\n\techo\nelse\n\ts=\"$?\"\n\techo\n\techo \"--------------------------\"\n\techo \"Running autoreconf failed.\"\n\techo \"--------------------------\"\n\techo\n\texit \"$s\"\nfi\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 5.1376953125,
          "content": "# libmodbus package version number, (as distinct from shared library version)\n# An odd micro number indicates in-progress development from Git\n# An even micro number indicates a released version\n#\n# Making a point release:\n# - increase libmodbus_version_micro to the next even number\n#\n# After the release:\n# - increase libmodbus_version_minor to the next odd number\n#\n# Take care to update the libtool versioning when required (LIBMODBUS_LD_*).\n# http://www.gnu.org/software/libtool/manual/html_node/Libtool-versioning.html\n#\nm4_define([libmodbus_version_major], [3])\nm4_define([libmodbus_version_minor], [1])\nm4_define([libmodbus_version_micro], [11])\n\nm4_define([libmodbus_release_status],\n    [m4_if(m4_eval(libmodbus_version_minor % 2), [1], [snapshot], [release])])\n\nm4_define([libmodbus_version],\n    [libmodbus_version_major.libmodbus_version_minor.libmodbus_version_micro])\n\nAC_PREREQ([2.63])\nAC_INIT([libmodbus],\n        [libmodbus_version],\n        [https://github.com/stephane/libmodbus/issues],\n        [libmodbus],\n        [http://libmodbus.org/])\nAC_CONFIG_SRCDIR([src/modbus.c])\nAC_CONFIG_AUX_DIR([build-aux])\nAM_INIT_AUTOMAKE([check-news foreign 1.11 silent-rules tar-pax subdir-objects])\nAC_PROG_CC\nAC_USE_SYSTEM_EXTENSIONS\nAC_SYS_LARGEFILE\nAC_CONFIG_MACRO_DIR([m4])\nAM_SILENT_RULES([yes])\n\nLIBMODBUS_VERSION_MAJOR=libmodbus_version_major\nLIBMODBUS_VERSION_MINOR=libmodbus_version_minor\nLIBMODBUS_VERSION_MICRO=libmodbus_version_micro\nLIBMODBUS_VERSION=libmodbus_version\nAC_SUBST(LIBMODBUS_VERSION_MAJOR)\nAC_SUBST(LIBMODBUS_VERSION_MINOR)\nAC_SUBST(LIBMODBUS_VERSION_MICRO)\nAC_SUBST(LIBMODBUS_VERSION)\n\n# ABI version\n# http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\nLIBMODBUS_LD_CURRENT=6\nLIBMODBUS_LD_REVISION=0\nLIBMODBUS_LD_AGE=1\nLIBMODBUS_LT_VERSION_INFO=$LIBMODBUS_LD_CURRENT:$LIBMODBUS_LD_REVISION:$LIBMODBUS_LD_AGE\nAC_SUBST(LIBMODBUS_LT_VERSION_INFO)\n\nAC_CANONICAL_HOST\n\n# OS check\nos_win32=\"false\"\nos_cygwin=\"false\"\nos_qnx=\"false\"\nos_sunos=\"false\"\ncase \"${host_os}\" in\n      *mingw32*)\n    os_win32=\"true\"\n  ;;\n      *nto-qnx*)\n    os_qnx=\"true\"\n  ;;\n      *cygwin*)\n    os_cygwin=\"true\"\n  ;;\n      *solaris*)\n    os_sunos=\"true\"\n  ;;\nesac\nAM_CONDITIONAL(OS_WIN32, test \"$os_win32\" = \"true\")\nAM_CONDITIONAL(OS_QNX, test \"$os_qnx\" = \"true\")\n\nm4_pattern_forbid([^LT_INIT])dnl\nLT_INIT([disable-static win32-dll pic-only])\n\nAC_CHECK_HEADERS([ \\\n    arpa/inet.h \\\n    byteswap.h \\\n    errno.h \\\n    fcntl.h \\\n    limits.h \\\n    linux/serial.h \\\n    netdb.h \\\n    netinet/in.h \\\n    netinet/ip.h \\\n    netinet/tcp.h \\\n    sys/ioctl.h \\\n    sys/params.h \\\n    sys/socket.h \\\n    sys/time.h \\\n    sys/types.h \\\n    termios.h \\\n    time.h \\\n    unistd.h \\\n])\n\n# Cygwin defines IPTOS_LOWDELAY but can't handle that flag so it's necessary to\n# workaround that problem and Cygwin doesn't define MSG_DONTWAIT.\nAC_CHECK_DECLS([__CYGWIN__])\n\n# Check for network function in libnetwork for Haiku\nAC_SEARCH_LIBS(accept, network socket)\n\n# Checks for library functions.\nAC_CHECK_FUNCS([accept4 gai_strerror getaddrinfo gettimeofday inet_pton inet_ntop select socket strerror strlcpy])\n\n# Required for MinGW with GCC v4.8.1 on Win7\nAC_DEFINE(WINVER, 0x0501, _)\n\n# Required for bswap\nAC_C_INLINE\n\n# libtool\nAC_PROG_CXX\n\n# Various types\nAC_TYPE_INT64_T\nAC_TYPE_SIZE_T\nAC_TYPE_SSIZE_T\nAC_TYPE_UINT16_T\nAC_TYPE_UINT32_T\nAC_TYPE_UINT8_T\n\nif test \"$os_cygwin\" = \"false\"; then\n    # Required for getaddrinfo (TCP IP - IPv6)\n    AC_CHECK_HEADERS([winsock2.h], HAVE_WINSOCK2_H=yes)\n    if test \"x$HAVE_WINSOCK2_H\" = \"xyes\"; then\n        LIBS=\"$LIBS -lws2_32\"\n    AC_SUBST(LIBS)\n    fi\nfi\n\nif test \"$os_sunos\" = \"true\"; then\n    LIBS=\"$LIBS -lnsl -lsocket\"\n    AC_SUBST(LIBS)\nfi\n\n# Check for RS485 support (Linux kernel version 2.6.28+)\nAC_CHECK_DECLS([TIOCSRS485], [], [], [[#include <sys/ioctl.h>]])\n# Check for RTS flags\nAC_CHECK_DECLS([TIOCM_RTS], [], [], [[#include <sys/ioctl.h>]])\n\nWARNING_CFLAGS=\"-Wall \\\n-Wmissing-declarations -Wmissing-prototypes \\\n-Wnested-externs -Wpointer-arith \\\n-Wsign-compare -Wchar-subscripts \\\n-Wstrict-prototypes -Wshadow \\\n-Wformat-security\"\nAC_SUBST([WARNING_CFLAGS])\n\n# Build options\nAC_ARG_ENABLE(tests,\n\tAS_HELP_STRING([--disable-tests],\n\t[Build tests (default: yes)]),,\n\t[enable_tests=yes])\nAM_CONDITIONAL(BUILD_TESTS, [test $enable_tests != no])\n\nAC_CONFIG_HEADERS([config.h tests/unit-test.h])\nAC_CONFIG_FILES([\n        Makefile\n        src/Makefile\n        src/modbus-version.h\n        src/win32/modbus.dll.manifest\n        tests/Makefile\n        libmodbus.pc\n])\n\nAC_ARG_ENABLE([debug],\n  [AS_HELP_STRING([--enable-debug],\n    [Enable debug symbols (default is no)])],\n  [enable_debug=$enableval],\n  [enable_debug=no])\n\nAS_IF([test \"x$enable_debug\" = \"xyes\"], [\n  CFLAGS=\"-g -O0\"\n  CXXFLAGS=\"-g -O0\"\n], [\n  CFLAGS=\"-O2\"\n  CXXFLAGS=\"-O2\"\n])\n\nAC_OUTPUT\nAC_MSG_RESULT([\n        $PACKAGE $VERSION\n        ===============\n\n        prefix:                 ${prefix}\n        sysconfdir:             ${sysconfdir}\n        libdir:                 ${libdir}\n        includedir:             ${includedir}\n\n        compiler:               ${CC}\n        cflags:                 ${CFLAGS} ${WARNING_CFLAGS}\n        ldflags:                ${LDFLAGS}\n\n        tests:                  ${enable_tests}\n])\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "libmodbus.pc.in",
          "type": "blob",
          "size": 0.1962890625,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\nincludedir=@includedir@\n\nName: modbus\nDescription: Modbus library\nVersion: @VERSION@\nLibs: -L${libdir} -lmodbus\nCflags: -I${includedir}/modbus\n"
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 0.3935546875,
          "content": "site_name: libmodbus\n\ntheme:\n    name: material\n    font: false\n\nmarkdown_extensions:\n    - md_in_html\n    - attr_list\n    - pymdownx.highlight:\n          anchor_linenums: true\n    - pymdownx.inlinehilite\n    - pymdownx.snippets\n    - pymdownx.superfences\n    - pymdownx.emoji:\n          emoji_index: !!python/name:materialx.emoji.twemoji\n          emoji_generator: !!python/name:materialx.emoji.to_svg\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}