{
  "metadata": {
    "timestamp": 1736709763844,
    "page": 199,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "schwabe/ics-openvpn",
      "stars": 3420,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3671875,
          "content": "build/\nmain/libs/\nmain/ovpnlibs/\nmain/obj/\nmain/.cxx/\n.DS_Store\n.navigation\ngoogle-breakpad/\novpn3/boost\npolarssl\nlocal.properties\nproguard-project.txt\nbuild.xml\ncache.properties\n.gradle\n\n# User-specific configurations\n.idea\n*.iml\n\nmain/openvpn3\n\n\nmain/src/ovpn3/java/net/openvpn/ovpn3\nmain/.externalNativeBuild\nmain/.cxx\n.synopsys\npolaris.yml\n.coverity\nidir\n\ntest.local.conf\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.6005859375,
          "content": "[submodule \"main/openvpn\"]\n\tpath = main/src/main/cpp/openvpn\n\turl = ../../schwabe/openvpn.git\n[submodule \"main/openssl\"]\n\tpath = main/src/main/cpp/openssl\n\turl = ../../schwabe/platform_external_openssl.git\n[submodule \"main/src/main/cpp/mbedtls\"]\n\tpath = main/src/main/cpp/mbedtls\n\turl = ../../ARMmbed/mbedtls.git\n[submodule \"main/src/main/cpp/openvpn3\"]\n\tpath = main/src/main/cpp/openvpn3\n\turl = ../../schwabe/openvpn3.git\n[submodule \"main/src/main/cpp/asio\"]\n\tpath = main/src/main/cpp/asio\n\turl = ../../chriskohlhoff/asio/\n[submodule \"main/src/main/cpp/lz4\"]\n\tpath = main/src/main/cpp/lz4\n\turl = ../../lz4/lz4.git\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.4248046875,
          "content": "language: android\ngit:\n  depth: 1\njdk: oraclejdk8\nandroid:\n  components:\n    - tools\n    - build-tools-27.0.3\n    - extra-android-m2repository\n    - platform-tools\n\n  licenses:\n    - 'android-sdk-license-.+'\n    - 'google-gdk-license-.+'\n    - '.+'\n\nbefore_cache:\n  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock\n  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/\ncache:\n  directories:\n    - $HOME/.gradle/caches/\n    - $HOME/.gradle/wrapper/\n    - $HOME/.android/build-cache\n    \nscript:\n  # Force signing with the debug keys\n  - echo icsopenvpnDebugSign=true > ~/.gradle/gradle.properties\n  # Building one variant is enough and already takes quite a long time...\n  - ./gradlew assembleUiRelease\n\nbefore_script:\n  # Install packages\n  - sudo add-apt-repository ppa:teward/swig3.0 -y\n  - sudo apt-get update -q\n  - sudo apt-get install -q unzip swig3.0 cmake\n  \n  # Annoying workarounds #1\n  - sudo ln -s /usr/bin/swig3.0 /usr/bin/swig\n  - swig -version\n  # Annoying workarounds #2\n  #- curl -L https://dl.google.com/android/repository/android-ndk-r19b-linux-x86_64.zip\n  #- unzip -q android-ndk-r19b-linux-x86_64.zip\n  #- rm android-ndk-r19b-linux-x86_64.zip\n  #- export ANDROID_NDK_HOME=`pwd`/android-ndk-r16b\n  #- export LOCAL_ANDROID_NDK_HOME=\"$ANDROID_NDK_HOME\"\n  \n  #- yes | sdkmanager --update\n  #- yes | sdkmanager --licenses\n  - yes | sdkmanager 'ndk'\n  - yes | sdkmanager 'platforms;android-29'\n\n  - export PATH=$PATH:${ANDROID_NDK_HOME}\n\n"
        },
        {
          "name": "CONTRIBUTING",
          "type": "blob",
          "size": 0.0859375,
          "content": "See the README.md and doc/README.txt for information about developing and contributing.\n"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 0.4443359375,
          "content": "To make issues more manageable, I would appreciate it if you fill out the following details as applicable:\n\n# General information\n1. Android Version\n2. Android Vendor/Custom ROM\n3. Device\n4. Version of the app (version number/play store version/self-built)\n \n# Description of the issue\n\n# Log (if applicable)\n\n```\nlog contents\n```\n\n# Configuration file\n\n```\nadd the contents of the configuration file if applicable\nbe careful to not post private keys\n```\n"
        },
        {
          "name": "Privacy-policy.md",
          "type": "blob",
          "size": 0.7724609375,
          "content": "Privacy Policy for OpenVPN for Android\n=====================================\n\nThe app OpenVPN for Android does not communicate to any server other than the\nOpenVPN servers provided in configuration files. The author himself does not\ncollect any data and no therefore also no data is saved. For the privacy\npolicy for the OpenVPN server/VPN service you are using (or other services related to the project\nlike GitHub), please refer to their respective privacy policy.\n\nEnd of service\n==============\nThe program and its components are under open-source licenses that allow you to use this app forever \naccording to terms of the open-source licenses for details.\n\nHowever, the author reserves the right to suspend development or stop publishing the OpenVPN app or updates \nto it at any time.\n\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.33984375,
          "content": "OpenVPN for Android\n=============\n![build status](https://github.com/schwabe/ics-openvpn/actions/workflows/build.yaml/badge.svg)\n\n\nDescription\n------------\nWith the new VPNService of Android API level 14+ (Ice Cream Sandwich) it is possible to create a VPN service that does not need root access. This project is a port of OpenVPN.\n\n<a href=\"https://f-droid.org/repository/browse/?fdid=de.blinkt.openvpn\" target=\"_blank\">\n<img src=\"https://f-droid.org/badge/get-it-on.png\" alt=\"Get it on F-Droid\" height=\"80\"/></a>\n<a href=\"https://play.google.com/store/apps/details?id=de.blinkt.openvpn\" target=\"_blank\">\n<img src=\"https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png\" alt=\"Get it on Google Play\" height=\"80\"/></a>\n\nCode Transparency\n-----------------\nFingerprint of the code transparency key used to be able to verify that\napks generated by the Play are not modified (https://developer.android.com/guide/app-bundle/code-transparency): \n\n    19 62 43 6C 96 B4 9D 12 75 83 B1 22 DA 14 F4 5D 2B 78 5D A4 13 1F 04 BE 73 A0 88 32 15 59 18 8D\n\nFull signing certificate (also under misc/code-transparency.pem):\n\n    -----BEGIN CERTIFICATE-----\n    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\n    -----END CERTIFICATE-----\n\n\nDeveloping\n---------------\nIf you want to develop on ics-openvpn please read the [doc/README.txt](https://github.com/schwabe/ics-openvpn/blob/master/doc/README.txt) *before* opening issues or emailing me. \n\nAlso please note that before contributing to the project that I would like to retain my ability to relicense the project for different third parties and therefore probably need a contributer's agreement from any contributing party. To get started, [sign the Contributor License Agreement](https://www.clahub.com/agreements/schwabe/ics-openvpn).\n\nYou can help\n------------\nEven if you are no programmer you can help by translating the OpenVPN client into your native language. [Crowdin provides a free service for non commercial open source projects](https://crowdin.net/project/ics-openvpn/invite) (Fixing/completing existing translations is very welcome as well)\n\nFAQ\n-----\nYou can find the FAQ here (same as in app): https://ics-openvpn.blinkt.de/FAQ.html\n\nControlling from external apps\n------------------------------\n\nThere is the AIDL API for real controlling (see developing section). Due to high demand also \nacitvies to start/stop, pause/resume (like a user would with the notification)  exists\n  \n - `de.blinkt.openvpn.api.DisconnectVPN`\n - `de.blinkt.openvpn.api.ConnectVPN`\n - `de.blinkt.openvpn.api.PauseVPN`\n - `de.blinkt.openvpn.api.ResumeVPN`\n\nThey use `de.blinkt.openvpn.api.profileName` as extra for the name of the VPN profile.\n\nYou can use `adb` to to test these intents:\n\n    adb -d shell am start -a android.intent.action.MAIN -n de.blinkt.openvpn/.api.ConnectVPN --es de.blinkt.openvpn.api.profileName myvpnprofile\n\n\nNote to administrators\n------------------------\n\nYou make your life and that of your users easier if you embed the certificates into the .ovpn file. You or the users can mail the .ovpn as a attachment to the phone and directly import and use it. Also downloading and importing the file works. The MIME Type should be application/x-openvpn-profile. \n\nInline files are supported since OpenVPN 2.1rc1 and documented in the  [OpenVPN 2.3 man page](https://community.openvpn.net/openvpn/wiki/Openvpn23ManPage) (under INLINE FILE SUPPORT) \n\n(Using inline certifaces can also make your life on non-Android platforms easier since you only have one file.)\n\nFor example `ca mycafile.pem` becomes\n```\n  <ca>\n  -----BEGIN CERTIFICATE-----\n  MIIHPTCCBSWgAwIBAgIBADANBgkqhkiG9w0BAQQFADB5MRAwDgYDVQQKEwdSb290\n  [...]\n  -----END CERTIFICATE-----\n  </ca>\n```\nFootnotes\n-----------\nPlease note that OpenVPN used by this project is under GPLv2. \n\nIf you cannot or do not want to use the Play Store you can [download the apk files directly](http://plai.de/android/).\n\nIf you want to donate you can donate to [arne-paypal@rfc2549.org via paypal](https://www.paypal.com/cgi-bin/webscr?hosted_button_id=R2M6ZP9AF25LS&cmd=_s-xclick), or alternatively if you believe in fancy Internet money you can use Bitcoin: 1EVWVqpVQFhoFE6gKaqSkfvSNdmLAjcQ9z \n\nThe old official or main repository was a Mercurial (hg) repository at http://code.google.com/p/ics-openvpn/source/\n\nThe new Git repository is now at GitHub under https://github.com/schwabe/ics-openvpn\n\nPlease read the doc/README before asking questions or starting development.\n"
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 0.2626953125,
          "content": "/*\n * Copyright (c) 2012-2019 Arne Schwabe\n * Distributed under the GNU GPL v2 with additional terms. For full terms see the file doc/LICENSE.txt\n */\n\nplugins {\n    alias(libs.plugins.android.application) apply false\n    alias(libs.plugins.kotlin.android) apply false\n}"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.228515625,
          "content": "#\n# Copyright (c) 2012-2019 Arne Schwabe\n# Distributed under the GNU GPL v2 with additional terms. For full terms see the file doc/LICENSE.txt\n#\n\nandroid.useAndroidX=true\nandroid.nonTransitiveRClass=false\nandroid.nonFinalResIds=false\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "main",
          "type": "tree",
          "content": null
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "remoteExample",
          "type": "tree",
          "content": null
        },
        {
          "name": "runcoverity.sh",
          "type": "blob",
          "size": 1.1826171875,
          "content": "#!/bin/bash -xe\nexport PATH=$PATH:/Applications/cov-analysis-macosx-2021.03/bin\n\nif [ -z \"${COVERITY_CONNECT_HOST}\" ]; then\n    echo  COVERITY_CONNECT_HOST not set\n    exit 1\nfi\n\ncov-configure --config .coverity/cfg.xml --clang\ncov-configure --config .coverity/cfg.xml --android\ncov-configure --config .coverity/cfg.xml --kotlin\ncov-configure --config .coverity/cfg.xml --java\n\n./gradlew -b build.gradle.kts --no-daemon clean\n# Coverity needs the --fs-capture-search  for Kotlin according to https://community.synopsys.com/s/article/How-to-analyze-Kotlin-project\ncov-build --fs-capture-search main/src --dir .coverity/idir --config .coverity/cfg.xml  ./gradlew -b build.gradle.kts --no-daemon assembleUiOvpn23Release\n\nNDK_VER=${NDK_VER:-27.0.12077973}\ncov-analyze --dir .coverity/idir --all --strip-path ${PWD}/main/src/main/cpp --strip-path ${PWD}/main/src --strip-path ${PWD} --strip-path ${ANDROID_HOME}/ndk/${NDK_VER}/toolchains/llvm/prebuilt/darwin-x86_64/sysroot/ --strip-path ${ANDROID_HOME}/ndk/${NDK_VER}/toolchains/llvm/prebuilt/linux-x86_64/sysroot\n\ncov-commit-defects --dir .coverity/idir --ssl -host ${COVERITY_CONNECT_HOST} --stream icsopenvpn-styx-master --auth-key-file ~/.coverity/auth-key.txt\n"
        },
        {
          "name": "settings.gradle.kts",
          "type": "blob",
          "size": 0.56640625,
          "content": "/*\n * Copyright (c) 2012-2016 Arne Schwabe\n * Distributed under the GNU GPL v2 with additional terms. For full terms see the file doc/LICENSE.txt\n */\npluginManagement {\n    repositories {\n        gradlePluginPortal()\n        google()\n        mavenCentral()\n\n    }\n}\ndependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n        maven(url = \"https://jitpack.io\")\n    }\n}\n\ninclude(\":main\")\ninclude(\":tlsexternalcertprovider\")\ninclude(\":remoteExample\")\n//include(\":yubikeyplugin\")"
        },
        {
          "name": "tlsexternalcertprovider",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}