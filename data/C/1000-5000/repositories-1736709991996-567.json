{
  "metadata": {
    "timestamp": 1736709991996,
    "page": 567,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "syslog-ng/syslog-ng",
      "stars": 2168,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".astylerc",
          "type": "blob",
          "size": 0.708984375,
          "content": "# GNU style\n--style=gnu\n\n# convert tabs into spaces\n--convert-tabs\n\n# lines indented using 2 spaces\n--indent=spaces=2\n\n# add spaces around commas\n--pad-comma\n\n# max line lenght is 120 chars\n--max-code-length=120\n--max-instatement-indent=60\n\n# pointer is aligned to the name of the variable\n--align-pointer=name\n\n# check files recursively in folder\n--recursive\n\n# do not create backups of formatted files\n--suffix=none\n\n# exclude folders && files\n# on Travis these submodules are not checked out when cheking the style\n--ignore-exclude-errors\n--exclude=\"lib/ivykis\"\n--exclude=\"lib/compat/strcasestr.c\"\n--exclude=\"dbld\"\n\n# allow opening curly bracket in the same line as namespace e.g.: `namespace foobar {`\n--attach-namespaces\n"
        },
        {
          "name": ".ctags",
          "type": "blob",
          "size": 0.095703125,
          "content": "--exclude=tags\n--exclude=.git\n--exclude=dbld/build\n--exclude=dbld/install\n--exclude=dbld/release\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6279296875,
          "content": "{arch}\n.arch-ids\n.arch-inventory\n.gitcommit.txt\nautom4te.cache\n*~\nMakefile.in\naclocal.m4\nconfig.h.in\nconfigure\nconfigure.gnu\ndepcomp\ninstall-sh\nmissing\nmkinstalldirs\ncscope.out\n._*\nconfig.guess\nconfig.sub\nconfig.cache\nstamp-h.in\nstamp-h\nylwrap\n.*.swp\n*.pyc\nltmain.sh\n.project\n.cproject\n.settings\nDebug\nm4/libtool.m4\nm4/lt~obsolete.m4\nm4/ltoptions.m4\nm4/ltsugar.m4\nm4/ltversion.m4\nm4/pkg.m4\nm4/ax*.m4\n/compile\n.deps\n/lib/cfg-grammar.h\n/test-driver\ndbld/rules.conf\ndbld/extra-files/\ndebian/build-tree/\ndebian/*.log\ndebian/autoreconf.*\nbuild/\ntests/light/reports\ntags\nTAGS\nGPATH\nGRTAGS\nGTAGS\nmodules/python-modules/syslogng.egg-info\naclocal.m4-e\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.3857421875,
          "content": "[submodule \"lib/ivykis\"]\n\tpath = lib/ivykis\n\turl = https://github.com/buytenh/ivykis.git\n\tignore = dirty\n[submodule \"modules/grpc/otel/opentelemetry-proto\"]\n\tpath = modules/grpc/protos/opentelemetry-proto\n\turl = https://github.com/open-telemetry/opentelemetry-proto.git\n[submodule \"modules/cloud-auth/jwt-cpp\"]\n\tpath = modules/cloud-auth/jwt-cpp\n\turl = https://github.com/Thalhammer/jwt-cpp.git\n"
        },
        {
          "name": ".lgtm.yml",
          "type": "blob",
          "size": 0.732421875,
          "content": "# Disable LGTM's built-in query to detect unsafe uses of gmtime; there's a\n# custom query to check for that\nqueries:\n  - exclude: cpp/potentially-dangerous-function\n\nextraction:\n  cpp:\n    prepare:\n      packages:\n        - autoconf-archive\n        - openjdk-8-jdk-headless\n    after_prepare:\n      - export PATH=/usr/lib/jvm/java-8-openjdk-amd64/bin/:$PATH\n      - export LD_LIBRARY_PATH=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/server:$LD_LIBRARY_PATH\n      - export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\n\n      - cd /tmp && wget https://ftp.gnu.org/gnu/bison/bison-3.7.6.tar.gz && tar -xzf bison-3.7.6.tar.gz\n      - cd /tmp/bison-3.7.6 && ./configure --prefix=/tmp/bison && make all install\n      - export PATH=/tmp/bison/bin/:$PATH\n"
        },
        {
          "name": ".lgtm",
          "type": "tree",
          "content": null
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 4.3212890625,
          "content": "Balazs Scheidler <bazsi77@gmail.com> <balazs.scheidler@balabit.com>\n<bazsi77@gmail.com> <bazsi@balabit.hu>\n<bazsi77@gmail.com> <bazsi@bzorp.balabit>\n<bazsi77@gmail.com> <balazs.scheidler@oneidentity.com>\nLaszlo Budai <laszlo.budai@balabit.com> <laszlo.budai@outlook.com>\nLaszlo Budai <laszlo.budai@balabit.com> <Laszlo.Budai@balabit.com>\nLaszlo Budai <laszlo.budai@balabit.com> <laszlo.budai@balabit.com>\nLaszlo Budai <laszlo.budai@balabit.com> <lbudai@balabit.hu>\nLaszlo Budai <laszlo.budai@balabit.com> <stentor.bgyk@gmail.com>\nAndras Mitzki <andras.mitzki@balabit.com> <andras.mitzki@balabit.com>\nAndras Mitzki <andras.mitzki@balabit.com> <mitzkia@gmail.com>\nAndras Mitzki <andras.mitzki@balabit.com> <micek@balabit.hu>\nAttila Szakacs <attila.szakacs@balabit.com> <attila.szakacs@quest.com>\nAttila Szakacs <attila.szakacs@balabit.com> <attila.szakacs@balabit.com>\nAttila Szakacs <attila.szakacs@balabit.com> <attila.szakacs@oneidentity.com>\nAttila Szakacs <attila.szakacs@balabit.com> <45236571+alltilla@users.noreply.github.com>\nAttila Szakacs <attila.szakacs@balabit.com> <szakacs.attila96@gmail.com>\nAttila Szakacs <attila.szakacs@balabit.com> <attila.szakacs@axoflow.com>\nBalint Kovacs <balint.kovacs@balasys.hu> <blint@balabit.hu>\nBalint Kovacs <balint.kovacs@balasys.hu> <blint@blint.hu>\nFabien Wernli <wernli@in2p3.fr> <wernli@in2p3.fr>\nFabien Wernli <wernli@in2p3.fr> <cpan@faxm0dem.org>\nFabien Wernli <wernli@in2p3.fr> <git@faxmodem.org>\nGergely Nagy <algernon@balabit.com> <algernon@balabit.com>\nGergely Nagy <algernon@balabit.com> <algernon@balabit.hu>\nGergely Nagy <algernon@balabit.com> <algernon@madhouse-project.org>\nGergely Nagy <algernon@balabit.com> <algernon@users.noreply.github.com>\nGabor Nagy <gabor.nagy@balabit.com> <gabor.nagy@balabit.com>\nViktor Juhasz <juhasz.viktor81@gmail.com> <juhasz.viktor81@gmail.com>\nViktor Juhasz <juhasz.viktor81@gmail.com> <jviktor@balabit.hu>\nViktor Juhasz <juhasz.viktor81@gmail.com> <viktor.juhasz@balabit.com>\nPeter Kokai <peter.kokai@balabit.com> <kokaipeter@gmail.com>\nPeter Kokai <peter.kokai@balabit.com> <peter.kokai@balabit.com>\nLaszlo Meszaros <laszlo.meszaros@balabit.com> <lacienator@gmail.com>\nLaszlo Meszaros <laszlo.meszaros@balabit.com> <lmesz@balabit.hu>\nLaszlo Szemere <laszlo.szemere@balabit.com> <laszlo.szemere@balabit.com>\nLaszlo Szemere <laszlo.szemere@balabit.com> <laszlo.szemere@oneidentity.com>\nLorand Muzamel <lorand.muzamel@balabit.com> <lorand.muzamel@balabit.com>\nLorand Muzamel <lorand.muzamel@balabit.com> <lorand.muzamel@oneidentity.com>\nLászló Várady <laszlo.varady@balabit.com> <3130044+MrAnno@users.noreply.github.com>\nLászló Várady <laszlo.varady@balabit.com> <MrAnno@users.noreply.github.com>\nLászló Várady <laszlo.varady@balabit.com> <laszlo.varady93@gmail.com>\nLászló Várady <laszlo.varady@balabit.com> <laszlo.varady@balabit.com>\nMarton ILLES <marton.illes@balabit.com> <marton.illes@balabit.com>\nMarton ILLES <marton.illes@balabit.com> <marci@balabit.com>\nAdam Istvan MOZES <adam.mozes@balabit.com> <adam.mozes@balabit.com>\nAdam Istvan MOZES <adam.mozes@balabit.com> <mozes.adam.istvan@gmail.com>\nAdam Istvan MOZES <adam.mozes@balabit.com> <dnsjts@users.noreply.github.com>\nMate Farkas <mate.farkas@balabit.com> <mate.farkas@balabit.com>\nMate Farkas <mate.farkas@balabit.com> <presidento@farkas-mate.hu>\nNoemi Vanyi <noemi.vanyi@balabit.com> <sitbackandwait@gmail.com>\nNoemi Vanyi <noemi.vanyi@balabit.com> <kvch@users.noreply.github.com>\nPeter Czanik (CzP) <peter.czanik@balabit.com> <peter.czanik@balabit.com>\nPeter Czanik (CzP) <peter.czanik@balabit.com> <czanik@balabit.hu>\nPeter Czanik (CzP) <peter.czanik@balabit.com> <peter@czanik.hu>\nPeter Gyorko <peter.gyorko@balabit.com>\nPeter Gyorko <peter.gyorko@balabit.com> <gyorkop@balabit.hu>\nZoltan Pallagi <zoltan.pallagi@balabit.com> <zoltan.pallagi@balabit.com>\nZoltan Pallagi <zoltan.pallagi@balabit.com> <pzolee@balabit.com>\nZoltan Pallagi <zoltan.pallagi@balabit.com> <pzoleex@gmail.com>\nZoltan Pallagi <zoltan.pallagi@balabit.com> <pzoleex@users.noreply.github.com>\nZoltan Pallagi <zoltan.pallagi@balabit.com> <pzolee@balabit.hu>\nAntal Nemes <antal.nemes@balabit.com>\nAntal Nemes <antal.nemes@balabit.com> <furiel@users.noreply.github.com>\nNorbert Takacs <norbert.takacs@balabit.com>\nViktor Tusa <viktor.tusa@balabit.com> <tusavik@gmail.com>\nViktor Tusa <viktor.tusa@balabit.com> <tusa.balabit.hu>\nViktor Tusa <viktor.tusa@balabit.com> <tusa@balabit.hu>\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 1.126953125,
          "content": "\nsyslog-ng was written by Balázs Scheidler <bazsi@balabit.hu>\n\nContributions under the contrib/ directory were contributed by a number of\ndifferent people.\n\nCode contributions:\n-------------------\nAnthony Lineham - bugfixes\nChris Packham - suppressing duplicate messages\nJung Christian - BSDTAG macro\nRoger J. Meier - initgroups bugfix\nCorinna Vinschen - cygwin packaging files and portability fixes\nCharles G. Waldman - file source driver fixes\nPhilip Bellino - IPv6 bugfixes\nVijay Ramasubramanian - extending time related macros\nThe Regents of the University of California & Chris Torek - strcasestr()\n\nSuggestions, good bugreports, helping newbies on the mailing list:\n------------------------------------------------------------------\nEvan Rempel\nRoberto Nibali\nNate Campi\nSandor Geller\nValdis Kletnieks\nAlexander Clouter\nHari Sekhon\nDave Johnson\nBrian A. Seklecki\nJohn Morrissey\nJoe Fegan\nJoe Shaw\n\nand probably a lot more.\n\nPlease note that this list is only updated from time to time, and my\nmemories may not serve me the best, so it is probably inaccurate. If you\nmiss your name from this list, just let me know :)\n\nBalazs Scheidler\n2008-11-06\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 19.5185546875,
          "content": "cmake_minimum_required(VERSION 3.14)\n\n# use, i.e. don't skip the full RPATH for the build tree\nset(CMAKE_SKIP_BUILD_RPATH  FALSE)\n\n# when building, don't use the install RPATH already\n# (but later on when installing)\nset(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)\n\nset(CMAKE_INSTALL_RPATH \"${CMAKE_INSTALL_PREFIX}/lib\")\nset(CMAKE_MACOSX_RPATH 1)\n\n# add the automatically determined parts of the RPATH\n# which point to directories outside the build tree to the install RPATH\nset(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)\n\nproject(syslog-ng C)\n\nset(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/Modules ${PROJECT_SOURCE_DIR}/cmake/)\nset(CMAKE_POSITION_INDEPENDENT_CODE 1)\nset(BISON_FLAGS \"-Wno-other -Werror=conflicts-sr -Werror=conflicts-rr -Wcounterexamples\")\nset(BISON_BUILT_SOURCE_CFLAGS \"-Wno-unused-but-set-variable\")\n\ninclude(CheckIncludeFiles)\ninclude(CheckFunctionExists)\ninclude(ExternalProject)\ninclude(external_or_find_package)\ninclude(add_module)\ninclude(module_switch)\ninclude(FindGperf)\n\noption(ENABLE_CPP \"Enable C++\" ON)\n\nif (ENABLE_CPP)\n  enable_language(CXX)\n  set(CMAKE_CXX_STANDARD 14 CACHE STRING \"C++ standard\")\n  set(CMAKE_CXX_STANDARD_REQUIRED ON CACHE BOOL \"C++ standard is a requirement\")\n  set(CMAKE_CXX_EXTENSIONS OFF CACHE BOOL \"C++ compiler specific extensions\")\n  set(SYSLOG_NG_ENABLE_CPP ${ENABLE_CPP})\nendif()\n\nif(APPLE)\n  module_switch(ENABLE_DARWIN_OSL \"Enable OSLog\" ON)\n  option(ENABLE_OBJC \"Enable ObjC\" ${ENABLE_DARWIN_OSL})\nendif()\n\nif(ENABLE_OBJC)\n  # Turned out that even the latest gcc has no proper support of the required ObjC version\n  # Once gcc was able to compile our ObjC modules properly this requirement could be removed again\n  set(CMAKE_OBJC_COMPILER clang)\n\n  set_property(GLOBAL PROPERTY OBJC_STANDARD 11)\n  set_property(GLOBAL PROPERTY OBJC_STANDARD_REQUIRED ON)\nendif()\n\nfind_package(Git QUIET)\nif(GIT_FOUND AND EXISTS \"${PROJECT_SOURCE_DIR}/.git\")\n    option(GIT_SUBMODULE \"Checkout submodules during build\" ON)\n    if(GIT_SUBMODULE)\n        message(STATUS \"Submodule update\")\n        execute_process(COMMAND ${GIT_EXECUTABLE} submodule update --init --recursive\n                        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n                        RESULT_VARIABLE GIT_SUBMOD_RESULT)\n        if(NOT GIT_SUBMOD_RESULT EQUAL \"0\")\n            message(FATAL_ERROR \"git submodule update --init --recursive failed with ${GIT_SUBMOD_RESULT}, please checkout submodules\")\n        endif()\n    endif()\nendif()\n\nset(MEMORYCHECK_SUPPRESSIONS_FILE \"${PROJECT_SOURCE_DIR}/tests/valgrind/unit-test-leak.supp\")\nset(MEMORYCHECK_COMMAND_OPTIONS \"--num-callers=30 --sim-hints=no-nptl-pthread-stackcache --gen-suppressions=all --leak-check=full --trace-children=yes --freelist-vol=200000000 --freelist-big-blocks=10000000 --malloc-fill=55 --free-fill=AA\")\n\nexecute_process(COMMAND ${PROJECT_SOURCE_DIR}/scripts/version.sh SET OUTPUT_VARIABLE SYSLOG_NG_VERSION)\nset(SYSLOG_NG_COMBINED_VERSION ${SYSLOG_NG_VERSION})\nset(SYSLOG_NG_SOURCE_REVISION ${SYSLOG_NG_VERSION})\n\nset(SYSLOG_NG_PATH_PREFIX ${CMAKE_INSTALL_PREFIX})\nset(SYSLOG_NG_PATH_SYSCONFDIR \"\\${prefix}/etc\")\nset(SYSLOG_NG_PATH_DATADIR \"\\${datarootdir}\")\nset(SYSLOG_NG_PATH_PKGDATADIR \"\\${datarootdir}/syslog-ng\")\nset(SYSLOG_NG_PATH_PIDFILEDIR \"\\${localstatedir}\")\nset(SYSLOG_NG_PATH_LOCALSTATEDIR \"\\${prefix}/var\")\nset(SYSLOG_NG_MODULE_PATH \"\\${exec_prefix}/lib/syslog-ng\")\nset(SYSLOG_NG_PATH_EXECPREFIX \"\\${prefix}\")\nset(SYSLOG_NG_PATH_CONFIG_INCLUDEDIR \"\\${datadir}/syslog-ng/include\")\nset(SYSLOG_NG_PATH_SCLDIR \"\\${datadir}/syslog-ng/include/scl\")\nset(SYSLOG_NG_PATH_LIBEXECDIR \"\\${exec_prefix}/libexec\")\nset(SYSLOG_NG_PATH_DATAROOTDIR \"\\${prefix}/share\")\nset(SYSLOG_NG_ENABLE_TCP_WRAPPER 0)\nset(SYSLOG_NG_ENABLE_GPROF 0)\nset(SYSLOG_NG_ENABLE_MEMTRACE 0)\nset(SYSLOG_NG_ENABLE_SYSTEMD 0)\nset(SYSLOG_NG_PATH_MODULEDIR \"\\${exec_prefix}/lib/syslog-ng\")\nset(SYSLOG_NG_PACKAGE_NAME \"${CMAKE_PROJECT_NAME}\")\nset(SYSLOG_NG_PATH_XSDDIR \"\\${datadir}/syslog-ng/xsd\")\nset(SYSLOG_NG_JAVA_MODULE_PATH \"\\${exec_prefix}/lib/syslog-ng/java-modules\")\nset(SYSLOG_NG_PYTHON_MODULE_DIR \"\\${exec_prefix}/lib/syslog-ng/python\")\nset(SYSLOG_NG_PYTHON_SYSCONF_MODULE_DIR \"\\${prefix}/etc/python\")\nset(SYSLOG_NG_PYTHON_VENV_DIR \"\\${localstatedir}/python-venv\")\nset(SYSLOG_NG_PATH_TOPSRC_DIR \"${PROJECT_SOURCE_DIR}\")\nset(LIBDIR \"\\${exec_prefix}/lib\")\nset(INCLUDEDIR \"\\${prefix}/include\")\nset(TOOLSDIR \"\\${datadir}/syslog-ng/tools\")\nset(SYSLOG_NG_ENABLE_FORCED_SERVER_MODE 1)\n\nset (LOGGEN_PLUGIN_INSTALL_DIR \"${CMAKE_INSTALL_PREFIX}/lib/syslog-ng/loggen\")\n\nIF(CMAKE_BUILD_TYPE MATCHES Debug OR CMAKE_BUILD_TYPE MATCHES RelWithDebInfo)\n  set(SYSLOG_NG_ENABLE_DEBUG 1)\n  add_definitions(-DYYDEBUG=1)\nELSE()\n  set(SYSLOG_NG_ENABLE_DEBUG 0)\nENDIF()\n\ninclude(CheckTypeSize)\ninclude(CheckStructMember)\ninclude(CheckSymbolExists)\ninclude(GenerateYFromYm)\ninclude(CheckStructHasMember)\ninclude(CheckCSourceCompiles)\n\nadd_definitions(-D_GNU_SOURCE=1)\nadd_definitions(-D_LARGEFILE64_SOURCE=1)\nadd_definitions(-D__APPLE_USE_RFC_3542)\n\n\ninclude(CheckSockaddrStorage)\nif (HAVE_STRUCT_SOCKADDR_STORAGE)\n    set(SYSLOG_NG_HAVE_STRUCT_SOCKADDR_STORAGE 1)\nelse()\n    set(SYSLOG_NG_HAVE_STRUCT_SOCKADDR_STORAGE 0)\nendif()\n\ninclude(CheckCreds)\nset(SYSLOG_NG_HAVE_STRUCT_UCRED (HAVE_STRUCT_UCRED OR HAVE_STRUCT_CMSGCRED))\ncheck_struct_member (\"struct msghdr\" \"msg_control\" \"sys/types.h;sys/socket.h\" SYSLOG_NG_HAVE_CTRLBUF_IN_MSGHDR)\n\ninclude(CheckIPv6)\n\nmodule_switch(ENABLE_IPV6 \"Enable IPv6\")\nif (ENABLE_IPV6)\n    set(SYSLOG_NG_ENABLE_IPV6 ${HAVE_IPV6})\nendif()\n\ncheck_symbol_exists(TCP_KEEPIDLE  \"sys/socket.h;netinet/in.h;netinet/tcp.h\" HAVE_TCP_KEEPIDLE)\ncheck_symbol_exists(TCP_KEEPINTVL \"sys/socket.h;netinet/in.h;netinet/tcp.h\" HAVE_TCP_KEEPINTVL)\ncheck_symbol_exists(TCP_KEEPCNT   \"sys/socket.h;netinet/in.h;netinet/tcp.h\" HAVE_TCP_KEEPCNT)\nif (HAVE_TCP_KEEPIDLE AND HAVE_TCP_KEEPINTVL AND HAVE_TCP_KEEPCNT)\n  set(SYSLOG_NG_HAVE_TCP_KEEPALIVE_TIMERS 1)\nendif()\n\noption(ENV_LD_LIBRARY_PATH \"Set LD_LIBRARY_PATH during runtime to the value given\" \"\")\nif (ENV_LD_LIBRARY_PATH)\n  set(SYSLOG_NG_ENABLE_ENV_WRAPPER 1)\nendif()\n\n# NOTE: This is now seems to be an Apple/Xcode \"only\" issue, but probably much better a clang one, so later we might want to add this globally\nif (APPLE)\n  option(FORCE_CLASSIC_LINKING \"Enable classic linking\" OFF)\n  if (FORCE_CLASSIC_LINKING)\n    # XCode15 new linker has some issues (e.g. https://developer.apple.com/forums/thread/737707)\n    # switch back to classic linking till not fixed (https://developer.apple.com/documentation/xcode-release-notes/xcode-15-release-notes#Linking)\n    SET(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,-ld_classic\")\n  endif()\nendif()\n\noption(WITH_COMPILE_DATE \"Include compile date in binary\" \"ON\")\nif (WITH_COMPILE_DATE)\n  set(SYSLOG_NG_WITH_COMPILE_DATE 1)\nendif()\n\nset(CMAKE_REQUIRED_DEFINITIONS \"-D_LARGEFILE64_SOURCE=1\")\nset(CMAKE_EXTRA_INCLUDE_FILES \"fcntl.h\")\ncheck_type_size(O_LARGEFILE O_LARGEFILE)\nif (HAVE_O_LARGEFILE)\n  set(SYSLOG_NG_HAVE_O_LARGEFILE 1)\nendif()\n\ncheck_c_source_compiles(\"\n#include <pthread.h>\n__thread int a; int main() { a=0; }\" SYSLOG_NG_HAVE_THREAD_KEYWORD)\n\n\ncheck_symbol_exists(strtoll stdlib.h SYSLOG_NG_HAVE_STRTOLL)\ncheck_symbol_exists(strnlen string.h SYSLOG_NG_HAVE_STRNLEN)\ncheck_symbol_exists(getline \"stdio.h\" SYSLOG_NG_HAVE_GETLINE)\ncheck_symbol_exists(strtok_r string.h SYSLOG_NG_HAVE_STRTOK_R)\ncheck_symbol_exists(strtoimax inttypes.h SYSLOG_NG_HAVE_STRTOIMAX)\ncheck_symbol_exists(inet_aton \"sys/socket.h;netinet/in.h;arpa/inet.h\" SYSLOG_NG_HAVE_INET_ATON)\ncheck_symbol_exists(inet_ntoa \"sys/socket.h;netinet/in.h;arpa/inet.h\" SYSLOG_NG_HAVE_INET_NTOA)\ncheck_symbol_exists(getutent utmp.h SYSLOG_NG_HAVE_GETUTENT)\ncheck_symbol_exists(getutxent utmpx.h SYSLOG_NG_HAVE_GETUTXENT)\ncheck_symbol_exists(getaddrinfo \"netdb.h;sys/socket.h;sys/types.h\" SYSLOG_NG_HAVE_GETADDRINFO)\ncheck_symbol_exists(getnameinfo \"netdb.h;sys/socket.h\" SYSLOG_NG_HAVE_GETNAMEINFO)\ncheck_symbol_exists(getprotobynumber_r \"netdb.h\" SYSLOG_NG_HAVE_GETPROTOBYNUMBER_R)\ncheck_symbol_exists(clock_gettime \"time.h\" SYSLOG_NG_HAVE_CLOCK_GETTIME)\ncheck_symbol_exists(gmtime_r \"time.h\" SYSLOG_NG_HAVE_GMTIME_R)\ncheck_symbol_exists(localtime_r \"time.h\" SYSLOG_NG_HAVE_LOCALTIME_R)\ncheck_symbol_exists(\"getrandom\" \"sys/random.h\" SYSLOG_NG_HAVE_GETRANDOM)\ncheck_symbol_exists(fmemopen \"stdio.h\" SYSLOG_NG_HAVE_FMEMOPEN)\nset(CMAKE_REQUIRED_DEFINITIONS \"-D_GNU_SOURCE=1\")\ncheck_symbol_exists(memrchr \"string.h\" SYSLOG_NG_HAVE_MEMRCHR)\ncheck_symbol_exists(strcasestr \"string.h\" SYSLOG_NG_HAVE_STRCASESTR)\ncheck_symbol_exists(pread \"unistd.h\" SYSLOG_NG_HAVE_PREAD)\ncheck_symbol_exists(pwrite \"unistd.h\" SYSLOG_NG_HAVE_PWRITE)\ncheck_symbol_exists(posix_fallocate \"fcntl.h\" SYSLOG_NG_HAVE_POSIX_FALLOCATE)\ncheck_symbol_exists(timezone time.h SYSLOG_NG_HAVE_TIMEZONE)\n\ncheck_include_files(utmp.h SYSLOG_NG_HAVE_UTMP_H)\ncheck_include_files(utmpx.h SYSLOG_NG_HAVE_UTMPX_H)\ncheck_include_files(dlfcn.h SYSLOG_NG_HAVE_DLFCN_H)\ncheck_include_files(getopt.h SYSLOG_NG_HAVE_GETOPT_H)\n\ncheck_struct_has_member(\"struct utmpx\" \"ut_type\" \"utmpx.h\" UTMPX_HAS_UT_TYPE LANGUAGE C)\ncheck_struct_has_member(\"struct utmp\" \"ut_type\" \"utmp.h\" UTMP_HAS_UT_TYPE LANGUAGE C)\ncheck_struct_has_member(\"struct utmpx\" \"ut_user\" \"utmpx.h\" UTMPX_HAS_UT_USER LANGUAGE C)\ncheck_struct_has_member(\"struct utmp\" \"ut_user\" \"utmp.h\" UTMP_HAS_UT_USER LANGUAGE C)\ncheck_struct_has_member(\"struct tm\" \"tm_gmtoff\" \"sys/time.h;time.h\" SYSLOG_NG_HAVE_STRUCT_TM_TM_GMTOFF)\n\n\nif ((UTMPX_HAS_UT_TYPE AND UTMPX_HAS_UT_USER) OR (UTMPX_HAS_UT_TYPE AND UTMP_HAS_UT_USER))\n  set(SYSLOG_NG_HAVE_MODERN_UTMP 1)\nendif()\n\ncheck_symbol_exists(SO_MEMINFO \"sys/socket.h\" SYSLOG_NG_HAVE_SO_MEMINFO)\ncheck_include_file(\"linux/sock_diag.h\" SYSLOG_NG_HAVE_LINUX_SOCK_DIAG_H)\nif (SYSLOG_NG_HAVE_SO_MEMINFO)\n  set(SYSLOG_NG_ENABLE_AFSOCKET_MEMINFO_METRICS 1)\nendif()\n\nset(WITH_GETTEXT \"\" CACHE STRING \"Set the prefix where gettext is installed (e.g. /usr)\")\n\nset(CMAKE_C_STANDARD 99)\n\nfind_package(BISON 3.7.6 REQUIRED)\n\nstring(REGEX MATCH \"^([0-9]+)\\\\.([0-9]+)\\\\..*$\" _dummy \"${BISON_VERSION}\")\n\nfind_package(GLIB 2.32.0 REQUIRED COMPONENTS gmodule gthread)\n\nset(CMAKE_REQUIRED_INCLUDES ${GLIB_INCLUDE_DIRS})\nset(CMAKE_REQUIRED_LIBRARIES ${GLIB_LIBRARIES})\ncheck_symbol_exists(g_list_copy_deep \"glib.h\" SYSLOG_NG_HAVE_G_LIST_COPY_DEEP)\ncheck_symbol_exists(g_memdup2 \"glib.h\" SYSLOG_NG_HAVE_MEMDUP2)\ncheck_symbol_exists(g_ptr_array_find_with_equal_func \"glib.h\" SYSLOG_NG_HAVE_G_PTR_ARRAY_FIND_WITH_EQUAL_FUNC)\ncheck_symbol_exists(g_canonicalize_filename \"glib.h\" SYSLOG_NG_HAVE_G_CANONICALIZE_FILENAME)\n\n# only set MIN_REQUIRED to 2.68 if we know that we are at least on that version.\n# On CentOS7/SLES12 we don't have recent enough glib but with compat\n# wrappers we can compile. Bad news is that if we don't set to 2.68 at least,\n# we can't compile on new platforms with clang.\n#\n# Best of both worlds: we set to 2.68 if we have that version, so we\n# get clang to compile our code, otherwise we set it to 2.32.\nif (PC_GLIB_VERSION VERSION_GREATER_EQUAL \"2.68\")\n\n  set_target_properties(GLib::GLib PROPERTIES\n        INTERFACE_COMPILE_DEFINITIONS \"GLIB_VERSION_MIN_REQUIRED=GLIB_VERSION_2_68\")\n\nelse()\n  set_target_properties(GLib::GLib PROPERTIES\n        INTERFACE_COMPILE_DEFINITIONS \"GLIB_VERSION_MIN_REQUIRED=GLIB_VERSION_2_32\")\nendif()\n\nfind_package(RabbitMQ)\nif (RabbitMQ_FOUND)\n  set(CMAKE_REQUIRED_INCLUDES ${RabbitMQ_INCLUDE_DIR})\n  set(CMAKE_REQUIRED_LIBRARIES ${RabbitMQ_LIBRARY})\n  check_include_file(\"rabbitmq-c/tcp_socket.h\" SYSLOG_NG_HAVE_RABBITMQ_C_TCP_SOCKET_H)\n  check_symbol_exists(amqp_ssl_socket_set_verify_peer \"amqp.h;amqp_ssl_socket.h\" SYSLOG_NG_HAVE_AMQP_SSL_SOCKET_SET_VERIFY_PEER)\nendif()\n\n\nset (SYSLOG_NG_USE_CONST_IVYKIS_MOCK 1)\nexternal_or_find_package(IVYKIS REQUIRED)\nif ((NOT IVYKIS_INTERNAL) AND (IVYKIS_PKGCONF_VERSION VERSION_LESS \"0.39\"))\n  set (SYSLOG_NG_USE_CONST_IVYKIS_MOCK 0)\nendif()\n\nexternal_or_find_package(JSONC REQUIRED)\n\nfind_package(OpenSSL REQUIRED)\nfind_package(FLEX REQUIRED)\nfind_package(LIBNET REQUIRED)\nfind_package(Resolv REQUIRED)\nfind_package(WRAP)\nfind_package(Inotify)\nfind_package(LIBCAP)\n\nfind_package(systemd)\npkg_search_module(SYSTEMD_WITH_NAMESPACE libsystemd>=245)\nmessage(STATUS \"Found lib${SYSTEMD_WITH_NAMESPACE_LIBRARIES} version ${SYSTEMD_WITH_NAMESPACE_VERSION}\")\n\nmodule_switch(ENABLE_JOURNALD \"Enable systemd-journal\" Libsystemd_FOUND)\nset(WITH_SYSTEMD_JOURNAL \"system\" CACHE STRING \"Link against the system supplied or the wrapper library\")\nset_property(CACHE WITH_SYSTEMD_JOURNAL PROPERTY STRINGS system wrapper)\n\nif (ENABLE_JOURNALD)\n  if (WITH_SYSTEMD_JOURNAL STREQUAL \"system\" AND NOT Libsystemd_FOUND)\n    message(FATAL_ERROR \"systemd library not found\")\n  endif()\n\n  set(SYSLOG_NG_ENABLE_SYSTEMD 1)\n  if (WITH_SYSTEMD_JOURNAL STREQUAL \"system\")\n    if (SYSTEMD_WITH_NAMESPACE_LIBRARIES STREQUAL \"systemd\")\n       set(SYSLOG_NG_HAVE_JOURNAL_NAMESPACES 1)\n       message(STATUS \"Have journal namespaces\")\n    else()\n       set(SYSLOG_NG_HAVE_JOURNAL_NAMESPACES 0)\n    endif()\n    set(SYSLOG_NG_SYSTEMD_JOURNAL_MODE SYSLOG_NG_JOURNALD_SYSTEM)\n  elseif (WITH_SYSTEMD_JOURNAL STREQUAL \"wrapper\")\n    set(SYSLOG_NG_SYSTEMD_JOURNAL_MODE SYSLOG_NG_JOURNALD_OPTIONAL)\n  endif()\nelse()\n  set(SYSLOG_NG_ENABLE_SYSTEMD 0)\n  set(SYSLOG_NG_SYSTEMD_JOURNAL_MODE SYSLOG_NG_JOURNALD_OFF)\nendif()\n\nset(THREADS_PREFER_PTHREAD_FLAG ON)\nfind_package(Threads REQUIRED)\nset(SYSLOG_NG_HAVE_INOTIFY \"${Inotify_FOUND}\")\ncheck_function_exists(kqueue SYSLOG_NG_HAVE_KQUEUE)\n\nset (PYTHON_VERSION \"AUTO\" CACHE STRING \"Version of the installed development library\" )\n\nif (\"${PYTHON_VERSION}\" STREQUAL \"AUTO\")\n  find_package(PythonInterp EXACT 3)\n  find_package(PythonLibs EXACT 3)\nelse ()\n  find_package(PythonInterp EXACT \"${PYTHON_VERSION}\" REQUIRED)\n  find_package(PythonLibs EXACT \"${PYTHON_VERSION}\" REQUIRED)\nendif ()\n\nMESSAGE(STATUS \"Detected pythonlib version: ${PYTHONLIBS_VERSION_STRING}\")\ninclude(python_build_venv)\n\ninclude(openssl_functions)\nopenssl_set_defines()\n\npkg_check_modules(LIBPCRE REQUIRED libpcre2-8)\n\nif (WRAP_FOUND)\n  set(SYSLOG_NG_ENABLE_TCP_WRAPPER 1)\nendif()\n\nif (LIBNET_FOUND)\n  set(SYSLOG_NG_ENABLE_SPOOF_SOURCE 1)\nendif()\n\nset(SYSLOG_NG_ENABLE_LINUX_CAPS ${PC_LIBCAP_FOUND})\n\nif (WITH_GETTEXT)\n    set(CMAKE_PREFIX_PATH ${WITH_GETTEXT})\n    find_package(Gettext REQUIRED QUIET)\n    set(CMAKE_PREFIX_PATH \"\")\nelse()\n    find_package(Gettext REQUIRED QUIET)\nendif()\n\nset(Eventlog_INCLUDE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/lib/eventlog/src\")\n\nadd_custom_target(style-check  COMMAND ${PROJECT_SOURCE_DIR}/scripts/style-checker.sh check  ${PROJECT_SOURCE_DIR} ${PROJECT_BINARY_DIR})\nadd_custom_target(style-format COMMAND ${PROJECT_SOURCE_DIR}/scripts/style-checker.sh format ${PROJECT_SOURCE_DIR} ${PROJECT_BINARY_DIR})\nadd_custom_target(check-commits\n  COMMAND ${PROJECT_SOURCE_DIR}/tests/commits/check.sh\n  WORKING_DIRECTORY ${PROJECT_SOURCE_DIR})\nadd_custom_target(check-copyright\n  COMMAND ${PROJECT_SOURCE_DIR}/tests/copyright/check.sh . ${PROJECT_BINARY_DIR} policy\n  WORKING_DIRECTORY ${PROJECT_SOURCE_DIR})\nset_target_properties(check-copyright PROPERTIES\n  ADDITIONAL_MAKE_CLEAN_FILES\n  \"copyright-run.log;copyright-err.log\")\n\noption(BUILD_TESTING \"Enable unit tests\" ON)\nif (BUILD_TESTING)\n  find_package (criterion)\nendif()\n\ninclude(add_tests)\n\nif (BUILD_TESTING)\n  if (NOT CRITERION_FOUND)\n    message(FATAL_ERROR \"BUILD_TESTING is enabled (by default, or explicitely) without criterion detected! You can turn off testing via the -DBUILD_TESTING=OFF cmake option.\")\n  else()\n    set(CTEST_ENVIRONMENT\n      \"G_SLICE=always-malloc,debug-blocks\"\n      \"G_DEBUG=fatal-warnings,fatal-criticals,gc-friendly\")\n\n    # The inclusion of CTest triggers enable_testing()\n    # CMake will generate tests only if the enable_testing() command has been invoked.\n    # The CTest module invokes the command automatically when the BUILD_TESTING option is ON.\n    include(CTest)\n\n    # This flag might be a security issue, do not use in production code, unfortunately we still need it for criterion tests and the current mocking soution\n    if (APPLE)\n      SET(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,-flat_namespace\")\n    endif()\n\n    add_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND} -j $$(nproc) --output-on-failure)\n    # This one is useful to see the failed tests in details\n    add_custom_target(check_failed COMMAND ${CMAKE_CTEST_COMMAND} -j $$(nproc) --rerun-failed --output-on-failure)\n  endif()\nendif()\n\nset(IMPORTANT_WARNINGS\n  -Wshadow)\n\nset(ACCEPTABLE_WARNINGS\n  -Wno-stack-protector\n  -Wno-unused-parameter\n  -Wno-variadic-macros)\n\noption(ENABLE_EXTRA_WARNINGS \"Enable extra warnings\" ON)\nif (ENABLE_EXTRA_WARNINGS)\n  set(EXTRA_WARNINGS\n    $<$<COMPILE_LANGUAGE:C>:-Wimplicit-function-declaration>\n    $<$<COMPILE_LANGUAGE:C>:-Wnested-externs>\n    $<$<COMPILE_LANGUAGE:C>:-Wstrict-prototypes>\n    -Wswitch-default\n    $<$<COMPILE_LANGUAGE:C>:-Wimplicit-int>\n    -Wall\n    -Wuninitialized\n    -Wdeprecated\n    -Wdeprecated-declarations\n    -Woverflow\n    -Wdouble-promotion\n    -Wfloat-equal\n    -Wpointer-arith\n    $<$<COMPILE_LANGUAGE:C>:-Wpointer-sign>\n    -Wmissing-format-attribute\n    $<$<COMPILE_LANGUAGE:C>:-Wold-style-definition>\n    -Wundef\n    -Wignored-qualifiers\n    -Wfloat-conversion\n    $<$<COMPILE_LANGUAGE:C>:-Wbad-function-cast>)\n\n  if (\"${CMAKE_C_COMPILER_ID}\" MATCHES \"Clang\")\n    set(EXTRA_WARNINGS\n      ${EXTRA_WARNINGS}\n      )\n  else()\n    set(EXTRA_WARNINGS\n      $<$<COMPILE_LANGUAGE:C>:-Wold-style-declaration>\n      -Wunused-but-set-parameter\n      $<$<COMPILE_LANGUAGE:C>:-Woverride-init>\n      ${EXTRA_WARNINGS}\n      )\n  endif()\nendif()\n\nadd_compile_options (${IMPORTANT_WARNINGS} ${ACCEPTABLE_WARNINGS} ${EXTRA_WARNINGS})\n\noption(ENABLE_FORCE_GNU99 \"Enforce C99 with gnu extensions\" OFF)\nif (ENABLE_FORCE_GNU99)\n  set(EXTRA_CFLAGS -std=gnu99)\nendif()\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${EXTRA_CFLAGS}\")\n\n# Sanatizer configuration\nset(SANITIZER \"OFF\" CACHE STRING \"Enable clang sanitizer\")\n\nset_property(CACHE SANITIZER PROPERTY STRINGS OFF address thread undefined address-all)\n\nif (SANITIZER)\n  SET(SANITIZE_MODE \"${SANITIZER}\")\n  if (SANITIZER MATCHES address-all)\n    SET(SANITIZE_MODE \"address\")\n    SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize-address-use-after-scope -fsanitize-address-use-after-return=runtime\")\n  endif()\n  SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -O1 -fsanitize=${SANITIZE_MODE} -fno-omit-frame-pointer -fno-optimize-sibling-calls\")\nendif()\n\n\ninclude_directories(${CMAKE_CURRENT_BINARY_DIR})\n\nadd_subdirectory(Mk)\nadd_subdirectory(scl)\nadd_subdirectory(lib)\nadd_subdirectory(modules)\nadd_subdirectory(scripts)\nadd_subdirectory(syslog-ng)\nadd_subdirectory(syslog-ng-ctl)\nadd_subdirectory(persist-tool)\nadd_subdirectory(tests)\nadd_subdirectory(libtest)\n\nconfigure_file(${CMAKE_CURRENT_SOURCE_DIR}/syslog-ng-config.h.in ${CMAKE_CURRENT_BINARY_DIR}/syslog-ng-config.h)\n\ninstall(FILES ${CMAKE_CURRENT_BINARY_DIR}/syslog-ng-config.h DESTINATION include/syslog-ng)\n\ninstall(DIRECTORY DESTINATION var)\n\n# Package Information for pkg-config\nset(PKG_CONFIG_EXEC_PREFIX ${SYSLOG_NG_PATH_EXECPREFIX})\nset(PKG_CONFIG_DATAROOTDIR ${SYSLOG_NG_PATH_DATAROOTDIR})\nset(PKG_CONFIG_DATADIR ${SYSLOG_NG_PATH_DATAROOTDIR})\nset(PKG_CONFIG_LIBDIR ${LIBDIR})\nset(PKG_CONFIG_INCLUDEDIR ${INCLUDEDIR})\nset(PKG_CONFIG_TOOLSDIR ${TOOLSDIR})\nset(PKG_CONFIG_MODULEDIR ${SYSLOG_NG_PATH_MODULEDIR})\nset(PKG_CONFIG_CONFIG_INCLUDEDIR ${SYSLOG_NG_PATH_CONFIG_INCLUDEDIR})\nset(PKG_CONFIG_SCLDIR ${SYSLOG_NG_PATH_SCLDIR})\nset(PKG_CONFIG_IVYKIS ${IVYKIS_INCLUDE_DIRS})\nset(PKG_CONFIG_PACKAGE_VERSION ${SYSLOG_NG_VERSION})\nset(PKG_CONFIG_INTERNAL_IVYKIS_CFLAGS ${IVYKIS_INCLUDE_DIRS})\nset(libdir \"\\${libdir}\")\nset(includedir \"\\${includedir}\")\n\nconfigure_file(${CMAKE_CURRENT_SOURCE_DIR}/syslog-ng.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/syslog-ng.pc)\ninstall(FILES ${CMAKE_CURRENT_BINARY_DIR}/syslog-ng.pc DESTINATION lib/pkgconfig)\n\ninclude(print_config_summary)\nprint_config_summary()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.1181640625,
          "content": "# Contributing to syslog-ng\n\nsyslog-ng is developed as a community project, and relies on\nvolunteers to produce syslog-ng. Reporting bugs, testing changes,\nwriting code, or simply providing feedback are all important\ncontributions. This guide provides guidelines to make contributing\neasier.\n\n## Table of contents\n\n1. [Issues](#issues)\n 1. [Reporting bugs](#reporting-bugs)\n 2. [Feature requests](#feature-requests)\n 3. [Testing](#testing)\n2. [Pull requests](#pull-requests)\n3. [Additional resources](#additional-resources)\n\n## Issues\n\nOne of the easiest ways to contribute to the development of syslog-ng\nis to participate in the discussions about features, bugs and design.\nSome of these discussions started on the\n[mailing list][ar:mailing-list], some in the\n[issue tracker][ar:issue-tracker]. Bugs tagged\n[`good first issue`][ar:issues:good-first-issue] are generally good targets to contribute your\nfeedback - but pretty much any open issue can be a good start!\n\n### Reporting bugs\n\nWhen you report a bug, it is important to share as much relevant\ninformation as you can, including:\n * version number of syslog-ng used;\n * the platform (operating system and its version, architecture, etc);\n * a backtrace from the core file if the issue is a crash (this can be\ninvaluable);\n * if possible, a configuration that triggers the problem;\n * a detailed description of the issue.\n\nTo make it easy to read reports, if you send a configuration snippet,\nor a backtrace, use\n[fenced code blocks](https://help.github.com/articles/github-flavored-markdown#fenced-code-blocks)\naround them.\n\n### Feature requests\n\nWe use the same [issue tracker][ar:issue-tracker] to handle features\nrequests (they're all tagged with the\n[`enhancement`](https://github.com/syslog-ng/syslog-ng/labels/enhancement)\nlabel. You are welcome to share your ideas on existing requests, or to\nsubmit your own.\n\n### Testing\n\nAn incredibly useful way to contribute is to test patches and pull\nrequests - there's only so much [automated testing][ar:github-actions] can do.\nFor example, you can help testing on platforms the developers do not\nhave access to, or try configurations not thought of before.\n\n## Pull requests\n\nIf you plan to open a pull request, please follow the guideline below.\n\n### Branch\n\nYou need to fork syslog-ng in github, and create a working branch from master in your fork.\n\nAfter writing the code, just before opening the pull request,\nmake sure your working branch is rebased against master.\n\n### PR description\nIn the description, please explain (if applicable):\n- The problem your pull request intends to solve.\n- A general overview about the implementation, or any information that can help\nreviewers to understand your code.\n- Please explain how one can try out your code: configuration snippets,\nor deployment information.\n- You can mention if you were considering alternative solutions or explain\nproblems you ran into.\n- If you submit a pull request that fixes an existing issue, please mention\nthe issue somewhere in the pull request, so we can close the\noriginal issue as well.\n\n\nThe documentation is created from the description. Please provide\na description that can be a good input for the admin guide as well.\n\n### Commits\n#### Commit messages\n\n```\nThe commit messages be formatted according to this:\n\nmodule: short description\n\nLong description, that may be\nformatted in markdown.\n\nSigned-off-by: your name <youremail@address.com>\n```\n\nThis format is checked by the CI.\n\nIf you do not want to share your email address due to privacy reasons,\nyou can use `some-id+yourgithubusername@users.noreply.github.com`,\nwhich is automatically generated and tracked by github. You can check the exact\naddress in your github settings->email->primary email address, if you enabled email privacy.\n\n`module` refers to the part of syslog-ng that the patch intends to change. For example\npython, redis, persist, scratch-buffers, etc.\n\n#### Patches\n\nWe are using a coding style very similar to\n[GNU Coding Standards](https://www.gnu.org/prep/standards/standards.html#Writing-C)\nfor syslog-ng.\n\nYou can use `make style-check` or `make style-format` to check or format automatically your code.\nThese commands are executed by our CI as well.\n\nIf possible, please organize your code into a set of small and self contained patches,\nwith clear descriptions each, that can help to understand the patch. This greatly helps the review process.\n\nPlease follow clean code guidelines whenever possible. Functions should be small and responsible for one thing.\nTry to avoid code duplication. Add descriptive names for functions and variables. Etc...\n\n#### News file\n\nWe are automatically generating the news file before each release. So that to work,\nplease add a news entry for your change under the news directory.\n\nThe file name should be news/type-PR_ID.md (for example: news/bugfix-1234.md).\nFor now the following types are supported:\nfeature, bugfix, packaging, developer-note, other.\n\nIf you think there is no need for a news file (for example it is a small\nfix for an earlier pull request of the same release),\nyou can leave a note about it in the pull request description.\n\nThe generated news file will contain a link to the pull request, where the interested\nusers can find detailed information in the description.\nThis means your news entry does not need to be too descriptive.\n\nThe news file format should look like this:\n\n```\n`module`: short description\n\nlong description\n```\n\nSee news/README.md for more information.\n\n### Testing\n\nIf possible please add tests for your change. You can add unit tests in c (tests directory in most of syslog-ng modules),\nor there is an initiative so that contributors write tests in python (for now the feature set is limited).\nYou can check `tests/light/functional_tests/source_drivers/generator_source/` as an example.\n\n### CI\n\nAfter opening the pull requests, one of the maintainers will enable\nthe tests to run for your pull requests. So that the pull request\ncould be merged, all tests must pass, and the PR needs two approvals from the maintainers.\n\nYou do not need to find reviewers. The maintainers continuously monitor the project,\nand will assign themselves. We try to add feedback as soon as possible.\n\nIf you get stuck with a regression test, feel free to ask for help. Sometimes it is difficult to understand the test logs.\n\n\n## Licensing\n\nPlease ensure that your contribution is clean in respect to licensing and\ncopyright.\n\nIf your contribution is eligible for copyright, you should also extend the list\nof copyright holders at the top of the relevant files which carry your\nmodifications.\n\nThe absolute minimum to specify is the identity of the author entity, which is\nusually one or more of an e-mail address and your full name or the name of the\nlegal entity who holds the intellectual rights if it is not you.\nPlease make it clear which is the case, because this may depend on your\ncontract if you are employed or are a subcontractor.\n\nNote that from time to time, we may rephrase the exact text surrounding\nattributions, however the specified identities and the license binding a given\ncontribution will not be changed in a legally incompatibly manner.\n\nEvery new file must carry a standard copyright notice and be compatible with\nour licensing scheme described in COPYING.\nYou should observe some of the existing files for reference.\n\n## Additional resources\n\nFor additional information, have a look at the\n[syslog-ng.org](http://www.syslog-ng.org/) website, which is a\nrecommended starting point for finding out more about syslog-ng.\n\nTo contact us, visit the [mailing list][ar:mailing-list] where you can\nask questions, and discuss your feature requests with a wider\naudience.\n\nWe also have a [Gitter channel][ar:gitter], where developers hang out.\n\nWe use [GitHub issues][ar:issue-tracker] to track issues, feature requests\nand patches. We are also using [GitHub Actions][ar:github-actions] for automatic\ntesting.\n\n [ar:gitter]: https://gitter.im/syslog-ng/syslog-ng\n [ar:mailing-list]: http://lists.balabit.com/mailman/listinfo/syslog-ng\n [ar:issue-tracker]: https://github.com/syslog-ng/syslog-ng/issues\n [ar:issues:good-first-issue]: https://github.com/syslog-ng/syslog-ng/labels/good%20first%20issue\n [ar:github-actions]: https://github.com/syslog-ng/syslog-ng/actions\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 4.84375,
          "content": "Copyright (c) 2002-2015 Balabit\nCopyright (c) 1996-2015 Balázs Scheidler\n\nsyslog-ng is licensed under the combination of the GPL and LGPL licenses.\n\nOur intention with the choice of our licenses is to:\n 1) license reusable/extendable code under the LGPL,\n 2) license code implementing a specific function, not intended to be extended, under the GPL\n\nAlthough the location of a file wthin the source tree is closely related to\nhow it is licensed (lib/ is LGPL by default, for instance), there are\nexceptions.  One example is: some of the tests are GPLed while they are\nrelated to LGPLed library code.\n\nWith that in mind, before assuming the licensing of a specific file based\nsolely on its location, please check its licensing in its copyright header, i.e.\nthe very first comment block of the source code file.\n\nAlternatively, you can also use the contents of the `tests/copyright/policy`\nfile, this is an input to our automated test suite that checks licenses\nagainst our intents.\n\nThe syslog-ng core contained in the following subdirectories\nis free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version\n(please refer to the file LGPL.txt for more details):\n\nlib/\nlibtest/\nsyslog-ng/\nsyslog-ng-ctl/\npersist-tool/\ntests/loggen/\ndocker/\n\nThe syslog-ng modules (modules/ and scl/ subdirectories, except the ones that\ndeclare LGPL-2.1-or-later in their license notices) is free software; you can\nredistribute it and/or modify it under the terms of the GNU General Public\nLicense version 2 as published by the Free Software Foundation,\nor (at your option) any later version\n(please refer to the file GPL.txt for more details).\n\nFAQ:\n====\n\nThe questions and answers below try to summarize the intentions behind this\nlicensing scheme.\n\nQ: Is it possible to create derived works of syslog-ng under the GPL/LGPL\nlicenses?\n\nA: Yes, that's exactly the point of open source. Works derived from the\nplugins will have to use the GPL license, but you can choose to use LGPL for\nthem as well.\n\nQ: Do I need to sign a Contributory License Agreement in order for my\ncontribution to be accepted?\n\nA: No, starting with syslog-ng 3.2, you don't need to sign a CLA in order to\nhave your contributions accepted.\n\nQ: Is it possible to create non-free plugins for syslog-ng?\n\nA: Yes. It is our understanding that plugins are derived works of the\nsyslog-ng core but not derived works of other plugins.  Thus, non-free\nplugins are possible, provided they do not link to any of the GPLd plugins\nexplicitly and the only connection between two plugins is via the syslog-ng\ncore.\n\nQ: Who is permitted to create non-free plugins for syslog-ng? Is it just\nBalaBit (the current copyright holder as of the initial 3.2 release)?\n\nA: No, everyone including BalaBit.\n\nPORTIONS WERE CONTRIBUTED UNDER THE FOLLOWING LICENSES:\n======================================================\n\nlib/compat:\n/*-\n * Copyright (c) 1990, 1993\n *      The Regents of the University of California.  All rights reserved.\n *\n * This code is derived from software contributed to Berkeley by\n * Chris Torek.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. All advertising materials mentioning features or use of this software\n *    must display the following acknowledgement:\n *      This product includes software developed by the University of\n *      California, Berkeley and its contributors.\n * 4. Neither the name of the University nor the names of its contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n"
        },
        {
          "name": "GPL.txt",
          "type": "blob",
          "size": 14.7744140625,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n"
        },
        {
          "name": "LGPL.txt",
          "type": "blob",
          "size": 25.908203125,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 7.974609375,
          "content": "#############################################################################\n# Copyright (c) 2016 Balabit\n#\n# This library is free software; you can redistribute it and/or\n# modify it under the terms of the GNU Lesser General Public\n# License as published by the Free Software Foundation; either\n# version 2.1 of the License, or (at your option) any later version.\n#\n# This library is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# Lesser General Public License for more details.\n#\n# You should have received a copy of the GNU Lesser General Public\n# License along with this library; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n#\n# As an additional exemption you are allowed to compile & link against the\n# OpenSSL libraries as published by the OpenSSL project. See the file\n# COPYING for details.\n#\n#############################################################################\n\nSUBDIRS\t\t\t=\nDIST_SUBDIRS\t\t=\nAM_MAKEFLAGS\t\t= --no-print-directory\nAM_YFLAGS\t\t= -Wno-yacc -Wno-other -Werror=conflicts-sr -Werror=conflicts-rr -Wcounterexamples\n\nAM_TESTS_ENVIRONMENT\t= top_srcdir=\"$(top_srcdir)\" CRITERION_TEST_PATTERN='!(*/*performance*)' ASAN_OPTIONS=\"detect_odr_violation=0\"\nif ENABLE_SANITIZER\nLOG_COMPILER            = $(top_srcdir)/scripts/test-grep.sh\nendif\n\nACLOCAL_AMFLAGS\t\t= -I m4 --install\n\nEXTRA_DIST\t\t= $(filter-out ${NODIST_BUILT_SOURCES},${BUILT_SOURCES}) VERSION.txt NEWS.md autogen.sh \\\n\t\t\t  dist.conf dist.conf.in syslog-ng.pc.in \\\n\t\t\t  syslog-ng-config.h.in\t\\\n\t\t\t  CONTRIBUTING.md\t\\\n\t\t\t  sub-configure.sh\t\\\n\t\t\t  syslog-ng.pc.cmake\t\\\n\t\t\t  syslog-ng-native-connector.pc.cmake\t\\\n\t\t\t  syslog-ng-ctl/CMakeLists.txt\t\\\n\t\t\t  requirements.txt\t\\\n\t\t\t  dev-requirements.txt  \\\n\t\t\t  optional-dev-requirements.txt  \\\n\t\t\t  README.md\t\\\n\t\t\t  .astylerc\n\n\npkgconfigdir\t\t= $(libdir)/pkgconfig\npkgconfig_DATA\t\t= syslog-ng.pc\n\nAM_CPPFLAGS\t\t= -I$(top_srcdir)/lib -I$(top_srcdir)/modules -I$(top_builddir)/lib -I$(top_builddir)/modules\n\nAM_OBJCFLAGS\t= -fobjc-arc\n\n# configure script gives us -g and/or -O2, but all warning related settings\n# should be here\n\n# Important warnings\nAM_CFLAGS = \\\n\t-Wshadow\n\nAM_CXXFLAGS = \\\n\t-Wshadow\n\n# Acceptable warnings\nAM_CFLAGS += \\\n\t-Wno-stack-protector \\\n\t-Wno-unused-parameter \\\n\t-Wno-variadic-macros\n\nAM_CXXFLAGS += \\\n\t-Wno-stack-protector \\\n\t-Wno-unused-parameter \\\n\t-Wno-variadic-macros\n\nif ENABLE_EXTRA_WARNINGS\nAM_CFLAGS += \\\n\t-Wimplicit-function-declaration \\\n\t$(CFLAGS_W_NO_INITIALIZER_OVERRIDES) \\\n\t$(CFLAGS_W_OLD_STYLE_DECLARATION) \\\n\t-Wnested-externs \\\n\t-Wstrict-prototypes \\\n\t-Wswitch-default \\\n\t-Wimplicit-int \\\n\t-Wall \\\n\t-Wuninitialized \\\n\t-Wunused-but-set-parameter \\\n\t-Wdeprecated \\\n\t-Wdeprecated-declarations \\\n\t-Woverflow \\\n\t-Wdouble-promotion \\\n\t-Wfloat-equal \\\n\t-Wpointer-arith \\\n\t-Wpointer-sign \\\n\t-Wmissing-format-attribute \\\n\t-Wold-style-definition \\\n\t-Wundef \\\n\t-Wignored-qualifiers \\\n\t-Woverride-init \\\n\t-Wfloat-conversion \\\n\t-Wbad-function-cast\n\nAM_CXXFLAGS += \\\n\t-Wswitch-default \\\n\t-Wall \\\n\t-Wuninitialized \\\n\t-Wdeprecated \\\n\t-Wdeprecated-declarations \\\n\t-Woverflow \\\n\t-Wdouble-promotion \\\n\t-Wfloat-equal \\\n\t-Wpointer-arith \\\n\t-Wmissing-format-attribute \\\n\t-Wundef \\\n\t-Wignored-qualifiers \\\n\t-Wfloat-conversion \\\n\t-Wunused-but-set-parameter\nendif\n\nif ENABLE_DEBUG\nAM_CFLAGS += -DYYDEBUG=1\nendif\n\nTEST_CFLAGS\t\t= -DTOP_SRCDIR=\\\"$(abs_top_srcdir)\\\" $(AM_CFLAGS) $(CRITERION_CFLAGS)\n\nTEST_CXXFLAGS\t\t= -DTOP_SRCDIR=\\\"$(abs_top_srcdir)\\\" $(AM_CXXFLAGS) $(CRITERION_CFLAGS)\n\nTEST_LDADD\t\t= $(LIBTEST_LIBS) $(CRITERION_LIBS) \\\n\t\t\t  $(top_builddir)/lib/libsyslog-ng.la \\\n\t\t\t  $(TOOL_DEPS_LIBS)\n\ntest_ldflags\t\t= $(TEST_NO_INSTALL_FLAG) $(NO_PIE_LDFLAG)\n\nPREOPEN_SYSLOGFORMAT\t= -dlpreopen ${top_builddir}/modules/syslogformat/libsyslogformat.la\nPREOPEN_BASICFUNCS\t= -dlpreopen ${top_builddir}/modules/basicfuncs/libbasicfuncs.la\nPREOPEN_CORE\t\t= $(PREOPEN_SYSLOGFORMAT) $(PREOPEN_BASICFUNCS)\n\nsyslog_ng_tools\t\t= ${top_srcdir}/lib\n\nexport top_srcdir\nexport MAKE\n\nCLEAN_SUBDIRS\t\t=\n\nclean-local: ${CLEAN_HOOKS}\n\t${AM_v_at}for dir in ${CLEAN_SUBDIRS}; do \\\n\t\t[ -f $${dir}/Makefile ] && ${MAKE} -C $${dir} clean || true; \\\n\tdone\n\ndistclean-local: distclean-ax-prefix-config-h\ndistclean-ax-prefix-config-h:\n\trm -f _configs.sed syslog-ng-config.h\n\nif ENABLE_TESTING\nlocal-check: subdir_tests=$(foreach ts,${${check_subdir}_test_subdirs},${${ts}_tests_TESTS})\nlocal-check: current_tests=$(foreach subdir,${check_subdir} ${check_subdir}_tests,${${subdir}_TESTS})\nlocal-check:\n\t${AM_v_at}${MAKE} check check_PROGRAMS=\"${current_tests} ${subdir_tests}\" \\\n\t\t\t\tTESTS=\"${current_tests} ${subdir_tests}\"\nendif\n\ncheck: check_target_guard\n\ncheck_target_guard:\nif !ENABLE_TESTING\n\t$(error \"Unit tests disabled\")\nendif\n\n${check_PROGRAMS}: LDFLAGS+=${test_ldflags}\n\nnoinst_PROGRAMS         =\nnoinst_LIBRARIES\t=\nnoinst_DATA\t\t=\nnoinst_LTLIBRARIES\t=\nlib_LTLIBRARIES\t\t=\npkginclude_HEADERS\t= syslog-ng-config.h\nmodule_LTLIBRARIES\t=\nloggenplugin_LTLIBRARIES\t=\nBUILT_SOURCES\t\t=\nNODIST_BUILT_SOURCES\t\t=\nCLEANFILES \t\t= $(BUILT_SOURCES)\ncheck_PROGRAMS\t\t=\ncheck_SCRIPTS\t\t=\nTESTS\t\t\t= $(check_PROGRAMS) $(check_SCRIPTS)\nbin_SCRIPTS\t\t=\ndist_sbin_SCRIPTS\t=\nbin_PROGRAMS\t\t=\nsbin_PROGRAMS\t\t=\nlibexec_PROGRAMS\t=\nman_MANS\t\t=\n\nINSTALL_EXEC_HOOKS\t=\nUNINSTALL_HOOKS\t\t=\nCLEAN_HOOKS =\n\nAUTOMAKE_OPTIONS\t= subdir-objects parallel-tests\n\n${top_srcdir}/ChangeLog:\n\t(cd $(top_srcdir); git log) > $@\n\ninstall-exec-hook: ${INSTALL_EXEC_HOOKS}\nuninstall-hook: ${UNINSTALL_HOOKS}\n\npopulate-makefiles:\n\t$(top_srcdir)/Mk/populate-makefiles.sh\n\nstyle-check:\n\t$(top_srcdir)/scripts/style-checker.sh check $(top_srcdir)\n\nstyle-format:\n\t$(top_srcdir)/scripts/style-checker.sh format $(top_srcdir)\n\nhelp:\n\t@echo \"Welcome to the syslog-ng build system!\"\n\t@echo\n\t@echo \"All of the standard targets are available:\"\n\t@echo \"  all, check, install, dist, distcheck, and clean\"\n\t@echo\n\t@echo \"Apart from these, the build system supports various other,\"\n\t@echo \"special targets:\"\n\t@echo\n\t@echo \" modules              Builds all syslog-ng modules.\"\n\t@echo \" syslog-ng            Build syslog-ng itself, only.\"\n\t@echo \" populate-makefiles   populate build directory with stub Makefiles\"\n\t@echo \" check-commits        check commits format\"\n\t@echo \" check-copyright      check copyright/license statements in files\"\n\t@echo \" style-check          check formatting of source files (astyle)\"\n\t@echo \" style-format         reformat source files (astyle)\"\n\t@echo\n\t@echo \"One can also build individual modules (and their dependencies),\"\n\t@echo \"using any of the following shortcuts:\"\n\t@echo\n\t@echo \"\" ${SYSLOG_NG_MODULES} | sed -e 's#\\(.\\{,72\\}\\) #\\1\\n #g'\n\n.PHONY: help populate-makefiles\n\ninstall_moduleLTLIBRARIES\t= install-moduleLTLIBRARIES\n$(install_moduleLTLIBRARIES): install-libLTLIBRARIES\n\ninstall_loggenpluginLTLIBRARIES\t= install-loggenpluginLTLIBRARIES\n$(install_loggenpluginLTLIBRARIES): install-libLTLIBRARIES\n\ninclude Mk/lex-rules.am\ninclude Mk/python-venv.am\ninclude Mk/Makefile.am\nif ENABLE_TESTING\ninclude libtest/Makefile.am\nendif\ninclude lib/Makefile.am\ninclude modules/Makefile.am\ninclude syslog-ng/Makefile.am\ninclude syslog-ng-ctl/Makefile.am\ninclude scripts/Makefile.am\ninclude tests/Makefile.am\ninclude doc/Makefile.am\ninclude contrib/Makefile.am\ninclude scl/Makefile.am\ninclude packaging/Makefile.am\ninclude dbld/Makefile.am\ninclude cmake/Makefile.am\ninclude dev-utils/plugin_skeleton_creator/Makefile.am\ninclude persist-tool/Makefile.am\n\nTEST_EXTENSIONS = .sh\n@VALGRIND_CHECK_RULES@\n\nVALGRIND_SUPPRESSIONS_FILES = $(top_srcdir)/tests/valgrind/unit-test-leak.supp\nEXTRA_DIST += syslog-ng.supp\t\\\n\t.github/ISSUE_TEMPLATE/10-bug-report.md\t\\\n\t.github/ISSUE_TEMPLATE/20-documentation-issue.md\t\\\n\t.github/ISSUE_TEMPLATE/30-feature-request.md\t\\\n\tGPL.txt\t\\\n\tLGPL.txt\t\\\n\tCMakeLists.txt\n\nVALGRIND_FLAGS = \\\n  --num-callers=30 \\\n  --sim-hints=no-nptl-pthread-stackcache \\\n  --gen-suppressions=all\n\nVALGRIND_memcheck_FLAGS = \\\n  --leak-check=full \\\n  --trace-children=yes \\\n  --freelist-vol=200''000''000 \\\n  --freelist-big-blocks=10''000''000 \\\n  --malloc-fill=55 \\\n  --free-fill=AA\n"
        },
        {
          "name": "Mk",
          "type": "tree",
          "content": null
        },
        {
          "name": "NEWS.md",
          "type": "blob",
          "size": 7.7734375,
          "content": "4.8.1\n=====\n\n## Highlights\n\n * `elasticsearch-datastream()` destinations can be used to feed Elasticsearch [data streams](https://www.elastic.co/guide/en/elasticsearch/reference/current/data-streams.html).\n\n    Example config:\n\n    ```\n    elasticsearch-datastream(\n      url(\"https://elastic-endpoint:9200/my-data-stream/_bulk\")\n      user(\"elastic\")\n      password(\"ba3DI8u5qX61We7EP748V8RZ\")\n    );\n    ```\n    ([#5069](https://github.com/syslog-ng/syslog-ng/pull/5069))\n   \n * `building`: thanks to Sergey Fedorov (@barracuda156) and Marius Schamschula (@Schamschula), macOS builds now support gcc again. They also updated the [MacPort version](https://github.com/macports/macports-ports/blob/30c55ba04d8c0693c18cdf84014187cd3c53e60f/sysutils/syslog-ng-devel/Portfile) of syslog-ng (develop). Great work, and thank you so much for your contribution!\n    ([#5108](https://github.com/syslog-ng/syslog-ng/pull/5108))\n   \n## Features\n\n  * `tls()`: expose the key fingerprint of the peer in `${.tls.x509_fp}` if\n    `trusted-keys()` is used to retain the actual peer identity in the received\n    messages.\n    ([#5068](https://github.com/syslog-ng/syslog-ng/pull/5068))\n\n  * `syslog-parser`: Added the `no-piggyback-errors` and the `piggyback-errors` flags to control whether the message retains the original message or not on parse error(s). By default the old behaviour/`piggyback-errors` flag is active.\n\n    - `no-piggyback-errors`: On failure, the original message will be left as it was before parsing, the value of `$MSGFORMAT` will be set to `syslog-error`, and a tag will be placed on the message corresponding to the parser's failure.\n    - `piggyback-errors`: On failure, the old behaviour is used (clearing the entire message then syslog-ng will generate a new message in place of the old one describing the parser's error).\n\n    The following new tags can be added by the `syslog-parser` to the message when the parsing failed:\n      - `syslog.rfc5424_missing_hostname`\n      - `syslog.rfc5424_missing_app_name`\n      - `syslog.rfc5424_missing_procid`\n      - `syslog.rfc5424_missing_msgid`\n      - `syslog.rfc5424_missing_sdata`\n      - `syslog.rfc5424_invalid_sdata`\n      - `syslog.rfc5424_missing_message`\n    ([#5063](https://github.com/syslog-ng/syslog-ng/pull/5063))\n\n\n## Bugfixes\n\n  * `syslog-ng-ctl`: fix escaping of `stats prometheus`\n\n    Metric labels (for example, the ones produced by `metrics-probe()`) may contain control characters, invalid UTF-8 or `\\`\n    characters. In those specific rare cases, the escaping of the `stats prometheus` output was incorrect.\n    ([#5046](https://github.com/syslog-ng/syslog-ng/pull/5046))\n\n  * `wildcard-file()`: fix crashes can occure if the same wildcard file is used in multiple sources\n\n    Because of some persistent name construction and validation bugs the following config crashed `syslog-ng`\n    (if there were more than one log file is in the `/path` folder)\n\n    ``` config\n    @version: current\n\n    @include \"scl.conf\"\n\n    source s_files1 {\n        file(\"/path/*.log\"\n            persist-name(\"p1\")\n        );\n    };\n\n    source s_files2 {\n        file(\"/path/*.log\"\n            persist-name(\"p2\")\n        );\n    };\n\n    destination s_stdout {\n        stdout();\n    };\n\n    log {\n        source(s_files1);\n        destination(s_stdout);\n    };\n\n    log {\n        source(s_files2);\n        destination(s_stdout);\n    };\n    ```\n\n    NOTE:\n\n    - The issue occurred regardless of the presence of the `persist-name()` option.\n    - It affected not only the simplified example of the legacy wildcard `file()` but also the new `wildcard-file()` source.\n    ([#5091](https://github.com/syslog-ng/syslog-ng/pull/5091))\n\n  * `syslog-ng-ctl`: fix crash of syslog-ng service in g_hash_table lookup function after `syslog-ng-ctl reload`\n    ([#5087](https://github.com/syslog-ng/syslog-ng/pull/5087))\n\n  * `file()`, `stdout()`: fix log sources getting stuck\n\n    Due to an acknowledgment bug in the `file()` and `stdout()` destinations,\n    sources routed to those destinations may have gotten stuck as they were\n    flow-controlled incorrectly.\n\n    This issue occured only in extremely rare cases with regular files, but it\n    occured frequently with `/dev/stderr` and other slow pseudo-devices.\n    ([#5134](https://github.com/syslog-ng/syslog-ng/pull/5134))\n\n  * `directory-monitor`: fixed a main thread assertion crash that might have occurred during syslog-ng stop or restart\n    ([#5086](https://github.com/syslog-ng/syslog-ng/pull/5086))\n\n  * `Config  @version`: fixed compat-mode inconsistencies when `@version` was not specified at the top of the configuration\n    file or was not specified at all\n    ([#5145](https://github.com/syslog-ng/syslog-ng/pull/5145))\n\n  * `grpc`: Fix potential memoryleak when the grpc module is loaded but not used.\n    ([#5062](https://github.com/syslog-ng/syslog-ng/pull/5062))\n\n  * `s3()`: Eliminated indefinite memory usage increase for each reload.\n\n    The increased memory usage is caused by the `botocore` library, which\n    caches the session information. We only need the Session object, if\n    `role()` is set. The increased memory usage still happens with that set,\n    currently we only fixed the unset case.\n    ([#5149](https://github.com/syslog-ng/syslog-ng/pull/5149))\n\n  * `opentelemetry()` sources: fix crash when `workers()` is set to `> 1`\n    ([#5138](https://github.com/syslog-ng/syslog-ng/pull/5138))\n\n  * \n    `opentelemetry()` sources: fix source hang-up on flow-controlled paths\n    ([#5148](https://github.com/syslog-ng/syslog-ng/pull/5148))\n\n  * `metrics-probe()`: fix disappearing metrics from `stats prometheus` output\n\n    `metrics-probe()` metrics became orphaned and disappeared from the `syslog-ng-ctl stats prometheus` output\n    whenever an ivykis worker stopped (after 10 seconds of inactivity).\n    ([#5075](https://github.com/syslog-ng/syslog-ng/pull/5075))\n\n  * `affile`: Fix an invalid `lseek` call mainly on the `pipe()` source, but also possible if using affile on pipe like files (pipe, socket and FIFO).\n    ([#5058](https://github.com/syslog-ng/syslog-ng/pull/5058))\n\n\n## Other changes\n\n  * `format-json`: spaces around `=` in `$(format-json)` template function could cause a\n    [crash](https://github.com/syslog-ng/syslog-ng/issues/5065).\n    The fix of the issue also introduced an enhancement, from now on spaces are allowed\n    around the `=` operator, so the following `$(format-json)` template function calls\n    are all valid:\n    ```\n    $(format-json foo =alma)\n    $(format-json foo= alma)\n    $(format-json foo = alma)\n    $(format-json foo=\\\" alma \\\")\n    $(format-json foo= \\\" alma \\\")\n    $(format-json foo1= alma foo2 =korte foo3 = szilva foo4 = \\\" meggy \\\" foo5=\\\"\\\")\n    ```\n    Please note the usage of the escaped strings like `\\\" meggy \\\"`, and the (escaped and) quoted form\n    that used for an empty value `\\\"\\\"`, the latter is a breaking change as earlier an expression like\n    `key= ` led to a json key-value pair with an empty value `{\"key\":\"\"}` that will not work anymore.\n    ([#5080](https://github.com/syslog-ng/syslog-ng/pull/5080))\n\n  * `building`: fixed multiple potentional FreeBSD build errors\n    ([#5099](https://github.com/syslog-ng/syslog-ng/pull/5099))\n\n  * `docker`: Changed the container image's base to debian:bookworm.\n    ([#5056](https://github.com/syslog-ng/syslog-ng/pull/5056))\n\n\n## Credits\n\nsyslog-ng is developed as a community project, and as such it relies\non volunteers, to do the work necessarily to produce syslog-ng.\n\nReporting bugs, testing changes, writing code or simply providing\nfeedback are all important contributions, so please if you are a user\nof syslog-ng, contribute.\n\nWe would like to thank the following people for their contribution:\n\nAndras Mitzki, Attila Szakacs, Balazs Scheidler, Hofi,\nKovács Gergő Ferenc, László Várady, Mate Ory,\nPeter Czanik (CzP), Sergey Fedorov, Marius Schamschula, Szilard Parrag,\nTamas Pal, shifter\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.990234375,
          "content": "[![Build Status](https://github.com/syslog-ng/syslog-ng/actions/workflows/devshell.yml/badge.svg)](https://github.com/syslog-ng/syslog-ng/actions/workflows/devshell.yml)\n[![Nightly](https://github.com/syslog-ng/syslog-ng/actions/workflows/nightly-release.yml/badge.svg)](https://github.com/syslog-ng/syslog-ng/actions/workflows/nightly-release.yml)\n[![Binary packages](https://github.com/syslog-ng/syslog-ng/actions/workflows/packages.yml/badge.svg)](https://github.com/syslog-ng/syslog-ng/actions/workflows/packages.yml)\n[![Compile dbld-images](https://github.com/syslog-ng/syslog-ng/actions/workflows/dbld-images.yml/badge.svg)](https://github.com/syslog-ng/syslog-ng/actions/workflows/dbld-images.yml)\n\nsyslog-ng\n=========\n\nsyslog-ng is an enhanced log daemon, supporting a wide range of input\nand output methods: syslog, unstructured text, message queues,\ndatabases (SQL and NoSQL alike), and more.\n\n## Quickstart\n\nThe simplest configuration accepts system logs from /dev/log (from\napplications or forwarded by systemd) and writes everything to a single\nfile:\n\n``` config\n@version: 4.8\n@include \"scl.conf\"\n\nlog {\n\tsource { system(); };\n\tdestination { file(\"/var/log/syslog\"); };\n};\n```\n\nThis one additionally processes logs from the network (TCP/514 by default):\n\n``` config\n@version: 4.8\n@include \"scl.conf\"\n\nlog {\n\tsource {\n\t\tsystem();\n\t\tnetwork();\n\t};\n\tdestination { file(\"/var/log/syslog\"); };\n};\n```\nThis config is designed for structured/application logging, using local submission via JSON, and outputting in key=value format:\n\n``` config\n@version: 4.8\n@include \"scl.conf\"\n\nlog {\n\tsource { system(); };\n\tdestination { file(\"/var/log/app.log\" template(\"$(format-welf --subkeys .cim.)\\n\")); };\n};\n```\n\nTo submit a structured log using `logger`, you might run:\n\n```shell\n$ logger '@cim: {\"name1\":\"value1\", \"name2\":\"value2\"}'\n```\n\nIn which case the resulting message will be:\n\n``` text\nname1=value1 name2=value2\n```\n\nFor a brief introduction to configuring the syslog-ng application, see the [quickstart guide](https://syslog-ng.github.io/admin-guide/040_Quick-start_guide/README).\n\n## Features\n\n* Receive and send [RFC3164](https://tools.ietf.org/html/rfc3164)\n  and [RFC5424](https://tools.ietf.org/html/rfc5424) style syslog\n  messages\n* Receive and send [JSON](http://json.org/) formatted messages\n* Work with any kind of unstructured data\n* Classify and structure logs using built-in parsers (csv-parser(),\n  db-parser(), kv-parser(), etc.)\n* Normalize, crunch, and process logs as they flow through the system\n* Hand over logs for further processing using files, message queues (like\n  [AMQP](http://www.amqp.org/)), or databases (like\n  [PostgreSQL](http://www.postgresql.org/) or\n  [MongoDB](http://www.mongodb.org/))\n* Forward logs to big data tools (like [Elasticsearch](https://www.elastic.co/),\n  [Apache Kafka](http://kafka.apache.org/), or\n  [Apache Hadoop](http://hadoop.apache.org/))\n\n### Performance\n\n* syslog-ng provides performance levels comparable to a large\n  cluster when running on a single node\n* In the simplest use case, it scales up to 600-800k messages per\n  second\n* But classification, parsing, and filtering still produce several\n  tens of thousands of messages per second\n\n### Community\n\n* syslog-ng is developed by a community of volunteers, the best way to\n  contact us is via our [github project page](http://github.com/syslog-ng/syslog-ng)\n  project, our [gitter channel](https://gitter.im/syslog-ng/syslog-ng) or\n  our [mailing list](https://lists.balabit.hu/mailman/listinfo/syslog-ng).\n* syslog-ng is integrated into almost all Linux distributions and BSDs, it\n  is also incorporated into a number of products, see our [powered by\n  syslog-ng](https://syslog-ng.com/powered-by-syslog-ng) page for more details.\n\n### Sponsors\n\n- [Balabit](http://www.balabit.com/) is the original commercial sponsor of the syslog-ng project, and was acquired by One Identity in 2018. One Identity offers a commercial edition for syslog-ng, called the syslog-ng Premium Edition.\n- Axoflow is the company of Balazs Scheidler, the original creator and main developer of syslog-ng.\n\n## Feedback\n\nWe are really interested to see who uses our software, so if you do use it and you like\nwhat you see, please tell us about it. A star on github or an email\nsaying thanks means a lot already, but telling us about your use case,\nyour experience, and things to improve would be much appreciated.\n\nJust send an email to feedback (at) syslog-ng.org.\n\n *Feedback Powers Open Source.*\n\n## Installation from source\n\nReleases and precompiled tarballs are available on [GitHub][github-repo].\n\n [github-repo]: https://github.com/syslog-ng/syslog-ng/releases\n\nTo compile from source, the easiest is to use `dbld`, a docker based,\nself-hosted compile/build/release infrastructure within the source tree. See\n`dbld/README.md` for more information.\n\nFor the brave souls who want to compile syslog-ng from scratch, the usual\ndrill applies:\n\n    $ ./configure && make && make install\n\nThe extra effort in contrast with the dbld based build is the need to fetch\nand install all build dependencies of syslog-ng (of which there are a few).\n\nIf you don't have a configure script (because of cloning from git, for example),\nrun `./autogen.sh` to generate it.\n\nSome of the functionality of syslog-ng is compiled only if the required\ndevelopment libraries are present. The configure script displays a\nsummary of enabled features at the end of its run.\nFor details, see the [syslog-ng compiling instructions](https://syslog-ng.github.io/admin-guide/030_Installing_syslog-ng/000_Compiling_syslog-ng_from_source).\n\n## Installation from binaries\n\nBinaries are available in various Linux distributions and contributors\nmaintain packages of the latest and greatest syslog-ng version for\nvarious OSes.\n\n### Debian/Ubuntu\n\nSimply invoke the following command as root:\n\n    # apt install syslog-ng\n\nThe latest versions of syslog-ng are available for a wide range of Debian\nand Ubuntu releases from our APT repository.\n\nThe packages and the APT repository are provided \"as is\" without warranty of any kind, on a best-effort level.\n\n#### Supported distributions\n\nsyslog-ng packages are released for the following distribution versions (x86-64):\n\n| Distro version | sources.list component name |\n|---|---|\n| Ubuntu 24.04 | ubuntu-noble |\n| Ubuntu 22.04 | ubuntu-jammy |\n| Ubuntu 20.04 | ubuntu-focal |\n| Debian 12 | debian-bookworm |\n| Debian 11 | debian-bullseye |\n| Debian Unstable | debian-sid |\n| Debian Testing | debian-testing |\n\n#### Adding the APT repository\n\n1. Download and install the release signing key:\n\n    ``` shell\n    wget -qO - https://ose-repo.syslog-ng.com/apt/syslog-ng-ose-pub.asc | sudo apt-key add -\n    ```\n\n2. Add the repository containing the latest build of syslog-ng to the APT sources. For example, stable releases on Ubuntu 22.04:\n\n    ``` shell\n    echo \"deb https://ose-repo.syslog-ng.com/apt/ stable ubuntu-jammy\" | sudo tee -a /etc/apt/sources.list.d/syslog-ng-ose.list\n    ```\n\n3. Run `apt update`\n\n#### Nightly builds\n\nNightly packages are built and released from the git `master` branch everyday.\n\nUse `nightly` instead of `stable` in step 2 to use the nightly APT repository. E.g.:\n\n``` shell\necho \"deb https://ose-repo.syslog-ng.com/apt/ nightly ubuntu-noble\" | sudo tee -a /etc/apt/sources.list.d/syslog-ng-ose.list\n```\n\nNightly builds can be used for testing purposes (obtaining new features and bugfixes) at the risk of breakage.\n\n### Arch Linux\n\n``` shell\n# pacman -S syslog-ng\n```\n\n### Fedora\n\nsyslog-ng is available as a Fedora package that you can install using\ndnf:\n\n#### dnf install syslog-ng\n\nYou can download packages for the latest versions from [here](https://copr.fedoraproject.org/coprs/czanik/).\n\nFor instructions on how to install syslog-ng on RPM distributions, see the blog post [Installing latest syslog-ng on RHEL and other RPM distributions](https://syslog-ng.com/blog/installing-latest-syslog-ng-on-rhel-and-other-rpm-distributions/).\n\nIf you wish to install the latest RPM package that comes from a recent commit in Git for testing purposes, read the blog post, [RPM packages from syslog-ng Git HEAD](https://syslog-ng.com/blog/rpm-packages-from-syslog-ng-git-head/).\n\n### macOS\n\n``` shell\n# brew install syslog-ng\n```\n\n### Others\n\nBinaries for other platforms are listed on the\nofficial [third party page][3rd-party].\n\n [3rd-party]: https://syslog-ng.com/3rd-party-binaries\n\n## Installation from Docker image\n\nBinaries are also available as a Docker image. To find out more, check out the blog post, [Your central log server in Docker](https://syslog-ng.com/blog/central-log-server-docker/).\n\n## Documentation\n\nFor the latest, markdown based version, see the [syslog-ng documentation](https://syslog-ng.github.io) center. \\\nThe official documentation of the earlier versions (3.X) of syslog-ng Open Source Edition provided by One Identity is available\n[here](https://support.oneidentity.com/syslog-ng-open-source-edition/).\n\n## Contributing\n\nIf you would like to contribute to syslog-ng, to fix a bug or create a new module, the [syslog-ng pages](https://syslog-ng.github.io/dev-guide/README) helps you take the first steps to working with the code base.\n"
        },
        {
          "name": "VERSION.txt",
          "type": "blob",
          "size": 0.005859375,
          "content": "4.8.1\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 3.1513671875,
          "content": "#!/bin/sh\n#############################################################################\n# Copyright (c) 2007-2016 Balabit\n#\n# This library is free software; you can redistribute it and/or\n# modify it under the terms of the GNU Lesser General Public\n# License as published by the Free Software Foundation; either\n# version 2.1 of the License, or (at your option) any later version.\n#\n# This library is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# Lesser General Public License for more details.\n#\n# You should have received a copy of the GNU Lesser General Public\n# License along with this library; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n#\n# As an additional exemption you are allowed to compile & link against the\n# OpenSSL libraries as published by the OpenSSL project. See the file\n# COPYING for details.\n#\n#############################################################################\n#\n# This script is needed to setup build environment from checked out\n# source tree.\n#\nSUBMODULES=\"lib/ivykis\"\nGIT=`which git`\n# bootstrap syslog-ng itself\ncase `uname -s` in\n\t\"SunOS\") SED=\"gsed\" ;;\n\t*) SED=\"sed\" ;;\nesac\n\ninclude_automake_from_dir_if_exists()\n{\n  dir=$1\n  if [ -f \"$1/Makefile.am\" ];\n  then\n    grep \"include $dir/Makefile.am\" Makefile.am\n    if [ \"$?\" -eq \"1\" ];\n    then\n      last_include=$(grep ^include Makefile.am|grep Makefile.am|tail -n 1)\n      $SED -i s@\"$last_include\"@\"$last_include\\ninclude $dir/Makefile.am\"@g Makefile.am\n    fi\n  fi\n}\n\n\nautogen_submodules()\n{\n\torigdir=`pwd`\n\n\tsubmod_initialized=1\n\tfor submod in $SUBMODULES; do\n\t\tif [ ! -f $submod/configure.gnu ]; then\n\t\t\tsubmod_initialized=0\n\t\tfi\n\tdone\n\n\tif [ -n \"$GIT\" ] && [ -f .gitmodules ] && [ -d .git ] && [ $submod_initialized = 0 ]; then\n\t\t# only clone submodules if none of them present\n\t\tgit submodule update --init --recursive\n\tfi\n\n\tfor submod in $SUBMODULES; do\n\t\techo \"Running autogen in '$submod'...\"\n\t\tcd \"$submod\"\n\t\tif [ -x autogen.sh ]; then\n\t\t\t./autogen.sh\n\t\telif [ -f configure.in ] || [ -f configure.ac ]; then\n\t\t\tautoreconf -i\n\t\telse\n\t\t\techo \"Don't know how to bootstrap submodule '$submod'\" >&2\n\t\t\texit 1\n\t\tfi\n\n\t\tCONFIGURE_OPTS=\"--disable-shared --enable-static --with-pic\"\n\n\t\t$SED -e \"s/@__CONFIGURE_OPTS__@/${CONFIGURE_OPTS}/g\" ${origdir}/sub-configure.sh >configure.gnu\n\t\tcd \"$origdir\"\n\tdone\n}\n\nif [ -z \"$skip_submodules\" ]; then\n\tautogen_submodules\nfi\n\n# bootstrap syslog-ng itself\ncase `uname -s` in\n\t\"Darwin\") LIBTOOLIZE=\"glibtoolize\" ;;\n\t*) LIBTOOLIZE=\"libtoolize\" ;;\nesac\n\n$LIBTOOLIZE --force --copy\naclocal -I m4 --install\n$SED -i -e 's/PKG_PROG_PKG_CONFIG(\\[0\\.16\\])/PKG_PROG_PKG_CONFIG([0.14])/g' aclocal.m4\n\ninclude_automake_from_dir_if_exists debian\ninclude_automake_from_dir_if_exists tgz2build\n\nautoheader\nautomake --foreign --add-missing --copy\nautoconf\n\nif grep AX_PREFIX_CONFIG_H configure > /dev/null; then\n\tcat <<EOF\n\nYou need autoconf-archive http://savannah.gnu.org/projects/autoconf-archive/\ninstalled in order to generate the configure script, e.g:\napt-get install autoconf-archive\n\nEOF\n\texit 1\nfi\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 92.291015625,
          "content": "#############################################################################\n# Copyright (c) 2016 Balabit\n#\n# This library is free software; you can redistribute it and/or\n# modify it under the terms of the GNU Lesser General Public\n# License as published by the Free Software Foundation; either\n# version 2.1 of the License, or (at your option) any later version.\n#\n# This library is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# Lesser General Public License for more details.\n#\n# You should have received a copy of the GNU Lesser General Public\n# License along with this library; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n#\n# As an additional exemption you are allowed to compile & link against the\n# OpenSSL libraries as published by the OpenSSL project. See the file\n# COPYING for details.\n#\n#############################################################################\n\ndnl Process this file with autoconf to produce a configure script.\ndnl\ndnl There are a couple of environment defined variables which this script\ndnl makes use of in addition to the standard CFLAGS/LDFLAGS/etc. These are:\ndnl\ndnl RELEASE_TAG        - Debian release tag which is put to debian/changelog\ndnl SNAPSHOT_VERSION   - snapshot version to add to version number\ndnl BINARY_BRANCH      - the value is added to all source/binary packages\ndnl SOURCE_REVISION    - Revision of the source-tree, will added to the version string\ndnl\n\nAC_INIT([syslog-ng], m4_esyscmd_s([scripts/version.sh]))\nAC_CONFIG_SRCDIR([syslog-ng/main.c])\nAC_CONFIG_MACRO_DIR([m4])\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\ndnl ***************************************************************************\ndnl dependencies\n\nGLIB_MIN_VERSION=\"2.32\"\nOPENSSL_MIN_VERSION=\"0.9.8\"\nLIBDBI_MIN_VERSION=\"0.9.0\"\nLIBRABBITMQ_MIN_VERSION=\"0.5.3\"\nLIBRDKAFKA_MIN_VERSION=\"1.1.0\"\nIVYKIS_MIN_VERSION=\"0.36.1\"\nIVYKIS_UPDATED_VERSION=\"0.39\"\nJSON_C_MIN_VERSION=\"0.13\"\nPCRE2_MIN_VERSION=\"10.0\"\nLMC_MIN_VERSION=\"1.0.0\"\nLRMQ_MIN_VERSION=\"0.0.1\"\nLRC_MIN_VERSION=\"1.6.0\"\nLIBBPF_MIN_VERSION=\"1.0.1\"\nJOURNALD_MIN_VERSION=\"195\"\nLIBSYSTEMD_MIN_VERSION=\"209\"\nLIBSYSTEMD_WITH_JOURNAL_NAMESPACES_MIN_VERSION=\"245\"\nJAVA_MIN_VERSION=\"1.8\"\nGRADLE_MIN_VERSION=\"3.4\"\nHIREDIS_MIN_VERSION=\"0.11.0\"\nCRITERION_MIN_VERSION=\"2.2.1\"\nPROTOBUF_MIN_VERSION=\"3.12.0\"\nGRPCPP_MIN_VERSION=\"1.16.1\"\n\ndnl ***************************************************************************\ndnl Initial setup\n\nostype=`uname -s`\n\nif test -r $srcdir/dist.conf; then\n        # read defaults, dist.conf does not change\n        # values for parameters that are already set\n        . $srcdir/dist.conf\nfi\n\nif test -z \"$RELEASE_TAG\"; then\n        RELEASE_TAG=unstable\nfi\n\n\nif test \"`uname -s`\" = \"Linux\";then\n        CURRDATE=`date -R`\nelse\n        CURRDATE=`date +\"%a, %d %b %Y %H:%M:%S %Z\"`\nfi\n\nAM_INIT_AUTOMAKE([foreign no-define subdir-objects])\n_AM_PROG_TAR([ustar])\nif test -n \"$SNAPSHOT_VERSION\"; then\n\tPACKAGE_VERSION=$PACKAGE_VERSION+$SNAPSHOT_VERSION\nfi\n\ndnl ***************************************************************************\ndnl script snippet to generate user friendly version strings according to the\ndnl new versioning policy. All needed code are here to allow easy moving\ndnl between projects.\nif test -z \"$RELEASE_TYPE\"; then\n    RELEASE_TYPE=stable\nfi\n\nif test -z \"$BROCHURE_VERSION\"; then\n    _MAJOR=`echo $VERSION | cut -f1 -d'.'`\n    _MINOR=`echo $VERSION | cut -f2 -d'.'`\n    case \"$RELEASE_TYPE\" in\n        stable) BROCHURE_VERSION=\"$_MAJOR\";;\n        feature) BROCHURE_VERSION=\"$_MAJOR F$_MINOR\";;\n        *) BROCHURE_VERSION=\"$VERSION dogfood edition. Please contact your syslog-ng release manager to fix the configure scritpt\";;\n    esac\nfi\n\nif test -z \"$COMBINED_VERSION\"; then\n    COMBINED_VERSION=\"$BROCHURE_VERSION ($VERSION)\"\nfi\n\nTECHNICAL_VERSION=$VERSION\n\nAC_DEFINE_UNQUOTED(RELEASE_TYPE, \"$RELEASE_TYPE\", [type of syslog-ng release. stable or feature])\nAC_DEFINE_UNQUOTED(BROCHURE_VERSION, \"$BROCHURE_VERSION\", [pretty version for users depends on the release type])\nAC_DEFINE_UNQUOTED(COMBINED_VERSION, \"$COMBINED_VERSION\", [normal and brochure version combined])\nAC_DEFINE_UNQUOTED(SOURCE_REVISION, \"$SOURCE_REVISION\", [source revision])\nAC_SUBST(RELEASE_TYPE)\nAC_SUBST(BROCHURE_VERSION)\nAC_SUBST(COMBINED_VERSION)\nAC_SUBST(TECHNICAL_VERSION)\ndnl ***************************************************************************\n\n\nif test \"x$prefix\" = \"xNONE\"; then\n        prefix=$ac_default_prefix\nfi\nif test \"x$exec_prefix\" = \"xNONE\"; then\n        exec_prefix='${prefix}'\nfi\npidfiledir='${localstatedir}'\nmoduledir='${exec_prefix}/lib/syslog-ng'\nloggenplugindir='${moduledir}/loggen'\npython_venvdir='${localstatedir}/python-venv'\ntoolsdir='${datadir}/syslog-ng/tools'\nxsddir='${datadir}/syslog-ng/xsd'\n\nconfig_includedir='${datadir}/syslog-ng/include'\nscldir=\"${config_includedir}/scl\"\nabs_topsrcdir=`(cd $srcdir && pwd)`\n\nAC_CONFIG_HEADERS(config.h)\n\ndnl ***************************************************************************\ndnl Arguments\n\nAC_ARG_WITH(libnet,\n   [  --with-libnet=path      use path to libnet-config script],\n   ,\n   [with_libnet=\"\"])\n\nAC_ARG_WITH(net-snmp,\n   [  --with-net-snmp=path      use path to net-snmp-config script],\n   ,\n   [with_net_snmp=\"\"])\n\nAC_ARG_WITH(pidfile-dir,\n   [  --with-pidfile-dir=path   Use path as the directory for storing pidfiles],\n   pidfiledir=$with_pidfile_dir)\n\nAC_ARG_WITH(module-dir,\n   [  --with-module-dir=path   Use path as the directory to install modules into],\n   moduledir=$with_module_dir)\n\nAC_ARG_WITH(loggen-plugin-dir,\n   [  --with-loggen-plugin-dir=path   Use path as the directory to install loggen plugins into],\n   loggenplugindir=$with_loggen_plugin_dir)\n\nAC_ARG_WITH(python-venv-dir,\n   [  --with-python-venv-dir=path   Use path as the directory to install the Python venv into],\n   python_venvdir=$with_python_venv_dir)\n\nAC_ARG_WITH(module-path,\n   [  --with-module-path=path   Use path as the list of ':' separated directories looked up when searching for modules],\n   module_path=$with_module_path)\n\nAC_ARG_WITH(timezone-dir,\n   [  --with-timezone-dir=path   Use path as the directory to get the timezone files],\n   timezonedir=$with_timezone_dir)\n\nAC_ARG_WITH(ld-library-path,\n   [  --with-ld-library-path=path  Set LD_LIBRARY_PATH during runtime to the value given],\n   env_ld_library_path=$with_ld_library_path)\n\nAC_ARG_WITH([systemdsystemunitdir],\n   AS_HELP_STRING([--with-systemdsystemunitdir=DIR], [Directory for systemd service files]))\n\nAC_ARG_WITH(package_name,\n   [  --with-package-name=package name Package name is printed out when syslog-ng started with --version],\n   PACKAGE_NAME=$with_package_name)\n\nAC_ARG_ENABLE(forced_server_mode,\n              [  --enable-forced-server-mode   Enable forced server mode.],, enable_forced_server_mode=\"yes\")\n\nAC_ARG_ENABLE(debug,\n              [  --enable-debug      Enable debugging code.],, enable_debug=\"no\")\n\nAC_ARG_ENABLE(example-modules,\n              [  --enable-example-modules Enable example modules.],, enable_example_modules=\"yes\")\n\nAC_ARG_ENABLE(force_gnu99,\n              [  --enable-force-gnu99      Enforce C99 with gnu extensions.],, force_gnu99=\"no\")\n\nAC_ARG_ENABLE(extra-warnings,\n              [  --enable-extra-warnings      Enable extra compiler warnings (recommended).],, enable_extra_warnings=\"no\")\n\nAC_ARG_ENABLE(env-wrapper,\n              [  --enable-env-wrapper    Enable wrapper program to set up various environment variables],, enable_env_wrapper=auto)\n\nAC_ARG_ENABLE(gprof,\n              [  --enable-gprof      Enable gcc profiling.],, enable_gprof=\"no\")\n\nAC_ARG_ENABLE(memtrace,\n              [  --enable-memtrace   Enable alternative leak debugging code.])\n\nAC_ARG_WITH(sanitizer,\n              [  --with-sanitizer=[address/undefined/etc...]\n                                         Enables compiler sanitizer supports (default: no)]\n              ,,with_sanitizer=\"no\")\n\nAC_ARG_ENABLE(dynamic-linking,\n              [  --enable-dynamic-linking        Link everything dynamically.],,enable_dynamic_linking=\"auto\")\n\nAC_ARG_ENABLE(mixed-linking,\n              [  --enable-mixed-linking          Link 3rd party libraries statically, system libraries dynamically],,enable_mixed_linking=\"auto\")\n\nAC_ARG_ENABLE(force-classic-linking,\n              [  --enable-force-classic-linking  Link using ld-classic (default: no)],, enable_force_classic_linking=\"no\")\n\nAC_ARG_ENABLE(ipv6,\n              [  --enable-ipv6           Enable support for IPv6.],,enable_ipv6=\"auto\")\n\nAC_ARG_ENABLE(tcp-wrapper,\n              [  --enable-tcp-wrapper    Enable support for TCP wrappers.],,enable_tcp_wrapper=\"auto\")\n\nAC_ARG_ENABLE(spoof-source,\n              [  --enable-spoof-source   Enable support for spoofed source addresses.]\n              ,,enable_spoof_source=\"auto\")\n\nAC_ARG_ENABLE(sun-streams,\n              [  --enable-sun-streams    Enable support for Solaris /dev/log STREAMS device.]\n              ,,enable_sun_streams=\"auto\")\n\nAC_ARG_ENABLE(darwin-osl,\n              [  --enable-darwin-osl    Enable support for Darwin OS Log source. (default: auto)]\n              ,,enable_darwin_osl=\"auto\")\n\nAC_ARG_ENABLE(openbsd-system-source,\n              [  --enable-openbsd-system-source    Enable support for OpenBSD /dev/klog device.]\n              ,,enable_openbsd_system_source=\"auto\")\n\nAC_ARG_ENABLE(sql,\n\t      [  --enable-sql            Enable support for SQL destinations. (default: auto)]\n\t      ,,enable_sql=\"auto\")\n\nAC_ARG_ENABLE(pacct,\n              [  --enable-pacct          Enable support for reading Process Accounting files (EXPERIMENTAL, Linux only).]\n              ,,enable_pacct=\"no\")\n\nAC_ARG_ENABLE(linux-caps,\n              [  --enable-linux-caps     Enable support for managing Linux capabilities (default: auto)]\n              ,,enable_linux_caps=\"auto\")\n\nAC_ARG_ENABLE(ebpf,\n              [  --enable-ebpf           Enable support for loading of eBPF programs (default: no)]\n              ,,enable_ebpf=\"no\")\n\nAC_ARG_ENABLE(gcov,\n              [  --enable-gcov           Enable coverage profiling (default: no)]\n              ,,enable_gcov=\"no\")\n\nAC_ARG_ENABLE(mongodb,\n\t      [  --enable-mongodb        Enable mongodb destination (default: auto)]\n              ,,enable_mongodb=\"auto\")\n\nAC_ARG_WITH(jsonc,\n              [  --with-jsonc=[yes/no]\n                                         Link against the system supplied jsonc library or explicitly disable it. (default: yes)]\n              ,,with_jsonc=\"yes\")\n\nAC_ARG_ENABLE(json,\n             [ --enable-json=[yes/no]            Enable JSON support (default: yes)]\n              ,[if test \"x$enableval\" != \"xno\"; then with_jsonc=\"system\"; else with_jsonc=\"no\"; fi],)\n\nAC_ARG_ENABLE(amqp,\n          [  --enable-amqp        Enable amqp destination (default: auto)]\n              ,,enable_amqp=\"auto\")\n\nAC_ARG_ENABLE(stomp,\n          [  --enable-stomp        Enable stomp destination (default: yes)]\n              ,,enable_stomp=\"yes\")\n\nAC_ARG_WITH(ivykis,\n              [  --with-ivykis=[system/internal]\n                                         Link against the system supplied or the built-in ivykis library. (default: internal)]\n              ,,with_ivykis=\"internal\")\n\nAC_ARG_ENABLE(smtp,\n              [  --disable-smtp          Disable SMTP support (default: auto)]\n              ,,enable_smtp=\"auto\")\n\nAC_ARG_WITH(libesmtp,\n             AC_HELP_STRING([--with-libesmtp=DIR],\n                            [use libesmtp library from (prefix) directory DIR]),,)\n\nAC_ARG_ENABLE(mqtt,\n              [  --disable-mqtt          Disable MQTT support (default: auto)]\n              ,,enable_mqtt=\"auto\")\n\nAC_ARG_WITH(libpaho-mqtt,\n             AC_HELP_STRING([--with-libpaho-mqtt=DIR],\n                            [use libpaho-mqtt library from (prefix) directory DIR]),,)\n\nAC_ARG_ENABLE(grpc,\n              [  --enable-grpc           Enable GRPC based modules support (OpenTelemetry, Loki, BigQuery) (default: auto)]\n              ,,enable_grpc=\"auto\")\n\nAC_ARG_WITH(protoc,\n            AC_HELP_STRING([--with-protoc=PATH],\n                           [use protoc binary at PATH]),,)\n\nAC_ARG_WITH(protoc_gen_grpc_cpp_plugin,\n            AC_HELP_STRING([--with-protoc-gen-grpc-cpp-plugin=PATH],\n                           [use protoc-gen-grpc-cpp plugin at PATH]),,)\n\nAC_ARG_ENABLE(cloud_auth,\n              [  --enable-cloud-auth     Enable cloud authentication methods (GCP) (default: auto)]\n              ,,enable_cloud_auth=\"auto\")\n\nAC_ARG_ENABLE(cpp,\n              [  --enable-cpp           Enable C++ support (default: auto)]\n              ,,enable_cpp=\"auto\")\n\nAC_ARG_ENABLE(http,\n              [  --disable-http          Disable http support (default: auto)]\n              ,,enable_http=\"auto\")\n\nAC_ARG_WITH(libcurl,\n             AC_HELP_STRING([--with-libcurl=DIR],\n                            [use libcurl library from (prefix) directory DIR]),,)\n\nAC_ARG_ENABLE(redis,\n              [  --disable-redis          Disable REDIS support (default: auto)]\n              ,,enable_redis=\"auto\")\n\nAC_ARG_WITH(libhiredis,\n             AC_HELP_STRING([--with-libhiredis=DIR],\n                            [use libhiredis library from (prefix) directory DIR]),,)\n\nAC_ARG_ENABLE(systemd,\n              [  --enable-systemd        Enable systemd support (default: auto)]\n              ,,enable_systemd=\"auto\")\n\nAC_ARG_ENABLE(geoip2,\n              [  --enable-geoip2          Enable GeoIP2 support (default: auto)]\n              ,,enable_geoip2=\"auto\")\n\nAC_ARG_ENABLE(riemann,\n              [  --disable-riemann       Disable riemann destination]\n              ,,enable_riemann=\"auto\")\n\nAC_ARG_WITH(compile-date,\n\t      [  --without-compile-date  Do not include the compile date in the binary]\n\t      ,wcmp_date=\"${withval}\", wcmp_date=\"yes\")\n\nAC_ARG_WITH(systemd-journal,\n              [  --with-systemd-journal=[system/optional/auto]\n                                         Link against the system supplied or the wrapper library. (default: auto)]\n              ,,with_systemd_journal=\"auto\")\n\nAC_ARG_ENABLE(kafka,\n              [  --enable-kafka         Enable rdkafka support]\n              ,,enable_kafka=\"auto\")\n\nAC_ARG_ENABLE(python,\n              [  --disable-python       Disable Python module]\n              ,,enable_python=\"auto\")\n\nAC_ARG_ENABLE(python-modules,\n              [  --disable-python-modules  Disable Python based syslog-ng addons while installing the core Python modules]\n              ,,enable_python_modules=\"auto\")\n\nAC_ARG_WITH(python,\n              [  --with-python=VERSION    Build with a specific version of python]\n              ,,with_python=\"auto\")\n\nAC_ARG_WITH(python-packages,\n              [  --with-python-packages=[system|venv|none]    Use Python packages from the system or a private virtualenv or skip their installation (default: venv)]\n              ,,with_python_packages=\"venv\")\n\nAC_ARG_WITH(python3-home,\n              [  --with-python3-home=path Use path as a hard-coded Python home directory that can not be overwritten by the PYTHONHOME environment variable],\n              python3_home_dir=$with_python3_home)\n\nAC_ARG_WITH(pylint,\n              [  --with-pylint=ABSOLUTE_PATH    Specify pylint location])\n\nAC_ARG_WITH(docbook,\n            [  --with-docbook=FILE    Compiling manpages using docbook in the specified path, if not set, it will be searched on the system, or online version will be used from http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl]\n            ,,with_docbook=\"auto\")\n\nAC_ARG_ENABLE(manpages, AC_HELP_STRING([ --enable-manpages], [ Enable generation of manpages (default: no)]), , [enable_manpages=\"no\"; XSL_STYLESHEET=\"\"])\nAC_ARG_ENABLE(manpages-install, AC_HELP_STRING([ --enable-manpages-install], [ Enable installation of manpages (default: auto)]), , [enable_manpages_install=\"auto\"])\n\nAC_ARG_ENABLE(java, [ --enable-java  Enable java destination (default: auto)],, enable_java=\"auto\")\n\nAC_ARG_ENABLE(java-modules, [ --enable-java-modules  Compile all Java modules (default: auto)],, enable_java_modules=\"auto\")\n\nAC_ARG_ENABLE(native,\n              [  --enable-native        Enable native bindings (default: auto)]\n              ,,enable_native=\"auto\")\n\nAC_ARG_ENABLE(afsnmp, [ --enable-afsnmp Enable afsnmp module (default: auto)],, enable_afsnmp=\"auto\")\n\nAC_ARG_ENABLE(all-modules,\n              [  --enable-all-modules    Forcibly enable all modules. (default: auto)]\n              ,,enable_all_modules=\"auto\")\n\nif test \"x$enable_all_modules\" != \"xauto\"; then\n   state=\"$enable_all_modules\"\n\n   MODULES=\"spoof_source sun_streams sql pacct mongodb json amqp stomp \\\n            redis systemd geoip2 riemann ipv6 smtp native python python_modules java java_modules \\\n            http afsnmp kafka mqtt grpc\"\n   for mod in ${MODULES}; do\n       modstate=$(eval echo \\$enable_${mod})\n       if test \"x$modstate\" = \"xauto\"; then\n          eval enable_${mod}=${state}\n       fi\n   done\nfi\n\nif test \"x$wcmp_date\" != \"xno\"; then\n  wcmp_date=\"1\"\nelse\n  wcmp_date=\"0\"\nfi\n\npatheval()\n{\n        OLD=$1\n        NEW=`eval echo $1`\n        while test \"x$OLD\" != \"x$NEW\"\n        do\n                OLD=$NEW\n                NEW=`eval echo $OLD`\n        done\n        echo $OLD\n}\n\ndnl ***************************************************************************\ndnl Checks for programs.\n\n# Do not mix the used compilers or you might have to deal with further libtool issues\n# Currently syslog-ng and all modules can be compiled like\n#       | Comoiler |  C  | C++ | ObjC |\n#       -------------------------------\n#       |    gcc   |  x  |  x  |  -   |\n#       -------------------------------\n#       |   clang  |  x  |  x  |  x   |\n#       -------------------------------\n#       |    g++   | n/a |  x  | n/a  | (NOTE: g++ fails on C99 compilant test bellow)\n#       -------------------------------\n#\nAC_PROG_CC\nAC_PROG_CC_C99\nAM_PROG_CC_C_O\nif test \"x$ac_cv_prog_cc_c99\" = \"xno\"; then\n\tAC_MSG_ERROR([C99 standard compliant C compiler required. Try GCC 3.x or later.])\nfi\n# Turned out that even the latest gcc has no proper support of the required ObjC version\n# Once gcc was able to compile our ObjC modules properly this could be reverted to AC_PROG_OBJC([$OBJC $CC])\nAC_PROG_OBJC([$OBJC clang])\nAC_PROG_YACC\nAM_PROG_LEX\nAM_MISSING_PROG([GPERF], [gperf])\nAC_PROG_MAKE_SET\nPKG_PROG_PKG_CONFIG\nLT_INIT([dlopen disable-static])\nif test \"x$with_python\" = \"xauto\"; then\n  AM_PATH_PYTHON(,,[:])\nelse\n  AM_PATH_PYTHON([$with_python],,[:])\nfi\n\nif test \"${PYTHON}\" = \":\"; then\n       AC_MSG_WARN([Python interpreter is missing.])\nfi\n\nAM_CONDITIONAL([HAVE_PYTHON_INTERPRETER], [test \"$PYTHON\" != :])\n\ndnl ***************************************************************************\ndnl C++\n\n# This one is useful for checking the available compilers\n# AC_MSG_RESULT(gcc = $(which gcc) - g++ = $(which g++) - clang = $(which clang))\n# AC_MSG_RESULT(Paths: gcc = $(ls -Al $(which gcc)) - g++ = $(ls -Al $(which g++)) - clang = $(ls -Al $(which clang)))\n# AC_MSG_RESULT($(gcc -v))\n# AC_MSG_RESULT($(g++ -v))\n# AC_MSG_RESULT($(clang -v))\n# AC_MSG_RESULT(C++ compilers to be used $CPP_COMPILER)\nAC_PROG_CXX([$CPP_COMPILER])\n\nif test \"x$enable_cpp\" = \"xyes\"; then\n        AX_CXX_COMPILE_STDCXX(14,, mandatory)\n        AX_CXX_COMPILE_STDCXX(17,, optional)\nelif test \"x$enable_cpp\" = \"xauto\"; then\n        AX_CXX_COMPILE_STDCXX(14,, optional)\n        if test \"x$HAVE_CXX14\" = \"x1\"; then\n                enable_cpp=yes\n        else\n                enable_cpp=no\n        fi\n        AX_CXX_COMPILE_STDCXX(17,, optional)\nfi\n\ndnl ***************************************************************************\ndnl Validate yacc\n\nyacc_ok=0\nif echo \"$YACC\" | grep -q bison; then\n\t# NOTE: m4 removes [], that's why it needs to be escaped\n\tbison_version=`$YACC --version | head -n 1 | sed 's/@<:@^0-9.@:>@*//'`\n\tbison_version_major=`echo $bison_version | cut -d. -f1`\n\tbison_version_minor=`echo $bison_version | cut -d. -f2`\n\tbison_version_patch=`echo $bison_version | cut -d. -f3`\n\tif ([[ \"$bison_version_major\" -gt 3 ]]) ||\n\t   ([[ \"$bison_version_major\" -eq 3 ]] && [[ \"$bison_version_minor\" -gt 7 ]]) ||\n\t   ([[ \"$bison_version_major\" -eq 3 ]] && [[ \"$bison_version_minor\" -eq 7 ]] && [[ \"$bison_version_patch\" -ge 6 ]]); then\n\t\tyacc_ok=1\n\telse\n\t\tAC_MSG_WARN([bison is found, but your bison version $bison_version is not recent enough, at least 3.7.6 is required])\n\tfi\nfi\n\nif test $yacc_ok = 0; then\n\tif test -f $srcdir/lib/cfg-grammar.c || test -f lib/cfg-grammar.c; then\n\t\tAC_MSG_WARN([No proper bison found, you'll not be able to change lib/cfg-grammar.y])\n\t\tYACC=\"echo Required bison not found && false\"\n\telse\n\t\tAC_MSG_ERROR([syslog-ng requires bison 3.7.6 or later. Your source tree seems to be from git, which doesn't have the bison generated files (like cfg-grammar.c). Please install/upgrade bison or use a distribution tarball.])\n\tfi\nfi\n\ndnl ***************************************************************************\ndnl Validate flex\n\nif $LEX --version | grep \"flex\" >/dev/null; then\n\tlex_ok=1\nelse\n\tlex_ok=0\nfi\n\nif test $lex_ok = 0 ; then\n\tif test -f $srcdir/lib/cfg-lex.c || test -f lib/cfg-lex.c; then\n\t\tAC_MSG_WARN([No flex found, you'll not be able to change lib/cfg-lex.l])\n\t\tLEX=\"echo Required flex version not found && false\"\n\telse\n\t\tAC_MSG_ERROR([syslog-ng requires flex in order to generate its config lexer. Your source tree seems to be from git, which doesn't have lib/cfg-lex.c. Please install flex or use a distribution tarball.])\n\tfi\nfi\n\ndnl ***************************************************************************\ndnl Set up NO_PIE_LDFLAG: -no-pie is compatible with $CC.\n\nAX_COMPILER_VENDOR\nAX_COMPILER_VERSION\n\nif test $ostype = \"Darwin\"; then\n  no_pie_ldflags=\"-Wl,-no_pie\"\nelse\n  if test x$ax_cv_c_compiler_vendor = \"xgnu\"; then\n    AX_COMPARE_VERSION($ax_cv_c_compiler_version, gt, [4.5], [no_pie_ldflags=\"-no-pie\"], [no_pie_ldflags=\"\"])\n  else\n    no_pie_ldflags=\"-no-pie\"\n  fi;\nfi\n\nold_LDFLAGS=\"$LDFLAGS\"\nLDFLAGS=\"$LDFLAGS $no_pie_ldflags\"\n\nAC_LINK_IFELSE([AC_LANG_SOURCE([int main(void) {return 0;}])],\n\t[no_pie_option_available=yes],\n\t[no_pie_option_available=no])\n\nLDFLAGS=\"$old_LDFLAGS\"\n\nif test \"$no_pie_option_available\" = \"yes\"; then\n  NO_PIE_LDFLAG=\"$no_pie_ldflags\"\nfi\nAC_SUBST([NO_PIE_LDFLAG])\n\ndnl ***************************************************************************\ndnl Set up CFLAGS\n\n\ndnl The rest of CFLAGS. We produce\ndnl -g/-O2/-pg/-fprofile-arcs/-ftest-coverage combinations, the rest is\ndnl supplied by Makefile.am\n\nif test \"x$ac_compiler_gnu\" = \"xyes\"; then\n\t# by ignoring the existing $CFLAGS setting we can override the\n\t# default supplied by autoconf (which defaults to -O2), which\n\t# we don't want to use with our debugging builds.\n\n        CFLAGS_ADD=\"-fno-omit-frame-pointer\"\n        CXXFLAGS_ADD=\"-fno-omit-frame-pointer\"\n        if test \"x$enable_debug\" = \"xyes\"; then\n                CFLAGS_ADD=\"${CFLAGS_ADD} -g\"\n                CXXFLAGS_ADD=\"${CXXFLAGS_ADD} -g\"\n        else\n                CFLAGS_ADD=\"${CFLAGS_ADD} -O2 -g\"\n                CXXFLAGS_ADD=\"${CXXFLAGS_ADD} -O2 -g\"\n        fi\n        if test \"x$enable_gprof\" = \"xyes\"; then\n                CFLAGS_ADD=\"${CFLAGS_ADD} -pg\"\n                CXXFLAGS_ADD=\"${CXXFLAGS_ADD} -pg\"\n        fi\n        if test \"x$enable_gcov\" = \"xyes\"; then\n                CFLAGS_ADD=\"${CFLAGS_ADD} -fprofile-arcs -ftest-coverage\"\n                CXXFLAGS_ADD=\"${CXXFLAGS_ADD} -fprofile-arcs -ftest-coverage\"\n        fi\nelse\n        enable_extra_warnings=\"no\"\nfi\nCFLAGS_ADD=\"${CFLAGS_ADD} -pthread\"\n\ndnl The current supported standard is C99 with gnu extensions\n\nif test \"x$force_gnu99\" = \"xyes\"; then\n\tCFLAGS_ADD=\"${CFLAGS_ADD} -std=gnu99\"\nfi\n\ndnl We are checking for the postive warning flag, as gcc handles the\ndnl -Wno-XXX version oddly, so if no other warnings are present, it is not\ndnl reported at all, causing it to be unusable for detection purposes.\n\nAX_CFLAGS_GCC_OPTION(-Winitializer-overrides, CFLAGS_W_INITIALIZER_OVERRIDES, CFLAGS_W_NO_INITIALIZER_OVERRIDES=\"-Wno-initializer-overrides\")\nAX_CFLAGS_GCC_OPTION(-Wold-style-declaration, CFLAGS_W_OLD_STYLE_DECLARATION)\nAC_SUBST(CFLAGS_W_NO_INITIALIZER_OVERRIDES)\nAC_SUBST(CFLAGS_W_OLD_STYLE_DECLARATION)\n\ndnl User supplied CFLAGS come last\nCFLAGS=\"${CFLAGS_ADD} ${ac_cv_env_CFLAGS_value}\"\nCXXFLAGS=\"${CXXFLAGS_ADD} ${ac_cv_env_CXXFLAGS_value}\"\n\nTEST_NO_INSTALL_FLAG=\"-no-install\"\nAC_SUBST(TEST_NO_INSTALL_FLAG)\n\nAC_SYS_LARGEFILE\n\n# FIXME: skip tests on unsupported platforms/architectures...\ncase \"$ostype\" in\n\tHP-UX)\n\t\tif $CC -v 2>&1 | grep gcc > /dev/null; then\n\t\t\tCFLAGS=\"${CFLAGS} -U_XOPEN_SOURCE -U_XOPEN_SOURCE_EXTENDED -D_HPUX_SOURCE\"\n\t\t\tLDFLAGS=\"${LDFLAGS} -lcl\"\n\t\t\tAC_DEFINE(HAVE_BROKEN_PREAD, 1, [define if your platform has a broken pread/pwrite (e.g. HP-UX)])\n\t\t\tAC_MSG_WARN([NOTE: on HP-UX with gcc, you might need to edit sys/socket.h manually or you'll get compilation errors])\n\t\tfi\n\t\t;;\n\tAIX)\n\t\tif test \"$ac_cv_sys_large_files\" -ne 0; then\n\t\t\tCFLAGS=\"${CFLAGS} -D_LARGE_FILES=1\"\n\t\tfi\n\n                # NOTE: The -brtl option to the linker must be set before calling the\n                # configure script, as otherwise the generated libtool will behave\n                # differently. We need the runtime linker during execution (hence the\n                # -brtl) to load external modules. Also, please note that with -brtl the\n                # linker behaves similarly to what is expected on other UNIX systems,\n                # without it, it refuses to link an .so in if there's no reference from\n                # the main program, even if there is a proper -llibname option.\n\t\tLDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t\tMODULE_LDFLAGS=\"-avoid-version -module\"\n\t\t;;\n\tDarwin)\n\t\tMODULE_LDFLAGS=\"-avoid-version -dylib\"\n                TEST_NO_INSTALL_FLAG=\"-no-fast-install\"\n                # This flag might be a security issue, do not use in production code, unfortunately we still need it for criterion tests and the current mocking solution\n                if test \"x$enable_tests\" = \"xyes\"; then\n\t\t        LDFLAGS=\"$LDFLAGS -Wl,-flat_namespace\"\n                fi\n                # NOTE: This is now seems to be an Apple/Xcode \"only\" issue, but probably much better a clang one, so later we might want to add this globally\n                # XCode15 new linker has some issues (e.g. https://developer.apple.com/forums/thread/737707)\n                # switch back to classic linking till not fixed (https://developer.apple.com/documentation/xcode-release-notes/xcode-15-release-notes#Linking)\n                if test \"x$enable_force_classic_linking\" = \"xyes\"; then\n                        LDFLAGS=\"$LDFLAGS -Wl,-ld_classic\"\n                fi\n\t\tCFLAGS=\"$CFLAGS -D__APPLE_USE_RFC_3542\"\n    ;;\n\tOSF1)\n\t\tCFLAGS=\"${CFLAGS} -D_XOPEN_SOURCE=500 -D_XOPEN_SOURCE_EXTENDED -D_OSF_SOURCE -D_POSIX_C_SOURCE\"\n\t\t;;\nesac\n\nif test \"$enable_dynamic_linking\" = \"auto\" -a \"$enable_mixed_linking\" = \"auto\"; then\n\tenable_dynamic_linking=\"yes\"\n\tenable_mixed_linking=\"no\"\nfi\n\nlinkopts=0\nif test \"x$enable_dynamic_linking\" = \"xyes\"; then\n       linkopts=`expr $linkopts + 1`\nfi\nif test \"x$enable_mixed_linking\" = \"xyes\"; then\n       linkopts=`expr $linkopts + 1`\nfi\n\nif test \"$linkopts\" -gt 1; then\n       AC_MSG_ERROR([You cannot specify multiple linking options at the same time (--enable-dynamic-linking, --enable-mixed-linking).])\nfi\n\nif test \"x$enable_dynamic_linking\" = \"xyes\"; then\n\tenable_dynamic_linking=\"yes\"\n\tenable_mixed_linking=\"no\"\n\tlinking_mode=\"dynamic\"\nelif test \"x$enable_mixed_linking\" = \"xyes\"; then\n\tenable_dynamic_linking=\"no\"\n\tenable_mixed_linking=\"yes\"\n\tlinking_mode=\"mixed\"\nfi\n\ndnl ***************************************************************************\ndnl Check for --whole-archive flag\ndnl ***************************************************************************\n\nif test $ostype = \"Darwin\"; then\n  # -all_load loads all members of static archive libraries, it can't be selectively disabled (do not use -noall_load)\n  # use -force_load for each static library if mixed linking needs to be supported on macOS\n  WHOLE_ARCHIVE_OPT=\"-all_load\"\n  NO_WHOLE_ARCHIVE_OPT=\"\"\nelse\n  WHOLE_ARCHIVE_OPT=\"--whole-archive\"\n  NO_WHOLE_ARCHIVE_OPT=\"--no-whole-archive\"\nfi\n\ndnl ***************************************************************************\ndnl Is the __thread keyword available?\ndnl ***************************************************************************\n\nAC_LINK_IFELSE([AC_LANG_PROGRAM(\n[[#include <pthread.h>\n__thread int a;\n]],\n[a=0;])],\n[ac_cv_have_tls=yes; AC_DEFINE_UNQUOTED(HAVE_THREAD_KEYWORD, 1, \"Whether Thread Local Storage is supported by the system\")])\n\ndnl ***************************************************************************\ndnl How to do static linking?\ndnl ***************************************************************************\n\nAC_MSG_CHECKING(how to enable static linking for certain libraries)\nldversion=`ld -V 2>&1 | head -n 1`\nif echo $ldversion | egrep \"GNU|Solaris\" > /dev/null; then\n        LD_START_STATIC=\"-Wl,-Bstatic\"\n        LD_END_STATIC=\"-Wl,-Bdynamic\"\n        AC_MSG_RESULT(GNU or Solaris)\nelif test $ostype = \"HP-UX\" > /dev/null; then\n        LD_START_STATIC=\"-Wl,-a,archive\"\n        LD_END_STATIC=\"-Wl,-a,shared_archive\"\n        AC_MSG_RESULT(HP-UX)\nelif test \"$ostype\" = \"AIX\"; then\n        LD_START_STATIC=\"-Wl,-bstatic\"\n        LD_END_STATIC=\"-Wl,-bdynamic\"\n        AC_MSG_RESULT(AIX)\nelse\n        LD_START_STATIC=\"\"\n        LD_END_STATIC=\"\"\n        AC_MSG_RESULT([no clues, linking everything dynamically, please send appropriate ld arguments to syslog-ng@lists.balabit.hu])\nfi\n\ndnl ***************************************************************************\ndnl Miscellanneous headers\ndnl ***************************************************************************\n\nAC_HEADER_STDC\nAC_CHECK_HEADER(dmalloc.h)\nAC_CHECK_HEADER(dlfcn.h)\nAC_CHECK_HEADERS(strings.h\t\\\n\tgetopt.h\t\t\\\n\tstropts.h\t\t\\\n\tsys/strlog.h\t\t\\\n\tdoor.h\t\t\t\\\n\tsys/capability.h\t\\\n\tsys/prctl.h\t\t\\\n\tlinux/sock_diag.h\t\\\n\tutmp.h\t\t\t\\\n\tutmpx.h)\nAC_CHECK_HEADERS(tcpd.h)\n\nAC_CHECK_TYPES([struct ucred, struct cmsgcred], [], [], [#define _GNU_SOURCE 1\n#define _DEFAULT_SOURCE 1\n#include <sys/types.h>\n#include <sys/socket.h>])\n\ndnl ***************************************************************************\ndnl Header checks\ndnl ***************************************************************************\n\ndnl Checks for typedefs, structures, and compiler characteristics.\nAC_STRUCT_TM\n\nAC_CHECK_MEMBER(struct tm.tm_gmtoff,AC_DEFINE(HAVE_STRUCT_TM_TM_GMTOFF,1,[Whether you have tm_gmtoff field in struct tm]),,[\n#if TM_IN_SYS_TIME\n#include <sys/time.h>\n#else\n#include <time.h>\n#endif])\n\nAC_CHECK_MEMBER(struct msghdr.msg_control,AC_DEFINE(HAVE_CTRLBUF_IN_MSGHDR,1,[Whether you have msg_control field in msghdr in socket.h]),,[\n#include <sys/socket.h>\n])\n\nAC_CACHE_CHECK(for I_CONSLOG, blb_cv_c_i_conslog,\n  [AC_EGREP_CPP(I_CONSLOG,\n[\n#include <sys/strlog.h>\nI_CONSLOG\n],\n  blb_cv_c_i_conslog=no, blb_cv_c_i_conslog=yes)])\n\nold_CPPFLAGS=$CPPFLAGS\nCPPFLAGS=\"-D_GNU_SOURCE -D_DEFAULT_SOURCE\"\nAC_CACHE_CHECK(for O_LARGEFILE, blb_cv_c_o_largefile,\n  [AC_EGREP_CPP(O_LARGEFILE,\n[\n#include <fcntl.h>\nO_LARGEFILE\n],\n  blb_cv_c_o_largefile=no, blb_cv_c_o_largefile=yes)])\nCPPFLAGS=$old_CPPFLAGS\n\nif test \"x$blb_cv_c_o_largefile\" = \"xyes\"; then\n        AC_DEFINE(HAVE_O_LARGEFILE, 1, [O_LARGEFILE is present])\nfi\n\nAC_CACHE_CHECK(for struct sockaddr_storage, blb_cv_c_struct_sockaddr_storage,\n  [AC_EGREP_HEADER([sockaddr_storage], sys/socket.h, blb_cv_c_struct_sockaddr_storage=yes,blb_cv_c_struct_sockaddr_storage=no)])\n\nif test \"$blb_cv_c_struct_sockaddr_storage\" = \"yes\"; then\n\tAC_DEFINE(HAVE_STRUCT_SOCKADDR_STORAGE,[1],[struct sockaddr_storage is present on your system])\nfi\n\nAC_CACHE_CHECK(for struct sockaddr_in6, blb_cv_c_struct_sockaddr_in6,\n  [AC_EGREP_HEADER([sockaddr_in6], netinet/in.h, blb_cv_c_struct_sockaddr_in6=yes,blb_cv_c_struct_sockaddr_in6=no)])\n\nAC_CACHE_CHECK(for PR_SET_KEEPCAPS, blb_cv_keepcaps,\n  [AC_EGREP_CPP(PR_SET_KEEPCAPS,\n[\n#include <sys/prctl.h>\n\nPR_SET_KEEPCAPS\n],\n  blb_cv_keepcaps=no,\n  blb_cv_keepcaps=yes)])\n\nif test \"x$blb_cv_keepcaps\" = \"xyes\"; then\n\tAC_DEFINE(HAVE_PR_SET_KEEPCAPS, 1, [have PR_SET_KEEPCAPS])\nfi\n\nAC_CACHE_CHECK(for modern utmp,\n               blb_cv_c_modern_utmp,\n[AC_TRY_COMPILE([\n#ifdef HAVE_UTMPX_H\n#include <utmpx.h>\n#else\n#include <utmp.h>\n#endif\n],\n[\n#ifdef HAVE_UTMPX_H\n        struct utmpx ut;\n#else\n        struct utmp ut;\n#endif\n  return sizeof(ut.ut_type) & sizeof(ut.ut_user);\n],\nblb_cv_c_modern_utmp=yes,\nblb_cv_c_modern_utmp=no)])\n\nif test \"x$blb_cv_c_modern_utmp\" = \"xyes\"; then\n\tAC_DEFINE(HAVE_MODERN_UTMP, 1, [have modern utmp/utmpx format])\nfi\n\nAC_CHECK_DECLS(SO_MEMINFO,\n               AC_DEFINE(ENABLE_AFSOCKET_MEMINFO_METRICS, 1, [enable SO_MEMINFO based metrics in afsocket]),\n               AC_DEFINE(ENABLE_AFSOCKET_MEMINFO_METRICS, 0, [enable SO_MEMINFO based metrics in afsocket]),\n               [[#include <sys/socket.h>]])\n\ndnl ***************************************************************************\ndnl Checks for libraries\nAC_CHECK_LIB(m, round, BASE_LIBS=\"$BASE_LIBS -lm\")\nAC_CHECK_LIB(door, door_create, BASE_LIBS=\"$BASE_LIBS -ldoor\")\nAC_CHECK_LIB(socket, socket, BASE_LIBS=\"$BASE_LIBS -lsocket\")\nAC_CHECK_LIB(rt, nanosleep, BASE_LIBS=\"$BASE_LIBS -lrt\")\nAC_CHECK_FUNC(gethostbyname, [], AC_CHECK_LIB(nsl, gethostbyname, BASE_LIBS=\"$BASE_LIBS -lnsl\"))\nAC_CHECK_LIB(regex, regexec, REGEX_LIBS=\"-lregex\")\nAC_CHECK_LIB(resolv, res_init, RESOLV_LIBS=\"-lresolv\")\n\nAC_CHECK_FUNCS(strdup\t\t\\\n\tstrtol\t\t\t\\\n\tstrtoll\t\t\t\\\n\tstrtoimax\t\t\\\n\tinet_aton\t\t\\\n\tinet_ntoa\t\t\\\n\tgetaddrinfo\t\t\\\n\tgetnameinfo\t\t\\\n\tgetutent\t\t\\\n\tgetutxent\t\t\\\n\tpread\t\t\t\\\n\tpwrite\t\t\t\\\n\tposix_fallocate\t\t\\\n\tstrcasestr\t\t\\\n\tmemrchr\t\t\t\\\n\tlocaltime_r\t\t\\\n\tgetprotobynumber_r\t\\\n\tgmtime_r\t\t\\\n\tstrnlen\t\t\t\\\n\tgetline\t\t\t\\\n\tstrtok_r)\nold_LIBS=$LIBS\nLIBS=$BASE_LIBS\nAC_CHECK_FUNCS(clock_gettime)\nLIBS=$old_LIBS\n\ndnl ***************************************************************************\ndnl check inotify\ndnl ***************************************************************************\nAC_CHECK_FUNCS([inotify_init])\n\ndnl ***************************************************************************\ndnl check getrandom\ndnl ***************************************************************************\nAC_CHECK_FUNCS([getrandom])\n\ndnl ***************************************************************************\ndnl libevtlog headers/libraries (remove after relicensing libevtlog)\ndnl ***************************************************************************\n\nEVTLOG_LIBS=\"\\$(top_builddir)/lib/eventlog/src/libevtlog.la\"\nEVTLOG_NO_LIBTOOL_LIBS=\"\\$(top_builddir)/lib/eventlog/src/.libs/libevtlog.so\"\nEVTLOG_CFLAGS=\"-I\\$(top_srcdir)/lib/eventlog/src -I\\$(top_builddir)/lib/eventlog/src\"\n\ndnl ***************************************************************************\ndnl secret storage libraries\ndnl ***************************************************************************\n\nSECRETSTORAGE_LIBS=\"\\$(top_builddir)/lib/secret-storage/libsecret-storage.la\"\nSECRETSTORAGE_NO_LIBTOOL_LIBS=\"\\$(top_builddir)/lib/secret-storage/.libs/libsecret-storage.so\"\n\ndnl ***************************************************************************\ndnl libwrap headers/libraries\ndnl ***************************************************************************\n\nold_LIBS=$LIBS\nAC_CACHE_CHECK(for TCP wrapper library,\n                blb_cv_c_lwrap,\n\nfor libwrap in \"-lwrap\" \"/usr/local/lib/libwrap.a\"; do\n        LIBS=\"$old_LIBS $libwrap\"\n\n        [AC_TRY_LINK(,\n        [\n}\n\nint allow_severity;\nint deny_severity;\nextern int hosts_access(void);\n\nint foo(void)\n{\n        hosts_access();\n],\n        [blb_cv_c_lwrap=$libwrap\n        break],\n        blb_cv_c_lwrap=\"\")\ndone\n\n])\nLIBS=$old_LIBS\nLIBWRAP_LIBS=$blb_cv_c_lwrap\n\nif test \"x$enable_tcp_wrapper\" = \"xauto\"; then\n\tAC_MSG_CHECKING(whether to enable TCP wrapper support)\n        if test \"x$ac_cv_header_tcpd_h\" = \"xyes\" -a \"x$blb_cv_c_lwrap\" != \"x\"; then\n                enable_tcp_wrapper=yes\n                AC_MSG_RESULT(yes)\n        else\n                LIBWRAP_LIBS=\"\"\n                AC_MSG_RESULT(no)\n                enable_tcp_wrapper=no\n        fi\nelif test \"x$enable_tcp_wrapper\" != \"xyes\"; then\n        LIBWRAP_LIBS=\"\"\nfi\n\ndnl ***************************************************************************\ndnl -ldl\ndnl ***************************************************************************\n\nAC_CHECK_LIB(dl, dlsym, DL_LIBS=\"-ldl\")\n\ndnl ***************************************************************************\ndnl libdbi headers/libraries\ndnl ***************************************************************************\nif test \"x$enable_sql\" = \"xyes\" || test \"x$enable_sql\" = \"xauto\"; then\n\tPKG_CHECK_MODULES(LIBDBI, dbi >= $LIBDBI_MIN_VERSION, with_libdbi=\"1\", with_libdbi=\"0\")\n\tif test \"$with_libdbi\" -eq 0; then\n\t\tdnl if libdbi has no .pc file (e.g., Ubuntu Precise), try it without one\n\t\tAC_CHECK_LIB(dbi, dbi_initialize_r, LIBDBI_LIBS=\"-ldbi\"; LIBDBI_CFLAGS=\"-I/usr/include/dbi\"; with_libdbi=\"1\")\n\tfi\n\n\tAC_MSG_CHECKING(whether to enable SQL support)\n\tif test \"$with_libdbi\" -eq 1; then\n\t\tenable_sql=\"yes\"\n\t\tAC_MSG_RESULT(yes)\n\telif test \"x$enable_sql\" = \"xyes\"; then\n\t\tAC_MSG_RESULT(no)\n\t\tenable_sql=\"no\"\n                AC_MSG_ERROR([Could not find libdbi, and SQL support was explicitly enabled.])\n        else\n\t\tAC_MSG_RESULT(no)\n\tfi\nfi\n\ndnl ***************************************************************************\ndnl GLib headers/libraries\ndnl ***************************************************************************\n\nGLIB_ADDONS=\"gmodule-2.0 gthread-2.0\"\nPKG_CHECK_MODULES(GLIB, glib-2.0 >= $GLIB_MIN_VERSION $GLIB_ADDONS,,)\n\nif test \"$linking_mode\" != \"dynamic\"; then\n\t# strip out -ldl & -lrt as it cannot be linked statically\n\tGLIB_LIBS=`echo $GLIB_LIBS | tr ' ' '\\n' | egrep -v \"^(-ldld?)|(-lrt)$\" | tr '\\n' ' '`\n\n\told_LIBS=$LIBS\n\tLIBS=\"$LD_START_STATIC $GLIB_LIBS $LD_END_STATIC $BASE_LIBS\"\n\tAC_CHECK_FUNC(g_hash_table_new, blb_cv_static_glib=yes, blb_cv_static_glib=no)\n\tLIBS=$old_LIBS\nfi\n\nold_CPPFLAGS=$CPPFLAGS\nCPPFLAGS=\"$GLIB_CFLAGS\"\nold_LDFLAGS=$LDFLAGS\nLDFLAGS=\"$LDFLAGS $GLIB_LIBS\"\n\nold_LIBS=$LIBS\nLIBS=\"$LIBS $GLIB_LIBS\"\nAC_CHECK_FUNCS(g_list_copy_deep \\\n  g_ptr_array_find_with_equal_func \\\n  g_memdup2 \\\n  g_canonicalize_filename)\nLIBS=$old_LIBS\n\nif test \"x$ac_cv_func_g_memdup2\" = \"xyes\"; then\n    dnl only set MIN_REQUIRED to 2.68 if we know that we are at least on that version.\n    dnl On CentOS7/SLES12 we don't have recent enough glib but with compat\n    dnl wrappers we can compile. Bad news is that if we don't set to 2.68 at least,\n    dnl we can't compile on new platforms with clang.\n\n    dnl Best of both worlds: we set to 2.68 if we have that version, so we\n    dnl get clang to compile our code, otherwise we set it to 2.32.\n\n    GLIB_CFLAGS=\"${GLIB_CFLAGS} -DGLIB_VERSION_MIN_REQUIRED=GLIB_VERSION_2_68\"\nelse\n    GLIB_CFLAGS=\"${GLIB_CFLAGS} -DGLIB_VERSION_MIN_REQUIRED=GLIB_VERSION_2_32\"\nfi\n\nAC_CACHE_CHECK(sanity checking Glib headers,\n               blb_cv_glib_sane,\n[AC_TRY_RUN([\n#include <glib.h>\n\nint main()\n{\n  if (sizeof(long) != GLIB_SIZEOF_LONG)\n    return 1;\n  return 0;\n}\n],\nblb_cv_glib_sane=yes,\nblb_cv_glib_sane=no,\nblb_cv_glib_sane=yes)])\nCPPFLAGS=$old_CPPFLAGS\nLDFLAGS=$old_LDFLAGS\n\nif test \"x$blb_cv_glib_sane\" = \"xno\"; then\n\tAC_MSG_ERROR([Glib headers inconsistent with current compiler setting. You might be using 32 bit Glib with a 64 bit compiler, check PKG_CONFIG_PATH])\nfi\n\nif test \"x$linking_mode\" != \"xdynamic\" -a \"x$blb_cv_static_glib\" = \"xno\"; then\n\tAC_MSG_ERROR([static GLib libraries not found (a file named libglib-2.0.a), either link GLib dynamically using the --enable-dynamic-linking or install a static GLib])\nfi\n\ndnl ***************************************************************************\ndnl geoip2 headers/libraries\ndnl ***************************************************************************\nif test \"x$enable_geoip2\" = \"xyes\" || test \"x$enable_geoip2\" = \"xauto\"; then\n        if test \"x$MAXMINDDB_LIBS\" != \"x\"; then\n                AC_MSG_CHECKING([for MAXMINDDB])\n                AC_MSG_RESULT([yes (MAXMINDDB_LIBS set, will use that.)])\n                with_maxminddb=\"yes\"\n        else\n                PKG_CHECK_MODULES(MAXMINDDB, libmaxminddb, [with_maxminddb=\"yes\"], [with_maxminddb=\"no\"])\n                if test \"x$with_maxminddb\" = \"xno\"; then\n                        AC_MSG_CHECKING([for MAXMINDDB])\n                        AC_CHECK_LIB(maxminddb, MMDB_open, MAXMINDDB_LIBS=\"-lmaxminddb\"; with_maxminddb=\"yes\", with_maxminddb=\"no\")\n                        AC_SUBST(MAXMINDDB_LIBS)\n                fi\n        fi\n\n        if test \"x$with_maxminddb\" = \"xno\" && test \"x$enable_geoip2\" = \"xyes\"; then\n                AC_MSG_ERROR([Could not find libmaxminddb, and geoip2 support was explicitly enabled.])\n        fi\n\n        if test \"x$with_maxminddb\" = \"xyes\"; then\n                AC_CONFIG_LINKS([modules/geoip2/tests/test.mmdb:modules/geoip2/tests/test.mmdb])\n        fi\n\n        enable_geoip2=\"$with_maxminddb\"\nfi\n\ndnl ***************************************************************************\ndnl pcre headers/libraries\ndnl ***************************************************************************\n\nif test \"x$linking_mode\" = \"xmixed\"; then\n\n\t# check if we have a pcre bundled in glib. In case glib is\n        # dynamic it doesn't matter as glib doesn't export those\n        # symbols.  But in case glib is static, linking it through\n        # glib and through libpcre would clash.\n        old_LIBS=\"$LIBS\"\n        LIBS=\"$LD_START_STATIC $GLIB_LIBS $LD_END_STATIC $LIBS\"\n        AC_CHECK_FUNC(pcre_compile2, AC_MSG_ERROR([You cannot use a GLib embedded PCRE in mixed linking mode]))\n        LIBS=\"$old_LIBS\"\nfi\n\nPKG_CHECK_MODULES(PCRE2, libpcre2-8 >= $PCRE2_MIN_VERSION,, PCRE2_LIBS=\"\")\n\nif test -z \"$PCRE2_LIBS\"; then\n\tAC_MSG_ERROR(Cannot find pcre2 version >= $PCRE2_MIN_VERSION which is a hard dependency from syslog-ng 3.6 onwards)\nfi\n\ndnl ***************************************************************************\ndnl OpenSSL headers/libraries\ndnl ***************************************************************************\n\n# openssl is needed for:\n#  * TLS support\n\ndnl check OpenSSL static linking\nPKG_CHECK_MODULES(OPENSSL,\n                  openssl >= $OPENSSL_MIN_VERSION,,\n                  AC_MSG_ERROR(Cannot find OpenSSL libraries with version >= $OPENSSL_MIN_VERSION it is a hard dependency from syslog-ng 3.7 onwards))\n\nif test -n \"$OPENSSL_LIBS\" -a \"$linking_mode\" != \"dynamic\"; then\n        dnl required for openssl, but only when linking statically\n        AC_CHECK_LIB(z, inflate, ZLIB_LIBS=\"-lz\")\n\n\tdnl Remove -ldl as it cannot be linked statically on some platforms, it'll be present in DL_LIBS\n\tOPENSSL_LIBS=`echo $OPENSSL_LIBS | tr ' ' '\\n' | egrep -v \"^-ldld?$\" | tr '\\n' ' '`\n\n\told_LIBS=$LIBS\n\tLIBS=\"$LD_START_STATIC $OPENSSL_LIBS $ZLIB_LIBS $LD_END_STATIC $DL_LIBS\"\n\tAC_CHECK_FUNC(SSL_library_init, blb_cv_static_openssl=yes, blb_cv_static_openssl=no)\n\tLIBS=$old_LIBS\nfi\n\nCPPFLAGS_SAVE=\"$CPPFLAGS\"\nCPPFLAGS=\"$CPPFLAGS $OPENSSL_CFLAGS\"\n\nAC_CHECK_DECLS([SSL_CTX_get0_param],[], [], [[#include <openssl/ssl.h>]])\nAC_CHECK_DECLS([SSL_CTX_set_ciphersuites],[], [], [[#include <openssl/ssl.h>]])\nAC_CHECK_DECLS([X509_STORE_CTX_get0_cert],[], [], [[#include <openssl/ssl.h>]])\nAC_CHECK_DECLS([X509_get_extension_flags], [], [], [[#include <openssl/x509v3.h>]])\nAC_CHECK_DECLS([EVP_MD_CTX_reset], [], [], [[#include <openssl/evp.h>]])\nAC_CHECK_DECLS([ASN1_STRING_get0_data], [], [], [[#include <openssl/asn1.h>]])\nAC_CHECK_DECLS([DH_set0_pqg], [], [], [[#include <openssl/dh.h>]])\nAC_CHECK_DECLS([BN_get_rfc3526_prime_2048], [], [], [[#include <openssl/bn.h>]])\nAC_CHECK_DECLS([SSL_CONF_CTX_new],[], [], [[#include <openssl/ssl.h>]])\nAC_CHECK_DECLS([SSL_CTX_set_num_tickets],[], [], [[#include <openssl/ssl.h>]])\nAC_CHECK_DECLS([SSL_CTX_set1_sigalgs_list],[], [], [[#include <openssl/ssl.h>]])\nAC_CHECK_DECLS([SSL_CTX_set1_client_sigalgs_list],[], [], [[#include <openssl/ssl.h>]])\nAC_CHECK_DECLS([SSL_add_file_cert_subjects_to_stack],[], [], [[#include <openssl/ssl.h>]])\nAC_CHECK_DECLS([SSL_add_dir_cert_subjects_to_stack],[], [], [[#include <openssl/ssl.h>]])\nAC_CHECK_DECLS([SSL_CTX_set_min_proto_version],[], [], [[#include <openssl/ssl.h>]])\n\nCPPFLAGS=\"$CPPFLAGS_SAVE\"\n\ndnl\ndnl Right now, openssl is never linked statically as it is only used by the\ndnl TLS build of the afsocket plugin which is loaded dynamically anyway.\ndnl\ndnl The static check remains though, because the core may need openssl in the\ndnl future, in which case it becomes relevant again.\ndnl\n\ndnl if test \"x$linking_mode\" != \"xdynamic\" -a \"x$blb_cv_static_openssl\" = \"xno\"; then\ndnl\tAC_MSG_ERROR([static OpenSSL libraries not found (libssl.a, libcrypto.a and their external dependencies like libz.a), either link OpenSSL statically using the --enable-dynamic-linking, or install a static OpenSSL])\ndnl fi\n\ndnl ***************************************************************************\ndnl libnet headers/libraries\ndnl ***************************************************************************\nAC_MSG_CHECKING(for LIBNET)\nif test \"x$with_libnet\" = \"x\"; then\n        LIBNET_CONFIG=\"`which libnet-config`\"\nelse\n        LIBNET_CONFIG=\"$with_libnet/libnet-config\"\nfi\n\nif test -n \"$LIBNET_CONFIG\" -a -x \"$LIBNET_CONFIG\"; then\n        LIBNET_CFLAGS=\"`$LIBNET_CONFIG --defines`\"\n        LIBNET_CFLAGS=\"$LIBNET_CFLAGS `$LIBNET_CONFIG --cflags`\"\n        LIBNET_LIBS=\"`$LIBNET_CONFIG --libs`\"\n        AC_MSG_RESULT(yes)\ndnl libnet-config does not provide the _DEFAULT_SOURCE define, that can cause warning during build\ndnl as upstream libnet-config does uses _DEFAULT_SOURCE this is just a fix till\n        LIBNET_CFLAGS=\"$LIBNET_CFLAGS -D_DEFAULT_SOURCE\"\n\nelse\n        LIBNET_LIBS=\n        AC_MSG_RESULT(no)\nfi\n\n\nif test \"x$enable_spoof_source\" = \"xauto\"; then\n\tAC_MSG_CHECKING(whether to enable spoof source support)\n        if test \"x$LIBNET_LIBS\" != \"x\"; then\n                enable_spoof_source=yes\n                AC_MSG_RESULT(yes)\n\telse\n\t\tenable_spoof_source=no\n                LIBNET_LIBS=\n\t\tLIBNET_CFLAGS=\n\t\tAC_MSG_RESULT(no)\n        fi\nelif test \"x$enable_spoof_source\" = \"xyes\"; then\n  if test \"x$LIBNET_LIBS\" = \"x\"; then\n    AC_MSG_ERROR([Could not find libnet, and spoof source support was explicitly enabled.])\n  fi\nelif test \"x$enable_spoof_source\" = \"xno\"; then\n\tLIBNET_CFLAGS=\"\"\n\tLIBNET_LIBS=\"\"\n\tenable_spoof_source=no\nelse\n  AC_MSG_ERROR([Invalid value ($enable_spoof_source) for enable-spoof-source])\nfi\n\ndnl ***************************************************************************\ndnl afsnmp module & net-snmp headers/libraries\ndnl ***************************************************************************\nAC_MSG_CHECKING(whether to enable snmp destination driver)\n\nif test \"x$with_net_snmp\" = \"x\"; then\n   NETSNMP_CONFIG=\"`which net-snmp-config`\"\nelse\n   NETSNMP_CONFIG=\"$with_net_snmp/net-snmp-config\"\nfi\n\nif test \"x$enable_afsnmp\" = \"xyes\"; then\n   if test -n \"$NETSNMP_CONFIG\" -a -x \"$NETSNMP_CONFIG\"; then\n     enable_afsnmp=\"yes\"\n     AC_MSG_RESULT(yes)\n   else\n     enable_afsnmp_dest=\"no\"\n     AC_MSG_RESULT(no)\n     AC_MSG_ERROR(\"AFSNMP module is explicit enabled but no net-snmp lib found\")\n   fi\nelif test \"x$enable_afsnmp\" = \"xauto\"; then\n  if test -n \"$NETSNMP_CONFIG\" -a -x \"$NETSNMP_CONFIG\"; then\n     enable_afsnmp=\"yes\"\n     AC_MSG_RESULT(yes)\n  else\n     enable_afsnmp=\"no\"\n     AC_MSG_RESULT(no)\n  fi\nelse\n  enable_afsnmp=\"no\"\n  AC_MSG_RESULT(no)\nfi\n\nif test \"$enable_afsnmp\" = \"yes\"; then\n  NETSNMP_CFLAGS=\"`$NETSNMP_CONFIG --cflags`\"\n  NETSNMP_LIBS=\"`$NETSNMP_CONFIG --libs`\"\nelse\n  NETSNMP_CFLAGS=\n  NETSNMP_LIBS=\nfi\n\ndnl ***************************************************************************\ndnl Criterion headers/libraries\ndnl ***************************************************************************\n\nPKG_CHECK_MODULES(CRITERION, criterion >= $CRITERION_MIN_VERSION,\n  [with_criterion=\"system\"],\n  [AC_MSG_WARN([pkg-config was not able to find Criterion >= $CRITERION_MIN_VERSION]); with_criterion=\"no\"])\n\nif test \"$with_criterion\" != \"no\"; then\n   enable_tests=yes\nelse\n  enable_tests=no\nfi\n\ndnl ***************************************************************************\ndnl ivykis headers/libraries\ndnl ***************************************************************************\n\nIVYKIS_INTERNAL_SOURCE_EXISTS=\"test -f $srcdir/lib/ivykis/src/iv_main_posix.c\"\n\nif $IVYKIS_INTERNAL_SOURCE_EXISTS; then\n\tAC_CONFIG_SUBDIRS([lib/ivykis])\n\tIVYKIS_SUBDIRS=lib/ivykis\nfi\n\n\nINTERNAL_IVYKIS_CFLAGS=\"\"\nif test \"x$with_ivykis\" = \"xinternal\"; then\n\tif $IVYKIS_INTERNAL_SOURCE_EXISTS; then\n\t\t# these can only be used in lib as it assumes\n\t\t# the current directory just one below ivykis\n\n\t\tIVYKIS_LIBS=\"-Wl,${WHOLE_ARCHIVE_OPT} -L\\$(top_builddir)/lib/ivykis/src -livykis -Wl,${NO_WHOLE_ARCHIVE_OPT}\"\n\t\tIVYKIS_CFLAGS=\"-isystem \\$(top_srcdir)/lib/ivykis/src/include -isystem \\$(top_builddir)/lib/ivykis/src/include\"\n                INTERNAL_IVYKIS_CFLAGS=\"-isystem \\${includedir}/syslog-ng/ivykis\"\n\n\t\tIVYKIS_VERSION_UPDATED=\"yes\"\n\n\t\t# LIBS to use when libtool is not applicable (when linking the main syslog-ng executable in mixed linking mode)\n\t\tIVYKIS_NO_LIBTOOL_LIBS=\"-Wl,${WHOLE_ARCHIVE_OPT} -L\\$(top_builddir)/lib/ivykis/src/.libs -livykis -Wl,${NO_WHOLE_ARCHIVE_OPT}\"\n\n\t\tAC_DEFINE(HAVE_IV_WORK_POOL_SUBMIT_CONTINUATION, 1)\n\telse\n\t\tAC_MSG_ERROR([Internal ivykis sources not found in lib/ivykis. This is a hard dependency, unable to build syslog-ng without them.])\n\tfi\nelse\n\twith_ivykis=\"system\"\n\tPKG_CHECK_MODULES(IVYKIS, ivykis >= $IVYKIS_MIN_VERSION,,)\n\tPKG_CHECK_MODULES(IVYKIS_VERSION_CHECK, ivykis >= $IVYKIS_UPDATED_VERSION, [IVYKIS_VERSION_UPDATED=\"yes\"], [IVYKIS_VERSION_UPDATED=\"no\"])\n\n\t# in case we're using a system installed ivykis, we can link against\n\t# it even without libtool and without extra linker arguments (as\n\t# we're linking dynamically)\n\n\tIVYKIS_NO_LIBTOOL_LIBS=\"$IVYKIS_LIBS\"\n\n\tdnl check if iv_work_pool_submit_continuation is available in the system ivykis\n\told_LIBS=$LIBS\n\tLIBS=\"$LIBS $IVYKIS_LIBS\"\n\tAC_CHECK_FUNCS(iv_work_pool_submit_continuation, [], [AC_DEFINE(HAVE_IV_WORK_POOL_SUBMIT_CONTINUATION, 0)])\n\tLIBS=$old_LIBS\nfi\n\n\n\ndnl ***************************************************************************\ndnl json headers/libraries\ndnl ***************************************************************************\n\nif test \"x$with_jsonc\" = \"xinternal\"; then\n   AC_MSG_ERROR([The internal (bundled) json-c library is no longer supported!])\nfi\n\n# became hard-dependency\nwith_jsonc=\"yes\"\n\nenable_json=\"yes\"\nPKG_CHECK_EXISTS(json-c, json_module_name=\"json-c\",\nPKG_CHECK_EXISTS(json, json_module_name=\"json\"))\nPKG_CHECK_MODULES(JSON, $json_module_name >= $JSON_C_MIN_VERSION,[with_jsonc=\"yes\"], [JSON_LIBS=\"\"; enable_json=\"no\"])\nif test \"x$enable_json\" = \"xno\"; then\n  AC_MSG_ERROR([json-c library development files cannot be not found on system!])\nfi\n\ndnl ***************************************************************************\ndnl mongo-c-driver headers/libraries\ndnl ***************************************************************************\n\nPKG_CHECK_MODULES(LIBMONGO, libmongoc-1.0 >= $LMC_MIN_VERSION, with_mongoc=\"yes\", with_mongoc=\"no\")\n\nif test \"x$with_mongoc\" = \"xno\" && test \"x$enable_mongodb\" = \"xyes\"; then\n   AC_MSG_ERROR([Could not find mongo-c-driver, and MongoDB support was explicitly enabled.])\nfi\n\nif test \"x$with_mongoc\" = \"xyes\"; then\nCPPFLAGS_SAVE=\"$CPPFLAGS\"\nCPPFLAGS=\"$CPPFLAGS $LIBMONGO_CFLAGS\"\n\nAC_CHECK_DECLS([mongoc_uri_set_option_as_int32], [], [], [[#include <mongoc.h>]])\nAC_CHECK_DECLS([MONGOC_URI_SERVERSELECTIONTIMEOUTMS], [], [], [[#include <mongoc.h>]])\n\nCPPFLAGS=\"$CPPFLAGS_SAVE\"\nfi\n\ndnl ***************************************************************************\ndnl libesmtp headers/libraries\ndnl ***************************************************************************\nif test \"x$enable_smtp\" != \"xno\" && test \"x$with_libesmtp\" != \"xno\"; then\n\tlibesmtp=\"yes\"\n\tif test \"x$with_libesmtp\" != \"xyes\" && test \"x$with_libesmtp\" != \"x\"; then\n\t\tCPPFLAGS_SAVE=\"$CPPFLAGS\"\n\t\tLDFLAGS_SAVE=\"$LDFLAGS\"\n\t\tCPPFLAGS=\"$CPPFLAGS -I$with_libesmtp/include\"\n\t\tLDFLAGS=\"$LDFLAGS -L$with_libesmtp/lib\"\n\t\tAC_CHECK_HEADER(libesmtp.h, [LIBESMTP_CFLAGS=\"-I$with_libesmtp/include\"\n\t\t\t\t\t     LIBESMTP_LIBS=\"-L$with_libesmtp/lib -lesmtp\"], [libesmtp=no])\n\t\tCPPFLAGS=\"$CPPFLAGS_SAVE\"\n\t\tLDFLAGS=\"$LDFLAGS_SAVE\"\n\telse\n\t\tPKG_CHECK_MODULES(LIBESMTP, libesmtp-1.0, libesmtp=\"yes\", libesmtp=\"no\")\n\t\tif test \"x$libesmtp\" = \"xno\"; then\n\t\t\tAC_MSG_CHECKING(for libESMTP with libesmtp-config)\n\t\t\tif libesmtp-config --version >/dev/null 2>&1; then\n\t\t\t\tAC_MSG_RESULT(yes)\n\t\t\t\tLIBESMTP_CFLAGS=\"`libesmtp-config --cflags`\"\n\t\t\t\tLIBESMTP_LIBS=\"`libesmtp-config --libs`\"\n\t\t\t\tlibesmtp=\"yes\"\n\t\t\telse\n\t\t\t\tAC_MSG_RESULT(no)\n\t\t\t\tlibesmtp=no\n\t\t\tfi\n                fi\n\tfi\n\tif test \"x$enable_smtp\" = \"xyes\" && test \"x$libesmtp\" = \"xno\"; then\n\t\tAC_MSG_ERROR(libESMTP not found)\n\tfi\n\tenable_smtp=$libesmtp\nfi\n\ndnl ***************************************************************************\ndnl libmqtt headers/libraries\ndnl ***************************************************************************\n\nif test \"x$enable_mqtt\" = \"xyes\" || test \"x$enable_mqtt\" = \"xauto\"; then\n\tif test \"x$with_libpaho_mqtt\" != \"x\"; then\n\t\tCPPFLAGS_SAVE=\"$CPPFLAGS\"\n\t\tLDFLAGS_SAVE=\"$LDFLAGS\"\n\t\tCPPFLAGS=\"$CPPFLAGS -I$with_libpaho_mqtt/include\"\n\t\tLDFLAGS=\"$LDFLAGS -L$with_libpaho_mqtt -lpaho-mqtt3cs\"\n\t\tAC_CHECK_HEADER(MQTTClient.h, [LIBPAHO_MQTT_CFLAGS=\"-I$with_libpaho_mqtt/include\"\n\t\t\t\t\t\tLIBPAHO_MQTT_LIBS=\"-L$with_libpaho_mqtt/lib -lpaho-mqtt3cs\"\n\t\t\t\t\t\tlibpaho_mqtt=\"yes\"], [libpaho_mqtt=no])\n\n\t\tCPPFLAGS=\"$CPPFLAGS_SAVE\"\n\t\tLDFLAGS=\"$LDFLAGS_SAVE\"\n\telse\n\t\tAC_CHECK_LIB(paho-mqtt3cs, MQTTClient_create, LIBPAHO_MQTT_LIBS=\"-lpaho-mqtt3cs\"; libpaho_mqtt=\"yes\", libpaho_mqtt=\"no\")\n\tfi\n\tif test \"x$enable_mqtt\" = \"xyes\" && test \"x$libpaho_mqtt\" = \"xno\"; then\n\t\tAC_MSG_ERROR(libPAHO_MQTT not found)\n\tfi\n\n\tif test \"x$libpaho_mqtt\" = \"xyes\"; then\n\t\tCPPFLAGS_SAVE=\"$CPPFLAGS\"\n\t\tLDFLAGS_SAVE=\"$LDFLAGS\"\n\t\tCPPFLAGS=\"$CPPFLAGS $LIBPAHO_MQTT_CFLAGS\"\n\t\tLDFLAGS=\"$LDFLAGS $LIBPAHO_MQTT_LIBS\"\n\n\t\tAC_CHECK_MEMBER([MQTTClient_connectOptions.httpProxy],\n\t\t\t\t[have_paho_http_proxy=1],\n\t\t\t\t[have_paho_http_proxy=0],\n\t\t\t\t[[#include \"MQTTClient.h\"]])\n\n\t\tCPPFLAGS=\"$CPPFLAGS_SAVE\"\n\t\tLDFLAGS=\"$LDFLAGS_SAVE\"\n\n\t\tAC_DEFINE_UNQUOTED(HAVE_PAHO_HTTP_PROXY, $have_paho_http_proxy, [libpaho-mqtt supports MQTTClient_connectOptions::httpProxy])\n\tfi\n\n\tenable_mqtt=$libpaho_mqtt\nfi\n\ndnl ***************************************************************************\ndnl GRPC headers/libraries\ndnl ***************************************************************************\n\n# C++\nif ! test \"x$enable_grpc\" = \"xno\"; then\n    if test \"x$enable_cpp\" = \"xno\"; then\n        if test \"x$enable_grpc\" = \"xyes\"; then\n            AC_MSG_ERROR(C++ support is mandatory when the GRPC modules are enabled.)\n        else\n            enable_grpc=no\n        fi\n    fi\nfi\n\n# ProtoBuf libraries\nif ! test \"x$enable_grpc\" = \"xno\"; then\n    PKG_CHECK_MODULES(PROTOBUF, protobuf >= $PROTOBUF_MIN_VERSION, protobuf_found=\"yes\", protobuf_found=\"no\")\n    if test \"$protobuf_found\" = \"no\"; then\n        if test \"x$enable_grpc\" = \"xyes\"; then\n            AC_MSG_ERROR(ProtoBuf libraries not found.)\n        else\n            enable_grpc=no\n        fi\n    fi\nfi\n\n# ProtoC compiler\nif ! test \"x$enable_grpc\" = \"xno\"; then\n    if ! test \"x$with_protoc\" = \"x\"; then\n        PROTOC=$with_protoc\n    else\n        AC_PATH_PROG([PROTOC], [protoc])\n        if test \"x$PROTOC\" = \"x\"; then\n            if test \"x$enable_grpc\" = \"xyes\"; then\n                AC_MSG_ERROR(ProtoBuf compiler \"protoc\" not found.)\n            else\n                enable_grpc=no\n            fi\n        else\n            PROTOC_VERSION=`${PROTOC} --version | cut -f2 -d' '`\n            PROTOC_VERSION_MAJOR=`echo $PROTOC_VERSION | cut -f1 -d'.'`\n            PROTOC_VERSION_MINOR=`echo $PROTOC_VERSION | cut -f2 -d'.'`\n            PROTOC_VERSION_PATCH=`echo $PROTOC_VERSION | cut -f3 -d'.'`\n        fi\n    fi\nfi\n\n# GRPC CPP plugin for ProtoC compiler\nif ! test \"x$enable_grpc\" = \"xno\"; then\n    if ! test \"x$with_protoc_gen_grpc_cpp_plugin\" = \"x\"; then\n        PROTOC_GEN_GRPC_CPP_PLUGIN=$with_protoc_gen_grpc_cpp_plugin\n    else\n        AC_PATH_PROG([PROTOC_GEN_GRPC_CPP_PLUGIN], [grpc_cpp_plugin])\n        if test \"x$PROTOC_GEN_GRPC_CPP_PLUGIN\" = \"x\"; then\n            if test \"x$enable_grpc\" = \"xyes\"; then\n                AC_MSG_ERROR(GRPC CPP plugin for ProtoC compiler not found.)\n            else\n                enable_grpc=no\n            fi\n        fi\n    fi\n\n    if ! test \"x$PROTOC_GEN_GRPC_CPP_PLUGIN\" = \"x\"; then\n        PROTOC_GEN_GRPC_CPP_PLUGIN_FLAGS='--plugin=protoc-gen-grpc-cpp=\"${PROTOC_GEN_GRPC_CPP_PLUGIN}\"'\n\n        if test ${PROTOC_VERSION_MAJOR} -eq 3 -a ${PROTOC_VERSION_MINOR} -lt 15; then\n            PROTOC_GEN_GRPC_CPP_PLUGIN_FLAGS=\"${PROTOC_GEN_GRPC_CPP_PLUGIN_FLAGS} --experimental_allow_proto3_optional\"\n        fi\n\n        AC_SUBST(PROTOC_GEN_GRPC_CPP_PLUGIN_FLAGS)\n    fi\nfi\n\n# GRPC++ libraries\nif ! test \"x$enable_grpc\" = \"xno\"; then\n    PKG_CHECK_MODULES(GRPCPP, grpc++ >= $GRPCPP_MIN_VERSION, grpcpp_found=\"yes\", grpcpp_found=\"no\")\n    if test \"$grpcpp_found\" = \"no\"; then\n        if test \"x$enable_grpc\" = \"xyes\"; then\n            AC_MSG_ERROR(GRPC++ libraries not found.)\n        else\n            enable_grpc=no\n        fi\n    fi\nfi\n\nif ! test \"x$enable_grpc\" = \"xno\"; then\n    enable_grpc=yes\nfi\n\n\ndnl ***************************************************************************\ndnl libcurl headers/libraries\ndnl ***************************************************************************\nif test \"x$enable_http\" != \"xno\" && test \"x$with_libcurl\" != \"xno\"; then\n\tlibcurl=\"yes\"\n\tif test \"x$with_libcurl\" != \"xyes\" && test \"x$with_libcurl\" != \"x\"; then\n\t\tCPPFLAGS_SAVE=\"$CPPFLAGS\"\n\t\tLDFLAGS_SAVE=\"$LDFLAGS\"\n\t\tCPPFLAGS=\"$CPPFLAGS -I$with_libcurl/include\"\n\t\tLDFLAGS=\"$LDFLAGS -L$with_libcurl/lib\"\n\t\tAC_CHECK_HEADER(curl/curl.h, [LIBCURL_CFLAGS=\"-I$with_libcurl/include\"\n\t\t\t\t\t     LIBCURL_LIBS=\"-L$with_libcurl/lib -lcurl\"], [libcurl=no])\n\t\tCPPFLAGS=\"$CPPFLAGS_SAVE\"\n\t\tLDFLAGS=\"$LDFLAGS_SAVE\"\n\telse\n\t\tAC_MSG_CHECKING(for libcurl)\n\t\tif curl-config --version >/dev/null 2>&1; then\n\t\t\tAC_MSG_RESULT(yes)\n\t\t\tLIBCURL_CFLAGS=\"`curl-config --cflags`\"\n\t\t\tLIBCURL_LIBS=\"`curl-config --libs`\"\n\t\telse\n\t\t\tAC_MSG_RESULT(no)\n\t\t\tlibcurl=no\n\t\tfi\n\tfi\n\tif test \"x$enable_http\" = \"xyes\" && test \"x$libcurl\" = \"xno\"; then\n\t\tAC_MSG_ERROR(libcurl not found)\n\tfi\n\tenable_http=$libcurl\n\n        if test \"$enable_http\" = \"yes\"; then\n           old_CFLAGS=$CFLAGS\n           CFLAGS=$LIBCURL_CFLAGS\n           AC_CHECK_DECLS([CURL_SSLVERSION_TLSv1_0, CURL_SSLVERSION_TLSv1_1, CURL_SSLVERSION_TLSv1_2, CURL_SSLVERSION_TLSv1_3, CURLOPT_TLS13_CIPHERS, CURLOPT_SSL_VERIFYSTATUS, CURLOPT_REDIR_PROTOCOLS_STR, curl_url, CURLU_ALLOW_SPACE, CURLUE_BAD_SCHEME, CURLUE_BAD_HOSTNAME, CURLUE_BAD_PORT_NUMBER, CURLUE_BAD_USER, CURLUE_BAD_PASSWORD, CURLUE_MALFORMED_INPUT, CURLUE_LAST, CURLUPART_SCHEME, CURLUPART_HOST, CURLUPART_PORT, CURLUPART_USER, CURLUPART_PASSWORD, CURLUPART_URL],\n                          [], [],\n                          [[#include <curl/curl.h>]])\n           CFLAGS=$old_CFLAGS\n\t\t   AC_CHECK_HEADER(zlib.h, AC_DEFINE(HAVE_ZLIB, , [Define if zlib is available]), AC_MSG_WARN([ZLIB not found.]))\n        fi\nelse\n\tenable_http=\"no\"\nfi\n\ndnl ***************************************************************************\ndnl Cloud Auth\ndnl ***************************************************************************\nif ! test \"x$enable_cloud_auth\" = \"xno\"; then\n    if test \"x$enable_cpp\" = \"xno\"; then\n        if test \"x$enable_cloud_auth\" = \"xyes\"; then\n            AC_MSG_ERROR(C++ support is mandatory when the cloud-auth module is enabled.)\n        else\n            enable_cloud_auth=no\n        fi\n    fi\n    if test \"x$enable_http\" = \"xno\"; then\n        if test \"x$enable_cloud_auth\" = \"xyes\"; then\n            AC_MSG_ERROR(http support is mandatory when the cloud-auth module is enabled.)\n        else\n            enable_cloud_auth=no\n        fi\n    fi\nfi\n\nif ! test \"x$enable_cloud_auth\" = \"xno\"; then\n    enable_cloud_auth=yes\nfi\n\n\ndnl ***************************************************************************\ndnl libhiredis headers/libraries\ndnl ***************************************************************************\nif test \"x$enable_redis\" != \"xno\" && test \"x$with_redis\" != \"xno\"; then\n       hiredis=\"yes\"\n       if test \"x$with_libhiredis\" != \"xyes\" && test \"x$with_libhiredis\" != \"x\"; then\n               CFLAGS_SAVE=\"$CFLAGS\"\n               LDFLAGS_SAVE=\"$LDFLAGS\"\n               CFLAGS=\"$CFLAGS -I$with_libhiredis/include\"\n               LDFLAGS=\"$LDFLAGS -L$with_libhiredis/lib\"\n               AC_CHECK_HEADER(hiredis/hiredis.h, [HIREDIS_CFLAGS=\"-I$with_libhiredis/include\"\n                                                   HIREDIS_LIBS=\"-L$with_libhiredis/lib -lhiredis\"], [hiredis=no])\n               CFLAGS=\"$CFLAGS_SAVE\"\n               LDFLAGS=\"$LDFLAGS_SAVE\"\n       else\n               hiredis=\"yes\"\n               PKG_CHECK_MODULES(HIREDIS, hiredis >= $HIREDIS_MIN_VERSION, ,\n                                 [AC_MSG_WARN([pkg-config was not able to find hiredis >= $HIREDIS_MIN_VERSION])\n\t\t\t\t  PKG_CHECK_MODULES(HIREDIS, libhiredis >= $HIREDIS_MIN_VERSION,,\n\t\t\t\t  [AC_MSG_WARN([pkg-config was not able to find libhiredis >= $HIREDIS_MIN_VERSION])\n\t\t\t\t   hiredis=no])])\n       fi\n\n       if test \"x$enable_redis\" = \"xyes\" && test \"x$hiredis\" = \"xno\"; then\n               AC_MSG_ERROR(libHIREDIS not found)\n       fi\n\n       enable_redis=$hiredis\nfi\n\ndnl ***************************************************************************\ndnl rabbitmq-c headers/libraries\ndnl ***************************************************************************\n\nPKG_CHECK_MODULES(LIBRABBITMQ, librabbitmq >= $LIBRABBITMQ_MIN_VERSION, with_librabbitmq_client=\"yes\", with_librabbitmq_client=\"no\")\n\nif test \"$enable_amqp\" = \"yes\" && test \"$with_librabbitmq_client\" = \"no\"; then\n       AC_MSG_ERROR([Could not find librabbitmq-c, and AMQP support was explicitly enabled.])\nfi\n\nCFLAGS_SAVE=\"$CFLAGS\"\nCFLAGS=\"$CFLAGS $LIBRABBITMQ_CFLAGS\"\nold_LIBS=$LIBS\nLIBS=$LIBRABBITMQ_LIBS\n\nAC_CHECK_FUNCS(amqp_ssl_socket_set_verify_peer)\nAC_CHECK_HEADERS(rabbitmq-c/tcp_socket.h)\n\nLIBS=$old_LIBS\nCFLAGS=\"$CFLAGS_SAVE\"\n\ndnl ***************************************************************************\ndnl rdkafka headers/libraries\ndnl ***************************************************************************\n\nPKG_CHECK_MODULES(LIBRDKAFKA, rdkafka >= $LIBRDKAFKA_MIN_VERSION, with_librdkafka=\"yes\", with_librdkafka=\"no\")\n\nif test \"$enable_kafka\" = \"yes\" && test \"$with_librdkafka\" = \"no\"; then\n       AC_MSG_ERROR([Could not find librdkafka, and Kafka support was explicitly enabled.])\nfi\n\ndnl\ndnl Check if librdkafka has transactional api\ndnl\n\nold_LIBS=$LIBS\nold_CFLAGS=$CFLAGS\nLIBS=$LIBRDKAFKA_LIBS\nCFLAGS=$LIBRDKAFKA_CFLAGS\nAC_CHECK_FUNCS(rd_kafka_init_transactions)\nLIBS=$old_LIBS\nCFLAGS=$old_CFLAGS\n\n\nif test \"x$enable_native\" = \"xyes\" -o \"x$enable_native\" = \"xauto\"; then\n    AC_CONFIG_FILES([syslog-ng-native-connector.pc])\nfi\n\ndnl ***************************************************************************\ndnl riemann-client headers/libraries\ndnl ***************************************************************************\nif test \"$enable_riemann\" != \"no\"; then\n PKG_CHECK_MODULES(RIEMANN_CLIENT, riemann-client >= $LRC_MIN_VERSION,,riemann_found=\"no\")\n if test \"$riemann_found\" = \"no\" && test \"$enable_riemann\" = \"yes\"; then\n   AC_MSG_ERROR([Dependency for Riemann not found!])\n fi\n if test \"$riemann_found\" = \"no\"; then\n   enable_riemann=\"no\";\n else\n   enable_riemann=\"yes\";\n fi\n\n if test \"$enable_riemann\" = \"yes\"; then\n\n    old_CFLAGS=$CFLAGS\n    CFLAGS=`pkg-config --cflags riemann-client`\n    AC_CHECK_DECLS(RIEMANN_EVENT_FIELD_TIME_MICROS,\n                  AC_DEFINE(HAVE_RIEMANN_MICROSECONDS, 1, [Riemann microseconds support]),,\n                  [[#include <riemann/event.h>]])\n    CFLAGS=$old_CFLAGS\n fi\nfi\n\ndnl ***************************************************************************\ndnl libsystemd headers/libraries\ndnl ***************************************************************************\n\nPKG_CHECK_MODULES(libsystemd, libsystemd >= ${LIBSYSTEMD_MIN_VERSION},\n                  have_libsystemd=\"yes\", have_libsystemd=\"no\")\n\nPKG_CHECK_MODULES(libsystemd_namespaces, libsystemd >= ${LIBSYSTEMD_WITH_JOURNAL_NAMESPACES_MIN_VERSION},\n                  journal_namespaces=\"yes\", journal_namespaces=\"no\")\n\ndnl ***************************************************************************\ndnl python checks\ndnl ***************************************************************************\nif test \"x$enable_python\" != \"xno\"; then\n  if test \"x$with_python\" = \"xauto\"; then\n    PKG_CHECK_MODULES(PYTHON, python3-embed, python_found=\"yes\", [\n      PKG_CHECK_MODULES(PYTHON, python3, python_found=\"yes\", python_found=\"no\")\n    ])\n  else\n    case \"$with_python\" in\n      [[0-9]])\n          with_python=\"python${with_python}\"\n          ;;\n      [[0-9]].[[0-9]])\n          with_python=\"python-${with_python}\"\n          ;;\n      [[0-9]].[[0-9][0-9]])\n          with_python=\"python-${with_python}\"\n          ;;\n    esac\n\n    PKG_CHECK_MODULES(PYTHON, $with_python-embed, python_found=\"yes\", [\n      PKG_CHECK_MODULES(PYTHON, $with_python, python_found=\"yes\", python_found=\"no\")\n    ])\n  fi\n\n  if test \"x$enable_python\" = \"xyes\" -a \"x$python_found\" = \"xno\"; then\n    AC_MSG_ERROR([Could not find the requested Python development libraries])\n  fi\n  enable_python=\"$python_found\"\nelse\n  with_python=\"\"\nfi\n\nif test \"x$enable_python\" = \"xyes\"; then\n    if test \"x$with_python_packages\" = \"xvenv\"; then\n        PYTHON_VENV_DIR=`pwd`/venv\n        PYTHON_VENV=${PYTHON_VENV_DIR}/bin/python\n    elif test \"x$with_python_packages\" = \"xnone\"; then\n        PYTHON_VENV=$PYTHON\n    else\n        with_python_packages=\"system\"\n        PYTHON_VENV=$PYTHON\n    fi\nfi\n\ndnl ***************************************************************************\ndnl python modules\ndnl ***************************************************************************\n\nif test \"x$enable_python_modules\" = \"xauto\"; then\n    enable_python_modules=$enable_python\nfi\n\ndnl ***************************************************************************\ndnl docbook\ndnl ***************************************************************************\n\nif test \"x$enable_manpages\" != \"xno\"; then\n    if test \"x$with_docbook\" = \"xauto\"; then\n        XSL_STYLESHEET=`find /usr/share/{xml,sgml} -path '*/manpages/docbook.xsl' 2>/dev/null | head -n 1`\n        if test -z \"$XSL_STYLESHEET\"; then\n            XSL_STYLESHEET=\"http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl\"\n        fi\n    else\n        XSL_STYLESHEET=$with_docbook\n    fi\nfi\n\nif test \"x$enable_manpages_install\" = \"xauto\"; then\n    dnl do we have the generated manpages (part of the tarball but not in git)\n    if test -f doc/man/syslog-ng.8 -o \"x$enable_manpages\" = \"xyes\"; then\n        enable_manpages_install=yes\n    else\n        enable_manpages_install=no\n    fi\nfi\n\ndnl ***************************************************************************\ndnl java headers/libraries\ndnl ***************************************************************************\n\nif test \"x$enable_java\" = \"xauto\" || test \"x$enable_java\" = \"xyes\"; then\n    if test \"x$enable_java\" = \"xauto\"; then\n      AC_CHECK_JAVA_VERSION([$JAVA_MIN_VERSION], [enable_java=yes], [enable_java=no])\n    else\n      AC_CHECK_JAVA_VERSION([$JAVA_MIN_VERSION], [enable_java=yes], [AC_MSG_ERROR([Java not found])])\n    fi\nfi\n\nif test \"x$enable_java\" = \"xyes\"; then\n    if test \"x$enable_java_modules\" = \"xauto\" || test \"x$enable_java_modules\" = \"xyes\"; then\n        if test \"x$enable_java_modules\" = \"xauto\"; then\n          AC_CHECK_GRADLE_VERSION([$GRADLE_MIN_VERSION], [enable_java_modules=yes], [enable_java_modules=no])\n        else\n          AC_CHECK_GRADLE_VERSION([$GRADLE_MIN_VERSION], [enable_java_modules=yes], [AC_MSG_ERROR([Gradle not found])])\n        fi\n    fi\nelse\n    if test \"x$enable_java_modules\" = \"xyes\"; then\n        AC_MSG_ERROR([Could not build Java modules without Java])\n    elif test \"x$enable_java_modules\" = \"xauto\"; then\n        AC_MSG_WARN([Could not build Java modules without Java])\n\tenable_java_modules=no\n    fi\nfi\n\ndnl ***************************************************************************\ndnl darwin osl headers/libraries\ndnl ***************************************************************************\n\nif test \"x$enable_darwin_osl\" = \"xauto\" || test \"x$enable_darwin_osl\" = \"xyes\"; then\n        if test $ostype = \"Darwin\"; then\n                if test \"x$enable_darwin_osl\" = \"xyes\"; then\n                        WAS_DARWIN_OSL_FORCED=\"yes\"\n                fi\n\n                AC_LANG_PUSH([Objective C])\n\n                # TODO: Once gcc was able to compile our ObjC code correctly we should add here a more sopgisticated check\n                AC_CHECK_HEADERS([OSLog/OSLog.h], [enable_darwin_osl=yes], [enable_darwin_osl=no])\n\n                AC_LANG_POP([Objective C])\n\n                if test \"$WAS_DARWIN_OSL_FORCED\" = \"yes\" && test \"$enable_darwin_osl\" = \"no\"; then\n                        AC_MSG_ERROR([Could not build Darwin OSLog without OSLog headers])\n                fi\n        else\n                enable_darwin_osl=no\n        fi\nfi\n\ndnl ***************************************************************************\ndnl misc features to be enabled\ndnl ***************************************************************************\n\nif test \"x$ac_cv_lib_door_door_create\" = \"xyes\"; then\n        AC_CHECK_HEADERS(pthread.h)\n        AC_CHECK_LIB(pthread, pthread_create)\nfi\n\nAC_MSG_CHECKING(whether to enable Sun STREAMS support)\nif test \"x$ac_cv_header_stropts_h\" = \"xyes\" -a \\\n        \"x$ac_cv_header_sys_strlog_h\" = \"xyes\" -a \\\n        \"x$enable_sun_streams\" != \"xno\" -a \\\n        \"x$blb_cv_c_i_conslog\" != \"xno\"; then\n        enable_sun_streams=yes\n        AC_MSG_RESULT(yes)\nelse\n        enable_sun_streams=no\n        AC_MSG_RESULT(no)\nfi\n\nAC_MSG_CHECKING(whether to enable OpenBSD system source support)\nif test \"x$enable_openbsd_system_source\" = \"xyes\"; then\n        enable_openbsd_system_source=\"yes\"\n        AC_MSG_RESULT(yes)\nelif test \"x$enable_openbsd_system_source\" = \"xauto\" -a \\\n        \"$ostype\" = \"OpenBSD\" ; then\n        enable_openbsd_system_source=\"yes\"\n        AC_MSG_RESULT(yes)\nelse\n        enable_openbsd_system_source=\"no\"\n        AC_MSG_RESULT(no)\nfi\n\nif test \"x$enable_env_wrapper\" = \"xauto\"; then\n\tif test \"x$env_ld_library_path\" != \"x\"; then\n\t\tenable_env_wrapper=\"yes\"\n\telse\n\t\tenable_env_wrapper=\"no\"\n\tfi\nfi\n\nif test \"x$enable_ipv6\" = \"xauto\"; then\n\tAC_MSG_CHECKING(whether to enable IPv6 support)\n        if test \"x$blb_cv_c_struct_sockaddr_in6\" = \"xyes\"; then\n                enable_ipv6=yes\n                AC_MSG_RESULT(yes)\n        else\n                enable_ipv6=no\n                AC_MSG_RESULT(no)\n        fi\nfi\n\nAC_CHECK_DECLS([TCP_KEEPIDLE, TCP_KEEPINTVL, TCP_KEEPCNT], [], [],\n                [[#include <sys/socket.h>\n                  #include <netinet/in.h>\n                  #include <netinet/tcp.h>]])\n\nif test \"x$ac_cv_have_decl_TCP_KEEPIDLE\" = \"xyes\" -a \"x$ac_cv_have_decl_TCP_KEEPINTVL\" = \"xyes\" -a \"x$ac_cv_have_decl_TCP_KEEPCNT\" = \"xyes\"; then\n        AC_DEFINE(HAVE_TCP_KEEPALIVE_TIMERS, 1, [TCP keepalive timers])\nfi\n\nif test \"x$enable_linux_caps\" = \"xyes\" -o \"x$enable_linux_caps\" = \"xauto\"; then\n        PKG_CHECK_MODULES(LIBCAP, libcap, has_linux_caps=\"yes\", has_linux_caps=\"no\")\n\n        if test \"x$has_linux_caps\" = \"xno\"; then\n                if test \"x$ac_cv_header_sys_capability_h\" = \"xyes\"; then\n                        AC_CHECK_LIB(cap, cap_set_proc, LIBCAP_LIBS=\"-lcap\"; has_linux_caps=\"yes\", has_linux_caps=\"no\")\n                else\n                        has_linux_caps=\"no\"\n                fi\n                AC_MSG_CHECKING(whether to enable Linux capability support)\n                AC_MSG_RESULT([$has_linux_caps])\n        fi\n\n        if test \"x$enable_linux_caps\" = \"xyes\" -a \"x$has_linux_caps\" = \"xno\"; then\n           AC_MSG_ERROR([Cannot enable Linux capability support.])\n        fi\n\n        enable_linux_caps=\"$has_linux_caps\"\nfi\n\nif test \"x$enable_mongodb\" = \"xauto\"; then\n\tAC_MSG_CHECKING(whether to enable mongodb destination support)\n\tif test \"x$with_mongoc\" != \"xno\"; then\n\t\tenable_mongodb=\"yes\"\n\telse\n\t\tenable_mongodb=\"no\"\n\tfi\n\tAC_MSG_RESULT([$enable_mongodb])\nfi\n\nif test \"x$enable_amqp\" = \"xauto\"; then\n    AC_MSG_CHECKING(whether to enable amqp destination support)\n    if test \"x$with_librabbitmq_client\" != \"xno\"; then\n        enable_amqp=\"yes\"\n    else\n        enable_amqp=\"no\"\n    fi\n    AC_MSG_RESULT([$enable_amqp])\nfi\n\nif test \"x$enable_kafka\" = \"xauto\"; then\n    AC_MSG_CHECKING(whether to enable kafka support)\n    if test \"x$with_librdkafka\" != \"xno\"; then\n        enable_kafka=\"yes\"\n    else\n        enable_kafka=\"no\"\n    fi\n    AC_MSG_RESULT([$enable_kafka])\nfi\n\nif test \"x$enable_systemd\" = \"xauto\"; then\n\tif test \"$ostype\" = \"Linux\" -a \"$have_libsystemd\" = \"yes\"; then\n\t\tenable_systemd=yes\n\telse\n\t\tenable_systemd=no\n\tfi\n\nfi\n\nif test \"x$enable_systemd\" != \"xyes\"; then\n  if test \"x$with_systemd_journal\" = \"xauto\"; then\n    with_systemd_journal=no\n  fi\nfi\n\nif test \"x$enable_systemd\" = \"xyes\"; then\n\n        if test \"x$with_systemdsystemunitdir\" = \"xyes\"; then\n\t\t# no arguments, just --with-systemdsystemunitdir\n\t\tsystemdsystemunitdir=`$PKG_CONFIG --variable=systemdsystemunitdir systemd`\n\t\tif test \"$systemdsystemunitdir\" = \"\"; then\n\t\t\tAC_MSG_ERROR([Error autodetecting systemdsystemunitdir, systemd pkg-config file not found?])\n\t\tfi\n\telif test \"$systemdsystemunitdir\" = \"no\"; then\n\t\t# --without-systemdsystemunitdir was specified\n\t\tsystemdsystemunitdir=\"\"\n\telse\n\t\tsystemdsystemunitdir=\"$with_systemdsystemunitdir\"\n\tfi\n\n        if test \"x$have_libsystemd\" = \"xno\"; then\n\t    PKG_CHECK_MODULES(libsystemd_daemon, libsystemd-daemon >= 31,enable_systemd=\"yes\",enable_systemd=\"no\")\n            if test \"x$with_systemd_journal\" = \"xauto\"; then\n                PKG_CHECK_MODULES(LIBSYSTEMD_JOURNAL, libsystemd-journal >= $JOURNALD_MIN_VERSION,\n                                  with_systemd_journal=system, with_systemd_journal=optional)\n            elif test \"x$with_systemd_journal\" = \"xsystem\"; then\n                PKG_CHECK_MODULES(LIBSYSTEMD_JOURNAL, libsystemd-journal >= $JOURNALD_MIN_VERSION,,\n                                  AC_MSG_ERROR([Detecting system related systemd-journal library failed]))\n            fi\n            libsystemd_CFLAGS=\"${LIBSYSTEMD_JOURNAL_CFLAGS} ${libsystemd_daemon_CFLAGS}\"\n            libsystemd_LIBS=\"${LIBSYSTEMD_JOURNAL_LIBS} ${libsystemd_daemon_LIBS}\"\n            AC_SUBST(libsystemd_CFLAGS)\n            AC_SUBST(libsystemd_LIBS)\n        else\n            if test \"x$with_systemd_journal\" = \"xauto\"; then\n                with_systemd_journal=\"system\"\n            fi\n        fi\nfi\n\n\nif test \"x$enable_ebpf\" = \"xyes\"; then\n\tPKG_CHECK_MODULES(LIBBPF, libbpf >= $LIBBPF_MIN_VERSION)\n\n\t# we are using a distinct C compiler for compiling BPF code and\n\t# pkg-config removes builtin paths from its output.  Reference it\n\t# directly.\n\n\tLIBBPF_INCLUDE=`$PKG_CONFIG --variable includedir libbpf`\n        AC_PATH_PROG(BPFTOOL, bpftool)\n        AC_PATH_PROG(BPF_CC, clang)\n\n\tif test \"$BPFTOOL\" = \"\" -o \"$BPF_CC\" = \"\"; then\n\t\tAC_MSG_ERROR([eBPF toolchain is required to build with eBPF (bpftool and clang)])\n\tfi\n\n        AC_SUBST(BPFTOOL)\n        AC_SUBST(BPF_CC)\nfi\n\ndnl ***************************************************************************\ndnl check if we have timezone variable in <time.h>\ndnl ***************************************************************************\nAC_VAR_TIMEZONE_EXTERNALS\n\ndnl ***************************************************************************\ndnl check fmemopen\ndnl ***************************************************************************\nAC_CHECK_FUNCS([fmemopen])\n\ndnl ***************************************************************************\ndnl sanitizer\ndnl ***************************************************************************\n\nif  test \"x$with_sanitizer\" != \"xno\"; then\n   CFLAGS=\"$CFLAGS -O1 -fsanitize=$with_sanitizer -fno-omit-frame-pointer\"\nfi\n\ndnl ***************************************************************************\ndnl default modules to be loaded\ndnl ***************************************************************************\n\n### The default set of modules are those that provide functionality that\n### were provided in syslog-ng 3.2 and prior, unless explicitly overridden\n### by the user.\n###\n### New plugins can be loaded by explicit \"@module foo\" lines in the\n### configuration file, or by the autoloading mechanism.\n\nif test \"x$module_path\" = \"x\"; then\n\tmodule_path=\"$moduledir\"\n\tjava_module_path=\"$moduledir\"/java-modules\nfi\n\npython_moduledir=\"$moduledir\"/python\npython_sysconf_moduledir=\"${sysconfdir}/python\"\n\nCPPFLAGS=\"$CPPFLAGS $GLIB_CFLAGS $EVTLOG_CFLAGS $PCRE2_CFLAGS $OPENSSL_CFLAGS $LIBNET_CFLAGS $LIBDBI_CFLAGS $IVYKIS_CFLAGS $JSON_CFLAGS $LIBCAP_CFLAGS -D_GNU_SOURCE -D_DEFAULT_SOURCE -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\"\n\n########################################################\n## NOTES: on how syslog-ng is linked\n#\n# There are two major linking modes currently:\n#   1) dynamic: all libraries are linked dynamically, and assumed to be available as dynamic libraries\n#\n#   2) mixed: typical system provided libraries are linked dynamicaly, the\n#      rest is linked statically (Glib etc).  Please note that _only_ the\n#      main syslog-ng executable is linked this way so that it can be\n#      started early during startup, tools and unit tests are linked\n#      dynamically the same way.\n#\n# The following variables are introduced and AC_SUBSTed to be used in Makefiles:\n#\n# SYSLOGNG_DEPS_LIBS:\n#       includes all dependendent libraries used by binary that can be linked in mixed mode (e.g. only the syslog-ng binary).\n#\n# TOOL_DEPS_LIBS:\n#       executables (e.g. tools & unit test programs) that link against\n#       libsyslog-ng.so should be linked with this set of libraries.  other\n#       tools that do not use libsyslog-ng.so can use the _LIBS variables\n#       directly.\n#\n# CORE_DEPS_LIBS:\n#\tlibsyslog-ng.so is linked with this set of libraries.\n#\n# MODULE_DEPS_LIBS:\n#       The set of libraries that modules should be linked against. Only to\n#       satisfy their \"core\" dependency, any other libs that the core doesn't\n#       depend on must be linked explicitly.\n#\n# MODULE_LDFLAGS:\n#       The LDFLAGS to be passed when linking modules (may not contain\n#       library references -l and such, only linker flags)\n#\n# Modules should be linked against libsyslog-ng.la and libraries that are\n# _NOT_ linked into libsyslog-ng.la no need to define a LIBS variable for\n# that.\n\n\nif test -z \"$MODULE_LDFLAGS\"; then\n\tMODULE_LDFLAGS=\"-avoid-version -module -no-undefined\"\nfi\nMODULE_DEPS_LIBS=\"\\$(top_builddir)/lib/libsyslog-ng.la\"\n\nif test \"x$linking_mode\" = \"xdynamic\"; then\n\tSYSLOGNG_DEPS_LIBS=\"$LIBS $BASE_LIBS $GLIB_LIBS $EVTLOG_LIBS $SECRETSTORAGE_LIBS $RESOLV_LIBS $LIBCAP_LIBS $PCRE2_LIBS $REGEX_LIBS $DL_LIBS\"\n\n\tif test \"x$with_ivykis\" = \"xinternal\"; then\n\t\t# when using the internal ivykis, we're linking it statically into libsyslog-ng.so\n\n\t\tTOOL_DEPS_LIBS=\"$SYSLOGNG_DEPS_LIBS\"\n\t\tCORE_DEPS_LIBS=\"$SYSLOGNG_DEPS_LIBS $IVYKIS_LIBS $JSON_LIBS\"\n\telse\n\t\t# otherwise everything needs to link against libivykis.so\n\n\t\tSYSLOGNG_DEPS_LIBS=\"$SYSLOGNG_DEPS_LIBS $IVYKIS_LIBS\"\n\n\t\tTOOL_DEPS_LIBS=\"$SYSLOGNG_DEPS_LIBS\"\n\t\tCORE_DEPS_LIBS=\"$SYSLOGNG_DEPS_LIBS $JSON_LIBS\"\n\tfi\n\n\t# syslog-ng binary is linked with the default link command (e.g. libtool)\n\tSYSLOGNG_LINK='$(LINK)'\nelse\n\tSYSLOGNG_DEPS_LIBS=\"$LIBS $BASE_LIBS $RESOLV_LIBS $EVTLOG_NO_LIBTOOL_LIBS $SECRETSTORAGE_NO_LIBTOOL_LIBS $LD_START_STATIC -Wl,${WHOLE_ARCHIVE_OPT} $GLIB_LIBS $PCRE2_LIBS $REGEX_LIBS  -Wl,${NO_WHOLE_ARCHIVE_OPT} $IVYKIS_NO_LIBTOOL_LIBS $LD_END_STATIC $LIBCAP_LIBS $DL_LIBS\"\n\tTOOL_DEPS_LIBS=\"$LIBS $BASE_LIBS $GLIB_LIBS $EVTLOG_LIBS $SECRETSTORAGE_LIBS $RESOLV_LIBS $LIBCAP_LIBS $PCRE2_LIBS $REGEX_LIBS $IVYKIS_LIBS $DL_LIBS\"\n\tCORE_DEPS_LIBS=\"\"\n\n\t# bypass libtool in case we want to do mixed linking because it\n\t# doesn't support -Wl,-Bstatic -Wl,-Bdynamic on a per-library basis.\n\tSYSLOGNG_LINK='$(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@'\nfi\nYFLAGS=\"-d\"\n\nenable_value()\n{\n        if test \"x$1\" = \"xyes\" ; then\n                echo 1\n        else\n                echo 0\n        fi\n}\n\njournald_mode()\n{\n  if test \"x$with_systemd_journal\" = \"xno\"; then\n    echo SYSLOG_NG_JOURNALD_OFF\n  elif test \"x$with_systemd_journal\" = \"xsystem\"; then\n    echo SYSLOG_NG_JOURNALD_SYSTEM\n  else\n    echo SYSLOG_NG_JOURNALD_OPTIONAL\n  fi\n}\n\nAC_DEFINE_UNQUOTED(JOURNALD_OFF, 0, [\"Disable systemd-journal source\"])\nAC_DEFINE_UNQUOTED(JOURNALD_OPTIONAL, 1, [\"Enable systemd-journal source if journald is available\"])\nAC_DEFINE_UNQUOTED(JOURNALD_SYSTEM, 2, [\"Force systemd-journal source to use system's journald\"])\nAC_DEFINE_UNQUOTED(HAVE_JOURNAL_NAMESPACES, `(test \"$journal_namespaces\" = \"yes\" ) && echo 1 || echo 0`, [have journal namespaces])\n\nAC_DEFINE_UNQUOTED(VERSION, \"$PACKAGE_VERSION\", [version number])\nAC_DEFINE_UNQUOTED(SOURCE_REVISION, \"$SOURCE_REVISION\", [source revision])\nAC_DEFINE_UNQUOTED(LICENSE_VERSION, \"$LICENSE_VERSION\", [Required license version])\n\nAC_DEFINE_UNQUOTED(PATH_PREFIX, \"$prefix\", [prefix directory])\nAC_DEFINE_UNQUOTED(PATH_EXECPREFIX, \"$exec_prefix\", [execprefix directory])\n\nAC_DEFINE_UNQUOTED(PATH_SYSCONFDIR, \"$sysconfdir\", [sysconfdir])\nAC_DEFINE_UNQUOTED(PATH_LOCALSTATEDIR, \"$localstatedir\", [local state directory])\nAC_DEFINE_UNQUOTED(PATH_PIDFILEDIR, \"$pidfiledir\", [local state directory])\nAC_DEFINE_UNQUOTED(PATH_DATAROOTDIR, \"$datarootdir\", [data root directory])\nAC_DEFINE_UNQUOTED(PATH_DATADIR, \"$datadir\", [data directory])\nAC_DEFINE_UNQUOTED(PATH_PKGDATADIR, \"$datadir/$PACKAGE\", [pkgdata directory])\nAC_DEFINE_UNQUOTED(PATH_CONFIG_INCLUDEDIR, \"$config_includedir\", [include directory])\nAC_DEFINE_UNQUOTED(PATH_SCLDIR, \"$scldir\", [SCL directory])\nAC_DEFINE_UNQUOTED(PATH_XSDDIR, \"$xsddir\", [XSD directory])\nAC_DEFINE_UNQUOTED(PATH_LIBEXECDIR, \"$libexecdir\", [libexec directory])\nif test -n \"$timezonedir\"; then\n        AC_DEFINE_UNQUOTED(PATH_TIMEZONEDIR, \"$timezonedir\", [timezone base directory])\nfi\nif test -n \"$env_ld_library_path\"; then\n        AC_DEFINE_UNQUOTED(ENV_LD_LIBRARY_PATH, \"$env_ld_library_path\", [set LD_LIBRARY_PATH to this value])\nfi\nAC_DEFINE_UNQUOTED(PATH_MODULEDIR, \"$moduledir\", [module installation directory])\nAC_DEFINE_UNQUOTED(PYTHON_MODULE_DIR, \"$python_moduledir\", [Python module installation directory])\nAC_DEFINE_UNQUOTED(PYTHON_VENV_DIR, \"$python_venvdir\", [Python virtualenv for hosting Python dependencies])\nAC_DEFINE_UNQUOTED(PYTHON3_HOME_DIR, \"$python3_home_dir\", [Hard-coded Python 3 home directory])\nAC_DEFINE_UNQUOTED(PYTHON_SYSCONF_MODULE_DIR, \"$python_sysconf_moduledir\", [Python module installation directory])\nAC_DEFINE_UNQUOTED(PATH_LOGGENPLUGINDIR, \"$loggenplugindir\", [loggenplugin installation directory])\nAC_DEFINE_UNQUOTED(MODULE_PATH, \"$module_path\", [module search path])\nAC_DEFINE_UNQUOTED(JAVA_MODULE_PATH, \"$java_module_path\", [java module search path])\nAC_DEFINE_UNQUOTED(PATH_TOPSRC_DIR, \"$abs_topsrcdir\", [self-defined top_srcdir path])\nAC_DEFINE_UNQUOTED(PACKAGE_NAME, \"$PACKAGE_NAME\", [package name])\n\n\nAC_DEFINE_UNQUOTED(WITH_COMPILE_DATE, $wcmp_date, [Include the compile date in the binary])\nAC_DEFINE_UNQUOTED(ENABLE_FORCED_SERVER_MODE, `enable_value $enable_forced_server_mode`, [Enable forced server mode])\nAC_DEFINE_UNQUOTED(ENABLE_DEBUG, `enable_value $enable_debug`, [Enable debugging])\nAC_DEFINE_UNQUOTED(ENABLE_GPROF, `enable_value $enable_gprof`, [Enable gcc profiling])\nAC_DEFINE_UNQUOTED(ENABLE_MEMTRACE, `enable_value $enable_memtrace`, [Enable memtrace])\nAC_DEFINE_UNQUOTED(ENABLE_SPOOF_SOURCE, `enable_value $enable_spoof_source`, [Enable spoof source support])\nAC_DEFINE_UNQUOTED(ENABLE_IPV6, `enable_value $enable_ipv6`, [Enable IPv6 support])\nAC_DEFINE_UNQUOTED(ENABLE_TCP_WRAPPER, `enable_value $enable_tcp_wrapper`, [Enable TCP wrapper support])\nAC_DEFINE_UNQUOTED(ENABLE_LINUX_CAPS, `enable_value $enable_linux_caps`, [Enable Linux capability management support])\nAC_DEFINE_UNQUOTED(ENABLE_EBPF, `enable_value $enable_ebpf`, [Enable Linux eBPF support])\nAC_DEFINE_UNQUOTED(ENABLE_ENV_WRAPPER, `enable_value $enable_env_wrapper`, [Enable environment wrapper support])\nAC_DEFINE_UNQUOTED(ENABLE_SYSTEMD, `enable_value $enable_systemd`, [Enable systemd support])\nAC_DEFINE_UNQUOTED(ENABLE_KAFKA, `enable_value $enable_kafka`, [Enable kafka support])\nAC_DEFINE_UNQUOTED(ENABLE_CPP, `enable_value $enable_cpp`, [Enable C++ support])\nAC_DEFINE_UNQUOTED(SYSTEMD_JOURNAL_MODE, `journald_mode`, [Systemd-journal support mode])\nAC_DEFINE_UNQUOTED(HAVE_INOTIFY, `enable_value $ac_cv_func_inotify_init`, [Have inotify])\nAC_DEFINE_UNQUOTED(HAVE_KQUEUE, `enable_value $ac_cv_func_kqueue`, [Have kqueue])\nAC_DEFINE_UNQUOTED(USE_CONST_IVYKIS_MOCK, `enable_value $IVYKIS_VERSION_UPDATED`, [ivykis version is greater than $IVYKIS_UPDATED_VERSION])\n\nAM_CONDITIONAL(ENABLE_ENV_WRAPPER, [test \"$enable_env_wrapper\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_SYSTEMD, [test \"$enable_systemd\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_SYSTEMD_UNIT_INSTALL, [test \"$systemdsystemunitdir\" != \"\"])\nAM_CONDITIONAL(ENABLE_SQL, [test \"$enable_sql\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_SUN_STREAMS, [test \"$enable_sun_streams\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_DARWIN_OSL, [test \"$enable_darwin_osl\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_OPENBSD_SYSTEM_SOURCE, [test \"$enable_openbsd_system_source\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_EBPF, [test \"$enable_ebpf\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_PACCT, [test \"$enable_pacct\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_MONGODB, [test \"$enable_mongodb\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_SMTP, [test \"$enable_smtp\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_MQTT, [test \"$enable_mqtt\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_CPP, [test \"$enable_cpp\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_GRPC, [test \"$enable_grpc\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_CLOUD_AUTH, [test \"$enable_cloud_auth\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_HTTP, [test \"$enable_http\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_AMQP, [test \"$enable_amqp\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_STOMP, [test \"$enable_stomp\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_JSON, [test \"$enable_json\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_GEOIP2, [test \"$enable_geoip2\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_REDIS, [test \"$enable_redis\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_KAFKA, [test \"$enable_kafka\" = \"yes\"])\nAM_CONDITIONAL(IVYKIS_INTERNAL, [test \"x$with_ivykis\" = \"xinternal\"])\nAM_CONDITIONAL(LIBMONGO_INTERNAL, [test \"x$LIBMONGO_SUBDIRS\" != \"x\"])\nAM_CONDITIONAL(LIBRABBITMQ_INTERNAL, [test \"x$with_librabbitmq_client\" = \"xinternal\"])\nAM_CONDITIONAL(ENABLE_RIEMANN, [test \"$enable_riemann\" != \"no\"])\nAM_CONDITIONAL(ENABLE_JOURNALD, [test \"$with_systemd_journal\" != \"no\"])\nAM_CONDITIONAL(ENABLE_PYTHON, [test \"$enable_python\" != \"no\"])\nAM_CONDITIONAL(ENABLE_PYTHON_MODULES, [test \"$enable_python_modules\" != \"no\"])\nAM_CONDITIONAL(ENABLE_JAVA, [test \"$enable_java\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_JAVA_MODULES, [test \"$enable_java_modules\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_AFSNMP, [test \"$enable_afsnmp\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_MANPAGES, [test \"$enable_manpages\" != \"no\"])\nAM_CONDITIONAL(ENABLE_MANPAGES_INSTALL, [test \"$enable_manpages_install\" != \"no\"])\nAM_CONDITIONAL(ENABLE_NATIVE, [test \"$enable_native\" != \"no\"])\nAM_CONDITIONAL(ENABLE_EXTRA_WARNINGS, [test \"$enable_extra_warnings\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_TESTING, [test \"$enable_tests\" != \"no\"])\nAM_CONDITIONAL(ENABLE_EXAMPLE_MODULES, [test \"$enable_example_modules\" = \"yes\"])\nAM_CONDITIONAL(ENABLE_SANITIZER, [test \"$with_sanitizer\" != \"no\"])\nAM_CONDITIONAL(ENABLE_DEBUG, [test \"$enable_debug\" != \"no\"])\nAM_CONDITIONAL([HAVE_INOTIFY], [test x$ac_cv_func_inotify_init = xyes])\nAM_CONDITIONAL([HAVE_KQUEUE], [test x$ac_cv_func_kqueue = xyes])\nAM_CONDITIONAL([HAVE_GETRANDOM], [test x$ac_cv_func_getrandom = xyes])\nAM_CONDITIONAL([HAVE_FMEMOPEN], [test x$ac_cv_func_fmemopen = xyes])\nAM_CONDITIONAL([HAVE_JAVAH], [test -n \"$JAVAH_BIN\"])\nAM_CONDITIONAL(ENABLE_IPV6, [test $enable_ipv6 = yes])\n\nAM_CONDITIONAL(OS_TYPE_MACOS, [test $ostype = \"Darwin\"])\nAM_CONDITIONAL(OS_TYPE_FREEBSD, [test $ostype = \"FreeBSD\"])\n\nAC_SUBST(PYTHON_VENV)\nAC_SUBST(PYTHON_VENV_DIR)\nAC_SUBST(with_python_packages)\nAC_SUBST(timezonedir)\nAC_SUBST(pidfiledir)\nAC_SUBST(moduledir)\nAC_SUBST(python_moduledir)\nAC_SUBST(python_venvdir)\nAC_SUBST(python_sysconf_moduledir)\nAC_SUBST(loggenplugindir)\nAC_SUBST(toolsdir)\nAC_SUBST(config_includedir)\nAC_SUBST(scldir)\nAC_SUBST(abs_topsrcdir)\nAC_SUBST(xsddir)\nAC_SUBST(systemdsystemunitdir)\nAC_SUBST(SYSLOGNG_LINK)\nAC_SUBST(SYSLOGNG_DEPS_LIBS)\nAC_SUBST(TOOL_DEPS_LIBS)\nAC_SUBST(CORE_DEPS_LIBS)\nAC_SUBST(MODULE_DEPS_LIBS)\nAC_SUBST(MODULE_LDFLAGS)\nAC_SUBST(BASE_LIBS)\nAC_SUBST(YFLAGS)\nAC_SUBST(LIBNET_LIBS)\nAC_SUBST(LIBNET_CFLAGS)\nAC_SUBST(NETSNMP_CFLAGS)\nAC_SUBST(NETSNMP_LIBS)\nAC_SUBST(LIBWRAP_LIBS)\nAC_SUBST(LIBWRAP_CFLAGS)\nAC_SUBST(ZLIB_LIBS)\nAC_SUBST(ZLIB_CFLAGS)\nAC_SUBST(LIBDBI_LIBS)\nAC_SUBST(LIBDBI_CFLAGS)\nAC_SUBST(LIBMONGO_LIBS)\nAC_SUBST(LIBMONGO_CFLAGS)\nAC_SUBST(LIBMONGO_SUBDIRS)\nAC_SUBST(LIBPAHO_MQTT_CFLAGS)\nAC_SUBST(LIBPAHO_MQTT_LIBS)\nAC_SUBST(LIBESMTP_CFLAGS)\nAC_SUBST(LIBESMTP_LIBS)\nAC_SUBST(LIBCURL_CFLAGS)\nAC_SUBST(LIBCURL_LIBS)\nAC_SUBST(LIBRABBITMQ_LIBS)\nAC_SUBST(LIBRABBITMQ_CFLAGS)\nAC_SUBST(LIBRABBITMQ_SUBDIRS)\nAC_SUBST(JSON_LIBS)\nAC_SUBST(JSON_CFLAGS)\nAC_SUBST(JSON_DEPENDENCY)\nAC_SUBST(IVYKIS_SUBDIRS)\nAC_SUBST(RESOLV_LIBS)\nAC_SUBST(LIBBPF_INCLUDE)\n\nAC_SUBST(CURRDATE)\nAC_SUBST(RELEASE_TAG)\nAC_SUBST(SNAPSHOT_VERSION)\nAC_SUBST(SOURCE_REVISION)\nAC_SUBST(with_ivykis)\nAC_SUBST(INTERNAL_IVYKIS_CFLAGS)\nAC_SUBST(LIBSYSTEMD_JOURNAL_CFLAGS)\nAC_SUBST(LIBSYSTEMD_JOURNAL_LIBS)\nAC_SUBST(XSL_STYLESHEET)\n\nAX_PREFIX_CONFIG_H(syslog-ng-config.h, \"SYSLOG_NG\")\nAX_VALGRIND_CHECK\n\nAC_OUTPUT(dist.conf\n          Makefile\n\t  syslog-ng.pc\n          libtest/syslog-ng-test.pc\n\t  scripts/update-patterndb\n\t  scripts/syslog-ng-update-virtualenv\n          )\n\necho\necho \"syslog-ng Open Source Edition $PACKAGE_VERSION configured\"\necho \" Edition settings:\"\necho \"  Release type                : $RELEASE_TYPE\"\necho \"  Pretty version              : $BROCHURE_VERSION\"\necho \"  Combined vers.              : $COMBINED_VERSION\"\necho \"  Package name                : $PACKAGE_NAME\"\necho \" Compiler options:\"\necho \"  compiler                    : $CC - $($CC -v 2>&1 | grep -i ' version ') - $(which $CC)\"\necho \"  compiler options            : $CFLAGS $CPPFLAGS\"\necho \"  ObjC compiler               : $OBJC - $($OBJC -v 2>&1 | grep -i ' version ') - $(which $OBJC)\"\necho \"  C++ enabled                 : ${enable_cpp:=no}\"\nif test \"x$enable_cpp\" = \"xyes\"; then\necho \"  C++ compiler                : $CXX - $($CXX -v 2>&1 | grep -i ' version ') - $(which $CXX)\"\necho \"  C++ compiler options        : $CXXFLAGS\"\nfi\necho \"  linker flags                : $LDFLAGS $LIBS\"\necho \"  prefix                      : $prefix\"\necho \"  linking mode                : $linking_mode\"\nif test $ostype = \"Darwin\"; then\necho \"  classic linking mode        : ${enable_force_classic_linking:=no}\"\nfi\necho \"  embedded crypto             : ${with_embedded_crypto:=no}\"\necho \"  __thread keyword            : ${ac_cv_have_tls:=no}\"\necho \" Test dependencies:\"\necho \"  Criterion                   : ${with_criterion:=no}\"\necho \"  Unit tests                  : ${enable_tests:=no}\"\necho \" Submodules:\"\necho \"  ivykis                      : $with_ivykis\"\necho \" Features:\"\necho \"  Forced server mode          : ${enable_forced_server_mode:=yes}\"\necho \"  Debug symbols               : ${enable_debug:=no}\"\necho \"  GCC profiling               : ${enable_gprof:=no}\"\necho \"  Memtrace                    : ${enable_memtrace:=no}\"\necho \"  IPV6 support                : ${enable_ipv6:=no}\"\necho \"  spoof-source support        : ${enable_spoof_source:=no}\"\necho \"  tcp-wrapper support         : ${enable_tcp_wrapper:=no}\"\necho \"  Linux capability support    : ${has_linux_caps:=no}\"\necho \"  Env wrapper support         : ${enable_env_wrapper:=no}\"\necho \"  systemd support             : ${enable_systemd:=no} (unit dir: ${systemdsystemunitdir:=none})\"\necho \"  systemd-journal support     : ${with_systemd_journal:=no}\"\necho \"  JSON support                : $with_jsonc\"\necho \" Build options:\"\necho \"  Generate manual pages       : ${enable_manpages:=no}\"\necho \"  Install manual pages        : ${enable_manpages_install:=no}\"\necho \" Modules:\"\necho \"  Module search path          : ${module_path}\"\necho \"  Sun STREAMS support (module): ${enable_sun_streams:=no}\"\necho \"  Darwin OSL support (module) : ${enable_darwin_osl:=no}\"\necho \"  OpenBSD syslog (module)     : ${enable_openbsd_system_source:=no}\"\necho \"  SQL support (module)        : ${enable_sql:=no}\"\necho \"  PACCT module (EXPERIMENTAL) : ${enable_pacct:=no}\"\necho \"  MongoDB destination (module): ${enable_mongodb:=no}\"\necho \"  JSON support (module)       : ${enable_json:=no}\"\necho \"  SMTP support (module)       : ${enable_smtp:=no}\"\necho \"  HTTP support (module)       : ${enable_http:=no}\"\necho \"  AMQP destination (module)   : ${enable_amqp:=no}\"\necho \"  STOMP destination (module)  : ${enable_stomp:=no}\"\necho \"  MQTT (module)               : ${enable_mqtt:=no}\"\necho \"  GRPC (module)               : ${enable_grpc:=no}\"\necho \"  Cloud Auth (module)         : ${enable_cloud_auth:=no}\"\necho \"  GEOIP2 support (module)     : ${enable_geoip2:=no}\"\necho \"  Redis support (module)      : ${enable_redis:=no}\"\necho \"  Kafka support (module)      : ${enable_kafka:=no}\"\necho \"  Riemann destination (module): ${enable_riemann:=no}, microseconds: ${riemann_micros:=no}\"\necho \"  Python                      : ${enable_python:=no} (pkg-config package: ${with_python:=none}, packages: ${with_python_packages})\"\necho \"  Python modules              : ${enable_python_modules:=no}\"\necho \"  Java                        : ${enable_java:=no}\"\necho \"  Java modules                : ${enable_java_modules:=no}\"\necho \"  afsnmp module               : ${enable_afsnmp:=no}\"\necho \"  eBPF module                 : ${enable_ebpf:=no}\"\necho \"  native bindings             : ${enable_native:=no}\"\necho \"  Example modules             : ${enable_example_modules:=yes}\"\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "dbld",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev-requirements.txt",
          "type": "blob",
          "size": 0.1396484375,
          "content": "-r requirements.txt\n\npycodestyle\nisort\npylint\nastroid\nlogilab-common<=0.63.0\nprometheus-client\npsutil\npytest\npytest-mock\npre-commit\nvirtualenv\n"
        },
        {
          "name": "dev-utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist.conf.in",
          "type": "blob",
          "size": 0.35546875,
          "content": "# default environment parameters\nSNAPSHOT_VERSION=${SNAPSHOT_VERSION:-@SNAPSHOT_VERSION@}\nSOURCE_REVISION=${SOURCE_REVISION:-@SOURCE_REVISION@}\nBROCHURE_VERSION=${BROCHURE_VERSION:-@BROCHURE_VERSION@}\nCOMBINED_VERSION=${COMBINED_VERSION:-@COMBINED_VERSION@}\nTECHNICAL_VERSION=${TECHNICAL_VERSION:-@TECHNICAL_VERSION@}\nRELEASE_TYPE=${RELEASE_TYPE:-@RELEASE_TYPE@}\n\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "libtest",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "news",
          "type": "tree",
          "content": null
        },
        {
          "name": "optional-dev-requirements.txt",
          "type": "blob",
          "size": 0.0205078125,
          "content": "syslog-ng-cfg-helper\n"
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "persist-tool",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.4541015625,
          "content": "boto3<=1.28.33     # <= is used for python3.6 compatibility on centos-7\nbotocore<=1.31.33  # <= is used for python3.6 compatibility on centos-7\ncachetools==4.2.4\ncertifi>=2023.7.22\ncharset-normalizer==2.0.12\ngoogle-auth==2.13.0\nidna==3.7\nkubernetes==25.3.0\noauthlib==3.2.2\npyasn1==0.4.8\npyasn1-modules==0.2.8\npython-dateutil==2.8.2\nPyYAML==6.0.1\nrequests>=2.27.1,<2.33\nrequests-oauthlib==1.3.1\nrsa==4.9\nsix==1.16.0\nurllib3==1.26.*\nwebsocket-client==1.3.1\nply==3.11\n"
        },
        {
          "name": "scl",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "sub-configure.sh",
          "type": "blob",
          "size": 1.279296875,
          "content": "#!/bin/sh\n#############################################################################\n# Copyright (c) 2007-2016 Balabit\n#\n# This library is free software; you can redistribute it and/or\n# modify it under the terms of the GNU Lesser General Public\n# License as published by the Free Software Foundation; either\n# version 2.1 of the License, or (at your option) any later version.\n#\n# This library is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# Lesser General Public License for more details.\n#\n# You should have received a copy of the GNU Lesser General Public\n# License along with this library; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n#\n# As an additional exemption you are allowed to compile & link against the\n# OpenSSL libraries as published by the OpenSSL project. See the file\n# COPYING for details.\n#\n#############################################################################\n\n# comes from a substitution in autogen.sh\nCONFIGURE_OPTS=\"@__CONFIGURE_OPTS__@\"\n\nconfigure=\"`dirname $0`/`basename $0 .gnu`\"\necho \"Running: \" $configure $@ $CONFIGURE_OPTS\n$SHELL $configure \"$@\" $CONFIGURE_OPTS\n"
        },
        {
          "name": "syslog-ng-config.h.in",
          "type": "blob",
          "size": 5.7822265625,
          "content": "#define SYSLOG_NG_JOURNALD_OFF 0\n#define SYSLOG_NG_JOURNALD_OPTIONAL 1\n#define SYSLOG_NG_JOURNALD_SYSTEM 2\n#cmakedefine SYSLOG_NG_SYSTEMD_JOURNAL_MODE @SYSLOG_NG_SYSTEMD_JOURNAL_MODE@\n#cmakedefine01 SYSLOG_NG_HAVE_JOURNAL_NAMESPACES\n#cmakedefine SYSLOG_NG_HAVE_INET_ATON\n#cmakedefine SYSLOG_NG_HAVE_STRTOIMAX @SYSLOG_NG_HAVE_STRTOIMAX@\n#cmakedefine SYSLOG_NG_HAVE_STRTOLL\n#cmakedefine SYSLOG_NG_HAVE_STRUCT_SOCKADDR_STORAGE @SYSLOG_NG_HAVE_STRUCT_SOCKADDR_STORAGE@\n#cmakedefine SYSLOG_NG_MODULE_PATH \"@SYSLOG_NG_MODULE_PATH@\"\n\n#cmakedefine SYSLOG_NG_PATH_DATADIR \"@SYSLOG_NG_PATH_DATADIR@\"\n#cmakedefine SYSLOG_NG_PATH_PKGDATADIR \"@SYSLOG_NG_PATH_PKGDATADIR@\"\n#cmakedefine SYSLOG_NG_PATH_DATAROOTDIR \"@SYSLOG_NG_PATH_DATAROOTDIR@\"\n#cmakedefine SYSLOG_NG_PATH_EXECPREFIX \"@SYSLOG_NG_PATH_EXECPREFIX@\"\n#cmakedefine SYSLOG_NG_PATH_LIBEXECDIR \"@SYSLOG_NG_PATH_LIBEXECDIR@\"\n#cmakedefine SYSLOG_NG_PATH_LOCALSTATEDIR \"@SYSLOG_NG_PATH_LOCALSTATEDIR@\"\n#cmakedefine SYSLOG_NG_PATH_MODULEDIR  \"@SYSLOG_NG_PATH_MODULEDIR@\"\n#cmakedefine SYSLOG_NG_PATH_PIDFILEDIR \"@SYSLOG_NG_PATH_PIDFILEDIR@\"\n#cmakedefine SYSLOG_NG_PATH_PREFIX \"@SYSLOG_NG_PATH_PREFIX@\"\n#cmakedefine SYSLOG_NG_PATH_SYSCONFDIR \"@SYSLOG_NG_PATH_SYSCONFDIR@\"\n#cmakedefine SYSLOG_NG_PACKAGE_NAME \"@SYSLOG_NG_PACKAGE_NAME@\"\n#cmakedefine SYSLOG_NG_PATH_CONFIG_INCLUDEDIR \"@SYSLOG_NG_PATH_CONFIG_INCLUDEDIR@\"\n#cmakedefine SYSLOG_NG_PATH_SCLDIR \"@SYSLOG_NG_PATH_SCLDIR@\"\n#cmakedefine SYSLOG_NG_PATH_TOPSRC_DIR \"@SYSLOG_NG_PATH_TOPSRC_DIR@\"\n\n#cmakedefine SYSLOG_NG_SOURCE_REVISION \"@SYSLOG_NG_SOURCE_REVISION@\"\n#cmakedefine SYSLOG_NG_VERSION \"@SYSLOG_NG_VERSION@\"\n#cmakedefine SYSLOG_NG_COMBINED_VERSION \"@SYSLOG_NG_COMBINED_VERSION@\"\n#cmakedefine01 SYSLOG_NG_ENABLE_CPP\n#cmakedefine01 SYSLOG_NG_ENABLE_FORCED_SERVER_MODE\n#cmakedefine01 SYSLOG_NG_ENABLE_DEBUG\n#cmakedefine01 SYSLOG_NG_ENABLE_GPROF\n#cmakedefine01 SYSLOG_NG_ENABLE_IPV6\n#cmakedefine01 SYSLOG_NG_HAVE_GETADDRINFO\n#cmakedefine01 SYSLOG_NG_HAVE_GETNAMEINFO\n#cmakedefine SYSLOG_NG_HAVE_TCP_KEEPALIVE_TIMERS @SYSLOG_NG_HAVE_TCP_KEEPALIVE_TIMERS@\n#cmakedefine SYSLOG_NG_HAVE_STRNLEN\n#cmakedefine SYSLOG_NG_HAVE_GETLINE\n#cmakedefine01 SYSLOG_NG_ENABLE_LINUX_CAPS\n#cmakedefine01 SYSLOG_NG_ENABLE_MEMTRACE\n#cmakedefine01 SYSLOG_NG_ENABLE_TCP_WRAPPER\n#cmakedefine01 SYSLOG_NG_ENABLE_SYSTEMD\n#cmakedefine01 SYSLOG_NG_HAVE_STRUCT_UCRED\n#cmakedefine01 SYSLOG_NG_HAVE_STRUCT_CMSGCRED\n#cmakedefine01 SYSLOG_NG_HAVE_CTRLBUF_IN_MSGHDR\n#cmakedefine01 SYSLOG_NG_ENABLE_SPOOF_SOURCE\n#cmakedefine SYSLOG_NG_PATH_XSDDIR \"@SYSLOG_NG_PATH_XSDDIR@\"\n#cmakedefine SYSLOG_NG_HAVE_GETUTENT @SYSLOG_NG_HAVE_GETUTENT@\n#cmakedefine SYSLOG_NG_HAVE_GETUTXENT @SYSLOG_NG_HAVE_GETUTXENT@\n#cmakedefine SYSLOG_NG_HAVE_DLFCN_H @SYSLOG_NG_HAVE_DLFCN_H@\n#cmakedefine SYSLOG_NG_HAVE_UTMPX_H @SYSLOG_NG_HAVE_UTMPX_H@\n#cmakedefine SYSLOG_NG_HAVE_UTMP_H @SYSLOG_NG_HAVE_UTMP_H@\n#cmakedefine SYSLOG_NG_HAVE_MODERN_UTMP @SYSLOG_NG_HAVE_MODERN_UTMP@\n#cmakedefine SYSLOG_NG_JAVA_MODULE_PATH \"@SYSLOG_NG_JAVA_MODULE_PATH@\"\n#cmakedefine SYSLOG_NG_PYTHON_MODULE_DIR \"@SYSLOG_NG_PYTHON_MODULE_DIR@\"\n#cmakedefine SYSLOG_NG_PYTHON_SYSCONF_MODULE_DIR \"@SYSLOG_NG_PYTHON_MODULE_DIR@\"\n#cmakedefine SYSLOG_NG_PYTHON_VENV_DIR \"@SYSLOG_NG_PYTHON_VENV_DIR@\"\n#cmakedefine SYSLOG_NG_HAVE_CLOCK_GETTIME @SYSLOG_NG_HAVE_CLOCK_GETTIME@\n#cmakedefine SYSLOG_NG_HAVE_STRTOK_R\n#cmakedefine ENV_LD_LIBRARY_PATH @ENV_LD_LIBRARY_PATH@\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_EVP_MD_CTX_RESET\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_ASN1_STRING_GET0_DATA\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_SSL_CONF_CTX_NEW\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_SSL_CTX_GET0_PARAM\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_SSL_CTX_SET_CIPHERSUITES\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_SSL_CTX_SET1_SIGALGS_LIST\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_SSL_CTX_SET1_CLIENT_SIGALGS_LIST\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_SSL_CTX_SET_MIN_PROTO_VERSION\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_X509_STORE_CTX_GET0_CERT\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_X509_GET_EXTENSION_FLAGS\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_DH_SET0_PQG\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_BN_GET_RFC3526_PRIME_2048\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_SSL_CTX_SET_NUM_TICKETS\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_SSL_ADD_DIR_CERT_SUBJECTS_TO_STACK\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_SSL_ADD_FILE_CERT_SUBJECTS_TO_STACK\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_MONGOC_URI_SET_OPTION_AS_INT32\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_MONGOC_URI_SERVERSELECTIONTIMEOUTMS\n#cmakedefine01 SYSLOG_NG_HAVE_INOTIFY\n#cmakedefine01 SYSLOG_NG_HAVE_KQUEUE\n#cmakedefine SYSLOG_NG_HAVE_GETRANDOM\n#cmakedefine01 SYSLOG_NG_USE_CONST_IVYKIS_MOCK\n#cmakedefine01 SYSLOG_NG_HAVE_ENVIRON\n#cmakedefine01 SYSLOG_NG_HAVE_FMEMOPEN\n#cmakedefine01 SYSLOG_NG_ENABLE_ENV_WRAPPER\n#cmakedefine01 SYSLOG_NG_HAVE_GETOPT_H\n#cmakedefine SYSLOG_NG_HAVE_GETPROTOBYNUMBER_R\n#cmakedefine SYSLOG_NG_HAVE_G_LIST_COPY_DEEP\n#cmakedefine SYSLOG_NG_HAVE_G_PTR_ARRAY_FIND_WITH_EQUAL_FUNC\n#cmakedefine SYSLOG_NG_HAVE_G_CANONICALIZE_FILENAME\n#cmakedefine SYSLOG_NG_HAVE_GMTIME_R\n#cmakedefine SYSLOG_NG_HAVE_LOCALTIME_R\n#cmakedefine SYSLOG_NG_HAVE_AMQP_SSL_SOCKET_SET_VERIFY_PEER\n#cmakedefine SYSLOG_NG_HAVE_RABBITMQ_C_TCP_SOCKET_H\n#cmakedefine01 SYSLOG_NG_HAVE_INET_NTOA\n#cmakedefine SYSLOG_NG_HAVE_MEMRCHR\n#cmakedefine SYSLOG_NG_HAVE_O_LARGEFILE\n#cmakedefine SYSLOG_NG_HAVE_PREAD\n#cmakedefine01 SYSLOG_NG_HAVE_PWRITE\n#cmakedefine SYSLOG_NG_HAVE_POSIX_FALLOCATE\n#cmakedefine SYSLOG_NG_HAVE_STRCASESTR\n#cmakedefine01 SYSLOG_NG_HAVE_STRUCT_TM_TM_GMTOFF\n#cmakedefine01 SYSLOG_NG_HAVE_THREAD_KEYWORD\n#cmakedefine01 SYSLOG_NG_HAVE_TIMEZONE\n#cmakedefine01 SYSLOG_NG_WITH_COMPILE_DATE\n#cmakedefine SYSLOG_NG_HAVE_RD_KAFKA_INIT_TRANSACTIONS\n#cmakedefine01 SYSLOG_NG_HAVE_PAHO_HTTP_PROXY\n#cmakedefine SYSLOG_NG_HAVE_LINUX_SOCK_DIAG_H\n#cmakedefine01 SYSLOG_NG_HAVE_SO_MEMINFO\n#cmakedefine01 SYSLOG_NG_ENABLE_AFSOCKET_MEMINFO_METRICS\n#cmakedefine01 SYSLOG_NG_HAVE_IV_WORK_POOL_SUBMIT_CONTINUATION\n#cmakedefine01 SYSLOG_NG_HAVE_DECL_CURLUE_LAST\n"
        },
        {
          "name": "syslog-ng-ctl",
          "type": "tree",
          "content": null
        },
        {
          "name": "syslog-ng-native-connector.pc.cmake",
          "type": "blob",
          "size": 0.248046875,
          "content": "prefix=${CMAKE_INSTALL_PREFIX}\nexec_prefix=${PKG_CONFIG_EXEC_PREFIX}\nlibdir=${PKG_CONFIG_LIBDIR}\n\nName: libsyslog-ng-native-connector\nDescription: Common connector for a native syslog-ng module\nRequires: syslog-ng\nVersion: 0.1.0\nLibs: ${PKG_CONFIG_LIBS}\n"
        },
        {
          "name": "syslog-ng-native-connector.pc.in",
          "type": "blob",
          "size": 0.2314453125,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\n\nName: libsyslog-ng-native-connector\nDescription: Common connector for a native syslog-ng module\nRequired: syslog-ng\nVersion: 0.1.0\nLibs: -L${libdir} -lsyslog-ng-native-connector\n"
        },
        {
          "name": "syslog-ng.pc.cmake",
          "type": "blob",
          "size": 0.62109375,
          "content": "# Package Information for pkg-config\nprefix=@CMAKE_INSTALL_PREFIX@\nexec_prefix=@PKG_CONFIG_EXEC_PREFIX@\ndatarootdir=@PKG_CONFIG_DATAROOTDIR@\ndatadir=@PKG_CONFIG_DATADIR@\nlibdir=@PKG_CONFIG_LIBDIR@\nincludedir=@PKG_CONFIG_INCLUDEDIR@\ntoolsdir=@PKG_CONFIG_TOOLSDIR@\nmoduledir=@PKG_CONFIG_MODULEDIR@\nconfig_includedir=@PKG_CONFIG_CONFIG_INCLUDEDIR@\nscldir=@PKG_CONFIG_SCLDIR@\nivykis=@PKG_CONFIG_IVYKIS@\n\nName: syslog-ng-dev\nDescription: Dev package for syslog-ng module\nVersion: @PKG_CONFIG_PACKAGE_VERSION@\nRequires: glib-2.0 eventlog ivykis gthread-2.0 gmodule-2.0\nLibs: -L${libdir} -lsyslog-ng -levtlog\nCflags: -I${includedir}/syslog-ng\n"
        },
        {
          "name": "syslog-ng.pc.in",
          "type": "blob",
          "size": 0.4912109375,
          "content": "# Package Information for pkg-config\nprefix=@prefix@\nexec_prefix=@exec_prefix@\ndatarootdir=@datarootdir@\ndatadir=@datadir@\nlibdir=@libdir@\nincludedir=@includedir@\ntoolsdir=@toolsdir@\nmoduledir=@moduledir@\nconfig_includedir=@config_includedir@\nscldir=@scldir@\nivykis=@with_ivykis@\n\nName: syslog-ng-dev\nDescription: Dev package for syslog-ng module\nVersion: @PACKAGE_VERSION@\nRequires: glib-2.0\nLibs: -L${libdir} @GLIB_LIBS@ -lsyslog-ng -levtlog\nCflags: -I${includedir}/syslog-ng @INTERNAL_IVYKIS_CFLAGS@\n"
        },
        {
          "name": "syslog-ng.supp",
          "type": "blob",
          "size": 0.0771484375,
          "content": "{\n   json_hashlittle\n   Memcheck:Addr4\n   fun:hashlittle\n   fun:lh_char_hash\n}\n"
        },
        {
          "name": "syslog-ng",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}