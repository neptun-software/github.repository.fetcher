{
  "metadata": {
    "timestamp": 1736710153332,
    "page": 819,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cgdb/cgdb",
      "stars": 1745,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6220703125,
          "content": "*.swp\n*.o\n*.a\n.deps/\n*_driver\n\ncgdb/cgdb\n\nMakefile\nMakefile.in\naclocal.m4\nautom4te.cache/\nstamp-h1\nconfigure\nconfig.h\nconfig.h.in\nconfig.log\nconfig.status\nconfig/compile\nconfig/config.guess\nconfig/config.sub\nconfig/depcomp\nconfig/install-sh\nconfig/mdate-sh\nconfig/missing\nconfig/texinfo.tex\nconfig/ylwrap\n\ndoc/cgdb.1\ndoc/cgdb.info\ndoc/cgdb.txt\ndoc/stamp-vti\ndoc/version.texi\n\nlib/gdbmi/gdbmi_lexer.cpp\nlib/tokenizer/adalexer.cpp\nlib/tokenizer/asmlexer.cpp\nlib/tokenizer/cgdbhelplexer.cpp\nlib/tokenizer/clexer.cpp\nlib/tokenizer/dlexer.cpp\nlib/tokenizer/golexer.cpp\nlib/tokenizer/rustlexer.cpp\n\ncgdb/command_lexer.cpp\ncgdb_custom_config.h\n"
        },
        {
          "name": ".indent.pro",
          "type": "blob",
          "size": 0.919921875,
          "content": "/* \n * CGDB Indent Profile\n *\n * This profile enforces the coding standard of the CGDB project.\n *\n * For options listed below that may be confusing, leave a comment indicating\n * the rationale.\n */\n\n--blank-lines-after-declarations\n--blank-lines-after-procedures\n--braces-on-if-line\n--braces-on-struct-decl-line\n--blank-before-sizeof\n--case-brace-indentation0\n--cuddle-do-while\n--cuddle-else\n--continue-at-parentheses\n--continuation-indentation8\n--case-indentation4\n--space-after-cast\n--honour-newlines  /* british weirdos */\n--indent-level4\n--line-length80\n--comment-line-length80\n--no-blank-lines-after-commas\n--dont-break-function-decl-args\n--no-comment-delimiters-on-blank-lines\n--dont-line-up-parentheses\n--no-space-after-function-call-names\n--no-space-after-parentheses\n--dont-break-procedure-type\n--leave-optional-blank-lines\n--no-tabs\n--space-after-for\n--space-after-if\n--space-after-while\n--swallow-optional-blank-lines\n--tab-size4\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 1.59375,
          "content": "Active Maintainers\n\n  Bob Rossi is a co founder of cgdb and the main developer.\n  He can be reached at \"bob *at* brasko *dot* net\".\n\n  Mike Mueller is a co founder of cgdb. He can be reached at\n  \"mmueller *at* cs *dot* uri *dot* edu\".\n\n  Michael Sartain is a core developer of CGDB and can be reached\n  at \"mikesart *at* fastmail *dot* com\".\n\nPackage Maintainers\n\n  Robert Lemmen is the package maintainer for debian. He\n  can be reached at \"robertle *at* semistable *dot* com\".\n\n  Jens Frederich generates binaries for Mac OS X. He can\n  be reached at \"jfrederich *at* gmail *dot* com\".\n\nContributors\n\n  Peter Kovacs wrote the cgdbrc infrastructure. He is not\n  longer an active contributor. He can be reached at\n  \"peter *at* kovax *dot* org\".\n\n  Steve Folta changed cgdb so that the colors could be\n  completely configurable via the cgdbrc file. This also paved\n  the way for letting cgdb run with a white background color.\n  He can be reached at \"steve *at* folta *dot* net\".\n\n  Iain Buclaw provided a syntax highlighter for the D language,\n  so cgdb plays nicely in a gdc development environment.\n  He can be reached at \"ibuclaw *at* gdcproject *dot* org\".\n\n  Li Jia submitted fixes for two serious bugs, including a\n  long-standing hang issue on MacOS.\n  He can be reached at \"tiwb *at* msn *dot* com\".\n\n  Andy Song provided a syntax highlighter for Go language.\n  He can be reached at \"wsong.cn *at* gmail *dot* com\"\n\n  Armin Widegreen provided a syntax highlighter for the \n  Rust programming language. \n  He can be reached at \"armin.widegreen *at* gmail *dot* com\"\n\nFor more information please see https://cgdb.github.io/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.193359375,
          "content": "# Contributing to CGDB\n\n## Submitting Patches\n\n### Submission Process\n\nIf you are interested in contributing to CGDB, discuss your ideas with CGDB's\nactive maintainers. Once a feature or bug has been agreed to be worked on by\nboth parties, fork CGDB and develop your feature in a new branch. Commit and\npush your changes and send a pull request when ready.\n\n### Signed-off-by Process\n\nCGDB uses the signed-off-by language and process, used by the Linux kernel, to\ngive us a clear chain of trust for every patch received.\n\nIn short, you need to include a signed-off-by tag in every patch. This is a\ndeveloper's certification that he or she has the right to submit the patch for\ninclusion in this project. It is an agreement to the Developer's Certificate of\nOrigin (below). Code without a proper signoff cannot be merged into the\nmainline.\n\nWhen submitting code for inclusion in CGDB, you agree to allow the project\nowners to license your work under the terms of the Modified BSD License and the\nGPL version 2 or later.\n\nTo sign-off a commit, use the `-s` or `--signoff` option.\n\n### Developer's Certificate of Origin\n\nBy making a contribution to this project, I certify that:\n\n  (a) The contribution was created in whole or in part by me and I\n      have the right to submit it under the open source license\n      indicated in the file; or\n\n  (b) The contribution is based upon previous work that, to the best\n      of my knowledge, is covered under an appropriate open source\n      license and I have the right under that license to submit that\n      work with modifications, whether created in whole or in part\n      by me, under the same open source license (unless I am\n      permitted to submit under a different license), as indicated\n      in the file; or\n\n  (c) The contribution was provided directly to me by some other\n      person who certified (a), (b) or (c) and I have not modified\n      it.\n\n  (d) I understand and agree that this project and the contribution\n      are public and that a record of the contribution (including all\n      personal information I submit with it, including my sign-off) is\n      maintained indefinitely and may be redistributed consistent with\n      this project or the open source license(s) involved.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.5703125,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year  name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "FAQ",
          "type": "blob",
          "size": 3.6435546875,
          "content": "\t\t\t\t\t\t\tSection I General Information\n\n1. What is CGDB?\n\tCGDB is a curses-based interface to the GNU Debugger (GDB).\n\tThe goal of CGDB is to be lightweight and responsive; not encumbered with\n\tunnecessary features. The interface is designed to deliver the familiar\n\tGDB text interface, with a split screen showing the source as it executes.\n\tThe UI is modeled on the classic Unix text editor, vi. Those familiar with\n\tvi should feel right at home using CGDB.\n\n2. Where can I get CGDB?\n\tThe CGDB project is hosted on GitHub. You can view the project by going to\n    https://cgdb.github.io/.\n\n3. What OS does CGDB work on?\n\tCGDB is used daily on\n\t\tLinux 2.4.18\n\t\tCygwin 1.3.22 (NT,2000,XP)\n\t\tSolaris 5.7,5.8,5.9\n\n\tit has been reported to work on\n\t \tAIX\n\t\tFreeBSD\n\t\tNetBSD\n\t\tand more\n\n\tIf you have ported or just got CGDB to compile on another OS,\n\tplease let us know.\n\n\t\t\t\t\t\t\tSection II Installing CGDB\n\n1. How do I install CGDB?\n\tCGDB can be installed by compiling it from sources. Goto CGDB's home\n\tpage to get them. Also, there is binary release's of CGDB for different\n\tdistributions.\n\n\tLook at https://github.com/cgdb/cgdb/releases for more information.\n\n2. What dependencies does CGDB have?\n\tCGDB could not have been written without the use of other libraries.\n\t1. CGDB depends on readline-development-5.1 or greater.\n\t   If you don't have this, you might get a link error that looks something\n\t   like this, 'undefined symbol, rl_set_prompt'.\n\t2. CGDB depends on ncurses/curses.  The version number is not known.\n\t   I have used libncurses.so.5 successfully.\n\t3. You will be required to have flex installed.\n\t   I have used flex 2.5.4 to build CGDB.\n\t4. CGDB uses autoconf/automake to build its configure scripts and\n\t   makefiles. At the time of this writing, CGDB was using\n          * aclocal  (GNU automake)   1.9.5\n          * autoconf (GNU Autoconf)   2.59\n          * m4       (GNU m4)         1.4.3\n\n\t\t\t\t\t\t\tSection III Problems\n\n1. Why do some keys not work properly for me in CGDB?\n\tCGDB is proud of its custom key input library. This is because\n\tit *can* use the ESC key, without having problems understanding\n\tescape sequences that are generated when certain keys are hit.\n\tSome of the keys that generate escape sequences are the arrow keys,\n\tpage up, page down, insert, delete, home, end and all the function\n\tkeys.\n\n\tIf you have problems using any of the keys above, you should modify\n\tthe value of escdelay. Please look at the README file for more\n\tinformation on escdelay.\n\n2. Why does CGDB not work when a tty can not be opened?\n    There are 2 problems with this.\n\n\ta) The annotate 2 communication protocol used between CGDB and GDB is\n\tlacking. It is difficult ( at best ) to figure out which output is GDB\n\tand which output is the inferior program. It is impossible to send input\n\tto the inferior program without error.\n\n\tTo solve this CGDB used the tty command to be able to allow the user to send\n\tdata to the inferior program. It also can easily determine which data is\n\tfrom the inferior and which data is from GDB.\n\n\tb) Readline can not be used if there is no tty available.\n\n\tAll in all, not allowing CGDB to work when there is no tty is a bug. In\n\tthe future, when CGDB will work when no tty is available, there will be\n\tseveral features that do not work.\n\t\t1) No sending input to the inferior program. The work around is to\n\t\tstart the program from the terminal and attach to it using GDB.\n\t\t2) Readline will not work.\n\n\t\t\t\t\t\t\tSection IV Using CGDB\n\n1. How do I automate colon commands using the cgdbrc file?\n\tCGDB looks at the file $HOME/.cgdb/cgdbrc. It executes each of the lines\n\tin that file in order as if they were typed into the status bar. This is\n\ta very useful way of automating commands.\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 7.7236328125,
          "content": "Basic Installation\n==================\n\n   These are generic installation instructions.\n\n   The `configure' shell script attempts to guess correct values for\nvarious system-dependent variables used during compilation.  It uses\nthose values to create a `Makefile' in each directory of the package.\nIt may also create one or more `.h' files containing system-dependent\ndefinitions.  Finally, it creates a shell script `config.status' that\nyou can run in the future to recreate the current configuration, a file\n`config.cache' that saves the results of its tests to speed up\nreconfiguring, and a file `config.log' containing compiler output\n(useful mainly for debugging `configure').\n\n   If you need to do unusual things to compile the package, please try\nto figure out how `configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the `README' so they can\nbe considered for the next release.  If at some point `config.cache'\ncontains results you don't want to keep, you may remove or edit it.\n\n   The file `configure.in' is used to create `configure' by a program\ncalled `autoconf'.  You only need `configure.in' if you want to change\nit or regenerate `configure' using a newer version of `autoconf'.\n\nThe simplest way to compile this package is:\n\nNOTE if building from a git checkout, `sh autogen.sh` needs to be ran first.\n\n  1. `cd' to the directory containing the package's source code and type\n     `./configure' to configure the package for your system.  If you're\n     using `csh' on an old version of System V, you might need to type\n     `sh ./configure' instead to prevent `csh' from trying to execute\n     `configure' itself.\n\n     Running `configure' takes awhile.  While running, it prints some\n     messages telling which features it is checking for.\n\n  2. Type `make' to compile the package.\n\n  3. Optionally, type `make check' to run any self-tests that come with\n     the package.\n\n  4. Type `make install' to install the programs and any data files and\n     documentation.\n\n  5. You can remove the program binaries and object files from the\n     source code directory by typing `make clean'.  To also remove the\n     files that `configure' created (so you can compile the package for\n     a different kind of computer), type `make distclean'.  There is\n     also a `make maintainer-clean' target, but that is intended mainly\n     for the package's developers.  If you use it, you may have to get\n     all sorts of other programs in order to regenerate files that came\n     with the distribution.\n\nCompilers and Options\n=====================\n\n   Some systems require unusual options for compilation or linking that\nthe `configure' script does not know about.  You can give `configure'\ninitial values for variables by setting them in the environment.  Using\na Bourne-compatible shell, you can do that on the command line like\nthis:\n     CC=c89 CFLAGS=-O2 LIBS=-lposix ./configure\n\nOr on systems that have the `env' program, you can do it like this:\n     env CPPFLAGS=-I/usr/local/include LDFLAGS=-s ./configure\n\nCompiling For Multiple Architectures\n====================================\n\n   You can compile the package for more than one kind of computer at the\nsame time, by placing the object files for each architecture in their\nown directory.  To do this, you must use a version of `make' that\nsupports the `VPATH' variable, such as GNU `make'.  `cd' to the\ndirectory where you want the object files and executables to go and run\nthe `configure' script.  `configure' automatically checks for the\nsource code in the directory that `configure' is in and in `..'.\n\n   If you have to use a `make' that does not supports the `VPATH'\nvariable, you have to compile the package for one architecture at a time\nin the source code directory.  After you have installed the package for\none architecture, use `make distclean' before reconfiguring for another\narchitecture.\n\nInstallation Names\n==================\n\n   By default, `make install' will install the package's files in\n`/usr/local/bin', `/usr/local/man', etc.  You can specify an\ninstallation prefix other than `/usr/local' by giving `configure' the\noption `--prefix=PATH'.\n\n   You can specify separate installation prefixes for\narchitecture-specific files and architecture-independent files.  If you\ngive `configure' the option `--exec-prefix=PATH', the package will use\nPATH as the prefix for installing programs and libraries.\nDocumentation and other data files will still use the regular prefix.\n\n   In addition, if you use an unusual directory layout you can give\noptions like `--bindir=PATH' to specify different values for particular\nkinds of files.  Run `configure --help' for a list of the directories\nyou can set and what kinds of files go in them.\n\n   If the package supports it, you can cause programs to be installed\nwith an extra prefix or suffix on their names by giving `configure' the\noption `--program-prefix=PREFIX' or `--program-suffix=SUFFIX'.\n\nOptional Features\n=================\n\n   Some packages pay attention to `--enable-FEATURE' options to\n`configure', where FEATURE indicates an optional part of the package.\nThey may also pay attention to `--with-PACKAGE' options, where PACKAGE\nis something like `gnu-as' or `x' (for the X Window System).  The\n`README' should mention any `--enable-' and `--with-' options that the\npackage recognizes.\n\n   For packages that use the X Window System, `configure' can usually\nfind the X include and library files automatically, but if it doesn't,\nyou can use the `configure' options `--x-includes=DIR' and\n`--x-libraries=DIR' to specify their locations.\n\nSpecifying the System Type\n==========================\n\n   There may be some features `configure' can not figure out\nautomatically, but needs to determine by the type of host the package\nwill run on.  Usually `configure' can figure that out, but if it prints\na message saying it can not guess the host type, give it the\n`--host=TYPE' option.  TYPE can either be a short name for the system\ntype, such as `sun4', or a canonical name with three fields:\n     CPU-COMPANY-SYSTEM\n\nSee the file `config.sub' for the possible values of each field.  If\n`config.sub' isn't included in this package, then this package doesn't\nneed to know the host type.\n\n   If you are building compiler tools for cross-compiling, you can also\nuse the `--target=TYPE' option to select the type of system they will\nproduce code for and the `--build=TYPE' option to select the type of\nsystem on which you are compiling the package.\n\nSharing Defaults\n================\n\n   If you want to set default values for `configure' scripts to share,\nyou can create a site shell script called `config.site' that gives\ndefault values for variables like `CC', `cache_file', and `prefix'.\n`configure' looks for `PREFIX/share/config.site' if it exists, then\n`PREFIX/etc/config.site' if it exists.  Or, you can set the\n`CONFIG_SITE' environment variable to the location of the site script.\nA warning: not all `configure' scripts look for a site script.\n\nOperation Controls\n==================\n\n   `configure' recognizes the following options to control how it\noperates.\n\n`--cache-file=FILE'\n     Use and save the results of the tests in FILE instead of\n     `./config.cache'.  Set FILE to `/dev/null' to disable caching, for\n     debugging `configure'.\n\n`--help'\n     Print a summary of the options to `configure', and exit.\n\n`--quiet'\n`--silent'\n`-q'\n     Do not print messages saying which checks are being made.  To\n     suppress all normal output, redirect it to `/dev/null' (any error\n     messages will still be shown).\n\n`--srcdir=DIR'\n     Look for the package's source code in directory DIR.  Usually\n     `configure' can determine that directory automatically.\n\n`--version'\n     Print the version of Autoconf used to generate the `configure'\n     script, and exit.\n\n`configure' also accepts some other, not widely useful, options.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 0.3359375,
          "content": "# The difference between SUBDIRS and DIST_SUBDIRS is that the\n# readline directory simply needs to be copied as is, where as\n# the rest of the directories have a make dist rule run on them\nAUTOMAKE_OPTIONS = -Wportability foreign\nSUBDIRS=lib cgdb testsuite\nDIST_SUBDIRS=lib cgdb testsuite\n\nif WANT_DOCS\nSUBDIRS += doc\nDIST_SUBDIRS += doc\nendif\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 39.1005859375,
          "content": "  * Fix issue #291 - The gdb process can still be running when CGDB exits.\n    Previously, when CGDB would exit, gdb would not also always exit,\n    leaving it running in the background. Now gdb exits when CGDB does.\n\n  * CGDB now supports syntax highlighting Fotran files.\n\n  * CGDB will now display breakpoints with multiple locations properly\n    (again). GDB creates multiple location breakpoints with C++ constructors,\n    inside C++ templates and in inlined functions. CGDB supported multiple\n    location breakpoints with GDB prior to GDB 9.0, when mi2 was the default\n    mi protocol. GDB 9.0 introduced the mi3 protocol which changed the way\n    the -break-info command returns breakpoint information.\n  \n  * CGDB now allows you to execute until the currently selected line.\n    In cgdb mode, you can navigate to any file/line (or address in assembly\n    mode) and then type the 'u' key to have the debugger run until it hits\n    that file/line (or address).\n\n  * CGDB now supports the :noh command, which stops the highlighting\n    of previously matched searches when using the hlsearch option.\n    This resolves issue #24.\n\n  * Several searching improvements have been made\n    - Searching again with / will repeat the last search\n    - Searching again with ? will repeat the last search in reverse\n    - hlsearch no longer highlights old searches when starting a new search\n    - hlsearch will allow you to backspace out of a search completely now.\n      Previously it would always highlight the last char of search being\n      backspaced out of.\n    - hlsearch will properly highlight the previous search when you\n      backspace out of a search completely\n\n  * Fix issue #345 - cgdb can now be configured to be built without\n    the need to also build documentation. To disable documentation,\n    pass --enable-docs=no or --disable-docs to the configure options.\n    This is useful when building on systems that don't have the\n    makeinfo executable available.\n\n  * Fix issue #352 - gdb target output was not being displayed in cgdb.\n    CGDB previously ignored target output from GDB. This prevented useful\n    target output messages from being displayed back to the user in the\n    gdb console output window. CGDB now correctly displays target output\n    when remote debugging, including both from gdbserver directly or when\n    debugging a program through valgrind using the --vgdb-error=0 option.\n\n  * When selecting breakpoints with the space bar in the source viewer,\n    CGDB now selects breakpoints using an absolute path to the file\n    instead of a relative path. This prevents breakpoints being set on files\n    with the same base name.\n\n  * Fix issue #293 - Random breakpoints are no displayed on file reload\n    Previously, when running cgdb, if you change a file you are debugging,\n    recompile the exe, and 'run' again in the gdb window in cgdb, cgdb would\n    reload the changed file and sometimes display garbage breakpoints.\n    Now only the correct breakpoints are displayed on reload.\n\n  * Fix issue #303 - CGDB crashes while resizing window\n    Previously if a lot of text existed in the gdb window, then a resize\n    could trigger a crash. Now no crash will occur.\n\ncgdb-0.8.0 (01/16/2022)\n\n  * Fix issue #298 - CGDB now exits when gdb exits\n    Previously if gdb exited but the inferior, or child of the inferior\n    was still running, cgdb would possibly continue running in a\n    non responsive state. Now cgdb exits when gdb does.\n\n  * Fix issue #278, Single stepping through disassembly without debug\n    symbols does not move arrow in source window. Now the arrow moves in\n    the source window as expected.\n\n  * Fix issue #135 CGDB freezes when pressing \"o\" to open the file dialog\n    Previously, if you attempted to open the file dialog, cgdb would \n    sometimes hang, due to a gdbwire parsing bug from the gdb response.\n    This has been resolved.\n\n  * Fix issue #152, breakpoint handling is broken in disasembly view\n    Previously, if you set a breakpoint in the source view, it would not\n    be reflected in the disassembly view, and vice versa. Now if you set\n    a breakpoint in either view, it should be reflected in the other.\n\n  * Fix issue #260, CGDB would not process commands after F5, F6, etc\n    If F5, F6, F7, F8, F10 were hit, CGDB would no longer process GDB\n    commands, like setting breakpoints, etc. Now CGDB works as expected.\n\n  * CGDB implements a virtual terminal in the GDB window\n    - The GDB scroller is now a virtual terminal (using libvterm)\n    - The scrollback buffer has been reimplemented using libvterm\n      The cursor row/col position is now known, rather than just the row\n    - Searching in the scrollback buffer is improved\n    - The scrollback buffer size is configurable with a new option,\n      scrollbackbuffersize (sbbs) and is defaulted to 10000.\n    - Mark commands in the GDB scroller have been removed\n    - Unicode is now fully supported in the gdb window\n    - libvterm does not support reflow yet, so resizing the terminal or\n      switching the window orientation (winsplitorientation) after startup\n      may cause the text in the GDB window to not be as expected\n    - Colors in the GDB window are not fully supported yet.\n      Ncurses is difficult to work with, considering switching.\n      RGB vterm colors are unsupported at the moment.\n\n    Fix the following github issues\n    - When I use set wso=vertical, I use the GDB window to print the\n      variable value, which will overflow the rightboundary #274\n    - Long lines from GDB output are not wrapped #265 \n    - Some characters in the editor are incorrect #261 \n    - Setting prompt to unicode character doesn't work as expected #257 \n    - cgdb prints '[?2004h' in xfce4 terminal #256 \n    - [regression] prefixing \"04h\" characters in the gdb prompt since\n      fixing #255 \n    - GDB console does not display color #251 \n    - gdb ANSI escape codes only in cgdb #189 \n    - Cursor offset gets lost when typing UTF-8 characters in the\n      gdb window #121 \n\n  * CGDB implements GDB/MI in favor of GDB/Annotations\n    - CGDB now communicates with GDB using MI only (instead of Annotations)\n      using the new-ui GDB command\n    - CGDB now requires GDB 7.12 or newer\n    - CGDB now fully supports the GDB console, including readline and\n      communicating with the inferior (the program being debugged)\n    - CGDB no longer uses the inferior tty option to talk to the inferior\n    \n    Fix the following github issues\n    - Messed up input with latest gdb #247 \n    - press T, it cannot open I/O window #244  (no longer necessary)\n    - Support disabling the inferior pty #241 \n    - Any plan to add tty window back? #209 \n    - Debugging a forking program fails on first run #204 \n    - Ctrl - T doesn't seem to work (cgdb 0.7.0) #193 \n    - inputrc enable-keypad messing with readline #190 \n    - GDB command-line options not working #160 \n    - Logging output uses machine interface? #158 \n    - Pagination of long output is not properly handled #145 \n    - cgdb stucks on fgets #130 \n    - Autocompletion on directories failes to append '/' #96 \n    - GDB Prompt Hangs after Pressing Tab in a \"Command List\" #67 \n\n  * Add the nexti and stepi configuration commands\n\n  * Fix issue #239, ANSI escape issues with GDB-9\n    Color sequences like, [?1l,[?1h,=,>\" are now ignored by CGDB rather\n    than producing garbage looking text in the gdb terminal.\n\n  * Fix auto source reload issue, issue #235 and #221\n    Occasionally, CGDB would not properly reload source files when they\n    had changed. Now CGDB will reload them on change.\n\n  * CGDB works again with newer versions of GDB (gdb 8.3 and above)\n    CGDB annotation support was broken by the following GDB issue,\n      https://sourceware.org/bugzilla/show_bug.cgi?id=25190\n    Changing CGDB from 'set height 0' to 'set pagination off' works\n    around the issue, even though I thought they were identical commands.\n\n  * CGDB now supports a configurable home directory. If the environment\n    variable 'CGDB_DIR' is set to a directory name, CGDB will use the\n    specified directory instead of '~/.cgdb/'.\n\n  * Fix issue #219 - CGDB users on Gentoo were experiencing segfaults at startup\n    due to mismatched wide-character support between the ncurses and tinfo\n    libraries. The build system has been updated to correctly pair the versions\n    of these libraries.\n\ncgdb-0.7.1 (08/04/2019)\n\n  * Status bar messages are now displayed properly in veritical mode.\n    The message is now truncated according to the status bar width instead\n    of the width of the terminal.\n\n  * Fix spurious error from CGDB on shutdown. You may have seen,\n       CGDB had unexpected results. Search the logs for more details.\n    In the log there was a waitpid error. CGDB was using the API wrong.\n\n  * Fix issue #161 - CGDB would lock up when doing a regex search from\n    the status bar if the file was just opened from the file dialog and\n    the search did not match any text in the file. Now the search fails\n    to match text as expected.\n\n  * Status bar commands and gdb console commands now both show gdb\n    output in the gdb window (instead of only the gdb console commands).\n    This fixed issue #154 on github.\n\n  * Fixed issue where typing F8 would do a 'next', 'step' and\n    screen refresh instead of just doing a 'next' command.\n\n  * Fix issue #139 - Show appropriate logos when color disabled\n    Previously, if the user had colors disabled, CGDB would still show\n    logos that had ansi escape color sequences in them.\n\n  * Fixed :highlight regression introduced in 0.7.0.\n    In 0.6.8, if the user entered a :highlight command from the CGDB\n    status bar, for instance:\n        :highlight Comment ctermfg=Blue\n    CGDB would updated the currently displayed source file\n    with the requested highlighting changes. In 0.7.0 this would not occur.\n    Both versions honored :highlight in the .cgdbrc file.\n\n  * Fix issue #125 - CGDB can cross compile again.\n\n  * The rust syntax highlighter is now case sensitive instead of case\n    insensitive.\n\n  * Fix issue #129. CGDB with old versions of ncurses (5.6 or before)\n    would not display colors. Now it will display colors, but will\n    not support ansi colors in the GDB window.\n\n  * Fix issue #137. rustlexer.lpp fails to compile with some versions\n    of GNU autotools.\n\n  * Fix issue #135. CGDB would \"freeze\" when opening the file\n    dialog if the number of files was very large. Updating the\n    gdbwire parser resolved the issue.\n\n  * Add support for readline's backward-kill-word and kill-word at gdb prompt\n\ncgdb-0.7.0 (03/21/2017)\n\n  * Remove help2man dependency. CGDB has a good info page which\n    should suffice.\n\n  * The hlsearch option has been added to CGDB. This improves the\n    searching and displaying of searching functionality within CGDB.\n    By default the option is off. When enabled, and there exists a\n    previous search, CGDB will display the search results using\n    the Search highlighting group. The IncSearch highlighting group\n    is used to display the active search. The hlsearch option\n    highlights previous searches in the source window, the gdb window\n    when in scroll mode and the file dialog window.\n\n  * CGDB now supports showing assembly code! By default, CGDB will\n    display source code when it is available and assembly code\n    when no source code is available. The option 'set disasm'\n    allows you to show mixed source/assembly when both are available.\n\n  * Add support to enable/disable showing assembly code in CGDB.\n    The default is disabled. The 'set disasm' enables showing \n    mixed assembly mode by default. See the documentation for more\n    information.\n\n  * Add the :logo command to cgdb. This tells CGDB to display a logo\n    in the source window.\n\n  * Add an initial Rust syntax highlighter.\n\n  * Support vi type <digit>j and <digit>k motions. Previously only\n    typing j or k with out a number was supported.\n\n  * Add support for marks. m[a-z] will set a local file mark and\n    m[A-Z] will set a global mark. '[a-z] will jump to the\n    corresponding local mark and '[A-Z] will jump to the corresponding\n    global mark. As an added bonus '' will jump to the last jump location\n    and '. will jump to the last executing line.\n    The showmarks option was introduced to show the marks in the source\n    window. It defaults to true. You can disable the viewing of marks\n    using 'set noshowmarks'.\n\n  * Add support to enable or disable color in the source window.\n    The default is enabled. See the documentation for more information.\n\n  * Add support for showing colors in the debug window. If gdb or the\n    program being debugged output an ansi escape code representing color,\n        https://en.wikipedia.org/wiki/ANSI_escape_code#Colors\n    then CGDB will display the corresponding color instead of the escape\n    code. This option is configurable with the set debugwincolor option.\n\n  * Add the winminwidth option to CGDB. It controls the minimum width\n    that a window can be resized. It corresponds to the winminheight\n    option. This was introduced now that CGDB can have vertically split\n    windows.\n\n  * Add support for vertical or horizontal splitting of the CGDB/GDB\n    windows. Thanks to Daniel Cohen for the original implementation\n    of this idea! You can change the window orientation by using the\n    command 'set winsplitorientation=horizontal or vertical'.\n    horizontal is the default orientation. Type Ctrl-w to switch between\n    vertical and horizontal viewing.\n\n  * Remove the TTY mode and TTY window from CGDB. This previously allowed\n    you to send input to the program being debugged through the TTY\n    window in CGDB. It is better for the user to run their program in\n    one terminal and attach to it with CGDB from another terminal in\n    order to get terminal input and terminal output working correctly.\n\n  * Add the -w command line option to CGDB. It directs CGDB to wait\n    to start until either a debugger is attached to it, or until a key\n    is written to it's stdin. This helps simplify debugging CGDB itself.\n\n  * Added GDB scroll mode in addition to the existing GDB command mode.\n    To enter scroll mode, type 'page up' when in GDB mode and to exit\n    type 'q', 'i' or 'Enter'. In scroll mode, you can scroll through\n    the GDB output. You can also search the GDB output with the /, ?, n\n    and N keys. Marks are also supported. You can set a mark by typing\n    m[a-z] and you can jump to a mark by typing '[a-z]. See the\n    documentation for more details.\n\n  * Extended support for the G command when in CGDB mode. The new supported\n    syntax is [<number>]G, allowing users to jump to a specific line within\n    the source file, rather than just the end of the source file. This is\n    identical to the :<number> command.\n\n  * Added support for 'executinglinedisplay' and 'selectedlinedisplay'\n    configuration options. See documentation for full explanation.\n    This allows you to configure how CGDB displays both the currently\n    executing line and the currently selected line.\n    The default for executing line is set to longarrow.\n    The default for selected line is set to block.\n\n    The 'arrowstyle' option has been deprecated (but still supported)\n    and users should use the 'executinglinedisplay' option instead.\n\n  * CGDB now only supports ncurses. Support for curses was removed.\n    The curses support was previously very out of date and untested.\n    If curses support is needed, please let us know.\n\ncgdb-0.6.8 (11/13/2014)\n\n  * Fix issue #40, the map commands were adding additional new lines\n    to the mappings. For instance, 'imap a b' in the ~/.cgdb/cgdbrc\n    file would cause a to map to 'b<cr>' instead of just 'b'.\n\n  * Added feature from issue #29, added 'until' command to CGDB.\n  \n  * Updated autotools configuration files to satisfy warnings and\n    recommendations produced by autotools when run.\n\n  * Fix issue #49, a gcc compiler warning.\n\n  * Fixed a hang consuming 100% CPU usage on OS X Mavericks (github #48).\n\n  * Fixed a hang when quitting cgdb while inferior is running\n    (github #1 and #5 and #46). This was believed to be fixed in the last\n    release but I've finally reproduced the issue and fixed it for good.\n\ncgdb-0.6.7 (01/14/2013)\n\n  * Changed documentation license from GFDL to GPL (github #6).\n\n  * Fixed a hang on MacOS when quitting cgdb while inferior is running\n    (github #1 and #5).\n\n  * Fixed a crash when pressing 'n' in source window (github #5).\n\n  * Fixed a bug opening files (and toggling breakpoints in files) with\n    special characters (e.g. space) in their names.\n\ncgdb-0.6.6 (09/06/2011)\n\n  * Fixed a compile error on Cygwin 1.7 (signature for path conversion\n    functions changed).\n\n  * Fixed a segfault on 64-bit systems in rline.c due to a missing\n    prototype of cgdb_malloc. Thanks to Pietro Cerutti for reporting\n    and diagnosing this one!\n\n  * Fixed a bug in the file dialog. When searching for a file,\n    and you hit enter to select it, CGDB would sometimes skip to\n    the next file that matches and open that file instead.\n\n  * CGDB should now build out of the box on Cygwin again.\n    CGDB used to only support building against curses.h. Now\n    it also supports building against ncurses/curses.h.\n\n  * No longer set the prompt to (gdb) on startup.\n\ncgdb-0.6.5 (01/01/2010)\n\n   * Turn autosourcereload to on by default. This matches GDB's behavior.\n\n   * CGDB should successfully build on Mac OS X 10.5.\n     Thanks Kyle McKay for sending in this patch.\n\n   * Add support for :up and :down in the cgdb status bar.\n     Thanks Benoit Pierre for reporting this.\n\n   * Enhanced tgdb in a2 mode. It now understands GNAT's \n     pre-instance-choice, instance-choice, post-instance-choice extension.\n\n   * Made searching and :commands a little more vi-like. If you abort a\n     search, you can still recall the last search with 'n' or 'N'.  If you\n     backspace to the beginning of the line, a :command or /search is\n     aborted.\n\n   * Added some new cgdb commands.\n       :c is now a synonym for :continue\n       :f is now a synonym for :finish\n       :n is now a synonym for :next\n       :r is not a synonym for :run\n       :s is now a synonym for :step\n       :start is a new command that will send \"start\" to the debugger\n       :kill is a new command that will send \"kill\" to the debugger\n\n   * Shortcut mode has been removed from cgdb. If you liked it, you can\n     put these commands in your cgdbrc file,\n       map r :run<CR>\n       map c :continue<CR>\n       map f :finish<CR>\n       map n :next<CR>\n       map s :step<CR>\n     and you will get the same functionality. Do not forget that,\n       F5 is the same as 'run'.\n       F6 is the same as 'continue'.\n       F7 is the same as 'finish'.\n       F8 is the same as 'next'.\n       F10 is the same as 'step'.\n     are always available.\n\n   * Added a feature to CGDB which allows it to ask readline what key\n     sequence it uses for the Home and End keys. That way, if the terminfo\n     database is wrong, but the OS vendor modified /etc/inputrc, CGDB will\n     have a working Home and End key.\n\n   * CGDB fully supports the use of maps now. The feature is similar in \n     nature to the vim map feature.  It supports map, unmap, imap\n     and iunmap. The map/unmap work in CGDB mode and the imap/iunmap\n     work in GDB mode.\n\n   * Added the cgdbmodekey configuration option. This allows the user to\n     change the key that switches them from GDB mode to CGDB mode. The\n     default value is the Escape key. This is useful for users that want\n     to use readline in vi-mode.\n\n   * Fixed a bug in CGDB where the Insert and Delete keys were not \n     recognized properly all of the time.\n\ncgdb-0.6.4 (04/28/2007)\n\n   * CGDB can now be compiled with -jN option. It would fail previously.\n\n   * CGDB should now build on freebsd with out any patches.\n\n   * Added a new highlighting group, SelectedLineNr. From the documentation:\n     This represents the group that is used when CGDB is displaying the \n     currently selected line.  This is the line that the cursor is on.\n\n   * CGDB shuts down now when it receives C-d (control d), just like GDB \n     does.\n    \n   * Changed the GDB prompt from \"(tgdb)\" to \"(gdb)\". I think users\n     will be more comfortable with \"(gdb)\".\n\n   * Fixed a serious bug in CGDB. After the user entered a command\n     CGDB would not accept any more commands. This would only \n     happen sometimes, if at all. This is due to the fact that CGDB\n     had a bug in it that was sensitive to the amount of data that\n     the read system call returns to it.\n\n   * Fixed a bug in CGDB where it would not show a file in the \n     source viewer if there was a space in the path.\n\n   * Removed the escdelay option. It has been replaced by the \n     timeout, timeoutlen, ttimeout and ttimeoutlen options. Please\n     see the CGDB manual for more documentation on these options.\n\n   * Fixed a bug in libkui. If the user quickly typed ESC followed\n     by an 'o' while in the GDB window, the 'o' character would not\n     get processed by CGDB until another character was hit.\n\n   * CGDB has improved it's -d (Set debugger to use) command line \n     option. CGDB used to force the user to have a space between the \n     -d and the debugger to use, like \"cgdb -d /usr/bin/gdb\". Now the \n     user can also start CGDB like \"cgdb -d/usr/bin/gdb\".\n   \n   * CGDB now honor's the '--' command line option, which will allow the\n     user to explicitly say when they want to end passing arguments to\n     CGDB and begin passing arguments to the debugger.\n   \n   * Fixed another bug in the configure script. If the getopt.h header\n     file is not available on the system, then CGDB will fail to configure.\n     It should finish, and most likely build successfully.\n   \n   * Fixed yet another bug in the auto tools scripts. cgdb-0.6.3 would\n     improperly install gdbmi_driver if make was invoked like \n     'make DESTDIR=/foo install'.\n   \n   * Fixed another bug in the configure script. If the curses.h header\n     file is not available on the system, then CGDB will fail to configure.\n     It would previously configure and then end up with a compile error.\n\ncgdb-0.6.3 (06/03/2006)\n\n   * CGDB will no longer crash if you attempt to do a regular expression\n     search with / when there is no file in the source viewer.\n   \n   * CGDB now uses a pseudo terminal (PTY) to start GDB on, instead of\n     using a pipe. Jens Frederich reported that on a Mac, typing Ctrl-C\n     while the inferior was running would cause GDB to shut down, thus\n     causing CGDB to shut down. This patch fixes that problem. At the\n     same time, this patch caused GDB to ask the user several other\n     questions regarding shared breakpoints, and quiting while the \n     inferior is running. Thus, CGDB acts more as if you were just using \n     GDB.\n   \n   * CGDB is now maintained in a subversion repository instead of a \n     CVS repository. Although this might not appear to effect end users,\n     it is possible that there will be problems associated with this \n     switch. For this reason, I have documented this here.\n   \n   * Fixed another bug in the configure script. CGDB should now be able \n     to configure itself on a Mac. Thanks to Jens Frederich for finding\n     and reporting this problem.\n   \n   * CGDB no longer packages the generated auto tool files in CVS. However,\n     the distributions will have these files. This means you will need \n     autoconf, autoheader and automake installed to compile CGDB from CVS.\n   \n   * CGDB now compiles according to the c89 standard. This should help with\n     porting to older systems.\n   \n   * The file cgdb.txt is now installed into $PREFIX/share/cgdb/cgdb.txt. This\n     is the file CGDB will now use to display the manual when :help is typed.\n     This prevents CGDB from copying the data into the users home directory.\n\ncgdb-0.6.2 (04/09/2006)\n\n   * CGDB should run on solaris 2.5 again. I don't think it would since\n     CGDB .6.0. \n   \n   * Fixed a bug in the configure script that was probably added in .6.0\n     when the large readline integration was done. It was possible for \n     readline to choose the wrong termcap library, because of a bad \n     autoconf macro that CGDB was using. This could potentially cause the\n     screen to get corrupted.\n   \n   * Fixed a bug in the syntax highlighter for C strings. A line like\n     char *s = \"\\\"\"; would cause the highlighter to break and most of the\n     file after that would be displayed in red (string literal color).\n   \n   * The message 'CGDB had unexpected results, ...' will no longer be \n     displayed when CGDB can not parse a breakpoint. This message was being\n     displayed when a watchpoint was issued by the user. It does not fix any\n     bugs though, just stops the message from being displayed.\n\ncgdb-0.6.1 (03/06/2006)\n\n   * An improvement for tab completion support. With certain versions of GDB, \n     an extra line \"server complete ...\" would be added to the list of \n     possible completions. This is no longer added. I believe this would\n     only happen with really old versions of GDB.\n   \n   * Improved tab completion support in readline for quoted data. For \n     instance tab completing C++ member functions like b 'foo::b<tab>\n     will now produce b 'foo::bar()'.\n   \n   * Improved tab completion support. This comes in 2 forms. First, CGDB \n     honors the readline variable rl_completion_query_items. If the number \n     of completions is greater than this variable, then the user will be \n     asked if they want the completion to happen. Second, after each page of\n     completions, the user will be asked if they want more completions to be\n     displayed or not.\n   \n   * Thanks to Steve Folta for sending in a patch which added support in CGDB\n     for configuring the syntax colors. The colors used to be hard coded and\n     could not be changed. Now just use the \":highlight\" command to change \n     the default colors.  There is a new section in the manual called \n     \"CGDB highlighting groups\" that describes the new functionality.\n\n   * Again, thanks to Steve Folta for getting CGDB to run on terminals with\n     background colors besides black. CGDB used to paint the terminal \n     background color black regardless of what it was. Now it respects the \n     background color. This feature only works when linked to ncurses. If you \n     have curses, CGDB will force the background black.\n\n   * CGDB broke it's terminal resizing functionality in cgdb-0.6.0. This is \n     now working again. The bug was introduced while bringing readline into \n     the same address space as CGDB.\n   \n   * The man page now get's installed when 'make install' is done.\n\ncgdb-0.6.0 (01/30/2006)\n\n   * There is a new manual for CGDB. The text version is located in \n     cgdb/doc/cgdb.txt. The info version is available at cgdb/doc/cgdb.info.\n     The text, html, pdf, info and possibly other versions are avialable at\n     http://cgdb.sourceforge.net/documentation.shtml\n   \n   * There is a new CGDB man page. It is located in cgdb/doc/cgdb.1.\n   \n   * Fix a crash in CGDB if the user would type ':e' or ':edit' in the \n     source window, and the source window was empty. This crash is considered\n     not very significant, since I can't understand why the user would try to\n     refresh the file, if it didn't exist.\n\n   * Removed the :q! and :quit! commands, since they don't do anything \n     different than :q or :quit.\n   \n   * Fix a bug regarding the CGDB source viewer displaying breakpoints. If you\n     used the file dialog to open a file, and the file was an absolute \n     path, CGDB would display the file. If it was the first time CGDB \n     encountered this file, then when you set a breakpoint, CGDB would not\n     display the line as having a breakpoint in the source window, even though \n     the breakpoint was actually being set. This is now fixed.\n   \n   * CGDB now supports getting the initial line, as well as the initial\n     file that GDB is on when it first starts the inferior. It used to only\n     determine the initial file.\n   \n   * CGDB now supports when the terminal does not have control flow turned \n     on. If control flow (XON/XOFF) is off, the ^s and ^q will go directly\n     to readline instead of freezing and restarting the terminal.\n   \n   * CGDB now allows the user to use the \\ character for line continuation\n     purposes. GDB handles this and now CGDB also handles this. Before this,\n     CGDB would break if the user attempted to do line continuation.\n   \n   * CGDB no longer needs to do a fork to communicate data back and forth to \n     readline, it runs readline in it's own process context. This is a huge\n     improvement because it means that when you run CGDB you should only see 1 \n     process executing instead of the usual 2.\n\n   * CGDB now supports tab completion. This has been a long awaited missing \n     feature of CGDB.\n\n   * CGDB now depends on readline 5.1.\n\n   * Fix a bug in the c/c++ syntax highlighter. If a file had \"\\\\\" as a \n     string literal, the CGDB syntax tokenizer would be built incorrectly\n     resulting in incorrect file highlighting.\n   \ncgdb-0.5.3 (08/08/2005)\n   \n   * CGDB now can detect the version of readline that it is going to link against.\n   By doing this, it can alert the user at configure time if the readline version\n   is OK to build CGDB with. If it is not OK, configure will fail.\n   \n   * CGDB has changed it's user interface in a way that is not backwards compatible.\n   The 't' key, now sets a temporary breakpoint. The 't' key used to put CGDB into \n   insert mode in the TTY window. Now 'I' does that.\n   \n   * CGDB is now capable of setting a temporary breakpoint thanks to Marcel Lanz.\n   He sent in a patch with the functionality. Hitting 't' set's a temporary breakpoint.\n   \n   * It was reported that the \"Windows\" Key would cause CGDB to shut down.\n   This has been fixed.\n   \n   * Added a new 'arrowstyle' option, see README for documentation\n\n   * Add the ^l command to the Source window. CGDB will now clear and redraw\n   the screen when this command is received.\n   \n   * It is now required to have the GNU history library in order\n   to configure CGDB successfully. This was always the case, but the\n   configure checks wouldn't catch it.\n\n   * Get readline configure check to only look for libreadline. Not libedit, ...\n   Future version of CGDB will depend on functionality that only readline will\n   contains.\n\ncgdb-0.5.2 (05/21/2005)\n\n   * Attempt to get autoconf/automake machinery working with command,\n   make DESTDIR=... install. This should simplify the job of package maintainers.\n\n   * Added the --with-readline-prefix autoconf option. This makes configuring CGDB\n   much easier when readline is in a non standard place.\n   \n   * Fixed major bug in CGDB-0.5.1 that prevented it from running on Solaris 9, \n   FreeBSD 5.2.1 and probably many others. CGDB would hang when trying to read\n   input. This bug made it impossible to use CGDB on those platforms. libkui is\n   the cause of this problem and was a replacement input library for CGDB in \n   cgdb-0.5.1. The bug is now fixed.\n\ncgdb-0.5.1 (04/02/2005)\n\n   * fixed crash when user tries to set a breakpoint on a file that's not \n   a source file. This would happen if you typed ':help' to get into the \n   help, and then tried to set a breakpoint using the spacebar.\n\n   * obsolete the b and f commands. These were responsible for moving between\n   the previous and the next source file. They made CGDB unstable and I don't\n   think they were in the spirit of a vi/vim clone.\n\n   * fixed an annoying bug that appeared while searching for a string. If you \n   canceled the source view regex search by hitting ESC, 2 bad things would happen.\n   You would end up on the line that you cancelled at\n   The currently displayed line would stay the line you can cancelled at, even when\n   you start moving around again.\n\n   * reworked the signal handling code when GDB dies. Now CGDB handles the SIGCHLD\n   and passes the signal notification to TGDB. This fixes a race condition that \n   occurred, even though the race condition appeared to be harmless.\n    \n   * Several memory runtime fixes found thanks to valgrind. This could potentially\n   fix crash's that I just never ran into.\n    \n   * Fix a bug in the c/c++ syntax highlighter. If a file had a dos file format\n   and the C++ style comment // was used, then the file displayed would be \n   completely unreadable. This is because the trailing '\\r' would get grouped with\n   the comment.\n\n   * Fix CGDB command line interface. If the user invoked CGDB like this,\n   'cgdb --args ./main one two three', then CGDB would hang or crash. This\n   was because it use to add extra command line options to GDB on the end.\n   Now it prepends the options to GDB, so that the --args command line \n   can still be honored.\n\n   * Added new logger interface. This traps all errors to a file or \n   a file descriptor. There is now a mechanism to write warnings and \n   errors to a file for inspection by the user.\n\n   * Removed deprecated libinput from the various subdirectory. It has been\n   replaced by libkui.\n\n   * Added 'set asr' or autosourcereload option to CGDB. It is off by default.\n   It is capable of reloading a source file when CGDB detects that a file has\n   been modified. To turn this feature on do ':set asr'.\n\n   * The :edit [:e] colon command has been implemented. It forces CGDB to\n   reload the current file in the source viewer.\n\ncgdb-0.5.0 (07/14/2004)\n\n   * \"progs\" directory is no longer installed in a potentially \n   read-only directory. It is installed now in top_builddir, instead of\n   top_srcdir.\n\n   * Added libkui into CGDB. This is the fisrt of the 4 new libraries\n   designed to make CGDB flexible and modular. Because of this, the version \n   number has been bumped up to .5.0.\n\n   * Fixed crash in TGDB when buffering commands. If the user hit\n   'n' <Enter> <Enter> ... fast, while GDB was not responding, or working\n   on a command, the buffering code in TGDB would enter a bad command into\n   a queue, causing it to crash when it tries to execute the command.\n\n   * Fix crash in CGDB when parsing command line parameters. I think this crash \n     showed up when I starting compiling CGDB with 3.3 instead of 2.95. It would\n     crash when trying to pass the --pid argument to GDB through CGDB.\n\ncgdb-0.4.2 (05/10/2004)\n\n    * CGDB now compiles again on AIX 4.3.  Fixed Makefile.am in various/util/src\n      to not have a space between the -L and the path.\n\ncgdb-0.4.1 (04/26/2004)\n\n   * Removed a memory leak from CGDB. When debugging applications that output\n   a lot of text, CGDB would reportedly grow well over 400MB. Thanks to the\n   sender of this patch, who decided to keep themselves anonymous.\n\n   * Removed all instances of PATH_MAX and replaced with FSUTIL_PATH_MAX.\n   PATH_MAX is not defined on HURD, and thus CGDB wouldn't compile in that\n   environment.\n\n   * Fixed TGDB bug. Tab completion was broken during cgdb-0.4.0 release.\n\ncgdb-0.4.0 (10/28/2003)\n   \n   * Added 'wrapscan' option (abbreviated 'ws').  Note that this means that\n   'ws' no longer means winsplit, since this isn't the standard vi meaning.\n   Fixed bug where 'n' jumps to the top of file when no search was previously\n   done.\n\n   * Fixed bug in TGDB. It would not return TGDB_ABSOLUTE_SOURCE_DENIED if \n   TGDB called 'info source' and there was no line that returned the absolute\n   source path.\n   \n   * Fixed bug in TGDB. TGDB would not query GDB for breakpoints on startup.\n   However, the user can set breakpoints in there .gdbinit. TGDB now gets all\n   breakpoints on startup. This fixes a bug in CGDB. The breakpoint will now\n   be highlighted.\n   \n   * Fixed CGDB bug. When searching for text, CGDB would search for the next\n   occurrence of the string from where it last found an occurrence, rather than\n   where the users cursor is.\n   \n   * Fixed crash in TGDB. It would try to parse watchpoints.\n   It will no longer do this.\n   \n   * Added new feature. CGDB added the 'set showtgdbcommands' option.\n   If this is set, CGDB will show all the commands that it is sending\n   to GDB to get work done. Otherwise, if its not set, CGDB will not show\n   the user the commands. The default value is off. Although, I currently\n   have mine set :). After all, you never can be to sure what this \n   program is doing ...\n   \n   * Fixed bug in TGDB. TGDB used to return a newline for the front end to\n   print when a GUI command was issued. This made sure the output of the\n   command happened on a different line than the prompt. If the user ran \n   many commands in a row through CGDB, you would see an extra new line\n   appear. Now TGDB returns a new line when the command is actually given\n   to GDB, not when the command is issued.\n   \n   * Fixed bug in TGDB. TGDB would not return the correct file:line if the\n   user ran a command file through gdb on init and the file instructed gdb\n   to set a breakpoint and run. CGDB would display line 1 of the correct \n   file instead of the correct line.\n   \n   * Fixed bug in TGDB/CGDB. TGDB would return TGDB_UPDATE_SOURCE_FILES when \n   there was no source files in the list ( ex. if the inferior was compiled \n   without debug).  This would cause CGDB to act buggy when the user tried to \n   open the filedlg on a program that was not compiled with debug. The first \n   time you would open the file dialog it would display a blank screen. The \n   second time it would give you an error but it would put you in the file\n   dialog mode, even though it displayed the CGDB source window. Both of these\n   bugs should be fixed.\n   \n   * Fixed bug in TGDB/CGDB. It was not properly parsing the breakpoint information\n   out of GDB. When using C++, GDB would output data that TGDB did not expect.\n   TGDB can now parse the data properly. The result is that CGDB now displays\n   all of the breakpoints in the source window. It used to not display them all.\n\ncgdb-0.3.4\n\n   * Fixed bug in cgdb. If the user hit 'o' in cgdb, then got out of the \n   file dialog, the next time ^c was typed in the gdb window, the prompt\n   would not refresh itself properly.\n   \n   * Fixed ada highlighting bug. String literals were not being highlighted.\n   \n   * Temporarily fixed the ^c bug. The data at the console is now cleared when\n   the user hits ^c. A better fix will be arranged for when full signal handling\n   support is integrated.\n   \n   * Fixed libinput bug. If the user held down '\\n' for a long time, and then\n   hit any other key, an extra '\\n' would come out and then the other key.\n   This was *very* annoying when holding down the '\\n' key to continue nexting.\n\n   * Fixed highlighting bug. This ( '\\\"' ) would start a string literal \n   in C/C++.\n\ncgdb-0.3.3b\n\n\t* Fixed string literal bug where files don't highlight properly in C/C++.\n\ncgdb-0.3.3a\n\n\t* Fixed bug in the file dialog window. It would not accept the enter\n\tkey, so the user could never select a file.\n\ncgdb-0.3.3\n\n\t* Fixed tab bug, where tab spaces were being displayed incorrectly in \n\tthe source window. Now cgdb can handle tabs in a file properly.\n\n\t* Added VI-style page up/page down commands. Deprecated old Shift-J \n\tand Shift-K page up/page down style commands.\n\n\t* Fixed bug in ada highlighter. The file would not be displayed correctly \n\twhen trying to highlight an ada source file.\n\ncgdb-0.3.2\n\n\t* Fast tokenizer replaces older hand written one. CGDB now can syntax\n\thighlight a 15000+ line ada or c file in fractions of a second compared \n\tto the second it used to take. Believe me, 1 second to load a file \n\tcan get frustrating when you wait enough times. :)\n\n\t* CGDB now reads $HOME/.cgdb/cgdbrc, this is useful for automating\n\tany commands the user would normally type into the status bar.\n\tThis is a *great* first attempt at making cgdb configurable.\n\n\t* There are *many* new options to type into the status bar, \n\tthey are all listed in the README file, or from :help, check it out.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.8349609375,
          "content": "# CGDB\n\nCGDB is a very lightweight console frontend to the GNU debugger.  It provides\na split screen interface showing the GDB session below and the program's\nsource code above.  The interface is modelled after vim's, so vim users should\nfeel right at home using it.\n\nScreenshot, downloads, and documentation are available from the home page:\nhttps://cgdb.github.io\n\nOfficial source releases are available here:\nhttps://cgdb.me/files/\n\n## Build Instructions\n\n### Dependencies\n\nYou must have the following packages installed.\n- sh\n- autoconf\n- automake\n- aclocal\n- autoheader\n- libtool\n- flex\n- bison\n- gcc/g++ (c11/c++11 support)\n\n### Preparing the configure\n\nRun ./autogen.sh in the current working directory to generate the configure\nscript.\n\n### Running configure, make and make install\n\nYou can run ./configure from within the source tree, however I usually run\nconfigure from outside the source tree like so,\n```\nmkdir ../build\ncd ../build\n../cgdb/configure --prefix=$PWD/../prefix\nmake -srj4\nmake install\n```\n\nCGDB is a C11/C++11 project, just like GDB.\nSince the standard is relatively new, your gcc/g++ may support it out of\nthe box, or may require the -std=c11 and -std=c++11 flags.\nYou can see how to set these flag in the below configure invocation.\n\nI typically enable more error checking with the build tools like so,\n\n> YFLAGS=\"-Wno-deprecated\" CFLAGS=\"-std=c11 -g -O0 -Wall -Wextra -Wshadow -pedantic -Wno-unused-parameter\" CXXFLAGS=\"-std=c++11 -g -O0 -Wall -Wextra -Wshadow -Werror -pedantic -Wmissing-include-dirs -Wno-unused-parameter -Wno-sign-compare -Wno-unused-but-set-variable -Wno-unused-function -Wno-variadic-macros\" ../cgdb/configure --prefix=$PWD/../prefix\n\nIf you like to have a silent build, and the libtool link lines are bothering\nyou, you can set this environment variable to suppress libtools printing of\nthe link line,\n>  LIBTOOLFLAGS=--silent\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.62890625,
          "content": "#!/bin/sh\n\n# Responsible for running all the necessary programs in\n# the GNU Autotools package to properly setup the build system\n# and generate the necessarily build files for you to type\n#   configure\n#   make\n#   make install\n\n# Set if doing an official release\n# CGDB_VERSION=0.8.0\n\nif [ -z \"$CGDB_VERSION\" ]; then\n  CGDB_VERSION=`git rev-parse --short HEAD`\nfi\n\necho $CGDB_VERSION > VERSION\n\n# Stop on error\nset -e\n\nrm -rf autom4te.cache/\n\necho \"-- Running aclocal\"\naclocal -I config\n\necho \"-- Running autoconf\"\nautoconf -f\n\necho \"-- Running autoheader\"\nautoheader\n\necho \"-- Running automake\"\nautomake -a -c -f -Wno-portability --foreign\n\n"
        },
        {
          "name": "autorelease.sh",
          "type": "blob",
          "size": 7.54296875,
          "content": "#!/bin/bash -e\n\n# Usage: ./autorelease.sh [optional ./configure arguments]\n\nCGDB_VERSION=`date +\"%Y%m%d\"`\necho \"-- Preparing to create a new cgdb release.\"\necho \"\"\necho -n \"Version for this release: [$CGDB_VERSION] \"\nread tmp\nif [ \"$tmp\" != \"\" ]; then\n    CGDB_VERSION=$tmp\nfi\n\necho \"\"\necho \"-- This script can generate an update_docs.sh script that will copy this\"\necho \"-- release's documentation to your local cgdb web repository, so you can\"\necho \"-- push to the web site.\"\necho \"\"\necho -n \"Generate update_docs.sh? [n] \"\nread tmp\nif [ \"$tmp\" = \"y\" ]; then\n    while true; do\n        echo -n \"Path to local cgdb web repository (e.g. ../cgdb.github.com): \"\n        read CGDB_WEB\n        if [ \"$CGDB_WEB\" = \"\" ]; then\n            continue\n        fi\n        CGDB_WEB=$( cd $(dirname $CGDB_WEB); pwd)/$(basename $CGDB_WEB)\n        if [ ! -e $CGDB_WEB ]; then\n            echo \"Repository path '$CGDB_WEB' does not exist.\"\n        elif [ ! -d $CGDB_WEB ]; then\n            echo \"Repository path '$CGDB_WEB' is not a directory.\"\n        elif [ ! -d $CGDB_WEB/.git ]; then\n            echo \"Repository path '$CGDB_WEB' is not a git repository.\"\n        else\n            break\n        fi\n    done\nfi\n\necho \"\"\necho -n \"Update NEWS file with version $CGDB_VERSION: [n] \"\nread CGDB_UPDATE_NEWS\n\necho \"\"\necho \"-- Release build starting.\"\n \nCGDB_RELEASE=cgdb-$CGDB_VERSION\nCGDB_RELEASE_STR=`echo \"$CGDB_RELEASE\" | perl -pi -e 's/\\./_/g'`\nCGDB_SOURCE_DIR=\"$PWD\"\nCGDB_RELEASE_DIR=\"$PWD/release\"\nCGDB_BUILD_DIR=\"$CGDB_RELEASE_DIR/build\"\nCGDB_BUILD_TEST_DIR=\"$CGDB_RELEASE_DIR/build.test\"\nCGDB_OUTPUT_LOG=\"$CGDB_RELEASE_DIR/release.log\"\nCGDB_RELEASE_TAG_SH=\"$CGDB_RELEASE_DIR/scripts/tag.sh\"\nCGDB_RELEASE_DOCS_SH=\"$CGDB_RELEASE_DIR/scripts/update_docs.sh\"\nCGDB_RELEASE_EMAIL=\"$CGDB_RELEASE_DIR/cgdb.email\"\n\n# Run a command and send output to log with stderr reproduced on console\nfunction run {\n    echo \"In directory: `pwd`\" >> \"$CGDB_OUTPUT_LOG\"\n    echo \"Executing:    $@\" >> \"$CGDB_OUTPUT_LOG\"\n    echo \"\" >> \"$CGDB_OUTPUT_LOG\"\n    \"$@\" >> \"$CGDB_OUTPUT_LOG\" 2> >(tee -a \"$CGDB_OUTPUT_LOG\" >&2)\n    echo \"\" >> \"$CGDB_OUTPUT_LOG\"\n}\n\n# Create an empty release directory, everything is created in here.\nif [ -e $CGDB_RELEASE_DIR ]; then\n    chmod -R u+rw $CGDB_RELEASE_DIR\n    rm -rf $CGDB_RELEASE_DIR\nfi\nmkdir $CGDB_RELEASE_DIR\n\ntouch \"$CGDB_SOURCE_DIR/doc/cgdb.texi\"\n\necho \"-- All release files will be written to $CGDB_RELEASE_DIR\"\necho \"-- Output will be logged to $CGDB_OUTPUT_LOG\"\n\n# Autogen\necho \"-- Regenerate the autoconf files\"\nCGDB_VERSION=$CGDB_VERSION run ./autogen.sh $CGDB_VERSION\n\n# Update NEWS\nif [ \"$CGDB_UPDATE_NEWS\" = \"y\" ]; then\n    cd \"$CGDB_SOURCE_DIR\"\n    echo \"-- Update the NEWS file\"\n    echo -e \"$CGDB_RELEASE (`date +%m/%d/%Y`)\\n\" > datetmp.txt\n    cp NEWS NEWS.bak\n    cat datetmp.txt NEWS.bak > NEWS\n    rm NEWS.bak\n    rm datetmp.txt\nelse\n    echo \"-- Skipping update of NEWS file\"\nfi\n\n# Build the distribution\necho \"-- Creating the distribution in $CGDB_BUILD_DIR\"\nmkdir $CGDB_BUILD_DIR\ncd \"$CGDB_BUILD_DIR\"\nrun $CGDB_SOURCE_DIR/configure \"$@\"\nrun make -s\nDISTCHECK_CONFIGURE_FLAGS=\"$@\" run make distcheck\n\n# Generate documentation\ncd \"$CGDB_BUILD_DIR/doc/\"\necho \"-- Generate HTML manual\"\nrun make html\necho \"-- Generate HTML NO SPLIT manual\"\nrun makeinfo --html -I \"$CGDB_SOURCE_DIR/doc\" --no-split \\\n             -o cgdb-no-split.html \"$CGDB_SOURCE_DIR/doc/cgdb.texi\"\necho \"-- Generate TEXT manual\"\nrun makeinfo --plaintext -I \"$CGDB_SOURCE_DIR/doc\" \\\n             -o \"$CGDB_SOURCE_DIR/doc/cgdb.txt\" \\\n             \"$CGDB_SOURCE_DIR/doc/cgdb.texi\"\necho \"-- Generate PDF manual\"\nrun make pdf\n\n# Test the distribution\necho \"-- Unpacking and testing in $CGDB_BUILD_TEST_DIR\"\nmkdir \"$CGDB_BUILD_TEST_DIR\"\ncd \"$CGDB_BUILD_TEST_DIR\"\nrun tar -zxvf \"$CGDB_BUILD_DIR/$CGDB_RELEASE.tar.gz\"\nmkdir build\ncd build\nrun ../$CGDB_RELEASE/configure --prefix=$PWD/../install \"$@\"\nrun make -s\nrun make install\n../install/bin/cgdb --version\n\necho \"-- Distribution test successful, copying files...\"\ncd \"$CGDB_SOURCE_DIR\"\nrun mkdir $CGDB_RELEASE_DIR/docs\nrun cp doc/cgdb.txt \"$CGDB_RELEASE_DIR/docs\"\nrun cp doc/cgdb.info \"$CGDB_RELEASE_DIR/docs\"\nrun cp \"$CGDB_BUILD_DIR/doc/cgdb.pdf\" \"$CGDB_RELEASE_DIR/docs\"\nrun cp \"$CGDB_BUILD_DIR/doc/cgdb-no-split.html\" \"$CGDB_RELEASE_DIR/docs\"\nrun cp -r \"$CGDB_BUILD_DIR/doc/cgdb.html\" \"$CGDB_RELEASE_DIR/docs\"\nrun mv \"$CGDB_BUILD_DIR/$CGDB_RELEASE.tar.gz\" \"$CGDB_RELEASE_DIR\"\nrun mkdir \"$CGDB_RELEASE_DIR/scripts\"\nrun touch $CGDB_RELEASE_TAG_SH $CGDB_RELEASE_DOCS_SH\nrun chmod +x $CGDB_RELEASE_TAG_SH $CGDB_RELEASE_DOCS_SH\n\n# Create releasedir/tag.sh\nTAG_NAME=v$CGDB_VERSION\necho \"#!/bin/sh\" >> $CGDB_RELEASE_TAG_SH\necho \"\" >> $CGDB_RELEASE_TAG_SH\necho \"echo \\\"-- Commit the release $CGDB_RELEASE_STR\\\"\" >> $CGDB_RELEASE_TAG_SH\necho \"git commit -a -m \\\"Committing $CGDB_RELEASE_STR release.\\\"\" >> $CGDB_RELEASE_TAG_SH\necho \"\" >> $CGDB_RELEASE_TAG_SH\necho \"echo \\\"-- Tag release $TAG_NAME\\\"\" >> $CGDB_RELEASE_TAG_SH\necho \"git tag -m \\\"Tag $TAG_NAME release.\\\" $TAG_NAME\" >> $CGDB_RELEASE_TAG_SH\necho \"echo \\\"-- Push this tag with: git push $TAG_NAME\\\"\" >> $CGDB_RELEASE_TAG_SH \n\n# TODO: Github file uploads\n#       see: https://github.com/wereHamster/ghup\n#echo 'echo \"-- uploading the file $CGDB_RELEASE.tar.gz\"' >> $CGDB_RELEASE_UPLOAD_SH\n#echo 'scp $CGDB_RELEASE.tar.gz bobbybrasko@upload.sf.net' >> $CGDB_RELEASE_UPLOAD_SH\n#echo '' >>  $CGDB_RELEASE_UPLOAD_SH\n\n# Create release/scripts/update_docs.sh\nif [ \"$CGDB_WEB\" != \"\" ]; then\n    echo '#!/bin/sh' >> $CGDB_RELEASE_DOCS_SH\n    echo \"\" >> $CGDB_RELEASE_DOCS_SH\n    echo 'echo \"-- Updating cgdb.pdf\"' >> $CGDB_RELEASE_DOCS_SH\n    echo \"cp docs/cgdb.pdf $CGDB_WEB/docs\" >> $CGDB_RELEASE_DOCS_SH\n    echo '' >> $CGDB_RELEASE_DOCS_SH\n    echo 'echo \"-- Updating single page HTML\"' >> $CGDB_RELEASE_DOCS_SH\n    echo \"cp docs/cgdb-no-split.html $CGDB_WEB/docs/cgdb.html\" \\\n         >> $CGDB_RELEASE_DOCS_SH\n    echo '' >> $CGDB_RELEASE_DOCS_SH\n    echo 'echo \"-- Uploading multiple page HTML\"' >> $CGDB_RELEASE_DOCS_SH\n    echo \"cp -r docs/cgdb.html/* $CGDB_WEB/docs/\" >> $CGDB_RELEASE_DOCS_SH\n    echo \"mv $CGDB_WEB/docs/index.html $CGDB_WEB/docs/cgdb-split.html\" >> $CGDB_RELEASE_DOCS_SH\n    echo '' >> $CGDB_RELEASE_DOCS_SH\n    echo \"echo \\\"Verify and commit the changes in $CGDB_WEB to update the\" \\\n         \"site.\\\"\" >> $CGDB_RELEASE_DOCS_SH\nelse\n    echo \"-- Skipping generation of update_docs.sh\"\nfi\n\n# Notification email\necho \"-- Creating Email $CGDB_RELEASE_DIR/cgdb.email\"\necho \"$CGDB_RELEASE Released\" >> $CGDB_RELEASE_EMAIL\necho \"-------------------\" >> $CGDB_RELEASE_EMAIL\necho \"\" >> $CGDB_RELEASE_EMAIL\necho \"Downloading:\" >> $CGDB_RELEASE_EMAIL\necho \"\" >> $CGDB_RELEASE_EMAIL\necho \"    Go to http://cgdb.github.io/ for download link and instructions.\" >> $CGDB_RELEASE_EMAIL\necho \"\" >> $CGDB_RELEASE_EMAIL\necho \"This new version contains the following changes:\" >> $CGDB_RELEASE_EMAIL\necho \"\" >> $CGDB_RELEASE_EMAIL\n\nperl -n -e '$capture_val; if ($_ =~/cgdb-.*/) { $capture_val++} if ($capture_val == 1) { print $_}' NEWS >> $CGDB_RELEASE_EMAIL\n\necho \"\" >> $CGDB_RELEASE_EMAIL\necho \"Enjoy,\" >> $CGDB_RELEASE_EMAIL\necho \"The CGDB Team\" >> $CGDB_RELEASE_EMAIL\n\n# TODO: Use jekyll in the web site and then set a variable for the version\n################################################################################\n#echo \"-- Modifying doc/htdocs/download.php\"\n################################################################################\n#perl -pi -e \"s/define\\('LATEST', \\\".*?\\\"\\)/define\\('LATEST', \\\"$CGDB_VERSION\\\"\\)/g\" doc/htdocs/download.php\n\necho \"\"\necho \"Release built successfully!\"\necho \"\"\necho \"Use the scripts in the release/scripts directory to tag the commit,\"\necho \"update the web site docs, etc.\"\n"
        },
        {
          "name": "cgdb",
          "type": "tree",
          "content": null
        },
        {
          "name": "cgdb_custom_config.h.in",
          "type": "blob",
          "size": 0.2109375,
          "content": "#ifndef CGDB_CUSTOM_H\n#define CGDB_CUSTOM_H\n\n#if HAVE_ATTRIBUTE_PRINTF\n#define ATTRIBUTE_PRINTF( _x, _y ) __attribute__( ( __format__( __printf__, _x, _y ) ) )\n#else\n#define ATTRIBUTE_PRINTF( _x, _y )\n#endif\n\n#endif\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 11.8486328125,
          "content": "dnl Process this file with autoconf to produce a configure script.\nAC_PREREQ(2.5)\nAC_INIT(cgdb, [m4_esyscmd_s([cat VERSION])])\nAC_CONFIG_AUX_DIR(config)\nAC_CONFIG_HEADERS(config.h)\nAM_INIT_AUTOMAKE\n\ndnl Checks for programs.\nAC_PROG_CC\nAM_PROG_CC_C_O\nAC_PROG_CXX\nAC_PROG_INSTALL\nAC_PROG_RANLIB\nAM_PROG_LEX\nAC_PROG_YACC\n\ndnl determine if we are running in linux, cygwin, solaris, or freebsd\nAC_CANONICAL_HOST\n\ncase $host in\n *-*-linux*)\n   AC_DEFINE(HAVE_LINUX, 1,  Linux environment)\n   ;;\n *-*-cygwin*)\n   AC_DEFINE(HAVE_CYGWIN, 1,  Cygwin environment)\n   ;;\n *)\n   ;;\nesac\n\ndnl Checks for header files.\nAC_HEADER_STDC\nAC_HEADER_SYS_WAIT\n\ndnl determine if terminal headers are available for opening pty\ndnl these need only be optionally available\nAC_CHECK_HEADERS(pty.h sys/stropts.h util.h libutil.h)\n\nAC_CHECK_HEADERS([termios.h],,[AC_MSG_ERROR([CGDB requires termios.h to build.])])\nAC_CHECK_HEADERS([sys/select.h],,[AC_MSG_ERROR([CGDB requires sys/select.h to build.])])\nAC_CHECK_HEADERS([errno.h],,[AC_MSG_ERROR([CGDB requires errno.h to build.])])\nAC_CHECK_HEADERS([fcntl.h],,[AC_MSG_ERROR([CGDB requires fcntl.h to build.])])\nAC_CHECK_HEADERS([grp.h],,[AC_MSG_ERROR([CGDB requires grp.h to build.])])\nAC_CHECK_HEADERS([pwd.h],,[AC_MSG_ERROR([CGDB requires pwd.h to build.])])\nAC_CHECK_HEADERS([signal.h],,[AC_MSG_ERROR([CGDB requires signal.h to build.])])\nAC_CHECK_HEADERS([stdarg.h],,[AC_MSG_ERROR([CGDB requires stdarg.h to build.])])\nAC_CHECK_HEADERS([stdio.h],,[AC_MSG_ERROR([CGDB requires stdio.h to build.])])\nAC_CHECK_HEADERS([stdlib.h],,[AC_MSG_ERROR([CGDB requires stdlib.h to build.])])\nAC_CHECK_HEADERS([string.h],,[AC_MSG_ERROR([CGDB requires string.h to build.])])\nAC_CHECK_HEADERS([sys/ioctl.h],,[AC_MSG_ERROR([CGDB requires sys/ioctl.h to build.])])\nAC_CHECK_HEADERS([sys/stat.h],,[AC_MSG_ERROR([CGDB requires sys/stat.h to build.])])\nAC_CHECK_HEADERS([sys/time.h],,[AC_MSG_ERROR([CGDB requires sys/time.h to build.])])\nAC_CHECK_HEADERS([time.h],,[AC_MSG_ERROR([CGDB requires time.h to build.])])\nAC_CHECK_HEADERS([sys/types.h],,[AC_MSG_ERROR([CGDB requires sys/types.h to build.])])\nAC_CHECK_HEADERS([unistd.h],,[AC_MSG_ERROR([CGDB requires unistd.h to build.])])\nAC_CHECK_HEADERS([ctype.h],,[AC_MSG_ERROR([CGDB requires ctype.h to build.])])\nAC_CHECK_HEADERS([limits.h],,[AC_MSG_ERROR([CGDB requires limits.h to build.])])\nAC_CHECK_HEADERS([math.h],,[AC_MSG_ERROR([CGDB requires math.h to build.])])\nAC_CHECK_HEADERS([regex.h],,[AC_MSG_ERROR([CGDB requires regex.h to build.])])\nAC_CHECK_HEADERS([curses.h],,[\n   AC_CHECK_HEADERS([ncurses/curses.h],,[\n      AC_MSG_ERROR([CGDB requires curses.h or ncurses/curses.h to build.])])])\n\ndnl Check for getopt.h, If this is here then getopt_long can be used.\nAC_CHECK_HEADERS([getopt.h],\n\t\t [AC_DEFINE(HAVE_GETOPT_H, 1, have getopt_long)])\n\ndnl determine if /dev/ptmx is available for pseudo terminals\nAC_CHECK_FILE([/dev/ptmx],\n\t      [AC_DEFINE(HAVE_DEV_PTMX, 1, have /dev/ptmx)])\n\ndnl determine if /proc/self/status is available for checking TracerPid\nAC_CHECK_FILE([/proc/self/status],\n\t      [AC_DEFINE(HAVE_PROC_SELF_STATUS_FILE, 1, have /proc/self/status file)])\n\ndnl Check for pty.h\nAC_CHECK_HEADERS([pty.h],\n\t\t [AC_DEFINE(HAVE_PTY_H, 1, have pty.h)])\n\nAC_CHECK_LIB(util,openpty,\n         [AC_DEFINE(HAVE_OPENPTY, 1, Define to 1 if you have the openpty function) LIBS=\"$LIBS -lutil\"])\n\ndnl Checks for typedefs, structures, and compiler characteristics.\nAC_C_CONST\nAC_TYPE_UID_T\nAC_TYPE_MODE_T\nAC_TYPE_PID_T\nAC_TYPE_SIZE_T\n\ndnl Checks for library functions.\nAC_FUNC_SETPGRP\nAC_TYPE_SIGNAL\nAC_FUNC_VPRINTF\n\nAC_CHECK_FUNC([putenv],,AC_MSG_ERROR([CGDB requires putenv to build.]))\nAC_CHECK_FUNC([select],,AC_MSG_ERROR([CGDB requires select to build.]))\nAC_CHECK_FUNC([strdup],,AC_MSG_ERROR([CGDB requires strdup to build.]))\nAC_CHECK_FUNC([strerror],,AC_MSG_ERROR([CGDB requires strerror to build.]))\nAC_CHECK_FUNC([ttyname_r],[AC_DEFINE(HAVE_TTYNAME_R, 1, [Define to 1 if you have the ttyname_r function])],)\n\ndnl define HAVE_PTSNAME_R if we have reentrant version of ptsname.\nAC_TRY_LINK([#ifndef _GNU_SOURCE\n             #define _GNU_SOURCE\n             #endif\n             #include <stdlib.h>],\n            [char buf[10]; ptsname_r(0, buf, sizeof(buf));],\n            [AC_DEFINE(HAVE_PTSNAME_R, 1,\n                     Define to 1 if you have a re-entrant version of ptsname)])\n\ndnl Add support for creating documentation\ndnl\ndnl It enables the use of the makinfo documentation tool to\ndnl create html and pdf documentation for distribution with cgdb\nAC_ARG_ENABLE([docs],\n    [AS_HELP_STRING([--enable-docs], [generate documentation with makeinfo\n    (default yes)])],\n    [case \"${enableval}\" in\n        yes) enable_docs=yes ;;\n        no)  enable_docs=no ;;\n        *) AC_MSG_ERROR([bad value ${enableval} for --enable-docs, to \\\ndisable this option use \"--disable-docs\" or \"--enable-docs=no\"]) ;;\n         esac],\n    [enable_docs=yes])\n\nif test \"$enable_docs\" = \"yes\"; then\n  AC_CHECK_PROG([HAS_MAKEINFO], [makeinfo], [yes], [no])\nfi\n\ndnl Build the documentation if enable docs is true\nAM_CONDITIONAL([WANT_DOCS], [test x$enable_docs = xyes])\n\n\n\ndnl Default variables\ndnl If ncurses is yes after arguments, than use ncurses. Otherwise, use curses\nopt_with_readline_prefix=no\nuse_ncurses_library=yes\nopt_with_ncurses_prefix=no\nopt_with_curses_prefix=no\n\ndnl argument to configure\nAC_ARG_WITH(readline, AC_HELP_STRING([--with-readline=PREFIX], [Use system installed readline library]), opt_with_readline_prefix=$withval)\nAC_ARG_WITH(ncurses, AC_HELP_STRING([--with-ncurses=PREFIX], [Use system installed ncurses library]), opt_with_ncurses_prefix=$withval)\nAC_ARG_WITH(curses, AC_HELP_STRING([--with-curses=PREFIX], [Use system installed curses library]), opt_with_curses_prefix=$withval use_ncurses_library=no)\n\n\nif test \"$opt_with_readline_prefix\" != \"no\"; then\n  # If set to \"yes\", it is on the compilers include path.\n  if test \"$opt_with_readline_prefix\" != \"yes\"; then\n    LDFLAGS=\"-L$opt_with_readline_prefix/lib $LDFLAGS\" CFLAGS=\"-I$opt_with_readline_prefix/include -I$opt_with_readline_prefix/include/readline $CFLAGS\" CPPFLAGS=\"-I$opt_with_readline_prefix/include -I$opt_with_readline_prefix/include/readline $CPPFLAGS\"\n  fi\nfi\n\ndnl ncurses-prefix argument\nif test \"$opt_with_ncurses_prefix\" != \"no\"; then\n  # If set to \"yes\", it is on the compilers include path.\n  if test \"$opt_with_curses_prefix\" != \"yes\"; then\n    LDFLAGS=\"-L$opt_with_ncurses_prefix/lib $LDFLAGS\" CFLAGS=\"-I$opt_with_ncurses_prefix/include -I$opt_with_ncurses_prefix/include/ncurses $CFLAGS\" CPPFLAGS=\"-I$opt_with_ncurses_prefix/include -I$opt_with_ncurses_prefix/include/ncurses $CPPFLAGS\"\n  fi\nfi\n\nif test \"$opt_with_curses_prefix\" != \"no\"; then\n  # If set to \"yes\", it is on the compilers include path.\n  if test \"$opt_with_curses_prefix\" != \"yes\"; then\n    LDFLAGS=\"-L$opt_with_curses_prefix/lib $LDFLAGS\" CFLAGS=\"-I$opt_with_curses_prefix/include $CFLAGS\" CPPFLAGS=\"-I$opt_with_curses_prefix/include $CPPFLAGS\"\n  fi\nfi\n\ndnl make sure that (f)lex is available\nif test \"$LEX\" != \"flex\" -a \"$LEX\" != \"lex\"; then\n\tAC_MSG_ERROR([Please install flex before installing])\nfi\n\ndnl check that the required tools are available to generate documentation\nif test \"$enable_docs\" = \"yes\"; then\n    if test \"$HAS_MAKEINFO\" != \"yes\" ; then\n        AC_MSG_ERROR([Please install makeinfo before installing])\n    fi\nfi\n\ndnl readline and ncurses/curses configure magic is difficult.\ndnl A prerequisite is that CGDB needs either ncurses or curses to link.\ndnl A prerequisite is that readline needs tgetent to link.\ndnl However, I'm not sure if ncurses or curses provides tgetent all the time.\ndnl So, here's the algorithm:\ndnl   Part 1: Detecting ncurses/curses\ndnl     Check for ncurses (for CGDB)\ndnl     Check for curses (for CGDB)\ndnl     If found ncurses or curses, continue. Otherwise quit.\ndnl\ndnl   Part 2: Detecting tgetent\ndnl     Check for tgetent in ncurses or curses (the one found above)\ndnl     Check for tgetent in tinfo\ndnl     Check for tgetent in libc\ndnl     If found tgetent, continue. Otherwise quit.\n\ndnl Part 1: Detecting ncurses/curses\ndnl If the user want ncurses, Try to find it and add it to the linking library.\nif test \"$use_ncurses_library\" = \"yes\"; then\n        AC_CHECK_LIB(ncurses, initscr,\n            [AC_DEFINE(HAVE_NCURSES, [\"yes\"], ncurses library)])\n        AC_CHECK_LIB(ncursesw, initscr,\n            [AC_DEFINE(HAVE_NCURSES, [\"yes\"], ncursesw library)])\n        if test \"$ac_cv_lib_ncursesw_initscr\" = \"yes\"; then\n\t    curses_lib_name=\"ncursesw\"\n        elif test \"$ac_cv_lib_ncurses_initscr\" = \"yes\"; then\n\t    curses_lib_name=\"ncurses\"\n        else\n            AC_MSG_ERROR([cgdb needs ncurses/curses to build. ncurses is strongly recommended.\n            If your system does not have ncurses get it!\n            If that is not an option try 'configure --with-curses.'\n            You can try --with-ncurses=/foo/ncurses to tell configure where ncurses is.])\n        fi\n\nfi\ndnl If the user want curses, Warn them that cgdb does not run perfect against it.\nif test \"$use_ncurses_library\" = \"no\"; then\n        AC_MSG_WARN([ *****************************************************\n                     cgdb may not run properly when linked against curses!\n                     *****************************************************])\n        AC_CHECK_LIB(curses, initscr,\n            [AC_DEFINE(HAVE_CURSES, 1, curses library)],\n            AC_MSG_ERROR([cgdb needs ncurses/curses to build. ncurses is strongly recommended.\n    If your system does not have ncurses get it!\n    You can try --with-curses=/foo/curses to tell configure where curses is.]))\n\tcurses_lib_name=\"curses\"\nfi\n\ndnl Detect __attribute__( ( __format__( __printf__ ) ) ) support\nAC_MSG_CHECKING([Checking attribute printf support])\n    AC_TRY_LINK([#include <stdlib.h>\n                 static void test(const char *fmt, ...)\n                    __attribute__((format(__printf__, 1, 2)));\n                 static void test(const char *fmt, ...) { (void)fmt; }],\n                [test(\"foobar\");],\n                [AC_MSG_RESULT([yes])\n                 AC_DEFINE(HAVE_ATTRIBUTE_PRINTF, 1,\n                    Define to 1 if compiler supports attribute format\n                    printf)],\n                [AC_MSG_RESULT([no])])\n\ndnl Make sure there is a version of readline that CGDB supports.\ndnl Simply putting 5.1* -> 5.9* just to take into account future versions.\nRL_LIB_READLINE_VERSION\ncase \"$ac_cv_rl_version\" in\n5.1*|5.2*|5.3*|5.4*|5.5*|5.6*|5.7*|5.8*|5.9*|6*|7*|8*|9*) ;;\n*)      AC_MSG_ERROR([CGDB requires GNU readline 5.1 or greater to link.\n  If you used --with-readline instead of using the system readline library, \n  make sure to set the correct readline library on the linker search path \n  via LD_LIBRARY_PATH or some other facility.])\n\t;;\nesac\n\ndnl This will DEFINE the readline headers.\nRL_LIB_READLINE_INCLUDES\n\ndnl Made it this far, add the readline and termcap LIBS\nLIBS=\"-lreadline $TERMCAP_LIB $LIBS\"\ndnl Add the ncurses/curses lib, if it's not the same as the termcap lib\nif test \"$TERMCAP_LIB\" != \"-l$curses_lib_name\"; then\n  LIBS=\"-l$curses_lib_name $LIBS\"\nfi\n\nAH_BOTTOM([#include <cgdb_custom_config.h>])\n\nAC_OUTPUT(\n    cgdb_custom_config.h \\\n    Makefile \\\n    lib/Makefile \\\n    lib/kui/Makefile \\\n    lib/rline/Makefile \\\n    lib/tgdb/Makefile \\\n    lib/tokenizer/Makefile \\\n    lib/util/Makefile \\\n    lib/vterm/Makefile \\\n    doc/Makefile \\\n    cgdb/Makefile \\\n    testsuite/Makefile\n)\n\n# Display configuration options.\ncat <<EOF\n\n$PACKAGE_NAME configuration summary:\n\n    Install prefix ........... : ${prefix}\n\n    flex ..................... : ${LEX}\n\n    C preprocessor ........... : ${CPP}\n    C compiler ............... : ${CC}\n    C++ preprocessor ......... : ${CXXCPP}\n    C++ compiler ............. : ${CXX}\n    Linker ................... : ${LD}\n\n    C preprocessor flags ..... : ${CPPFLAGS}\n    C compiler flags ......... : ${CFLAGS}\n    C++ compiler flags ....... : ${CXXFLAGS}\n    Linker flags ............. : ${LDFLAGS}\n    Extra libraries .......... : ${LIBS}\n\n    Enabled options:\n    --enable-docs ............ : ${enable_docs}\n\nEOF\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "release-todo.txt",
          "type": "blob",
          "size": 1.4404296875,
          "content": "Steps for releasing a new CGDB version, follow these in order.\n\n--------------------------------------------------------------------------------\nAll of the steps below are automated by autorelease.sh, just check to make\nsure that it worked properly.\n\n- Run autorelease.sh\n  ./autorelease.sh\n  - It prompts for version, put in the version, for example: 0.6.8\n\n- Look at tar file in releasedir to make sure it has the correct version.\n  untar it and run to make sure it shows the correct version and that it runs.\n\n- Ensure doc/htdocs/download.php has correct version set in the definition\n  of 'LATEST' at the top of the file.\n  You can do 'git diff' and notice only the NEWS file and the\n  download.php file modified.\n\n- Verify documentation is correct. cgdb.pdf, cgdb.html, cgdb.text, \n  cgdb-split.html and cgdb.info.\n\n--------------------------------------------------------------------------------\nThese steps are manual.\n\n- Commit all currently modified files.\n\n- Update documentation in website\n  - cd release\n  - ./scripts/update_docs.sh\n  - update release date from 0.6.7 to 0.6.8\n  - update md5 sum\n\n-  Tag the release in git\n  - cd release\n  - ./scripts/tag.sh\n\n- Email the release tar ball ./release/cgdb-version.tar.gz to knave\n\n- Test website by looking at it and attempting to download file.\n\n- Download and test the new version\n\n- Announce the release on cgdb-users@googlegroups.com\n  with email from release/cgdb.email.\n  Subject: CGDB 0.Major.Minor released\n"
        },
        {
          "name": "roadmap.txt",
          "type": "blob",
          "size": 3.3681640625,
          "content": "CGDB is a lightweight front end to GDB. It is intended to be easy to use\nand quick to respond to the user. CGDB is currently stable and usable. It \nunfortunately is not very full of features. The goal is to add necessary \nfeatures to CGDB while continuing to keep it lightweight.\n\nCGDB is broken up into two major components. Mainly, CGDB itself and libtgdb. \nlibtgdb is a library that is intended to handle the communication hurdle with \nGDB. There is two major communication possibilities when communicating with\nGDB. The old annotation interface, and the new MI interface. tgdb is still\nonly capable of speaking the annotation protocol. This is currently why \nthere is not a lot of functionality at the CGDB level. I have attempted to\nimplement the gdb/mi protocol by writing libgdbmi in cgdb/lib/gdbmi. I had\nto modify bison to allow it to work as a push parser. In general, the \nwork left on tgdb is,\n\n  - get bison to have push parser support in next release of bison\n  - test and polish libgdbmi\n  - stuff libgdbmi into libtgdb. This could be by rewriting libtgdb into\n    a nicer interface and then plugging in libgdbmi or by back fitting\n    libgdbmi into libtgdb. Either way, the interface should be nice, and\n    the annotate 2 interface needs to stay supported.\n  - extend either libgdbmi or libtgdb to be available from a scripting\n    language. Tcl or perl would be a good choice. This would give \n    developers an easy way to script particular functionality of GDB.\n\nCGDB was written quickly over a period of about a year. It is obvious to \nus now that we made a trade off, which is: to get CGDB working fast instead of\ndesigning CGDB so it could be easily extended in the future. Because of that\nCGDB essentially has no window manager. A window manager is the main feature\nthat CGDB requires in order to better be able to easily display more \ninformation to the user. At this point, a programmer has no way to easily\ndisplay new types of information. The main features that are of interest\nat this point are,\n\n  - Write a new window manager for CGDB. Something that will be as flexible\n    as vim's window manager. This includes, splitting horizontally and \n    vertically, and resizing.\n  - Finish writing the map functionality. This is actually 90% done. With\n    a little more testing of the boundary cases, and some documentation, \n    this will be done.\n  - Write an interface on top of the kui that will determine exactly how\n    multiple keys are bound together to form a command. That way, we can\n    provide high level functionality in a bindings file. For instance,\n    currently CGDB has no way to associate Ctrl-w,j to a window move \n    command. That's because it only understands one char at a time.\n  - Add readline support to the status bar.\n  - Move the status bar to the bottom of the window like vim does. This \n    should probably be done after the window manager is made, since there\n    are multiple status bars per file.\n  - Provide stack trace frame window when the new window manager is ready.\n  - Provide variable display if someone is clever enough to figure out\n    how to display this information in a curses window.\n \nIn general, the rules for hacking CGDB are\n\n  - Rewriting code is fine, but must provide the same functionality that\n    previously existed.\n  - Make code easy to understand. Remember, it must pass peer review.\n  - Test, Test, Test.\n  - When necessary, need to provide documentation.\n"
        },
        {
          "name": "testsuite",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}