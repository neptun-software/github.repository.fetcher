{
  "metadata": {
    "timestamp": 1736710227577,
    "page": 951,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "GNOME/glib",
      "stars": 1589,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.4775390625,
          "content": "# See https://wiki.apertis.org/Guidelines/Coding_conventions#Code_formatting\nBasedOnStyle: GNU\nAlwaysBreakAfterDefinitionReturnType: All\nBreakBeforeBinaryOperators: None\nBinPackParameters: false\nSpaceAfterCStyleCast: true\n# Our column limit is actually 80, but setting that results in clang-format\n# making a lot of dubious hanging-indent choices; disable it and assume the\n# developer will line wrap appropriately. clang-format will still check\n# existing hanging indents.\nColumnLimit: 0\n"
        },
        {
          "name": ".dir-locals.el",
          "type": "blob",
          "size": 0.0400390625,
          "content": "((c-mode . ((indent-tabs-mode . nil)))))\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2392578125,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\n\n[*.[ch]]\nindent_size = 2\nindent_style = space\ninsert_final_newline = true\n# For the legacy tabs which still exist in the code:\ntab_width = 8\n\n[meson.build]\nindent_size = 2\nindent_style = space\n\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.283203125,
          "content": "# for all subdirectories\nTAGS\ntags\n.libs\n.deps\n*.o\n*.lo\n*.la\n*.pc\n.*.swp\n.sw?\n*.rc\n*.gcno\n*.gcda\n*.gcov\n*.sourcefiles\n*.stp\n*.exe\n*.def\n*.test\n*.log\n*.trs\n\n/glib-lcov.info\n/glib-lcov/\n\n# Meson\n/meson-build/\n/subprojects/*/\n\n# Generated Meson cross-compilation files for CI\nvs2019-arm64.txt\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 31.7548828125,
          "content": "include:\n  - component: gitlab.gnome.org/GNOME/citemplates/release-service@master\n    inputs:\n      dist-job-name: \"dist-job\"\n      tarball-artifact-path: \"${TARBALL_ARTIFACT_PATH}\"\n\nstages:\n  - style-check\n  - build\n  - coverage\n  - analysis\n  - deploy\n  - report\n\ncache:\n  paths:\n    - _ccache/\n\nvariables:\n  FEDORA_IMAGE: \"registry.gitlab.gnome.org/gnome/glib/fedora:v39.5\"\n  COVERITY_IMAGE: \"registry.gitlab.gnome.org/gnome/glib/coverity:v7\"\n  DEBIAN_IMAGE: \"registry.gitlab.gnome.org/gnome/glib/debian-stable:v23\"\n  DEBIAN_I386_IMAGE: \"registry.gitlab.gnome.org/gnome/glib/debian-stable-i386:v3\"\n  ALPINE_IMAGE: \"registry.gitlab.gnome.org/gnome/glib/alpine:v7\"\n  MINGW_IMAGE: \"registry.gitlab.gnome.org/gnome/glib/mingw:v39.5\"\n  GOBJECT_INTROSPECTION_TAG: \"1.80.1\"\n  MESON_TEST_TIMEOUT_MULTIPLIER: 4\n  G_MESSAGES_DEBUG: all\n  MESON_COMMON_OPTIONS: \"--buildtype debug --wrap-mode=nodownload --fatal-meson-warnings\"\n  # expected naming scheme for the release-service job\n  TARBALL_ARTIFACT_PATH: \"_build/meson-dist/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.tar.xz\"\n\n# Default CI job setup; contrast with `.only-origin`.\n#\n# Don’t execute the pipeline when a merge request is merged into `origin/main`,\n# as it will have already been tested\n.only-default:\n  only:\n    - branches\n  except:\n    refs:\n      - tags\n    variables:\n      - $CI_PIPELINE_SOURCE == \"push\" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PROJECT_NAMESPACE == \"GNOME\"\n\n# As above, but does get executed on merge into `origin/main`. For use with\n# updating code coverage results and docs builds.\n.only-default-and-merges:\n  only:\n    - branches\n  except:\n    refs:\n      - tags\n\n# Some jobs run on CI runners which don’t have good isolation between CI jobs,\n# and don’t have much available resource. Limit those jobs to only ones on the\n# origin repository (GNOME/glib), rather than people’s forks. Code in the origin\n# repository can be trusted.\n.only-origin:\n  only:\n    - branches@GNOME/glib\n  except:\n    - tags\n\n# Some jobs take a long time and are unlikely to find failures (or will find\n# failures which are not merge-blockers to fix), so they’re executed on a weekly\n# schedule in order to save CI resources and speed up branch pipelines.\n.only-schedules:\n  only:\n    - schedules\n  except:\n    - tags\n\n# Some jobs take a long time and are unlikely to find failures (or will find\n# failures which are not merge-blockers to fix), so they’re executed on a weekly\n# schedule in order to save CI resources and speed up branch pipelines.\n# But for specific merge requests, one may still want to run them, so make\n# possible to run them manually.\n.only-schedules-or-manual:\n  rules:\n    - if: $CI_PIPELINE_SOURCE == \"merge_request_event\"\n      when: never\n    # As per rule before, the following rules will only apply to non MR events\n    - if: $CI_PIPELINE_SOURCE == \"schedule\"\n      when: always\n    - if: $CI_PIPELINE_SOURCE != \"schedule\"\n      when: manual\n      allow_failure: true\n\n# Some jobs should be runnable only on schedules and when triggered by a branch\n# in the origin repository, but without\n.only-schedules-or-manual-in-default-branch:\n  rules:\n    - if: $CI_PROJECT_PATH != \"GNOME/glib\" || $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH\n      when: never\n    # As per rule before, the following rules will apply only to GNOME/glib:main\n    - if: $CI_PIPELINE_SOURCE == \"schedule\"\n      when: always\n    - if: $CI_PIPELINE_SOURCE != \"schedule\"\n      when: manual\n      allow_failure: true\n\n# Some jobs run on CI runners don’t have much available resource.\n# Limit those jobs to only ones on the origin repository (GNOME/glib),\n# rather than people’s forks or if ran manually.\n.only-origin-or-manual:\n  rules:\n    - if: $CI_PIPELINE_SOURCE == \"merge_request_event\"\n      when: never\n    - if: $CI_PIPELINE_SOURCE == \"schedule\"\n      when: never\n    - if: $CI_PROJECT_NAMESPACE == \"GNOME\"\n      when: always\n    - if: $CI_PROJECT_NAMESPACE != \"GNOME\"\n      when: manual\n      allow_failure: true\n\n.build-gobject-introspection:\n  before_script:\n    # If the CI image doesn’t provide a new enough gobject-introspection\n    # package, build it ourselves.\n    # See https://gitlab.gnome.org/GNOME/glib/-/merge_requests/3746#note_2161354\n    - >\n      if ! pkg-config --atleast-version \"${GOBJECT_INTROSPECTION_TAG}\" gobject-introspection-1.0; then\n        mkdir -p gobject-introspection\n        git clone --branch \"${GOBJECT_INTROSPECTION_TAG}\" https://gitlab.gnome.org/GNOME/gobject-introspection.git gobject-introspection\n        meson gobject-introspection gobject-introspection/build --prefix=/usr\n        sudo meson install -C gobject-introspection/build\n      fi\n  artifacts:\n    expire_in: 3 days\n    paths:\n      - gobject-introspection\n\n.build-linux:\n  before_script:\n    - bash .gitlab-ci/show-execution-environment.sh\n    - cp -r \"${HOME}\"/subprojects/* subprojects/\n\n# FIXME: Work around https://gitlab.com/gitlab-org/gitlab/-/issues/391756\n.with-git:\n  before_script:\n   - rm -rf subprojects/gvdb\n   - git config --global --add safe.directory \"${PWD}\"\n   - git submodule update --init --depth 1\n  variables:\n    GIT_SUBMODULE_STRATEGY: \"none\"\n    GIT_SUBMODULE_DEPTH: 1\n\nstyle-check-advisory:\n  extends:\n    - .only-default\n    - .with-git\n  image: \"${DEBIAN_IMAGE}\"\n  stage: style-check\n  allow_failure: true\n  script:\n    - failed=\n    - .gitlab-ci/run-style-check-diff.sh || failed=1\n    - .gitlab-ci/run-check-todos.sh || failed=1\n    - test -z \"$failed\"\n\nsh-and-py-check:\n  extends:\n    - .only-default\n    - .with-git\n  image: \"${DEBIAN_IMAGE}\"\n  stage: style-check\n  allow_failure: false\n  script:\n    - failed=\n    - tests/shellcheck.sh || failed=1\n    - tests/black.sh || failed=1\n    - tests/flake8.sh || failed=1\n    - test -z \"$failed\"\n  variables:\n    LINT_WARNINGS_ARE_ERRORS: '1'\n  only:\n    changes:\n      - \"**/*.py\"\n      - \"**/*.sh\"\n\nstyle-check-mandatory:\n  extends:\n    - .only-default\n    - .with-git\n  image: \"${DEBIAN_IMAGE}\"\n  stage: style-check\n  allow_failure: false\n  script:\n    - tests/reuse.sh\n  variables:\n    LINT_WARNINGS_ARE_ERRORS: '1'\n\nfedora-x86_64:\n  extends:\n    - .build-gobject-introspection\n    - .build-linux\n    - .only-default-and-merges\n    - .with-git\n  image: \"${FEDORA_IMAGE}\"\n  stage: build\n  needs: []\n  variables:\n    CFLAGS: \"--coverage -ftest-coverage -fprofile-arcs -fprofile-update=atomic\"\n    CXXFLAGS: \"--coverage -ftest-coverage -fprofile-arcs -fprofile-update=atomic\"\n  before_script:\n    - !reference [\".build-linux\", \"before_script\"]\n    - !reference [\".with-git\", \"before_script\"]\n    - !reference [\".build-gobject-introspection\", \"before_script\"]\n  script:\n    - meson setup ${MESON_COMMON_OPTIONS}\n            --werror\n            --default-library=both\n            --prefix=\"${HOME}/glib-installed\"\n            --localstatedir=/var\n            --libdir=lib\n            -Dsystemtap=enabled\n            -Ddtrace=enabled\n            -Dinstalled_tests=true\n            -Ddocumentation=true\n            -Dintrospection=enabled\n            -Dman-pages=enabled\n            _build\n    - meson compile -C _build\n    - mkdir -p _coverage\n    - lcov --config-file .lcovrc --directory _build --capture --initial\n      --output-file \"_coverage/${CI_JOB_NAME}-baseline.lcov\"\n    - .gitlab-ci/run-tests.sh\n    - lcov --config-file .lcovrc --directory _build --capture\n      --output-file \"_coverage/${CI_JOB_NAME}.lcov\"\n    # Copy the built documentation to an artifact directory. The build for docs.gtk.org\n    # can then pull it from there — see https://gitlab.gnome.org/GNOME/gtk/-/blob/docs-gtk-org/README.md\n    - mkdir -p _reference/\n    - mv _build/docs/reference/glib/glib-2.0/ _reference/glib/\n    - mv _build/docs/reference/glib/glib-unix-2.0/ _reference/glib-unix/\n    - mv _build/docs/reference/gmodule/gmodule-2.0/ _reference/gmodule/\n    - mv _build/docs/reference/gobject/gobject-2.0/ _reference/gobject/\n    - mv _build/docs/reference/gio/gio-2.0/ _reference/gio/\n    - mv _build/docs/reference/gio/gio-unix-2.0/ _reference/gio-unix/\n    - mv _build/docs/reference/girepository/girepository-2.0/ _reference/girepository/\n  artifacts:\n    reports:\n      junit:\n        - _build/meson-logs/testlog.junit.xml\n        - _build/meson-logs/testlog-*.junit.xml\n    name: \"glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - \"_build/config.h\"\n      - \"_build/glib/glibconfig.h\"\n      - \"_build/meson-logs\"\n      - \"_coverage\"\n      - \"_reference\"\n\n.build-debian:\n  extends:\n    - .build-linux\n    - .with-git\n  stage: build\n  needs: []\n  before_script:\n    - !reference [\".build-linux\", \"before_script\"]\n    - !reference [\".with-git\", \"before_script\"]\n  script:\n    - meson setup ${MESON_COMMON_OPTIONS}\n            --werror\n            --default-library=both\n            --prefix=\"${HOME}/glib-installed\"\n            --localstatedir=/var\n            --libdir=lib\n            -Dsystemtap=enabled\n            -Ddtrace=enabled\n            _build\n    - meson compile -C _build\n    - .gitlab-ci/run-tests.sh\n  artifacts:\n    reports:\n      junit:\n        - _build/meson-logs/testlog.junit.xml\n        - _build/meson-logs/testlog-*.junit.xml\n    name: \"glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - \"_build/config.h\"\n      - \"_build/glib/glibconfig.h\"\n      - \"_build/meson-logs\"\n\ndebian-stable-x86_64:\n  extends:\n    - .build-debian\n    # We don't need to run this job too often, because the combination of\n    # fedora-x86_64 and debian-stable-i386 should cover more or less\n    # everything that this job does\n    - .only-schedules-or-manual\n  image: \"${DEBIAN_IMAGE}\"\n\ndebian-stable-i386:\n  extends:\n    - .build-debian\n    - .only-default\n  image: \"${DEBIAN_I386_IMAGE}\"\n\nhurd-i386:\n  extends:\n    - .only-schedules-or-manual\n    - .with-git\n  stage: build\n  tags:\n    - hurd\n  needs: []\n  script:\n    - meson setup ${MESON_COMMON_OPTIONS}\n            --werror\n            --default-library=both\n            --prefix=\"${HOME}/glib-installed\"\n            --localstatedir=/var\n            --libdir=lib\n            _build\n    - meson compile -C _build\n    - .gitlab-ci/run-tests.sh\n  artifacts:\n    reports:\n      junit:\n        - _build/meson-logs/testlog.junit.xml\n        - _build/meson-logs/testlog-*.junit.xml\n    name: \"glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - \"_build/config.h\"\n      - \"_build/glib/glibconfig.h\"\n      - \"_build/meson-logs\"\n\nmuslc-alpine-x86_64:\n  extends:\n    - .build-linux\n    - .only-schedules-or-manual\n    - .with-git\n  image: \"${ALPINE_IMAGE}\"\n  stage: build\n  needs: []\n  before_script:\n    - !reference [\".build-linux\", \"before_script\"]\n    - !reference [\".with-git\", \"before_script\"]\n  script:\n    - meson setup ${MESON_COMMON_OPTIONS}\n            --werror\n            --default-library=both\n            --prefix=\"${HOME}/glib-installed\"\n            --localstatedir=/var\n            --libdir=lib\n            _build\n    - meson compile -C _build\n    - .gitlab-ci/run-tests.sh\n  artifacts:\n    reports:\n      junit:\n        - _build/meson-logs/testlog.junit.xml\n        - _build/meson-logs/testlog-*.junit.xml\n    name: \"glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - \"_build/config.h\"\n      - \"_build/glib/glibconfig.h\"\n      - \"_build/meson-logs\"\n\ninstalled-tests:\n  extends:\n    - .build-linux\n    - .only-schedules-or-manual\n  image: \"${FEDORA_IMAGE}\"\n  stage: build\n  needs: []\n  script:\n    # dtrace is disabled because it breaks the static-link.py test\n    - meson setup ${MESON_COMMON_OPTIONS}\n            --werror\n            --prefix=/usr --libdir=/usr/lib64\n            -Dinstalled_tests=true\n            -Ddefault_library=both\n            -Ddtrace=disabled\n            _build\n    - meson compile -C _build\n    - sudo meson install -C _build\n    # Remove old headers, possibly present in current installation\n    - sudo rm -f /usr/include/glib-2.0/glib/gurifuncs.h\n    - sudo chown -R `id -un`:`id -gn` _build/\n    # Work-around https://gitlab.gnome.org/GNOME/gnome-desktop-testing/merge_requests/2\n    - mkdir -p _build/installed-tests-report/logs/\n    - GLIB_TEST_COMPILATION=1 gnome-desktop-testing-runner\n            --report-directory=_build/installed-tests-report/failed/\n            --log-directory=_build/installed-tests-report/logs/\n            --parallel=0\n            glib\n  artifacts:\n    name: \"glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - \"_build/config.h\"\n      - \"_build/glib/glibconfig.h\"\n      - \"_build/meson-logs\"\n      - \"_build/installed-tests-report/\"\n\nG_DISABLE_ASSERT:\n  extends:\n    - .build-linux\n    - .only-schedules-or-manual\n    - .with-git\n    - .build-gobject-introspection\n  image: \"${FEDORA_IMAGE}\"\n  stage: build\n  needs: []\n  variables:\n    MESON_TEST_TIMEOUT_MULTIPLIER: 15\n  before_script:\n    - !reference [\".build-linux\", \"before_script\"]\n    - !reference [\".with-git\", \"before_script\"]\n    - !reference [\".build-gobject-introspection\", \"before_script\"]\n  script:\n    - meson setup ${MESON_COMMON_OPTIONS}\n            --werror\n            -Dsystemtap=enabled\n            -Ddtrace=enabled\n            -Dinstalled_tests=true\n            -Dglib_assert=false\n            -Dintrospection=enabled\n            _build\n    - meson compile -C _build\n    # Also take the opportunity to run the thorough tests (which are slow)\n    - bash -x ./.gitlab-ci/run-tests.sh --setup thorough\n  artifacts:\n    reports:\n      junit:\n        - _build/meson-logs/testlog.junit.xml\n        - _build/meson-logs/testlog-*.junit.xml\n    name: \"glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - \"_build/config.h\"\n      - \"_build/glib/glibconfig.h\"\n      - \"_build/meson-logs\"\n\nvalgrind:\n  extends:\n    - .build-linux\n    - .only-schedules-or-manual\n    - .with-git\n    - .build-gobject-introspection\n  image: \"${FEDORA_IMAGE}\"\n  stage: analysis\n  needs: []\n  variables:\n    MESON_TEST_TIMEOUT_MULTIPLIER: 15\n  before_script:\n    - !reference [\".build-linux\", \"before_script\"]\n    - !reference [\".with-git\", \"before_script\"]\n    - !reference [\".build-gobject-introspection\", \"before_script\"]\n  script:\n    - meson setup ${MESON_COMMON_OPTIONS}\n            --werror\n            -Dsystemtap=enabled\n            -Ddtrace=enabled\n            -Dinstalled_tests=true\n            -Dintrospection=enabled\n            _build\n    - meson compile -C _build\n    # Valgrind doesn’t work when the soft FD limit is set too high\n    # See https://gitlab.gnome.org/GNOME/glib/-/merge_requests/2710\n    - ulimit -Sn 1024\n    - bash -x ./.gitlab-ci/run-tests.sh\n                 --setup valgrind\n                 --no-suite slow\n  artifacts:\n    reports:\n      junit: \"_build/meson-logs/testlog-valgrind.junit.xml\"\n    name: \"glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - \"_build/config.h\"\n      - \"_build/glib/glibconfig.h\"\n      - \"_build/meson-logs\"\n\n.cross-build-linux:\n  extends: .build-linux\n  stage: build\n  needs: []\n  artifacts:\n    name: \"glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - \"_build/meson-logs\"\n\ncross-android_arm64:\n  extends:\n    - .cross-build-linux\n    - .only-default\n  image: \"${FEDORA_IMAGE}\"\n  script:\n    # FIXME: add --werror\n    - meson setup ${MESON_COMMON_OPTIONS} --cross-file=.gitlab-ci/cross_file_android_arm64_31.txt _build\n    - meson compile -C _build\n\ncross-mingw64:\n  extends:\n    - .cross-build-linux\n    - .only-default\n  image: \"${MINGW_IMAGE}\"\n  variables:\n    PYTHONUTF8: \"1\"\n  script:\n    # FIXME: Add --werror\n    - meson setup ${MESON_COMMON_OPTIONS} --cross-file=/opt/cross_file_mingw64.txt _build\n    - meson compile -C _build\n  artifacts:\n    reports:\n      junit:\n        - _build/meson-logs/testlog.junit.xml\n        - _build/meson-logs/testlog-*.junit.xml\n    name: \"glib-${env:CI_JOB_NAME}-${env:CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - _build/meson-logs\n      - _build/glib/libglib-2.0-0.dll\n      - _build/gio/libgio-2.0-0.dll\n      - _build/gmodule/libgmodule-2.0-0.dll\n      - _build/gthread/libgthread-2.0-0.dll\n      - _build/gobject/libgobject-2.0-0.dll\n\n# A note about msys2: it’s a rolling release distribution, running Windows under\n# Docker isn’t really supported, and the win32-ps CI runner is shared. All that\n# adds up to mean that we have to run CI against the latest msys2 packages, and\n# that this occasionally causes deterministic build failures in GLib due to\n# changes in msys2.\n# In order to avoid that pre-empting other GLib development, the policy in such\n# cases is to:\n#  1. Immediately and without hesitation make the msys2-* CI jobs non-fatal\n#     (add `allow_failure: true` below).\n#  2. File an issue about fixing the GLib msys2 build and re-enabling failure\n#     on the CI job\n#  3. Set the milestone for that issue to be the next GLib release, so it’s done\n#     in a timely manner; and tag it as ~win32 so the GLib Windows maintainers\n#     are notified and can work on it.\n#  4. Rebase any pending broken MRs on top of the commit which makes the CI job\n#     non-fatal, so that development on `main` is unblocked.\n#\n# This policy doesn’t apply to intermittent flaky test failures, only to\n# consistent build failures caused by changed dependencies or build environment.\nmsys2-mingw32:\n  extends: .only-default-and-merges\n  stage: build\n  tags:\n    - win32-ps\n  needs: []\n  variables:\n    MSYSTEM: \"MINGW32\"\n    CHERE_INVOKING: \"yes\"\n    CFLAGS: -coverage -ftest-coverage -fprofile-arcs\n    PYTHONUTF8: \"1\"\n    G_DEBUGGER: 'gdb.exe -batch -ex \"set logging enabled on\" -ex \"attach %p\" -ex \"signal-event %e\" -ex \"c\" -ex \"thread apply all bt full\" -ex \"k\"'\n  script:\n    - C:\\msys64\\usr\\bin\\pacman --noconfirm -Syyuu --ask 20\n    - C:\\msys64\\usr\\bin\\bash .gitlab-ci/show-execution-environment.sh\n    - C:\\msys64\\usr\\bin\\bash -lc \"bash -x ./.gitlab-ci/test-msys2.sh\"\n  artifacts:\n    reports:\n      junit:\n        - _build/meson-logs/testlog.junit.xml\n        - _build/meson-logs/testlog-*.junit.xml\n    name: \"glib-${env:CI_JOB_NAME}-${env:CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - _build/meson-logs\n      - _build/gdb.txt\n      - _coverage/\n      - _reference/\n\n# See the note about msys2 CI job failure policy above.\nmsys2-clang64:\n  extends: .only-schedules-or-manual\n  stage: build\n  tags:\n    - win32-ps\n  needs: []\n  variables:\n    MSYSTEM: \"CLANG64\"\n    CHERE_INVOKING: \"yes\"\n    PYTHONUTF8: \"1\"\n  script:\n    - C:\\msys64\\usr\\bin\\pacman --noconfirm -Syyuu --ask 20\n    - C:\\msys64\\usr\\bin\\bash .gitlab-ci/show-execution-environment.sh\n    - C:\\msys64\\usr\\bin\\bash -lc \"bash -x ./.gitlab-ci/test-msys2.sh\"\n  artifacts:\n    reports:\n      junit: \"_build/meson-logs/testlog.junit.xml\"\n    name: \"glib-${env:CI_JOB_NAME}-${env:CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - _build/meson-logs\n\nvs2019-x64:\n  extends: .only-default\n  stage: build\n  tags:\n    - win32-ps\n  needs: []\n  variables:\n    GIT_SUBMODULE_STRATEGY: recursive\n    GIT_SUBMODULE_DEPTH: 1\n    PYTHONUTF8: \"1\"\n  script:\n    # FIXME: These should use --wrap-mode=nodownload but the Windows CI machines\n    # aren’t currently set up for that.\n    # FIXME: Use --meson-fatal-warnings once we've enabled c_std=gnu99,c99\n    # for the runner's Meson version.\n    - .gitlab-ci/test-msvc.bat --buildtype debug\n                               --wrap-mode=default\n                               --python.platlibdir=C:\\Python37\\site-packages\n                               --python.purelibdir=C:\\Python37\\site-packages\n                               --plat=x64\n  artifacts:\n    reports:\n      junit:\n        - _build/meson-logs/testlog.junit.xml\n        - _build/meson-logs/testlog-*.junit.xml\n    name: \"glib-${env:CI_JOB_NAME}-${env:CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - _build/meson-logs\n      - _build/glib/libglib-2.0-0.dll\n      - _build/gio/libgio-2.0-0.dll\n      - _build/gmodule/libgmodule-2.0-0.dll\n      - _build/gthread/libgthread-2.0-0.dll\n      - _build/gobject/libgobject-2.0-0.dll\n\nvs2019-x64-static:\n  extends: .only-default\n  stage: build\n  tags:\n    - win32-ps\n  needs: []\n  variables:\n    GIT_SUBMODULE_STRATEGY: recursive\n    GIT_SUBMODULE_DEPTH: 1\n    PYTHONUTF8: \"1\"\n  script:\n    # FIXME: These should use --wrap-mode=nodownload but the Windows CI machines\n    # aren’t currently set up for that.\n    # FIXME: Use --meson-fatal-warnings once we've enabled c_std=gnu99,c99\n    # for the runner's Meson version.\n    - .gitlab-ci/test-msvc.bat --buildtype debug\n                               --wrap-mode=default\n                               --default-library=static\n                               --python.platlibdir=C:\\Python37\\site-packages\n                               --python.purelibdir=C:\\Python37\\site-packages\n                               --plat=x64\n  artifacts:\n    reports:\n      junit:\n        - _build/meson-logs/testlog.junit.xml\n        - _build/meson-logs/testlog-*.junit.xml\n    name: \"glib-${env:CI_JOB_NAME}-${env:CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - _build/meson-logs\n\nvs2019-x86:\n  extends: .only-schedules-or-manual\n  stage: build\n  tags:\n    - win32-ps\n  needs: []\n  variables:\n    GIT_SUBMODULE_STRATEGY: recursive\n    GIT_SUBMODULE_DEPTH: 1\n    PYTHONUTF8: \"1\"\n  script:\n    # FIXME: These should use --wrap-mode=nodownload but the Windows CI machines\n    # aren’t currently set up for that.\n    # FIXME: Use --meson-fatal-warnings once we've enabled c_std=gnu99,c99\n    # for the runner's Meson version.\n    - .gitlab-ci/test-msvc.bat --buildtype debug\n                               --wrap-mode=default\n                               --python.platlibdir=C:\\Python37\\site-packages\n                               --python.purelibdir=C:\\Python37\\site-packages\n                               --plat=x64_x86\n  artifacts:\n    reports:\n      junit:\n        - _build/meson-logs/testlog.junit.xml\n        - _build/meson-logs/testlog-*.junit.xml\n    name: \"glib-${env:CI_JOB_NAME}-${env:CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - _build/meson-logs\n      - _build/glib/libglib-2.0-0.dll\n      - _build/gio/libgio-2.0-0.dll\n      - _build/gmodule/libgmodule-2.0-0.dll\n      - _build/gthread/libgthread-2.0-0.dll\n      - _build/gobject/libgobject-2.0-0.dll\n\nvs2019-arm64:\n  extends: .only-schedules-or-manual\n  stage: build\n  tags:\n    - win32-ps\n  needs: []\n  variables:\n    GIT_SUBMODULE_STRATEGY: recursive\n    GIT_SUBMODULE_DEPTH: 1\n    PYTHONUTF8: \"1\"\n  script:\n    # FIXME: These should use --wrap-mode=nodownload but the Windows CI machines\n    # aren’t currently set up for that.\n    # FIXME: Use --meson-fatal-warnings once we've enabled c_std=gnu99,c99\n    # for the runner's Meson version.\n    - .gitlab-ci/test-msvc.bat --buildtype debug\n                               --wrap-mode=default\n                               --python.platlibdir=C:\\Python37\\site-packages\n                               --python.purelibdir=C:\\Python37\\site-packages\n                               --plat=x64_arm64\n  artifacts:\n    reports:\n      junit:\n        - _build/meson-logs/testlog.junit.xml\n        - _build/meson-logs/testlog-*.junit.xml\n    name: \"glib-${env:CI_JOB_NAME}-${env:CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - _build/meson-logs\n      - _build/glib/libglib-2.0-0.dll\n      - _build/gio/libgio-2.0-0.dll\n      - _build/gmodule/libgmodule-2.0-0.dll\n      - _build/gthread/libgthread-2.0-0.dll\n      - _build/gobject/libgobject-2.0-0.dll\n\nfreebsd-13-x86_64:\n  extends: .only-schedules-or-manual\n  stage: build\n  tags:\n    - freebsd-13\n  needs: []\n  variables:\n    CPPFLAGS: -I/usr/local/include\n    LDFLAGS: -L/usr/local/lib -Wl,--disable-new-dtags\n    LANG: C.UTF-8\n  before_script:\n    - bash .gitlab-ci/show-execution-environment.sh\n  script:\n    - meson setup ${MESON_COMMON_OPTIONS}\n            --localstatedir=/var\n            -Db_lundef=false\n            -Dxattr=false\n            -Dsystemtap=disabled\n            -Ddtrace=disabled\n            _build\n    - meson compile -C _build\n    - bash -x ./.gitlab-ci/run-tests.sh\n  artifacts:\n    reports:\n      junit:\n        - _build/meson-logs/testlog.junit.xml\n        - _build/meson-logs/testlog-*.junit.xml\n    name: \"glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - \"_build/config.h\"\n      - \"_build/glib/glibconfig.h\"\n      - \"_build/meson-logs\"\n\nmacos-arm64:\n  only:\n    - branches@GNOME/glib\n    # runner's maintainer\n    - branches@dehesselle/glib\n  except:\n    - tags\n  stage: build\n  tags:\n    - macosarm\n  needs: []\n  cache: []\n  variables:\n    GIT_SUBMODULE_STRATEGY: normal\n    # -Wno-overlength-strings\n    # libpcre2 gets built as a subproject, but the default Clang options on\n    # macOS limit string lengths to 4095B — pcre2_error.c has a string of length\n    # 4380B\n    CFLAGS: -Wno-overlength-strings\n    # redirect to the runner's volatile temporary directory\n    TMPDIR: /Users/Shared/work/tmp\n    # keep the user profile clean\n    PIP_CACHE_DIR: /Users/Shared/work/cache\n    PIPENV_CACHE_DIR: \"${PIP_CACHE_DIR}\"\n    PYTHONPYCACHEPREFIX: \"${PIP_CACHE_DIR}\"\n    # target macOS 11 Big Sur\n    SDKROOT: /opt/sdks/MacOSX11.3.sdk\n    # use the runner's ccache directory\n    CCACHE_DIR: /Users/Shared/work/ccache\n  before_script:\n    - bash .gitlab-ci/show-execution-environment.sh\n    - python3 -m venv .venv\n    - curl -L https://github.com/ccache/ccache/releases/download/v4.9.1/ccache-4.9.1-darwin.tar.gz | tar -C .venv/bin -xz --strip-components=1 ccache-4.9.1-darwin/ccache\n    - source .venv/bin/activate\n    - pip3 install meson==1.4.2 ninja==1.11.1.1 packaging==23.2\n  script:\n    # FIXME: These should use --wrap-mode=nodownload but the macOS CI machine\n    # isn't currently set up for that. See:\n    #  - https://gitlab.gnome.org/GNOME/glib/merge_requests/388\n    #  - https://gitlab.gnome.org/Infrastructure/Infrastructure/issues/225\n    - meson setup ${MESON_COMMON_OPTIONS}\n            --wrap-mode=default\n            --werror\n            _build\n    - meson compile -C _build\n    - .gitlab-ci/run-tests.sh\n  artifacts:\n    reports:\n      junit:\n        - _build/meson-logs/testlog.junit.xml\n        - _build/meson-logs/testlog-*.junit.xml\n    name: \"glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - \"_build/config.h\"\n      - \"_build/glib/glibconfig.h\"\n      - \"_build/meson-logs\"\n\ncoverage:\n  extends: .only-default\n  image: \"${FEDORA_IMAGE}\"\n  stage: coverage\n  needs: ['fedora-x86_64', 'msys2-mingw32']\n  artifacts:\n    name: \"glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}\"\n    expire_in: 1 week\n    expose_as: 'Coverage Report'\n    paths:\n      - _coverage/coverage/index.html\n      - _coverage\n    reports:\n      coverage_report:\n        coverage_format: cobertura\n        path: _coverage/*-cobertura/cobertura-*.xml\n  before_script:\n    - bash .gitlab-ci/show-execution-environment.sh\n  script:\n    - bash -x ./.gitlab-ci/coverage-docker.sh\n  coverage: '/^\\s+lines\\.+:\\s+([\\d.]+\\%)\\s+/'\n\nscan-build:\n  extends:\n    - .build-linux\n    - .only-schedules-or-manual\n    - .build-gobject-introspection\n  image: \"${FEDORA_IMAGE}\"\n  stage: analysis\n  needs: []\n  variables:\n    # FIXME: Eventually we want static analysis on the tests and copylibs, for\n    # code quality, but for the moment it’s just busywork.\n    # FIXME: Disable the dead code checkers for now because they create a lot of\n    # noise and don’t indicate high severity problems.\n    SCAN_BUILD_FLAGS: >-\n      --exclude gio/tests/\n      --exclude girepository/tests/\n      --exclude glib/tests/\n      --exclude gmodule/tests/\n      --exclude gobject/tests/\n      --exclude gthread/tests/\n      --exclude girepository/cmph/\n      --exclude glib/libcharset/\n      --exclude gio/xdgmime/\n      --exclude meson-private/\n      -disable-checker deadcode.DeadStores\n      --status-bugs\n  before_script:\n    - !reference [\".build-linux\", \"before_script\"]\n    - !reference [\".build-gobject-introspection\", \"before_script\"]\n  script:\n    - meson setup ${MESON_COMMON_OPTIONS}\n            --werror\n            --default-library=both\n            --prefix=\"${HOME}/glib-installed\"\n            --localstatedir=/var\n            --libdir=lib\n            -Dglib_debug=enabled\n            -Dsystemtap=enabled\n            -Ddtrace=enabled\n            -Dinstalled_tests=true\n            -Dintrospection=enabled\n            _scan_build\n    - SCANBUILD=\"$(pwd)/.gitlab-ci/scan-build.sh\" ninja -C _scan_build scan-build\n  artifacts:\n    name: \"glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - \"_scan_build/meson-logs/scanbuild\"\n\n.coverity:\n  extends:\n    - .build-linux\n    - .only-schedules-or-manual-in-default-branch\n    - .build-gobject-introspection\n  image: \"${COVERITY_IMAGE}\"\n  stage: analysis\n  needs: []\n  variables:\n    # cov-build doesn’t like GLIB_DEPRECATED_ENUMERATOR\n    CFLAGS: '-DGLIB_DISABLE_DEPRECATION_WARNINGS'\n  before_script:\n    - !reference [\".build-linux\", \"before_script\"]\n    - !reference [\".build-gobject-introspection\", \"before_script\"]\n  script:\n    - meson setup ${MESON_COMMON_OPTIONS}\n            --werror\n            --default-library=both\n            --prefix=\"${HOME}/glib-installed\"\n            --localstatedir=/var\n            --libdir=lib\n            -Dsystemtap=enabled\n            -Ddtrace=enabled\n            -Dinstalled_tests=true\n            -Dintrospection=enabled\n            _coverity_build\n    # true is needed to fix GitLab having trouble parsing the quotes\n    - true && \"${HOME}\"/cov-analysis-linux64-*/bin/cov-build --dir cov-int meson compile -C _coverity_build\n    - tar cfz cov-int.tar.gz cov-int\n    - curl \"https://scan.coverity.com/builds?project=${COVERITY_SCAN_PROJECT_NAME}\"\n           --form token=\"${COVERITY_SCAN_TOKEN}\" --form email=\"${GITLAB_USER_EMAIL}\"\n           --form file=@cov-int.tar.gz --form version=\"${CI_COMMIT_SHA}\"\n           --form description=\"${CI_COMMIT_SHA} / ${CI_COMMIT_TITLE} / ${CI_COMMIT_REF_NAME}:${CI_PIPELINE_ID}\"\n  artifacts:\n    name: \"glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}\"\n    when: always\n    expire_in: 1 week\n    paths:\n      - \"cov-int/build-log.txt\"\n\npages:\n  extends: .only-schedules\n  stage: deploy\n  needs: ['coverage', 'style-check-advisory']\n  script:\n    - mv _coverage/ public/\n  artifacts:\n    paths:\n      - public\n\ndist-job:\n  extends:\n    - .build-gobject-introspection\n    - .build-linux\n    - .with-git\n  image: \"${FEDORA_IMAGE}\"\n  stage: build\n  needs: []\n  before_script:\n    - !reference [\".build-linux\", \"before_script\"]\n    - !reference [\".with-git\", \"before_script\"]\n    - !reference [\".build-gobject-introspection\", \"before_script\"]\n  only:\n    - schedules\n    - tags\n  script:\n    - meson setup ${MESON_COMMON_OPTIONS}\n            --buildtype release\n            -Ddocumentation=true\n            -Dintrospection=enabled\n            -Dman-pages=enabled\n            _build\n    - meson dist -C _build\n    # Compile again to build the docs\n    - meson compile -C _build\n    - tar -c -J -f \"_build/glib-docs-${CI_COMMIT_TAG}.tar.xz\" -C _build/docs/reference/glib glib-2.0\n    - tar -c -J -f \"_build/gmodule-docs-${CI_COMMIT_TAG}.tar.xz\" -C _build/docs/reference/gmodule gmodule-2.0\n    - tar -c -J -f \"_build/gobject-docs-${CI_COMMIT_TAG}.tar.xz\" -C _build/docs/reference/gobject gobject-2.0\n    - tar -c -J -f \"_build/gio-docs-${CI_COMMIT_TAG}.tar.xz\" -C _build/docs/reference/gio gio-2.0\n    - tar -c -J -f \"_build/girepository-docs-${CI_COMMIT_TAG}.tar.xz\" -C _build/docs/reference/girepository girepository-2.0\n  artifacts:\n    paths:\n      - \"${CI_PROJECT_DIR}/_build/glib-docs-${CI_COMMIT_TAG}.tar.xz\"\n      - \"${CI_PROJECT_DIR}/_build/gmodule-docs-${CI_COMMIT_TAG}.tar.xz\"\n      - \"${CI_PROJECT_DIR}/_build/gobject-docs-${CI_COMMIT_TAG}.tar.xz\"\n      - \"${CI_PROJECT_DIR}/_build/gio-docs-${CI_COMMIT_TAG}.tar.xz\"\n      - \"${CI_PROJECT_DIR}/_build/girepository-docs-${CI_COMMIT_TAG}.tar.xz\"\n      - \"${CI_PROJECT_DIR}/_build/meson-dist/glib-*.tar.xz\"\n\nissue-bot:\n  stage: report\n  image: registry.gitlab.com/gitlab-org/distribution/issue-bot:latest\n  script: /issue-bot\n  rules:\n    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == \"schedule\"\n      when: on_failure\n"
        },
        {
          "name": ".gitlab-ci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1474609375,
          "content": "[submodule \"subprojects/gvdb\"]\n\tpath = subprojects/gvdb\n\turl = ../../GNOME/gvdb.git\n\tbranch = 2b42fc75f09dbe1cd1057580b5782b08f2dcb400\n\tshallow = true\n"
        },
        {
          "name": ".lcovrc",
          "type": "blob",
          "size": 1.1015625,
          "content": "# lcov and genhtml configuration\n# See lcovrc(5)\n\n# Always enable branch coverage\nbranch_coverage = 1\n\n# Disable exception branch for C++:\n# https://github.com/linux-test-project/lcov/issues/209\nno_exception_branch = 1\n\n# Exclude precondition assertions, as we can never reasonably get full branch\n# coverage of them, as they should never normally fail.\n# Similarly exclude g_clear_*() functions (such as g_clear_object(),\n# g_clear_pointer(), etc.) as it’s not useful to test both sides of the branch\n# in them.\n# See https://github.com/linux-test-project/lcov/issues/44\nlcov_excl_br_line = LCOV_EXCL_BR_LINE|g_return_if_fail|g_return_val_if_fail|g_assert|g_assert_|g_clear_\n\n# Similarly for unreachable assertions.\nlcov_excl_line = LCOV_EXCL_LINE|g_return_if_reached|g_return_val_if_reached|g_assert_not_reached\n\n# When using dtrace some temporary files may be leaked as source files\nignore_errors = source\n\n# Sometimes we may have negative counting despite using atomic profile update\nignore_errors = negative\n\n# gnulib paths may not be used\nignore_errors = unused\n\n# baseline lcov files may be empty\nignore_errors = empty\n"
        },
        {
          "name": ".reuse",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.111328125,
          "content": "Code of Conduct\n===\n\nGLib follows the GNOME Code of Conduct, which is documented here:\nhttps://conduct.gnome.org/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 10.865234375,
          "content": "# Contribution guidelines\n\nThank you for considering contributing to the GLib project!\n\nThese guidelines are meant for new contributors, regardless of their level\nof proficiency; following them allows the core developers of the GLib project to\nmore effectively evaluate your contribution, and provide prompt feedback to\nyou. Additionally, by following these guidelines you clearly communicate\nthat you respect the time and effort that the people developing GLib put into\nmanaging the project.\n\nGLib is a complex free software utility library, and it would not exist without\ncontributions from the free and open source software community. There are\nmany things that we value:\n\n - bug reporting and fixing\n - documentation and examples\n - tests\n - testing and support for other platforms\n - new features\n\nPlease, do not use the issue tracker for support questions. If you have\nquestions on how to use GLib effectively, you can use:\n\n - the `#gtk` channel on [Matrix](https://wiki.gnome.org/GettingInTouch/Matrix)\n - the [`glib` tag on GNOME's Discourse](https://discourse.gnome.org/tags/glib)\n\nYou can also look at the [`glib` tag on Stack\nOverflow](https://stackoverflow.com/questions/tagged/glib).\n\nThe issue tracker is meant to be used for actionable issues only.\n\n## How to report bugs\n\n### Security issues\n\nYou **must not** open a new public issue for security related concerns.\n\nInstead, see the [`SECURITY.md` documentation](./SECURITY.md).\n\n### Bug reports\n\nIf you’re reporting a bug make sure to list:\n\n 0. which version of GLib are you using?\n 0. which operating system are you using?\n 0. the necessary steps to reproduce the issue\n 0. the expected outcome\n 0. a description of the behavior\n 0. a small, self-contained example exhibiting the behavior\n\nIf the issue includes a crash, you should also include:\n\n 0. the eventual warnings printed on the terminal\n 0. a backtrace, obtained with tools such as GDB or LLDB\n\nIf the issue includes a memory leak, you should also include:\n\n 0. a log of definite leaks from a tool such as [valgrind’s\n    memcheck](http://valgrind.org/docs/manual/mc-manual.html)\n\nFor small issues, such as:\n\n - spelling/grammar fixes in the documentation,\n - typo correction,\n - comment clean ups,\n - changes to metadata files (CI, `.gitignore`),\n - build system changes, or\n - source tree clean ups and reorganizations;\n\nor for self-contained bug fixes where you have implemented and tested a solution\nalready, you should directly open a merge request instead of filing a new issue.\n\n### Features and enhancements\n\nFeature discussion can be open ended and require high bandwidth channels; if\nyou are proposing a new feature on the issue tracker, make sure to make\nan actionable proposal, and list:\n\n 0. what you’re trying to achieve and the problem it solves\n 0. three (or more) existing pieces of software which would benefit from the\n    new feature\n 0. how the feature is implementable on platforms other than Linux\n\nNew APIs, in particular, should follow the ‘rule of three’, where there should\nbe three (or more) pieces of software which are ready to use the new APIs. This\nallows us to check that the new APIs are usable in real-life code, and fit well\nwith related APIs. This reduces the chances of awkward or unusable APIs becoming\nstable in GLib and having to be supported forever.\n\nA common way to introduce new APIs or data types to GLib is to prototype them in\nanother code base for a while, to gain real-life experience with them before\nthey are imported into GLib and marked as stable.\n\nMany APIs and features may be best implemented in another library, unless they\nwill be useful for a significant number of applications. GLib does not, and\ncannot, grow its API surface forever. APIs which integrate well with existing\nGLib API, or which extend it to allow it to be integrated better with other\nlibraries, are more likely to be accepted than self-contained new APIs or\nfeatures which can easily exist outside of GLib.\n\nEach feature should also come fully documented, and with tests which approach\nfull branch coverage of the new code. GLib’s CI system generates code coverage\nreports which are viewable for each merge request. See\n[the testing policy](./docs/testing.md) for more details.\n\nIf proposing a large feature or change, it’s better to discuss it (on the\n`#gtk` Matrix channel or on [Discourse](https://discourse.gnome.org) before\nputting time into writing an actionable issue — and certainly before putting\ntime into writing a merge request.\n\n## Your first contribution\n\n### Prerequisites\n\nIf you want to contribute to the GLib project, you will need to have the\ndevelopment tools appropriate for your operating system, including:\n\n - Python 3.x\n - Meson\n - Ninja\n - Gettext (19.7 or newer)\n - a [C99 compatible compiler](./docs/toolchain-requirements.md)\n\nUp-to-date instructions about developing GNOME applications and libraries\ncan be found on [the GNOME Developer Center](https://developer.gnome.org).\n\nThe [GLib project uses GitLab](https://gitlab.gnome.org/GNOME/glib/) for code\nhosting and for tracking issues. More information about using GitLab can be\nfound [on the GNOME wiki](https://wiki.gnome.org/GitLab).\n\n### Getting started\n\nYou should start by forking the GLib repository from the GitLab web UI, and\ncloning from your fork:\n\n```sh\n$ git clone https://gitlab.gnome.org/yourusername/glib.git\n$ cd glib\n```\n\nTo compile the Git version of GLib on your system, you will need to\nconfigure your build using Meson:\n\n```sh\n$ meson setup _builddir .\n$ meson compile -C _builddir\n```\n\nTypically, you should work on your own branch:\n\n```sh\n$ git checkout -b your-branch\n```\n\nOnce you’ve finished working on the bug fix or feature, push the branch\nto the Git repository and open a new merge request, to let the GLib\ncore developers review your contribution.\n\n### Code reviews\n\nEach contribution is reviewed by the core developers of the GLib project.\n\nThe [CODEOWNERS](./docs/CODEOWNERS) document contains the list of core\ncontributors to GLib and the areas for which they are responsible; you\nshould ensure to receive their review and signoff on your changes.\n\nIt is our intention that every commit to GLib is reviewed by at least one other\nperson, including commits from core developers. We all make mistakes and can\nalways learn from each other, and code review allows that. It also reduces\n[bus factor](https://en.wikipedia.org/wiki/Bus_factor) by spreading knowledge\nof each commit between at least two people.\n\nWith each code review, we intend to:\n\n 0. Identify if this is a desirable change or new feature. Ideally for larger\n    features this will have been discussed (in an issue, on Matrix, or on Discourse)\n    already, so that effort isn’t wasted on putting together merge requests\n    which will be rejected.\n 0. Check the design of any new API.\n 0. Provide realistic estimates of how long a review might take, if it can’t\n    happen immediately.\n 0. Ensure that all significant contributions of new code, or bug fixes, are\n    adequately tested, either through requiring tests to be submitted at the\n    same time, or as a follow-up.\n 0. Ensure that all new APIs are documented and have [introspection\n    annotations](https://gi.readthedocs.io/en/latest/annotations/giannotations.html).\n 0. Check that the contribution is split into logically separate commits, each\n    with a good commit message.\n 0. Encourage further high quality contributions.\n 0. Ensure code style and quality is upheld.\n\nIf a code review is stalled (due to not receiving comments for two or more\nweeks; or due to a technical disagreement), please ping another GLib core\ndeveloper on the merge request, or on Matrix, to ask for a second opinion.\n\n### Commit messages\n\nThe expected format for git commit messages is as follows:\n\n```plain\nShort explanation of the commit\n\nLonger explanation explaining exactly what’s changed, whether any\nexternal or private interfaces changed, what bugs were fixed (with bug\ntracker reference if applicable) and so forth. Be concise but not too\nbrief.\n\nCloses #1234\n```\n\n - Always add a brief description of the commit to the _first_ line of\n the commit and terminate by two newlines (it will work without the\n second newline, but that is not nice for the interfaces).\n\n - First line (the brief description) must only be one sentence and\n should start with a capital letter unless it starts with a lowercase\n symbol or identifier. Don’t use a trailing period either. Don’t exceed\n 72 characters.\n\n - The main description (the body) is normal prose and should use normal\n punctuation and capital letters where appropriate. Consider the commit\n message as an email sent to the developers (or yourself, six months\n down the line) detailing **why** you changed something. There’s no need\n to specify the **how**: the changes can be inlined.\n\n - When committing code on behalf of others use the `--author` option, e.g.\n `git commit -a --author \"Joe Coder <joe@coder.org>\"` and `--signoff`.\n\n - If your commit is addressing an issue, use the\n [GitLab syntax](https://docs.gitlab.com/ce/user/project/issues/managing_issues.html#default-closing-pattern)\n to automatically close the issue when merging the commit with the upstream\n repository:\n\n```plain\nCloses #1234\nFixes #1234\nCloses: https://gitlab.gnome.org/GNOME/glib/issues/1234\n```\n\n - If you have a merge request with multiple commits and none of them\n completely fixes an issue, you should add a reference to the issue in\n the commit message, e.g. `Bug: #1234`, and use the automatic issue\n closing syntax in the description of the merge request.\n\n### Merge access to the GLib repository\n\nGLib is part of the GNOME infrastructure. At the current time, any\nperson with write access to the GNOME repository can merge merge requests to\nGLib. This is a good thing, in that it allows maintainership to be delegated\nand shared as needed. However, GLib is a fairly large and complicated package\nthat many other things depend on, and which has platform specific behavior — so\nto avoid unnecessary breakage, and to take advantage of the knowledge about GLib\nthat has been built up over the years, we’d like to ask people contributing to\nGLib to follow a few rules:\n\n0. Never push to the `main` branch, or any stable branches, directly; you\n   should always go through a merge request, to ensure that the code is\n   tested on the CI infrastructure at the very least. A merge request is\n   also the proper place to get a comprehensive code review from the core\n   developers of GLib.\n\n0. Always get a code review, even for seemingly trivial changes.\n\n0. Pay attention to the CI results. Merge requests cannot be merged until the\n   CI passes. If they consistently fail, either something is wrong with the\n   change, or the CI tests need fixing — in either case, please bring this to\n   the attention of a core developer rather than overriding the CI.\n\nIf you have been contributing to GLib for a while and you don’t have commit\naccess to the repository, you may ask to obtain it following the [GNOME account\nprocess](https://wiki.gnome.org/Infrastructure/NewAccounts).\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 0.029296875,
          "content": "LICENSES/LGPL-2.1-or-later.txt"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 4.443359375,
          "content": "Simple install procedure\n========================\n\n```sh\ntar xf glib-*.tar.gz                    # unpack the sources\ncd glib-*                               # change to the toplevel directory\nmeson setup _build                      # configure the build\nmeson compile -C _build                 # build GLib\n\n# Become root if necessary\n\nmeson install -C _build                 # install GLib\n```\n\nRequirements\n============\n\nGLib requires a C90-compliant (but not necessarily C99-compliant) C\ncompiler and libc. On UNIX-like systems, it also assumes compliance\nwith at least the original 1990 version of POSIX.\n\nGLib-2.0 requires pkg-config, which is tool for tracking the\ncompilation flags needed for libraries. (For each library, a small `.pc`\ntext file is installed in a standard location that contains the\ncompilation flags needed for that library along with version number\ninformation.) Information about pkg-config can be found at:\n\n  http://www.freedesktop.org/software/pkgconfig/\n\nMeson (http://mesonbuild.com/) is also required. If your distribution does not\npackage a new enough version of Meson, it can be [installed using\n`pip`](https://mesonbuild.com/Getting-meson.html#installing-meson-with-pip).\n\nIn order to implement conversions between character sets,\nGLib requires an implementation of the standard `iconv()` routine.\nMost modern systems will have a suitable implementation, however\nmany older systems lack an `iconv()` implementation. On such systems,\nyou must install the libiconv library. This can be found at:\n\n http://www.gnu.org/software/libiconv/\n\nIf your system has an iconv implementation but you want to use\nlibiconv instead, you can pass the `--with-libiconv` option to\nconfigure. This forces libiconv to be used.\n\nNote that if you have libiconv installed in your default include\nsearch path (for instance, in `/usr/local/`), but don't enable\nit, you will get an error while compiling GLib because the\n`iconv.h` that libiconv installs hides the system iconv.\n\nIf you are using the native iconv implementation on Solaris\ninstead of libiconv, you'll need to make sure that you have\nthe converters between locale encodings and UTF-8 installed.\nAt a minimum you'll need the `SUNWuiu8` package. You probably\nshould also install the `SUNWciu8`, `SUNWhiu8`, `SUNWjiu8`, and\n`SUNWkiu8` packages.\n\nThe native iconv on Compaq Tru64 doesn't contain support for\nUTF-8, so you'll need to use GNU libiconv instead. (When\nusing GNU libiconv for GLib, you'll need to use GNU libiconv\nfor GNU gettext as well.) This probably applies to related\noperating systems as well.\n\nFinally, for message catalog handling, GLib requires an implementation\nof `gettext()`. If your system doesn't provide this functionality,\nyou should use the libintl library from the GNU gettext package,\navailable from:\n\n http://www.gnu.org/software/gettext/\n\nSupport for extended attributes and SELinux in GIO requires\nlibattr and libselinux.\n\nSome of the mimetype-related functionality in GIO requires the\n`update-mime-database` and `update-desktop-database` utilities, which\nare part of shared-mime-info and desktop-file-utils, respectively.\n\nGObject uses libffi to implement generic marshalling functionality.\n\nThe Nitty-Gritty\n================\n\nComplete information about installing GLib can be found\nin the file:\n\n docs/reference/glib/html/glib-building.html\n\nOr online at:\n\n https://docs.gtk.org/glib/building.html\n\n\nInstallation directories\n========================\n\nThe location of the installed files is determined by the `--prefix`\nand `--exec-prefix` options given to configure. There are also more\ndetailed flags to control individual directories. However, the\nuse of these flags is not tested.\n\nOne particular detail to note, is that the architecture-dependent\ninclude file `glibconfig.h` is installed in `$libdir/glib-2.0/include/`.\n\n`.pc` files for the various libraries are installed in\n`$libdir/pkgconfig` to provide information when compiling\nother packages that depend on GLib. If you set `PKG_CONFIG_PATH`\nso that it points to this directory, then you can get the\ncorrect include flags and library flags for compiling a GLib\napplication with:\n\n```sh\npkg-config --cflags glib-2.0\npkg-config --libs glib-2.0\n```\n\nThis is the only supported way of determining the include and library flags\nfor building against GLib.\n\n\nCross-compiling GLib\n====================\n\nInformation about cross-compilation of GLib can be found\nin the file:\n\n docs/reference/glib/html/glib-cross-compiling.html\n\nOr online at:\n\n https://docs.gtk.org/glib/cross-compiling.html\n"
        },
        {
          "name": "LICENSES",
          "type": "tree",
          "content": null
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 685.3857421875,
          "content": "Overview of changes in GLib 2.83.2, 2024-12-11\n==============================================\n\n* This release has the same code as 2.83.1, but contains a fix for release\n  archive generation which means that 2.83.1 does not have a release archive\n\n* Bugs fixed:\n  - !4433 ci: Enable -Dintrospection for dist builds\n\nOverview of changes in GLib 2.83.1, 2024-12-11\n==============================================\n\n* Bugs fixed:\n  - #1251 gio/tests/contenttype fails on OS X: \"public.directory\" !=\n    \"public.folder\"\n  - #3441 Bump minimum supported version of macOS (John Ralls)\n  - #3493 Heap buffer overflow read in utf8_verify_ascii() (Philip Withnall)\n  - #3511 Build failure “'ifunc' is not supported on this target” with muslc\n    (Philip Withnall)\n  - #3517 Silent linked-list corruption in g_static_resource_init() on redundant\n    calls\n  - #3524 Wrong parameter type for g_enum_register_static in GObject-2.0.gir\n    (Jan-Willem Harmannij)\n  - #3526 Segfault in statically linked binary during initialization of ifuncs\n    since 2.83.0 (Philip Withnall)\n  - #3532 g_converter_output_stream_write() can return 0 (Benjamin Otte)\n  - #3540 g_signal_connect on \"notify::non-existant-property\" doesn't warn for\n    invalid property (Sid)\n  - #3545 Modernize the default value for g_thread_pool_set_max_unused_threads\n    (Matthias Clasen)\n  - #3546 Make the thread name available (Matthias Clasen)\n  - #3548 Fix g_settings_schema_has_key() to work with extended schemas\n  - #3552 Missing nullable annotation for `log_domain` in `GLogFunc` callback\n    (Roberto Leinardi)\n  - #3559 2.82.3 regression: lollypop crashes on startup (Philip Withnall)\n  - !4232 refstring: Fix race between releasing and re-acquiring an interned\n    GRefString\n  - !4382 girepository: gi_object_info_find_signal(): Avoid repeated allocations\n  - !4384 test utils: Make nonfatal assertions an option\n  - !4385 gutf8: Skip ASan instrumentation for load_word\n  - !4389 macos: Add extra content type tests\n  - !4393 Replace procfs linuxism with kinfo freebsdism\n  - !4395 appmonitor: Fix warning building test\n  - !4396 tests: Factor out a function to convert FD to path\n  - !4398 grefstring: Mark a variable as potentially unused\n  - !4399 meson: Add variables to -uninstalled.pc files\n  - !4401 testutils: Documentation improvements\n  - !4403 Revert \"CI: Rebuild a slightly newer version of ninja for debian-\n    stable-i386\"\n  - !4406 glib/gbytes: Be more careful when saving a GBytes of NULL\n  - !4407 guri: Fix paths starting with ‘//’ when parsing\n  - !4410 threadpool: Simplify pool thread naming\n  - !4411 gdbusconnection: Allow creating connection with cross-namespace\n  - !4412 gmessages: Treat DEBUG_INVOCATION=1 same as G_MESSAGES_DEBUG=all\n  - !4413 gunicode: Update some comments in gunicode.h for Unicode 16.0.0\n  - !4414 gdbus: Add a few missing `(nullable)` annotations to GDBus method\n    invocation related functions\n  - !4415 gdbus: Fix leak of method invocation when registering an object with\n    closures\n  - !4421 gparam: Add link to constructed vfunc to CONSTRUCT\n  - !4422 docs: Fix dead link in CONTRIBUTING\n  - !4423 gio-tool: Clarify that `gio mount -l` only lists user-interesting\n    things\n  - !4424 ci: Ensure all variables are quoted in .gitlab-ci.yml\n  - !4425 tests: Skip unsupported dbus-appinfo test on GNU/Hurd for the moment\n  - !4428 girepository: Expose gi-compile-repository and gi-* tools in pkg-\n    config\n  - !4429 gdbus: Add nullable annotations for fd list outs\n  - !4432 ci: Add release component to automate tarball publishing\n\n\nOverview of changes in GLib 2.83.0, 2024-11-06\n==============================================\n\n* Update to Unicode 16.0.0; there may be bugs in linebreaking support, see #3518\n  (#3460, work by Philip Withnall)\n\n* Optimise UTF-8 validation of strings, including use of ifuncs to prevent\n  spurious warnings from sanitizers and valgrind (#3481, work by Christian\n  Hergert)\n\n* Fix a potential buffer overflow in `GSocks4aProxy` (#3461, work by\n  Michael Catanzaro)\n\n* Change the default value of -Dglib_debug from `auto` to `enabled` for\n  developers — distributions will almost certainly want to override it to\n  `-Dglib_debug=disabled` for package release builds though; see #3421\n\n* Revert per-instance locking changes in `GCancellable` as they introduced new\n  races (#3448)\n\n* Bump Meson dependency to 1.4.0 (!4244, work by Benjamin Gilbert)\n\n* Rename multiple `g_unix_mount_*()` APIs to `g_unix_mount_entry_*()` (#3492,\n  work by Jialu Zhou)\n\n* Add a new `GFileMonitor` backend for macOS and BSD: libinotify-kqueue (!3657,\n  work by Gleb Popov)\n\n* Add APIs for sync, async and finish function annotations to libgirepository\n  (!3746, work by Evan Welsh)\n\n* Bugs fixed:\n  - #3289 readlink -f fails in CI on macOS\n  - #3415 module-test-library and module-test-plugin tests fail on FreeBSD and\n    muslc (Philip Withnall)\n  - #3417 Investigate trampoline performance implications in g_mutex_lock_impl()\n    changes (Philip Withnall)\n  - #3421 Default value for glib_debug meson option (Philip Withnall)\n  - #3444 deprecation warnings when using gobjectnotifyqueue.c\n  - #3450 Should check for epoll_create1 rather than epoll_create (Philip\n    Withnall)\n  - #3451 Gio.MenuModel docs have an outdated UI example (Philip Withnall)\n  - #3456 Test /unix-mounts/get-mount-entries fails unless libmount is enabled\n    (Philip Withnall)\n  - #3458 scan-build CI job fails due to gvdb subproject not having meson.build\n    (Philip Withnall)\n  - #3460 \"404: Page not found\" Error on \"submitted as merge requests\" Link\n    (Philip Withnall)\n  - #3461 Buffer overflow in set_connect_msg() (Michael Catanzaro)\n  - #3464 g-ir-scanner fails silently on msys2 CI jobs (Philip Withnall)\n  - #3465 Avoid GError for control flow in GResources\n  - #3469 Unclear correctness of g_malloc() in pattern_coalesce() (Michael\n    Catanzaro)\n  - #3470 Update to Unicode 16.0.0 (Philip Withnall)\n  - #3472 Overactive GVariantTypeInfo collection causes considerable overhead\n    (Christian Hergert)\n  - #3477 Determine policy on 32-bit support (Philip Withnall)\n  - #3478 Incorrect Examples in GVariant Specification (Christian Hergert)\n  - #3480 glib/gvariant: incorrect use of G_ANALYZER_ANALYZING (Christian\n    Hergert)\n  - #3481 Discussion: utf8 validation optimization (Christian Hergert)\n  - #3483 mainloop Unix FD test intermittently fails on Hurd (Philip Withnall)\n  - #3484 g_app_info_launch_default_for_uri no longer works on macOS\n  - #3486 GVariant inline allocation support broke i686/32-bit builds (Christian\n    Hergert)\n  - #3488 `glib` does not properly detect `gobject-introspection` (Philip\n    Withnall)\n  - #3489 Multicast cannot be joined on Mac OS on non-default interface\n    (Nirbheek Chauhan)\n  - #3490 Meson: fix support for aarch64-w64-mingw32 (Windows on ARM64) (Carlo\n    Bramini)\n  - #3492 Incorrect Documentation for g_unix_mount_get_mount_path Return Value\n    Ownership (Jialu Zhou)\n  - #3500 AIX: build failure due to pollfd structure change (Parth Patel)\n  - #3502 Test regressions with tzdata 2024b (Rebecca N. Palmer)\n  - #3508 g_array_free and free_seg\n  - #3512 AIX: Undefined symbol related to ASAN Sanitizer\n  - !3657 Introduce a new GFileMonitor backend: libinotify-kqueue\n  - !3746 girepository: Add APIs for sync, async, and finish function\n    annotations\n  - !3816 Update the wrap file for gi-docgen\n  - !4126 build: Enable -Wfloat-conversion and fix warnings\n  - !4176 tests: Expand tests for app launching via D-Bus\n  - !4196 refstring: add GEqualFunc for ref-counted strings\n  - !4202 simpleproxyresolver: Ignore host with scope id\n  - !4204 Fix minor issues found by static analysis, and add some additional\n    code comments\n  - !4216 build: Post-release version bump\n  - !4218 Persian l10n\n  - !4219 tests: Run lint tests with detected bash\n  - !4223 Update Korean translation\n  - !4224 Update Catalan translation\n  - !4225 Update Czech translation\n  - !4226 Update Portuguese translation\n  - !4227 gspawn: close child_err_report_fd before exiting on error\n  - !4235 Update Ukrainian translation\n  - !4236 Cherry pick Polish and Brazilian Portuguese translations from\n    glib-2-82 to main\n  - !4237 Update French translation\n  - !4239 Update Galician translations for main\n  - !4243 gresource: Convert docs to gi-docgen linking syntax\n  - !4244 build: Bump Meson dependency to 1.4.0\n  - !4245 resource: Add g_resource[s]_has_children and avoid a pointless\n    allocation\n  - !4248 dir: Avoid some allocations\n  - !4252 gio: Fix overindented docstring of buffer argument\n  - !4253 Update Bulgarian translation\n  - !4254 Update British English translation (main)\n  - !4256 Updated Lithuanian translation\n  - !4257 Update Hungarian translation\n  - !4260 Collation keys are not encoded in UTF-8\n  - !4261 gsocket windows: check event before calling WSAEnumNetworkEvents\n  - !4262 Update Russian translation\n  - !4264 Update Danish translation\n  - !4267 Update Georgian translation\n  - !4268 subprojects: Update pcre2 to 10.44\n  - !4269 docs(glib): Fix link in string-utils ref\n  - !4272 gio: Add a query_exists vfunc to GFile\n  - !4277 tests: Add some explicit float → int casts\n  - !4278 GDBus: Don't log a message for G_DBUS_CONNECTION_FLAGS_CROSS_NAMESPACE\n  - !4286 glib/gvariant: avoid GVariantType copy for stack builders\n  - !4288 girepository: Make _blob_is_registered_type static inline\n  - !4290 glib/gbytes: save small byte buffers inline\n  - !4292 Fix incorrect use of assert/debug/check macros\n  - !4293 gvarianttypeinfo: reduce caching overhead\n  - !4294 gvarianttype: mark const functions as such\n  - !4295 gvariant: Avoid malloc/free in valid_format_string()\n  - !4296 glib/gvariant: use g_utf8_validate() for strlen\n  - !4297 glib/gvarianttype: g_variant_type_is_subtype_of() fastpath\n  - !4298 glib/gvariant: avoid g_renew() for definite tuples\n  - !4299 glib/gvariant: Avoid extraneous GBytes ref counting\n  - !4300 gpoll windows: use a threadpool when polling large number of fds\n  - !4301 glib/gvariant: Inline small gvariant data using C99 flexible arrays\n  - !4302 glib/gvariant: skip bitlock for g_variant_ref_sink()\n  - !4303 gbytes: Convert docs to gi-docgen linking syntax\n  - !4304 gutf8: Convert docs to gi-docgen linking syntax\n  - !4305 build: switch back to c_std=gnu99 pending ObjC fix\n  - !4307 ci: Re-enable fatal warnings for FreeBSD CI\n  - !4308 utils: Add g_steal_handle_id() to complement g_clear_handle_id()\n  - !4310 tests: FreeBSD doesn't use glibc\n  - !4311 tests: Move fake-document-portal subprocess inside dbus-appinfo test\n  - !4313 remove quadratic behavior in g_string_replace\n  - !4315 fuzzing: Add simple fuzz test for g_string_replace()\n  - !4318 CI: Use Visual Studio 2019 for the MSVC CI\n  - !4321 gvariant-core.c: Fix suffix alignment on 32-bit MSVC builds\n  - !4322 gvariant: Fix unused variables when G_DISABLE_ASSERT is defined\n  - !4323 gbytes: Add an assertion to placate static analysis\n  - !4326 gvarianttype: Add two missing (nullable) annotations and port docs to\n    gi-docgen format\n  - !4327 gio/gdatainputstream: use memchr() when possible\n  - !4331 gir: Ignore function-inline and method-inline elements\n  - !4332 gstring: Fix a heap buffer overflow in the new g_string_replace() code\n  - !4334 fuzzing: Add input length limits on g_string_replace() test\n  - !4335 docs: Update CI platforms list and Visual Studio recommendation\n  - !4338 CI/MSYS2: Fix prefix for gobject-introspection\n  - !4339 Win32 cleanup: do not define STRICT\n  - !4340 gsocket: Fix #ifdef for defining g_socket_get_adapter_ipv4_addr()\n  - !4341 gio: Use g_steal_handle_id() with signal unsubscriptions\n  - !4342 CI: Add manual CI job for VS2019 ARM64 builds\n  - !4343 CI: Skip PCRE2 tests for now for 32-bit Visual Studio builds\n  - !4344 glib/gutf8: use ifunc to check for valgrind\n  - !4345 fuzzing: Add fuzz tests for GDataInputStream’s complex read methods\n  - !4346 gdate: Fix minor typo in documentation comment\n  - !4347 docs: Add Meson to the GSettings build integration\n  - !4348 gdatainputstream: Fix length return value on UTF-8 validation failure\n  - !4350 glib: Don't require GLIB_DOMAIN to be a NUL-terminated string\n  - !4351 Build fixes for building on Solaris & illumos\n  - !4352 gdatainputstream: Use memchr() for the multi-stop-char case too\n  - !4353 docs: Add CI runner maintainers to CODEOWNERS\n  - !4354 glib.supp: Suppress more _g_io_module_get_default_type leaks\n  - !4358 Add a CI job for Debian stable i386 (32-bit)\n  - !4359 tests: Use g_assert_*() rather than g_assert() in GDateTime tests\n  - !4365 fuzzing: Fix buffer overread error in the fuzz test itself\n  - !4366 glocalfile: Disable faccessat()-based query_exists on FreeBSD\n  - !4367 tests: Fix calls to deprecated API in unix-mounts tests\n  - !4373 macos: Remove extraneous space from type identifier\n  - !4374 thread: Force-limit thread name length\n  - !4375 Small improvements to g_on_error_stack_trace and g_on_error_query\n  - !4376 Enable GNetworkMonitorNetlink on FreeBSD\n  - !4377 gvariant: Introduce G_VARIANT_BUILDER_INIT_UNSET\n  - !4378 gio: Fix GFileEnumerator leaks in gio tools\n  - !4383 gtask: Fix comment for auto task naming via 'g_task_set_source_tag()'\n\n* Translation updates:\n  - Bulgarian (twlvnn kraftwerk)\n  - Catalan (Jordi Mas)\n  - Czech (AsciiWolf)\n  - Danish (Ask Hjorth Larsen)\n  - English (United Kingdom) (Bruce Cowan)\n  - French (Vincent Chatelain)\n  - Galician (Fran Diéguez)\n  - Georgian (NorwayFun)\n  - Hungarian (Balázs Úr)\n  - Korean (Changwoo Ryu)\n  - Lithuanian (Aurimas Černius)\n  - Persian (Danial Behzadi)\n  - Polish (Piotr Drąg)\n  - Portuguese (Hugo Carvalho)\n  - Portuguese (Brazil) (Rafael Fontenelle)\n  - Russian (jtux270)\n  - Ukrainian (Yuri Chornoivan)\n\n\nOverview of changes in GLib 2.81.2, 2024-08-16\n==============================================\n\n* Various introspection annotation changes (!4161, !4162, !4180, work by\n  multiple people)\n\n* Bugs fixed:\n  - #2868 g_openuri_portal_open_uri_async: Does not accept a xdg-activation\n    token (Julian Sparber)\n  - #2885 Use TAP protocol 14 with newer meson (Marco Trevisan (Treviño))\n  - #3315 unix test crashes intermittently on musl with alternate stack code\n    (Philip Withnall)\n  - #3381 Actually use Fedora 39 on CI (Marco Trevisan (Treviño))\n  - #3403 GOsxAppInfo missing async launch implementation\n  - #3429 gsettings list-recursively with --schemadir crashes with trace trap\n    (core dumped) if no other schemas are installed on the system\n  - !2980 ghash: fix g_hash_table_steal_extended() when requesting key and value\n    of a set\n  - !4161 GVariant: Add copy-func and free-func annotations\n  - !4162 GBytes: Add copy-func and free-func annotations\n  - !4163 gunixmounts: Add mount point/entry getters from files and add tests\n    based on them\n  - !4177 gmain: Adapt to gi-docgen comments\n  - !4179 2.81.1\n  - !4180 glib/mappedfile: g_mapped_file_get_contents() does not transfer\n  - !4181 docs: Linkify a function\n  - !4182 gstring: fix unused-result warning with g_string_free() in C++\n  - !4186 doap: Remove invalid maintainer entry\n  - !4187 docs: Fix mistakes from the GTK-Doc to GI-DocGen conversion\n  - !4188 gobjectnotifyqueue: add G_GNUC_UNUSED in unused parameters\n  - !4192 ghash: Fix the documentation of GHRFunc\n  - !4193 docs: Clarify distinction between GDrive, GVolume and GMount\n\nOverview of changes in GLib 2.81.1, 2024-08-02\n==============================================\n\n* Add g_sort_array() and deprecate g_qsort_with_data(), to ensure that\n  it can be used with GArray without truncating the data set.\n\n* Continue the port of the documentation over from gtk-doc to gi-docgen.\n\n* Add network monitor implementation for macOS.\n\n* Use per-instance locking in GCancellable, and fix races when disposing\n  of a GCancellable.\n\n* Ensure that errno is appropriately set when using g_ascii_strtoull()\n  and similar functions.\n\n* Bugs fixed:\n  - #774 g_cancellable_connect() doesn't work like its docs claim, has race\n    condition (Marco Trevisan (Treviño))\n  - #1326 Network monitor support for macOS\n  - #2309 cancellable test leaks many GCancellableSource objects (Marco Trevisan\n    (Treviño))\n  - #2313 gmenumodel test leaks GCancellableSource objects (Marco Trevisan\n    (Treviño))\n  - #2765 Descriptions for GSourceFuncs structure's members do not appear in\n    generated docs (Gary Li)\n  - #3370 Fails to build with Clang on Windows with ninja 1.12\n  - #3393 Crash with Gio.Resolver\n  - #3399 GContentType, GAppInfo, GSpawn, GThread introspection annotations\n    missing on Windows\n  - #3415 module-test-library and module-test-plugin tests fail on FreeBSD and\n    muslc (Philip Withnall)\n  - #3418 g_ascii_string_to_unsigned() can fail when it should succeed if\n    get_C_locale() clobbers errno (Simon McVittie)\n  - #3419 Could not build latest commit in macos sonoma 14.5 (Roshan-R)\n  - !4113 Port some GIO files to gi-docgen\n  - !4127 gqsort: Add g_sort_array() and deprecate g_qsort_with_data()\n  - !4128 gasyncresult: Port all doc comments to gi-docgen\n  - !4130 Fix gsocketclient-slow test on FreeBSD\n  - !4131 GAsyncQueue: Add copy-func and free-func annotations\n  - !4133 replace package.version.Version by internal code\n  - !4136 gobject: Remove unused variable from macro\n  - !4137 codegen: resolve pylint import issues\n  - !4138 gobject: Fix macro name in comment; improve style\n  - !4140 Docs: Replace Gio.MenuModel diagram with SVG\n  - !4142 docs: Add source location URL\n  - !4143 codegen: Drop unused import\n  - !4144 gi: Add missing Since annotation\n  - !4145 gfilteroutputstream.c: Port all doc comments to gi-docgen\n  - !4146 gbufferedinputstream: Port all doc comments to gi-docgen\n  - !4148 gbufferedoutputstream.c: Port doc comments to gi-docgen\n  - !4149 tests: Make an error check less specific in gsocketclient-slow\n  - !4150 glib-private: fix build under Cygwin\n  - !4152 tests: Fix compilation of resolver-parsing test on FreeBSD\n  - !4154 gmodule-dl: fix G_MODULE_BIND_LOCAL on Darwin\n  - !4155 gfile: Add support for x-gvfs-trash mount option\n  - !4157 docs(GNode): Traversal diagrams, color & dark-mode\n  - !4158 gspawn: Move docs/annotations to be platform independent\n  - !4159 introspection: Correct GIO-Windows pkg-config name\n  - !4164 docs: Clarify that G_GNUC_UNUSED can’t be used on definitions\n  - !4165 docs: Clarify conventions about type naming and name mangling in\n    GObject\n  - !4166 gmacros: Define G_STATIC_ASSERT for GI Scanner\n  - !4167 gappinfo and gcontenttype: Make introspection annotations available on\n    all platforms\n  - !4173 CI: Mark msys2-mingw32 as allowing failures\n  - !4174 meson: Fix another kqueue build race on macOS\n\nOverview of changes in GLib 2.81.0, 2024-06-28\n==============================================\n\n* Add a strong recommendation to build with a toolchain that supports C11; this\n  will become a hard requirement in future stable release cycles (!4082, work by\n  Emmanuele Bassi)\n\n* Fix CVE-2024-34397: GDBus signal subscriptions for well-known names are\n  vulnerable to unicast spoofing (#3268, work by Simon McVittie, reported by\n  Alicia Boya García)\n\n* Fix a regression with IBus caused by the fix for CVE-2024-34397 (#3353,\n  work by Simon McVittie)\n\n* Fix Devhelp documentation indexes (#3287, work by Philip Withnall)\n\n* Fix installation directory of the GVariant specification (#3351, work by\n  Michael Catanzaro)\n\n* Change `dtrace` and `systemtap` Meson options to auto-enabled features, and\n  change default for `sysprof` from `disabled` to `auto` (#3354, work by Michael\n  Catanzaro)\n\n* Change how Python is found at configure time and in script shebangs\n  (#3301, #3331, work by multiple people)\n\n* Make various libgirepository APIs return reproducible results by defining an\n  order over namespaces (#3303, work by Philip Withnall)\n\n* Ignore `SIGPIPE` for the entire parent process when creating a `GSubprocess`\n  (#3310, work by Philip Withnall)\n\n* Use alternate signal stack to receive signals if the process provides one\n  (!3983, #3314, #3315, #3337, work by Marco Trevisan, Pablo Correa Gomez,\n  Philip Withnall)\n\n* Allow multiple parameters for D-Bus activation of app actions (#3333, work by\n  Philip Withnall, Julian Sparber)\n\n* Fix out-of-bounds access when reading >4GiB files (#3397, work by\n  Benjamin Otte, Philip Withnall)\n\n* Use `ppoll()` rather than `poll()` where possible for more precise timeouts\n  (!3958, work by Christian Hergert)\n\n* Port various parts of the documentation to gi-docgen format (#3250, work by\n  Sudhanshu Tiwari, Philip Withnall)\n\n* Fix `futex_time64()` use on Android ≤ 10 (!3987, work by Amyspark)\n\n* Various improvements to bash completion for GLib utilities (!3989, !4012,\n  !4013, work by Ville Skyttä, Philip Withnall)\n\n* Bugs fixed:\n  - GNOME/tracker-miners#315 3.7.0 - GLib-GIO-WARNING **: 09:27:12.186: Error\n    creating IO channel for /proc/self/mountinfo: Invalid argument (g-io-error-\n    quark, 13) (Ondrej Holy)\n  - GNOME/gobject-introspection#509 Gio Typelib error on method call:\n    'gi.repository.Gio' object has no attribute 'content_type_get_icon'\n    (Biswapriyo Nath)\n  - #564 create introspection-friendly version of g_settings_bind_with_mapping\n    (Philip Chimento)\n  - #1767 Fix scan-build reports and gate CI pipeline success on scan-build\n    success (Philip Withnall)\n  - #2896 Links to docs for glib-compile-resources are broken (Emmanuele Bassi)\n  - #3184 g_socket_client_connect_to_host_async leaks memory when target host\n    doesn't respond to ARP (Philip Withnall)\n  - #3254 Property deprecation warning can be issued in cases when deprecated\n    property isn't used (Philip Withnall)\n  - #3268 CVE-2024-34397: GDBus signal subscriptions for well-known names are\n    vulnerable to unicast spoofing (Simon McVittie)\n  - #3286 g_strrstr, g_strrstr_len, g_strstr_len return ownership note is\n    incorrect (Philip Withnall)\n  - #3287 Devhelp does not show indexes for GLib, GIO, or GObject (Philip\n    Withnall)\n  - #3289 readlink -f fails in CI on macOS (Simon McVittie)\n  - #3290 Cleanup after G_TEST_OPTION_ISOLATE_DIRS follows symlinks (Will\n    Thompson)\n  - #3301 consider glib development binaries usable without external python\n    modules\n  - #3303 gi_repository_find_by_gtype is nondeterministic (Philip Withnall)\n  - #3310 Race condition in `g_subprocess_communicate()` with\n    `G_SUBPROCESS_FLAGS_STDIN_PIPE` (Philip Withnall)\n  - #3313 GBookmarkFile documentation links to non-existant page (Philip\n    Withnall)\n  - #3314 unix test fails on macOS due to alternate signal stack changes\n  - #3317 test failures during glib bootstrap\n  - #3326 Switch TRUE and FALSE to C99 constants (Emmanuele Bassi)\n  - #3333 Gio.Application: Takes only first parameter when activating an action\n    via D-Bus Activation (Julian Sparber)\n  - #3337 unix test fails under valgrind due to alternate stack changes (Marco\n    Trevisan (Treviño))\n  - #3342 Crash in gdbus schedule_callbacks() due to missing NULL check before\n    g_str_equal() (Philip Withnall)\n  - #3351 GVariant specification installed in wrong directory (Michael\n    Catanzaro)\n  - #3353 Fixing CVE-2024-34397 caused regressions for ibus (Simon McVittie)\n  - #3354 Reconsider default values for certain build options\n  - #3355 GIBaseInfo/GIBaseInfoStack bitfield definition doesn't match on\n    16-bit-aligned-pointer systems\n  - #3361 Documentation for i18n is limited, i18n macros not available\n    (Emmanuele Bassi)\n  - #3363 Factor out untranslatable parts of translatable error messages\n  - #3366 Crash in error path of g_dbus_connection_export_menu_model() (Philip\n    Withnall)\n  - #3369 Remove links to dead developer-old.gnome.org (Philip Withnall)\n  - #3372 G_LIKELY doesn’t appear in gi-docgen documentation (Emmanuele Bassi)\n  - #3394 GLib unit tests fail on macOS runner due to localhost being out of\n    addresses (Philip Withnall)\n  - #3397 g_file_load_contents reads large (>4GiB) files past end of array due\n    to gsize to guint truncation\n  - #3401 Random failures to build glib 2.80.3 (Philip Withnall)\n  - #3402 g_output_stream_write fails assertion if buffer is NULL and count is 0\n    (Gary Li)\n  - !3697 GLocalFile: support trashing long file name\n  - !3939 Add g_file_copy_async_with_closures() and\n    g_file_move_async_with_closures()\n  - !3952 Add unref-to-strv to GStrvBuilder\n  - !3954 [th/performance] add script for combining performance results\n  - !3958 Use ppoll() when possible for more precise timeouts\n  - !3959 [th/gobject-toggle-refs-check] Fix critical warning for toggle\n    notifications in g_object_ref()/g_object_unref()\n  - !3962 meson: Fix a needless recompilation of some gdbus tests\n  - !3966 girparser: Don't assume sizeof(size_t) == sizeof(void *)\n  - !3967 girparser: Allow time_t, off_t, etc. to appear in GIR XML\n  - !3969 Ported the first few documentation comments in `gio/gaction.c` to gi-\n    docgen\n  - !3970 girparser: Make sizes in integer_aliases more obviously correct\n  - !3972 girparser: Adjust signedness() macro\n  - !3973 glib/gvariant: fix compile error with GCC 14.0.1\n  - !3974 tests: Mark several additional tests as can_fail on GNU Hurd\n  - !3975 build: Post-release version bump\n  - !3977 tests: Remove unnecessary subprocess from dataset tests\n  - !3978 gio: Fix docs links to description of I/O priority\n  - !3979 Don't assume CPU_ISSET will return 0 or 1\n  - !3983 gmain: Use alternate signal stack if the application provides one\n  - !3984 Fix a typo\n  - !3985 gio: Change ‘unrecognised’ to ‘unrecognized’ in various user-visible\n    places\n  - !3986 Port the remaining documentation comments in `gio/gaction.c` to GI-\n    Docgen\n  - !3987 glib/gthread-posix: Block futex_time64 usage on Android API level < 30\n  - !3988 Introspection: Fix running g-ir-scanner 1.80.x+ on Windows\n  - !3989 completion: make gsettings work in nounset mode\n  - !3990 docs: spelling and grammar fixes\n  - !3993 Convert  __BIONIC__ usages that check for Android to __ANDROID__\n  - !3994 glib/gthread-posix: Fix missing saved_errno variable in Android's\n    g_futex_simple\n  - !3996 docs: Fix g_object_connect()'s docblock\n  - !4000 Revert \"gmain: Use alternate signal stack if the application provides\n    one\"\n  - !4002 Ports the documentation comments in gio/gactiongroup.c to GI-Docgen\n  - !4003 Remove unused cmph files\n  - !4005 Fix various bugs found by scan-build and refresh scan-build config in\n    CI\n  - !4008 docs: Update Code of Conduct URI\n  - !4011 docs: Minor GVariant fixes\n  - !4012 tests: Enable shellcheck for bash completion scripts\n  - !4013 completion: Invoke the command being completed\n  - !4014 Add a few more missing license and copyright headers to files\n  - !4016 gunicode.h: fix warning with -Wcast-qual for define g_utf8_next_char()\n  - !4017 docs(gio/overview): Restore missing heading\n  - !4020 girepository/introspection: correctly install .gir files into custom\n    locations\n  - !4022 gfileinfo: Fixed broken link to gio/file-attributes.html\n  - !4023 Fix various implicit conversions from size_t to smaller types\n  - !4024 gdatetime: Fix string type used to initialise array\n  - !4031 gdocumentportal: Handle EROFS and similar errors more gracefully\n  - !4034 link with -latomic when needed\n  - !4035 Add g_converter_convert_bytes\n  - !4045 gapplication: Fix a small leak on an error handling path\n  - !4051 gdbusconnection: Fix test signal subscription ordering\n  - !4057 gdbusmessage: Clean the cached arg0 when setting the message body\n  - !4058 Tests: Build fixes when running `meson test` without previous builds\n  - !4059 tests: Fix various memory leaks and valgrind / ASAN errors\n  - !4063 gdbusconnection: Fix a misleading comment\n  - !4064 girepository/build: Actually use our compiler to generate GLib\n    typelibs and fix parser leaks\n  - !4066 Fix several GCC 14 warnings to please msys2-mingw32 CI\n  - !4067 Remove unused struct\n  - !4068 docs: Fix string-utils paragraph heading\n  - !4069 gdbus: Make more use of symbolic constants for various aspects of the\n    D-Bus protocol\n  - !4075 ci: Update Fedora CI image to Fedora 39\n  - !4078 tests: Fix clang compilation failure due to unrecognised option in\n    pragma\n  - !4081 gpattern: Port the docs to gi-docgen syntax\n  - !4082 docs: Update toolchain requirement to C11\n  - !4083 gobject: fix broken links to parameters and signals naming rules\n  - !4084 docs: Improve g_strescape & g_strcompress descriptions\n  - !4087 ci: Disable systemtap on musl CI build\n  - !4088 girepository: add support for relocations\n  - !4089 Revert \"Alias TRUE and FALSE to C99's true and false\"\n  - !4091 build: Use C89 for the standard version check\n  - !4092 docs: Improve conversion-macros formatting and add\n    GTYPE_TO_POINTER/GPOINTER_TO_TYPE\n  - !4093 gmem.c: Update g_clear_pointer() documentation\n  - !4094 tests: Fix compilation failure on macOS due to missing include\n  - !4095 Improve handling of standard types' signedness\n  - !4097 docs: Fix docs reference to main-loop\n  - !4098 Dump pointer types in the introspection blob\n  - !4099 gfile: Fix finish-func annotations\n  - !4100 docs: Mention XDG_DATA_HOME in glib-compile-schemas manual\n  - !4101 gio/g-i: Mark Application:action-group property as deprecated\n  - !4102 tests: Add basic tests for gdump.c in libgirepository\n  - !4108 build: Rename meson_options.txt to meson.options\n  - !4114 glocalfileinfo: A few fixes on win32\n  - !4115 tests: Use g_assert_*() rather than g_assert() in notification tests\n  - !4117 tests: Improve 4GB file loading test to work on i386\n  - !4120 gtestutils: Free test_data when freeing a test case\n  - !4121 gmacros: Avoid casting functions\n\n* Translation updates:\n  - Catalan (Jordi Mas i Hernandez)\n  - Czech (Daniel Rusek)\n  - Danish (Ask Hjorth Larsen)\n  - French (Vincent Chatelain)\n  - Galician (Fran Dieguez)\n  - Georgian (Ekaterine Papava)\n  - German (Christian Kirbach)\n  - Hungarian (Balázs Úr)\n  - Indonesian (Andika Triwidada)\n  - Italian (Milo Casagrande)\n  - Kabyle (Rachida SACI, Athmane MOKRAOUI)\n  - Korean (Changwoo Ryu)\n  - Latvian (Rūdolfs Mazurs)\n  - Persian (Danial Behzadi)\n  - Polish (Piotr Drąg)\n  - Portuguese (Hugo Carvalho)\n  - Portuguese (Brazil) (Juliano de Souza Camargo, Leônidas Araújo)\n  - Slovenian (Martin)\n  - Turkish (Sabri Ünal)\n  - Ukrainian (Yuri Chornoivan)\n\n\nOverview of changes in GLib 2.80.0, 2024-03-07\n==============================================\n\n* Bugs fixed:\n  - #3271 GLib: string malformed for gettext (Philip Withnall)\n  - !3940 tests: Don’t run check-missing-install-tag.py test under valgrind\n    (Philip Withnall)\n  - !3946 Add missing argument placeholders to several command-line tools (Simon\n    McVittie)\n  - !3947 docs: Fix a typo in the macros docs page (Philip Withnall)\n  - !3951 g_warn_if_fail: Document as always evaluating expr (Simon McVittie)\n  - !3953 docs: Specify gi-docgen as a native dependency (Bobby Rong)\n  - !3955 docs: Fix building with docs enabled and introspection disabled (Bobby\n    Rong)\n  - !3956 docs: Minor improvements to GSignal documentation (Philip Withnall)\n\n* Translation updates:\n  - Basque (Asier Sarasua Garmendia)\n  - British English (Andi Chandler, Bruce Cowan)\n  - Chinese (China) (Luming Zh)\n  - Czech (Daniel Rusek)\n  - Georgian (Ekaterine Papava)\n  - Hebrew (Yaron Shahrabani)\n  - Hungarian (Balázs Úr)\n  - Kazakh (Baurzhan Muftakhidinov)\n  - Lithuanian (Aurimas Černius)\n  - Norwegian Bokmål (Brage Fuglseth)\n  - Persian (Danial Behzadi)\n  - Russian (Artur S0)\n  - Slovenian (Matej Urbančič)\n  - Spanish (Daniel Mustieles)\n  - Swedish (Anders Jonsson)\n  - Turkish (Sabri Ünal)\n  - Ukrainian (Yuri Chornoivan)\n\n\nOverview of changes in GLib 2.79.3, 2024-02-27\n==============================================\n\n* Various consistency improvements to the command line libgirepository tools\n  (!3926, !3927, !3928, !3930, work by Simon McVittie)\n\n* Bugs fixed:\n  - #3080 Gimp GTK file chooser hang when a remote file is open (Luca Bacci)\n  - #3210 Critical using Open location: GWinHttpFile doesn’t set\n    G_FILE_ATTRIBUTE_STANDARD_TYPE (Luca Bacci)\n  - #3252 [2.79.1] gdatetime installed tests fails on s390x (Simon McVittie)\n  - #3255 g_base_info_clear on zero-initialized stack-allocated introspection\n    info (Philip Withnall)\n  - #3258 Possible memory leak in GUnixVolumeMonitor (Ondrej Holy)\n  - #3260 Add man pages for girepository tools\n  - #3262 msys2-mingw32 build failing with error code 3221225785 (0xc0000139)\n    (Philip Withnall)\n  - #3263 Ensure girepository tools are translatable (Philip Withnall)\n  - #3266 Use-after-free in gsocketclient.c:connection_attempt_remove() (Philip\n    Withnall)\n  - #3271 GLib: string malformed for gettext (Philip Withnall)\n  - !3918 tests: Don’t run lint tests under valgrind\n  - !3919 tests: Speed up threaded toggle notify test unless -m slow is passed\n  - !3921 ci: Fix printing the execution environment\n  - !3922 gdatetime test: Produce more helpful output on mismatches\n  - !3923 girepository test: Don't assume doubles are naturally-aligned\n  - !3925 girwriter: Take the GIRepository as a parameter\n  - !3926 gi- tools: Remove unused options, improve --debug/--verbose\n  - !3927 g-ir-compiler: Only accept one input file\n  - !3928 gi-decompile-typelib: Interpret --includedir as most-important-first\n  - !3930 migrating-gi: Document command-line option removals\n  - !3935 Restrict macOS CI to origin\n  - !3937 girepository: Fix static build under Windows\n  - !3945 tests: Remove variable-length lookbehind tests for GRegex\n\n* Translation updates:\n  - Basque (Asier Sarasua Garmendia)\n  - Catalan (Jordi Mas i Hernandez)\n  - Chinese (China) (Boyuan Yang)\n  - Czech (Daniel Rusek)\n  - Galician (Fran Dieguez)\n  - Georgian (Ekaterine Papava)\n  - Hebrew (Yaron Shahrabani)\n  - Indonesian (Andika Triwidada)\n  - Kazakh (Baurzhan Muftakhidinov)\n  - Latvian (Rūdolfs Mazurs)\n  - Lithuanian (Aurimas Černius)\n  - Persian (Danial Behzadi)\n  - Russian (Artur S0)\n  - Slovenian (Matej Urbančič)\n  - Spanish (Daniel Mustieles)\n  - Turkish (Sabri Ünal, Emin Tufan Çetin)\n  - Ukrainian (Yuri Chornoivan)\n\n\nOverview of changes in GLib 2.79.2, 2024-02-12\n==============================================\n\n* More work to reduce lock contention and improve performance in GObject (#743,\n  !3869, !3873, work by Thomas Haller)\n\n* More API changes to libgirepository, which is now stable as of this release\n  (#3155, #3217, #3218, #3231, #3234, #3243, #3244, #3245, #3246, work by\n  Philip Chimento, Evan Welsh, Philip Withnall)\n\n* Import `g-ir-compiler`, `g-ir-generate` and `g-ir-inspect` from\n  gobject-introspection.git and update them to work with girepository-2.0,\n  renaming them to `gi-compile-repository`, `gi-decompile-typelib` and\n  `gi-inspect-typelib` (see docs/reference/girepository/migrating-gi.md) (!3853,\n  !3909, work by Evan Welsh, Philip Withnall)\n\n* Add new `GLibUnix-2.0.gir`, `GLibWin32-2.0.gir`, `GioUnix-2.0.gir` and\n  `GioWin32-2.0.gir` GIRs which contain platform specific APIs, and are the\n  preferred way for third parties to access those APIs in future; although\n  platform specific APIs which were already exposed in `GLib-2.0.gir` and\n  `Gio-2.0.gir` continue to be listed there; the underlying `.so` files have not\n  changed (!3892, work by Philip Withnall)\n\n* Bugs fixed:\n  - #743 GLib weak refs depend on cascade of locks, including global ones, which\n    makes them non-scalable\n  - #2887 memory-monitor-dbus.test fails in installed-tests suite (Philip\n    Withnall)\n  - #3198 Support --version in standard GApplication command line arguments\n    (Maxim Moskalets)\n  - #3217 Feedback on gobject-introspection: APIs for stack-allocated\n    introspection info (Philip Withnall)\n  - #3218 Segfault in gi_function_info_prep_invoker (Philip Withnall)\n  - #3231 New functions in the glib introspection data (Philip Withnall)\n  - #3234 Reference cycle between GIRepository and GIBaseInfos cached by it\n    (Philip Withnall)\n  - #3236 threaded_resolver_worker_cb leaks memory when lookup fails and\n    connection is already canceled (Philip Withnall)\n  - #3238 Python packaging module is missing on Hurd CI runner (Philip Withnall)\n  - #3240 Missing preconditions checks in GArray (Tobias Stoeckmann)\n  - #3242 Memory leak in gresources over libelf (Maxim Moskalets)\n  - #3243 Feedback on girepository 2.0: Naming of get_type_info vs load_type\n    (Philip Withnall)\n  - #3244 Feedback on girepository 2.0: Where to find uninstalled typelibs\n    (Philip Withnall)\n  - #3245 Feedback on girepository 2.0: GIBoxedInfo's place in the type\n    hierarchy (Philip Withnall)\n  - #3246 Wrong out parameter type in\n    gi_object_info_find_method_using_interfaces (Philip Withnall)\n  - #3247 safe_closefrom(), safe_fdwalk_set_cloexec() as public API (Simon\n    McVittie)\n  - !3797 Refactor GIRepository GIR generation to avoid cyclical dependency\n  - !3807 gprintf/gstrfuncs: Improve and port doc comments to gi-docgen\n  - !3824 gconvert: match GNU iconv behaviour on FreeBSD\n  - !3838 build: Add thorough test setup\n  - !3843 Add more test coverage for girepository\n  - !3845 gunixmounts: Use libmnt_monitor API for monitoring\n  - !3847 ci: Add ability to run manually some specific jobs\n  - !3848 Fix build with introspection on Windows\n  - !3849 girepository: Remove GI_FUNCTION_THROWS and GI_VFUNC_THROWS flags\n  - !3850 [th/strdup-in-ascii-strdown] glib: use g_strdup() in\n    g_ascii_strdown(),g_ascii_strup()\n  - !3851 ci: Fix post-merge CI pipelines\n  - !3853 girepository: Update gir-compiler and use it to compile GIRs\n  - !3854 girnode: Document ownership and element types of internal structs\n  - !3855 gitypelib: Replace multiple constructors with\n    gi_typelib_new_from_bytes()\n  - !3856 girepository: Drop gi_repository_get_default()\n  - !3859 [th/glib-private-const] glib: return const pointer from\n    glib__private__()\n  - !3860 tests: Fix typo in memory-monitor-portal.py.in\n  - !3861 girepository: Fix a memory leak of a mapped file\n  - !3865 [th/test-weak-notify] gobject/tests: add test checking that GWeakRef\n    is cleared in GWeakNotify\n  - !3866 [th/gobject-carray-comment] gobject: remove obsolete code comment\n    about CArray\n  - !3868 Link to the main context tutorial from the main loop docs\n  - !3869 [th/optimize-weak-ref-list] rework GObject's `WeakRefData` to track\n    references in an array instead of GSList\n  - !3870 Revert \"Don't skip dbus-codegen tests on Win32\"\n  - !3871 docs: Fix include path for the build\n  - !3872 gio: tests: Use slightly more explicit assert functions\n  - !3873 [th/datalist-shrink] shrink the interal buffer of `GData`\n  - !3874 Don't skip dbus-codegen tests on Win32\n  - !3876 build: Only override g-ir-compiler when GIR generation is enabled\n  - !3877 Various girepository fixes\n  - !3879 [th/gdataset-comment] gdataset: add code comment to\n    g_datalist_get_data()\n  - !3881 docs: Add migration guide for libgirepository\n  - !3886 codegen: Use `-` instead of `stdout` for output to stdout\n  - !3887 gtestutils: Ensure test_data is freed even if a test is skipped\n  - !3888 gitypes: Fix integer values of GIInfoType and add unit tests for\n    GIUnionInfo\n  - !3892 introspection: Generate separate GIR files and documentation for\n    platform specific APIs\n  - !3893 glocalfile: Support statvfs.f_type\n  - !3894 Minor fixes/docs changes to GFileDescriptorBased and GTask\n  - !3895 [th/meson-werror-fixes] some fixes for meson detection failure with\n    -Werror\n  - !3896 reuse: Add dep5 lines for gnulib and libcharset\n  - !3897 reuse: Fix screen-scraping expression for version 2.x\n  - !3898 Incorporate some lint checks into `meson test`\n  - !3900 gitypelib: Switch to refcounting\n  - !3901 girepository: Add length ‘out’ arguments to several getter methods\n  - !3902 gicallableinfo: Clarify docs for callables with no return type\n  - !3903 gibaseinfo: Rename gi_info_new() to gi_base_info_new()\n  - !3904 [th/meson-werror-fixes-2] more workarounds for compiler warnings in\n    meson compiler checks\n  - !3909 Rename g-ir-generate and g-ir-inspect and update to girepository-2.0\n  - !3911 glib/tests/unix: Mostly pass O_CLOEXEC to g_unix_pipe_open()\n  - !3912 glib-unix: Fix reference to FD_CLOEXEC in docs for g_unix_pipe_open()\n  - !3913 cmph: Fix a typo\n  - !3914 Revert \"ci: Remove not-printable chars from generated junit file\"\n  - !3916 tests: Skip lint tests if bash is not available\n  - !3917 ci: Build and tar libgirepository documentation\n\n* Translation updates:\n  - Georgian (Ekaterine Papava)\n  - Russian (Artur S0)\n\n\nOverview of changes in GLib 2.79.1, 2024-01-22\n==============================================\n\n* Fix a race condition in `g_object_unref()` (#3064, work by Thomas Haller)\n\n* Various API and build changes to libgirepository as it is not yet API-stable\n  (#3216, !3780, !3805, !3823, !3833, !3840)\n\n* Build fixes on big-endian 64-bit systems and mips64el (#3225, #3226, work by\n  Simon McVittie)\n\n* Reduce contention on global locks within GObject (!3774, work by Thomas\n  Haller)\n\n* Allow building man pages without the reference documentation (!3817, work by\n  Simon McVittie)\n\n* Bugs fixed:\n  - #1010 g_get_num_processor does not respect cpuset/affinity\n  - #3064 Crash under g_object_unref()\n  - #3093 GDBusMessage: should validate the type of all known headers (Philip\n    Withnall)\n  - #3207 Add support for syslog to Structured Logging\n  - #3216 Feedback on gobject-introspection: Casting to and from GIBaseInfo*\n    (Philip Withnall)\n  - #3222 pthread_t usages lack type name (Emmanuele Bassi)\n  - #3223 CLang, GMutexLocker: error: unused variable 'locker'\n    [-Werror,-Wunused-variable]\n  - #3225 2.79 regression: gdatetime test failing on 64-bit big-endian since\n    #3119\n  - #3226 resource test fails on Debian mips64el: test5.gresource is not linked\n    but the test assumes it should be (Simon McVittie)\n  - !3774 [th/g-object-priv] add private data to GObject and use per-object\n    locking\n  - !3780 girepository: Use standard types instead of glib specific\n  - !3789 gdatetime: Fix title of documentation comment\n  - !3792 build: Tell gi-docgen where to find the GIR files\n  - !3793 Shorten the title for D-Bus interface docs\n  - !3794 Add boxed GType for GRand\n  - !3795 girepository: Skip GIRepository versions not matching GIRepository-3.0\n  - !3798 docs: Drop outdated .gitignore files\n  - !3799 tests: Fix a minor leak in the new GParamSpecPool test\n  - !3800 ci: Re-enable and fix FreeBSD CI\n  - !3801 gmessages: Port all doc comments to gi-docgen\n  - !3802 [th/g-pointer-bit-lock-ext] glib: add g_pointer_bit_unlock_and_set()\n    and g_pointer_bit_lock_mask_ptr()\n  - !3803 ci: Fix tarballing the docs on dist\n  - !3805 girepository: Various small API cleanups\n  - !3806 gsignal.c: drop an optimization that is undefined behaviour\n  - !3808 glib/deprecated: Skip all the deprecated gthread api\n  - !3809 docs: Fix links to symbols outside the allowed namsepace\n  - !3810 gstrfuncs: Improve and port g_set_str() docs to gi-docgen\n  - !3811 gvariant-parser: Mention annotated types\n  - !3812 brz.c: Use uintptr_t instead of a hardcoded list of 64-bit arches\n  - !3813 gobject: define HAVE_OPTIONAL_FLAGS for sizeof(void*) > 8\n  - !3814 Fix typo in GPOINTER_TO_SIZE documentation\n  - !3817 docs: Allow building man pages without the reference documentation\n  - !3818 docs: Clarify >=2.76 changes to g_module_open()\n  - !3821 tests: Fix a minor leak in the socket test\n  - !3823 girepository: Misc cleanups\n  - !3826 genums: use g_once_init_enter_pointer for GType initializers\n  - !3827 array-test: Don't assume sizeof(void*)==sizeof(gsize)\n  - !3831 gvariant-core: Don’t call posix_memalign() with size==0\n  - !3833 girepository: Change various alignments to use size_t\n  - !3835 build: Ignore branches in g_clear_*() functions under lcov\n  - !3837 tests: A couple of test isolation improvements\n  - !3839 gvarianttype: Fix typos\n  - !3840 girepository: Exclude private symbols from the ABI\n  - !3841 docs: Fix member names of GLib.LogLevelFlags\n  - !3842 gio, gmodule, gthread: compile windows resources only in shared build\n\n* Translation updates:\n  - Georgian (Ekaterine Papava)\n  - Russian (Artur S0)\n\n\nOverview of changes in GLib 2.79.0, 2023-12-22\n==============================================\n\n * Port to gi-docgen and drop gtk-doc support — dependencies have changed, and\n   Meson needs `-Ddocumentation` now rather than `-Dgtk_doc` (#3037, work by\n   multiple people)\n\n * Move libgirepository into glib.git from gobject-introspection.git — but tools\n   like `g-ir-scanner` are currently still in gobject-introspection.git. For the\n   moment, glib.git needs to be built twice, once with `-Dintrospection=false`,\n   then build gobject-introspection.git, then re-build glib.git with\n   `-Dintrospection=true`. This process will evolve throughout the GLib 2.80\n   cycle. The API and ABI of libgirepository has changed, and accordingly its\n   version number has been bumped from 1.0 to 2.0 (note: the version number of\n   `GIRepository-*.gir` has been bumped from 2.0 to 3.0; see !3786). The GIR and\n   typelib file formats have not been changed, and are still at version 1.0.\n   (#3155, work by multiple people)\n\n * Match behaviour for `GAppInfo` searches has changed (#3082, work by Nelson\n   Benítez León)\n\n * Rename `GTK_USE_PORTAL` environment variable to `GIO_USE_PORTALS` (#3107,\n   work by Philip Withnall)\n\n * Bump Meson dependency to 1.2.0 and depend on Python `packaging` module\n   (!3666, !3752)\n\nBugs fixed:\n  - #596 GApplication in Garbage Collected environments would benefit from a\n    g_application_command_line_exit() to enable remote instances to exit.\n    (Aleksandr Mezin)\n  - #791 Wish: Add a \"nodelay\" property to GSocket or GTcpConnection (Philip\n    Withnall)\n  - #2810 thread-pool-slow intermittent assertion failure in\n    test_thread_sort_entry_func() (Philip Withnall)\n  - #2824 G_REGEX_OPTIMIZE causes incorrect regex behaviour\n  - #2991 Drop translatable pspec nick/blurbs from properties in GIO (Sophie\n    Herold)\n  - #3082 Investigate prioritising prefix matches on GAppInfo keywords over\n    substring matches on names (Nelson Benítez León)\n  - #3087 glib doesn't cleanly unload on Windows (Luca Bacci)\n  - #3098 Make invalid escape sequences in GKeyFile fatal (Philip Withnall)\n  - #3103 mkenums: Can't parse an enum value with value ',' (Lukáš Tyrychtr)\n  - #3105 NetworkManager 1.44.0 crashes repeatedly with glib 2.78.0 (Philip\n    Withnall)\n  - #3107 Rename GTK_USE_PORTAL to avoid portal services being run with portals\n    force-enabled (Philip Withnall)\n  - #3111 gsubprocess-testprog.c: build error with cygwin (sys/ptrace.h: No such\n    file or directory) (Philip Withnall)\n  - #3112 Update to Unicode 15.1 (Philip Withnall)\n  - #3115 Support for additional strftime formatting capabilities\n  - #3116 gio clears modification time in microseconds when setting with\n    `set_modification_date_time` (Lukáš Tyrychtr)\n  - #3119 Add support for `%Ey` to g_date_time_format() (Philip Withnall)\n  - #3120 Build of glib 2.78.0 ignores -Dlibelf=disabled (Philip Withnall)\n  - #3128 glib-2.78.0 fails at gio/tests/gsubprocess.p/gsubprocess.c.o\n  - #3130 Segfault when creating GIO GPropertyAction without properties\n  - #3134 glib incompatible with Python 3.12 due to distutils usage\n  - #3135 Add GNU/Hurd CI\n  - #3140 Add a flag to not copy modification time when copying files (Khalid\n    Abu Shawarib)\n  - #3144 `g_file_set_contents_full()` doesn't truncate the file (without\n    `G_FILE_SET_CONTENTS_CONSISTENT`) (Philip Withnall)\n  - #3156 check for #ifdef PTRACE_O_EXITKILL will always fail since it isn't a\n    macro (Alessandro Bono)\n  - #3157 gsubprocess build-time test intermittently timing out since 2.78.1\n    (Simon McVittie)\n  - #3158 \"CRITICAL\" log when using --attributes option for \"gio info\" (Philip\n    Withnall)\n  - #3159 glib regex test fails JIT compiler tests under musl libc (Pablo Correa\n    Gómez)\n  - #3161 codegen installation is broken\n  - #3168 gvfs-udisks2-volume-monitor SIGSEGV in g_content_type_guess_for_tree()\n    due to filename with bad encoding (Ondrej Holy)\n  - #3183 g_dbus_connection_signal_subscribe with flag\n    G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH doesn't work with an arg0 that is an\n    object path (Philip Withnall)\n  - #3185 g_utf8_collate_key() segfaults when passed an invalid length\n  - #3186 [RFE] Increase gio sniff buffer for mime type magic detection to 16K\n    or so (Philip Withnall)\n  - #3187 g_vasprintf crashes when passed invalid UTF-8 (Philip Withnall)\n  - #3191 Crash in __gio_xdg_cache_mime_type_subclass (Philip Withnall)\n  - #3203 Fdo notification fails without AppID (Michael Catanzaro)\n  - !3143 gatomic: Use g(u)intptr where appropriate\n  - !3316 gobject: Separate GWeakRef from GWeakNotify\n  - !3394 gsocketclient: Document delays/timeouts better\n  - !3457 glib-unix: Add convenience API for pipes\n  - !3524 add muslc ci\n  - !3552 gutils: Use international symbol for bits\n  - !3566 Update annotations for GAsyncQueue and GDir\n  - !3567 Update annotations for GHmac\n  - !3568 Update GOptionContext annotations\n  - !3569 Small fixes and cleanups for Vectored Exception Handlers\n  - !3571 Update GStringChunk annotations\n  - !3572 Update GRand annotations\n  - !3573 Update GTimer annotations\n  - !3576 guniprop.c: Avoid creating (temporarily) out-of-bounds pointers\n  - !3577 gthread: introduce g_once_init_{enter,leave}_pointer\n  - !3578 GType: Use guintptr as the underlying storage if larger than gsize\n  - !3579 Fixes for integer cast warnings when targeting CHERI\n  - !3580 Fix test_find_program on FreeBSD\n  - !3581 gthread: Fix optional/nullable annotations for g_once_init_*()\n  - !3582 Buffer needs to be aligned correctly to receive linux_dirent64.\n  - !3589 gconstructor.h: Ensure [c|d]tor prototypes are present for MSVC\n    (Chun-wei Fan)\n  - !3590 gtestutils.h: Fix warning with -Wsign-conversion caused by\n    g_assert_cmpint\n  - !3591 Switch to using gi-docgen for docs (batch 1)\n  - !3594 Fix gutils-user-database test on macOS\n  - !3595 gobject: cache flags needed for g_type_create_instance()\n  - !3596 Add value annotation to G_TYPE_FUNDAMENTAL_MAX\n  - !3597 Expand security policy to cover previous stable branch\n  - !3598 Document NULL pointer pitfall in toolchain requirements\n  - !3601 meson: Fix Windows build with PCRE2 as sibling subproject\n  - !3603 Add GBytes variants for GSocket receive methods\n  - !3605 build: Post-release version bump\n  - !3607 Make sure the `GTask` is freed on a graceful disconnect\n  - !3610 gdesktopappinfo: Do not search Comment field\n  - !3611 tests/constructor: Fix \"unknown pragma ignored\" warning on clang\n  - !3612 Update GStrv annotations\n  - !3613 tests: Fix gdatetime test on non-UTC systems\n  - !3620 gmain: avoid a GList traversal when removing source\n  - !3621 wakeup: do single read when using eventfd()\n  - !3623 Windows: Compile with the UNICODE / _UNICODE macros\n  - !3624 wakeup: Fix g_wakeup_acknowledge if signal comes in\n  - !3627 Add Hurd code owners\n  - !3628 glib-unix: Use full path to gstdio.h include\n  - !3629 glib/tests/meson.build: remove identical build targets\n  - !3630 glib-compile-resources: ensure alignment is at least sizeof(void *)\n  - !3632 Stop using enums in bitfields\n  - !3633 Use g_task_return in task threads\n  - !3634 Switch to using gi-docgen for docs (batch 2)\n  - !3635 Fix warnings with Clang on Windows and enable --Werror in CI\n  - !3636 Generate introspection data\n  - !3637 gstrvbuilder: Add g_strv_builder_take\n  - !3638 Cleanup and add content to glib debugging using gdb scripts\n  - !3640 GIO/tests: skip test_resources_binary on MIPS platforms\n  - !3641 build: Simplify MIPS test check\n  - !3645 Switch to using gi-docgen for docs (batch 3)\n  - !3646 ci: Update from clang-format-11 to clang-format-14\n  - !3647 Switch to using gi-docgen for docs (batch 4)\n  - !3652 GApplicationCommandLine: add print[err]_literal()\n  - !3654 gdatetime: Fix minor leaks from strup/strdown calls\n  - !3655 gdatetime: Fix incorrect alt-digits being used after changing locale\n  - !3656 gmodule-dl: Use RTLD_DEFAULT on FreeBSD too\n  - !3660 Switch to using gi-docgen for docs (batch 5)\n  - !3661 Switch to using gi-docgen for docs (batch 6)\n  - !3662 Switch to using gi-docgen for docs (batch 7)\n  - !3663 gdbusconnection: don't cache G_IO_ERROR_CANCELLED errors\n  - !3664 gmain: optimize \"context->sources\" hash table to use as set\n  - !3665 ci: Remove .build-linux from Hurd CI scheduled job\n  - !3666 build: Bump Meson dependency to 1.2.0\n  - !3667 Switch to using gi-docgen for docs (batch 8)\n  - !3668 Socket & readiness fixes\n  - !3671 gio/tests: Add test generated txt as the resources test dependency\n  - !3672 glib-private: Check for LSAN support at runtime when controlling it\n  - !3674 gtask: Add g_task_return_prefixed_error()\n  - !3677 Make GQuark register intentional leaks\n  - !3678 gsignalgroup: Avoid function call with side effect in g_return_* macro\n  - !3679 gmessages: fix dropping irrelevant log domains\n  - !3682 tests: Fix dependency of test.gresource on test-generated.txt\n  - !3683 glib: Disable dynamic asan loading on macOS\n  - !3687 fix: about libproc.h and PROC_PIDLISTFD_SIZE\n  - !3688 build: Fix the inclusion paths for GIR files in gi-docgen\n  - !3689 meson: Add missing dependencies for utility files for gdbus-codegen\n  - !3690 Switch to using gi-docgen for docs (batch 9)\n  - !3695 gvalue: add \"steal_string\"\n  - !3699 [th/prgname] use atomic pointers for g_prgname/g_application_name and\n    add g_set_prgname_once()\n  - !3701 tests: Fix gio-tool.py test on macOS\n  - !3702 glib.supp: Suppress the global_mime_dirs allocations\n  - !3703 Port GIRepository to GTypeInstance and add introspection\n  - !3704 girepository: Rename symbols to the GI namespace\n  - !3707 girepository: Ignore set-but-not-used warnings with G_DISABLE_ASSERT\n  - !3708 Fix various leaks in cmph-bdz-test and gutils\n  - !3709 Switch to using gi-docgen for docs (batch 10)\n  - !3710 gmessages: introduce g_log_writer_default_set_debug_domains()\n  - !3711 ghmac: Add a boxed type for GHmac and fix introspection build\n    accordingly\n  - !3712 Switch to using gi-docgen for docs (batch 11)\n  - !3713 gfileutils: Fix g_file_get_contents() silent under-read of large files\n    when off_t is wider than size_t\n  - !3714 xdgmime: Handle buggy type definitions with circular inheritance\n  - !3715 goption: Fix a typo\n  - !3716 tests: Improve build of cmph tests in girepository\n  - !3717 tests: provide reason for disabling convert test under musl\n  - !3721 gtestutils: Add g_test_trap_subprocess_with_envp() for testing envs\n  - !3722 gdir, gstrvbuilder: Add refcounting support and a boxed type\n  - !3723 gwin32: Un-hide symbols when building GIR\n  - !3726 tests: Fix fileutils build on FreeBSD and macOS\n  - !3731 tests: Fix string test failure on BSDs\n  - !3732 gspawn: Stop spewing debug messages\n  - !3733 ci: Make the Alpine CI name more consistent\n  - !3734 gdatetime: Disable ERA support on platforms which don’t support this\n  - !3735 ci: Fix printing info message at end of run-style-check-diff.sh\n  - !3736 build: Rename -Dgtk_doc option to -Ddocumentation and fix some\n    g-ir-scanner warnings\n  - !3739 Documentation only: Added clarification about GWeakNotify and removed\n    ambiguous text\n  - !3741 hash: Explicitly annotate key in iter_next as nullable\n  - !3743 ci: Install correct version of Meson on Alpine CI image\n  - !3745 tests: Assert there no errors first in gdbus-test-codegen\n  - !3751 Fix generated RST anchors for methods, signals and properties\n  - !3752 build: Make packaging module required\n  - !3753 gobject_gdb.py: Do not break bt on optimized build\n  - !3755 tests: Use textwrap.dedent to indent expected strings pleasingly\n  - !3757 ci: Re-add explicit Meson version to Alpine CI image\n  - !3758 docs: Add a section on version checking macros\n  - !3760 girepository: Various API cleanups\n  - !3761 gerror: Fix an old allow-none annotation\n  - !3762 [th/notify-queue] some optimization around\n    g_object_freeze_notify()/g_object_thaw_notify()\n  - !3763 girepository: Drop libgio dependency from gdump.c\n  - !3764 gsignal: fix reference to signals documentation page\n  - !3765 gapplication: Fix minor typo in docs\n  - !3767 girepository: Port documentation to gi-docgen and update\n  - !3768 ci: Build docs artifacts for deployment to docs.gtk.org\n  - !3770 GDateTime: Add usec precision API for unix time\n  - !3771 gtask: Add g_task_return_new_error_literal()\n  - !3772 gobject: Make GLib-2.0 gir build depend on GObject dependency\n  - !3773 girepository: Return enumerated versions and search paths as a GStrv\n  - !3776 glocalvfs: Remove unnecessary and buggy code\n  - !3777 Fix detecting size_t size when `-Wmissing-prototypes` is in CFLAGS\n  - !3779 gtypemodule: Add assertions in finalize()\n  - !3782 docs: fix a typo\n  - !3786 girepository: Re-number GIR file from 2.0 to 3.0\n  - !3787 docs: Install the gi-docgen docs\n\n* Translation updates:\n  - Catalan (Jordi Mas i Hernandez)\n  - Chinese (China) (Boyuan Yang)\n  - Czech (Daniel Rusek)\n  - Esperanto (Kristjan SCHMIDT)\n  - French (Alexandre Franke)\n  - Italian (Milo Casagrande)\n  - Latvian (Rūdolfs Mazurs)\n  - Portuguese (Brazil) (Rafael Fontenelle)\n  - Romanian (Florentina Mușat)\n  - Russian (Artur S0)\n  - Slovenian (Matej Urbančič)\n  - Spanish (Daniel Mustieles)\n  - Turkish (Sabri Ünal)\n  - Ukrainian (Yuri Chornoivan)\n\n\nOverview of changes in GLib 2.78.0, 2023-09-08\n==============================================\n\n* Bugs fixed:\n  - #3095 Error handling of invalid GKeyFile string escape sequences changed in\n    GLib 2.77.3 (Philip Withnall)\n  - !3559 gdb: Workaround optimized out quark_seq_id\n  - !3561 meson: fix `gnetworking.h` install tag\n  - !3562 gthread: Annotate g_thread_exit() with G_NORETURN\n  - !3564 Fix gutils-user-database unit test\n\n* Translation updates:\n  - Basque (Asier Sarasua Garmendia)\n  - Czech (Vojtěch Perník)\n  - Danish (Alan Mortensen)\n  - English (United Kingdom) (Bruce Cowan)\n  - Galician (Fran Dieguez)\n  - Georgian (Ekaterine Papava)\n  - German (Philipp Kiemle, Jürgen Benvenuti)\n  - Hebrew (Yosef Or Boczko)\n  - Hungarian (Balázs Úr)\n  - Indonesian (Andika Triwidada)\n  - Korean (Changwoo Ryu)\n  - Lithuanian (Aurimas Černius)\n  - Persian (Danial Behzadi)\n  - Polish (Piotr Drąg)\n  - Swedish (Anders Jonsson)\n  - Turkish (Emin Tufan Çetin)\n  - Ukrainian (Yuri Chornoivan)\n\n\nOverview of changes in GLib 2.77.3, 2023-08-31\n==============================================\n\n* Bugs fixed:\n  - #2575 GSettings schemas default value translations don't work when using\n    l10n=time (Michael Catanzaro)\n  - #3032 gdbus-codegen eats indentation in RST in XML comments (André)\n  - #3051 g_dbus_connection_export_menu_model() is not thread_safe\n  - #3061 Possible SEGV (null pointer deref) in distribute_method_call() (Philip\n    Withnall)\n  - #3083 `arg_data`  in GOptionEntry is not a list (Philip Withnall)\n  - #3090 Possible SEGV (null pointer deref) in _g_resource_file_new() (Philip\n    Withnall)\n  - !3459 glib-unix: Clean up use of O_NONBLOCK\n  - !3503 interim solution for macOS CI\n  - !3519 meson: warn if -mms-bitfields is necessary\n  - !3526 gnetworkaddress: use reentrant getservbyname_r() if available\n  - !3527 tests: Use g_assert_*() rather than g_assert() in tree tests\n  - !3528 gio-tool-info: Move translator comments so they’re visible\n  - !3530 gregex: set default max stack size for PCRE2 JIT compiler to 512KiB\n  - !3532 tests: Disable use of ptrace() in tests on BSD and macOS\n  - !3533 ci: Only run pages CI job on scheduled job runs\n  - !3534 ci: Further fix to pages CI job\n  - !3535 Use 'meson setup' to configure\n  - !3538 glib-unix: Accept O_CLOEXEC as well as FD_CLOEXEC in\n    g_unix_open_pipe()\n  - !3540 gio: Add gresource.dtd\n  - !3541 gtestutils: Mention not ignoring SIGCHLD in g_test_trap_subprocess()\n    docs\n  - !3542 [th/gchildwatch-fail-message] gmain: improve g_warning() for failure\n    in g_child_watch_dispatch()\n  - !3543 [th/use-localtime-r] use localtime_r() in g_log_writer_format_fields()\n  - !3545 gregex: if JIT stack limit is reached, fall back to interpretive\n    matching\n  - !3547 glib/gfileutils.c: use 64 bits for value in get_tmp_file()\n  - !3550 glib/tests/asyncqueue.c: skip test_async_queue_timed in 2038 or later\n  - !3553 Generate missing docs for out arguments\n  - !3555 gkeyfile: Fix overwriting of GError\n\n* Translation updates:\n  - Basque (Asier Sarasua Garmendia)\n  - Kazakh (Baurzhan Muftakhidinov)\n  - Panjabi (Amn Alam)\n  - Persian (Danial Behzadi)\n  - Swedish (Anders Jonsson)\n\n\nOverview of changes in GLib 2.77.2, 2023-08-12\n==============================================\n\n* Bugs fixed:\n  - #3071 g_test_trap_subprocess and g_test_subprocess broken in 2.77.1 (Jonas\n    Ådahl)\n  - !3432 ci: Don’t run pipeline after merging a MR\n  - !3520 Fix typos\n  - !3521 GTree: Handle node counter overflow and return it as an unsigned value\n  - !3523 gspawn, gdataset: Restore nullable callback functions\n\n* Translation updates:\n  - Chinese (China) (Luming Zh)\n  - Galician (Fran Dieguez)\n  - Indonesian (Kukuh Syafaat)\n  - Polish (Piotr Drąg)\n  - Portuguese (Hugo Carvalho)\n  - Russian (Artur So)\n  - Spanish (Daniel Mustieles)\n  - Turkish (Sabri Ünal)\n\n\nOverview of changes in GLib 2.77.1, 2023-07-30\n==============================================\n\n* Fix some regressions with `GKeyFile` comment handling (#3047, work by Gaël Bonithon)\n\n* Improve handling of query and fragment components in `file:` URIs (#3050, work by Lukáš Tyrychtr)\n\n* Bugs fixed:\n  - #473 systemtap probes for gvariant (Allison Karlitskaya)\n  - #623 g_type_query() doesn't work for dynamic types (Philip Withnall)\n  - #931 Optimise GPrivate by removing one malloc (Allison Karlitskaya)\n  - #2929 gio: Failing build due to race generating glib/gversionmacros.h (Eric\n    van Gyzen)\n  - #3045 2.77.0: gio pkg-config test has incorrect install location for gio-\n    querymodules & glib-compile-schemas (Philip Withnall)\n  - #3047 2.77.0 changes formatting of keyfiles (Gaël Bonithon)\n  - #3048 Forcing fallback for libintl does not work (Brendan Shanks)\n  - #3050 g_file_new_for_uri() handles query strings incorrectly (\"?\") (Lukáš\n    Tyrychtr)\n  - #3054 Fedora installer (anaconda) crashes early with glib 2.77.0 due to\n    \"Attempt to unlock mutex that was not locked\", when it runs `hwclock` and\n    changes the system time (Thomas Haller, Philip Withnall)\n  - !3287 Audit and fix incorrect use of (closure) in glib\n  - !3461 gfileinfo: add file_path methods for language bindings\n  - !3485 docs: Expand supported platforms documentation a little\n  - !3494 ci: Manually fetch submodules for style-check CI jobs\n  - !3495 gdbus-codegen: Error on invalid dbus types\n  - !3496 garray: Fix typo in doc comment of g_ptr_array_sort[_with_data]()\n  - !3499 strfuncs: Add missing ownership annotations for returned string\n    vectors\n  - !3504 Revert \"build/gmodule-2.0.pc: Move compiler flags from Libs to Cflags\"\n  - !3505 meson: help gobject-introspection locate source and build dirs\n  - !3509 build-sys: drop -mms-bitfields GCC flag\n  - !3510 testutils: Use prctl PR_SET_DUMPABLE to silence core dumps on Linux\n  - !3514 Revert \"build-sys: drop -mms-bitfields GCC flag\"\n  - !3515 gnetworkmonitor: Expand guidelines for metered data use\n  - !3517 tests: Add some more tests for g_type_query()\n  - !3518 m4macros: drop unused m4 files\n\n* Translation updates:\n  - Georgian (Ekaterine Papava)\n  - Hebrew (Yosef Or Boczko)\n  - Hungarian (Balázs Úr)\n  - Persian (Danial Behzadi)\n  - Slovenian (Matej Urbančič)\n  - Ukrainian (Yuri Chornoivan)\n\n\nOverview of changes in GLib 2.77.0, 2023-07-06\n==============================================\n\n* Fix `GSocketClient` connecting to a proxy if the port is not specified\n  (#2832, work by Michael Catanzaro)\n\n* Support using `copy_file_range()` in `g_file_copy()`, if available (#2863,\n  work by Philip Withnall)\n\n* Improve handling of comments above groups in key files (#2927,\n  work by Gaël Bonithon)\n\n* Re-upgrade missing attribute debugs to criticals in `GFileInfo` (#2951,\n  work by Philip Withnall)\n\n* Do not redefine NULL on C++ (#2973, work by Marco Trevisan)\n\n* Make `g_signal_handlers_block_matched()` work for `G_SIGNAL_MATCH_ID`\n  (#2980, work by Przemyslaw Gorszkowski)\n\n* Fixes to support building with bionic libc better (#3008, work by Øyvind Kolås)\n\n* Fix potential stack overflow in gspawn on macOS if open file limit is very\n  high (#3024, work by Dario Saccavino)\n\n* Fix support for `--force-fallback-for libpcre` in meson configuration (#3025,\n  work by Marius Kintel)\n\n* Generate specific marshallers in `gdbus-codegen` (#3028, work by Marco Trevisan)\n\n* Fix build failure on Android with `statx()` support (#3039, work by Philip Withnall)\n\n* Improve locking performance of `GSignal` (!2824, work by Marco Trevisan)\n\n* Improve locking performance of `g_main_context_iterate()` (!3235, work by\n  Marco Trevisan)\n\n* Add an inline definition of `g_free()` to automatically use `g_free_sized()`\n  if available (!3252, work by Marco Trevisan)\n\n* Fix race with `waitpid()` and `GChildWatchSource` (!3353, work by Thomas Haller)\n\n* Add `glib_valgrind_suppressions` variable to glib pkg-config file (!3361, work\n  by Marco Trevisan)\n\n* Fix build on macOS SDK 10.11 (!3385, work by Peter Williams)\n\n* Switch to using a separate thread pool and support timeouts in\n  `GThreadedResolver` (!3397, work by Philip Withnall)\n\n* Track pending `GTask`s if `G_ENABLE_DEBUG` is defined (!3404, work by Philip Withnall)\n\n* Support GSignal fast path and more marshallers in `gobject_gdb.py` (!3437,\n  work by Nelson Ben)\n\n* Disable the macOS CI because it’s too unreliable — if you rely on GLib working\n  on macOS, please get in touch and do something to help! (!3463, decision taken\n  by Philip Withnall)\n\n* Bugs fixed:\n  - #65 glib-mkenums: parse_trigraph() chokes on quoted commas (Emmanuel Fleury)\n  - #95 GMarkupParser documentation completion (David King)\n  - #98 g_get_current_dir SIGSEGV on long path (Philip Withnall)\n  - #104 Invocation of the interface \"g_key_file_remove_comment\" does not remove\n    comment in specific case (Gaël Bonithon)\n  - #116 Document UTF-8 behaviour and requirements throughout GLib (Philip\n    Withnall)\n  - #252 Disagreement between runtime and docs on whether interfaces are\n    \"classed\" (Philip Withnall)\n  - #322 gdbus-example-proxy-subclass.c is not complete. (Colin Walters)\n  - #799 GAppInfoMonitor documentation deficiencies (Philip Withnall)\n  - #1264 Use-after-free under\n    send_message_with_reply_cleanup():gdbusconnection.c:1792 (Philip Withnall)\n  - #2289 Document clearly that libgio is not guaranteed to be safe to use in\n    setuid processes (Philip Withnall)\n  - #2307 mainloop test leaks a GMainLoop object (Philip Withnall)\n  - #2829 \"glib-compile-resources --dependency-file=DEPFILE\" creates wrong set\n    of dependencies (Michael Catanzaro)\n  - #2832 GSocketClient cannot proxy connect unless default port is explicitly\n    specified in proxy URL (Michael Catanzaro)\n  - #2855 gio/tests/socket-client.c name is too confusing because it does not\n    use GSocketClient (Mike Salmela)\n  - #2861 Check for __kernel_long_t when enabling futex()\n  - #2863 Use copy_file_range() whenever possible in g_file_copy (Philip\n    Withnall)\n  - #2864 Documentation mentions non-existing function `g_value_free` (Philip\n    Withnall)\n  - #2879 Job #2498619 failed: gio/tests/socket.c:1654:test_reuse_tcp: assertion\n    failed (error == (g-io-error-quark, 33)): error is NULL (Philip Withnall)\n  - #2927 GKeyFile: Inconsistent behavior of comment writing above a group (Gaël\n    Bonithon)\n  - #2939 mkenums.py test fails on FreeBSD (Philip Withnall)\n  - #2951 Re-upgrade missing attribute debugs to criticals in GFileInfo (Philip\n    Withnall)\n  - #2952 Not clear that GPollableInputStream methods are undefined if\n    can_poll() returns FALSE (Philip Withnall)\n  - #2953 Missing docs for GOption (commandline parser) (Sam Thursfield)\n  - #2958 nbd server fails with glib 2.76.0\n  - #2960 GDebugControllerDBus wrong default in documentation (Philip Withnall)\n  - #2963 Probably wrong information regarding G_PLATFORM_WIN32 in\n    README.win32.md\n  - #2965 test_measure fails with coreutils 9.2 (Joan Bruguera)\n  - #2966 Multiple Definition Error When Generating gio/tests/test5.gresource\n    (Dan Yeaw)\n  - #2969 user docs: GLib.DateTime.format: broken highlighting (Philip Withnall)\n  - #2972 GtkFileLauncher: generated paths not recognized on Win32 (Luca Bacci)\n  - #2973 Build failed due to NULL pointer redefinition in C++ (Marco Trevisan\n    (Treviño))\n  - #2980 g_signal_handlers_block_matched does not work for G_SIGNAL_MATCH_ID\n    (Przemyslaw Gorszkowski)\n  - #2982 Build randomly fails with: 'gmodule/gmodule-visibility.h' file not\n    found (Marco Trevisan (Treviño))\n  - #2993 g_dbus_interface_skeleton_get_vtable misses transfer annotation and is\n    not introspectable\n  - #2997 g_assert_cmpuint() should display positive, not negative values (Eric\n    Blake)\n  - #3003 glib-compile-schemas failed on directory name with no Latin symbols\n    (Daniyar Tleulin)\n  - #3007 GOptionContext group headings missing colon at the end (Philip\n    Withnall)\n  - #3008 Adaptations for building with bionic libc under termux (Øyvind Kolås)\n  - #3020 Races in gio/tests/portal-support-snap* tests\n  - #3024 Possible stack overflow in gspawn on MacOS\n  - #3025 libpcre and libintl cannot be chosen to use the builtins\n  - #3027 action exporter fails in the presence of actions with maybe parameter\n    types (Matthias Clasen)\n  - #3028 gdbus-codegen should generate marshallers (Marco Trevisan (Treviño))\n  - #3030 Document GListModel requiring unique instance pointers from\n    GListModelInterface.get_item (Christian Hergert)\n  - #3034 futex based g_mutex_lock sometimes splatters errno with EAGAIN on\n    contended locks\n  - #3039 Build failure due to statx fields with NDK r25.c (Philip Withnall)\n  - #3040 gtester in custom_target() run against system rather than built\n    libglib during build\n  - !2824 gsignal: Reduce lock/unlock pairs and ensure we always work on valid\n    signal nodes\n  - !3146 Make GVariant/GHash opaque types compatible with CHERI\n  - !3235 gmain: Avoid some lock/unlock dance during g_main_context_iterate\n  - !3252 gmem: Add an inline definition of g_free() to automatically use\n    g_free_sized()\n  - !3289 Work around an UCRT issue with _wspawn() functions taking an envp\n    block\n  - !3306 gregistrysettingsbackend: Allow a different root key path\n  - !3308 doc: Workaround missing API index\n  - !3314 gmain: More explicitly document g_main_context_release() prereqs\n  - !3326 unicode: add tests for g_utf8_normalize() and empty strings\n  - !3333 build: Drop old .gitignore files from test directories\n  - !3335 meson: allow -Dlibelf=enabled without pkg-config\n  - !3337 gio-tool-info: Fix a duplicate attribute name in the UI\n  - !3340 meson: Move msvc_recommended_pragmas.h to a subdirectory\n  - !3341 g_utf8_normalize: don't read past the end of the buffer\n  - !3342 Add fuzzing harness for g_utf8_normalize()\n  - !3344 tools: Drop check-abis.sh script\n  - !3345 docs: Drop section about default branch renaming from README.md\n  - !3347 gsocket/inotify/gwakeup: Use SOCK_NONBLOCK and O_NONBLOCK to avoid\n    fcntl() syscalls where possible\n  - !3351 tests: Update Unicode normalisation tests from Unicode 15\n  - !3352 meson: Fix detection of a system-provided proxy-libintl\n  - !3353 [th/child-watch-waitpid] fix race with waitpid() and child watcher\n    sources\n  - !3356 build/gmodule-2.0.pc: Move compiler flags from Libs to Cflags\n  - !3357 Make clang++ happier when using G_STATIC_ASSERT\n  - !3361 meson: Add glib_valgrind_suppressions variable to glib pkg-config file\n  - !3365 gwin32: Avoid use of function call with side effect in g_return_*\n    macro\n  - !3366 Add init macros for refcounting types\n  - !3367 actiongroup: Add a compiler warning\n  - !3371 Explicitly mark size parameter as (in)\n  - !3377 gsignal: Clarify documentation for GSignalMatchType matching\n  - !3378 build: Post-release version bump\n  - !3381 gtimer: Avoid doing anything on g_usleep (0)\n  - !3382 gsocket: Explicitly mark size parameter as (in)\n  - !3383 add g_timeout_add_seconds_once\n  - !3384 Test g_signal_handlers_disconnect_matched for G_SIGNAL_MATCH_ID match\n  - !3385 gio: fix build on older macOS SDKs\n  - !3388 appmonitor: Skip the test under OSX\n  - !3389 glib/tests/[rec-]mutex: Allow each thread to work\n  - !3390 Fix error format in gio/gunixconnection.c (part 2)\n  - !3392 gvariant: Fix doc for g_variant_new_object_path\n  - !3393 Fix small issues in docs\n  - !3395 gtask: Document that g_task_run_in_thread() uses a shared resource\n  - !3396 glib-unix: Improve documentation for g_unix_fd_source_new()\n  - !3397 gthreadedresolver: Switch to using a separate thread pool and support\n    timeouts\n  - !3398 Avoid having g_futex_simple() inadvertently modify errno\n  - !3399 meson: wrap html documentation generation with gtk_doc option\n  - !3400 restore error messages in gunixconnection while maintaining older\n    compiler support\n  - !3401 ci: Disable the Coverity CI job\n  - !3404 gtask: Track pending GTasks if G_ENABLE_DEBUG is defined\n  - !3405 gthreadedresolver: Remove some incorrect assertions\n  - !3406 gthreadpool: Clarify that item_free_func is not normally called\n  - !3407 gregistrysettingsbackend: Remove translatable pspec nick/blurb\n  - !3408 docs: Update/Drop txt documents from docs directory\n  - !3409 docs: Don’t ignore gunixfdlist.h when building docs on Windows\n  - !3410 tests: Add descriptions to environment tests\n  - !3416 gtestutils: Fix section marker in documentation\n  - !3418 docs: Add lb90 as a Windows maintainer\n  - !3419 docs: Update various broken/redirected links and fix list formatting\n  - !3420 gtestutils: print timing information per test case in TAP output\n  - !3421 glib/tests/fileutils:fix asserts when running as root\n  - !3422 Check for linux/netlink.h buildability\n  - !3423 gstring: add g_string_new_take\n  - !3425 gwin32networkmonitor: Fix returning address of local variable\n  - !3426 gdataset, gobject: Use atomic compare and exchange full to set\n    pointers\n  - !3429 Rename GTK+ to GTK (mostly comments and documentation)\n  - !3430 gobject_gdb.py: fix regression caused by bfbe7127d5\n  - !3431 gfile: Ensure loff_t is defined on FreeBSD\n  - !3435 Ignore g_task_print_alive_task() when introspecting GIO\n  - !3437 gobject_gdb.py: support gsignal fastpath and detect more marshallers\n  - !3438 gio: Check cancellable iterating local file enumerator\n  - !3439 gstring: Add `Since` marker to `g_string_new_take()`\n  - !3440 gutf8: Add a g_utf8_truncate_middle() function\n  - !3441 Allow proper introspection of GTypeValueTable\n  - !3442 gio: Add g_file_new_build_filenamev\n  - !3448 meson: try iconv in libintl lookup\n  - !3449 docs: Move README.win32.md to the docs folder and update\n    CONTRIBUTING.md\n  - !3450 gactionmap: Add g_action_map_remove_action_entries()\n  - !3453 docs: Use the type name as the section name for GKeyFile\n  - !3455 gfileinfo: add (type filename) annotation to symlink_target functions\n  - !3456 gmain: Document that g_steal_fd() preserves errno\n  - !3458 gstdio: Improve documentation of some functions as async-signal safe\n  - !3462 tests: Reduce thread and iteration count on CI for /thread/rec-mutex3\n  - !3463 ci: Disable the macOS CI\n  - !3465 gobject_gdb.py: adapt to recent gsignal changes\n  - !3466 resolver: Add space in documentations\n  - !3470 pcre subproject fixes: Allow fallback & static build\n  - !3471 gio-tool-mount: Add option to show progress when unmounting\n  - !3472 tests: Fix an intermittent timing error with testing g_usleep(0)\n  - !3477 gdbus-codegen: Fix some minor typos in the documentation\n  - !3484 docs: Fix a typo in the backports policy\n  - !3486 docs: Document issue and merge request triaging and review guidelines\n  - !3488 codegen: Use g_signal_emit to emit signals\n  - !3489 guniprop: fix param direction in g_unichar_get_mirror_char(), for\n    introspection\n  - !3490 gobject/tests: Fix running on 32-bit Windows\n\n* Translation updates:\n  - Bulgarian (Alexander Shopov)\n  - Chinese (China) (Boyuan Yang)\n  - English (United Kingdom) (Bruce Cowan)\n  - Galician (Fran Dieguez)\n  - Portuguese (Brazil) (Leônidas Araújo)\n  - Slovak (Dušan Kazik)\n  - Swedish (Anders Jonsson)\n  - Turkish (Sabri Ünal)\n\n\nOverview of changes in GLib 2.76.1, 2023-03-22\n==============================================\n\n* Fix build failures in third party C++ projects using `g_strdup()` via C++\n  qualified symbol lookup (#2936, work by Xi Ruoyao)\n\n* Downgrade critical warnings from `GFileInfo` about missing attributes to debug\n  messages, as it was affecting too many apps; the critical warnings will be\n  reinstated early in the 2.78 cycle, so apps should continue to fix their\n  ambiguous use of `GFileInfo` API (#2948, work by Philip Withnall)\n\n* Bugs fixed:\n  - #159 g_strstr_len() ignores haystack_len (Philip Withnall)\n  - #352 Docs for g_file_enumerator_next_files_async () are unclear about end\n    condition (Owen Taylor)\n  - #919 g_variant_dict_lookup is unclear about what happens on failure (Philip\n    Withnall)\n  - #2922 GWin32AppInfo: Missing NULL string check (Luca Bacci)\n  - #2936 Possible regression in 2.75.3 when used from C++ due to g_strdup\n    becoming a macro\n  - #2943 Meson fails TAP test when g_test_message is called before g_test_init\n    (Philip Withnall)\n  - #2948 gio list triggers 'GFileInfo created without …' warnings for trash,\n    smb and google-drive GVFS backends (Philip Withnall)\n  - !3241 inotify: Avoid empty root directory string\n  - !3315 tests: Change the time function used in the bookmark tests\n  - !3318 gmacros: Add GCC < 5 fallback for __always_inline__\n  - !3319 fuzzing: do not build tests if build_tests is false\n  - !3321 tests: only build messages-low-memory if RTLD_NEXT is available\n  - !3323 tests: Fix timeout sources in gdbus-auth and gapplication tests\n  - !3324 tests: Reduce number of iterations in queue test\n  - !3325 gdesktopappinfo: Add a missing NULL check\n  - !3330 tests: Check a few results in strfuncs tests\n  - !3338 gfileinfo: Temporarily downgrade missing attribute criticals to debugs\n\n* Translation updates:\n  - French (Guillaume Bernard)\n  - Persian (Danial Behzadi)\n  - Turkish (Sabri Ünal)\n\n\nOverview of changes in GLib 2.76.0, 2023-03-10\n==============================================\n\n* Fix several regressions in handling `GFileInfo` attributes (#2932, #2934,\n  work by Ondrej Holy and Philip Withnall)\n\n* Bugs fixed:\n  - #2932 ETAG_VALUE not set in GFileInfo when requested (Philip Withnall)\n  - #2934 File attributes are not set when their value is FALSE/NULL (Philip\n    Withnall)\n  - !3309 gfile: Fix file size detection when copying on btrfs\n  - !3310 glocalfileinfo: Mark the lost+found dir as hidden again\n  - !3311 glocalfileinfo: Ensure that is-backup is always set\n\n* Translation updates:\n  - Bulgarian (Alexander Shopov)\n  - Catalan (Jordi Mas i Hernandez)\n  - Czech (Marek Černocký)\n  - German (Tim Sabsch)\n  - Korean (Changwoo Ryu)\n  - Polish (Piotr Drąg)\n  - Russian (Aleksandr Melman)\n  - Turkish (Sabri Ünal)\n\n\nOverview of changes in GLib 2.75.4, 2023-03-03\n==============================================\n\n* Emit a critical warning when acquiring the notification queue during GObject\n  finalization. A type's `finalize()` implementation should not call public\n  API that emits property notifications. (!3119, work by Marco Trevisan and Emmanuele Bassi)\n\n* Bugs fixed:\n  - #2720 Fails to create resource.o with LLVM ld\n  - #2905 [MSVC] gstring.h: warning C4141: 'inline': used more than once\n  - #2907 g_file_info_get_name returns NULL in contradiction to docs (Philip\n    Withnall)\n  - #2913 `glib:glib / error` fails with Glibc-2.37 (Philip Withnall)\n  - #2915 Python tests fail on Windows when an environment variable contains\n    non-ASCII characters (Luca Bacci)\n  - #2916 gdbus: Never buffer reads during server authentication\n  - #2918 2.75.3: array-test fails on big-endian CPUs (Simon McVittie)\n  - #2919 2.75.3: g_string_append_len_inline: error: implicit conversion changes\n    signedness\n  - #2924 Use-after-free of GDBusMethodInvocation in GDBusInterfaceSkeleton\n    (Philip Withnall)\n  - !3168 GWin32AppInfo: Retrieve display name for UWP / Packaged apps\n  - !3273 Revert \"Revert \"tests: Temporarily disable socket test due to a kernel\n    bug\"\"\n  - !3275 tests: Add a -Wsign-conversion test for gstring.h\n  - !3279 tests: Don’t run the GObject performance tests under valgrind\n  - !3280 ci: Use Meson 1.0.0 on Windows and macOS CI builds\n  - !3281 tests: Remove custom printerr logging from live-g-file\n  - !3282 spawn-test: Use an absolute path to the system sort.exe on Windows\n  - !3283 Make sure new file descriptors have close-on-exec flag set on them in\n    a race-free way\n  - !3284 Allow passing a `NULL` item to `g_list_store_find_with_equal_func()`\n  - !3288 spawn-test: Fix running on non-English Windows\n  - !3290 g_type_name: Fix return annotation\n  - !3292 Close-on-exec flag few missed places\n  - !3294 gio/tests/cxx.cpp: fix missing sentinel for musl\n  - !3295 tests: Add some missing g_thread_join() calls to onceinit test\n  - !3296 gdbusconnection: Explicitly destroy an idle source on cleanup\n  - !3299 Update the NEWS file\n  - !3301 GObject: Add nullable annotations\n  - !3304 tests: Skip assert-msg-test.py if gdb fails\n  - !3305 Fix a memory leak in g_strerror\n\n* Translation updates:\n  - Basque (Asier Sarasua Garmendia)\n  - Danish (Alan Mortensen)\n  - Galician (Fran Dieguez)\n  - Georgian (Ekaterine Papava)\n  - German (Tim Sabsch)\n  - Hebrew (Yaron Shahrabani)\n  - Hungarian (Balázs Úr)\n  - Indonesian (Kukuh Syafaat)\n  - Lithuanian (Aurimas Černius)\n  - Portuguese (Hugo Carvalho)\n  - Serbian (Марко Костић)\n  - Slovenian (Matej Urbančič)\n  - Spanish (Daniel)\n  - Swedish (Anders Jonsson)\n  - Turkish (Sabri Ünal, Emin Tufan Çetin)\n  - Ukrainian (Yuri Chornoivan)\n\n\nOverview of changes in GLib 2.75.3, 2023-02-13\n==============================================\n\n* Drop the implementation of GSlice, and make the API use the system `malloc()`\n  internally (#1079) (based on investigation work by multiple people)\n\n* Use a thread-spawning thread to keep thread scheduler settings consistent;\n  fixes GThreadPool critical warnings due to failing to set scheduler settings\n  in some situations (#2769, work by Sebastian Dröge and others)\n\n* GIR annotation improvements for multiple APIs (#2827, #2894, #2895, #2897,\n  !3198, !3234, !3236, !3238, !3245, !3266, work by multiple people)\n\n* Optimise printing of nested maybes in `g_variant_print()` (#2862, work by Philip Withnall)\n\n* Use `tap` test protocol within GLib, and support TAP 13/14 (!3140, work by Marco Trevisan)\n\n* Fix a regression in glib-compile-schemas 2.75.2 causing schemas and override\n  files to be sorted incorrectly (!3188, spotted by John Wudrick, work by Philip Withnall)\n\n* Support per-desktop overrides in `GSettingsAction` (!3193, work by Philip Withnall)\n\n* Various optimisations to `GString` (!3199, work by Matthias Clasen and Marco Trevisan)\n\n* Reduce allocations in message printing functions if there’s nothing to format (!3205, work by Marco Trevisan)\n\n* Add inline version of `g_strdup()`, allowing the compiler to do `NULL` folding\n  and constant folding on `strlen()` calls (!3209, work by Marco Trevisan)\n\n* Add a `GPathBuf` API for building and manipulating file paths (!3216, work by Emmanuele Bassi)\n\n* Add `g_string_free_and_steal()` and use it to warn on unused results from\n  `g_string_free (_, FALSE)` (!3219, !3226, work by Matthias Clasen and Sergey Bugaev)\n\n* Add `g_free_sized()` and `g_aligned_free_sized()` to mirror the upcoming\n  `free_sized()` function in C23; use these if porting away from `g_slice_free()`\n  (!3231, work by Philip Withnall)\n\n* Fix underspecified dependencies on generated headers in `meson.build`, which\n  should reduce spurious build failures (!3260, work by Eli Schwartz)\n\n* Bugs fixed:\n  - #1079 Investigate dropping or deprecating the GSlice allocator (Natanael\n    Copa)\n  - #2769 GThreadPool crashes with: Failed to set scheduler settings: Operation\n    not permitted (Sebastian Dröge)\n  - #2827 Callback parameters get wrong attributes in gir files\n  - #2862 fuzz_variant_text: Timeout in fuzz_variant_text when printing nested\n    maybes\n  - #2876 g_find_program_for_path is public ABI but not declared in a public\n    header (Philip Withnall)\n  - #2877 glib/tests/array-\n    test.c:1828:pointer_array_new_from_null_terminated_array_from_gstrv:\n    'g_ptr_array_index (gparray, 4)' should be NULL (Simon McVittie)\n  - #2881 Invalid read of size 4 in get_matched_substring_number (Philip\n    Withnall)\n  - #2883 g_file_set_contents fails on mingw64 with \"no error\" if file size >\n    INT_MAX (CCode)\n  - #2890 g_string_append() macro evaluates arguments multiple times (Marco\n    Trevisan (Treviño))\n  - #2891 Memory leak in \"gio/win32/gwin32fsmonitorutils.c\" (Philip Withnall)\n  - #2892 Memory leak in \"gio/gwin32mount.c\" (Philip Withnall)\n  - #2894 g_value_take_string: wrong ownership transfer info in GIR (Lukáš\n    Tyrychtr)\n  - #2895 g_io_channel_get_line_term: wrong GIR (Bart Jacobs)\n  - #2897 g_time_zone_adjust_time: GIR says gint64 but it's gint64* (Bart\n    Jacobs)\n  - #2898 g_print replaces non-ascii characters with question mark\n  - #2900 msys2-clang64: g_spawn_[a]sync() fails in clang builds when envp is\n    not NULL\n  - #2901 g_app_info_get_executable doesn't work well on latest Ubuntu with\n    Firefox installed as snap\n  - #2908 Crash when creating GtkTextView with G_DEBUG=gc-friendly (Marco\n    Trevisan (Treviño))\n  - #2914 Should GPathBuf split on both directions of slashes on Windows? (Simon\n    McVittie)\n  - GNOME/gimp#9094 devel: None of the extensions and plugins load in Clang\n    builds\n  - !3140 meson: Use 'tap' test protocol and support TAP 13/14\n  - !3184 build: Don't overwrite build variables\n  - !3185 Include gobject-visibility.h in glib-types.h\n  - !3187 tests/desktop-app-info: fix stack-use-after-scope\n  - !3188 glib-compile-schemas: Fix typo in comparison function\n  - !3189 docs: Fix return type in cmpint\n  - !3191 tests: Improve error message if setting max processes to 1 fails\n  - !3192 garray: Avoid calling memcpy with no items\n  - !3193 gsettings: Support per-desktop overrides in GSettingsAction\n  - !3196 gio/tests/file.c:Fix expectations when running as root\n  - !3198 Fix a couple of `closure` annotations\n  - !3199 Some GString optimizations\n  - !3203 GTask: Document issues\n  - !3205 gmessages: Avoid strings duplication if there's nothing to format\n  - !3206 tests: Add a test print to spawn-test on Windows\n  - !3207 tests: Fix a minor leak in the GString tests\n  - !3209 gstrfuncs: Add inline version of g_strdup()\n  - !3216 Add GPathBuf\n  - !3219 Add g_string_free_and_steal\n  - !3221 TAP: some further cleanups\n  - !3223 Add a few suppressions to glib.supp and fix a minor bug in\n    gapplication test\n  - !3224 gtestutils: Fix a potential NULL pointer dereference in g_test_log()\n  - !3225 tests: Temporarily disable socket test due to a kernel bug\n  - !3226 Make g_string_free (_, FALSE) warn on unused result\n  - !3231 gmem: Add g_free_sized() and g_aligned_free_sized()\n  - !3234 GMainContext: Use nullable context in docs (and in some missing code)\n  - !3236 g_regex_escape_string: bad GIR: utf8[] -> utf8\n  - !3238 Fix GIR: gunichar -> gunichar[]\n  - !3242 GAtomicArray: Ensure metadata does not misalign the payload\n  - !3243 Allow using msort_r CHERI-enabled architectures\n  - !3245 gio: converter: Forbid null out arguments\n  - !3246 tests: Fix a few minor leaks in gdbus-example-peer\n  - !3247 tests: Fix a minor leak in the cxx string append tests\n  - !3248 timezone: Fix a compiler warning\n  - !3249 gstring: Avoid warnings from inline functions\n  - !3250 ci: Temporarily only run the FreeBSD 13 CI on a schedule\n  - !3251 Revert \"gtype: Use the system allocator on UNIX\" and use g_free_sized\n    instead\n  - !3256 Remove n_preallocs field from InstanceData\n  - !3258 Revert \"ci: Temporarily only run the FreeBSD 13 CI on a schedule\"\n  - !3259 gmessages: use g_atomic_pointer to access handlers for\n    g_print()/g_printerr()\n  - !3260 fix underspecified dependencies on generated headers\n  - !3262 Add a (temporary) assertion that sizeof(gsize) == sizeof(guintptr)\n  - !3263 Revert \"glib-init: Add more static assertions for gintptr, guintptr\"\n  - !3265 fileutils: Make some sample code detect symlinks as intended\n  - !3266 Avoid some warnings from GObject-Introspection\n  - !3268 po: Add missing header file to POTFILES.in\n\n* Translation updates:\n  - Belarusian (Vasil Pupkin)\n  - Galician (Fran Dieguez)\n  - Georgian (Ekaterine Papava)\n  - Hebrew (Yosef Or Boczko)\n  - Indonesian (Kukuh Syafaat)\n  - Portuguese (Hugo Carvalho)\n  - Russian (Aleksandr Melman)\n  - Turkish (Sabri Ünal, Emin Tufan Çetin)\n  - Ukrainian (Yuri Chornoivan)\n\n\nOverview of changes in GLib 2.75.2, 2023-01-06\n==============================================\n\n* Add `g_ptr_array_sort_values()` and `g_ptr_array_sort_values_with_data()` APIs\n  (work by Marco Trevisan) (!3155)\n\n* Some fixes for activation of UWP apps on Windows (work by Luca Bacci) (#2843, !3167)\n\n* Support Markdown output from `gdbus-codegen` (work by Guido Günther) (!3171)\n\n* Bugs fixed:\n  - #2871 Leak in g_find_program_for_path() (Philip Withnall)\n  - #2843 gtk_show_uri can't open browser on MSYS2 on Windows (Luca Bacci)\n  - #2857 Grammar issue in documentation glib stpcpy (Peter Bloomfield)\n  - !3155 garray: Add g_ptr_array_sort_values[_with_data]() wrappers\n  - !3162 gobject: Add a missing NULL check for the return from\n    lookup_type_node_I()\n  - !3167 GWin32AppInfo: Fixes for UWP (packaged) apps activation\n  - !3169 GLocalFile: Delete redundant error saving statement\n  - !3170 GLocalFile: add error handle for trash info file writing\n  - !3171 codegen: Support markdown suitable for gi-docgen\n  - !3173 gdesktopappinfo: Drop an unnecessary NULL check\n  - !3174 garray: Add some additional length assertions\n  - !3175 codegen: Check parameter before calling its interface method\n  - !3177 Various fixes for how we interact with subproject dependencies\n  - !3178 glocalfileinfo: Don't reset mtime tv_sec when setting tv_usec\n  - !3181 INSTALL.md,README.win32.md: Actualize links\n\n* Translation updates:\n  - Turkish (Sabri Ünal)\n\n\nOverview of changes in GLib 2.75.1, 2022-12-21\n==============================================\n\n* Add new `GFileInfo` properties for large thumbnails (work by Matthias Clasen) (#621)\n\n* Fix missing input validation in `GDBusMenuModel` (work by Lars Uebernickel) (#861)\n\n* Change default `g_desktop_app_info_search()` algorithm to include substring\n  matches (work by Alynx Zhou) (#1152)\n\n* Various GVariant security fixes when handling untrusted data (work by\n  William Manley, Philip Withnall, Simon McVittie) (#2121, #2540, #2794, #2797,\n  #2839, #2840, #2841)\n\n* Add support for XDG Activation protocol in `GAppLaunchContext` (work by\n  Ilya Fedin) (#2709)\n\n* Return `application/x-zerosize` rather than `text/plain` as content type for\n  empty files (work by Philip Withnall) (#2777)\n\n* Deprecate `-Druntime_libdir` configure option because it was unused (work by\n  Philip Withnall) (#2786)\n\n* Check for snap plugs when accessing portals (work by Robert Ancell) (!3020)\n\n* Add `GArray` and `GPtrArray` constructors to take or copy C arrays (work by\n  Marco Trevisan) (!3128)\n\n* Add `GHashTable` methods to get and steal hash table keys and values as\n  `GPtrArray`s (work by Marco Trevisan) (!3130)\n\n* Change the default D-Bus system bus socket address from\n  `/var/run/dbus/system_bus_socket` to `/run/dbus/system_bus_socket`, in line\n  with changes in dbus.git. This can now be overridden by passing\n  `-Druntime_dir=/some/path` at configure time — the default is `/run`, which\n  should work for all users except distributions where `/run` is not equivalent\n  to `/var/run`. OS distributors should check that this configured path matches\n  the runtime directory configured for their D-Bus daemon. (work by\n  Roman Stratiienko, Philip Withnall) (!3095, !3101)\n\n* Bugs fixed:\n  - #621 file-info: catch thumbnail files in large directory as well (Matthias\n    Clasen)\n  - #861 insufficient input validation in GDBusMenuModel (Lars Uebernickel)\n  - #1152 Application search algorithm (g_desktop_app_info_search()) should use\n    fuzzy matching (Alynx Zhou)\n  - #1904 gaction: remote triggered crashes\n  - #2121 GVariant deserialisation does not match spec for non-normal data\n    (Philip Withnall, William Manley)\n  - #2540 Parsing serialized GVariants can blow up run-time and memory (Philip\n    Withnall)\n  - #2709 Add support for XDG_ACTIVATION_TOKEN/XDG Activation protocol in\n    GAppLaunchContext (Ilya Fedin)\n  - #2777 Return application/x-zerosize for empty file content types rather than\n    text/plain (Philip Withnall)\n  - #2786 runtime_libdir and iconv options documented and exposed but not\n    effective? (Philip Withnall)\n  - #2793 Introspection annotations for g_clear_pointer() and g_clear_fd() might\n    not be correct (Philip Withnall)\n  - #2794 GVariant offset table entry size is not checked in is_normal() (Philip\n    Withnall)\n  - #2797 g_variant_byteswap() can take a long time with some non-normal inputs\n    (Philip Withnall)\n  - #2809 g_str_equal switched to stricter API (typing) (Philip Withnall)\n  - #2811 Internal inotify symbols exposed in 2.75.0 ABI (Simon McVittie)\n  - #2812 CI failing on macOS: -Werror,-Wmissing-field-initializers (Simon\n    McVittie)\n  - #2820 g_str_equal: New macro version breaks compilation in C++ projects\n    (Philip Withnall)\n  - #2821 GObject webpage documentation is mis-formatted during generation\n    (Emmanuele Bassi)\n  - #2835 gio/gapplication test fails with test_dbus_activate: assertion failed\n    (n_activations == 2): (1 == 2) (Philip Withnall)\n  - #2836 Conditional jump on uninitialised value in spawn-singlethread (Philip\n    Withnall)\n  - #2837 Assertion failure in contexts test (Philip Withnall)\n  - #2839 [bisected] GVariant test regression on big-endian architectures (Simon\n    McVittie)\n  - #2840 fuzz_variant_binary_byteswap: Heap-buffer-overflow in\n    g_variant_serialised_get_child (Philip Withnall)\n  - #2841 fuzz_variant_text: Timeout in fuzz_variant_text (Philip Withnall)\n  - #2845 MSVC: Build failure with g_array_append_val() in C++ mode\n  - #2846 Follow-up from \"garray: Add support adding literal values\" — doesn’t\n    work with clang (Emmanuele Bassi)\n  - #2852 alpine/musl: catching signals from a subprocess triggers\n    GLib:ERROR:../glib/gmain.c:5569:siginfo_t_to_wait_status: code should not be\n    reached (Philip Withnall)\n  - !385 gtask: Warn if a GTask is finalised without returning\n  - !2479 glib/spawn: check user source_fds doesn't contain private fds\n  - !2728 gtype: Speed up type checking for final types\n  - !2764 GCancellable: Ensure it is always cancelled on connect callback\n  - !2886 gtestutils: Use $G_TEST_TMPDIR as temporary directory when defined\n  - !2895 Expose C and C++ standard versions and add macros to check them\n  - !2917 meson: Use gnome.mkenum_simple()\n  - !2992 glib/tests: Add test to check that we abort on low-memory\n  - !3020 portal: Check for snap plugs before accessing portals\n  - !3042 gdesktopappinfo: Fail early if trying to launch an invalid executable\n    and always use desktop Path and context $PATH\n  - !3064 ci: Exclude copylibs and fuzz tests from code coverage\n  - !3065 tests: Add some trivial tests for g_thread_init()\n  - !3067 tests/meson.build: do not use can_run_host_binaries()\n  - !3068 gio: Fix missing visibility header dependency\n  - !3070 type-flags test: Force G_ENABLE_DIAGNOSTIC=1 to be set\n  - !3073 Misc docs fixes and test improvements in GAction and\n    GNotificationBackend\n  - !3075 gmodule: Fix redeclaration of symbol\n  - !3076 gspawn: Ignore invalid FDs when using safe_fdwalk()\n  - !3077 build: Bump Meson dependency to 0.64.0\n  - !3078 build: Move -Wnonnull flag to meson.build\n  - !3079 giochannel: Clarify assertions in g_io_channel_write_chars()\n  - !3080 A few test improvements for scan-build\n  - !3081 gthreadpool: Mark an explicit leak as to be ignored\n  - !3083 tests: Remove a manual timeout from desktop-app-info test\n  - !3086 gmacros: Use C++ namespaces attribute specifier sequences for msvc\n  - !3088 tests: Add G_TEST_OPTION_ISOLATE_DIRS to almost all gdbus tests\n  - !3089 Revert dependency bump to use Meson 0.64\n  - !3091 Fix doc typo in g_dbus_connection_signal_subscribe\n  - !3092 Fix gmodule/COPYING symlink path\n  - !3095 gdbusaddress: Form default system dbus path using meson definitions\n  - !3097 garray: Add assertions to help static analysis\n  - !3098 gobject: Use compare and exchange full to re-read old ref value\n  - !3099 gsocketcontrolmessage: add nullable annotation to deserialize return\n  - !3100 gsimpleproxyresolver: Make explicit that a port is needed for\n    HTTP/HTTPS\n  - !3101 gdbusaddress: Use runstatedir rather than localstatedir\n  - !3103 gclosure: Documentation improvements around floating closures\n  - !3105 gsocket: use socklen_t in more places to fix build under cygwin\n  - !3106 gobject: Check for valid ref counting via g_return_if_fail\n  - !3107 gdesktopappinfo: Group search results by both categories and match\n    types\n  - !3108 gwakeuptest: Do not rely on alarm() to stop tests on timeout\n  - !3112 docs: Remove a stray > in the glib-mkenums man page\n  - !3115 ci: Don’t fail if testlog-unstable_tests.junit.xml doesn’t exist on\n    MSVC\n  - !3116 docs: Remove HACKING\n  - !3117 tests: fix assert-msg-test with custom gdbinit\n  - !3119 Improve notification queue warning\n  - !3120 glib/gthread-posix: Conditionally use `futex` and/or `futex_time64`\n    syscalls...\n  - !3124 More gobject performance tests\n  - !3127 docs: Update SECURITY to stop mentioning a deprecated mailing list\n  - !3128 garray: Add more G(Ptr)Array constructors to take or copy C arrays\n  - !3129 garray: Add support adding literal values\n  - !3130 ghash: Add APIs to get (and steal) hash table keys and values as\n    GPtrArray\n  - !3132 gtestutils: Check for failure to setenv() and return\n  - !3139 gtype: avoid \"-Wcast-align\" warning with optimized\n    G_TYPE_CHECK_INSTANCE_CAST()\n  - !3141 tests/slice-concurrent.c: avoid using rand() from multiple threads\n  - !3142 tests/gdbus-method-invocation: Fix missing g_variant_new() argument\n  - !3144 gspawn.c: prefer close_range() on FreeBSD if available\n  - !3145 tests/gvariant.c: ensure posix_memalign alignment argument is correct\n  - !3147 ci: Temporarily only run the FreeBSD 13 CI on a schedule\n  - !3148 ghash: Use unsigned types for number of nodes and occupied ones\n  - !3151 Revert \"ci: Temporarily only run the FreeBSD 13 CI on a schedule\"\n  - !3152 tests: Fix stall/deadlock in slice-concurrent on macOS CI\n  - !3156 gobject: Some GValue setting code cleanups\n  - !3157 gthread-posix: need to #include <errno.h>\n  - !3159 gmenuexporter: Fix warning of unused n_items when building with\n    G_DISABLE_ASSERT\n\n* Translation updates:\n  - Interlingue (Olga Smirnova)\n  - Serbian (Мирослав Николић)\n\n\nOverview of changes in GLib 2.75.0, 2022-11-10\n==============================================\n\n* Update Unicode data to version 15 (work by Marco Trevisan) (#2735)\n\n* Fix various build failures in different situations\n  (work by Kjell Ahlstedt, Marco Trevisan (Treviño)) (#2740, #2758, #2759, #2766)\n\n* Fix over-eager deprecated property warnings for construct properties\n  (work by Simon McVittie) (#2748)\n\n* Fix a crash calling `g_param_value_is_valid()` on a `GParamSpecParam` (work by\n  Emmanuele Bassi) (#2770)\n\n* Fix floating `GVariant` leaks with GObject properties (work by Matthias Clasen) (#2774)\n\n* Add inline optimised version of `g_str_equal()` (work by Xavier Claessens) (#2775)\n\n* Add inline optimised version of `g_str_has_{prefix,suffix}()` (work by Emmanuel Fleury) (#24)\n\n* Fix `GVariant` type depths checks on text format variants (work by Philip Withnall) (#2782)\n\n* Fix regression with int64 and double hashing functions on big-endian architectures\n  (work by Simon McVittie) (#2787)\n\n* Build the API documentation only when building GLib as a shared library (work\n  by Emmanuele Bassi) (!2896)\n\n* Ignore weird `/etc/localtime` configurations generated by toolbx (work by Ray Strode) (!2973)\n\n* Avoid `EINTR` races when closing FDs in `g_spawn_*()` (work by Thomas Haller) (!2988)\n\n* Deprecate `G_MODULE_SUFFIX` and improve `g_module_open()` to automatically find\n  modules better on different platforms (work by Nirbheek Chauhan) (#520, #1413)\n\n* Soft-deprecate sized integer types in favour of C99 `stdint.h` types (work by Simon McVittie) (#1484)\n\n* Correctly mark sshfs file systems as `G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE` (work by Philip Withnall) (#2726)\n\n* Add `g_set_string()` function for setting strings simply (work by Christian Hergert) (#2747)\n\n* Add support for `xdg-terminal-exec` for handling desktop applications using\n  `Terminal=true` (work by Max Gautier) (!2839)\n\n* Change various configure-time defaults for cast checks and related\n  (work by Michael Catanzaro) (!2850, !2894)\n\n* Set Meson’s `install_tag` on installed files (work by Xavier Claessens) (!2905)\n\n* Add `G_TYPE_FLAG_DEPRECATED` for tagging deprecated `GType`s/`GObject`s\n  (work by Matthias Clasen) (!2993)\n\n* Add `g_clear_fd()` and `g_autofd` for automatically closing FDs when exiting a\n  scope (work by Simon McVittie) (!3007)\n\n* Convert GVariant Specification to reStructuredText and host it at\n  https://developer.gnome.org/documentation/specifications/gvariant-specification-1.0.html\n  (work by Philip Withnall) (!3044)\n\n* Bugs fixed:\n  - #16 gspawn.c file descriptor handling (Emmanuel Fleury, Ray Strode)\n  - #19 Workaround dlopen(NULL, 0) brokenness\n  - #24 inlined g_str_has optimisations (Emmanuel Fleury)\n  - #333 Make GLib valgrind friendly (Marco Trevisan (Treviño))\n  - #520 g_module_build_path builds incorrect paths on macOS and Windows (MSVC)\n    (Nirbheek Chauhan)\n  - #1211 macros: generate uniq variable name in _G_BOOLEAN_EXPR()/G_LIKELY()\n    (Thomas Haller)\n  - #1413 Meson build defines G_MODULE_SUFFIX to `dylib` on macOS but autotools\n    uses `so` (Nirbheek Chauhan)\n  - #1484 Deprecate sized integer types in favour of C99 stdint.h (Simon\n    McVittie)\n  - #2622 GThreadedResolver incorrectly expands domain names in SRV records\n    (Philip Withnall)\n  - #2726 G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE not set for sshfs (Philip Withnall)\n  - #2735 Update unicode data to version 15\n  - #2740 gio-launch-desktop: clang compiler can't compile with commit 813ce7f0b\n    (Kjell Ahlstedt)\n  - #2742 glib:gio / file test fails after update to 2.73.3. (Marco Trevisan\n    (Treviño))\n  - #2747 Add g_set_string for simplified and correct property setters\n    (Christian Hergert)\n  - #2748 construct properties always trigger the deprecated property warning\n    (Simon McVittie)\n  - #2753 Infinite recursion on ENOMEM in g_vasprintf() (Philip Withnall)\n  - #2754 `glib / spawn-test` fails with non-English locale (Philip Withnall)\n  - #2758 gmessages.c compile failure with -Werror=unused-result (Marco Trevisan\n    (Treviño))\n  - #2759 gosxcontenttype.m compile failure with -Werror=declaration-after-\n    statement (Marco Trevisan (Treviño))\n  - #2766 glocalfileinfo.c compile failure when utimensat() not available (=\n    MacOS)\n  - #2767 GFileInfo fails to find x-large and xx-large thumbnail paths (Marco\n    Trevisan (Treviño))\n  - #2770 Random crashes with GLib 2.74.0 (Emmanuele Bassi)\n  - #2774 Floating GVariant leaks since 2.73.1 in g_object_set() (Matthias\n    Clasen)\n  - #2775 Add an inline version of g_str_equal (Xavier Claessens)\n  - #2782 GVariant type depth not checked on typedecls in text format variants\n    (Philip Withnall)\n  - #2783 Enable no-interrupt close() on macOS\n  - #2784 Remove workaround to avoid false-positive -Werror=nonnull in\n    g_str_has_*() macro versions\n  - #2785 Invalid FD assertion in g_close() triggers test failures on macOS (Ray\n    Strode)\n  - #2787 new int64, double hash functions always hash to 0 on big-endian (Simon\n    McVittie)\n  - #2791 function name typo in comment explaining the private struct memory\n    layout (gtype.c) (sunce)\n  - #2795 [regression] gnome-keyring-daemon uses 100% CPU with glib-2.74.1 (Ray\n    Strode)\n  - #2796 _g_clear_fd_ignore_error() breaks with GLIB_VERSION_MAX_ALLOWED (Simon\n    McVittie)\n  - #2798 msys2-clang64 fails to compile cxx tests on versions < 11 (Marco\n    Trevisan (Treviño))\n  - #2799 Wrong GTask tag on error return path in\n    g_proxy_resolver_lookup_async() (Michael Catanzaro)\n  - #2800 fileutils test regression on vs2017-x64 builds:\n    appcrt\\lowio\\commit.cpp(19) : Assertion failed: (_osfile(fh) & FOPEN)\n  - #2802 Remove G_OS_DARWIN in favour of platform-specific defines (Philip\n    Withnall)\n  - #2805 g_task_set_name() should not use g_task_set_static_name() unless\n    permitted by GLIB_VERSION_MAX_ALLOWED (Michael Catanzaro)\n  - #2807 ../glib/gstrfuncs.h:186:41: error: argument 1 null where non-null\n    expected [-Werror=nonnull] (Ray Strode)\n  - !2799 Use the system allocator on UNIX when creating GTypeInstances\n  - !2839 Add support for xdg-terminal-exec for handling desktop applications\n    using 'Terminal=true'\n  - !2848 giomodule: Automatically detect modules on macOS\n  - !2850 Automatically disable cast checks when building with optimization\n  - !2852 Replace most GObject warnings with criticals\n  - !2857 glib-mkenums: Specify output encoding as UTF-8 explicitly for non-\n    English locale\n  - !2864 gatomic: fix the atomic compare_and_exchange macros on older C++\n    standard versions\n  - !2866 tests: skip g-file-info test if atime unsupported\n  - !2867 tests: skip shared libs if default_library=static\n  - !2869 task: Don't overwrite source names\n  - !2880 gbacktrace: Don't truncate gdb output\n  - !2884 tests/desktop-app-info: Add tests to verify if launching with terminal\n    works\n  - !2885 tests/desktop-app-info: Use unique temporary paths for action files\n  - !2889 Run tests with G_ENABLE_DIAGNOSTIC=1\n  - !2892 tests/unix-streams: Free the cancelled error on cancelled cancellable\n  - !2894 Disable cast checks in plain builds\n  - !2896 Build API docs only with shared libraries\n  - !2899 gio: make g_task_get_cancellable return value (nullable)\n  - !2901 glocalfileoutputstream: Do not double-close an fd on unlink error\n  - !2903 docs: Fix markup error in code blocks for \"DEPRECATED\" macros\n  - !2904 tests: Only run g_error_new_valist() programmer error test on glibc\n  - !2905 meson: Set install_tag remaining installed files\n  - !2907 gthread-win32: Fix conversion error from pointer to integer\n  - !2911 glocalfileinfo: In set_mtime_atime(), don't use utimensat() if it's\n    not available\n  - !2913 gregex: Use pcre2 error messages if we don't provide a specific one\n  - !2915 Consider the GLogField.length of \"MESSAGE\"/\"GLIB_DOMAIN\" fields in\n    g_log_writer_format_fields()\n  - !2916 Update version in the docs to 2.74.1 for the fixed handling of...\n  - !2920 gregex: Allow G_REGEX_JAVASCRIPT_COMPAT in compile mask\n  - !2922 ci: Conform to Python's coding style\n  - !2924 Optimize the implementation of `g_double_hash`\n  - !2928 build: Let Meson figure out Python installation\n  - !2931 gdatetime: add missing g_return_() check in g_date_time_format_iso8601\n  - !2933 Fix style warning in gvariant.c\n  - !2936 Fix symbol visibility macros on Windows\n  - !2937 gicon: Add introspection for to_tokens / from_tokens vfunc's\n  - !2938 gdatetime: add NULL guard in g_date_time_new_now()\n  - !2939 gobject/tests/param: Add unit test for handling invalid NULL param\n    spec\n  - !2942 gbookmarkfile: Add copy function and define it as boxed type for\n    introspection\n  - !2945 gmessages: Add missing trailing newline in fallback log handler\n  - !2946 tests: Check the return value of fwrite() in a test\n  - !2947 gspawn: avoid race due to retry with EINTR on close()\n  - !2948 ghash: document g_hash_table_steal_extended() behavior for sets\n  - !2949 doc: Correctly annotate g_async_queue_push()\n  - !2951 meson: Don't explicitly disable mixed declarations and statements\n  - !2952 Various win32 test fixes\n  - !2953 build: Post-release version bump to 2.75.0\n  - !2954 tools: Fix code style warnings in gen-visibility-macros.py\n  - !2955 gtimezone: Reject weird /etc/localtime configurations\n  - !2956 gstrfuncs: Fix a compiler warning in g_strerror()\n  - !2957 Fix include order of glib-visibility.h\n  - !2959 Some leaks fixes\n  - !2961 tests: Remove an unnecessary sleep from desktop-app-info test\n  - !2963 tests: Fix race condition on cancellation in unix-streams test\n  - !2964 gstdio: fail assertion in g_close() for invalid file descriptor\n    (EBADF)\n  - !2965 ghash: comment g_hash_table_steal_extended() about not destroying\n    key/value\n  - !2967 Fix build when G_DISABLE_CAST_CHECKS is defined to empty string\n  - !2968 tests: Fix minor race in desktop-app-info terminals test\n  - !2969 tests/desktop-app-info: Make sure scripts writes to the right end of\n    the pipe\n  - !2970 Fix GIOModule regression from !2959\n  - !2972 tests: Temporarily disable desktop-app-info terminal test on FreeBSD\n  - !2976 Fix a couple of minor Coverity issues\n  - !2977 gstdio: Temporarily disable g_close() warning on macOS\n  - !2978 A couple of test fixes on OS X\n  - !2979 gtask: Use unsigned bit-field struct values to avoid warnings\n  - !2981 meson: Define G_OS_DARWIN when compiling under OSX or iOS\n  - !2984 tests: Fix code style in Python files to satisfy black and flake8\n  - !2985 ci: Do not store docs artifacts\n  - !2987 meson, ci: Support tests that can fail under certain conditions\n  - !2990 gio/tests/g-file-info: don't assume million-in-one events don't happen\n  - !2991 glib, gmodule, gobject: Add generated headers to the lib dependency\n  - !2993 Add G_TYPE_FLAG_DEPRECATED\n  - !2997 docs: Mention platform-specific predefined macros\n  - !2999 Soft-deprecate G_VA_COPY in favour of va_copy\n  - !3000 docs: Stop claiming that gsize is wide enough to hold a pointer\n  - !3001 Improve documentation and static assertions around g(s)size,\n    g(u)intptr\n  - !3002 docs: Soft-deprecate G_STRUCT_OFFSET in favour of offsetof\n  - !3003 docs: Soft-deprecate types that are just aliases for a standard C type\n  - !3004 build: Mark the g-file-info test as succeeding\n  - !3005 Fix sandbox escape in GDBusServer\n  - !3007 gstdio: Add g_clear_fd() and g_autofd\n  - !3008 gio/gdesktopappinfo: Free the wrapped argv array on launch failure\n  - !3009 gtimezone: Fix symlink checks on relative link targets\n  - !3011 meson: Cleanup and fix include files paths, using base path without\n    repetitions\n  - !3012 meson: Handle various build system FIXME's\n  - !3013 tests: Fix few new clang warnings\n  - !3015 test/meson: Add tests dependencies on built programs, libraries and\n    modules\n  - !3018 Install gversionmacros.h in the right place\n  - !3019 ci: Fix check for missing install tag\n  - !3021 Add kgx (gnome console) to known terminals lists\n  - !3022 Fix coding style issue in .gitlab-ci/check-missing-install-tag.py\n  - !3023 ci: Move shellcheck/black/flake8 checks to a new CI job which can fail\n  - !3025 fuzzing: Add a new fuzz test for g_variant_byteswap()\n  - !3027 gstdio: Preserve errno in g_autofd, document async-signal safety\n  - !3033 glib/gmacros: Always define NULL as nullptr in C++11 and newer\n  - !3034 ci: Open issues when scheduled pipelines fail\n  - !3035 portal: Fix broken header guard\n  - !3037 gio: Create a sandbox checking function\n  - !3040 gspawn: Provide less brute force fdwalk implementation on macOS\n  - !3043 glib-mkenums: feature use of previous symbols in evaluation\n  - !3044 docs: Convert GVariant Specification to reStructuredText\n  - !3048 docs: Add licensing/copyright data to GVariant specification and fix\n    various formatting issues\n  - !3049 Add a SPDX LicenseRef for the license historically used for tests\n  - !3050 tests: Shorten internal codegen test timeout\n  - !3051 ci: Add a CI check for REUSE-compliant licensing/copyright headers\n  - !3055 fileutils test: Use no-op invalid-parameter handler when exercising\n    EBADF\n  - !3058 ci: Build with -Wnonnull\n  - !3060 fuzzing: Add a fuzz test for g_utf8_validate()\n  - !3062 tests: Fix a small leak in the GVariant tests and some minor\n    documentation typos\n\n* Translation updates:\n  - Abkhazian (Nart Tlisha)\n  - Dutch (Nathan Follens)\n  - Friulian (Fabio Tomat)\n  - German (Christian Kirbach)\n  - Hebrew (Yaron Shahrabani)\n  - Kazakh (Baurzhan Muftakhidinov)\n  - Occitan (post 1500) (Quentin PAGÈS)\n\n\nOverview of changes in GLib 2.74.0, 2022-09-17\n==============================================\n\n* Use EPOLL_CLOEXEC by default (Colin Walters)\n\n* Fixed various regression on GRegex as per the PCRE2 porting (Marco Trevisan)\n\n* Fixed various memory leaks (Sebastian Keller, Marco Trevisan)\n\n* Bugs fixed:\n - GNOME/gtksourceview#278 Failed to load html.lang after GLib switched to PCRE2\n   (Marco Trevisan (Treviño))\n - GNOME/gtksourceview#283 GRegex-on-PCRE2 regressions (Marco Trevisan)\n - #2688 Follow-up from \"replace pcre1 with pcre2\" (Marco Trevisan (Treviño))\n - #2713 static_assert is undefined in C99 (wen Rafferty)\n - #2719 GParamSpec constructors should have nullable annotation on nick/blurb\n   (Andy Holmes)\n - #2729 GRegex/GMatchInfo related crashes after upgrade to 2.73.2 (Marco\n   Trevisan)\n - #2733 gio: GVariantBuilder builder leaked in g_document_portal_add_documents\n   when URI list is empty (Sebastian Keller)\n - #2737 gio mount coredumps on prompt exit since 2.73 (Marco Trevisan)\n - #2741 Memory errors on GRegex (Marco Trevisan (Treviño))\n - GNOME/gtk#4400 gtk_show_uri can't open browser on MSYS2 on Windows (Luca\n   Bacci)\n - !2820 ci: Expose the coverage report and docs as links in the MR's (Marco)\n - !2855 gtlscertificate: Update reference to G_TLS_CERTIFICATE_NO_FLAGS\n - !2861 mem: Document OOM behavior for allocations (Matthias Clasen)\n - !2868 gio-unix: Use EPOLL_CLOEXEC by default (Colin Walters)\n - !2873 Fix array-bounds compiler warnings with GCC 12 (Emmanuele Bassi)\n - !2874 tests, GDesktopAppInfo: Fix various GVariant leaks (Marco Trevisan)\n - !2875 g_strsplit: Use a pre-allocated GArray when max_tokens is provided\n   (Marco Trevisan)\n - !2876 GActionGroup: Fix ownership transfer annotation for query_action()\n   (Andy Holmes)\n - !2879 gioenumtypes: Only define GLIB_DISABLE_DEPRECATION_WARNINGS if needed\n   (Marco Trevisan)\n - !2881 GWin32AppInfo: Add missing g_spawn_close_pid (Luca Bacci)\n - !2882 meson: Set install_tag on all tools (Xavier Claessens)\n - !2883 ci: Improve style check script (Matthias Clasen)\n - !2900 docs: Improve wording in documentation of g_unix_signal_source_new()\n   (Tom Levy)\n\n* Translation updates:\n - Abkhazian (Nart Tlisha)\n - Basque (Asier Sarasua Garmendia)\n - Bulgarian (Alexander Shopov)\n - Catalan (Jordi Mas)\n - Chinese (China) (Luming Zh, Boyuan Yang)\n - Croatian (Goran Vidović)\n - Czech (Marek Černocký)\n - Danish (Alan Mortensen)\n - Finnish (Jiri Grönroos)\n - French (Claude Paroz)\n - Galician (Fran Dieguez)\n - Hungarian (Balázs Úr)\n - Indonesian (Kukuh Syafaat)\n - Korean (Changwoo Ryu)\n - Lithuanian (Aurimas Černius)\n - Persian (Danial Behzadi)\n - Polish (Piotr Drąg)\n - Portuguese (Hugo Carvalho)\n - Portuguese (Brazil) (Leônidas Araújo)\n - Russian (Aleksandr Melman)\n - Slovenian (Matej Urbančič)\n - Spanish (Daniel Mustieles)\n - Swedish (Luna Jernberg)\n - Turkish (Emin Tufan Çetin)\n - Ukrainian (Yuri Chornoivan)\n\nOverview of changes in GLib 2.73.3, 2022-08-05\n==============================================\n\n* Revitalize G_REGEX_OPTIMIZE flag and use it to enable PCRE JIT compiler (work\n  by Aleksei Rybalkin) (!2817)\n\n* Fix some regressions due to the PCRE2 port (work\n  by Aleksei Rybalkin, Mamoru TASAKA and Marco Trevisan) (!2814, !2827, #2694,\n  #2699, #2700)\n\n* Fix a pidfd leak that was introduced in the previous release (work by\n  Christian Hergert) (#2708)\n\n* Support compilation without a C++ toolchain (work by James Hilliard) (!2822)\n\n* GDBus: Use namespace-friendly protocol for Linux message buses, and optionally\n  other connections (work by Simon McVittie) (!2832)\n\n* Fix potential races in multi-threaded signal connections handling (work by\n  Marco Trevisan) (!2823)\n\n* Add back gio-launch-desktop to redirect stdout/stderr of launched\n  GDesktopAppInfo's to the journal with proper parent (work by Simon McVittie)\n  (!2818, !2819, #2682)\n\n* Executables that are invoked when installing other software, typically\n  from packaging system triggers, can now be installed into\n  architecture-dependent locations. Unix OS distributors who install\n  GLib for more than one architecture in parallel (multiarch or multilib\n  installations) should consider building with -Dmultiarch=true, installing\n  the bin/glib-compile-schemas and bin/gio-querymodules symbolic links in\n  packages for the primary architecture, and omitting those symlinks from\n  packages for secondary architectures. (work by Simon McVittie) (!2818)\n\n* Some enumerators introduced in previous releases have been changed, for better\n  introspection results:\n  - G_MARKUP_PARSE_FLAGS_NONE renamed to G_MARKUP_DEFAULT_FLAGS\n  - G_TLS_CERTIFICATE_FLAGS_NONE renamed to G_TLS_CERTIFICATE_NO_FLAGS\n  - G_APPLICATION_FLAGS_NONE was deprecated, use G_APPLICATION_DEFAULT_FLAGS now\n  (work by Emmanuele Bassi) (!2835)\n\n* gfileinfo: Implement xattr attribute removal (work by madmurphy) (#1187)\n\n* Add support to --delete option to gio set, to unset a file attribute (work by\n  codeboybebop) (#2588)\n\n* Improve default value of glib_debug option: G_ENABLE_DEBUG will be defined\n  only if using `--buildtype=debug` or enabled via `-Dglib_debug`, but it\n  won't ever be set if an optimized build is requested (specifically if the\n  optimization level is not `0` or `g`) as it may be the case when using\n  `--buildtype=debugoptimized` (work by Michael Catanzaro) (!2851)\n\n* Probably the first revision of any GNOME module ever released from Cuba :)\n\n* Bugs fixed:\n - #566 support using the PCRE JIT\n - #1187 xattr add possibility to remove an extended attribute\n - #2509 g_spawn_*() is not thread-safe on Windows when an environment table is\n   provided\n - #2542 Flatten line breaks in filenames printed by gio-tool\n - #2588 gio-tool: -d option to delete attribute\n - #2682 Launching a GDesktopAppInfo \"blames\" parent process for its output\n - #2692 2.73.2: build failure on musl >= 1.2.0\n - #2694 Recent GRegex changes break vala-language-server compilation\n - #2699 g_regex_match_all fails on s390x with Fedora glib2-2.73.2-4.fc37\n - #2700 g_regex_match fails on multiple archs (including x86_64) with Fedora\n - #2703 Fix GCancellable tests for Windows 64bit\n   glib2-2.73.2-4.fc37\n - #2705 GResourceFile crashes on `g_file_set_display_name()`\n - #2708 pidfd leak causes processes to run out of file-descriptors\n - !2299 GWin32AppInfo: Fix PID reporting in launched signal\n - !2759 Use atomic exchange operations more\n - !2812 ci: Setup submodules and subprojects before building on dist\n - !2813 Add missing extension point register for various settings backends\n - !2814 gregex: use %s format specifier for localized error message\n - !2815 giomodule: Use g_once_init_enter/leave to register extensions and load dirs\n - !2818 gio: Optionally install trigger executables to architecture-specific paths\n - !2822 meson: fix build without cpp toolchain\n - !2823 gsignal: Perform signal unlocked handlers block, unblock and disconnect ops\n - !2825 gioenums: G_IO_ERROR_NO_SUCH_DEVICE is new in 2.74\n - !2826 GDBus: improve interoperability of SASL handshake\n - !2827 gregex: Free match info if offset matching recalc failed\n - !2829 gregex: use g_debug instead of g_warning in case JIT is not available\n - !2830 goption: Slightly improve the documentation for G_OPTION_FLAG_REVERSE\n - !2832 GDBus: Use namespace-friendly protocol for Linux message buses, and\n   optionally other connections\n - !2833 Fix installed-tests failures\n - !2835 Introduce G_APPLICATION_DEFAULT_FLAGS\n - !2836 gio-launch-desktop: Only replace fds that point to the Journal\n - !2851 Improve default value of glib_debug option\n - !2853 Expose tls-exporter channel binding\n - !2854 docs: Add --delete option to gio-tool attributes documentation\n\n* Translation updates:\n - Abkhazian\n - Basque\n - Georgian\n - Hebrew\n - Persian\n - Portuguese\n - Russian\n - Turkish\n - Ukrainian\n\n* Contributors:\n  Aleksandr Melman, Aleksei Rybalkin, Asier Sarasua Garmendia, Christian Hergert,\n  codeboybebop, Danial Behzadi, Emin Tufan Çetin, Emmanuele Bassi,\n  Giuseppe Scrivano, Hugo Carvalho, James Hilliard, Luca Bacci, madmurphy,\n  Mamoru TASAKA, Marco Trevisan, Matthias Clasen, Michael Catanzaro,\n  Nart Tlisha, Owen Rafferty, Philip Withnall, Ryan Hope, Simon McVittie,\n  Yosef Or Boczko, Yuri Chornoivan, Zurab Kargareteli.\n\nOverview of changes in GLib 2.73.2, 2022-07-12\n==============================================\n\n* Replace PCRE1 with PCRE2: This is a major change to drop the libpcre1\n  dependency and use libpcre2 instead, while preserving the behaviour and API of\n  GRegex. G_REGEX_OPTIMIZE and G_REGEX_JAVASCRIPT_COMPAT are now deprecated\n  and became a no-op, while other flags are adapted accordingly to the new API\n  (work by Aleksei Rybalkin, Philipp Withnall) (!2529, #1085)\n\n* Preserve destruction order in gdataset, fixing various crashes during\n  objects disposal (work by Peter Bloomfield) (!2776, #2672, #2676)\n\n* Require C99 __VA_ARGS__ (work by Emmanuele Bassi) (!2791, #2681)\n\n* Add NONE or DEFAULT members to most flags types (work by Simon McVittie) (!2576)\n\n* GFile: Add some missing async APIs (work by Marco Trevisan) (!2717)\n\n* Improve internal and process documentation (work by Philipp Withnall) (!2763)\n\n* Add atomic compare-and-exchange APIs returning previous value (work by Marco\n  Trevisan) (!2766)\n\n* Add G_DEFINE_ENUM_TYPE and G_DEFINE_ENUM_VALUE macros (work by Emmanuele Bassi)\n  (!2788)\n\n* Add platform-independent G_ALWAYS_INLINE and G_NO_INLINE (work by Marco Trevisan)\n  (!2781)\n\n* Use waitid() on pidfds rather than a global SIGCHLD handler (work by Philip\n  Withnall) (!2408)\n\n* Bugs fixed:\n - #1434 Move tests/* into */tests/\n - #2216 Chain signal handlers for SIGCHLD\n - #2597 Crash in g_socket_client_enumerator_callback when proxy resolving\n - #2659 /maincontext/timeout-once randomly fails\n - #2681 Set C99's `__VA_ARGS__` as a toolchain hard requirement\n - #2672 Finalization speedup (commit fa8c7c0da) causes crash in gtk3 demo\n - #2676 gnome-shell assertion failure with GLib 2.73.1 while\n         g_object_real_dispose() cleans up weak refs\n - #2687 Regression: in GLib 2.72.3, in gsocketclient/cancellable\n - !1717 Add lock in _g_get_unix_mount_points() around *fsent() functions\n - !2408 gmain: Use waitid() on pidfds rather than a global SIGCHLD handler\n - !2529 gregex: replace pcre1 with pcre2\n - !2576 Add a NONE or DEFAULT member to most flags-sets\n - !2667 test: Potentially fix a race in thread-pool-slow test\n - !2706 Add more SPDX license headers\n - !2717 gfile (and GAppInfo): Add some missing async APIs and ensure async calls\n         always use them\n - !2744 fuzzing: Add fuzz test for g_uuid_string_is_valid()\n - !2748 docs: Add a testing policy\n - !2749 tests: Various fixes for TAP output of tests\n - !2755 docs: Sync glib.doap to set of users listed in CODEOWNERS\n - !2763 docs: Document the release process\n - !2766 gatomic: Add Compare and Exchange functions that returns the previous value\n - !2770 Correct documentation of g_atomic_pointer_exchange\n - !2771 use gvdb as a subproject\n - !2772 gobject/tests/performance: fix leaks\n - !2773 gdatetime test: Consistently expect %k to generate a figure space\n - !2774 tests: Fix type mismatches in new atomic tests when compiling with clang\n - !2775 gthread: Some code cleanups and fixes\n - !2776 gdataset: Preserve destruction order\n - !2779 tests: Fix macOS failures in the file tests\n - !2781 gmacros: Provide platform-independent G_ALWAYS_INLINE and G_NO_INLINE\n - !2782 ci: Update CI images to add gdb and pcre2\n - !2783 _g_get_unix_mount_points(): reduce syscalls inside loop\n - !2784 Revert \"gobject: Use g_datalist_id_remove_multiple\"\n - !2785 tests: Fix incorrect basename comparison in gsubprocess test\n - !2786 gcontenttype: Fix a potential use-after-free of xdgmime data\n - !2788 Add G_DEFINE macros for enum and flags types\n - !2789 gdate: Fix a typo in a code comment\n - !2790 tests: Skip assert-msg-test.py if gdb is non-functional\n - !2791 Require C99's __VA_ARGS__\n - !2792 ci: Ensure git submodules are updated before running macOS CI\n - !2794 gobject: Don't skip custom dispatch_properties_changed\n - !2795 gkeyfile: Remove some unreachable code\n - !2796 gmodule: Improve error handling for invalid .la files\n - !2797 gio: Add some missing license and copyright headers\n - !2798 Remove occurrences of unused-results warnings and mark them as errors\n - !2800 gbacktrace: Handle case of strerror_r returning an int value\n - !2801 gobject: Small speedup in weak-ref-set\n - !2802 gobject/tests/custom-dispatch: Add few more tests\n - !2804 gthreadpool: Ensure all unused threads are really counted as stopped\n - !2805 gthread-posix: Do not do unguarded and non-atomic assignment of an atomic\n - !2807 ci: Specify -Wno-overlength-strings on macOS\n         build: Specify -Werror=pointer-sign\n - !2808 gsocketclient: Fix passing NULL to g_task_get_cancellable()\n - !2809 gio/tests/desktop-app-info: Wait until the callback is called\n\n* Translation updates:\n - Lithuanian\n - Persian\n - Portuguese\n - Russian\n - Serbian\n - Ukrainian\n\n* Contributors:\n  Aleksandr Melman, Aleksei Rybalkin, Aurimas Černius, Danial Behzadi,\n  Emmanuele Bassi, Emmanuel Fleury, ericLemanissier, Hugo Carvalho,\n  Marc-André Lureau, Marco Trevisan (Treviño), Matthias Clasen,\n  Michael Catanzaro, Michael Vetter, Peter Bloomfield, Philip Withnall,\n  Rozhuk Ivan, Simon McVittie, Yuri Chornoivan, Мирослав Николић\n\nOverview of changes in GLib 2.73.1\n==================================\n\n* Remove the `-Diconv` configure option, as GLib now uses Meson’s built-in logic for\n  finding which iconv implementation to use (work by Eli Schwartz) (!2734)\n\n* Move gvdb to a Meson subproject and git submodule to avoid duplicating its\n  source (work by Philip Withnall) (!2733)\n\n* Add `add_test_setup()` in Meson to allow GLib tests to be run under valgrind\n  with correct settings easily, using `meson test --setup=valgrind` (work by\n  Philip Withnall) (!2752)\n\n* Fix deadlocks when disposing non-cancelled inotify `GFileMonitor`s (work by\n  Benjamin Berg) (#1941)\n\n* Fix `file://` requests in webkit2gtk due to incorrect xdgmime update (work by\n  Stephen Jung, Michael Catanzaro, Philip Withnall) (#2639)\n\n* Fix build errors on macOS ≤10.7 for `LOCAL_PEERPID` (work by Christopher Nielsen) (!2707)\n\n* Add new `g_atomic_int_exchange()` and `g_atomic_pointer_exchange()` APIs (work\n  by Marco Trevisan) (!2726)\n\n* Add new `GListStore:n-items` property to allow easy binding in UIs (work by\n  Benjamin Otte) (!2738)\n\n* Performance improvements for GObject construction and destruction (work by\n  Matthias Clasen) (#2661, #2665, #2666, !2678, !2700, !2705, !2712, !2713,\n  !2714, !2715, !2716, !2721, !2722, !2723, !2724, !2725, !2756)\n\n* Use a numeric space (U+2007) for padding with some `g_date_time_format()`\n  placeholders (work by Maksym Hazevych) (#2655)\n\n* Fix a slow memory leak in `GSocketClient` when using long-lived `GCancellable`s\n  (work by Jens Georg) (#2670)\n\n* Bugs fixed:\n - #1941 disposing a non-cancelled inotify GFileMonitor causes deadlocks\n - #2639 xdgmime update breaks webkit2gtk file:// requests\n - #2655 Use the numeric space for the DateTime.format()'s `\\%l` specifier\n - #2656 2.73.0: test suite is failing in `glib:gobject / object` unit\n - #2661 Speeding up type checks for final types (commit 0ddea2d8e) breaks C++ bindings\n - #2665 GObject speed up causes gtk3 apps to crash :(\n - #2666 GObject speedup causes warnings with custom constructors\n - #2670 Growing memory when using cancellable in g_socket_client_connect_async\n - !2670 docs: Add a backports policy\n - !2678 Speed up property lookup\n - !2681 docs: Add a roadmap policy\n - !2692 tests: Drop redundant collate test data files\n - !2694 Restore macOS CI\n - !2696 Move tests/gobject/testgobject.c to gobject/tests/basics-gobject.c\n - !2697 Delete tests/gobject/timeloop-closure.c\n - !2700 gtype: Speed up type checks for final types\n - !2701 gsocketaddressenumerator: add nullable annotation to the result of `next`\n - !2702 tests: Fix a potential race condition in pollable test\n - !2704 tests: Remove various bits of overly-verbose test output\n - !2705 gobject: Drop an unused quark\n - !2707 credentials: macos: check for existence of LOCAL_PEERPID\n - !2710 ci: Try reducing FD soft limit to fix valgrind tests\n - !2711 tests: Various small test fixes for valgrind\n - !2712 Improve the GObject performance test\n - !2713 Simplify g_object_new_with_properties\n - !2714 Simplify g_object_notify_by_pspec\n - !2715 Don't inline deprecation warnings\n - !2716 Don't copy values in g_object_new\n - !2719 Add nullable annotation to return value of `g_variant_dict_lookup_value`.\n - !2721 Avoid g_object_ref/unref in some cases\n - !2722 Avoid g_param_spec_get_redirect_target\n - !2723 Avoid g_type_class_peek\n - !2724 gobject: Avoid redundant atomics\n - !2725 Keep a separate flag for notify handlers\n - !2726 gatomic: Add APIs to perform atomic int / pointer exchanges\n - !2729 tests: Reduce number of threads in once test under valgrind\n - !2730 garray: Fix NULL-termination of GPtrArray copies\n - !2731 tests: Various static analysis fixes\n - !2732 gobject: Sink floating pspecs if adding them to a class fails\n - !2733 build: Move gvdb to a subproject\n - !2734 meson: simplify iconv/intl lookups using Meson's builtin dependency lookup\n - !2735 tests: Move GObject performance tests to gobject/tests/performance/\n - !2738 liststore: add n-items property\n - !2739 gobject-query: Minor cleanups and add unit tests\n - !2740 gbinding: Remove some duplicated code for checking property names and improve tests slightly\n - !2747 gobject: Change GObject notify semantics under static analysis\n - !2751 glib-unix: Mark GLib.unix_open_pipe fds input array as fixed-size\n - !2752 build: Use add_test_setup() to allow tests to be run under valgrind\n - !2753 xdgmime: fix double free\n - !2754 docs: Add Marco Trevisan as a co-maintainer\n - !2756 gobject: Fix crash when disposing a GtkAccelGroup\n - !2758 gio: Don't bundle gtrace in static builds\n - !2761 gtlscertificate: Hold a ref on the root certificate when building chains\n - !2762 gsignal: Change signal instance ref semantics under static analysis\n\n* Translation updates:\n - Georgian\n - Hebrew\n\n\nOverview of changes in GLib 2.73.0\n==================================\n\n* Support nanosecond time precision in file attributes (work by Nitin Wartkar) (#369)\n\n* Add `g_list_store_find_with_equal_func_full()` API to make `GListStore` more\n  introspection friendly (work by Jason Francis) (#2447)\n\n* Document some GLib maintenance policies a bit better (work by\n  Nirbheek Chauhan, Philip Withnall) (#2596, !2648, !2649, !2664)\n\n* Remove FAM/gamin file monitor and `-Dfam` meson option, as libgamin was last\n  released in 2007 and is dead upstream (work by Emmanuele Bassi) (#2605)\n\n* Fix futex timespec type on 32-bit kernels with 64-bit userspace (#2634)\n\n* Deprecate g_dtls_client_connection_set_validation_flags() (work by Michael Catanzaro) (#2646)\n\n* Add support for automatically `NULL`-terminated `GPtrArray`s (work by Thomas Haller) (!1485)\n\n* A lot of cleanup of warnings and old tests (work by Emmanuel Fleury)\n\n* Various compilation and test fixes on Windows (work by Marc-André Lureau)\n  (!2499, !2540, !2569, !2582, !2592, !2599, !2600, !2656)\n\n* Fix detection of broken `poll()` implementation on macOS, broken since the\n  port to Meson (work by Haruka Ma) (!2571)\n\n* Add additional flags to `g_spawn_async_with_pipes_and_fds()` to make it more\n  easily introspectable (work by Nicola Fontana) (!2632)\n\n* Initial (incomplete) support for REUSE licensing (work by Philip Withnall) (!2663, !2665, !2666)\n\n* GObject construction performance improvements (work by Matthias Clasen) (!2672, !2673, !2674, !2677, !2680, !2690)\n\n* Add `g_idle_add_once()` and `g_timeout_add_once()` for one-shot sources (work by Emmanuele Bassi) (!2684, !2693)\n\n* Simplify zlib dependency resolution using new built-in Meson support for it (work by Eli Schwartz) (!2685)\n\n* Bugs fixed:\n - #369 file copy doesn't preserve nanosecond timestamps\n - #2312 gdbus-test-codegen tests leak GWeakRef objects\n - #2447 g_list_store_find_with_equal_func is not binding friendly\n - #2596 Policy on meson requirement bumping\n - #2605 Update Android CI to support API level 31\n - #2614 Remove FAM/gamin file monitor\n - #2625 g_warning_once fails to build with clang++\n - #2629 g_file_trash() does not work on directories inside a sandbox\n - #2633 Recent updates in gstdio.h breaks ABI on 64-bit MSVC builds\n - #2634 g_cond_wait_until: returning FALSE immediately on mips24\n - #2640 UWP warnings about extensions and verbs with glib 2.72.1\n - #2646 Should g_dtls_client_connection_set_validation_flags etc. be deprecated?\n - #2653 pango fails to build against glib main\n - !1485 array: add support for g_ptr_array_null_terminated()\n - !2449 Fix test suite on Windows\n - !2494 Cleanup warnings split 5\n - !2495 Cleanup warnings split 6\n - !2496 Cleanup warnings split 7\n - !2497 Cleanup warnings split 8\n - !2498 Cleanup warnings split 9\n - !2499 Various contenttype-related test fixes on win32\n - !2521 gobject: Add g_signal_group_connect_closure\n - !2534 gpowerprofilemonitor: Tweak wording of documentation to make more sense\n - !2539 Convert tests/gio-test.c to g_test framework\n - !2540 Various win32 tests skip & fixes\n - !2541 meson: simplify lookup of python command\n - !2543 ci: Update the Fedora CI image to Fedora 34\n - !2545 gutils: Add flags to g_format_size_full() to return only value or only units\n - !2550 Moving gobject tests from tests/gobjects to gobjects/tests\n - !2553 Moving tests/refcount/ directory to gobject/tests/\n - !2556 gdbusconnection: Use g_strv_contains() rather than a home-grown version\n - !2557 gdbusmethodinvocation: Fix a leak on an early return path\n - !2558 Move unit test on g_basename() function to glib/tests/fileutils.c\n - !2559 Move tests/relation-test.c to glib/tests/relation.c\n - !2560 ci: Update Coverity, mingw and Android CI images to Fedora 34\n - !2562 tests: Call openpty (if available) without using dlsym\n - !2563 glib: Format GDateTime ISO8601 years as %C%y\n - !2564 Move test files on slices from tests/ to glib/tests/\n - !2565 Revert \"meson: simplify lookup of python command\"\n - !2566 tests: Add more tests for GResolver response parsing\n - !2567 tests: Fix compilation when GLIB_DISABLE_DEPRECATION_WARNINGS is defined\n - !2569 Various win32 tests fixes\n - !2571 meson: Set BROKEN_POLL in macOS builds\n - !2572 gversionmacros: Add version macros for GLib 2.74\n - !2575 Move tests/spawn-test.c -> glib/tests/spawn-test.c\n - !2577 build: Post-release version bump to 2.73.0\n - !2579 Slice test\n - !2580 Moving slice-threadinit.c test to glib/tests/\n - !2581 Move tests/unicode-encoding.c to glib/tests/unicode-encoding.c\n - !2582 glib/win32: fix spawn from GUI regression\n - !2584 Move msvc warnings in meson.build file\n - !2585 GUnixFDList: Include only in unix build\n - !2586 Move test tests/unicode-normalize.c to glib/tests/\n - !2589 tests: Don’t exit gdbus-method-invocation test early on connection close\n - !2591 tests: Remove an incorrect assertion in converter-stream\n - !2592 gio/tests: DuplicateHandle() is inappropriate for SOCKET\n - !2594 ci: Expire CI artifacts after 1 week\n - !2597 tests: Make a string comparison on an error string more relaxed\n - !2598 ci: Combine style-check-diff and check-todos jobs into one\n - !2599 Various socket-related fixes for win32\n - !2600 GDate: Fix tests on Windows on certain locales\n - !2601 Move tests/onceinit.c to glib/tests/onceinit.c\n - !2602 tests: Ensure NormalizationTest.txt is installed for installed-tests\n - !2603 tests: Use G_TEST_OPTION_ISOLATE_DIRS in gdbus-peer-object-manager\n - !2604 tests: Reduce wakeup interval in gdbus-threading\n - !2606 tests: Fix a minor leak in the unicode-normalize test\n - !2607 Moving tests/mapping-test.c to glib/test/mapping.c\n - !2608 Fixes in tests\n - !2609 Remove tests/timeloop.c and tests/timeloopbasic.c\n - !2610 Expand tests on gbookmark file API\n - !2612 docs: Expand G_DEFINE_BOXED_TYPE docs with more detailed example\n - !2613 gtestutils: Include stdlib.h for exit function\n - !2614 Add inout annotations for g_iconv\n - !2615 Meson: Fix gio-windows-2.0 override name\n - !2617 gmessages: Error if g_log_set_writer_func() is called multiple times\n - !2619 gversion: Clarify that GLIB_CHECK_VERSION is a >= check\n - !2621 Fix the annotation of g_utf8_strncpy()\n - !2624 Expand ghook unit tests for a better coverage and add more checks\n - !2625 gsocket: Add assertions about socket address sizes for memcpy()\n - !2626 gio-tool: Fix a minor memory leak when using gio-set with bytestrings\n - !2627 gopenuriportal: Fix a use-after-free on an error path\n - !2628 Fix various scan-build warnings\n - !2630 build: Move lcovrc file to root so it’s picked up by Meson\n - !2631 Cast to ptrdiff_t instead of subtracting by null\n - !2632 g_spawn_async_with_pipes_and_fds uses out parameters as inputs\n - !2633 Fix closure annotations in callbacks' user data parameters\n - !2634 Move tests/threadpool-test.c to glib/test/thread-pool-slow.c\n - !2635 Add a couple of assertions to help with static analysis\n - !2636 ghmac: Fix some signed/unsigned issues with g_checksum_update()\n - !2637 guri: Preallocate a buffer for building URIs\n - !2638 fuzzing: Only set the writer function once\n - !2639 Move tests/thread-test.c to glib/tests/thread-deprecated.c\n - !2642 meson: Check rres.compiled() before calling rres.returncode()\n - !2645 Remove unnecessary test tests/mainloop-test.c duplicated in glib/tests/mainloop.c\n - !2646 Add some more assertions to help scan-build out\n - !2648 docs: Add a code of conduct document\n - !2649 Various updates to documentation and misc files in the root directory\n - !2650 meson: Use range() instead of listing all stable versions\n - !2651 Replace single quotes in gio/tests/codegen.py\n - !2652 resources: Hide external data symbol\n - !2653 build: Remove a few Meson workarounds and FIXMEs\n - !2654 gtask: use g_strconcat() in g_task_return() only if needed\n - !2655 Fix typo in gio/meson.build\n - !2656 gio: various unix/fd-related enablement on win32\n - !2657 ci: Temporarily allow failure of macOS CI runner until it’s fixed\n - !2658 tests: Fix a double-close of a GSource in tests\n - !2659 Cleaning a file left behind by glib/tests/bookmarkfile.c test case\n - !2660 Move tests/module-test.c to gmodules/tests/\n - !2663 docs: Initial REUSE licensing support\n - !2664 docs: Add compiler and toolchain requirements from the wiki\n - !2665 glib/gio/tests: Add SPDX license headers automatically\n - !2666 fuzzing: Add copyright/licensing headers to fuzzing files\n - !2669 Add a Unicode testcase\n - !2671 Add another Unicode testcase\n - !2672 gtype: small optimization\n - !2673 param: Avoid strcmps\n - !2674 Avoid g_type_peek_value_table\n - !2675 docs: Use G_PARAM_STATIC_STRINGS in examples and explain it more\n - !2677 param: Add a value_is_valid vfunc\n - !2679 Rename user data parameters to user_data\n - !2680 Speed up object finalization\n - !2684 Add one-shot idle and timeout functions\n - !2685 meson: use builtin dependency lookups for zlib\n - !2686 gitlab-ci: remove meson-junit-report.py conversion\n - !2687 gitlab-ci: left-over from junit cleanup\n - !2688 gparamspecs: Remove redundant NULL checks\n - !2689 build: update sysprof configuration options\n - !2690 gobject: Keep a count of construct params\n - !2693 gmain: Refactor idle-once and timeout-once to avoid a closure allocation\n\n* Translation updates:\n - Basque\n - Bulgarian\n - Catalan\n - Croatian\n - Czech\n - Danish\n - English (United Kingdom)\n - French\n - Galician\n - German\n - Hungarian\n - Indonesian\n - Italian\n - Lithuanian\n - Nepali\n - Polish\n - Portuguese\n - Portuguese (Brazil)\n - Russian\n - Slovenian\n - Spanish\n - Swedish\n - Turkish\n - Ukrainian\n\n\nOverview of changes in GLib 2.72.0\n==================================\n\n* Bugs fixed:\n - #2620 g_time_zone_new_offset() assertion failure if offset >= 25 hours\n - !2538 Various unit test fixes\n - !2542 fuzzing: Fix test failure with G_DISABLE_ASSERT\n - !2547 gprintf: Fix a memory leak with an invalid format in g_vasprintf()\n - !2548 tests: Various fixes to gdbus-auth, gdbus-non-socket, gdbus-connection-flush, spawn-multithreaded tests\n - !2551 tests: More flaky test fixes to converter-stream and test-printf\n - !2552 gtlsconnection: fix typo in docs\n\n* Translation updates:\n - Czech\n - French\n - Friulian\n - Hebrew\n - Hungarian\n - Italian\n - Kazakh\n - Polish\n - Romanian\n - Serbian\n - Swedish\n\n\nOverview of changes in GLib 2.71.3\n==================================\n\n* Fix flaky `GDebugController` tests (!2504)\n\n* Numerous small documentation updates\n\n* Bugs fixed:\n - #517 g_utf8_collate returns 0 on U+C5D0 vs U+CD94\n - #1929 gdbus-connection-flush: setup_client_cb: Exhausted all available authentication mechanisms (tried: EXTERNAL, DBUS_COOKIE_SHA1)\n - #2589 Hash sign misinterpreted as heading\n - #2598 g_main_loop_run() may leak a GMainLoop reference\n - #2609 Clarify documentation for g_log_set_debug_enabled()\n - #2611 Unspecified options considered present\n - #2612 side effects of ensure_valid_dict result used in g_return_if_fail macro\n - #2613 Naked magic literal in gvariant.h\n - !1707 Add cache to g_unix_mount_points_get()\n - !2424 Remove old test file tests/testglib.c\n - !2451 glib: fix buffer overflow in g_canonicalize_filename()\n - !2466 Various minor fixes for empty argv handling\n - !2480 Various glib/tests/date fixes on win32\n - !2485 Various spawn-related test fixes on win32\n - !2490 Cleanup warnings split 1\n - !2491 Cleanup warnings split 2\n - !2492 Cleanup warnings split 3\n - !2493 Cleanup warnings split 4\n - !2501 glib-compile-resources: Fix a memory leak of the compiler option\n - !2502 tests: Merge iochannel-test into io-channel tests in glib directory\n - !2503 gbacktrace: Fix a set-but-not-used variable\n - !2504 gdebugcontrollerdbus: Track pending tasks with weak refs\n - !2505 tests: Stop ignoring test failures on macOS\n - !2506 gresource-tool: Fix unused-but-set-variable warn with G_DISABLE_ASSERT\n - !2507 ci: Drop custom dependency builds from installed-tests\n - !2508 codegen: Reformat parser.py according to black\n - !2509 tests: Fix various small memory leaks\n - !2510 gdesktopappinfo: Fix a leak when launching URIs over D-Bus\n - !2512 doc: Extend a bit G_DECLARE_* documentation example\n - !2513 gmain: Expand documentation about GSource priorities a little\n - !2514 ci: Various cleanups and moving Android API 21 and FreeBSD 12 to scheduled run\n - !2515 gmessages: Fix typo in docs\n - !2516 glocalfileinfo: Always define _g_stat_mtim_nsec, etc.\n - !2517 meson: Add schemasdir and giomoduledir to gio dependency\n - !2518 meson: Set GIO_EXTRA_MODULES in devenv\n - !2519 gdebugcontrollerdbus: Mark a variable as G_GNUC_UNUSED\n - !2520 tests: Remove threads from mock-resolver/network-address test\n - !2523 Add handling of NULL time_t* pointer as argument\n - !2524 Revert \"meson: Add schemasdir and giomoduledir to gio dependency\"\n - !2525 meson: Add schemasdir and giomoduledir to gio dependency\n - !2526 Remove unused test tests/testgdateparser.c\n - !2527 Move tests/type-test.c to glib/tests/types.c\n - !2528 meson: Add PYTHONPATH to load GDB helper module\n - !2531 gtask: Document that task name is set by g_task_set_source_tag()\n\n* Translation updates:\n - Basque\n - Catalan\n - Chinese (China)\n - Croatian\n - Danish\n - German\n - Hebrew\n - Indonesian\n - Korean\n - Lithuanian\n - Romanian\n - Russian\n - Spanish\n - Turkish\n\n\nOverview of changes in GLib 2.71.2\n==================================\n\n* Rework `glib-compile-resources` to output compiler-specific files to reduce\n  compilation time; see the new `--compiler` option (work by Emmanuele Bassi) (#2492)\n\n* Add a cross-platform API for aligned memory allocations (`g_aligned_alloc()`,\n  `g_aligned_alloc0()` and `g_aligned_free()`) (work by Emmanuele Bassi) (#2574)\n\n* Deprecate `force_posix_threads` configure option, since it was a workaround\n  for static linking on Windows (#2592)\n\n* Add `GBindingGroup` and `GSignalGroup` APIs (work by Christian Hergert and\n  Garrett Regier) (!2235)\n\n* Implement FD remapping support for `g_spawn_async_with_pipes_and_fds()` on\n  Windows (work by Marc-André Lureau) (!2458)\n\n* Add an async file move API, `g_file_move_async()` (work by Lucas Schwiderski) (!2469)\n\n* Bugs fixed:\n - #1190 gapplication: Add an org.gtk.Debugging interface\n - #2329 GApplication CLI parsing of DOUBLE type failure\n - #2492 glib-compile-resources contains resource data twice and creates large output files\n - #2563 g_test_build_filename and friends not safe to call after g_test_run() has finished\n - #2574 Add API for aligned allocations\n - #2592 Consider deprecating 'force_posix_threads' build option\n - #2601 Missing <para> tag in generated files\n - !2235 Add GBindingGroup and GSignalGroup\n - !2378 gtestutils: Mention the unit used for the test timer\n - !2404 File tests\n - !2433 Remove tests/testgdate.c from tests\n - !2458 Implement fd passing for Windows spawn\n - !2464 Amend g_bus_get* documentation regarding private connection\n - !2465 gi: expose some files as variable for gobject-introspection\n - !2467 ci: Add link to Coverage output at end of coverage job\n - !2468 gfile: resolve_relative_path isn't nullable\n - !2469 Implement async file movement\n - !2471 Fix test on the date format for FreeBSD and MacOS X.\n - !2472 Fix test date (again)...\n - !2473 Fix glib/test/date.c for FreeBSD/OpenBSD/MacOS X\n - !2476 Add G_UNICODE_SCRIPT_MATH to GUnicodeScript\n - !2477 Improve coverage of two digit years in gdate tests\n - !2481 Fix glib/tests/fileutils on win32\n - !2482 Fix unit test on date format '%Z' which is too versatile to be trustable\n - !2483 Fix glib/tests/gdatetime on win32\n - !2484 tests: Use g_test_skip() to skip a test on Windows\n - !2487 gconstructor.h: Visual Studio: Only include gslist.h if needed\n - !2488 Fix some problems with g_aligned_alloc() tests\n\n* Translation updates:\n - Basque\n - Catalan\n - Chinese (China)\n - Czech\n - French\n - Galician\n - Indonesian\n - Japanese\n - Polish\n - Portuguese\n - Portuguese (Brazil)\n - Russian\n - Slovenian\n - Spanish\n - Ukrainian\n\n\nOverview of changes in GLib 2.71.1\n==================================\n\n* Basic support for static builds on Windows (work by Loïc Le Page,\n  Marc-André Lureau, with contributions from Xavier Claessens, Nirbheek Chauhan,\n  Charlie Barto, Luca Bacci, Amos Wenger) (#692, #2585, !2442)\n\n* Add `GDebugController` and a D-Bus implementation which exposes whether\n  debug output is enabled in a process using the `org.gtk.Debugging` D-Bus\n  interface (work by Philip Withnall) (#1190)\n\n* Support for `AF_UNIX` sockets on Windows 10 (and later) (work by Marc-André Lureau) (#2487)\n\n* Several important fixes to GDBus message and GVariant parsing of invalid data (work by Sebastian Wilhelmi) (#2557, #2572)\n\n* Fix potential data loss due to missing fsync when saving files on btrfs (work by Sebastian Keller) (!2425)\n\n* Fix potential buffer overflows in `garray.c` for very large `GArray`s and `GPtrArray`s (work by Tobias Stoeckmann) (#2578)\n\n* Fix FDs in gspawn not being closed and causing process hangs if `close_range()` fails unexpectedly (work by Dan Nicholson) (#2580)\n\n* Fix `g_find_program_in_path()` not returning an absolute path if `$PATH` is relative (work by Christoph Niethammer) (#2586)\n\n* Add support for loading PKCS#12 encrypted files in `GTlsCertificate` (work by Patrick Griffis) (!2239)\n\n* A number of improvements to unit tests (work by Emmanuel Fleury, Charlie Barto) (!2399, !2400, !2402, !2403, !2428, !2431, !2432, !2434)\n\n* Support `LOCAL_PEERPID` on macOS, giving partial support for PIDs in\n  `GCredentials` on that platform (work by Ignacio Casal Quinteiro) (!2362)\n\n* Add `g_get_user_state_dir()` to support `XDG_STATE_HOME` (work by Sophie Herold) (!2395)\n\n* Add `g_hash_table_new_similar()` to copy a hash table and its hash/equal functions without its data (work by Jonas Ådahl) (!2405)\n\n* Support D-Bus client authentication with `EXTERNAL` on Windows (work by Marc-André Lureau) (!2429)\n\n* Add a reStructuredText documentation generator to `gdbus-codegen` (work by Emmanuele Bassi) (!2448)\n\n* Add a Windows implementation of `GMemoryMonitor` (work by Marc-André Lureau) (!2452)\n\n* Bugs fixed:\n - #692 meta: Fix static build on Windows\n - #1190 gapplication: Add an org.gtk.Debugging interface\n - #2487 Add support for native unix domain sockets on WIN32 to GLib.Socket and related classes\n - #2550 possible GDateTime issue with localtime on Illumos/Solaris\n - #2557 Arrays of zero-element tuples with non-zero length lead to infinite loops in g_dbus_message_new_from_blob\n - #2559 2.71.0: compile and link time warnings\n - #2560 Link error xdgmime.c: unresolved external symbol S_ISREG when building with VS2022\n - #2564 Hangul Jamo Extended-B should be 0-width\n - #2565 Build glib-2.71.0 failed in Windows using MSYS2-MINGW64\n - #2571 Cross build error \"undefined reference to `_g_binary_test1_resource_data'\" when building tests for Windows on openSUSE Leap\n - #2572 Check for GVariant recursion depth before recursing\n - #2578 buffer overflows in garray.c\n - #2579 Outdated paths in INSTALL.in\n - #2580 gspawn doesn't set CLOEXEC if close_range fails unexpectedly\n - #2582 glib 2.71.0 muslc - build error missing sentinel in function call\n - #2585 Static link issue on Windows due to resource files being linked in twice\n - #2586 g_find_program_in_path not returning an absolute path\n - !2239 gtlscertificate: Add ability to load PKCS#12 encrypted files\n - !2362 credentials: support the local peerpid on macos\n - !2384 meson: Fix linking with static library in Windows\n - !2395 utils: Add XDG_STATE_HOME support\n - !2399 Move tests/env-test.c into glib/tests/environment.c\n - !2400 Prevent gtest tests from popping up dialog boxes\n - !2402 Improving glib/tests/environment.c\n - !2403 Improve test coverage of glib/tests/asyncqueue.c\n - !2405 ghash: Add g_hash_table_new_similar\n - !2407 tests: Fix environment test on FreeBSD\n - !2411 annotate `g_content_type_guess` parameter as filename\n - !2412 paramspec: fix unref annotation\n - !2413 Use meson dependency to link against apple framework\n - !2414 docs: Improve docs for gdbusutils.c\n - !2417 gtestutils: Fix minor typos in the g_test_get_filename() docs\n - !2423 Make clear in doc that signals are emitted synchroniously\n - !2425 gfileutils: Remove outdated BTRFS fsync optimization from set_contents\n - !2426 gdbus-codegen: Fix a typo in a comment\n - !2428 Merge tests/gobject/gvalue-test.c with gobject/tests/value.c\n - !2429 gdbus: make client work with EXTERNAL on Windows\n - !2431 Merge tests/gobject/paramspec-test.c into gobject/tests/param.c\n - !2432 Merge test/unicode-caseconv.c into glib/tests/unicode.c\n - !2434 Remove a disabled test case that was covered by glib/tests/collate.c\n - !2440 Improve g_ascii_formatd docs and preconditions\n - !2441 Reduce the amount of compile-time warnings\n - !2442 Fix tests with static build on Windows\n - !2447 giowin32: use gint64 and _lseeki64\n - !2448 Add reStructuredText documentation generator for gdbus-codegen\n - !2452 gio/win32: add GMemoryMonitorWin32\n - !2453 Add `(array length)` annotation to `g_tls_certificate_new_from_pkcs12()`\n - !2454 gdbusmessage, gvariant and garray fixes\n - !2456 tests: Pass --internal and -z noexecstack to glib-compile-resources tests\n - !2459 gio: add missing zlib dependency in gio-windows-2.0.pc\n - !2461 Fix memory leak in gio/gdbusauthmechanismsha1.c\n - !2463 Revert \"Merge branch 'fix-windows-pc' into 'main'\"\n\n* Translation updates:\n - Catalan\n - Chinese (China)\n - Czech\n - Galician\n - Hebrew\n - Indonesian\n - Lithuanian\n - Polish\n - Portuguese\n - Portuguese (Brazil)\n - Russian\n - Spanish\n - Ukrainian\n\n\nOverview of changes in GLib 2.71.0\n==================================\n\n* Fix network changes not being signalled from NetworkManager (work by\n  Julian Andres Klode) (#2505)\n\n* Fix build when building with --fatal-meson-warnings (work by Eli Schwartz) (!2304)\n\n* Fix use of the default log writer with journald namespaces (diagnosis by Ilya Basin) (#2530)\n\n* Fix hang in `dbus-daemon` under `GTestDBus` when `G_MESSAGES_DEBUG=all` is set (work by Marco Trevisan) (#2537)\n\n* Speed up `g_canonicalize_filename()` to avoid pathogenic cases with `..` (work by Sebastian Wilhelmi) (#2541)\n\n* Fix URI for pcre subproject as it’s moved upstream (work by Albert Astals Cid) (!2324)\n\n* Fix storing GSettings dictionaries on macOS (work by Maurice) (#2527)\n\n* Speed up ‘remove dot segments’ algorithm in `GUri` to avoid pathogenic cases with `..` (work by Sebastian Wilhelmi) (#2526)\n\n* Fix infinite loops in D-Bus message parsing for truncated inputs (work by Sebastian Wilhelmi) (#2528)\n\n* Improve correctness of version information returned by `g_get_os_info()` for Windows 10/Server 2019+ (work by Chun-wei Fan) (#2443)\n\n* Various fixes to GWeakRef cleanup (#865, #2390) and toggle refs (#2394) (work by Marco Trevisan)\n\n* Add `G_DBUS_PROXY_FLAGS_NO_MATCH_RULE` flag for disabling match rules when creating a `GDBusProxy` (#1109)\n\n* Fix FD remapping in `g_spawn_async_with_pipes_and_fds()` with certain values of target FDs (#2503, #2506) (work by Michael Catanzaro)\n\n* Make `GDBusProxy::g-signal` signal detailed with D-Bus signal names (#2536) (work by Aleksandr Mezin)\n\n* Emit `launched` signal for D-Bus activation of apps with `GDesktopAppInfo` (!2227) (work by Guido Günther)\n\n* Fix IDs of `GDesktopAppInfo`s which are constructed from a `.desktop` file in a subdirectory (!2283) (work by Ivalyo Dimitrov)\n\n* Add `--interactive` option to `gdbus call` (!2329)\n\n* Add `G_SUBPROCESS_FLAGS_SEARCH_PATH_FROM_ENVP` to `GSubprocess` (!2333) (work by Hristo Venev)\n\n* Bugs fixed:\n - #475 Add g_alloca0() and g_newa0()\n - #847 g_set_prgname() should be thread-safe\n - #865 GWeakRefs not cleared by g_object_run_dispose()\n - #1109 [PATCH] GDBusProxy: add G_DBUS_PROXY_FLAGS_NO_MATCH_RULE flag\n - #1231 gobject declare macros cause alignment warnings on armhf/armhf/mipsel\n - #1331 GArray with 10 million items overflows index arithmetic\n - #1735 Get back to a -werror build\n - #1781 Sort output of gsettings command-line tool\n - #2310 contenttype test leaks xdg-mime internal data\n - #2390 GWeakRef's aren't cleared again on finalization (and not fully thread-safe)\n - #2394 Toggle refs notification may not handle multiple threads correctly\n - #2400 Use-after-free in invoke_set_property_in_idle_cb()\n - #2401 GDBus runtime warning from remove_interfaces()\n - #2404 GTask: clarify that GTask assumes are running mainloop\n - #2426 GSettings delayed apply generates runtime warnings\n - #2443 Add Windows 11 support to get_windows_version()\n - #2468 GSequence pessimizes itself and slows down\n - #2471 g_output_stream_write_all_async prints error when count == 0 and content == NULL\n - #2488 Unix password unit test fails on FreeBSD 13\n - #2489 Add a (diagnostic) warning for finalized objects with floating refs\n - #2490 Upgrade to Unicode Character Database 14.0\n - #2496 Wrong parameter type for g_simple_proxy_resolver_set_ignore_hosts\n - #2498 GIR: Remove non-existing IOModule methods `load`, `unload`\n - #2500 Able to export object manager and object on root path, but not other paths\n - #2503 gspawn.c may clobber target fds\n - #2505 g_network_monitor_nm never updates on connection change (listens for signal on wrong dbus interface)\n - #2506 gspawn.c fails to close child_err_report_fd if it is duped to avoid conflation with one of the target_fds\n - #2507 Strange behavior of GFileEnumerator with GVfs locations\n - #2514 test suite failure in glib/tests/gdatetime.c if German locale de_DE.ISO-8859-1 is available\n - #2518 Misleading message when privileged program starts G_BUS_TYPE_SESSION\n - #2520 g_date_new_ functions return NULL on invalid input\n - #2523 MacOS generates warnings for g_size_checked_mul()\n - #2526 fuzz_uri_parse failure\n - #2527 Error storing dictionary with string keys as GSettings on macOS\n - #2528 g_dbus_message_new_from_blob goes into infinite loop for certain inputs\n - #2529 load_user_special_dirs returns NULL in certain cases\n - #2530 g_log_writer_is_journald fails if a Journal Namespace is used\n - #2536 GDBusProxy: make g-signal detailed\n - #2537 GTestDBus dbus daemon causes child process to hang when using verbose output\n - #2541 g_canonicalize_filename should work in linear time complexity\n - #2553 Consider not depending on strtoull_l and strtoll_l as much\n - !1960 Add g_main_context_new_with_flags() and ownerless polling option\n - !1968 gspawn: Implement fd remapping for posix_spawn codepath, and fix file descriptor conflation issues\n - !1991 Keyfile parsing performance improvements\n - !2029 Updating xdgmime\n - !2064 gobject: Cleanup GWeakRef locations on object finalization\n - !2114 Coerce type cast to void* because it causes compiler warnings\n - !2191 docs: Add .editorconfig file\n - !2214 Document potential footgun with GTlsCertificateFlags and deprecate certain usages\n - !2223 Better detection of the cleanup attribute.\n - !2227 gdesktopappinfo: Emit \"launched\" signal for D-Bus activation too\n - !2242 gsettings: Add various missing (nullable) or (not nullable) annotations\n - !2244 gutils: Avoid segfault in g_get_user_database_entry\n - !2245 gdesktopappinfo: Do not call xterm when it does not exist, inform the caller the launch failed\n - !2246 gobject: Document it’s unsafe to call g_object_ref() from GWeakNotify\n - !2249 Add version macros for GLib 2.72 and bump version to 2.71.0\n - !2251 GString: Bump minimum size\n - !2254 Small optimization for g_object_set\n - !2255 gobject: Clarify behaviour of adding weak refs during disposal\n - !2257 Fix documentation for g_dbus_object_manager_get_object().\n - !2260 GWin32AppInfo: Do not assert about successful open'ing of registry keys\n - !2261 Provide built DLLs as Gitlab-CI artifacts\n - !2266 fix uninitial variable\n - !2273 Fix more (Windows) warnings\n - !2277 Revert \"Don't compile some unused functions in gio/xdgmime/\"\n - !2283 GDesktopAppInfo: Try to always correctly set id\n - !2284 update the proxy-libintl subproject to the latest release\n - !2285 fix issues found by svace static code analyzer\n - !2286 meson: fix warnings for extract_all_objects function\n - !2287 ci: Update CI images to latest stable Debian and Fedora, bump Meson dependency to 0.52\n - !2288 Update g_source_remove doc comment: the function doesn't always return TRUE\n - !2289 Update g_source_remove documentation for the returned value\n - !2290 mkdir path specified by XDG_RUNTIME_DIR\n - !2292 Fix cast from pointer to integer of different size warning in gio/gwin32appinfo.c\n - !2293 glib-private: Fix MSVC build with AddressSanitizer\n - !2294 Fix windows warnings\n - !2295 gutf8: Document that out args from g_utf16_to_utf8() are non-negative\n - !2303 Fix more windows warnings\n - !2305 gio: document GFile API when relative path is absolute\n - !2306 gunixmounts: Drop references to pamconsole mount option\n - !2308 gthread-win32: Remove an unnecessary volatile qualifier\n - !2309 Rename libpcre.wrap to pcre.wrap\n - !2310 tests: Fix a typo in a test message in gdatetime.c\n - !2311 Fix always true comparison warning in glib/garray.c\n - !2319 docs: Fix the GListModel description\n - !2323 Fix final warnings in Windows code\n - !2324 Fix link to pcre-8.37.tar.bz2\n - !2326 Improve some documentation related to GTlsDatabase\n - !2328 gutf8: add string length check when ending character offset is -1\n - !2329 gdbus: Add --interactive option to `gdbus call`\n - !2332 Changed gendered terms to be gender-neutral\n - !2333 gsubprocess: Add G_SUBPROCESS_FLAGS_SEARCH_PATH_FROM_ENVP\n - !2336 tests: Drop arbitrary and flaky waits from actions tests\n - !2339 ci: Bump Meson version to 0.60.1 on macOS\n - !2341 tests: Wait for gdbus-testserver to die when killing it\n - !2342 tests: Reformat mkenums.py slightly to make run-black.sh happy\n - !2345 gutils: Disable some dead code on macOS\n - !2347 Removing tests/asyncqueue-test.c from tests/\n - !2348 gio/tests/codegen.py: bump timeout to 100 seconds\n - !2349 Annotate `g_getenv()` and `g_environ_getenv()` return value as `nullable`\n - !2352 tests: Fix a flaky wait in converter-stream\n - !2353 Address some oddities around GResolver::reload\n - !2357 ci: Upgrade to clang-format-11 from clang-format-7\n - !2360 meson: specify when commands need to succeed in run_command\n - !2364 tests: Allow `objcopy --help` to fail, because it fails on FreeBSD\n - !2365 Add vfunc checks in gappinfo.c\n - !2368 De-duplicate g_nearest_pow() implementation and add some overflow protections to g_ptr_array_maybe_expand(), g_string_maybe_expand() and g_string_chunk_insert_len()\n - !2370 gqsort: Move test to glib/tests/\n - !2371 Freeze notification during object destruction\n - !2372 docs: Improve GVariant docs\n - !2373 glib.supp: Suppress one-time allocation in g_get_home_dir()\n - !2376 GSource: move test to glib/tests/\n - !2379 Merging tests/bit-test.c into glib/tests/utils.c\n - !2381 tests: Test the function forms of g_bit_*() APIs too\n - !2382 gfileutils: Correctly reset start value when canonicalising paths\n - !2385 gfileutils: Fix transfer annotation and whitespace issues\n - !2386 docs: Add API documentation links to the README\n - !2387 docs: Update the README a little\n - !2390 Merging tests/child-test.c into glib/tests/spawn-multithreaded.c\n - !2391 Removing redundant cxx test tests/cxx-test.cpp\n - !2392 Move tests/completion-test.c to glib/tests/completion.c\n - !2393 Removing unnecessary test on gdatetime.c\n - !2396 fuzzing: Add a fuzz test for parsing DNS records\n - !2397 Moving tests/dirname-test.c to glib/tests/fileutils.c\n - !2398 fix /list/position test\n\n* Translation updates:\n - Croatian\n - Friulian\n - Galician\n - Hebrew\n - Indonesian\n - Italian\n - Latvian\n - Lithuanian\n - Occitan (post 1500)\n - Persian\n - Polish\n - Portuguese\n - Portuguese (Brazil)\n - Romanian\n - Russian\n - Serbian\n - Slovak\n - Spanish\n - Swedish\n - Ukrainian\n\n\nOverview of changes in GLib 2.70.0\n==================================\n\n* Bugs fixed:\n - !2248 ci: Replace FreeBSD 11 with FreeBSD 13\n\n* Translation updates:\n - Croatian\n - Danish\n - English (United Kingdom)\n - French\n - German\n - Hungarian\n - Polish\n - Swedish\n - Turkish\n\n\nOverview of changes in GLib 2.69.3\n==================================\n\n* Bugs fixed:\n - #2425 g_settings_schema_key_range_check() misbehaves for int versus bool\n - #2472 Compiling anything with GCC <4.6 spews deprecation warnings\n - #2477 `g_invoke_closure` bindings API break.\n - #2481 GPowerProfileMonitorPortal does not notice initial power-saver-enabled status\n - !2219 doc: Explicitly said, that no null term. is needed\n - !2238 ci: Use C.UTF-8 locale on FreeBSD 12\n - !2240 gio: Fix conditions in memory-monitor test\n\n* Translation updates:\n - Basque\n - Catalan\n - Chinese (China)\n - Galician\n - Kazakh\n - Korean\n - Lithuanian\n - Romanian\n\n\nOverview of changes in GLib 2.69.2\n==================================\n\n* The `DBUS_SESSION_BUS_ADDRESS` environment variable is once more not used if\n  the process is `AT_SECURE` (setuid/setgid/setcap); this change was previously\n  applied and then reverted because it broke gnome-keyring (#2316)\n\n* Add `g_test_fail_printf()`, `g_test_skip_printf()`,\n  `g_test_incomplete_printf()` helper functions for printing messages when tests\n  end prematurely (work by Simon McVittie) (!2215)\n\n* Add portal implementation of `GPowerProfileMonitor` (work by\n  Bastien Nocera) (!2222)\n\n* Bugs fixed:\n - #2316 Re-harden DBUS_SESSION_BUS_ADDRESS for AT_SECURE processes in GLib 2.70\n - #2343 Document explicitly refcount mgmt of source-object during GAsyncReadyCallbacks\n - #2454 Read past the end of buffer in g_win32_package_parser_enum_packages\n - #2456 Frequent test failure on FreeBSD: glib/tests/thread-pool.c:197:test_thread_pool_full: 'free_func_called' should be TRUE\n - !2157 tests: Add missing wakeup calls to gdbus-names test\n - !2165 docs: Mention the stable/unstable support version in README.md\n - !2211 Improve documentation of various TLS stuff\n - !2215 gtestutils: Add more convenience functions\n - !2216 tests: Fix error handling when testing gtestutils\n - !2222 gio: Add portal version of GPowerProfileMonitor\n - !2224 Docs: Mention that G_VA_COPY() must be followed by `va_end()`\n - !2225 build: Fix implicit declaration of function errors\n - !2226 Annotate the GString constructors\n\n* Translation updates:\n - Czech\n - Hebrew\n - Slovenian\n - Spanish\n - Swedish\n\n\nOverview of changes in GLib 2.69.1\n==================================\n\n* Support categories in desktop notifications (`GNotification`)\n  (work by Guido Günther) (#2446)\n\n* Add `GPowerProfileMonitor` for monitoring when to use less power (due to being\n  on battery power, electricity being expensive or high-carbon, etc.)\n  (work by Patrick Griffis, Bastien Nocera) (#2444)\n\n* Allow static names to be set for `GSource`s to avoid unnecessary string copies\n  (work by Matthias Clasen) (!2196)\n\n* Bugs fixed:\n - #203 API: need g_module_open() variant with GError\n - #2058 win32: GPrivate can leak some objects\n - #2321 Add a GTypeFlag for final types\n - #2429 safe_fdwalk/safe_closefrom for Solaris 11.3/11.4\n - #2439 gio trash doesn't recognize existing trash directory in non-fs-root mount\n - #2446 Support `categories` for notifications\n - #2452 g_string_replace() loops 2**32 times when replacing empty string\n - !2177 gio/tests/g-file-info: don't assume million-in-one events don't happen\n - !2178 Clarify GValue documentation\n - !2179 Update GValue doc: How to use GBoxed with GValue\n - !2180 correctly use 3 parameters for close_range\n - !2181 gclosure: Fix the invoke() return_value annotation\n - !2182 glocalfileinfo: Fix usec/nsec confusion with filetimes on Windows\n - !2184 gspawn: Use CLOSE_RANGE_CLOEXEC if available\n - !2188 g_boxed_type_register_static, G_DEFINE_BOXED_TYPE: added correlating information\n - !2192 Fix more warnings\n - !2193 glib.supp: Expand match kinds for g_get_language_names() suppressions\n - !2194 Add GPowerProfileMonitor\n - !2195 Fix some test suite memory leaks\n - !2196 mainloop: Add g_source_set_static_name\n - !2197 GResource compiler: Prefix static [con|de]strutors with c_name\n - !2198 Port internal uses to use g_source_set_static_name()\n - !2200 Fix doc stanzas for GDataInputStream properties\n - !2201 Fix a Unicode typo\n - !2202 Document the stance on ID-based mainloop APIs\n - !2204 tests: Add a test for Unicode normalization\n - !2205 GWin32RegistryKey / GWin32AppInfo registry watch fixes\n - !2206 Adapt documentation to gi-docgen\n - !2210 GWin32AppInfo: Fix missing initialization\n\n* Translation updates:\n - Indonesian\n - Portuguese\n - Portuguese (Brazil)\n - Russian\n - Ukrainian\n\n\nOverview of changes in GLib 2.69.0\n==================================\n\n* Fix a crash in `GKeyFile` when parsing a file which contains translations\n  using a `GKeyFile` instance which has loaded another file previously (#2361)\n\n* Pin GIO DLL in memory on Windows (!2016)\n\n* Fix building third-party projects against GLib on CentOS 7 (work by\n  Ignacio Casal Quinteiro) (#2387)\n\n* Add `g_thread_pool_new_full()` API to allow queued `GThreadPool` data to be\n  freed if the pool is freed early (work by Nitin Wartkar) (#121)\n\n* Ensure `dlerror()` is used with locking as it’s not thread-safe in some libc\n  implementations (#399)\n\n* Add `g_dbus_is_error_name()` and `g_dbus_is_interface_name()` convenience\n  functions (work by Nitin Wartkar) (#402)\n\n* Drop internal libpcre copy in favour of a subproject from wrapdb (#962, #642)\n\n* Add `g_prefix_error_literal()` helper function (work by Emmanuel Fleury,\n  building on work by Dan Williams) (#663)\n\n* Add `g_bytes_get_region()` to get data from a `GBytes` with range checks\n  (work by Nitin Wartkar, building on work by Allison Karlitskaya) (#1098)\n\n* Add `g_object_take_ref()` to sink a floating ref (work by Nitin Wartkar,\n  building on work by Allison Karlitskaya) (#1112)\n\n* Optimise grefcount atomic operations (work by Nishal Kulkarni) (#1583)\n\n* Fix resolving child GSettings schemas from the parent’s schema source (work\n  by Christian Persch) (#1884)\n\n* Fix `g_date_time_format()` return value encoding if `LC_TIME` is not a UTF-8\n  locale but other locale settings are (work by Frederic Martinsons) (#2055)\n\n* Set app name in freedesktop.org notifications with `GNotification` (work\n  by André Apitzsch) (#2069)\n\n* Significantly improve retrieval of mount data on Windows (work by LRN based\n  on initial analysis by Jehan Pagès) (#2096)\n\n* Add `g_file_info_get_(access|creation)_date_time()` accessors (work\n  by Abanoub Ghadban) (#2281)\n\n* Always apply the remove_dot_segments algorithm to URIs in `g_uri_parse()`;\n  previously it was only applied to relative URIs (work\n  by Carlos Garcia Campos) (#2342)\n\n* Rename git `master` branch to `main` (#2348)\n\n* Various macro and version check cleanup (work by Gaël Bonithon,\n  Robin Verdenal-Tallieux, Nishal Kulkarni) (#2376, #2388, #2389)\n\n* Add a `GTlsConnectionClass.get_negotiated_protocol` vfunc so that\n  `g_tls_connection_get_negotiated_protocol()` can be made thread-safe\n  (work by Michael Catanzaro) (#2393)\n\n* Improve guess about whether a Windows process is a console process\n  (work by Princeton Ferro with input from LRN) (!1662)\n\n* Add `g_steal_fd()` function (work by Simon McVittie) (!1966)\n\n* Add `g_spawn_check_wait_status()` and distinguish more carefully between\n  wait status and exit status in the `GSpawn` API (work by Simon McVittie) (!1967)\n\n* Document GLib’s security policy; see\n  https://gitlab.gnome.org/GNOME/glib/-/blob/main/SECURITY.md (!1985)\n\n* Add `g_tree_remove_all()` (work by Lighto-Ku) (!1986)\n\n* Simplify exception handling on Windows to eliminate risk of it failing due\n  to prior heap corruption (work by LRN) (!2031)\n\n* Fix handling EOF when reading from SOCKS5 proxy stream (work\n  by Benjamin Berg) (!2032)\n\n* Unset the registered state of a `GApplication` after it has shut down (work\n  by Marco Trevisan) (!2056)\n\n* Support `GPattern` as a boxed type (work by Marco Trevisan) (!2066)\n\n* Add `g_tls_connection_get_protocol_version()` and\n  `g_tls_connection_get_ciphersuite_name()` to get TLS connection information\n  (work by Michael Catanzaro) (!2077)\n\n* Make TLS private key properties readable in `GTlsCertificate` (work\n  by Michael Catanzaro) (!2087)\n\n* Fix detection of static libintl when building on macOS (work\n  by Jonas Hahnfeld) (!2109)\n\n* Add `g_strv_builder_addv()` and `g_strv_builder_add_many()` to the\n  `GStrvBuilder` API (work by Alexandros Theodotou) (!2112)\n\n* Add `not-valid-before`, `not-valid-after`, `subject-name`, `issuer-name`,\n  `dns-names`, `ip-addresses` properties to `GTlsCertificate`\n  (work by Ross Wollman) (!2113, !2142)\n\n* Add PKCS#11 flags to `GTlsPasswordFlags` (work by Patrick Griffis) (!2126)\n\n* Bugs fixed:\n - #121 GThreadPool and the ability to free data waiting to be handled\n - #229 g_match_info_fetch_named not return empty string as expected\n - #310 ref doc doesn't talk about \"helper getters\" optimization in g_file_info.c\n - #399 dlerror() not thread-safe in all libc, making gmodule-dl.c's fetch_dlerror fail sometimes\n - #402 please consider: #define g_dbus_is_error_name(x) g_dbus_is_interface_name (x)\n - #626 Add documentation example for GArray and g_array_set_clear_func()\n - #642 update to pcre 8.35+\n - #663 [patch] add g_prefix_error_literal()\n - #793 Potentially confusing error message when object doesn't exist\n - #817 gobject: Allow passing %NULL for @data in g_object_remove_toggle_ref\n - #962 drop embedded pcre copy\n - #1036 gdbusproxy stops tracking if dbus service restarts\n - #1098 GBytes: add range-checked pointer getter\n - #1112 GObject: add g_object_take_ref()\n - #1583 Optimise gatomicrefcount operations\n - #1864 Somewhat misleading documentation of GSourceFuncs\n - #1884 `g_settings_get_child` not compatible with `g_settings_schema_source_new_from_directory`\n - #2011 Add additional unit tests for D-Bus name watching\n - #2055 g_date_time_format() does not return UTF-8 if LC_TIME is not UTF8 but other locale settings are UTF-8\n - #2069 FreedesktopNotification fails to set app_name\n - #2096 SHGetFileInfoW() is not reliable (time-wise)\n - #2281 Add g_file_info_get_(access|creation)_date_time()\n - #2300 Crash on Windows MSVC build around gio\n - #2311 testfilemonitor test leaks ip_watched_file_t struct\n - #2340 GIO tests fail to build with clang-cl\n - #2342 g_uri_parse doesn't apply the remove_dot_segments algorithm to the path\n - #2348 Investigate renaming master git branch to main\n - #2352 RUN_FIRST | RUN_CLEANUP signals with a default handler ignore return values from user handlers\n - #2359 GLib 2.68.0: gio-querymodules segfaults on Windows\n - #2361 g_key_file_load_from_file segfaults on \"Key[*]=\"like lines\n - #2363 g_newa() doesn’t check for multiplication overflow\n - #2368 g_task_run_in_thread () limits are not clear\n - #2369 glocalfile: Add native exfat magic number to  filesystem list\n - #2376 GLIB_VERSION_MAX_ALLOWED < 2.60 does not warn when using G_GNUC_FALLTHROUGH\n - #2387 json-glib does not build with glib 2.68.1\n - #2388 Pixman compilation error due to glib\n - #2389 Use G_GNUC_CHECK_VERSION to check the GNUC version\n - #2393 g_tls_connection_get_negotiated_protocol() is not threadsafe\n - #2397 Slow to list device in windows\n - #2399 Change spelling of ‘serialise’ to ‘serialize’ in documentation\n - #2405 Mention that GNotification requires an installed .desktop file to work\n - #2409 Project crashes when executing g_application_mark_busy\n - #2414 Devhelp: Glib Reference Manual/Glib Overview/Running Glib Applications formatting issue.\n - #2416 certificate: g_tls_certificate_new_from_pem invalid read on non null terminated data\n - #2417 GFile: `g_file_replace_contents()` reports `G_IO_ERROR_WRONG_ETAG` when saving from a symlink\n - #2418 gatomic: __atomic functions are called for CV-qualified output variables\n - #2423 resources.c:656:test_resource_binary_linked: 'found' should be TRUE\n - !1514 gbookmarkfile: Don't crash if we're not visited\n - !1662 gspawn-win32: improve guess whether process is console process\n - !1812 docs: Expand documentation about D-Bus GUIDs\n - !1957 Fix more warnings\n - !1965 gversionmacros: Add version macros for GLib 2.70\n - !1966 Add g_steal_fd() to API\n - !1967 Distinguish more clearly between wait status and exit status\n - !1969 glib_typeof: Move definition to its own header\n - !1985 docs: Add a policy for handling security issues\n - !1986 make g_tree_remove_all public\n - !1996 Include glibconfig.h to get the G_OS_UNIX token\n - !1998 gpollableinputstream: Add missing annotation\n - !1999 goption.c: Simplfy parse_short_option()\n - !2004 Some improvements to clang-cl builds\n - !2005 introspection: Remove 'caller-allocates' from POD types\n - !2006 fuzzing: Add fuzz tests for functions which parse paths\n - !2008 tests: Deactivate tls-bindings test suite for windows\n - !2011 docs: Fix example program link\n - !2012 docs: Replace git.gnome.org with gitlab.gnome.org urls\n - !2013 fuzzing: Fix assertion failure in fuzz_paths.c\n - !2016 GIO W32: Pin gio DLL\n - !2023 gtlspassword: Fix g-i annotation of return for g_tls_password_get_value\n - !2025 [th/gdbus-cleanup] two minor cleanup patches for gdbusconnection.c\n - !2026 Split g_test_log() messages that contain multiple lines\n - !2027 Fix a handful of minor leaks found by Coverity\n - !2030 Fix more warnings\n - !2031 Re-simplify exception handling on Windows\n - !2032 gsocks5proxy: Handle EOF when reading from a stream\n - !2033 Fix annotation of count arguments\n - !2036 gmacros.h: use G_GNUC_CHECK_VERSION\n - !2038 Fix more warnings\n - !2039 Implement G_ANALYZER_NORETURN for Coverity\n - !2040 Fix more warnings\n - !2041 refcount: Clarify when the ref count ends up undefined\n - !2042 grefcount: Clarify that the initial reference count is 1\n - !2043 gmacros.h: use g_macro__has_attribute() where possible\n - !2046 gerror: Clarify docs around message requirements\n - !2047 Fix more warnings\n - !2048 Fix more warnings\n - !2049 Fix typo in g_socket_listener_accept_async()'s comment\n - !2050 gdbus: document completion after idle action for g_dbus_connection_signal_unsubscribe()\n - !2051 Add nullable annotations in GUnixMountEntry\n - !2052 g_string_replace(): Fix documentation of 'limit' parameter\n - !2054 docs: Fix formatting of code block\n - !2055 Improve handling of FILENAME_MAX\n - !2056 application: Unset the registered state after shutting down\n - !2063 Fix more warnings\n - !2066 gpattern: Register as Boxed type and support introspection for it\n - !2067 gmacros: missing check if __STDC_VERSION__ is defined\n - !2069 gdbus-tool: Actually use argv[0] basename as program name\n - !2071 gstring: Cleanup documentation of g_string_replace\n - !2074 Fix more warnings\n - !2075 gdtlsconnection: Fix a check for a vfunc being implemented\n - !2077 tls: add functions to get protocol version and ciphersuite name\n - !2078 gthreadedresolver: don't ignore flags in lookup_by_name_with_flags\n - !2080 guuid: fix shift operation to parse hex string in uuid_parse_string()\n - !2081 Fix more warnings\n - !2085 gcredentials.h: Fix comment typo\n - !2087 gtlscertificate: make private key properties readable\n - !2088 Fix more warnings\n - !2090 docs: Standardize spelling of serializ*\n - !2091 Fix more warnings (clang)\n - !2098 grefcount: Optimise g_atomic_ref_count_dec\n - !2099 gmacros.h: G_NORETURN: remove useless checks\n - !2100 tests: Add missing return value check in string test\n - !2101 Fix more warnings\n - !2104 tests: Drop use of g_test_bug_base()\n - !2105 tests: Use a temporary file in the bookmarkfile tests\n - !2106 Fix more warnings\n - !2108 glib spawn-singlethread test only if F_DUPFD_CLOEXEC is defined\n - !2109 meson: Fix detection of static libintl on macOS\n - !2112 gstrvbuilder: add addv and add_many to the API\n - !2113 tls: expose cert details on GTlsCertificate\n - !2119 Fix more warnings\n - !2120 gdbusobjectmanagerclient: Call GetManagedObjects async\n - !2123 gdbus: Add various missing (nullable) or (not nullable) annotations\n - !2126 gtlspassword: Add flags signifying PIN type for PKCS#11\n - !2127 gutils: ensure g_find_program_in_path() return an absolute path\n - !2130 Revert \"tests: Deactivate tls-bindings test suite for windows\"\n - !2139 gdbus, win32: Fix accidental dllexport in static builds\n - !2142 tls: expose SAN details on GTlsCertificate\n - !2143 compiling.xml: Don't recommend backticks\n - !2144 pcre: Drop internal libpcre copy\n - !2145 gunixmounts: Document NULL return value for g_unix_mount_for()\n - !2152 tests: A few small improvements to GBytes tests\n - !2153 docs: Fix annotations for optional arguments\n - !2155 glocalfilemonitor: Avoid a deadlock on finalization\n - !2162 testgdate: fix -Wmisleading-indentation warning\n - !2166 gtlscertificate: Add more annotations to new properties\n - !2167 g_value_set_string description: clarified (unified), that v_string is a copy.\n - !2173 gasyncqueue: Add missing (nullable) annotation to free function\n - !2174 data-to-c.py: generate new-line at the end of the file\n\n* Translation updates:\n - Chinese (China)\n - English (United Kingdom)\n - Hebrew\n - Nepali\n - Occitan (post 1500)\n - Serbian\n\n\nOverview of changes in GLib 2.68.0\n==================================\n\n* Bugs fixed:\n - !1987 build: Drop gconstructor_as_data_h usage from glib-compile-schemas\n - !1989 glib.supp: Generalize some suppressions\n - !1992 gbytesicon: Fix error in g_bytes_icon_new() documentation\n - !1994 glocalfileoutputstream: Tidy up error handling\n - !1995 tests: Fix copy/paste error in queue test\n\n* Translation updates:\n - Czech\n - Finnish\n - Italian\n - Korean\n - Lithuanian\n - Polish\n - Romanian\n - Slovenian\n - Turkish\n\n\nOverview of changes in GLib 2.67.6\n==================================\n\n* Fix a security issue when using `g_file_replace()` with\n  `G_FILE_CREATE_REPLACE_DESTINATION` (#2325)\n\n* Disallow operations on the empty path with `g_file_new_from_path()` (#2328)\n\n* Various fixes for GLib when building with clang-cl on Windows (work by\n  Aleksandr Mezin) (#2341, #2344)\n\n* Bugs fixed:\n - #2325 file-roller symlink attack\n - #2327 Teach glib-mkenums about GLIB_AVAILABLE_ENUMERATOR_IN_2_68, and start using it\n - #2328 g_file_new_for_path(\"\") yields CWD, which seems wrong\n - #2341 glib-genmarshal output is sometimes empty because output file is not closed\n - #2344 c_std=c11: gbitlock.c: ‘asm’ undeclared\n - !1962 Validate D-Bus machine ID after loading\n - !1976 Use the right permissions for directory watching on Win32\n - !1977 gio/tests/{meson.build,pollable.c}: Determine libutil SONAME at build time\n - !1980 glib.supp: Add another system thread suppression\n\n* Translation updates:\n - Basque\n - Catalan\n - Czech\n - French\n - Galician\n - German\n - Hungarian\n - Indonesian\n - Korean\n - Latvian\n - Portuguese\n - Portuguese (Brazil)\n - Serbian\n - Spanish\n - Swedish\n - Ukrainian\n\n\nOverview of changes in GLib 2.67.5\n==================================\n\n* Fix more issues with `glib_typeof` macro from 2.67.3–2.67.4 (work by\n  Iain Lane, Simon McVittie) (#2331, !1975)\n\n* Fix regression with some FD mappings passed to `g_subprocess_launcher_spawnv()`\n  caused by changes for #2097 in GLib 2.67.4 (work by Olivier Fourdan,\n  Philip Withnall) (#2332)\n\n* Fix detection of `str[n]casecmp()` when building with `clang-cl` (work by\n  Aleksandr Mezin) (#2337)\n\n* Use zlib from subproject if configured with `wrap_mode=forcefallback` (work by\n  Seungha Yang) (!1959)\n\n* Bump Visual Studio compilation requirement to VS 2012, and Windows 8 SDK for\n  GLib 2.67.x onwards (work by Chun-wei Fan) (!1970)\n\n* Bugs fixed:\n - #832 Some tweaks re: GRWLock\n - #2331 glib 2.67.3: <glib.h> can no longer be included in extern \"C\" blocks\n - #2332 Glib 2.67.4 causes gnome-shell to exit when spawning Xwayland on demand\n - #2333 Missing relation between g_file_info_get_size() and G_FILE_ATTRIBUTE_STANDARD_SIZE attribute in documentation\n - #2337 Linking fails when building with clang-cl because of str[n]casecmp\n - !1936 tests: Fix leak of dlopened module in pollable test\n - !1954 Change SkipAsyncData fields to be gsize (and not gssize)\n - !1956 The ETag returned by various GFile functions is nullable\n - !1959 meson: Use subproject zlib if \"wrap_mode=forcefallback\" was specified\n - !1961 gkeyfilesettingsbackend: check for errors when creating file monitors\n - !1970 README.win32.md: Mention about Window 8+ SDK requirement\n - !1971 gio/tests/pollable.c: Fix build on non-Linux UNIX\n - !1975 gatomic.h: Make `glib_typeof` API break opt in.\n\n* Translation updates:\n - Basque\n - Danish\n - English (United Kingdom)\n - Galician\n - German\n - Indonesian\n - Lithuanian\n - Portuguese\n - Portuguese (Brazil)\n - Slovenian\n\n\nOverview of changes in GLib 2.67.4\n==================================\n\n* Add a `g_string_replace()` function (work by Joshua Lee) (#225)\n\n* Add `G_DBUS_SERVER_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER` flag to simplify\n  the common case for writing a D-Bus authentication observer, allowing most\n  uses of `GDBusAuthObserver` to be dropped (#1804)\n\n* Add a new `g_spawn_with_pipes_and_fds()` variant which supports renumbering\n  FDs (#2097)\n\n* Add new g_memdup2() API to replace g_memdup(), which is vulnerable to a\n  silent integer truncation and heap overflow problem if not used carefully\n  (discovered by Kevin Backhouse, work by Philip Withnall) (#2319)\n\n* Fix various regressions caused by rushed security fixes in 2.66.6 (work by\n  Simon McVittie and Jan Alexander Steffens) (!1932, !1941, #2323)\n\n* Fix a silent integer truncation when calling g_byte_array_new_take() for\n  byte arrays bigger than G_MAXUINT (work by Krzesimir Nowak) (!1942)\n\n* Fix `g_utf8_strdown()` to fix some issues in Turkish\n  (work by Kjell Ahlstedt) (!1930)\n\n* Bugs fixed:\n - #225 GString doesn't have a g_string_replace() function\n - #587 g_input_stream_skip() out-of-bounds behavior is inconsistent between implementations\n - #1804 Add G_DBUS_SERVER_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER flag\n - #2097 GSubprocessLauncher with FD assignment can clash with g_spawn_async internal pipe\n - #2315 httpproxy: Need overflow protection when reading response during connection establishment\n - #2319 CVE-2021-27219 (GHSL-2021-045): integer overflow in g_bytes_new/g_memdup\n - #2322 g_test_dbus: double output when piping\n - #2323 [GLIB 2.66.6] g_io_channel_set_line_term() stopped working with null terminated strings and length -1\n - !1917 Adding a missing test on integer overflow within g_http_proxy_connect()\n - !1918 Fix more warnings\n - !1923 Add support for Tilix and Konsole\n - !1930 guniprop: Fix g_utf8_strdown() for Turkish locale\n - !1932 gtlspassword: Fix inverted assertion\n - !1934 gdbus: Reject attempts to set future connection or server flags\n - !1938 Fix more warnings\n - !1939 ci: Temporarily disable macOS CI job as runner is offline\n - !1940 Fix more warnings\n - !1941 gkeyfilesettingsbackend: Fix basename handling when group is unset\n - !1942 CVE-2021-27218: gbytearray: Do not accept too large byte arrays\n - !1947 Revert \"Merge branch 'wip/pwithnall/macos-ci-disable' into 'master'\"\n - !1948 tests: Use a more realistic language code than sv_SV\n - !1949 gatomic: Make fallback g_atomic_pointer_get type-safe\n - !1951 Add a test for parsing 0 as double\n - !1955 tests: Add missing NULL terminator to spawn-singlethread test\n\n* Translation updates:\n - Catalan\n - Galician\n - Hungarian\n - Portuguese\n - Romanian\n - Slovenian\n - Spanish\n - Swedish\n - Turkish\n - Ukrainian\n\n\nOverview of changes in GLib 2.67.3\n==================================\n\n* Add new `g_memdup2()` API to replace `g_memdup()`, which is vulnerable to a\n  silent integer truncation and heap overflow problem if not used carefully\n  (discovered by Kevin Backhouse, work by Philip Withnall) (#2319)\n\n* Add new `g_dbus_object_path_escape()` and `g_dbus_object_path_unescape()` APIs\n  to provide one way of escaping arbitrary bytestrings for use in D-Bus object\n  paths (work by Lars Karlitski and Frederic Martinsons) (#968)\n\n* Use `bash-completion.pc` (if available) to provide the path to install\n  completion files into (work by Frederic Martinsons) (#1054)\n\n* Fix support for public/private trigraphs in `glib-mkenums` (work by Matthias Klumpp) (!1870)\n\n* Add `glib_debug` configure option to allow disabling debug infrastructure in\n  builds with debug symbols enabled (work by Ole André Vadla Ravnås) (!1889)\n\n* Fix a regression where `PATH` would always be searched when using `g_spawn()`,\n  even when it wasn’t supposed to (work by Simon McVittie and Thomas Haller) (!1902)\n\n* Override `gio-querymodules` in Meson when used as a submodule (work by Xavier Claessens) (!1909)\n\n* Bugs fixed:\n - #344 gdbus(1) command-line completion issues\n - #968 gdbus: add g_dbus_object_path_{un,}escape\n - #1054 Use pkg-config to get path for bash-completion file installation\n - #1180 GUnixInputStream and GUnixOutputStream don't consider TTYs pollable\n - #2011 Add additional unit tests for D-Bus name watching\n - #2226 clang++ compilation fails on clusterfuzz\n - #2292 Cannot find a common ancestor when running CI style check jobs\n - #2299 GObject introspection annotation of g_closure_new_object() is wrong\n - #2305 GIO security hardening causing gnome-keyring to regress when session bus is provided by dbus-launch (dbus-x11)\n - #2314 gdatetime: math library link issue\n - #2319 GHSL-2021-045: integer overflow in g_bytes_new/g_memdup\n - !610 Various memory leak cleanups to GSettings tests\n - !1804 Add more GIR annotations to gparam.c and gsignal.c\n - !1823 Fix more warnings\n - !1843 gfile: Add Linux kernel headers compatibility kludge\n - !1847 Port to QNX\n - !1853 ginetaddress: Handle systems without IPv6 support\n - !1859 docs: update g_action_group_activate_action() remote activation semantics\n - !1860 glocalfile: Fix an uninitialized variable\n - !1865 tests: Add more debug information to gdbus-connection-slow\n - !1868 gdesktopappinfo: Fix validation of XDG_CURRENT_DESKTOP\n - !1870 mkenums: Support public/private trigraph again\n - !1873 Fix possible integer overflow of g_socket_send_message()\n - !1876 Fixing g_socket_send_message() documentation to make it clearer\n - !1877 Fix more warnings\n - !1878 Another fix on g_socket_send_message()\n - !1879 Fix more warnings\n - !1880 GError documentation tweaks\n - !1881 docs: Move ‘Notes’ section from README to NEWS\n - !1883 gutils: Document caching of XDG directory variables\n - !1884 gthread-win32: Use SetThreadDescription Win32 API for setting thread name\n - !1887 ci: Fix msys-mingw32 CI builds due to package rename\n - !1888 docs: Add documentation for GLIB_VERSION_CUR_STABLE and PREV_STABLE\n - !1889 build: Add glib_debug option\n - !1890 gtype: Improve formatting of GType documentation\n - !1891 Fix more warnings\n - !1893 gwin32appinfo: Fix printf length sub-specifier\n - !1894 gsocket: Fix SO_NOSIGPIPE regression on Darwin\n - !1898 gtestutils: Add g_test_get_path() API\n - !1899 m4macros: replace obsolete macros AC_TRY_RUN and AC_TRY_LINK in glib-2.0.m4\n - !1900 [th/gsignal-cleanup] minor changes to GSignal related code\n - !1901 Check if the remote already exists before adding it.\n - !1902 spawn: Don't set a search path if we don't want to search PATH\n - !1903 m4macros: Increment serial number of glib-2.0.m4\n - !1905 Start to ignore known leaks under AddressSanitizer\n - !1906 gdbus-serialization: Don't leak string containing first serialization\n - !1908 Fix straightforward memory leaks in tests\n - !1909 Meson: override gio-querymodules program\n - !1910 gio: Add explicit virtual g-i annotations for undiscovered invoker relationship\n - !1911 Fix more warnings\n - !1915 Mark g_key_file_get_comment() key parameter as nullable\n - !1919 atomic: Fix type check of g_atomic_pointer_compare_and_exchange()\n - !1921 guri: Mark g_uri_get_host as nullable\n - !1925 gapplication: Fix a memory leak\n\n* Translation updates:\n - Czech\n - Friulian\n - Galician\n - Hungarian\n - Portuguese\n - Portuguese (Brazil)\n - Romanian\n - Spanish\n - Ukrainian\n\n\nOverview of changes in GLib 2.67.2\n==================================\n\n* Add `gio launch` command to execute programs (work by Frederic Martinsons) (#54)\n\n* Fix unused parameter warnings in code generated by `gdbus-codegen` (work by Frederic Martinsons) (#1105)\n\n* Officially deprecate `to-pixdata` option for `glib-compile-resources`, in favour\n  of simply embedding more modern image formats in linked-in `GResource` files (#1281)\n\n* Support querying and running UWP applications on Windows (work by LRN) (#1991)\n\n* Support `gio trash --restore` and `gio trash --list` commands (work by Frederic Martinsons) (#2098)\n\n* No longer read environment variables for GIO module locations when running as setuid (#2168)\n\n* More progress on fixing compiler warnings (work by Emmanuel Fleury) (!1773 and others)\n\n* `GKeyFile` performance improvements (work by Timm Bäder) (!1829, !1832)\n\n* Improve UDP socket behaviour on Windows (work by Marco Mastropaolo and Ole André Vadla Ravnås) (!1827, !1844)\n\n* Add `-Dtests` meson configure option for disabling tests entirely (work by Ole André Vadla Ravnås) (!1850)\n\n* Bugs fixed:\n - #54 Add `gio launch` command to execute .desktop files\n - #513 GSignal: Impossible to have return values in signals which are G_SIGNAL_RUN_FIRST only\n - #514 GSignal: Only limited usage of accumulator function possible\n - #1105 gdbus-codegen: fix some unused parameter warnings\n - #1188 Crash in gapplication.c:1014 when reading error message if dbus_register returns false without setting error\n - #1281 Update glib-compile-resources and GResource docs to deprecate/remove to-pixdata in stable/master resp.\n - #1283 gvfs-trash error message when unable to create trash directory is unhelpful\n - #1568 GObject tutorial does not mention floating references\n - #1991 W32: Glib cannot run UWP applications\n - #2098 gio trash: restore trashed files to their original location\n - #2168 giomodule: Loads GIO modules even if setuid, etc.\n - #2264 GPtrArray might call qsort() with NULL data\n - #2265 2.67.1 regression: assertion failure starting gnome-terminal\n - #2275 gio/completion/gio: Some variables are not localized\n - #2279 g_source_is_destroyed example uses deprecated GDK API\n - !1304 Extended error\n - !1773 Fix more warnings\n - !1783 gtlsdatabase: remove duplicate precondition check\n - !1784 fuzzing: Add more fuzzing tests for various string parsing functions\n - !1785 glocalfile: Add an assertion to help static analysis\n - !1787 Debuggability improvements in gosxappinfo.m\n - !1788 gdate: Validate input as UTF-8 before parsing\n - !1791 gdatetime: Disallow NAN as a number of seconds in a GDateTime\n - !1794 gio-tool-info: Prevent criticals if mount options are not available\n - !1796 gfileutils: Fix typo in docs\n - !1797 gdatetime: Improve ISO 8601 parsing to avoid floating point checks\n - !1801 glib: Add more missing return value annotations\n - !1802 gobject: More missing return value annotations\n - !1806 tests: Add some rounding tolerance in timeout test\n - !1807 python: Reformat some files to keep style-check-diff happy\n - !1808 tests: Be more lenient with timing checks on asyncqueue pops\n - !1810 gfileinfo: Add missing preconditions to g_file_info_get_attribute_data()\n - !1811 Add more missing nullable annotations\n - !1813 gdbus-codegen: Ignore some flake8 warnings\n - !1815 Fix more warnings\n - !1816 fuzzing: Add more GUriFlags to the URI parsing test\n - !1817 fuzzing: Add more parsing flags to the GKeyFile test\n - !1818 Fix more warnings\n - !1819 Fix more warnings\n - !1821 gdate: Limit length of dates which can be parsed as valid\n - !1822 Fix more warnings\n - !1827 Windows: fix FD_READ condition flag still set on recoverable UDP socket errors.\n - !1829 keyfile: Delay calling g_get_language_names() until it's needed\n - !1830 gsocket: Fix credentials error-handling on Apple OSes\n - !1832 More small GKeyFile performance improvements\n - !1834 Update gvdb\n - !1837 gdatetime.c: Fix MSVC builds for lack of NAN items\n - !1838 Minor improvements to GError documentation\n - !1840 Add nullable annotation for g_file_get_uri_scheme\n - !1841 gthread: Fix incorrect cast\n - !1842 gthread: Port native mutex to Clang\n - !1844 gsocket: Improve default UDP behavior on Windows\n - !1845 gsocket: Fix use-after-close\n - !1848 gwin32: Always use unicode APIs\n - !1850 build: Add option for disabling tests\n - !1855 build: Fix ssize_t detection on older versions of glibc\n - !1856 build: Fix Android system checks\n - !1857 gtestutils: Fix g_assert_not_reached() on MSVC\n - !1861 More GError tests\n - !1863 tests: Ignore -Wformat-nonliteral warning in new GError tests\n\n* Translation updates:\n - Catalan\n - Galician\n - German\n - Lithuanian\n - Romanian\n - Spanish\n - Ukrainian\n\n\nOverview of changes in GLib 2.67.1\n==================================\n\n* Deprecate `g_time_zone_new()` in favour of `g_time_zone_new_identifier()`,\n  which makes error checking easier (#553)\n\n* Remove `volatile` from various public APIs, including `G_DEFINE_*`. You should\n  adjust your code to not use `volatile` for atomic variables, `GOnce`\n  variables, or mostly anything else (see\n  http://isvolatileusefulwiththreads.in/c/). (#600)\n\n* Support passing file handles to `gdbus` command line tool (work by\n  Norbert Pocs and Tim Waugh) (#961)\n\n* Add `g_assert_cmpstrv()` test convenience function (work by Niels De Graef) (#2015)\n\n* Changes to the behaviour of the `G_URI_FLAGS_SCHEME_NORMALIZE` scheme\n  normalization flag in `GUri` (work by Carlos Garcia Campos) (#2257, !1716)\n\n* Add new `--run-prefix` and `--skip-prefix` options to GTest, to allow running\n  or skipping test suites by prefix (work by Frederic Martinsons) (!1738)\n\n* Fix thread-safety of `GBinding`; see the updated documentation for\n  `g_object_bind_property()` for full details — if your code uses `GBinding`\n  across threads, you should re-check it against the latest documentation, use\n  `g_binding_unbind()` rather than implicitly dropping the binding with your\n  last `g_object_unref()` call, and use `g_binding_dup_source()`/`g_binding_dup_target()`\n  instead of `g_binding_get_source()`/`g_binding_get_target()`\n  (work by Sebastian Dröge) (!1745)\n\n* Bugs fixed:\n - #553 Improved error-handling when timezone lookup fails\n - #600 Remove \"volatile\" from G_DEFINE_*\n - #961 gdbus tool: file handle passing doesn't work\n - #994 mark g_assert_* as \"noreturn\" also on MSVC\n - #1560 Can't get data for empty compressed resources\n - #1592 Main loop ignores GPollFD sources when there is at least one source ready with priority higher than default one\n - #1833 meson: reconsider G_DISABLE_CAST_CHECKS handling\n - #1849 Documentation of g_set_object(): can object_ptr be null?\n - #1963 Follow-up from \"gdbusmessage: Limit recursion of variants in D-Bus messages\"\n - #2015 Add g_assert_cmpstrv() test utility\n - #2046 Add pylint and shellcheck CI checks\n - #2074 Big dbus writes with a FD list fail\n - #2076 g_type_register_fundamental() and g_type_add_interface_static() should not trigger valgrind leak warnings\n - #2150 Add URI parsing tests from GstURI to GUri\n - #2221 GLib-GIO:ERROR:../gio/tests/gsocketclient-slow.c:99:on_event: 'connection' should be NULL\n - #2223 Documentation of g_strrstr_len is misleading; suggested fix\n - #2233 GSocketClient crashes on connection failure\n - #2236 Docs: gdbus-codegen example links broken\n - #2253 In gspawn.c, use sysconf() system call on Mac OS, instead of default maxfiles limit of 4096\n - #2257 GUri: apply scheme normalization flag consistently\n - !1251 Improve support for interface types\n - !1385 gobject: allocate parameter list for g_object_new_valist() entirely on stack\n - !1629 Add some tracing to GTask\n - !1699 Fix signedness warnings\n - !1701 gio: Fix some remaining DocBook syntax in a documentation comment\n - !1708 gio: Add missing nullable annotations\n - !1716 guri: Normalize uri segments if they are encoded and add a flag to do scheme-based normalization\n - !1722 gio: Fix various typos of the name ‘D-Bus’\n - !1724 glib/tests/fileutils: Fix expectations when running as root\n - !1726 gdbus: Document the intended semantics of handles and fdsTim Waugh\n - !1731 Make more use of g_assert_no_errno()\n - !1733 gdbusauthmechanismsha1: Don’t create keyring dir when running as setuid\n - !1734 glocalfileinfo: Use a single timeout source at a time for hidden file cache\n - !1735 gobject: Standardise on the term ‘instantiatable’\n - !1737 gscanner: Avoid undefined behaviour copying between union members\n - !1738 Extend the usage of -p option for glib test framework\n - !1740 Fix more warnings\n - !1745 Make GBinding thread-safe (alternative approach)\n - !1746 gkeyfilesettingsbackend: improve error-checking\n - !1747 Fix broken link syntax in g_vasprintf docs\n - !1748 Fix minor Coverity return value warnings\n - !1750 Fix warnings\n - !1754 GWin32AppInfo: Use a thread pool for async appinfo tree rebuilds\n - !1755 Minor Coverity fixes\n - !1756 shellcheck fixes\n - !1757 Python formatting improvements\n - !1758 Fix warnings\n - !1765 Fix more warnings\n - !1766 Fix some gdatetime annotations\n - !1767 tests: Fix GDateTime tests on FreeBSD\n - !1769 gfileicon: Fix unused-but-set variable with G_DISABLE_ASSERT\n - !1770 Minor scan-build fixes\n - !1771 macos: fix frexpl checks in cross-compilation\n - !1776 gio: ‘security_context_t’ is deprecated\n - !1780 Minor Coverity fixes\n - !1781 gspawn: Handle ENOSYS from close_range()\n - !1782 ghostutils: Abandon hostname conversion early if it’s too long\n\n* Translation updates:\n - Czech\n - Spanish\n - Ukrainian\n\n\nOverview of changes in GLib 2.67.0\n==================================\n\n* Important and time-critical fix to DST transitions which will happen in Europe\n  on 2020-10-25 on distributions which use the ‘slim’ tzdata format (which is\n  now the default in tzdata/tzcode 2020b) (work by Claudi M., LRN) (#2224)\n\n* Further timezone handling changes to improve performance of `GTimeZone` (work\n  by António Fernandes, Sebastian Keller) (#2204)\n\n* Fix deadlock on Windows when `G_SLICE` is set in the environment (diagnosis by\n  Christoph Reiter) (#2225)\n\n* Fix UTF-8 validation when escaping URI components (thanks to Marc-André Lureau) (!1680)\n\n* Security fix for incorrect scope/zone ID parsing in URIs (!1669)\n\n* Add `g_log_writer_default_set_use_stderr()` API for printing log messages to stderr (work by Simon McVittie) (#2087)\n\n* Improve connection error reporting when IPv6 is available and disabled (work by Michael Catanzaro, debugging by Konstantin Kharlamov and Milan Crha) (#2211)\n\n* Fix definition of `G_MSVC_SYMBOL_PREFIX` for ARM (work by Wolfgang Stöggl) (!1187)\n\n* Add `GStrvBuilder` convenience API for building `NULL`-terminated string arrays (work by Robert Ancell) (!1417)\n\n* Support appinfo verbs other than ‘open’ on Windows (work by LRN) (!1502)\n\n* Expose node-based `GTree` APIs (work by Maciej S. Szmigiero) (!1509)\n\n* Add `G_DBUS_METHOD_INVOCATION_HANDLED`/`_UNHANDLED` convenience constants (work by Simon McVittie) (!1603)\n\n* Set `IP_BIND_ADDRESS_NO_PORT` on sockets when binding to local addresses (work by Cristian Rodríguez) (!1598)\n\n* Add Meson option for libelf support (work by Niklas Gürtler) (!1650)\n\n* Add support for PKCS #11-backed TLS certificates (work by Patrick Griffis) (!1663)\n\n* Add `g_subprocess_launcher_close()` API to make `GSubprocessLauncher` more usable in bindings (work by Sergio Costas) (!1677)\n\n* Bugs fixed:\n - #1233 GType for GTree\n - #2077 Invalid Pointer Arithmetic in g_path_get_basename\n - #2087 Respecting G_MESSAGES_DEBUG in a custom log writer should be easy to do\n - #2164 GDBus DBUS_COOKIE_SHA1 mechanism may use too old a key\n - #2194 gtk3/glib crash on gimp\n - #2203 fstatat is available only on macOS 10.10+\n - #2204 Time zone cache is constantly invalidated if TZ is NULL\n - #2209 gthreadedresolver: faulty logic in parse_res_txt\n - #2210 g_private_replace ordering issue\n - #2211 \"Network is unreachable\" error returned when IPv6 is disabled and network is reachable using IPv4\n - #2215 DST incorrectly ends on wrong dates\n - #2224 top bar time is incorrect, timezone map in control center is broken\n - #2225 Setting G_SLICE makes Windows programs hang since 2.66\n - !1187 Define G_MSVC_SYMBOL_PREFIX correctly for ARM\n - !1417 gstrvbuilder: Add a new object to make NULL-terminated string arrays.\n - !1449 gio: Expose g_file_query_info_for_copy()\n - !1502 GWin32AppInfo: Support verbs other than \"open\"\n - !1509 GTree: add an ability to iterate over a tree and a node-based API\n - !1575 Use C++11 decltype where possible\n - !1598 gsocketclient: set IP_BIND_ADDRESS_NO_PORT if binding to local address\n - !1603 GDBus: Add G_DBUS_METHOD_INVOCATION_HANDLED, _UNHANDLED\n - !1643 Minor Coverity fixes\n - !1645 Fix various signedness warnings\n - !1647 Fix warnings (keep going)\n - !1648 glocalfile: Never require G_LOCAL_FILE_STAT_FIELD_ATIME\n - !1650 Make libelf dependency optional via meson feature\n - !1652 trash portal: Handle portal failures\n - !1654 gio-tool-trash: Prevent recursion to speed up emptying trash\n - !1657 glist: Clarify that g_list_free() and friends only free an entire list\n - !1658 utils: Limit the scope of the variable `max`\n - !1661 Lookup fallback time zones in the cache to improve performance\n - !1663 gtlscertificate: Add support for PKCS #11 backed certificates\n - !1665 Fix g_module_symbol() under Windows sometimes not succeeding\n - !1669 guri: Fix URI scope parsing\n - !1670 GSubprocessLauncher: Move cleanup to dispose()\n - !1671 gdatetime: Avoid integer overflow creating dates too far in the past\n - !1673 CI: Re-enable code coverage reporting for MSYS2 builds\n - !1674 Add version macros for 2.68\n - !1675 Make static assertions about standard types\n - !1677 gsubprocesslauncher: Allow to close FDs\n - !1678 gmessages: Document that using a custom log writer basically disables fatal handling\n - !1679 gmain: Fix minor typo in documentation\n - !1680 guri: Fix UTF-8 validation when escaping URI components\n - !1681 gspawn: Handle error opening /dev/null\n - !1686 Various improvements in GSocketClient\n - !1687 uri: add missing (not)nullable annotations\n - !1688 gspawn: Use close_range() if available to close FDs between fork/exec\n - !1691 gmain: Fix possible locking issue in source unref\n - !1692 gsignal: Plug g_signal_connect_object leak\n - !1695 gfile: Clarify refcount handling for g_file_replace_contents_bytes_async()\n - !1696 Fix various minor scan build warnings\n - !1706 Add various missing nullable annotations\n - !1712 Revert \"Use C++11 decltype where possible\"\n - !1714 gmacros: Use __typeof__ when compiling with Clang\n - !1718 gtrace: Add G_GNUC_PRINTF annotation\n\n* Translation updates:\n - Chinese (Taiwan)\n - Danish\n - Greek, Modern (1453-)\n - Hebrew\n - Latvian\n - Portuguese\n - Russian\n - Slovak\n - Ukrainian\n\n\nOverview of changes in GLib 2.66.0\n==================================\n\n* Bugs fixed:\n - #2200 missing tab in makefile rule\n - !1639 guri: Fix user passed to g_uri_split_with_user() not being NULL'd\n\n* Translation updates:\n - Croatian\n - Hungarian\n - Italian\n - Serbian\n - Slovak\n - Swedish\n\n\nOverview of changes in GLib 2.65.3\n==================================\n\n* Fixes to the new `statx()` calls — note that since GLib 2.65.2 uses `statx()`\n  (if available) instead of `stat()`/`fstat()`/`lstat()`/`fstatat()`, syscall\n  sandboxing for third party applications might need to be updated\n\n* Bugs fixed:\n - #2189 g_file_query_info on ro file system: Numerical result out of range\n - #2191 Calling nice(20) can lead to thread related warnings\n - #2197 Segfaulting Integer Overflow in g_option_group_add_entries\n - !1025 Big o notations\n - !1626 gio: Document g_settings_new() missing schema behaviour\n - !1627 gthread: Add a sysprof mark for thread creation\n - !1628 Replace a bunch of fallthrough comments with an attribute\n - !1631 Fix splice behavior on cancellation\n - !1632 Fixing signedness warning in glib/gfileutils.c\n - !1635 gcancellable: Mark a variable as unused if built with G_DISABLE_ASSERT\n\n* Translation updates:\n - Basque\n - Catalan\n - Chinese (China)\n - Czech\n - English (United Kingdom)\n - Friulian\n - German\n - Japanese\n - Kazakh\n - Korean\n - Lithuanian\n - Polish\n - Portuguese (Brazil)\n - Slovenian\n\n\nOverview of changes in GLib 2.65.2\n==================================\n\n* Support `statx()` and `G_FILE_ATTRIBUTE_TIME_CREATED` (work by Andre Miranda) (#1970)\n\n* Fix deadlock in `g_subprocess_communicate_async()` (work by Alexander Larsson) (#2182)\n\n* Add `%f`/microsecond placeholder support to `g_date_time_format()` (work by Johan Bjäreholt) (!1605)\n\n* Bugs fixed:\n - #5 g_new0 performance\n - #1970 Make G_FILE_ATTRIBUTE_TIME_CREATED support stx_btime\n - #2176 Inconsistent introspection annotations for g_input_stream_read and g_socket_receive\n - #2182 g_subprocess_communicate_async() can deadlock when writing\n - !1593 CI support for Coverity Scan\n - !1605 gdatetime: Add %f format specifier and microsecond precision to g_date_time_format_iso8601\n - !1613 gfile: Document TOCTTOU avoidance using g_file_delete()\n - !1615 docs: glib-compile-resources: json-stripblanks\n - !1616 gioerror: Map WSAENETRESET on Windows to G_IO_ERROR_CONNECTION_CLOSED\n - !1619 Minor Coverity fixes\n - !1620 gvariant: Ensure GVS.depth is initialised\n - !1622 gdatetime: Widen a variable before multiplication\n - !1623 gcancellable: Assert that make_pollfd() call succeeds\n - !1624 gdbusaddress: Drop an unnecessary NULL check\n - !1625 gdbusmessage: Drop redundant uint ≥ 0 checks\n\n* Translation updates:\n - French\n - Galician\n - Greek, Modern (1453-)\n - Indonesian\n - Romanian\n - Spanish\n - Turkish\n - Ukrainian\n\n\nOverview of changes in GLib 2.65.1\n==================================\n\n* Add `GUri` API for parsing, building and representing URIs according to\n  [RFC 3986](https://tools.ietf.org/html/rfc3986) (work by Marc-André Lureau) (#110)\n\n* Fix handling of xattr data with embedded nuls (#422)\n\n* Add `g_file_set_contents_full()` which gives more control over fsyncs (#1302)\n\n* Fix cross-compilation on iOS (work by Nirbheek Chauhan) (#1868)\n\n* Add a `x-gvfs-notrash` option to disable trash on certain mounts (work by Ondrej Holy) (!1549)\n\n* Support ‘slim’ TZif files generated with `zic -b slim` (work by Paul Eggert) (#2129)\n\n* Support emitting profiling marks from `GMainContext` to sysprof capture files (!1551)\n\n* Accept IPv6 zone IDs in `g_hostname_is_ip_address()` (work by Marc-André Lureau) (!1604)\n\n* Bugs fixed:\n - #4 Include a UTF-8 safe escaping function\n - #110 Basic URI operations\n - #137 display_name should be always available\n - #250 GTestCase's setup/teardown functions appear pointless\n - #272 allow thread pools to adjust the number of threads to the number of cpu's/cores\n - #422 Wrong assumption in libgio GFileInfo on xattr/acl string: it may contain binary data.\n - #858 glib2 @2.40.0 issues a \"Got weird mach timebase info\" error (Macports, PPC)\n - #1022 g_object_new Should Mention That it Zeroes Out Private Struct\n - #1200 Make g_assert_null/nonnull clang static analyzer friendly\n - #1203 Add a variant of g_file_set_contents() which accepts file mode\n - #1288 gmacros: Introduce non-public G_CLANG_ANALYZER_NORETURN macro\n - #1302 g_file_set_contents() can fill target with NUL bytes if it did not previously exist\n - #1670 ThreadSanitizer data races\n - #1764 cancellable test: on_mock_operation_ready: assertion failed (iterations_requested > iterations_done): (10 > 10)\n - #1868 iOS cross compile impossible due to frexpl check not supporting cross compilation\n - #1869 iOS doesn't have Cocoa, which thankfully isn't a requirement of this code that supposedly requires it\n - #1982 GSocketAddressEnumerator documentation is inconsistent with existing usage\n - #2127 Spurious GIO module initialization on Fedora Silverblue (and other ostree-based systems?)\n - #2129 date_time bugs after 2038, or with today's date and 'zic -b slim' TZif files\n - #2132 Valgrind reports \"still reachable\" after g_thread_pool_new/free\n - #2136 Valgrind reports \"still reachable\" after g_option_context_parse\n - #2140 calling malloc in fork child is undefined-behaviour\n - #2141 g_value_copy is was recently broken\n - #2149 Make G_URI_FLAGS_PARSE_STRICT the default\n - #2156 Merge _g_uri_parse_authority() into GUri\n - #2159 Thread-unsafe initialization in gportalsupport.c\n - #2160 More guri regressions\n - #2165 More guri breakage\n - #2166 g_uri_build() functions should accept a NULL scheme\n - !1328 guri: new URI parsing and generating functions\n - !1527 Add g_tls_connection_get_channel_binding_data call and enums\n - !1534 Various GLocalFile fixes related to the filesystem::remote attribute\n - !1546 tree: Fix various ableist language\n - !1549 Add support to ignore trash for certain mounts\n - !1551 Add initial sysprof support\n - !1553 gtestutils: Mark that g_assert_whatever() macros do not normally return\n - !1554 GUri build fixes\n - !1555 Remove c-format from the string that is not c-formatted\n - !1556 fuzzing: Another fix for g_uri_parse() test\n - !1557 A few g_uri_parse_params() improvements\n - !1559 Fix buffer read overflows in GUri\n - !1561 gconvert: Use a pointer array in extract_uris\n - !1563 gdesktopappinfo: Fix unnecessarily copied and leaked URI list\n - !1564 tests: limit number of threads to something reasonable.\n - !1570 Reduce CI bandwidth requirements\n - !1572 Add GUriParamsIter\n - !1576 gtask: Only override g_task_set_source_tag() for GLib ≥ 2.60\n - !1577 uri: add illegal_characters argument to unescape_bytes\n - !1578 tests: Add tests for RFC 8536 v3 parsing of time zones\n - !1579 glib: Use g_getenv everywhere instead of getenv\n - !1582 appinfo: Add properties\n - !1583 gio: Remove broken support for XP\n - !1590 Use CI schedules and DAGs\n - !1591 gfileutils: Fix O_NOFOLLOW handling on BSD systems\n - !1594 GFile: Document that G_FILE_CREATE_REPLACE_DESTINATION can only be used with...\n - !1595 uri: add ENCODED_PATH & ENCODED_FRAGMENT flags\n - !1599 uri: do not add ipv6 brackets on non-ip host\n - !1600 uri: do not encode ':' and ';' from userinfo\n - !1601 timezone: Fix an uninitialized use\n - !1602 Revert \"Merge branch 'appinfo-properties' into 'master'\"\n - !1604 Make g_hostname_is_ip_address() accept ipv6 zoneid\n - !1609 Fix multiple typos in guri.c\n - !1611 guri: Always prepend `//` to the host when building a URI\n - !1612 guri: Document and check restrictions on path prefixes\n\n* Translation updates:\n - Catalan\n - Kazakh\n - Lithuanian\n - Romanian\n - Slovenian\n - Spanish\n - Ukrainian\n\n\nOverview of changes in GLib 2.65.0\n==================================\n\n* Fix memory monitor tests to only be installed if installed-tests are enabled,\n  and to be skipped if GObject-Introspection is too old (!1407)\n\n* Stability improvements for various unit tests\n\n* D-Bus credentials support on macOS (#507)\n\n* MSVC support for the files generated by `glib-compile-resource` and `gdbus-codegen` (#1215, !1452)\n\n* Year 2038 fixes involving new API in `GBookmarkFile` (#1931)\n\n* SOCKS5 proxy authentication fixes (#1986, #1988)\n\n* Support for more than `MAXIMUM_WAIT_OBJECTS` FDs for `g_poll()` on Windows (#2107)\n\n* Add `g_assert_no_errno()` test macro for testing POSIX-style functions (!1204)\n\n* Update Unicode Character Database to version 13.0.0 (!1422)\n\n* Support storing interned strings in `GValue`s efficiently, via `g_value_set_interned_string()` (#2109)\n\n* Bugs fixed:\n - #2 g_filename_from_utf8() should normalize?\n - #176 the behaviour of constructors for GLib data types is not specified if memory allocation fails\n - #480 /gdbus/connection/signals test intermittently fails: assertion failed (count_name_owner_changed == 2): (1 == 2)\n - #507 GDBus credentials don’t work on OS X\n - #602 GLib.Thread not usable from GObject-Introspection\n - #1154 Missing documentation how to set a value in a GArray\n - #1215 MSVC cannot build glib-compile-resource's output resource file\n - #1323 meson, autotools: figure out if mem barrier is needed for arm64 host variant aarch64\n - #1398 gdate: Add error handling for GetDateFormatW calls\n - #1841 Signal handler disconnection race when finalising GCancellableSource\n - #1851 Meson Build Failure on Windows: Undefined Reference to libiconv\n - #1911 Memory leak in g_param_spec_flags and/or g_param_spec_enum\n - #1931 GBookmarkFile API involves time_t\n - #1954 gdbus-server-auth intermittent failure\n - #1957 gdbus-connection test failure on FreeBSD\n - #1986 Socks5 Proxy: Authentication seems broken\n - #1988 Socks5 Proxy: Wrong error returned when using no authentication\n - #2038 Bindings: g_tls_connection_set_database() does not allow None as argument\n - #2051 GUnixOutputStream can block on close()\n - #2057 Call malloc_trim() under memory pressure\n - #2067 Glib uses _Static_assert in C++17 mode\n - #2081 gdbus error messages contains mixed up body and head signatures\n - #2082 AM/PM - specific variation support needed to Hebrew language\n - #2083 Memory monitor tests fail if dbusmock isn't installed\n - #2092 FreeBSD CI timing out in gdbus-connection filter test\n - #2094 Deprecation warnings when compiling with -DGLIB_VERSION_MAX_ALLOWED=GLIB_VERSION_2_28 -DGLIB_VERSION_MIN_REQUIRED=GLIB_VERSION_2_28\n - #2106 Duplicated if - else if conditions in gtranslit.c\n - #2107 g_poll() implementation on Windows stall when more than MAXIMUM_WAIT_OBJECTS FDs have passed\n - #2109 GValue: Add support for interned string\n - #2124 g_file_info_get_content_type() may return NULL\n - #2132 Valgrind reports \"still reachable\" after g_thread_pool_new/free\n - #2134 Valgrind reports \"still reachable\" after `g_uuid_string_random()`.\n - #2135 Valgrind reports \"still reachable\" after g_key_file_new/free\n - #2136 Valgrind reports \"still reachable\" after g_option_context_parse\n - !1204 gtestutils: Add a new g_assert_no_errno() test macro\n - !1302 gobject: new g_param_is_valid_property_name() function.\n - !1329 Support nanoseconds in stat timestamps on Windows\n - !1341 MUI capabilities for GWin32RegistryKey\n - !1360 CI: Show execution environment before we start\n - !1395 tests: Move memory_monitor_tests under installed_tests_enabled\n - !1396 macros: Define G_GNUC_FALLTHROUGH for more compilers\n - !1397 tests: Skip MemoryMonitor test if GObject-Introspection is too old\n - !1398 gcontenttype: Fix crash in _get_generic_icon_name()\n - !1402 ci: Update Android Docker image for aarch64 CPU naming change\n - !1405 tests: Disable link-time warning for mem-overflow\n - !1406 Replace fallthrough comments with G_GNUC_FALLTHROUGH\n - !1408 tests: Don't compare strings by pointer\n - !1409 gdummytlsconnection: Add missing overrides for ALPN properties\n - !1413 gapplication: Fix a minor typo in the documentation\n - !1414 gstrutils: Set locale explicitly for search-utils test\n - !1415 meson: Don't use assert in test code\n - !1418 ginetaddress, ginetsocketaddress: Add missing (nullable) annotations\n - !1422 glib: Update Unicode Character Database to version 13.0.0\n - !1423 gobject: Clarify assertion failure on ref-after-finalize\n - !1424 docs: Fix configuration with gtk_doc=true and installed_tests=false\n - !1425 gdbusconnection: GDBusSignalCallback can have a NULL sender_name\n - !1426 gunidecomp: Update and reformat Unicode version support history\n - !1427 gicon: Clarify GVariant refcounting in docs\n - !1428 Add missing 'extern' to the dllexport version of GLIB_VAR/GOBJECT_VAR\n - !1429 Fix arch detection ifdefs in glib/valgrind.h\n - !1430 Use __builtin_trap() on Clang on any platform\n - !1431 glib-unix.c: fix heap corruption in g_unix_get_passwd_entry\n - !1432 docs: Mention new gio tool options\n - !1433 meson: Fix buildtype usage\n - !1434 gdbusconnection: Clarify nullability of SignalInstance.sender\n - !1436 glib: Update internal copy of valgrind.h from Valgrind 3.15 release\n - !1437 gmarkup tests: tab character escape/unescape\n - !1439 Don't misdetect stpcpy on windows platforms on clang\n - !1440 Silence clang errors about -Wformat-nonliteral due to missing intermediate attributes\n - !1441 Meson: Override every dependency glib provides\n - !1442 gfile: Fallback to fast-content-type if content-type is not set\n - !1443 gio: use TAPTestRunner in the memory monitor tests\n - !1444 Meson: Add glib-checks and glib-asserts options\n - !1452 Make symbols generated by gdbus-codegen exportable on Visual Studio-style builds\n - !1455 gdesktopappinfo: Note that search results are not filtered\n - !1456 GCredentials documentation fixes\n - !1458 meson: Exclude gosxutils.m when building for iOS\n - !1459 meson: Fix the gnulib checks for isnan* functions\n - !1460 glib: Sync the local modification to glib/valgrind.h to what was upstreamed\n - !1462 gvariant-core: Add a note about memory safety of children\n - !1463 gdesktopappinfo: Add several nullable annotation to GAppInfo getters\n - !1464 Update Fedora CI\n - !1466 CI: Switch to new Windows runners\n - !1469 goption: Treat an empty option context parameter string as NULL\n - !1475 Improve documentation of g_tls_database_verify_chain()\n - !1476 tests: Fix remaining race in gdbus-connection filter test\n - !1479 Improve documentation of client connection validation flags\n - !1480 CI: Make sure we use meson 0.49.2 in MSYS2\n - !1481 array: fix corrupt state of GPtrArray after g_ptr_array_extend_and_steal()\n - !1482 [th/g-ptr-array-variable-cleanups] minor cleanup of variables for GPtrArray\n - !1487 glib: annotate static inline functions with G_AVAILABLE-type macros\n - !1488 Rebuild Fedora CI image\n - !1491 gdatetime: update annotations\n - !1492 glib-mkenums: allow optional 'since' tag\n - !1493 meson: Remove stray ] in O_DIRECTORY check\n - !1496 Fix GLIB_UNAVAILABLE_STATIC_INLINE declaration\n - !1498 array: add internal ptr_array_new() helper for creating GPtrArray\n - !1503 docs: Add indexes for symbols added in 2.66\n - !1505 gobject: Handle runtime checks as such\n - !1506 tests: Speed up the cancellable test\n - !1508 tests: Speed up the file test and make it more reliable\n - !1512 Various fixes when building for iOS\n - !1513 Initialize the visited time of a new GBookmarkFile\n - !1515 meson: check for stpcpy using cc.links()\n - !1516 gthreadedsocketservice: Mark source_object of run signal as nullable\n - !1517 GWin32RegistryKey: Move assertions\n - !1518 strfuncs: Use a GPtrArray in strsplit()\n - !1522 meson: Fix gnulib printf checks\n - !1524 meson: Fix gnulib build where isnan*() is needed\n - !1525 Normalize C source files to end with exactly one newline\n - !1528 gtlsconnection: Improve documentation of peer-certificate[-errors]\n - !1530 tree: Fix various typos and outdated terminology\n - !1531 gvariant: Fix documentation for g_variant_get_string() to match reality\n - !1532 win32: spelling fix\n - !1535 glib.supp improvements\n\n* Translation updates:\n - Bokmål, Norwegian\n - Catalan\n - Catalan (Valencia)\n - Chinese (Taiwan)\n - Dutch\n - French\n - Galician\n - German\n - Hebrew\n - Indonesian\n - Italian\n - Japanese\n - Latvian\n - Lithuanian\n - Malay\n - Romanian\n - Serbian\n - Slovak\n - Slovenian\n - Spanish\n - Turkish\n - Ukrainian\n\n\nOverview of changes in GLib 2.64.0\n==================================\n\n* Use `posix_spawn()` to speed up launching test D-Bus instances (!1388)\n\n* Bugs fixed:\n - #1783 Document using glib-mkenums with meson\n - #2049 Crash in g_array_copy\n - !1384 Some minor clang warning fixes\n - !1386 docs: Document generated headers caveats for genmarshal\n - !1387 ci: Correctly propagate exit status in run-style-check-diff.sh\n - !1388 gtestdbus: Use posix_spawn() to spawn dbus-daemon\n - !1389 Update GError docs to use G_DEFINE_QUARK\n\n* Translation updates:\n - Czech\n - Danish\n\n\nOverview of changes in GLib 2.63.6\n==================================\n\n* Fix potential relative read when calling g_printerr(), which could lead to a\n  denial of service from a setuid-root process being used to block access to the\n  TTY for another user (#1919)\n\n* Fix SOCKS proxy resolver sometimes not being used when resolving addresses\n  via Happy Eyeballs (CVE-2020-6750) (#1989)\n\n* Several other Happy Eyeballs fixes for address resolution (#1871, #1872, #1902)\n\n* Various race fixes in `GDBusConnection` and its unit tests (#1515)\n\n* Fix a race condition with D-Bus name ownership (#1517)\n\n* Drop `gio-launch-desktop` helper application in favour of calling `sh` directly (#1633)\n\n* Fix win32 exception handling with C# exceptions (#2025)\n\n* Fix thread safety of `GUnixMountMonitor` (#2030)\n\n* Additional fixes to new thread pool attribute behaviour from GLib 2.63.4 to\n  check if sched_setattr() is allowed by system policies before depending on it (#2039, !1356)\n\n* Fix memory leaks and corruption when freeing `GSource`s while freeing a `GMainContext` (!1353)\n\n* Drop inappropriate installation of object manager example documentation (!1359)\n\n* Bugs fixed:\n - #938 gdbus call -a doesn't support message bus connections\n - #1515 gio/gdbus-threading test sometimes fails in CI\n - #1517 g_bus_own_name does not always call name_lost_handler when _REPLACE and _ALLOW_REPLACEMENT are set\n - #1633 should not install gio-launch-desktop into PATH\n - #1919 read from relative path in g_printerr() in 2.58.3\n - #1995 Tracker issue for Happy Eyeballs regressions\n - #2002 g_io_channel_read_line does not honour the line_term symbols set\n - #2025 W32 exception handling misbehaves when C# exceptions are thrown when running inside the Visual Studio debugger\n - #2030 Random nautilus test suite failures involving GUnixMountMonitor\n - #2039 sched_setattr() still can cause EPERM through natural causes\n - #2043 Low memory monitor test failed in CI\n - #2044 GApplication docs suggest invalid GVariant type\n - !1185 gtimezone: Tidy up UTC timezone creation\n - !1281 ci: Update Docker packages\n - !1283 gmodule: change _g_module_close to only take a handle.\n - !1298 tests: Speed up the GIO actions test\n - !1299 gapplication: Fix a minor typo in the documentation\n - !1339 gsocketclient: Refactor g_socket_client_connect_async()\n - !1353 GMainContext - Fix memory leaks and memory corruption when freeing sources while freeing a context\n - !1354 GThreadPool - Add test for !1340\n - !1355 glist: Add docs examples of how to combine with g_steal_pointer()\n - !1356 GThread - Check if sched_setattr is allowed by the system policies before depending on it\n - !1359 docs: Don’t install object manager example separately\n - !1363 Make tests pass if we are euid != 0 with capabilities\n - !1366 Fix oss-fuzz coverage link\n - !1372 gobject: Fix strict aliasing warnings with g_set_object()\n - !1376 gitlab-ci: 64-bit ARM is aarch64, not arm64\n - !1381 ghash: Document the iteration order over a hash table is not defined\n - !1382 tests: Bump the refcount timeout in gdbus-threading\n - !1383 ci: Enable parallelisation when running installed tests\n\n* Translation updates:\n - Basque\n - English (United Kingdom)\n - French\n - Galician\n - German\n - Greek, Modern (1453-)\n - Hungarian\n - Indonesian\n - Japanese\n - Korean\n - Lithuanian\n - Polish\n - Portuguese (Brazil)\n - Spanish\n - Swedish\n - Turkish\n\n\nOverview of changes in GLib 2.63.5\n==================================\n\n* Fix behaviour of `g_file_move()` fallback code to not follow symlinks (#986)\n\n* Rename `--glib-min-version` argument of `gdbus-codegen` to `--glib-min-required`\n  (this is not an API break as `--glib-min-version` was added earlier in the\n  2.63 cycle) (#1993)\n\n* Add gtk-doc checks to CI and fix a number of documentation issues\n  (thanks to Xavier Claessens) (!978)\n\n* Add `G_SIZEOF_MEMBER()` macro (!1333)\n\n* Add a debug message if `g_setenv()` or `g_unsetenv()` are used after any\n  threads have been spawned — this will be upgraded to a warning in future (!1337, #715)\n\n* Skip memory monitor tests if xdg-desktop-portal or dbusmock are not available (!1296, !1338)\n\n* Change the `libmount` configure option from a boolean to a Meson `feature` (!1344)\n\n* Do not return `target-uri` from `g_file_peek_path()` when called on trash/recent files (!1346)\n\n* Drop new TLS certificate API for PKCS #11 backed certificates, as the implementation\n  is not ready yet (this is not an API break as the API was added earlier in the\n  2.63 cycle) (!1347)\n\n* Bugs fixed:\n - #986 g_file_move: remove G_FILE_COPY_NOFOLLOW_SYMLINKS section\n - #1551 CI: Add checks for `TODO` in MRs\n - #1925 Large number of routes installed into kernel cause high cpu usage\n - #1993 Rename gdbus-codegen --glib-min-version argument to --glib-min-required and add --glib-max-allowed\n - #2012 spawn_thread_queue not initialised in GThreadPool\n - #2020 g_network_monitor_base_add_network() improperly unrefs GInetAddressMask\n - !978 Various fixes to make gtkdoc-check pass on glib\n - !1018 docs: tag enclose 'all' and 'help' values\n - !1170 Avoid C++20 deprecated assignment to volatile\n - !1296 tests: Skip GMemoryMonitor tests if the dbusmock template is not available\n - !1307 Remove global declaration of GMemoryMonitor\n - !1322 gmain: Mark G_SOURCE_FUNC as available in 2.58\n - !1333 Add and use G_SIZEOF_MEMBER() macro\n - !1337 genviron: Message if g_setenv()/g_unsetenv() are used after threads spawned\n - !1338 tests: Skip GMemoryMonitor tests if xdg-desktop-portal is not available\n - !1344 meson: libmount autodectection\n - !1345 gio-tool-info: Print unix mount information where available\n - !1346 gfile: Do not return target-uri from g_file_peek_path()\n - !1347 Revert \"gtlscertificate: Add support for PKCS #11 backed certificates\"\n - !1348 ghash: Clarify that g_hash_table_add() always consumes the key\n - !1349 doc: Clarify that _locker_new() does not actually allocate memory\n - !1351 glib.supp: update g-threaded-resolver-getaddrinfo-config\n\n* Translation updates:\n - Japanese\n - Lithuanian\n - Malay\n - Portuguese (Brazil)\n - Swedish\n\n\nOverview of changes in GLib 2.63.4\n==================================\n\n* Fix various race conditions on signal emission in GDBus (#604, #978, #1232)\n\n* Change thread pools so that thread attributes (in particular, priority) are\n  inherited from the thread which created the `GThreadPool` initially, rather\n  than from the thread which is pushing a new job into the pool (#1834, #2007)\n\n* Expand support for running Windows apps with\n  `g_app_info_launch_default_for_uri()` using rundll32 on Windows (#1932)\n\n* Support multiple directories in `GSETTINGS_SCHEMA_DIR` environment variable (#1998)\n\n* Support full Julian day range in `TZ` environment variable (#1999)\n\n* Apply recursion depth limits to variants in D-Bus messages (!1201)\n\n* Support adding call flags and timeouts to method calls generated by\n  `gdbus-codegen` through the new `--glib-min-version` option (!1286)\n\n* Fully deprecate TLS rehandshakes; they are now ignored due to TLS protocol\n  changes (!1305)\n\n* Bugs fixed:\n - #198 g_fopen and friends: should also state how to close a stream\n - #604 GDBus name watching dispatch is buggy/excessively-complicated\n - #833 g_object_set: document the need to cast varargs\n - #978 SIGSEGV in on_name_lost_or_acquired\n - #1232 Insufficient thread safety around GDBusObjectManagerClient\n - #1416 Re-add macOS CI\n - #1834 Unwanted priority/etc inheritance with GThreadPool and GThread and the POSIX implementation\n - #1932 Windows: Gio.AppInfo.launch_default_for_uri seems not to work for local files/folders\n - #1983 glib:gio / dbus-appinfo test fails: GLib-GIO:ERROR:../../../../Projects/glib/gio/tests/dbus-appinfo.c:326:on_flatpak_open: 'g_file_equal (files[0], f)' should be TRUE\n - #1997 Base64 encoding with \"break_lines\" claims to wrap at 72 characters but seems to wrap at 76\n - #1998 support multiple directories in GSETTINGS_SCHEMA_DIR\n - #1999 GTimeZone fails to accept full Julian day range when parsing the direct $TZ string format\n - #2007 Thread scheduler attributes fail under valgrind\n - !388 ci: Avoid downloading subprojects for each job\n - !1111 gio: test that launch_uris() exports files with the document portal when launching a flatpak\n - !1201 gdbusmessage: Limit recursion of variants in D-Bus messages\n - !1279 tests: Fix an error message set by foo_set_property()\n - !1286 gdbus-codegen: Add a GDBusCallFlags arg to method calls\n - !1291 gio-tool-list: Add an option to print display names\n - !1294 GMemoryMonitor docs fixes\n - !1295 gio: Fix socket test\n - !1301 GThread - Inherit parent thread priority by default for new Win32 threads\n - !1303 gvariant-core: Don't pass NULL second argument to memcpy\n - !1305 Fully deprecate TLS rehandshakes\n - !1308 gsocketclient: run timeout source on the task's main context\n - !1309 Fix crash in gutils when application is prevented access to passwd file\n - !1317 gfdonotificationbackend: remove notifications when bus name vanishes\n - !1320 subprojects: Temporarily avoid using wrapdb while it’s down\n - !1324 ci: Add some documentation to the style check CI test\n - !1325 Check for SYS_sched_getattr before using it unconditionally\n - !1330 W32: Correctly set st_ino when doing private stat()\n - !1334 gthread: Ensure GThreadSchedulerSettings is always defined\n\n* Translation updates:\n - Catalan\n - Galician\n - Hungarian\n - Indonesian\n - Polish\n - Portuguese (Brazil)\n - Spanish\n\n\nOverview of changes in GLib 2.63.3\n==================================\n\n* Add a `--glib-min-version` argument to `gdbus-codegen` which controls breaks in the API of generated code (#1726)\n\n* Add `g_clear_list()` API to clear `GList`s to `NULL` (#1943)\n\n* Add a `GMemoryMonitor` API to be notified of memory pressure situations using the low-memory-monitor project (!1005)\n\n* Add support for dispose functions for `GSource` implementations (!1175)\n\n* Tighten up validation of GObject signal and property names, allowing performance improvements (!1224)\n\n* Fix installation path of GIO modules on MSVC to be the bindir (!1254)\n\n* Bugs fixed:\n - #650 g_signal_lookup gives too many warnings\n - #1011 GListStore, easily find if the item is already inserted\n - #1130 gdbus-codegen: Add an option to strictly generate markdown in source comments\n - #1687 glocalvfs.c uses non-thread-safe getpwnam()\n - #1726 Warn when method/signal uses type 'h' but lacks GDBus.C.UnixFD annotation\n - #1935 Assert in _kqsub_free seems to be too strict\n - #1943 Consider g_clear_list()\n - #1947 Documentation clarification for g_uuid_string_random()\n - #1953 Documentation for g_type_init() and others missing from online gtk-doc documentation\n - #1961 A typo in the comment of `g_settings_schema_get_path`: threfore -> therefore\n - !1005 gio: Add GMemoryMonitor to monitor for low-memory\n - !1172 gptrarray: Add an example to the g_ptr_array_steal() docs\n - !1175 Implement a dispose function for GSource\n - !1223 Add additional valgrind suppressions\n - !1224 Signal name handling improvements\n - !1230 ci: Run installed-tests on Fedora\n - !1235 Add sudo to Fedora docker image\n - !1239 tests: Run \"timeout tests\" sequentially\n - !1248 ci: Update all Debian CI runners to use v5 of the Dockerfile\n - !1249 gio-tool-mount: Allow mounting by the given UUID\n - !1252 ci: Fix running all jobs on merge requests\n - !1253 gthread: Fix \"zero as null pointer\" warning\n - !1254 giomodule: gio modules are no longer installed in bindir on MSVC\n - !1255 ci: Build Docker images rather than OCI images if using podman\n - !1256 gdate: Add autoptr support\n - !1258 Minor CI fixups\n - !1261 gtk-doc: Ensure we have recent enough version\n - !1262 tests: Add tests for the gdbus-codegen executable\n - !1265 build: don't check for protected visibility\n - !1267 Revert \"doc: Workaround gtkdoc-scan bug leading to undocumented symbols\"\n - !1268 ci: Work-around successful installed tests having no logs\n - !1269 gvariant: Add guard to g_variant_get()\n - !1271 tests: Enable GDBus debug for a number of unreliable tests\n - !1274 trash portal: Don't follow symlinks\n - !1275 Small doc correction\n - !1277 Various gtk-doc improvements\n - !1278 Update installed tests CI\n - !1280 clang-format-diff: Output diff for multiple files, not just one\n - !1282 Revert \"Revert \"docs: remove GDBusObjectManager example\"\"\n - !1284 Update POTFILES.in 191212\n - !1287 atomic/tests: test g_atomic_pointer_compare_and_exchange() with const pointers\n - !1289 gtype: Define auto-cleanup functions for Module class\n\n* Translation updates:\n - Spanish\n\n\nOverview of changes in GLib 2.63.2\n==================================\n\n* Use `lldb` rather than `gdb` on macOS for debugging (#1004)\n\n* Switch the atomic builtins from `__sync_fetch_*()` to the slightly more modern\n  `__atomic_*()` (#1750)\n\n* Fix calculation of `gsize` width on various platforms (including OpenBSD) (#1777)\n\n* Fix undefined behaviour causing brokenness in `g_utf8_find_prev_char()` when\n  compiling with GCC ≥ 8 (#1917)\n\n* Revert UNIX mode changes in `G_FILE_ATTRIBUTE_ID_UNIX_MODE` which broke OSTree (#1934)\n\n* Slightly improve performance for signal emissions when no handlers are connected (!1083)\n\n* Add `g_task_return_value()` and `g_task_propagate_value()` APIs to allow\n  `GTask` to be used from language bindings more easily (!1216)\n\n* Fix a file monitoring crash on kqueue-based systems (BSD) (!1221)\n\n* Bugs fixed:\n - #1004 [PATCH] Make gbacktrace use lldb on Mac OS X\n - #1552 CI: Add code style checks\n - #1750 Switch from  __sync_fetch_*() to __atomic_*() in glib/gatomic.h\n - #1777 gsize: improper typedef on (at least) OpenBSD\n - #1895 Regression: glib does not compile on centos 6: \"objcopy: unrecognized option '--add-symbol'\"\n - #1917 Test utf8-pointer fails with static build, LTO, optimisations, and new GCC\n - #1930 glib/tests/bookmarkfile.c:385:test_modify: assertion failed: (stamp == now)\n - #1934 ostree tests broken since bfdc5fc4fc84ef8518d2d1a328c8482cf5a38e98: File '/tmp/test-tmp-libostree_test-basic-user.sh.test-QB4SA0/diff-test2' is not empty\n - #1938 GDateTime doesn't support leap seconds\n - #1940 atomics test fails on FreeBSD CI since !1123\n - !1039 Improve documentation for footgun function g_tls_client_connection_copy_session_state()\n - !1083 Use the GObject hole on 64bit arches for some flags to improve performance\n - !1202 CI updates after !1177\n - !1208 gutils: Slightly improve docs formatting for g_get_os_info()\n - !1209 Make ld executable configurable\n - !1210 gdbus-server-auth test: Include gcredentialsprivate.h\n - !1213 gsocket: Improve diagnostics on bind() failure\n - !1214 gvariant, gbytes: Avoid memcmp (NULL, ., 0) or memcmp (., NULL, 0)\n - !1216 Make GTask more binding-friendly\n - !1218 gdb: Fix GHashTable pretty printer off-by-one error\n - !1220 gparam: fix memory leak in g_param_value_defaults()\n - !1221 Add NOTE_REVOKE to the list of the monitoring events\n - !1225 gtlsconnection: clarify handshake() documentation\n - !1227 Deprecate old GTlsConnection functionality even harder!\n - !1231 Fix build on old libc that does not define _SC_HOST_NAME_MAX\n - !1238 gstrfuncs: use gsize type internally for strv functions\n - !1242 gfileinfo: Clarify the documentation for G_FILE_ATTRIBUTE_UNIX_MODE\n - !1243 docs: Fix \"occurred\" typos in API documentation\n\n* Translation updates:\n - Spanish\n\n\nOverview of changes in GLib 2.63.1\n==================================\n\n* Several usability improvements to command line `gio` tool (!1153)\n\n* Add `g_array_steal()`, `g_ptr_array_steal()` and `g_byte_array_steal()` APIs (#285)\n\n* Add `g_get_os_info()` API (!1063, !1160)\n\n* Add `g_warning_once()` API (!1028)\n\n* Always resolve `localhost` to loopback address in `GResolver` (!616)\n\n* Add `GMainContextPusher` API (!983)\n\n* Limit recursion in `g_variant_parse()` (!1173)\n\n* Fix crash in `g_spawn()` with high FD numbers due to use of `select()` rather\n  than `poll()` (#954)\n\n* Allow passing empty `GValue`s to `g_param_value_set_default()` (!1186)\n\n* Escape header guards generated by `gdbus-codegen` better (#1379)\n\n* Bugs fixed:\n - #285 [PATCH] add array steal and memdup functions\n - #954 The g_spawn_sync() function uses select() which has limitations\n - #1318 rare failure in gdbus-peer test: invalid uninstantiatable type '(null)' in cast to 'GDBusServer'\n - #1379 gdbus-codegen generates invalid header guards when build directory contains a + character\n - #1622 NULL pointer derefs on g_vasprintf() failure\n - #1813 g_option_context_add_main_entries() is missing array annotation for entries parameter\n - #1831 No reply on private socket due to auth problem\n - #1836 gobject.c uses undefined annotation “(not optional)”\n - #1858 docs/reference/gobject/tut_gobject.xml: object properties example uses deprecated API\n - #1877 g_cancellable_source_new annotated with 'skip'\n - #1896 Use after free when calling g_dbus_connection_flush_sync() in a dedicated thread\n - #1897 glib 2.62.0 fails test 'test_writev_no_vectors' wih gcc7\n - #1903 use-after-free in mimeapps test causes intermittent segfault during testing\n - #1906 test_os_info fails on FreeBSD\n - #1916 objcopy not used from cross-compilation file in GIO tests\n - #1923 Recent Versions of GLib Break Dolphin File-Manager's Thumbnailing when Using 'gtk2' Style\n - !616 Always resolve localhost to loopback address\n - !983 gmain: Add GMainContextPusher convenience API\n - !1014 tests: Add a test for g_assert_finalize_object()\n - !1028 gmessages: Add g_warning_once()\n - !1035 Switching from C gnu89 to C gnu99 standard\n - !1063 gutils: Add g_get_os_info()\n - !1082 gdatetime: Document RFC 3339 extensions when parsing ISO 8601\n - !1105 syscall flood on every time*() function call\n - !1120 Update documentation with FreeBSD build instructions\n - !1135 gmain: use atomic operation instead of GMutex to access g_main_context_default()\n - !1146 Solaris build fixes\n - !1147 gmodule: fix typo in doc comment\n - !1148 gio/gfileinfo: fix parameter references\n - !1149 gio/gfile: fix parameter reference for value_p\n - !1150 gio/gfile: fix parameter references to @contents\n - !1151 gio/gfile: fix typo in doc comment\n - !1152 gwinhttpvfs: Handle g_get_prgname() returning NULL\n - !1153 Several gio-tool bash completion fixes and improvements\n - !1155 Strict-aliasing fixes to new atomic built-ins\n - !1157 Fix various compiler warnings on Android\n - !1160 Add Windows support to g_get_os_info()\n - !1161 hash: Remove an assertion from the hot path\n - !1163 gcharset: Expand the documentation for g_get_locale_variants()\n - !1165 Use uname as a fallback to get OS info\n - !1167 Fix some minor leaks in testfilemonitor\n - !1168 Fix gdatetime tests on toolbox\n - !1171 Revert \"gdbus-codegen: emit GUnixFDLists if an arg has type 'h'\"\n - !1173 gvariant: Limit recursion in g_variant_parse()\n - !1177 ci: Add libdbus development files to CI Docker images\n - !1179 Improve GPtrArray doc-comments\n - !1180 array: Avoid use of memcpy(dest, NULL, 0)\n - !1181 gmain: Clarify thread safety of some common GSource functions\n - !1182 gio: Fix typo in URL\n - !1186 Allow using an empty GValue with g_param_value_set_default()\n - !1189 gparamspecs: Fix type class leaks on error handling paths\n - !1197 Fix GDBus test failures on non-Linux (in particular FreeBSD)\n - !1200 Minor fixes from a scan-build run\n\n* Translation updates:\n - Catalan\n - Chinese (Taiwan)\n - Spanish\n\n\nOverview of changes in GLib 2.63.0\n==================================\n\n* Add g_fsync() API (#35)\n\n* Fix regression in g_file_copy() when passing\n  `G_FILE_COPY_TARGET_DEFAULT_PERMS` flag; the destination permissions would be\n  private rather than following the process’ umask (!1142)\n\n* Several `GDateTime` parsing fixes (!1127)\n\n* Always build the tests if installed-tests are enabled, so that the tests can\n  actually be installed (!1141)\n\n* Rework atomic function implementations to use memory barrier in the correct\n  place (when compiler intrinsics aren’t providing the atomics), and fix\n  signedness issues (#1449, #1565)\n\n* Use the OS’ `fdwalk()` function (if safe) to speed up `g_spawn_*()` on BSD (#1638)\n\n* Remove the macOS `dyld` `GModule` implementation in favour of `dl` instead (!1093)\n\n* Bump Python requirement to ≥ 3.5, which we implicitly relied on anyway through\n  our Meson dependency (!1132)\n\n* Bugs fixed:\n - #35 add g_fsync to API\n - #174 g_file_copy always preserves  permissions, even if G_FILE_COPY_ALL_METADATA flag is not set\n - #259 docs: fix a misunderstanding in g_type_add_interface_*\n - #767 g_signal_lookup fails if class is not referenced\n - #1052 g_io_write_chars calls abort when given a null byte as input\n - #1449 glib fallback atomic int/ptr get/set have memory barrier in wrong place\n - #1565 Signedness of atomic operations\n - #1638 g_spawn_*() is extremely slow under certain circumstances\n - #1809 Provide API for working with PKCS11 backed certificates\n - #1843 TSAN false positive with g_atomic_pointer_get/g_atomic_pointer_set under Clang\n - #1865 g_variant_get_data_as_bytes fails after serializing a variant\n - #1875 Segfault and Overflow in __gio_xdg_cache_mime_type_subclass() with Wps-Office installed\n - #1887 glib 2.62.0 breaks loading dylibs as modules\n - #1888 2.62: docs build on Windows broken\n - #1897 glib 2.62.0 fails test 'test_writev_no_vectors' wih gcc7\n - !1020 docs: Remove priv pointers from the tutorial example\n - !1062 gtype: mark the inline functions in G_DECLARE_*_TYPE() as UNUSED\n - !1080 tests: Fix skipping mkdir-with-parents-permission test\n - !1088 Various small scan-build fixes\n - !1090 giochannel: Clarify type of GSource callback in documentation\n - !1093 gmodule: remove macOS dyld implementation\n - !1095 Define G_IOV_MAX to 512 on macOS/iOS\n - !1099 gmem: clarify that g_malloc always uses the system allocator\n - !1109 doc: fix typo in gio/gsettings.c\n - !1110 gio: Add missing \"gio remove\" option to bash completion script\n - !1112 Add version macros for GLib 2.64\n - !1115 gdatetime: Fix error handling in g_date_time_new_ordinal()\n - !1116 gmarkup: Add a limit on the number of attributes in an element\n - !1119 Annotate the return value of various utility functions\n - !1124 docs: Fix typo in GConverter{Input,Output}Stream section titles\n - !1125 gdatetime: Fix error handling in g_date_time_new_week()\n - !1126 fileinfo: Mention that usec mtimes are set\n - !1129 gdate: Fix tautological comparison warnings on Android\n - !1130 Improve GLIB_DEPRECATED_MACRO_FOR output\n - !1131 gio/gfileinfo: fix param reference in doc comment\n - !1132 build: Bump Python requirement to ≥ 3.5\n - !1137 gregistrysettings: bump key name length to 2048\n - !1138 Always build tests if we enabled installed-tests\n - !1139 g_file_info_get_modification_date_time: Calculate in integer domain\n\n* Translation updates:\n - Danish\n - Italian\n - Panjabi\n - Serbian\n - Turkish\n\n\nOverview of changes in GLib 2.62.0\n==================================\n\n* Fix new `GFileInfo` APIs to work when `G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC`\n  was not queried (!1087)\n\n* Bugs fixed:\n - #487 Add valgrind test runs to CI\n - !1084 garray: Fix reference to GLIB_SIZEOF_INT\n - !1086 glib.supp: make gobject_init() calloc also of the possible kind\n - !1087 fileinfo: ignore USEC if not available\n\n* Translation updates:\n - Friulian\n - Portuguese (Brazil)\n\n\nOverview of changes in GLib 2.61.3\n==================================\n\n* Support setting thread name on BSD systems (#1761)\n\n* Install previously-uninstalled headers for public `GNativeSocketAddress`\n  object (#1854)\n\n* Very initial support for Windows apps (UWP) (!1057)\n\n* Add various new valgrind suppressions to `glib.supp` (#1879, !1075)\n\n* Bugs fixed:\n - #83 Optimisation for g_nearest_pow() in garray.c\n - #512 GSignal: accumulator function not called to accumulate G_SIGNAL_RUN_CLEANUP object handler return values\n - #873 allow NULL arguments to parse_strv\n - #905 Patches from static analysis run on 2.40\n - #1057 goption: add sanity check to input parameters\n - #1309 GSettings object stops emitting \"changed\" signal on g_settings_reset after call to g_settings_delay\n - #1620 GDBus criticals from GVfs with GLib master\n - #1761 Setting thread-name on BSD systems\n - #1803 GDK_SCALE=X is not respected when using \"gio open\"\n - #1819 Invalid characters in Open Location dialog crashes GIMP\n - #1852 Regression: g_mkdir_with_parents() returns 0 on failure\n - #1854 glib/gio: GNativeSocketAddress headers not installed.\n - #1860 g_clear_handle_id does not trigger GLIB_VERSION_MAX_ALLOWED warning\n - #1863 Potential invalid writes on g_utf8_strreverse\n - #1867 A couple of en_GBisms\n - #1870 GSettingsBackend watches not thread-safe\n - #1879 Incomplete valgrind suppressions - 16 KiB leak reported by valgrind from loading libglib-2.0.so\n - #1880 glib/gbacktrace.c: If dup2 happened to return -1, don't call dup2 with same value\n - #1881 GIO_USE_VOLUME_MONITOR and GIO_USE_FILE_MONITOR do not work as documented\n - !1002 Remove mentions of mailing lists from the documentation\n - !1011 gapplication: Fix a leaking GRemoteActionGroup member\n - !1015 Post-release version bump\n - !1016 gnetworkmonitornm fixups\n - !1017 Improve ISO 8601 parsing by GDateTime\n - !1023 g_object_get_property: Improve documentation for use of G_VALUE_INIT\n - !1026 gutf8: Assert that written memory stays in bounds\n - !1027 gfileutils: Fix error propagation for other than ENOENT\n - !1031 meson: build gnulib if printf isn't good enough\n - !1032 meson: small printf check cleanups\n - !1033 win32: don't assume the format specifier for the stdlib printf/scanf like functions\n - !1034 glib/tests/fileutils: Add a reproducer for #1852\n - !1036 cond test: Don't make assumptions about struct sigaction member order\n - !1037 Meson: Override glib-compile-resources/schemas\n - !1044 Relax use of g_test_bug() to not require g_test_bug_base() to be called first\n - !1049 minor typos in the documentation\n - !1050 tests: Fix a pragma warning on FreeBSD\n - !1054 gerror: Add a docs paragraph about not displaying errors verbatim in UI\n - !1057 Some (probably) easy uwp patches\n - !1059 Update win32 readme, add myself to codeowners\n - !1066 libffi.wrap: Meson port has moved to FDO gitlab\n - !1068 gsubprocesslauncher.c: fix documentation\n - !1071 meson: Move libdl_dep to the top level\n - !1074 Adjust README formatting\n - !1075 glib.supp: add suppression for g_type_class_ref()\n\n* Translation updates:\n - Basque\n - Catalan\n - Czech\n - English (United Kingdom)\n - French\n - Galician\n - German\n - Hungarian\n - Indonesian\n - Korean\n - Lithuanian\n - Polish\n - Romanian\n - Spanish\n - Swedish\n\n\nOverview of changes in GLib 2.61.2\n==================================\n\n* Add various new array functions (#236, #269, #373)\n - `g_array_copy()`\n - `g_ptr_array_copy()`\n - `g_ptr_array_extend()`\n - `g_ptr_array_extend_and_steal()`\n - `g_array_binary_search()`\n\n* Add `g_assert_finalize_object()` helper function for writing tests (#488)\n\n* Rework how D-Bus connections are closed/unreffed when `g_test_dbus_down()` is\n  called. Tests which leak a `GDBusConnection` may now time out and abort,\n  rather than silently leaking. (#787)\n\n* Add a deprecation macro for GLib macros, and use it; third-party uses of\n  long-deprecated GLib macros may now start causing warnings. (#1060)\n\n* Deprecate `GTime` and `GTimeVal`, and various functions which use them.\n  Use `GDateTime` and `guint64` UNIX timestamps instead. (#1438)\n\n* Stop using `G_DISABLE_DEPRECATED` to allow disabling deprecation warnings;\n  third-party code should now be using\n  `GLIB_VERSION_{MIN_REQUIRED, MAX_ALLOWED}` to control symbol usage (!871)\n\n* Improve support for running `ninja test` when GLib is built statically (#1648)\n\n* Improve `GNetworkMonitor` detection of offline states (#1788)\n\n* Fix build failure on macOS related to missing `_g_content_type_get_mime_dirs`\n  function (#1791)\n\n* Add various installed utilities’ paths to `gio-2.0.pc` (#1796)\n\n* Fix keyfile `GSettings` backend and portal (especially relevant to any version\n  of GLib included in a flatpak runtime) (#1822, !985)\n\n* More IPv6 ‘Happy Eyeballs’ fixes in `GNetworkAddress` (!865)\n\n* Fix CVE-2019-12450, wide permissions of files when copying using GIO (!876)\n\n* Bump the Meson dependency from 0.48.0 to 0.49.2; we won’t depend on anything\n  higher than this for a while, as Debian 10 ships 0.49 (!924)\n\n* Various test fixes for Windows (!930, !931)\n\n* Initial support for Universal Windows Platform (UWP): certification, and use\n  of packaged libraries (!951)\n\n* Add experimental clang-cl support on Windows, allowing `g_autoptr()` support\n  on Windows (!979)\n\n* Bugs fixed:\n - #77 G_STDIO_NO_WRAP_ON_UNIX wraps\n - #236 Add a function to copy an array\n - #269 Additional convenience functions for g_ptr_array\n - #373 GArray could use a binary search function\n - #436 running tests leaves lots of coredumps\n - #453 find-enclosing-mount docs confusing\n - #488 Add g_object_assert_last_unref() helper macro to detect object leaks in tests\n - #590 A reader lock can be obtained even if a writer is already waiting for a lock\n - #638 g_atexit is defined when not declared\n - #737 Initialize GValue in g_object_get_property()\n - #787 gtestdbus: Properly close server connections\n - #804 gdbusproxy prefixes unstripped error\n - #870 Fix and enhance GDatetime for Windows\n - #872 ucs4 functions have wrong return transfer\n - #887 gdusmessage.c mishandles bounds of GDBusMessageType and related enums\n - #894 gvalue: Avoid expensive checks where possible\n - #940 Docs for g_socket_listener_set_backlog are not very helpful\n - #943 G_DEFINE_TYPE_WITH_PRIVATE docs not helpful\n - #1018 Allow guid key in dbus addresses\n - #1060 Add deprecation macro for macros\n - #1169 Tools can display gibberish messages from translations\n - #1270 g_get_charset always returns 8-bit codepage on Windows, crippling UTF-8 output\n - #1438 Deprecate GTimeVal- and GTime-based APIs\n - #1635 g_socket_join_multicast_group iface parameter fails on win32/64\n - #1648 2.58.2: Assorted asserts fail in Arch Linux when built statically\n - #1729 g_content_type_guess segfaults when passed an empty data buffer on Mac OS\n - #1788 GNetworkMonitor claims I am offline\n - #1790 documentation on g_file_info_get_attribute_as_string\n - #1791 _g_content_type_get_mime_dirs missing from libgio-2.0.0.dylib on MacOS\n - #1792 glib-genmarshal generated valist marshal does not respect static scope for some types\n - #1793 glib-genmarshal generates wrong code for va marshaler for VARIANT type\n - #1794 API Proposal: g_timer_is_active\n - #1796 Add gio-querymodules variable to pkg-config file\n - #1797 glib/tests/win32 test failing on 64-bit Visual Studio builds\n - #1798 /contenttype/tree reliably fails on FreeBSD since !863\n - #1807 g_dbus_server_new_sync() documentation references nonexistent function\n - #1808 Stopping a GDBusServer should clean up Unix socket paths (if not abstract) and nonce-tcp nonce files\n - #1811 Introspection info for g_unichar_compose's 3rd arg should be OUT\n - #1822 keyfile gsettings backend not loading\n - #1823 Documentation for disabling selinux is incorrect\n - #1825 GKeyFileSettingsBackend created without filename construct property and unchecked assertion\n - #1828 Small typo in gio manpage\n - #1837 Specify for each (optional) parameter, whether it is OUT or INOUT\n - #1838 Reword documentation for G_DECLARE_FINAL_TYPE\n - #1847 Setting GLIB_VERSION_{MIN_REQUIRED, MAX_ALLOWED} to before 2.56 triggers warnings\n - !533 docs: Document pitfall of deprecation pragmas\n - !563 ci: Add scan-build job in a new ‘analysis’ pipeline stage\n - !678 glib-compile-schemas: Improve translatable strings\n - !817 gdate: Officially mark GTime as deprecated\n - !851 gsettings: Document that lists are returned in no defined order\n - !853 gobject: Fix apostrophe usage in a few small bits of documentation\n - !859 gobject: Add a g_assert_finalize_object() macro\n - !863 gunicollate/cygwin: Don't use __STDC_ISO_10646__ for wchar_t related checks\n - !865 gnetworkaddress: fix \"happy eyeballs\" logic\n - !867 Post-release version bump\n - !871 Drop G_DISABLE_DEPRECATED\n - !873 Use atomic reference counting for GSource\n - !874 Clamp number of vectors to IOV_MAX / UIO_MAXIOV for GOutputStream writev()...\n - !875 CI/msys2: disable coverage reporting, lcov doesn't support gcc9 yet\n - !876 CVE-2019-12450: gfile: Limit access to files when copying\n - !877 gio: specify proper c_marshaller and va_marshallers\n - !883 tests: Fix small race in GSubprocess tests\n - !884 garcbox.c: Fix typo atomit => atomic\n - !885 goption: Clarify G_OPTION_ARG_FILENAME documentation\n - !889 Include <sys/filio.h> for FIONREAD\n - !901 gmain: Clarify that g_source_destroy() doesn’t drop a reference\n - !904 Add glib-genmarshal tests and fix some valist marshaller bugs\n - !906 property action: Add state hints\n - !908 Improve testfilemonitor test repeatability and debuggability\n - !909 D-Bus auth mechanism improvements\n - !914 ci: Run scan-build in a different build directory\n - !915 docs: fix typo on arrays examples in gvariant-text\n - !917 docs: Fix name of IRC channel in CONTRIBUTING.md\n - !919 glib/tests/refcount.c: Fix tests on non-GCC-isque compilers\n - !920 gmacros: Only use deprecated attributes on enumerators with GCC ≥ 6.5\n - !923 Check if compiler symbols are defined before using them\n - !924 Bump the required version of Meson\n - !930 glib/tests/convert.c: Skip tests that aren't meaningful for Windows\n - !931 glib/tests/fileutils.c: Fix stdio Wrapper Test on Windows\n - !934 build: Increase the slow test timeout to 180s\n - !935 Ignore */__pycache__/* directories\n - !937 Fix module tests on Visual Studio builds\n - !939 gstdio: minor cleanups\n - !941 list model: Expand items-changed docs\n - !944 gutils: Don't limit the length of the host name to 99\n - !945 Avoid overrunning stack at the end of the varargs.\n - !947 gobject/tests/signals.c: Fix tests on Windows\n - !948 GObject: Fix mkenums.py and genmarshal.py tests on Windows\n - !950 ci: Enable CI on FreeBSD 12\n - !951 Preliminary patches for Universal Windows Platform support\n - !952 gio: Make minor docs improvements\n - !953 g_utf8_normalize: Doc comment return missing nullable annotation\n - !954 Fix the ISO 15924 code for Manichaean\n - !955 gmacros: Use _Static_assert when C11 is available\n - !958 gthread: fix minor errno problem in GCond\n - !961 gmain: Fix g_main_context_prepare priority annotation\n - !962 gmacros: Use _Static_assert only for non-expr static assert\n - !964 gmacros.h: Use static_assert on MSVC if possible\n - !968 Fix typo in request handle\n - !970 gdatetime: Unset LC_ALL for the test as well\n - !971 docs.c: Forward link from g_auto* → G_DEFINE_AUTO*\n - !973 doc: fix typo in gio/gresource.c\n - !979 Experimental clang-cl support\n - !980 gmacros.h: Add better support for clang-cl\n - !981 gio: fix typo in g_settings_reset documentation\n - !982 Various doc fixes\n - !985 Keyfile portal fixes\n - !987 gio/tests: Remove code and comments referring to libtool\n - !991 fix atomic detection on older gcc versions\n - !992 docs: Add example to g_test_summary() documentation\n - !994 gio: Fix minor docs mistakes\n - !996 Small array test fixes\n - !997 gdbusaddress: Add missing transfer annotation\n - !1007 Resubmission of !832 “Try to create the complete path right away and fall back”\n - !1009 gapplication: remove inactivity_timeout source on finalize\n\n* Translation updates:\n - Hungarian\n - Indonesian\n - Portuguese (Brazil)\n - Spanish\n\n\nOverview of changes in GLib 2.61.1\n==================================\n\n* `g_unichar_isxdigit()` and `g_unichar_xdigit_value()` now handle full-width\n  characters (U+FF21–U+FF26 and U+FF41–U+FF46) (#58)\n\n* Deprecate `gtester` utility and its test reporting format and enable TAP\n  output by default instead — the `--tap` option to tests is now a no-op\n  (#1441, #1619)\n\n* Add `g_test_summary()` to allow test authors to programmatically summarise\n  what each unit test in a test suite does (#1450)\n\n* Upgrade to Unicode Character Database v12.1 (#1713, !822)\n\n* More IPv6 Happy Eyeballs fixes to `GNetworkAddress` and `GSocketClient`\n  (#1747, #1771, #1774)\n\n* Fix valgrind and gdb support for the new `GHashTable` changes (#1749, #1780)\n\n* Fix GTask wait times growing faster than the number of task threads (#1683)\n\n* Change `GApplication` to ignore `-psn_*` arguments on the macOS command line,\n  as they are irrelevant (#1784)\n\n* Add `g_autoqueue()` helper macros, similar to `g_autolist()` (!474)\n\n* Add pre-allocated link helpers for `GList` and `GQueue`:\n - `g_list_insert_before_link()`\n - `g_queue_insert_before_link()`\n - `g_queue_insert_after_link()`\n\n* Improve network availability detection with NetworkManager to treat lower\n  levels of connectivity as having reduced availability (!781)\n\n* Add `g_clear_signal_handler()` to allow disconnecting from a `GObject` signal\n  and clearing the signal handler ID to zero in a single call (!819)\n\n* Add `g_autoptr()` support for `GRWLock` (!825)\n\n* Define `G_OS_UNIX`, not `G_OS_WIN32`, when GLib is built agains Cygwin (!862)\n\n* Bugs fixed:\n - #29 GScanner: should explicitly document modifiable fields (value, next_value, ...)\n - #58 g_unichar_isxdigit() and g_unichar_xdigit_value() should deal with full-width a-fA-F\n - #106 Boxed types should be documented better\n - #135 g_unichar_totitle(0) returns 0x00001F88 instead of 0\n - #429 g_format_size() is broken on Windows\n - #1441 Deprecate gtester\n - #1450 Add API for tests to describe what they're checking\n - #1619 GTest should have a way to default to TAP\n - #1683 GTask: task_wait_time is increased constantly when the number of running thread is greather than 10\n - #1713 Upgrade to Unicode Character Database v12\n - #1739 meson build failure libdl\n - #1747 Critical in g_socket_client_async_connect_complete\n - #1749 New GHashTable implementation confuses valgrind\n - #1753 Remove memory leaks from gio/test/resolver.c\n - #1755 Please revert #535 gmacros: Try to use the standard __func__ first in G_STRFUNC\n - #1759 test_month_names: assertion failed\n - #1760 Document for g_resolver_lookup_records why it returns a list of list of gchar*.\n - #1763 tests: -p runs tests in the reverse of the specified order\n - #1768 g_strlcat(): Possible buffer overflow in implementation\n - #1771 GNetworkAddressAddressEnumerator unsafely modifies cache in GNetworkAddress\n - #1774 Leaks in gsocketclient.c connection code\n - #1776 glib/date test fails\n - #1780 GDB pretty-printer for GHashTable no longer works\n - #1782 Error in documentation for cross-compile.\n - #1784 MacOS adds a -psn_X_XXXXXX parameter to the command line\n - !474 Add g_autoqueue\n - !476 Add pre-allocated link helpers for GList and GQueue\n - !556 gtestutils: Make --tap compatible with -p and --GTestSkipCount\n - !732 gsocket: Clarify in docs that `flags` arguments can be platform specific\n - !766 W32: swap special g_get_prgname() for platform_get_argv0()\n - !774 Only build tests if certain conditions are met.\n - !780 Add copyright and licensing terms to test report generator\n - !781 gnetworkmonitornm: Fix network available detection\n - !782 build: Fix check for RTLD_NEXT\n - !785 Remove monitor test\n - !787 build: Remove */.gitignore files\n - !791 glib/gconstructor.h: Include stdlib.h for MSVC builds\n - !792 general: Remove a few unhelpful references to ‘master’\n - !795 gdesktopappinfo: Add support for MATE and Xfce4 terminals\n - !802 gio: tests, don't check for libdl on OpenBSD\n - !806 Get to 100% coverage on GQueue tests\n - !808 Update the Docker images used for CI\n - !809 Modified version of !784 — Adding tests cases for a better coverage of glib/tests/strfuncs.c\n - !813 gappinfo: Add precondition checks to GAppLaunchContext env methods\n - !814 gschema.dtd: Add target attribute to alias\n - !819 Clear signal handler\n - !820 ci: Keep JUnit report script working on Debian stable\n - !821 Various minor cleanups to autoptrs\n - !822 glib: Update Unicode Character Database to version 12.1.0\n - !825 Add autoptr support for GRWLock\n - !831 build: (Long time after) post-release version bump\n - !835 Fix typo in German translation\n - !836 Document the best practices for binding GInitiallyUnowned\n - !862 build: define G_OS_UNIX, not G_OS_WIN32 under cygwin\n\n* Translation updates:\n - Basque\n - Catalan\n - German\n - Indonesian\n - Spanish\n\n\nOverview of changes in GLib 2.61.0\n==================================\n\n* Changes to `iconv` configure options, including the default iconv\n  implementation on macOS — distributors may need to check their configure\n  scripts (#1557)\n\n* Build fixes when building GLib with `G_DISABLE_ASSERT` defined (#1708)\n\n* Fix documentation for `gdbus-tool wait` to use correct units (#1737)\n\n* Improvements to symlink handling on Windows (!269)\n\n* Add exception handling for crashes on Windows (!582)\n\n* Set `G_WITH_CYGWIN` again when GLib is built on Cygwin (this was a regression\n  from the autotools build) (!736)\n\n* Use `GCocoaNotificationBackend` by default on macOS, rather than\n  `GGtkNotificationBackend` (!745)\n\n* Use Windows symbol visibility when GLib is built on Cygwin, as PE binaries\n  are subject to W32 visibility mechanics — this affects the definition of\n  `_GLIB_EXTERN` (!752)\n\n* Add coloured output support to `gdbus introspect` (!761)\n\n* Bugs fixed:\n - #682 docs: advise not to use non-literal strings as qdata keys\n - #1177 gparted crashes due to g_quark_from_static_string used in global initialization\n - #1258 the buffer written to by g_input_stream_read is not marked as an out parameter\n - #1557 By default glib tries to use libc instead of native iconv on OSX\n - #1566 Meld Windows shows error on startup \"There was a problem starting c:\\Program\"\n - #1614 GIO tests fail on FreeBSD CI with: Unexpected error from C library during 'pthread_mutex_lock': Invalid argument\n - #1708 Building GLib with G_DISABLE_ASSERT fails\n - #1709 GResource generation test incompatible with stable LLVM on Linux\n - #1710 Crash in g_cancellable_cancel\n - #1712 gdbus-proxy test is flaky\n - #1724 unconditional check in fuzzing/meson.build\n - #1725 gosxappinfo.h is not installed on macOS\n - #1727 Cannot use trash folder with an NFS mount using automount / autofs\n - #1728 GSocket does not support ENOTSOCK\n - #1732 Win32: lookup_by_name_async segfaults for not available domains\n - #1737 gdbus-tool wait command timeout argument incorrect unit reference\n - !67 glib: update internal gnulib from upstream\n - !269 Win32 symlink code refactoring\n - !493 tests: Check that cancelling g_file_replace don't overwrite existing file\n - !582 Basic W32 exception handling for glib\n - !680 Fix warnings glib\n - !690 Fix thread safety issues\n - !694 gvariant-parser: Fix pattern coalesce of M and *\n - !706 Fix data races in task test and gmenumodel test\n - !709 Bump release version for 2.62 series\n - !710 socket: Fix annotation for flags in g_socket_receive_message\n - !712 gwin32: Fix comment for g_win32_veh_handler\n - !716 Various minor documentation fixes\n - !717 Improve formatting of GCC attribute documentation\n - !718 GSocketClient - Free last error if a connection attempt fails and on retry the...\n - !719 Handle an UNKNOWN NetworkManager connectivity as NONE\n - !721 codegen: Fix use of uninitialised variable\n - !723 Provide examples for GNUC attribute macros\n - !724 meson: do a build-time check for strlcpy before attempting runtime check\n - !728 gsocket: Remove (type) annotation from flags arguments\n - !730 Improve gdbus-address parsing tests\n - !735 docs: Use the right g_autoptr function when using an auxiliary function\n - !736 Set G_WITH_CYGWIN again\n - !737 gresolver: Don’t use gai_strerror() on Windows, as it isn’t threadsafe\n - !741 Fix use-after-free triggered by gnome-session-binary\n - !745 gcocoanotificationbackend: give more priority than the gtk one\n - !749 gio: Add missing autocleanup definition for GSettingsSchema{Key,Source}\n - !750 Check for RTLD_NEXT\n - !752 Use W32 visibility for Cygwin\n - !754 Check for /proc/self/cmdline\n - !757 Fix gnulib build on older Visual Studio builds\n - !760 Properly ensure the cocoa notification backend type\n - !761 RFC: gdbus-tool: Add --color option for introspect\n - !762 gutils: Add (nullable) annotation to g_get_prgname()\n - !765 gslice: Use a convenience macro\n - !769 ci: Generate a cover report for the test suite\n - !772 tests: Check that option-argv0 test succeeds on Linux\n - !776 tests: Only run --external-data test on GNU ld/objcopy\n - !779 Fix 2.62 documentation symbols\n\n* Translation updates:\n - Dutch\n\n\nOverview of changes in GLib 2.60.0\n==================================\n\n* Further fixes to the Happy Eyeballs (RFC 8305) implementation (#1653, #1679, #1693)\n\n* Add support for the XDG trash portal (#1676, !276)\n\n* Bugs fixed:\n - #1653 gsocketclient-slow test is flaky\n - #1658 keyfile settings backend: Consider tightening permissions\n - #1668 Fill in CODE-OWNERS file\n - #1675 glib-compile-resources: c_name generation issue\n - #1676 Trash portal tries to open files as read-only but D-Bus API documents against that\n - #1679 socket-service test is flaky\n - #1693 Happy Eyeballs failure in gsocketclient-slow test\n - #1697 gthreadresolver: do_lookup_records does res_ninit with an uninitialized state\n - #1698 g_base64_encode(NULL, 0) causes critical warnings\n - !276 Support the trash portal\n - !639 gvariant-parser: Fix error handling when type coalescing fails\n - !666 Socket fixes to W32 test suite\n - !674 Update gvdb submodule\n - !676 Initialize a variable\n - !677 gerror: Add a missing precondition assertion in documentation\n - !686 gio: Also support modules built with MSVC\n - !688 gsocketclient: Fix critical on cancellation\n - !689 glib-compile-resources: Fix a minor leak\n - !691 gtask: Separate GTask fields memory locations to avoid data races\n - !692 glib.supp: Add more variations of existing suppressions\n - !696 Move closures refcount test to gobject/tests/\n - !698 gthreadedresolver: Remove unused thread pool\n - !699 tests: Fix closure-refcount to preserve old semantics\n - !702 Rename gobjectenumtypes.[ch] to glib-enumtypes.[ch]\n - !703 Clean up gmarshal.[ch]\n\n* Translation updates:\n - Catalan\n - Czech\n - French\n - Friulian\n - German\n - Italian\n - Korean\n - Romanian\n - Serbian\n\n\nOverview of changes in GLib 2.59.3\n==================================\n\n* Fix support for g_get_user_special_dir() on macOS, including support for the Downloads directory (#1048)\n\n* Ensure that cancelling a GTask cannot cause its callback to be called synchronously (in the same call chain as the original *_async() call) (#1608)\n\n* Further fixes to the Happy Eyeballs (RFC 8305) implementation (#1644, #1680)\n\n* Various fixes for installation of installed tests (thanks to Iain Lane) (!649, !651)\n\n* Various fixes for tests when run on Windows (thanks to LRN) (!665, !667)\n\n* Bugs fixed:\n - #535 gmacros: Try to use the standard __func__ first in G_STRFUNC\n - #875 gio-gvfs on Windows: Don't mishandle other non-native URIs in gwinhttpvfs.c\n - #1048 \"Desktop\" shortcut appears twice in file chooser sidebar on OSX\n - #1608 Cancellation might not be asynchronous under certain circumstances\n - #1644 network-address test failure in CI: IPv6 Broken (g-io-error-quark, 24)\n - #1680 Regression: g_socket_client_connect_to_host_async() sometimes gets \"Connection refused\" when connecting to localhost\n - #1686 gdbus-peer test is sometimes timing out\n - !613 Use win32 io channel on windows for the protocol test\n - !634 Win32: gio/gsocket.c: Set WSAEWOULDBLOCK on G_POLLABLE_RETURN_WOULD_BLOCK\n - !638 gvariant-parser: Fix parsing of G_MININT* values in GVariant text format\n - !640 tests: Tag socket-service test as ‘flaky’\n - !641 Minor typo fixes to GSpawn documentation\n - !645 gsocketlistener: Fix multiple returns of GTask when accepting sockets\n - !647 gsocketclient: Ensure task is always returned on cancel\n - !648 gio/tests/task: Run the worker indefinitely until it's cancelled\n - !649 gio tests: Install test1.overlay file when building installed tests\n - !650 gstring: fully document semantics of @len for g_string_insert_len\n - !651 tests: Install the slow-connect-preload.so library and use it\n - !667 GSubprocess fixes for W32 test suite\n - !668 tests: Mark gdbus-peer test as flaky\n - !669 GWin32VolumeMonitor: Sort the volumes correctly\n - !670 gpollableoutputstream: Fix the description of the interface\n - !672 Fix some tests when running as root\n\n* Translation updates:\n - Catalan\n - Danish\n - French\n - Indonesian\n - Kazakh\n - Portuguese (Brazil)\n - Slovenian\n - Turkish\n\n\nOverview of changes in GLib 2.59.2\n==================================\n\n* Fix check on GDBusMessage size when reading it. (#1642)\n\n* Add async GIO API: g_file_query_default_handler_async(), g_app_info_launch_uris_async() (#1249, #1347)\n\n* Fix some bugs in the Happy Eyeballs implementation. (#1646, #1649)\n\n* Install a new generated header with enum types for Unicode enums. (!481)\n\n* Support the XDG trash portal. (!276)\n\n* Bugs fixed:\n - #1224 TSAN patches\n - #1249 xdg-open/gnome-open doesn't work if service isn't started\n - #1347 g_app_info_launch_default_for_uri_async  is not really async\n - #1376 gmarkup: Optimize g_markup_escape_text()\n - #1642 minor mismatch between error and code in g_dbus_message_bytes_needed\n - #1646 Criticals in g_socket_client_enumerator_callback()\n - #1649 Critical in g_socket_client_connected_callback\n - #1673 G_MININT constants broken in g-i\n - !276 Support the trash portal\n - !481 Define enum types for Unicode enums\n - !585 gio: do not pass O_PATH file descriptors to portal APIs\n - !593 Don't fail trash test if ~/.local doesn't exist or mount points can't be determined (master)\n - !609 Make `g_app_info_launch_uris_async()` really asynchronous\n - !619 gvariant: Fix a mistake in docs\n - !622 Fixing warnings\n - !626 gdbus: Avoid printing null strings\n - !627 gsocketclient: Fix criticals\n - !629 Various memory leak cleanups to GSettings tests (subset)\n - !630 docs: Ignore more version macros\n\n* Translation updates:\n - Galician\n - Hungarian\n - Lithuanian\n - Polish\n - Spanish\n\n\nOverview of changes in GLib 2.59.1\n==================================\n\n* Autotools support is gone. (!580)\n\n* g_format_size() now uses a no-break space to separate digits and units;\n  translations will need to be updated accordingly. (#1625)\n\n* New g_queue_clear_full() API. (#1464)\n\n* Fix argument quoting on win32 when spawning subprocesses. (!419)\n\n* Allow polling more than 64 handles on win32 using g_poll(). (#1071)\n\n* Tag various tests as ‘flaky’. These are no longer run routinely on our\n  upstream CI machines, and downstream packagers may want to not run them (or\n  not treat those test failures as package build failures) on their test\n  machines either. They are in the `flaky` test suite. (!579)\n\n* Add overlay support to g_resources_get_info(). (#1445)\n\n* Support defaults and locks in the keyfile GSettings backend. This will be\n  used for flatpaks. (!450)\n\n* Accept unquoted strings in the keyfile GSettings backend to simplify things\n  for sysadmins. (!603)\n\n* Update our contribution guidelines (`CONTRIBUTING.md`). (!590)\n\n* Add writev() and writev_all() APIs to GOutputStream and GPollableOutputStream,\n  and provide implementations of them for many subclasses. (#1431)\n\n* Bugs fixed:\n - #424 Add 'proxy' debugging support\n - #1055 Provide alignment macros\n - #1071 Eliminate MAXIMUM_WAIT_OBJECTS limitation in g_poll() on Windows\n - #1445 g_resources_get_info doesn't respect resource overlays\n - #1464 Add g_queue_clear_full() API\n - #1500 GListStore needs double checking on some warnings\n - #1623 xdg-open: file with colon results in “The specified location is not supported”\n - #1625 Unbreakable space needed when showing size of folder/file\n - #1636 GTask getters don’t return TRUE/FALSE after bitfield changes\n - #1637 EXCEPTION_ACCESS_VIOLATION in g_clear_pointer\n - #1639 GListStore implementation of g_list_model_get_item() returns wrong results on integer overflow\n - #1655 gvariant-parser warnings\n - #1663 G_MININT32 triggers compiler warning C4146 with Visual C++\n - #1666 `G_DEFINE_DYNAMIC_TYPE_EXTENDED` causes warnings with -Wcast-function-type\n - !319 giomodule: Print the type of each default GIO module\n - !333 Add writev() API to GOutputStream and GPollableOutputStream\n - !419 gspawn, win32: qouted args - escape end backslash\n - !450 Settings portal\n - !512 gtype: Clarify type of GInterfaceInitFunc\n - !516 gthread: Add g_private_set_alloc0() convenience API\n - !535 win32 gpoll: overcome the 64 handles limit\n - !545 goption: Fix an annotation on g_option_context_parse_strv()\n - !560 docs: Fix dconf GSETTINGS_BACKEND name in gio overview\n - !564 gtype: Document type for iface_default_init() function\n - !568 Add separate definitions of g_assert_[non]null() for C++\n - !571 docs: Add note on how to check a gboolean condition\n - !575 gio: Update bad cert error in accept-certificate and GTlsError docs\n - !579 Temporarily disable flaky tests\n - !580 Drop autotools support\n - !583 gmacros: MSVC supports the noreturn function attribute\n - !587 Remove unused .pc.in files\n - !588 MSVC: Move dirent implementation to glib/dirent/\n - !590 Update contribution documentation\n - !591 gfileinfo: Fix annotation for g_file_info_set_attribute_stringv\n - !592 Remove leftover build/ directory\n - !595 gtestutils: pass open file descriptors to subprocess\n - !597 tests: Tag gsocketclient-slow test as ‘flaky’\n - !598 gdbus-proxy test fails with GLib-GIO:ERROR:glib/gio/tests/gdbus-proxy.c:832:fail_test: code should not be reached\n - !599 gdtlsconnection: do not return on a void method\n - !601 gio: Support \"help\" in extension point env vars\n - !602 Update POTFILES.in\n - !603 keyfile settings: Accept unquoted strings\n - !608 build: Add -Wno-pedantic flag to compiler arguments\n - !611 gnetworkaddress: fix use-after-free for network address\n - !612 gdir: shutup a warning when building with msvc\n - !615 Fix a couple of wrong compiler warnings\n\n* Translation updates:\n - Spanish\n - Swedish\n\n\nOverview of changes in GLib 2.59.0\n==================================\n\n* This will be the last development release with autotools support. As our\n  Meson support has been around since 2.56.x, and was used to release tarballs\n  in 2.58.x, the next development release (2.59.1) will drop autotools as used\n  to build GLib. The macros installed for other packages to use will remain.\n\n* Add `G_TEST_OPTION_ISOLATE_DIRS` to redirect `XDG_*_HOME` to a temporary\n  directory for each unit test. (#538)\n\n* Support `Property.EmitsChangedSignal` annotations in `gdbus-codegen`. (#542)\n\n* Add `g_assert_cmpvariant()` API for unit tests. (#1191)\n\n* Hide bind mounts from GIO mount listings. (#1271)\n\n* Automatically realign data passed to `g_variant_new_from_bytes()` or\n  `g_variant_new_from_data()` if it is not correctly aligned. This prevents\n  misaligned accesses on architectures which don’t support them. Callers should\n  still aim to correctly align data to get higher performance. (#1342)\n\n* Support `ld -b binary` (on platforms which support it; i.e. Linux) to provide\n  large pre-compiled `GResource` resources with a fast compilation time. (#1489)\n\n* Unconditionally install GLib m4 macros, so that projects which depend on GLib\n  and which still build using autotools can continue to build even once GLib has\n  ported entirely to Meson. (#1520)\n\n* Various fixes to the Meson build.\n\n* Drop Python 2 support and require Python 3.4+. See discussion on\n  https://mail.gnome.org/archives/desktop-devel-list/2018-July/msg00004.html.\n  (!196)\n\n* `GHashTable` performance and memory improvements for common cases. See\n  https://hpjansson.org/blag/2018/07/24/a-hash-table-re-hash/. (!208)\n\n* Add flags that allow a `GApplication` to signal and replace a currently\n  running other instance of the same `GApplication`. This will be used for app\n  upgrades with flatpak. (!250)\n\n* Autostart xdg-desktop-portal when using the network monitor and proxy monitor\n  portal backends. (!317)\n\n* Add a g_task_set_name() API to allow `GTask`s to be described; useful for\n  debugging. (!384)\n\n* Enable FreeBSD CI on every commit for upstream GLib. (!387)\n\n* Various GVariant, GMarkup and GDBus fuzzing fixes, including buffer overflow\n  fixes. (!411)\n\n* Various fixes to eliminate thread races, found by thread sanitizer (tsan).\n\n* Deprecate TLS/DTLS rehandshaking, as it has been removed from the protocol in\n  TLS 1.3. (!478)\n\n* Support reading arguments from a file with `glib-mkenums`, which is useful\n  for long argument lists due to having deeply nested build directories, on\n  systems with a low limit on the command line length. (!489)\n\n* Make `g_environ_*()` case-insensitive on Windows, as the environment itself\n  is case-insensitive on Windows. (!500)\n\n* Add Application Layer Protocol Negotiation (ALPN) support to `GTlsConnection`\n  and `GDtlsConnection`, so that higher layer protocols can be negotiated when\n  setting up a TLS connection, without additional round trips and latency. This\n  is needed for eventual HTTP/2 support. (!520)\n\n* Add support for TPM keys in PEM files when loading TLS certificates. (!522)\n\n* Add a `GRecMutexLocker` auto-pointer wrapper for `GRecMutex`. (!528)\n\n* Bugs fixed:\n - #107 The \"g_key_file_get_comment\" interface returns comment with unexpected new line symbol at the end\n - #179 g_object_unref assert in debug code\n - #277 'destroy_data' in g_cclosure_new is registered as finalize notifier instread invalidate.\n - #538 Add helpers to redirect XDG_*_HOME to a temp dir for unit tests\n - #542 gdbus-codegen does not honor \"Property.EmitsChangedSignal\" annotations\n - #656 check for -Werror=format-security broken\n - #734 Provide a way to instantiate a GDBusProxy-derived class from a GDBusConnection and a object path without blocking\n - #827 gmain: Clarify that g_source_set_callback() is safe on attached sources\n - #1055 Provide alignment macros\n - #1119 GVolumeMonitor: Results don't reflect current state but state when application was launched\n - #1191 add g_assert_equal_variants\n - #1261 Add option to leave <default> in gschema empty\n - #1271 fstab binds appear as mounts (x-gvfs-hide is being ignored)\n - #1310 gdbusproxy: make g-name-owner property useful with unique names\n - #1313 Meson: Rework the config.h generation\n - #1342 Automatically realign data passed to g_variant_new_from_bytes() or g_variant_new_from_data()\n - #1343 g_date_set_parse: Parses \"September\" in Polish incorrectly\n - #1362 Incorrect documentation about GSettings child add/remove notifications\n - #1452 GFileInfo: unable to retrieve correct modification time of links and mounted volumes on Windows\n - #1471 Incorporate oss-fuzz fuzz targets into GLib\n - #1489 Use `ld -b binary` to speed up GResource generation for linking\n - #1498 distcheck fails in distclean\n - #1506 error: redefinition of typedef 'GKqueueFileMonitor'\n - #1509 test_timeval_to_iso8601_overflow: 'out' should be NULL\n - #1513 GIcon regression?\n - #1514 gio/appinfo test sometimes fails in CI\n - #1518 /network-monitor/create-in-thread fails in (LXC) containers on glib-2-56\n - #1520 Change conditions for installing m4 macros\n - #1522 Trash not working on NTFS folder accessed from symlink\n - #1523 GIO NetworkMonitor doesn't reflect the current network state\n - #1525 GTask allows (buggy) application code to cause callback to be called twice, without warning\n - #1527 Meson doesn't install data for installed-tests\n - #1528 Meson tests are hard to debug in an autobuilder environment\n - #1530 tests/mainloop-test appears to be flaky\n - #1535 meson: installed-test metadata not run in TAP mode\n - #1536 meson: spurious dependencies on convenience libraries in .pc files\n - #1537 meson: absolute paths to ${builddir} included in gtk-doc HTML\n - #1538 meson: G_HAVE_GROWING_STACK defined differently\n - #1539 meson: Some files are unnecessarily installed executable\n - #1541 meson: timeloop-closure test not installed\n - #1542 meson: /usr/lib/glib2.0/installed-tests/glib/gdbus-peer: error while loading shared libraries: libgdbus-example-objectmanager.so: cannot open shared object file: No such file or directory\n - #1544 meson: gtester-report #! not replaced with ${PYTHON}\n - #1546 Cross-compilation fails in 2.58\n - #1556 build: Too long file path issue with meson on Windows\n - #1562 GDate test suite fails with latest glibc\n - #1570 ghash.c:694:27: left shift of 1 by 31 places cannot be represented in type 'int'\n - #1572 Flags validation fails\n - #1575 g_date_time_format() should have format attribute\n - #1576 Fails to build with Meson on Debian armel (armv5te EABI softfloat little-endian)\n - #1580 glib-compile-resources using strings breaks building e.g. GTK+ on MS Visual C, which limits strings to 65535 chars\n - #1581 Memory used for reference counted data might be misaligned.\n - #1588 Moving a bookmark item to the same URI causes a crash\n - #1589 g_log_writer_is_journald memoizes a single result, even though it accepts a parameter\n - #1590 tests: g-file-info-filesystem-readonly fails if run more than once with fuse & bindfs installed\n - #1594 Return value of g_dbus_connection_get_unique_name not annotated as nullable\n - #1600 g_timeout_source_new_seconds overflows when given interval > (G_MAXUINT / 1000)\n - #1601 appinfo test fix is defective\n - #1605 g_date_time_format fails when used with non ASCII format string on POSIX locale\n - #1615 gdbus-codegen not generating nullable annotation\n - !196 [RFC] build: Drop Python 2 support and require Python 3.4+\n - !200 Add a new GTlsError to indicate protocol downgrade attacks\n - !208 GHashTable improvements\n - !219 glocalfilemonitor: Fallback to poll file monitor for NFS\n - !238 W32 GFileInfo improvements\n - !250 Application replace\n - !264 glib-compile-resources: encode data as string\n - !268 build: simplify alloca checks. See #1313\n - !272 dtrace: Add missing const attributes to types in glib_probes.d\n - !273 gtlsbackend: add support for setting the default TLS database\n - !277 Use \"command -v\" instead of \"which\"\n - !282 meson: Add macOS libtool versioning for ABI compatibility\n - !286 gspawn: Fix build on systems without O_CLOEXEC\n - !287 glib-compile-resources: Fix generated code compiling with C++ compilers\n - !289 tests: Add more tests to finish branch coverage of GHashTable\n - !290 build: fix installation dir of glib-gettextize\n - !292 Remove all ChangeLog files\n - !293 Document new volume class `loop`\n - !294 portal network monitor: Always emit changed signal on changed\n - !295 meson: fix typo\n - !296 Add G_GNUC_FALLTHROUGH for __attribute__(fallthrough))\n - !297 build: Drop AC_C_CONST from configure.ac\n - !302 Document that GTimeVal is subject to the year 2038 problem on 32-bit systems\n - !303 liststore: Simplify code\n - !304 Add more GListStore/GListModel tests\n - !309 codegen: Change pointer casting to remove type-punning warnings\n - !312 Enable GIO tests on Windows\n - !316 gdbus: Improve error when well-known name is unowned\n - !317 Autostart xdg-desktop-portal if needed\n - !322 gnetworkmonitornm: Set a GError properly on an error handling path\n - !332 gmarkup: Make the documentation even more explicit about untrusted input\n - !334 gio: automake: Add libgmodule dependency\n - !338 gcharset: fix leaking g_get_language_names_with_category\n - !339 Add g_desktop_app_info_get_string_list(); fix g_key_file_free()\n - !340 tests: Mark two more tests as slow\n - !345 Fix build failure on systems without POSIX spawn\n - !347 Use Meson 0.48.0 for CI\n - !348 Documentation tweaks for g_array_free\n - !353 Meson: Do not run tests/refcount with --tap\n - !354 Fix spelling mistakes detected by Debian's Lintian tool\n - !358 Autotools: Move libmount from Libs.private to Requires.private\n - !360 CI: Test static build on installed glib\n - !363 Tests: Mark printf wrappers with G_GNUC_PRINTF\n - !364 ci: Enable FreeBSD CI\n - !366 gunixmounts: Mark mounts as system internal instead of filtering out\n - !372 gmacros: Fix G_[UN]LIKELY to not mask -Wparentheses\n - !374 gthreadpool: Include prgname in thread name\n - !375 m4macros: Allow information from pkg-config to be overridden\n - !376 gthread: Clarify priority handling in GRWLock\n - !379 Ignore g_return_*if_fail() branches in lcov coverage report\n - !381 Add UTF-8 communication tests for GSubprocess\n - !384 gtask: Add a g_task_set_name() method\n - !387 ci: Enable FreeBSD CI in the official repository\n - !396 m4: Fix AM_PATH_GLIB_2_0 macro\n - !400 grefcount: add missing gatomic.h\n - !403 build-sys: Pass CFLAGS to $(DTRACE)\n - !405 ci/msys2: fix path to the lcov config file\n - !406 meson: Mark 1bit-emufutex test as slow\n - !407 meson: Increase test timeouts\n - !410 gfileutils: Add examples to g_path_get_dirname() documentation\n - !411 Various GVariant, GMarkup and GDBus fuzzing fixes\n - !412 Enable compile time check of g_date_time_format() format\n - !413 Add support for g_auto(s)list to G_DECLARE'd types\n - !414 gio, tests: ensure objectmanager sources are generated\n - !415 gseekable: fix 'attmepting' typo\n - !416 gdbus-peer: Make sure to not include objectmanager-gen.c source\n - !417 Fix ^*ay handling in g_variant_iter_loop()\n - !418 Meson: Cleanup a FIXME now that we have dict addition\n - !420 gdbus-codegen: add autocleanup for FooObject\n - !422 GMarkup buffer overflow fixes for error handling, round 2\n - !423 gutils: Check whether getauxval function exists\n - !424 ci: Fix Docker image version\n - !425 gdate: Reinitialize using_twodigit_years and locale_era_adjust.\n - !435 gdatetime: Fix formatting of time zones offsets in range -01:00 to +00:00\n - !436 valgrind: Add glib_init()-related suppressions\n - !440 Fix minor memory leaks in tests\n - !443 tests: Avoid multithreaded use of g_test_rand_int_range\n - !444 gvarianttypeinfo: Consistently use atomics to access ref_count\n - !446 gmain: Fix data races in GUnixSignalWatchSource and GChildWatchSource\n - !451 closures test: Avoid timeout on ARM64 CPUs\n - !452 Atomic reference count in GVariant, ContainerInfo and GDBus introspection\n - !453 tests: Fix some data races in tests\n - !454 gdbusproxy: make g-name-owner property useful with unique names\n - !458 glib-compile-resources: Fix size allocation for compressed streams\n - !460 gatomicrefcount: Make g_atomic_ref_count_init non-atomic\n - !461 Meson: Fix build error in gdbus-example-objectmanager\n - !462 meson: add aarch64 memory barrier handling\n - !463 gio, tests: fix leak of dbus connection.\n - !467 Update documentation of g_tls_connection_handshake() again\n - !469 docs: add index of new symbols for gio > 2.52\n - !470 docs: Clarify return/error behaviour of D-Bus signal subscriptions\n - !472 gdbusmessage: Gracefully handle message signatures with invalid types\n - !477 gthread: Remove unsynchronized access to g_once_init_list from assertion\n - !478 Deprecate TLS rehandshaking\n - !480 docs: add a missing semicolon\n - !482 Check for 'z' library before fallbacking to subproject\n - !483 meson: Turn selinux into a meson feature and make it auto by default\n - !484 Meson: Add 'nls' option to disable translation\n - !485 gdbus-codegen: Tag interfaces and properties so annotated with G_PARAM_DEPRECATED\n - !486 Check for zlib header\n - !489 glib-mkenums: Support reading @rspfiles for arguments\n - !490 gspawn: Fix g_spawn deadlock in a multi-threaded program on Linux\n - !491 Meson: Add missing include_directories when using glib as subproject\n - !492 g_value_get_variant: return value is transfer-none not transfer-full\n - !494 Resolve \"Follow-up from \"gunixmounts: Stop considering cifs/nfs as system file systems\"\"\n - !500 genviron: make g_environ_* case-insensitive on Windows\n - !504 tests: Unset LANGUAGE when running gdatetime tests\n - !505 Support isolating directories for unit tests\n - !508 ci: Install additional locales used during tests\n - !510 Add new Linux Testing project version number to configure script\n - !511 gvariant: Fix error handling for parsing Unicode escapes\n - !514 fix gdbus-codegen --interface-info-{header,body}\n - !515 binding: Clarify the use of g_object_unref() to remove a binding\n - !517 Meson: Fix deprecation warning with upcoming 0.49.0 release\n - !518 Meson: Fix declare_dependency() calls\n - !520 GTlsConnection: add ALPN support\n - !521 tests: Rename macro to avoid conflict with encoding prefix\n - !522 gtlscertificate: Add support for TPM keys in PEM files\n - !524 gdatetime: Fix typo in the comment\n - !528 Add GRecMutexLocker\n - !530 tests: Minor improvements to mkenums.py and taptestrunner.py used by it\n - !534 gtlscertificate: Fix bug in PEM private key parser\n - !536 Various minor docs fixes\n - !541 gtimezone: Fallback to /etc/timezone on Gentoo\n - !546 spawn: add shebang line to script\n - !547 Do not check for NULL when calling free()\n - !549 Improve documentation of g_assert_error()\n - !551 Revert \"tests: Fix GOptionContext leak in GSubprocess tests\"\n - !554 Only subscribe to owner-changed signals on message bus connections\n - !555 Suppress -Wint-in-bool-context warning with G_DEFINE_INTERFACE and g++\n\n* Translation updates:\n - Brazilian Portuguese\n - Czech\n - Danish\n - Greek\n - Hungarian\n - Lithuanian\n - Norwegian bokmål\n - Polish\n - Slovak\n - Slovenian\n - Spanish\n - Swedish\n - Turkish\n\n\nOverview of changes in GLib 2.58.0\n==================================\n\n* Tarball built with `ninja dist`, so if you want to build this release with\n  autotools (which is supported), you will need to re-run autogen.sh. This\n  release, and all micro releases in the 2.58.x series, support being built\n  with Meson or autotools. See:\n  https://mail.gnome.org/archives/gtk-devel-list/2018-June/msg00012.html\n\n* Fix cancellation of g_subprocess_communicate_async() calls. See !266.\n\n* Drop support for the __int64 type, which further breaks compilation on old\n  MSVC versions (before VS2013). See #1313.\n\n* Expose GSettings schema directory in gio-2.0.pc as `schemasdir`. See !274.\n\n* Support v3 of the xdg-desktop-portal network monitor API. See !265, !279.\n\n* Fix G_MODULE_SUFFIX on macOS when GLib is built with Meson — it should be `so`\n  rather than `dylib`. Projects that use Meson and the `g_module_build_path()`\n  API such as glib-networking should pass `name_suffix:` to `shared_module()` to\n  ensure that plugins continue to be called libfoo.so on macOS. See !280.\n\nBugs fixed:\n !280 meson: Always set G_MODULE_SUFFIX to `so` on macOS\n !266 subprocess: Fix communicate_cancelled signature\n !279 Revert \"Add a gnet utility\" (see !265)\n !265 Network monitor again\n !274 gio: Provide schemas directory information in pkg-config file\n !239 gvariant: Fix more bounds checking in GVariant text format parser\n !195 garray: add overflow checks before expanding array\n #1497 g_strdup_printf warns on invalid format specifier with G_GUINT64_FORMAT on Win32\n !270 autotools: remove support for the __int64 type. See #1313\n !267 ci: Add an autotools job\n\n* Translation updates:\n Czech\n Galician\n Indonesian\n Italian\n Kazakh\n Korean\n Turkish\n\n\nOverview of changes in GLib 2.57.3\n==================================\n\n* G_GNUC_MALLOC’s definition has been tightened up to match an updated\n  definition from GCC. Many uses of G_GNUC_MALLOC which were previously\n  appropriate may cause miscompilation with newer GCC versions. Check your uses\n  of it against the updated documentation. See #1465.\n\n* Many minor documentation fixes.\n\n* Fix for gint64 and int64_t compatibility on macOS and BSD. See #972.\n\n* Fix free space metadata on some file systems (notably FAT). See #328.\n\n* Support installed-tests with our Meson build system. See #1444.\n\n* Forbid @filename@/@basename@ in glib-mkenums templates, which is a change to\n  its long-standing behaviour (which was long-standing nonsensical). See !241.\n\n* Various stat() fixes on Windows. See #1452, #1476.\n\n* MinGW-w64 ABI warning: In case you build 64 bit glib without LFS support by\n  passing --disable-largefile (not the default) and use GStatBuf, you need to\n  rebuild your application as the size of GStatBuf has changed for this case.\n  See #1476.\n\n* Improve TAP compatibility of g_test_incomplete(). See #1474.\n\n* Change fallback preferences when loading icons. See !72.\n\nBugs fixed:\n !263 build: Clean files left behind after gio/tests/gresource.c test\n !262 gmem: Only evaluate pointer argument to g_clear_pointer() once\n #1465 Many uses of G_GNUC_MALLOC are incorrect\n #1448 g_error does not abort() as documented\n #1494 g_clear_pointer may not use the correct calling convention with its callback\n #972 Mismatch between gint64 and int64_t on 64-bit macOS/BSD\n !251 gtestdbus: Fix watcher crash on FreeBSD\n #1492 gcc-8: -Wcast-function-type: new warnings for g_list_copy_deep()\n !252 tests: fix gnotification tests broken due to the recent icon name fallback changes\n #328 filesystem::{free,size,used} not set for full FAT fs\n !248 network monitor portal: update properties initially\n #1373 Incorrect transfer annotation for g_binding_unbind.\n #1444 the meson build doesn't support installed tests\n #1027 Fix trashing on overlayfs\n #1454 gvdb does not treat corrupt files as empty as promised; dconf suffers\n !243 tests: Explicitly set TZ=UTC for g_time_val_from_iso8601() testing\n #1488 ‘O_CLOEXEC’ undeclared (first use in this function)\n !241 glib-mkenums: forbid @filename@/@basename@ in fhead and ftail\n !240 gtimer: Ensure arithmetic is correctly signed for ISO 8601 parsing\n #1452 GFileInfo: unable to retrieve correct modification time of links and mounted volumes on Windows\n !234 DOC: Documentation fix in GTask description\n #1363 Meson: Review cross compilation properties\n !225 gtimer: Add overflow checks to g_time_val_from_iso8601()\n !230 gbookmarkfile: Fix some more minor leaks when metadata elements are repeated\n !229 Fix up g_bytes_compare() documentation\n #1476 g_stat - possbile memory corruption causing SEGFAULT\n !199 Update TLS documentation\n #1474 g_test_incomplete() makes test_case_run() return FALSE\n #1475 glib/tests/atomic.c test_types() trips -Werror=bad-function-cast on Debian armel\n #1472 Test for BROKEN_IP_MREQ_SOURCE_STRUCT is broken on Windows / Mingw\n !220 date test: Use g_test_skip(), not g_test_incomplete()\n #1467 malloc difference causes refstring test to fail on FreeBSD\n !230 gbookmarkfile: Fix some more minor leaks when metadata elements are repeated\n #1466 Not Able to Build glib 2.57.2 in Mingw-w64 x64 bits\n #1433 test_posix_parse: assertion failed (g_time_zone_get_abbreviation (tz, 0) == \"UTC\"): (\"LMT\" == \"UTC\")\n #1446 Follow-up from \"Document difference between g_assert() and g_assert_*() wrt G_DISABLE_ASSERT\"\n !206 grefstring: Avoid an unnecessary NUL assignment\n #1458 g_volume_get_mount returns NULL value after g_volume_mount_finish is called with no error\n !72 gio: icons should fallback to non-preferred style appropriately.\n\n* Translation updates:\n Brazilian\n Chinese (Taiwan)\n French\n German\n Lithuanian\n Polish\n Romanian\n Turkish\n\n\nOverview of changes in GLib 2.57.2\n==================================\n\n* Require pcre 8.31\n* Require meson 0.47.0\n\n* Bugs fixed:\n 742456 Add g_steal_pointer() convenience function to mark ownership...\n 795569 MinGW CI: fix tests\n 796341 gmem.h: Use typeof() in g_steal_pointer() macro\n #1013 Support for per-session overrides\n #1360 glib-mkenums breaks if option specified but no nick\n #1175 Add names and tags to various GSources and GTasks constructed in GLib\n #903 g_main_context_wait() not deprecated in API, but emits a g_critical()...\n #786 Fix memory leaks in libgio tests\n #927 gio/gresource.c:do_lookup check for terminating \"/\"\n #976 Document difference between g_assert() and g_assert_*()...\n #1447 glib 2.57.1: test_month_names: assertion failed...\n #1407 Update to Unicode Character Database 11\n #1455 glib python tools have full python path in shebang, limits to 128 characters\n #1459 Missing g_return_val_if_fail in g_async_queue_timeout_pop\n\n* Translation updates:\n Friulian\n German\n Romanian\n Spanish\n\n\nOverview of changes in GLib 2.57.1\n==================================\n\n* New api:\n - g_hash_table_steal_extended\n - G_GNUC_NO_INLINE \n\n* Bug fixes:\n 668132 Use libmount and expose mount options on GUnixMountEntry type\n 736741 Update private copy of valgrind.h\n 748620 g_regex_* utf-8 validity requirements are not stated clearly\n 784995 meson: some Windows improvements\n 788771 NODELETE missing when built with meson\n 788773 meson does not install correct pc files\n 789968 Add g_autoptr() support for GTypeClass\n 794325 Various fixes to compile on OSX\n 795152 gdesktopappinfo: Mark GDesktopAppInfo constructors as nullable.\n 795165 Add g_date_time_get_timezone() and g_time_zone_get_identifier()\n 795180 Investigate performance impacts of recent compiler features on hot functions\n 795302 Add g_hash_table_steal_extended() API\n 795376 Add g_ptr_array_steal()\n 795544 Add binary/textfile/zero size detection\n 795569 MinGW CI: fix tests\n 795636 gitlab-ci: generate test coverage reports\n 795735 Fix comparison for GVariant property values\n 795802 gdbus-codegen doesn't accept --output-directory with --output for --body and --header\n 795849 gwin32: Fix detection of MinGW32 vs MinGW-w64\n 795876 meson: Fix checks for posix_memalign and stpcpy\n 795960 g_format_size_for_display() is deprecated since 2.30\n 796085 Meson: Many apps breaks on non-glibc because of missing libintl\n 796138 Fix typo in g_file_info_set_attribute docs\n 796139 Add g_autoptr() support for GParamSpec\n 796164 Fix atomic ops check in meson.build\n 796186 Typo: \"instead off\" in gsignal.c\n 796213 Meson: Fail to build on macosx\n 796220 meson: do not run atomic test with msvc\n 796264 Add android CI\n 796325 meson: Add exception for atomic ops test for Android\n 796328 gengiotypefuncs.py: Read and parse files in binary mode \n\n* Translation updates:\n Czech\n Indonesian\n\n\nOverview of changes in GLib 2.57.0\n==================================\n\n* Bug fixes:\n 739424\tRewrite kqueue GFileMonitor backend to drop threading\n 751826\tUse g_get_language_names() for other locale categories\n 788773\tmeson does not install correct pc files\n 793400\tg_application_id_is_valid() not strict enough\n 793578\tgdatetime tests depend on Japanese translation of month names\n 793645\ttest_month_names: Updated translations needed for el_GR, hr_HR, ru_RU\n 793729\tgitlab-ci: Add Windows MinGW support\n 793994\tGUnixVolumeMonitor doesn’t show user mounts when run as root\n 794170\tgdbus: hexdecode() and hexencode() do not return/use decoded/encoded s...\n 794194\tgobject_gdb.py: 'address' is a property of gdb.Value not a function\n 794207\tleak: g_socket_listener_add_inet_port increases ref-count on socket-li...\n 794284\tSupport whitespace stripping for JSON resources\n 794285\tglib-compile-resources should not noisily g_printerr() when xmllint is...\n 794473\tRemove duplicated option in gio.xml\n 794506\tglib-mkenums: Enters infinite loop if using typedef enum SomeIdentifier\n 794528\tFix segfault caused by use-after-free in GPollFileMonitor\n 794555\tglib meson build fails on MinGW due to misdetected functions\n 794557\tgtkdoc-scangobj fails on gio in meson builds\n 794606\tglib-2.56.0 fails to compile when res_nquery is not available\n 794635\tgmacros: Don't define bogus __has_* macros\n 794636\tG_HAVE_GNUC_VISIBILITY is defined in meson MinGW builds\n 794686\tDate (except weekday) displayed in English\n 794732\tFix various compiler warnings \n\n* Translation updates\n Hungarian\n Slowak\n Slovenian\n Spanish\n\n\nOverview of changes in GLib 2.56.0\n==================================\n\n* Bugs fixed:\n 672777 Error in gdummyfile.c\n 732184 GObject: warn on use of deprecated properties\n 733338 Don't segfault in GNetworkMonitor when IPv6 support is unavailable\n 742124 g_data_input_stream_read_upto()'s documentation should say that the...\n 749206 GDateTime: month names in the genitive case\n 768507 simplify qguark functions\n 791457 Slow transfer rate when writing to smb/cifs\n 793272 fix GCC 8.0's -Wcast-function-type warnings\n 793300 g_hash_table_add() return value change in 2.40 not mentioned in docs\n 793399 Fix some cases of -Wduplicated-branches\n 793555 -Wimplicit-function-declaration when using g_abort()\n 793565 GLib does not compile on macOS 10.13 due to .m file naming\n 793597 gdbus-tool: Make --dest optional for emit again\n 793635 Enable CI for GLib\n 793880 gnetworkmonitor: Minor fixes based on code review \n 793578 gdatetime tests depend on Japanese translation of month names \n 794180 test_month_names fails unless installed\n\n* Translation updates:\n Brazilian Portuguese\n British English\n Catalan\n Czech\n Danish\n Dutch\n Finnish\n French\n Friulian\n Galician\n German\n Hungarian\n Indonesian\n Italian\n Kazakh\n Korean\n Lithuanian\n Polish\n Scottish Gaelic\n Serbian\n Serbian Latin\n Spanish\n Swedish\n Turkish\n\n\nOverview of changes in GLib 2.55.2\n==================================\n\n* GFile now has API to get the path without copying\n\n* A network monitor implementation for Windows has been added\n\n* Bugs fixed:\n 520116 g_utf8_strlcpy()\n 584284 g_data_input_stream_read_until_async behaves confusingly different f...\n 605700 request for g_key_file_get_locale()\n 658713 ngettext (plural forms) needed for \"Message has %d file descriptors ...\n 685442 windows GNetworkMonitor implementation\n 723003 gsettings list-recursively reports some keys multiple times\n 749583 GSequence performance improvements\n 757284 Move G_DIR_SEPARATOR* and G_SEARCHPATH_SEPARATOR* into glibconfig.h\n 760324 [PATCH] gkeyfile.c: find_file_in_data_dirs fails to return the path ...\n 761102 Increase performance for main loop\n 767976 GFile: Add g_file_peek_path()\n 770335 gdbus-codegen: generated getter for 'ao' property is actually (trans...\n 772989 Totem allows invalid urls that might cause segfault that's irrecover...\n 790698 convert: test failure on NetBSD\n 791015 gdbus-codegen: Split generation of header and source\n 791622 Disable strict-aliasing in GLib\n 792050 GResolver is not thread-safe\n 792217 Deprecate GTlsClientConnection:use-ssl3\n 792338 meson, autotools: figure out if mem barrier is needed for arm64 host...\n 792351 gbookmarkfile: check length before dereferencing groups\n 792364 gdbus-threading test method-calls-in-thread: assertion failed (elaps...\n 792370 GNetworkMonitor: Rename \"network-changed\" signal argument\n 792410 GDateTime new_from_iso8601 test broken in 2.55 on i386\n 792432 flush stdout after logging (debug) messages\n 792455 Improve docs of GSequence\n 792499 deadlock on startup with TCP session bus\n 792516 gconvert: More consistent handling of embedded NUL bytes\n 792777 g_notification_set_urgent() unconditionally sets G_NOTIFICATION_PRIO...\n 792780 gbytes should reference toplevel bytes when slicing with g_bytes_new...\n 792856 off64_t isn't a part of C standard\n 792862 gpollableoutputstream: document side effects of WOULD_BLOCK on D/TLS\n 792903 Clarification between g_try_.. functions and their counterparts\n 793006 High CPU load for GUnixMountsMonitor consumers\n 793026 possible mem leak in g_mutex_impl_new\n 793074 g_message() does not get -Wformat warnings when compiling with G_LOG...\n\n* Translation updates:\n Hungarian\n Indonesian\n Polish\n\n\nOverview of changes in GLib 2.55.1\n==================================\n\n* Build:\n - The --enable-rebuilds configure option has been removed\n - The --with-charsetalias-dir configure option has been added\n\n* GList and GSList now have autoptr support\n\n* The gsettings list-schemas command has gained a --print-paths option\n\n* Bugs fixed:\n 346816 Refactor LIBDIR in libcharset Makefile\n 508976 Does g_slist_sort preserve the order of equal elements?\n 562334 2.18.2 break libglade on Solaris\n 662802 systemtap multiarch issue\n 684282 Add support static link of GIO modules\n 692034 Install an invalidation notifier for GClosure in g_source_set_closure()\n 694723 Get rid of REBUILD stuff in configure.ac\n 697715 floating point precision problem in check test gst/gstvalue\n 701156 testgobject assumes that the priv data follows the instance data\n 720380 Segfault when using GDBusMenuModel on a peer-to-peer connection\n 724383 glib: document restrictions on various foreach() functions\n 724412 GLib mappedfile.c test uses g_get_user_runtime_dir instead of a tempo...\n 724794 Fix \"on on\" typo in tap-driver.sh comment\n 732003 gnode: Eliminate implicit signed-to-unsigned integer conversion\n 734479 G_VALUE_HOLDS etc. cause -Wcast-qual warnings for a const GValue *\n 737677 gmain: Make GSourceCallback thread-safe\n 741167 gdbus-codegen fix for boxed out parameters\n 748534 gtest: if a subprocess assertion fails, print its stdout and stderr\n 749527 add weak pointer helpers similar to g_set_object\n 749652 compilation errors with gcc 4.8\n 754634 Update the list of Linux filesystem magic numbers used in get_fs_type\n 756011 Fix up annotations for GBookmarkFile\n 761102 Increase performance for main loop\n 773980 GIR scanner doesn't interpret array type properly\n 776147 gio/glocalfilemonitor.c doesn't handle case G_FILE_MONITOR_EVENT_MOVE...\n 776195 -z nodelete configure check does not work on Solaris\n 777075 Potential leak of memory pointed to by 'list'\n 779413 Translated X-Geoclue-Reason string not used in a dialog window\n 780309 gio/tests/appinfo build fails: gdesktopappinfo.c skipped on OS X\n 780893 Reword licensing header for gdbus-codegen\n 782057 Unit tests fail in run-assert-msg-test.sh\n 784995 meson: some Windows improvements\n 786796 gtk-doc build fails with meson\n 788806 Impossible to build static glib via meson\n 788936 Show mime type icons on OS X\n 790416 g_date_time_format returns empty string on %r with German locale\n 790588 Generated file missing from .gitignore\n 790697 g_object_ref API should propagate parameter type\n 790785 glib-tap: Add missing mkdir for .test generation rule\n 790829 glib-genmarshal --body must not generate alias implementations\n 790830 Mismatch between number of interface methods in text and example code\n 790837 Meson: missing many configure options\n 790839 GApplication command line: lacks parameter_string, summary and descri...\n 790877 fix non-portable check in G_GNUC_CHECK_VERSION\n 790894 Do not connect to the session bus when trying GProxyResolverPortal io...\n 790896 docs/reference/README has broken link to http://www.gtk.org/rdp/\n 790914 gdesktopappinfo: Downgrade a warning to a debug message\n 790934 gtester doesn't handle skipped tests\n 790948 GSourceFuncs documentation is confusing: when will dispatch be called?\n 791036 Guard for g_output_stream_vprintf makes no sense\n 791128 C runtime complains about bad arguments on each g_log() call\n 791221 po/README.translators has no useful information in 2017\n 791235 Fix gschema.dtd regarding flags.\n 791267 Make gschema.dtd usable.\n 791296 gtester-report: fix range usage when running as python3 app\n 791318 GBytes: Improve documentation\n 791325 Gio handling of thumbnail:: attribute namespace causes inconsistent b...\n 791334 gbinding.c:898: The target object of type GNetworkAddress has no prop...\n 791337 Crash opening URIs with g_desktop_app_info_launch_uris_with_spawn()\n 791342 Add autoptr support for lists\n 791460 meson: fixes for OSX\n 791532 Implicit declaration of function ‘memcmp’ in gtestutils.h\n 791622 Disable strict-aliasing in GLib\n 791720 Criticals in gio/xdp-dbus.h leading to crash under flatpak\n 791744 gmenumodel test sometimes fails: assertion failed (items_changed_coun...\n 791745 not immediately clear whether g_test_slow() is in effect by default\n 791906 GSocketListenerClass.event has wrong signature\n 792064 gsettings list-schemas --print-paths\n 792098 Binding: bind_property’s @notify func is nullable\n 792099 gdbus-test-codegen: Cast to void* to printf \"%p\"\n 792129 meson: skip optional linux/unix deps that default to true when buildi...\n 792322 GLib-GIO:ERROR:gschema-compile.c:51:test_schema: child process (/gsch...\n 792324 gkeyfile: Document need for KEEP_TRANSLATIONS with get_locale_string()\n\n* Translation updates\n Hebrew\n Indonesian\n\n\nOverview of changes in GLib 2.55.0\n==================================\n\n* New API:\n  - g_clear_handle_id, to simplify removing sources from the default mainloop\n  - g_file_load_bytes, to make it more convenient to load files into GBytes\n\n* Bugs fixed:\n 330458 Sample code for the GLib Key-value parser\n 483341 g_error and friends create warnings when not used in MSVC\n 569375 g[u]intptr undocumented\n 573251 documentation for g_seekable_truncate() needs some love\n 629347 Missing annotations in GFile (was: Perf throws an exception in cur...\n 630983 [PATCH] Type accuracy for result of strlen() in string utilities.\n 632953 Clarify documentation of GValueTransform.\n 636210 Document that pre-unmount is not guaranteed and backend-dependant\n 656502 type information for GSettings::backend missing from .gir\n 661442 Nautilus crashes when refreshing home folder after modifying ~/.co...\n 668035 gtester-report broken with python 2.7.2 and glib 2.30.1\n 670139 gbytes.c:try_steal_and_unref nit\n 677233 (transfer full) annotation not correct for g_closure_new_simple re...\n 679347 glocalfile seems to leak 'fstype'\n 679467 Mention translation in g_warning() documentation\n 689323 Variable scoping in gunixmounts.c\n 691436 glib-mkenums output arch dependent\n 695681 gsettings bash completion put error messages\n 705331 AM_PATH_GLIB_2_0 macro fails with -Wstrict-prototypes -Werror\n 706667 Fix permission denied error when installing from an nfs directory\n 711809 gdbus-proxy: Fix erroneous timeout during following tests\n 722256 gslist: Simplified node removal and got rid of some code duplication\n 723655 Socket source is left in the poll after the socket is closed\n 723743 g_child_watch_add() doesn't check for non-pids\n 725014 g_settings_schema_source_ref should check for NULL pointer\n 727346 docs: Escape some backslashes for markdown\n 730296 gsignal: Fix a potential NULL pointer dereference\n 731625 Improve test for darwin printf format-strings\n 731705 gio/tests/desktop-app-info assumes /bin/true\n 737278 Clarify relationship of g_application_quit() to hold count\n 738176 Skip GSpawnChildSetupFunc closures in introspection\n 740223 source_object for GAsyncResult should be nullable\n 740791 gio: cannot specify the source when joining a multicast group (IGM...\n 740826 glib doesn't know fuse filesystems\n 742548 configure.ac: stay out of autoconf's namespace\n 742997 Don't skip invalid enum values in schemas\n 745723 -Wunused-but-set-variable work-around no longer sufficient\n 749371 Use a GHashTable as a set when possible\n 751738 Unused-variable warnings in glib/tests/autoptr.c\n 752239 Missing dependency for python files in build file\n 752240 Add DTLS support to GIO\n 753459 GDateTime: Add conversion functions from/to ISO 8601 strings\n 753521 g_subprocess_launcher_set_environ misses argument annotations\n 754026 gfileutils: add some sanity checks\n 756009 'const gchar* const *' gets incorrectly defaulted to utf8\n 756103 Skip g_base64_decode_step() in introspection\n 756128 Fix up annotations in gconvert\n 756430 g_rw_lock_reader_lock() can return without locking, or error\n 756470 Fix up annotations in gdataset.c\n 756588 Fix up annotations on data/qdata API of GObject\n 760022 Memory leak in gvariant-parser.c\n 760109 [PATCH] Invalid GDate can't be g_boxed_copy()'d\n 760716 Fix documentation regarding <glib/gprintf.h>\n 765063 Update annotations for gio\n 765552 Please set serial in .m4 files to prevent autoreconf failure on up...\n 767215 GCC version number is interpreted as start of a list in docs for g...\n 767239 Tautological comparisons in convert tests\n 769674 some GIO tests' arbitrary timeouts are too short\n 769846 gmessages: Add timestamp to g_log_writer_format_fields()\n 770459 Tutorial article is slightly wrong\n 773355 Incorrect documentation about stopping a signal emission from a hook\n 774083 spelling mistakes in glib: charater\n 776562 Add Intel C Compiler support for G_GNUC_BEGIN/END_IGNORE_DEPRECATI...\n 777308 GModule win32: disable error dialog popup\n 777310 gio/gasynchelper.c: fix cast from pointer to smaller int type on w...\n 777956 gmessages: Update advice for G_LOG_DOMAIN\n 779182 xdg-open fails with gio open for some uris\n 779501 Type of GIConv given wrongly on web\n 780202 introspection: Don't expose GValueArray.free\n 780296 xdg-open/gnome-open doesn't work if service isn't started\n 781598 gstdio.h should #include what it needs to work\n 781867 various gvfsd-* wants to look in /boot/efi, causes unnecessary/ina...\n 783210 build: Switch to sassc for generating style\n 783270 Improve Visual Studio support for Meson builds\n 783825 Suggest that asynchronous operations should invoke the callback in...\n 786737 No g_variant_get() example for dicts\n 786785 Commit #fe2a9887a8 breaks gdbus-codegen, cannot find its module so...\n 787271 Make GListModel usable from G-I bindings\n 787485 g_tls_backend_supports_dtls () returns true when the backend doesn't\n 787551 Factor out some duplicated code in GParamSpec validation\n 787581 tests: Add tests for g_slist_copy() and g_slist_copy_deep()\n 787671 meson: Fix permissions of installed scripts\n 787731 g_file_query_filesystem_info() wrongly reports \"filesystem::readon...\n 788138 glib-compile-resources: Fix leak of a GHashTable\n 788180 G_FILE_ATTRIBUTE_ID_FILE is useless on W32\n 788270 gmodule - failed to load symbol on Android 64bit\n 788368 Race condition in GDbusObjectManagerClient\n 788384 gtypes: Fix signedness of __builtin_bswap() usage\n 788385 gtestutils: Explicitly cast args to g_assertion_message_cmpnum()\n 788401 PATCH: MacOS build cannot detect content type from content - xdgmi...\n 788467 Fatal errors and warnings should be reported as TAP\n 788488 GFile-based API for g_build_filename()\n 788489 gmain: add g_clear_source API\n 788561 Document how to integrate GTest into your project\n 788594 gdbus-tool doesn’t handle non-message-bus connections correctly\n 788705 Allow building GLib on older Linux platforms\n 788766 fixed a doc-typo in socket_get_remote_address\n 788772 meson installs gdb scripts incorrectly\n 788863 Add more filename type annotations for strings which can contain f...\n 788880 gunixmounts: Update list of virtual file systems to ignore\n 788927 Expose better API for detecting ‘system’ mounts\n 788936 Show mime type icons on OS X\n 788948 Document Autotools best practices for genmarshal/mkenums\n 788975 Meson + Visual Studio: Can't find zlib.h with subprojects/zlib\n 788978 Document XML has a syntax error\n 788989 Use subdir-objects with Autotools\n 788990 Include licensing information in output from glib-mkenums, glib-ge...\n 789087 gint and guint misrepresented as functions\n 789170 GFormatSizeFlags should have a value for bits\n 789245 g_settings_bind() not conforming to lifecycle specification\n 789444 Fix handling of length in g_utf8_make_valid\n 789637 glib-mkenums: Fails when --ouput file does not exist\n 789681 meson: Libmount support not built\n 789723 [PATCH] gdbus-codegen: Call abspath() earlier\n 789755 g_get_host_name: ensure return value is always UTF8 encoded\n 789820 GPollFileMonitor is not cleaning up correctly\n 790015 docs: Various linking and syntax fixes\n 790030 GResource/GVariant fails to load from non-pointer aligned memory\n 790093 gio-tool: fix inverted logic in monitor tool\n 790126 gengiotypefuncs.py is missing from tarballs\n 790147 build: Drop data-to-c.pl in favour of data-to-c.py\n 790157 gmessages: Give examples of G_DEBUG with gdb in the documentation\n 790272 file: add g_file_load_bytes()\n 790275 avoid temporary string allocations in g_resources_enumerate_children\n 790310 speedup path canonicalization in GResourceFile\n\n* Translation updates:\n Catalan (Valencian)\n Czech\n German\n Nepali\n Norwegian bokmål\n Slovak\n Slovenian\n Spanish\n\n\nOverview of changes in GLib 2.54.0\n==================================\n\n* Bugs fixed:\n 780861 Crash in GnomeWallClock\n 786983 Please make the output of gio-querymodules deterministic\n 787109 Valgrind false positive in ioctl() in btrfs file copy\n 787123 glib: Slighty update GIOChannel documentation\n 787146 GMainLoop: match of parameter pair of LOCK_CONTEXT/UNLOCK_CONTEXT\n\n* Translation updates:\n Basque\n Catalan\n Romanian\n Swedish\n\n\nOverview of changes in GLib 2.53.7\n==================================\n\n* Bugs fixed:\n 736710 remove unnecessary executions of libtool from configure\n 785260 gio/tests/appmonitor fails if local dir not writeable\n 786456 g_subprocess_wait[_check]_async() breaks when cancelled...\n 786555 g_array_free() is not thread safe w.r.t. g_array_unref()\n 786580 gdesktopappinfo.c: Add Tilix as a fallback terminal\n 786807 g_uuid_string_random undefined when built with meson\n\n* Translation updates:\n Brazilian Portuguese\n Catalan\n Czech\n Danish\n Finnish\n French\n Friulian\n German\n Italian\n Kazakh\n Korean\n Latvian\n Nepali\n Polish\n Spanish\n Turkish\n\n\nOverview of changes in GLib 2.53.6\n==================================\n\n* Bugs fixed:\n 766358 glib doesn't respect XDG_* envvars on W32, ever\n 783270 Improve Visual Studio support for Meson builds\n 785955 pthread_setname_np misdetected with meson\n 786060 Sequences documentation does not make it clear...\n 786360 gobject: add autoptr support for GClosure\n 786452 crash on Linux without stderr stream\n 786460 gio-tool: Unify buffer sizes\n 786462 Use g_output_stream_write_all instead of while\n 786463 gio-tool-save: Prevent overwriting error\n\n* Translation updates:\n Catalan\n Galician\n Hungarian\n Indonesian\n Lithuanian\n Nepali\n Serbian\n\n\nOverview of changes in GLib 2.53.5\n==================================\n\n* Bugs fixed:\n 695573 Untranslatable strings in glib-compile-schemas\n 725950 GApplication: call dbus_unregister only once, and before destruction\n 731703 giomodule test misbuilds its test modules as libraries\n 769135 External control for g_test_add/g_test_run\n 779332 Rewrite mkenums in Python\n 779607 Race between mounts-changed signal and g_unix_mounts_get() function\n 784000 Improve strerror_r() detection\n 784815 Map G_NOTIFICATION_PRIORITY_HIGH to NOTIFY_URGENCY_NORMAL\n 784965 Use the glib preset for i18n in Meson\n 784995 meson: some Windows improvements\n 785113 glib-mkenums Python port fixes\n 785130 G_LOG_DOMAIN shouldn't be left undefined for applications\n 785438 Spurious -Wmaybe-uninitialized in gdatetime.c\n 785468 glib/gpoll: Unnecessary if conditional included in the poll_rest() function\n 785520 Replace advice to use removed gdk_spawn functions\n 785577 clobbers errno while setting GError\n\n* Translation updates:\n Slovenian\n Spanish\n\n\nOverview of changes in GLib 2.53.4\n==================================\n\n* Unicode support has been updated to Unicode 10.0.0\n\n* glib-genmarshal and glib-mkenums have been rewritten in python.\n  Every effort has been made to keep compatibility. Please report\n  problems related to these tools\n\n* GLib can now be built with meson. autotools are still supported\n\n* Bugs fixed:\n 722047 drop makefile.msc?\n 733821 g_strerror() uses strerror(3) instead of strerror_r(3)\n 773842 g_utf8_find_next_char() won't signal the end of a NUL-terminated string\n 779332 Rewrite mkenums in Python\n 780095 g_utf8_get_char_validated() stopping at nul byte even for length specified...\n 780634 Remove remaining old codepage ABI comapt code\n 783841 test_GDateTime_new_from_timeval_overflow fails on 32 bit systems\n 784000 Improve strerror_r() detection\n 784020 GKeyFile – Add array length annotations to to_data(), get_keys() and get_g...\n 784037 gio: Mention the ALL_METADATA flag in g_file_copy()\n 784433 gdbus-codegen with variant type parameters result in nested variant\n 784456 Update to Unicode 10.0.0\n 784528 Rewrite glib-genmarshal in Python\n 784579 Calling g_dir_open on Missing Directory When Executable File Path Contains...\n 784581 docs: Fix cut'n'paste error in g_resources_get_info() doc\n 784739 Minor typo in configure error message\n 784792 Just fixing a little typo in comments\n\n* Translation updates:\n Hebrew\n\n\nOverview of changes in GLib 2.53.3\n==================================\n\n* Bugs fixed:\n 658446 Add translation comment for wrong password notice string\n 661926 Improve the default logging setup in GLib\n 674885 type initialisation deadlock in GObject\n 775593 GIO cannot write symlinks on FreeBSD and NetBSD\n 776169 Various gio-tool fixes\n 776333 Fix annotation on g_file_copy_async()\n 776504 Upgrade license from LGPLv2+ to LGPLv2.1+\n 777307 race condition between gdbus signal callback and g_bus_unwatch_name...\n 778422 gsubprocesslauncher: Clarify the behavior of set_environ()\n 781301 Stack pointer corrupted by incorrect call of NtNotifyChangeMultipleKeys\n 782336 Add additional documentation of the GResource XML format\n 782996 build: Use AM_TESTS_ENVIRONMENT rather than TESTS_ENVIRONMENT\n 783061 GApplication: Remove some unused members\n 783130 Make dbus activation sandbox-aware\n 783193 Adapt to OpenURI api change\n 783201 gdbus-codegen: Apply --output-directory to generated docs as well\n 783340 win32: port monotonic times to use QPC\n 783350 length parameter can be NULL g_data_input_stream_read_line\n 783392 incorrect (out) annotation for g_dbus_interface_info_generate_xml\n 783593 GGtkNotificationBackend should use /org/freedesktop/DBus to call Ge...\n\n* Translation updates:\n Esperanto\n German\n Indonesian\n Kazakh\n Spanish\n\n\nOverview of changes in GLib 2.53.2\n==================================\n\n* A few new number parsing functions have been added:\n  - g_ascii_string_to_signed\n  - g_ascii_string_to_unsigned\n  These have better error handling than the existing ones.\n\n* glib-mkenums now supports /*< private >*/ and /*< public >*/\n\n* GSettings now consider XDG_DATA_HOME in addition to XDG_DATA_DIRS.\n\n* Bugs fixed:\n 674885 type initialisation deadlock in GObject\n 698064 Add g_ptr_array_contains()\n 732000 gdatetime: Remove an unnecessary NULL pointer check\n 734946 Implement GContentType on OSX\n 741335 Possible differences in use of XDG_DATA_DIRS versus XDG base directory specification\n 748263 Use-after-free in g_dbus_connection_call_internal()\n 776876 gmodule – Various Android bug-fixes\n 777030 build error where minor() and major() cant be resolved in gio/gdbusmessage.c\n 780300 gio/gosxappinfo.c uses deprecated LSFindApplicationForInfo\n 780309 gio/tests/appinfo build fails: gdesktopappinfo.c skipped on OS X\n 781755 Avoid compiler warnings in generated marshallers code\n 781826 portal support: Read /.flatpak-info\n 781830 Fix some typos and errors in GVariant documentation\n 781847 Use-after-free under send_message_with_reply_cleanup():gdbusconnection.c:1792\n 781867 various gvfsd-* wants to look in /boot/efi, causes unnecessary/inappropriate auto...\n 782068 doc: Trivial typo fixes\n 782075 gtimer: Handle gmtime() failure in g_time_val_to_iso8601()\n 782089 gdatetime: Fix overflow checks when constructing from timestamps\n 782162 Support public/private trigraph in glib-mkenums\n 782237 make check error\n 782311 inode/directory is treated as a subclass of application/octet-stream\n 782628 libmount build dependency check not requiring the right version?\n\n* Translation updates:\n Hungarian\n Indonesian\n Spanish\n\n\nOverview of changes in GLib 2.53.1\n==================================\n\n* The gdbus tool gained a wait command\n\n* g_unix_signal_source_new support SIGWINCH now\n\n* There are now g_enum_to_string and g_flags_to_string functions\n\n* A new function to instantiate objects: g_objet_new_with_properties\n\n* GParameter and related APIs have been deprecated\n\n* Bug fixes\n 447907 enum/flags from string + type transform + tests\n 668962 GUnixMountPoint/GUnixMountEntry not usable through gobject-introspection\n 669355 gdbus-codegen output contains stray semicolons at file scope (forbidden in C99)\n 674885 type initialisation deadlock in GObject\n 698064 Add g_ptr_array_contains()\n 709865 Add boxing to GParameter\n 725894 build: Include gettext libraries for static compilation on Mac OS X\n 734946 Implement GContentType on OSX\n 741229 gio: Handle NULL cached properties in NetworkManager monitor\n 745971 gdbus-tool: Add a command to wait for a well-known name on the bus\n 755046 gfileutils: Add precondition checks to g_file_test()\n 761102 Increase performance for main loop\n 761889 GDateTime: %p does not always print AM/PM string\n 766660 Please clarify the extent to which GInitable, GAsyncInitable must be idempotent\n 769534 g_unix_signal_source_new does not support SIGWINCH\n 772221 Take advantage of Unicode\n 775879 g_log_default_handler should not check G_MESSAGES_DEBUG\n 776169 various gio-tool fixes\n 777961 Documentation for g_app_info_equals() could be clearer\n 778049 race in gsource detected by TSan\n 778207 gio-querymodules: fix memory leak\n 778287 G_MODULE_EXPORT and -fvisibility=hidden\n 779409 Fix false positive g_warning() in remove_filter()\n 780066 g_base64_encode_close() in glib/gbase64.c produces invalid base64 encoding\n 780095 g_utf8_get_char_validated() stopping at nul byte even for length specified buffers\n 780306 Unused function in gunicollate.c for CARBON\n 780310 g_tls_database_verify_chain doesn't set the GError for failures other than cancell...\n 780384 gio/tests/contenttype fails on OS X: \"public.directory\" != \"public.folder\"\n 780441 Make the portal implementation of g_app_info_launch() synchronous\n 780634 Remove remaining old codepage ABI comapt code\n 780908 gobject: remove duplicate GType sanity check\n 780924 Memory leak in gdbusmethodinvocation.c\n 781125 gio-tool: Fix errors format string\n 781234 the buffer written to by g_input_stream_read is not marked as an out parameter\n 781298 gfileutils.c:330:3: error: ISO C90 forbids mixed declarations and code\n\n* Translation updates\n Catalan\n Friulian\n German\n Hebrew\n Indonesian\n Polish\n Russian\n\n\nOverview of changes in GLib 2.52.0\n==================================\n\n* Bug fixes:\n 779799 gdatetime test fails with tzdata 2017a\n 780032 Add missing attributes to two functions\n 780144 gio/fam: Remove leftover debug print\n\n* Translation updates:\n French\n Friulian\n Latvian\n\n\nOverview of changes in GLib 2.51.5\n==================================\n\n* OS X implementations of GContentType and GAppInfo\n  have been added\n\n* Bugs fixed:\n 673047 gunicollate is broken on OS X (patch included!)\n 734946 Implement GContentType on OSX\n 747146 Implement GNotification on OSX\n 769983 glib-mkenums generates non-reproducible Makefile snippets\n 777203 gnulib license information is not correct in glib2.0\n 778515 Crash in the gio kqueue backend\n 779456 Make g_utf8_make_valid optionally take a length\n\n* Translation updates:\n Danish\n Friulian\n German\n Hungarian\n Korean\n Lithuanian\n\n\nOverview of changes in GLib 2.51.4\n==================================\n\n* Memory leak fixes\n* Fix the released tarball\n\n\nOverview of changes in GLib 2.51.3\n==================================\n\n* Bugs fixed:\n 771997 gchecksum: Add SHA-384 support\n 778422 gsubprocesslauncher: Clarify the behavior of set_environ()\n 778581 gdbus-codegen: Fix -Wconversion warning\n 778801 gdbus-codegen: Add --outdir flag\n 778991 Plug a mem leak in gdbusauth\n 779183 g_io_extension_point_get_extensions should check for NULL pointer\n\n* Translation updates:\n Basque\n Chinese (Taiwan)\n Danish\n Indonesian\n Italian\n Serbian\n\n\nOverview of changes in GLib 2.51.2\n==================================\n\n* Minimal support for UUIDs has been added\n\n* A new file attribute, G_FILE_ATTRIBUTE_RECENT_MODIFIED has been added\n  to improve sorting of recent files\n\n* Bugs fixed:\n 639078 UUID support feature request\n 777135 gkeyfile: Be more specific about error codes in documentation\n 777307 race condition between gdbus signal callback and g_bus_unwatch_name...\n 777481 goutputstream: docs: fix typos\n 777493 g_mkdtemp() not introspectable\n 777507 Recent view sorting incorrectly\n 777592 Add minor examples to GDBus and GVariant documentation\n 778002 race in gdbusprivate.c detected by the ThreadSanitizer\n 778096 race in gdbusconnection reported by TSan\n\n* Translation updates:\n Norwegian bokmål\n Polish\n Simplified Chinese\n Slovak\n Spanish\n Swedish\n\n\nOverview of changes in GLib 2.51.1\n==================================\n\n* glib-compile-resources grew a --generate-phony-targets flag\n\n* GLib now installs a valgrind suppressions file for GLib and GIO\n\n* Bugs fixed:\n 666114 should have infrastructure to run its tests under valgrind\n 729730 GDBusMessage: Fix segfault if DEBUG_SERIALIZER is enabled\n 730932 statically assert that reasonable assumptions about enums are true\n 735731 gobject: Document behaviour of GType checking macros on NULL\n 736810 gdbus: Fix leak in g_dbus_message_print()\n 762283 GSocket – Fix race conditions on Win32 if multiple threads are waiting on cond...\n 767609 Test suite problems\n 767952 g_dbus_method_invocation_return_*, g_dbus_method_invocation_take_error: They d...\n 769672 Assert threads for testcase 642026 are sucessfully created\n 769745 gtask: Add guards for public functions\n 770175 Add command line argument to mkenums and genmarshal to write output to a file\n 770646 glib: Namespace global tapset variables by soname\n 772160 Add g_unix_mount_for() support\n 772989 Totem allows invalid urls that might cause segfault that's irrecoverable\n 773823 gio: Bump copy buffer size to 256k by default\n 774086 fix g_main_context_check declaration\n 774368 Dependency file output of resource scanner breaks Ninja\n 774421 Two minor patches\n 774520 GSocket allocates and processes control messages even if not requested\n 775309 Crash in gdbusauth\n 775468 Improve log write supports color method on windows\n 775510 testing with -fsanitize=undefined reports various undefined behaviour\n 775517 Password input is echoed in the terminal\n 775621 gmessages: Fix compilation on Android\n 775765 FDO notification withdrawal backend sends wrong ID to the server\n 775913 subprocesslauncher: potential infinite loop in verify_disposition()\n 776198 Stray semicolon after g_variant_print() function in gvariant.c\n 776586 License headers cleanup\n 777077 Use of memory after it is freed\n\n* Translation updates:\n Brazilian Portuguese\n Czech\n Galician\n German\n Hebrew\n Kazakh\n Lithuanian\n Spanish\n Swedish\n\n\nOverview of changes in GLib 2.51.0\n==================================\n\n* glib-genmarshal and glib-mkenums have gained --output options\n  for better build system integration\n\n* New API: g_utf8_make_valid\n\n* Bugs fixed:\n 591603 Make _g_utf8_make_valid public\n 610969 Nice to have g_utf8_make_valid as public\n 767882 Bit shift overflow (-Wshift-overflow) warning in gparam.h\n 769135 External control for g_test_add/g_test_run\n 769630 gfile: G_FILE_MONITOR_WATCH_MOVES was actually introduced in 2.46\n 772160 Add g_unix_mount_for() support\n 772221 Take advantage of Unicode\n 773303 GApplication leaks option_strings \n\n* Translation updates:\n French\n Galician\n German\n Hungarian\n Lithuanian\n Norwegian bokmål\n Occitan\n Polish\n Slovak\n Turkish\n\n\nOverview of changes in GLib 2.50.1\n==================================\n\n* Update Unicode support to Unicode 9.0.0\n\n* Bugs fixed:\n 662946 gunixmounts monitoring doesn't work correctly with libmount\n 771591 Update to Unicode 9.0.0\n 772054 glib/gspawn-win32-helper.c: unexpected behavior re CommandLineToArgvW()\n 772255 gresolver: Mark GResolver as an abstract class\n 772269 Add --version options to glib-compile-resources and glib-compile-schemas\n 772297 completion: Complete gsettings describe\n 772511 g_log_default_handler crashes windows apps with \"Unspecified fatal err...\n\n* Translation updates:\n Brazilian Portuguese\n Catalan\n Croatian\n Czech\n Danish\n Hungarian\n Italian\n Latvian\n Polish\n Swedish\n\n\nOverview of changes in GLib 2.50.0\n==================================\n\n* Bugs fixed:\n 771438 Turn on libmount by default on linux\n        Fix the annotation for g_log_variant\n\n* Translation updates:\n British English\n French\n\n\nOverview of changes in GLib 2.49.7\n==================================\n\n* Add g_log_variant, binding-friendly api for structured logging\n\nBugs fixed:\n 646926 arg_data invalid after g_option_context_parse() fails\n\n* Translation updates:\n Danish\n Finnish\n Galician\n German\n Hebrew\n Kazakh\n Korean\n Latvian\n Lithuanian\n Polish\n Portuguese\n Serbian\n Slovak\n Spanish\n Swedish\n Thai\n\n\nOverview of changes in GLib 2.49.6\n==================================\n\n* The gsettings commandline tool now has a describe command\n\nBugs fixed:\n 745754 Add gcc-style dependency output to glib-compile-resources\n 769076 Fix warning: attempt to override closure->va_marshal with new marshal\n 770372 gdbus-codegen: Strip @since parameters before comparison\n\nTranslation updates:\n Brazilian Portuguese\n Czech\n German\n Hungarian\n Polish\n Portuguese\n Spanish\n\n\nOverview of changes in GLib 2.49.5\n==================================\n\n* Structured logging:\n - drop libsystemd dependency\n - document that g_test_expect_message does not work with structured logs\n\n* Use libmount for unix mount support\n\n* Add an async variant of g_app_info_launch_default_for_uri\n\nBugs fixed:\n 522053 GUnixMountMonitor needs to use /proc/self/mountinfo on recent Linux\n 682794 Add usage guidance to logging documentation\n 744456 Structured logging API\n 766370 Add a macro for initializing g_auto(GVariantBuilder)\n 767240 Regex failures with pcre 8.38\n 768198 Can't build glib with systemtap enabled\n 768453 Gdbus test: compilation fails due to -Werror=format-y2k errors\n 768752 Add async variant of g_app_info_launch_default_for_uri\n 769027 Docs misleadingly imply G_CHECKSUM_SHA512 is available since 2.16\n 769029 gmessage: compiler complains about -Wformat-nonliteral\n 769042 'O_CLOEXEC' undeclared (first use in this function)\n 769087 gmessages: support NULL log domain\n 769089 Fix gsettings uint64 testcase\n 769104 Build failure when using _GLIB_CHECKED_ADD_U32 with the Intel compiler\n 769139 g_log_writer_journald uses non-standard 'htole64' function\n 769238 memory increases every time I umount and mount my secondary hard disk.\n 769245 is_valid_heap_iter define misses NULL pointer check\n 769507 gmessages: Don’t require is_journald() call before writer_journald()\n 769785 gmessages: Expand documentation further for structured logging\n 769995 gdbus-codegen: Allow '@since: UNRELEASED' in documentation comments\n\nTranslation updates:\n Catalan\n Hebrew\n Lithuanian\n Slovak\n Spanish\n\n\nOverview of changes in GLib 2.49.4\n==================================\n\n* Change the just-introduced structured logging API. The arguments\n  of g_log_structured() had to be reordered to enable an implementation\n  within the limits of what the standards guarantee about var args.\n\nBugs fixed:\n 744456 Structured logging API\n 768936 gio doc build fails because of missing gio.xml in the tarballs\n 768963 improper va_list use in g_log_structured()\n 768968 gio/tests/socket-listener hangs since e4ee307\n\nTranslation updates:\n Spanish\n\n\nOverview of changes in GLib 2.49.3\n==================================\n\n* GLib has a structured logging API, g_log_structured, with support\n  for writing to the systemd journal. It also supports colored output\n  in terminals\n\n* Some new GBytes API has been added:\n - g_key_file_load_from_bytes\n - g_compute_hmac_for_bytes\n\n* Stack-allocated GVariantBuilder and GVariantDict objects can now be\n  initialized with G_VARIANT_BUILDER_INIT and G_VARIANT_DICT_INIT\n\n* gio:\n - Add a way to register handlers for custom uri schemes\n - Add a G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE attribute to\n   have these heuristics in a single place\n - Include a gio tool that makes the functionality of the\n   various gvfs commandline tools available in a single place\n - Add portal support to g_app_info_launch_default_for_uri\n - Add portal support to GNetworkMonitor\n - Add portal support to GProxyResolver\n - Add portal support to g_application_send_notification\n\nBugs fixed:\n 547200 g_utf8_find_next_char() issues\n 662802 systemtap multiarch issue\n 723506 fork/exec from non-main thread when autolaunching could be avoided...\n 725902 build: simplify dtrace configuration\n 728207 gsocketservice: Documentation does not mention that is already act...\n 729914 instead of DEBUG_CODE and IF_DEBUG, provide a common macro to supp...\n 744456 Structured logging API\n 744678 Unable to delete relocatable schemas\n 746685 clarify that g_variant_get_data() can be used instead of g_variant...\n 747134 glib-compile-resources --generate should detect common C++ file ex...\n 750257 GSettings changed signal should clearly state the order required\n 753231 Memory is potentially used after free\n 754012 missing filename in \"Error loading css: Failed to import: Error op...\n 760115 gtestutils: add missing dash in seed argument's --help documentation\n 760423 gio-querymodules prints error messages as question marks on some l...\n 761102 Increase performance for main loop\n 765338 GLib.compute_hmac_for_data throws every time\n 766370 Add a macro for initializing g_auto(GVariantBuilder)\n 766899 Superflous HTML/XML comments in GDBusProxyTypeFunc documentation s...\n 766933 GSocketAddress leaks in gnetworkmonitornetlink.c:read_netlink_mess...\n 767765 Add names and tags to various GSources and GTasks constructed in GLib\n 767880 gkeyfile: add g_key_file_load_from_bytes() API\n 767887 vfs: add g_vfs_register_uri_scheme()\n 767949 [patch] Typos in glib docs\n 768029 infinite loop in parse_name_internal()\n 768119 Fix fallout from get_supported_schemes() changes\n 768357 Build the gio tool on Windows/MSVC\n 768498 portal support for glib\n 768504 keyfile: g_key_file_get_double behavior doesn't follow documentation\n 768549 Test failure: test_ip_sync_dgram\n 768551 Test failure: test_socket_address_to_string\n 768560 gio/tests/gsettings: fix GSettings reference leaks in some tests\n 768780 O_PATH is a non-standard flag which may be unavailable on non-Lin...\n 768806 gdbus tool must swallow -- argument\n\nTranslation updates:\n Chinese (Taiwan)\n French\n Hebrew\n Indonesian\n Lithuanian\n Portuguese\n Spanish\n\n\nOverview of changes in GLib 2.49.2\n==================================\n\n * GMainContext and GTask have gained more systemtap probes\n\nBugs fixed:\n 673101 resource compiler dependency generation not working for gen...\n 700756 GFile.new_for_path arguments misses (type filename) annotation\n 730187 glocalfileoutputstream: Fix an FD leak in an error path\n 755439 Memory leak in gdbusproxy.c\n 759813 Add more SystemTap/DTrace probes for main context and GTask\n 761810 gio: Support using GDBusObjectManagerServer at path ‘/’\n 767172 docs: Move GIO_USE_VFS to \"okay for production\" section\n 767218 Remove a UTF-8 ellipsis from gsignal.h\n 767245 Add filename type annotations\n 767824 Some UTC timezones incorrectly recognized on Windows 7\n\nTranslation updates:\n Occitan\n\n\nOverview of changes in GLib 2.49.1\n==================================\n\n * GDesktopAppInfo now allows bus activation with dashes. This is\n   not technically allowed per the Desktop Entry specification, but\n   it happens in the wild. Rather than forcing people to go through\n   another traumatic desktop file rename, accept it and translate - to _.\n\n * The support for giving names to threads has been improved. Thread names\n   are now supported on Solaris as well, and the Linux support no longer\n   uses prctl() but the pthread api.\n\n * GIO resources can now be overridden at runtime, using the G_RESOURCE_OVERLAYS\n   environment variable.\n\n * gdbus-codegen can now generate autocleanup definitions for the types\n   it generates. Use the --c-generate-autocleanup option to control this\n\nBugs fixed:\n 665446 Use g_abort() instead of abort()\n 731988 glocalfile: Avoid a potential NULL pointer dereference\n 742898 g_value_type_transformable() description differs from the code\n 747107 GVariant varargs documentation: g_variant_get() example\n 747478 g_system_thread_set_name() is not implemented for gthread-win32\n 748474 g_get_language_names() is not thread-safe\n 748530 gthread: W32 implementation of g_get_num_processors() has lame fallback\n 748806 GVariant: Better introduction to the concepts and its uses\n 749583 GSequence performance improvements\n 749606 tests: always remove app.desktop\n 755898 [PATCH] settings: add get/set uint64\n 758174 Fix documentation typos\n 758738 Usage of GType properties causes crashes due to gulong/gpointer mismatch\n 760186 namespace clash with gdb pretty-printing code\n 762994 Race condition in GIO/AppFileChooser crashes Firefox/Gtk3\n 763379 codegen: Add support for g_autoptr to gdbus-codegen–generated objects\n 763821 build: Also dist Systemtap files always for gobject/\n 764092 gstrfuncs: Document the behaviour of g_strjoinv()\n 764163 g_task_had_error doesn't remember the error after g_task_propagate_*\n 764415 Very High CPU usage in g_poll() Windows implementation\n 764574 build: Fix all statfs() tests failing\n 764575 tests: Fix compilation errors due to Y2K format problems\n 764685 GApplication documentation about handling command-line options is confusing\n 764754 '-' in application id: unbreak bus activation and notifications\n 765173 documentation of g_main_context_push_thread_default() regarding GIO...\n 765668 GResources: add support for resource overlays\n 765710 gdbus-tool: only print note about expected argument types if that...\n 765712 tests: Fix compilation\n 765861 task: avoid context lock when setting source name\n 765900 Add g_drive_is_removable() support\n 765924 Improve external drives detection\n 765959 socket: set fd field to -1 after closing socket\n 765990 Visual Studio: Define inline only when necessary\n 765991 Compilation of gresource.c is broken due to S_ISDIR\n 766092 Incorrect locale handling in g_date_time_format_locale()\n 766211 Fix the upper bound in g_unichar_iswide_bsearch\n 766407 Some build-related defects in glib testsuite\n 766570 build: Fix a misnamed variable in glib-tap.mk\n\nTranslation updates:\n Basque\n Catalan\n Chinese\n Occitan\n Portuguese\n Turkish\n Vietnamese\n\n\nOverview of changes in GLib 2.48.0\n==================================\n\n * The system copy of PCRE is now used by default to implement GRegex.\n   Configure with --with-pcre=internal if a system PCRE version\n   is unavailable or undesired.\n\n * a minor build fix in the name of determinism\n\n * a few coverity fixes\n\nBugs fixed:\n 763617 giotypefuncs.c: Sort _get_type functions in the 'C' locale\n\nTranslations updated:\n Danish\n Italian\n\nOverview of changes in GLib 2.47.92\n===================================\n\n * gdbus-codegen now supports g_autoptr()\n\n * g_get_user_runtime_dir() now reliably returns an existing directory\n\n * g_array_remove_range() can now remove 0 items from the end of an array\n\n * Many fixes for Windows\n   * build fixes\n   * file monitoring\n   * gsettings backend\n   * streams\n   * random numbers\n   * wide character support\n\n * documentation improvements\n\n * other small bugfixes\n\nBugs fixed:\n 724847 Segmentation fault on \"gsettings list-recursively\"\n 743933 gapplication: add --app-id command line option\n 756706 [PATCH] gio/gtestdbus.c: don't use non-standard %m printf modifier\n 757506 gsettings: schema_list should use the passed schema's source\n 760694 W32: Apps linked with -mwindows make cursor busy sometimes\n 762202 g_win32_error_message improvements\n 762637 build: Unconditionally dist tapset files\n 762748 Undefined behavior\n 762937 Mention that g_clear_error can be used with an \"empty\" GError\n 763339 array: Support clearing an empty array with g_array_remove_range()\n 763344 g_get_user_runtime_dir(): ensure directory exists\n 763379 codegen: Add support for g_autoptr to gdbus-codegen–generated objects\n\nTranslations updated:\n Brazilian Portuguese\n Czech\n Finnish\n French\n Galician s\n German\n Greek\n Hebrew\n Hungarian\n Italian\n Kazakh\n Korean\n Latvian\n Lithuanian\n Occitan\n Polish\n Russian\n Serbian\n Slovak\n Slovenian\n Spanish\n Swedish\n\nOverview of changes in GLib 2.47.6\n==================================\n\n* Windows usupport:\n - Fixes and improvements to the GSettings registry backend\n - Handle readability and writability of registry keys\n - Use Unicode registry APIs\n\n* Bugs fixed:\n760852 744772 761126 747927 761337 744570 761504 761550 761843\n 744570 GString is missing (transfer none) annotations on many of its methods\n 744772 systemtap and gdb scripts install in wrong place\n 747927 Documentation: various small improvements\n 760852 gdbusobjectmanagerserver: Clarify recommended ObjectManager paths\n 761126 winiconv: update to upstream version\n 761337 Fix some annotations\n 761504 W32 registry GSettings backend does not use Unicode\n 761550 Cannot build with default flags under Fedora rawhide (-Werror=format-...\n 761843 gmacros.h is testing attributes with __has_feature (when compiling wi...\n\n* Translation updates:\n Brazilian Portuguese\n Bulagarian\n Chinese (Taiwan)\n Hungarian\n Polish\n Slovak\n Slovenian\n Spanish\n Swedish\n\n\nOverview of changes in GLib 2.47.5\n==================================\n\n* the system copy of PCRE is now used by default to implement GRegex.\n  Configure with --with-pcre=internal if a system PCRE version\n  is unavailable or undesired.\n\n* interfaces for DTLS support have been added.  A new version of\n  glib-networking will also be required.\n\n* GDBusMethodInvocation now drops replies if the sender set the\n  NO_REPLY_EXPECTED flag\n\n* several GApplication fixes, including fixes for commandline arguments\n  in interpreted languages on Windows\n\nBugs fixed:\n 624186 Deprecate glib-gettext macros\n 734095 gtk-demo.py of PyGObject fails to run on Windows (and likely other binding scripts using g_application_run())\n 735754 Implement close on TLS GOutputStream\n 748064 gnulib vfprintf returns desired (not actual) number of bytes, ignores errors\n 752240 Add DTLS support to GIO\n 755421 GDBus ignores NO_REPLY_EXPECTED flag in messages, leading to warnings on system bus\n 756875 Include ntdef.h for NTSTATUS\n 759554 g_application_run() calls g_main_context_default() repeatidly\n 760199 gsettings: Install gettext ITS rules\n 760215 G_LIKELY/_UNLIKELY macros need more parentheses\n 760683 regex test: Check the expected PCRE exceptions at runtime\n\nTranslations updated:\n Brazilian Portuguese\n Czech\n German\n Lithuanian\n Swedish\n\nOverview of changes in GLib 2.47.4\n==================================\n\n* The GApplication documentation has been improved in several areas.\n\n* Bugs fixed:\n 749092 gdb pretty-printers fail on Python 3 with a TypeError...\n 757374 macros: clean up \"inline\" mess\n 758641 Memory leak in g_dbus_proxy_new_for_bus_sync()\n 759134 Add missing checks for gnulib vasnprintf()\n 759408 Do not use uninitialized var \n 756475 Stop supporting non-POSIX getpwuid_r, getgrgid_r\n 757372 GApplication: destroy the impl on shutdown\n 728099 macros: add G_GNUC_CHECK_VERSION() for compiler checks\n 757299 glib-compile-resources: do not leak c_name\n 758553 Fix gettext use\n 758823 file monitors: reorder some code to avoid segfault\n 756214 gsettings: Don't translate \"\"\n 710243 Add GParamSpec object ref management annotations\n 735696 xdgmime: Finer handling for cases where mmap() is not available\n 752983 gapplication: Acquire the main context before running\n\n* Translation updates:\n Swedish\n\n\nOverview of changes in GLib 2.47.3\n==================================\n\nThe inline cleanup in the last release accidentally removed three\nsymbols from libglib-2.0.so.  It is unlikely that this will have caused\nany problems because these symbols were only backup symbols for\ndefinitions exported as inlines in the header files, but ABI is ABI.\n\nThis release corrects only this problem.\n\nOverview of changes in GLib 2.47.2\n==================================\n\n* We have formalised the assumption that all compilers that are\n  interested in support 'static inline' and simplified the macros around\n  this considerably.  Please watch for and report unintentional fallout.\n\n* New API: hardware-assisted helpers for overflow-checked integer math.\n\n* other fixes\n\nBugs fixed:\n 696324 gtester-report doesn't work with Python 3.x\n 719966 glib: Add missing (nullable) and (optional) annotations\n 752837 gobject and glib-compile-resources rely on .CRT$XCU section, no longer works with Win 10 UCRT (VS 2015)\n 755364 make gtkdoc-check happy again\n 756134 Segmentation fault on calling g_simple_action_group_add_action with bad action constructor call\n 756179 gwin32.c: Replace VerifyVersionInfoW() with RtlGetVersion() due to API deprecation\n 756988 GSequence should document each function's complexity\n 757294 Move G_POLLFD_FORMAT to glibconfig.h\n 757374 macros: clean up \"inline\" mess\n 757451 doc: fix g_task_attach_source() example\n 757628 gio tests fail to build when cross compiling 2.46.1\n 757693 Invalid free in g_local_file_trash()\n 757742 Fix up annotations in ghash.c\n 758181 GTask: fix wrong example code\n\nTranslations updated:\n Greek\n Hebrew\n Hungarian\n Norwegian bokmål\n Portuguese\n Scottish Gaelic\n Simplified Chinese\n Spanish\n\nOverview of changes in GLib 2.47.1\n==================================\n\n* The Unicode support has been updated to version 8.0 of the Unicode standard\n\n* GDesktopAppInfo no longer sets the DISPLAY environment variable when\n  launching apps. This is now done in the GAppLaunchContext implementations\n  when appropriate\n\n* Bug fixes:\n 664740 Key-value file parser, space after integer\n 687223 cleverer GThreadPool management\n 692085 stderr and stdout are not always file descriptors 1 and 2\n 697907 Add interface for socket-like things (GSocket, DTLS, etc)\n 735754 Implement close on TLS GOutputStream\n 737116 Add functions to print GSocketConnectables and addresses as strings\n 743011 Minor additions to GError documentation\n 749161 undefined reference to `__imp__stat32i64'\n 749314 Cannot restore a just-trashed file\n 751924 Add recvmmsg()-like API on GSocket\n 752240 Add DTLS support to GIO\n 752837 gobject and glib-compile-resources rely on .CRT$XCU section, no longer...\n 753310 Remove `#pragma GCC system_header` from gmessages.h\n 753935 Update example namespace and class names in GObject tutorial\n 754855 Object instantiation documentation refers to example that no longer ex...\n 754983 Wayland: g_desktop_app_info_launch_uris_with_spawn() forces DISPLAY va...\n 754994 g_date_time_get_second () sometimes returns an off-by-one result\n 755083 Clarify in G_ADD_PRIVATE that it is safe to call _get_instance_private...\n 755351 Example still contains g_autoptr(gchar)\n 755355 Move GStrv to glib.h so it can be used with g_auto()\n 755374 g_variant_get_child(): flatten-first logic on '&'\n 755496 glib 2.46 fails GStreamer test suite\n 755609 glib 2.46.0 breaks Sun Java JVM 1.8.0.60\n 755766 gvalue: The g_auto cleanup function assert if value is G_VALUE_INIT\n 755795 2.46 considers empty files as octet-stream rather than text (leads to...\n 755961 Fix up annotations in gbytes.c\n 756053 MSVC doesn't understand the symbol 'msghdr'\n 756054 MSVC linker error due to 'g_socket_send_message_with_timeout()'\n 756077 testutils: remove internal ABI comment\n 756099 g_main_context_query(): Annotate @n_fds as (in) parameter\n 756139 musl: ctors called in the wrong order\n 756179 gwin32.c: Replace VerifyVersionInfoW() with RtlGetVersion() due to AP...\n 756251 The documentation of G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START is confusing\n 756255 GOutputStream swallowing errors in splice with G_OUTPUT_STREAM_SPLICE...\n 756316 GSequence should provide fast api to check if empty\n 756382 snprintf used on Windows with VS2015 doesn't support %n\n 756477 gio/gthreadedresolver.c has outdated copy of bionic headers (for android)\n 756550 gtypes.h: Make G_MININTn literals negative\n 756875 Include ntdef.h for NTSTATUS\n 756952 giomodule: return a copy of module name\n\n* Translation updates:\n Basque\n Czech\n Serbian\n Serbian Latin\n Vietnamese\n\n\nOverview of changes in GLib 2.46.0\n==================================\n\n* GTask no longer imposes a fixed limit on the number of tasks that\n  can be run_in_thread() simultaneously, since doing this inevitably\n  results in deadlocks in some use cases. Instead, it now has a base\n  number of threads that can be used \"for free\", but will gradually\n  add more threads to the pool if too much time passes without any\n  tasks completing.\n\n  The exact behavior may continue to change in the future, and it's\n  possible that some future version of GLib may not do any\n  rate-limiting at all. As a result, you should no longer assume that\n  GTask will rate-limit tasks itself (or, by extension, that calls to\n  certain async gio methods will automatically be rate-limited for\n  you). If you have a very large number of tasks to run, and don't\n  want them to all run at once, you should rate-limit them yourself.\n\n* Disable runtime-deprecation warnings\n\n* Fix marshalling of flags on bigendian 64bit architectures\n\n* Translation updates\n Brazilian Portuguese\n Danish\n German\n Latvian\n Russian\n Turkish\n\n\nOverview of changes in GLib 2.45.8\n==================================\n\n* utf8 validation and utf8-to-ucs4 conversion are faster\n\n* Small speedups to property change notification\n\n* Various other small optimizations for GQuark, GData\n\n* Bugs fixed:\n 696426 GParamSpecTypeInfo do not need to be static\n 735429 Cleanup MSVC Project Files Generation\n 738504 Optimize UTF-8 decoding by unrolling branches and expressions\n 742903 Add missing (transfer) annotation to GString\n 748633 g_set_object order of operations\n 754431 Fix build of glib/gstrfuncs.c on Windows\n 754560 gioerror: Add more mappings for WinSock error codes\n 754582 Glib cannot compile\n 754601 Make g_strerror work with non-glibc POSIX systems\n 754636 tests/unicode-encoding test fails for glib 2.45.7 on x86-64\n 754788 more g_strerror stuff\n 754831 autocleanups: Add GString type\n 754924 Improve test coverage of g_utf8_validate() by added known-...\n 754986 Avoid unnecessary signal emission during draw\n\n* Translation updates:\n Italian\n Kazakh\n Korean\n Lithuanian\n Slovenian\n Swedish\n\n\nOverview of changes in GLib 2.45.7\n==================================\n\n* Add G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE for use by non-POSIX-like\n  backends (e.g. cloud storage).\n\n* GFileMonitor: Make the inotify backend work with atomic renames again\n\n* GSettings: change notification is again working unconditionally\n\n* GListStore has a sort function now\n\n* Test infrastructure:\n - Tests are now required to have unique names\n - TAP support has been improved\n - A macro for asserting that two memory regions have identical content\n   has been added\n\n* Bugs fixed:\n 708525 A \"g_file_query_info\" on the file path \"/sys/kernel/debug/hid\"...\n 742849 inotify: send paired events to both sides\n 744060 Update GObject tutorial documentation to use G_DECLARE_FINAL_T...\n 747364 Fix GError leak in g_file_query_writable_namespaces()\n 749492 Support file creation time on FreeBSD and NetBSD\n 752769 (g_socket_receive_message | g_socket_send_message) performance\n 753745 glib-genmarshal still needed for cross-compilation\n 754152 Add g_list_store_sort\n 754211 Memory leak in g_file_enumerator_iterate ()\n 754264 GLib 2.44 certificate chain construction fails if the PEM incl...\n 754283 gtestutils: add g_assert_cmpmem()\n 754284 gtestutils: print the TAP test plan first, not last\n 754286 misc gtestutils fixes\n 754307 size of array '_GStaticAssertCompileTimeAssertion_3387' is neg...\n\n\n* Translation updates:\n Chinese (Taiwan)\n French\n Galician\n Greek\n Hebrew\n Hungarian\n Indonesian\n Polish\n Portuguese\n\n\nOverview of changes in GLib 2.45.6\n==================================\n\n* Fix a test failure and a build failure\n\nOverview of changes in GLib 2.45.5\n==================================\n\n* GNetworkMonitor now provides information about metered networks\n\n* g_mem_set_vtable has been deprecated; it has not been working for\n  quite a while. The recommendation is to use valgrind, or replace\n  malloc itself.\n\n* Bugs fixed:\n 656325 Make GDBusInterfaceVTable binding friendly\n 741779 Documentation tweaks addressing real-world API misuses\n 741822 Fails to build with VS 2015\n 742386 gdbusconnection: Don't g_printerr() when exiting\n 743018 gobject: Add more cross-links between documentation pages\n 750282 Add g_network_monitor_get_network_metered() to get if the connection...\n 751358 GFileMonitor doesn't react to \"mv some-file watched-file\"\n 751592 Stop using GMemVtable\n 751598 Stop 'handle-local-options' propagation when callback reports an err...\n 751610 g_str_hash produces collisions with strings of length 2\n 751751 Wrong docs of g_async_queue_remove\n 752210 gdbus command crashes with SIGSEGV\n 752656 gdbusconnection: Fix signal subscription documentation\n 752767 Fix typo in g_hash_table_replace() documentation\n 753278 gdbus: Don't use g_assert_no_error() GDBusObjectManagerServer\n 753285 g_menu_item_set_icon fails if called with NULL icon\n\n* Translation updates:\n Catalan\n Czech\n French\n Indonesian\n Lithuanian\n Norwegian bokmål\n Slovak\n Spanish\n Thai\n Turkish\n\n\nOverview of changes in GLib 2.45.4\n==================================\n\n* Bugs fixed:\n 727829 win32: glibconfig.h.win32 updates\n 741901 Clang cannot know that g_error don't return\n 746339 GSocket kills process when fd is not a socket\n 747676 gio/tests/socket fails: test_fd_roundtrip\n 748610 Some tests fail with non-English locales\n 749911 g_inet_address_to_string broken on XP/2003\n 749912 g_inet_address_new_from_string broken on XP/2003\n 750625 Should dismiss Software Updates Available notification after...\n 750807 G_BREAKPOINT doesn't work as intended on Darwin\n 751160 gtask does unnecessary work\n 751672 -Wduplicate-decl-specifier in glib/tests/keyfile.c\n 751731 GFile/DirectoryMonitor emit move events with other_file=NULL\n 751737 gio/tests/appmonitor test fails in 2.45.3\n 751798 Wrong enum type used in some test-cases\n 752089 make gsocketservice::active a property\n 752293 small cleanup: use list_free_full\n\n* Translation updates:\n Greek\n Hebrew\n Portuguese\n\n\nOverview of changes in GLib 2.45.3\n==================================\n\n* Improve performance of g_signal_handler_disconnect for signals\n  with many handlers\n\n* GDBus has gained a new call flag to allow interactive authorization\n\n* GSettings:\n - New API: g_settings_schema_list_keys\n - Deprecated: g_settings_list_keys\n\n* OS X:\n - Implement GNotification\n - Bump the OS X requirement to 10.9\n\n* Windows:\n - Add registry reading API\n - Reimplement GAppInfo using registry information\n\n* Bugs fixed:\n 666831 Support URI opening on W32\n 728489 property action with inverted boolean state\n 730168 Incorrect annotation on g_action_group_get_action_state_type return...\n 733325 Several regex tests fail with pcre3 8.35\n 734888 GLib has no helper functions to work with W32 Registry\n 737009 signal handler lookup doesn't scale\n 738185 Misleading language about \"file name encoding\" in the docs on g_env...\n 738504 Optimize UTF-8 decoding by unrolling branches and expressions\n 739122 glib not handling -1 return (\"no limit\") from sysconf (_SC_THREAD_S...\n 739424 gnome-shell crashes when files are added, deleted, or modified in $...\n 739616 DBus; Add new call flag to allow interactive authorization\n 740308 Add g_settings_schema_list_keys() method\n 740516 RFE: please provide an introspectible version of g_log_set_handler\n 741788 Document GSettings build system integration\n 745013 GBinding not thread safe\n 747146 Implement GNotification on OSX\n 747941 try XDG_RUNTIME_DIR/bus before falling back to X11 autolaunch (dbus...\n 748727 Filechooser dialog shows no icons for directories on W32\n 749693 GActionGroupExporter: flush queue on requests\n 750203 GNetworkMonitorNetlink hangs in user namespace\n 750322 gapplication: Make sure --help output is translated\n 750344 GTlsInteractionClass is missing from doc\n 750369 Various GBinding cleanups\n 750386 Race condition in g_io_condition_get_type\n 750399 Typo \"equilalent\" in glib documentation's glib-Error-Reporting.html...\n 750573 GTlsDatabaseClass is not documented\n 750918 genmarshal: silence register storage class warnings\n 751122 gsocket: avoid unnecessary g_socket_cond_wait() in _send_messages()\n 479730 The \"g_key_file_set_comment\" interface prepends '#' character to...\n\n* Translation updates:\n Hungarian\n Spanish\n\n\nOverview of changes in GLib 2.45.2\n==================================\n\n* Improve error reporting in glib-compile-schemas.\n\n* Add introspection annotations to GListStore.\n\n* Bugs fixed:\n 696749 win32 : failed to compile because of careless mistake in the code\n 723394 const parameter to GtkPopover gtk_popover_set_pointing_to\n 724113 gdbus-connection-loss test can fail on slow machines\n 725981 tap-driver.sh: internal error getting exit status\n 733325 Several regex tests fail with pcre3 8.35\n 744895 Unknown or unsupported transport 'this-should-not-be-used-and-will...\n 747882 gtype: Bump allowed number of children\n 748534 gtest: if a subprocess assertion fails, print its stdout and stderr\n 748612 de_DE locale used in option-context test is not supported by FreeBSD\n 748614 Double unref in g_socket_listener_add_inet_port\n 748834 glocalfilemonitor: Emit notification on rate limit change\n 749079 gdbus-peer test: TCP tests can fail with ECONNRESET due to a race...\n 749080 gdatetime test: fails if close to rollover between seconds\n 749180 gnetworkaddress: add return type annotation to parse methods\n 749352 g_binding_unbind() fails when source is also the target\n 749353 GBinding does not connect to the detailed notify signal\n\n* Translation updates:\n Catalan\n French\n Slovak\n Thai\n\n\nOverview of changes in GLib 2.45.1\n==================================\n\n* The GSettings schema compiler, glib-compile-schemas has been changed\n  to reject schema xml that has duplicate <summary> or <description>\n  elements. Such elements typically occur when translations are merged\n  into the schema, with xml:lang attributes. This is not the correct\n  way to translate schemas. Instead keep the translations in the .mo\n  file and set the gettext-domain attribute on the <schemalist> element.\n\n* The file monitoring infrastructure has been rewritten, and all backends\n  have seen major improvements.\n\n  The inotify backend is reporting events with less delay (no event will\n  be delayed more than 10ms) and wakeups due to file monitoring have been\n  significantly reduced. A CHANGES_DONE event will also be sent when new\n  files appear.\n\n  The poll implementation is now using the thread default main context.\n\n  The fam implmentation is now running in the worker thread.\n\n  The fen implementation has been removed, since it was unmaintained.\n\n* The GSettings schema compiler, glib-compile-schemas, is more strict\n  about rejecting schemas with xml:lang style merged translations.\n  Schema translations should be done by specifying the gettext domain\n  in the xml, and keeping the translations in gettext. To avoid breaking\n  already-installed schemas, this change is only taking effect when\n  you use the --strict option.\n\n* The hardcoded 10-thread limit of GTask's thread pool has been removed,\n  since it was prone to causing deadlocks. The thread pool is now allowed\n  to grow dynamically and will shrink back over time.\n\n* GSimpleAsyncResult has been deprecated in favor of GTask.\n\n* The algorithm used by GAppInfo to find default handlers for mime types\n  has been tweaked to prefer apps that handle the specific subtype over\n  default handlers for a generic supertype.\n\n* Bug fixes:\n 627285 inotify file monitor hardwired delay\n 631597 Segmentation fault in append_escaped_text\n 661767 merge/improve various bits of run-in-thread functionality\n 687223 cleverer GThreadPool management\n 711547 win32: silence some build warnings\n 719966 glib: Add missing (nullable) and (optional) annotations\n 726447 Possibly an error in text string\n 728663 W32: wrong stat struct is used when built with MinGW-w64\n 728669 W32: GLocalFile can't measure size of files larger than 2^32...\n 730188 gsocket: Document FD ownership with g_socket_new_from_fd()\n 733325 Several regex tests fail with pcre3 8.35\n 738207 Add a way to set SO_SENDBUF and SO_RECVBUF on listener (and...\n 739850 GClosure: add valgrind hints\n 741791 gmain: Save errno when handling unix signals\n 744282 gvfs-open for application/x-virt-viewer changed behaviour bet...\n 745255 Add support for copying sessions between GTlsClientConnections\n 745745 gdbus: fix out-of-bound array access\n 745821 Don't use __alloc_size__ attribute with clang\n 746749 GLib-GIO:ERROR:inotify-kernel.c:327:ik_source_dispatch: ass...\n 746753 Glib-compile-resources --generate-header not using \".h\" as ...\n 747209 glib-compile-schemas ought to reject repeated <summary> and...\n 747349 Conversion of gdbus to use GTask causes deadlocks\n 747363 gatomic: Add missing new line in API doc comment\n 747472 Don't ignore already-installed schemas with multiple <summa...\n 747541 gdbus segfaults with invalid --dest\n 747772 Having hardcoded utf8 strings in the source code does not p...\n 748019 gsocketconnection: Fix copy-pasto in documentation\n 748177 not all test schemas are distributed, \"make distcheck\" fails\n\n* Translation updates:\n Basque\n Czech\n Danish\n Finnish\n German\n Hebrew\n Icelandic\n Norwegian bokmål\n Russian\n Turkish\n\n\nOverview of changes in GLib 2.43.92\n===================================\n\nGLib is now considered frozen.  We do not expect any major changes\nbefore the release of 2.44.0.\n\n * GUnixMountMonitor now properly supports multiple main contexts\n\n * many documentation improvements and cleanups.  We are now\n   approaching a point where the documentation is 100% complete and the\n   xml will build without warnings.  This will probably be enabled by\n   default in the next cycle.\n\n * new support for HTTP proxies in GIO\n\n * new GTask:completed property\n\n * use \"private\" futexes in order to further improve the performance of\n   the contended case of GMutex and g_bit_lock()\n\nBugs fixed:\n 614684 Make various parts of GObject const-correct\n 730352 Use inet_pton(), if_nametoindex() and if_indextoname() for newer versions of Windows\n 733876 Proxy protocol 'http' is not supported.\n 741442 threads: use FUTEX_WAIT_PRIVATE and FUTEX_WAKE_PRIVATE if possible\n 742599 Clean up GUnixMountMonitor\n 743636 gtask: Add a GTask:completed property\n 743661 g_win32_check_windows_version() is missing from doc\n 744722 docs: Expand introduction to mention using async calls over sync ones\n 745589 [Patch] gio: add some missing autocleanup\n 745634 [GNotifications] Use themed icon as icon-name\n\nTranslations updated:\n Bosnian\n Bulgarian\n Catalan\n Czech\n French\n German\n Greek\n Hungarian\n Italian\n Kazakh\n Korean\n Latvian\n Lithuanian\n POTFILESin\n Polish\n Russian\n Serbian\n Slovak\n Slovenian\n Spanish\n Swedish\n Vietnamese\n pa  for Gnome\n\nOverview of changes in GLib 2.43.91\n===================================\n\nWe have now added 'g_autofree' as a libgsystem-style autocleanup macro\nthat calls g_free() on the content of a local variable when it leaves\nscope (working only on GCC and clang).\n\nGApplication now has an \"is-busy\" property, allowing one to query the\neffective busy state.\n\nThere have been various other bugfixes and cleanups.\n\nBugs fixed:\n 661554 GIO's use of GError is wrong\n 744263 Fix format specifier for __LINE__ in G_OBJECT_WARN_INVALID_PSPEC\n 744565 gapplication: add bind_busy_property()\n 744747 Add g_autofree\n 744756 Can't find out if gapplication is marked as busy\n 744830 autocleanups: Add GArray and GPtrArray\n 744876 Unclean exit from from g_application_run\n 745239 g_property_action_new missing type annotation\n\nTranslations updated:\n Chinese (Taiwan)\n French\n Galician\n Lithuanian\n Slovak\n\nOverview of changes in GLib 2.43.90\n===================================\n\n* new GSimpleIOStream class to construct a GIOStream from an arbitrary\n  GInputStream and GOutputStream\n\n* GApplication: new API for marking 'busy' state according to the value\n  of a boolean property on another object\n\n* GOptionGroup: add binding support (boxed type, annotation fixes, etc.)\n\nBugs fixed:\n 739724 Test functions should have async scope\n 741024 glist: Mention that g_list_length() is bad for checking list emptiness\n 741630 Add GSimpleIOStream class\n 743349 goption: Add boxed type for GOptionGroup\n 743990 GDBus connection closing is broken\n 744565 gapplication: add bind_busy_property()\n\nTranslations updated:\n Greek\n Italian\n Norwegian bokmål\n Russian\n Slovenian\n Swedish\n\nOverview of changes in GLib 2.43.4\n==================================\n\n* GType now has type declaration macros G_DECLARE_DERIVABLE_TYPE,\n  G_DECLARE_FINAL_TYPE and G_DECLARE_INTERFACE, which significantly reduce\n  the boilerplate needed for GObject types and interfaces.\n\n* g_autoptr and g_auto are macros for declaring variables with automatic\n  cleanup. They only work with gcc and clang.\n\n* GListModel is a new interface that represents a dynamic list of GObjects.\n\n* GListStore is a GSequence-based implementation of GListModel.\n\n* Support thread names on OS X\n\n* g_simple_action_set_state_hint: New function to set the state hint\n  of GSimpleActions\n\n* g_win32_check_windows_version: New function to check Windows version\n\n* g_settings_schema_list_children and g_settings_schema_key_get_name\n  are new functions to complete the GSettingsSchema API.\n\n* Bugs fixed:\n 389585 G_DEFINE_TYPE hack for header files\n 729351 Add GListModel\n 736914 Docs: various fixes and improvements\n 741807 Add thread name support on OS X and iOS\n 741895 gwin32: Add Simple API to check whether we are on at least a v...\n 742456 object: Add g_steal_pointer() convenience function to mark own...\n 743508 polkitd fails to start: patch for gio/gcredentialsprivate.h\n 743517 GSettings API is missing some introspection functions\n 743521 GSimpleAction: add g_simple_action_set_state_hint\n 743596 G_DECLARE_DERIVABLE_TYPE() should allow additional typedef for...\n 743640 add __attribute__((cleanup)) support\n 743827 Fix build of GListModel (on Visual Studio)\n 743927 GListStore: add sorted insert function\n 743936 glib: handle unsigned modifier for long long in internal printf\n 744012 Add GMutexLocker\n 744190 Fix build on Compilers That Do Not Use inline for Plain C Code\n\n\nOverview of changes in GLib 2.43.3\n==================================\n\n* add g_set_object() convenience function\n\n* GNetworkMonitor: check if NM is not running and don't crash\n\n* fix some races with g_mkdir_with_parents\n\n* fix some warnings in MSVC\n\n* avoid use of G_STRLOC in G_OBJECT_WARN_INVALID_PSPEC in order to save\n  on static strings\n\n* fix some content type vs. mime issues\n\n* documentation improvements\n\n* Bugs fixed:\n 719455  g_file_make_directory_with_parents() can erroneously throw G_IO_ERROR_EXISTS\n 732439  GSocket: avoid unnecessary g_socket_wait_condition() for blocking sockets\n 734946  Implement GContentType on OSX\n 741589  gobject: Add g_set_object() convenience function to set GObject pointers\n 741653  gnetworkmonitornm: Check if network-manager is running\n 741654  [patch] gobject: don't use G_STRLOC in G_OBJECT_WARN_INVALID_PSPEC() macro\n 741707  Gsocket blocks trying to send data\n 741788  Document GSettings build system integration\n 742548  configure.ac: stay out of autoconf's namespace\n 742851  avoid MSVC warnings in G_STMT_END\n 742972  ggettext: Include an example of setlocale() and friends in the i18n docs\n 743014  gtestutils: Add an example of using test fixtures \n\n* Translations updated:\n Basque\n Brazilian Portuguese\n Spanish\n\nOverview of changes in GLib 2.43.2\n==================================\n\n* New function: g_strv_contains\n\n* New function: g_network_address_new_loopback\n\n* New function: g_socket_send_messages\n\n* A new GNetworkMonitor implementation using NetworkManager provides\n  more detailed connectivity information\n\n* Bugs fixed:\n  11059 Linux poll issue\n 664562 captive wifi portal support for GNetworkMonitor\n 685880 Add g_strv_contains()\n 712570 Hang in g_threaded_socket_service_func\n 719646 GSocket: add g_socket_send_messages() to send multiple messages...\n 728928 Provide separate error code for \"Connection reset by peer\"\n 732317 Support GSocketConnectable for loopback addresses\n 740814 \"make check\" should ensure that every symbol is documented\n 740848 Backend subscription fails when connecting to a signal with a d...\n 741016 gio: add G_IO_ERROR_NOT_CONNECTED\n 741226 keyfile: Add \"in group\" to GError message consistently\n\n* Translation updates:\n Gujarati\n Hebrew\n Hungarian\n Kannada\n Turkish\n Vietnamese\n\n\nOverview of changes in GLib 2.43.1\n==================================\n\n* GQueue now accepts NULL as a sibling in g_queue_insert_before() and\n  g_queue_insert_after()\n\n* Bugs fixed:\n  11059 Linux poll issue\n 726037 Add G_PARAM_READWRITE value to the GParamFlags enumeration\n 727988 GMemoryOutputStream hangs when writing more than 1GiB\n 729739 tlscertificate: add support for loading certificate chains\n 733791 GSettings: delay backend subscription\n 736286 Clarify g_file_replace behavior with etags\n 736620 GQueue: accept NULL sibling for insert_before() and insert_after()\n 737150 GLib-GIO-WARNING **: Failed to parse translated string 'visible-name...\n 737160 unhelpful error message\n 738259 GDBusInterfaceVTable: clarify memory handling for the method() virt...\n 738551 'interface' variable conflicts with Windows defines\n 738633 Need to disable SSLv3 in glib-networking\n 740157 <app> --help doesn't work even when options were added\n 740309 Fix docs in g_strfreev\n 740413 Fix the GSettings Registry Backend \n\n* Translation updates:\n Norwegian bokmål\n\n\nOverview of changes in GLib 2.43.0\n==================================\n\n* GObject gained a debug option to provide instance counts. To use it,\n  set GOBJECT_DEBUG=instance-count and call g_type_get_instance_count().\n\n* GOption now has a strict POSIX mode in which it stops parsing arguments\n  as soon as a non-option argument is encountered.\n\n* Bugs fixed:\n 354457 Feature Proposal: Per-Type Statistics for Instantiable GTypes\n 695082 g_hash_table_remove_all is not save against a call to g_hash_table_remove\n 723160 GOption: add strict posix mode\n 728256 gcredentials: add NetBSD support\n 729739 tlscertificate: add support for loading certificate chains\n 733338 Don't segfault in GNetworkMonitor when IPv6 support is unavailable\n 736273 gdesktopappinfo: Use symbolic names in the code\n 736284 Keep only one list of signal emissions\n 736806 gtask: Fix reference count loop causing leaks\n 736914 Docs: various fixes and improvements\n 737143 Include <stdint.h> in glib/valgrind.h\n 737259 gcancellable: Clarify that GSources hold references to GCancellables\n 737338 gmain: Unref child sources when finalising a GSource\n 737446 tests: Fix some minor leaks in the unit tests\n 737451 Provide api to read_all_async\n 737741 g_datalist_id_get_data assertion fails for non-existant keys\n 737869 GApplication command line handling breaks --help\n 738170 g_byte_array_new_take() doesn't initialize array->alloc\n 738197 g_cond_timed_wait() doesn't time out on Mac OS X\n 738374 gfile: g_file_equal (x, x) is TRUE\n 738675 GSubprocessLauncher is missing some data on the docs \n\n* Translation updates:\n Bengali (India)\n Bulgarian\n Gujarati\n Italian\n Telugu\n\n\nOverview of changes in GLib 2.42.0\n===================================\n\nAll changes in this release are trivial in nature.\n\n - introspection warning fixes\n\n - g_application_add_main_option now uses an enum instead of an 'int'\n   for the type of a parameter\n\n - added a G_OPTION_FLAG_NONE so that people don't need to use 0\n\n - gresource: Use GError in more places\n\n - gresource commandline tool: improve extraction from multiple sections\n\n - GSource now takes the context lock (if any) in g_source_set_name()\n\n - new documentation to clarify the use of some APIs related to\n   GVariant, GSource, GApplication\n\n - other minor updates to docs\n\n* Bugs fixed\n 736683 Thread safety issues with g_main_context_find_source_by_id\n 736975 [patch] please document that GVariant serialization needs an\n        out-of-band length field\n\n* Translation updates\n Danish\n Hindi\n Marathi\n Punjabi\n Serbian\n Simplified Chinese\n\nOverview of changes in GLib 2.41.5\n==================================\n\n* Bug fixes:\n 735819 single native credential struct used for two purposes\n 735915 glib-building.html uses --enable-gcov instead of --enable-coverage\n 736350 GDesktopAppInfo: avoid polling on missing desktop dirs\n 736351 Don't use issetugid() on Android\n        Fix the default application logic in GDesktopAppInfo\n 736458 Only use rand_s() when targetting Visual Studio >= 2005\n\n* Translation updates\n Galician\n Hungarian\n Indonesian\n Kannada\n Latvian\n Polish\n Russian\n Slovenian\n Tamil\n\n\nOverview of changes in GLib 2.41.4\n==================================\n\n* GApplication now has binding-friendly API to handle\n  commandline options: g_application_add_main_option\n\n* G_GNUC_BEGIN_IGNORE_DEPRECATIONS works with clang\n\n* Bugs fixed:\n 583330 poll list of mounted file systems (no mtab support)\n 727455 Command line option parsing from bindings\n 734126 add G_GNUC_BEGIN_IGNORE_DEPRECATIONS macro for clang\n 735179 gsocketclient: Handle cancellation between CONNECTING...\n 735297 Docs claim that GThread struct is deprecated \n\n* Translation updates:\n  Assamese\n  Catalan\n  Catalan (Valencian)\n  Czech\n  French\n  German\n  Greek\n  Hebrew\n  Korean\n  Oriya\n  Traditional Chinese\n\n\nOverview of changes in GLib 2.41.3\n==================================\n\n* g_clear_pointer and g_clear_object no longer use atomics\n\n* Bugs fixed:\n 711547 win32: silence some build warnings\n 725511 Compiled resource files should have the same /-separators everywhere\n 725513 Some tests fail to build on W32\n 725514 W32: gfileutils does not preserve errno correctly\n 725515 test-printf fails on W32\n 728730 gsocket: Set SO_NOSIGPIPE on sockets on Darwin\n 729703 Leaks a GError in g_file_move\n 730932 statically assert that reasonable assumptions about enums are true\n 732085 gtype: Fast-path for g_type_is_a\n 732754 GDBusMessage: optimise (de)serialisation of fixed arrays\n 733345 ginetaddress: Add a precondition to g_inet_address_new_from_string()\n 733576 Patches from static analysis run on 2.40\n 733715 glib's configure.ac makes accidentally use of nested function\n 733934 win32: improve the package installation dir lookup\n 733960 W32: spawning a console process creates a new window when stdout...\n 733969 Remove atomic aspects of g_clear_pointer/object\n 733982 Do not crash when checking whether an instance type is of a given...\n 734035 gedit hangs up when there's no GSettings key in the registry \n\n* Translation updates:\n Basque\n Brazilian Portuguese\n Lithuanian\n Slovenian\n Spanish\n\n\nOverview of changes in GLib 2.41.2\n==================================\n\n* The Unicode support has been updated to version 7.0\n  of the Unicode standard\n\n* GNotification now supports priorities for notifications\n\n* GCredentials has gained NetBSD support\n\n* GMutex now uses a faster, native implementation on Linux\n\n* Bugs fixed:\n 699132 Pluggable event loop backends\n 720708 g_assert_warning(): number of arguments doesn't match for...\n 722092 Add GtkApplication resources support\n 724986 Change gio/data-to-c.pl to /usr/bin/env perl.\n 727974 Fix up failure-to-see-expected-message logging\n 728256 gcredentials: add NetBSD support\n 728401 GDateTime: Add guards to g_date_time_new()\n 729825 Formatting of g_alloca documentation\n 729914 instead of DEBUG_CODE and IF_DEBUG, provide a common macro...\n 730293 clang++-3.4: error: 'register' storage class specifier is ...\n 731339 giochannel: avoid setting uninitialised length\n 731424 #ifdef spaghetti for load_user_special_dirs() implementations\n 731623 GNotification: add support for a priority setting\n 731929 update tables to unicode 7.0.0\n 731950 gvalue: New g_value_from_instance\n 731986 GLib: implement GMutex natively on Linux\n 732184 GObject: warn on use of deprecated properties\n 732357 Docs: various fixes and improvements\n 732429 GActionEntry: improve documentation\n 732465 Fix build on x64 Visual C++ builds\n 732704 Docs: various fixes and improvements\n 732739 ginetsocketaddress: Explicitly initialise flags for getaddr...\n 732754 GDBusMessage: optimise (de)serialisation of fixed arrays\n 732984 g_object_ref(NULL) in g_dbus_object_manager_client_finalize\n 733084 Typos in g_bytes_hash() and g_time_zone_find_interval() docs\n 733146 spawn helper does not use correctly the parameters \n\n* Translation updates:\n Lithuanian\n\n\nOverview of changes in GLib 2.41.1\n==================================\n\n* Bug fixes:\n 697229 Custom Interface implementations will be broken with glib 2.37/38\n 698614 GObject: prevent installing properties after init\n 729269 gvariant: Fix confusion between type and format strings in the docs\n 730198 broken valgrind.h leads to crashes in g_type_free_instance on mingw64\n 730807 GMutex performance regression\n 730963 gconvert: mention that the g_convert len should be in bytes\n 730984 Faster instance type check for fundamentals\n 731050 <structname> tags appear in documentation\n 731200 unconditional 'notify' during g_object_set() is problematic\n 731335 gtype: guard uses of new fundamental type check\n 731341 gparam: change value of G_PARAM_EXPLICIT_NOTIFY\n 731366 run-assert-msg-test.sh gdb leaves assert-msg-test zombie\n 731425 giomodule protects function-call with different token than function...\n 731513 clang: build failure: implicit declaration of function '__atomic_load_4'\n 731584 gbookmarkfile: Cleaner error handling code to pacify static analysis\n 731657 Prevent an invalid @CARBON_LIBS@ from appearing in the .pc files\n 731979 docs: Correct param to interface's default_init()\n 731996 Return folder as icon for directories\n 732002 gwakeup: Clarify buffer sizing in g_wakeup_signal()\n 732005 Remove unused assignments\n 732019 gtestdbus: Don’t close stdout for dbus-daemon\n 732068 gsignal: Add an example to the g_signal_connect_swapped() documentation\n 732081 gsocket: Document that g_socket_create_source() holds a socket ref\n 732107 gsocketlistener: Reconsider closing sockets on listener finalisation\n\n\nOverview of changes in GLib 2.41.0\n===================================\n\n* Many bugfixes found by static analysis, including potential fd leaks\n  and NULL pointer dereferences.\n\n* Increased use of (nullable) attribute on out values and return types\n  now that it is supported (mostly from porting Vala metadata).\n\n* use XDG_CURRENT_DESKTOP for OnlyShowIn/NotShowIn handling of desktop\n  files, deprecating g_desktop_app_info_set_desktop_env()\n\n* add support for g_desktop_app_info_get_implementations() to find\n  desktop files that have an Implements= line for a given interface\n\n* GHmac has gained SHA-512 support\n\n* support the new mimeapps specification (most notably, moving the\n  assoications/defaults configuration to ~/.config/mimeapps.list).\n\n* libgobject is now linked -Wl,-z,nodelete when possible to avoid errors\n  when gobject is used from a module for a program that does not itself\n  use gobject and that module is unloaded/reloaded\n\n* ... and many other bug fixes.\n\n 623552 glib warns if backtrace.py is not present\n 667468 glib-2.30.2: ipv6 tests fail when no ipv6 support is available\n 668152 -framework Carbon linker flag not passed to pkg-config .pc files\n 707298 libgobject should be linked with -Wl,-z,nodelete\n 712391 Add g_desktop_app_info_get_implementors()\n 722723 Infinite recursion when calling g_io_stream_close_async() from libsoup\n 724741 hmac: Fix support for SHA-512 in GHmac\n 726040 networkaddress: fix parsing of uri with @ after authority\n 726318 gio: Document that GSocket is not thread safe\n 726611 socketclient: Leak on cancellation\n 726872 gio: Add names to idles and timeouts\n 727119 wrong IN6_IS_ADDR_MC_LINKLOCAL usage break android build\n 727123 GNotification: Some small documentation fixes\n 727320 docs: Remove escaping '\\' from literals\n 727551 Check use_count of GApplication in g_application_release()\n 727559 g_file_copy: Don't set GError when we intend to ignore errors\n 727692 gio/gtlscertificate.c -- broken PEM-file processing (affects local CA root stores, for starters)\n 727890 soup_content_sniffer_real_sniff segfault\n 727900 gio: Add newer dbus UnknownXxxx and PropertyReadOnly errors\n 727928 gapplication-tool fixes\n 727939 INTLLIBS are always appended in configure checks\n 727964 g_io_extension_point_get_extension_by_name: Warn, but don't crash, for NULL inputs\n 728040 Implement new mimeapps spec\n 728066 Deal with startup notify id being NULL\n 728280 platform_get_argv0: fix sysctl(3) use on OpenBSD\n 728285 docs: Use markdown links in .h files, too\n 728350 gaction: Minor clarifications in the GAction documentation\n 728380 docs: Remove <!-- --> comment before plural s\n 728565 gfile: More explicitly document the context for GFileProgressCallback\n 728983 Docs: various fixes and improvements\n 729167 gobject: Document that classes/objects/interfaces are zero-filled\n 729563 GOption: A short option's value is included in G_OPTION_REMAINING\n 729813 AppInfo: use XDG_CURRENT_DESKTOP for OnlyShowIn\n 729875 gio: cleanup gdbusmessage.c file\n 730045 Avoid overeager warning about deprecated properties\n 730189 gtestutils: Fix a very unlikely FD leak in test fork handling\n 730190 gsocket: Add missing preconditions to g_socket_send_message()\n 730277 gthread: Fix use of a local variable after it went out of scope\n 730278 gsubprocess: Add a missing va_end() call\n 730295 gdbus-tool: Remove dead variables\n 730493 Port annotations from Vala metadata\n\nTranslations updated:\n Basque\n Brazilian Portuguese\n Catalan\n Czech\n Danish\n Greek\n Hebrew\n Hungarian\n Punjabi\n Serbian\n Slovenian\n Spanish\n Ukrainian\n\nOverview of changes from GLib 2.39.91 to GLib 2.39.92\n=====================================================\n\nThis is a release candidate for 2.40.0.\n\n* g_test_run() no longer runs tests in exactly the order they are\n  registered; instead, it groups them according to test suites (ie,\n  path components) like the documentation always claimed it did. In\n  some cases, this can result in a sub-optimal ordering of tests,\n  relative to the old behavior. The fix is to change the test paths to\n  properly group together the tests that should run together. (eg, if\n  you want to run test_foo_simple(), test_bar_simple(), and\n  test_foo_using_bar() in that order, they should have test paths like\n  \"/simple/foo\", \"/simple/bar\", \"/complex/foo-using-bar\", not\n  \"/foo/simple\", \"/bar/simple\", \"/foo/using-bar\" (which would result\n  in test_foo_using_bar() running before test_bar_simple()).\n\n  (The behavior actually changed in GLib 2.36, but it was not\n  documented at the time, since we didn't realize it mattered.)\n\nThere are no major changes in this release, but a few serious bugs have\nbeen fixed.\n\n* Bugs fixed:\n 710367 Crash in g_settings_backend_dispatch_signal()\n 723899 G_DEFINE_TYPE() causes compiler warnings with clang due to foo_get_instance_private\n 724859 Let the test_wait_until() test also run on non-*nix\n 724916 gio unmount code makes XFCE's Thunar crash\n 725651 GSubprocessLauncher: Does not copy the calling process environment.\n 725656 Unskip GVariantDict\n 725891 gio tests: add codegen to BUILT_SOURCES\n 726046 Recent commit created symbolic icons issues\n\n* Translations:\n Chinese\n French\n Korean\n Latvian\n Norwegian bokmål\n Portuguese\n Russian\n Traditional Chinese\n\nOverview of changes from GLib 2.39.90 to GLib 2.39.91\n=====================================================\n\nThis release introduces a hard dependency on present and functioning\nclock_gettime() and CLOCK_MONOTONIC.  It also introduces a dependency on\npthread_condattr_setclock() unless your system happens to have\npthread_cond_timedwait_relative_np() (as do Mac OS and Android).  This\nrelease is known to be broken with at least GNU/Hurd, pending addition\nof working pthread_condattr_setclock(CLOCK_MONOTONIC) there.\n\nNew API: g_str_to_ascii()\n\n* Fixed bugs:\n 670144 unconditional use of CLOCK_MONOTONIC is broken\n 673607 invalid assumption in g_cond_wait_until() / g_get_monotonic_time() API\n 710142 Add more impressive transliteration to GLib\n 722360 make check fails\n 722604 (partial) Various tests are failing with 2.39.3\n 723316 g_hash_table_iter_remove() should be explicit whether or not it is safe while iterating the table\n 724609 Fix build of GIO on Windows\n 724687 gmain: make monotonic time really monotonic, everywhere\n 724706 gsource: document priority of child sources\n 724707 some GSocket source improvements\n 724839 GMainContext: some source ID cleanups\n 724858 Dist gtranslit-data.h\n 724994 Missing icons for bookmarks in file chooser\n 725023 Can no longer find apps by executable/desktop file name\n\n* Translations:\n Lithuanian\n Polish\n Thai\n\nOverview of changes from GLib 2.39.4 to GLib 2.39.90\n====================================================\n\n* Fixed bugs:\n 625408 make GVariant dictionaries more useful\n 660809 document that if you fail a precondition check, documented guarantees do not apply\n 661576 fix handling of constructors that destroy half-constructed objects\n 679957 g_inet_address_new_from_string is not able to handle dots and numbers IPv4 addresses\n 712837 gvariant: Document the need to cast varargs when constructing GVariants\n 721458 g_simple_async_result_is_valid has a NULL check for the wrong source_tag\n 721977 improve split handling of command line arguments\n 722033 win32: fixup lib.exe invocation\n 723422 Fix g_socket_get_available() with TCP on Windows\n 723616 gio/tests: fix race when generating code\n 724001 gsubprocess: Fix a broken link in the documentation\n 724124 glib/tests/collate.c fails if no en_US locale\n 724126 intermittent GApplication test failure: /gapplication/local-actions: lines of output permuted\n 724233 gsocketservice: Note g_socket_listener_close() for closing open sockets\n 724239 soup_session_queue_message - Connection terminated unexpectedly\n 724278 gsocketconnection: Document closing connections with g_io_stream_close()\n 724330 configure.ac: tweak inotify check\n 724385 gtestutils: make the new assert messages more detailed\n 724401 gsubprocess: Mutex leak\n 724417 glib master build broken on OpenBSD\n 724434 Build failure in gio/gresolver.c\n\n* Updated translations:\n Brazilian Portuguese\n Galician\n Indonesian\n Italian\n Kannada\n Norwegian bokmål\n Spanish\n Thai\n\nOverview of changes from GLib 2.39.3 to GLib 2.39.4\n===================================================\n\n* Fixed Bugs:\n 139699 Correction for g_main_context_unref()\n 583036 g_strchomp and g_strchug are not declared const\n 683388 improve documentation for application developers\n 685204 ./configure fails to add the '-g' flag to CFLAGS\n 688406 GStaticMutex broke ABI on at least ARM EABI during 2.31.x\n 693299 cannot compile on Solaris: error in gbitlock.c\n 707111 Clarify type transformability and compatibility\n 711547 win32: silence some build warnings\n 719344 Fix the various test programs (or GLib itself) on Windows\n 722025 cleanup/clarify command line argument encoding on Windows\n 722323 remove unused include 'gslist.h' in 'gbookmarkfile.c'\n 722326 gstringchunk: Use g_slist_free_full() where possible\n 722357 gio: fix small memory leak on local xattr\n 722436 Adjust doc to Makefile.decl renaming\n 722503 GSimpleAction: add default activate handler\n 722526 glib/deprecated/gthread.h error on FreeBSD\n 722591 [documentation] broken link to GtkAction from GAction.html\n 722973 Broken example in GApplication reference\n 723048 'network-access' test can fail to guess interface index\n 723360 gmain: Note that g_source_destroy() can be called multiple times \n\n* Updated Translations:\n Assamese\n Tamil\n Traditional Chinese\n\n\nOverview of changes from GLib 2.39.2 to GLib 2.39.3\n===================================================\n\nNo major changes this release -- mostly lots of small fixes and\nimprovements in test coverage.\n\n * fix a crasher in code from gdbus-codegen\n\n * improvements to gobject gdb helper script\n\n * portability:\n\n   - fix a deadlock issue with kqueue on FreeBSD\n\n   - work around a quirk in the sunstudio compiler\n\n   - rename a variable to avoid clashing with a macro definition of\n     'environ' on some platforms (like mingw)\n\n   - use POSIX-specified <poll.h> over <sys/poll.h>\n\n   - many improvements to Visual Studio projects and and some build\n     fixes for Windows\n\n * tests\n   - a very large number of improvements in test coverage\n\n   - don't report skipped tests as failures\n\n   - return 77 if we skip all tests in an executable\n\n   - improve gtest documentation and fix some minor issues\n\n   - fix g_test_trap_reached_timeout() return value\n\n   - remove some dead code uncovered during test coverage expansion\n\n   - Use tap mode for installed tests too, when using tap\n\n * fix races in unix signal handling\n\n * make our GVariant-based commandline tools (glib-compile-schemas,\n   gdbus, gapplication) print out GVariant parse errors in context\n\n * GApplication now has a --gapplication-service command line switch to\n   turn any GApplication into a service\n\n * improve compatibility of GApplication and GOptionContext\n\n * fix gsettings.m4 wrt. builddir != srcdir with non-recursive make\n\n * use a directory monitor in GKeyfileSettingsBackend\n\n * improve robustness of some GIcon classes\n\nBugs fixed\n 141251  poll(2) is in <poll.h>, not <sys/poll.h> per SUS standard\n 613732  [PATCH] gobject.py: Don't install frame filters when GDB does not support them\n 708212  g_variant_parser_error_get_quark() has unexpected name.\n 710965  GApplication: add --gapplication-service switch\n 711090  periodic failure of spawn-multithreaded async testcase\n 712171  gsettings.m4: @GSETTINGS_RULES@: Support srcdir != builddir with nonrecursive make\n 712630  Revert \"gsettings m4: check for .xml in src/builddir\"\n 715028  GVariant: add way to print context of parse errors\n 719344  Fix the various test programs (or GLib itself) on Windows\n 720263  gtestutils: skipping a test should count as success, not failure\n 720539  gdbus-codegen: Fix crasher in goa-using apps\n 720635  Make gdb pretty-printers compatible with Python3\n 720891  g_settings_get_child does not inherit the backend\n 721034  glib 2.38.2 cannot be compiled with SunStudio Compiler under Solaris\n 721059  g_subprocess_launcher_set_environ vs \"environ\"\n 721074  kqueue: deadlock\n 721087  Missing -lselinux in pkg-config --libs --static gio-2.0\n 721324  Error message is printed to stdout\n 721624  Regression in GTest framework reorders existing test cases\n 721625  backwards NEWS entry about g_source_remove change\n 721796  insufficient escaping in g_dbus_annotation_info_generate_xml()\n 721947  Improve GApplication ⇔ GOptionContext compatibility \n\nTranslations updated:\n Brazilian Portuguese\n Galician\n Greek\n Hebrew\n\nOverview of changes from GLib 2.39.1 to GLib 2.39.2\n===================================================\n\n* Portability\n\n  - Remove alleged support for OS/2\n\n  - Remove alleged support for BeOS\n\n  - Remove alleged support for last-millennium Unixes\n\n  - Require C90 compliance\n\n  - Require POSIX.1 (1990) compliance on Unix\n\n  - Require GNU make\n\n* Bugs fixed:\n 113075 support \"nonnull\" attribute\n 159528 g_ptr_array_remove_range()\n 307947 The check for growing stack pointer in configure can fail\n 607016 docs should mention property notification order\n 671557 Fun with integers and g_key_file_load_from_data()\n 676761 don't use g_critical for a runtime error\n 690525 g_file_replace_contents_async doesn't copy its @conten...\n 691608 Support compilation with clang 3.2\n 697585 g_variant_builder_add's doc example is leaking\n 697828 g_hash_table_add() should return a boolean\n 702862 gdbus-codegen : look for deps in default install path\n 703522 Reference leak in GvariantBuilder documentation\n 705902 g_get_current_dir() should check PWD env var and retur...\n 708274 Added GObject Introspection annotations to genums.c\n 710519 Portability schmortability\n 710741 some mainloop instrumentation\n 710983 Test failures on powerpc\n 711047 Enable the build of the various test programs on Windo...\n 711051 Add basic test for the GNotification gtk backend\n 711088 gbacktrace: Don't close stderr when running gdb\n 711103 gmessages: Add g_info macro for G_LOG_LEVEL_INFO\n 711178 appinfo test problems\n 711546 utf8: report allocation error\n 711640 gdesktopappinfo: Rank Keywords matches higher than Gen...\n 711751 Fix memory leaks in libglib tests\n 711753 gthread-posix: Don't use gslice allocated GRecMutex\n 711796 glib-tap.mk: fix to actually use the TAP driver\n 711800 fix g_test_set_nonfatal_assertions()\n 711801 giomodule: Allow overriding source directory gio modul...\n 711805 gdbus-connection: Fix race condition in test\n 711806 gtestdbus: Don't destroy GSource twice\n 711807 gtestdbus: Properly close server connections\n 711871 Broken and misleading configure check for growing stack\n 712136 'O_CLOEXEC' undeclared (first use in this function)\n 712148 Add system bus support to GTestDBus\n 712171 gsettings.m4: @GSETTINGS_RULES@: Support srcdir != bui...\n 712314 AIX port: splice(); major()/minor(); libtool library order\n 712315 GSettings: More docs for deprecated _list_schemas()\n 712393 gobject: Box GMappedFile\n 712547 GSocketClient \"event\" not useful for determining resol...\n 715164 Clang static analysis fixes\n 719395 GPtrArray add g_ptr_array_insert\n 719402 Crashes when startup\n 719472 leak in generated proxy-side property-setter\n 719687 fix or remove g_trap_object_ref\n 719809 Signal connection ids are always > 0 if successful\n 719837 gdbus-connection: Work around race in connection tests\n 719884 Fix documentation typos in GTask and GCancellable examples\n 719979 g_settings_get: check validity of format string\n 720080 Truncating a GMemoryOutputStream to a larger size cause...\n 720210 gdataset: Remove unused define\n 720236 Allow clean simple use of g_test_trap_subprocess() \n\n* Translations updates:\n Italian\n Lithuanian\n Simplified Chinese\n Spanish\n\n\nOverview of changes from GLib 2.39.0 to GLib 2.39.1\n====================================================\n\n * GSettings fixes/improvements\n\n   - GSettingsSchema API is now more powerful and consistent\n\n   - new GSettingsSchemaKey API allows accessing metadata for keys:\n     type, default value, range and the long-awaited support for summary\n     and description\n\n   - GSettingsSchemaSource gains support for listing schemas within a\n     source.  Deprecate the global API that did this for the default\n     source.\n\n   - 'gsettings list-schemas' now works properly with --schemadir\n\n   - deprecate a bunch of now-redundant functionality on GSettings\n\n   - add API to GSettings for getting the default value of a key (as set\n     by the sysadmin)\n\n   - add API to GSettings for determining if the user has assigned a\n     particular value to a key (ie: we are not just reading the default)\n\n   - ignore qualified tags and attributes appearing in schema files\n\n * Applications/Actions\n\n   - make GSimpleAction a bit more strict with respect to state changes\n     that would violate the interface (ie: by changing the state type\n     after construction)\n\n   - throw an error when attempting to 'Describe' a non-existent action\n     via D-Bus instead of returning a bogus description\n\n   - throw an error when attempting to invoke unsupported methods on an\n     Application (eg: 'Open' on an app that doesn't HANDLES_OPEN)\n     instead of emitting a g_critical() in context of the app (which is\n     not itself at fault for the errant call)\n\n * Appinfo\n\n   - substantially rework GDesktopAppInfo to reduce the amount of disk\n     accesses that are performed in common situations\n\n   - add a new class: GAppInfoMonitor for discovering when applications\n     are installed/removed\n\n   - add a new g_desktop_app_info_search() API for searching for\n     installed applications by name, keywords, etc.\n\n * GMarkup: add new G_MARKUP_IGNORE_QUALIFIED flag for skipping over\n   \"qualified\" tags and attributes (those with a colon in the name, such\n   as 'my:tag')\n\n * GDBus\n\n   - ignore qualified tags, as above\n\n   - GTestDBus: unset all D-Bus addresses (such as STARTER) to ensure\n     that test programs don't pick them up\n\n   - add new session_bus_run() convenience in the tests and use it\n\n * GRand: use real random data as a seed on win32 and use the\n   timestamp/pid/uid fallback only on UNIX machines where we can't open\n   '/dev/urandom'.  This may cause issues with older mingw32 releases\n   due to a missing prototype for the rand_s() API.\n\n * Many win32 (and particularly MSVC) portability fixes.  Many\n   additional tests are now runnable when building with MSVC.\n\n * Due to early testing of the (soon to land) GCleanup framework, a very\n   large number of memory errors have been found and fixed (mostly in\n   the testcases, but some in glib itself).\n\n * GIO:\n\n   - some more seeking cleanups: particularly on GLocalFileInputStream\n\n   - don't leave a .trashinfo file around if trashing a file fails\n\n   - Add a request_certificate virtual method to GTlsInteraction\n\nTranslations updated:\n Assamese\n Galician\n Greek\n Spanish\n Tamil\n\nBugs fixed:\n 635641 schema compiler should ignore unknown attributes\n 637257 g_tls_client_connection_gnutls_retrieve_function needs to be able to block\n 637956 GKeyfileSettingsBackend should ignore file deletions\n 645453 keys from base schema missing from extended schema\n 665634 g_dbus_node_info_new_for_xml() errors on unknown attributes in XML files\n 668232 Unable to get description and summary for a key\n 668233 Unable to determine if a key is set to the default / what the default value is\n 680838 Need g_settings_schema_source_get_schemas()\n 683017 API for accessing GSettings Schema metadata\n 687185 org.gtk.Actions.Describe doesn't return an error for non-existing action names\n 687202 If trashing fails, the \".trashinfo\" file is not removed\n 695558 The --schemadir option has no effect\n 696424 GSimpleAction.state property is not right\n 697348 GTestDBus should unset DBUS_STARTER_ADDRESS, DBUS_STARTER_BUS_TYPE\n 710133 Emit backward compatible code with gdbus-codegen\n 710691 glib-networking: locking during implicit handshake\n 710738 GRand has lame fallback for Windows\n 710859 Typo in gio docs\n 710885 Two fixes for GApplication\n 710962 error: 'F_DUPFD_CLOEXEC' undeclared (first use in this function)\n 710964 Add g_hash_table_get_key_array()\n 710991 test: g_debug messages shouldn't affect g_assert_expected_messages\n 711016 g_settings_list_keys () segfaults for empty schemas\n 711048 glocalfileinputstream.c allows skip past end of file\n 711049 Fix build of GLib-GIO 2.39.x on Windows/MSVC\n 711064 Adding child source to blocked source can cause a segfault\n 711070 Copying a symlink over another one segfaults\n 711099 gapplication test failure\n 711520 GDesktopAppInfo: allow more than one level of legacy folder prefixes\n 711556 Add GAppInfoMonitor\n 711557 Add g_desktop_app_info_search()\n 711600 trivial portability fix\n 711632 The desktop-app-info test fails during make check\n 711754 gmain: Fix use of uninitialized memory in sigaction structure\n 711755 private: Use threading primitives correctly in private test\n 711756 gthreadpool: Don't pass bad data to GThreadPool sorter\n 711768 Fix memory leaks in libgmodule tests\n 711775 utils: Don't free memory owned by glib in test\n 711782 boxed: Fix double free in boxed unit tests\n 711803 gsubprocess: Fix a number of leaks and a segfault\n 711808 gtestdbus: Fix leak of GMainLoop \n\nOverview of changes from GLib 2.38.0 to GLib 2.39.0\n====================================================\n\n * prep for the 2.40 series (version macros, docs index, etc.)\n\n * GNotification\n\n   - new API for sending persistent notifications via the desktop shell\n\n   - notifications persist when the application has quit and clicking on\n     them can restart the application with an action (via\n     DBusActivatable)\n\n * GSubprocess\n\n   - new API for launching subprocesses\n\n   - nice GIO integration like async functions, cancellability, etc.\n\n   - a convenient communicate() API inspired by the same API in Python\n\n   - related: the gspawn API now has a CLOEXEC flag for the created\n     pipes for stdin/stdout/stderr\n\n * New gapplication(1) commandline tool\n\n   - intended to be used with DBusActivatable apps\n\n   - can be used for launching apps, opening files, invoking application\n     actions and listing apps and actions\n\n   - bash tab completion is supported\n\n * GDesktopAppInfo changes:\n\n   - g_file_get_path() can implicitly cause a FUSE mount so don't call\n     it until we know we need it (for an app that doesn't support URIs)\n\n   - don't crash when trying to load from a keyfile with\n     DBusActivatable=true\n\n   - remove some dead code, refactor the search path handling a bit and\n     do a large-scale whitespace cleanup (prep work for the pending\n     desktop file index)\n\n * File monitors\n\n   - fix broken handling of mount point monitoring\n\n   - remove some strange use of GObject::constructor() from the base\n     class and inotify backend\n\n   - fix GFileMonitor to work in the non-default main context even when\n     the main context is not running (or is blocked)\n\n   - add internal private API for easily creating a file monitor in the\n     GLib worker thread\n\n * GSettings\n\n   - g_settings_list_children: only list viable schemas.  This fixes a\n     longstanding issue where 'gsettings list-recursively' will crash\n     when there are invalid schemas installed\n\n   - don't accept invalid paths on g_settings_new_with_path, etc.\n\n * GIO\n\n   - GFile now has a thumbnail::is-valid attribute to check if the\n     thumbnail in thumbnail::path needs to be regenerated\n\n   - GDBusProxy now has a flag to control autostarting of services at\n     construction time\n\n   - for GSeekable, properly introduce the concept of \"resizable\" vs.\n     \"fixed-sized\" streams in the docs, explaining the expected\n     semantics of the interface in each case\n\n   - fix some cases in GMemoryOutputStream that were violating the above\n     expectations (which may cause a slight API incompatibility)\n\n   - clean up GCredentials code and add support for Hurd and Solaris\n\n   - improve splicing by using different codepaths for the case where we\n     have real _read_async() and _write_async() implementations on the\n     stream vs. the case where they are internally emulated (via\n     dispatching the sync variant of the call in a thread)\n\n * GKeyFile\n\n   - fix a leak in g_key_file_get_(u)int64 when we fail to parse the\n     value as an integer\n\n   - add long-requested API g_key_file_save_to_file()\n\n * Portability improvements\n\n   - avoid using O_DIRECTORY on platforms that don't have it\n\n   - be careful about systems that define SOCK_CLOEXEC but don't\n     actually support it (like Hurd)\n\n   - only use SA_RESTART if it exists\n\n * Other small API changes/additions\n\n   - a pair of functions to support matching strings for the type of\n     search functionality that you'd expect to have with things like\n     GtkSearchBar.  This will also be used by the desktop file index.\n\n   - g_str_is_ascii() with obvious purpose\n\n   - g_test_expect_message() no longer appears to allow you to catch\n     G_LOG_ERROR messages\n\n * GMainContext/GSource\n\n   - fix handling of overflowing the 'next source id' counter\n\n   - g_source_remove() will now throw a critical in the case that you\n     try to remove a non-existent source.  We expect that there is some\n     code in the wild that will fall afoul of this new critical but\n     considering that we now reuse source IDs, this code is already\n     broken and should probably be fixed.\n\n   - simplify handling of the 'current dispatching source' to not\n     require use of a linked list\n\n * GObject\n\n   - the long-broken (and leaky) pattern of destroying a just-allocated\n     object from inside of a custom GObject::constructor is now\n     officially completely illegal and will abort the program\n\n * Unicode: update to 6.3.0\n\n * Bug fixes\n\n   - g_file_copy() now falls back to pathname queryinfo.  This should\n     clear up the bugs with copying from some GVfs backends (afp,\n     gphoto, archive, at least).\n\n   - fix an out-of-bounds read in the xdgmime code\n\n   - fix a typo in the /org/freedesktop/DBus path on the object manager\n     client\n\n   - skip emitting path_namespace='/' in match rules in order to\n     workaround a bug in the D-Bus daemon and fix our own implementation\n     (which shared exactly the same bug)\n\n   - fix crashes on precondition violations for GParamSpec constructors\n\n   - many other small fixups (see bug list)\n\n  * Many documentation improvements\n\nBugs fixed:\n 309224 g_key_file_save_to_file missing\n 583321 QNX: no SA_RESTART\n 661576 fix handling of constructors that destroy half-constructed objects\n 672102 GSubprocess class\n 684842 Seeks on GMemoryOutputStream don't have opaque semantics\n 688492 Add a notification API\n 691581 g_output_stream_real_splice_async doesn't use overriden read/write_async functions\n 702516 gfileutils: Make -Werror=format-nonliteral happy\n 704218 New gapplication(1) tool\n 704593 g_setenv: on some systems (BSD, OSX…), setting a variable to NULL crashes the system\n 704882 GLocalDirectoryMonitorClass mount_notify field is useless\n 704887 file monitoring improvements\n 705029 Support for Solaris credentials\n 705688 g_settings_list_children: only list viable schemas\n 706254 Afp backend cannot copy files\n 707887 Attempting to create GObject Property with underscore prefix segfaults\n 708042 gapplication: don't rely on cmdline being finalized immediately\n 708265 add support for GNU/Hurd in GLib D-Bus Library\n 708266 fix error code checks when SOCK_CLOEXEC is defined but not supported\n 708529 xdgmime: valgrind warns about invalid reads\n 708677 incorrect object path 'deskop' used in gio/gdbusobjectmanagerclient.c\n 708714 Typo in docs of GLIB_VERSION_2_40 macro.\n 708753 gdesktopappinfo: Call g_file_get_path() on demand\n 708793 glib build fails with clang < 3.1: error: expected ';' after top level declarator\n 708828 GDBusProxy: add the ability to call methods on non autostarted proxies\n 708860 glib-2.38.0 doesn't build on Solaris 10\n 708972 gnetworking.h in tarball screws up out-of-source builds\n 709113 [PATCH] Main loop dispatch path has needless linked list\n 709227 Update to unicode 6.3.0\n 709301 goutputstream: Add clear warning about short writes to _write_bytes() and async version\n 709326 GDesktopAppInfo crashes creating a DBusActivatable app without a filename\n 709440 Fix overloading of \"source\" and \"target\" terminology in GBinding\n 709615 Cannot use g_test_expect_message with g_error\n 709753 Add helpers for string matches when using GtkSearchBar-like widget\n 709898 Expose thumbnail validity in GFile attributes\n 709966 Remove outdated documentation\n 709994 Minor fix for HACKERS doc to direct hackers to proper help file\n 709995 Obsolete makefile rules\n 710002 G_MAXUINT may be assigned as duplicate source id\n 710313 Memory leak in g_key_file_get_(u)int64 with invalid integer values\n 710345 [Patches] Fix some redundant-decls\n 710496 g_locale_to/from_utf8() doc updated.\n 710625 g_file_error_from_errno: Remove unneeded breaks\n 710666 Frame clock related bug fixes\n 710724 gmain: Warn when g_source_remove() fails\n 710726 Work around D-Bus bug with path_namespace='/' match rules\n\nTranslations:\n Assamese\n Brazilian Portuguese\n Indonesian\n Russian\n Tamil\n Traditional Chinese\n\nWhat's new in Glib 2.38\n========================\n\n * Application support\n\n  - GIO now provides an implementation of Desktop Actions from the\n    desktop entry specification\n\n  - GApplication now implements the org.freedesktop.Application\n    interface as per the desktop entry specification, allowing for\n    standards-based D-Bus launching of GLib-based applications\n\n  - GDesktopAppInfo now supports DBusActivatable as per the desktop\n    entry specification, allowing GLib-based applications to use D-Bus\n    to launch other applications\n\n  - GApplication now has a \"busy\" flag that can be set on an application\n    to allow the shell to show that it is busy\n\n * GObject\n\n  - the private offset for a given class type is now always constant.\n    This was done by reorganising the memory layout of instances so that\n    the private data comes before the \"official\" pointer for the object\n    (ie: at a negative offset).  Valgrind macros were added to mitigate\n    any problems that this may have caused.\n\n  - a new G_DEFINE_TYPE_WITH_PRIVATE has been added along with a\n    generated function *_get_instance_private() that can now serve as an\n    equally-performing alternative to ->priv pointers in instances\n    (allowing memory savings)\n\n  - new G_PRIVATE_FIELD, G_PRIVATE_FIELD_P and G_PRIVATE_OFFSET macros\n    provide a convenient method of converting between named variables in\n    private structures and their (now constant) offsets\n\n  - installing properties on a GObjectClass must now be done from\n    class_init.  It is no longer valid to install them after class_init\n    has returned.\n\n  - it is now possible to manually break a GObject property binding\n    without destroying one of the objects involved\n\n * Icons\n\n  - the requirements for implementing the GIcon interface have changed\n    in order to make it possible to consume all implementations of GIcon\n    with a finite number of cases\n\n  - a new GBytesIcon type was added for an icon represented by an\n    in-memory binary blob in a known image format (ideally png).\n\n  - new APIs g_icon_serialize() and g_icon_deserialize() replace the old\n    to/from_string APIs and will always work, irrespective of which\n    types have been initialised in the calling process, allowing for a\n    serialised GdkPixbuf to be deserialised in a process that doesn't\n    have GdkPixbuf\n\n  - support for icons has been added to GMenuModel using the new APIs\n\n * Actions and menus\n\n  - GPropertyAction provides a convenient way of creating a stateful\n    property corresponding to a property on a GObject, such as the\n    \"visible-child-name\" property of a GtkStack\n\n  - new API g_menu_remove_all()\n\n  - we now have established rules about what is a \"valid\" action name\n    and an API to check them\n\n  - a new API for converting detailed action names to and from the\n    split-out name and parameter value (as GVariant)\n\n  - for backwards compatibility, invalid action names can still be used\n    with most functions, but this is not recommended\n\n * Other GIO\n\n  - GDBus now supports services that wish to handle some of all\n    properties on an interface asynchronously, without requiring the\n    service to reimplement the entire org.freedesktop.DBus.Properties\n    interface\n\n  - GFile now has a new _measure_disk_usage() (and async) API for\n    recursively determining the amount of disk space used by a\n    particular directory (akin to 'du').\n\n  - asynchronous version of g_file_trash() and g_file_make_directory()\n    have been added\n\n * Other new API\n\n  - GRegex has a new function to query the maximum lookbehind length to\n    allow for regexp matching on streams\n\n  - GVariant has two new APIs for constructing strings that allow\n    avoiding copies in some cases: g_variant_new_take_string() and\n    g_variant_new_printf()\n\n * Testing\n\n  - we can now generate TAP output\n\n  - new support functions for simplifying the process of dealing with\n    data files for srcdir != builddir and installed test cases\n\n  - g_test_trap_subprocess() provides a portable alternative to\n    g_test_trap_fork()\n\n * Other\n\n  - GLib now builds on Android against the bionic C library\n\nOverview of changes from GLib 2.37.93 to 2.38.0\n================================================\n\n* fix the documentation for GSourceFuncs\n\n* fix compilation on OS X/ppc64\n\nBugs fixed: 708445, 647145\n\nTranslations updated:\n Danish\n French\n Portuguese\n Punjabi\n\nOverview of changes from GLib 2.37.92 to 2.37.93\n================================================\n\n* a couple of bugfixes in the new g_file_measure_disk_usage() API\n\n* updated Traditional Chinese translation\n\nOverview of changes from GLib 2.37.7 to 2.37.92\n===============================================\n\n* new API g_file_measure_disk_usage() similar to du(1)\n\n* minor fixes\n\n* Translation updates:\n Assamese\n Belarusian\n Brazilian Portuguese\n Catalan\n Czech\n Galician\n German\n Hungarian\n Indonesian\n Italian\n Korean\n Korean\n Latvian\n Lithuanian\n Polish\n Serbian\n Slovenian\n Spanish\n\nOverview of changes from GLib 2.37.6 to 2.37.7\n==============================================\n\n* GDateTime now supports %:z formatting variations\n  for timezones. This is a GNU date extension.\n\n* Bugs fixed:\n 685387 Segfault with GObject.signal_handler_is_connected()...\n 686786 g_socket_get_available_bytes() returns wrong value ...\n 705027 GSocket GSource not threadsafe on Windows\n 706469 Fix G_DEFINE_ABSTRACT_TYPE_WITH_PRIVATE documentation\n 706706 Fix Gir annotations on g_loadable_icon_load_finish\n 706888 gtype: fix a no-op assertion\n 706958 configure.ac: fix atomic opts detection\n 707092 \"File Utilities\" page for GLib documentation doesn'...\n 707151 gdatetime: Extend the '%z' timezone format\n\n* Translation updates:\n Catalan\n Hungarian\n Japanese\n Polish\n Slovak\n Tamil\n\n\nOverview of changes from GLib 2.37.5 to 2.37.6\n==============================================\n\n* Tests using the g_test facilities can now generate TAP output\n\n* Bugs fixed:\n 680926 generic type fallback logic is broken for -symbolic\n 684327 setting null icon to icon list\n 689245 GSocket unable to reuse (address,port) on Mac OS X\n 692125 Support TAP as GTest output format\n 693335 build: fix dtrace-related warnings\n 696633 gdbus-codegen trips over unicode chars when using python 3.x\n 696970 Compiling 2.36.0 for win64 fails\n 697185 GSocket – Allow specifying the multicast interface from...\n 700268 Add support for using the clang analyzer\n 701318 Add G_SPAWN_DEFAULT to GSpawnFlags\n 701529 glib/tests/gdatetime: use UTC time in test_GDateTime_diff()\n 701800 a new approach to reporting critical errors\n 702674 g_date_time_new_utc crash\n 704165 GLib.IOChannel read_unichar() fails\n 705075 Simplify g_get_tmp_dir()\n 705152 Race in glib/task.test\n 705398 gtype: Fix typo in g_type_class_add_private() error message\n 705570 Check ref_count in g_object_notify_by_pspec\n 705600 Deprecate GSimpleActionGroup functions?\n\n* Updated translations:\n Assamese\n Brazilian Portuguese\n Czech\n Dutch\n Galician\n Gujarati\n Hebrew\n Italian\n Lithuanian\n Marathi\n Norwegian bokmål\n Russian\n Slovenian\n Spanish\n Thai\n Traditional Chinese\n\n\nOverview of changes from GLib 2.37.4 to 2.37.5\n==============================================\n\n* Implement the Desktop Action specification: In the case that the\n  application is a GApplication and DBusActivatable, actions from the\n  desktop file are translated into GActions that have been added to\n  the  application with g_action_map_add_action().\n\n* GPropertyAction is a new type of GAction that represents the value\n  of a property on an object, and allows to change the value when\n  activated.\n\n* GNetworkMonitorNetlink can now handle default routes via a device.\n\n* The gsettings tool now reports failure to write a key (e.g. because\n  the key was locked down)\n\n* Miscellaneous new api:\n - g_variant_new_printf\n - g_action_print_detailed_name\n - g_regex_get_max_lookbehind\n\n* Bugs fixed:\n 664444 Support additional application actions in .desktop files\n 684123 glib build only tries -D_GNU_SOURCE if glibc is detected\n 689794 support incremental matching\n 699259 add org.freedesktop.Application support to GIO\n 700460 rewrite tests to not rely on precise timing of timeouts\n 701511 updates to various GSource types\n 701609 gnetworkmonitornetlink: handle default route via device\n 703270 add GPropertyAction\n 704157 GAction: add function for printing detailed names\n 704250 Doc: various fixes\n 704267 regression gsourceclosure: segfault in gedit file chooser\n 704322 glib-unix: fix handling of multiple signal source for the...\n 704424 No error when failing to override a locked key\n 704447 Fix build/use of g_child_watch_closure_callback on Windows\n 704523 g_thread_create_full() can dereference NULL pointer\n 704543 Add implementations for G_GNUC_*_IGNORE_DEPRECATIONS for ...\n 704567 gdbusnameowning: Don't spew an error if we're releasing a...\n 704585 libc printf can give mixed-case strings for NaN and Inf\n 704587 FTBFS: statfs_result is undeclared for statvfs()\n 704699 gmain: Reset signal handlers to default when source is\n 704704 AI_NUMERICSERV cannot be used with ai_socktype = 0\n 704873 inotify: don't assume mainloop is running\n 704999 glib/convert.test crashing due to lack of iconv cache\n 704931 GMenuModel: add annotations to virtual functions\n\n* Translation updates:\n Assamese\n Czech\n German\n Gujarati\n Spanish\n Tamil\n\n\nOverview of changes from GLib 2.37.3 to 2.37.4\n==============================================\n\n* Bugs fixed:\n 701283 g_source_add_child_source() segfault\n 702147 inconsistency of G_STRFUNC\n 703191 new private macros interact poorly with versioning macros\n 703254 Doc: various fixes\n 703407 g_spawn_async() keeps child_pid_report_pipe open in child process\n 703437 GDBusConnection: be more careful with async GetAll\n 703478 Missing G_BEGIN/END_DECLS in gsettingsschema.h\n\n* Translation updates:\n Catalan\n\nOverview of changes from GLib 2.37.2 to 2.37.3\n==============================================\n\n* add a new API for instance private data: G_DEFINE_TYPE_WITH_PRIVATE\n\n* fix timestamps in tarball to prevent automake from being required to\n  build the unmodified source\n\n* add new D-Bus API for async property handling\n\n* add back fsync() on ext4 for g_file_set_contents() after it was\n  discovered that despite statements in the ext4 documentation\n  suggesting that this is safe, it is not safe.\n\n* Translations:\n Italian\n Norwegian bokmål\n\n* Bugs fixed:\n 698375 - D-Bus async properties\n 700350 - timestamp issue\n 701560 - fsync issue (fixed again)\n 700035 - new API for instance private data\n\nOverview of changes from GLib 2.37.1 to 2.37.2\n==============================================\n\n* The GLib test utilities have grown some file-related APIs\n  to support tests that can be used installed and uninstalled.\n\n* Installing properties after class initialization is deprecated,\n  and will trigger a warning.\n\n* GApplication:\n - Support org.freedesktop.Application, including D-Bus activation\n   from desktop files\n - Set prgname to appid for services\n\n* Bugs fixed:\n 549783 gtester lacks framework for tests with data files\n 692848 Fix property example in gobject tutorial\n 698018 Add an explicit g_binding_release()\n 698614 GObject: prevent installing properties after init\n 699259 add org.freedesktop.Application support to GIO\n 699959 g_file_copy(): Ensure we create private files by default\n 700123 Test failure: g_inet_socket_address_get_scope_id\n 700725 GIcon: NULLify the `type' out param in the sync methods too\n 701401 gtest: add function for testing for WINE\n 701456 Error in gnome/glib/gio/tests/file.c\n 701474 Error building glibmm due to extra comma in glib/gtestutils.h\n 701560 various improvements for g_file_set_contents()\n 701680 GFileEnumerator: Add some documentation about ordering\n 701878 Check wakeup() before iteration(TRUE) doesn't block\n\n* Translations:\n Assamese\n Czech\n Galician\n Gujarati\n Kannada\n Marathi\n Odia\n Polish\n Slovenian\n Spanish\n Telugu\n\n\nOverview of changes from GLib 2.37.0 to 2.37.1\n==============================================\n\n * add support for installed tests:\n   https://live.gnome.org/GnomeGoals/InstalledTests\n\n * add a new g_test_trap_subprocess() that works on Windows as a\n   replacement for the (now deprecated) g_test_trap_fork()\n\n * support for explicitly cancelling a gobject property binding\n\n * performance improvements for signal argument handling\n\n * stop using `quotes' in very many log messages generated by GLib, for\n   favour of 'this style'.  This may cause testcases in other packages\n   to fail if they were matching on the previous text.\n\n * improve manpages: add missing arguments and flags\n\nTranslations: \n Aragonese\n Assamese\n Gujarati\n Hindi\n Kannada\n Norwegian bokmål\n Odia\n Slovenian\n Spanish\n Tamil\n Telugu\n\nBugs fixed:\n 679683 replace g_test_trap_fork()\n 694380 Improve signal argument collection performance\n 695233 Strings require plural forms\n 697849 spelling fixes in cross.xml and running.xml\n 698877 GProxyAddressEnumerator calls g_network_address_parse_uri without port\n 698981 [PATCH] test /gdbus/connection/large_message could hang forever\n 699079 Prototype support for installed tests\n 699485 [PATCH] tests/mappedfile: Also handle ENOMEM\n 699493 SOCKS5 proxy code crashes if it cannot authenticate\n 699500 gbitlock: fix this to not unconditionally use futex emulation\n 699779 [PATCH] G_GNUC_FORMAT: documentation error\n 700263 m4macros/glib-gettext.m4: Don't use AC_HEADER_STDC\n 700714 [PATCH] gtestutils: Ensure test subprocesses don't dump core\n 700746 Use 'dumb quotes' rather than `really dumb quotes'\n\nOverview of changes fron GLib 2.36.0 to 2.37.0\n==============================================\n\n* The syntax for detailed action names has been documented,\n  and a parser API for them is now provided\n\n* GApplication has gained a busy state. This feature is intended for\n  clients that want to signal a desktop shell their busy state, for\n  instance because a long-running operation is pending.\n\n* GLib can now be built with the bionic C library\n\n* GIcon can now be serialized to a GVariant\n\n* Bugs fixed:\n 548353 Finish implementing GFile interface (mostly asynchron...\n 645881 Full port of glib-2.28.1 onto Android-ARM\n 665445 Glib mistakes nl_langinfo() from plibc for the real t...\n 672018 Need API to set global application state (busy, count...\n 687659 drop support for adding interfaces after class_init\n 688820 GIcon is a bad interface\n 688954 extend 'detailed action' syntax, provide parser\n 689223 Fix compilation on Android with the bionic C library\n 695156 Add support for arg0namespace matching in signal_subs...\n 696108 gdbus-codegen: avoid warnings in generated code\n 696629 fix sed(1) usage\n 696652 GTask won't free its error member variable on finalize\n 696857 GThreadedResolver: set an error if no records could b...\n 696973 Compiling 2.36.0 for win64 fails in gdbusmessage.c\n 697131 No --version\n 697160 [PATCH] gmacros: Mark G_UNAVAILABLE() functions as de...\n 697229 Custom Interface implementations will be broken with ...\n 697250 Documentation glitch of G_DEFINE_TYPE_EXTENDED causes...\n 697365 Fix usage of hasmntopt in gunixmounts.c\n 697367 Remove warning on gio/gunixmounts.c\n 697386 Except const argument with atomic is not lock free\n 697595 g_main_context_unref unlocks a mutex twice\n 697601 reduce GMenuModel D-Bus traffic\n 697626 Allow posix threads to be used on w32\n 697652 Help options generated even when help disabled\n 697771 fix a typo of \"fo\" to \"of\" in building.xml\n 697887 GVariant: fix transfer annotation\n 697942 abicheck.sh fails on mips\n 698056 rewrite g_object_new()\n 698081 Pidgin hangs in g_spawn_command_line_sync\n 698455 GVariant: add new g_variant_new_take_string() API\n 698457 g_variant_get_data_as_bytes() always returns toplevel...\n 698478 gactionmap: don't require GActionGroup\n 698595 the valgrind/priv-before-instance bug\n 698655 desktop-app-info test relies on true being in /usr/bin/\n 698686 GUnixSocketAddress: fix construct parameter issue\n 698716 Use of g_mem_set_vtable() breaks after gobject automa...\n 698999 bytesicon: fix a memory leak\n 699001 bytesicon: don't use g_object_unref() on GBytes\n 699361 gio: fix small leak\n\n* Translation updates:\n Assamese\n Gujarati\n Hungarian\n Italian\n Kannada\n Norwegian bokmål\n Polish\n Spanish\n Tamil\n\n\nOverview of changes fron GLib 2.35.9 to 2.36.0\n==============================================\n\n* It is no longer necessary to call g_type_init().  If you are\n  loading GLib as a dynamic module, you should be careful to avoid\n  unloading it, then subsequently loading it again.  This never\n  really worked before, but it is now explicitly undefined behavior.\n  Note that if g_type_init() was the only explicit use of a GObject\n  API and you are using linker flags such as --no-add-needed, then\n  you may have to artificially use some GObject call to keep the\n  linker from optimizing away -lgobject. We recommend to use\n  g_type_ensure (G_TYPE_OBJECT) for this purpose.\n\n* This release contains an incompatible change to the g_get_home_dir()\n  function.  Previously, this function would effectively ignore the HOME\n  environment variable and always return the value from /etc/password.\n  As of this version, the HOME variable is used if it is set and the\n  value from /etc/passwd is only used as a fallback.\n\n* The 'flowinfo' and 'scope_id' fields of GInetSocketAddress\n  (introduced in GLib 2.32) have been fixed to be in host byte order\n  rather than network byte order. This is an incompatible change, but\n  the previous behavior was clearly broken, so it seems unlikely that\n  anyone was using it.\n\nThis release contains only small bugfixes and translations updates.\n\n - g_file_copy(): fix bug where attributes were not applied properly to\n   the destination file\n\n - fix some 'available since' annotations\n\n - fix gdbus-codegen to produce more pedantically-correct code\n\n* Bugs fixed:\n 696108 gdbus-codegen: avoid warnings in generated code\n 696014 g_file_copy(): Ensure G_FILE_COPY_OVERWRITE preserves permissions\n\n* Translations updated:\n Basque\n Czech\n Gujarati\n Hindi\n Hungarian\n Japanese\n Malayalam\n Marathi\n Odia\n Punjabi\n Russian\n Tadjik\n Tamil\n Telugu\n\nOverview of changes from GLib 2.35.8 to 2.35.9\n==============================================\n\nThis release drops the old codepage ABI from gutils.c. This is a\nsource-compatible change and only breaks ABI with respect to truly\nancient binaries (and those binaries are already broken for other\nreasons).  This change only affects Windows.\n\n* Bugs fixed:\n 682896 glib doesn't build on mingw32\n 693204 split up g_get_{hostname,username,realname,home_dir} etc.\n 694181 Handle GNetworkAddress better in g_network_monitor_base_...\n 694253 occasional /gdbus/unref-pending test failure\n 694350 Add type names to gsignal warnings\n 694757 Use separate GLIB_WARN_CFLAGS that can be overridden ext...\n 568405 Which is the correct replacement for g_strncasecmp, if...\n 630284 g_hash_table_get_keys docs\n 659428 docs: Small clean-up of howto subsection headers\n 675333 Cannot forget association in Open With dialog: program...\n 694669 consider unicode corrigendum #9\n 694843 g_base64_decode_step () produces invalid data\n 695147 Don't use PATH_MAX as it's not guaranteed to be defined\n 695191 Commit f641699 broke /appinfo/mime/api test case\n 695339 Swapped msgid plural forms for translation\n 695376 GDBusMethodInvocation leak and potential crash\n 695425 Untranslatable message in gsettings-tool\n 695887 Improvements to GObject API documentation\n 695925 GUINT32/64_SWAP_LE_BE macros do not enclose val argume...\n 696015 PATCH Add doc warning to g_base64_decode()\n\n* Translation updates:\n Assamese\n Belarusian\n Brazilian Portuguese\n Catalan\n Catalan (Valencian)\n Danish\n French\n Galician\n German\n Greek\n Gujarati\n Italian\n Korean\n Latvian\n Lithuanian\n Polish\n Portuguese\n Punjabi\n Serbian\n Simplified Chinese\n Slovak\n Slovenian\n Spanish\n Thai\n Traditional Chinese\n Uyghur\n Vietnamese\n\n\nOverview of changes from GLib 2.35.7 to 2.35.8\n==============================================\n\nThis release contains one major change that may cause problems: type\nmodules are now never unloaded.  This is implemented by (effectively)\nleaking the last reference on dynamic types.  Some testcases that check\nfor unloading of types have been observed to be broken by this change,\nbut we know of no actual cases of \"real code\" breaking.  Please report\nany problems.\n\nOther changes:\n * A couple of build fixes for Solaris\n * Fix signal emission for GDBusObjectManagerClient\n * annotations fixes\n * new API: g_dbus_address_escape_value()\n * GSocketClient: add proxy-resolver property\n * GSimpleProxyResolver: new simple GProxyResolver class\n * documentation fixes\n * gnetworkaddress: preserve IPv6 scope ID in IP literals\n\nBugs fixed:\n 691105 Allow GSocketClient to override GProxyResolver for per client proxy settings.\n 692827 configure test fails for arpa_nameser.h\n 692829 new Btrfs support causes build failure on Solaris\n 693285 GDBusObjectManagerClient: won't emit object-added|removed if name-owner arrives later\n 693502 Cross-compiling documentation: typo (np -> no)\n 693673 add g_dbus_address_escape_value()\n 693694 gio: Fix annotations on g_[async_]initable_new() and friends \n\nTranslations:\n Dutch\n Galician\n Polish\n Serbian\n\nOverview of changes from GLib 2.35.6 to 2.35.7\n==============================================\n\nThis is a quick follow-up release with a few bug fixes.\n\n* Fix the build on systems with strict linkers by adding -pthread back\n  to the LDFLAGS for a testcase.\n\n* Re-enable native atomic operations on some buggy versions of clang\n  that ship as part of the MacOS X SDK.\n\n* Make G_IO_FLAG_IS_WRITEABLE an enum again (the #define broke bindings)\n\n* a small docs fix\n\n* Bugs fixed:\n 657045\n 636683\n 682818\n 693105\n\n* Translations:\n Italian\n\nOverview of changes from GLib 2.35.4 to 2.35.6\n==============================================\n\n* GUnixFdSource is a new way to add file descriptors\n  to the mainloop\n\n* g_source_set_ready_time lets you mark a source to become\n  ready at a specified monotonic time\n\n* The internal visibility handling of GLib has been reworked\n\n* GFileMonitor will now automatically use fam instead of inotify\n  if $HOME is on NFS\n\n* The file monitor implementation can now be overridden with\n  the GIO_USE_FILE_MONITOR environment variable\n\n* Bugs fixed:\n 570572 2 make check errors on\n 592211 No monitoring over NFS mounts\n 625552 wrong behaviour of GVolume GVolumeMonitor related func...\n 657729 modernise GMainLoop\n 658020 GSource for a single GPollFD\n 678223 g_mutex_free\n 682560 leak fixes\n 682819 EINTR-harden all the things\n 684404 When using g_network_address_address_enumerator_next()...\n 686853 new GSource fd API\n 688169 G_DISABLE_DEPRECATED doesn't cover deprecated/gthread....\n 688681 build: Make .symbols file canonical on all platforms\n 690118 Crash when closing last tab of a window using Ctrl-w\n 691624 glib/gtester.c: missing include\n 691812 gioinputstream - give task as callback_data not task_data\n 691866 fails out of source build directory - gnetwork.h not f...\n 692029 Add new API checking utility\n 692034 Install an invalidation notifier for GClosure in g_sou...\n 692058 Broken makefile for gio tests\n 692079 build failure in gmarkup.c when using gcc 4.8 and buil...\n 692201 inotify: fix a memleak\n 692202 gfile: don't report completion twice on g_file_load_co...\n 692229 Incorrect string formatters in a translation string\n 692332 GNetworkMonitorNetlink: make the netlink socket cloexec\n 692360 possibly non-threadsafe code in g_content_type_guess()?\n 692404 tester: Use FD_CLOEXEC when creating pipes\n 692408 nautilus SIGSEGV in g_file_info_get_size()\n 692544 [PATCH] gfile: Ensure we create internal pipe with FD_C...\n 692583 atomic get doesn't accept a const argument on architect...\n 692618 Use g_timeout_add_seconds\n 692815 Using g_hash_table_insert() when using a hash table as ...\n 692865 Invalid docbook generated by gdbus-codegen\n 692928 Document G_MENU_{ATTRIBUTE,LINK}_*\n\n* Translation updates:\n Hebrew\n Kannada\n Lithuanian\n Norwegian bokmål\n Polish\n Serbian\n Slovenian\n Spanish\n Uyghur\n\n\nOverview of changes from GLib 2.35.3 to 2.35.4\n==============================================\n\n* New features:\n - New API: g_get_num_processors\n - New API: g_application_command_line_get_stdin\n - New GFileMonitor flag: G_FILE_MONITOR_WATCH_HARD_LINKS\n - Parse more timezone offset formats\n - Better timezone support on Windows\n - Make GParamSpec constructors introspectable\n\n* Removed or deprecated features:\n - Disallow adding interfaces after class_init\n\n* Bug fixes:\n 532815 gio + inotify support for hardlinks\n 614930 add g_get_num_processors (), return the max concurrent...\n 626497 Btrfs clone/reflink ioctl support in g_local_file_copy\n 633117 glib fails stests if /etc/localtime is not properly set\n 661767 merge/improve various bits of run-in-thread functionality\n 668210 Add g_application_command_line_get_stdin()\n 675856 Use GDbus via gobject-introspection instead dbus-python\n 684103 make glib work with python3\n 684723 run-assert-msg-test.sh fails\n 686058 OpenBSD: disable ipv6_v4mapped test\n 686128 GTimeZone should be able to parse POSIX format for...\n 687223 cleverer GThreadPool management\n 687659 drop support for adding interfaces after class_init\n 687920 GCredentials should have an accessor for the process ID\n 688681 build: Make .symbols file canonical on all platforms\n 688829 Variable overflow in utils.c test on 32-bit machine\n 689324 Variable scoping in gunixmounts.c\n 689810 Include guard optimization\n 690043 Broken link for gsettings tutorial: gnome-utils in...\n 690084 gmarkup: Make GMarkupParseContext a boxed type\n 690388 Check if CMSG_FIRSTHDR() returns NULL when there is...\n 690538 gschema DTD is invalid\n 690543 Add test coverage for testing in-tree DBus services...\n 690670 local_command_line not introspectable/annotated\n 690902 G_END_DECLS needs to be at the end of gutils.h\n 690970 Unhelpful deprecation message for g_value_array_get_nth\n 691001 building docs is broken on master branch\n 691011 Automake-1.13 errors on obsolete AM_PROG_CC_STDC\n 691077 gio-querymodules crashes with SIGSEGV\n 691110 g_cond_wait() docs incomplete\n 691489 Crash in Oscars 2013 page\n 691558 Only check for .hidden files if standard::is-hidden...\n 691608 Support compilation with clang 3.2\n\n* Translation updates:\n Assamese\n Bulgarian\n Estonian\n Galician\n Greek\n Hebrew\n Norwegian bokmål\n Polish\n Slovak\n Slovenian\n Spanish\n Tamil\n\n\nOverview of changes from GLib 2.35.2 to 2.35.3\n==============================================\n\n* This release contains an incompatible change to the g_get_home_dir()\n function. Previously, this function would effectively ignore the HOME\n environment variable and always return the value from /etc/password.\n As of this version, the HOME variable is used if it is set and the\n value from /etc/passwd is only used as a fallback.\n\n* We now install a public \"gnetworking.h\" header that can be used to\n include the relevant OS-dependent networking headers. This does not\n really abstract away unix-vs-windows however; error codes, in\n particular, are incompatible.\n\n* Bugs fixed in this release:\n 142568 Allow $HOME to override passwd entry if the user really wants\n 587806 The file selector should honor .hidden files\n 602715 [GChecksum] Please add support for SHA512\n 623187 provide some support for arbitrary setsockopt()s?\n 629301 .goutputstream files left behind when cancelling I/O\n 652650 Optimize GDBusMessage serialization\n 664627 /gapplication/basic test intermittently fails: cmdline re-or...\n 675516 Win32: Don't start a DBus server when built as static library\n 679683 replace g_test_trap_fork()\n 684145 Current Git sources fails to cross-compile for Windows in Li...\n 686895 file-info: catch thumbnail files in large directory as well\n 687092 IPv6 <-> IPv4 mismatch when subscribing to multicast (send)\n 688180 GObject: Minor error in description of floating reference\n 688319 gthread: add missing AVAILABLE_IN_2_32 annotations\n 688377 configure: add missing square bracket in AS_IF for memmove\n 688419 gtask: source_object arguments and return values not annota...\n 688497 AppInfo: Add sufficient api to port gnome-session from Egg...\n 688681 build: Make .symbols file canonical on all platforms\n 688704 Add boxed GType for GThread\n 688886 Improve the i18n documentation\n 688931 GMemoryOutputStream: Add new _resizable() constructor usab...\n 689037 need helper for creating a GFile from a remote commandline...\n 689377 Fix a compiler warning in GDBus\n 689538 Source object tag set too late in gsocketlistener\n 689800 Treat lost+found directory as a hidden file\n 689847 Add fast repeated typename -> GType resolver\n 689982 Make GChecksum more fully introspectable\n 690069 g_unix_open_pipe: Add missing F_SETFD\n 690083 gfileenumerator: Add a g_file_enumerator_get_child method\n 690163 Add a pre-configured gio/gnetworking.h for Visual C++ builds\n 690346 Remove an unneeded escaping in NAMESER_COMPAT_INCLUDE\n 690348 Fix g_type_add_class_private() name in g_warning\n\n* Translation updates:\n Assamese\n Galician\n Hebrew\n Hindi\n Kannada\n Odia\n Polish\n Spanish\n\n\nOverview of changes from GLib 2.35.1 to 2.35.2\n==============================================\n\nNote that the incompatible change to the ->constructed() vfunc that was\nmade in the last unstable release (2.35.1) has been reverted due to\ncausing regressions in applications.\n\nA new incompatible change has been introduced in this version: it is no\nlonger permitted to add interfaces to a class after the first\ninstantiation (or more strictly: after g_type_class_ref()).  Bug #687659\nis tracking this.\n\nTwo private symbols (g_menu_{attribute,link}_hash_iter_get_type) which\nwere accidentally exported have also been properly hidden.  This may\ncause some tools to issue warnings about ABI mismatch.\n\nThe remaining changes should be relatively harmless: \n\n * GIO now has kqueue support for GFileMonitor (BSDs, Mac OS)\n\n * New g_variant_new_from_bytes() API\n\n * UNIX signal sources now allow watching SIGUSR1 and SIGUSR2\n\n * Many pedantic cleanups to adhere to a higher level of -W use\n\n * GTask changes to avoid a deadlock\n\n * many cleanups/fixes for Windows\n\n * Boxing for GPollFD, GIOChannel, GBytes, GByteArray\n\n * Fix URL-encoding of trashed files\n\n * Many other docs and annotations fixes\n\nTranslations:\n\n Galician\n Gujarati\n Lithuanian\n Serbian\n Slovak\n Slovenian\n\nBugs closed:\n\n 649302 Add support for GNU/FreeBSD\n 668842 [GSocket] Add caching for the sender address in g_socket_receive_from()\n 672924 Add annotations for g_filename_from_uri()\n 673229 glib: Use Returns:, not @returns\n 677062 (partial) GVariant: Make g_variant_new_from_bytes() public, add more GBytes API\n 686185 g_date_time_format Transcoding Fails on OSX      \n 686191 g_mutex_get_impl() should use g_atomic_pointer_get()\n 686797 Box GPollFD to make it introspectable\n 686810 [regression] Infinite wait in g_task_run_in_thread_sync()\n 686822 possible dlopen()/dlclose() issue with automatic g_type_init()\n 686839 mkinstalldirs: Move to glib-mkinstalldirs\n 686895 file-info: catch thumbnail files in large directory as well\n 686898 g_unix_signal_source_new: Allow SIGUSR1 and SIGUSR2\n 686920 gdbus: Allow GDBusObjectManagerClient to work on peer connections\n 686921 Remove some of the repetition from gio/tests/Makefile.am\n 687075 g_spawn_sync diagnostic incorrectly complains about SIGCHLD\n 687089 g_dbus_connection_export_menu_model(): fix a crash\n 687098 Repeated g_timeout_add* use can lead to guint overflow\n 687385 Add some stricter CFLAGS, fix up the code\n 687441 ABI break in master: g_menu_attribute_hash_iter_get_type, g_menu_link_hash_iter_get_type removed\n 687516 typo in string: KB should be kB\n 687540 In Trash folder, Nautilus misinterprets \"\\n\" in filename as a line break\n 687541 GSignalQuery param_types field needs array annotation\n 687600 gfileutils.c performs invalid cast of (varargs) open to non-vararg type\n 687698 plural forms needed\n 687700 ending spaces\n 687742 Add support for internal linkage to glib-compile-resources\n 687801 tests/buffered-input-stream: Fix size of parameter passed\n 688109 win32 warning/error fixes\n 688255 'make check' regressed in 138f4c1 because GMarkup error messages changed\n 688338 [PATCH] gobject/gtype.c: Fix spelling of »exceed«\n 688370 GDBusError documentation improvement for client-side\n 688378 g_socket_join_multicast_group not working\n 688518 gio-kqueue: use O_EVTONLY on MacOS\n\n\n\nOverview of changes from GLib 2.34.0 to 2.35.1\n==============================================\n\nThese two changes in particular may be slightly incompatible.  Please\ngive feedback if they cause trouble:\n\n  * Signal handlers connected with g_signal_connect_object() are now\n    automatically disconnected on target object destruction\n\n  * The ->constructed vfunc is now called after all properties are set\n\nThe remaining changes should not cause problems.\n\n  * g_type_init() is no longer necessary and has been deprecated\n\n  * GTask (the new GAsyncResult implementation) has landed \n\n  * GLib version macros updated\n\n  * Update to Unicode 6.2\n\n  * Thread safety fixes for GFileMonitor in non-default main contexts\n\n  * GTimeZone support for old-format zoneinfo database (as on Mac OS)\n\n  * g_settings_bind() now works with non-canonical property names\n\n  * Fix crashes related to NULL connection passed to\n    GBusNameVanishedCallback and document this situation\n\n* Bugs fixed:\n 118536 Make g_signal_connect_object'ed handlers disconnect when the data object is destroyed\n 661767 merge/improve various bits of run-in-thread functionality\n 682950 GFileMonitor crashing on high event count when running in different thread\n 683642 Missing g_content_type_get_symbolic_icon\n 684882 Gsettings should spaw a warning when binding against a low_underscored_property\n 684909 codegen: Explicitly close output\n 684912 Update to Unicode 6.2\n 685037 g_strcmp0: Returns shall include values less and greater than zero\n 685069 Leak in glib-compile-resources\n 685208 missing g_return_if_fail\n 685608 [Patch] Port gio tests from pygobject to pygi\n 685697 Documentation typo in g_dbus_interface_skeleton_has_connection()\n 685733 Call ->constructed() after all properties are set\n 685787 gtestdbus: correct documentation typos\n 685995 Crash in g_menu_exporter_name_vanished\n 686091 Invalid reads in g_bytes_unref_to_data\n 686119 dtrace, gobject_probes.d, the last three probes - semicolon missing\n 686161 Deprecate g_type_init()\n 686231 GBusNameVanishedCallback: document NULL connection\n 686458 slightly increase poll duration in test_timed_wait \n\n* Translations updated\n  Catalan (Valencian)\n  Czech\n  Danish\n  Italian\n  Lithuanian\n  Norwegian bokmål\n  Slovenian\n\nOverview of changes from GLib 2.33.14 to 2.34.0\n===============================================\n\n* GIO now looks for thumbnails in XDG_CACHE_HOME, following a\n  recent alignment of the thumbnail spec with the basedir spec.\n\n* The default values for GThreadPools max_unused_threads and\n  max_idle_time settings have been changed to 2 and 15*1000,\n  respectively.\n\n* Bug fixes:\n 654239 g_type_init()'s docs have no statement about how to...\n 674620 Update GSettings migration guide for intltool updates\n 676034 Fix doc annotation for g_ptr_array_ref()\n 684278 Fix GIO build on Windows\n\n* Translation updates:\n Brazilian Portuguese\n British English\n Bulgarian\n Catalan\n Galician\n German\n Hebrew\n Hindi\n Hungarian\n Kannada\n Latvian\n Marathi\n Spanish\n Telugu\n\n\nOverview of changes from GLib 2.33.12 to 2.33.14\n================================================\n\n * CVE-2012-3524: don't run dbus-launch from setuid binaries\n\n * g_content_type_get_generic_icon_name():\n     new API for getting the icon name for a mime type\n\n * Introspection fixes:\n  - GDBusConnection nullability fixes\n  - give a box type to GTimeZone\n\n * Drop GVFS_INOTIFY_DIAG\n\n * Add a new \"Writing GLib Applications\" section to the reference\n   documentation with general info on security, threads, etc.\n\n * gwin32mount.c: Fix syntax error\n\n * gresource tests: srcdir != builddir fixes\n\n * tests/gvariant: Fix test on big endian architectures\n\n * Fix regression in g_shell_parse_argv()\n\nBugs fixed:\n 562907 g_shell_parse_argv() mishandles # (hash)\n 683167 g_time_zone_new not introspectable\n 683384 /gvariant/checksum-basic failure on big endian machines\n 683641 Typo in gwin32mount.c\n 683744 have a way to get the generic icon name for a mime type\n\nTranslation updates:\n Assamese\n Belarusian\n British English\n Czech\n Danish\n French\n Galician\n German\n Greek\n Hebrew\n Indonesian\n Indonesian\n Korean\n Lithuanian\n Marathi\n Marathi\n Polish\n Portuguese\n Punjabi\n Russian\n Serbian\n Slovenian\n Traditional Chinese\n\nOverview of changes from GLib 2.33.10 to 2.33.12\n================================================\n\n* Add a G_DEFINE_QUARK macro\n\n* Add symbolic icon support to drive, volume, and mount, file\n  and content types\n\n* Add API to allow thread-safe access to the same qdata item\n\n* Bugs fixed:\n 562907 g_shell_parse_argv() mishandles # (hash)\n 627240 add G_DEFINE_QUARK\n 672329 memory leaks in gutils.c and glib tests\n 673012 Stable byte-level specification for normal form\n 674805 gdbusproxy async test is broken\n 679835 gvariant format string parsing (and assertions)...\n 682075 gdbus: Fix double free and use after free of ob...\n 682101 Provide a way to get a symbolic icon for a device\n 682222 test_method_calls_on_proxy: assertion failed (e...\n 682284 mount-op: use gint64 instead of guint64 for tim...\n 682386 \"make check\" fails due to sys/resource.h not be...\n 682560 leak fixes\n 682586 gsettings-tool: make list-recursively really re...\n 682819 EINTR-harden all the things\n 682833 Handle EINTR for open()\n 682849 drop the global lock for g_object_weak_ref\n 682965 gdbus-tool: Check return value of strrchr()\n 683088 gdbus-codegen: fix error when wrong interface n...\n        Fix the build with gtk-doc-stub\n        Don't crash if set_app_info is called before ad...\n\n* Translation updates\n Assamese\n Galician\n Greek\n Indonesian\n Japanese\n Latvian\n Lithuanian\n Norwegian bokmål\n Polish\n Portuguese\n Punjabi\n Russian\n Spanish\n Traditional Chinese\n Vietnamese\n\n\nOverview of changes from GLib 2.33.8 to 2.33.10\n===============================================\n\n* New GTest API for testcases where log output is expected:\n  g_test_expect_message()\n\n* GMenuItem now has 'get' accessors and a construct-from-GMenuModel API\n\n* GVariant now has a function to check a format-string for type\n  compatibility\n\n* win32: We now use overlapped IO to support multiple asynchronous\n  operations (ie: reading and writing) at the same time.\n\n* GMappedFile: Add g_mapped_file_get_bytes()\n\n* The problems with g_file_make_directory_with_parents() should be\n  resolved.\n\n* The long-standing issues with placeholder generation of manpages are\n  now resolved.\n\n* gtlscertificate: Add GBytes based certificate and private-key props\n\n* build: Switch back to using AS_IF for conditionals\n\n* test coverage improvements, documentation improvements, leak fixes\n\n* Bugs fixed\n 326931 Better docs for G_GNUC_*\n 550433 g_test_init doesn't recognize --help\n 600751 GCompletion should better document if and how items memory is managed\n 628193 Miscellaneous string fixes\n 637460 man glib-genmarshal is hard to use\n 674483 broken configure results when cross-compiling with gcc >= 4.5\n 677065 GMappedFile: Add g_mapped_file_get_bytes()\n 679288 win32: use overlapped events for streams\n 679556 it's hard to use gtest when g_warning() is expected\n 680823 g_file_make_directory_with_parents: Fix error propagation\n 681319 gtlscertificate: Add certificate-bytes and private-key-bytes props\n 681336 man pages not built if --enable-gtk-doc not specified\n 681413 build: Switch back to using AS_IF for conditionals\n 681501 gmem: array only partially filled with memcpy\n 681854 Documentation fix for Howto compile a program with glib\n 682025 Documentation correction\n 682067 Fix problems with CLEANFILES and automake-1.11.1 \n\n* Translations updated:\n Lithuanian\n Spanish\n Galician\n Telugu\n Serbian\n Assamese\n Marathi\n Indonesian\n Traditional Chinese\n\nOverview of changes from GLib 2.33.6 to 2.33.8\n==============================================\n\n* GIO now has a g_file_delete_async function\n\n* The defaults for GThreadPools max_unused_threads\n  and max_idle_time values have been changed to\n  2 and 15*1000, respectively.\n\n* Bugs fixed:\n 661767 merge/improve various bits of run-in-thread functionality\n 680074 undefined symbol \"get_C_locale\"\n 680121 g_cancellable_source_new: don't use a file descriptor\n 680148 gthread: check for definition of PR_SET_NAME\n 680310 Sorting of access points by strengh not working\n 680704 g_utf8_strup() crash\n 68076a0 GFile: Add g_file_delete_async()\n 680787 Add .dir-locals.el to tell Emacs users not to use tabs...\n 680823 g_file_make_directory_with_parents: Fix error propagation\n 680994 STATIC_ASSERT in GDBusError docs don't have much utility\n 681116 gtlscertificate: Add g_tls_certificate_equal() function\n 681118 gtlsdatabase: Don't complain if no callbacks for async...\n 669331 try to get gio tests working a little better on win32\n 674314 Make gtk-doc not a hard dependency of GLib\n 674800 gclosure: generic marshaller leaks return value\n 675524 gsocket: FIONREAD undeclared (needs sys/filio.h)\n 679509 use after free in g_dbus_action_group_describe_all_done()\n 679996 gobject docs minor cleanup\n 680459 Extra newline char in local implementation of g_applic...\n 680505 object_path memory leak in gdbusobjectproxy.c\n 680831 Deprecate and remove g_slice_[sg]et_config.*\n 680912 gchecksum: Add g_compute_checksum_for_bytes()\n 681151 checksum: Use functions instead of macros when buildin...\n 681158 gtlscertificate: Don't confuse certificate and public ...\n\n* Translation updates:\n Galician\n German\n Gujarati\n Hebrew\n Norwegian bokmål\n Serbian\n Slovenian\n\n\nOverview of changes from GLib 2.33.4 to 2.33.6\n==============================================\n\n* GAsyncInitable: partially revert the init_finish changes,\n  some applications were found to rely on behaviour that\n  was broken by these changes\n\n* Bugs fixed:\n 679617 win32: fix g_get_environ()\n 679968 Add some annotations to GBytes, GVariantType...\n 680111 GIOScheduler assumes GCancellable \"cancelled...\n\n* Translation updates:\n Spanish\n\nOverview of changes from GLib 2.33.3 to 2.33.4\n==============================================\n\n* GMainContext: the source list has been reorganzied to\n  avoid O(n) behaviour\n\n* GRegex: Update included PCRE to 8.31 and expose new\n  functionality in 8.x versions of PCRE\n\n* GMountOperation gained a ::show-unmount-progress signal\n  which provides information about slow unmount operations\n\n* Bugs fixed:\n 616892 gio: Add a boxed type for GFileAttributeMatcher\n 619329 g_source_attach() O(n) in number of sources\n 639771 g_dir_read_name() can also return NULL on error\n 661767 merge/improve various bits of run-in-thread fun...\n 667375 GAsyncInitable subclassing (and async subclassi...\n 671545 Constify collect and lcopy strings in GTypeValu...\n 674452 SEGFAULT in gio contenttype test\n 674898 Deal with GLIB_VERSION_MIN_REQUIRED/MAX_ALLOWED...\n 675504 Fix up GObject interface documentation\n 677064 GString: Tweak documentation, add g_string_free...\n 677578 error in PCRE error code conversion\n 677579 update GRegexError for newer PCRE error codes\n 678066 gdbus codegen does not work with python3\n 678273 unicode othercasing is wrong in gregex\n 678576 GIOScheduler performance enhancements\n 678758 GTlsInteraction unlocks an unlocked mutex\n 678808 GTestDBus issues\n 678881 Test failures in /socket/timed_wait in some cas...\n 678941 /contenttype/guess test case failure\n 678944 gio returns the wrong default applications for ...\n 678949 wrong definition of ulong_bool for 64 bit big e...\n 678959 /mainloop/timeouts race condition: assertion fa...\n 679193 update included pcre to 8.31\n 679258 The 'Since' tag for G_SOURCE_CONTINUE and G_SOU...\n 679473 Don't generate invalid property names\n 679691 Add g_spawn_check_exit_status()\n 679671 GDBusNodeInfo: the XML string must contain exac...\n 676111 mount-operation: add show-unmount-progress signal\n 679691 win32: fix build g_spawn_check_exit_status() wi...\n 679813 Documentation bug on http://developer.gnome.org...\n\n* Translation updates:\n Assamese\n Belarusian\n Bulgarian\n Galician\n Greek\n Norwegian bokmål\n Polish\n Spanish\n Traditional Chinese\n Vietnamese\n\n\nOverview of changes from GLib 2.33.2 to 2.33.3\n==============================================\n\nThis release contains mostly bugfixes, cleanups and performance\nimprovements (including many fixes contributed by Colin on the advice of\nCoverity).  There are a few notable externally-visible changes:\n\n* Thumbnails are now in XDG_CACHE_HOME\n\n* new GDBus API: per-thread g_dbus_connection_get_last_serial()\n\n* GUnixOutputStream now has a can_poll() implementation\n\n* New deep copy APIs for G(S)List: g_(s)list_copy_deep\n\n* Bugs fixed:\n 518309 Incorrect data*dir path in glib-gettextize output\n 566994 Safer passing of -framework flag\n 672889 GLib.utf8_validate does segfault\n 673253 Not strict enough autconf test for libelf\n 675024 adds g_list_copy_deep() and g_slist_copy_deep\n 675168 prepare for thumbnails to move to XDG_CACHE_HOME\n 675966 gresolver: More robust parsing of DNS responses\n 676594 [Patch] fix g_reload_user_special_dirs_cache\n 676825 Implement g_dbus_connection_get_last_serial ()\n 677235 Clarify the comment at the top of gmarshal.list\n 677527 OS X: gthread/spawn-async selftest failure\n 677718 GDBusProxy: treat org.freedesktop.systemd1.Masked error as non-fatal\n 677770 GUnixOutputStream does not implement can_poll\n 677782 Install bash completion files in /usr/share\n 677817 g_key_file_to_data adds extra blank lines in some cases\n 677952 Missing annotation for GDBusConnection signal \"closed\"\n 678052 g_wakeup_acknowledge is called too often.\n 678273 unicode othercasing is wrong in gregex\n 678333 gdbus-codegen code causes warnings under -Wfloat-equal\n\n* Translations updated:\n Arabic\n Assamese\n Galecian\n Greek\n Spanish\n Telugu\n\nOverview of changes from GLib 2.33.1 to 2.33.2\n==============================================\n\n* GLIB_VERSION_MIN_REQUIRED now defaults to the current stable version\n\n* GIO input and output stream classes have grown GBytes-based methods\n\n* GApplication now has hooks to register D-Bus objects before the bus\n  name is taken\n\n* Bugs fixed:\n 605976 add g_type_ensure(), to ensure that a type has...\n 660851 Breakage of code due to changes in the GThread...\n 666386 Empathy doesn't open Redirect URI with particu...\n 671139 need (transfer async) for io stream buffers\n 672329 memory leaks in gutils.c and glib tests\n 672548 g_utf8_validate: @str shouldn't end up annotat...\n 674111 Provide an accessor for MimeType desktop entry...\n 674483 broken configure results when cross-compiling ...\n 674634 Add g_clear_pointer()\n 674777 What's the (transfer) of g_variant_lookup()?\n 675309 gkeyfile: Fix annotations for g_key_file_load_...\n 675446 gfile: Plug memory leak in g_file_make_directo...\n 675509 add extra dbus hooks\n 675832 Incomplete gsettings bash auto-completion\n 676208 The tmpl parameter to g_file_new_tmp can be NULL\n 676265 GNetworkMonitor leaks a lot of memory\n 676277 Document that g_app_info_create_from_commandli...\n 676397 g_environ_* should work with NULL envp\n 676398 g_spawn_* should take PATH from the passed env...\n 676478 Broken gzip decoding\n 676594 [Patch] fix g_reload_user_special_dirs_cache\n 676816 Add more GLIB_AVAILABLE_IN_*\n 676937 Document notify signal deduplication with free...\n\n* Translation updates:\n Czech\n French\n German\n Greek\n Japanese\n Russian\n Slovenian\n Spanish\n\n\nOverview of changes from GLib 2.32.1 to 2.33.1\n==============================================\n\n* GApplication\n - can now have a NULL application ID\n - add accessors for determining dbus connection and object path\n\n* g_clear_object: fix warnings when using it on C++ (due to lack of\n  ability to implicitly cast void*)\n* add g_clear_pointer as a generic form of g_clear_object\n\n* GDBus:\n - add our own implementation of the message bus for use on Windows only\n - fix up a few bugs that use of this bus uncovered in GDBus\n - escape nonce files in dbus addressess (think 'c:\\')\n - support initial underscores in dbus codegen namespace (for private)\n - add GTestDBus for bringing up a session bus for testing purposes\n - gdbus-codegen: Avoid warnings in generated code\n - GDBusAuthObserver: Add a way to control what authentication mechanisms to use\n - \n\n* Fix misdetection of GNUstep as Cocoa (for the MacOS GSettings backend)\n\n* make sure configure fails if AC_CHECK_ALIGNOF cannot detect the alignment\n\n* GAppInfo\n - overwrite the DISPLAY only if it is set in the launch context\n - add accessor for StartupWMClass\n\n* glib/tests/date: force US locale running the GDateTime tests\n\n* Resources:\n - fix broken use of GVDB on big endian machines\n - set a 'display name' so that pretty file names appear in Gtk CSS\n   warning messages\n\n* GMainContext:\n - block child sources when blocking the parent\n - introduce more testcases for child sources\n\n* GResolver: add support for MX, TXT, NS and SOA records\n\n* GSocketControlMessage: Don't warn about unknown messages\n\n* GIO:\n - implement GSeekable for the data and buffered stream classes\n - implement GPollable for many more classes as well\n - fix GConverterInputStream infinite loop when fill_buffer returns an error\n - fileinfo: document the correct type for trash::orig-path\n\n* test coverage improvements and general fixes\n\n* new 2.34 stuff: version macros, docs index section, etc.\n\n* Build:\n - add --disable-modular-tests build option\n - don't require host binaries if tests are not enabled for cross-builds\n\n* Translations updated\n Brazilian Portuguese\n Bulgarian\n Czech\n French\n Galician\n German\n Hebrew\n Hindi\n Italian\n Norwegian bokmål\n Polish\n Russian\n Russian\n Serbian\n Simplified Chinese\n Slovenian\n Spanish\n Telugu\n\nOverview of changes from GLib 2.32.0 to 2.32.1\n==============================================\n\n* Bugs fixed:\n 670254 glib-2.30.2: Fails /GDateTime/new_from_unix test\n 672541 glib-compile-resources prepends --sourcedir to absolute paths\n 673139 URL to mailing lists in README incorrect\n 673174 g_input_stream_read[_finish]: document returning 0 on EOF\n 673191 glib/gchecksum.c warning: dereferencing type-punned pointer...\n 673216 [W32] gtestutils does not use path separators consistently\n 673439 Properly deprecate g_value_{set,get}_char\n 673612 Fails to decode dictionaries wrapped in two layers of array\n 673803 gclosure: Support return values of GVariants\n 669285 glib/tests/markup-parse fails under non-english locale\n 673911 gio-2.0.pc lists full path to executables, breaking cross com..\n 673762 gnextstepsettingsbackend.c:343: error: parse error before 'in'\n\n* Updated translations:\n Belarusian\n British English\n Bulgarian\n Catalan\n Czech\n French\n German\n Hebrew\n Hindi\n Hungarian\n Italian\n Japanese\n Kannada\n Latvian\n Lithuanian\n Marathi\n Norwegian bokmål\n Odia\n Polish\n Serbian\n Slovenian\n Spanish\n Swedish\n Telugu\n\n\nOverview of changes from GLib 2.31.22 to 2.32.0\n===============================================\n\n* It is no longer necessary to use g_thread_init() or to link against\n  libgthread.  libglib is now always thread-enabled. Custom thread\n  system implementations are no longer supported (including errorcheck\n  mutexes).\n\n* The thread and synchronisation APIs have been updated.\n  GMutex and GCond can be statically allocated without explicit\n  initialisation, as can new types GRWLock and GRecMutex.  The\n  GStatic_______ variants of these types have been deprecated.  GPrivate\n  can also be statically allocated and has a nicer API (deprecating\n  GStaticPrivate).  Finally, g_thread_create() has been replaced with a\n  substantially simplified g_thread_new().\n\n* The g_once_init_enter()/_leave() functions have been replaced with\n  macros that allow for a pointer to any gsize-sized object, not just a\n  gsize*.  The assertions to ensure that a pointer to a correctly-sized\n  object is being used will not work with generic pointers (ie: (void*)\n  and (gpointer) casts) which would have worked with the old version.\n\n* It is now mandatory to include glib.h instead of individual headers.\n\n* The -uninstalled variants of the pkg-config files have been dropped.\n\n* For a long time, gobject-2.0.pc mistakenly declared a public\n  dependency on gthread-2.0.pc (when the dependency should have been\n  private).  This means that programs got away with calling\n  g_thread_init() without explicitly listing gthread-2.0.pc among their\n  dependencies.\n\n  gthread has now been removed as a gobject dependency, which will cause\n  such programs to break.\n\n  The fix for this problem is either to declare an explicit dependency\n  on gthread-2.0.pc (if you care about compatibility with older GLib\n  versions) or to stop calling g_thread_init().\n\n* g_debug() output is no longer enabled by default.  It can be enabled\n  on a per-domain basis with the G_MESSAGES_DEBUG environment variable\n  like\n    G_MESSAGES_DEBUG=domain1,domain2\n  or\n    G_MESSAGES_DEBUG=all\n\n* Bugs fixed:\n 671988 Quickly registering / unregistering objects on bus...\n 672095 glib needs stable sort function\n 672406 glib/tests/include.c fails to build on FreeBSD\n\n* Updated translations:\n Telugu\n\n\nOverview of changes from GLib 2.31.20 to 2.31.22\n================================================\n\n* Bugs fixed:\n 531901 Use __builtin_bswap* for GUINT*_SWAP_LE_BE if building...\n 653167 Out of tree build is broken on windows\n 668973 Test /gvariant/parser fails on Solaris 10\n 669797 gvfs now lists its fuse mounts\n 670846 deadlock: GStreamer-WARNING **: wrong STREAM_LOCK count 0\n 671664 gio-querymodules: unlink instead of writing empty cache\n 671676 Glib can't be cross-compiled any more after merge of...\n 671918 gnome-shell is inaccessible unless started while an AT...\n 671942 GSocketMsgFlags: annotate as a flags\n 671997 Unix signal handling assumes that volatile 1-byte writes...\n 672013 GSimpleAsyncResult: support reliable cancellation\n 672026 default log output should include pid and/or prgname\n 672095 glib needs stable sort function\n 672201 G_SPAWN_SEARCH_PATH should continue on ENODEV and ETIMEDOUT\n 672239 request NO_REPLY from g_dbus_connection_call() with no as...\n 672249 gdbusproxy leaks asyncresult in an error case instead of...\n\n* Translation updates:\n Assamese\n British English\n Catalan\n Catalan (Valencian)\n Danish\n Esperanto\n Finnish\n French\n German\n Hungarian\n Korean\n Lithuanian\n Norwegian bokmål\n Polish\n Portuguese\n Russian\n Traditional Chinese\n\n\nOverview of changes from GLib 2.31.18 to 2.31.20\n================================================\n\n* Update to Unicode 6.1\n\n* Update PCRE to 8.30\n\n* Deprecations are now versioned, and new API is\n  marked with the version it was introduced.\n  Use these with GLIB_VERSION_{MIN,MAX}_REQUIRED\n\n* The performance of signal emissions has been\n  improved for simple cases\n\n* Bugs fixed:\n 529806 Cannot build in 64-bit Mac OS X due to libiconv\n 580873 Documentation of register type functions incomplete\n 592666 Document how to unset an attribute\n 597785 g_type_class_add_private code snippet is a bad example\n 621368 glib-2.24.1: FAIL: run-assert-msg-test.sh when updating...\n 622149 --disable-regex breaks glib2 build\n 639873 GBinding: Crash when binding two properties on the same...\n 640202 For GLIB v. 2.23.6 and above: impossibility to build mu...\n 668295 Need a way to classify GVolume instances\n 669670 gasyncqueue: don't use deprecated g_cond_timed_wait()\n 670542 Add version information for deprecations\n 670557 gvaluetransform: Fix an infinite loop with GFlagsValue...\n 670721 global variable for signal ID should be hidden\n 670751 IceWM build fails due to the G_DEPRECATED_FOR macro\n 670909 g_dbus_connection_call leaks when it receives an error...\n 670922 Include path to gdbus-codegen in the pkgconfig file\n 670969 GSequence lookup may fail if there was no sort prior to...\n 671025 Constants and identifiers starting with a number are no...\n 671270 make distclean failures\n 671281 glib-compile-resources.xml is missing from the dist tar...\n\n* Translation updates:\n Basque\n Belarusian\n Brazilian Portuguese\n Bulgarian\n Galician\n Hebrew\n Lithuanian\n Persian\n Punjabi\n Serbian\n Simplified Chinese\n Slovenian\n Telugu\n Traditional Chinese\n Uyghur\n Vietnamese\n\n\nOverview of changes from GLib 2.31.16 to 2.31.18\n================================================\n\n* GDBusProxy has now a flag, G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES,\n  which can be set to make GDBus automatically reload\n  changed properties even if the propertychanged signal\n  does not contain the new values.\n\n* GApplication puts non-unique applications on the bus\n\n* GApplication now has g_application_quit()\n\n* g_async_queue_timed_pop has been deprecated in favor of\n  the new g_async_queue_timeout_pop, which uses relative\n  delays in microseconds instead of a GTimeVal.\n\n* a huge number of API documentation fixes\n\n* Bugs fixed:\n 647986 put non-unique apps on D-Bus\n 658484 vpn connection vs NetworkSecretDialog\n 664237 GDateTime falls back to UTC if TZ is set\n 669329 gthread-win32: update for g_get_monotonic_time() changes\n 669330 glocalfile: fix error code when opening a directory on win32\n 669372 glib/tests memory leaks.\n 669412 mem leak in g_environ_unsetenv\n 669538 Fix compilation of glib-compile-resources.c on Windows\n 669544 gdbus-codegen example introspection XML is not complete\n 669595 glib-mkenums: fix handling of forward enum declarations\n 669670 gasyncqueue: don't use deprecated g_cond_timed_wait()\n 669671 gobject: use #pragmas to avoid deprecated function warnings\n 669689 Retrieve cwd and environ in local GApplicationCommandLine\n 669810 socket/win32: flush pending read before signaling HUP\n 669865 g_regex_fetch()\n 670085 memory leak in g_output_stream_write_async\n 670138 gbytes.h is missing the G_BEGIN/END_DECL guards\n 670485 Simplify session API (shared bug with gtk+)\n\n* Updated translations:\n Belarusian\n Danish\n Galician\n Serbian\n Telugu\n Hebrew\n\n\nOverview of changes from GLib 2.31.14 to 2.31.16\n================================================\n\n* GResource:\n - The resource compiler can now convert pngs into\n   pixel data that can be used without parsing at runtime\n   (requires gdk-pixbuf-pixdata to be present)\n\n* Bugs fixed:\n 669123 resource compiler: failing to-pixdata should...\n 669173 resource: fix xml preprocess entity handling\n 669224 Cross-compilation broken by data-to-c\n 669253 gsettings set buggy on array values\n 669334 fix memory leak in bookmark file parser\n\n* Translation updates:\n Norwegian bokmål\n Spanish\n\n\nOverview of changes from GLib 2.31.12 to 2.31.14\n================================================\n\n* GResource:\n - GLib now includes a commandline utility, gresource,\n   to explore resources in ELF files\n - The resource compiler can now optionally strip\n   ignorable whitespace from XML resources\n - The resource compiler can now generate build dependencies\n - The resource compiler will now autoselect output formats\n\n* GApplication:\n - The menu markup parser API has been dropped, the\n   menu XML support lives in GTK+ now\n\n* GValueArray has been deprecated\n\n* Bugs fixed:\n 626258 N-ary Trees - 'nodes' can be inserted before and after...\n 634232 Core Dump / Aborted using g_key_file_to_data\n 639099 schema compiler chokes on valid schema\n 667228 Deprecate GValueArray\n 667243 Add an element clear function to GArray\n 667929 glib-compile-resources: xml resources doesn't need to...\n 668250 g_date_time_format() produces a non-UTF8 string\n 668468 'IP_ADD_SOURCE_MEMBERSHIP' undeclared\n 668532 resources: add dependency generator to the resource compiler\n 668539 resources: compiler should autoselect output format...\n 668561 gresource-tool not internationalized\n 668572 glib_cv_g_atomic_lock_free config.cache setting not honored...\n 668650 GRealArray->clear_func should be initialized\n 668756 GKeyFile: allow loading from empty strings\n 668857 fix couple of typos in comments\n 669024 goption: implement platform_get_argv0() for OpenBSD\n\n* Updated translations:\n Galician\n Norwegian bokmål\n Spanish\n Traditional Chinese\n\nOverview of changes from GLib 2.31.10 to 2.31.12\n================================================\n\n* GApplication:\n - Drop support for exporting menus - this functionality\n   will be provided in GtkApplication\n - Add a way to create actions that change settings\n\n* Bugs fixed:\n 629503 Add async versions of g_unix_connection_{receive,send}_credentials\n 656301 glib-compile-schemas should not create an empty file\n 668071 mingw-gcc build fails on gio/gsocket.[c|h]\n 668118 the big appmenu switcheroo\n 668158 base64 encode and line termination\n 668163 GDBusConnection: note that exit-on-close is sometimes TRUE\n 668269 gsignal: add g_signal_handlers_disconnect_by_data\n 668279 create GAction from GSettings\n\n* Translation updates:\n Norwegian bokmål\n\n\nOverview of changes from GLib 2.31.8 to 2.31.10\n===============================================\n\n* GResource:\n - A new facility to allow linking data files into binaries\n   and make them available as resources\n - Resources are compiled using glib-compile-resources\n - GIO supports resource:/// uris to access resources\n\n* Bugs fixed:\n 619126 Missing dependency libs\n 658315 g_key_file_get_keys() should set length to 0...\n 660371 is it ever valid to have 0 as a GError domain?\n 666700 Add some missing (allow-none) annotations\n 667375 GAsyncInitable subclassing (and async subclassing...\n 667447 Missing many introspection annotations\n 667790 Protect call to pthread_condattr_setclock with define\n 667938 wrong gtypes generated for empty flags enums\n\n* Translation updates:\n Hebrew\n Spanish\n\n\nOverview of changes from GLib 2.31.6 to 2.31.8\n==============================================\n\n* GObject:\n - The type checks for overriding properties have been loosened.\n   In particular, it is now possible to add the CONSTRUCT flag\n   to an overridden property\n - GWeakRef is a new API for weak references; unlike g_object_weak_ref\n   and g_object_add_weak_pointer, it is thread-safe.\n\n* GHashTable has grown new convenience api for use as a set:\n  g_hash_table_add, g_hash_table_contains\n\n* GSocketConnection has gained API for managing connection status\n\n* GSettings: a native OS X backend has been added, under the\n  name 'nexstep'\n\n* Bugs fixed\n 455640 Something fishy with GRegex and unicode\n 548954 weak references are not threadsafe\n 625751 Add G_FILE_ATTRIBUTE_FILESYSTEM_USED\n 658871 gbacktrace: g_get_prgname () isn't called for a NULL argu...\n 664069 gvariant: Never break out of g_variant_iter_loop\n 664830 g_strescape doesn't natively handle \\v (vertical tab)\n 665211 GDBusConnection singleton access can race with disposal\n 665805 Add GSocketClient::action, for tracking socket client status\n 666116 some tests provoke undefined behaviour, which is undesira...\n 666422 Unreachable code in gio gnetworkmonitornetlink.c\n 666551 Crash in g_thread_xp_SleepConditionVariableSRW\n 666595 menu parser disallows id='' on submenu and section\n 666615 loosen property override flag restrictions\n 666616 gobject: fix property override type checks\n 666803 g_utf8_validate() fails to validate strings with known size\n 666804 g_ateaxit deprecation warning in devhelp points in wrong ...\n 666951 g_mkdtemp: Since version incorrect in docs\n 666978 Fails to compile glib applications with ISO C90 compiler\n 667098 ginetaddressmask leaks its address property\n 667225 GSocket: add missing type checks to public methods\n 667226 GSocket: fix an error return value\n 667279 Sometimes crashes when launching commandline-crea...\n 667285 Wrong keyname listed in documentation for g_deskt...\n 667331 Use g_queue_free_full() convenience function\n 667420 GHashTable GDB pretty printing is broken\n\n* Updated translations\n Belarusian\n Bulgarian\n Hebrew\n Norwegian bokmål\n Norwegian Nynorsk\n Spanish\n Vietnamese\n\n\nOverview of changes from GLib 2.31.4 to 2.31.6\n==============================================\n\n* GApplication no longer has APIs for setting menus.  Those have been\n  moved to GtkApplication.\n\n* the GActionGroup import/export functionality has been decoupled from\n  GApplication by the introduction of a new interface for the purpose of\n  handling platform data: GRemoteActionGroup.  This allows Gtk to\n  properly deal with platform data (and gdk threads) on window actions.\n\n* lots of documentation improvements\n\n* bug fixes and a huge number of memory leak fixes\n\n* the test suite now passes on ARM and some of the GDBus testcase hangs\n  we've been seeing have been resolved (although others could remain)\n\n* g_bytes_get_data() API changed: now includes 'size' out parameter\n\n* new g_queue_free_full() API similar to g_[s]list_free_full()\n\n* desktop files: use standard \"Keywords\" now, not \"X-GNOME-Keywords\"\n\n* gsettings commandline tool now has --schemadir option for schemas not\n  installed in the usual place (ie: as part of plugins)\n\n* Bugs fixed:\n 643736 GApplication doesn't emit dbus signals on action updates\n 657433 g_queue_free_full() missing\n 664699 glib: documentation fixes\n 665737 acquire/release gdk threads lock on incoming dbus\n 665879 GBytes: add a size argument to g_bytes_get_data\n 666113 various leaks in GLib, GIO are visible in the regression tests\n 666115 various tests leak memory, obscuring real leaks in the library\n 666145 Doc could be more explicite that g_thread_init calls can be droped\n 666173 Configure warning - linux/netlink.h usability... no\n 666296 Race condition in g_thread_xp_get_srwlock\n 666415 Settings tools should allow specifying a schema directory \n\n* Translations updated:\n French\n Spanish\n\nOverview of changes from GLib 2.31.2 to 2.31.4\n==============================================\n\n* EXPERIMENTAL: Menu support has been added to GApplication.  Menus\n  are exported on the bus, alongside the actions that are already there.\n  There have also been many related improvements to action group\n  functionality.\n\n  These new APIs are subject to changes in the coming releases.  In\n  particular, it seems somewhat likely that the APIs for registering\n  menubars may change in order to accommodate windows with different\n  types of menubars.\n\n* GDBusConnection previously directly dispatched destroy notifies when\n  unregistering objects if the current main context was the same context\n  the object was exported on.  It now unconditionally dispatches these\n  through an idle on the context.\n\n* Clean up Requires in pc files. Linking against GIO no\n  longer drags in gmodule. This may require dependency\n  fixes here and there.\n\n* Introduce GBytes, a data type for immutable, fixed-size\n  byte sequences. This makes the pre-existing GBuffer\n  API available outside GLib\n\n* GDBusInterfaceSkeleton can now be exported on multiple\n  connections\n\n* Bugs fixed:\n 600161 Do not use static GTypeInfo and GInterfaceInfo\n 640077 GFileMonitor: Always send CHANGES_DONE_HINT after a move...\n 641720 Misleading definition for local_command_line() in GApplic...\n 648516 Little comment error and 2 useless lines of code\n 651997 Dummy backend for gapplication\n 652560 Test for g_ascii_strtod is failing\n 662208 failure to initialize a GInitable should be considered...\n 662718 GDBusInterfaceSkeleton should be able to export on multi...\n 663291 GBytes: Immutable, refcounted sequence of bytes\n 664406 Need context for a proper translation\n 664455 Build fixes for GLib GIT master (2.31.x)\n 664558 GDBusWorker.frozen has a value > 1 in a gboolean\n 664559 sys/wait.h not available on windows\n 664617 gdbus segfault error 4 in libgio-2.0.so.0.3102.0\n 664635 GMemory{Out,In}putStream _async functions break sub-class...\n 664809 Add command line option to gtester to allow skipping tests\n 665067 cryptic assertion failure if nonsensical flag combinations...\n 665184 Check ref. count before reffing/unreffing\n 665298 Add 'Requires.private: libpcre' to glib-2.0.pc\n 665391 update documentation around mainloops\n 665607 ./configure is there for fiddling with cross-compile enviro...\n 665634 g_dbus_node_info_new_for_xml() errors on unknown attributes...\n 665685 Add a #define for the max length of a Unicode decomposition\n 665733 GDBusConnection holds lock while calling destroynotify\n\n* Translation updates:\n Norwegian bokmål\n Spanish\n\n\nOverview of changes from GLib 2.31.0 to 2.31.2\n==============================================\n\n* Monotonic time is now properly supported on Windows\n\n* glib-mkenums: fix @ENUMPREFIX@ with /*< underscore_name=... >*/\n\n* EXPERIMENTAL: introduce new GSettingsSchema and GSettingsSchemaSource\n  APIs for the convenience of plugin system authors and those who wish\n  to introspect the contents of schemas.  This API may change.\n\n* Improve the performance of GObject property notifies.\n\n* GDBus:\n - fix a race when unowning a name immediately after owning it\n - thread safety improvements on GDBusConnection\n - fixes for exit-on-close functionality\n\n* Deprecations:\n - add G_SIGNAL_DEPRECATED\n - don't use G_DISABLE_DEPRECATED masking for functions anymore\n\n* docs\n - tmpl/ is finally dead for glib\n\n* GIO:\n - GInetAddressMask: new type for internet address range matching\n - various GIO file and stream fixes\n - improvements to attribute and fileinfo handling\n\nOverview of changes from GLib 2.29/2.30 to 2.31.0\n=================================================\n\nThis release contains a huge number of changes (500 commits worth).  The\nlist below attempts to summarise, but not every change is listed.\n\n* Major changes to threading and synchronisation\n - threading is now always enabled in GLib\n - support for custom thread implementations (including our own internal\n   support for errorcheck mutexes) has been removed\n - a whole lot of dead code (to deal with the non-threaded case) has\n   been ripped out.  This includes the racy path of GMainContext that\n   caused deadlocks with respect to child process exits in\n   single-threaded programs (such as gtester).\n - libgthread is now an empty shell and g_thread_init() is no longer\n   required (and has been deprecated)\n - GMutex and GCond can now be statically allocated without explicit\n   initialisation.  Dynamic allocation for these types is deprecated.\n - new types GRecMutex and GRWLock can also be statically allocated\n   without explicit initialisation.\n - GPrivate can now be statically allocated and has an improved API.\n   Dynamic allocation of GPrivate is deprecated.\n - GStaticMutex, GStaticRecMutex, GStaticRwLock, GStaticPrivate are\n   deprecated.\n - GCond now uses monotonic time internally and a new API takes\n   monotonic time for timed waits, deprecating the wallclock API\n - removal of the insane macro indirection used in the previous\n   implementation of threading and synchronisation APIs\n - use SRWLock and CONDITION_VARIABLE APIs when available on Windows\n   (Vista and later) and emulate them on XP\n - leaks of G(Static)Private-allocated data on some cases of thread exit\n   have been fixed\n - simplified new thread creation API with the old API deprecated.  The\n   concept of joinability has disappeared (all threads are joinable) as\n   have priority levels, 'bound'ness (ie: kernel vs. userspace threads)\n   and ability to manipulate the stack size.\n - GThread is now a refcounted type\n - other implementation details changed\n\n* Move headers for some deprecated functionality to a separate\n  deprecated/ directory.\n\n* New support for attribute-based deprecations to issue compiler\n  warnings instead of breaking the build and/or giving warnings about\n  implicit declarations (and possibly miscompiling).\n\n* GCache has been deprecated (after its last use was removed from our\n  platform over a year ago).\n\n* It is no longer possible to include individual headers (like\n  \"ghash.h\") -- you must #include <glib.h>.\n\n* The misguided experiment of allowing the program to stumble along with\n  missing GSettings schemas is now over -- the abort is back.\n\n* Clarify that fork() is not valid while using GMainContext.  This is\n  because the internal resources of the GMainContext end up being shared\n  by both processes.  We had an assert here but it was breaking existing\n  (valid) use cases as well, so it has been removed for now.\n\n* GApplication\n  - add ::shutdown signal as logical dual to ::startup\n  - don't use a GMainLoop: iterate the GMainContext directly (improves\n    quit logic)\n\n* Several portability fixes for Windows, OpenBSD, Solaris\n\n* Add new GValue API to specifically deal in signed chars (in case the\n  platform defines 'char' as unsigned)\n\n* some new API to mitigate the problems associated with calling setenv()\n  in a multi-threaded program\n\n* Use CLOCK_MONOTONIC unconditionally if the libc has support at compile\n  time (ie: stop checking for kernel support at runtime).\n\n* pkg-config files:\n  - drop -uninstalled variants\n  - remove gobject dependency on gthread\n\n* New macro G_ATOMIC_LOCK_FREE is defined if the atomic operations are\n  implemented without use of a mutex.  Cleaned up atomic-related\n  compilation issues with mingw compilers on win32 systems.\n\n* SOCKS proxy and resolver improvements\n\n* Fix the spelling of G_IO_FLAG_IS_WRITABLE (was WRITEABLE) and\n  introduce a macro for backwards compatibility.\n\n* GDBus:\n  - many code generation updates and improvements\n  - some race condition fixes, including testcase hangs\n\n* GVariant:\n  - new g_variant_new_from_fixed_array() API\n  - substantial docs improvements/clarifications\n\n* GKeyFile is now refcounted and boxed\n\n* mount monitoring is now based on /proc/mounts (where available)\n  instead of mtab\n\n* new macros G_SOURCE_CONTINUE and G_SOURCE_REMOVE for returning from\n  GSourceFunc (so you don't have to remember what TRUE and FALSE mean)\n\n* use xlocale functions where available to avoid too much heavy lifting\n  in functions like g_ascii_strtod()\n\n* GMappedFile can now be created from an fd\n\n* error message strings grammar/i18n fixes\n\n* many docs updates\n\n* Partial list of bugs closed:\n 70598  Unify GStaticMutex and GMutex.\n 320888 optimization for g_main_context_wakeup\n 398418 GChildWatch race condition?\n 527214 g_timer_elapsed() returns random values\n 580505 add a way to set/get name for a thread\n 583511 race condition means g_main_loop_quit() does not work\n 590808 GKeyFile should have a refcount and a boxed type in GObject\n 592715 Document that g_str_hash() and g_int_hash() are not NULL safe\n 631413 Add macros for GSourceFunc return values\n 632049 not immediately clear what g_variant_get_fixed_array expects\n 640212 \"Error stating file\" is not a friendly message\n 640293 Use xlocale functions to implement g_ascii_strtod()\n 640975 Check that error exists before trying to set it\n 643934 GApplication lacking a logical dual for the ::startup signal\n 651268 assertion failed in GDBus worker thread\n 653987 g_key_file_get_integer cannot interpret trailing spaces\n 654412 Documentation for g_variant_get_child_value unclear\n 654563 info capplet: Failed to calculate disk space\n 655366 missing GSettings schemas lead to obscure crashes\n 656621 g_spawn_*() calls executables in current directory\n 656679 [gi] Add two annotations to gio\n 657992 Add glib__private__() API to share between glib,gio\n 658188 _set_as_last_used_for_type generates a broken mimeapps.list\n 658206 gsocks5proxy.c has invalid gettext use\n 658207 glib-compile-schemas says \"can not\"\n 658558 simpleaction: Fix documentation of :enabled\n 658683 clean up charset/language threading issues\n 658692 add introspection annotations to g_time_val_from_iso8601()\n 658715 Duplicite strings\n 658769 Invalid reuse of GError in GThreadedResolver\n 658806 sign error in string hash implementation\n 658976 gdbus-codegen's C namespace option needs to support Ugly_Case\n 659070 gdbus-codegen generated code segfaults when property changes\n 659082 gdbus-codegen: Single letter namespaces get dropped from names\n 659212 GMappedFile should fail on non-regular files\n 659324 _SPLICE_CLOSE_TARGET doesn't mark the output stream as closed\n 659423 Use adaptive mutexes when available\n 659427 Move deprecated code to a separate directory\n 659646 gdbus-codegen produce code that warnings at build\n 659690 Possible build warning in code generated by gdbus-codegen\n 659699 property name collision when generating code for \"Connection\"\n 659754 Add API to GMappedFile that allows to pass FD\n 659838 incorrect types in introspection for g_object_bind_property\n 659866 pthread_rwlock_t requires defined __USE_UNIX98\n 659870 gvalue: Fix signedness of g_value_get_char()\n 659889 glib-2.29.92/gio-2.0.pc.in has a wrong line.\n 659916 GObject size of 64K is not actively enforced\n 659920 Missing setter for read/write property 'closed' of GIOStream\n 659923 Add g_variant_new_fixed_array() function\n 660013 Remove old g_atomic configure cruft\n 660096 glib/rwlock tests failure (tests asserted)\n 660130 Possible loss of user data when updating mimeapps.list\n 660147 tracker causes g_critical in \"gsettings list-recursively\"\n 660413 Make G_ASSERT_STATIC work with clang\n 660498 Generated test code fails when the codegen changes\n 660511 Use /proc/mounts for monitoring mounts, not /etc/mtab\n 660536 Expose options for /etc/fstab entries\n 660635 Deprecate g_thread_foreach\n 660637 Pending dbus method calls not canceled on connection loss\n 660739 kill off g_{mutex,cond}_{new,free}()\n 660740 make GThread more standard\n 660741 g_cond_timedwait is a disaster\n 660743 macro wrappers for g_once_init_enter/leave\n 660744 finish killing g_thread_init()\n 660745 GPrivate leaks on Windows\n 660791 [gio] Improve doc for g_file_make_directory_with_parents()\n 660843 asyncqueue-test is broken\n 660849 Remove cruft from g_strerror and g_strsignal\n 660886 GDBusProxy: don't drop/complain about unknown props/signals\n 660887 g_slice_set_config() is broken\n 660994 Add g_main_context_ref_thread_default()\n 661255 gio: enable test_peer regression test for OpenBSD\n 661257 giomodules.c uses \":\" instead of G_SEARCHPATH_SEPARATOR_S\n 661318 tests use pthread without appropriate compiler/linker flags\n 661421 Applications fail to initialize on GNU Hurd - commit\n 661438 Implement G_GNUC_DEPRECATED/G_GNUC_DEPRECATED_FOR on Visual C++\n 661711 Sorting keys for GDrive, GVolume and GMount instances\n 661763 desktop-app-info: Add support for X-GNOME-Keywords\n 661896 /gdbus/connection/life-cycle is racy\n 661914 Gstreamer/Totem locks up\n 662100 regression: g_dbus_connection_close() triggers exit-on-close logic\n\n* Translations updates:\n Belarusian \n Brazilian Portuguese\n British English \n Bulgarian \n Catalan \n Catalan (Valencian)\n Czech \n Danish \n Esperanto\n French \n Gujarati\n Hebrew \n Hungarian \n Italian \n Japanese\n Lithuanian\n Norwegian bokmål\n Oriya\n Polish \n Russian \n Serbian\n Simplified Chinese\n Slovak \n Slovenian\n Spanish \n Tamil\n Vietnamese\n\nOverview of changes from GLib 2.29.18 to 2.29.90\n================================================\n\n* GObject includes a generic marshaller, g_cclosure_marshal_generic.\n  To use it, simply specify NULL as the marshaller in g_signal_new().\n  The generic marshaller is implemented with libffi, and consequently\n  GObject depends on libffi now.\n\n* API/ABI changes:\n - unix signal watches now match the API of all of the other sources\n - revert the addition of g_date_time_source_new () from last release\n\n* networking and other fixes for Solaris\n - we no longer support symbolic port names (ie: from /etc/services)\n - check if -lsocket is needed\n - fix g_socket_details_from_fd()\n - avoid getmntinfo\n - fix some harmless warnings\n\n* GDateTime improvements:\n - generally improved standards compliance (with C99)\n - support C99-specified format strings: %g, %G, %V, %c, %C, %w\n - consult the locale for the preferred 12-hour time format (%r)\n - drop support for non-standard %N and broken %W\n - better support for formatting non-POSIX (eg: Arabic) numerals\n - locale-related test case fixups, and fix some leaks\n\n* GTlsInteraction: add interaction method invocation guarantees\n\n* gdbus-codegen: post-process all interfaces when parsing >1 file\n\n* make GMainLoop, GMainContext and GSource boxed types\n\n* fix a race condition in the first use of g_get_monotonic_time()\n\n* lots gtk-doc cleanups\n\n* better intltool compatibility when generating pot file\n\n* avoid GCC-specific compiler options when not using GCC\n\n* Translation updates:\n Belarusian\n Brazilian Portuguese\n Canadian English\n Galician\n Indonesian\n Korean\n Lithuanian\n Norwegian bokmål\n Portuguese\n Spanish\n Swedish\n\nOverview of changes from GLib 2.29.16 to 2.29.18\n================================================\n\n* GDateTime is now respecting LC_TIME when formatting\n\n* GTimeZoneMonitor has been removed again\n\n* A new API for wallclock functionality has been added:\n  g_date_time_source_new(). This API is still experimental\n  and may be changed or removed before 2.30.\n\n* Bugs fixed:\n 628904 Add credential support for FreeBSD and fix a socket issue\n 650763 gdbus-codegen is broken with python 2.7\n 655129 GDateTime could provide api for implementing wall clocks\n 656341 gtlsconsoleinteraction.c uses getpass() which isn't avail...\n 656387 GCancellable can be used concurrently\n 656443 Make GTlsInteraction ask_password cancellable\n 656675 void functions should not return in glib 2.29.16\n 656772 g_variant_compare for uint64 incorrect\n 656914 Load GIO_EXTRA_MODULES first, and ignore duplicates\n 657083 The header langinfo.h is not available on all systems\n 657084 gfileutils: fix docs/annotations for temp file methods\n 657138 Some files missing in POTFILES.in\n 657206 GInputStream leaked in g_file_icon_load_async()\n 657243 g_cancellable_set_error_if_cancelled() documentation\n 657274 Use detected PYTHON variable as shebang for gdbus-codegen\n 657336 Speling fixes for glib found with codespell\n 657452 plural forms needed\n 657454 Translation comment needed\n 657540 Print out file:// URL to coverage HTML report after building\n 657593 g_test_trap_fork calls close(-1)\n 646082 Addresses from GSocket should be normalized before returning\n 657517 fix gio/tests/gdbus-peer on bsd\n\n* Translation updates:\n Brazilian Portuguese\n Galician\n Norwegian bokmål\n Punjabi\n Russian\n Serbian\n Spanish\n Swedish\n Traditional Chinese\n Uighur\n\n\nOverview of changes from GLib 2.29.14 to 2.29.16\n================================================\n\n* GTlsDatabase: an abstract class that provides support\n  or certificate and key lookup. An implementation will\n  be provided in glib-networking\n\n* GHmac: Support or HMAC digests\n\n* Misc new API:\n - g_ptr_array_add_full: creates a GPtrArray with\n   a preallocated size and a destroy function\n - g_desktop_app_info_get_show_in: checks if a GDesktopAppInfo\n   should be shown in a given desktop environment\n - g_mkdtemp, g_mkdtemp_full, g_dir_make_tmp: create\n   temporary directories\n\n* Unify thread wakeup implementations of GMainContext\n  and GCancellable, and use eventfd for it when available\n\n* Show mounts in $XDG_USER_DIR in addition to /media and $HOME\n\n* Bugs fixed:\n 636572 GTlsCertificateDB\n 644601 Some tests need a running dbus session\n 652284 deal with small key lengths\n 652827 glib-2.29.8 no longer builds with mingw.org's toolchain\n 653063 PEM parser fails parsing private key when put first\n 654078 Fail to static linking with Glib library\n 654450 New functions: g_ptr_array_new_full()\n 654793 Add G_VALUE_INIT\n 655044 GDesktopAppInfo: Add g_desktop_app_info_get_show_in()\n 655148 gdbusconnection is broken when compiling with mingw\n 655241 glocalfile.c no longer compiles with MinGW GCC\n 655598 g_cancellable_get_fd: silently return -1 for NULL cancellable\n 655664 gdbus should not abort if no dbus session is available\n 655769 Use ZLIB_CFLAGS when compiling gio\n 656031 Improve GVariant annotations\n 656048 glib-codegen requires Python >= 2.5\n 656151 configure test logic inverted, doesn't match comments\n 656152 GCC only syntax used, yet other compilers allowed by configure.\n 656162 allow use of lcov 1.9 for coverage\n 656282 GDBusProxy: uninitialized local variables can be freed\n 656283 Failing tls connection cause assertion\n 118563 Add g_mkdtemp in the spirit of g_mkstemp\n 636405 Add g_return_if_fail() to g_settings_bind_with_mapping()\n 656039 race condition between GDBusProxy signals and public API\n 656492 g_io_channel_new_file failure (open(2) behavior wrt POSIX)\n\n* Translation updates:\n Bulgarian\n Esperanto\n French\n Galician\n German\n Hebrew\n Indonesian\n Italian\n Norwegian bokmål\n Russian\n Spanish\n Swedish\n\n\nOverview of changes from GLib 2.29.12 to 2.29.14\n================================================\n\n* Unicode improvements\n - add g_unicode_script_{to,from}_iso15924\n - add G_UNICODE_SPACING_MARK define\n - more normalisation improvements\n - stop using deprecated g_unicode_canonical_decomposition()\n\n* GParamSpec:\n - mark the 'name' field as 'const' and add a comment to the header to\n   help avoid future problems caused by bad hacks\n\n* Merge some (modified) patches from Debian:\n - 03_blacklist-directories.patch\n   - add some blacklisted mount directories\n - 60_wait-longer-for-threads-to-die.patch\n   - sleep longer in a test case, if needed to avoid failing\n\n* Units policy change: prefer use of SI units\n - deprecate g_format_size_for_display, add g_format_size(_full)\n\n* GSettings: don't call g_error() when the schema is missing\n\n* GVariant support for arrays of object paths:\n - new g_variant_{new,get,dup}_objv API\n - support for g_variant_{new,get} '^ao' and '^a&o' similar to '^as'\n\n* GDBus:\n - use new improved array-of-objects support and pass 'ao' as char**\n   instead of GVariant*\n - improve handling of 'h' type (Unix file descriptor index)\n\n* GIO:\n - fix compilation without USE_STATFS and USE_STATVFS\n\n* Documentation fixes\n\n* Bugs fixed:\n 622921 Migrate from dbus-glib to glib's GDBus\n 648271 Add g_unicode_script_to_iso15924()\n 654948 Stop using deprecated g_unicode_canonical_decomposition()\n 654988 g_atomic_int_add should document behaviour change\n 655025 #define G_UNICODE_SPACING_MARK G_UNICODE_COMBINING_MARK\n 655076 normalization misses some Full_Composition_Exclusion=True. \n\n* Translations updated:\n Spanish\n\nOverview of changes from GLib 2.29.10 to 2.29.12\n================================================\n\n* Add new API to do Unicode (de-)composition in atomic steps,\n  for use in Harfbuzz.\n\n* Bugs fixed:\n 615895 (indirectly) support non-NULL-terminated regexes in GRegex\n 617949 glib trunk fails to compile on Solaris w/ Studio 12...\n 620423 Document the possibility to unset attributes\n 627974 Floating reference headaches\n 644687 Not finding cross-links in current doc set\n 649246 g_output_stream_splice() cannot be used on 32-bit machines...\n 653841 a helper script to build glib from git master on win32\n 653935 g_slist_free_full/g_list_free_full iterates twice in the list\n 654017 tests: fix glib_translations_work() in gsettings unit test\n 654085 Don't needlessly use \"echo -e\" when creating .def files\n 654195 Add g_unichar_compose() and g_unichar_decompose()\n 654232 GCancellable eventfd problems\n 654394 suspicious use of floating references in GDBusInterfaceSkeleton\n 654536 GSettings: lift key name length restriction to 64\n 654627 GParamSpec: intern property names\n 654651 Better g_unicode_canonical_decomposition()\n 654917 Make g_cclosure_marshal_generic the default signal handler\n\n* Translation updates:\n Belarusian\n Finnish\n Korean\n Latvian\n Lithuanian\n Norwegian bokmål\n Turkish\n\n\nOverview of changes from GLib 2.29.8 to 2.29.10\n===============================================\n\n* New features:\n - g_desktop_app_info_get_nodisplay: a function that is required\n   to port gnome-menus to GDesktopAppInfo\n - g_hash_Table_iter_replace: new function to replace a value\n   while iterating over a hash table\n - g_utf8_substring: convenience API to extract substrings from\n   UTF-8 strings\n - g_action_group_add_entries: convenience API for creating lots\n   of actions quickly\n - Use eventfd instead of pipes for waking up main contexts and\n   for cancellation when available\n - GMatchInfo is now a refcounted boxed type\n\n* API changes in GAction:\n - the 'set_state' entry in the GActionInterface vtable has been\n   renamed to 'change_state\n - g_action_set_state has been renamed to g_action_change_state\n - the 'state' property has been changed to read-only\n - GSimpleAction can no longer be subclassed\n\n* Bug fixes\n 647796 g_variant_new_variant is not marked as constructor\n 652072 gmain: make use of signalfd()\n 652168 Crosscompiling Fails if build<=2.24 and host >2.24\n 652750 make dist fails\n 652758 GDataInputStream: Clarify g_data_input_stream_read_line docs...\n 652822 Add a g_hash_table_iter_replace\n 652897 tiny docs clarification for g_utf8_to_ucs4_fast\n 653140 gmain: use Linux eventfd() for main context wake up\n 653429 drop AM_MAINTAINER_MODE or enable it by default\n 653484 GAsyncCallbacks should default to allow-none\n        Add missing fundamental types to the generic marshaller\n\n* Translation updates\n Belarusian\n Galician\n Russian\n\nOverview of changes from GLib 2.29.6 to 2.29.8\n==============================================\n\n* Bug fixes\n 646608 export_symbols variable for gio dynamic library is wrong\n 646635 Fix introspection of GLib\n 647930 Documentation: GDataInputStream _read_upto() version\n 651745 Switch to _ prefixing rather than G_GNUC_INTERNAL\n 651920 Improve qsort_r detection\n 651959 gbitlock: \"asm goto\" is not available in gcc < 4.5\n 651998 gdbus-codegen: Use relative Python imports\n 652000 Fix for gatomic.c on Windows/MSVC\n 652002 Proposal to clean up gvaluetransform.c for MSVC\n 652025 g_dbus_connection_register_object: error is not set...\n 652081 Typos in a GBinding warning message\n 652197 Improper handling of double values in GDBusMessage\n        Fix a deadlock in gobject finalization\n\n* Translation updates:\n Czech\n Galician\n German\n Hebrew\n Norwegian bokmål\n Spanish\n Uighur\n\n\nOverview of changes from GLib 2.29.4 to 2.29.6\n==============================================\n\n* Atomic operations have been rewritten from scratch to make use\n  of gcc builtins where possible. As a side-effect of this, calls\n  to g_atomic_ API with explicit casts may now be problematic; if\n  that happens to you, try first to remove the casts. Another\n  side-effect of the rewrite is that g_atomic_int_exchange_and_add\n  has been deprecated in favor of g_atomic_int_add.\n\n* A full set of atomic operations on pointers has been added,\n  including bit locks in pointer-size locations.\n\n* Access to quarks is now lockless\n\n* GObject data scalability has been greatly improved\n\n* g_data_time_format now supports alternative digits and padding\n\n* Introspection improvements:\n - Add a boxed type for GVariantBuilder\n - Annotation fixes in GDBus, GVariant, g_base64_\n\n* Bugs fixed:\n 502560 g_rand_double_range returns 'inf'\n 612729 g_mkdir_with_parents can fail if the directory already exists\n 617491 g_once() implementation is inefficient\n 619418 Add a performance test for UTF-8 decoding functions\n 619435 Make g_utf8_to_ucs4_fast() yet faster\n 626549 G_STATIC_ASSERT_EXPR\n 631231 bitlock: Fix detection and usage of futexes with Bionic\n 632294 g_queue_remove() should return a boolean\n 640518 GMainLoop has quadratic complexity when all pollfd's...\n 642026 Race condition in g_static_private_free\n 646635 Fix introspection of GLib\n 648678 g_date_time_format(): support %O flags for localized numbers\n 649480 Use MSG_CMSG_CLOEXEC in recvmsg in gio/gsocket.c\n 649506 GTestFunc et al lacking Since tag\n 649657 Don't return gboolean for functions that throw\n 649775 glib-gio-gdbuscodegen-Makefile.patch\n 649915 gsettings accepts unquoted strings longer than two characters\n 649973 gthread: build unix tests only on unix\n 649988 gdbus-codegen: Drop dependency on argparse\n 650078 forkbomb building glib/tests/protocol\n 650211 Optimization in key file parsing\n 650236 Application over DBus implements action state incorrectly\n 650345 g_key_file_has_key_full: New function to fix g_key_file_has_key...\n 650458 reduce overhead in g_object_set/get_data\n 650459 hash table consistency while calling destroy notify funcs\n 650688 enforce rules about hash table modification\n 650823 expand the set of atomic ops\n 650874 codegen chokes on docs\n 650882 use stdout instead of stderr for informational messages\n 650884 fix compilation with gcc2\n 650885 implement glib credentials on OpenBSD (hackish)\n 650935 G_GNUC_MAY_ALIAS and atomic ops\n 651009 minor documentation fix\n 651034 Regarding g_cond_wait after g_thread_pool_push in gthreadedresolver\n 651133 race condition in GDBusConnection's emit_signal_instance_in_idle_cb\n 651141 hashtable infinite loop\n 651219 fix path to true(1) on OpenBSD\n 651223 Fix some compile warnings on OpenBSD\n 651327 Minor fixes for the gsocket API\n 651467 Add pointer sized bitlocks\n 651650 gdbus: Avoid busy wait loop\n 651725 gmain: Cleanups and a new test case\n 651745 Switch to _ prefixing rather than G_GNUC_INTERNAL\n\n* Updated translations:\n Catalan (Valencian)\n Esperanto\n Hebrew\n Hungarian\n Russian\n Spanish\n\n\nOverview of changes from GLib 2.29.2 to 2.29.4\n==============================================\n\n* GDBus:\n - Includes several new types to support modeling D-Bus\n   objects and interfaces more fully, and also introduces\n   an 'object manager' pattern:\n   GDBusInterface, GDBusObject, GDBusObjectManager\n   These interfaces have client-side implementations:\n   GDBusProxy, GDBusObjectProxy, GDBusObjectManagerClient\n   And server-side implementations:\n   GDBusInterfaceSkeleton, GDBusObjectSkeleton, GDBusObjectManagerServer\n - The new gdbus-codegen utility uses these new classes\n   to generate C code and documentation from D-Bus interface\n   descriptions in XML\n\n* GTest:\n - There is now a g_test_fail() function to mark\n   tests as failed\n\n* GDesktopAppInfo\n - Now has a binding-friendly filename property\n - Other new API to more fully expose desktop file contents:\n   g_desktop_app_info_get_categories(),\n   g_desktop_app_info_get_generic_name()\n\n* GHashTable:\n - Several optimizations to reduce space consumption of\n   large hash tables, in particular tables that are used\n   to store sets.\n\n* Unix-specific APIs:\n  GLib now installs a separate header, glib-unix.h, that is\n  meant to collect Unix-specific APIs. For now, it contains\n  g_unix_open_pipe(), g_unix_set_fd_non_blocking() for dealing\n  with pipes and fds, as well as APIs to create mainloop\n  sources which can trigger callbacks on certain Unix\n  signals (SIGTERM, SIGHUP, SIGINT).\n\n* Bugs fixed:\n 631379 GDBus nonce-tcp test failing\n 632631 GLib-CRITICAL **: g_variant_new_string: assertion `g_utf8_validate (string, -1, NULL)' failed\n 635694 gdbus aborting due to unauthorized socket in DBUS_SESSION_BUS_ADDRESS\n 637561 Crash when using G_DBUS_SERVER_FLAGS_RUN_IN_THREAD\n 642935 g_date_time_format() prints wrong value for %z and timezone -0800\n 643134 g_dbus_message_copy\n 644941 glib-unix: New Unix-specific API\n 646013 g_hash_table_remove_all_nodes optimization\n 646309 glib cannot be cross-compilled for mingw32\n 646435 GTimeZone doesn't seem to be thread-safe\n 646957 GIO chained calls don't work with a thread default context\n 647594 README link to mailing list is broken\n 647602 Cannot connect to remote message bus via TCP\n 647746 The GSocketService documentation is incomplete.\n 647826 API: gtester: Add g_test_fail()\n 647903 GDesktopAppInfo: Add g_desktop_app_info_get_categories()\n 648416 g_app_info_create_from_commandline ignores SUPPORTS_STARTUP_NOTIFICATION\n 648423 Support G_DEBUG=trap-warnings\n 648425 GDesktopAppInfo: Add \"filename\" property for bindings\n 648966 Update g_unichar_iswide and g_unichar_iswide_cjk\n\n* Updated translations\n Norwegian bokmål\n Spanish\n Turkish\n Uighur\n\n\nOverview of Changes from GLib 2.28.0 to 2.29.2\n==============================================\n\n* GApplication\n - The documentation has been enhanced and clarified\n - An opt-out for uniqueness has been added: G_APPLICATION_NON_UNIQUE\n - GApplication now syncs settings before g_application_run() returns\n\n* GDBus\n - Interface lookups are now happening in constant time\n - Signature checking and handling of various unexpected\n   situations has been improved\n\n* GVariant\n - The format accepted by the GVariant parser has beend documented\n - GVariant accepts G_VARIANT_TYPE_VARDICT for a{sv}\n\n* GDateTime:\n - The return value of g_datetime_compare() has been fixed to\n   match strcmp() semantics\n - In order to handle problems with changing timezones, a GTimeZoneMonitor\n   has been added to GIO, and g_time_zone_refresh_local() can be\n   called to update the cached information about the local timezone\n\n* GOption now uses /proc/self/cmdline to set the program name instead\n  and only falls back to \"<unknown>\" if that is unavailable\n\n* GSettings:\n - The schema compiler now warns about references to non-existing schemas\n\n* Commandline utilities are now fully translated\n\n* Signals can now indicate that collecting their arguments must\n  always happen, even in the absence of connected signal handlers,\n  using the G_SIGNAL_MUST_COLLECT flag.\n\n* Bugs fixed:\n 635099 Memory leak in gdbus introspection when parsing xml\n 640489 $ and ^ do not match lines if G_REGEX_MULTILINE|G_R...\n 642042 Overriding GDBus org.freedesktop.DBus.Properties im...\n 642052 g_timeout_add(_seconds) cannot handle large intervals\n 642490 notify_desktop_launch() \"g_variant_new_bytestring:...\n 613269 g_type_get_qdata() doesn't work as I expected on subtypes\n 624943 G_VALUE_NOCOPY_CONTENTS is undocumented\n 637738 object_interface_check_properties never actually executes\n 638185 GIOCondition should be annotated as \"flags\"\n 639478 GDBusServer's g_dbus_server_new_sync() function should just...\n 641755 Add g_settings_get/set_uint() helpers\n 641768 dconf gsettings backend silently drops writes if it can't...\n 642797 g_app_info_get_default_for_type() broken for subtypes\n 642825 Unnecessary assertion failure in g_option_context_parse()\n 642944 NULL key lookup using g_hash_table_lookup_extended()\n 643074 Incorrect documentation for g_socket_receive() and g_socket...\n 643197 g_application_id_is_valid docs imply no valid ids\n 643468 GApplication docs: Warn that handling \"command-line\" means...\n 643478 GApplication::local_command_line vfunc documentation seems wrong\n 643624 Can g_variant_unref() on an already free'd variant\n 643649 g_application_run() should say that argc/argv can be NULL\n 643780 shouldn't need to create an action group to use actions...\n 643795 g_timeout_add_seconds fires with intervals 1 second longer...\n 644309 Program name is not set when using GtkApplication\n 644428 Crash in failure section of g_markup_collect_attributes()\n 644465 undefined reference to `_usleep'\n 644552 g_timeout_add_seconds(1, ...) may have a latency of up to 2...\n 644607 Correct internal definition of C_()\n 645789 annotations for g_file_*_contents\n 646039 g_settings_list_children() returns child that cannot be opened\n 646310 Accept range with only min or max\n 646420 g_dbus_method_invocation_get_parameters() docs should say...\n 646843 occasional abort on autologin\n 646985 add G_APPLICATION_NON_UNIQUE flag\n 647579 gsettings: Implement reset-recursively\n 647600 gsettings description has typo\n\n* Translation updates\n Afrikaans\n Bulgarian\n Bengali India\n British English\n Bulgarian\n Catalan\n Czech\n Danish\n French\n Galician\n German\n Greek\n Gujarati\n Hebrew\n Hungarian\n Italian\n Japanese\n Korean\n Lithuanian\n Polish\n Portuguese\n Romanian\n Serbian\n Simplified Chinese\n Spanish\n Swedish\n Traditional Chinese\n Uighur\n Vietnamese\n\n\nOverview of Changes from GLib 2.27.93 to 2.28.0\n===============================================\n\n* The GApplication API has changed compared to the version that was\n  included in the 2.25 development snapshots. Existing users will need\n  adjustments.\n\n* Bugs fixed:\n641363 GInitable documentation isn't clear about that finalize...\n641395 Add more data about the origin application to the \"Lau...\n641411 gdesktopappinfo signals lost if it's the session bus...\n641477 glib-mkenums uses unportable #! line\n641572 Add @EXEEXT@ to pkgconfig binary name\n641688 glib installs GSettings.html and gsettings.html\n\n* Translation updates:\n Galician\n Italian\n Korean\n Punjabi\n\n\nOverview of Changes from GLib 2.27.92 to 2.27.93\n========"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.171875,
          "content": "# GLib\n\nGLib is the low-level core library that forms the basis for projects such\nas GTK and GNOME. It provides data structure handling for C, portability\nwrappers, and interfaces for such runtime functionality as an event loop,\nthreads, dynamic loading, and an object system.\n\nThe official download locations are:\n  <https://download.gnome.org/sources/glib>\n\nThe official web site is:\n  <https://www.gtk.org/>\n\n## Installation\n\nSee the file ‘[INSTALL.md](INSTALL.md)’. There is\n[separate and more in-depth documentation](./docs/win32-build.md) for building\nGLib on Windows.\n\n## Supported versions\n\nUpstream GLib only supports the most recent stable release series, the previous\nstable release series, and the current development release series. All\nolder versions are not supported upstream and may contain bugs, some of which\nmay be exploitable security vulnerabilities.\n\nSee [SECURITY.md](SECURITY.md) for more details.\n\n## Documentation\n\nAPI documentation is available online for GLib for the:\n * [GLib](https://docs.gtk.org/glib/)\n * [GObject](https://docs.gtk.org/gobject/)\n * [GModule](https://docs.gtk.org/gmodule/)\n * [GIO](https://docs.gtk.org/gio/)\n\n## Discussion\n\nIf you have a question about how to use GLib, seek help on [GNOME’s Discourse\ninstance](https://discourse.gnome.org/tags/glib). Alternatively, ask a question\non [StackOverflow and tag it `glib`](https://stackoverflow.com/questions/tagged/glib).\n\n## Reporting bugs\n\nBugs should be [reported to the GNOME issue tracking system](https://gitlab.gnome.org/GNOME/glib/issues/new).\nYou will need to create an account for yourself. You may also submit bugs by\ne-mail (without an account) by e-mailing <incoming+gnome-glib-658-issue-@gitlab.gnome.org>,\nbut this will give you a degraded experience.\n\nBugs are for reporting problems in GLib itself, not for asking questions about\nhow to use it. To ask questions, use one of our [discussion forums](#discussion).\n\nIn bug reports please include:\n\n* Information about your system. For instance:\n  * What operating system and version\n  * For Linux, what version of the C library\n  * And anything else you think is relevant.\n* How to reproduce the bug.\n  * If you can reproduce it with one of the test programs that are built\n  in the `tests/` subdirectory, that will be most convenient.  Otherwise,\n  please include a short test program that exhibits the behavior.\n  As a last resort, you can also provide a pointer to a larger piece\n  of software that can be downloaded.\n* If the bug was a crash, the exact text that was printed out\n  when the crash occurred.\n* Further information such as stack traces may be useful, but\n  is not necessary.\n\n## Contributing to GLib\n\nPlease follow the [contribution guide](./CONTRIBUTING.md) to know how to\nstart contributing to GLib.\n\nPatches should be [submitted as merge requests](https://gitlab.gnome.org/GNOME/glib/-/merge_requests/new)\nto gitlab.gnome.org. Note that you will need to be logged in to the site to use\nthis page. If the patch fixes an existing issue, please refer to the\nissue in your commit message with the following notation (for issue 123):\n```\nCloses: #123\n```\n\nOtherwise, create a new merge request that introduces the change. Filing a\nseparate issue is not required.\n\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 3.6845703125,
          "content": "# Security policy for GLib\n\n * [Supported Versions](#Supported-Versions)\n * [Reporting a Vulnerability](#Reporting-a-Vulnerability)\n * [Security Announcements](#Security-Announcements)\n * [Acknowledgements](#Acknowledgements)\n\n## Supported Versions\n\nUpstream GLib only supports the most recent stable release series, the previous\nstable release series, and the current development release series. Any older\nstable release series are no longer supported, although they may still receive\nbackported security updates in long-term support distributions. Such support is\nup to the distributions, though.\n\nThe previous stable release series will generally receive fixes only for high\nimpact security issues, at maintainer discretion. Since such issues are rare,\nit's expected that there may be no backports or releases on the previous stable\nbranch.\n\nUnder GLib’s versioning scheme, stable release series have an *even* minor\ncomponent (for example, 2.66.0, 2.66.1, 2.68.3), and development release series\nhave an *odd* minor component (2.67.1, 2.69.0).\n\n## Signed Releases\n\nThe git tags for all releases ≥2.58.0 are signed by a maintainer using\n[git-evtag](https://github.com/cgwalters/git-evtag). The maintainer will use\ntheir personal GPG key; there is currently not necessarily a formal chain of\ntrust for these keys. Please [create an issue](https://gitlab.gnome.org/GNOME/glib/-/issues/new)\nif you would like to work on improving this.\n\nUnsigned releases ≥2.58.0 should not be trusted. Releases prior to 2.58.0 were\nnot signed.\n\n## Reporting a Vulnerability\n\nIf you think you've identified a security issue in GLib, GObject or GIO, please\n**do not** report the issue publicly via a mailing list, IRC, a public issue on\nthe GitLab issue tracker, a merge request, or any other public venue.\n\nInstead, report a\n[*confidential* issue in the GitLab issue tracker](https://gitlab.gnome.org/GNOME/glib/-/issues/new?issue[confidential]=1),\nwith the “This issue is confidential” box checked. Please include as many\ndetails as possible, including a minimal reproducible example of the issue, and\nan idea of how exploitable/severe you think it is.\n\n**Do not** provide a merge request to fix the issue, as there is currently no\nway to make confidential merge requests on gitlab.gnome.org. If you have patches\nwhich fix the security issue, please attach them to your confidential issue as\npatch files.\n\nConfidential issues are only visible to the reporter and the GLib maintainers.\n\nAs per the [GNOME security policy](https://security.gnome.org/), the next steps\nare then:\n * The report is triaged.\n * Code is audited to find any potential similar problems.\n * If it is determined, in consultation with the submitter, that a CVE is\n   required, the submitter obtains one via [cveform.mitre.org](https://cveform.mitre.org/).\n * The fix is prepared for the development branch, and for the most recent\n   stable branch.\n * The fix is submitted to the public repository.\n * On the day the issue and fix are made public, an announcement is made on the\n   [public channels listed below](#Security-Announcements).\n * A new release containing the fix is issued.\n\n## Security Announcements\n\nSecurity announcements are made publicly via the\n[`distributor` tag on discourse.gnome.org](https://discourse.gnome.org/tag/distributor).\n\nAnnouncements for security issues with wide applicability or high impact may\nadditionally be made via\n[oss-security@lists.openwall.com](https://www.openwall.com/lists/oss-security/).\n\n## Acknowledgements\n\nThis text was partially based on the\n[github.com/containers security policy](https://github.com/containers/common/blob/HEAD/SECURITY.md),\nand partially based on the [flatpak security policy](https://github.com/flatpak/flatpak/blob/HEAD/SECURITY.md).\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzzing",
          "type": "tree",
          "content": null
        },
        {
          "name": "gio",
          "type": "tree",
          "content": null
        },
        {
          "name": "girepository",
          "type": "tree",
          "content": null
        },
        {
          "name": "glib.doap",
          "type": "blob",
          "size": 5.3173828125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Project xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n         xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n         xmlns:foaf=\"http://xmlns.com/foaf/0.1/\"\n         xmlns:gnome=\"http://api.gnome.org/doap-extensions#\"\n         xmlns=\"http://usefulinc.com/ns/doap#\">\n\n  <name>GLib</name>\n  <shortname>glib</shortname>\n\n  <shortdesc xml:lang=\"en\">Low level core library</shortdesc>\n\n  <description xml:lang=\"en\">GLib is the low-level core library that forms the basis for projects such as GTK and GNOME. It provides data structure handling for C, portability wrappers, and interfaces for such runtime functionality as an event loop, threads, dynamic loading, and an object system.</description>\n\n  <homepage rdf:resource=\"http://www.gtk.org\" />\n  <license rdf:resource=\"http://usefulinc.com/doap/licenses/lgpl\" />\n  <bug-database rdf:resource=\"https://gitlab.gnome.org/GNOME/glib/-/issues\"/>\n  <download-page rdf:resource=\"http://download.gnome.org/sources/glib/\" />\n  <developer-forum rdf:resource=\"https://discourse.gnome.org/tags/glib/\" />\n  <category rdf:resource=\"http://api.gnome.org/doap-extensions#core\" />\n\n  <programming-language>C</programming-language>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Matthias Clasen</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:mclasen@redhat.com\"/>\n      <gnome:userid>matthiasc</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Philip Withnall</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:philip@tecnocode.co.uk\"/>\n      <foaf:mbox rdf:resource=\"mailto:withnall@endlessm.com\"/>\n      <gnome:userid>pwithnall</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Emmanuele Bassi</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:ebassi@gnome.org\"/>\n      <gnome:userid>ebassi</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Marco Trevisan</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:mail@3v1n0.net\"/>\n      <gnome:userid>marcotrevi</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Sebastian Dröge</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:slomo@coaxion.net\"/>\n      <gnome:userid>sdroege</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Alexander Larsson</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:alexl@redhat.com\"/>\n      <gnome:userid>alexl</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Ondrej Holy</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:oholy@redhat.com\"/>\n      <gnome:userid>oholy</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Simon McVittie</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:smcv@collabora.com\"/>\n      <gnome:userid>smcv</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Michael Catanzaro</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:mcatanzaro@gnome.org\"/>\n      <gnome:userid>mcatanzaro</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Patrick Griffis</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:pgriffis@igalia.com\"/>\n      <gnome:userid>pgriffis</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Jonathan Matthew</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:jonathan@d14n.org\"/>\n      <gnome:userid>jmatthew</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Ting-Wei Lan</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:lantw@src.gnome.org\"/>\n      <gnome:userid>lantw</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Nirbheek Chauhan</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:nirbheek.chauhan@gmail.com\"/>\n      <gnome:userid>nirbheekc</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Chun-wei Fan</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:fanc999@yahoo.com.tw\"/>\n      <gnome:userid>fanchunwei</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Christoph Reiter</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:reiter.christoph@gmail.com\"/>\n      <gnome:userid>creiter</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Руслан Ижбулатов</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:lrn1986@gmail.com\"/>\n      <gnome:userid>ruslanizhb</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>John Ralls</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:jralls@ceridwen.us\"/>\n      <gnome:userid>jralls</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <maintainer>\n    <foaf:Person>\n      <foaf:name>Xavier Claessens</foaf:name>\n      <foaf:mbox rdf:resource=\"mailto:xclaesse@gmail.com\"/>\n      <gnome:userid>xclaesse</gnome:userid>\n    </foaf:Person>\n  </maintainer>\n\n  <repository>\n    <GitRepository>\n      <browse rdf:resource=\"https://gitlab.gnome.org/GNOME/glib/\"/>\n      <location rdf:resource=\"https://gitlab.gnome.org/GNOME/glib.git\"/>\n    </GitRepository>\n  </repository>\n\n</Project>\n"
        },
        {
          "name": "glib",
          "type": "tree",
          "content": null
        },
        {
          "name": "gmodule",
          "type": "tree",
          "content": null
        },
        {
          "name": "gobject",
          "type": "tree",
          "content": null
        },
        {
          "name": "gthread",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4macros",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 90.69921875,
          "content": "project('glib', 'c',\n  version : '2.83.2',\n  # NOTE: See the policy in docs/meson-version.md before changing the Meson dependency\n  meson_version : '>= 1.4.0',\n  default_options : [\n    'buildtype=debugoptimized',\n    'warning_level=3',\n    # FIXME: After https://github.com/mesonbuild/meson/issues/13639 is\n    # fixed, change this to\n    # meson.version().version_compare('>=FIXED_MESON_VERSION') ? 'c_std=gnu99,c99' : 'c_std=gnu99'\n    # to avoid a warning on MSVC.\n    'c_std=gnu99'\n  ]\n)\n\nfs = import('fs')\n\ncc = meson.get_compiler('c')\nc_standards = {}\n\nforeach std : ['89', '99', '11', '17']\n  arg = (cc.get_id() == 'msvc' ? '/std:' : '-std=') + 'c' + std\n  if cc.has_argument(arg)\n    c_standards += { std: arg }\n  endif\nendforeach\n\nhave_cxx = add_languages('cpp', native: false, required: get_option('oss_fuzz').enabled())\nif have_cxx\n  cxx = meson.get_compiler('cpp')\n  cxx_standards = {}\n\n  foreach std : ['98', '03', '11', '14', '17', '20', '2b', 'latest']\n    arg = (cxx.get_id() == 'msvc' ? '/std:' : '-std=') + 'c++' + std\n    if cxx.has_argument(arg)\n      cxx_standards += { std: arg }\n    endif\n  endforeach\nendif\n\ncc_can_run = meson.can_run_host_binaries()\n\nif cc.get_argument_syntax() == 'msvc'\n  # Ignore several spurious warnings for things glib does very commonly\n  # (also for clang-cl)\n  add_project_arguments('/FIglib/msvc_recommended_pragmas.h', language : 'c')\nendif\n\nif cc.get_id() == 'msvc'\n  # Set the input and exec encoding to utf-8, like is the default with GCC\n  add_project_arguments(cc.get_supported_arguments(['/utf-8']), language: 'c')\n  # Disable SAFESEH with MSVC for plugins and libs that use external deps that\n  # are built with MinGW\n  noseh_link_args = ['/SAFESEH:NO']\nelse\n  noseh_link_args = []\n  # -mms-bitfields vs -fnative-struct ?\nendif\n\nhost_system = host_machine.system()\n\nif host_system == 'darwin'\n  ios_test_code = '''#include <TargetConditionals.h>\n  #if ! TARGET_OS_IPHONE\n  #error \"Not iOS/tvOS/watchOS/iPhoneSimulator\"\n  #endif'''\n  if cc.compiles(ios_test_code, name : 'building for iOS')\n    host_system = 'ios'\n  endif\nendif\n\nlinux_libc = ''\nif host_system == 'linux'\n  musl_test_code = '''#include <stdlib.h>\n  #if defined __GLIBC__ || defined __UCLIBC__\n  #error \"Not in glibc or uclibc\"\n  #endif'''\n  if cc.compiles(musl_test_code, name : 'building for musl libc')\n    linux_libc = 'musl'\n  endif\nendif\n\nglib_version = meson.project_version()\nglib_api_version = '2.0'\nversion_arr = glib_version.split('.')\nmajor_version = version_arr[0].to_int()\nminor_version = version_arr[1].to_int()\nmicro_version = version_arr[2].to_int()\n\ninterface_age = minor_version.is_odd() ? 0 : micro_version\nbinary_age = 100 * minor_version + micro_version\n\nsoversion = 0\n# Maintain compatibility with previous libtool versioning\n# current = minor * 100 + micro\ncurrent = binary_age - interface_age\nlibrary_version = '@0@.@1@.@2@'.format(soversion, current, interface_age)\ndarwin_versions = [current + 1, '@0@.@1@'.format(current + 1, interface_age)]\n\nconfiginc = include_directories('.')\nglibinc = include_directories('glib')\ngobjectinc = include_directories('gobject')\ngmoduleinc = include_directories('gmodule')\ngioinc = include_directories('gio')\ngirepoinc = include_directories('girepository')\n\nglib_prefix = get_option('prefix')\nglib_bindir = join_paths(glib_prefix, get_option('bindir'))\nglib_libdir = join_paths(glib_prefix, get_option('libdir'))\nglib_libexecdir = join_paths(glib_prefix, get_option('libexecdir'))\nglib_datadir = join_paths(glib_prefix, get_option('datadir'))\nglib_pkgdatadir = join_paths(glib_datadir, 'glib-2.0')\nglib_includedir = join_paths(glib_prefix, get_option('includedir'), 'glib-2.0')\nif get_option('gio_module_dir') != ''\n  glib_giomodulesdir = join_paths(glib_prefix, get_option('gio_module_dir'))\nelse\n  glib_giomodulesdir = join_paths(glib_libdir, 'gio', 'modules')\nendif\n\nif get_option('multiarch')\n  # For multiarch/multilib distributions, install each architecture's\n  # build of executables used in packaging triggers (like gio-querymodules)\n  # to an architecture-dependent location, with a compatibility symlink\n  # in the PATH.\n  multiarch_bindir = get_option('libdir') / 'glib-2.0'\n  multiarch_libexecdir = multiarch_bindir\n  pkgconfig_multiarch_bindir = '${libdir}/glib-2.0'\nelse\n  # For single-architecture distributions, just install them into the PATH\n  # as was traditionally done.\n  multiarch_bindir = get_option('bindir')\n  multiarch_libexecdir = get_option('libexecdir')\n  pkgconfig_multiarch_bindir = '${bindir}'\nendif\n\nglib_pkgconfigreldir = join_paths(glib_libdir, 'pkgconfig')\n\nif get_option('charsetalias_dir') != ''\n  glib_charsetaliasdir = join_paths(glib_prefix, get_option('charsetalias_dir'))\nelse\n  glib_charsetaliasdir = glib_libdir\nendif\n\nglib_localstatedir = glib_prefix / get_option('localstatedir')\n\nif get_option('runtime_dir') != ''\n  glib_runstatedir = glib_prefix / get_option('runtime_dir')\nelse\n  # While we’d normally prefix directories like this with, for example,\n  # glib_localstatedir, `/run` is a bit different in that it’s for runtime state\n  # rather than data files, so it’s typically functionally useless to use a\n  # prefixed version. No other processes will be using it. So we default to the\n  # unprefixed system `/run` directory.\n  glib_runstatedir = '/run'\nendif\n\n# When building glib and gobject-introspection with subprojects, gobject-introspection\n# requires to know the path of the sources and the build directory for the subproject.\n# We provide it here with a variable.\nglib_source_dir = meson.current_source_dir()\nglib_build_dir = meson.current_build_dir()\n\ninstalled_tests_metadir = join_paths(glib_datadir, 'installed-tests', meson.project_name())\ninstalled_tests_execdir = join_paths(glib_libexecdir, 'installed-tests', meson.project_name())\ninstalled_tests_enabled = get_option('installed_tests')\ninstalled_tests_template = files('tests/template.test.in')\ninstalled_tests_template_tap = files('tests/template-tap.test.in')\n\n# Don’t build the tests unless we can run them (either natively, in an exe wrapper, or by installing them for later use)\nbuild_tests = get_option('tests') and (meson.can_run_host_binaries() or installed_tests_enabled)\n\ncommon_test_env = [\n  'G_DEBUG=gc-friendly',\n  'G_ENABLE_DIAGNOSTIC=1',\n  'MALLOC_CHECK_=2',\n]\n\nif get_option('werror')\n  common_test_env += 'LINT_WARNINGS_ARE_ERRORS=1'\nendif\n\n# Note: this may cause the tests output not to be printed when running in\n# verbose mode, see https://github.com/mesonbuild/meson/issues/11185\n# Can be changed it to 'exitcode' if required during development.\ntest_protocol = 'tap'\ntest_timeout = 30\ntest_timeout_slow = 90\n\nadd_test_setup('default',\n  is_default: not meson.is_subproject(),\n  exclude_suites: ['flaky', 'failing'],\n  env: common_test_env,\n  timeout_multiplier: 2,\n)\n\nadd_test_setup('unstable_tests',\n  env: common_test_env,\n  timeout_multiplier: 2,\n  # Empty test setup, used for having different results set for flaky tests\n  # Sadly we can't use (https://github.com/mesonbuild/meson/issues/10934):\n  #suites: ['flaky', 'unstable']\n)\n\nadd_test_setup('thorough',\n  exclude_suites: ['flaky', 'failing', 'performance'],\n  env: common_test_env,\n  timeout_multiplier: 20,\n  exe_wrapper: [find_program('./.gitlab-ci/thorough-test-wrapper.sh', required: true)],\n)\n\n# Allow the tests to be easily run under valgrind using --setup=valgrind\nvalgrind = find_program('valgrind', required: false)\nvalgrind_suppression_file = files('tools' / 'glib.supp')[0]\nvalgrind_suppression_file_install_subdir = 'glib-2.0' / 'valgrind'\n\nif valgrind.found()\n  add_test_setup('valgrind',\n    exclude_suites: [ 'no-valgrind', 'flaky' ],\n    exe_wrapper: [\n      valgrind,\n      '--tool=memcheck',\n      '--error-exitcode=1',\n      '--track-origins=yes',\n      '--leak-check=full',\n      '--leak-resolution=high',\n      '--num-callers=50',\n      '--show-leak-kinds=definite,possible',\n      '--show-error-list=yes',\n      '--suppressions=' + valgrind_suppression_file.full_path(),\n    ],\n    env: common_test_env,\n    timeout_multiplier: 20,\n  )\nendif\n\nadd_project_arguments('-D_GNU_SOURCE', language: 'c')\n\nif host_system == 'qnx'\n  add_project_arguments('-D_QNX_SOURCE', language: 'c')\nelif host_system == 'sunos'\n  add_project_arguments('-D__EXTENSIONS__', language: 'c')\nendif\n\n# dummy/empty dependency() object to declare fallbacks and simpler dependencies\nnot_found = dependency('', required: false)\n\nget_dll_paths_script = not_found\n\nif host_system == 'windows'\n  add_project_arguments(['-DUNICODE', '-D_UNICODE'], language: 'c')\n\n  # Script to obtain paths where the DLLs that we will reside for g-ir-scanner\n  get_dll_paths_script = find_program('tools/grab-gio-dll-paths.py', native: true)\nendif\n\n# Disable strict aliasing;\n# see https://bugzilla.gnome.org/show_bug.cgi?id=791622\nif cc.has_argument('-fno-strict-aliasing')\n  add_project_arguments('-fno-strict-aliasing', language: 'c')\nendif\n\n########################\n# Configuration begins #\n########################\nglib_conf = configuration_data()\nglibconfig_conf = configuration_data()\n\n# accumulated list of defines as we check for them, so we can easily\n# use them later in test programs (autoconf does this automatically)\nglib_conf_prefix = ''\n\nglib_conf.set('GLIB_MAJOR_VERSION', major_version)\nglib_conf.set('GLIB_MINOR_VERSION', minor_version)\nglib_conf.set('GLIB_MICRO_VERSION', micro_version)\nglib_conf.set('GLIB_INTERFACE_AGE', interface_age)\nglib_conf.set('GLIB_BINARY_AGE', binary_age)\nglib_conf.set_quoted('GETTEXT_PACKAGE', 'glib20')\nglib_conf.set_quoted('PACKAGE_BUGREPORT', 'https://gitlab.gnome.org/GNOME/glib/issues/new')\nglib_conf.set_quoted('PACKAGE_NAME', 'glib')\nglib_conf.set_quoted('PACKAGE_STRING', 'glib @0@'.format(meson.project_version()))\nglib_conf.set_quoted('PACKAGE_TARNAME', 'glib')\nglib_conf.set_quoted('PACKAGE_URL', '')\nglib_conf.set_quoted('PACKAGE_VERSION', meson.project_version())\nglib_conf.set('ENABLE_NLS', 1)\n\n# used by the .rc.in files\nglibconfig_conf.set('LT_CURRENT_MINUS_AGE', soversion)\n\nglib_conf.set('_GNU_SOURCE', 1)\n\nif host_system in ['windows', 'darwin']\n  # Poll doesn't work on devices on Windows, and macOS's poll() implementation is known to be broken\n  glib_conf.set('BROKEN_POLL', true)\nendif\n\nif host_system == 'windows' and cc.get_id() != 'msvc' and cc.get_id() != 'clang-cl'\n  # FIXME: Ideally we shouldn't depend on this on Windows and should use\n  # 64 bit capable Windows API that also works with MSVC.\n  # The autotools build did set this for mingw and while meson sets it\n  # for gcc/clang by default, it doesn't do so on Windows.\n  glib_conf.set('_FILE_OFFSET_BITS', 64)\nendif\n\nglib_build_shared = false\nglib_build_static = false\nif get_option('default_library') == 'both'\n  glib_build_static = true\n  glib_build_shared = true\nelif get_option('default_library') == 'static'\n  glib_build_static = true\nelif get_option('default_library') == 'shared'\n  glib_build_shared = true\nendif\n\nglib_build_both = glib_build_static and glib_build_shared\nglib_build_static_only = glib_build_static and not glib_build_shared\nglib_build_shared_only = glib_build_shared and not glib_build_static\n\nif glib_build_shared and glib_build_static and (\n  host_system == 'windows' or host_system == 'cygwin')\n  error('On Windows default_library must be \"shared\" or \"static\" but not \"both\"')\nendif\n\nif glib_build_static_only\n  glibconfig_conf.set('GLIB_STATIC_COMPILATION', '1')\n  glibconfig_conf.set('GOBJECT_STATIC_COMPILATION', '1')\n  glibconfig_conf.set('GIO_STATIC_COMPILATION', '1')\n  glibconfig_conf.set('GMODULE_STATIC_COMPILATION', '1')\n  glibconfig_conf.set('GI_STATIC_COMPILATION', '1')\n  glibconfig_conf.set('G_INTL_STATIC_COMPILATION', '1')\n  glibconfig_conf.set('FFI_STATIC_BUILD', '1')\nendif\n\n# Cygwin glib port maintainers made it clear\n# (via the patches they apply) that they want no\n# part of glib W32 code, therefore we do not define\n# G_PLATFORM_WIN32 for host_system == 'cygwin'.\n# This makes G_PLATFORM_WIN32 a synonym for\n# G_OS_WIN32.\nif host_system == 'windows'\n  glib_os = '''#define G_OS_WIN32\n#define G_PLATFORM_WIN32'''\nelif host_system == 'cygwin'\n  glib_os = '''#define G_OS_UNIX\n#define G_WITH_CYGWIN'''\nelse\n  glib_os = '#define G_OS_UNIX'\nendif\nglibconfig_conf.set('glib_os', glib_os)\n\n# We need to know the CRT being used to determine what .lib files we need on\n# Visual Studio for dependencies that don't normally come with pkg-config files\nvs_crt = 'release'\nvs_crt_opt = get_option('b_vscrt')\nif vs_crt_opt in ['mdd', 'mtd']\n  vs_crt = 'debug'\nelif vs_crt_opt == 'from_buildtype'\n  if get_option('buildtype') == 'debug'\n    vs_crt = 'debug'\n  endif\nendif\n\n# Use debug/optimization flags to determine whether to enable debug or disable\n# cast checks. We have a non-production (debug) build if debug is true and if\n# optimization is 0 or g; otherwise, we have a production build.\nglib_debug_cflags = []\nglib_debug = get_option('glib_debug')\nif (glib_debug.enabled() or (\n    glib_debug.auto() and get_option('debug') and get_option('optimization') in [ '0', 'g' ]))\n  glib_debug_cflags += ['-DG_ENABLE_DEBUG']\n  message('Enabling various debug infrastructure')\nelse\n  glib_debug_cflags += ['-DG_DISABLE_CAST_CHECKS']\n  message('Disabling cast checks')\nendif\n\nif not get_option('glib_assert')\n  glib_debug_cflags += ['-DG_DISABLE_ASSERT']\n  message('Disabling GLib asserts')\nendif\n\nif not get_option('glib_checks')\n  glib_debug_cflags += ['-DG_DISABLE_CHECKS']\n  message('Disabling GLib checks')\nendif\n\nadd_project_arguments(glib_debug_cflags, language: 'c')\n\n# check for header files\n\nheaders = [\n  'alloca.h',\n  'afunix.h',\n  'crt_externs.h',\n  'dirent.h', # MSC does not come with this by default\n  'float.h',\n  'fstab.h',\n  'ftw.h',\n  'grp.h',\n  'inttypes.h',\n  'libproc.h',\n  'limits.h',\n  'linux/netlink.h',\n  'locale.h',\n  'mach/mach_time.h',\n  'memory.h',\n  'mntent.h',\n  'netlink/netlink.h',\n  'poll.h',\n  'pwd.h',\n  'sched.h',\n  'spawn.h',\n  'stdatomic.h',\n  'stdint.h',\n  'stdlib.h',\n  'string.h',\n  'strings.h',\n  'sys/auxv.h',\n  'sys/event.h',\n  'sys/uio.h',\n  'sys/filio.h',\n  'sys/inotify.h',\n  'sys/mkdev.h',\n  'sys/mntctl.h',\n  'sys/mnttab.h',\n  'sys/mount.h',\n  'sys/param.h',\n  'sys/prctl.h',\n  'sys/resource.h',\n  'sys/select.h',\n  'sys/statfs.h',\n  'sys/stat.h',\n  'sys/statvfs.h',\n  'sys/sysctl.h',\n  'sys/time.h', # MSC does not come with this by default\n  'sys/times.h',\n  'sys/types.h',\n  'sys/uio.h',\n  'sys/vfs.h',\n  'sys/vfstab.h',\n  'sys/vmount.h',\n  'sys/wait.h',\n  'syslog.h',\n  'termios.h',\n  'unistd.h',\n  'values.h',\n  'wchar.h',\n  'xlocale.h',\n]\n\nforeach h : headers\n  if cc.has_header(h)\n    define = 'HAVE_' + h.underscorify().to_upper()\n    glib_conf.set(define, 1)\n    glib_conf_prefix = glib_conf_prefix + '#define @0@ 1\\n'.format(define)\n  endif\nendforeach\n\n# FreeBSD includes a malloc.h which always throws compilation error, so we have\n# to use check_header() rather than has_header().\nif cc.check_header('malloc.h')\n  glib_conf.set('HAVE_MALLOC_H', 1)\n  glib_conf_prefix = glib_conf_prefix + '#define HAVE_MALLOC_H 1\\n'\nendif\n\nif glib_conf.has('HAVE_LINUX_NETLINK_H') or glib_conf.has('HAVE_NETLINK_NETLINK_H')\n  glib_conf.set('HAVE_NETLINK', 1)\nendif\n\n# Is statx() supported? Android systems don’t reliably support it as of August 2020.\nstatx_code = '''\n  #ifndef _GNU_SOURCE\n  #define _GNU_SOURCE\n  #endif\n  #include <sys/stat.h>\n  #include <fcntl.h>\n  int main (void)\n  {\n    struct statx stat_buf;\n    return statx (AT_FDCWD, \"/\", AT_SYMLINK_NOFOLLOW, STATX_BASIC_STATS | STATX_BTIME, &stat_buf);\n  }\n  '''\nif host_system != 'android' and cc.compiles(statx_code, name : 'statx() test')\n  glib_conf.set('HAVE_STATX', 1)\nendif\n\nif glib_conf.has('HAVE_LOCALE_H')\n  if cc.has_header_symbol('locale.h', 'LC_MESSAGES')\n    glib_conf.set('HAVE_LC_MESSAGES', 1)\n  endif\nendif\n\nstruct_stat_blkprefix = '''\n#include <sys/types.h>\n#include <sys/stat.h>\n#ifdef HAVE_UNISTD_H\n#include <unistd.h>\n#endif\n#ifdef HAVE_SYS_STATFS_H\n#include <sys/statfs.h>\n#endif\n#ifdef HAVE_SYS_PARAM_H\n#include <sys/param.h>\n#endif\n#ifdef HAVE_SYS_MOUNT_H\n#include <sys/mount.h>\n#endif\n'''\n\nstruct_members = [\n  [ 'stat', 'st_mtimensec' ],\n  [ 'stat', 'st_mtim.tv_nsec' ],\n  [ 'stat', 'st_atimensec' ],\n  [ 'stat', 'st_atim.tv_nsec' ],\n  [ 'stat', 'st_ctimensec' ],\n  [ 'stat', 'st_ctim.tv_nsec' ],\n  [ 'stat', 'st_birthtime' ],\n  [ 'stat', 'st_birthtimensec' ],\n  [ 'stat', 'st_birthtim' ],\n  [ 'stat', 'st_birthtim.tv_nsec' ],\n  [ 'stat', 'st_blksize', struct_stat_blkprefix ],\n  [ 'stat', 'st_blocks', struct_stat_blkprefix ],\n  [ 'statfs', 'f_fstypename', struct_stat_blkprefix ],\n  [ 'statfs', 'f_bavail', struct_stat_blkprefix ],\n  [ 'dirent', 'd_type', '''#include <sys/types.h>\n                           #include <dirent.h>''' ],\n  [ 'statvfs', 'f_basetype', '#include <sys/statvfs.h>' ],\n  [ 'statvfs', 'f_fstypename', '#include <sys/statvfs.h>' ],\n  [ 'statvfs', 'f_type', '#include <sys/statvfs.h>' ],\n  [ 'tm', 'tm_gmtoff', '#include <time.h>' ],\n  [ 'tm', '__tm_gmtoff', '#include <time.h>' ],\n]\n\nforeach m : struct_members\n  header_check_prefix = glib_conf_prefix\n  if m.length() == 3\n    header_check_prefix = header_check_prefix + m[2]\n  else\n    header_check_prefix = header_check_prefix + '#include <sys/stat.h>'\n  endif\n  # Reimplement cc.has_member() to workaround compiler warning\n  # FIXME: https://github.com/mesonbuild/meson/pull/12818\n  code = header_check_prefix + '''\n    void bar(void) {\n        struct ''' + m[0] + ''' foo;\n        (void) ( foo.''' + m[1] + ''' );\n        (void) foo;\n    }\n    '''\n  if cc.compiles(code, name : 'type \"struct ' + m[0] + '\" has member \"' + m[1] + '\"')\n    define = 'HAVE_STRUCT_@0@_@1@'.format(m[0].to_upper(), m[1].underscorify().to_upper())\n    glib_conf.set(define, 1)\n    glib_conf_prefix = glib_conf_prefix + '#define @0@ 1\\n'.format(define)\n  else\n  endif\nendforeach\n\n# Compiler flags\nif cc.get_id() == 'gcc' or cc.get_id() == 'clang'\n  warning_common_args = [\n    '-Wduplicated-branches',\n    '-Wfloat-conversion',\n    '-Wimplicit-fallthrough',\n    '-Wmisleading-indentation',\n    '-Wmissing-field-initializers',\n    '-Wnonnull',\n    '-Wnull-dereference',\n    '-Wunused',\n    # Due to maintained deprecated code, we do not want to see unused parameters\n    '-Wno-unused-parameter',\n    # Due to pervasive use of things like GPOINTER_TO_UINT(), we do not support\n    # building with -Wbad-function-cast.\n    '-Wno-cast-function-type',\n    # Due to function casts through (void*) we cannot support -Wpedantic:\n    # ./docs/toolchain-requirements.md#Function_pointer_conversions.\n    '-Wno-pedantic',\n    # A zero-length format string shouldn't be considered an issue.\n    '-Wno-format-zero-length',\n    # We explicitly require variadic macros\n    '-Wno-variadic-macros',\n    '-Werror=format=2',\n    '-Werror=init-self',\n    '-Werror=missing-include-dirs',\n    '-Werror=pointer-arith',\n    '-Werror=unused-result',\n  ]\n\n  warning_c_args = warning_common_args + [\n    '-Wstrict-prototypes',\n    # Due to pervasive use of things like GPOINTER_TO_UINT(), we do not support\n    # building with -Wbad-function-cast.\n    '-Wno-bad-function-cast',\n    '-Werror=implicit-function-declaration',\n    '-Werror=missing-prototypes',\n    '-Werror=pointer-sign',\n    '-Wno-string-plus-int',\n    # We require a compiler that supports C11 even though it's not yet a\n    # strict requirement, so allow typedef redefinition not to break clang and\n    # older gcc versions.\n    '-Wno-typedef-redefinition',\n  ]\n  warning_cxx_args = warning_common_args\n  warning_objc_args = warning_c_args\n  warning_c_link_args = [\n    '-Wl,-z,nodelete',\n  ]\n  if get_option('bsymbolic_functions')\n    warning_c_link_args += ['-Wl,-Bsymbolic-functions']\n  endif\nelif cc.get_id() == 'msvc'\n  warning_c_args = [\n    # If a warning is completely useless and spammy, use '/wdXXXX' to suppress it\n    # If a warning is harmless but hard to fix, use '/woXXXX' so it's shown once\n    # NOTE: Only add warnings here if you are sure they're spurious\n    '/wo4057', # 'operator': 'identifier1' differs in indirection to slightly different base types from 'identifier2'\n    '/wd4068', # unknown pragma\n    '/wo4090', # 'operation': different 'modifier' qualifiers\n    '/wd4100', # 'identifier': unreferenced formal parameter\n    '/wd4116', # unnamed type definition in parentheses\n    '/wo4125', # decimal digit terminates octal escape sequence\n    '/wd4127', # conditional expression is constant\n    '/wd4146', # unary minus operator applied to unsigned type, result still unsigned\n    '/wd4152', # nonstandard extension, function/data pointer conversion in expression\n    '/wd4201', # nonstandard extension used: nameless struct/union\n    '/wd4232', # nonstandard extension used: 'identifier': address of dllimport 'dllimport' is not static, identity not guaranteed\n    '/wo4245', # 'conversion_type': conversion from 'type1' to 'type2', signed/unsigned mismatch\n    '/wo4267', # 'variable': conversion from 'size_t' to 'type', possible loss of data\n    '/wd4334', # 'shift_operator': result of 32-bit shift implicitly converted to 64 bits (was 64-bit shift intended?)\n    '/wo4389', # 'operator': signed/unsigned mismatch\n    '/wo4702', # unreachable code\n    '/wd4706', # assignment within conditional expression\n  ]\n\n  warning_cxx_args = []\n  warning_objc_args = []\n  warning_c_link_args = []\nelse\n  warning_c_args = []\n  warning_cxx_args = []\n  warning_objc_args = []\n  warning_c_link_args = []\nendif\n\nadd_project_arguments(cc.get_supported_arguments(warning_c_args), language: 'c')\nif have_cxx\n  add_project_arguments(cxx.get_supported_arguments(warning_cxx_args), language: 'cpp')\nendif\n\n# FIXME: We cannot build some of the GResource tests with -z nodelete, which\n# means we cannot use that flag in add_project_link_arguments(), and must add\n# it to the relevant targets manually. We do the same with -Bsymbolic-functions\n# because that is what the autotools build did.\n# See https://github.com/mesonbuild/meson/pull/3520 for a way to eventually\n# improve this.\nglib_link_flags = cc.get_supported_link_arguments(warning_c_link_args)\n\nglib_sanitizers = get_option('b_sanitize').split(',')\nif glib_sanitizers == ['none']\n  glib_sanitizers = []\nendif\n\n# Windows SDK requirements and checks\nif host_system == 'windows'\n  # Check whether we're building for UWP apps\n  code = '''\n  #include <windows.h>\n  #if !(WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP) && !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP))\n  #error \"Not building for UWP\"\n  #endif'''\n  if cc.compiles(code, name : 'building for UWP')\n    glib_conf.set('G_WINAPI_ONLY_APP', true)\n    # We require Windows 10+ on WinRT\n    glib_conf.set('_WIN32_WINNT', '0x0A00')\n    uwp_gio_deps = [cc.find_library('shcore'),\n                    cc.find_library('runtimeobject')]\n  else\n    # We require Windows 7+ on Win32\n    glib_conf.set('_WIN32_WINNT', '0x0601')\n    uwp_gio_deps = []\n  endif\nendif\n\nfunctions = [\n  'accept4',\n  'close_range',\n  'copy_file_range',\n  'endmntent',\n  'endservent',\n  'epoll_create1',\n  'faccessat',\n  'fallocate',\n  'fchmod',\n  'fchown',\n  'fdwalk',\n  'free_aligned_sized',\n  'free_sized',\n  'fsync',\n  'ftruncate64',\n  'getauxval',\n  'getc_unlocked',\n  'getfsstat',\n  'getgrgid_r',\n  'getmntent_r',\n  'getpwuid_r',\n  'getresuid',\n  'getvfsstat',\n  'gmtime_r',\n  'hasmntopt',\n  'inotify_init1',\n  'issetugid',\n  'kevent',\n  'kqueue',\n  'lchmod',\n  'lchown',\n  'link',\n  'localtime_r',\n  'lstat',\n  'mbrtowc',\n  'memalign',\n  'memmem',\n  'mmap',\n  'newlocale',\n  'pipe2',\n  'poll',\n  'prlimit',\n  'readlink',\n  'recvmmsg',\n  'sendmmsg',\n  'setenv',\n  'setmntent',\n  'strerror_r',\n  'strnlen',\n  'strsignal',\n  'strtod_l',\n  'strtoll_l',\n  'strtoull_l',\n  'symlink',\n  'timegm',\n  'unsetenv',\n  'uselocale',\n  'utimes',\n  'utimensat',\n  'valloc',\n  'vasprintf',\n  'vsnprintf',\n  'wcrtomb',\n  'wcslen',\n  'wcsnlen',\n  'sysctlbyname',\n]\n\n# _NSGetEnviron is available on iOS too, but its usage gets apps rejected from\n# the app store since it's considered 'private API'\nif host_system == 'darwin'\n  functions += ['_NSGetEnviron']\nendif\n\nif glib_conf.has('HAVE_SYS_STATVFS_H')\n  functions += ['statvfs']\nelse\n  have_func_statvfs = false\nendif\nif glib_conf.has('HAVE_SYS_STATFS_H') or glib_conf.has('HAVE_SYS_MOUNT_H')\n  functions += ['statfs']\nelse\n  have_func_statfs = false\nendif\nif glib_conf.has('HAVE_SYS_PRCTL_H')\n  functions += ['prctl']\nelse\n  have_func_prctl = false\nendif\n\nif host_system == 'windows'\n  iphlpapi_dep = cc.find_library('iphlpapi')\n  iphlpapi_funcs = ['if_nametoindex', 'if_indextoname']\n  foreach ifunc : iphlpapi_funcs\n    iphl_prefix =  '''#define _WIN32_WINNT @0@\n      #include <winsock2.h>\n      #include <iphlpapi.h>'''.format(glib_conf.get('_WIN32_WINNT'))\n    if cc.has_function(ifunc,\n                       prefix : iphl_prefix,\n                       dependencies : iphlpapi_dep)\n      idefine = 'HAVE_' + ifunc.underscorify().to_upper()\n      glib_conf.set(idefine, 1)\n      glib_conf_prefix = glib_conf_prefix + '#define @0@ 1\\n'.format(idefine)\n      set_variable('have_func_' + ifunc, true)\n    else\n      set_variable('have_func_' + ifunc, false)\n    endif\n  endforeach\nelse\n  functions += ['if_indextoname', 'if_nametoindex']\nendif\n\n# AIX splice is something else\nif host_system != 'aix'\n  functions += ['splice']\nendif\n\nforeach f : functions\n  if cc.has_function(f)\n    define = 'HAVE_' + f.underscorify().to_upper()\n    glib_conf.set(define, 1)\n    glib_conf_prefix = glib_conf_prefix + '#define @0@ 1\\n'.format(define)\n    set_variable('have_func_' + f, true)\n  else\n    set_variable('have_func_' + f, false)\n  endif\nendforeach\n\n# Export the information about free_sized() so we can correctly define a macro\n# wrapper around g_free()/g_free_sized() depending on whether it’s available\nglibconfig_conf.set('G_HAVE_FREE_SIZED', have_func_free_sized)\n\n# Check that stpcpy() is usable; must use header.\n# See:\n# https://github.com/mesonbuild/meson/issues/5628.\nif cc.has_function('stpcpy', prefix : '#include <string.h>')\n  glib_conf.set('HAVE_STPCPY', 1)\nendif\n\nif cc.has_function('memalign', prefix: '#include <stdlib.h>\\n#include <malloc.h>')\n  glib_conf.set('HAVE_MEMALIGN', 1)\nendif\n\n# For example on Openbsd, getservbyname_r() has a different signature.\n# https://man.openbsd.org/getservbyname.3\nif cc.compiles('''#include <netdb.h>\n               int main (int argc, char ** argv) {\n                 int (*fcn)(const char *,\n                            const char *,\n                            struct servent *,\n                            char *,\n                            size_t,\n                            struct servent **) = getservbyname_r;\n                 (void) fcn;\n                 return 0;\n               }''',\n               name : 'getservbyname_r()',\n               args: '-Werror=incompatible-pointer-types')\n  glib_conf.set('HAVE_GETSERVBYNAME_R', 1)\nendif\n\nif cc.has_function('_aligned_malloc', prefix: '#include <malloc.h>')\n  glib_conf.set('HAVE__ALIGNED_MALLOC', 1)\nendif\n\nif host_system != 'windows' and cc.has_function('aligned_alloc', prefix: '#include <stdlib.h>')\n  glib_conf.set('HAVE_ALIGNED_ALLOC', 1)\nendif\n\nif host_system != 'windows' and cc.has_function('posix_memalign', prefix: '#include <stdlib.h>')\n  glib_conf.set('HAVE_POSIX_MEMALIGN', 1)\nendif\n\n# Check that posix_spawn() is usable; must use header\nif cc.has_function('posix_spawn', prefix : '#include <spawn.h>')\n  glib_conf.set('HAVE_POSIX_SPAWN', 1)\nendif\n\n# Check whether strerror_r returns char *\nif have_func_strerror_r\n  if cc.compiles('''#define _GNU_SOURCE\n                    #include <string.h>\n                    int func (void) {\n                      char error_string[256];\n                      char *ptr = strerror_r (-2, error_string, 256);\n                      char c = *strerror_r (-2, error_string, 256);\n                      return c != 0 && ptr != (void*) 0L;\n                    }\n                 ''',\n                 name : 'strerror_r() returns char *')\n    glib_conf.set('STRERROR_R_CHAR_P', 1,\n                  description: 'Defined if strerror_r returns char *')\n  endif\nendif\n\n# Special-case these functions that have alternative names on Windows/MSVC\nif cc.has_function('snprintf') or cc.has_header_symbol('stdio.h', 'snprintf')\n  glib_conf.set('HAVE_SNPRINTF', 1)\n  glib_conf_prefix = glib_conf_prefix + '#define HAVE_SNPRINTF 1\\n'\nelif cc.has_function('_snprintf') or cc.has_header_symbol('stdio.h', '_snprintf')\n  hack_define = '1\\n#define snprintf _snprintf'\n  glib_conf.set('HAVE_SNPRINTF', hack_define)\n  glib_conf_prefix = glib_conf_prefix + '#define HAVE_SNPRINTF ' + hack_define\nendif\n\nif cc.has_function('strcasecmp', prefix: '#include <strings.h>')\n  glib_conf.set('HAVE_STRCASECMP', 1)\n  glib_conf_prefix = glib_conf_prefix + '#define HAVE_STRCASECMP 1\\n'\nelif cc.has_function('_stricmp')\n  hack_define = '1\\n#define strcasecmp _stricmp'\n  glib_conf.set('HAVE_STRCASECMP', hack_define)\n  glib_conf_prefix = glib_conf_prefix + '#define HAVE_STRCASECMP ' + hack_define\nendif\n\nif cc.has_function('strncasecmp', prefix: '#include <strings.h>')\n  glib_conf.set('HAVE_STRNCASECMP', 1)\n  glib_conf_prefix = glib_conf_prefix + '#define HAVE_STRNCASECMP 1\\n'\nelif cc.has_function('_strnicmp')\n  hack_define = '1\\n#define strncasecmp _strnicmp'\n  glib_conf.set('HAVE_STRNCASECMP', hack_define)\n  glib_conf_prefix = glib_conf_prefix + '#define HAVE_STRNCASECMP ' + hack_define\nendif\n\nif cc.has_header_symbol('sys/sysmacros.h', 'major')\n  glib_conf.set('MAJOR_IN_SYSMACROS', 1)\nelif cc.has_header_symbol('sys/mkdev.h', 'major')\n  glib_conf.set('MAJOR_IN_MKDEV', 1)\nelif cc.has_header_symbol('sys/types.h', 'major')\n  glib_conf.set('MAJOR_IN_TYPES', 1)\nendif\n\nif cc.has_header_symbol('dlfcn.h', 'RTLD_LAZY')\n  glib_conf.set('HAVE_RTLD_LAZY', 1)\nendif\n\nif cc.has_header_symbol('dlfcn.h', 'RTLD_NOW')\n  glib_conf.set('HAVE_RTLD_NOW', 1)\nendif\n\nif cc.has_header_symbol('dlfcn.h', 'RTLD_GLOBAL')\n  glib_conf.set('HAVE_RTLD_GLOBAL', 1)\nendif\n\nhave_rtld_next = false\nif cc.has_header_symbol('dlfcn.h', 'RTLD_NEXT', args: '-D_GNU_SOURCE')\n  have_rtld_next = true\n  glib_conf.set('HAVE_RTLD_NEXT', 1)\nendif\n\nif cc.has_type('loff_t', prefix: '#include <sys/types.h>')\n  glib_conf.set('HAVE_LOFF_T', 1)\nendif\n\n# Check whether to use statfs or statvfs\n# Some systems have both statfs and statvfs, pick the most \"native\" for these\nif have_func_statfs and have_func_statvfs\n  # on solaris and irix, statfs doesn't even have the f_bavail field\n  if not glib_conf.has('HAVE_STRUCT_STATFS_F_BAVAIL')\n    have_func_statfs = false\n  else\n    # at least on linux, statfs is the actual syscall\n    have_func_statvfs = false\n  endif\nendif\nif have_func_statfs\n  glib_conf.set('USE_STATFS', 1)\n  stat_func_to_use = 'statfs'\nelif have_func_statvfs\n  glib_conf.set('USE_STATVFS', 1)\n  stat_func_to_use = 'statvfs'\nelse\n  stat_func_to_use = 'neither'\nendif\nmessage('Checking whether to use statfs or statvfs .. ' + stat_func_to_use)\n\nif host_system == 'linux'\n  if cc.has_function('mkostemp',\n                     prefix: '''#define _GNU_SOURCE\n                                #include <stdlib.h>''')\n    glib_conf.set('HAVE_MKOSTEMP', 1)\n  endif\nendif\n\nosx_ldflags = []\nglib_have_carbon = false\nglib_have_cocoa = false\nif host_system == 'darwin'\n  add_languages('objc', native: false, required: true)\n  objcc = meson.get_compiler('objc')\n  if not objcc.compiles('''#include <AvailabilityMacros.h>\n                           #if MAC_OS_X_VERSION_MIN_REQUIRED < 101300\n                           #error message \"GLib requires macOS 10.13 or later.\"\n                           #endif''',\n                         name : 'macOS 10.13 or later')\n    error('GLib requires macOS 10.13 or later.')\n  endif\n\n  add_project_arguments(objcc.get_supported_arguments(warning_objc_args), language: 'objc')\n\n  # Mac OS X Carbon support\n  glib_have_carbon = objcc.compiles('''#include <Carbon/Carbon.h>\n                                       #include <CoreServices/CoreServices.h>''',\n                                    name : 'Mac OS X Carbon support')\n\n  if glib_have_carbon\n    glib_conf.set('HAVE_CARBON', true)\n  endif\n\n  # Mac OS X Cocoa support\n  glib_have_cocoa = objcc.compiles('''#include <Cocoa/Cocoa.h>\n                                      #ifdef GNUSTEP_BASE_VERSION\n                                      #error \"Detected GNUstep, not Cocoa\"\n                                      #endif''',\n                                   name : 'Mac OS X Cocoa support')\n\n  if glib_have_cocoa\n    glib_conf.set('HAVE_COCOA', true)\n    osx_ldflags += ['-Wl,-framework,Foundation', '-Wl,-framework,AppKit']\n  endif\nendif\n\nif host_system == 'qnx'\n  glib_conf.set('HAVE_QNX', 1)\nendif\n\n# Check for futex(2)\nif cc.compiles('''#include <linux/futex.h>\n               #include <sys/syscall.h>\n               #include <unistd.h>\n               int main (int argc, char ** argv) {\n                 syscall (__NR_futex, NULL, FUTEX_WAKE, FUTEX_WAIT);\n                 return 0;\n               }''', name : 'futex(2) system call')\n  glib_conf.set('HAVE_FUTEX', 1)\nendif\nif cc.compiles('''#include <linux/futex.h>\n               #include <sys/syscall.h>\n               #include <unistd.h>\n               int main (int argc, char ** argv) {\n                 syscall (__NR_futex_time64, NULL, FUTEX_WAKE, FUTEX_WAIT);\n                 return 0;\n               }''', name : 'futex_time64(2) system call')\n  glib_conf.set('HAVE_FUTEX_TIME64', 1)\nendif\n\n# Check for eventfd(2)\nif cc.links('''#include <sys/eventfd.h>\n               #include <unistd.h>\n               int main (int argc, char ** argv) {\n                 eventfd (0, EFD_CLOEXEC);\n                 return 0;\n               }''', name : 'eventfd(2) system call')\n  glib_conf.set('HAVE_EVENTFD', 1)\nendif\n\n# Check for ppoll(2)\nif cc.links('''#define _GNU_SOURCE\n               #include <poll.h>\n               #include <stddef.h>\n               int main (int argc, char ** argv) {\n                 struct pollfd fds[1] = {{0}};\n                 struct timespec ts = {0};\n                 ppoll (fds, 1, NULL, NULL);\n                 return 0;\n               }''', name : 'ppoll(2) system call')\n  glib_conf.set('HAVE_PPOLL', 1)\nendif\n\n# Check for pidfd_open(2)\nif cc.links('''#include <sys/syscall.h>\n               #include <sys/wait.h>\n               #include <linux/wait.h>\n               #include <unistd.h>\n               int main (int argc, char ** argv) {\n                 siginfo_t child_info = { 0, };\n                 syscall (SYS_pidfd_open, 0, 0);\n                 waitid (P_PIDFD, 0, &child_info, WEXITED | WNOHANG);\n                 return 0;\n               }''', name : 'pidfd_open(2) system call')\n  glib_conf.set('HAVE_PIDFD', 1)\nendif\n\n# Check for __uint128_t (gcc) by checking for 128-bit division\nuint128_t_src = '''int main() {\nstatic __uint128_t v1 = 100;\nstatic __uint128_t v2 = 10;\nstatic __uint128_t u;\nu = v1 / v2;\n(void) u;\n}'''\nif cc.compiles(uint128_t_src, name : '__uint128_t available')\n  glib_conf.set('HAVE_UINT128_T', 1)\nendif\n\nclock_gettime_test_code = '''\n  #include <time.h>\n  struct timespec t;\n  int main (int argc, char ** argv) {\n    return clock_gettime(CLOCK_REALTIME, &t);\n  }'''\nlibrt = []\nif cc.links(clock_gettime_test_code, name : 'clock_gettime')\n  glib_conf.set('HAVE_CLOCK_GETTIME', 1)\nelif cc.links(clock_gettime_test_code, args : '-lrt', name : 'clock_gettime in librt')\n  glib_conf.set('HAVE_CLOCK_GETTIME', 1)\n  librt = cc.find_library('rt')\nendif\n\ndlopen_dlsym_test_code = '''\n#include <dlfcn.h>\n#include <stdio.h>\nint r;\nint glib_underscore_test (void) { return 42; }\nint main (int argc, char ** argv) {\n  void *f1 = (void*)0, *f2 = (void*)0, *handle;\n  handle = dlopen ((void*)0, 0);\n  if (handle) {\n    f1 = dlsym (handle, \"glib_underscore_test\");\n    f2 = dlsym (handle, \"_glib_underscore_test\");\n  }\n  r = (!f2 || f1) ? puts (\"1\") : puts (\"0\");\n  return r > 0 ? 0 : r;\n}'''\nlibdl_dep = []\nif cc.links(dlopen_dlsym_test_code, name : 'dlopen() and dlsym() in system libraries')\n  have_dlopen_dlsym = true\nelif cc.links(dlopen_dlsym_test_code, args : '-ldl', name : 'dlopen() and dlsym() in libdl')\n  have_dlopen_dlsym = true\n  libdl_dep = cc.find_library('dl')\nelse\n  have_dlopen_dlsym = false\nendif\n\n# if statfs() takes 2 arguments (Posix) or 4 (Solaris)\nif have_func_statfs\n  if cc.compiles(glib_conf_prefix + '''\n                 #include <unistd.h>\n                        #ifdef HAVE_SYS_PARAM_H\n                        #include <sys/param.h>\n                        #endif\n                        #ifdef HAVE_SYS_VFS_H\n                        #include <sys/vfs.h>\n                        #endif\n                        #ifdef HAVE_SYS_MOUNT_H\n                        #include <sys/mount.h>\n                        #endif\n                        #ifdef HAVE_SYS_STATFS_H\n                        #include <sys/statfs.h>\n                        #endif\n                        void some_func (void) {\n                          struct statfs st;\n                          statfs(\"/\", &st);\n                        }''', name : 'number of arguments to statfs() (n=2)')\n    glib_conf.set('STATFS_ARGS', 2)\n  elif cc.compiles(glib_conf_prefix + '''\n                   #include <unistd.h>\n                          #ifdef HAVE_SYS_PARAM_H\n                          #include <sys/param.h>\n                          #endif\n                          #ifdef HAVE_SYS_VFS_H\n                          #include <sys/vfs.h>\n                          #endif\n                          #ifdef HAVE_SYS_MOUNT_H\n                          #include <sys/mount.h>\n                          #endif\n                          #ifdef HAVE_SYS_STATFS_H\n                          #include <sys/statfs.h>\n                          #endif\n                          void some_func (void) {\n                            struct statfs st;\n                            statfs(\"/\", &st, sizeof (st), 0);\n                          }''', name : 'number of arguments to statfs() (n=4)')\n    glib_conf.set('STATFS_ARGS', 4)\n  else\n    error('Unable to determine number of arguments to statfs()')\n  endif\nendif\n\n# open takes O_DIRECTORY as an option\n#AC_MSG_CHECKING([])\nif cc.compiles('''#include <fcntl.h>\n                  #include <sys/types.h>\n                  #include <sys/stat.h>\n                  void some_func (void) {\n                    open(\".\", O_DIRECTORY, 0);\n                  }''', name : 'open() option O_DIRECTORY')\n  glib_conf.set('HAVE_OPEN_O_DIRECTORY', 1)\nendif\n\n# fcntl takes F_FULLFSYNC as an option\n# See https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/fsync.2.html\nif cc.compiles('''#include <fcntl.h>\n                  #include <sys/types.h>\n                  #include <sys/stat.h>\n                  void some_func (void) {\n                    fcntl(0, F_FULLFSYNC, 0);\n                  }''', name : 'fcntl() option F_FULLFSYNC')\n  glib_conf.set('HAVE_FCNTL_F_FULLFSYNC', 1)\nendif\n\n# Check whether there is a vsnprintf() function with C99 semantics installed.\n# (similar tests to AC_FUNC_VSNPRINTF_C99)\n# Check whether there is a snprintf() function with C99 semantics installed.\n# (similar tests to AC_FUNC_SNPRINTF_C99)\n# Check whether there is a printf() function with Unix98 semantics installed.\n# (similar tests to AC_FUNC_PRINTF_UNIX98)\nhave_good_vsnprintf = false\nhave_good_snprintf = false\nhave_good_printf = false\n\nif host_system == 'windows' and (cc.get_id() == 'msvc' or cc.get_id() == 'clang-cl')\n  # Unfortunately the Visual Studio 2015+ implementations of C99-style\n  # snprintf and vsnprintf don't seem to be quite good enough.\n  # (Sorry, I don't know exactly what is the problem,\n  # but it is related to floating point formatting and decimal point vs. comma.)\n  # The simple tests in AC_FUNC_VSNPRINTF_C99 and AC_FUNC_SNPRINTF_C99 aren't\n  # rigorous enough to notice, though.\n  glib_conf.set('HAVE_C99_SNPRINTF', false)\n  glib_conf.set('HAVE_C99_VSNPRINTF', false)\n  glib_conf.set('HAVE_UNIX98_PRINTF', false)\nelif not cc_can_run and host_system in ['ios', 'darwin']\n  # All these are true when compiling natively on macOS, so we should use good\n  # defaults when building for iOS and tvOS.\n  glib_conf.set('HAVE_C99_SNPRINTF', true)\n  glib_conf.set('HAVE_C99_VSNPRINTF', true)\n  glib_conf.set('HAVE_UNIX98_PRINTF', true)\n  have_good_vsnprintf = true\n  have_good_snprintf = true\n  have_good_printf = true\nelse\n  vsnprintf_c99_test_code = '''\n#include <stdio.h>\n#include <stdarg.h>\n#include <stdlib.h>\n\nint\ndoit(char * s, ...)\n{\n  char buffer[32];\n  va_list args;\n  int r;\n\n  va_start(args, s);\n  r = vsnprintf(buffer, 5, s, args);\n  va_end(args);\n\n  if (r != 7)\n    exit(1);\n\n  /* AIX 5.1 and Solaris seems to have a half-baked vsnprintf()\n     implementation. The above will return 7 but if you replace\n     the size of the buffer with 0, it borks! */\n  va_start(args, s);\n  r = vsnprintf(buffer, 0, s, args);\n  va_end(args);\n\n  if (r != 7)\n    exit(1);\n\n  exit(0);\n}\n\nint\nmain(void)\n{\n  doit(\"1234567\");\n  exit(1);\n}'''\n\n  if cc_can_run\n    rres = cc.run(vsnprintf_c99_test_code, name : 'C99 vsnprintf')\n    if rres.compiled() and rres.returncode() == 0\n      glib_conf.set('HAVE_C99_VSNPRINTF', 1)\n      have_good_vsnprintf = true\n    endif\n  else\n      have_good_vsnprintf = meson.get_external_property('have_c99_vsnprintf', false)\n      glib_conf.set('HAVE_C99_VSNPRINTF', have_good_vsnprintf)\n  endif\n\n  snprintf_c99_test_code = '''\n#include <stdio.h>\n#include <stdarg.h>\n#include <stdlib.h>\n\nint\ndoit()\n{\n  char buffer[32];\n  int r;\n\n  r = snprintf(buffer, 5, \"1234567\");\n\n  if (r != 7)\n    exit(1);\n\n  r = snprintf(buffer, 0, \"1234567\");\n\n  if (r != 7)\n    exit(1);\n\n  r = snprintf(NULL, 0, \"1234567\");\n\n  if (r != 7)\n    exit(1);\n\n  exit(0);\n}\n\nint\nmain(void)\n{\n  doit();\n  exit(1);\n}'''\n\n  if cc_can_run\n    rres = cc.run(snprintf_c99_test_code, name : 'C99 snprintf')\n    if rres.compiled() and rres.returncode() == 0\n      glib_conf.set('HAVE_C99_SNPRINTF', 1)\n      have_good_snprintf = true\n    endif\n  else\n      have_good_snprintf = meson.get_external_property('have_c99_snprintf', false)\n      glib_conf.set('HAVE_C99_SNPRINTF', have_good_snprintf)\n  endif\n\n  printf_unix98_test_code = '''\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint\nmain (void)\n{\n  char buffer[128];\n\n  sprintf (buffer, \"%2\\$d %3\\$d %1\\$d\", 1, 2, 3);\n  if (strcmp (\"2 3 1\", buffer) == 0)\n    exit (0);\n  exit (1);\n}'''\n\n  if cc_can_run\n    rres = cc.run(printf_unix98_test_code, name : 'Unix98 printf positional parameters')\n    if rres.compiled() and rres.returncode() == 0\n      glib_conf.set('HAVE_UNIX98_PRINTF', 1)\n      have_good_printf = true\n    endif\n  else\n      have_good_printf = meson.get_external_property('have_unix98_printf', false)\n      glib_conf.set('HAVE_UNIX98_PRINTF', have_good_printf)\n  endif\nendif\n\nif host_system == 'windows'\n  glib_conf.set_quoted('EXEEXT', '.exe')\nelse\n  glib_conf.set('EXEEXT', '')\nendif\n\n# Our printf is 'good' only if vsnpintf()/snprintf()/printf() supports C99 well enough\nuse_system_printf = have_good_vsnprintf and have_good_snprintf and have_good_printf\nglib_conf.set('USE_SYSTEM_PRINTF', use_system_printf)\nglibconfig_conf.set('GLIB_USING_SYSTEM_PRINTF', use_system_printf)\n\nif not use_system_printf\n  # gnulib has vasprintf so override the previous check\n  glib_conf.set('HAVE_VASPRINTF', 1)\nendif\n\n# Check for nl_langinfo and CODESET\nif cc.links('''#include <langinfo.h>\n               int main (int argc, char ** argv) {\n                 char *codeset = nl_langinfo (CODESET);\n                 (void) codeset;\n                 return 0;\n               }''', name : 'nl_langinfo and CODESET')\n  glib_conf.set('HAVE_LANGINFO_CODESET', 1)\n  glib_conf.set('HAVE_CODESET', 1)\nendif\n\n# Check for nl_langinfo and LC_TIME parts that are needed in gdatetime.c\nhave_langinfo_time = false\nif cc.links('''#include <langinfo.h>\n               int main (int argc, char ** argv) {\n                 char *str;\n                 str = nl_langinfo (PM_STR);\n                 str = nl_langinfo (D_T_FMT);\n                 str = nl_langinfo (D_FMT);\n                 str = nl_langinfo (T_FMT);\n                 str = nl_langinfo (T_FMT_AMPM);\n                 str = nl_langinfo (MON_1);\n                 str = nl_langinfo (ABMON_12);\n                 str = nl_langinfo (DAY_1);\n                 str = nl_langinfo (ABDAY_7);\n                 (void) str;\n                 return 0;\n               }''', name : 'nl_langinfo (PM_STR)')\n  have_langinfo_time = true\n  glib_conf.set('HAVE_LANGINFO_TIME', 1)\nendif\n\n# Linux glibc supports ERA, but FreeBSD and macOS don’t\nif cc.links('''#include <langinfo.h>\n               int main (int argc, char **argv) {\n                 char *str;\n                 str = nl_langinfo (ERA);\n                 str = nl_langinfo (ERA_D_T_FMT);\n                 str = nl_langinfo (ERA_D_FMT);\n                 str = nl_langinfo (ERA_T_FMT);\n                 str = nl_langinfo (_NL_TIME_ERA_NUM_ENTRIES);\n                 (void) str;\n                 return 0;\n               }''', name : 'nl_langinfo (ERA)')\n  glib_conf.set('HAVE_LANGINFO_ERA', 1)\n  if not have_langinfo_time\n    error('nl_langinfo(ERA) is supported but more basic nl_langinfo() functionality like PM_STR is not')\n  endif\nendif\n\nif cc.links('''#include <langinfo.h>\n               int main (int argc, char ** argv) {\n                 char *str;\n                 str = nl_langinfo (_NL_CTYPE_OUTDIGIT0_MB);\n                 str = nl_langinfo (_NL_CTYPE_OUTDIGIT1_MB);\n                 str = nl_langinfo (_NL_CTYPE_OUTDIGIT2_MB);\n                 str = nl_langinfo (_NL_CTYPE_OUTDIGIT3_MB);\n                 str = nl_langinfo (_NL_CTYPE_OUTDIGIT4_MB);\n                 str = nl_langinfo (_NL_CTYPE_OUTDIGIT5_MB);\n                 str = nl_langinfo (_NL_CTYPE_OUTDIGIT6_MB);\n                 str = nl_langinfo (_NL_CTYPE_OUTDIGIT7_MB);\n                 str = nl_langinfo (_NL_CTYPE_OUTDIGIT8_MB);\n                 str = nl_langinfo (_NL_CTYPE_OUTDIGIT9_MB);\n                 (void) str;\n                 return 0;\n               }''', name : 'nl_langinfo (_NL_CTYPE_OUTDIGITn_MB)')\n  glib_conf.set('HAVE_LANGINFO_OUTDIGIT', 1)\n  if not have_langinfo_time\n    error('nl_langinfo(_NL_CTYPE_OUTDIGITn_MB) is supported but more basic nl_langinfo() functionality like PM_STR is not')\n  endif\nendif\n\n# Check for nl_langinfo and alternative month names\nif cc.links('''#ifndef _GNU_SOURCE\n              # define _GNU_SOURCE\n              #endif\n              #include <langinfo.h>\n               int main (int argc, char ** argv) {\n                 char *str;\n                 str = nl_langinfo (ALTMON_1);\n                 str = nl_langinfo (ALTMON_2);\n                 str = nl_langinfo (ALTMON_3);\n                 str = nl_langinfo (ALTMON_4);\n                 str = nl_langinfo (ALTMON_5);\n                 str = nl_langinfo (ALTMON_6);\n                 str = nl_langinfo (ALTMON_7);\n                 str = nl_langinfo (ALTMON_8);\n                 str = nl_langinfo (ALTMON_9);\n                 str = nl_langinfo (ALTMON_10);\n                 str = nl_langinfo (ALTMON_11);\n                 str = nl_langinfo (ALTMON_12);\n                 (void) str;\n                 return 0;\n               }''', name : 'nl_langinfo (ALTMON_n)')\n  glib_conf.set('HAVE_LANGINFO_ALTMON', 1)\n  if not have_langinfo_time\n    error('nl_langinfo(ALTMON_n) is supported but more basic nl_langinfo() functionality like PM_STR is not')\n  endif\nendif\n\n# Check for nl_langinfo and abbreviated alternative month names\nif cc.links('''#ifndef _GNU_SOURCE\n              # define _GNU_SOURCE\n              #endif\n              #include <langinfo.h>\n               int main (int argc, char ** argv) {\n                 char *str;\n                 str = nl_langinfo (_NL_ABALTMON_1);\n                 str = nl_langinfo (_NL_ABALTMON_2);\n                 str = nl_langinfo (_NL_ABALTMON_3);\n                 str = nl_langinfo (_NL_ABALTMON_4);\n                 str = nl_langinfo (_NL_ABALTMON_5);\n                 str = nl_langinfo (_NL_ABALTMON_6);\n                 str = nl_langinfo (_NL_ABALTMON_7);\n                 str = nl_langinfo (_NL_ABALTMON_8);\n                 str = nl_langinfo (_NL_ABALTMON_9);\n                 str = nl_langinfo (_NL_ABALTMON_10);\n                 str = nl_langinfo (_NL_ABALTMON_11);\n                 str = nl_langinfo (_NL_ABALTMON_12);\n                 (void) str;\n                 return 0;\n               }''', name : 'nl_langinfo (_NL_ABALTMON_n)')\n  glib_conf.set('HAVE_LANGINFO_ABALTMON', 1)\n  if not have_langinfo_time\n    error('nl_langinfo(_NL_ABALTMON_n) is supported but more basic nl_langinfo() functionality like PM_STR is not')\n  endif\nendif\n\n# Check for nl_langinfo and _NL_TIME_CODESET\nif cc.links('''#include <langinfo.h>\n               int main (int argc, char ** argv) {\n                 char *codeset = nl_langinfo (_NL_TIME_CODESET);\n                 (void) codeset;\n                 return 0;\n               }''', name : 'nl_langinfo and _NL_TIME_CODESET')\n  glib_conf.set('HAVE_LANGINFO_TIME_CODESET', 1)\n  if not have_langinfo_time\n    error('nl_langinfo(_NL_TIME_CODESET) is supported but more basic nl_langinfo() functionality like PM_STR is not')\n  endif\nendif\n\n# Check if C compiler supports the 'signed' keyword\nif not cc.compiles('''signed char x;''', name : 'signed')\n  glib_conf.set('signed', '/* NOOP */')\nendif\n\n# Check if the ptrdiff_t type exists\nif cc.has_header_symbol('stddef.h', 'ptrdiff_t')\n  glib_conf.set('HAVE_PTRDIFF_T', 1)\nendif\n\n# Check for sig_atomic_t type\nif cc.links('''#include <signal.h>\n               #include <sys/types.h>\n               sig_atomic_t val = 42;\n               int main (int argc, char ** argv) {\n                 return val == 42 ? 0 : 1;\n               }''', name : 'sig_atomic_t')\n  glib_conf.set('HAVE_SIG_ATOMIC_T', 1)\nendif\n\n# Check if 'long long' works\n# jm_AC_TYPE_LONG_LONG\nif cc.compiles('''long long ll = 1LL;\n                  int i = 63;\n                  int some_func (void) {\n                    long long llmax = (long long) -1;\n                    return ll << i | ll >> i | llmax / ll | llmax % ll;\n                  }''', name : 'long long')\n  glib_conf.set('HAVE_LONG_LONG', 1)\n  have_long_long = true\nelse\n  have_long_long = false\nendif\n\n# Test whether the compiler supports the 'long double' type.\nif cc.compiles('''/* The Stardent Vistra knows sizeof(long double), but does not support it.  */\n                  long double foo = 0.0;\n                  /* On Ultrix 4.3 cc, long double is 4 and double is 8.  */\n                  int array [2*(sizeof(long double) >= sizeof(double)) - 1];''',\n               name : 'long double')\n  glib_conf.set('HAVE_LONG_DOUBLE', 1)\nendif\n\n# Test whether <stddef.h> has the 'wchar_t' type.\nif cc.has_header_symbol('stddef.h', 'wchar_t')\n  glib_conf.set('HAVE_WCHAR_T', 1)\nendif\n\n# Test whether <wchar.h> has the 'wint_t' type.\nif cc.has_header_symbol('wchar.h', 'wint_t')\n  glib_conf.set('HAVE_WINT_T', 1)\nendif\n\nfound_uintmax_t = false\n\n# Define HAVE_INTTYPES_H_WITH_UINTMAX if <inttypes.h> exists,\n# doesn't clash with <sys/types.h>, and declares uintmax_t.\n# jm_AC_HEADER_INTTYPES_H\nif cc.compiles('''#include <sys/types.h>\n                  #include <inttypes.h>\n                  void some_func (void) {\n                    uintmax_t i = (uintmax_t) -1;\n                    (void) i;\n                  }''', name : 'uintmax_t in inttypes.h')\n  glib_conf.set('HAVE_INTTYPES_H_WITH_UINTMAX', 1)\n  found_uintmax_t = true\nendif\n\n# Define HAVE_STDINT_H_WITH_UINTMAX if <stdint.h> exists,\n# doesn't clash with <sys/types.h>, and declares uintmax_t.\n# jm_AC_HEADER_STDINT_H\nif cc.compiles('''#include <sys/types.h>\n                  #include <stdint.h>\n                  void some_func (void) {\n                    uintmax_t i = (uintmax_t) -1;\n                    (void) i;\n                  }''', name : 'uintmax_t in stdint.h')\n  glib_conf.set('HAVE_STDINT_H_WITH_UINTMAX', 1)\n  found_uintmax_t = true\nendif\n\n# Define intmax_t to 'long' or 'long long'\n# if it is not already defined in <stdint.h> or <inttypes.h>.\n# For simplicity, we assume that a header file defines 'intmax_t' if and\n# only if it defines 'uintmax_t'.\nif found_uintmax_t\n  glib_conf.set('HAVE_INTMAX_T', 1)\nelif have_long_long\n  glib_conf.set('intmax_t', 'long long')\nelse\n  glib_conf.set('intmax_t', 'long')\nendif\n\nchar_size = cc.sizeof('char')\nshort_size = cc.sizeof('short')\nint_size = cc.sizeof('int')\nvoidp_size = cc.sizeof('void*')\nlong_size = cc.sizeof('long')\nif have_long_long\n  long_long_size = cc.sizeof('long long')\nelse\n  long_long_size = 0\nendif\nsizet_size = cc.sizeof('size_t')\nif cc.get_id() == 'msvc' or cc.get_id() == 'clang-cl'\n  ssizet_size = cc.sizeof('SSIZE_T', prefix : '#include <BaseTsd.h>')\nelse\n  ssizet_size = cc.sizeof('ssize_t', prefix : '#include <unistd.h>')\nendif\n\n# Some platforms (Apple) hard-code int64_t to long long instead of\n# using long on 64-bit architectures. This can cause type mismatch\n# warnings when trying to interface with code using the standard\n# library type. Test for the warnings and set gint64 to whichever\n# works.\nif long_long_size == long_size\n  if cc.compiles('''#if defined(_AIX) && !defined(__GNUC__)\n                    #pragma options langlvl=stdc99\n                    #endif\n                    #pragma GCC diagnostic error \"-Wincompatible-pointer-types\"\n                    #include <stdint.h>\n                    #include <stdio.h>\n                    int main () {\n                      int64_t i1 = 1;\n                      long *i2 = &i1;\n                      (void) i2;\n                      return 1;\n                    }''', name : 'int64_t is long')\n    int64_t_typedef = 'long'\n  elif cc.compiles('''#if defined(_AIX) && !defined(__GNUC__)\n                      #pragma options langlvl=stdc99\n                      #endif\n                      #pragma GCC diagnostic error \"-Wincompatible-pointer-types\"\n                      #include <stdint.h>\n                      #include <stdio.h>\n                      int main () {\n                        int64_t i1 = 1;\n                        long long *i2 = &i1;\n                        (void) i2;\n                        return 1;\n                      }''', name : 'int64_t is long long')\n    int64_t_typedef = 'long long'\n  else\n    error('Cannot detect int64_t typedef')\n  endif\nendif\n\nint64_m = 'll'\nchar_align = cc.alignment('char')\nshort_align = cc.alignment('short')\nint_align = cc.alignment('int')\nvoidp_align = cc.alignment('void*')\nlong_align = cc.alignment('long')\nlong_long_align = cc.alignment('long long')\n# NOTE: We don't check for size of __int64 because long long is guaranteed to\n# be 64-bit in C99, and it is available on all supported compilers\nsizet_align = cc.alignment('size_t')\n\nglib_conf.set('SIZEOF_CHAR', char_size)\nglib_conf.set('SIZEOF_INT', int_size)\nglib_conf.set('SIZEOF_SHORT', short_size)\nglib_conf.set('SIZEOF_LONG', long_size)\nglib_conf.set('SIZEOF_LONG_LONG', long_long_size)\nglib_conf.set('SIZEOF_SIZE_T', sizet_size)\nglib_conf.set('SIZEOF_SSIZE_T', ssizet_size)\nglib_conf.set('SIZEOF_VOID_P', voidp_size)\nglib_conf.set('SIZEOF_WCHAR_T', cc.sizeof('wchar_t', prefix: '#include <stddef.h>'))\n\nif short_size == 2\n  gint16 = 'short'\n  gint16_modifier='h'\n  gint16_format='hi'\n  guint16_format='hu'\nelif int_size == 2\n  gint16 = 'int'\n  gint16_modifier=''\n  gint16_format='i'\n  guint16_format='u'\nelse\n  error('Compiler provides no native 16-bit integer type')\nendif\nglibconfig_conf.set('gint16', gint16)\nglibconfig_conf.set_quoted('gint16_modifier', gint16_modifier)\nglibconfig_conf.set_quoted('gint16_format', gint16_format)\nglibconfig_conf.set_quoted('guint16_format', guint16_format)\n\nif short_size == 4\n  gint32 = 'short'\n  gint32_modifier='h'\n  gint32_format='hi'\n  guint32_format='hu'\n  guint32_align = short_align\nelif int_size == 4\n  gint32 = 'int'\n  gint32_modifier=''\n  gint32_format='i'\n  guint32_format='u'\n  guint32_align = int_align\nelif long_size == 4\n  gint32 = 'long'\n  gint32_modifier='l'\n  gint32_format='li'\n  guint32_format='lu'\n  guint32_align = long_align\nelse\n  error('Compiler provides no native 32-bit integer type')\nendif\nglibconfig_conf.set('gint32', gint32)\nglibconfig_conf.set_quoted('gint32_modifier', gint32_modifier)\nglibconfig_conf.set_quoted('gint32_format', gint32_format)\nglibconfig_conf.set_quoted('guint32_format', guint32_format)\n\nif int_size == 8\n  gint64 = 'int'\n  gint64_modifier=''\n  gint64_format='i'\n  guint64_format='u'\n  glib_extension=''\n  gint64_constant='(val)'\n  guint64_constant='(val)'\n  guint64_align = int_align\nelif long_size == 8 and (long_long_size != long_size or int64_t_typedef == 'long')\n  gint64 = 'long'\n  glib_extension=''\n  gint64_modifier='l'\n  gint64_format='li'\n  guint64_format='lu'\n  gint64_constant='(val##L)'\n  guint64_constant='(val##UL)'\n  guint64_align = long_align\nelif long_long_size == 8 and (long_long_size != long_size or int64_t_typedef == 'long long')\n  gint64 = 'long long'\n  glib_extension='G_GNUC_EXTENSION '\n  gint64_modifier=int64_m\n  gint64_format=int64_m + 'i'\n  guint64_format=int64_m + 'u'\n  gint64_constant='(G_GNUC_EXTENSION (val##LL))'\n  guint64_constant='(G_GNUC_EXTENSION (val##ULL))'\n  guint64_align = long_long_align\nelse\n  error('Compiler provides no native 64-bit integer type')\nendif\nglibconfig_conf.set('glib_extension', glib_extension)\nglibconfig_conf.set('gint64', gint64)\nglibconfig_conf.set_quoted('gint64_modifier', gint64_modifier)\nglibconfig_conf.set_quoted('gint64_format', gint64_format)\nglibconfig_conf.set_quoted('guint64_format', guint64_format)\nglibconfig_conf.set('gint64_constant', gint64_constant)\nglibconfig_conf.set('guint64_constant', guint64_constant)\n\nif host_system == 'windows'\n  glibconfig_conf.set('g_pid_type', 'void*')\n  glibconfig_conf.set_quoted('g_pid_format', 'p')\n  if host_machine.cpu_family() in ['x86_64', 'aarch64']\n    glibconfig_conf.set_quoted('g_pollfd_format', '%#' + int64_m + 'x')\n  else\n    glibconfig_conf.set_quoted('g_pollfd_format', '%#x')\n  endif\n  glibconfig_conf.set('g_dir_separator', '\\\\\\\\')\n  glibconfig_conf.set('g_searchpath_separator', ';')\nelse\n  glibconfig_conf.set('g_pid_type', 'int')\n  glibconfig_conf.set_quoted('g_pid_format', 'i')\n  glibconfig_conf.set_quoted('g_pollfd_format', '%d')\n  glibconfig_conf.set('g_dir_separator', '/')\n  glibconfig_conf.set('g_searchpath_separator', ':')\nendif\n\ng_sizet_compatibility = {\n  'short': sizet_size == short_size,\n  'int': sizet_size == int_size,\n  'long': sizet_size == long_size,\n  'long long': sizet_size == long_long_size,\n}\n\n# Do separate checks for gcc/clang (and ignore other compilers for now), since\n# we need to explicitly pass -Werror to the compilers.\n# FIXME: https://github.com/mesonbuild/meson/issues/5399\nif cc.get_id() == 'gcc' or cc.get_id() == 'clang'\n  foreach type_name, size_compatibility : g_sizet_compatibility\n    g_sizet_compatibility += { type_name: size_compatibility and\n      cc.compiles(\n        '''#include <stddef.h>\n        static size_t f (size_t *i) { return *i + 1; }\n        int main (void) {\n          unsigned ''' + type_name + ''' i = 0;\n          f (&i);\n          return 0;\n        }''',\n        args: ['-Werror'],\n        name : 'GCC size_t typedef is ' + type_name), }\n  endforeach\nendif\n\nif g_sizet_compatibility['short']\n  glibconfig_conf.set('glib_size_type_define', 'short')\n  glibconfig_conf.set_quoted('gsize_modifier', 'h')\n  glibconfig_conf.set_quoted('gssize_modifier', 'h')\n  glibconfig_conf.set_quoted('gsize_format', 'hu')\n  glibconfig_conf.set_quoted('gssize_format', 'hi')\n  glibconfig_conf.set('glib_msize_type', 'SHRT')\nelif g_sizet_compatibility['int']\n  glibconfig_conf.set('glib_size_type_define', 'int')\n  glibconfig_conf.set_quoted('gsize_modifier', '')\n  glibconfig_conf.set_quoted('gssize_modifier', '')\n  glibconfig_conf.set_quoted('gsize_format', 'u')\n  glibconfig_conf.set_quoted('gssize_format', 'i')\n  glibconfig_conf.set('glib_msize_type', 'INT')\nelif g_sizet_compatibility['long']\n  glibconfig_conf.set('glib_size_type_define', 'long')\n  glibconfig_conf.set_quoted('gsize_modifier', 'l')\n  glibconfig_conf.set_quoted('gssize_modifier', 'l')\n  glibconfig_conf.set_quoted('gsize_format', 'lu')\n  glibconfig_conf.set_quoted('gssize_format', 'li')\n  glibconfig_conf.set('glib_msize_type', 'LONG')\nelif g_sizet_compatibility['long long']\n  glibconfig_conf.set('glib_size_type_define', 'long long')\n  glibconfig_conf.set_quoted('gsize_modifier', int64_m)\n  glibconfig_conf.set_quoted('gssize_modifier', int64_m)\n  glibconfig_conf.set_quoted('gsize_format', int64_m + 'u')\n  glibconfig_conf.set_quoted('gssize_format', int64_m + 'i')\n  glibconfig_conf.set('glib_msize_type', 'INT64')\nelse\n  error('Could not determine size of size_t.')\nendif\n\nif voidp_size == int_size\n  glibconfig_conf.set('glib_intptr_type_define', 'int')\n  glibconfig_conf.set_quoted('gintptr_modifier', '')\n  glibconfig_conf.set_quoted('gintptr_format', 'i')\n  glibconfig_conf.set_quoted('guintptr_format', 'u')\n  glibconfig_conf.set('glib_gpi_cast', '(gint)')\n  glibconfig_conf.set('glib_gpui_cast', '(guint)')\nelif voidp_size == long_size\n  glibconfig_conf.set('glib_intptr_type_define', 'long')\n  glibconfig_conf.set_quoted('gintptr_modifier', 'l')\n  glibconfig_conf.set_quoted('gintptr_format', 'li')\n  glibconfig_conf.set_quoted('guintptr_format', 'lu')\n  glibconfig_conf.set('glib_gpi_cast', '(glong)')\n  glibconfig_conf.set('glib_gpui_cast', '(gulong)')\nelif voidp_size == long_long_size\n  glibconfig_conf.set('glib_intptr_type_define', 'long long')\n  glibconfig_conf.set_quoted('gintptr_modifier', int64_m)\n  glibconfig_conf.set_quoted('gintptr_format', int64_m + 'i')\n  glibconfig_conf.set_quoted('guintptr_format', int64_m + 'u')\n  glibconfig_conf.set('glib_gpi_cast', '(gint64)')\n  glibconfig_conf.set('glib_gpui_cast', '(guint64)')\nelse\n  error('Could not determine size of void *')\nendif\n\nif long_size != 8 and long_long_size != 8 and int_size != 8\n  error('GLib requires a 64-bit type. You might want to consider using the GNU C compiler.')\nendif\n\nglibconfig_conf.set('gintbits', int_size * 8)\nglibconfig_conf.set('glongbits', long_size * 8)\nglibconfig_conf.set('gsizebits', sizet_size * 8)\nglibconfig_conf.set('gssizebits', ssizet_size * 8)\n\n# XXX: https://gitlab.gnome.org/GNOME/glib/issues/1413\nif host_system == 'windows'\n  g_module_suffix = 'dll'\nelse\n  g_module_suffix = 'so'\nendif\nglibconfig_conf.set('g_module_suffix', g_module_suffix)\n\nglibconfig_conf.set('GLIB_MAJOR_VERSION', major_version)\nglibconfig_conf.set('GLIB_MINOR_VERSION', minor_version)\nglibconfig_conf.set('GLIB_MICRO_VERSION', micro_version)\nglibconfig_conf.set('GLIB_VERSION', glib_version)\n\nglibconfig_conf.set('glib_void_p', voidp_size)\nglibconfig_conf.set('glib_long', long_size)\nglibconfig_conf.set('glib_size_t', sizet_size)\nglibconfig_conf.set('glib_ssize_t', ssizet_size)\nif host_machine.endian() == 'big'\n  glibconfig_conf.set('g_byte_order', 'G_BIG_ENDIAN')\n  glibconfig_conf.set('g_bs_native', 'BE')\n  glibconfig_conf.set('g_bs_alien', 'LE')\nelse\n  glibconfig_conf.set('g_byte_order', 'G_LITTLE_ENDIAN')\n  glibconfig_conf.set('g_bs_native', 'LE')\n  glibconfig_conf.set('g_bs_alien', 'BE')\nendif\n\n# === va_copy checks ===\n\nglib_vacopy = ''\n\n# We check for G_VA_COPY_AS_ARRAY for historical reasons, but we no longer\n# use it: use Standard C va_copy() instead.\n\nva_list_val_copy_prog = '''\n  #include <stdarg.h>\n  #include <stdlib.h>\n  void f (int i, ...) {\n    va_list args1, args2;\n    va_start (args1, i);\n    args2 = args1;\n    if (va_arg (args2, int) != 42 || va_arg (args1, int) != 42)\n      exit (1);\n    va_end (args1); va_end (args2);\n  }\n  int main() {\n    f (0, 42);\n    return 0;\n  }'''\n\nif cc_can_run\n  rres = cc.run(va_list_val_copy_prog, name : 'va_lists can be copied as values')\n  glib_va_val_copy = rres.compiled() and rres.returncode() == 0\nelse\n  glib_va_val_copy = meson.get_external_property('va_val_copy', true)\nendif\nif not glib_va_val_copy\n  glib_vacopy = glib_vacopy + '\\n#define G_VA_COPY_AS_ARRAY 1'\n  glib_conf.set('G_VA_COPY_AS_ARRAY', 1)\nendif\nglibconfig_conf.set('glib_vacopy', glib_vacopy)\n\n# check for flavours of varargs macros\ng_have_iso_c_varargs = cc.compiles('''\n  void some_func (void) {\n    int a(int p1, int p2, int p3);\n    #define call_a(...) a(1,__VA_ARGS__)\n    call_a(2,3);\n  }''', name : 'ISO C99 varargs macros in C')\n\nif not g_have_iso_c_varargs\n  error('GLib requires a C compiler with support for C99 __VA_ARG__ in macros.')\nendif\n\nif have_cxx\n  g_have_iso_cxx_varargs = cxx.compiles('''\n    void some_func (void) {\n      int a(int p1, int p2, int p3);\n      #define call_a(...) a(1,__VA_ARGS__)\n      call_a(2,3);\n    }''', name : 'ISO C99 varargs macros in C++')\n\n  if not g_have_iso_cxx_varargs\n    error('GLib requires a C++ compiler with support for C99 __VA_ARG__ in macros.')\n  endif\nendif\n\ng_have_gnuc_varargs = cc.compiles('''\n  void some_func (void) {\n    int a(int p1, int p2, int p3);\n    #define call_a(params...) a(1,params)\n    call_a(2,3);\n  }''', name : 'GNUC varargs macros')\n\nif cc.has_header('alloca.h')\n  glibconfig_conf.set('GLIB_HAVE_ALLOCA_H', true)\nendif\nhas_syspoll = cc.has_header('sys/poll.h')\nhas_systypes = cc.has_header('sys/types.h')\nif has_syspoll\n  glibconfig_conf.set('GLIB_HAVE_SYS_POLL_H', true)\nendif\nhas_winsock2 = cc.has_header('winsock2.h')\n\nif has_syspoll and has_systypes\n  poll_includes = '''\n      #include<sys/poll.h>\n      #include<sys/types.h>'''\nelif has_winsock2\n  poll_includes = '''\n      #define _WIN32_WINNT @0@\n      #include <winsock2.h>'''.format(glib_conf.get('_WIN32_WINNT'))\nelse\n  # FIXME?\n  error('FIX POLL* defines')\nendif\n\npoll_defines = [\n  [ 'POLLIN', 'g_pollin', 1 ],\n  [ 'POLLOUT', 'g_pollout', 4 ],\n  [ 'POLLPRI', 'g_pollpri', 2 ],\n  [ 'POLLERR', 'g_pollerr', 8 ],\n  [ 'POLLHUP', 'g_pollhup', 16 ],\n  [ 'POLLNVAL', 'g_pollnval', 32 ],\n]\n\nif has_syspoll and has_systypes\n  foreach d : poll_defines\n    val = cc.compute_int(d[0], prefix: poll_includes)\n    glibconfig_conf.set(d[1], val)\n  endforeach\nelif has_winsock2\n  # Due to a missed bug in configure.ac the poll test\n  # never succeeded on Windows and used some pre-defined\n  # values as a fallback. Keep using them to maintain\n  # ABI compatibility with autotools builds of glibs\n  # and with *any* glib-using code compiled against them,\n  # since these values end up in a public header glibconfig.h.\n  foreach d : poll_defines\n    glibconfig_conf.set(d[1], d[2])\n  endforeach\nendif\n\n# Internet address families\n# FIXME: what about Cygwin (G_WITH_CYGWIN)\nif host_system == 'windows'\n  inet_includes = '''\n      #include <winsock2.h>'''\nelse\n  inet_includes = '''\n      #include <sys/types.h>\n      #include <sys/socket.h>'''\nendif\n\ninet_defines = [\n  [ 'AF_UNIX', 'g_af_unix' ],\n  [ 'AF_INET', 'g_af_inet' ],\n  [ 'AF_INET6', 'g_af_inet6' ],\n  [ 'MSG_OOB', 'g_msg_oob' ],\n  [ 'MSG_PEEK', 'g_msg_peek' ],\n  [ 'MSG_DONTROUTE', 'g_msg_dontroute' ],\n]\nforeach d : inet_defines\n  val = cc.compute_int(d[0], prefix: inet_includes)\n  glibconfig_conf.set(d[1], val)\nendforeach\n\nif host_system == 'windows'\n  have_ipv6 = true\nelse\n  have_ipv6 = cc.has_type('struct in6_addr', prefix: '#include <netinet/in.h>')\nendif\nglib_conf.set('HAVE_IPV6', have_ipv6)\n\n# We need to decide at configure time if GLib will use real atomic\n# operations (\"lock free\") or emulated ones with a mutex.  This is\n# because we must put this information in glibconfig.h so we know if\n# it is safe or not to inline using compiler intrinsics directly from\n# the header.\n#\n# We also publish the information via G_ATOMIC_LOCK_FREE in case the\n# user is interested in knowing if they can use the atomic ops across\n# processes.\n#\n# We can currently support the atomic ops natively when building GLib\n# with recent versions of GCC or MSVC.\n#\n# Note that the atomic ops are only available with GCC on x86 when\n# using -march=i486 or higher.  If we detect that the atomic ops are\n# not available but would be available given the right flags, we want\n# to abort and advise the user to fix their CFLAGS.  It's better to do\n# that then to silently fall back on emulated atomic ops just because\n# the user had the wrong build environment.\natomictest = '''int main() {\n  int atomic = 2;\n  __sync_bool_compare_and_swap (&atomic, 2, 3);\n  return 0;\n}\n'''\n\natomicdefine = '''\n#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n#error \"compiler has atomic ops, but doesn't define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\"\n#endif\n'''\n\n# We know that we can always use real (\"lock free\") atomic operations with MSVC\nif cc.get_id() == 'msvc' or cc.get_id() == 'clang-cl' or cc.links(atomictest, name : 'atomic ops')\n  have_atomic_lock_free = true\n  if cc.get_id() == 'gcc' and not cc.compiles(atomicdefine, name : 'atomic ops define')\n    # Old gcc release may provide\n    # __sync_bool_compare_and_swap but doesn't define\n    # __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n    glib_conf.set('__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4', true)\n  endif\n\n  if cc.get_id() == 'gcc' or cc.get_id() == 'clang'\n    sync_swap_test = '''\n      int main() {\n        int atomic = 2;\n        __sync_swap (&atomic, 2);\n        return 0;\n      }\n    '''\n\n    glib_conf.set('_GLIB_GCC_HAVE_SYNC_SWAP', cc.links(sync_swap_test, name : 'sync swap'))\n  endif\nelse\n  have_atomic_lock_free = false\n  if host_machine.cpu_family() == 'x86' and cc.links(atomictest, args : '-march=i486')\n    error('GLib must be built with -march=i486 or later.')\n  endif\nendif\nglibconfig_conf.set('G_ATOMIC_LOCK_FREE', have_atomic_lock_free)\n\n# === Threads ===\n\nif get_option('force_posix_threads')\n  warning('DEPRECATION: Option \\'force_posix_threads\\' is deprecated and will be removed after GLib 2.72; please file an issue with your use case if you still require it')\nendif\n\n# Determination of thread implementation\nif host_system == 'windows' and not get_option('force_posix_threads')\n  thread_dep = []\n  threads_implementation = 'win32'\n  glibconfig_conf.set('g_threads_impl_def', 'WIN32')\n  glib_conf.set('THREADS_WIN32', 1)\nelse\n  thread_dep = dependency('threads')\n  threads_implementation = 'posix'\n  pthread_prefix = '''\n      #ifndef _GNU_SOURCE\n      # define _GNU_SOURCE\n      #endif\n      #include <pthread.h>'''\n  glibconfig_conf.set('g_threads_impl_def', 'POSIX')\n  glib_conf.set('THREADS_POSIX', 1)\n  if cc.has_header_symbol('pthread.h', 'pthread_attr_setstacksize')\n    glib_conf.set('HAVE_PTHREAD_ATTR_SETSTACKSIZE', 1)\n  endif\n  if cc.has_header_symbol('pthread.h', 'pthread_attr_setinheritsched')\n    glib_conf.set('HAVE_PTHREAD_ATTR_SETINHERITSCHED', 1)\n  endif\n  if cc.has_header_symbol('pthread.h', 'pthread_condattr_setclock')\n    glib_conf.set('HAVE_PTHREAD_CONDATTR_SETCLOCK', 1)\n  endif\n  if cc.has_header_symbol('pthread.h', 'pthread_cond_timedwait_relative_np')\n    glib_conf.set('HAVE_PTHREAD_COND_TIMEDWAIT_RELATIVE_NP', 1)\n  endif\n  if cc.has_header_symbol('pthread.h', 'pthread_getname_np', prefix : pthread_prefix)\n    glib_conf.set('HAVE_PTHREAD_GETNAME_NP', 1)\n  endif\n  if cc.has_header_symbol('pthread.h', 'pthread_getaffinity_np', prefix : pthread_prefix)\n    glib_conf.set('HAVE_PTHREAD_GETAFFINITY_NP', 1)\n  endif\n\n  # Assume that pthread_setname_np is available in some form; same as configure\n  if cc.links(pthread_prefix + '''\n              int main() {\n                pthread_setname_np(\"example\");\n                return 0;\n              }''',\n              name : 'pthread_setname_np(const char*)',\n              dependencies : thread_dep)\n    # macOS and iOS\n    glib_conf.set('HAVE_PTHREAD_SETNAME_NP_WITHOUT_TID', 1)\n  elif cc.links(pthread_prefix + '''\n                int main() {\n                  pthread_setname_np(pthread_self(), \"example\");\n                  return 0;\n                }''',\n                name : 'pthread_setname_np(pthread_t, const char*)',\n                dependencies : thread_dep)\n    # Linux, Solaris, etc.\n    glib_conf.set('HAVE_PTHREAD_SETNAME_NP_WITH_TID', 1)\n  elif cc.links(pthread_prefix + '''\n                int main() {\n                  pthread_setname_np(pthread_self(), \"%s\", \"example\");\n                  return 0;\n                }''',\n                name : 'pthread_setname_np(pthread_t, const char*, void*)',\n                dependencies : thread_dep)\n    # NetBSD\n    glib_conf.set('HAVE_PTHREAD_SETNAME_NP_WITH_TID_AND_ARG', 1)\n  elif cc.links(pthread_prefix + '''\n                #include <pthread_np.h>\n                int main() {\n                  pthread_set_name_np(pthread_self(), \"example\");\n                  return 0;\n                }''',\n                name : 'pthread_set_name_np(pthread_t, const char*)',\n                dependencies : thread_dep)\n    # FreeBSD, DragonFlyBSD, OpenBSD, etc.\n    glib_conf.set('HAVE_PTHREAD_SET_NAME_NP', 1)\n  endif\nendif\n\n# FIXME: we should make it print the result and always return 0, so that\n# the output in meson shows up as green\n# volatile is needed here to avoid optimisations in the test\nstack_grows_check_prog = '''\n  volatile int *a = 0, *b = 0;\n  void f (int i) {\n    volatile int x = 5;\n    if (i == 0)\n      b = &x;\n    else\n      f (i - 1);\n  }\n  int main () {\n    volatile int y = 7;\n    a = &y;\n    f (100);\n    return b > a ? 0 : 1;\n  }'''\n\nif cc_can_run\n  rres = cc.run(stack_grows_check_prog, name : 'stack grows check')\n  growing_stack = rres.compiled() and rres.returncode() == 0\nelse\n  growing_stack = meson.get_external_property('growing_stack', false)\nendif\n\nglibconfig_conf.set10('G_HAVE_GROWING_STACK', growing_stack)\n\n# Tests for iconv\n#\n# We should never use the MinGW C library's iconv because it may not be\n# available in the actual runtime environment. On Windows, we always use\n# the built-in implementation\nif host_system == 'windows'\n  # We have a #include \"win_iconv.c\" in gconvert.c on Windows, so we don't need\n  # any external library for it\n  libiconv = []\nelse\n  libiconv = dependency('iconv')\nendif\n\npcre2_req = '>=10.32'\n\n# Pick up pcre from the system, or if \"--force-fallback-for libpcre2-8\" was specified\npcre2 = dependency('libpcre2-8', version: pcre2_req, required: false, default_options: ['default_library=static'])\nif not pcre2.found()\n  if cc.get_id() == 'msvc' or cc.get_id() == 'clang-cl'\n  # MSVC: Search for the PCRE2 library by the configuration, which corresponds\n  # to the output of CMake builds of PCRE2.  Note that debugoptimized\n  # is really a Release build with .PDB files.\n    if vs_crt == 'debug'\n      pcre2 = cc.find_library('pcre2d-8', required : false)\n    else\n      pcre2 = cc.find_library('pcre2-8', required : false)\n    endif\n  endif\nendif\n\n# Try again with the fallback\nif not pcre2.found()\n  pcre2 = dependency('libpcre2-8', version: pcre2_req, allow_fallback: true, default_options: ['default_library=static'])\n  assert(pcre2.type_name() == 'internal')\n  # static flags are automatically enabled by the subproject if it's built\n  # with default_library=static\n  use_pcre2_static_flag = false\nelif host_system == 'windows' and pcre2.type_name() != 'internal'\n  pcre2_static = cc.links('''#define PCRE2_STATIC\n                             #define PCRE2_CODE_UNIT_WIDTH 8\n                             #include <pcre2.h>\n                             int main() {\n                               void *p = NULL;\n                               pcre2_code_free(p);\n                               return 0;\n                             }''',\n                         dependencies: pcre2,\n                         name : 'Windows system PCRE2 is a static build')\n  use_pcre2_static_flag = pcre2_static\nelse\n  use_pcre2_static_flag = false\nendif\n\n# Import the gvdb sources as a subproject to avoid having the copylib in-tree\nsubproject('gvdb', default_options: {'tests': false})\ngvdb_dep = dependency('gvdb')\n\nlibm = cc.find_library('m', required : false)\nlibffi_dep = dependency('libffi', version : '>= 3.0.0')\n\nlibz_dep = dependency('zlib')\n\nlibatomic_test_code = '''\n  int main (int argc, char ** argv) {\n    return 0;\n  }'''\natomic_dep = []\nif cc.links(libatomic_test_code, args : '-latomic', name : 'check for -latomic')\n  atomic_dep = cc.find_library('atomic')\nendif\n\n# First check in libc, fallback to libintl, and as last chance build\n# proxy-libintl subproject.\n# FIXME: glib-gettext.m4 has much more checks to detect broken/uncompatible\n# implementations. This could be extended if issues are found in some platforms.\nlibintl_deps = []\nlibintl_prefix = '#include <libintl.h>'\nlibintl = dependency('intl', required: false)\nif libintl.found() and libintl.type_name() != 'internal'\n  # libintl supports different threading APIs, which may not\n  # require additional flags, but it defaults to using pthreads if\n  # found. Meson's \"threads\" dependency does not allow you to\n  # prefer pthreads. We may not be using pthreads for glib itself\n  # either so just link the library to satisfy libintl rather than\n  # also defining the macros with the -pthread flag.\n  #\n  # Meson's builtin dependency lookup as of 0.60.0 doesn't check for\n  # pthread, so we do this manually here.\n  if cc.has_function('ngettext', dependencies : libintl, prefix: libintl_prefix)\n    libintl_deps += [libintl]\n  else\n    libintl_iconv = cc.find_library('iconv', required : false)\n    if libintl_iconv.found() and cc.has_function('ngettext', args : osx_ldflags, dependencies : [libintl, libintl_iconv])\n      libintl_deps += [libintl, libintl_iconv]\n    else\n      libintl_pthread = cc.find_library('pthread', required : false)\n      if libintl_pthread.found() and cc.has_function('ngettext', dependencies : [libintl, libintl_pthread], prefix: libintl_prefix)\n        libintl_deps += [libintl, libintl_pthread]\n      else\n        libintl = disabler()\n      endif\n    endif\n  endif\nendif\n\nif libintl.found() and libintl.type_name() != 'internal'\n  have_bind_textdomain_codeset = cc.has_function('bind_textdomain_codeset', dependencies: libintl_deps, prefix: libintl_prefix)\nelse\n  # using proxy-libintl fallback\n  libintl = dependency('intl', allow_fallback: true)\n  assert(libintl.type_name() == 'internal')\n  libintl_deps = [libintl]\n  have_bind_textdomain_codeset = true  # proxy-libintl supports it\nendif\n\nglib_conf.set('HAVE_BIND_TEXTDOMAIN_CODESET', have_bind_textdomain_codeset)\n\n# We require gettext to always be present\nglib_conf.set('HAVE_DCGETTEXT', 1)\nglib_conf.set('HAVE_GETTEXT', 1)\n\nglib_conf.set_quoted('GLIB_LOCALE_DIR', join_paths(glib_datadir, 'locale'))\n\nglib_conf.set_quoted('GLIB_LOCALSTATEDIR', glib_localstatedir)\nglib_conf.set_quoted('GLIB_RUNSTATEDIR', glib_runstatedir)\n\n# libmount is only used by gio, but we need to fetch the libs to generate the\n# pkg-config file below\nlibmount_dep = []\nif host_system == 'linux'\n  libmount_dep = dependency('mount', version : '>=2.23', required : get_option('libmount'))\n  glib_conf.set('HAVE_LIBMOUNT', libmount_dep.found())\n\n  if libmount_dep.found() and cc.has_function('mnt_monitor_veil_kernel', dependencies: libmount_dep)\n    glib_conf.set('HAVE_MNT_MONITOR_VEIL_KERNEL', 1)\n  endif\nendif\n\nif host_system == 'windows'\n  winsock2 = cc.find_library('ws2_32')\n  # Used for g_win32_clear_com() tests...\n  wincodecs = cc.find_library('windowscodecs')\nelse\n  winsock2 = not_found\n  wincodecs = not_found\nendif\n\nselinux_dep = []\nif host_system == 'linux'\n  selinux_dep = dependency('libselinux', version: '>=2.2', required: get_option('selinux'))\n\n  glib_conf.set('HAVE_SELINUX', selinux_dep.found())\nendif\n\nxattr_dep = []\nif host_system != 'windows' and get_option('xattr')\n  # either glibc or libattr can provide xattr support\n  # for both of them, we check for getxattr being in\n  # the library and a valid xattr header.\n\n  # try glibc\n  if cc.has_function('getxattr') and cc.has_header('sys/xattr.h')\n    glib_conf.set('HAVE_SYS_XATTR_H', 1)\n    glib_conf_prefix = glib_conf_prefix + '#define @0@ 1\\n'.format('HAVE_SYS_XATTR_H')\n  #failure. try libattr\n  elif cc.has_header_symbol('attr/xattr.h', 'getxattr')\n    glib_conf.set('HAVE_ATTR_XATTR_H', 1)\n    glib_conf_prefix = glib_conf_prefix + '#define @0@ 1\\n'.format('HAVE_ATTR_XATTR_H')\n    xattr_dep = [cc.find_library('xattr')]\n  else\n    error('No getxattr implementation found in C library or libxattr')\n  endif\n\n  glib_conf.set('HAVE_XATTR', 1)\n  if cc.compiles(glib_conf_prefix + '''\n                 #include <stdio.h>\n                 #ifdef HAVE_SYS_TYPES_H\n                 #include <sys/types.h>\n                 #endif\n                 #ifdef HAVE_SYS_XATTR_H\n                 #include <sys/xattr.h>\n                 #elif HAVE_ATTR_XATTR_H\n                 #include <attr/xattr.h>\n                 #endif\n\n                 int main (void) {\n                   ssize_t len = getxattr(\"\", \"\", NULL, 0, 0, XATTR_NOFOLLOW);\n                   return len;\n                 }''',\n                 name : 'XATTR_NOFOLLOW')\n    glib_conf.set('HAVE_XATTR_NOFOLLOW', 1)\n  endif\nendif\n\n# If strlcpy is present (BSD and similar), check that it conforms to the BSD\n# specification. Specifically Solaris 8's strlcpy() does not, see\n# https://bugzilla.gnome.org/show_bug.cgi?id=53933 for further context.\nif cc.has_function('strlcpy')\n  if cc_can_run\n    rres = cc.run('''#include <stdlib.h>\n                    #include <string.h>\n                    int main() {\n                      char p[10];\n                      (void) strlcpy (p, \"hi\", 10);\n                      if (strlcat (p, \"bye\", 0) != 3)\n                        return 1;\n                      return 0;\n                    }''',\n                  name : 'OpenBSD strlcpy/strlcat')\n    if rres.compiled() and rres.returncode() == 0\n      glib_conf.set('HAVE_STRLCPY', 1)\n    endif\n  elif meson.get_external_property('have_strlcpy', false)\n    glib_conf.set('HAVE_STRLCPY', 1)\n  endif\nendif\n\ncmdline_test_code = '''\n#include <fcntl.h>\n#include <sys/stat.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n\nstatic int\n__getcmdline (void)\n{\n/* This code is a dumbed-down version of g_file_get_contents() */\n#ifndef O_BINARY\n#define O_BINARY 0\n#endif\n#define BUFSIZE 1024\n  char result[BUFSIZE];\n  struct stat stat_buf;\n\n  int fd = open (\"/proc/self/cmdline\", O_RDONLY|O_BINARY);\n  if (fd < 0)\n    exit (1);\n  if (fstat (fd, &stat_buf))\n    exit (1);\n\n  if (stat_buf.st_size > 0 && S_ISREG (stat_buf.st_mode))\n    {\n      if (read (fd, result, BUFSIZE) <= 0)\n        exit (1);\n    }\n  else\n    {\n      FILE *f = fdopen (fd, \"r\");\n      if (f == NULL)\n        exit (1);\n\n      if (fread (result, 1, BUFSIZE, f) <= 0)\n        exit (1);\n    }\n\n  return 0;\n}\n\nint\nmain (void)\n{\n  exit (__getcmdline ());\n}'''\n\nif cc_can_run\n  rres = cc.run(cmdline_test_code, name : '/proc/self/cmdline')\n  have_proc_self_cmdline = rres.compiled() and rres.returncode() == 0\nelse\n  have_proc_self_cmdline = meson.get_external_property('have_proc_self_cmdline', false)\nendif\n\nglib_conf.set('HAVE_PROC_SELF_CMDLINE', have_proc_self_cmdline)\n\npython = import('python').find_installation()\n\npython_version = python.language_version()\npython_version_req = '>=3.7'\nif not python_version.version_compare(python_version_req)\n  error('Requires Python @0@, @1@ found.'.format(python_version_req, python_version))\nendif\n\n# Determine which user environment-dependent files that we want to install\nbash = find_program('bash', required : false)\nhave_bash = bash.found() # For completion scripts\nbash_comp_dep = dependency('bash-completion', version: '>=2.0', required: false)\nhave_sh = find_program('sh', required : false).found() # For glib-gettextize\nhave_pkg_config = find_program('pkg-config', required: false).found()\n\n# Some installed tests require a custom environment\nenv_program = find_program('env', required: installed_tests_enabled)\n\n# illumos & Solaris may need extra definitions to expose some SUS/POSIX\n# interfaces in headers that conflict with previous Solaris headers.\n# But if we define them to request an older version of the standards,\n# we may hide things introduced in newer versions.  We only check the\n# versions that are supported on systems new enough that meson runs on them.\nif host_system == 'sunos'\n  xopen_test_code = '''#include <unistd.h>\n  #if _XOPEN_VERSION != _XOPEN_SOURCE\n  #error \"XOPEN_SOURCE of _XOPEN_SOURCE not supported\"\n  #endif'''\n  foreach std : ['800', '700', '600']\n    if cc.compiles(xopen_test_code, args: '-D_XOPEN_SOURCE=' + std, name: 'building with _XOPEN_SOURCE=' + std)\n      xopen_version = std\n      break\n    endif\n  endforeach\n  glib_conf.set('_XOPEN_SOURCE', xopen_version)\n  glib_conf.set('__EXTENSIONS__',1)\nendif\n\n# Sadly Meson does not expose this value:\n# https://github.com/mesonbuild/meson/pull/3460\nif host_system == 'windows'\n  # Autotools explicitly removed --Wl,--export-all-symbols from windows builds,\n  # with no explanation. Do the same here for now but this could be revisited if\n  # if causes issues.\n  export_dynamic_ldflags = []\nelif host_system == 'cygwin'\n  export_dynamic_ldflags = ['-Wl,--export-all-symbols']\nelif host_system in ['darwin', 'ios']\n  export_dynamic_ldflags = []\nelif host_system == 'sunos'\n  export_dynamic_ldflags = []\nelse\n  export_dynamic_ldflags = ['-Wl,--export-dynamic']\nendif\n\nwin32_cflags = []\nwin32_ldflags = []\nif host_system == 'windows' and cc.get_id() != 'msvc' and cc.get_id() != 'clang-cl'\n  # Ensure MSVC-compatible struct packing convention is used when\n  # compiling for Win32 with gcc. It is used for the whole project and exposed\n  # in glib-2.0.pc.\n  if not cc.compiles('''\nstruct _GTestMSBitfields\n{\n  int a : 1;\n  short b : 1;\n};\n\ntypedef char _StaticCheck[sizeof(struct _GTestMSBitfields) != sizeof(int) ? 1 : -1];\n''')\n    warning('''\nYour compiler does not have ms-bitfields packing by default.\nPlease use gcc >= 4.7 or clang >= 12: GLib will drop -mms-bitfields in the future.\n''')\n  endif\n  win32_cflags = ['-mms-bitfields']\n  add_project_arguments(win32_cflags, language : 'c')\n\n  # Win32 API libs, used only by libglib and exposed in glib-2.0.pc\n  win32_ldflags = ['-lws2_32', '-lole32', '-lwinmm', '-lshlwapi', '-luuid']\nelif host_system == 'cygwin'\n  win32_ldflags = ['-luser32', '-lkernel32']\nendif\n\n# Tracing: dtrace\ndtrace_option = get_option('dtrace')\nenable_dtrace = dtrace_option.allowed()\n\nif glib_have_carbon\n  if dtrace_option.enabled()\n    error('GLib dtrace support not yet compatible with macOS dtrace')\n  else\n    enable_dtrace = false\n  endif\nendif\n\nif enable_dtrace\n  dtrace = find_program('dtrace', required : dtrace_option)\n  if not dtrace.found()\n    enable_dtrace = false\n  endif\nendif\n\nif enable_dtrace\n  if not cc.has_header('sys/sdt.h')\n    if dtrace_option.enabled()\n      error('dtrace support needs sys/sdt.h header')\n    else\n      enable_dtrace = false\n    endif\n  endif\nendif\n\nif enable_dtrace\n  # FIXME: autotools build also passes -fPIC -DPIC but is it needed in this case?\n  dtrace_obj_gen = generator(dtrace,\n    output : '@BASENAME@.o',\n    arguments : ['-G', '-s', '@INPUT@', '-o', '@OUTPUT@'])\n  dtrace_hdr_gen = generator(python,\n    output : '@BASENAME@.h',\n    arguments : ['-c', '''\nimport subprocess, sys\nsubprocess.run(sys.argv[1:], check=True)\noutput = sys.argv[6]\nwith open(output) as f:\n  contents = f.read()\ncontents = contents.replace(\"define STAP_HAS_SEMAPHORES 1\",\n  \"undef STAP_HAS_SEMAPHORES\")\ncontents = contents.replace(\"define _SDT_HAS_SEMAPHORES 1\",\n  \"undef _SDT_HAS_SEMAPHORES\")\nwith open(output, \"w\") as f:\n  f.write(contents)\n''', dtrace.full_path(), '-h', '-s', '@INPUT@', '-o', '@OUTPUT@'])\n  glib_conf.set('HAVE_DTRACE', 1)\nendif\n\nif cc.has_header_symbol('sys/ptrace.h', 'PTRACE_O_EXITKILL')\n  glib_conf.set('HAVE_PTRACE_O_EXITKILL', 1)\nendif\n\n# systemtap\nsystemtap = get_option('systemtap').require(enable_dtrace, error_message: 'Cannot enable systemtap because dtrace feature is disabled')\nenable_systemtap = systemtap.allowed()\n\nif enable_systemtap\n  tapset_install_dir = get_option('tapset_install_dir')\n  if tapset_install_dir == ''\n    tapset_install_dir = join_paths(get_option('datadir'), 'systemtap/tapset', host_machine.cpu_family())\n  endif\n  stp_cdata = configuration_data()\n  stp_cdata.set('ABS_GLIB_RUNTIME_LIBDIR', glib_libdir)\n  stp_cdata.set('LT_CURRENT', minor_version * 100)\n  stp_cdata.set('LT_REVISION', micro_version)\nendif\n\n# Introspection\n#\n# We depend on g-ir-scanner from gobject-introspection-1.0 to scan our source\n# to build GIR files. We then use gi-compile-repository from the local build\n# tree to build the typelibs (rather than using g-ir-compiler from\n# gobject-introspection). However, we use Meson’s gnome.generate_gir() function,\n# which adds a hard dependency on gobject-introspection-1.0, so we’d better\n# check for that here.\ngobject_introspection_required_version = '>= 1.80.0'\ngir_scanner = find_program('g-ir-scanner', required: get_option('introspection'), version: gobject_introspection_required_version)\ngobject_introspection = dependency('gobject-introspection-1.0', required: get_option('introspection'), version: gobject_introspection_required_version)\nenable_gir = get_option('introspection').allowed() and gir_scanner.found() and gobject_introspection.found() and meson.can_run_host_binaries()\n\nif get_option('introspection').enabled() and not meson.can_run_host_binaries()\n  error('Running binaries on the build host needs to be supported to build with -Dintrospection=enabled')\nendif\n\ngir_args = [\n  '--quiet',\n]\n\npkg = import('pkgconfig')\nwindows = import('windows')\ngnome = import('gnome')\n\nsubdir('tools')\nsubdir('glib')\nsubdir('gobject')\nsubdir('gthread')\nsubdir('gmodule')\nsubdir('gio')\nsubdir('girepository')\nsubdir('fuzzing')\nsubdir('tests')\n\n# xgettext is optional (on Windows for instance)\nif find_program('xgettext', required : get_option('nls')).found()\n  subdir('po')\nendif\n\n# Install m4 macros that other projects use\ninstall_data('m4macros/glib-2.0.m4', 'm4macros/glib-gettext.m4', 'm4macros/gsettings.m4',\n  install_dir : get_option('datadir') / 'aclocal',\n  install_tag : 'devel',\n)\n\n# Check whether we support overriding the invalid parameter handler on Windows for _get_osfhandle(),\n# g_fsync() (i.e. _commit()), etc\nif host_system == 'windows'\n  if cc.has_function('_set_thread_local_invalid_parameter_handler', prefix: '#include <stdlib.h>')\n    glib_conf.set('HAVE__SET_THREAD_LOCAL_INVALID_PARAMETER_HANDLER', 1)\n  endif\n  if cc.has_function('_set_invalid_parameter_handler', prefix: '#include <stdlib.h>')\n    glib_conf.set('HAVE__SET_INVALID_PARAMETER_HANDLER', 1)\n  endif\n  if cc.has_header_symbol('crtdbg.h', '_CrtSetReportMode')\n    glib_conf.set('HAVE__CRT_SET_REPORT_MODE', 1)\n  endif\nendif\n\nconfigure_file(output : 'config.h', configuration : glib_conf)\n\nrst2man = find_program('rst2man', 'rst2man.py', required: get_option('man-pages'))\nif rst2man.found()\n  rst2man_flags = [\n    '--syntax-highlight=none',\n  ]\n  man1_dir = glib_prefix / get_option('mandir') / 'man1'\nendif\n\nrst2html5 = find_program('rst2html5', 'rst2html5.py', required: get_option('documentation'))\n\ngnome = import('gnome')\nsubdir('docs/reference')\n\nsummary({\n  'host cpu' : host_machine.cpu_family(),\n  'host endian' : host_machine.endian(),\n  'host system' : host_system,\n  'C Compiler' : cc.get_id(),\n  'C++ Compiler' : have_cxx ? cxx.get_id() : 'none',\n  'shared build' : glib_build_shared,\n  'static build' : glib_build_static,\n}, section: 'Build environment')\n\nif build_machine.system() != host_system\n  summary({\n    'build cpu' : build_machine.cpu_family(),\n    'build endian' : build_machine.endian(),\n    'build system' : build_machine.system(),\n  }, section: 'Build environment')\nendif\n\nif linux_libc != ''\n  summary({\n    'linux_libc' : linux_libc\n  }, section: 'Build environment')\nendif\n\nsummary({\n  'prefix' : glib_prefix,\n  'bindir' : glib_bindir,\n  'libexecdir' : glib_libexecdir,\n  'pkgdatadir' : glib_pkgdatadir,\n  'datadir' : glib_datadir,\n  'includedir' : glib_includedir,\n  'giomodulesdir' : glib_giomodulesdir,\n  'localstatedir' : glib_localstatedir,\n  'runstatedir' : glib_runstatedir,\n}, section: 'Directories')\n\nif get_option('multiarch')\n  summary({\n    'multiarch bindir' : glib_bindir,\n    'multiarch libexecdir' : glib_libexecdir,\n  }, section: 'Directories')\nendif\n\nif enable_systemtap\n  summary('tapset dir', get_option('tapset_install_dir'), section: 'Directories')\nendif\n\nif host_system == 'linux'\n  summary({\n    'selinux' : selinux_dep.found(),\n    'libmount' : libmount_dep.found(),\n  }, section: 'Options')\nendif\n\nsummary({\n  'xattr' : xattr_dep.length() > 0,\n  'man-pages' : get_option('man-pages'),\n  'dtrace' : enable_dtrace,\n  'systemtap' : enable_systemtap,\n  'sysprof' : libsysprof_capture_dep.found(),\n  'documentation' : get_option('documentation'),\n  'bsymbolic_functions' : get_option('bsymbolic_functions'),\n  'force_posix_threads' : get_option('force_posix_threads'),\n  'tests' : get_option('tests'),\n  'installed_tests' : get_option('installed_tests'),\n  'nls' : get_option('nls'),\n  'oss_fuzz' : get_option('oss_fuzz'),\n  'glib_debug' : get_option('glib_debug'),\n  'glib_assert' : get_option('glib_assert'),\n  'glib_checks' : get_option('glib_checks'),\n  'libelf' : get_option('libelf'),\n  'multiarch' : get_option('multiarch'),\n  'introspection' : enable_gir,\n  'file_monitor_backend' : get_option('file_monitor_backend'),\n}, section: 'Options')\n"
        },
        {
          "name": "meson.options",
          "type": "blob",
          "size": 4.6328125,
          "content": "option('runtime_libdir',\n       type : 'string',\n       value : '',\n       description : 'install runtime libraries relative to libdir',\n       deprecated: true)\n\noption('charsetalias_dir',\n       type : 'string',\n       value : '',\n       description : 'directory for charset.alias dir (default to \\'libdir\\' if unset)')\n\noption('gio_module_dir',\n       type : 'string',\n       value : '',\n       description : 'load gio modules from this directory (default to \\'libdir/gio/modules\\' if unset)')\n\n# FIXME: Deliberately not named runstatedir to avoid colliding with\n# https://github.com/mesonbuild/meson/issues/4141; port to that when Meson\n# supports it\noption('runtime_dir',\n       type: 'string',\n       value: '',\n       description: 'Directory for transient runtime state [default: /run]')\n\noption('selinux',\n       type : 'feature',\n       value : 'auto',\n       description : 'build with selinux support')\n\noption('xattr',\n       type : 'boolean',\n       value : true,\n       description : 'build with xattr support')\n\noption('libmount',\n       type : 'feature',\n       value : 'auto',\n       description : 'build with libmount support')\n\noption('man',\n       type : 'boolean',\n       value : false,\n       description : 'generate man pages (requires xsltproc)',\n       deprecated : 'man-pages')\n\noption('man-pages',\n       type : 'feature',\n       value : 'auto',\n       description : 'generate man pages (requires rst2man)',\n       deprecated : { 'true': 'enabled', 'false': 'disabled' })\n\noption('dtrace',\n       type : 'feature',\n       value : 'auto',\n       deprecated : { 'true': 'enabled', 'false': 'disabled' },\n       description : 'include tracing support for dtrace')\n\noption('systemtap',\n       type : 'feature',\n       value : 'auto',\n       deprecated : { 'true': 'enabled', 'false': 'disabled' },\n       description : 'include tracing support for systemtap')\n\noption('tapset_install_dir',\n       type : 'string',\n       value : '',\n       description : 'path where systemtap tapsets are installed')\n\noption('sysprof',\n       type : 'feature',\n       value : 'auto',\n       description : 'include tracing support for sysprof')\n\noption('documentation',\n       type : 'boolean',\n       value : false,\n       description : 'Build API reference and tools documentation')\n\noption('gtk_doc',\n       type : 'boolean',\n       value : false,\n       description : 'use gtk-doc to build documentation',\n       deprecated : 'documentation')\n\noption('bsymbolic_functions',\n       type : 'boolean',\n       value : true,\n       description : 'link with -Bsymbolic-functions if supported')\n\noption('force_posix_threads',\n       type : 'boolean',\n       value : false,\n       description : 'Also use posix threads in case the platform defaults to another implementation (on Windows for example)')\n\noption('tests',\n       type : 'boolean',\n       value : true,\n       description : 'build tests')\n\noption('installed_tests',\n       type : 'boolean',\n       value : false,\n       description : 'enable installed tests')\n\noption('nls',\n       type : 'feature',\n       value : 'auto',\n       yield: true,\n       description : 'Enable native language support (translations)')\n\noption('oss_fuzz',\n       type : 'feature',\n       value : 'disabled',\n       description : 'Indicate oss-fuzz build environment')\n\noption('glib_debug',\n       type : 'feature',\n       value : 'enabled',\n       yield : true,\n       description : 'Enable GLib debug infrastructure (distros typically want this disabled in production; see docs/macros.md)')\n\noption('glib_assert',\n       type : 'boolean',\n       value : true,\n       yield : true,\n       description : 'Enable GLib assertion (see docs/macros.md)')\n\noption('glib_checks',\n       type : 'boolean',\n       value : true,\n       yield : true,\n       description : 'Enable GLib checks such as API guards (see docs/macros.md)')\n\noption('libelf',\n       type : 'feature',\n       value : 'auto',\n       description : 'Enable support for listing and extracting from ELF resource files with gresource tool')\n\noption('multiarch',\n       type : 'boolean',\n       value : false,\n       description : 'Install some helper executables in per-architecture locations')\n\noption('gir_dir_prefix',\n       type: 'string',\n       description: 'Intermediate prefix for gir installation under ${prefix}')\n\noption('introspection',\n       type: 'feature',\n       value: 'auto',\n       yield: true,\n       description: 'Enable generating introspection data (requires gobject-introspection)')\n\noption('file_monitor_backend',\n       type : 'combo',\n       choices : ['auto', 'inotify', 'kqueue', 'libinotify-kqueue', 'win32'],\n       value : 'auto',\n       description : 'The name of the system API to use as a GFileMonitor backend')\n"
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "subprojects",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}