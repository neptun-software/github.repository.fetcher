{
  "metadata": {
    "timestamp": 1736709698719,
    "page": 72,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/wuffs",
      "stars": 4242,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".allstar",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.0224609375,
          "content": "BasedOnStyle: Chromium\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3349609375,
          "content": "# Source code is always LF, never CRLF.\n#\n# For example, tools like the wuffs-c compiler (and its internal/cgen package)\n# look for hard-coded strings containing \"\\n\" but not \"\\r\\n\".\n*.c     text eol=lf\n*.cc    text eol=lf\n*.go    text eol=lf\n*.h     text eol=lf\n*.hh    text eol=lf\n*.rs    text eol=lf\n*.sh    text eol=lf\n*.wuffs text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0830078125,
          "content": "*.exe\n*.out\n*~\n/gen\n/hello-wuffs-c/parse.c\nCargo.lock\nperf.data\nperf.data.old\ntarget\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.78125,
          "content": "# This is the official list of Wuffs authors for copyright purposes.\n# This file is distinct from the CONTRIBUTORS files.\n# See the latter for an explanation.\n\n# Names should be added to this file as one of\n#     Organization's name\n#     Individual's name <submission email address>\n#     Individual's name <submission email address> <email2> <emailN>\n# See CONTRIBUTORS for the meaning of multiple email addresses.\n\n# Please keep the list sorted.\n\nAndrew Dassonville <dassonville.andrew@gmail.com>\nGoogle Inc.\nJimmy Casey <casey.jimmy@gmail.com>\nMagnus Anderson <magnus@iastate.edu>\nMichael Mc Donnell <michael@mcdonnell.dk>\nMike Kaufman <mkaufman@microsoft.com>\nMuhammad Aldo Firmansyah <TheCrott@users.noreply.github.com>\nPřemysl Eric Janouch <p@janouch.name>\nsarastro-nl <nlsarastro@gmail.com>\n"
        },
        {
          "name": "BUILD.md",
          "type": "blob",
          "size": 3.150390625,
          "content": "# Build Instructions\n\nAnswering \"how do I build Wuffs\" depends on what exactly you mean by \"Wuffs\":\n\n1. The Wuffs library (e.g. image decoders) in C/C++ form.\n2. Its example programs (e.g. jsonptr).\n3. The Wuffs toolchain (e.g. Wuffs-to-C compiler/proof-checker).\n4. The Wuffs library in Wuffs form (converting it to C/C++ code).\n5. Everything.\n\n\n## Quick Start\n\nThe rest of this document assumes that you've already checked out and moved\ninto the Wuffs repository's directory, like this:\n\n```\ngit clone https://github.com/google/wuffs.git\ncd wuffs\n```\n\nIf you just want to kick the metaphorical tyres:\n\n```\n./build-example.sh example/jsonptr\ngen/bin/example-jsonptr test/data/rfc-6901-json-pointer.json\n```\n\n\n## Building the Wuffs Library (in C/C++ Form)\n\nThere's no build step, in that there's no \"configure and make\" step needed\nbefore moving on to building the example programs.\n\nTo elaborate, transpiling (converting Wuffs-the-library from `*.wuffs` form\ninto a single `*.c` file) isn't done by whoever *checks out* the Wuffs\nrepository. It's done by whoever *checks in* code changes.\n\nWuffs-the-library is provided as [single file C\nlibrary](https://github.com/nothings/stb/blob/master/docs/stb_howto.txt). The\nexample programs just `#include` that file directly.\n\nFor your own projects, just copy `release/c/wuffs-$VERSION.c` to your directory\nand add that file to your pre-existing build system, or compile an `*.o` object\nfile directly like below. Remember to define the `WUFFS_IMPLEMENTATION` macro\nto compile all of the C code in that single file, not just the \"header\" part.\n\n```\n# Most developers won't have to do this. It just demonstrates how to produce\n# wuffs-v0.3.o directly from a C/C++ compiler.\ngcc -c -DWUFFS_IMPLEMENTATION -O3 release/c/wuffs-v0.3.c\n```\n\n\n## Building the Example Programs\n\nJust run your favorite C/C++ compiler (e.g. `gcc` or `g++`) on the\n`example/foo/*.{c,cc}` file. Pass `-O3` or equivalent for an optimized build:\n\n```\ngcc -O3 example/mzcat/mzcat.c -o my-mzcat\n./my-mzcat < test/data/romeo.txt.bz2\n```\n\nSome example programs require additional libraries:\n\n```\ng++ example/imageviewer/imageviewer.cc -lxcb -lxcb-image -lxcb-render -lxcb-render-util\n\ng++ example/sdl-imageviewer/sdl-imageviewer.cc -lSDL2 -lSDL2_image\n```\n\nThe `build-example.sh` script (an alternative to running your favorite C/C++\ncompiler directly) takes care of having to remember those additional libraries.\n\n```\n./build-example.sh example/sdl-imageviewer\ngen/bin/example-sdl-imageviewer test/data/hat.jpeg\n```\n\nBuilding the fuzzers are similar, using `build-fuzz.sh` instead of\n`build-example.sh`.\n\n\n## Building the Wuffs Toolchain\n\nMost developers won't have to do this. See the sections above instead.\n\nBut after editing `lang/check/*.go` files, do this:\n\n```\ngo install ./cmd/wuffs*\n```\n\n\n## Building the Wuffs library (from its Wuffs Form)\n\nMost developers won't have to do this. See the sections above instead.\n\nBut after editing `std/jpeg/*.wuffs` files, do this:\n\n```\nwuffs gen std/...\n```\n\n\n## Building Everything (All of the Above, Plus Tests, Benchmarks, Etc)\n\nMost developers won't have to do this. See the sections above instead.\n\nBut before sending a Pull Request, do this:\n\n```\n./build-all.sh\n```\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.6923828125,
          "content": "# How to Contribute\n\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\n\n\n## Contributor License Agreement\n\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution,\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted\none (even if it was for a different project), you probably don't need to do it\nagain.\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 1.8974609375,
          "content": "# This is the official list of people who can contribute\n# (and typically have contributed) code to the Wuffs repository.\n# The AUTHORS file lists the copyright holders; this file\n# lists people.  For example, Google employees are listed here\n# but not in AUTHORS, because Google holds the copyright.\n#\n# The submission process automatically checks to make sure\n# that people submitting code are listed in this file (by email address).\n#\n# Names should be added to this file only after verifying that\n# the individual or the individual's organization has agreed to\n# the appropriate Contributor License Agreement, found here:\n#\n#     http://code.google.com/legal/individual-cla-v1.0.html\n#     http://code.google.com/legal/corporate-cla-v1.0.html\n#\n# The agreement for individuals can be filled out on the web.\n#\n# When adding J Random Contributor's name to this file,\n# either J's name or J's organization's name should be\n# added to the AUTHORS file, depending on whether the\n# individual or corporate CLA was used.\n\n# Names should be added to this file like so:\n#     Individual's name <submission email address>\n#     Individual's name <submission email address> <email2> <emailN>\n#\n# An entry with multiple email addresses specifies that the\n# first address should be used in the submit logs and\n# that the other addresses should be recognized as the\n# same person when interacting with Gerrit.\n\n# Please keep the list sorted.\n\nAndrew Dassonville <dassonville.andrew@gmail.com>\nChris Palmer <chris@noncombatant.org>\nJimmy Casey <casey.jimmy@gmail.com>\nLeo Neat <lneat@google.com>\nMagnus Anderson <magnus@iastate.edu>\nMichael Mc Donnell <michael@mcdonnell.dk>\nMike Kaufman <mkaufman@microsoft.com>\nMuhammad Aldo Firmansyah <TheCrott@users.noreply.github.com>\nNigel Tao <nigeltao@golang.org>\nPatrick Georgi <pgeorgi@google.com>\nPeter Kasting <pkasting@chromium.org>\nPřemysl Eric Janouch <p@janouch.name>\nsarastro-nl <nlsarastro@gmail.com>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.10546875,
          "content": "This software is distributed under the terms of both the MIT license and the\nApache License (Version 2.0).\n\n\nMIT license\n\nCopyright 2023 The Wuffs Authors\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n\nApache 2 license\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 9.935546875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.0322265625,
          "content": "Copyright 2023 The Wuffs Authors\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.5224609375,
          "content": "Wuffs is a **memory-safe programming language** (and a **standard library**\nwritten in that language) for **Wrangling Untrusted File Formats Safely**.\nWrangling includes parsing, decoding and encoding. Example file formats include\nimages, audio, video, fonts and compressed archives.\n\nIt is [**\"ridiculously\nfast\"**](https://twitter.com/richgel999/status/1481027198530248714).\n\n![Screenshot of a tweet saying \"ridiculously\nfast\"](./test/data/ridiculously-fast.png)\n\nPer its [benchmarks](/doc/benchmarks.md) and other linked-to blog posts:\n\n- It can decode bzip2 **[1.3x faster than `/usr/bin/bzcat`\n  (C)](https://nigeltao.github.io/blog/2022/wuffs-bzip2-decoder.html)**.\n- It can decode deflate up to **1.4x faster than zlib-the-library (C)**.\n- It can decode GIF **2x-6x faster than \"giflib\" (C), \"image/gif\" (Go) and\n  \"gif\" (Rust)**.\n- It can decode PNG **[1.2x-2.7x faster than \"libpng\" (C), \"image/png\" (Go) and\n  \"png\"\n  (Rust)](https://nigeltao.github.io/blog/2021/fastest-safest-png-decoder.html)**.\n\n\n## Goals and Non-Goals\n\nWuffs' goal is to produce software libraries that are as safe as Go or Rust,\nroughly speaking, but as fast as C, and that can be used anywhere C libraries\nare used. This includes very large C/C++ projects, such as popular web browsers\nand operating systems (using that term to include desktop and mobile user\ninterfaces, not just the kernel).\n\n[Wuffs the Library](/doc/wuffs-the-library.md) is [available](/release/c) as\ntranspiled C code. Other C/C++ projects can **use that library without\nrequiring the [Wuffs the Language](/doc/wuffs-the-language.md) toolchain**.\nThose projects can use Wuffs the Library like using any other third party C\nlibrary. It's just not hand-written C.\n\nHowever, unlike hand-written C, Wuffs the Language is safe with respect to\nbuffer overflows, integer arithmetic overflows and null pointer dereferences. A\nkey difference between Wuffs and other memory-safe languages is that **all such\nchecks are done at compile time, not at run time**. If it compiles, it is safe,\nwith respect to those three bug classes.\n\nThe trade-off in aiming for both safety and speed is that Wuffs programs take\nlonger for a programmer to write, as they have to **explicitly annotate their\nprograms with proofs of safety**. A statement like `x += 1` unsurprisingly\nmeans to increment the variable `x` by `1`. However, in Wuffs, such a statement\nis a compile time error unless the compiler can also prove that `x` is not the\nmaximal value of `x`'s type (e.g. `x` is not `255` if `x` is a `base.u8`), as\nthe increment would otherwise overflow. Similarly, an integer arithmetic\nexpression like `x / y` is a compile time error unless the compiler can also\nprove that `y` is not zero.\n\n\n## Hermeticity\n\nWuffs is not a general purpose programming language. **It is for writing\nlibraries, not programs**. Wuffs code is [hermetic](/doc/note/hermeticity.md)\nand can only compute (e.g. convert \"compressed bytes\" to \"decompressed bytes\").\n**It cannot make any syscalls** (e.g. it has no ambient authority to read your\nfiles), implying that it cannot allocate or free memory (and is therefore\ntrivially safe against things like memory leaks, use-after-frees and\ndouble-frees).\n\nIt produces [Sans I/O style](https://sans-io.readthedocs.io/) libraries (but C\nlibraries, not Python), meaning that they are agnostic to ['function\ncolors'](https://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/).\nThey can be combined with synchronous or asynchronous I/O, as the library\ncaller (not library implementation) is responsible for the actual I/O.\n\nThe idea isn't to write your whole program in Wuffs, **only the parts that are\nboth performance-conscious and security-conscious**. For example, while\ntechnically possible, it is unlikely that a Wuffs compiler would be worth\nwriting entirely in Wuffs.\n\n\n## What Does Wuffs Code Look Like?\n\nThe [`/std/lzw/decode_lzw.wuffs`](/std/lzw/decode_lzw.wuffs) file is a good\nexample. The [Wuffs the Language](/doc/wuffs-the-language.md) document has more\ninformation on how it differs from other languages in the C family.\n\n\n## What Does Compile Time Checking Look Like?\n\nFor example, making this one-line edit to the LZW codec leads to a compile time\nerror. `wuffs gen` fails to generate the C code, i.e. fails to compile\n(transpile) the Wuffs code to C code:\n\n```diff\ndiff --git a/std/lzw/decode_lzw.wuffs b/std/lzw/decode_lzw.wuffs\nindex f878c5e..f10dcee 100644\n--- a/std/lzw/decode_lzw.wuffs\n+++ b/std/lzw/decode_lzw.wuffs\n@@ -98,7 +98,7 @@ pub func lzw_decoder.decode?(dst ptr buf1, src ptr buf1, src_final bool)() {\n                        in.dst.write?(x:s)\n\n                        if use_save_code {\n-                               this.suffixes[save_code] = c as u8\n+                               this.suffixes[save_code] = (c + 1) as u8\n                                this.prefixes[save_code] = prev_code as u16\n                        }\n```\n\n```\n$ wuffs gen std/gif\ncheck: expression \"(c + 1) as u8\" bounds [1 ..= 256] is not within bounds [0 ..= 255] at\n/home/n/go/src/github.com/google/wuffs/std/lzw/decode_lzw.wuffs:101. Facts:\n    n_bits < 8\n    c < 256\n    this.stack[s] == (c as u8)\n    use_save_code\n```\n\nIn comparison, this two-line edit will compile (but the \"does it decode GIF\ncorrectly\" tests then fail):\n\n```diff\ndiff --git a/std/lzw/decode_lzw.wuffs b/std/lzw/decode_lzw.wuffs\nindex f878c5e..b43443d 100644\n--- a/std/lzw/decode_lzw.wuffs\n+++ b/std/lzw/decode_lzw.wuffs\n@@ -97,8 +97,8 @@ pub func lzw_decoder.decode?(dst ptr buf1, src ptr buf1, src_final bool)() {\n                        // type checking, bounds checking and code generation for it).\n                        in.dst.write?(x:s)\n\n-                       if use_save_code {\n-                               this.suffixes[save_code] = c as u8\n+                       if use_save_code and (c < 200) {\n+                               this.suffixes[save_code] = (c + 1) as u8\n                                this.prefixes[save_code] = prev_code as u16\n                        }\n```\n\n```\n$ wuffs gen std/gif\ngen wrote:      /home/n/go/src/github.com/google/wuffs/gen/c/gif.c\ngen unchanged:  /home/n/go/src/github.com/google/wuffs/gen/h/gif.h\n$ wuffs test std/gif\ngen unchanged:  /home/n/go/src/github.com/google/wuffs/gen/c/gif.c\ngen unchanged:  /home/n/go/src/github.com/google/wuffs/gen/h/gif.h\ntest:           /home/n/go/src/github.com/google/wuffs/test/c/gif\ngif/basic.c     clang   PASS (8 tests run)\ngif/basic.c     gcc     PASS (8 tests run)\ngif/gif.c       clang   FAIL test_lzw_decode: bufs1_equal: wi: got 19311, want 19200.\ncontents differ at byte 3 (in hex: 0x000003):\n  000000: dcdc dc00 00d9 f5f9 f6df dc5f 393a 3a3a  ..........._9:::\n  000010: 3a3b 618e c8e4 e4e4 e5e4 e600 00e4 bbbb  :;a.............\n  000020: eded 8f91 9191 9090 9090 9190 9192 9192  ................\n  000030: 9191 9292 9191 9293 93f0 f0f0 f1f1 f2f2  ................\nexcerpts of got (above) versus want (below):\n  000000: dcdc dcdc dcd9 f5f9 f6df dc5f 393a 3a3a  ..........._9:::\n  000010: 3a3a 618e c8e4 e4e4 e5e4 e6e4 e4e4 bbbb  ::a.............\n  000020: eded 8f91 9191 9090 9090 9090 9191 9191  ................\n  000030: 9191 9191 9191 9193 93f0 f0f0 f1f1 f2f2  ................\n\ngif/gif.c       gcc     FAIL test_lzw_decode: bufs1_equal: wi: got 19311, want 19200.\ncontents differ at byte 3 (in hex: 0x000003):\n  000000: dcdc dc00 00d9 f5f9 f6df dc5f 393a 3a3a  ..........._9:::\n  000010: 3a3b 618e c8e4 e4e4 e5e4 e600 00e4 bbbb  :;a.............\n  000020: eded 8f91 9191 9090 9090 9190 9192 9192  ................\n  000030: 9191 9292 9191 9293 93f0 f0f0 f1f1 f2f2  ................\nexcerpts of got (above) versus want (below):\n  000000: dcdc dcdc dcd9 f5f9 f6df dc5f 393a 3a3a  ..........._9:::\n  000010: 3a3a 618e c8e4 e4e4 e5e4 e6e4 e4e4 bbbb  ::a.............\n  000020: eded 8f91 9191 9090 9090 9090 9191 9191  ................\n  000030: 9191 9191 9191 9193 93f0 f0f0 f1f1 f2f2  ................\n\nwuffs-test-c: some tests failed\nwuffs test: some tests failed\n```\n\n# Directory Layout\n\n- `lang` holds the Go libraries that implement Wuffs the Language: tokenizer,\n  AST, parser, renderer, etc. The Wuffs tools are written in Go, but as\n  mentioned above, Wuffs transpiles to C code, and Go is not necessarily\n  involved if all you want is to use the C edition of Wuffs.\n- `lib` holds other Go libraries, not specific to Wuffs the Language per se.\n- `internal` holds internal implementation details, as per Go's [internal\n  packages](https://golang.org/s/go14internal) convention.\n- `cmd` holds Wuffs the Language' command line tools, also written in Go.\n- `std` holds Wuffs the Library's code.\n- `release` holds the releases (e.g. in their C form) of Wuffs the Library.\n- `test` holds the regular tests for Wuffs the Library.\n- `fuzz` holds the fuzz tests for Wuffs the Library.\n- `script` holds miscellaneous utility programs.\n- `doc` holds documentation.\n- `example` holds example programs for Wuffs the Library.\n- `hello-wuffs-c` holds an example program for Wuffs the Language.\n\n\n# Building\n\nSee the [BUILD](/BUILD.md) instructions.\n\n\n# Documentation\n\n- [Getting Started](/doc/getting-started.md). **Start here** if you want to\n  play but aren't sure how (and [BUILD](/BUILD.md) doesn't help).\n- [Background](/doc/background.md).\n- [Benchmarks](/doc/benchmarks.md).\n- [Binary Size](/doc/binary-size.md).\n- [Changelog](/doc/changelog.md).\n- [Glossary](/doc/glossary.md).\n- [Related Work](/doc/related-work.md).\n- [Roadmap](/doc/roadmap.md).\n- [Wuffs the Language](/doc/wuffs-the-language.md) overview.\n- [Wuffs the Library](/doc/wuffs-the-library.md) overview and see also [API\n  categories](/doc/std).\n\nThe [Note](/doc/note) directory also contains various short articles.\n\n\n# Non-C/C++ Languages\n\n- [dev0x13/pywuffs](https://github.com/dev0x13/pywuffs) holds Python bindings\n  for Wuffs the Library.\n- Bindings for Go, Rust and other languages are tracked as [issue\n  #38](https://github.com/google/wuffs/issues/38).\n\n\n# Status\n\nVersion 0.3 (April 2023) is the latest stable version. Stable means that\nits API won't change any further, but being a \"version 0.x\" means that:\n\n- It will not have long term support.\n- Newer versions make no promises about compatibility.\n\nThe compiler undoubtedly has bugs. Assertion checking needs more rigor,\nespecially around side effects and aliasing, and being sufficiently well\nspecified to allow alternative implementations. Lots of detail needs work, but\nthe broad brushstrokes are there.\n\nNonetheless, Wuffs' GIF decoder has shipped in the Google Chrome web browser\n[since June\n2021](https://chromium-review.googlesource.com/c/chromium/src/+/2940044)\n(milestone M93). See also the [\"ridiculously\nfast\"](https://twitter.com/richgel999/status/1481027198530248714) tweet already\nmentioned above.\n\n\n# Discussion\n\nThe mailing list is at\n[https://groups.google.com/forum/#!forum/wuffs](https://groups.google.com/forum/#!forum/wuffs).\n\n\n# Contributing\n\nThe [CONTRIBUTING.md](/CONTRIBUTING.md) file contains instructions on how to\nfile the Contributor License Agreement before sending any pull requests (PRs).\nOf course, if you're new to the project, it's usually best to discuss any\nproposals and reach consensus before sending your first PR.\n\nSource code is [auto-formatted](/doc/note/auto-formatting.md).\n\n\n# License\n\nThis software is distributed under the terms of both the MIT license and the\nApache License (Version 2.0).\n\nSee LICENSE for details.\n\n\n# Disclaimer\n\nThis is not an official Google product, it is just code that happens to be\nowned by Google.\n\n\n# Mascot\n\nTony is an arse-kicking wombat who loves playing\n[full-forward](https://en.wikipedia.org/wiki/Full-forward) and hates buffer\noverflows.\n\n![WUFFS Logo](./doc/logo/wuffs-acronym-logo-1536x1024.png)\n\n\n---\n\nUpdated on November 2023.\n"
        },
        {
          "name": "build-all.sh",
          "type": "blob",
          "size": 4.0869140625,
          "content": "#!/bin/bash -eu\n# Copyright 2018 The Wuffs Authors.\n#\n# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n# https://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n# <LICENSE-MIT or https://opensource.org/licenses/MIT>, at your\n# option. This file may not be copied, modified, or distributed\n# except according to those terms.\n#\n# SPDX-License-Identifier: Apache-2.0 OR MIT\n\n# ----------------\n\n# This script, build-all.sh, is a simple coherence check that the tests pass\n# and the example programs (including fuzz programs) compile.\n#\n# If you're just looking to get started with Wuffs, running this script isn't\n# necessary (as Wuffs doesn't have the \"configure; make; make install\" dance or\n# its equivalent), although studying this script can help you learn how the\n# pieces fit together.\n#\n# For example, this script builds command line tools, such as `wuffs` and\n# `wuffs-fmt`, that are used when *developing* Wuffs, but aren't necessary if\n# all you want to do is *use* Wuffs as a third party library. In the latter\n# case, the only files you need are those under the release/ directory.\n#\n# Instead of running this script, you should be able to run the example\n# programs (except the `example/toy-genlib` special case) out of the box,\n# without having to separately configure, build or install a library:\n#\n# git clone https://github.com/google/wuffs.git\n# cd wuffs\n# gcc ./example/zcat/zcat.c\n# ./a.out < ./test/data/romeo.txt.gz\n#\n# See BUILD.md for more discussion.\n\nif [ ! -e wuffs-root-directory.txt ]; then\n  echo \"$0 should be run from the Wuffs root directory.\"\n  exit 1\nfi\n\nCC=${CC:-gcc}\nCXX=${CXX:-g++}\n\ngo install github.com/google/wuffs/cmd/...\ngo test    github.com/google/wuffs/...\nwuffs gen\n\n# Compiler warning flags are discussed at\n# http://fastcompression.blogspot.com/2019/01/compiler-warnings.html\n# with some further flags from\n# https://review.coreboot.org/plugins/gitiles/coreboot/+/17848b65c38c32fa9630925ca8a15203a0617788/Makefile.inc#480\nWARNING_FLAGS=\"-Wall -Werror -Wpedantic -Wcast-qual -Wcast-align -Wpointer-arith -Wfloat-equal -Wundef -Wvla -Wconversion -Wshadow -Wredundant-decls -Wunused-const-variable\"\nC_WARNING_FLAGS=\"$WARNING_FLAGS -Wstrict-prototypes -Wold-style-definition\"\nCXX_WARNING_FLAGS=\"$WARNING_FLAGS\"\n\necho \"Checking snapshot compiles cleanly (as C99)\"\n$CC -c $C_WARNING_FLAGS                          -std=c99 -Wc++-compat \\\n    release/c/wuffs-unsupported-snapshot.c -o /dev/null\n$CC -c $C_WARNING_FLAGS   -DWUFFS_IMPLEMENTATION -std=c99 -Wc++-compat \\\n    release/c/wuffs-unsupported-snapshot.c -o /dev/null\n\necho \"Checking snapshot compiles cleanly (as C++11)\"\n$CXX -c $CXX_WARNING_FLAGS                        -std=c++11 -x c++ \\\n    release/c/wuffs-unsupported-snapshot.c -o /dev/null\n$CXX -c $CXX_WARNING_FLAGS -DWUFFS_IMPLEMENTATION -std=c++11 -x c++ \\\n    release/c/wuffs-unsupported-snapshot.c -o /dev/null\n\nwuffs genlib -skipgen\nwuffs test   -skipgen -mimic\nwuffs bench  -skipgen -mimic -reps=1 -iterscale=1\n\n./build-example.sh\n./build-fuzz.sh\n\n# ----\n\necho \"Running  gen/bin/example-crc32\"\nJSON_THINGS_CRC32=$(gen/bin/example-crc32 < test/data/json-things.formatted.json)\nif [ \"$JSON_THINGS_CRC32\" != \"cdcc7e35\" ]; then\n  echo \"example-crc32 failed on json-things data\"\n  exit 1\nfi\n\n# ----\n\necho \"Running  gen/bin/example-jsonptr\"\nJSON_THINGS_CRC32=$(gen/bin/example-jsonptr < test/data/json-things.unformatted.json | gen/bin/example-crc32)\nif [ \"$JSON_THINGS_CRC32\" != \"cdcc7e35\" ]; then\n  echo \"example-jsonptr failed on json-things data\"\n  exit 1\nfi\n\n# ----\n\necho \"Running  gen/bin/example-convert-to-nia\"\nset +e\nscript/print-nia-checksums.sh | \\\n    diff --unified test/nia-checksums-of-data.txt /dev/stdin\nif [ $? != 0 ]; then\n  echo \"Unexpected change in test/nia-checksums-of-data.txt\"\n  exit 1\nfi\nset -e\n\n# ----\n\necho \"Running  gen/bin/example-mzcat\"\nset +e\nscript/print-mzcat-checksums.sh | \\\n    diff --unified test/mzcat-checksums-of-data.txt /dev/stdin\nif [ $? != 0 ]; then\n  echo \"Unexpected change in test/mzcat-checksums-of-data.txt\"\n  exit 1\nfi\nset -e\n\n# ----\n\nfor f in gen/bin/fuzz-*; do\n  echo \"Running  $f\"\n  $f test/data > /dev/null\ndone\n\n# ----\n\necho \"DONE: build-all.sh\"\n"
        },
        {
          "name": "build-example.sh",
          "type": "blob",
          "size": 2.6396484375,
          "content": "#!/bin/bash -eu\n# Copyright 2018 The Wuffs Authors.\n#\n# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n# https://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n# <LICENSE-MIT or https://opensource.org/licenses/MIT>, at your\n# option. This file may not be copied, modified, or distributed\n# except according to those terms.\n#\n# SPDX-License-Identifier: Apache-2.0 OR MIT\n\n# ----------------\n\n# See BUILD.md and build-all.sh for more discussion.\n\nif [ ! -e wuffs-root-directory.txt ]; then\n  echo \"$0 should be run from the Wuffs root directory.\"\n  exit 1\nfi\n\nCC=${CC:-gcc}\nCXX=${CXX:-g++}\nLDFLAGS=${LDFLAGS:-}\n\n# The \"-fdata-sections -ffunction-sections -Wl,--gc-sections\" produces smaller\n# binaries. See commit 41fce8a8 \"Strip examples of unused data and functions\".\nCFLAGS=${CFLAGS:--O3 -fdata-sections -ffunction-sections -Wall -Wl,--gc-sections}\nCXXFLAGS=${CXXFLAGS:--O3 -fdata-sections -ffunction-sections -Wall -Wl,--gc-sections}\n\nmkdir -p gen/bin\n\nsources=$@\nif [ $# -eq 0 ]; then\n  sources=example/*\nfi\n\nfor f in $sources; do\n  f=${f%/}\n  f=${f##*/}\n  if [ -z $f ]; then\n    continue\n  fi\n\n  if [ $f = imageviewer ]; then\n    # example/imageviewer is unusual in that needs additional libraries.\n    echo \"Building (C++) gen/bin/example-$f\"\n    $CXX $CXXFLAGS example/$f/*.cc \\\n        $LDFLAGS -lxcb -lxcb-image -lxcb-render -lxcb-render-util \\\n        -o gen/bin/example-$f\n  elif [ $f = \"sdl-imageviewer\" ]; then\n    # example/sdl-imageviewer is unusual in that needs additional libraries.\n    echo \"Building (C++) gen/bin/example-$f\"\n    $CXX $CXXFLAGS example/$f/*.cc \\\n        $LDFLAGS -lSDL2 -lSDL2_image \\\n        -o gen/bin/example-$f\n  elif [ $f = \"toy-genlib\" ]; then\n    # example/toy-genlib is unusual in that it uses separately compiled\n    # libraries (built by \"wuffs genlib\", e.g. by running build-all.sh) instead\n    # of directly #include'ing Wuffs' .c files.\n    if [ -e gen/lib/c/$CC-static/libwuffs.a ]; then\n      echo \"Building (C)   gen/bin/example-$f\"\n      $CC $CFLAGS -static -I.. example/$f/*.c gen/lib/c/$CC-static/libwuffs.a \\\n          $LDFLAGS -o gen/bin/example-$f\n    else\n      echo \"Skipping gen/bin/example-$f; run \\\"wuffs genlib\\\" first\"\n    fi\n  elif [ -e example/$f/*.c ]; then\n    echo \"Building (C)   gen/bin/example-$f\"\n    $CC  $CFLAGS              example/$f/*.c  $LDFLAGS -o gen/bin/example-$f\n  elif [ $f = \"jsonfindptrs\" ]; then\n    echo \"Building (C++) gen/bin/example-$f\"\n    $CXX $CXXFLAGS -std=c++17 example/$f/*.cc $LDFLAGS -o gen/bin/example-$f\n  elif [ -e example/$f/*.cc ]; then\n    echo \"Building (C++) gen/bin/example-$f\"\n    $CXX $CXXFLAGS            example/$f/*.cc $LDFLAGS -o gen/bin/example-$f\n  fi\ndone\n"
        },
        {
          "name": "build-fuzz.sh",
          "type": "blob",
          "size": 1.521484375,
          "content": "#!/bin/bash -eu\n# Copyright 2018 The Wuffs Authors.\n#\n# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n# https://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n# <LICENSE-MIT or https://opensource.org/licenses/MIT>, at your\n# option. This file may not be copied, modified, or distributed\n# except according to those terms.\n#\n# SPDX-License-Identifier: Apache-2.0 OR MIT\n\n# ----------------\n\n# See build-all.sh for commentary.\n\nif [ ! -e wuffs-root-directory.txt ]; then\n  echo \"$0 should be run from the Wuffs root directory.\"\n  exit 1\nfi\n\nCC=${CC:-gcc}\nCXX=${CXX:-g++}\nLDFLAGS=${LDFLAGS:-}\n\n# The \"-fdata-sections -ffunction-sections -Wl,--gc-sections\" produces smaller\n# binaries. See commit 41fce8a8 \"Strip examples of unused data and functions\".\nCFLAGS=${CFLAGS:--O3 -fdata-sections -ffunction-sections -Wl,--gc-sections}\nCXXFLAGS=${CXXFLAGS:--O3 -fdata-sections -ffunction-sections -Wl,--gc-sections}\n\nmkdir -p gen/bin\n\nsources=$@\nif [ $# -eq 0 ]; then\n  sources=fuzz/c/std/*_fuzzer.c*\nfi\n\nfor f in $sources; do\n  f=${f%_fuzzer.c}\n  f=${f%_fuzzer.cc}\n  f=${f%/}\n  f=${f##*/}\n  if [ -z $f ]; then\n    continue\n  fi\n\n  if [   -e fuzz/c/std/${f}_fuzzer.c  ]; then\n    echo \"Building (C)   gen/bin/fuzz-$f\"\n    $CC  $CFLAGS   -DWUFFS_CONFIG__FUZZLIB_MAIN fuzz/c/std/${f}_fuzzer.c  \\\n        $LDFLAGS -o gen/bin/fuzz-$f\n  elif [ -e fuzz/c/std/${f}_fuzzer.cc ]; then\n    echo \"Building (C++) gen/bin/fuzz-$f\"\n    $CXX $CXXFLAGS -DWUFFS_CONFIG__FUZZLIB_MAIN fuzz/c/std/${f}_fuzzer.cc \\\n        $LDFLAGS -o gen/bin/fuzz-$f\n  fi\ndone\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.0390625,
          "content": "module github.com/google/wuffs\n\ngo 1.16\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "hello-wuffs-c",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "lang",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "snippet",
          "type": "tree",
          "content": null
        },
        {
          "name": "std",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "wuffs-root-directory.txt",
          "type": "blob",
          "size": 0.1474609375,
          "content": "This placeholder file indicates the root of the Wuffs repository.\n\nFor example, filenames like \"test/data/pi.txt\" are relative to this root\ndirectory.\n"
        }
      ]
    }
  ]
}