{
  "metadata": {
    "timestamp": 1736709801148,
    "page": 254,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "containers/crun",
      "stars": 3139,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.0966796875,
          "content": "---\nBasedOnStyle:  GNU\nAccessModifierOffset: -2\nAlignAfterOpenBracket: Align\nAlignConsecutiveMacros: false\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Left\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: true\nAllowAllConstructorInitializersOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: Never\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortLambdasOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: All\nAlwaysBreakAfterReturnType: AllDefinitions\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: MultiLine\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterCaseLabel:  true\n  AfterClass:      true\n  AfterControlStatement: true\n  AfterEnum:       true\n  AfterFunction:   true\n  AfterNamespace:  true\n  AfterObjCDeclaration: true\n  AfterStruct:     true\n  AfterUnion:      true\n  BeforeCatch:     true\n  BeforeElse:      true\n  IndentBraces:    true\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: All\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false\nBreakInheritanceList: BeforeColon\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit: 0\nContinuationIndentWidth: 4\nDeriveLineEnding: true\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: false\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeBlocks:   Preserve\nIncludeIsMainRegex: '(Test)?$'\nIncludeIsMainSourceRegex: ''\nIndentCaseLabels: false\nIndentGotoLabels: true\nIndentPPDirectives: AfterHash\nIndentWidth:     2\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Right\nReflowComments:  true\nSortIncludes:    false\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: true\nSpaceAfterLogicalNot: true\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: Always\nSpaceInEmptyBlock: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInConditionalStatement: false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nSpaceBeforeSquareBrackets: false\nTabWidth:        8\nUseCRLF:         false\nUseTab:          Never\n...\n"
        },
        {
          "name": ".codespellrc",
          "type": "blob",
          "size": 0.1455078125,
          "content": "[codespell]\nskip = libocispec,build-aux,contrib,*.1,.git,configure,Makefile,libtool,m4,autom4te.cache,*.m4,*.mk\ncount =\nignore-words-list = trun,ser\n"
        },
        {
          "name": ".copr",
          "type": "blob",
          "size": 0.00390625,
          "content": "rpm/"
        },
        {
          "name": ".fmf",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.896484375,
          "content": "*.a\n*.cov\n*.gcda\n*.gcno\n*.gcov\n*.i\n*.la\n*.lo\n*.o\n*.orig\n*.pyc\n*.rej\n*.s\n*.service\n*.socket\n*.swp\n.version\ngit-version.h\n*~\n.#*\n.color_coded\n.deps\n.dirstamp\n.gdb_history\n.git\n.git-module-status\n.deps\n.dirstamp\n.gdb_history\n.git\n.git-module-status\n.libs\n.lvimrc\n.memdump\n.sc-start-sc_*\n.ycm_extra_conf.py\n/aclocal.m4\n/autom4te.cache\nbuild-aux/compile\nbuild-aux/config.guess\nbuild-aux/config.sub\nbuild-aux/depcomp\nbuild-aux/install-sh\nbuild-aux/ltmain.sh\nbuild-aux/missing\nbuild-aux/tap-driver.sh\ncrun\n/config.h\n/config.h.in\n/config.log\n/config.status\n/configure\nlibtool\nm4/libtool.m4\nm4/ltoptions.m4\nm4/ltsugar.m4\nm4/ltversion.m4\nm4/lt~obsolete.m4\n/Makefile\nlibocispec/Makefile\nMakefile.in\nresult\nrpm/crun.spec\nstamp-h\nstamp-h.in\nstamp-h1\ntests/init\ntests/tests_*\ntests/*.log\ntests/*.trs\ntest-suite.log\n\n# Cached files\n.cache/\ncompile_commands.json\n\n# LuaRocks development files\n/luarocks\n/lua_modules\n/.luarocks\n*.rock\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.09375,
          "content": "[submodule \"libocispec\"]\n\tpath = libocispec\n\turl = https://github.com/containers/libocispec.git\n"
        },
        {
          "name": ".lgtm.yml",
          "type": "blob",
          "size": 0.0947265625,
          "content": "extraction:\n  cpp:\n     configure:\n        command:\n        - ./autogen.sh\n        - ./configure\n"
        },
        {
          "name": ".packit.yaml",
          "type": "blob",
          "size": 3.794921875,
          "content": "---\n# See the documentation for more information:\n# https://packit.dev/docs/configuration/\n\ndownstream_package_name: crun\n\n# Ref: https://packit.dev/docs/configuration#files_to_sync\nfiles_to_sync:\n  - src: rpm/gating.yaml\n    dest: gating.yaml\n  - src: plans/\n    dest: plans/\n    delete: true\n    mkpath: true\n  - src: tests/tmt/\n    dest: tests/tmt/\n    delete: true\n    mkpath: true\n  - src: .fmf/\n    dest: .fmf/\n    delete: true\n    mkpath: true\n  - .packit.yaml\n\npackages:\n  crun-fedora:\n    pkg_tool: fedpkg\n    specfile_path: rpm/crun.spec\n  crun-centos:\n    pkg_tool: centpkg\n    specfile_path: rpm/crun.spec\n  crun-eln:\n    specfile_path: rpm/crun.spec\n\nsrpm_build_deps:\n  - git-archive-all\n  - make\n\nactions:\n  # This action runs only on copr build jobs\n  create-archive:\n    - \"git-archive-all -v --force-submodules rpm/crun-HEAD.tar.xz\"\n    - bash -c \"ls -1 rpm/crun-HEAD.tar.xz\"\n\njobs:\n  - job: copr_build\n    trigger: pull_request\n    packages: [crun-fedora]\n    notifications: &copr_build_failure_notification\n      failure_comment:\n        message: \"Ephemeral COPR build failed. @containers/packit-build please check.\"\n    targets: &fedora_copr_targets\n      - fedora-all-x86_64\n      - fedora-all-aarch64\n\n  - job: copr_build\n    trigger: pull_request\n    packages: [crun-eln]\n    notifications: *copr_build_failure_notification\n    targets:\n      - fedora-eln-x86_64\n      - fedora-eln-aarch64\n\n  - job: copr_build\n    trigger: pull_request\n    packages: [crun-centos]\n    notifications: *copr_build_failure_notification\n    targets: &centos_targets\n      # Need epel9 repos to fetch wasmedge build dependency\n      centos-stream-9-x86_64:\n        additional_repos:\n          - https://dl.fedoraproject.org/pub/epel/9/Everything/x86_64/\n      centos-stream-9-aarch64:\n        additional_repos:\n          - https://dl.fedoraproject.org/pub/epel/9/Everything/aarch64/\n      # TODO: build on CS10 with wasmedge once epel-10 is available\n      centos-stream-10-x86_64: {}\n      centos-stream-10-aarch64: {}\n\n  # Run on commit to main branch\n  - job: copr_build\n    trigger: commit\n    packages: [crun-fedora]\n    notifications:\n      failure_comment:\n        message: \"podman-next COPR build failed. @containers/packit-build please check.\"\n    branch: main\n    owner: rhcontainerbot\n    project: podman-next\n\n  # Podman system tests for Fedora and CentOS Stream\n  - job: tests\n    trigger: pull_request\n    packages: [crun-fedora]\n    notifications: &podman_system_test_fail_notification\n      failure_comment:\n        message: \"podman system tests failed. @containers/packit-build please check.\"\n    targets: *fedora_copr_targets\n    tf_extra_params:\n      environments:\n        - artifacts:\n          - type: repository-file\n            id: https://copr.fedorainfracloud.org/coprs/rhcontainerbot/podman-next/repo/fedora-$releasever/rhcontainerbot-podman-next-fedora-$releasever.repo\n\n  # Podman system tests for CentOS Stream\n  - job: tests\n    trigger: pull_request\n    packages: [crun-centos]\n    notifications: *podman_system_test_fail_notification\n    targets: *centos_targets\n    tf_extra_params:\n      environments:\n        - artifacts:\n          - type: repository-file\n            id: https://copr.fedorainfracloud.org/coprs/rhcontainerbot/podman-next/repo/centos-stream-$releasever/rhcontainerbot-podman-next-centos-stream-$releasever.repo\n\n  - job: propose_downstream\n    trigger: release\n    packages: [crun-fedora]\n    dist_git_branches: &fedora_targets\n      - fedora-all\n\n  - job: propose_downstream\n    trigger: release\n    packages: [crun-centos]\n    dist_git_branches:\n      - c10s\n\n  - job: koji_build\n    trigger: commit\n    packages: [crun-fedora]\n    dist_git_branches: *fedora_targets\n\n  - job: bodhi_update\n    trigger: commit\n    packages: [crun-fedora]\n    dist_git_branches:\n      - fedora-branched # rawhide updates are created automatically\n"
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 0.1806640625,
          "content": "## The crun Project Community Code of Conduct\n\nThe crun project follows the [Containers Community Code of Conduct](https://github.com/containers/common/blob/master/CODE-OF-CONDUCT.md).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.873046875,
          "content": "# Contributing to crun\n\nThanks for your interest in contributing!\n\n## Note: Before writing a big patch\n\nIf you plan to contribute a large change, please get in touch *before*\nsubmitting a pull request by e.g. filing an issue describing your proposed\nchange. This will help ensure alignment.\n\n## Background knowledge\n\nYou will need to understand the C programming language.\n\n## Development environment\n\nCrun at its core is a low-dependency C library and CLI tools. You'll\nneed a Linux environment, which could be a container or a VM/physical system.\n\ncrun should be buildable on nearly any relatively modern Linux OS/distribution.\n\n### Building and testing\n\ncrun uses [GNU Autotools](https://www.gnu.org/software/automake/manual/html_node/Autotools-Introduction.html) for its build system. Ensure that Autotools is installed and properly configured on your system.\n\n#### Setup\n\nTo set up the build, run the following commands in the root directory:\n\n```bash\n./autogen.sh\n./configure --prefix=/usr\nmake -j $(nproc)\n```\n\n\n## Testing\n\nTo run the crun tests suite, you can use the following command:\n\n```bash\nmake check\n```\n\n## Code linting\n\nBe sure you've run\n```\nmake clang-format\n```\n\nto reformat the code automatically.\n\n## Submitting a patch\n\nThe podman project has some [generic useful guidance](https://github.com/containers/podman/blob/main/CONTRIBUTING.md#submitting-pull-requests);\nlike that project, a \"Developer Certificate of Origin\" is required.\n\n### Sign your PRs\n\nThe sign-off is a line at the end of the explanation for the patch. Your\nsignature certifies that you wrote the patch or otherwise have the right to pass\nit on as an open-source patch. The rules are simple: if you can certify\nthe below (from [developercertificate.org](https://developercertificate.org/)):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nThen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe.smith@email.com>\n\nUse your real name (sorry, no pseudonyms or anonymous contributions.)\n\nIf you set your `user.name` and `user.email` git configs, you can sign your\ncommit automatically with `git commit -s`.\n\n### Git commit style\n\nPlease look at `git log` and match the commit log style, which is very\nsimilar to the\n[Linux kernel](https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git).\n\nThen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe.smith@email.com>\n\nUse your real name (sorry, no pseudonyms or anonymous contributions).\n\n1. Title\n    - Specify the context or category of the changes e.g. `lib` for library changes, `docs` for document changes, `bin/<command-name>` for command changes, etc.\n    - Begin the title with the first letter of the first word capitalized.\n    - Aim for less than 50 characters, otherwise 72 characters max.\n    - Do not end the title with a period.\n    - Use an [imperative tone](https://en.wikipedia.org/wiki/Imperative_mood).\n2. Body\n    - Separate the body with a blank line after the title.\n    - Begin a paragraph with the first letter of the first word capitalized.\n    - Each paragraph should be formatted within 72 characters.\n    - Content should be about what was changed and why this change was made.\n    - If your commit fixes an issue, the commit message should end with `Closes: #<number>`.\n\nCommit Message example:\n\n```bash\n<context>: Less than 50 characters for subject title\n\nA paragraph of the body should be within 72 characters.\n\nThis paragraph is also less than 72 characters.\n```\n\nFor more information see [How to Write a Git Commit Message](https://chris.beams.io/posts/git-commit/)\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "COPYING.libcrun",
          "type": "blob",
          "size": 25.908203125,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "GNUmakefile",
          "type": "blob",
          "size": 4.5,
          "content": "# Having a separate GNUmakefile lets me 'include' the dynamically\n# generated rules created via cfg.mk (package-local configuration)\n# as well as maint.mk (generic maintainer rules).\n# This makefile is used only if you run GNU Make.\n# It is necessary if you want to build targets usually of interest\n# only to the maintainer.\n\n# Copyright (C) 2001, 2003, 2006-2014 Free Software Foundation, Inc.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n# If the user runs GNU make but has not yet run ./configure,\n# give them a diagnostic.\n_gl-Makefile := $(wildcard [M]akefile)\nifneq ($(_gl-Makefile),)\n\n# Make tar archive easier to reproduce.\nexport TAR_OPTIONS = --owner=0 --group=0 --numeric-owner\n\n# Allow the user to add to this in the Makefile.\nALL_RECURSIVE_TARGETS =\n\ninclude Makefile\n\n# Some projects override e.g., _autoreconf here.\n-include $(srcdir)/cfg.mk\n\n# Allow cfg.mk to override these.\n_build-aux ?= build-aux\n_autoreconf ?= autoreconf -v\n\ninclude $(srcdir)/maint.mk\n\n# Ensure that $(VERSION) is up to date for dist-related targets, but not\n# for others: rerunning autoreconf and recompiling everything isn't cheap.\n_have-git-version-gen := \\\n  $(shell test -f $(srcdir)/$(_build-aux)/git-version-gen && echo yes)\nifeq ($(_have-git-version-gen)0,yes$(MAKELEVEL))\n  _is-dist-target ?= $(filter-out %clean, \\\n    $(filter maintainer-% dist% alpha beta stable,$(MAKECMDGOALS)))\n  _is-install-target ?= $(filter-out %check, $(filter install%,$(MAKECMDGOALS)))\n  ifneq (,$(_is-dist-target)$(_is-install-target))\n    _curr-ver := $(shell cd $(srcdir)\t\t\t\t\\\n                   && $(_build-aux)/git-version-gen --prefix \"\" \\\n                          .tarball-version\t\t        \\\n                         $(git-version-gen-tag-sed-script))\n    ifneq ($(_curr-ver),$(VERSION))\n      ifeq ($(_curr-ver),UNKNOWN)\n        $(info WARNING: unable to verify if $(VERSION) is the correct version)\n      else\n        ifneq (,$(_is-install-target))\n          # GNU Coding Standards state that 'make install' should not cause\n          # recompilation after 'make all'.  But as long as changing the version\n          # string alters config.h, the cost of having 'make all' always have an\n          # up-to-date version is prohibitive.  So, as a compromise, we merely\n          # warn when installing a version string that is out of date; the user\n          # should run 'autoreconf' (or something like 'make distcheck') to\n          # fix the version, 'make all' to propagate it, then 'make install'.\n          $(info WARNING: version string $(VERSION) is out of date;)\n          $(info run '$(MAKE) _version' to fix it)\n        else\n          $(info INFO: running autoreconf for new version string: $(_curr-ver))\nGNUmakefile: _version\n\ttouch GNUmakefile\n        endif\n      endif\n    endif\n  endif\nendif\n\n.PHONY: _version\n_version:\n\tcd $(srcdir) && rm -rf autom4te.cache .version && $(_autoreconf)\n\t$(MAKE) $(AM_MAKEFLAGS) Makefile\n\nelse\n\n.DEFAULT_GOAL := abort-due-to-no-makefile\nsrcdir = .\n\n# The package can override .DEFAULT_GOAL to run actions like autoreconf.\n-include ./cfg.mk\n\n# Allow cfg.mk to override these.\n_build-aux ?= build-aux\n_autoreconf ?= autoreconf -v\n\ninclude ./maint.mk\n\nifeq ($(.DEFAULT_GOAL),abort-due-to-no-makefile)\n$(MAKECMDGOALS): abort-due-to-no-makefile\nendif\n\nabort-due-to-no-makefile:\n\t@echo There seems to be no Makefile in this directory.   1>&2\n\t@echo \"You must run ./autogen.sh && ./configure before running 'make'.\" 1>&2\n\t@exit 1\n\nendif\n\n# Tell version 3.79 and up of GNU make to not build goals in this\n# directory in parallel, in case someone tries to build multiple\n# targets, and one of them can cause a recursive target to be invoked.\n\n# Only set this if Automake doesn't provide it.\nAM_RECURSIVE_TARGETS ?= $(RECURSIVE_TARGETS:-recursive=) \\\n  $(RECURSIVE_CLEAN_TARGETS:-recursive=) \\\n  dist distcheck tags ctags\n\nALL_RECURSIVE_TARGETS += $(AM_RECURSIVE_TARGETS)\n\nifneq ($(word 2, $(MAKECMDGOALS)), )\nifneq ($(filter $(ALL_RECURSIVE_TARGETS), $(MAKECMDGOALS)), )\n.NOTPARALLEL:\nendif\nendif\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 12.013671875,
          "content": "DIST_SUBDIRS = libocispec\nSUBDIRS = libocispec\nACLOCAL_AMFLAGS = -I m4\n\nWD := $(shell pwd)\n# outdir is needed by the make_srpm build type on Fedora copr\n# https://docs.pagure.org/copr.copr/user_documentation.html#make-srpm\noutdir ?= $(WD)\n\nRPM_OPTS ?= --define \"_sourcedir $(WD)\" --define \"_specdir $(WD)\" --define \"_builddir $(WD)\" --define \"_srcrpmdir $(outdir)\" --define \"_rpmdir $(outdir)\" --define \"_buildrootdir $(WD)/.build\" rpm/crun.spec\n\n# Clean any safe.directory values added to global gitconfig because of srpm and\n# rpm target runs\nclean-global-gitconfig:\n\t$(shell git config --global --unset-all safe.directory $(shell pwd)/libocispec)\n\t$(shell git config --global --unset-all safe.directory $(shell pwd)/rpm)\n\t$(shell git config --global --unset-all safe.directory /crun)\n\nsrpm:\n\techo $(VERSION)\n\t$(MAKE) -C rpm tarball-prep\n\trpmbuild -bs $(RPM_OPTS) rpm/crun.spec\n\t$(MAKE) clean-global-gitconfig\n\nrpm: srpm\n\trpmbuild -ba $(RPM_OPTS) rpm/crun.spec\n\t$(MAKE) clean-global-gitconfig\n\nif ENABLE_LIBCRUN\nlib_LTLIBRARIES = libcrun.la\nelse\nnoinst_LTLIBRARIES = libcrun.la\nendif\n\ncheck_LTLIBRARIES = libcrun_testing.la\n\nlibcrun_SOURCES = src/libcrun/utils.c \\\n\t\tsrc/libcrun/ring_buffer.c \\\n\t\tsrc/libcrun/blake3/blake3.c \\\n\t\tsrc/libcrun/blake3/blake3_portable.c \\\n\t\tsrc/libcrun/cgroup-cgroupfs.c \\\n\t\tsrc/libcrun/cgroup-resources.c \\\n\t\tsrc/libcrun/cgroup-setup.c \\\n\t\tsrc/libcrun/cgroup-systemd.c \\\n\t\tsrc/libcrun/cgroup-utils.c \\\n\t\tsrc/libcrun/cgroup.c \\\n\t\tsrc/libcrun/chroot_realpath.c \\\n\t\tsrc/libcrun/cloned_binary.c \\\n\t\tsrc/libcrun/container.c \\\n\t\tsrc/libcrun/criu.c \\\n\t\tsrc/libcrun/custom-handler.c \\\n\t\tsrc/libcrun/ebpf.c \\\n\t\tsrc/libcrun/error.c \\\n\t\tsrc/libcrun/handlers/handler-utils.c \\\n\t\tsrc/libcrun/handlers/krun.c \\\n\t\tsrc/libcrun/handlers/mono.c \\\n\t\tsrc/libcrun/handlers/spin.c \\\n\t\tsrc/libcrun/handlers/wasmedge.c \\\n\t\tsrc/libcrun/handlers/wasmer.c \\\n\t\tsrc/libcrun/handlers/wasmtime.c \\\n\t\tsrc/libcrun/handlers/wamr.c \\\n\t\tsrc/libcrun/intelrdt.c \\\n\t\tsrc/libcrun/io_priority.c \\\n\t\tsrc/libcrun/linux.c \\\n\t\tsrc/libcrun/mount_flags.c \\\n\t\tsrc/libcrun/scheduler.c \\\n\t\tsrc/libcrun/seccomp.c \\\n\t\tsrc/libcrun/seccomp_notify.c \\\n\t\tsrc/libcrun/signals.c \\\n\t\tsrc/libcrun/status.c \\\n\t\tsrc/libcrun/terminal.c\n\nif HAVE_EMBEDDED_YAJL\nmaybe_libyajl.la = libocispec/yajl/libyajl.la\nelse\nmaybe_libyajl.la =\nendif\n\nlibocispec/libocispec.la:\n\t$(MAKE) $(AM_MAKEFLAGS) -C libocispec libocispec.la\n\nlibcrun_la_SOURCES = $(libcrun_SOURCES)\nlibcrun_la_CFLAGS = -I $(abs_top_builddir)/libocispec/src -I $(abs_top_srcdir)/libocispec/src -fvisibility=hidden\nlibcrun_la_LIBADD = libocispec/libocispec.la $(FOUND_LIBS) $(maybe_libyajl.la)\nlibcrun_la_LDFLAGS = -Wl,--version-script=$(abs_top_srcdir)/libcrun.lds\n\n# build a version with all the symbols visible for testing\nlibcrun_testing_la_SOURCES = $(libcrun_SOURCES)\nlibcrun_testing_la_CFLAGS = -I $(abs_top_builddir)/libocispec/src -I $(abs_top_srcdir)/libocispec/src -fvisibility=default\nlibcrun_testing_la_LIBADD = libocispec/libocispec.la $(maybe_libyajl.la)\n\nif PYTHON_BINDINGS\npyexec_LTLIBRARIES = python_crun.la\npython_crun_la_SOURCES = python/crun_python.c\npython_crun_la_CFLAGS = -I $(abs_top_srcdir)/libocispec/src -I $(abs_top_builddir)/libocispec/src -I $(abs_top_builddir)/src $(PYTHON_CFLAGS)\npython_crun_la_LDFLAGS = -avoid-version -module $(PYTHON_LDFLAGS)\npython_crun_la_LIBADD = libcrun.la $(PYTHON_LIBS) $(FOUND_LIBS) $(maybe_libyajl.la)\nendif\n\nif LUA_BINDINGS\nluaexec_LTLIBRARIES = luacrun.la\nluacrun_la_SOURCES = lua/lua_crun.c\nluacrun_la_CFLAGS = -I $(abs_top_srcdir)/libocispec/src -I $(abs_top_builddir)/libocispec/src -I $(abs_top_builddir)/src $(LUA_INCLUDE)\nluacrun_la_LDFLAGS = -avoid-version -module\nluacrun_la_LIBADD = libcrun.la $(LUA_LIB) $(FOUND_LIBS)\n\nLUACRUN_CLEAN_VERSION = $(shell git describe --tags | sed 's/-g[0-9a-f]\\{7,9\\}//')\n\nLUACRUN_RELEASE_VERSION = $(shell git describe --tags | sed 's/-[0-9]*-g[0-9a-f]\\{7,9\\}//')\n\nLUACRUN_ROCKSPEC = luacrun-$(LUACRUN_CLEAN_VERSION).rockspec\n\n$(LUACRUN_ROCKSPEC): lua/luacrun.rockspec\n\tsed -e 's/@RELEASEVERSION/$(LUACRUN_RELEASE_VERSION)/g' < lua/luacrun.rockspec | \\\n\tsed -e 's/@CLEANVERSION/$(LUACRUN_CLEAN_VERSION)/g' > $@\n\nLUACRUN_ROCK = luacrun-$(LUACRUN_CLEAN_VERSION).src.rock\n\n$(LUACRUN_ROCK): dist-gzip $(LUACRUN_ROCKSPEC)\n\trm -f $(LUACRUN_ROCK)\n\tmv \"$(distdir).tar.gz\" \"crun-$(LUACRUN_RELEASE_VERSION).tar.gz\"\n\ttar -xzf \"crun-$(LUACRUN_RELEASE_VERSION).tar.gz\" --transform=\"s/crun-$(VERSION)\\(.*\\)$$/crun-$(LUACRUN_RELEASE_VERSION)\\1/\"\n\ttar -czf \"crun-$(LUACRUN_RELEASE_VERSION).tar.gz\" \"crun-$(LUACRUN_RELEASE_VERSION)\"\n\trm -rf \"crun-$(LUACRUN_RELEASE_VERSION)\"\n\tzip -j $(LUACRUN_ROCK) $(LUACRUN_ROCKSPEC) \"crun-$(LUACRUN_RELEASE_VERSION).tar.gz\"\n\trm -f \"crun-$(LUACRUN_RELEASE_VERSION).tar.gz\"\n\ndist-luarock: $(LUACRUN_ROCK)\n\nendif\n\ncrun_CFLAGS = -I $(abs_top_builddir)/libocispec/src -I $(abs_top_srcdir)/libocispec/src -D CRUN_LIBDIR=\"\\\"$(CRUN_LIBDIR)\\\"\"\ncrun_SOURCES = src/crun.c src/run.c src/delete.c src/kill.c src/pause.c src/unpause.c src/oci_features.c src/spec.c \\\n\t\tsrc/exec.c src/list.c src/create.c src/start.c src/state.c src/update.c src/ps.c \\\n\t\tsrc/checkpoint.c src/restore.c\n\nif DYNLOAD_LIBCRUN\ncrun_LDFLAGS = -Wl,--unresolved-symbols=ignore-all $(CRUN_LDFLAGS)\nelse\ncrun_LDADD = libcrun.la $(FOUND_LIBS) $(maybe_libyajl.la)\ncrun_LDFLAGS = $(CRUN_LDFLAGS)\nendif\n\nEXTRA_DIST = COPYING COPYING.libcrun README.md NEWS SECURITY.md rpm/crun.spec autogen.sh \\\n\tsrc/libcrun/blake3/blake3_impl.h src/libcrun/blake3/blake3.h \\\n\tsrc/crun.h src/list.h src/run.h src/delete.h src/kill.h src/pause.h src/unpause.h \\\n\tsrc/create.h src/start.h src/state.h src/exec.h src/oci_features.h src/spec.h src/update.h src/ps.h \\\n\tsrc/checkpoint.h src/restore.h src/libcrun/seccomp_notify.h src/libcrun/seccomp_notify_plugin.h \\\n\tsrc/libcrun/container.h src/libcrun/seccomp.h src/libcrun/ebpf.h \\\n\tsrc/libcrun/cgroup.h src/libcrun/cgroup-cgroupfs.h \\\n\tsrc/libcrun/cgroup-internal.h \\\n\tsrc/libcrun/cgroup-resources.h src/libcrun/cgroup-setup.h \\\n\tsrc/libcrun/cgroup-systemd.h src/libcrun/cgroup-utils.h \\\n\tsrc/libcrun/custom-handler.h src/libcrun/io_priority.h \\\n\tsrc/libcrun/handlers/handler-utils.h \\\n\tsrc/libcrun/linux.h src/libcrun/utils.h src/libcrun/error.h src/libcrun/criu.h \\\n\tsrc/libcrun/scheduler.h src/libcrun/status.h src/libcrun/terminal.h \\\n\tsrc/libcrun/mount_flags.h src/libcrun/intelrdt.h src/libcrun/ring_buffer.h \\\n\tcrun.1.md crun.1 libcrun.lds \\\n\tkrun.1.md krun.1 \\\n\tlua/luacrun.rockspec\n\nUNIT_TESTS = tests/tests_libcrun_utils tests/tests_libcrun_ring_buffer tests/tests_libcrun_errors tests/tests_libcrun_intelrdt\n\nif ENABLE_CRUN\nbin_PROGRAMS = crun\nnoinst_PROGRAMS =\nelse\nnoinst_PROGRAMS = crun\nendif\n\ncheck_PROGRAMS = tests/init $(UNIT_TESTS) tests/tests_libcrun_fuzzer\n\nTESTS_LDADD = libcrun_testing.la $(FOUND_LIBS) $(maybe_libyajl.la)\n\ntests_init_LDADD =\ntests_init_LDFLAGS = -static-libgcc -all-static\ntests_init_SOURCES = tests/init.c\n\ntests_tests_libcrun_utils_CFLAGS = -I $(abs_top_builddir)/libocispec/src -I $(abs_top_srcdir)/libocispec/src -I $(abs_top_builddir)/src -I $(abs_top_srcdir)/src\ntests_tests_libcrun_utils_SOURCES = tests/tests_libcrun_utils.c\ntests_tests_libcrun_utils_LDADD = $(TESTS_LDADD)\ntests_tests_libcrun_utils_LDFLAGS = $(crun_LDFLAGS)\n\ntests_tests_libcrun_ring_buffer_CFLAGS = -I $(abs_top_builddir)/libocispec/src -I $(abs_top_srcdir)/libocispec/src -I $(abs_top_builddir)/src -I $(abs_top_srcdir)/src\ntests_tests_libcrun_ring_buffer_SOURCES = tests/tests_libcrun_ring_buffer.c\ntests_tests_libcrun_ring_buffer_LDADD = $(TESTS_LDADD)\ntests_tests_libcrun_ring_buffer_LDFLAGS = $(crun_LDFLAGS)\n\ntests_tests_libcrun_intelrdt_CFLAGS = -I $(abs_top_builddir)/libocispec/src -I $(abs_top_srcdir)/libocispec/src -I $(abs_top_builddir)/src -I $(abs_top_srcdir)/src\ntests_tests_libcrun_intelrdt_SOURCES = tests/tests_libcrun_intelrdt.c\ntests_tests_libcrun_intelrdt_LDADD = $(TESTS_LDADD)\ntests_tests_libcrun_intelrdt_LDFLAGS = $(crun_LDFLAGS)\n\ntests_tests_libcrun_fuzzer_CFLAGS = -I $(abs_top_builddir)/libocispec/src -I $(abs_top_srcdir)/libocispec/src -I $(abs_top_builddir)/src -I $(abs_top_srcdir)/src\ntests_tests_libcrun_fuzzer_SOURCES = tests/tests_libcrun_fuzzer.c\ntests_tests_libcrun_fuzzer_LDADD = $(TESTS_LDADD) libocispec/libocispec.la $(maybe_libyajl.la)\ntests_tests_libcrun_fuzzer_LDFLAGS = $(crun_LDFLAGS)\n\ntests_tests_libcrun_errors_CFLAGS = -I $(abs_top_builddir)/libocispec/src -I $(abs_top_srcdir)/libocispec/src -I $(abs_top_builddir)/src -I $(abs_top_srcdir)/src\ntests_tests_libcrun_errors_SOURCES = tests/tests_libcrun_errors.c\ntests_tests_libcrun_errors_LDADD = $(TESTS_LDADD)\ntests_tests_libcrun_errors_LDFLAGS = $(crun_LDFLAGS)\n\nTEST_EXTENSIONS = .py\nPY_LOG_COMPILER = $(PYTHON)\nPY_LOG_DRIVER = env AM_TAP_AWK='$(AWK)' $(SHELL) $(top_srcdir)/build-aux/tap-driver.sh\nLOG_DRIVER = env AM_TAP_AWK='$(AWK)' $(SHELL) $(top_srcdir)/build-aux/tap-driver.sh\n\nPYTHON_TESTS = tests/test_capabilities.py \\\n\ttests/test_cwd.py \\\n\ttests/test_checkpoint_restore.py \\\n\ttests/test_devices.py \\\n\ttests/test_hostname.py \\\n\ttests/test_limits.py \\\n\ttests/test_oci_features.py \\\n\ttests/test_mounts.py \\\n\ttests/test_paths.py \\\n\ttests/test_pid.py \\\n\ttests/test_pid_file.py \\\n\ttests/test_preserve_fds.py \\\n\ttests/test_uid_gid.py \\\n\ttests/test_rlimits.py \\\n\ttests/test_tty.py \\\n\ttests/test_hooks.py \\\n\ttests/test_update.py \\\n\ttests/test_detach.py \\\n\ttests/test_delete.py \\\n\ttests/test_resources.py \\\n\ttests/test_start.py \\\n\ttests/test_exec.py \\\n\ttests/test_seccomp.py \\\n\ttests/test_time.py\n\nTESTS = $(PYTHON_TESTS) $(UNIT_TESTS)\n\n.version:\n\t$(AM_V_GEN)echo $(VERSION) > $@-t && mv $@-t $@\n\ngit-version.h:\n\t@if test -e $(abs_top_srcdir)/.tarball-git-version.h; then \\\n\t\tcp $(abs_top_srcdir)/.tarball-git-version.h $@; \\\n\telif test -e $(abs_top_srcdir)/.git; then \\\n\t\tversion=`$(AM__GEN)git --git-dir=$(abs_top_srcdir)/.git rev-parse HEAD`; \\\n\t\t$(AM__GEN)printf \"/* autogenerated.  */\\n#ifndef GIT_VERSION\\n# define GIT_VERSION \\\"%s\\\"\\n#endif\\n\" $$version > $@-t && mv $@-t $@; \\\n\tfi\n\nnixpkgs:\n\t@nix --extra-experimental-features nix-command run -f channel:nixpkgs-unstable nix-prefetch-git -- \\\n\t\t--no-deepClone https://github.com/nixos/nixpkgs > nix/nixpkgs.json\n\ndist-hook:\n\t$(AM_V_GEN)echo $(VERSION) > $(distdir)/.tarball-version\n\t$(AM__GEN)cp git-version.h $(distdir)/.tarball-git-version.h\n\nEXTRA_DIST += $(PYTHON_TESTS) tests/Makefile.tests tests/run_all_tests.sh tests/tests_utils.py build-aux/git-version-gen src/libcrun/signals.perf src/libcrun/mount_flags.perf\nBUILT_SOURCES = .version git-version.h\n\nCLEANFILES = crun.spec .version git-version.h $(LUACRUN_ROCKSPEC)\n\nman1_MANS =\n\nif ENABLE_CRUN\nman1_MANS += crun.1\nendif\n\nif ENABLE_KRUN\nman1_MANS += krun.1\nendif\n\ncrun.1: $(abs_srcdir)/crun.1.md\nif HAVE_MD2MAN\n\t$(MD2MAN) -in $(abs_srcdir)/crun.1.md -out crun.1\nendif HAVE_MD2MAN\n\nkrun.1: $(abs_srcdir)/krun.1.md\nif HAVE_MD2MAN\n\t$(MD2MAN) -in $(abs_srcdir)/krun.1.md -out krun.1\nendif HAVE_MD2MAN\n\ninstall-exec-hook:\nif ENABLE_KRUN\n\t$(LN_S) -f crun$(EXEEXT) $(DESTDIR)$(bindir)/krun$(EXEEXT)\nendif\nif ENABLE_WASM\n\t$(LN_S) -f crun$(EXEEXT) $(DESTDIR)$(bindir)/crun-wasm$(EXEEXT)\nendif\n\nuninstall-hook:\nif ENABLE_KRUN\n\trm -f $(DESTDIR)$(bindir)/krun$(EXEEXT)\nendif\nif ENABLE_WASM\n\trm -f $(DESTDIR)$(bindir)/crun-wasm$(EXEEXT)\nendif\n\ngenerate-man: crun.1 krun.1\n\nsync:\n\t(cd libocispec; git pull https://github.com/containers/libocispec main)\n\ncoverity:\n\t$(MAKE) $(AM_MAKEFLAGS) -C libocispec\n\t$(MAKE) $(AM_MAKEFLAGS) crun\n\nlibcrun.rs: src/libcrun/container.h\n\tbindgen src/libcrun/container.h -- -I$(abs_builddir) -I$(abs_builddir)/libocispec/src  > $@\n\ngenerate-rust-bindings: libcrun.rs\n\ngenerate-signals.c: src/libcrun/signals.perf\n\t${GPERF} --lookup-function-name libcrun_signal_in_word_set -m 100 --null-strings --pic -tCEG -S1 $< > src/libcrun/signals.c\n\ngenerate-mount_flags.c: src/libcrun/mount_flags.perf\n\t${GPERF} --lookup-function-name libcrun_mount_flag_in_word_set -m 100 -tCEG -S1 $< > src/libcrun/mount_flags.c\n\nclang-format:\n# do not format files that were copied into the source directory.\n\tgit ls-files src tests | grep -E \"\\\\.[hc]\" | grep -v \"blake3\\|chroot_realpath.c\\|cloned_binary.c\\|signals.c\\|mount_flags.c\" | xargs clang-format -style=file -i\n\nshellcheck:\n\tshellcheck tests/*/*.sh contrib/*.sh\n\n.PHONY: coverity sync generate-rust-bindings generate-signals.c generate-mount_flags.c clang-format shellcheck\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 33.7373046875,
          "content": "* crun-1.19.1\n\n- linux: fix a hang if there are no reads from the tty.  Use non\n  blocking sockets to read and write from the tty so that the \"crun\n  exec\" process doesn't hang when the terminal is not consuming any\n  data.\n- linux: remove the workaround needed to mount a cgroup on top of\n  another cgroup mount.  The workaround had the disadvantage to\n  temporarily leak a mount on the host.  The alternative that is\n  currently used is to mount a temporary tmpfs between the two cgroup\n  mounts.\n\n* crun-1.19\n\n- wasm: add new handler wamr.\n- criu: allow passing network lock method to libcriu.\n- linux: honor exec cpu affinity mask.\n- build: fix build with musl libc.\n- crun: use mount API to self-clone.\n- cgroup, systemd: do not override devices on update.  If the \"update\" request has no\n  device block configured, do not reset the previously configuration.\n- cgroup: handle case where cgroup v1 freezer is disabled.  On systems without the\n  freezer controller, containers were mistakenly reported as paused.\n- cgroup: do not stop process on exec.  The cpu mask is configured on the systemd\n  scope, the previous workaround to stop the container until the cgroup is fully\n  configured is no longer needed.\n\n* crun-1.18.2\n\n- cgroup, systemd: fix a regression when a configuration file includes only one\n  default rule.\n\n* crun-1.18.1\n\n- cgroup: deprecate cgroup v1.\n- cgroup: fix regression setting up the devices cgroup on cgroup v1.\n- cgroup: fix regression and work again with the default Docker devices\n  configuration on systemd.\n- linux: fix setting up user namespace when newuidmap/newgidmap are not available.\n\n* crun-1.18\n\n- cgroup: support running without a sub-cgroup with systemd.  Use the\n  d-bus API to set the container limits on the systemd scope itself.\n  It allows running without a sub-cgroup when the systemd driver is\n  used, the run.oci.systemd.subgroup annotation controls it.  For now,\n  a sub-cgroup is still created, but it might be changed in future.\n- cgroup: add support for the misc controller.\n- linux: fix running on kernel without user namespaces.\n- criu, restore: add lsm-profile option.\n- criu, restore: add lsm-mount-context option.\n- linux: add duplicate namespace detection.\n\n* crun-1.17\n\n- Add `--log-level` option.  It accepts `error`, `warning` and `error`.\n- Add debug logs for container creation.\n- Fix double-free in crun exec code that could lead to a crash.\n- Allow passing an ID to the journald log driver.\n- Report \"executable not found\" errors after tty has been setup.\n- Do not treat EPIPE from hooks as an error.\n- Make sure `DefaultDependencies` is correctly set in the systemd scope.\n- Improve the error message when the container process is not found.\n- Improve error handling for the mnt namespace restoration.\n- Fix error handling for `getpwuid_r`, `recvfrom` and `libcrun_kill_linux`.\n- Fix handling of device paths with trailing slashes.\n\n* crun-1.16.1\n\n- fix a regression introduced by 1.16 where using 'rshared' rootfs\n  mount propagation and the rootfs itself is a mountpoint.\n- inherit user from original process on exec, if not overridden.\n\n* crun-1.16\n\n- build: fix build for s390x.\n- linux: fix mount of special files with rro.  Open the mount target\n  with O_PATH to prevent open(2) failures with special files like\n  FIFOs or UNIX sockets.\n- Fix sd-bus error handling for cpu quota and period props update.\n- container: use relative path for rootfs if possible.  If the rootfs\n  cannot be resolved and it is below the current working directory,\n  only use its relative path.\n- wasmedge: access container environment variables for the WasmEdge\n  configuration.\n- cgroup, systemd: use MemoryMax instead of MemoryLimit.  Fixes a\n  warning for using an old configuration name.\n- cgroup, systemd: improve checks for sd_bus_message_append errors\n\n* crun-1.15\n\n- fix a mount point leak under /run/crun, add a retry mechanism to\n  unmount the directory if the removal failed with EBUSY.\n- linux: cgroups: fix potential mount leak when /sys/fs/cgroup is\n  already mounted, causing the posthooks to not run.\n- release: build s390x binaries using musl libc.\n- features: add support for potentiallyUnsafeConfigAnnotations.\n- handlers: add option to load wasi-nn plugin for wasmedge.\n- linux: fix \"harden chdir()\" security measure.  The previous check\n  was not correct.\n- crun: add option --keep to the run command.  When specified the\n  container is not automatically deleted when it exits.\n\n* crun-1.14.4\n\n- linux: fix mount of file with recursive flags.  Do not assume it is\n  a directory, but check the source type.\n\n* crun-1.14.3\n\n- follow up for 1.14.2.  Drop the version check for each command.\n\n* crun-1.14.2\n\n- crun: drop check for OCI version.  A recent bump in the OCI runtime\n  specs caused crun to fail with every config file.  Just drop the\n  check since it doesn't add any value.\n\n* crun-1.14.1\n\n- there was recently a security vulnerability (CVE-2024-21626) in runc\n  that allowed a malicious user to chdir(2) to a /proc/*/fd entry that is\n  outside the container rootfs.  While crun is not affected directly,\n  harden chdir by validating that we are still inside the container\n  rootfs.\n- container: attempt to close all the files before execv(2).\n  if we leak any fd, it prevents execv to gain access to files outside\n  the container rootfs through /proc/self/fd/$fd.\n- fix a regression caused by 1.14 when installing the ebpf filter on a\n  kernel older than 5.11.\n- cgroup, systemd: fix segfault if the resources block is not specified.\n\n* crun-1.14\n\n- build: drop dependency on libgcrypt.  Use blake3 to compute the cache\n  key.\n- cpuset: don't clobber parent cgroup value when writing the cpuset\n  value.\n- linux: force umask(0).  Iit ensures that the `mknodat` syscall is\n  not affected by the umask of the calling process, allowing file\n  permissions to be set as specified in the OCI configuration.\n- ebpf: do not require MEMLOCK for eBPF programs.  This requirement\n  was relaxed in Linux 5.11.\n\n* crun-1.13\n\n- src: use O_CLOEXEC for all open/openat calls\n- cgroup v1: use \"max\" when pids limit < 0.\n- improve error message when idmap mount fails because the underlying\n  file system has no support for it.\n- libcrun: fix compilation when building without libseccomp and libcap.\n- fix relative idmapped mount when using the custom annotation.\n\n* crun-1.12\n\n- add new WebAssembly handler: spin.\n- systemd: fallback to system bus if session bus is not available.\n- configure the cpu rt and cpuset controllers before joining them to\n  avoid running temporarily the workload on the wrong cpus.\n- preconfigure the cpuset with required resources instead of using the\n  parent's set.  This prevents needless churn in the kernel as it\n  tracks which CPUs have load balancing disabled.\n- try attr/<lsm>/* before the attr/* files.  Writes to the attr/*\n  files may fail if apparmor is not the first \"major\" LSM in the list\n  of loaded LSMs (e.g. lsm=apparmor,bpf vs lsm=bpf,apparmor).\n\n* crun-1.11.2\n\n- fix a regression caused by 1.11.1 where the process crashes if there\n  are no CPU limits configured on cgroup v1.\n- fix error code check for the ptsname_r function.\n\n* crun-1.11.1\n\n- force a remount operation with bind mounts from the host to correctly\n  set all the mount flags.\n\n* crun-1.11\n\n- cgroup: honor cpu burst.\n- systemd: set CPUQuota and CPUPeriod on the scope cgroup.\n- linux: append tmpfs mode if missing for mounts.  This is the same\n  behavior of runc.\n- cgroup: always use the user session for rootless.\n\n* crun-1.10\n\n- support for Intel Resource Director Technology (RDT).\n- new mount option \"copy-symlink\".  When provided for a mount, if the\n  source is a symlink, then it is copied in the container instead of\n  attempting a mount.\n- linux: open mounts before setgroups if in a userns.  This solves a\n  problem where a directory that was previously accessible to the\n  user, become inaccessible after setgroups causing the bind mount to\n  fail.\n\n* crun-1.9.2\n\n- cgroup: reset the inherited cpu affinity after moving to cgroup.\n  Old kernels do that automatically, but new kernels remember the\n  affinity that was set before the cgroup move, so we need to reset\n  it in order to honor the cpuset configuration.\n\n* crun-1.9.1\n\n- utils: ignore ENOTSUP when chmod a symlink. It fixes a problem on\n  Linux 6.6 that always refuses chmod on a symlink.\n- build: fix build on CentOS 7\n- linux: add new fallback when mount fails with EBUSY, so that there\n  is not an additional tmpfs mount if not needed.\n- utils: improve error message when a directory cannot be created as\n  a component of the path is already existing as a non directory.\n\n* crun-1.9\n\n- linux: support arbitrary idmapped mounts.  Now it is possible to\n  specify a mapping for any type of mount, not only bind mounts.\n- linux: add support for \"ridmap\" mount option to support recursive\n  idmapped mounts.\n- crun delete: call systemd's reset-failed.  In case systemd cgroup\n  driver is used, and the systemd unit has failed (e.g. oom-killed),\n  systemd won't remove the unit (that is, unless the \"CollectMode:\n  inactive-or-failed\" property is set).\n- linux: fix check for oom_score_adj.  Write the oom_score_adj file\n  even when the new value is 0.\n- features: Support mountExtensions.\n- linux: correctly handle unknown signal string when it doesn't start\n  with a digit.\n- linux: do not attempt to join again already joined namespace.\n- wasmer: use latest wasix API.\n\n* crun-1.8.7\n\n- linux: fix a race condition when an exec was performed\n  immediately after the start and the setns with the procfd failed.\n- features: Fix annotations formatting.\n- linux: do not write some errors twice.\n- libcrun: handle SIGWINCH by resizing the terminal file descriptor.\n- crun: new command \"crun features\".\n- linux: fix handling of idmapped mounts when the container joins\n  an existing PID namespace.\n- linux: support io_priority from the OCI specs.\n- linux: handle correctly the case where the status file is not\n  written yet for a container.\n- crun: fix segfault for \"ps\" when the container is not using cgroups.\n- cgroup: allow setting swap to 0.\n\n* crun-1.8.6\n\n- crun: new command \"crun features\".\n- linux: fix handling of idmapped mounts when the container joins\n  an existing PID namespace.\n- linux: support io_priority from the OCI specs.\n- linux: handle correctly the case where the status file is not\n  written yet for a container.\n- crun: fix segfault for \"ps\" when the container is not using cgroups.\n- cgroup: allow setting swap to 0.\n\n* crun-1.8.5\n\n- scheduler: use definition from the OCI configuration file instead of the custom\n  label that is now dropped and not supported anymore.\n- cgroup: fix creating cgroup under \"domain threaded\".\n- cgroup, systemd: set the memory limit on the system scope.\n- restore tty settings from the correct file descriptor.  It was previously\n  restoring the settings from the wrong file descriptor causing the tty settings\n  to be changed on the calling terminal.\n- criu: check if the criu_join_ns_add function exists.  Fix a segfault with new\n  versions of CRIU.\n- linux: do not precreate devs with euid > 0.  Fix creating devices when running\n  the OCI runtime as non root user.\n- linux: improve PID detection on systems that lack pidfd.  While there is still a\n  window of time that the PID could be recycled, now it is now reduced to a minimum.\n- criu: fix memory leak.\n- logging: improve error message when dlopen fails.\n\n* crun-1.8.4\n\n- fix build on CentOS 7.\n- drop custom annotation to set the time namespace and use the OCI\n  specs instead.\n- cgroup: workaround cpu quota/period issue with v1.  Sometimes\n  setting CPU quota period fails when a new period is lower, and a\n  parent cgroup has CPU quota limit set.\n- cgroup: fix set quota to -1 on cgroup v1.\n- criu: drop loading unused functions.\n\n* crun-1.8.3\n\n- update: initialize the rt limits only on cgroup v1.\n\n* crun-1.8.2\n\n- lua bindings for libcrun.\n- wasmedge: add current directory to preopen paths.\n- linux: inherit parent mount flags when making a path masked.\n- libcrun: custom annotation to set the scheduler for the container process.\n- cgroup: fallback to blkio.bfq files if blkio is not available on cgroup v1.\n- cgroup: initialize rt limits when using systemd.\n- tty: chown the tty to the exec user instead of the user specified\n  to create the container.\n- cgroup: fallback to create cgroupfs as sibling of the current cgroup if there\n  is none specified and it cannot be created in the root cgroup.\n\n* crun-1.8.1\n\n- linux: idmapped mounts expect the same configuration as the user\n  namespace mappings.  Before they were expecting the inverted\n  mapping.  It is a breaking change, but the behavior was aligned to\n  what runc will do as well.\n- krun: always allow /dev/kvm in the cgroup configuration.\n- handlers: disable exec for handlers that do not support it.\n- selinux: allow setting fscontext using a custom annotation.\n- cgroup: reset systemd unit if start fails.\n- cgroup: rmdir the entire systemd scope.  It fixes a leak on cgroupv1.\n- cgroup: always delete the cgroup on errors. On some errors it could\n  have been leaked before.\n\n* crun-1.8\n\n- linux: precreate devices on the host.\n- cgroup: support cpuset mounted with noprefix.\n- linux: mount the source cgroup if cgroupns=host.\n- libcrun: don't clone self from read-only mount.\n- build: fix build without dlfcn.h.\n- linux: set PR_SET_DUMPABLE.\n- utils: fix applying AppArmor profile.\n- linux: write setgroups=deny when mapping a single uid/gid.\n- cgroup: fix enter cgroupv1 mount on RHEL 7.\n\n* crun-1.7.2\n\n- criu: hardcode library name to libcriu.so.2.\n- cgroup: always enable all controllers, even if the cgroup was already joined.\n  Regression caused by crun-1.7.\n\n* crun-1.7.1\n\n- criu: load libcriu dynamically.\n- seccomp: initialize libgcrypt.\n- handlers: fix rewriting the argv if the full cmdline doesn't fit.\n- utils: honor SELinux label when using a custom handler.\n- utils: honor AppArmor label when using a custom handler.\n- krun: copy the OCI configuration file into the container.\n- utils: fix creating the default user namespace when running with euid != 0.\n- Add setlinebuf() when --debug and --log=file: are used.\n- Fix timestamp format in the error messages.\n- krun: disable libkrun's collection of env vars\n\n* crun-1.7\n\n- seccomp: use a cache for the generated BPF.\n- add support for setting the domainname through the OCI spec.\n- handlers: define wasm and krun.\n- wasmtime: add support for compiling .wat format.\n- cgroup: honor checkBeforeUpdate on cgroupv2.\n- crun: chown std streams before joining the user namespace.\n- crun: display rundir in --version output.\n- container: with cgroupfs use clone3 to join directly the target cgroup.\n- linux: create parent directories for created devices with mode 0755.\n- wasm: inherit environment variables in the WasmEdge handler.\n\n* crun-1.6\n\n- runc compatibility: -v now prints the version string.\n- build: fix build with glibc 2.36.\n- container: drop intermediate userns custom feature.\n- cgroup: change the delegate cgroup semantic so that the cgroup is\n  created in the container payload after the cgroup namespace is created.\n- seccomp: use helper process to send file descriptor to the listener\n  socket.  It enables to be notified on every syscall without hanging\n  the main process.\n- linux: add a fallback to using kill(2) if pidfd_send_signal(2) fails\n  with ENOSYS.\n- krun: add support for krun-sev.\n- wasmtime: always grant file system capability for workdir inside the container.\n- wasmtime: inherit arguments list from the handler instead of the current process.\n- wasmedge: use released wasmedge library instead of libwasmedge_c.so.\n\n* crun-1.5\n\n- add mono based native .NET handler\n- new Wasmtime backend for running WebAssembly\n- add support for wasmedge 0.10 and dropping support for wasmedge 0.9.x\n- dropping support for experimental `WasmEdgeProcess` from wasmedge handler\n- honor process user's uid when setting the HOME environment variable\n- create the current working directory if it is missing in the container\n- fallback to using a tmpfs mount if umount of /sys and /proc fails\n- fallback to netlink to setup lo device\n- fix creating devices in the rootfs\n- fallback to using io.weight if io.bfq.weight doesn't exist\n- remove tun/tap from the default allow list\n- linux: devices mounts have noexec and nosuid\n- fix copyup of files from the container to the tmpfs\n- honor $PATH for newgidmap and newguidmap\n- krun: limit the number of vCPUs to 8\n- cgroup: add support for cpu.idle\n\n* crun-1.4.5\n\n- CRIU: add support for different manage cgroups modes.\n- linux: the hook processes inherit the crun process environment if\n  there is no environment block specified in the OCI configuration.\n- exec: fix double free when using --apparmor and --process-label.\n\n* crun-1.4.4\n\n- wasm, kubernetes: support wasm for kubernetes infrastructure with side-cars\n- Resolve symlinks in bind mounts when creating a user namespace.\n- Fix CVE-2022-27650: exec does not set inheritable capabilities.\n\n* crun-1.4.3\n\n- cgroup: avoid infinite loop when deleting a cgroup if it contains\n  processes that cannot be terminated.\n- support additional options for idmap mounts.  It is now possible to\n  specify what mappings must be used for the idmapped mount.\n- open the source for a bind mount in the host.  It is useful when\n  creating a user namespace so that the parent directories for the\n  source directory are not required to be accessible to the users in\n  the user namespace.\n\n* crun-1.4.2\n\n- CRIU: add pre-dump support.\n- Fix running with a read-only /dev.  The /dev/console file is created\n  before re-mounting /dev as read-only.\n- Ignore EROFS when chowning standard stream files.\n- Add validation for sysctls before applying them.\n- Attempt looking up the executable after the setresuid syscall, this\n  solves an issue on NFS when the executable file is not owned by root\n  in the container, but the UID:GID combination configured for the\n  container can access it.\n\n* crun-1.4.1\n\n- Fix check for an invalid path.  crun was performing the wrong check\n  to validate a path, causing spurious failures at runtime.\n- Allow deleting a container while in `created` state.  It goes\n  against what the OCI runtime specs dictate, but it is the expected\n  behavior since runc allows it.\n- Fix regression when joining a container that has explicit paths for\n  the namespaces.\n- cgroup: do not set cpu limits if number of shares is set to 0.\n  Moby uses 0 to indicate no limits.\n- Fix build issues when configured with --enable-shared.\n- Fix build on systems where OPEN_TREE_CLOEXEC is not defined.\n- Improve diagnostics for errors returned by dbus.\n\n* crun-1.4\n\n- wasm: support for running on kubernetes with containerd.\n- linux: add support for recursive mount options.  e.g. it is possible\n  to specify \"rro\" to make the mount read-only recursively.\n- add support for idmapped mounts through a new mount option \"idmap\".\n- linux: improve detection of /dev target.  Previously a mount like\n  `/dev/` was not properly detected as mounting /dev/ from the host.\n- now crun exec uses CLONE_INTO_CGROUP on supported kernels when\n  using cgroup v2.\n- retry the openat2 syscall if it fails with EAGAIN.\n- cgroup: set the CPUWeight/CPUShares on the systemd scope cgroup.\n- on new kernels, use setns with pidfd.\n- attempt the chdir again with the specified user if it failed before\n  changing credentials.\n- ebpf: fix build on 32 bits systems.\n- crun --version shows the configured handlers.\n\n* crun-1.3\n\n- add support to natively build and run WebAssembly workload and\n  WebAssembly containers.\n- allow to specify sub-cgroup for exec.\n- chown std streams if they are not a TTY.\n- attach the correct streams if the container is suspended and\n  restored multiple times.\n- fix race condition when enabling controllers on cgroup v2.\n- the fallback code to mount cgroupfs bind mounts the current\n  cgroup path instead of the host /sys.\n\n* crun-1.2\n\n- exec: fix regression in 1.1 where containers are being wrongly\n  reported as paused.\n- criu: add support for external ipc, uts and time namespaces.\n\n* crun-1.1\n\n- cgroup: use cgroup.kill when available. It is faster to kill a\n  container through its cgroup as there is no need to recurse over the\n  cgroup pids and terminate each one of them.\n- exec: refuse to exec in a paused container/cgroup.\n- container: Set primary process to 1 via LISTEN_PID by default if\n  user configuration is missing.\n- criu: Add support for external PID namespace.\n- criu: fix save of external descriptors.  Now restored containers\n  attach correctly their standard streams.\n- utils: retry openat2 on EAGAIN.  If the openat2 syscall is\n  interrupted, try again.\n\n* crun-1.0\n\n- cgroup: chown the current container cgroup to root in the container.\n- linux: treat pidfd_open failures EINVAL as ESRCH\n- cgroup: add support for setting memory.use_hierarchy on cgroup v1.\n- Makefile.am: fix link error when using directly libcrun.\n- Fix symlink target mangling for tmpcopyup targets.\n\n* crun-0.21\n\n- honor memory swappiness set to 0\n- status: add fields for owner and created timestamp\n- cgroup: lookup pids controller as well when the memory controller\n  is not available\n- when compiled with krun, automatically use it if the current\n  executable file is called \"krun\".\n\n* crun-0.20.1\n\n- container: ignore error when resetting the SELinux label for the\n  keyring.\n\n* crun-0.20\n\n- container: call prestart hooks before rootfs is RO.\n- cgroup: added support cleaning custom controllers on cgroupv1.\n- spec: add support for --bundle.\n- exec: add --no-new-privs.\n- exec: add --process-label and --apparmor to change SELinux and\n  AppArmor labels.\n- cgroup: kill procs in cgroup on EBUSY.\n- cgroup: ignore devices errors when running in a user namespace.\n- seccomp: drop SECCOMP_FILTER_FLAG_LOG by default.\n- seccomp: report correct action in error message.\n- apply SELinux label to keyring.\n- add custom annotation run.oci.delegate-cgroup.\n- close_range fallbacks to close on EPERM.\n- report error if the cgroup path was set and the cgroup could not be\n  joined.\n\n* crun-0.19.1\n\n- on exec, honor additional_gids from the process spec, not the\n  container definition.\n- spec: add cgroup ns if on cgroup v2.\n- systemd: support array of strings for cgroup annotation.\n\n* crun-0.19\n\n- join all the cgroup v1 controllers.\n- raise a warning when newuidmap/newgidmap fail.\n- handle eBPF access(dev_name, F_OK) call correctly.\n- fix some memory leaks on errors when libcrun is used by a long\n  running process.\n- fix the SELinux label for masked directories.\n- support default seccomp errno value.\n- fail if no default seccomp action specified.\n- support OCI seccomp notify listener.\n- improve OOM error messages.\n- ignore unknown capabilities and raise a warning.\n- always remount bind mounts to drop not requested mount flags.\n\n* crun-0.18\n\n- fix build without CLONE_NEWCGROUP.\n- fix conversion from blkio to io.\n- add custom annotation to load raw BPF.\n- set working directory for libkrun\n- fix symlink lookup on old kernels that lack openat2\n- skip +cpu on EINVAL in cgroup root.  Enabling the cpu controller is\n  not permitted if there are already realtime processes running on the\n  system.\n- Fix permission error when using NOTIFY_SOCKET with username spaces.\n- set HOME to root if the user not found.\n- simplify mount logic to not use a temporary mount.\n- ignore ENOSYS from keyctl.\n\n* crun-0.17\n\n- allow creating user namespaces without root being mapped.\n- allow arbitrary IDs with single ID userns.\n- use close_range(CLOSE_RANGE_CLOEXEC) where available.\n- honor /sys/kernel/cgroup/delegate.\n- fix an issue with hooks running in the container PID namespace.\n- fix building without seccomp.\n- fix building without libcap.\n\n* crun-0.16\n\n- CRIU support.\n- fallback to openat if openat2 returns EPERM.\n- ignore ENOENT for cgroup v1 mounts, if the mount fails with\n  ENOENT, the controller might have been unmounted.\n- fix another race reading cgroup freeze.  Reading from the cgroup\n  fails with ENODEV if the cgroup was deleted in the meanwhile.\n\n* crun-0.15.1\n\n- add experimental support for libkrun.\n- fix check for pidfd availability on older kernels.\n- linux: do not set data when remounting read-only.  Fix 'ro' mounts\n  on older kernels when SELinux is enabled.\n- linux: label the cgroup v1 tmpfs when SELinux is enabled.\n- container: truncate the pid file before writing to it.\n- exec: fix check for read bytes from the sync socket.\n- check the process has a cgroup before allowing pause and resume.\n- linux: always create a user namespace if not running with euid == 0.\n- libcrun can use a hook instead of executing a container process.\n- use libyajl to generate hooks json input.\n- handle correctly ENOENT for seccomp notifications.\n\n* crun-0.15\n\n- add support for OCI unified cgroup v2.\n- add json format option to `crun list`.\n- get last kernel capability dynamically instead of using a build\n  time constant.\n- enable all available cgroup controllers.\n- support the seccomp SCMP_ACT_LOG action.\n- support the seccomp SCMP_ACT_KILL_THREAD action.\n- properly set a SELinux label for the mqueue mount.\n- `crun kill` uses pidfd when supported.\n- experimental support for seccomp notifications.\n- fix bundle option for `crun create` and `crun run`.\n- allow to declare path to config file.\n- check /sys/kernel/security/apparmor when using AppArmor.\n- doesn't accept type=bind alone anymore, but require either \"bind\"\n  or \"rbind\" to be present in the mount flags.\n\n* crun-0.14.1\n\n- fix a regression in crun-0.14 where openat2(2) would fail when bind\n  mounting a symlink.\n- various small fixes to allow running regression tests outside of\n  source tree.\n\n* crun-0.14\n\n- cgroup, systemd: create container under subcgroup.  Now a \"/container\"\n  sub-cgroup is created and fully managed by libcrun.  This is a different\n  behaviour than what runc does.\n- libcrun: use the openat2 syscall available since Linux 5.6.\n- container: allow hooks output to file through an annotation.\n- linux: support joining PID/IPC namespace not owned by the user namespace.\n  Requires Linux 5.3.\n- linux: avoid double fork for creating the init process if not needed.\n- linux: fix an issue where the basename for $NOTIFY_SOCKET is different\n  than /notify.\n- rootless: allow /dev/{tty,ptmx} to be present in linux.devices.\n- cgroup: fix an issue on CentOS 7.8 when using net_cls and net_prio.\n- seccomp: honor errnoRet from OCI spec runtime.\n- exec: set setresuid/setresgid before setting up the terminal.\n- cgroup, v2: fix crun update with both --memory -1 --memory-swap -1.\n- cgroup, v2: fixing setting unlimited swap.\n- cgroup, v2: allow to set unlimited swap per se.\n- cgroup, v2: treat negative numbers as \"max\"\n- cgroup, v2: raise error if swap is set without memory limit.\n- cgroup: ignore cpu resources if set to 0.\n- libcrun: audit errno in crun_make_error calls\n- libcrun: fix read_pid_stat usage.\n- linux: fix double close on the same file descriptor.\n- container: Prevent deletion of not stopped container\n- status: Use process start time for identification\n- CRIU: several improvements.\n- linux: fix path lookups for relative paths containing '/'.\n- linux: use the SELinux mount label for the notify socket.\n- status: delete doesn't fail if the process already exited.\n\n* crun-0.13\n\n- license: change license to gplv2+ and lgpl2.1+.\n- criu: initial support for `container restore`.\n- state: If a container is paused, report its state as 'paused'.\n- cgroup: use the memory controller to ready PIDs.  The pid controller\n  is not available on kernels older than 4.3.\n- linux: drop context= for remount.  Older linux versions complain\n  when the selinux label is specified on a remount.\n- utils: fix mount on not writeable path.\n- cgroup: support systemd properties via annotations.\n- systemd: do not set hard-code collectmode value.  It can be set\n  through an annotation.\n- cgroup: write the correct blkio settings.\n- exec: do not inherit env variables from main pid.\n- ebpf: fix endianness issue on s390x.\n- linux: fix recursive mount on cgroup v1.\n\n* crun-0.12.2.1\n\n- when not using a cgroup namespace, mount only the cgroup v1 subpath.\n\n* crun-0.12.2\n\n- do not require read permissions on /\n- add support for the \"time\" namespace via a custom annotation\n- fix mount of cgroup v1 when using a cgroup namespace\n- set default umask to 0022\n- use the correct path for notify socket with \"crun run -d\"\n- always use setsid\n- use correct indices for seccomp generation\n- fixed several issues with cgroup v2 and the cgroupfs driver\n\n* crun-0.12.1\n\n- fix the order of clone syscall arguments on s390 and cris.\n- if no mode is specified use 0666 for devices.\n- fix running with a relative bundle directory.\n- fix some regressions in the mounts path resolution.\n- drop a warning when cgroup are not available for rootless.\n\n* crun-0.12\n\n- masked paths use only MS_UNBINDABLE\n- mount doesn't specify mount data when there are no options\n- support new hook types: createRuntime, createContainer and startContainer\n- safer mount options.  A temporary mount is prepared outside of the\n  rootfs before being moved to it.\n- apply selinux/apparmor before the pivot_root.\n- handle correctly proc remounts.  It is now supported to specify hidepid=\n- fix exec if a namespace is not available.\n- handle swap limit with the same semantic as on cgroup v1.\n- bring network device up.\n- reset all signal handlers to default.\n\n* crun-0.11\n\n- cgroups2: map memory reservation to memory.low\n- statx fallbacks to stat on EINVAL\n- utils: do not fail if the path we are trying to create already\n  exists\n- generate seccomp profile in the parent process, not in the container\n  init process.  Memory usage is more reliable now and a container can\n  run with ~250K of max memory.\n- support for Linux personality.\n- support for umask.\n- support for the hugetlb controller on cgroup v2.\n- PIDs from a cgroup are read recursively.\n- do not fork on \"create\".\n- now by default seccomp doesn't fail on an unknown syscall.  The\n  previous behavior can be enabled with an annotation.\n- fix joining cgroup on cgroup v2 when a named hierarchy is also\n  present.\n- fix creating user namespaces with more than 2^32 IDs mapped.\n- on exec, keep the SELinux label or AppArmor profile from the\n- container configuration.\n- runtime specific annotation are prefixed with run.oci.\n\n* crun-0.10.6\n\n- when running with a terminal, change the ownership for the terminal\n  to the specified user\n- spec: honor the --rootless flag\n- linux: make sure the source path is resolved when checking the file\n  type.  Regression introduced with 0.10.5.\n\n* crun-0.10.5\n\n- fix CVE-2019-18837\n- fix running on CentOS/RHEL 8\n- report errors opening the console socket\n- not leave config.json around if the container could not be created\n\n* crun-0.10.4\n\n- ignore errors creating /dev/console\n- add an annotation \"io.crun.keep_original_groups\", if it is set then\n  crun won't drop additional groups when creating the container\n\n* crun-0.10.3\n\n- systemd: set collectmode=inactive-or-failed\n- fix build on Alpine\n- use the current working directory to lookup local paths\n- improve the error message when a hook fails\n- add granular enable/disable configure options\n\n* crun-0.10.2\n\n- fix a regression in 0.10.1 where cgroups v1 could not be created\n- correctly chown cgroups when using a user namespace so that systemd\n  can run in a container that uses a user namespace\n\n* crun-0.10.1\n\n- linux: Keep MS_RDONLY when remounting bind mount of a read-only\n  source.  It solves an issue on Fedora Silverblue where /usr is\n  mounted read only.\n- fix exec of rootless containers when cgroups are not available\n\n* crun-0.10\n\n- support for AppArmor\n- fix for CVE-2019-16884, make sure writes to /proc for the SELinux\n  and AppArmor labels are on procfs.\n- exec supports --preserve-fds\n- seccomp: fix lookup for pseudo syscalls, seccomp now works fine on\n  non native archs\n- cgroup: ignore rootless errors if manager != systemd\n- error: always write errors to stderr\n- chroot: follow symlinks for the last component\n- set $HOME if it is not already defined\n\n* crun-0.9.1\n\n- fix an issue with tmpcopyup that didn't work correctly with symlinks\n- create a new cgroup namespace before mounting the cgroup file\n  system, so that it uses the correct namespace\n\n* crun-0.9\n\n- fix exec into containers running systemd on cgroups v2\n- kill: honor --all\n- kill: when not using a PID namespace, use the freezer controller to\n  prevent the container forking new processes\n- linux: handle tmpcopyup option to copy files from the rootfs to the\n  new mounted tmpfs.\n- OCI: honor seccomp options.  If not specified any seccomp option,\n  now crun will default to using SECCOMP_FILTER_FLAG_SPEC_ALLOW |\n  SECCOMP_FILTER_FLAG_LOG when using the seccomp(2)\n  syscall\n\n* crun-0.8\n\n- executable lookup. Now create fails immediately if the specified\n  executable doesn't exist\n- subreaper enabled only when crun is attached\n- fix notify socket when used from create and prevent it hanging\n  indefinitely when the container exits\n- correctly write cpu controller resources when using cgroups v2\n- support for the freezer controller when using cgroups v2\n- honor unspecified minor/major number for devices when using cgroups v2\n- reintroduce --no-pivot\n- do not add a cgroup path again if it was already specified in the\n  OCI configuration\n\n* crun-0.7\n\n- support devices on cgroups v2 using eBPF.\n- new option --cgroup-manager=MANAGER. Accepted values are cgroupfs,\n  systemd and disabled.\n- can run without using cgroups also as root.\n- NOTIFY_SOCKET works also for containers created via create/start.\n- when using systemd, create the same name for the scope as runc does.\n\n* crun-0.6\n\n- tty: set the size on the exec tty.\n- cgroup: enable only the controllers needed.\n- cgroup: in unified mode report the errors also for rootless.\n- cgroup2: add support for the cpuset controller.\n- linux: ignore tmpcopyup.\n\n* crun-0.5\n\n- logging: support --log=syslog: and log=journald.\n- seccomp: if the syscall is not known, ignore it.\n- container: move set oom before entering userns.\n- status: always honor XDG_RUNTIME_DIR.\n- linux: resolve symlinks in the target for bind mounts.\n- fix all issues found by Coverity.\n- pass Kubernetes e2e tests on Fedora with CRI-O.\n\n* crun-0.4\n\n- partial support for cgroup v2 (cpu, io, memory, pids controllers).\n- pass all the OCI validation tests (https://github.com/opencontainers/runtime-tools).\n- implement --log-format. crun now works with containerd.\n- fixed some issues that prevented crun to work on older kernels.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.296875,
          "content": "<p align=\"center\">\n  <img src=\"docs/crun.svg\" width=\"450\" height=\"450\">\n</p>\n\n[![Coverity Status](https://scan.coverity.com/projects/17787/badge.svg)](https://scan.coverity.com/projects/giuseppe-crun)\n[![CodeQL](https://github.com/containers/crun/workflows/CodeQL/badge.svg)](https://github.com/containers/crun/actions?query=workflow%3ACodeQL)\n\nA fast and low-memory footprint OCI Container Runtime fully written in\nC.\n\ncrun conforms to the OCI Container Runtime specifications\n(<https://github.com/opencontainers/runtime-spec>).\n\n## Documentation\n\nThe user documentation is available [here](crun.1.md).\n\n## Why another implementation?\n\nWhile most of the tools used in the Linux containers ecosystem are\nwritten in Go, I believe C is a better fit for a lower level tool like a\ncontainer runtime. runc, the most used implementation of the OCI runtime\nspecs written in Go, re-execs itself and use a module written in C for\nsetting up the environment before the container process starts.\n\ncrun aims to be also usable as a library that can be easily included in\nprograms without requiring an external process for managing OCI\ncontainers.\n\n## Performance\n\ncrun is faster than runc and has a much lower memory footprint.\n\nThis is the elapsed time on my machine for running sequentially 100\ncontainers, the containers run `/bin/true`:\n\n|               |    crun |   runc |       % |\n| ------------- | ------: | -----: | ------: |\n| 100 /bin/true | 0:01.69 | 0:3.34 | \\-49.4% |\n\ncrun requires fewer resources, so it is also possible to set stricter\nlimits on the memory allowed in the container:\n\n```console\n# podman --runtime /usr/bin/runc run --rm --memory 4M fedora echo it works\nError: container_linux.go:346: starting container process caused \"process_linux.go:327: getting pipe fds for pid 13859 caused \\\"readlink /proc/13859/fd/0: no such file or directory\\\"\": OCI runtime command not found error\n\n# podman --runtime /usr/bin/crun run --rm --memory 512k fedora echo it works\nit works\n```\n\n## Dependencies\n\nThese dependencies are required for the build:\n\n### Fedora\n\n```console\n$ sudo dnf install -y make python git gcc automake autoconf libcap-devel \\\n    systemd-devel yajl-devel libseccomp-devel pkg-config \\\n    go-md2man glibc-static python3-libmount libtool\n```\n\n### RHEL/CentOS 8\n\n```console\n$ sudo yum --enablerepo='*' --disablerepo='media-*' install -y make automake \\\n    autoconf gettext \\\n    libtool gcc libcap-devel systemd-devel yajl-devel \\\n    glibc-static libseccomp-devel python36 git\n```\n\ngo-md2man is not available on RHEL/CentOS 8, so if you'd like to build\nthe man page, you also need to manually install go-md2man. It can be\ninstalled with:\n\n```console\n$ sudo yum --enablerepo='*' install -y golang\n$ export GOPATH=$HOME/go\n$ go get github.com/cpuguy83/go-md2man\n$ export PATH=$PATH:$GOPATH/bin\n```\n\n### Ubuntu\n\n```console\n$ sudo apt-get install -y make git gcc build-essential pkgconf libtool \\\n   libsystemd-dev libprotobuf-c-dev libcap-dev libseccomp-dev libyajl-dev \\\n   go-md2man autoconf python3 automake\n```\n\n### Alpine\n\n```console\n# apk add gcc automake autoconf libtool gettext pkgconf git make musl-dev \\\n    python3 libcap-dev libseccomp-dev yajl-dev argp-standalone go-md2man\n```\n\n### Tumbleweed\n\n```console\n# zypper install make automake autoconf gettext libtool gcc libcap-devel \\\nsystemd-devel libyajl-devel libseccomp-devel python3 go-md2man \\\nglibc-static;\n```\n\nNote that Tumbleweed requires you to specify libseccomp's header file location\nas a compiler flag.\n\n```console\n# ./autogen.sh\n# ./configure CFLAGS='-I/usr/include/libseccomp'\n# make\n```\n\n## Build\n\nUnless you are also building the Python bindings, Python is needed only\nby libocispec to generate the C parser at build time, it won't be used\nafterwards.\n\nOnce all the dependencies are installed:\n\n```console\n$ ./autogen.sh\n$ ./configure\n$ make\n```\n\nTo install into default PREFIX (`/usr/local`):\n\n```console\n$ sudo make install\n```\n\n### Shared Libraries\n\nThe previous build instructions do not enable shared libraries, therefore you will be unable to use libcrun. If you wish to build the shared libraries you can change the previous `./configure` statement to `./configure --enable-shared`.\n\n## Static build\n\nIt is possible to build a statically linked binary of crun by using the\nofficially provided\n[nix](https://nixos.org/nixos/packages.html?attr=crun&channel=unstable&query=crun)\npackage and the derivation of it [within this repository](nix/). The\nbuilds are completely reproducible and will create a x86\\_64/amd64\nstripped ELF binary for [glibc](https://www.gnu.org/software/libc).\n\n### Nix\n\nTo build the binaries by locally installing the nix package manager:\n\n```console\n$ curl -L https://nixos.org/nix/install | sh\n$ git clone --recursive https://github.com/containers/crun.git && cd crun\n$ nix build -f nix/\n$ ./result/bin/crun --version\n```\n\n### Ansible\n\nAn [Ansible Role](https://github.com/alvistack/ansible-role-crun) is\nalso available to automate the installation of the above statically\nlinked binary on its supported OS:\n\n```console\n$ sudo su -\n# mkdir -p ~/.ansible/roles\n# cd ~/.ansible/roles\n# git clone https://github.com/alvistack/ansible-role-crun.git crun\n# cd ~/.ansible/roles/crun\n# pip3 install --upgrade --ignore-installed --requirement requirements.txt\n# molecule converge\n# molecule verify\n```\n\n## Lua bindings\n\nA Lua binding is available. See [the README](lua/README.md) for more information.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.232421875,
          "content": "## Reporting a Vulnerability\n\nIf you discover a potential security issue in this project we ask that\nyou notify us directly via email to security@oci.run (not affiliated\nwith opencontainers.org).\n\nPlease do **not** create a public issue.\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.2001953125,
          "content": "#!/bin/sh\nif ! (pkg-config --version > /dev/null 2>&1); then\n    echo \"pkg-config not found.  Please install it\">&2\n    exit 1\nfi\n\nmkdir -p m4\n\ngit submodule update --init --recursive\n\nexec autoreconf -fi\n"
        },
        {
          "name": "build-aux",
          "type": "tree",
          "content": null
        },
        {
          "name": "cfg.mk",
          "type": "blob",
          "size": 0.787109375,
          "content": "export VC_LIST_EXCEPT_DEFAULT=^(lib/.*|m4/.*|md5/.*|build-aux/.*|src/gettext\\.h|.*ChangeLog|src/libcrun/cloned_binary.c|src/libcrun/chroot_realpath.c|.*\\.1)$$\n\nlocal-checks-to-skip = \\\n    sc_immutable_NEWS \\\n    sc_copyright_check \\\n    \\\n    sc_prohibit_path_max_allocation \\\n    sc_prohibit_strcmp \\\n    sc_program_name \\\n    sc_bindtextdomain\t \\\n    sc_unmarked_diagnostics \\\n    sc_prohibit_intprops_without_use \\\n    sc_error_message_uppercase \\\n    sc_GPL_version \\\n    sc_cast_of_x_alloc_return_value \\\n    sc_indent \\\n    sc_prohibit_always-defined_macros \\\n    sc_prohibit_gnu_make_extensions\n\n#SHELL=bash -x\nshow-vc-list-except:\n\t@$(VC_LIST_EXCEPT)\n\nVC_LIST_ALWAYS_EXCLUDE_REGEX = ^ABOUT-NLS|maint.mk|git.mk|tests.*|COPYING|contrib/.*|src/libcrun/blake3/.*$$\n\nexport gl_public_submodule_commit=\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 12.87109375,
          "content": "AC_PREREQ([2.69])\nAC_INIT([crun],\n\tm4_esyscmd([build-aux/git-version-gen --prefix \"\" .tarball-version]),\n\t[giuseppe@scrivano.org])\nAC_CONFIG_AUX_DIR([build-aux])\nAC_CONFIG_HEADERS([config.h])\nAC_CONFIG_MACRO_DIR([m4])\nAC_REQUIRE_AUX_FILE([tap-driver.sh])\nAC_CONFIG_SRCDIR([src/crun.c])\n\nAC_PROG_LN_S\n\nLT_INIT([disable-shared])\n\nAM_INIT_AUTOMAKE([1.11.2 -Wno-portability foreign tar-ustar no-dist-gzip dist-xz subdir-objects])\n\nAM_MAINTAINER_MODE([enable])\nAM_SILENT_RULES([yes])\n\nAC_PROG_AWK\nAC_PROG_SED\nAC_PROG_CC\nAM_PATH_PYTHON(3)\n\nAC_PATH_PROG(MD2MAN, go-md2man)\n\nAM_CONDITIONAL([HAVE_MD2MAN], [test \"x$ac_cv_path_MD2MAN\" != x])\n\nAC_CHECK_HEADERS([error.h linux/openat2.h stdatomic.h linux/ioprio.h])\n\nAC_CHECK_TYPES([atomic_int], [], [], [[#include <stdatomic.h>]])\n\nAC_CHECK_FUNCS(copy_file_range fgetxattr statx fgetpwent_r issetugid memfd_create)\n\nAC_ARG_ENABLE(crun,\nAS_HELP_STRING([--enable-crun], [Include crun executable in installation (default: yes)]),\n[\ncase \"${enableval}\" in\n\tyes) enable_crun=true ;;\n\tno) enable_crun=false ;;\n\t*) AC_MSG_ERROR(bad value $(enableval) for --disable-crun) ;;\nesac],\n[enable_crun=true])\nAM_CONDITIONAL([ENABLE_CRUN], [test \"x${enable_crun}\" = xtrue])\n\nAC_ARG_ENABLE(libcrun,\nAS_HELP_STRING([--enable-libcrun], [Include libcrun in installation (default: yes)]),\n[\ncase \"${enableval}\" in\n\tyes) enable_libcrun=true ;;\n\tno) enable_libcrun=false ;;\n\t*) AC_MSG_ERROR(bad value ${enablevaal} for --enable-libcrun) ;;\nesac\n],\n[enable_libcrun=true])\nAM_CONDITIONAL([ENABLE_LIBCRUN], [test \"x${enable_libcrun}\" = xtrue])\n\ndnl embedded yajl\nAC_ARG_ENABLE(embedded-yajl,\nAS_HELP_STRING([--enable-embedded-yajl], [Statically link a modified yajl version]),\n[\ncase \"${enableval}\" in\n\tyes) embedded_yajl=true ;;\n\tno)  embedded_yajl=false ;;\n\t*) AC_MSG_ERROR(bad value ${enableval} for --enable-embedded-yajl) ;;\nesac],[embedded_yajl=false])\n\nAC_ARG_ENABLE(dynload-libcrun,\nAS_HELP_STRING([--enable-dynload-libcrun], [Dynamically load libcrun]),\n[\ncase \"${enableval}\" in\n\tyes) dynload_libcrun=true ;;\n\tno)  dynload_libcrun=false ;;\n\t*) AC_MSG_ERROR(bad value ${enableval} for --enable-dynload-libcrun) ;;\nesac],[dynload_libcrun=false])\nAM_CONDITIONAL([DYNLOAD_LIBCRUN], [test x\"$dynload_libcrun\" = xtrue])\n\nAM_CONDITIONAL([HAVE_EMBEDDED_YAJL], [test x\"$embedded_yajl\" = xtrue])\nAM_COND_IF([HAVE_EMBEDDED_YAJL], [], [\nAC_SEARCH_LIBS(yajl_tree_get, [yajl], [AC_DEFINE([HAVE_YAJL], 1, [Define if libyajl is available])], [AC_MSG_ERROR([*** libyajl headers not found])])\nPKG_CHECK_MODULES([YAJL], [yajl >= 2.0.0])\n])\n\ndnl libcap\nAC_ARG_ENABLE([caps],\n\tAS_HELP_STRING([--disable-caps], [Ignore libcap and disable support]))\nAS_IF([test \"x$enable_caps\" != \"xno\"], [\n\tAC_CHECK_HEADERS([sys/capability.h], [], [AC_MSG_ERROR([*** POSIX caps headers not found])])\n\tAS_IF([test \"$ac_cv_header_sys_capability_h\" = \"yes\"], [\n\t\tAC_SEARCH_LIBS(cap_from_name, [cap], [AC_DEFINE([HAVE_CAP], 1, [Define if libcap is available])], [AC_MSG_ERROR([*** libcap headers not found])])\n\t])\n])\n\ndnl dl\nAC_ARG_ENABLE([dl], AS_HELP_STRING([--disable-dl], [Disable dynamic libraries support]))\nAS_IF([test \"x$enable_dl\" != \"xno\"], [\n\tAC_SEARCH_LIBS([dlopen], [dl], [AC_DEFINE([HAVE_DLOPEN], 1, [Define if DLOPEN is available])], [])\n])\n\nAC_SUBST(MONO_CFLAGS)\nAC_SUBST(MONO_LIBS)\ndnl include support for mono (EXPERIMENTAL)\nAC_ARG_WITH([mono], AS_HELP_STRING([--with-mono], [build with mono support]))\nAS_IF([test \"x$with_mono\" = \"xyes\"], [\n\tAC_CHECK_HEADERS([mono/metadata/environment.h], [], [AC_MSG_ERROR([*** Missing mono headers1])])\n\tAS_IF([test \"$ac_cv_header_mono_metadata_environment_h\" = \"yes\"], [\n\t\tAC_SEARCH_LIBS(mono_environment_exitcode_get, [mono-2.0], [AC_DEFINE([HAVE_MONO], 1, [Define if mono is available])], [AC_MSG_ERROR([*** Missing mono headers2])])\n\t\tMONO_CFLAGS=`pkg-config --cflags mono-2`\n\t\tMONO_LIBS=`pkg-config --libs mono-2`\n\t\tCFLAGS=\"$CFLAGS `pkg-config --cflags mono-2`\"\n\t\tLIBS=\"$LIBS `pkg-config --libs mono-2`\"\n\t])\n])\n\ndnl include support for wasmer (EXPERIMENTAL)\nAC_ARG_WITH([wasmer], AS_HELP_STRING([--with-wasmer], [build with wasmer support]))\nAS_IF([test \"x$with_wasmer\" = \"xyes\"], AC_CHECK_HEADERS([wasmer.h], AC_DEFINE([HAVE_WASMER], 1, [Define if wasmer is available]), [AC_MSG_ERROR([*** Missing wasmer headers])]))\n\ndnl include support for wasmtime (EXPERIMENTAL)\nAC_ARG_WITH([wasmtime], AS_HELP_STRING([--with-wasmtime], [build with wasmtime support]))\nAS_IF([test \"x$with_wasmtime\" = \"xyes\"], AC_CHECK_HEADERS([wasmtime.h], AC_DEFINE([HAVE_WASMTIME], 1, [Define if wasmtime is available]), [AC_MSG_ERROR([*** Missing wasmtime headers])]))\n\ndnl include support for wasmedge (EXPERIMENTAL)\nAC_ARG_WITH([wasmedge], AS_HELP_STRING([--with-wasmedge], [build with WasmEdge support]))\nAS_IF([test \"x$with_wasmedge\" = \"xyes\"], AC_CHECK_HEADERS([wasmedge/wasmedge.h], AC_DEFINE([HAVE_WASMEDGE], 1, [Define if WasmEdge is available]), [AC_MSG_ERROR([*** Missing wasmedge headers])]))\n\ndnl include support for wamr (EXPERIMENTAL)\nAC_ARG_WITH([wamr], AS_HELP_STRING([--with-wamr], [build with WAMR support]))\nAS_IF([test \"x$with_wamr\" = \"xyes\"], AC_CHECK_HEADERS([wasm_export.h], AC_DEFINE([HAVE_WAMR], 1, [Define if WAMR is available]), [AC_MSG_ERROR([*** Missing WAMR headers])]))\n\ndnl include support for libkrun (EXPERIMENTAL)\nAC_ARG_WITH([libkrun], AS_HELP_STRING([--with-libkrun], [build with libkrun support]))\nAS_IF([test \"x$with_libkrun\" = \"xyes\"], AC_CHECK_HEADERS([libkrun.h], AC_DEFINE([HAVE_LIBKRUN], 1, [Define if libkrun is available]), [AC_MSG_ERROR([*** Missing libkrun headers])]))\n\nAM_CONDITIONAL([ENABLE_KRUN], [test \"x$with_libkrun\" = xyes])\n\nAM_CONDITIONAL([ENABLE_WASM], [test \"x$with_wasmer\" = xyes || test \"x$with_wasmedge\" = xyes || test \"x$with_wasmtime\" = xyes])\n\ndnl include support for spin (EXPERIMENTAL)\nAC_ARG_WITH([spin], AS_HELP_STRING([--with-spin], [build with spin support]))\nAS_IF([test \"x$with_spin\" = \"xyes\"], AC_DEFINE([HAVE_SPIN], 1, [Define if spin is available]))\n\n\ndnl libseccomp\nAC_ARG_ENABLE([seccomp],\n\tAS_HELP_STRING([--disable-seccomp], [Ignore libseccomp and disable support]))\nAS_IF([test \"x$enable_seccomp\" != \"xno\"], [\n\tAC_CHECK_HEADERS([seccomp.h], [], [AC_MSG_ERROR([*** Missing libseccomp headers])])\n\tAS_IF([test \"$ac_cv_header_seccomp_h\" = \"yes\"], [\n\t\tAC_SEARCH_LIBS(seccomp_rule_add, [seccomp], [AC_DEFINE([HAVE_SECCOMP], 1, [Define if seccomp is available])], [AC_MSG_ERROR([*** libseccomp headers not found])])\n\t\tAC_SEARCH_LIBS(seccomp_arch_resolve_name, [seccomp], [AC_DEFINE([SECCOMP_ARCH_RESOLVE_NAME], 1, [Define if seccomp_arch_resolve_name is available])], [ ])\n\t])\n])\n\ndnl libsystemd\nAC_ARG_ENABLE([systemd],\n\tAS_HELP_STRING([--disable-systemd], [Ignore systemd and disable support]))\nAS_IF([test \"x$enable_systemd\" != \"xno\"], [\n\tAC_CHECK_HEADERS([systemd/sd-bus.h], [], [AC_MSG_ERROR([*** Missing libsystemd headers])])\n\tAS_IF([test \"$ac_cv_header_systemd_sd_bus_h\" = \"yes\"], [\n\t\tAC_SEARCH_LIBS(sd_bus_match_signal_async, [systemd], [AC_DEFINE([HAVE_SYSTEMD], 1, [Define if libsystemd is available])], [AC_MSG_ERROR([*** Failed to find libsystemd])])\n\t\tAC_CHECK_FUNCS(sd_notify_barrier)\n\t])\n])\n\ndnl ebpf\nAC_ARG_ENABLE([bpf],\n\tAS_HELP_STRING([--disable-bpf], [Ignore eBPF and disable support]))\nAS_IF([test \"x$enable_bpf\" != \"xno\"], [\n\tAC_CHECK_HEADERS([linux/bpf.h])\n\tAS_IF([test \"$ac_cv_header_linux_bpf_h\" = \"yes\"], [\n\t\tAC_MSG_CHECKING(compilation for eBPF)\n\t\tAC_COMPILE_IFELSE(\n\t\t\t[AC_LANG_SOURCE([[\n\t\t\t\t#include <unistd.h>\n\t\t\t\t#include <stdint.h>\n\t\t\t\t#include <linux/bpf.h>\n\t\t\t\tvoid foo() {\n\t\t\t\t\tuint64_t val = 0x123456789;\n\t\t\t\t\t__attribute__ ((unused)) union bpf_attr attr;\n\t\t\t\t\tattr.insns = val;\n\t\t\t\t}\n\t\t\t\tint program = BPF_PROG_TYPE_CGROUP_DEVICE;\n\t\t\t]])],\n\t\t\t[AC_MSG_RESULT(yes)\n\t\t\t AC_DEFINE([HAVE_EBPF], 1, [Define if eBPF is available])],\n\t\t\t[AC_MSG_RESULT(no)])\n\t])\n])\n\nuse_fPIC=no\nlibcrun_public='__attribute__((visibility(\"default\"))) extern'\nif test \"x$enable_shared\" = \"xyes\"; then\n        AC_DEFINE([SHARED_LIBCRUN], 1, [Define if shared libraries are enabled])\n        AC_SUBST([SHARED_LIBCRUN])\n        use_fPIC=yes\n        if test \"x$dynload_libcrun\" = \"xyes\"; then\n            libcrun_public='__attribute__((visibility(\"default\"))) __attribute__((weak)) extern'\n            AC_DEFINE([DYNLOAD_LIBCRUN], 1, [Define if shared libraries are enabled])\n            AC_SUBST([DYNLOAD_LIBCRUN])\n        else\n            libcrun_public='__attribute__((visibility(\"default\"))) extern'\n        fi\nfi\n\nAC_DEFINE_UNQUOTED([LIBCRUN_PUBLIC], [$libcrun_public], [LIBCRUN_PUBLIC])\n\nAC_ARG_WITH([python-bindings], AS_HELP_STRING([--with-python-bindings], [build the Python bindings]))\nAS_IF([test \"x$with_python_bindings\" = \"xyes\"], [\n\tPKG_CHECK_MODULES([PYTHON], [python3], [], [AC_MSG_ERROR([*** python headers not found])])\n        use_fPIC=yes\n])\n\nAC_ARG_WITH([lua-bindings], AS_HELP_STRING([--with-lua-bindings], [build the Lua bindings]))\n\nAC_ARG_ENABLE(\n\t[lua-path-guessing],\n\tAS_HELP_STRING([--enable-lua-path-guessing], [guessing lua module path based on variables (default: yes), disable to use libdir as luaexecdir]),\n[\ncase \"${enableval}\" in\n\tyes) enable_lua_path_guessing=true ;;\n\tno) enable_lua_path_guessing=false ;;\n\t*) AC_MSG_ERROR(bad value ${enablevaal} for --enable-lua-path-guessing) ;;\nesac\n],\n[enable_lua_path_guessing=true]\n)\n\nAS_IF([test \"x$with_lua_bindings\" = \"xyes\"], [\n\tAX_PROG_LUA([5.4], [5.5], [], [AC_MSG_ERROR([*** lua interpreter not found])])\n\tAX_LUA_HEADERS([], [AC_MSG_ERROR([*** lua headers not found])])\n\tAX_LUA_LIBS([], [AC_MSG_ERROR([*** lua libs not found])])\n\tAS_IF([test \"x$enable_lua_path_guessing\" = \"xfalse\"], [\n\t\tAC_SUBST([luaexecdir], [$libdir])\n\t])\n\tuse_fPIC=yes\n])\n\nAS_IF([test \"x$use_fPIC\" = \"xyes\"], [\n\t# configure should not touch CFLAGS/LDFLAGS but we need it to propagate it\n\t# to libocispec.\n\texport CFLAGS=\"$CFLAGS -fPIC\"\n\texport LDFLAGS=\"$LDFLAGS -fPIC\"\n])\n\ndnl criu\nAC_ARG_ENABLE([criu], AS_HELP_STRING([--disable-criu], [Disable CRIU based checkpoint/restore support]))\nAS_IF([test \"x$enable_criu\" != \"xno\"], [\n\tPKG_CHECK_MODULES([CRIU], [criu >= 3.15], [have_criu=\"yes\"], [have_criu=\"no\"\n\t\tAC_MSG_NOTICE([CRIU headers not found, building without CRIU support])])\n\tPKG_CHECK_MODULES([CRIU_JOIN_NS], [criu > 3.16], [have_criu_join_ns=\"yes\"], [have_criu_join_ns=\"no\"\n\t        AC_MSG_NOTICE([CRIU version doesn't support join-ns API])])\n\tPKG_CHECK_MODULES([CRIU_PRE_DUMP], [criu > 3.16.1], [have_criu_pre_dump=\"yes\"], [have_criu_pre_dump=\"no\"\n\t        AC_MSG_NOTICE([CRIU version doesn't support for pre-dumping])])\n\tPKG_CHECK_MODULES([CRIU_NETWORK_LOCK_SKIP], [criu >= 3.19], [have_criu_network_lock_skip=\"yes\"], [have_criu_network_lock_skip=\"no\"\n\t        AC_MSG_NOTICE([CRIU version doesn't support CRIU_NETWORK_LOCK_SKIP])])\n\tAS_IF([test \"$have_criu\" = \"yes\"], [\n\t\tAC_DEFINE([HAVE_CRIU], 1, [Define if CRIU is available])\n\t])\n\tAS_IF([test \"$have_criu_join_ns\" = \"yes\"], [\n\t\tAC_DEFINE([CRIU_JOIN_NS_SUPPORT], 1, [Define if CRIU join NS support is available])\n\t])\n\tAS_IF([test \"$have_criu_pre_dump\" = \"yes\"], [\n\t\tAC_DEFINE([CRIU_PRE_DUMP_SUPPORT], 1, [Define if CRIU pre-dump support is available])\n\t])\n\tAS_IF([test \"$have_criu_network_lock_skip\" = \"yes\"], [\n\t\tAC_DEFINE([CRIU_NETWORK_LOCK_SKIP_SUPPORT], 1, [Define if CRIU_NETWORK_LOCK_SKIP is available])\n\t])\n\n], [AC_MSG_NOTICE([CRIU support disabled per user request])])\n\nFOUND_LIBS=$LIBS\nLIBS=\"\"\n\nAC_MSG_CHECKING([for new mount API (fsconfig)])\nAC_COMPILE_IFELSE(\n\t[AC_LANG_SOURCE([[\n\t\t\t#include <sys/mount.h>\n\t\t\tint cmd = FSCONFIG_CMD_CREATE;\n\t]])],\n\t[AC_MSG_RESULT(yes)\n\t\t AC_DEFINE([HAVE_FSCONFIG_CMD_CREATE_SYS_MOUNT_H], 1, [Define if FSCONFIG_CMD_CREATE is available in sys/mount.h])],\n\t[AC_MSG_RESULT(no)])\nAC_COMPILE_IFELSE(\n\t[AC_LANG_SOURCE([[\n\t\t\t/* also make sure it doesn't conflict with <sys/mount.h> since it is always used.  */\n\t\t\t#include <sys/mount.h>\n\t\t\t#include <linux/mount.h>\n\t\t\tint cmd = FSCONFIG_CMD_CREATE;\n\t]])],\n\t[AC_MSG_RESULT(yes)\n\t\t AC_DEFINE([HAVE_FSCONFIG_CMD_CREATE_LINUX_MOUNT_H], 1, [Define if FSCONFIG_CMD_CREATE is available in linux/mount.h])],\n\t[AC_MSG_RESULT(no)])\n\nAC_MSG_CHECKING([for seccomp notify API])\nAC_COMPILE_IFELSE(\n\t[AC_LANG_SOURCE([[\n\t\t\t#include <linux/seccomp.h>\n\t\t\tint cmd = SECCOMP_GET_NOTIF_SIZES;\n\t\t]])],\n\t\t[AC_MSG_RESULT(yes)\n\t\t AC_DEFINE([HAVE_SECCOMP_GET_NOTIF_SIZES], 1, [Define if SECCOMP_GET_NOTIF_SIZES is available])],\n\t\t[AC_MSG_RESULT(no)])\n\nAC_SUBST([FOUND_LIBS])\nAC_SUBST([CRUN_LDFLAGS])\n\nAC_SUBST([CRUN_LIBDIR], [$libdir/crun])\n\n[RPM_VERSION=$(echo $VERSION | sed -e's,^\\([^-]*\\).*$,\\1,g')]\n\n[GIT_COMMIT_ID=$(git rev-parse --short HEAD)]\n\nAC_SUBST([RPM_VERSION])\nAC_SUBST([GIT_COMMIT_ID])\n\nAC_CHECK_TOOL(GPERF, gperf)\nif test -z \"$GPERF\"; then\n\tAC_MSG_NOTICE(gperf not found - cannot rebuild signal parser code)\nfi\n\nAC_SEARCH_LIBS([argp_parse], [argp], [], [AC_MSG_ERROR([*** argp functions not found - install libargp or argp_standalone])])\n\nAM_CONDITIONAL([PYTHON_BINDINGS], [test \"x$with_python_bindings\" = \"xyes\"])\nAM_CONDITIONAL([LUA_BINDINGS], [test \"x$with_lua_bindings\" = \"xyes\"])\nAM_CONDITIONAL([CRIU_SUPPORT], [test \"x$have_criu\" = \"xyes\"])\nAM_CONDITIONAL([SHARED_LIBCRUN], [test \"x$enable_shared\" = \"xyes\"])\n\nAC_CONFIG_FILES([Makefile])\n\nAC_CONFIG_SUBDIRS([libocispec])\nAC_OUTPUT\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "crun.1",
          "type": "blob",
          "size": 21.595703125,
          "content": ".nh\n.TH crun 1 \"User Commands\"\n\n.SH NAME\n.PP\ncrun - a fast and lightweight OCI runtime\n\n\n.SH SYNOPSIS\n.PP\ncrun [global options] command [command options] [arguments...]\n\n\n.SH DESCRIPTION\n.PP\ncrun is a command line program for running Linux containers that\nfollow the Open Container Initiative (OCI) format.\n\n\n.SH COMMANDS\n.PP\n\\fBcreate\\fP\nCreate a container.  The runtime detaches from the container process\nonce the container environment is created.  It is necessary to\nsuccessively use \\fBstart\\fR for starting the container.\n\n.PP\n\\fBdelete\\fP\nRemove definition for a container.\n\n.PP\n\\fBexec\\fP\nExec a command in a running container.\n\n.PP\n\\fBlist\\fP\nList known containers.\n\n.PP\n\\fBkill\\fP\nSend the specified signal to the container init process.  If no signal\nis specified, SIGTERM is used.\n\n.PP\n\\fBps\\fP\nShow the processes running in a container.\n\n.PP\n\\fBrun\\fP\nCreate and immediately start a container.\n\n.PP\n\\fBspec\\fP\nGenerate a configuration file.\n\n.PP\n\\fBstart\\fP\nStart a container that was previously created.  A container cannot be\nstarted multiple times.\n\n.PP\n\\fBstate\\fP\nOutput the state of a container.\n\n.PP\n\\fBpause\\fP\nPause all the processes in the container.\n\n.PP\n\\fBresume\\fP\nResume the processes in the container.\n\n.PP\n\\fBupdate\\fP\nUpdate container resource constraints.\n\n.PP\n\\fBcheckpoint\\fP\nCheckpoint a running container using CRIU.\n\n.PP\n\\fBrestore\\fP\nRestore a container from a checkpoint.\n\n\n.SH STATE\n.PP\nBy default, when running as root user, crun saves its state under the\n\\fB/run/crun\\fP directory.  As unprivileged user, instead the\n\\fIXDG_RUNTIME_DIR\\fP environment variable is honored, and the directory\n\\fB$XDG_RUNTIME_DIR/crun\\fP is used.  The global option \\fB--root\\fP\noverrides this setting.\n\n\n.SH GLOBAL OPTIONS\n.PP\n\\fB--debug\\fP\nProduce verbose output.\n\n.PP\n\\fB--log\\fP=\\fILOG-DESTINATION\\fP\nDefine the destination for the error and warning messages generated by\ncrun.\nIf the error happens late in the container init process, when crun\nalready stopped watching it, then it will be printed to the container\nstderr.\n\n.PP\nIt is specified in the form \\fIBACKEND:SPECIFIER\\fP\\&.\n\n.PP\nThese following backends are supported:\n\n.RS\n.IP \\(bu 2\nfile:PATH\n.IP \\(bu 2\njournald:IDENTIFIER\n.IP \\(bu 2\nsyslog:IDENTIFIER\n\n.RE\n\n.PP\nIf no backend is specified, then \\fIfile:\\fP is used by default.\n\n.PP\n\\fB--log-format\\fP=\\fIFORMAT\\fP\nDefine the format of the log messages.  It can either be \\fBtext\\fP, or\n\\fBjson\\fP\\&.  The default is \\fBtext\\fP\\&.\n\n.PP\n\\fB--log-level\\fP=\\fILEVEL\\fP\nDefine the log level.  It can either be \\fBdebug\\fP, \\fBwarning\\fP or \\fBerror\\fP\\&.\nThe default is \\fBerror\\fP\\&.\n\n.PP\n\\fB--no-pivot\\fP\nUse \\fBchroot(2)\\fR instead of \\fBpivot_root(2)\\fR when creating the container.\nThis option is not safe, and should be avoided.\n\n.PP\n\\fB--root\\fP=\\fIDIR\\fP\nDefines where to store the state for crun containers.\n\n.PP\n\\fB--systemd-cgroup\\fP\nUse systemd for configuring cgroups.  If not specified, the cgroup is\ncreated directly using the cgroupfs backend.\n\n.PP\n\\fB--cgroup-manager\\fP=\\fIMANAGER\\fP\nSpecify what cgroup manager must be used.  Permitted values are \\fBcgroupfs\\fP,\n\\fBsystemd\\fP and \\fBdisabled\\fP\\&.\n\n.PP\n\\fB-?\\fP, \\fB--help\\fP\nPrint a help list.\n\n.PP\n\\fB--usage\\fP\nPrint a short usage message.\n\n.PP\n\\fB-V\\fP, \\fB--version\\fP\nPrint program version\n\n.SH CREATE OPTIONS\n.PP\ncrun [global options] create [options] CONTAINER\n\n.PP\n\\fB--bundle\\fP=\\fIPATH\\fP\nPath to the OCI bundle, by default it is the current directory.\n\n.PP\n\\fB--config\\fP=\\fIFILE\\fP\nOverride the configuration file to use.  The default value is \\fBconfig.json\\fP\\&.\n\n.PP\n\\fB--console-socket\\fP=\\fISOCKET\\fP\nPath to a UNIX socket that will receive the ptmx end of the tty for\nthe container.\n\n.PP\n\\fB--no-new-keyring\\fP\nKeep the same session key\n\n.PP\n\\fB--preserve-fds\\fP=\\fIN\\fP\nAdditional number of FDs to pass into the container.\n\n.PP\n\\fB--pid-file\\fP=\\fIPATH\\fP\nPath to the file that will contain the container process PID.\n\n.SH RUN OPTIONS\n.PP\ncrun [global options] run [options] CONTAINER\n\n.PP\n\\fB--bundle\\fP=\\fIBUNDLE\\fP\nPath to the OCI bundle, by default it is the current directory.\n\n.PP\n\\fB--config\\fP=\\fIFILE\\fP\nOverride the configuration file to use.  The default value is \\fBconfig.json\\fP\\&.\n\n.PP\n\\fB--console-socket\\fP=\\fISOCKET\\fP\nPath to a UNIX socket that will receive the ptmx end of the tty for\nthe container.\n\n.PP\n\\fB--no-new-keyring\\fP\nKeep the same session key.\n\n.PP\n\\fB--preserve-fds\\fP=\\fIN\\fP\nAdditional number of FDs to pass into the container.\n\n.PP\n\\fB--pid-file\\fP=\\fIPATH\\fP\nPath to the file that will contain the container process PID.\n\n.PP\n\\fB--detach\\fP\nDetach the container process from the current session.\n\n.SH DELETE OPTIONS\n.PP\ncrun [global options] delete [options] CONTAINER\n\n.PP\n\\fB--force\\fP\nDelete the container even if it is still running.\n\n.PP\n\\fB--regex\\fP=\\fIREGEX\\fP\nDelete all the containers that satisfy the specified regex.\n\n.SH EXEC OPTIONS\n.PP\ncrun [global options] exec [options] CONTAINER CMD\n\n.PP\n\\fB--apparmor\\fP=\\fIPROFILE\\fP\nSet the apparmor profile for the process.\n\n.PP\n\\fB--console-socket\\fP=\\fISOCKET\\fP\nPath to a UNIX socket that will receive the ptmx end of the tty for\nthe container.\n\n.PP\n\\fB--cwd\\fP=\\fIPATH\\fP\nSet the working directory for the process to PATH.\n\n.PP\n\\fB--cap\\fP=\\fICAP\\fP\nSpecify an additional capability to add to the process.\n\n.PP\n\\fB--detach\\fP\nDetach the container process from the current session.\n\n.PP\n\\fB--cgroup\\fP=\\fIPATH\\fP\nSpecify a sub-cgroup path inside the container cgroup.  The path must\nalready exist in the container cgroup.\n\n.PP\n\\fB--env\\fP=\\fIENV\\fP\nSpecify an environment variable.\n\n.PP\n\\fB--no-new-privs\\fP\nSet the no new privileges value for the process.\n\n.PP\n\\fB--preserve-fds\\fP=\\fIN\\fP\nAdditional number of FDs to pass into the container.\n\n.PP\n\\fB--process\\fP=\\fIFILE\\fP\nPath to a file containing the process JSON configuration.\n\n.PP\n\\fB--process-label\\fP=\\fIVALUE\\fP\nSet the asm process label for the process commonly used with selinux.\n\n.PP\n\\fB--pid-file\\fP=\\fIPATH\\fP\nPath to the file that will contain the new process PID.\n\n.PP\n\\fB-t\\fP \\fB--tty\\fP\nAllocate a pseudo TTY.\n\n.PP\n**-u \\fIUSERSPEC\\fP \\fB--user\\fP=\\fIUSERSPEC\\fP\nSpecify the user in the form UID[:GID].\n\n.SH LIST OPTIONS\n.PP\ncrun [global options] list [options]\n\n.PP\n\\fB-q\\fP \\fB--quiet\\fP\nShow only the container ID.\n\n.SH KILL OPTIONS\n.PP\ncrun [global options] kill [options] CONTAINER SIGNAL\n\n.PP\n\\fB--all\\fP\nKill all the processes in the container.\n\n.PP\n\\fB--regex\\fP=\\fIREGEX\\fP\nKill all the containers that satisfy the specified regex.\n\n.SH PS OPTIONS\n.PP\ncrun [global options] ps [options]\n\n.PP\n\\fB--format\\fP=\\fIFORMAT\\fP\nSpecify the output format.  It must be either \\fBtable\\fR or \\fBjson\\fR\\&.\nBy default \\fBtable\\fR is used.\n\n.SH SPEC OPTIONS\n.PP\ncrun [global options] spec [options]\n\n.PP\n\\fB-b\\fP \\fIDIR\\fP \\fB--bundle\\fP=\\fIDIR\\fP\nPath to the root of the bundle dir (default \".\").\n\n.PP\n\\fB--rootless\\fP\nGenerate a config.json file that is usable by an unprivileged user.\n\n.SH UPDATE OPTIONS\n.PP\ncrun [global options] update [options] CONTAINER\n\n.PP\n\\fB--blkio-weight\\fP=\\fIVALUE\\fP\nSpecifies per cgroup weight.\n\n.PP\n\\fB--cpu-period\\fP=\\fIVALUE\\fP\nCPU CFS period to be used for hardcapping.\n\n.PP\n\\fB--cpu-quota\\fP=\\fIVALUE\\fP\nCPU CFS hardcap limit.\n\n.PP\n\\fB--cpu-rt-period\\fP=\\fIVALUE\\fP\nCPU realtime period to be used for hardcapping.\n\n.PP\n\\fB--cpu-rt-runtime\\fP=\\fIVALUE\\fP\nCPU realtime hardcap limit.\n\n.PP\n\\fB--cpu-share\\fP=\\fIVALUE\\fP\nCPU shares.\n\n.PP\n\\fB--cpuset-cpus\\fP=\\fIVALUE\\fP\nCPU(s) to use.\n\n.PP\n\\fB--cpuset-mems\\fP=\\fIVALUE\\fP\nMemory node(s) to use.\n\n.PP\n\\fB--kernel-memory\\fP=\\fIVALUE\\fP\nKernel memory limit.\n\n.PP\n\\fB--kernel-memory-tcp\\fP=\\fIVALUE\\fP\nKernel memory limit for TCP buffer.\n\n.PP\n\\fB--memory\\fP=\\fIVALUE\\fP\nMemory limit.\n\n.PP\n\\fB--memory-reservation\\fP=\\fIVALUE\\fP\nMemory reservation or soft_limit.\n\n.PP\n\\fB--memory-swap\\fP=\\fIVALUE\\fP\nTotal memory usage.\n\n.PP\n\\fB--pids-limit\\fP=\\fIVALUE\\fP\nMaximum number of pids allowed in the container.\n\n.PP\n\\fB-r\\fP, \\fB--resources\\fP=\\fIFILE\\fP\nPath to the file containing the resources to update.\n\n.SH CHECKPOINT OPTIONS\n.PP\ncrun [global options] checkpoint [options] CONTAINER\n\n.PP\n\\fB--image-path\\fP=\\fIDIR\\fP\nPath for saving CRIU image files\n\n.PP\n\\fB--work-path\\fP=\\fIDIR\\fP\nPath for saving work files and logs\n\n.PP\n\\fB--leave-running\\fP\nLeave the process running after checkpointing\n\n.PP\n\\fB--tcp-established\\fP\nAllow open TCP connections\n\n.PP\n\\fB--ext-unix-sk\\fP\nAllow external UNIX sockets\n\n.PP\n\\fB--shell-job\\fP\nAllow shell jobs\n\n.PP\n\\fB--pre-dump\\fP\nOnly checkpoint the container's memory without stopping the container.\nIt is not possible to restore a container from a pre-dump. A pre-dump\nalways needs a final checkpoint (without \\fB--pre-dump\\fP). It is possible\nto make as many pre-dumps as necessary. For a second pre-dump or for\na final checkpoint it is necessary to use \\fB--parent-path\\fP to point\ncrun (and thus CRIU) to the pre-dump.\n\n.PP\n\\fB--parent-path\\fP=\\fIDIR\\fP\nDoing multiple pre-dumps or the final checkpoint after one or multiple\npre-dumps requires that crun (and thus CRIU) knows the location of\nthe pre-dump. It is important to use a relative path from the actual\ncheckpoint directory specified via \\fB--image-path\\fP\\&. It will fail\nif an absolute path is used.\n\n.PP\n\\fB--manage-cgroups-mode\\fP=\\fIMODE\\fP\nSpecify which CRIU manage cgroup mode should be used. Permitted values are\n\\fBsoft\\fP, \\fBignore\\fP, \\fBfull\\fP or \\fBstrict\\fP\\&. Default is \\fBsoft\\fP\\&.\n\n.SH RESTORE OPTIONS\n.PP\ncrun [global options] restore [options] CONTAINER\n\n.PP\n\\fB-b DIR\\fP \\fB--bundle\\fP=\\fIDIR\\fP\nContainer bundle directory (default \".\")\n\n.PP\n\\fB--image-path\\fP=\\fIDIR\\fP\nPath for saving CRIU image files\n\n.PP\n\\fB--work-path\\fP=\\fIDIR\\fP\nPath for saving work files and logs\n\n.PP\n\\fB--tcp-established\\fP\nAllow open TCP connections\n\n.PP\n\\fB--ext-unix\\fP\nAllow external UNIX sockets\n\n.PP\n\\fB--shell-job\\fP\nAllow shell jobs\n\n.PP\n\\fB--detach\\fP\nDetach from the container's process\n\n.PP\n\\fB--pid-file\\fP=\\fIFILE\\fP\nWhere to write the PID of the container\n\n.PP\n\\fB--manage-cgroups-mode\\fP=\\fIMODE\\fP\nSpecify which CRIU manage cgroup mode should be used. Permitted values are\n\\fBsoft\\fP, \\fBignore\\fP, \\fBfull\\fP or \\fBstrict\\fP\\&. Default is \\fBsoft\\fP\\&.\n\n.PP\n\\fB--lsm-profile\\fP=\\fITYPE\\fP:\\fINAME\\fP\nSpecify an LSM profile to be used during restore.\n\\fITYPE\\fP can be either \\fBapparmor\\fP or \\fBselinux\\fP\\&.\n\n.PP\n\\fB--lsm-mount-context\\fP=\\fIVALUE\\fP\nSpecify a new LSM mount context to be used during restore.\nThis option replaces an existing mount context information\nwith the specified value. This is useful when restoring\na container into an existing Pod and selinux labels\nneed to be changed during restore.\n\n\n.SH Extensions to OCI\n.SH \\fBrun.oci.mount_context_type=context\\fR\n.PP\nSet the mount context type on volumes mounted with SELinux labels.\n\n.PP\nValid context types are:\n  context (default)\n  fscontext\n  defcontext\n  rootcontext\n\n.PP\nMore information on how the context mount flags works see the \\fBmount(8)\\fR man page.\n\n.SH \\fBrun.oci.seccomp.receiver=PATH\\fR\n.PP\nIf the annotation \\fBrun.oci.seccomp.receiver=PATH\\fR is specified, the\nseccomp listener is sent to the UNIX socket listening on the specified\npath.  It can also set with the \\fBRUN_OCI_SECCOMP_RECEIVER\\fR environment variable.\nIt is an experimental feature, and the annotation will be removed once\nit is supported in the OCI runtime specs.  It must be an absolute path.\n\n.SH \\fBrun.oci.seccomp.plugins=PATH\\fR\n.PP\nIf the annotation \\fBrun.oci.seccomp.plugins=PLUGIN1[:PLUGIN2]...\\fR is specified, the\nseccomp listener fd is handled through the specified plugins.  The\nplugin must either be an absolute path or a file name that is looked\nup by \\fBdlopen(3)\\fR\\&.  More information on how the lookup is performed\nare available on the \\fBld.so(8)\\fR man page.\n\n.SH \\fBrun.oci.seccomp_fail_unknown_syscall=1\\fR\n.PP\nIf the annotation \\fBrun.oci.seccomp_fail_unknown_syscall\\fR is present, then crun\nwill fail when an unknown syscall is encountered in the seccomp configuration.\n\n.SH \\fBrun.oci.seccomp_bpf_data=PATH\\fR\n.PP\nIf the annotation \\fBrun.oci.seccomp_bpf_data\\fR is present, then crun\nignores the seccomp section in the OCI configuration file and use the specified data\nas the raw data to the \\fBseccomp(SECCOMP_SET_MODE_FILTER)\\fR syscall.\nThe data must be encoded in base64.\n\n.PP\nIt is an experimental feature, and the annotation will be removed once\nit is supported in the OCI runtime specs.\n\n.SH \\fBrun.oci.keep_original_groups=1\\fR\n.PP\nIf the annotation \\fBrun.oci.keep_original_groups\\fR is present, then crun\nwill skip the \\fBsetgroups\\fR syscall that is used to either set the\nadditional groups specified in the OCI configuration, or to reset the\nlist of additional groups if none is specified.\n\n.SH \\fBrun.oci.pidfd_receiver=PATH\\fR\n.PP\nIt is an experimental feature and will be removed once the feature is in the\nOCI runtime specs.\n\n.PP\nIf present, specify the path to the UNIX socket that will receive the\npidfd for the container process.\n\n.SH \\fBrun.oci.systemd.force_cgroup_v1=/PATH\\fR\n.PP\nIf the annotation \\fBrun.oci.systemd.force_cgroup_v1=/PATH\\fR is present, then crun\nwill override the specified mount point \\fB/PATH\\fR with a cgroup v1 mount\nmade of a single hierarchy \\fBnone,name=systemd\\fR\\&.\nIt is useful to run on a cgroup v2 system containers using older\nversions of systemd that lack support for cgroup v2.\n\n.PP\n\\fBNote\\fP: Your container host has to have the cgroup v1 mount already present, otherwise\nthis will not work. If you want to run the container rootless, the user it runs under\nhas to have permissions to this mountpoint.\n\n.PP\nFor example, as root:\n\n.EX\nmkdir /sys/fs/cgroup/systemd\nmount cgroup -t cgroup /sys/fs/cgroup/systemd -o none,name=systemd,xattr\nchown -R the_user.the_user /sys/fs/cgroup/systemd\n\n.EE\n\n.SH \\fBrun.oci.systemd.subgroup=SUBGROUP\\fR\n.PP\nOverride the name for the systemd sub cgroup created under the systemd\nscope, so the final cgroup will be like:\n\n.EX\n/sys/fs/cgroup/$PATH/$SUBGROUP\n\n.EE\n\n.PP\nWhen it is set to the empty string, a sub cgroup is not created.\n\n.PP\nIf not specified, it defaults to \\fBcontainer\\fR on cgroup v2, and to \\fB\"\"\\fR\non cgroup v1.\n\n.PP\ne.g.\n\n.EX\n/sys/fs/cgroup//system.slice/foo-352700.scope/container\n\n.EE\n\n.SH \\fBrun.oci.delegate-cgroup=DELEGATED-CGROUP\\fR\n.PP\nIf the \\fBrun.oci.systemd.subgroup\\fR annotation is specified, yet another\nsub-cgroup is created and the container process is moved here.\n\n.PP\nIf a cgroup namespace is used, the cgroup namespace is created before\nmoving the container to the delegated cgroup.\n\n.EX\n/sys/fs/cgroup/$PATH/$SUBGROUP/$DELEGATED-CGROUP\n\n.EE\n\n.PP\nThe runtime doesn't apply any limit to the \\fB$DELEGATED-CGROUP\\fR\nsub-cgroup, the runtime uses only \\fB$PATH/$SUBGROUP\\fR\\&.\n\n.PP\nThe container payload fully manages \\fB$DELEGATE-CGROUP\\fR, the limits\napplied to \\fB$PATH/$SUBGROUP\\fR still applies to \\fB$DELEGATE-CGROUP\\fR\\&.\n\n.PP\nSince cgroup delegation is not safe on cgroup v1, this option is\nsupported only on cgroup v2.\n\n.SH \\fBrun.oci.hooks.stdout=FILE\\fR\n.PP\nIf the annotation \\fBrun.oci.hooks.stdout\\fR is present, then crun\nwill open the specified file and use it as the stdout for the hook\nprocesses.  The file is opened in append mode and it is created if it\ndoesn't already exist.\n\n.SH \\fBrun.oci.hooks.stderr=FILE\\fR\n.PP\nIf the annotation \\fBrun.oci.hooks.stderr\\fR is present, then crun\nwill open the specified file and use it as the stderr for the hook\nprocesses.  The file is opened in append mode and it is created if it\ndoesn't already exist.\n\n.SH \\fBrun.oci.handler=HANDLER\\fR\n.PP\nIt is an experimental feature.\n\n.PP\nIf specified, run the specified handler for execing the container.\nThe only supported values are \\fBkrun\\fR and \\fBwasm\\fR\\&.\n\n.RS\n.IP \\(bu 2\n\\fBkrun\\fR: When \\fBkrun\\fR is specified, the \\fBlibkrun.so\\fR shared object is loaded\nand it is used to launch the container using libkrun.\n.IP \\(bu 2\n\\fBwasm\\fR: If specified, run the wasm handler for container. Allows running wasm\nworkload natively. Accepts a \\fB\\&.wasm\\fR binary as input and if \\fB\\&.wat\\fR is\nprovided it will be automatically compiled into a wasm module. Stdout of\nwasm module is relayed back via crun.\n\n.RE\n\n.SH tmpcopyup mount options\n.PP\nIf the \\fBtmpcopyup\\fR option is specified for a tmpfs, then the path that\nis shadowed by the tmpfs mount is recursively copied up to the tmpfs\nitself.\n\n.SH copy-symlink mount options\n.PP\nIf the \\fBcopy-symlink\\fR option is specified, if the source of a bind\nmount is a symlink, the symlink is recreated at the specified\ndestination instead of attempting a mount that would resolve the\nsymlink itself.  If the destination already exists and it is not a\nsymlink with the expected content, crun will return an error.\n\n.SH r$FLAG mount options\n.PP\nIf a \\fBr$FLAG\\fR mount option is specified then the flag \\fB$FLAG\\fR is set\nrecursively for each children mount.\n\n.PP\nThese flags are supported:\n\n.RS\n.IP \\(bu 2\n\"rro\"\n.IP \\(bu 2\n\"rrw\"\n.IP \\(bu 2\n\"rsuid\"\n.IP \\(bu 2\n\"rnosuid\"\n.IP \\(bu 2\n\"rdev\"\n.IP \\(bu 2\n\"rnodev\"\n.IP \\(bu 2\n\"rexec\"\n.IP \\(bu 2\n\"rnoexec\"\n.IP \\(bu 2\n\"rsync\"\n.IP \\(bu 2\n\"rasync\"\n.IP \\(bu 2\n\"rdirsync\"\n.IP \\(bu 2\n\"rmand\"\n.IP \\(bu 2\n\"rnomand\"\n.IP \\(bu 2\n\"ratime\"\n.IP \\(bu 2\n\"rnoatime\"\n.IP \\(bu 2\n\"rdiratime\"\n.IP \\(bu 2\n\"rnodiratime\"\n.IP \\(bu 2\n\"rrelatime\"\n.IP \\(bu 2\n\"rnorelatime\"\n.IP \\(bu 2\n\"rstrictatime\"\n.IP \\(bu 2\n\"rnostrictatime\"\n\n.RE\n\n.SH idmap mount options\n.PP\nIf the \\fBidmap\\fR option is specified then the mount is ID mapped using\nthe container target user namespace.  This is an experimental feature\nand can change at any time without notice.\n\n.PP\nThe \\fBidmap\\fR option supports a custom mapping that can be different\nthan the user namespace used by the container.\n\n.PP\nThe mapping can be specified after the \\fBidmap\\fR option like:\n\\fBidmap=uids=0-1-10#10-11-10;gids=0-100-10\\fR\\&.\n\n.PP\nFor each triplet, the first value is the start of the backing\nfile system IDs that are mapped to the second value on the host.  The\nlength of this mapping is given in the third value.\n\n.PP\nMultiple ranges are separated with \\fB#\\fR\\&.\n\n.PP\nThese values are written to the \\fB/proc/$PID/uid_map\\fR and\n\\fB/proc/$PID/gid_map\\fR files to create the user namespace for the\nidmapped mount.\n\n.PP\nThe only two options that are currently supported after \\fBidmap\\fR are\n\\fBuids\\fR and \\fBgids\\fR\\&.\n\n.PP\nWhen a custom mapping is specified, a new user namespace is created\nfor the idmapped mount.\n\n.PP\nIf no option is specified, then the container user namespace is used.\n\n.PP\nIf the specified mapping is prepended with a '@' then the mapping is\nconsidered relative to the container user namespace.  The host ID for\nthe mapping is changed to account for the relative position of the\ncontainer user in the container user namespace.\n\n.PP\nFor example, the mapping: \\fBuids=@1-3-10\\fR, given a configuration like\n\n.EX\n\"uidMappings\": [\n      {\n        \"containerID\": 0,\n        \"hostID\": 0,\n        \"size\": 1\n      },\n      {\n        \"containerID\": 1,\n        \"hostID\": 2,\n        \"size\": 1000\n      }\n    ]\n\n.EE\n\n.PP\nwill be converted to the absolute value \\fBuids=1-4-10\\fR, where 4 is\ncalculated by adding 3 (container ID in the \\fBuids=\\fR mapping) and 1\n(\\fBhostID - containerID\\fR for the user namespace mapping where\n\\fBcontainerID = 1\\fR is found).\n\n.PP\nThe current implementation doesn't take into account multiple\nuser namespace ranges, so it is the caller's responsibility to split a\nmapping if it overlaps multiple ranges in the user namespace.  In such\na case, there won't be any error reported.\n\n.SH Automatically create user namespace\n.PP\nWhen running as user different than root, an user namespace is\nautomatically created even if it is not specified in the config file.\nThe current user is mapped to the ID 0 in the container, and any\nadditional id specified in the files \\fB/etc/subuid\\fR and \\fB/etc/subgid\\fR\nis automatically added starting with ID 1.\n\n\n.SH CGROUP v1\n.PP\nSupport for cgroup v1 is deprecated and will be removed in a future release.\n\n\n.SH CGROUP v2\n.PP\n\\fBNote\\fP: cgroup v2 does not yet support control of realtime processes and\nthe cpu controller can only be enabled when all RT processes are in the root\ncgroup. This will make crun fail while running alongside RT processes.\n\n.PP\nIf the cgroup configuration found is for cgroup v1, crun attempts a\nconversion when running on a cgroup v2 system.\n\n.PP\nThese are the OCI resources currently supported with cgroup v2 and how\nthey are converted when needed from the cgroup v1 configuration.\n\n.SH Memory controller\n.TS\nallbox;\nl l l l \nl l l l .\n\\fBOCI (x)\\fP\t\\fBcgroup 2 value (y)\\fP\t\\fBconversion\\fP\t\\fBcomment\\fP\nlimit\tmemory.max\ty = x\t\nswap\tmemory.swap.max\ty = x - memory_limit\tT{\nthe swap limit on cgroup v1 includes the memory usage too\nT}\nreservation\tmemory.low\ty = x\t\n.TE\n\n.SH PIDs controller\n.TS\nallbox;\nl l l l \nl l l l .\n\\fBOCI (x)\\fP\t\\fBcgroup 2 value (y)\\fP\t\\fBconversion\\fP\t\\fBcomment\\fP\nlimit\tpids.max\ty = x\t\n.TE\n\n.SH CPU controller\n.TS\nallbox;\nl l l l \nl l l l .\n\\fBOCI (x)\\fP\t\\fBcgroup 2 value (y)\\fP\t\\fBconversion\\fP\t\\fBcomment\\fP\nshares\tcpu.weight\tT{\ny = (1 + ((x - 2) * 9999) / 262142)\nT}\n\tT{\nconvert from [2-262144] to [1-10000]\nT}\nperiod\tcpu.max\ty = x\tT{\nperiod and quota are written together\nT}\nquota\tcpu.max\ty = x\tT{\nperiod and quota are written together\nT}\n.TE\n\n.SH blkio controller\n.TS\nallbox;\nl l l l \nl l l l .\n\\fBOCI (x)\\fP\t\\fBcgroup 2 value (y)\\fP\t\\fBconversion\\fP\t\\fBcomment\\fP\nweight\tio.bfq.weight\ty = x\t\nweight_device\tio.bfq.weight\ty = x\t\nweight\tio.weight (fallback)\ty = 1 + (x-10)*9999/990\tT{\nconvert linearly from [10-1000] to [1-10000]\nT}\nweight_device\tio.weight (fallback)\ty = 1 + (x-10)*9999/990\tT{\nconvert linearly from [10-1000] to [1-10000]\nT}\nrbps\tio.max\ty=x\t\nwbps\tio.max\ty=x\t\nriops\tio.max\ty=x\t\nwiops\tio.max\ty=x\t\n.TE\n\n.SH cpuset controller\n.TS\nallbox;\nl l l l \nl l l l .\n\\fBOCI (x)\\fP\t\\fBcgroup 2 value (y)\\fP\t\\fBconversion\\fP\t\\fBcomment\\fP\ncpus\tcpuset.cpus\ty = x\t\nmems\tcpuset.mems\ty = x\t\n.TE\n\n.SH hugetlb controller\n.TS\nallbox;\nl l l l \nl l l l .\n\\fBOCI (x)\\fP\t\\fBcgroup 2 value (y)\\fP\t\\fBconversion\\fP\t\\fBcomment\\fP\n\\&.limit_in_bytes\thugetlb.\\&.max\ty = x\t\n.TE\n"
        },
        {
          "name": "crun.1.md",
          "type": "blob",
          "size": 19.8408203125,
          "content": "crun 1 \"User Commands\"\n==================================================\n\n# NAME\n\ncrun - a fast and lightweight OCI runtime\n\n# SYNOPSIS\n\ncrun [global options] command [command options] [arguments...]\n\n# DESCRIPTION\n\ncrun is a command line program for running Linux containers that\nfollow the Open Container Initiative (OCI) format.\n\n# COMMANDS\n\n**create**\nCreate a container.  The runtime detaches from the container process\nonce the container environment is created.  It is necessary to\nsuccessively use `start` for starting the container.\n\n**delete**\nRemove definition for a container.\n\n**exec**\nExec a command in a running container.\n\n**list**\nList known containers.\n\n**kill**\nSend the specified signal to the container init process.  If no signal\nis specified, SIGTERM is used.\n\n**ps**\nShow the processes running in a container.\n\n**run**\nCreate and immediately start a container.\n\n**spec**\nGenerate a configuration file.\n\n**start**\nStart a container that was previously created.  A container cannot be\nstarted multiple times.\n\n**state**\nOutput the state of a container.\n\n**pause**\nPause all the processes in the container.\n\n**resume**\nResume the processes in the container.\n\n**update**\nUpdate container resource constraints.\n\n**checkpoint**\nCheckpoint a running container using CRIU.\n\n**restore**\nRestore a container from a checkpoint.\n# STATE\n\nBy default, when running as root user, crun saves its state under the\n**/run/crun** directory.  As unprivileged user, instead the\n*XDG_RUNTIME_DIR* environment variable is honored, and the directory\n**$XDG_RUNTIME_DIR/crun** is used.  The global option **--root**\noverrides this setting.\n\n# GLOBAL OPTIONS\n\n**--debug**\nProduce verbose output.\n\n**--log**=_LOG-DESTINATION_\nDefine the destination for the error and warning messages generated by\ncrun.\nIf the error happens late in the container init process, when crun\nalready stopped watching it, then it will be printed to the container\nstderr.\n\nIt is specified in the form *BACKEND:SPECIFIER*.\n\nThese following backends are supported:\n\n- file:PATH\n- journald:IDENTIFIER\n- syslog:IDENTIFIER\n\nIf no backend is specified, then *file:* is used by default.\n\n**--log-format**=_FORMAT_\nDefine the format of the log messages.  It can either be **text**, or\n**json**.  The default is **text**.\n\n**--log-level**=_LEVEL_\nDefine the log level.  It can either be **debug**, **warning** or **error**.\nThe default is **error**.\n\n**--no-pivot**\nUse `chroot(2)` instead of `pivot_root(2)` when creating the container.\nThis option is not safe, and should be avoided.\n\n**--root**=_DIR_\nDefines where to store the state for crun containers.\n\n**--systemd-cgroup**\nUse systemd for configuring cgroups.  If not specified, the cgroup is\ncreated directly using the cgroupfs backend.\n\n**--cgroup-manager**=_MANAGER_\nSpecify what cgroup manager must be used.  Permitted values are **cgroupfs**,\n**systemd** and **disabled**.\n\n**-?**, **--help**\nPrint a help list.\n\n**--usage**\nPrint a short usage message.\n\n**-V**, **--version**\nPrint program version\n\n## CREATE OPTIONS\n\ncrun [global options] create [options] CONTAINER\n\n**--bundle**=_PATH_\nPath to the OCI bundle, by default it is the current directory.\n\n**--config**=_FILE_\nOverride the configuration file to use.  The default value is **config.json**.\n\n**--console-socket**=_SOCKET_\nPath to a UNIX socket that will receive the ptmx end of the tty for\nthe container.\n\n**--no-new-keyring**\nKeep the same session key\n\n**--preserve-fds**=_N_\nAdditional number of FDs to pass into the container.\n\n**--pid-file**=_PATH_\nPath to the file that will contain the container process PID.\n\n## RUN OPTIONS\n\ncrun [global options] run [options] CONTAINER\n\n**--bundle**=_BUNDLE_\nPath to the OCI bundle, by default it is the current directory.\n\n**--config**=_FILE_\nOverride the configuration file to use.  The default value is **config.json**.\n\n**--console-socket**=_SOCKET_\nPath to a UNIX socket that will receive the ptmx end of the tty for\nthe container.\n\n**--no-new-keyring**\nKeep the same session key.\n\n**--preserve-fds**=_N_\nAdditional number of FDs to pass into the container.\n\n**--pid-file**=_PATH_\nPath to the file that will contain the container process PID.\n\n**--detach**\nDetach the container process from the current session.\n\n## DELETE OPTIONS\n\ncrun [global options] delete [options] CONTAINER\n\n**--force**\nDelete the container even if it is still running.\n\n**--regex**=_REGEX_\nDelete all the containers that satisfy the specified regex.\n\n## EXEC OPTIONS\n\ncrun [global options] exec [options] CONTAINER CMD\n\n**--apparmor**=_PROFILE_\nSet the apparmor profile for the process.\n\n**--console-socket**=_SOCKET_\nPath to a UNIX socket that will receive the ptmx end of the tty for\nthe container.\n\n**--cwd**=_PATH_\nSet the working directory for the process to PATH.\n\n**--cap**=_CAP_\nSpecify an additional capability to add to the process.\n\n**--detach**\nDetach the container process from the current session.\n\n**--cgroup**=_PATH_\nSpecify a sub-cgroup path inside the container cgroup.  The path must\nalready exist in the container cgroup.\n\n**--env**=_ENV_\nSpecify an environment variable.\n\n**--no-new-privs**\nSet the no new privileges value for the process.\n\n**--preserve-fds**=_N_\nAdditional number of FDs to pass into the container.\n\n**--process**=_FILE_\nPath to a file containing the process JSON configuration.\n\n**--process-label**=_VALUE_\nSet the asm process label for the process commonly used with selinux.\n\n**--pid-file**=_PATH_\nPath to the file that will contain the new process PID.\n\n**-t** **--tty**\nAllocate a pseudo TTY.\n\n**-u _USERSPEC_ **--user**=_USERSPEC_\nSpecify the user in the form UID[:GID].\n\n## LIST OPTIONS\n\ncrun [global options] list [options]\n\n**-q** **--quiet**\nShow only the container ID.\n\n## KILL OPTIONS\n\ncrun [global options] kill [options] CONTAINER SIGNAL\n\n**--all**\nKill all the processes in the container.\n\n**--regex**=_REGEX_\nKill all the containers that satisfy the specified regex.\n\n## PS OPTIONS\n\ncrun [global options] ps [options]\n\n**--format**=_FORMAT_\nSpecify the output format.  It must be either `table` or `json`.\nBy default `table` is used.\n\n## SPEC OPTIONS\n\ncrun [global options] spec [options]\n\n**-b** _DIR_ **--bundle**=_DIR_\nPath to the root of the bundle dir (default \".\").\n\n**--rootless**\nGenerate a config.json file that is usable by an unprivileged user.\n\n## UPDATE OPTIONS\n\ncrun [global options] update [options] CONTAINER\n\n**--blkio-weight**=_VALUE_\nSpecifies per cgroup weight.\n\n**--cpu-period**=_VALUE_\nCPU CFS period to be used for hardcapping.\n\n**--cpu-quota**=_VALUE_\nCPU CFS hardcap limit.\n\n**--cpu-rt-period**=_VALUE_\nCPU realtime period to be used for hardcapping.\n\n**--cpu-rt-runtime**=_VALUE_\nCPU realtime hardcap limit.\n\n**--cpu-share**=_VALUE_\nCPU shares.\n\n**--cpuset-cpus**=_VALUE_\nCPU(s) to use.\n\n**--cpuset-mems**=_VALUE_\nMemory node(s) to use.\n\n**--kernel-memory**=_VALUE_\nKernel memory limit.\n\n**--kernel-memory-tcp**=_VALUE_\nKernel memory limit for TCP buffer.\n\n**--memory**=_VALUE_\nMemory limit.\n\n**--memory-reservation**=_VALUE_\nMemory reservation or soft_limit.\n\n**--memory-swap**=_VALUE_\nTotal memory usage.\n\n**--pids-limit**=_VALUE_\nMaximum number of pids allowed in the container.\n\n**-r**, **--resources**=_FILE_\nPath to the file containing the resources to update.\n\n## CHECKPOINT OPTIONS\n\ncrun [global options] checkpoint [options] CONTAINER\n\n**--image-path**=_DIR_\nPath for saving CRIU image files\n\n**--work-path**=_DIR_\nPath for saving work files and logs\n\n**--leave-running**\nLeave the process running after checkpointing\n\n**--tcp-established**\nAllow open TCP connections\n\n**--ext-unix-sk**\nAllow external UNIX sockets\n\n**--shell-job**\nAllow shell jobs\n\n**--pre-dump**\nOnly checkpoint the container's memory without stopping the container.\nIt is not possible to restore a container from a pre-dump. A pre-dump\nalways needs a final checkpoint (without **--pre-dump**). It is possible\nto make as many pre-dumps as necessary. For a second pre-dump or for\na final checkpoint it is necessary to use **--parent-path** to point\ncrun (and thus CRIU) to the pre-dump.\n\n**--parent-path**=_DIR_\nDoing multiple pre-dumps or the final checkpoint after one or multiple\npre-dumps requires that crun (and thus CRIU) knows the location of\nthe pre-dump. It is important to use a relative path from the actual\ncheckpoint directory specified via **--image-path**. It will fail\nif an absolute path is used.\n\n**--manage-cgroups-mode**=_MODE_\nSpecify which CRIU manage cgroup mode should be used. Permitted values are\n**soft**, **ignore**, **full** or **strict**. Default is **soft**.\n\n## RESTORE OPTIONS\n\ncrun [global options] restore [options] CONTAINER\n\n**-b DIR** **--bundle**=_DIR_\nContainer bundle directory (default \".\")\n\n**--image-path**=_DIR_\nPath for saving CRIU image files\n\n**--work-path**=_DIR_\nPath for saving work files and logs\n\n**--tcp-established**\nAllow open TCP connections\n\n**--ext-unix**\nAllow external UNIX sockets\n\n**--shell-job**\nAllow shell jobs\n\n**--detach**\nDetach from the container's process\n\n**--pid-file**=_FILE_\nWhere to write the PID of the container\n\n**--manage-cgroups-mode**=_MODE_\nSpecify which CRIU manage cgroup mode should be used. Permitted values are\n**soft**, **ignore**, **full** or **strict**. Default is **soft**.\n\n**--lsm-profile**=_TYPE_:_NAME_\nSpecify an LSM profile to be used during restore.\n_TYPE_ can be either **apparmor** or **selinux**.\n\n**--lsm-mount-context**=_VALUE_\nSpecify a new LSM mount context to be used during restore.\nThis option replaces an existing mount context information\nwith the specified value. This is useful when restoring\na container into an existing Pod and selinux labels\nneed to be changed during restore.\n\n# Extensions to OCI\n\n## `run.oci.mount_context_type=context`\n\nSet the mount context type on volumes mounted with SELinux labels.\n\nValid context types are:\n  context (default)\n  fscontext\n  defcontext\n  rootcontext\n\nMore information on how the context mount flags works see the `mount(8)` man page.\n\n## `run.oci.seccomp.receiver=PATH`\n\nIf the annotation `run.oci.seccomp.receiver=PATH` is specified, the\nseccomp listener is sent to the UNIX socket listening on the specified\npath.  It can also set with the `RUN_OCI_SECCOMP_RECEIVER` environment variable.\nIt is an experimental feature, and the annotation will be removed once\nit is supported in the OCI runtime specs.  It must be an absolute path.\n\n## `run.oci.seccomp.plugins=PATH`\n\nIf the annotation `run.oci.seccomp.plugins=PLUGIN1[:PLUGIN2]...` is specified, the\nseccomp listener fd is handled through the specified plugins.  The\nplugin must either be an absolute path or a file name that is looked\nup by `dlopen(3)`.  More information on how the lookup is performed\nare available on the `ld.so(8)` man page.\n\n## `run.oci.seccomp_fail_unknown_syscall=1`\n\nIf the annotation `run.oci.seccomp_fail_unknown_syscall` is present, then crun\nwill fail when an unknown syscall is encountered in the seccomp configuration.\n\n## `run.oci.seccomp_bpf_data=PATH`\n\nIf the annotation `run.oci.seccomp_bpf_data` is present, then crun\nignores the seccomp section in the OCI configuration file and use the specified data\nas the raw data to the `seccomp(SECCOMP_SET_MODE_FILTER)` syscall.\nThe data must be encoded in base64.\n\nIt is an experimental feature, and the annotation will be removed once\nit is supported in the OCI runtime specs.\n\n## `run.oci.keep_original_groups=1`\n\nIf the annotation `run.oci.keep_original_groups` is present, then crun\nwill skip the `setgroups` syscall that is used to either set the\nadditional groups specified in the OCI configuration, or to reset the\nlist of additional groups if none is specified.\n\n## `run.oci.pidfd_receiver=PATH`\n\nIt is an experimental feature and will be removed once the feature is in the\nOCI runtime specs.\n\nIf present, specify the path to the UNIX socket that will receive the\npidfd for the container process.\n\n## `run.oci.systemd.force_cgroup_v1=/PATH`\n\nIf the annotation `run.oci.systemd.force_cgroup_v1=/PATH` is present, then crun\nwill override the specified mount point `/PATH` with a cgroup v1 mount\nmade of a single hierarchy `none,name=systemd`.\nIt is useful to run on a cgroup v2 system containers using older\nversions of systemd that lack support for cgroup v2.\n\n**Note**: Your container host has to have the cgroup v1 mount already present, otherwise\nthis will not work. If you want to run the container rootless, the user it runs under\nhas to have permissions to this mountpoint.\n\nFor example, as root:\n\n```\nmkdir /sys/fs/cgroup/systemd\nmount cgroup -t cgroup /sys/fs/cgroup/systemd -o none,name=systemd,xattr\nchown -R the_user.the_user /sys/fs/cgroup/systemd\n```\n\n## `run.oci.systemd.subgroup=SUBGROUP`\n\nOverride the name for the systemd sub cgroup created under the systemd\nscope, so the final cgroup will be like:\n\n```\n/sys/fs/cgroup/$PATH/$SUBGROUP\n```\n\nWhen it is set to the empty string, a sub cgroup is not created.\n\nIf not specified, it defaults to `container` on cgroup v2, and to `\"\"`\non cgroup v1.\n\ne.g.\n\n```\n/sys/fs/cgroup//system.slice/foo-352700.scope/container\n```\n\n## `run.oci.delegate-cgroup=DELEGATED-CGROUP`\n\nIf the `run.oci.systemd.subgroup` annotation is specified, yet another\nsub-cgroup is created and the container process is moved here.\n\nIf a cgroup namespace is used, the cgroup namespace is created before\nmoving the container to the delegated cgroup.\n\n```\n/sys/fs/cgroup/$PATH/$SUBGROUP/$DELEGATED-CGROUP\n```\n\nThe runtime doesn't apply any limit to the `$DELEGATED-CGROUP`\nsub-cgroup, the runtime uses only `$PATH/$SUBGROUP`.\n\nThe container payload fully manages `$DELEGATE-CGROUP`, the limits\napplied to `$PATH/$SUBGROUP` still applies to `$DELEGATE-CGROUP`.\n\nSince cgroup delegation is not safe on cgroup v1, this option is\nsupported only on cgroup v2.\n\n## `run.oci.hooks.stdout=FILE`\n\nIf the annotation `run.oci.hooks.stdout` is present, then crun\nwill open the specified file and use it as the stdout for the hook\nprocesses.  The file is opened in append mode and it is created if it\ndoesn't already exist.\n\n## `run.oci.hooks.stderr=FILE`\n\nIf the annotation `run.oci.hooks.stderr` is present, then crun\nwill open the specified file and use it as the stderr for the hook\nprocesses.  The file is opened in append mode and it is created if it\ndoesn't already exist.\n\n## `run.oci.handler=HANDLER`\n\nIt is an experimental feature.\n\nIf specified, run the specified handler for execing the container.\nThe only supported values are `krun` and `wasm`.\n\n- `krun`: When `krun` is specified, the `libkrun.so` shared object is loaded\nand it is used to launch the container using libkrun.\n\n- `wasm`: If specified, run the wasm handler for container. Allows running wasm\nworkload natively. Accepts a `.wasm` binary as input and if `.wat` is\nprovided it will be automatically compiled into a wasm module. Stdout of\nwasm module is relayed back via crun.\n\n## tmpcopyup mount options\n\nIf the `tmpcopyup` option is specified for a tmpfs, then the path that\nis shadowed by the tmpfs mount is recursively copied up to the tmpfs\nitself.\n\n## copy-symlink mount options\n\nIf the `copy-symlink` option is specified, if the source of a bind\nmount is a symlink, the symlink is recreated at the specified\ndestination instead of attempting a mount that would resolve the\nsymlink itself.  If the destination already exists and it is not a\nsymlink with the expected content, crun will return an error.\n\n## r$FLAG mount options\n\nIf a `r$FLAG` mount option is specified then the flag `$FLAG` is set\nrecursively for each children mount.\n\nThese flags are supported:\n\n- \"rro\"\n- \"rrw\"\n- \"rsuid\"\n- \"rnosuid\"\n- \"rdev\"\n- \"rnodev\"\n- \"rexec\"\n- \"rnoexec\"\n- \"rsync\"\n- \"rasync\"\n- \"rdirsync\"\n- \"rmand\"\n- \"rnomand\"\n- \"ratime\"\n- \"rnoatime\"\n- \"rdiratime\"\n- \"rnodiratime\"\n- \"rrelatime\"\n- \"rnorelatime\"\n- \"rstrictatime\"\n- \"rnostrictatime\"\n\n## idmap mount options\n\nIf the `idmap` option is specified then the mount is ID mapped using\nthe container target user namespace.  This is an experimental feature\nand can change at any time without notice.\n\nThe `idmap` option supports a custom mapping that can be different\nthan the user namespace used by the container.\n\nThe mapping can be specified after the `idmap` option like:\n`idmap=uids=0-1-10#10-11-10;gids=0-100-10`.\n\nFor each triplet, the first value is the start of the backing\nfile system IDs that are mapped to the second value on the host.  The\nlength of this mapping is given in the third value.\n\nMultiple ranges are separated with `#`.\n\nThese values are written to the `/proc/$PID/uid_map` and\n`/proc/$PID/gid_map` files to create the user namespace for the\nidmapped mount.\n\nThe only two options that are currently supported after `idmap` are\n`uids` and `gids`.\n\nWhen a custom mapping is specified, a new user namespace is created\nfor the idmapped mount.\n\nIf no option is specified, then the container user namespace is used.\n\nIf the specified mapping is prepended with a '@' then the mapping is\nconsidered relative to the container user namespace.  The host ID for\nthe mapping is changed to account for the relative position of the\ncontainer user in the container user namespace.\n\nFor example, the mapping: `uids=@1-3-10`, given a configuration like\n\n```\n\"uidMappings\": [\n      {\n        \"containerID\": 0,\n        \"hostID\": 0,\n        \"size\": 1\n      },\n      {\n        \"containerID\": 1,\n        \"hostID\": 2,\n        \"size\": 1000\n      }\n    ]\n```\n\nwill be converted to the absolute value `uids=1-4-10`, where 4 is\ncalculated by adding 3 (container ID in the `uids=` mapping) and 1\n(`hostID - containerID` for the user namespace mapping where\n`containerID = 1` is found).\n\nThe current implementation doesn't take into account multiple\nuser namespace ranges, so it is the caller's responsibility to split a\nmapping if it overlaps multiple ranges in the user namespace.  In such\na case, there won't be any error reported.\n\n## Automatically create user namespace\n\nWhen running as user different than root, an user namespace is\nautomatically created even if it is not specified in the config file.\nThe current user is mapped to the ID 0 in the container, and any\nadditional id specified in the files `/etc/subuid` and `/etc/subgid`\nis automatically added starting with ID 1.\n\n# CGROUP v1\n\nSupport for cgroup v1 is deprecated and will be removed in a future release.\n\n# CGROUP v2\n\n**Note**: cgroup v2 does not yet support control of realtime processes and\nthe cpu controller can only be enabled when all RT processes are in the root\ncgroup. This will make crun fail while running alongside RT processes.\n\nIf the cgroup configuration found is for cgroup v1, crun attempts a\nconversion when running on a cgroup v2 system.\n\nThese are the OCI resources currently supported with cgroup v2 and how\nthey are converted when needed from the cgroup v1 configuration.\n\n## Memory controller\n\n| OCI (x) | cgroup 2 value (y) | conversion  |   comment |\n|---|---|---|---|\n| limit | memory.max | y = x ||\n| swap | memory.swap.max | y = x - memory_limit | the swap limit on cgroup v1 includes the memory usage too |\n| reservation | memory.low | y = x ||\n\n## PIDs controller\n\n| OCI (x) | cgroup 2 value (y) | conversion  |   comment |\n|---|---|---|---|\n| limit | pids.max | y = x ||\n\n## CPU controller\n\n| OCI (x) | cgroup 2 value (y) | conversion  |  comment |\n|---|---|---|---|\n| shares | cpu.weight | y = (1 + ((x - 2) * 9999) / 262142) | convert from [2-262144] to [1-10000]|\n| period | cpu.max | y = x| period and quota are written together|\n| quota | cpu.max | y = x| period and quota are written together|\n\n## blkio controller\n\n| OCI (x) | cgroup 2 value (y) | conversion  |   comment |\n|---|---|---|---|\n| weight | io.bfq.weight | y = x ||\n| weight_device | io.bfq.weight | y = x ||\n| weight | io.weight (fallback) | y = 1 + (x-10)*9999/990 | convert linearly from [10-1000] to [1-10000] |\n| weight_device | io.weight (fallback) | y = 1 + (x-10)*9999/990 | convert linearly from [10-1000] to [1-10000] |\n| rbps | io.max | y=x ||\n| wbps | io.max | y=x ||\n| riops | io.max |y=x ||\n| wiops | io.max |y=x ||\n\n## cpuset controller\n\n| OCI (x) | cgroup 2 value (y) | conversion  |   comment |\n|---|---|---|---|\n| cpus | cpuset.cpus | y = x ||\n| mems | cpuset.mems | y = x ||\n\n## hugetlb controller\n\n| OCI (x) | cgroup 2 value (y) | conversion  |   comment |\n|---|---|---|---|\n| <PAGE_SIZE>.limit_in_bytes | hugetlb.<PAGE_SIZE>.max | y = x ||\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "krun.1",
          "type": "blob",
          "size": 1.04296875,
          "content": ".nh\n.TH crun 1 \"User Commands\"\n\n.SH NAME\n.PP\nkrun - crun based OCI runtime using libkrun to run containerized programs in\nisolated KVM environments\n\n\n.SH SYNOPSIS\n.PP\nkrun [global options] command [command options] [arguments...]\n\n\n.SH DESCRIPTION\n.PP\nkrun is a sub package of the crun command line program for running Linux\ncontainers that follow the Open Container Initiative (OCI) format. The krun\ncommand is a symbolic link to the crun executable, that tells crun to run in\nkrun mode.\n\n.PP\nkrun uses the dynamic libkrun library to run processes in an isolated\nenvironment using KVM Virtualization.\n\n.PP\nlibkrun integrates a VMM (Virtual Machine Monitor, the userspace side of a\nHypervisor) with the minimum amount of emulated devices required for its\npurpose, abstracting most of the complexity from Virtual Machine management.\n\n.PP\nBecause of the additional isolation, sharing content with processes and other\ncontainers outside of the krun VM is more difficult.\n\n\n.SH COMMANDS\n.PP\nSee crun.1 man page for the commands available to krun\n\n\n.SH SEE ALSO\n.PP\ncrun.1\n"
        },
        {
          "name": "krun.1.md",
          "type": "blob",
          "size": 1.04296875,
          "content": "crun 1 \"User Commands\"\n==================================================\n\n# NAME\n\nkrun - crun based OCI runtime using libkrun to run containerized programs in\nisolated KVM environments\n\n# SYNOPSIS\n\nkrun [global options] command [command options] [arguments...]\n\n# DESCRIPTION\n\nkrun is a sub package of the crun command line program for running Linux\ncontainers that follow the Open Container Initiative (OCI) format. The krun\ncommand is a symbolic link to the crun executable, that tells crun to run in\nkrun mode.\n\nkrun uses the dynamic libkrun library to run processes in an isolated\nenvironment using KVM Virtualization.\n\nlibkrun integrates a VMM (Virtual Machine Monitor, the userspace side of a\nHypervisor) with the minimum amount of emulated devices required for its\npurpose, abstracting most of the complexity from Virtual Machine management.\n\nBecause of the additional isolation, sharing content with processes and other\ncontainers outside of the krun VM is more difficult.\n# COMMANDS\n\nSee crun.1 man page for the commands available to krun\n\n# SEE ALSO\ncrun.1\n"
        },
        {
          "name": "libcrun.lds",
          "type": "blob",
          "size": 0.2509765625,
          "content": "{\n  global:\n        /* Not all the libcrun_ functions are exported, only those marked LIBCRUN_PUBLIC.  */\n        libcrun_*;\n        /* libocispec functions */\n        runtime_spec_*;\n        free_runtime_spec_*;\n        make_runtime_spec_*;\n  local: *;\n};\n"
        },
        {
          "name": "libocispec",
          "type": "commit",
          "content": null
        },
        {
          "name": "lua",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "maint.mk",
          "type": "blob",
          "size": 66.0341796875,
          "content": "# -*-Makefile-*-\n# This Makefile fragment tries to be general-purpose enough to be\n# used by many projects via the gnulib maintainer-makefile module.\n\n## Copyright (C) 2001-2022 Free Software Foundation, Inc.\n##\n## This program is free software: you can redistribute it and/or modify\n## it under the terms of the GNU General Public License as published by\n## the Free Software Foundation, either version 3 of the License, or\n## (at your option) any later version.\n##\n## This program is distributed in the hope that it will be useful,\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n## GNU General Public License for more details.\n##\n## You should have received a copy of the GNU General Public License\n## along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n# This is reported not to work with make-3.79.1\n# ME := $(word $(words $(MAKEFILE_LIST)),$(MAKEFILE_LIST))\nME := maint.mk\n\n# These variables ought to be defined through the configure.ac section\n# of the module description. But some packages import this file directly,\n# ignoring the module description.\nAWK ?= awk\nGREP ?= grep\nSED ?= sed\n\n# Helper variables.\n_empty =\n_sp = $(_empty) $(_empty)\n\n# _equal,S1,S2\n# ------------\n# If S1 == S2, return S1, otherwise the empty string.\n_equal = $(and $(findstring $(1),$(2)),$(findstring $(2),$(1)))\n\n# member-check,VARIABLE,VALID-VALUES\n# ----------------------------------\n# Check that $(VARIABLE) is in the space-separated list of VALID-VALUES, and\n# return it.  Die otherwise.\nmember-check =\t\t\t\t\t\t\t\t\\\n  $(strip\t\t\t\t\t\t\t\t\\\n    $(if $($(1)),\t\t\t\t\t\t\t\\\n      $(if $(findstring $(_sp),$($(1))),\t\t\t\t\\\n          $(error invalid $(1): '$($(1))', expected $(2)),\t\t\\\n          $(or $(findstring $(_sp)$($(1))$(_sp),$(_sp)$(2)$(_sp)),\t\\\n            $(error invalid $(1): '$($(1))', expected $(2)))),\t\t\\\n      $(error $(1) undefined)))\n\n# Do not save the original name or timestamp in the .tar.gz file.\n# Use --rsyncable if available.\ngzip_rsyncable := \\\n  $(shell gzip --help 2>/dev/null|$(GREP) rsyncable >/dev/null \\\n    && printf %s --rsyncable)\nGZIP_ENV = '--no-name --best $(gzip_rsyncable)'\n\nGIT = git\nVC = $(GIT)\n\nVC_LIST = $(srcdir)/$(_build-aux)/vc-list-files -C $(srcdir)\n\n# You can override this variable in cfg.mk if your gnulib submodule lives\n# in a different location.\ngnulib_dir ?= $(shell if test -f $(srcdir)/gnulib/gnulib-tool; then \\\n\t\t\techo $(srcdir)/gnulib; \\\n\t\telse \\\n\t\t\techo ${GNULIB_SRCDIR}; \\\n\t\tfi)\n\n# You can override this variable in cfg.mk to set your own regexp\n# matching files to ignore.\nVC_LIST_ALWAYS_EXCLUDE_REGEX ?= ^$$\n\n# This is to preprocess robustly the output of $(VC_LIST), so that even\n# when $(srcdir) is a pathological name like \"....\", the leading sed command\n# removes only the intended prefix.\n_dot_escaped_srcdir = $(subst .,\\.,$(srcdir))\n\n# Post-process $(VC_LIST) output, prepending $(srcdir)/, but only\n# when $(srcdir) is not \".\".\nifeq ($(srcdir),.)\n  _prepend_srcdir_prefix =\nelse\n  _prepend_srcdir_prefix = | $(SED) 's|^|$(srcdir)/|'\nendif\n\n# In order to be able to consistently filter \".\"-relative names,\n# (i.e., with no $(srcdir) prefix), this definition is careful to\n# remove any $(srcdir) prefix, and to restore what it removes.\n_sc_excl = \\\n  $(or $(exclude_file_name_regexp--$@),^$$)\nVC_LIST_EXCEPT = \\\n  $(VC_LIST) | $(SED) 's|^$(_dot_escaped_srcdir)/||' \\\n\t| if test -f $(srcdir)/.x-$@; then $(GREP) -vEf $(srcdir)/.x-$@; \\\n\t  else $(GREP) -Ev -e \"$${VC_LIST_EXCEPT_DEFAULT-ChangeLog}\"; fi \\\n\t| $(GREP) -Ev -e '($(VC_LIST_ALWAYS_EXCLUDE_REGEX)|$(_sc_excl))' \\\n\t$(_prepend_srcdir_prefix)\n\nifeq ($(origin prev_version_file), undefined)\n  prev_version_file = $(srcdir)/.prev-version\nendif\n\nPREV_VERSION := $(shell cat $(prev_version_file) 2>/dev/null)\nVERSION_REGEXP = $(subst .,\\.,$(VERSION))\nPREV_VERSION_REGEXP = $(subst .,\\.,$(PREV_VERSION))\n\nifeq ($(VC),$(GIT))\n  this-vc-tag = v$(VERSION)\n  this-vc-tag-regexp = v$(VERSION_REGEXP)\nelse\n  tag-package = $(shell echo \"$(PACKAGE)\" | tr '[:lower:]' '[:upper:]')\n  tag-this-version = $(subst .,_,$(VERSION))\n  this-vc-tag = $(tag-package)-$(tag-this-version)\n  this-vc-tag-regexp = $(this-vc-tag)\nendif\nmy_distdir = $(PACKAGE)-$(VERSION)\n\n# Old releases are stored here.\nrelease_archive_dir ?= ../release\n\n# If RELEASE_TYPE is undefined, but RELEASE is, use its second word.\n# But overwrite VERSION.\nifdef RELEASE\n  VERSION := $(word 1, $(RELEASE))\n  RELEASE_TYPE ?= $(word 2, $(RELEASE))\nendif\n\n# Validate and return $(RELEASE_TYPE), or die.\nRELEASE_TYPES = alpha beta stable\nrelease-type = $(call member-check,RELEASE_TYPE,$(RELEASE_TYPES))\n\n# Override gnu_rel_host and url_dir_list in cfg.mk if these are not right.\n# Use alpha.gnu.org for alpha and beta releases.\n# Use ftp.gnu.org for stable releases.\ngnu_ftp_host-alpha = alpha.gnu.org\ngnu_ftp_host-beta = alpha.gnu.org\ngnu_ftp_host-stable = ftp.gnu.org\ngnu_rel_host ?= $(gnu_ftp_host-$(release-type))\n\nurl_dir_list ?= $(if $(call _equal,$(gnu_rel_host),ftp.gnu.org),\t\\\n                     https://ftpmirror.gnu.org/$(PACKAGE),\t\t\\\n                     https://$(gnu_rel_host)/gnu/$(PACKAGE))\n\n# Override this in cfg.mk if you are using a different format in your\n# NEWS file.\ntoday = $(shell date +%Y-%m-%d)\n\n# Select which lines of NEWS are searched for $(news-check-regexp).\n# This is a sed line number spec.  The default says that we search\n# lines 1..10 of NEWS for $(news-check-regexp).\n# If you want to search only line 3 or only lines 20-22, use \"3\" or \"20,22\".\nnews-check-lines-spec ?= 1,10\nnews-check-regexp ?= '^\\*.* $(VERSION_REGEXP) \\($(today)\\)'\n\n# Prevent programs like 'sort' from considering distinct strings to be equal.\n# Doing it here saves us from having to set LC_ALL elsewhere in this file.\nexport LC_ALL = C\n\n## --------------- ##\n## Sanity checks.  ##\n## --------------- ##\n\nifneq ($(_gl-Makefile),)\n_cfg_mk := $(wildcard $(srcdir)/cfg.mk)\n\n# Collect the names of rules starting with 'sc_'.\nsyntax-check-rules := $(sort $(shell env LC_ALL=C $(SED) -n \\\n   's/^\\(sc_[a-zA-Z0-9_-]*\\):.*/\\1/p' $(srcdir)/$(ME) $(_cfg_mk)))\n.PHONY: $(syntax-check-rules)\n\nifeq ($(shell $(VC_LIST) >/dev/null 2>&1; echo $$?),0)\n  local-checks-available += $(syntax-check-rules)\nelse\n  local-checks-available += no-vc-detected\nno-vc-detected:\n\t@echo \"No version control files detected; skipping syntax check\"\nendif\n.PHONY: $(local-checks-available)\n\n# Arrange to print the name of each syntax-checking rule just before running it.\n$(syntax-check-rules): %: %.m\nsc_m_rules_ = $(patsubst %, %.m, $(syntax-check-rules))\n.PHONY: $(sc_m_rules_)\n$(sc_m_rules_):\n\t@echo $(patsubst sc_%.m, %, $@)\n\t@date +%s.%N > .sc-start-$(basename $@)\n\n# Compute and print the elapsed time for each syntax-check rule.\nsc_z_rules_ = $(patsubst %, %.z, $(syntax-check-rules))\n.PHONY: $(sc_z_rules_)\n$(sc_z_rules_): %.z: %\n\t@end=$$(date +%s.%N);\t\t\t\t\t\t\\\n\tstart=$$(cat .sc-start-$*);\t\t\t\t\t\\\n\trm -f .sc-start-$*;\t\t\t\t\t\t\\\n\t$(AWK) -v s=$$start -v e=$$end\t\t\t\t\t\\\n\t  'END {printf \"%.2f $(patsubst sc_%,%,$*)\\n\", e - s}' < /dev/null\n\n# The patsubst here is to replace each sc_% rule with its sc_%.z wrapper\n# that computes and prints elapsed time.\nlocal-check :=\t\t\t\t\t\t\t\t\\\n  $(patsubst sc_%, sc_%.z,\t\t\t\t\t\t\\\n    $(filter-out $(local-checks-to-skip), $(local-checks-available)))\n\nsyntax-check: $(local-check)\nendif\n\n# _sc_search_regexp\n#\n# This macro searches for a given construct in the selected files and\n# then takes some action.\n#\n# Parameters (shell variables):\n#\n#  prohibit | require\n#\n#     Regular expression (ERE) denoting either a forbidden construct\n#     or a required construct.  Those arguments are exclusive.\n#\n#  exclude\n#\n#     Regular expression (ERE) denoting lines to ignore that matched\n#     a prohibit construct.  For example, this can be used to exclude\n#     comments that mention why the nearby code uses an alternative\n#     construct instead of the simpler prohibited construct.\n#\n#  in_vc_files | in_files\n#\n#     grep-E-style regexp selecting the files to check.  For in_vc_files,\n#     the regexp is used to select matching files from the list of all\n#     version-controlled files; for in_files, it's from the names printed\n#     by \"find $(srcdir)\".  When neither is specified, use all files that\n#     are under version control.\n#\n#  containing | non_containing\n#\n#     Select the files (non) containing strings matching this regexp.\n#     If both arguments are specified then CONTAINING takes\n#     precedence.\n#\n#  with_grep_options\n#\n#     Extra options for grep.\n#\n#  ignore_case\n#\n#     Ignore case.\n#\n#  halt\n#\n#     Message to display before to halting execution.\n#\n# Finally, you may exempt files based on an ERE matching file names.\n# For example, to exempt from the sc_space_tab check all files with the\n# .diff suffix, set this Make variable:\n#\n# exclude_file_name_regexp--sc_space_tab = \\.diff$\n#\n# Note that while this functionality is mostly inherited via VC_LIST_EXCEPT,\n# when filtering by name via in_files, we explicitly filter out matching\n# names here as well.\n\n# Initialize each, so that envvar settings cannot interfere.\nexport require =\nexport prohibit =\nexport exclude =\nexport in_vc_files =\nexport in_files =\nexport containing =\nexport non_containing =\nexport halt =\nexport with_grep_options =\n\n# By default, _sc_search_regexp does not ignore case.\nexport ignore_case =\n_ignore_case = $$(test -n \"$$ignore_case\" && printf %s -i || :)\n\ndefine _sc_say_and_exit\n   dummy=; : so we do not need a semicolon before each use;\t\t\\\n   { printf '%s\\n' \"$(ME): $$msg\" 1>&2; exit 1; };\nendef\n\ndefine _sc_search_regexp\n   dummy=; : so we do not need a semicolon before each use;\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n   : Check arguments;\t\t\t\t\t\t\t\\\n   test -n \"$$prohibit\" && test -n \"$$require\"\t\t\t\t\\\n     && { msg='Cannot specify both prohibit and require'\t\t\\\n          $(_sc_say_and_exit) } || :;\t\t\t\t\t\\\n   test -z \"$$prohibit\" && test -z \"$$require\"\t\t\t\t\\\n     && { msg='Should specify either prohibit or require'\t\t\\\n          $(_sc_say_and_exit) } || :;\t\t\t\t\t\\\n   test -z \"$$prohibit\" && test -n \"$$exclude\"\t\t\t\t\\\n     && { msg='Use of exclude requires a prohibit pattern'\t\t\\\n          $(_sc_say_and_exit) } || :;\t\t\t\t\t\\\n   test -n \"$$in_vc_files\" && test -n \"$$in_files\"\t\t\t\\\n     && { msg='Cannot specify both in_vc_files and in_files'\t\t\\\n          $(_sc_say_and_exit) } || :;\t\t\t\t\t\\\n   test \"x$$halt\" != x\t\t\t\t\t\t\t\\\n     || { msg='halt not defined' $(_sc_say_and_exit) };\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n   : Filter by file name;\t\t\t\t\t\t\\\n   if test -n \"$$in_files\"; then\t\t\t\t\t\\\n     files=$$(find $(srcdir) | $(GREP) -E \"$$in_files\"\t\t\t\\\n              | $(GREP) -Ev '$(_sc_excl)');\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     files=$$($(VC_LIST_EXCEPT));\t\t\t\t\t\\\n     if test -n \"$$in_vc_files\"; then\t\t\t\t\t\\\n       files=$$(echo \"$$files\" | $(GREP) -E \"$$in_vc_files\");\t\t\\\n     fi;\t\t\t\t\t\t\t\t\\\n   fi;\t\t\t\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n   : Filter by content;\t\t\t\t\t\t\t\\\n   test -n \"$$files\"\t\t\t\t\t\t\t\\\n     && test -n \"$$containing\"\t\t\t\t\t\t\\\n     && { files=$$(echo \"$$files\" | xargs $(GREP) -l \"$$containing\"); }\t\\\n     || :;\t\t\t\t\t\t\t\t\\\n   test -n \"$$files\"\t\t\t\t\t\t\t\\\n     && test -n \"$$non_containing\"\t\t\t\t\t\\\n     && { files=$$(echo \"$$files\" | xargs $(GREP) -vl \"$$non_containing\"); } \\\n     || :;\t\t\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n   : Check for the construct;\t\t\t\t\t\t\\\n   if test -n \"$$files\"; then\t\t\t\t\t\t\\\n     if test -n \"$$prohibit\"; then\t\t\t\t\t\\\n       echo \"$$files\"\t\t\t\t\t\t\t\\\n         | xargs $(GREP) $$with_grep_options $(_ignore_case) -nE\t\\\n\t\t\"$$prohibit\" /dev/null\t\t\t\t\t\\\n         | $(GREP) -vE \"$${exclude:-^$$}\"\t\t\t\t\\\n         && { msg=\"$$halt\" $(_sc_say_and_exit) }\t\t\t\\\n         || :;\t\t\t\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\\n       echo \"$$files\"\t\t\t\t\t\t\t\\\n         | xargs\t\t\t\t\t\t\t\\\n             $(GREP) $$with_grep_options $(_ignore_case) -LE \"$$require\" \\\n         | $(GREP) .\t\t\t\t\t\t\t\\\n         && { msg=\"$$halt\" $(_sc_say_and_exit) }\t\t\t\\\n         || :;\t\t\t\t\t\t\t\t\\\n     fi\t\t\t\t\t\t\t\t\t\\\n   else :;\t\t\t\t\t\t\t\t\\\n   fi || :;\nendef\n\nsc_avoid_if_before_free:\n\t@$(VC_LIST_EXCEPT)\t\t\t\t\t\t\\\n\t  | $(GREP) -v useless-if-before-free\t\t\t\t\\\n\t  | xargs\t\t\t\t\t\t\t\\\n\t      $(srcdir)/$(_build-aux)/useless-if-before-free\t\t\\\n\t      $(useless_free_options)\t\t\t\t\t\\\n\t  && { printf '$(ME): found useless \"if\"'\t\t\t\\\n\t\t      ' before \"free\" above\\n' 1>&2;\t\t\t\\\n\t       exit 1; }\t\t\t\t\t\t\\\n\t  || :\n\nsc_cast_of_argument_to_free:\n\t@prohibit='\\<free *\\( *\\(' halt=\"don't cast free argument\"\t\\\n\t  $(_sc_search_regexp)\n\nsc_cast_of_x_alloc_return_value:\n\t@prohibit='\\*\\) *x(m|c|re)alloc\\>'\t\t\t\t\\\n\thalt=\"don't cast x*alloc return value\"\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\nsc_cast_of_alloca_return_value:\n\t@prohibit='\\*\\) *alloca\\>'\t\t\t\t\t\\\n\thalt=\"don't cast alloca return value\"\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\nsc_space_tab:\n\t@prohibit='[ ]\t'\t\t\t\t\t\t\\\n\thalt='found SPACE-TAB sequence; remove the SPACE'\t\t\\\n\t  $(_sc_search_regexp)\n\n# Don't use *scanf or the old ato* functions in \"real\" code.\n# They provide no error checking mechanism.\n# Instead, use strto* functions.\nsc_prohibit_atoi_atof:\n\t@prohibit='\\<([fs]?scanf|ato([filq]|ll)) *\\('\t\t\t\t\\\n\thalt='do not use *scan''f, ato''f, ato''i, ato''l, ato''ll or ato''q'\t\\\n\t  $(_sc_search_regexp)\n\n# Use STREQ rather than comparing strcmp == 0, or != 0.\nsp_ = strcmp *\\(.+\\)\nsc_prohibit_strcmp:\n\t@prohibit='! *strcmp *\\(|\\<$(sp_) *[!=]=|[!=]= *$(sp_)'\t\t\\\n\texclude='# *define STRN?EQ\\('\t\t\t\t\t\\\n\thalt='replace strcmp calls above with STREQ/STRNEQ'\t\t\\\n\t  $(_sc_search_regexp)\n\n# Really.  You don't want to use this function.\n# It may fail to NUL-terminate the destination,\n# and always NUL-pads out to the specified length.\nsc_prohibit_strncpy:\n\t@prohibit='\\<strncpy *\\('\t\t\t\t\t\\\n\thalt='do not use strncpy, period'\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Pass EXIT_*, not number, to usage, exit, and error (when exiting)\n# Convert all uses automatically, via these two commands:\n# git grep -l '\\<exit *(1)' \\\n#  | grep -vEf .x-sc_prohibit_magic_number_exit \\\n#  | xargs --no-run-if-empty \\\n#      perl -pi -e 's/(^|[^.])\\b(exit ?)\\(1\\)/$1$2(EXIT_FAILURE)/'\n# git grep -l '\\<exit *(0)' \\\n#  | grep -vEf .x-sc_prohibit_magic_number_exit \\\n#  | xargs --no-run-if-empty \\\n#      perl -pi -e 's/(^|[^.])\\b(exit ?)\\(0\\)/$1$2(EXIT_SUCCESS)/'\nsc_prohibit_magic_number_exit:\n\t@prohibit='(^|[^.])\\<(usage|exit|error) ?\\(-?[0-9]+[,)]'\t\\\n\texclude='exit \\(77\\)|error ?\\(((0|77),|[^,]*)'\t\t\t\\\n\thalt='use EXIT_* values rather than magic number'\t\t\\\n\t  $(_sc_search_regexp)\n\n# Check that we don't use $< in non-implicit Makefile rules.\n#\n# To find the Makefiles, trace AC_CONFIG_FILES.  Using VC_LIST would\n# miss the Makefiles that are not under VC control (e.g., symlinks\n# installed for gettext).  \"Parsing\" (recursive) uses of SUBDIRS seems\n# too delicate.\n#\n# Use GNU Make's --print-data-base to normalize the rules into some\n# easy to parse format: they are separated by two \\n.  Look for the\n# \"section\" about non-pattern rules (marked with \"# Files\") inside\n# which there are still the POSIX Make like implicit rules (\".c.o\").\nsc_prohibit_gnu_make_extensions_awk_ =\t\t\t\t\t\\\n  BEGIN {\t\t\t\t\t\t\t\t\\\n      RS = \"\\n\\n\";\t\t\t\t\t\t\t\\\n      in_rules = 0;\t\t\t\t\t\t\t\\\n  }\t\t\t\t\t\t\t\t\t\\\n  /^\\# Files/ {\t\t\t\t\t\t\t\t\\\n      in_rules = 1;\t\t\t\t\t\t\t\\\n  }\t\t\t\t\t\t\t\t\t\\\n  /\\$$</ && in_rules && $$0 !~ /^(.*\\n)*\\.\\w+(\\.\\w+)?:/ {\t\t\\\n      print \"Error: \" file \": $$< in a non implicit rule\\n\" $$0;\t\\\n      status = 1;\t\t\t\t\t\t\t\\\n  }\t\t\t\t\t\t\t\t\t\\\n  END {\t\t\t\t\t\t\t\t\t\\\n     exit status;\t\t\t\t\t\t\t\\\n  }\nsc_prohibit_gnu_make_extensions:\n\t@if $(AWK) --version | grep GNU >/dev/null 2>&1; then\t\t\\\n\t  (cd $(srcdir) && autoconf --trace AC_CONFIG_FILES:'$$1') |\t\\\n\t    tr ' ' '\\n' |\t\t\t\t\t\t\\\n\t    $(SED) -ne '/Makefile/{s/\\.in$$//;p;}' |\t\t\t\\\n\t    while read m; do\t\t\t\t\t\t\\\n\t      $(MAKE) -qp -f $$m .DUMMY-TARGET 2>/dev/null |\t\t\\\n\t\t$(AWK) -v file=$$m -e '$($@_awk_)' || exit 1;\t\t\\\n\t    done;\t\t\t\t\t\t\t\\\n\tfi\n\n# Using EXIT_SUCCESS as the first argument to error is misleading,\n# since when that parameter is 0, error does not exit.  Use '0' instead.\nsc_error_exit_success:\n\t@prohibit='error *\\(EXIT_SUCCESS,'\t\t\t\t\\\n\tin_vc_files='\\.[chly]$$'\t\t\t\t\t\\\n\thalt='found error (EXIT_SUCCESS'\t\t\t\t\\\n\t $(_sc_search_regexp)\n\n# \"FATAL:\" should be fully upper-cased in error messages\n# \"WARNING:\" should be fully upper-cased, or fully lower-cased\nsc_error_message_warn_fatal:\n\t@$(VC_LIST_EXCEPT)\t\t\t\t\t\t\\\n\t  | xargs $(GREP) -nEA2 '[^rp]error *\\(' /dev/null\t\t\\\n\t  | $(GREP) -E '\"Warning|\"Fatal|\"fatal'\t\t\t\t\\\n\t  && { echo '$(ME): use FATAL, WARNING or warning' 1>&2;\t\\\n\t       exit 1; }\t\t\t\t\t\t\\\n\t  || :\n\n# Error messages should not start with a capital letter\nsc_error_message_uppercase:\n\t@$(VC_LIST_EXCEPT)\t\t\t\t\t\t\\\n\t  | xargs $(GREP) -nEA2 '[^rp]error *\\(' /dev/null\t\t\\\n\t  | $(GREP) -E '\"[A-Z]'\t\t\t\t\t\t\\\n\t  | $(GREP) -vE '\"FATAL|\"WARNING|\"Java|\"C#|\"PRI'\t\t\\\n\t  && { echo '$(ME): found capitalized error message' 1>&2;\t\\\n\t       exit 1; }\t\t\t\t\t\t\\\n\t  || :\n\n# Error messages should not end with a period\nsc_error_message_period:\n\t@$(VC_LIST_EXCEPT)\t\t\t\t\t\t\\\n\t  | xargs $(GREP) -nEA2 '[^rp]error *\\(' /dev/null\t\t\\\n\t  | $(GREP) -E '[^.\"]\\.\"'\t\t\t\t\t\\\n\t  && { echo '$(ME): found error message ending in period' 1>&2;\t\\\n\t       exit 1; }\t\t\t\t\t\t\\\n\t  || :\n\nsc_file_system:\n\t@prohibit=file''system\t\t\t\t\t\t\\\n\texclude='/proc/filesystems'\t\t\t\t\t\\\n\tignore_case=1\t\t\t\t\t\t\t\\\n\thalt='found use of \"file''system\"; spell it \"file system\"'\t\\\n\t  $(_sc_search_regexp)\n\n# Don't use cpp tests of this symbol.  All code assumes config.h is included.\nsc_prohibit_have_config_h:\n\t@prohibit='^# *if.*HAVE''_CONFIG_H'\t\t\t\t\\\n\thalt='found use of HAVE''_CONFIG_H; remove'\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Nearly all .c files must include <config.h>.  However, we also permit this\n# via inclusion of a package-specific header, if cfg.mk specified one.\n# config_h_header must be suitable for grep -E.\nconfig_h_header ?= <config\\.h>\nsc_require_config_h:\n\t@require='^# *include $(config_h_header)'\t\t\t\\\n\tin_vc_files='\\.c$$'\t\t\t\t\t\t\\\n\thalt='the above files do not include <config.h>'\t\t\\\n\t  $(_sc_search_regexp)\n\n# Print each file name for which the first #include does not match\n# $(config_h_header).  Like grep -m 1, this only looks at the first match.\nperl_config_h_first_ =\t\t\t\t\t\t\t\\\n  -e 'BEGIN {$$ret = 0}'\t\t\t\t\t\t\\\n  -e 'if (/^\\# *include\\b/) {'\t\t\t\t\t\t\\\n  -e '  if (not m{^\\# *include $(config_h_header)}) {'\t\t\t\\\n  -e '    print \"$$ARGV\\n\";'\t\t\t\t\t\t\\\n  -e '    $$ret = 1;'\t\t\t\t\t\t\t\\\n  -e '  }'\t\t\t\t\t\t\t\t\\\n  -e '  \\# Move on to next file after first include'\t\t\t\\\n  -e '  close ARGV;'\t\t\t\t\t\t\t\\\n  -e '}'\t\t\t\t\t\t\t\t\\\n  -e 'END {exit $$ret}'\n\n# You must include <config.h> before including any other header file.\n# This can possibly be via a package-specific header, if given by cfg.mk.\nsc_require_config_h_first:\n\t@if $(VC_LIST_EXCEPT) | $(GREP) '\\.c$$' > /dev/null; then\t\\\n\t  files=$$($(VC_LIST_EXCEPT) | $(GREP) '\\.c$$') &&\t\t\\\n\t  perl -n $(perl_config_h_first_) $$files ||\t\t\t\\\n\t    { echo '$(ME): the above files include some other header'\t\\\n\t\t'before <config.h>' 1>&2; exit 1; } || :;\t\t\\\n\telse :;\t\t\t\t\t\t\t\t\\\n\tfi\n\nsc_prohibit_HAVE_MBRTOWC:\n\t@prohibit='\\bHAVE_MBRTOWC\\b'\t\t\t\t\t\\\n\thalt=\"do not use $$prohibit; it is always defined\"\t\t\\\n\t  $(_sc_search_regexp)\n\n# To use this \"command\" macro, you must first define two shell variables:\n# h: the header name, with no enclosing <> or \"\"\n# re: a regular expression that matches IFF something provided by $h is used.\ndefine _sc_header_without_use\n  dummy=; : so we do not need a semicolon before each use;\t\t\\\n  h_esc=`echo '[<\"]'\"$$h\"'[\">]'|$(SED) 's/\\./\\\\\\\\./g'`;\t\t\t\\\n  if $(VC_LIST_EXCEPT) | $(GREP) '\\.c$$' > /dev/null; then\t\t\\\n    files=$$($(GREP) -l '^# *include '\"$$h_esc\"\t\t\t\t\\\n\t     $$($(VC_LIST_EXCEPT) | $(GREP) '\\.c$$')) &&\t\t\\\n    $(GREP) -LE \"$$re\" $$files | $(GREP) . &&\t\t\t\t\\\n      { echo \"$(ME): the above files include $$h but don't use it\"\t\\\n\t1>&2; exit 1; } || :;\t\t\t\t\t\t\\\n  else :;\t\t\t\t\t\t\t\t\\\n  fi\nendef\n\n# Prohibit the inclusion of assert.h without an actual use of assert.\nsc_prohibit_assert_without_use:\n\t@h='assert.h' re='\\<assert *\\(' $(_sc_header_without_use)\n\n# Prohibit the inclusion of close-stream.h without an actual use.\nsc_prohibit_close_stream_without_use:\n\t@h='close-stream.h' re='\\<close_stream *\\(' $(_sc_header_without_use)\n\n# Prohibit the inclusion of getopt.h without an actual use.\nsc_prohibit_getopt_without_use:\n\t@h='getopt.h' re='\\<getopt(_long)? *\\(' $(_sc_header_without_use)\n\n# Don't include quotearg.h unless you use one of its functions.\nsc_prohibit_quotearg_without_use:\n\t@h='quotearg.h' re='\\<quotearg(_[^ ]+)? *\\(' $(_sc_header_without_use)\n\n# Don't include quote.h unless you use one of its functions.\nsc_prohibit_quote_without_use:\n\t@h='quote.h' re='\\<quote((_n)? *\\(|_quoting_options\\>)' \\\n\t  $(_sc_header_without_use)\n\n# Don't include this header unless you use one of its functions.\nsc_prohibit_long_options_without_use:\n\t@h='long-options.h' re='\\<parse_(long_options|gnu_standard_options_only) *\\(' \\\n\t  $(_sc_header_without_use)\n\n# Don't include this header unless you use one of its functions.\nsc_prohibit_inttostr_without_use:\n\t@h='inttostr.h' re='\\<(off|[iu]max|uint)tostr *\\(' \\\n\t  $(_sc_header_without_use)\n\n# Don't include this header unless you use one of its functions.\nsc_prohibit_ignore_value_without_use:\n\t@h='ignore-value.h' re='\\<ignore_(value|ptr) *\\(' \\\n\t  $(_sc_header_without_use)\n\n# Don't include this header unless you use one of its functions.\nsc_prohibit_error_without_use:\n\t@h='error.h' \\\n\tre='\\<error(_at_line|_print_progname|_one_per_line|_message_count)? *\\('\\\n\t  $(_sc_header_without_use)\n\n# Don't include xalloc.h unless you use one of its functions.\n# Consider these symbols:\n# perl -lne '/^# *define (\\w+)\\(/ and print $1' lib/xalloc.h|grep -v '^__';\n# perl -lne '/^(?:extern )?(?:void|char) \\*?(\\w+) *\\(/ and print $1' lib/xalloc.h\n# Divide into two sets on case, and filter each through this:\n# | sort | perl -MRegexp::Assemble -le \\\n#  'print Regexp::Assemble->new(file => \"/dev/stdin\")->as_string'|sed 's/\\?://g'\n# Note this was produced by the above:\n# _xa1 = \\\n#x(((2n?)?re|c(har)?|n(re|m)|z)alloc|alloc_(oversized|die)|m(alloc|emdup)|strdup)\n# But we can do better, in at least two ways:\n# 1) take advantage of two \"dup\"-suffixed strings:\n# x(((2n?)?re|c(har)?|n(re|m)|[mz])alloc|alloc_(oversized|die)|(mem|str)dup)\n# 2) notice that \"c(har)?|[mz]\" is equivalent to the shorter and more readable\n# \"char|[cmz]\"\n# x(((2n?)?re|char|n(re|m)|[cmz])alloc|alloc_(oversized|die)|(mem|str)dup)\n_xa1 = x(((2n?)?re|char|n(re|m)|[cmz])alloc|alloc_(oversized|die)|(mem|str)dup)\n_xa2 = X([CZ]|N?M)ALLOC\nsc_prohibit_xalloc_without_use:\n\t@h='xalloc.h' \\\n\tre='\\<($(_xa1)|$(_xa2)) *\\('\\\n\t  $(_sc_header_without_use)\n\n# Extract function names:\n# perl -lne '/^(?:extern )?(?:void|char|Hash_table) \\*?(\\w+) *\\(/ and print $1' lib/hash.h\n_hash_re = \\\nhash_(re(set_tuning|move)|xin(itialize|sert)|in(itialize|sert)|get_(firs|nex)t|print_statistics|(delet|fre)e|lookup|clear)\n_hash_fn = \\<($(_hash_re)) *\\(\n_hash_struct = (struct )?\\<[Hh]ash_(table|tuning)\\>\nsc_prohibit_hash_without_use:\n\t@h='hash.h' \\\n\tre='$(_hash_fn)|$(_hash_struct)'\\\n\t  $(_sc_header_without_use)\n\nsc_prohibit_cloexec_without_use:\n\t@h='cloexec.h' re='\\<(set_cloexec_flag|dup_cloexec) *\\(' \\\n\t  $(_sc_header_without_use)\n\nsc_prohibit_posixver_without_use:\n\t@h='posixver.h' re='\\<posix2_version *\\(' $(_sc_header_without_use)\n\nsc_prohibit_same_without_use:\n\t@h='same.h' re='\\<same_name(at)? *\\(' $(_sc_header_without_use)\n\nsc_prohibit_hash_pjw_without_use:\n\t@h='hash-pjw.h' \\\n\tre='\\<hash_pjw\\>' \\\n\t  $(_sc_header_without_use)\n\nsc_prohibit_safe_read_without_use:\n\t@h='safe-read.h' re='(\\<SAFE_READ_ERROR\\>|\\<safe_read *\\()' \\\n\t  $(_sc_header_without_use)\n\nsc_prohibit_argmatch_without_use:\n\t@h='argmatch.h' \\\n\tre='(\\<(ARGMATCH_DEFINE_GROUP|ARRAY_CARDINALITY|X?ARGMATCH(|_TO_ARGUMENT|_VERIFY))\\>|\\<(invalid_arg|argmatch(_exit_fn|_(in)?valid)?) *\\()' \\\n\t  $(_sc_header_without_use)\n\nsc_prohibit_canonicalize_without_use:\n\t@h='canonicalize.h' \\\n\tre='CAN_(EXISTING|ALL_BUT_LAST|MISSING)|canonicalize_(mode_t|filename_mode|file_name)' \\\n\t  $(_sc_header_without_use)\n\nsc_prohibit_root_dev_ino_without_use:\n\t@h='root-dev-ino.h' \\\n\tre='(\\<ROOT_DEV_INO_(CHECK|WARN)\\>|\\<get_root_dev_ino *\\()' \\\n\t  $(_sc_header_without_use)\n\nsc_prohibit_openat_without_use:\n\t@h='openat.h' \\\n\tre='\\<(openat_(permissive|needs_fchdir|(save|restore)_fail)|l?(stat|ch(own|mod))at|(euid)?accessat|(FCHMOD|FCHOWN|STAT)AT_INLINE)\\>' \\\n\t  $(_sc_header_without_use)\n\n# Prohibit the inclusion of c-ctype.h without an actual use.\nctype_re = isalnum|isalpha|isascii|isblank|iscntrl|isdigit|isgraph|islower\\\n|isprint|ispunct|isspace|isupper|isxdigit|tolower|toupper\nsc_prohibit_c_ctype_without_use:\n\t@h='c-ctype.h' re='\\<c_($(ctype_re)) *\\(' \\\n\t  $(_sc_header_without_use)\n\n# The following list was generated by running:\n# man signal.h|col -b|perl -ne '/bsd_signal.*;/.../sigwaitinfo.*;/ and print' \\\n#   | perl -lne '/^\\s+(?:int|void).*?(\\w+).*/ and print $1' | fmt\n_sig_functions = \\\n  bsd_signal kill killpg pthread_kill pthread_sigmask raise sigaction \\\n  sigaddset sigaltstack sigdelset sigemptyset sigfillset sighold sigignore \\\n  siginterrupt sigismember signal sigpause sigpending sigprocmask sigqueue \\\n  sigrelse sigset sigsuspend sigtimedwait sigwait sigwaitinfo\n_sig_function_re = $(subst $(_sp),|,$(strip $(_sig_functions)))\n# The following were extracted from \"man signal.h\" manually.\n_sig_types_and_consts =\t\t\t\t\t\t\t\\\n  MINSIGSTKSZ SA_NOCLDSTOP SA_NOCLDWAIT SA_NODEFER SA_ONSTACK\t\t\\\n  SA_RESETHAND SA_RESTART SA_SIGINFO SIGEV_NONE SIGEV_SIGNAL\t\t\\\n  SIGEV_THREAD SIGSTKSZ SIG_BLOCK SIG_SETMASK SIG_UNBLOCK SS_DISABLE\t\\\n  SS_ONSTACK mcontext_t pid_t sig_atomic_t sigevent siginfo_t sigset_t\t\\\n  sigstack sigval stack_t ucontext_t\n# generated via this:\n# perl -lne '/^#ifdef (SIG\\w+)/ and print $1' lib/sig2str.c|sort -u|fmt -70\n_sig_names =\t\t\t\t\t\t\t\t\\\n  SIGABRT SIGALRM SIGALRM1 SIGBUS SIGCANCEL SIGCHLD SIGCLD SIGCONT\t\\\n  SIGDANGER SIGDIL SIGEMT SIGFPE SIGFREEZE SIGGRANT SIGHUP SIGILL\t\\\n  SIGINFO SIGINT SIGIO SIGIOT SIGKAP SIGKILL SIGKILLTHR SIGLOST SIGLWP\t\\\n  SIGMIGRATE SIGMSG SIGPHONE SIGPIPE SIGPOLL SIGPRE SIGPROF SIGPWR\t\\\n  SIGQUIT SIGRETRACT SIGSAK SIGSEGV SIGSOUND SIGSTKFLT SIGSTOP SIGSYS\t\\\n  SIGTERM SIGTHAW SIGTRAP SIGTSTP SIGTTIN SIGTTOU SIGURG SIGUSR1\t\\\n  SIGUSR2 SIGVIRT SIGVTALRM SIGWAITING SIGWINCH SIGWIND SIGWINDOW\t\\\n  SIGXCPU SIGXFSZ\n_sig_syms_re = $(subst $(_sp),|,$(strip $(_sig_names) $(_sig_types_and_consts)))\n\n# Prohibit the inclusion of signal.h without an actual use.\nsc_prohibit_signal_without_use:\n\t@h='signal.h'\t\t\t\t\t\t\t\\\n\tre='\\<($(_sig_function_re)) *\\(|\\<($(_sig_syms_re))\\>'\t\t\\\n\t  $(_sc_header_without_use)\n\n# Don't include stdio--.h unless you use one of its functions.\nsc_prohibit_stdio--_without_use:\n\t@h='stdio--.h' re='\\<((f(re)?|p)open|tmpfile) *\\('\t\t\\\n\t  $(_sc_header_without_use)\n\n# Don't include stdio-safer.h unless you use one of its functions.\nsc_prohibit_stdio-safer_without_use:\n\t@h='stdio-safer.h' re='\\<((f(re)?|p)open|tmpfile)_safer *\\('\t\\\n\t  $(_sc_header_without_use)\n\n# Prohibit the inclusion of strings.h without a sensible use.\n# Using the likes of bcmp, bcopy, bzero, index or rindex is not sensible.\nsc_prohibit_strings_without_use:\n\t@h='strings.h'\t\t\t\t\t\t\t\\\n\tre='\\<(strn?casecmp|ffs(ll)?)\\>'\t\t\t\t\\\n\t  $(_sc_header_without_use)\n\n# Extract the raw list of symbol names with this:\ngl_extract_define_simple = \\\n  /^\\# *define ([A-Z]\\w+)\\(/ and print $$1\n# Filter out duplicates and convert to a space-separated list:\n_intprops_names = \\\n  $(shell f=$(gnulib_dir)/lib/intprops.h;\t\t\t\t\\\n    perl -lne '$(gl_extract_define_simple)' $$f | sort -u | tr '\\n' ' ')\n# Remove trailing space and convert to a regular expression:\n_intprops_syms_re = $(subst $(_sp),|,$(strip $(_intprops_names)))\n# Prohibit the inclusion of intprops.h without an actual use.\nsc_prohibit_intprops_without_use:\n\t@h='intprops.h'\t\t\t\t\t\t\t\\\n\tre='\\<($(_intprops_syms_re)) *\\('\t\t\t\t\\\n\t  $(_sc_header_without_use)\n\n_stddef_syms_re = NULL|offsetof|ptrdiff_t|size_t|wchar_t\n# Prohibit the inclusion of stddef.h without an actual use.\nsc_prohibit_stddef_without_use:\n\t@h='stddef.h'\t\t\t\t\t\t\t\\\n\tre='\\<($(_stddef_syms_re))\\>'\t\t\t\t\t\\\n\t  $(_sc_header_without_use)\n\n_de1 = dirfd|(close|(fd)?open|read|rewind|seek|tell)dir(64)?(_r)?\n_de2 = (versionsort|struct dirent|getdirentries|alphasort|scandir(at)?)(64)?\n_de3 = MAXNAMLEN|DIR|ino_t|d_ino|d_fileno|d_namlen\n_dirent_syms_re = $(_de1)|$(_de2)|$(_de3)\n# Prohibit the inclusion of dirent.h without an actual use.\nsc_prohibit_dirent_without_use:\n\t@h='dirent.h'\t\t\t\t\t\t\t\\\n\tre='\\<($(_dirent_syms_re))\\>'\t\t\t\t\t\\\n\t  $(_sc_header_without_use)\n\n# Prohibit the inclusion of verify.h without an actual use.\nsc_prohibit_verify_without_use:\n\t@h='verify.h'\t\t\t\t\t\t\t\\\n\tre='\\<(verify(true|expr)?|assume|static_assert) *\\('\t\t\\\n\t  $(_sc_header_without_use)\n\n# Don't include xfreopen.h unless you use one of its functions.\nsc_prohibit_xfreopen_without_use:\n\t@h='xfreopen.h' re='\\<xfreopen *\\(' $(_sc_header_without_use)\n\nsc_obsolete_symbols:\n\t@prohibit='\\<(HAVE''_FCNTL_H|O''_NDELAY)\\>'\t\t\t\\\n\thalt='do not use HAVE''_FCNTL_H or O'_NDELAY\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# FIXME: warn about definitions of EXIT_FAILURE, EXIT_SUCCESS, STREQ\n\n# Each nonempty ChangeLog line must start with a year number, or a TAB.\nsc_changelog:\n\t@prohibit='^[^12\t]'\t\t\t\t\t\\\n\tin_vc_files='^ChangeLog$$'\t\t\t\t\t\\\n\thalt='found unexpected prefix in a ChangeLog'\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Ensure that each .c file containing a \"main\" function also\n# calls bindtextdomain.\nsc_bindtextdomain:\n\t@require='bindtextdomain *\\('\t\t\t\t\t\\\n\tin_vc_files='\\.c$$'\t\t\t\t\t\t\\\n\tcontaining='\\<main *('\t\t\t\t\t\t\\\n\thalt='the above files do not call bindtextdomain'\t\t\\\n\t  $(_sc_search_regexp)\n\n# Require that the final line of each test-lib.sh-using test be this one:\n# Exit $fail\n# Note: this test requires GNU grep's --label= option.\nExit_witness_file ?= tests/test-lib.sh\nExit_base := $(notdir $(Exit_witness_file))\nsc_require_test_exit_idiom:\n\t@if test -f $(srcdir)/$(Exit_witness_file); then\t\t\\\n\t  die=0;\t\t\t\t\t\t\t\\\n\t  for i in $$($(GREP) -l -F 'srcdir/$(Exit_base)'\t\t\\\n\t\t$$($(VC_LIST) tests)); do\t\t\t\t\\\n\t    tail -n1 $$i | $(GREP) '^Exit .' > /dev/null\t\t\\\n\t      && : || { die=1; echo $$i; }\t\t\t\t\\\n\t  done;\t\t\t\t\t\t\t\t\\\n\t  test $$die = 1 &&\t\t\t\t\t\t\\\n\t    { echo 1>&2 '$(ME): the final line in each of the above is not:'; \\\n\t      echo 1>&2 'Exit something';\t\t\t\t\\\n\t      exit 1; } || :;\t\t\t\t\t\t\\\n\tfi\n\nsc_trailing_blank:\n\t@prohibit='[\t ]$$'\t\t\t\t\t\t\\\n\thalt='found trailing blank(s)'\t\t\t\t\t\\\n\texclude='^Binary file .* matches$$'\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Match lines like the following, but where there is only one space\n# between the options and the description:\n#   -D, --all-repeated[=delimit-method]  print all duplicate lines\\n\nlongopt_re = --[a-z][0-9A-Za-z-]*(\\[?=[0-9A-Za-z-]*]?)?\nsc_two_space_separator_in_usage:\n\t@prohibit='^   *(-[A-Za-z],)? $(longopt_re) [^ ].*\\\\$$'\t\t\\\n\thalt='help2man requires at least two spaces between an option and its description'\\\n\t  $(_sc_search_regexp)\n\n# A regexp matching function names like \"error\" that may be used\n# to emit translatable messages.\n_gl_translatable_diag_func_re ?= error\n\n# Look for diagnostics that aren't marked for translation.\n# This won't find any for which error's format string is on a separate line.\nsc_unmarked_diagnostics:\n\t@prohibit='\\<$(_gl_translatable_diag_func_re) *\\([^\"]*\"[^\"]*[a-z]{3}' \\\n\texclude='(_|ngettext ?)\\('\t\t\t\t\t\\\n\thalt='found unmarked diagnostic(s)'\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Avoid useless parentheses like those in this example:\n# #if defined (SYMBOL) || defined (SYM2)\nsc_useless_cpp_parens:\n\t@prohibit='^# *if .*defined *\\('\t\t\t\t\\\n\thalt='found useless parentheses in cpp directive'\t\t\\\n\t  $(_sc_search_regexp)\n\n# List headers for which HAVE_HEADER_H is always true, assuming you are\n# using the appropriate gnulib module.  CAUTION: for each \"unnecessary\"\n# #if HAVE_HEADER_H that you remove, be sure that your project explicitly\n# requires the gnulib module that guarantees the usability of that header.\ngl_assured_headers_ = \\\n  cd $(gnulib_dir)/lib && echo *.in.h|$(SED) 's/\\.in\\.h//g'\n\n# Convert the list of names to upper case, and replace each space with \"|\".\naz_ = abcdefghijklmnopqrstuvwxyz\nAZ_ = ABCDEFGHIJKLMNOPQRSTUVWXYZ\ngl_header_upper_case_or_ =\t\t\t\t\t\t\\\n  $$($(gl_assured_headers_)\t\t\t\t\t\t\\\n    | tr $(az_)/.- $(AZ_)___\t\t\t\t\t\t\\\n    | tr -s ' ' '|'\t\t\t\t\t\t\t\\\n    )\nsc_prohibit_always_true_header_tests:\n\t@or=$(gl_header_upper_case_or_);\t\t\t\t\\\n\tre=\"HAVE_($$or)_H\";\t\t\t\t\t\t\\\n\tprohibit='\\<'\"$$re\"'\\>'\t\t\t\t\t\t\\\n\thalt=$$(printf '%s\\n'\t\t\t\t\t\t\\\n\t'do not test the above HAVE_<header>_H symbol(s);'\t\t\\\n\t'  with the corresponding gnulib module, they are always true')\t\\\n\t  $(_sc_search_regexp)\n\nsc_prohibit_defined_have_decl_tests:\n\t@prohibit='(#[\t ]*ifn?def|\\<defined)\\>[\t (]+HAVE_DECL_'\t\\\n\thalt='HAVE_DECL macros are always defined'\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# ==================================================================\ngl_other_headers_ ?= \\\n  intprops.h\t\\\n  openat.h\t\\\n  stat-macros.h\n\n# Perl -lne code to extract \"significant\" cpp-defined symbols from a\n# gnulib header file, eliminating a few common false-positives.\n# The exempted names below are defined only conditionally in gnulib,\n# and hence sometimes must/may be defined in application code.\ngl_extract_significant_defines_ = \\\n  /^\\# *define ([^_ (][^ (]*)(\\s*\\(|\\s+\\w+)/\\\n    && $$2 !~ /(?:rpl_|_used_without_)/\\\n    && $$1 !~ /^(?:NSIG|ENODATA)$$/\\\n    && $$1 !~ /^(?:SA_RESETHAND|SA_RESTART)$$/\\\n    and print $$1\n\n# Create a list of regular expressions matching the names\n# of macros that are guaranteed to be defined by parts of gnulib.\ndefine def_sym_regex\n\tgen_h=$(gl_generated_headers_);\t\t\t\t\t\\\n\t(cd $(gnulib_dir)/lib;\t\t\t\t\t\t\\\n\t  for f in *.in.h $(gl_other_headers_); do\t\t\t\\\n\t    test -f $$f\t\t\t\t\t\t\t\\\n\t      && perl -lne '$(gl_extract_significant_defines_)' $$f;\t\\\n\t  done;\t\t\t\t\t\t\t\t\\\n\t) | sort -u\t\t\t\t\t\t\t\\\n\t  | $(SED) 's/^/^ *# *(define|undef)  */;s/$$/\\\\>/'\nendef\n\n# Don't define macros that we already get from gnulib header files.\nsc_prohibit_always-defined_macros:\n\t@if test -d $(gnulib_dir); then\t\t\t\t\t\\\n\t  case $$(echo all: | $(GREP) -l -f - Makefile) in Makefile);; *) \\\n\t    echo '$(ME): skipping $@: you lack GNU grep' 1>&2; exit 0;;\t\\\n\t  esac;\t\t\t\t\t\t\t\t\\\n\t  regex=$$($(def_sym_regex)); export regex;\t\t\t\\\n\t  $(VC_LIST_EXCEPT)\t\t\t\t\t\t\\\n\t    | xargs sh -c 'echo $$regex | $(GREP) -E -f - \"$$@\"'\t\\\n\t\tdummy /dev/null\t\t\t\t\t\t\\\n\t    && { printf '$(ME): define the above'\t\t\t\\\n\t\t\t' via some gnulib .h file\\n' 1>&2;\t\t\\\n\t\t exit 1; }\t\t\t\t\t\t\\\n\t    || :;\t\t\t\t\t\t\t\\\n\tfi\n# ==================================================================\n\n# Prohibit checked in backup files.\nsc_prohibit_backup_files:\n\t@$(VC_LIST) | $(GREP) '~$$' &&\t\t\t\t\t\\\n\t  { echo '$(ME): found version controlled backup file' 1>&2;\t\\\n\t    exit 1; } || :\n\n# Require the latest GPL.\nsc_GPL_version:\n\t@prohibit='either ''version [^3]'\t\t\t\t\\\n\thalt='GPL vN, N!=3'\t\t\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Require the latest GFDL.  Two regexp, since some .texi files end up\n# line wrapping between 'Free Documentation License,' and 'Version'.\n_GFDL_regexp = (Free ''Documentation.*Version 1\\.[^3]|Version 1\\.[^3] or any)\nsc_GFDL_version:\n\t@prohibit='$(_GFDL_regexp)'\t\t\t\t\t\\\n\thalt='GFDL vN, N!=3'\t\t\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Don't use Texinfo's @acronym{}.\n# https://lists.gnu.org/r/bug-gnulib/2010-03/msg00321.html\ntexinfo_suffix_re_ ?= \\.(txi|texi(nfo)?)$$\nsc_texinfo_acronym:\n\t@prohibit='@acronym\\{'\t\t\t\t\t\t\\\n\tin_vc_files='$(texinfo_suffix_re_)'\t\t\t\t\\\n\thalt='found use of Texinfo @acronym{}'\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\ncvs_keywords = \\\n  Author|Date|Header|Id|Name|Locker|Log|RCSfile|Revision|Source|State\n\nsc_prohibit_cvs_keyword:\n\t@prohibit='\\$$($(cvs_keywords))\\$$'\t\t\t\t\\\n\thalt='do not use CVS keyword expansion'\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# This Perl code is slightly obfuscated.  Not only is each \"$\" doubled\n# because it's in a Makefile, but the $$c's are comments;  we cannot\n# use \"#\" due to the way the script ends up concatenated onto one line.\n# It would be much more concise, and would produce better output (including\n# counts) if written as:\n#   perl -ln -0777 -e '/\\n(\\n+)$/ and print \"$ARGV: \".length $1' ...\n# but that would be far less efficient, reading the entire contents\n# of each file, rather than just the last two bytes of each.\n# In addition, while the code below detects both blank lines and a missing\n# newline at EOF, the above detects only the former.\n#\n# This is a perl script that is expected to be the single-quoted argument\n# to a command-line \"-le\".  The remaining arguments are file names.\n# Print the name of each file that does not end in exactly one newline byte.\n# I.e., warn if there are blank lines (2 or more newlines), or if the\n# last byte is not a newline.  However, currently we don't complain\n# about any file that contains exactly one byte.\n# Exit nonzero if at least one such file is found, otherwise, exit 0.\n# Warn about, but otherwise ignore open failure.  Ignore seek/read failure.\n#\n# Use this if you want to remove trailing empty lines from selected files:\n#   perl -pi -0777 -e 's/\\n\\n+$/\\n/' files...\n#\nrequire_exactly_one_NL_at_EOF_ =\t\t\t\t\t\\\n  foreach my $$f (@ARGV)\t\t\t\t\t\t\\\n    {\t\t\t\t\t\t\t\t\t\\\n      open F, \"<\", $$f or (warn \"failed to open $$f: $$!\\n\"), next;\t\\\n      my $$p = sysseek (F, -2, 2);\t\t\t\t\t\\\n      my $$c = \"seek failure probably means file has < 2 bytes; ignore\"; \\\n      my $$last_two_bytes;\t\t\t\t\t\t\\\n      defined $$p and $$p = sysread F, $$last_two_bytes, 2;\t\t\\\n      close F;\t\t\t\t\t\t\t\t\\\n      $$c = \"ignore read failure\";\t\t\t\t\t\\\n      $$p && ($$last_two_bytes eq \"\\n\\n\"\t\t\t\t\\\n              || substr ($$last_two_bytes,1) ne \"\\n\")\t\t\t\\\n          and (print $$f), $$fail=1;\t\t\t\t\t\\\n    }\t\t\t\t\t\t\t\t\t\\\n  END { exit defined $$fail }\nsc_prohibit_empty_lines_at_EOF:\n\t@$(VC_LIST_EXCEPT)\t\t\t\t\t\t\\\n\t  | xargs perl -le '$(require_exactly_one_NL_at_EOF_)'\t\t\\\n\t  || { echo '$(ME): empty line(s) or no newline at EOF' 1>&2;\t\\\n\t       exit 1; }\t\t\t\t\t\t\\\n\t  || :\n\n# Make sure we don't use st_blocks.  Use ST_NBLOCKS instead.\n# This is a bit of a kludge, since it prevents use of the string\n# even in comments, but for now it does the job with no false positives.\nsc_prohibit_stat_st_blocks:\n\t@prohibit='[.>]st_blocks'\t\t\t\t\t\\\n\thalt='do not use st_blocks; use ST_NBLOCKS'\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Make sure we don't define any S_IS* macros in src/*.c files.\n# They're already defined via gnulib's sys/stat.h replacement.\nsc_prohibit_S_IS_definition:\n\t@prohibit='^ *# *define  *S_IS'\t\t\t\t\t\\\n\thalt='do not define S_IS* macros; include <sys/stat.h>'\t\t\\\n\t  $(_sc_search_regexp)\n\n# Perl block to convert a match to FILE_NAME:LINENO:TEST,\n# that is shared by two definitions below.\nperl_filename_lineno_text_ =\t\t\t\t\t\t\\\n    -e '  {'\t\t\t\t\t\t\t\t\\\n    -e '    $$n = ($$` =~ tr/\\n/\\n/ + 1);'\t\t\t\t\\\n    -e '    ($$v = $$&) =~ s/\\n/\\\\n/g;'\t\t\t\t\t\\\n    -e '    print \"$$ARGV:$$n:$$v\\n\";'\t\t\t\t\t\\\n    -e '  }'\n\nprohibit_doubled_words_ = \\\n    the then in an on if is it but for or at and do to can\n# expand the regex before running the check to avoid using expensive captures\nprohibit_doubled_word_expanded_ = \\\n    $(join $(prohibit_doubled_words_),$(addprefix \\s+,$(prohibit_doubled_words_)))\nprohibit_doubled_word_RE_ ?= \\\n    /\\b(?:$(subst $(_sp),|,$(prohibit_doubled_word_expanded_)))\\b/gims\nprohibit_doubled_word_ =\t\t\t\t\t\t\\\n    -e 'while ($(prohibit_doubled_word_RE_))'\t\t\t\t\\\n    $(perl_filename_lineno_text_)\n\n# Define this to a regular expression that matches\n# any filename:dd:match lines you want to ignore.\n# The default is to ignore no matches.\nignore_doubled_word_match_RE_ ?= ^$$\n\nsc_prohibit_doubled_word:\n\t@$(VC_LIST_EXCEPT)\t\t\t\t\t\t\\\n\t  | xargs perl -n -0777 $(prohibit_doubled_word_)\t\t\\\n\t  | $(GREP) -vE '$(ignore_doubled_word_match_RE_)'\t\t\\\n\t  | $(GREP) .\t\t\t\t\t\t\t\\\n\t  && { echo '$(ME): doubled words' 1>&2; exit 1; }\t\t\\\n\t  || :\n\n# A regular expression matching undesirable combinations of words like\n# \"can not\"; this matches them even when the two words appear on different\n# lines, but not when there is an intervening delimiter like \"#\" or \"*\".\n# Similarly undesirable, \"See @xref{...}\", since an @xref should start\n# a sentence.  Explicitly prohibit any prefix of \"see\" or \"also\".\n# Also prohibit a prefix matching \"\\w+ +\".\n# @pxref gets the same see/also treatment and should be parenthesized;\n# presume it must *not* start a sentence.\n# POSIX spells it \"timestamp\" rather than \"time\\s+stamp\", so we do, too.\nbad_xref_re_ ?= (?:[\\w,:;] +|(?:see|also)\\s+)\\@xref\\{\nbad_pxref_re_ ?= (?:[.!?]|(?:see|also))\\s+\\@pxref\\{\nprohibit_undesirable_word_seq_RE_ ?=\t\t\t\t\t\\\n  /(?:\\bcan\\s+not\\b|\\btime\\s+stamps?\\b|$(bad_xref_re_)|$(bad_pxref_re_))/gims\nprohibit_undesirable_word_seq_ =\t\t\t\t\t\\\n    -e 'while ($(prohibit_undesirable_word_seq_RE_))'\t\t\t\\\n    $(perl_filename_lineno_text_)\n# Define this to a regular expression that matches\n# any filename:dd:match lines you want to ignore.\n# The default is to ignore no matches.\nignore_undesirable_word_sequence_RE_ ?= ^$$\n\nsc_prohibit_undesirable_word_seq:\n\t@$(VC_LIST_EXCEPT)\t\t\t\t\t\t\\\n\t  | xargs perl -n -0777 $(prohibit_undesirable_word_seq_)\t\\\n\t  | $(GREP) -vE '$(ignore_undesirable_word_sequence_RE_)'\t\\\n\t  | $(GREP) .\t\t\t\t\t\t\t\\\n\t  && { echo '$(ME): undesirable word sequence' >&2; exit 1; }   \\\n\t  || :\n\n# Except for shell files and for loops, double semicolon is probably a mistake\nsc_prohibit_double_semicolon:\n\t@prohibit='; *;[\t{} \\]*(/[/*]|$$)'\t\t\t\\\n\tin_vc_files='\\.[chly]$$'\t\t\t\t\t\\\n\texclude='\\bfor *\\(.*\\)'\t\t\t\t\t\t\\\n\thalt=\"Double semicolon detected\"\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n_ptm1 = use \"test C1 && test C2\", not \"test C1 -''a C2\"\n_ptm2 = use \"test C1 || test C2\", not \"test C1 -''o C2\"\n# Using test's -a and -o operators is not portable.\n# We prefer test over [, since the latter is spelled [[ in configure.ac.\nsc_prohibit_test_minus_ao:\n\t@prohibit='(\\<test| \\[+) .+ -[ao] '\t\t\t\t\\\n\thalt='$(_ptm1); $(_ptm2)'\t\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Avoid a test bashism.\nsc_prohibit_test_double_equal:\n\t@prohibit='(\\<test| \\[+) .+ == '\t\t\t\t\\\n\tcontaining='#! */bin/[a-z]*sh'\t\t\t\t\t\\\n\thalt='use \"test x = x\", not \"test x =''= x\"'\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Each program that uses proper_name_utf8 must link with one of the\n# ICONV libraries.  Otherwise, some ICONV library must appear in LDADD.\n# The perl -0777 invocation below extracts the possibly-multi-line\n# definition of LDADD from the appropriate Makefile.am and exits 0\n# when it contains \"ICONV\".\nsc_proper_name_utf8_requires_ICONV:\n\t@progs=$$($(VC_LIST_EXCEPT)\t\t\t\t\t\\\n\t\t    | xargs $(GREP) -l 'proper_name_utf8 ''(\"');\t\\\n\tif test \"x$$progs\" != x; then\t\t\t\t\t\\\n\t  fail=0;\t\t\t\t\t\t\t\\\n\t  for p in $$progs; do\t\t\t\t\t\t\\\n\t    dir=$$(dirname \"$$p\");\t\t\t\t\t\\\n\t    perl -0777\t\t\t\t\t\t\t\\\n\t      -ne 'exit !(/^LDADD =(.+?[^\\\\]\\n)/ms && $$1 =~ /ICONV/)'\t\\\n\t      $$dir/Makefile.am && continue;\t\t\t\t\\\n\t    base=$$(basename \"$$p\" .c);\t\t\t\t\t\\\n\t    $(GREP) \"$${base}_LDADD.*ICONV)\" $$dir/Makefile.am > /dev/null\t\\\n\t      || { fail=1; echo 1>&2 \"$(ME): $$p uses proper_name_utf8\"; }; \\\n\t  done;\t\t\t\t\t\t\t\t\\\n\t  test $$fail = 1 &&\t\t\t\t\t\t\\\n\t    { echo 1>&2 '$(ME): the above do not link with any ICONV library'; \\\n\t      exit 1; } || :;\t\t\t\t\t\t\\\n\tfi\n\n# Warn about \"c0nst struct Foo const foo[]\",\n# but not about \"char const *const foo\" or \"#define const const\".\nsc_redundant_const:\n\t@prohibit='\\bconst\\b[[:space:][:alnum:]]{2,}\\bconst\\b'\t\t\\\n\thalt='redundant \"const\" in declarations'\t\t\t\\\n\t  $(_sc_search_regexp)\n\nsc_const_long_option:\n\t@prohibit='^ *static.*struct option '\t\t\t\t\\\n\texclude='const struct option|struct option const'\t\t\\\n\thalt='add \"const\" to the above declarations'\t\t\t\\\n\t  $(_sc_search_regexp)\n\nNEWS_hash =\t\t\t\t\t\t\t\t\\\n  $$($(SED) -n '/^\\*.* $(PREV_VERSION_REGEXP) ([0-9-]*)/,$$p'\t\t\\\n       $(srcdir)/NEWS\t\t\t\t\t\t\t\\\n     | perl -0777 -pe\t\t\t\t\t\t\t\\\n\t's/^Copyright.+?Free\\sSoftware\\sFoundation,\\sInc\\.\\n//ms'\t\\\n     | md5sum -\t\t\t\t\t\t\t\t\\\n     | $(SED) 's/ .*//')\n\n# Ensure that we don't accidentally insert an entry into an old NEWS block.\nsc_immutable_NEWS:\n\t@if test -f $(srcdir)/NEWS; then\t\t\t\t\\\n\t  test \"$(NEWS_hash)\" = '$(old_NEWS_hash)' && : ||\t\t\\\n\t    { echo '$(ME): you have modified old NEWS' 1>&2; exit 1; };\t\\\n\tfi\n\n# Update the hash stored above.  Do this after each release and\n# for any corrections to old entries.\nupdate-NEWS-hash: NEWS\n\tperl -pi -e 's/^(old_NEWS_hash[ \\t]+:?=[ \\t]+).*/$${1}'\"$(NEWS_hash)/\" \\\n\t  $(srcdir)/cfg.mk\n\n# Ensure that we use only the standard $(VAR) notation,\n# not @...@ in Makefile.am, now that we can rely on automake\n# to emit a definition for each substituted variable.\n# However, there is still one case in which @VAR@ use is not just\n# legitimate, but actually required: when augmenting an automake-defined\n# variable with a prefix.  For example, gettext uses this:\n# MAKEINFO = env LANG= LC_MESSAGES= LC_ALL= LANGUAGE= @MAKEINFO@\n# otherwise, makeinfo would put German or French (current locale)\n# navigation hints in the otherwise-English documentation.\n#\n# Allow the package to add exceptions via a hook in cfg.mk;\n# for example, @PRAGMA_SYSTEM_HEADER@ can be permitted by\n# setting this to ' && !/PRAGMA_SYSTEM_HEADER/'.\n_makefile_at_at_check_exceptions ?=\nsc_makefile_at_at_check:\n\t@perl -ne '/\\@\\w+\\@/'\t\t\t\t\t\t\\\n          -e ' && !/(\\w+)\\s+=.*\\@\\1\\@$$/'\t\t\t\t\\\n          -e ''$(_makefile_at_at_check_exceptions)\t\t\t\\\n\t  -e 'and (print \"$$ARGV:$$.: $$_\"), $$m=1; END {exit !$$m}'\t\\\n\t    $$($(VC_LIST_EXCEPT) | $(GREP) -E '(^|/)(Makefile\\.am|[^/]+\\.mk)$$') \\\n\t  && { echo '$(ME): use $$(...), not @...@' 1>&2; exit 1; } || :\n\nnews-check: NEWS\n\t$(AM_V_GEN)if $(SED) -n $(news-check-lines-spec)p $<\t\t\\\n\t    | $(GREP) -E $(news-check-regexp) >/dev/null; then\t\t\\\n\t  :;\t\t\t\t\t\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t  echo 'NEWS: $$(news-check-regexp) failed to match' 1>&2;\t\\\n\t  exit 1;\t\t\t\t\t\t\t\\\n\tfi\n\nsc_makefile_TAB_only_indentation:\n\t@prohibit='^\t[ ]{8}'\t\t\t\t\t\t\\\n\tin_vc_files='akefile|\\.mk$$'\t\t\t\t\t\\\n\thalt='found TAB-8-space indentation'\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\nsc_m4_quote_check:\n\t@prohibit='(AC_DEFINE(_UNQUOTED)?|AC_DEFUN)\\([^[]'\t\t\\\n\tin_vc_files='(^configure\\.ac|\\.m4)$$'\t\t\t\t\\\n\thalt='quote the first arg to AC_DEF*'\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\nfix_po_file_diag = \\\n'you have changed the set of files with translatable diagnostics;\\n\\\napply the above patch\\n'\n\n# Generate a list of files in which to search for translatable strings.\nperl_translatable_files_list_ =\t\t\t\t\t\t\\\n  -e 'foreach $$file (@ARGV) {'\t\t\t\t\t\t\\\n  -e '\t\\# Consider only file extensions with one or two letters'\t\\\n  -e '\t$$file =~ /\\...?$$/ or next;'\t\t\t\t\t\\\n  -e '\t\\# Ignore m4 and mk files'\t\t\t\t\t\\\n  -e '\t$$file =~ /\\.m[4k]$$/ and next;'\t\t\t\t\\\n  -e '\t\\# Ignore a .c or .h file with a corresponding .l or .y file'\t\\\n  -e '\t$$file =~ /(.+)\\.[ch]$$/ && (-e \"$${1}.l\" || -e \"$${1}.y\")'\t\\\n  -e '\t  and next;'\t\t\t\t\t\t\t\\\n  -e '\t\\# Skip unreadable files'\t\t\t\t\t\\\n  -e '\t-r $$file or next;'\t\t\t\t\t\t\\\n  -e '\tprint \"$$file \";'\t\t\t\t\t\t\\\n  -e '}'\n\n# Verify that all source files using _() (more specifically, files that\n# match $(_gl_translatable_string_re)) are listed in po/POTFILES.in.\npo_file ?= $(srcdir)/po/POTFILES.in\ngenerated_files ?= $(srcdir)/lib/*.[ch]\n_gl_translatable_string_re ?= \\b(N?_|gettext *)\\([^)\"]*(\"|$$)\nsc_po_check:\n\t@if test -f $(po_file); then\t\t\t\t\t\\\n\t  $(GREP) -E -v '^(#|$$)' $(po_file)\t\t\t\t\\\n\t    | $(GREP) -v '^src/false\\.c$$' | sort > $@-1;\t\t\\\n\t  { $(VC_LIST_EXCEPT); echo $(generated_files); }\t\t\\\n\t    | xargs perl $(perl_translatable_files_list_)\t\t\\\n\t    | xargs $(GREP) -E -l '$(_gl_translatable_string_re)'\t\\\n\t    | $(SED) 's|^$(_dot_escaped_srcdir)/||'\t\t\t\\\n\t    | sort -u > $@-2;\t\t\t\t\t\t\\\n\t  diff -u -L $(po_file) -L $(po_file) $@-1 $@-2\t\t\t\\\n\t    || { printf '$(ME): '$(fix_po_file_diag) 1>&2; exit 1; };\t\\\n\t  rm -f $@-1 $@-2;\t\t\t\t\t\t\\\n\tfi\n\n# Sometimes it is useful to change the PATH environment variable\n# in Makefiles.  When doing so, it's better not to use the Unix-centric\n# path separator of ':', but rather the automake-provided '$(PATH_SEPARATOR)'.\nmsg = 'Do not use \":\" above; use $$(PATH_SEPARATOR) instead'\nsc_makefile_path_separator_check:\n\t@prohibit='PATH[=].*:'\t\t\t\t\t\t\\\n\tin_vc_files='akefile|\\.mk$$'\t\t\t\t\t\\\n\thalt=$(msg)\t\t\t\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Check that 'make alpha' will not fail at the end of the process,\n# i.e., when pkg-M.N.tar.xz already exists (either in \".\" or in ../release)\n# and is read-only.\nwritable-files:\n\t$(AM_V_GEN)if test -d $(release_archive_dir); then\t\t\\\n\t  for file in $(DIST_ARCHIVES); do\t\t\t\t\\\n\t    for p in ./ $(release_archive_dir)/; do\t\t\t\\\n\t      test -e $$p$$file || continue;\t\t\t\t\\\n\t      test -w $$p$$file\t\t\t\t\t\t\\\n\t\t|| { echo ERROR: $$p$$file is not writable; fail=1; };\t\\\n\t    done;\t\t\t\t\t\t\t\\\n\t  done;\t\t\t\t\t\t\t\t\\\n\t  test \"$$fail\" && exit 1 || : ;\t\t\t\t\\\n\telse :;\t\t\t\t\t\t\t\t\\\n\tfi\n\nv_etc_file = $(gnulib_dir)/lib/version-etc.c\nsample-test = tests/sample-test\ntexi = doc/$(PACKAGE).texi\n# Make sure that the copyright date in $(v_etc_file) is up to date.\n# Do the same for the $(sample-test) and the main doc/.texi file.\nsc_copyright_check:\n\t@require='enum { COPYRIGHT_YEAR = '$$(date +%Y)' };'\t\t\\\n\tin_files=$(v_etc_file)\t\t\t\t\t\t\\\n\thalt='out of date copyright in $(v_etc_file); update it'\t\\\n\t  $(_sc_search_regexp)\n\t@require='# Copyright \\(C\\) '$$(date +%Y)' Free'\t\t\\\n\tin_vc_files=$(sample-test)\t\t\t\t\t\\\n\thalt='out of date copyright in $(sample-test); update it'\t\\\n\t  $(_sc_search_regexp)\n\t@require='Copyright @copyright\\{\\} .*'$$(date +%Y)\t\t\\\n\tin_vc_files=$(texi)\t\t\t\t\t\t\\\n\thalt='out of date copyright in $(texi); update it'\t\t\\\n\t  $(_sc_search_regexp)\n\n# If tests/help-version exists and seems to be new enough, assume that its\n# use of init.sh and path_prepend_ is correct, and ensure that every other\n# use of init.sh is identical.\n# This is useful because help-version cross-checks prog --version\n# with $(VERSION), which verifies that its path_prepend_ invocation\n# sets PATH correctly.  This is an inexpensive way to ensure that\n# the other init.sh-using tests also get it right.\n_hv_file ?= $(srcdir)/tests/help-version\n_hv_regex_weak ?= ^ *\\. .*/init\\.sh\"\n# Fix syntax-highlighters \"\n_hv_regex_strong ?= ^ *\\. \"\\$${srcdir=\\.}/init\\.sh\"\nsc_cross_check_PATH_usage_in_tests:\n\t@if test -f $(_hv_file); then\t\t\t\t\t\\\n\t  $(GREP) -l 'VERSION mismatch' $(_hv_file) >/dev/null\t\t\\\n\t    || { echo \"$@: skipped: no such file: $(_hv_file)\" 1>&2;\t\\\n\t\t exit 0; };\t\t\t\t\t\t\\\n\t  $(GREP) -lE '$(_hv_regex_strong)' $(_hv_file) >/dev/null\t\\\n\t    || { echo \"$@: $(_hv_file) lacks conforming use of init.sh\" 1>&2; \\\n\t\t exit 1; };\t\t\t\t\t\t\\\n\t  good=$$($(GREP) -E '$(_hv_regex_strong)' $(_hv_file));\t\\\n\t  $(VC_LIST_EXCEPT)\t\t\t\t\t\t\\\n\t    | xargs $(GREP) -lE '$(_hv_regex_weak)'\t\t\t\\\n\t    | xargs $(GREP) -LFx \"$$good\"\t\t\t\t\\\n\t    | $(GREP) .\t\t\t\t\t\t\t\\\n\t    && { printf \"$(ME): the above files use\"\t\t\t\\\n\t\t\t\" path_prepend_ inconsistently\\n\" 1>&2;\t\t\\\n\t\t exit 1; }\t\t\t\t\t\t\\\n\t    || :;\t\t\t\t\t\t\t\\\n\tfi\n\n# BRE regex of file contents to identify a test script.\n_test_script_regex ?= \\<init\\.sh\\>\n\n# In tests, use \"compare expected actual\", not the reverse.\nsc_prohibit_reversed_compare_failure:\n\t@prohibit='\\<compare [^ ]+ ([^ ]*exp|/dev/null)'\t\t\\\n\tcontaining='$(_test_script_regex)'\t\t\t\t\\\n\thalt='reversed compare arguments'\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# #if HAVE_... will evaluate to false for any non numeric string.\n# That would be flagged by using -Wundef, however gnulib currently\n# tests many undefined macros, and so we can't enable that option.\n# So at least preclude common boolean strings as macro values.\nsc_Wundef_boolean:\n\t@prohibit='^#define.*(yes|no|true|false)$$'\t\t\t\\\n\tin_files='$(CONFIG_INCLUDE)'\t\t\t\t\t\\\n\thalt='Use 0 or 1 for macro values'\t\t\t\t\\\n\t  $(_sc_search_regexp)\n\n# Even if you use pathmax.h to guarantee that PATH_MAX is defined, it might\n# not be constant, or might overflow a stack.  In general, use PATH_MAX as\n# a limit, not an array or alloca size.\nsc_prohibit_path_max_allocation:\n\t@prohibit='(\\balloca *\\([^)]*|\\[[^]]*)\\bPATH_MAX'\t\t\\\n\thalt='Avoid stack allocations of size PATH_MAX'\t\t\t\\\n\t  $(_sc_search_regexp)\n\nsc_vulnerable_makefile_CVE-2009-4029:\n\t@prohibit='perm -777 -exec chmod a\\+rwx|chmod 777 \\$$\\(distdir\\)' \\\n\tin_files='(^|/)Makefile\\.in$$'\t\t\t\t\t\\\n\thalt=$$(printf '%s\\n'\t\t\t\t\t\t\\\n\t  'the above files are vulnerable; beware of running'\t\t\\\n\t  '  \"make dist*\" rules, and upgrade to fixed automake'\t\t\\\n\t  '  see https://bugzilla.redhat.com/show_bug.cgi?id=542609 for details') \\\n\t  $(_sc_search_regexp)\n\nsc_vulnerable_makefile_CVE-2012-3386:\n\t@prohibit='chmod a\\+w \\$$\\(distdir\\)'\t\t\t\t\\\n\tin_files='(^|/)Makefile\\.in$$'\t\t\t\t\t\\\n\thalt=$$(printf '%s\\n'\t\t\t\t\t\t\\\n\t  'the above files are vulnerable; beware of running'\t\t\\\n\t  '  \"make distcheck\", and upgrade to fixed automake'\t\t\\\n\t  '  see https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2012-3386 for details') \\\n\t  $(_sc_search_regexp)\n\nvc-diff-check:\n\t$(AM_V_GEN)(unset CDPATH; cd $(srcdir) && $(VC) diff) > vc-diffs || :\n\t$(AM_V_at)if test -s vc-diffs; then\t\t\t\\\n\t  cat vc-diffs;\t\t\t\t\t\t\\\n\t  echo \"Some files are locally modified:\" 1>&2;\t\t\\\n\t  exit 1;\t\t\t\t\t\t\\\n\telse\t\t\t\t\t\t\t\\\n\t  rm vc-diffs;\t\t\t\t\t\t\\\n\tfi\n\nrel-files = $(DIST_ARCHIVES)\n\ngnulib-version = $$(cd $(gnulib_dir)\t\t\t\t\\\n                    && { git describe || git rev-parse --short=10 HEAD; } )\nbootstrap-tools ?= autoconf,automake,gnulib\n\ngpgv = $$(gpgv2 --version >/dev/null && echo gpgv2 || echo gpgv)\n# If it's not already specified, derive the GPG key ID from\n# the signed tag we've just applied to mark this release.\ngpg_key_ID ?=\t\t\t\t\t\t\t\t\\\n  $$(cd $(srcdir)\t\t\t\t\t\t\t\\\n     && git cat-file tag v$(VERSION)\t\t\t\t\t\\\n        | $(gpgv) --status-fd 1 --keyring /dev/null - - 2>/dev/null\t\\\n        | $(AWK) '/^\\[GNUPG:] ERRSIG / {print $$3; exit}')\ngpg_key_email ?=\t\t\t\t\t\t\t\\\n  $$(gpg --list-key --with-colons $(gpg_key_ID) 2>/dev/null\t\t\\\n\t| $(AWK) -F: '/^uid/ {print $$10; exit}'\t\t\t\\\n\t| $(SED) -n 's/.*<\\(.*\\)>/\\1/p')\ngpg_keyring_url ?= https://savannah.gnu.org/project/release-gpgkeys.php?group=$(PACKAGE)&download=1\n\ntranslation_project_ ?= coordinator@translationproject.org\n\n# Make info-gnu the default only for a stable release.\nannouncement_Cc_stable = $(translation_project_), $(PACKAGE_BUGREPORT)\nannouncement_mail_headers_stable =\t\t\\\n  To: info-gnu@gnu.org\t\t\t\t\\\n  Cc: $(announcement_Cc_)\t\t\t\\\n  Mail-Followup-To: $(PACKAGE_BUGREPORT)\n\nannouncement_Cc_alpha = $(translation_project_)\nannouncement_mail_headers_alpha =\t\t\\\n  To: $(PACKAGE_BUGREPORT)\t\t\t\\\n  Cc: $(announcement_Cc_)\n\nannouncement_mail_Cc_beta = $(announcement_mail_Cc_alpha)\nannouncement_mail_headers_beta = $(announcement_mail_headers_alpha)\n\nannouncement_Cc_ ?= $(announcement_Cc_$(release-type))\nannouncement_mail_headers_ ?= $(announcement_mail_headers_$(release-type))\nannouncement: NEWS ChangeLog $(rel-files)\n# Not $(AM_V_GEN) since the output of this command serves as\n# announcement message: it would start with \" GEN announcement\".\n\t$(AM_V_at)$(srcdir)/$(_build-aux)/announce-gen\t\t\t\\\n\t    --mail-headers='$(announcement_mail_headers_)'\t\t\\\n\t    --release-type=$(release-type)\t\t\t\t\\\n\t    --package=$(PACKAGE)\t\t\t\t\t\\\n\t    --prev=$(PREV_VERSION)\t\t\t\t\t\\\n\t    --curr=$(VERSION)\t\t\t\t\t\t\\\n\t    --gpg-key-id=$(gpg_key_ID)\t\t\t\t\t\\\n\t    $$(test -n \"$(gpg_key_email)\" &&\t\t\t\t\\\n\t       echo --gpg-key-email=\"$(gpg_key_email)\")\t\t\t\\\n\t    $$(test -n \"$(gpg_keyring_url)\" &&\t\t\t\t\\\n\t       echo --gpg-keyring-url=\"$(gpg_keyring_url)\")\t\t\\\n\t    --srcdir=$(srcdir)\t\t\t\t\t\t\\\n\t    --news=$(srcdir)/NEWS\t\t\t\t\t\\\n\t    --bootstrap-tools=$(bootstrap-tools)\t\t\t\\\n\t    $$(case ,$(bootstrap-tools), in (*,gnulib,*)\t\t\\\n\t       echo --gnulib-version=$(gnulib-version);; esac)\t\t\\\n\t    $(addprefix --url-dir=, $(url_dir_list))\n\n.PHONY: release-commit\nrelease-commit:\n\t$(AM_V_GEN)cd $(srcdir)\t\t\t\t\\\n\t  && $(_build-aux)/do-release-commit-and-tag\t\\\n\t       -C $(abs_builddir) $(RELEASE)\n\n## ---------------- ##\n## Updating files.  ##\n## ---------------- ##\n\nftp-gnu = https://ftp.gnu.org/gnu\nwww-gnu = https://www.gnu.org\n\nupload_dest_dir_ ?= $(PACKAGE)\nupload_command =\t\t\t\t\t\t\\\n  $(srcdir)/$(_build-aux)/gnupload $(GNUPLOADFLAGS)\t\t\\\n  --to $(gnu_rel_host):$(upload_dest_dir_)\t\t\t\\\n  $(rel-files)\nemit_upload_commands:\n\t@echo =====================================\n\t@echo =====================================\n\t@echo '$(upload_command)'\n\t@echo '# send the ~/announce-$(my_distdir) e-mail'\n\t@echo =====================================\n\t@echo =====================================\n\n.PHONY: upload\nupload:\n\t$(AM_V_GEN)$(upload_command)\n\ndefine emit-commit-log\n  printf '%s\\n' 'maint: post-release administrivia' ''\t\t\t\\\n    '* NEWS: Add header line for next release.'\t\t\t\t\\\n    '* .prev-version: Record previous version.'\t\t\t\t\\\n    '* cfg.mk (old_NEWS_hash): Auto-update.'\nendef\n\n.PHONY: no-submodule-changes\nno-submodule-changes:\n\t$(AM_V_GEN)if test -d $(srcdir)/.git\t\t\t\t\\\n\t\t&& git --version >/dev/null 2>&1; then\t\t\t\\\n\t  diff=$$(cd $(srcdir) && git submodule -q foreach\t\t\\\n\t\t  git diff-index --name-only HEAD)\t\t\t\\\n\t    || exit 1;\t\t\t\t\t\t\t\\\n\t  case $$diff in '') ;;\t\t\t\t\t\t\\\n\t    *) echo '$(ME): submodule files are locally modified:';\t\\\n\t\techo \"$$diff\"; exit 1;; esac;\t\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t  : ;\t\t\t\t\t\t\t\t\\\n\tfi\n\nsubmodule-checks ?= no-submodule-changes public-submodule-commit\n\n# Ensure that each sub-module commit we're using is public.\n# Without this, it is too easy to tag and release code that\n# cannot be built from a fresh clone.\n.PHONY: public-submodule-commit\npublic-submodule-commit:\n\t$(AM_V_GEN)if test -d $(srcdir)/.git\t\t\t\t\\\n\t\t&& git --version >/dev/null 2>&1; then\t\t\t\\\n\t  cd $(srcdir) &&\t\t\t\t\t\t\\\n\t  git submodule --quiet foreach\t\t\t\t\t\\\n\t      'test \"$$(git rev-parse \"$$sha1\")\"\t\t\t\\\n\t\t  = \"$$(git merge-base origin \"$$sha1\")\"'\t\t\\\n\t    || { echo '$(ME): found non-public submodule commit' >&2;\t\\\n\t\t exit 1; };\t\t\t\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t  : ;\t\t\t\t\t\t\t\t\\\n\tfi\n# This rule has a high enough utility/cost ratio that it should be a\n# dependent of \"check\" by default.  However, some of us do occasionally\n# commit a temporary change that deliberately points to a non-public\n# submodule commit, and want to be able to use rules like \"make check\".\n# In that case, run e.g., \"make check gl_public_submodule_commit=\"\n# to disable this test.\ngl_public_submodule_commit ?= public-submodule-commit\ncheck: $(gl_public_submodule_commit)\n\n.PHONY: alpha beta stable release\nALL_RECURSIVE_TARGETS += alpha beta stable\nalpha beta stable: $(local-check) writable-files $(submodule-checks)\n\t$(AM_V_GEN)test $@ = stable\t\t\t\t\t\\\n\t  && { echo $(VERSION) | $(GREP) -E '^[0-9]+(\\.[0-9]+)+$$'\t\\\n\t       || { echo \"invalid version string: $(VERSION)\" 1>&2; exit 1;};}\\\n\t  || :\n\t$(AM_V_at)$(MAKE) vc-diff-check\n\t$(AM_V_at)$(MAKE) news-check\n\t$(AM_V_at)$(MAKE) distcheck\n\t$(AM_V_at)$(MAKE) dist\n\t$(AM_V_at)$(MAKE) $(release-prep-hook) RELEASE_TYPE=$@\n\t$(AM_V_at)$(MAKE) -s emit_upload_commands RELEASE_TYPE=$@\n\nrelease:\n\t$(AM_V_GEN)$(MAKE) _version\n\t$(AM_V_at)$(MAKE) $(release-type)\n\n# Override this in cfg.mk if you follow different procedures.\nrelease-prep-hook ?= release-prep\n\ngl_noteworthy_news_ = * Noteworthy changes in release ?.? (????-??-??) [?]\n.PHONY: release-prep\nrelease-prep:\n\t$(AM_V_GEN)$(MAKE) --no-print-directory -s announcement \\\n\t  > ~/announce-$(my_distdir)\n\t$(AM_V_at)if test -d $(release_archive_dir); then\t\\\n\t  ln $(rel-files) $(release_archive_dir);\t\t\\\n\t  chmod a-w $(rel-files);\t\t\t\t\\\n\tfi\n\t$(AM_V_at)echo $(VERSION) > $(prev_version_file)\n\t$(AM_V_at)$(MAKE) update-NEWS-hash\n\t$(AM_V_at)perl -pi\t\t\t\t\t\t\\\n\t  -e '$$. == 3 and print \"$(gl_noteworthy_news_)\\n\\n\\n\"'\t\\\n\t  $(srcdir)/NEWS\n\t$(AM_V_at)msg=$$($(emit-commit-log)) || exit 1;\t\t\\\n\tcd $(srcdir) && $(VC) commit -m \"$$msg\" -a\n\n# Override this with e.g., -s $(srcdir)/some_other_name.texi\n# if the default $(PACKAGE)-derived name doesn't apply.\ngendocs_options_ ?=\n\n.PHONY: web-manual\nweb-manual:\n\t$(AM_V_GEN)test -z \"$(manual_title)\" \\\n\t  && { echo define manual_title in cfg.mk 1>&2; exit 1; } || :\n\t$(AM_V_at)cd '$(srcdir)/doc'; \\\n\t  $(SHELL) ../$(_build-aux)/gendocs.sh $(gendocs_options_) \\\n\t     -o '$(abs_builddir)/doc/manual' \\\n\t     --email $(PACKAGE_BUGREPORT) $(PACKAGE) \\\n\t    \"$(PACKAGE_NAME) - $(manual_title)\"\n\t$(AM_V_at)echo \" *** Upload the doc/manual directory to web-cvs.\"\n\n.PHONY: web-manual-update\nweb-manual-update:\n\t$(AM_V_GEN)cd $(srcdir) \\\n\t  && $(_build-aux)/gnu-web-doc-update -C $(abs_builddir)\n\n\n# Code Coverage\n\ninit-coverage:\n\t$(MAKE) $(AM_MAKEFLAGS) clean\n\tlcov --directory . --zerocounters\n\nCOVERAGE_CCOPTS ?= \"-g --coverage\"\nCOVERAGE_OUT ?= doc/coverage\n\nbuild-coverage:\n\t$(MAKE) $(AM_MAKEFLAGS) CFLAGS=$(COVERAGE_CCOPTS) CXXFLAGS=$(COVERAGE_CCOPTS)\n\t$(MAKE) $(AM_MAKEFLAGS) CFLAGS=$(COVERAGE_CCOPTS) CXXFLAGS=$(COVERAGE_CCOPTS) check\n\tmkdir -p $(COVERAGE_OUT)\n\tlcov --directory . --output-file $(COVERAGE_OUT)/$(PACKAGE).info \\\n\t\t--capture\n\ngen-coverage:\n\tgenhtml --output-directory $(COVERAGE_OUT) \\\n\t\t$(COVERAGE_OUT)/$(PACKAGE).info \\\n\t\t--highlight --frames --legend \\\n\t\t--title \"$(PACKAGE_NAME)\"\n\ncoverage:\n\t$(MAKE) init-coverage\n\t$(MAKE) build-coverage\n\t$(MAKE) gen-coverage\n\n# Some projects carry local adjustments for gnulib modules via patches in\n# a gnulib patch directory whose default name is gl/ (defined in bootstrap\n# via local_gl_dir=gl).  Those patches become stale as the originals evolve\n# in gnulib.  Use this rule to refresh any stale patches.  It applies each\n# patch to the original in $(gnulib_dir) and uses the temporary result to\n# generate a fuzz-free .diff file.  If you customize the name of your local\n# gnulib patch directory via bootstrap.conf, this rule detects that name.\n# Run this from a non-VPATH (i.e., srcdir) build directory.\n.PHONY: refresh-gnulib-patches\nrefresh-gnulib-patches:\n\tgl=gl;\t\t\t\t\t\t\t\t\\\n\tif test -f bootstrap.conf; then\t\t\t\t\t\\\n\t  t=$$(perl -lne '/^\\s*local_gl_dir=(\\S+)/ and $$d=$$1;'\t\\\n\t       -e 'END{defined $$d and print $$d}' bootstrap.conf);\t\\\n\t  test -n \"$$t\" && gl=$$t;\t\t\t\t\t\\\n\tfi;\t\t\t\t\t\t\t\t\\\n\tfor diff in $$(cd $$gl; git ls-files | $(GREP) '\\.diff$$'); do\t\\\n\t  b=$$(printf %s \"$$diff\"|$(SED) 's/\\.diff$$//');\t\t\\\n\t  VERSION_CONTROL=none\t\t\t\t\t\t\\\n\t    patch \"$(gnulib_dir)/$$b\" \"$$gl/$$diff\" || exit 1;\t\t\\\n\t  ( cd $(gnulib_dir) || exit 1;\t\t\t\t\t\\\n\t    git diff \"$$b\" > \"../$$gl/$$diff\";\t\t\t\t\\\n\t    git checkout $$b ) || exit 1;\t\t\t\t\\\n\tdone\n\n# Update gettext files.\nPACKAGE ?= $(shell basename $(PWD))\nPO_DOMAIN ?= $(PACKAGE)\nPOURL = https://translationproject.org/latest/$(PO_DOMAIN)/\nPODIR ?= po\nrefresh-po:\n\trm -f $(PODIR)/*.po && \\\n\techo \"$(ME): getting translations into po (please ignore the robots.txt ERROR 404)...\" && \\\n\twget --no-verbose --directory-prefix $(PODIR) --no-directories --recursive --level 1 --accept .po --accept .po.1 $(POURL) && \\\n\techo 'en@boldquot' > $(PODIR)/LINGUAS && \\\n\techo 'en@quot' >> $(PODIR)/LINGUAS && \\\n\tls $(PODIR)/*.po | $(SED) 's/\\.po//;s,$(PODIR)/,,' | \\\n\t  sort >> $(PODIR)/LINGUAS\n\n# Indentation\n\nindent_args ?= -ppi 1\nC_SOURCES ?= $$($(VC_LIST_EXCEPT) | grep '\\.[ch]\\(.in\\)\\?$$')\nINDENT_SOURCES ?= $(C_SOURCES)\nexclude_file_name_regexp--indent ?= $(exclude_file_name_regexp--sc_indent)\n\n.PHONY: indent\nindent: # Running indent once is not idempotent, but running it twice is.\n\t$(AM_V_GEN)indent $(indent_args) $(INDENT_SOURCES) && \\\n\tindent $(indent_args) $(INDENT_SOURCES)\n\nsc_indent:\n\t@if ! command -v indent > /dev/null; then\t\t\t\\\n\t    echo 1>&2 '$(ME): sc_indent: indent is missing';\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t  fail=0; files=\"$(INDENT_SOURCES)\";\t\t\t\t\\\n\t  for f in $$files; do\t\t\t\t\t\t\\\n\t    indent $(indent_args) -st $$f\t\t\t\t\\\n\t\t| indent $(indent_args) -st -\t\t\t\t\\\n\t\t| diff -u $$f - || fail=1;\t\t\t\t\\\n\t  done;\t\t\t\t\t\t\t\t\\\n\t  test $$fail = 1 &&\t\t\t\t\t\t\\\n\t    { echo 1>&2 '$(ME): code format error, try \"make indent\"';\t\\\n\t      exit 1; } || :;\t\t\t\t\t\t\\\n\tfi\n\n# If you want to set UPDATE_COPYRIGHT_* environment variables,\n# put the assignments in this variable.\nupdate-copyright-env ?=\n\n# Run this rule once per year (usually early in January)\n# to update all FSF copyright year lists in your project.\n# If you have an additional project-specific rule,\n# add it in cfg.mk along with a line 'update-copyright: prereq'.\n# By default, exclude all variants of COPYING; you can also\n# add exemptions (such as ChangeLog..* for rotated change logs)\n# in the file .x-update-copyright.\n.PHONY: update-copyright\nupdate-copyright:\n\t$(AM_V_GEN)$(GREP) -l -w Copyright                               \\\n\t  $$(export VC_LIST_EXCEPT_DEFAULT=COPYING && $(VC_LIST_EXCEPT)) \\\n\t  | $(update-copyright-env) xargs $(srcdir)/$(_build-aux)/$@\n\n# This tight_scope test is skipped with a warning if $(_gl_TS_headers) is not\n# overridden and $(_gl_TS_dir)/Makefile.am does not mention noinst_HEADERS.\n\n# NOTE: to override any _gl_TS_* default value, you must\n# define the variable(s) using \"export\" in cfg.mk.\n_gl_TS_dir ?= src\n\nALL_RECURSIVE_TARGETS += sc_tight_scope\nsc_tight_scope: tight-scope.mk\n\t@fail=0;\t\t\t\t\t\t\t\\\n\tif ! $(GREP) '^ *export _gl_TS_headers *=' $(srcdir)/cfg.mk\t\\\n\t\t> /dev/null\t\t\t\t\t\t\\\n\t   && ! $(GREP) -w noinst_HEADERS $(srcdir)/$(_gl_TS_dir)/Makefile.am \\\n\t\t> /dev/null 2>&1; then\t\t\t\t\t\\\n\t    echo '$(ME): skipping $@';\t\t\t\t\t\\\n\telse\t\t\t\t\t\t\t\t\\\n\t    $(MAKE) -s -C $(_gl_TS_dir)\t\t\t\t\t\\\n\t\t-f Makefile\t\t\t\t\t\t\\\n\t\t-f $(abs_top_srcdir)/cfg.mk\t\t\t\t\\\n\t\t-f $(abs_top_builddir)/$<\t\t\t\t\\\n\t      _gl_tight_scope\t\t\t\t\t\t\\\n\t\t|| fail=1;\t\t\t\t\t\t\\\n\tfi;\t\t\t\t\t\t\t\t\\\n\trm -f $<;\t\t\t\t\t\t\t\\\n\texit $$fail\n\ntight-scope.mk: $(ME)\n\t@perl -ne '/^# TS-start/.../^# TS-end/ and print' $(srcdir)/$(ME) > $@-t\n\t@mv $@-t $@\n\nifeq (a,b)\n# TS-start\n\n# Most functions should have static scope.\n# Any that don't must be marked with 'extern', but 'main'\n# and 'usage' are exceptions: they're always extern, but\n# do not need to be marked.  Symbols matching '__.*' are\n# reserved by the compiler, so are automatically excluded below.\n_gl_TS_unmarked_extern_functions ?= main usage\n_gl_TS_function_match ?= /^(?:$(_gl_TS_extern)) +.*?(\\w+) *\\(/\n\n# If your project uses a macro like \"XTERN\", then put\n# the following in cfg.mk to override this default:\n# export _gl_TS_extern = extern|XTERN\n_gl_TS_extern ?= extern\n\n# The second nm|grep checks for file-scope variables with 'extern' scope.\n# Without gnulib's progname module, you might put program_name here.\n# Symbols matching '__.*' are reserved by the compiler,\n# so are automatically excluded below.\n_gl_TS_unmarked_extern_vars ?=\n\n# NOTE: the _match variables are perl expressions -- not mere regular\n# expressions -- so that you can extend them to match other patterns\n# and easily extract matched variable names.\n# For example, if your project declares some global variables via\n# a macro like this: GLOBAL(type, var_name, initializer), then you\n# can override this definition to automatically extract those names:\n# export _gl_TS_var_match = \\\n#   /^(?:$(_gl_TS_extern)) .*?\\**(\\w+)(\\[.*?])?;/ || /\\bGLOBAL\\(.*?,\\s*(.*?),/\n_gl_TS_var_match ?= /^(?:$(_gl_TS_extern)) .*?(\\w+)(\\[.*?])?;/\n\n# The names of object files in (or relative to) $(_gl_TS_dir).\n_gl_TS_obj_files ?= *.$(OBJEXT)\n\n# Files in which to search for the one-line style extern declarations.\n# $(_gl_TS_dir)-relative.\n_gl_TS_headers ?= $(noinst_HEADERS)\n_gl_TS_other_headers ?= *.h\n\n.PHONY: _gl_tight_scope\n_gl_tight_scope: $(bin_PROGRAMS)\n\tsed_wrap='s/^/^_?/;s/$$/$$/';\t\t\t\t\t\\\n\tt=exceptions-$$$$;\t\t\t\t\t\t\\\n\ttrap 's=$$?; rm -f $$t; exit $$s' 0;\t\t\t\t\\\n\tfor sig in 1 2 3 13 15; do\t\t\t\t\t\\\n\t  eval \"trap 'v=`expr $$sig + 128`; (exit $$v); exit $$v' $$sig\"; \\\n\tdone;\t\t\t\t\t\t\t\t\\\n\tsrc=`for f in $(SOURCES); do\t\t\t\t\t\\\n\t       test -f $$f && d= || d=$(srcdir)/; echo $$d$$f; done`;\t\\\n\thdr=`for f in $(_gl_TS_headers); do\t\t\t\t\\\n\t       test -f $$f && d= || d=$(srcdir)/; echo $$d$$f; done`;\t\\\n\t( printf '%s\\n' '__.*' $(_gl_TS_unmarked_extern_functions);\t\\\n\t  $(GREP) -h -A1 '^extern .*[^;]$$' $$src\t\t\t\\\n\t    | $(GREP) -vE '^(extern |--|#)' | $(SED) 's/ .*//; /^$$/d';\t\\\n\t  perl -lne\t\t\t\t\t\t\t\\\n\t     '$(_gl_TS_function_match) and print $$1' $$hdr;\t\t\\\n\t) | sort -u | $(SED) \"$$sed_wrap\" > $$t;\t\t\t\\\n\tnm -g $(_gl_TS_obj_files)|$(SED) -n 's/.* T //p'|$(GREP) -Ev -f $$t \\\n\t  && { echo the above functions should have static scope >&2;\t\\\n\t       exit 1; } || : ;\t\t\t\t\t\t\\\n\t( printf '%s\\n' '__.*' main $(_gl_TS_unmarked_extern_vars);\t\\\n\t  perl -lne '$(_gl_TS_var_match) and print $$1'\t\t\t\\\n\t\t$$hdr $(_gl_TS_other_headers)\t\t\t\t\\\n\t) | sort -u | $(SED) \"$$sed_wrap\" > $$t;\t\t\t\\\n\tnm -g $(_gl_TS_obj_files) | $(SED) -n 's/.* [BCDGRS] //p'\t\\\n            | sort -u | $(GREP) -Ev -f $$t\t\t\t\t\\\n\t  && { echo the above variables should have static scope >&2;\t\\\n\t       exit 1; } || :\n# TS-end\nendif\n"
        },
        {
          "name": "nix",
          "type": "tree",
          "content": null
        },
        {
          "name": "plans",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "rpm",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}