{
  "metadata": {
    "timestamp": 1736709822043,
    "page": 284,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jacksonliam/mjpg-streamer",
      "stars": 3055,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2353515625,
          "content": "# Compiled Object files\n*.slo\n*.lo\n*.o\n\n# Compiled Dynamic libraries\n*.so\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n\n# Python\n__pycache__\n*.pyc\n\n/mjpg-streamer-experimental/mjpg_streamer\n/mjpg-streamer-experimental/_build\n*.deb\n_pkg/\ndoc/\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.939453125,
          "content": "mjpg-streamer\n=============\n\nThis is a fork of http://sourceforge.net/projects/mjpg-streamer/ with added support for the Raspberry Pi camera via the input_raspicam plugin.\n\nmjpg-streamer is a command line application that copies JPEG frames from one\nor more input plugins to multiple output plugins. It can be used to stream\nJPEG files over an IP-based network from a webcam to various types of viewers\nsuch as Chrome, Firefox, Cambozola, VLC, mplayer, and other software capable\nof receiving MJPG streams.\n\nIt was originally written for embedded devices with very limited resources in\nterms of RAM and CPU. Its predecessor \"uvc_streamer\" was created because\nLinux-UVC compatible cameras directly produce JPEG-data, allowing fast and\nperfomant M-JPEG streams even from an embedded device running OpenWRT. The\ninput module \"input_uvc.so\" captures such JPG frames from a connected webcam.\nmjpg-streamer now supports a variety of different input devices.\n\nSecurity warning\n----------------\n\n**WARNING**: mjpg-streamer should not be used on untrusted networks!\nBy default, anyone with access to the network that mjpg-streamer is running\non will be able to access it.\n\nPlugins\n-------\n\nInput plugins:\n\n* input_file\n* input_http\n* input_opencv ([documentation](mjpg-streamer-experimental/plugins/input_opencv/README.md))\n* input_ptp2\n* input_raspicam ([documentation](mjpg-streamer-experimental/plugins/input_raspicam/README.md))\n* input_uvc ([documentation](mjpg-streamer-experimental/plugins/input_uvc/README.md))\n\nOutput plugins:\n\n* output_file\n* output_http ([documentation](mjpg-streamer-experimental/plugins/output_http/README.md))\n* ~output_rtsp~ (not functional)\n* ~output_udp~ (not functional)\n* output_viewer ([documentation](mjpg-streamer-experimental/plugins/output_viewer/README.md))\n* output_zmqserver ([documentation](mjpg-streamer-experimental/plugins/output_zmqserver/README.md))\n\nBuilding & Installation\n=======================\n\nYou must have cmake installed. You will also probably want to have a development\nversion of libjpeg installed. I used libjpeg8-dev. e.g.\n\n    sudo apt-get install cmake libjpeg8-dev\n\nIf you do not have gcc (and g++ for the opencv plugin) you may need to install those.\n\n    sudo apt-get install gcc g++\n\nSimple compilation\n------------------\n\nThis will build and install all plugins that can be compiled.\n\n    cd mjpg-streamer-experimental\n    make\n    sudo make install\n    \nBy default, everything will be compiled in \"release\" mode. If you wish to compile\nwith debugging symbols enabled, you can do this:\n\n    cd mjpg-streamer-experimental\n    make distclean\n    make CMAKE_BUILD_TYPE=Debug\n    sudo make install\n    \nAdvanced compilation (via CMake)\n--------------------------------\n\nThere are options available to enable/disable plugins, setup options, etc. This\nshows the basic steps to enable the experimental HTTP management feature:\n\n    cd mjpg-streamer-experimental\n    mkdir _build\n    cd _build\n    cmake -DENABLE_HTTP_MANAGEMENT=ON ..\n    make\n    sudo make install\n\nUsage\n=====\nFrom the mjpeg streamer experimental\nfolder:\n```\nexport LD_LIBRARY_PATH=.\n./mjpg_streamer -o \"output_http.so -w ./www\" -i \"input_raspicam.so\"\n```\n\nSee [README.md](mjpg-streamer-experimental/README.md) or the individual plugin's documentation for more details.\n\nDiscussion / Questions / Help\n=============================\n\nProbably best in this thread\nhttp://www.raspberrypi.org/phpBB3/viewtopic.php?f=43&t=45178\n\nAuthors\n=======\n\nmjpg-streamer was originally created by Tom St√∂veken, and has received\nimprovements from many collaborators since then.\n\n\nLicense\n=======\n\nmjpg-streamer is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; version 2 of the License.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the \nGNU General Public License for more details.\n"
        },
        {
          "name": "mjpg-streamer-experimental",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}