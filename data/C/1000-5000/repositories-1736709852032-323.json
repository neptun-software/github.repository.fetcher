{
  "metadata": {
    "timestamp": 1736709852032,
    "page": 323,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "unikraft/unikraft",
      "stars": 2915,
      "defaultBranch": "staging",
      "files": [
        {
          "name": ".checkpatch.conf",
          "type": "blob",
          "size": 0.2109375,
          "content": "--show-types\n--strict\n--no-tree\n--ignore ASSIGN_IN_IF\n--ignore AVOID_BUG\n--ignore C99_COMMENT_TOLERANCE\n--ignore NEW_TYPEDEFS\n--ignore FILE_PATH_CHANGES\n--ignore OBSOLETE\n--ignore SYMBOLIC_PERMS\n--max-line-length=80\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.4541015625,
          "content": "# Style is similar to Linux Kernel\n# https://www.kernel.org/doc/Documentation/CodingStyle\nBasedOnStyle: LLVM\nIndentWidth: 8\nUseTab: Always\nAlignAfterOpenBracket: Align\nBreakBeforeBraces: Linux\nBreakBeforeBinaryOperators: None\nColumnLimit: 80\nAllowShortFunctionsOnASingleLine: Empty\nAllowShortIfStatementsOnASingleLine: false\nIndentCaseLabels: false\nIndentGotoLabels: false\nRemoveBracesLLVM: true\nSortIncludes: false\nSpaceBeforeParens: ControlStatements\nTabWidth: 8\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1943359375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 8\nindent_style = tab\nmax_line_length = 80\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[.git/**]\nmax_line_length = 75\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3603515625,
          "content": "/build\n/doc/build\n/doc/guides/_static\n/doc/guides/_templates\n/.auto.deps\n/.config.cmd\n/.config.old\n/..config.tmp\n/.config\n*.depend\n*.o\n*.a\n*.d\n*.so\n/*.patch\n/*.diff\n*.orig\n*.rej\n*.bak\n*~\n,*\n\\#*\\#\n.\\#*\n\\#_*\\#\n.\\#_*\n*.pyc\n!.gitignore\n.*\n!.github/\n\n# gnu global files\nGPATH\nGRTAGS\nGSYMS\nGTAGS\n\n# cscope files\ncscope.*\nncscope.*\nsupport/scripts/uk_trace/uk_trace.egg-info/\n"
        },
        {
          "name": "ADOPTERS.md",
          "type": "blob",
          "size": 0.8671875,
          "content": "---\ntitle: Unikraft Adopters\n---\n\n## Adopters\n\nThis page contains an alphabetical list of organizations who are users of Unikraft.\n\n* [EPAM Systems Inc](https://www.epam.com)\n* [Karlsruhe Institute of Technology](https://kit.edu/)\n* [Lancaster University](https://lancs.ac.uk)\n* [NEC Laboratories Europe GmbH](https://neclab.eu)\n* [The University of Manchester](https://www.manchester.ac.uk/)\n* [University of Liège](https://www.uliege.be/)\n* [University POLITEHNICA of Bucharest](https://upb.ro)\n\nIf you would like to be included in this list, please open a [pull request to this document](https://github.com/unikraft/unikraft/blob/staging/ADOPTERS.md) and include a [DCO sign-off](https://developercertificate.org/) with a verified email address of the organization you represent OR citation to a public document which states the adoption of Unikraft by the represented organization.\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.556640625,
          "content": "Contributing to Unikraft\n========================\n\nFirst of all, welcome to Unikraft! We are happy that you are interested in\ncontributing to this project.  New features, bug fixes, improvements,\nmaintenance and everything in between as contributions are welcome!\n\nThe Unikraft project is an open source project and encourages the fostering open\ncollaboration.  For details on how to contribute to the Unikraft project,\n[please read the contribution\nguidelines](https://unikraft.org/docs/contributing/) located on the\n[Documentation website](https://unikraft.org/docs).\n"
        },
        {
          "name": "COPYING.md",
          "type": "blob",
          "size": 20.921875,
          "content": "License\n=======\n\nUnikraft Source Code\n-------------------\n\nUnikraft is organized into libraries where each might be individually licensed.\nIn general, each source file should declare who is the copyright owner and under\nwhich terms and conditions the code is licensed. The main license of the project\nis the following BSD 3-clause license. It applies verbatim with copyright\nattributed to Unikraft UG (haftungsbeschränkt) to all source code files that do\nnot declare a license with copyright attributed and where there is no license\ninformation file (e.g., `LICENSE`, `COPYING`) placed in the same or\ncorresponding root folder.\n\n\tCopyright (c) YYYY, Copyright holder. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without\n\tmodification, are permitted provided that the following conditions\n\tare met:\n\n\t1. Redistributions of source code must retain the above copyright\n\t   notice, this list of conditions and the following disclaimer.\n\t2. Redistributions in binary form must reproduce the above copyright\n\t   notice, this list of conditions and the following disclaimer in the\n\t   documentation and/or other materials provided with the distribution.\n\t3. Neither the name of the copyright holder nor the names of its\n\t   contributors may be used to endorse or promote products derived from\n\t   this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\tAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\tIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\tARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\tLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\tCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\tSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\tINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\tCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\tARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\tPOSSIBILITY OF SUCH DAMAGE.\n\nIn order to simplify working with license check tools, we add\n[SPDX License Identifiers](https://spdx.org/) to the source files. Please be\naware that this tagging might be incomplete or incorrect.\n\nXen Headers\n-----------\n\nPlease note that the files in `plat/xen/include/xen` were copied from the Xen\nsources. They are licensed under MIT. For details please refer to\n`plat/xen/include/xen/COPYING`.\n\nBuild and Configuration Systems\n-------------------------------\n\nUnikraft's build and configuration system is based on\n[Buildroot](https://buildroot.org), which is licenced under GPLv2. In addition,\nwe supply a copy of the Linux Kernel's `checkpatch.pl` script to help\ncommitters adhere to the coding style. This means that a number of files in\nthis repository are GPLv2-licenced. Specifically:\n\n\tMakefile\n\tsupport/kconfig/*\n\tsupport/scripts/*\n\nNote that using the configuration and build system does *not* result in your\nbuilt binary becoming GPLv2-licenced (unless, of course, you link in other\nGPLv2-licenced code).\n\nCopy of GPLv2 license:\n\n\tGNU GENERAL PUBLIC LICENSE\n\tVersion 2, June 1991\n\n\tCopyright (C) 1989, 1991 Free Software Foundation, Inc.\n\t              51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\tEveryone is permitted to copy and distribute verbatim copies\n\tof this license document, but changing it is not allowed.\n\n\tPreamble\n\n\t  The licenses for most software are designed to take away your\n\tfreedom to share and change it.  By contrast, the GNU General Public\n\tLicense is intended to guarantee your freedom to share and change free\n\tsoftware--to make sure the software is free for all its users.  This\n\tGeneral Public License applies to most of the Free Software\n\tFoundation's software and to any other program whose authors commit to\n\tusing it.  (Some other Free Software Foundation software is covered by\n\tthe GNU Library General Public License instead.)  You can apply it to\n\tyour programs, too.\n\n\t  When we speak of free software, we are referring to freedom, not\n\tprice.  Our General Public Licenses are designed to make sure that you\n\thave the freedom to distribute copies of free software (and charge for\n\tthis service if you wish), that you receive source code or can get it\n\tif you want it, that you can change the software or use pieces of it\n\tin new free programs; and that you know you can do these things.\n\n\t  To protect your rights, we need to make restrictions that forbid\n\tanyone to deny you these rights or to ask you to surrender the rights.\n\tThese restrictions translate to certain responsibilities for you if you\n\tdistribute copies of the software, or if you modify it.\n\n\t  For example, if you distribute copies of such a program, whether\n\tgratis or for a fee, you must give the recipients all the rights that\n\tyou have.  You must make sure that they, too, receive or can get the\n\tsource code.  And you must show them these terms so they know their\n\trights.\n\n\t  We protect your rights with two steps: (1) copyright the software, and\n\t(2) offer you this license which gives you legal permission to copy,\n\tdistribute and/or modify the software.\n\n\t  Also, for each author's protection and ours, we want to make certain\n\tthat everyone understands that there is no warranty for this free\n\tsoftware.  If the software is modified by someone else and passed on, we\n\twant its recipients to know that what they have is not the original, so\n\tthat any problems introduced by others will not reflect on the original\n\tauthors' reputations.\n\n\t  Finally, any free program is threatened constantly by software\n\tpatents.  We wish to avoid the danger that redistributors of a free\n\tprogram will individually obtain patent licenses, in effect making the\n\tprogram proprietary.  To prevent this, we have made it clear that any\n\tpatent must be licensed for everyone's free use or not licensed at all.\n\n\t  The precise terms and conditions for copying, distribution and\n\tmodification follow.\n\n\tGNU GENERAL PUBLIC LICENSE\n\tTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n\t  0. This License applies to any program or other work which contains\n\ta notice placed by the copyright holder saying it may be distributed\n\tunder the terms of this General Public License.  The \"Program\", below,\n\trefers to any such program or work, and a \"work based on the Program\"\n\tmeans either the Program or any derivative work under copyright law:\n\tthat is to say, a work containing the Program or a portion of it,\n\teither verbatim or with modifications and/or translated into another\n\tlanguage.  (Hereinafter, translation is included without limitation in\n\tthe term \"modification\".)  Each licensee is addressed as \"you\".\n\n\tActivities other than copying, distribution and modification are not\n\tcovered by this License; they are outside its scope.  The act of\n\trunning the Program is not restricted, and the output from the Program\n\tis covered only if its contents constitute a work based on the\n\tProgram (independent of having been made by running the Program).\n\tWhether that is true depends on what the Program does.\n\n\t  1. You may copy and distribute verbatim copies of the Program's\n\tsource code as you receive it, in any medium, provided that you\n\tconspicuously and appropriately publish on each copy an appropriate\n\tcopyright notice and disclaimer of warranty; keep intact all the\n\tnotices that refer to this License and to the absence of any warranty;\n\tand give any other recipients of the Program a copy of this License\n\talong with the Program.\n\n\tYou may charge a fee for the physical act of transferring a copy, and\n\tyou may at your option offer warranty protection in exchange for a fee.\n\n\t  2. You may modify your copy or copies of the Program or any portion\n\tof it, thus forming a work based on the Program, and copy and\n\tdistribute such modifications or work under the terms of Section 1\n\tabove, provided that you also meet all of these conditions:\n\n\t    a) You must cause the modified files to carry prominent notices\n\t    stating that you changed the files and the date of any change.\n\n\t    b) You must cause any work that you distribute or publish, that in\n\t    whole or in part contains or is derived from the Program or any\n\t    part thereof, to be licensed as a whole at no charge to all third\n\t    parties under the terms of this License.\n\n\t    c) If the modified program normally reads commands interactively\n\t    when run, you must cause it, when started running for such\n\t    interactive use in the most ordinary way, to print or display an\n\t    announcement including an appropriate copyright notice and a\n\t    notice that there is no warranty (or else, saying that you provide\n\t    a warranty) and that users may redistribute the program under\n\t    these conditions, and telling the user how to view a copy of this\n\t    License.  (Exception: if the Program itself is interactive but\n\t    does not normally print such an announcement, your work based on\n\t    the Program is not required to print an announcement.)\n\n\n\tThese requirements apply to the modified work as a whole.  If\n\tidentifiable sections of that work are not derived from the Program,\n\tand can be reasonably considered independent and separate works in\n\tthemselves, then this License, and its terms, do not apply to those\n\tsections when you distribute them as separate works.  But when you\n\tdistribute the same sections as part of a whole which is a work based\n\ton the Program, the distribution of the whole must be on the terms of\n\tthis License, whose permissions for other licensees extend to the\n\tentire whole, and thus to each and every part regardless of who wrote it.\n\n\tThus, it is not the intent of this section to claim rights or contest\n\tyour rights to work written entirely by you; rather, the intent is to\n\texercise the right to control the distribution of derivative or\n\tcollective works based on the Program.\n\n\tIn addition, mere aggregation of another work not based on the Program\n\twith the Program (or with a work based on the Program) on a volume of\n\ta storage or distribution medium does not bring the other work under\n\tthe scope of this License.\n\n\t  3. You may copy and distribute the Program (or a work based on it,\n\tunder Section 2) in object code or executable form under the terms of\n\tSections 1 and 2 above provided that you also do one of the following:\n\n\t    a) Accompany it with the complete corresponding machine-readable\n\t    source code, which must be distributed under the terms of Sections\n\t    1 and 2 above on a medium customarily used for software interchange; or,\n\n\t    b) Accompany it with a written offer, valid for at least three\n\t    years, to give any third party, for a charge no more than your\n\t    cost of physically performing source distribution, a complete\n\t    machine-readable copy of the corresponding source code, to be\n\t    distributed under the terms of Sections 1 and 2 above on a medium\n\t    customarily used for software interchange; or,\n\n\t    c) Accompany it with the information you received as to the offer\n\t    to distribute corresponding source code.  (This alternative is\n\t    allowed only for noncommercial distribution and only if you\n\t    received the program in object code or executable form with such\n\t    an offer, in accord with Subsection b above.)\n\n\tThe source code for a work means the preferred form of the work for\n\tmaking modifications to it.  For an executable work, complete source\n\tcode means all the source code for all modules it contains, plus any\n\tassociated interface definition files, plus the scripts used to\n\tcontrol compilation and installation of the executable.  However, as a\n\tspecial exception, the source code distributed need not include\n\tanything that is normally distributed (in either source or binary\n\tform) with the major components (compiler, kernel, and so on) of the\n\toperating system on which the executable runs, unless that component\n\titself accompanies the executable.\n\n\tIf distribution of executable or object code is made by offering\n\taccess to copy from a designated place, then offering equivalent\n\taccess to copy the source code from the same place counts as\n\tdistribution of the source code, even though third parties are not\n\tcompelled to copy the source along with the object code.\n\n\t  4. You may not copy, modify, sublicense, or distribute the Program\n\texcept as expressly provided under this License.  Any attempt\n\totherwise to copy, modify, sublicense or distribute the Program is\n\tvoid, and will automatically terminate your rights under this License.\n\tHowever, parties who have received copies, or rights, from you under\n\tthis License will not have their licenses terminated so long as such\n\tparties remain in full compliance.\n\n\t  5. You are not required to accept this License, since you have not\n\tsigned it.  However, nothing else grants you permission to modify or\n\tdistribute the Program or its derivative works.  These actions are\n\tprohibited by law if you do not accept this License.  Therefore, by\n\tmodifying or distributing the Program (or any work based on the\n\tProgram), you indicate your acceptance of this License to do so, and\n\tall its terms and conditions for copying, distributing or modifying\n\tthe Program or works based on it.\n\n\t  6. Each time you redistribute the Program (or any work based on the\n\tProgram), the recipient automatically receives a license from the\n\toriginal licensor to copy, distribute or modify the Program subject to\n\tthese terms and conditions.  You may not impose any further\n\trestrictions on the recipients' exercise of the rights granted herein.\n\tYou are not responsible for enforcing compliance by third parties to\n\tthis License.\n\n\t  7. If, as a consequence of a court judgment or allegation of patent\n\tinfringement or for any other reason (not limited to patent issues),\n\tconditions are imposed on you (whether by court order, agreement or\n\totherwise) that contradict the conditions of this License, they do not\n\texcuse you from the conditions of this License.  If you cannot\n\tdistribute so as to satisfy simultaneously your obligations under this\n\tLicense and any other pertinent obligations, then as a consequence you\n\tmay not distribute the Program at all.  For example, if a patent\n\tlicense would not permit royalty-free redistribution of the Program by\n\tall those who receive copies directly or indirectly through you, then\n\tthe only way you could satisfy both it and this License would be to\n\trefrain entirely from distribution of the Program.\n\n\tIf any portion of this section is held invalid or unenforceable under\n\tany particular circumstance, the balance of the section is intended to\n\tapply and the section as a whole is intended to apply in other\n\tcircumstances.\n\n\tIt is not the purpose of this section to induce you to infringe any\n\tpatents or other property right claims or to contest validity of any\n\tsuch claims; this section has the sole purpose of protecting the\n\tintegrity of the free software distribution system, which is\n\timplemented by public license practices.  Many people have made\n\tgenerous contributions to the wide range of software distributed\n\tthrough that system in reliance on consistent application of that\n\tsystem; it is up to the author/donor to decide if he or she is willing\n\tto distribute software through any other system and a licensee cannot\n\timpose that choice.\n\n\tThis section is intended to make thoroughly clear what is believed to\n\tbe a consequence of the rest of this License.\n\n\t  8. If the distribution and/or use of the Program is restricted in\n\tcertain countries either by patents or by copyrighted interfaces, the\n\toriginal copyright holder who places the Program under this License\n\tmay add an explicit geographical distribution limitation excluding\n\tthose countries, so that distribution is permitted only in or among\n\tcountries not thus excluded.  In such case, this License incorporates\n\tthe limitation as if written in the body of this License.\n\n\t  9. The Free Software Foundation may publish revised and/or new versions\n\tof the General Public License from time to time.  Such new versions will\n\tbe similar in spirit to the present version, but may differ in detail to\n\taddress new problems or concerns.\n\n\tEach version is given a distinguishing version number.  If the Program\n\tspecifies a version number of this License which applies to it and \"any\n\tlater version\", you have the option of following the terms and conditions\n\teither of that version or of any later version published by the Free\n\tSoftware Foundation.  If the Program does not specify a version number of\n\tthis License, you may choose any version ever published by the Free Software\n\tFoundation.\n\n\t  10. If you wish to incorporate parts of the Program into other free\n\tprograms whose distribution conditions are different, write to the author\n\tto ask for permission.  For software which is copyrighted by the Free\n\tSoftware Foundation, write to the Free Software Foundation; we sometimes\n\tmake exceptions for this.  Our decision will be guided by the two goals\n\tof preserving the free status of all derivatives of our free software and\n\tof promoting the sharing and reuse of software generally.\n\n\tNO WARRANTY\n\n\t  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\n\tFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\n\tOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\n\tPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\n\tOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n\tMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\n\tTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\n\tPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\n\tREPAIR OR CORRECTION.\n\n\t  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n\tWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\n\tREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\n\tINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\n\tOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\n\tTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\n\tYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\n\tPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\n\tPOSSIBILITY OF SUCH DAMAGES.\n\n\tEND OF TERMS AND CONDITIONS\n\n\tHow to Apply These Terms to Your New Programs\n\n\t  If you develop a new program, and you want it to be of the greatest\n\tpossible use to the public, the best way to achieve this is to make it\n\tfree software which everyone can redistribute and change under these terms.\n\n\t  To do so, attach the following notices to the program.  It is safest\n\tto attach them to the start of each source file to most effectively\n\tconvey the exclusion of warranty; and each file should have at least\n\tthe \"copyright\" line and a pointer to where the full notice is found.\n\n\t    <one line to give the program's name and a brief idea of what it does.>\n\t    Copyright (C) <year>  <name of author>\n\n\t    This program is free software; you can redistribute it and/or modify\n\t    it under the terms of the GNU General Public License as published by\n\t    the Free Software Foundation; either version 2 of the License, or\n\t    (at your option) any later version.\n\n\t    This program is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU General Public License for more details.\n\n\t    You should have received a copy of the GNU General Public License\n\t    along with this program; if not, write to the Free Software\n\t    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n\tAlso add information on how to contact you by electronic and paper mail.\n\n\tIf the program is interactive, make it output a short notice like this\n\twhen it starts in an interactive mode:\n\n\t    Gnomovision version 69, Copyright (C) year name of author\n\t    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n\t    This is free software, and you are welcome to redistribute it\n\t    under certain conditions; type `show c' for details.\n\n\tThe hypothetical commands `show w' and `show c' should show the appropriate\n\tparts of the General Public License.  Of course, the commands you use may\n\tbe called something other than `show w' and `show c'; they could even be\n\tmouse-clicks or menu items--whatever suits your program.\n\n\tYou should also get your employer (if you work as a programmer) or your\n\tschool, if any, to sign a \"copyright disclaimer\" for the program, if\n\tnecessary.  Here is a sample; alter the names:\n\n\t  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n\t  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n\t  <signature of Ty Coon>, 1 April 1989\n\t  Ty Coon, President of Vice\n\n\tThis General Public License does not permit incorporating your program into\n\tproprietary programs.  If your program is a subroutine library, you may\n\tconsider it more useful to permit linking proprietary applications with the\n\tlibrary.  If this is what you want to do, use the GNU Library General\n\tPublic License instead of this License.\n"
        },
        {
          "name": "Config.uk",
          "type": "blob",
          "size": 6.62109375,
          "content": "#\n# For a description of the syntax of this configuration file,\n# see https://www.kernel.org/doc/Documentation/kbuild/Config.in-language.txt.\n#\nmainmenu \"Unikraft/$(UK_FULLVERSION) Configuration\"\n\nconfig UK_FULLVERSION\n\tstring\n\tdefault \"$(UK_FULLVERSION)\"\n\nconfig UK_CODENAME\n\tstring\n\tdefault \"$(UK_CODENAME)\"\n\nconfig UK_ARCH\n\tstring\n\tdefault \"x86_64\" if ARCH_X86_64\n\tdefault \"arm64\"  if ARCH_ARM_64\n\tdefault \"arm\"\tif ARCH_ARM_32\n\tdefault \"$(UK_ARCH)\"\n\nconfig HOST_ARCH\n\tstring\n\tdefault \"$(HOST_ARCH)\"\n\nconfig NO_APP\n\tdef_bool $(shell,test $(UK_BASE) = $(UK_APP) && echo y || echo n)\n\nconfig UK_BASE\n\tstring\n\tdefault \"$(UK_BASE)\"\nconfig UK_APP\n\tstring\n\tdefault \"$(UK_APP)\"\nconfig UK_DEFNAME\n\tstring\n\tdefault \"$(UK_NAME)\"\n\nmenu \"Architecture Selection\"\n\tsource \"$(UK_BASE)/arch/Config.uk\"\nendmenu\n\nmenu \"Platform Configuration\"\n\tsource \"$(shell,$(UK_BASE)/support/build/config-submenu.sh -q -o '$(KCONFIG_DIR)/plats.uk' -r '$(KCONFIG_PLAT_BASE)' -l '$(KCONFIG_PLAT_BASE)' -c '$(KCONFIG_EPLAT_DIRS)' -e '$(KCONFIG_EXCLUDEDIRS)')\"\nendmenu\n\nmenu \"Device Drivers\"\n\tsource \"$(shell,$(UK_BASE)/support/build/config-submenu.sh -q -o '$(KCONFIG_DIR)/drivers.uk' -r '$(KCONFIG_DRIV_BASE)' -l '$(KCONFIG_DRIV_BASE)' -e '$(KCONFIG_EXCLUDEDIRS)')\"\nendmenu\n\nmenu \"Library Configuration\"\n\tsource \"$(shell,$(UK_BASE)/support/build/config-submenu.sh -q -o '$(KCONFIG_DIR)/libs.uk' -r '$(KCONFIG_LIB_BASE)' -l '$(KCONFIG_LIB_BASE)' -c '$(KCONFIG_ELIB_DIRS)' -e '$(KCONFIG_EXCLUDEDIRS)')\"\nendmenu\n\nif !NO_APP\n\tsource \"$(shell,$(UK_BASE)/support/build/config-submenu.sh -q -o '$(KCONFIG_DIR)/app.uk' -t \"Application Options\" -l '$(KCONFIG_EAPP_DIR)' -e '$(KCONFIG_EXCLUDEDIRS)')\"\nendif\n\nmenu \"Build Options\"\nchoice\n\tprompt \"Optimization level\"\n\tdefault OPTIMIZE_PERF\n\thelp\n\t  Set the optimization level for gcc\n\nconfig OPTIMIZE_NONE\n\tbool \"No optimizations\"\n\thelp\n\t\tDo not optimize, use -O0.\n\nconfig OPTIMIZE_PERF\n\tbool \"Optimize for performance\"\n\thelp\n\t\tOptimize code for performance,\n\nconfig OPTIMIZE_SIZE\n\tbool \"Optimize for size\"\n\thelp\n\t\tOptimize code for size.\nendchoice\n\ncomment \"Hint: Specify a CPU type to get most benefits from performance optimization\"\n\tdepends on OPTIMIZE_PERF && (MARCH_X86_64_GENERIC || MARCH_ARM64_GENERIC)\n\nconfig OPTIMIZE_NOOMITFP\n\tbool \"Keep stack frame pointers\"\n\tdefault y\n\thelp\n\t\tReserves one CPU register for using it as stack frame pointer.\n\t\tFunctions are instrumented to save, set up, and restore frame\n\t\tpointers. This option simplifies doing stack walks for\n\t\tdebugging for instance.\n\nconfig OPTIMIZE_DEADELIM\n\tbool \"Drop unused functions and data\"\n\tdefault n\n\thelp\n\t\tDrop unused functions and data. They will not be copied\n\t\tinto the final binary. This might save further space but linking time\n\t\twill increase.\n\ncomment \"Hint: Enable dropping of unused code to further reduce target image size\"\n\tdepends on OPTIMIZE_SIZE && !OPTIMIZE_DEADELIM\n\nconfig OPTIMIZE_LTO\n\tbool \"LTO - Link time optimizations (EXPERIMENTAL)\"\n\tdefault n\n\thelp\n\t\tEnables GCC to do code optimizations during linking. This option\n\t\twill increase overall building time but creates more efficient\n\t\tUnikraft binaries.\n\nconfig OPTIMIZE_PIE\n\tbool \"Static-PIE - Position-independent binary\"\n\tselect LIBUKRELOC\n\tdefault n\n\thelp\n\t\tCreates a position independent binary. Such a Unikernel binary does\n\t\tnot have to be placed at a fixed location in the virtual address\n\t\tspace by a loader. Some loaders even assume that kernel entrance is\n\t\trelocatable (e.g., EFI).\n\nchoice\n\tprompt \"Debug information level\"\n\tdefault DEBUG_SYMBOLS_LVL3\n\thelp\n\t\tSet the level of available debugging information.\n\nconfig DEBUG_SYMBOLS_LVL0\n\tbool \"Level 0 (-g0), None\"\n\thelp\n\t\tNo debugging information. This option is not recommended.\n\t\tBuilding time is reduced.\n\nconfig DEBUG_SYMBOLS_LVL1\n\tbool \"Level 1 (-g1)\"\n\thelp\n\t\tMinimal debugging information, enough\n\t\tfor making backtraces in parts of the program that\n\t\tyou don't plan to debug. This includes descriptions\n\t\tof functions and external variables, but no information\n\t\tabout local variables and no line numbers.\n\nconfig DEBUG_SYMBOLS_LVL2\n\tbool \"Level 2 (-g2)\"\n\thelp\n\t\tgcc's default setting\n\nconfig DEBUG_SYMBOLS_LVL3\n\tbool \"Level 3 (-g3)\"\n\thelp\n\t\tLevel 3 includes extra information, such as all the\n\t\tmacro definitions present in the program. Some debuggers\n\t\tsupport macro expansion.\nendchoice\n\ncomment \"Hint: Keep frame pointers to ease debugging\"\n\tdepends on !OPTIMIZE_NOOMITFP && !DEBUG_SYMBOLS_LVL0\n\nconfig OPTIMIZE_WARNISERROR\n\tbool \"Treat warnings as errors\"\n\tdefault n\n\thelp\n\t\tWhen this option is enabled, the build system stops\n\t\tcompilation when a compiler warning is displayed.\n\nconfig OPTIMIZE_SYMFILE\n\tbool \"Create a symbols file\"\n\tdefault n\n\thelp\n\t\tCreate a separate file with all symbol locations\n\nconfig OPTIMIZE_COMPRESS\n\tbool \"Compress images\"\n\thelp\n\t\tCreate compressed images. Please note that not all platforms\n\t\tsupport compressing.\n\nconfig RECORD_BUILDTIME\n\tbool \"Keep track of Building time\"\n\tdefault n\n\thelp\n\t\tRecord time (and resources) used by each build step\n\nif RECORD_BUILDTIME\n\tchoice\n\t\tprompt \"Tool for recording\"\n\t        default RECORD_BUILDTIME_TIME\n\t\thelp\n\t\t\tSelect which tool is used for recording the build steps\n\n\tconfig RECORD_BUILDTIME_TIME\n\tbool \"time\"\n\thelp\n\t\tUse time command to record process statistics during building\n\n\tconfig RECORD_BUILDTIME_LIFTOFF\n\tbool \"liftoff\"\n\thelp\n\t\tUse liftoff to record process statistics during building.\n\t\tGet it from https://github.com/unikraft/liftoff and add\n\t\tit to your command-line environment\n\n\tendchoice\nendif\n\nconfig CROSS_COMPILE\n\tstring \"Custom cross-compiler tool prefix (optional)\"\n\thelp\n\t\tSame as running 'make CROSS_COMPILE=prefix-' but stored for\n\t\tdefault make runs in this build directory.  You don't\n\t\tneed to set this unless you want the configured build\n\t\tdirectory to select the cross-compiler automatically.\n\n\nconfig LLVM_TARGET_ARCH\n\tstring \"Custom cross-compiler LLVM target (optional)\"\n\thelp\n\t\tSame as running 'make LLVM_TARGET_ARCH=target' but stored for\n\t\tdefault make runs in this build directory.  You don't\n\t\tneed to set this unless you want the configured build\n\t\tdirectory to select the cross-compiler automatically.\n\t\tThis is used for LLVM based compilers such as clang or rustc.\n#config PARALLEL_JOBS\n#\tint \"Number of jobs to run simultaneously (0 for auto)\"\n#\tdefault \"0\"\n#\thelp\n#\t  Number of jobs to run simultaneously.  If 0, determine\n#\t  automatically according to number of CPUs on the host\n#\t  system.\nendmenu\n\nconfig UK_NAME\n\tstring \"Image name\"\n\tdefault UK_DEFNAME\n\thelp\n\t  Name to be used for final image\n\n# The following are selected by libraries that provide options to bypass security.\nconfig CONFIG_UK_TAINT_INSECURE_OPTIONS\n\tbool\n\ncomment \"Notice: UNIKRAFT IS CONFIGURED WITH INSECURE OPTIONS\"\n\tdepends on CONFIG_UK_TAINT_INSECURE\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 44.36328125,
          "content": "# Makefile for Unikraft\n#\n# Copyright (C) 1999-2005 by Erik Andersen <andersen@codepoet.org>\n# Copyright (C) 2006-2014 by the Buildroot developers <buildroot@uclibc.org>\n# Copyright (C) 2014-2016 by the Buildroot developers <buildroot@buildroot.org>\n# Copyright (C) 2016-2017 by NEC Europe Ltd. <simon.kuenzer@neclab.eu>\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n#\n\nHOSTOSENV := $(shell uname)\n\n# Set initial and basic tools that we need to operate\nifeq ($(HOSTOSENV),Darwin)\nSED := gsed\nelse\nSED := sed\nendif\n\n# Trick for always running with a fixed umask\nUMASK = 0022\nifneq ($(shell umask),$(UMASK))\n.PHONY: _all $(MAKECMDGOALS)\n\n$(MAKECMDGOALS): _all\n\t@:\n\n_all:\n\t@umask $(UMASK) && $(MAKE) --no-print-directory $(MAKECMDGOALS)\n\nelse # umask\n\n# This is our default rule, so must come first\n.PHONY: all\nall:\n\n# Disable built-in rules\n.SUFFIXES:\n\n# Enable secondary expansion\n.SECONDEXPANSION:\n\n# Save running make version\nRUNNING_MAKE_VERSION := $(MAKE_VERSION)\n\n# Check for minimal make version (note: this check will break at make 10.x)\nMIN_MAKE_VERSION = 4.1\nifneq ($(firstword $(sort $(RUNNING_MAKE_VERSION) $(MIN_MAKE_VERSION))),$(MIN_MAKE_VERSION))\nifneq ($(HOSTOSENV),Darwin)\n$(error You have make '$(RUNNING_MAKE_VERSION)' installed. GNU make >= $(MIN_MAKE_VERSION) is required)\nelse\n$(error We need GNU make >= $(MIN_MAKE_VERSION). It can be installed with 'brew install make'. Retry with: 'gmake $(MAKECMDGOALS)')\nendif\nendif\n\n# Strip quotes and then whitespaces\nqstrip = $(strip $(subst \",,$(1)))\n#\"))\n\n# Variables for use in Make constructs\ncomma := ,\nempty :=\nspace := $(empty) $(empty)\nplus  := $(call qstrip,\"+\")\n\n# bash prints the name of the directory on 'cd <dir>' if CDPATH is\n# set, so unset it here to not cause problems. Notice that the export\n# line doesn't affect the environment of $(shell ..) calls, so\n# explictly throw away any output from 'cd' here.\nexport CDPATH :=\n\n# To put more focus on warnings, be less verbose as default\n# Use 'make V=1' to see the full commands\n# Set KBUILD_VERBOSE and Q to quiet mode\nKBUILD_VERBOSE := 0\nQ := @\n\nifeq (\"$(origin V)\", \"command line\")\n  BUILD_VERBOSE = $(V)\nendif\nifndef BUILD_VERBOSE\n  BUILD_VERBOSE = 0\nendif\n\nifneq ($(BUILD_VERBOSE),0)\n  KBUILD_VERBOSE := 1\n  Q :=\nendif\n\n# Enable warnings about undefined variables\n# with verbosity level 2\nifeq ($(BUILD_VERBOSE),2)\nMAKEFLAGS+=--warn-undefined-variables\nendif\n\n# Helper that shows an `info` message only\n# when verbose mode is on\n# verbose_info $verbosemessage\nifneq ($(BUILD_VERBOSE),0)\nverbose_info = $(info $(1))\nelse\nverbose_info =\nendif\n\n# Use current directory as base\nCONFIG_UK_BASE ?= $(CURDIR)\noverride CONFIG_UK_BASE := $(realpath $(CONFIG_UK_BASE))\nifeq ($(CONFIG_UK_BASE),)\n$(error \"Invalid base directory (CONFIG_UK_BASE)\")\nendif\n\n# parameter A: APP_DIR ###\n# Set A variable if not already done on the command line;\nifneq (\"$(origin A)\", \"command line\")\noverride A := $(CONFIG_UK_BASE)\nelse\nifeq (\"$(filter /%,$(A))\", \"\")\n$(error Path to app directory (A) is not absolute)\nendif\nendif\n# Remove the trailing '/.'\n# Also remove the trailing '/' the user can set when on the command line.\noverride A := $(realpath $(patsubst %/,%,$(patsubst %.,%,$(A))))\nifeq ($(A),)\n$(error Invalid app directory (A))\nendif\noverride CONFIG_UK_APP   := $(A)\noverride APP_DIR  := $(A)\noverride APP_BASE := $(A)\n\n# parameter O: BUILD_DIR ###\n# Use O variable if set on the command line, otherwise use $(A)/build;\nifneq (\"$(origin O)\", \"command line\")\n_O := $(APP_BASE)/build\nelse\nifeq (\"$(filter /%,$(O))\", \"\")\n$(error Path to output directory (O) is not absolute)\nendif\n_O := $(realpath $(dir $(O)))/$(notdir $(O))\nendif\nBUILD_DIR := $(shell mkdir -p $(_O) && cd $(_O) >/dev/null && pwd)\n$(if $(BUILD_DIR),, $(error could not create directory \"$(_O)\"))\nBUILD_DIR := $(realpath $(patsubst %/,%,$(patsubst %.,%,$(BUILD_DIR))))\noverride O := $(BUILD_DIR)\n\n# parameter C: UK_CONFIG ###\n# Use C variable if set on the command line, otherwise use $(A)/.config;\nifneq (\"$(origin C)\", \"command line\")\nifeq (\"$(origin C)\", \"undefined\")\noverride C := $(CONFIG_UK_APP)/.config\nendif\nelse\nifeq (\"$(filter /%,$(C))\", \"\")\n$(error Path to configuration file (C) is not absolute)\nendif\noverride C := $(realpath $(dir $(C)))/$(notdir $(C))\nendif\nUK_CONFIG  := $(C)\nCONFIG_DIR := $(dir $(C))\n# As UK_CONFIG could be different files, always assume it has a newer version\n.PHONY: $(UK_CONFIG)\n\n# EPLAT_DIR (list of external platform libraries)\n# Retrieved from P variable from the command line (paths separated by colon)\nifeq (\"$(origin P)\", \"command line\")\n$(foreach ITR,$(subst :, ,$(P)), \\\n$(if $(filter /%,$(ITR)),,$(error Path to external platform \"$(ITR)\" (P) is not absolute));\\\n$(if $(wildcard $(ITR)), \\\n$(eval EPLAT_DIR += $(realpath $(patsubst %/,%,$(patsubst %.,%,$(ITR))))), \\\n$(error Cannot find platform library: $(ITR)) \\\n) \\\n)\nendif\nEPLAT_DIR := $(realpath $(patsubst %/,%,$(patsubst %.,%,$(EPLAT_DIR))))\n\n# ELIB_DIR (list of external libraries)\n# Retrieved from L variable from the command line (paths separated by colon)\nifeq (\"$(origin L)\", \"command line\")\n# library path exists?\n$(foreach ITR,$(subst :, ,$(L)), \\\n$(if $(filter /%,$(ITR)),,$(error Path to external library \"$(ITR)\" (L) is not absolute));\\\n$(if $(wildcard $(ITR)), \\\n$(eval ELIB_DIR += $(realpath $(patsubst %/,%,$(patsubst %.,%,$(ITR))))), \\\n$(error Cannot find library: $(ITR)) \\\n) \\\n)\nendif\nELIB_DIR := $(realpath $(patsubst %/,%,$(patsubst %.,%,$(ELIB_DIR))))\n\n# IMPORT_EXCLUDEDIRS (list of (library) paths to exclude)\n# Retrieved from E variable from the command line\n# (paths are separated by colon)\nKCONFIG_EXCLUDEDIRS:=\nIMPORT_EXCLUDEDIRS:=\nifeq (\"$(origin E)\", \"command line\")\n$(foreach ITR,$(subst :, ,$(E)), \\\n$(if $(filter /%,$(ITR)),,$(error Path to library to exclude \"$(ITR)\" (E) is not absolute));\\\n$(if $(wildcard $(ITR)), \\\n$(eval IMPORT_EXCLUDEDIRS += $(realpath $(patsubst %/,%,$(patsubst %.,%,$(ITR))))) \\\n$(eval KCONFIG_EXCLUDEDIRS = $(KCONFIG_EXCLUDEDIRS)$(colon)$(realpath $(patsubst %/,%,$(patsubst %.,%,$(ITR))))), \\\n$(error Cannot find library for exclusion: $(ITR)) \\\n) \\\n)\nendif\n\n$(call verbose_info,* Unikraft base:      $(CONFIG_UK_BASE))\n$(call verbose_info,* Configuration:      $(UK_CONFIG))\n$(call verbose_info,* Application base:   $(CONFIG_UK_APP))\n$(call verbose_info,* External platforms: [ $(EPLAT_DIR) ])\n$(call verbose_info,* External libraries: [ $(ELIB_DIR) ])\n$(call verbose_info,* Import excludes:    [ $(IMPORT_EXCLUDEDIRS) ])\n$(call verbose_info,* Build output:       $(BUILD_DIR))\n\nbuild_dir_make  := 0\nifneq ($(BUILD_DIR),$(UK_BASE))\n\tbuild_dir_make := 1;\nelse\n\tsub_make_exec := 1;\nendif\n\n# KConfig settings\n\nCONFIG_UK_PLAT        := $(CONFIG_UK_BASE)/plat/\nCONFIG_UK_LIB         := $(CONFIG_UK_BASE)/lib/\nCONFIG_UK_DRIV        := $(CONFIG_UK_BASE)/drivers/\nCONFIG_CONFIG_IN      := $(CONFIG_UK_BASE)/Config.uk\nCONFIG                := $(CONFIG_UK_BASE)/support/kconfig\nCONFIGLIB\t      := $(CONFIG_UK_BASE)/support/kconfiglib\nUK_CONFIG_OUT         := $(BUILD_DIR)/config\nUK_GENERATED_INCLUDES := $(BUILD_DIR)/include\nKCONFIG_INCLUDES_DIR  := $(UK_GENERATED_INCLUDES)/uk/bits\nKCONFIG_DIR           := $(BUILD_DIR)/kconfig\nUK_FIXDEP             := $(KCONFIG_DIR)/fixdep\nKCONFIG_AUTOCONFIG    := $(KCONFIG_DIR)/auto.conf\nKCONFIG_TRISTATE      := $(KCONFIG_DIR)/tristate.config\nKCONFIG_AUTOHEADER    := $(KCONFIG_INCLUDES_DIR)/config.h\nKCONFIG_LIB_BASE      := $(CONFIG_UK_BASE)/lib\nKCONFIG_ELIB_DIRS     := $(L)\nKCONFIG_PLAT_BASE     := $(CONFIG_UK_BASE)/plat\nKCONFIG_EPLAT_DIRS    := $(P)\nKCONFIG_DRIV_BASE     := $(CONFIG_UK_BASE)/drivers\nifneq ($(CONFIG_UK_BASE),$(CONFIG_UK_APP))\nKCONFIG_EAPP_DIR      := $(CONFIG_UK_APP)\nelse\nKCONFIG_EAPP_DIR      :=\nendif\n\n# Makefile support scripts\nSCRIPTS_DIR := $(CONFIG_UK_BASE)/support/scripts\n\n# # Set and export the version string\n$(call verbose_info,Including $(CONFIG_UK_BASE)/version.mk...)\ninclude $(CONFIG_UK_BASE)/version.mk\n\n# Compute the full local version string so packages can use it as-is\n# Need to export it, so it can be got from environment in children (eg. mconf)\nifdef UK_EXTRAVERSION\nexport UK_FULLVERSION := $(UK_VERSION).$(UK_SUBVERSION).$(UK_EXTRAVERSION)$(shell cd $(CONFIG_UK_BASE); $(SCRIPTS_DIR)/gitsha1)\nelse\nexport UK_FULLVERSION := $(UK_VERSION).$(UK_SUBVERSION)$(shell cd $(CONFIG_UK_BASE); $(SCRIPTS_DIR)/gitsha1)\nendif\n\n# Makefile targets\nnull_targets\t\t:= print-version print-vars help\nnokconfig_targets       := properclean distclean $(null_targets)\nnoconfig_targets\t:= ukconfig menuconfig nconfig gconfig xconfig config \\\n\t\t\t   oldconfig defconfig olddefconfig savedefconfig \\\n\t\t\t   randconfig allyesconfig allnoconfig \\\n\t\t\t   scriptconfig iscriptconfig kmenuconfig guiconfig \\\n\t\t\t   dumpvarsconfig \\\n\t\t\t   $(nokconfig_targets)\n\n# we want bash as shell\nSHELL := $(shell if [ -x \"$$BASH\" ]; then echo $$BASH; \\\n\t else if [ -x /bin/bash ]; then echo /bin/bash; \\\n\t else echo sh; fi; fi)\n\n# basic tools\nRM    := rm -f\nMV    := mv -f\nCP    := cp -f\nMKDIR := mkdir\nTOUCH := touch\nXARGS := xargs\n\n# kconfig uses CONFIG_SHELL\nCONFIG_SHELL := $(SHELL)\nexport SHELL CONFIG_SHELL Q KBUILD_VERBOSE\n\n################################################################################\n# Create minimal necessary folder structure\n################################################################################\n# Create them before trying to include a .config\nifeq ($(filter $(nokconfig_targets),$(MAKECMDGOALS)),)\n$(if $(shell $(MKDIR) -pv $(KCONFIG_DIR) && cd $(KCONFIG_DIR) >/dev/null && pwd),,\\\n\t$(error Could not create $(KCONFIG_DIR)))\n$(if $(shell $(MKDIR) -pv $(UK_GENERATED_INCLUDES) && cd $(KCONFIG_DIR) >/dev/null && pwd),,\\\n\t$(error Could not create $(UK_GENERATED_INCLUDES)))\n$(if $(shell $(MKDIR) -pv $(KCONFIG_INCLUDES_DIR) && cd $(KCONFIG_DIR) >/dev/null && pwd),,\\\n\t$(error Could not create $(KCONFIG_INCLUDES_DIR)))\nendif\n\n################################################################################\n# .config\n################################################################################\n# Initialize important internal variables\nUK_FETCH:=\nUK_FETCH-y:=\nUK_PREPARE:=\nUK_PREPARE-y:=\nUK_PREPROCESS:=\nUK_PREPROCESS-y:=\nUK_PLATS:=\nUK_PLATS-y:=\nUK_LIBS:=\nUK_LIBS-y:=\nUK_ALIBS:=\nUK_ALIBS-y:=\nUK_OLIBS:=\nUK_OLIBS-y:=\nUK_SRCS:=\nUK_SRCS-y:=\nUK_DEPS:=\nUK_DEPS-y:=\nUK_OBJS:=\nUK_OBJS-y:=\nUK_IMAGES:=\nUK_IMAGES-y:=\nUK_CLEAN :=\nUK_CLEAN-y :=\nARCHFLAGS :=\nARCHFLAGS-y :=\nISR_ARCHFLAGS :=\nISR_ARCHFLAGS-y :=\nCOMPFLAGS :=\nCOMPFLAGS-y :=\nASFLAGS :=\nASFLAGS-y :=\nASINCLUDES :=\nASINCLUDES-y :=\nCFLAGS :=\nCFLAGS-y :=\nCINCLUDES :=\nCINCLUDES-y :=\nCXXFLAGS :=\nCXXFLAGS-y :=\nCXXINCLUDES :=\nCXXINCLUDES-y :=\nGOCFLAGS :=\nGOCFLAGS-y :=\nRUSTCFLAGS :=\nRUSTCFLAGS-y :=\nGOCINCLUDES :=\nGOCINCLUDES-y :=\nDBGFLAGS :=\nDBGFLAGS-y :=\nLDFLAGS :=\nLDFLAGS-y :=\nIMAGE_LDFLAGS :=\nIMAGE_LDFLAGS-y :=\nEACHOLIB_SRCS :=\nEACHOLIB_SRCS-y :=\nEACHOLIB_OBJS :=\nEACHOLIB_OBJS-y :=\nEACHOLIB_ALIBS :=\nEACHOLIB_ALIBS-y :=\nEACHOLIB_LOCALS :=\nEACHOLIB_LOCALS-y :=\n\n# Pull in the user's configuration file\nifeq ($(filter $(noconfig_targets),$(MAKECMDGOALS)),)\nifneq (\"$(wildcard $(UK_CONFIG))\",\"\")\n$(call verbose_info,Including $(UK_CONFIG)...)\n-include $(UK_CONFIG)\nUK_HAVE_DOT_CONFIG := y\nendif\nendif\n\n# parameter N: UK_NAME ###\n# # Use N variable if set on the command line, otherwise use directory name\nifeq (\"$(origin N)\", \"command line\")\nCONFIG_UK_NAME := $(N)\nelse\nCONFIG_UK_NAME ?= $(notdir $(APP_DIR))\nendif\n\n# Option to overwrite file name of generated images by supported platforms. The\n# target platform has to support this feature.  When unset or unsupported by the\n# platform, the default semantic of the target platform (typically\n# `$(UK_NAME)_$(PLAT)_$(ARCH)`) will be used.\n#\n# NOTE: Please note that multi-platform builds do not work anymore when this\n#       option is used.  The reason is that the build system will generate the\n#       same file by each selected platform.  Make won't be able to proceed\n#       building.\n# NOTE: This feature is currently used by kraftkit.\nifneq ($(call qstrip,$(UK_IMAGE_NAME_OVERWRITE)),)\nUK_IMAGE_NAME_OVERWRITE := $(call qstrip,$(UK_IMAGE_NAME_OVERWRITE))\nendif\n\n# remove quotes from CONFIG_UK_NAME\nCONFIG_UK_NAME := $(call qstrip,$(CONFIG_UK_NAME))\nexport CONFIG_UK_NAME\n\n################################################################################\n# Host compiler and linker tools\n################################################################################\nifndef HOSTAR\nHOSTAR := ar\nendif\nifndef HOSTAS\nHOSTAS := as\nendif\nifndef HOSTCC\nHOSTCC := gcc\nHOSTCC := $(shell which $(HOSTCC) || type -p $(HOSTCC) || echo gcc)\nendif\nHOSTCC_NOCCACHE := $(HOSTCC)\nifndef HOSTCXX\nHOSTCXX := g++\nHOSTCXX := $(shell which $(HOSTCXX) || type -p $(HOSTCXX) || echo g++)\nendif\nHOSTCXX_NOCCACHE := $(HOSTCXX)\nifndef HOSTCPP\nHOSTCPP := cpp\nendif\nifndef HOSTLD\nHOSTLD := ld\nendif\nifndef HOSTLN\nHOSTLN := ln\nendif\nifndef HOSTNM\nHOSTNM := nm\nendif\nifndef HOSTOBJCOPY\nHOSTOBJCOPY := objcopy\nendif\nifndef HOSTRANLIB\nHOSTRANLIB := ranlib\nendif\nHOSTAR\t\t:= $(shell which $(HOSTAR) || type -p $(HOSTAR) || echo ar)\nHOSTAS\t\t:= $(shell which $(HOSTAS) || type -p $(HOSTAS) || echo as)\nHOSTCPP\t\t:= $(shell which $(HOSTCPP) || type -p $(HOSTCPP) || echo cpp)\nHOSTLD\t\t:= $(shell which $(HOSTLD) || type -p $(HOSTLD) || echo ld)\nHOSTLN\t\t:= $(shell which $(HOSTLN) || type -p $(HOSTLN) || echo ln)\nHOSTNM\t\t:= $(shell which $(HOSTNM) || type -p $(HOSTNM) || echo nm)\nHOSTOBJCOPY\t:= $(shell which $(HOSTOBJCOPY) || type -p $(HOSTOBJCOPY) || echo objcopy)\nHOSTRANLIB\t:= $(shell which $(HOSTRANLIB) || type -p $(HOSTRANLIB) || echo ranlib)\nHOSTCC_VERSION\t:= $(shell $(HOSTCC_NOCCACHE) --version | \\\n\t\t   $(SED) -n -r 's/^.* ([0-9]*)\\.([0-9]*)\\.([0-9]*)[ ]*.*/\\1 \\2/p')\n# UTC time in ISO 8601 format:\nHOSTUTC\t\t:= $(shell date -Iseconds -u)\nHOSTNAME\t:= $(shell hostname -s)\nHOSTUSER\t:= $(shell whoami)\n\n# For gcc >= 5.x, we only need the major version.\nifneq ($(firstword $(HOSTCC_VERSION)),4)\nHOSTCC_VERSION\t:= $(firstword $(HOSTCC_VERSION))\nendif\n\n# Determine the userland we are running on.\n#\nexport HOSTARCH := $(shell LC_ALL=C $(HOSTCC_NOCCACHE) -v 2>&1 | \\\n\t\t   $(SED) -e '/^Target: \\([^-]*\\).*/!d' \\\n\t\t       -e 's//\\1/' \\\n\t\t       -e 's/i.86/x86/' \\\n\t\t       -e 's/sun4u/sparc64/' \\\n\t\t       -e 's/arm64.*/arm64/' -e 's/aarch64.*/arm64/' \\\n\t\t       -e '/arm64/! s/arm.*/arm/' \\\n\t\t       -e 's/sa110/arm/' \\\n\t\t       -e 's/ppc64/powerpc64/' \\\n\t\t       -e 's/ppc/powerpc/' \\\n\t\t       -e 's/macppc/powerpc/' \\\n\t\t       -e 's/sh.*/sh/' )\nexport HOSTAR HOSTAS HOSTCC HOSTCC_VERSION HOSTCXX HOSTLD HOSTARCH\nexport HOSTCC_NOCCACHE HOSTCXX_NOCCACHE\n\n################################################################################\n# Makefile helpers\n################################################################################\n$(call verbose_info,Including $(CONFIG_UK_BASE)/support/build/Makefile.rules...)\ninclude $(CONFIG_UK_BASE)/support/build/Makefile.rules\n\n# We need to include this file early (before any rule is defined)\n# but after we have tried to load a .config and after having our tools defined\n$(foreach _M,$(wildcard $(addsuffix Makefile.rules,\\\n\t   $(CONFIG_UK_BASE)/arch/ $(CONFIG_UK_BASE)/arch/*/ \\\n\t   $(CONFIG_UK_BASE)/plat/*/ $(CONFIG_UK_BASE)/lib/*/ \\\n\t   $(CONFIG_UK_BASE)/drivers/*/ $(CONFIG_UK_BASE)/drivers/*/*/ \\\n\t   $(addsuffix /,$(ELIB_DIR)) $(APP_DIR)/)), \\\n\t\t$(eval $(call verbose_include,$(_M))) \\\n)\n\n################################################################################\n# Clean targets that do not have any dependency on a configuration\n################################################################################\n# Declare them before we depend on having .config\nproperclean:\n\t$(call verbose_cmd,RM,$(notdir $(BUILD_DIR)),$(RM) -r \\\n\t\t$(BUILD_DIR))\n\ndistclean: properclean\n\t$(call verbose_cmd,RM,config,$(RM) \\\n\t\t$(UK_CONFIG) $(UK_CONFIG).old \\\n\t\t$(CONFIG_DIR)/.$(notdir $(UK_CONFIG)).tmp \\\n\t\t$(CONFIG_DIR)/.auto.deps)\n\n.PHONY: distclean properclean\n\n################################################################################\n# Unikraft Architecture\n################################################################################\n# Set target archicture as set in config\n$(eval $(call verbose_include,$(CONFIG_UK_BASE)/arch/Arch.uk))\nifeq ($(CONFIG_UK_ARCH),)\n# Set target archicture as set in environment\nifneq ($(ARCH),)\nexport CONFIG_UK_ARCH\t?= $(shell echo \"$(call qstrip,$(ARCH))\" | \\\n\t\t   $(SED) -e \"s/-.*//\" \\\n\t\t       -e 's//\\1/' \\\n\t\t       -e 's/i.86/x86/' \\\n\t\t       -e 's/sun4u/sparc64/' \\\n\t\t       -e 's/arm64.*/arm64/' -e 's/aarch64.*/arm64/' \\\n\t\t       -e '/arm64/! s/arm.*/arm/' \\\n\t\t       -e 's/sa110/arm/' \\\n\t\t       -e 's/ppc64/powerpc64/' \\\n\t\t       -e 's/ppc/powerpc/' \\\n\t\t       -e 's/macppc/powerpc/' \\\n\t\t       -e 's/sh.*/sh/' )\nelse\n# Nothing set, use detected host architecture\nexport CONFIG_UK_ARCH\t?= $(shell echo \"$(HOSTARCH)\" | \\\n\t\t   $(SED) -e \"s/-.*//\" \\\n\t\t       -e 's//\\1/' \\\n\t\t       -e 's/i.86/x86/' \\\n\t\t       -e 's/sun4u/sparc64/' \\\n\t\t       -e 's/arm64.*/arm64/' -e 's/aarch64.*/arm64/' \\\n\t\t       -e '/arm64/! s/arm.*/arm/' \\\n\t\t       -e 's/sa110/arm/' \\\n\t\t       -e 's/ppc64/powerpc64/' \\\n\t\t       -e 's/ppc/powerpc/' \\\n\t\t       -e 's/macppc/powerpc/' \\\n\t\t       -e 's/sh.*/sh/' )\nendif\nendif\noverride ARCH := $(CONFIG_UK_ARCH)\nexport CONFIG_UK_ARCH ARCH\n\nexport UK_FAMILY ?= $(shell echo \"$(CONFIG_UK_ARCH)\" | \\\n\t\t   $(SED) -e \"s/-.*//\" \\\n\t\t       -e 's//\\1/' \\\n\t\t       -e 's/x86.*/x86/' \\\n\t\t       -e 's/sparc64/sparc/' \\\n\t\t       -e 's/arm.*/arm/' \\\n\t\t       -e 's/powerpc.*/powerpc/' \\\n\t\t       -e 's/sh.*/sh/' )\n\n\n# Quick-check if architecture exists\nifeq ($(filter $(null_targets),$(MAKECMDGOALS)),)\nifeq ($(wildcard $(CONFIG_UK_BASE)/arch/$(UK_FAMILY)/$(ARCH)/Makefile.uk),)\n$(error Target architecture ($(ARCH)) is currently not supported (could not find $(CONFIG_UK_BASE)/arch/$(UK_FAMILY)/$(ARCH)/Makefile.uk).)\nendif\n\nifeq ($(wildcard $(CONFIG_UK_BASE)/arch/$(UK_FAMILY)/$(ARCH)/Compiler.uk),)\n$(error Target architecture ($(ARCH)) is currently not supported (could not find $(CONFIG_UK_BASE)/arch/$(UK_FAMILY)/$(ARCH)/Compiler.uk).)\nendif\nendif\n\n################################################################################\n# Compiler and linker tools\n################################################################################\nifeq ($(sub_make_exec), 1)\nifeq ($(UK_HAVE_DOT_CONFIG),y)\n# Hide troublesome environment variables from sub processes\nunexport CONFIG_CROSS_COMPILE\nunexport CONFIG_LLVM_TARGET_ARCH\nunexport CONFIG_COMPILER\n#unexport CC\n#unexport LD\n#unexport AR\n#unexport CXX\n#unexport CPP\nunexport RANLIB\nunexport CFLAGS\nunexport CXXFLAGS\nunexport ARFLAGS\nunexport GREP_OPTIONS\nunexport TAR_OPTIONS\nunexport CONFIG_SITE\nunexport QMAKESPEC\nunexport TERMINFO\nunexport MACHINE\n#unexport O\n\n# CONFIG_CROSS_COMPILE specify the prefix used for all executables used\n# during compilation. Only gcc and related bin-utils executables\n# are prefixed with $(CONFIG_CROSS_COMPILE).\n# CONFIG_CROSS_COMPILE can be set on the command line\n# make CROSS_COMPILE=ia64-linux-\n# Alternatively CONFIG_CROSS_COMPILE can be set in the environment.\n# A third alternative is to store a setting in .config so that plain\n# \"make\" in the configured kernel build directory always uses that.\n# Default value for CONFIG_CROSS_COMPILE is not to prefix executables\n# Note: Some architectures assign CONFIG_CROSS_COMPILE in their arch/*/Makefile.uk\n\nifneq (\"$(origin CROSS_COMPILE)\",\"undefined\")\nCONFIG_CROSS_COMPILE := $(CROSS_COMPILE:\"%\"=%)\nendif\n\nifneq (\"$(origin LLVM_TARGET_ARCH)\",\"undefined\")\nCONFIG_LLVM_TARGET_ARCH := $(LLVM_TARGET_ARCH:\"%\"=%)\nendif\n\nifneq (\"$(origin COMPILER)\",\"undefined\")\n\tCONFIG_COMPILER := $(COMPILER:\"%\"=%)\nelse\n\tCONFIG_COMPILER := gcc\nendif\n\n\n$(eval $(call verbose_include,$(CONFIG_UK_BASE)/arch/$(UK_FAMILY)/Compiler.uk))\n\n# Make variables (CC, etc...)\nLD\t\t:= $(CONFIG_CROSS_COMPILE)$(CONFIG_COMPILER)\nCC\t\t:= $(CONFIG_CROSS_COMPILE)$(CONFIG_COMPILER)\nCPP\t\t:= $(CC)\nCXX\t\t:= $(CPP)\nGOC\t\t:= $(CONFIG_CROSS_COMPILE)gccgo\n# We use rustc because the gcc frontend is experimental and missing features such\n# as borrowing checking\nifneq (\"$(origin LLVM_TARGET_ARCH)\",\"undefined\")\nRUSTC\t\t:= rustc --target=$(CONFIG_LLVM_TARGET_ARCH)\nelse\nRUSTC\t\t:= rustc\nendif\nAS\t\t:= $(CC)\nAR\t\t:= $(CONFIG_CROSS_COMPILE)gcc-ar\nNM\t\t:= $(CONFIG_CROSS_COMPILE)gcc-nm\nREADELF\t\t:= $(CONFIG_CROSS_COMPILE)readelf\nSTRIP\t\t:= $(CONFIG_CROSS_COMPILE)strip\nOBJCOPY\t\t:= $(CONFIG_CROSS_COMPILE)objcopy\nOBJDUMP\t\t:= $(CONFIG_CROSS_COMPILE)objdump\nM4\t\t:= m4\nAR\t\t:= ar\nCAT\t\t:= cat\n# Prefer using GNU AWK because of provided error messages on script errors\nifeq (, $(shell which gawk))\nAWK\t\t:= awk\nelse\nAWK\t\t:= gawk --lint\nendif\nifeq ($(HOSTOSENV),Darwin)\nGREP\t\t:= ggrep\nREADLINK\t:= greadlink\nDIRNAME\t\t:= gdirname\nelse\nGREP\t\t:= grep\nREADLINK\t:= readlink\nDIRNAME\t\t:= dirname\nendif\nYACC\t\t:= bison\nLEX     \t:= flex\nPATCH\t\t:= patch\nGZIP\t\t:= gzip\nTAR\t\t:= tar\nUNZIP\t\t:= unzip -qq -u\nGIT\t\t:= git\nifneq (,$(findstring Wget2,$(shell wget --version)))\nWGET := wget -q --force-progress --progress=bar\nelse\nWGET := wget -q --show-progress --progress=bar\nendif\nPYTHON          := python3\nSHA1SUM\t\t:= sha1sum -b\nSHA256SUM\t:= sha256sum -b\nSHA512SUM\t:= sha512sum -b\nMD5SUM\t\t:= md5sum -b\nDTC\t\t:= dtc\n# Time requires the full path so that subarguments are handled correctly\nTIME\t\t:= $(shell which time)\nLIFTOFF\t\t:= liftoff -e -s\noverride ARFLAGS:= rcs\n\nCC_INFO := $(shell $(CONFIG_UK_BASE)/support/build/cc-version.sh $(CC))\nCC_NAME := $(word 1,$(CC_INFO))\n\n# Retrieve GCC major and minor number from CC_VERSION. They would be used\n# to select correct optimization parameters for target CPUs.\nCC_VER_MAJOR   := $(word 2,$(subst ., ,$(CC_INFO)))\nCC_VER_MINOR   := $(word 3,$(subst ., ,$(CC_INFO)))\nCC_VERSION     := $(CC_VER_MAJOR).$(CC_VER_MINOR)\n\nASFLAGS\t\t+= -DCC_VERSION=$(CC_VERSION)\nCFLAGS\t\t+= -DCC_VERSION=$(CC_VERSION)\nCXXFLAGS\t+= -DCC_VERSION=$(CC_VERSION)\nGOCFLAGS\t+= -DCC_VERSION=$(CC_VERSION)\n\n# Add user supplied flags as the last assignments\nASFLAGS  += $(UK_ASFLAGS)\nCFLAGS   += $(UK_CFLAGS)\nCXXFLAGS += $(UK_CXXFLAGS)\nGOCFLAGS += $(UK_GOCFLAGS)\nLDFLAGS  += $(UK_LDFLAGS)\n\nASINCLUDES            += -I$(UK_GENERATED_INCLUDES)\nCINCLUDES             += -I$(UK_GENERATED_INCLUDES)\nCXXINCLUDES           += -I$(UK_GENERATED_INCLUDES)\nGOCINCLUDES           += -I$(UK_GENERATED_INCLUDES)\n\n################################################################################\n# Build rules\n################################################################################\n# external application\nifneq ($(CONFIG_UK_BASE),$(CONFIG_UK_APP))\n$(eval $(call import_lib,$(CONFIG_UK_APP)));\nendif\n\n# internal libraries\n$(eval $(call verbose_include,$(CONFIG_UK_BASE)/lib/Makefile.uk))\n\n# external libraries\n$(foreach ITR,$(ELIB_DIR), \\\n\t$(eval $(call import_lib,$(ITR))); \\\n)\n# architecture library\n$(eval $(call import_lib,$(CONFIG_UK_BASE)/arch/$(UK_FAMILY)))\n# drivers\n$(eval $(call verbose_include,$(CONFIG_UK_BASE)/drivers/Makefile.uk))\n# internal platform libraries\n$(eval $(call verbose_include,$(CONFIG_UK_BASE)/plat/Makefile.uk))\n# external platform libraries\n# NOTE: We include them after internal platform libs so that also base variables\n#       provided with /plat/Makefile.uk are populated\n$(foreach ITR,$(EPLAT_DIR), \\\n\t$(eval $(call import_lib,$(ITR))); \\\n)\n$(eval $(call verbose_include,$(CONFIG_UK_BASE)/Makefile.uk)) # Unikraft base\n\nifeq ($(call have_clang),y)\n$(call error_if_clang_version_lt,9,0)\nendif\n\nifeq ($(call have_gcc),y)\n$(call error_if_gcc_version_lt,7,0)\nendif\n\nifneq ($(words $(call qstrip,$(UK_PLATS) $(UK_PLATS-y))),1)\n$(error Select exactly one target platform in the configuration!)\nendif\nifneq ($(CONFIG_HAVE_BOOTENTRY),y)\n$(error You did not select a library that handles bootstrapping! (e.g., ukboot))\nendif\n\nifeq ($(CONFIG_OPTIMIZE_LTO), y)\nifeq ($(call have_gcc),y)\nifneq ($(call gcc_version_ge,6,1),y)\n$(error Your gcc version does not support incremental link time optimisation)\nendif\nendif\nendif\n\n# Generate build rules\n$(eval $(call verbose_include,$(CONFIG_UK_BASE)/support/build/Makefile.build))\n$(foreach _M,$(wildcard $(addsuffix Makefile.build,\\\n\t   $(CONFIG_UK_BASE)/lib/*/ $(CONFIG_UK_BASE)/plat/*/ \\\n\t   $(addsuffix /,$(ELIB_DIR)) $(APP_DIR)/)), \\\n\t\t$(eval $(call verbose_include,$(_M))) \\\n)\n\n# Include source dependencies\nifneq ($(call qstrip,$(UK_DEPS) $(UK_DEPS-y)),)\n$(foreach _D,$(UK_DEPS) $(UK_DEPS-y),\\\n $(eval $(call verbose_include_try,$(_D))) \\\n)\nendif\n\n# include Makefile for platform linking (`Linker.uk`)\n$(foreach plat,$(UK_PLATS),$(eval $(call import_linker,$(plat))))\n\n.PHONY: prepare preprocess image libs objs clean\n\nfetch: $(UK_FETCH) $(UK_FETCH-y)\n\n# Copy current configuration in order to detect changes\n$(UK_CONFIG_OUT): $(UK_CONFIG)\n\t$(call verbose_cmd,CP,config, \\\n\t\tcmp -s $^ $@; if [ $$? -ne 0 ]; then cp $^ $@; fi)\n\nprepare: $(KCONFIG_AUTOHEADER) $(UK_CONFIG_OUT) $(UK_PREPARE) $(UK_PREPARE-y)\nprepare: $(UK_FIXDEP) | fetch\n\npreprocess: $(UK_PREPROCESS) $(UK_PREPROCESS-y) | prepare\n\nobjs: $(UK_OBJS) $(UK_OBJS-y)\n\nlibs: $(UK_ALIBS) $(UK_ALIBS-y) $(UK_OLIBS) $(UK_OLIBS-y)\n\nimages: $(UK_DEBUG_IMAGES) $(UK_DEBUG_IMAGES-y) $(UK_IMAGES) $(UK_IMAGES-y)\n\nGDB_HELPER_LINKS := $(addsuffix .gdb.py,$(UK_DEBUG_IMAGES) $(UK_DEBUG_IMAGES-y))\n$(GDB_HELPER_LINKS):\n\t$(call verbose_cmd,LN,$(notdir $@),$(HOSTLN) -sf uk-gdb.py $@)\n\nSCRIPTS_DIR_BACKSLASHED = $(subst /,\\/,$(SCRIPTS_DIR))\n$(BUILD_DIR)/uk-gdb.py: $(SCRIPTS_DIR)/uk-gdb.py\n\t$(call verbose_cmd,GEN,$(notdir $@), \\\n\tsed '/scripts_dir = / s/os.path.dirname(os.path.realpath(__file__))/\"$(SCRIPTS_DIR_BACKSLASHED)\"/g' $^ > $@)\n\ngdb_helpers: $(GDB_HELPER_LINKS) $(BUILD_DIR)/uk-gdb.py\n\nall: images gdb_helpers\n################################################################################\n# Cleanup rules\n################################################################################\n# Generate cleaning rules\n$(eval $(call verbose_include,$(CONFIG_UK_BASE)/support/build/Makefile.clean))\n\nclean-libs: $(addprefix clean-,\\\n\t$(foreach P,$(UK_PLATS) $(UK_PLATS-y),\\\n\t$(if $(call qstrip,$($(call uc,$(P))_LIBS) $($(call uc,$(P))_LIBS-y)),\\\n\t$(foreach L,$($(call uc,$(P))_LIBS) $($(call uc,$(P))_LIBS-y), $(L)))) $(UK_LIBS) $(UK_LIBS-y))\n\nclean: clean-libs\n\t$(call verbose_cmd,CLEAN,build/,$(RM) \\\n\t\t$(UK_CONFIG_OUT) \\\n\t\t$(call build_clean,\\\n\t\t\t$(UK_DEBUG_IMAGES) $(UK_DEBUG_IMAGES-y) \\\n\t\t\t$(UK_IMAGES) $(UK_IMAGES-y)) \\\n\t\t$(GDB_HELPER_LINKS) $(BUILD_DIR)/uk-gdb.py \\\n\t\t$(UK_CLEAN) $(UK_CLEAN-y))\n\nelse # !($(UK_HAVE_DOT_CONFIG),y)\n\n\n$(filter %config,$(MAKECMDGOALS)): $(BUILD_DIR)/Makefile\n\n## ukconfig\nukconfig: $(BUILD_DIR)/Makefile menuconfig\n\nall: ukconfig\n\n.PHONY: prepare image libs objs clean-libs clean ukconfig\n\nfetch: ukconfig\n\nprepare: ukconfig\n\npreprocess: ukconfig\n\nobjs: ukconfig\n\nlibs: ukconfig\n\nimages: ukconfig\n\nclean-libs clean:\n\t$(error Do not know which files to clean without having a configuration. Did you mean 'properclean' or 'distclean'?)\n\nendif\n\n.PHONY: print-vars print-libs print-objs print-srcs print-loc help\n\n# Configuration\n# ---------------------------------------------------------------------------\nHOSTCFLAGS = $(CFLAGS_FOR_BUILD)\nexport HOSTCFLAGS\n\nifeq ($(HOSTOSENV),Linux)\nKCONFIG_TOOLS = conf mconf gconf nconf qconf\nKCONFIG_TOOLS := $(addprefix $(KCONFIG_DIR)/,$(KCONFIG_TOOLS))\n\n$(KCONFIG_TOOLS):\n\t$(call verbose_cmd,MKDIR,lxdialog,$(MKDIR) -p $(@D)/lxdialog)\n\t$(call verbose_cmd,MAKE,$(notdir $(CONFIG)),$(MAKE) \\\n\t    --no-print-directory \\\n\t    CC=\"$(HOSTCC_NOCCACHE)\" HOSTCC=\"$(HOSTCC_NOCCACHE)\" \\\n\t    YACC=\"$(YACC)\" LEX=\"$(LEX)\" \\\n\t    obj=$(@D) -C $(CONFIG) -f Makefile.br $(@))\nendif\n\n$(UK_FIXDEP):\n\t$(call verbose_cmd,MAKE,$(notdir $(@)),$(MAKE) \\\n\t    --no-print-directory \\\n\t    CC=\"$(HOSTCC_NOCCACHE)\" HOSTCC=\"$(HOSTCC_NOCCACHE)\" \\\n\t    obj=$(@D) -C $(CONFIG) -f Makefile.br $(@))\n\nDEFCONFIG = $(call qstrip,$(UK_DEFCONFIG))\n\n# We don't want to fully expand UK_DEFCONFIG here, so Kconfig will\n# recognize that if it's still at its default $(CONFIG_DIR)/defconfig\nCOMMON_CONFIG_ENV = \\\n\tCONFIG_=\"CONFIG_\" \\\n\tKCONFIG_CONFIG=\"$(UK_CONFIG)\" \\\n\tKCONFIG_AUTOCONFIG=\"$(KCONFIG_AUTOCONFIG)\" \\\n\tKCONFIG_AUTOHEADER=\"$(KCONFIG_AUTOHEADER)\" \\\n\tKCONFIG_TRISTATE=\"$(KCONFIG_TRISTATE)\" \\\n\tHOST_ARCH=\"$(HOSTARCH)\" \\\n\tBUILD_DIR=\"$(BUILD_DIR)\" \\\n\tUK_BASE=\"$(CONFIG_UK_BASE)\" \\\n\tUK_APP=\"$(CONFIG_UK_APP)\" \\\n\tUK_CONFIG=\"$(UK_CONFIG)\" \\\n\tUK_FULLVERSION=\"$(UK_FULLVERSION)\" \\\n\tUK_CODENAME=\"$(UK_CODENAME)\" \\\n\tUK_ARCH=\"$(CONFIG_UK_ARCH)\" \\\n\tKCONFIG_DIR=\"$(KCONFIG_DIR)\" \\\n\tKCONFIG_LIB_BASE=\"$(KCONFIG_LIB_BASE)\" \\\n\tKCONFIG_ELIB_DIRS=\"$(KCONFIG_ELIB_DIRS)\" \\\n\tKCONFIG_PLAT_BASE=\"$(KCONFIG_PLAT_BASE)\" \\\n\tKCONFIG_EPLAT_DIRS=\"$(KCONFIG_EPLAT_DIRS)\" \\\n\tKCONFIG_DRIV_BASE=\"$(KCONFIG_DRIV_BASE)\" \\\n\tKCONFIG_EAPP_DIR=\"$(KCONFIG_EAPP_DIR)\" \\\n\tKCONFIG_EXCLUDEDIRS=\"$(KCONFIG_EXCLUDEDIRS)\" \\\n\tUK_NAME=\"$(CONFIG_UK_NAME)\"\n\nPHONY += scriptconfig scriptsyncconfig iscriptconfig kmenuconfig guiconfig \\\n\t\t dumpvarsconfig\n\nKPYTHON := PYTHONPATH=$(UK_CONFIGLIB):$$PYTHONPATH $(PYTHON)\n\nifneq ($(filter scriptconfig,$(MAKECMDGOALS)),)\nifndef SCRIPT\n$(error Use \"make scriptconfig SCRIPT=<path to script> [SCRIPT_ARG=<argument>]\")\nendif\nendif\n\nscriptconfig:\n\t$(Q)$(COMMON_CONFIG_ENV) $(KPYTHON) $(SCRIPT) $(Kconfig) $(if $(SCRIPT_ARG),\"$(SCRIPT_ARG)\")\n\niscriptconfig:\n\t$(Q)$(COMMON_CONFIG_ENV) $(KPYTHON) -i -c \\\n\t  \"import kconfiglib; \\\n\t   kconf = kconfiglib.Kconfig('$(UK_CONFIG)'); \\\n\t   print('A Kconfig instance \\'kconf\\' for the architecture $(ARCH) has been created.')\"\n\nkmenuconfig:\n\t@$(COMMON_CONFIG_ENV) $(KPYTHON) $(CONFIGLIB)/menuconfig.py \\\n\t\t$(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\nscriptsyncconfig:\n\t@$(COMMON_CONFIG_ENV) $(KPYTHON) $(CONFIGLIB)/genconfig.py \\\n\t\t--sync-deps=$(BUILD_DIR)/include/config \\\n\t\t--header-path=$(KCONFIG_AUTOHEADER) $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\nguiconfig:\n\t@$(COMMON_CONFIG_ENV) $(KPYTHON) $(CONFIGLIB)/guiconfig.py $(CONFIG_CONFIG_IN)\n\t@$(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\ndumpvarsconfig:\n\t$(Q)$(COMMON_CONFIG_ENV) $(KPYTHON) $(CONFIGLIB)/examples/dumpvars.py $(CONFIG_CONFIG_IN)\n\t@$(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\nifneq ($(HOSTOSENV),Linux)\n# Use libkconfiglib for non-Linux hosts\n# Compatibility wrappers:\nmenuconfig: kmenuconfig\nnconfig: kmenuconfig\ngconfig: guiconfig\nxconfig: guiconfig\n\nallyesconfig:\n\t@$(COMMON_CONFIG_ENV) $(KPYTHON) $(CONFIGLIB)/allyesconfig.py $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\nallnoconfig:\n\t@$(COMMON_CONFIG_ENV) $(KPYTHON) $(CONFIGLIB)/allnoconfig.py $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\ndefconfig:\n\t@$(COMMON_CONFIG_ENV) $(KPYTHON) $(CONFIGLIB)/defconfig.py --kconfig $(CONFIG_CONFIG_IN) $(DEFCONFIG)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\nsavedefconfig:\n\t@$(COMMON_CONFIG_ENV) $(KPYTHON) $(CONFIGLIB)/savedefconfig.py --kconfig $(CONFIG_CONFIG_IN) --out $(DEFCONFIG)\nifeq ($(HOSTARCH),$(CONFIG_UK_ARCH))\n\t@# Make sure arch is stored in the file even if arch matches between host and config\n\t@echo \"$(call ukarch_str2cfg,$(CONFIG_UK_ARCH))=y\" >> $(DEFCONFIG)\nendif\n\t@echo \"CONFIG_UK_NAME=\\\"$(CONFIG_UK_NAME)\\\"\" >> $(DEFCONFIG)\n\noldconfig:\n\t@$(COMMON_CONFIG_ENV) $(KPYTHON) $(CONFIGLIB)/oldconfig.py $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\n# Regenerate $(KCONFIG_AUTOHEADER) whenever $(UK_CONFIG) changed\n$(KCONFIG_AUTOHEADER): $(UK_CONFIG_OUT)\n\t$(call verbose_cmd,GEN,config.h, \\\n\t\t$(COMMON_CONFIG_ENV) $(KPYTHON) $(CONFIGLIB)/genconfig.py \\\n\t\t\t--header-path $(KCONFIG_AUTOHEADER) $(CONFIG_CONFIG_IN))\nelse\n# Use traditional KConfig system on Linux\nxconfig: $(KCONFIG_DIR)/qconf\n\t@$(COMMON_CONFIG_ENV) $< $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\ngconfig: $(KCONFIG_DIR)/gconf\n\t@$(COMMON_CONFIG_ENV) srctree=$(CONFIG_UK_BASE) $< $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\nmenuconfig: $(KCONFIG_DIR)/mconf\n\t@$(COMMON_CONFIG_ENV) $< $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\nnconfig: $(KCONFIG_DIR)/nconf\n\t@$(COMMON_CONFIG_ENV) $< $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\n# For the config targets that automatically select options, we pass\n# SKIP_LEGACY=y to disable the legacy options. However, in that case\n# no values are set for the legacy options so a subsequent oldconfig\n# will query them. Therefore, run an additional olddefconfig.\noldconfig: $(KCONFIG_DIR)/conf\n\t@$(COMMON_CONFIG_ENV) $< --oldconfig $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\nrandconfig: $(KCONFIG_DIR)/conf\n\t@$(COMMON_CONFIG_ENV) SKIP_LEGACY=y $< --randconfig $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $< --olddefconfig $(CONFIG_CONFIG_IN) >/dev/null\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\nallyesconfig: $(KCONFIG_DIR)/conf\n\t@$(COMMON_CONFIG_ENV) SKIP_LEGACY=y $< --allyesconfig $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $< --olddefconfig $(CONFIG_CONFIG_IN) >/dev/null\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\nallnoconfig: $(KCONFIG_DIR)/conf\n\t@$(COMMON_CONFIG_ENV) SKIP_LEGACY=y $< --allnoconfig $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $< --olddefconfig $(CONFIG_CONFIG_IN) >/dev/null\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\nsyncconfig: $(KCONFIG_DIR)/conf\n\t@$(COMMON_CONFIG_ENV) $< --syncconfig $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\nolddefconfig: $(KCONFIG_DIR)/conf\n\t@$(COMMON_CONFIG_ENV) $< --olddefconfig $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\ndefconfig: $(KCONFIG_DIR)/conf\n\t@$(COMMON_CONFIG_ENV) $< --defconfig$(if $(DEFCONFIG),=$(DEFCONFIG)) $(CONFIG_CONFIG_IN)\n\t@$(COMMON_CONFIG_ENV) $(SCRIPTS_DIR)/configupdate $(UK_CONFIG) $(UK_CONFIG_OUT)\n\nsavedefconfig: $(KCONFIG_DIR)/conf\n\t@$(COMMON_CONFIG_ENV) $< \\\n\t\t--savedefconfig=$(if $(DEFCONFIG),$(DEFCONFIG),$(CONFIG_DIR)/defconfig) \\\n\t\t$(CONFIG_CONFIG_IN)\nifeq ($(HOSTARCH),$(CONFIG_UK_ARCH))\n\t@# Make sure arch is stored in the file even if arch matches between host and config\n\t@echo \"$(call ukarch_str2cfg,$(CONFIG_UK_ARCH))=y\" >> \\\n\t\t$(if $(DEFCONFIG),$(DEFCONFIG),$(CONFIG_DIR)/defconfig)\nendif\n\t@echo \"CONFIG_UK_NAME=\\\"$(CONFIG_UK_NAME)\\\"\" >> \\\n\t\t$(if $(DEFCONFIG),$(DEFCONFIG),$(CONFIG_DIR)/defconfig)\n\n.PHONY: defconfig savedefconfig\n\n# Regenerate $(KCONFIG_AUTOHEADER) whenever $(UK_CONFIG) changed\n$(KCONFIG_AUTOHEADER): $(UK_CONFIG_OUT) $(KCONFIG_DIR)/conf\n\t$(call verbose_cmd,GEN,config.h, \\\n\t\t$(COMMON_CONFIG_ENV) $(KCONFIG_DIR)/conf \\\n\t\t\t--syncconfig $(CONFIG_CONFIG_IN))\nendif\n\n\n# Misc stuff\n# ---------------------------------------------------------------------------\nprint-loc: images\n\t@$(info [LoC stats])\n\t@$(foreach I,$(UK_DEBUG_IMAGES) $(UK_DEBUG_IMAGES-y),\\\n\t\t$(info $(shell basename $(I) .dbg) has $(call measure_loc,$(I)) lines of code))\n\nprint-vars:\n\t@$(foreach V, \\\n\t\t$(sort $(if $(VARS),$(filter $(VARS),$(.VARIABLES)),$(.VARIABLES))), \\\n\t\t$(if $(filter-out environment% default automatic,$(origin $V)), \\\n\t\t$(if $(filter simple,$(flavor $V)), \\\n\t\t\t$(info [$(origin $V)] $V := $(value $V)), \\\n\t\t\t$(info [$(origin $V)] $V = <$(flavor $V)>))))\n\nprint-version:\n\t@echo $(UK_FULLVERSION)\n\nifeq ($(UK_HAVE_DOT_CONFIG),y)\nprint-libs:\n\t@echo \t$(foreach P,$(UK_PLATS) $(UK_PLATS-y),\\\n\t\t$(if $(call qstrip,$($(call uc,$(P))_LIBS) $($(call uc,$(P))_LIBS-y)),\\\n\t\t$(foreach L,$($(call uc,$(P))_LIBS) $($(call uc,$(P))_LIBS-y), \\\n\t\t$(if $(call qstrip,$($(call vprefix_lib,$(L),SRCS)) $($(call vprefix_lib,$(L),SRCS-y))), \\\n\t\t$(L) \\\n\t\t)))) \\\n\t\t$(UK_LIBS) $(UK_LIBS-y)\n\nprint-lds:\n\t@echo -e \\\n\t\t$(foreach P,$(UK_PLATS) $(UK_PLATS-y),\\\n\t\t$(if $(call qstrip,$($(call uc,$(P))_LIBS) $($(call uc,$(P))_LIBS-y)),\\\n\t\t$(foreach L,$($(call uc,$(P))_LIBS) $($(call uc,$(P))_LIBS-y), \\\n\t\t$(if $(call qstrip,$($(call vprefix_lib,$(L),LDS)) $($(call vprefix_lib,$(L),LDS-y))), \\\n\t\t'$(L):\\n   $($(call vprefix_lib,$(L),LDS)) $($(call vprefix_lib,$(L),LDS-y))\\n'\\\n\t\t))))\\\n\t\t$(foreach L,$(UK_LIBS) $(UK_LIBS-y),\\\n\t\t$(if $(call qstrip,$($(call vprefix_lib,$(L),LDS)) $($(call vprefix_lib,$(L),LDS-y))),\\\n\t\t'$(L):\\n   $($(call vprefix_lib,$(L),LDS)) $($(call vprefix_lib,$(L),LDS-y))\\n'\\\n\t\t))\n\nprint-objs:\n\t@echo -e \\\n\t\t$(foreach P,$(UK_PLATS) $(UK_PLATS-y),\\\n\t\t$(if $(call qstrip,$($(call uc,$(P))_LIBS) $($(call uc,$(P))_LIBS-y)),\\\n\t\t$(foreach L,$($(call uc,$(P))_LIBS) $($(call uc,$(P))_LIBS-y), \\\n\t\t$(if $(call qstrip,$($(call vprefix_lib,$(L),OBJS)) $($(call vprefix_lib,$(L),OBJS-y)) \\\n\t\t       $(EACHOLIB_OBJS) $(EACHOLIB_OBJS-y)), \\\n\t\t'$(L):\\n   $($(call vprefix_lib,$(L),OBJS)) $($(call vprefix_lib,$(L),OBJS-y)) $(EACHOLIB_OBJS) $(EACHOLIB_OBJS-y)\\n'\\\n\t\t))))\\\n\t\t$(foreach L,$(UK_LIBS) $(UK_LIBS-y),\\\n\t\t$(if $(call qstrip,$($(call vprefix_lib,$(L),OBJS)) $($(call vprefix_lib,$(L),OBJS-y)) \\\n\t\t       $(EACHOLIB_OBJS) $(EACHOLIB_OBJS-y)), \\\n\t\t'$(L):\\n   $($(call vprefix_lib,$(L),OBJS)) $($(call vprefix_lib,$(L),OBJS-y)) $(EACHOLIB_OBJS) $(EACHOLIB_OBJS-y)\\n'\\\n\t\t))\n\nprint-srcs:\n\t@echo -e \\\n\t\t$(foreach P,$(UK_PLATS) $(UK_PLATS-y),\\\n\t\t$(if $(call qstrip,$($(call uc,$(P))_LIBS) $($(call uc,$(P))_LIBS-y)),\\\n\t\t$(foreach L,$($(call uc,$(P))_LIBS) $($(call uc,$(P))_LIBS-y), \\\n\t\t$(if $(call qstrip,$($(call vprefix_lib,$(L),SRCS)) $($(call vprefix_lib,$(L),SRCS-y)) \\\n\t\t       $(EACHOLIB_SRCS) $(EACHOLIB_SRCS-y)), \\\n\t\t'$(L):\\n   $($(call vprefix_lib,$(L),SRCS)) $($(call vprefix_lib,$(L),SRCS-y)) $(EACHOLIB_SRCS) $(EACHOLIB_SRCS-y)\\n'\\\n\t\t))))\\\n\t\t$(foreach L,$(UK_LIBS) $(UK_LIBS-y),\\\n\t\t$(if $(call qstrip,$($(call vprefix_lib,$(L),SRCS)) $($(call vprefix_lib,$(L),SRCS-y)) \\\n\t\t       $(EACHOLIB_SRCS) $(EACHOLIB_SRCS-y)), \\\n\t\t'$(L):\\n   $($(call vprefix_lib,$(L),SRCS)) $($(call vprefix_lib,$(L),SRCS-y)) $(EACHOLIB_SRCS) $(EACHOLIB_SRCS-y)\\n'\\\n\t\t))\nelse\nprint-libs:\n\t$(error Do not have a configuration. Please run one of the configuration targets first)\n\nprint-objs:\n\t$(error Do not have a configuration. Please run one of the configuration targets first)\n\nprint-srcs:\n\t$(error Do not have a configuration. Please run one of the configuration targets first)\nendif\nelse #!($(sub_make_exec),)\nexport sub_make_exec:=1\n\n$(BUILD_DIR)/Makefile:\n\t$(call verbose_cmd,LN,$(notdir $@),$(HOSTLN) -sf $(CONFIG_UK_BASE)/Makefile $@)\n\n.PHONY: $(BUILD_DIR)/Makefile\n\n$(filter-out _all $(BUILD_DIR)/Makefile sub-make distclean properclean help $(lastword $(MAKEFILE_LIST)), \\\n  $(MAKECMDGOALS)) all: sub-make\n\t@:\n\nsub-make: $(BUILD_DIR)/Makefile\n\t$(Q)$(MAKE) --no-print-directory CONFIG_UK_BASE=$(CONFIG_UK_BASE) -C $(BUILD_DIR) -f $(BUILD_DIR)/Makefile $(MAKECMDGOALS)\n\nendif\n\nhelp:\n\t@echo 'Cleaning:'\n\t@echo '  clean-[LIBNAME]        - delete all files created by build for a single library'\n\t@echo '                           (e.g., clean-libfdt)'\n\t@echo '  clean-libs             - delete all files created by build for all libraries'\n\t@echo '                           but keep final images and fetched files'\n\t@echo '  clean                  - delete all files created by build for all libraries'\n\t@echo '                           including final images, but keep fetched files'\n\t@echo '  properclean            - delete build directory'\n\t@echo '  distclean              - delete build directory and configurations (including .config)'\n\t@echo ''\n\t@echo 'Building:'\n\t@echo '* all                    - build everything (default target)'\n\t@echo '  images                 - build kernel images for selected platforms'\n\t@echo '  libs                   - build libraries and objects'\n\t@echo '  [LIBNAME]              - build a single library'\n\t@echo '  objs                   - build objects only'\n\t@echo '  preprocess             - run preprocessing steps'\n\t@echo '  prepare                - run preparation steps'\n\t@echo '  fetch                  - fetch, extract, and patch remote code'\n\t@echo ''\n\t@echo 'Configuration:'\n\t@echo '* menuconfig             - interactive curses-based configurator'\n\t@echo '                           (default target when no config exists)'\n\t@echo '  kmenuconfig            - interactive python based configurator'\n\t@echo '  guiconfig              - interactive python based configurator'\n\t@echo '  nconfig                - interactive ncurses-based configurator'\n\t@echo '  xconfig                - interactive Qt-based configurator'\n\t@echo '  gconfig                - interactive GTK-based configurator'\n\t@echo '  oldconfig              - resolve any unresolved symbols in .config'\nifeq ($(HOSTOSENV),Linux)\n\t@echo '  syncconfig             - Same as oldconfig, but quietly, additionally update deps'\n\t@echo '  scriptsyncconfig       - Same as oldconfig, but quietly, additionally update deps'\n\t@echo '  olddefconfig           - Same as defconfig but sets new symbols to their default value'\n\t@echo '  randconfig             - New config with random answer to all options'\nendif\n\t@echo '  defconfig              - New config with default answer to all options'\n\t@echo '                             UK_DEFCONFIG, if set, is used as input'\n\t@echo '  savedefconfig          - Save current config to UK_DEFCONFIG (minimal config)'\n\t@echo '  allyesconfig           - New config where all options are accepted with yes'\n\t@echo '  allnoconfig            - New config where all options are answered with no'\n\t@echo ''\n\t@echo 'Command-line variables:'\n\t@echo '  V=0|1|2                - 0 => quiet build (default), 1 => verbose build,'\n\t@echo '                           2 => like 1 and warn about undefined build variables'\n\t@echo '  C=[PATH]               - path to .config configuration file'\n\t@echo '  O=[PATH]               - path to build output (will be created if it does not exist)'\n\t@echo '  A=[PATH]               - path to Unikraft application'\n\t@echo '  N=[NAME]               - use NAME as image name instead the one found in the configuration'\n\t@echo '                           (note: the name in the configuration file is not overwritten)'\n\t@echo '  L=[PATH]:[PATH]:..     - colon-separated list of paths to external libraries'\n\t@echo '  P=[PATH]:[PATH]:..     - colon-separated list of paths to external platforms'\n\t@echo '  E=[PATH]:[PATH]:..     - colon-separated list of paths to libraries that shall be skipped/excluded'\n\t@echo '                           (note: `E=` acts as a global exclusion mask, which means that the mask'\n\t@echo '                            is applied to every internal and external import of libraries, platforms,'\n\t@echo '                            and applications. For example, an external library (via `L=`) will also be'\n\t@echo '                            skipped if its path was specified with `E=` at the same time.)'\n\t@echo ''\n\t@echo 'Environment variables:'\n\t@echo '  UK_ASFLAGS             - explicit Unikraft-specific additions to the assembler flags (the ASFLAGS variable is ignored)'\n\t@echo '  UK_CFLAGS              - explicit Unikraft-specific additions to the C compiler flags (the CFLAGS variable is ignored)'\n\t@echo '  UK_CXXFLAGS            - explicit Unikraft-specific additions to the C++ compiler flags (the CXXFLAGS variable is ignored)'\n\t@echo '  UK_GOCFLAGS            - explicit Unikraft-specific additions to the GO compiler flags (the GOCFLAGS variable is ignored)'\n\t@echo '  UK_LDFLAGS             - explicit Unikraft-specific additions to the linker flags (the LDFLAGS variable is ignored)'\n\t@echo '  UK_LDEPS               - explicit, space-seperated link-time file dependencies (changes to these files will trigger relinking on subsequent builds)'\n\t@echo ''\n\t@echo 'Miscellaneous:'\n\t@echo '  print-version          - print Unikraft version'\n\t@echo '  print-libs             - print library names enabled for build'\n\t@echo '  print-lds              - print linker script enabled for the build'\n\t@echo '  print-objs             - print object file names enabled for build'\n\t@echo '  print-srcs             - print source file names enabled for build'\n\t@echo '  print-vars             - prints all the variables currently defined in Makefile'\n\t@echo '  print-loc              - print Lines-of-Code statistics for built unikernel image(s)'\n\t@echo ''\n\nendif #umask\n\n# This is used to detect if a makefile macro expansion is immediate or deferred.\n# As the last statement in the main makefile, this is read in the end of the\n# immediate expansion phase. Therefore, UK_DEFERRED_EXPANSION is expanded to a\n# empty string in immediate expansion and to 'y' in a deferred expansion.\nUK_DEFERRED_EXPANSION := y\n"
        },
        {
          "name": "Makefile.uk",
          "type": "blob",
          "size": 4.6513671875,
          "content": "################################################################################\n#\n# Global Unikraft definitions\n#\n################################################################################\n\nCOMPFLAGS    += -nostdlib\nCOMPFLAGS    += -U __linux__ -U __FreeBSD__ -U __sun__ -nostdinc\nCOMPFLAGS-$(call have_gcc)\t+= -fno-tree-sra -fno-split-stack\n\nifneq ($(HAVE_STACKPROTECTOR),y)\nCOMPFLAGS    += -fno-stack-protector\nendif\nCOMPFLAGS-$(call gcc_version_ge,8,0)\t+= -fcf-protection=none\nCOMPFLAGS-$(call have_clang)\t+= -fcf-protection=none\n\nCOMPFLAGS    += -Wall -Wextra\nCOMPFLAGS-$(call have_clang)\t+= -Wdocumentation -Wdocumentation-pedantic\n\nASFLAGS      += -D__ASSEMBLY__\n\nASINCLUDES   += -I$(CONFIG_UK_BASE)/include\nCINCLUDES    += -I$(CONFIG_UK_BASE)/include\nCXXINCLUDES  += -I$(CONFIG_UK_BASE)/include\nGOCINCLUDES  += -I$(CONFIG_UK_BASE)/include\n\nRUSTCFLAGS-y\t+= --emit=obj --crate-type=rlib --edition=2018 \\\n\t\t-Cpanic=abort -Cembed-bitcode=n \\\n\t\t-Zbinary_dep_depinfo=y -Csymbol-mangling-version=v0 \\\n\t\t-Cforce-unwind-tables=n -Ccodegen-units=1 \\\n\t\t-Dunsafe_op_in_unsafe_fn -Drust_2018_idioms\n\n\nRUSTCFLAGS-$(CONFIG_OPTIMIZE_NONE)         += -Copt-level=\"0\"\nRUSTCFLAGS-$(CONFIG_OPTIMIZE_SIZE)         += -Copt-level=\"s\"\nRUSTCFLAGS-$(CONFIG_OPTIMIZE_PERF)         += -Copt-level=\"2\"\n\nRUSTCFLAGS-$(CONFIG_DEBUG_SYMBOLS_LVL0)     += -Cdebuginfo=0\nRUSTCFLAGS-$(CONFIG_DEBUG_SYMBOLS_LVL1)     += -Cdebuginfo=1\nRUSTCFLAGS-$(CONFIG_DEBUG_SYMBOLS_LVL2)     += -Cdebuginfo=2\n# NOTE: There is not level 3 in rustc\nRUSTCFLAGS-$(CONFIG_DEBUG_SYMBOLS_LVL3)     += -Cdebuginfo=2\n\n# NOTE: rustc supports LTO only with clang\nifeq ($(call have_clang),y)\nRUSTCFLAGS-$(CONFIG_OPTIMIZE_LTO)\t+= -Clinker-plugin-lto\nelse\nRUSTCFLAGS-y\t+= -Cembed-bitcode=n -Clto=n\nendif\n\nLIBLDFLAGS  += -nostdlib -Wl,-r -Wl,-d -Wl,--build-id=none -no-pie\nLIBLDFLAGS-$(call have_gcc)\t+= -nostdinc\n\nLDFLAGS\t+= -nostdlib -Wl,--build-id=none\nLDFLAGS-$(call have_gcc)\t+= -nostdinc\n\nCOMPFLAGS-$(CONFIG_OPTIMIZE_NONE)         += -O0 -fno-optimize-sibling-calls -fno-tree-vectorize\nCOMPFLAGS-$(CONFIG_OPTIMIZE_SIZE)         += -Os\nCOMPFLAGS-$(CONFIG_OPTIMIZE_PERF)         += -O2\nifeq ($(CONFIG_OPTIMIZE_NOOMITFP),y)\nCOMPFLAGS-y  += -fno-omit-frame-pointer\nelse\nCOMPFLAGS-y  += -fomit-frame-pointer -D __OMIT_FRAMEPOINTER__\nendif\n\nCOMPFLAGS-$(CONFIG_OPTIMIZE_DEADELIM)     += -fdata-sections -ffunction-sections\nLDFLAGS-$(CONFIG_OPTIMIZE_DEADELIM)       += -Wl,--gc-sections\n\n# LTO requires the compiler flags to be handed over also for linking\nCOMPFLAGS-$(CONFIG_OPTIMIZE_LTO)          += -flto\nLIBLDFLAGS-$(CONFIG_OPTIMIZE_LTO)         += $(COMPFLAGS) $(COMPFLAGS-y) $(ARCHFLAGS) $(ARCHFLAGS-y)\nLDFLAGS-$(CONFIG_OPTIMIZE_LTO)            += $(COMPFLAGS) $(COMPFLAGS-y) $(ARCHFLAGS) $(ARCHFLAGS-y)\n\nCOMPFLAGS-$(CONFIG_OPTIMIZE_WARNISERROR)  += -Werror\n\nDBGFLAGS-$(CONFIG_DEBUG_SYMBOLS_LVL0)     += -g0\nDBGFLAGS-$(CONFIG_DEBUG_SYMBOLS_LVL1)     += -g1\nDBGFLAGS-$(CONFIG_DEBUG_SYMBOLS_LVL2)     += -g2\nDBGFLAGS-$(CONFIG_DEBUG_SYMBOLS_LVL3)     += -g3\n\nCOMPFLAGS     += -D __Unikraft__ -DUK_CODENAME=\"$(UK_CODENAME)\"\nCOMPFLAGS     += -DUK_VERSION=$(UK_VERSION).$(UK_SUBVERSION)\nCOMPFLAGS     += -DUK_FULLVERSION=$(UK_FULLVERSION)\nISR_ARCHFLAGS += -D__INTERRUPTSAFE__\n\nM4FLAGS      += -D __Unikraft__ -DUK_CODENAME=\"$(UK_CODENAME)\"\nM4FLAGS      += -DUK_VERSION=$(UK_VERSION).$(UK_SUBVERSION)\n\n# If GCC supports \"-no-pie\" flag, we will add this flag to link flags to\n# override \"pie\" option, because some distributions will set\n# \"--enable-default-pie\" by default.\nifeq ($(CONFIG_OPTIMIZE_PIE),y)\nifeq ($(call have_gcc),y)\n$(call error_if_gcc_version_lt,7,0)\nendif\nCOMPFLAGS-$(call gcc_version_ge,7,0)\t+= -fPIE\nLDFLAGS-$(call gcc_version_ge,7,0)\t+= -static-pie\nLDFLAGS-$(call gcc_version_ge,7,0)\t+= -Wl,--no-dynamic-linker\nLDFLAGS-$(call gcc_version_ge,7,0)\t+= -z notext -z norelro\nCOMPFLAGS-$(call have_clang)\t+= -fPIE\nLDFLAGS-$(call have_clang)\t+= -static-pie\nLDFLAGS-$(call have_clang)\t+= -Wl,--no-dynamic-linker\nLDFLAGS-$(call have_clang)\t+= -z notext -z norelro\nSECT_STRIP_FLAGS-$(CONFIG_OPTIMIZE_PIE) += -R .dynamic\nSECT_STRIP_FLAGS-$(CONFIG_OPTIMIZE_PIE) += -R .dynsym\nSECT_STRIP_FLAGS-$(CONFIG_OPTIMIZE_PIE) += -R .dynstr\nSECT_STRIP_FLAGS-$(CONFIG_OPTIMIZE_PIE) += -R .rela.dyn\nelse\nCOMPFLAGS-$(call gcc_version_ge,6,1)\t+= -fno-PIC\nLDFLAGS-$(call gcc_version_ge,6,1)\t+= -no-pie\nCOMPFLAGS-$(call have_clang)\t+= -fno-PIC\nLDFLAGS-$(call have_clang)\t+= -no-pie\nendif\n\nifeq ($(call gcc_version_ge,10,0),y)\nCOMPFLAGS-y += -fno-tree-loop-distribute-patterns\nLIBLDFLAGS-$(CONFIG_OPTIMIZE_LTO) += -flinker-output=nolto-rel\nLDFLAGS-$(CONFIG_OPTIMIZE_LTO) += -flinker-output=nolto-rel\nendif\n\nASFLAGS-$(call have_clang)     += -mllvm -asm-macro-max-nesting-depth=1000\nCOMPFLAGS-$(call have_clang)\t+= -fno-builtin\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.630859375,
          "content": "<div align=\"center\">\n  <picture>\n    <img alt=\"Unikraft logo\" src=\"https://raw.githubusercontent.com/unikraft/docs/main/static/assets/imgs/unikraft.svg\" width=\"40%\">\n  </picture>\n</div>\n\n<br />\n\n<div align=\"center\">\n\n[![](https://img.shields.io/badge/version-v0.18.0%20(Helene)-%23EC591A)][unikraft-latest]\n[![](https://img.shields.io/static/v1?label=license&message=BSD-3&color=%23385177)][unikraft-license]\n[![](https://img.shields.io/discord/762976922531528725.svg?label=discord&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)][unikraft-discord]\n[![](https://img.shields.io/github/contributors/unikraft/unikraft)](https://github.com/unikraft/unikraft/graphs/contributors)\n[![](https://app.codacy.com/project/badge/Grade/454f62251d96413fac8024b28df2ce5b)](https://app.codacy.com/gh/unikraft/unikraft/dashboard)\n\n</div>\n\n<h1 align=\"center\">The fast, secure and open-source <br /> Unikernel Development Kit</h1>\n\n<div align=\"center\">\n\tUnikraft powers the next-generation of cloud native, containerless applications by enabling you to radically customize and build custom OS/kernels; unlocking best-in-class performance, security primitives and efficiency savings.\n</div>\n\n<br />\n\n<p align=\"center\">\n\t<a href=\"https://unikraft.org\">Homepage</a>\n\t·\n\t<a href=\"https://unikraft.org/docs\">Documentation</a>\n\t·\n\t<a href=\"https://github.com/unikraft/unikraft/issues/new?assignees=&labels=kind%2Fbug&projects=&template=bug_report.yml\">Report Bug</a>\n\t·\n\t<a href=\"https://github.com/unikraft/unikraft/issues/new?assignees=&labels=kind%2Fenhancement&projects=&template=project_backlog.yml\">Feature Request</a>\n\t·\n\t<a href=\"https://unikraft.org/discord\">Join Our Discord</a>\n\t·\n\t<a href=\"https://x.com/UnikraftSDK\">X.com</a>\n</p>\n\n<br />\n\n<div align=\"center\">\n\t<img src=\"https://unikraft.org/assets/imgs/monkey-business.gif\" width=\"80%\" />\n</div>\n\n<br />\n\n## Features\n\n- **Instantaneous Cold-boots** ⚡\n   - While Linux-based systems might take tens of seconds to boot, Unikraft will be up in milliseconds.\n\n- **Modular Design** 🧩\n   - Unikraft boasts a modular design approach, allowing developers to include only necessary components, resulting in leaner and more efficient operating system configurations.\n\n- **Optimized for Performance** 🚀\n   - Built for performance, Unikraft minimizes overheads and leverages platform-specific optimizations, ensuring applications achieve peak performance levels.\n\n- **Flexible Architecture Support** 💻\n   - With support for multiple hardware architectures including x86, ARM, (and soon [RISC-V](https://riscv.org/)), Unikraft offers flexibility in deployment across diverse hardware platforms.\n\n- **Broad Language and Application Support** 📚\n\n  - Unikraft offers extensive support for multiple programming languages and hardware architectures, providing developers with the flexibility to choose the tools and platforms that best suit your needs.\n\n- **Cloud and Edge Compatibility** ☁️\n   - Designed for cloud and edge computing environments, Unikraft enables seamless deployment of applications across distributed computing infrastructures.\n\n- **Reduced Attack Surface** 🛡️\n   - By selectively including only necessary components, Unikraft reduces the attack surface, enhancing security in deployment scenarios.  Unikraft also includes many [additional modern security features][unikraft-security-features].\n\n- **Developer Friendly** 🛠️\n   - Unikraft's intuitive toolchain and user-friendly interface simplify the development process, allowing developers to focus on building innovative solutions.\n\n- **Efficient Resource Utilization** 🪶\n   - Unikraft optimizes resource utilization, leading to smaller footprints (meaning higher server saturation) and improved efficiency in resource-constrained environments.\n\n- **Community-Driven Development** 👥\n    - Unikraft is an open-source project driven by a vibrant community of over 100 developers, fostering collaboration and innovation from industry and academia.\n\n\n## Quick Start\n\nInstall the companion command-line client [`kraft`][kraft]:\n\n```shell\n# Install on macOS, Linux, and Windows:\ncurl -sSfL https://get.kraftkit.sh | sh\n```\n\n> See [additional installation instructions][unikraft-cli-install].\n\nRun your first ultra-lightweight unikernel virtual machine:\n\n```\nkraft run unikraft.org/helloworld:latest\n```\n\nView its status and manage multiple instances:\n\n```\nkraft ps --all\n```\n\nView the community image catalog in your CLI for more apps:\n\n```\nkraft pkg ls --update --apps\n```\n\nOr browse through one of the many [starter example projects][unikraft-catalog-examples].\n\n\n## Why Unikraft?\n\nUnikraft is a radical, yet Linux-compatible with effortless tooling, technology for running applications as highly optimized, lightweight and single-purpose virtual machines (known as unikernels).\n\nIn today's computing landscape, efficiency is paramount. Unikraft addresses this need with its modular design, enabling developers to create customized, lightweight operating systems tailored to specific application requirements. By trimming excess overhead and minimizing attack surfaces, Unikraft enhances security and performance in cloud and edge computing environments.\n\nUnikraft's focus on optimization ensures that applications run smoothly, leveraging platform-specific optimizations to maximize efficiency. With support for various hardware architectures and programming languages, Unikraft offers flexibility without compromising performance. In a world where resources are precious, Unikraft provides a pragmatic solution for streamlined, high-performance computing.\n\n\n## Getting Started\n\nThere are two ways to get started with Unikraft:\n\n1. (**Recommended**) Using the companion command-line tool [`kraft`][kraft] (covered below).\n\n2. Using the GNU Make-based system.  For this, see our [advanced usage guide][unikraft-guides-advanced].\n\n### Toolchain Installation\n\nYou can install the companion command-line client [`kraft`][kraft] by using the interactive installer:\n\n```shell\n# Install on macOS, Linux, and Windows:\ncurl -sSfL https://get.kraftkit.sh | sh\n```\n\n#### macOS\n\n```\nbrew install unikraft/cli/kraftkit\n```\n\n#### Debian/Fedora/RHEL/Arch/Windows\n\nUse the interactive installer or see [additional installation instructions][unikraft-cli-install].\n\n### Codespaces\n\nTry out one of the examples in GitHub Codespaces:\n\n[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)][github-codespaces-catalog]\n\n### Container Build Environment\n\nYou can use the pre-built development container environment which has all\ndependencies necessary for building and trying out Unikraft in emulation mode.\n\nAttach your working directory on your host as a mount path volume mapped to\n`/workspace`, e.g.:\n\n```shell\ndocker run --platform linux/x86_64 -it --rm -v $(pwd):/workspace --entrypoint bash kraftkit.sh/base:latest\n```\n\nThe above command will drop you into a container shell.\nType `exit` or <kbd>Ctrl</kbd>+<kbd>D</kbd> to quit.\n\n\n### Testing your Installation\n\nRunning unikernels with `kraft` is designed to be simple and familiar.\nTo test your installation of `kraft`, you can run the following:\n\n```\nkraft run unikraft.org/helloworld:latest\n```\n\n### Build your first unikernel\n\nBuilding unikernels is also designed to be straightforward.  Build your first\nunikernel by simply placing a `Kraftfile` into your repo and pointing it to your\nexisting `Dockerfile`:\n\n```yaml\nspec: v0.6\n\nruntime: base:latest\n\nrootfs: ./Dockerfile\n\ncmd: [\"/path/to/my-server-app\"]\n```\n\n> Learn more about the [syntax of a `Kraftfile`][unikraft-kraftfile-syntax].\n\nOnce done, invoke in the context of your working directory:\n\n```\nkraft run .\n```\n\n\n## Example Projects and Pre-built Images\n\nYou can find some common project examples below:\n\n| | Example |\n|-|:-|\n| ![](https://raw.githubusercontent.com/unikraft/catalog/main/.github/icons/c.svg) | [Simple \"Hello, world!\" application written in C](https://github.com/unikraft/catalog/tree/main/examples/helloworld-c) |\n| ![](https://raw.githubusercontent.com/unikraft/catalog/main/.github/icons/cpp.svg) | [Simple \"Hello, world!\" application written in C++](https://github.com/unikraft/catalog/tree/main/examples/helloworld-cpp) |\n| ![](https://raw.githubusercontent.com/unikraft/catalog/main/.github/icons/rust-white.svg#gh-dark-mode-only)![](https://raw.githubusercontent.com/unikraft/catalog/main/.github/icons/rust-black.svg#gh-light-mode-only) | [Simple \"Hello, world!\" application written in Rust built via `cargo`](https://github.com/unikraft/catalog/tree/main/examples/helloworld-rs) |\n| ![](https://raw.githubusercontent.com/unikraft/catalog/main/.github/icons/js.svg) | [Simple NodeJS 18 HTTP Web Server with `http`](https://github.com/unikraft/catalog/tree/main/examples/http-node18) |\n| ![](https://raw.githubusercontent.com/unikraft/catalog/main/.github/icons/go.svg) | [Simple Go 1.21 HTTP Web Server with `net/http`](https://github.com/unikraft/catalog/tree/main/examples/http-go1.21) |\n| ![](https://raw.githubusercontent.com/unikraft/catalog/main/.github/icons/python3.svg) | [Simple Flask 3.0 HTTP Web Server](https://github.com/unikraft/catalog/tree/main/examples/http-python3.10-flask3.0) |\n| ![](https://raw.githubusercontent.com/unikraft/catalog/main/.github/icons/python3.svg) | [Simple Python 3.10 HTTP Web Server with `http.server.HTTPServer`](https://github.com/unikraft/catalog/tree/main/examples/http-python3.10) |\n\nFind [more examples and applications in our community catalog][unikraft-catalog]!\n\n\n## Cloud Deployment\n\nThe creators of Unikraft have built [KraftCloud](https://kraft.cloud): a next generation cloud platform powered by technology intended to work in millisecond timescales.\n\n| ✅ | Millisecond Scale-to-Zero | ✅ | Millisecond Autoscale   | ✅ | Millisecond Cold Boots |\n|:-|:-|:-|:-|:-|:-|\n| ✅ | Higher Throughput         | ✅ | Much Lower Cloud Bill   | ✅ | HW-Level Isolation     |\n| ✅ | On-Prem or Cloud-Prem     | ✅ | Works with Docker & K8s | ✅ | Terraform Integration  |\n\n### [Sign-up for the beta ↗](https://console.kraft.cloud/signup)\n\n<br />\n\n## Contributing\n\nUnikraft is open-source and licensed under `BSD-3-Clause` and the copyright of its\nauthors.  If you would like to contribute:\n\n1. Read the [Developer Certificate of Origin Version 1.1](https://developercertificate.org/).\n1. Sign-off commits as described in the [Developer Certificate of Origin Version 1.1](https://developercertificate.org/).\n1. Grant copyright as detailed in the [license header](https://unikraft.org/docs/contributing/coding-conventions#license-header).\n\nThis ensures that users, distributors, and other contributors can rely on all the software related to Unikraft being contributed under the terms of the License. No contributions will be accepted without following this process.\n\nAfterwards, navigate to the [contributing guide](https://unikraft.org/docs/contributing/unikraft) to get started.\nSee also [Unikraft's coding conventions](https://unikraft.org/docs/contributing/coding-conventions).\n\n\n## Additional resources\n\n* [Quick-start guide][unikraft-gettingstarted]\n* [What is a unikernel?][unikraft-concepts]\n* [Unikraft's inherent security benefits][unikraft-security]\n* [Performance of Unikraft][unikraft-performance]\n* [POSIX-compatibility with Unikraft][unikraft-posix-compatibility]\n* [Energy efficiency with Unikraft][Unikraft-green]\n* [Unikraft Community][unikraft-community]\n* [Unikraft Documentation][unikraft-docs]\n\n\n## License\n\nUnikraft Open-Source Project source code and its affiliated projects source code is licensed under a `BSD-3-Clause` if not otherwise stated.\nFor more information, please refer to [`COPYING.md`][unikraft-license].\n\n\n## Affiliation\n\nUnikraft is a member of the [Linux Foundation](https://www.linuxfoundation.org/) and is a [Xen Project](https://xenproject.org/)  Incubator Project.\nThe Unikraft name, logo and its mascot are trademark of [Unikraft GmbH](https://unikraft.io).\n\n<br />\n\n<div align=\"left\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://www.linuxfoundation.org/hubfs/lf-stacked-white.svg\">\n    <img alt=\"LinuxFoundation logo\" src=\"https://www.linuxfoundation.org/hubfs/lf-stacked-color.svg\" width=\"20%\">\n  </picture>\n\t&nbsp;&nbsp;&nbsp;\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://xenproject.org/wp-content/uploads/sites/79/2018/09/logo_xenproject.png\">\n    <img alt=\"XenProject logo\" src=\"https://downloads.xenproject.org/Branding/Logos/Green+Black/xen_project_logo_dualcolor_767x319.png\" width=\"18%\">\n  </picture>\n</div>\n\n\n[unikraft-website]: https://unikraft.org\n[unikraft-docs]: https://unikraft.org/docs\n[unikraft-community]: https://unikraft.org/community\n[unikraft-contributing]: https://unikraft.org/docs/contributing/\n[unikraft-license]: https://github.com/unikraft/unikraft/blob/staging/COPYING.md\n[unikraft-latest]: https://github.com/unikraft/unikraft/tree/RELEASE-0.18.0\n[unikraft-gettingstarted]: http://unikraft.org/docs/getting-started\n[unikraft-concepts]: https://unikraft.org/docs/concepts/\n[unikraft-posix-compatibility]: https://unikraft.org/docs/features/posix-compatibility\n[unikraft-performance]: https://unikraft.org/docs/features/performance/\n[unikraft-security]: https://unikraft.org/docs/features/security/\n[unikraft-security-features]: https://unikraft.org/docs/concepts/security#unikraft-security-features\n[unikraft-green]: https://unikraft.org/docs/features/green/\n[unikraft-discord]: https://bit.ly/UnikraftDiscord\n[unikraft-cli-install]: https://unikraft.org/docs/cli/install\n[unikraft-catalog]: https://github.com/unikraft/catalog\n[unikraft-catalog-examples]: https://github.com/unikraft/catalog/tree/main/examples\n[unikraft-guides-advanced]: https://unikraft.org/guides/internals\n[unikraft-kraftfile-syntax]: https://unikraft.org/docs/cli/reference/kraftfile/latest\n[github-codespaces-catalog]: https://codespaces.new/unikraft/catalog\n[kraft]: https://github.com/unikraft/kraftkit\n"
        },
        {
          "name": "arch",
          "type": "tree",
          "content": null
        },
        {
          "name": "drivers",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "plat",
          "type": "tree",
          "content": null
        },
        {
          "name": "support",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.mk",
          "type": "blob",
          "size": 0.1396484375,
          "content": "UK_VERSION = 0\nUK_SUBVERSION = 18\nUK_EXTRAVERSION = 0\nUK_CODENAME = Helene\n# https://en.wikipedia.org/wiki/Moons_of_Saturn (by discovery year)\n"
        }
      ]
    }
  ]
}