{
  "metadata": {
    "timestamp": 1736710085296,
    "page": 709,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alexdobin/STAR",
      "stars": 1895,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.392578125,
          "content": "*.o\nDepend.list\n\n.project\n.kdev4/\nsource.kdev4\n\n\n# Don't track intermediary files from building the manual\nextras/doc-latex/*.aux\nextras/doc-latex/*.fdb_latexmk\nextras/doc-latex/*.fls\nextras/doc-latex/*.log\nextras/doc-latex/*.out\nextras/doc-latex/*.gz\nextras/doc-latex/*.toc\n\n# Don't track the STAR binary once it has being built\nsource/STAR\n.DS_Store\n*.xcworkspacedata\n*.pbxproj\n*.plist\n*.xcuserstate\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2666015625,
          "content": "language: cpp\ncompiler: g++\n\nbefore_install:\n- sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test\n- sudo apt-get update -qq\n\ninstall:\n- sudo apt-get install -qq g++-4.9\n- export CXX=\"g++-4.9\"\n\ngit:\n  submodules: false\nbefore_script:\n  - cd source\nscript:\n  - make STAR\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 45.9921875,
          "content": "STAR 2.7.11b --- 2024/01/24 ::: Minor in one parameter.\n===========================================\n* Replaced --quantTranscriptomeBan parameter with --quantTranscriptomeSAMoutput with more explicit naming of options. The default behavior is not affected.\n* New option: --quantTranscriptomeSAMoutput BanSingleEnd_ExtendSoftclip : prohibit single-end alignments, extend softclips, allow indels.\n\nSTAR 2.7.11a --- 2023/08/15 ::: STARdiploid\n===========================================\n* Implemented STARdiploid option --genomeTransformType Diploid that generates personal diploid genome. At the mapping step, --genomeTransformOutput options will transform the alignments into reference genome coordinates.\n* Implemented --soloCBtype String option for arbitrary cell barcode strings without passlist.\n* Implemented STARsolo BAM tag sF, which outputs the feature type and number of genes for each read.\n* Fixed a GstrandBit issue for the on-the-fly insertion of extra genomic sequences.\n* Issue #1909: Fixed a bug causing wrong sequence length in the UB SAM tag for --soloType CB_UMI_Complex.\n* Issue #1871: Fixed a bug which occurs when --soloCellReadStats Standard --twopassMode Basic are used together.\n* Issue #1763: Fixed a bug causing segnmentation fault in rare cases for 2-pass mapping.\n* Issue #1733: Fixed the issue with counting of intronicAS reads in STARsolo CellReads.stats output with --soloFeatures GeneFull_Ex50pAS option.\n* Behavior change: for --wasp* ouput, the homozygous SNVs are filtered out from the VCF file.\n\nSTAR 2.7.10b --- 2022/11/01 ::: Bug-fix release.\n===========================================================================\n* PR #1638: Increased entropy of shmKey to avoid collisions between genomes. Many thanks to Jeff Hussmann (@jeffhussmann).\n* Issue #1577: Reduced RAM usage for large STARsolo runs.\n* Issue #1612: fixed the problem with Solo.out/SJ/raw/features.tsv sym-link.\n* Issues #1469, #1602, #1608: fixed seg-faults introduced in 2.7.10a.\n* Issue #1619: fixed memory leak in SoloFeature_cellFiltering.cpp\n* Issue #1543: fixed a segfault occurring for STARsolo multimappers and large number of reads per cell.\n* Issue #1558: fixed a bug with output of GX/GN BAM tags without CB/UB.\n* Issue #1513: if --soloMultiMappers options are not requested, output \"NoMulti\" in the \"Reads Mapped to Gene: Unique+Multiple Gene\" line of the Summary.csv file.\n* Issue #719: implemented auto re-allocation of the SJ output buffer.\n* Fixed a bug with --soloMultiMappers for small number of cells cases.\n* Fixed a problem with STARsolo CellReads.stats output for no-passlist runs.\n\nSTAR 2.7.10a --- 2022/01/14 ::: New features, behavior changes and bug fixes\n===========================================================================\n**New options and features:**\n* Implemented --soloCellReadStats Standard option to output read statistics for each cell barcode.\n* Allow to define --clip5pAdapterSeq with --clipAdapterType CellRanger4 option.\n* Implemented --soloCBmatchWLtype ED2 to allow mismatches and one insertion+deletion (edit distance <=2) for --soloType CB_UMI_Complex.\n* Implemented Solo BAM tags gx gn: output ';'-separated gene IDs and names for both unique- and multi-gene reads. Note that GX/GN tags are used to output gene ID/name for unique-gene reads.\n* Implemented --soloFeatures GeneFull_ExonOverIntron GeneFull_Ex50pAS options which prioritize exonic over intronic overlaps for pre-mRNA counting.\n* Added script extras/scripts/soloCountMatrixFromBAM.awk to re-create Solo count matrix from the BAM output.\n\n**Changes in behavior:**\n* Changed --soloType CB_samTagOut behavior: if barcode cennot be matched to the passlist, CB:Z:- will be recorded (previously CB tag was absent for such reads).\n* Changed Solo summary statistics outputs in Barcodes.stats and Features.stats files.\n* Changed Solo BAM tags GX GN behavior: for missing values, \"-\" is output instead of omitting the tag.\n* Changed Solo BAM tags output for multiple --soloFeatures: now the first feature on the list is used for GX,GN,XB,UB tags.\n* Changed Solo SJ behavior: it no longer depends on the whether the alignment is concordant to a Gene.\n* Fixed a bug that resulted in slightly different solo counts if --soloFeatures Gene and GeneFull were used together with --soloCBmatchWLtype 1MM_multi_pseudocounts option.\n\n**Bug fixes**\n\n* PR #1425: Assign supplementary alignment to correct mate when mates fully overlap. Many thanks to Sebastian @suhrig for resolving this problem in the chimeric detection.\n* Fixed a bug introduced in 2.7.9a for --quantMode TranscriptomeSAM output that resulted in both mapped and unmapped output for some reads. Many thanks to Diane Trout (@Caltech) for helping to track this bug.\n* Issue #1223: fixed the N_unmapped value reported in ReadsPerGene.out.tab. The single-end (i.e. partially mapped alignment are not excluded from N_unmapped.\n* Issues #535, #1350: fixed a long-standing problem that resulted in a seg-fault whem mapping to the rabbit genome.\n* Issue #1316: fixed the seg-fault which occurred if --soloType CB_samTagOut and --soloCBwhitelist None are used together.\n* Issue #1177: throw an error in case the BAM file does not contain NH and AS tags for duplication removal jobs (--runMode inputAlignmentsFromBAM --bamRemoveDuplicatesType UniqueIdenticalNotMulti).\n* Issue #1262: fixed the bug that prevented EM matrix output when only EM option is specified in --soloMultiMappers.\n* Issue #1230: fixed the bug that caused seg-faults for --runMode soloCellFiltering runs.\n\nSTAR 2.7.9a --- 2021/05/05 ::: STARsolo updates\n=====================================================\n**Major updates:**\n* STARsolo can perform counting of multi-gene (multi-mapping) reads with --soloMultiMappers EM [Uniform Rescue PropUnqiue] options.\n* PR #1163: [SIMDe](https://github.com/simd-everywhere/simde) takes care of correct SIMD extensions based on -m g++ flag: compilation option CXXFLAGS_SIMD is preset to -mavx2, but can be to the desired target architecture. Many thanks to Michael R. Crusoe @mr-c, Evan Nemerson @nemequ and Steffen MÃ¶ller @smoe!\n\n**New options and features:**\n* New option: --soloUMIfiltering MultiGeneUMI_All to filter out all UMIs mapping to multiple genes (for uniquely mapping reads)\n* New script extras/scripts/calcUMIperCell.awk to calculate total number of UMIs per cell and filtering status from STARsolo matrix.mtx\n* New option: --outSJtype None   to omit outputting splice junctions to SJ.out.tab\n* Simple script to convert BED spliced junctions (SJ.out.tab) to BED12 for UCSC display: extras/scripts/sjBED12.awk\n* PR #1164: SOURCE_DATE_EPOCH to make the build more reproducible\n* PR #1157: print STAR command line and version information to stdout\n\n**Changes in behavior:**\n* Minor changes to statistics output (Features.csv and Summary.csv) to accomodate multimappers.\n* Modified option: ---limitIObufferSize now requires two numbers - separate sizes for input and output buffers\n\n**Bug fixes**\n* PR #1156: clean opal/opal.o\n* Issue #1166: seg-fault for STARsolo --soloCBwhitelist None (no whitelist) with barcodes longer than 16b\n* Issue #1167: STARsolo CR/UR SAM tags are scrambled in TranscriptomeSAM file Aligned.toTranscriptome.out.bam. This bug appeared in 2.7.7a.\n* Issue #1177: Added file checks for the --inputBAMfile .\n* Issue #1180: Output the actual number of alignments in NH attributes even if --outSAMmultNmax is set to a smaller value.\n* Issue #1190: Allow GX/GN output for non-STARsolo runs.\n* Issue #1220: corrupt SAM/BAM files for --outFilterType BySJout. The bug was introduced with the chnages in 2.7.7a.\n* Issue #1211: scrambled CB tags in BAM output for --soloCBwhitelist None --soloFeatures Gene GeneFull.\n* Fixed a bug causing seg-faults with --clipAdapterType CellRanger4 option.\n\nSTAR 2.7.8a --- 2021/02/20 ::: Major STARsolo updates\n=====================================================\n\n**Major new features:**\n* ```--runMode soloCellFiltering``` option for cell filtering (calling) of the raw count matrix, without re-mapping\n* Input from SAM/BAM for STARsolo, with options ```--soloInputSAMattrBarcodeSeq``` and ```--soloInputSAMattrBarcodeQual``` to specify SAM tags for the barcode read sequence and qualities\n* ```--clipAdapterType CellRanger4``` option for 5' TSO adapter and 3' polyA-tail clipping of the reads to better match CellRanger >= 4.0.0 mapping results\n* ```--soloBarcodeMate``` to support scRNA-seq protocols in which one of the paired-end mates contains both barcode sequence and cDNA (e.g. 10X 5' protocol)\n\n**New options:**\n* ```--soloCellFilter EmptyDrops_CR``` option for cell filtering (calling) nearly identical to that of CellRanger 3 and 4\n* ```--readFilesSAMattrKeep``` to specify which SAM attributes from the input SAM to keep in the output\n* ```--soloUMIdedup 1M_Directional_UMItools``` option matching the \"directional\" method in UMI-tools Smith, Heger and Sudbery (Genome Research 2017)\n* ```--soloUMIdedup NoDedup``` option for counting reads per gene, i.e. no UMI deduplication\n* ```--soloUMIdedup 1MM_CR``` option for 1 mismatch UMI deduplication similar to CellRanger >= 3.0\n* ```--soloUMIfiltering MultiGeneUMI_CR``` option filters lower-count UMIs that map to more than one gene matching CellRanger >= 3.0\n* ```--soloCBmatchWLtype 1MM_multi_Nbase_pseudocounts``` options which allows 1MM multimatching to WL for barcodes with N-bases (to better match CellRanger >= 3.0)\n\n**Changes in behavior:**\n* The UMI deduplication/correction specified in ```--soloUMIdedup``` is used for statistics output, filtering and UB tag in BAM output.\n* If UMI or CB are not defined, the UB and CB tags in BAM output will contain \"-\" (instead of missing these tags).\n* For ```--soloUMIfiltering MultiGeneUMI``` option, the reads with multi-gene UMIs will have UB tag \"-\" in BAM output.\n* Different ```--soloUMIdedup``` counts, if requested, are recorded in separate .mtx files.\n* Cell-filtered Velocyto matrices are generated using Gene cell filtering.\n* Velocyto spliced/unspliced/ambiguous counts are reported in separate .mtx files.\n* Read clipping options ```--clip*``` now require specifying the values for all read mates, even if they are identical.\n\n**Bug fixes:**\n* Issue #1107: fixed a bug causing seg-fault for ```--soloType SmartSeq``` with only one (pair of) fastq file(s)\n* Issue #1129: fixed an issue with short barcode sequences and ```--soloBarcodeReadLength 0```\n* Issue  #796: Fixed a problem with GX/GN tag output for ```--soloFeatures GeneFull``` option\n* PR: #1012: fix the bug with ```--soloCellFilter TopCells``` option\n* Fixed an issue that was causing slightly underestimated value of Q30 'Bases in RNA read' in ```Solo.out/Gene/Summary.csv```\n\nSTAR 2.7.7a --- 2020/12/28\n==========================\n**Major new feature: STARconsensus: mapping RNA-seq reads to consensus genome.**\n* Insert (consensus) variants from a VCF file into the reference genome at the genome generation step with ```--genomeTransformVCF Variants.vcf --genomeTransformType Haploid```\n* Map to the transformed genome. Alignments (SAM/BAM) and spliced junctions (SJ.out.tab) can be transformed back to the original (reference) coordinates with ```--genomeTransformOutput SAM and/or SJ```\n\n**Minor bug fixes:**\n* Deprecated ```--genomeConsensusFile``` option. Please use ```--genomeTransformVCF``` and ```--genomeTransformType``` options instead.\n* Issue #1040: fixed a bug causing rare seg-faults for paired-end --soloType SmartSeq runs.\n* Issue #1071: fixed a bug that can cause a crash for STARsolo runs with a small number of cells.\n\nSTAR 2.7.6a --- 2020/09/19\n==========================\n**Major new feature:**\nOutput multimapping chimeric alignments in BAM format using\n```--chimMultimapNmax N>1 --chimOutType WithinBAM --outSAMtype BAM Unsorted [and/or] SortedByCoordinate```\nMany thanks to Sebastian @suhrig who implemented this feature!\nMore detailed description from Sebastian in PR #802.\n\n**Minor features and bug fixes:**\n* Issue #1008: fixed the problem with Unmapped.out.mate? output for --soloType CB_samTagOut output.\n* PR # 1012: fixed the bug with --soloCellFiltering TopCells option.\n* Issue #786: fixed the bug causing the *Different SJ motifs problem* for overlapping mates.\n* Issue #945: GX/GN can be output for all --soloType, as well as for non-solo runs.\n\nSTAR 2.7.5c --- 2020/08/16\n==========================\nBug-fix release.\n----------------\n\n* Issue #988: proceed reading from GTF after a warning that exon end is past chromosome end.\n* Issue #978: fixed corrupted transcriptInfo.tab in genome generation for cases where GTF file contains extra chromosomes not present in FASTA files.\n* Issue #945: otuput GX/GN for --soloFeatures GeneFull .\n* Implemented removal of control characters from the ends of input read lines, for compatibility with files pre-processed on Windows.\n\nSTAR 2.7.5b --- 2020/08/01\n==========================\nBug-fix release.\n----------------\n\n* Issue #558: Fixed a bug that can cause a seg-fault in STARsolo run with paired-end reads that have protruding ends.\n* Issue #952: Increased the maximum allowed length of the SAM tags in the input SAM files.\n* Issue #955: fixed seg-fault-causing bug for --soloFeatures SJ option.\n* Issue #963: When reading GTF file, skip any exons that extend past the end of the chromosome, and give a warning.\n* Issue #965: output genome sizes with and without padding into Log.out.\n* Docker build: switched to debian:stable-slim in the Dockerfile.\n* --soloType CB_samTagOut now allows output of (uncorrected) UMI sequences and quality scores with SAM tags UR and UY.\n* Throw an error if FIFO file cannot be created on non-Linux partitions.\n\nSTAR 2.7.5a 2020/06/16\n======================\n**Major new features:**\n* Implemented STARsolo quantification for Smart-seq with --soloType SmartSeq option.\n* Implemented --readFilesManifest option to input a list of input read files.\n\n**Minor features and bug fixes:**\n* Change in STARsolo SJ output behavior: junctions are output even if reads do not match genes.\n* Fixed a bug with solo SJ output for large genomes.\n* N-characters in --soloAdapterSequence are not counted as mismatches, allowing for multiple adapters (e.g. ddSeq).\n* SJ.out.tab is sym-linked as features.tsv for Solo SJ output.\n* Issue #882: 3rd field is now optional in Solo Gene features.tsv with --soloOutFormatFeaturesGeneField3.\n* Issue #883: Patch for FreeBSD in SharedMemory and Makefile improvements.\n* Issue #902: Fixed seg-fault for STARsolo CB/UB SAM attributes output with --soloFeatures GeneFull --outSAMunmapped Within options.\n* Issue #934: Fixed a problem with annotated junctions that was causing very rare seg-faults.\n* Issue #936: Throw an error if an empty whitelist is provided to STARsolo.\n\nSTAR 2.7.4a 2020/06/01\n======================\nFixing multiple bugs and issues.\n--------------------------------\n\n**This version requires re-generation of the genome indexes**\n\n* Fixed the long-standing seg-fault problem for small genomes.\n* Issue #784: Fixed a seg-fault in STARsolo for cases where no cell barcodes matched whitelist.  \n* Issue #798: Fixed the problem in Solo Q30 Bases in Summary.csv average (#798).\n* Issue #843, #880: Throw an error if read file in --readFilesIn does not exist when using --readFilesCommand .\n* Issue #864: Fixed seg-fault for STARsolo runs with very small number of reads or cells.\n* Issue #881: Check if --genomeDir exists, create if necessary.\n* Issue #882: Added 3rd column \"Gene Expression\" to solo features.tsv file for better compatibility with downstream tools.\n* Issue #902: Fixed seg-fault for STARsolo CB/UB SAM attributes output with --soloFeatures GeneFull only option.\n* Issue #907: Fixed the bug that prevented output of STARsolo GX/GN tags into the Aligned.out.bam if --quantMode TranscriptomeSAM is used.\n* Issue #910: The output directory in --outFileNamePrefix is checked and created if it does not exist.\n* If solo barcode read length is not checked (--soloBarcodeReadLength 0) and it is shorter than CB+UMI length, the barcode is padded with Ns and not counted.\n* For genome generation runs, the Log.out file is moved into the --genomeDir directory.\n* Fixed a bug with solo SJ output for large genomes.\n* Implemented --seedMapMin option (previously hard-coded) to define minimum seed length.\n\nSTAR 2.7.3a 2019/10/08\n======================\nMajor new features in STARsolo\n------------------------------\n* **Output enhancements:**\n    * Summary.csv statistics output for raw and filtered cells useful for quick run quality assessment.\n    * --soloCellFilter option for basic filtering of the cells, similar to the methods used by CellRanger 2.2.x.\n* [**Better compatibility with CellRanger 3.x.x:**](docs/STARsolo.md#matching-cellranger-3xx-results)\n    * --soloUMIfiltering MultiGeneUMI option introduced in CellRanger 3.x.x for filtering UMI collisions between different genes.\n    * --soloCBmatchWLtype 1MM_multi_pseudocounts option, introduced in CellRanger 3.x.x, which slightly changes the posterior probability calculation for CB with 1 mismatch.\n* [**Velocyto spliced/unspliced/ambiguous quantification:**](docs/STARsolo.md#velocyto-splicedunsplicedambiguous-quantification)\n    * --soloFeatures Velocyto option to produce Spliced, Unspliced, and Ambiguous counts similar to the [velocyto.py](http://velocyto.org/) tool developed by [LaManno et al](https://doi.org/10.1038/s41586-018-0414-6). This option is under active development and the results may change in the future versions.\n* [**Support for complex barcodes, e.g. inDrop:**](docs/STARsolo.md#barcode-geometry)\n    * Complex barcodes in STARsolo with --soloType CB_UMI_Complex, --soloCBmatchWLtype --soloAdapterSequence, --soloAdapterMismatchesNmax, --soloCBposition,--soloUMIposition\n* [**BAM tags:**](#bam-tags)\n    * CB/UB for corrected CellBarcode/UMI\n    * GX/GN for gene ID/name\n* STARsolo most up-to-date [documentation](docs/STARsolo.md).\n\n\nSTAR 2.7.2d 2019/10/04\n======================\n* Fixed the problem with no header in Chimeric.out.sam\n\nSTAR 2.7.2c 2019/10/02\n======================\n* Fixed the problem with no output to Chimeric.out.sam\n\nSTAR 2.7.2b 2019/08/29\n======================\nBug fixes in chimeric detection, contributed by Meng Xiao He (@mengxiao)\n* Fix memory leak in handling chimeric multimappers: #721\n* Ensure chimeric alignment score requirements are consistently checked: #722,#723.\n\nSTAR 2.7.2a 2019/08/13\n======================\n* Chimeric read reporting now requires that the chimeric read alignment score higher than the alternative non-chimeric alignment to the reference genome.  The Chimeric.out.junction file now includes the scores of the chimeric alignments and non-chimeric alternative alignments, in addition to the PEmerged bool attribute. (bhaas, Aug 2019)\n* Fixed the problem with ALT=* in STAR-WASP.\n* Implemented extras/scripts/soloBasicCellFilter.awk script to perform basic filtering of the STARsolo count matrices.\n* Fixed a bug causing rare seg-faults with for --peOverlap* options and chimeric detection.\n* Fixed a problem in STARsolo with unmapped reads counts in Solo.out/*.stats files.\n* Fixed a bug in STARsolo with counting reads for splice junctions. Solo.out/matrixSJ.mtx output is slighlty changed.\n* Fixed the problem with ALT=* in VCF files for STAR-WASP.\n\nSTAR 2.7.1a 2019/05/15\n======================\n**This version requires re-generation of the genome indexes**\n\n* Implemented --soloFeatures GeneFull which counts reads overlapping full genes, i.e. includes reads that overlap introns. This can be combined with other features, e.g. --soloFeatures Gene SJ GeneFull .\n* Implemented --soloCBwhitelist None option for solo* demultiplexing without CB whitelist. In this case error correction for CBs is not performed.\n* Implemented Cell Barcodes longer than 16 bases (but shorter than 31 bases). Many thanks to Gert Hulselmans for implementing this feature (#588).\n* Implemented collapsing of duplicate cell barcodes in the whitelist.\n* Implemented --sjdbGTFtagExonParentGeneName and --sjdbGTFtagExonParentGeneType options to load gene name and biotype attributes from the GTF file.\n* Fixed problems created by missing gene/transcript ID, name and biotype attributes in GTF files (issues #613, #628).\n* Added warning for incorrectly scaled --genomeSAindexNbases parameter (issue #614).\n* Added numbers of unmapped reads to the Log.final.out file (pull #622).\n* Fixed a problem which may cause seg-faults for reads with many blocks (issue #342).\n\nSTAR 2.7.0f 2019/03/28\n======================\n* Fixed a problem in STARsolo with empty Unmapped.out.mate2 file. Issue #593.\n* Fixed a problem with CR CY UR UQ SAM tags in solo output. Issue #593.\n* Fixed problems with STARsolo and 2-pass.\n\nSTAR 2.7.0e 2019/02/25\n======================\n* Fixed problems with --quantMode GeneCounts and --parametersFiles options\n\nSTAR 2.7.0d 2019/02/19\n======================\n* Implemented --soloBarcodeReadLength option for barcode read length not equal to the UMI+CB length\n* Enforced genome version rules for 2.7.0\n\nSTAR 2.7.0c 2019/02/08\n======================\n* This release is compiled with gcc-4.8.5, and requires at least gcc-4.8.5\n* Fixed another problem in STARsolo genes.tsv output.\n* Replaced tabs with spaces in STARsolo matrix.mtx output\n* #559, #562 Fixed compilation problems.\n* #550 (again, previous merge failed): Added correct header for the STARsolo matrix.mtx file, needed for python scipy mmread compatibility.\n\nSTAR 2.7.0b 2019/02/05\n======================\n* #550: Added correct header for the STARsolo matrix.mtx file, needed for python scipy mmread compatibility.\n* #556: Fixed a problem with STARsolo genes.tsv file, which may also cause troubles with GTF files processing.\n* Important: 2.7.0x releases require re-generation of the genome index.\n\nSTAR 2.7.0a 2019/01/23\n======================\n* This release introduces STARsolo for: mapping, demultiplexing and gene quantification for single cell RNA-seq.\n* Multiple solo\\* options control STARsolo algorithm. See the RELEASEnotes and the manual for more information.\n* This release is compiled with gcc-5.3.0, and requires at least gcc-4.9.4\n\n\nSTAR 2.6.1d 2018/11/16\n======================\n\n* Fixed the problem causing BAM sorting error with large number of threads and small ulimit -n (github.com/alexdobin/STAR/issues/512).\n* Fixed the bug causing inconsistent output for mate1/2 in the Unmapped files (github.com/alexdobin/STAR/issues/222).\n* Fixed the non-thread safe error/exit (github.com/alexdobin/STAR/issues/514), and non-safe file size check (github.com/alexdobin/STAR/issues/516)\n* Many thanks to Paul Menzel for helping to track and fix these problems.\n\n\nSTAR 2.6.1c 2018/10/17\n======================\n\n* Enforced the consistent choice of supplementary chimeric alignments for overlapping mates.\n\n\nSTAR 2.6.1b 2018/09/06\n======================\n\n* Fixed a problem with --outSAMfilter KeepOnlyAddedReferences option.\n* Fixed a problem with output of an empty sorted BAM.\n\n\nSTAR 2.6.1a 2018/08/14\n======================\n\n* Process substitution can now be used with zipped VCF files, e.g. --varVCFfile <(zcat vcf.gz)\n* Implemented fatal error exception if no SNPs are found in VCF files.\n* Implemented --chimOutJunctionFormat 1 option to output some metadata (command lines and basic mapping statistics) at the end of Chimeric.out.junction file.\n* The default value of --peOverlapMMp is reduced to 0.01 for less aggressive mate merging.\n* Fixed the problem with control characters (ASCII<32) in genome and input read sequences. They used to be converted to N, now they are removed.\n* Fixed a bug that caused serious problems with --sjdbInsertSave All option.\n* Fixed a bug in merging mates (--peOverlap*) algorithm that was causing rare seg-faults.\n* Fixed the GtstrandBit problem.\n* Fixed a bug with multiple RG lines when inputting reads in SAM format.\n* Fixed a bug causing seg-faults with shared memory and --outStd options.\n* Fixed a bug with --outTmpDir and fifo files.\n\nSTAR 2.6.0c 2018/05/10\n======================\n\n* Fixed bugs in merging mates (--peOverlap*) and WASP filtering algorithms. Please see CHANGES and RELEASEnotes from 2.6.0a.\n\n\nSTAR 2.6.0b 2018/05/02\n======================\n\n* Fixed bugs introduced in 2.6.0a. Please see CHANGES and RELEASEnotes from 2.6.0a.\n\n\nSTAR 2.6.0a 2018/04/23\n======================\n\nMajor new features:\n-------------------\n* Merging and mapping of overlapping paired-end reads with new options --peOverlapNbasesMin and --peOverlapMMp. The developmment of this algorithm was supported by Illumina, Inc. Many thanks to June Snedecor, Xiao Chen, and Felix Schlesinger for their extensive help in developing this feature.\n* --varVCFfile option to input variant VCF file.\n* New SAM attributes in the --outSAMattributes, vG, vA, and vW to report variants overlapping alignments.\n* --waspOutputMode option for filtering allele specific alignments. This is re-implementation of the original WASP algorithm by Bryce van de Geijn, Graham McVicker, Yoav Gilad & Jonathan K Pritchard. Please cite the original WASP paper: Nature Methods 12, 1061â1063 (2015), https://www.nature.com/articles/nmeth.3582 . Many thanks to Bryce van de Geijn for fruitful discussions.\n* Detection of multimapping chimeras, with new options --chimMultimapNmax, --chimMultimapScoreRange and --chimNonchimScoreDropMin . Many thanks to Brian Haas for testing and feedback.\n\n\nMinor new features:\n-------------------\n* --alignInsertionFlush option which defines how to flush ambiguous insertion positions: None: old method, insertions are not flushed; Right: insertions are flushed to the right.\n* --outSAMtlen option to select the calculation method for the TLEN field in the SAM/BAM files.\n* --outBAMsortingBinsN option to control the number of sorting bins. Increasing this number reduces the amount of RAM required for sorting.\n\nSTAR 2.5.4b 2018/02/09\n======================\n\n* Recompiled Linux executables with the correct version tag.\n* Updated manual.\n\nSTAR 2.5.4a 2018/01/23\n======================\n\n### New features:\n* Implemented read group ID output as the last column of the Chimeric.out.junction file.\n* Implemented --readFilesPrefix option for specifying prefix (e.g. directory path) for the file names in --readFilesIn .\n* Implemented standard SAM attribute \"MC\" to output the mate's CIGAR. Add MC to the list of attributes in the --outSAMattribute option.\n* Implemented the ability to input the reads from unmapped SAM/BAM file: --readFilesType SAM SE[PE] for single-end [paired-end] reads to read from the SAM file specified, as usual in --readFilesIn. For BAM files, in addition, specify --readFilesCommand samtools view -h .\n* Implemented --seedSplitMin option which was previously hardcoded at 12. his will allow mapping of mates shorter than 12nt.\n* Implemented --outFilterIntronStrands None option to switch off filtering by strand consistency of junctions.\n* Added new scripts extras/scripts/mergeLogFinal.awk,mergeSuperContig.awk,sjMotif.m\n\n### Bug fixes:\n* Fixed a bug in chimeric detection code which sometimes led to uninitialized memory access. The chimeric output may change for a very small number of reads.\n* Fixed a problem with --alignEndsProtrude implementation which prevented the output of alignments with protruded ends.\n* Fixed a bug which set non-primary bit 0x100 in the SAM FLAG for unmapped mates.\n* Fixed a bug in liftOver command that output an extra field in the GTF file.\n* Fixed a problem that can arise for very small genomes while using --alignIntronMax 1.\n\nSTAR 2.5.3a 2017/03/17\n======================\n\n* Fixed occasional seg-faults after the completion of the mapping runs with shared memory.\n* Implemented --genomeFileSizes option to supply sizes of the genome index files. This allows for streaming of index files.\n* Implemented extra references input in the SAM/AM header from user-created \"extraReferences.txt\" file in the genome directory.\n* Implemented --chimOutType HardClip OR SoftClip options to output hard (default) / soft clipping in the BAM CIGAR for supplementary chimeric alignments.\n* Implemented --chimMainSegmentMultNmax parameters, which may be used to prohibit chimeric alignments with multimapping main segments to reduce false positive chimeras.\n* Implemented new SAM attribute 'ch' to mark chimeric aligmments in the BAM file for --chimOutType WithinBAM option.\n* Fixed a problem with RNEXT field in the Chimeric.out.sam file: RNEXT now always points to the other mate start.\n* Implemented --bamRemoveDuplicatesType UniqueIdenticalNotMulti option, which (unlike the UniqueIdentical optipon) will NOT mark multi-mappers as duplicates.\n* For --bamRemoveDuplicatesType UniqueIdentical, the unmmapped reads are no longer marked as duplicates.\n\nSTAR 2.5.2b 2016/08/19\n======================\n\n* Fixed a problem with --outSAMmultNmax 1 not working for transcriptomic output.\n* Fixed a bug with chimeric BAM output for --chimOutType WithinBAM option.\n* Fixed a bug that could cause non-stable BAM sorting if the gcc qsort is unstable.\n* Fixed a bug with causing seg-faults when combining  --twopassMode Basic --outSAMorder PairedKeepInputOrder .\n* Fixed a problem with SAM header in cases where reference sequences are added at the mapping stage.\n\nSTAR 2.5.2a 2016/05/10\n======================\n\n* Fixed the \"GstrandBit\" problem.\n* Fixed a bug introduced in 2.5.1a that caused problems with single-end alignments output in some cases.\n* Fixed a bug that can cause STARlong seg-faults in rare cases.\n* Fixed a bug that caused output of unmapped mates for single end alignments even with --outSAMunmapped None .\n* Implemented --winReadCoverageRelativeMin and --winReadCoverageBasesMin to control coverage of the alignment windows for STARlong.\n* Implemented --outSAMfilter KeepAllAddedReferences option which will keep all alignments to the added references.\n* Implemented --alignEndsProtrude option to control output of alignments with protruding ends.\n* Implemented --outTmpKeep All option to keep the temporary files.\n* Implemented --alignEndsType Extend5pOfReads12 option for full extension of 5' ends of both mates.\n\n\nSTAR 2.5.1b 2016/01/22\n======================\n\n* Fixed a bug in signal generation with --outWigType introduced in 2.5.1a\n\n\nSTAR 2.5.1a 2016/01/19\n======================\n\n* Fixed a bug in --quantMode TranscriptomeSAM that prevented output to Aligned.toTranscriptome.out.bam of the reads mapped to the very last annotated transcript.\n* Cleaned up the code to remove compilation warnings (thanks to github.com/yhoogstrate).\n* Implemented --outSAMunmapped Within KeepPairs option to record unmapped mate adjacent to the mapped one, in case single-end alignments are allowed.\n  For multi-mappers, the unmapped mate will be recored mulitple times adjacent to the mappet mate of each alignment.\n\n\nSTAR 2.5.0c 2015/12/23\n======================\n\n* Implemented --genomeSuffixLengthMax option to control max suffix length at the genome generation step.\n* Fixed a bug that caused genome generation stalling in some cases.\n* In Aligned.toTranscriptome.out.bam (--quantMode TranscriptomeSAM), non-primary SAM flag is assigned to all but one randomly selected alignment in Aligned.toTranscriptome.out.bam .\n* Fixed a bug that filtered out some chimeric junctions.\n* Fixed a bug that prevented chimeric output for some of the \"circular\" configurations.\n\nSTAR 2.5.0b 2015/11/30\n======================\n\n**Bug-fix release:**\n\n* Fixed a problem with non-primary alignment flags with --outSAMmultNmax option.\n* Added counting of chimeric reads into Log.final.out .\n* Fixed a bug in --outSAMfilter KeepOnlyAddedReferences.\n* Fixed a minor bug that caused rare seg-faults.\n* Fixed a minor bug in STARlong extension at the ends of the read.\n* Fixed a seg-fault that occurred when non-default value of --genomeChrBinNbits was used.\n* Fixed a seg-fault that occurred when junctions where inserted after inserting reference sequences.\n\n\nSTAR 2.5.0a 2015/11/06\n======================\n\n**STAR now uses essential c++11 features and requires gcc 4.7.0 or later.**\n\nMajor new features:\n-------------------\n* Implemented on the fly insertion of the extra sequences into the genome indexes.\n* Implemented --outSAMmultNmax parameter to limit the number of output alignments for multimappers.\n* Implemented --outMultimapperOrder Random option to output multiple alignments in random order.\n    This also randomizes the choice of the primary alignment. Parameter --runRNGseed can be used to set the random generator seed.\n    With this option, the ordering of multi-mapping alignments of each read, and the choice of the primary alignment will vary from run to run, unless only one thread is used and the seed is kept constant.\n\nMinor new features:\n-------------------\n* Implemented --outSAMattrIHstart parameter. Setting it to 0 may be required for compatibility with downstream software such as Cufflinks or StringTie.\n* Implemented --outSAMfilter KeepOnlyAddedReferences option.\n* Implemented --help option - thanks to @yhoogstrate for the code.\n* Implemented --alignEndsType Extend3pOfRead1 option for full extension of the 3' end of read 1.\n* Implemented --alignSJstitchMismatchNmax option to allow for mismatches around non-canonical junctions.\n* Implemented --chimSegmentReadGapMax parameter which defines the maximum gap in the read sequence between chimeric segments. By default it is set to 0 to replicate the behavior of the previous STAR versions.\n* Implemented --chimFilter banGenomicN | None options to prohibit or allow the N characters in the vicinity of the chimeric junctions. By default, they are prohibited - the same behavior as in the previous versions.\n\nBug fixes:\n----------\n* For STARlong, increased compilation-time max read length to 500000 and max number of exons to 1000\n* Fixed a bug which caused problems in some cases of genome generation without annotations.\n* Fixed a bug in the --alignEndsType Extend5pOfRead1 option.\n\nCode improvements:\n------------------\n* Improved compilation flags handling in Makefile - thanks to Christian Krause for the code.\n* Improved treatment of the streams and files - thanks to Alex Finkel for the code.\n* Merged pull request from Nathan S. Watson-Haigh: Makefile for manual;Travis-CI automated build; Update STAR-Fusion submodule to v0.3.1\n* Merged pull request from Alex Finkel to allow 'parameter=value' option formatting, e.g. --runThreadN=8.\n\n\n\nSTAR 2.4.2a 2015/06/19\n======================\n\n* Implemented --quantMode GeneCounts option for counting number of reads per gene, similar to htseq-count.\n* STARlong: fixed --outFilterIntronMotifs and --outSAMstrandField options.\n* Yet another fix for --sjdbOverhang logic.\n* Error message when shared memory and on the fly junction insertion are used together.\n* Fixed a bug causing unnecessary 1 base soft-clipping in rare cases with sparse suffix array.\n* Fixed a bug that caused problems with junction motifs in rare cases. Very few alignments affected, <1 per million.\n\nSTAR 2.4.1d 2015/05/19\n======================\n\n* Fixed problems with --sjdbOverhang default and user-defined values.\n* Fixed problems with occasional non-adjacent output of multiple alignments into the unsorted BAM file and transcriptome BAM file.\n* Fixed a bug causing seg-faults when shared memory options in --genomeLoad are used with --outStd SAM.\n* Fixed a bug causing seg-faults for small values of --limitIObufferSize.\n* Added STAR long pre-compiled executables.\n* Fixed very minor issues with filtering into SJ.out.tab .\n* Fixed some bugs in STARlong mapping algorithm.\n* Fixed --outFilter BySJout filtering for STARlong.\n* Fixed XS attrbutes in STARlong.\n* Added --runDirPerm option for permissions of run-time directories.\n\n\nSTAR 2.4.1c 2015/04/24\n======================\n\n* Added latest version of STAR-Fusion as a separate directory.\n* Fixed some compilation problems introduced in 2.4.1b.\n* Added Mac executable.\n\n\nSTAR 2.4.1b 2015/04/23\n======================\n\n* Fixed a bug introduced in 2.4.1a causing serious problems for genomes generated without annotations.\n      If you generated a genome without annotations with 2.4.1a please re-generate it.\n* Fixed a bug causing seg-faults when generating genomes with a large (>500k) number of junctions.\n* Fixed a bug causing seg-faults with --chimOutType WithinBAM for single-end reads.\n* Fixed a bug with required --sjdbOverhang at the mapping step.\n\nSTAR 2.4.1a 2015/04/17\n======================\n\n* The annotations can now be included on the fly at the mapping step, without including them at the genome generation step.\n* New option to activate on the fly \"per sample\" 2-pass method: \"--twopassMode Basic\".\n* 2-pass mode can now be used with annotations, which can be included either at the run-time, or at the genome generation step.\n* Included link (submodule) to Brian Haas' STAR-Fusion code for detecting fusion transcript from STAR chimeric output:  https://github.com/STAR-Fusion/STAR-Fusion\n* Included Gery Vessere's shared memory implementation for POSIX and SysV. To compile STAR with POSIX shared memory, use `make POSIXSHARED`\n* New option \"--chimOutType WithinBAM\" to include chimeric alignments together with normal alignments in the main (sorted or unsorted) BAM file(s).\n* New option \"--quantTranscriptomeBan Singleend\" allows insertions, deletions ans soft-clips in the transcriptomic alignments, which are allowed by some expression quantification software (e.g. eXpress).\n* New option \"--alignEndsTypeExtension Extend5pOfRead1\" to enforce full extension of the 5p of the read1, while all other ends undergo local alignment and may be soft-clipped.\n\n2.4.0k 03/30/2015\n=================\n\n* Implemented new BAM sorting algorithm that reduces significantly the required RAM.\n\n2.4.0j 02/04/2015\n=================\n\n* Fixed a problem with scoring alignments for STARlong. STARlong alignments are slightly modified.\n* Fixed a bug introduced in 2.4.0i that dropped a large number of aligmnents for --quantMode TranscriptomeSAM.\n\tTranscriptome alignments are now the same as in version 2.4.0h.\n* Fixed a problem with lower case read sequences for --outSAMtype BAM options.\n* Fixed a bug preventing parameter value to be \"-\".\n* Fixed --genomeLoad LoadAndRemove option.\n\n2.4.0i 01/14/2015\n=================\n\n* Fixed a bug with the _STARtmp temporary directory name for the 2-pass runs.\n* Fixed a bug causing seg-faults for genome generation.\n* Fixed a bug causing seg-faults for --quantMode TranscriptomeSAM\n\n2.4.0h 12/09/2014\n=================\n\n* Fixed the problem causing Ubuntu error: \"sh: 1: Syntax error: Bad fd number\".\n* Added --quantTranscriptomeBAMcompression option.\n* Add newline at the end of STAR_VERSION string (contributed by Daniel Nicorici).\n* Fixed a bug with parsing the last line of paired FASTA files (contributed by Alex Rolfe).\n\n2.4.0g 11/26/2014\n=================\n\n* Fixed a bug with output score (AS attribute) of some chimeric alignments.\n* Added --alignSoftClipAtReferenceEnds No option which prevents soft clipping of alignments at the reference (chromosome) ends, for compatibility with Cufflinks/Cuffmerge.\n* Fixed wrong output of chimeric junctions boundaries in the Chimeric.out.junction file.\n* Added --outSAMflagOR, --outSAMflagAND options to set specific bits of the SAM FLAG.\n* --sjdbFileChrStartEnd can now accept multiple files which will be concatenated.\n* Fixed the header of the Log.progress.out .\n* Fixed a bug that prevented output of transcriptomic alignments (--quantMode TranscriptomeSAM)  with 1 base junction overhangs.\n* Added --sysShell option to specify path to bash, in cases where bash is not the default shell.\n* --outBAMcompression default changed to 1, which apparently does not change deflation ratio, but is much faster.\n* Added --outBAMsortingThreadN option to specify number of threads for BAM sorting. By default (0) it's equal to min(6,runThreadN).\n\n2.4.0f1 10/30/2014\n==================\n\n* Added read group (RG) BAM attributes to transcriptome BAM (contributed by https://github.com/godotgildor).\n* Fixed a bug with double ID field in the RG header line (contributed by https://github.com/godotgildor).\n* Fixed a bug in the 2-pass method (--twopass1readsN).\n* Fixed a problem with RAM allocation for BAM sorting.\n\n2.4.0e 10/24/2014\n=================\n\n* Added manual in PDF.\n* New sub-directories: source, bin, doc.\n* Output more information about read files into Log.out.\n* Fixed some issues that may have caused dropping of multiple reads files.\n* Added more thorough error checking for genome generation.\n* Fixed a bug causing seg-faults with single-mate alignments for BAM sorting.\n* Fixed some compilation issues on Mac OS X. Note that the default Clang lacks openMP support which is required for STAR compilation.\n* Added Mac OS X executable.\n\n2.4.0d 09/25/2014\n=================\n\n* Added .gitignore.\n* Fixed the problem with 2nd field in the read name shorter than 3 bases (non-Illumina fastq).\n* Added --outBAMcompression option.\n* Added --bamRemoveDuplicatesType and --bamRemoveDuplicatesMate2basesN options.\n* Added --outWigType wiggle read1_5p read2 options.\n* Added --outWigNorm option.\n\n2.4.0c 09/07/2014\n=================\n\n* Automated git version.\n* Fixed a problem with overflowing SJ buffer.\n* Implemented options --twopass1readsN, --twopassSJlimit, --readMapNumber.\n\n2.4.0b 08/29/2014\n=================\n\n* Fixed problems with spaces in --outFilePrefixName.\n* Fixed version information.\n\n2.4.0a 08/11/2014\n=================\n\n* Implemented --outFilterMismatchNoverReadLmax option for a more consistent control of mismatches.\n\n2.3.1z16 08/05/2014\n\nImplemented --outWigReferencesPrefix option to filter references in the signal output.\nImplemented --runMode inputAlignmentsFromBAM --inputBAMfile\n\n2.3.1z15  \nImplemented --outWigType bedGraph read1_5p option.\nFixed a problem with chimeric alignments with overlapping segments.\nFixed a problem with processing of fasta read input.\n\n2.3.1z14 07/24/2014\nImplemented 0x200 SAM flag for reads that did not pass Illumina filtering (i.e. contain âYâ as the 3rd character in the second field of the read name)\nImplemented comma-separated lists in the --outSAMattrRGline read groups that will assign different read groups to multiple comma-separated read files in --readFilesIn\n\n2.3.1z13 07/04/2014\nFixed problems with STARlong.\n\n2.3.1z12 06/30/2014\nFixed problems with SAM/BAM output to stdout.\n\n2.3.1z11 06/27/2014\nSwitched to htslib samtools library.\nFixed problem with indel near known splice junctions.\nFixed problem with FASTA reads input.\n\n2.3.1z10 06/20/2014\nFixed problem with compilation, samtools/ZLIB related.\n\n2.3.1z9 06/19/2014\n2.3.1z8\n2.3.1z7\nFixed problems with transcriptomic output.\nChanged --sjdbFileChrStartEnd importing to allow direct import from SJ.out.tab\n\n2.3.1z6 05/30/2014\n2.3.1z5 05/30/2014\nFixed a bug causing problems with multiple zipped input files.\nPreliminary release of BAM sorting and wiggle output\n\n2.3.1z4 05/06/2014\nPreliminary release with transcriptome output.\n\n2.3.1z2 04/29/2014\nFixed a bug causing problems in some chimeric alignments.\nFixed a bug causing overflowing of SAM ISIZE.\nFixed chimeric output problems with --outFilterType BySJout option\nAdded extra Log.out messages for multi-threaded jobs.\n\n2.3.1z1 03/13/2014\nSAM header changes:\n    removed \"cl:\" attribute from the @PG line, output it as a separate comment line\n    added --outSAMheaderHD, --outSAMheaderPG, --outSAMheaderCommentFile options\nAdded --outTmpDir, which set the path forSTAr temporary directory independent of --outFileNamePrefix\n\n2.3.1z 02/05/2014\nFixed the incorrect behavior of --genomeLoad LoadAndRemove option.\n\n2.3.1y 01/24/2014\nAdded read group sam attribute via --outSAMattrRGline parameter.\nFixed gcc 4.7.0. compilation problem.\nCorrect reverse complementarity of all IUPAC nucleotide codes in the SAM output.\n\n2.3.1x 01/08/2014\nFixed a bug with --alignEndsType EndToEnd.\n\n2.3.1v 12/21/2013\nAdded --alignEndsType EndToEnd option to align reads end-to-end, i.e. prohibit soft-clipping.\n--outSAMattributes now allows to specify the SAM attributes in the desired combination and order.\nImplemented standard (samtools-like) NM and MD tags.\nAdded --outSAMmapqUnique parameter (=255 by default), MAPQ value for unique mappers.\n\n2.3.1u 11/23/2013\nAdded --outSAMreadID={Standard,Number} parameter to output read numbered read IDs.\nAded --outSAMmode NoQS option to suppress output of quality scores.\n\n2.3.1t 11/20/2013\nFixed a bug that prevented alignment to the very beginning of the first reference.\n\n2.3.1s 11/06/2013\nFixed a bug that produced incorrect placement of short deletions.\n\n2.3.1r 10/01/2013\nCompilation option to output \"local alignment chanins\".\nCompilation option to output suffix array as a text file.\n\n2.3.1q 08/15/2013\nFixed a problem with junction overhang in SJ.out.tab file for overlapping mates.\n\n2.3.1p 04/13/2013\nFixed GCC 4.7 compatibility problems.\nChanged min memory requirement for genome generation.\n\n2.3.1o 04/13/2013\nFixed a bug with comma separated lists of input files.\n\n2.3.1n 04/30/2013\nReplaced incorretly released 2.3.1m.\n\n2.3.1m 04/24/2013\nFixed a bug which in some cases caused problems with long reads.\n\n2.3.1l 04/15/2013\nFixed a problem with --readFilesCommand.\n\n2.3.1k 04/15/2013\nFixed chimeric output for single-end reads.\nFixed a problem with --outFilterScoreMinOverLread 0 --outFilterMatchNminOverLread 0 settings.\n\n2.3.1j 04/11/2013\nAllowed spaces in paths: paths that contain spaces should be quoted with \" \". Thanks for Tyler Hyndman for suggesting this patch.\n\n2.3.1i 04/10/2013\nFixed problems with overflowing SJ buffer, new input parameters: --limitOutSJcollapsed, --limitOutSJoneRead.\n\n2.3.1h 04/02/2013\nPrevent output of strangely overlapping mates as chimeras.\nReport error if --sjdbOverhang=0 with set --sjdbFileChrStartEnd or --sjdbGTFfile.\n\n2.3.1g 03/29/2013\nImplemented detection of proximal same-strand chimeras. Now it is possible to detect circular RNA (conisdered \"chimeric\").\nMore accurate treatment of overlapping mates.\n\n2.3.1f 03/21/2013\nNew option --outSAMorder PairedKeepInputOrder to output alignments in the same order as they appear in the input FASTQ/A files.\n\n2.3.1e 03/18/2013\nFixed possible problems with multi-threaded runs for small files which could have caused empty Chimeric.* and Unmapped.* output on some systems.\n\n2.3.1d 03/17/2013\nNew option --outSAMprimaryFlag AllBestScore for marking all alignments with the best score as primary.\nNew parameter --limitOutSAMoneReadBytes 100000, limits the size of one SAM entry - important when a large number of multimappers is recorded.\nFixed a possible problem with Unmapped.* and Chimeric.* output which could generate empty or truncated output on some systems.\nCoded a safer removal of the temporary directory _tmp which could have failed on some systems.\nFixed a bug which resulted in unexpected behavior for alignIntronMax < 7.\n\n2.3.1c 03/01/2013\nFixed a bug which duplicated output in Chimeric.* and Unmapped.* when --outFilterType BySJout option is used.\n\n2.3.1b 02/28/2013\nFixed possible issue which in some cases could have resulted in empty Chimeric.out.*\n\n2.3.1a 02/25/2013\nFixed incorrect processing of --sjdbGTFchrPrefix.\n\n2.3.0e\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.267578125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at dobin@cshl.edu. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.6591796875,
          "content": "# Contributing to STAR\n\nThe following is a set of guidelines for contributing to STAR hosted in the GitHub: https://github.com/alexdobin/STAR/. \nThese are mostly guidelines, not rules. \nUse your best judgment, and feel free to propose changes to this document in a pull request.\n\n#### Table Of Contents\n\n[Code of Conduct](#code-of-conduct)\n\n[How Can I Contribute?](#how-can-i-contribute)\n  * [Ask a question](#ask-a-question)\n  * [Reporting Bugs](#reporting-bugs)\n  * [Suggesting Enhancements](#suggesting-enhancements)\n  * [Pull Requests](#pull-requests)\n\n## Code of Conduct\n\nThis project and everyone participating in it is governed by the [Code of Conduct](CODE_OF_CONDUCT.md).\nBy participating, you are expected to uphold this code.\n\n## How Can I Contribute?\n\n### Ask a question\n\nPlease do not file an issue to ask a question.\nThe GitHub issue tracker is intended for bug reports and feature requests.\nWe have an official discussion forum where the community chimes in with helpful advice if you have questions.\n\n* [STAR discussion forum](https://groups.google.com/forum/#!forum/rna-star)\n\n### Reporting Bugs\n\nThis section guides you through submitting a bug report for STAR. \nFollowing these guidelines helps maintainers and the community understand your report, \nreproduce the behavior, and find related reports.\nIf you find a **Closed** issue that seems like it is the same thing that you're experiencing, \nopen a new issue and include a link to the original issue in the body of your new one.\n\n#### Before Submitting A Bug Report\n\n* You might be able to find the cause of the problem and fix things yourself. \nMost importantly, check if you can reproduce the problem in the latest version of STAR\nand if the problem happens when you run with mostly default parameters.\n* Check the Log.out file for ERROR/WARNING/SOLUTION messages.\n* Perform a through STAR GitHub issues to see if the problem has already been reported. \nIf it has **and the issue is still open**, add a comment to the existing issue instead of opening a new one.\n\n#### How Do I Submit A (Good) Bug Report?\n\nBugs are tracked as [GitHub issues](https://guides.github.com/features/issues/) on https://github.com/alexdobin/STAR/issues.\nExplain the problem and include additional details to help maintainers reproduce the problem:\n\n* **Use a clear and descriptive title** for the issue to identify the problem.\n* **Describe the exact steps which reproduce the problem** in as many details as possible. For example, start by explaining how you run STAR, e.g. which command exactly you used in the terminal. When listing steps, **don't just say what you did, but explain how you did it.\n* **Log.out**. Attach the Log.out file generated in the failed run. This file contains a lot of useful debugging information and is a starting point\n* **Provide specific examples to demonstrate the steps**. Include links to files or GitHub projects, or copy/pasteable snippets, which you use in those examples. If you're providing snippets in the issue, use [Markdown code blocks](https://help.github.com/articles/markdown-basics/#multiple-lines).\n* **Describe the behavior you observed after following the steps** and point out what exactly is the problem with that behavior.\n* **Explain which behavior you expected to see instead and why.**\n* **System information**. In many cases, the problems are associated with the hardware configurations. Provide a brief description of the CPU(s), RAM, storage. \n* **Can you reliably reproduce the issue?** If not, provide details about how often the problem happens and under which conditions it normally happens.\n\nInclude details about your configuration and environment:\n\n### Suggesting Enhancements\n\nThis section guides you through submitting an enhancement suggestion for Atom, including completely new features and minor improvements to existing functionality. Following these guidelines helps maintainers and the community understand your suggestion and find related suggestions.\n\n#### Before Submitting An Enhancement Suggestion\n\n* **Check the STAR manual and Release Notes** â you might discover that the enhancement is already available. Most importantly, check if you're using the latest version of STAR.\n\n* **Perform a cursory search** to see if the enhancement has already been suggested. If it has, add a comment to the existing issue instead of opening a new one.\n\n#### How Do I Submit A (Good) Enhancement Suggestion?\n\nFeature requests and enhancement suggestions are tracked as [GitHub issues](https://guides.github.com/features/issues/) on https://github.com/alexdobin/STAR/issues.\n\n* **Use a clear and descriptive title** for the issue to identify the suggestion.\n* **Provide a step-by-step description of the suggested enhancement** in as many details as possible.\n* **Provide specific examples to demonstrate the steps**. Include copy/pasteable snippets which you use in those examples, as [Markdown code blocks](https://help.github.com/articles/markdown-basics/#multiple-lines).\n* **Describe the current behavior** and **explain which behavior you expected to see instead** and why.\n* **Explain why this enhancement would be useful** to many STAR users.\n* **List some other tools where this enhancement exists.**\n\n### Pull Requests\n\nPlease read the guides on creating good pull requests (PR) and follow these guidelines:\n* **Use a clear and descriptive title** for the pull request.\n* **State the purpose of the PR**: is it a bug-fix, new feature implementation, documentation improvement, or cosmetic change? Why is it important?\n* **Explain the expected changes in STAR behavior**. Make sure that the default STAR behavior does not change.\n* **Provide detailed code documentation and commit messages**.\n\nAdopted from https://github.com/atom/atom/blob/master/CONTRIBUTING.md\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2019 Alexander Dobin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.4638671875,
          "content": "STAR 2.7.11b\n==========\nSpliced Transcripts Alignment to a Reference\nÂ© Alexander Dobin, 2009-2024\nhttps://www.ncbi.nlm.nih.gov/pubmed/23104886\n\nAUTHOR/SUPPORT\n==============\nAlex Dobin, dobin@cshl.edu </br>\nhttps://github.com/alexdobin/STAR/issues </br>\nhttps://groups.google.com/d/forum/rna-star\n\nHARDWARE/SOFTWARE REQUIREMENTS\n==============================\n  * x86-64 compatible processors\n  * 64 bit Linux or Mac OS X\n\nMANUAL\n======\nhttps://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf\n\n[RELEASEnotes](https://github.com/alexdobin/STAR/blob/master/RELEASEnotes.md) contains detailed information about the latest major release\n[CHANGES](https://github.com/alexdobin/STAR/blob/master/CHANGES.md) contains detailed information about all the changes in all releases\n\nDIRECTORY CONTENTS\n==================\n  * source: all source files required for compilation\n  * bin: pre-compiled executables for Linux and Mac OS X\n  * doc: documentation\n  * extras: miscellaneous files and scripts\n\nCOMPILING FROM SOURCE\n=====================\n\nDownload the latest [release from](https://github.com/alexdobin/STAR/releases) and uncompress it\n--------------------------------------------------------\n\n```bash\n# Get latest STAR source from releases\nwget https://github.com/alexdobin/STAR/archive/2.7.11b.tar.gz\ntar -xzf 2.7.11b.tar.gz\ncd STAR-2.7.11b\n\n# Alternatively, get STAR source using git\ngit clone https://github.com/alexdobin/STAR.git\n```\n\nCompile under Linux\n-------------------\n\n```bash\n# Compile\ncd STAR/source\nmake STAR\n```\nFor processors that do not support AVX extensions, specify the target SIMD architecture, e.g.\n```\nmake STAR CXXFLAGS_SIMD=sse\n```\n\n\nCompile under Mac OS X\n----------------------\n\n```bash\n# 1. Install brew (http://brew.sh/)\n# 2. Install gcc with brew:\n$ brew install gcc\n# 3. Build STAR:\n# run 'make' in the source directory\n# note that the path to c++ executable has to be adjusted to its current version\n$cd source\n$make STARforMacStatic CXX=/usr/local/Cellar/gcc/8.2.0/bin/g++-8\n# 4. Make it availible through the terminal\n$cp STAR /usr/local/bin\n```\n\nAll platforms - non-standard gcc\n--------------------------------\n\nIf g++ compiler (true g++, not Clang sym-link) is not on the path, you will need to tell `make` where to find it:\n```bash\ncd source\nmake STARforMacStatic CXX=/path/to/gcc\n```\n\nIf employing STAR only on a single machine or a homogeneously setup cluster, you may aim at helping the compiler to optimize in way that is tailored to your platform. The flags LDFLAGSextra and CXXFLAGSextra are appended to the default optimizations specified in source/Makefile.\n```\n# platform-specific optimization for gcc/g++\nmake CXXFLAGSextra=-march=native\n# together with link-time optimization\nmake LDFLAGSextra=-flto CXXFLAGSextra=\"-flto -march=native\"\n```\n\nFreeBSD ports\n=============\n\nSTAR can be installed on FreeBSD via the FreeBSD ports system.\nTo install via the binary package, simply run:\n```\npkg install star\n```\n\nLIMITATIONS\n===========\nThis release was tested with the default parameters for human and mouse genomes.\nMammal genomes require at least 16GB of RAM, ideally 32GB.\nPlease contact the author for a list of recommended parameters for much larger or much smaller genomes.\n\n\nFUNDING\n=======\nThe development of STAR is supported by the National Human Genome Research Institute of\nthe National Institutes of Health under Award Number R01HG009318.\nThe content is solely the responsibility of the authors and does not necessarily represent the official views of the National Institutes of Health.\n"
        },
        {
          "name": "RELEASEnotes.md",
          "type": "blob",
          "size": 19.5478515625,
          "content": "STAR 2.7.10a --- 2022/01/14 ::: New features, behavior changes and bug fixes\n============================================================================\nSee [CHANGES.md](CHANGES.md)\n\nSTAR 2.7.9a --- 2021/05/05 ::: STARsolo updates\n=====================================================\n\n* [**Counting *multi-gene* (multimapping) reads**](#multi-gene-reads)\n* STARsolo uses [SIMDe](https://github.com/simd-everywhere/simde) package which support different types of SIMD extensions. For processors that do not support AVX extensions, specify the target SIMD architecture, e.g.\n```\nmake STAR CXXFLAGS_SIMD=sse\n```\n\n\nSTAR 2.7.8a --- 2021/02/20\n===========================\n**Major STARsolo updates and many bug fixes**\n\n* [**Cell calling (filtering) similar to CellRanger:**](docs/STARsolo.md#emptydrop-like-filtering)\n    * ```--soloCellFilter EmptyDrops_CR``` option for cell filtering (calling) nearly identical to that of CellRanger 3 and 4\n    * ```--runMode soloCellFiltering``` option for cell filtering (calling) of the raw count matrix, without re-mapping\n* [**Input from BAM files for STARsolo:**](docs/STARsolo.md#input-reads-from-bam-files)\n    * Input from unmapped or mapped SAM/BAM for STARsolo, with options ```--soloInputSAMattrBarcodeSeq``` and ```--soloInputSAMattrBarcodeQual``` to specify SAM tags for the barcode read sequence and qualities\n* [**Read trimming similar to CellRanger4:**](docs/STARsolo.md#matching-cellranger-4xx-and-5xx-results)\n    * ```--clipAdapterType CellRanger4``` option for 5' TSO adapter and 3' polyA-tail clipping of the reads to better match CellRanger >= 4.0.0 mapping results\n* [**Support for barcodes embedded in mates (such as 10X 5' protocol):**](docs/STARsolo.md#barcode-and-cdna-on-the-same-mate)\n    * ```--soloBarcodeMate``` to support scRNA-seq protocols in which one of the paired-end mates contains both barcode sequence and cDNA (e.g. 10X 5' protocol)\n\nSTAR 2.7.7a --- 2020/12/28\n==========================\n**Major new feature:\nSTARconsensus: mapping RNA-seq reads to consensus genome.**\n\n* Provide the VCF file with consensus SNVs and InDels at the genome generation stage with ```--genomeTransformVCF Variants.vcf  --genomeTransformType Haploid```.\nThe alternative alleles in this VCF will be inserted to the reference genome to create a \"transformed\" genome.\nBoth the genome sequence and transcript/gene annotations are transformed.\n\n* At the mapping stage, the reads will be mapped to the transformed (consensus) genome.\nThe quantification in the transformed annotations can be performed with standard ```--quantMode TranscriptomeSAM and/or GeneCounts``` options.\nIf desired, alignments (SAM/BAM) and spliced junctions (SJ.out.tab) can be transformed back to the original (reference) coordinates with ```--genomeTransformOutput SAM and/or SJ```.\nThis is useful if downstream processing relies on reference coordinates.\n\nSTAR 2.7.6a --- 2020/09/19\n==========================\n**Major new feature:**\nOutput multimapping chimeric alignments in BAM format using\n```\n--chimMultimapNmax N>1 --chimOutType WithinBAM --outSAMtype BAM Unsorted [and/or] SortedByCoordinate\n```\nMany thanks to Sebastian @suhrig who implemented this feature!\nMore detailed description from Sebastian in PR #802.\n\nSTAR 2.7.5a 2020/06/16\n======================\n**Major new features:  \n~ support for Plate-based (Smart-seq) scRNA-seq  \n~ manifest file to list the input reads FASTQ files**\n\n* Typical STAR command for mapping and quantification of plate-based (Smart-seq) scRNA-seq  will look like:\n```\n --soloType SmartSeq --readFilesManifest /path/to/manifest.tsv --soloUMIdedup Exact --soloStrand Unstranded\n```\nFor detailed description, see [Plate-based (Smart-seq) scRNA-seq](docs/STARsolo.md#plate-based-Smart-seq-scRNA-seq)\n\n* The convenient way to list a large number of reads FASTQ files and their IDs is to create a file manifest and supply it in `--readFilesManifest /path/to/manifest.tsv`. The manifest file should contain 3 tab-separated columns. For paired-end reads:\n```\nRead1-file-name \\t Read2-file-name \\t File-id\n```\nFor single-end reads, the 2nd column should contain the dash - :\n```\nRead1-file-name \\t - \\t File-id\n```\nFile-id can be any string without spaces. File-id will be added as ReadGroup tag (*RG:Z:*) for each read in the SAM/BAM output. If File-id starts with *ID:*, it can contain several fields separated by tab, and all the fields will be copied verbatim into SAM *@RG* header line.\n\n\nSTAR 2.7.4a 2020/06/01\n======================\nThis release fixes multiple bugs and issues.  \nThe biggest issue fixed was a seg-fault for small genome which previously required scaling down `--genomeSAindexNbases`. Such scaling is still recommended but is no longer required.  \n**This release requires re-generation of the genome indexes**\n\nSTAR 2.7.3a 2019/10/08\n======================\nMajor new features in STARsolo\n------------------------------\n* **Output enhancements:**\n    * Summary.csv statistics output for raw and filtered cells useful for quick run quality assessment.\n    * --soloCellFilter option for basic filtering of the cells, similar to the methods used by CellRanger 2.2.x.\n* [**Better compatibility with CellRanger 3.x.x:**](docs/STARsolo.md#matching-cellranger-3xx-results)\n    * --soloUMIfiltering MultiGeneUMI option introduced in CellRanger 3.x.x for filtering UMI collisions between different genes.\n    * --soloCBmatchWLtype 1MM_multi_pseudocounts option, introduced in CellRanger 3.x.x, which slightly changes the posterior probability calculation for CB with 1 mismatch.\n* [**Velocyto spliced/unspliced/ambiguous quantification:**](docs/STARsolo.md#velocyto-splicedunsplicedambiguous-quantification)\n    * --soloFeatures Velocyto option to produce Spliced, Unspliced, and Ambiguous counts similar to the [velocyto.py](http://velocyto.org/) tool developed by [LaManno et al](https://doi.org/10.1038/s41586-018-0414-6). This option is under active development and the results may change in the future versions.\n* [**Support for complex barcodes, e.g. inDrop:**](docs/STARsolo.md#barcode-geometry)\n    * Complex barcodes in STARsolo with --soloType CB_UMI_Complex, --soloCBmatchWLtype --soloAdapterSequence, --soloAdapterMismatchesNmax, --soloCBposition,--soloUMIposition\n* [**BAM tags:**](#bam-tags)\n    * CB/UB for corrected CellBarcode/UMI\n    * GX/GN for gene ID/name\n* STARsolo most up-to-date [documentation](docs/STARsolo.md).\n\nSTAR 2.7.2a 2019/08/13\n======================\n\nChimeric read alignment reporting updates\n-----------------------------------------\nThe chimeric read alignment reporting has been changed to improve on the specificity of chimeric read detection.\nOnly those chimeric read aligments with alignment scores that exceed the corresponding score of the non-chimeric\nalignment to the reference genome are now reported.\nThe Chimeric.junction.out file formatting has been updated to include column headers and the alignment scores for\nboth chimeric alignments and the non-chimeric alternative. See the latest STAR manual for full details.\n\n\n\nSTAR 2.7.0c 2019/02/05\n======================\n\nSTARsolo: mapping, demultiplexing and gene quantification for single cell RNA-seq\n---------------------------------------------------------------------------------\nSTARsolo is a turnkey solution for analyzing droplet single cell RNA sequencing data (e.g. 10X Genomics Chromium System) built directly into STAR code.\nSTARsolo inputs the raw FASTQ reads files, and performs the following operations\n* error correction and demultiplexing of cell barcodes using user-input whitelist\n* mapping the reads to the reference genome using the standard STAR spliced read alignment algorithm\n* error correction and collapsing (deduplication) of Unique Molecular Identifiers (UMIa)\n* quantification of per-cell gene expression by counting the number of reads per gene\n\nSTARsolo output is designed to be a drop-in replacement for 10X CellRanger gene quantification output.\nIt follows CellRanger logic for cell barcode whitelisting and UMI deduplication, and produces nearly identical gene counts in the same format.\nAt the same time STARsolo is ~10 times faster than the CellRanger.\n\nThe STAR solo algorithm is turned on with:\n```\n--soloType Droplet\n```\n\nPresently, the cell barcode whitelist has to be provided with:\n```\n--soloCBwhitelist /path/to/cell/barcode/whitelist\n```\n\nThe 10X Chromium whitelist file can be found inside the CellRanger distribution,\ne.g. [10X-whitelist](https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-).\nPlease make sure that the whitelist is compatible with the specific version of the 10X chemistry (V1,V2,V3 etc).\n\nImportantly, in the --readFilesIn option, the 1st file has to be cDNA read, and the 2nd file has to be the barcode (cell+UMI) read, i.e.\n```\n--readFilesIn cDNAfragmentSequence.fastq.gz CellBarcodeUMIsequence.fastq.gz\n```\n\nImportant: the genome index has to be re-generated with the latest 2.7.0x release.\n\nOther parameters that control STARsolo output are listed below. Note that default parameters are compatible with 10X Chromium V2 protocol.\n\n```\nsoloCBstart                 1\n    int>0: cell barcode start base\n\nsoloCBlen                   16\n    int>0: cell barcode length\n\nsoloUMIstart                17\n    int>0: UMI start base\n\nsoloUMIlen                  10\n    int>0: UMI length\n\nsoloStrand                  Forward\n    string: strandedness of the solo libraries:\n                            Unstranded  ... no strand information\n                            Forward     ... read strand same as the original RNA molecule\n                            Reverse     ... read strand opposite to the original RNA molecule\n\nsoloFeatures                Gene\n    string(s)               genomic features for which the UMI counts per Cell Barcode are collected\n                            Gene            ... genes: reads match the gene transcript\n                            SJ              ... splice junctions: reported in SJ.out.tab\n\nsoloUMIdedup                1MM_All\n    string(s)               type of UMI deduplication (collapsing) algorithm\n                            1MM_All             ... all UMIs with 1 mismatch distance to each other are collapsed (i.e. counted once)\n                            1MM_Directional     ... follows the \"directional\" method from the UMI-tools by Smith, Heger and Sudbery (Genome Research 2017).\n                            1MM_NotCollapsed      ... UMIs with 1 mismatch distance to others are not collapsed (i.e. all counted)\n\nsoloOutFileNames            Solo.out/ genes.tsv barcodes.tsv matrix.mtx matrixSJ.mtx\n    string(s)               file names for STARsolo output\n                            1st word    ... file name prefix\n                            2nd word    ... barcode sequences\n                            3rd word    ... gene IDs and names\n                            4th word    ... cell/gene counts matrix\n                            5th word    ... cell/splice junction counts matrix\n```\n\n\n\n\nSTAR 2.6.0a 2018/04/23\n======================\n\nMajor new features:\n-------------------\n\n**1. Merging and mapping of overlapping paired-end reads.**  \nThis feature improves mapping accuracy  for paired-end libraries with short insert sizes, where many reads have overlapping mates. Importantly, it allows detection of chimeric junction in the overlap region.\nSTAR will search for an overlap between mates larger or equal to --peOverlapNbasesMin bases with proportion of mismatches in the overlap area not exceeding --peOverlapMMp .\nIf the overlap is found, STAR will map merge the mates and attempt to map the resulting (single-end) sequence.\nIf requested, the chimeric detection will be performed on the merged-mate sequence, thus allowing chimeric detection in the overlap region.\nIf the score of this alignment higher than the original one, or if a chimeric alignment is found, STAR will report the merged-mate aligment instead of the original one.\nIn the output, the merged-mate aligment will be converted back to paired-end format.  \nThe developmment of this algorithm was supported by Illumina, Inc.\nMany thanks to June Snedecor, Xiao Chen, and Felix Schlesinger for their extensive help in developing this feature.\n\n\n**2. Detection of personal variants overlapping alignments.**  \nOption --varVCFfile /path/to/vcf/file is used to input VCF file with personal variants. Only single nucleotide variants (SNVs) are supported at the moment.\nEach variant is expected to have a genotype with two alleles.\nTo output variants that overlap alignments, vG and vA have to be added to --outSAMattributes list.\nSAM attribute vG outputs the genomic coordinate of the variant, allowing for identification of the variant.\nSAM attribute vA outputs which allele is detected in the read: 1 or 2 match one of the genotype alleles, 3 - no match to genotype.\n\n**3. WASP filtering of allele specific alignments.**  \nThis is re-implementation of the original WASP algorithm by Bryce van de Geijn, Graham McVicker, Yoav Gilad & Jonathan K Pritchard. Please cite the original [WASP paper: Nature Methods 12, 1061â1063 (2015)   ](https://www.nature.com/articles/nmeth.3582).\nWASP filtering is activated with --waspOutputMode SAMtag, which will add vW tag to the SAM output:\nvW:i:1 means alignment passed WASP filtering, while all other values mean it did not pass.  \nMany thanks to Bryce van de Geijn for fruitful discussions.\n\n**4. Detection of multimapping chimeras.**  \nPrevious STAR chimeric detection algorithm only detected uniquely mapping chimeras, which reduced its sensitivity in some cases.\nThe new algorithm can detect and output multimapping chimeras. Presently, the only output into Chimeric.out.junction is supported.\nThis algorithm is activated with >0 value in --chimMultimapNmax, which defines the maximum number of chimeric multi-alignments.\nThe --chimMultimapScoreRange (=1 by default) parameter defines the score range for multi-mapping chimeras below the best chimeric score, similar to the --outFilterMultimapScoreRange parameter for normal alignments.\nThe --chimNonchimScoreDropMin (=20 by default) defines the threshold triggering chimeric detection: the drop in the best non-chimeric alignment score with respect to the read length has to be smaller than this value.  \nMany thanks to Brian Haas for testing and feedback.\n\n\nMinor new features:\n-------------------\n* --outSAMtlen 1/2 option to select the calculation method for the TLEN field in the SAM/BAM files:\n              1 ... leftmost base of the (+)strand mate to rightmost base of the (-)mate. (+)sign for the (+)strand mate\n              2 ... leftmost base of any mate to rightmost base of any mate. (+)sign for the mate with the leftmost base. This is different from 1 for overlapping mates with protruding ends\n* --alignInsertionFlush option which defines how to flush ambiguous insertion positions: None: old method, insertions are not flushed; Right: insertions are flushed to the right.\n* --outBAMsortingBinsN option to control the number of sorting bins. Increasing this number reduces the amount of RAM required for sorting.\n\n\nSTAR 2.5.0a 2015/11/06\n======================\n\n**STAR now uses essential c++11 features. Compiling from sources requires gcc 4.7.0 or later.**\n\nMajor new features:\n-------------------\n1. It is now possible to add extra sequences to the reference genome ont the fly (without re-generating the genome) by specifying\n_--genomeFastaFiles /path/to/genome/fasta1 /path/to/genome/fasta2_ at the mapping stage.\n\n2. By default, the order of the multi-mapping alignments for each read is not truly random.\nThe _--outMultimapperOrder Random_ option outputs multiple alignments for each read in random order,\nand also also randomizes the choice of the primary alignment from the highest scoring alignments.\nParameter _--runRNGseed_ can be used to set the random generator seed.\nWith this option, the ordering of multi-mapping alignments of each read,\nand the choice of the primary alignment will vary from run to run, unless only one thread is used and the seed is kept constant.\n\n3. The --outSAMmultNmax parameter limits the number of output alignments (SAM lines) for multimappers.\nFor instance, _--outSAMmultNmax 1_ will output exactly one SAM line for each mapped read.\n\n\nSTAR 2.4.2a 2015/06/19\n======================\n\nNew features:\n\nCounting reads per gene while mapping with --quantMode GeneCounts option.\nA read is counted if it overlaps (1nt or more) one and only one gene. Both ends of the paired-end read are checked for overlaps.\nThe counts coincide with those produced by htseq-count with default parameters.\n\nRequires annotations (GTF or GFF with --sjdbGTFfile option) used at the genome generation step, or at the mapping step.\n\nOutputs read counts per gene into ReadsPerGene.out.tab file with 4 columns which correspond to different strandedness options:\ncolumn 1: gene ID\ncolumn 2: counts for unstranded RNA-seq\ncolumn 3: counts for the 1st read strand aligned with RNA (htseq-count option -s yes)\ncolumn 4: counts for the 2nd read strand aligned with RNA (htseq-count option -s reverse)\nSelect the output according to the strandedness of your data.\nNote, that if you have stranded data and choose one of the columns 3 or 4, the other column (4 or 3) will give you the count of antisense reads.\n\nWith --quantMode TranscriptomeSAM GeneCounts, and get both the Aligned.toTranscriptome.out.bam and ReadsPerGene.out.tab outputs.\n\n\n\nSTAR 2.4.1a 2015/04/17\n======================\n\nNew features:\n\n1. The annotations can now be included on the fly at the mapping step, without including them at the genome generation step.\n   At the mapping step, specify --sjdbGTFfile /path/to/ann.gtf and/or --sjdbFileChrStartEnd /path/to/sj.tab, as well as --sjdbOverhang, and any other --sjdb* options.\n   The genome indices can be generated with or  without another set of annotations/junctions. In the latter case the new junctions will added to the old ones.\n   STAR will insert the junctions into genome indices on the fly before mapping, which takes 1~2 minutes.\n   The on the fly genome indices can be saved (for reuse) with \"--sjdbInsertSave All\", into _STARgenome directory inside the current run directory.\n   Default --sjdbOverhang is now set at 100, and does not have to be specified unless you need to change this value.\n\n   The \"all-sample\" 2-pass method can be simplified using this on the fly junction insertion option:\n   (i) run the 1st pass for all samples as usual, with or without annotations\n   (ii) run 2nd pass for all samples, listing SJ.out.tab files from all samples in --sjdbFileChrStartEnd /path/to/sj1.tab /path/to/sj2.tab ...\n\n2. New option to activate on the fly \"per sample\" 2-pass method: \"--twopassMode Basic\".\n   Default --twopass1readsN is now -1, i.e. using all reads in the 1st pass.\n   2-pass mode can now be used with annotations, which can be included either at the run-time (see #1), or at the genome generation step.\n   Annotated junctions will be included in both the 1st and 2nd passes.\n\n3. Included link (submodule) to Brian Haas' STAR-Fusion code for detecting fusion transcript from STAR chimeric output:\n   https://github.com/STAR-Fusion/STAR-Fusion\n\n4. Included Gery Vessere's shared memory implementation for POSIX and SysV.\n   To compile STAR with POSIX shared memory, use `make POSIXSHARED`\n\n5. New option \"--chimOutType WithinBAM\" to include chimeric alignments together with normal alignments in the main (sorted or unsorted) BAM file(s).\n   Formatting of chimeric alignments follows the latest SAM/BAM specifications. Thanks to Felix Schlesinger for thorough testing of this option.\n\n6. New option \"--quantTranscriptomeBan Singleend\" allows insertions, deletions ans soft-clips in the transcriptomic alignments, which can be used by some expression quantification software (e.g. eXpress).\n\n7. New option \"--alignEndsTypeExtension Extend5pOfRead1\" to enforce full extension of the 5p of the read1, while all other ends undergo local alignment and may be soft-clipped.\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0244140625,
          "content": "theme: jekyll-theme-slate"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}