{
  "metadata": {
    "timestamp": 1736710125386,
    "page": 767,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mgerdes/Open-Golf",
      "stars": 1819,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.81640625,
          "content": "CMakeLists.txt.user\r\nCMakeCache.txt\r\nCMakeFiles\r\nCMakeScripts\r\nTesting\r\ncmake_install.cmake\r\ninstall_manifest.txt\r\ncompile_commands.json\r\nCTestTestfile.cmake\r\n_deps\r\nout\r\n.vs\r\n.ninja_deps\r\n.ninja_log\r\nbuild.ninja\r\nminigolf.exe\r\nminigolf.ilk\r\nminigolf.pdb\r\nrules.ninja\r\n*.vcxproj.filters\r\n*.vcxproj.user\r\nBulletCollision.dir\r\nBulletDynamics.dir\r\nDebug\r\n*.a\r\n*.swp\r\nscripts/a.out\r\nRelease\r\nenet.dir\r\nscripts/*.vcxproj\r\nscripts/*.model\r\nsrc/*.o\r\nsrc/*.d\r\nminigolf\r\nlibraries/*.o\r\nlibraries/*.d\r\nlibraries/GLFW/*.o\r\nlibraries/GLFW/*.d\r\nlibraries/imgui/*.o\r\nlibraries/imgui/*.d\r\nlog.txt\r\nlibs.o\r\nminigolf.data\r\nminigolf.html\r\nminigolf.data\r\nminigolf.js\r\nminigolf.wasm\r\nminigolf.worker.js\r\n\n*.d\n\n*.o\n*.fdb\nsrc/membedder/membedded_files.h\nMakefile\n.vscode\nbuild/android/OpenGolf/app/src/main/assets/data.zip\nsrc/common/data_zip.h\nstorage.json\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 2.71484375,
          "content": "cmake_minimum_required(VERSION 3.12)\n\nproject(golf)\n\nmessage(${CMAKE_SYSTEM_NAME})\n\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})\n\ninclude_directories(SYSTEM src/3rd_party)\ninclude_directories(src)\n\nif(CMAKE_SYSTEM_NAME STREQUAL Windows)\n    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR})\n    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR})\n    add_compile_definitions(SOKOL_GLCORE33)\n    add_compile_definitions(GOLF_PLATFORM_WINDOWS)\nelseif(CMAKE_SYSTEM_NAME STREQUAL Linux OR CMAKE_SYSTEM_NAME STREQUAL Darwin)\n    add_compile_definitions(SOKOL_GLCORE33)\n    add_compile_definitions(GOLF_PLATFORM_LINUX)\nelseif(CMAKE_SYSTEM_NAME STREQUAL Android)\n    add_compile_definitions(SOKOL_GLES3)\n    add_compile_definitions(GOLF_PLATFORM_ANDROID)\n    add_compile_options(\"SHELL:-O3\")\n    add_compile_options(\"SHELL:-DNDEBUG\")\nelseif(CMAKE_SYSTEM_NAME STREQUAL iOS)\n    set(CMAKE_XCODE_ATTRIBUTE_DEVELOPMENT_TEAM RMF5MGUCT2 CACHE INTERNAL \"\")\n    add_compile_definitions(SOKOL_GLES3)\n    add_compile_definitions(GOLF_PLATFORM_IOS)\n    add_compile_options(\"SHELL:-O3\")\n    add_compile_options(\"SHELL:-DNDEBUG\")\nelseif(CMAKE_SYSTEM_NAME STREQUAL Emscripten)\n    configure_file(\"build/emscripten/coi-serviceworker.min.js\" ${CMAKE_BINARY_DIR} COPYONLY)\n    add_compile_definitions(SOKOL_GLES3)\n    add_compile_definitions(GOLF_PLATFORM_EMSCRIPTEN)\n    add_compile_options(\"SHELL:-s USE_PTHREADS=1\")\n    add_compile_options(\"SHELL:-O3\")\n    add_compile_options(\"SHELL:-DNDEBUG\")\n    add_link_options(\"SHELL:-s USE_WEBGL2=1\")\n    add_link_options(\"SHELL:-s FULL_ES3=1\")\n    add_link_options(\"SHELL:-s ERROR_ON_UNDEFINED_SYMBOLS=1\")\n    add_link_options(\"SHELL:-s ALLOW_MEMORY_GROWTH=1\")\n    add_link_options(\"SHELL:-s USE_PTHREADS=1\")\n    add_link_options(\"SHELL:-s WASM_MEM_MAX=100Mb\")\n    add_link_options(\"SHELL:-s PTHREAD_POOL_SIZE=2\")\n    add_link_options(\"SHELL:-lidbfs.js\")\n    add_link_options(\"SHELL:--shell-file ../../build/emscripten/shell.html\")\n    add_link_options(\"SHELL:-s TOTAL_MEMORY=32Mb\")\nendif()\n\nif(CMAKE_SYSTEM_NAME STREQUAL Windows)\nelseif(CMAKE_SYSTEM_NAME STREQUAL Linux)\n    add_compile_options(-g)\nendif()\n\nadd_subdirectory(src/3rd_party/cimgui)\nadd_subdirectory(src/3rd_party/fast_obj)\nadd_subdirectory(src/3rd_party/glad)\nadd_subdirectory(src/3rd_party/glfw)\nadd_subdirectory(src/3rd_party/lightmapper)\nadd_subdirectory(src/3rd_party/mattiasgustavsson_libs)\nadd_subdirectory(src/3rd_party/miniz)\nadd_subdirectory(src/3rd_party/parson)\nadd_subdirectory(src/3rd_party/sokol)\nadd_subdirectory(src/3rd_party/stb)\nadd_subdirectory(src/3rd_party/xatlas)\nadd_subdirectory(src/common)\nadd_subdirectory(src/golf)\n\nif(CMAKE_SYSTEM_NAME STREQUAL Windows OR CMAKE_SYSTEM_NAME STREQUAL Linux)\n    add_subdirectory(src/editor)\nendif()\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0458984375,
          "content": "MIT License\n\nCopyright (c) 2020 Michael Gerdes\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.38671875,
          "content": "# Open Golf\nA cross-platform minigolf game written in C. \n\n## Platforms\n- HTML: https://mgerdes.github.io/minigolf.html (Works best in Chrome)\n- iOS: https://apps.apple.com/us/app/open-golf/id1615224465\n- Android: https://play.google.com/store/apps/details?id=me.mgerdes.open_golf\n- Windows\n- Linux\n\n## Info\n![Image](https://i.imgur.com/TBlXedl.gif)\n- Used the [Sokol](https://github.com/floooh/sokol) libraries to create a cross platform application with 3D graphics and audio.\n- Wrote the Physics code to handle collision detection and collision response for the golf ball.\n- Used [ImGui](https://github.com/ocornut/imgui) to create in games tools for fast iteration. Also created an in game-editor that can be used to modify the terrain of a hole and then quickly play to get fast feedback. The game-editor can also run scripts to generate the points and faces of more interesting models.\n![Image](https://i.imgur.com/fCoKT2e.gif)\n- Used the library [Lightmapper](https://github.com/ands/lightmapper) to generate lightmaps for the terrain and also [xatlas](https://github.com/jpcy/xatlas) to generate lightmap UVs. These lightmaps are then baked into the files for the courses. It can also interpolate between multiple samples to create lightmaps for some moving objects.\n![Image](https://i.imgur.com/ADw5kCw.gif)\n![Image](https://i.imgur.com/tUJyHRk.gif)\n\n## Building\n### Windows\n- To compile run `build\\build-win64.bat`\n\n- To start the game run `out\\win64\\golf.exe`\n\n- This also creates `out\\win64\\golf.sln` which can be opened in Visual Studio to compile / run everything\n\n### Linux\n- To compile run `./build/build-linux.sh`\n\n- To start the game run `out/linux/golf`\n\n## OSX\n- To compile run `./build/build-osx.sh`\n\n- To start the game run `out/osx/golf`\n\n## 3rd Party Libraries\n- [cembed](https://github.com/rxi/cembed)\n- [cimgui](https://github.com/cimgui/cimgui)\n- [fast_obj](https://github.com/thisistherk/fast_obj)\n- [glfw](https://github.com/glfw/glfw)\n- [glslcc](https://github.com/septag/glslcc)\n- [imgui](https://github.com/ocornut/imgui)\n- [Kenney Art Assets](https://kenney.nl/assets)\n- [lightmapper](https://github.com/ands/lightmapper)\n- [mattiasgustavsson/libs](https://github.com/mattiasgustavsson/libs)\n- [miniz](https://github.com/richgel999/miniz)\n- [parson](https://github.com/kgabis/parson)\n- [sokol](https://github.com/floooh/sokol)\n- [stb](https://github.com/nothings/stb)\n- [xatlas](https://github.com/jpcy/xatlas)\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}