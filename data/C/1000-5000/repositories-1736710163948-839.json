{
  "metadata": {
    "timestamp": 1736710163948,
    "page": 839,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "emweb/wt",
      "stars": 1723,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dprint.json",
          "type": "blob",
          "size": 0.7783203125,
          "content": "{\n  \"lineWidth\": 120,\n  \"indentWidth\": 2,\n  \"useTabs\": false,\n  \"typescript\": {\n    \"quoteStyle\": \"preferDouble\",\n    \"semiColons\": \"always\",\n    \"useBraces\": \"always\",\n    \"bracePosition\": \"sameLine\",\n    \"singleBodyPosition\": \"nextLine\",\n    \"arrowFunction.useParentheses\": \"force\",\n    \"operatorPosition\": \"sameLine\",\n    \"trailingCommas\": \"onlyMultiLine\",\n    \"arguments.trailingCommas\": \"never\",\n    \"parameters.trailingCommas\": \"never\"\n  },\n  \"includes\": [\n    \"src/js/*.{js}\",\n    \"src/web/skeleton/*.{js}\",\n    \"src/themes/bootstrap/5/*.{js}\",\n    \"examples/custom-bs-theme/theme/*.{js}\",\n    \"examples/widgetgallery/style/*.{js}\"\n  ],\n  \"excludes\": [\n    \"**/node_modules\",\n    \"*.min.js\",\n    \"jquery.js\"\n  ],\n  \"plugins\": [\n    \"https://plugins.dprint.dev/typescript-0.74.0.wasm\"\n  ]\n}\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1259765625,
          "content": "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\nindent_style = space\nindent_size = 2\ntab_width = 8\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.0185546875,
          "content": "*.min.js\njquery.js\n"
        },
        {
          "name": ".eslintrc.yml",
          "type": "blob",
          "size": 0.927734375,
          "content": "env:\n  browser: true\n  es2021: true\nextends: eslint:recommended\noverrides: []\nglobals:\n  WT_DECLARE_APP_MEMBER: readonly\n  WT_DECLARE_WT_MEMBER: readonly\n  WT_DECLARE_WT_MEMBER_BIG: readonly\n  JavaScriptFunction: readonly\n  JavaScriptConstructor: readonly\n  JavaScriptObject: readonly\n  JavaScriptPrototype: readonly\nparserOptions:\n  ecmaVersion: latest\nrules:\n  # Possible Problems\n  no-constructor-return:\n    - error\n  no-inner-declarations:\n    - off\n  no-unused-vars:\n    - error\n    - argsIgnorePattern: ^_\n      varsIgnorePattern: ^_\n  # Suggestions\n  consistent-return:\n    - error\n  eqeqeq:\n    - error\n  guard-for-in:\n    - error\n  no-implicit-globals:\n    - error\n  no-sequences:\n    - error\n  no-undefined:\n    - error\n  no-var:\n    - error\n  prefer-const:\n    - error\n  # Layout & Formatting\n  # dprint does not reformat comments,\n  # this catches max-len violations in comments:\n  max-len:\n    - error\n    - code: 120\n      tabWidth: 8\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3525390625,
          "content": "*~\n*.db\n*.autosave\nbuild*/*\n.DS_Store\nCMakeLists.txt.user\nwt.tags\ndoc/tutorial/auth.html\ndoc/tutorial/dbo.html\ndoc/tutorial/wt.html\ndoc/reference\ndoc/examples\nexamples/*/resources\nexamples/hello/*.svg\nexamples/widgetgallery/docroot/resources\nresources/tiny_mce\nresources/tinymce\ntest/interactive\ndebug/\n.vscode/*\n!.vscode/settings.json\n!.vscode/extensions.json\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "BUILD.md",
          "type": "blob",
          "size": 0.837890625,
          "content": "## Building Wt from source\n\nBuilding instructions can be found for:\n - [Unix](https://www.webtoolkit.eu/wt/doc/reference/html/InstallationUnix.html)\n - [Windows](https://www.webtoolkit.eu/wt/doc/reference/html/InstallationWindows.html)\n\n Generally speaking Windows users will be using prebuilt binaries, found [here](https://github.com/emweb/wt/releases).\n The installation manual still goes over the building process, and all its options. The Windows binaries are built using all\n possible dependencies on Windows, so that all functionality is included.\n\n Currently the Windows building section, found on [Redmine](https://redmine.emweb.be/projects/wt/wiki/Installing_Wt_on_MS_Windows)\n is severely outdated, and should be read with a grain of salt. Any mention of minimal versions is completely wrong, the ones mentioned\n in the documentation is correct.\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 21.1162109375,
          "content": "cmake_minimum_required(VERSION 3.13...3.22)\n\nSET(CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE true)\n\nPROJECT(WT)\n\nSET(CMAKE_MODULE_PATH\n  ${CMAKE_MODULE_PATH}\n  ${WT_SOURCE_DIR}\n  ${WT_SOURCE_DIR}/cmake\n)\n\nSET(VERSION_SERIES 4)\nSET(VERSION_MAJOR 11)\nSET(VERSION_MINOR 1)\n\nIF(NOT SHARED_LIBS)\n  IF(WIN32)\n    OPTION(SHARED_LIBS \"Compile shared libraries\" OFF)\n  ELSE(WIN32)\n    OPTION(SHARED_LIBS \"Compile shared libraries\" ON)\n  ENDIF(WIN32)\nENDIF(NOT SHARED_LIBS)\n\n#\n# Various things that must be configured by the user or packager ...\n#\nOPTION(BUILD_EXAMPLES \"Build examples\" ON)\nOPTION(INSTALL_DOCUMENTATION \"Install documentation (tutorials and reference)\" OFF)\nOPTION(INSTALL_EXAMPLES \"Install examples (binaries and source)\" OFF)\nOPTION(INSTALL_RESOURCES \"Install resources directory\" ON)\noption(INSTALL_THEMES \"Install the source files for Wt's themes\" ON)\nOPTION(ENABLE_SSL \"Enable cryptography functions, using OpenSSL\" ON)\nOPTION(ENABLE_HARU \"Enable Haru Free PDF Library, which is used to provide support for painting to PDF (WPdfImage)\" ON)\nOPTION(ENABLE_PANGO \"Enable Pango Library, which is used for improved font support (WPdfImage and WRasterImage)\" ON)\nOPTION(ENABLE_SQLITE \"Build SQLite3 backend for Wt::Dbo\" ON)\nOPTION(ENABLE_POSTGRES \"Build PostgreSQL backend for Wt::Dbo\" ON)\nOPTION(ENABLE_FIREBIRD \"Build FirebirdSQL backend for Wt::Dbo\" ON)\nOPTION(ENABLE_MYSQL \"Build mariadb/mysql backend for Wt::Dbo\" ON)\nOPTION(ENABLE_MSSQLSERVER \"Build Microsoft SQL Server backend for Wt::Dbo\" ON)\nOPTION(ENABLE_QT4 \"Build Qt4 interworking library (libwtwithqt)\" ON)\nOPTION(ENABLE_QT5 \"Build Qt5 interworking library (libwtwithqt5)\" ON)\nOPTION(ENABLE_QT6 \"Build Qt6 interworking library (libwtwithqt6)\" ON)\nOPTION(ENABLE_SAML \"Build built-in SAML service provider for Wt::Auth\" OFF)\nOPTION(ENABLE_LIBWTTEST \"Build Wt::Test\" ON)\nOPTION(ENABLE_LIBWTDBO \"Build Wt::Dbo\" ON)\nOPTION(ENABLE_OPENGL \"Build Wt with support for server-side opengl rendering\" ON)\nOPTION(ENABLE_UNWIND \"Build Wt with stacktrace support using libunwind\" OFF)\n\noption(DEBUG_JS \"Serve non-minified JavaScript from the filesystem instead of embedding it, for debugging.\" OFF)\nmark_as_advanced(DEBUG_JS)\n\nIF(NOT CMAKE_CXX_STANDARD)\n  SET(CMAKE_CXX_STANDARD 14)\nENDIF(NOT CMAKE_CXX_STANDARD)\nSET(CMAKE_CXX_STANDARD_REQUIRED ON)\nSET(CMAKE_CXX_EXTENSIONS OFF)\n\nIF(MSVC)\n  SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /bigobj\")\n  SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)\nENDIF(MSVC)\n\nIF(APPLE)\n  OPTION(USE_BOOST_FRAMEWORK \"Uses a Boost framework\" OFF)\nENDIF(APPLE)\n\nIF(NOT DOCUMENTATION_DESTINATION)\n  SET(DOCUMENTATION_DESTINATION share/doc/Wt)\nENDIF(NOT DOCUMENTATION_DESTINATION)\nIF(NOT EXAMPLES_DESTINATION)\n  SET(EXAMPLES_DESTINATION lib/Wt/examples)\nENDIF(NOT EXAMPLES_DESTINATION)\n\nIF(WIN32)\n  # required for all that uses boost.asio\n  ADD_DEFINITIONS(-D_WIN32_WINNT=0x0600)\n\n  IF(SHARED_LIBS)\n    # See http://svn.boost.org/trac/boost/ticket/3465\n    SET(WT_NO_BOOST_INTRUSIVE true)\n  ENDIF(SHARED_LIBS)\nENDIF(WIN32)\n\n# Fixup Windows declspec stuff\nIF(NOT SHARED_LIBS)\n  SET(WT_STATIC true)\n  SET(WTHTTP_STATIC true)\n  SET(WT_EXT_STATIC true)\n  SET(WTDBO_STATIC true)\n  SET(WTDBOSQLITE3_STATIC true)\n  SET(WTDBOPOSTGRES_STATIC true)\n  SET(WTDBOFIREBIRD_STATIC true)\n  SET(WTDBOMYSQL_STATIC true)\n  SET(WTDBOMSSQLSERVER_STATIC true)\nENDIF(NOT SHARED_LIBS)\n\nIF(NOT MULTI_THREADED)\n  OPTION(MULTI_THREADED \"Build multi-threaded httpd deamon (if possible)\" ON)\nENDIF(NOT MULTI_THREADED)\n\nSET(BUILD_SHARED_LIBS ${SHARED_LIBS})\n\nSET(DEBUG_LIB_POSTFIX \"d\" CACHE STRING \"String appended to debug libraries\")\n\nSET(LIB_INSTALL_DIR \"lib\" CACHE STRING\n  \"Name for library directory within ${CMAKE_INSTALL_PREFIX}\")\n\nSET(CMAKE_INSTALL_DIR \"${LIB_INSTALL_DIR}/cmake\" CACHE STRING\n  \"Name for CMake package configuration directory within ${CMAKE_INSTALL_PREFIX}\")\n\nIF(WIN32)\n\n  SET(RUNDIR \"c:/witty\") # Does not apply to win32\n\n  IF(NOT DEFINED CONFIGDIR)\n    SET(CONFIGDIR ${RUNDIR} CACHE STRING \"Path for the configuration files\")\n  ENDIF(NOT DEFINED CONFIGDIR)\n\n  SET(USERLIB_PREFIX_DEFAULT \"c:/libraries\")\n  IF(MSVC)\n    SET(BUILD_PARALLEL \"/MP\" CACHE STRING \"MSVC option for parallel builds (/MP or /MPx)\")\n  ENDIF(MSVC)\n\nELSE(WIN32)\n\n  IF(\"${CMAKE_INSTALL_PREFIX}\" STREQUAL \"/usr\")\n    SET(CONFIG_PREFIX \"\")\n  ELSEIF(\"${CMAKE_INSTALL_PREFIX}\" STREQUAL \"/usr/local\")\n    SET(CONFIG_PREFIX \"\")\n  ELSE()\n    SET(CONFIG_PREFIX ${CMAKE_INSTALL_PREFIX})\n  ENDIF()\n\n  SET(RUNDIR \"${CONFIG_PREFIX}/var/run/wt\" CACHE PATH\n    \"Default path for wt session management (only used by FCGI connector)\")\n\n  IF(NOT DEFINED CONFIGDIR)\n    SET(CONFIGDIR \"${CONFIG_PREFIX}/etc/wt\" CACHE STRING \"Path for the configuration files\")\n  ENDIF( NOT DEFINED CONFIGDIR )\n\n  # If the user specifies the standard CMAKE_PREFIX_PATH to find packages,\n  # honour it.\n  IF(CMAKE_PREFIX_PATH)\n    SET(USERLIB_PREFIX_DEFAULT ${CMAKE_PREFIX_PATH})\n  ELSE()\n    SET(USERLIB_PREFIX_DEFAULT \"/usr\")\n  ENDIF()\n\nENDIF(WIN32)\n\nIF(DEFINED USERLIB_ROOT) # Deprecated <= 3.1.3\n  SET(USERLIB_PREFIX ${USERLIB_ROOT} CACHE PATH\n    \"Installation prefix of dependency libraries (by USERLIB_ROOT)\")\nELSE(DEFINED USERLIB_ROOT)\n  SET(USERLIB_PREFIX ${USERLIB_PREFIX_DEFAULT} CACHE PATH\n    \"Installation prefix of dependency libraries\")\nENDIF(DEFINED USERLIB_ROOT)\n\nIF(WIN32)\n  SET(BOOST_PREFIX_DEFAULT \"c:/Program Files/Boost\")\n  OPTION(BOOST_DYNAMIC \"Link to boost DLLs (OFF means static link)\" OFF)\n  OPTION(HARU_DYNAMIC \"Link to libharu DLLs (OFF means static link)\" OFF)\nELSE(WIN32)\n  SET(BOOST_PREFIX_DEFAULT ${USERLIB_PREFIX})\nENDIF(WIN32)\n\nIF(DEFINED BOOST_DIR) # Deprecated <= 3.1.3\n  SET(BOOST_PREFIX ${BOOST_DIR} CACHE PATH\n    \"Installation prefix of boost libraries (by BOOST_DIR)\")\nELSE(DEFINED BOOST_DIR)\n  SET(BOOST_PREFIX ${BOOST_PREFIX_DEFAULT} CACHE PATH\n    \"Installation prefix of boost libraries\")\nENDIF(DEFINED BOOST_DIR)\n\nSET(FCGI_PREFIX ${USERLIB_PREFIX} CACHE PATH\n  \"Installation prefix of fcgi library (overrides USERLIB_PREFIX)\")\nSET(POSTGRES_PREFIX ${USERLIB_PREFIX} CACHE PATH\n  \"Installation prefix of postgresql library (overrides USERLIB_PREFIX)\")\nSET(ODBC_PREFIX ${USERLIB_PREFIX} CACHE PATH\n  \"Installation prefix of ODBC (unixODBC), required for MS SQL Server, not necessary on Windows (overrides USERLIB_PREFIX)\")\nSET(FIREBIRD_PREFIX ${USERLIB_PREFIX} CACHE PATH\n  \"Installation prefix of FirebirdSql library. (overrides USERLIB_PREFIX)\")\nSET(IBPP_SRC_DIRECTORY CACHE PATH\n  \"Path to the SOURCE directory of the IBPP library (C++ Firebird client library, see ibpp.org), Wt includes an ibpp distribution which is used by default. To use a custom IBPP library configure this variable and enable the USE_SYSTEM_IBPP option.\")\nSET(MYSQL_PREFIX ${USERLIB_PREFIX} CACHE PATH\n  \"Installation prefix of mariadb client libraries (overrides USERLIB_PREFIX)\")\nSET(SQLITE3_PREFIX ${USERLIB_PREFIX} CACHE PATH\n  \"Installation prefix of sqlite3 library (overrides USERLIB_PREFIX)\")\nSET(HARU_PREFIX ${USERLIB_PREFIX} CACHE PATH\n  \"Installation prefix of libharu library (overrides USERLIB_PREFIX)\")\nSET(SSL_PREFIX ${USERLIB_PREFIX} CACHE PATH\n  \"Installation prefix of SSL library (overrides USERLIB_PREFIX)\")\nSET(ZLIB_PREFIX ${USERLIB_PREFIX} CACHE PATH\n  \"Installation prefix of zlib library (overrides USERLIB_PREFIX)\")\nSET(GM_PREFIX ${USERLIB_PREFIX} CACHE PATH\n  \"Installation prefix of GraphicsMagick library (overrides USERLIB_PREFIX)\")\nSET(ASIO_PREFIX ${USERLIB_PREFIX} CACHE PATH\n  \"Prefix of Asio (overrides USERLIB_PREFIX), only used when WT_ASIO_IMPLEMENTATION is standalone\")\nSET(UNWIND_PREFIX ${UNWIND_PREFIX} CACHE PATH\n  \"Prefix of unwind library (overrides USERLIB_PREFIX)\")\n\nOPTION(DEBUG \"Support for debugging, must be enabled also in wt_config.xml\" OFF)\n\nIF(CYGWIN)\n  OPTION(BUILD_TESTS \"Build Wt tests\" OFF)\nELSE(CYGWIN)\n  OPTION(BUILD_TESTS \"Build Wt tests\" ON)\nENDIF(CYGWIN)\n\nOPTION(BUILD_FUZZ \"Build Wt fuzzers\" OFF)\n\nADD_DEFINITIONS(-DWT_WITH_OLD_INTERNALPATH_API)\nIF(CYGWIN)\n  ADD_DEFINITIONS(-D__USE_W32_SOCKETS)\nENDIF(CYGWIN)\n\nMARK_AS_ADVANCED( CONFIGDIR )\n\nSET(CONFIGURATION \"${CONFIGDIR}/wt_config.xml\" CACHE PATH \"Path to the wt configuration file\")\nSET(WTHTTP_CONFIGURATION \"${CONFIGDIR}/wthttpd\" CACHE PATH \"Path for the wthttpd configuration file\")\n\nSET(WEBUSER apache CACHE STRING \"Webserver username (e.g. apache or www)\")\nSET(WEBGROUP apache CACHE STRING \"Webserver groupname (e.g. apache or www or users)\")\nIF(WIN32)\n  SET(CONNECTOR_FCGI FALSE)\n  IF(NOT MINGW)\n    OPTION(CONNECTOR_ISAPI \"Compile in ISAPI connector (libwtisapi) ?\" ON)\n  ENDIF(NOT MINGW)\nELSE(WIN32)\n  OPTION(CONNECTOR_FCGI \"Compile in FCGI connector (libwtfcgi) ?\" ON)\n  SET(CONNECTOR_ISAPI OFF)\nENDIF(WIN32)\nOPTION(CONNECTOR_HTTP \"Compile in stand-alone httpd connector (libwthttp) ?\" ON)\nSET(EXAMPLES_CONNECTOR wthttp CACHE STRING \"Connector used for examples\")\n\ninclude (CheckSymbolExists)\n\nfind_package(PNG)\n\nset(ZLIB_ROOT ${ZLIB_PREFIX})\nfind_package(ZLIB)\n\nINCLUDE(cmake/WtFindBoost.txt)\nINCLUDE(cmake/WtFindFcgi.txt)\nINCLUDE(cmake/WtFindMysql.txt)\nINCLUDE(cmake/WtFindPostgresql.txt)\nINCLUDE(cmake/WtFindOdbc.txt)\nINCLUDE(cmake/WtFindGm.txt)\n\nfind_package(OpenGL)\nfind_package(GLEW)\n\nfind_package(Asciidoctor)\n\nset(HPDF_ROOT ${HARU_PREFIX})\nfind_package(HPDF)\n\nset(OPENSSL_ROOT_DIR ${SSL_PREFIX})\nfind_package(OpenSSL)\n\nIF (ENABLE_SAML)\n  find_package(OpenSAML)\n  if(OpenSAML_FOUND)\n    set(WT_HAS_SAML TRUE)\n  endif()\nENDIF (ENABLE_SAML)\n\nIF (ENABLE_UNWIND)\n  INCLUDE(cmake/WtFindUnwind.txt)\nENDIF (ENABLE_UNWIND)\n\nIF (ENABLE_PANGO)\n  INCLUDE(cmake/WtFindPangoFt2.txt)\nENDIF (ENABLE_PANGO)\n\nINCLUDE(cmake/WtFindSystemLibraries.txt)\n\nIF(ENABLE_QT4)\n  FIND_PACKAGE(Qt4)\n\n  IF(QT_FOUND)\n    INCLUDE(${QT_USE_FILE})\n  ENDIF(QT_FOUND)\nENDIF(ENABLE_QT4)\n\nIF(ENABLE_QT5)\n  FIND_PACKAGE(Qt5Core)\nENDIF(ENABLE_QT5)\n\nIF(ENABLE_QT6)\n  FIND_PACKAGE(Qt6 CONFIG COMPONENTS Core)\nENDIF(ENABLE_QT6)\n\nset(WT_THREAD_LIB \"\")\nIF(MULTI_THREADED)\n  find_package(Threads)\n  set(WT_THREAD_LIB Threads::Threads)\nENDIF(MULTI_THREADED)\n\nfind_package(Atomics REQUIRED)\n\nIF(NOT BOOST_WT_FOUND)\n  SET(ERR\n     \"Could not find a boost installation in \" ${BOOST_PREFIX} \".\\n\\n\"\n      \"There are two methods in Wt to find boost:\\n\\n\"\n      \"1. Find boost through cmake (recommended)\\n\"\n      \"This requires cmake 2.6, and is in \"\n      \"that case the default (unless BOOST_COMPILER or BOOST_VERSION is \"\n      \"defined). This method requires a multi-threaded boost installation.\\n\"\n      \"You may need to add your boost version number to \"\n      \"Boost_ADDITIONAL_VERSIONS, and/or set BOOST_PREFIX to the location \"\n      \"where boost is installed.\\n\\n\"\n      \"2. Use the Wt-proprietary method to find boost.\\n\"\n      \"This requires you to define three variables:\\n\"\n      \"BOOST_PREFIX: set to the directory where you installed boost\\n\"\n      \"BOOST_COMPILER: set to the compiler signature as you find them in \"\n      \"library names (e.g.: gcc42)\\n\"\n      \"BOOST_VERSION: set to the boost version, again as you find them in \"\n      \"the library names (e.g.: 1_38)\\n\\n\"\n      \"Note 1: the code to discover boost is located in cmake/WtFindBoost.txt\\n\"\n      \"Note 2: on windows, set BOOST_PREFIX to the full path, eg \"\n      \"c:/Program Files/boost/boost_1_65_1\")\n  MESSAGE(FATAL_ERROR ${ERR})\nENDIF(NOT BOOST_WT_FOUND)\n\nIF(BOOST_WT_MT_FOUND)\n  IF(MULTI_THREADED)\n    MESSAGE(\"** Enabling multi threading.\")\n    SET(MULTI_THREADED_BUILD true)\n    SET(WT_THREADED true)\n    ADD_DEFINITIONS(-D_REENTRANT -DBOOST_SPIRIT_THREADSAFE)\n  ELSE(MULTI_THREADED)\n    MESSAGE(\"** Disabling multi threading.\")\n    SET(MULTI_THREADED_BUILD false)\n\n    ADD_DEFINITIONS(-DBOOST_DISABLE_THREADS -DSQLITE_THREADSAFE=0)\n  ENDIF(MULTI_THREADED)\nELSE(BOOST_WT_MT_FOUND)\n  SET(MULTI_THREADED_BUILD false)\n  MESSAGE(\"** Disabling multi threading: could not find multi-threaded boost libraries\")\n  ADD_DEFINITIONS(-DBOOST_DISABLE_THREADS -DSQLITE_THREADSAFE=0)\nENDIF(BOOST_WT_MT_FOUND)\n\nIF (WIN32)\n  SET(WT_WRASTERIMAGE_DEFAULT_IMPLEMENTATION \"Direct2D\")\nELSE (WIN32)\n  SET(WT_WRASTERIMAGE_DEFAULT_IMPLEMENTATION \"none\")\nENDIF (WIN32)\n\nSET(WT_WRASTERIMAGE_IMPLEMENTATION ${WT_WRASTERIMAGE_DEFAULT_IMPLEMENTATION} CACHE STRING \"Implementation for WRasterImage server-side rendering\")\nSET_PROPERTY(CACHE WT_WRASTERIMAGE_IMPLEMENTATION PROPERTY STRINGS GraphicsMagick Direct2D none)\n\nIF (${WT_WRASTERIMAGE_IMPLEMENTATION} STREQUAL \"GraphicsMagick\")\n  IF (NOT GM_FOUND)\n    MESSAGE(FATAL_ERROR \"WT_WRASTERIMAGE_IMPLEMENTATION set to GraphicsMagick but GM is not found. Indicate the location of your graphicsmagick library using -DGM_PREFIX=...\")\n  ENDIF (NOT GM_FOUND)\n  SET(WT_HAS_WRASTERIMAGE true)\nELSEIF (${WT_WRASTERIMAGE_IMPLEMENTATION} STREQUAL \"Direct2D\")\n  IF (WIN32)\n    SET(WT_HAS_WRASTERIMAGE true)\n  ENDIF (WIN32)\nELSE (${WT_WRASTERIMAGE_IMPLEMENTATION} STREQUAL \"GraphicsMagick\")\n    MESSAGE(\"** Disabled WRasterimage support. Set WT_WRASTERIMAGE_IMPLEMENTATION to GraphicsMagick or Direct2D.\")\nENDIF (${WT_WRASTERIMAGE_IMPLEMENTATION} STREQUAL \"GraphicsMagick\")\n\nIF((CMAKE_CXX_STANDARD EQUAL 17) OR (CMAKE_CXX_STANDARD GREATER 17))\nSET(WT_CPP17_ANY_DEFAULT_IMPLEMENTATION \"std\")\nELSE()\nSET(WT_CPP17_ANY_DEFAULT_IMPLEMENTATION \"thelink2012\")\nENDIF()\nSET(WT_CPP17_ANY_IMPLEMENTATION ${WT_CPP17_ANY_DEFAULT_IMPLEMENTATION} CACHE STRING\n  \"Implementation for Wt::cpp17::any. Defaults to \\\"thelink2012\\\": an included implementation of any by GitHub user thelink2012. Use \\\"std\\\" for std::any, or \\\"experimental\\\" for std::experimental::any, if compiler support is available. You may have to change CMAKE_CXX_STANDARD to enable C++17 support in the compiler.\")\nSET_PROPERTY(CACHE WT_CPP17_ANY_IMPLEMENTATION PROPERTY STRINGS thelink2012 experimental std)\n\nIF (${WT_CPP17_ANY_IMPLEMENTATION} STREQUAL \"thelink2012\")\n  SET(WT_ANY_IS_THELINK2012_ANY ON)\nELSEIF (${WT_CPP17_ANY_IMPLEMENTATION} STREQUAL \"experimental\")\n  SET(WT_ANY_IS_EXPERIMENTAL_ANY ON)\nELSEIF (${WT_CPP17_ANY_IMPLEMENTATION} STREQUAL \"std\")\n  SET(WT_ANY_IS_STD_ANY ON)\nELSE (${WT_CPP17_ANY_IMPLEMENTATION} STREQUAL \"thelink2012\")\n  MESSAGE(FATAL_ERROR \"WT_CPP17_ANY_IMPLEMENTATION must be one of thelink2012, experimental, or std\")\nENDIF (${WT_CPP17_ANY_IMPLEMENTATION} STREQUAL \"thelink2012\")\n\nSET(WT_CPP20_DATE_TZ_DEFAULT_IMPLEMENTATION \"date\")\nSET(WT_CPP20_DATE_TZ_IMPLEMENTATION ${WT_CPP20_DATE_TZ_DEFAULT_IMPLEMENTATION} CACHE STRING\n  \"Implementation for Wt::cpp20::date. Defaults to \\\"date\\\": an included implementation of date and timezone support by Howard Hinnant. Use \\\"std\\\" for C++20's \\\"std::chrono\\\" implementation.\")\nSET_PROPERTY(CACHE WT_CPP20_DATE_TZ_IMPLEMENTATION PROPERTY STRINGS date std)\n\nIF (${WT_CPP20_DATE_TZ_IMPLEMENTATION} STREQUAL \"date\")\n  SET(WT_DATE_TZ_USE_DATE ON)\nELSEIF(${WT_CPP20_DATE_TZ_IMPLEMENTATION} STREQUAL \"std\")\n  SET(WT_DATE_TZ_USE_STD ON)\nELSE()\n  MESSAGE(FATAL_ERROR \"WT_CPP20_DATE_TZ_IMPLEMENTATION must be date or std\")\nENDIF()\n\nSET(WT_ASIO_DEFAULT_IMPLEMENTATION \"boost\")\nSET(WT_ASIO_IMPLEMENTATION ${WT_ASIO_DEFAULT_IMPLEMENTATION} CACHE STRING\n\"Implementation of Asio to use. Defaults to \\\"boost\\\". Use \\\"standalone\\\" and provide its path in ASIO_PREFIX to use the standalone version.\")\nSET_PROPERTY(CACHE WT_ASIO_IMPLEMENTATION PROPERTY STRINGS boost standalone)\n\nIF (${WT_ASIO_IMPLEMENTATION} STREQUAL \"boost\")\n  SET(WT_ASIO_IS_BOOST_ASIO ON)\nELSEIF(${WT_ASIO_IMPLEMENTATION} STREQUAL \"standalone\")\n  SET(WT_ASIO_IS_STANDALONE_ASIO ON)\nELSE(${WT_ASIO_IMPLEMENTATION} STREQUAL \"boost\")\n  MESSAGE(FATAL_ERROR \"WT_ASIO_IMPLEMENTATION must be boost or standalone\")\nENDIF(${WT_ASIO_IMPLEMENTATION} STREQUAL \"boost\")\n\nIF(WT_ASIO_IS_STANDALONE_ASIO)\nIF(NOT EXISTS \"${ASIO_PREFIX}/include/asio.hpp\")\nMESSAGE(FATAL_ERROR \"WT_ASIO_IMPLEMENTATION is set to standalone, but Asio was not found in ASIO_PREFIX\")\nENDIF(NOT EXISTS \"${ASIO_PREFIX}/include/asio.hpp\")\nINCLUDE_DIRECTORIES(\"${ASIO_PREFIX}/include\")\nENDIF(WT_ASIO_IS_STANDALONE_ASIO)\n\nFIND_PACKAGE(Doxygen)\n\n# Boost is used nearly everywhere, so we can put these here\nINCLUDE_DIRECTORIES(${BOOST_INCLUDE_DIRS})\nLINK_DIRECTORIES(${BOOST_LIB_DIRS})\nIF(WIN32)\n  IF(BOOST_DYNAMIC)\n    ADD_DEFINITIONS(-DBOOST_ALL_DYN_LINK)\n  ELSE(BOOST_DYNAMIC)\n    # You could expect that this is the default when BOOST_ALL_DYN_LINK\n    # is not set, but this is problematic for cygwin\n    ADD_DEFINITIONS(-DBOOST_THREAD_USE_LIB)\n  ENDIF(BOOST_DYNAMIC)\n  ADD_DEFINITIONS(\n      -D_CRT_SECURE_NO_WARNINGS\n      -D_SCL_SECURE_NO_WARNINGS\n      )\nENDIF(WIN32)\n\nIF(NOT CMAKE_BUILD_TYPE)\n  SET(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING\n      \"Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel.\"\n      FORCE)\nENDIF(NOT CMAKE_BUILD_TYPE)\n\nIF(DEBUG)\n  SET(WT_DEBUG_ENABLED 1)\nELSE(DEBUG)\n  SET(WT_DEBUG_ENABLED 0)\nENDIF(DEBUG)\n\nIF(INSTALL_DOCUMENTATION)\n  ADD_CUSTOM_TARGET(doc ALL)\nELSE(INSTALL_DOCUMENTATION)\n  ADD_CUSTOM_TARGET(doc)\nENDIF(INSTALL_DOCUMENTATION)\n\nif(ASCIIDOCTOR_FOUND)\n  macro(ASCIIDOC_FILE target infile outfile)\n    add_custom_target(${target}\n      Asciidoctor::asciidoctor\n        -a toc\n        -a numbered\n        -a icons=font\n        -a source-highlighter=highlight.js\n        -a linkcss\n        -a stylesheet=wt.css\n        -o \"${outfile}\"\n        \"${infile}\"\n       DEPENDS \"${infile}\"\n       BYPRODUCTS \"${outfile}\"\n       COMMENT \"Asciidoctor ${infile}\")\n    add_dependencies(doc ${target})\n  endmacro()\nendif()\n\nIF (DOXYGEN_FOUND)\n  ADD_CUSTOM_TARGET(doxygen\n    ${DOXYGEN_EXECUTABLE}\n    WORKING_DIRECTORY ${WT_SOURCE_DIR}\n    COMMENT \"Doxygen ...\")\n  ADD_DEPENDENCIES(doc doxygen)\n  ADD_CUSTOM_TARGET(doxygen-examples\n    ${DOXYGEN_EXECUTABLE}\n    WORKING_DIRECTORY ${WT_SOURCE_DIR}/examples\n    COMMENT \"Doxygen for examples ...\")\n  ADD_DEPENDENCIES(doc doxygen-examples)\nENDIF (DOXYGEN_FOUND)\n\n# we enable rpath support for APPLE, this probably goes against policy\n# linux distributions?\nIF(APPLE)\n  SET(CMAKE_INSTALL_RPATH \"${CMAKE_INSTALL_PREFIX}/lib\")\n  SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)\n  LIST(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES \"${CMAKE_INSTALL_PREFIX}/lib\" isSystemDir)\n  IF(\"${isSystemDir}\" STREQUAL \"-1\")\n    SET(CMAKE_INSTALL_RPATH \"${CMAKE_INSTALL_PREFIX}/lib\")\n  ENDIF(\"${isSystemDir}\" STREQUAL \"-1\")\n  SET(CMAKE_MACOSX_RPATH TRUE)\nENDIF(APPLE)\n\nSUBDIRS(src)\n\nIF(BUILD_EXAMPLES)\n  IF(WIN32)\n    SUBDIRS(examples)\n  ELSE(WIN32)\n    IF (INSTALL_EXAMPLES)\n      SUBDIRS(examples)\n    ELSE (INSTALL_EXAMPLES)\n      SUBDIRS(EXCLUDE_FROM_ALL examples)\n    ENDIF (INSTALL_EXAMPLES)\n  ENDIF(WIN32)\nENDIF(BUILD_EXAMPLES)\n\nIF(BUILD_TESTS)\n  SUBDIRS(test)\nENDIF(BUILD_TESTS)\n\nIF(BUILD_FUZZ)\n  SUBDIRS(fuzz)\nENDIF(BUILD_FUZZ)\n\nIF(INSTALL_RESOURCES)\n  INSTALL(DIRECTORY ${WT_SOURCE_DIR}/resources DESTINATION\n    ${CMAKE_INSTALL_PREFIX}/share/Wt/)\nENDIF(INSTALL_RESOURCES)\n\nif(INSTALL_THEMES)\n  install(DIRECTORY ${WT_SOURCE_DIR}/src/themes\n          DESTINATION ${CMAKE_INSTALL_PREFIX}/share/Wt/\n          PATTERN \"node_modules\" EXCLUDE)\nendif()\n\nIF(INSTALL_EXAMPLES)\n  INSTALL(DIRECTORY ${WT_SOURCE_DIR}/examples/\n          DESTINATION ${CMAKE_INSTALL_PREFIX}/${EXAMPLES_DESTINATION}\n          PATTERN \"examples/*\"\n          PATTERN \"node_modules\" EXCLUDE)\nENDIF(INSTALL_EXAMPLES)\n\nIF(INSTALL_DOCUMENTATION)\n  INSTALL(DIRECTORY ${WT_SOURCE_DIR}/doc/reference/html DESTINATION\n    ${CMAKE_INSTALL_PREFIX}/${DOCUMENTATION_DESTINATION}/reference)\n  INSTALL(FILES ${WT_SOURCE_DIR}/doc/reference/wt.qch DESTINATION\n    ${CMAKE_INSTALL_PREFIX}/${DOCUMENTATION_DESTINATION}/reference)\n  INSTALL(DIRECTORY ${WT_SOURCE_DIR}/doc/examples/html DESTINATION\n    ${CMAKE_INSTALL_PREFIX}/${DOCUMENTATION_DESTINATION}/examples)\n  INSTALL(DIRECTORY ${WT_SOURCE_DIR}/doc/tutorial DESTINATION\n    ${CMAKE_INSTALL_PREFIX}/${DOCUMENTATION_DESTINATION})\nENDIF(INSTALL_DOCUMENTATION)\n\nIF(NOT EXISTS ${CONFIGDIR}/wt_config.xml)\n  INSTALL(FILES ${WT_BINARY_DIR}/wt_config.xml DESTINATION ${CONFIGDIR})\nENDIF (NOT EXISTS ${CONFIGDIR}/wt_config.xml)\n\nif(ENABLE_HARU AND HPDF_FOUND)\n  set(HAVE_HARU ON)\n  set(WT_HAS_WPDFIMAGE true)\nendif()\n\nIF(ENABLE_SSL AND OPENSSL_FOUND)\n  SET(HAVE_SSL ON)\n  SET(WT_WITH_SSL true)\nENDIF(ENABLE_SSL AND OPENSSL_FOUND)\n\nIF(ENABLE_PANGO AND PANGO_FT2_FOUND)\n  SET(HAVE_PANGO ON)\nENDIF(ENABLE_PANGO AND PANGO_FT2_FOUND)\n\nif(ENABLE_OPENGL AND OPENGL_FOUND AND GLEW_FOUND AND WT_HAS_WRASTERIMAGE)\n  set(WT_USE_OPENGL TRUE)\nendif()\n\nIF(ENABLE_UNWIND AND UNWIND_FOUND)\n  SET(HAVE_UNWIND ON)\nENDIF(ENABLE_UNWIND AND UNWIND_FOUND)\n\n# Compile time constants & make sure our build finds it\nFILE(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/Wt)\nSET(WCONFIG_H_PATH ${CMAKE_CURRENT_BINARY_DIR}/Wt/WConfig.h)\nCONFIGURE_FILE(\n  ${WT_SOURCE_DIR}/WConfig.h.in\n  ${WCONFIG_H_PATH}\n)\nINCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})\nINSTALL_FILES(/include/Wt FILES ${WCONFIG_H_PATH})\n\n# Generate wt_config.xml from wt_config.xml.in\nCONFIGURE_FILE(\n  ${WT_SOURCE_DIR}/wt_config.xml.in\n  ${WT_BINARY_DIR}/wt_config.xml\n)\n\n# CMake package configuration\nIF(${Boost_USE_STATIC_LIBS})\n  SET(_WTCONFIG_BOOST_STATIC \"ON\")\nELSE()\n  SET(_WTCONFIG_BOOST_STATIC \"OFF\")\nENDIF()\nIF (${WT_ASIO_IMPLEMENTATION} STREQUAL \"boost\")\n  SET(_WTCONFIG_CMAKE_FIND_BOOST TRUE)\nELSEIF(Boost_USE_STATIC_LIBS AND NOT SHARED_LIBS)\n  SET(_WTCONFIG_CMAKE_FIND_BOOST TRUE)\nELSE()\n  SET(_WTCONFIG_CMAKE_FIND_BOOST FALSE)\nENDIF()\nCONFIGURE_FILE(\n  ${WT_SOURCE_DIR}/wt-config.cmake.in\n  ${WT_BINARY_DIR}/wt-config.cmake\n  @ONLY\n)\nUNSET(_WTCONFIG_CMAKE_FIND_BOOST)\nUNSET(_WTCONFIG_BOOST_STATIC)\nCONFIGURE_FILE(\n  ${WT_SOURCE_DIR}/wt-config-version.cmake.in\n  ${WT_BINARY_DIR}/wt-config-version.cmake\n  @ONLY\n)\nINSTALL(FILES\n  ${WT_BINARY_DIR}/wt-config.cmake\n  ${WT_BINARY_DIR}/wt-config-version.cmake\n  DESTINATION ${CMAKE_INSTALL_DIR}/wt)\n"
        },
        {
          "name": "Changelog",
          "type": "blob",
          "size": 116.6767578125,
          "content": "WARNING! This file is no longer used.\n\nPlease refer to the ReleaseNotes for major changes, and the git log for\nmore fine-grained information on changes.\n\n28-11-2013:\n\t* WRasterImage: now also support skia as backend. Cmake option\n\tENABLE_GM is replaced by WT_RASTERIMAGE_IMPLEMENTATION, which has\n\tto be set to none, GraphicsMagick, or skia.\n\n10-07-2013:\n\t* WSignal: Due to boost 1.54 complaining on boost.signals being\n\tdeprecated, namespace Wt::Signals was created. This namespace contains\n\tthe boost signals implementation that is optimal for your boost: for\n\tboost < 1.54 it will be signals, for boost > 1.54 it will be signals2.\n\n15-05-2013:\n\t* WStandardItem, WStandardItemModel: before: checkboxes are rendered\n\tin enabled state when ItemIsUserCheckable flag is set. Now: checkboxes\n\tare rendered when CheckStateRole is present. If ItemIsUserCheckable is\n\tset, the checkbox will be editable. If ItemIsUserCheckable is not set,\n\tthe checkbox will be uneditable. setCheckable(true) will add a\n\tCheckStateRole of false when no CheckStateRole was present on the\n\telement.\n\n05-04-2013:\n\t* Client SSL certificates can be queried from (static) WResources\n\n26-02-2013:\n\t* Fixed bugs #1711, #1712, #1713, #1714, #1715\n\n\t* Wt-3.3.0-rc3\n\n19-02-2013:\n\t* Fixed bugs #1689, #1698, #1687 (from Starius)\n\n\t* Implemented features #1675 (from Thomas Saquet)\n\n\t* Wt-3.3.0-rc2\n\n18-02-2013:\n\t* Fixed regression in resource continations\n\n15-02-2013:\n\t* Fixed bugs #1699, #1697, #1696, #1695, #1677, #1676\n\n\t* Fixed WPopupMenu::triggered() behaviour change from 3.2.3\n\n12-02-2013:\n\t* Wt-3.3.0-rc1\n\n25-01-2013:\n\t* Merged in bootstrap branch, with many additions, changes and above\n\tall addition of support for Twitter's Bootstrap framework as a new\n\ttheme\n\n12-12-2012:\n\t* Added binary WebGL VBO buffers, contributed by Tassilo Glander\n\n01-11-2012:\n\t* Wt-3.2.3\n\n05-10-2012:\n\t* Layouts: various bug fixes and improvements\n\n\t* Render: added support for repeating table headers\n\n\t* WApplication: added some tentative methods for 404 generation in\n\tresponse to internal paths\n\n13-09-2012:\n\t* Render: added support for explicit page breaks and % widths\n\n\t* layouts: fix popup widgets confusing preferred size calculations\n\t(tentatively)\n\n13-08-2012:\n\t* Payment: new API for payment processing, with an implementation\n\tfor PayPal\n\n10-08-2012:\n\t* layouts: fix various issues\n\n\t* WTextEdit: fix behaviour inside a WPanel\n\n\t* Render: code reorganizations for java port\n\n03-08-2012:\n\t* QueryModel: added stableResultRow() method which has more guarantees\n\tof consistently returning the same result regardless of database\n\tchanges\n\n27-07-2012:\n\t* Dbo/Exception: add support for SQLSTATE code information\n\n\t* Mail/Client: log configuration that will be used on first use\n\n\t* WAnchor: use <a> tag even if no link has been provided (#1348)\n\n\t* WDoubleSpinBox: fix formatting (#1358)\n\n\t* WSlider: add more hooks for custom styles\n\n25-07-2012:\n\t* Layouts: fix error in switching to contents determining layout size\n\n\t* Wt-3.2.2-p1\n\n23-07-2012:\n\t* WebController: workaround filesystem runtime problem for boost 1.50\n\n\t* Wt-3.2.2\n\n16-07-2012:\n\t* Wt: fix compile issues with boost 1.50\n\n\t* WPieChart: support TooltipRole data\n\n\t* WGridLayout, WBoxLayout: fix dynamic add/remove behaviour, fix\n\tbehaviour in WGroupBox, and honor minimum size settings on container\n\n\t* Wt-3.2.2-rc2\n\n04-07-2012:\n\t* Wt-3.2.2-rc1\n\n28-06-2012:\n\t* WAbstractSpinBox: fix (server-side) validate()\n\n\t* WComboBox: handle current index when deleting rows\n\n\t* WTreeView: use hasChildren() do determine need for expand icon\n\n\t* layout: properly constrain minimum sizes in the application root\n\n23-05-2012:\n\t* dbo: add One-to-One relations, using Wt::Dbo::weak_ptr<>\n\n\t* dbo: check relations are soundly defined instead of generating wrong\n\tSQL\n\n\t* dbo: collection::clear() method added\n\n\t* Utils::base64Encode(): added option to omit CRLFs from generated\n\tbase64 stream\n\n\t* WGridLayout, WBoxLayout: more fixes to be backwards compatible\n\twith previous version\n\n\t* http/WtReply: fix memory leak when too-large files are uploaded\n\tleaving stale temporary files\n\n\t* WebSession: clean-up session-id file for FastCGI (regression)\n\n\t* WApplication::setInternalPath(): make it work properly when used\n\twithout JavaScript\n\n15-05-2012:\n\t* feature/dbo/tutorial9 example added: splits the classes over several\n\tfiles\n\n\t* WCartesianChart: add support for custom markers, and custom axis\n\tpadding\n\n\t* WGridLayout, WBoxLayout: several bug fixes\n\n14-05-2012:\n\t* WInteractWidget::setMouseOverDelay() configures a delay before\n\tthe mouse over signal is fired\n\n\t* WInteractWidget::doubleClicked() has been reimplemented using\n\tmouseClicked() so that not both will fire in case both have events\n\tattached\n\n09-05-2012:\n\t* WGridLayout, WBoxLayout: new implementation, which should get rid\n\tof misfeatures and annoyances\n\n\t* WebRenderer: do not generate double '//' when loading theme CSS\n\n\t* WebSession: do not wait for 'load' signal if not using ajax puzzle\n\n\t* WFileUpload: fix behaviour in MS HTA mode\n\n05-04-2012:\n\t* StdGridLayoutImpl.js: unbreak layout in WGroupBox behaviour\n\n\t* Dbo/QueryModel: fix Firefox not showing header problem (LevelRole error)\n\n03-04-2012:\n\t* WGlobal: add more forwards\n\n\t* WTreeView: relax fix for behaviour in layout manager\n\n\t* Dbo::QueryModel: make const methods const\n\n30-03-2012:\n\t* Wt 3.2.1 (final) released\n\n03-01-2012:\n\t* Wt/Utils: new header with utility functions that implement\n\tcommonly used hash functions and encoding/decoding\n\n\t* WAxis: fix Date and DateTime scale rendering, to take into acount\n\tlabelInterval() and better choice of label values\n\n28-12-2011:\n\t* Dbo/Transaction: do not require a commit() to commit a transaction\n\t(but preserve behaviour to rollback in case of an exception)\n\n27-12-2011:\n\t* Auth/: reorganisation, more model/widget separation\n\n26-12-2011:\n\t* WSlider: implement disabled rendering\n\n22-12-2011:\n\t* hangman example: add Russian translation\n\n19-12-2011:\n\t* Render/: optimize table rendering\n\n07-12-2011:\n\t* WGoogleMap: unify loading for v2 and v3, fixes bugs in loading\n\ta second v3 google map\n\n01-12-2011:\n\t* Wt.js, WtReply: more robust handling of flaky WebSocket connections\n\n\t* hangman example: misc editorial changes\n\n\t* WReadOnlyProxyModel: a simple proxy model that allows sharing of\n\tsource model between different sessions (but read-only)\n\n\t* Dbo: added belongsTo() and hasMany() overloads which infers the\n\tforeign key names from the foreign table\n\n\t* Dbo: added session() method to actions\n\n\t* WStringStream: optimization for string literals which avoids\n\tstrlen()\n\n\t* WDialog: fix positionAt()\n\n\t* wtfcgi: fix regression (data corruption) when built with DEBUG=ON\n\n29-11-2011:\n\t* Released: 3.2.0\n\n21-11-2011:\n\t* Wt/Dbo/backend/Firebird: merged Firebird backend contributed by\n\tLukasz Matuszewski from Technical University of Gdansk.\n\n\t* Wt/WLogger: the library now uses macros that wrap around\n\tWt::log() by default for internal logging, but this could be\n\tadapted to use another logging system of your choice. We also\n\tabide the third law of logging libraries: that they will expand\n\ttheir features until they become unusable: we added configurations\n\toptions to enable or disable specific logging.\n\n\t* WServer: support catching SIGHUP (on unix-like) systems to\n\treread the configuration file.\n\n\t* httpd: implement newer (and newest) WebSocket drafts (protocol\n\tversions 7, 8 and 13)\n\n\t* all: closed several bugs and feature requests (#956, #1015,\n\t#1018, #1064)\n\n18-11-2011:\n\t* WString: we now store arguments as WString so they are also\n\tproperly i18n-ed (#1059).\n\n07-11-2011:\n\t* WException: new, public exception class (was previously an internal\n\tone)\n\n\t* WIOService: new, public service class for async I/O, and its\n\tthread pool\n\n\t* WStringStream: new, public fast stringstream implementation (was\n\tpreviously an internal class)\n\n\t* Wt/Auth: new, authentication module\n\n\t* Wt/Json: new, JSON library\n\n\t* Wt/Mail: new, mail client\n\n\t* Wt/Http/Client: new, http client (former Client renamed to WtClient)\n\n\t* Wt/Test/WTestEnvironment: has moved to a \"wttest\" pseudo-connector\n\tlibrary\n\n\t* WFormWidget: added a valueText() that returns the textual\n\trepresentation of the current value\n\n\t* WApplication: added deferRendering() and resumeRendering() API,\n\tuseful for asynchronous client operations\n\n\t* Wt::log(): global logging method, similar to but more useful\n\tthan WApplication::log()\n\n\t* WTemplate: added support for functions, and two standard functions\n\tid() and tr()\n\n\t* WTemplate: implemented arguments parsing and use (\"class\")\n\n\t* WebSession: added DoS meausures: ajax puzzle and plain session\n\trate limitation\n\n19-10-2011:\n\t* WAbstractItemView: reimplemented and simplified header item rendering\n\n\t* Wt.js: workaround browser bugs in scrollLeft reading in RTL mode,\n\tfixing WAbstractItemView column resizing in RTL layouts.\n\n12-10-2011:\n\t* WRectF: fix isEmpty() to be more restrictive: only a rect with\n\twidth = 0 and height = 0 is now empty\n\n11-10-2011:\n\t* WPopupMenuItem: fix crash with re-showing hidden popup\n\n\t* WDialog: add setClosable() which adds a close icon to the title bar\n\n\t* WAbstractItemView: more flexible API for header height and vertical\n\talignment\n\n05-10-2011\n\t* WMediaPlayer: make sure that relative URLs resolve against deployment\n\tpath (#1007)\n\n03-10-2011\n\t* Dbo: added dialect option for 'rows ? to ?' (Firebird database).\n\n23-09-2011\n\t* Wt 3.1.11 released\n\n19-09-2011\n\t* WAnchor, RefEncoder: added indirection to strip session ID from the\n\treferrer before navigating to an external URL (#607)\n\n\t* wthttp: stabilized WebSockets handling\n\n13-09-2011\n\t* WConfig: added a check to detect header/library version mismatches\n\n\t* Chart/WAxis.C: a fix from Joe Garcia, crash with log scaling\n\n\t* WItemDelegate: set target new window for WLink data when it references\n\ta resource\n\n\t* WMenu: fix hiding of a menu item to hide the entire item, not just\n\tthe contents (label)\n\n05-09-2011\n\t* WResource, Http/ResponseContinuation: added API to suspend a response\n\twhile waiting for more data, and resuming later\n\n31-08-2011:\n\t* WResource: use suggestedFilename() also when set during\n\thandleRequest() (#920)\n\n22-08-2011:\n\t* Dbo/DbAction: fix missing actId() in FromAnyAction triggered\n\tby QueryModel with natural ids\n\n\t* WAbstractServer, WebMain, WebSession: added support for\n\tscheduling events, used to timeout bootstyle response to avoid problems\n\ton IE(9) ?\n\n\t* WCssDecorationStyle: fix border() segfault\n\n10-08-2011:\n\t* WContainerWidget, WScrollArea, DomElement: use overflow-x and\n\toverflow-y CSS style since now well cross-browser supported (#830)\n\n\t* Dbo/Session: add forceReread parameter to load()\n\n\t* WLength: throw exception when unit is corrupt\n\n\t* WTreeTable: throw exception on contract abuse\n\n\t* examples/wt-homepage: Russian translation contributed by Dmitriy\n\tIgrishin\n\n09-08-2011:\n\t* Wt.js: fix z-index for drag widget (#927)\n\n\t* WTreeView.js: fix column 0 resizing with total treeview regression\n\n\t* WFormWidget.C: do not allow editing when isReadOnly()\n\n\t* Dbo/ptr: fix ptr operator bool() loading the object (#909)\n\n\t* Dbo/CMakeLists.txt: support building and installing Wt::Dbo\n\tindependently from Wt (#907)\n\n05-08-2011:\n\t* WApplication: added a docRoot() method which returns the webserver\n\tdocument root\n\n03-08-2011:\n\t* WMediaPlayer: new cross-browser, flexible, audio/video player widget\n\n\t* WHTML5Video, WHTML5Audio, WHTML5Media: renamed to WVideo, WAudio, WAbstractMedia\n\n\t* WSound, SoundManager: reimplemented using WMediaPlayer\n\n\t* WPopupMenu: new method setAutoHide() for automatic hide when\n\tthe mouse leaves\n\n\t* WLink, ...: new utility class that abstracts a link destination (be\n\tit a URL, a WResource or an internal path)\n\n\t* WPopupMenuItem: new methods setLink() and setLinkTarget()\n\tassociate a link with the popup menu\n\n25-07-2011:\n\t* WPopupMenu, WPopupMenuItem: improved triggered() signal API and\n\tadded setSelectable() signals\n\n18-07-2011:\n\t* WMenuItem: fix takeContents() (#897)\n\n\t* WMenu, WMenuItem, WSubMenuItem: simplifiy internal path handling with submenus\n\n15-07-2011:\n\t* examples/feature/broadcast: add an example that illustrates\n\tserver push, WServer::post() and synchronizing a shared resource\n\tacross sessions\n\n14-07-2011:\n\t* fix min-width being ignored in layout managers\n\n\t* WDialog: implement setResiable() (#612)\n\n12-07-2011:\n\t* collection: implemented count() method for relational\n\tcollections (#882)\n\n11-07-2011:\n\t* WFileUpload, WApplication: fix maximum request size and fileTooLarge()\n\tbugs (#794)\n\n\t* WTestEnvironment: add methods to test reentrant eventloops (#711)\n\n08-07-2011:\n\t* Wt 3.1.10 !\n\n07-07-2011:\n\t* Dbo: allow foreign key constraints to be passed to a\n\tprimary key (that is also a foreing key)\n\n\t* Dbo: implement ostream<< for a ptr<C>.\n\n06-07-2011:\n\t* Wt.js: fix HTML5 history spec weirdness with null state\n\n\t* WFileUpload: fix second upload() crash (#888).\n\n04-07-2011:\n\t* WWebWidget: added childrenChanged() signal and use this in\n\tWMenu to track contents stack updates\n\n29-06-2011:\n\t* WWidget: show/hide animations also work on FF5 now\n\n\t* WMenu: better handling of internal path changes to use best\n\tmatch (when components include more than one level)\n\n\t* WMenu: fix stateless slot learning issue with submenu items\n\n28-06-2011:\n\t* Dbo/ptr: let modify() return a proxy mutator object which marks\n\tdirty from its constructor and destructor, ensuring that\n\tmodifications are not lost in the case the session is flushed\n\tamidst a modification.\n\n27-06-2011:\n\t* Dbo/collection: implement insert() and erase() for ManyToOne\n\tcollections\n\n24-06-2011:\n\t* WApplication: implemented changeSessionId() method, useful to\n\tmitigate session fixation attacks\n\n\t* WApplication: added removeMetaHeader() method\n\n\t* WFontMetrics: solve pango font-based metrics for cursive fonts\n\n\t* WTableCell, WTableRow, WTableColumn: add more convenience\n\tmethods for navigating the row, column\n\n23-06-2011:\n\t* WApplication: button img style to keep HTML4 behaviour of centering\n\tthe icon vertically in the button\n\n\t* WWidget, WWebWidget, js/ToolTip: implement an XHTML tooltip using\n\tJavaScript\n\n\t* WTableView: fix setHeaderRowHeight() in plain HTML mode, other\n\tplain HTML style consistency improvements\n\n19-06-2011:\n\t* collection: implement copy constructor which is needed for relational\n\tcollections\n\n14-06-2011:\n\t* WTemplate, WText: implement setInternalPathEncoding() method which\n\tencodes anchors with internal path references\n\n\t* WAnchor, ... resolve relative paths correctly when HTML5 History\n\tinternal path implementations are used\n\n30-05-2011:\n\t* WAbstractItemView, WTreeView: fix browser memory leaks of\n\tinline stylesheet definitions (#834)\n\n27-05-2011:\n\t* WebRenderer, WebSession: better detection of IE9 and workaround\n\tits bugs (box-sizeing border-box)\n\n\t* WWebWidget: do not set an offset auto for IE (gets confused)\n\n23-05-2011:\n\t* WTextEdit: implement missing toolBar() method\n\n\t* WCssDecorationStyle: fix operator= behaviour and unset properties\n\t(#816)\n\n20-05-2011:\n\t* WServer, http: remove singleton objects to allow multiple\n\tWServer instances\n\n\t* WAbstractSpinBox: fix behaviour on IE\n\n\t* Wt.js: fix button up registration\n\n19-05-2011:\n\t* WTextEdit: make all things configurable per instance (#801).\n\n13-05-2011:\n\t* WebSession: relax needs for setting baseURL. Looks good !\n\n\t* WWidget, WAnimation: added animation options for setHidden(),\n\tand new methods animateShow() and animateHide()\n\n\t* WStackedWidget: added support for a transition animation\n\n\t* WDialog: added animation support for the dialog cover as well,\n\tand improved centering on IE (at least it seems to me ?)\n\n06-05-2011:\n\t* WebSession: fix baseURL property usage and internal path\n\tinconsistencies\n\n\t* WObject: fixed memory leak (signal destroyed was never deleted)\n\n\t* WTreeTable: fixed progressive bootstrap behaviour\n\n\t* WTableView: pageSize is minimally 1\n\n\t* http/Connection: fix HTTP1.0 + continuations error (#810)\n\n\t* WTestEnvironment: fix reading from server_ = 0 bug\n\n27-04-2011:\n\t* backend/Postgres: use actual autogenerated id field name instead\n\tof \"id\"\n\n26-04-2011:\n\t* http/Connection: fix a leak in websocket sockets (file descriptors)\n\n\t* WLayout: added a clear() method which removes all contents\n\n\t* WDataSeries: fix setLabelColor() being ignored\n\n\t* Dbo/backend/Postgres: set client encoding to UTF8\n\n\t* WTable: added moveRow() and moveColumn() methods\n\n\t* WTableView: fix setColumnHidden() with headerColumns()\n\n\t* WebSession: use baseURL property for self-referencing URLs\n\n\t* WServer: post() with optional fallbackFunction that is called\n\twhen the targeted session is dead (by Gaetano Mendola)\n\n14-04-2011:\n\t* WAbstractArea: fix anchor not being deleted\n\n13-04-2011:\n\t* WebSession: fix setting cookies when using websockets\n\n\t* WApplication: fix unload() interfering with session reload\n\twhen reload-is-new-session is set to false\n\n\t* sqlite3: bump to version 3.7.6\n\n12-04-2011:\n\t* WebSession, WebRenderer: handle WidgetSet session reloading\n\n11-04-2011:\n\t* http/Configuration.C: fix missing --docroot segfault problem\n\n\t* web/WebRenderer: option to allow splitting skeleton file in an\n\tinvariant and variant part (useful if refreshing frequently)\n\n\t* WGoogleMap: fix rendering in layout manager on webkit\n\n\t* WStreamResource: refactored WFileResource, contributed by Dmitriy\n\tIgrishin\n\n07-04-2011:\n\t* 3.1.9: release time !\n\n05-04-2011:\n\t* target/android, target/osx: starting to support these mobile targets\n\n\t* Ext/Calendar: set selected date on render\n\n01-04-2011:\n\t* Chart/WChart2DRenderer.C: avoid clipping with WRasterImage backend of\n\tlabels, titles by rendering in a wider box\n\n\t* WServer::post(): for lock-free event delivery to a session, instead of\n\ttaking the WApplication::UpdateLock. Simplechat and codeview exapmles were\n\tadapted to use this approach.\n\n29-03-2011:\n\t* WAbstractItemView: fix API usage when not rendered\n\n\t* WDate: patches from Gaetano Mendola w.r.t. invalid dates after month/year\n\toperations + isLeapYear() implementation\n\n25-03-2011:\n\t* FontSupportPango: store leaky pango_font_map in thread local memory\n\n\t* WRasterImage: fix clipping problem with text rendering\n\n\t* W*Slider: fix 0 value and readonly attribute behaviour (#748, #749)\n\n\t* Wt.js: fitToWindow() when object is wider/taller than window (#766)\n\n\t* WebSession: support cookies in CORS (withCredentials flag)\n\n\t* Wt/WAxis: setResolution() implementation, contributed by Gaetano Mendola\n\n23-03-2011:\n\t* target/osx: Add script to generate an OSX Framework for iPad/iPhone\n\n\t* Dbo/Query: fix limit_ and offset_ not being copied in copy constructor\n\n\t* Chart/WCartesianChart: allow custom color for a single bar in a bar\n\tseries using BarPenColorRole and BarBrushColorRole data roles\n\n21-03-2011:\n\t* Dbo/QueryModel: honour original limit() and offset()\n\n25-02-2011:\n\t* WSpinBox, WDoubleSpinBox: separated integer from double spinbox,\n\trewrite to take into account #737, #727, #721. Note that the API\n\tchanged in several ways.\n\n23-02-2011:\n\t* WRasterImage: implement drawImage() and improved text rendering,\n\tusing libpango as font selector and glyph shaper, if available.\n\n\t* WPdfImage: use libpango for selecting (truetype) fonts, if available.\n\n15-02-2011:\n\t* WebSession: support HTML5 History API for internal paths\n\n\t* wthttpd: a value for docroot like .:/css,/resources,/style is\n\tinterpreted as defaulting to a deployed app except for the given\n\tpaths, allowing deployment without ugly URLs (?_=)\n\n12-02-2011:\n\t* WSubMenuItem: behave more consistently w.r.t selection (#694)\n\n11-02-2011:\n\t* WString, WMessageResourceBundle: added i18n support for plural forms\n\n\t* WSlider: provide better CSS-ability and support for HTML5 input range\n\tnative control\n\n10-02-2011:\n\t* WRun(), WServer::addEntryPoint(): uses a boost::function for the\n\tapplication creator callback, so that you can bind additional arguments\n\n\t* WServer::initializeThread() a virtual method which can be used to\n\tinitialize thread in a specialized WServer class (only for built-in httpd)\n\n09-02-2011:\n\t* WTableView, WTreeView: renamed (and implemented for WTableView)\n\tsetColumn1Fixed to setRowHeaderCount()\n\n04-02-2011:\n\t* Released 3.1.8\n\n28-01-2011:\n\t* Dbo: belongsTo() and hasMany(/* ManyToMany */) can now be passed\n\tforeign key constraints such as NotNull and OnDeleteCascade.\n\n27-01-2011:\n\t* StdGridLayout: collapse paddings of empty items (affects all non-Ext\n\tlayout managers)\n\n25-01-2011:\n\t* Wt/Text/Renderer: warn but proceed when minimum render width exceeds\n\tpage width\n\n\t* Wt/WPaintDevice: solve inconsistencies w.r.t. clear()\n\n\t* WebRenderer, WebSession, Boot.html: wait for stylesheets to load\n\tbefore loading widget tree in default bootstrap mode\n\n\t* WApplication: initial work for RTL layout, set using\n\tsetLayoutDirection()\n\n19-01-2011:\n\t* Wt/WPdfImage: add true type font support (libharu patch pending)\n\n\t* Wt/WApplication.C: fix #693\n\t(sloppy WApplication::internalPathMatches())\n\n\t* Wt/WBoostAny.C: add support for bool types (#690)\n\n\t* Boot.html, Hybrid.html: fix IE8 unreliable startup (occasional\n\tblank screen)\n\n13-01-2011:\n\t* Wt/Chart/WCartesianChart: implement legend location, alignment,\n\tand styling options\n\n\t* Wt/Chart/WDataSeries: add setXSeriesColumn() to allow for\n\tindividual X series per Y series in a scatter plot.\n\n11-01-2011:\n\t* Wt/WAbstractItemView: implement setHeaderItemDelegate() and defer\n\trendering of header cells to the item delegate; also added\n\tWStandardItemModel::setHeaderFlags() to allow configuration of\n\theader flags.\n\n07-01-2011:\n\t* Wt/WAbstractItemView: implement scrollTo()\n\n\t* Wt/Dbo: support for bool types\n\n06-01-2011:\n\t* Render/WTextRenderer, Render/WPdfRenderer: XHtml-to-(PDF) renderer.\n\n\t* Wt/WFontMetrics: font metrics info\n\n\t* Wt/WPaintDevice: add methods for font metrics\n\n\t* WLength: add a string-based constructors which parses a CSS\n\tlength declaration like \"50%\"\n\n\t* WFont: the string-based constructor now parses #aabbcc and\n\trgb(a,b,c) values into rgb components.\n\n\t* WWidget: added setHeight() and setWidth() methods\n\n21-12-2010:\n\t* WAbstractItemView, WTableView, WTreeView: persist editors through\n\tmodel changes and avoid closing editors when something changes\n\n\t* WAbstractItemModel: clarify (and narrow down) usage of internal data\n\tin a model index so that views can keep their relaxed take on stale\n\tindexes.\n\n16-12-2010:\n\t* WEvent: add eventType() method\n\n\t* wt-homepage, simplechat examples: show-case widget set mode\n\n\t* blog example: add archive\n\n\t* libwtwithqt: simplify implementation since notify() is now used\n\tmore consistently by Wt\n\n\t* WObject: object ids are now seeded by a random start value, to\n\tallow mixing of several wt applications\n\n\t* WRasterImage: implemented a getPixel() method\n\n08-12-2010:\n\t* WApplication: fix unload event interfering with session refresh\n\n\t* WebSession: handle session quit() during a websocket message\n\n\t* WRandom: moved high-entropy random generator to public API, and\n\ta utility method to create a random id\n\n\t* wt-homepage example: illustrate use of a cookie to persist logins\n\tacross sessions\n\n02-12-2010:\n\t* WebSession, WApplication, ...: support CORS (Cross-Origin Resource\n\tSharing including IE's XDomainRequest and WebSockets), deprecated\n\tWApplication::setAjaxMethod() which is now chosen automatically\n\tand support request pref-flighting using OPTIONS.\n\n01-12-2010:\n\t* WApplication, examples/wtwithqt/DispatchThread: attach the Qt\n\tthread only during event handling\n\n\t* Dbo/Session: add rereadAll() option to reread single table\n\n\t* WFileUpload: correctly handle non-ascii tokens in suggestFileName()\n\n30-11-2010:\n\t* fixed a regression in layout managers, released as 3.1.7a\n\n27-11-2010:\n\t* js/StdGridLayout.js: implement rowspan handling\n\n26-11-2010:\n\t* released 3.1.7\n\n24-11-2010:\n\t* WAbstractItemView: added support for column hiding\n\n23-11-2010:\n\t* Chart/WCartesianChart: support ToolTipRole data using WAbstractArea\n\tareas\n\n15-11-2010:\n\t* Dbo/Sesion: add rereadAll()\n\n\t* Wt.js: fix IE6-8 history management regression\n\n10-11-2010:\n\t* QueryModel: setData() now converts the incoming type to the database\n\tfield type (if possible), and also uses a transaction to persist the\n\tresult (if not nested in another transaction)\n\n08-11-2010:\n\t* WebSession: landed Web Sockets support, must be enabled in the\n\tconfiguration file\n\n05-11-2010:\n\t* Wt.js: fix opera script loading indicating failure when loading from\n\tcache\n\n02-11-2010:\n\t* WebSession: initialize() in first notify()\n\n\t* WStringUtil: fix a bug in widen() when the underlying conversion\n\tgives an error\n\n\t* build: fixes suggested by Pau\n\n29-10-2010:\n\t* Wt 3.1.6 released\n\n28-10-2010:\n\t* WebSession: use sequence instead of random numbers for resources\n\n\t* WebRenderer: be resilient to multiple GET requests for the main\n\tscript\n\n\t* WApplication: unload() does not quite() when reload-is-new-session\n\tis disabled\n\n\t* WebRenderer: fix regression where timers are stopped by refreshing\n\ta session when reload-is-new-session is disabled\n\n27-10-2010:\n\t* examples/feature/dbo: added examples from the Wt::Dbo tutorial\n\n\t* WPushButton: added setRef() and setResource() APIs to make a button\n\tbehave like an anchor\n\n\t* WString::widen() and WString::narrow(): fix broken implementation\n\n26-10-2010:\n\t* WMessageResourceBundle: better preservation of white-space when\n\tparsing the XML resource bundle\n\n25-10-2010:\n\t* WFileUpload: added setMultiple() which alows multiple files to\n\tbe uploaded at once (and demonstrate in composer example)\n\n\t* Http/Request: changed UploadedFileMap typedef from std::map to\n\tstd::multimap\n\n\t* WAbstractItemView: added methods sortColumn() and sortOrder()\n\n22-10-2010:\n\t* WFileUpload, WResource: support upload progress tracking (currently\n\tonly with wthttpd)\n\n21-10-2010:\n\t* various: support IE9 in IE9 document mode, enabling HTML5 features\n\tlike canvas and disabling workarounds no longer needed -- hooray !\n\n19-10-2010:\n\t* WPopupMenu: fix recycling of popup menu\n\n18-10-2010:\n\t* WSignal: EventSignal::connect(): added an overload which accepts\n\ta JavaScript function, as a short-cut for JSlot when connection\n\tmanagement is not needed\n\n\t* WSpinBox: a spin box is in the making\n\n\t* WApplication: deprecated getUpdateLock() in favour of the more\n\tconventional RIIA UpdateLock(WApplication *app) constructor\n\n\t* WebSession: do not access WebSession shared_ptr during ~WebSession\n\tbut allow acquiring the update lock to fail instead when an application\n\tis slated for destruction (#564)\n\n\t* SyncLock: an adaptor for a Boost Mutex lock which avoids dead-locks\n\twhen used while holding an application lock\n\n15-10-2010:\n\t* WApplication: addMetaHeader() allows now to set http-equiv meta\n\theaders and override the X-UA-Compatible meta header\n\n14-10-2010:\n\t* WWebWidget: reimplemented buggy clear() optimisation.\n\n12-10-2010:\n\t* WBoostAny: added registerType<Type>() method to register\n\tnew types for boost::any support by standard item views.\n\n11-10-2010:\n\t* Dbo/WtSqlTraits, Dbo/backends: added support for WTime\n\n\t* Dbo/QueryModel: added support for customized header data, and\n\toption for setQuery() to keep the current columns.\n\n\t* js/StdGridLayoutImpl: use parent node geometry for detecting need\n\tfor relayout, fixes IE7+ behaviour\n\n07-10-2010:\n\t* WTableView, WTreeView, *ProxyModel: shift model indexes only after\n\tthe source model has inserted or removed rows, see bug #546\n\n\t* WProgressBar: added valueChanged() and progressCompleted() signals,\n\tfrom Omer Katz.\n\n05-10-2010:\n\t* CMakeLists.txt: patch for gentoo, make many things optional which\n\tcan be enabled or disabled explicitly regardless of whether the\n\tlibraries and header files for it are found\n\n01-10-2010:\n\t* WebController, WebSession: use shared_ptr for WebSession to resolve\n\tconcurrency bug #544\n\n\t* Wt::Dbo: use a spirit based parser for sql queries to handle more\n\tcomplex queries like 'WITH ... SELECT ...' syntax, but also with\n\tcomplex aggregate functions in the SELECT clause.\n\n28-09-2010:\n\t* WDatePicker: add setGlobalPopup() method which can be used to avoid\n\tclipping problems on a date picker\n\n\t* WDatePicker: add setPopupVisible() method\n\n\t* Http/Request: add getRanges(), parsing the HTTP 1.1 Ranges header\n\n\t* Http/Response: add setContentLength() allowing you to specify the\n\tcontent length.\n\n\t* WFileResource: support ranges to return partial file contents.\n\n27-09-2010:\n\t* WMenuItem: destructor now cleans up properly\n\n\t* all connectors: consider appRoot as the location for the\n\twt_config.xml file and provide ways to configure appRoot for\n\twthttp and fastcgi connectors.\n\n22-09-2010:\n\t* WProgressBar: based on a contribution by Thomas Suckow.\n\n21-09-2010:\n\t* WRegExpValidator, WSortFilterProxyModel: support case-insensitive\n\tregular expressions\n\n\t* WSuggestionPopup: optimized behaviour w.r.t server-side and\n\tclient-side filtering\n\n20-09-2010:\n\t* WApplication: added makeAbsoluteUrl() method.\n\n\t* WPopupMenuItem: support setDisabled().\n\n16-09-2010:\n\t* WPaintDevice: remove paintFlags() method; PaintUpdate is a property of\n\tthe painted widget, and no longer something which has to do with\n\tWPainter. In this we revert to the old behaviour of supporting multiple\n\tWPainters on a single paint device in turn.\n\n14-09-2010:\n\t* Wt.js: fix JavaScript memory leak after learning about the\n\tsurprising JavaScript scoping rules\n\n\t* WApplication: add unload() and setConfirmCloseMessage() to handle the\n\tevent of the user closing the window respectively have a confirmation\n\n\t* WInteractWidget, WMouseEvent: add mouseWheel() event\n\n\t* WTabWidget: fixed polished style close icon, and wrapping to next line\n\tif having many tabs\n\n\t* WFormWidget: implement hasFocus()\n\n\t* WLineEdit, WTextArea: implements methods for retrieving cursor\n\tposition and current selection\n\n08-09-2010:\n\t* WCheckBox: better tri-state support, using opacity: 0.5 as\n\tworkaround instead of an image\n\n07-09-2010:\n\t* WBoxLayout, WGridLayout: improved client-side performance by\n\tselectively doing relayout\n\n\t* WDate, WCalendar, WDatePicker, ...: support i18n through built-in\n\tmessage resource bundle and get rid of ugly i18n bool in API\n\n23-08-2010:\n\t* fcgi: fix connector when using WDialog::exec() or server push\n\t(this is broken in 3.1.4!)\n\n\t* WSocketNotifier: finally (!) this beast works as advertised\n\n10-08-2010:\n\t* isapi: various improvements\n\n\t* WSignal: SLOT/slots macro can be disabled using -DWT_NO_SLOT_MACROS\n\n\t* examples: cleanups to use appRoot() and no longer use SLOT() macro\n\n02-08-2010:\n\t* WBatchEditProxyModel: a model that caches editing until submitted\n\tin batch (or reverted)\n\n\t* Dbo/QueryModel: remove edit strategy, this is now handled by\n\tWBatchEditProxyModel\n\n\t* WModelIndex: clarify usage when model rows/columns shift, implement\n\tin-place toRaw/fromRaw conversion\n\n\t* WDialog: add titleBar() to access the title bar\n\n30-07-2010:\n\t* Dbo/Query: support 'select distinct/all' syntax, and case-insenstive\n\tquery parsing\n\n29-07-2010:\n\t* WSuggestionPopup: misc improvements to server-side filtering, fixing\n\trendering glitches\n\n\t* examples/feature/suggestionpopup: example demonstrating WSuggestionPopup\n\tfeatures\n\n27-07-2010:\n\t* WRasterImage: Graphicsmagick backend implementation for WPaintDevice,\n\tsponsorted by Eurofer, can be used for PNG, GIF, etc... output\n\n22-07-2010:\n\t* WPdfImage: PDF backend implementation for WPaintDevice,\n\tsponsored by Eurofer.\n\n\t* http/Reply.C: enable compression for image/svg+xml mime-type.\n\n\t* WInteractWidget: suppress click and double click mouse events when\n\tdisabled\n\n20-07-2010:\n\t* Wt/WTreeNode: added insertChildNode(), as suggested by\n\tAleksey Chirkin\n\n19-07-2010:\n\t* isapi: added a (first implementation) of an ISAPI connector,\n\twhich provides native support in Microsft IIS.\n\n\t* WebSession: fix one possible race condition, and one possible dead-lock\n\twhen grabbing the session lock\n\n\t* Dbo/QueryModel: implement write support (setData(), insertRows(),\n\tand removeRows())\n\n15-07-2010:\n\t* Wt::Dbo: adds support for natural keys, including composite\n\tkeys, custom id and version field names, and foreign key\n\tconstraint definition that is compatible with mysql's broken sql.\n\n\t* Wt::Dbo: Dbo base class is now changed to Dbo<C> template\n\tclass to take into account customizable id type.\n\n14-07-2010:\n\t* resizable layout managers: reset total width percentage of all\n\tremaining columns to 100\n\n\t* WCanvasPaintDevice: fix transformation bug\n\n07-07-2010:\n\t* examples/feature/serverPush: fix WIN32 build problem\n\n\t* Chart/WCartesianChart: fix clipping margin glitch\n\n\t* Dbo/QueryModel: fix missing implementation fields() method\n\n\t* WAbstractToggleButton: fix disabled/readonly properties #423\n\n\t* WApplication: useStyleSheet(): allow media to be specified\n\n\t* WCanvasPaintDevice: fix font rendering glitch\n\n\t* WTableView: improved keyboard navigation through editors\n\n30-06-2010:\n\t* WTabWidget, WMenu: support for closing, hiding and disabing\n\titems, contributed by Dmitriy Igrishin\n\n\t* Wt::Dbo: fix boost::optional<T> support\n\n\t* WAbstractItemView: build fix for MSVC in non-Latin locales\n\n\t* WAbstractItemModel: copyData() does first nullify existing data\n\n\t* WSuggestionPopup: fix bug in handling of model row removal\n\n\t* WWebWidget, WebRenderer: fix statelss slot learning bug when a\n\tstubbed widget is affected (see treelist example)\n\n\t* WWebWidget: fix addStyleClass(), removeStyleClass()\n\timplementations with force=true (from Dmitriy Igrishin)\n\n\t* WTableView: improved handling of arrow keys for navigating editors\n\n10-06-2010:\n\t* WTableView, WTreeView: workaround IE bug w.r.t. white-space: nowrap\n\n\t* Chart/WCartesianChart: added createLegendItemWidget() to paint the\n\tlegend item outside the chart\n\n\t* WItemDelegate, WAbstractItemView: add support for validation\n\n\t* WBorderLayout: add missing setSpacing() method to control internal\n\tspacing\n\n\t* WWidget: addStyleClass() and removeStyleClass() (finally!)\n\n\t* WContainerWidget: workaround scrolling bug in IE caused by\n\tposition: relative\n\n\t* WEnvironment: agent() and agentIsXXX() methods\n\n\t* WSvgImage: give in to inkscape's CSS font needs\n\n\t* WHTML5Video, WHTML5Audio: HTML5 video and audio support\n\n\t* WSuggestionPopup: implement explicit trigger (icon, key down)\n\n\t* WTreeNode: support selection by click on whole row\n\n\t* WWebWidget: added doJavaScript()\n\n\t* examples/blog: improved support for MSVC builds, new feature allowing\n\tprofile editing\n\n\t* examples/feature/serverpush: simple example illustrating use of\n\tserver push\n\n20-05-2010:\n\t* build: added support for cygwin\n\n19-05-2010:\n\t* WMenu: fix first selection not emitting internal path change (dmitry)\n\n\t* WTableView: properly react to model changes\n\n\t* WItemDelegate: explicit focus support\n\n18-05-2010:\n\t* Chart/WChart2DRenderer: fix rendering glitch when rendering grids\n\n13-05-2010:\n\t* WInteractWidget: added mouseDragged()\n\n\t* WApplication: added addMetaHeader()\n\n10-05-2010:\n\t* WTableView: now supports (almost) same API as WTreeView, with the\n\tsimilar style, but better performance for tabular data.\n\n\t* WTableView, WTreeView, WAbstractItemView: support non-AJAX rendering\n\tusing a paging bar.\n\n\t* WAbstractItemDelegate, WItemDelegate, WAbstractItemView:\n\tsupports editing\n\n\t* Dbo/QueryModel: a Wt model for viewing data from a Dbo::Query\n\tresult (a first version).\n\n\t* Dbo/SqlTraits: sql_result_traits was renamed to query_result_traits,\n\tand its API updated to allow more robust query creation and result\n\tinterpretation as a list of boost::any's\n\n\t* Signal: SignalBase and EventSignalBase are now documented API\n\n\t* WFlashObject: reimplemented: no longer relies on JavaScript to load\n\tthe flash movie. WFlashObject no longer uses SwfObject.js. The objects\n\twill also be resized when inserted in a layout manager.\n\n\t* WHTML5Video: HTML-5 video implementation, will become part of\n\tgeneric video support later\n\n\t* http/Reply.C, http/StaticReply.C: support for http range header\n\tand partial content\n\n\t* web/CgiParser.C: fix parsing logic error for multi-part/formdata\n\n28-04-2010:\n\t* WTimer: implement singleShot(f) with f a function object variant\n\n21-04-2010:\n\t* WMenu: support usage without contentsStack_\n\n\t* rapidxml.hpp: fix bug #344 (some special entity characters not being\n\thandled properly)\n\n\t* examples/planner: new example illustrating simple dbo usage\n\n20-04-2010:\n\t* Dbo/SqlConnectionPool, Dbo/FixedSqlConnectionPool: connection pool\n\timplementations\n\n\t* Dbo/Query: support for several bind strategies, including a new\n\tDynamicBinding strategy which supports incremental query\n\tspecification\n\n\t* Dbo/Session: add execute() method for executing SQL that does not\n\treturn results\n\n08-04-2010:\n\t* Http/Request: added headerValue() \n\n07-04-2010:\n\t* WSuggestionPopup: add setFilterLength() and filterModel() methods\n\twhich allow for server-side filtering based on initial input. Also\n\tsupport setMaxSize() to specifiy maximum height of the popup and\n\tscrolling through the list of suggestions\n\n30-03-2010:\n\t* WPanel: make titleBarWidget() public\n\n26-03-2010:\n\t* Wt/WShadow, Wt/WPainter: add support for drop shadows\n\n\t* Wt/Chart/WDataSeries, Wt/Chart/WChart2DRenderer: add support for shadows\n\n25-03-2010:\n\t* Wt/Dbo/backend: provide generic properties() and API clean-ups\n\n24-03-2010:\n\t* Wt/Dbo/Query: also support queries without 'from' or 'select'\n\n\t* Wt/Dbo/DbAction.C: create indexes on join table for each referenced\n\ttable id\n\n\t* Wt/Dbo: support schema-qualified tables\n\n23-03-2010:\n\t* Wt/Dbo/Postgres, Wt/Dbo/Sqlite3: add proper support for dates,\n\ttime stamps, binary blobs, var chars\n\n19-03-2010:\n\t* WCheckBox, WRadioButton: fix inconsistencies when setting style\n\tattributes and they have a non-empty label\n\n15-03-2010:\n\t* Dbo/backend/Postgres: a PostgreSQL backend, contributed by Hilary\n\tCheng\n\n12-03-2010:\n\t* EscapeOStream, WSvgImage: a host of performance improvements by\n\ttossing away stringstream in favour of a simple SStream\n\n\t* WWidget: add setLayoutSizeAware() and layoutSizeChanged() methods\n\n08-03-2010:\n\t* WResource: add setInternalPath() to deploy a resource at a\n\tdeterministic URL\n\n05-03-2010:\n\t* WebSession: add support for http PUT/DELETE methods.\n\n\t* src/Http/Request: add method() to access request method\n\n\t* src/Http/Response: add setStatus() to set the response status\n\n03-03-2010:\n\t* WCalendar: add HorizontalHeaderFormat enum (long day name support),\n\tcurrentPageChanged signal, clicked signal, activated signal,\n\tSelectionMode enum (NoSelection mode support), renderCell() virtual\n\tmethod\n\n01-03-2010:\n\t* WGridLayout, WBoxLayout: add support for user resizing ('splitter')\n\tfunctionality\n\n\t* WTreeView, WGridLayout: externalize JS\n\n25-02-2010:\n\t* src/Wt/WString: fix narrow() and widen() character encoding\n\tconversions\n\n\t* http connector: spool large POSTs to a temporary file instead\n\tof in-memory, and avoid extra copies\n\n\t* web/CgiParser.C: skip large file uploads entirely (instead of\n\terroneously buffering them to memory)\n\n22-02-2010:\n\t* Dbo/StdSqlTraits: support float and double\n\n\t* WApplication: missing initialization messes up refresh() by reload\n\n\t* WPainter: now has defined behavior when missing horizontal or vertical\n\talignment flags in drawText()\n\n18-02-2010:\n\t* web/EscapeOStream.C: fix build error on MSVC\n\n\t* Wt 3.1.1 released\n\n12-02-2010:\n\t* mxml: replace mxml with an (adapted) rapidxml browser.\n\n28-01-2010:\n\t* Ext/Container.C, WStackedWidget.C: fixed behavior in combination\n\twith layout managers\n\n25-01-2010:\n\t* WTreeView.C: simplified column resize handling code\n\n22-01-2010:\n\t* WCanvasPaintDevice: Use HTML5 native canvas text when available\n\n21-01-2010:\n\t* WSuggestionPopup, WTree, WTreeNode, & co: make CSS themed\n\n18-01-2010:\n\t* Dbo: additional optional parameter to hasMany() allows the\n\tdefinition of the joinId in the joinTable (you need this if you\n\tare doing Many-to-Many between the same table).\n\n\t* WDateTime, WTime: fix AM/PM parsing problem\n\n\t* Dbo/SqlStatement: explicit null binding, since SQLite3 does not\n\treset bindings on reset()\n\n\t* WTreeView: fix ite column 0 changing\n\n12-01-2010:\n\t* WTemplate: do not rerender bound widgets when rerendering the\n\ttemplate if the widget was already rendered\n\n11-01-2010:\n\t* themes/polished: several improvements\n\n\t* WPanel, WCalendar, WDatePicker, WDialog: improved theme support\n\n\t* WTreeView: several bug fixes and improved IE bug workaround support\n\n05-01-2010:\n\t* Chart/WAxis: added setLabelFont(), labelFont() methods\n\n\t* WTreeNode: fix selection handling when removing and readding a node\n\n\t* Boot.html, Hybrid.html: fix an XSS vulnerability arising from the\n\tinternal path\n\n04-01-2010:\n\t* Wt.js, CommAjax.js, CommScript.js: support communication problems\n\tby retrying with exponential back-off\n\n31-12-2009:\n\t* Dbo: quote all identifiers\n\n\t* WContainerWidget: support resetting a layout manager\n\n29-12-2009:\n\t* Release 3.1.0, after some more bug fixes\n\n22-12-2009:\n\t* Ext/FormWidget: add changed(), blurred() and focussed() signals\n\n21-12-2009:\n\t* WTemplate: add handleUnresolvedVariable() from Maurice Gittens\n\n\t* WMenu: sanitize internal path handling\n\n\t* documentation: integrate asciidoc and doxygen in CMake (target\n\t'doc'), and improve Wt::Dbo documentation\n\n18-12-2009:\n\t* WTreeView: fix treeview column add/remove glitches with column 1 fixed\n\n17-12-2009:\n\t* WSlider: correct upside down behavior of WSlider, use more accurate\n\tposition handling\n\n15-12-2009:\n\t* Wt/Dbo: new C++ ORM layer\n\n\t* test/: automated test suite (for non-GUI features)\n\n\t* src/Wt/WTemplate: new XHTML template-based widget\n\n\t* examples/blog: new example that implements a blog using Wt and\n\tWt::Dbo\n\n\t* src/Wt/WDateTime, src/Wt/WTime: date time and time classes\n\n15-12-2009:\n\t* CMakeLists.txt: add XML_FEATURES option which can be used to disable\n\tthe (mini-)XML library\n\n11-12-2009:\n\t* WPaintedWidget, Ext::Container: properly react to resizes within\n\ta Wt layout manager, both width and height\n\n\t* StdGridLayoutItem.C, Ext::Widget: concatenate html and body style\n\tclasses to not have interference\n\n09-12-2009:\n\t* WDataSeries: added setHidden(bool) and isHidden()\n\n\t* WCartesianChart: added renderLegendIcon()\n\n\t* WTextEdit: fix updating of contents\n\n07-12-2009:\n\t* WWidget: added isRendered(), let widgets keep track of being rendered\n\n\t* WSignal: added connect(Function& f) method\n\n04-12-2009:\n\t* src/web/skeleton/Wt.js: added getSelectionRange and setSelectionRange\n\tutility functions for line edits and text areas\n\n30-11-2009:\n\t* src/mxml: updated to an unmodified mxml-2.6 (which includes our bug\n\tUTF-8 bug fixes)\n\n25-11-2009:\n\t* all: added support for CSS-based themes.\n\n\t* WAbstractItemModel, WAggregateProxyModel, WTreeView: addded support\n\tfor drilling down through treeview columns\n\n\t* WSlider: added sliderMoved() signal\n\n\t* Chart/WAxis: added setAutoLimits() and autoLimits() methods, and have\n\tmaximum() and minimum() return computed values\n\n\t* Chart/WCartesianChart: use MarkerPenColorRole and\n\tMarkerBrushColorRole to override colors for markers per data point\n\n\t* WCanvasPaintDevice: several improvements for outputting more\n\tconcise JavaScript rendering statements\n\n\t* WWidget: add find() method to find a widget with a particular\n\tobjectName()\n\n\t* WFileUpload: fileTooLarge() signal now propagates within the\n\tevent loop\n\n10-11-2009:\n\t* Chart/WCartesianChart, Chart/WDataSeries: added mapFromDevice() and\n\tmapToDevice() methods.\n\n03-11-2009:\n\t* WTreeView: fix for adding a first row to an otherwise empty model\n\t(from Guy De Leeuw)\n\n03-11-2009:\n\t* 3.0.0: released!\n\n21-10-2009:\n\t* WMenu: set correct internal path before loading a menu item\n\n09-10-2009:\n\t* WAxis: add TimeDateScale to AxisScale enum\n\n28-09-2009:\n\t* WCartesianChart: seriesIndexOf() is now private\n\n\t* WebRenderer: several small fixes for the hybrid bootstrap\n\n23-09-2009:\n\t* WTableView: table_ is now private and a protected getter table() was\n\tadded\n\n18-09-2009\n\t* Wt.js: cancelEvent() includes an option to only include cancelling\n\tpropagation or the default action\n\n\t* WResource: add setChanged() and url() methods which are more\n\tuseful than the generateUrl() method\n\n\t* http/RequestParser: fix possible shared_ptr corruption issue\n\treported by David Galicia\n\n\t* WCssDecorationStyle: add method for WResource as background\n\timage\n\n\t* JSlot: fix internal consistency problem when connecting same\n\tJSlot to same signal twice\n\n\t* JSlot::exec() now takes parameters for object and event\n\n\t* WTreeView: fix vertical scrolling showing mis-aligned columns\n\twhen column 1 is fixed\n\n15-09-2009:\n\t* WWidget: move WFormWidget::setEnabled() to WWidget::setDisabled(),\n\tallowing all widgets to be set enabled or disabled.\n\n\t* WWidget: isVisible() and isEnabled() reflect the computed visibility\n\trespectively being enabled taking int account ancestors settings\n\n\t* WWidget: added setHiddenKeepsGeometry(), which uses css visibility\n\tfor setHidden()\n\n03-09-2009:\n\t* WDialog, Ext::Dialog, and related: allow for multiple modal dialogs\n\tand nested exec() calls.\n\n\t* Boot.html, Hybrid.html: add a loadScript() method to defer loading of\n\tuser JavaScript\n\n01-09-2009\n\t* WDatePicker: Use 'positionAtWidget' to make sure the widget\n\tis rendered visible even if at bottom of page (folds up instead of down)\n\n\t* WDialog: Fix JavaScript positioning for IE6\n\n\t* WFileUpload: Fix empty file regression (#53)\n\n31-08-2009\n\t* Wt.js: fix server push mayhem\n\n\t* WTreeView: fix autoJavaScript performance\n\n\t* Wt.js: fix mouse capture on IE, fix mouse capture of mouse up when\n\tdragging outside the window\n\n\t* Wt.js: fix synchronisation issue with 'load' request and loading\n\tof JS libraries\n\n\t* Wt.js, DomElement: use setExpression() to set a CSS expression\n\t(for min/max-width)\n\n\t* WApplication: fix conditional stylesheet condition parse error\n\twith 'gte' expression\n\n26-08-2009\n\t* Wt.js: attach mouse grab events to body using DOM event\n\tcapture\n\n\t* HybridBoot.html, WebSession, WebRenderer: assimilate new\n\tbootstrap method with a refactoring, make it all a bit less\n\tstateful\n\n\t* WApplication: notify() can now be used as a generic request\n\thandling point where you grab and free request-specific\n\tresources\n\n22-08-2009\n\t* fcgi/Sever.C: make multi-threaded, using the <num-threads>\n\tnumber of threads\n\n19-08-2009\n\t* ProgressiveBoot.html, WebSession, WebRenderer: a new bootstrap\n\tmethod has been added which implements the principle of\n\t\"progressive enhancement\"\n\n\t* WebSession, Boot.html: avoid one extra round-trip when\n\tredirecting to the canonical URL.\n\n\t* Plain.html: better SEO: do not render the form to a spider engine\n\n18-08-2009\n\t* WWidget: add boxPadding() and boxBorder() methods, which are\n\tused by the layout managers to correct for built-in borders and\n\tpaddings of form widgets\n\n\t* WComboBox: listen to layoutChanged()\n\n06-08-2009\n\t* WGoogleMap: add setCenter() method without zoom argument, change\n\tmyHtml argument to WString\n\n01-08-2009\n\t* WLineEdit: work around IE's inability to change <input> type\n\tattribute\n\n\t* DomElement, WebRenderer, EscapeOStream: use IE alternative\n\tcreateElement() which also sets all attribute values, and thus\n\tsaves JavaScript calls\n\n\t* StdGridLayoutImpl, StdWidgetItemImpl: fix IE glitches in\n\tlayout managers\n\n31-07-2009\n\t* WCssDecorationStyle: add custom cursor image functionality\n\n23-07-2009\n\t* WApplication: simplified the semantics of internal path API signal\n\tinternalPathChanged(). You may still use the old behavior by\n\tdefining the property oldInternalPathAPI.\n\n20-07-2009:\n\t* WAxis: fix crash when dealing with negative values and a logscale axis\n\n17-07-2009:\n\t* WServer, WGlobal: move WServer::Application and WServer::WidgetSet to\n\tglobal enum\n\n\t* WAbstractToggleButton.C: put label inside a <span> so that it works\n\tas expected when used within a layout manager\n\n\t* Test/WTestEnvironment: test environment, for instantiating\n\tWApplication instances usable for (unit) tests\n\n06-07-2009:\n\t* WGridLayout, WBoxLayout, WTabWidget: better documentation that\n\tdiscusses how to set contents with 100% height.\n\n29-06-2009:\n\t* JSlot: fix exec() call as suggested by Adrian Sutherland\n\n25-06-2009:\n\t* WCanvasPaintDevice, WSvgImage, WVmlImage: string -> stringstream\n\toptimizations\n\n\t* WTableCell: fix vertical component of content alignment\n\n\t* WModelIndex: fix operator== to not use memcmp() since this gets\n\tinto trouble with struct padding bytes\n\n19-06-2009:\n\t* Chart/WAbstractChart: react well to modelReset() and\n\tmodelLayoutChanged()\n\n\t* WCheckbox, WRadioButton: internal cleanup and simplifications\n\n\t* WButtonGroup: added checkedChanged() signal\n\n\t* WIntValidator: allow entry of +/- signs\n\n15-06-2009:\n\t* WGlobal: fix Horizontals = Left | Right and Verticals = Top | Bottom\n\n\t* WPanel: clear the title bar\n\n\t* DomElement: fix an unstubbing regression with ExtJS widgets\n\n\t* Wt.js: fix server push + JSignal.emit()\n\n\t* WGlobal: fix doxygen for WFlags masks\n\n\t* http/Server.C: avoid http/https accept() to abort on Win32\n\n\t* WResource, WFileResource: fix continuation + suggested filename\n\tdata corruption, and implement WFileResource::setBufferSize()\n\n10-06-2009:\n\t* WRectF: added isEmpty() method, removed isNull() method\n\n09-06-2009:\n\t* WEnvironment: added headerValue method\n\n08-06-2009:\n\t* WPoint, WPointF, WLineF: removed obsolete isNull methods\n\n02-06-2009:\n\t* WAbstractItemDelegate, WItemDelegate: new classes to which the\n\trendering of a model item is delegated.\n\n\t* WTreeView: use WAbstractItemDelegate and WItemDelegates, and\n\tAPI to customize the used item delegate class.\n\n\t* WWidget: add setSelectable() method which can enable or disable\n\tthe rendering of the browser's default text selection handling\n\n29-05-2009:\n\t* fcgi/Server.C: build fixes for FreeBSD and OpenSolaris\n\n\t* fcgi/Server.C: implement a (mostly stub) WServer implementation\n\n\t* Http/Response: add continuation() method to get a continuation\n\tcreated for the response.\n\n28-05-2009:\n\t* WMenu: show vertical scrollbar when needed\n\n\t* WGridLayout: support row stretch value of -1, like 0, but\n\tindicates that height of cell contents for that row still needs to\n\tbe managed\n\n\t* DomElement.C: fix IE6 min/max-width workaround bugs\n\n\t* WStackedWidget: make behave well in layout managers\n\n\t* WPainter::Image: add constructor that fetches image dimensions\n\tfrom file (from Daniel Derr)\n\n\t* DomElement.C: fix style.float -> style.cssFloat or\n\tstyle.styleFloat property\n\n26-05-2009:\n\t* WebRenderer, Configuration, WebSession, http/WServer: add support\n\tfor a favicon per EntryPoint, and in general for a favicon not in\n\t\"/favicon.ico\"\n\n18-05-2009:\n\t* WAbstractItemModel: add reset() method and modelReset() signal, which\n\tare used to invalidate the whole model. Adjusted the views to listen\n\tto this signal, and make WStandardItemModel::clear() call reset()\n\n\t* Ext/ToolBar: implement addStretch()\n\n\t* WPaintedWidget, WPaintDevice: support PaintUpdate flag which does\n\tnot erase the painting but merely adds to it\n\n\t* WTreeView: fix setColumnWidth() for column 0 bug,\n\tsetSortingEnabled() when no model yet set bug, column removal\n\tbehavior bug, JavaScript error when no column sort/resize handles\n\n\t* StdGridLayoutImpl, WStackedWidget: make WStackedWidget manage\n\tchildren height actively when in a layout manager\n\n\t* WebSession: make server push survive refresh(), and fix cookie\n\tsupport detection regression\n\n\t* WApplication.C: fix expose logic for widgets removed from the\n\twidget tree\n\n\t* WCssDecorationStyle: WBorder::None is not always default\n\n11-05-2009\n\t* WDate: refactor modifiedJulianDate() to toJulianDate(), replaced\n\tmodifiedJulianDate constructor to static fromJulianDate function\n\n05-05-2009\n\t* WebSession: fix WApplication::attachThread(), simplify use of\n\tthread specific storage\n\n04-05-2009\n\t* WString: do not assume a message resource bundle as localized\n\tstrings\n\n\t* Wt.js: fix empty line edit regression\n\n\t* WCalendar: setSingleClickSelect()\n\n\t* WEnvironment: getDeploymentPath()\n\n23-04-2009:\n\t* WCheckBox, WAbstractToggleButton: tri-state checkboxes\n\n\t* WAbstractItemModel, WModelIndex, WStandardItem: support\n\ttri-state checkboxes (ItemIsTriState ItemFlag)\n\n22-04-2009:\n\t* WebRenderer: keep iterating the update map as long as render()\n\tcalls add new widgets to it\n\n21-04-2009:\n\t* WFormWidget: add setReadOnly(), isReadOnly() methods\n\n\t* WTimer.C: fix multiple signals firing when stopping and\n\trestarting, and use client-side repetition if the signal is not\n\texposed\n\n\t* WFileUpload: deprecated isUploaded(), new method canUpload()\n\n16-04-2009:\n\t* WApplication, WDialog: simplify dialog rendering, allow\n\t(multiple) non-modal dialogs (WDialog::setModal(false)), allow\n\tdialogs to be moved around by dragging in the title bar\n\n\t* WWebWidget: saner handling of z-index, only apply IE6 shim to DIVs\n\n\t* WPaintedWidget: fix use of WImage for WAbstractArea's\n\n\t* WImage, Wt.js: fix position reporting in mouse events from\n\tWAbstractArea's in non-compliant browsers (all except for Firefox)\n\n07-04-2009:\n\t* Ext/FormField: add setFocus() method\n\n30-03-2009:\n\t* WEnvironment.C, WebSession.C, wt_config.xml: allow configuration\n\tof AJAX-capable user agents and bots in configuration file\n\n\t* Configuration.C, wt_config.xml: synchronize configuration\n\tdefaults. WARNING: default settings have changed! (see\n\twt_config.xml what the default values are)\n\n\t* WTabWidget.C: use a layout manager to manage vertical height\n\n\t* WLabel.C: fix bug with placement of image and add option to place\n\timage to left or right of label text\n\n\t* WDatePicker.C: implement setEnabled()\n\n\t* WT_SERIES, WT_MAJOR, WT_MINOR, WT_VERSION: change to hexadecimal\n\tformat for preprocessor defines\n\n\t* Ext/TableView.C: fix access to null dataStore_\n\n26-03-2009:\n\t* Fixed cookie handling. Cookie parser is now less strict, and cookie\n\tvalues are URL encoded, similar to PHP. Fixed setting multiple\n\tcookies.\n\n24-02-2009:\n\t* WWebWidget: implement a real propagateRenderOk() that does not\n\tcause render() of children widgets of stubbed widgets\n\n\t* WTreeView: move JavaScript around that assumes jsRef() exists\n\n\t* WGoogleMap: fix require() dependency\n\n\t* install: do not overwrite existing configuration file wt_config.xml\n\n20-03-2009:\n\t* WFormWidget: refuse to give focus to a disabled widget\n\n\t* Wt.js: make sure updated autoJavaScript() is executed by onresize\n\thandler\n\n19-03-2009:\n\t* WGoogleMap: fix require() to depend on google.load\n\n\t* filetostring: removed in favor of a CMAke-only solution\n\n\t* simplechat: improve its behaviour\n\n\t* WebSession/WebRenderer: update the form object list after\n\teach event since it may contain stale objects\n\n17-03-2009:\n\t* Fixes for cookie parser\n\n\t* Send along form values and hash in each 'update', and keep\n\tJavaScript updates around until acknowledged by the browser\n\t(avoids loss of updates especially for server push situations)\n\n16-03-2009:\n\t* fixed build errors and warnings on Sun Studio and Visual Studio\n\n\t* WSignal: remove EventSignal<void> specialization, use\n\tEventSignal<> everywhere\n\n\t* add WT_NO_BOOST_INTRUSIVE compile option to use std::list instead\n\tof boost::intrusive::list (needed for Sun Studio)\n\n\t* WTableColumn, WTableRow: support for custom id's with setId()\n\n\t* WViewWidget: fix interference problem with stateless slot learning\n\n\t* WWebWidget: complement quickPropagateRenderOk() with a clean\n\trerender of itself\n\n\t* Configuration.C: add option inline-css useful to disable inline\n\tCSS stylesheets, in case you prefer all of them in an external style\n\tsheet\n\n\t* WTableCell, WDomElement: support colspan/rowspan as properties\n\n\t* WTable.C: fix rendering problem for th/td reordering\n\n\t* WebRenderer: WLoadingIndicator: fix rendering and stateless slot\n\tlearning interference\n\n\t* WebSession: avoid superfluous 'none' request\n\n11-03-2009:\n\t* WPushButton: allow line breaks in text using ('\\n')\n\n\t* WebController: fix widget set mode (default entry path parsing)\n\n\t* CMakeLists.txt: also install Http/ directory\n\n\t* XSSFilter: refactored\n\n\t* WAbstractTableModel: new abstract model class\n\n\t* WebSession: simplify session locking (and fix reentrant event\n\tloop memory corrouption)\n\n06-03-2009:\n\t* win32: fix build problems\n\n\t* WMemoryResource: change API to unsigned char\n\n03-03-2009:\n\t* WFileUpload.C: emit uploaded() signal in event loop.\n\n27-02-2009:\n\t* WApplication.C, WebSession.C, Wt.js: finally a robust and simple\n\tserver-push implementation instead of orbited\n\n\t* WMenu.C, WTabWidget.C: simplify CSS (better IE workaround)\n\n\t* WCssDecorationStyle, WGlobal, WText, Ext/TableView: remove\n\tdeprecated enums and methods\n\n\t* WButtonGroup: make API more complete\n\n\t* WDatePicker: provide default constructor\n\n\t* fcgi/FCGIStream.C: make FCGI connector work again in new branch\n\n\t* lots of documentation updates\n\n24-02-2009:\n\t* WOverlayLoadingIndicator.C: fixes for IE8 and opera\n\n23-02-2009:\n\t* WAbstractItemModel.C, Wt.js: fix IE date propagation problem\n\n\t* WLineEdit.C, WTextArea.C: do not set style classes when no validator\n\tis configured\n\n\t* WSocketNotifier.C: fixes for boost >= 1.36 (does not work yet\n\tfor win32)\n\n02-02-2009:\n\t* fix konqueror show stopper bug\n\n28-01-2009:\n\t* fix bug causing mouseup being called twice at end of drag (for\n\texample confused mandlebrot example)\n\n\t* WApplication.C: found cause for long standing IE6 mystery 19px\n\toffset\n\n\t* WDate.C: require 2 digits for 'dd' or 'MM' format entries\n\n\t* WFormWidget.C: auto-validate when contents changes\n\n\t* WebRenderer.C, Wt.js: fix several widgetset mode problems for\n\tIE.\n\n\t* Wt.js: do not block when getting an AJAX error\n\n26-01-2009:\n\t* 2.2.3 released.\n\n23-01-2009:\n\t* examples: misc improvements, update homepage\n\n\t* src/Wt/WAbstractItemModel: support for const char * data in\n\tboost::any()\n\n\t* src/Wt/WTreeView: better support for non-JavaScript situations\n\n\t* WDialog: fix layout regression\n\n21-01-2009:\n\t* WRectF: normalized() returns a rectangle without negative width\n\tor height, and is used within WPainter to normalize rectangle\n\targuments\n\n\t* WebRenderer.C: fix embedded mode\n\n16-01-2009:\n\t* new example 'gitmodel': demonstrates how to create a custom model\n\tclass, to be used in conjunction with WTreeView.\n\n\t* WGridLayout, WBoxLayout, WBorderLayout: when used in conjuction\n\twith WContainerWidget, there is now the possibility to hint an\n\talternative implementation for managing space horizontally, which\n\tuses the 'table-layout: fixed' CSS property.\n\n\t* WCssStyleSheet: fix JavaScript error on IE\n\n\t* WTreeView: fixes for when the treeview is not immediately shown\n\n15-01-2009:\n\t* WCanvasPaintDevice.C: fix arc drawing in singular case (width or\n\theight == 0), and for very skewed arcs (widht / height <<< 1 or >>> 1)\n\n08-01-2009:\n\t* WTreeView: react to column insertion and removal, and\n\tfix WTreeNode::load() unintentionally overriding WWidget::load()\n\n\t* WAbstractProxyModel: implement toRawIndex() and fromRawIndex() so\n\tthat WTreeView does not lose selection or expanded index list when\n\tresorting (or partial refiltering)\n\n07-01-2009:\n\t* WDialog: add setTitleBarEnabled() to disable the title bar\n\n06-01-2009:\n\t* WTreeView: setColumnBorder() allows setting the color for a\n\tborder line between columns, setColumnResizeEnabled() for\n\tdisabling the resize handles, and the content in each column is\n\tnow rendered with some padding (3px to the left and right).\n\n05-01-2009:\n\t* WAbstractTobbleButton.C: fix inserting label into widget tree when\n\tparent is not passed in constructor\n\n\t* Ext/Widget.C: fix hide() and show() to consistently use Ext methods\n\n\t* Wt.js, WebRenderer.C, WApplication.C: fix IE CSS loading ?\n\n24-12-2008:\n\t* WTreeView: setColumn1Fixed() allows fixing of the first column while\n\tscrolling through the other columns in a large model.\n\n22-12-2008:\n\t* WMenu, WTabWidget: implement removeItem() and removeTab()\n\n\t* WebRenderer.C: fix internal path issue when starting with a path,\n\tAJAX is available, and deployment ends on a /\n\n\t* WDialog: fix usage of layout managers in contents area\n\n\t* WJavaScript, WSignal: scope ::_1 in global scope\n\n\t* WOverlayIndicator: allow style class customization (Goetz Babin-Ebell)\n\n\t* CgiParser: cleanup when using GNU regexp API (Goetz Babin-Ebell)\n\n\t* Ext/PagingToolBar.C: fix adding multiple additional toolbar items.\n\n10-12-2008:\n\t* WCompositeWidget.C: fix implementation not being load()ed\n\n\t* Boot.html, Wt.js: do not create a new stylesheet but add rules to\n\texisting inline stylesheet (for ordering consistency)\n\n\t* Wt.js: fix regression for widget coordinates\n\n06-12-2008:\n\t* hello-widgetset: do not build with fcgi connector (Guy Deleeuw)\n\n\t* global: do not use (unsigned) long long but\n\tuse (u)int64_t (Goetz Babin-Ebell and Pau)\n\n\t* DomElement.C: convert <img> to <input type=image> instead of\n\twrapping it in a button, when JavaScript is not available (Anthony\n\taka roja)\n\n04-12-2008:\n\t* treeview-dragdrop: new example, demonstrating Drag&Drop operations\n\tbetween treeviews, WSortFilterProxyModel usage, and context popup\n\tmenus.\n\n02-12-2008:\n\t* WWidget: remove parent_ member, use WObject::parent() instead\n\n27-11-2008:\n\t* WPopupMenu, WPopupMenuItem: implementation of a popup menu\n\n\t* WAbstractProxyModel, WSortFilterProxyModel: proxy model classes\n\tfor WAbstractItemModel, that provide filtered and sortered views\n\tof a source model\n\n\t* StdGridLayoutImpl.C: more consistent layout rendering, now using\n\tJavaScript on all browsers, and using relative positioning of contents\n\tto avoid overflow the layout when the child manages its size using\n\tJavaScript (like WTreeView)\n\n\t* WButtonGroup: add count() method (from Torsten Schulz)\n\n\t* WComboBox: add findText() method.\n\n\t* WDialog.C: avoid applying css rules to contained tables.\n\n\t* WDropEvent: add mouseEvent() to access causing mouse event details\n\n\t* JSignal: support passing original event too using Wt.createEventCall()\n\n\t* WTreeView: add expandToDepth() method, and pass mouse event in\n\t  item clicked, doubleClicked and mouseWentDown signals.\n\n\t* WTreeView: better support for item drag&drop.\n\n19-11-2008:\n\t* StaticReply.C: do not bwarf when we cannot determine file\n\tsize (i.e. for a pipe, reported by Michael Sorensen)\n\n\t* WMenuItem.C, DomElement.C: do not prevent default action for\n\tanchor click, by default, (reported by Bin tan)\n\n18-11-2008:\n\t* WTreeNode.C: apply width to TD only for IE\n\n\t* WTreeTable.C: fix scrollbar issues for IE6 and IE7\n\n\t* TabWidget.C: fix offsets hiding problem\n\n17-11-2008:\n\t* Boot.html, examples/hello-widgetset/hello.html: fix race\n\tcondition for IE7/6 with ExtJS loading (thanks to Guy Deleeuw for\n\thelp in debugging)\n\n\t* Ext/Dialog.C: make sure dialog is not centered on too small window.\n\n14-11-2008:\n\t* WOverlayLoadingIndicator: a more obvious loading indicator\n\n13-11-2008:\n\t* WApplication.C: fix miscalculation of exposed signals\n\n\t* WMenu.C: make Horizontal menus really behave horizontal\n\n\t* WLoadingIndicator, WDefaultLoadingIndicator: interface and default\n\timplementation for loading the indicator\n\n12-11-2008:\n\t* Boot.hml: typo oops indicated by Anthony Roger Buck\n\n\t* WApplication, WDialog, Ext::Dialog, Ext::MessageBox: more generic\n\tway of preventing signals hidden by a modal dialog\n\n\t* WTreeView: more accurate column widths\n\n\t* CgiParser: fix handling of plain POSTs (indicated by Jim Koornneef)\n\n\t* WebSession: fix handling of recursive event loop when JavaScript\n\tis disabled\n\n\t* Configuration.C, Wt.js: add configuration option for strict\n\tevent serialization, dropping events that happen while a response\n\tis pending (off by default).\n\n\t* WTreeTable.C, WTree.C, WTreeNode.C: backport IE fixes from\n\tWTreeView to WTreeTable\n\n07-11-2008:\n\t* Boot.html: fix issue with IE7 and extkitchen loading (do not\n\tapply same fix as for IE6)\n\n\t* WTreeView: support multi line headers, and rework layout management\n\tfor header row (revert to old style since it didn't work for IE7)\n\n06-11-2008:\n\t* examples/extkitchen: use a WTreeView as another MVC-model\n\twhen demonstrating Ext::TableView\n\n\t* WAbstractItemModel, WItemSelectionModel, WTreeView, Wt.js:\n\tsupport for drag of item selections, and drop of item selections\n\tor other events\n\n\t* WTreeView: several bug fixes for incrementally handling row\n\tinsert and removals, and cosmetic improvements\n\n04-11-2008:\n\t* WTreeView.C: allow setColumnWidth() and setContentAlignment for\n\tcolumn 0 too.\n\n\t* WebRenderer.C, WContainerWidget.C: brush up WidgetSet mode\n\n\t* examples/hello-widgetset: WidgetSet mode example\n\n03-11-2008:\n\t* examples/treeview, examples/widgetgallery: new examples\n\n\t* WSubMenuItem.C: a menu item that can contain a sub menu\n\n\t* WGridLayout.C: do not attempt to layout when hidden since\n\tmeasurements will fail\n\n\t* WGridLayout.C: apply width rules to every row since first\n\trow may contain overspanned cells\n\n\t* WAnchor.C: support configurable word-wrap\n\n\t* WTextArea: allow default Wt-invalid class for also for textarea\n\n\t* WCssStyleSheet: implement assignment operator, and reimplement\n\taddRule with WCssDecorationStyle, returns a WCssTemplateRule now.\n\n\t* WMenu: allow multiple menus to use a single\n\tWStackedWidget (useful for menus with submenus)\n\n\t* WSuggestionPopup.C: pop up after widget itself\n\n\t* WTable.C: fix memory leak introduced by incremental row rendering\n\n\t* WTransform.C: fix double rounding error bug leading to NaNs\n\n\t* WTreeView: add setHeaderHeight() and setColumnAlignment()\n\tmethods, and many rendering misc.\n\n\t* Ext/Widget.C: apply correct style classes to body if Ext is not\n\tloaded during initial page render\n\n\t* WApplication.C, Boot.html, Wt.js: url encoding and decoding for\n\tinternal paths\n\n\t* Boot.html, Wt.js: avoid race condition with IE when loading\n\tapplication\n\n\t* Wt 2.2.1 released\n\n27-10-2008:\n\t* WAnchor.C: no clicked connect when setting internal paths\n\n\t* WWidget, WWebWidget, WCompositeWidget: add setLineHeight() API\n\n\t* WCssStyleSheet: WCssTemplateRule copies CSS properties from a\n\ttemplate widget\n\n\t* WModelIndex: allow for SHA-1 internal Id's for on-disk models\n\n\t* WTreeView, WModelIndex, WStandardItem: add UrlRole and\n\tInternalPathRole\n\n23-10-2008:\n\t* WAppliation.C: be more accurate about when to absolutelify\n\trelative URLs\n\n\t* WContainerWidget.C: use sorted vector instead of set to figure\n\tout child insertions\n\n\t* WResource.C: use Content-Disposition to trick IE to get the name\n\tright (in addition to an internal path)\n\n\t* WTable, DomElement.C: use table DOM API, and present row\n\tadditions incrementally\n\n\t* RequestHandler.C: fix url decoding\n\n13-10-2008:\n\t* WTreeView.C: loading indicator in spacer\n\n\t* WTree.C: fix propagation of events inside table rows\n\n11-10-2008:\n\t* src/WebSession.C: do not use relative Urls when JavaScript is\n\tdisabled since we cannot redirect to the canonical url (Bin Tan)\n\n\t* WDate.C: bugfix in JS date parsing\n\n\t* WServer.C: added new --config parameter to specify the\n\tlocation of the wt_config.xml file\n\n\t* WApplication.C: style Wt-invalid applies to all objects, not only\n\tinput\n\n\t* Configuration.C: look for configuration file path in environment\n\tvariable WT_CONFIG_XML. This is overridden by program option --config\n\tin wthttpd.\n\n11-10-2008:\n\t* src/WebSession.C: do not use relative Urls when JavaScript is\n\tdisabled since we cannot redirect to the canonical url (Bin Tan)\n\n\t* src/WTreeView[.C]: implement selection, make sorting controls\n\toptional\n\n10-10-2008:\n\t* WDateValidator.C: better client-side date validation\n\n09-10-2008:\n\t* fcgi/Server.C: pass parent environment to children (suggested by\n\tmisi e)\n\n\t* WBorderLayout[.C]: implement methods to retrieve widgets or\n\tlayout items set for a position.\n\n\t* WAbstractItemModel[.C], WModelIndex[.C], WStandardItemModel[.C]:\n\tadd support for hierarchical models\n\n\t* WAbstractItemModel[.C]: new abstract base class for\n\tone-dimensional list models\n\n\t* WAbstractToggleButton.C: do not generate no-op click handlers\n\n\t* WApplication: update outdated documentation (rsh not longer\n\tneeded, and internal paths work for all major browsers since 2.2.0)\n\n\t* WApplication.C: improve consistency for CSS + XHTML\n\n\t* WComboBox.C, Ext/ComboBox.C: use WStringListModel instead of\n\tWStandardItemModel by default\n\n\t* WContainerWidget[.C]: add scrolled event signal\n\n\t* WContainerWidget[.C], WWebWidget[.C]: implement different way of\n\thandling insertChild() that fixes a bug with removing a child that\n\twas just inserted but not yet rendered\n\n\t* WCssDecorationStyle[.C]: support dynamic updates to style sheet\n\trules\n\n\t* WCssStyleSheet[.C], Wt.js, WebRenderer.C: support dynamic\n\taddition and removal of stylesheet rules\n\n\t* Wt.js, WEvent, WebController.C: pipeline multiple events,\n\tqueueing events while a reply is pending.\n\n\t* WEvent: add a WScrollEvent\n\n\t* WLabel[.C]: add methods to configure and inspect word wrapping.\n\n\t* WStandardItem[.C]: new class for implementing the hierarchical\n\tWStandardItemModel\n\n\t* WStringListModel[.C]: new model that implements a simple string list\n\n\t* WTableRow[.C]: add setHidden() and related methods\n\n\t* WTreeView[.C]: new view widget for displaying trees or tree tables\n\n\t* Chart/WAbstractChart[.C], Chart/WCartesianChart[.C],\n\tChart/WPieChart[.C], Ext/ComboBox[.C], Ext/TableView[.C]: update\n\tmodel listeners to use new hierarchical WAbstractItemModel API\n\n\t* DomElement.C: generate more compact code by using more\n\taggressively innerHtml\n\n02-10-2008:\n\t* Ext/TableView.C: shift selected rows when rows are\n\tinserted/deleted\n\n\t* WebController.C: do not send anything when the page script is\n\trequested outside the Bootstrap.\n\n01-10-2008:\n\t* WebController.C: fix refresh() regression, simplify, prevent\n\tCSRF, and remove unnecessary code\n\n30-09-2008:\n\t* Connection.C: catch exceptions thrown by\n\tremote_endpoint() (reported by kal sason)\n\n28-09-2008:\n\t* WContainerWidget.C: do not stub TDs for IE\n\n21-09-2008:\n\t* DomElement.C: do not use innerHTML on IE6 for select element (fixes\n\tWComboBox error reported by Sergey Bryukov)\n\n19-09-2008:\n\t* WApplication.C: do not block timers when dialog is active (Billy\n\tMuma)\n\n18-09-2008:\n\t* various places: do not generate DOM ids when serving to a bot,\n\tin the hope that this improves the way the bot indexes the page\n\tsince it should always look the same\n\n\t* Configuration.C: add <num-threads> configuration option for\n\tFastCGI deployments, to allow usage of reentrant event loops, as\n\tused by (W)Dialog::exec() methods when using shared session\n\tprocess deployments.\n\n10-09-2008:\n\t* WLocalizedStrings: add an abstract class to localized WString,\n\twhich is by default implemented using WMessageResourceBundle, but\n\tmay be customized (as suggested by Lars Hamren)\n\n\t* several files: fixes for RubyWt (Richard Dale)\n\n\t* WTabWidget: CSS fix for IE7\n\n21-08-2008:\n\t* all: build fixes for Sun Studio 12, and boost 1.36\n\n\t* various places: better use of STL containers\n\n19-08-2008:\n\t* src/web/WebSession.h: build fix for boost 1.36\n\n\t* examples/wt-homepage: add Chinese translation (by Zhimin Song)\n\n\t* various places: fixes suggested by Richard Dale and Pau\n\n18-08-2008:\n\t* CMakeFile.txt: default is now boost 1.35\n\n13-08-2008:\n\t* StdGridLayoutImpl.C: deal with padding in widgets correctly,\n\talways fit item heights (this may cause rows to get stuck at a\n\tparticular height, but gives more consistent behaviour..., handle\n\tUL children\n\n\t* WApplication: simplify internalPath stuff\n\n\t* WebController: propagate form values before touching the widget tree\n\n11-08-2008:\n\t* WMenu: add setInternalBasePath(), do not specify display: inline\n\tfor a horizontal menu item, instead, should be handled by\n\tprogrammer CSS\n\n\t* WMenuItem: do not erronously delete contents in destructor, if\n\tit was already loaded.\n\n08-08-2008:\n\t* Bejing: olympics started! gogo Kim Gevaert!\n\n\t* WApplication: more internal path small fixes\n\n\t* Connection.C: build fixes for MSVC and Visual Age\n\n07-08-2008:\n\t* WApplication: fix old behaviour of applicationName(), deprecate it\n\n\t* WebSession.C, WebController.C, WebRenderer.C: improved url and\n\tinternal path handling: handle redirecting to a new internal path,\n\tproperly initialize application with an initial internal path,\n\tmore flexible internal paths (do not enforce trailing '/')\n\n\t* WMenu: properly restore application internal path when doing\n\tstateless slot learning\n\n06-08-2008:\n\t* cmake/WtFindSsl.txt: removed redundant code\n\n\t* src/web/skeleton/Wt.js: fix widget position bug when nested in scrolled\n\tDOM elements or page on Safari/Opera/IE\n\n\t* all: merged in prettyurls branch\n\t  - no longer use frameset in bootstrap page, load instead ajax script. Remove\n\t    all code that dealt with the frame, and Ajax skeleton page\n\t  - switch to own implementation of history management, remove really simple\n\t    history framework code\n\t  - add internal path API: see WApplication::setInternalPath(),\n\t    WAnchor::setRefInternalPath()\n\t  - remove internal iframes to deal with file uploads, found a workaround for IE\n\t    problem\n\t  - make JavaScript skeleton files compressable with YUI JS compressor\n\t  - WMenu and WMenuItems: API changes to work with internal path API\n\t  - improved marking of deprecated methods in API\n\n\t* wt_config.xml: add new setting <redirect-message> used in anchor\n\tfor redirecting to non-JavaScript version\n\n05-08-2008:\n\t* web/Configuration.C: remove cppfileno mess\n\n04-08-2008:\n\t* WFormWidget.C: fix crash when calling setBuddy() twice (or only\n\tonce in case of WAbstractToggleButton)\n\n\t* WTreeTable.C: fix problem when height is not explicitly set\n\n02-08-2008:\n\t* WVMLImage.C: fix bounding box calculation for arc rendering in path when\n\trotated. It is still broken for non-uniform scale + rotation\n\n\t* TableView.C: fix cellSelected signal when used together with a\n\tPagingToolBar to not propagate the correct model indexes\n\n01-08-2008:\n\t* src/http/StaticReply.C, src/http/StockReply.C: transmit response only\n\twhen all POST'ed data was received\n\n\t* src/http/StaticReply.C: call stream_.clear() to recover from error state\n\n29-07-2008:\n\t* WEnvironment.C, src/web/WebController.C, src/web/WebRenderer.C:\n\tfix cookie setting and cookie parsing\n\n\t* WMenuItem: move itemWidget() from protected to public scope.\n\n25-07-2008:\n\t* WTextEdit[.C]: implement an XHTML rich text editor wrapping the\n\tTinyMCE javascript library\n\n\t* CMakeListst.txt: install resources/ folder to share/Wt/resources\n\n\t* WText[.C]: deprecated WText::Formatting enum,\n\tWText::setFormatting() and WText::formatting() for Wt::TextFormat\n\tenum, WText::setTextFormat() and textFormat(). Add a constructor\n\tthat accepts the format as an argument, and update examples\n\n\t* http/Reply.C, http/StaticReply.C: serve a .gz version of a file\n\twith gzip content-encoding if possible and available, fix a\n\tproblem with logging when the reply is relayed\n\n22-07-2008:\n\t* WAbstractArea, WRectArea, WCircleArea, WPolygonArea: new classes\n\tthat implement interactive areas on WImage and WPaintedWidget.\n\n\t* WImage, WPaintedWidget: add methods for defining interactive\n\tareas\n\n\t* StdGridLayoutImpl.C: fix alignment margin glitch\n\n\t* WApplication.C: default stylesheet: add border: 0px for images,\n\twhich are rendered using a border when adding a map.\n\n\t* WMemoryResource: add constructors and methods for using C-style\n\tarray data.\n\n\t* WLogger.C: fix error in ~WLogEntry\n\n\t* all: misc build fixes for win32\n\n15-07-2008:\n\t* src/wt: renamed to src/Wt\n\n\t* src/Ext: renamed to src/Wt/Ext\n\n\t* src/Chart: renamed to src/Wt/Chart\n\n\t* src: upgrade to new include file locations <Wt/...>\n\n\t* cmake/FindWt.cmake: update to new new include file locations,\n\tand add some documentation for cmake newbies\n\n\t* src/wt/StdLayoutImpl.C: fix itemAt() problem\n\n\t* src/Wt/WMessageResource*, src/wt/WString[.C]: make literal\n\tWString work properly with argument substitution (reported by\n\tMicahel Ivanov)\n\n\t* src/web/Configuration.C: setup loggers even if no wt_config.xml\n\tfile (reported by Goetz Babin-Ebell)\n\n14-07-2008:\n\t* src/wt/WComboBox[.C], src/Ext/ComboBox[.C]: fix problem with\n\tsetModel wrongly deleting the previous model (reported by Michael\n\tIvanov).\n\n\t* src/wt/WApplication, examples/composer/ComposeExample.C,\n\tsrc/wt/WMessageResourceBundle: document and contrast expected\n\tlocation for relative URLs or relative paths (suggested by Pau\n\tGarcia)\n\n\t* doc/main: improved Inroduction to include logging and error\n\thandling, and related configuration options\n\n\t* src/Chart/WChart2DRenderer.C: fix regression with stacked bars,\n\tintroduced by WAxis::setBreak() implementation\n\n\t* */CMakeListst.txt: install header files in Wt/ subdirectory to\n\tnot clobber the main include directory. You should make sure that\n\t${CMAKE_INSTALL_PREFIX}/include/Wt is searched for these headers!\n\n13-07-2008:\n\t* src/wt/WLogger[.C], src/wt/WApplication: logging API, new method\n\tWApplication::log()\n\n\t* src/web/Configuration.[Ch], src/wt/Configuration.[Ch]: add\n\tconfiguration options for accesslog and application logging\n\n\t* src/wt/WText[.C], src/wt/WWebWidget[.C]: allow to detect XML\n\tparse errors when using XHTMLFormatting\n\n\t* allover: code cleanups to use logging instead of std::cerr, to\n\tthrow exceptions for fatal errors\n\n\t* src/wt/WLayout[.C]: change contract of count() and itemAt() to\n\tallow for '0' layout items, fix crash with WGridLayout (reported by\n\tbvh).\n\n10-07-2008:\n\t* src/Ext/Widget.C: propagate CSS style class and inline style to\n\tthe Ext widget through the config.\n\n\t* src/web/WtRandom.C: fix integer overflow compile warning (Pau\n\tGarcia)\n\n09-07-2008:\n\t* src/Chart/WAxis[.C]: add setBreak() to support a \"broken\" axis\n\tthat omits a part of the entire value range.\n\n07-07-2008:\n\t* src/wt/WContainerWidget.C: implement clear() to also delete any\n\tlayout manager that was set, and support creation of a layout\n\tmanager in an existing widget\n\n\t* examples/simplechat/SimpleChat.C: use clear() in conjunction\n\twith layout managers\n\n\t* src/web/DomElement.C: make sure style attribute is rendered as\n\tJavaScript\n\n\t* src/wt/WApplication.C: do not apply 19px IE6 offset bug to IE7 or\n\tlater\n\n\t* src/wt/WGridLayout.C: use default spacing of 6px instead of 9px\n\n\t* src/wt/WContainerWidget.C: setLayout() replace two bools\n\tfitWidth and fitHeight with an alignment option\n\n\t* examples/painting/PaintExample.C: use WGridLayout\n\n03-07-2008:\n\t* src/web/skeletons/*, src/web/DomElement.C,\n\tsrc/web/WebRenderer.C: make sure Wt homepage validates as proper\n\tHTML or XHTML.\n\n\t* src/wt/WText.C: autodetect common block-style XHTHML content and\n\tcall setInline(false) for block elements (helps in producing valid\n\tXHTML).\n\n\t* src/Ext/Widget.C: fix for Ext date picker and calendar with Firefox 3\n\n\t* src/web/WebRenderer.C: fix JavaScript to reload an old session\n\t(again!)\n\n02-07-2008:\n\t* src/wt/WAppliation.C: block events from widgets under the modal\n\tdialog cover\n\n01-06-2008:\n\t* src/wt/WServer[.C]: API to start and stop the embedded http\n\tserver programatically.\n\n\t* src/Ext/TextEdit.C: fix forgotten string literal bug (Michael\n\tIvanov)\n\n\t* src/wt/WApplication.C: add auto-centering for WDialog using\n\tJavaScript (Michael Ivanov)\n\n30-06-2008:\n\t* src/wt/WGridLayout.C, src/wt/StdGridLayoutImpl.C: unify\n\tcross-browser handling, fix alignment bugs, border handling\n\n27-06-2008:\n\t* src/Ext/Widget.C: eliminate client-side memory leak of ExtW array\n\n\t* src/wt/StdGridLayoutImpl.C: fix minimum row height calculation\n\tbug, and some clean up + internal doc improvements\n\n\t* src/Ext/Container.C: fix interference bugs between Ext and Wt\n\tlayout managers\n\n\t* src/wt/WBoxLayout, src/wt/WGridLayout: implement alignment\n\n25-06-2008:\n\t* src/wt/WBoxLayout[.C], src/wt/WGridLayout[.C],\n\tsrc/wt/WBorderLayout[.C], src/wt/WContainerWidget[.C]: implemented\n\tlayout management for WContainerWidgets\n\n\t* examples/chat: simplified by using layout managers instead of\n\tabsolute CSS layout.\n\n\t* src/wt/WApplication.C: reset padding to 0 for the body. Add\n\tpadding to the WApplication::root() if you want to have it back.\n\n\t* src/web/DomElement.C: change cancelEvent() signature, and add\n\temulate IE support for setMinimumSize() (using CSS expressions),\n\tadd support for CSS property white-space\n\n\t* src/web/skeleton/Wt.js: add pixel calculation routines\n\n\t* src/wt/WApplication.C: define declared functions as soon as\n\tpossible\n\n\t* src/wt/WText[.C]: add setWordWrap() method\n\n\t* src/wt/WLabel.C: use setWordWrap(false) for the text\n\n\t* src/wt/WMenuItem.C: do not set margin-right for horizontal\n\titems (Billy Muma)\n\n18-06-2008:\n\t* CMakeLists.txt: fixed CONFIGDIR issues\n\n\t* src/http/Reply.[Ch]: fixed non-multi threaded build\n\n\t* src/wt/WTabWidget[C], src/wt/WMenu[C]: reimplement\n\tcurrentChanged signal\n\n17-06-2008:\n\t* src/wt/WContainerWidget.C: fix bug caused by not searching child\n\tlist before inserting child, triggered when using insertBefore()\n\n\t* src/Ext/Dialog.C, src/Ext/MessageBox.C: workaround for missing\n\tcursor problem in FireFox 1.5 and 2\n\n16-06-2008:\n\t* CMakeLists.txt: CONFIGDIR variable (from Pau Garcia i Quiles)\n\n\t* src/CMakeLists.txt: use a macro for FileToString\n\n\t* examples/wtwithqt: new example and library for interopability\n\tbetween Wt and Qt4.\n\n13-06-2008:\n\t* LICENSE: Clarified that GPL Wt is only licensed under the\n\tsecond version of the GNU GPL (requested by debian folks)\n\n\t* src/wt/WWebWidget.C: performance improvement, do not search child\n\tlist before inserting child because we know for sure that it isn't\n\tthere\n\n\t* src/Ext/Dialog.C: do not use display:none since this may\n\tcause problems with certain Ext widgets that need hide-with-offsets\n\n\t* src/Chart/WAxis[.C]: add support for axis titles with custom font\n\n12-06-2008:\n\t* src/Ext/WWidgetItemImpl: do not use display:none since this may\n\tcause problems with certain Ext widgets that need hide-with-offsets\n\n11-06-2008:\n\t* add WEnvironment::pathInfo()\n\n10-06-2008:\n\t* refactoring to simplify WWebWidget implementations\n\n\t* preliminary support for AJAX on IE Mobile. Things that do not\n\tyet work include WFileUpload, WTimer, and there are many rendering\n\tlayout glitches (such as in the tree list stuff).\n\n\t* src/web/DomElement.C, src/web/WebController.C: fix handling\n\tmultiple buttons when JavaScript is not available\n\n\t* src/Ext/TableView.C: clearSelection() fix (Archimedes Cortes)\n\n\t* src/wt/WFormWidget, src/wt/WValidator: add an inputFilter()\n\tmethod which allows filtering input characters against a regular\n\texpression.\n\n\t* src/wt/WTree.C: let selection only on the label, so that other\n\tinteractive widgets may be present in other columns\n\n\t* src/web/DomElement.C: support return value, note this may break\n\texisting behaviour of JavaScript slots, since they really need to\n\treturn properly! Better cross-platform event handling.\n\n30-05-2008:\n\t* src/http/Server.[Ch]: fix potential thread safety issue on shutdown\n\t(Max M)\n\n28-05-2008:\n\t* src/Ext/LineEdit[.C]: add setMaxLength()\n\n\t* src/wt/WAnchor.C: fix targetChanged_ is uninitialized bug\n\n27-05-2008:\n\t* src/fcgi/Server.C, src/web/Configuration.C: support valgrind arguments\n\n\t* src/web/Configuration.C: fix close(-1) valgrind warning, and\n\tread 'valgrind-path' from fcgi-configuration\n\n26-05-2008:\n\t* charts example: better support without JavaScript\n\n\t* src/Ext/NumberField: fix undefined reference: setDecimalPrecision()\n\n\t* src/Ext/TableView: add setColumnAlignment() method\n\n\t* src/web/DomElement.C: better support for anchor onclick events:\n\tuse browser default when used with a modifier, otherwise prevent\n\tbrowser default\n\n\t* src/web/WebSession, src/web/WebController: propagate initial history\n\tas a history event after application construction\n\n\t* various places: documentation improvements\n\n21-05-2008:\n\t* src/web/WWebWidget.C: allow disabling the stubbing of small\n\twidgets (added setLoadLaterVisible() method)\n\n\t* src/wt/WWidget: add htmlText() method to public API\n\n20-05-2008:\n\t* src/wt/WTreeNode.C, src/wt/WIconPair.C: performance improvements\n\n\t* src/wt/WTree.C: suppress browser text selection when selection is\n\tenabled\n\n\t* src/web/skeleton/Ajax.html: support for IE 8 beta\n\n\t* various places: documentation improvements\n\n\t* src/wt/WApplication[.C]: added WApplication::applicationName(),\n\tfrom Goetz Babin-Ebell.\n\n\t* src/wt/WWebWidget.C: optimize widget destruction\n\n15-05-2008:\n\t* src/web/WebSession.C: fix build problem when threading is disabled\n\n\t* src/wt/WVmlImage.C, Wt.js: fix selection problem on IE\n\n14-05-2008:\n\t* src/wt/WInteractWidget.C: block changed signal after enterPressed\n\twhen the enterPressed signal is connected to get same behaviour across\n\tall browsers\n\n\t* src/wt/WLenghtValidator.C: fix bug in constructor\n\n\t* src/wt/WLineEdit[.C]: add setMaxLength()\n\n\t* src/wt/WWidget.C: disable the fixed JavaScript implementation\n\tfor hide() and show() and revert to stateless slot learning by\n\tdefault to take into account reimplement setHidden() methods. This\n\tis now overridden only in WTreeNode.\n\n\t* src/web/CgiParser.C: open spoolfile in binary mode, fixes wrong\n\tbehaviour with binary files on Windows platforms\n\n\t* src/wt/WApplication: revert behaviour change for url() to return\n\tthe entire application path\n\n\t* src/wt/WSlider.C: avoid compile warning with gcc 4.2\n\n13-05-2008:\n\t* src/wt/WValidator[.C], src/wt/WIntValidator[.C],\n\tsrc/wt/WDoubleValidator[.C], src/wt/WDateValidator[.C],\n\tsrc/wt/WRegExpValidator[.C]. src/wt/WLengthValidator[.C],\n\tsrc/wt/WFormWidget[.C]: add javaScriptValidate() for\n\tclient-side validation\n\n\t* src/wt/WDate[.C]: small cleanup and add conversion to perl\n\tregular expression for client-side validation\n\n\t* put Wt stateless client-side routines in a version-dependent\n\tnamespace WT_CLASS\n\n\t* src/wt/WMessageResources.C: preserve white space and new lines for\n\tmessage resources\n\n11-05-2008:\n\t* src/wt/WSignal[.C]: reduce memory for unused event signals, and\n\tadd support for preventing the default handler (untested)\n\n\t* src/wt/WInteractWidget: better keyboard event documetation\n\n\t* src/wt/WTree[.C]: support for standard behaviour of Control and\n\tShift modifiers in extended selection mode\n\n10-05-2008:\n\t* src/web/DomElement.C, src/web/skeleton/Wt.js, src/wt/WEvent[.C]:\n\timproved keyboard and mouse event information\n\n\t* src/wt/WInteractWidget: better keyboard event documetation\n\n\t* src/wt/WTree[.C]: support for standard behaviour of Control and\n\tShift modifiers in extended selection mode\n\n08-05-2008:\n\t* cmake/WtFindBoost.txt, src/web/random_device.cpp: add support\n\tfor MacOS X\n\n\t* src/wt/WAbstractItemModel: add asString(const boost::any&) and\n\tasNumber(const boost::any&), and add warnings when trying to read\n\tor write data outside the bounds\n\n\t* src/wt/WAbstractToggleButton.C, src/wt/WFormWidget.C: avoid\n\tdouble changed event propagation (needs exception for bug in IE6\n\tand IE7).\n\n\t* src/wt/WCanvasPaintDevice.C: improve text rendering, optimize\n\tpath rendering, and fix bug with clipping and transformations\n\n\t* src/wt/WColor: documentation improvements, and specify default\n\tcolors numerically\n\n\t* src/wt/WComboBox: documentation improvements\n\n\t* src/wt/WComboBox.C: do not emit changed() event when changing\n\tthe values using setCurrentIndex()\n\n\t* src/wt/WDate: add support for conversion to integers using\n\tjulian day calculation, and add methods addDays(), addMonths(),\n\tand addYears(), and fix string parse bug s/1900/2000\n\n\t* src/wt/WDoubleValidator: fix default argument to real -inf\n\n\t* src/wt/WPainter, src/wt/WVmlImage: add support for rectangle\n\tclipping to VML renderer\n\n\t* src/wt/WPainterPath: add support for bounding box calculations,\n\tfix inverted angle calculation in getArcPosition()\n\n\t* src/wt/WRectF: add intersection test and united() method\n\n\t* src/wt/WResource: add write(std::ostream&) method to serialize a\n\tresource (e.g. to a file)\n\n\t* src/wt/WSvgImage: optimize paths even when transformations\n\tchange (only translations), fix clipPath definition so that it\n\tworks with inkscape and opera, and make drawText() more accurate\n\n\t* src/wt/WVmlImage: optimize paths through transformations, and\n\tuse multiple parallel paths to avoid overlap artefacts, and add\n\tfull text support (including rotations and scales)\n\n\t* src/wt/WWebWidget: fix bug with double processing of new siblings\n\n\t* src/wt/WWidget: move enums to Wt:: scope (with full backwards\n\tcompatible support)\n\n\t* src/Chart/: first release of the Wt charting library\n\n\t* examples/charts/: example demonstrating the Wt charting library\n\n\t* src/wt/WPanel: new widget (will evolve to support many standard\n\toptions you want for a panel)\n\n29-04-2008:\n\t* src/wt/WLength: Added multiplication operator, and toPixels()\n\tmethod\n\n\t* src/wt/WFont: Fixed equality operator: fixed sizes are now also\n\tcompared\n\n\t* src/wt/WVmlImage.C, src/web/WebController.C, src/wt/WEnvironment,\n\tsrc/web/skeleton/Boot.html: Fixed rendering on high density\n\tdisplays (DPI scaling)\n\n25-04-2008:\n\t* CMakeLists.txt: Dynamic/static boost build fix\n\n24-04-2008:\n\t* CMakeLists.txt: FindWt.cmake is now installed in /usr/share/...\n\tinstead of /usr/usr/share/...\n\n\t* src/wt/WCssDecorationStyle.C: bugfix for setting background colors\n\n19-04-2008:\n\t* src/web/WWebWidget.C: also update form objects in addChild()\n\tand removeChild (could be optimized later)\n\n18-04-2008:\n\t* CMakeLists.txt: LIB_INSTALL_DIR fixes. LIB_INSTALL_DIR must now be\n\ta relative path.\n\n\t* src/web/WebController.C: reroute all methods that may call user\n\tcode through WApplication::notify() (including rendering and\n\tapplication refresh())\n\n\t* src/wt/WApplication[.C], src/web/WebSession[.C]: allow\n\tpost-construction and pre-destruction application initialization\n\tand finalization\n\n\t* src/wt/WApplication[.C], src/web/WebSession[.C]: attachThread()\n\tattaches an auxiliary thread to an application context\n\n        * src/http/Connection.C: use graceful connection shutdown on timeout,\n        to avoid the occasional 502 proxy errors\n\n17-04-2008:\n\t* src/http/Connection.C. src/http/Reply.C: fix race condition on\n\tshutdown, protect connection_ with a mutex, and illegal access to\n\tdead connection's request in the logging\n\n\t* src/http/HTTPRequest.[Ch]: keep a shared pointer (ReplyPtr)\n\tinstead of raw pointer for the WtReply\n\n\t* src/web/WebController.C: remove killed sessions from sessions\n\tmap from sessions map in forceShutDown() so that they do not get\n\tillegally accessed from expireSessions().\n\n\t* src/web/WebSession: do not call finalize() on 0 app_\n\n\t* src/wt/WResource: setRequest() flushes a previous request if\n\tthere is already one\n\n\t* src/wt/WMenuItem.C: fix memory leak with LazyLoading\n\n\t* various places: make build work on gcc 3.4.0 (thanks to Petr Cerny)\n\n14-04-2008:\n\t* src/web/DomElement.C: do not use innerHTML in xhtml (opera\n\tdoesn't like it with inline SVG)\n\n\t* src/wt/WPaintedWidget.C: prefer InlineSVG on Opera\n\n\t* src/wt/WPaintDevice.C, src/wt/WVmlImage.C: scale pen widths with\n\ttransform\n\n\t* src/web/skeletons/Wt.js: import XML nodes with correct namespace\n\tinto DOM\n\n\t* revert commit 4e7766d105888ae898ca6a8d7446d2188ae09846, since IE\n\tcannot handle special tokens in DOM element id's\n\n\t* release 2.1.2\n\n13-04-2008:\n\t* src/wt/WPainter[.C], src/wt/WCanvasPaintDevice[.C],\n\tsrc/wt/WVmlImage[.C], src/wt/WSvgImage[.C]: add drawImage() methods\n\n\t* src/wt/WRectF.C: fix setX() and setY() incorrect width adaptation\n\n\t* src/wt/WSvgImage.C: fix regression in drawLine\n\n\t* src/wt/WTransform.C: fix double comparison in SVD decomposition\n\n\t* src/wt/WVmlImage.C: fix drawArc() wrong transformation problem\n\n12-04-2008:\n\t* src/web/DomElement.C, src/web/skeleton/Wt.js: capture() mouse\n\tdown so that all subsequent mouse events are received by the same\n\telement/widget\n\n\t* src/web/WebRenderer.C: use JS reload(true) to force reload, and\n\tdisallow caching of bootstrap HTML\n\n\t* src/web/WebRenderer.C, src/wt/WVmlImage.C: use VML in standards\n\tcompliant rendering mode\n\n\t* src/web/skeleton/Wt.js: make private functions really sit within\n\t\"Wt\" closure\n\n\t* src/wt/WJavaScriptSlot.C: fix wrong JavaScript code when JSlot\n\tis not owned by a WWidget, and thus not using function\n\tdeclaration, and define JavaScript functions before loading\n\n\t* src/wt/WPaintedWidget[.C]: update() on resize()\n\n\t* src/wt/WSlider[.C]: initial implementation of a slider\n\tcontrol (rendered using WPaintedWidget)\n\n\t* src/Ext/TabWidget[.C]: make sure currentIndex() is updated before\n\tpropagating the signal\n\n\t* src/wt/WVmlImage.C: correct -1 vertical offset problem\n\n\t* src/wt/WTreeTableNode.C: fix seg fault of calling virtual method\n\taddChildNode() from WTreeNode constructor\n\n\t* src/wt/WTree.C: fix seg fault on consecutive calls of setTreeRoot()\n\n\t* src/wt/WTreeNode[.C]: rename expanded() to isExpanded() and add\n\ttwo signals, expanded and collapsed\n\n\t* src/wt/WSignal: allow late binding of a relay signal to\n\tEventSignal<void>\n\n\t* src/wt/WTableTreeNode: change incorrect protected scope of\n\taddChildNode() to public\n\n11-04-2008:\n\t* src/wt/WPainter[.C]: expand API with setViewPort() and\n\tsetWindow() methods\n\n\t* src/wt/WTransform.C: fix reflexion bug in WTransform's SVD\n\n\t* src/wt/WPen[.C]: define 0 width as cosmetic pen of width 1\n\tpixel, independent of transformation matrix\n\n\t* Boost 1.35 support\n\n\t* CMakeLists.txt: The static version of Wt is now default\n\tbuilt on Windows\n\n10-04-2008:\n\t* src/wt/WApplication[.C]: fix regression in\n\tWApplication::processEvents()\n\n\t* src/wt/WPainter[.C]: add WPainter::save() and\n\tWPainter::restore() methods\n\n\t* src/wt/WTransform.C: handle reflexions correctly in the singular\n\tvalue decomposition\n\n\t* Released 2.1.1\n\n09-04-2008:\n\t* src/wt/WLineF, WPointF, WRectF, WPaintDevice, WPainter, WPen,\n\tWBrush, WPainterPath, WVmlImage, WSVGImage, WCanvasPaintDevice:\n\tcomplete implementation and documentation\n\n\t* src/wt/WString: improve documentation\n\n07-04-2008:\n\t* src/wt/WTreeNode[.C]: add virtual expandable() method which\n\treturns whether a node is expandable (even when not populated)\n\n\t* src/Ext/TabWidget.C: addTab(WWidget *, const WString&) checks if\n\tthe widget is a Panel, and only creates a Panel if not.\n\n\t* src/wt/WJavaScriptSlot[.C], WObject[.C], add\n\timplementPrelearned() to directly specify the JavaScript behavior\n\tfor a method. Add support to switch the implementation of a method\n\tbetween implementStateless() and implementJavaScript().\n\n\t* src/wt/WTreeNode[.C]: add setChildCountPolicy() to enable the\n\tchild count next to the label, which now by default is disabled\n\n\t* src/wt/WWidget.C, src/wt/WWebWidget.C: performance optimization:\n\tchange implementation of hide() and show() from stateless to\n\tprelearned\n\n\t* src/wt/WTreeTable[.C]: use offsetHeight instead of clientHeight and\n\toffsetTop to solve layout problem ?\n\n\t* src/wt/WObject[.C]: use a simple 64-bit encoding for a valid\n\tJavaScript identifier id\n\n02-04-2008:\n\t* src/Ext/*.C: performance improvement: change config generation\n\tto use streaming instead of string concatenation\n\n\t* src/Ext/*.C: performance improvement: do not use addUpdateJS\n\twhen not yet rendered\n\n01-04-2008:\n\t* src/wt/WApplication: support dynamic loading of scripts,\n\tinternal stylesheet changes, and external stylesheets. This fixes\n\tthe problem with using Ext widgets only later in the application.\n\n\t* src/wt/WTableRow[.C], src/wt/WTableColumn[.C]: add support in\n\tpublic API\n\n\t* src/wt/WApplication.C: move default CSS for widgets to the\n\twidget constructors\n\n\t* src/wt/Ext/Widget.C, src/wt/WJavaScriptSlot.C: fix bugs when\n\tusing setId() to override the auto-generated id's.\n\n\t* src/wt/WEnvironment[.C]: make hostName() and clientAddress()\n\trobust to proxies at either the client or server side, add\n\turlScheme() method.\n\n\t* src/fcgi/Server.C, src/http/PosixMain.C,\n\tsrc/web/WebController.C: add support for multiple entry points\n\n\t* src/http/Configuration.C: add --servername option to override\n\tthe DNS name as default host name\n\n\t* src/http/Configuration.C: fix -1 error when removing trailing\n\t'/' from directories.\n\n\t* src/web/CgiParser.C: use GNU regex when HAVE_GNU_REGEX is defined.\n\n\t* src/web/Configuration.C: add behind-reverse-proxy boolean\n\tconfiguration option, and separate general from FastCGI specific\n\tsettings\n\n\t* src/web/DomElement.C, src/web/EscapeOStream.C,\n\tsrc/web/WebRenderer.C: more rendering performance improvements\n\n\t* src/web/WebController.C: use GNU regex when HAVE_GNU_REGEX is defined.\n\n\t* src/web/WebController.C, src/web/WebRenderer.C,\n\tsrc/web/WebSession.C: preliminary support for embedded application\n\tmode, cross-domain AJAX using dynamic script tags, and automatic\n\tconversion from relative to absolute URLs\n\n\t* src/web/skeletons/: reorganisation to have modular javascript,\n\tand encapsulation in JavaScript \"classes\" to allow multiple\n\tapplications in a single page (in the future)\n\n\t* src/wt/WApplication.C: make \"Loading\" feedback work properly on\n\tall browsers\n\n\t* src/wt/WCssDecorationStyle.C: do not generate no-op JavaScript\n\n\t* src/wt/WCssStyleSheet[.C]: add functionality to check whether a\n\tparticular rule has already been added\n\n\t* src/wt/WMessageResources.C: do not read the same XML file twice\n\twhen locale is empty\n\n\t* src/wt/WPushButton.C: do not generated no-op JavaScript\n\n\t* src/wt/WResource: change suggestFilename to suggestFileName, add\n\taddHeader() method\n\n\t* src/wt/WSignal.C: fix double removal of a user event signal from\n\tthe exposed signals list\n\n18-03-2008:\n\t* src/wt/WStackedWidget[.C]: fix bug when trying to add a composite\n\twidget to a stack (cannot yet call hide()) through parent passing,\n\treported by Michael Ivanov\n\n17-03-2008:\n\t* src/web/DomElement.C: fix regression introduced 04-03-2008 with\n\talternate hiding method interfering with setPositionScheme()\n\n\t* src/Ext/ComboBox.C: use modelColumn when indexing into model.\n\n\t* src/web/DomElement.C: various performance improvements (const\n\tchar * for string literals)\n\n\t* src/web/EscapeOStream[.C]: performance improvements\n\n\t* src/web/FileServe.C: performance improvement: avoid char-based I/O\n\n\t* src/web/WebRenderer.C: performance improvements: do not use\n\tformName(), instead use pointer, do not propagateRenderOk() before\n\tinitial render, do stateless slot learning in JavaScript update\n\n\t* src/wt/WObject.C: performance improvement: use sprintf() in formName()\n\n\t* src/wt/WSignal.C: performance improvements: use local info to\n\ttrack whether a signal was exposed instead of the expensive call\n\tto WApplication\n\n\t* src/wt/WWebWidget.C: performance improvements\n\n\t* src/wt/WTreeNode[.C]: virtual method displayedChildCount()\n\n\t* src/web/skeleton/Ajax.html: fix offset problem in coordinate\n\tcalculations\n\n\t* src/wt/TableView[.C]: use SelectionBehavior instead of\n\tSelectionUnit, which is now deprecated\n\n\t* src/wt/WSelectionBox[.C]: add support for multiple selection\n\n\t* src/web/DomElement.C: fix button wrap when using IE6 with\n\tJavaScript disabled\n\n\t* all: various documentation cleanups\n\n13-03-2008:\n\t* wthttpd: make build without thread support really work without\n\tlinking to a thread library\n\n\t* src/mxml/mxml-file.c: fix unicode encoding to not encode twice,\n\tbug that was triggered on linux-arm platforms\n\n\t* src/mxml: merge with latest official release 2.5\n\n\t* src/wt/WDate.C, src/http/Request.C: fix non-cost string literals\n\n\t* src/web/CgiParser.C: fix a regression to detect content-type\n\n12-03-2008:\n\t* src/wt/WPainterPath: complete API, largely untested\n\n10-03-2008:\n\t* src/wt/WPainterPath and devices: implement painter path arcTo()\n\n06-03-2008:\n\t* examples/wt-homepage/: updated to emweb design\n\n\t* src/wt/WApplication.C: disable state system for WebKit, since it\n\tdoes not work at all\n\n\t* src/wt/WMessageResources.C, src/wt/WWebWidget.C, src/web/DomElement.C:\n\tdo not let mxml self-close non-self-closing tags (gives problems in IE)\n\n05-03-2008:\n\t* src/wt/WMenu[.C]: added method setRenderAsList() which allows\n\tthe menu to be rendered as an HTML list\n\n\t* src/wt/WContainerWidget[.C]: added methods setList(), isList(),\n\tisOrderedList(), isUnorderedList(), that allow the container to\n\tbe used to render HTML <ul> and <ol> lists.\n\n04-03-2008:\n\t* src/wt/WTable.C: correctly participate in slot learning when\n\tstubbed\n\n\t* src/wt/WWebWidget[.C]: allow alternate method for hiding, which\n\tpropagates to parents. methods does not use display: none\n\n\t* src/Ext/ComboBox.C, src/Ext/DateField.C: use alternate method\n\tfor hiding\n\n03-03-2008:\n\t* examples/extkitchen/ExtKitchenExample.C: modify example to use\n\ta WTable for layout\n\n02-03-2008:\n\t* src/wt/WSignal: connect new signals at_front, since it seems\n\tthat boost signals will call slots being appended to the signal\n\tduring slot invocation -- contrary to the documentation\n\n\t* src/wt/W[.*]Image: add support for VML rendering\n\n\t* src/wt/WVmlImage.C: make text alignment work properly\n\n01-03-2008:\n\t* src/wt/WMenu[Item][.C]: make itemSelected signal normal signal,\n\tinstead of being called from within stateless slot\n\n\t* src/web/WebRenderer.C: do not show 'ignore' for updates to widgets\n\tnot inserted into the widget hierarchy\n\n\t* src/wt/WObject.C: do not show internal error when (no)FormData\n\tis called\n\n\t* src/http/WinMain.C: adapted for non-boost asio\n\n\t* src/wt/WWebWidget.C: Allow widget reparenting. setParent() for a\n\twidget who has already a parent used to be a no-op; now it reparents\n\tthe widget.\n\n\t* */CMakelists.txt: added 'd' suffix to debug libraries; added\n\tFindWt.cmake (from Pau Garcia i Quiles)\n\n        * Released 2.1.0\n\n29-02-2008:\n\t* */CMakeList.txt: Restructured the cmake files\n\n\t* wthttp: made zlib dependency optional\n\n\t* wthttp: asio_error becomes asio_error_code and asio_system_error\n\n \t* src/Ext/Widget.C: make setHidden() behave properly also when\n\tnot yet rendered\n\n25-02-2008:\n\t* documentation updates\n\n23-02-2008:\n\t* several fixes for JavaScript handling after a reload of the same\n\tsession\n\n22-02-2008:\n\t* src/wt/WTreeTable.C: fix layout bug when using a border for the\n\theader\n\n16-02-2008:\n\t* src/wt/WAnchor[.C]: allow referencing to dynamically generated\n\tdocuments\n\n15-02-2008:\n\t* src/Ext/TableView.C: implement enableColumnHiding() methods\n\n\t* src/, src/http: move to boost-1.34.1 and (boost/non-boost) asio 0.3.9\n\n\t* src/Ext/Dialog.C: implement setSizeGripEnabled(bool) method\n\n\t* src/Ext/Panel[.C]: add collapse(), expand() methods and fix\n\tsetCollapsed() implementation\n\n\t* src/Ext/TableView.C: fix setAutoExpandColumn min and max widths\n\n14-02-2008:\n\t* src/Ext/PagingToolBar.C: render other buttons that were added,\n\tas suggested by Michael Ivanov, 08-01-2008\n\n\t* src/wt/WLabel[.C]: add setBuddy(Ext::FormField *) as suggested\n\tby Pau Garcia i Quiles, 16-01-2008\n\n\t* src/wt/WAnchor[.C]: add setTarget() method\n\n13-02-2008:\n\t* src/Ext/MessageBox.[Ch]: fix delete from buttonClicked crash,\n\treported by Alex, 05-01-2008\n\n\t* src/wt/WAnchor[.C]: fix anchor implementation problem reported\n\tby Lasse Karkkainen, 15-01-2008. Note that the API has changed,\n\tsince we no longer use a WLabel (which caused the problem). Unless\n\tyour code relied on the fact that it was implemented using a label\n\tthere should be no problem in adapting to the new API.\n\n\t* src/web/WebController.C: fix IE6 history problem reported by Joe\n\tCroft, 28-01-2008\n\n\t* src/web/WebRender.C: fix synchronization problem of form\n\tobjects, bug and patch by Goetz Babin-Ebell\n\n\t* src/wt/WContainerWidget.C: syntax fix, by Goetz Babin-Ebell\n\n\t* src/wt/WString and related: use UTF8 internally, as suggested by\n\tGoetz Babin-Ebell\n\t\n02-01-2008:\n\t* src/wt/WTreeTable[.C]: scroll content while keeping headers fixed\n\n\t* src/wt/WTreeNode[.C]: add support for an invisible root node\n\n\t* src/Ext/LayoutImpl.C: trigget layout recalculation after adding a\n\tpanel\n\n\t* src/Ext/Button.C: fix bug not showing initial enabled/disabled state\n\n\t* src/Ext/WWidgetItemImpl.C: wrap non-Container Widgets also, so that\n\ttheir style is not lost\n\n\t* src/Wt/WPainter: drawLine methods\n\n\t* src/web/skeleton/Ajax.html: fix mouse position calculations in\n\tpresence of scrolled widgets\n\n01-01-2008:\n\t* src/web/WebController.[Ch], src/http/HTTPStream.[Ch]:\n\taddSocketNotifier and removeSocketNotifier as virtual methods in\n\tWebStream instead of callbacks from wt lib to connector lib\n\n30-12-2007:\n\t* src/wt/WRectF[.C], src/wt/WCanvasPaintDevice[.C], ...: further\n\timprovements to painting infrastructure\n\n\t* src/wt/WSignalMapper: API changes to be able to build on MSVC\n\n\t* src/wt/WEnvironment: allow reading content type, and raw CGI\n\tenvironment variables\n\n\t* src/web/Configuration.C: switch back to default to HTML mime type\n\t\n29-12-2007:\n\t* src/http/PosixMain.C: use asio::thread by default\n\n\t* src/wt/WContainerWidget.C: fix bug to use delete[] instead of delete\n\ton overflow_ array\n\n\t* src/wt/WApplication: add notify(const WEvent& e) method to allow\n\tcustom event exception handling.\n\n\t* src/wt/WEnvironment: add cgiValue() method to inspect any CGI\n\tenvironment variable\n\n18-12-2007:\n\t* various places: pass string by reference where it makes sense\n\n\t* Ext/*: upgrade from Ext 1.x to Ext 2.x series, main addition is a\n\tfull layout management system\n\n12-12-2007:\n\t* src/web/WebRenderer.C, src/web/DomElement.C, ...: serve XHTML\n\tcontent-type if the browser accepts it, and if it is not disabled\n\tin the config.xml file\n\n\t* resources/orbited.js: produce valid XHTML (no document.write())\n\n\t* resources/rsh.js: produce valid XHMTL (except for IE)\n\n\t* src/wt/WApplication[.C]: split javascript in javascript that\n\tneeds to be run before starting the DOM (which is rendered\n\teverytime the page is reloaded), and javascript that is run to\n\tmanipulate the DOM (which is the default)\n\n\t* src/web/DomElement.C: fix button wrap layout that was adding\n\textra padding in non-javascript support rendering\n\n\t* src/wt/WApplication.C: use lowercase CSS element selectors!\n\tyou will need to change your style sheets accordingly!\n\n\t* src/wt/WBrush[.C], src/wt/WPaintDevice[.C],\n\tsrc/wt/WPaintedWidget[.C], src/wt/WPainter[.C], src/wt/WPen[.C],\n\tsrc/wt/WPointF[.C], src/wt/WVectorImageResource[.C]: initial\n\tcheck-in of incomplete painting infrastructure\n\n10-12-2007:\n\t* src/web/WebController.C: keep the server push connection alive\n\twhen receiving a heart-beat\n\n\t* src/web/skeleton/Ajax.html: preliminary WinCE IE support\n\n\t* src/wt/WImage[.C]: add loaded event\n\n02-12-2007:\n\t* examples/simplechat: added a chat example (replaces previous\n\tstupid serverpush example)\n\n\t* src/web/WServerPushResource.C, resources/orbited.js: several\n\timprovements to make server-push work\n\n\t* src/web/WebSession.C: allow updating another session from within an\n\texisting session\n\n\t* src/wt/WContainerWidget: add setOverflow() method for easier\n\tscrollbars\n\n\t* src/wt/WString: add operator< to be able to put them in std::set<>\n\t\n01-12-2007:\n\t* src/mxml: updated to mxml-2.4\n\n\t* resources/rhs.js, resources/json2005.js, src/wt/WApplication.C,\n\tsrc/web/WebController.C: upgraded to RSH 0.6 RC1 (works now in IE,\n\tFirefox and Opera)\n\n\t* examples/hello/hello.C: make example more interesting\n\n\t* examples/serverpush/serverpush.C: adapted to test intermixing\n\tevent server and client events\n\n\t* src/Ext/TableView.C: disconnect connections when changing model\n\n\t* src/fcgi/FCGIStream.[Ch]: add socket notifier stubs\n\n\t* src/http/Server.[Ch], src/web/WebController.[Ch]: implement\n\tsocket notification\n\n\t* src/http/WtReply.[Ch]: robust handling of server shutdown and\n\tconnection closing\n\n\t* src/web/WServerPushResource.C: adapted for orbited.js for as\n\tserver-push library\n\n\t* src/web/WebController.C: no longer add --Quited to application\n\ttitle when quiting an application\n\n\n27-11-2007:\n\t* src/Ext/MessageBox.C: fix setting prompt value\n\n\t* src/Ext/DataStore[.C], src/Ext/ComboBox[.C],\n\tsrc/Ext/TableView[.C]: bundle model changes leading to\n\tsignificant reduction in generated JS for model changes.\n\n\t* src/Ext/DataStore[.C], src/Ext/TableView[.C]: support resetting the\n\tmodel, and process row removals in reverse order\n\n\t* src/wt/WAbstractToggleButton.C: use click signal instead of\n\tchange to make checked/unChecked signals work in IE.\n\n\t* src/wt/WSignal.C: reorder emission of stateless and dynamic slots,\n\tto avoid processing on a signal that has been deleted (which should\n\tnot happen in a stateless slot).\n\n23-11-2007:\n\t* src/wt/WButtonGroup, src/Ext/RadioButton.C: add support for\n\tExt::RadioButton in WButtonGroup\n\n23-11-2007:\n\t* CMakeLists.txt, src/CMakeLists.txt: add build option to disable\n\tthread (in wthttpd) altogether\n\n22-11-2007:\n\t* src/Ext/DataStore.C: fix use of DataStore when removing rows\n\n15-11-2007:\n\t* src/Ext/DataStore.C: fix regression bug when inserting rows\n\t\n\t* src/Ext/ComboBox.[Ch]: add activated signal\n\n\t* src/Ext/DataStore.C: fix use of DataStore when inserting rows\n\n12-11-2007:\n\t* src/Ext/ProgressDialog.C: don't show by default (unlike Qt)\n\n26-10-2007:\n\t* src/Ext/TableView.C: add missing method implementations\n\n21-10-2007:\n\t* src/Ext/DataStore.[Ch], src/Ext/TableView.[Ch]: support multiple row\n\tselection, and be robust to sorting by using ids instead of row\n\tindexes\n\n\t* src/Ext/TabWidget[.C]: fix bug where children were not inserted\n\tinto the widget tree, and thus could not implement event handling\n\n\t* src/wt/WTreeTableNode.C: fix konqueror/IE6 rendering problems\n\n18-10-2007:\n\t* src/Ext/TableView[.C]: add methods for modifying and inspecting\n\tthe current selection\n\n17-10-2007:\n\t* src/wt/WMessageResources.C: remove the trailing '\\n' that was\n\tbeing added to every WString in a resourcefile by mxml\n\n10-10-2007:\n\t* examples/extkitchen/ExtKitchenExample.[Ch]: add a password prompt\n\tdialog example\n\n\t* src/wt/WAbstractToggletButton.[C], src/wt/WCheckBox.[Ch],\n\tsrc/wt/WRadioButton.[C]: fix reversion caused by constructor with\n\tbool as first argument resulting in missing label text\n\n\t* src/wt/WFormWidget.[C]: add setFocus() method\n\n\t* src/wt/WInPlaceEdit.C: focus line edit using setFocus()\n\tstateless slot \n\n\t* src/wt/WScrollArea.[C]: add vertical scrollbar stuff\n\t\n01-10-2007:\n\t* src/web/skeleton/*.html: Reorder inline and external stylesheets so\n\tthat Wt's default rules can be overridden by applications\n\t\n\t* src/wt/WAnchor: Inherit from WContainerWidget so that other stuff can\n\tbe added to it\n\n27-09-2007:\n\t* src/CMakeLists.txt: integrate mxml sources directly in libwt.so (to\n\tavoid the static non-PIC .a in dynamic .so problem with CMake)\n\n24-09-2007:\n\t* resources/dhtml_dhtmlHistory.js, src/web/WebController.C: use\n\tdynamically generated blank image\n\n\t* src/wt/WApplication.C: use dhtml_dhtmlHistory.js in directory\n\tspecified using resourcesURL property\n\n\t* src/web/skeleton/Ajax.html: fix Loading... CSS for Internet Explorer\n\n21-09-2007:\n\t* src/wt/WMenuItem.C: fix segfault when container stack is deleted\n\tbefore menu.\n\t\n\t* src/mxml/*: supply a version of mxml(patched 2.3) which is used\n\tby default instead of a system-installed mxml.\n\n11-09-2007:\n\t* src/wt/WSignal: fixed EventSignal.emit() to also emit stateless\n\tslots.\n\n08-09-2007:\n\t* src/wt/WMenuItem, src/wt/WMenuItem.C: decouple render widget\n\tfrom activate signal, move margin for horizontal items from WMenu.C\n\n\t* src/wt/WObject, src/wt/WSignal: use WObject::Method typedef\n\n\t* src/examples/wt/RoundedWidget.C: implement missing method, add\n\tenabledRoundedCorners method for changing color in stateless\n\tslot functions.\n\n\t* src/wt/WTabWidget, src/wt/WTabWidget.C, others: implement\n\tWTabWidget with doxygen look, based on WMenu.C\n\n07-09-2007:\n\t* src/Ext/SplitterHandle.C, src/Ext/Splitter.C: implemented full\n\tawareness of configured minimum and maximum sizes.\n\n\t* src/Ext/TableView.C, src/wt/WAbstractItemModel.C: added full\n\tsupport for other data types in models with respect to rendering\n\tand editing\n\n04-09-2007:\n\t* src/CMakeLists.txt: added -DBOOST_SPIRIT_THREADSAFE, fixes\n\tthread safety problem (Max M)\n\t\n\t* src/http/Reply.C: implemented If-Modified-Since, Last-Modified,\n\tand 304 Not Modified response codes\n\n\t* *CMakeLists.txt: add soversioning\n\n\t* src/wt/WDllDefs: added WT_VERSION define (4gsystems)\n\t\n\t* src/wt/WTimer: WTimer memory leak patch (4gsystems)\n\n03-09-2007:\n\t* all: Released 2.0.5.\n\n\tDidn't keep track of ChangeLog, intending to improve on\n\tthat, using GNU Changelog guidelines.\n\n12-05-2007:\n\t* Haven't kept track of things in ChangeLog.. Sorry.\n\n18-02-2007:\n\t* various transient and widget memory improvements\n\t  sample of sizeof() before and after:\n\t  WObject:           48\t\t 40\n\t  WResource:         84\t\t 60\n\t  WWidget:           92\t\t 68\n\t  WWebWidget:       592\t\t108\n\t  WInteractWidget: 1356\t\t300\n\t  WText:           1384\t\t328\n\t  WTable:          1376\t\t320\n\n16-02-2007:\n\t* New widget: WTreeTable and example File Browser.\n\n18-12-2006:\n\t* Use Boost.Signals instead of home-brew signal/slots\n\t* Drag&Drop seems to work with firefox/konqueror, probably needs more\n\ttesting\n\t* valgrind checked, no warnings no errors !\n\t* adopt wide string array\n\n05-12-2006:\n\t* Solaris patches by Patrick Mauritz\n\t* Drag&Drop, initial implementation (not yet complete)\n\t* Drag&Drop example\n\n01-12-2006:\n\t* Happy birthday, Wt.\n\t* many changes not documented in the Changelog.\n\n07-09-2006:\n\t* Support for cookies for session management (when available) instead\n\t  of URL rewriting\n\t* Support for reading and setting cookies (in respectively WEnvironment\n\t  and WApplication)\n\n04-09-2006:\n\t* Starting to finalize event handling: WMouseEvent and WKeyEvent\n\t* working on a new example and a new widget: WVirtualImage\n\n02-09-2006:\n\t* Added WTreeNode and WIconPair widgets, derived from the\n\t  treelist example with different loading policies, and OO\n\t  overloading capabilities.\n\t* Corrected API bug: hide() and show() are non-virtual but\n\t  setHidden() is the virtual one that you should reimplement\n\t* Remove WCssDecorationStyle from WWebWidget header, and do\n\t  not allocated it until needed. Saves alot on memory usage\n\t  when using many widgets.\n\n01-09-2006:\n\t* Moved Menu from the homepage example to become WMenu. Provides now\n\t  different loading policies for the items, and customizable\n\t  WMenuItem look (through OO inheritance).\n\t* Fixed a nasty bug in stateless slot learning.\n\n30-08-2006:\n\t* implemented WJavascriptSlot (abdiel) for pure client-side event\n\t  handling\n\t* implemented WSuggestionPopup\n\t* use two-phase rendering for all updates, and configuration option\n\t  to change the threshold\n\t* separated examples in their own doxygen documentation\n\t* added ContactSuggestions widget to the composer example\n\t* various documentation improvements\n\t* fix a bug with deleting a signal while emitting the slots (abdiel)\n\t* avoid (?) race condition in blur() and click() handler in WSuggestionPopup.C\n\n24-08-2006:\n\t* mindfully implemented all quoting stuff\n\t* change behaviour at quit(): simply render the last changes, but\n\t  add -- Quited. to the title, and avoid receiving new events.\n\t* fix non-javascript look for the wrap buttons.\n\n22-08-2006:\n\t* add WWidget::isVisible()\n\t* workaround for Firefox keeping 'Transferring data from:'\n\t* yet another WFileUpload implementation -- the final one ?\n\t* misc improvements to Composer example\n\t* add support for external stylesheets\n\t* fix stateless slots discarding changes after serving resource\n\t* allow caching of WWidget resources\n\n21-08-2006:\n\t* Added the composer example\n\t* Fixed bug not quoting href attribute in DemoTreeList\n\t* CgiParser: revert old behaviour, parsing through big requests\n\t* move helper function escape and replace to DomElement\n\t* WFileUpload::fileTooLarge in addition to WAppliation::requestTooLarge\n\t* isLoaded is broken because of WCompositeWidget..., but not needed anyway\n        * add WEnvironment::getArgument, by Tomek Mazurek\n\t* WFileUpload: looks much better (konqueror, opera & firefox).\n        * WFileUpload: added alternative firefox implementation that is even better (but is not used now)\n\t* WFileUpload: add isUploaded to check if calling upload() will do anything\n\t* WLineEdit: bugfix: escape preset text\n\t* WText: bugfix: replace newlines with <br/> in plainFormatting\n\t* WTextArea: bugfix: now set preset text correctly\n\t* WWebWidget, WCompositeWidget: bugfix: fix destructor javascript code\n\t* WWebWidget: bugfix: do not propagate renderOk in stubbed widgets\n\t* WWebWidget: bugfix: escapeText returns the escaped text\n\t* WWidget: bugfix: resourceMimeType: escape \" in javascript code.\n\n18-08-2006:\n\t* Documentation improvements\n\t* Fixed WFileUpload and FileUpload example (one bug remains)\n\t* Add propagateRenderOk() instead of creating the complete\n\t  DOM structure\n\t* prevent XSS attacks at the heart by filtering user supplied\n\t  XHTML.\n\t* Do not parse CGI input if too big anyway -- simply discard.\n\n17-08-2006:\n\t* Documentation improvements, also doxygenified some reusable\n\t  classes in the examples.\n\n16-08-2006:\n\t* improved look on non-javascript version, konqueror renders\n\t  wt-homepage now ok, but Firefox keeps adding padding inside\n\t  the button...\n\n14-08-2006:\n\t* parse locale from browser and use it as start-up locale\n\t  and other things in WEnvironment\n\t* release 1.1.5\n\n11-08-2006:\n\t* performance improvement: keep track of widgets that need\n\t  to be repainted, and only process these when finding\n\t  changes in the DOM.\n\n10-08-2006:\n\t* many new features, not kept track off in ChangeLog (bad habit)\n\t* release 1.1.4\n\n13-07-2006:\n\t* adopted cmake, an autoconf/tool/make alternative.\n\n26-04-2006:\n\t* new: WContainerWidget::insert(WWidget *w, WWidget *before)\n\t* WCssDecorationStyle background image may be positioned\n\t* Added a Style example\n\n24-04-2006:\n \t* Patch for gcc 4 compile errors (Alan Ezust).\n\t* chased any remaining memory leaks in all examples, reworked\n\t  WCompositeWidget implementation -- you will need to update any code\n\t* WFileUpload improvements: looks better, works better\n          Added a changed signal which allows capturing file selection on\n          some browsers\n\t* WApplication: limit post-size API\n\t* CgiParser: make buffer static\n\n22-04-2006:\n\t* fix session behaviour with multiple fastcgi servers for high\n\t  performance settings\n\t* added WDoubleValidator and WRegExpValidator and example of a\n\t  custom validator -- DateValidator\n\n20-04-2006:\n\t* kick buggy cgi_util.c in favour of C++ CgiParser\n\t* rewrote WFileUpload -- works well but looks ugly (most of the time)\n\t* fixed some memory-leaks indicated by valgrind\n\n14-04-2006:\n\t* many changes in the last months that were not recorded\n\t  in the Changelog.\n\n16-01-2006:\n\t* add new example hangman, contributed by Wim Dumon\n\t* add new example hello-word, contributed by Wim Dumon\n\t* fixed contentAlignment() on non-inline children\n\t* moved HorizontAlignment to WWidget (that was ugly!)\n\t* add support for valgrind, and fixed dito bugs\n\t* remove excess zeros in object ids\n\t* release 1.0.14\n\n03-01-2006:\n\t* add WSignalMapper class, suggested by Wim Dumon\n\t* fix gcc 4 compile error, thanks to Costantino Giuliodori and Udo\n\t  Kreckel.\n\t* release 1.0.13\n\t* add WContainerWidget::clear()\n\t* add WLineEdit::echoMode (Normal/Password)\n\n29-12-2005:\n\t* add javascript but non-ajax code. But does not work with\n\t  netscape 4, because of 'onclick' not working ?\n\t* release 1.0.12\n\n28-12-2005:\n\t* make WWidget an abstract interface\n\t* create WWebWidget\n\t* create WCompositeWidget\n\t* fixed a bug not initializing margin and padding\n\t* add non-javascript support\n\t* add message resource bundles, and support for localization to\n\t  most WWebWidgets\n\t* add refresh() in WApplication and WWidget, and in wt-homepage\n\t  example.\n\n22-12-2005:\n\t* fix (hack?) for browser going back to Wt page bug\n\t* added side specific margin and padding, moved padding to\n\t  WContainerWidget\n\t* More documented members in WWidget\n\t* release 1.0.11\n\n21-12-2005:\n\t* added WFont, and use in the wt-homepage example (for the navigation\n\t  menu)\n\t* discovered, but not fixed, the reason why going back to the Wt page\n\t  does not work: when going backward, the page replays the same stuff\n\t  as if it was unloaded. So, we probably want our first keep-alive\n\t  message to be 'load', which should find out which things were\n\t  stubbed, and retransmit these -- are easier just trigger a reload\n\n20-12-2005:\n\t* some bug fixes in WStackedWidget\n\t* converted homepage to Wt (as new example)\n\t* add support for WApplication.title()\n\t* release 1.0.10\n\n19-12-2005:\n\t* started doing ChangeLog\n\t* read XHTML tutorial at w3org, now properly generate xhtml, no more\n  \t  problems caused by closing non-empty tags (such as <select />), and\n \t  fixes some cross-browser inconsistencies such as disabled widgets\n\t* add security checks around web references to resource and signal\n\t  instances (as suggested by Graydon Hoare).\n\t* quit the application nicely on timeout by exiting the eventloop\n\t  (as suggested by Wim Dumon).\n\t* release 1.0.9\n"
        },
        {
          "name": "Doxyfile",
          "type": "blob",
          "size": 113.591796875,
          "content": "# Doxyfile 1.9.1\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project.\n#\n# All text after a double hash (##) is considered a comment and is placed in\n# front of the TAG it is preceding.\n#\n# All text after a single hash (#) is considered a comment and will be ignored.\n# The format is:\n# TAG = value [value, ...]\n# For lists, items can also be appended using:\n# TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\\\" \\\").\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# This tag specifies the encoding used for all characters in the configuration\n# file that follow. The default is UTF-8 which is also the encoding used for all\n# text before the first occurrence of this tag. Doxygen uses libiconv (or the\n# iconv built into libc) for the transcoding. See\n# https://www.gnu.org/software/libiconv/ for the list of possible encodings.\n# The default value is: UTF-8.\n\nDOXYFILE_ENCODING      = UTF-8\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded by\n# double-quotes, unless you are using Doxywizard) that should identify the\n# project for which the documentation is generated. This name is used in the\n# title of most generated pages and in a few other places.\n# The default value is: My Project.\n\nPROJECT_NAME           = Wt\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 4.11.1\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          =\n\n# With the PROJECT_LOGO tag one can specify a logo or an icon that is included\n# in the documentation. The maximum height of the logo should not exceed 55\n# pixels and the maximum width should not exceed 200 pixels. Doxygen will copy\n# the logo to the output directory.\n\nPROJECT_LOGO           =\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path\n# into which the generated documentation will be written. If a relative path is\n# entered, it will be relative to the location where doxygen was started. If\n# left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       = doc/reference\n\n# If the CREATE_SUBDIRS tag is set to YES then doxygen will create 4096 sub-\n# directories (in 2 levels) under the output directory of each output format and\n# will distribute the generated files over these directories. Enabling this\n# option can be useful when feeding doxygen a huge amount of source files, where\n# putting all generated files in the same directory would otherwise causes\n# performance problems for the file system.\n# The default value is: NO.\n\nCREATE_SUBDIRS         = NO\n\n# If the ALLOW_UNICODE_NAMES tag is set to YES, doxygen will allow non-ASCII\n# characters to appear in the names of generated files. If set to NO, non-ASCII\n# characters will be escaped, for example _xE3_x81_x84 will be used for Unicode\n# U+3044.\n# The default value is: NO.\n\nALLOW_UNICODE_NAMES    = NO\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# Possible values are: Afrikaans, Arabic, Armenian, Brazilian, Catalan, Chinese,\n# Chinese-Traditional, Croatian, Czech, Danish, Dutch, English (United States),\n# Esperanto, Farsi (Persian), Finnish, French, German, Greek, Hungarian,\n# Indonesian, Italian, Japanese, Japanese-en (Japanese with English messages),\n# Korean, Korean-en (Korean with English messages), Latvian, Lithuanian,\n# Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese, Romanian, Russian,\n# Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish, Swedish, Turkish,\n# Ukrainian and Vietnamese.\n# The default value is: English.\n\nOUTPUT_LANGUAGE        = English\n\n# The OUTPUT_TEXT_DIRECTION tag is used to specify the direction in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all generated output in the proper direction.\n# Possible values are: None, LTR, RTL and Context.\n# The default value is: None.\n\nOUTPUT_TEXT_DIRECTION  = None\n\n# If the BRIEF_MEMBER_DESC tag is set to YES, doxygen will include brief member\n# descriptions after the members that are listed in the file and class\n# documentation (similar to Javadoc). Set to NO to disable this.\n# The default value is: YES.\n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES, doxygen will prepend the brief\n# description of a member or function before the detailed description\n#\n# Note: If both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n# brief descriptions will be completely suppressed.\n# The default value is: YES.\n\nREPEAT_BRIEF           = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator that is\n# used to form the text in various listings. Each string in this list, if found\n# as the leading text of the brief description, will be stripped from the text\n# and the result, after processing the whole list, is used as the annotated\n# text. Otherwise, the brief description is used as-is. If left blank, the\n# following values are used ($name is automatically replaced with the name of\n# the entity):The $name class, The $name widget, The $name file, is, provides,\n# specifies, contains, represents, a, an and the.\n\nABBREVIATE_BRIEF       = \"The $name class\" \\\n                         \"The $name widget\" \\\n                         \"The $name file\" \\\n                         is \\\n                         provides \\\n                         specifies \\\n                         contains \\\n                         represents \\\n                         a \\\n                         an \\\n                         the\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# doxygen will generate a detailed section even if there is only a brief\n# description.\n# The default value is: NO.\n\nALWAYS_DETAILED_SEC    = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n# inherited members of a class in the documentation of that class as if those\n# members were ordinary class members. Constructors, destructors and assignment\n# operators of the base classes will not be shown.\n# The default value is: NO.\n\nINLINE_INHERITED_MEMB  = NO\n\n# If the FULL_PATH_NAMES tag is set to YES, doxygen will prepend the full path\n# before files name in the file list and in the header files. If set to NO the\n# shortest path that makes the file name unique will be used\n# The default value is: YES.\n\nFULL_PATH_NAMES        = YES\n\n# The STRIP_FROM_PATH tag can be used to strip a user-defined part of the path.\n# Stripping is only done if one of the specified strings matches the left-hand\n# part of the path. The tag can be used to show relative paths in the file list.\n# If left blank the directory from which doxygen is run is used as the path to\n# strip.\n#\n# Note that you can specify absolute paths here, but also relative paths, which\n# will be relative from the directory where doxygen is started.\n# This tag requires that the tag FULL_PATH_NAMES is set to YES.\n\nSTRIP_FROM_PATH        =\n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of the\n# path mentioned in the documentation of a class, which tells the reader which\n# header file to include in order to use a class. If left blank only the name of\n# the header file containing the class definition is used. Otherwise one should\n# specify the list of include paths that are normally passed to the compiler\n# using the -I flag.\n\nSTRIP_FROM_INC_PATH    =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter (but\n# less readable) file names. This can be useful is your file systems doesn't\n# support long names like on DOS, Mac, or CD-ROM.\n# The default value is: NO.\n\nSHORT_NAMES            = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then doxygen will interpret the\n# first line (until the first dot) of a Javadoc-style comment as the brief\n# description. If set to NO, the Javadoc-style will behave just like regular Qt-\n# style comments (thus requiring an explicit @brief command for a brief\n# description.)\n# The default value is: NO.\n\nJAVADOC_AUTOBRIEF      = NO\n\n# If the JAVADOC_BANNER tag is set to YES then doxygen will interpret a line\n# such as\n# /***************\n# as being the beginning of a Javadoc-style comment \"banner\". If set to NO, the\n# Javadoc-style will behave just like regular comments and it will not be\n# interpreted by doxygen.\n# The default value is: NO.\n\nJAVADOC_BANNER         = NO\n\n# If the QT_AUTOBRIEF tag is set to YES then doxygen will interpret the first\n# line (until the first dot) of a Qt-style comment as the brief description. If\n# set to NO, the Qt-style will behave just like regular Qt-style comments (thus\n# requiring an explicit \\brief command for a brief description.)\n# The default value is: NO.\n\nQT_AUTOBRIEF           = NO\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make doxygen treat a\n# multi-line C++ special comment block (i.e. a block of //! or /// comments) as\n# a brief description. This used to be the default behavior. The new default is\n# to treat a multi-line C++ comment block as a detailed description. Set this\n# tag to YES if you prefer the old behavior instead.\n#\n# Note that setting this tag to YES also means that rational rose comments are\n# not recognized any more.\n# The default value is: NO.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# By default Python docstrings are displayed as preformatted text and doxygen's\n# special commands cannot be used. By setting PYTHON_DOCSTRING to NO the\n# doxygen's special commands can be used and the contents of the docstring\n# documentation blocks is shown as doxygen documentation.\n# The default value is: YES.\n\nPYTHON_DOCSTRING       = YES\n\n# If the INHERIT_DOCS tag is set to YES then an undocumented member inherits the\n# documentation from any documented member that it re-implements.\n# The default value is: YES.\n\nINHERIT_DOCS           = YES\n\n# If the SEPARATE_MEMBER_PAGES tag is set to YES then doxygen will produce a new\n# page for each member. If set to NO, the documentation of a member will be part\n# of the file/class/namespace that contains it.\n# The default value is: NO.\n\nSEPARATE_MEMBER_PAGES  = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab. Doxygen\n# uses this value to replace tabs by spaces in code fragments.\n# Minimum value: 1, maximum value: 16, default value: 4.\n\nTAB_SIZE               = 8\n\n# This tag can be used to specify a number of aliases that act as commands in\n# the documentation. An alias has the form:\n# name=value\n# For example adding\n# \"sideeffect=@par Side Effects:\\n\"\n# will allow you to put the command \\sideeffect (or @sideeffect) in the\n# documentation, which will result in a user-defined paragraph with heading\n# \"Side Effects:\". You can put \\n's in the value part of an alias to insert\n# newlines (in the resulting output). You can put ^^ in the value part of an\n# alias to insert a newline as if a physical newline was in the original file.\n# When you need a literal { or } or , in the value part of an alias you have to\n# escape them by means of a backslash (\\), this can lead to conflicts with the\n# commands \\{ and \\} for these it is advised to use the version @{ and @} or use\n# a double escape (\\\\{ and \\\\})\n\nALIASES                =\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources\n# only. Doxygen will then generate output that is more tailored for C. For\n# instance, some of the names that are used will be different. The list of all\n# members will be omitted, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_FOR_C  = NO\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java or\n# Python sources only. Doxygen will then generate output that is more tailored\n# for that language. For instance, namespaces will be presented as packages,\n# qualified scopes will look different, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\n# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran\n# sources. Doxygen will then generate output that is tailored for Fortran.\n# The default value is: NO.\n\nOPTIMIZE_FOR_FORTRAN   = NO\n\n# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL\n# sources. Doxygen will then generate output that is tailored for VHDL.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_VHDL   = NO\n\n# Set the OPTIMIZE_OUTPUT_SLICE tag to YES if your project consists of Slice\n# sources only. Doxygen will then generate output that is more tailored for that\n# language. For instance, namespaces will be presented as modules, types will be\n# separated into more groups, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_SLICE  = NO\n\n# Doxygen selects the parser to use depending on the extension of the files it\n# parses. With this tag you can assign which parser to use for a given\n# extension. Doxygen has a built-in mapping, but you can override or extend it\n# using this tag. The format is ext=language, where ext is a file extension, and\n# language is one of the parsers supported by doxygen: IDL, Java, JavaScript,\n# Csharp (C#), C, C++, D, PHP, md (Markdown), Objective-C, Python, Slice, VHDL,\n# Fortran (fixed format Fortran: FortranFixed, free formatted Fortran:\n# FortranFree, unknown formatted Fortran: Fortran. In the later case the parser\n# tries to guess whether the code is fixed or free formatted code, this is the\n# default for Fortran type files). For instance to make doxygen treat .inc files\n# as Fortran files (default is PHP), and .f files as C (default is Fortran),\n# use: inc=Fortran f=C.\n#\n# Note: For files without extension you can use no_extension as a placeholder.\n#\n# Note that for custom extensions you also need to set FILE_PATTERNS otherwise\n# the files are not read by doxygen. When specifying no_extension you should add\n# * to the FILE_PATTERNS.\n#\n# Note see also the list of default file extension mappings.\n\nEXTENSION_MAPPING      = no_extension=C++\n\n# If the MARKDOWN_SUPPORT tag is enabled then doxygen pre-processes all comments\n# according to the Markdown format, which allows for more readable\n# documentation. See https://daringfireball.net/projects/markdown/ for details.\n# The output of markdown processing is further processed by doxygen, so you can\n# mix doxygen, HTML, and XML commands with Markdown formatting. Disable only in\n# case of backward compatibilities issues.\n# The default value is: YES.\n\nMARKDOWN_SUPPORT       = YES\n\n# When the TOC_INCLUDE_HEADINGS tag is set to a non-zero value, all headings up\n# to that level are automatically included in the table of contents, even if\n# they do not have an id attribute.\n# Note: This feature currently applies only to Markdown headings.\n# Minimum value: 0, maximum value: 99, default value: 5.\n# This tag requires that the tag MARKDOWN_SUPPORT is set to YES.\n\nTOC_INCLUDE_HEADINGS   = 5\n\n# When enabled doxygen tries to link words that correspond to documented\n# classes, or namespaces to their corresponding documentation. Such a link can\n# be prevented in individual cases by putting a % sign in front of the word or\n# globally by setting AUTOLINK_SUPPORT to NO.\n# The default value is: YES.\n\nAUTOLINK_SUPPORT       = YES\n\n# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want\n# to include (a tag file for) the STL sources as input, then you should set this\n# tag to YES in order to let doxygen match functions declarations and\n# definitions whose arguments contain STL classes (e.g. func(std::string);\n# versus func(std::string) {}). This also make the inheritance and collaboration\n# diagrams that involve STL classes more complete and accurate.\n# The default value is: NO.\n\nBUILTIN_STL_SUPPORT    = YES\n\n# If you use Microsoft's C++/CLI language, you should set this option to YES to\n# enable parsing support.\n# The default value is: NO.\n\nCPP_CLI_SUPPORT        = NO\n\n# Set the SIP_SUPPORT tag to YES if your project consists of sip (see:\n# https://www.riverbankcomputing.com/software/sip/intro) sources only. Doxygen\n# will parse them like normal C++ but will assume all classes use public instead\n# of private inheritance when no explicit protection keyword is present.\n# The default value is: NO.\n\nSIP_SUPPORT            = NO\n\n# For Microsoft's IDL there are propget and propput attributes to indicate\n# getter and setter methods for a property. Setting this option to YES will make\n# doxygen to replace the get and set methods by a property in the documentation.\n# This will only work if the methods are indeed getting or setting a simple\n# type. If this is not the case, or you want to show the methods anyway, you\n# should set this option to NO.\n# The default value is: YES.\n\nIDL_PROPERTY_SUPPORT   = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n# The default value is: NO.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# If one adds a struct or class to a group and this option is enabled, then also\n# any nested class or struct is added to the same group. By default this option\n# is disabled and one has to add nested compounds explicitly via \\ingroup.\n# The default value is: NO.\n\nGROUP_NESTED_COMPOUNDS = NO\n\n# Set the SUBGROUPING tag to YES to allow class member groups of the same type\n# (for instance a group of public functions) to be put as a subgroup of that\n# type (e.g. under the Public Functions section). Set it to NO to prevent\n# subgrouping. Alternatively, this can be done per class using the\n# \\nosubgrouping command.\n# The default value is: YES.\n\nSUBGROUPING            = YES\n\n# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and unions\n# are shown inside the group in which they are included (e.g. using \\ingroup)\n# instead of on a separate page (for HTML and Man pages) or section (for LaTeX\n# and RTF).\n#\n# Note that this feature does not work in combination with\n# SEPARATE_MEMBER_PAGES.\n# The default value is: NO.\n\nINLINE_GROUPED_CLASSES = NO\n\n# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and unions\n# with only public data fields or simple typedef fields will be shown inline in\n# the documentation of the scope in which they are defined (i.e. file,\n# namespace, or group documentation), provided this scope is documented. If set\n# to NO, structs, classes, and unions are shown on a separate page (for HTML and\n# Man pages) or section (for LaTeX and RTF).\n# The default value is: NO.\n\nINLINE_SIMPLE_STRUCTS  = NO\n\n# When TYPEDEF_HIDES_STRUCT tag is enabled, a typedef of a struct, union, or\n# enum is documented as struct, union, or enum with the name of the typedef. So\n# typedef struct TypeS {} TypeT, will appear in the documentation as a struct\n# with name TypeT. When disabled the typedef will appear as a member of a file,\n# namespace, or class. And the struct will be named TypeS. This can typically be\n# useful for C code in case the coding convention dictates that all compound\n# types are typedef'ed and only the typedef is referenced, never the tag name.\n# The default value is: NO.\n\nTYPEDEF_HIDES_STRUCT   = NO\n\n# The size of the symbol lookup cache can be set using LOOKUP_CACHE_SIZE. This\n# cache is used to resolve symbols given their name and scope. Since this can be\n# an expensive process and often the same symbol appears multiple times in the\n# code, doxygen keeps a cache of pre-resolved symbols. If the cache is too small\n# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\nLOOKUP_CACHE_SIZE      = 0\n\n# The NUM_PROC_THREADS specifies the number threads doxygen is allowed to use\n# during processing. When set to 0 doxygen will based this on the number of\n# cores available in the system. You can set it explicitly to a value larger\n# than 0 to get more control over the balance between CPU load and processing\n# speed. At this moment only the input processing can be done using multiple\n# threads. Since this is still an experimental feature the default is set to 1,\n# which efficively disables parallel processing. Please report any issues you\n# encounter. Generating dot graphs in parallel is controlled by the\n# DOT_NUM_THREADS setting.\n# Minimum value: 0, maximum value: 32, default value: 1.\n\nNUM_PROC_THREADS       = 1\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES, doxygen will assume all entities in\n# documentation are documented, even if no documentation was available. Private\n# class members and static file members will be hidden unless the\n# EXTRACT_PRIVATE respectively EXTRACT_STATIC tags are set to YES.\n# Note: This will also disable the warnings about undocumented members that are\n# normally produced when WARNINGS is set to YES.\n# The default value is: NO.\n\nEXTRACT_ALL            = NO\n\n# If the EXTRACT_PRIVATE tag is set to YES, all private members of a class will\n# be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PRIVATE        = YES\n\n# If the EXTRACT_PRIV_VIRTUAL tag is set to YES, documented private virtual\n# methods of a class will be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PRIV_VIRTUAL   = NO\n\n# If the EXTRACT_PACKAGE tag is set to YES, all members with package or internal\n# scope will be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PACKAGE        = NO\n\n# If the EXTRACT_STATIC tag is set to YES, all static members of a file will be\n# included in the documentation.\n# The default value is: NO.\n\nEXTRACT_STATIC         = YES\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES, classes (and structs) defined\n# locally in source files will be included in the documentation. If set to NO,\n# only classes defined in header files are included. Does not have any effect\n# for Java sources.\n# The default value is: YES.\n\nEXTRACT_LOCAL_CLASSES  = YES\n\n# This flag is only useful for Objective-C code. If set to YES, local methods,\n# which are defined in the implementation section but not in the interface are\n# included in the documentation. If set to NO, only methods in the interface are\n# included.\n# The default value is: NO.\n\nEXTRACT_LOCAL_METHODS  = NO\n\n# If this flag is set to YES, the members of anonymous namespaces will be\n# extracted and appear in the documentation as a namespace called\n# 'anonymous_namespace{file}', where file will be replaced with the base name of\n# the file that contains the anonymous namespace. By default anonymous namespace\n# are hidden.\n# The default value is: NO.\n\nEXTRACT_ANON_NSPACES   = NO\n\n# If this flag is set to YES, the name of an unnamed parameter in a declaration\n# will be determined by the corresponding definition. By default unnamed\n# parameters remain unnamed in the output.\n# The default value is: YES.\n\nRESOLVE_UNNAMED_PARAMS = YES\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, doxygen will hide all\n# undocumented members inside documented classes or files. If set to NO these\n# members will be included in the various overviews, but no documentation\n# section is generated. This option has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_MEMBERS     = YES\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy. If set\n# to NO, these classes will be included in the various overviews. This option\n# has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_CLASSES     = YES\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, doxygen will hide all friend\n# declarations. If set to NO, these declarations will be included in the\n# documentation.\n# The default value is: NO.\n\nHIDE_FRIEND_COMPOUNDS  = YES\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, doxygen will hide any\n# documentation blocks found inside the body of a function. If set to NO, these\n# blocks will be appended to the function's detailed documentation block.\n# The default value is: NO.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation that is typed after a\n# \\internal command is included. If the tag is set to NO then the documentation\n# will be excluded. Set it to YES to include the internal documentation.\n# The default value is: NO.\n\nINTERNAL_DOCS          = NO\n\n# With the correct setting of option CASE_SENSE_NAMES doxygen will better be\n# able to match the capabilities of the underlying filesystem. In case the\n# filesystem is case sensitive (i.e. it supports files in the same directory\n# whose names only differ in casing), the option must be set to YES to properly\n# deal with such files in case they appear in the input. For filesystems that\n# are not case sensitive the option should be be set to NO to properly deal with\n# output files written for symbols that only differ in casing, such as for two\n# classes, one named CLASS and the other named Class, and to also support\n# references to files without having to specify the exact matching casing. On\n# Windows (including Cygwin) and MacOS, users should typically set this option\n# to NO, whereas on Linux or other Unix flavors it should typically be set to\n# YES.\n# The default value is: system dependent.\n\nCASE_SENSE_NAMES       = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO then doxygen will show members with\n# their full class and namespace scopes in the documentation. If set to YES, the\n# scope will be hidden.\n# The default value is: NO.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the HIDE_COMPOUND_REFERENCE tag is set to NO (default) then doxygen will\n# append additional text to a page's title, such as Class Reference. If set to\n# YES the compound reference will be hidden.\n# The default value is: NO.\n\nHIDE_COMPOUND_REFERENCE= NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES then doxygen will put a list of\n# the files that are included by a file in the documentation of that file.\n# The default value is: YES.\n\nSHOW_INCLUDE_FILES     = YES\n\n# If the SHOW_GROUPED_MEMB_INC tag is set to YES then Doxygen will add for each\n# grouped member an include statement to the documentation, telling the reader\n# which file to include in order to use the member.\n# The default value is: NO.\n\nSHOW_GROUPED_MEMB_INC  = NO\n\n# If the FORCE_LOCAL_INCLUDES tag is set to YES then doxygen will list include\n# files with double quotes in the documentation rather than with sharp brackets.\n# The default value is: NO.\n\nFORCE_LOCAL_INCLUDES   = NO\n\n# If the INLINE_INFO tag is set to YES then a tag [inline] is inserted in the\n# documentation for inline members.\n# The default value is: YES.\n\nINLINE_INFO            = NO\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order.\n# The default value is: YES.\n\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n# The default value is: NO.\n\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n# Note: If SORT_BRIEF_DOCS is set to NO this option is ignored for sorting brief\n# member documentation.\n# Note: If SORT_MEMBER_DOCS is set to NO this option is ignored for sorting\n# detailed member documentation.\n# The default value is: NO.\n\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n\nSORT_GROUP_NAMES       = NO\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be sorted by\n# fully-qualified names, including namespaces. If set to NO, the class list will\n# be sorted only by class name, not including the namespace part.\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n# Note: This option applies only to the class list, not to the alphabetical\n# list.\n# The default value is: NO.\n\nSORT_BY_SCOPE_NAME     = NO\n\n# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to do proper\n# type resolution of all parameters of a function it will reject a match between\n# the prototype and the implementation of a member function even if there is\n# only one candidate or it is obvious which candidate to choose by doing a\n# simple string match. By disabling STRICT_PROTO_MATCHING doxygen will still\n# accept a match between prototype and implementation in such cases.\n# The default value is: NO.\n\nSTRICT_PROTO_MATCHING  = NO\n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or disable (NO) the todo\n# list. This list is created by putting \\todo commands in the documentation.\n# The default value is: YES.\n\nGENERATE_TODOLIST      = NO\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or disable (NO) the test\n# list. This list is created by putting \\test commands in the documentation.\n# The default value is: YES.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable (YES) or disable (NO) the bug\n# list. This list is created by putting \\bug commands in the documentation.\n# The default value is: YES.\n\nGENERATE_BUGLIST       = NO\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or disable (NO)\n# the deprecated list. This list is created by putting \\deprecated commands in\n# the documentation.\n# The default value is: YES.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional documentation\n# sections, marked by \\if <section_label> ... \\endif and \\cond <section_label>\n# ... \\endcond blocks.\n\nENABLED_SECTIONS       = cpp\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines that the\n# initial value of a variable or macro / define can have for it to appear in the\n# documentation. If the initializer consists of more lines than specified here\n# it will be hidden. Use a value of 0 to hide initializers completely. The\n# appearance of the value of individual variables and macros / defines can be\n# controlled using \\showinitializer or \\hideinitializer command in the\n# documentation regardless of this setting.\n# Minimum value: 0, maximum value: 10000, default value: 30.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES, the\n# list will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\nSHOW_USED_FILES        = NO\n\n# Set the SHOW_FILES tag to NO to disable the generation of the Files page. This\n# will remove the Files entry from the Quick Index and from the Folder Tree View\n# (if specified).\n# The default value is: YES.\n\nSHOW_FILES             = NO\n\n# Set the SHOW_NAMESPACES tag to NO to disable the generation of the Namespaces\n# page. This will remove the Namespaces entry from the Quick Index and from the\n# Folder Tree View (if specified).\n# The default value is: YES.\n\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n# version. For an example see the documentation.\n\nFILE_VERSION_FILTER    =\n\n# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed\n# by doxygen. The layout file controls the global structure of the generated\n# output files in an output format independent way. To create the layout file\n# that represents doxygen's defaults, run doxygen with the -l option. You can\n# optionally specify a file name after the option, if omitted DoxygenLayout.xml\n# will be used as the name of the layout file.\n#\n# Note that if you run doxygen from a directory containing a file called\n# DoxygenLayout.xml, doxygen will parse it automatically even if the LAYOUT_FILE\n# tag is left empty.\n\nLAYOUT_FILE            =\n\n# The CITE_BIB_FILES tag can be used to specify one or more bib files containing\n# the reference definitions. This must be a list of .bib files. The .bib\n# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also https://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES         =\n\n#---------------------------------------------------------------------------\n# Configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated to\n# standard output by doxygen. If QUIET is set to YES this implies that the\n# messages are off.\n# The default value is: NO.\n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated to standard error (stderr) by doxygen. If WARNINGS is set to YES\n# this implies that the warnings are on.\n#\n# Tip: Turn warnings on while writing the documentation.\n# The default value is: YES.\n\nWARNINGS               = YES\n\n# If the WARN_IF_UNDOCUMENTED tag is set to YES then doxygen will generate\n# warnings for undocumented members. If EXTRACT_ALL is set to YES then this flag\n# will automatically be disabled.\n# The default value is: YES.\n\nWARN_IF_UNDOCUMENTED   = YES\n\n# If the WARN_IF_DOC_ERROR tag is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some parameters\n# in a documented function, or documenting parameters that don't exist or using\n# markup commands wrongly.\n# The default value is: YES.\n\nWARN_IF_DOC_ERROR      = YES\n\n# This WARN_NO_PARAMDOC option can be enabled to get warnings for functions that\n# are documented, but have no documentation for their parameters or return\n# value. If set to NO, doxygen will only warn about wrong or incomplete\n# parameter documentation, but not about the absence of documentation. If\n# EXTRACT_ALL is set to YES then this flag will automatically be disabled.\n# The default value is: NO.\n\nWARN_NO_PARAMDOC       = NO\n\n# If the WARN_AS_ERROR tag is set to YES then doxygen will immediately stop when\n# a warning is encountered. If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS\n# then doxygen will continue running as if WARN_AS_ERROR tag is set to NO, but\n# at the end of the doxygen process doxygen will return with a non-zero status.\n# Possible values are: NO, YES and FAIL_ON_WARNINGS.\n# The default value is: NO.\n\nWARN_AS_ERROR          = NO\n\n# The WARN_FORMAT tag determines the format of the warning messages that doxygen\n# can produce. The string should contain the $file, $line, and $text tags, which\n# will be replaced by the file and line number from which the warning originated\n# and the warning text. Optionally the format may contain $version, which will\n# be replaced by the version of the file (if it could be obtained via\n# FILE_VERSION_FILTER)\n# The default value is: $file:$line: $text.\n\nWARN_FORMAT            = \"$file:$line: $text\"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning and error\n# messages should be written. If left blank the output is written to standard\n# error (stderr).\n\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag is used to specify the files and/or directories that contain\n# documented source files. You may enter file names like myfile.cpp or\n# directories like /usr/src/myproject. Separate the files or directories with\n# spaces. See also FILE_PATTERNS and EXTENSION_MAPPING\n# Note: If this tag is empty the current directory is searched.\n\nINPUT                  = src/Wt \\\n                         doc/main \\\n                         doc/saml \\\n                         src/web\n\n# This tag can be used to specify the character encoding of the source files\n# that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses\n# libiconv (or the iconv built into libc) for the transcoding. See the libiconv\n# documentation (see:\n# https://www.gnu.org/software/libiconv/) for the list of possible encodings.\n# The default value is: UTF-8.\n\nINPUT_ENCODING         = UTF-8\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard patterns (like *.cpp and\n# *.h) to filter out the source-files in the directories.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# read by doxygen.\n#\n# Note the list of default checked file patterns might differ from the list of\n# default file extension mappings.\n#\n# If left blank the following patterns are tested:*.c, *.cc, *.cxx, *.cpp,\n# *.c++, *.java, *.ii, *.ixx, *.ipp, *.i++, *.inl, *.idl, *.ddl, *.odl, *.h,\n# *.hh, *.hxx, *.hpp, *.h++, *.cs, *.d, *.php, *.php4, *.php5, *.phtml, *.inc,\n# *.m, *.markdown, *.md, *.mm, *.dox (to be provided as doxygen C comment),\n# *.py, *.pyw, *.f90, *.f95, *.f03, *.f08, *.f18, *.f, *.for, *.vhd, *.vhdl,\n# *.ucf, *.qsf and *.ice.\n\nFILE_PATTERNS          = *\n\n# The RECURSIVE tag can be used to specify whether or not subdirectories should\n# be searched for input files as well.\n# The default value is: NO.\n\nRECURSIVE              = YES\n\n# The EXCLUDE tag can be used to specify files and/or directories that should be\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n#\n# Note that relative paths are relative to the directory from which doxygen is\n# run.\n\nEXCLUDE                =\n\n# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or\n# directories that are symbolic links (a Unix file system feature) are excluded\n# from the input.\n# The default value is: NO.\n\nEXCLUDE_SYMLINKS       = YES\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories.\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories for example use the pattern */test/*\n\nEXCLUDE_PATTERNS       = *.fcg \\\n                         *~ \\\n                         *.c \\\n                         .htaccess \\\n                         Entries \\\n                         Repository \\\n                         Root \\\n                         *.d \\\n                         *.o \\\n                         *.txt \\\n                         *.png \\\n                         *.gif \\\n                         *.jpg\n\n# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names\n# (namespaces, classes, functions, etc.) that should be excluded from the\n# output. The symbol name can be a fully qualified name, a word, or if the\n# wildcard * is used, a substring. Examples: ANamespace, AClass,\n# AClass::ANamespace, ANamespace::*Test\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories use the pattern */test/*\n\nEXCLUDE_SYMBOLS        =\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or directories\n# that contain example code fragments that are included (see the \\include\n# command).\n\nEXAMPLE_PATH           = examples \\\n                         doc \\\n                         ReleaseNotes.html \\\n                         INSTALL.html \\\n                         INSTALL.win32.html\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp and\n# *.h) to filter out the source-files in the directories. If left blank all\n# files are included.\n\nEXAMPLE_PATTERNS       = *\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\dontinclude commands\n# irrespective of the value of the RECURSIVE tag.\n# The default value is: NO.\n\nEXAMPLE_RECURSIVE      = YES\n\n# The IMAGE_PATH tag can be used to specify one or more files or directories\n# that contain images that are to be included in the documentation (see the\n# \\image command).\n\nIMAGE_PATH             = doc/images/\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command:\n#\n# <filter> <input-file>\n#\n# where <filter> is the value of the INPUT_FILTER tag, and <input-file> is the\n# name of an input file. Doxygen will then use the output that the filter\n# program writes to standard output. If FILTER_PATTERNS is specified, this tag\n# will be ignored.\n#\n# Note that the filter must not add or remove lines; it is applied before the\n# code is scanned, but not when the output code is generated. If lines are added\n# or removed, the anchors will not be placed correctly.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# properly processed by doxygen.\n\nINPUT_FILTER           =\n\n# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern\n# basis. Doxygen will compare the file name with each pattern and apply the\n# filter if there is a match. The filters are a list of the form: pattern=filter\n# (like *.cpp=my_cpp_filter). See INPUT_FILTER for further information on how\n# filters are used. If the FILTER_PATTERNS tag is empty or if none of the\n# patterns match the file name, INPUT_FILTER is applied.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# properly processed by doxygen.\n\nFILTER_PATTERNS        =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER) will also be used to filter the input files that are used for\n# producing the source files to browse (i.e. when SOURCE_BROWSER is set to YES).\n# The default value is: NO.\n\nFILTER_SOURCE_FILES    = NO\n\n# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file\n# pattern. A pattern will override the setting for FILTER_PATTERN (if any) and\n# it is also possible to disable source filtering for a specific pattern using\n# *.ext= (so without naming a filter).\n# This tag requires that the tag FILTER_SOURCE_FILES is set to YES.\n\nFILTER_SOURCE_PATTERNS =\n\n# If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that\n# is part of the input, its contents will be placed on the main page\n# (index.html). This can be useful if you have a project on for instance GitHub\n# and want to reuse the introduction page also for the doxygen output.\n\nUSE_MDFILE_AS_MAINPAGE =\n\n#---------------------------------------------------------------------------\n# Configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will be\n# generated. Documented entities will be cross-referenced with these sources.\n#\n# Note: To get rid of all source code in the generated output, make sure that\n# also VERBATIM_HEADERS is set to NO.\n# The default value is: NO.\n\nSOURCE_BROWSER         = NO\n\n# Setting the INLINE_SOURCES tag to YES will include the body of functions,\n# classes and enums directly into the documentation.\n# The default value is: NO.\n\nINLINE_SOURCES         = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES will instruct doxygen to hide any\n# special comment blocks from generated source code fragments. Normal C, C++ and\n# Fortran comments will always remain visible.\n# The default value is: YES.\n\nSTRIP_CODE_COMMENTS    = YES\n\n# If the REFERENCED_BY_RELATION tag is set to YES then for each documented\n# entity all documented functions referencing it will be listed.\n# The default value is: NO.\n\nREFERENCED_BY_RELATION = NO\n\n# If the REFERENCES_RELATION tag is set to YES then for each documented function\n# all documented entities called/used by that function will be listed.\n# The default value is: NO.\n\nREFERENCES_RELATION    = NO\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES and SOURCE_BROWSER tag is set\n# to YES then the hyperlinks from functions in REFERENCES_RELATION and\n# REFERENCED_BY_RELATION lists will link to the source code. Otherwise they will\n# link to the documentation.\n# The default value is: YES.\n\nREFERENCES_LINK_SOURCE = YES\n\n# If SOURCE_TOOLTIPS is enabled (the default) then hovering a hyperlink in the\n# source code will show a tooltip with additional information such as prototype,\n# brief description and links to the definition and documentation. Since this\n# will make the HTML file larger and loading of large files a bit slower, you\n# can opt to disable this feature.\n# The default value is: YES.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nSOURCE_TOOLTIPS        = YES\n\n# If the USE_HTAGS tag is set to YES then the references to source code will\n# point to the HTML generated by the htags(1) tool instead of doxygen built-in\n# source browser. The htags tool is part of GNU's global source tagging system\n# (see https://www.gnu.org/software/global/global.html). You will need version\n# 4.8.6 or higher.\n#\n# To use it do the following:\n# - Install the latest version of global\n# - Enable SOURCE_BROWSER and USE_HTAGS in the configuration file\n# - Make sure the INPUT points to the root of the source tree\n# - Run doxygen as normal\n#\n# Doxygen will invoke htags (and that will in turn invoke gtags), so these\n# tools must be available from the command line (i.e. in the search path).\n#\n# The result: instead of the source browser generated by doxygen, the links to\n# source code will now point to the output of htags.\n# The default value is: NO.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nUSE_HTAGS              = NO\n\n# If the VERBATIM_HEADERS tag is set the YES then doxygen will generate a\n# verbatim copy of the header file for each class for which an include is\n# specified. Set to NO to disable this.\n# See also: Section \\class.\n# The default value is: YES.\n\nVERBATIM_HEADERS       = NO\n\n# If the CLANG_ASSISTED_PARSING tag is set to YES then doxygen will use the\n# clang parser (see:\n# http://clang.llvm.org/) for more accurate parsing at the cost of reduced\n# performance. This can be particularly helpful with template rich C++ code for\n# which doxygen's built-in parser lacks the necessary type information.\n# Note: The availability of this option depends on whether or not doxygen was\n# generated with the -Duse_libclang=ON option for CMake.\n# The default value is: NO.\n\nCLANG_ASSISTED_PARSING = NO\n\n# If clang assisted parsing is enabled and the CLANG_ADD_INC_PATHS tag is set to\n# YES then doxygen will add the directory of each input to the include path.\n# The default value is: YES.\n\nCLANG_ADD_INC_PATHS    = YES\n\n# If clang assisted parsing is enabled you can provide the compiler with command\n# line options that you would normally use when invoking the compiler. Note that\n# the include paths will already be set by doxygen for the files and directories\n# specified with INPUT and INCLUDE_PATH.\n# This tag requires that the tag CLANG_ASSISTED_PARSING is set to YES.\n\nCLANG_OPTIONS          =\n\n# If clang assisted parsing is enabled you can provide the clang parser with the\n# path to the directory containing a file called compile_commands.json. This\n# file is the compilation database (see:\n# http://clang.llvm.org/docs/HowToSetupToolingForLLVM.html) containing the\n# options used when the source files were built. This is equivalent to\n# specifying the -p option to a clang tool, such as clang-check. These options\n# will then be passed to the parser. Any options specified with CLANG_OPTIONS\n# will be added as well.\n# Note: The availability of this option depends on whether or not doxygen was\n# generated with the -Duse_libclang=ON option for CMake.\n\nCLANG_DATABASE_PATH    =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index of all\n# compounds will be generated. Enable this if the project contains a lot of\n# classes, structs, unions or interfaces.\n# The default value is: YES.\n\nALPHABETICAL_INDEX     = NO\n\n# In case all classes in a project start with a common prefix, all classes will\n# be put under the same header in the alphabetical index. The IGNORE_PREFIX tag\n# can be used to specify a prefix (or a list of prefixes) that should be ignored\n# while generating the index headers.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES, doxygen will generate HTML output\n# The default value is: YES.\n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_OUTPUT            = html\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for each\n# generated HTML page (for example: .htm, .php, .asp).\n# The default value is: .html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a user-defined HTML header file for\n# each generated HTML page. If the tag is left blank doxygen will generate a\n# standard header.\n#\n# To get valid HTML the header file that includes any scripts and style sheets\n# that doxygen needs, which is dependent on the configuration options used (e.g.\n# the setting GENERATE_TREEVIEW). It is highly recommended to start with a\n# default header using\n# doxygen -w html new_header.html new_footer.html new_stylesheet.css\n# YourConfigFile\n# and then modify the file new_header.html. See also section \"Doxygen usage\"\n# for information on how to generate the default header that doxygen normally\n# uses.\n# Note: The header is subject to change so you typically have to regenerate the\n# default header when upgrading to a newer version of doxygen. For a description\n# of the possible markers and block names see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_HEADER            = doc/doxygen-theme/header.html\n\n# The HTML_FOOTER tag can be used to specify a user-defined HTML footer for each\n# generated HTML page. If the tag is left blank doxygen will generate a standard\n# footer. See HTML_HEADER for more information on how to generate a default\n# footer and what special commands can be used inside the footer. See also\n# section \"Doxygen usage\" for information on how to generate the default footer\n# that doxygen normally uses.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FOOTER            = doc/doxygen-theme/footer.html\n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading style\n# sheet that is used by each HTML page. It can be used to fine-tune the look of\n# the HTML output. If left blank doxygen will generate a default style sheet.\n# See also section \"Doxygen usage\" for information on how to generate the style\n# sheet that doxygen normally uses.\n# Note: It is recommended to use HTML_EXTRA_STYLESHEET instead of this tag, as\n# it is more robust and this tag (HTML_STYLESHEET) will in the future become\n# obsolete.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_STYLESHEET        =\n\n# The HTML_EXTRA_STYLESHEET tag can be used to specify additional user-defined\n# cascading style sheets that are included after the standard style sheets\n# created by doxygen. Using this option one can overrule certain style aspects.\n# This is preferred over using HTML_STYLESHEET since it does not replace the\n# standard style sheet and is therefore more robust against future updates.\n# Doxygen will copy the style sheet files to the output directory.\n# Note: The order of the extra style sheet files is of importance (e.g. the last\n# style sheet in the list overrules the setting of the previous ones in the\n# list). For an example see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_STYLESHEET  = doc/doxygen-theme/doxygen-awesome.css \\\n                         doc/doxygen-theme/custom.css\n\n# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the HTML output directory. Note\n# that these files will be copied to the base HTML output directory. Use the\n# $relpath^ marker in the HTML_HEADER and/or HTML_FOOTER files to load these\n# files. In the HTML_STYLESHEET file, use the file name only. Also note that the\n# files will be copied as-is; there are no commands or markers available.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_FILES       = doc/doxygen-theme/doxygen-awesome-darkmode-toggle.js \\\n                         doc/doxygen-theme/doxygen-awesome-paragraph-link.js\n\n# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output. Doxygen\n# will adjust the colors in the style sheet and background images according to\n# this color. Hue is specified as an angle on a colorwheel, see\n# https://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_HUE    = 220\n\n# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of the colors\n# in the HTML output. For a value of 0 the output will use grayscales only. A\n# value of 255 will produce the most vivid colors.\n# Minimum value: 0, maximum value: 255, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_SAT    = 100\n\n# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to the\n# luminance component of the colors in the HTML output. Values below 100\n# gradually make the output lighter, whereas values above 100 make the output\n# darker. The value divided by 100 is the actual gamma applied, so 80 represents\n# a gamma of 0.8, The value 220 represents a gamma of 2.2, and 100 does not\n# change the gamma.\n# Minimum value: 40, maximum value: 240, default value: 80.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_GAMMA  = 80\n\n# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML\n# page will contain the date and time when the page was generated. Setting this\n# to YES can help to show when doxygen was last run and thus if the\n# documentation is up to date.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_TIMESTAMP         = YES\n\n# If the HTML_DYNAMIC_MENUS tag is set to YES then the generated HTML\n# documentation will contain a main index with vertical navigation menus that\n# are dynamically created via JavaScript. If disabled, the navigation index will\n# consists of multiple levels of tabs that are statically embedded in every HTML\n# page. Disable this option to support browsers that do not have JavaScript,\n# like the Qt help browser.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_DYNAMIC_MENUS     = YES\n\n# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML\n# documentation will contain sections that can be hidden and shown after the\n# page has loaded.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n# tree by default.\n# Minimum value: 0, maximum value: 9999, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_INDEX_NUM_ENTRIES = 100\n\n# If the GENERATE_DOCSET tag is set to YES, additional index files will be\n# generated that can be used as input for Apple's Xcode 3 integrated development\n# environment (see:\n# https://developer.apple.com/xcode/), introduced with OSX 10.5 (Leopard). To\n# create a documentation set, doxygen will generate a Makefile in the HTML\n# output directory. Running make will produce the docset in that directory and\n# running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See https://developer.apple.com/library/archive/featuredarticles/Doxy\n# genXcode/_index.html for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_DOCSET        = NO\n\n# This tag determines the name of the docset feed. A documentation feed provides\n# an umbrella under which multiple documentation sets from a single provider\n# (such as a company or product suite) can be grouped.\n# The default value is: Doxygen generated docs.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_FEEDNAME        = \"Doxygen generated docs\"\n\n# This tag specifies a string that should uniquely identify the documentation\n# set bundle. This should be a reverse domain-name style string, e.g.\n# com.mycompany.MyDocSet. Doxygen will append .docset to the name.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_BUNDLE_ID       = org.doxygen.Project\n\n# The DOCSET_PUBLISHER_ID tag specifies a string that should uniquely identify\n# the documentation publisher. This should be a reverse domain-name style\n# string, e.g. com.mycompany.MyDocSet.documentation.\n# The default value is: org.doxygen.Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_ID    = org.doxygen.Publisher\n\n# The DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.\n# The default value is: Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_NAME  = Publisher\n\n# If the GENERATE_HTMLHELP tag is set to YES then doxygen generates three\n# additional HTML index files: index.hhp, index.hhc, and index.hhk. The\n# index.hhp is a project file that can be read by Microsoft's HTML Help Workshop\n# (see:\n# https://www.microsoft.com/en-us/download/details.aspx?id=21138) on Windows.\n#\n# The HTML Help Workshop contains a compiler that can convert all HTML output\n# generated by doxygen into a single compiled HTML file (.chm). Compiled HTML\n# files are now used as the Windows 98 help format, and will replace the old\n# Windows help format (.hlp) on all Windows platforms in the future. Compressed\n# HTML files also contain an index, a table of contents, and you can search for\n# words in the documentation. The HTML workshop also contains a viewer for\n# compressed HTML files.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_HTMLHELP      = NO\n\n# The CHM_FILE tag can be used to specify the file name of the resulting .chm\n# file. You can add a path in front of the file if the result should not be\n# written to the html output directory.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_FILE               =\n\n# The HHC_LOCATION tag can be used to specify the location (absolute path\n# including file name) of the HTML help compiler (hhc.exe). If non-empty,\n# doxygen will try to run the HTML help compiler on the generated index.hhp.\n# The file has to be specified with full path.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nHHC_LOCATION           =\n\n# The GENERATE_CHI flag controls if a separate .chi index file is generated\n# (YES) or that it should be included in the main .chm file (NO).\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nGENERATE_CHI           = NO\n\n# The CHM_INDEX_ENCODING is used to encode HtmlHelp index (hhk), content (hhc)\n# and project file content.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_INDEX_ENCODING     =\n\n# The BINARY_TOC flag controls whether a binary table of contents is generated\n# (YES) or a normal table of contents (NO) in the .chm file. Furthermore it\n# enables the Previous and Next buttons.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nBINARY_TOC             = NO\n\n# The TOC_EXPAND flag can be set to YES to add extra items for group members to\n# the table of contents of the HTML help documentation and to the tree view.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nTOC_EXPAND             = NO\n\n# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and\n# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated that\n# can be used as input for Qt's qhelpgenerator to generate a Qt Compressed Help\n# (.qch) of the generated HTML documentation.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_QHP           = YES\n\n# If the QHG_LOCATION tag is specified, the QCH_FILE tag can be used to specify\n# the file name of the resulting .qch file. The path specified is relative to\n# the HTML output folder.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQCH_FILE               = ../wt.qch\n\n# The QHP_NAMESPACE tag specifies the namespace to use when generating Qt Help\n# Project output. For more information please see Qt Help Project / Namespace\n# (see:\n# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#namespace).\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_NAMESPACE          = eu.webtoolkit.wt\n\n# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating Qt\n# Help Project output. For more information please see Qt Help Project / Virtual\n# Folders (see:\n# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#virtual-folders).\n# The default value is: doc.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_VIRTUAL_FOLDER     = doc\n\n# If the QHP_CUST_FILTER_NAME tag is set, it specifies the name of a custom\n# filter to add. For more information please see Qt Help Project / Custom\n# Filters (see:\n# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#custom-filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_NAME   =\n\n# The QHP_CUST_FILTER_ATTRS tag specifies the list of the attributes of the\n# custom filter to add. For more information please see Qt Help Project / Custom\n# Filters (see:\n# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#custom-filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_ATTRS  =\n\n# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this\n# project's filter section matches. Qt Help Project / Filter Attributes (see:\n# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#filter-attributes).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_SECT_FILTER_ATTRS  =\n\n# The QHG_LOCATION tag can be used to specify the location (absolute path\n# including file name) of Qt's qhelpgenerator. If non-empty doxygen will try to\n# run qhelpgenerator on the generated .qhp file.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHG_LOCATION           = qhelpgenerator\n\n# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files will be\n# generated, together with the HTML files, they form an Eclipse help plugin. To\n# install this plugin and make it available under the help contents menu in\n# Eclipse, the contents of the directory containing the HTML and XML files needs\n# to be copied into the plugins directory of eclipse. The name of the directory\n# within the plugins directory should be the same as the ECLIPSE_DOC_ID value.\n# After copying Eclipse needs to be restarted before the help appears.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_ECLIPSEHELP   = NO\n\n# A unique identifier for the Eclipse help plugin. When installing the plugin\n# the directory name containing the HTML and XML files should also have this\n# name. Each documentation set should have its own identifier.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_ECLIPSEHELP is set to YES.\n\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nDISABLE_INDEX          = NO\n\n# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index\n# structure should be generated to display hierarchical information. If the tag\n# value is set to YES, a side panel will be generated containing a tree-like\n# index structure (just like the one that is generated for HTML Help). For this\n# to work a browser that supports JavaScript, DHTML, CSS and frames is required\n# (i.e. any modern browser). Windows users are probably better off using the\n# HTML help feature. Via custom style sheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine-tune the look of the index. As an example, the default style\n# sheet generated by doxygen has an example that shows how to put an image at\n# the root of the tree instead of the PROJECT_NAME. Since the tree basically has\n# the same information as the tab index, you could consider setting\n# DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_TREEVIEW      = NO\n\n# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values that\n# doxygen will group on one line in the generated HTML documentation.\n#\n# Note that a value of 0 will completely suppress the enum values from appearing\n# in the overview section.\n# Minimum value: 0, maximum value: 20, default value: 4.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nENUM_VALUES_PER_LINE   = 4\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be used\n# to set the initial width (in pixels) of the frame in which the tree is shown.\n# Minimum value: 0, maximum value: 1500, default value: 250.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nTREEVIEW_WIDTH         = 250\n\n# If the EXT_LINKS_IN_WINDOW option is set to YES, doxygen will open links to\n# external symbols imported via tag files in a separate window.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nEXT_LINKS_IN_WINDOW    = NO\n\n# If the HTML_FORMULA_FORMAT option is set to svg, doxygen will use the pdf2svg\n# tool (see https://github.com/dawbarton/pdf2svg) or inkscape (see\n# https://inkscape.org) to generate formulas as SVG images instead of PNGs for\n# the HTML output. These images will generally look nicer at scaled resolutions.\n# Possible values are: png (the default) and svg (looks nicer but requires the\n# pdf2svg or inkscape tool).\n# The default value is: png.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FORMULA_FORMAT    = png\n\n# Use this tag to change the font size of LaTeX formulas included as images in\n# the HTML documentation. When you change the font size after a successful\n# doxygen run you need to manually remove any form_*.png images from the HTML\n# output directory to force them to be regenerated.\n# Minimum value: 8, maximum value: 50, default value: 10.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_FONTSIZE       = 10\n\n# Use the FORMULA_TRANSPARENT tag to determine whether or not the images\n# generated for formulas are transparent PNGs. Transparent PNGs are not\n# supported properly for IE 6.0, but are supported on all modern browsers.\n#\n# Note that when changing this option you need to delete any form_*.png files in\n# the HTML output directory before the changes have effect.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_TRANSPARENT    = YES\n\n# The FORMULA_MACROFILE can contain LaTeX \\newcommand and \\renewcommand commands\n# to create new LaTeX commands to be used in formulas as building blocks. See\n# the section \"Including formulas\" for details.\n\nFORMULA_MACROFILE      =\n\n# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax (see\n# https://www.mathjax.org) which uses client side JavaScript for the rendering\n# instead of using pre-rendered bitmaps. Use this if you do not have LaTeX\n# installed or if you want to formulas look prettier in the HTML output. When\n# enabled you may also need to install MathJax separately and configure the path\n# to it using the MATHJAX_RELPATH option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nUSE_MATHJAX            = NO\n\n# When MathJax is enabled you can set the default output format to be used for\n# the MathJax output. See the MathJax site (see:\n# http://docs.mathjax.org/en/v2.7-latest/output.html) for more details.\n# Possible values are: HTML-CSS (which is slower, but has the best\n# compatibility), NativeMML (i.e. MathML) and SVG.\n# The default value is: HTML-CSS.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_FORMAT         = HTML-CSS\n\n# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n# MathJax from https://www.mathjax.org before deployment.\n# The default value is: https://cdn.jsdelivr.net/npm/mathjax@2.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_RELPATH        = http://cdn.mathjax.org/mathjax/latest\n\n# The MATHJAX_EXTENSIONS tag can be used to specify one or more MathJax\n# extension names that should be enabled during MathJax rendering. For example\n# MATHJAX_EXTENSIONS = TeX/AMSmath TeX/AMSsymbols\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_EXTENSIONS     =\n\n# The MATHJAX_CODEFILE tag can be used to specify a file with javascript pieces\n# of code that will be used on startup of the MathJax code. See the MathJax site\n# (see:\n# http://docs.mathjax.org/en/v2.7-latest/output.html) for more details. For an\n# example see the documentation.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_CODEFILE       =\n\n# When the SEARCHENGINE tag is enabled doxygen will generate a search box for\n# the HTML output. The underlying search engine uses javascript and DHTML and\n# should work on any modern browser. Note that when using HTML help\n# (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets (GENERATE_DOCSET)\n# there is already a search function so this one should typically be disabled.\n# For large projects the javascript based search engine can be slow, then\n# enabling SERVER_BASED_SEARCH may provide a better solution. It is possible to\n# search using the keyboard; to jump to the search box use <access key> + S\n# (what the <access key> is depends on the OS and browser, but it is typically\n# <CTRL>, <ALT>/<option>, or both). Inside the search box use the <cursor down\n# key> to jump into the search results window, the results can be navigated\n# using the <cursor keys>. Press <Enter> to select an item or <escape> to cancel\n# the search. The filter options can be selected when the cursor is inside the\n# search box by pressing <Shift>+<cursor down>. Also here use the <cursor keys>\n# to select a filter and <Enter> or <escape> to activate or cancel the filter\n# option.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nSEARCHENGINE           = YES\n\n# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using JavaScript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n#\n# Doxygen ships with an example indexer (doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see:\n# https://xapian.org/).\n#\n# See the section \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH        = NO\n\n# The SEARCHENGINE_URL should point to a search engine hosted by a web server\n# which will return the search results when EXTERNAL_SEARCH is enabled.\n#\n# Doxygen ships with an example indexer (doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see:\n# https://xapian.org/). See the section \"External Indexing and Searching\" for\n# details.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHENGINE_URL       =\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the unindexed\n# search data is written to a file for indexing by an external tool. With the\n# SEARCHDATA_FILE tag the name of this file can be specified.\n# The default file is: searchdata.xml.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHDATA_FILE        = searchdata.xml\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the\n# EXTERNAL_SEARCH_ID tag can be used as an identifier for the project. This is\n# useful in combination with EXTRA_SEARCH_MAPPINGS to search through multiple\n# projects and redirect the results back to the right project.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH_ID     =\n\n# The EXTRA_SEARCH_MAPPINGS tag can be used to enable searching through doxygen\n# projects other than the one defined by this configuration file, but that are\n# all added to the same external search index. Each project needs to have a\n# unique id set via EXTERNAL_SEARCH_ID. The search mapping then maps the id of\n# to a relative location where the documentation can be found. The format is:\n# EXTRA_SEARCH_MAPPINGS = tagname1=loc1 tagname2=loc2 ...\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTRA_SEARCH_MAPPINGS  =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES, doxygen will generate LaTeX output.\n# The default value is: YES.\n\nGENERATE_LATEX         = NO\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_OUTPUT           = latex\n\n# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be\n# invoked.\n#\n# Note that when not enabling USE_PDFLATEX the default is latex when enabling\n# USE_PDFLATEX the default is pdflatex and when in the later case latex is\n# chosen this is overwritten by pdflatex. For specific output languages the\n# default can have been set differently, this depends on the implementation of\n# the output language.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_CMD_NAME         = latex\n\n# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to generate\n# index for LaTeX.\n# Note: This tag is used in the Makefile / make.bat.\n# See also: LATEX_MAKEINDEX_CMD for the part in the generated output file\n# (.tex).\n# The default file is: makeindex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nMAKEINDEX_CMD_NAME     = makeindex\n\n# The LATEX_MAKEINDEX_CMD tag can be used to specify the command name to\n# generate index for LaTeX. In case there is no backslash (\\) as first character\n# it will be automatically added in the LaTeX code.\n# Note: This tag is used in the generated output file (.tex).\n# See also: MAKEINDEX_CMD_NAME for the part in the Makefile / make.bat.\n# The default value is: makeindex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_MAKEINDEX_CMD    = makeindex\n\n# If the COMPACT_LATEX tag is set to YES, doxygen generates more compact LaTeX\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nCOMPACT_LATEX          = NO\n\n# The PAPER_TYPE tag can be used to set the paper type that is used by the\n# printer.\n# Possible values are: a4 (210 x 297 mm), letter (8.5 x 11 inches), legal (8.5 x\n# 14 inches) and executive (7.25 x 10.5 inches).\n# The default value is: a4.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPAPER_TYPE             = a4wide\n\n# The EXTRA_PACKAGES tag can be used to specify one or more LaTeX package names\n# that should be included in the LaTeX output. The package can be specified just\n# by its name or with the correct syntax as to be used with the LaTeX\n# \\usepackage command. To get the times font for instance you can specify :\n# EXTRA_PACKAGES=times or EXTRA_PACKAGES={times}\n# To use the option intlimits with the amsmath package you can specify:\n# EXTRA_PACKAGES=[intlimits]{amsmath}\n# If left blank no extra packages will be included.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nEXTRA_PACKAGES         =\n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for the\n# generated LaTeX document. The header should contain everything until the first\n# chapter. If it is left blank doxygen will generate a standard header. See\n# section \"Doxygen usage\" for information on how to let doxygen write the\n# default header to a separate file.\n#\n# Note: Only use a user-defined header if you know what you are doing! The\n# following commands have a special meaning inside the header: $title,\n# $datetime, $date, $doxygenversion, $projectname, $projectnumber,\n# $projectbrief, $projectlogo. Doxygen will replace $title with the empty\n# string, for the replacement values of the other commands the user is referred\n# to HTML_HEADER.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HEADER           =\n\n# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for the\n# generated LaTeX document. The footer should contain everything after the last\n# chapter. If it is left blank doxygen will generate a standard footer. See\n# LATEX_HEADER for more information on how to generate a default footer and what\n# special commands can be used inside the footer.\n#\n# Note: Only use a user-defined footer if you know what you are doing!\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_FOOTER           =\n\n# The LATEX_EXTRA_STYLESHEET tag can be used to specify additional user-defined\n# LaTeX style sheets that are included after the standard style sheets created\n# by doxygen. Using this option one can overrule certain style aspects. Doxygen\n# will copy the style sheet files to the output directory.\n# Note: The order of the extra style sheet files is of importance (e.g. the last\n# style sheet in the list overrules the setting of the previous ones in the\n# list).\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_STYLESHEET =\n\n# The LATEX_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the LATEX_OUTPUT output\n# directory. Note that the files will be copied as-is; there are no commands or\n# markers available.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_FILES      =\n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated is\n# prepared for conversion to PDF (using ps2pdf or pdflatex). The PDF file will\n# contain links (just like the HTML output) instead of page references. This\n# makes the output suitable for online browsing using a PDF viewer.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPDF_HYPERLINKS         = NO\n\n# If the USE_PDFLATEX tag is set to YES, doxygen will use the engine as\n# specified with LATEX_CMD_NAME to generate the PDF file directly from the LaTeX\n# files. Set this option to YES, to get a higher quality PDF documentation.\n#\n# See also section LATEX_CMD_NAME for selecting the engine.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nUSE_PDFLATEX           = NO\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode\n# command to the generated LaTeX files. This will instruct LaTeX to keep running\n# if errors occur, instead of asking the user for help. This option is also used\n# when generating formulas in HTML.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BATCHMODE        = NO\n\n# If the LATEX_HIDE_INDICES tag is set to YES then doxygen will not include the\n# index chapters (such as File Index, Compound Index, etc.) in the output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HIDE_INDICES     = NO\n\n# If the LATEX_SOURCE_CODE tag is set to YES then doxygen will include source\n# code with syntax highlighting in the LaTeX output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_SOURCE_CODE      = NO\n\n# The LATEX_BIB_STYLE tag can be used to specify the style to use for the\n# bibliography, e.g. plainnat, or ieeetr. See\n# https://en.wikipedia.org/wiki/BibTeX and \\cite for more info.\n# The default value is: plain.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BIB_STYLE        = plain\n\n# If the LATEX_TIMESTAMP tag is set to YES then the footer of each generated\n# page will contain the date and time when the page was generated. Setting this\n# to NO can help when comparing the output of multiple runs.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_TIMESTAMP        = NO\n\n# The LATEX_EMOJI_DIRECTORY tag is used to specify the (relative or absolute)\n# path from which the emoji images will be read. If a relative path is entered,\n# it will be relative to the LATEX_OUTPUT directory. If left blank the\n# LATEX_OUTPUT directory will be used.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EMOJI_DIRECTORY  =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES, doxygen will generate RTF output. The\n# RTF output is optimized for Word 97 and may not look too pretty with other RTF\n# readers/editors.\n# The default value is: NO.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: rtf.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_OUTPUT             = rtf\n\n# If the COMPACT_RTF tag is set to YES, doxygen generates more compact RTF\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated will\n# contain hyperlink fields. The RTF file will contain links (just like the HTML\n# output) instead of page references. This makes the output suitable for online\n# browsing using Word or some other Word compatible readers that support those\n# fields.\n#\n# Note: WordPad (write) and others do not support links.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's\n# configuration file, i.e. a series of assignments. You only have to provide\n# replacements, missing definitions are set to their default value.\n#\n# See also section \"Doxygen usage\" for information on how to generate the\n# default style sheet that doxygen normally uses.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_STYLESHEET_FILE    =\n\n# Set optional variables used in the generation of an RTF document. Syntax is\n# similar to doxygen's configuration file. A template extensions file can be\n# generated using doxygen -e rtf extensionFile.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_EXTENSIONS_FILE    =\n\n# If the RTF_SOURCE_CODE tag is set to YES then doxygen will include source code\n# with syntax highlighting in the RTF output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_SOURCE_CODE        = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES, doxygen will generate man pages for\n# classes and files.\n# The default value is: NO.\n\nGENERATE_MAN           = NO\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it. A directory man3 will be created inside the directory specified by\n# MAN_OUTPUT.\n# The default directory is: man.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_OUTPUT             = man\n\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_EXTENSION          = .3\n\n# The MAN_SUBDIR tag determines the name of the directory created within\n# MAN_OUTPUT in which the man pages are placed. If defaults to man followed by\n# MAN_EXTENSION with the initial . removed.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_SUBDIR             =\n\n# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_LINKS              = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES, doxygen will generate an XML file that\n# captures the structure of the code including all documentation.\n# The default value is: NO.\n\nGENERATE_XML           = NO\n\n# The XML_OUTPUT tag is used to specify where the XML pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: xml.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_OUTPUT             = xml\n\n# If the XML_PROGRAMLISTING tag is set to YES, doxygen will dump the program\n# listings (including syntax highlighting and cross-referencing information) to\n# the XML output. Note that enabling this will significantly increase the size\n# of the XML output.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_PROGRAMLISTING     = YES\n\n# If the XML_NS_MEMB_FILE_SCOPE tag is set to YES, doxygen will include\n# namespace members in file scope as well, matching the HTML output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_NS_MEMB_FILE_SCOPE = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the DOCBOOK output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_DOCBOOK tag is set to YES, doxygen will generate Docbook files\n# that can be used to generate PDF.\n# The default value is: NO.\n\nGENERATE_DOCBOOK       = NO\n\n# The DOCBOOK_OUTPUT tag is used to specify where the Docbook pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be put in\n# front of it.\n# The default directory is: docbook.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_OUTPUT         = docbook\n\n# If the DOCBOOK_PROGRAMLISTING tag is set to YES, doxygen will include the\n# program listings (including syntax highlighting and cross-referencing\n# information) to the DOCBOOK output. Note that enabling this will significantly\n# increase the size of the DOCBOOK output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_PROGRAMLISTING = NO\n\n#---------------------------------------------------------------------------\n# Configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_AUTOGEN_DEF tag is set to YES, doxygen will generate an\n# AutoGen Definitions (see http://autogen.sourceforge.net/) file that captures\n# the structure of the code including all documentation. Note that this feature\n# is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_PRETTY         = YES\n\n# The names of the make variables in the generated doxyrules.make file are\n# prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. This is useful\n# so different doxyrules.make files included by the same Makefile don't\n# overwrite each other's variables.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_MAKEVAR_PREFIX =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES, doxygen will evaluate all\n# C-preprocessor directives found in the sources and include files.\n# The default value is: YES.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names\n# in the source code. If set to NO, only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nMACRO_EXPANSION        = YES\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES then\n# the macro expansion is limited to the macros specified with the PREDEFINED and\n# EXPAND_AS_DEFINED tags.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_ONLY_PREDEF     = YES\n\n# If the SEARCH_INCLUDES tag is set to YES, the include files in the\n# INCLUDE_PATH will be searched if a #include is found.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by the\n# preprocessor.\n# This tag requires that the tag SEARCH_INCLUDES is set to YES.\n\nINCLUDE_PATH           =\n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will be\n# used.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nINCLUDE_FILE_PATTERNS  =\n\n# The PREDEFINED tag can be used to specify one or more macro names that are\n# defined before the preprocessor is started (similar to the -D option of e.g.\n# gcc). The argument of the tag is a list of macros of the form: name or\n# name=definition (no spaces). If the definition and the \"=\" are omitted, \"=1\"\n# is assumed. To prevent a macro definition from being undefined via #undef or\n# recursively expanded use the := operator instead of the = operator.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nPREDEFINED             = DOXYGEN_ONLY \\\n                         WT_HAS_SAML \\\n                         WT_USTRING=WString \\\n                         WT_UCHAR=std::string \\\n                         WT_BOSTREAM=std::ostream \\\n                         WT_BAOSTREAM=std::ostringstream \\\n                         WT_ARRAY= \\\n                         WT_DEPRECATED(...)=\n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this\n# tag can be used to specify a list of macro names that should be expanded. The\n# macro definition that is found in the sources will be used. Use the PREDEFINED\n# tag if you want to use a different macro definition that overrules the\n# definition found in the source code.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_AS_DEFINED      = WT_WGL_TEMPLATE\n\n# If the SKIP_FUNCTION_MACROS tag is set to YES then doxygen's preprocessor will\n# remove all references to function-like macros that are alone on a line, have\n# an all uppercase name, and do not end with a semicolon. Such function macros\n# are typically used for boiler-plate code, and will confuse the parser if not\n# removed.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES tag can be used to specify one or more tag files. For each tag\n# file the location of the external documentation should be added. The format of\n# a tag file without this location is as follows:\n# TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n# TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where loc1 and loc2 can be relative or absolute paths or URLs. See the\n# section \"Linking to external documentation\" for more information about the use\n# of tag files.\n# Note: Each tag file must have a unique name (where the name does NOT include\n# the path). If a tag file is not located in the directory in which doxygen is\n# run, you must also specify the path to the tagfile here.\n\nTAGFILES               =\n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create a\n# tag file that is based on the input files it reads. See section \"Linking to\n# external documentation\" for more information about the usage of tag files.\n\nGENERATE_TAGFILE       = wt.tags\n\n# If the ALLEXTERNALS tag is set to YES, all external class will be listed in\n# the class index. If set to NO, only the inherited external classes will be\n# listed.\n# The default value is: NO.\n\nALLEXTERNALS           = NO\n\n# If the EXTERNAL_GROUPS tag is set to YES, all external groups will be listed\n# in the modules index. If set to NO, only the current project's groups will be\n# listed.\n# The default value is: YES.\n\nEXTERNAL_GROUPS        = YES\n\n# If the EXTERNAL_PAGES tag is set to YES, all external pages will be listed in\n# the related pages index. If set to NO, only the current project's pages will\n# be listed.\n# The default value is: YES.\n\nEXTERNAL_PAGES         = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If the CLASS_DIAGRAMS tag is set to YES, doxygen will generate a class diagram\n# (in HTML and LaTeX) for classes with base or super classes. Setting the tag to\n# NO turns the diagrams off. Note that this option also works with HAVE_DOT\n# disabled, but it is recommended to install and use dot, since it yields more\n# powerful graphs.\n# The default value is: YES.\n\nCLASS_DIAGRAMS         = NO\n\n# You can include diagrams made with dia in doxygen documentation. Doxygen will\n# then run dia to produce the diagram and insert it in the documentation. The\n# DIA_PATH tag allows you to specify the directory where the dia binary resides.\n# If left empty dia is assumed to be found in the default search path.\n\nDIA_PATH               =\n\n# If set to YES the inheritance and collaboration graphs will hide inheritance\n# and usage relations if the target is undocumented or is not a class.\n# The default value is: YES.\n\nHIDE_UNDOC_RELATIONS   = YES\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz (see:\n# http://www.graphviz.org/), a graph visualization toolkit from AT&T and Lucent\n# Bell Labs. The other options in this section have no effect if this option is\n# set to NO\n# The default value is: YES.\n\nHAVE_DOT               = YES\n\n# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_NUM_THREADS        = 0\n\n# When you want a differently looking font in the dot files that doxygen\n# generates you can specify the font name using DOT_FONTNAME. You need to make\n# sure dot is able to find the font, which can be done by putting it in a\n# standard location or by setting the DOTFONTPATH environment variable or by\n# setting DOT_FONTPATH to the directory containing the font.\n# The default value is: Helvetica.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTNAME           = Helvetica\n\n# The DOT_FONTSIZE tag can be used to set the size (in points) of the font of\n# dot graphs.\n# Minimum value: 4, maximum value: 24, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTSIZE           = 10\n\n# By default doxygen will tell dot to use the default font as specified with\n# DOT_FONTNAME. If you specify a different font using DOT_FONTNAME you can set\n# the path where dot can find it using this tag.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTPATH           =\n\n# If the CLASS_GRAPH tag is set to YES then doxygen will generate a graph for\n# each documented class showing the direct and indirect inheritance relations.\n# Setting this tag to YES will force the CLASS_DIAGRAMS tag to NO.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH tag is set to YES then doxygen will generate a\n# graph for each documented class showing the direct and indirect implementation\n# dependencies (inheritance, containment, and class references variables) of the\n# class with other documented classes.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCOLLABORATION_GRAPH    = NO\n\n# If the GROUP_GRAPHS tag is set to YES then doxygen will generate a graph for\n# groups, showing the direct groups dependencies.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGROUP_GRAPHS           = NO\n\n# If the UML_LOOK tag is set to YES, doxygen will generate inheritance and\n# collaboration diagrams in a style similar to the OMG's Unified Modeling\n# Language.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LOOK               = NO\n\n# If the UML_LOOK tag is enabled, the fields and methods are shown inside the\n# class node. If there are many fields or methods and many nodes the graph may\n# become too big to be useful. The UML_LIMIT_NUM_FIELDS threshold limits the\n# number of items for each type to make the size more manageable. Set this to 0\n# for no limit. Note that the threshold may be exceeded by 50% before the limit\n# is enforced. So when you set the threshold to 10, up to 15 fields may appear,\n# but if the number exceeds 15, the total amount of fields shown is limited to\n# 10.\n# Minimum value: 0, maximum value: 100, default value: 10.\n# This tag requires that the tag UML_LOOK is set to YES.\n\nUML_LIMIT_NUM_FIELDS   = 10\n\n# If the DOT_UML_DETAILS tag is set to NO, doxygen will show attributes and\n# methods without types and arguments in the UML graphs. If the DOT_UML_DETAILS\n# tag is set to YES, doxygen will add type and arguments for attributes and\n# methods in the UML graphs. If the DOT_UML_DETAILS tag is set to NONE, doxygen\n# will not generate fields with class member information in the UML graphs. The\n# class diagrams will look similar to the default class diagrams but using UML\n# notation for the relationships.\n# Possible values are: NO, YES and NONE.\n# The default value is: NO.\n# This tag requires that the tag UML_LOOK is set to YES.\n\nDOT_UML_DETAILS        = NO\n\n# The DOT_WRAP_THRESHOLD tag can be used to set the maximum number of characters\n# to display on a single line. If the actual line length exceeds this threshold\n# significantly it will wrapped across multiple lines. Some heuristics are apply\n# to avoid ugly line breaks.\n# Minimum value: 0, maximum value: 1000, default value: 17.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_WRAP_THRESHOLD     = 17\n\n# If the TEMPLATE_RELATIONS tag is set to YES then the inheritance and\n# collaboration graphs will show the relations between templates and their\n# instances.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nTEMPLATE_RELATIONS     = NO\n\n# If the INCLUDE_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are set to\n# YES then doxygen will generate a graph for each documented file showing the\n# direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDE_GRAPH          = NO\n\n# If the INCLUDED_BY_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are\n# set to YES then doxygen will generate a graph for each documented file showing\n# the direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDED_BY_GRAPH      = NO\n\n# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command. Disabling a call graph can be\n# accomplished by means of the command \\hidecallgraph.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALL_GRAPH             = NO\n\n# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command. Disabling a caller graph can be\n# accomplished by means of the command \\hidecallergraph.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALLER_GRAPH           = NO\n\n# If the GRAPHICAL_HIERARCHY tag is set to YES then doxygen will graphical\n# hierarchy of all classes instead of a textual one.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# If the DIRECTORY_GRAPH tag is set to YES then doxygen will show the\n# dependencies a directory has on other directories in a graphical way. The\n# dependency relations are determined by the #include relations between the\n# files in the directories.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDIRECTORY_GRAPH        = YES\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot. For an explanation of the image formats see the section\n# output formats in the documentation of the dot tool (Graphviz (see:\n# http://www.graphviz.org/)).\n# Note: If you choose svg you need to set HTML_FILE_EXTENSION to xhtml in order\n# to make the SVG files visible in IE 9+ (other browsers do not have this\n# requirement).\n# Possible values are: png, png:cairo, png:cairo:cairo, png:cairo:gd, png:gd,\n# png:gd:gd, jpg, jpg:cairo, jpg:cairo:gd, jpg:gd, jpg:gd:gd, gif, gif:cairo,\n# gif:cairo:gd, gif:gd, gif:gd:gd, svg, png:gd, png:gd:gd, png:cairo,\n# png:cairo:gd, png:cairo:cairo, png:cairo:gdiplus, png:gdiplus and\n# png:gdiplus:gdiplus.\n# The default value is: png.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_IMAGE_FORMAT       = svg\n\n# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to\n# enable generation of interactive SVG images that allow zooming and panning.\n#\n# Note that this requires a modern browser other than Internet Explorer. Tested\n# and working are Firefox, Chrome, Safari, and Opera.\n# Note: For IE 9+ you need to set HTML_FILE_EXTENSION to xhtml in order to make\n# the SVG files visible. Older versions of IE do not have SVG support.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINTERACTIVE_SVG        = NO\n\n# The DOT_PATH tag can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found in the path.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_PATH               =\n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the \\dotfile\n# command).\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOTFILE_DIRS           =\n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           =\n\n# The DIAFILE_DIRS tag can be used to specify one or more directories that\n# contain dia files that are included in the documentation (see the \\diafile\n# command).\n\nDIAFILE_DIRS           =\n\n# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the\n# path where java can find the plantuml.jar file. If left blank, it is assumed\n# PlantUML is not used or called during a preprocessing step. Doxygen will\n# generate a warning when it encounters a \\startuml command in this case and\n# will not generate output for the diagram.\n\nPLANTUML_JAR_PATH      =\n\n# When using plantuml, the PLANTUML_CFG_FILE tag can be used to specify a\n# configuration file for plantuml.\n\nPLANTUML_CFG_FILE      =\n\n# When using plantuml, the specified paths are searched for files specified by\n# the !include statement in a plantuml block.\n\nPLANTUML_INCLUDE_PATH  =\n\n# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_GRAPH_MAX_NODES    = 50\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nMAX_DOT_GRAPH_DEPTH    = 2\n\n# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent\n# background. This is disabled by default, because dot on Windows does not seem\n# to support this out of the box.\n#\n# Warning: Depending on the platform used, enabling this option may lead to\n# badly anti-aliased labels on the edges of a graph (i.e. they become hard to\n# read).\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_TRANSPARENT        = YES\n\n# Set the DOT_MULTI_TARGETS tag to YES to allow dot to generate multiple output\n# files in one run (i.e. multiple -o and -T options on the command line). This\n# makes dot run faster, but since only newer versions of dot (>1.8.10) support\n# this, this feature is disabled by default.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_MULTI_TARGETS      = NO\n\n# If the GENERATE_LEGEND tag is set to YES doxygen will generate a legend page\n# explaining the meaning of the various boxes and arrows in the dot generated\n# graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES, doxygen will remove the intermediate\n# files that are used to generate the various graphs.\n#\n# Note: This setting is not only used for dot files but also for msc and\n# plantuml temporary files.\n# The default value is: YES.\n\nDOT_CLEANUP            = YES\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 19.6591796875,
          "content": "               Wt Installation instructions on Unix-like systems\n\n   This page lists the instructions for building and installing Wt on\n   Unix-like systems (Linux, macOS, BSD,…). It is organized in 3 sections:\n     * [1]Requirements\n     * [2]Building and installing the library\n     * [3]Trying the examples (or your own Wt application)\n\nRequirements\n\n   The library provides two ways for deploying applications: either with\n   the built-in web server (recommended), or using FastCGI (legacy).\n\n   The built-in web server is a simple HTTP and WebSockets server. It\n   supports all of Wt's features, and is simple to setup. This is the\n   recommended way of deploying a Wt application.\n\n   FastCGI is also supported if necessary, but it does not support\n   WebSockets.\n\n   Each of these two choices correspond to a library, a so-called\n   connector library. Below it is outlined how to configure the build\n   process of Wt to build either or both libraries (libwthttp and\n   libfcgi).\n\n   Thus, to build a Wt library with built-in web server you need to link\n   against libwt and libwthttp. To build a Wt library which acts as a\n   FastCGI process, you need to link against libwt and libfcgi.\n\n  1 Wt requirements\n\n     * Compiler: Any compiler with sufficient support for C++14, like GCC\n       5.1 or higher, or Clang 3.3 or higher.\n     * [4]CMake 3.1 or higher\n     * [5]C++ boost library 1.50.0 or higher\n     * Optionally, [6]OpenSSL, which is used to support the HTTPS protocol\n       in the web client, and the HTTPS protocol in the built-in wthttpd\n       connector.\n     * Optionally, [7]Haru Free PDF Library, which is used to provide\n       support for painting to PDF (WPdfImage).\n     * Optionally, [8]GraphicsMagick, for supporting painting to raster\n       images (PNG, GIF, ...) (WRasterImage).\n     * Optionally, [9]Pango, for improved font support in the WPdfImage\n       and WRasterImage paint devices.\n     * Optionally, [10]PostgreSQL, for the PostgreSQL backend for Wt::Dbo\n       (Dbo::backend::Postgres).\n     * Optionally, [11]Firebird, for the Firebird backend for Wt::Dbo\n       (Dbo::backend::Firebird).\n     * Optionally, [12]the C API for MySQL (mysqlclient), or the\n       [13]MariaDB connector library, for the MySQL/MariaDB backend for\n       Wt::Dbo (Dbo::backend::MySQL).\n     * Optionally, [14]unixODBC, for the SQL Server backend for Wt::Dbo\n       (Dbo::backend::MSSQLServer).\n     * Optionally, [15]libunwind, for the saving of backtraces in\n       exceptions (useful for debugging).\n\n    1a Using wthttpd\n\n   When using the built-in web server, two more libraries may be installed\n   to enable optional features (you can also build without them), but\n   otherwise no extra dependencies are required.\n     * Optionally, zlib (libz), for compression over HTTP and WebSockets.\n     * Optionally, OpenSSL (libopenssl), for HTTPS.\n\n    1b Using FastCGI\n\n   When using FastCGI, Wt requires a webserver (like Apache or NGINX)\n   which supports the FastCGI protocol.\n\n   To build wtfcgi, you need:\n     * [16]FCGI library, including C++ bindings (libfcgi++)\n     * A suitable plugin for your web server.\n\n  2 Additional and optional requirements for some of the examples\n\n     * Qt, for the libwtwithqt interoperability layer\n     __________________________________________________________________\n\nBuilding and installing the Wt library\n\n    1. Create a build directory\n\n   The recommended way to build the library is in a separate build\n   directory, for example within the top level of the Wt package:\n    $ cd wt-x.x.x\n    $ mkdir build\n    $ cd build\n\n    2. Configure the library\n\n    $ cmake ../\n\n   The latter command will try to locate the necessary libraries. If\n   everything is OK, then this should end with something like:\n  -- Generating done\n  -- Build files have been written to: /home/kdforc0/project/wt/build\n\n   If CMake fails, because it cannot resolve all dependencies, then you\n   may help CMake by setting some variables to help CMake locate the\n   libraries. This may be done on the command-line using -Dvar=value or\n   using the interactive program:\n    $ ccmake ../\n\n   or\n    $ cmake-gui ../\n\n   The GUI lists all variables that are configurable in Wt's build\n   process.\n\n   The variables specify several build and configuration aspects of Wt, of\n   which the most relevant ones are (there are many more visible in the\n   GUI):\n\n   CMAKE_INSTALL_PREFIX\n          Installation prefix for the library and include files)\n\n   CONFIGDIR\n          Path for configuration files (default is /etc/wt/)\n\n   CONNECTOR_FCGI\n          Build the FastCGI connector (libwtfcgi) ?\n\n   CONNECTOR_HTTP\n          Build the stand-alone httpd connector (libwthttp) ?\n\n   EXAMPLES_CONNECTOR\n          Which connector library to use for the examples? (wthttp or\n          wtfcgi)\n\n   MULTI_THREADED\n          Build a multi-threaded wthttpd? While on by default, and\n          recommended, you may want to disable this for example if you\n          suspect threading problems. Note that recursive event loops\n          (most notably when using Dialog::exec()) are not possible\n          without thread support.\n\n   The following variables apply to the FastCGI connector:\n\n   RUNDIR\n          Default location for Wt runtime session management (can be\n          overridden in the Configuration file)\n\n   WEBUSER\n          Webserver username: used to assign permissions to RUNDIR\n\n   WEBGROUP\n          Webserver groupname: used to assign permissions to RUNDIR\n\n   The following variables apply to the wthttpd connector:\n\n   WTHTTP_CONFIGURATION\n          Location of the wthttpd configuration file (default is\n          /etc/wt/wthttpd)\n\n   To change any entry, use [Enter]. To save and quit, do [c] followed by\n   [g].\n\n    3. Build the library\n\n    $ make\n\n   If you want to speed up compilation, you may want to use multiple\n   threads (e.g. 4):\n    $ make -j4\n\n    4. Install the library (as user with sufficient permissions):\n\n    $ make install\n\n    5. Get your LD_LIBRARY_PATH ok, if needed (mostly for FastCGI).\n\n   If you did not install Wt in a directory (CMAKE_INSTALL_PREFIX)\n   included in the default linker dynamic library search path, then the\n   web server will not be able to start Wt programs (such as the\n   examples).\n\n   Fix it by (as user with sufficient permissions):\n    $ ln -s /your/path/to/lib/libwt.so /usr/lib\n    $ ln -s /your/path/to/lib/libwtfcgi.so /usr/lib\n     __________________________________________________________________\n\nTrying the examples (or your own Wt application)\n\n   Deploying an application is different when using FastCGI or the\n   built-in web server (wthttpd).\n\n   The examples that come with the library use the connector specified by\n   the build option EXAMPLES_CONNECTOR (see supra).\n\n   Some examples need TinyMCE:\n     * Download TinyMCE from [17]http://tinymce.moxiecode.com/ and install\n       its tiny_mce folder into the resources/ folder.\n\n   You will notice 404 File not Found errors for resources/tiny_mce/ if\n   you are missing this library.\n\n  A. Using wthttpd\n\n    1. Build the examples\n\n    $ make -C examples\n\n    2. Running an example\n\n   Most examples use additional files, such as message resource bundles,\n   which are not indicated with absolute path names. Therefore the working\n   directory should be the source directory for the example. A similar\n   argument goes for icons and the setting of the --docroot variable.\n   Since Wt 3.1.4, you can use the \"approot\" property to move the\n   additional files that should not be available to browsers outside of\n   the docroot.\n    $ cd ../examples/foobar # source directory for example foobar\n    $ ln -s ../../resources . # include standard Wt resource files\n    $ ../../build/examples/foobar/foobar.wt --docroot . --http-listen 0.0.0.0:80\n80\n\n   This will start a httpd server listening on all local interfaces, on\n   port 8080, and you may browse the example at [18]http://127.0.0.1:8080/\n\n   You will notice 404 File not Found errors for resources/ files if you\n   are missing the resources files.\n\n   These are all the command-line options that are available:\nGeneral options:\n  -h [ --help ]                         produce help message\n  -t [ --threads ] arg (=-1)            number of threads (-1 indicates that\n                                        num_threads from wt_config.xml is to be\n                                        used, which defaults to 10)\n  --servername arg                      servername (IP address or DNS name)\n  --docroot arg                         document root for static files,\n                                        optionally followed by a\n                                        comma-separated list of paths with\n                                        static files (even if they are within a\n                                        deployment path), after a ';'\n\n                                        e.g. --docroot=\".;/favicon.ico,/resourc\n                                        es,/style\"\n\n  --resources-dir arg                   path to the Wt resources folder. By\n                                        default, Wt will look for its resources\n                                        in the resources subfolder of the\n                                        docroot (see --docroot). If a file is\n                                        not found in that resources folder,\n                                        this folder will be checked instead as\n                                        a fallback. If this option is omitted,\n                                        then Wt will not use a fallback\n                                        resources folder.\n  --approot arg                         application root for private support\n                                        files; if unspecified, the value of the\n                                        environment variable $WT_APP_ROOT is\n                                        used, or else the current working\n                                        directory\n  --errroot arg                         root for error pages\n  --accesslog arg                       access log file (defaults to stdout),\n                                        to disable access logging completely,\n                                        use --accesslog=-\n  --no-compression                      do not use compression\n  --deploy-path arg (=/)                location for deployment\n  --session-id-prefix arg               prefix for session IDs (overrides\n                                        wt_config.xml setting)\n  -p [ --pid-file ] arg                 path to pid file (optional)\n  -c [ --config ] arg                   location of wt_config.xml; if\n                                        unspecified, the value of the\n                                        environment variable $WT_CONFIG_XML is\n                                        used, or else the built-in default\n                                        (/etc/wt/wt_config.xml) is tried, or els\ne\n                                        built-in defaults are used\n  --max-memory-request-size arg (=131072)\n                                        threshold for request size (bytes), for\n                                        spooling the entire request to disk, to\n                                        avoid DoS\n  --gdb                                 do not shutdown when receiving Ctrl-C\n                                        (and let gdb break instead)\n  --static-cache-control                Cache-Control header value for static\n                                        files (defaults to max-age=3600)\n\nHTTP/WebSocket server options:\n  --http-listen arg                     address/port pair to listen on. If no\n                                        port is specified, 80 is used as the\n                                        default, e.g. 127.0.0.1:8080 will cause\n                                        the server to listen on port 8080 of\n                                        127.0.0.1 (localhost). For IPv6, use\n                                        square brackets, e.g. [::1]:8080 will\n                                        cause the server to listen on port 8080\n                                        of [::1] (localhost). This argument can\n                                        be repeated, e.g. --http-listen\n                                        0.0.0.0:8080 --http-listen [0::0]:8080\n                                        will cause the server to listen on port\n                                        8080 of all interfaces using IPv4 and\n                                        IPv6. You must specify this option or\n                                        --https-listen at least once. The older\n                                        style --http-address and\n                                        --https-address can also be used for\n                                        backwards compatibility. If a hostname\n                                        is provided instead of an IP address,\n                                        the server will listen on all of the\n                                        addresses (IPv4 and IPv6) that this\n                                        hostname resolves to.\n  --http-address arg                    IPv4 (e.g. 0.0.0.0) or IPv6 Address\n                                        (e.g. 0::0). You must specify either\n                                        --http-listen, --https-listen,\n                                        --http-address, or --https-address.\n  --http-port arg (=80)                 HTTP port (e.g. 80)\n\nHTTPS/Secure WebSocket server options:\n  --https-listen arg                    address/port pair to listen on. If no\n                                        port is specified, 80 is used as the\n                                        default, e.g. 127.0.0.1:8080 will cause\n                                        the server to listen on port 8080 of\n                                        127.0.0.1 (localhost). For IPv6, use\n                                        square brackets, e.g. [::1]:8080 will\n                                        cause the server to listen on port 8080\n                                        of [::1] (localhost). This argument can\n                                        be repeated, e.g. --https-listen\n                                        0.0.0.0:8080 --https-listen [0::0]:8080\n                                        will cause the server to listen on port\n                                        8080 of all interfaces using IPv4 and\n                                        IPv6. If a hostname is provided instead\n                                        of an IP address, the server will\n                                        listen on all of the addresses (IPv4\n                                        and IPv6) that this hostname resolves\n                                        to.\n  --https-address arg                   IPv4 (e.g. 0.0.0.0) or IPv6 Address\n                                        (e.g. 0::0). You must specify either\n                                        --http-listen, --https-listen,\n                                        --http-address, or --https-address.\n  --https-port arg (=443)               HTTPS port (e.g. 443)\n  --ssl-certificate arg                 SSL server certificate chain file\n                                        e.g. \"/etc/ssl/certs/vsign1.pem\"\n  --ssl-private-key arg                 SSL server private key file\n                                        e.g. \"/etc/ssl/private/company.pem\"\n  --ssl-tmp-dh arg                      File for temporary Diffie-Hellman\n                                        parameters\n                                        e.g. \"/etc/ssl/dh512.pem\"\n  --ssl-enable-v3                       Switch on SSLv3 support (not\n                                        recommended; disabled by default)\n  --ssl-client-verification arg (=none) The verification mode for client\n                                        certificates.\n                                        This is either 'none', 'optional' or\n                                        'required'. When 'none', the server\n                                        will not request a client certificate.\n                                        When 'optional', the server will\n                                        request a certificate, but the client\n                                        does not have to supply one. With\n                                        'required', the connection will be\n                                        terminated if the client does not\n                                        provide a valid certificate.\n  --ssl-verify-depth arg (=1)           Specifies the maximum length of the\n                                        server certificate chain.\n\n  --ssl-ca-certificates arg             Path to a file containing the\n                                        concatenated trusted CA certificates,\n                                        which can be used to authenticate the\n                                        client. The file should contains a a\n                                        number of PEM-encoded certificates.\n\n  --ssl-cipherlist arg                  List of acceptable ciphers for SSL.\n                                        This list is passed as-is to the SSL\n                                        layer, so see openssl for the proper\n                                        syntax. When empty, the default\n                                        acceptable cipher list will be used.\n                                        Example cipher list string:\n                                        \"TLSv1+HIGH:!SSLv2\"\n\n  --ssl-prefer-server-ciphers arg (=0)  By default, the client's preference is\n                                        used for determining the cipher that is\n                                        choosen during a SSL or TLS handshake.\n                                        By enabling this option, the server's\n                                        preference will be used.\n\n  B. Using FastCGI and apache\n\n    1. Build the examples\n\n    $ make -C examples\n\n    2. Deploy the example foobar\n\n   The easiest way to deploy the examples is by copying the binary (from\n   your build directory) and the source directory (which contains the\n   images) and the resources/ into the same destination directory\n   somewhere in your Apache server (we no longer generate a ./deploy.sh\n   script that took care of some of this).\n    $ export DESTINATION=/var/www/localhost/htdocs/wt-examples\n    $ mkdir -p $DESTINATION/foobar\n    $ cp -r examples/foobar/* resources/* build/examples/foobar/*.wt $DESTINATIO\nN/foobar/\n\n   This does however make public also files (such as message resources\n   bundles, data files, etc...) that do not need to be served by your web\n   server. The clean way to deploy your own applications is to use the\n   \"approot\" property to deploy those files to a directory outside the\n   webserver's doc root.\n\n    3. Configure Apache\n\n   Treat the example as a mod_fastcgi application, by adding a line to\n   20_mod_fastcgi.conf in your Apache configuration modules.d/ directory,\n   e.g.:\n    FastCgiServer /var/www/localhost/htdocs/wt-examples/composer/composer.wt\n\n    4. Restart apache\n\nReferences\n\n   1. file:///home/roel/project/wt/git/wt4/INSTALL.html#requirements\n   2. file:///home/roel/project/wt/git/wt4/INSTALL.html#build\n   3. file:///home/roel/project/wt/git/wt4/INSTALL.html#examples\n   4. http://www.cmake.org/\n   5. http://www.boost.org/\n   6. http://www.openssl.org/\n   7. http://libharu.org/\n   8. http://www.graphicsmagick.org/\n   9. http://www.pango.org/\n  10. http://www.postgresql.org/\n  11. http://www.firebirdsql.org/\n  12. https://www.mysql.com/products/connector/\n  13. https://mariadb.com/kb/en/the-mariadb-library/about-mariadb-connector-c\n  14. http://www.unixodbc.org/\n  15. http://www.nongnu.org/libunwind/\n  16. http://www.fastcgi.com/\n  17. http://tinymce.moxiecode.com/\n  18. http://127.0.0.1:8080/\n"
        },
        {
          "name": "INSTALL.html",
          "type": "blob",
          "size": 19.4345703125,
          "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n<head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n</head>\n<title>Wt Installation</title>\n<body>\n<h1>Wt Installation instructions on Unix-like systems</h1>\n\nThis page lists the instructions for building and installing Wt on\nUnix-like systems (Linux, macOS, BSD,&hellip;). It is\norganized in 3 sections:\n\n<ul>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#build\">Building and installing the library</a></li>\n<li><a href=\"#examples\">Trying the examples (or your own Wt application)</a></li>\n</ul>\n\n<a name=\"overview\"></a><h2>Overview</h2>\n\n<p>\nThe library provides two ways for deploying applications: either with\nthe built-in web server (recommended), or using FastCGI (legacy, and soon to be deprecated).</p>\n\n<p>\nThe built-in web server is a simple HTTP and WebSockets server. It supports\nall of Wt's features, and is simple to setup. This is the recommended way of\ndeploying a Wt application.</p>\n\n<p>\nFastCGI is also supported if necessary, but it does not support WebSockets.</p>\n\n<p>\nEach of these two choices correspond to a library, a\nso-called <i>connector</i> library. Below it is outlined how to\nconfigure the build process of Wt to build either or both libraries\n(libwthttp and libfcgi).</p>\n\n<p>\nThus, to build a Wt library with built-in web server you need to\nlink against libwt and libwthttp. To build a Wt library which acts as\na FastCGI process, you need to link against libwt and libfcgi.\n</p>\n\n<p>\nThe naming convention of the library puts the <i>d</i> suffix at the end if the library is built in\n<i>Debug</i> mode, which is regulated through <strong>CMAKE_BUILD_TYPE</strong>. So for example the\nnormal wt library <i>libwt</i> will be called <i>libwtd</i>.\n</p>\n\n<h4>1a. Using wthttpd</h4>\n\nWhen using the built-in web server, two more libraries may be installed\nto enable optional features (you can also build without them), but\notherwise no extra dependencies are required. See the <a href=\"#optdep\">Optional Dependencies</a>\nfor more information.\n\n<ul>\n  <li>Optionally, zlib (libz), for compression over HTTP and WebSockets.</li>\n  <li>Optionally, OpenSSL (libopenssl), for HTTPS.</li>\n</ul>\n\n<h4>1b. Using FastCGI</h4>\n\n<strong>Using FastCGI is discouraged, and a strong preference is given to the built-in HTTP library.\nThe FCGI library is likely to be deprecated soon.</strong>\n\n<p>When using FastCGI, Wt requires a webserver (like Apache or\nNGINX) which supports the FastCGI protocol.</p>\n\n<p>To build wtfcgi, you need:</p>\n\n<ul>\n<li><a href=\"http://www.fastcgi.com/\">FCGI library</a>, including C++\nbindings (libfcgi++)</li>\n<li>A suitable plugin for your web server.</li>\n</ul>\n\n<h3>2 Additional and optional requirements for some of the examples</h3>\n<ul>\n<li>Qt, for the libwtwithqt interoperability layer</li>\n</ul>\n\n<hr />\n\n<a name=\"build\"></a><h2>Building and installing the Wt library</h2>\n\n<h4>1. Create a build directory</h4>\n\n<p>The recommended way to build the library is in a separate build\n  directory, for example within the top level of the Wt package:</p>\n\n<pre>\n    $ cd wt-x.x.x\n    $ mkdir build\n    $ cd build\n</pre>\n\n<h4>2. Configure the library</h4>\n\n<pre>\n    $ cmake ../\n</pre>\n\n<p>The latter command will try to locate the necessary libraries. If everything\nis OK, then this should end with something like:\n\n<pre>\n  -- Generating done\n  -- Build files have been written to: /home/{username}/project/wt/build\n</pre></p>\n\n<p>If CMake fails, because it cannot resolve all dependencies, then you\nmay help CMake by setting some variables to help CMake locate the libraries.\nThis may be done on the command-line using -D<i>var</i>=<i>value</i> or\nusing the interactive program:</p>\n\n<pre>\n    $ ccmake ../\n</pre>\nor\n<pre>\n    $ cmake-gui ../\n</pre>\n\n<p>The GUI lists all variables that are configurable in Wt's build process.</p>\n\n<p>The section <a href=\"#coredep\">Core Dependencies</a> lists the minimal requirements that are necessary\nto make Wt build. If you require more functionality, and will also be using optional features, you\nwill need to take the <a href=\"#optdep\">Optional Dependencies</a> into account as well.</p>\n\n<p>\nThe variables specify several build and configuration aspects of Wt, of which\nthe most relevant ones are (there are many more visible in the GUI):</p>\n\n<dl>\n<dt><strong>CMAKE_INSTALL_PREFIX</strong></dt>\n<dd>Installation prefix for the library and include files)</dd>\n<dt><strong>CONFIGDIR</strong></dt>\n<dd>Path for configuration files (default is /etc/wt/)</dd>\n<dt><strong>CONNECTOR_FCGI</strong></dt>\n<dd>Build the FastCGI connector (libwtfcgi) ?</dd>\n<dt><strong>CONNECTOR_HTTP</strong></dt>\n<dd>Build the stand-alone httpd connector (libwthttp) ?</dd>\n<dt><strong>EXAMPLES_CONNECTOR</strong></dt>\n<dd>Which connector library to use for the examples? (wthttp or wtfcgi)</dd>\n<dt><strong>MULTI_THREADED</strong></dt>\n<dd>Build a multi-threaded wthttpd? While on by default, and\nrecommended, you may want to disable this for example if you suspect\nthreading problems. Note that recursive event loops (most notably when\nusing Dialog::exec()) are not possible without thread support.</dd>\n</dl>\n\nThe following variables apply to the FastCGI connector:\n\n<dl>\n<dt><strong>RUNDIR</strong></dt>\n<dd>Default location for Wt runtime session management (can be overridden in the Configuration file)</dd>\n<dt><strong>WEBUSER</strong></dt>\n<dd>Webserver username: used to assign permissions to RUNDIR</dd>\n<dt><strong>WEBGROUP</strong></dt>\n<dd>Webserver groupname: used to assign permissions to RUNDIR</dd>\n</dl>\n\nThe following variables apply to the wthttpd connector:\n\n<dl>\n<dt><strong>WTHTTP_CONFIGURATION</strong></dt>\n<dd>Location of the wthttpd configuration file (default is /etc/wt/wthttpd)</dd>\n</dl>\n\nTo change any entry, use [Enter]. To save and quit, do [c] followed by [g].\n</p>\n\n<h4>3. Build the library</h4>\n\n<pre>\n    $ make\n</pre>\n\nIf you want to speed up compilation, you may want to use multiple threads (e.g. 4):\n\n<pre>\n    $ make -j4\n</pre>\n\n<h4>4. Install the library (as user with sufficient permissions):</h4>\n\n<pre>\n    $ make install\n</pre>\n\n<h4>5. Get your LD_LIBRARY_PATH ok, if needed (mostly for FastCGI).</h4>\n\n<p>\nIf you did not install Wt in a directory (CMAKE_INSTALL_PREFIX) included\nin the default linker dynamic library search path, then the web server will\nnot be able to start Wt programs (such as the examples).</p>\n\n<p>\nFix it by (as user with sufficient permissions):\n\n<pre>\n    $ ln -s /your/path/to/lib/libwt.so /usr/lib\n    $ ln -s /your/path/to/lib/libwtfcgi.so /usr/lib\n</pre>\n\n</p>\n\n<hr />\n\n<a name=\"examples\"></a><h2>Trying the examples (or your own Wt application)</h2>\n\n<p>Deploying an application is different when using FastCGI or the\nbuilt-in web server (wthttpd).</p>\n\n<p>The examples that come with the library use the connector specified\nby the build option EXAMPLES_CONNECTOR (see supra).</p>\n\n<p>Some examples need TinyMCE:\n<ul>\n  <li>Download TinyMCE\n  from <a href=\"http://tinymce.moxiecode.com/\">http://tinymce.moxiecode.com/</a>\n  and install its <tt>tiny_mce</tt> folder into the resources/ folder.\n  </li>\n</ul>\n\nYou will notice 404 File not Found errors for\n<tt>resources/tiny_mce/</tt> if you are missing this library.\n</p>\n\n\n<a name=\"examples-wthttpd\"></a><h3>A. Using wthttpd</h3>\n\n<h4>1. Build the examples</h4>\n\n<pre>\n    $ make -C examples\n</pre>\n\n<h4>2. Running an example</h4>\n\n<p>\nMost examples use additional files, such as message resource bundles,\nwhich are not indicated with absolute path names. Therefore the\nworking directory should be the source directory for the example. A\nsimilar argument goes for icons and the setting of the --docroot\nvariable. Since Wt 3.1.4, you can use the \"approot\" property to move\nthe additional files that should not be available to browsers outside\nof the docroot.\n</p>\n\n<pre>\n    $ cd ../examples/<i>foobar</i> # source directory for example <i>foobar</i>\n    $ ln -s ../../resources . # include standard Wt resource files\n    $ ../../build/examples/<i>foobar</i>/<i>foobar</i>.wt --docroot . --http-listen 0.0.0.0:8080\n</pre>\n\n<p>\nThis will start a httpd server listening on all local interfaces, on\nport 8080, and you may browse the example at <a\nhref=\"http://127.0.0.1:8080/\">http://127.0.0.1:8080/</a></p>\n\n<p>\nYou will notice 404 File not Found errors for resources/ files if you are\nmissing the resources files.\n</p>\n\n<p>\nThese are all the command-line options that are available:\n<pre>\nGeneral options:\n  -h [ --help ]                         produce help message\n  -t [ --threads ] arg (=-1)            number of threads (-1 indicates that\n                                        num_threads from wt_config.xml is to be\n                                        used, which defaults to 10)\n  --servername arg                      servername (IP address or DNS name)\n  --docroot arg                         document root for static files,\n                                        optionally followed by a\n                                        comma-separated list of paths with\n                                        static files (even if they are within a\n                                        deployment path), after a ';'\n\n                                        e.g. --docroot=\".;/favicon.ico,/resourc\n                                        es,/style\"\n\n  --resources-dir arg                   path to the Wt resources folder. By\n                                        default, Wt will look for its resources\n                                        in the resources subfolder of the\n                                        docroot (see --docroot). If a file is\n                                        not found in that resources folder,\n                                        this folder will be checked instead as\n                                        a fallback. If this option is omitted,\n                                        then Wt will not use a fallback\n                                        resources folder.\n  --approot arg                         application root for private support\n                                        files; if unspecified, the value of the\n                                        environment variable $WT_APP_ROOT is\n                                        used, or else the current working\n                                        directory\n  --errroot arg                         root for error pages\n  --accesslog arg                       access log file (defaults to stdout),\n                                        to disable access logging completely,\n                                        use --accesslog=-\n  --no-compression                      do not use compression\n  --deploy-path arg (=/)                location for deployment\n  --session-id-prefix arg               prefix for session IDs (overrides\n                                        wt_config.xml setting)\n  -p [ --pid-file ] arg                 path to pid file (optional)\n  -c [ --config ] arg                   location of wt_config.xml; if\n                                        unspecified, the value of the\n                                        environment variable $WT_CONFIG_XML is\n                                        used, or else the built-in default\n                                        (/etc/wt/wt_config.xml) is tried, or else\n                                        built-in defaults are used\n  --max-memory-request-size arg (=131072)\n                                        threshold for request size (bytes), for\n                                        spooling the entire request to disk, to\n                                        avoid DoS\n  --gdb                                 do not shutdown when receiving Ctrl-C\n                                        (and let gdb break instead)\n  --static-cache-control                Cache-Control header value for static\n                                        files (defaults to max-age=3600)\n\nHTTP/WebSocket server options:\n  --http-listen arg                     address/port pair to listen on. If no\n                                        port is specified, 80 is used as the\n                                        default, e.g. 127.0.0.1:8080 will cause\n                                        the server to listen on port 8080 of\n                                        127.0.0.1 (localhost). For IPv6, use\n                                        square brackets, e.g. [::1]:8080 will\n                                        cause the server to listen on port 8080\n                                        of [::1] (localhost). This argument can\n                                        be repeated, e.g. --http-listen\n                                        0.0.0.0:8080 --http-listen [0::0]:8080\n                                        will cause the server to listen on port\n                                        8080 of all interfaces using IPv4 and\n                                        IPv6. You must specify this option or\n                                        --https-listen at least once. The older\n                                        style --http-address and\n                                        --https-address can also be used for\n                                        backwards compatibility. If a hostname\n                                        is provided instead of an IP address,\n                                        the server will listen on all of the\n                                        addresses (IPv4 and IPv6) that this\n                                        hostname resolves to.\n  --http-address arg                    IPv4 (e.g. 0.0.0.0) or IPv6 Address\n                                        (e.g. 0::0). You must specify either\n                                        --http-listen, --https-listen,\n                                        --http-address, or --https-address.\n  --http-port arg (=80)                 HTTP port (e.g. 80)\n\nHTTPS/Secure WebSocket server options:\n  --https-listen arg                    address/port pair to listen on. If no\n                                        port is specified, 80 is used as the\n                                        default, e.g. 127.0.0.1:8080 will cause\n                                        the server to listen on port 8080 of\n                                        127.0.0.1 (localhost). For IPv6, use\n                                        square brackets, e.g. [::1]:8080 will\n                                        cause the server to listen on port 8080\n                                        of [::1] (localhost). This argument can\n                                        be repeated, e.g. --https-listen\n                                        0.0.0.0:8080 --https-listen [0::0]:8080\n                                        will cause the server to listen on port\n                                        8080 of all interfaces using IPv4 and\n                                        IPv6. If a hostname is provided instead\n                                        of an IP address, the server will\n                                        listen on all of the addresses (IPv4\n                                        and IPv6) that this hostname resolves\n                                        to.\n  --https-address arg                   IPv4 (e.g. 0.0.0.0) or IPv6 Address\n                                        (e.g. 0::0). You must specify either\n                                        --http-listen, --https-listen,\n                                        --http-address, or --https-address.\n  --https-port arg (=443)               HTTPS port (e.g. 443)\n  --ssl-certificate arg                 SSL server certificate chain file\n                                        e.g. \"/etc/ssl/certs/vsign1.pem\"\n  --ssl-private-key arg                 SSL server private key file\n                                        e.g. \"/etc/ssl/private/company.pem\"\n  --ssl-tmp-dh arg                      File for temporary Diffie-Hellman\n                                        parameters\n                                        e.g. \"/etc/ssl/dh512.pem\"\n  --ssl-enable-v3                       Switch on SSLv3 support (not\n                                        recommended; disabled by default)\n  --ssl-client-verification arg (=none) The verification mode for client\n                                        certificates.\n                                        This is either 'none', 'optional' or\n                                        'required'. When 'none', the server\n                                        will not request a client certificate.\n                                        When 'optional', the server will\n                                        request a certificate, but the client\n                                        does not have to supply one. With\n                                        'required', the connection will be\n                                        terminated if the client does not\n                                        provide a valid certificate.\n  --ssl-verify-depth arg (=1)           Specifies the maximum length of the\n                                        server certificate chain.\n\n  --ssl-ca-certificates arg             Path to a file containing the\n                                        concatenated trusted CA certificates,\n                                        which can be used to authenticate the\n                                        client. The file should contains a a\n                                        number of PEM-encoded certificates.\n\n  --ssl-cipherlist arg                  List of acceptable ciphers for SSL.\n                                        This list is passed as-is to the SSL\n                                        layer, so see openssl for the proper\n                                        syntax. When empty, the default\n                                        acceptable cipher list will be used.\n                                        Example cipher list string:\n                                        \"TLSv1+HIGH:!SSLv2\"\n\n  --ssl-prefer-server-ciphers arg (=0)  By default, the client's preference is\n                                        used for determining the cipher that is\n                                        choosen during a SSL or TLS handshake.\n                                        By enabling this option, the server's\n                                        preference will be used.\n</pre>\n</p>\n\n<a name=\"examples-fastcgi\"></a></a><h3>B. Using FastCGI and apache</h3>\n\n<h4>1. Build the examples</h4>\n\n<pre>\n    $ make -C examples\n</pre>\n\n<h4>2. Deploy the example <i>foobar</i></h4>\n\n<p>\nThe easiest way to deploy the examples is by copying the binary (from\nyour build directory) and the source directory (which contains the\nimages) and the resources/ into the same destination directory\nsomewhere in your Apache server (we no longer generate a ./deploy.sh\nscript that took care of some of this).\n</p>\n\n<pre>\n    $ export DESTINATION=/var/www/localhost/htdocs/wt-examples\n    $ mkdir -p $DESTINATION/<i>foobar</i>\n    $ cp -r examples/<i>foobar</i>/* resources/* build/examples/<i>foobar</i>/*.wt $DESTINATION/<i>foobar</i>/\n</pre>\n\n<p>\nThis does however make public also files (such as message resources\nbundles, data files, etc...) that do not need to be served by your web\nserver. The clean way to deploy your own applications is to use the\n\"approot\" property to deploy those files to a directory outside the\nwebserver's doc root.\n</p>\n\n<h4>3. Configure Apache</h4>\n\n<p>\nTreat the example as a mod_fastcgi application, by adding a line to\n20_mod_fastcgi.conf in your Apache configuration modules.d/ directory, e.g.:\n</p>\n\n<pre>\n    FastCgiServer /var/www/localhost/htdocs/wt-examples/composer/composer.wt\n</pre>\n\n<h4>4. Restart apache</h4>\n\n</body>\n</html>\n"
        },
        {
          "name": "INSTALL.win32.html",
          "type": "blob",
          "size": 9.8896484375,
          "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n<head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n</head>\n<title>Wt Installation</title>\n<body>\n<h1>Wt Installation instructions for Windows</h1>\n\nThis page lists the instructions for building and installing Wt on Windows.\nIt is organized in 3 sections:\n<ul>\n  <li><a href=\"#overview\">Overview</a></li>\n  <li><a href=\"#build\">Building and installing the library</a></li>\n  <li><a href=\"#examples\">Trying the examples (or your own Wt application)</a></li>\n</ul>\n\n\n<a name=\"overview\"></a><h2>Overview</h2>\n\n<p>\nWt for Windows uses the built-in web server connector or the ISAPI connector.\nThe fastcgi connector is not supported. The built-in web server is more\nconvenient during development and is easier to setup than the ISAPI connector.\nIt is also designed for production environments, where it is often used in\ncombination with a reverse proxy server.\nTo use the built-in server, you have to link your projects against libwt\nand libwthttp. To use the ISAPI connector, you have to link against libwtisapi\ninstead of libwthttp.</p>\n\n<p>The prebuilt binaries for Visual Studio include all necessary and optional dependencies,\nand enable all features of Wt and can be downloaded from the\n<a href=\"https://github.com/emweb/wt/releases\">releases page on GitHub</a>.</p>\n\n<p>\nWe strongly recommend to use libraries which are all built using the same\ncompiler and the same runtime configuration (/MT, /MD, /MTd\nor /MDd) to avoid incompatibilities with the C runtime libraries. Mixing\nCRTs is NOT recommended, the <a href=\"http://www.zlib.net/DLL_FAQ.txt\">zlib\nDLL FAQ</a> clearly explains why and what you should do about it (in\nshort: use prebuilt libraries for the exact same compiler as you use, and\nif those are not available, rebuild the dependency libraries from the sources).\n</p>\n\n<hr />\n\n<a name=\"build\"></a><h2>Step by step instructions to build and install the Wt library</h2>\n\n<p>\nUp to date instructions are located on the Wt wiki page:\n<a href=\"http://redmine.emweb.be/projects/wt/wiki/Installing_Wt_on_MS_Windows\">Installing Wt on MS Windows</a>\n</p>\n\n<p>\nInstructions on how to use the ISAPI connector for deployment under IIS are\nalso available on the wiki page:\n<a href=\"http://redmine.emweb.be/projects/wt/wiki/ISAPI_on_Microsoft_IIS\">ISAPI on Microsoft IIS</a>\n</p>\n\n<a name=\"examples\"></a><h2>Trying the examples (or your own Wt application) using wthttpd</h2>\n\n<h4>1. Run the example in the MSVC IDE </h4>\n\nRight-click on the example project you want to run, and select 'Properties'.\nIn Configuration Properties->Debugging, set the Command Arguments to\n<pre>\n--http-address=0.0.0.0 --http-port=8080 --deploy-path=/hello --docroot=.\n</pre>\n\n<p>\nThis will start a httpd server listening on all local interfaces, on\nport 8080, and you may browse the example at <a\nhref=\"http://127.0.0.1:8080/hello\">http://127.0.0.1:8080/hello</a></p>\n\n<p>\nExamples that need extra files to run should be executed from their source\ndirectory in order to find their dependency files (icons, css files, etc.\nWatch for 404 errors in Wt's output). To do so, set the 'Working directory'\nfor the example to wt-x.y.z/examples/ExampleName. Some examples (e.g. the\nwt home page) need the 'resources' directory to work correctly. Copy\nthe wt-2.x.x/resources to the example's source directory to solve this\nproblem. Other examples (such as the Charts example) may require the\ninstallation of ExtJs. See the Wt reference manual for more information\non how to obtain and install ExtJs. \n</p>\n\n<p>\nThese are all the command-line options that are available (run the examples\nwith --help to see the most recent list of available options):\n\n<pre>\nGeneral options:\n  -h [ --help ]                         produce help message\n  -t [ --threads ] arg (=-1)            number of threads (-1 indicates that\n                                        num_threads from wt_config.xml is to be\n                                        used, which defaults to 10)\n  --servername arg (=diffie)            servername (IP address or DNS name)\n  --docroot arg                         document root for static files,\n                                        optionally followed by a\n                                        comma-separated list of paths with\n                                        static files (even if they are within a\n                                        deployment path), after a ';'\n\n                                        e.g. --docroot=\".;/favicon.ico,/resourc\n                                        es,/style\"\n\n  --approot arg                         application root for private support\n                                        files; if unspecified, the value of the\n                                        environment variable $WT_APP_ROOT is\n                                        used, or else the current working\n                                        directory\n  --errroot arg                         root for error pages\n  --accesslog arg                       access log file (defaults to stdout),\n                                        to disable access logging completely,\n                                        use --accesslog=-\n  --no-compression                      do not use compression\n  --deploy-path arg (=/)                location for deployment\n  --session-id-prefix arg               prefix for session IDs (overrides\n                                        wt_config.xml setting)\n  -p [ --pid-file ] arg                 path to pid file (optional)\n  -c [ --config ] arg                   location of wt_config.xml; if\n                                        unspecified, the value of the\n                                        environment variable $WT_CONFIG_XML is\n                                        used, or else the built-in default\n                                        (c:/witty/wt_config.xml) is tried, or\n                                        else built-in defaults are used\n  --max-memory-request-size arg (=131072)\n                                        threshold for request size (bytes), for\n                                        spooling the entire request to disk, to\n                                        avoid DoS\n  --gdb                                 do not shutdown when receiving Ctrl-C\n                                        (and let gdb break instead)\n  --static-cache-control                Cache-Control header value for static\n                                        files (defaults to max-age=3600)\n\nHTTP/WebSocket server options:\n  --http-address arg                    IPv4 (e.g. 0.0.0.0) or IPv6 Address\n                                        (e.g. 0::0). You must specify either\n                                        this option or --https-address (or\n                                        both)\n  --http-port arg (=80)                 HTTP port (e.g. 80)\n\nHTTPS/Secure WebSocket server options:\n  --https-address arg                   IPv4 (e.g. 0.0.0.0) or IPv6 Address\n                                        (e.g. 0::0). You must specify either\n                                        this option or --http-address (or both)\n  --https-port arg (=443)               HTTPS port (e.g. 443)\n  --ssl-certificate arg                 SSL server certificate chain file\n                                        e.g. \"/etc/ssl/certs/vsign1.pem\"\n  --ssl-private-key arg                 SSL server private key file\n                                        e.g. \"/etc/ssl/private/company.pem\"\n  --ssl-tmp-dh arg                      File for temporary Diffie-Hellman\n                                        parameters\n                                        e.g. \"/etc/ssl/dh512.pem\"\n  --ssl-enable-v3                       Switch on SSLv3 support (not\n                                        recommended; disabled by default)\n  --ssl-client-verification arg (=none) The verification mode for client\n                                        certificates.\n                                        This is either 'none', 'optional' or\n                                        'required'. When 'none', the server\n                                        will not request a client certificate.\n                                        When 'optional', the server will\n                                        request a certificate, but the client\n                                        does not have to supply one. With\n                                        'required', the connection will be\n                                        terminated if the client does not\n                                        provide a valid certificate.\n  --ssl-verify-depth arg (=1)           Specifies the maximum length of the\n                                        server certificate chain.\n\n  --ssl-ca-certificates arg             Path to a file containing the\n                                        concatenated trusted CA certificates,\n                                        which can be used to authenticate the\n                                        client. The file should contains a a\n                                        number of PEM-encoded certificates.\n\n  --ssl-cipherlist arg                  List of acceptable ciphers for SSL.\n                                        This list is passed as-is to the SSL\n                                        layer, so see openssl for the proper\n                                        syntax. When empty, the default\n                                        acceptable cipher list will be used.\n                                        Example cipher list string:\n                                        \"TLSv1+HIGH:!SSLv2\"\n\n  --ssl-prefer-server-ciphers arg (=0)  By default, the client's preference is\n                                        used for determining the cipher that is\n                                        choosen during a SSL or TLS handshake.\n                                        By enabling this option, the server's\n                                        preference will be used.\n\n</pre>\n</p>\n\n</body>\n</html>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 19.02734375,
          "content": "In addition to the license terms of the GNU General Public License,\nVersion 2, as copied below, Emweb bv gives permission to link the\ncode of its release of Wt with the OpenSSL project's \"OpenSSL\" library\n(or with modified versions of it that use the same license as the\n\"OpenSSL\" library), and distribute the linked executables. You must\nobey the GNU General Public License in all respects for all of the\ncode used other than \"OpenSSL\". If you modify this file, you may\nextend this exception to your version of the file, but you are not\nobligated to do so. If you do not wish to do so, delete this exception\nstatement from your version.\n\nWt is licensed under the GNU GPL Version 2. Other versions of the GPL do\nnot apply.\n\nBecause Wt is dual-licensed under an Open Source and commercial license,\nand to legally protect the code base of Wt as a whole by one entity without\nhaving to worry about the copyrights for different pieces, the following\ncontribution policy applies:\n\nYou irrevocably transfer and assign to Emweb bv, located in Herent (Belgium),\nits successors and assigns, in perpetuity, all right (whether now known or\nhereinafter invented), title, and interest, throughout the world, including any\ncopyrights and renewals or extensions thereto, in all Contributions (such as\nbug fixes, patches, pull requests, new functionality, improvements, and other)\nsent to Emweb for the purpose of inclusion in the project.\n\n======================================================================\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.4248046875,
          "content": "What is Wt ?\n------------\n\nWt is a C++ library for developing web applications. It consists of:\n\n- libwt, a widget/rendering library\n- libwthttp, an (async I/O) HTTP/WebSockets server\n- libwtfcgi, a FastCGI connector library (Unix)\n- libwtisapi, an ISAPI connector library (Windows)\n- libwttest, a test connector environment\n\nIt also contains a C++ ORM, which can be used in a web application\n(obviously), but can also be used on its own:\n\n- libwtdbo, a C++ ORM\n- libwtdbopostgres, PostgreSQL backend\n- libwtdbosqlite3, Sqlite3 backend\n- libwtdbomysql, MySQL and MariaDB backend\n- libwtdbomssqlserver, Microsoft SQL Server backend\n- libwtdbofirebird, Firebird backend\n\nFor more information, see [the homepage](http://www.webtoolkit.eu/wt\n\"Wt homepage\").\n\nDependencies\n------------\n\nTo build Wt from source you will need at least\n[CMake](https://cmake.org/), [boost](http://www.boost.org),\nand a C++ compiler like GCC, Clang or MSVC. See the\n[minimum dependency versions](doc/MinimumDependencyVersions.md)\nfor an explanation about which versions Wt supports.\n\nOptionally, you may want to add:\n\n- [OpenSSL](https://www.openssl.org) for SSL and WebSockets support in\n  the built-in httpd, the HTTP(S) client, and additional cryptographic\n  hashes in the authentication module\n- [Haru PDF library](http://libharu.org) which is used for painting to PDF\n- [GraphicsMagick](http://www.graphicsmagick.org/) which is used for painting\n  to PNG, GIF (on Windows, Direct2D can be used instead)\n- [PostgreSQL](https://www.postgresql.org/) for the PostgreSQL Dbo backend\n- [MySQL](https://www.mysql.com) or [MariaDB](https://mariadb.org/) for the MySQL Dbo backend\n- An [ODBC driver](https://docs.microsoft.com/en-us/sql/connect/odbc/download-odbc-driver-for-sql-server)\n  for the Microsoft SQL Server Dbo backend, and [unixODBC](http://www.unixodbc.org/) on Unix-like platforms\n- [Firebird](http://www.firebirdsql.org/) for the Firebird Dbo backend\n- [Pango](http://www.pango.org/) for improved font support in PDF and raster\n  image painting. On Windows, DirectWrite can be used instead.\n- [ZLib](https://zlib.net/) for compression in the built-in httpd.\n\nFor the FastCGI connector, you also need:\n\n- [FastCGI development kit](http://www.fastcgi.com/): you need the\n  C/C++ library (libfcgi++)\n\nBuilding\n--------\n\nGeneric instructions for [Unix-like\nplatforms](https://www.webtoolkit.eu/wt/doc/reference/html/InstallationUnix.html)\nor [Windows\nplatforms](https://www.webtoolkit.eu/wt/doc/reference/html/InstallationWindows.html).\n\nBug Reporting\n-------------\nBugs can be reported here\nhttp://redmine.webtoolkit.eu/projects/wt/issues/new\n\nDemos, examples\n---------------\n\n[The homepage](https://www.webtoolkit.eu/wt), itself a Wt application,\ncontains also [various examples](https://www.webtoolkit.eu/wt/documentation/examples).\n\nLicense\n-------\n\nWt is available under two licenses:\n\n- the GNU General Public License, Version 2, with OpenSSL exception. Only version 2 of the GPL applies. See the [`LICENSE`](LICENSE) file for more information.\n- a [commercial license](https://www.webtoolkit.eu/wt/license/Wt%20License%20Agreement.pdf), which does not require you to distribute the source code of your application. Request a quotation [online](https://www.webtoolkit.eu/wt/download) or contact sales@emweb.be for more information.\n\nSee [`doc/licenses.md`](doc/licenses.md) for an exhaustive list of the licenses\nused by Wt, source code from external sources included in Wt\nand common (optional) external dependencies.\n"
        },
        {
          "name": "ReleaseNotes.html",
          "type": "blob",
          "size": 336.9892578125,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <style>\n    dt { font-weight: bold; }\n    h3 { text-decoration: underline; }\n    dd { margin-top: 10px; margin-bottom: 10px; }\n    dd p { margin-top: 0; }\n    dd div { margin: 10px 0; }\n  </style>\n  <title>Wt Release notes</title>\n</head>\n<body>\n\n<h1>Wt Release notes</h1>\n\nThis file lists important notes on migrating existing applications to\nnewer version of Wt. It lists changes in the library that may break\nthe way you build Wt, the way you configure Wt or the Wt API and\nbehaviour.\n\n<h2>Release 4.11.2 (TBD)</h2>\n\n<p>\n  Wt 4.11.2 is a patch release that addresses the following issue:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12935\" target=\"_blank\">Issue #12935</a>:\n    resize handles in layouts now have a fixed height or width instead of it scaling with the spacing of the layout.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12866\" target=\"_blank\">Issue #12866</a>:\n    Added the <code>&lt;delay-load-at-boot&gt;</code> option which can be changed in the configuration file. This option \n    allows developers to choose whether the loading of the application at boot should be delayed or not. Instead of\n    immediately calling the loading method, a small delay is introduced to allow additional JS to be executed before\n    loading. By default this option is set to true, which keeps the delay. This delay can causes the loading of the\n    application to take a long time in some very specific case. Setting this option to false could however impact any\n    JS code added at boot time.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12860\" target=\"_blank\">Issue #12860</a>:\n    fixed a bug where a \n    <a href=\"classWt_1_1WDialog.html\" target=\"_blank\">WDialog</a> would not be centered if \n    <a href=\"classWt_1_1WDialog.html#a223f8635e38a6e9809b867f247b2185f\" target=\"_blank\">WDialog::exec()</a> was called after the <code>WDialog</code> was loaded.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12951\" target=\"_blank\">Issue #12951</a>:\n    fixed a bug where a layout in a\n    <a href=\"classWt_1_1WPanel.html\" target=\"_blank\">WPanel</a> may not work properly during and after some animations.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12934\" target=\"_blank\">Issue #12934</a>:\n    Fixed a bug in layouts using js implementation where a widget size could be set higher than it's maximum size, leading to additional space after that widget.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/13300\" target=\"_blank\">Issue #13300</a>:\n    fixed a missing fallback in Wt's main JavaScript, when handling browser history navigation (using the back and forward buttons).\n    In case of rewritten browser history, the retrieval would fail, and encounter an `undefined` state. Throwing a JavaScript error. This error should be guarded against,\n    and the fallback should always kick in.\n  </li>\n</ul>\n\n<h2>Release 4.11.1 (November 5, 2024)</h2>\n\n<p>\n  Wt 4.11.1 is a patch release that addresses the following issues:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/12675\" target=\"_blank\">Issue #12675</a>:\n    Add built-in type support for \n    <a href=\"classWt_1_1Dbo_1_1JsonSerializer.html\" target=\"_blank\">Dbo::JsonSerializer</a>. This can be activated by including <code>Wt/Dbo/WtJsonSqlTraits.h</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/13041\" target=\"_blank\">Issue #13041</a>:\n    Increase the default number of iteration of\n    <a href=\"classWt_1_1Auth_1_1BCryptHashFunction.html\">Auth::BCryptHashFunction</a> to 12.\n    A warning message will also be logged when using Auth::BCryptHashFunction with less than the minumum of 10 iterations that ASVS recommends.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/11868\" target=\"_blank\">Issue #11868</a>:\n    Added the \n    <a href=\"classWt_1_1WStackedWidget.html#a8342aac06b58cdedb7b1f43132673cb8\" target=\"_blank\">WStackedWidget::currentWidgetChanged()</a> signal that is emitted when the \n    <a href=\"classWt_1_1WStackedWidget.html\" target=\"_blank\">WStackedWidget</a> changes the element that it shows.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/13106\" target=\"_blank\">Issue #13106</a>:\n    ensure that the correct <code>disabled</code> class is used on a per-theme basis. This wrongly affected all Bootstrap themes.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/13104\" target=\"_blank\">Issue #13104</a>:\n    a Bootstrap 5 <a href=\"classWt_1_1WDialog.html\" target=\"_blank\">WDialog</a>\n    is now correctly raised to the front when <a href=\"classWt_1_1WDialog.html#a113dd08d646491476342e5293c6e36f9\" target=\"_blank\">WDialog::raiseToFront()</a>\n    is called.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12813\" target=\"_blank\">Issue #12813</a>:\n    Added the possibility for each column of\n    <a href=\"classWt_1_1WAbstractItemView.html\" target=\"_blank\">WAbstractItemView</a> to be set resizable or not independently using the\n    <a href=\"classWt_1_1WAbstractItemView.html#a737ab9af521bad7ea7c8acd85023bb66\" target=\"_blank\">WAbstractItemView::setColumnResizeEnabled()</a> function.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/11855\" target=\"_blank\">Issue #11855</a>:\n    the loading indicator should now be shown directly when the indicator-timeout is set to 0 instead of having a few millisecond delay.\n    This can be set by the <code>&lt;application-settings&gt;&lt;indicator-timeout&gt;0&lt;/indicator-timeout&gt;&lt;/application-settings&gt;</code> property in the <code>wt_config.xml</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/7856\" target=\"_blank\">Issue #7856</a>:\n    Fix a bug where <code>change()</code> and <code>input()</code> signals would sometimes not be emitted by a\n    <a href=\"classWt_1_1WSlider.html\" target=\"_blank\">WSlider</a> with native control if progressive bootstrap was enabled.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/11001\" target=\"_blank\">Issue #11001</a>:\n    Delete the extra space that was sometimes added before the first and after last element of a\n    <a href=\"classWt_1_1WBoxLayout.html\">WBoxLayout</a> if the spacing was more than twice as big as the margin.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/11008\" target=\"_blank\">Issue #11008</a>:\n    ensure that a JavaScript variable that retrieves the index of an item in a layout is called correctly.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/13115\" target=\"_blank\">Issue #13115</a>:\n    Fix a bug where a widget removed from a disabled parent widget and added to a different enabled parent widget would still appear disabled.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/12174\" target=\"_blank\">Issue #12174</a>:\n    an automated test for Selenium has been added for the widget gallery. This will ensure that for all used widgets, a base case is tested, and JS errors are less likely to be merged.\n    This is an internal tool, but added to the public repository, as an example. This is likely something many developers would find useful.\n  </li>\n</ul>\n\n<h2>Release 4.11.0 (October 1, 2024)</h2>\n\n<p>\n  Wt 4.11.0 is a major release. That focuses on authentication and WebSockets.\n</p>\n\n<p>\n  First Wt is now able to support MFA in its authentication system. It is easily enabled with a single call to <a href=\"classWt_1_1Auth_1_1AuthService.html#aad075b232ddafe52a4953f3c341e6e75\" target=\"_blank\">AuthService::setMfaProvider()</a>. By default an implementation for TOTP is included. This offers a way to enable an additional layer of security for your applications. Instead of remembering a single password, users can be made to enter a short code that changes often, as an additional authentication step.\n  Developers are also able to implement this feature in any way they see fit via the interface <a href=\"classWt_1_1Auth_1_1Mfa_1_1AbstractMfaProcess.html\" target=\"_blank\">AbstractMfaProcess</a>. A couple examples are provided in the source code, and the <a href=\"../../tutorial/auth.html\" target=\"_blank\">authentication tutorial</a>.\n</p>\n<p>\n  If you like using WebSockets, there is good news! Wt was already able to communicate with its server over WebSockets. This was, however, limited to only its communication for updates regarding its framework. Now you are able to use them in whatever custom way you see fit. Developers can set up endpoints (both session-private or public) that listen to incoming requests. The browser (or another client) can then use those endpoints to connect to said resource. A connection has now been established, and messages can be send back and forth.\n</p>\n\n<h3>New features</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11705\">Issue #11705</a>:\n    MFA (Multi-Factor Authentication) is now supported by means of a default implementation of TOTP (Time-Based One-Time Password). This feature can be enabled by <a href=\"classWt_1_1Auth_1_1AuthService.html#aad075b232ddafe52a4953f3c341e6e75\" target=\"_blank\">AuthService::setMfaProvider()</a>, and the length of the expected code can be managed via <a href=\"classWt_1_1Auth_1_1AuthService.html#a8a1821d0e0824a648aee4c509a2bc7d1\" target=\"_blank\">AuthService::setMFACodeLength()</a>.\n    Once enabled, users are allowed (but not forced) to use MFA. A developer will have to create a way that allows users to set their secret key, or override the functionality that decides whether the MFA step ought to be shown to the user during the login process (<a href=\"classWt_1_1Auth_1_1AuthModel.html#af2083a59fc1458c1fb0020bec0cdf959\" target=\"_blank\">AuthModel::hasMfaStep()</a>). Alternatively, they can also set <a href=\"classWt_1_1Auth_1_1AuthService.html#a5c708962311456a67c07e25c03247b23\" target=\"_blank\">AuthService::setMFARequired()</a> to <code>true</code>, which will force all users to have MFA enabled.\n    If enabled and required, a user will see the <a href=\"classWt_1_1Auth_1_1Mfa_1_1TotpProcess.html\" target=\"_blank\">TotpProcess</a> when they pass the regular login. This will happen after password login. Developers can use this process to enable MFA on a per-user manner, without globally enforcing it.\n    This widget shows them a QR code and a secret key initially for them to store in an authenticator app or browser extension. Once stored, it will no longer show them this code or key, unless invalidated (by means of <a href=\"classWt_1_1Auth_1_1User.html#ac65b7e7277df1d8cd4805e0b4d13b29d\" target=\"_blank\">User::removeIdentity()</a>, which will take the same name as the <code>setMfaProvider()</code>).\n\n    <p>The above approach will be the default flow that Wt uses if MFA is enabled (and/or required). Developers are able to provide a custom implementation as well, using the <a href=\"classWt_1_1Auth_1_1Mfa_1_1AbstractMfaProcess.html\" target=\"_blank\">AbstractMfaProcess</a> class. It is encouraged to look at the examples under <code>examples/authentication/mfa</code> in the source code, to have a concrete idea on how to use the class correctly.</p>\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/12461\" target=\"_blank\">Issue #12461</a>:\n    Developers are now able to connect to a public or private resource using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API\" target=\"_blank\">WebSocket protocol</a>. While WebSockets were already integrated into Wt, they were only used to stream updates between the server and the client as an alternative to long-polling.\n    Now they can actually be used by developers for custom purposes. The <a href=\"classWt_1_1WWebSocketResource.html\" target=\"_blank\">WWebSocketResource</a> is used to create a new endpoint. This can be global (static), when linked to the WServer itself, or session-private (dynamic) when exposed in the WApplication.\n    When a connection from the client side is established, a <a href=\"classWt_1_1WWebSocketConnection.html\" target=\"_blank\">WWebSocketConnection</a> is created. This serves as a way to track a singular connection between the server and a client.\n  </li>\n</ul>\n\n<h3>Other improvements</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10382\" target=\"_blank\">Issue #10382</a>:\n    Added customization support for the upload mechanism of\n    <a href=\"classWt_1_1WFileDropWidget.html\">WFileDropWidget</a>.\n    It is now possible to customize the server-side upload mechanism by returning a custom WResource from\n    <a href=\"classWt_1_1WFileDropWidget.html#a149fa0f12016c615c1763046dc2f7333\">WFileDropWidget::uploadResource()</a>\n    to be uploaded to.\n    At the client side, uploading can be modified by setting <code>wtUseCustomSend</code> and defining <code>wtCustomSend()</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/12320\" target=\"_blank\">Issue #12320</a>:\n    allows for the \"Cache-Control\" header to be specified for the <a href=\"classWt_1_1WServer.html\">WServer</a>. This is to be passed as a command-line option when running the <code>WServer</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11600\" target=\"_blank\">Issue #11600</a>:\n    added unit tests for <a href=\"classWt_1_1Form_1_1WAbstractFormDelegate.html\">WFormDelegate</a> classes.\n  </li>\n</ul>\n\n<h3>Bug fixes</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12367\" target=\"_blank\">Issue #12367</a>:\n    Fix a bug where the checkbox in a \n    <a href=\"classWt_1_1WPopupMenu.html\" target=\"_blank\">WPopupMenu</a> would not be checked if a \n    <a href=\"classWt_1_1WMenuItem.html\" target=\"_blank\">WMenuItem</a> was clicked, and not the \n    <a href=\"classWt_1_1WCheckBox.html\" target=\"_blank\">WCheckBox</a> or its label. Also fixes a bug where the signal of a <code>WMenuItem</code> checkbox would not be emitted after switching between the item being checkable or not.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/12676\" target=\"_blank\">Issue #12676</a>:\n    although technically an improvement, since it was left for so long, it became a bug with Boost 1.85.0.\n    The version retired the <a href=\"https://live.boost.org/doc/libs/1_84_0/boost/filesystem/convenience.hpp\" target=\"_blank\">boost/filesystem/convenience.hpp</a> header. And also removed some <a href=\"https://www.boost.org/doc/libs/1_84_0/libs/filesystem/doc/reference.html#path-deprecated-functions\" target=\"_blank\">deprecated functions</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12737\" target=\"_blank\">Issue #12737</a>:\n    cancel every action on a socket before closing it to avoid reading on a closed socket.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/12323\" target=\"_blank\">Issue #12323</a>:\n    does no longer cause an issue when a <a href=\"classWt_1_1WMenu.html#a92e4b0124610afda2f48a126ebed3b66\" target=\"_blank\">WMenu::addSeparator()</a> was added, together with using <a href=\"classWt_1_1WBootstrap5Theme.html\" target=\"_blank\">WBootstrap5Theme</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12366\" target=\"_blank\">Issue #12366</a>:\n    Fixed a bug where some\n    <a href=\"classWt_1_1WContainerWidget.html\" target=\"_blank\">WContainerWidget</a> would send undefined information when TwoPhaseRenderingThreshold was not set to 0.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/12538\" target=\"_blank\">Issue #12538</a>:\n    correctly implement the <a href=\"https://datatracker.ietf.org/doc/html/rfc5322#section-3.6.3\" target=\"_blank\">RFC5322 specification</a> for mail messages. The \"To:\" and \"Cc:\" fields are now correctly placed on a single line. With multiple addresses this results in a comma-separated list of addresses.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9284\">Issue #9284</a>:\n    a <a href=\"classWt_1_1WTableView.html\" target=\"_blank\">WTableView</a> will now render more correctly in layouts. A combination of various layouts could lead to the table not setting its size correctly, or even not having a consistent size (apparently randomly deciding\n    to fill in all available space, or to shrink to fit its content). This led to the issue where scrollbars were sometimes not visible, or were placed in a wrong location. By default, a table will now size correctly, and place the scrollbars accordingly, namely at the edges of its container.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11954\" target=\"_blank\">Issue #11954</a>:\n    resolve a fairly big memory leak when using Pango. Pango is a library that is by default enabled (controlled using the <code>ENABLE_PANGO</code> build flag). This library is used to generate PDFs with the <a href=\"classWt_1_1Render_1_1WPdfRenderer.html\">WPdfRenderer</a>.\n    The font map that Pango generated to track available fonts was never correctly released. Some other Pango specific objects (resulting from calls to the library), such as the context and fonts were also not always released. These objects are now managed by smart pointers to ensure proper memory management.\n    A single leak does remain, which seemingly comes from Pango or libfontconfig itself (see: <a href=\"https://redmine.webtoolkit.eu/issues/12844\" target=\"_blank\">Issue #12844</a>).\n  </li>\n</ul>\n\n<h2>Release 4.10.4 (March 6, 2024)</h2>\n\n<p>\n  Wt 4.10.4 is a (smaller) patch release that addresses the following issues.\n  This release is somewhat smaller due to bigger features being in the works.\n  Developers can expect some bigger new features in the authentication framework soon!\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/11685\">Issue #11685</a>:\n    render child widgets differently when updating an existing widget. The JavaScript code that is being called by the framework to dynamically add children to an HTML element was changed so that it always appends them instead of setting the whole content. This is to avoid a widget that was added in JavaScript (with no C++ counterpart) from being overwritten if the HTML of the parent would be written to.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/12283\" target=\"_blank\">Issue #12283</a>:\n    this corrects an additional mistake, made on top of <a href=\"https://redmine.webtoolkit.eu/issues/12006\" target=\"_blank\">Issue #12006</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/12145\" target=\"_blank\">Issue #12145</a>:\n    a change to the internal enum class <a href=\"namespaceWt.html#aeb01f25d7c9d4a4498fb3dadc8d168c5\">Property</a> caused an index and its value to be out of sync for a couple values.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/12352\" target=\"_blank\">Issues #12352</a>:\n    this corrects a potential crash in Boost spirit, where a grammar parser could encounter a floating point exception, when trying to evaluate unsafe divisions.\n  </li>\n</ul>\n\n<h2>Release 4.10.3 (December 20, 2023)</h2>\n\n<p>\n  Wt 4.10.3 is a patch release that addresses the following issues:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/12158\">Issue #12158</a>:\n    this corrects a mistake in <a href=\"https://redmine.webtoolkit.eu/issues/7814\">Issue #7814</a>, where the cookie path was not correctly set.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11934\">Issue #11934</a>:\n    this corrects the rendering of a vertical <a href=\"classWt_1_1WSlider.html\">WSlider</a> for all themes. Additionally an improvement was made that introduces <a href=\"classWt_1_1WSlider.html#a0405e2a5aeb71db1b112fa2ca1428cdc\">WSlider::setTickLength</a>, that allows users to set the length (width or height of the line, depending on whether the <code>WSlider</code> is <code>Orientation::Horizontal</code> or <code>Orientation::Vertical</code>) of the ticks.\n    For the native slider, ticks have also been enabled. Although both the positioning (the side on which ticks are placed) and their length cannot be changed. Only their interval can be manipulated through <a href=\"classWt_1_1WSlider.html#a3497303ace2820b3bd457119cec35411\">WSlider::setTickInterval</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/12005\">Issues #12005</a>:\n    a step value can now be set on a <a href=\"classWt_1_1WSlider.html\">WSlider</a>, using <a href=\"classWt_1_1WSlider.html#a6f09f1de583156a361a090abc5ec6427\">WSlider::setStep</a>.\n    This functions for both the native and non-native sliders. By default the step value is set to 1.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12022\">Issue #12022</a>:\n    solves a case where a JavaScript error can occur if an invisible element on the page receives an update. This is related to <a href=\"https://redmine.emweb.be/issues/11669\">Issue #11669</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12148\">Issue #12148</a>:\n    attributes on the main page's &lt;html&gt; and &lt;body&gt; tags can now be specified. The new functions are:\n    <ul>\n      <li><a href=\"classWt_1_1WApplication.html#adc77a51995fb3e8224f8bd3cbb5fab86\">WApplication::setHtmlAttribute</a></li>\n      <li><a href=\"classWt_1_1WApplication.html#a555b48a49d202f1db80abc9dad91b61c\">WApplication::setBodyAttribute</a></li>\n    </ul>\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12143\">Issue #12143</a>:\n    covered an edge case of <a href=\"https://redmine.webtoolkit.eu/issues/12006\">Issue #12006</a>, that caused JavaScript errors.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12036\">Issue #12036</a>:\n    ensures that if a <a href=\"classWt_1_1WCheckBox.html\">WCheckBox</a> and <a href=\"classWt_1_1WRadioButton.html\">WRadioButton</a> have a custom style class, it remains in place after applying the <a href=\"classWt_1_1WBootstrap5Theme.html\">WBootstrap5Theme</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11960\">Issue #11960</a>:\n    remove an <a href=\"https://ibpp.sourceforge.io/\">IBPP</a> deprecation warning.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11772\">Issue #11772</a>:\n    some warnings in the code were fixed, so that the build process will produce less output, resulting in a cleaner build step.\n  </li>\n</ul>\n\n<h2>Release 4.10.2 (November 8, 2023)</h2>\n\n<p>\n  Wt 4.10.2 is a patch release that addresses the following issues:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11932\">Issue #11932</a>:\n    when calling <a href=\"classWt_1_1WPushButton.html#ae919cb76993211553b50a996bdf80fe9\">WPushButton::setMenu</a> after a <a href=\"classWt_1_1WPopupMenu.html\">WPopupMenu</a> had already been added,\n    the second menu wasn't added to the button, and both <code>WPopupMenu</code>s were removed. Now, the new <code>WPopupMenu</code> is correctly added to the button.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11974\">Issue #11974</a>: when dynamically making a field visible in <a href=\"classWt_1_1Form_1_1Dbo_1_1FormView.html\">FormView</a> the form would only show the label and not the corresponding widget. This has now been corrected by having <code>FormView</code> override <a href=\"classWt_1_1WTemplateFormView.html#ab8ba5bda25fbf612903e5e0fa52f75ae\">createFormWidget</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11984\">Issue #11984</a>:\n    corrected <a href=\"classWt_1_1WTableView.html\">WTableView</a>'s drag &amp; drop functionality. When a <a href=\"classWt_1_1WAbstractItemModel.html\">WAbstractItemModel</a>'s items have the flags for drag &amp; drop enabled (found in <a href=\"group__modelview.html#ga1d77c4de293aebfacbdde124de06b8b0\">ItemFlag</a>), the <a href\"classWt_1_1WAbstractItemView.html\">WAbstractItemView</a> has <a href=\"classWt_1_1WAbstractItemView.html#a0ca99b835708d990b90000917045738e\">setDragEnabled(true)</a> and <a href=\"classWt_1_1WAbstractItemView.html#a5469c23ea1e9066e98e832ec9da2af21\">setEnabledDropLocations()</a> set to <a href=\"namespaceWt.html#a46e584f830f2d8c9f5b16fcee7affc9b\">DropLocation::BetweenRows</a>, the view will now correctly drop the items at the location indicated by the cursor, and will no longer cause an issue when moving the cursor out of the table when dragging.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11890\">Issue #11890</a>:\n    if a user were to delete a <a href=\"classWt_1_1WPopupWidget.html\">WPopupWidget</a>, which they can do as detailed in the <a href=\"classWt_1_1WPopupWidget.html#details\">documentation</a>, they would encounter a use-after-free.\n    This has been corrected, so that the content of a <code>WPopupWidget</code> can be removed when being hidden.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11985\">Issue #11985</a>:\n    ensures that if a <a href=\"classWt_1_1WStringListModel.html\">WStringListModel</a> is used in a <a href=\"classWt_1_1WTableView.html\">WTableView</a> that allows drag & drop, the content of the\n    model is correctly updated.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/12012\">Issue #12012</a>:\n    due to an oversight in <a href=\"https://redmine.webtoolkit.eu/issues/10512\">Issue #10512</a>, the keyboard and mouse events for a <a href=\"classWt_1_1WTreeView.html\">WTreeView</a>'s node were missing.\n  </li>\n    <a href=\"https://redmine.emweb.be/issues/11882\">Issue #11882</a>:\n    the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset\">fieldset</a> element, used by <a href=\"classWt_1_1WGroupBox.html\">WGroupBox</a> has been corrected when using Bootstrap 5.\n    A default HTML value was used here, which caused the content to not be rendered correctly.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/12006\">Issue #12006</a>\n    a JavaScript error could occur if no semicolon was added to the JS code when called by <a href=\"classWt_1_1WWidget.html#ab876fc1b7d2e4e5dfc631e380d406ae2\">setJavaScriptMember</a> or <a href=\"classWt_1_1DomElement.html#a76e75e4259fee4d00f15170eb464682e\">callJavaScript</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11897\">Issue #11897</a>:\n    fixed a log that was not configurable. The response to a HTTP request was always logged (like <code>GET /path contentlength</code>).\n    All logs should be configurable, hence it is now logged under <code>info:wthttp</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11959\">Issue #11959</a>:\n    the <code>GetOnePixel</code> deprecation warning from GraphicsMagick was removed.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7196\">Issue #7196</a>:\n    remove a deprecated Pango call. If you compile with Pango enabled, you will no longer see the warning that <code>pango_fc_font_(un)lock_face</code> is deprecated.\n  </li>\n</ul>\n\n<h2>Release 4.10.1 (September 20, 2023)</h2>\n\n<p>\n  Wt 4.10.1 is a patch release that addresses the following issues:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10512\">Issue #10512</a>:\n    ensures that the disabled state of any <a href=\"classWt_1_1WWebWidget.html\">WWebWidget</a> or <a href=\"classWt_1_1WCompositeWidget.html\">WCompositeWidget</a> is correctly propagated to its children.\n    Before, if a user set a widget as disabled that contained children like a <a href=\"classWt_1_1WMenu.html\">WMenu</a>, a new <a href=\"classWt_1_1WMenuItem.html\">WMenuItem</a> could be added, that was enabled.\n    For some of the affected widgets, this meant that the new item could not be selected, since the signal was not exposed, but in some cases, like with a <code>WMenu</code> this was still possible.\n    The disabled state of a widget now propagates to its children so that a disabled state can be set consistently for a parent. This doesn't actually set <a href=\"classWt_1_1WCompositeWidget.html#af0186120a0adf80edbc11bc600913ce0\">setDisabled()</a> of the children.\n    This state can be set separately to manage the child's disabled state without regard to its parent.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11804\">Issue #11804</a>:\n    the <a href=\"classWt_1_1WEmailValidator.html\">WEmailValidator</a> was corrected. There was a missing case in the client side regex that did not allow a hyphen in the domain of an email address.\n    The server side regex was correct, but nevertheless the case has been added to the tests.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7645\">Issue #7645</a>:\n    a <a href=\"classWt_1_1WAnchor.html\">WAnchor</a> loaded through JavaScript, with progressive bootstrap will correctly add an empty \"href\" attribute.\n    This allows the item to be selected on the page by pressing the Tab button, allowing keyboard navigation.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11848\">Issue #11848</a>:\n    this corrects an edge-case in <a href=\"classWt_1_1WSuggestionPopup.html\">WSuggestionPopup</a> where forcibly displaying the pop-up via C++ code would cause it to be unfiltered.\n  </li>\n  <li>\n    This is a combination of <a href=\"https://redmine.webtoolkit.eu/issues/9595\">Issue #9595</a> and <a href=\"https://redmine.webtoolkit.eu/issues/9596\">Issue #9596</a>:\n    where the Postgres backend will again rely on standard library functionality (which was substituted in <a href=\"https://redmine.webtoolkit.eu/issues/9490\">Issue #9490</a> for <a href=\"https://www.boost.org/doc/libs/1_65_0/libs/spirit/doc/html/spirit/introduction.html\">boost::spirit</a>).\n    This implementation, however, caused the loss of some precision with floats and doubles. The conversion from and to string now happens with the standard library <a href=\"https://en.cppreference.com/w/cpp/header/charconv\">charconv</a>, which is available in C++17 (or in C++14 as an extension).\n    In case this library is not available, Wt will fall back to <a href=\"https://en.cppreference.com/w/cpp/string/basic_string/stof\">std::stof</a> and <a href=\"https://en.cppreference.com/w/cpp/string/basic_string/stof\">std::stoi</a>, but will still use <code>boost::spirit</code> in case of subnormals (which would result in an out_of_range exception).\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11769\">Issue #11769</a>:\n    The MySQL backend will now correctly catch the <a href=\"https://dev.mysql.com/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_client_interaction_timeout\">ER_CLIENT_INTERACTION_TIMEOUT</a> error.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11302\">Issue #11302</a>:\n    when closing a HTTP socket, it was possible that the server just started handling a TCP/SSL request. This resulted in a free-after-use for the listener.\n    The listener is now first checked, so we do not get this race condition.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11408\">Issue #11408</a>:\n    fixed several concurrency issues in the wthttp library.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11852\">Issue #11852</a>:\n    the <a href=\"classWt_1_1Mail_1_1Message.html\">Message</a>'s date header was corrected. In case that a localized abbreviation was defined for the month or day, this string was placed in the header.\n    Some providers / exchanges may reject these emails, since they follow RFC-5322 (<a href=\"https://www.rfc-editor.org/rfc/rfc5322#page-14\">see here</a>) and expect English names.\n  </li>\n</ul>\n\n<h2>Release 4.10.0 (May 30, 2023)</h2>\n\n<p>\n  Wt 4.10.0 mainly features back-end improvements and some new features that provide some convenience.\n  There were some issues with persisting dates and time in Sqlite3.\n</p>\n\n<p>\n  In some cases user will have to change some things about their CMake set-up:\n  If users wish to use <code>OpenGL</code>, they may need to provide a <code>GLEW</code> installation with <code>GLEW_ROOT</code>,\n  since <code>GLEW</code> is no longer bundled with Wt.\n</p>\n\n<h3>New features</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7279\">Issue #7279</a>:\n    added <a href=\"classWt_1_1WEmailEdit.html\">WEmailEdit</a> and\n    <a href=\"classWt_1_1WEmailValidator.html\">WEmailValidator</a>, implementing\n    a <code>&lt;input type=\"email\"&gt;</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8760\" target=\"_blank\">Issue #8760</a>:\n    extended <a href=\"classWt_1_1Auth_1_1AuthWidget.html\">Auth::AuthWidget</a> with the option to resend verificiation emails. When email verification is configured to be required and the email somehow got lost, the user would be stuck not being able to log in.\n    When the user tries to log in now, an info message will be shown saying they need to verify their email first along with a new button to resend the verification email. The user must then enter the email address again in a dialog before the email is sent.<br/>\n    The virtual methods <a href=\"classWt_1_1Auth_1_1AuthWidget.html#a42f87508868746e5ccef5695fcbd8763\">AuthWidget::letResendEmailVerification()</a> and <a href=\"classWt_1_1Auth_1_1AuthWidget.html#af45dea06ac5751e96499d62507fea69d\">AuthWidget::createResendEmailVerificationView()</a> can be used to customize the UI.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7814\" target=\"_blank\">Issue #7814</a>:\n    The <code>SameSite</code> attribute of the <code>Set-Cookie</code> HTTP header is now rendered by Wt. To avoid adding yet another parameter to the <code>WApplication::setCookie()</code> method, the class <a href=\"classWt_1_1Http_1_1Cookie.html\">Http::Cookie</a> was introduced that allows configuring all cookie attributes using setters. Objects of this type can be passed to the new <a href=\"classWt_1_1WApplication.html#a5a76e2ae72a7ba5624c3dc12897728f5\">setCookie()</a> and <a href=\"classWt_1_1WApplication.html#add89ecede3de74cb2338337ca730b2dc\">removeCookie()</a> methods in <code>WApplication</code>.\n  </li>\n</ul>\n\n<h3>Other improvements</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11384\" target=\"_blank\">Issue #11384</a>:\n    it was possible for\n    <a href=\"classWt_1_1Mail_1_1Client.html#af7bf43e793d265034c6cb343636b4024\">Mail::Client::connect()</a> to\n    throw an exception if the DNS resolver failed to resolve the SMTP server's hostname. We changed this to\n    log an error and return <code>false</code> instead (as indicated by its documentation).\n    <a href=\"classWt_1_1Mail_1_1Client.html#a958089e2b169f9baed3107b40b958bb9\">Mail::Client::send()</a> could\n    cause a null pointer to be dereferenced, either because a TLS connection was attempted while Wt was\n    built without OpenSSL, or because the user did not call\n    <a href=\"classWt_1_1Mail_1_1Client.html#af7bf43e793d265034c6cb343636b4024\">Mail::Client::connect()</a> first.\n    <code>send()</code> was fixed to log an error and return <code>false</code> instead.\n  </li>\n  <li>\n    <a href=\"classWt_1_1WServer.html#aa17f85dc130b616b3fcf63aa857ff579\">WServer::addResource()</a>\n    can now take a <code>shared_ptr</code> instead of a raw pointer,\n    enforcing that the resource lives at least as long as the server, unless removed with\n    <a href=\"classWt_1_1WServer.html#a9f5a82118198a1d2341fb89572fd8693\">WServer::removeEntryPoint()</a>.\n    The overload that takes a raw pointer is now deprecated.\n    This also fixes <a href=\"https://redmine.webtoolkit.eu/issues/11301\" target=\"_blank\">issue #11301</a>, where there\n    could be a use-after-free in <code>test.http</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11412\" target=\"_blank\">Issue #11412</a>:\n    shift-click to open a new window did not work for links to internal paths. Shift-click is now handled by the browser, like ctrl- and meta-click.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/11604\" target=\"_blank\">Issue #11604</a>:\n    added a virtual destructor to <a href=\"classWt_1_1Form_1_1WAbstractFormDelegate.html\">WAbstractFormDelegate</a>\n    to ensure proper deletion and explicitly removed the copy and move constructor and assignment operator.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/11562\" target=\"_blank\">Issue #11562</a>:\n    The tutorials\n    (<a href=\"../../tutorial/wt.html\" target=\"_blank\">Wt</a>,\n    <a href=\"../../tutorial/dbo.html\" target=\"_blank\">Dbo</a>, and\n    <a href=\"../../tutorial/auth.html\" target=\"_blank\">Auth</a>)\n    were updated to be built with Asciidoctor instead of the legacy Python implementation,\n    its style was updated to match the JWt website style, and the text was brought up to\n    date a bit. The blog example was likewise updated to use Asciidoctor.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/11210\" target=\"_blank\">Issue #11210</a>:\n    <a href=\"classWt_1_1WTable.html#a03df7cedfb502dcc010493d4a71ee53c\">WTable::headerCount()</a>\n    has been made <code>const</code>.\n  </li>\n  <li>\n    The obsolete CMake options\n    <code>ENABLE_EXT</code>, <code>WT_NO_STD_LOCALE</code> and <code>WT_NO_STD_WSTRING</code>\n    were removed.\n  </li>\n</ul>\n\n<h3>Bug fixes</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11426\" target=\"_blank\">Issue #11426</a>:\n    <a href=\"classWt_1_1Dbo_1_1backend_1_1Sqlite3.html\">Sqlite3</a>:\n    fixed multiple issues with dates and timestamps:\n    <ul>\n      <li>\n        Timestamps before 1970 would not be saved properly on Windows, because of limitations\n        of the <code>gmtime</code> function on Windows. The new implementation uses the\n        <a href=\"https://github.com/HowardHinnant/date\" target=\"_blank\">date</a>\n        library instead.\n      </li>\n      <li>\n        There was a bug in the conversion to a date time string if\n        <a href=\"namespaceWt_1_1Dbo_1_1backend.html#a834555b81f67cf1e17b6e73d1a948067\">ISO8601AsText</a>\n        was set as the\n        <a href=\"classWt_1_1Dbo_1_1backend_1_1Sqlite3.html#a571f4019950aafc2b855d46d4e7072d5\">date time storage</a>.\n        For timestamps before 1970 the millisecond part would be saved as a negative integer, e.g.\n        December 31, 1969 23:59:59.999 would be saved as\n        <code>1970-01-01T00:00:00.0-1</code> instead of <code>1969-12-31T23:59:59.999</code>.\n      </li>\n      <li>\n        There was a bug in the conversion to and from Julian days if\n        <a href=\"namespaceWt_1_1Dbo_1_1backend.html#a834555b81f67cf1e17b6e73d1a948067\">JulianDaysAsReal</a>\n        was set as the\n        <a href=\"classWt_1_1Dbo_1_1backend_1_1Sqlite3.html#a571f4019950aafc2b855d46d4e7072d5\">date time storage</a>.\n        The decimal part was divided by 1000, and it was ahead by 12 hours due to it using\n        midnight rather than noon 1 January 4713 BCE as the reference timestamp. It is now\n        consistent with SQLite's own\n        <a href=\"https://sqlite.org/lang_datefunc.html\" target=\"_blank\">julianday()</a>\n        function.\n      </li>\n      <li>\n        There was a bug in the conversion to UNIX timestamps if\n        <a href=\"namespaceWt_1_1Dbo_1_1backend.html#a834555b81f67cf1e17b6e73d1a948067\">UnixTimeAsInteger</a>\n        was set as the\n        <a href=\"classWt_1_1Dbo_1_1backend_1_1Sqlite3.html#a571f4019950aafc2b855d46d4e7072d5\">date time storage</a>.\n        The date part was discarded, and the time was saved as a number of milliseconds instead of seconds.\n      </li>\n    </ul>\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/11578\" target=\"_blank\">Issue #11578</a>:\n    fixed an issue with the <a href=\"namespaceWt_1_1Form_1_1Dbo.html\">Dbo forms</a> not correctly validating\n    invalid <a href=\"classWt_1_1WDate.html\">WDate</a> and <a href=\"classWt_1_1WTime.html\">WTime</a> values\n    causing the forms to clear the values. Now the forms will give a validation error and prompt the user to\n    correct it before saving the form.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11377\" target=\"_blank\">Issue #11377</a>:\n    when using wtisapi with WebSockets enabled in the <code>wt_config.xml</code>, Wt would\n    try and fail to establish a WebSockets connection (this is not supported by ISAPI). Wt\n    now disables WebSockets (and notifies this in the logs) when using ISAPI.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11423\" target=\"_blank\">Issue #11423</a>:\n    <a href=\"classWt_1_1WResource.html#a12b871c53120ad1c7c708210f60422be\">WResource::internalPath()</a>\n    now returns the empty string for static resources, since it doesn't make sense for static resources.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/10485\" target=\"_blank\">Issue #10485</a>:\n    fixed an issue where Wt would not build on Apple platforms with <code>ENABLE_OPENGL=ON</code>.\n    This changes the CMake setup, so that we now rely on built-in <a href=\"https://cmake.org/cmake/help/latest/module/FindOpenGL.html\" target=\"_blank\">FindOpenGL</a> and <a href=\"https://cmake.org/cmake/help/latest/module/FindGLEW.html\" target=\"_blank\">FindGLEW</a> modules.\n    As a consequence, the bundled GLEW installation was removed. This means that a GLEW installation will need to be\n    provided when building Wt from source. CMake will find GLEW if it is installed in a standard location.\n    The <code>GLEW_ROOT</code> CMake variable can be used if it is installed elsewhere.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11376\" target=\"_blank\">Issue #11376</a>:\n    fixed an issue with redirects when using wtfcgi.\n  </li>\n</ul>\n\n<h2>Release 4.9.2 (April 18, 2023)</h2>\n\n<p>\n  Wt 4.9.2 is a patch release that addresses the following issues:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/11262\" target=\"_blank\">Issue #11262</a>:\n    fixed an issue where 32 bit Linux builds could cause <code>stat()</code> to\n    fail with <code>EOVERFLOW</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11424\" target=\"_blank\">Issue #11424</a>:\n    fixed redundant calls of\n    <a href=\"classWt_1_1WDialog.html#afe7c5f57ddb5fd1bc67334c931401e98\">WDialog::setClosable(false)</a>\n    causing a \"widget not in container\" error to be logged.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10908\" target=\"_blank\">Issue #10908</a>:\n    fixed an issue with\n    <a href=\"classWt_1_1WBootstrap5Theme.html\">WBootstrap5Theme</a>\n    where the selection of a\n    <a href=\"classWt_1_1WSuggestionPopup.html\">WSuggestionPopup</a>\n    was not updated when using the arrow keys. We also made sure to scroll the currently\n    selected option into view when selected using the arrow keys.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11433\" target=\"_blank\">Issue #11433</a>:\n    fixed a regression in the treeview-dragdrop example where dropping a file on the folder view was not working anymore.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11496\" target=\"_blank\">Issue #11496</a>:\n    <a href=\"classWt_1_1Auth_1_1Saml_1_1Service.html\">Saml::Service</a>:\n    added missing implementation for\n    <a\n      href=\"classWt_1_1Auth_1_1Saml_1_1Service.html#ae6be709a6ebc43302425da239622c05b\">setAuthnContextComparison()</a>\n    and properly implemented\n    <a\n      href=\"classWt_1_1Auth_1_1Saml_1_1Service.html#aa5cca89e64b80cc66fcff8f64fda4360\">setNameIdPolicyAllowCreate()</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11379\" target=\"_blank\">Issue #11379</a>:\n    fixed a JavaScript error in <a href=\"classWt_1_1WPaintedWidget.html\">WPaintedWidget</a>.\n  </li>\n</ul>\n\n<h2>Release 4.9.1 (January 20, 2023)</h2>\n\n<p>\n  Wt 4.9.1 is a patch release that addresses the following issues:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11230\" target=\"_blank\">Issue #11230</a>:\n    fixed an issue with\n    <a href=\"classWt_1_1WApplication.html#a5c811d91d3999ac881ce87bebaade864\">WApplication::suspend()</a>\n    where widgets would incorrectly believe they were still\n    <a href=\"classWt_1_1WWidget.html#a7bffb7966160ff8a58fff9d31ef21078\">rendered</a> when unsuspending.\n    This would cause problems with e.g. <a href=\"classWt_1_1WTextEdit.html\">WTextEdit</a>\n    inside of a\n    <a href=\"classWt_1_1WTemplate.html\">WTemplate</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11240\" target=\"_blank\">Issue #11240</a>:\n    fixed an issue where the lazy loading logic breaks when removing and inserting a large\n    number of rows in a <a href=\"classWt_1_1WTreeView.html\">WTreeView</a>\n    (<a href=\"https://github.com/emweb/wt/pull/199\" target=\"_blank\">PR #199</a> by John Stark).\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11180\" target=\"_blank\">Issue #11180</a>:\n    fixes a regression in Wt 4.9.0 where\n    <a href=\"namespaceWt.html#af4b6ed5fd28b4f5fa141b153c1107349accf2281a355c2c9cd4698ac30bea7820\">WidgetSet</a> mode\n    failed with a \"classList is undefined\" error.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11207\" target=\"_blank\">Issue #11207</a>:\n    fixes a regression in Wt 4.9.0 where\n    <a href=\"classWt_1_1WWidget.html#a5d403e0390841df77a23445b28044d5d\">scroll visibility</a> didn't work anymore.\n  </li>\n  <li>\n    Fixed a couple of <a href=\"classWt_1_1WDialog.html\">WDialog</a>-related regressions when using\n    <a href=\"classWt_1_1WBootstrap5Theme.html\">WBootstrap5Theme</a>:\n    <ul>\n      <li>\n        <a href=\"https://redmine.webtoolkit.eu/issues/11233\" target=\"_blank\">Issue #11233</a>:\n        hidden <a href=\"classWt_1_1WDialog.html\">WDialog</a>s would remain visible.\n      </li>\n      <li>\n        <a href=\"https://redmine.webtoolkit.eu/issues/11248\" target=\"_blank\">Issue #11248</a>:\n        contents of a dialog could be cut off when\n        <a href=\"classWt_1_1WWidget.html#afc4bfcc92fa39010cac8775f3332dfa5\">setting the width</a>,\n        and\n        <a href=\"classWt_1_1WDialog.html#a0a3517bffbd049b988e80bb85ae18c46\">resizing of dialogs</a>\n        didn't work.\n      </li>\n    </ul>\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11261\" target=\"_blank\">Issue #11261</a>:\n    added a missing <code>#include &lt;algorithm&gt;</code> to <code>WModelIndex.C</code>\n    to fix compilation issues with Boost 1.81.0 and Visual Studio 2017.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8223\" target=\"_blank\">Issue #8223</a>:\n    fixed compilation on 32-bit Raspberry Pi OS: Wt now links with <code>-latomic</code>\n    if necessary.\n  </li>\n</ul>\n\n<h2>Release 4.9.0 (December 22, 2022)</h2>\n\n<p>\n  Wt 4.9.0 features a lot of changes under the hood: we have painstakingly removed jQuery from Wt,\n  modernized the JavaScript, and added a linter, formatter, and a new minifier in the process.\n</p>\n\n<p>\n  A more directly noticeable change is the fact that we gave the documentation a new lick of paint using the\n  Doxygen Awesome theme. Also, now that we added some tooling to customize WBootstrap5Theme, the\n  <a href=\"https://webtoolkit.eu/widgets\" target=\"_blank\">widget gallery</a>'s\n  primary color was updated to be more in line with Wt's website.\n</p>\n\n<h3>Backwards incompatible changes</h3>\n\n<h4>Removal of jQuery</h4>\n\n<p>\n  We removed every use of jQuery from Wt, and jQuery is now no longer automatically loaded.\n  This means that if you relied on the included jQuery version (for example, the <code>$</code> object or function),\n  you will have to make some changes to make it work with Wt 4.9.0. There are several options:\n</p>\n\n<ul>\n  <li>\n    <p>\n      Replace your uses of jQuery with vanilla JavaScript, which is what we did.\n    </p>\n    <p>\n      For example, the <code>$</code> function can often be replaced with\n      <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\" target=\"_blank\">querySelector</a> or\n      <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\" target=\"_blank\">querySelectorAll</a>.\n    </p>\n  </li>\n  <li>\n    <p>\n      Load jQuery yourself using\n      <a href=\"classWt_1_1WApplication.html#ae88546224ed32cade783da188b145138\">WApplication::require()</a>.\n      <a href=\"classWt_1_1WApplication.html#aa2add60804ff75b3798fc270050654c5\">WApplication::requireJQuery()</a>\n      has been marked as deprecated.\n    </p>\n    <p>\n    For example:\n    <code>application->require(\"https://code.jquery.com/jquery-3.6.1.slim.min.js\", \"$\");</code>.\n    </p>\n  </li>\n  <li>\n    <p>\n      Change your <code>wt_config.xml</code>, adding a <code>&lt;head-matter&gt;</code> section\n      that loads jQuery through a <code>&lt;script&gt;</code> tag:\n    </p>\n    <p>\n      <code>\n        &lt;head-matter&gt;<br>\n        &nbsp;&nbsp;&lt;script<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;src=\"https://code.jquery.com/jquery-3.6.1.slim.min.js\"<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;integrity=\"sha256-w8CvhFs7iHNVUtnSP0YKEg00p9Ih13rlL9zGqvLdePA=\"<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;crossorigin=\"anonymous\"&gt;&lt;/script&gt;<br>\n        &lt;/head-matter&gt;\n      </code>\n    </p>\n  </li>\n</ul>\n\n<h4>Changes to WBootstrap5Theme</h4>\n\n<dl>\n  <dt>Collapsible panels</dt>\n  <dd>\n    <a href=\"classWt_1_1WBootstrap5Theme.html\">WBootstrap5Theme</a>\n    has used an\n    <a href=\"https://getbootstrap.com/docs/5.2/components/accordion/\" target=\"_blank\">accordion</a>\n    instead of a\n    <a href=\"https://getbootstrap.com/docs/5.2/components/card/\" target=\"_blank\">card</a>\n    for collapsible panels since its introduction in Wt 4.6.0.\n    Now, <a href=\"classWt_1_1WPanel.html\">WPanel</a> always uses a\n    <a href=\"https://getbootstrap.com/docs/5.2/components/card/\" target=\"_blank\">card</a>.\n    This allows all panels to have a consistent appearance, regardless of whether they can be collapsed or not.\n    Additionally, the\n    <a href=\"classWt_1_1WPanel.html#aefd66ff6dd8e2a1108e70efec4eab1b5\">WPanel::collapse()</a> and\n    <a href=\"classWt_1_1WPanel.html#a2ac9a05172675559b6f988083a4fd666\">WPanel::expand()</a> functions will now work\n    as expected with\n    <a href=\"classWt_1_1WBootstrap5Theme.html\">WBootstrap5Theme</a>.\n    This change resolves <a href=\"https://redmine.webtoolkit.eu/issues/10364\" target=\"_blank\">issue #10364</a>.\n  </dd>\n  <dt>Bootstrap 5 theme customization</dt>\n  <dd>\n    We've made it easier to customize the Bootstrap 5 theme.\n    <a href=\"classWt_1_1WBootstrap5Theme.html\">WBootstrap5Theme</a> now loads\n    a single CSS file that is built from\n    <a href=\"https://sass-lang.com/\" target=\"_blank\">Sass</a> source files. The\n    <a href=\"https://github.com/emweb/wt/tree/master/examples/custom-bs-theme\" target=\"_blank\">\n    custom-bs-theme example</a> shows how this allows the theme to be customized.\n    The\n    <a href=\"https://www.webtoolkit.eu/widgets\" target=\"_blank\">widget gallery</a>\n    makes use of this by changing the primary color from Bootstrap's blue to the purple\n    used in Wt's logo and homepage.\n    This change resolves <a href=\"https://redmine.webtoolkit.eu/issues/9350\" target=\"_blank\">issue #9350</a>.\n  </dd>\n</dl>\n\n<h3>New features</h3>\n\n<ul>\n  <li>\n    Added <a href=\"classWt_1_1WProgressBar.html#abf8547894af5efc5e5789f9fa56bdc03\">\n    WProgressBar::setValueStyleClass()</a>\n    (<a href=\"https://github.com/emweb/wt/pull/131\" target=\"_blank\">PR #131</a>\n    by maximiliank on GitHub).\n  </li>\n  <li>\n    Added <a href=\"namespaceWt_1_1Utils.html#a13d154e4ef34ee6f8c1a90e8aaeec0dc\">Wt::Utils::htmlAttributeValue()</a>\n    to escape values if they are put into the value of an HTML tag.\n  </li>\n</ul>\n\n<h3>Other improvements</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11067\" target=\"_blank\">Issue #11067</a>:\n    <a href=\"classWt_1_1WWidget.html#af01fbd9de70abd189c2f86171b6a1e02\">animateShow()</a> and\n    <a href=\"classWt_1_1WWidget.html#a0c236e179d5b63c3c6e98cc69e28c9bf\">animateHide()</a> were overhauled to use the\n    <a\n      href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API\"\n      target=\"_blank\">Web Animations API</a>. This fixes issues with choppy animations.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8629\" target=\"_blank\">Issue #8629</a>:\n    In order to ease maintenance, and make contributing to Wt easier, we changed the JavaScript\n    minifier from the old version of Google Closure compiler we were using to\n    <a href=\"https://terser.org/\" target=\"_blank\">terser</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10966\" target=\"_blank\">Issue #10966</a>:\n    Added a JavaScript formatter to format Wt's JavaScript code.\n    Its usage is detailed in the Wt source tree at\n    <a\n      href=\"https://github.com/emweb/wt/blob/master/doc/development/javascript.md\"\n      target=\"_blank\"><code>doc/development/javascript.md</code></a>.\n  </li>\n  <li>\n    We gave our reference documentation a new lick of paint: we're now using the\n    <a href=\"https://jothepro.github.io/doxygen-awesome-css/\" target=\"_blank\">Doxygen Awesome</a> theme,\n    which also has a dark mode.\n  </li>\n  <li>\n    Whereas trying to construct\n    <a href=\"classWt_1_1WApplication_1_1UpdateLock.html\">UpdateLock</a> with a null\n    <a href=\"classWt_1_1WApplication.html\">WApplication</a> pointer would cause a null\n    pointer dereference before, it now simply yields an unsuccessful UpdateLock\n    (<a href=\"https://github.com/emweb/wt/pull/195\" target=\"_blank\">PR #195</a>\n    by Steven K&ouml;hler).\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10395\" target=\"_blank\">Issue #10395</a>:\n    <a href=\"classWt_1_1WPanel.html#a9671893042605eb936c7301f6de09d3f\">WPanel::setTitleBar(false)</a>\n    now automatically calls\n    <a href=\"classWt_1_1WPanel.html#ace945a192f671220a5a2cda671dc37ca\">WPanel::setCollapsible(false)</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9570\" target=\"_blank\">Issue #9570</a>:\n    All uses of <code>WT_CXX14</code> and <code>WT_CXX14ONLY</code> were removed in Wt's\n    source code. <code>WT_CXX14</code> is now always defined, since Wt requires\n    C++14. We marked <code>Wt::cpp14::make_unique</code> as deprecated, since this only\n    existed because C++11 lacked <code>std::make_unique</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10924\" target=\"_blank\">Issue #10924</a>:\n    The undocumented <code>split-script</code> configuration property was removed, simplifying\n    Wt's internals.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10914\" target=\"_blank\">Issue #10914</a>:\n    Changed some Boost.Phoenix includes to silence deprecation warnings.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10911\" target=\"_blank\">Issue #10911</a>:\n    Fixed OpenSSL 3.0 deprecation warnings.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9252\" target=\"_blank\">Issue #9252</a>:\n    Fixed a deprecation warning in the Pango font support implementation.\n  </li>\n</ul>\n\n<h3>Bug fixes</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9076\" target=\"_blank\">Issue #9076</a>:\n    <a href=\"classWt_1_1WDateEdit.html\">WDateEdit</a>\n    gave a javascript error when opening the calendar popup if the\n    application was rendered in\n    <a href=\"namespaceWt.html#af4b6ed5fd28b4f5fa141b153c1107349accf2281a355c2c9cd4698ac30bea7820\">WidgetSet</a>\n    mode.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10488\" target=\"_blank\">Issue #10488</a>:\n    Long polling requests interrupted on the server side now no longer prevent keep alive requests from being sent,\n    and thus the session from timing out. This was possible when Wt is deployed behind a reverse proxy that has\n    a shorter request timeout than the <code>&lt;server-push-timeout&gt;</code>\n    configured in <code>wt_config.xml</code>.\n  </li>\n</ul>\n\n<h2>Release 4.8.3 (December 22, 2022)</h2>\n\n<p>\n  Wt 4.8.3 is a patch release that addresses the following issues:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11105\" target=\"_blank\">Issue #11105</a>:\n    Wt has a built-in redirect mechanism that prevents the <code>Referer</code> header from showing\n    the session id (if the session id is in the URL). This mechanism hashes the destination\n    URL with a secret to ensure that this system is not used as an\n    <a\n      href=\"https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\"\n      target=\"_blank\">open redirect endpoint</a>.\n    However, in order to make dedicated session process mode work properly, this secret could be overridden\n    by providing a <code>Redirect-Secret</code> header, creating an open redirect endpoint.\n    We have renamed this header to <code>X-Wt-Redirect-Secret</code> to better indicate the fact that this\n    header is nonstandard, and will only accept this header if it is coming from a trusted reverse proxy.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10995\" target=\"_blank\">Issue #10995</a>:\n    fixed an issue with <a href=\"classWt_1_1WContainerWidget.html\">WContainerWidget</a>\n    where a session could terminate with the text \"WContainerWidget: error parsing: undefined\".\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/11101\" target=\"_blank\">Issue #11101</a>:\n    fixed a data race when using dedicated session processes.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8093\" target=\"_blank\">Issue #8093</a>:\n    fixed an issue where the bottom axis could be clipped off of a tall\n    <a href=\"classWt_1_1Chart_1_1WCartesianChart.html\">WCartesianChart</a>\n    (<a href=\"https://github.com/emweb/wt/pull/178\" target=\"_blank\">PR #178</a> by Apivan Tuntakurn).\n  </li>\n</ul>\n\n<h2>Release 4.8.2 (November 4, 2022)</h2>\n\n<p>\n  Wt 4.8.2 is a patch release that addresses the following issue:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10970\" target=\"_blank\">Issue #10970</a>:\n    Sending an <code>OPTIONS *</code> request could cause an assertion failure when trying\n    to match the request to an entry point. This could cause a crash if assertions are enabled,\n    though they usually aren't in production builds. Since these types of requests are not properly\n    supported by <code>wthttp</code>, <code>OPTIONS *</code> requests are now rejected.\n  </li>\n</ul>\n\n<h2>Release 4.8.1 (September 22, 2022)</h2>\n\n<p>\n  As usual, Wt 4.8.1 is a patch release, but we also added a document\n  clarifying our policy on which minimum versions of libraries Wt requires\n  (<a href=\"https://redmine.webtoolkit.eu/issues/8801\" target=\"_blank\">issue #8801</a>).\n  You can find this document in Wt's source tree at\n  <a\n    href=\"https://github.com/emweb/wt/blob/master/doc/MinimumDependencyVersions.md\"\n    target=\"_blank\"><code>doc/MinimumDependencyVersions.md</code></a>.\n</p>\n\n<p>\n  That aside, Wt 4.8.1 addresses the following issues:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10909\" target=\"_blank\">Issue #10909</a>:\n    <a href=\"classWt_1_1WPdfImage.html\">WPdfImage</a>: Fixed compatibility with recent libharu\n    versions (2.4.0 and up, excluding version 2.4.1).\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10825\" target=\"_blank\">Issue #10825</a>:\n    Fixed an issue in <a href=\"classWt_1_1WGoogleMap.html\">WGoogleMap</a> where some left-over\n    JavaScript code in\n    <a href=\"classWt_1_1WGoogleMap.html#ad5b1aabd260b3b05e9888718264c40e2\">setMapTypeControl</a>\n    targeting the v2 API would cause a JavaScript error.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10834\" target=\"_blank\">Issue #10834</a>:\n    Fixed a regression since Wt 4.8.0 with the tests for\n    <a href=\"https://redmine.webtoolkit.eu/issues/9442\">issue #9442</a>,\n    <code>dbo_test46</code> would fail with the MySQL/MariaDB and the SQL Server\n    backends because they sort null values differently from PostgreSQL.\n  </li>\n</ul>\n\n<h2>Release 4.8.0 (July 8, 2022)</h2>\n\n<p>\n  Wt 4.8.0 doesn't come with any big new features, but it does include some handy new\n  functions here and there, and some improvements.\n  We have also removed Skia from Wt because we can use\n  Direct2D on Windows and GraphicsMagick on every other operating system.\n</p>\n\n<h3>Removals</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10248\" target=\"_blank\">Issue #10254</a>:\n    The Skia-based <a href=\"Wt_1_1WRasterImage.html\">WRasterImage</a> implementation has been removed,\n    since it was unmaintained and dependent on very specific Skia versions, and we have good alternatives\n    with GraphicsMagick and Direct2D.\n  </li>\n</ul>\n\n<h3>Changes in default behavior</h3>\n\n<ul>\n  <li>\n    Notable changes in exception handling:\n    <ul>\n      <li>\n        <a href=\"https://redmine.webtoolkit.eu/issues/10137\" target=\"_blank\">Issue #10137</a>:\n        Exceptions thrown from\n        <a href=\"classWt_1_1WResource.html#a3a740f8cc29e2e6e4e58defc9c88b8b6\">WResource::handleRequest()</a>\n        are now caught and logged instead of causing a crash.\n      </li>\n      <li>\n        <a href=\"https://redmine.webtoolkit.eu/issues/10136\" target=\"_blank\">Issue #10136</a>:\n        Uncaught exceptions emanating from\n        <a href=\"classWt_1_1WApplication.html#a4a6f167bea94aefa8ba24f914c2fbee5\">WApplication::notify()</a>\n        would be sent to the browser. This exposes potentially sensitive details\n        about the application to the end user. Wt now just sends a simple\n        \"500 Internal Server Error\" without any further details. The exception details\n        will still be logged.\n      </li>\n    </ul>\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8660\" target=\"_blank\">Issue #8660</a>:\n    The default value of\n    <a href=\"classWt_1_1Auth_1_1OAuthService.html#a86b514d3e49a16e1004759287548e576\">OAuthService::popupEnabled()</a>\n    was changed from <code>true</code> to <code>false</code>.\n    This means that the default method when using OAuth is always to redirect instead of using a popup.\n  </li>\n</ul>\n\n<h3>New features</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9861\" target=\"_blank\">Issue #9861</a>:\n    The\n    <a href=\"https://github.com/emweb/wt/tree/master/examples/wtwithqt\" target=\"_blank\">wtwithqt</a>\n    example can now be built with Qt 6.\n  </li>\n  <li>\n    <a href=\"https://redmine.emweb.be/issues/10589\" target=\"_blank\">Issue #10589</a>:\n    Added public getters for two members in the <a href=\"classWt_1_1Form_1_1Dbo_1_1FormModel.html\">FormModel</a>\n    and <a href=\"classWt_1_1Form_1_1Dbo_1_1FormView.html\">FormView</a> classes that were introduced in\n    <a href=\"https://redmine.emweb.be/issues/8622\" target=\"_blank\">issue #8622</a>. Users can now access the underlying\n    database object represented by the model and the model used by the view.\n  </li>\n  <li>\n    <a href=\"https://github.com/emweb/wt/pull/189\" target=\"_blank\">PR #189</a>:\n    Added support for <code>long</code> in <code>Wt::Json</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9442\" target=\"_blank\">Issue #9442</a>:\n    New features for\n    <a href=\"classWt_1_1Dbo_1_1Query.html\">Wt::Dbo::Query</a>:\n    <ul>\n      <li>\n        Added overloads for <a href=\"classWt_1_1Dbo_1_1Query.html#ab99203f02889f09d5ba819eec1f96dfc\">Query::join()</a>,\n        <a href=\"classWt_1_1Dbo_1_1Query.html#af2b09a60768a3d9e84cf26316cb76dd9\">Query::leftJoin()</a> and\n        <a href=\"classWt_1_1Dbo_1_1Query.html#ac5e215165a41a010bd02f0496975955c\">Query::rightJoin()</a> that have\n        a template parameter for the type of the database table that needs to be joined. Since Wt knows the mapping\n        between the type and the database table, it automatically fills in the name of the table.\n      </li>\n      <li>\n        <a href=\"https://redmine.webtoolkit.eu/issues/9442\" target=\"_blank\">Issue #9442</a>:\n        Added functions <a href=\"classWt_1_1Dbo_1_1Query.html#aad47f25e7c86f927e0b2d86c4f519f8a\">Query::asString()</a>\n        and <a href=\"classWt_1_1Dbo_1_1Query.html#abd755ac8e896597a569ab202f5afa4d6\">Query::bindSubqueryValues()</a>.\n        These functions make it possible to embed one query in another by converting it to a string and moving all\n        its bound parameters to the other query. See\n        <a href=\"classWt_1_1Dbo_1_1Query.html#abd755ac8e896597a569ab202f5afa4d6\">Query::bindSubqueryValues()</a>\n        for a basic code example.\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<h3>Improvements</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10019\" target=\"_blank\">Issue #10019</a>:\n    Added a cleaner fix for <a href=\"https://redmine.webtoolkit.eu/issues/9922\" target=\"_blank\">issue #9922</a>.\n    Instead of discarding responses containing only <code>{}</code>, Wt now no longer delineates its JavaScript\n    with curly brackets.\n  </li>\n  <li>\n    <a href=\"https://github.com/emweb/wt/pull/192\" target=\"_blank\">PR #192</a>:\n    Removed obsolete <code>cursor: hand</code>\n  </li>\n</ul>\n\n<h3>Bug fixes</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9938\" target=\"_blank\">Issue #9938</a>:\n    The close icon for a <a href=\"classWt_1_1WDialog.html\">WDialog</a> was displayed on the left side\n    of the title bar when using bootstrap 5. This was fixed by using the Bootstrap 5 appropriate\n    <code>&lt;button&gt;</code> with the <code>btn-close</code> style class.\n    A new <code>Wt.WDialog.titlebar</code> template was introduced so that the rendering\n    of the title bar can be overridden.\n  </li>\n  <li>\n    Fixed <a href=\"https://redmine.webtoolkit.eu/issues/10599\" target=\"_blank\">issue #10599</a>:\n    there were issues on macOS when using a statically built Wt library, causing the linker to output\n    warnings and some test cases to fail.\n  </li>\n  <li>\n    Fixed <a href=\"https://redmine.webtoolkit.eu/issues/10599\" target=\"_blank\">issue #10604</a>:\n    self-assignment of\n    <a href=\"classWt_1_1Dbo_1_1Query.html\">Wt::Dbo::Query</a>\n    would lose bound parameters.\n  </li>\n  <li>\n    <a href=\"https://github.com/emweb/wt/pull/187\">PR #187</a>:\n    Negative floating point numbers would always be formatted in scientific notation when\n    being output as JavaScript. This has been fixed to only use scientific notation for\n    particularly small or particularly large numbers.\n  </li>\n</ul>\n\n<h3>Miscellaneous</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10248\" target=\"_blank\">Issue #10248</a>:\n    Tabs have been replaced by spaces in the source code. Previously, we had a mix of tabs and spaces,\n    where newer code used only spaces, and older code changed 8 spaces into a tab.\n  </li>\n</ul>\n\n<h2>Release 4.7.3 (July 8, 2022)</h2>\n\n<p>\n  Wt 4.7.3 is a patch release that addresses the following issues:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10341\" target=\"_blank\">Issue #10341</a>:\n    Fixed an issue where JavaScript validators would incorrectly mark a <a href=\"classWt_1_1WLineEdit.html\">WLineEdit</a>\n    that used an\n    <a href=\"classWt_1_1WLineEdit.html#a0639ec7e420ba32ffb148303a79fb969\">input mask</a>\n    as invalid, since they would not take the input mask into account.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10543\" target=\"_blank\">Issue #10543</a>\n    (<a href=\"https://github.com/emweb/wt/pull/194\" target=\"_blank\">PR #194</a>):\n    The\n    <a href=\"classWt_1_1Dbo_1_1FixedSqlConnectionPool.html#ab7291dc4ff981598a75606ac29184002\">timeout</a>\n    in\n    <a href=\"classWt_1_1Dbo_1_1FixedSqlConnectionPool.html\">Wt::Dbo::FixedSqlConnectionPool</a>\n    was uninitialized, which caused a random timeout instead of no timeout if the timeout was left unspecified.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10348\" target=\"_blank\">Issue #10348</a>:\n    Dbo: fixed an issue where reentrant use of prepared statements with parameters with the Postgres backend could\n    cause a \"Binding too many parameters\" exception to be thrown.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9719\" target=\"_blank\">Issue #9719</a>\n    (<a href=\"https://github.com/emweb/wt/pull/186\" target=\"_blank\">PR #186</a>):\n    Fixed a regression where panning an interactive\n    <a href=\"classWt_1_1Chart_1_1WCartesianChart.html\">WCartesianChart</a>\n    would not update the\n    <a href=\"classWt_1_1Chart_1_1WAxisSliderWidget.html\">WAxisSliderWidget</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10362\" target=\"_blank\">Issue #10362</a>:\n    <a href=\"classWt_1_1WPanel.html#aefd66ff6dd8e2a1108e70efec4eab1b5\">WPanel::collapse()</a> and\n    <a href=\"classWt_1_1WPanel.html#a2ac9a05172675559b6f988083a4fd666\">WPanel::expand()</a>\n    would cause a segmentation fault with\n    <a href=\"classWt_1_1WBootstrap5Theme.html\">WBootstrap5Theme</a>. Now they do nothing.\n  </li>\n  <li>\n    <a href=\"https://github.com/emweb/wt/pull/188\" target=\"_blank\">PR #188</a>:\n    Fixed an issue where\n    <a href=\"classWt_1_1WTable.html#a0496a46f14f74aed6df4fde8ed161f52\">WTable::insertColumn</a>\n    would not properly associate the table with the newly created column.\n  </li>\n  <li>\n    Fixed <a href=\"https://redmine.webtoolkit.eu/issues/9923\" target=\"_blank\">issue #9923</a>:\n    A <a href=\"classWt_1_1WFileDropWidget.html\">WFileDropWidget</a> with\n    <a href=\"classWt_1_1WFileDropWidget.html#a4032057631d756628f27b6546eeaa7bb\">setAcceptDrops()</a>\n    <code>false</code> and\n    <a href=\"classWt_1_1WFileDropWidget.html#a0c1400a6f7f63eec4bb1cfe30807538e\">setDropIndicationEnabled()</a>\n    <code>true</code> would render the page unresponsive.\n  </li>\n  <li>\n    <a href=\"https://github.com/emweb/wt/pull/193\" target=\"_blank\">PR #193</a>:\n    When the application creator returned a <code>null</code> pointer this would\n    cause a null pointer dereference. This was changed to throw an exception, which then\n    logs an error and cleanly terminates the session.\n  </li>\n  <li>\n    <a href=\"https://github.com/emweb/wt/pull/192\" target=\"_blank\">PR #192</a>:\n    <code>&lt;link&gt;</code> and <code>&lt;meta&gt;</code> tags used in\n    <code>&lt;head-matter&gt;</code> in <code>wt_config.xml</code> are now\n    properly outputted as self-closing tags. This fixes a regression introduced\n    in Wt 4.7.0.\n  </li>\n  <li>\n    Fixed <a href=\"https://redmine.webtoolkit.eu/issues/10578\" target=\"_blank\">issue #10578</a>:\n    Changing the validator of a\n    <a href=\"classWt_1_1WDateEdit.html\">WDateEdit</a> would not update the\n    <a href=\"classWt_1_1WDateEdit.html#a9b3a90d5a5e9e5bc766aad3707f61736\">bottom()</a> and\n    <a href=\"classWt_1_1WDateEdit.html#a68431831acb72c35f46d30b28e93e2a6\">top()</a> of the\n    <code>WDateEdit</code> correctly.\n  </li>\n</ul>\n\n<h2>Release 4.7.2 (May 12, 2022)</h2>\n\n<p>\n  Wt 4.7.2 is a patch release that addresses the following issues:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10287\" target=\"_blank\">Issue #10287</a>:\n    wthttp now properly sends close frame back when WebSocket connections are closed.\n    Previously, the browser would send a close frame and not get a response back. On Firefox,\n    these kinds of errors caused the creation of new WebSocket connections to the same\n    endpoint to be delayed by up to one minute, making it seem like the application is hanging.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10003\" target=\"_blank\">Issue #10003</a>:\n    Calling <a href=\"classWt_1_1WApplication.html#a02b9d8aa1b6c2d0dc9edc1b9c63f86dc\">WApplication::refresh()</a>\n    in the application constructor (e.g. by setting the locale) would produce a JavaScript error if there was\n    a <a href=\"classWt_1_1WSpinBox.html\">WSpinBox</a> in the widget tree.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10320\" target=\"_blank\">Issue #10320</a>:\n    Version 4.5.2\n    (issue <a href=\"https://redmine.webtoolkit.eu/issues/9363\" target=\"_blank\">#9363</a>) and 4.6.2\n    (issue <a href=\"https://redmine.webtoolkit.eu/issues/9572\" target=\"_blank\">#9572</a>)\n    added workarounds to deal with the incorrect formatting of floating point numbers with\n    Boost since version 1.76.0. Since Boost 1.79.0 this issue has been fixed, so the workaround\n    is now disabled for versions since 1.79.0.\n  </li>\n</ul>\n\n<h2>Release 4.7.1 (April 15, 2022)</h2>\n\n<p>\n  Wt 4.7.1 is a patch release that addresses the following issues:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9922\" target=\"_blank\">Issue #9922</a>:\n    Wt would send an update to the browser on every call to\n    <a href=\"classWt_1_1WApplication.html#a51f50e0641a6d702a7c6ab7f8dd5946a\">WApplication::triggerUpdate()</a>\n    if server push was enabled.\n    This is because Wt thought the state was dirty when its JavaScript response buffer contained only <code>{}</code> (empty\n    block). This has been fixed by not sending a response if the buffer contains only <code>{}</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/10177\" target=\"_blank\">Issue #10177</a>:\n    <code>WT_API</code> was missing from <a href=\"classWt_1_1Json_1_1TypeException.html\">Json::TypeException</a>,\n    which meant that its symbols were not exported from dynamic libraries.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9695\" target=\"_blank\">Issue #9695</a>:\n    If a <a href=\"classWt_1_1WSuggestionPopup.html\">WSuggestionPopup</a> was created before the dialog it appears in,\n    it would be displayed below the dialog. The <code>z-index</code> of\n    <code>WSuggestionPopup</code> is now calculated using javascript so it is always shown on top.\n  </li>\n</ul>\n\n<h2>Release 4.7.0 (March 11, 2022)</h2>\n\n<p>Wt 4.7.0 is a smaller release with no major new features to speak of, just some improvements and bug fixes here and there.</p>\n\n<h3>Notable changes in default behavior</h3>\n\n<p>These changes affect default behavior in Wt, and may require special attention:</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7434\" target=\"_blank\">Issue #7434</a>:\n    <a href=\"classWt_1_1WColor.html#a738c53d744ed38a448d1554f2a2f42cf\">WColor::cssText()</a> now outputs\n    the color in <code>rgba</code> format by default.\n    It is now possible to set the opacity using such functions as\n    <a href=\"classWt_1_1WCssDecorationStyle.html#ac6bd2a8b86c8092fc437329dac09b302\">WCssDecorationStyle::setBackgroundColor()</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8782\" target=\"_blank\">Issue #8782</a>:\n    When using drag/drop in combination with\n    <a href=\"classWt_1_1WStandardItemModel.html\">WStandardItemModel</a>,\n    the item flags are now copied. Previously, after dragging an item one time\n    the <a href=\"group__modelview.html#gga1d77c4de293aebfacbdde124de06b8b0a08ab0b568328fb06a466be97d62f5649\">ItemFlag::DragEnabled</a>\n    flag would be lost and the item would no longer be draggable.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9591\" target=\"_blank\">Issue #9591</a>:\n    <a href=\"https://www.webtoolkit.eu/wt/doc/reference/html/classWt_1_1Http_1_1Request.html#a970b7d266c6bead893ec6334520807bf\">\n      Http::Request::urlScheme()\n    </a> now looks at <code>X-Forwarded-Proto</code> if Wt is behind a trusted reverse proxy.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9056\" target=\"_blank\">Issue #9056</a>:\n    There were memory leaks in <a href=\"classWt_1_1WFileDropWidget.html\">WFileDropWidget</a>. This was fixed by changing the class to use\n    smart pointers for memory management. As a side effect,\n    <a href=\"classWt_1_1WFileDropWidget.html#a1dbb3d29cfc84797148cd2758d5c0f6b\">WFileDropWidget::uploads()</a> now returns a copy instead of a const reference to the internal vector.\n  </li>\n</ul>\n\n<h3>Removals</h3>\n\n<ul>\n  <li>\n    Since Google Maps v2 is no longer available as of May 26 2021, Wt no longer supports v2.\n  </li>\n</ul>\n\n<h3>Bug fixes</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9562\" target=\"_blank\">Issue #9562</a>:\n    <ul>\n      <li>If a <a href=\"classWt_1_1Mail_1_1Message.html\">Mail::Message</a> was sent more than once, the attachments would be empty after the first time.</li>\n      <li>Mails sent by <a href=\"namespaceWt_1_1Auth.html\">Wt::Auth</a> are now logged using <a href=\"classWt_1_1WLogger.html\">WLogger</a> instead of using <code>std::cout</code>.\n        As a result, the logging can also be disabled by adding <code>-info:Auth.AuthService</code> to <code>&lt;log-config&gt;</code> in <code>&lt;wt_config.xml&gt;</code>.</li>\n    </ul>\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9035\" target=\"_blank\">Issue #9035</a>:\n    The <code>&lt;head-matter&gt;</code> configuration option did not work with <code>&lt;script&gt;</code> elements without content (e.g. when using the <code>src</code> attribute).\n    The parser would always turn this into a self-closing tag, which is not allowed in HTML.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9271\" target=\"_blank\">Issue #9271</a>:\n    <a href=\"classWt_1_1Dbo_1_1backend_1_1MySQL.html\">Dbo::backend::MySQL</a> now properly preserves the microsecond part of timestamps.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9264\" target=\"_blank\">Issue #9264</a>:\n    Added a remark to <a href=\"classWt_1_1WAbstractToggleButton.html#ae203379ba84c01935f68cd293f2a3eeb\">WAbstractToggleButton::unChecked()</a> to clarify that it is not emitted\n    for <a href=\"classWt_1_1WRadioButton.html\">WRadioButtons</a>.\n  </li>\n</ul>\n\n<h2>Release 4.6.3 (March 10, 2022)</h2>\n<p>\n  Wt 4.6.3 is a patch release that addresses the following issues:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9790\" target=\"_blank\">Issue #9790</a>:\n    A localized <a href=\"classWt_1_1WText.html\">WText</a> with <a href=\"namespaceWt.html#a140dea437d52d3d7c438ea3bd16a1480\">TextFormat::XHTML</a> was not refreshed properly when using arguments.\n  </li>\n</ul>\n\n<h2>Release 4.6.2 (February 15, 2022)</h2>\n\n<p>\n  Wt 4.6.2 is a patch release that addresses the following issues:\n</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9424\" target=\"_blank\">Issue #9424</a>:\n    The special \"no selection\" status of\n    <a href=\"classWt_1_1WComboBox.html\">WComboBox</a>\n    was lost if the items were rerendered, e.g. if the model changed.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9721\" target=\"_blank\">Issue #9721</a>:\n    Somewhere during the Bootstrap 5 transition, we accidentally removed some example code (<code>pdfImageWrite.cpp</code>) from the widget gallery.\n    We added it back.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9572\" target=\"_blank\">Issue #9572</a>:\n    Some JSON serialization tests were temporarily disabled since Boost 1.76.0, since the workaround put\n    in place does not generate entirely the same result.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9571\" target=\"_blank\">Issue #9571</a>:\n    Provided a fix for a false positive <code>-Wfree-nonheap-object</code> warning in <code>Wt::Signals</code>.\n  </li>\n</ul>\n\n<h2>Release 4.6.1 (December 23, 2021)</h2>\n\n<p>\n  Wt 4.6.1 is a single bug fix release, fixing a regression\n  (<a href=\"https://redmine.webtoolkit.eu/issues/9523\" target=\"_blank\">issue #9523</a>).\n  A potential null pointer dereference would crash the Wt site or widget gallery every few days.\n</p>\n\n<h2>Release 4.6.0 (December 14, 2021)</h2>\n\n<p>\n  We know that this one took a bit longer than normal. Starting now we intend to make the Wt release cycle\n  more regular, with a release every three months, so we're planning to release Wt 4.7.0 in March 2022.\n  We've still been busy improving Wt though. Wt 4.6.0 introduces some major new features, including\n  Bootstrap 5 theming support, Dbo-based forms, and SAML support for Wt::Auth.\n</p>\n\n<h3>Bootstrap 5 theming support (<a href=\"https://redmine.webtoolkit.eu/issues/7418\" target=\"_blank\">issue #7418</a>)</h3>\n\n<p>\n  We split up <a href=\"classWt_1_1WBootstrapTheme.html\">WBootstrapTheme</a> into\n  <a href=\"classWt_1_1WBootstrap2Theme.html\">WBootstrap2Theme</a> and\n  <a href=\"classWt_1_1WBootstrap3Theme.html\">WBootstrap3Theme</a>, and added\n  <a href=\"classWt_1_1WBootstrap5Theme.html\">WBootstrap5Theme</a>. We found that the\n  different Bootstrap versions were distinct enough to warrant splitting each version of the theme up into its own class.\n</p>\n\n<p>\n  We abandoned development of <code>WBootstrap4Theme</code>, since there were still some unsolved\n  issues with it, and we didn't expect many users to be interested in it.\n</p>\n\n<p>\n  We also updated the design of the <a href=\"https://www.webtoolkit.eu/widgets\" target=\"_blank\">widget gallery</a>.\n  It now uses Bootstrap 5, and no longer uses box layouts, instead opting for a more responsive design featuring\n  a collapsible menu on narrow screens. This means that the widget gallery is finally usable on mobile phones!\n</p>\n\n<h3>Dbo-based forms (<a href=\"https://redmine.webtoolkit.eu/issues/8622\" target=\"_blank\">issue #8622</a>)</h3>\n\n<p>\n  We added a new feature that allows Wt to automatically generate a form for a Dbo class. Based on the data types\n  that are used by the Dbo class, Wt will generate <a href=\"classWt_1_1Form_1_1WAbstractFormDelegate.html\">form delegates</a>.\n  These form delegates are responsible for creating the widget and optional validator for representing the data type in the UI.\n  For example:\n  <a href=\"classWt_1_1WString.html\">WString</a> objects are by default represented by a\n  <a href=\"classWt_1_1WLineEdit.html\">WLineEdit</a>,\n  <a href=\"classWt_1_1WDate.html\">WDate</a> objects by\n  <a href=\"classWt_1_1WDateEdit.html\">WDateEdit</a>, and so on.\n</p>\n\n<p>\n  The user is able to override the default behavior either by customizing the\n  <a href=\"classWt_1_1Form_1_1Dbo_1_1FormView.html#aa60100980949a327483cec31c2963420\">widgets</a> and/or\n  <a href=\"classWt_1_1Form_1_1Dbo_1_1FormView.html#a55cb4e6750f29a4871686d19cf714042\">validators</a> or by creating a new\n  form delegate for the specific field and <a href=\"classWt_1_1Form_1_1Dbo_1_1FormView.html#a42cad48a1c44d319325be1732520ba83\">adding</a>\n  it to the form.\n</p>\n\n<p>\n  All classes related to this new feature have been added to a new <a href=\"namespaceWt_1_1Form.html\">Wt::Form</a> namespace.\n  Here's a short overview of the most important classes within that namespace:\n</p>\n\n<ul>\n  <li>\n    <a href=\"classWt_1_1Form_1_1Dbo_1_1FormModel.html\">FormModel</a>: a model class that holds the data of the database object.\n  </li>\n  <li>\n    <a href=\"classWt_1_1Form_1_1Dbo_1_1FormView.html\">FormView</a>: a view class to represent the database object in the UI.\n  </li>\n  <li>\n    <a href=\"classWt_1_1Form_1_1WAbstractFormDelegate.html\">WAbstractFormDelegate</a>: delegate for creating form widgets.\n  </li>\n</ul>\n\n<p>We also added a new <a href=\"https://github.com/emweb/wt/tree/master/examples/dbo-form\" target=\"_blank\">example</a> to display this new functionality.</p>\n\n<h3>SAML support for Wt::Auth (<a href=\"https://redmine.webtoolkit.eu/issues/8621\" target=\"_blank\">issue #8621</a>)</h3>\n\n<p>\n  We added SAML support for authentication with third party identity providers.\n  <a href=\"classWt_1_1Auth_1_1Saml_1_1Service.html\">Wt::Auth::Saml::Service</a>\n  implements a minimal SAML 2.0 service provider for single sign on.\n</p>\n\n<p>\n  We added a <a href=\"https://github.com/emweb/wt/tree/master/examples/feature/saml\" target=\"_blank\">SAML</a>\n  feature example to demonstrate this.\n</p>\n\n<p>\n  Note: this implementation is based on <a href=\"https://www.shibboleth.net/\" target=\"_blank\">Shibboleth</a>'s\n  OpenSAML library. This library uses the Apache License Version 2.0. Due to incompatibility with the GNU General\n  Public License V2.0 used by Wt, <strong>a commercial Wt license is required to distribute derived works using SAML\n  authentication</strong>.\n</p>\n\n<h3>Other features and improvements</h3>\n\n<ul>\n  <li>\n    It is now possible to suspend the <a href=\"classWt_1_1WApplication.html\">WApplication</a> using the\n    <a href=\"classWt_1_1WApplication.html#a5c811d91d3999ac881ce87bebaade864\">suspend</a> function. Previously,\n    logging in using an external authentication provider required a popup, but this can now be done through a redirect\n    (<a href=\"classWt_1_1Auth_1_1OAuthService.html#a72f987f61e7a53636ac3f08b61bee2a5\">OAuthService::setPopupEnabled()</a>\n    and\n    <a href=\"classWt_1_1Auth_1_1Saml_1_1Service.html#a89ae3fb932497cbe28ed8b032d447966\">Saml::Service::setPopupEnabled()</a>).\n    This can also be useful for redirecting to payment providers.\n    (See <a href=\"https://redmine.webtoolkit.eu/issues/7742\" target=\"_blank\">issue #7742</a> and\n    <a href=\"https://redmine.webtoolkit.eu/issues/9439\" target=\"_blank\">issue #9439</a>.)</li>\n\n  <li>\n    Added <a href=\"classWt_1_1WServer.html#a28794f657a950e81c17e2c11fe4270b1\">WServer::docRoot()</a>, which allows\n    access to the <code>--docroot</code> argument of wthttp.\n    (See <a href=\"https://redmine.webtoolkit.eu/issues/9391\" target=\"_blank\">issue #9391</a>.)\n  </li>\n\n  <li>\n    The Bootstrap themes now no longer need an active <a href=\"classWt_1_1WApplication.html\">WApplication</a>\n    upon construction to properly function, through the addition of an <a href=\"classWt_1_1WTheme.html#ae15f579e5dfb0d50e909fd5e2c575f60\">init()</a> function.\n    (See <a href=\"https://redmine.webtoolkit.eu/issues/9204\" target=\"_blank\">issue #9204</a>.)\n  </li>\n\n  <li>The <a href=\"classWt_1_1WAbstractItemView.html\">WAbstractItemView</a> now allows drag/drop in between rows.\n    See <a href=\"classWt_1_1WAbstractItemView.html#a5469c23ea1e9066e98e832ec9da2af21\">setEnabledDropLocations()</a>.\n    (See <a href=\"https://redmine.webtoolkit.eu/issues/8636\" target=\"_blank\">issue #8636</a>.)</li>\n\n  <li>With the latest version of Visual Studio supporting std::chrono's date and time zone support it is now possible\n    to use it when building Wt in C++20 mode\n    (<code>-DCMAKE_CXX_STANDARD=20 -DWT_CPP20_DATE_TZ_IMPLEMENTATION=std</code>). This means that when Wt is compiled\n    this way time zone support just works on Windows like it already did on Linux, instead of requiring you to\n    download the IANA time zone database.\n    (See <a href=\"https://redmine.webtoolkit.eu/issues/8595\" target=\"_blank\">issue #8595</a>.)</li>\n\n  <li>Updated the <code>date</code> library to commit <code>fb2554a7e00b24d23838b57a4db4121e148edb5c</code>.</li>\n\n  <li>Ability to change the row header count of <a href=\"classWt_1_1WTableView.html\" target=\"_blank\">WTableView</a>\n    after it is rendered (see <a href=\"https://redmine.webtoolkit.eu/issues/8077\" target=\"_blank\">issue #8077</a>).</li>\n\n  <li>Splitting up updates to stay under the form data limit when many updates are rapidly generated\n    (<a href=\"https://redmine.webtoolkit.eu/issues/7990\" target=\"_blank\">issue #7990</a>).</li>\n\n  <li>Revert delay of <a href=\"classWt_1_1WWidget.html#a1ee433705523b2b79c4c3539e0852c92\">WWidget::load()</a>.\n    Load now happens when a widget is added to the widget tree.\n    (See <a href=\"https://redmine.webtoolkit.eu/issues/7968\" target=\"_blank\">issue #7968</a>.)</li>\n\n  <li>Added option to not automatically select first suggestion of a\n    <a href=\"classWt_1_1WSuggestionPopup.html\">WSuggestionPopup</a>.</li>\n\n  <li><a href=\"classWt_1_1Http_1_1Request.html#ad8a1199b8692854fefb76f494d793f93\">Wt::Http::Request::hostName()</a>\n    now takes into account <code>X-Forwarded-Host</code>.</li>\n\n  <li>Updated the version of the included <code>SQLite</code> to version 3.35.5.</li>\n\n  <li>Added <code>doc/licenses.md</code> as an exhaustive list of the licenses used by Wt, source code from external\n    sources included in Wt and any external dependencies.</li>\n</ul>\n\n<h3>Bug fixes</h3>\n\n<ul>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/8972\" target=\"_blank\">Issue #8972</a>: fixed a regression with\n    <a href=\"classWt_1_1WResource.html#a06bb9dbe3ae195c320cfed7b062d448a\">WResource::setInternalPath()</a>.</li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/8838\" target=\"_blank\">Issue #8838</a>:\n    <a href=\"classWt_1_1WIOService.html\">WIOService</a> would block all signals in its worker threads. Now we let through\n    thread specific signals, so that signal handlers for them can be installed, e.g. by crashpad.\n  </li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/8720\" target=\"_blank\">Issue #8720</a>:\n    fixed\n    <a href=\"classWt_1_1WServer.html#aa47d7a7af63b11ae5c49ea226401b5fa\">WServer::dedicatedSessionProcess()</a>\n    so it's accurate after\n    <a href=\"classWt_1_1WServer.html#a6ef2c780a70eebc68707ea0d684b8509\">WServer::setServerConfiguration()</a>.</li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/8531\" target=\"_blank\">Issue #8531</a>:\n    fixed deletion/modification of remember me cookie when using websockets.</li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/8518\" target=\"_blank\">Issue #8518</a>: fixed accessing freed memory\n    when <a href=\"classWt_1_1Dbo_1_1ptr.html\">Wt::Dbo::ptr</a> exits at destruction of its session.</li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/8392\" target=\"_blank\">Issue #8392</a>: fixed crash when using\n    <a href=\"classWt_1_1WToolBar.html#af18dca00ce4fb782c806272b6dfc1659\">WToolBar::widget()</a>.</li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/8336\" target=\"_blank\">Issue #8336</a>: fixed\n    <a href=\"classWt_1_1WNavigationBar.html\">WNavigationBar</a> regression: popup menu remains selected.</li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/8164\" target=\"_blank\">Issue #8164</a>: added protected copy\n    constructor to <a href=\"classWt_1_1WStandardItem.html\">WStandardItem</a> to allow easier overriding of\n    <a href=\"classWt_1_1WStandardItem.html#a41a5f22630a4c876e3a4ba822c43a744\">WStandardItem::clone()</a>.</li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/8135\" target=\"_blank\">Issue #8135</a>:\n    <a href=\"classWt_1_1WMenu.html\">WMenu</a> submenu selection not proparly propagated.</li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/8025\" target=\"_blank\">Issue #8025</a>: text clipped in\n    <a href=\"classWt_1_1WRasterImage.html\">WRasterImage</a> (GraphicsMagick) with Pango.</li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/7811\" target=\"_blank\">Issue #7811</a>: invalid ackId.</li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/7975\" target=\"_blank\">Issue #7975</a>: drag-drop icon under dialog.</li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/8597\" target=\"_blank\">Issue #8597</a>: taking UpdateLock in\n    <a href=\"classWt_1_1WResource.html\">WResource</a> sometimes fails.</li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/8838\" target=\"_blank\">Issue #8838</a>: breakpad/crashpad signal\n    handler doesn't work in <a href=\"classWt_1_1WIOService.html\">WIOService</a> threads.</li>\n  <li>Fixed <a href=\"classWt_1_1WString.html#a233225f344af1b4a090f4a4dd76ec53d\">WString::empty()</a> returning false\n    for <code>Wt::WString(\"{1}\").arg(\"\")</code>.</li>\n</ul>\n\n<h2>Release 4.5.2 (December 14, 2021)</h2>\n\n<p>Wt 4.5.2 is a bugfix release containing the following changes:</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9490\" target=\"_blank\">Issue #9490</a>: Fixed a possible\n    exception being thrown in the Postgres backend for Dbo when subnormal floating point numbers are retrieved\n    from the database.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9414\" target=\"_blank\">Issue #9414</a>: Fixed an error that\n    occurred when trying to link <code>libwtdbosqlite3</code> on Fedora 35.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9363\" target=\"_blank\">Issue #9363</a>: Added a workaround for\n    <a href=\"https://github.com/boostorg/spirit/issues/688\" target=\"_blank\">Boost Spirit issue #688</a>,\n    affecting versions of Boost &ge; 1.66.0.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9270\" target=\"_blank\">Issue #9270</a>: Fixed a possible but\n    very rarely occurring race condition\n    in the generation of ids that would make it possible to have two widgets with the same id in the same\n    <a href=\"classWt_1_1WApplication.html\">WApplication</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9230\" target=\"_blank\">Issue #9230</a>: Fixed an issue where the 3-argument version\n    of <a href=\"classWt_1_1Dbo_1_1QueryModel.html#ac225ba823673dc46e47811631e3218fe\">QueryModel::setHeaderData</a>\n    was no longer accessible.\n  </li>\n</ul>\n\n<h2>Release 4.5.1 (October 7, 2021)</h2>\n\n<p>Wt 4.5.1 is a bugfix release containing the following changes:</p>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/9008\" target=\"_blank\">Issue #9008</a>:\n    Fixed possible JavaScript issues by appending a semicolon to all JavaScript statements when using\n    <a href=\"classWt_1_1WApplication.html#a2a92457b9212cef4057cb54e56183967\">doJavaScript</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8964\" target=\"_blank\">Issue #8964</a>:\n    fixed Boost 1.77.0 compilation by modernizing the implementation of <code>WCssParser</code> to use\n    range-based for loops instead of <code>BOOST_FOREACH</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8677\" target=\"_blank\">Issue #8677</a>:\n    <a href=\"classWt_1_1WWidget.html#a5d403e0390841df77a23445b28044d5d\">WWidget::setScrollVisibilityEnabled()</a>\n    now refers to the correct\n    <a href=\"https://github.com/emweb/wt/tree/master/examples/feature/scrollvisibility\" target=\"_blank\">scrollvisibility</a> example.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8577\" target=\"_blank\">Issue #8577</a>:\n    fixed some tests in <code>test.http</code> related to the handling of\n    <code>X-Forwarded-For</code> and <code>Client-IP</code> headers.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8467\" target=\"_blank\">Issue #8467</a>:\n    fixed compilation of <code>WTextRenderer.C</code> on some systems due to a missing <code>#include &lt;limits&gt;</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8407\" target=\"_blank\">Issue #8407</a>:\n    fixed an issue in <a href=\"classWt_1_1WTreeView.html\">WTreeView</a> where the expand icon was not removed\n    when removing the last child.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8376\" target=\"_blank\">Issue #8376</a>:\n    made dragging and dropping icons work correctly in\n    <a href=\"classWt_1_1WAbstractItemView.html\">WAbstractItemView</a> by\n    preventing the default action.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8335\" target=\"_blank\">Issue #8335</a>:\n    fixed an issue where\n    <a href=\"classWt_1_1WWidget.html#af432588db3d599f89b54121f2ede8d63\">WWidget::layoutSizeChanged()</a> would\n    sometimes not be called.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8305\" target=\"_blank\">Issue #8305</a>:\n    fixed an issue that caused the\n    <a href=\"https://github.com/emweb/wt/tree/master/examples/style\" target=\"_blank\">style example</a>\n    to segfault.\n    <a href=\"classWt_1_1WRasterImage.html#a75dffbb4731d33ac6a2dc2fb8e9a4aec\">WRasterImage::setChanged()</a> could\n    cause a crash if the image was not meant to be exposed as a resource.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8202\" target=\"_blank\">Issue #8202</a>:\n    fixed an issue where\n    <a href=\"classWt_1_1WServer.html#afd61307d5d869cfecea239dac720a86d\">WServer::postAll()</a>\n    would also be handled by sessions that were not fully complete yet, which meant that\n    <a href=\"classWt_1_1WApplication.html#a38d922da0a0d83395519f3eaab85d0f6\">WApplication::instance()</a>\n    would return <code>nullptr</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8194\" target=\"_blank\">Issue #8194</a>:\n    fixed an issue where\n    <a href=\"classWt_1_1WVirtualImage.html\">WVirtualImage</a> would break if you added a\n    <a href=\"classWt_1_1WInteractWidget.html#a40c3643603fa861b1ec797eec794aa4c\">mouseMoved()</a> handler to images.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8114\" target=\"_blank\">Issue #8114</a>:\n    fixed a possible JavaScript error in <a href=\"classWt_1_1WCanvasPaintDevice.html\">WCanvasPaintDevice</a>\n    if an image load handler was executed after the painted widget was already removed.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8041\" target=\"_blank\">Issue #8041</a>:\n    fixed an inconsistency in how ellipses were rendered when using\n    <a href=\"classWt_1_1WPainter.html#aa79220ed9456f67a393009e5c5eea27e\">drawArc()</a> with\n    wide <a href=\"classWt_1_1WPen.html\">WPen</a> on an HTML canvas.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/8039\" target=\"_blank\">Issue #8039</a>:\n    <a href=\"classWt_1_1WLocalDateTime.html#a08aaccd32fd329f4f696b07a060bcca1\">WLocalDateTime::timeZoneOffset()</a> now throws if it was initialized without timezone\n    information, as opposed to crashing.\n    The <a href=\"https://github.com/emweb/wt/tree/master/examples/filetreetable\" target=\"_blank\">filetreetable example</a> was changed to use UTC so we don't need\n    timezones.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7998\" target=\"_blank\">Issue #7998</a>:\n    made sure the scroll position is preserved when a <a href=\"classWt_1_1WTreeView.html\">WTreeView</a>\n    is sorted.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7996\" target=\"_blank\">Issue #7996</a>:\n    clarified the documentation of <a href=\"classWt_1_1WInteractWidget.html#ae11e050cce0d4a8f742afa3ef92bfe8c\">WInteractWidget::clicked()</a>\n    to note that middle clicks do not emit the clicked event.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7985\" target=\"_blank\">Issue #7985</a>:\n    re-exposed two argument version of\n    <a href=\"classWt_1_1WAbstractItemModel.html#a0bccbb4373b4c1e8bce85573b933d53d\">WAbstractItemModel::setHeaderData()</a>\n    in <a href=\"classWt_1_1Dbo_1_1QueryModel.html\">QueryModel</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7957\" target=\"_blank\">Issue #7957</a>:\n    fixed behind reverse proxy behavior when using dedicated process mode.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7912\" target=\"_blank\">Issue #7912</a>:\n    fixed JavaScript errors when using <a href=\"classWt_1_1WPopupMenu.html\">WPopupMenu</a>\n    in <a href=\"namespaceWt.html#af4b6ed5fd28b4f5fa141b153c1107349accf2281a355c2c9cd4698ac30bea7820\">WidgetSet</a>\n    mode.\n  </li>\n  <li>\n    Added warning to the <a href=\"classWt_1_1WSuggestionPopup.html\">WSuggestionPopup</a> documentation: this widget should not be bound to a template.\n  </li>\n  <li>\n    Added missing virtual destructor to <a href=\"classWt_1_1WLogSink.html\">WLogSink</a> (contributed by Pavlo Solntsev).\n  </li>\n  <li>\n    Fixed an issue where the\n    <a href=\"classWt_1_1WWidget.html#aa5ce605dd465e06f3e3c2dbce2a4098e\">scrollVisibilityChanged()</a>\n    signal would not always be created.\n  </li>\n  <li>\n    Fixed a compilation issue on Windows with the latest MSVC and Boost in\n    <code>WebUtils.C</code>.\n  </li>\n  <li>\n    Various fixes to make Wt build properly with C++20:\n    <ul>\n      <li>\n        <a href=\"https://redmine.webtoolkit.eu/issues/7002\" target=\"_blank\">Issue #7002</a>:\n        made tests build with the new <code>char8_t</code> type.\n      </li>\n      <li>\n        Fixed infinite recursion in <a href=\"classWt_1_1WString.html\">WString</a> comparison operator.\n      </li>\n      <li>\n        Fixed compilation of <a href=\"classWt_1_1Dbo_1_1Transaction.html\">Dbo::Transaction</a> due\n        to the removal of <code>uncaught_exception</code>.\n      </li>\n      <li>\n        <a href=\"https://redmine.webtoolkit.eu/issues/8022\" target=\"_blank\">Issue #8022</a>:\n        fixed a compilation issue due to ambiguous <code>local_time</code> symbol with MSVC when using\n        <code>/std:c++latest</code>.\n      </li>\n    </ul>\n  </li>\n  <li>\n    Contributions by Steven K&ouml;hler:\n    <ul>\n      <li>Fixed a \"size is not a function\" issue when using jQuery 3.x</li>\n      <li>Fixed a warning when using <code>DBO_EXTERN_TEMPLATES</code> and <code>DBO_INSTANTIATE_TEMPLATES</code>.</li>\n      <li>Resolved C++17 <code>std::iterator</code> deprecation issue in <code>Wt::Dbo</code>.</li>\n      <li>Fixed an access violation in <code>Dbo::collection&lt;C&gt;::iterator</code>.</li>\n      <li>Added the missing function definition for <code>Dbo::collection&lt;C&gt;::const_iterator::operator=</code>.</li>\n      <li>Resolved/suppressed some type conversion warnings in <a href=\"classWt_1_1Dbo_1_1collection.html\">Dbo::collection</a>.</li>\n    </ul>\n  </li>\n</ul>\n\n<h2>Release 4.5.0 (December 15, 2020)</h2>\n\n<h3>Notable changes</h3>\n\n<ul>\n  <li>Wt now targets C++14, and <code>CMAKE_CXX_STANDARD</code> defaults to \"14\". There appears to\n      be no good reason to maintain C++11 support, since every compiler that supports enough C++11\n      for Wt also supports enough C++14. You should still be able to use C++11 mode when using Wt\n      as a library, but Wt itself no longer builds in C++11 mode.</li>\n  <li>Wt::Dbo: the <a href=\"classWt_1_1Dbo_1_1backend_1_1Firebird.html\">Firebird</a> backend\n    has been marked as unmaintained. The Firebird tests were not succeeding, likely because\n    of an incompatibility with the unmaintained IBPP that the Firebird backend is based on\n    and recent versions of Firebird.</li>\n</ul>\n\n<h3>Features and improvements</h3>\n\n<ul>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/7586\" target=\"_blank\">Issue #7586</a>:\n    The <code>&lt;behind-reverse-proxy&gt;</code> option has been deprecated in favor of a new\n    <code>&lt;trusted-proxy-config&gt;</code> option. It's now possible to specify the IP header\n    that Wt should look for using <code>&lt;remote-ip-header&gt;</code> (defaults to <code>X-Forwarded-For</code>).\n    Wt will trust all proxies listed in <code>&lt;trusted-proxies&gt;</code>.\n    When <code>&lt;behind-reverse-proxy&gt;</code> is set to <code>true</code>, the behavior stays the\n    same as it was before. <a href=\"overview.html#config_general\">See the library overview for more\n    information about this option.</a>\n  </li>\n  <li>\n    <a href=\"classWt_1_1WFormModel.html\">WFormModel</a> now uses string comparison instead of pointer comparison\n    for its fields.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7666\" target=\"_blank\">Issue #7666</a>: In some cases Wt 4.4.0 would\n    connect <code>jsScrollVisibilityChanged</code> even if it was not actually being used, causing extra unnecessary\n    requests.\n  </li>\n  <li>\n    Added Jenkins pipelines in the\n    <code><a href=\"https://github.com/emweb/wt/tree/master/jenkins\" target=\"_blank\">jenkins</a></code> folder.\n    We use Jenkins to test Wt at Emweb but we would usually\n    keep this configuration in Jenkins. Our pipelines for Linux and FreeBSD have now been updated a bit and moved\n    into the Wt repository, since they may be of use to people looking to contribute to Wt.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7669\" target=\"_blank\">Issue #7669</a>: Wt now automatically uses\n    <a href=\"classWt_1_1WObject.html#a3de0f0baf35f42aa4e77a90d427f2e11\">addChild</a> instead of\n    <a href=\"classWt_1_1WContainerWidget.html#ad17b653b6f0487e42b2a63ab9de03f20\">addWidget</a> when\n    <a href=\"classWt_1_1WContainerWidget.html#acf75dda5024db05cf847c282f8a99117\">addNew</a> is used\n    on a global widget, like <a href=\"classWt_1_1WPopupWidget.html\">WPopupWidget</a>.\n  </li>\n</ul>\n\n<h3>Bug fixes</h3>\n\n<ul>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/6367\" target=\"_blank\">Issue #6367</a>:\n    fixed issue where wthttp would no longer accept new connections when an error occurred\n    while accepting a connection, e.g. if the open file limit was reached.\n  </li>\n  <li>\n    <a href=\"classWt_1_1WDate.html#a57a614e3408f39c70605027fe3e3f3f5\">WDate::currentServerDate()</a> and\n    <a href=\"classWt_1_1WTime.html#a271bd124707e50cc15872e263ffa71f2\">WTime::currentServerTime()</a> now\n    correctly return the local date and time on the server instead of UTC.\n  </li>\n  <li>\n    Fixed visibility of\n    <a href=\"classWt_1_1Auth_1_1OAuthProcess.html\">OAuthProcess</a> and\n    <a href=\"classWt_1_1Auth_1_1OAuthAccessToken.html\">OAuthAccessToken</a>.\n  </li>\n  <li>Fixed issues\n    <a href=\"https://redmine.webtoolkit.eu/issues/6548\" target=\"_blank\">#6548</a> and\n    <a href=\"https://redmine.webtoolkit.eu/issues/7749\" target=\"_blank\">#7749</a>:\n    URL parameters were being parsed more than once for file uploads, causing a rapid\n    accumulation of duplicate values during uploads, and potentially causing segmentation\n    faults. The\n    <a href=\"https://github.com/emweb/wt/tree/master/examples/wtwithqt\" target=\"_blank\">wtwithqt</a>\n    example was also updated so that it properly waits for condition variables in a loop,\n    to deal with spurious wakeups. Also fixed a potential use-after-free when updating resource\n    progress.\n  </li>\n  <li>\n    Fixed an issue where the <a href=\"classWt_1_1Http_1_1Client.html\">HTTP Client</a>\n    would wait indefinitely for data when <code>Content-Length</code> is zero.\n  </li>\n  <li>\n    WebSockets: If a bad value for <code>server_max_window_bits</code> or\n    <code>client_max_window_bits</code> was encountered, this would cause\n    an uncaught exception and a crash. This is now handled properly.\n  </li>\n  <li>\n    Fixed issue with <code>DISTINCT ON</code> in X3 based query parser: the fields listed\n    there would incorrectly be regarded as fields being returned.\n  </li>\n  <li>\n    Fixed issue <a href=\"https://redmine.webtoolkit.eu/issues/7677\" target=\"_blank\">#7677</a>:\n    when a font could not be loaded in <a href=\"classWt_1_1WPdfImage.html\">WPdfImage</a>,\n    this would throw an uncaught exception. This was changed to logging an error.\n  </li>\n  <li>\n    Fixed issue <a href=\"https://redmine.webtoolkit.eu/issues/7719\" target=\"_blank\">#7719</a>:\n    <a href=\"group__modelview.html#gaac976f394f370d3d62c29791b13a0049\">Wt::asString</a>\n    did not properly handle <code>unsigned long</code>.\n  </li>\n  <li>\n    <a href=\"https://github.com/emweb/wt/pull/166\" target=\"_blank\">PR #166</a>:\n    fixed <a href=\"https://github.com/emweb/wt/tree/master/examples/mandelbrot\" target=\"_blank\">mandelbrot</a> example:\n    missing call to <a href=\"classWt_1_1WRasterImage.html#af06beb3b09289d373fb7855750afdc83\">done()</a>.\n  </li>\n  <li>\n    <a href=\"https://github.com/emweb/wt/pull/167\" target=\"_blank\">PR #167</a>:\n    we need to link with Boost unit_test_framework on Windows when <code>BOOST_DYNAMIC</code> is <code>ON</code>.\n  </li>\n  <li>\n    Fixed an issue where <a href=\"classWt_1_1WMediaPlayer.html\">WMediaPlayer</a> would not get properly\n    loaded when <code>reload-is-new-session</code> is <code>false</code>, and the page is refreshed.\n  </li>\n</ul>\n\n<h2>Release 4.4.0 (August 3, 2020)</h2>\n\n<p>Wt 4.4.0 adds a couple of new features, like multiple X axes, and WColorPicker, among other fixes and tweaks.</p>\n\n<h3>Security related</h3>\n\n<p>\n  Wt now rejects GET requests for Ajax-enabled sessions that are not for resources, as an\n  extra means to prevent session hijacking attempts. Patch provided by Bruce Toll in\n  <a href=\"https://redmine.webtoolkit.eu/issues/7585\" target=\"_blank\">issue #7585</a>.\n</p>\n\n<h3>Major new features</h3>\n\n<ul>\n  <li>\n    <a href=\"classWt_1_1Chart_1_1WCartesianChart.html\">WCartesianChart</a>: similar to how\n    Wt 4.0.4 added support for multiple Y axes, Wt 4.4.0 adds support for multiple X axes,\n    too. Instead of trying to squeeze another <code>int</code> argument into functions like\n    <a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a37b22e4bdc17c45d193848cca443dd28\">WCartesianChart::map</a>,\n    we decided to add overloads that take two <a href=\"classWt_1_1Chart_1_1WAxis.html\">WAxis</a> references.\n  </li>\n  <li>\n    Added <a href=\"classWt_1_1WColorPicker.html\">WColorPicker</a>: a simple form widget that display a browser-native\n    color picker. Patch provided in <a href=\"https://github.com/emweb/wt/pull/158\" target=\"_blank\">PR #158</a>.\n  </li>\n</ul>\n\n<h3>Minor features</h3>\n\n<ul>\n  <li>\n    Wt::Dbo:\n    <ul>\n      <li>\n        <a href=\"https://github.com/emweb/wt/pull/161\" target=\"_blank\">PR #161</a>: added support for\n        <a href=\"group__dbo.html#ga4987bb75aacce8ada8662cc86a6fc3b5\"><code>ON UPDATE RESTRICT</code></a> and\n        <a href=\"group__dbo.html#gaae0942000fa56b27ca4185f76395c388\">ON DELETE RESTRICT</a> foreign key constraints in Wt::Dbo.\n      </li>\n      <li>\n        <code>DBO_INSTANTIATE_TEMPLATES</code> and the <code>DBO_EXTERN_TEMPLATES</code> macros used to be disabled with\n        Visual Studio since they wouldn't work with old versions of Visual Studio. We reenabled those macros, since\n        they've been working for a while now.\n      </li>\n      <li>\n        Added <a href=\"classWt_1_1Dbo_1_1Query.html#a693ed2ff14acaeffe45b8b6c09b6da8f\">orWhere</a>.\n      </li>\n    </ul>\n  </li>\n  <li>\n    <a href=\"classWt_1_1WFileResource.html\">WFileResource</a>: added a log message when failing to open a file. Previously,\n    it would not be very clear why nothing was downloaded.\n  </li>\n  <li>\n    Added the MIME type for <code>.txt</code> files to <code>wthttp</code>, so that\n    they are displayed in the browser rather than prompt a download.\n  </li>\n  <li>\n    All of the properties that Wt uses are now listed in the default <code>wt_config.xml</code> to make it easier\n    to get an overview of all of them without having to find them in the reference documentation.\n  </li>\n</ul>\n\n<h3>Updates</h3>\n\n<ul>\n  <li>\n    <a href=\"https://github.com/emweb/wt/pull/162\" target=\"_blank\">PR #162</a>: Updated included Bootstrap 3 version to 3.4.1 (from 3.3.7)\n  </li>\n</ul>\n\n<h3>Bug fixes</h3>\n\n<ul>\n  <li>\n    Wt:: Auth:\n    <ul>\n      <li>\n        <a href=\"https://redmine.webtoolkit.eu/issues/7518\" target=\"_blank\">Issue #7518</a>: previously, it was\n        not possible to set\n        <a href=\"classWt_1_1Auth_1_1AbstractPasswordService_1_1AbstractStrengthValidator.html\">AbstractStrengthValidator</a>\n        to non-mandatory. This has now been fixed. It now also correctly reports\n        <a href=\"namespaceWt.html#a06744b1cf5fdeae2a8a6c0d0084fdf25\">InvalidEmpty</a> when the input is left empty.\n      </li>\n      <li>\n        Fixed an issue where slots connected to <a href=\"classWt_1_1Auth_1_1Login.html#aafb1d791aeee8b59d28faeda88e8392b\">Login::changed()</a> would still have the old session id, which would afterwards be updated, causing resource urls created in the slot to have the wrong session id.\n      </li>\n    </ul>\n  </li>\n  <li>\n    <a href=\"classWt_1_1WPaintedWidget.html\">WPaintedWidget</a>: fixed an issue where combining incremental painting (<a href=\"namespaceWt.html#a23a1002020ee93ed4679d351b7350de3\">PaintFlag::Update</a>) with images could cause the first paint event to be discarded, resulting in an incomplete result.\n  </li>\n  <li>\n    Previously, having multiple instances of <a href=\"classWt_1_1WGoogleMap.html\">WGoogleMap</a> could cause JavaScript errors. This has now been resolved.\n  </li>\n</ul>\n\n<h2>Release 4.3.1 (April 20, 2020)</h2>\n\n<p>This release fixes the following issues:</p>\n\n<ul>\n  <li>\n    <a href=\"classWt_1_1WWebWidget.html\">WWebWidget:</a> moved <code>id_</code> out of <code>OtherImpl</code>:\n    this fixes issues caused by the <code>id_</code> being removed before other things that depend on it,\n    like the <code>jsScrollVisibilityChanged_</code> signal. Fixes\n    <a href=\"https://redmine.webtoolkit.eu/issues/7508\" target=\"_blank\">issue #7508</a>.\n  </li>\n  <li>\n    Fixed join information not being copied over when copying\n    <a href=\"classWt_1_1Dbo_1_1AbstractQuery.html\">Wt::Dbo::AbstractQuery</a>.\n  </li>\n  <li>\n    MinGW fixes: Direct2D/DirectWrite were disabled and are now enabled\n    by default. Libraries were changed to lowercase for cross-compiling\n    from Linux. Windows is case-insensitive, and MinGW libraries on Linux\n    are lowercase.\n    Fixes <a href=\"https://redmine.webtoolkit.eu/issues/7505\" target=\"_blank\">issue #7505</a>.\n  </li>\n  <li>\n    Fixed a wrong documentation link in the widget gallery.\n  </li>\n</ul>\n\n<h2>Release 4.3.0 (March 26, 2020)</h2>\n\n<p>Wt 4.3.0 mainly adds the ability to redirect logging to a custom logging function, and login and transport encryption to the mail client, among some other fixes and tweaks.</p>\n\n<h3>Logging redirection (<a href=\"https://redmine.webtoolkit.eu/issues/7240\" target=\"_blank\">issue #7240</a>)</h3>\n\n<p>\nBefore, it was possible to send logging to a file or an <code>std::ostream</code>, and configure which messages were logged in <code>wt_config.xml</code>. Wt 4.3.0 extends\nthis with the ability to send all logging to a function, allowing users to redirect Wt's logs to whatever logging framework they prefer to use.\n</p>\n\n<p>The few log messages coming from Wt::Dbo would always be logged to <code>std::cerr</code>. It is now possible to change this to use Wt's logger, or a custom log function.</p>\n\n<p>To allow for this new functionality, we introduced an abstract <a href=\"classWt_1_1WLogSink.html\">WLogSink</a> class, and the following functions:</p>\n\n<ul>\n  <li><a href=\"classWt_1_1WServer.html#a45fdbea913a16a310e10e337e5933072\">WServer::setCustomLogger()</a>: sets a custom logger on the WServer level</li>\n  <li><a href=\"namespaceWt_1_1Dbo.html#a9a326a13084b93cbb33bf1c470879b0d\">Wt::Dbo::setCustomLogger()</a>: sets a custom logger globally for all of Wt::Dbo</li>\n  <li><a href=\"namespaceWt_1_1Dbo.html#ac1c13200d17c21ab7a8dfe4cbf3aed05\">Wt::Dbo::logToWt()</a>: sends all of Wt::Dbo's logging to Wt's logger</li>\n</ul>\n\n<h3>Mail client: support for login and encryption (<a href=\"https://redmine.webtoolkit.eu/issues/7444\" target=\"_blank\">issue #7444</a>)</h3>\n\n<p>\nWe added basic support for <a href=\"namespaceWt_1_1Mail.html#a2e673920327e6df099fe3ec0191fdc93a4cd8413207629a963225f4314b53adcd\">PLAIN</a> and\n<a href=\"namespaceWt_1_1Mail.html#a2e673920327e6df099fe3ec0191fdc93a99dea78007133396a7b8ed70578ac6ae\">LOGIN</a> authentication methods, and\nencryption using <a href=\"namespaceWt_1_1Mail.html#a55d819f240a3553f33e6416ecd05b91fafa91df952500d196f6a10117d98843fe\">StartTLS</a> or just\nsimple <a href=\"namespaceWt_1_1Mail.html#a55d819f240a3553f33e6416ecd05b91fa099d7d04319e5191b7473e016c55e320\">TLS</a>.\n</p>\n\n<p>\nYou can enable authentication with <a href=\"classWt_1_1Mail_1_1Client.html#a4861b5d0157663d803a3edcb97f651f4\">Client::enableAuthentication()</a>, and encryption with\n<a href=\"classWt_1_1Mail_1_1Client.html#a170288f392a84a1e4e560422843c9a74\">Client::setTransportEncryption()</a>, or using the configuration properties <code>smtp-auth-username</code>,\n  <code>smtp-auth-password</code>, <code>smtp-auth-method</code>, and <code>smtp-transport-encryption</code>.\n</p>\n\n<h3>Other changes</h3>\n\n<p>Some small changes in behaviour that you may want to be aware of:</p>\n\n<ul>\n  <li>\n    Wt::Auth: lost password tokens used to be removed as soon as the link was used, even when they were not actually used to change the password. Now, the\n    token will stay valid until the password is actually changed. Also, if the password is changed through other means, the update password token is invalidated.\n  </li>\n  <li>\n    <a href=\"classWt_1_1WCanvasPaintDevice.html\">WCanvasPaintDevice</a>: instead of stopping the drawing entirely when <code>drawImage()</code> fails (e.g. because of a missing image),\n    the image will be skipped but drawing will continue. An error will be logged to the console.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7060\" target=\"_blank\">Issue #7060</a>: fixed\n    <a href=\"classWt_1_1Http_1_1Request.html#a5f18be4100482713c257bea43a3c913b\">Request::clientAddress()</a> when behind a reverse proxy to\n    be the same as <a href=\"classWt_1_1WEnvironment.html#aedad4a59684dc41c9985a713ee4eb00a\">WEnvironment::clientAddress()</a>, and as mentioned in the documentation.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7404\" target=\"_blank\">Issue #7404</a>: reparenting of popup widgets should only stop at scroll bars.\n  </li>\n</ul>\n\n<p>Other changes and fixes:</p>\n\n<ul>\n  <li>\n    <a href=\"classWt_1_1WLength.html\">WLength</a>: added\n    <a href=\"namespaceWt.html#a736803866293d189d852d2c7adb7d94ea67bbbcb8c3f0869b19682f3dd5f27893\">LengthUnit::ViewportWidth</a>,\n    <a href=\"namespaceWt.html#a736803866293d189d852d2c7adb7d94ea1cc83e088aae799b9acb909c10c3d8b2\">LengthUnit::ViewportHeight</a>,\n    <a href=\"namespaceWt.html#a736803866293d189d852d2c7adb7d94eae21d04628175a77110405adc9338b9c2\">LengthUnit::ViewportMin</a>,\n    and <a href=\"namespaceWt.html#a736803866293d189d852d2c7adb7d94ea91b2f19f5c34f05a401200359e38e3c3\">LengthUnit::ViewportMax</a>.\n  </li>\n  <li>\n    Updated the <code>composer</code> and <code>filetreetable</code> examples to use <a href=\"classWt_1_1WLocalDateTime.html\">WLocalDateTime</a> rather than OS specific functions.\n  </li>\n  <li>\n    Refactored the <code>treelist</code> example.\n  </li>\n  <li>\n    Wt::Dbo:\n    <ul>\n      <li>added query parsing implementation based on X3 instead of Spirit Qi, which reduces compile time and memory usage.</li>\n    </ul>\n    <ul>\n      <li>added <a href=\"classWt_1_1Dbo_1_1SqlStatement.html#a4868a3639566171ac3d58e15e3bf77f3\">SqlStatement::columnCount()</a>. This\n        makes it possible to create <code>query_result_traits</code> for result types with a variable number of columns, like <code>std::vector</code>.</li>\n    </ul>\n  </li>\n  <li>\n    <a href=\"classWt_1_1WModelIndex.html\">WModelIndex</a> now has a proper ordering, even for raw indexes. This means they can properly be inserted into and retrieved from a\n    <code>std::set</code>.\n  </li>\n  <li>\n    <a href=\"classWt_1_1WServer.html\">WServer</a>: documented the <a href=\"classWt_1_1WServer.html#a5f850e30f9bd54a946c3f832d60f5b2a\">schedule()</a> function.\n  </li>\n  <li>\n    wthttp: added child process id to some of the logging related to dedicated session processes\n  </li>\n</ul>\n\n<h2>Release 4.2.2 (March 16, 2020)</h2>\n\n<p>\n  This release fixes the following issues:\n</p>\n\n<ul>\n  <li>\n    Security-related: in Wt::Auth the lost password email would be sent to the email\n    address provided in the form, rather than the user's configured email address. While\n    we treat email addresses as case insensitive, it is possible that the mail server may not,\n    and that could potentially be used to steal an account. It is however quite rare for\n    email services to be case sensitive.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7439\" target=\"_blank\">Issue #7439</a>:\n    ensure that tooltips are always on top, even inside of a dialog.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7448\" target=\"_blank\">Issue #7448</a>:\n    fixed compilation error on recent versions of MinGW, by using the <code>gmtime_s</code>\n    function on Windows.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7447\" target=\"_blank\">Issue #7447</a>:\n    fixed text format being reset when the text of a <a href=\"classWt_1_1WAnchor.html\">WAnchor</a> is cleared.\n  </li>\n  <li>\n    Fix for <a href=\"classWt_1_1WLeafletMap.html\">WLeafletMap</a> issue that was <a href=\"https://redmine.emweb.be/boards/2/topics/16718\" target=\"_blank\">reported on the forum</a>: signals would get unexposed when options were changed.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7457\" target=\"_blank\">Issue #7457</a>:\n    moved call to <a href=\"classWt_1_1WApplication.html#ae88546224ed32cade783da188b145138\">WApplication::require()</a> to the constructor, since calling it in the render function may cause issues.\n  </li>\n  <li>\n    Fixes for <a href=\"classWt_1_1WVirtualImage.html\">WVirtualImage</a>:\n    <ul>\n      <li>Do not render zero width or zero height images. This was possible when <code>imageWidth</code> or <code>imageHeight</code> was\n        a multiple of the <code>gridImageSize</code>.</li>\n      <li>Fixed <a href=\"classWt_1_1WVirtualImage.html#a0feb746fc22b907f779423bd9768109c\">scrollTo()</a> when the image is narrower than the viewport: <code>scrollTo(0, 0)</code> would not put <code>(0, 0)</code> at\n        the top left when the image was narrower (or taller) than the viewport.</li>\n    </ul>\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7480\" target=\"_blank\">Issue #7480</a>: prefix Wt's crypt functions to fix issues\n    when linking with <code>libxcrypt</code>, and also set C code's default visibility to hidden.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7468\" target=\"_blank\">Issue #7468</a>: fixed panning not working properly for a <a href=\"classWt_1_1Chart_1_1WCartesianChart.html\">WCartesianChart</a> with plain tooltips.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7482\" target=\"_blank\">Issue #7482</a>: <code>lastId_</code> in Postgres backend should be <code>long long</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/6774\" target=\"_blank\">Issue #6774</a>: misc. <a href=\"classWt_1_1WTreeView.html\">WTreeView</a> fixes.\n  </li>\n  <li>\n    Fixed use after free caused by order of destruction in <a href=\"classWt_1_1WWebWidget.html\">WWebWidget</a> destructor.\n  </li>\n</ul>\n\n<h2>Release 4.2.1 (February 6, 2020)</h2>\n\n<p>\n  This release fixes the following issues:\n</p>\n\n<ul>\n  <li>wthttp fixes:\n    <ul>\n      <li>\n        <a href=\"https://redmine.webtoolkit.eu/issues/7406\" target=\"_blank\">Issue #7406</a>: requests for absolute-form URLs (e.g. <code>GET http://localhost:8080/ HTTP/1.1</code> instead of <code>GET / HTTP/1.1</code>) are now rejected. No client normally sends requests like this to an origin server. See <a href=\"https://tools.ietf.org/html/rfc7230#section-5.3.2\" target=\"_blank\">RFC 7230, section 5.3.2</a>.\n      </li>\n      <li>\n        <a href=\"https://redmine.webtoolkit.eu/issues/7405\" target=\"_blank\">Issue #7405</a>: multiline HTTP headers (line folding) were causing\n        wthttp to segfault. This was fixed by removing support for (obsolete) line folding. See <a href=\"https://tools.ietf.org/html/rfc7230#section-3.2.4\" target=\"_blank\">RFC 7230, section 3.2.4</a>.\n      </li>\n      <li>\n        <a href=\"https://redmine.webtoolkit.eu/issues/7390\" target=\"_blank\">Issue #7390</a>: added MIME type for <code>.wasm</code> files.\n      </li>\n      <li>\n        <a href=\"https://redmine.webtoolkit.eu/issues/7384\" target=\"_blank\">Issue #7384</a>: setting the <code>--docroot</code> of wthttp\n        to <code>.;</code> will now correctly make it so that no path is interpreted as being a static resource.\n      </li>\n    </ul>\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7350\" target=\"_blank\">Issue #7350</a>: fixed <a href=\"classWt_1_1WPaintedWidget.html\">WPaintedWidget</a>'s\n    <code>wtResize</code> JavaScript to assume its preferred size when called with a size of -1.\n  </li>\n  <li>\n    Fixed possible JavaScript errors caused by <a href=\"classWt_1_1WContainerWidget.html\">WContainerWidget</a>'s <code>wtEncodeValue</code> JavaScript not    being terminated by a semicolon.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7407\" target=\"_blank\">Issue #7407</a>: fixed JavaScript memory leak related to deferred or HTML tooltips.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7360\" target=\"_blank\">Issue #7360</a>: documented <a href=\"structWt_1_1Mail_1_1Message_1_1Recipient.html\">Wt::Mail::Message::Recipient</a>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7393\" target=\"_blank\">Issue #7393</a>: if the internal path is set to invalid in initialize, Wt should still send a 404 status code.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7361\" target=\"_blank\">Issue #7361</a>: a previous attempt at fixing horizontal scrolling stutter\n    in Wt 4.1.1 caused a regression in <a href=\"classWt_1_1WTableView.html#a093b661f93551c1d6f73c423ae8ef459\">WTableView::scrollTo()</a>.\n  </li>\n  <li>\n    Fixed several issues with <a href=\"classWt_1_1WLeafletMap.html\">WLeafletMap</a> that were\n    <a href=\"https://redmine.emweb.be/boards/2/topics/16718\" target=\"_blank\">reported on the forum</a>.\n  </li>\n  <li>\n    <a href=\"classWt_1_1Chart_1_1WCartesianChart.html\">WCartesianChart</a>: when there were so many bars on\n    a bar chart that the width of a bar became 0, placing tooltips would cause a crash. Wt will now skip\n    tooltip placement when bars get too narrow.\n  </li>\n  <li>\n    <a href=\"classWt_1_1WSuggestionPopup.html\">WSuggestionPopup</a>: when\n    <a href=\"classWt_1_1WSuggestionPopup.html#a0395bd5080856eb95ccb50748f25d1c7\"><code>setDropDownIconUnfiltered(true)</code></a>\n    was used, pressing the up/down arrows to move through the list would cause it to be filtered.\n  </li>\n  <li>\n    Reverted a previous change to <a href=\"classWt_1_1WModelIndex.html\">WModelIndex</a>: since the comparison operator of model indexes\n    uses the parent, we can't insert raw indexes into a <code>std::set</code>.\n  </li>\n  <li>\n    <a href=\"https://redmine.webtoolkit.eu/issues/7353\" target=\"_blank\">Issue #7353</a>: added mention in 3.5.0 release notes about\n    <a href=\"classWt_1_1WPdfImage.html\">WPdfImage</a> pen width fix.\n  </li>\n  <li>\n    <a href=\"group__modelview.html#gaeb2f9c583490833afd55d65402b4fea9\">registerType</a> now uses <code>std::type_index</code> instead of comparing <code>type_info</code> pointers.\n  </li>\n  <li>\n    Some widgets (like <a href=\"classWt_1_1WTreeView.html\">WTreeView</a>) would not be properly sized when they were initially hidden.\n  </li>\n  <li>\n    Fixed a segfault in <a href=\"classWt_1_1WTableRow.html\">WTableRow</a>, <a href=\"https://redmine.webtoolkit.eu/boards/2/topics/16732\" target=\"_blank\">reported on the forum</a>.\n  </li>\n  <li>\n    Miscellaneous documentation fixes.\n  </li>\n  <li>\n    <b>CMake fixes:</b>\n    <ul>\n      <li>\n        <code>wt-config.cmake</code>: CMake would look for Boost even when Wt was linked dynamically, and\n        Boost was linked statically, like in our Windows builds.\n      </li>\n      <li>\n        <code>wt-config-version.cmake</code>: <code>match</code> function needed to be <code>math</code>\n      </li>\n      <li>\n        CMake needed to look for <code>Boost::filesystem</code> for some examples (but didn't).\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<p>\n  If you diff this release with the last one, it looks like we've changed a lot more, but this\n  is simply because we needed to update Emweb bvba to Emweb bv everywhere.\n</p>\n\n<h2>Release 4.2.0 (December 3, 2019)</h2>\n\n<p>\nWt 4.2.0 introduces no major new features, but comes with some nice fixes and little quality of life improvements.\n</p>\n\n<h3>Notable backwards-incompatible changes</h3>\n<ul>\n  <li><a href=\"classWt_1_1WSuggestionPopup.html\">WSuggestionPopup</a>: <a href=\"structWt_1_1WSuggestionPopup_1_1Options.html#a3e29211108f2b156a0b983a5a15ecece\">wordSeparators</a> no longer requires (extra) escaping, so a newline is indicated with the string literal \"\\n\", not \"\\\\n\". Similarly, the <a href=\"structWt_1_1WSuggestionPopup_1_1Options.html#aef3e98b66b4cc136e2c726079d6681de\">whitespace</a> property was incorrectly documented as requiring (extra) escaping.</li>\n  <li>The <a href=\"classWt_1_1WLogEntry.html\">WLogEntry</a> copy constructor&ndash;which logically performed a move&ndash;was removed and replaced by a move constructor.</li>\n  <li>Removed <code>WDatePicker::setGlobalPopup</code>&ndash;it was deprecated in Wt 3.3.0, but we forgot to remove it in Wt 4.</li>\n  <li><a href=\"classWt_1_1WLogger.html\">WLogger</a> now logs opening of log file to the previous output (usually <code>std::cerr</code>) using the logger instead of directly to <code>std::cerr</code>. This allows to disable this log message with <code>-info:WLogger</code>.</li>\n</ul>\n<h3>CMake changes</h3>\n<ul>\n  <li>\n    When using GCC and clang, the default visibility of symbols is now set to hidden. This limits the exported symbols to only Wt's public interfaces,\n    reducing the size of <code>.so</code> files and preventing accidental use of unexposed APIs.\n  </li>\n  <li>\n    Added Wt version information to Wt's CMake config files\n  </li>\n</ul>\n<h3>HTTP connector</h3>\n  <p>It's now possible to get client certificate information in wthttp when behind a reverse proxy, see the documentation for <a href=\"classWt_1_1WEnvironment.html#a04b65c4f7fe6e3b0bd652e2580b4f62e\">WEnvironment::sslInfo()</a> for more information.</p>\n  <p>This is tested to work with nginx and Apache. HAProxy is currently not supported, since its variables are in a rather different format.</p>\n  <p>Wt can still use this info even if Wt itself is compiled without OpenSSL.</p>\n<h3>Features</h3>\n<ul>\n  <li>\n    PR <a href=\"https://github.com/emweb/wt/pull/140\">#140</a>: <a href=\"classWt_1_1WLogEntry.html\">WLogEntry</a> can now use argument dependent lookup for <code>to_string</code> in its <code>operator&lt;&lt;</code>.\n  </li>\n  <li>\n    Added overloads to <a href=\"classWt_1_1WServer.html#af2100c604f1ad933256097972fd38102\">WRun()</a>,\n    <a href=\"classWt_1_1WServer.html#af22c4176fb07d6f5f3cab42ef7f36f7f\">WServer::WServer()</a>,\n    <a href=\"classWt_1_1WServer.html#a6ef2c780a70eebc68707ea0d684b8509\">WServer::setServerConfiguration()</a>,\n    and <a href=\"classWt_1_1WServer.html#afd4dc8802de5f9b93b23ea7948c8a91e\">WServer::restart()</a> that\n    take an applicationPath <code>std::string</code>, and a vector of strings for arguments, instead of <code>argc</code>, and <code>argv</code>.\n    This is more convenient if the command line arguments are generated by the application.\n  </li>\n  <li>\n    <a href=\"classWt_1_1WTreeView.html\">WTreeView</a>: added <a href=\"classWt_1_1WTreeView.html#ab7c527ce5304cdbe7f5bcb3e51880641\">collapseAll()</a>.\n  </li>\n  <li>\n    Issue <a href=\"https://redmine.webtoolkit.eu/issues/7307\" target=\"_blank\">#7307</a>: enabled top and bottom padding on a non-inline <a href=\"classWt_1_1WText.html\">WText</a>.\n  </li>\n</ul>\n<h3>Fixes</h3>\n<ul>\n  <li>\n    Limited prevention of default action of the <code>dragstart</code> event to only draggable widgets. This used to be global (set on <code>document.body</code>), but could conflict with other JavaScript libraries, especially when Wt is used in WidgetSet mode.\n  </li>\n  <li>\n    Issue <a href=\"https://redmine.webtoolkit.eu/issues/7210\" target=\"_blank\">#7210</a>: fixed removal of all widgets in a layout causing a JavaScript error\n  </li>\n  <li>\n    Fix for PR <a href=\"https://github.com/emweb/wt/pull/145\">#145</a>: fixed linking error on Windows (unresolved external symbol \"public: static struct Wt::NoClass Wt::NoClass::none\")\n  </li>\n  <li>\n    <a href=\"classWt_1_1WPainter.html\">WPainter</a>: fixed arc drawing code to be consistent across different backends, and with Qt's QPainter. Its behavior used to be erratic when angles larger than 360 degrees or lower than 0 were used.\n  </li>\n  <li>\n    <a href=\"classWt_1_1WPdfImage.html\">WPdfImage</a>: fixed double scaling of pen width (e.g. a pen of width 4 pixels, and a scaling factor of 2 would result in a 16 pixel wide pen instead of an 8 pixel wide pen).\n  </li>\n  <li>\n    Many documentation tweaks and fixes that were discovered when working on JWt 4.\n  </li>\n  <li>\n    Fixed issue <a href=\"https://redmine.webtoolkit.eu/issues/7139\" target=\"_blank\">#7139</a>: some widgets would fail to be correctly reparented.\n  </li>\n  <li>\n    Fixed issue <a href=\"https://redmine.webtoolkit.eu/issues/7336\" target=\"_blank\">#7336</a>: Wt was touching the history API every 10 ms when scrolling to store the scroll position, causing sluggishness, especially on mobile browsers with smooth scrolling. The scroll position is now saved after the user has stopped scrolling.\n  </li>\n  <li>\n    Fixed issue <a href=\"https://redmine.webtoolkit.eu/issues/7323\" target=\"_blank\">#7323</a>: updated the <a href=\"https://github.com/emweb/wt/tree/master/examples/feature/broadcast\" target=\"_blank\">broadcast</a> feature example: its use of <code>bindSafe()</code> was incorrect\n  </li>\n</ul>\n\n<h2>Release 4.1.2 (October 30, 2019)</h2>\n<p>\n  This release fixes the following issues:\n</p>\n<ul>\n  <li><b>wthttp security issues</b>:\n    <ul>\n      <li>Wt internally used an <code>SSL-Client-Certificates</code> header to send client certificates to child processes when using dedicated process mode. It was however <i>always accepted even when Wt was not behind a reverse proxy</i>, and sent to child processes as-is. <code>wthttp</code> now correctly disregards it when not received from a reverse proxy. The header was also renamed to <code>X-Wt-Ssl-Client-Certificates</code> to clarify that it is a non-standard internal Wt header.</li>\n      <li>When using dedicated session processes with wthttp, the parent process would trust <code>X-Forwarded-Proto</code> and <code>X-Forwarded-Port</code> even when Wt was not configured to be behind a reverse proxy. These are now discarded.</li>\n    </ul>\n  </li>\n  <li>\n    Fixed <a href=\"https://redmine.webtoolkit.eu/boards/2/topics/16551\" target=\"_blank\">an issue raised on the forum</a> causing <code>WTreeView</code> to not properly react to certain size changes.\n  </li>\n  <li>\n    Fixed <a href=\"https://redmine.webtoolkit.eu/issues/7291\" target=\"_blank\">issue #7291</a>: wtfcgi would not properly match default entry point\n  </li>\n  <li>\n    Fixed a few issues found by clang-analyzer:\n    <ul>\n      <li>\n        Fixed an issue in <a href=\"classWt_1_1WAnchor.html\">WAnchor</a> that would cause <code>image()</code> to return <code>nullptr</code> if it was provided in the constructor.\n      </li>\n      <li>\n        Fixed <a href=\"classWt_1_1WCssDecorationStyle.html\">WCssDecorationStyle</a> self-assignment\n      </li>\n    </ul>\n  </li>\n  <li>\n    Made tests succeed even if Wt is built with <code>ENABLE_UNWIND=ON</code>.\n  </li>\n  <li><a href=\"https://redmine.webtoolkit.eu/issues/7292\" target=\"_blank\">issue #7292</a>: <a href=\"classWt_1_1Auth_1_1OAuthService.html\">OAuthService</a> now correctly uses <code>refresh_token</code> instead of <code>refreshToken</code></li>\n  <li><a href=\"classWt_1_1Http_1_1Client.html\">Http::Client</a> fixes:\n    <ul>\n      <li>fixed <a href=\"https://redmine.webtoolkit.eu/issues/7272\" target=\"_blank\">issue #7272</a>: support <code>@</code> character in the path of a URL</li>\n      <li>fixed 204 No Content response code behavior (would hang before, waiting for content) (<a href=\"https://redmine.webtoolkit.eu/issues/7273\" target=\"_blank\">issue #7273</a>)</li>\n    </ul>\n  </li>\n  <li>More informative error and exception messages:\n    <ul>\n      <li><a href=\"classWt_1_1Dbo_1_1QueryModel.html\"><code>QueryModel</code></a>'s \"geometry inconsistent with database\" exception now contains row and cache start and size information</li>\n      <li><code>WebSession</code>'s \"not serving this\" info message contains more context so it's less confusing</li>\n    </ul>\n  </li>\n  <li>Documentation fixes:\n    <ul>\n      <li>The release notes for Wt 3.3.8 incorrectly referred to <code>allowed-hosts</code>, while this property is actually named <code>allowed-origins</code></li>\n      <li>Updated <a href=\"classWt_1_1WLocale.html#a5b1961702289e8dc6f9e2c293f9f8aa5\">WLocale::setTimeZone()</a> documentation</li>\n    </ul>\n</ul>\n\n<h2>Release 4.1.1 (September 9, 2019)</h2>\n<p>\n  This release fixes the following issues:\n</p>\n<ul>\n  <li>Fixed horizontal scrolling stutter on mobile browsers in <code>WTableView</code></li>\n  <li>Fixed <a href=\"https://redmine.webtoolkit.eu/issues/7000\" target=\"_blank\">issue #7000</a>: possible out of bounds access in <code>WTableView::itemWidget()</code></li>\n  <li>Fixed <code>valueChanged()</code> documentation of <code>WSpinBox</code> and <code>WDoubleSpinBox</code></li>\n  <li>Fixed <a href=\"https://redmine.webtoolkit.eu/issues/7164\" target=\"_blank\">issue #7164</a>: Added missing <code>&lt;stdexcept&gt;</code> include to <code>observing_ptr_impl.hpp</code></li>\n  <li>Fixed <a href=\"https://redmine.webtoolkit.eu/issues/7167\" target=\"_blank\">issue #7167</a>: configure SSL context when using <code>--https-listen</code> too (not just when using <code>--https-address</code>/<code>--https-port</code></li>\n  <li>Fixed <a href=\"https://redmine.webtoolkit.eu/issues/7187\" target=\"_blank\">issue #7187</a>: contents of <code>WTabWidget</code> did not properly stretch in height</li>\n  <li>Fixed <a href=\"https://redmine.webtoolkit.eu/issues/7193\" target=\"_blank\">issue #7193</a>: compatibility with Pango 1.44: added harfbuzz include dir</li>\n  <li>Fixed <a href=\"https://redmine.webtoolkit.eu/issues/7195\" target=\"_blank\">issue #7195</a>: contents of <code>WStackedWidget</code> would not properly respond to window size change</li>\n  <li>Fixed <a href=\"https://redmine.webtoolkit.eu/issues/7206\" target=\"_blank\">issue #7206</a>: added mention in Wt 4.0.0 release notes that <code>setObjectName()</code> does not change a widget's <code>id</code> anymore. It is now in an extra attribute called <code>data-object-name</code>.</li>\n</ul>\n\n<h2>Release 4.1.0 (July 31, 2019)</h2>\n<p>\n  This is the first release to change the versioning scheme to be more aligned with semantic versioning.\n  From now on, the last number is reserved for patches (i.e. important bug fixes), not extra features, as long as\n  those bug fixes don't require major changes. Patches will be released up until the next minor version bump.\n</p>\n<p>\n  From now on, a 4.1-release branch will track any bug fixes, while the master branch will become the next release (in this case 4.2.0)\n</p>\n<p>\n  We won't completely ban small API-breaking changes from the minor version, but we will as always avoid them as best as we can.\n</p>\n<p>\n  This also does <em>not</em> mean that Wt will now have a stable ABI. You will always have to recompile in order to do\n  a minor version upgrade of Wt. Wt has never had a stable ABI, and that isn't going to change.\n</p>\n<p>\n  Apart from that, this release features one new widget (<a href=\"classWt_1_1WLeafletMap.html\">WLeafletMap</a>) and many little tweaks, features, and bug fixes.\n</p>\n<h3>Notable backwards-incompatible changes</h3>\n<ul>\n  <li>Extensionless headers (e.g. <code>#include &lt;Wt/WApplication&gt;</code> instead of <code>#include &lt;Wt/WApplication.h&gt;</code>) have\n      been deprecated since Wt 4.0.0. These headers were now removed. Use the script <code>migrate/wt4_add_h_to_includes.py</code> if you\n      want to automate the rewriting of extensionless headers.</li>\n  <li>When using the GraphicsMagick implementation of <a href=\"classWt_1_1WRasterImage.html\">WRasterImage</a>, the rendering to\n      raster image is now done in <a href=\"classWt_1_1WPaintDevice.html#a75827be2076716985533dbc75dfdc512\">done()</a> instead of <a href=\"classWt_1_1WResource.html#a3a740f8cc29e2e6e4e58defc9c88b8b6\">handleRequest()</a>.\n      You were always supposed to destroy your instance of <a href=\"classWt_1_1WPainter.html\">WPainter</a>, or call <a href=\"classWt_1_1WPainter.html#a50beb0c8cb77c12e2dee807e4fe4bcb4\">WPainter::end()</a>\n      before e.g. using <a href=\"classWt_1_1WResource.html#ad8bbe65a888cc43e0d356f18509b9a0f\">write()</a>, but Wt used to be rather forgiving&mdash;it would just work.\n      If you are getting empty images after updating, this would likely be the reason.\n  </li>\n  <li>\n    <a href=\"classWt_1_1WApplication_1_1UpdateLock.html#a09011389bb0b9319acbcd32800852918\">WApplication::UpdateLock::operator bool()</a> and\n    <a href=\"classWt_1_1Core_1_1observing__ptr.html#a93ae9f0dd2a1553dc081faad7e1078ee\">observing_ptr::operator bool()</a> were made <code>explicit</code>,\n    so they will no longer implicitly convert to <code>bool</code>, only\n    <a href=\"https://en.cppreference.com/w/cpp/language/implicit_conversion#Contextual_conversions\" target=\"_blank\">contextually</a>.\n    This may cause some valid code to no longer compile, but it is more likely that it will actually uncover bugs.\n  </li>\n  <li>\n    The default z-index of <a href=\"classWt_1_1WPopupWidget.html\">WPopupWidget</a> was changed to 1100 instead of 100, since 1000\n    is the highest z-index used by Leaflet. This is generally considered an implementation detail, but if you have written any custom\n    CSS that sets the z-index, then you may have to update this CSS.\n  </li>\n</ul>\n<h3>New widgets</h3>\n<ul>\n  <li>\n    <a href=\"classWt_1_1WLeafletMap.html\">WLeafletMap</a>: this is a wrapper around the <a href=\"https://leafletjs.com/\" target=\"_blank\">Leaflet</a>\n         JavaScript library. It has support for some basic features of Leaflet, and one special feature: the ability to add arbitrary\n         widgets (within reason) as markers to the map using <a href=\"classWt_1_1WLeafletMap_1_1WidgetMarker.html\">WidgetMarker</a>.\n  </li>\n</ul>\n<h3>New examples</h3>\n<ul>\n  <li>\n    Added a <a href=\"classWt_1_1WLeafletMap.html\">WLeafletMap</a> example to the <a href=\"https://www.webtoolkit.eu/widgets/graphics-charts/leaflet-maps\" target=\"_blank\">widget gallery</a>\n    and in <code>examples/leaflet</code>.\n  </li>\n  <li>\n    Added an <a href=\"classWt_1_1Http_1_1Client.html\">Http::Client</a> example in <code>examples/http-client</code>.\n  </li>\n</ul>\n<h3>CMake changes</h3>\n<ul>\n  <li>\n    Wt now uses CMake's included FindOpenSSL, FindZLIB and FindPNG modules instead of its own.\n  </li>\n  <li>\n    <code>WT_CPP17_ANY_IMPLEMENTATION</code> is now set to <code>any</code> by default when <code>CMAKE_CXX_STANDARD</code> is set to\n    17 or higher, i.e. it defaults to <code>std::any</code>.\n  </li>\n  <li>\n    Removed the \"vintage\" method of finding Boost, because it has been obsolete for a long time already.\n  </li>\n  <li>\n    Fixed building with Boost 1.70 when using Boost's included package configuration files for CMake.\n  </li>\n  <li>\n    Made the <code>wtwithqt</code> example build with Qt 5 too, not just with Qt 4.\n  </li>\n  <li>\n    Made sure we can properly build <code>wtdbomysql</code> with a static MariaDB client library on Windows.\n  </li>\n</ul>\n<h3>Auth</h3>\n<ul>\n  <li>\n    Added <a href=\"classWt_1_1Auth_1_1AuthService.html#aee229af97b12975d00e7448e486f9cb2\">AuthService::setAuthTokenUpdateEnabled()</a>. Previously, when using the\n    remember me functionality the auth token (remember me cookie) would be changed. When accessing the application from two tabs at the same time, however, or when\n    refreshing quickly, this could cause the session to be logged out: the auth token has changed, but the client still uses the old one. This is still the default\n    behavior, but you can disable it by using <code>setAuthTokenUpdateEnabled(false)</code>.\n  </li>\n  <li>\n    Fixed a use-after-free issue when <a href=\"classWt_1_1Auth_1_1Login.html#aafb1d791aeee8b59d28faeda88e8392b\">Auth::Login::changed()</a> is connected to a slot that\n    removes the <a href=\"classWt_1_1Auth_1_1AuthWidget.html\">AuthWidget</a>.\n  </li>\n</ul>\n<h3>Dbo</h3>\n<ul>\n  <li>\n    Added <a href=\"classWt_1_1Dbo_1_1AbstractQuery.html\">AbstractQuery</a>, an abstract base class of <a href=\"classWt_1_1Dbo_1_1Query.html\">Query</a>,\n    to facilitate the dynamic generation of queries.\n  </li>\n  <li>\n    Added <a href=\"classWt_1_1Dbo_1_1Query.html#a3e76ffc9857381684303d46457399701\">Query::join()</a>,\n    <a href=\"classWt_1_1Dbo_1_1Query.html#aeee3f10d74361e49cce4dc049f0bdc0b\">Query::leftJoin()</a>,\n    and <a href=\"classWt_1_1Dbo_1_1Query.html#a1dd4a3461a4d99377dee24227325c63c\">Query::rightJoin()</a>.\n  </li>\n  <li>\n    Added support for <code>std::optional</code> when using C++ &ge; 17.\n  </li>\n  <li>\n    <code>std::chrono::time_point</code> and <code>std::chrono::duration</code> were treated as nullable, while they should be non-nullable, since they have\n    no reasonable \"null\" value. Use <code>std::optional</code> or <code>boost::optional</code> to make them nullable instead.\n  </li>\n  <li>\n    Fixed a query corruption bug when using <code>UNION</code>, <code>INTERSECT</code>, or <code>EXCEPT</code> (<a href=\"https://redmine.webtoolkit.eu/issues/7028\" target=\"_blank\">issue #7028</a>).\n  </li>\n  <li>\n    Fixed a crash when using <code>Session::dropTables()</code> while there is an active transaction, <a href=\"https://redmine.webtoolkit.eu/boards/2/topics/16123\" target=\"_blank\">as reported on the forum</a>.\n  </li>\n  <li>\n    PostgreSQL uses <code>?</code> for some operators, but that is also the character we use for placeholders in prepared statements. If the literal <code>?</code> is meant instead of a placeholder, you can now use <code>??</code>. This is similar to how PostgreSQL's JDBC driver handles it.\n  </li>\n</ul>\n<h3>Miscellaneous features</h3>\n<ul>\n  <li>\n    wthttp: <code>--deploy-path</code> is now prepended to <a href=\"classWt_1_1WServer.html#a84f84652ccb139850adcf5ea75f50fa5\">entry points</a> and <a href=\"classWt_1_1WServer.html#a7b78b5e35d2dc3086faa54f82124cf38\">static resources</a> when they don't start with a forward slash (<code>/</code>). Omitting the slash used to be an error.\n  </li>\n  <li>\n    <a href=\"classWt_1_1Chart_1_1WCartesian3DChart.html\">WCartesian3DChart</a>: added <a href=\"classWt_1_1Chart_1_1WCartesian3DChart.html#ac097e1922b519592a6b3732f3e8b8119\">setAxis()</a>, allowing custom <code>WAxis</code> implementations e.g. axes with <a href=\"classWt_1_1Chart_1_1WAxis.html#a7a6e079a7a0b136f77dad65b2c1abcc1\">custom labels and ticks</a>.\n  </li>\n  <li>\n    Added <a href=\"classWt_1_1ItemDataRole.html#af593515a1cc8e972679cc00e362db4ce\">ItemDataRole::MarkerType</a>, to change the <a href=\"group__charts.html#ga9f38f3460fb2575d5f4f1a1ac51a7db6\">MarkerType</a> of individual data points on a <a href=\"classWt_1_1Chart_1_1WCartesianChart.html\">2D chart</a>.\n  </li>\n  <li>\n    <a href=\"classWt_1_1Http_1_1Client.html\">Http::Client</a>:\n    <ul>\n      <li>\n        added <a href=\"classWt_1_1Http_1_1Client.html#a28336ba9677e6e3cc6c890f490f2965a\">HEAD request</a> support\n      </li>\n      <li>\n        On Windows: uses Windows root certificates. It is no longer necessary to provide a <a href=\"classWt_1_1Http_1_1Client.html#a7c9fbf7fc9f671519b0652f3bbe38521\">path</a> with certificates for validation (or worse, disable verification altogether) when using TLS to talk to a server that uses a certificate issued by a CA that is trusted by Windows. Now the <code>Http::Client</code> will generally just work with <code>https</code> sites on Windows, just like it did on Linux. This also fixes other parts of Wt that use <code>Http::Client</code>, like <a href=\"classWt_1_1Payment_1_1PayPalService.html\">PayPalService</a> and <a href=\"classWt_1_1Auth_1_1OAuthService.html\">OAuthService</a>.\n      </li>\n    </ul>\n  </li>\n  <li>\n    <a href=\"classWt_1_1WWidget.html#a1f5151154770b4956b4870cb4ecc38d3\">removeWidget()</a> and <a href=\"classWt_1_1WObject.html#a00f32a263b742f42b73a9353eaa3c7ca\">removeChild()</a> now return a more concrete <code>std::unique_ptr</code>, for convenience. Also added a similar <a href=\"classWt_1_1WFitLayout.html#a071ea55ea16e71213b3bbd2f5f497932\">WFitLayout::addWidget()</a>.\n  </li>\n  <li>\n    Wt's widget coordinate calculation code now uses <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\" target=\"_blank\">getBoundingClientRect()</a>, which means that coordinate calculations are still accurate even when CSS transforms are used to position widgets. This was necessary for <a href=\"classWt_1_1WLeafletMap_1_1WidgetMarker.html\">WidgetMarker</a> support.\n  </li>\n  <li>\n    <a href=\"classWt_1_1WTemplate.html\">WTemplate</a>'s <a href=\"structWt_1_1WTemplate_1_1Functions.html#ab070ae026639fb7edc0c70db6510abc7\">while_f</a> function now takes extra arguments, similar to the <a href=\"structWt_1_1WTemplate_1_1Functions.html#a734f46b7a8155cbc6cf0407dd3dbe85d\">block</a> function.\n  </li>\n  <li>\n    Added <a href=\"classWt_1_1WResource.html#a6695dad28a25c7cbfef93c371e7c5a1e\">WResource::setTakesUpdateLock()</a> as a way to make a (non-static) resource grab the <a href=\"classWt_1_1WApplication.html\">WApplication</a>'s <a href=\"classWt_1_1WApplication_1_1UpdateLock.html\">UpdateLock</a> before <a href=\"classWt_1_1WResource.html#a3a740f8cc29e2e6e4e58defc9c88b8b6\">handleRequest()</a>.\n  </li>\n  <li>\n    Made it possible to set a <a href=\"classWt_1_1WTableView.html#afc65ef8675ae2d53300eaa511c1fad6b\">preload margin</a> on <code>WTableView</code>. This\n    allows to customize how much of the table's contents should be loaded. Higher preload margin means fewer but larger updates of the table's contents\n    when scrolling.\n  </li>\n</ul>\n<h3>Miscellaneous bug fixes</h3>\n<ul>\n  <li>Fixed an issue where JavaScript could be sent to the browser in the wrong order when doing background updates of hidden widgets\n    (<a href=\"https://redmine.webtoolkit.eu/issues/7023\" target=\"_blank\">issue #7023</a>)</li>\n  <li>Fixed a client side memory leak caused by misuse of jQuery's data feature (<a href=\"https://redmine.webtoolkit.eu/boards/2/topics/15941\" target=\"_blank\">reported on the forums</a>)</li>\n  <li><a href=\"classWt_1_1WTableView.html\">WTableView</a>: fixed row deletion behavior</li>\n  <li>Fixed icons not showing up on tabs and menu items when using <a href=\"classWt_1_1WBootstrapTheme.html\">WBootstrapTheme</a>, as <a href=\"https://redmine.webtoolkit.eu/boards/1/topics/15664\" target=\"_blank\">reported on the forums</a>.</li>\n  <li>Fixed wrong <a href=\"classWt_1_1WStackedWidget.html\">WStackedWidget</a> height when animating transitions (<a href=\"https://redmine.webtoolkit.eu/issues/6788\" target=\"_blank\">issue #6788</a>)</li>\n  <li>Fixed not able to hide widgets with a flexbox-based layout (<a href=\"https://redmine.webtoolkit.eu/issues/6884\" target=\"_blank\">issue #6884</a>)</li>\n  <li>Fixed out of bounds array access when using a widget with a custom HTML tag name (<a href=\"https://redmine.webtoolkit.eu/issues/7059\" target=\"_blank\">issue #7059</a>). Widgets will now derive whether they are default inline based on the widget's default DOM element type.</li>\n  <li>Fixed a regression in <a href=\"classWt_1_1WDate.html#a6d604c9c4409729abbe4a334c4d69368\">WDate::addMonths()</a> and <a href=\"classWt_1_1WDate.html#ab03f57a16749501343b8368047199002\">addYears()</a>, introduced in Wt 4.0.0. When a day would not exist in the resulting month, this would yield an invalid month. Instead, it will now (as it did in Wt 3) set the date to the last day of that month, e.g. May 31, 2019 + 6 months becomes November 30, 2019.</li>\n  <li>Fixed an issue where mouse signals of a <a href=\"classWt_1_1WTreeView.html\">WTreeView</a> would fire multiple times (<a href=\"https://redmine.webtoolkit.eu/issues/6260\" target=\"_blank\">issue #6260</a>)</li>\n  <li>\n    wthttp WebSocket fixes:\n    <ul>\n      <li>\n        WebSocket requests for non-existent sessions (often the result of restarting the server) no longer create a new bogus session.\n      </li>\n      <li>\n        WebSocket messages with continuation frames (as sent by Google Chrome when the messages become very large) could become corrupted,\n        especially when per-message-deflate is used (<a href=\"https://redmine.webtoolkit.eu/issues/7039\" target=\"_blank\">issue #7039</a>,\n        <a href=\"https://redmine.webtoolkit.eu/issues/7034\" target=\"_blank\">#7034</a>).\n      </li>\n      <li>\n        WebSocket message size is now properly limited by <code>--max-memory-request-size</code>. Previously, this would only limit the size\n        of individual frames, not the entire message.\n      </li>\n      <li>\n        Fixed a possible use-after-free or double delete issue when an invalid WebSocket message was received.\n      </li>\n    </ul>\n  </li>\n  <li>\n    Fixed undefined <code>ackId</code> overflow behavior (which could very rarely cause a session to fail)\n  </li>\n  <li>\n    <a href=\"classWt_1_1WContainerWidget.html#a60e57a8860785d6b587a36b616cb5e12\">WContainerWidget::setLayout()</a> now properly clears any existing contents of the container.\n    This would previously cause JavaScript errors (<a href=\"https://redmine.webtoolkit.eu/issues/7128\">issue #7128</a>).\n  </li>\n</ul>\n\n<h2>Release 4.0.5 (December 14, 2018)</h2>\n<p>Wt 4.0.5 is almost entirely a bugfix release. Here are the key changes:</p>\n\n<h3>Minor API breaking changes</h3>\n\n<h4>ItemDataRole</h4>\n<p>One of the things we changed in Wt 4 is the type of roles in the\n<a href=\"group__modelview.html\">MVC system</a>. They are no longer\nrepresented by an enum, but now through a\n<a href=\"classWt_1_1ItemDataRole.html\">class that's a thin wrapper\naround an int</a>. We however forgot to update the role's type in\na few places, and this release rectifies that. The following methods\nhave been updated:</p>\n\n<ul>\n  <li><a href=\"classWt_1_1WIdentityProxyModel.html#acfa2c2b201f8919e462e1a2d498b75ab\">WIdentityProxyModel::setHeaderData()</a></li>\n  <li><a href=\"classWt_1_1WSuggestionPopup.html#a0abf89a25ea7eece7d36391d56130cf7\">WSuggestionPopup::setEditRole()</a></li>\n  <li><a href=\"classWt_1_1WSuggestionPopup.html#acba647adde23e76f2ce5446b60145aa0\">WSuggestionPopup::editRole()</a></li>\n</ul>\n\n<h4>Wt::Auth::UpdatePasswordWidget</h4>\n<p>The <a href=\"classWt_1_1Auth_1_1UpdatePasswordWidget.html\">UpdatePasswordWidget</a>,\npart of the authentication subsystem of Wt, would delete itself when done.\nThis was harmless when it was inside of a <a href=\"classWt_1_1WDialog.html\">WDialog</a>, but it's less practical when\nused elsewhere. We've changed the behavior of <code>UpdatePasswordWidget</code> to emit the\n<a href=\"classWt_1_1Auth_1_1UpdatePasswordWidget.html#a6c6bedf0628488cbb09d44c6df441004\">updated()</a> and\n<a href=\"classWt_1_1Auth_1_1UpdatePasswordWidget.html#a640d20893579fcc2642ac62f0a550b6a\">canceled()</a>\nsignals instead.</p>\n\n<h3>Dbo: reentrant statement use</h3>\n<p>For the longest time, the Dbo tutorial has mentioned that\n&ldquo;you need to be careful to not have two collections with the same statement busy at the same time&rdquo;.\nIf you did attempt concurrent use of statements, an exception mentioned that\n&ldquo;Reentrant statement use is not yet implemented&rdquo;. Starting from\nWt 4.0.5, you won't see that error anymore. Dbo will now\nclone the prepared statement as needed.</p>\n\n<h3>Flex layout fixes</h3>\nOne of Wt 4's niceties is the fact that the layout managers now rely less on JavaScript, but employ flexbox instead. This\ndid not work perfectly, though, so it was still possible to switch the implementation to the old JavaScript method if things\ndid not work correctly. We fixed many issues in the flex layout implementation, and now the widget gallery works\ncorrectly using flexbox (pending an overhaul to make the widget gallery more responsive and more in line with the Wt homepage theme).\n\n<h2>Release 4.0.4 (August 22, 2018)</h2>\n<p>This release brings with it the usual bugfixes, but also some new features:</p>\n\n<h3>WCartesianChart improvements</h3>\n\n<h4>Multiple Y axis support</h4>\n\n<p>In previous versions of Wt, it was already possible to have two separate Y axes. This release\nallows for any amount of Y axes, and extends the interactive functionality to support multiple Y axes.</p>\n\n<p>The following methods have been added:</p>\n\n<dl>\n  <dt><a href=\"classWt_1_1Chart_1_1WCartesianChart.html\"><code>WCartesianChart</code></a></dt>\n  <dd>\n    <ul>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a44f9ac7c63b7ccf0be2cc925c8159094\"><code>std::vector&lt;WAxis*&gt; yAxes()</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a457197f9f6a0215a260922a47dde9115\"><code>std::vector&lt;const WAxis*&gt; yAxes() const</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a3b0038712fce477634c39cdc736c2388\"><code>WAxis&amp; yAxis(int i)</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#ab301c3aed79917163a093ca102cc4563\"><code>const WAxis&amp; yAxis(int i) const</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#aa9d7bbc307118d222aca64deb76b60d5\"><code>int yAxisCount() const</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a0abfca1c61508d49f9c8b5e95e896b4b\"><code>int addYAxis(std::unique_ptr&lt;WAxis&gt; waxis)</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a8e884bd514607231e025b1c06aed6b8e\"><code>std::unique_ptr&lt;WAxis&gt; removeYAxis(int yAxisId)</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a34329c849eaa8761f730d027c9c47af9\"><code>void clearYAxes()</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a191d840f367d27f66612b8e68009f888\"><code>WPointF mapFromDevice(const WPointF &amp;point, int ordinateAxis) const</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#aad25e33c3a389c99ea63f606a30e2f65\"><code>WPointF mapToDevice(const Wt::cpp17::any &amp;xValue, const Wt::cpp17::any &amp;yValue, int yAxis, int xSegment = 0, int ySegment = 0) const</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a9f31ca5174b6127e49ad92c9da481adc\"><code>void setCrosshairYAxis(int yAxis)</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#abdac8c6bf3f39c524054645f8b063383\"><code>int crosshairYAxis() const</code></a></li>\n    </ul>\n    <b>Small breaking change</b>: note that the virtual method <a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a1813b0cfd8692b5b5720b5b9e7fa807b\"><code>prepareAxes</code></a> has been modified to take a <a href=\"classWt_1_1WPaintDevice.html\"><code>WPaintDevice*</code></a> argument. If your code overrides this method, be sure to add this argument to your overridden version.\n  </dd>\n  <dt><a href=\"classWt_1_1Chart_1_1WDataSeries.html\"><code>WDataSeries</code></a></dt>\n  <dd>\n    <ul>\n      <li><a href=\"classWt_1_1Chart_1_1WDataSeries.html#aafffe717e28c00afea645652a9b6a655\"><code>WDataSeries(int modelColumn, SeriesType seriesType, int yAxis)</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WDataSeries.html#ae3abca77e796e8d0c1b1e5830ef80866\"><code>void bindToYAxis(int yAxis)</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WDataSeries.html#a338558cb67b5114f7d9de07192a3c1a8\"><code>int yAxis() const</code></a></li>\n    </ul>\n  </dd>\n</dl>\n\n<p>It's also possible to pan and zoom individual axes by scrolling on or dragging the axis itself, or by touch dragging and pinching.</p>\n\n<h4>On-demand loading</h4>\n\n<p>We've added on-demand loading functionality to <a href=\"classWt_1_1Chart_1_1WCartesianChart.html\"><code>WCartesianChart</code></a>. Enable on-demand loading when you have a lot of data and/or need the ability to zoom in very far. This will make it so that only the data for the visible X range is loaded, and will improve performance of data series with large amounts data. This becomes especially useful in combination with the ability to set a maximum zoom range, so that you can't zoom all the way out to see all data.</p>\n\n<p>The following methods have been added:</p>\n\n<dl>\n  <dt><a href=\"classWt_1_1Chart_1_1WCartesianChart.html\"><code>WCartesianChart</code></a></dt>\n  <dd>\n    <ul>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a97f7f38a9f751b0b41d67f4546cc32f9\"><code>void setOnDemandLoadingEnabled(bool enabled)</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a2380aeb17e103bae1f332fd4c56d6b2b\"><code>bool onDemandLoadingEnabled() const</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a9072e157f556bd8eea1eef14426d4f29\"><code>void setLoadingBackground(const WBrush &amp;brush)</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a3e33918e5cbee75d172ab820e71f69bc\"><code>const WBrush&amp; loadingBackground() const</code></a></li>\n    </ul>\n  </dd>\n  <dt><a href=\"classWt_1_1Chart_1_1WAxis.html\"><code>WAxis</code></a></dt>\n  <dd>\n    <ul>\n      <li><a href=\"classWt_1_1Chart_1_1WAxis.html#ada743ccf44212cfb1f4a6fa83b79e581\"><code>void setMaximumZoomRange(double size)</code></a></li>\n      <li><a href=\"classWt_1_1Chart_1_1WAxis.html#a10742d531e8141474ea707d3c4730386\"><code>double maximumZoomRange() const</code></a></li>\n    </ul>\n  </dd>\n</dl>\n\n<p>Note that the data must be ordered on X axis value for this feature to work properly.</p>\n\n<h3>Path parameters</h3>\n\n<p>It's now possible to use variables in <a href=\"classWt_1_1WServer.html#a7b78b5e35d2dc3086faa54f82124cf38\"><code>WServer::addResource()</code></a>, e.g. <code>server.addResource(&amp;resource, &quot;/users/${user}&quot;)</code>.</p>\n\n<p>These parameters are then accessible in the <code>WResource</code>'s <code>handleRequest()</code> function through\n<a href=\"classWt_1_1Http_1_1Request.html#af6917bd5182e9a33f74e3e7191899495\"><code>Http::Request::urlParams()</code></a>\nand <a href=\"classWt_1_1Http_1_1Request.html#a0100186e6bc33bd221e25799e2059f7d\"><code>Http::Request::urlParam(const std::string&amp;)</code></a>.</p>\n\n<p>A feature example demonstrating this was added in <code>examples/feature/urlparams</code>.</p>\n\n<h3>Idle timeout</h3>\n\n<p>Added an <code>&lt;idle-timeout&gt;</code> option to the configuration (<code>wt_config.xml</code>). If set,\n<a href=\"classWt_1_1WApplication.html#a4e8020fca24d09661ee4bf13400354d9\"><code>WApplication::idleTimeout()</code></a> will be triggered after the configured number of seconds.</p>\n\n<p>This is intended to prevent unauthorized people from using an active session from a\ndevice that's been abandoned by the user.</p>\n\n<a href=\"classWt_1_1WFileDropWidget.html\"><h3>WFileDropWidget</h3></a>\n\n<p>Added the ability to set a\n<a href=\"classWt_1_1WFileDropWidget.html#a9ad41a8986a7bbb25178e0cda850333d\">JavaScript filter</a>, e.g. to\ncompress uploads client side.\n\n<h3>Miscellaneous improvements</h3>\n\n<ul>\n  <li>Added support for transparency in PDFs</li>\n  <li>Rudimentary support for drawing SVGs on HTML canvas with <code>WPainter::drawImage</code></li>\n  <li>\n    <a href=\"classWt_1_1Dbo_1_1backend_1_1MySQL.html\"><code>Wt::Dbo::backend::MySQL</code></a>:\n    Fixed compatibility with MySQL Connector/C 8.0 and MariaDB Connector/C 3.0\n  </li>\n  <li>\n    Added <a href=\"classWt_1_1WEnvironment.html#ad2846f6fd581cd6c8c6933eff0e5fa73\"><code>WEnvironment::timeZoneName()</code></a>\n  </li>\n  <li>\n    Added <code>insertTab</code>, <code>itemAt</code> and <code>currentItem</code> to\n    <a href=\"classWt_1_1WTabWidget.html\"><code>WTabWidget</code></a>\n  </li>\n  <li>\n    Disabled TLS v. 1.0 and 1.1 support\n  </li>\n</ul>\n\n<h2>Release 4.0.3 (April 12, 2018)</h2>\n<p>This release fixes compatibility with Boost 1.66, fixes some bugs, and adds\nsome functionality:</p>\n<dl>\n  <dt>WFileUpload: added display widget</dt>\n  <dd>Often, native file upload field look out of place in the rest of a web application's design.\n      A common trick is to hide the file upload field, and add another widget that forwards its click\n      signal to the file upload field. We added\n      <a href=\"classWt_1_1WFileUpload.html#ab95ec35db690296e848d89a71c23737a\">setDisplayWidget()</a>\n      to make it easy to implement that trick.</dd>\n  <dt>WFileDropWidget: added drop indication and global drop</dt>\n  <dd>When <a href=\"classWt_1_1WFileDropWidget.html#a0c1400a6f7f63eec4bb1cfe30807538e\">drop indication</a>\n  is enabled, a WFileDropWidget will be highlighted as soon\n  as a file being dragged enters the page. When\n  <a href=\"classWt_1_1WFileDropWidget.html#a051b4928cb26446de1eb3617d0f8c954\">global drop</a> is enabled, then a drop\n  anywhere on the page will put the file in the WFileDropWidget.</dd>\n  <dt>SqlConnection::executeSqlStateful()</dt>\n  <dd><a href=\"classWt_1_1Dbo_1_1SqlConnection.html#a7ac824e554074898f10cf75b70a4a6b1\">SqlConnection::executeSqlStateful()</a> allows to execute SQL that should be re-executed upon automatic reconnect. Automatic reconnect\n  is currently supported for the <a href=\"classWt_1_1Dbo_1_1backend_1_1Postgres.html\">Postgres</a>\n  and <a href=\"classWt_1_1Dbo_1_1backend_1_1MySQL.html\">MySQL</a> backends.</dd>\n  <dt>WTableView: exposed touch events</dt>\n  <dd>\n    We made it possible to define custom behaviour upon touch events on WTableView, by\n    adding the <a href=\"classWt_1_1WAbstractItemView.html#acd980e6a9eb110400f334e341f8386a4\">touchStarted()</a>,\n    <a href=\"classWt_1_1WAbstractItemView.html#aaf371c95c294c952be0eaac5b3f56af7\">touchMoved()</a>, and\n    <a href=\"classWt_1_1WAbstractItemView.html#a9f3bd68d6d5ca982b2a22bcd100ea271\">touchEnded()</a> signals.\n  </dd>\n</dl>\n\n<h2>Release 4.0.2 (November 24, 2017)</h2>\n<p>This is a patch release that fixes a few problems with the build of Wt 4.0.1, and fixes a bug in Wt::Auth.</p>\n\n<h2>Release 4.0.1 (November 21, 2017)</h2>\n<p>This is a smaller release with mostly bugfixes, and some new features:</p>\n<dl>\n  <dt>Added <a href=\"classWt_1_1WContainerWidget.html#acf75dda5024db05cf847c282f8a99117\">WContainerWidget::addNew()</a> and similar methods</dt>\n  <dd>\n    <p>Because writing code like this:</p>\n    <div class=\"fragment\">\n      <div class=\"line\">auto text = root()-&gt;addWidget(std::make_unique&lt;Wt::WText&gt;(\"Hello!\"));</div>\n    </div>\n    <p>is a bit verbose, a shorthand was added that creates the widget and adds it to the container in one go:</p>\n    <div class=\"fragment\">\n      <div class=\"line\">auto text = root()-&gt;addNew&lt;Wt::WText&gt;(\"Hello!\");</div>\n    </div>\n<p>\n  <code>addNew</code> forwards its arguments to the constructor, just like <code>std::make_unique</code>.\n  Along those lines, we added <a href=\"classWt_1_1WContainerWidget.html#a5a7e7b9fe21bdc38f7a270193ed83243\">WContainerWidget::insertNew()</a> and <a href=\"classWt_1_1WTemplate.html#a240f910cd1e3d5b7876aa20f6b33767c\">WTemplate::bindNew()</a>.\n</p>\n  </dd>\n  <dt>Added the <code>&lt;max-formdata-size&gt;</code> configuration option</dt>\n  <dd>Previously, the maximum size of form data sent by Wt in a single POST request was capped to 5 MiB.\n      In applications with a large amount of forms with a lot of data, that may not be enough,\n      so <code>&lt;max-formdata-size&gt;</code> can be used to adjust this independently. Note that\n      the maximum request size (and by consequence, the form data size) is still capped by\n      <code>&lt;max-request-size&gt;</code>.</dd>\n</dl>\n\n<h2>Release 4.0.0 (September 19, 2017)</h2>\n<p>\n  This release has all of the added features of Wt 3.3.8, but comes with many notable changes. In general,\n  Wt 4 employs the more modern C++ style of C++11 and beyond. Support for compilers\n  without sufficient C++11 support is dropped completely. Wt 4 aligns more with the\n  <a href=\"https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md\">C++ Core Guidelines</a>\n  in a pragmatic way, while keeping the API familiar.\n</p>\n<h3>New features since Wt 3.3.8</h3>\n<dl>\n  <dt>Microsoft SQL Server backend for Wt::Dbo</dt>\n  <dd>We've added Microsoft SQL Server support to Wt::Dbo, making it the sixth\n      backend we support, alongside Sqlite, PostgreSQL, MySQL (and MariaDB),\n      Firebird, and Oracle (not part of the open source Wt because of licensing).\n      With this addition, Wt::Dbo now supports most commonly used relational database management systems.\n      It's based on ODBC and works with Microsoft's ODBC Driver\n      for SQL Server. With unixODBC, Linux and macOS are also supported.</dd>\n  <dt>Added support for listening on multiple interfaces and ports to wthttp</dt>\n  <dd>\n    <p>\n      With the multivalued <code>--http-listen</code> and <code>--https-listen</code> options,\n      you can now listen on multiple interfaces and ports. For example, if you want to\n      listen on port 8080 on all IPv4 and IPv6 interfaces, you can use:\n    </p>\n    <div class=\"fragment\">\n      <div class=\"line\">--http-listen 0.0.0.0:8080 --https-listen [0::0]:8080</div>\n    </div>\n    <p>\n      <code>--http-listen</code> and <code>--https-listen</code> obsolete the\n      <code>--http-address</code>, <code>--http-port</code>, <code>--https-address</code>, and <code>--https-port</code>\n      options.\n    </p>\n  </dd>\n</dl>\n<h3>Changes in Wt's memory model</h3>\n<p>\nLike before, the parent widget (e.g. a <a href=\"classWt_1_1WContainerWidget.html\">WContainerWidget</a>) owns\nits child widgets. This has not changed. Wt 4 makes ownership transfers more clear by using <code>std::unique_ptr</code>\nThere are no more owning raw pointers in Wt's public API.\n</p>\n<p>\nBy consequence of using <code>unique_ptr</code>, constructors no longer take a <code>parent</code> argument. For\nconvenience, <a href=\"classWt_1_1WContainerWidget.html#a3341360fc6cc1e86c1a42a3a54d9e0c7\">addWidget()</a>\nnow returns a (non-owning) raw pointer. Instead of doing:\n</p>\n<div class=\"fragment\">\n  <div class=\"line\"><span class=\"comment\">// parent is a Wt::WContainerWidget*</span></div>\n  <div class=\"line\">Wt::WPushButton *button = new Wt::WPushButton(\"Click me\", parent); <span class=\"comment\">// Wt 3: parent owns the button</span></div>\n</div>\n<p>or:</p>\n<div class=\"fragment\">\n  <div class=\"line\">Wt::WPushButton *button = new Wt::WPushButton(\"Click me\");</div>\n  <div class=\"line\">parent-&gt;addWidget(button); <span class=\"comment\">// Wt 3: ownership is transferred to parent through addWidget</span></div>\n</div>\n<p>You can now do:</p>\n<div class=\"fragment\">\n  <div class=\"line\"><span class=\"comment\">// Wt 4 (with C++14's std::make_unique)</span></div>\n  <div class=\"line\">Wt::WPushButton *button = parent-&gt;addWidget(std::make_unique&lt;Wt::WPushButton&gt;(\"Click me\"));</div>\n</div>\n<p>\n  <code>Wt::cpp14::make_unique</code> can be used instead of <code>std::make_unique</code> if C++14 support is unavailable.\n</p>\n<p>\nSome classes were changed from the old single ownership\nmodel to shared ownership through <code>std::shared_ptr</code>, like models (<a href=\"classWt_1_1WAbstractItemModel.html\">WAbstractItemModel</a>, <a href=\"classWt_1_1Chart_1_1WAbstractChartModel.html\">WAbstractChartModel</a>, and derivates) and <a href=\"classWt_1_1WValidator.html\">validators</a>.\n</p>\n<p>\n<a href=\"classWt_1_1Core_1_1observing__ptr.html\">Wt::Core::observing_ptr</a> was introduced. This pointer will\nbe notified when the object it points to is deleted. <code>observing_ptr</code>s are intended to be used within the\nscope of a <a href=\"classWt_1_1WApplication.html\">WApplication</a> and are not thread safe. Every\n<a href=\"classWt_1_1WObject.html\">WObject</a> (and by consequence, every <a href=\"classWt_1_1WWidget.html\">widget</a>)\nis an <a href=\"classWt_1_1Core_1_1observing_ptr.html\">observable</a>, so its lifetime can be observed with\nan <code>observing_ptr</code>. Their use is entirely optional, but they may be useful when the lifetime of an\nobject is not always clear.\n</p>\n<h3>Header files now end in .h</h3>\nWt 3 used extensionless headers. This confuses many editors and IDEs.\nFor Wt 4, the <code>.h</code> extension was added, and using the old style headers is deprecated. You can use the\nPython script <a href=\"https://github.com/emweb/wt/blob/wt4/migrate/wt4_add_h_to_includes.py\">migrate/wt4_add_h_to_includes.py</a> to help update your Wt includes.\n<h3>Enums replaced by enum classes</h3>\nMany enums were replaced with enum classes, and many have been moved from class scope to namespace scope, e.g.:\n<div class=\"fragment\">\n  <div class=\"line\">enum SelectionMode {</div>\n  <div class=\"line\">&nbsp;&nbsp;NoSelection = 0,</div>\n  <div class=\"line\">&nbsp;&nbsp;SingleSelection = 1,</div>\n  <div class=\"line\">&nbsp;&nbsp;ExtendedSelection = 3</div>\n  <div class=\"line\">};</div>\n</div>\nbecame:\n<div class=\"fragment\">\n  <div class=\"line\">enum class SelectionMode {</div>\n  <div class=\"line\">&nbsp;&nbsp;None = 0,</div>\n  <div class=\"line\">&nbsp;&nbsp;Single = 1,</div>\n  <div class=\"line\">&nbsp;&nbsp;Extended = 3</div>\n  <div class=\"line\">};</div>\n</div>\nSome enums were preserved in places were the added verbosity\nwas undesirable, like the <a href=\"group__dbo.html#ga1d0ec6819b1bf5b7a88ad030b91ca564\">Wt::Dbo::RelationType</a> enum.\n<h3>Replacements for Boost</h3>\n    Many features of Boost that Wt relied on were made obsolete by C++11. Many other Boost features have been replaced\n    with C++11-based alternatives.\n\n    <dl>\n      <dt>Choice between Boost.Asio and standalone Asio</dt>\n      <dd>\n        The CMake option <code>WT_ASIO_IMPLEMENTATION</code> allows to choose between <code>boost</code> and <code>standalone</code>\n\tAsio.</dd>\n      <dt>Removal of Boost usage in Wt headers</dt>\n      <dd>\n        If standalone Asio is used, the installed headers of Wt no longer include any Boost headers.\n\tThe Windows builds of Wt 4 will from now on no longer include Boost,\n\tincluding only the standalone Asio headers instead. This just about halves the size of the installer.\n\tIf you want to use Boost, you'll have to provide your own. You can find prebuilt Boost binaries for Windows\n\t<a href=\"https://sourceforge.net/projects/boost/files/boost-binaries/\">here</a>.\n      </dd>\n      <dt>Boost.Date_Time was replaced with Howard Hinnant's <code>std::chrono</code>-based date implementation</dt>\n      <dd>\n      The author of the <code>std::chrono</code> standard has created a\n      <a href=\"https://github.com/HowardHinnant/date\">library for dates and time zones</a>.\n\tThis library is proposed for inclusion into the C++ standard in the future. For now, Wt includes\n\tthis date and time zone library (at this moment, this is version 2.2). This is used for all time-related\n\tclasses, like <a href=\"classWt_1_1WDate.html\">WDate</a>,\n\t<a href=\"classWt_1_1WTime.html\">WTime</a>, <a href=\"classWt_1_1WDateTime.html\">WDateTime</a>,\n\tand <a href=\"classWt_1_1WLocalDateTime.html\">WLocalDateTime</a>.\n      </dd>\n      <dt>\n        Boost.Any replaced by <code>Wt::cpp17::any</code>\n      </dt>\n      <dd>\n        <a href=\"classWt_1_1WStandardItemModel.html\">WStandardItemModel</a> relied heavily on\n\t<code>boost::any</code>. This was replaced with <code>Wt::cpp17::any</code>. You can choose the\n\timplementation of <code>any</code> to use with the CMake option <code>WT_CPP17_ANY_IMPLEMENTATION</code>.\n\tValid options are:\n\t<ul>\n\t  <li><a href=\"https://github.com/thelink2012/any\">thelink2012</a>: this is the default implementation, included in Wt</li>\n\t  <li><code>experimental</code> for <code>std::experimental::any</code></li>\n\t  <li><code>std</code> for C++17's <code>std::any</code></li>\n\t</ul>\n      </dd>\n      <dt>Boost.Signals2 replaced with own implementation</dt>\n      <dd>\n        <p>\n          Wt did not use many of the features of Boost.Signals2. Since C++11, many more efficient alternatives\n\t  have been created. Wt 4's implementation, based on\n\t  <a href=\"https://testbit.eu/cpp11-signal-system-performance/\">this blog post</a>, offers better performance\n\t  and more understandable stack traces. It's now no longer necessary to\n\t  use <code>std::bind</code> with lambda functions, e.g.:\n        </p>\n\t<div class=\"fragment\"><div class=\"line\">button-&gt;clicked().connect(std::bind([]{ std::cout &lt;&lt; \"Clicked!\" &lt;&lt; std::endl; })); <span class=\"comment\">// Wt 3</span></div></div>\n        <p>\n\t  can be changed to:\n        </p>\n\t<div class=\"fragment\"><div class=\"line\">button-&gt;clicked().connect([]{ std::cout &lt;&lt; \"Clicked!\" &lt;&lt; std::endl; }); <span class=\"comment\">// Wt 4</span></div></div>\n\t<p>\n\t  Boost.Signals2, together with <code>boost::bind</code>, allowed you to automatically disconnect slots\n\t  when one of their bound arguments was deleted, if the argument was a derived class of\n\t  <code>boost::signals2::trackable</code>. In Wt 4, this is no longer the case. Instead, you\n\t  can provide a target <a class=\"classWt_1_1WObject.html\">WObject</a> as the first argument to\n\t  the connect function, and Wt will disconnect the slot when the target <code>WObject</code> is deleted.\n\t</p>\n\t<p>\n\t  <code>WApplication::bind</code> has been removed, and instead\n\t  <a href=\"classWt_1_1Core_1_1observable.html#a8ef9ce1dc22e3bae13e198b27e6b64cc\">observable::bindSafe</a>\n\t  was introduced. <code>bindSafe</code> will guard the <code>observable</code>, returning a function\n\t  object that doesn't do anything if the <code>observable</code> has been deleted.\n\t</p>\n      </dd>\n      <dt>Other Boost libraries obsoleted by C++11</dt>\n      <dd>Boost.Thread, Boost.Regex and Boost.Random were mostly replaced by their STL counterparts. Only\n          Boost.Thread is used internally in Wt 4 because Wt uses some mutex functionality that's not part of\n          C++11.</dd>\n    </dl>\n  <h3>Other changes:</h3>\n    <ul>\n      <li>\n\t<a href=\"classWt_1_1ItemDataRole.html\">ItemDataRole</a> is now a class instead of an enum.\n      </li>\n      <li>\n\tWt 4 assumes that <code>std::string</code> is UTF-8 encoded by default, so\n\t<a href=\"classWt_1_1WString.html#a64d17e31e557208ab8d8ea765c1e52b8\">WString(std::string)</a>\n\twill assume that the argument is UTF-8 encoded. Overloads for new C++11 string types\n\t(<code>std::u16string</code>, <code>std::u32string</code>) have been added.\n      </li>\n      <li>\n\tIntervals and other durations previously indicated by <code>int</code>s have been replaced by\n\t<code>std::chrono::duration</code>s, e.g. in\n\t<a href=\"classWt_1_1WIOService.html#a5e445e207ee36f75cea4ba7ae321d7dc\">WIOService::schedule()</a> or\n\t<a href=\"classWt_1_1Http_1_1Client.html#a84856aabdef30b9e91bb3c4d30b9ecd1\">Wt::Http::Client::setTimeout()</a>.\n      </li>\n      <li>\n\t<a href=\"classWt_1_1WBoxLayout.html\">WBoxLayout</a> is now implemented with flexbox instead of JavaScript\n\tby default. Wt will fallback to the old JavaScript implementation when functionality unavailable in\n\tthe flexbox implementation is used, use\n\t<a href=\"classWt_1_1WLayout.html#a9cd0547c710e357e4c688ccfdb790d8f\">WBoxLayout::setPreferredImplementation</a>\n\tto set a preferred implementation.\n      </li>\n      <li>\n        <a href=\"classWt_1_1WObject.html#a64ce31cadb378c4eba81224f43bf493d\">setObjectName()</a> no longer affects the <code>id</code> of a widget. Instead, it is\n        placed into an extra attribute called <code>data-object-name</code>. <code>selenium/wtLocators.js</code>\n        has been updated to reflect this change.\n      </li>\n    </ul>\n  <h3>Removal of deprecated functionality</h3>\n    <ul>\n      <li>\n\tEverything that was marked as deprecated in Wt 3.3.7 has been removed,\n\tincluding <code>Wt::Ext</code>.\n      </li>\n      <li>\n\t<code>WScrollArea</code> was removed, use CSS or\n\t<a href=\"classWt_1_1WContainerWidget.html#af3d9510f569deed060689aa509ecc831\">WContainerWidget::setOverflow()</a> instead.\n      </li>\n    </ul>\n\n<h2>Release 3.3.8 (August 16, 2017)</h2>\n<p>\n  This release consists of bug fixes and some new features:\n</p>\n<dl>\n  <dt>\n    OpenID Connect support\n  </dt>\n  <dd>\n    As we've previously announced\n    <a href=\"https://www.webtoolkit.eu/wt/blog/2017/06/20/announcing_openid_connect_support_in_wt\">on our blog</a>,\n    Wt now supports OpenID Connect. All you need to do to use any OpenID Connect based service is\n    configure a <a href=\"classWt_1_1Auth_1_1OidcService.html\">Wt::Auth::OidcService</a>. You can also make your\n    own OpenID Connect identity provider. Check out the accompanying\n    <a href=\"https://github.com/emweb/wt/tree/master/examples/feature/oidc\">OpenID Connect feature example</a>.\n  </dd>\n  <dt>\n    On Windows: font support based on DirectWrite\n  </dt>\n  <dd>\n  <p>Wt 3.3.7 already introduced the Direct2D backend for <a href=\"classWt_1_1WRasterImage.html\">WRasterImage</a>.\n    Wt 3.3.8 further expands\n    on this by adding DirectWrite-based font support. This means that Wt 3.3.8 will be able to\n    select the appropriate fonts for every glyph, without requiring Pango. Pango was always\n    difficult to distribute on Windows, so we never included Pango in the binary distribution, relying on\n    very basic font support instead, replacing unknown characters by question marks. Now, you\n    can expect much better Unicode support with DirectWrite on Windows.</p>\n    <p>This means that the binary release of Wt on Windows is now built with Direct2D and DirectWrite.</p>\n  </dd>\n  <dt>\n    Wt::Dbo: added <a href=\"structWt_1_1Dbo_1_1sql__value__traits.html\">sql_value_traits</a> for\n    <a href=\"classWt_1_1Json_1_1Object.html\">Wt::Json::Object</a> and\n    <a href=\"classWt_1_1Json_1_1Array.html\">Wt::Json::Array</a>.\n  </dt>\n  <dd>\n    <p>Quite often, the need arises to store some unindexed data with arbitrary structure in a database.\n       A common solution is to store JSON as a string. To facilitate this, we've included implementations\n       of <a href=\"structWt_1_1Dbo_1_1sql_value_traits.html\">sql_value_traits</a> for\n       <a href=\"classWt_1_1Json_1_1Object.html\">Wt::Json::Object</a> and\n       <a href=\"classWt_1_1Json_1_1Array.html\">Wt::Json::Array</a> in\n       <code>Wt/Dbo/WtSqlTraits</code>. This allows you to store <code>Wt::Json</code> Objects and Arrays\n       just like you any other field.</p>\n    <p>Additionally, we've made the <code>Wt::Json</code> API a bit more friendly, by adding support\n    for initializer lists (when using C++11), and implicit constructors for\n    <a href=\"classWt_1_1Json_1_1Value.html\">Wt::Json::Value</a>\n    from \n    <a href=\"classWt_1_1Json_1_1Object.html\">Wt::Json::Object</a> and\n    <a href=\"classWt_1_1Json_1_1Array.html\">Wt::Json::Array</a>.</p>\n  </dd>\n  <dt>\n    Added <code>&lt;allowed-origins&gt;</code> configuration option for CORS\n  </dt>\n  <dd>\n    Wt used to allow almost any origin, to allow Wt applications to be embedded in any page using\n    WidgetSet mode. Although Wt encodes session IDs in URLs rather than cookies by default, this\n    could still pose a security risk in some cases. In Wt 3.3.8, CORS support has been updated:\n    Wt now only allows cross-origin resource sharing for WidgetSet entry points, and trusts no\n    origin by default. You can specify the allowed origins using the <code>&lt;allowed-origins&gt;</code>\n    tag in the configuration file. Using <code>&lt;allowed-origins&gt;*&lt;/allowed-origins&gt;</code>\n    restores the old behaviour.\n  </dd>\n  <dt>\n    Other small improvements:\n  </dt>\n  <dd>\n    <ul>\n      <li>Any <code>boost::asio::io_service</code> can now be used with <a href=\"classWt_1_1Http_1_1Client.html\">Wt::Http::Client</a>,\n\t  instead of just <a href=\"classWt_1_1WIOService.html\">Wt::WIOService</a>.</li>\n      <li>Added support for <code>PATCH</code> requests in <a href=\"classWt_1_1WResource.html\">WResource</a> and\n\t<a href=\"classWt_1_1Http_1_1Client.html\">Wt::Http::Client</a>,\n\tnext to <code>GET</code>, <code>POST</code>, <code>PUT</code>, and <code>DELETE</code>.\n      <li>wthttp connector: added support for forward secrecy with the <code>--ssl-prefer-server-ciphers</code> option.</li>\n      <li>Added the <code>num-session-threads</code> configuration parameter, to set the amount of threads per session when\n\t  using dedicated process mode. By default, the main process and the session threads use the same amount of threads.</li>\n      <li>The <a href=\"https://github.com/emweb/wt/tree/master/examples/te-benchmark\">te-benchmark</a>\n\t  example was added, implementing the TechEmpower framework benchmarks.\n          This example also demonstrates how Wt can be used to write RESTful services. Improved, less verbose, support for\n          RESTful services is planned in a future release.</li>\n      <li>Added <a href=\"classWt_1_1Dbo_1_1FixedSqlConnectionPool.html#a955e2ce03d8d45e8738f6ff718614601\">Wt::Dbo::FixedSqlConnectionPool::setTimeout()</a>, to set a timeout for obtaining a connection.</li>\n      <li>Added <a href=\"classWt_1_1Dbo_1_1backend_1_1Postgres.html#acb13461474cc43bc9e8a51b844a051f3\">Wt::Dbo::backend::Postgres::setTimeout()</a>, to set a timeout for queries.</li>\n      <li>Added libunwind support for printing stacktraces. Enable this with the <code>ENABLE_UNWIND</code> CMake option.</li>\n    </ul>\n  </dd>\n</dl>\n\n<h2>Release 3.3.7 (March 31, 2017)</h2>\n<p>\n  This release fixes many bugs, but also introduces some new features:\n</p>\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WFileDropWidget.html\">WFileDropWidget</a>\n  </dt>\n  <dd>\n    The WFileDropWidget is a new widget that allows you to upload a file or multiple files by dragging them onto an area.\n  </dd>\n  <dt>\n    Scroll visibility\n  </dt>\n  <dd>\n    Some applications require you to know whether a widget is currently visible within the viewport, or whether it is\n    scrolled out of view, e.g. to load more content as you scroll down the page. You can now enable scroll visibility\n    detection with\n    <a href=\"classWt_1_1WWidget.html#a5d403e0390841df77a23445b28044d5d\">WWidget::setScrollVisibilityEnabled(bool)</a>,\n    and react to changes in visibility with\n    <a href=\"classWt_1_1WWidget.html#aa5ce605dd465e06f3e3c2dbce2a4098e\">WWidget::scrollVisibilityChanged()</a>.\n    A new scrollvisibility feature example has been added to demonstrate this infinite scrolling application.\n  </dd>\n  <dt>\n    Touch events\n  </dt>\n  <dd>\n    Although Wt already supported touch interactions in the charting library, touch events were previously\n    not exposed by Wt. Now,\n    we've added <a href=\"classWt_1_1WTouchEvent.html\">WTouchEvent</a>, and the touchStarted, touchEnded, and touchMoved\n    events have been added to\n    <a href=\"classWt_1_1WInteractWidget.html\">WInteractWidget</a>.\n    Also, <a href=\"classWt_1_1WInteractWidget.html#a556c14d02388720b1d95b2149be2e867\">draggable widgets</a> can now also\n    be dragged after a long press, and you can select a range using a double touch in\n    <a href=\"classWt_1_1WTableView.html\">WTableView</a> and <a href=\"classWt_1_1WTreeView.html\">WTreeView</a>.\n  </dd>\n  <dt>\n    Combined session tracking mode\n  </dt>\n  <dd>\n    <p>\n      The default session tracking method for Wt is URL rewriting, using JavaScript to hide the session id from\n      the address bar. Alternatively, cookies can be used with the Auto option, falling back to URL rewriting when\n      cookies are not available. However, the cookie-based method did not allow for multiple sessions within the\n      same browser.\n    </p>\n    <p>\n      In order to make the URL rewriting method with requirement 6.5.10 of the PCI Data Security Standard, while not\n      sacrificing the ability to have multiple sessions, a new Combined session tracking strategy has been added.\n      Wt already makes it difficult to steal a session when the session id is discovered, but resources are not as\n      protected. The Combined session tracking strategy uses URL rewriting in combination with a cookie that is shared\n      between sessions as an extra measure against session hijacking. This is the most secure strategy, but it will\n      deny access if cookie support is not available.\n    </p>\n  </dd>\n  <dt>\n    Wraparound for <a href=\"classWt_1_1WSpinBox.html\">WSpinBox</a> and <a href=\"classWt_1_1WTimeEdit.html\">WTimeEdit</a>\n  </dt>\n  <dd>\n    WSpinBox will now wrap around from its maximum to its minimum if you <a href=\"classWt_1_1WSpinBox.html#a08413e777fefab00e36dc8d6c492bda5\">enable wraparound</a>. WTimeEdit will take advantage of this feature by default.\n  </dd>\n  <dt>\n    On Windows: Direct2D implementation of WRasterImage\n  </dt>\n  <dd>\n    We've added another implementation for WRasterImage on Windows: Direct2D. When building Wt, this\n    implementation will be enabled by default. This allows to remove the dependency on GraphicsMagick or\n    Skia on Windows, simplifying the build process.\n  </dd>\n  <dt>\n    Some minor extra features:\n  </dt>\n  <dd>\n    <ul>\n      <li>\n\tIt's now possible to retrieve a vector of all request headers with <a href=\"classWt_1_1Http_1_1Request.html#a0afe45bf93bb77270a85c75ca67cd521\">Wt::Http::Request::headers()</a> in <a href=\"classWt_1_1WResource.html#a3a740f8cc29e2e6e4e58defc9c88b8b6\">handleRequest</a> when implementing a WResource. It is still recommended, and more efficient, to use <a href=\"classWt_1_1Http_1_1Request.html#ade2596aa6802a63e21460094ea30a4d9\">headerValue</a>, but retrieving a vector of all headers could be useful for debugging purposes.\n      </li>\n      <li>\n\tIn an effort to reduce the amount of JavaScript generated by the charting API, the\n\t<a href=\"classWt_1_1WPainter.html#abccad19493d7461ca08c9e50ad7326f1\">WPainter::drawStencilAlongPath()</a>\n\tmethod was added to WPainter.\n      </li>\n      <li>\n\tPreviously, WDialogs were movable by default. It's now possible to disable this with \n\t<a href=\"classWt_1_1WDialog.html#afbccf557a0343591f3087c9a0a9b7051\">WDialog::setMovable()</a>.\n      </li>\n    </ul>\n  </dd>\n</dl>\n\n<h2>Release 3.3.6 (July 13, 2016)</h2>\n<p>\n This release has a focus on bug fixes and some new features:\n</p>\n<dl>\n  <dt>\n    Support for WebSocket compression in wthttp\n  </dt>\n  <dd>\n    WebSocket traffic is now compressed, if possible.\n  </dd>\n  <dt>\n    Time entry improvements\n  </dt>\n  <dd>\n    <a href=\"classWt_1_1WTimeEdit.html\">WTimeEdit</a> now supports AM/PM in its format,\n    <a href=\"classWt_1_1WTimeValidator.html\">WTimeValidator</a> now allows to select a minimum\n    and maximum time and supports multiple formats,\n    <a href=\"classWt_1_1WTimePicker.html\">WTimePicker</a> can now work up to\n    millisecond precision, and is now rendered with spinboxes.\n  </dd>\n  <dt>\n    Skia version updated\n  </dt>\n  <dd>\n    The Skia backend for <a href=\"classWt_1_1WRasterImage.html\">WRasterImage</a> is now compatible with more recent versions of Skia. If you need\n    to support an older version of Skia, use <code>-DWT_SKIA_OLD=ON</code>. The Skia version of the Windows builds\n    has been updated from 394c7bb to 834d9e1.\n  </dd>\n  <dt>\n    Wt::Dbo\n  </dt>\n  <dd>\n    <ul>\n      <li>\n      It's now possible to mark foreign keys as literal with a &ldquo;&gt;&rdquo; prefix, so Wt::Dbo can better map to\n      an existing schema. Note that for consistency, this also means that the schema generated for ManyToMany relationships\n      has been changed to include the id column names if a joinId has been specified. If you specify a joinId for ManyToMany\n      relationships, you'll have to change it to include a &ldquo;&gt;&rdquo; before it in order to keep the same database schema.\n      </li>\n      <li>\n\tThe <code>size</code> argument of <a href=\"group__dbo.html#gac089020eff000d9e2c4ef72cf715bd21\">belongsTo()</a> has been\n\tremoved, since it served no actual purpose.\n      </li>\n    </ul>\n  </dd>\n  <dt>\n    Scroll position\n  </dt>\n  <dd>\n    It's now possible to retrieve the scroll position of a\n    <a href=\"classWt_1_1WContainerWidget.html\">WContainerWidget</a>\n    with\n    <a href=\"classWt_1_1WContainerWidget.html#a0a7ce553b2b5107412a3bed8700355cb\">scrollTop()</a>\n    and\n    <a href=\"classWt_1_1WContainerWidget.html#a9a60d382fcd1490081087ce4f3649864\">scrollLeft()</a>.\n  </dd>\n  <dt>\n    Invalidation of stateless slots\n  </dt>\n  <dd>\n    <a href=\"classWt_1_1WObject.html#a6dde4ce1e833a9966709daf3c0dedc9f\">WObject::isNotStateless()</a>\n    has been added, so functions called from functions that are marked as stateless can unmark\n    it as stateless, reverting to plain server-side dynamic UI updates.\n  </dd>\n  <dt>\n    <a href=\"classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html\">Auth::Dbo::UserDatabase</a>\n  </dt>\n  <dd>\n    The <a href=\"classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html\">Dbo UserDatabase</a> implementation now\n    compares e-mail addresses case insensitively. The <a href=\"classWt_1_1Auth_1_1AuthService.html\">AuthService</a>\n    can be passed in the constructor, so the <a href=\"classWt_1_1Auth_1_1Dbo_1_1UserDatabase.html\">UserDatabase</a>\n    knows whether the IdentityPolicy is EmailAddressIdentity.\n  </dd>\n  <dt>\n    Charting library\n  </dt>\n  <dd>\n    There have been many bug fixes and improvements to the charting library and the interactive features\n    introduced in Wt 3.3.5:\n    <ul>\n      <li>Series <a href=\"classWt_1_1Chart_1_1WCartesianChart.html#ad05997dbc2d59862e38272985abda9a9\">can be selected</a>\n      on a <a href=\"classWt_1_1Chart_1_1WCartesianChart.html\">WCartesianChart</a>.\n      LineSeries <a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a6078b67f146e686bd482d846dfe463cb\">can be manipulated</a>.</li>\n      <li><a href=\"classWt_1_1Chart_1_1WAxis.html#a16d188d56c2b62b7b3f2ddb6fa96d7cc\">WAxis::setZoom()</a> and\n\t  <a href=\"classWt_1_1Chart_1_1WAxis.html#a2f6a11d9d47036f8806c5a8412dfd24c\">WAxis::setPan()</a>\n\t  have been deprecated in favor of the easier to use\n\t  <a href=\"classWt_1_1Chart_1_1WAxis.html#a0be187399e7cb4877f2c5e3837eba6ea\">WAxis::setZoomRange()</a>.\n\t  You can listen to changes in zoom range with the\n\t  <a href=\"classWt_1_1Chart_1_1WAxis.html#a7e432917f0f23f18db3a043397a81904\">WAxis::zoomRangeChanged()</a> signal.</li>\n       <li>Series set as hidden will still be shown on a <a href=\"classWt_1_1Chart_1_1WAxisSliderWidget.html\">WAxisSliderWidget</a>.\n\t   The typical application for this is to show a coarse model on the slider widget, and a more detailed one on the chart.</li>\n      <li>\n\t  In order to provide better performance for charts containing a lot of data, the charting library has been\n\t  overhauled to use <a href=\"classWt_1_1Chart_1_1WAbstractChartModel.html\">WAbstractChartModel</a>s,\n\t  instead of <a href=\"classWt_1_1WAbstractItemModel.html\">WAbstractItemModel</a>s, avoiding the use of\n\t  boost::any. The <a href=\"classWt_1_1Chart_1_1WStandardChartProxyModel.html\">WStandardChartProxyModel</a>\n\t  wraps a <a href=\"classWt_1_1WAbstractItemModel.html\">WAbstractItemModel</a> so that those can still be used with charts.\n\t  Note that this changes the return type of the\n\t  <a href=\"classWt_1_1Chart_1_1WAbstractChart.html#a477522bb1720fb20006c81be455b3366\">WAbstractChart::model()</a> method.\n      </li>\n      <li>A chart's axes can now be <a href=\"classWt_1_1Chart_1_1WAxis.html#a2bb7c8ec67ed2ff0b57953ea40cd87ef\">inverted</a>.\n      <li>Stacked series: negative values are now stacked separately from positive values.</li>\n      <li><a href=\"classWt_1_1Chart_1_1CurveLabel.html\">Curve labels</a> can now be drawn on charts, so that curves,\n          or certain points on curves, can be labeled.</li>\n\t  <li><a href=\"classWt_1_1Chart_1_1WAxis.html#afca24479982f10759be69703de5f4cd4\">WAxis::getLabelTicks()</a>\n\t  has been modified with an argument\n          <a href=\"structWt_1_1Chart_1_1AxisConfig.html\">AxisConfig</a>, so that different axis ticks can be drawn depending\n\t  on the side that the axis is dawn on, or the zoom level it is drawn at. This is a breaking change if you override getLabelTicks.\n\t  <a href=\"classWt_1_1Chart_1_1WAxis.html#a71928aabf753854274d753e266aabfc2\">WAxis::setLabelTransform()</a>\n\t  as a simpler method to change the tick\n\t  labels depending on the side the axis is drawn on.</li>\n      <li><a href=\"classWt_1_1Chart_1_1WDataSeries.html\">WDataSeries</a> is no longer a simple value class. The interface of\n          <a href=\"classWt_1_1Chart_1_1WCartesianChart.html\">WCartesianChart</a> has been modified to reflect that: the old\n\t  interface that copies WDataSeries over has been deprecated in favor of an interface that takes pointers to\n\t  <a href=\"classWt_1_1Chart_1_1WDataSeries.html\">WDataSeries</a>.</li>\n      <li>It's now possible to <a href=\"classWt_1_1Chart_1_1WDataSeries.html#ae668a1a90ccf668e426fc2d9e370bf2c\">specify a different model</a>\n      for each <a href=\"classWt_1_1Chart_1_1WDataSeries.html\">WDataSeries</a>.</li>\n      <li><a href=\"classWt_1_1Chart_1_1WPieChart.html#a0ff69f626136fa56e7de27f6a10d770d\">Chart::WPieChart::createLabelWidget()</a>\n      has been added, making it possible to replace the labels of a\n      <a href=\"classWt_1_1Chart_1_1WPieChart.html\">WPieChart</a>\n      with widgets.</li>\n      <li>Tooltips on charts can now be deferred, which can improve performance of interactive charts, and if you have a lot of tooltips.</li>\n    </ul>\n  </dd>\n</dl>\n\n<hr />\n\n<h2>Release 3.3.5 (Dec 31, 2015)</h2>\n<p>\n This release has a focus on bug fixes but also one or two new features:\n</p>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1Chart_1_1WCartesianChart.html\">Chart::WCartesianChart</a>\n  </dt>\n  <dd>\n\tWCartesianChart has several new features that allow interaction with the\n\tchart without server roundtrips. These features include zoom, pan,\n\tcrosshair and follow curve functionality.\n\n\tThis is only available if the chart is drawn\n\ton an HTML canvas. This is the default rendering method on modern browsers.\n\t\n\tWhen enabled, the crosshair will follow mouse movement,\n\tand show in the top right corner the coordinate\n\t(according to X axis and the first Y axis)  corresponding to this position.\n  </dd>\n  <dt>\n  <a href=\"classWt_1_1Chart_1_1WAxisSliderWidget.html\">Chart::WAxisSliderWidget</a>\n  </dt>\n  <dd>\n\tWAxisSliderWidget lets you easily focus on a particular range by selecting an XAxis. It will create a sliding widget where you can change the size of the focused region by dragging the blue handles, and change the position by dragging the selected area. When using touch, the size of this area can also be changed using a pinch movement.\n  </dd>\n  <dt>\n  <a href=\"classWt_1_1WPainter.html\">WPainter</a>, <a href=\"classWt_1_1WJavaScriptHandle.html\">WJavascriptHandle</a>, <a href=\"classWt_1_1WCanvasPaintDevice.html\">WCanvasPaintDevice</a>\n  </dt>\n  <dd>\n  The above functionality was implemented by making client-side interaction possible for a scene rendered\n  on WCanvasPaintDevice. For this purpose, for several primitives used to draw on a canvas, we provide\n  a JavaScript handle and complementary API to manipulate these objects in JavaScript code. In this way you\n  can keep the bulk of the painting code in C++, and allow manipulation from within JavaScript.\n  Such JavaScript handlers have been made available for <a href=\"classWt_1_1WTransform.html\">WTransform</a>, <a href=\"classWt_1_1WPen.html\">WPen</a>, <a href=\"classWt_1_1WBrush.html\">WBrush</a>, <a href=\"classWt_1_1WPointF.html\">WPointF</a>, <a href=\"classWt_1_1WRectF.html\">WRectF</a> and <a href=\"classWt_1_1WPainterPath.html\">WPainterPath</a>.\n  </dd>\n\n  <dt> <a href=\"classWt_1_1WAnchor.html\">WAnchor</a> target (such as this window, or new window) moved to <a href=\"classWt_1_1WLink.html#afda591cd277562d5c8ea723733290790\">WLink</a></dt>\n  <dd>As WLink is used in several places (including for example inside item data models), the target can now be specified in more places in the same consistent way. However, since until now a WAnchor was the owner of the TargetType, this may break existing code which calls WAnchor::setTarget() before WAnchor::setLink(), as the latter overrides the target.\n  </dd>\n\n  <dt>A new <a href=\"namespaceWt.html#a6c93a6e97016801a310275457e43f333\">TargetDownload</a> target was added for links.</dt>\n  <dd>Until now it was recommended to use TargetNewWindow as otherwise this would interfere with the rendering of the current page (since browsers are unaware of the content-type and content-disposition of the target link until after it unloaded the current page. The new TargetDownload option is implemented using the new HTML5 download attribute or, if not supported, by targeting a hidden iFrame contained in the page.\n  </dd>\n\n  <dt>The included SQLite version was updated</dt>\n  <dd>\n  The SQLite version bundled with Wt::Dbo has been updated to version 3.8.10.1. The changelog can be found <a href=\"https://www.sqlite.org/news.html\">here</a>\n  </dd>\n\n  <dt>Support for seconds editing in <a href=\"classWt_1_1WTimePicker.html#a4d19d3ad8bdf0a9a3e35d84f3d298994\">WTimePicker</a></dt>\n  <dd>WTimePicker was missing the seconds, we've also added the setSecondStep() method.\n  </dd>\n\n  <dt><a href=\"classWt_1_1WCheckBox.html#a2d741874682e9a683d40527b03615d32\">WCheckBox::setPartialStateSelectable()</a></dt>\n  <dd>Before it was only possible to set the partial state of the WCheckbox when creating the Widget.\n  We've added a method WCheckBox::setPartialStateSelectable(bool) which will allow the user to select indeterminate state. This is false by default;\n  </dd>\n\n  <dt>New client side connection monitor</dt>\n  <dd>The <a href=\"classWt_1_1WApplication.html#ab6ae1117e316f1a7b31449aaeb83c9cf\">WApplication::setConnectionMonitor()</a> method will let the user register a Javascript object that will be notified on connection changes (connection, disconnection, websockets enabled/disabled..)\n  The monitor will trigger the onChange method of the provided Javascript object</dd>\n\n  <dt>Support for custom HTML tags for a widgets</dt>\n  <dd>We've added <a href=\"classWt_1_1WWebWidget.html#adf6034e0e715138cae479eae6e324ce6\">WWebWidget::setHtmlTagName()</a> that will change the current html tag instead of using the one chosen by Wt by default. This allows the user to create widgets that are not provided by Wt, such as for example semantic tags.\n  </dd>\n\n  <dt>Wt::Dbo: allow to forward declare related classes</dt>\n  <dd>It is now possible to forward declare all classes that are being referenced in a <a href=\"group__dbo.html#gaa3de862f9544c4d30b8cbcac4b50feba\">belongsTo()</a>, <a href=\"group__dbo.html#ga00a060d5f4764f673948989f21837548\">hasOne()</a> or <a href=\"group__dbo.html#ga570b71f937c991b000b9db01b327a363\">hasMany()</a> relation, helping to reduce the compile time pain of Wt::Dbo.</dd>\n</dl>\n\n<hr>\n\n<h2>Release 3.3.4 (Mar 25, 2015)</h2>\n\n<p>\n This release has a focus on bug fixes but also one or two new features,\n of which the following are the most notable:\n</p>\n\n<dl>\n  <dt>\n    Support for dedicated session processes with wthttp connector.\n  </dt>\n  <dd>\n    Until now, only the FastCGI connector allowed the use of dedicated\n    processes for individual sessions, by spawning a new process for\n    each new session. This functionality has also been added to the\n    wthttp connector. In this implementation, the manager process will\n    act as a reverse proxy to the dedicated session processes.\n\n    This has as major benefit that there is no longer a choice between\n    dedicated session processes on the one hand (supported by FastCGI)\n    and support for WebSockets on the other hand (supported by the\n    built-in httpd). In fact, there remains little reason to prefer\n    FastCGI over the built-in httpd: in those situations where you\n    want a proper http server as a front-end, you can still use\n    HAproxy or NGINX (or Apache, if you must) as a reverse proxy to\n    wthttp.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WIdentityProxyModel.html\">WIdentityProxyModel</a>\n  </dt>\n  <dd>\n    This new proxy model simply forwards the structure of the source\n    model, without any transformation, and can be used for\n    implementing proxy models that reimplement data(), but retain all\n    other characteristics of the source model.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Chart_1_1WAbstractChart.html#ac895fb1d1437f51629b49246eda66e3d\">Chart::WAbstractChart::setAutoLayoutEnabled()</a>\n  </dt>\n  <dd>\n    Until now, you were responsible for configuring the padding around\n    the chart area to accommodate for axis labels, titles, and\n    legend. While this is still the default behaviour, we added an\n    option to let the chart derive the required padding (using\n    approximate font-metrics available server-side).\n  </dd>\n\n\n  <dt>\n    <a href=\"classWt_1_1Chart_1_1WCartesianChart.html#a1c97590b1bd4ee9324822967d6e72333\">Chart::WCartesianChart::setAxis()</a>\n  </dt>\n  <dd>\n    Whereas previously a chart axis was a \"value class\", it is now a\n    proper polymorphic class, and you can provide your own\n    implementation. In this way you can customize things like for\n    example label strings.\n  </dd>  \n\n  <dt>\n    Several new features in the 3D charts library.\n  </dt>\n  <dd>\n    <ul>\n      <li><a href=\"classWt_1_1Chart_1_1WAbstractDataSeries3D.html#a0ac582c98fe58f36e0d60f11b5627656\">\n\t  setPointSprite()</a>: ability to define sprites for drawing\n\t  a data series</li>\n      <li><a href=\"classWt_1_1Chart_1_1WAbstractGridData.html#a8f99da2ab56c80de400c90992c35f882\">pickSurface()</a>:\n\tfind out which points on a surface are under a given pixel</li>\n      <li><a href=\"classWt_1_1Chart_1_1WAbstractGridData.html#afc0509b2dff1fa8dbb970266de21f7db\">pickBar()</a>:\n\tfind out which points on a bar on are under a given pixel.</li>\n      <li><a href=\"classWt_1_1Chart_1_1WAbstractGridData.html#a09c065c802ff9b21d3c2a543e48f58b2\">\n\t  setIsoLevels()</a>:\n\tdraw iso lines (on the ground plane of the chart) corresponding\n\tto selected z values.</li>\n      <li><a href=\"classWt_1_1Chart_1_1WAbstractGridData.html#ad74945761f9bfcc2ced42487468c5480\">\n\t  setClippingLinesEnabled()</a>:\n\tability to clip and optionally draw clipping planes\n      </li>\n      <li>\n\t<a href=\"classWt_1_1Chart_1_1WCartesian3DChart.html#a8adb0ca981382e3e1435fe8e7fcf1d6e\">\n\t  setIntersectionsEnabled()</a>:\n\tability to draw surface-surface intersection lines.\n      </li>\n    </ul>\n  </dd>\n</dl>\n\n<hr>\n\n<h2>Release 3.3.3 (May 27, 2014)</h2>\n\n<p>\n This release has a focus on bug fixes but also one or two new features:\n</p>\n\n<dl>\n  <dt>\n    Improved Meta header support.\n  </dt>\n  <dd>\n    Because WApplication meta header API was restricted to only work\n    in certain circumstances, we have now added the ability to define\n    meta headers (with the option to apply them to specific user agents)\n    also in the configuration file.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WWidget.html#ab4086c221a56e81dd067be47303b5862\">WWidget::setDeferredToolTip()</a>\n    </dt>\n  <dd>\n    This function is an alternative to setToolTip(), useful when a\n    tooltip text is not trivial to fetch or create. Using this\n    function, the tool tip (HTML) text can now be loaded on-demand\n    instead of needing to be preset on (each) widget. This also works\n    for tooltips set from a WAbstractItemModel using the\n    new <a href=\"group__modelview.html#ga1d77c4de293aebfacbdde124de06b8b0\">ItemHasDeferredTooltip</a>\n    item flag.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WLineEdit.html#ae599502e317ed79d5a1a54dae12d3d10\">WLineEdit::setInputMask()</a>\n    </dt>\n  <dd>\n    Support for input masks was added, which guides the user to enter\n    data in the correct format.\n  </dd>\n</dl>\n\n<hr>\n\n<h2>Release 3.3.2 (March 12, 2014)</h2>\n\n<p>\n This release has a focus on bug fixes and a few larger new developments.\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1Chart_1_1WCartesian3DChart.html\">3D Charts\n    (Chart::WCartesian3DChart, ...)</a>\n  </dt>\n  <dd>\n    A 3D charting library was added, based on\n    <a href=\"classWt_1_1WGLWidget.html\">WGLWidget</a>, and integrated\n    with the existing 2D charting framework.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1JsonSerializer.html\">Dbo::JsonSerializer</a>\n  </dt>\n  <dd>\n    This is a utility which serializes Dbo objects (including\n    relations) to JSon, leveraging the same persist() function used\n    for serialization to the database.\n  </dd>\n\n</dl>\n\n<h3>B) Main improvements:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WBootstrapTheme.html\">WBootstrapTheme</a>\n    </dt>\n  <dd>\n    Support for bootstrap version 3 was added, so now you have the\n    choice between bootstrap version 2 or 3. Needless to say, you\n    should probably target version 3 for new development work if you\n    can live with its restricted browser support.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WGLWidget.html\">WGLWidget</a>\n    </dt>\n  <dd>\n    Next to the existing client-side WebGL-based implementation, a\n    server-side OpenGL-based implementation was added for fallback\n    scenarios where WebGL is not available, or when scene complexity\n    is so big that a server-side solution is simply better performing\n    because of lower bandwidth needed.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WRasterImage.html\">WRasterImage</a>\n    </dt>\n  <dd>\n    Next to the GraphicsMagick-based implementation, a skia-based\n    implementation has been added (which provides much higher\n    performance most notably on Windows platforms).\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WString.html\">WString</a>\n    </dt>\n  <dd>\n    Until now, Wt defaults to the C++ global locale for conversion\n    between a string literal (std::string, const char *) and\n    WString. In practice, UTF-8 is an (increasingly) better choice\n    since UTF-8 is a pragmatic encoding covering the entire Unicode\n    range, and the encoding used by the library throughout. We've now\n    added a setDefaultEncoding() function which can be used to\n    configure the default encoding as UTF-8.\n  </dd>\n\n  <dt>\n    wthttp HTTP/WebSockets front-end server\n  </dt>\n  <dd>\n    We've given the http front-end a much needed overhaul, making it\n    deal better with long-lived connections typical for WebSockets\n    applications, and fix some nasty issues at the same time.\n    We also took the opportunity to optimize its performance by\n    reducing the number of system calls for writing request\n    responses, and by avoiding memory allocations during request parsing.\n  </dd>\n</dl>\n\n<h3>C) Non-backwards compatible changes</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WDatePicker.html\">WDatePicker</a>,\n    <a href=\"classWt_1_1WDateEdit.html\">WDateEdit</a>\n  </dt>\n  <dd>\n    The date pickers will now default to interpreting a single click\n    as a date selection and also closing the calendar.\n  </dd>\n</dl>\n<hr>\n\n<h2>Release 3.3.1 (October, 16 2013)</h2>\n\n<p>\n This release has a focus on bug fixes and other cleanups after the big\n changes that went into 3.3.0.\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WLocalDateTime.html\">WLocalDateTime</a>\n  </dt>\n  <dd>\n    So far, the library only provided date/time classes that dealt with\n    UTC time (or that at least is the intended use). In this release\n    we have added functionality to also deal with date's in a specific\n    time zone, which includes this new type as well as improvements in\n    WDateTime to convert to local date time, and time zone information\n    in WEnvironment and WLocale.\n  </dd>\n\n</dl>\n\n<h3>B) Main improvements:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WComboBox.html\">WComboBox</a>\n    </dt>\n  <dd>\n    The combo box now interprets LevelRole data to display headers\n    (using HTML &lt;optgroup&lt; elements). Another improvement is\n    that now the combobox saves its single selection while the model\n    is updated.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WDialog.html\">WDialog</a>\n    </dt>\n  <dd>\n    Modal dialogs can now be created and destroyed in any order\n    without confusing the 'silk screen'. We now also consistently\n    interpret an enter press in the dialog to invoke the default\n    button added to the dialog footer (if there is one).\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WMessageBox.html\">WMessageBox</a>\n    </dt>\n  <dd>\n    Several improvements include the ability to indicate what buttons\n    are the default and escape buttons with setDefaultButton() or\n    button->setDefault() and setEscapeButton(), and the (long overdue)\n    implementation of icons!\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WTextEdit.html\">WTextEdit</a>\n    </dt>\n  <dd>\n    We've added support for TinyMCE 4.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Signal.html\">Signal</a>\n    </dt>\n  <dd>\n    For boost versions 1.52 or later, we now support the\n    Boost.Signals2 library for the signals implementation.\n  </dd>\n\n  <dt>\n    <a href=\"namespaceWt_1_1Render.html\">Render library</a>\n    </dt>\n  <dd>\n    We've added a CSS style sheet parser which will parse and apply\n    style rules in &lt;style&gt; blocks (or loaded through the API),\n    and expanded CSS support to improve table rendering\n    (including border-collapse border model and repeated table\n    headers), relative/absolute positioning, and page-break-before/after\n    support.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Auth_1_1AbstractUserDatabase.html\">Auth::AbstractUserDatabase</a>\n  </dt>\n  <dd>\n    A setIdentity() method was added to modify an existing identity\n    (e.g. username) and updateAuthToken() was added to update an\n    existing token (e.g. keeping the expiration time but changing the\n    hash).\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1Query.html\">Dbo::Query</a>\n  </dt>\n  <dd>\n    Added a reset() function which resets previous bound arguments.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1QueryModel.html\">Dbo::QueryModel</a>\n  </dt>\n  <dd>\n    The model now implements toRawIndex() and fromRawIndex() methods to\n    allow selection to persist across layout changes (e.g. resorting).\n  </dd>\n\n  <dt>\n    <a href=\"group__json.html\">Wt::Json (JSON library)</a>\n  </dt>\n  <dd>\n    We've added serialization functions to complement the parsing API.\n  </dd>\n\n  <dt>\n    <a href=\"group__mail.html\">Wt::Mail (SMTP library)</a>\n  </dt>\n  <dd>\n    We've added attachment support, and optional indication of the local\n    sender date.\n  </dd>\n\n</dl>\n\n<h3>C) Non-backwards compatible changes</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WDate.html\">WDate</a>,\n    <a href=\"classWt_1_1WDateTime.html\">WDateTime</a>\n    <a href=\"classWt_1_1WTime.html\">WTime</a>\n  </dt>\n  <dd>\n    We've deprecated the exceptions (Invalid[Date][Time]Exception)\n    that were thrown by these classes when one attempted to compute or\n    use an 'invalid' value. These exceptions are no longer thrown.\n    Instead, we now documented what value\n    (usually 'null') is returned when one attempts to do operations on\n    such a date/time class, which makes the behaviour more consistent\n    with how Qt's equivalent classes behave.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WMessageBox.html\">WMessageBox</a></dt>\n  <dd>\n    The buttons() method has been renamed to standardButtons(), and\n    buttons() now return the actual list of added buttons.\n  </dd>\n</dl>\n<hr>\n\n<h2>Release 3.3.0 (April, 8 2013)</h2>\n\n<p>\n This release focuses on a reorganization of Wt's theme\n infrastructure, with the objective of\n supporting <a href=\"http://twitter.github.com/bootstrap/\">Twitter's\n Bootstrap CSS framework</a> as a new theme. At the same time we've\n added a number of widgets for which Twitter Bootstrap provides\n styling.\n</p>\n\n<p>It is our intention to support the Bootstrap theme (or more\n specifically, the Bootstrap class names) alongside the themes we\n already supported (which are based on our own class names). Ignoring\n what Bootstrap brings, you should be able to upgrade to this release\n without too much trouble, although you may need to adapt some CSS\n stylesheets as we did reorganize a number of things which were\n required for Bootstrap and were a good idea for our own CSS\n stylesheets too.</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WTheme.html\">WTheme</a>,\n    <a href=\"classWt_1_1WCssTheme.html\">WCssTheme</a>,\n    <a href=\"classWt_1_1WBootstrapTheme.html\">WBootstrapTheme</a>,\n  </dt>\n  <dd>\n    Theme support classes for Wt. The role of a theme is to:\n    <ul>\n      <li>Load the CSS stylesheets for a new session</li>\n      <li>Annotate newly created widgets with appropriate style\n      classes</li>\n    </ul>\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WDateEdit.html\">WDateEdit</a>\n  </dt>\n  <dd>\n    Functionally almost the same as a WDatePicker, this class\n    specializes WLineEdit and is thus a WFormWidget, making it much\n    easier to use in WTemplateFormView.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WLocale.html\">WLocale</a>\n  </dt>\n  <dd>\n    This class supports localization for number formatting and\n    extends the simple localization support we had in the previous\n    versions of Wt (which as only effect had the selection of\n    a different language for the resource bundles). It's main\n    added value of native C++ support for localization is that it\n    also affects client-side handling and parsing of number values,\n    i.e. in <a href=\"classWt_1_1WIntValidator.html\">WIntValidator</a> and\n    <a href=\"classWt_1_1WDoubleValidato.htmlr\">WDoubleValidator</a>.\n  </dd>\n  \n  <dt>\n    <a href=\"classWt_1_1WNavigationBar.html\">WNavigationBar</a>\n  </dt>\n  <dd>\n    A navigation bar styles a menu as a typical top-level bar\n    (currently only styled in the Bootstrap Theme).\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WPopupWidget.html\">WPopupWidget</a>\n  </dt>\n  <dd>\n    A base class to simplify the creation of popup widgets that\n    typically assist in editing or provide circumstantial information\n    for another widget.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WSplitButton.html\">WSplitButton</a>\n  </dt>\n  <dd>\n    A split button, which combines a button and a popup menu\n    (currently only styled in the Bootstrap Theme).\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WToolBar.html\">WToolBar</a>\n  </dt>\n  <dd>\n    A button tool bar (currently only styled in the Bootstrap Theme)\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1backend_1_1MySQL.html\">Dbo::MySQL</a>\n  </dt>\n  <dd>\n    A MariaDB/MySQL backend for Wt::Dbo. This is based on the work\n    from Paul Harrisson who maintained this backend so far outside the\n    Wt distribution. The backend has been designed for MariaDB, but\n    should work fine for MySQL as well.\n  </dd>  \n</dl>\n\n<h3>B) Main improvements:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1Mail_1_1Message.html\">Mail::Message</a>\n  </dt>\n  <dd>\n    Added API support for additional SMTP headers.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WDatePicker.html\">WDatePicker</a>,\n    <a href=\"classWt_1_1WSuggestionPopup.html\">WSuggestionPopup</a>\n  </dt>\n  <dd>\n    The setGlobalPopup() functionality has been deprecated and does no\n    longer have any effect, since a new improved algorithm is being\n    used to anchor the popup to the DOM which no longer requires this\n    workaround.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WDialog.html\">WDialog</a>\n  </dt>\n  <dd>\n    Addition of a footer() method that returns a container for dialog\n    footer elements, typically buttons.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WFormModel.html\">WFormModel</a>\n  </dt>\n  <dd>\n    Addition of a validator() function that returns the validator for\n    a field set using setValidator(), \n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WGLWidget.html\">WGLWidget</a>\n  </dt>\n  <dd>\n    Support for binary transfers which avoids serialization and\n    deserialization of floats to text.\n  </dd>\n  \n  <dt>\n    <a href=\"classWt_1_1WPushButton.html\">WPushButton</a>\n  </dt>\n  <dd>\n    A push button can now act as a toggle button, using setCheckable()\n    and related API (currently only styled in the Bootstrap Theme) and\n    can be linked to a popup menu using setMenu().\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WStackedWidget.html\">WStackedWidget</a>\n  </dt>\n  <dd>\n    When switching between current widgets, the stacked widget will\n    now record and restore the current scroll position, providing a\n    much improved user experience when using the stacked widget for\n    the 'main' contents of an application.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WStringListModel.html\">WStringListModel</a>\n  </dt>\n  <dd>\n    Full support was added for storing data of all roles, lifting the\n    requirement to use another model such as WStandardItemModel for\n    simple MVC widgets like WComboBox or WSuggestionPopup simply to be\n    able to store UserRole data.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WTemplate.html\">WTemplate</a>\n  </dt>\n  <dd>\n    Added a new standard function (Functions::block) which allows the\n    definition and use of a macro block inside a placeholder, which is\n    in particular useful for forms which have repetitive formatting\n    for each field.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WTemplateFormView.html\">WTemplateFormView</a>\n  </dt>\n  <dd>\n    Several API improvements: A new setFormWidget() allows the\n    definition of the form widget for editing a field which\n    is a more useful alternative compared to reimplement\n    createFormWidget(). It also allows the optional\n    definition of functions to update the view/model values, which\n    avoids the need for specializing updateViewField() and\n    updateModelField() these latter two functions have been deprecated\n    in favour of two new functions updateViewValue() and\n    updateModelValue() which only update the value but not other\n    aspects such as visibility, validation state, or messages.\n  </dd>\n  \n  <dt>\n    Built-in httpd improvements\n  </dt>\n  <dd>\n    A redundant copy operation of the response generated and sent by\n    Wt has been removed, using scatter-gather I/O implemented by\n    boost::asio instead.\n  </dd>\n</dl>\n\n<h3>C) Non-backwards compatible changes</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WMenuItem.html\">WMenuItem</a>\n  </dt>\n  <dd>\n    While in previous version of Wt, this class was only a data class\n    that held the information related to an item, in 3.3.0 we modified\n    this so that this class represents the widget itself. If you were\n    redefining protected methods to customize the widget\n    (i.e. createItemWidget() and updateItemWidget()), then this will no\n    longer work as expected. The new system should be easier to\n    customize (since you can simply specialize WMenuItem itself).\n    In addition, we've simplified the rendering of a menu item so that\n    a redundant layer of spans (or div's) has been removed. It makes\n    the menu more consistent with the way CSS designers expect a menu\n    to rendered, and this was done (you can guess the theme of this\n    release by now ?) to be compatible with bootstrap's CSS styles.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WApplication.html\">WApplication::locale()</a>\n  </dt>\n  <dd>\n    This now returns a WLocale object instead of the string\n    designation of the locale (which you can query by calling name())\n    on the locale object.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WCalendar.html\">WCalendar</a>\n  </dt>\n  <dd>\n    The markup for this class has changed, and thus customized CSS\n    will need to be updated.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WMenuItem.html\">WPopupMenuItem</a>\n  </dt>\n  <dd>\n    The popup menu item class has been merged with WMenuItem (and\n    WPopupMenu is now a specialized WMenu). This should not have\n    noticeable API changes, except for the changes in markup and CSS\n    documented above.\n  </dd>\n  \n  <dt>\n    <a href=\"classWt_1_1WTreeNode.html\">WTreeNode</a>,\n    <a href=\"classWt_1_1WTreeTable.html\">WTreeTable</a>\n    <a href=\"classWt_1_1WTreeView.html\">WTreeView</a>\n  </dt>\n  <dd>\n    The markup for tree rendering has been changed (to using nested\n    unordered list instead of nested tables), and thus customized CSS\n    will need to be updated. The only API consequence is that\n    WTreeNode::labelArea() is no longer returning a WTableCell but\n    instead a WContainerWidget.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WTreeView.html\">WTreeView</a>,\n    <a href=\"classWt_1_1WTableView.html\">WTableView</a>\n  </dt>\n  <dd>\n    Event handling (clicked(), doubleClicked(), ... ) has been\n    generalized: events that are not generated on an item (but for\n    example in empty space below the items) will now also\n    generate these events, but then with an invalid model index.\n    You may thus need to adapt current code to check whether the model\n    index that is returned is valid.\n  </dd>\n</dl>\n<hr>\n\n<h2>Release 3.2.3 (November, 1 2012)</h2>\n\n<p>\n This release contains mostly bug fixes and one new feature: a payment\n processing API.\n</p>\n\n<h3>A) New namespaces:</h3>\n\n<dl>\n  <dt>\n    <a href=\"group__payment.html\">Wt::Payment (payment handling)</a>\n  </dt>\n  <dd>\n    This namespace contains services and back-end classes for dealing\n    with online payment brokers. At the moment there is support for\n    PayPal's Express Checkout service.\n  </dd>\n</dl>\n\n<h3>B) Main improvements:</h3>\n\n<dl>\n  <dt>\n    Layout improvements.\n  </dt>\n  <dd>\n    <p>\n      If you had massive trouble migrating to 3.2.2 because of the\n      layout rewrite, then you'll appreciate the efforts we've made to\n      make the layout algorithms in 3.2.3 much more robust and\n      consistent.\n    </p>\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1QueryModel.html\">Dbo::QueryModel</a>:\n    added a mechanism for stable row data.\n  </dt>\n  <dd>\n    <p>\n      A common nuisance when working with the QueryModel (which\n      retrieves data from the database as needed), is that concurrent\n      database modifications such as insertions of new data, may\n      interfere with the model's mapping of rows to objects (this is\n      in fact a common problem with most ORM's indeed). This mapping\n      may be important, especially when you want to process the user's\n      selection of one or more rows selected by the user, in e.g. a\n      table view. We've added a mechanism to assure that one can\n      request the model for data at a given row, which is guaranteed\n      to be the same row that has been previously retrieved, using the\n      stableResultRow() method. It works by default for simple queries\n      (returning data from one table), but can be easily customized\n      for more complex queries.\n    </p>\n  </dd>\n\n  <dt>\n    <a href=\"namespaceWt_1_1Render.html\">Render library:</a>\n    improved support for %-based block sizes and table rendering\n  </dt>\n  <dd>\n    <p>\n      Support was added for %-based sizes for block widths and table\n      cell widths. In addition, table rendering in Wt::Render has been\n      improved to support repeating headers (&lt;thead&gt; sections)\n      for multi-page tables, and explicit page breaks (using the css\n      page-break-after/before properties).\n    </p>\n  </dd>\n\n</dl>\n\n<h3>C) Non-backwards compatible changes</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1backend_1_1Sqlite3.html\">Dbo::backend::Sqlite3</a>\n  </dt>\n\n  <dd>\n    <p>We've changed the implementation of the storage ISO8601AsText\n    format for time stamps (datetime). In the new, corrected,\n    implementation, we generate dates using 'T' as the separator\n    between date and time (as mandated by ISO8601), while the old\n    behaviour used a space ('&nbsp;') instead as the\n    separator. Sqlite3 supports either format equally. This may\n    however break some applications which use queries for an exact\n    date (or a date comparison), as the results may be affected.\n    </p>\n\n    <p> The old behaviour is still available as PseudoISO8601AsText,\n    which can be configured using\n    <code>connection.setDateTimeStorage(Wt::Dbo::SqlDateTime,\n    Wt::Dbo::backend::Sqlite3::PseudoISO8601AsText)</code>\n    </p>\n  </dd>\n</dl>\n<hr>\n\n<h2>Release 3.2.2 (July, 23 2012)</h2>\n\n<p>\n This release contains mostly bug and feature improvements, but\n also a rewrite of the layout managers in Wt (WBoxLayout and\n WGridLayout), and this comes with some changes in (in most cases\n previously undefined) behaviour.\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WSslInfo.html\">WSslInfo</a>\n  </dt>\n  <dd>\n    Class containing information on a client-side certificate that may\n    have been configured for a SSL connection, and which can be used\n    for authentication (accessible from\n    <a href=\"classWt_1_1WEnvironment.html\">WEnvironment</a>).\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1weak__ptr.html\">Wt::Dbo::weak_ptr</a>\n  </dt>\n  <dd>\n    A weak variant of Wt::Dbo::ptr which is used to implement\n    One-to-One relations (see also\n    <a\n    href=\"group__dbo.html#ga00a060d5f4764f673948989f21837548\">Wt::Dbo::hasOne()\n    </a>).\n  </dd>\n\n</dl>\n\n<h3>B) Main improvements:</h3>\n\n<dl>\n  <dt>\n    Rewrite of <a href=\"classWt_1_1WLayout.html\">WBoxLayout, WGridLayout</a>\n  </dt>\n  <dd>\n    <p>\n    The layout managers have been reimplemented, to address various\n    issues with the old implementation, including API (in particular the wonky\n    side-effects of AlignTop | AlignJustify) inconsistencies and bugs.\n    </p>\n\n    <p>The new implementation no longer uses tables when JavaScript\n    is available, but instead using JavaScript-based layout with\n    absolute positioning. The table-based implementation is still kept\n    for plain HTML sessions (and progressive bootstrap). The code now\n    uses exactly the same layout logic for both horizontal and\n    vertical layout (but giving precedence to horizontal layout) and\n    should be much more consistent (and perhaps also more\n    performant). However, because of the many complexities and\n    problems with the old code (inconsistent behaviour), you may see\n    issues while upgrading. Please see the \"Non-backwards compatible\n    changes\" below for hints on how to deal with this.</p>\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WAbstractItemView.html\">WAbstractItemView</a>\n  </dt>\n  <dd>\n    <p>\n    A drag &amp; drop mime-type can now be specified on a per-item\n    basis using a new <a\n    href=\"group__modelview.html#ga0ae864e12320f9f89172735e075ed068\">ItemDataRole</a>,\n    and the mime-type for the entire selection is computed\n    from these individual mime-types.\n    </p>\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WInteractWidget.html\">WInteractWidget</a>\n  </dt>\n  <dd>\n    A new method <a href=\"classWt_1_1WInteractWidget.html#a60423e777cffa89e6d1373fd25754099\">setMouseOverDelay()</a> allows to specify a delay for\n    generating the mouseWentOver() event.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Auth_1_1AbstractUserDatabase.html\">Auth::AbstractUserDatabase</a>\n  </dt>\n  <dd>\n    A new method <a href=\"classWt_1_1Auth_1_1AbstractUserDatabase.html#a5067e569748cfad8c3356735a33aa10f\">deleteUser()</a> was added, which deletes a user and all\n    related authentication information.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Chart_1_1WCartesianChart.html\">Chart::WCartesianChart</a>\n  </dt>\n  <dd>\n    A new method <a href=\"classWt_1_1Chart_1_1WCartesianChart.html#aa6c394c4d9a801d088b7b02c3fd66b28\">setAxisPadding()</a> was added, which configures the\n    amount of adding between the chart area and the axes.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Chart_1_1WDataSeries.html\">Chart::WDataSeries</a>\n  </dt>\n  <dd>\n    A new method <a href=\"classWt_1_1Chart_1_1WDataSeries.html#ab0dbcd9bcbc0f39a042eb36aa930def4\">setCustomMarker()</a> was added which allows the use of a\n    user-defined path for the markers. A new role\n    MarkserScaleFactorRole was added which allows overriding the\n    marker size based on item model data.\n  </dd>\n\n</dl>\n\n<h3>C) Non-backwards compatible changes</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WLayout.html\">WBoxLayout, WGridLayout</a>\n  </dt>\n  <dd>\n    While migrating old code to this version, here are some tips:\n    <ol>\n      <li><p>Alignment flags</p>\n      <p>Previously, specifying an alignment for a widget in a\n      layout, or for the layout when set to a container, had a double\n      meaning. Not only would it implement the given alignment but also\n      revert to passively letting HTML layout decide the layout of the\n      contents, and adjust the parent (layout respectively container)\n      accordingly. This had all kinds of side effects such as not\n      propagating the size of layout-size-aware widgets and quirks in\n      the vertical alignment.</p>\n      <p><a href=\"classWt_1_1WContainerWidget.html#aff9884c8efdf90974077e96bcb1701db\">WContainerWidget::setLayout(layout, alignment)</a> has been\n      deprecated and will be removed from a future release. This call\n      was almost always used to let the parent container resize to fit\n      the size of the contained children, instead of fitting children\n      in the parent container. This behaviour is now\n      automatically deduced based on an (empty) size of the parent\n      container. In case this heuristic does not work, then setting a\n      non-0 maximum size on the container using <a href=\"classWt_1_1WWebWidget.html#a9b83805a5b8090d296ae4b5939fc9d11\">setMaximumSize()</a> will\n      act as a trigger, with the added benefit that the parent will only\n      be allowed to resize up to a specified maximum size.</p>\n      <p>An alignment specified in\n      <a href=\"classWt_1_1WBoxLayout.html#a7c1ec58e25d0b7add93f5f4342844db6\">W(Box/Grid)Layout::addWidget(widget, stretch, alignment)</a> now\n      purely affects the alignment but has no other side effects. The\n      preferred and minimum sizes of a child widget or layout is now\n      always taken into account.</p>\n      </li>\n      <li><p>Child item sizes</p>\n      <p>The layout algorithm is now implemented entirely in\n      JavaScript, and is more gentle when dealing with a combination\n      of cells (or columns/rows) that have a stretch factor and others\n      that don't. Previously, a minimum (or fixed) size would be used\n      to layout items that do not have a stretch factor. This had for\n      example as a consequence that a WText would be narrowed down to its\n      minimum width by using word wrapping throughout. Now, the\n      preferred size is used for a child item, and shrinking to a minimum\n      size only if necessary.</p>\n      <li><p>Progressive bootstrap</p>\n      A layout in the first page of an application rendered using\n      progressive bootstrap will no longer fully upgrade to a full\n      JavaScript version, but will result in a hybrid (between\n      table-based and JavaScript-based). If it doesn't work out as you'd\n      expect, then you should reconsider the use of progressive bootstrap,\n      or the use of a layout manager in your first page.\n      </li>\n    </ol>\n  </dd>\n</dl>\n\n<hr>\n\n<h2>Release 3.2.1 (March 16, 2012)</h2>\n\n<p>\n  This release contains mostly bug and feature improvements.\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WFormModel.html\">WFormModel</a>\n  </dt>\n  <dd>\n    A model class for forms. These models are used in Wt::Auth as the\n    basis for RegistrationModel and AuthModel, and allow a more\n    straight-forward customization of the underlying behavior of these\n    forms.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WReadOnlyProxyModel.html\">WReadOnlyProxyModel</a>\n  </dt>\n  <dd>\n    A proxy model class which allows to share a source model\n    read-only between multiple sessions.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WTemplateFormView.html\">WTemplateFormView</a>\n  </dt>\n  <dd>\n    A WTemplate-based standard view implementation that works in conjunction\n    with WFormModel.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Auth_1_1AuthModel.html\">Auth::AuthModel</a>\n  </dt>\n  <dd>\n    A model that implements authentication logic.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Auth_1_1FacebookService.html\">Auth::FacebookService</a>\n  </dt>\n  <dd>\n    An OAuth-2.0 based authentication service implementation for\n    Facebook.\n  </dd>\n\n  <dt>\n    <a href=\"namespaceWt_1_1Utils.html\">Wt::Utils</a>\n  </dt>\n  <dd>\n    This namespace contains a number of utility functions that we\n    found useful in projects using Wt. They relate mostly to\n    lower-level encoding and decoding functions: base64-, hex-, html-,\n    and url-encoding/decoding.\n  </dd>\n</dl>\n\n<h3>B) Main improvements:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WApplication.html\">WApplication</a>\n  </dt>\n  <dd>\n    A new method, WApplication::bind(), is useful in combination with\n    WServer::post() to avoid posting to a method of a deleted object,\n    leveraging the same life-time tracking as with signal connections.\n  </dd>\n\n  <dt>\n    <a href=\"namespaceWt_1_1Render.html\">Render library</a>\n  </dt>\n  <dd>\n    A large number of performance improvements, especially for table\n    layout and rendering.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Chart_1_1WAxis.html\">Chart::WAxis</a>\n  </dt>\n  <dd>\n    DateScale and DateTimeScale axes have improved auto-configuration of\n    limits and timesteps, now taking into account the resolution.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1Transaction.html\">Dbo::Transaction</a>\n  </dt>\n  <dd>\n    We've modified the default transaction outcome: a transaction will\n    now automatically commit(), unless the transaction is being\n    destroyed (goes out of scope) because an exception is being\n    thrown, in which case the transaction will rollback(). Previously,\n    an uncommitted transaction would always rollback() on destruction.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1ptr.html\">Dbo::ptr</a>\n  </dt>\n  <dd>\n    Added a session() method, returning the session with which the\n    session has been associated.\n  </dd>\n\n  <dt>\n    Shipped SHA-1 implementation.\n  </dt>\n  <dd>\n    We now ship a SHA-1 implementation with Wt and this thus relaxes\n    the need for OpenSSL to implement WebSockets and\n    Auth::SHA1HashFunction.\n  </dd>\n</dl>\n\n<h3>C) Non-backwards compatible changes</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WTextEdit.html\">WTextEdit</a>\n  </dt>\n  <dd>\n    Due to backwards incompatibility of IE9, we now require the latest\n    version of TinyMCE (3.5b1 or later).\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Auth_1_1AuthWidget.html\">Auth::AuthWidget</a>\n  </dt>\n  <dd>\n    A number of API methods that configure and access the configuration\n    were moved to the new Auth::AuthModel class which can be accessed from\n    the widget using model().\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Auth_1_1AbstractPasswordService_1_1AbstractStrengthValidator.html\">Auth::AbstractPasswordService::AbstractStrengthValidator</a>\n  </dt>\n  <dd>\n    The API was simplified to be less unorthodox: validate() now\n    returns a Result that contains all the information for it.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Http_1_1Client.html\">Http::Client</a>\n  </dt>\n  <dd>\n    We've changed the signature of the parseUrl() utility function to\n    parse the URL into a URL structure instead of a collection of\n    string parameters.\n  </dd>\n</dl>\n\n<hr>\n\n<h2>Release 3.2.0 (November 29, 2011)</h2>\n\n<p>\n  This release contains a number of new modules, as well as the usual\n  batch of <a href=\"http://redmine.emweb.be/versions/show/13\">bug\n  fixes</a> and small feature improvements.\n</p>\n\n<p>\n  In this release we also change the WValidator API in a way that it\n  is likely to break existing applications.\n</p>\n\n<h3>A) New namespaces:</h3>\n\n<dl>\n  <dt>\n    <a href=\"group__json.html\">Wt::Json (JSON handling)</a>\n  </dt>\n  <dd>\n    This namespace contains classes (Object, Value, Array) which map\n    the JSON types in C++. It also contains a parser to deserialize\n    JSON. A writer to serialize to JSON hasn't been added yet.\n  </dd>\n\n  <dt>\n    <a href=\"group__mail.html\">Wt::Mail (SMTP protocol)</a>\n  </dt>\n  <dd>\n    This namespace contains a Client to send mail messages. It is\n    currently offering only limited functionality w.r.t. SMTP protocol\n    handling, but contains enough functionality to send standards\n    compliant plain-text/HTML mails, with full support for unicode.\n  </dd>\n\n  <dt>\n    <a href=\"group__auth.html\">Wt::Auth (Authentication)</a>\n  </dt>\n  <dd>\n    <div>This namespace contains model and view classes for\n      authentication. It implements password authentication using best\n      practices, email verification, remember-me tokens, and provisions\n      support for federated login with an implementation of OAuth 2.0\n      for authentication using third party identity providers.</div>\n\n    <div>We expect that the API may still evolve, especially with\n      respect to OAuth 2.0 (which is a draft protocol), and its use\n      for OpenID Connect, which is the main use case for OAuth within\n      the authentication module.</div>\n  </dd>\n</dl>\n\n<h3>B) New classes:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WException.html\">WException</a>\n  </dt>\n  <dd>\n    We have cleaned up the use of exceptions within Wt. We have\n    converted numerous cases where an exception used to be thrown to\n    error logging, if the exception was thrown to indicate an API\n    problem. When the API problem is not resulting in a corrupt state,\n    we now log the error instead of terminating the session. All other\n    cases now use an exception that implements WException. This does\n    not affect situations where a std::exception was advertised in the\n    API.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WIOService.html\">WIOService</a>\n  </dt>\n  <dd>\n    <div>\n      Previously, boost::asio was used only in the built-in httpd as a\n      portable asynchronous I/O reactor implementation. We have now\n      moved this into the Wt library itself, where it is now used\n      instead of a dedicated thread pool for dispatching requests (and\n      other server events), and where it is also used for asynchronous\n      I/O by e.g. the Http::Client.\n    </div>\n    <div>\n      The WIOService specializes a boost::asio::service, and integrates\n      the thread pool that runs the service.\n    </div>\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WStringStream.html\">WStringStream</a>\n  </dt>\n  <dd>\n    This is a utility class that we have used since long in Wt. It is\n    a more efficient replacement for std::stringstream, with mostly a\n    compatible API (at least for our purposes). For our purposes it is\n    typically a factor of two or more faster.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Http_1_1Client.html\">Http::Client</a>, \n    <a href=\"classWt_1_1Http_1_1Message.html\">Http::Message</a>\n  </dt>\n  <dd>\n    <div>We have added an implementation of a Http(s) client. The client\n    is intended for consuming web services in Wt, and handles GET or\n    POST requests. It is not suitable (yet) for large responses, since\n    it buffers the entire response internally.</div>\n    <div>The client uses asynchronous I/O, using the WIOService that is\n    found in the current WServer instance.</div>\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1backend_1_1Firebird.html\">Dbo::Firebird</a>\n  </dt>\n  <dd>\n    <div>Lukasz Matuszewski contributed a Firebird backend\n    implementation, thanks !</div>\n  </dd>\n</dl>\n\n<h3>C) Main improvements:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WAbstractItemView.html\">WAbstractItemView</a>\n  </dt>\n  <dd>\n    Added a setHeaderWordWrap() method which configures header text\n    word wrapping, and changed setHeaderAlignment() so that it now\n    allows to change both the horizontal and vertical alignment. This\n    replaces the previously interwoven API for both features using the\n    multiLine parameter in setHeaderHeight(), which has been\n    deprecated. The rendering of the header items has been\n    reimplemented, simplified, and cleaned up in the process, avoiding\n    rendering problems on IE browsers.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WApplication.html\">WApplication</a>\n  </dt>\n  <dd>\n    Two new methods, deferRendering() and resumeRendering() can be\n    used to defer the rendering phase in response to the current\n    event-loop request. This is useful for situations where you are\n    waiting for an asynchronous operation to complete, but want to\n    handle this synchronously in the user-interface (i.e. blocking the\n    interface until the operation completes). While this is not a good\n    idea in general, it may be useful if you can guarantee that the\n    event will arrive within an acceptable time (e.g. 1 second). This\n    effectively stalls the response to the current request, but avoids\n    blocking threads in the process.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WDialog.html\">WDialog</a>\n  </dt>\n  <dd>\n    Added setClosable(), which adds a close icon into the title bar.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WFormWidget.html\">WFormWidget</a>\n  </dt>\n  <dd>\n    We have cleaned up the use of exceptions within Wt. We have\n    converted numerous cases where an exception used to be thrown to\n    error logging, if the exception was thrown to indicate an API\n    problem. When the API problem is not resulting in a corrupt state,\n    we now log the error instead of terminating the session. All other\n    cases now use an exception that implements WException. This does\n    not affect situations where a std::exception was advertised in the\n    API.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WLogger.html\">WLogger</a>\n  </dt>\n  <dd>\n    <div>\n      We have reorganized the logging within Wt. Internally, a number\n      of macros are now used for logging, with as default\n      implementation our own (simple) logger, but which can be\n      redefined to use instead another logging framework of your\n      choice, as some have rightfully requested.\n    </div>\n    <div>\n      But we've also improved our logger so that it now can be\n      configured to filter only certain information, based on type and\n      scope. This is mostly useful for debugging and development of Wt\n      itself, since it allows us to switch on debugging output, in a\n      fine-grained way, in a debug build.\n    </div>\n    <div>Finally, a new global function has been added (Wt::log()) which\n      selects an appropriate logger for logging and is more convenient\n      than WApplication::log() which required an application instance.\n    </div>\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WTemplate.html\">WTemplate</a>\n  </dt>\n  <dd>\n    <div>Arguments to bound functions are now parsed and passed to\n      the resolveString() methods.</div>\n\n    <div>Two new constructs have been added: conditions and\n      functions. Conditions allow certain parts of a template to be\n      skipped or included based on a bound condition. Functions are\n      useful to automatically resolve certain variables, two built-in\n      functions are implemented: one to resolve strings in a message\n      resource bundle (\"tr\"), and another to resolve the id of a bound\n      widget (\"id\").\n    </div>\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1collection.html\">Dbo::collection&lt;T&gt;</a>\n  </dt>\n  <dd>\n    We've added front() methods that return the first element.\n  </dd>\n\n  <dt>\n    Built-in httpd connector\n  </dt>\n  <dd>\n    We have expanded the WebSockets implementation to cover newer\n    versions of the WebSockets protocol (draft): next to 00, we now\n    also support 07, 08 and 13 protocols (with draft-17 semantics).\n  </dd>\n\n  <dt>\n    Configuration\n  </dt>\n  <dd>\n    On UNIX-like platforms, and using the built-in httpd connector,\n    SIGHUP is caught in the WServer::waitForShutdown() utility function,\n    and the configuration file (wt_config.xml) is reread.\n  </dd>\n\n  <dt>\n    Several security improvements\n  </dt>\n  <dd>\n    <dl>\n      <dt>DoS mitigation</dt>\n      <dd>We have added two measures to prevent DoS attacks that try\n\tto exhaust the server by spawning sessions. This is in\n\tparticular a risk when deploying using the progressive bootstrap\n\tmethod, since then a plain HTML session can be spawned with a\n\tsingle request.\n\t<ul>\n\t  <li>Plain sessions may be limited to constitute only a\n\t  fraction of the total number of sessions. This is configured\n\t  using the &lt;plain-ajax-sessions-ratio-limit&gt;\n\t  configuration option.</li>\n\t  <li>Ajax sessions need to confirm their \"intelligence\" by\n\t  solving a puzzle which requires them to properly parse the\n\t  (ever-changing) JavaScript and HTML.</li>\n\t</ul>\n      </dd>\n      <dt>Compromised session ID risk reduction</dt>\n      <dd>\n\tA compromised session ID no longer can be used to hijack that\n\tsession.\n\t<ul>\n\t  <li>A full page refresh (using the session ID to rerender\n\t    the current application state) is no longer allowed unless\n\t    both client IP address and user-agent are unchanged. To\n\t    still enable page refresh in this situation, you may\n\t    configure the use of a cookie which can be used to confirm\n\t    the original browser (although that cookie will not be\n\t    used for session tracking), using the\n\t    &lt;session-id-cookie&gt; setting.</li>\n\t  <li>\n\t    The session ID cannot be used to POST events to an Ajax\n\t    session, since these require proof of other ever-changing\n\t    context specific information, notably a pageId and ackId.\n\t  </li>\n\t</ul>\n      </dd>\n    </dl>\n  </dd>\n\n</dl>\n\n<h3>D) Non-backwards compatible changes</h3>\n\n<dl>\n  <dt>\n    Build options\n  </dt>\n  <dd>The HTTP_WITH_SSL option has been removed, and is now replaced\n    by WT_WITH_SSL -- OpenSSL is now a dependency of Wt inherited by\n    the httpd.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WValidator.html\">WValidator</a>\n  </dt>\n  <dd>\n    We broke the validate() method, to return a new WValidator::Result\n    instead of WValidator::State. The main improvement is that the\n    validation may also return a text which contains information on\n    why validation failed. This makes the API consistent with the\n    client-side API, and obviously much more useful. It will break\n    existing application that call validate() or have reimplemented\n    validate() in a custom validation class.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Test_1_1WTestEnvironment.html\">WTestEnvironment</a>\n  </dt>\n  <dd>\n    This class has moved to a pseudo-connector library\n    (libwttest). This was needed to be able to use asynchronous I/O\n    (such as Http::Client) in test cases, which rely on a WIOService\n    furnished by a WServer instance.\n  </dd>\n</dl>\n\n<hr>\n\n<h2>Release 3.1.11 (September 23, 2011)</h2>\n\n<p>\n  This release\n  contains <a href=\"http://redmine.emweb.be/versions/show/12\">many\n  bug fixes</a> and a few new features.\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WLink.html\">WLink</a>\n  </dt>\n  <dd>\n    This class unifies the different link types used in Wt, in a\n    single value class. Depending on the context, a link may refer to\n    a URL, a resource, or an internal path. We've updated the API\n    throughout to replace the function overloads for these different\n    cases with a single usage of WLink, simplifying the API (but don't\n    worry, we left the old methods, albeit deprecated).\n  </dd>\n  <dt>\n    <a href=\"classWt_1_1WMediaPlayer.html\">WMediaPlayer</a>\n  </dt>\n  <dd>\n    A media player has been added which provides a unified framework\n    for playing audio and video, and which deals with cross-browser\n    issues (choosing a suitable implementation per browser). We've also\n    renamed WHTML5Audio, WHTML5Video, and WHTML5Media to WAudio,\n    WVideo and WAbstractMedia respectively (since well, everything\n    will eventually be HTML5, no ?).\n  </dd>\n</dl>\n\n<h3>B) Main improvements:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WResource.html\">WResource</a>,\n    <a href=\"classWt_1_1Http_1_1ResponseContinuation.html\">Http::ResponseContinuation</a>\n  </dt>\n  <dd>\n    Currently, you can already stream the output of a big resource in\n    little chunks, using a continuation to resume sending the next\n    part. We've now added API methods\n    (WResourceContinuation::waitForMoreData() and\n    WResource::haveMoreData()) to allow a resource to suspend its\n    response because it is currently lacking more data, to continue\n    later when new data is available (and without tying up a thread).\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WDialog.html\">WDialog</a>\n  </dt>\n  <dd>\n    Added an option setResizable() which puts a resize handle in the\n    bottom right corner.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WPopupMenu.html\">WPopupMenu</a>,\n    <a href=\"classWt_1_1WPopupMenuItem.html\">WPopupMenuItem</a>\n  </dt>\n  <dd>\n    Added a triggered() signal, and an option to automatically cancel\n    the popup menu when the mouse leaves the menu (after a\n    delay). We've also added the possibility to link a popup menu item\n    with a WLink, and the option to make the item which has a submenu\n    item also itself selectable.\n  </dd>\n\n  <dt>\n    Dbo::Session\n  </dt>\n  <dd>\n    The load() method has an additional, optional parameter, to force\n    rereading the copy from the database.\n  </dd>\n\n  <dt>\n    Dbo::collection&lt;C&gt;\n  </dt>\n  <dd>\n    Added a count() method which uses a query to determine whether the\n    collection contains an element.\n  </dd>\n\n  <dt>\n    Test::WTestEnvironment\n  </dt>\n  <dd>\n    Added dialogExecuted() and popupExecuted() methods which allow to\n    interact with a reentrant eventloop from a test plan.\n  </dd>\n</dl>\n\n<h3>C) Non-backwards compatible changes</h3>\n\nThe item data roles InternalPathRole and UrlRole have been removed,\nand replaced by a LinkRole (which contains a WLink value instead).\n\n<h3>D) Deprecated API</h3>\n\nWith the introduction of WLink, the following API is being deprecated\n(although it can be argued that some of these may be kept for\nconvenience):\n\n<ul>\n  <li>\n    WAbstractArea::setRef(): use WAbstractArea::setLink() instead.\n  </li>\n  <li>\n    WAbstractArea::ref(): use WAbstractArea::link() instead.\n  </li>\n  <li>\n    WAbstractArea::setResource(): use WAbstractArea::setLink() instead.\n  </li>\n  <li>\n    WAbstractArea::resource(): use WAbstractArea::link() instead.\n  </li>\n  <li>\n    WAnchor::setRef(): use WAnchor::setLink() instead.\n  </li>\n  <li>\n    WAnchor::ref(): use WAnchor::link() instead.\n  </li>\n  <li>\n    WAnchor::setResource(): use WAnchor::setLink() instead.\n  </li>\n  <li>\n    WAnchor::resource(): use WAnchor::link() instead.\n  </li>\n  <li>\n    WAnchor::setRefInternalPath(): use WAnchor::setLink() instead.\n  </li>\n  <li>\n    WImage::setImageRef(): use WImage::setImageLink() instead.\n  </li>\n  <li>\n    WImage::imageRef(): use WImage::imageLink() instead.\n  </li>\n  <li>\n    WImage::setResource(): use WImage::setLink() instead.\n  </li>\n  <li>\n    WImage::resource(): use WImage::link() instead.\n  </li>\n  <li>\n    WStandardItem::setInternalPath(): use WStandardItem::setLink() instead.\n  </li>\n  <li>\n    WStandardItem::internalPath(): use WStandardItem::link() instead.\n  </li>\n  <li>\n    WStandardItem::setUrl(): use WStandardItem::setLink() instead.\n  </li>\n  <li>\n    WStandardItem::url(): use WStandardItem::link() instead.\n  </li>\n</ul>\n\nThe following classes have been renamed, and the old name is being\ndeprecated:\n\n<ul>\n  <li>\n    WHTMLMedia is now WAbstractMedia.\n  </li>\n  <li>\n    WHTMLVideo is now WVideo\n  </li>\n  <li>\n    WHTMLAudio is now WAudio\n  </li>\n</ul>    \n\n<hr>\n\n<h2>Release 3.1.10 (July 8, 2011)</h2>\n\n<p>\n  This release contains a mix of new features and bug fixes \n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WAnimation.html\">WAnimation</a>\n  </dt>\n  <dd>\n    We have added support for animations to show or hide widgets (used\n    in <a href=\"classWt_1_1WWidget.html#a66bdda41220267a8c7ff9865996e2675\">WWidget::setHidden()</a>,\n    and <a href=\"classWt_1_1WStackedWidget.html\">WStackedWidget</a>). These\n    animations will only be used when the browser supports CSS3\n    animations (at the moment of writing that includes latest Firefox,\n    Chrome and Safari releases).\n  </dd>\n  <dt>\n    <a href=\"classWt_1_1WStreamResource.html\">WStreamResource</a>\n  </dt>\n  <dd>\n    Dmitriy Igrishin factored this out of the WFileResource since most\n    of its functionality (continuations, range support) could be\n    generalized to streaming from a std::istream.\n  </dd>\n</dl>\n\n<h3>B) Main improvements:</h3>\n\n<dl>\n  <dt>\n    Allowing multiple WServer instances.\n  </dt>\n  <dd>\n    Apparently for no good reasons at all, some singletons were still\n    around which prevented you from instantiating\n    multiple <a href=\"classWt_1_1WServer\">application servers</a>. Now\n    you can (but only using the built-in httpd) instantiate multiple\n    servers side by side in the same process, which may server the\n    same or different web applications over different ports. A feature\n    example (<code>multiple_servers</code>) shows how that works.\n  </dd>\n\n  <dt>\n    Internal path encoding in WTemplate and WText\n  </dt>\n  <dd>\n    <div>\n      The\n      new <a href=\"classWt_1_1WTemplate.html#aeee888e560c519ac0e33bfc1ebb315e2\">setInternalPathEncoding()</a>\n      method will, if needed, enable re-encoding of &lt;a&gt; anchors\n      which reference internal paths consistent with how in the\n      current session internal paths need to be dealt with (which\n      depends on whether the browser supports Ajax and HTML5 History).\n    </div>\n    <div>\n      Since this requires an additional XML parsing step (but the\n      rapidxml parser that is used is ... rapid !), it is off by\n      default.\n    </div>\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WWApplication.html\">WApplication::findWidget()</a>\n  </dt>\n  <dd>\n    Like WWidget::findWidget(), but on the whole application,\n    including widgets outside the WApplication::root().\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WWApplication.html\">WApplication::changeSessionId()</a>\n  </dt>\n  <dd>\n    Generates a new session ID for the application. This is useful to prevent\n    session fixation attacks by changing the session ID when a user has\n    authenticated successfully.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WResource.html\">WResource::setDispositionType()</a>\n  </dt>\n  <dd>\n    This method allows to specify how the browser should preferably\n    show a (non-HTML) resource.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WTable.html\">WTable</a>\n  </dt>\n  <dd>\n    Methods were added\n    to <a href=\"classWt_1_1WTable.html#a239d85781509ff321eb964af042bcf57\">move\n    a row</a>\n    or <a href=\"classWt_1_1WTable.html#a0670b90a05a6c0176c773bf8766a5bf2\">a\n    column</a>. In addition we added methods\n    to <a href=\"classWt_1_1WTableRow.html\">WTableRow</a>\n    and <a href=\"classWt_1_1WTableColumn.html\">WTableColumn</a> for\n    accessing cells in the given row or column.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WTextEdit.html\">WTextEdit</a>\n  </dt>\n  <dd>\n    Various improvements to allow more flexible access to TinyMCE\n    settings on a per-instance basis.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WWidget.html\">WWidget::setToolTip()</a>\n  </dt>\n  <dd>\n    An additional argument was added which may specify the use of\n    XHTML tooltips, which are implemented using a &lt;div&gt;.\n  </dd>\n\n  <dt>\n    Dbo::collection&lt;T&gt;\n  </dt>\n  <dd>\n    Make insert() and erase() also work for a collection involved in a\n    1-N relation\n  </dd>\n\n  <dt>\n    Dbo::ptr&lt;C&gt;\n  </dt>\n  <dd>\n    Improved modify() behaviour returns a proxy object which marks the\n    the object dirty also from its destructor, avoiding situations where\n    the transaction is flushed during a modification and remainig changes\n    are forgotten.\n  </dd>\n\n  <dt>\n    Dbo::Dbo&lt;C&gt;\n  </dt>\n  <dd>\n    Added setDirty() and self() methods.\n  </dd>\n\n  <dt>\n    Dbo::backend::Sqlite3\n  </dt>\n  <dd>\n    The packaged sqlite3 version was bumped from 3.6.20 to 3.7.6\n  </dd>\n\n</dl>\n\n<h3>C) Non-backwards compatible changes</h3>\n\n<dl>\n  <dt>The signature of the virtual method WWidget::setHidden() has changed.</dt>\n  <dd>\n    Probably the biggest breaking change since long, this was needed\n    to add support for animations. This will break existing code which\n    specializes the WWidget::setHidden() method. This code should be\n    updated to pass the WAnimation object.\n  </dd>\n</dl>\n\n<hr>\n\n<h2>Release 3.1.9 (April 7, 2011)</h2>\n\n<p>\n  This release contains mostly bug fixes and quality improvements.\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WAbstractSpinBox.html\">WAbstractSpinBox</a>,\n    <a href=\"classWt_1_1WDoubleSpinBox.html\">WDoubleSpinBox</a>\n  </dt>\n  <dd>\n    Refactored and reimplemented the spinbox control into an integer\n    and floating point version, which may be implemented either using\n    a native HTML5 element or a portable Wt implementation.\n  </dd>\n\n</dl>\n\n<h3>B) Main new features in existing classes:</h3>\n\n<dl>\n  <dt>\n    Internal path handling: HTML5 History API\n  </dt>\n  <dd>\n    <div>\n      When the browser supports the HTML5 History API, URLs are now the\n      same for plain HTML and Ajax-enabled session (i.e. without the '#'\n      trick). This can improve load time and improves the\n      user-experience.\n    </div>\n\n    <div>\n      To avoid problems of resolving resources with relative URLs, a\n      new property 'baseURL' can be used (that can be configured in\n      wt_config.xml), which allows all relative URLs be resolved from\n      the same location.\n    </div>\n  </dd>\n\n  <dt>\n    Internal path handling: no ugly internal paths ('?_=/path')\n  </dt>\n  <dd>\n    The configuration option (--docroot) for the built-in\n    httpd allows to specify folders with static paths and when doing\n    so, all other requests are forwarded to the application, which in\n    turn does no longer need to rely on the ugly '?_=' query parameter\n    to encode its internal paths.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WPdfImage.html\">WPdfImage</a>, <a href=\"classWt_1_1WRasterImage.html\">WRasterImage</a>\n  </dt>\n  <dd>\n    Improved font support: the library can be optionally built to use\n    libpango for resolving characters to glyphs. This allows text to\n    be rendered using a mix of different fonts that all provide only\n    partial coverage for the entire unicode range. Note that for\n    WPdfImage, this currently requires use of a libharu fork\n    (https://github.com/kdeforche/libharu/tree/)\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WAbstractItemView.html\">WAbstractItemView</a>,\n    WTableView and WTreeView\n  </dt>\n  <dd>\n    Implementation of setRowHeaderCount() which fixes the number of\n    columns that are used as row headers and remain fixed while\n    scrolling horizontally through the table. This replaces the now\n    deprecated setColumn1Fixed() API.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WRasterImage.html\">WRasterImage</a>\n  </dt>\n  <dd>\n    Several quality improvements: correct rendering of alpha\n    compositing, text rendering by libpango, \n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WSlider.html\">WSlider</a>\n  </dt>\n  <dd>\n    The slider has been reimplemented to allow for using either the\n    native HTML5 slider control, or the Wt implementation. The Wt\n    implementation can now also be styled through CSS.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WServer.html#abca6890dab44d87bd3af64705ac072d3\">WRun()</a>,\n    <a href=\"classWt_1_1WServer.html#a84f84652ccb139850adcf5ea75f50fa5\">WServer::addEntryPoint()</a>\n  </dt>\n  <dd>\n    The callback function is now a boost::function<> object, allowing\n    you to bind other variables into the callback function.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WServer.html#a2894484a9661d728dc9aa60ba79bb570\">WServer::post()</a>\n  </dt>\n  <dd>\n    A safe method to post events to a session, and a useful\n    alternative to WApplication::UpdateLock. The simplechat and\n    codeview examples were converted to illustrate this method rather\n    than the (dead-lock prone) WApplication::UpdateLock approach.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WString.html#abcff7d3d30972762bd5d9279dc903a36\">WString::trn()</a>\n  </dt>\n  <dd>\n    Implementation of plural string resolution, with locale-dependent\n    rules. The implementation provided\n    by <a href=\"classWt_1_1WMessageResourceBundle.html\">WMessageResourceBundle</a>\n    allows the same kind of expressions as GNU ngettext().\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Chart_1_1WAxis.html#ab36cb584a0aa8bdcc1c3212a9304e6cd\">Chart::WAxis::setResolution()</a>\n  </dt>\n  <dd>\n    Allows to specify the minimum chart axis resolution (contributed by Gaetano Mendola).\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1Transaction.html\">Dbo::Transaction</a>\n  </dt>\n  <dd>\n    Fixed an issue with internal inconsistencies after transaction rollback.\n  </dd>\n\n</dl>\n\n<h3>C) Non-backwards compatible changes</h3>\n\n<dl>\n  <dt>Changed i18n keys for <code>Wt.WDate.Mon-Sun</code>\n  and <code>Wt.Date.Jan-Dec</code></dt>\n  <dd>\n    We were pointed out the fact that the built-in i18n keys for WDate\n    month names had a collision for the month 'May', which had the\n    same key for the abbreviated 3-letter variant as the full length\n    variant. Therefore in this release we reformatted the abbreviated\n    3-letter variant keys to <code>Wt.WDate.3.Mon-Sun</code>\n    and <code>Wt.WDate.3.Jan-Dec</code>. You will need to update your own\n    languages copies of these (or better, contribute them and we'll\n    maintain them for you!).\n  </dd>\n</dl>\n\n<h3>D) Android and iPad/iPhone targets</h3>\n\n<p>This release contains initial work on supporting Android and\niPad/iPhone as targets for deploying Wt applications within a webkit\nview widget.</p>\n\n<p>For iPad/iPhone, we added a script that builds Wt as an OSX Framework\nwhich may be used in XCode to build iOS applications.</p>\n\n<p>For Android, we added support for building the library and examples as\nshared objects which are packaged together with a small Java project\nwhich instantiates a WebView, into standalone APK files.</p>\n\n<p>This is ongoing work. We need to improve support in Wt for Mobile\nWebkit to make the applications look and behave more as native\napplications on these devices.</p>\n\n<hr>\n\n<h2>Release 3.1.8 (Feb 4, 2011)</h2>\n\n<p>\n  This release contains mostly bug fixes, quality improvements,\n  and a few new features.\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WFontMetrics.html\">WFontMetrics</a></dt>\n  <dd>\n    A font metrics class. Font metrics are only available for\n    WPdfImage, and an implementation is planned for WRasterImage.\n  </dd>\n  <dt><a href=\"classWt_1_1Render_1_1WTextRenderer.html\">Render::WTextRenderer</a>, \n  <a href=\"classWt_1_1Render_1_1WPdfRenderer.html\">Render::WPdfRenderer</a></dt>\n  <dd>\n    A renderer class for a subset of XHTML, useful for e.g.~generating\n    PDF reports.\n  </dd>\n\n</dl>\n\n<h3>B) Main new features in existing classes:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WAbstractItemView.html#ad11215811b4de66f3d3c4267b694fe38\">WAbstractItemView::setHeaderItemDelegate()</a>\n  </dt>\n  <dd>\n    Rendering of header cells is now also delegated and can be customized.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WAbstractItemView.html#a027a8ad4967a0e269bdabbffca15f489\">WAbstractItemView::scrollTo()</a>\n  </dt>\n  <dd>\n    Scroll to a particular item.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WApplication.html#a44c5f0398b5539269be3961b26e95b08\">WApplication::setLayoutDirection()</a>\n  </dt>\n  <dd>\n    Added support for Right-To-Left (mirrored) layouts, typically used\n    with some middle-Eastern languages. In addition to HTML's built-in\n    support for RTL directionality, layout managers, tables and MVC\n    tree/table views render their columns in the opposite order.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WBoxLayout.html\">WBoxLayout, WGridLayout, WBorderLayout</a>\n  </dt>\n  <dd>\n    Empty layout items do longer create padding, and thus padding\n    collapses around empty items (both horizontally and vertically).\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WEvent.html\">WEvent::eventType()</a>\n  </dt>\n  <dd>\n    Information on the event type may be used during WApplication::notify()\n    for e.g. detecting user activity.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WGoogleMap.html\">WGoogleMap</a>\n  </dt>\n  <dd>\n    Added support for Google API version 3, alongside version 2.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WPdfImage.html\">WPdfImage</a>\n  </dt>\n  <dd>\n    Added support true type font loading, a UTF8 patch for libharu is\n    pending to enable full unicode support text rendering.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1WWidget.html#afc4bfcc92fa39010cac8775f3332dfa5\">WWidget::setWidth()</a>,\n    <a href=\"classWt_1_1WWidget.html#a7d82ee32496743fdd28b30461f95d5ec\">WWidget::setHeight()</a>\n  </dt>\n  <dd>\n    Convenience methods for resize() for only width or height.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Chart_1_1WCartesianChart.html\">Chart::WCartesianChart</a>\n  </dt>\n  <dd>\n    A number of methods to customize the location and look of the legend.\n  </dd>\n\n  <dt>\n    <a href=\"classWt_1_1Chart_1_1WDataSeries.html#a9361e12e94699f59090ae8ac3a4921df\">Chart::WDataSeries::setXSeriesColumn()</a>\n  </dt>\n  <dd>\n    Allow use of a specific X series for each data series in scatter plots.\n  </dd>\n\n  <dt>\n    <a href=\"group__dbo.html#ga0f2f0c37d44f27e151b8f12412240731\">Dbo::belongsTo()</a>, <a href=\"group__dbo.html#ga0d0cbc70dcfebc659ea1662e9327c90c\">Dbo::hasMany()</a>\n  </dt>\n  <dd>\n    Support for foreign key constraints (NotNull, OnDeleteCascade, etc...).\n  </dd>\n\n  <dt>\n    <a href=\"group__dbo.html#ga0f2f0c37d44f27e151b8f12412240731\">Dbo::Session::rereadAll()</a>\n  </dt>\n  <dd>\n    Can be optionally given a single table name to reread (discard) all object\n    data from a single class/table.\n  </dd>\n\n  <dt>\n    <a href=\"structWt_1_1Dbo_1_1sql__value__traits.html\">Dbo::sql_value_traits&lt;bool&gt;, Dbo::sql_value_traits&lt;long&gt;</a>\n  </dt>\n  <dd>\n    Added mappings for C++ <code>bool</code> and <code>long</code> types.\n  </dd>\n\n</dl>\n\n<h3>C) API and other changes:</h3>\n\n<dl>\n  <dt>\n    CORS (Cross-Origin Resource Sharing)\n  </dt>\n  <dd>\n    A communication method between browser and server is now chosen\n    based on the needs (same origin or cross-origin), and based on\n    browser support. Cross-Origin requests are now supported for both\n    Ajax and WebSockets, and are are chosen if available and needed,\n    reverting to dynamic script-tags otherwise.<br/>\n\n    The WApplication::setAjaxMethod() has no effect anymore, and has\n    been deprecated.\n  </dd>\n\n  <dt>\n    Bootstrap process has changed.\n  </dt>\n  <dd>\n    While tracking bootstrapping problems on IE8 (resulting in a blank\n    page instead of a shiny app), we not only found a good workaround\n    for that, but also found a way to implement the default bootstrap\n    mode so that the stylesheets are applied before the application is\n    rendered. This solves the annoying flicker you experienced with\n    the default bootstrap mode, and also allows us to remove a number\n    of workarounds for IE. As a result of various cleanups, more CSS\n    stylesheet rules have been pushed out to the external wt.css\n    (theme) stylesheet. If you've created your own theme, you will\n    need to take note.\n  </dd>\n\n  <dt>\n    <a href=\"group__painting.html#gaf67a889bc5e9f8ab3a59fe58b0fa2128\">Wt::BrushStyle</a>\n  </dt>\n  <dd>\n     Wt::WBrushstyle has been renamed to Wt::BrushStyle. This makes it\n     consistent with the naming conventions of other enums. Sorry, our\n     mistake !\n  </dd>\n</dl>\n\n<hr />\n\n<h2>Release 3.1.7 (Nov 26, 2010)</h2>\n\n<p>\n  This release contains mostly bug fixes, quality improvements,\n  and a few new features.\n</p>\n\n<p>\n  Note: the package was updated (3.1.7a) on Nov 30 to fix a layouting\n  regression.\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WGLWidget.html\">WGLWidget</a></dt>\n  <dd>\n    A preview of WebGL support in Wt (work in progress).\n  </dd>\n</dl>\n\n<h3>B) Main new features in existing classes:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WAbstractItemView.html#a120156dc59eaf3608916b679d937c5b8\">WAbstractItemView</a>\n  </dt>\n  <dd>Added API for hiding columns.</dd>\n  <dt>\n    <a\n  href=\"classWt_1_1Chart_1_1WCartesianChart.html\">WCartesianChart</a>,\n    <a\n  href=\"classWt_1_1Chart_1_1WCartesianChart.html\">WPieChart</a>\n  </dt>\n  <dd>\n    Added support for ToolTipRole data, using WAbstractArea interactive areas.\n  </dd>\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1Session.html#ad59da4e078a4e6532da698425193bbdb\">Dbo::Session::rereadAll()</a>\n  </dt>\n  <dd>\n    Reread all transient objects, as a catch-all solution to stale\n    data (data modified in another session).\n  </dd>\n  <dt>\n    <a href=\"classWt_1_1WInteractWidget.html#ac7d10a6cae1e23a791b44c0682a3c627\">WInteractWidget</a>\n  </dt>\n  <dd>Added support for touch and gesture events (Mobile webkit).</dd>\n</dl>\n\n<h3>C) Misc:</h3>\n\n<dl>\n  <dt>\n    WebSocket protocol support (experimental)\n  </dt>\n  <dd>Use of WebSocket for communication between browser and server\n    can now be used, by enabling &lt;web-sockets&gt; in the\n    configuration file (we're likely to turn this on by default in a\n    future version. There is automatic fallback to the current\n    XMLHttpRequest based communication if WebSockets are not available\n    or communication could not be established. WebSockets is only\n    available using the built-in httpd server (which is now also a\n    WebSocket server).</dd>\n  <dt>\n    Build improvements\n  </dt>\n  <dd>\n    <ul>\n      <li>Provide a workaround for broken g++ compiler shipped in Ubuntu\n      Maverick</li>\n      <li>Provide support for building without using \n      std::wstring (-DWT_NO_STD_WSTRING) or std::locale\n      (-DWT_NO_STD_LOCALE=OFF) support.\n      </li>\n    </ul>\n  </dd>\n</dl>\n\n<hr />\n\n<h2>Release 3.1.6 (Oct 29, 2010)</h2>\n\n<p>\n  This release contains a healthy mix of bug fixes, quality improvements,\n  and new features. And hopefully no regressions :-)\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1SyncLock.html\">SyncLock&lt;Lock&gt;</a></dt>\n  <dd>\n    A dead-lock avoidance adaptor for a Boost mutex lock, which provides\n    a controlled way of releasing the current application lock.\n  </dd>\n  <dt><a href=\"classWt_1_1WProgressBar.html\">WProgressBar</a></dt>\n  <dd>\n    A progress bar, contributed by Thomas Suckow.\n  </dd>\n  <dt><a href=\"classWt_1_1WSpinBox.html\">WSpinBox</a></dt>\n  <dd>\n    A spin box.\n  </dd>\n  <dt><a href=\"structWt_1_1boost__any__traits.html\">boost_any_traits&lt;Type&gt;</a></dt>\n  <dd>\n    A traits class for customized interpretation of data stored in a\n    boost::any. You can register a new type using <a href=\"group__modelview.html#ga91842a84102ee15d41102ccf0745f4e4\">registerType&lt;Type&gt;</a>.\n  </dd>\n\n</dl>\n\n<h3>B) Main new features in existing classes:</h3>\n\n<dl>\n  <dt>\n    Native support for MSIE 9\n  </dt>\n  <dd>\n    MSIE 9 (Beta) is now supported in all its goodness, including support\n    for HTML5 canvas and (almost working) support for SVG.\n  </dd>\n  <dt>\n    <a href=\"classWt_1_1WApplication_1_1UpdateLock.html\">\n      WApplication::UpdateLock</a>\n  </dt>\n  <dd>The lock is now a RIAA lock, getUpdateLock() has been deprecated.\n    The lock needs also to be tested against validity (using operator bool()):\n    when invalid the session that it is trying to lock is being destroyed.</dd>\n  <dt>\n    <a href=\"classWt_1_1WApplication.html#a506978cfb884af4bc6ffd5a5bc8476d6\">WApplication::setConfirmCloseMessage()</a>\n  </dt>\n  <dd>Provide the user with a message to confirm navigating away from the\n    application.</dd>\n  <dt>\n    <a href=\"classWt_1_1WApplication.html#a9a4048e01b69a536e35f47eb2a59a69b\">WApplication::unload()</a>\n  </dt>\n  <dd>Rather then waiting for the session to expire, an application\n    that is navigated away iis now notified of this and will by\n    default <code>quit()</code>.</dd>\n  <dt>\n    <a href=\"classWt_1_1WApplication.html#a149412d829d104621c445bc10604be53\">WApplication::addMetaHeader()</a>\n  </dt>\n  <dd>Can now be used to specify \"http-equiv\" meta headers too.</dd>\n  <dt>\n    <a href=\"classWt_1_1WDatePicker.html#acda30d9035692895a2bb94090babc073\">WDatePicker::changed()</a>\n  </dt>\n  <dd>I wonder how we ever did without.\n  </dd>\n  <dt><a href=\"classWt_1_1WAbstractArea.html#a3dbe39c26769a63e4bf63020e31e9f22\">WAbstractArea::mouseWheel()</a>,\n  <a href=\"classWt_1_1WInteractWidget.html#a656a0e4d5af72af0190d84dedf0093c6\">WInteractWidget::mouseWheel()</a>,\n  <a href=\"classWt_1_1WMouseEvent.html#a4354738e0bce7e57764a465f5e19895d\">WMouseEvent::wheelDelta()</a></dt>\n  <dd>\n    Added mouseWheel() event.\n  </dd>\n\n  <dt><a href=\"classWt_1_1WFileUpload.html\">WFileUpload</a></dt>\n  <dd>\n    Added support for the simultaneous upload of multiple files (HTML5\n    \"multiple\") attribute and showing a progress bar to show upload\n    progress.\n  </dd>\n\n  <dt><a href=\"classWt_1_1WFormWidget.html\">WFormWidget::hasFocus()</a></dt>\n  <dd>\n    Returns whether the widget currently has the keyboard focus.\n  </dd>\n\n  <dt><a href=\"classWt_1_1WHTML5Media.html\">WHTML5Media</a></dt>\n  <dd>\n    Added events to catch play, pause, play-back progress and volume\n    changes.\n  </dd>\n\n  <dt><a href=\"classWt_1_1WLineEdit.html\">WLineEdit</a>, <a href=\"classWt_1_1WTextArea.html\">WTextArea</a></dt>\n  <dd>\n    Added <code>currentPosition()</code>, <code>selectionStart()</code>,\n    <code>selectedText()</code>, and <code>hasSelectedText()</code> methods to retrieve\n    the current cursor position and selection.\n  </dd>\n\n  <dt><a href=\"classWt_1_1WPushButton.html#aa5830a2118836423f0c16d12bbfd57a0\">WPushButton::setRef()</a></dt>\n  <dd>\n    Utility method to create an anchor that looks like a button, or a\n    button that behaves like an anchor, depending on your point of\n    view. There is also <code>setResource()</code> to set a resource as\n    target.\n  </dd>\n  <dt>\n    <a href=\"classWt_1_1WResource.html\">WResource</a>\n  </dt>\n  <dd>Added API for upload progress tracking.</dd>\n\n  <dt>\n    <a href=\"classWt_1_1Http_1_1Request.html\">Http::Request</a>\n  </dt>\n  <dd>Added support for HTTP request byte ranges, and this is now\n  interpreted by both the WFileResource and built-in httpd for static\n  files.\n  </dd>\n  <dt>\n    <a href=\"classWt_1_1Http_1_1Response.html\">Http::Response</a>\n  </dt>\n  <dd>Added <code>setContentLength()</code> which allows you to specify the\n    length of the response in advance, proving a better user experience\n    for large downloads.\n  </dd>\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1Session.html#8712ff0d59f7bb6a4d2986ad9637cc9e\">Dbo::Session::query()</a>\n  </dt>\n  <dd>Switched to a more complete Boost.Spirit parser for SQL queries, which\n    understands most of the SQL syntax, including functions,\n    \"with ... select ... \".\n  </dd>\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1QueryModel.html\">Dbo::QueryModel</a>\n  </dt>\n  <dd>Added support for custom column header names and changing the\n    underlying query using setQuery() while preserving the current\n    column definitions.</dd>\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1SqlStatement.html\">Dbo::SqlStatement</a>\n  </dt>\n  <dd>Added boost::posix_time::time_duration type support.</dd>\n  <dt>\n    <a href=\"structWt_1_1Dbo_1_1sql__value__traits.html\">Dbo::sql_value_traits&lt;WTime&gt;</a>\n  </dt>\n  <dd>Added template specialization for WTime.</dd>\n</dl>\n\n<hr />\n\n<h2>Release 3.1.5 (Sep 10, 2010)</h2>\n\n<p>\n  This release contains mostly bug fixes.\n</p>\n\n<h3>A) Main Changes</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WGridLayout.html\">WGridLayout</a>,\n    <a href=\"classWt_1_1WBoxLayout.html\">WBoxLayout</a></dt>\n  <dd>Optimized client-side rendering performance. Previously, every layout\n    manager used would automatically slowdown every event because it would try\n    to relayout each time. This is no longer the case.</dd>\n  <dt><a href=\"classWt_1_1WSocketNotifier.html\">WSocketNotifier</a></dt>\n  <dd>The socket notifier has been resurrected (it was in a perpetual state\n    of brokenness) and now works reliably across targets.</dd>\n</dl>\n\n<h3>B) Changes that may break existing applications:</h3>\n\n<h4>1) Built-in resource bundles</h4>\n\nStarting with this version, Wt uses an internal message resource\nbundle for the few strings it provides by itself (like for example\n'Ok' for the ok button in a WMessageBox, or the days-of-week in WDate).\n\nPreviously, an ugly API was used in <a href=\"classWt_1_1WMessageBox.html\">WMessageBox</a>,\n<a href=\"classWt_1_1WCalendar.html\">WCalendar</a>,\nand <a href=\"classWt_1_1WDatePicker.html\">WDatePicker</a>\nusing a boolean 'i18n' parameter in the constructor. All this has now been removed,\nand instead the keys for these built-in strings have been documented. If you were\nusing these classes your application will no longer build, you can simply remove the\ninternationalization parameter and you will need to fix the keys you used for the\nmessages according to the documentation.\n\nAny localized strings you use will take precedence over these built-ins.\n\nAll affected classes (only those listed above actually have changed API and behaviour) are:\n<dl>\n  <dt><a href=\"classWt_1_1WAbstractItemView.html\">WAbstractItemView</a></dt>\n  <dd>the paging tool bar buttons for graceful callback.</dd>\n  <dt><a href=\"classWt_1_1WCalendar.html\">WCalendar</a></dt>\n  <dd>because of WDate</dd>\n  <dt><a href=\"classWt_1_1WDate.html\">WDate</a> and <a href=\"classWt_1_1WDateTime.html\">WDateTime</a></dt>\n  <dd>week days, month names</dd>\n  <dt><a href=\"classWt_1_1WDatePicker.html\">WDatePicker</a></dt>\n  <dd>because of WCalendar and for the close button</dd>\n  <dt><a href=\"classWt_1_1WDefaultLoadingIndicator.html\">WDefaultLoadingIndicator</a></dt>\n  <dd>loading text</dd>\n  <dt><a href=\"classWt_1_1WInPlaceEdit.html\">WInPlaceEdit</a></dt>\n  <dd>save and cancel button text</dd>\n  <dt><a href=\"classWt_1_1WMessageBox.html\">WMessageBox</a></dt>\n  <dd>standard buttons</dd>\n  <dt><a href=\"classWt_1_1WOverlayLoadingIndicator.html\">WLoadingIndicator</a></dt>\n  <dd>standard buttons</dd>\n  <dt><a href=\"classWt_1_1WValidator.html\">Validators</a></dt>\n  <dd>for the messages they display in case of error</dd>\n</dl>\n\n<h4>2) Other behavioural changes</h4>\n\n<dl>\n  <dt><a href=\"structWt_1_1WDialog.html\">WDialog</a></dt>\n  <dd>Escape will no longer result in the dialog being rejected. You can\n    enable this behaviour using the rejectWhenEscaped() method.\n  </dd>\n</dl>\n\n<hr />\n\n<h2>Release 3.1.4 (Aug 13, 2010)</h2>\n\n<p>\n  This release contains several new features, but also a few changes\n  that break backwards compatibility (but are unlikely to affect an\n  average application).\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WBatchEditProxyModel.html\">\n      WBatchEditProxyModel</a></dt>\n  <dd>A proxy model that caches editing operations to commit them atomically.\n  </dd>\n  <dt><a href=\"classWt_1_1WHTML5Audio.html\">WHTML5Audio</a></dt>\n  <dd>Audio support using the HTML5 audio tag.</dd>\n  <dt><a href=\"classWt_1_1WPdfImage.html\">WPdfImage</a></dt>\n  <dd>A WPaintDevice that writes to Pdf (using libharu).</dd>\n  <dt><a href=\"classWt_1_1WRasterImage.html\">WRasterImage</a></dt>\n  <dd>A WPaintDevice that writes to a Png/Gif (using GraphicsMagick).</dd>\n  <dt>ISAPI connector</dt>\n  <dd>(Windows only) a connector that implements the Microsoft ISAPI\n    API, to integrate directly into Microsoft IIS. On Windows, this is\n    an alternative deployment option next to the built-in httpd.</dd>\n</dl>\n\n<h3>B) Main new features in existing classes:</h3>\n\n<dl>\n  <dt>\n    <a href=\"classWt_1_1WAbstractItemView.html\">WAbstractItemView</a>\n  </dt>\n  <dd>Added support for validators while editing.</dd>\n  <dt>\n    <a href=\"classWt_1_1WApplication.html#88b082dadadd3fb7dbe10887e7d89c91\">WApplication</a>\n  </dt>\n  <dd>Added an appRoot() method this returns the value of the\n    special property \"approot\" which can in some cases be defined\n    implicitly by a connector (such as ISAPI), and which allows an\n    application to reference working files whereas previously it was\n    assumed that they were in the working directory (CWD).</dd>\n  <dt>\n    <a href=\"classWt_1_1WEnvironment.html#fd8726dfa8cabcb49895df4a6112ef48\">WEnvironment::agent() and related</a>\n  </dt>\n  <dd>Convenience methods that return pre-parsed user agent identification,\n    should you want to differentiate based on browser.</dd>\n  <dt>\n    <a href=\"classWt_1_1WWidget.html#bb5949e98f47edb7db98d7b6df07a31c\">WWidget::addStyleClass()</a>, <a href=\"classWt_1_1WWidget.html#3b8a35e37ef06c408f346c63a5f1aa8e\">WWidget::removeStyleClass()</a>\n  </dt>\n  <dd>Added addStyleClass() and removeStyleClass() methods.</dd>\n  <dt>\n    <a href=\"classWt_1_1WMenu.html\">WMenu, WMenuItem</a>\n  </dt>\n  <dd>Added support for closable and disabled items (not complete,\n    CSS is lacking for polished theme). Contributed by Dmitriy Igrishin.</dd>\n  <dt>\n    <a href=\"classWt_1_1WModelIndex.html#93c11e136a0fdc596eb745cc7fce7033\">WModelIndex</a>\n  </dt>\n  <dd>Added support for in-place (destructive) encoding to and\n  decoding from a raw index, making this less of a hassle for View\n  classes.</dd>\n  <dt>\n    <a href=\"classWt_1_1WSortFilterProxyModel.html\">WSortFilterProxyModel</a>\n  </dt>\n  <dd>Added support for row insertion/removal.</dd>\n  <dt>\n    <a href=\"classWt_1_1WSuggestionPopup.html\">WSuggestionPopup</a>\n  </dt>\n  <dd>Allow usage as an advanced combo-box, with an explicit drop down\n  button and ability to react to a selection.</dd>\n  <dt>\n    <a href=\"group__dbo.html#gc98c1f90b00ed9ce243c6412da3ac489\">Dbo::id()</a>\n  </dt>\n  <dd>Support for natural keys (possibly of composite type) next to the\n    built-in surrogate keys.</dd>\n  <dt>\n    <a href=\"structWt_1_1Dbo_1_1dbo__traits.html\">Dbo::dbo_traits&lt;C&gt;</a>\n  </dt>\n  <dd>By specializing this traits class, you can modify the surrogate id\n    field name (or disable it), and the optimistic version lock field\n    name (or disable it).</dd>\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1Session.html#8712ff0d59f7bb6a4d2986ad9637cc9e\">Dbo::Session::query()</a>\n  </dt>\n  <dd>More robust query parsing (of the 'select' part), including\n  support for \"select distinct\".</dd>\n  <dt>\n    <a href=\"classWt_1_1Dbo_1_1QueryModel.html\">Dbo::QueryModel</a>\n  </dt>\n  <dd>Added editing support (editing the model will modify the queried\n  dbo's).</dd>\n  <dt>\n    <a href=\"structWt_1_1Dbo_1_1query__result__traits.html\">Dbo::query_result_traits&lt;C&gt;</a>\n  </dt>\n  <dd>Added setValue(), create(), add() and remove() methods for modifying\n    queried results.</dd>\n</dl>\n\n<h3>C) Changes that break existing applications:</h3>\n\n<dl>\n  <dt><a href=\"structWt_1_1Dbo_1_1Dbo.html\">Dbo::Dbo</a></dt>\n  <dd>\n    This class is now a templated with the class name itself, in\n    order to provide the proper type for the (natural or surrogate) id\n    field for id(). You will need to replace\n    <pre>\n      class User : public Wt::Dbo { ... }\n    </pre>\n    with\n    <pre>\n      class User : public Wt::Dbo&lt;User&gt; { ... }\n    </pre>\n  </dd>\n  <dt>CSS</dt>\n  <dd>The toplevel container used by Wt is now given a <code>position:\n    relative</code> style; this was needed to be able to position widgets\n    (such as popups) using <code>position: absolute</code>, but may break\n    application layouts. You can override this CSS style by adding\n    <code>.Wt-domRoot { position: static; }</code> to your application's\n    (internal or external) stylesheet.\n  </dd>\n</dl>\n\n<hr />\n\n<h2>Release 3.1.3 (May 20, 2010)</h2>\n\n<p>\n  This release several new features, but also a few changes that\n  break backwards compatibility (but are unlikely to affect an average\n  application).\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1SignalBase.html\">SignalBase</a>,\n    <a href=\"classWt_1_1EventSignalBase.html\">EventSignalBase</a></dt>\n  <dd>Abstract base classes for signals (these are not actually new,\n    but they were not yet part of the API).</dd>\n  <dt><a href=\"classWt_1_1WHTML5Video.html\">WHTML5Video</a></dt>\n  <dd>Video support using the HTML5 video tag (work-in-progress).</dd>\n  <dt><a href=\"classWt_1_1Dbo_1_1Call.html\">Dbo::Call</a></dt>\n  <dd>Class for executing a database call.</dd>\n  <dt><a href=\"classWt_1_1Dbo_1_1SqlConnectionPool.html\">\n      Dbo::SqlConnectionPool</a>,\n    <a href=\"classWt_1_1Dbo_1_1FixedSqlConnectionPool.html\">\n      Dbo::FixedSqlConnectionPool</a></dt>\n  <dd>Connection pool interface and implementation.</dd>\n  <dt><a href=\"classWt_1_1Dbo_1_1QueryModel.html\">Dbo::QueryModel</a></dt>\n  <dd>An tabular item model for query results.</dd>\n</dl>\n\n<h3>B) Main new features in existing classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WAbstractItemDelegate.html\">WAbstractItemDelegate</a></dt>\n  <dd>Added methods for editing: editState(), setEditState(),\n    setModelData() and closeEditor().</dd>\n  <dt><a href=\"classWt_1_1WAbstractItemView.html\">WAbstractItemView</a></dt>\n  <dd><div>New editing API: edit(), closeEditor(), saveEditedValue(),\n    setEditOptions(), setEditTriggers().</div>\n    <div>Graceful degradation support using a paging navigation bar, which\n    may be customized by reimplementing createPageNavigationBar().</div>\n  </dd>\n  <dt><a href=\"classWt_1_1WCalendar.html\">WCalendar</a>, <a href=\"classWt_1_1WDatePicker.html\">WDatePicker</a></dt>\n  <dd>Added setBottom() and setTop() methods to specify a valid range.</dd>\n  <dt><a href=\"classWt_1_1WInteractWidget.html\">WInteractWidget</a></dt>\n  <dd>Added a mouseDragged() event for responding to mouse moves while\n    a mouse button is down.</dd>\n  <dt><a href=\"classWt_1_1WItemDelegate.html\">WItemDelegate</a></dt>\n  <dd>Implements editing using a WLineEdit.</dd>\n  <dt><a href=\"classWt_1_1WMenu.html\">WMenu</a></dt>\n  <dd>Can now be used without a contents stack.</dd>\n  <dt><a href=\"classWt_1_1WSuggestionPopup.html\">WSuggestionPopup</a></dt>\n  <dd>Added API to support dynamic server-side filtering.</dd>\n  <dt><a href=\"classWt_1_1WTableView.html\">WTableView</a></dt>\n  <dd>New implementation which supports horizontal and vertical\n  virtual scrolling, column resizing, drag and drop, etc... like\n  WTreeView.</dd>\n  <dt><a href=\"classWt_1_1Chart_1_1WPieChart.html\">Chart::WPieChart</a></dt>\n  <dd>Supports now also a shadow effect.</dd>\n  <dt><a href=\"classWt_1_1Dbo_1_1collection.html\">Dbo::collection</a></dt>\n  <dd>A find() method has been added to refine the query of a many-side relational.</dd>\n  <dt><a href=\"classWt_1_1Dbo_1_1ptr.html\">Dbo::ptr</a></dt>\n  <dd>A version() method returns the current version.</dd>\n  <dt><a href=\"classWt_1_1Dbo_1_1Query.html\">Dbo::Query</a></dt>\n  <dd>An extra template parameter specifies a binding strategy. The\n  default binding strategy is DynamicBinding, which allows reuse of\n  the query object, and provides new API to modify the query:\n  where(), orderBy(), groupBy(), offset(), limit().</dd>\n  <dt><a href=\"classWt_1_1Dbo_1_1Session.html\">Dbo::Session</a></dt>\n  <dd>Added support for use with a connection pool. Added execute()\n  method to execute an SQL statement.</dd>\n  <dt>Built-in httpd</dt>\n  <dd>Support for HTTP Range header and partial content serving.</dd>\n</dl>\n\n<h3>C) Changes that break existing applications:</h3>\n\n<dl>\n  <dt><a href=\"structWt_1_1Dbo_1_1query__result__traits.html\">Dbo::sql_result_traits</a></dt>\n  <dd>This traits class has been renamed to query_result_traits and\n    its API has changed considerably. This will only impact when you\n    have implemented a custom traits specialization. The getColumns()\n    method has been replaced with a getFields() method, and the\n    loadValues() method has been renamed to load(). A getValues()\n    method has been added which provides conversion to boost::any's.\n  </dd>\n  <dt><a href=\"classWt_1_1WTableView.html\">WTableView</a></dt>\n  <dd>This View class was reimplemented to have functionality\n    comparable to WTreeView. In the process, we had to abandon the\n    underlying &lt;table&gt; representation because of rendering\n    issues with Chrome (of all browsers!), although the WTableView\n    documentation specifically promised that we would keep this.\n  </dd>\n</dl>\n\n<hr />\n\n<h2>Release 3.1.2 (March 26, 2010)</h2>\n\n<p>This release contains mostly bug fixes, and a few new features.</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WShadow.html\">WShadow</a></dt>\n  <dd>Class representing a drop shadow effect (see below).</dd>\n  <dt><a href=\"classWt_1_1Dbo_1_1backend_1_1Postgres.html\">Dbo/backend/Postgres</a></dt>\n  <dd>A Postgres backend has landed, contributed by Hilary Cheng.</dd>\n</dl>\n\n<h3>B) Main new features in existing classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WBoxLayout.html\">WBoxLayout</a>, <a href=\"classWt_1_1WGridLayout.html\">WGridLayout</a></dt>\n  <dd>Addition of horizontal and vertical splitter support (resize handles to\n    allow the user to adjust the layout), sponsored by Eurofer. The new API\n    methods are <a href=\"classWt_1_1WBoxLayout.html#00bdfb4d442bd8e8ad9c33b72692763f\">setResizable()</a>, <a href=\"classWt_1_1WGridLayout.html#180c33a8f9e21a7b58f12e055fdb469e\">setColumnResizable()</a> and <a href=\"classWt_1_1WGridLayout.html#6028853eb5a66d868323d0e034b69390\">setRowResizable()</a></dd>\n  <dt><a href=\"classWt_1_1WCalendar.html\">WCalendar</a></dt>\n  <dd>Improved the API to allow custom cell rendering, and custom handling\n    of selection. We have also made the API for selection consistent with other\n    widgets (like WTreeView), deprecating the old API.</dd>\n  <dt><a href=\"classWt_1_1WDateTime.html\">WDateTime</a></dt>\n  <dd>Added <a href=\"classWt_1_1WDateTime.html#0d7f04bacc6ea6534bc61ec7305a8262\">toPosixTime()</a> and <a href=\"classWt_1_1WDateTime.html#eb5f093554829688b36640f0977da541\">fromPosixTime()</a> methods to interoperate with\n    <code>boost::posix_time::ptime</code>.</dd>\n  <dt><a href=\"classWt_1_1WFormWidget.html\">WFormWidget</a></dt>\n  <dd>Added a <a href=\"classWt_1_1WFormWidget.html#92de7a4d9ca6796607dc9fd26f608436\">setEmptyText()</a> method to implement a label inside a line edit or text area.</dd>\n  <dt><a href=\"classWt_1_1WPainter.html\">WPainter</a></dt>\n  <dd>Added a <a href=\"classWt_1_1WPainter.html#9c727b82879ab055f3fcf4c9cdfc1f8d\">setShadow()</a> method which defines a drop shadow to be used for subsequent\n  drawing actions.</dd>\n  <dt><a href=\"classWt_1_1WResource.html\">WResource</a></dt>\n  <dd>Added a <a href=\"classWt_1_1WResource.html#06bb9dbe3ae195c320cfed7b062d448a\">setInternalPath()</a> method which allow a resource to be deployed at a deterministic and \"pretty\" URL.</dd>\n  <dt><a href=\"classWt_1_1WString.html\">WString</a></dt>\n  <dd>Added constructors that take a std::locale for interpreting a narrow\n    string in a given locale.</dd>\n  <dt><a href=\"classWt_1_1WWidget.html\">WWidget</a></dt>\n  <dd>Added <a href=\"classWt_1_1WWidget.html#4f83592912a7f8fa4fd35dadde78ee74\">setLayoutSizeAware()</a> and <a href=\"classWt_1_1WWidget.html#f432588db3d599f89b54121f2ede8d63\">layoutSizeChanged()</a> methods which allow a widget to react to layout size changes.</dd>\n  <dt><a href=\"classWt_1_1Http_1_1Request.html\">Http::Request</a></dt>\n  <dd>Added access to the request <a href=\"classWt_1_1Http_1_1Request.html#e76664f93462d9311ee671c93607e5ca\">method()</a>.</dd>\n  <dt><a href=\"classWt_1_1Http_1_1Response.html\">Http::Response</a></dt>\n  <dd>Added a <a href=\"classWt_1_1Http_1_1Response.html#7c14ba3ab34ff14461df3a4369118443\">setStatus()</a> method to modify the response status.</dd>\n  <dt><a href=\"classWt_1_1Dbo_1_1Session.html\">Dbo::Session</a></dt>\n  <dd>Added support for schema qualified tables, in\n    <a href=\"classWt_1_1Dbo_1_1Session.html#5886d450c052ae0ee15ab3c91e439229\">Session::mapClass()</a> and the joinTable specified in <a href=\"group__dbo.html#g1a086b583fb150dbd4c5b4ba92bc177f\">hasMany()</a>.<br />\n    Added API for dropping the schema: <a href=\"classWt_1_1Dbo_1_1Session.html#4c1fedb21e4e1cc44b182a34e8ebb4efdropTables()\">dropTables()</a>. <br />\n    Added support for arbitrary queries in <a href=\"classWt_1_1Dbo_1_1Session.html#d39e953ef521eaa58c4c7e6ca1a6c19e\">Session::query()</a>, including\n    queries that do not return result or do not select from tables.</dd>\n  <dt><a href=\"group__dbo.html#g8a2b653ff57f1459dfa2e556badd71d6\">Dbo::field()</a></dt>\n  <dd>Allow size suggestion for std::string and WString mappings</dd>\n  <dt><a href=\"classWt_1_1Dbo_1_1SqlConnection.html\">Dbo::SqlConnection, Dbo::SqlStatement</a></dt>\n  <dd>Added support for floating point types, binary data (using std::vector&lt;unsigned char&gt;) and date and date/time types.<br/>\n    Added methods for return dialect-specific information.<br/>\n    Added properties API.<br/>\n  </dd>\n  <dt><a href=\"structWt_1_1Dbo_1_1sql__value__traits.html\">Dbo::sql_value_traits</a></dt>\n  <dd>Added support for backend-specific type mapping.</dd>\n  <dt>(internal) DomElement</dt>\n  <dd>Performance improvements in serializing the widgets to HTML\n    and/or JavaScript</dd>\n  <dt>Built-in httpd</dt>\n  <dd>Added a configuration option <code>--max-request-size</code> to\n  limit the size of a POST instead of the built-in default of 40\n  MB<br/> Added a configuration option\n  <code>--max-memory-request-size</code> to limit the size of a POST that\n  is handed in-memory. Bigger POSTs are handled using a spool file.\n  </dd>\n</dl>\n\n<hr />\n\n<h2>Release 3.1.1 (February 17, 2010)</h2>\n\n<p>The minimum boost version is now 1.36.</p>\n\n<p>This release handles mostly bug fixes, with as most visible change\nan update of the <i>polished</i> theme, which is now considered\ncomplete.</p>\n\n<h3>A) Security fixes:</h3>\n\nBecause of the following fixes for security problems, we recommend anyone\nto upgrade live deployments of his application to the latest version.\n\n<dl>\n  <dt>Possible XSS vulnerability</dt>\n  <dd>Fixed a possible XSS attack where a user follows a link to a Wt web\n    application, taking advantage of unchecked insertions of the URL when\n    redirecting to the canonical page.</dd>\n  <dt>Possible UTF-8 vulnerability</dt>\n  <dd>Form values and JSignal arguments received from the browser are\n    now checked for sane UTF-8 encoding.</dd>\n</dl>\n\n<h3>B) New classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1Dbo_1_1Dbo.html\">Dbo/Dbo</a></dt>\n  <dd>An optional base class for a database object, providing access to its\n    id() and session().</dd>\n</dl>\n\n<h3>C) Main new features in existing classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WCanvasPaintDevice.html\">WCanvasPaintDevice</a></dt>\n  <dd>Now implements native text rendering on Firefox and latest\n    Chrome and Safari browsers</dd>\n  <dt><a href=\"classWt_1_1WInPlaceEdit.html\">WInPlaceEdit</a></dt>\n  <dd>Added a setEmptyText() method which sets the text to be\n    displayed when value is empty.</dd>\n  <dt><a href=\"classWt_1_1WPopupMenu.html\">WPopopMenu</a></dt>\n  <dd>Added an exec(WWidget *location, Orientation orientation) method which\n    popups the menu besides another widget.</dd>\n  <dt><a href=\"classWt_1_1WSuggestionPopup.html\">WSuggestionPopup</a></dt>\n  <dd>This class is now also style by the CSS theme.</dd>\n  <dt><a href=\"classWt_1_1WTemplate.html\">WTemplate</a></dt>\n  <dd>Avoids now rerendering of already bound widgets when the\n    template is rerendered.</dd>\n  <dt><a href=\"classWt_1_1WTree.html\">WTree</a>,\n    <a href=\"classWt_1_1WTreeNode.html\">WTreeNode</a>,\n    <a href=\"classWt_1_1WTreeTable.html\">WTreeTable</a>,\n    <a href=\"classWt_1_1WTreeTableNode.html\">WTreeTableNode</a>\n  </dt>\n  <dd>These widgets are now theme-aware, and tree decoration styling\n    is provided by the theme. The setImagePack() APIs are now\n    no-ops</dd>\n  <dt><a href=\"classWt_1_1WWidget.html\">WWidget</a></dt>\n  <dd>Added positionAt() method which positions a widget (absolutely) besides\n    another widget.</dd>  \n  <dt><a href=\"classWt_1_1Chart_1_1WAxis.html\">Chart/WAxis></a></dt>\n  <dd>Added a setLabelFont() method.</dd>\n  <dt><a href=\"classWt_1_1Http_1_1Request.html\">Http/Request</a></dt>\n  <dd>Added serverName(), serverPort(), path(), pathInfo(),\n    queryString(), urlScheme(), in(), contentType(), contentLength(),\n    userAgent() and clientAddress() methods which expose information\n    form the HTTP request to WResources.</dd>\n</dl>\n\n<h3>D) Build changes:</h3>\n\n<dl>\n  <dt>XML_FEATURES</dt>\n  <dd>This CMake option has been removed, and Mini-XML has been\n    replaced by a modified RapidXML xml parser (mostly because of the\n    hard-to-interpret Mini-XML license), but there are also nice\n    performance improvements.</dd>\n</dl>\n\n<hr />\n\n<h2>Release 3.1.0 (December 29, 2009)</h2>\n\n<p>This release contains several new features and classes, after a long\n  period of stabilization that happened before the 3.0.0 release.</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WAggregateProxyModel.html\">WAggregateProxyModel</a></dt>\n  <dd>A model that provides support for drilling down through columns, supported\n  by WTreeView.</dd>\n  <dt><a href=\"classWt_1_1WCombinedLocalizedStrings.html\">WCombinedLocalizedStrings</a></dt>\n  <dd>Combines different localized strings implementations.</dd>\n  <dt><a href=\"classWt_1_1WDateTime.html\">WDateTime</a></dt>\n  <dd>Combines a calendar date (WDate) and a clock time (WTime).</dd>\n  <dt><a href=\"classWt_1_1WTemplate.html\">WTemplate</a></dt>\n  <dd>Use an XHTML fragment as a template, with variables that are place\n  holders for strings or other widgets. See the blog example of how this\n  class can be used to simplify HTML/CSS based layout of widgets and\n  contents.</dd>\n  <dt><a href=\"classWt_1_1WTime.html\">WTime</a></dt>\n  <dd>Represents a clock time (0-24 hours).</dd>\n  <dt><a href=\"group__dbo.html\">Wt::Dbo</a></dt>\n  <dd>An Object Relational Mapping library. See the <a href=\"../../tutorial/dbo.html\">tutorial here</a>.</dd>\n</dl>\n\n<h3>B) Main new features in existing classes:</h3>\n\nMost inline CSS styles have been pushed out to an external style\nsheet, which may be themed. The \"default\" theme provides the old look,\nwhile a new \"polished\" theme provides a less boring (?) look for\nseveral widgets (work in progress). The theme can be set using <a\nhref=\"classWt_1_1WApplication.html\">WApplication::setCssTheme()</a>.\n\nAs a result, you will need to deploy Wt's <code>\"resources/\"</code>\nfolder, which contains the themes in <code>\"resources/themes/\"</code>, for\nall but the most trivial applications.\n\n<dl>\n  <dt><a href=\"classWt_1_1Signal.html\">Signal</a></dt>\n  <dd>Added a template connect() method which may be given any function\n  object, providing also support for the (future) c++1x lambda functions.</dd>\n  <dt><a href=\"classWt_1_1WCanvasDevice.html\">WCanvasDevice</a></dt>\n  <dd>Several optimizations to output more concise JavaScript.</dd>\n  <dt><a href=\"classWt_1_1WPaintedWidget.html\">WPaintedWidget</a></dt>\n  <dd>When width and/or height is not set using resize(), the widget\n  will now properly react to layout management when put into a layout\n  manager, triggering a server-side rerendering when needed.</dd>\n  <dt><a href=\"classWt_1_1WSlider.html\">WSlider</a></dt>\n  <dd>A sliderMoved() signal was added which is fired whenever the slider is\n  moved (but not yet released).</dd>\n  <dt><a href=\"classWt_1_1WWidget.html\">WWidget</a></dt>\n  <dd>Added a find() method which searches the widget hierachy for a widget\n  with a particular objectName().</dd>\n  <dt><a href=\"classWt_1_1WServer.html\">WServer</a></dt>\n  <dd>Added an addResource() method to bind static resources to particular\n  URLs (i.e. resources that are not bound to a specific session).</dd>\n  <dt><a href=\"classWt_1_1Ext_1_1Container.html\">Ext::Container</a></dt>\n  <dd>Will now properly react to layout management from a layout that\n  is set for a WContainerWidget.</dd>\n  <dt><a href=\"classWt_1_1Ext_1_1FormField.html\">Ext::FormField</a></dt>\n  <dd>Added changed(), blurred() and focussed() signals.</dd>\n  <dt><a href=\"classWt_1_1Chart_1_1WAxis.html\">Chart::WAxis</a></dt>\n  <dd>Added setAutoLimits() and autoLimits() methods to configure which limits\n  are to be determined based on the data, and which are explicitly set.</dd>\n  <dt><a href=\"classWt_1_1Chart_1_1WDataSeries.html\">Chart::WDataSeries</a></dt>\n  <dd>Added the setHidden() and hidden() methods to enable or disable\n  a data series. Added setBarWidth() and barWidth() methods to set the\n  width of a bar (useful mostly for scatter plots). Added\n  setMarkerSize() and markerSize() methos.</dd>\n  <dt><a\n  href=\"classWt_1_1Chart_1_1WCartesianChart.html\">Chart::WCartesianChart</a></dt>\n  <dd>Use MarkerPenColorRole and MarkerBrushColorRole to override\n  colors for makers on a per data point basis. Added mapFromDevice()\n  and mapToDevice() methods for mapping device coordinates to chart\n  coordinates and vice-versa</dd>\n  </dl>\n\n<h3>C) API Changes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WSlider.html\">WSlider</a></dt>\n  <dd>Not really an API change, but the vertical slider is now showing\n  the maximum value at its top side, not its bottom side.</dd>\n  <dt><a href=\"classWt_1_1Chart_1_1WAxis.html\">Chart::WAxis</a></dt>\n  <dd>The minimum() and maximum() methods will now return the calculated\n  minimum and maximum value when they are to be automatically calculated based\n  on the data, configured using setAutoLimits()</dd>\n</dl>\n\n<h3>D) Build changes:</h3>\n\n<dl>\n  <dt>XML_FEATURES</dt>\n  <dd>A new configuration option, XML_FEATURES, was added which allows the library to be built without MiniXML (and disabling fatures that require Mini-XML support). This configuration option is likely to be removed again in future versions.</dd>\n  <dt>Documentation</dt>\n  <dd>A <code>doc</code> directive was added, which uses doxygen and asciidoc tools\n  to generate the reference documentation and tutorial.</dd>\n  <dt>Tests</dt>\n  <dd>Automated tests were added for non-interactive functionality,\n  and are built by default.</dd>\n</dl>\n\n<hr />\n\n<h2>Release 3.0.0 (November 3, 2009)</h2>\n\n<p>\nThis release contains mostly bug fixes, build improvements and\ndocumentation improvements compared to the latest pre-release\n(2.99.5).\n</p>\n\n<p>\nMost build improvements are related to finding the boost\nlibraries. Previously, Wt used a custom script, since CMake versions\n&lt; 2.6 did not provide a good enough script for finding\nboost. Starting with this release, when using CMake 2.6 or later, Wt\nwill use the script that comes with CMake. You can still fall back to\nthe script that comes with Wt, which is still used for older versions\nof CMake, by defining one of the BOOST_COMPILER or BOOST_VERSION\nvariables.\n</p>\n\n<h3>A) New classes:</h3>\n\n<i>No new classes</i>\n\n<h3>B) Main new features in existing classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WDialog.html\">WDialog</a></dt>\n  <dd>It is now possible to have multiple modal dialogs, and nested\n  recursive event loops.</dd>\n  <dt><a href=\"classWt_1_1WWidget.html#e29fe35b633ec166f922419cd3ca9d96\">\n      WWidget</a></dt>\n  <dd>The <samp>setDisabled()</samp> method moved up\n  from <samp>WFormWidget</samp> to <samp>WWidget</samp>.</dd>\n  <dt><a href=\"classWt_1_1JSlot.html#3d65b00a8015e556580527b52750ef87\">\n      JSlot</a></dt>\n  <dd>The <samp>exec()</samp> method now passes object and event to the\n    JavaScript event handler.</dd>\n</dl>\n\n<h3>C) API Changes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WResource.html\">WResource</a></dt>\n  <dd>The handling of changes to the resource has been sanitized. A\n  new method, <samp>setChanged()</samp> was added which must be called\n  to notify users of the resource that the resource was changed. In\n  addition to the existing <samp>generateUrl()</samp> which generates\n  a new URL, a method was added which merely returns the existing\n  URL: <samp>url()</samp>. With these improvements, a resource can\n  effectively be shared by many view widgets and updated with the\n  minimum of bandwidth usage.</dd>\n</dl>\n\n<hr />\n\n<h2>Release 2.99.5 (September 1, 2009)</h2>\n\n<p>\nThis release contains mostly bug fixes. The previous release (2.99.4)\ncontains some critical bugs that cause mayhem on IE, and a regression\nwith server push.\n</p>\n\n<hr />\n\n<h2>Release 2.99.4 (August 27, 2009)</h2>\n\n<p style=\"text-align: center\">\n  <b>!! This release contains bugs that render it unusable on IE !!</b>\n</p>\n\n<p>\nThis release contains mostly bug fixes and back-end improvements. The\nmost exciting new feature is the addition of a new bootstrap method,\nwhich implements progressive enhancements (starting with a plain HTML\npage, and then upgrading it to an AJAX page if the browser has\nsupport), see\nalso <a href=\"/wt/doc/reference/html/overview.html#progressive_bootstrap\">the\ndocumentation</a>.\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WTableView.html\">WTableView</a></dt>\n  <dd>This is a simple MVC View class that renders tabular data\n    in the most straight forward way using an HTML table element\n  </dd>\n</dl>\n\n<h3>B) Main new features in existing classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1Ext_1_1ToolBar.html#931b9b3e5d4cbbdee5394a841752c849\">Ext::ToolBar</a></dt>\n  <dd>Added insert() methods.</dd>\n  <dt><a href=\"classWt_1_1WApplication.html#78016406c4746c56b2c2ffce7c5e181f\">WApplication</a></dt>\n  <dd>Added an enableAjax() method which notifies the application that\n    a session is being enhanced with AJAX capabilities when using the\n    progressive bootstrap method.</dd>\n  <dt><a href=\"classWt_1_1WWidget.html#919a4eaf68ff52f06f6a726d55dfb768\">WWidget</a></dt>\n  <dd>Added an enableAjax() method which enhanced the widget with AJAX\n    capabilities when using the progressive bootstrap method.</dd>\n  <dt><a href=\"classWt_1_WCssDecorationStyle.html\">WCssDecorationStyle</a></dt>\n  <dd>Add support for custom cursors.</dd>\n  <dt><a href=\"classWt_1_WWServer.html\">WServer</a></dt>\n  <dd>For FastCGI deployments, the proxy process which directs FastCGI\n  requests to the correct session process is now also\n  multi-threaded.</dd>\n</dl>\n\n<h3>C) API Changes:</h3>\n\n<dl>\n  <dt>The <a href=\"classWt_1_1WApplication.html#4a6f167bea94aefa8ba24f914c2fbee5\">WApplication::notify()</a> behavior changed.</dt>\n  <dd>Previously during a request, this method was called multiple\n  times during event propagation and rendering of the\n  application. Now, the method is called exactly once for each\n  request. In this way, it becomes a useful entry point to also manage\n  resource usage during (and inbetween) requests.</dd>\n</dl>\n\n<hr />\n\n<h2>Release 2.99.3 (July 24, 2009)</h2>\n\n<p>\nThis release contains mostly bug fixes and small feature\nimprovements. The most notable change that might affect existing\napplications is a simplified internal path API behavior.\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WAbstractItemDelegate.html\">WAbstractItemDelegate</a>\n    and <a href=\"classWt_1_1WItemDelegate.html\">WItemDelegate</a></dt>\n  <dd><samp>WAbstractItemDelegate</samp> is a helper class used\n    by <samp>WTreeView</samp> (and in the future perhaps other view\n    classes) to render contents. The standard\n    implementation, <samp>WItemDelegate</samp> maintains the default\n    implementation that was previously integrated\n    in <samp>WTreeView</samp>. The delegate will be responsible for\n    editing features in <samp>WTreeView</samp> in the future, and in\n    fact, you can already implement a custom item delegate that does\n    editing if you cannot wait for it!\n  </dd>\n  <dt><a href=\"classWt_1_1Test_1_1WTestEnvironment.html\">Test/WTestEnvironment</a></dt>\n  <dd><samp>WTestEnvironment</samp> is an environment class which is useful for\n    (unit) test-cases: it allows the instantiation of a\n    <samp>WApplication</samp> so that you may include widgets in unit tests.\n  </dd>\n</dl>\n\n<h3>B) Main new features in existing classes:</h3>\n\n<h3>C) API Changes:</h3>\n\n<dl>\n  <dt>change of WApplication::internalPathChanged() semantics.</dt>\n  <dd>The old behavior was that a single internal path change caused\n  by the user (e.g. by moving forward/backword through his browser\n  history) would cause repetitive invocations of internalPathChanged()\n  with different arguments. The underlying idea was that this would\n  make it easier to have the handling of internal path changes\n  distributed over different objects. It caused however more problems\n  than it solved. The new behavior is now that it is invoked exactly\n  one time, and the argument is simply the new internal path.</dd>\n</dl>\n\n<hr />\n\n<h2>Release 2.99.2 (May 29, 2009)</h2>\n\n<p>\nThis release contains mostly build improvements, bug fixes, and API cleanups.\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1Http_1_1Client.html\">Http/Client</a></dt>\n  <dd><samp>Client</samp> is a utility class to bootstrap a new Wt\n  application.</dd>\n</dl>\n\n<h3>B) Main new features in existing classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1Ext_1_1FormField.html\">Ext::FormField</a></dt>\n  <dd>Add setFocus() method.</dd>\n  <dt><a href=\"classWt_1_1Ext_1_1ToolBar.html\">Ext::ToolBar</a></dt>\n  <dd>Added an addStretch() method (contributed by David Galicia).</dd>\n  <dt><a href=\"classWt_1_1Http_1_1Response.html\">Http::Response</a></dt>\n  <dd>Added a continuation() method.</dd>\n  <dt><a href=\"classWt_1_1WCheckBox.html\">WCheckBox</a></dt>\n  <dd>Add support for tri-state checkboxes. These are also supported\n  by item models and WTreeView.</dd>\n  <dt><a href=\"classWt_1_1WWDialog.html\">WDialog</a></dt>\n  <dd>Support for non-modal dialogs and interactive moving.</dd>\n  <dt><a href=\"classWt_1_1WFormWidget.html\">WFormWidget</a></dt>\n  <dd>New methods setReadOnly() and isReadOnly().</dd>\n  <dt><a href=\"classWt_1_1WGridLayout.html\">WGridLayout</a></dt>\n  <dd>Support a row stretch value of -1, which is like 0 but will still\n  manage the height of cells (allowing their contents to fill the entire\n  cell).</dd>\n  <dt><a href=\"classWt_1_1WPaintDevice.html\">WPaintDevice</a></dt>\n  <dd>Support update rendering (not erasing the current canvas) using\n  paint flags.</dd>\n</dl>\n\n<h3>C) API Changes:</h3>\n\n<dl>\n  <dt>WFileUpload::isUploaded() was deprecated</dt>\n  <dd>The name was not covering its actual behavior: instead of\n  checking whether a file has been uploaded, it returns whether true\n  when a call to upload() is not needed. You should replace any call\n  to isUploaded() with the new method\n  <a href=\"classWt_1_1WFileUpload.htm#66376fb4668a037760a91abad9f83f8al\">!canUpload()</a> (<b>note the inversion!</b>.</dd>\n</dl>\n\n<hr />\n\n<h2>Release 2.99.1 (Mar 20, 2009)</h2>\n\n<p>\nThis release contains only build improvements, bug fixes, and API cleanups.\n</p>\n\n<hr />\n\n<h2>Release 2.99.0 (Mar 4, 2009)</h2>\n\n<p>\nThis release is a preview for Wt 3.0.0. Many things have changed both\nin the internals and the API. This is the first release that provides\nseveral API changes which are not backward compatible (some of which\nwere post-poned until now).\n\nPlease read the following notes carefully, especially sections C) and\nD), to understand what changes to expect and how to adapt existing\napplications.\n</p>\n\n<p>\nSupport for the C++ boost library &lt; 1.35 has been dropped: Wt now\nrequires at least boost >= 1.35.0.\n</p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WFlags.html\">WFlags</a></dt>\n  <dd><samp>WFlags</samp> is a utility class that provides a type-safe ORing of\n  enum flags. It is used everywhere in the Wt API where previously an\n  <samp>int</samp> was used to allow enums to be ORed together.</dd>\n  <dt><a href=\"classWt_1_1WGoogleMap.html\">WGoogleMap</a></dt>\n  <dd>This is a widget, contributed by Richard Ulrich, that displays a\n  Google map.</dd>\n  <dt><a href=\"classWt_1_1Http_1_1Request.html\">Http::Request</a>, <a href=\"classWt_1_1Http_1_1Response.html\">Http::Response</a>, <a href=\"classWt_1_1Http_1_1ResponseContinuation.html\">Http::ResponseContinuation</a> and <a href=\"classWt_1_1Http_1_1UploadedFile.html\">Http::UploadedFile</a></dt>\n  <dd>These are utility classes which model an HTTP request and\n  response and that are used in the new <samp>WResource</samp> API.</dd>\n</dl>\n\n<h3>B) Main new features in existing classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WApplication.html#d9631ca64e68d30d40cb49c90e55223d\">WApplication::enableUpdates()</a></dt>\n  <dd>Server-initiated updates (aka \"server push\") has been\n  reimplemented and now works reliably in all situations, including in\n  the presence of intermediate proxies. The dependency on the 3rd\n  party JS orbited library has been removed and replaced with a simple\n  XHR-based solution.</dd>\n  <dt><a href=\"classWt_1_1WButtonGroup.html\">WButtonGroup</a></dt>\n  <dd>Various methods were added: id's may be associated with a specific\n  radio buttons, which may be used to identify a particular button.</dd>\n  <dt><a href=\"classWt_1_1WDatePicker.html\">WDatePicker</a></dt>\n  <dd>Is now easier to use because of a sensible default constructor\n  that also creates the line edit using a <samp>WDateValidator</samp>,\n  and creates the icon which is associated with the popup.</dd>\n  <dt><a href=\"classWt_1_1WFileResource.html\">WFileResource</a></dt>\n  <dd>Uses the continuation support in the new <samp>WResource</samp> API\n  to transmit the file in chunks.</dd>\n  <dt><a href=\"classWt_1_1WLength.html\">WLength</a></dt>\n  <dd>WLength::Auto was added, is a synonym for WLength()</dd>\n  <dt><a href=\"classWt_1_1WSuggestionPopup.html\">WSuggestionPopup</a></dt>\n  <dd>Is now also an MVC View widget, reading its data from a\n  <samp>WAbstractItemModel</samp></dd>\n  <dt><a href=\"classWt_1_1WTable.html\">WTable</a></dt> <dd>New method\n  setHeaderCount() to specify the number of first rows or columns that\n  should be rendered as an HTML table header\n  (<samp>&lt;th&gt;</samp>).</dd>\n  <dt><a href=\"classWt_1_1WWidget.html\">WWidget</a></dt>\n  <dd><p>New virtual method <samp>rerender()</samp> which allows a\n  widget to prepare itself before rendering (and defer internal\n  changes until that time). A widget may ask to be rerendered using\n  <samp>askRerender()</samp></p> <p><samp>Widget</samp> no longer\n  inherits from <samp>WResource</samp>, but instead inherits directly from\n  <samp>WObject</samp>. It was simply a bad idea, and not useful for\n  anything.</p></dd>\n</dl>\n\n<h3>C) Changes that break existing applications:</h3>\n\n<dl>\n  <dt>1) Signals are no longer public members</dt>\n  <dd><p>Instead, they are now accessor member functions:\n  e.g. <samp>WInteractWidget::clicked</samp> has been renamed to\n  <samp>WInteractWidget::clicked()</samp>. This has as major benefit\n  that signals can be created on-demand, which leads to drastically\n  lower memory usage and significant speedups especially on embedded\n  systems.</p> <p>The change requires that everywhere in your code\n  where you access a signal, you will need to change to add\n  parentheses. For consistency, you may also want to\n  use the same convention for your own widget classes that define\n  signals.</p></dd>\n  <dt>2) <a href=\"classWt_1_1WResource.html\">WResource</a></dt>\n  <dd><p>The API has been redesigned and greatly simplified. If you are\n  implementing your own resources, then you will need to redesign your\n  implementation. The new API is simpler (requires only one virtual\n  method to be implemented) and more powerful, providing support for\n  <i>continuations</i> to serve large resources without blocking a\n  thread or requiring large memory usage.</p>\n  <p>In addition, resources have better thread-safety: they are now by\n  default reentrant (requests for a single resource may be handled\n  concurrently) and they are protected from concurrently being\n  destroyed by the main event loop.</p></dd>\n  <dt>3) <a href=\"classWt_1_1WValidator.html\">WValidator</a></dt>\n  <dd><p>The signature for the virtual <samp>validate()</samp> method was\n  changed: parameter <samp>pos</samp> which was ignored anyway has\n  been removed.</p></dd>\n  <dt>4) <a href=\"classWt_1_1WEnvironment.html\">WEnvironment</a></dt>\n  <dd><p>The methods <samp>getArgument()</samp> and\n  <samp>arguments()</samp> were renamed to respectively\n  <samp>getParameter()</samp> and <samp>getParameterMap()</samp>. The\n  signature for <samp>getParameter()</samp> is also different as it\n  returns a pointer to a string, which is 0 when the parameter is not\n  defined, instead of the olde behaviour of throwing an\n  exception. There is a new method that allows to read all values for\n  a parameter, <samp>getParameterValues()</samp></p></dd>\n  <dt>5) <a href=\"classWt_1_1ModelIndex.html\">WModelIndex</a></dt>\n  <dd><p>The 20-byte SHA1 hash based internal pointer has been removed\n  again as the object increase and overhead could not be justified.</p></dd>\n</dl>\n\n<h3>D) Deprecated API that was removed:</h3>\n\nThese are API calls that were deprecated in earlier releases, and have now\nbeen completely removed from the library:\n\n<dl>\n  <dt><samp>WApplication::applicationName()</samp></dt>\n  <dd>Use <a\n  href=\"classWt_1_1WApplication.html#ab6320ecdd0e8e4026e9ef1aca710ca5\">\n  WApplication::internalPath()</a> instead.</dd>\n  <dt><samp>WApplication::setState()</samp></dt>\n  <dd>Use <a\n  href=\"classWt_1_1WApplication.html#2c1a10aadc0d7ed877b5715b42ca4911\">WApplication::setInternalPath()</a>\n  instead.</dd>\n  <dt><samp>WApplication::state()</samp></dt>\n  <dd>Use <a\n  href=\"classWt_1_1WApplication.html#ab6320ecdd0e8e4026e9ef1aca710ca5\">\n  WApplication::internalPath()</a> instead.</dd>\n  <dt><samp>WApplication::stateChanged</samp></dt>\n  <dd>Use <a\n  href=\"classWt_1_1WApplication.html#3e68c4b6bb387f27a614e7962e11967b\">WApplication::internalPathChanged()</a>\n  instead.</dd>\n  <dt><samp>WRegExpValidator::WRegExpValidator(const boost::regex&amp;)\n  </samp></dt>\n  <dd>Use the <a\n  href=\"classWt_1_1WRegExpValidator.html#7536b67e2bedd2dfdb5b89c9dd56602b\">WRegExpValidator(const\n  WString&amp;)</a> constructor instead.</dd>\n  <dt><samp>WPainterPath::drawArc(..., width, height, ...)</samp></dt>\n  <dd>An elliptical arc segment could not be support on all devices.</dd>\n  <dt><samp>WTable::numRows()</samp></dt>\n  <dd>Use <a href=\"classWt_1_1WTable.html#79d5dfe40ee5e67c5007ee370e8cd2f3\">WTable::rowCount()</a>.</dd>\n  <dt><samp>WTable::numColumns()</samp></dt>\n  <dd>Use <a\n  href=\"classWt_1_1WTable.html#4d062330d1c9b3f202985b92dcb59d4f\">WTable::columnCount()</a>\n  instead.</dd>\n  <dt><samp>WText::setFormatting()</samp> and\n  <samp>WText::formatting()</samp></dt>\n  <dd>Use <a href=\"classWt_1_1WText.html#f22c64c4c5fed3d2aef0915a7e5c5866\">WText::setTextFormat()</a> and\n  <a href=\"classWt_1_1WText.html#c0976c36c5181a534f161ca3724d4296\">WText::textFormat()</a> instead.</dd>\n</dl>\n\n<hr />\n\n<h2>Release 2.2.3 (Jan 26, 2009)</h2>\n\n<p>This release is a maintenance release, with mostly bug fixes and\nfeature improvements.</p>\n\n<h3>A) Main new features in existing classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WAbstractItemModel.html\">WAbstractItemModel</a>:</dt>\n  <dd><samp>const char *</samp> data in <samp>boost::any</samp> is now\n    also supported.</dd>\n  <dt><a href=\"classWt_1_1WAbstractProxyModel.html\">WAbstractProxyModel</a>:\n  </dt><dd>Implemented <samp>toRawIndex()</samp>\n    and <samp>fromRawIndex()</samp> so that indexes can be recovered\n    when the model's layout is changed, if the underlying model\n    provides implementations for <samp>toRawIndex()</samp>\n    and <samp>fromRawIndex()</samp>.</dd>\n  <dt><a href=\"classWt_1_1WComboBox.html\">WComboBox</a>:</dt>\n  <dd>Also supports <samp>StyleClassRole</samp> data role for items</dd>\n  <dt><a href=\"classWt_1_1WDialog.html\">WDialog</a>:</dt>\n  <dd>New method <samp>setTitleBarEnabled()</samp> to disable the default\n  title bar.</dd>\n  <dt><a href=\"classWt_1_1WMenu.html\">WMenu</a>:</dt>\n  <dd>New method <samp>removeItem()</samp>, only works when rendered as a\n    list.</dd>\n  <dt><a href=\"classWt_1_1WTabWidget.html\">WTabWidget</a>:</dt>\n  <dd>New method <samp>removeTab()</samp>.</dd>\n  <dt><a href=\"classWt_1_1WTreeView.html\">WTreeView</a>:</dt>\n  <dd><ul>\n      <li>New method <samp>setColumn1Fixed()</samp> to fix the first\n    column while scrolling horizontally through the other columns.</li>\n      <li>New method <samp>setColumnFormat()</samp> to control formatting of\n    data.</li>\n      <li>New method <samp>setColumnBorder()</samp> to set the\n    internal column border color.</li>\n      <li>New method <samp>setColumnResizeEnabled()</samp> to disable resize\n    handles.</li>\n      <li>The view now also reacts correctly to insertion and\n    removal of model columns.</li>\n    </ul>\n  </dd>\n</dl>\n\n<h3>B) New examples</h3>\n\n<dl>\n  <dt><a href=\"http://www.webtoolkit.eu/wt/examples/gitmodel/gitview.wt\">\n      gitmodel:</a></dt>\n  <dd>An example that demonstrates how to implement a custom abstract\n    item model.</dd>\n  <dt><a href=\"http://www.webtoolkit.eu/wt/examples/treeview-dragdrop/treeview-dragdrop.wt\">treeview-dragdrop</a>:</dt>\n  <dd>An example that demonstrates drag and drop support in WTreeView.</dd>\n</dl>\n\n<h3>C) Changes that break backward compatibility</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WApplication.html\">WApplication</a>:</dt>\n  <dd><samp>useStyleSheet()</samp> only supports a subset of IE condition\n    strings, since the string is now parsed by Wt rather than by IE (when\n    dynamically loading stylesheets, the comment-syntax does not work\n    reliably).</dd>\n</dl>\n\n<hr />\n\n<h2>Release 2.2.2 (Dec 1, 2008)</h2>\n\n<p><i>As of now, we will also be listing noteworthy new API features,\neven if they are no concern for backwards compatibility.</i></p>\n\n<h3>A) New classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WPopupMenu.html\">WPopupMenu</a>,\n    <a href=\"classWt_1_1WPopupMenuItem.html\">WPopupMenuItem</a>:</dt>\n  <dd>A popup menu, which you would typically use to present a\n  context menu.</dd>\n  <dt><a href=\"classWt_1_1WAbstractProxyModel.html\">WAbstractProxyModel</a>,\n    <a href=\"classWt_1_1WSortFilterProxyModel.html\">WSortFilterProxyModel</a>:</dt>\n  <dd>Proxy models, which present data from a source model in a\n  different way.</dd>\n  <dt><a href=\"classWt_1_1WLoadingIndicator.html\">WLoadingIndicator</a>, <a href=\"classWt_1_1WDefaultLoadingIndicator.html\">WDefaultLoadingIndicator</a>,\n  <a href=\"classWt_1_1WOverlayLoadingIndicator.html\">WOverlayLoadingIndicator</a>:</dt>\n  <dd>Customizable loading indicators.</dd>\n</dl>\n\n<h3>B) Main new features in existing classes:</h3>\n\n<dl>\n  <dt><a href=\"classWt_1_1WTreeView.html\">WTreeView</a>, <a href=\"classWt_1_1WAbstractItemModel.html\">WAbstractItemModel</a>:</dt>\n  <dd>The WAbstractItemModel interface was extended to allow handling\n  of drag &amp; drop events, and WTreeView now is able to start\n  dragging and handle dropping of item selections and other data.</dd>\n  <dt><a href=\"classWt_1_1JSignal.html\">JSignal</a>:</dt>\n  <dd>You can now pass the original (keyboard/mouse) JavaScript event\n  as a parameter to custom signals.</dd>\n  <dt><a href=\"classWt_1_1WTreeView.html\">WTreeView</a>:</dt>\n  <dd>access mouse event in itemClicked, doubleClicked and\n  mouseWentDown signals.</dd>\n  <dt><a href=\"classWt_1_1WServer.html\">WServer</a>:</dt>\n  <dd>Support for widget-set mode, allowing a Wt application to be\n  embedded in an existing web page/application.</dd>\n</dl>\n\n<h3>C) Changes that break backward compatibility</h3>\n\n<p>This release does not contain changes that break existing\napplications.</p>\n\n<hr />\n\n<h2>Release 2.2.1 (Nov 3, 2008)</h2>\n\n<p>This release is as usually a mix of bug fixes, improvements and new\nfeatures.</p>\n\n<p>We have made a significant change to the MVC system, which will\nbreak existing program code in case you have implemented your own\nmodels (i.e. deriving from <samp>WAbstractItemModel</samp>) or views\nwidgets (i.e. components that listen to model changes).</p>\n\n<p>\nThe <samp>WAbstractItemModel</samp> interface was changed to support\nhierarchical models. This means that most methods will now take an\nextra parameter that specifies the parent <samp>WModelIndex</samp>,\nand also all signals have now this extra parameter. Because the\nparameter has a default value of WModelIndex() which corresponds to\nthe top level parent, the API is largely backwards compatible when\nmerely using the model. It is only those classes that reimplement the\ninterface, or listen to signal events, that are affected.\n</p>\n\n<p>\nThe immediate benefit of the new <samp>WAbstracItemModel</samp>\ninterface is that it allows us to implement View widgets like the new\n<samp>WTreeView</samp> widget.\n</p>\n\n<hr />\n\n<h2>Release 2.2.0 (Sept 12, 2008)</h2>\n\n<p>This release has a rather substantial rewrite (and simplification)\nof Wt's bootstrapping process. In the past, Wt used a frameset trick\nto be able to load the AJAX-based skeleton when JavaScript was\navailable. Instead, now, the entire AJAX-based stuff is loaded\ndirectly into the bootstrap page. A benefit of the new approach is\nthat we avoid iframe tricks, which have been deprecated from strict\nHTML and XHTML. But, it was in fact motivated in the first place to\nsupport all major browsers for a new internal path API. This new API\nallows to fully support URL changes and bookmarks in a unified way\n(i.e. it works equally when the browser supports AJAX, no JavaScript,\nor is a bot such as google bot).</p>\n\n<p>As a consequence, this release contains the following changes that\nmay break your application:</p>\n\n<ul>\n  <li><samp>WMenu::enableBrowserHistory()</samp> and <samp>WMenu::browserHistoryId()</samp> have been removed, use the new methods <samp>WMenu::setInternalPathEnabled()</samp> and <samp>WMenu::setInternalBasePath()</samp>\n  </li>\n  <li><samp>WMenuItem</samp> has been reorganized, and if you have\n  specialized WMenuItem you will need to adapt your reimplementation\n  to the new virtual interface. In the new interface, you need to\n  reimplement <samp>WMenuItem::createItemWidget()</samp> and\n  <samp>WMenuItem::updateItemWidget()</samp> allowing you to react to\n  item changes (internal path or text). The default implementation now\n  always uses a WAnchor.</li>\n  <li><samp>WApplication::setState()</samp>, <samp>WApplication::state()</samp> and <samp>WApplication::stateChanged</samp> have been deprecated. It is strongly advised that you use the new internal path API instead. This does require you to treat different parts of the state as a file hierarchy. See the <samp>WApplication::setInternalPath() documentation</samp>.\n  </li>\n</ul>\n\n<p>\n  The following methods have been deprecated (but are still supported):\n</p>\n<ul>\n  <li><samp>WTable::numRows()</samp> has been renamed\n  to <samp>WTable::rowCount()</samp>.</li>\n  <li><samp>WTable::numColumns()</samp> has been renamed\n  to <samp>WTable::columnCount()</samp>.</li>\n</ul>\n\n<hr />\n\n<h2>Release 2.1.5 (July 25, 2008)</h2>\n\n<p>Wt now installs its include files in a Wt/ subdirectory. You may\nwant to change your build files to pick up this new include directory,\nor, change your code to scope the include files to look like\n#include&lt;Wt/WLineEdit&gt; instead of #include&lt;WLineEdit&gt;</p>\n\n<p>This release contains the following changes that may break your\napplication:</p>\n\n<ul>\n  <li><samp>WText</samp> will validate XHTML text when it is set to the\n   widget. The old behaviour was to validate only before\n   rendering. The change was needed to be able to react to XML parse\n   errors. As a consequence if you are creating a WText with text that\n   is not valid XML, followed by a\n   call <samp>setFormatting(WText::PlainFormatting)</samp>, you should\n   change this now to use the new <samp>WText</samp> constructor which\n   takes the TextFormat as a new argument: <samp>new WText(text,\n   Wt::PlainText, parentWidget)</samp>\n  </li>\n  <li><samp>WContainerWidget::setLayout(WLayout *layout, bool fitWidth, bool\n   fitHeight)</samp> has been replaced with the more generic\n   <samp>WContainerWidget::setLayout(WLayout *layout, int\n   alignment)</samp>.\n  </li>\n</ul>\n\n<p>\n  The following methods and enumerations have been deprecated (but are\n  still supported):\n</p>\n<ul>\n  <li><samp>enum WText::Formatting</samp> has been renamed\n  to <samp>Wt::TextFormat</samp>. The old values map as follows on new\n  values:\n    <ul>\n      <li><samp>WText::XHTMLFormatting</samp> becomes <samp>Wt::XHTMLText</samp>;</li>\n      <li><samp>WText::XHTMLUnsafeFormatting</samp> becomes <samp>Wt::XHTMLUnsafeText</samp></li>\n      <li><samp>WText::PlainFormatting</samp> becomes <samp>Wt::PlainText</samp></li>\n    </ul>\n  </li>\n  <li><samp>WText::setFormatting()</samp> has been renamed\n  to <samp>WText::setTextFormat()</samp> and\n  <samp>WText::formatting()</samp> has been renamed\n  to <samp>WText::textFormat()</samp>.</li>\n</ul>\n\n<hr />\n\n<h2>Release 2.1.4 (July 4, 2008)</h2>\n\n<p>The following has changed for building Wt:</p>\n\n<ul>\n  <li>The CMake variable CONFIGURATION (which defaulted to\n  /etc/wt/wt_config.xml) is no longer used, but instead there is now a\n  CONFIGDIR (/etc/wt/) which is used to store configuration\n  files.\n  </li>\n</ul>\n\n<p>The following has changed in the wt_config.xml file:</p>\n\n<ul>\n  <li>The &lt;valgrind-path&gt; setting for the FCGI connector may now\n    be a command-line including arguments</li>\n</ul>\n\n<p>This release should not contain changes that may break your\napplication.</p>\n\n<hr />\n\n<h2>Release 2.1.3 (May 20, 2008)</h2>\n\n<p>This release should not contain changes that may break your\napplication.</p>\n\n<hr />\n\n<h2>Release 2.1.2 (April 14, 2008)</h2>\n\n<p>The following changes may break your application build:</p>\n\n<ul>\n  <li><samp>WTreeNode::expanded()</samp> has been renamed\n  to <samp>WTreeNode::isExpanded()</samp>.</li>\n</ul>\n\n<hr />\n\n<h2>Release 2.1.1 (April 10, 2008)</h2>\n\n<p>This release should not break any of your applications, but we did\n deprecate some methods and enumeration types. You are advised to\n migrate to the replacements methods since we will discontinue support\n for the older ones in the future.</p>\n\n<p>\n  The following methods and enumerations have been deprecated:\n</p>\n<ul>\n  <li><samp>enum SelectionUnit</samp> has been renamed\n  to <samp>SelectionBehavior</samp>. The old values map as follows on new\n  values: <samp>CellSelection</samp> becomes <samp>SelectItems</samp>;\n    <samp>RowSelection</samp> becomes <samp>SelectRows</samp>.</li>\n  <li><samp>WWidget::setOffset(int sides, WLength)</samp> is deprecated,\n  and the new method is <samp>WWidget::setOffsets(WLength, int\n  sides)</samp>: the argument order has been switched to be consistent\n  with the method signature of <samp>setMargin()</samp>\n  and <samp>setPadding()</samp>.</li>\n  <li><samp>WResource::suggestFilename()</samp> has been renamed to\n  <samp>WResource::suggestFileName()</samp>.</li>\n</ul>\n\n<p>\n  The following changes affect run-time behaviour:\n</p>\n<ul>\n  <li><samp>WTreeNode</samp> now supports a policy for when to show a child count\n  indication. The old behaviour was to always show the child count.\n  Now, by default this option is disabled. Use\n  <samp>WTreeNode::setChildCountPolicy(Enabled)</samp> to get the old\n  behaviour back, if you wish.</li>\n</ul>\n\n<hr />\n\n<h2>Release 2.1.0</h2>\n\n<p>The library dependencies have changed slightly.</p>\n\n<p>\nTo build Wt 2.1.0, you need:\n</p>\n<ul>\n  <li>CMake 2.4 or later</li>\n  <li>boost 1.34.1 (boost 1.33.1 might should still work, but is\n    not recommended)</li>\n  <li>asio 0.3.9: either the boost or non-boost version <i>(only\n      for the http connector)</i></li>\n  <li><i>optionally</i>, openssl for HTTPS support <i>(only for the http\n      connector)</i></li>\n  <li><i>optionally</i>, libz for gzip compression support <i>(only for\n      the http connector)</i></li>\n  <li>fcgi library, including C++ bindings (libfcgi++)<i>(only for the\n      fcgi connector)</i></li>\n</ul>\n<p>Furthermore, the Wt::Ext library has been upgraded and now wraps\naround the extjs 2.x library, instead of extjs 1.x.</p>\n\n<p>Some API changes may need a porting effort:\n</p>\n  <ul>\n    <li><samp>Ext::ProgressDialog</samp>: doesn't show by default, you\n    need to call show() to show the dialog.</li>\n    <li><samp>Ext::ContentPanel</samp>, <samp>Ext::BorderLayout</samp> have\n    been removed. They have been replaced with a stand-alone layout\n    system, that may manage contents in\n    an <samp>Ext::Container</samp>. The layout system provides\n    <samp>WBorderLayout</samp> and several other layout managers.</li>\n    <li><samp>WSignalMapper</samp> has been expanded to allow mapping of\n      signals with an extra argument, which is passed to the mapped\n      signal. Because of this, the signature of the class has been\n      expanded with an extra template argument. If you have forward\n      declarations to <samp>WSignalMapper</samp>, you will need to modify\n      these too (or simply include <samp>WSignalMapper</samp>).</li>\n    <li><samp>WAnchor</samp>: no longer uses a <samp>WLabel</samp> internally,\n      and the label-related methods have been removed.</li>\n  </ul>\n\n<hr />\n\n<h2>Release 2.0.5</h2>\n\n<ul>\n  <li><samp>WDialog</samp> (and <samp>WMessageBox</samp>) usage changed, and\n    is now more like Qt. When you are not\n    using <samp>WDialog::exec()</samp> or <samp>WMessageBox::show(...)</samp>,\n    then you must explictly <samp>show()</samp> the dialog to show it. You\n    can now also <samp>hide()</samp> the dialog if you want.\n  </li>\n  <li>\n    Moved several enums from within classes to the Wt namespace. This is\n    likely to break your code at compile time when you are using one. The\n    fix is to remove the class scope from the enum type or value.\n    <ul>\n      <li><samp>WScrollArea::Orientation</samp> -> <samp>Wt::Orientation</samp></li>\n      <li><samp>WMenu::Orientation</samp> -> <samp>Wt::Orientation</samp></li>\n      <li><samp>WMessageBox::StandardButton</samp> -> <samp>Wt::StandardButton</samp></li>\n      <li><samp>WMessageBox::Icon</samp> -> <samp>Wt::Icon</samp></li>\n    </ul>\n  </li>\n</ul>\n\n<hr />\n\n<h2>Release 2.0.4</h2>\n\n<i>Important: 2.0.4a contains a fix for a bug introduced in 2.0.4 that\n  reset the deploy-path in wthttpd.</i>\n\n<p>\n  This release adds a few new features:\n</p>\n  <ul>\n    <li><samp>WComboBox</samp> (and <samp>WSelectionBox</samp>) now use\n      a <samp>WAbstractItemModel</samp> in a more flexible model/view\n      system.</li>\n    <li>Stylesheets may be browser-conditional (by Patrick Fischer)</li>\n    <li>wthttpd may serve custom error pages (by Patrick Fischer)</li>\n    <li><samp>WResource</samp> can now access HTTP GET or POST query\n      arguments. This will break your code (at compile time) if you\n      have implemented your own <samp>WResource</samp>, since the signature of the\n      <samp>streamResourceData()</samp> method has been changed to pass\n      the arguments map as a second parameter.</li>\n  </ul>\n\n<hr />\n\n<h2>Release 2.0.1</h2>\n\n<p>\n  This release fixes some build-related problems, as well as smaller\n  bugs. The main improvement in this release is related to use of Wt\n  in resource-constrained embedded systems.\n</p>\n\n<p>\n  The most visible change is that the dependency on the Xerces C++ XML\n  library was dropped in favour of the much smaller Mini-XML\n  library. The draw-back is a reduction of supported character\n  encodings to only UTF8 and UTF16, next to the default locale character\n  encoding (which is typically an 8-bit flavour).\n</p>\n\n<p>\n  When using the built-in httpd, you can now disable support for SSL\n  at compile time, freeing a number of SSL-related dependencies.\n</p>\n\n<p>\n  In the API, more comparison operators (== and !=) were added to\n  WString, and a WViewWidget was added for simple MVC widgets (with\n  the main purpose to reduce session-state at the server).\n</p>\n\n<hr />\n\n<h2>Release 2.0.0</h2>\n\n<p>\n  This release contains numerous changes which are likely to cause some\n  porting effort for Wt 1.1.x applications to work properly.\n</p>\n\n<p>\n<b>If you are upgrading from a 1.99.x release, you will notice that\nsome of these notes have actually evolved, especially with respect to\nWString and unicode support.</b>\n</p>\n\n<p>\n  Here is a list of changes with respect to Wt 1.1.x that are likely\n  to require your attention, and some tips on how to do the porting.\n</p>\n\n<h4>1) Namespace Wt</h4>\n\n<p>All Wt classes are now inside the namespace <samp>Wt</samp>.</p>\n\n<p>To handle this change, you will need to:\n</p>\n  <ul>\n    <li>Wrap forward declarations to Wt widgets in header files inside a\n      Wt namespace, or <samp>#include &lt;WFwdDeclarations&gt;</samp></li>\n    <li>and scope all Wt classes with <samp>Wt::</samp>, </li>\n    <li>or import the Wt namespace: <samp>using namespace Wt;</samp></li>\n  </ul>\n\n<h4>2) WString</h4>\n\n<p>\n  Previously, most widgets offered double methods that either used a\n  <samp>std::string</samp> for literal text, or a\n  <samp>WMessage</samp> for localized text.\n</p>\n\n<p>\n  In the new release, widgets use <samp>Wt::WString</samp> for both\n  literal and localized text. WString offers unicode support for both\n  literal as well as localized text. To create a literal string,\n  simply assign or construct a Wt::WString from that string. The\n  strings supported or both narrow and wide C and C++ strings. UTF8\n  encoded narrow strings may also be converted. To create a localized\n  string, use one of the static methods <samp>WString::tr(const\n  std::string key)</samp> and <samp>WWidget::tr(const std::string\n  key)</samp>.\n</p>\n\n<p>\n  To help with legacy code, WMessage is now a typedef for WString, but\n  is deprecated and should not be used in new code. Unfortunately, the\n  constructors <samp>WMessage(const char *text)</samp> and\n  <samp>WMessage(const std::string text)</samp>, changed meaning!\n  While previously they took a key to construct a localized message,\n  they now take a literal text (the exact opposite!), since they are\n  in fact plain WString() constructors. As a consequence your application\n  will display key values instead of resolving those values (but will\n  not break entirely).\n</p>\n<p>\n  The new approach offers the benefit of only requiring one method\n  signature for both literal and localizable text. This not only\n  simplifies our work, but more importantly by using\n  <samp>WString</samp> for displayed text in the API of your own\n  widgets, localization (including the automatic language switching)\n  comes automatically and is decided on by the user of your widget.\n</p>\n<p>\n  Fortunately, there is a straightforward trick to handle most consequences\n  of this change:\n</p>\n  <ul>\n   <li>Replace <samp>WMessage(...)</samp> with <samp>tr(...)</samp>,</li>\n   <li>add <samp>.value()</samp> when using the result of functions such\n     as <samp>WText::text()</samp>,</li>\n   <li>change your own classes to use <samp>WString</samp>\n     wherever they expect some text that will be displayed, instead of\n     std::string or WMessage.</li>\n  </ul>\n\n<h4>3) Wide string API</h4>\n\n<p>\n  Since Wt 2.0.0, the API for Wt has been changed to use WString\n  instead of C++ narrow strings. WString supports both narrow and wide\n  strings, and provides conversion between both. It does not provide\n  string operations, however, and instead acts as a string\n  container. You should convert to a C++ string type to perform\n  operations. You should also not use WString outside of the user\n  interface part of your application.\n</p>\n\n<h4>4) No more wmain()</h4>\n\n<p>\n  Previously, the Wt library implemented the <samp>main(int argc, char\n  **argv)</samp> function, and called a <samp>wmain()</samp> function\n  which created the WApplication instance.\n</p>\n<p>\n  Wt 2.0.0 allows multiple applications to run within a single process.\n  Therefore, the <samp>WApplication::exec()</samp> approach was no longer\n  feasible. The new approach requires that:\n</p>\n\n  <ul>\n    <li>your main function should look like this:\n<pre>\nint main(int argc, char **argv)\n{\n  return Wt::WRun(argc, argv, &amp;createApplication);\n}\n</pre>\n    </li>\n    <li>where createApplication is a function of the following\n      signature:\n\n<pre>\nWt::WApplication *createApplication(const Wt::WEnvironment&amp; env)\n{\n  // return a new application object.\n}\n</pre>\n\n    </li>\n  </ul>\n\n<h4>5) Configuration in /etc/wt/wt_config.xml</h4>\n\n<p>\n  Wt 2.0.0 uses a configuration file for a number of settings that \n  could previously be configured at build time of the library, or\n  in the API. The latter functions are:\n</p>\n<ul>\n  <li><samp>WApplication::setMaximumRquestSize()</samp></li>\n  <li><samp>WApplication::setIdleTimeout()</samp></li>  \n</ul>\n\n<h4>6) Removed obsolete classes</h4>\n\n<p>\n  Wt 2.0.0 removed a number of classes that were still in the widget\n  tree, but have been obsoleted by more flexible classes:\n</p>\n<ul>\n  <li><samp>WAbstractTab</samp>, <samp>WButtonTab</samp>, and <samp>WTabWidget</samp> are obsoleted by the more flexible <samp>WMenu</samp>.</li>\n</ul>\n\n<h4>7) Deprecate boost::regex from WRegExpValidator API</h4>\n\n<p>\n  The constructor and methods that takes a boost::regex object in\n  the WRegExpValidator API have been deprecated, to remove the dependency\n  on boost from the public API. You should consider the std::string based\n  constructor and method instead.\n</p>\n\n<h4>8) WObject::emit() has been removed.</h4>\n\n<p>\n  Since Wt 1.99.1, we have removed WObject::emit() function. Instead,\n  you may simply call the signal with its arguments, or use the\n  explicit emit method (recommended).</p>\n\n<p>\n  To adapt your code, you should:\n</p>\n  <ul>\n    <li>Replace all <samp>emit(MySignal(...))</samp> with <samp>MySignal(...)</samp> or <samp>MySignal.emit(...)</samp>\n    </li>\n  </ul>\n\n<h4>9) WResource::streamResourceData() signature has changed.</h4>\n\n<p>\n  Since Wt 2.0.0, WResource::streamResourceData() returns a boolean value\n  which indicates if all data has been streamed. If you have reimplemented\n  WResource for your applications, you must update the signature and return\n  true.\n</p>\n<p>\n  The change is relevant only within the new server-push support that is\n  now in Wt 2.0.0. This allows you to continuously append to the content\n  of a resource.\n</p>\n\n<h4>10) Rename of WJavascriptSlot to JSlot.</h4>\n\n<hr />\n\n<h2>Release 1.1.7</h2>\n\nThis release contains lots of additions and improvements, but should\nbe completely backwards-compatible.\n\n<hr />\n\n<h2>Release 1.1.6</h2>\n\nThere is one change which will impact the behaviour of current applications:\nCurrently, on exit, by default the last widget updates are shown. So, no\nmore good-bye message. This changes slightly when one needs to redirect()\nto a new location: not when WApplication::exec() returns, but during the\nsame event handling as when calling WApplication::quit().\n\n<hr />\n\n<h2>Release 1.1.5</h2>\n\nNothing special...\n\n<hr />\n\n<h2>Release 1.1.4</h2>\n\nChanges to impact everybody, since the previous release:\n\n<ul>\n<li>\n  The dependency for libxml++ (and its large number of dependencies) has\n  been dropped, and replaced by Xerces-C++ (which has no further dependencies).\n</li>\n<li>\n  Wt programs need to link against libwtfcgi.so, instead of libwt.so. In the\n  future Wt will also support different web-connector systems besides\n  FastCGI.\n</li>\n<li>\n  The signatures of wmain() and WApplication constructor have changed:\n  new signatures are:\n  <ul>\n    <li><samp>int wmain(const WEnvironment&amp; env)</samp></li>\n    <li><samp>WApplication::WApplication(const WEnvironment&amp; env)</samp></li>\n </ul>\n</li>\n</ul>\n\n<h3>Other changes:</h3>\n\n<ul>\n  <li>Support for unicode is implemented, but perhaps needs more testing\n  by non-Western people ? Only UTF-8 is supported currently.</li>\n  <li>Addition of a WTimer class -- see mission example.</li>\n  <li>Many bug fixes which should make Wt more robust against illegal CGI\n    requests (which are ignored), and now Wt should exit cleanly in more\n    (all?) circumstances.</li>\n  <li>Addition of feed-back for pending AJAX requests (does not work yet on\n    IE).</li>\n  <li>Support for style sheets is improved: now inline decoration styles\n    will override style sheet styles. See hangman or treelist examples.</li>\n  <li>The browser can be redirected to a new page. This is useful when the\n    application is terminated -- or to change during the application from\n    HTTP to HTTPS and back.</li>\n  <li>WValidationStatus API has changed -- less complicated now.</li>\n</ul>\n\n</body>\n</html>\n"
        },
        {
          "name": "WConfig.h.in",
          "type": "blob",
          "size": 1.5478515625,
          "content": "#ifndef WCONFIG_H\n#define WCONFIG_H\n\n// Version defines\n#define WT_SERIES ${VERSION_SERIES}\n#define WT_MAJOR  ${VERSION_MAJOR}\n#define WT_MINOR  ${VERSION_MINOR}\n\n/*! \\brief A constant that encodes the library version of %Wt\n *\n * You may use this constant to check for the version of %Wt at build-time.\n */\n#define WT_VERSION (((WT_SERIES & 0xff) << 24) | ((WT_MAJOR & 0xff) << 16) | ((WT_MINOR & 0xff) << 8))\n#define WT_VERSION_STR \"${VERSION_SERIES}.${VERSION_MAJOR}.${VERSION_MINOR}\"\n#define WT_CLASS       \"Wt${VERSION_SERIES}_${VERSION_MAJOR}_${VERSION_MINOR}\"\n#define WT_INCLUDED_VERSION Wt_${VERSION_SERIES}_${VERSION_MAJOR}_${VERSION_MINOR}\n\n#define RUNDIR \"${RUNDIR}\"\n#define WT_CONFIG_XML \"${CONFIGURATION}\"\n#define WTHTTP_CONFIGURATION \"${WTHTTP_CONFIGURATION}\"\n\n#cmakedefine WT_STATIC\n#cmakedefine WTDBO_STATIC\n#cmakedefine WTDBOPOSTGRES_STATIC\n#cmakedefine WTDBOSQLITE3_STATIC\n#cmakedefine WTDBOFIREBIRD_STATIC\n#cmakedefine WTDBOMYSQL_STATIC\n#cmakedefine WTDBOMSSQLSERVER_STATIC\n#cmakedefine WTHTTP_STATIC\n\n#cmakedefine WT_HAS_WRASTERIMAGE\n#cmakedefine WT_HAS_WPDFIMAGE\n#cmakedefine WT_WITH_SSL\n#cmakedefine WT_HAS_SAML\n\n#cmakedefine WT_USE_OPENGL\n#cmakedefine WT_DEBUG_ENABLED\n#cmakedefine WT_THREADED\n\n#cmakedefine WT_ANY_IS_THELINK2012_ANY\n#cmakedefine WT_ANY_IS_EXPERIMENTAL_ANY\n#cmakedefine WT_ANY_IS_STD_ANY\n\n#cmakedefine WT_DATE_TZ_USE_DATE\n#cmakedefine WT_DATE_TZ_USE_STD\n\n#cmakedefine WT_ASIO_IS_BOOST_ASIO\n#cmakedefine WT_ASIO_IS_STANDALONE_ASIO\n\n// our win32: WIN32 (gcc) or _WIN32 (MSC)\n#if defined(WIN32) || defined(_WIN32)\n#define WT_WIN32 1\n#endif\n\n#endif\n"
        },
        {
          "name": "WtInstall.cmake",
          "type": "blob",
          "size": 0.115234375,
          "content": "EXEC_PROGRAM(mkdir ARGS -p ${DESTDIR}${RUNDIR})\r\nEXEC_PROGRAM(chown ARGS ${WEBUSER}:${WEBGROUP} ${DESTDIR}${RUNDIR})\r\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "jenkins",
          "type": "tree",
          "content": null
        },
        {
          "name": "migrate",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "selenium",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "target",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "wt-config-version.cmake.in",
          "type": "blob",
          "size": 1.6806640625,
          "content": "set(PACKAGE_VERSION @VERSION_SERIES@.@VERSION_MAJOR@.@VERSION_MINOR@)\n\n# Match the version just as precisely as it was specified\n\nif(PACKAGE_FIND_VERSION_MAJOR STREQUAL \"@VERSION_SERIES@\")\n  set(_MAJOR_MATCHES TRUE)\nelse()\n  set(_MAJOR_MATCHES FALSE)\nendif()\nif(PACKAGE_FIND_VERSION_MINOR STREQUAL \"@VERSION_MAJOR@\")\n  set(_MINOR_MATCHES TRUE)\nelse()\n  set(_MINOR_MATCHES FALSE)\nendif()\nif(PACKAGE_FIND_VERSION_PATCH STREQUAL \"@VERSION_MINOR@\")\n  set(_PATCH_MATCHES TRUE)\nelse()\n  set(_PATCH_MATCHES FALSE)\nendif()\n\nif(PACKAGE_FIND_VERSION_COUNT EQUAL 0)\n  set(PACKAGE_VERSION_COMPATIBLE TRUE)\nelseif(PACKAGE_FIND_VERSION_COUNT EQUAL 1 AND _MAJOR_MATCHES)\n  set(PACKAGE_VERSION_COMPATIBLE TRUE)\nelseif(PACKAGE_FIND_VERSION_COUNT EQUAL 2 AND\n       _MAJOR_MATCHES AND _MINOR_MATCHES)\n  set(PACKAGE_VERSION_COMPATIBLE TRUE)\nelseif(PACKAGE_FIND_VERSION_COUNT GREATER 2 AND\n       _MAJOR_MATCHES AND _MINOR_MATCHES AND _PATCH_MATCHES)\n  set(PACKAGE_VERSION_COMPATIBLE TRUE)\nelse()\n  set(PACKAGE_VERSION_COMPATIBLE FALSE)\nendif()\n\nif(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION)\n  set(PACKAGE_VERSION_EXACT TRUE)\nendif()\n\n# bitness checks copied from autogenerated CMakePackageConfigHelpers version file\n\n# if the installed or the using project don't have CMAKE_SIZEOF_VOID_P set, ignore it:\nif(\"${CMAKE_SIZEOF_VOID_P}\" STREQUAL \"\" OR \"@CMAKE_SIZEOF_VOID_P@\" STREQUAL \"\")\n  return()\nendif()\n\n# check that the installed version has the same 32/64bit-ness as the one which is currently searching:\nif(NOT CMAKE_SIZEOF_VOID_P STREQUAL \"@CMAKE_SIZEOF_VOID_P@\")\n  math(EXPR installedBits \"@CMAKE_SIZEOF_VOID_P@ * 8\")\n  set(PACKAGE_VERSION \"${PACKAGE_VERSION} (${installedBits}bit)\")\n  set(PACKAGE_VERSION_UNSUITABLE TRUE)\nendif()\n"
        },
        {
          "name": "wt-config.cmake.in",
          "type": "blob",
          "size": 0.9814453125,
          "content": "if(@_WTCONFIG_CMAKE_FIND_BOOST@)\n  # Find Boost\n  set(Boost_USE_STATIC_LIBS @_WTCONFIG_BOOST_STATIC@)\n  set(Boost_USE_MULTITHREADED @Boost_USE_MULTITHREADED@)\n  find_package(Boost QUIET\n    COMPONENTS @Boost_COMPONENTS@)\nendif()\n\n# Required target\ninclude(${CMAKE_CURRENT_LIST_DIR}/wt-target-wt.cmake)\n# Optional targets\ninclude(${CMAKE_CURRENT_LIST_DIR}/wt-target-test.cmake OPTIONAL)\ninclude(${CMAKE_CURRENT_LIST_DIR}/wt-target-http.cmake OPTIONAL)\ninclude(${CMAKE_CURRENT_LIST_DIR}/wt-target-fcgi.cmake OPTIONAL)\ninclude(${CMAKE_CURRENT_LIST_DIR}/wt-target-isapi.cmake OPTIONAL)\ninclude(${CMAKE_CURRENT_LIST_DIR}/wt-target-dbo.cmake OPTIONAL)\ninclude(${CMAKE_CURRENT_LIST_DIR}/wt-target-dbosqlite3.cmake OPTIONAL)\ninclude(${CMAKE_CURRENT_LIST_DIR}/wt-target-dbopostgres.cmake OPTIONAL)\ninclude(${CMAKE_CURRENT_LIST_DIR}/wt-target-dbofirebird.cmake OPTIONAL)\ninclude(${CMAKE_CURRENT_LIST_DIR}/wt-target-dbomysql.cmake OPTIONAL)\ninclude(${CMAKE_CURRENT_LIST_DIR}/wt-target-dbomssqlserver.cmake OPTIONAL)\n"
        },
        {
          "name": "wt_config.xml.in",
          "type": "blob",
          "size": 36.818359375,
          "content": "<!--\n    Wt Configuration File.\n\n    The Wt configuration file manages, for every Wt application, settings\n    for session management, debugging, directory for runtime information\n    such as session sockets, and some security settings.\n\n    Settings may be specified globally, or for a single application path.\n\n    The path should be as configured in the Wt build process, where it\n    defaults to /etc/wt/wt_config.xml. It can be overridden in the environment\n    variable WT_CONFIG_XML, or with the -c startup option of wthttp.\n\n    The values listed here are the default values, which are used when the\n    declaration is missing or no configuration file is used.\n  -->\n\n<server>\n\n    <!-- Default application settings\n\n      The special location \"*\" always matches. See below for an example\n      of settings specific to a single application.\n      -->\n    <application-settings location=\"*\">\n\n        <!-- Session management. -->\n        <session-management>\n            <!-- Every session runs within a dedicated process.\n\n               This mode guarantees kernel-level session privacy, but as every\n               session requires a separate process, it is also an easy target\n               for DoS attacks if not shielded by access control.\n\n               Note: currently only supported by the wtfcgi and wthttp\n               connectors.\n\n               max-num-sessions determines the maximum number of sessions\n\n               num-session-threads determines the number of threads for every\n               session process. If not specified, the number of threads for every\n               session process is the same as the number of threads for the parent\n               process.\n              -->\n\n            <!--\n               <dedicated-process>\n                 <max-num-sessions>100</max-num-sessions>\n                 <num-session-threads>10</num-session-threads>\n               </dedicated-process>\n            -->\n\n            <!-- Multiple sessions within one process.\n\n               This mode spawns a number of processes, and sessions are\n               allocated randomly to one of these processes (you should not\n               use this for dynamic FCGI servers, but only in conjunction\n               with a fixed number of static FCGI servers.\n\n               This requires careful programming, as memory corruption in one\n               session will kill all of the sessions in the same process. You\n               should debug extensively using valgrind. Also, it is your\n               responsibility to keep session state not interfering and\n               separated.\n\n               On the other hand, sessions are inexpensive, and this mode\n               suffers far less from DoS attacks than dedicated-process mode.\n               Use it for non-critical and well-debugged web applications.\n\n               Note: the wthttp connector will ignore the num-processes\n               setting and use only process.\n              -->\n            <shared-process>\n                <num-processes>1</num-processes>\n            </shared-process>\n\n            <!-- Session tracking strategy.\n\n               Possible values:\n                 Auto: cookies if available, otherwise URL rewriting\n                 URL:  only URL rewriting\n                 Combined: uses URL rewriting, with a multi-session cookie to\n                           prevent stealing of sessions through the URL. Will\n                           not fall back to URL rewriting if cookies are not\n                           available. This is the most secure strategy.\n\n               It is recommended to stick to URL rewriting or Combined for session\n               tracking as this is more secure (it avoids the risk of attacks\n               like CSRF or BREACH), and also provides proper support for\n               concurrent sessions in a single browser.\n              -->\n            <tracking>URL</tracking>\n\n            <!-- How reload should be handled.\n\n               When reload should (or rather, may) spawn a new session, then\n               even in the case cookies are not used for session management,\n               the URL will not be cluttered with a sessionid.\n               However, WApplication::refresh() will never be called.\n              -->\n            <reload-is-new-session>true</reload-is-new-session>\n\n            <!-- Session timeout (seconds).\n\n               When a session remains inactive for this amount of time, it is\n               cleaned up.\n              -->\n            <timeout>600</timeout>\n\n            <!-- Idle timeout (seconds).\n\n               When the user does not interact with the application for the set number of seconds,\n               WApplication::idleTimeout() is called. By default, this\n               method quits the application immediately, but it can be overridden\n               if different behaviour is desired.\n\n               This feature can be used to prevent others from taking over a session\n               when the device that the Wt application is being used from is left behind,\n               and is most effective in combination with a fairly short session timeout (<timeout>)\n\n               When omitted, or left empty, this feature is disabled.\n               -->\n            <!--<idle-timeout>900</idle-timeout>-->\n\n            <!-- Server push timeout (seconds).\n\n               When using server-initiated updates, the client uses\n               long-polling requests. Proxies (including reverse\n               proxies) are notorious for silently closing idle\n               requests; the client therefore cancels the request\n               periodically and issues a new one. This timeout sets\n               the frequency.\n              -->\n            <server-push-timeout>50</server-push-timeout>\n        </session-management>\n\n        <!-- Settings that apply only to the FastCGI connector.\n\n           To configure the wthttp connector, use command line options, or\n           configure default options in /etc/wt/wthttpd\n          -->\n        <connector-fcgi>\n            <!-- Valgrind path\n\n               If debugging is enabled and this path is not empty, then valgrind\n               will be started for every shared process, or for every session\n               which has ?debug appended to the command line.\n\n               The variable is slighly misnamed. Not only a path can be set,\n               but also options, like for example:\n\n                 /usr/bin/valgrind - -leak-check=full\n             -->\n            <valgrind-path></valgrind-path>\n\n            <!-- Run directory\n\n               Path used by Wt to do session management.\n              -->\n            <run-directory>${RUNDIR}</run-directory>\n\n        </connector-fcgi>\n\n        <!-- Settings that apply only to the MS IIS ISAPI connector.\n\n           To configure the wthttp connector, use command line options, or\n           configure default options in /etc/wt/wthttpd\n          -->\n        <connector-isapi>\n\n            <!-- Maximum Request Size spooled in memory (KiB)\n\n               Normally, Wt keeps incoming requests (POST data) in memory.\n               However, malicious users could send a big POST and as such\n               use up all memory of your HTTP server. With this parameter,\n               you tune how big a request can be before Wt spools it in a\n               file before processing it. Legitimate big POST messages may\n               occur when users are expected to upload files.\n\n               See also max-request-size.\n\n               The default value is 128K, which is more than enough for\n               any interactive Wt event.\n              -->\n            <max-memory-request-size>128</max-memory-request-size>\n        </connector-isapi>\n\n        <!-- Javascript debug options\n\n             Values:\n             - naked: JavaScript errors are not caught at all\n             - false: JavaScript errors are caught and a simple error message\n                      is printed to indicate that something is terribly wrong\n             - stack: equivalent to 'false'\n             - true: JavaScript errors are rethrown after server-side logging\n\n             Unless the value is 'naked',\n             WApplication::handleJavaScriptError() is called which by\n             default logs the error and terminates the session.\n          -->\n        <debug>false</debug>\n\n        <!-- Log file\n\n           When the log file is empty, or omitted, logging is done to\n           stderr. This may end up in the web server error log file\n           (e.g. for apache + fastcgi module), or on stderr (e.g. for\n           the built-in httpd).\n         -->\n        <log-file></log-file>\n\n        <!-- Logger configuration\n\n           This configures the logger. With the default configuration,\n           everything except for debugging messages are logged.\n\n           The configuration is a string that defines rules for\n           enabling or disabling certain logging. It is a white-space\n           delimited list of rules, and each rule is of the form:\n\n             [-]level : enables (or disables) logging of messages of\n             the given level; '*' is a wild-card that matches all\n             levels\n\n             [-]level:scope : enables (or disables) logging of\n             messages of the given level and scope; '*' is a wild-card\n             that matches all levels or scopes.  The default\n             configuration is \"* -debug\", i.e. by default everything\n             is logged, except for \"debug\" messages.\n\n           Some other examples:\n\n             \"* -debug debug:wthttp\": logs everything, including\n             debugging messages of scope \"wthttp\", but no other\n             debugging messages.\n\n             \"* -info -debug\": disables logging of info messages\n             in addition to debugging messages.\n\n           Note debugging messages are only emitted when debugging\n           has been enabled while building Wt.\n          -->\n        <log-config>* -debug</log-config>\n\n        <!-- Maximum HTTP request size (KiB)\n\n           Maximum size of an incoming POST request. This value must be\n           increased when the user is allowed to upload files.\n         -->\n        <max-request-size>128</max-request-size>\n\n        <!-- Maximum form data (KiB)\n\n           Maximum size of the data in a POST request of type\n           'application/x-www-form-urlencoded' (used for Wt form-field values)\n           Note that the maximum size is also limited by the value of\n           'max-request-size'.\n        -->\n        <max-formdata-size>5120</max-formdata-size>\n\n        <!--- Maximum number of pending events\n\n            Client-side events (user-interaction, WTimer, custom js signals) are\n            queued if the server did not yet respond to a previous update.\n            This allows you to configure the maximum number of events in the queue.\n            When the maximum is exceeded, the session stops and an error is logged\n            in the server.\n            Setting it to zero will disable the limit.\n        -->\n        <max-pending-events>1000</max-pending-events>\n\n        <!-- Number of threads per process\n\n           You may want to change this value if you would like to\n           support more reentrant event loops, where you block one\n           event loop using WDialog::exec() or related static\n           methods. Everytime you enter such an event loop, one\n           thread is blocked, and therefore the total number of\n           sessions that reliably can do this is limited to the\n           number of thread you have (minus one to unblock).\n\n           You may also want to increase this number if your Wt\n           application is regularly waiting for IO (databases, network,\n           files, ...). If this number is too low, all threads could\n           be waiting for IO operations to complete while your CPU\n           is idle. Increasing the number of threads may help.\n\n           Computing intensive applications may also increase this number,\n           even though it is better to offload computations to a helper\n           thread and user server push or a WTimer to check for\n           completion of the task in order to keep your GUI responsive\n           during the computations.\n\n           When using the MS IIS ISAPI connector, this configures the\n           number of threads that will be used to handle Wt requests.\n           The IIS internal threads are never used to do any\n           processing; all requests are forwarded to be handled in\n           this threadpool. Rather than to configure a so-called\n           'web-garden' in IIS, increase this number. The ISAPI\n           connector will not work correctly when a web-garden is\n           configured.\n\n           The default value is 10.\n              -->\n        <num-threads>10</num-threads>\n\n        <!-- Session id length (number of characters) -->\n        <session-id-length>16</session-id-length>\n\n        <!-- DoS prevention: limit plain HTML sessions\n\n           This is a simple measure which avoids Denial-of-Service\n           attacks on plain HTML sessions, which are easy to mount in\n           particular in the case of progressive bootstrap mode.\n\n           This setting may be used to keep the ratio of plain HTML\n           versus Ajax sessions under a certain ratio. Typically, most\n           of your sessions will be Ajax sessions, and only a tiny\n           fraction (e.g. less than 5%) will be plain HTML\n           sessions. This ratio is only enforced when more than 20 sessions\n           have been created.\n\n           The default is 1 (= 100%), which means that 100% of all sessions\n           may be plain HTML sessions, effectively disabling this feature. If\n           you set it to 0.5 for example, that means that 50% of all sessions\n           may be plain HTML sessions.\n          -->\n        <plain-ajax-sessions-ratio-limit>1</plain-ajax-sessions-ratio-limit>\n\n        <!-- DoS prevention: adds a puzzle to validate Ajax sessions\n\n           This is a simple measure which avoids Denial-of-Service\n           attacks on Ajax sessions.\n\n           When enabled, a puzzle needs to be solved in the first Ajax\n           request which eliminates agents that do not build a proper\n           DOM tree.\n          -->\n        <ajax-puzzle>false</ajax-puzzle>\n\n        <!-- Do strict serialization of events.\n\n           By default events are queued at the client-side, and\n           transmitted to the server so that at any time only one\n           request/response is pending. This scheme has a quality that\n           resembles TCP: on a low-latency link you allow the\n           transmission of many smaller requests, while on a high\n           latency link, events will be propagated less often, but in\n           batches.\n\n           In any case, this scheme does not drop events, no matter\n           how quickly they are generated.\n\n           In rare cases, the scheme may result in unwanted behaviour,\n           because the client-side is allowed to be slighly out of\n           sync at the time an event is recorded with the server-side\n           (and more so on high-latency links). The drastic\n           alternative is to discard events while a response is\n           pending, and can be configured by setting this option to\n           true.\n          -->\n        <strict-event-serialization>false</strict-event-serialization>\n\n        <!-- Enables web socket.\n\n           By default Ajax and long polling are used to communicate\n           between server and browser.\n\n           By enabling web socket support, if the browser supports\n           WebSockets, then WebSocket is the protocol used for\n           communication between client and server. WebSockets are\n           currently only supported by the built-in httpd Connector,\n           which acts as both an HTTP and WebSocket server. The WebSocket\n           protocol is intentionally not compatible with HTTP, through\n           a special hand-shake mechanism, and requires\n           that all (reverse) proxy servers also have explicit support\n           for this protocol.\n          -->\n        <web-sockets>false</web-sockets>\n\n        <!-- Enables the detection of webgl-capabilites.\n\n             When this is enabled, the browser will try to create a\n             webgl-context when loading to verify that it is possible. This\n             is necessary when using WGLWidget.\n\n             This can take up some load time. When your application does not\n             use WGLWidget, this option can be set to false. It will improve\n             the initial loading time of the web application.\n        -->\n        <webgl-detection>true</webgl-detection>\n\n        <!-- Redirect message shown for browsers without JavaScript support\n\n           By default, Wt will use an automatic redirect to start the\n           application when the browser does not support\n           JavaScript. However, browsers are not required to follow\n           the redirection, and in some situations (when using XHTML),\n           such automatic redirection is not supported.\n\n           This configures the text that is shown in the anchor which\n           the user may click to be redirected to a basic HTML version\n           of your application.\n          -->\n        <redirect-message>Load basic HTML</redirect-message>\n\n        <!-- Whether we are sitting behind a reverse proxy\n\n           When deployed behind a reverse proxy (such as Apache or Squid),\n           the server location is not read from the \"Host\" header,\n           but from the X-Forwarded-For header, if present.\n\n           This option is required to make e.g. clientAddress() return the\n           correct address.\n\n           Deprecated: use trusted-proxy-config instead. If this option is\n           set to true, Wt will take the first non-local IP address from the\n           Client-IP and X-Forwarded-For headers to determine the clientAddress().\n          -->\n        <!--<behind-reverse-proxy>false</behind-reverse-proxy>-->\n\n        <!-- The following configuration options can be used when Wt is behind a reverse proxy.\n          -->\n        <trusted-proxy-config>\n          <!-- Which header to use to get the real client IP address when behind a reverse proxy.\n\n               This could be X-Forwarded-For (default), CF-Connecting-IP for Cloudflare,\n               True-Client-IP, Fastly-Client-IP,...\n\n               This will influence the IP address returned by WEnvironment::clientAddress() and\n               Http::Request::clientAddress().\n            -->\n          <original-ip-header>X-Forwarded-For</original-ip-header>\n\n          <!-- Which proxy servers are trusted\n\n               You can use single IP addresses or subnets in CIDR notation.\n\n               By default, no proxy servers are trusted and any proxy headers are ignored, e.g.\n               X-Forwarded-For, X-Forwarded-Proto, etc.\n            -->\n          <trusted-proxies>\n            <!-- loopback -->\n            <!--\n            <proxy>127.0.0.1/8</proxy>\n            <proxy>::1/128</proxy>\n            -->\n            <!-- link local -->\n            <!--\n            <proxy>169.254.0.0/16</proxy>\n            <proxy>fe80::/10</proxy>\n            -->\n            <!-- local -->\n            <!--\n            <proxy>10.0.0.0/8</proxy>\n            <proxy>172.16.0.0/12</proxy>\n            <proxy>192.168.0.0/16</proxy>\n            <proxy>fc00::/7</proxy>\n            -->\n          </trusted-proxies>\n        </trusted-proxy-config>\n\n        <!-- Whether inline CSS is allowed.\n\n           Some Wt widgets will insert CSS rules in the the inline\n           stylesheet when first used. This can be disabled using this\n           configuration option.\n\n           Note: some widgets, such as WTreeView and WTableView,\n           dynamically manipulate rules in this stylesheet, and will\n           no longer work properly when inline-css is disabled.\n          -->\n        <inline-css>true</inline-css>\n\n        <!-- The timeout before showing the loading indicator.\n\n           The value is specified in ms.\n          -->\n        <indicator-timeout>500</indicator-timeout>\n\n        <!-- The timeout for processing a double click event.\n\n           The value is specified in ms.\n          -->\n        <double-click-timeout>200</double-click-timeout>\n\n        <!-- Ajax user agent list\n\n           Wt considers three types of sessions:\n           - Ajax sessions: use Ajax and JavaScript\n           - plain HTML sessions: use plain old server GETs and POSTs\n           - bots: have clean internal paths and no persistent sessions\n\n           By default, Wt does a browser detection to distinguish between\n           the first two: if a browser supports JavaScript (and has it\n           enabled), and has an Ajax DOM API, then Ajax sessions are chosen,\n           otherwise plain HTML sessions.\n\n           Here, you may indicate which user agents should or should\n           not receive an Ajax session regardless of what they report as\n           capabilities.\n\n           Possible values for 'mode' are \"white-list\" or \"black-list\". A\n           white-list will only treat the listed agents as supporting Ajax,\n           all other agents will be served plain HTML sessions. A black-list\n           will always server plain HTML sessions to listed agents and\n           otherwise rely on browser capability detection.\n\n           Each <user-agent> is a regular expression.\n          -->\n        <user-agents type=\"ajax\" mode=\"black-list\">\n          <!-- <user-agent>.*Crappy browser.*</user-agent> -->\n        </user-agents>\n\n        <!-- Bot user agent list\n\n           Here, you can specify user agents that should be should be\n           treated as bots.\n\n           Each <user-agent> is a regular expression.\n          -->\n        <user-agents type=\"bot\">\n            <user-agent>.*Googlebot.*</user-agent>\n            <user-agent>.*msnbot.*</user-agent>\n            <user-agent>.*Slurp.*</user-agent>\n            <user-agent>.*Crawler.*</user-agent>\n            <user-agent>.*Bot.*</user-agent>\n            <user-agent>.*ia_archiver.*</user-agent>\n            <user-agent>.*Twiceler.*</user-agent>\n            <user-agent>.*Yandex.*</user-agent>\n            <user-agent>.*Nutch.*</user-agent>\n            <user-agent>.*MJ12bot.*</user-agent>\n            <user-agent>.*Baiduspider.*</user-agent>\n            <user-agent>.*Ezooms.*</user-agent>\n            <user-agent>.*Sogou web spider.*</user-agent>\n            <user-agent>.*AhrefsBot.*</user-agent>\n        </user-agents>\n\n        <!-- Configures different rendering engines for certain browsers.\n\n           Currently this is only used to select IE7 compatible rendering\n           engine for IE8, which solves problems of unreliable and slow\n           rendering performance for VML which Microsoft broke in IE8.\n\n           Before 3.3.0, the default value was IE8=IE7, but since 3.3.0\n           this has been changed to an empty string (i.e. let IE8 use the\n           standard IE8 rendering engine) to take advantage of IE8's\n           improved CSS support. If you make heavy use of VML, you may need\n           to revert to IE8=IE7.\n          -->\n        <UA-Compatible></UA-Compatible>\n\n        <!-- Configures whether the progressive bootstrap method is used.\n\n           The default bootstrap method first senses whether there is Ajax\n           support, and only then creates the application.\n\n           The progressive bootstrap method first renders a plain HTML\n           version and later upgrades to an Ajax version.\n\n           (Not to be confused with the Twitter Bootstrap theme)\n          -->\n        <progressive-bootstrap>false</progressive-bootstrap>\n\n        <!-- Configures whether the loading the application is delayed at boot.\n\n            By default, the loading of the application is delayed. This can in \n            some very specific circumstances lead to the browser waiting several\n            seconds before loading the application. \n            \n            If this is a bug that you are facing, consider setting this to false.\n            This could however impact your code if you inject JS during boot.\n          -->\n        <delay-load-at-boot>true</delay-load-at-boot>\n\n        <!-- Set session-ID cookie\n\n           In its default (and recommended) configuration, Wt does not\n           rely on cookies for session tracking.\n\n           Wt has several mechanisms in place to prevent session ID stealing:\n           - for an Ajax session, the session ID is not shown in the URL,\n             avoiding session ID stealing through a referer attack.\n           - in case the session ID is present in the URL (e.g. for a plain\n             HTML session), Wt will redirect links to images or external\n             anchors through an intermediate page that censors the session ID\n\n           In case of the loss of a session ID, the impact is minimized:\n           - a full page refresh is not supported if the client IP address\n             changes or the user-agent changes\n           - an Ajax update is protected by other state which is not exposed\n             in the URL\n\n           To still enable a full page refresh when the client IP address\n           changes, an additional cookie may be set which is used only\n           for this purpose, and can be enabled using this setting.\n          -->\n        <session-id-cookie>false</session-id-cookie>\n\n        <!-- Configure cookie checks\n\n         By default, Wt will test for cookie support using JavaScript.\n         Because cookie manipulation from JavaScript is a common security\n         risk vector, some prefer to disable these checks.\n\n         -->\n        <cookie-checks>true</cookie-checks>\n\n        <!-- Configure meta headers\n\n         The user-agent allows optional filtering based on the\n         user-agent, using a regular expression. You can have multiple\n         set-meta-headers definitions.\n\n         Deprecated: use <head-matter> instead.\n\n        <meta-headers user-agent=\".*MSIE.*\">\n          <meta name=\"robots\" content=\"noindex\" />\n        </meta-headers>\n         -->\n\n        <!-- Configure <head> matter\n\n          The user-agent allows optional filtering based on the\n          user-agent, using a regular expression. You can have multiple\n          head-matter definitions.\n\n          All contents will be inserted into the <head> tag\n          verbatim. This could be useful for setting <meta> tags or\n          <link> tags that are global for the entire application.\n        -->\n        <head-matter user-agent=\".*MSIE.*\">\n          <meta name=\"robots\" content=\"noindex\" />\n        </head-matter>\n\n        <!-- Configure allowed origins for CORS (only for WidgetSet entry points)\n\n         Since Wt 3.3.8, cross-origin requests are disallowed by default.\n\n         <allowed-origins> allows to selectively allow cross-origin requests\n         for WidgetSet entry points (cross-origin requests are always disallowed\n         for normal applications).\n\n         Use <allowed-origins> to determine which origins should be allowed.\n         Wt will only allow requests with an Origin header if it is an exact\n         match for one of the origins in the list.\n\n         \"null\" can be included in the list of allowed origins. In that case,\n         Wt responds with \"Access-Control-Allow-Origin: *\".\n\n         If <allowed-origins> is omitted or empty, no origins are allowed.\n\n         If <allowed-origins> contains * (the asterisk character),\n         all origins are allowed.\n          -->\n        <allowed-origins>\n          <!-- Leave empty to disallow all origins. -->\n\n          <!-- To allow any origin: -->\n          <!-- * -->\n\n          <!-- To allow only http://example.com and http://example.org: -->\n          <!-- http://example.com,http://example.org -->\n        </allowed-origins>\n\n        <!-- Runtime Properties\n\n           These properties may be used to adapt applications to their\n           deployment environment. Typical use is for paths to resources\n           that may or may not be shared between several applications.\n          -->\n        <properties>\n            <!-- baseURL property\n\n               The absolute URL at which the application is deployed\n               (known to the user). This is needed only in two scenarios.\n\n               a) use of relative URLs in included XHTML\n\n               When you use relative URLs for images, etc... in\n               literal XHTML fragments (e.g. in WTemplate), which need\n               to resolve against the deployment path of the\n               application. This will not work as expected in the\n               presence of an internal application path.  This URL is\n               set as base URL in the HTML, against which relative\n               URLs are resolved so that these work correctly\n               regardless of the internal path. It is also used\n               explicitly in any URL generated by the library.\n\n               b) widgetset mode deployments\n\n               Another situation in which you need to define the baseURL is\n               when deploying a widgetset mode application behind a reverse\n               proxy. A widgetset mode application uses only absolute URLs\n               because it may be hosted in a web page from an entirely\n               different domain.\n\n               By default, no baseURL is specified, in which case Wt will\n               avoid using absolute URLs. Relative URLs passed in API calls\n               will be \"fixed\" so that they resolve against the location of the\n               application deploy path, even in the presence of an\n               internal path.\n              -->\n            <!-- <property name=\"baseURL\">\"http://mysite.com/app</property> -->\n\n            <!-- resourcesURL property\n\n               The URL at which the resources/ folder is deployed that\n               comes distributed with Wt and contains auxiliary files\n               used to primarily for styles and themes.\n\n               The default value is 'resources/'\n              -->\n            <property name=\"resourcesURL\">resources/</property>\n\n            <!-- favicon property\n\n               By default, a browser will try to fetch a /favicon.ico icon\n               from the root of your web server which is used as an icon\n               for your application. You can specify an alternative location\n               by setting this property, or for an individual application\n               entry point by passing a location to WServer::addEntryPoint().\n              -->\n            <!-- <property name=\"favicon\">images/favicon.ico</property> -->\n\n            <!-- leafletJSURL and leafletCSSURL properties\n\n               This is required if you want to use WLeafletMap, since leaflet itself is not bundled with Wt.\n               leafletJSURL should be a valid URL leading to the leaflet JavaScript, and leafletCSSURL to the leaflet CSS.\n              -->\n            <!-- <property name=\"leafletJSURL\">https://unpkg.com/leaflet@1.5.1/dist/leaflet.js</property> -->\n            <!-- <property name=\"leafletCSSURL\">https://unpkg.com/leaflet@1.5.1/dist/leaflet.css</property> -->\n\n            <!-- google_api_key property\n\n                The Google API key to be used with WGoogleMap.\n            -->\n            <!-- <property name=\"google_api_key\"></property> -->\n\n            <!-- Mail properties\n\n              These properties can be used to change the default settings used by Wt::Mail::Client.\n\n             - smtp-host: the hostname (or IP address) of the SMTP server to connect to (defaults to \"localhost\")\n             - smtp-port: the port of the SMTP server to connect to (defaults to 25)\n             - smtp-self-host: the hostname that the mail client uses to identify itself (defaults to \"localhost\")\n             - smtp-transport-encryption: the encryption method to use in the mail client. This can be \"none\", \"starttls\", or \"tls\".\n                                          The default is \"none\" for no encryption.\n             - smtp-auth-method: the method to use for authentication. This can be \"none\", \"plain\", or \"login\".\n                                 The default is \"none\" for no authentication.\n             - smtp-auth-username: the username to use for authentication (defaults to empty)\n             - smtp-auth-password: the password to use for authentication (defaults to empty)\n            -->\n            <!-- <property name=\"smtp-host\">localhost</property> -->\n            <!-- <property name=\"smtp-port\">25</property> -->\n            <!-- <property name=\"smtp-self-host\">localhost</property> -->\n            <!-- <property name=\"smtp-transport-encryption>none</property> -->\n            <!-- <property name=\"smtp-auth-method\">none</property> -->\n            <!-- <property name=\"smtp-auth-username\"></property> -->\n            <!-- <property name=\"smtp-auth-password\"></property> -->\n\n            <!-- AuthService properties\n\n              These properties are used to configure AuthService.\n\n             - auth-mail-sender-name: the sender name when AuthService sends emails, defaults to \"Wt Auth module\"\n             - auth-mail-sender-address: the sender address when AuthService sends emails, defaults to \"noreply-auth@www.webtoolkit.eu\"\n            -->\n            <!-- <property name=\"auth-mail-sender-name\">Wt Auth module</property> -->\n            <!-- <property name=\"auth-mail-sender-address\">noreply-auth@www.webtoolkit.eu</property> -->\n\n            <!-- OAuthService properties\n\n              These properties are used to configure OAuthService.\n\n             - oauth2-secret: the secret used to create the OAuth2 'state' hash. By default,\n                              this is randomly generated, which is sufficient for single-process\n                              deployments, but for multi-process deployments the same value must\n                              be used in all processes and thus needs to be pre-configured.\n             - oauth2-redirect-timeout: a timeout (in seconds) for when single-sign-on is used\n                                        without popup. If a user takes longer than this to login,\n                                        the application will be destroyed. The default is 10 minutes.\n            -->\n            <!-- <property name=\"oauth2-secret\"></property> -->\n            <!-- <property name=\"oauth2-redirect-timeout\">600</property> -->\n\n            <!-- SAML properties\n\n              These properties are used to configure Saml::Service.\n\n              - saml-secret: the secret used to create the SAML 'RelayState'. By default,\n                             this is randomly generated, which is sufficient for single-process\n                             deployments, but for multi-process deployments the same value must\n                             be used in all processes and thus needs to be pre-configured.\n              - saml-redirect-timeout: a timeout (in seconds) for when single-sign-on is used\n                                       without popup. If a user takes longer than this to login,\n                                       the application will be destroyed. The default is 10 minutes.\n            -->\n            <!-- <property name=\"saml-secret\"></property> -->\n            <!-- <property name=\"saml-redirect-timeout\">600</property> -->\n\n            <!-- PayPal properties\n\n              These properties can be used to configure Wt::Payment::PayPalService,\n              by calling configureFromProperties().\n\n             - paypal-user: the PayPal API username\n             - paypal-password: the PayPal API password\n             - paypal-signature: the PayPal API signature\n             - paypal-api-server-url: the URL of the PayPal API server\n             - paypal-pay-server-url: the URL of the server where the user is redirected for the payment\n             - paypal-version: the PayPal API version\n            -->\n            <!-- <property name=\"paypal-user\"></property>\n                 <property name=\"paypal-password\"></property>\n                 <property name=\"paypal-signature\"></property>\n                 <property name=\"paypal-api-server-url\"></property>\n                 <property name=\"paypal-pay-server-url\"></property>\n                 <property name=\"paypal-version\"></property> -->\n\n            <!-- TinyMCE properties\n\n              These properties are used to configure TinyMCE for WTextEdit.\n\n             - tinyMCEVersion: the version of TinyMCE to use, currently version 3.x and 4.x are supported\n             - tinyMCEURL: the URL to the main TinyMCE script file\n             - tinyMCEBaseURL: the base URL where TinyMCE is deployed.\n                               The default is resourcesURL/tiny_mce for TinyMCE 3,\n                               and resourcesURL/tinymce for TinyMCE 4 or later.\n                               Note: resourcesURL refers to the resourcesURL property, which itself defaults to \"resources/\"\n            -->\n            <!-- <property name=\"tinyMCEVersion\">3</property> -->\n            <!-- <property name=\"tinyMCEURL\"></property> -->\n            <!-- <property name=\"tinyMCEBaseURL\">resources/tiny_mce</property> -->\n        </properties>\n\n    </application-settings>\n\n\n    <!-- Override settings for specific applications.\n\n       Location refers to physical filesystem location of the\n       application. The application prints this location (which\n       corresponds to argv[0]) to the log file on startup, and this\n       should match exactly.\n      -->\n    <!--\n    <application-settings\n       location=\"/var/www/localhost/wt-examples/hello.wt\">\n    </application-settings>\n    -->\n</server>\n"
        }
      ]
    }
  ]
}