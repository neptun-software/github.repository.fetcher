{
  "metadata": {
    "timestamp": 1736710127033,
    "page": 768,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "elfmz/far2l",
      "stars": 1818,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 0.60546875,
          "content": "freebsd_test_task:\n    freebsd_instance:\n        image_family: freebsd-14-0\n    name: cirrus/FreeBSD\n    install_script: pkg install -y cmake git pkgconf bash wx32-gtk3 libssh openssl libnfs neon libarchive samba416 uchardet libxml2\n    script: mkdir build && cd build && cmake .. && make -j $(getconf _NPROCESSORS_ONLN) && ./install/far2l --help\n\nmacos_test_task:\n    macos_instance:\n        image: ghcr.io/cirruslabs/macos-ventura-xcode:14.2\n    name: cirrus/MacOS_M1\n    install_script: brew update && brew bundle -v\n    script: mkdir build && cd build && cmake -G Ninja .. && ninja -j$(getconf _NPROCESSORS_ONLN) -v\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.7900390625,
          "content": "\nColumnLimit:  110\nIndentWidth:  4\nTabWidth:     4\nLanguage:     Cpp\nStandard:     Latest\nSortIncludes: Never\n\nAccessModifierOffset:              -4\nAlignAfterOpenBracket:             DontAlign\nAlignConsecutiveAssignments:\n  Enabled: false\nAlignConsecutiveDeclarations:\n  Enabled: false\nAlignConsecutiveBitFields:\n  Enabled: true\n  AcrossEmptyLines: true\n  AcrossComments: true\nAlignConsecutiveMacros:\n  Enabled: true\n  AcrossEmptyLines: true\n  AcrossComments: true\nAllowAllArgumentsOnNextLine:       false\nAllowShortFunctionsOnASingleLine:  Inline\nAllowShortLambdasOnASingleLine:    Empty\nAlwaysBreakTemplateDeclarations:   Yes\nAlignTrailingComments:             true\nBinPackArguments: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth:           8\nIndentCaseLabels:                  true\n\nBreakBeforeBraces:       Custom\nBraceWrapping:\n  AfterClass:            true\n  AfterControlStatement: Never\n  AfterEnum:             true\n  AfterFunction:         true\n  AfterNamespace:        true\n  AfterObjCDeclaration:  true\n  AfterStruct:           true\n  AfterUnion:            true\n  AfterExternBlock:      false\n  BeforeCatch:           false\n  BeforeElse:            false\n  IndentBraces:          false\n  SplitEmptyFunction:    false\n  SplitEmptyRecord:      false\n  SplitEmptyNamespace:   false\n\n\nFixNamespaceComments:             true\nKeepEmptyLinesAtTheStartOfBlocks: true\n\n#PenaltyBreakAssignment: 10000\nPenaltyBreakBeforeFirstCallParameter: 10000\n#PenaltyBreakComment: 1000\nPenaltyBreakFirstLessLess: 16\n#PenaltyBreakOpenParenthesis: 1000\n#PenaltyBreakString: 1000\n#PenaltyBreakTemplateDeclaration: 1000\n#PenaltyExcessCharacter: 1000\nPenaltyIndentedWhitespace: 16\nPenaltyReturnTypeOnItsOwnLine: 96\n\n\nPointerAlignment:                 Right\nReferenceAlignment:               Pointer\n\nSpaceAfterCStyleCast:             false\nSpacesInCStyleCastParentheses:    false\n\nSpaceAfterLogicalNot:             false\nSpaceBeforeParens:                ControlStatements\nSpaceInEmptyParentheses:          false\n\n# needs a separate setting for namespace\nSpacesBeforeTrailingComments:     4\nSpacesInAngles:                   false\nSpacesInParentheses:              false\nSpacesInSquareBrackets:           false\n\n#OperandAlignmentStyle:            DontAlign\nAlignOperands:                     DontAlign\n#BinPackParameters: true\n\nBreakBeforeBinaryOperators:        NonAssignment\nPackConstructorInitializers:       NextLine\n\nAlignArrayOfStructures:            Left\n\n############ Options added for far2l, see https://github.com/elfmz/llvm-project\nUseTab:                              ForContinuationAndIndentationAndComments\nAlignByTab:                          true\nBreakConstructorInitializers:        AfterColonSeparated\nSpaceBeforeAssignmentOperators:      OnlyTrivial\nAlignConsecutiveMembersAssignments:  true\nAllowLongTrailingComments:           true\n"
        },
        {
          "name": ".clang-format.json",
          "type": "blob",
          "size": 1.79296875,
          "content": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"far2l-clang-format\",\n  \"title\": \"ClangFormat Options for far2l\",\n  \"allOf\": [\n    {\n      \"$ref\": \"http://jetbrains.com/schema/clangformat.json\"\n    }\n  ],\n  \"properties\": {\n    \"UseTab\": {\n      \"title\": \"The way to use tab characters in the resulting file.\",\n      \"x-intellij-html-description\": \"Modified to match https://github.com/elfmz/llvm-project\",\n      \"enum\": [\n        \"Never\",\n        \"ForIndentation\",\n        \"ForContinuationAndIndentation\",\n        \"AlignWithSpaces\",\n        \"Always\",\n        \"ForContinuationAndIndentationAndComments\"\n      ],\n      \"type\": \"string\"\n    },\n    \"AlignByTab\": {\n      \"title\": \"Align by tab.\",\n      \"x-intellij-html-description\": \"Added to match https://github.com/elfmz/llvm-project\",\n      \"type\": \"boolean\"\n    },\n    \"BreakConstructorInitializers\": {\n      \"title\": \"Break constructor initializers.\",\n      \"x-intellij-html-description\": \"Modified to match https://github.com/elfmz/llvm-project\",\n      \"enum\": [\n        \"AfterColonSeparated\"\n      ],\n      \"type\": \"string\"\n    },\n    \"SpaceBeforeAssignmentOperators\": {\n      \"title\": \"If `false`, spaces will be removed before assignment operators.\",\n      \"x-intellij-html-description\": \"Modified to match https://github.com/elfmz/llvm-project\",\n      \"enum\": [\n        \"OnlyTrivial\"\n      ],\n      \"type\": \"string\"\n    },\n    \"AlignConsecutiveMembersAssignments\": {\n      \"title\": \"Align consecutive members assignments.\",\n      \"x-intellij-html-description\": \"Added to match https://github.com/elfmz/llvm-project\",\n      \"type\": \"boolean\"\n    },\n    \"AllowLongTrailingComments\": {\n      \"title\": \"Allow long trailing comments.\",\n      \"x-intellij-html-description\": \"Added to match https://github.com/elfmz/llvm-project\",\n      \"type\": \"boolean\"\n    }\n  }\n}"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.166015625,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_style = tab\nindent_size = 4\n\n[*.yml]\nindent_style = space\nindent_size = 2\n\n[CMakeLists.txt]\nindent_style = space\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.40625,
          "content": "CMakeCache.txt\nCMakeFiles\nCMakeScripts\nCMakeLists.txt.user\nTesting\nMakefile\ncmake_install.cmake\ninstall_manifest.txt\ncompile_commands.json\nCTestTestfile.cmake\ninstall/\ntools/\n*.a\nfar2l/bootstrap\npython/staging\npython/python\npython/incpy\nbuild/\n.idea\nCPackConfig.cmake\nCPackSourceConfig.cmake\n*.cbp\ncmake-build-*\n.DS_Store\n_build/\npackaging/osx/FixupBundle.cmake\npackaging/osx/Setup.scpt\nfar2l_askpass\nfar2l_sudoapp\n\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 3.197265625,
          "content": "# Continuous Integration with https://travis-ci.org/\nlanguage: cpp\n\nmatrix:\n  include:\n    - os: osx\n      osx_image: xcode12\n    - os: linux\n      dist: xenial\n      sudo: required\n      compiler: gcc\n      addons:\n        apt:\n          sources:\n            - ubuntu-toolchain-r-test\n          packages:\n            - g++-5\n            - cmake\n            - libwxgtk3.0-dev\n            - libxml2-dev\n            - libuchardet-dev \n            - libssh-dev\n            - libsmbclient-dev\n            - libnfs-dev\n            - libneon27-dev\n            - libarchive-dev\n            - ninja-build\n      env: CXX=g++-5\n      install:\n            - if [ \"$CXX\" = \"g++\" ]; then export CXX=\"g++-5\" CC=\"gcc-5\"; fi\n    - os: linux\n      dist: xenial\n      sudo: required\n      compiler: gcc\n      addons:\n        apt:\n          sources:\n            - ubuntu-toolchain-r-test\n          packages:\n            - g++-6\n            - cmake\n            - libwxgtk3.0-dev\n            - libxml2-dev\n            - libuchardet-dev \n            - libssh-dev\n            - libsmbclient-dev\n            - libnfs-dev\n            - libneon27-dev\n            - libarchive-dev\n            - ninja-build\n      env: CXX=g++-6\n      install:\n            - if [ \"$CXX\" = \"g++\" ]; then export CXX=\"g++-6\" CC=\"gcc-6\"; fi\n    - os: linux\n      dist: xenial\n      sudo: required\n      compiler: clang\n      addons:\n        apt:\n          sources:\n            - ubuntu-toolchain-r-test\n            - llvm-toolchain-precise-3.6\n          packages:\n            - clang-3.6\n            - cmake\n            - libwxgtk3.0-dev\n            - libxml2-dev\n            - libuchardet-dev \n            - libssh-dev\n            - libsmbclient-dev\n            - libnfs-dev\n            - libneon27-dev\n            - libarchive-dev\n            - ninja-build\n      env: CXX=clang++-3.6\n      install:\n            - if [ \"$CXX\" = \"clang++\" ]; then export CXX=\"clang++-3.6\" CC=\"clang-3.6\"; fi\n    - os: linux\n      dist: xenial\n      sudo: required\n      compiler: clang\n      addons:\n        apt:\n          sources:\n            - ubuntu-toolchain-r-test\n            - llvm-toolchain-precise-3.7\n          packages:\n            - clang-3.7\n            - cmake\n            - libwxgtk3.0-dev\n            - libxml2-dev\n            - libuchardet-dev \n            - libssh-dev\n            - libsmbclient-dev\n            - libnfs-dev\n            - libneon27-dev\n            - libarchive-dev\n            - zlib1g-dev\n            - ninja-build\n      env: CXX=clang++-3.7\n      install:\n            - if [ \"$CXX\" = \"clang++\" ]; then export CXX=\"clang++-3.7\" CC=\"clang-3.7\"; fi\n              \nbefore_install:\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then brew unlink python@2 ; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then ( brew update || brew update || brew update ) ; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then brew pin tmate ; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then brew bundle -v ; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then sudo add-apt-repository -y ppa:saiarcot895/chromium-beta ; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then sudo sudo apt-get update ; fi\n\nscript:\n  - mkdir build\n  - cd build\n  - cmake -G Ninja .. && ninja -v\n  - cd install && zip -r ../far2l-${TRAVIS_COMMIT}.zip * && cd -\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Brewfile",
          "type": "blob",
          "size": 0.1728515625,
          "content": "brew \"cmake\"\nbrew \"libarchive\"\nbrew \"libnfs\"\nbrew \"libssh\"\nbrew \"neon\"\nbrew \"ninja\"\nbrew \"openssl\"\nbrew \"pkg-config\"\nbrew \"uchardet\"\nbrew \"wget\"\nbrew \"wxwidgets\"\nbrew \"libxml2\"\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 21.5986328125,
          "content": "set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\n\ncmake_minimum_required (VERSION 3.0.2)\n\nproject (far2l)\n\nset(APP_NAME \"far2l\")\nset(APP_IDENTIFIER \"com.far2l\")\nset(CPACK_PACKAGE_NAME \"far2l\")\n\nstring(ASCII 27 Esc)\nset(ColorNormal \"${Esc}[m\")\nset(ColorRed \"${Esc}[1;31m\")\n\ninclude(GNUInstallDirs)\n\n# just to force reconfigure if packaging/version changed\nconfigure_file(${CMAKE_SOURCE_DIR}/packaging/version ${CMAKE_BINARY_DIR}/packaging/version @ONLY)\n\n# reconfigure in case .git directory changed to update version correctly\nIF(EXISTS ${CMAKE_SOURCE_DIR}/.git)\n    set_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS ${CMAKE_SOURCE_DIR}/.git)\nendif()\n\nfile(READ \"${CMAKE_SOURCE_DIR}/packaging/version\" VERSION)\nstring(REGEX REPLACE \"[\\r\\n\\t ]$\" \"\" VERSION \"${VERSION}\")\nstring(REGEX REPLACE \"^([0-9]+)\\\\..*\" \"\\\\1\" VERSION_MAJOR \"${VERSION}\")\nstring(REGEX REPLACE \"^[0-9]+\\\\.([0-9]+).*\" \"\\\\1\" VERSION_MINOR \"${VERSION}\")\nstring(REGEX REPLACE \"^[0-9]+\\\\.[0-9]+\\\\.(.*)\" \"\\\\1\" VERSION_PATCH \"${VERSION}\")\n\nif(\"${VERSION_MAJOR}\" STREQUAL \"\" OR \"${VERSION_MAJOR}\" STREQUAL \"${VERSION}\"\n    OR \"${VERSION_MINOR}\" STREQUAL \"\" OR \"${VERSION_MINOR}\" STREQUAL \"${VERSION}\"\n    OR \"${VERSION_PATCH}\" STREQUAL \"\" OR \"${VERSION_PATCH}\" STREQUAL \"${VERSION}\")\n        message(FATAL_ERROR \"${ColorRed}packaging/version is corrupted, please write actual X.Y.Z version into it.${ColorNormal}\")\nendif()\n\nfind_package(Git)\n\nif(GIT_FOUND)\n    execute_process(COMMAND \"${GIT_EXECUTABLE}\" describe --tag\n        WORKING_DIRECTORY \"${CMAKE_SOURCE_DIR}\"\n        OUTPUT_VARIABLE GIT_TAG\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n        ERROR_QUIET)\nendif()\n\nif(NOT \"${GIT_TAG}\" STREQUAL \"v_${VERSION}\")\n    if(GIT_FOUND)\n        if(IS_DIRECTORY ${CMAKE_SOURCE_DIR}/.git)\n            execute_process(COMMAND \"${GIT_EXECUTABLE}\" show --no-patch --format=%ci HEAD\n                WORKING_DIRECTORY \"${CMAKE_SOURCE_DIR}\"\n                OUTPUT_VARIABLE GIT_DATE\n                OUTPUT_STRIP_TRAILING_WHITESPACE)\n            string(SUBSTRING ${GIT_DATE} 0 10 GIT_DATE)\n            execute_process(COMMAND \"${GIT_EXECUTABLE}\" rev-parse --short HEAD\n                WORKING_DIRECTORY \"${CMAKE_SOURCE_DIR}\"\n                OUTPUT_VARIABLE GIT_HASH\n                OUTPUT_STRIP_TRAILING_WHITESPACE)\n        endif()\n    endif()\n    if(NOT \"${GIT_DATE}\" STREQUAL \"\")\n        message(STATUS \"git date: ${GIT_DATE}\")\n        set(VERSION_PATCH \"${VERSION_PATCH}-${GIT_DATE}\")\n    endif()\n    if(NOT \"${GIT_HASH}\" STREQUAL \"\")\n        message(STATUS \"git hash: ${GIT_HASH}\")\n        set(VERSION_PATCH \"${VERSION_PATCH}-${GIT_HASH}\")\n    else()\n        message(WARNING \"git information unavailable, assuming its a build from v_${VERSION}\")\n    endif()\nendif()\n\nset(VERSION_PATCH \"${VERSION_PATCH}-beta\")\n\nset(VERSION \"${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}\")\n\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_STANDARD 11)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\nif(NOT CMAKE_BUILD_TYPE)\n   set(CMAKE_BUILD_TYPE \"Release\")\nendif()\n\nmessage(STATUS \"Build Type: ${CMAKE_BUILD_TYPE} Version: ${VERSION}\")\n\nif(NOT DEFINED CMAKE_INSTALL_PREFIX)\n   if (${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n      set(CMAKE_INSTALL_PREFIX \"/usr/local\")\n   elseif (${CMAKE_SYSTEM_NAME} MATCHES \"FreeBSD\")\n      set(CMAKE_INSTALL_PREFIX \"/usr/local\")\n   else()\n      set(CMAKE_INSTALL_PREFIX \"/usr\")\n   endif()\nendif()\n\n##############################\n\nif (NOT DEFINED TESTING)\n    set(TESTING \"NO\")\nendif()\n\nif (NOT DEFINED USEWX)\n    set(USEWX \"YES\")\nendif()\n\nif (NOT DEFINED UNRAR)\n    set(UNRAR \"bundled\")\nendif()\n\n# EACP disabled by default for now as FAR's GetCodePageInfo rejects all multibyte charsets due to BUGBUG.\n# Uncomment EACP-stuff here when that will be fixed. See https://github.com/elfmz/far2l/issues/1179\n#if (NOT DEFINED EACP)\n#   set(EACP \"YES\")\n#endif()\n\nif (NOT DEFINED LEGACY)\n    # TODO: default it to NO  somewhere in 2022, after all obsolete settings\n    # registry-upgrade-to-ini stuff will be safe to remove\n    set(LEGACY \"YES\")\nelseif(FARFTP)\n    set(LEGACY \"YES\")\n    message(STATUS \"Force-enable LEGACY due to enabled FARFTP\")\nendif()\n\n#if (NOT EACP)\n#   message(STATUS \"${ColorRed}Building without East Asian codepages support due to EACP=${EACP}${ColorNormal}\")\n#endif()\n\n# set(RM rm) actually not needed: use $(CMAKE_COMMAND) -E remove\n\nif(MUSL)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D__MUSL__\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -D__MUSL__\")\nendif()\n\nif(TAR_LIMITED_ARGS)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D__TAR_LIMITED_ARGS__\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -D__TAR_LIMITED_ARGS__\")\nendif()\n\nif(${CMAKE_VERSION} VERSION_LESS \"3.1.0\")\n    message(\"Please consider to switch to newer CMake\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\nendif()\n\nif(\"${ICU_MODE}\" STREQUAL \"runtime\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -DRUNTIME_ICU\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DRUNTIME_ICU\")\nendif()\n\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -fPIC -Wno-unused-function -D_FILE_OFFSET_BITS=64\") #  -fsanitize=address\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -std=c99 -fPIC -Wno-unused-function -D_FILE_OFFSET_BITS=64\") #  -fsanitize=address\nset(CMAKE_CXX_FLAGS_RELEASE \"-O2\")\nset(CMAKE_C_FLAGS_RELEASE \"-O2\")\n\nif(${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n    set(APP_DIR ${CMAKE_BINARY_DIR}/install)\n    set(INSTALL_DIR ${APP_DIR}/${APP_NAME}.app/Contents/MacOS)\n    set(EXECUTABLE_NAME ${APP_NAME})\n\nelse()\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ffunction-sections -fdata-sections\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ffunction-sections -fdata-sections\")\n    set(INSTALL_DIR ${CMAKE_BINARY_DIR}/install)\n    set(EXECUTABLE_NAME far2l)\n\n    if (NOT CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wl,--gc-sections\")\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wl,--gc-sections\")\n    endif()\nendif()\n\nif (CMAKE_SYSTEM_NAME MATCHES \"CYGWIN\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D_GNU_SOURCE -D_BSD_SOURCE -D_XOPEN_SOURCE=600\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -D_GNU_SOURCE -D_BSD_SOURCE -D_XOPEN_SOURCE=600\")\n    message(STATUS \"Running under cygwin, wow!\")\nendif()\n\nif (CMAKE_SYSTEM_NAME MATCHES \"Haiku\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D_GNU_SOURCE -D_DEFAULT_SOURCE -Wno-attributes\")\nendif()\n\nset(CMAKE_CXX_VISIBILITY_PRESET hidden)\nset(CMAKE_C_VISIBILITY_PRESET hidden)\n\nif (LEGACY)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -DWINPORT_REGISTRY\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DWINPORT_REGISTRY\")\n    message(STATUS \"Enabling registry support due to enabled LEGACY\")\nelse()\n    message(STATUS \"LEGACY is not enabled, your old registry settings will be forgotten, if any\")\nendif()\n\nif(CMAKE_VERSION VERSION_GREATER \"3.3\")\n    cmake_policy(SET CMP0063 NEW)\n    cmake_policy(SET CMP0057 NEW)\nendif()\n\ninclude_directories(utils/include)\n\nadd_subdirectory (WinPort)\nadd_subdirectory (utils)\nadd_subdirectory (far2l)\n\nif (NOT ${USEWX})\n    message(STATUS \"Building without GUI/wxWidgets backend due to USEWX=${USEWX}\")\nelse()\n    message(STATUS \"Building with GUI/wxWidgets backend\")\n    if (${CMAKE_SYSTEM_NAME} MATCHES \"FreeBSD\")\n        if (DEFINED wxWidgets_CONFIG_EXECUTABLE)\n            message(STATUS \"Using pre-defined wx config: ${wxWidgets_CONFIG_EXECUTABLE}\")\n\n        elseif(EXISTS \"/usr/local/bin/wxgtk3u-3.2-config\")\n            set(wxWidgets_CONFIG_EXECUTABLE \"/usr/local/bin/wxgtk3u-3.2-config\")\n            set(wxWidgets_wxrc_EXECUTABLE \"/usr/local/bin/wxrc-gtk3u-3.2\")\n            message(STATUS \"Using known location of wx-config 3.2\")\n\n        elseif(EXISTS \"/usr/local/bin/wxgtk3u-3.1-config\")\n            set(wxWidgets_CONFIG_EXECUTABLE \"/usr/local/bin/wxgtk3u-3.1-config\")\n            set(wxWidgets_wxrc_EXECUTABLE \"/usr/local/bin/wxrc-gtk3u-3.1\")\n            message(STATUS \"Using known location of wx-config 3.1\")\n\n        elseif (EXISTS \"/usr/local/bin/wxgtk3u-3.0-config\")\n            set(wxWidgets_CONFIG_EXECUTABLE \"/usr/local/bin/wxgtk3u-3.0-config\")\n            set(wxWidgets_wxrc_EXECUTABLE \"/usr/local/bin/wxrc-gtk3u-3.0\")\n            message(STATUS \"Using known location of wx-config 3.0\")\n\n        else()\n            message(STATUS \"No wxgtk3u-3.*-config in expected locations\")\n        endif()\n\n    elseif (${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n        if (EXISTS \"/opt/local/Library/Frameworks/wxWidgets.framework/Versions/wxWidgets/3.2/bin/wx-config\")\n            # MacPorts\n            set(wxWidgets_CONFIG_EXECUTABLE \"/opt/local/Library/Frameworks/wxWidgets.framework/Versions/wxWidgets/3.2/bin/wx-config\")\n            set(wxWidgets_wxrc_EXECUTABLE \"/opt/local/Library/Frameworks/wxWidgets.framework/Versions/wxWidgets/3.2/bin/wxrc\")\n            message(STATUS \"Using known location of wx-config 3.2\")\n\n        elseif (EXISTS \"/opt/local/Library/Frameworks/wxWidgets.framework/Versions/wxWidgets/3.1/bin/wx-config\")\n            # MacPorts\n            set(wxWidgets_CONFIG_EXECUTABLE \"/opt/local/Library/Frameworks/wxWidgets.framework/Versions/wxWidgets/3.1/bin/wx-config\")\n            set(wxWidgets_wxrc_EXECUTABLE \"/opt/local/Library/Frameworks/wxWidgets.framework/Versions/wxWidgets/3.1/bin/wxrc\")\n            message(STATUS \"Using known location of wx-config 3.1\")\n\n        else()\n            message(STATUS \"No wx-config in expected locations\")\n        endif()\n    endif()\n\n    add_subdirectory(WinPort/src/Backend/WX)\nendif()\n\nif (NOT DEFINED TTYX)\n    find_package(X11)\n    if(X11_FOUND)\n        message(STATUS \"Building with TTY X11 extensions due to X11 found\")\n        add_subdirectory(WinPort/src/Backend/TTY/TTYX)\n    else()\n        message(STATUS \"Building without TTY X11 extensions due to X11 not found\")\n    endif()\nelseif (TTYX)\n    message(STATUS \"Building with TTY X11 extensions due to TTYX=${TTYX}\")\n    add_subdirectory(WinPort/src/Backend/TTY/TTYX)\nelse()\n    message(STATUS \"Building without TTY X11 extensions due to TTYX=${TTYX}\")\nendif()\n\n\n##############################\n# plugins directives\n\nif (NOT DEFINED ALIGN OR ALIGN)\n    message(STATUS \"ALIGN plugin enabled\")\n    add_subdirectory (align)\nelse()\n    message(STATUS \"${ColorRed}ALIGN plugin disabled due to ALIGN=${ALIGN}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/align/plug/align.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED AUTOWRAP OR AUTOWRAP)\n    message(STATUS \"AUTOWRAP plugin enabled\")\n    add_subdirectory (autowrap)\nelse()\n    message(STATUS \"${ColorRed}AUTOWRAP plugin disabled due to AUTOWRAP=${AUTOWRAP}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/autowrap/plug/autowrap.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED CALC OR CALC)\n    message(STATUS \"CALC plugin enabled\")\n    add_subdirectory (calc)\nelse()\n    message(STATUS \"${ColorRed}CALC plugin disabled due to CALC=${CALC}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/calc/plug/calc.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED COLORER OR COLORER)\n    message(STATUS \"COLORER plugin enabled\")\n    add_subdirectory (colorer)\nelse()\n    message(STATUS \"${ColorRed}COLORER plugin disabled due to COLORER=${COLORER}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/colorer/plug/colorer.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED COMPARE OR COMPARE)\n    message(STATUS \"COMPARE plugin enabled\")\n    add_subdirectory (compare)\nelse()\n    message(STATUS \"${ColorRed}COMPARE plugin disabled due to COMPARE=${COMPARE}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/compare/plug/compare.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED DRAWLINE OR DRAWLINE)\n    message(STATUS \"DRAWLINE plugin enabled\")\n    add_subdirectory (drawline)\nelse()\n    message(STATUS \"${ColorRed}DRAWLINE plugin disabled due to DRAWLINE=${DRAWLINE}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/drawline/plug/drawline.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED EDITCASE OR EDITCASE)\n    message(STATUS \"EDITCASE plugin enabled\")\n    add_subdirectory (editcase)\nelse()\n    message(STATUS \"${ColorRed}EDITCASE plugin disabled due to EDITCASE=${EDITCASE}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/editcase/plug/editcase.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED EDITORCOMP OR EDITORCOMP)\n    message(STATUS \"EDITORCOMP plugin enabled\")\n    add_subdirectory (editorcomp)\nelse()\n    message(STATUS \"${ColorRed}EDITORCOMP plugin disabled due to EDITORCOMP=${EDITORCOMP}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/editorcomp/plug/editorcomp.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\nif (DEFINED FARFTP AND FARFTP)\n    message(STATUS \"FARFTP plugin enabled (obsolete)\")\n    add_subdirectory (FARStdlib)\n    add_subdirectory (farftp)\nelse()\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/farftp/plug/farftp.far-plug-mb)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED FILECASE OR FILECASE)\n    message(STATUS \"FILECASE plugin enabled\")\n    add_subdirectory (filecase)\nelse()\n    message(STATUS \"${ColorRed}FILECASE plugin disabled due to FILECASE=${FILECASE}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/filecase/plug/filecase.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED INCSRCH OR INCSRCH)\n    message(STATUS \"INCSRCH plugin enabled\")\n    add_subdirectory (incsrch)\nelse()\n    message(STATUS \"${ColorRed}Building without <INCSRCH> plugin due to INCSRCH=${INCSRCH}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/incsrch/plug/incsrch.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED INSIDE OR INSIDE)\n    message(STATUS \"INSIDE plugin enabled\")\n    add_subdirectory (inside)\nelse()\n    message(STATUS \"${ColorRed}INSIDE plugin disabled due to INSIDE=${INSIDE}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/inside/plug/inside.far-plug-mb)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED MULTIARC OR MULTIARC)\n    message(STATUS \"MULTIARC plugin enabled\")\n\n    find_package(PkgConfig REQUIRED)\n    pkg_search_module(LibArchive QUIET libarchive)\n    if(NOT LibArchive_FOUND)\n        # workaround for MacOS brew's/macports' libarchive\n        if(IS_DIRECTORY \"/usr/local/opt/libarchive/include\")\n            set(LibArchive_INCLUDE_DIR \"/usr/local/opt/libarchive/include\")\n            set(LibArchive_LIBRARY \"/usr/local/opt/libarchive/lib/libarchive.dylib\")\n        elseif(EXISTS \"/opt/local/lib/libarchive.dylib\")\n            set(LibArchive_LIBRARY \"/opt/local/lib/libarchive.dylib\")\n        endif()\n        find_package(LibArchive)\n        if(NOT LibArchive_FOUND)\n            message(WARNING \"${ColorRed}libarchive not found, multiarc will have weaker archives support. Its recommended to install libarchive-dev and reconfigure far2l.${ColorNormal}\")\n        endif()\n    endif()\n\n    add_subdirectory (multiarc)\nelse()\n    message(STATUS \"${ColorRed}MULTIARC plugin disabled due to MULTIARC=${MULTIARC}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/multiarc/plug/multiarc.far-plug-mb)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED NETROCKS OR NETROCKS)\n    message(STATUS \"NETROCKS plugin enabled\")\n    find_package(OpenSSL)\n    if(OPENSSL_FOUND)\n        message(STATUS \"OpenSSL found -> enjoy FTPS support in NetRocks\")\n    else()\n        message(WARNING \"${ColorRed}OpenSSL not found, NetRocks will not have FTPS protocol support. Install libssl-dev if you want FTPS protocol available in NetRocks.${ColorNormal}\")\n    endif(OPENSSL_FOUND)\n\n    find_package(LibSSH 0.5.0)\n    if(LIBSSH_FOUND)\n        message(STATUS \"libssh found -> enjoy SFTP support in NetRocks\")\n    else()\n        message(WARNING \"${ColorRed}libssh not found, NetRocks will not have SFTP protocol support. Install libssh-dev if you want SFTP protocol available in NetRocks.${ColorNormal}\")\n    endif(LIBSSH_FOUND)\n\n    find_package(Libsmbclient)\n    if(LIBSMBCLIENT_FOUND)\n        message(STATUS \"libsmbclient found -> enjoy SMB support in NetRocks\")\n    else()\n        message(WARNING \"${ColorRed}libsmbclient not found, NetRocks will not have SMB protocol support. Install libsmbclient-dev if you want SMB protocol available in NetRocks.${ColorNormal}\")\n    endif(LIBSMBCLIENT_FOUND)\n\n    find_package(LibNfs)\n    if(LIBNFS_FOUND)\n        message(STATUS \"libnfs found -> enjoy NFS support in NetRocks\")\n    else()\n        message(WARNING \"${ColorRed}libnfs not found, NetRocks will not have NFS protocol support. Install libnfs-dev if you want NFS protocol available in NetRocks.${ColorNormal}\")\n    endif(LIBNFS_FOUND)\n\n    find_package(LibNEON)\n    if(LIBNEON_FOUND)\n        message(STATUS \"libneon found -> enjoy WebDav support in NetRocks\")\n    else()\n        message(WARNING \"${ColorRed}libneon not found, NetRocks will not have WebDav protocol support. Install libneon*-dev if you want WebDav protocol available in NetRocks.${ColorNormal}\")\n    endif(LIBNEON_FOUND)\n\n    add_subdirectory (NetRocks)\nelse()\n    message(STATUS \"${ColorRed}NETROCKS plugin disabled due to NETROCKS=${NETROCKS}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND ${CMAKE_COMMAND} -E rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/NetRocks/plug/NetRocks.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\nif (DEFINED PYTHON AND PYTHON)\n    message(STATUS \"PYTHON plugin with interpreter from virtualenv enabled\")\n    add_subdirectory (python)\n    # Copy this explicitly cuz generic copier command excludes 'far2l'\n    install(DIRECTORY \"${INSTALL_DIR}/Plugins/python/plug/far2l\"\n        DESTINATION \"lib/far2l/Plugins/python/plug/\" USE_SOURCE_PERMISSIONS\n        COMPONENT base FILES_MATCHING\n        PATTERN \"*\")\n    install(DIRECTORY \"${INSTALL_DIR}/Plugins/python/plug/plugins\"\n        DESTINATION \"lib/far2l/Plugins/python/plug/\" USE_SOURCE_PERMISSIONS\n        COMPONENT base FILES_MATCHING\n        PATTERN \"*\")\nelse()\n    message(STATUS \"${ColorRed}PYTHON plugin disabled, use -DPYTHON=yes if you need it${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/python/plug/python.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED SIMPLEINDENT OR SIMPLEINDENT)\n    message(STATUS \"SIMPLEINDENT plugin enabled\")\n    add_subdirectory (SimpleIndent)\nelse()\n    message(STATUS \"${ColorRed}SIMPLEINDENT plugin disabled due to SIMPLEINDENT=${SIMPLEINDENT}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/SimpleIndent/plug/SimpleIndent.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\nif (NOT DEFINED TMPPANEL OR TMPPANEL)\n    message(STATUS \"TMPPANEL plugin enabled\")\n    add_subdirectory (tmppanel)\nelse()\n    message(STATUS \"${ColorRed}TMPPANEL plugin disabled due to TMPPANEL=${TMPPANEL}${ColorNormal}\")\n    install(CODE \"\n        execute_process(COMMAND rm -f ${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/tmppanel/plug/tmppanel.far-plug-wide)\n        \" COMPONENT system)\nendif()\n\n##############################\n# common install directives\n\nadd_subdirectory (packaging)\n\nadd_subdirectory(man)\nadd_subdirectory(bash-completion)\n\nif (${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n    set(FIXUP_SCRIPT packaging/osx/FixupBundle.cmake)\n    configure_file(${FIXUP_SCRIPT}.in ${PROJECT_BINARY_DIR}/${FIXUP_SCRIPT} @ONLY)\n    install(DIRECTORY ${APP_DIR}/${APP_NAME}.app DESTINATION . USE_SOURCE_PERMISSIONS COMPONENT app EXCLUDE_FROM_ALL)\n    install(SCRIPT ${PROJECT_BINARY_DIR}/${FIXUP_SCRIPT} COMPONENT app EXCLUDE_FROM_ALL)\nendif()\n\ninstall(PROGRAMS \"${INSTALL_DIR}/${EXECUTABLE_NAME}\" DESTINATION \"bin\" RENAME far2l COMPONENT base)\n\ninstall(DIRECTORY \"${INSTALL_DIR}/\" DESTINATION \"lib/far2l\" USE_SOURCE_PERMISSIONS COMPONENT base FILES_MATCHING\n    PATTERN \"colorer/base\" EXCLUDE\n    PATTERN \"far2l_gui.so\"\n    PATTERN \"far2l_ttyx.broker\"\n    PATTERN \"plug/*.far-plug-*\"\n    PATTERN \"plug/*.broker\"\n)\n\ninstall(DIRECTORY \"${INSTALL_DIR}/\" DESTINATION \"share/far2l\" USE_SOURCE_PERMISSIONS COMPONENT base FILES_MATCHING\n    PATTERN \"${EXECUTABLE_NAME}\" EXCLUDE\n    PATTERN \"far2ledit\" EXCLUDE\n    PATTERN \"far2l_*\" EXCLUDE\n    PATTERN \"*.far-plug-*\" EXCLUDE\n    PATTERN \"*.broker\" EXCLUDE\n    PATTERN \"python/plug/python\" EXCLUDE\n    PATTERN \"*\"\n)\n\n# setup some symlinks and remove deprecated stuff from previous installation\nexecute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink ../../bin/far2l ${PROJECT_BINARY_DIR}/far2l/far2l_askpass)\nexecute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink ../../bin/far2l ${PROJECT_BINARY_DIR}/far2l/far2l_sudoapp)\nexecute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink far2l ${PROJECT_BINARY_DIR}/far2l/far2ledit)\ninstall(FILES \"${PROJECT_BINARY_DIR}/far2l/far2l_askpass\" DESTINATION \"lib/far2l\" COMPONENT system)\ninstall(FILES \"${PROJECT_BINARY_DIR}/far2l/far2l_sudoapp\" DESTINATION \"lib/far2l\" COMPONENT system)\ninstall(FILES \"${PROJECT_BINARY_DIR}/far2l/far2ledit\" DESTINATION \"bin\" COMPONENT base)\ninstall(CODE \"\n    execute_process(COMMAND ${CMAKE_COMMAND} -E remove -f \\\"\\${CMAKE_INSTALL_PREFIX}/lib/far2l/Plugins/objinfo/plug/objinfo.far-plug-mb\\\")\n    \" COMPONENT system)\n"
        },
        {
          "name": "CODESTYLE.md",
          "type": "blob",
          "size": 5.25,
          "content": "## Legacy code\nIn case you're doing minor changes in existing legacy code - use existing code style as you see in that code.   \nOtherwise follow guidelines below.\n\n## Indentation and alignment:\nCode block indentation and alignment of hyphenated continuations - tabs.   \nAlignment of trailing comments - also tabs.   \nAll other alignment in the middle of text line (if need) - spaces.   \n\n## Spaces and parenthesis:\n``` Examples:\n// No space between parenthesis and function name, no space in empty arguments list:\nvoid FunctionWithoutArgs();\n\n// Spaces between arguments, but no spaces between parenthesis and contained argument:\nvoid ConstFunctionWithArgs(int i, std::string s) const;\n\n// Spaces between expression elements and after if, no spaces between parenthesis and contained stuff:\nif (condition1 && (condition2 || condition3)) {\n}\n\n// Space between try and opening brace, spaces around catch:\ntry {\n} catch (std::exception &) {\n}\nint arr[] = {1, 2, 3};      // - space both sides of equal sign here\nint i{};                    // - no space between variable and list initializer's brace\ni = arr[1];                 // - simple assignment - space surrounds both sides of equal sign\ni+= arr[2];                 // - incremental assignment - space only on the right\nvoid *ptr_i = (void *)&i;   // - pointer: space between target type and asterisk\nint &ref_i = i;             // - reference: space between target type and amperans\n\n// Complex ternary expressions should have parenthesis to segregate things:\nint ternary_result1 = simple_condition ? 1 : 2;\nint ternary_result2 = (complex && condition) ? 1 : 2;\nint ternary_result3 = simple_condition ? ((complex && condition) ? 1 : 2) : ((complex && condition) ? 3 : 4);\n```\n\n## Line length limit:\n110 characters, buts its a soft limit, i.e. prefer better readability more than fiting limit.   \nTrailing comments are not affected by this limit at all.   \n\n## Code braces:\nUse direct (same line) braces for class-es/struct-s/union-s, functions, namespaces   \nUse egyptian braces for if-s, loop-s, try..catch-es, lambda-s   \nIn case of if..elseif.. with long complex code within block - use empty line to accent end of code block.   \nIn case code-block-start operator has short own condition and has as child single another code-block-starter, you may put that secondary operator at same line as first one and use single indentation for its code block.   \nIn case of very short inlined class methods - you may write method definition's code block as single line.   \nIn all other cases put any nested operator and its code block starting from separate line and with its own indentation level.   \n``` Examples:\nnamespace Foo\n{\n\tstruct Bar\n\t{\n\t\tint Short() const { return _result; }\n\n\t\tvoid Baz() const\n\t\t{\n\t\t\tif (short_cond) try {\n\t\t\t\tSomeCode();\n\t\t\t} catch (...) {\n\t\t\t}\n\n\t\t\tif (long && complicated && condition) {\n\t\t\t\ttry {\n\t\t\t\t\tSomeCode();\n\t\t\t\t} catch (...) {\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvoid Qux()\n\t\t{\n\t\t\tif (cond1) {\n\t\t\t\tSomeShortCode();\n\t\t\t} else if (cond2) {\n\t\t\t\tSomeShortCode();\n\t\t\t} else {\n\t\t\t\tSomeShortCode();\n\t\t\t}\n\n\t\t\tif (cond1) {\n\t\t\t\tSome();\n\t\t\t\tLong();\n\t\t\t\tCode();\n\n\t\t\t} else if (cond2) {\n\t\t\t\tSome();\n\t\t\t\tLong();\n\t\t\t\tCode();\n\n\t\t\t} else {\n\t\t\t\tSome();\n\t\t\t\tLong();\n\t\t\t\tCode();\n\t\t\t}\n\t\t}\n\t};\n};\n```\n\n## Hyphenated continuations:\nIndent second line of condition using two tabs to separate it from code block.\nPut hyphenated operators on new line's beginning.\n``` Example:\nif (i == 10\n\t\t|| i == 20\n\t\t|| i == 30) {\n\tSomeCode();\n}\n```\n\n## Naming:\nUse CamelCase for name of enums, namespaces, classes, structures, functions and methods   \nUse snake_case for all variables, however:   \n&nbsp;&nbsp; Private and protected class's fields - prefix by '\\_'   \n&nbsp;&nbsp; Static variables - prefix by 's\\_'   \n&nbsp;&nbsp; Global nonstatic variables - prefix by 'g\\_'   \nUse UPPER_CASE_WITH_UNDERSCORES for macroses, values of enum-s.   \nAdditionally values of enums must be prefixes with an abbreviation of corresponding enum's name.   \nTemplates:   \n&nbsp;&nbsp; For template arguments that represent type name - use CamelCaseT (camel case with T suffix).   \n&nbsp;&nbsp; For template arguments that typed constant value - use UPPER_CASE_WITH_UNDERSCORES_T.   \n&nbsp;&nbsp; If template function represents 'internal' implementation for some nearby non-templated functions - you may add T suffix for its name to clearly denote this.   \n``` Examples:\nenum SomeEnum\n{\n\tSE_ZERO = 0,\n\tSE_ONE  = 1,\n\tSE_TWO  = 2\n};\n\nint g_counter = 0;\n\nclass FooBar\n{\n\tint _private_field;\n\npublic:\n\tvoid CallMe(SomeEnum argument)\n\t{\n\t\tstatic int s_static_var;\n\t\tint local_var = argument + _private_field;\n\t\ts_static_var = std::max(local_var, s_static_var);\n\t\t++g_counter;\n\t}\n};\n\ntemplate < class ClassT, int VALUE_T >\n\tClassT TemplateFunction(int arg)\n{\n\treturn ClassT(arg + VALUE_T);\n}\n\n```\n\n## class/struct:\nUse struct if your class exposes some public data fields or/and only public methods otherwise prefer using class.\n\n## class/struct layouts:\n```\nclass FooBar\n{\n\tint _private_field;\n\tvoid PrivateMethod();\n\nprotected:\n\tint _protected_field;\n\tvoid ProtectedMethod();\n\npublic:\n\tvoid PublicMethod();\n};\n\nstruct FooBar\n{\n\tint public_field;\n\tvoid PublicMethod();\n};\n```\n\n\n## File naming:\nUse CamelCase.cpp unless you're adding file into a directory that already have lots of files with different naming convention. In such case follow existing conventions.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.2939453125,
          "content": "FROM ubuntu:22.04\n\nWORKDIR /workdir\n\nCOPY dependencies.txt .\nRUN apt-get update && apt-get -y install $(cat dependencies.txt)\n\nCOPY . .\n\nRUN mkdir -p _build\nRUN cd _build && \\\n  cmake -DUSEWX=yes -DCMAKE_BUILD_TYPE=Release .. && \\\n  cmake --build . -j$(nproc --all)\n\nCMD /workdir/_build/install/far2l\n"
        },
        {
          "name": "FARStdlib",
          "type": "tree",
          "content": null
        },
        {
          "name": "HACKING.md",
          "type": "blob",
          "size": 9.4638671875,
          "content": "## Coding style\nSee: [CODESTYLE.md](CODESTYLE.md)\n\n## Lyric\nI implemented/borrowed from WINE some commonly used WinAPI functions. They are all declared in WinPort/WinPort.h and corresponding defines can be found in WinPort/WinCompat.h (both are included by WinPort/windows.h). Note that this stuff may not be 1-to-1 to corresponding Win32 functionality also doesn't provide full-UNIX functionality, but it simplifies porting and can be considered as temporary scaffold.\n\nHowever, only the main executable is linked statically to WinPort, although it also _exports_ WinPort functionality, so plugins use it without the neccessity to bring their own copies of this code. This is the reason that each plugin's binary should not statically link to WinPort.\n\nWhile FAR internally is UTF16 (because WinPort contains UTF16-related stuff), native Linux wchar_t size is 4 bytes (rather than 2 bytes) so potentially Linux FAR may be fully UTF32-capable console interaction in the future, but while it uses Win32-style UTF16 functions it does not. However, programmers need to be aware that wchar_t is not 2 bytes long anymore.\n\nInspect all printf format strings: unlike Windows, in Linux both wide and multibyte printf-like functions have the same multibyte and wide specifiers. This means that %s is always multibyte while %ls is always wide. So, any %s used in wide-printf-s or %ws used in any printf should be replaced with %ls.\n\nUpdate from 27aug: now it's possible by defining WINPORT_DIRECT to avoid renaming used Windows API and also to avoid changing format strings as swprintf will be intercepted by a compatibility wrapper.\nUpdate from 03/11/22: far2l's console emulator capable to correctly render full-width and combining characters as well as 24 bit colors. This caused following deviation of console-simulation functions behavior comparing to original Win32 API counterparts:\n * CHAR_INFO's Char::UnicodeChar field extended to 64 bit length to be able to associate sequence of multiple WCHARs with single cell.\n * Writing to console full-width character causes two cells to be used: first will get given character code in UnicodeChar field but next one will have UnicodeChar set to zero.\n * Writing combined characters - normal character followed by set of diactrical marks - will make UnicodeChar field to contain so-called 'composite' character code that represents sequence of character codes registered with WINPORT(CompositeCharRegister). Actual sequence of WCHARs can be obtained by WINPORT(CompositeCharLookup). There is macro CI_USING_COMPOSITE_CHAR that allows to detect if given CHAR_INFO contains composite character code or normal WCHAR.\n * Both above transformations happen automatically _only_ if using WriteConsole API. If one uses WriteConsoleOutput - then its up to caller to perform that transformations. Failing to do so will cause incorrect rendering of full-width or diactrical characters.\n * CHAR_INFO's and CONSOLE_SCREEN_BUFFER_INFO's Attributes fields extended to 64 bit to be able to hold 24 bit RGB colors in higher bytes. Use macroses GET_RGB_FORE/GET_RGB_BACK/SET_RGB_FORE/SET_RGB_BACK/SET_RGB_BOTH to access that colors. Note that such colors will be used only if FOREGROUND_TRUECOLOR/BACKGROUND_TRUECOLOR attribute is set. Old attributes define colors from usual 16-elements palette used to render if ..._TRUECOLOR is not set or if backend's target doesn't support more than 16 colors.\n\n## Plugin API\n\nPlugins API based on FAR Manager v2 plus following changes:\n\n### Added following entries to FarStandardFunctions:\n\n* `int Execute(const wchar_t *CmdStr, unsigned int ExecFlags);`\n...where ExecFlags - combination of values of EXECUTEFLAGS.\nExecutes given command line, if EF_HIDEOUT and EF_NOWAIT are not specified then command will be executed on far2l virtual terminal.\n\n* `int ExecuteLibrary(const wchar_t *Library, const wchar_t *Symbol, const wchar_t *CmdStr, unsigned int ExecFlags)`\nExecutes given shared library symbol in separate process (process creation behaviour is the same as for Execute).\nsymbol function must be defined as: `int 'Symbol'(int argc, char *argv[])`\n\n* `void DisplayNotification(const wchar_t *action, const wchar_t *object);`\nShows (depending on settings - always or if far2l in background) system shell-wide notification with given title and text.\n\n* `int DispatchInterThreadCalls();`\nfar2l supports calling APIs from different threads by marshalling API calls from non-main threads into main one and dispatching them on main thread at certain known-safe points inside of dialog processing loops. DispatchInterThreadCalls() allows plugin to explicitly dispatch such calls and plugin must use it periodically in case it blocks main thread with some non-UI activity that may wait for other threads.\n\n* `void BackgroundTask(const wchar_t *Info, BOOL Started);`\nIf plugin implements tasks running in background it may invoke this function to indicate about pending task in left-top corner.\n * Info is a short description of task or just its owner and must be same string when invoked with Started TRUE or FALSE.\n\n* `size_t StrCellsCount(const wchar_t *Str, size_t CharsCount);`\nReturns count of console cells which will be used to display given string of CharsCount characters.\n\n* `size_t StrSizeOfCells(const wchar_t *Str, size_t CharsCount, size_t *CellsCount, BOOL RoundUp);`\nReturns count of characters which will be used to fill up to CellsCount cells from given string of CharsCount characters.\nRoundUp argument tells what to do with full-width characters that crossed by CellsCount.\nOn return CellsCount contains cells count that will be filled by returned characters count, that:\n * Can be smaller than initial value if string has too few characters to fill all CellsCount cells or if RoundUp was set to FALSE and last character would then overflow wanted amount.\n * Can be larger by one than initial value if RoundUp was set to TRUE and last full-width character crossed initial value specified in *CellsCount.\n\n* `TruncStr and TruncPathStr`\nThis two functions not added but changed to use console cells count as string limiting factor.\n\n* `BOOL VTLogExport(HANDLE con_hnd, DWORD flags, const char *file);`\nExports to file virtual terminal history of given VT console. Returns TRUE on success. Arguments:\n * con_hnd - NULL means active console, otherise - must be one of handles obtained from VTEnumBackground\n * flags - zero or combination of VT_LOGEXPORT_* constants: VT_LOGEXPORT_COLORED and VT_LOGEXPORT_WITH_SCREENLINES\n * file - is a file path to be exported, if it points to empty string (i.e. *file = 0) then it MUST be buffer of size at least MAX_PATH (4096) characters and VT history log will be exported to file at autogenerated temporary path that will be copied into that buffer\n\n* `SIZE_T VTEnumBackground(HANDLE *con_hnds, SIZE_T count);`\nFills given array with handles to background terminal session consoles.  \nFills up to specified count handles, but returns background terminal session count, so if returned value > count argument - then need to extend array buffer and retry\n\n\n\n### Added following commands into FILE_CONTROL_COMMANDS:\n* `FCTL_GETPANELPLUGINHANDLE`\nCan be used to interact with plugin that renders other panel.\n`hPlugin` can be set to `PANEL_ACTIVE` or `PANEL_PASSIVE`.\n`Param1` ignored.\n`Param2` points to value of type `HANDLE`, call sets that value to handle of plugin that renders specified panel or `INVALID_HANDLE_VALUE`.\n\n### Added following plugin-exported functions:\n* `int MayExitFARW();`\nfar2l asks plugin if it can exit now. If plugin has some background tasks pending it may block exiting of far2l, however it highly recommended to give user choice using UI prompt.\n\n* `int GetLinkTargetW(HANDLE hPlugin, struct PluginPanelItem *PanelItem, wchar_t *Target, size_t TargetSize, int OpMode);`\nfar2l uses this to resolve symlink destination when user selects plugin's item that has FILE_ATTRIBUTE_REPARSE_POINT. Target is displayed in status field as for local symlinks.\n\n### Added following dialog messages:\n* `DM_SETREADONLY` - changes readonly-ness of selected dialog edit control item\n* `DM_GETDEFAULTCOLOR`\n* `DM_GETCOLOR = DM_SETTRUECOLOR` - sets 24-bit RGB colors to selected dialog item (see DN_CTLCOLORDLGITEM).\n* `DM_SETCOLOR = DM_GETTRUECOLOR` - retrieves 24-bit RGB colors of selected dialog item.\n* `DM_SETTEXTPTRSILENT`\n* `ECTL_ADDTRUECOLOR` - applies coloring to editor like ECTL_ADDCOLOR does but allows to specify 24 RGB color using EditorTrueColor structure.\n* `ECTL_GETTRUECOLOR` - retrieves coloring of editor like ECTL_GETCOLOR does but gets 24 RGB color using EditorTrueColor structure.\n\nNote that all true-color capable messages extend but don't replace 'base' 16 palette colors. This is done intentionally as far2l may run in terminal that doesn't support true color palette, and in such case 24bit colors will be ignored and base palette attributes will be used instead.\n\n### Added new flags:\n* Flags to **manage markers** in **panel** from plugins API\n(a la global parameters `Opt.ShowFilenameMarks` and `Opt.FilenameMarksAlign`):\n    - `OPIF_HL_MARKERS_NOSHOW` and `OPIF_HL_MARKERS_NOALIGN` (in `enum OPENPLUGININFO_FLAGS`);\n    - `PFLAGS_HL_MARKERS_NOSHOW` and `PFLAGS_HL_MARKERS_NOALIGN` (in `enum PANELINFOFLAGS`).\n* Flag which prevents the removal of ampersand characters from menu items being iterated in `VMenu::FindItem()`\n(for the proper work of `History::GetAllSimilar()` function and in other similar situations):\n    - `LIFIND_KEEPAMPERSAND` (in `enum FARLISTFINDFLAGS`);\n* Flags in `enum PROCESSNAME_FLAGS` (added in #2452):\n    - `PN_GENERATENAME`, `PN_CHECKMASK`, `PN_SHOWERRORMESSAGE`, `PN_RESERVED1`, `PN_CASESENSITIVE`, `PN_NONE`\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 18.431640625,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n\n-----------------------------------------------------------------------------\n\nIn addition, as a special exception, the copyright holders give\npermission to link the code of portions of this program with the\nOpenSSL library under certain conditions as described in each\nindividual source file, and distribute linked combinations\nincluding the two.\nYou must obey the GNU General Public License in all respects\nfor all of the code used other than OpenSSL.  If you modify\nfile(s) with this exception, you may extend this exception to your\nversion of the file(s), but you are not obligated to do so.  If you\ndo not wish to do so, delete this exception statement from your\nversion.  If you delete this exception statement from all source\nfiles in the program, then also delete it here.\n"
        },
        {
          "name": "NetRocks",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.087890625,
          "content": "[![Cirrus Build Status](https://api.cirrus-ci.com/github/elfmz/far2l.svg)](https://cirrus-ci.com/github/elfmz/far2l) [![Coverage Status](https://codecov.io/gh/elfmz/far2l/coverage.svg?branch=master)](https://codecov.io/gh/elfmz/far2l?branch=master) [![Coverity Scan](https://scan.coverity.com/projects/27038/badge.svg)](https://scan.coverity.com/projects/elfmz-far2l) [![Language Grade: C/C++](https://img.shields.io/lgtm/grade/cpp/g/elfmz/far2l.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/elfmz/far2l/context:cpp) [![Packages](https://repology.org/badge/tiny-repos/far2l.svg)](https://repology.org/project/far2l)\n\n# far2l [![tag](https://img.shields.io/github/tag/elfmz/far2l.svg)](https://github.com/elfmz/far2l/tags)\nLinux fork of FAR Manager v2 (http://farmanager.com/)   \nWorks also on OSX/MacOS and BSD (but latter not tested on regular manner)   \nBETA VERSION.   \n**Use on your own risk!**\n\nPlug-ins that are currently working: NetRocks (SFTP/SCP/FTP/FTPS/SMB/NFS/WebDAV), colorer, multiarc, tmppanel, align, autowrap, drawline, editcase, SimpleIndent, Calculator, Python (optional scripting support)\n\nFreeBSD/MacOS (Cirrus CI): [![Cirrus](https://api.cirrus-ci.com/github/elfmz/far2l.svg)](https://cirrus-ci.com/github/elfmz/far2l)\n\n\n#### License: GNU/GPLv2\n\n### Used code from projects\n\n* FAR for Windows and some of its plugins\n* WINE\n* ANSICON\n* Portable UnRAR\n* 7z ANSI-C Decoder\n* utf-cpp by ww898\n\n<sub><a name=\"keyshells\"></a>_Note_: Far2l uses keyboard shortcurts in the tradition of the Far Manager for Windows,\nbut some of them (**Alt**-**F1**, **Alt**-**F2**, **Alt**-**F7**, **Ctrl**-arrows, etc.)\nusually exclusively used in desktop environment GNOME, KDE, Xfce, macOS etc. and in terminal emulators.\nTo work with these keys in far2l you need to _release keyboard shortcuts globally_\nin the environment settings (see [#2326](https://github.com/elfmz/far2l/issues/2326))\nor use far2l lifehacks:\n_Sticky controls via **Ctrl**-**Space** or **Alt**-**Space**_ or _Exclusively handle hotkeys option in the Input settings_\n(see details in buil-in far2l help).</sub>\n\n### UI Backends\n  FAR2L has base UI Backends (see details in build-in help section **UI backends**):\n\n- **GUI** (**WX**): uses wxWidgets, works in graphics mode, **ideal UX**\n(might add dependencies to your desktop environment, e.g. wxWidgets toolkit and related packages);\n\n- **TTY|Xi**: works in terminal mode, requires a dependency on pair X11 libraries\n(to access clipboard and to get state of all keyboard modifiers), **almost perfect UX**;\n\n- **TTY|X**: works in terminal mode, uses X11 to access clipboard, all keyboard works via terminal;\n\n- **TTY**: plain terminal mode, no X11 dependencies, **UX with some restrictions** (works fully when running in the\n[terminal emulators](#terminals), which provide clipboard access and has their advanced keyboard-protocols).\n\n\n| Mode<br>(UI Backends) | TTY<br>(plain far2l) | TTY\\|X | TTY\\|Xi | GUI |\n| ---: | --- | --- | --- | --- |\n| **Works:** | in **console**<br>and in any<br>**terminal** | in **terminal<br>window**<br><sub>under graphic<br>X11 session</sub> | in **terminal<br>window**<br><sub>under graphic<br>X11 session</sub> | in **Desktop<br>environment**<br><sub>(X11<br>or Wayland<br>or macOS)<br>via wxWidgets</sub> |\n| **Binaries:** | far2l | far2l<br>far2l_ttyx.broker | far2l<br>far2l_ttyx.broker | far2l<br>far2l_gui.so |\n| **[Dependencies](#required-dependencies):** | minimal | + libx11 | + libx11, libxi | + wxWidgets, GTK |\n| **Keyboard:** | <sub>_Typical terminals_:<br>**only essential<br>key combinations**<br><br>_KiTTY_ (putty fork),<br>_kitty_ (\\*nix one),<br>_iTerm2_,<br>_Windows Terminal_,<br>far2l’s VT: **full support**</sub> | <sub>_Typical terminals_:<br>**only essential<br>key combinations**<br><br>_KiTTY_ (putty fork),<br>_kitty_ (\\*nix one),<br>_iTerm2_,<br>_Windows Terminal_,<br>far2l’s VT: **full support**</sub> | <sub>_Typical terminals_:<br>**most of key<br>combinations under x11**;<br>**only essential key<br>combinations<br>under Wayland**<br><br>_KiTTY_ (putty fork),<br>_kitty_ (\\*nix one),<br>_iTerm2_,<br>_Windows Terminal_,<br>far2l’s VT: **full support**</sub> | **All key<br>combinations** |\n| **Clipboard<br>access:** | <sub>_Typical terminals_:<br>via command line<br>tools like xclip<br><br>_kitty_ (\\*nix one),<br>_iTerm2_:<br>via **OSC52**<br><br>_Windows Terminal_:<br>via **OSC52**<br>or via **command line<br>tools under WSL**<br><br>_KiTTY_ (putty fork),<br>far2l’s VT:<br>via **far2l extensions**</sub> | <sub>_Typical terminals_,<br>_kitty_ (\\*nix one):<br>via **x11 interaction**<br><br>_iTerm2_:<br>via **OSC52**<br><br>_Windows Terminal_:<br>via **OSC52**<br>or via **command line<br>tools under WSL**<br><br>_KiTTY_ (putty fork),<br>far2l’s VT:<br>via **far2l extensions**</sub> | <sub>_Typical terminals_,<br>_kitty_ (\\*nix one):<br>via **x11 interaction**<br><br>_iTerm2_:<br>via **OSC52**<br><br>_Windows Terminal_:<br>via **OSC52**<br>or via **command line<br>tools under WSL**<br><br>_KiTTY_ (putty fork),<br>far2l’s VT:<br>via **far2l extensions**</sub> | via<br>**wxWidgets API**<br><br><sub>via command line<br>tools under WSL</sub> |\n| **Typical<br>use case:** | **Servers**,<br>embedded<br>(\\*wrt, etc) | <sub>Run far2l in<br>favorite terminal<br>but with<br>**better UX**</sub> | <sub>Run far2l in<br>favorite terminal<br>but with<br>**best UX**</sub> | **Desktop** |\n| [Debian](#debian) / [Ubuntu](#debian)<br><sup>official repositories:</sup> | _none_<br><sup>(use `far2l` due to<br>[auto downgrade](#downgrade))</sup> | `far2l` | `far2l` | `far2l-wx`<br><sup>(since _2.6.4_ /<br>Ubuntu 25.04+)</sup> |\n| Community [PPA](#community_bins): | `far2l` | `far2l-ttyx` | `far2l-ttyx` | `far2l-gui` |\n\n<sub><a name=\"downgrade\"></a>_Note_: When running far2l automatically downgrade\nif its components are not installed (or system libs are not available):\n**GUI** ⇒ **TTY|Xi** ⇒ **TTY|X** ⇒ **TTY**.\nTo force run only specific backend use in command line:\nfor **GUI**: `far2l --notty`;\nfor **TTY|Xi** use in command line: `far2l --tty`;\nfor **TTY|X**: `far2l --tty --nodetect=xi`;\nfor plain **TTY**: `far2l --tty --nodetect=x`\n(see details via `far2l --help`).</sub>\n\n<sub>_Note about use OSC 52 in TTY/TTY|X_:\nto interact with the system clipboard you must **not forget to enable OSC 52**\nin both the **FAR2L settings** (`Options`⇒`Interface settings`⇒`Use OSC52 to set clipboard data`,\nwhich shown in the dialog only if far2l run in TTY/TTY|X mode and all other options for clipboard access are unavailable;\nyou can run `far2l --tty --nodetect` to force not use others clipboard options),\nand in **terminal settings** option OSC 52 must be allowed (by default, OSC 52 is disabled in some terminals for security reasons;\nOSC 52 in many terminals is implemented only for the copy mode, and paste from the terminal goes by bracketed paste mode).</sub>\n\n\n## Installing, Running\n<a name=\"debian\"></a>\n#### Debian/Ubuntu binaries from the official repositories\n\n* **TTY X/Xi** backends only (Debian / Ubuntu 23.10+)\n    ```sh\n    apt install far2l\n    ```\n\n* **GUI** backend (Debian since far2l _2.6.4_ / Ubuntu 25.04+)\n    ```sh\n    apt install far2l-wx\n    ```\n\n<sub>**Debian** has far2 in **sid-unstable** / **13 trixie-testing** / **12 bookworm-backports**; **Ubuntu** since **23.10**.\nDetails about versions in the official repositories see in\nhttps://packages.debian.org/search?keywords=far2l or https://packages.ubuntu.com/search?keywords=far2l </sub>\n\n<sub>_Note_: binaries in official repositories may be very outdated,\nactual binaries or portable see in [Community packages & binaries](#community_bins).</sub>\n\n<sub>_Note_: Since far2l 2.6.4 Debian/Ubuntu packages build with pythons subplugins.</sub>\n\n<details><summary>Backport official packages for old Debian/Ubuntu system <sub>[<i>click to expand/collapse</i>]</sub></summary>\n\n<sub>A simple sid back port should be as easy as (build your own binary deb from the official source deb package,\nrequired install [dependencies](#required-dependencies)):</sub>\n\n```sh\n# you will find the latest dsc link at http://packages.debian.org/sid/far2l\ndget http://deb.debian.org/debian/pool/main/f/far2l/2.6.3~beta+ds-1.dsc\ndpkg-source -x *.dsc\ncd far2l-*/\ndebuild\n# cd .. and install your self built far2l*.deb\n```\n\n</details>\n\n\n#### OSX/MacOS binaries\n\nYou can install prebuilt package for x86_64 platform via Homebrew Cask, by command:\n```sh\nbrew install --cask far2l\n```\n\nYou can also manually download and install prebuilt package for x86_64 platform from Releases page: <https://github.com/elfmz/far2l/releases>\n\n#### Docker\n\nYou can use containers to try `far2l` without installing anything.\n```sh\ndocker build . -l far2l\ndocker run -it far2l\n```\n\nSee also [Community packages & binaries](#community_bins)\n\n\n## Building, Contributing, Hacking\n#### Required dependencies\n\n* `libwxgtk3.0-gtk3-dev` or `libwxgtk3.2-dev` in newer distributions, or `libwxgtk3.0-dev` in older ones (_optional_ - needed for **GUI backend**, not needed with `-DUSEWX=no`)\n* `libx11-dev` (_optional_ - needed for **X11 extension** that provides better UX for TTY backend wherever X11 is available)\n* `libxi-dev` (_optional_ - needed for **X11/Xi extension** that provides best UX for TTY backend wherever X11 Xi extension is available)\n* `libxml2-dev` (_optional_ - needed for **Colorer plugin**, not needed with `-DCOLORER=no`)\n* `libuchardet-dev` (_optional_ - needed for **auto charset detection**, not needed with `-DUSEUCD=no`)\n* `libssh-dev` (_optional_ - needed for **NetRocks/SFTP**)\n* `libssl-dev` (_optional_ - needed for **NetRocks/FTPS**)\n* `libsmbclient-dev` (_optional_ - needed for **NetRocks/SMB**)\n* `libnfs-dev` (_optional_ - needed for **NetRocks/NFS**)\n* `libneon27-dev` (or later, _optional_ - needed for **NetRocks/WebDAV**)\n* `libarchive-dev` (_optional_ - needed for better archives support in **multiarc**)\n* `libunrar-dev` (_optional_ - needed for RAR archives support in **multiarc**, see `-DUNRAR` command line option)\n* `libicu-dev` (_optional_ - needed if used non-default ICU_MODE, see `-DICU_MODE` command line option)\n* `python3-dev` (_optional_ - needed for **python plugins** support, see `-DPYTHON` command line option)\n* `python3-cffi` (_optional_ - needed for **python plugins** support, see `-DPYTHON` command line option)\n* `cmake` ( >= 3.2.2 )\n* `pkg-config`\n* `g++`\n* `git` (needed for downloading source code)\n\nor simply on **Debian/Ubuntu**:\n``` sh\napt-get install libwxgtk3.0-gtk3-dev libx11-dev libxi-dev libxml2-dev libuchardet-dev libssh-dev libssl-dev libsmbclient-dev libnfs-dev libneon27-dev libarchive-dev cmake pkg-config g++ git\n```\n\nIn older distributions: use `libwxgtk3.0-dev` instead of `libwxgtk3.0-gtk3-dev`.\n\n#### Clone and Build\n * Clone current master\n```sh\ngit clone https://github.com/elfmz/far2l\ncd far2l\n```\n * Checkout some stable release tag (master considered unstable): `git checkout v_2.#.#`\n * Prepare build directory:\n```sh\nmkdir -p _build\ncd _build\n```\n\n * Build:\n_with make:_\n``` sh\ncmake -DUSEWX=yes -DCMAKE_BUILD_TYPE=Release ..\ncmake --build . -j$(nproc --all)\n``` \n_or with ninja (you need **ninja-build** package installed)_\n``` sh\ncmake -DUSEWX=yes -DCMAKE_BUILD_TYPE=Release -G Ninja ..\ncmake --build .\n```\n\n * If above commands finished without errors - you may:\n\n    * just run far2l from `./install/far2l`<br><sup>(use the full path to run from any location: `<path>/far2l/_build/install/far2l`)</sup>\n\n    * or/and install far2l: `sudo cmake --install .`\n\n    * or/and it's possible to create far2l_2.X.X_ARCH.deb or ...tar.gz packages in `_build` directory by running `cmake --build . --target package` command.\n\n##### Additional build configuration options:\n\nTo build without WX backend (console version only): change `-DUSEWX=yes` to `-DUSEWX=no` also in this case dont need to install libwxgtk\\*-dev package\n\nTo force-disable TTY|X and TTY|Xi backends: add argument `-DTTYX=no`; to disable only TTY|Xi - add argument `-DTTYXI=no`\n\nTo eliminate libuchardet requirement to reduce far2l dependencies by cost of losing automatic charset detection functionality: add `-DUSEUCD=no`\n\nBy default far2l uses pre-generated \"hardcoded\" UNICODE characters properties. But this can be changed by specifying -DICU_MODE when configuring cmake:\n `-DICU_MODE=prebuilt` - is a described above default implementaion. Most dependency-less option.\n `-DICU_MODE=build` - re-generate characters properties during build by using libicu available on build system, but it still not required to be present on target.\n `-DICU_MODE=runtime` - obtain properties at runtime (that can be bit slower) using libicu that required to be present on target system.\n\n\nTo build with Python plugin: add argument `-DPYTHON=yes`\nbut you must have installed additional packages within yours system:\n`python3-dev`,\n`python3-cffi`.\n\n\nTo control how RAR archives will be handled in multiarc:\n `-DUNRAR=bundled` (default) use bundled sources found in multiarc/src/formats/rar/unrar\n `-DUNRAR=lib` use libunrar and unrar utility, also build requires libunrar-dev to be installed\n `-DUNRAR=NO` dont use special unrar code, rar archives will be handled by libarchive unless its also disabled\n\nThere're also options to toggle other plugins build in same way: ALIGN AUTOWRAP CALC COLORER COMPARE DRAWLINE EDITCASE EDITORCOMP FARFTP FILECASE INCSRCH INSIDE MULTIARC NETROCKS SIMPLEINDENT TMPPANEL\n\n#### OSX/MacOS build\n\nTo make custom/recent build use brew or MacPorts.\n\n * Supported compiler: `AppleClang 8.0.0.x` or newer. Check your version, and install/update Xcode if necessary.\n ```sh\n clang++ -v\n ```\n * If you want to build using Homebrew - first visit <https://brew.sh/> for installation instructions. Note that there're reported problems with Homebrew-based build under MacOS Big Sur.\n * If you want to build using MacPorts - first visit <https://www.macports.org/install.php> for installation instructions.\n\n##### One line OSX/MacOS install latest far2l git master via unofficial brew tap\n\n * With GUI/TTY backends:\n```sh\nbrew install --HEAD yurikoles/yurikoles/far2l\n```\n * With TTY backend only:\n```sh\nbrew install --HEAD yurikoles/yurikoles/far2l --without-wxwidgets\n```\n * Additionally you can enable python support by adding `--with-python@3.10` to the one of two above commands.\n\n##### Full OSX/MacOS build from sources (harder):\nSome issues can be caused by conflicting dependencies, like having two versions of wxWidgets, so avoid such situation when installing dependencies.\n\n * Clone:\n```sh\ngit clone https://github.com/elfmz/far2l\ncd far2l\n```\n * Install needed dependencies with MacPorts:\n``` sh\nsudo port install cmake pkgconfig wxWidgets-3.2 libssh openssl libxml2 uchardet neon\nexport PKG_CONFIG_PATH=/opt/local/lib/pkgconfig\n```\n * OR if you prefer to use brew packages, then:\n```sh\nbrew bundle -v\nexport PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH:$(brew --prefix)/opt/openssl/lib/pkgconfig:$(brew --prefix)/opt/libarchive/lib/pkgconfig\"\n```\n * After dependencies installed - you can build far2l:\n_with make:_\n```sh\nmkdir _build\ncd _build\ncmake -DCMAKE_INSTALL_PREFIX=/usr/local -DUSEWX=yes -DCMAKE_BUILD_TYPE=Release ..\ncmake --build . -j$(sysctl -n hw.logicalcpu)\n``` \n_or with ninja:_\n```sh\nmkdir _build\ncd _build\ncmake -DCMAKE_INSTALL_PREFIX=/usr/local -DUSEWX=yes -DCMAKE_BUILD_TYPE=Release -G Ninja ..\ncmake --build .\n```\n * Then you may create .dmg package by running: `cpack` command.\nNote that this step sometimes fails and may succeed from not very first attempt.\nIts recommended not to do anything on machine while cpack is in progress.\nAfter .dmg successfully created, you may install it by running `open ...path/to/created/far2l-*.dmg`\n\n##### macOS workaround if far2l in macOS regularly asks permission to folders\nAfter command\n```\n sudo codesign --force --deep --sign - /Applications/far2l.app\n```\nit is enough to confirm permission only once.\n\nDetails see in [`issue`](https://github.com/elfmz/far2l/issues/1754).\n\n#### Building on Gentoo (and derivatives)\nFor absolute minimum you need:\n```\nemerge -avn dev-libs/libxml2 app-i18n/uchardet dev-util/cmake\n```\nIf you want to build far2l with wxGTK support also install it:\n```\nemerge -avn x11-libs/wxGTK\n```\nAdditionally, for NetRocks you will need:\n```\nemerge -avn net-libs/neon net-libs/libssh net-fs/libnfs net-fs/samba\n```\nAfter installing, follow Clone and Build section above.\n\n#### Installing and Building on [NixOS](https://nixos.org/)\n\nTo install system-wide, add the `far2l` package to your [`configuration.nix`](https://nixos.org/manual/nixos/stable/index.html#sec-changing-config) `environment.systemPackages` list. To run the application on-demand without affecting the system state, execute `nix-shell -p far2l --command far2l`. These use a package version from your current [channel](https://wiki.nixos.org/wiki/Nix_channels).\n\nThe Far2l adaptation for _nix_ is [a small file on GitHub](https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/misc/far2l/default.nix), it tells which Git revision from Far2l repo to fetch, with what dependencies to build it, and how to patch its references to other software to make it run in isolated fashion independently from other versions available in the system.\n\nYou can build and run `far2l` package for any revision:\n* Directly from GitHub (`NixOS/nixpkgs` repo, or your own fork and branch):\n ``` sh\nnix-shell -I nixpkgs=https://github.com/<fork>/nixpkgs/archive/<revision-or-branch>.tar.gz -p far2l --command far2l\n ```\n* From a locally cloned working directory of the repo:\n``` sh\nnix-shell -I nixpkgs=/path/to/nixpkgs -p far2l --command far2l\n```\n\nTo advance the package to a new Far2l revision, edit the `fetchFromGitHub` set attributes `rev` (revision hash) and `sha256` (revision content hash). **Important!** If you leave the old content hash, the old cached content for that hash might be used without attempting to download the new revision. If you're not expecting the build to break, the easiest would be to make a fork, push the change, and build straight from github.\n\n#### IDE Setup\nYou can import the project into your favourite IDE like QtCreator, CodeLite, or any other, which supports cmake or which cmake is able to generate projects for.\n\n * **QtCreator**: select \"Open Project\" and point QtCreator to the CMakeLists.txt in far2l root directory\n * **CLion**: the same as **QtCreator**.\n * **CodeLite**: use this guide to setup a project: https://wiki.codelite.org/pmwiki.php/Main/TheCMakePlugin (to avoid polluting your source tree, don't create your workspace inside of the far2l directory)\n * **Visual Studio Code** (required _CMake Tools extension_): open far2l root directory (by default building in subdirectory `_build`; you can change in `.vscode/settings.json`)\n\n<a name=\"terminals\"></a>\n## Terminals and SSH clients\nSupporting extended far2l keyboard shortcuts and clipboard access\n\n * **kovidgoyal's kitty** (Linux, macOS, \\*BSD): https://github.com/kovidgoyal/kitty & https://sw.kovidgoyal.net/kitty (TTY|k backend: keys by kovidgoyal's kitty keyboard protocol; turn on OSC 52 in far2l and kitty for clipboard support)\n * **Wez's Terminal Emulator** (Linux, FreeBSD, Windows): https://github.com/wez/wezterm & https://wezfurlong.org/wezterm (TTY|k backend: keys in Linux, FreeBSD by kovidgoyal's kitty keyboard protocol; TTY|w backend: keys in Windows by win32-input-mode, enabled by default; turn on OSC 52 for clipboard support) [kitty keyboard protocol not supported in macOS & Windows]\n * **iTerm2** (macOS): https://gitlab.com/gnachman/iterm2 & https://iterm2.com (TTY|a backend: keys by iTerm2 \"raw keyboard\" protocol; turn on OSC 52 for clipboard support)\n * **Windows Terminal** (TTY|w backend: keys by win32-input-mode; turn on OSC 52 for clipboard support; has mouse bug: https://github.com/microsoft/terminal/issues/15083 )\n\n * _Original Putty_ does _not correctly send some keyboard shortcuts_. Please use putty forks with _special far2l TTY extensions support (fluent keypresses, clipboard sharing etc)_:\n   * **putty4far2l** (Windows ssh-client): https://github.com/ivanshatsky/putty4far2l/releases & https://github.com/unxed/putty4far2l (TTY|F backend: keys and clipboard by FAR2L TTY extensions support)\n   * **cyd01's KiTTY** (Windows ssh-client): https://github.com/cyd01/KiTTY & https://www.9bis.net/kitty (TTY|F backend: keys and clipboard by FAR2L TTY extensions support)\n   * **putty-nd** (Windows ssh-client): https://sourceforge.net/projects/putty-nd & https://github.com/noodle1983/putty-nd (TTY|F backend: keys and clipboard by FAR2L TTY extensions support)\n\n_Note_: to full transfer extended keyboard shortcuts and the clipboard to/from the **remote far2l**\none of the best way to initiate the connection **inside local far2l-GUI**\n(see details in build-in help section **UI backends**).\n\n## Useful 3rd-party extras\n\n * A collection of macros for far2l: https://github.com/corporateshark/far2l-macros\n * Turbo Vision, TUI framework supporting far2l terminal extensions: https://github.com/magiblot/tvision\n * turbo, text editor supporting far2l terminal extensions: https://github.com/magiblot/turbo\n * far2ltricks: https://github.com/unxed/far2ltricks\n    * tool to import color schemes from windows FAR manager 2 .reg format: https://github.com/unxed/far2ltricks/blob/main/misc/far2l_import.pl\n\n * External far2l plugins:\n    + **jumpword** (far2l editor plugin for quick searching the word under cursor): https://github.com/axxie/far2l-jumpword/\n    + **netcfg** (far2l net interfaces configuration plugin): https://github.com/VPROFi/netcfgplugin\n    + **sqlplugin** (far2l sql db (sqlite, etc..) plugin): https://github.com/VPROFi/sqlplugin\n    + **processplugin** (far2l processes plugin): https://github.com/VPROFi/processes\n\n * **far2m** is fork with FAR3 macro system (Lua) and extended plugins: https://github.com/shmuz/far2m\n\n * **Community wiki & tips** (in Russian; unofficial): https://github.com/akruphi/far2l/wiki\n\n<a name=\"community_bins\"></a>\n## Community packages & binaries\n\n _They are mainteined by enthusiasts and may be not exact with master: sometimes has extra plugins, sometimes has tweak, etc._\n\n * **Portable** (_with TTY X/Xi backend_) | **AppImage** (_with wx-GUI and some extra plugins_): https://github.com/spvkgn/far2l-portable/releases\n * **Ubuntu** and **Mint** from PPA with fresh far2l: https://launchpad.net/~far2l-team/+archive/ubuntu/ppa\n\n    - <details><summary>tips for toggle between repositories PPA and official Ubuntu <sub>[<i>click to expand/collapse</i>]</sub></summary>\n\n        - **Tranfser to binaries from PPA repository**\n\n            ```shell\n            sudo apt remove far2l*                      # required if any far2l was installed\n            sudo apt install software-properties-common # required if add-apt-repository not installed\n            sudo add-apt-repository ppa:far2l-team/ppa\n            #sudo apt install far2l-gui  # (!) use if you need plain+GUI backends\n            #sudo apt install far2l-ttyx # (!) use if you need plain+TTY|Xi backends\n            #sudo apt install far2l      # (!) use if you need only plain backend\n            ```\n\n        - Disconnection PPA and **return to official [Ubuntu](#debian) repository**\n\n            ```shell\n            sudo apt remove far2l*                      # required if any far2l was installed\n            sudo apt install software-properties-common # required if add-apt-repository not installed\n            sudo add-apt-repository --remove ppa:far2l-team/ppa\n            #sudo apt install far2l     # (!) use if you need plain+TTY|Xi backends\n            #sudo apt install far2l-wx  # (!) use if you need plain+GUI backends\n            ```\n\n    </details>\n\n * **Fedora** and **CentOS**: https://copr.fedorainfracloud.org/coprs/polter/far2l\n * **OpenSUSE**, **Fedora**, **Debian**, **Ubuntu**: https://download.opensuse.org/repositories/home:/viklequick/ <br>\n    <sub>(contain separate packages with external plugins;<br>in `sources.list` you may add: `deb https://downloadcontentcdn.opensuse.org/repositories/home:/viklequick/<os-version> ./`)</sub>\n * **OpenWrt**: https://github.com/spvkgn/far2l-openwrt\n * **Termux**: https://github.com/spvkgn/far2l-termux\n * **Flatpak**: https://github.com/spvkgn/far2l-flatpak <sub>(access only to part of real filesystem via sandbox)</sub>\n\n See also in https://github.com/elfmz/far2l/issues/647\n\n## Notes on porting and FAR Plugin API changes\n * See [HACKING.md](HACKING.md)\n\n## Testing\n * See [testing/README.md](testing/README.md)\n\n## Known issues:\n* Only valid translations are English, Russian, Ukrainian and Belarussian (interface only), all other languages require deep correction.\n"
        },
        {
          "name": "SimpleIndent",
          "type": "tree",
          "content": null
        },
        {
          "name": "WinPort",
          "type": "tree",
          "content": null
        },
        {
          "name": "align",
          "type": "tree",
          "content": null
        },
        {
          "name": "autowrap",
          "type": "tree",
          "content": null
        },
        {
          "name": "bash-completion",
          "type": "tree",
          "content": null
        },
        {
          "name": "calc",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "colorer",
          "type": "tree",
          "content": null
        },
        {
          "name": "compare",
          "type": "tree",
          "content": null
        },
        {
          "name": "dependencies-minimal.txt",
          "type": "blob",
          "size": 0.0478515625,
          "content": "libwxgtk3.0-gtk3-dev\nlibuchardet-dev\nlibxml2-dev\n"
        },
        {
          "name": "dependencies.txt",
          "type": "blob",
          "size": 0.142578125,
          "content": "cmake\ng++\npkg-config\n\nlibwxgtk3.0-gtk3-dev\nlibx11-dev\nlibxi-dev\n\nlibuchardet-dev\nlibxml2-dev\n\nlibarchive-dev\nlibssh-dev\n\npython3-dev\npython3-cffi\n"
        },
        {
          "name": "drawline",
          "type": "tree",
          "content": null
        },
        {
          "name": "editcase",
          "type": "tree",
          "content": null
        },
        {
          "name": "editorcomp",
          "type": "tree",
          "content": null
        },
        {
          "name": "far2l",
          "type": "tree",
          "content": null
        },
        {
          "name": "farftp",
          "type": "tree",
          "content": null
        },
        {
          "name": "farlng",
          "type": "tree",
          "content": null
        },
        {
          "name": "filecase",
          "type": "tree",
          "content": null
        },
        {
          "name": "incsrch",
          "type": "tree",
          "content": null
        },
        {
          "name": "inside",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "multiarc",
          "type": "tree",
          "content": null
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "tmppanel",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}