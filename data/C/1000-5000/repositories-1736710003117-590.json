{
  "metadata": {
    "timestamp": 1736710003117,
    "page": 590,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "virtio-win/kvm-guest-drivers-windows",
      "stars": 2124,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 5.0830078125,
          "content": "---\nLanguage:        Cpp\n\nAlignConsecutiveMacros:\n  Enabled:         true\n  AcrossEmptyLines: true\n  AcrossComments:  true\n  AlignCompound:   false\n  PadOperators:    false\nIndentCaseBlocks: true\nIndentCaseLabels: true\nContinuationIndentWidth: 100\nBinPackArguments: false\nBinPackParameters: false\nSortIncludes: false\nAccessModifierOffset: -2\nAlignAfterOpenBracket: Align\nAlignArrayOfStructures: None\nAlignConsecutiveAssignments:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  PadOperators:    true\nAlignConsecutiveBitFields:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  PadOperators:    false\nAlignConsecutiveDeclarations:\n  Enabled:         false\n  AcrossEmptyLines: false\n  AcrossComments:  false\n  AlignCompound:   false\n  PadOperators:    false\nAlignEscapedNewlines: Right\nAlignOperands:   Align\nAlignTrailingComments:\n  Kind:            Always\n  OverEmptyLines:  0\nAllowAllArgumentsOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: Never\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortEnumsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLambdasOnASingleLine: All\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: MultiLine\nAttributeMacros:\n  - __capability\nBitFieldColonSpacing: Both\nBraceWrapping:\n  AfterCaseLabel:  false\n  AfterClass:      true\n  AfterControlStatement: Always\n  AfterEnum:       true\n  AfterExternBlock: true\n  AfterFunction:   true\n  AfterNamespace:  true\n  AfterObjCDeclaration: true\n  AfterStruct:     true\n  AfterUnion:      false\n  BeforeCatch:     true\n  BeforeElse:      true\n  BeforeLambdaBody: false\n  BeforeWhile:     false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakAfterAttributes: Leave\nBreakAfterJavaFieldAnnotations: false\nBreakArrays:     true\nBreakBeforeBinaryOperators: None\nBreakBeforeConceptDeclarations: Always\nBreakBeforeBraces: Custom\nBreakBeforeInlineASMColon: OnlyMultiline\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializers: BeforeColon\nBreakInheritanceList: BeforeColon\nBreakStringLiterals: true\nColumnLimit:     120\nCompactNamespaces: false\nConstructorInitializerIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nEmptyLineAfterAccessModifier: Never\nEmptyLineBeforeAccessModifier: LogicalBlock\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nIncludeBlocks:   Preserve\nIncludeIsMainSourceRegex: ''\nIndentAccessModifiers: false\nIndentExternBlock: AfterExternBlock\nIndentGotoLabels: true\nIndentPPDirectives: None\nIndentRequiresClause: true\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nInsertBraces:    true\nInsertNewlineAtEOF: false\nInsertTrailingCommas: None\nIntegerLiteralSeparator:\n  Binary:          0\n  BinaryMinDigits: 0\n  Decimal:         0\n  DecimalMinDigits: 0\n  Hex:             0\n  HexMinDigits:    0\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: true\nLambdaBodyIndentation: Signature\nLineEnding:      DeriveLF\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 2\nObjCBreakBeforeNestedBlockParam: true\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPackConstructorInitializers: BinPack\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakOpenParenthesis: 0\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyIndentedWhitespace: 0\nPenaltyReturnTypeOnItsOwnLine: 1000\nPointerAlignment: Right\nPPIndentWidth:   -1\nQualifierAlignment: Leave\nReferenceAlignment: Pointer\nReflowComments:  true\nRemoveBracesLLVM: false\nRemoveSemicolon: false\nRequiresClausePosition: OwnLine\nRequiresExpressionIndentation: OuterScope\nSeparateDefinitionBlocks: Leave\nShortNamespaceLines: 1\nSortJavaStaticImport: Before\nSortUsingDeclarations: LexicographicNumeric\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceAroundPointerQualifiers: Default\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCaseColon: false\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeParensOptions:\n  AfterControlStatements: true\n  AfterForeachMacros: true\n  AfterFunctionDefinitionName: false\n  AfterFunctionDeclarationName: false\n  AfterIfMacros:   true\n  AfterOverloadedOperator: false\n  AfterRequiresInClause: false\n  AfterRequiresInExpression: false\n  BeforeNonEmptyParentheses: false\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceBeforeSquareBrackets: false\nSpaceInEmptyBlock: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  Never\nSpacesInContainerLiterals: true\nSpacesInSquareBrackets: false\nStandard:        Latest\nUseTab:          Never\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3837890625,
          "content": "*.suo\n*.wrn\n*.log\n*.err\n*.pfx\n*.cer\n*.bak\n*.user\n*.sdf\n*.tmh\n*.bmf\n*.cat\n*.opensdf\n*.DVL.XML\n*.DVL-compat.XML\n*.opendb\n*.VC.db\nvc*.pdb\n*objchk_*\n*objfre_*\n*Win*Debug*\n*Win*Release*\n*VistaDebug*\n*VistaRelease*\nWin32\nx64\nInstall\nInstall_Debug\nsdv\nsdv-map.h\nsdv-user.*\nSDV-default.xml\nsmvstats.txt\nnetkvmmof.h\n.vs\ncodeql.build.bat\ncodeql_db\n*.sarif\n*CodeAnalysis.log\nvc.nativecodeanalysis.all.xml"
        },
        {
          "name": ".hck-ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "Balloon",
          "type": "tree",
          "content": null
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5302734375,
          "content": "Copyright 2009-2017 Red Hat, Inc. and/or its affiliates.\nCopyright 2016 Google, Inc.\nCopyright 2016 Virtuozzo, Inc.\nCopyright 2007 IBM Corporation\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\nRedistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\nNeither the name of the copyright holder nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "NetKVM",
          "type": "tree",
          "content": null
        },
        {
          "name": "Q35",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.3583984375,
          "content": "# KVM/QEMU Windows guest drivers (virtio-win) #\n\nThis repository contains KVM/QEMU Windows guest drivers, for both\nparavirtual and emulated hardware. The code builds and ships as part\nof the virtio-win RPM on Fedora and Red Hat Enterprise Linux, and the\nbinaries are also available in the form of distribution-neutral ISO\nand VFD images. If all you want is use virtio-win in your Windows\nvirtual machines, go to the\n[Fedora virtIO-win documentation][fedora-virtio]\nfor information on obtaining the binaries.\n\nIf you'd like to build virtio-win from sources, clone this repo and\nfollow the instructions in [Building the Drivers][wiki-building].\nNote that the drivers you build will be either unsigned or test-signed\nwith Tools/VirtIOTestCert.cer, which means that Windows will not load\nthem by default. See [Microsoft's driver signing page][ms-signing]\nfor more information on test-signing.\n\nIf you want to build cross-signed binaries (like the ones that ship in\nthe Fedora RPM), you'll need your own code-signing certificate.\nCross-signed drivers can be used on all versions of Windows except for\nthe latest Windows 10 with secure boot enabled. However, systems with\ncross-signed drivers will not receive Microsoft support.\n\nIf you want to produce Microsoft-signed binaries (fully supported,\nlike the ones that ship in the Red Hat Enterprise Linux RPM), you'll\nneed to submit the drivers to Microsoft along with a set of test\nresults (so called WHQL process). If you decide to WHQL the drivers,\nmake sure to base them on commit eb2996de or newer, since the GPL\nlicense used prior to this commit is not compatible with WHQL.\nAdditionally, we ask that you make a change to the Hardware IDs so\nthat your drivers will *not* match devices exposed by the upstream\nversions of KVM/QEMU. This is especially important if you plan to\ndistribute the drivers with Windows Update, see the \n[Microsoft publishing restrictions][ms-publishing] for more details.\n\n[fedora-virtio]:https://docs.fedoraproject.org/en-US/quick-docs/creating-windows-virtual-machines-using-virtio-drivers/index.html\n[wiki-building]:https://virtio-win.github.io/Development/Building-the-drivers-using-Windows-11-24H2-EWDK\n[ms-signing]:https://docs.microsoft.com/en-us/windows-hardware/drivers/install/installing-test-signed-driver-packages\n[ms-publishing]:https://docs.microsoft.com/en-us/windows-hardware/drivers/dashboard/publishing-restrictions\n- - - -\n"
        },
        {
          "name": "RunSdv.bat",
          "type": "blob",
          "size": 4.091796875,
          "content": "REM -----------------------------------------------------------------------\nREM  Copyright (c) 2010-2017 Red Hat, Inc.\nREM\nREM  Author(s):\nREM   Miki Mishael <mikim@daynix.com>\nREM\nREM  Redistribution and use in source and binary forms, with or without\nREM  modification, are permitted provided that the following conditions\nREM  are met :\nREM  1. Redistributions of source code must retain the above copyright\nREM     notice, this list of conditions and the following disclaimer.\nREM  2. Redistributions in binary form must reproduce the above copyright\nREM     notice, this list of conditions and the following disclaimer in the\nREM     documentation and / or other materials provided with the distribution.\nREM  3. Neither the names of the copyright holders nor the names of their contributors\nREM     may be used to endorse or promote products derived from this software\nREM     without specific prior written permission.\nREM  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND\nREM  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nREM  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nREM  ARE DISCLAIMED.IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE\nREM  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nREM  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREM ENT OF SUBSTITUTE GOODS\nREM  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nREM  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nREM  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nREM  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nREM  SUCH DAMAGE.\nREM -----------------------------------------------------------------------\n@echo off\ncls\ncls\nEcho.\nEcho          ***********************************************\nEcho          *     Running SDV...  Don't close!             *\nEcho          ***********************************************\n:START\n\nSETLOCAL\nREM Set NATIVE ENV for running SDV Tool.\nset vsVer=11\nset arc=x86\ncall %~dp0Tools\\SetVsEnv.bat %vsVer% %arc%\nif %ERRORLEVEL% NEQ 0 goto Error3\n\nSET ROOT_PATH=%1\nSET PROJECT_XML_PATH=%2\nSET PROJECT_DIR_PATH=%3\nSET PROJECT_NAME=%4\ntitle \"DO Not Close!-Running SDV on %PROJECT_NAME% (ALL Configurations)\"\n\nif \"%_NT_TARGET_VERSION%\"==\"\" set _NT_TARGET_VERSION=0x602\nif \"%_BUILD_MAJOR_VERSION_%\"==\"\" set _BUILD_MAJOR_VERSION_=101\nif \"%_BUILD_MINOR_VERSION_%\"==\"\" set _BUILD_MINOR_VERSION_=58000\nif \"%_RHEL_RELEASE_VERSION_%\"==\"\" set _RHEL_RELEASE_VERSION_=61\n\nset /a _NT_TARGET_MAJ=\"(%_NT_TARGET_VERSION% >> 8) * 10 + (%_NT_TARGET_VERSION% & 255)\"\nset STAMPINF_VERSION=%_NT_TARGET_MAJ%.%_RHEL_RELEASE_VERSION_%.%_BUILD_MAJOR_VERSION_%.%_BUILD_MINOR_VERSION_%\n\ncscript.exe %ROOT_PATH%\\Tools\\RunSdv.js  %ROOT_PATH% %PROJECT_XML_PATH% %PROJECT_DIR_PATH% %PROJECT_NAME% //Nologo\nif %ERRORLEVEL% EQU 0 goto End\nif %ERRORLEVEL% EQU 1 goto Error1\nif %ERRORLEVEL% EQU 2 goto Error2\n\n:Error2\nEcho.\nEcho       *********************************************************************\nEcho       * Fatal Error Running SDV on %PROJECT_NAME%, Try Again, Good Bye... *\nEcho       *********************************************************************\nEcho.\nENDLOCAL\nEXIT /B 1\n\nREM Error in specific Configurations and platform\n:Error1\nEcho.\nEcho       *********************************************************************\nEcho       *  Error Running With Configurations and platform on %PROJECT_NAME% *\nEcho       *********************************************************************\nEcho.\nENDLOCAL\nEXIT /B 1\n\n:Error3\nEcho.\nEcho       *********************************************************************\nEcho       *        Error Couldn't find VS installation                        *\nEcho       *********************************************************************\nEcho.\nENDLOCAL\nEXIT /B 1\n\n:End\nEcho.\nEcho       **********************************************************\nEcho       *  Successful Running SDV on this project %PROJECT_NAME% *\nEcho       **********************************************************\nEcho.\nPing -n 3 127.0.0.1 > NUL\n:FIN\nENDLOCAL\nEXIT /B 0\n"
        },
        {
          "name": "SDVTOOL.bat",
          "type": "blob",
          "size": 9.2060546875,
          "content": "@ Echo off\nREM -----------------------------------------------------------------------\nREM  Copyright (c) 2010-2017 Red Hat, Inc.\nREM\nREM  Author(s):\nREM   Miki Mishael <mikim@daynix.com>\nREM\nREM  Redistribution and use in source and binary forms, with or without\nREM  modification, are permitted provided that the following conditions\nREM  are met :\nREM  1. Redistributions of source code must retain the above copyright\nREM     notice, this list of conditions and the following disclaimer.\nREM  2. Redistributions in binary form must reproduce the above copyright\nREM     notice, this list of conditions and the following disclaimer in the\nREM     documentation and / or other materials provided with the distribution.\nREM  3. Neither the names of the copyright holders nor the names of their contributors\nREM     may be used to endorse or promote products derived from this software\nREM     without specific prior written permission.\nREM  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND\nREM  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nREM  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nREM  ARE DISCLAIMED.IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE\nREM  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nREM  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREM ENT OF SUBSTITUTE GOODS\nREM  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nREM  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nREM  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nREM  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nREM  SUCH DAMAGE.\nREM -----------------------------------------------------------------------\n\nRem This script was made to run Static Driver Verifier.\nRem This script was Tested only on Windows 2008R2 and visual studio 2012.\nRem ver SdvTool 1.0.0.0\n\nREM for running auto from build system use without any parameters.\nSETLOCAL\nIF \"%~1\"==\"\" ( SET var=1)\nIF \"%~1\"==\"\" ( Goto PRERUN)\n\n:Menu\ncls\nCOLOR 0B\nEcho.\nEcho.= Menu ================= Ver 1.0.0.0 ===================\nEcho.\nEcho Please choose which operation would you like to Verify:\nEcho.\nEcho     (1): Verify     All Projects (ALL Configurations)\nEcho     (2): Verify     NetKVM       (ALL Configurations)\nEcho     (3): Verify     Vioserial    (ALL Configurations)\nEcho     (4): Verify     Balloon      (ALL Configurations)\nEcho     (5): Verify     Vioscsi      (ALL Configurations)\nEcho     (6): Verify     Viostor      (ALL Configurations)\nEcho     (7): Quit\nEcho.\nEcho ========================================================\nEcho.\nEcho Please choose which operation you would like to Verify,Then enter.\nEcho E.g: 1 \"Enter\":\nEcho.\n\nSET /P var=[Choose Verify:]\nEcho.\nif  \"%var%\"==\"7\" (\n    Goto End\n    )\nif \"%var%\"==\"1\" ( Goto PRERUN)\nif \"%var%\"==\"2\" ( Goto PRERUN)\nif \"%var%\"==\"3\" ( Goto PRERUN)\nif \"%var%\"==\"4\" ( Goto PRERUN)\nif \"%var%\"==\"5\" ( Goto PRERUN)\nif \"%var%\"==\"6\" ( Goto PRERUN)\n\n        Echo       *******************************************************************\n        Echo       *     Wrong Operation Argument, Please Try Again in 5 sec ...     *\n        Echo       *******************************************************************\n        Ping -n 5 127.0.0.1 > NUL\n        Goto Menu\n\n:PRERUN\nRem  *******************************************************************\nRem                   Init all parameters\nRem  *******************************************************************\n    SET ROOT_PATH=%~dp0\n    SET all=\n    SET err=0\n    SET /A cnt=2\n    SET parm1=\n    SET parm2=\n    SET parm3=\n    SET parm4=\nRem  *******************************************************************\n\nRem  *******************************************************************\nRem                 Build VirtIO\nRem  *******************************************************************\nCOLOR\ncd VirtIO\ncall buildAll.bat\ncd ..\nRem  *******************************************************************\nRem             NetKVM Vioserial Balloon Vioscsi Viostor\nRem  *******************************************************************\n:Var\nif \"%var%\"==\"1\" ( Goto Process)\nif \"%var%\"==\"2\" ( Goto NetKVM)\nif \"%var%\"==\"3\" ( Goto Vioserial)\nif \"%var%\"==\"4\" ( Goto Balloon)\nif \"%var%\"==\"5\" ( Goto Vioscsi)\nif \"%var%\"==\"6\" ( Goto Viostor)\n\nEcho = Variables ============================================\nEcho.\nRem  *****************************************************************************\nRem  Set PROJECT_XML_PATH, PROJECT_DIR_PATH PROJECT_NAME, ROOT_PATH for RunSdv.bat\nRem  *****************************************************************************\n\n:NetKVM\nSET PROJECT_XML_PATH=%ROOT_PATH%\"NetKVM\\NetKVM.vcxproj\"\nSET PROJECT_DIR_PATH=%ROOT_PATH%\"NetKVM\"\nSET PROJECT_NAME=\"NetKVM\"\nGoto SetParam\n\n:Vioserial\nSET PROJECT_XML_PATH=%ROOT_PATH%\"vioserial\\sys\\vioser.vcxproj\"\nSET PROJECT_DIR_PATH=%ROOT_PATH%\"vioserial\\sys\"\nSET PROJECT_NAME=\"vioser\"\nGoto SetParam\n\n:Balloon\nSET PROJECT_XML_PATH=%ROOT_PATH%\"balloon\\sys\\balloon.vcxproj\"\nSET PROJECT_DIR_PATH=%ROOT_PATH%\"balloon\\sys\"\nSET PROJECT_NAME=\"balloon\"\nGoto SetParam\n\n:Vioscsi\nSET PROJECT_XML_PATH=%ROOT_PATH%\"vioscsi\\vioscsi.vcxproj\"\nSET PROJECT_DIR_PATH=%ROOT_PATH%\"vioscsi\"\nSET PROJECT_NAME=\"vioscsi\"\nGoto SetParam\n\n:Viostor\nSET PROJECT_XML_PATH=%ROOT_PATH%\"viostor\\viostor.vcxproj\"\nSET PROJECT_DIR_PATH=%ROOT_PATH%\"viostor\"\nSET PROJECT_NAME=\"viostor\"\nGoto SetParam\n\n:SetParam\nSET parm1=%ROOT_PATH%\nSET parm2=%PROJECT_XML_PATH%\nSET parm3=%PROJECT_DIR_PATH%\nSET parm4=%PROJECT_NAME%\nif  \"%all%\"==\"true\" GOTO IterateAll\nGoto Process\n\nRem  *******************************************************************\nRem                        Start processing\nRem  *******************************************************************\n:Process\nif  \"%var%\"==\"1\" (\nSET all=true\n:p2\nGoto Vioserial\n:p3\nGoto Balloon\n:p4\nGoto Viostor\n:p5\nGoto Vioscsi\n:p6\nGoto NetKVM\n:IterateAll\n    call RunSdv.bat %parm1% %parm2% %parm3% %parm4%\n    IF %ERRORLEVEL% NEQ 0 SET err=1\n    SET /A cnt+=1\n    if  %cnt% GTR 6 GOTO END\n    Goto  p%cnt%\n    )\n\ncall RunSdv.bat %parm1% %parm2% %parm3% %parm4%\nIF %ERRORLEVEL% NEQ 0 goto Error4\nGOTO Menu\n\nRem  *******************************************************************\nRem                   Error handling\nRem  *******************************************************************\n\n:Error1\n    Echo ************************************************************************\n    Echo *                 !!!!Wrong Project name!!!!                           *\n    Echo ************************************************************************\n    Echo.\n    Ping -n 3 127.0.0.1 > NUL\n    ENDLOCAL\n    color\n    EXIT /B 1\n\n:Error2\n    Echo *******************************************************************************\n    Echo * Wrong Configuration, Couldn't find in project you chose, Please Try Again...*\n    Echo *******************************************************************************\n    Echo.\n    Ping -n 3 127.0.0.1 > NUL\n    ENDLOCAL\n    color\n    EXIT /B 1\n\n:Error3\n    Echo ***************************************************************************\n    Echo *  Wrong Platform, There isn't in project you chose, Please Try Again ... *\n    Echo ***************************************************************************\n    Echo.\n    Ping -n 3 127.0.0.1 > NUL\n    ENDLOCAL\n    color\n    EXIT /B 1\n\n:Error4\n    Echo ***************************************************************************\n    Echo *                       General Error, Please Try Again ...               *\n    Echo ***************************************************************************\n    Echo.\n    Ping -n 3 127.0.0.1 > NUL\n    ENDLOCAL\n    color\n    EXIT /B 1\n\n\nRem  *******************************************************************\nRem  Get user input for project name and validate it.\nRem  *******************************************************************\n    :start\n    SET /P parm1=[Please Choose project name  then Enter:]\n    Echo Please wait,Validating Project Name...\n    Ping -n 1 %parm1% | find \"TTL\" > NUL\n    IF %ERRORLEVEL% NEQ 0 goto Error1\n\nRem  *******************************************************************\nRem  Get user input for Configuration Time\nRem  *******************************************************************\n    :Next1\n    SET /P parm2=[Please Choose Configuration then Enter:]\n    Echo Please wait,Validating Project Name...\n    Ping -n 1 %parm1% | find \"TTL\" > NUL\n    IF %ERRORLEVEL% NEQ 0 goto Error2\n    Goto Next2\n\nRem  *******************************************************************\nRem  Get user input for Platform\nRem  *******************************************************************\n    :Next2\n    SET /P parm3=[Please Choose Platform then Enter:]\n    Echo Please wait,Validating Platform Name...\n    Ping -n 1 %parm1% | find \"TTL\" > NUL\n    IF %ERRORLEVEL% NEQ 0 goto Error3\n    Goto Next3\n\n\n\nRem  *******************************************************************\nRem                   End and ReSET all parameters\nRem  *******************************************************************\n:END\n    color\n    SET var=\n    SET ans=\n    SET parm1=\n    SET parm2=\n    SET parm3=\n    SET parm4=\n    SET var=\n    SET all=\n    SET cnt=\n    Echo Thank you,Good Bye!\n    COLOR\n    ENDLOCAL\n    Ping -n 5 127.0.0.1 > NUL\n    EXIT /B %err%\n\n"
        },
        {
          "name": "Tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "VirtIO",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "buildAll.bat",
          "type": "blob",
          "size": 2.2783203125,
          "content": "@echo off\n\nif \"%VIRTIO_WIN_NO_ARM%\"==\"\" call build\\build.bat virtio-win.sln \"Win10 Win11\" ARM64\nif errorlevel 1 goto :fail\n\ncall build\\build.bat virtio-win.sln \"Win10 Win11\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat NetKVM\\NetKVM-VS2015.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat vioscsi\\vioscsi.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat viostor\\viostor.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\nif \"%VIRTIO_WIN_SDV_2022%\"==\"\" goto :nosdv2022\ncall build\\build.bat Balloon\\sys\\balloon.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat fwcfg64\\fwcfg.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat ivshmem\\ivshmem.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat pvpanic\\pvpanic\\pvpanic.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat viorng\\viorng\\viorng.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat vioserial\\sys\\vioser.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat viosock\\sys\\viosock.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat viosock\\wsk\\wsk.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat viosock\\viosock-wsk-test\\viosock-wsk-test.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat viofs\\pci\\viofs.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat vioinput\\hidpassthrough\\hidpassthrough.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat vioinput\\sys\\vioinput.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\ncall build\\build.bat viomem\\sys\\viomem.vcxproj \"Win10_SDV Win11_SDV\" %*\nif errorlevel 1 goto :fail\n\n\n:nosdv2022\n\npath %path%;C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86\\\nfor %%D in (pciserial fwcfg packaging Q35) do (\n  echo building also %%D\n  pushd %%D\n  call buildAll.bat\n  if errorlevel 1 goto :fail\n  popd\n)\n\nfor /R %%f in (*.dvl.xml) do call :process_xml %%f\n\nexit /B 0\n\n:fail\n\nexit /B 1\n\n:process_xml\necho creating \"%~dpn1-compat%~x1\"\nfindstr /v /c:\"General.Checksum\" \"%~1\" | findstr /v /c:\".Semmle.\" > \"%~dpn1-compat%~x1\"\ngoto :eof\n"
        },
        {
          "name": "build_AllNoSdv.bat",
          "type": "blob",
          "size": 0.0654296875,
          "content": "@echo off\nsetlocal\nSET _BUILD_DISABLE_SDV=Yes\ncall buildAll.bat %*\n"
        },
        {
          "name": "clean.bat",
          "type": "blob",
          "size": 1.109375,
          "content": "@echo off\nif \"%~1\"==\"-quiet\" (set loglevel=0)\nif \"%~1\"==\"-debug\" (set loglevel=2)\nif \"%~1\"==\"\" (set loglevel=1)\nset _cln_tgt_=Repo Root\nset _cln_subdirs_=NetKVM viostor vioscsi VirtIO Balloon vioserial viorng vioinput viofs pvpanic viosock viogpu viomem viocrypt ivshmem pciserial Q35 fwcfg fwcfg64\necho Cleaning %_cln_tgt_% ...\ncall .\\build\\clean.bat %*\necho.\ncall :subdir %_cln_subdirs_%\necho CLEANING COMPLETE.\ngoto :eof\n\n:subdir\nif \"%~1\"==\"\" goto :eof\ncall :do_clean %1\nshift\ngoto :subdir\n\n:do_clean\nif not exist \"%~dp0%~1\" (\n  echo The %~1 directory was not available for cleaning.\n  echo.\n  goto :eof\n)\npushd \"%~dp0%~1\"\nif exist \".\\cleanall.bat\" (\n  echo Cleaning %~1 ...\n  call cleanall.bat\n) else (\n  if exist \".\\clean.bat\" (\n    echo Cleaning %~1 ...\n    call clean.bat\n  ) else (\n    if exist \"..\\..\\build\\clean.bat\" (\n      echo Cleaning %~1 ...\n      call ..\\..\\build\\clean.bat\n    ) else (\n      if exist \"..\\..\\..\\build\\clean.bat\" (\n        echo Cleaning %~1 ...\n        call ..\\..\\..\\build\\clean.bat\n      ) else (\n        echo A cleaner for the %~1 directory could not be found.\n      )\n    )\n  )\n)\necho.\npopd\ngoto :eof\n"
        },
        {
          "name": "contributing.md",
          "type": "blob",
          "size": 3.966796875,
          "content": "# Contributing to virtio-win\n\nWe love your input! We want to make contributing to this project as easy and transparent as possible, whether it's:\n\n- Reporting a bug\n- Discussing the current state of the code\n- Submitting a fix\n- Proposing new features\n\n## We Develop with Github\nWe use GitHub to host code, to track issues and feature requests, as well as accept pull requests.\n\n## We Use [Github Flow](https://guides.github.com/introduction/flow/index.html), So All Code Changes Happen Through Pull Requests\nPull requests are the best way to propose changes to the codebase (we use [Github Flow](https://guides.github.com/introduction/flow/index.html)). We actively welcome your pull requests:\n\n1. Fork the repo and create your branch from `master`.\n2. If you've added code that should be tested, add tests.\n3. If you've added new driver, changed usage, or made some nontrivial changes - update the documentation.\n4. Ensure the test suite passes.\n5. Don't forget to add \"Signed-off-by: Your Name <your@email_domain.com>\" line in the commit message.\n6. If you are a Red Hat contributor, you must include [BZ](https://bugzilla.redhat.com) number in the commit message\n7. Prefix commit messages with the affected component. For example: \"NetKVM: BZ#1234567: implementing dynamic NDIS version support\".\n8. Issue that pull request!\n\n\n## Any contributions you make will be under the BSD 3-Clause License\nIn short, when you submit code changes, your submissions are understood to be under the same [BSD 3-Clause License](https://github.com/virtio-win/kvm-guest-drivers-windows/blob/master/LICENSE) that covers the project. Feel free to contact the maintainers if that's a concern.\n\n## Report bugs using Github's [issues](https://github.com/virtio-win/kvm-guest-drivers-windows/issues)\nWe use GitHub issues to track public bugs. Report a bug by [opening a new issue](https://github.com/virtio-win/kvm-guest-drivers-windows/issues/new); it's that easy!\n\n## Write bug reports with detail, background, and sample code\n**Great Bug Reports** tend to have:\n\n- A quick summary and/or background\n- Steps to reproduce\n  - Be specific!\n  - Give sample code if you can.\n- Driver version or commit hash that was used to build the driver\n- QEMU command line\n- What you expected would happen\n- What actually happens\n- Notes (possibly including why you think this might be happening, or stuff you tried that didn't work)\n\nPeople *love* thorough bug reports.\n\n## Use a Consistent Coding Style\n\n* We use clang-format tool to check code style.\n* In project we have two different code style:\n   - Style config file for Windows driver /.clang-format\n   - Style config file for VirtIO library /VirtIO/.clang-format\n* To run code style check locally on Linux or Windows (with MSYS or cygwin) use `Tools/clang-format-helper.sh` helper\n   - on Linux helper uses `clang-format-16` from PATH (because EWDK Win11 24H2 contains clang-format version 16.0.5)\n   - on Windows helper uses `clang-format` from EWDK Win11 24H2\n   - CLI:\n      - For all Windows drivers\n      ```bash\n      bash Tools/clang-format-helper.sh check '.' '' './VirtIO'\n      ```\n      - For VirtIO library\n      ```bash\n      bash Tools/clang-format-helper.sh check 'VirtIO' '' ''\n      ```\n* Tools/clang-format-helper.sh uses positional arguments\n   1. Action: `check` or `format`\n   1. Directory where needs to check format\n   1. Path to .clang-format file (default: `${2}/.clang-format`)\n   1. Exclude regexp (default: `^$`)\n   1. Include regexp (default: `^.*\\.((((c|C)(c|pp|xx|\\+\\+)?$)|((h|H)h?(pp|xx|\\+\\+)?$)))$`)\n\n   - To use default just put '' as argument\n\n## HCK\\HLK tests\n* The contributions should pass Microsoft certification tests. We are running CI to check that the changes in the pull request can pass. If you submit a lot of PRs, you can setup AutoHCK on your premises to test your code changes: [auto-hck setup](https://github.com/HCK-CI/HCK-CI-DOCS/blob/master/installing-hck-ci-from-scratch.txt)\n\n## License\nBy contributing, you agree that your contributions will be licensed under BSD 3-Clause License.\n"
        },
        {
          "name": "fwcfg",
          "type": "tree",
          "content": null
        },
        {
          "name": "fwcfg64",
          "type": "tree",
          "content": null
        },
        {
          "name": "ivshmem",
          "type": "tree",
          "content": null
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "pciserial",
          "type": "tree",
          "content": null
        },
        {
          "name": "pvpanic",
          "type": "tree",
          "content": null
        },
        {
          "name": "rmwhite.rb",
          "type": "blob",
          "size": 1.9609375,
          "content": "#\n# Remove trailing white spaces recursively from the file or directory\n#\n# www.yvtechnologies.com\n#\n\n# This function remove trailing white spaces from the single file\n#\n# Parameters:\n# * file - file to clean from trailing whitespaces\ndef rmwhite_file(strfile)\n  print(\"Cleaning: \" + strfile + \"\\n\")\n  \n  # Read the file\n  begin\n    lines = File.open(strfile).readlines()\n  rescue\n    print(\"Cannot open: \" + strfile + \"\\n\")\n    return\n  end\n  \n  # Write back\n  begin \n    File.open(strfile, \"w\") do |file|\n      lines.each { |line| file.puts(line.rstrip()) }\n    end\n  rescue => e\n    print(e.class.to_s + \": Cannot write back to: \" + strfile + \"\\n\")\n  end\nend\n\n# This function executes clean up of file or directory\n#\n# Parameters:\n# * file - file or directory path\n# * patterns - file pattern to search\ndef rmwhite_file_or_dir(file, patterns)\n  if(File.directory?(file))\n    current_dir = Dir.pwd()\n    Dir.chdir(file)  \n#    print (\"changed dir to: \" + file + \"\\n\")\n    rmwhite_directory(file, patterns)\n    Dir.chdir(current_dir)\n#    print (\"changed dir to: \" + current_dir + \"\\n\")\n  else\n    rmwhite_file(file)\n  end\nend\n\n# Recursive function that walks over all directories and files according to the predefined pattern\n#\n# Parameters:\n# * file - file or directory path\n# * patterns - file pattern to search\ndef rmwhite_directory(dir, patterns)\n  printf(\"Cleaning: \" + dir + \"\\n\")\n    \n  patterns.each do |pattern|\n #   print(\"Cleaning pattern: \" + pattern + \"  current dir:\" + Dir.pwd() + \"\\n\")\n    arr_entries = Dir[pattern]\n    arr_entries.each { |entry| rmwhite_file_or_dir(entry, patterns) }\n  end\nend\n\nif((str_file = ARGV[0].to_s) == \"\")\n  str_file = \".\"\nelse\n  str_file = ARGV[0].to_s\nend\n\n# File patterns that will be cleared from white spaces\nFILE_PATTERNS = [\"*.txt\", \"*.rc\", \"*.c\", \"*.h\", \"*.cpp\", \"*.vbs\", \"*/\"]\n\nif(not File.exist?(str_file))\n  print \"error: file doesn't exits\\n\"\n  exit -1\nend\n\ncurrent_dir = Dir.pwd()\nrmwhite_file_or_dir(str_file, FILE_PATTERNS)\nDir.chdir(current_dir)\n"
        },
        {
          "name": "status.txt",
          "type": "blob",
          "size": 56.1611328125,
          "content": "Date    22 Apr 2020\ntag     mm201\n\nFixed bugs:\n\nBZ#1821560: [viostor] driver does not return correct serial number length.\n\nNew Features:\n\n[vioscsi] introduce the registry key to make munber of physical breakes adjustable\n\nDate    19 Feb 2020\ntag     mm200\n\nFixed bugs:\n\nBZ#1802452: [vioscsi] WMI facility check virito-scsi num_queues failed\n\nDate    12 Feb 2020\ntag     mm199\n\nFixed bugs:\n\nBZ#1794609: [vioserial] Fix error flow on Write request\nBZ#1553633: [balloon] process the ISR status at startup\n    \nDate    22 jan 2020\ntag     mm198\n\nFixed bugs:\n\nBZ#1791147: [vioscsi]: BSOD when running Bus Reset Test\nBZ#1791153: [netkvm]: avoid crash on second virtqueue shutdown\n    \nDate    10 Jan 2010\ntag     mm197\n\nNew Features:\nRemove WinXP. WNET and Win7 from the list of build targets since we have no vailed SHA-1 certificate anymore.\n\nDate    9 Jan 2020\ntag     mm196\n\nFixed bugs:\n\nBZ 1787022: [vioscsi] Windows virtio-scsi driver performs poorly when reading/writing big data blocks.\nBZ 1788042: [balloon] synchronize ReleaseHardware with EvtFileClose\n    \nNew Features:\nPacked ring support. \n\nDate    19 Dec 2019\ntag     mm195\n\nFixed bugs:\n\nBZ 1783906: [virtio-wdf]  \n    VirtIOWdfDeviceFreeDmaMemoryByTag can be called when the device\n    failed the initialization of Wdf DMA API. Do not do anything\n    in such case.\n\nBZ 1783953: [virtio-wdf]\n    Wrong KMDF version during library compilation causes\n    failure in initialization of DMA enabler.\n\nBZ 1783880: [vioserial}]\n    Wrong command length causes loss of functionality of x86 driver.\n\n\nDate    12 Dec 2019\ntag     mm194\n\nFixed bugs:\n\nBZ 1745818: [netkvm] Remove TestOnly.RXThrottle parameter from INF\n\nNew Features:\n\nAdded code for IOMMU support\n\n\n\nDate    07 Jun 2019\ntag     mm192\n\nFixed bugs:\n\nBZ 1672541: [virtio-win] No need for appveyor yaml for the project\n\nNew Features:\n\nnetkvm: Increase timeout of control command completion\nviostor: add preliminary support for discard (unmap) command\nvioinput: Fix mistakes in commit 4c9942754912\nnetkvm: RSC support according to virtio spec\n\nDate    12 Apr 2019\ntag     mm191\n\nFixed bugs:\n\nBZ 1691209: [virtio-win] SDV/DVL related fixes\n\n\nDate    10 Apr 2019\n\nBack to upstream track\n\nFixed bugs:\n\nBZ 1691209: [viostor][vioscsi] SDV/DVL related fixes\n\n\nDate    5 Mar 2019\n\nBugs:\n\nBZ 1666940: [netkvm] Fix functionality with single MSIX vector\nBZ 1549577: [virtio-wdf] Check physical memory allocation in virtio library for NULL\nBZ 546821: [Balloon] device hot-unplug fails when service is running\n\nDate    10 Dec 2018\n\nBugs:\n\nBz 1428641: [viostor] Windows guest physical block size change to 512 after installation with the size 4096\nBZ 1633087: [viostor] experimental fix - incorrect virtio-win driver version shown in sigverif log file\n\nNew Features:\nnetkvm: add project directory to include path\nnetkvm: return queued TX packets on hot unplug\nnetkvm: split code of DoPendingTasks to allow code reuse\nnetkvm: introduce 'kill' flow of TX queue\nnetkvm: split ReleaseTransmitBuffers code to allow code reuse\nviostor: add placeholder for VPD_BLOCK_LIMITS (0xB0) VPD page reporting\n\n\nDate    18 Oct 2018\ntag     mm182\n\nBugs:\n\nBZ 1546821: [balloon] use universal api in window 10 build\n\nNew Features:\nviostor: handle VERIFY(16) requests properly\nnetkvm: set proper checksum info when indicating coalesced packets\nnetkvm: fix support for speed/duplex configuration\nnetkvm: Calculate number of coalesced segments correctly\nNetKVM: Implement VIRTIO_CONFIG_S_NEEDS_RESET as needed by spec\n\n\nDate    02 Aug 2018\n\nBugs:\n\nBZ 1609228: [vioscsi] Fix for  guest can not generate dump file regression\n\n\nDate    29 Jul 2018\n\nBugs:\n\nBZ 1599631: [NetKVM] Revert \"NetKVM: Set AffinityPolicy to IrqPolicySpecifiedProcessors\"\n    \n\nDate    25 Jul 2018\n\nBugs:\n\nBZ 1607275: [viostor] win2008 viostor driver loading failed during guest installation when -smp>2\n\n\nDate    11 Jul 2018\n\nNew Features:\n\nviostor always report SCSI_ADSENSE_NO_SENSE as ascq on write-protected media'\n\nDate    04 Jul 2018\n\nBugs:\nBZ#1577708: NetKVM Fix E2EPerf WHQL test failure\n\nDate    03 Jul 2018\n\nNew Features:\n\nviostor: rework SRB_FUNCTION_PNP handler to report device as removable\nNetKVM:  PathBundle: Don't call destructor for RX/TX\nNetKVM:  Observee: Make list countable\nvioscsi: Fix bug in vq notification path\n\nDate    12 Jun 2018\n\nBugs:\nBZ 1569329: [virtio-win] copyright show 2017 in all inf, sys, license files\n\nWPP for virtio-scsi and virtio-blk evice drivers\nNetKVM: TX: Drop heavy DPC scheduling\nviostor fix bsod when only one vq is active (BZ#1566298 comment#24)\n\n\nDate    25 May 2018\n\nBugs:\nBZ 1566298: [viostor] unattended installation failure on unpartitioned image when using virtio_blk\n\nNew Features:\n\nNetKVM: Fixing behaviour when VIRTIO_NET_F_STATUS is off\nviostor: move sgl to SRB extension\nviostor: redesign vq lock/unlock routines\nNetKVM: Log interrupt vector to CPU mapping\nNetKVM: Set AffinityPolicy to IrqPolicySpecifiedProcessors\nNetKVM: Correctly assign vecotrs to CPUs\n\n\nDate    26 Apr 2018\n\n\nBZ 1568739: [vioscsi] Fix for Bug 1568739 - Win7/win2008 guest BSOD after the first\n    reboot when installing os with virtio_scsi\n\nDate    17 Apr 2018\n\nBugs:\nBZ 1539256: [vioscsi] to support ACK of VIRTIO_F_IOMMU_PLATFORM\nBZ 1530210: [viostor] to support ACK of VIRTIO_F_IOMMU_PLATFORM\nBZ 1549587: [NetKVM] to support ACK of VIRTIO_F_IOMMU_PLATFORM\nBZ 1549577: [virtiovib] Add VIRTIO_F_IOMMU_PLATFORM feature bit definition\n\n\nNew Features:\n\nWPP for viorng, balloon, input, and serial.\nStorage Request Block SRB type for viostor.\nIncreasing the size of queue depth for vioscsi.\n\nDate    20 Mar 2018\n\nBugs:\n\nBZ 1551918: [viorng] Lack of viorng* files in virtio-win-prewhql-0.1-148\n\nDate    06 Mar 2018\n\nBugs:\n\nBZ 1549455: [viostor] Event ID: 158 is logged on Win10/WS2016 when two or more virtio-blk disks attached to VM\nBZ 1537430: [NetKvm] Import LinkSpeed/Duplex configs from the hypervisor\nBZ 1351089: [NetKvm] Don't set MAC address using configuration space in virtio 1.0 device\n\nNew Features:\nAll drivers for Windows 10 will be built for \"Universal\" target platform\n\nDate    04 Dec 2017\n\nRevert\n\nVirtio: Use Publish indices according to spec\nVirtioRing: Don't enable event suppression by default\n\n\nDate    03 Dec 2017\n\nFixed bugs:\nBZ 1168064: [viostor]Resuming guest from S4 with 'readonly = on' within CLI will induce improper results.\nBZ 1518095: [viostor] Online enlarging data image size does not work properly \n\nNew Features:\n\nvioscsi: partial implementation of MS_SM_PortInformationMethods class methods\nvioserial: Send VIRTIO_CONSOLE_PORT_OPEN (0) on port D0 exit\nNetKVM: Fix TX OID_GEN_TRANSMIT_QUEUE_LENGTH stats reported to Windows\nVirtio: Use Publish indices according to spec\nVirtioRing: Don't enable event suppression by default\nNetKVM: Use NdisGetSharedDataAlignment to align miniport's adapter con\n\nDate    14 Nov 2017\n\nFixed bugs:\nBZ 1480139: [virtio-win] Switch to BSD license\n\nNew Features:\n\nVirtIO: Change vp_notify debug print to a higher level\nNetKVM: Handle case where we have 2 msi vectors\nNetKVM: Use correct function name in debug print\nNetKVM: Remove unused DPrintf parameter\nballoon: Add missing spin lock release to error path\nballoon: Don't call virtqueue_notify while holding queue locks\nserial: change timeout for KeDelayExecutionThread\nserial: Replace KeStallExecutionProcessor with KeDelayExecutionThread\nserial: remove unused variable\nNetKVM: TX: Kick ring when full\nserial: remove RETRY_THRESHOLD limit from c_ovq poll loop\nviostor/vioscsi: Changes to keep \"Static Driver Verification\" (SDV) happy.\nNet-KVM: Fix a typo in the configuration entry settings\nNet-KVM: Fix a typo\nballoon: Don't create invalid VARIANTs\nvioscsi: Eliminate MSI_SUPPORTED\nvioscsi: Eliminate INDIRECT_SUPPORTED\nviostor: Eliminate INDIRECT_SUPPORTED\n\n\nDate    10 Aug 2017\n\nNew Features:\nSwitch to BSD license\n\nDate    20 Jul 2017\n\nFixed bugs:\n\nBZ 1458626: [NetKVM] Send clone of original announcement NBL\n    \n\nDate    04 Jul 2017\n\nFixed bugs:\n\nBZ 1451978: [NetKVM] latest virtio driver (network) for Windows drops lots of packets \n\n\nDate    01 Jun 2017\n\nFixed bugs:\n\nBZ 1456403: [NetKVM] Implement MTU report feature of the virtio-net device\nBZ 1455488: [vioser][ovmf] Guest occured BSOD when hotunplug virtio-serial-pci.\n\n\nDate    22 May 2017\n\nFixed bugs:\n\nBZ 1393772: [smbus] Add null driver for SM Bus Controller\n\nDate    10 May 2017\n\nFixed bugs:\n\nBZ 1443019: [pciserial] Add a pci-serial (1x only) .inf for RHEL\nBZ 1438410: [NetKVM]    Add VlanId property to no_RSS and no_RSC Inf files\n\nDate    30 Apr 2017\n\nFixed bugs:\n\nBZ 1369353: [balloon] backport available memory stat support. Trying to mimic what si_mem_available \n            does in Linux. AvailPhys is the sum of memory in free, zero and standby list.CacheBytes \n            is the current size of the system file cache.\nBZ 1442322: [viostor] Cannot enlarge/shrink disk with virtio-blk-pci device.\nBZ 1438410: [NetKVM] Add VlanId property to Inf file\n\n\nDate    27 Mar 2017\n\nFixed bugs:\nBZ 1419900: [vioser] BSOD of vioser.sys on Win10 in S0->S4->S0 flow\n\nDate    14 Mar 2017\n\nFixed bugs:\n\nBZ 1429807: [netkvm] guests bsod(d1) when running job \"NDISTest 6.0 - [1 Machine] - 1c_FaultHandling\"\n\n\nDate    26 Feb 2017\n\nFixed bugs:\n\nBZ 1303510: [virtio-win] Change the copyright on all the Windows drivers to \"2017\" in virtio-win-prewhql build\n\nNew Features:\n\nNetKVM: Implement VIRTIO_NET_F_GUEST_ANNOUNCE feature\nNetKVM: Make miniportShutdown return immediately on \"NdisShutdownBugCheck\"\n\n\nDate    12 Feb 2017\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm152\n\nFixed bugs:\n\nBZ 1369353: [balloon] backport available memory stat support\nBZ 1419785: [balloon] Guest WIN8-32 occured BSOD in job \"DF - PNP Stop (Rebalance) Device Test (Certification)\"\n\nNew Features:\npvpanic: Add IOCTL_GET_CRASH_DUMP_HEADER\nvioinput: Use viohidkmdf.sys instead of mshidkmdf.sys\n\n\nDate    29 Jan 2017\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm151\n\nFixed bugs:\nBZ 1403550: [viostor] Add multi-queue support \n\nNew Features:\n\nviostor: WinXP related code has been removed.\n\n\nDate    15 Jan 2017\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm150\n\nFixed bugs:\nBZ 1395790: [vioscsi] BSOD when adding CPU to live Windows Server 2012R2 guest\nBZ 1410964: [viostor] 4K virtual drives broken on Windows\n\nNew Features:\n\nNetKVM: Fix 1c_IOCTLCoverage test failure\nNetKVM: Fix RX kick timing\nvioscsi: Fix verifier and debug spew due to worker exiting with affinity set. By default the workers have no affinity. We set it to the specific cpu, but KeSetSystemAffinityThreadEx returns 0, as there was no affinity. You still have to KeSetSystemAffinityThreadEx before you exit and reset it back to 0.\nballoon: Fix completion-cancellation races\nnetkvm: Optimize checksum routine on 64-bit\n\n\nDate    15 Dec 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm149\n\nNew Features:\n\nNetKVM Return correct info for OID_TCP_OFFLOAD_PARAMETERS\nBalloon: Fix blnsvr race conditions\nNetKvm: Support WMI commands\nNetKvm: Use fewer virtio receive SG descriptors\nNetKvm: Fix race of changing of RSS parameters and TX\nvirtiolib: Fix uninitialized variable in VirtIOWdfFinalizeFeatures\n\n\nDate    02 Nov 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm148\n\nFixed bugs:\nBZ 1389445: [virtiolib] VirtIO definition of bool as int used by all drivers\n            that use VirtIO library, except (currently) netkvm which is C++\n            and uses bool as fundamental C++ type.\nBZ 1389125: [viostor] - extend viostor driver with STORAGE_REQUEST_BLOCK support\n\nNew Features:\nNetKVM performance optimization\nfwcfg: Rename driver files fwcfg -> qemufwcfg\n\nDate    25 Oct 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm147\n\nNew Features:\nNew build system\n\nDate    10 Aug 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm146\n\nNew Features:\nNetKVM fix SDV problems\nDebug targets\n\nDate    04 Aug 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm145\n\nFixed bugs:\n\nBZ 1361501: [Balloon] fix \"vcruntime120.dll is missing\"\nBZ 1359626: [NetKVM] RSC and RSS parameters should be set according to OS version\n\n\nDate    29 Jul 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm144\n\nFixed bugs:\nBZ 1356363: [viorng] cannot install viorng driver on win2008-32/64 (build 122)\nBZ 1352432: [vioscsi] Win2012-64&R2 guest occurred bsod(d1) when whql test DPWLK- Hot-Replace - Device Test \n            - Verify driver support for D3 power state\nBZ 1358125: [viostor] Virtio 1.0 driver didn't work on win10 with q35 machine type\n\nDate    25 Jul 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm143\n\nFixed bugs:\n\nBZ 1349724: [viostor] fix bus reset. related to Bug 1349724 - [virtio-win][viostor][whql] \n            cannot pass whql test Bus Reset Test on win2008R2\nBZ 1246993: [virtio-win]  add Server10 to the Windows version list. fix for Bug 1246993\nBZ 1356422: [virtiolib] fix 'code integrity checks' verifier crash\n\nNew Features:\nEnable RSC in INF file\nEnable dynamic RSC offload based on QEMU implementation\nUse new RSC information fields in virtio_net_hdr_v1\nAdd RSC related definitions based on virtio 1.0 spec to virtio_net.h\n\n\nDate    12 Jul 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm142\n\nFixed bugs:\n\nBZ 1352517: fix bsod on several pnp whql tests (again).\nBZ 1352809: [viorng] wrong dervier version for virtio-win-prewhql-121\nBZ 1352432: [vioscsi] Win2012-64&R2 guest occurred bsod(d1) when whql test DPWLK- Hot-Replace\nBZ 1234741: [vioscsi] win2012 guest bsod(c9) when whql test DPWLK-HotAdd(1104) job\n\nDate    28 Jun 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm141\n\n\nDate    22 Jun 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm140\n\nAdding missed bits after sync with Win10 branch.\n\nDate    21 Jun 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm139\n\nNew Features:\nSync with Win10 branch\n\nDate    30 May 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm138\n\nFixed bugs:\nBZ 1293249: [Balloon] Fix IOCTL_GET_INFORMATION regression\n\nNew Features:\nEnable RSC\nFix IPv6 offload support with SLIRP\nFix MPE HCK test problems\n\nDate    08 Apr 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm137\n\nFixed bugs:\nBZ 1321903 [vioscsi]:  Windows 10 Installer stuck at Getting files ready for installation with Virtio SCSI\n\nNew Features:\nTrying out the new build system.\n\nDate    18 Feb 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm135\n\nNew Features:\nvioserial - code rework and cleanup\ngeneral - switching signing back to SHA-1\n\nDate    04 Feb 2016\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm133\n\nFixed bugs:\n\n\nBZ 1303510: [virtio-win] Change the copyright on all the Windows drivers to \"2016\" in virtio-win-prewhql build\nBZ 1122364: [vioserial] Complete pending write request on port removal\nBZ 1296099: [vioserial] Fix race in read cancellation logic\nBZ 1293249: [vioserial] Fix IOCTL_GET_INFORMATION,\n\n\nNew Features:\nvioserial - add simple benchmarking tool\nballoon - fix memory statistics reporting\n\nDate    15 Dec 2015\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm132\n\nFixed bugs:\n\nBZ 1284769: [viostor] Windows XP installer stucks installing with virtio-drivers\nBZ 1245957: [viostor] [WHQL][viostor][data-plane]it could not generate dump file on WIN2008-32/64 via WLK while running Crash Dump job\nBZ 1289406: [vioser] Cannot install vioser driver successfully\n\n\nNew features:\nRedesigned lock and unlock routines for vioscsi device driver.\n\nDate    18 Nov 2015\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm131\n\nFixed bugs:\n\n\nBZ 1013336: NetKVM: BSoD occurs when running NDISTest6.5 -[2 Machine] - MPE_Ethernet job on windows 2012 (Win10)\nBZ 1273791: NetKVM: Do not touch control queue before status VIRTIO_CONFIG_S_DRIVER_OK is raised\nBZ 1270149: NetKVM: Check guest network link status of virtio nic with status=on failed (build 110)\nBZ 1263193: NetKVM: BSoD occurs when boot the win2012R2 guest with \"-smp 64\"(netkvm driver installed)\nBZ 1256626: NetKVM: windows guest(win7/win10) CTRL_VLAN=on/off does not support for virtio-net-pci\n\nNew features:\n\nSome changes toward virtio 1.0 support.\nRedesigned cpu to vq mapping mechanism for vioscsi device driver.\nAdded support for STORAGE_REQUEST_BLOCK handling for vioscsi device driver.\n\nDate    10 Aug 2015\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm129\n\nFixed bugs:\n\nBz 1250854 [vioscsi]The job named crash dump failed on windows 2008 -32/64 platform\n\nDate    01 Aug 2015\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm128\n\nFixed bugs:\n\n\nBZ 1183423#c10 Change the copyright on all the Windows drivers to \"2015\" in virtio-win-prewhql build\nBZ 1248977 - [virtio-win][vioscsi] Cannot install vioscsi driver on win7-32&win2008-32 with build107\n\n\nDate    30 Jul 2015\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm127\n\nFixed bugs:\n\nBZ 1234751 [virtio-win][vioscsi]win2012R2 guest bsod(d1) when whql test DPWLK-HotAdd(1104) job\nBZ 1234741 [virtio-win][vioscsi]win2012 guest bsod(c9) when whql test DPWLK-HotAdd(1104) job\nBZ 1234507 vioserial crash due to completing a cancellable request\n\n\nDate    21 Jul 2015\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm126\n\nFixed bugs:\n\nBZ 1237024  NetKVM Fix payload length calculation in IPv6 header\nBZ 1183423  Change the copyright on all the Windows drivers to \"2015\" in virtio-win-prewhql build\nBZ 1243229  [virtio-win][scsi][windows 10]win10 and win2016 guests bsod with D1 when run job \"Bus Reset Test\"\nBZ 1217799  Distribute *.oem, LICENSE, COPYING in -prewhql build\nBZ 1228967  [virtio-win][whql][viostor]job \"Flush Test\" failed on all guests with build 105\n\n\nDate    03 Jun 2015\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm125\n\nFixed bugs:\n\nBZ 1223426 NetKVM Fix for performance degradation with multi-queue\nBZ 1227164 viostor/vioscsi is not digital signed by Redhat\n\n\nDate    24 May 2015\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm124\n\nFixed bugs:\n\nBZ 1214568 vioscsi Add WMI facility to check the virito-scsi mq enabled\nBZ 1172920 vioser  bsod on shutdown after device was unplugged\nBZ 954183  NetKVM  Clean-up SDV run results during clean.bat execution\nBZ 1067249 balloon device can't be removed when service is running\nBZ 1190960 NetKVM  [mq]job failed due to \"Received some net buffer lists out of order\" w/ 4 queues\nBZ 1067225 viostor Windows guest performing out-of-bounds accesses on virtio device\nBZ 1195487 viostor Windows guest performing out-of-bounds accesses on virtio device\n\nNew features:\nFixed VS2015 compilation warnings.\n\nDate    12 Apr 2015\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm123\n\nFixed bugs:\n\nBZ 1210166 vioscsi - Add multiqueue support to Windows virtio-scsi driver.\nBZ 996479  pvpanic - RFE:pvpanic driver for windows guest\nBZ 954183  NetKVM - Static driver verifier fails with NetKVM\nBZ 1190960 NetKVM - job failed due to \"Received some net buffer lists out of order\" w/ 4 queues \nBZ 1190968 NetKVM - job \"NDISTest 6.0 - [1 Machine] - 1c_Mini6RSSOids\" last for hours and never stop w/ 4 queues\n\n\nDate    10 March 2015\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm122\n\nFixed bugs:\n\nBZ 1195920 virtio-scsi - Windows 2012 R2 using virtio-scsi driver with Direct LUNs causes BSODs\nBZ 1183423 NetKVM - Change the copyright on all the Windows drivers to 2015. Missed part\nBZ 954183  NetKVM - Static driver verifier fails with NetKVM\n\n\nDate    2 March 2015\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm121\n\nFixed bugs:\n\nBZ 1188790 NetKVM: Freeing SG list on detaching internal object: it is illegal to free SG list after TX packets acknowledgment\nBZ 1136602 NetKVM: Free spinlocks on failure\nBZ 1183423 [common] - Change the copyright on all the Windows drivers to 2015\nBZ 1184430 [viostor] - enable event index feature in Windows virtio-blk driver\nBZ 1067225 [viostor] - Windows guest performing out-of-bounds accesses on virtio device\n\nNew Features:\n\nAdd a test wrapper for iperf\n\nDate    13 Jan 2015\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm120\n\nFixed bugs:\n\nBZ 1147239: NetKVM NetKVM with 2012R2 fails the HCK tests\n\nDate    08 Jan 2015\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm119\n\nFixed bugs:\n\nBZ 1142737: interface status is '2', but expect status is '7' after set_link NIC off\nBZ 1177063: Balloon fixed bsod on s3/s4 when service was running.\nBZ 1159754: Nic device doesn't work when guest is running in IRQ mode \nBZ 1067249: Balloon fix a regression caused by f542c3f1.\n\nBZ 1154419: NetKVM NetKVM fails HCK test for 2008R2, single CPU\nBZ 1169718: NetKVM Checking the length only on read\n\nBZ 1173323: NetKVM iperf stalls the NetKVM driver\nBZ 1154420: NetKVM ParaNdis6_SendNetBufferList\nBZ 1147239: NetKVM NetKVM with 2012R2 fails the HCK tests\n\nDate    04 Dec 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm116\n\nFixed bugs:\n\nBZ 1168483 NetKVM: Setting minimal MTU value to 576\nBZ 1167231: balloon: stop service on shutdown notification.\nBZ 1158013: RNG: fix device's hardware id\n\nDate    01 Dec 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm115\n\nFixed bugs:\n\nBZ 1151912: RNG fix whql failure due to registeration error.\nBZ 1154419: NetKVM  Memory corruption in RSS->queue mapping.\n\nRNG: replaced message box with setup api logging.\nNetKvmCo: fix setting string registry keys.\n\nDate    19 Nov 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm114\n\nFixed bugs:\n\nBZ 1156259: Win7-64 guest BSOD(0x000000A0) when doing s4 \n\n\nDate    30 Sep 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm113\n\nFixed bugs:\n\nBZ 1123288: NetKvm Freeing shared memory on control queue destruction\nBZ 1091867: RNG fix 64-bit coinstaller build.\n\nDate    17 Sep 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm112\n\nFixed bugs:\n\nBZ 1139509: ALL Should use Uniformed string in Manufacturer fields on all drivers\nBZ 1136606: NetKVM testing MessageInfoTable for nullness in debug printout\nBZ 1119966: NetKVM Unconditionally initialize RSSParameters lock\nBZ 1096505: NETKVM disabling warning for KeBugCheck for debug build\nBZ 1091867: RNG initial import of the viorng coinstaller.\n\n\nDate    02 Sep 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm111\n\nFixed bugs:\n\nBZ 1136023: NetKVM fix for do { } while(0) in macro under Visual C++\nBZ 1096505: NetKVM Implement multiqueue support in Windows guest driver\nBZ 954183:  NetKVM SAL annotations\n\nDate    25 Aug 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm110\n\nFixed bugs:\n\nBZ 1130853: Balloon fix bsod on several pnp whql tests.\nBZ 1121933: Balloon NetKvm check for VIRTIO_F_ANY_LAYOUT feature before using optim\nBZ 1113910: fix bsod when hotplug device in a loop (w/ verifier).\nBZ 922014: pcoserial Add build procedure for pciserial INF.\n\n\nDate    4 Aug 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm109\n\npull from https://github.com/iuliur/kvm-guest-drivers-windows/commits/master\n\n\nDate    29 Jul 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm108\n\nFixed bugs:\n\nBZ 1066808: balloon fix old stats rema\nBZ 1081436: viorng  fix bsod after resuming\nBZ 1116573: viorng  use wdf 1.9 for old\nBZ  950611: NetKvm  Disable RSC until host suppor\n\n\nDate    08 Jul 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm107\n\nFixed bugs:\n\nBZ 1096505: NetKVM Cosmetic fixs - tab removed with spaces\nBZ 1112712: NetKVM Initialize CVirtQueue first before making internal calculati\nBZ 1051886: NetKVM  Fix linker options for Vista\\Windows Server 2008.\nBZ 1109027: NetKVM  Fix empty friendly name if only one adapter is present\nBZ 1082999: Balloon add device events handling.\n\nNew Features:\n\nnew inverted-call write-to-device method.\n\nDate    04 Jun 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm106\n\nFixed bugs:\n\nBZ 1103100 - Fix WDK library linkage with Windows Vista\\Windows Server 2008 build.\n\nDate    28 May 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm105\n\nFixed bugs:\n\nBug 1096505 [netkvm] packet submission refactoring\nBug 1100308 [netkvm] Fixing DPC suspend flag race condition\nBug 1054640 [netkvm] On cotext destruction, return to the unused queue buffers,\n                     retained in per-processor queue but not submitted to the upper layer\n\n\nDate    26 May 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm104\n\nFixed bugs:\n\nBZ 1098876 - post build step is failing and INF is not built correctly\n\n\nDate    13 May 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm103\n\nFixed bugs:\n\nBZ 1096505 [netkvm] Separate transmit path data from device context\nBZ 895834  [netkvm] Create netkvm.dvl.xml log as part of the build process\n\nNew features:\nNetKvm multi queue.\n\nDate    5 May 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm102\n\nFixed bugs:\n\nBug 1090832  [viorng] fix the wdfcoinstaller file name.\nBug 837324   [viostor] viostor reports support for FUA, but does not implement it.\n\nNew features:\nSwitch to VS2013 build system.\n\nDate    29 Apr 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm101\n\nFixed bugs:\n\nBug 1092348 viorng fix no viorngum.dll in amd64 folder.\nBug 1080320 balloon: memory stats remains after service was closed.\n\n\nDate    23 Apr 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm100\n\nFixed bugs:\n\nBug 1077566 [vioscsi] enable MSI as a default interrupt mode for virtio-scsi.\nBug 1080319 [balloon] win8.1-32 could use 3G memory in one guest but stat-total-memory only shows 2G\n\nFixed in build script:\nBug 1083805 [virtio-win][virtio-rng]WDFCoinstaller01001.dll is redhat signed\n\nNew features:\n\nDisable RSC for the release build.\n\nDate    9 Apr 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm99\n\nFixed bugs:\n\nBug 1080320: balloon. fix bsod which occurred on various scenarios.\nBug 1083810: virtio-rng. output directory for 64-bit builds goes to amd64.\nBug 1080731: virtio-rng. fix a provider registration error.\nBug 1083873: NetKvm  BSOD due to access to uninitialized control queue during power down \n             event on Windows XP and Windows Server 2003.\n\nDate    2 Apr 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm98\n\nNew features:\n\nright rng build scripts from Gal.\n\nDate    1 Apr 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm97\n\nFixed bugs:\n\nBug 868240 fix hck warnings on driver inf test\nBug 1079929 rng: fix a failed \"df - fuzz misc api\" whql test.\n\nDate    23 Mar 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm96\n\nNew features:\n\nAdd virtio-rng to build.\n\nDate    17 Mar 2014\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm95\n\nFixed bugs:\n\nBug 954183 Suppress false-positive SDV warning\nBug 954183 Tools: Added SDVTOOL script.\nBug 888694 serial: related to bz#888694: qga fails after resume from s3.\nBug 868240 serial & balloon fix hck warnings on driver inf test\nBug 921891 balloon improve ballooning's performance.\nBug 954183 NetKvm Driver pass static code analysis tools. Using out parameter \n           of the function without testing the retur\n\nDate    16 Oct 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm93\n\nFixed bugs:\n\nBug 1017529 - BSOD occurs when do I/O test on virtio\n    scsi driver.\nBug 908610 - change \"VirtIO SCSI Disk Device winxp/32-bit\"\n    to \"VirtIO BLOCK Disk Device Winxp/32-bit\" in txtsetup.oem\nBug 1013443 - Win7-64 guest installation with virtio-scsi BSOD\n\nNew features:\nMove pciserial.inf to a separate directory while building drivers\n\nDate    26 Sep 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm92\n\nFixed bugs:\n\nBug 1012200 PM_PowerStateTransition fails on Win8\n\nDate    24 Sep 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm91\n\nFixed bugs:\n\nBug 1003442 - 2c_receivepackets on win2k8 fixed\nBug 990007  - Include the .inf file to downloadable place\n    for windows guest to accept the pci serial device\nBug 1010687 - 2c_recvmulticast failed on WLK\nBug 926947  - online resizing doesn't work on system virtio-blk disk\nBug 927619  - BLNSVR service stops with event 7016 : the balloonservice\n    has reported an invalid current state 0\nBug 994377  - virtio-win-prewhql-66 scsi driver could not be installed on all platform\n\n\nDate    8 Sep 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm89\n\nFixed bugs:\n\nBug 1003158 - vioscsi.sys doesn't return scsi status codes correctly to guest OS\nBug 1001981 - [virito-win][scsi]Remove scsi support for win2k3\nBug 1000158 - blnsrv.exe is pegged at 100% cpu in windows guests\nBug 908610 - [virtio-win][vfd] change \"VirtIO SCSI Disk Device winxp/32-bit\" to \"VirtIO BL\nBug 1001616 - win7-64 guest bsod while enter s3/s4 state with virtio scsi\nBug 1002073 - Disable RSC support in the driver\n\n\nDate    27 Aug 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm88\n\nFixed bugs:\n\nBz#957328 add/del device failed if guest was reading from port.\nBz#996983 - Windows NT 6.x BSOD with virtio SCSI driver  since version 0.1.59\n\n\nDate    12 Aug 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm87\n\nFixed bugs:\n\nBZ#988302 fixing calling conventions and project definitions for 32bit OSes in \nBZ#993614 Windows 8 32 bit crashes during HCK MPE test (BSOD D1)\nBZ#858687 add a spin lock to the control queue.\n\nDate    30 Jul 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm86\n\nFixed bugs:\n\nBZ#889941 - [virtio-win][scsi] virtio_scsi driver performs bad during large buffers transfer\nBZ#950611 Guest offloads configuration via control queue\nBZ#978296 Incorrect link state indications in PM_PowerStateTransition\nBZ#982940 - Remove old hack for 1G adapter that internaly keeps the speed as 1001\n\nNew Features:\nMSI interrupts support for viocsi.\n\nDate    19 Jun 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm85\n\nFixed bugs:\n\nBZ#972310 - in case if the interrupt and the device was not initiali\n\nDate    3 Jun 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm84\n\nFixed bugs:\n\nBZ#967698 make sure the interrupts are disabled before cleaning up internal virtio structures\nbz#966809 Fix BSOD after resuming from hibernation.\nbz#951481 Implement an DeviceD0Entry callback.\n\nDate    27 May 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm83\n\nFixed bugs:\n\nBZ#958737 NDISTest 6.5 - E2EPerf job(1110) failed on win 2012 due to performance issue\n\nDate    21 May 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm82\n\nFixed bugs:\n\nbz#953812 add a cancel support to write requests.\n\n\nDate    13 May 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm81\n\nFixed bugs:\n\nBZ#956882 Crash in OID_GEN_NETWORK_LAYER_ADDRESSES handler - NDIS6\nBZ#958755 BZ#958751 Broken RX statistics fixed\nBZ#958715 RSS\\RSC related failures in NDISTest6.5-Standardizedkeywords - RSS fixes\nBZ#950633 Checksum verification fixed\nBZ#912926 BSOD on Sleep and PNP test in NDIS5 drivers\nBZ #889410 - TestOnly.UseSwTxChecksum parameter is removed\nBZ#956290 Race condition on surprise removal in XP/2003 driver\nBZ#957505 QEMU assertion on exit from S4 fixed\nBZ#957507 Crash on unload when control queue... \n\n\nDate    17 Apr 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm79\n\nFixed bugs:\n\nBz#927577 Job named Device Driver INF Verification Test. Second attempt\nBz#823818 rewrote the driver's write function.\nBz#902150 driver was unusable after sleep/suspend.\nBZ#950623 - Remove DPCChecker and related parameter from INF. Very old code testing for pending interrupt in case of hanged transfer. Not \tonly it is not relevant for newer OSes (MSI is used), but also if such case even exist - it should be fixed in QEMU.\nBZ#950617 Enable RSS for Windows 2008 R2 as well\nBZ#950509 - remote kdebugprint.h file from the project.\nBZ#951020 - Do not check VIRTIO_PCI_ISR when not needed.\nBZ#951070 - Fix debug printouts\nBz#823818 - resend write request using a work item.\nBZ#951070 - Fix debug printouts\nBz#946992 - [vrtio-win][virtio-scsi]update win8.64 guest's driver with virtio-win-prewhql-0.1-58 caused guest BSOD\nBZ#904934 - Configure MAC via control queue - refactoring\n\n\nDate    31 Mar 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm78\n\nFixed bugs:\n\n    BZ#927577 - [WHQL][serial]Job named Device Driver INF\n    Verification Test (Certification) failed on win8/win2k3/win2k8/ platform\n    BZ#922530 - code separation for NDIS5 and NDIS 6.x:\n    adjust NetKCM.yaml to point to correct build log for NDIS5.1\n\n\nDate    18 Mar 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm77\n\nFixed bugs:\n[NetKVM] BZ#904808 Initlal RSC implementation\n\n\nDate    18 Mar 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm76\n\nFixed bugs:\n[NetKVM] BZ#922530 Code split for NDIS5 and NDIS6\nNetKVM] BZ#921200 - Do not write to VIRTIO_PCI_ISR for\n    debug purposes in production code.\n\n[virtio-serial] BZ#806223: Fixed a bsod when changing state to s3.\n[netkvm/vioserial/viostor/vioscsi] BZ#908725 - virtio win inf does\n    not s\n\nDate    12 Mar 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm75\n\nFixed bugs:\n\n[virtio-serial] BZ#806223: Fixed a bsod when changing state to s3.\n[netkvm/vioserial/viostor/vioscsi] BZ#908725 - virtio win inf does\n    not specify revision ID,\n\nNew features:\n[NetKVM] RSS implemented\n\n\nDate    6 Feb 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm74\n\nFixed bugs:\n\n[NetKVM] BZ#904028 - Fixing casting error with event indices calculation.\n[NetKVM] BZ#907160 - Do not test IOSpace size.\n\nDate    31 Jan 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm73\n\nFixed bugs:\n\nBZ #902150 - Fix guest failure to add port after resume from s3/s4.\nBZ #904028 - Windows 2012 got BSOD while running job 1091NDISTest 6.0 - [1 Machine] - 1c_Mini6Send on HCK.\n\nDate    16 Jan 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm71\n\nFixed bugs:\n\nBZ #759019 - Fix vring_detach_unused_buf function.\nBZ #833671 - Fixed memory leaks on device's surprise removal.\n\nalso [balloon/vioserial]fix inf version for Win8.\n\nDate    8 Jan 2013\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm70\n\nFixed bugs:\n\nBZ #713130 - further optimization\nBZ #8823795 BSOD occurs during transferring data from guest to host\n    during S3/S4.\nBZ #883913 - read link status on driver startup.\nBZ #878442 - Interrupt handlers refactored, Interrupt timestamping made debug only feature\n\nDate    29 Nov 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm69\n\nFixed bugs:\n\nBZ 878291 - fixed a whql test failed in \"support for D3 power state\"\n\nDate    27 Nov 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm67\n\nFixed bugs:\n\nBZ 840911 - don't send VIRTIO_CONSOLE_PORT_OPEN\n    control message from VIOSerialShutdownAllPorts.\nBZ 879143 - [whql][wlk][scsi] scsi driver for win2k3 does not support s4\n\nDate    21 Nov 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm66\n\nFixed bugs:\n\nBZ 826596 - RX data path optimizations\nBZ 826596 partial fix - guest checksumming\n    synchronized with RX checksumming.\nBZ 876061 -  windows 2003 can not generate dump file when hitting BSOD\nBZ 876504 - [whql][wlk][block] viostor driver for win2k3 does not support s4\n\nDate    19 Nov 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm65\n\nFixed bugs:\n\nBZ 873971:  vioserial] Fixed EvtDeviceD0ExitPreInterruptsDisabled return value.\n\n\nDate    15 Nov 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm64\n\nFixed bugs:\n\nBZ 873128:  Job of Ethernet - NDISTest6.0 - 2c_receivepackets failed with WLK for win2k8/win7/win2k8-R2. Miniport must indicate LINK DOWN on reset start, at least when it indicates LINK UP on reset completion\n\nDate    30 Oct 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm63\n\nFixed bugs:\n[vioser] BZ840911 - move VIRTIO_CONSOLE_PORT_OPEN control message to\n    VIOSerialEvtDeviceD0ExitPreInterruptsDisabled callback\n[viostor] revert FUA patch Bug 837324 - viostor reports support for FUA, but does not implement it.\n\nDate    10 Oct 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm62\n\nFixed bugs:\nBug 864841 - [virtio-win] device driver for win2008 missed in virtio-win-prewhql-0.1-40 (edit) \n\n\nDate    09 Oct 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm61\n\nFixed bugs:\nBug 837758 - Disable virtio serial driver from device\n    manager hit BSOD After send data from host and guest.\nBug 842961 [Job Id 1710]BSOD occurs dueing running\n    \"WDF Fault injection Logo Testing\" job.\nBug 824814 - [virtio-win][viostor]Online enlarging data\n    image size does not work.\nBug 855826 - [virtio-win][block]guest BSOD after upgrading\n    virtio-win to build 35 with upstream qemu-kvm.\n\nDate    01 Oct 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm60\n\nFixed bugs:\n[NetKVM] BZ #859882 - Fixing performance with current checksum offload settings. If Windows send \n\tan IP packet with 0 pachet lenth in offload scenarios - the driver will populate the \n\tlength field with packet field.\n\n\nDate    28 Sep 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm59\n\nNew features:\nBalloon and vioserial Win8 drivers.\n\nDate    23 Sep 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm58\n\nFixed bugs:\nBZ 713130 - event index performance in virtio\n    and vhost-net. Event indexes handling fixed (including correct kick logic).\nBug 858687 - virtio_serialport changes the order of the data\n    guest->host using 32bit Windows XP guest\n\nNew features:\nWin8 NetKvm driver.\n\n\nDate    09 Sep 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm57\n\nFixed bugs:\nBZ #838008 added Port1FunctionNumber directive to the INF file for Win8/2012\nBZ #834175 - Enabled support for required RX checksum and IP TX checksum on Win7/2008R2/2008\nBZ #841544 and BZ #807967 No IP after several restarts and after S3\nBZ #843325 - [virtio-win][balloon]Guest memory can not continue evicting after enable balloon driver\nBZ #831570 - [virtio-win][balloon]windows7 guest crash when disable/enable virtIO balloon device during \n             enlarging/evicting memory.\nBZ #839143 - [virtio-win][balloon]windows2003 guest balloon size restore the original \n             value after reboot guest.\nBZ #803633 - [virtio-win][balloon]balloon does not work after s3 or s4.\nBZ #843325 - [virtio-win][balloon]Guest memory can not continue evicting after enable balloon driver.\nBZ #837324 - viostor reports support for FUA, but does not implement it.\n\nBZ #806223 - [virtio-win][serial] guest BSOD when doing s3 while virtio-serial in use.\nBZ #714908 - [virtio-win][serial] virtio-serial is disfunctiona after S3\nBZ #814896 - [virtio-win][serial] virtio-serial does not work after s4 in win7-32/64 bit guests\nBZ #823818 - [virtio-win][compatibilty]Guest freeze After terminating the virtserialport receiving \n             side in the host\nBZ #819412 - [virtio-win][serial]qemu complains \"Unexpected port id 1 for device virtio-serial0.0\"\n             when hotunplug serial while RHEV-Agent service running in the guest\n\nDate    08 Aug 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm55\n\nFixed bugs:\nBZ #838010 Fixing static code analysis tools\n    errors for Balloon.\nBZ:834179 - Reverting previos fix and aplying correct\n    padding on RX path that is needed due to guest to guest transfer of small\n    packets.\n\nReview build system scripts and continue adaptation\n    to Windows 8 and build server on Windows 2008R2.\n\nDate    04 Aug 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm54\n\nFixed bugs:\nBZ:826596 PublishIndices feature is set to disabled by default on\n    Windows XP and Windows 2003 until further investigation is made on QEMU side\n    why it causes performance degradation with legacy PCI interrupts.\nBz:837321 Report guest FLUSH (WCE) feature  \nBug 819457 - windows 2k8r2sp1 guests hang after running over\n    10 days in a stressed host\n\nBug 823818 - [virtio-win][compatibilty]Guest freeze After terminating\n    the virtserialport receiving side in the host\nBug 840932 - BSOD in RHEV 3 on Windows 7 guest, Bugcheck code 0x9F\n\nDate    20 July 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm53\n\nExperemental - Win8 support for VirtIO, NetKvm, viostor, and vioscsi progects.\n\n\nDate    3 July 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm52\n\nFixed bugs:\n\nBug 800752 - Fixing syncronyzation between DPC and Read.\n\nDate    13 June 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm51\n\nFixed bugs:\n\nBug 828275 - Implement and test control queue in virtio-simulator environment.\nBug 828275 - Initial implementation of RX filtering using QEMU\n\nBug 768795 - BSOD when excercising Balloon Driver\nBug 816452 - Uninstall balloon driver from Device Manager leads to BSOD after changing balloon \n             value in monitor.\nBug 803633 - balloon does not work after s3 or s4\nBug 799864 - user cannot distinguish the difference between viostor and vioscsi because of listing \n             the two drivers together at the same time in Device Manager\n\nDate    21 May 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm50\n\nFixed bugs:\n\nBug 815295 - [NetKvm] Adding ability to handle DPC rx throttling from OS. With this fix glitch \nfree test for Windows 7 will pass\n\nDate    21 April 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm49\n\nFixed bugs:\nBug 808654 - [NetKvm] Fix the start of checksum calculation in case on vlan\\priority tags usage\n\n\nDate    14 April 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm48\n\nFixed bugs:\nBug 811161 - [virtio-win][viostor]Guest BSOD during S3 with virtio disk.\nBug 803950 - [virtio-win][balloon] Guest BOSD when evict memory and suspend(s4) guest at the same time.\n\nDate    08 April 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm47\n\nFixed bugs:\nBug 810694 - viostor fails with DRIVER_IRQL_NOT_LESS_OR_EQUAL BOSD under heavy random write load \nBug 806223 - [virtio-win][serial] guest BOSD when doing s3 while virtio-serial in use\nBug 803950 - [virtio-win][balloon] Guest BOSD when evict memory and suspend(s4) guest at the same time\nBug 803633 - balloon does not work after s3\nBug 750773 - qemu-kvm hang while booting a win7 32 bit VM with the qxl and virtio-serial drivers installed \n\n\nDate    18 March 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm46\n\nFixed bugs:\nBug 799248 - [netkvm]Add a space between \"RedHat\" in netkvm,sys Product name\nBug 713643 - backport checksum optimization for virtio_net\nBug 770499 - Press 'i' cause vioser-test stop working\nBug 799264 - WHQL][Block]BSOD happened in job \"CHOAS-Concurrent Hardware And OS Test\"\nBug 799190 - [WHQL][Block]Job \"Sleep Stress with IO\" and Common Scenario Stress with IO\" \n             stopped with prompt error on win2k8-R2/win2k8/win7.\nBug 799182 - [WHQL][Block]Job of \"Sleep Stress with IO\" and Common Scenario Stress with IO\" \n             always failed on winxp/win2k3 for invalid block address.\n\n\nDate    20 February 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm45\n\nFixed bugs:\nBug 790305 - [virtio-scsi] BSOD occurs when install virtio scsi driver in windows guest\n\nNew features:\nUnified virtio library.\n\nDate    13 February 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm44\n\nFixed bugs:\nBug 771390 - Win 7 (32-bit) guest \"quitting\" with latest VirtIO block drivers - virtio: \n             trying to map MMIO memory - PART 2 - fix this problem for scsiport part (WXP).\n\nNew features:\nvirtio scsi passthrough device driver.          \n\nDate    23 January 2012\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm43\n\nFixed bugs:\nBug 752743 - Windows guest stopped with EIO when trying to initialize readonly disk.\nBug 771390 - Win 7 (32-bit) guest \"quitting\" with latest VirtIO block drivers - virtio: trying to map MMIO memory\nBug 768981 - guest BSOD when boot a win7-64 guest with 232 virtio disks(enable multifunction=on)\n\nDate    14 December 2011\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm42\n\nFixed bugs:\nBug 713130 - event index support in virtio and vhost-net\nBug 713643 - backport checksum optimization for virtio_net\nBug 753723 - Backport serial number support for virtio-blk devices\nBug 714908 - virtio-serial is disfunctional after S3\n\nDate    24 November 2011\nrepo    git://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag     mm41\n\nFixed bugs:\nBZ744729 - Fixing copyright and file description strings in version info\nBZ744730 Fix language in version info to neutral\n\nNew features:\n[NetKVM]\nBuild Win7 target (needed for NDIS6.2 support)\nEnable to set external SDK path\nImplement event index support in virtio library and NetKVM driver\nRX IP checksum offload\n\n\nDate\t21 September 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm40\n\n[NetKVM] Change PM capabilities to report NdisDeviceStateUnspecified for different wake up capabilities\n\nDate\t12 September 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm39\n\ndiscard read request watchdog timer and return to original read requests handling.\n\nDate\t10 August 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm38\n\nBug 727034 [WHQL][viostor]winxpsp3 32 bit guest exited with \"virtio: trying to map MMIO memory\" error\n\nDate\t25 July 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm37\n\nFixed bugs:\nBug 721355 - unable to shut down win guest gracefully \n\n\nDate\t16 July 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm36\n\nFixed bugs:\nBug 720540 - [WHQL][viostor] Failed to install viostor dirver on Windows XP \nand Windows 2k3 32/64 bits (edit)  \n\nNew features:\n- [NetKvm] Number of handled RX packets handled during DPC are\nconfigured through INF file and advanced tab in device\nmanager.\n- rhel6.2 version numbering.\n\n\n\nDate\t09 July 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm35\n\nFixed bugs: \nBug 702258 - Virtio-Serial issue with IC116 windows Guest tools - vm stuck on reboot \nBug 677219 - [RFE] Include support for online resizing of storage and network block devices \nBug 689366 - (virtio serial) Guest aborted when transferring data from guest to host\n\nDate\t04 April 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm34\n\nWorkaround for:\nBug 693041 - [WHQL] Virtio block job of \"Sleep Stress With IO\" \nfor win2k8-32 fails with BSOD on build of virtio-win-prewhql-0.1-9 \n\nDate\t30 March 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm33\n\nFixed bugs:\nTurn MSISupported flag off. Workaround for #669597 & #691192  \nBug 691192 - RHEV-Block: Workaround for bug #669597 - (virtio-win) BSOD when upgrade virtio \nblock driver from version of 1.1.16 to 1.1.17 \n \nBug 669597 - (virtio-win-1.1.17) Upgrade fails with BSOD when upgrade virtio block driver from \nversion of 1.1.16 to 1.1.17 on windows \n\nNew features:\nNew version numbering scheme.\n\nDate\t25 March 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm32\n\nFixed bugs:\nBug 690713 - [WHQL] Virtio block job \"Embedded Signature Verification\" fails on virtio-win-prewhql-0.1-7\n\nNew features:\nNetKvmConfig documentation.\n\nDate\t21 March 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm31\n\nFixed bugs:\nBug 688839 - Failed to boot windows guest with 30 virtio serial ports (Got BSOD 0XD1)\n\nDate\t13 March 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm30\n\nFixed bugs:\nBug 670713 - (virtio-win-1.1.17)Virtio serial driver always causes windows BSOD when install or run whql jobs.\n\nDate\t24 February 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm29\n\nNew features:\nNetKvm CoInstaller\n\nFixed bugs:\nBug 630830 - Nic stops receiving under netperf test. \n\n\nDate\t21 February 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm28\n\nFixed bugs:\n \nBug 670713 - (virtio-win-1.1.17)Virtio serial driver always causes windows BSOD when install or run whql jobs.\n\nDate\t14 February 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm27\n\nFixed bugs:\n \nBug 669597 - (virtio-win-1.1.17)Upgrade fails with BSOD when upgrade virtio block driver \n             from version of 1.1.16 to 1.1.17 on windows \nBug 616685 - balloon:window guest can not keep memory change after guest restart \nBug 621834 - Poor write I/O performance of virtio-win driver \n\nDate\t20 January 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm26\n\nFixed bugs:\n \nBug 669276 - [WHQL]Windows fails to do S4/S3 with virtio-win-1.1.17\nBug 669633 - [WHQL]Job of \"DPWDK-HotReplace-Device Test-Verify driver support for D3 power state\" \n             fails with getting BSOD \nBug 669314 - (virtio-win-1.1.17) Can not generate crash dump file after BSOD of Windows guests\nBug 669316 - [WHQL] BSOD occurs when running \"CHAOS-Concurrent Hardware And OS test\"  \n\n\nDate\t7 January 2011\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm25\n\nFixed bugs:\n \nBug 617000 - feature request: virtio-serial windows driver has a write size limitation that should be lifted\nBug 625036 - For virtio-blk driver MSISupported should be turned on by default on VISTA and higher,\nBug 637713 - fail to attach virtio serial port to guest when use same nr for different virtio serial pci\n\nNew features:\nIndirect buffers support for viostor driver.\n\n\nDate\t20 September 2010\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm24\n\nFixed bugs:\nBug 634536 - BSOD after hot-unplug a virtio-serial port.\nBug 635506   [WHQL] Win2k8-32 quest always got BSOD (0x93) buring balloon testing.\n\n\nDate\t16 September 2010\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm23\n\nFixed bugs:\nBug 610787 - [balloon] evict windows guest free memory does not work.\n\nDate\t09 September 2010\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm22\n\nFixed bugs:\nBug 626333 - [WHQL] Win2k8-R2 got BSOD during virtio-serial run sleep stress with IO and common\nscenario stress with IO (finale fix. vioserial will be able to pass WHQL test while running with\nchild devices (ports)).\nBug 630536 - Crash when running on Windows XP SMP\n\n\nDate\t30 August 2010\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm21\n\nFixed bugs:\nBug 610787 - balloon evict windows guest free memory does not work\nBug 626333 - [WHQL] Win2k8-R2 got BSOD during virtio-serial run sleep stress with IO and common\nscenario stress with IO (partial fix. vioserial should be able to pass WHQL test while running w/o\nchild devices (ports)).\n\n\nDate\t17 August 2010\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm20\n\nFixed bugs:\nBug 603015 - fix for WHQL LSO test problem on MSI mashine\nBug 613949 - [WHQL] Win2k8-R2 guest got BSOD when running virtio-serial Plug and Play Driver Test\nBug 614722 - [WHQL] Win2k8-R2 got BSOD during virtio-serial run simpleIOStress test (Error code 0x1E)\n\nNew features:\nNone\n\nDate\t10 August 2010\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm19\nFixed bugs:\nBug 616398 - virtio-serial installation problems\n\n\nDate\t02 August 2010\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm18\n\nFixed bugs:\n615205  BSOD happens when doing hibernation for windows guest with virtio blk\n\nNew features:\nNone\n\nDate\t28 July 2010\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm17\n\nFixed bugs:\n616814  vioserial driver fails to recognize HostConnected with spicevmc\n\nNew features:\nReverting published indexes\n\nDate\t13 July 2010\nrepo\tgit://git.engineering.redhat.com/users/vrozenfe/internal-kvm-guest-drivers-windows/.git\ntag\tmm16\n\nFixed bugs:\n607555  winxp with virtio block BSOD at the first reboot of installation\n607557  Failed to install windows guests using virtio-win-1.1.5-0.vfd\n609831  Windows 7 guest installed in RHEL5 BSODs on shutdown when booted in RHEL6\n609838  XP installed under RHEL55 has missing sys files on 2nd reboot under RHEL6\n\nNew features:\nNone\n"
        },
        {
          "name": "viocrypt",
          "type": "tree",
          "content": null
        },
        {
          "name": "viofs",
          "type": "tree",
          "content": null
        },
        {
          "name": "viogpu",
          "type": "tree",
          "content": null
        },
        {
          "name": "vioinput",
          "type": "tree",
          "content": null
        },
        {
          "name": "viomem",
          "type": "tree",
          "content": null
        },
        {
          "name": "viorng",
          "type": "tree",
          "content": null
        },
        {
          "name": "vioscsi",
          "type": "tree",
          "content": null
        },
        {
          "name": "vioserial",
          "type": "tree",
          "content": null
        },
        {
          "name": "viosock",
          "type": "tree",
          "content": null
        },
        {
          "name": "viostor",
          "type": "tree",
          "content": null
        },
        {
          "name": "virtio-win.sln",
          "type": "blob",
          "size": 58.947265625,
          "content": "Microsoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.10.35027.167\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"VirtIO\", \"VirtIO\", \"{9B50A368-22AC-421A-BA77-FA2BC760D7D9}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"viostor\", \"viostor\", \"{BE3962CB-0038-42CD-9182-AF4FDE2938F1}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"vioscsi\", \"vioscsi\", \"{46DFC9B8-497E-4CD6-B3C8-C456B8EEBCC1}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"vioinput\", \"vioinput\", \"{E8F15557-9E22-4EFB-92A5-8AB69ACEC7A8}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"vioserial\", \"vioserial\", \"{1F390D79-F68F-4F25-B4A0-0E50FEAE5D7D}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"viorng\", \"viorng\", \"{9F1ACED2-9B2F-41C9-AE57-0B0958379DCD}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"pvpanic\", \"pvpanic\", \"{D773D8E3-C5AD-4361-B46E-BF4AB358E7FE}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"NetKVM\", \"NetKVM\", \"{DF169B23-B571-48BE-8287-4F0326B52D77}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Balloon\", \"Balloon\", \"{8C3B4963-5F22-4A7B-9704-4F1CEC625909}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"VirtioLib\", \"VirtIO\\VirtioLib.vcxproj\", \"{01D87C47-437A-4A16-8FD9-33FA5C99339E}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"VirtioLib-WDF\", \"VirtIO\\WDF\\VirtioLib-WDF.vcxproj\", \"{EC1B7990-EA6A-45FE-836C-2F050F6BB632}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E} = {01D87C47-437A-4A16-8FD9-33FA5C99339E}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viostor\", \"viostor\\viostor.vcxproj\", \"{DAD407F3-186A-48FC-88CE-E236AF3165C4}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E} = {01D87C47-437A-4A16-8FD9-33FA5C99339E}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"vioser-test\", \"vioserial\\app\\vioser-test.vcxproj\", \"{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"vioser\", \"vioserial\\sys\\vioser.vcxproj\", \"{023DE679-5B3F-423F-88C4-714A12F3D864}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E} = {01D87C47-437A-4A16-8FD9-33FA5C99339E}\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632} = {EC1B7990-EA6A-45FE-836C-2F050F6BB632}\n\t\t{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C} = {EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"vioscsi\", \"vioscsi\\vioscsi.vcxproj\", \"{1530C86E-90C0-4270-B3A2-0FB90152CA48}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E} = {01D87C47-437A-4A16-8FD9-33FA5C99339E}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viorng\", \"viorng\\viorng\\viorng.vcxproj\", \"{EF874D69-710D-4B5D-AFDA-4A3E912B5838}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E} = {01D87C47-437A-4A16-8FD9-33FA5C99339E}\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632} = {EC1B7990-EA6A-45FE-836C-2F050F6BB632}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"VirtRNG Package\", \"viorng\\VirtRNG Package\\VirtRNG Package.vcxproj\", \"{4471A5F4-C884-4EBA-8241-FEBBECE181CF}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{E81CB0C6-F255-4A79-B972-8E49D15D957E} = {E81CB0C6-F255-4A79-B972-8E49D15D957E}\n\t\t{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E} = {8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viorngum\", \"viorng\\cng\\um\\viorngum.vcxproj\", \"{E81CB0C6-F255-4A79-B972-8E49D15D957E}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"vioinput\", \"vioinput\\sys\\vioinput.vcxproj\", \"{230231C1-A0C2-4A37-B32B-E247A92311F4}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E} = {01D87C47-437A-4A16-8FD9-33FA5C99339E}\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632} = {EC1B7990-EA6A-45FE-836C-2F050F6BB632}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"pvpanic\", \"pvpanic\\pvpanic\\pvpanic.vcxproj\", \"{CDABF347-89AB-4E09-A93F-324D4EFBC74F}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"PVPanic Package\", \"pvpanic\\PVPanic Package\\PVPanic Package.vcxproj\", \"{3E9E272D-6299-4B69-A49E-6D286EAB8CCA}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"NetKVM-VS2015\", \"NetKVM\\NetKVM-VS2015.vcxproj\", \"{29D5D8BA-071A-464F-89DF-C0B4EE99F141}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E} = {01D87C47-437A-4A16-8FD9-33FA5C99339E}\n\t\t{7F794CE4-EFAC-4C54-AEEC-7873510C36EA} = {7F794CE4-EFAC-4C54-AEEC-7873510C36EA}\n\t\t{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4} = {09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4}\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF} = {3149C26A-F437-42BD-A40D-D10A695F93EF}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"netkvmco-vs2015\", \"NetKVM\\CoInstaller\\netkvmco-vs2015.vcxproj\", \"{7F794CE4-EFAC-4C54-AEEC-7873510C36EA}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"NDIS6\", \"NDIS6\", \"{1062D4C0-2DC2-4AFA-A1A8-C57666FE923E}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"balloon\", \"Balloon\\sys\\balloon.vcxproj\", \"{B3402316-94F7-4526-AD07-870DEE0E660C}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E} = {01D87C47-437A-4A16-8FD9-33FA5C99339E}\n\t\t{B953395B-010B-432C-AFCD-6C4F6553905F} = {B953395B-010B-432C-AFCD-6C4F6553905F}\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632} = {EC1B7990-EA6A-45FE-836C-2F050F6BB632}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"blnsvr\", \"Balloon\\app\\blnsvr.vcxproj\", \"{B953395B-010B-432C-AFCD-6C4F6553905F}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"Mof\", \"NetKVM\\Mof\\Mof.vcxproj\", \"{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"hidpassthrough\", \"vioinput\\hidpassthrough\\hidpassthrough.vcxproj\", \"{EC5DCAF5-3514-4E61-8201-10F5F060E096}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"ivshmem\", \"ivshmem\", \"{799496CA-9430-4FFF-BEA7-224AE168500B}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"ivshmem\", \"ivshmem\\ivshmem.vcxproj\", \"{03CA149C-ACBD-430E-A663-30D3A335F8A4}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{87AEE822-FF8B-4743-A567-8B46F4FA6D99} = {87AEE822-FF8B-4743-A567-8B46F4FA6D99}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"ivshmem-test\", \"ivshmem\\test\\ivshmem-test.vcxproj\", \"{87AEE822-FF8B-4743-A567-8B46F4FA6D99}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"viocrypt\", \"viocrypt\", \"{96D0A704-41DC-4FB2-9F63-8026821478D3}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viocrypt\", \"viocrypt\\sys\\viocrypt.vcxproj\", \"{92C73575-146D-4C39-A9CA-7B9081EB6FD1}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E} = {01D87C47-437A-4A16-8FD9-33FA5C99339E}\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632} = {EC1B7990-EA6A-45FE-836C-2F050F6BB632}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viocrypt-prov\", \"viocrypt\\dll\\viocrypt-prov.vcxproj\", \"{F93779E1-51C1-4D12-9DC6-28FF6EB5589B}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1} = {92C73575-146D-4C39-A9CA-7B9081EB6FD1}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viocrypt-test\", \"viocrypt\\test\\viocrypt-test.vcxproj\", \"{DD9D3949-C1BC-426F-BFDA-D9310B8F9E3F}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1} = {92C73575-146D-4C39-A9CA-7B9081EB6FD1}\n\t\t{F93779E1-51C1-4D12-9DC6-28FF6EB5589B} = {F93779E1-51C1-4D12-9DC6-28FF6EB5589B}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"VIOCRYPT package\", \"viocrypt\\package\\package.vcxproj\", \"{8B100A20-3269-428E-8995-91CEC80756F9}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1} = {92C73575-146D-4C39-A9CA-7B9081EB6FD1}\n\t\t{F93779E1-51C1-4D12-9DC6-28FF6EB5589B} = {F93779E1-51C1-4D12-9DC6-28FF6EB5589B}\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"fwcfg64\", \"fwcfg64\", \"{F8BDF479-508B-40A3-9F3F-AB22FDF6D5FF}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"fwcfg\", \"fwcfg64\\fwcfg.vcxproj\", \"{D9EF1144-4779-444C-ADD6-F733B749A862}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viorngtest\", \"viorng\\test\\viorngtest.vcxproj\", \"{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viofs\", \"viofs\\pci\\viofs.vcxproj\", \"{209E8947-494D-4104-B44B-530CB68A6494}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E} = {01D87C47-437A-4A16-8FD9-33FA5C99339E}\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632} = {EC1B7990-EA6A-45FE-836C-2F050F6BB632}\n\t\t{9D87E5A8-84AE-4775-90B5-CC75CA420670} = {9D87E5A8-84AE-4775-90B5-CC75CA420670}\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"VirtioFS\", \"VirtioFS\", \"{1FD474F9-4963-48FE-A58B-C0ED1CD86880}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"virtiofs\", \"viofs\\svc\\virtiofs.vcxproj\", \"{9D87E5A8-84AE-4775-90B5-CC75CA420670}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"VirtFS Package\", \"viofs\\VirtFS Package\\VirtFS Package.vcxproj\", \"{B415038E-1FD4-4001-AEAB-CFA2177B1806}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{9D87E5A8-84AE-4775-90B5-CC75CA420670} = {9D87E5A8-84AE-4775-90B5-CC75CA420670}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"NotifyObject\", \"NetKVM\\NotifyObject\\notifyobject.vcxproj\", \"{92E3B437-C258-47FB-8856-D3FEA56A3BCC}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF} = {3149C26A-F437-42BD-A40D-D10A695F93EF}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"ProtocolService\", \"NetKVM\\ProtocolService\\ProtocolService.vcxproj\", \"{3149C26A-F437-42BD-A40D-D10A695F93EF}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"viosock\", \"viosock\", \"{02B3EFA9-96A2-4117-BDFF-38908F1DB93F}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viosocklib\", \"viosock\\lib\\viosocklib.vcxproj\", \"{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viosock\", \"viosock\\sys\\viosock.vcxproj\", \"{C65DA065-5828-45CF-89DB-FC4F21BC9E05}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632} = {EC1B7990-EA6A-45FE-836C-2F050F6BB632}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viosocklib-test\", \"viosock\\viosocklib-test\\viosocklib-test.vcxproj\", \"{2CFBBF52-9646-4E42-9E43-9CEE50735254}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC} = {315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"ViosockPackage\", \"viosock\\ViosockPackage\\ViosockPackage.vcxproj\", \"{3F2854A7-A604-4006-A79B-9EAFC63015B8}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC} = {315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viosock-test\", \"viosock\\viosock-test\\viosock-test.vcxproj\", \"{5E68CCE9-F95D-4A6C-A5AD-DBA7CE0CA63A}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05} = {C65DA065-5828-45CF-89DB-FC4F21BC9E05}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viogpudo\", \"viogpu\\viogpudo\\viogpudo.vcxproj\", \"{BDE07E9E-2041-4853-8B74-7CF591C255E7}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{D572573A-7D73-404D-8DFA-7727278C242E} = {D572573A-7D73-404D-8DFA-7727278C242E}\n\t\t{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6} = {8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6}\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E} = {01D87C47-437A-4A16-8FD9-33FA5C99339E}\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"viogpu\", \"viogpu\", \"{711026E0-B4CD-437B-B9FA-31DF42877EC4}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viogpuap\", \"viogpu\\viogpuap\\viogpuap.vcxproj\", \"{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viogpusc\", \"viogpu\\viogpusc\\viogpusc.vcxproj\", \"{D572573A-7D73-404D-8DFA-7727278C242E}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"vioinput package\", \"vioinput\\package\\package.vcxproj\", \"{4BEE8BEA-413F-4262-BC96-B03B509241E4}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{230231C1-A0C2-4A37-B32B-E247A92311F4} = {230231C1-A0C2-4A37-B32B-E247A92311F4}\n\t\t{EC5DCAF5-3514-4E61-8201-10F5F060E096} = {EC5DCAF5-3514-4E61-8201-10F5F060E096}\n\tEndProjectSection\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viomem\", \"viomem\\sys\\viomem.vcxproj\", \"{9D17F7FB-A784-4958-8DB4-0D50118334F0}\"\n\tProjectSection(ProjectDependencies) = postProject\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E} = {01D87C47-437A-4A16-8FD9-33FA5C99339E}\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632} = {EC1B7990-EA6A-45FE-836C-2F050F6BB632}\n\tEndProjectSection\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"viomem\", \"viomem\", \"{B192B63C-8AC5-4480-A14E-920F549FECA9}\"\nEndProject\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"viosockwspsvc\", \"viosock\\wspsvc\\viosockwspsvc.vcxproj\", \"{B8C784B3-7914-4539-B728-F2EAE5C9795E}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tWin10 Release|ARM64 = Win10 Release|ARM64\n\t\tWin10 Release|x64 = Win10 Release|x64\n\t\tWin10 Release|x86 = Win10 Release|x86\n\t\tWin11 Release|ARM64 = Win11 Release|ARM64\n\t\tWin11 Release|x64 = Win11 Release|x64\n\t\tWin11 Release|x86 = Win11 Release|x86\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{DAD407F3-186A-48FC-88CE-E236AF3165C4}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{DAD407F3-186A-48FC-88CE-E236AF3165C4}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{DAD407F3-186A-48FC-88CE-E236AF3165C4}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{DAD407F3-186A-48FC-88CE-E236AF3165C4}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{DAD407F3-186A-48FC-88CE-E236AF3165C4}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{DAD407F3-186A-48FC-88CE-E236AF3165C4}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{DAD407F3-186A-48FC-88CE-E236AF3165C4}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{DAD407F3-186A-48FC-88CE-E236AF3165C4}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{DAD407F3-186A-48FC-88CE-E236AF3165C4}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{DAD407F3-186A-48FC-88CE-E236AF3165C4}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{DAD407F3-186A-48FC-88CE-E236AF3165C4}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{023DE679-5B3F-423F-88C4-714A12F3D864}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{023DE679-5B3F-423F-88C4-714A12F3D864}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{023DE679-5B3F-423F-88C4-714A12F3D864}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{023DE679-5B3F-423F-88C4-714A12F3D864}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{023DE679-5B3F-423F-88C4-714A12F3D864}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{023DE679-5B3F-423F-88C4-714A12F3D864}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{023DE679-5B3F-423F-88C4-714A12F3D864}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{023DE679-5B3F-423F-88C4-714A12F3D864}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{023DE679-5B3F-423F-88C4-714A12F3D864}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{023DE679-5B3F-423F-88C4-714A12F3D864}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{023DE679-5B3F-423F-88C4-714A12F3D864}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{1530C86E-90C0-4270-B3A2-0FB90152CA48}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{1530C86E-90C0-4270-B3A2-0FB90152CA48}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{1530C86E-90C0-4270-B3A2-0FB90152CA48}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{1530C86E-90C0-4270-B3A2-0FB90152CA48}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{1530C86E-90C0-4270-B3A2-0FB90152CA48}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{1530C86E-90C0-4270-B3A2-0FB90152CA48}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{1530C86E-90C0-4270-B3A2-0FB90152CA48}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{1530C86E-90C0-4270-B3A2-0FB90152CA48}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{1530C86E-90C0-4270-B3A2-0FB90152CA48}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{1530C86E-90C0-4270-B3A2-0FB90152CA48}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{1530C86E-90C0-4270-B3A2-0FB90152CA48}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{EF874D69-710D-4B5D-AFDA-4A3E912B5838}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{EF874D69-710D-4B5D-AFDA-4A3E912B5838}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{EF874D69-710D-4B5D-AFDA-4A3E912B5838}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{EF874D69-710D-4B5D-AFDA-4A3E912B5838}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{EF874D69-710D-4B5D-AFDA-4A3E912B5838}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{EF874D69-710D-4B5D-AFDA-4A3E912B5838}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{EF874D69-710D-4B5D-AFDA-4A3E912B5838}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{EF874D69-710D-4B5D-AFDA-4A3E912B5838}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{EF874D69-710D-4B5D-AFDA-4A3E912B5838}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{EF874D69-710D-4B5D-AFDA-4A3E912B5838}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{EF874D69-710D-4B5D-AFDA-4A3E912B5838}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{4471A5F4-C884-4EBA-8241-FEBBECE181CF}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{4471A5F4-C884-4EBA-8241-FEBBECE181CF}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{4471A5F4-C884-4EBA-8241-FEBBECE181CF}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{4471A5F4-C884-4EBA-8241-FEBBECE181CF}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{4471A5F4-C884-4EBA-8241-FEBBECE181CF}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{4471A5F4-C884-4EBA-8241-FEBBECE181CF}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{4471A5F4-C884-4EBA-8241-FEBBECE181CF}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{4471A5F4-C884-4EBA-8241-FEBBECE181CF}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{4471A5F4-C884-4EBA-8241-FEBBECE181CF}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{4471A5F4-C884-4EBA-8241-FEBBECE181CF}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{4471A5F4-C884-4EBA-8241-FEBBECE181CF}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{E81CB0C6-F255-4A79-B972-8E49D15D957E}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{E81CB0C6-F255-4A79-B972-8E49D15D957E}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{E81CB0C6-F255-4A79-B972-8E49D15D957E}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{E81CB0C6-F255-4A79-B972-8E49D15D957E}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{E81CB0C6-F255-4A79-B972-8E49D15D957E}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{E81CB0C6-F255-4A79-B972-8E49D15D957E}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{E81CB0C6-F255-4A79-B972-8E49D15D957E}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{E81CB0C6-F255-4A79-B972-8E49D15D957E}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{E81CB0C6-F255-4A79-B972-8E49D15D957E}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{E81CB0C6-F255-4A79-B972-8E49D15D957E}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{E81CB0C6-F255-4A79-B972-8E49D15D957E}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{230231C1-A0C2-4A37-B32B-E247A92311F4}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{230231C1-A0C2-4A37-B32B-E247A92311F4}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{230231C1-A0C2-4A37-B32B-E247A92311F4}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{230231C1-A0C2-4A37-B32B-E247A92311F4}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{230231C1-A0C2-4A37-B32B-E247A92311F4}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{230231C1-A0C2-4A37-B32B-E247A92311F4}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{230231C1-A0C2-4A37-B32B-E247A92311F4}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{230231C1-A0C2-4A37-B32B-E247A92311F4}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{230231C1-A0C2-4A37-B32B-E247A92311F4}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{230231C1-A0C2-4A37-B32B-E247A92311F4}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{230231C1-A0C2-4A37-B32B-E247A92311F4}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{CDABF347-89AB-4E09-A93F-324D4EFBC74F}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{CDABF347-89AB-4E09-A93F-324D4EFBC74F}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{CDABF347-89AB-4E09-A93F-324D4EFBC74F}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{CDABF347-89AB-4E09-A93F-324D4EFBC74F}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{CDABF347-89AB-4E09-A93F-324D4EFBC74F}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{CDABF347-89AB-4E09-A93F-324D4EFBC74F}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{CDABF347-89AB-4E09-A93F-324D4EFBC74F}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{CDABF347-89AB-4E09-A93F-324D4EFBC74F}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{CDABF347-89AB-4E09-A93F-324D4EFBC74F}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{CDABF347-89AB-4E09-A93F-324D4EFBC74F}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{CDABF347-89AB-4E09-A93F-324D4EFBC74F}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{3E9E272D-6299-4B69-A49E-6D286EAB8CCA}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{3E9E272D-6299-4B69-A49E-6D286EAB8CCA}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{3E9E272D-6299-4B69-A49E-6D286EAB8CCA}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{3E9E272D-6299-4B69-A49E-6D286EAB8CCA}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{3E9E272D-6299-4B69-A49E-6D286EAB8CCA}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{3E9E272D-6299-4B69-A49E-6D286EAB8CCA}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{3E9E272D-6299-4B69-A49E-6D286EAB8CCA}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{3E9E272D-6299-4B69-A49E-6D286EAB8CCA}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{3E9E272D-6299-4B69-A49E-6D286EAB8CCA}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{3E9E272D-6299-4B69-A49E-6D286EAB8CCA}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{3E9E272D-6299-4B69-A49E-6D286EAB8CCA}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{29D5D8BA-071A-464F-89DF-C0B4EE99F141}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{29D5D8BA-071A-464F-89DF-C0B4EE99F141}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{29D5D8BA-071A-464F-89DF-C0B4EE99F141}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{29D5D8BA-071A-464F-89DF-C0B4EE99F141}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{29D5D8BA-071A-464F-89DF-C0B4EE99F141}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{29D5D8BA-071A-464F-89DF-C0B4EE99F141}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{29D5D8BA-071A-464F-89DF-C0B4EE99F141}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{29D5D8BA-071A-464F-89DF-C0B4EE99F141}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{29D5D8BA-071A-464F-89DF-C0B4EE99F141}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{29D5D8BA-071A-464F-89DF-C0B4EE99F141}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{29D5D8BA-071A-464F-89DF-C0B4EE99F141}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{7F794CE4-EFAC-4C54-AEEC-7873510C36EA}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{7F794CE4-EFAC-4C54-AEEC-7873510C36EA}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{7F794CE4-EFAC-4C54-AEEC-7873510C36EA}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{7F794CE4-EFAC-4C54-AEEC-7873510C36EA}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{7F794CE4-EFAC-4C54-AEEC-7873510C36EA}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{7F794CE4-EFAC-4C54-AEEC-7873510C36EA}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{7F794CE4-EFAC-4C54-AEEC-7873510C36EA}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{7F794CE4-EFAC-4C54-AEEC-7873510C36EA}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{7F794CE4-EFAC-4C54-AEEC-7873510C36EA}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{7F794CE4-EFAC-4C54-AEEC-7873510C36EA}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{7F794CE4-EFAC-4C54-AEEC-7873510C36EA}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{B3402316-94F7-4526-AD07-870DEE0E660C}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{B3402316-94F7-4526-AD07-870DEE0E660C}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{B3402316-94F7-4526-AD07-870DEE0E660C}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{B3402316-94F7-4526-AD07-870DEE0E660C}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{B3402316-94F7-4526-AD07-870DEE0E660C}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{B3402316-94F7-4526-AD07-870DEE0E660C}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{B3402316-94F7-4526-AD07-870DEE0E660C}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{B3402316-94F7-4526-AD07-870DEE0E660C}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{B3402316-94F7-4526-AD07-870DEE0E660C}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{B3402316-94F7-4526-AD07-870DEE0E660C}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{B3402316-94F7-4526-AD07-870DEE0E660C}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{B953395B-010B-432C-AFCD-6C4F6553905F}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{B953395B-010B-432C-AFCD-6C4F6553905F}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{B953395B-010B-432C-AFCD-6C4F6553905F}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{B953395B-010B-432C-AFCD-6C4F6553905F}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{B953395B-010B-432C-AFCD-6C4F6553905F}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{B953395B-010B-432C-AFCD-6C4F6553905F}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{B953395B-010B-432C-AFCD-6C4F6553905F}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{B953395B-010B-432C-AFCD-6C4F6553905F}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{B953395B-010B-432C-AFCD-6C4F6553905F}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{B953395B-010B-432C-AFCD-6C4F6553905F}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{B953395B-010B-432C-AFCD-6C4F6553905F}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4}.Win10 Release|ARM64.ActiveCfg = Header|x64\n\t\t{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4}.Win10 Release|ARM64.Build.0 = Header|x64\n\t\t{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4}.Win10 Release|x64.ActiveCfg = Header|x64\n\t\t{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4}.Win10 Release|x64.Build.0 = Header|x64\n\t\t{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4}.Win10 Release|x86.ActiveCfg = Header|Win32\n\t\t{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4}.Win10 Release|x86.Build.0 = Header|Win32\n\t\t{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4}.Win11 Release|ARM64.ActiveCfg = Header|x64\n\t\t{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4}.Win11 Release|ARM64.Build.0 = Header|x64\n\t\t{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4}.Win11 Release|x64.ActiveCfg = Header|x64\n\t\t{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4}.Win11 Release|x64.Build.0 = Header|x64\n\t\t{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4}.Win11 Release|x86.ActiveCfg = Header|x64\n\t\t{EC5DCAF5-3514-4E61-8201-10F5F060E096}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{EC5DCAF5-3514-4E61-8201-10F5F060E096}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{EC5DCAF5-3514-4E61-8201-10F5F060E096}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{EC5DCAF5-3514-4E61-8201-10F5F060E096}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{EC5DCAF5-3514-4E61-8201-10F5F060E096}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{EC5DCAF5-3514-4E61-8201-10F5F060E096}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{EC5DCAF5-3514-4E61-8201-10F5F060E096}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{EC5DCAF5-3514-4E61-8201-10F5F060E096}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{EC5DCAF5-3514-4E61-8201-10F5F060E096}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{EC5DCAF5-3514-4E61-8201-10F5F060E096}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{EC5DCAF5-3514-4E61-8201-10F5F060E096}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4}.Win10 Release|x64.Deploy.0 = Win10 Release|x64\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4}.Win11 Release|x64.Deploy.0 = Win11 Release|x64\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{87AEE822-FF8B-4743-A567-8B46F4FA6D99}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{87AEE822-FF8B-4743-A567-8B46F4FA6D99}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{87AEE822-FF8B-4743-A567-8B46F4FA6D99}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{87AEE822-FF8B-4743-A567-8B46F4FA6D99}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{87AEE822-FF8B-4743-A567-8B46F4FA6D99}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{87AEE822-FF8B-4743-A567-8B46F4FA6D99}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{87AEE822-FF8B-4743-A567-8B46F4FA6D99}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{87AEE822-FF8B-4743-A567-8B46F4FA6D99}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{87AEE822-FF8B-4743-A567-8B46F4FA6D99}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{87AEE822-FF8B-4743-A567-8B46F4FA6D99}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{87AEE822-FF8B-4743-A567-8B46F4FA6D99}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1}.Win10 Release|x64.Deploy.0 = Win10 Release|x64\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1}.Win11 Release|x64.Deploy.0 = Win11 Release|x64\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{F93779E1-51C1-4D12-9DC6-28FF6EB5589B}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{F93779E1-51C1-4D12-9DC6-28FF6EB5589B}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{F93779E1-51C1-4D12-9DC6-28FF6EB5589B}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{F93779E1-51C1-4D12-9DC6-28FF6EB5589B}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{F93779E1-51C1-4D12-9DC6-28FF6EB5589B}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{F93779E1-51C1-4D12-9DC6-28FF6EB5589B}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{F93779E1-51C1-4D12-9DC6-28FF6EB5589B}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{F93779E1-51C1-4D12-9DC6-28FF6EB5589B}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{F93779E1-51C1-4D12-9DC6-28FF6EB5589B}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{DD9D3949-C1BC-426F-BFDA-D9310B8F9E3F}.Win10 Release|ARM64.ActiveCfg = Win10 Release|x64\n\t\t{DD9D3949-C1BC-426F-BFDA-D9310B8F9E3F}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{DD9D3949-C1BC-426F-BFDA-D9310B8F9E3F}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{DD9D3949-C1BC-426F-BFDA-D9310B8F9E3F}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{DD9D3949-C1BC-426F-BFDA-D9310B8F9E3F}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{DD9D3949-C1BC-426F-BFDA-D9310B8F9E3F}.Win11 Release|ARM64.ActiveCfg = Win11 Release|Win32\n\t\t{DD9D3949-C1BC-426F-BFDA-D9310B8F9E3F}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{DD9D3949-C1BC-426F-BFDA-D9310B8F9E3F}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{DD9D3949-C1BC-426F-BFDA-D9310B8F9E3F}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{8B100A20-3269-428E-8995-91CEC80756F9}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{8B100A20-3269-428E-8995-91CEC80756F9}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{8B100A20-3269-428E-8995-91CEC80756F9}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{8B100A20-3269-428E-8995-91CEC80756F9}.Win10 Release|x64.Deploy.0 = Win10 Release|x64\n\t\t{8B100A20-3269-428E-8995-91CEC80756F9}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{8B100A20-3269-428E-8995-91CEC80756F9}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{8B100A20-3269-428E-8995-91CEC80756F9}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{8B100A20-3269-428E-8995-91CEC80756F9}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{8B100A20-3269-428E-8995-91CEC80756F9}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{8B100A20-3269-428E-8995-91CEC80756F9}.Win11 Release|x64.Deploy.0 = Win11 Release|x64\n\t\t{8B100A20-3269-428E-8995-91CEC80756F9}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{D9EF1144-4779-444C-ADD6-F733B749A862}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{D9EF1144-4779-444C-ADD6-F733B749A862}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{D9EF1144-4779-444C-ADD6-F733B749A862}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{D9EF1144-4779-444C-ADD6-F733B749A862}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{D9EF1144-4779-444C-ADD6-F733B749A862}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{D9EF1144-4779-444C-ADD6-F733B749A862}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{D9EF1144-4779-444C-ADD6-F733B749A862}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{D9EF1144-4779-444C-ADD6-F733B749A862}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{D9EF1144-4779-444C-ADD6-F733B749A862}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{209E8947-494D-4104-B44B-530CB68A6494}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{209E8947-494D-4104-B44B-530CB68A6494}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{209E8947-494D-4104-B44B-530CB68A6494}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{209E8947-494D-4104-B44B-530CB68A6494}.Win10 Release|x64.Deploy.0 = Win10 Release|x64\n\t\t{209E8947-494D-4104-B44B-530CB68A6494}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{209E8947-494D-4104-B44B-530CB68A6494}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{209E8947-494D-4104-B44B-530CB68A6494}.Win10 Release|x86.Deploy.0 = Win10 Release|Win32\n\t\t{209E8947-494D-4104-B44B-530CB68A6494}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{209E8947-494D-4104-B44B-530CB68A6494}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{209E8947-494D-4104-B44B-530CB68A6494}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{209E8947-494D-4104-B44B-530CB68A6494}.Win11 Release|x64.Deploy.0 = Win11 Release|x64\n\t\t{209E8947-494D-4104-B44B-530CB68A6494}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{9D87E5A8-84AE-4775-90B5-CC75CA420670}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{9D87E5A8-84AE-4775-90B5-CC75CA420670}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{9D87E5A8-84AE-4775-90B5-CC75CA420670}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{9D87E5A8-84AE-4775-90B5-CC75CA420670}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{9D87E5A8-84AE-4775-90B5-CC75CA420670}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{9D87E5A8-84AE-4775-90B5-CC75CA420670}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{9D87E5A8-84AE-4775-90B5-CC75CA420670}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{9D87E5A8-84AE-4775-90B5-CC75CA420670}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{9D87E5A8-84AE-4775-90B5-CC75CA420670}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{B415038E-1FD4-4001-AEAB-CFA2177B1806}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{B415038E-1FD4-4001-AEAB-CFA2177B1806}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{B415038E-1FD4-4001-AEAB-CFA2177B1806}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{B415038E-1FD4-4001-AEAB-CFA2177B1806}.Win10 Release|x64.Deploy.0 = Win10 Release|x64\n\t\t{B415038E-1FD4-4001-AEAB-CFA2177B1806}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{B415038E-1FD4-4001-AEAB-CFA2177B1806}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{B415038E-1FD4-4001-AEAB-CFA2177B1806}.Win10 Release|x86.Deploy.0 = Win10 Release|Win32\n\t\t{B415038E-1FD4-4001-AEAB-CFA2177B1806}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{B415038E-1FD4-4001-AEAB-CFA2177B1806}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{B415038E-1FD4-4001-AEAB-CFA2177B1806}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{B415038E-1FD4-4001-AEAB-CFA2177B1806}.Win11 Release|x64.Deploy.0 = Win11 Release|x64\n\t\t{B415038E-1FD4-4001-AEAB-CFA2177B1806}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{92E3B437-C258-47FB-8856-D3FEA56A3BCC}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{92E3B437-C258-47FB-8856-D3FEA56A3BCC}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{92E3B437-C258-47FB-8856-D3FEA56A3BCC}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{92E3B437-C258-47FB-8856-D3FEA56A3BCC}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{92E3B437-C258-47FB-8856-D3FEA56A3BCC}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{92E3B437-C258-47FB-8856-D3FEA56A3BCC}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{92E3B437-C258-47FB-8856-D3FEA56A3BCC}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{92E3B437-C258-47FB-8856-D3FEA56A3BCC}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{92E3B437-C258-47FB-8856-D3FEA56A3BCC}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}.Win11 Release|x86.ActiveCfg = Win11 Release|Win32\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC}.Win11 Release|x86.Build.0 = Win11 Release|Win32\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win10 Release|ARM64.Deploy.0 = Win10 Release|ARM64\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win10 Release|x64.Deploy.0 = Win10 Release|x64\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win10 Release|x86.Deploy.0 = Win10 Release|Win32\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win11 Release|ARM64.Deploy.0 = Win11 Release|ARM64\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win11 Release|x64.Deploy.0 = Win11 Release|x64\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{2CFBBF52-9646-4E42-9E43-9CEE50735254}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{2CFBBF52-9646-4E42-9E43-9CEE50735254}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{2CFBBF52-9646-4E42-9E43-9CEE50735254}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{2CFBBF52-9646-4E42-9E43-9CEE50735254}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{2CFBBF52-9646-4E42-9E43-9CEE50735254}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{2CFBBF52-9646-4E42-9E43-9CEE50735254}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{2CFBBF52-9646-4E42-9E43-9CEE50735254}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{2CFBBF52-9646-4E42-9E43-9CEE50735254}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{2CFBBF52-9646-4E42-9E43-9CEE50735254}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{2CFBBF52-9646-4E42-9E43-9CEE50735254}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{2CFBBF52-9646-4E42-9E43-9CEE50735254}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win10 Release|x64.Deploy.0 = Win10 Release|x64\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win10 Release|x86.Deploy.0 = Win10 Release|Win32\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win11 Release|x64.Deploy.0 = Win11 Release|x64\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{5E68CCE9-F95D-4A6C-A5AD-DBA7CE0CA63A}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{5E68CCE9-F95D-4A6C-A5AD-DBA7CE0CA63A}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{5E68CCE9-F95D-4A6C-A5AD-DBA7CE0CA63A}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{5E68CCE9-F95D-4A6C-A5AD-DBA7CE0CA63A}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{5E68CCE9-F95D-4A6C-A5AD-DBA7CE0CA63A}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{5E68CCE9-F95D-4A6C-A5AD-DBA7CE0CA63A}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{5E68CCE9-F95D-4A6C-A5AD-DBA7CE0CA63A}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{5E68CCE9-F95D-4A6C-A5AD-DBA7CE0CA63A}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{5E68CCE9-F95D-4A6C-A5AD-DBA7CE0CA63A}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{5E68CCE9-F95D-4A6C-A5AD-DBA7CE0CA63A}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{5E68CCE9-F95D-4A6C-A5AD-DBA7CE0CA63A}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{BDE07E9E-2041-4853-8B74-7CF591C255E7}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{BDE07E9E-2041-4853-8B74-7CF591C255E7}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{BDE07E9E-2041-4853-8B74-7CF591C255E7}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{BDE07E9E-2041-4853-8B74-7CF591C255E7}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{BDE07E9E-2041-4853-8B74-7CF591C255E7}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{BDE07E9E-2041-4853-8B74-7CF591C255E7}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{BDE07E9E-2041-4853-8B74-7CF591C255E7}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{BDE07E9E-2041-4853-8B74-7CF591C255E7}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{BDE07E9E-2041-4853-8B74-7CF591C255E7}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{BDE07E9E-2041-4853-8B74-7CF591C255E7}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{BDE07E9E-2041-4853-8B74-7CF591C255E7}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{D572573A-7D73-404D-8DFA-7727278C242E}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{D572573A-7D73-404D-8DFA-7727278C242E}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{D572573A-7D73-404D-8DFA-7727278C242E}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{D572573A-7D73-404D-8DFA-7727278C242E}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{D572573A-7D73-404D-8DFA-7727278C242E}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{D572573A-7D73-404D-8DFA-7727278C242E}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{D572573A-7D73-404D-8DFA-7727278C242E}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{D572573A-7D73-404D-8DFA-7727278C242E}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{D572573A-7D73-404D-8DFA-7727278C242E}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{D572573A-7D73-404D-8DFA-7727278C242E}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{D572573A-7D73-404D-8DFA-7727278C242E}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win10 Release|ARM64.Deploy.0 = Win10 Release|ARM64\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win10 Release|x64.Deploy.0 = Win10 Release|x64\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win11 Release|ARM64.Deploy.0 = Win11 Release|ARM64\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win11 Release|x64.Deploy.0 = Win11 Release|x64\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{9D17F7FB-A784-4958-8DB4-0D50118334F0}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{9D17F7FB-A784-4958-8DB4-0D50118334F0}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{9D17F7FB-A784-4958-8DB4-0D50118334F0}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{9D17F7FB-A784-4958-8DB4-0D50118334F0}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{9D17F7FB-A784-4958-8DB4-0D50118334F0}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{9D17F7FB-A784-4958-8DB4-0D50118334F0}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{9D17F7FB-A784-4958-8DB4-0D50118334F0}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{9D17F7FB-A784-4958-8DB4-0D50118334F0}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{9D17F7FB-A784-4958-8DB4-0D50118334F0}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{9D17F7FB-A784-4958-8DB4-0D50118334F0}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{9D17F7FB-A784-4958-8DB4-0D50118334F0}.Win11 Release|x86.ActiveCfg = Win11 Release|x64\n\t\t{B8C784B3-7914-4539-B728-F2EAE5C9795E}.Win10 Release|ARM64.ActiveCfg = Win10 Release|ARM64\n\t\t{B8C784B3-7914-4539-B728-F2EAE5C9795E}.Win10 Release|ARM64.Build.0 = Win10 Release|ARM64\n\t\t{B8C784B3-7914-4539-B728-F2EAE5C9795E}.Win10 Release|x64.ActiveCfg = Win10 Release|x64\n\t\t{B8C784B3-7914-4539-B728-F2EAE5C9795E}.Win10 Release|x64.Build.0 = Win10 Release|x64\n\t\t{B8C784B3-7914-4539-B728-F2EAE5C9795E}.Win10 Release|x86.ActiveCfg = Win10 Release|Win32\n\t\t{B8C784B3-7914-4539-B728-F2EAE5C9795E}.Win10 Release|x86.Build.0 = Win10 Release|Win32\n\t\t{B8C784B3-7914-4539-B728-F2EAE5C9795E}.Win11 Release|ARM64.ActiveCfg = Win11 Release|ARM64\n\t\t{B8C784B3-7914-4539-B728-F2EAE5C9795E}.Win11 Release|ARM64.Build.0 = Win11 Release|ARM64\n\t\t{B8C784B3-7914-4539-B728-F2EAE5C9795E}.Win11 Release|x64.ActiveCfg = Win11 Release|x64\n\t\t{B8C784B3-7914-4539-B728-F2EAE5C9795E}.Win11 Release|x64.Build.0 = Win11 Release|x64\n\t\t{B8C784B3-7914-4539-B728-F2EAE5C9795E}.Win11 Release|x86.ActiveCfg = Win11 Release|Win32\n\t\t{B8C784B3-7914-4539-B728-F2EAE5C9795E}.Win11 Release|x86.Build.0 = Win11 Release|Win32\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{01D87C47-437A-4A16-8FD9-33FA5C99339E} = {9B50A368-22AC-421A-BA77-FA2BC760D7D9}\n\t\t{EC1B7990-EA6A-45FE-836C-2F050F6BB632} = {9B50A368-22AC-421A-BA77-FA2BC760D7D9}\n\t\t{DAD407F3-186A-48FC-88CE-E236AF3165C4} = {BE3962CB-0038-42CD-9182-AF4FDE2938F1}\n\t\t{EF30BBDE-57AE-48F8-BACD-3C3F8C45E64C} = {1F390D79-F68F-4F25-B4A0-0E50FEAE5D7D}\n\t\t{023DE679-5B3F-423F-88C4-714A12F3D864} = {1F390D79-F68F-4F25-B4A0-0E50FEAE5D7D}\n\t\t{1530C86E-90C0-4270-B3A2-0FB90152CA48} = {46DFC9B8-497E-4CD6-B3C8-C456B8EEBCC1}\n\t\t{EF874D69-710D-4B5D-AFDA-4A3E912B5838} = {9F1ACED2-9B2F-41C9-AE57-0B0958379DCD}\n\t\t{4471A5F4-C884-4EBA-8241-FEBBECE181CF} = {9F1ACED2-9B2F-41C9-AE57-0B0958379DCD}\n\t\t{E81CB0C6-F255-4A79-B972-8E49D15D957E} = {9F1ACED2-9B2F-41C9-AE57-0B0958379DCD}\n\t\t{230231C1-A0C2-4A37-B32B-E247A92311F4} = {E8F15557-9E22-4EFB-92A5-8AB69ACEC7A8}\n\t\t{CDABF347-89AB-4E09-A93F-324D4EFBC74F} = {D773D8E3-C5AD-4361-B46E-BF4AB358E7FE}\n\t\t{3E9E272D-6299-4B69-A49E-6D286EAB8CCA} = {D773D8E3-C5AD-4361-B46E-BF4AB358E7FE}\n\t\t{29D5D8BA-071A-464F-89DF-C0B4EE99F141} = {1062D4C0-2DC2-4AFA-A1A8-C57666FE923E}\n\t\t{7F794CE4-EFAC-4C54-AEEC-7873510C36EA} = {1062D4C0-2DC2-4AFA-A1A8-C57666FE923E}\n\t\t{1062D4C0-2DC2-4AFA-A1A8-C57666FE923E} = {DF169B23-B571-48BE-8287-4F0326B52D77}\n\t\t{B3402316-94F7-4526-AD07-870DEE0E660C} = {8C3B4963-5F22-4A7B-9704-4F1CEC625909}\n\t\t{B953395B-010B-432C-AFCD-6C4F6553905F} = {8C3B4963-5F22-4A7B-9704-4F1CEC625909}\n\t\t{09672FE6-A18C-4B3B-B1DC-1C7C1F61F9B4} = {1062D4C0-2DC2-4AFA-A1A8-C57666FE923E}\n\t\t{EC5DCAF5-3514-4E61-8201-10F5F060E096} = {E8F15557-9E22-4EFB-92A5-8AB69ACEC7A8}\n\t\t{03CA149C-ACBD-430E-A663-30D3A335F8A4} = {799496CA-9430-4FFF-BEA7-224AE168500B}\n\t\t{87AEE822-FF8B-4743-A567-8B46F4FA6D99} = {799496CA-9430-4FFF-BEA7-224AE168500B}\n\t\t{92C73575-146D-4C39-A9CA-7B9081EB6FD1} = {96D0A704-41DC-4FB2-9F63-8026821478D3}\n\t\t{F93779E1-51C1-4D12-9DC6-28FF6EB5589B} = {96D0A704-41DC-4FB2-9F63-8026821478D3}\n\t\t{DD9D3949-C1BC-426F-BFDA-D9310B8F9E3F} = {96D0A704-41DC-4FB2-9F63-8026821478D3}\n\t\t{8B100A20-3269-428E-8995-91CEC80756F9} = {96D0A704-41DC-4FB2-9F63-8026821478D3}\n\t\t{D9EF1144-4779-444C-ADD6-F733B749A862} = {F8BDF479-508B-40A3-9F3F-AB22FDF6D5FF}\n\t\t{8CB5D2D4-F3EA-4568-89A8-DCD332BDCF4E} = {9F1ACED2-9B2F-41C9-AE57-0B0958379DCD}\n\t\t{209E8947-494D-4104-B44B-530CB68A6494} = {1FD474F9-4963-48FE-A58B-C0ED1CD86880}\n\t\t{9D87E5A8-84AE-4775-90B5-CC75CA420670} = {1FD474F9-4963-48FE-A58B-C0ED1CD86880}\n\t\t{B415038E-1FD4-4001-AEAB-CFA2177B1806} = {1FD474F9-4963-48FE-A58B-C0ED1CD86880}\n\t\t{92E3B437-C258-47FB-8856-D3FEA56A3BCC} = {1062D4C0-2DC2-4AFA-A1A8-C57666FE923E}\n\t\t{3149C26A-F437-42BD-A40D-D10A695F93EF} = {1062D4C0-2DC2-4AFA-A1A8-C57666FE923E}\n\t\t{315D93F9-0F5C-4ACD-AFB1-96B1E62559BC} = {02B3EFA9-96A2-4117-BDFF-38908F1DB93F}\n\t\t{C65DA065-5828-45CF-89DB-FC4F21BC9E05} = {02B3EFA9-96A2-4117-BDFF-38908F1DB93F}\n\t\t{2CFBBF52-9646-4E42-9E43-9CEE50735254} = {02B3EFA9-96A2-4117-BDFF-38908F1DB93F}\n\t\t{3F2854A7-A604-4006-A79B-9EAFC63015B8} = {02B3EFA9-96A2-4117-BDFF-38908F1DB93F}\n\t\t{5E68CCE9-F95D-4A6C-A5AD-DBA7CE0CA63A} = {02B3EFA9-96A2-4117-BDFF-38908F1DB93F}\n\t\t{BDE07E9E-2041-4853-8B74-7CF591C255E7} = {711026E0-B4CD-437B-B9FA-31DF42877EC4}\n\t\t{8C2B5F43-18E2-41B6-AEBC-8B6704F7FCC6} = {711026E0-B4CD-437B-B9FA-31DF42877EC4}\n\t\t{D572573A-7D73-404D-8DFA-7727278C242E} = {711026E0-B4CD-437B-B9FA-31DF42877EC4}\n\t\t{4BEE8BEA-413F-4262-BC96-B03B509241E4} = {E8F15557-9E22-4EFB-92A5-8AB69ACEC7A8}\n\t\t{9D17F7FB-A784-4958-8DB4-0D50118334F0} = {B192B63C-8AC5-4480-A14E-920F549FECA9}\n\t\t{B8C784B3-7914-4539-B728-F2EAE5C9795E} = {02B3EFA9-96A2-4117-BDFF-38908F1DB93F}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {14F2DA75-8F24-42D5-BFE2-D7D0C03EAFA7}\n\tEndGlobalSection\nEndGlobal\n"
        }
      ]
    }
  ]
}