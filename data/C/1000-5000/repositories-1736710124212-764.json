{
  "metadata": {
    "timestamp": 1736710124212,
    "page": 764,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/google-authenticator-libpam",
      "stars": 1820,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.1435546875,
          "content": "### Project specific ignores\n.deps\n.dirstamp\ncmake-build-debug\nlibtool\n\ncontrib/rpm.spec\n\n### Project binaries\ngoogle-authenticator\nexamples/demo\n.libs\n\n### Project tests\ntest-suite.log\ntests/pam_google_authenticator_unittest\ntests/*.log\ntests/*.trs\n\n### Autotools template\n# http://www.gnu.org/software/automake\n\nMakefile.in\n/ar-lib\n/mdate-sh\n/py-compile\n/test-driver\n/ylwrap\n\n# http://www.gnu.org/software/autoconf\n\n/autom4te.cache\n/autoscan.log\n/autoscan-*.log\n/aclocal.m4\n/compile\n/config.guess\n/config.h.in\n/config.h\n/config.log\n/config.sub\n/config.status\n/configure\n/configure.scan\n/depcomp\n/install-sh\n/missing\n/stamp-h1\n\n# https://www.gnu.org/software/libtool/\n\n/ltmain.sh\n\n# http://www.gnu.org/software/texinfo\n\n/texinfo.tex\n### C++ template\n# Prerequisites\n*.d\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n*.smod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n### JetBrains template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n.idea/\n\n## File-based project format:\n*.iws\n*.iml\n\n## Plugin-specific files:\n\n# IntelliJ\n/out/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n### Archives template\n# It's better to unpack these files and commit the raw source because\n# git has its own built in compression methods.\n*.7z\n*.jar\n*.rar\n*.zip\n*.gz\n*.bzip\n*.bz2\n*.xz\n*.lzma\n*.cab\n\n#packing-only formats\n*.iso\n*.tar\n\n#package management formats\n*.dmg\n*.xpi\n*.gem\n*.egg\n*.deb\n*.rpm\n*.msi\n*.msm\n*.msp\n### Xcode template\n# Xcode\n#\n# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore\n\n## Build generated\nbuild/\nDerivedData/\n\n## Various settings\n*.pbxuser\n!default.pbxuser\n*.mode1v3\n!default.mode1v3\n*.mode2v3\n!default.mode2v3\n*.perspectivev3\n!default.perspectivev3\nxcuserdata/\n\n## Other\n*.moved-aside\n*.xccheckout\n*.xcscmblueprint\n### macOS template\n*.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n### Eclipse template\n\n.metadata\nbin/\ntmp/\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.settings/\n.loadpath\n.recommenders\n\n# Eclipse Core\n.project\n\n# External tool builders\n.externalToolBuilders/\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n\n# PyDev specific (Python IDE for Eclipse)\n*.pydevproject\n\n# CDT-specific (C/C++ Development Tooling)\n.cproject\n\n# JDT-specific (Eclipse Java Development Tools)\n.classpath\n\n# Java annotation processor (APT)\n.factorypath\n\n# PDT-specific (PHP Development Tools)\n.buildpath\n\n# sbteclipse plugin\n.target\n\n# Tern plugin\n.tern-project\n\n# TeXlipse plugin\n.texlipse\n\n# STS (Spring Tool Suite)\n.springBeans\n\n# Code Recommenders\n.recommenders/\n\n# Scala IDE specific (Scala & Java development for Eclipse)\n.cache-main\n.scala_dependencies\n.worksheet\n### C template\n# Prerequisites\n\n# Object files\n*.ko\n*.elf\n\n# Linker output\n*.ilk\n*.map\n*.exp\n\n# Precompiled Headers\n\n# Libraries\n\n# Shared objects (inc. Windows DLLs)\n*.so.*\n\n# Executables\n*.i*86\n*.x86_64\n*.hex\n\n# Debug files\n*.dSYM/\n*.su\n*.idb\n*.pdb\n\n# Kernel Module Compile Results\n*.mod*\n*.cmd\nmodules.order\nModule.symvers\nMkfile.old\ndkms.conf\n### CMake template\nCMakeCache.txt\nCMakeFiles\nCMakeLists.txt\nCMakeScripts\nTesting\nMakefile\ncmake_install.cmake\ninstall_manifest.txt\ncompile_commands.json\nCTestTestfile.cmake\n### NetBeans template\nnbproject/private/\nnbbuild/\ndist/\nnbdist/\n.nb-gradle/\n### Vim template\n# swap\n[._]*.s[a-v][a-z]\n[._]*.sw[a-p]\n[._]s[a-v][a-z]\n[._]sw[a-p]\n# session\nSession.vim\n# temporary\n.netrwhist\n*~\n# auto-generated tag files\ntags\nbase32\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1787109375,
          "content": "language: c\n\ncompiler:\n  - clang\n  - gcc\n\nscript: ./bootstrap.sh && ./configure && make && make check\n\nsudo: false\n\naddons:\n  apt:\n    packages:\n    - libpam0g-dev\n    - libqrencode3\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.416015625,
          "content": "Want to contribute? Great! First, read this page (including the small print at the end).\n\n### Before you contribute\nBefore we can use your code, you must sign the\n[Google Individual Contributor License Agreement](https://cla.developers.google.com/about/google-individual)\n(CLA), which you can do online. The CLA is necessary mainly because you own the\ncopyright to your changes, even after your contribution becomes part of our\ncodebase, so we need your permission to use and distribute your code. We also\nneed to be sure of various other thingsâ€”for instance that you'll tell us if you\nknow that your code infringes on other people's patents. You don't have to sign\nthe CLA until after you've submitted your code for review and a member has\napproved it, but you must do it before we can put your code into our codebase.\nBefore you start working on a larger contribution, you should get in touch with\nus first through the issue tracker with your idea so that we can help out and\npossibly guide you. Coordinating up front makes it much easier to avoid\nfrustration later on.\n\n### Code reviews\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose.\n\n### The small print\nContributions made by corporations are covered by a different agreement than\nthe one above, the\n[Software Grant and Corporate Contributor License Agreement](https://cla.developers.google.com/about/google-corporate).\n"
        },
        {
          "name": "FILEFORMAT",
          "type": "blob",
          "size": 2.9091796875,
          "content": "All configuration data and state is kept in ~/.google_authenticator\nThe file is all ASCII, but is kept in a very simple-to-parse and rigid\nfile format.\n\nThe file size is currently limited to 1kB. This should be generous even\nwhen using a very large list of scratch codes.\n\nThe first line is the base32 encoded secret. It uses characters in the range\nA..Z2..7. The secret is used after first trying any one-time scratch codes.\nHOTP mode is used only if HOTP_COUNTER is present.\nTOTP mode is used only if TOTP_AUTH is present *and* HOTP_COUNTER is\nnot present.\n\nThe following lines are optional. They all start with a double quote character,\nfollowed by a space character. Followed by an option name. Option names are\nall upper-case and must include an underscore. This ensures that they cannot\naccidentally appear anywhere else in the file.\n\nOptions can be followed by option-specific parameters.\n\nCurrently, the following options are recognized:\n\n  DISALLOW_REUSE\n    if present, this signals that a time-based token can be used\n    at most once. Any attempt to log in using the same token will be denied.\n    This means that users can typically not log in faster than once every\n    ~30 seconds.\n\n    The option is followed by a space-separated list of time stamps that\n    have previously been used for login attempts.\n\n    This option has no effect when HOTP_COUNTER is present.\n\n  RATE_LIMIT n m ...\n    this optional parameter restricts the number of logins to at most \"n\"\n    within each \"m\" second interval. Additional parameters in this line are\n    undocumented; they are used internally to keep track of state.\n\n  TOTP_AUTH\n    the presence of this option indicates that the secret can be used to\n    authenticate users with a time-based token.\n\n  STEP_SIZE n\n    the number of seconds in each time step during which a TOTP code is valid.\n    The default is that a code is valid for 30 seconds.\n\n  HOTP_COUNTER n\n    the presence of this option indicates that the secret can be used to\n    authenticate users with a counter-based token.  The argument \"n\"\n    represents which counter value the token will accept next.  It should\n    be initialized to 1.\n\n  WINDOW_SIZE n\n    the default window size is 3, allowing up to one extra valid token\n    before and after the currently active one. This might be too restrictive\n    if the client and the server experience significant time skew.\n    You can provide a parameter to increase the login window size from 3 to \"n\"\n\n    In counter-based mode, this option is the number of valid tokens after\n    the currently active one.  The default is almost certainly too restrictive\n    for most users as invalid login attempts and generated-but-not-used\n    tokens both contribute to synchronization problems.\n\n\nAny all-numeric sequence of eight-digit numbers are randomly generated\none-time scratch code tokens. The user can enter any arbitrary\none-time code to log into his account. The code will then be removed\nfrom the file.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 2.4267578125,
          "content": "AUTOMAKE_OPTIONS = foreign subdir-objects\nACLOCAL_AMFLAGS = -I build\n\npamdir = $(libdir)/security\n\nbin_PROGRAMS      = google-authenticator\nnoinst_PROGRAMS   = base32\ndist_man_MANS     = man/google-authenticator.1\ndist_man_MANS     += man/pam_google_authenticator.8\npam_LTLIBRARIES   = pam_google_authenticator.la\n\ndist_doc_DATA  = FILEFORMAT README.md\ndist_html_DATA = totp.html\n\nMODULES_LDFLAGS = -avoid-version -module -shared -export-dynamic\n\nCORE_SRC  = src/util.h   src/util.c\nCORE_SRC += src/base32.h src/base32.c\nCORE_SRC += src/hmac.h   src/hmac.c\nCORE_SRC += src/sha1.h   src/sha1.c\n\nbase32_SOURCES=\\\nsrc/base32.c \\\nsrc/base32_prog.c\n\ngoogle_authenticator_SOURCES = \\\n\tsrc/google-authenticator.c \\\n\t$(CORE_SRC)\n\npam_google_authenticator_la_SOURCES = \\\n\tsrc/pam_google_authenticator.c \\\n\t$(CORE_SRC)\npam_google_authenticator_la_LIBADD  = -lpam\npam_google_authenticator_la_CFLAGS  = $(AM_CFLAGS)\npam_google_authenticator_la_LDFLAGS = $(AM_LDFLAGS) $(MODULES_LDFLAGS) -export-symbols-regex \"pam_sm_(setcred|open_session|authenticate)\"\n\n\ncheck_PROGRAMS    = examples/demo tests/pam_google_authenticator_unittest\ncheck_LTLIBRARIES = libpam_google_authenticator_testing.la\nTESTS             = tests/pam_google_authenticator_unittest tests/base32_test.sh\nEXTRA_DIST        = tests/base32_test.sh\n\nlibpam_google_authenticator_testing_la_SOURCES = \\\n\tsrc/pam_google_authenticator.c \\\n\t$(CORE_SRC)\nlibpam_google_authenticator_testing_la_CFLAGS  = $(AM_CFLAGS) -DTESTING=1\nlibpam_google_authenticator_testing_la_LDFLAGS = $(AM_LDFLAGS) $(MODULES_LDFLAGS) -rpath $(abs_top_builddir) -lpam\n\ntests_pam_google_authenticator_unittest_SOURCES = \\\n\ttests/pam_google_authenticator_unittest.c \\\n\t$(CORE_SRC)\ntests_pam_google_authenticator_unittest_LDADD   = -lpam\ntests_pam_google_authenticator_unittest_LDFLAGS = $(AM_LDFLAGS) -export-dynamic\n\ntest: check\n\n\nexamples_demo_SOURCES = \\\n\tsrc/pam_google_authenticator.c \\\n\t$(CORE_SRC) \\\n\texamples/demo.c\nexamples_demo_LDADD  = -lpam\nexamples_demo_CFLAGS = $(AM_CFLAGS) -DDEMO=1\n\n\nsuper-clean: maintainer-clean\n\trm -fr aclocal autom4te.cache/ m4 missing libtool config.guess\n\trm -fr config.lt config.status config.sub configure depcomp\n\trm -fr libtool install-sh  *~ Makefile aclocal.m4 config.h.in ltmain.sh\n\trm -fr Makefile.in test-driver compile\n\ndoc:\n\t(cd man && pandoc --standalone --to man google-authenticator.1.md > google-authenticator.1)\n\t(cd man && pandoc --standalone --to man pam_google_authenticator.8.md > pam_google_authenticator.8)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.7412109375,
          "content": "# Google Authenticator PAM module\n\nExample PAM module demonstrating two-factor authentication for logging\ninto servers via SSH, OpenVPN, etcâ€¦\n\nThis project is not about logging in to Google, Facebook, or other\nTOTP/HOTP second factor systems, even if they recommend using the\nGoogle Authenticator apps.\n\nHMAC-Based One-time Password (HOTP) is specified in\n[RFC 4226](https://tools.ietf.org/html/rfc4226) and \nTime-based One-time Password (TOTP) is specified in\n[RFC 6238](https://tools.ietf.org/html/rfc6238).\n\n[![Build Status](https://travis-ci.org/google/google-authenticator-libpam.svg?branch=master)](https://travis-ci.org/google/google-authenticator-libpam)\n\n## Build & install\n```shell\n./bootstrap.sh\n./configure\nmake\nsudo make install\n```\n\nIf you don't have access to \"sudo\", you have to manually become \"root\" prior\nto calling \"make install\".\n\n## Setting up the PAM module for your system\n\nFor highest security, make sure that both password and OTP are being requested\neven if password and/or OTP are incorrect. This means that *at least* the first\nof `pam_unix.so` (or whatever other module is used to verify passwords) and\n`pam_google_authenticator.so` should be set as `required`, not `requisite`. It\nprobably can't hurt to have both be `required`, but it could depend on the rest\nof your PAM config.\n\nIf you use HOTP (counter based as opposed to time based) then add the option\n`no_increment_hotp` to make sure the counter isn't incremented for failed\nattempts.\n\nAdd this line to your PAM configuration file:\n\n`  auth required pam_google_authenticator.so no_increment_hotp`\n\n## Setting up a user\n\nRun the `google-authenticator` binary to create a new secret key in your home\ndirectory. These settings will be stored in `~/.google_authenticator`.\n\nIf your system supports the \"libqrencode\" library, you will be shown a QRCode\nthat you can scan using the Android \"Google Authenticator\" application.\n\nIf your system does not have this library, you can either follow the URL that\n`google-authenticator` outputs, or you have to manually enter the alphanumeric\nsecret key into the Android \"Google Authenticator\" application.\n\nIn either case, after you have added the key, click-and-hold until the context\nmenu shows. Then check that the key's verification value matches (this feature\nmight not be available in all builds of the Android application).\n\nEach time you log into your system, you will now be prompted for your TOTP code\n(time based one-time-password) or HOTP (counter-based), depending on options\ngiven to `google-authenticator`, after having entered your normal user id and\nyour normal UNIX account password.\n\nDuring the initial roll-out process, you might find that not all users have\ncreated a secret key yet. If you would still like them to be able to log\nin, you can pass the \"nullok\" option on the module's command line:\n\n`  auth required pam_google_authenticator.so nullok`\n\n## Encrypted home directories\n\nIf your system encrypts home directories until after your users entered their\npassword, you either have to re-arrange the entries in the PAM configuration\nfile to decrypt the home directory prior to asking for the OTP code, or\nyou have to store the secret file in a non-standard location:\n\n`  auth required pam_google_authenticator.so secret=/var/unencrypted-home/${USER}/.google_authenticator`\n\nwould be a possible choice. Make sure to set appropriate permissions. You also\nhave to tell your users to manually move their .google_authenticator file to\nthis location.\n\nIn addition to \"${USER}\", the `secret=` option also recognizes both \"~\" and\n`${HOME}` as short-hands for the user's home directory.\n\nWhen using the `secret=` option, you might want to also set the `user=`\noption. The latter forces the PAM module to switch to a dedicated hard-coded\nuser id prior to doing any file operations. When using the `user=` option, you\nmust not include \"~\" or \"${HOME}\" in the filename.\n\nThe `user=` option can also be useful if you want to authenticate users who do\nnot have traditional UNIX accounts on your system.\n\n## Module options\n\n### secret=/path/to/secret/file\n\nSee \"encrypted home directories\", above.\n\n### authtok_prompt=prompt\n\nOverrides default token prompt. If you want to include spaces in the prompt,\nwrap the whole argument in square brackets:\n\n`  auth required pam_google_authenticator.so [authtok_prompt=Your secret token: ]`\n\n### user=some-user\n\nForce the PAM module to switch to a hard-coded user id prior to doing any file\noperations. Commonly used with `secret=`.\n\n### no_strict_owner\n\nDANGEROUS OPTION!\n\nBy default the PAM module requires that the secrets file must be owned the user\nlogging in (or if `user=` is specified, owned by that user). This option\ndisables that check.\n\nThis option can be used to allow daemons not running as root to still handle\nconfiguration files not owned by that user, for example owned by the users\nthemselves.\n\n### allowed_perm=0nnn\n\nDANGEROUS OPTION!\n\nBy default, the PAM module requires the secrets file to be readable only by the\nowner of the file (mode 0600 by default). In situations where the module is used\nin a non-default configuration, an administrator may need more lenient file\npermissions, or a specific setting for their use case.\n\n### debug\n\nEnable more verbose log messages in syslog.\n\n### try_first_pass / use_first_pass / forward_pass\n\nSome PAM clients cannot prompt the user for more than just the password. To\nwork around this problem, this PAM module supports stacking. If you pass the\n`forward_pass` option, the `pam_google_authenticator` module queries the user\nfor both the system password and the verification code in a single prompt.\nIt then forwards the system password to the next PAM module, which will have\nto be configured with the `use_first_pass` option.\n\nIn turn, `pam_google_authenticator` module also supports both the standard\n`use_first_pass` and `try_first_pass` options. But most users would not need\nto set those on the `pam_google_authenticator`.\n\n### noskewadj\n\nIf you discover that your TOTP code never works, this is most commonly the\nresult of the clock on your server being different from the one on your Android\ndevice. The PAM module makes an attempt to compensate for time skew. You can\nteach it about the amount of skew that you are experiencing, by trying to log\nit three times in a row. Make sure you always wait 30s (but not longer), so\nthat you get three distinct TOTP codes.\n\nSome administrators prefer that time skew isn't adjusted automatically, as\ndoing so results in a slightly less secure system configuration. If you want\nto disable it, you can do so on the module command line:\n\n`  auth required pam_google_authenticator.so noskewadj`\n\n### no_increment_hotp\n\nDon't increment the counter for failed HOTP attempts.  Normally you should set\nthis so failed password attempts by an attacker without a token don't lock out\nthe authorized user.\n\n### nullok\n\nAllow users to log in without OTP, if they haven't set up OTP yet.\n\nPAM requires at least one `SUCCESS` answer from a module, and `nullok`\ncauses this module to say `IGNORE`. This means that if this option is\nused at least one other module must have said `SUCCESS`. One way to do\nthis is to add `auth required pam_permit.so` to the end of the PAM\nconfig.\n\n### echo_verification_code\n\nBy default, the PAM module does not echo the verification code when it is\nentered by the user. In some situations, the administrator might prefer a\ndifferent behavior. Pass the `echo_verification_code` option to the module\nin order to enable echoing.\n\nIf you would like verification codes that are counter based instead of\ntimebased, use the `google-authenticator` binary to generate a secret key in\nyour home directory with the proper option.  In this mode, clock skew is\nirrelevant and the window size option now applies to how many codes beyond the\ncurrent one that would be accepted, to reduce synchronization problems.\n\n### grace_period=seconds\n\nIf present and non-zero, provide a grace period during which a second\nverification code will not be requested. Try setting seconds to 86400\nto allow a full-day between requesting codes; or 3600 for an hour.\n\nThis works by adding an (IP address, timestamp) pair to the security\nfile after a successful one-time-password login;\nonly the last ten distinct IP addresses are tracked.\n\n### allow_readonly\n\nDANGEROUS OPTION!\n\nWith this option an attacker with ability to fill up the filesystem (flood\nserver with web requests, or if they have an account just fill the disk up) can\nforce a situation where one-time-passwords can be reused, defeating the purpose\nof \"one time\".\n\nBy default, if the `grace_period` option is defined the PAM module requires\nsome free space to store the IP address and timestamp of the last login.\nIt could prevent access if a server has no free space or in case of an\nupdate config file error. With the `allow_readonly` option you can ignore\nany errors which could occur during config file update.\n"
        },
        {
          "name": "bootstrap.sh",
          "type": "blob",
          "size": 0.5908203125,
          "content": "#!/bin/sh\n# Copyright 2014 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nexec autoreconf -i\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 2.2568359375,
          "content": "AC_PREREQ(2.61)\nAC_INIT(google-authenticator, 1.10, habets@google.com)\nAC_CONFIG_SRCDIR([src/google-authenticator.c])\nAC_CONFIG_AUX_DIR([build])\nAC_CONFIG_MACRO_DIR([build])\n\n# --enable-silent-rules\nm4_ifdef([AM_SILENT_RULES],\n  [AM_SILENT_RULES([yes])],\n  [AC_SUBST([AM_DEFAULT_VERBOSITY], [1])])\n\nAC_USE_SYSTEM_EXTENSIONS\nAM_INIT_AUTOMAKE([foreign subdir-objects])\nAM_MAINTAINER_MODE([enable])\n\nLT_INIT\nAC_PROG_CC\nAC_PROG_CC_STDC\n\nAC_CHECK_HEADERS([sys/fsuid.h])\nAC_CHECK_FUNCS([ \\\n\texplicit_bzero \\\n\tsetfsuid \\\n\tsetfsgid \\\n])\n\nAC_CHECK_HEADERS_ONCE([security/pam_appl.h])\n# On Solaris at least, <security/pam_modules.h> requires <security/pam_appl.h>\n# to be included first\nAC_CHECK_HEADER([security/pam_modules.h], [], [], \\\n\t\t[#ifdef HAVE_SECURITY_PAM_APPL_H\n\t\t# include <security/pam_appl.h>\n\t\t#endif\n\t\t])\nAC_CHECK_LIB([pam], [pam_get_user], [:])\nAS_IF([test \"x$ac_cv_header_security_pam_modules_h\" = \"xno\" \\\n       -o \"x$ac_cv_lib_pam_pam_get_user\" = \"xno\"], [\n  AC_MSG_ERROR([Unable to find the PAM library or the PAM header files])\n])\n\nAC_MSG_CHECKING([whether certain PAM functions require const arguments])\nAC_LANG_PUSH(C)\n# Force test to bail if const isn't needed\nAC_LANG_WERROR\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n\t#include <security/pam_appl.h>\n\t#include <security/pam_modules.h>\n]],[[\n\tconst void **item = 0;\n\tint dummy = 0;\n\t/*\n\t * since pam_handle_t is opaque on at least some platforms, give it\n\t * a non-NULL dummy value\n\t */\n\t const pam_handle_t *ph = (const pam_handle_t *)&dummy;\n\t(void) pam_get_item(ph, 0, item);\n]])],[AC_DEFINE([PAM_CONST], [const], \\\n\t[Define if certain PAM functions require const arguments])\n\t\tAC_MSG_RESULT([yes])],\n\t[AC_DEFINE([PAM_CONST], [], \\\n\t[Prevent certain PAM functions from using const arguments])\n\tAC_MSG_RESULT([no])])\n\n\n\tAC_MSG_CHECKING(whether compiler understands -Wall)\n\told_CFLAGS=\"$CFLAGS\"\n\tCFLAGS=\"$CFLAGS -Wall\"\n\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([],[])],\n\t  AC_MSG_RESULT(yes),\n\t  AC_MSG_RESULT(no)\n\t  CFLAGS=\"$old_CFLAGS\")\n\nAC_LANG_POP(C)\n\n\n\nAC_SEARCH_LIBS([dlopen], [dl])\n\nAC_CONFIG_HEADER(config.h)\nAC_CONFIG_FILES([Makefile contrib/rpm.spec])\nAC_OUTPUT\n\necho \"\n  $PACKAGE_NAME version $PACKAGE_VERSION\n  Prefix.........: $prefix\n  Debug Build....: $debug\n  C Compiler.....: $CC $CFLAGS $CPPFLAGS\n  Linker.........: $LD $LDFLAGS $LIBS\n\"\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "totp.html",
          "type": "blob",
          "size": 9.2021484375,
          "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<!-- TOTP Debugger\n  --\n  -- Copyright 2011 Google Inc.\n  -- Author: Markus Gutschke\n  --\n  -- Licensed under the Apache License, Version 2.0 (the \"License\");\n  -- you may not use this file except in compliance with the License.\n  -- You may obtain a copy of the License at\n  --\n  --      http://www.apache.org/licenses/LICENSE-2.0\n  --\n  -- Unless required by applicable law or agreed to in writing, software\n  -- distributed under the License is distributed on an \"AS IS\" BASIS,\n  -- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  -- See the License for the specific language governing permissions and\n  -- limitations under the License.\n-->\n<head>\n  <link rel=\"shortcut icon\" href=\"http://code.google.com/p/google-authenticator/logo\" type=\"image/png\">\n  <title>TOTP Debugger</title>\n  <script src=\"https://utc-time.appspot.com\"></script>\n    <!-- Returns a line of the form:\n      --   var timeskew = new Date().getTime() - XXX.XX;\n      -->\n\n  <script> <!--\n// Given a secret key \"K\" and a timestamp \"t\" (in 30s units since the\n// beginning of the epoch), return a TOTP code.\nfunction totp(K,t) {\n  function sha1(C){\n    function L(x,b){return x<<b|x>>>32-b;}\n    var l=C.length,D=C.concat([1<<31]),V=0x67452301,W=0x88888888,\n        Y=271733878,X=Y^W,Z=0xC3D2E1F0;W^=V;\n    do D.push(0);while(D.length+1&15);D.push(32*l);\n    while (D.length){\n      var E=D.splice(0,16),a=V,b=W,c=X,d=Y,e=Z,f,k,i=12;\n      function I(x){var t=L(a,5)+f+e+k+E[x];e=d;d=c;c=L(b,30);b=a;a=t;}\n      for(;++i<77;)E.push(L(E[i]^E[i-5]^E[i-11]^E[i-13],1));\n      k=0x5A827999;for(i=0;i<20;I(i++))f=b&c|~b&d;\n      k=0x6ED9EBA1;for(;i<40;I(i++))f=b^c^d;\n      k=0x8F1BBCDC;for(;i<60;I(i++))f=b&c|b&d|c&d;\n      k=0xCA62C1D6;for(;i<80;I(i++))f=b^c^d;\n      V+=a;W+=b;X+=c;Y+=d;Z+=e;}\n    return[V,W,X,Y,Z];\n  }\n  var k=[],l=[],i=0,j=0,c=0;\n  for (;i<K.length;){\n    c=c*32+'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'.\n      indexOf(K.charAt(i++).toUpperCase());\n    if((j+=5)>31)k.push(Math.floor(c/(1<<(j-=32)))),c&=31;}\n  j&&k.push(c<<(32-j));\n  for(i=0;i<16;++i)l.push(0x6A6A6A6A^(k[i]=k[i]^0x5C5C5C5C));\n  var s=sha1(k.concat(sha1(l.concat([0,t])))),o=s[4]&0xF;\n  return ((s[o>>2]<<8*(o&3)|(o&3?s[(o>>2)+1]>>>8*(4-o&3):0))&-1>>>1)%1000000;\n}\n\n// Periodically check whether we need to update the UI. It would be a little\n// more efficient to only call this function as a direct result of\n// significant state changes. But polling is cheap, and keeps the code a\n// little easier.\nvar lastsecret,lastlabel,lastepochseconds,lastoverrideepoch;\nvar lasttimestamp,lastoverride,lastsearch;\nfunction refresh() {\n  // Compute current TOTP code\n  var k=document.getElementById('secret').value.\n    replace(/[^ABCDEFGHIJKLMNOPQRSTUVWXYZ234567]/gi, '');\n  var d=document.getElementById('overrideepoch').value.replace(/[^0-9]/g, '');\n  if (d) e=parseInt(d); else e=Math.floor(new Date().getTime()/1000);\n  var t=Math.floor(e/30);\n  var s=document.getElementById('override').value.replace(/[^0-9]/g, '');\n  if (s) { t=parseInt(s); e=30*t; }\n  var label=escape(document.getElementById('label').value);\n  var search=document.getElementById('search').value;\n\n  // If TOTP code has changed (either because of user edits, or\n  // because of elapsed time), update the user interface.\n  if (k != lastsecret || label != lastlabel || e != lastepochseconds ||\n      d != lastoverrideepoch || t != lasttimestamp || s != lastoverride ||\n      search != lastsearch) {\n    if (d != lastoverrideepoch) {\n      document.getElementById('override').value = '';\n      s = '';\n    } else if (s != lastoverride) {\n      document.getElementById('overrideepoch').value = '';\n      d = '';\n    }\n    lastsecret=k;\n    lastlabel=label;\n    lastepochseconds=e;\n    lastoverrideepoch=d;\n    lasttimestamp=t;\n    lastoverride=s;\n    lastsearch=search;\n\n    var code=totp(k,t);\n\n    // Compute the OTPAuth URL and the associated QR code\n    var h='https://www.google.com/chart?chs=200x200&chld=M|0&'+\n      'cht=qr&chl=otpauth://totp/'+encodeURI(label)+'%3Fsecret%3D'+k;\n    var a=document.getElementById('authurl')\n    a.innerHTML='otpauth://totp/'+label+'?secret='+k;\n    a.href=h;\n    document.getElementById('aqr').href=h;\n    var q=document.getElementById('qr');\n    q.src=h;\n    q.alt=label+' '+k;\n    q.title=label+' '+k;\n\n    // Show the current time in seconds and in 30s increments since midnight\n    // Jan 1st, 1970. Optionally, let the user override this timestamp.\n    document.getElementById('epoch').innerHTML=e;\n    document.getElementById('ts').innerHTML=t;\n\n    // Show the current TOTP code.\n    document.getElementById('totp').innerHTML=code;\n\n    // If the user manually entered a TOTP code, try to find a matching code\n    // within a 25h window.\n    var result='';\n    if (search && !!(search=parseInt(search))) {\n      for (var i=0; i < 25*120; ++i) {\n        if (search == totp(k, t+(i&1?-Math.floor(i/2):Math.floor(i/2)))) {\n          if (i<2) {\n            result='&nbsp;';\n            break;\n          }\n          if (i >= 120) {\n            result=result + Math.floor(i/120) + 'h ';\n            i%=120;\n          }\n          if (i >= 4) {\n            result=result + Math.floor(i/4) + 'min ';\n            i%=4;\n          }\n          if (i&2) {\n            result=result + '30s ';\n          }\n          if (i&1) {\n            result='Code was valid ' + result + 'ago';\n          } else {\n            result='Code will be valid in ' + result;\n          }\n          break;\n        }\n      }\n      if (!result) {\n        result='No such code within a &#177;12h window';\n      }\n    }\n    document.getElementById('searchresult').innerHTML=result + '&nbsp;';\n\n    // If possible, compare the current time as reported by Javascript\n    // to \"official\" time as reported by AppEngine. If there is any significant\n    // difference, show a warning message. We always expect at least a minor\n    // time skew due to round trip delays, which we are not bothering to\n    // compensate for.\n    if (typeof timeskew != undefined) {\n      var ts=document.getElementById('timeskew');\n      if (Math.abs(timeskew) < 2000) {\n        ts.style.color='';\n        ts.innerHTML=\"Your computer's time is set correctly. TOTP codes \" +\n                     \"will be computed accurately.\";\n      } else if (Math.abs(timeskew) < 30000) {\n        ts.style.color='';\n        ts.innerHTML=\"Your computer's time is off by \" +\n          (Math.round(Math.abs(timeskew)/1000)) + \" seconds. This is within \" +\n          \"acceptable tolerances. Computed TOTP codes might be different \" +\n          \"from the ones in the mobile application, but they will be \" +\n          \"accepted by the server.\";\n      } else {\n        ts.style.color='#dd0000';\n        ts.innerHTML=\"<b>Your computer's time is off by \" +\n          (Math.round(Math.abs(timeskew)/1000)) + \" seconds. Computed TOTP \" +\n          \"codes are probably incorrect.</b>\";\n      }\n    }\n  }\n}\n  --></script>\n</head>\n<body style=\"font-family: sans-serif\" onload=\"setInterval(refresh, 100)\">\n  <h1>TOTP Debugger</h1>\n  <table>\n    <tr><td colspan=\"7\"><a style=\"text-decoration: none; color: black\"\n                           id=\"authurl\"></a></td></tr>\n    <tr><td colspan=\"3\">Enter&nbsp;secret&nbsp;key&nbsp;in&nbsp;BASE32:&nbsp;</td>\n        <td><input type=\"text\" id=\"secret\" /></td>\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td rowspan=\"8\"><a style=\"text-decoration: none\" id=\"aqr\">\n          <img id=\"qr\" border=\"0\"></a></td><td width=\"100%\">&nbsp;</td></tr>\n    <tr><td colspan=\"3\">Account&nbsp;label:&nbsp;</td>\n        <td><input type=\"text\" id=\"label\" /></td></tr>\n    <tr><td>Interval:&nbsp;</td><td align=\"right\">30s</td><td>&nbsp;</td></tr>\n    <tr><td>Time:&nbsp;</td><td align=\"right\">\n          <span id=\"epoch\"></span></td><td>&nbsp;</td><td>\n          <input type=\"text\" id=\"overrideepoch\" /></td></tr>\n    <tr><td>Timestamp:&nbsp;</td><td align=\"right\"><span id=\"ts\"></span></td>\n        <td>&nbsp;</td><td><input type=\"text\" id=\"override\" /></td></tr>\n    <tr><td>TOTP:&nbsp;</td><td align=\"right\"><span id=\"totp\"></span></td>\n        <td>&nbsp;</td><td><input type=\"text\" id=\"search\" /></td></tr>\n    <tr><td colspan=\"4\" id=\"searchresult\"></td></tr>\n  </table>\n  <br />\n  <div id=\"timeskew\" style=\"width: 80%\"></div>\n  <br />\n  <br />\n  <div style=\"width: 80%; color: #dd0000; font-size: small\">\n    <p><b>WARNING!</b> This website is a development and debugging tool only.\n    Do <b>not</b> use it to generate security tokens for logging into your\n    account. You should never store, process or otherwise access the secret\n    key on the same machine that you use for accessing your account. Doing so\n    completely defeats the security of two-step verification.</p>\n    <p>Instead, use one of the mobile phone clients made available by the\n    <a href=\"https://github.com/google/google-authenticator\">Google\n    Authenticator</a> project. Or follow the <a href=\"http://www.google.com/support/accounts/bin/static.py?hl=en&page=guide.cs&guide=1056283&topic=1056285\">instructions</a>\n    provided by Google.</p>\n    <p>If you ever entered your real secret key into this website, please\n    immediately <a href=\"https://www.google.com/accounts/SmsAuthConfig\">reset\n    your secret key</a>.</p>\n  </div>\n</body>\n</html>\n"
        },
        {
          "name": "utc-time",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}