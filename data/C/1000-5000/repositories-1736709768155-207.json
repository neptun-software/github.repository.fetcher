{
  "metadata": {
    "timestamp": 1736709768155,
    "page": 207,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "blackmagic-debug/blackmagic",
      "stars": 3368,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.64453125,
          "content": "---\nAccessModifierOffset: -4\nAlignAfterOpenBracket: DontAlign\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignConsecutiveMacros: true\nAlignEscapedNewlines: Left\nAlignOperands: DontAlign\nAllowAllArgumentsOnNextLine: true\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: false\nAllowShortEnumsOnASingleLine: false\n# This is currently broken:\n# https://github.com/llvm/llvm-project/issues/53442\n#AlignArrayOfStructures: Left\nBraceWrapping:\n  AfterClass: false\n  AfterControlStatement: false\n  AfterEnum: false\n  AfterFunction: true\n  AfterNamespace: true\n  AfterObjCDeclaration: false\n  AfterStruct: false\n  AfterUnion: false\n  BeforeCatch: false\n  BeforeElse: false\n  IndentBraces: false\nBreakBeforeBraces: Linux\nBreakBeforeTernaryOperators: false\nBasedOnStyle: LLVM\nBinPackArguments: true\nBinPackParameters: true\nColumnLimit: 120\nCpp11BracedListStyle: true\nIndentCaseLabels: false\nIndentWidth: 4\nContinuationIndentWidth: 4\nMaxEmptyLinesToKeep: 1\nKeepEmptyLinesAtTheStartOfBlocks: false\nFixNamespaceComments: true\nIfMacros: ['TRY', 'CATCH']\nForEachMacros: ['TRY_CATCH']\n#QualifierAlignment: Custom\n#QualifierOrder: ['inline', 'static', 'const', 'volatile', 'type']\nSpaceAroundPointerQualifiers: After\nSeparateDefinitionBlocks: Always\n\n# Taken from git's rules\n#PenaltyBreakAssignment: 10 # Unknown to clang-format-4.0\nPenaltyBreakBeforeFirstCallParameter: 50\nPenaltyBreakComment: 10\nPenaltyBreakFirstLessLess: 0\nPenaltyBreakString: 10\nPenaltyExcessCharacter: 100\nPenaltyReturnTypeOnItsOwnLine: 60\n\nPointerAlignment: Right\nReflowComments: false\nSpacesBeforeTrailingComments: 1\nSortIncludes: false\nTabWidth: 4\nUseTab: AlignWithSpaces\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 2.048828125,
          "content": "---\nChecks: 'bugprone-*,cert-*,clang-analyzer-*,misc-*,modernize-*,portability-*,performance-*,readability-*,-readability-magic-numbers,-readability-braces-around-statements,-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,-modernize-macro-to-enum,-bugprone-easily-swappable-parameters,-misc-include-cleaner,-misc-no-recursion,-misc-header-include-cycle'\nFormatStyle: 'none'\nHeaderFilterRegex: '(src|upgrade)/.+'\n#AnalyzeTemporaryDtors: false\nCheckOptions:\n  - key:   cert-dcl16-c.NewSuffixes\n    value: 'L;LL;UL;ULL'\n  - key:   cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField\n    value: '0'\n  - key:   cppcoreguidelines-explicit-virtual-functions.IgnoreDestructors\n    value: '0'\n  - key:   cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic\n    value: '1'\n  - key:   modernize-loop-convert.MaxCopySize\n    value: '16'\n  - key:   modernize-loop-convert.MinConfidence\n    value: reasonable\n  - key:   modernize-loop-convert.NamingStyle\n    value: camelBack\n  - key:   modernize-pass-by-value.IncludeStyle\n    value: llvm\n  - key:   modernize-replace-auto-ptr.IncludeStyle\n    value: llvm\n  - key:   modernize-use-nullptr.NullMacros\n    value: 'NULL'\n  - key:   readability-braces-around-statements.ShortStatementLines\n    value: '2'\n  - key:   readability-identifier-length.MinimumVariableNameLength\n    value: '2'\n  - key:   readability-identifier-naming.VariableCase\n    value: 'lower_case'\n  - key:   readability-identifier-naming.FunctionCase\n    value: 'lower_case'\n  - key:   readability-identifier-naming.ConstantCase\n    value: 'lower_case'\n  - key:   readability-identifier-naming.EnumCase\n    value: 'lower_case'\n  - key:   readability-identifier-naming.StructCase\n    value: 'lower_case'\n  - key:   readability-identifier-naming.UnionCase\n    value: 'lower_case'\n  - key:   readability-identifier-naming.TypedefCase\n    value: 'lower_case'\n  - key:   readability-identifier-naming.MacroDefinitionCase\n    value: 'UPPER_CASE'\n  - key:   readability-identifier-length.MinimumParameterNameLength\n    value: '2'\n...\n"
        },
        {
          "name": ".envrc",
          "type": "blob",
          "size": 0.041015625,
          "content": "use nix --arg pkgs 'import <nixpkgs> { }'\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.65234375,
          "content": "# Text for humans\nLICENSE text eol=lf\nHACKING text eol=lf\nCOPYING text eol=lf\nUsingSWO text eol=lf\nREADME.* text eol=lf\n\n# Source code\nMakefile text eol=lf\n*.mk text eol=lf\n*.mak text eol=lf\n*.inc text eol=lf\n*.py text eol=lf\n*.sh text eol=lf\n*.c text eol=lf\n*.S text eol=lf\n*.s text eol=lf\n*.h text eol=lf\n*.ld text eol=lf\n*.yml text eol=lf\n*.rules text eol=lf\n\n# Git control files\n.gitattributes eol=lf\n.gitignore eol=lf\n.gitmodules eol=lf\n\n# Windows source code uses CRLF\n*.vcxproj text eol=crlf\n*.props text eol=crlf\n*.bat text eol=crlf\n*.ps1 text eol=crlf\n*.inf text eol=crlf\n\n# Other binary files\n*.png binary\n*.jpg binary\n*.bin binary\n*.elf binary\n*.bin binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2587890625,
          "content": "src/include/version.h\nblackmagic\n*.bin\n*.hex\nblackmagic_dfu\ndfu_upgrade\nmapfile\n*.o\n*.d\n.*.swp\n*~\n*.pyc\ntags\n.gdbinit\n*.s#*\n*.b#*\nblackmagic_upgrade\n*.exe\n*.elf\n.vscode\n.gdb_history\nsrc/artifacts/\n\nsrc/ftd2xx.dll\n\nscripts/swolisten\n\n.direnv/\n\n/deps/*\n!/deps/*.wrap\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.9765625,
          "content": "exclude: '^upgrade/|^scripts/'  # don't run hooks on scripts/ and upgrade/\n\nrepos:\n- repo: https://github.com/ssciwr/clang-format-hook\n  rev: v16.0.2\n  hooks:\n  - id: clang-format\n    # entries here override, not extend, upstream's configuration\n    args: [-Werror, -style=file, -i]  # change formatting warnings to errors, and edit in-place\n    types_or: [c++, c]  # override default file types to only C and CPP files\n\n- repo: https://github.com/perigoso/pre-commit-hooks\n  rev: v0.3.1\n  hooks:\n  - id: check-hex-case\n    args: [--lower-digits] # edit-in-place, hex number digits to lower case (defaults to upper case), i.e. 0x55aa\n\n  - id: check-accidental-assignment\n    args: [--strict, --skip-keywords, DO_PRAGMA, --] # strict, check in all parentheses found, skip check in DO_PRAGMA macro\n    # FIXME: Known assignment in find_debuggers, needs large refactoring, ignore file temporarily so we get a working check for the rest of the code base\n    exclude: '^src/platforms/hosted/bmp_serial.c'\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "3rdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.1044921875,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[INSERT CONTACT METHOD].\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.826171875,
          "content": "# Contribution Guidelines\n\n## Contributing\n\nContributions to this project are released under a mix of the [GPLv3+](COPYING) and [BSD-3-Clause](COPYING-BSD) licenses.\nPlease respect the license of any existing files (specified at the top) and if adding a new file, make a value judgement\nwhich you prefer to use.\n\nPlease note that this project is released under the [Contributor Covenant Code of Conduct](CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\n\n**Note** Contributions that were generated in whole or in-part from any language model or AI, such as ChatGPT, BARD,\nor any other such tool are explicitly forbidden and may result in your permanent ban from contributing to this project.\n\n## Development and Testing\n\nWhen developing this project some tools are necessary, take a look at the **Requirements** section of the\n[README](README.md#requirements).\n\nFor instructions on how to build the project, please follow the **Building** section of the\n[README](README.md#building).\n\n## Reporting issues\n\n### Before reporting issues\n\n 1. Check against the latest version (`main` branch).\n 2. If possible, and applicable, test against another target and/or debug probe.\n 3. Consider broken USB cables and connectors.\n 4. Try to reproduce with BMDA with at least output verbosity bit 1 (INFO) set (`blackmagic -v 1 ...`), as debug\n    messages will be dumped to the starting console.\n\nWhen reporting issues, be as specific as possible!\n\n## Submitting a pull request\n\n### If contributing for the first time\n\n 1. [Fork](https://github.com/blackmagic-debug/blackmagic/fork) and clone the repository\n 2. Create a new branch: `git switch -c type/branch-name` (`git checkout -b type/branch-name` in the old syntax)\n 3. Make your change\n 4. Push to your fork and submit a [pull request](https://github.com/blackmagic-debug/blackmagic/compare)\n\nIf you wish to fix a bug, `type` in the new branch name should be `fix`, otherwise if you wish to implement a new\nfeature, `type` should be `feature`.\n\n### If you are working from an existing clone of the repository\n\n1. Ensure you have our repo as a remote (`git remote add upstream https://github.com/blackmagic-debug/blackmagic`)\n2. Switch back to `main` (`git switch main`/`git checkout main`)\n3. Pull to ensure you're up to date (`git pull upstream`)\n4. Push to your fork (`git push`)\n5. Continue at 2. [in the steps for first time](#if-contributing-for-the-first-time)\n\n### Commit message guidelines\n\nAdditionally, please write good and descriptive commit messages that both summarise the change and,\nif necessary, expand on the summary using description lines.\n\"Patched the adiv5 code\" is, while terse and correct, an example of a bad commit message.\n\"adiv5: Fixed an issue in DP handling in adiv5_dp_init()\" is an example of a better commit message.\n\nWhen writing commit messages, please prefix the component being modified using the following rules:\n\n* If the commit modifies target support, prefix with the path under src/target including the name of the file minus\n  its extension - for example, \"adiv5:\", \"stm32f1:\" or \"flashstub/lmi:\"\n* If the commit modifies a platform, prefix with the name of that platform followed by the file - for example,\n  \"hosted/cli:\" or \"native/platform:\"\n* If the commit modifies a significant number of files, us the overarching theme - for example if it's a platform API\n  change then use \"platform:\"\n* If the commit modifies files such as the build system, the main project readme, or any other files about the project\n  that don't form the code for the project, please use \"misc:\"\n\nWe would like to be able to look back through the commit history and tell what happened, when, and why without having\nto dip into the commit descriptions as this improves the general Git experience and improves everyone's lives.\n\nTry to keep commits focused on a single small and atomic change to ease review, and aid the process if we end up having\nto `git bisect` through your changes, or `git revert` in the extreme case something seriously broke.\n\nWe use rebasing to merge pull requests, so please keep this in mind.\n\n## Licensing\n\nWhen making contributions to existing code, we ask that you update the copyright and authorship notice at\nthe top with any authorship information you wish to provide. This is so you get proper attribution.\nThe contribution must be made under the existing code's license terms as stated per file.\n\nWhen making original contributions as new files to the project, this presents a choice on licensing.\nHistorically the project uses GPLv3+, however contributions have been made using compatible licensing such\nas MIT and BSD-3-Clause. We would ask that you preferentially choose between GPLv3+ and BSD-3-Clause.\n\nKeep in mind that the resulting binary is GPLv3+ licensed due to how the license is worded, but the individual\ncontributions retain their source licensing when considering re-use in other projects.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.24609375,
          "content": "\n\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n \n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  \n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n\n"
        },
        {
          "name": "COPYING-BSD",
          "type": "blob",
          "size": 1.4833984375,
          "content": "Copyright (C) 2022 1BitSquared <info@1bitsquared.com>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "COPYING-MIT",
          "type": "blob",
          "size": 1.08203125,
          "content": " MIT License\n\n Copyright (C) 2022 1BitSquared <info@1bitsquared.com>\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.734375,
          "content": "all:\n\t@echo \"Makefile build system is depricated.\"\n\t@echo \"\"\n\t@echo \"Please use Meson build system instead.\"\n\t@echo \"\"\n\t@echo \"For most basic build, which builds only Black Magic Debug Application (BMDA), run the following commands:\"\n\t@echo \"> meson setup build\"\n\t@echo \"> meson compile -C build\"\n\t@echo \"\"\n\t@echo \"You can find example firmware configuration files in the \\`cross-file\\` subdirectory.\"\n\t@echo \"For example, to build a firmware for the native hardware run the following commands:\"\n\t@echo \"> meson setup build-native --cross-file cross-file/native.ini --werror\"\n\t@echo \"> meson compile -C build-native\"\n\t@echo \"\"\n\t@echo \"For further instructions please refer to the README.md in the root directory of this repository.\"\n\t@echo \"\"\n\t@exit 1\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.2744140625,
          "content": "# Black Magic Debug\n\nThe Black Magic Debug suite is a self-contained debugger for microcontrollers which needs no config\nfiles and auto-detects plus configures the connected targets. It is designed to be fast and easy to use.\n\nThe project can be built as either firmware for\n[Black Magic Probe](https://1bitsquared.com/products/black-magic-probe) -\na debugger-in-a-dongle that provides multi-voltage debug with no other external tools than GDB required -\nor as Black Magic Debug App (BMDA) which is the project built for the host machine, more details below.\n\nThe project allows debugging of devices connected over JTAG or SWD, and via the companion tool\n[bmpflash](https://github.com/blackmagic-debug/bmpflash) the programming of SPI Flash devices.\nThis includes support for ARM and RISC-V devices, the complete list can be found on the website.\n\n[![Discord](https://img.shields.io/discord/613131135903596547?logo=discord)](https://discord.gg/P7FYThy)\n[![Current release](https://img.shields.io/github/v/release/blackmagic-debug/blackmagic.svg?logo=github)](https://github.com/blackmagic-debug/blackmagic/releases)\n[![CI flow status](https://github.com/blackmagic-debug/blackmagic/actions/workflows/build-and-upload.yml/badge.svg)](https://github.com/blackmagic-debug/blackmagic/actions/workflows/build-and-upload.yml)\n\nTable of contents:\n\n* [Resources](#resources)\n* [Usage](#usage)\n* [Build quick-start](#getting-started)\n* [Contribution information](#contributing-and-reporting-issues)\n\n## Resources\n\n* [Official website](https://black-magic.org/index.html)\n* [Binary builds](https://github.com/blackmagic-debug/blackmagic/releases)\n\n## Usage\n\nThere is a more detailed [getting started guide](https://black-magic.org/getting-started.html) on the website,\nhowever below is a brief guide for both the firmware and BMDA.\n\n### Black Magic Debug Firmware\n\nWhen built as firmware and put on a probe, the project is used like as follows:\n\n```console\n> arm-none-eabi-gdb gpio.elf\n...<GDB Copyright message>\n(gdb) tar ext /dev/ttyBmpGdb\nRemote debugging using /dev/ttyBmpGdb\n(gdb) mon a\nTarget voltage: 2.94V\nAvailable Targets:\nNo. Att Driver\n 1      STM32F40x M4\n(gdb) att 1\nAttaching to program: /devel/en_apps/gpio/f4_discovery/gpio.elf, Remote target\n0x08002298 in UsartIOCtl ()\n(gdb) load\nLoading section .text, size 0x5868 lma 0x8000000\nLoading section .data, size 0x9e0 lma 0x8005868\nLoading section .rodata, size 0x254 lma 0x8006248\nStart address 0x800007c, load size 25756\nTransfer rate: 31 KB/sec, 919 bytes/write.\n(gdb) b main\nBreakpoint 1 at 0x80000e8: file /devel/en_apps/gpio/f4_discovery/../gpio.c, line 70.\n(gdb) r\nStarting program: /devel/en_apps/gpio/f4_discovery/gpio.elf\nNote: automatically using hardware breakpoints for read-only addresses.\n\nBreakpoint 1, main () at /devel/en_apps/gpio/f4_discovery/../gpio.c:70\n70      {\n(gdb)\n```\n\nNote: this presumes on Linux that you have installed the project's udev rules.\n\n### Black Magic Debug App\n\nWhen built as BMDA, usage differs a bit - principally as instead of using a virtual serial interface,\nBMDA makes the GDB server available over TCP/IP on a port that it will print to its console (typically\n2000 though). This means replacing `tar ext /dev/ttyBmpGdb` in the firmware example, with `tar ext :2000`.\n\nTo bring the GDB server up, you will need a probe it can talk to, the BMDA binary, and an extra console to\nthe one you want to run GDB from. Verbosity of BMDA can be increased with the `-v` option such as running\n`blackmagic -v 5` which sets the server to emit INFO and TARGET diagnostic level information in addition to\nERROR and WARNING output.\n\nBlack Magic Debug App can talk to:\n\n* Black Magic Probe firmware probes via the USB-serial port\n* ST-Link v2, v2.1 and v3 with recent firmware\n* CMSIS-DAP compatible probes\n* J-Link probes\n* FTDI MPSSE based probes\n\nWhen connected to a single BMDA-supported probe, starting `blackmagic` w/o any arguments starts the server.\nWhen several BMDA-supported probes are connected, their types, serial numbers and version information is\ndisplayed and the program exits. Add `-s <serial>` to the next invocation to select one.\n\nFor the setup from the sample session above:\n\nIn another terminal:\n\n```console\n> blackmagic\nBlack Magic Debug App v1.10.2\n for Black Magic Probe, ST-Link v2 and v3, CMSIS-DAP, J-Link and FTDI (MPSSE)\nUsing 1d50:6018 8BB20A03 Black Magic Debug\n Black Magic Probe v1.10.2\nSetting V6ONLY to off for dual stack listening.\nListening on TCP: 2000\n```\n\nAnd in the GDB terminal:\n\n```console\n...\n(gdb) tar ext :2000\nRemote debugging using :2000\n(gdb) mon a\n...\n```\n\nBlack Magic Debug App also provides for Flashing, reading and verification of a binary file,\nby default starting at lowest Flash address. The `-t` argument displays information about the\nconnected target. Use `-h`/`--help` to get a list of supported options.\n\n#### OS specific remarks\n\nOn *BSD and macOS, you should use `/dev/cu.usbmodemXXX1`. There are unresolved issues with trying to\nuse the `/dev/tty.usbmodemXXX1` device node involving how it operates under the hood.\n\n## Getting started\n\n### Requirements\n\nWhen developing this project, the following tools are required:\n\n* [git](https://git-scm.com)\n* [meson](https://mesonbuild.com/Getting-meson.html) (version 0.63 or greater)\n* [ninja](https://ninja-build.org)\n\nAdditionally, depending on if you want to build/work on the firmware or Black Magic Debug App (BMDA), you also need:\n\n#### Black Magic Debug Firmware Requirements\n\n* [`arm-none-eabi-gcc`](https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/downloads) (from ARM, self-built and distro-supplied is currently broken)\n\nThe project is tested to work on the 12.2.Rel1 and 13.2.Rel1 releases. Newer releases may work but are not guaranteed.\nThe old `gnu-rm` compiler series is no longer supported as the code generation performs way too badly.\n\nIf you have a toolchain from other sources and find problems, check if it's an issue with your toolchain first,\nand if not then open an issue, or better, submit a pull request with a fix.\n\n#### Black Magic Debug App Requirements\n\n* [GCC](https://gcc.gnu.org) or Clang\n* pkg-config\n* libusb1\n* libhidapi\n\nOn Linux and macOS (+ other non-Windows platforms):\n\n* libftdi1\n\nIf you do not install the subsequent dependencies libusb1, libhidapi, and libftdi1, then the build system will\ndo source builds of the dependencies using the information in `deps/` that will be statically linked into BMDA.\n\n### Building\n\nThe project is configured and built using the Meson build system, you will need to create a build\ndirectory using `meson setup`, and configure the build depending on what you want.\n\nThe project has a couple of build options you may configure, which affect the resulting binaries.\nThis is how you will configure the firmware for your respective probe, or enable certain features.\n\nA non-exhaustive list of project options:\n\n* `probe`: Hardware platform where the BMD firmware will run\n* `targets`: Targets and architectures enabled for debug and Flashing\n* `debug_output`: Enable debug output (for debugging the BMD stack, not debug targets)\n* `rtt_support`: Enable RTT (Real Time Transfer) support\n\nYou may see all available project options and valid values under `Project options` in the output\nof the `meson configure` command.\n\nThe following commands are ran from the root of your clone of the `blackmagic` repository:\n\n```sh\ncd /path/to/repository/blackmagic\n```\n\n#### Building the firmware\n\nTo build the firmware you need to configure the probe hardware the firmware will run on, as well as the\ncross-compilation toolchain to be used.\n\nFor convenience, a cross-file for each supported hardware probe is available which provides a sane default\nconfiguration for it.\n\nThe build configuration command for the native probe may look like:\n\n```sh\nmeson setup build --cross-file cross-file/native.ini\n```\n\nNote that even if you are using the pre-configured cross-file, you may still override it's defaults with\n`-Doption=value` in the same configuration command, or later as highlighted in\n[Changing the build configuration](#changing-the-build-configuration).\n\nAlternatively (for advanced users), if you wish to configure manually, for instance while writing support\nfor a new probe, or a different toolchain, you can run something similar to this:\n\n```sh\nmeson setup build --cross-file cross-file/arm-none-eabi.ini -Dprobe=native -Dtargets=cortexm,stm\n```\n\nAfter following one of these two paths, you now should have a `build` directory from where you can build\nthe firmware. This is also where your binary files will appear.\n\nThe command `meson compile` will build the default targets, you may omit `-C build` if you run the command\nfrom within the `build` directory:\n\n```sh\nmeson compile -C build\n```\n\nYou should now see the resulting binaries in `build`, in this case:\n\n* `blackmagic_native_firmware.bin`\n* `blackmagic_native_firmware.elf`\n\nThese are the binary files you will use to flash to your probe.\n\n##### region `rom' overflowed\n\nIt may happen, while working with non default configurations or the project's latest version from Git,\nthat the firmware does not fit in the available space for the configured probe, this could look something like:\n\n```console\narm-none-eabi/bin/ld: region `rom' overflowed by 4088 bytes\nMemory region         Used Size  Region Size  %age Used\n             rom:      135160 B       128 KB    103.12%\n             ram:        5708 B        20 KB     27.87%\ncollect2: error: ld returned 1 exit status\n```\n\nThis is not unexpected, as some hardware probe have limited space for firmware. You can get around it by\ndisabling some features or targets support:\n\n```sh\nmeson configure build -Dtargets=cortexm,stm -Drtt_support=false\n```\n\n#### Building Black Magic Debug App\n\nThe Black Magic Debug App (BMDA) is always built by default, even for firmware builds. So long as all its\ndependencies are found, you can find the executable under the `build` directory, named simply `blackmagic`.\n\nIf you wish to build only BMDA, you can set the hardware `probe` option to an empty string `-Dprobe=''`,\nthis is the default value:\n\n```sh\nmeson setup build\n```\n\nYou now should have a `build` directory from where you can build the app, this is also where your executable\nwill appear.\n\nThe command `meson compile` will build the default targets, you may omit `-C build` if you run the command\nfrom within the `build` directory:\n\n```sh\nmeson compile -C build\n```\n\nYou should now see the resulting executable in `build`:\n\n* `blackmagic`\n\n### Changing the build configuration\n\nYou may change the configuration at any time after configuring the project, if may also change the default\noptions while configuring for the first time.\n\nChanging options at configure time:\n\n```sh\nmeson setup build -Ddebug_output=true\n```\n\nChanging options after configuration:\n\n```sh\nmeson configure build -Dtargets=cortexm,stm\n```\n\nAlternatively, you can use the equivalent but more verbose `meson setup` command:\n\n```sh\nmeson setup build --reconfigure -Dtargets=cortexm,stm\n```\n\nNB: Since about Meson v1.2.0, using this second form is the only way to change the active targets list. This is\na known issue in Meson which has yet to be addressed in a release.\n\nKeep in mind that when changing the configured probe, the other default options will not change, and you may end\nup with a configuration that does not make sense for it. In such cases it's best to use the *cross-file* for the\nprobe, not just change the `probe` option. For this you will need to use the `meson setup` command again:\n\n```sh\nmeson setup build --reconfigure --cross-file=cross-file/bluepill.ini\n```\n\nWhen changing options after configuration, you may omit the argument `build` if you are running the command from\nwithin the `build` directory.\n\nYou can have multiple build directories! So if you are regularly building firmware for multiple probes we would\nrecommend keeping an individual build directory configured for each one.\n\nIf you are working with PowerShell you may have some issue while trying to configure some options like the enabled\ntarget list `-Dtargets=cortexm,stm`:\n\n``` console\nPS C:\\...\\blackmagic\\build> meson configure build -Dtargets=cortexm,stm\nParserError:\nLine | 1 | meson configure build -Dtargets=cortexm,stm\n     | ~ | Missing argument in parameter list.\nPS D:\\...\\blackmagic\\build>\n```\n\nTo get around this you may wrap the options with double quotes `\"`, in this example:\n\n```sh\nmeson configure build \"-Dtargets=cortexm,stm\"\n```\n\n### Working with an existing clone\n\nIf you are working with an existing clone of the project, you may encounter a build issue with libopencm3 or\none of the other dependencies in `deps/` - if this happens, you have one of two recourses:\n\nThe first is to ensure the dependency is fully up to date (Meson manages them as Git clones but due to limitations\nis unaware of when the remote is newer than the local when using `revision = head` in the .wrap files) with the\nremote by doing a full fetch cycle (`git fetch --all --prune`, `git pull --tags --force`) within the dependency\nclone, and making sure the latest version is checked out (`git pull`). This is labour intensive but good if\nyou have working copy changes\n\nThe second, more nuclear option, is to blow away the clone of the dependency, eg `rm -rf deps/libopencm3` and rebuild.\nMeson will automatically detect this and re-clone the dependency at the version indicated by the .wrap files.\n\n## Contributing and reporting issues\n\nTake a look at out contribution guidelines in [CONTRIBUTING](CONTRIBUTING.md).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.2109375,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version |     Supported      |\n|---------|--------------------|\n|   1.9.x | :white_check_mark: |\n|   1.8.x | :white_check_mark: |\n|<= 1.7.x | :x:                |\n\nAny older version not listed in the above table is also not supported\n\n## Reporting a Vulnerability\n\nIf you think you've found a vulnerability and wish to responsibly disclose it, please send an email\nto disclosure@black-magic.org with a clear description of the issue and steps for how to reproduce\nit in the body.\n\nIf we can reproduce the issue we will create a fix branch on the main repository with nondescript\ncommit messages as to the underlying issue and take the fix through our normal pull request process.\nFor severe issues we may instead use the private mirror of the repository for fixing the bug so we\ncan publish a fix and release binaries only once ready.\n\nSevere security issues may result in out of band point releases being made to address the problem,\neven to otherwise unsupported versions. This will be done at the discretion of the project.\n\nDuring the process, you will be kept apprised of our progress by email with public disclosure on the\nissue tracker or as a PR only once the fix is developed and ready.\n"
        },
        {
          "name": "UsingRTT.md",
          "type": "blob",
          "size": 10.9541015625,
          "content": "# Using RTT\n\nWhen debugging ARM processors, there are multiple ways for the target to print debug messages on\nthe host: a dedicated UART port (USB to Serial) aka. AUX Serial, Semihosting, Serial Wire Output SWO, and Real-Time Transfer RTT.\n\nTo enable RTT in [Black Magic Debug](https://black-magic.org) (BMD) Firmware the `ENABLE_RTT=1` flag has to be set\nduring compilation. For more details refer to the [Build Instructions](#build-instructions) section.\n\nThe RTT solution implemented in BMD is using a novel way to detect RTT automatically, making\nthe use fast and convenient.\n\n## Usage\n\nThis example uses Linux as operating system. For Windows and MacOS see the *Operating Systems*\nsection.\n\nIn one window open a terminal emulator (minicom, putty) and connect to the USB\nUART:\n\n```sh\nminicom -c on -D /dev/ttyBmpTarg\n```\n\nIn another window open a debugger:\n\n```console\n$ gdb\n(gdb) target extended-remote /dev/ttyBmpGdb\n(gdb) monitor swd_scan\n(gdb) attach 1\n(gdb) monitor rtt\n(gdb) run\n^C\n(gdb) monitor rtt status\nrtt: on found: yes ident: off halt: off channels: auto 0 1 3\nmax poll ms: 256 min poll ms: 8 max errs: 10\n```\n\nThe terminal emulator displays RTT output from the target, and characters typed\nin the terminal emulator are sent via RTT to the target.\n\nIt is possible to use RTT and the built-in serial port at the same time. If both RTT and the built-in serial port are used at the same time, the terminal will show both RTT and serial port output, interleaved.\n\nCharacters typed in at the terminal go to RTT if RTT is enabled, or to the serial port if RTT is not enabled.\n\n- `monitor rtt`: If RTT is enabled, characters typed in at the terminal are sent to target RTT.\n- `monitor rtt disable`: if RTT is disabled (default), characters typed in at the terminal are sent to the built-in serial port.\n\n## GDB Commands\n\nThe following new gdb commands are available:\n\n- `monitor rtt`\n\n    switch rtt on\n\n- `monitor rtt enable`\n\n    switch rtt on\n\n- `monitor rtt disable`\n\n    switch rtt off\n\n- `monitor rtt poll max_poll_ms min_poll_ms max_errs`\n\n    sets maximum time between polls, minimum time between polls, and the maximum number of\n        errors before RTT disconnects from the target. Times in milliseconds. It is best if\n        max_poll_ms/min_poll_ms is a power of two. As an example, if you wish to check for RTT\n        output between once per second to eight times per second: `monitor rtt poll 1000 125 10`.\n\n- `monitor rtt status`\n\n    show status.\n\nRTT | Found | State\n----|-------|-------\noff | no    | RTT inactive\non  | no    | Searching for RTT control block\non  | yes   | RTT active\noff | yes   | Corrupt rtt control block, or target memory access error\n\nA status of `rtt: on found: no` indicates bmp is still searching for the rtt control block in\ntarget ram, but has not found anything yet. A status of  `rtt: on found: yes` indicates the\ncontrol block has been found and rtt is active.\n\n- `monitor rtt channel`\n\n    enables the first two output channels, and the first input channel. (default)\n\n- `monitor rtt channel number...`\n\n    enables the given RTT channel numbers. Channels are numbers from 0 to 15, inclusive.\n        Eg. `monitor rtt channel 0 1 4` to enable channels 0, 1, and 4.\n\n- `monitor rtt ram`\n\n    rtt scans all of target memory for the rtt control block. (default)\n\n- `monitor rtt ram startaddress endaddress`\n\n    limit rtt scan of target memory to address range given. Values in hex. Use if scanning memory hangs the debugger. E.g. to limit rtt scans to the first 8kbyte of ram, beginning at 0x20000000:\n\n```console\n(gdb) mon rtt ram 0x20000000 0x20002000\n(gdb) mon rtt status\nrtt: off found: no ident: off halt: off channels: auto ram: 0x20000000 0x20002000\nmax poll ms: 256 min poll ms: 8 max errs: 10\n```\n\nIf automatic detection fails, please take the linker map of your firmware, and search for a symbol that contains the word RTT somewhere at the beginning of ram. Look for a block with size a multiple of 24 decimal, word-aligned. For instance:\n\n```sh\ngrep 2000 HelloWorld.ino.map | grep RTT\n```\n\n For bmp to find the rtt control block, the rtt control block has to exist, be within the address range of `(gdb)info mem`, or if `mon rtt ram` has been specified, within the address range of `mon rtt ram`.\n\n- `monitor rtt ident string`\n\n    sets RTT ident to *string*. If *string* contains a space, replace the space with an\n        underscore _. Setting ident string is optional, RTT works fine without.\n\n- `monitor rtt ident`\n\n    clears ident string. (default)\n\n- `monitor rtt cblock`\n\n    shows rtt control block data, and which channels are enabled. This is an example\n        control block:\n\n```console\n(gdb) mon rtt cb\ncbaddr: 0x2000071c\nch ena i/o buffer@      size   head   tail flag\n 0   y out 0x200000ac   1024     14     14    0\n 1   y out 0x00000000      0      0      0    0\n 2   n out 0x00000000      0      0      0    0\n 3   y in  0x2000009c     16      0      0    0\n 4   n in  0x00000000      0      0      0    0\n 5   n in  0x00000000      0      0      0    0\n```\n\nChannels are listed, one channel per line. The columns are: channel, enabled, input/output, buffer address, buffer size, head pointer, tail pointer, flag. Each channel is a circular buffer with head and tail pointer. The column 'flag' is the action taken when the buffer is full.\n\nChannels the user wants to see are marked yes `y` in the column enabled `ena`. The user can\nchange which channels are shown with the `monitor rtt channel` command.\n\n``monitor rtt enable`` forces searching the control block next time the program runs.\n\n## Identifier String\n\nIt is possible to set an RTT identifier string.\nAs an example, if the RTT identifier is \"IDENT STR\":\n\n```console\n$ gdb\n(gdb) target extended-remote /dev/ttyBmpGdb\n(gdb) monitor swd_scan\n(gdb) attach 1\n(gdb) monitor rtt ident IDENT_STR\n(gdb) monitor rtt\n(gdb) run\n^C\n(gdb) monitor rtt status\nrtt: on found: yes ident: \"IDENT STR\" halt: off channels: auto 0 1 3\nmax poll ms: 256 min poll ms: 8 max errs: 10\n```\n\nNote replacing space with underscore _ in *monitor rtt ident*.\n\nSetting an identifier string is optional. RTT gives the same output at the same speed, with or\nwithout specifying identifier string.\n\n## Operating Systems\n\n[Configuration](https://black-magic.org/getting-started.html) instructions for Windows, Linux and MacOS.\n\n### Windows\n\nAfter configuration, Black Magic Probe shows up in Windows as two USB Serial (COM) ports.\n\nConnect arm-none-eabi-gdb, the gnu debugger for arm processors, to the lower numbered of the\ntwo COM ports. Connect an ansi terminal emulator to the higher numbered of the two COM ports.\n\nSample gdb session:\n\n```console\n(gdb) target extended-remote COM3\n(gdb) monitor swd_scan\n(gdb) attach 1\n(gdb) monitor rtt\n(gdb) run\n```\n\nFor COM port COM10 and higher, add the prefix `\\\\.\\`, e.g.\n\n```console\ntarget extended-remote \\\\.\\COM10\n```\n\nTarget RTT output will appear in the terminal, and what you type in the terminal will be sent\nto the RTT input of the target.\n\n### Linux\n\nOn Linux, install udev rules as described in the [driver\ndocumentation](https://github.com/blackmagic-debug/blackmagic/blob/main/driver/README.md).\nDisconnect and re-connect the BMP. Check the device shows up in `/dev/`:\n\n```sh\n$ ls -l /dev/ttyBmp*\nlrwxrwxrwx 1 root root 7 Dec 13 07:29 /dev/ttyBmpGdb -> ttyACM0\nlrwxrwxrwx 1 root root 7 Dec 13 07:29 /dev/ttyBmpTarg -> ttyACM2\n```\n\nConnect terminal emulator to `/dev/ttyBmpTarg` and gdb to `/dev/ttyBmpGdb`.\n\nIn one window:\n\n```sh\nminicom -c on -D /dev/ttyBmpTarg\n```\n\nIn another window:\n\n```console\ngdb\n(gdb) target extended-remote /dev/ttyBmpGdb\n(gdb) monitor swd_scan\n(gdb) attach 1\n(gdb) monitor rtt\n(gdb) run\n```\n\n### MacOS\n\nOn MacOS the tty devices have different names than on linux. On connecting blackmagic to the\ncomputer 4 devices are created, 2 'tty' and 2 'cu' devices. Gdb connects to the first cu device\n(e.g.: `target extended-remote /dev/cu.usbmodemDDCEC9EC1`), while RTT is connected to the\nsecond tty device (`minicom -c on -D /dev/tty.usbmodemDDCEC9EC3`). In full:\n\nIn one Terminal window, connect a terminal emulator to `/dev/tty.usbmodemDDCEC9EC3`:\n\n```sh\nminicom -c on -D /dev/tty.usbmodemDDCEC9EC3\n```\n\nIn another Terminal window, connect gdb to `/dev/cu.usbmodemDDCEC9EC1`:\n\n```console\ngdb\n(gdb) target extended-remote /dev/cu.usbmodemDDCEC9EC1\n(gdb) monitor swd_scan\n(gdb) attach 1\n(gdb) monitor rtt\n(gdb) run\n```\n\nRTT input/output is in the window running `minicom`.\n\n## Notes\n\n- Design goal was smallest, simplest implementation that has good practical use.\n\n- RTT code size is ~3.5 kbytes.\n\n- Because RTT is implemented as a serial port device, there is no need to write and maintain\n  software for different host operating systems. A serial port works everywhere - Linux,\nWindows and MacOS. You can even use an Android mobile phone as RTT terminal.\n\n- Because polling occurs between debugger probe and target, the load on the host is small.\n  There is no constant usb traffic, there are no real-time requirements on the host.\n\n- RTT polling frequency is adaptive and goes up and down with RTT activity. Use *monitor rtt\n  poll* to balance response speed and target load for your use.\n\n- Detects RTT automatically, very convenient.\n\n- When using RTT as a terminal, sending data from host to target, you may need to change local\n  echo, carriage return and/or line feed settings in your terminal emulator.\n\n- Architectures such as risc-v may not allow the debugger access to target memory while the\n  target is running. As a workaround, on these architectures RTT briefly halts the target\nduring polling. If the target is halted during polling, `monitor rtt status` shows `halt: on`.\n\n- Measured RTT speed.\n\n| debugger                    | char/s |\n| --------------------------- | ------ |\n| BMP on STM32F723 ST-Link v3 | 49811  |\n| BMP on STM32F411 Black Pill | 50073  |\n| BMP on STM32F103 Blue Pill  | 50142  |\n\nThis is the speed at which characters can be sent from target to debugger probe, in reasonable\ncircumstances. Test target is an stm32f103 blue pill running an [Arduino\nsketch](https://github.com/koendv/Arduino-RTTStream/blob/main/examples/SpeedTest/SpeedTest.ino).\nDefault *monitor rtt poll* settings on debugger. Default RTT buffer size in target and\ndebugger. Overhead for printf() calls included.\n\n## Build instructions\n\nTo compile with RTT support, set the `rtt_support` option to `true`, this may be the default for some\nbuild configurations.\n\nFor instance, for Black Magic Probe (native) hardware:\n\n```sh\nmeson setup build --cross-file=cross-file/native.ini -Drtt_support=true\n```\n\nSetting an ident string is optional. But if you wish, you can set the default RTT ident at compile time with\nthe `rtt_ident` option.\n\nFor instance, for Black Magic Probe (native) hardware:\n\n```sh\nmeson setup build --cross-file=cross-file/native.ini -Drtt_support=true -Drtt_ident=\"IDENT STR\"\n```\n\n## Links\n\n- [OpenOCD](https://openocd.org/doc/html/General-Commands.html#Real-Time-Transfer-_0028RTT_0029)\n- [probe-rs](https://probe.rs/) and [rtt-target](https://github.com/mvirkkunen/rtt-target)\n  for the Rust programming language.\n- [RTT Stream](https://github.com/koendv/Arduino-RTTStream) for Arduino on arm processors\n"
        },
        {
          "name": "UsingSWO.md",
          "type": "blob",
          "size": 10.5888671875,
          "content": "# Serial Wire Out (SWO) User Guide\n\nSWO is a data stream that is sent out of a single pin when the debug interface is in SWD mode.\nIt can be encoded either using NRZ (UART) or RZ (Manchester) formats. The pin is a dedicated\none that would be used for `TDO` when the debug interface is in `JTAG` mode. On the STM32 it's\nport `PB3`.\n\nWhen in NRZ mode the SWO data rate that comes out of the chip _must_ match the rate that the\ndebugger expects. By default on BMP the baudrate is 2.25MBps but that can be changed as an\noptional parameter to the monitor traceswo command. The following sets the SWO output to\n115kBps\n\n```\nmonitor traceswo 115200\n```\n\nThe maximum SWO speed is constrained by both the capabilities of the BMP STM32F103 USART and\nUSB bandwidth. The UART baudrate is set by `b=(72x10^6)/d` where `d >= 16` or a maximum speed\nof 4.5Mbps `UART1` and 2.25Mbps on `UART2`.  4.5Mbps is too fast for the USB link when\nstreaming continuously.\n\nOne can safely use the 4.5Mbps setting if the debug data is sent in bursts, or if a different\nCPU is used than the STM32F103 as BMP host, but one can potentially run the risk of losing\npackets if there is a long runs of data which the USB cannot flush in time (there's a 12K\nbuffer, so the it is a pretty long run before it becomes a problem).\n\nNote that the baudrate equation means there are only certain speeds available. The highest:\n```\nBRR        USART1(stlink)  USART2(swlink)\n16    \t   4.50  Mbps      2.25  Mbps\n17\t   4.235 Mbps \t   2.118 Mbps\n18\t   4.000 Mbps \t   2.0   Mbps\n19\t   3.789 Mbps \t   1.895 Mbps\n20\t   3.600 Mbps \t   1.8   Mbps\n...\n24\t   3.0   Mbps      1.5   Mbps\n...\n36         2.0   Mbps      1.0   Mbps\n```\n\nThe USART will cope with some timing slip, but it's recommended to stay as close to these\nvalues as you can. As the speed comes down the spread between each valid value so miss-timing is\nless of an issue. The `monitor traceswo <x>` command will automatically find the closest\ndivisor to the value you set for the speed, so be aware the error could be significant.\n\nDepending on what you're using to wake up SWO on the target side, you may need code to get it\ninto the correct mode and emitting data. You can do that via gdb direct memory accesses, or\nfrom program code.\n\nAn example for a STM32F103 for the UART (NRZ) data format that we use;\n\n```c\n    /* STM32 specific configuration to enable the TRACESWO IO pin */\n    RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;\n    AFIO->MAPR |= (2 << 24); // Disable JTAG to release TRACESWO\n    DBGMCU->CR |= DBGMCU_CR_TRACE_IOEN; // Enable IO trace pins\n\n    TPI->ACPR = 31;  // Output bits at 72000000/(31+1)=2.25MHz.\n    TPI->SPPR = 2;   // Use Async mode (1 for RZ/Manchester)\n    TPI-FFCR  = 0;   // Disable formatter\n\n    /* Configure instrumentation trace macroblock */\n    ITM->LAR = 0xC5ACCE55;\n    ITM->TCR = 1 << ITM_TCR_TraceBusID_Pos | ITM_TCR_SYNCENA_Msk |\n               ITM_TCR_ITMENA_Msk;\n    ITM->TER = 0xFFFFFFFF; // Enable all stimulus ports\n```\n\nCode for the STM32L476 might look like:\n```c\n#define BAUDRATE 115200\n    DBGMCU->CR |= DBGMCU_CR_TRACE_IOEN; /* Enable IO pins for Async trace */\n    uint32_t divisor, clk_frequency;\n    clk_frequency = NutGetCpuClock();\n    divisor = clk_frequency / BAUDRATE;\n    divisor--;\n    TPI->CSPSR = 1; /* port size = 1 bit */\n    TPI->ACPR = divisor;\n    TPI->SPPR = 2; /*Use Async mode pin protocol */\n    TPI->FFCR = 0x00; /* Bypass the TPIU formatter and send output directly*/\n\n/* Configure Trace Port Interface Unit */\n    CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk; // Enable access to registers\n    DWT->CTRL = 0x400003FE; // DWT needs to provide sync for ITM\n    ITM->LAR = 0xC5ACCE55; // Allow access to the Control Register\n    ITM->TPR = 0x0000000F; // Trace access privilege from user level code, please\n    ITM->TCR = 0x0001000D; // ITM_TCR_TraceBusID_Msk | ITM_TCR_DWTENA_Msk | ITM_TCR_SYNCENA_Msk | ITM_TCR_ITMENA_Msk\n    ITM->TER = 1; // Only Enable stimulus port 1\n\n    while(1) {\n        for (uint32_t i = 'A'; i <= 'Z'; i++) {\n            ITM_SendChar(i);\n            NutSleep(1);\n        }\n    }\n```\n\nIf you're using RZ mode (for example on Black Magic Probe V2.1 and older), the trace output\nspeed needs to be set to be quite a lot lower, in the order of 200kHz. To achieve this the\ndivisor has to be set to something like 359. That's because the STM32F103 (as most\nmicrocontrollers) doesn't have a dedicated RZ decoder so it all has to be done in software. The\nadvantage of RZ is that the probe can adapt to the speed of the target, so you don't have to\nset the speed on the probe in the monitor traceswo command, and it will be tolerant of\ndifferent speeds.\n\nThe SWO data appears on USB Interface 5, Endpoint 5.\n\n# SWOListen\n\nA program swolisten.c can be found in `./scripts` which will listen to this endpoint, decode\nthe datastream, and output it to a set of UNIX fifos which can then be used as the input to\nother programs (e.g. cat, or something more sophisticated like gnuplot, octave or whatever).\nThis program doesn't care if the data originates from a RZ or NRZ port, or at what speed.\n\nNote that swolisten can be used with either BMP firmware, or with a conventional TTL serial\ndongle. See at the bottom of this file for information on how to use a dongle.\n\nThe command line to build the swolisten tool may look like:\n\nE.g. for Ubuntu\n```\ngcc -I /usr/local/include/libusb-1.0 -L /usr/local/lib swolisten.c -o swolisten -lusb-1.0\n```\n\nE.g. For Opensuse:\n```\ngcc -I /usr/include/libusb-1.0 swolisten.c  swolisten -std=gnu99 -g -Og -lusb-1.0\n```\n\n**Note:** Make sure to set the libusb include paths appropriately.\n\nAttach to BMP to your PC:\n```sh\n> arm-none-eabi-gdb      # Start GDB\ngdb> target extended_remote /dev/ttyBmpGdb # Choose BMP as the remote target\ngdb> mon traceswo        # Start SWO output\ngdb> mon traceswo 115200 # If async SWO is used, set the decoding baud rate that matches the target\ngdb> mon swd_scan        # Scan for the SWD device\ngdb> attach 1            # Attach to the device\ngdb> run                 # Start the program execution\n```\n\nNow start `swolisten` with no options.\n\nBy default the tool will create fifos for the first 32 channels in a directory swo (which you\nwill need to create) as follows;\n\n```sh\n> ls swo/\nchan00 chan02 chan04 chan06 chan08 chan0A chan0C chan0E chan10 chan12 chan14\nchan16 chan18 chan1A chan1C chan1E chan01 chan03 chan05 chan07 chan09 chan0B\nchan0D chan0F chan11 chan13 chan15 chan17 chan19 chan1B chan1D chan1F\n\n> cat swo/channel0\n<<OUTPUT FROM ITM Channel 0>>\n```\n\nWith the F103 and L476 examples above, an endless stream of\n`ABCDEFGHIJKLMNOPQRSTUVWXYZ` should be seen. During reset of the target\ndevice, no output will appear, but with release of reset output restarts.\n\nInformation about command line options can be found with the -h option.  swolisten is\nspecifically designed to be resilient to probe and target disconnects and restarts. The\nintention being to give streams whenever they are available.  It does _not_ require GDB to be\nrunning. For the time being traceswo is not turned on by default in the BMP to avoid possible\ninteractions and making the overall thing less reliable so it needs to be enabled via the\n`monitor traceswo` command in GDB. But after it is enabled it is not necessary to have an\nactive GDB session.\n\n# Reliability\n\nA whole chunk of work has gone into making sure the dataflow over the SWO link is reliable.\nThe TL;DR is that the link _is_ reliable. There are factors outside of our control (i.e. the\nUSB bus you connect to) that could potentially break the reliability but there's not too much\nwe can do about that since the SWO link is unidirectional (no opportunity for re-transmits).\nThe following section provides evidence for the claim that the link is good;\n\nA test 'mule' sends data flat out to the link at the maximum data rate of 2.25Mbps using a loop\nlike the one below;\n\n```c\nwhile (1)\n{\n    for (uint32_t r=0; r<26; r++)\n    {\n        for (uint32_t g=0; g<31; g++)\n        {\n            ITM_SendChar('A'+r);\n        }\n        ITM_SendChar('\\n');\n    }\n}\n```\n\n100MB of data (more than 200MB of actual SWO packets, due to the encoding) was sent from the\nmule to the BMP where the output from swolisten `chan00` was cat'ted into a file.\n\n```sh\n> cat swo/chan00 > o\n```\n\nThe experiment was interrupted once the file had grown to 100MB. The first and last lines were\nremoved from it (these represent previously buffered data and an incomplete packet at the point\nwhere the capture was interrupted) and the resulting file analyzed for consistency;\n\n```sh\n> sort o | uniq -c\n```\n\nThe result was:\n\n```\n126462 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n126462 BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\n126462 CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\n126462 DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\n126461 EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\n126461 FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\n126461 GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\n126461 HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH\n126461 IIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\n126461 JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ\n126461 KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK\n126461 LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\n126461 MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n126461 NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN\n126461 OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\n126461 PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n126461 QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ\n126461 RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\n126461 SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\n126461 TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT\n126461 UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU\n126461 VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV\n126461 WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\n126461 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n126461 YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\n126461 ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\n```\n\nOn inspection, the last line of recorded data was indeed a 'D' line. Indicating that no data\nwas lost or corrupted during the experiment.\n\n# Swolisten, using a USB to Serial Adapter\n\nThe NRZ data that is sent out from SWO is essentially UART, but in a frame. swolisten has been\nextended to accommodate USB to serial adapters that can pick this up. This was successfully\ntested with CP2102 adapters at up to 921600 baud.\n\nTo use this mode just connect SWO to the RX pin of your dongle, and start swolisten with\nparameters representing the speed and port. An example;\n```sh\n> ./swolisten -p /dev/cu.SLAB_USBtoUART -v -b swo/ -s 921600\n```\n\nAny individual adapter will only support certain baudrates (Generally multiples of 115200) so\nyou may have to experiment to find the best supported ones. For the CP2102 dongle 1.3824Mbps\nwasn't supported and 1.8432Mbps returned corrupted data.\n\nPlease email dave@marples.net with information about adapters you find work well and at what\nspeed.\n\n# Further information\n\n* SWO is a wide field. Read e.g. the blogs around SWD on\nhttp://shadetail.com/blog/swo-starting-the-steroids\n* An open source program suite for SWO under\nactive development is https://github.com/mubes/orbuculum\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "cross-file",
          "type": "tree",
          "content": null
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 9.9443359375,
          "content": "# This file is part of the Black Magic Debug project.\n#\n# Copyright (C) 2023 1BitSquared <info@1bitsquared.com>\n# Written by Rafael Silva <perigoso@riseup.net>\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are met:\n#\n# 1. Redistributions of source code must retain the above copyright notice, this\n#    list of conditions and the following disclaimer.\n#\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n#    this list of conditions and the following disclaimer in the documentation\n#    and/or other materials provided with the distribution.\n#\n# 3. Neither the name of the copyright holder nor the names of its\n#    contributors may be used to endorse or promote products derived from\n#    this software without specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nproject(\n\t'Black Magic Debug',\n\t'c',\n\tversion: '1.10.0',\n\tlicense: 'GPL-3.0-or-later OR BSD-3-Clause OR MIT',\n\t# license_files: ['COPYING', 'COPYING-BSD', 'COPYING-MIT'], # Only available in meson 1.1.0\n\tdefault_options: [\n\t\t'c_std=c11',\n\t\t'optimization=s',\n\t\t'debug=true',\n\t\t'warning_level=3',\n\t\t'werror=false',\n\t\t'b_ndebug=if-release',\n\t],\n\tmeson_version: '>= 0.63.0',\n\tsubproject_dir: 'deps',\n)\n\n# Version from version control system\n# fallback to meson project version (f.i. when building from source tarball)\n# TODO: when no vcs version is available, we should mark it somehow (-static?) as it may not be 'clean'\nversion = vcs_tag(\n\tcommand: ['git', 'describe', '--always', '--dirty', '--tags'],\n\tinput: 'src/include/version.h.in',\n\toutput: 'version.h',\n\tfallback: meson.project_version(),\n)\n\n# Import the filesystem module\nfs = import('fs')\n\n# Grab if we're in cross-compilation mode or not\nis_cross_build = meson.is_cross_build()\n\n# Grab the target probe from project options\nprobe = get_option('probe')\n\n# Determine if we are building the firmware or just the native library\nis_firmware_build = probe != ''\nif is_firmware_build\n\t# Ensure we are cross-compiling and not building for the build host\n\tassert(\n\t\tis_cross_build,\n\t\t'''Black Magic Firmware must be cross-compiled to the probe\nTry adding the option `--cross-file @0@` to the configuration'''.format(\n\t\t\tmeson.project_source_root() / 'cross-file' / probe + '.ini'\n\t\t),\n\t)\nendif\n\n## Black Magic Debug (BMD) sources\n## _______________________________\n\ncc_host = meson.get_compiler('c')\nif is_cross_build\n\tcc_native = meson.get_compiler('c', native: true)\nendif\n\n# Project wide flags\nextended_warnings = [\n\t'-Warith-conversion',\n\t'-w24244', # 'conversion' conversion from 'type1' to 'type2', possible loss of data (integer version)\n\t'-Wbad-function-cast',\n\t# '-Wcast-align=strict',\n\t'-Wcast-function-type',\n\t'-Wcast-qual',\n\t# '-Wconversion',\n\t'-Wdangling-else',\n\t'-Wdouble-promotion',\n\t'-Wduplicated-branches',\n\t'-w24754', # Conversion rules for arithmetic operations in a comparison mean that one branch cannot be executed.\n\t'-Wfloat-conversion',\n\t'-Wformat-overflow=2',\n\t# '-Wformat-signedness',\n\t'-Wformat-truncation',\n\t'-Wformat=2',\n\t'-w24774', # ‘<function>’ : format string expected in argument <position> is not a string literal\n\t'-w24777', #‘<function>’ : format string ‘<format-string>’ requires an argument of type ‘<type>’, but variadic argument <position> has type ‘<type>’\n\t'-Wimplicit-fallthrough',\n\t'-Wmaybe-uninitialized',\n\t'-w24701', # Potentially uninitialized local variable 'name' used\n\t'-w24703', # Potentially uninitialized local pointer variable 'name' used\n\t'-Wmissing-attributes',\n\t'-Wmissing-braces',\n\t'-Wno-char-subscripts',\n\t'-Wnull-dereference',\n\t# '-Wpacked',\n\t'-Wredundant-decls',\n\t'-Wreturn-type',\n\t'-w24013', # 'function' undefined; assuming extern returning int\n\t'-Wsequence-point',\n\t'-Wshadow=local',\n\t'-w24456', # declaration of 'identifier' hides previous local declaration\n\t'-w24457', # declaration of 'identifier' hides function parameter\n\t# '-Wsign-conversion',\n\t# '-Wstack-protector',\n\t'-Wstrict-aliasing',\n\t'-Wstrict-overflow=3',\n\t'-Wstring-compare',\n\t'-Wstringop-overflow',\n\t'-Wunknown-pragmas', # MSVC's C4081 and it's a level 1 warning\n\t'-Wunsafe-loop-optimizations',\n\t'-Wunsuffixed-float-constants',\n\t'-Wunused-const-variable=2',\n\t'-w24189', # 'identifier' : local variable is initialized but not referenced\n\t'-Wunused-local-typedefs',\n\t'-Wunused',\n\t'-w24101', # 'identifier' : unreferenced local variable\n\t'-Wvla-parameter',\n\t'-Wvla',\n]\nadd_project_arguments(\n\tcc_host.get_supported_arguments(extended_warnings),\n\tlanguage: 'c',\n)\nif is_cross_build\n\tadd_project_arguments(\n\t\tcc_native.get_supported_arguments(extended_warnings),\n\t\tlanguage: 'c',\n\t\tnative: true,\n\t)\nendif\n\n# Null dependency to allow for checking and conditional compilation later\nprobe_host = disabler()\nprobe_bootloader = disabler()\n\n# Deal with the print memory usage option before recursing so the Flash stubs don't screw things up\nif is_firmware_build and get_option('print_memory_usage')\n\tadd_project_link_arguments('-Wl,--print-memory-usage', language: 'c')\nendif\n\n# We need to know the size of a pointer for the machine running the code\nadd_project_link_arguments('-DCONFIG_POINTER_SIZE=@0@'.format(cc_host.sizeof('void *')), language: 'c')\nif is_cross_build\n\tadd_project_link_arguments('-DCONFIG_POINTER_SIZE=@0@'.format(cc_native.sizeof('void *')), language: 'c', native: true)\nendif\n\nsubdir('src')\n\n## Black Magic Firmware (BMF) targets\n## __________________________________\n\nif is_firmware_build\n\tmessage('Adding targets for Black Magic Firmware')\n\n\tassert(\n\t\tprobe_host.found(),\n\t\t'''Probe host dependency not found, this is not supposed to happen...\nIf you did not touch the build system this is not your fault, please report it\n''',\n\t)\n\n\t# System binary utilities\n\tsize = find_program('size')\n\tobjcopy = find_program('objcopy')\n\n\t# Base name for output files\n\tbmf_base_name = 'blackmagic_@0@'.format(probe).to_lower().underscorify()\n\n\t# Main firmware elf file\n\tbmf_elf = executable(\n\t\tf'@bmf_base_name@_firmware',\n\t\tname_suffix: 'elf',\n\t\tdependencies: [bmd_core, probe_host],\n\t)\n\talias_target('elf', bmf_elf)\n\n\t# Firmware binary and hex files\n\tbmf_bin = custom_target(\n\t\toutput: fs.replace_suffix(bmf_elf.name(), '.bin'),\n\t\tinput: bmf_elf,\n\t\tcommand: [objcopy, ['-O', 'binary', '@INPUT@', '@OUTPUT@']],\n\t\tdepends: bmf_elf,\n\t\tbuild_by_default: true,\n\t)\n\talias_target('bin', bmf_bin)\n\n\tbmf_hex = custom_target(\n\t\toutput: fs.replace_suffix(bmf_elf.name(), '.hex'),\n\t\tinput: bmf_elf,\n\t\tcommand: [objcopy, ['-O', 'ihex', '@INPUT@', '@OUTPUT@']],\n\t\tdepends: bmf_elf,\n\t)\n\talias_target('hex', bmf_hex)\n\n\t# Firmware size report\n\trun_target(\n\t\t'size',\n\t\tcommand: [size, bmf_elf.full_path(), '-B'],\n\t\tdepends: bmf_elf,\n\t)\n\n\t## Black Magic Firmware (BMF) Bootloader targets\n\t## _____________________________________________\n\n\tif probe_bootloader.found() and get_option('bmd_bootloader')\n\t\tmessage('Adding targets for Black Magic Firmware Bootloader')\n\n\t\t# Bootloader elf file\n\t\tbmf_boot_elf = executable(\n\t\t\tf'@bmf_base_name@_bootloader',\n\t\t\tname_suffix: 'elf',\n\t\t\tinclude_directories: bmd_core_includes,\n\t\t\tdependencies: probe_bootloader,\n\t\t\tbuild_by_default: false,\n\t\t)\n\t\talias_target('boot-elf', bmf_boot_elf)\n\n\t\t# Bootloader binary and hex files\n\t\tbmf_boot_bin = custom_target(\n\t\t\toutput: fs.replace_suffix(bmf_boot_elf.name(), '.bin'),\n\t\t\tinput: bmf_boot_elf,\n\t\t\tcommand: [objcopy, ['-O', 'binary', '@INPUT@', '@OUTPUT@']],\n\t\t\tdepends: bmf_boot_elf,\n\t\t)\n\t\talias_target('boot-bin', bmf_boot_bin)\n\n\t\tbmf_boot_hex = custom_target(\n\t\t\toutput: fs.replace_suffix(bmf_boot_elf.name(), '.hex'),\n\t\t\tinput: bmf_boot_elf,\n\t\t\tcommand: [objcopy, ['-O', 'ihex', '@INPUT@', '@OUTPUT@']],\n\t\t\tdepends: bmf_boot_elf,\n\t\t)\n\t\talias_target('boot-hex', bmf_boot_hex)\n\tendif\n\n\t## Utility targets\n\t## _______________\n\n\t# Black Magic Probe Firmware Manager\n\tbmputil = find_program('bmputil', required: false)\n\tif bmputil.found()\n\t\tmessage('Adding target for firmware update')\n\n\t\t# Firmware update target\n\t\trun_target(\n\t\t\t'flash',\n\t\t\tcommand: [bmputil, 'flash', bmf_elf.full_path()],\n\t\t\tdepends: bmf_elf,\n\t\t)\n\tendif\nendif\n\nif meson.is_subproject()\n\t# libbmd library (static or dynamic, based on the user's choice)\n\tlibbmd = static_library(\n\t\t'blackmagicdebug',\n\t\tc_args: [\n\t\t\t'-DCONFIG_BMDA=1',\n\t\t\t'-DHOSTED_BMP_ONLY=1',\n\t\t],\n\t\tdependencies: [libbmd_core],\n\t\tnative: is_cross_build,\n\t)\n\n\tlibbmd_dep = declare_dependency(\n\t\tinclude_directories: bmd_core_includes,\n\t\tlink_with: libbmd,\n\t)\n# Build BMDA only if all the dependencies are satisfied etc\nelif bmda_platform.found()\n\t# If we're on windows, copy the FTD2xx DLL into the output directory where it's needed\n\tif build_machine.system() in ['windows', 'cygwin']\n\t\tconfigure_file(\n\t\t\tinput: '3rdparty' / 'ftdi' / processor / 'ftd2xx.dll',\n\t\t\toutput: 'ftd2xx.dll',\n\t\t\tcopy: true,\n\t\t)\n\tendif\n\n\t# BMDA executable\n\tbmda = executable(\n\t\t'blackmagic',\n\t\tdependencies: [libbmd_core, bmda_platform],\n\t\tnative: is_cross_build,\n\t)\n\talias_target('bmda', bmda)\nelif not is_firmware_build\n\terror('''\nOne or more dependencies for BMDA were not found, and you are not building the firmware.\nYou would build nothing in this configuration, so aborting.\n\nDependencies:\n\tlibftdi: @0@\n\thidapi: @1@\n\tlibusb: @2@\n'''.format(libftdi.found(), hidapi.found(), libusb.found()))\nendif\n\nsummary(\n\t{\n\t\t'Building Firmware': is_firmware_build,\n\t\t'Building BMDA': is_variable('bmda'),\n\t},\n\tbool_yn: true,\n\tsection: 'Black Magic Debug',\n)\n"
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 2.654296875,
          "content": "option(\n\t'probe',\n\ttype: 'combo',\n\tchoices: [\n\t\t'',\n\t\t'96b_carbon',\n\t\t'blackpill-f401cc',\n\t\t'blackpill-f401ce',\n\t\t'blackpill-f411ce',\n\t\t'bluepill',\n\t\t'ctxlink',\n\t\t'f072',\n\t\t'f3',\n\t\t'f4discovery',\n\t\t'hydrabus',\n\t\t'launchpad-icdi',\n\t\t'native',\n\t\t'stlink',\n\t\t'stlinkv3',\n\t\t'swlink'\n\t],\n\tvalue: '',\n\tdescription: 'Hardware platform where the BMD firmware will run'\n)\noption(\n\t'targets',\n\ttype: 'array',\n\tchoices: [\n\t\t'cortexar',\n\t\t'cortexm',\n\t\t'riscv32',\n\t\t'riscv64',\n\t\t'apollo3',\n\t\t'at32f4',\n\t\t'ch32',\n\t\t'ch579',\n\t\t'efm',\n\t\t'gd32',\n\t\t'hc32',\n\t\t'lpc',\n\t\t'mm32',\n\t\t'nrf',\n\t\t'nxp',\n\t\t'puya',\n\t\t'renesas',\n\t\t'rp',\n\t\t'sam',\n\t\t'stm',\n\t\t'ti',\n\t\t'xilinx'\n\t],\n\tdescription: 'Enabled debug targets'\n)\noption(\n\t'print_memory_usage',\n\ttype: 'boolean',\n\tvalue: true,\n\tdescription: 'Print firmware static memory usage at the end of the build'\n)\noption(\n\t'debug_output',\n\ttype: 'boolean',\n\tvalue: false,\n\tdescription: 'Enable debug output (for debugging the BMD stack, not debug targets)'\n)\noption(\n\t'rtt_support',\n\ttype: 'boolean',\n\tvalue: true,\n\tdescription: 'Enable RTT (Real Time Transfer) support'\n)\noption(\n\t'rtt_ident',\n\ttype: 'string',\n\tdescription: 'RTT (Real Time Transfer) identifier string'\n)\noption(\n\t'no_own_ll',\n\ttype: 'boolean',\n\tvalue: false,\n\tdescription: 'Use generic interface routines (for when low level routines are not available)'\n)\noption(\n\t'bmd_bootloader',\n\ttype: 'boolean',\n\tvalue: true,\n\tdescription: 'Use the BMD bootloader (not always applicable)'\n)\noption(\n\t'stlink_v2_isol',\n\ttype: 'boolean',\n\tvalue: false,\n\tdescription: 'Build for the ISOL variant of ST-Link v2'\n)\noption(\n\t'stlink_swim_nrst_as_uart',\n\ttype: 'boolean',\n\tvalue: false,\n\tdescription: 'Repurpose the SWIM pins as the UART (only applicable to stlink)'\n)\noption(\n\t'serialno',\n\ttype: 'string',\n\tvalue: '1',\n\tdescription: 'Serial number to report (only applicable to some probes)'\n)\noption(\n\t'advertise_noackmode',\n\ttype: 'boolean',\n\tvalue: false,\n\tdescription: 'Let GDB know that the probe supports and prefers `QStartNoAckMode`'\n)\noption(\n\t'alternative_pinout',\n\ttype: 'combo',\n\tchoices: ['0', '1', '2', '3'],\n\tvalue: '0',\n\tdescription: 'Alternative pinout for probe (only applicable to blackpill-f4*)'\n)\noption(\n\t'trace_protocol',\n\ttype: 'combo',\n\tchoices: ['1','2', '3'],\n\tvalue: '3',\n\tdescription: 'Select the Trace SWO protocol, 1 == Manchester, 2 == UART, 3 == platform'\n)\noption(\n\t'on_carrier_board',\n\ttype: 'boolean',\n\tvalue: false,\n\tdescription: 'Maps some LEDs to use those on carrier board (only applicable to blackpill-f4*)'\n)\noption(\n\t'enable_gpiod',\n\ttype: 'feature',\n\tvalue: 'auto'\n)\noption(\n\t'enable_riscv_accel',\n\ttype: 'boolean',\n\tvalue: false,\n\tdescription: 'Enable firmware-side protocol acceleration of RISC-V Debug'\n)\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "shell.nix",
          "type": "blob",
          "size": 0.54296875,
          "content": "{\n  pkgs ? import (fetchGit {\n    name = \"nixos-21.11-2022-05-17\";\n    url = \"https://github.com/nixos/nixpkgs/\";\n    ref = \"refs/heads/nixos-21.11\";\n    # `git ls-remote https://github.com/nixos/nixpkgs nixos-21.11`\n    rev = \"8b3398bc7587ebb79f93dfeea1b8c574d3c6dba1\";\n  }) {}\n}:\n\nwith pkgs;\nmkShell {\n  buildInputs = [\n    gnumake\n    gcc-arm-embedded\n    dfu-util\n\n    blackmagic\n    pkg-config\n    libftdi1\n    libusb-compat-0_1\n    hidapi\n\n    (python3.withPackages (python-packages: with python-packages; [\n      pyusb\n      pyserial\n    ]))\n  ];\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}