{
  "metadata": {
    "timestamp": 1736709964755,
    "page": 516,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vmware/open-vm-tools",
      "stars": 2307,
      "defaultBranch": "master",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.3564453125,
          "content": "# General\n## What is the open-vm-tools project?\nopen-vm-tools is a set of services and modules that enable several features in VMware products for better management of, and seamless user interactions with, guests. It includes kernel modules for enhancing the performance of virtual machines running Linux or other VMware supported Unix like guest operating systems. \n \nopen-vm-tools enables the following features in VMware products:\n\n- Graceful execution of power operations (reboot and shutdown) in the guest.\n- Execution of built-in or user configured scripts in the guest during various power operations.\n- Running programs, commands and file system operations in the guest to enhance guest automation.\n- Authentication for guest operations.\n- Generation of heartbeat from guest to host for vSphere HA solution to determine guest's availabilty.\n- Clock synchronization between guest and host.\n- Quiescing guest file systems to allow host to capture file-system-consistent guest snapshot.\n- Execution of pre-freeze and post-thaw scripts while quiescing guest file systems.\n- Customization of the guest immediately after power on.\n- Periodic collection of network, disk, and memory usage information from the guest.\n- Resizing the graphical desktop screen of the guest.\n- Shared Folders operations between host and guest file systems on VMware Workstation and VMware Fusion.\n- Copying and pasting text, graphics, and files between guest and host or client desktops.\n- Dragging and dropping files between guest and host UI.\n- Periodic collection of running applications, services, and containers in the guest.\n- Accessing content from GuestStore.\n- Publishing data to Guest Data Publisher.\n- Managing Salt-Minion desired state specified in a guest variable.\n\n## Can you provide more details on the actual code being released?\nThe following components have been released as open source software:\n- Linux, Solaris and FreeBSD drivers for various devices and file system access.\n- The PowerOps plugin to perform graceful power operation and run power scripts.\n- The VIX plugin to run programs and commands, and perform file system operations in guest.\n- The GuestInfo plugin to periodically collect various statistics from guest.\n- The TimeSync plugin to perform time synchronization.\n- The dndcp plugin to support drag and drop, and text and file copy/paste operations.\n- The ResolutionSet plugin to adjust guest screen resolutions automatically based on window sizes.\n- The vmbackup plugin to support quiesced snapshot operation.\n- The GuestStore plugin to support GuestStore operation.\n- The gdp plugin to support guest data publishing operation.\n- The AppInfo plugin to periodically collect application information.\n- The ServiceDiscovery plugin to periodically collect service information.\n- The ContainerInfo plugin to periodically collect container information.\n- The ComponentMgr plugin to handle desired state operations.\n- The guest authentication service.\n- The toolbox command to perform disk wiping and shrinking, manage power scripts, and time synchronization.\n- The guest SDK libraries to provide information about virtual machine to guest.\n- Client and server for shared folders support.\n- Multiple monitor support.\n- Other utilities.\n \n## Is open-vm-tools available with Linux distributions?\nYes. open-vm-tools packages for user space components are available with new versions of major Linux distributions, and are installed as part of the OS installation in several cases. Please refer to VMware KB article http://kb.vmware.com/kb/2073803 for details. All leading Linux vendors support open-vm-tools and bundle it with their products. For information about OS compatibility for open-vm-tools, see the \nVMware Compatibility Guide at http://www.vmware.com/resources/compatibility\nAutomatic installation of open-vm-tools along with the OS installation eliminates the need to separately install open-vm-tools in guests. If open-vm-tools is not installed automatically, you may be able to manually install it from the guest OS vendor's public repository. Installing open-vm-tools from the Linux vendor's repository reduces virtual machine downtime because future updates to open-vm-tools are included with the OS maintenance patches and updates.\n**NOTE**: Most of the Linux distributions ship two or more open-vm-tools packages. \"open-vm-tools\" is the core package without any dependencies on X libraries and \"open-vm-tools-desktop\" is an additional package with dependencies on \"open-vm-tools\" core package and X libraries. The \"open-vm-tools-sdmp\" package contains a plugin for Service Discovery. There may be additional packages, please refer to the documentation of the OS vendor. Note that the open-vm-tools packages available with Linux distributions do not include Linux drivers because Linux drivers are available as part of Linux kernel itself. Linux kernel versions 3.10 and later include all of the Linux drivers present in open-vm-tools except the vmhgfs driver. The vmhgfs driver was required for enabling shared folders feature, but is superseded by vmhgfs-fuse which does not require a kernel driver.\n\n## Will there be continued support for VMware Tools and OSP? \nVMware Tools will continue to be available under a commercial license. It is recommended that open-vm-tools be used for the Linux distributions where open-vm-tools is available. VMware will not provide OSPs for operating systems where open-vm-tools is available.\n\n## How does this benefit other open source projects?\nUnder the terms of the GPL, open source community members are able to use the open-vm-tools code to develop their own applications, extend it, and contribute to the community. They can also incorporate some or all of the code into their projects, provided they comply with the terms of the GPL.\n\n# License Related\n## What license is the code being released under?\nThe code is being released under GPL v2 and GPL v2 compatible licenses. To be more specific, the Linux kernel modules are being released under the GPL v2, while almost all of the user level components are being released under the LGPL v2.1. The SVGA and mouse drivers have been available under the X11 license for quite some time. There are certain third party components released under BSD style licenses, to which VMware has in some cases contributed, and will continue to distribute with open-vm-tools.\n \n## Why did you choose these licenses?\nWe chose the GPL v2 for the kernel components to be consistent with the Linux kernel's license. We chose the LGPL v2.1 for the user level components because some of the code is implemented as shared libraries and we do not wish to restrict proprietary code from linking against those libraries. For consistency, we decided to license the rest of the userlevel code under the LGPL v2.1 as well.\n\n## What are the obligations that the license(s) impose?\nEach of these licenses have different obligations.\nFor questions about the GPL, LGPL licenses, the Free Software Foundation's GPL FAQ page provides lots of useful information. \nFor questions about the other licenses like the X11, BSD licenses, the Open Source Initiative has numerous useful resources including mailing lists. \nThe Software Freedom Law Center provides legal expertise and consulting for free and open source software (FOSS) developers.\n\n## Can I use all or part of this code in my proprietary software? Do I have to release the source code if I do?\nDifferent open source licenses have different requirements regarding the release of source code. Since the code is being released under various open source licenses, you will need to comply with the terms of the corresponding licenses.\n\n## Am I required to contribute back any changes I make to the code?\nNo, you aren't required to contribute any changes that you make back to the open-vm-tools project. However, we encourage you to do so.\n\n## Can I use all or part of this code in another open source package?\nYes, as long as you comply with the appropriate license(s).\n \n## Can I package this for my favorite operating system?\nYes! Please do. \n\n## Will the commercial version (VMware Tools) differ from the open source version (open-vm-tools)? If so, how?\nOur goal is to work towards making the open source version as close to the commercial version as possible. However, we do currently make use of certain components licensed from third parties as well as components from other VMware products which are only available in binary form.\n\n## If I use the code from the open-vm-tools project in my project/product, can I call my project/product VMware Tools?\nNo, since your project/product is not a VMware project/product.\n\n# Building open-vm-tools\n## How do I build open-vm-tools?\nopen-vm-tools uses the GNU Automake tool for generating Makefiles to build all sources. More information about Automake can be found here: http://www.gnu.org/software/automake/\n## Project build information:\nThe following steps will work on most recent Linux distributions:\n```\nautoreconf -i\n./configure\nmake\nsudo make install\nsudo ldconfig\n```\n\n### Service Discovery (sdmp) plugin\nTo build the optional sdmp (Service Discovery) plugin use the `--enable-servicediscovery` option to invoke the configure script:\n```\n./configure --enable-servicediscovery\n```\n\n### The open-vm-tools 12.0.0 release introduces an optional setup script and two plugins (one optional)\n\n * Salt Minion Setup\n * Component Manager plugin\n * ContainerInfo plugin (optional)\n\n### Salt Minion Setup\nThe Salt support on Linux consists of a single bash script to setup Salt Minion on VMware virtual machines.  The script requires the \"curl\" and \"awk\" commands to be available on the system.\n\nLinux providers supplying open-vm-tools packages are recommended to provide Salt Minion support in a separate optional package - \"open-vm-tools-salt-minion\".\n\nTo include the Salt Minion Setup in the open-vm-tools build use the `--enable-salt-minion` option when invoking the configure script.\n```\n./configure --enable-salt-minion\n```\n\n### Component Manager (componentMgr) plugin\nThe component Manager manages a preconfigured set of components available from VMware that can be made available on the Linux guest.  Currently the only component that can be managed is the Salt Minion Setup.\n\n### ContainerInfo (containerInfo) plugin\nThe optional containerInfo plugin retrieves a list of the containers running on a Linux guest and publishes the list to the guest variable \"**guestinfo.vmtools.containerinfo**\" in JSON format.  The containerInfo plugin communicates with the containerd daemon using gRPC to retrieve the desired information.  For containers that are managed by Docker, the plugin uses libcurl to communicate with the Docker daemon and get the names of the containers.\n\nSince this plugin requires additional build and runtime dependencies, Linux vendors are recommended to release it in a separate, optional package - \"open-vm-tools-containerinfo\".  This avoids unnecessary dependencies for customers not using the feature.\n\n#### Canonical, Debian, Ubuntu Linux\n| Build Dependencies | Runtime |\n|:------------------------:|:----------------:|\n| `libcurl4-openssl-dev` | `curl` |\n| `protobuf-compiler` | `protobuf` |\n| `libprotobuf-dev` | `grpc++` |\n| `protobuf-compiler-grpc` |\n| `libgrpc++-dev` |\n| `golang-github-containerd-containerd-dev` |\n| `golang-github-gogo-protobuf-dev` |\n\n#### Fedora, Red Hat Enterprise Linux, ...\n| Build Dependencies | Runtime |\n|:------------------------:|:----------------:|\n| `libcurl-devel` | `curl` |\n| `protobuf-compiler` | `protobuf` |\n| `protobuf-devel` | `grpc-cpp` |\n| `grpc-plugins` |\n| `grpc-devel` |\n| `containerd-devel` |\n\n\n#### Configuring the build for the ContainerInfo plugin\nThe configure script defaults to building the ContainerInfo when all the needed dependencies are available.  ContainerInfo will not be built if there are missing dependencies.  Invoke the configure script with `--enable-containerinfo=no` to explicitly inhibit building the plugin.\n```\n./configure --enable-containerinfo=no\n```\nIf the configure script is given the option `--enable-containerinfo=yes` and any necessary dependency is not available, the configure script will terminate with an error.\n```\n./configure --enable-containerinfo=yes\n```\n\n## Getting configure options and help\nIf you are looking for help or additional settings for the building of this project, the following configure command will display a list of help options:\n```\n./configure --help\n```\nWhen using configure in the steps above it is only necessary to call ./configure once unless there was a problem after the first invocation.\n\n# Getting Involved\n## How can I get involved today?\nYou can get involved today in several different ways:\n- Start using open-vm-tools today and give us feedback.\n- Suggest feature enhancements.\n- Identify and submit bugs under issues section: https://github.com/vmware/open-vm-tools/issues\n- Start porting the code to other operating systems.   Here is the list of operating systems with open-vm-tools:\n\n  * Red Hat Enterprise Linux 7.0 and later releases\n  * SUSE Linux Enterprise 12 and later releases\n  * Ubuntu 14.04 and later releases\n  * CentOS 7 and later releases\n  * Debian 7.x and later releases\n  * Oracle Linux 7 and later \n  * Fedora 19 and later releases\n  * openSUSE 11.x and later releases\n  * Flatcar Container Linux, all releases\n  * Rocky 8 and later releases\n  * AlmaLinux OS 8 and later releases\n \n## Will external developers be allowed to become committers to the project?\nYes. Initially, VMware engineers will be the only committers. As we roll out our development infrastructure, we will be looking to add external committers to the project as well.\n\n## How can I submit code changes like bug fixes, patches, new features to the project?\nInitially, you can submit bug fixes, patches and new features to the project development mailing list as attachments to emails or bug reports. To contribute source code, you will need to fill out a contribution agreement form as part of the submission process. We will have more details on this process shortly.\n\n## What is the governance model for managing this as an open source project?\nThe feature roadmap and schedules for the open-vm-tools project will continue to be defined by VMware. Initially, VMware engineers will be the only approved committers. We will review incoming submissions for suitability for merging into the project. We will be looking to add community committers to the project based on their demonstrated contributions to the project. Finally, we also plan to set up a process for enhancement proposals, establishing sub-projects and so on.\n\n## Will you ship code that I contribute with VMware products? If so, will I get credit for my contributions?\nContributions that are accepted into the open-vm-tools project's main source tree will likely be a part of VMware Tools. We also recognize the value of attribution and value your contributions. Consequently, we will acknowledge contributions from the community that are distributed with VMware's products.\n\n## Do I need to sign something before making a contribution?\nYes. We have a standard contribution agreement that covers all contributions made to the project. It gives VMware and you joint copyright interests in the code you are contributing. The agreement also gives VMware flexibility with licensing and also helps avoid any copyright/licensing related issues that may arise in the future. In order for us to include your contribution in our source tree, we ask that you send us a signed copy of the agreement. You can do this in one of two ways:\nFax to +1.650.427.5003, Attn: Product & Technology Law Group\nScan and email it to oss-queries_at_vmware.com\nAgreement: http://open-vm-tools.sourceforge.net/files/vca.pdf\n\n## My version of Linux is not recognized.  How do I add my Linux name to the known list?\n\nThe open-vm-tools source contains a table mapping the guest distro name to the officially recognized short name.  __Please do not submit pull requests altering this table and associated code.__  Any changes here must be accompanied by additional changes in the VMware host.  Values that are not recognized by the VMware host will be ignored. \n\n\nUse the appropriate generic Linux designation when configuring a VM for your Linux version.  The selection available will vary by virtual hardware version being used.\n- Other 5.x or later Linux (64-bit)\n- Other 5.x or later Linux (32-bit)\n- Other 4.x Linux (64-bit)\n- Other 4.x Linux (32-bit)\n- Other 3.x Linux (64-bit)\n- Other 3.x Linux (32-bit)\n- Other Linux (64-bit)\n- Other Linux (32-bit)\n\n# Compatibilty\n\n## What Operating Systems are supported for customization?\nThe [Guest OS Customization Support Matrix](http://partnerweb.vmware.com/programs/guestOS/guest-os-customization-matrix.pdf) provides details about the guest operating systems supported for customization.\n\n## Which versions of open-vm-tools are compatible with other VMware products?\n\nThe [VMware Product Interoperability Matrix](http://partnerweb.vmware.com/comp_guide2/sim/interop_matrix.php) provides details about the compatibility of different versions of VMware Tools (includes open-vm-tools) and other VMware Products.\n\n# Internationalization\n## Which languages are supported?\n\nopen-vm-tools supports the following languages:\n- English\n- French\n- German\n- Spanish\n- Italian\n- Japanese\n- Korean\n- Simplified Chinese\n- Traditional Chinese\n\n# Other\n## Mailing Lists\nPlease send an email to one of these mailing lists based on the nature of your question.\n- Development related questions : open-vm-tools-devel@lists.sourceforge.net\n- Miscellaneous questions: open-vm-tools-discuss@lists.sourceforge.net\n- General project announcements: open-vm-tools-announce@lists.sourceforge.net\n\n"
        },
        {
          "name": "ReleaseNotes.md",
          "type": "blob",
          "size": 3.6318359375,
          "content": "#                      open-vm-tools 12.5.0 Release Notes\n\nUpdated on: 8 October 2024\n\nopen-vm-tools | 8 OCTOBER 2024 | Build 24276846\n\nCheck back for additions and updates to these release notes.\n\n## What's in the Release Notes\n\nThe release notes cover the following topics:\n\n* [What's New](#whatsnew) \n* [Internationalization](#i18n) \n* [Product Support Notice](#suppnote)\n* [Guest Operating System Customization Support](#guestop) \n* [Interoperability Matrix](#interop) \n* [Resolved Issues](#resolvedissues) \n* [Known Issues](#knownissues)\n\n## <a id=\"whatsnew\" name=\"whatsnew\"></a>What's New\n\n\n*   Please see the [Resolved Issues](#resolvedissues) and [Known Issues](#knownissues) sections below.\n\n*   A complete list of the granular changes in the open-vm-tools 12.5.0 release is available at:\n\n    [open-vm-tools ChangeLog](https://github.com/vmware/open-vm-tools/blob/stable-12.5.0/open-vm-tools/ChangeLog)\n\n## <a id=\"i18n\" name=\"i18n\"></a>Internationalization\n\nopen-vm-tools 12.5.0 is available in the following languages:\n\n* English\n* French\n* German\n* Spanish\n* Italian\n* Japanese\n* Korean\n* Simplified Chinese\n* Traditional Chinese\n\n## <a id=\"suppnote\" name=\"suppnote\"></a>Product Support Notice\n\nBeginning with the next major release, we will be reducing the number of supported localization languages.  The three supported languages will be:\n  * Japanese\n  * Spanish\n  * French\n\nThe following languages will no longer be supported:\n  * Italian\n  * German\n  * Brazilian Portuguese\n  * Traditional Chinese\n  * Korean\n  * Simplified Chinese\n\nImpact:\n  * Users who have been using the deprecated languages will no longer receive updates or support in these languages.\n  * All user interfaces, message catalogs, help documentation, and customer support will be available only in English or in the three supported languages mentioned above.\n\n## <a id=\"guestop\" name=\"guestop\"></a>Guest Operating System Customization Support\n\nThe [Guest OS Customization Support Matrix](http://partnerweb.vmware.com/programs/guestOS/guest-os-customization-matrix.pdf) provides details about the guest operating systems supported for customization.\n\n\n## <a id=\"interop\" name=\"interop\"></a>Interoperability Matrix\n\nThe [VMware Product Interoperability Matrix](http://partnerweb.vmware.com/comp_guide2/sim/interop_matrix.php) provides details about the compatibility of current and earlier versions of VMware Products. \n\n## <a id=\"resolvedissues\" name =\"resolvedissues\"></a> Resolved Issues\n\n*   **The following github.com/vmware/open-vm-tools pull request has been addressed.**\n\n    * Revise settings for vmware-user.desktop\n\n      [Pull request #668](https://github.com/vmware/open-vm-tools/pull/668)\n\n*   **Accomodate newer releases of libxml2 and xmlsec1.**\n\n    The configure.ac and VGAuth code updated to avoid deprecated functions and build options based on OSS product version.\n\n## <a id=\"knownissues\" name=\"knownissues\"></a>Known Issues\n\n*   **Shared Folders mount is unavailable on Linux VM.**\n\n    If the **Shared Folders** feature is enabled on a Linux VM while it is powered off, the shared folders mount is not available on restart.\n\n    Note: This issue is applicable to open-vm-tools running on VMware Workstation and VMware Fusion.\n\n    Workaround:\n\n    If the VM is powered on, disable and enable the **Shared Folders** feature from the interface. For resolving the issue permanently, edit **/etc/fstab** and add an entry to mount the Shared Folders automatically on boot.  For example, add the line:\n\n    <tt>vmhgfs-fuse   /mnt/hgfs    fuse    defaults,allow_other    0    0</tt>\n\n    For more information on how to configure VMware Tools Shared Folders, see [KB 60262](https://kb.vmware.com/s/article/60262)\n"
        },
        {
          "name": "open-vm-tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}