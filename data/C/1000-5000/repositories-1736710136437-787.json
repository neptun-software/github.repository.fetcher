{
  "metadata": {
    "timestamp": 1736710136437,
    "page": 787,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "labwc/labwc",
      "stars": 1785,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.9775390625,
          "content": "# Note: this is an VERY rough approximation of labwc's coding style (see\n# CONTRIBUTING.md) and is intended only as a hint for IDE formatting\n# aids. DO NOT rely on clang-format or your IDE for correct formatting;\n# always check the result manually (and run ./scripts/check)!\n#\n# Some notable things that clang-format gets wrong:\n#  - no support for double-indenting before an opening brace\n#  - does not always round continuation indent/alignment to tab stops\n\nBasedOnStyle: LLVM\nUseTab: Always\nIndentWidth: 8\nContinuationIndentWidth: 8\nAlignAfterOpenBracket: DontAlign\nAlwaysBreakAfterDefinitionReturnType: true\nBreakBeforeBinaryOperators: NonAssignment\nBreakBeforeBraces: Linux\nIndentCaseLabels: false\nSpaceBeforeParens: ControlStatementsExceptControlMacros\nForEachMacros: ['for_each_view',\n                'wl_array_for_each',\n                'wl_list_for_each',\n                'wl_list_for_each_reverse',\n                'wl_list_for_each_reverse_safe',\n                'wl_list_for_each_safe']\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2939453125,
          "content": "root = true\n\n[*.{c,h,scd}]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\ntrim_trailing_whitespace = true\nindent_style = tab\nindent_size = 8\nmax_line_length = 80\n\n[*.{xml,build,md}]\nindent_style = space\nindent_size = 2\n\n[*.md]\nmax_line_length = 80\n\n[COMMIT_EDITMSG]\nmax_line_length = 74\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1474609375,
          "content": "# Exclude checkpatch.pl from language stats\n# https://github.com/github/linguist/blob/master/docs/overrides.md\nscripts/checkpatch.pl linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0810546875,
          "content": "# VS Code cache\n.cache\n\n# vim swap files\n*.swp\n*.swo\n\n# Qt Creator settings\n*.user\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 16.146484375,
          "content": "- [1. How to Contribute](#how-to-contribute)\n- [2. Debugging](#debugging)\n  - [2.1 Backtraces](#backtraces)\n  - [2.2 Debug Logs](#debug-logs)\n  - [2.3 Output](#output)\n  - [2.4 Input](#input)\n- [3. Packaging](#packaging)\n- [4. Coding Style](#coding-style)\n  - [4.1 Linux Kernel Style Basics](#linux-kernel-style-basics)\n  - [4.2 Devault Deviations](#devault-deviations)\n  - [4.3 Labwc Specifics](#labwc-specifics)\n    - [4.3.1 API](#api)\n    - [4.3.2 The Use of glib](#the-use-of-glib)\n    - [4.3.3 The use of GNU extensions](#the-use-of-gnu-extensions)\n    - [4.3.4 Naming Conventions](#naming-conventions)\n- [5. Commit Messages](#commit-messages)\n- [6. Unit Tests](#unit-tests)\n- [7. Submitting Patches](#submitting-patches)\n- [8. Native Language Support](#native-language-support)\n- [9. Upversion](#upversion)\n\n# How to Contribute\n\n1. Report bugs as github issues. We use a template prompting you to provide\n   some sensible information such as what happened, what you expected to happen\n   and steps to reproduce. If applicable try with default configuration.  If\n   you are able to, try to do some debugging (guidelines below).\n\n2. Submit patches as github pull-requests. If you wish to introduces significant\n   changes or new features, consult the [scope document], discuss on IRC or via\n   a github issue first.\n\n# Debugging\n\nThere is no one-way-fits-all method for debugging, so you have to use your\nantennae and do some detective work.\n\nThis section contains some approaches which may prove useful.\n\n## Backtraces\n\nIf the compositor crashes, a good starting point is to produce a backtrace by\nbuilding with ASAN/UBSAN:\n\n```\nmeson setup -Db_sanitize=address,undefined build/\nmeson compile -C build/\n```\n\n## Debug Logs\n\nGet debug log with `labwc -d`. The log can be directed to a file with `labwc -d\n2>log.txt`\n\nTo see what is happening on the wayland protocol for a specific client, run it\nwith environment variable `WAYLAND_DEBUG` set to 1, for example `WAYLAND_DEBUG=1\nfoot`.\n\nTo see what the compositor is doing on the protocol run `labwc` nested (i.e.\nstart labwc from a terminal in another instance of labwc or some other\ncompositor) with `WAYLAND_DEBUG=server`. This filters out anything from clients.\n\nFor wayland clients, you can get a live view of some useful info using [wlhax].\n\n## Output\n\nIf you think you've got a damage issue, you can run labwc like this:\n`WLR_SCENE_DEBUG_DAMAGE=highlight labwc` to get a visual indication of damage\nregions.\n\nTo emulate multiple outputs (even if you only have one physical monitor), run\nwith `WLR_WL_OUTPUTS=2 labwc` or similar. See [`wlroots/docs/env_vars.md`] for\nmore options.\n\nFor some types of bugs, it might be useful to find out which mesa driver (.so)\nyou are using. This can be done with `EGL_LOG_LEVEL=debug labwc 2>&1 | grep\nMESA-LOADER`\n\nTo rule out driver issues you can run with `WLR_RENDERER=pixman labwc`\n\nYou can also get some useful system info with [drm_info].\n\n## Input\n\nUse `sudo libinput debug-events` to show input events.\n\nFrom a terminal you can use `xev -event keyboard` and `wev -f wl_keyboard:key`\nto analyse keyboard events\n\n# Packaging\n\nSome distributions carry labwc in their repositories or user repositories.\n\n- @ptrcnull (Alpine)\n- @narrat (Arch)\n- @artist-artix (Artix)\n- @b1rger (Debian)\n- @jbeich (FreeBSD)\n- @epsilon-0 (Gentoo)\n- @spl237 (Raspberry Pi OS)\n- @adcdam (Slackware)\n- @bdantas (Tiny Core Linux)\n- @Visone-Selektah (Venom Linux)\n- @tranzystorekk (Void Linux)\n\nkindly maintain the packages in their respective distro.\n\nLet's keep them informed of new releases and any changes that relate to\npackaging.  If you are maintaining a labwc package for another distro feel free\nto open an issue so we can add you to this list.\n\n# Coding Style\n\nlabwc is written in the [Linux kernel coding style] with a small number of\ndeviations to align with [Drew Devault's preferred coding style] namely:\n\n1. [Function Declaration](https://git.sr.ht/~sircmpwn/cstyle#function-declarations)\n2. [Braces for one-line statement](https://git.sr.ht/~sircmpwn/cstyle#brace-placement)\n3. [Organisation of header #include statements](https://git.sr.ht/~sircmpwn/cstyle#header-files)\n4. [Breaking of long lines](https://git.sr.ht/~sircmpwn/cstyle#splitting-long-lines)\n\nThe reasons for specifying a style is not that we enjoy creating rules, but\nbecause it makes reading/maintaining the code and spotting problems much easier.\n\nIf you are new to this style and want to get going quickly, either just imitate\nthe style around you, or read the summary below and use `./scripts/check` to run\nsome formatting checks.\n\n## Linux Kernel Style Basics\n\nThe preferred line length limit is 80 columns, although this is a bit soft.\n\nTabs are 8 columns wide. Indentation with spaces is not used.\n\nOpening braces go on the same line, except for function definitions.\n\nPut `*` with the identifier when defining pointers, for example `char *foo`\n\nSpaces are placed around binary operators but not unary, like this:\n\n```\nint x = y * (2 + z);\nfoo(--a, -b);\n```\n\n`sizeof(*foo)` is preferred over `sizeof(struct foo)`\n\nUse `if (!p)` instead of `if (p == 0)` or `if (p == NULL)`\n\nComments are written as follows:\n\n```\n/* This is a single-line comment */\n\n/*\n * This is a multi-line comment which is much much much much much much\n * longer.\n */\n```\n\nWhen documenting functions in header files we use the [kernel-doc format]:\n\n```\n/**\n * function_name() - Brief description of function.\n * @arg1: Describe the first argument.\n * @arg2: Describe the second argument.\n *        One can provide multiple line descriptions\n *        for arguments.\n *\n * A longer description, with more discussion of the function function_name()\n * that might be useful to those using or modifying it. Begins with an\n * empty comment line, and may include additional embedded empty\n * comment lines.\n *\n * The longer description may have multiple paragraphs.\n *\n * Return: Describe the return value of function_name.\n *\n * The return value description can also have multiple paragraphs, and should\n * be placed at the end of the comment block.\n */\n```\n\n## Devault Deviations\n\nFunctions are defined as below with `name` on a new line:\n\n```\nreturn type\nname(parameters...)\n{\n\tbody\n}\n```\n\nBraces are mandatory even for one-line statements.\n\n```\nif (cond) {\n\t...\n}\n```\n\n`#include` statements at the top of the file are organized by locality (`<>`\nfirst, then `\"\"`), then alphabetized.\n\nWhen breaking a statement onto several lines, indent the subsequent lines once.\nIf the statement declares a `{}` block, indent twice instead. Also, place\noperators (for example `&&`) on the next line.\n\n```\n\tif (seat->pressed.surface && ctx->surface != seat->pressed.surface\n\t\t\t&& !update_pressed_surface(seat, ctx)\n\t\t\t&& !seat->drag_icon) {\n\t\tif (cursor_has_moved) {\n\t\t\tprocess_cursor_motion_out_of_surface(server, time_msec);\n\t\t}\n\t\treturn;\n\t}\n```\n\n## Labwc Specifics\n\n### API\n\nWe have a very small, modest API and encourage you to use it.\n\n1. `znew()` - as a shorthand for calloc(1, sizeof()) with type checking\n   [common/mem.h]\n\n2. `zfree()` to zero after free - [common/mem.h]\n\n3. `wl_list_append()` to add elements at end of lists - [common/list.h]\n\n4. `wl_array_len()` to get number of elements in a `wl_array` [common/array.h]\n\n5. `ARRAY_SIZE()` to get number of elements in visible array\n   [common/macros.h]\n\n[common/mem.h]: https://github.com/labwc/labwc/blob/master/include/common/mem.h\n[common/list.h]: https://github.com/labwc/labwc/blob/master/include/common/list.h\n[common/array.h]: https://github.com/labwc/labwc/blob/master/include/common/array.h\n[common/macros.h]: https://github.com/labwc/labwc/blob/master/include/common/macros.h\n\n### The Use of glib\n\nWe try to keep the use of glib pretty minimal for the following reasons:\n\n- The use of glib has been known to make AddressSanitiser diagnose false\n  positives and negatives.\n- Log messages coming from glib functions look inconsistent.\n- The use of glib functions, naming-conventions and iterators in a code base\n  that is predominantly ANSI C creates a clash which makes readability and\n  maintainability harder.\n- Mixing gmalloc()/malloc() and respective free()s can create problems with\n  memory pools [^1]\n\nHaving said that, with our use of cairo and pango we depend on glib-2.0 anyway\nso linking with it and making use of some of its helper functions comes for free\nand can keep the code simpler.\n\nFor example, if we were going to carry out extensive string manipulation,\nGString and utf8 helpers would be okay. Some functions such as\n`g_utf8_casefold()` would be pretty hard to write from scratch and are fine to\nuse. Having said that, labwc does not do much string-mangling.\n\nThe following functions are used today and are deemed acceptable by the core\ndevs:\n\n- `g_shell_parse_argv()`\n- `g_strsplit()`\n- `g_pattern_match_simple()`\n\nWhen using these types of functions it is often desirable to support with some\nglib code, which is okay provided it is kept local and self-contained. See\nexample from `src/theme.c`:\n\n```\nstatic bool\nmatch(const gchar *pattern, const gchar *string)\n{\n\tGString *p = g_string_new(pattern);\n\tg_string_ascii_down(p);\n\tbool ret = (bool)g_pattern_match_simple(p->str, string);\n\tg_string_free(p, true);\n\treturn ret;\n}\n```\n\n### The use of GNU extensions\n\nWe avoid [GNU C extensions] because we want to fit into the eco-system\n(wayland and wlroots) we live in.\n\nWe do use `__typeof__` which strictly speaking is a GNU C extension (`typeof`)\nbut through the use of `__` is supported by gcc and clang without defining\n`_GNU_SOURCE`. The justification for this is that Wayland uses it, for example\nin the [`wl_container_of()`] macro which is needed in `wl_list*` and it\ndoes provide pretty big benefits in terms of type safety.\n\nWe compile with `-std=c11` because that's what 'wlroots' uses and we do not\nwant to increase the entry-level for OSs without good reason (and currently\nwe can't think of one).\n\n### Naming Conventions\n\nThere are three types of coordinate systems: surface, output and layout - for\nwhich the variables (sx, sy), (ox, oy) and (lx, ly) are used respectively in\nline with wlroots.\n\nWith the introduction of the scene-graph API, some wlroots functions also use\nnode coordinates (nx, ny) but we prefer (sx, sy) where possible.\n\nWe do not worry about namespace issues too much and we try to not make the code\na pain to use just to uniquify names. If we were writing a library we would\nprefix public functions and structs with `lab_`, but we are not. We do however\nprefix public function names with the filename of the translation unit.  For\nexample, public functions in `view.c` begin with `view_`.\n\nWe do start enums with `LAB_`\n\nWe use the prefix `handle_` for signal-handler-functions in order to be\nconsistent with sway and rootston. For example\n`view->request_resize.notify = handle_request_resize`\n\n# Commit Messages\n\nThe log messages that explain changes are just as important as the changes\nthemselves. Try to describe the 'why' to help future developers.\n\nWrite [commit messages] like so, keeping the top line to this sort of syntax:\n\n```\ncursor: add special feature\n```\n\nThis first line should:\n\n- Be a short description\n- In most cases be prefixed with \"area: \" where area refers to a filename\n  or identifier for the general area of the code being modified.\n- Not capitalize the first word following the \"area: \" prefix, unless\n  it's a name, acronym or similar.\n- Skip the full stop\n\nAnd please wrap the commit message at max 74 characters, otherwise `git log`\nand similar look so weird. URLs and other references are exempt.\n\n# Unit Tests\n\n## Introduction\n\nThe tests live in the `t/` directory.\n\nIn the bigger scheme of validating that the compositor meets users' needs, unit\ntests do not contribute a great deal. However, they have a role to play in\nproviding some verification that stand-alone functions behave as expected.\n\nOn this project, writing unit-tests is not compulsory nor do we measure\ncoverage. The inclusion of the t/ directory does not signify a move towards\ntest-driven development. We intend to use unit tests sparingly and only when\ndevs find them useful.\n\n## Usage\n\nFrom repo top level directory:\n\n    meson setup -Dtest=enabled build\n    meson compile -C build/\n    meson test --verbose -C build/\n\n# Submitting patches\n\nBase both bugfixes and new features on `master`.\n\n# Native Language Support\n\n## Translators\n\n### Weblate Instance\n\nTranslators can create an account at [LXQt Weblate](https://translate.lxqt-project.org/projects/labwc/labwc/)\nand use the web interface. Adding new languages should work, otherwise the\nadministrators can be contacted. Suggestions for improving existing translations\ncan be added without account.\n\n### Github Pull Request\n\nTranslators can add their `MY_LOCALE.po` files to the `po` directory\nbased on `po/labwc.pot` and issue a pull request. To do this they can\ngenerate their `MY_LOCALE.po` file in a few steps:\n\n1. Edit the `po/LINGUAS` file to add their locale code in English\n   alphabetical order to the field of locale codes.\n2. Copy the `po/labwc.pot` to `po/MY_LOCALE.po`\n3. Edit the newly generated `MY_LOCALE.po` file with some of their\ncontact and locale details in the header of the file then add the\ntranslation strings under each English string.\n\n[See this tutorial for further guidance](https://www.labri.fr/perso/fleury/posts/programming/a-quick-gettext-tutorial.html)\n\n## Coders\n\nCode contributors may need to update relevant files if their additions\naffect UI elements (at the moment only `src/menu/menu.c` and\n`src/config/rcxml.c`). In this case the `po/labwc.pot` file needs to be\nupdated so that translators can update their translations. Remember,\nmany translators are _not_ coders!\n\nThe process is fairly trivial however does involve some manual steps.\n\n1. After adding and testing your code additions to satisfaction, backup\n`po/labwc.pot`. You need the custom header from that file for the newly\ngenerated .pot file in the next step.\n\n2. From the root of the repository run this:\n\n```\nxgettext --keyword=_ --language=C --add-comments -o po/labwc.pot src/menu/menu.c src/config/rcxml.c\n```\n\nThis generates a new pot file at `po/labwc.pot`\n\n3. Copy the header from the original `labwc.pot` to the new one, keeping\nthe newly generated dates, check for sanity and commit.\n\n# Upversion\n\nIt is generally only the lead-maintainer who will upversion, but in order\nnot to forget any key step or in case someone else needs to do it, here\nfollow the steps to be taken:\n\n1. If appropriate, update `revision` in `subprojects/wlroots.wrap` and run\n   `git commit -m 'wlroots.wrap: use A.B.C'`\n2. Update `NEWS.md` with the release details and run\n   `git commit -m 'NEWS.md: update notes for X.Y.Z'`\n   Note: If new dependencies are needed, make this clear.\n3. In `meson.build` update the version and (if required) the wlroots\n   dependency version. Then run `git commit -m 'build: bump version to X.Y.Z'`\n4. Run `git tag -a X.Y.Z`. The first line of the commit message should be\n   \"labwc X.Y.Z\" and the body should be the `NEWS.md` additions removing\n   hash characters (#) from the headings as these will otherwise be\n   ignored by git.\n5. On github, create a 'Release' as some distros use this as a trigger. Set it\n   as 'latest release'.\n\n[scope document]: https://github.com/labwc/labwc-scope#readme\n[`wlroots/docs/env_vars.md`]: https://gitlab.freedesktop.org/wlroots/wlroots/-/blob/master/docs/env_vars.md\n[wlhax]: https://git.sr.ht/~kennylevinsen/wlhax\n[drm_info]: https://github.com/ascent12/drm_info\n[Drew Devault's preferred coding style]: https://git.sr.ht/~sircmpwn/cstyle\n[Linux kernel coding style]: https://www.kernel.org/doc/html/v4.10/process/coding-style.html\n[kernel-doc format]: https://docs.kernel.org/doc-guide/kernel-doc.html\n[commit messages]: https://gitlab.freedesktop.org/wlroots/wlroots/-/blob/master/CONTRIBUTING.md#commit-messages\n[GNU C extensions]: https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html\n[`wl_container_of()`]: https://github.com/wayland-project/wayland/blob/985ab55d59db45ea62795c76dff5949343e86b2f/src/wayland-util.h#L409\n\n[^1]: The reference documentation for glib notes that:\n      \"It's important to match g_malloc() with g_free(), plain malloc() with\n      free(), and (if you're using C++) new with delete and new[] with\n      delete[]. Otherwise bad things can happen, since these allocators may use\n      different memory pools (and new/delete call constructors and\n      destructors).\"\n      See: https://developer.gimp.org/api/2.0/glib/glib-Memory-Allocation.html\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "NEWS.md",
          "type": "blob",
          "size": 82.701171875,
          "content": "# Introduction\n\nThis file contains significant user-visible changes for each version.\nFor full changelog, use `git log`.\n\nThe format is based on [Keep a Changelog]\n\n# Summary of Releases\n\n| Date       | All Changes   | wlroots version | lines-of-code |\n|------------|---------------|-----------------|---------------|\n| 2024-12-13 | [0.8.2]       | 0.18.2          | 26298         |\n| 2024-10-25 | [0.8.1]       | 0.18.1          | 25473         |\n| 2024-08-16 | [0.8.0]       | 0.18.0          | 23320         |\n| 2024-06-19 | [0.7.4]       | 0.17.4          | 22746         |\n| 2024-06-12 | [0.7.3]       | 0.17.4          | 22731         |\n| 2024-05-10 | [0.7.2]       | 0.17.3          | 21368         |\n| 2024-03-01 | [0.7.1]       | 0.17.1          | 18624         |\n| 2023-12-22 | [0.7.0]       | 0.17.1          | 16576         |\n| 2023-11-25 | [0.6.6]       | 0.16.2          | 15796         |\n| 2023-09-23 | [0.6.5]       | 0.16.2          | 14809         |\n| 2023-07-14 | [0.6.4]       | 0.16.2          | 13675         |\n| 2023-05-08 | [0.6.3]       | 0.16.2          | 13050         |\n| 2023-03-20 | [0.6.2]       | 0.16.2          | 12157         |\n| 2023-01-29 | [0.6.1]       | 0.16.1          | 11828         |\n| 2022-11-17 | [0.6.0]       | 0.16.0          | 10830         |\n| 2022-07-15 | [0.5.3]       | 0.15.1          | 9216          |\n| 2022-05-17 | [0.5.2]       | 0.15.1          | 8829          |\n| 2022-04-08 | [0.5.1]       | 0.15.1          | 8829          |\n| 2022-02-18 | [0.5.0]       | 0.15.1          | 8766          |\n| 2021-12-31 | [0.4.0]       | 0.15.0          | 8159          |\n| 2021-06-28 | [0.3.0]       | 0.14.0          | 5051          |\n| 2021-04-15 | [0.2.0]       | 0.13.0          | 5011          |\n| 2021-03-05 | [0.1.0]       | 0.12.0          | 4627          |\n\n## [0.8.2]\n\nThis is a shorter release cycle compared with the usual 10-week one because it\ncontains a significant number of stability and cleanliness fixes which warrant\npackaging.\n\nWe do not normally describe behind-the-scenes work in this log, but will mention\ntwo here as an exception:\n\n1. A clean run with gcc/clang memory leak check has been achieved. Thanks to\n   @tokyo4j for fantastic work with this [#2331]\n2. A buffer-sharing mechanism has been merged to improve both processor and\n   memory usage in the long term. Credits to @tokyo4j and @Consolatis for this\n   one. [#2363]\n\nNotes to package maintainers:\n\n- The wlroots dependency has been increased to `0.18.1` to avoid a crash when\n  using ext-foreign-toplevel-list protocol.\n- It is also advisable to use `0.18.2` as soon as possible to fix a crash\n  triggered when the xwayland server closes during a drag-and-drop with an\n  XWayland client.\n\n### Added\n\n- Add support for xdg-foreign-v1 and xdg-foreign-v2 protocols [#2400]\n- Add window rule to send release-events of modifiers which are part of\n  keybinds. This supports clients (like blender) that want to see modifier\n  release events even when they are part of a keybinds. [#2377]\n\n```xml\n<windowRules>\n  <windowRule identifier=\"blender\" wantAbsorbedModifierReleaseEvents=\"yes\"/>\n</windowRules>\n```\n\n- Support menu borders [#2376]\n\n```\nmenu.border.width: 1\nmenu.border.color: #aaaaaa\n```\n\n- Add conversion specifier `%n` to the window-switcher `<field>` config option\n  to show desktop entry name in the window-switcher. Written-by: @jp7677 [#2360]\n\n```xml\n<windowSwitcher>\n  <fields>\n    <field content=\"custom\" format=\"%n\" width=\"25%\"/>\n    <field content=\"title\" width=\"75%\"/>\n  </fields>\n</windowSwitcher>\n```\n\n- Add hold gestures. @jp7677 [#2326]\n- Support ext-foreign-toplevel-list protocol [#2072]\n- Support additional window rule conditions including `shaded`, `maximized`,\n  `iconified`, `focused`, `omnipresent`, `desktop`, `tiled` and `tiled_region`.\n  This also works for `If` and `ForEach` queries. @orfeasxyz @ahesford [#2245]\n- Add mouse emulation for touch devices. @spl237 [#2277]\n- Improve handling of touch events. @jp7677 [#2273]\n  This includes:\n    - Hide the cursor on touch input and keep the cursur invisible until\n      pointer or tablet input\n    - Close xdg-popups on touch down\n    - Notify idle-manager on touch down/up\n    - Clear pointer focus on touch input to avoid pointer focus interfering\n      with touch input, like showing hover effect on unexpected locations\n    - Move touch only with one touch point - in other words do not move the\n      cursor when more than one finger is down\n    - Warp cursor to touch coordinates for consistent behaviour with\n      non-touch capable surfaces including the desktop\n- Set environment variable `LABWC_VER` with current compositor version.\n  @01micko [#2257]\n- Broadcast keyboard modifiers to all clients rather than just the one with\n  keyboard focus. [#2274]\n  This enables:\n    - Clients such as panels to display the current keyboard layout without\n      introducing new wayland protocols or other IPC.\n    - Unfocused xdg-shell clients to understand button press with keyboard\n      modifiers for example Ctrl+click.\n\n### Fixed\n\n- Fix crash caused by `rc.xml` `<touch>` options being specified as\n  elements rather than attributes. [#2412]\n- Fix `ShowMenu` action position with x/y arguments in multi-monitor setup.\n  [#2409]\n- Block privileged protocols for sandboxed clients [#2398]\n- Fix incorrect focus behaviour when switching between workspaces with\n  omnipresent windows open [#2335]\n- Fall back to loading icon based on app-id when `Icon` defined in .desktop file\n  can not be loaded [#2361]\n- Fix regression introduced with `0.8.1` to allow negative values for theme\n  option `menu.overlap` [#2356]\n- Ensure output is usable before setting adaptive sync [#2337] [#2338]\n- Fix `menu.title.text.justify: right` not working [#2336]\n- Keep focus on omnipresent windows when switching workspaces [#2329]\n- Skip painting output when session is not active. @enometh @Madhu [#2249]\n- Ignore variable assignments > 1 KiB in environment files to guard against\n  recursive constructs like FOO=$FOO:bar which would grow on each reconfigure.\n  [#2325]\n- Improve support for non-compliant .desktop files by matching partial strings\n  to handle for example app-id=\"gimp-2.10\" with file \"gimp.desktop\". @spl237\n  [#2266]\n- Correctly center menu opened with `<position {x,y}=\"center\">` @tokyo4j [#2319]\n- Allow pointer speed of -1.0. @spl237 [#2321]\n- Fix off-by-one bug in `buf_add_char()` [#2313]\n- Fix menu separator-line padding regression introduced in `0.8.1`. @domo141\n  [#2291]\n- Avoid permanent disabling of tearing due to rejected commits caused by the\n  cursor plane not allowing async page flips which causes tearing page flips\n  to be rejected if the cursor is moved. @RicArch97 [#2295]\n- Use `MenuHeader` font height in separators with labels. @domo141 [#2276]\n\n### Changed\n\n- Set xwaylandPersistence default value to `yes` when compiled with wlroots\n  <0.18.2. This prevents a bug which has the potential to crash the compositor\n  when performing a drag-and-drop action at the same time as the XWayland server\n  is shutting down. [#2371] [#2414] [#2420]\n- Set default window placement policy to `cascade` instead of `center` [#2345]\n\n```xml\n<placement>\n  <policy>cascade</policy>\n</placement>\n```\n\n- Set default values of theme option `window.*.border.color` to `#aaaaaa`. This\n  makes the colors of window borders and titlebar different, but will let\n  `menu.border.color` inherit `window.active.border.color` just like Openbox\n  does, without making the menu borders around a selected menu item invisible.\n  [#2376]\n- Invert the y-offset of submenus applied by `menu.overlap.y` to (i) follow\n  Openbox's behavior and (ii) behave as already described in our own\n  documentation. [#2380]\n\n## [0.8.1]\n\nThe most noteworthy additions in this release are:\n\n1. Titlebar window icons and layout configuration\n2. Support for the cosmic-workspace protocol and the openbox inspired\n   client-list-combined-menu for a better user experience with workspaces.\n\nNotes to package maintainers:\n\n- The SSD titlebar window icon support requires [libsfdo] to be added as a\n  (build and run-time) dependency or statically linked. If this is not wanted,\n  add `-Dicon=disabled` to the `meson setup` command in the build script for the\n  next release.\n- PRs [#1716] and [#2205] add labwc xdg-portal configuration, modify\n  `labwc.desktop` and amend `XDG_CURRENT_DESKTOP` which should enable better\n  out-of-the-box support for xdg-desktop-portal, but if you already ship a\n  custom setup for this or have different requirements, please review this\n  change.\n\n[libsfdo]: https://gitlab.freedesktop.org/vyivel/libsfdo\n\n### Added\n\n- Support dmabuf feedback [#2234] [#1278]\n- Add initial implementation of cosmic-workspace-unstable-v1 [#2030]\n- Optionally support SSD titlebar window icons. When an icon file is not found\n  or could not be loaded, the window menu icon is shown as before. The icon\n  theme can be selected with `<theme><icon>` [#2128]\n- Add actions `ToggleSnapToEdge` and `ToggleSnapToRegion`. These behave like\n  `SnapToEdge` and `SnapToRegion`, except that they untile the window when\n  already being tiled to the given region or direction.\n  Written-by: @jp7677 and @tokyo4j [#2154]\n- Add action `UnSnap`. This behaves like `ToggleSnapToEdge/Region` but\n  unconditionally. Written-by: @jp7677 and @tokyo4j [#2154]\n- Handle xdg-shell `show_window_menu` requests [#2167]\n- Support the openbox style menus listed below. Written-by: @droc12345\n  1. `client-list-combined-menu` shows windows across all workspaces. This can\n     be used with a mouse/key bind using:\n     `<action name=\"ShowMenu\" menu=\"client-list-combined-menu\"/>` [#2101]\n  2. `client-send-to` shows all workspaces that the current window can be sent\n     to. This can additional be used within a client menu using:\n     `<menu id=\"client-send-to-menu\" label=\"Send to Workspace...\" />` [#2152]\n- Add theme option for titlebar padding and button spacing [#2189]\n\n```\nwindow.button.height: 26\nwindow.titlebar.padding.width: 0\nwindow.titlebar.padding.height: 0\nwindow.button.spacing: 0\n```\n\n- Set titlebar height based on the maximum height of any of the objects within\n  it, rather than just taking the font height into account [#2152]\n- Add theme option for setting button hover effect corner radius [#2127] [#2231]\n\n```\nwindow.button.hover.bg.corner-radius: 0\n```\n\n- Add position arguments for menus. Written-by: @droc12345 [#2102]\n\n```xml\n<action name=\"ShowMenu\">\n  <menu>root-menu</menu>\n  <position>\n    <x>0</x>\n    <y>0</y>\n  </position>\n</action>\n```\n\n- Allow interactive window movement when horizontally or vertically maximized\n  and add associated config option `<resistance><unMaximizeThreshold>` [#2052]\n- Add optional Shade (shade.xbm) and AllDesktops (desk.xbm) buttons and theme\n  options:\n\n```\nwindow.active.button.desk.unpressed.image.color\nwindow.inactive.button.desk.unpressed.image.color\nwindow.active.button.shade.unpressed.image.color\nwindow.inactive.button.shade.unpressed.image.color\n```\n\n- Make action `FocusOutput` behave like `MoveToOutput` by adding direction and\n  wrap arguments. Written-by: @orfeasxyz [#2100]\n- Add config option for titlebar layout. Written-by: @xi [#2088] [#2150]\n\n```xml\n<titlebar>\n  <layout>icon:iconify,max,close</layout>\n  <showTitle>yes|no</showTitle>\n</titlebar>\n```\n\n- Add `Oblique` option to `<theme><font><style>`. Written-by: @droc12345 [#2097]\n- Support menu titles defined by `<separator label=\"\">`.\n- Add the theme option `menu.title.bg.color: #589bda`\n- Add theme options `menu.title.text.color` and `menu.title.text.justify`.\n  Written-by: @droc12345 [#2097]\n- Add font place MenuHeader: `<font place=\"MenuHeader\">`.\n  Written-by: @droc12345 [#2097]\n- Add actions `EnableTabletMouseEmulation` and `DisableTabletMouseEmulation`.\n  Written-by: @jp7677 [#2091]\n- Set 'labwc' as `app_id` and `title` for nested outputs [#2055]\n\n### Fixed\n\n- Fix rare NULL-dereference when using cursor constraints [#2250]\n- Fix issue where tablet/touchscreen button events sometimes do not take effect\n  on applications immediately [#2244]\n- Fix button release events sometimes not being sent [#2226]\n- Fix xdg-shell popups appearing on wrong output with some Qt themes. [#2224]\n- Take into account xdg-shell minimum window size for resizing. This is\n  relevant when using `<resize drawContents=\"no\">` [#2221]\n- Fix rounded hover effect on titlebar buttons when the window is tiled or\n  maximized [#2207]\n- Fix button scaling issue [#2225]\n- Add portals.conf file, amend `labwc.desktop` and modify `XDG_CURRENT_DESKTOP`\n  for better out-of-the-box xdg-desktop-portal support. This helps with for\n  example screensharing. Written-by: @rcalixte @jp7677 [#1503] [#1716]\n- Disable the Inhibit D-BUS interface in xdg-portals configuration to fix an\n  issue with some clients (like Firefox) ignoring the idle-inhibit protocol.\n  Written-by: @jp7677 [#2205]\n- Prevent `Drag` mousebinds from running without button press [#2196]\n- Handle slow un-maximize with empty natural geometry better [#2191]\n- Fix de-synced SSD when shrinking Thunderbird xdg-shell window [#2190]\n- Fix xdg-shell out-of-sync configure state when clients time out\n  Written-by: @cillian64 [#2174]\n- Fix small flicker when client initially submits a window size smaller than the\n  minimum value [#2166]\n- Allow server-side decoration to be smaller than minimal size by hiding\n  buttons [#2116]\n- Fix incorrect cursor shape on titlebar corner without buttons [#2105]\n- Fix delayed pipe menu response on item destroy [#2094]\n- Destroy xdg-shell foreign toplevel handle on unmap [#2075]\n- Sync XWayland foreign-toplevel and associated outputs on re-map [#2075]\n\n### Changed\n\n- Theme options `padding.height` and `titlebar.height` have been removed to\n  minimize breaking changes with the visual appearance of the titlebar when\n  using openbox themes. As a result, and depending on your configuration,\n  the titlebar height may change by a small number of pixels [#2189]\n- Move input config `<scrollFactor>` to `<libinput>` section to allow\n  per-device configuration of scroll factor (e.g. setting different scroll\n  factors for mice and touchpads). [#2057]\n\n## [0.8.0]\n\nThe main focus in this release has been to port labwc to wlroots 0.18 and to\ngrind out associated regressions. Nonetheless, it contains a few non-related\nadditions and fixes as described below.\n\nThere are a couple of regression warnings when using wlroots 0.18:\n\n1. There appears to be an issue with increased commit failures, particularly\n   with intel drivers. If this turns out to be an issue for anyone please try\n   running with `WLR_DRM_NO_ATOMIC=1` or run the labwc v0.7 branch or its latest\n   release until this is resolved.\n2. Fullscreen VRR is broken but should be fixed once wlroots 0.18.1 is released.\n   Again, if that is a problem we advise to stay with the v0.7 branch in the\n   short term until fixed. PR #2079\n\nA v0.7 branch has been created for bug fixes beyond `0.7.3` (built with wlroots\n`0.17`).\n\nA big thank you goes to @Consolatis for carefully crafting the commits to port\nacross to wlroots 0.18.0. Many thanks also to the other core devs @ahesford,\n@jlindgren90, @johanmalm and @tokyo4j for reviewing, merging as well as\ncontributing many patches with fixes and new features. And in this release we\nhave some great contributions from @jp7677, @kode54, @xi and @heroin-moose which\nhave been attributed with a 'Written-by' against each relevant log entry.\n\n### Added\n\n- Add options `fullscreen` and `fullscreenForced` for `<core><allowTearing>`\n  Written-by: @jp7677 & @Consolatis PR #1941\n- Optionally allow keybindings when session is locked, which for example can be\n  useful for volume settings. Written-by: @xi PR #2041\n\n```xml\n<keyboard><keybind key=\"\" allowWhenLocked=\"\">\n```\n\n- Add resistance when dragging tiled/maximized windows with config option\n  `<resistance><unSnapThreshold>`. PR #2009 #2056\n- Implement support for renderer loss recovery. Written-by: @kode54 PR #1997\n- Support xinitrc scripts to configure XWayland server on launch. PR #1963\n- Add theme option `window.button.width` to set window button size.\n  Written-by: @heroin-moose PR #1965\n- Add `cascade` placement policy. PR #1890\n\n```xml\n<placement>\n  <policy>cascade</policy>\n  <cascadeOffset x=\"40\" y=\"30\"/>\n</placement>\n```\n\n- Support relative tablet motion. Written-by: @jp7677 PR #1962\n\n```xml\n<tabletTool motion=\"absolute|relative\" relativeMotionSensitivity=\"1.0\"/>\n```\n\n### Fixed\n\n- Make tablet rotation follow output rotation. Written-by: @jp7677. PR #2060\n- Fix error when launching windowed Chromium. PR #2069\n- Fix empty `XKB_DEFAULT_LAYOUT` bug. PR #2061\n- Take into account CSD borders when unconstraining XDG popups. PR #2016\n- Choose xdg-popup output depending on xdg-positioner PR #2016\n- Fix wlroots-0.18 regression causing flicker with some layer-shell clients like\n  fuzzel on launch. PR #2021\n- Fix incorrect condition in server-side-deco logic PR #2020\n- Fix flicker of snapped windows in nested session. PR #2010\n- Fix tearing with atomic mode setting. Written-by: @kode54 PR #1996\n- Handle initially maximized and fullscreen xdg-shell windows better.\n  PRs #1956 and #2007\n- Set initial geometry of maximized and fullscreen XWayland windows in the\n  `map_request` handler to avoid visual glitches with some apps. PR #1529\n- Disable pango glyph position rounding to avoid text geometry jump around when\n  changing scale.\n\n### Changed\n\n- Make windows stay fullscreen when associated output is disconnected. PR #2040\n\n## [0.7.4]\n\n### Fixed\n\n- Make SSD borders respect snapped state on Reconfigure. PR #2003\n- Fix magnifier by disabling direct scanout when active. PR #1989\n- Fix crash triggered by pipemenu without parent `<menu>` element. PR #1988\n\n## [0.7.3]\n\nFollowing a couple of big releases, this one feels like more steady with lots of\nfocus on bug fixes and stability. In terms of new features the most noteworthy\nones include improved tablet support (by @jp7677), `Super_L` on-release keybinds\n(by @spl237 from the Raspberry Pi teams) and the screen magnifier which was a\njoint effort by @spl237 and @Consolatis.\n\n### Added\n\n- Add config option `<core><xwaylandPersistence>` to support keeping XWayland\n  alive even when no clients are connected. PR #1961\n- Support xdg-shell protocol v3 with popup repositioning. #1950\n  Also see https://gitlab.freedesktop.org/wlroots/wlroots/-/merge_requests/3514\n  which adds support on the wlroots side.\n- Add action `ToggleTabletMouseEmulation`. Written-by: jp7677 PR #1915\n- Implement `<resize><drawContents>`. With thanks to @tokyo4j PR #1863\n- Add `onRelease` option to `<keybind>` in support of binding `Super_L` to a\n  menu. Written-by: @spl237 PR #1888\n- Add initial support for `security-context-v1` (user configurable blocklists\n  are still missing). Written-by: @nesteroff PR #1817\n- Add support for `tablet-v2-manager`. Written-by: @jp7677 PR #1678 #1882\n- Add action `UnMaximize`. PR #1831\n- Support multiple IME popups. PR #1823\n- Add `All` context for mouse bindings which need to be handled irrespective of\n  the mouse pointer location. This enables Super+mouse-scroll to change\n  magnification. Written-by: @spl237 PR #1768\n- Add `SetDecorations` action. Written-by: @xi PR #1733\n- Add `policy` option to `AutoPlace` action. PR #1784\n- Add window type filter to If-actions. Written-by: @xi PR #1731\n- Add screen magnifier which can be controlled with the `ZoomIn`, `ZoomOut` and\n  `ToggleMagnify` actions. Written-by: @spl237 PR #1774\n\n### Fixed\n\n- When looking for menu.xml, go through all paths rather than just giving up\n  if not found in the first path searched. This makes it consistent with how\n  other config/theme files are handled. PR #1971\n- Fix memory leaks in theme.c and menu.c. PR #1971\n- Fix session-lock bugs related to keyboard focus. PR #1952\n  - Clear focused surface on lock\n  - Restore focused view on unlock\n- Fix memory leak in ssd/ssd-shadow.c PR #1954\n- Respect `menu.overlap.x` when using pipemenus. PR #1940\n- Do not try to restore windows to very small width/height on unmaximize.\n  This fixes a bug with Thonny (Python IDE made with Tk). PR #1938\n- Conditially set squared server-side decoration (SSD) corners when a view is\n  tiled. Written-by: @jp7677 PR #1926\n- Remember initial direction when starting window-cycling with `PreviousView`.\n  Also make the toggling of direction when shift is pressed relative to the\n  initial direction. For example if W-j is bound to PreviousWindow, subsequent\n  key presses will continue to cycle backwards unless shift is also pressed.\n  Written-by: @droc12345 PR #1919\n- Show dnd icon above layer-shell surfaces. PR #1936\n- Initialize locale after reading environment files so that client-menu items\n  and workspace names follow the env var `LANG` should that be set in\n  `~/.config/labwc/environment` (which is not recommended, but we prefer to\n  handle it properly if it is). PR #1927\n- Fix crash on `menu.xml` containing `<item>` without a parent `<menu>`.\n  PR #1907\n- Reset XWayland cursor image on cursor theme reload to avoid trying to read\n  destroyed pixel data. PR #1895\n- Prevent child views from opening outside of usable area. PR #1878\n- Fix IME popups issues (flicker when popup surface is initially mapped\n  and incorrectly showing multiple popups). PR #1872\n- Rate-limit cursor-driven resize events based on monitor's refresh rate. This\n  fixes the lag when resizing windows of some apps on XWayland, for example\n  Chromium and Steam. PR #1861\n- Session-lock: fix flashing & update cursor shape. PR #1858\n- Remove tearing-controller listeners on destroy. PR #1853\n- Handle invalid `ForEach` and `If` action cofigs. PR #1838\n- Delay startup of applications until event loop is ready. This avoids race\n  conditions when using autostart scripts that trigger a labwc SIGHUP. #1588\n- With `SendToDesktop` action follow=no option, ensure the topmost window is\n  focused. #1800\n- Prevent XWayland from using incorrect keymap. #1816\n- Allow keybinds containing the hyphen key to be defined with `-`.\n  Written-by: @toast #1811\n- Show/hide `top` layer more smartly. Before this commit, `top` layers were\n  hidden whenever there was a fullscreen window in the corresponding output.\n  With this commit, `top` layers are hidden only when there is a fullscreen\n  window without other windows above it in the corresponding output.\n\n### Changed\n\n- Remove subprojects/seatd.wrap as no longer needed\n- Action `MoveToCursor` is deprecated in favour of:\n  `<action name=\"AutoPlace\" policy=\"cursor\"/>`.\n\n## [0.7.2]\n\nThis release shaped up to be the second in a row that is larger than usual in\nterms of both fixes and new features. Significant additions include\ninput-methods, pipemenus, snap-to-edge overlays and optionally drop-shadows.\n\nAs usual, most of the commits are by the core devs: @ahesford, @Consolatis,\n@jlindgren90, @johanmalm and @tokyo4j, but we also have many great\ncontributions from others as noted in the log.\n\n### Added\n\n- Add `<menu><ignoreButtonReleasePeriod>` to prevent clicks with small movements\n  from inadvertantly closing a menu or selecting a menu item. This is the\n  equivalent of `<menu><hideDelay>` on Openbox. #1760\n- Support drop-shadows (disabled by default) for windows using server-side\n  decorations. Written-by: @cillian64\n\n```xml\n<theme>\n  <dropShadows>yes|no</dropShadows>\n</theme>\n```\n\n```\nwindow.active.shadow.size: 60\nwindow.inactive.shadow.size: 40\nwindow.active.shadow.color: #00000060\nwindow.inactive.shadow.color: #00000040\n```\n\n- Add window-rule `ignoreConfigureRequest` to ignore X11 client-side\n  configure requests (positioning and resizing). #1446\n- Support window-rules based on window type: `<windowRule type=\"\">`, where\n  type can be for example `NET_WM_WINDOW_TYPE_DESKTOP` for an XWayland\n  window. Written-by: @xi @txgk\n- Add `none` branch to the `ForEach` action. Written-by: @nicolas3121\n  #1298\n\n```xml\n<action name=\"ForEach\">\n  <query identifier=\"foo\"/>\n  <then>\n    <!-- carry out some action on match -->\n  </then>\n  <none>\n    <!-- carry out some action if there were no matches at all -->\n  </none>\n</action>\n```\n\n- Add -S|--session `<command>` option to start `<command>` on startup and\n  to terminate the compositor when <command> exits. This is useful for\n  session management as it allows the session client (for example\n  `lxqt-session`) to terminate labwc when exiting itself.\n- In theme setting color definitions, support inline alpha encoding like\n  `#aabbccff`\n- Add window-switcher custom field inspired by printf formatting. #1670\n  Written-by: @droc12345 and @Consolatis\n\n```xml\n<windowSwitcher>\n  <fields>\n    <field content=\"custom\" format=\"foobar %b %3s %-10o %-20W %-10i%t\" width=\"100%\" />\n  </fields>\n</windowSwitcher>\n```\n\n- Support defining window-switcher width as a percentage of output\n  (display) width. Written-by: @droc12345\n\n```\nosd.window-switcher.width: 75%\n```\n\n- Support Openbox compatible pipe-menus. See labwc-menu(5) for usage.\n- Add snap-to-edge overlay. Written-by: @tokyo4j. PR #1652 #1702\n  This includes the following new config and theme settings:\n\n```xml\n<snapping>\n  <overlay>\n    <enabled>yes|no</enabled>\n    <delay inner=\"500\" outer=\"500\"/>\n  </overlay>\n</snapping>\n```\n\n```\nsnapping.overlay.[region|edge].bg.enabled: yes|no\nsnapping.overlay.[region|edge].border.enabled: yes|no\nsnapping.overlay.[region|edge].bg.color: #8080b380\nsnapping.overlay.[region|edge].border.width: 1\nsnapping.overlay.[region|edge].border.color: #ffffff,#000000,#ffffff\n```\n\n- Add theme settings listed below for window-switcher preview border.\n  Written-by: @tokyo4j\n\n```\nosd.window-switcher.preview.border.width: 2\nosd.window-switcher.preview.border.color: #ffffff,#00a2ff,#ffffff\n```\n\n- Support libinput config option for calibration matrices.\n  `<libinput><device><calibrationMatrix>`. Written-by: @SnowNF\n- Add new window-switcher field content types `workspace`, `state`,\n  `type_short` and `output`. Written-by: @droc12345 PR #1623\n\n```xml\n<windowSwitcher allWorkspaces=\"yes\">\n  <fields>\n    <field content=\"workspace\" width=\"5%\" />\n    <field content=\"state\" width=\"3%\" />\n    <field content=\"type_short\" width=\"3%\" />\n    <field content=\"output\" width=\"9%\" />\n    <field content=\"identifier\" width=\"30%\" />\n    <field content=\"title\" width=\"50%\" />\n  </fields>\n</windowSwitcher>\n```\n\n- Support input methods (or input method editors, commonly abbreviated\n  IMEs) like Fcitx5, using protocols text-input-v3 and input-method-v2.\n  This includes IME popups. Written-by: @tokyo4j\n- Add `atCursor` attribute to action `ShowMenu` so that a window's\n  \"client-menu\" could optionally be launched at the pointer using a\n  keybind as follows:\n\n```xml\n<action name=\"ShowMenu\" menu=\"value\" atCursor=\"yes\" />\n```\n\n- Support workspace-prefix (`<desktops><prefix>`) for workspace-switcher\n  onscreen display when naming workspaces by digits, for example 1, 2, 3\n  Written-by: @droc12345\n- Process all `*.env` files in an `environment.d` directory alongside and\n  in the same way as each potential `environment` file.\n- Allow empty variables in `environment` files. In other words, respond to\n  variable declarations of the form \"VARIABLE=\", with no following value,\n  by setting the corresponding environment variable as an empty string.\n- Add optional headless fallback output that is automatically created when\n  no other output exists.  Enable this by setting the environment variable\n  `LABWC_FALLBACK_OUTPUT` to the desired output name.  The feature\n  benefits applications like wayvnc the most by ensuring that there is\n  always an output available to connect to. #1618\n  Co-Authored-By: Simon Long <simon@raspberrypi.com>\n- Optionally show windows on all workspaces in window-switcher.\n\n```xml\n<windowSwitcher allWorkspaces=\"yes\">\n```\n\n- Handle touch on headerbar using cursor emulate events. Issue #1550\n  Written-by: @spl237\n- Updated dbus activation environment with more environment variables\n  (`XCURSOR_SIZE`, `XCURSOR_THEME`, `XDG_SESSION_TYPE`, `LABWC_PID`)\n  Written-by: @winerysearch  Issue #694\n- Run `shutdown` script on exit (equivalent to `autostart` on startup)\n- Add `wrap` argument to action `MoveToOutput`. Wrap is disabled by\n  default to keep the user interface consistent. Example usage:\n\n```xml\n<action name=\"MoveToOutput\" direction=\"right\" wrap=\"yes\" />\n```\n\n### Fixed\n\n- Prevent Chromium from crashing when started after a virtual keyboard is\n  destroyed. #1789\n- Fix top-layer not showing when there is a minimized full-screen window\n  Written-by: @fberg\n- Prevent the following whilst window-switcher cycling (#1640):\n  - Cursor actions on the window previews\n  - Request-xdg-activation\n  - Foreign toplevel request-activate\n  - XWayland request-activate\n- Prevent shaded XWayland windows from getting cursor events. #1753\n- Fix menu-parser use-after-free bug. #1780\n- Update top layer visibility on map to fix bug with Steam's Big Picture Mode\n  window which requests fullscreen before mapping. #1763\n- Do not update server-side-decoration if window is too small. #1762\n- Fix crash on `Kill` action with XWayland windows. #1739\n- Update workspaces on `--reconfigure`. Written-by: @tokyo4j\n- Notify idle manager when emulating cursor movement.\n- Fix GrowToEdge/ShrinkToEdge action bug caused by clients ignoring the\n  requested size, for example a terminal honouring size-hints.\n- Fix `assert()` on VT switch. Issue #1667\n- Ensure titlebar has consistent look when using transparency. #1684\n- Fix dnd bug where dnd does not finish properly on cursor-button-release\n  if there is no surface under the cursor such as on the desktop when no\n  background client is running. #1673\n- Send cursor-button release event to CSD client before finishing window\n  dragging to avoid a bug whereby the release event is incorrectly sent to\n  a layer-shell client at the end of a drag.\n- Validate double-click against SSD part type because clicks on\n  different parts of a client in quick succession should not be\n  interpreted as a double click. #1657\n- Fix bug that region overlay is not shown when a modifier key is re-\n  pressed.\n- Fix workspace-switcher on-screen-display positioning of text using\n  right-to-left (RTL) locales. Written-by: @micko01 Issue #1633\n- Unconstrain xdg-shell popups to usable area (rather than full output) so\n  that popups do not cover layer-shell clients such as panels.\n  Written-by: @tokyo4j\n- Exclude unfocusable XWayland windows (for example notifications and\n  floating toolbars) from being processed by wlr-foreign-toplevel protocol\n  as these windows should not be shown in taskbars/docks/etc.\n- Render text buffers with opaque backgrounds because subpixel text\n  rendering over a transparent background does not work properly with\n  cairo/pango. PR #1631 issue #1684\n- Fallback on layout 'us' if a keymap cannot be created for the provided\n  `XKB_DEFAULT_LAYOUT`. If keymap still cannot be created, exit with a\n  helpful message instead of a segv crash.\n- Reload cursor theme and size on reconfigure. This gives instant feedback, but\n  only works for server side cursors or clients using the cursor-shape protocol.\n  Written-by: @spl237 and @Consolatis. #1587 #1619\n- Fix a number of surface-focus related short-comings:\n  - Handle cursor-button-press on layer-shell subsurfaces and fix bug in\n    `get_cursor_context()` which resulted in layer-surfaces not being\n    detected correctly. PR #1594\n  - Overhaul the logic for giving keyboard focus to layer-shell clients.\n    PR #1599 Issue #1653\n- Fix move/resize bug manifesting itself on touchpad taps with\n  `<tapAndDrag>` disabled because libinput sends button press & release\n  signals so quickly that `interactive_finish()` is never called.\n  Written-by: @tokyo4j\n- Include always-on-top windows in window-switcher.\n- Make resize flicker free again when running labwc nested (it was a\n  regression caused by wlroots 0.17).\n- Clean up dbus and systemd activation environments on exit\n- Fix `view_get_adjacent_output()` bug resulting in often returning an\n  incorrect output when using more than two outputs. Issue #1582\n\n### Changed\n\n- Support press-move-release when interacting with the labwc root-menu. #1750\n- In theme settings, mark color definitions in the format `#rrggbb aaa` as\n  deprecated (still supported, but will removed in some future release) in\n  favor of the more commonly used `#rrggbbaa`.\n- If your `rc.xml` contains a keybind to show menu \"client-menu\", it will\n  be launched at pointer rather than the top-left part of the window. To\n  keep the old behaviour, redefine it as follows:\n\n```xml\n<keybind key=\"A-Space\">\n  <action name=\"ShowMenu\" menu=\"client-menu\" atCursor=\"No\"/>\n</keybind>\n```\n\n- Change action `MoveToOutput` argument 'name' to 'output' (because 'name'\n  is already used by the action itself).  Issue #1589\n\n```xml\n<action name=\"MoveToOutput\" output=\"HDMI-A-1\"/>\n```\n\n- Do not deactivate window when giving keyboard focus to a non-view\n  surface such as a popup or layer-shell surface.  This matches Openbox\n  behavior.\n- Treat Globally Active XWayland windows according to type to fix focus\n  issues with IntelliJ IDEA and JDownloader 2. Issues: #1139 #1341\n  Also revert f6e3527 which allowed re-focus between Globally Active\n  XWayland windows of the same PID.\n- Only update dbus and systemd activation environments when running on\n  the DRM backend or by explicit request using environment variable\n  `LABWC_UPDATE_ACTIVATION_ENV`.\n\n## [0.7.1]\n\n### Added\n\n- Support libinput option sendEventsMode to allow enabling/disabling devices.\n  Co-Authored-By: @Sachin-Bhat\n\n```xml\n<libinput>\n  <device>\n    <sendEventsMode>yes|no|disabledOnExternalMouse</sendEventsMode>\n  </device>\n</libinput>\n```\n\n- Add click method libinput option. Written-by: @datMaffin\n\n```xml\n<libinput>\n  <device>\n    <clickMethod>none|buttonAreas|clickfinger</clickMethod>\n  </device>\n</libinput>\n```\n\n- Add `data/labwc.svg` & `data/labwc-symbolic.svg`, and specify icon name\n  in labwc.desktop to enable Display Managers to show an icons for labwc.\n- Expose output configuration test to clients. For example, this enables\n  `wlr-randr --dryrun`\n- Add window-edge resistance for interactive moves/resizes and support negative\n  strengths to indicate attractive snapping. Written-by: @ahesford\n\n```xml\n<resistance>\n  <screenEdgeStrength>-20</screenEdgeStrength>\n  <windowEdgeStrength>-20</windowEdgeStrength>\n</resistance>\n```\n\n- Set keyboard layout on reconfigure. Issue #1407\n- Reset keyboard-layout group (index) for each window on reconfigure if\n  the keymap has changed.\n- Support merging multiple config files with the --merge-config command\n  line option. Issue #1406\n- Add config option to map touch events to a named output (display).\n  Optionally, make this only apply to specific named devices.\n  Written-by: @jp7677\n\n```xml\n<touch mapToOutput=\"\"/>\n<touch deviceName=\"\" mapToOutput=\"\"/>\n```\n\n- Add tablet support including:\n  - Mapping of tablet to output (display)\n  - Emulation of cursor movement and button press/release\n  - Configuration of area and rotation\n  Written-by: @jp7677 @Consolatis\n\n```xml\n<tablet mapToOutput=\"HDMI-A-1\" rotate=\"90\">\n  <area top=\"0.0\" left=\"0.0\" width=\"0.0\" height=\"0.0\" />\n  <map button=\"Tip\" to=\"Left\" />\n  <map button=\"Stylus\" to=\"Right\" />\n  <map button=\"Stylus2\" to=\"Middle\" />\n</tablet>\n```\n\n- Add tearing support. #1390. Written-by: @Ph42oN @ahesford\n- Add configuration support for mouse buttons `Side`, `Extra`, `Forward`,\n  `Back` and `Task`. Written-by: @jp7677\n- config: allow `<libinput><device>` without category attribute to define a\n  `default` profile because it is more user-friendly and intuitive.\n- Add a configuration option to enable adaptive sync only when an application\n  is in fullscreen mode. Written-by: @Ph42oN\n- Add `touchpad` libinput device type to increase configuration flexibility,\n  for example allowing `naturalScroll` on touchpads, but not on regular pointer\n  devices such as mice. Written-by: @jmbaur\n- Add actions:\n  - `AutoPlace` (by @ahesford)\n  - `MoveToOutput`, `FitToOutput` (by @jp7677)\n  - `Shade`, `Unshade`, `ToggleShade` (by @ahesford @Consolatis)\n- Add config option `<placement><policy>` with supported values `center`,\n  `cursor` and `automatic`. The latter minimizes overlap with other windows\n  already on screen and is similar to Openbox's smart window placement.\n  The placement policies honour `<core><gap>`.\n  Written-by: @ahesford #1312\n\n```xml\n<placement>\n  <policy>center|automatic|cursor</policy>\n</placement>\n```\n\n### Fixed\n\n- Delay popup-unconstrain until after first commit in response to a changed\n  wlroots 0.17 interface and to get rid of the error message below. Issue #1372\n\n    [types/xdg_shell/wlr_xdg_surface.c:169] A configure is scheduled for an uninitialized xdg_surface\n\n- Notify clients about configuration errors when changing output settings.\n  Issue #1528.\n- Fix output configuration bug causing compositor crash when refresh rate is\n  zero. Issue #1458\n- Fix disappearing cursor bug on view destruction. Issue #1393\n- Use used specified config-file (using -c command line option) on\n  reconfigure.\n- Assign outputs to new views on surface creation instead of mapping, and\n  notify the client of the preferred output scale when doing so. This fixes an\n  issue with foot: https://codeberg.org/dnkl/foot/issues/1579\n  Written-by: @ahesford\n- Cancel key repeat on vt change to fix crash on VT change on FreeBSD.\n  Issue #1424\n- Fix crash when a minimized fullscreen window closes. Written-by: @bi4k8\n- Execute menu actions after closing menus so that menu entries can issue\n  `wtype` commands to the surface with keyboard-focus. Issue #1366\n- Try to honor original window geometry on layout changes.\n- Fix virtual keyboard bug experienced with `wlrctl keyboard type xyz`. Do not\n  process virtual keyboard keycodes (just the keysyms). Issue #1367\n- Sync xdg-shell client `view->pending` when applying geometry to fix issue\n  caused by applications choosing not respond to pending resize requests either\n  by ignoring them or substituting alternative sizes (for example, when mpv\n  constrains resizes to keep its aspect ratio fixed). Written-by: @ahesford\n\n### Changed\n\n- Make `MoveToCursor` honour `<core><gap>`. Issue #1494\n- Add `Roll Up/Down` client-menu entry for `ToggleShade`\n- When a Wayland-native window is snapped to a screen edges or user-defined\n  region, labwc will notify the application that it is \"tiled\", allowing the\n  application to better adapt its rendering to constrained layouts. Windows\n  with client-side decorations may respond to these notices by squaring off\n  corners and, in some cases, disabling resize abilities. This can be disabled\n  with:\n\n```xml\n<snapping>\n  <notifyClient>never</notifyClient>\n</snapping>\n```\n\n  or limited to only edge-snapped or only region-snapped windows. See the\n  labwc-config(5) manual page for more information.\n\n- When a window is dragged from a snapped position (either a screen edge or a\n  user-defined region), the snapped state is now discarded as soon as the\n  dragging begins. This means that dragging from a snapped position to a\n  maximized state (with the `topMaximize` option enabled) and then\n  un-maximizing the window will restore the window to its size and position\n  *before* it was snapped. In previous releases, un-maximizing would restore\n  the window to its snapped state. To preserve the snapped state of a window\n  when maximized, use the Maximize window button or the `ToggleMaximize`\n  action.\n\n- The new windowEdgeStrength setting makes windows resist interactive moves and\n  resizes across the edges of other windows. This can be disabled with:\n\n```xml\n<resistance>\n  <windowEdgeStrength>0</windowEdgeStrength>\n</resistance>\n```\n\n- Run menu actions on button release instead of press.\n- Constrain window size to that of usable area when an application is started.\n  Issue #1399\n- Support showing the full `app_id` in the window switcher. Users with a custom\n  `windowSwitcher` configuration should use the `trimmed_identifier` field\n  label to preserve existing behavior; the `identifier` field now refers to the\n  full `app_id`. Consult the labwc-config(5) manual page for more details.\n  Issue #1309\n\n## [0.7.0] - 2023-12-22\n\nThe main effort in this release has gone into porting labwc to wlroots 0.17\nand tidying up regressions. Nonetheless, it contains a significant number of\nadditions and fixes as described below.\n\nShould bug fixes be required against `0.6.6` (built with wlroots `0.16`), a\n`0.6` branch will be created.\n\n### Added\n\n- Support titlebar hover icons. Written-by: @spl237\n- Add theme options osd.workspace-switcher.boxes.{width,height}\n  Written-by: @kyak\n- Add actions `VirtualOutputAdd` and `VirtualOutputRemove` to control virtual\n  outputs. Written-by: @kyak (#1287)\n- Teach MoveToEdge to move windows to adjacent outputs.\n  Written-by: @ahesford\n- Implement `<font place=\"InactiveWindow\">`. Written-by: @ludg1e (#1292)\n- Implement cursor-shape-v1 protocol to allow Wayland clients to request a\n  buffer for a cursor shape from a compositor. Written-by: @heroin-moose\n- Implement fractional-scale-v1 protocol to allow Wayland clients to properly\n  scale on outputs with fractional scale factor. Written-by: @heroin-moose\n- Add ResizeTo action (#1261)\n- Allow going backwards in window-switcher OSD by using arrow-up or arrow-left.\n  Written-by: @jp7677\n- Add `ToggleOmnipresent` action and add an \"Always on Visible Workspace\" entry\n  for it in the client-menu under the Workspaces submenu. Written-by: @bnason\n- Account for space taken up by XWayland clients with `_NET_WM_STRUT_PARTIAL`\n  property in the `usable_area` calculation. This increases inter-operability\n  with X11 desktop components.\n- Set XWayland's `_NET_WORKAREA` property based on usable area. XWayland\n  clients use the `_NET_WORKAREA` root window property to determine how much of\n  the screen is not covered by panels/docks. The property is used for example\n  by Qt to determine areas of the screen that popup menus should not overlap.\n\n### Fixed\n\n- Fix xwayland.c null pointer dereference causing crash with JetBrains CLion.\n  (#1352)\n- Fix issue with XWayland surfaces completely offscreen not generating commit\n  events and therefore preventing them from moving onscreen.\n- Do not de-active windows when layer-shell client takes keyboard focus, to\n  fix sfwbar minimize action. (#1342)\n- Move layer-shell popups from the background layer to the top layer to render\n  them above normal windows. Previously this was only done for the bottom\n  layer. In support of Raspberry Pi's `pcmanfm --desktop`. (#1293)\n- Calculate `usable_area` before positioning clients to ensure it is correct\n  before non exclusive-zone layer-shell clients are positioned or resized.\n  (#1285)\n- Prevent overriding XWayland maximized/fullscreen/tiled geometry to fix an\n  issue where some XWayland views (example: xfce4-terminal) do not end up with\n  exactly the correct geometry when tiled.\n\n### Changed\n\n- Treat XWayland panel windows as if fixedPosition rule is set\n- Use the GTK3 notebook header color as the default active title color\n  (small change from `#dddad6` to `#e1dedb`). Written-by: @dimkr\n\n## [0.6.6] - 2023-11-25\n\nWe do not normally call out contributions by core devs in the changelog,\nbut a special thanks goes to @jlindgren90 in this release for lots of work\nrelating to surface focus and keyboard issues, amongst others.\n\n### Added\n\n- Add `fixedPosition` window-rule property to avoid re-positioning windows\n  on reserved-output-space changes (determined by *<margin>* settings or\n  exclusive layer-shell clients) and to disallow interactive move or\n  resize, for example by alt+press.\n- Add `Unfocus` action to enable unfocusing windows on desktop click.\n  Issue: #1230\n- Add config option `<keyboard layoutScope=\"window\">` to use per-window\n  keyboard layout. Issue #1076\n- Support separate horizontal and vertical maximize by adding a\n  `direction` option to actions Maximize and ToggleMaximize.\n- Add actions GrowToEdge and ShrinkToEdge. Written-by: @digint\n- Add `snapWindows` option to MoveToEdge action. Written-by: @digint\n- Add MoveToCursor action. Written-by: @Arnaudv6\n- Add config option `<keyboard><numlock>` to enable Num Lock on startup.\n- Support Meta (M), Hyper (H), Mod1, Mod3, Mod4 and Mod5 modifiers in\n  keybind definitions. Fixes: #1061\n- Add themerc 'titlebar.height' option. Written-by: @mozlima\n- Add If and ForEach actions. Written-by: @consus\n- Allow referencing the current workspace in actions, for example:\n\n```xml\n<action name=\"SendToDesktop\" to=\"current\"/>\n```\n\n### Fixed\n\n- Do not reset XWayland window SSD on unminimize\n- Keep XWayland stacking order in sync when switching workspaces\n- Update top-layer visibility on workspace-switch in order to show\n  top-layer layer-shell clients correctly when there is a window in\n  fullscreen mode on another workspace. Issues: #1040 #1158\n- Make interactive window snapping with mouse more intuitive in\n  multi-output setups. Written-by: @tokyo4j\n- Try to handle missing `set_window_geometry` with Qt apps which\n  occasionally fail to call `set_window_geometry` after a configure\n  request, but correctly update the actual surface extent. Issue: #1194\n- Update XWayland stacking order when moving a window to the front/back.\n- Prevent switching workspaces for always-on-bottom windows. Fixes: #1170\n- Fix invisible cursor after wlopm --off && wlopm --on.\n- When a session is locked using 'session-lock' protocol, reconfigure for\n  output layout changes to avoid incorrect positioning\n- Account for window base size in resize indicator so that the displayed\n  size exactly matches the terminal grid, for example 80x25.\n- The following focus related issues:\n  - Allow re-focusing xwayland-unmanaged surfaces in response to pointer\n    action (click or movement if focus-follow-mouse is enabled). This\n    enables clients such as dmenu, rofi and jgmenu to regain\n    keyboard-focus if it was lost to another client.\n  - Fix code paths which could lead to a lock-screen losing focus, making\n    the session impossible to unlock or another surface to gain focus thus\n    breaching the session lock.\n  - Only focus topmost view on unmap if unmapped view was focused.\n  - Fix `xwayland_surface->data` bug relating to unmanaged surfaces.\n  - Fix layer subsurface focus bug to make waybar's minimize-raise work.\n    Fixes: #1131\n  - Ignore focus change to unmanaged surface belonging to same PID to fix\n    an issue with menus immediately closing in some X11 apps.\n  - Avoid focusing xwayland views that do not want focus using the ICCCM\n    \"Globally Active\" input model.\n  - Allow re-focus between \"globally active\" XWayland views of the same\n    PID.\n  - Assume that views that want decorations also want focus\n- The following keyboard and keybind related issues:\n  - Send pressed keys correctly when focusing new surface.\n  - Refactor handling of pressed/bound keys to send (to client) the\n    release events for any pressed key that was not part of a keybind,\n    typically because an unrelated non-modifier key was pressed before\n    and held during a keybind invocation. Fixes #1091 #1245\n  - Fix keyboard release event bug after session lock. Fixes: #1114\n- Raise xdg and xwayland sub-views correctly relative to other sub-views,\n  by letting the relative stacking order between them change.\n- Honor initially maximized requests for XWayland views via\n  `_NET_WM_STATE`.\n- For initially maximized XWayland views, set the stored natural geometry\n  to be output-centered.\n- Fix regions rounding error sometimes resulting in incorrect gaps\n  between regions.\n\n### Changed\n\n- Move floating windows in response to changes in reserved output space\n  (determined by *<margin>* settings or exclusive layer-shell clients such\n  as panels). Users with window-rules for panels and/or desktops should\n  add the `fixedPosition` property to avoid regression. Issue: #1235\n- Restore `SIGPIPE` default handler before exec. Fixes: #1209\n- With the introduction of directional Maximize, right-click on the\n  maximize button now toggles horizontal maximize, while middle-click\n  toggles vertical maximize.\n- Make MoveToEdge snap to the next window edge by default rather than\n  just the screen edge.\n- Comment out variables in `docs/environment` to avoid users using the\n  file without editing it and ending up with unwanted settings.\n  Fixes: #1011\n- Set `_JAVA_AWT_WM_NONREPARENTING=1` unless already set.\n- This release has seen significant refactoring and minor improvements\n  with respect to window and surface focus (particular thanks to\n  @jlindgren). This work has helped uncover and fix some hard-to-find\n  bugs. We don't believe that there are any regressions, but can't say\n  for sure.\n- Set Num Lock to enabled by default on start up\n- Allow switching VT when locked\n- Use `fnmatch()` for pattern matching instead of `g_pattern_match_simple()`\n  because it is a POSIX-compliant function which has a glob(7) manual page\n  for reference.\n- Title context is used instead of TitleBar for the default client-menu\n  on click. This means that if a button is right-clicked, the client-menu\n  will not appear anymore.\n- Always switch to the workspace containing the view being focused.\n\n## [0.6.5] - 2023-09-23\n\n### Added\n\n- Support png and svg titlebar buttons\n- Support on/off boolean configuration values (in addition to true, false,\n  yes and no). Written-by: @redtide\n- keybinds\n  - Allow non-english based keybinds\n  - Make keybind agnostic to keyboard layout. Fixes #1069\n  - Add optional layoutDependent argument to only trigger if the\n    configured key exists in the currently active keyboard layout.\n    `<keybind key=\"\" layoutDependent=\"\">`\n  - Fallback on raw keysyms (as if there were no pressed modifier) for\n    bindings which do not match against translated keysyms. This allows\n    users to define keybinds such as \"S-1\" rather than \"S-exclam\". It also\n    supports \"W-S-Tab\".  Fixes #163 #365 #992\n- window-rules: add ignoreFocusRequest property\n- config: support libinput `<tapAndDrag>` and `<dragLock>`.\n  Written-by: @tokyo4j\n- Handle keyboard input for menus. Fixes #1058\n- Server-side decoration:\n  - Make corners square on maximize\n  - Disable border on maximize. Fixes #1044\n- Add window resize indicator and associated `<resize><popupShow>` config\n  option\n- Add `<theme><keepBorder>` to give `ToggleDecoration` three states:\n  (1) disable titlebar; (2) disable whole SSD; and (3) enables whole SSD\n  When the keepBorder action is disabled, the old two-state behavior is\n  restored. Fixes #813\n- Minimize whole window hierarchy from top to bottom regardless of which\n  window requested the minimize. For example, if an 'About' or 'Open File'\n  dialog is minimized, its toplevel is minimized also, and vice versa.\n- Move window's stacking order with dialogs so that other window cannot be\n  positioned between them. Also position xdg popups above their parent\n  windows.This is consistent with Gtk3 and Qt5. Fixes #823\n\n### Fixed\n\n- Clarify in labwc-config(5) that keyboard modifiers can be used for\n  mousebinds. Fixes #1075\n- Ensure interactive move/resize ends correctly for CSD clients. Fixes #1053\n- Fix invalid value in `<accelProfile>` falling back as \"flat\"\n- Fix touch bug to avoid jumping when a touch point moves off of a surface\n  Written-by: @bi4k8\n- Prevent crash with theme setting `osd.window-switcher.width: 0`.\n  Fixes #1050\n- Cancel cursor popup grab on mouse-press outside client itself, for\n  example on any part of the server side decoration or the desktop.\n  Fixes #949\n- Prevent cursor press on layer-subsurface from cancelling popup grab\n  Fixes #1030\n- xwayland: fix client request-unmap bug relating to foreign-toplevel handle\n- xwayland: fix race condition resulting in map view without surface\n- Limit SSD corner radius to the height of the titlebar\n- Fix rounded-corner bug producing weird artifacts when very large border\n  thickness is used. Fixes #988\n- Ensure `string_prop()` handlers deal with destroying views. Fixes #1082\n- Fix SSD thickness calculation bug relating to titlebar. Fixes #1083\n- common/buf.c:\n  - Do not expand `$()` in `buf_expand_shell_variables()`\n  - Do not use memcpy for overlapping regions\n\n### Changed\n\n- Use `identifier` for window-switcher field rather than `app_id` to be\n  consistent with window rules.\n\n```xml\n<windowSwitcher>\n  <fields>\n    <field content=\"identifier\" width=\"25%\"/>\n  </fields>\n</windowSwithcer>\n```\n\n- Do not expand environment variables in `Exec` action `<command>`\n  argument (but still resolve tilde).\n\n## [0.6.4] - 2023-07-14\n\n### Added\n\n- Add support for `ext_idle_notify` protocol.\n- Window-switcher: #879 #969\n  - Set item-height based on font-height\n  - Add theme option:\n    - osd.window-switcher.width\n    - osd.window-switcher.padding\n    - osd.window-switcher.item.padding.x\n    - osd.window-switcher.item.padding.y\n    - osd.window-switcher.item.active.border.width\n- Actions:\n  - Add `MoveTo`, `ToggleAlwaysOnBottom`.\n  - Add `MoveRelative`, `ResizeRelative`. Written-by: @Ph42oN\n  - Add option `wrap` for `GoToDesktop` and `SendToDesktop`\n- Add config options `<margin>` to override usable area for panels/docks\n  which do not support layer-shell protocol.\n- Add `number` attribute to `<desktops>` to simplify configuration.\n  Written-by: @Sachin-Bhat\n- Window rules: #787 #933\n  - Add properties: `skipTaskbar` and `skipWindowSwitcher`\n  - Add criteria `title` and `matchOnce`\n\n### Fixed\n\n- Support XML CDATA for `<menu><item><action><command>` in order to provide\n  backward compatibility with obmenu-generator #972\n- Call `wlr_xwayland_surface_set_minimized()` on xwayland window (un)minimize\n  to fix blank surface after minimizing fullscreen Steam windows. #958\n- Fix focus at the end of drag-and-drop operation respecting\n  `<focus><followMouse>` if enabled. #939 #976\n- Render xdg-popups above always-on-top layer.\n- Do not render On-Screen-Displays on disabled outputs. #914\n\n### Changed\n\n- Make `ToggleKeybinds` applicable only to the window that has keyboard focus\n  when the action is executed.\n\n## [0.6.3] - 2023-05-08\n\n### Added\n\n- Add `focus.followMouseRequiresMovement` to allow a stricter\n  focus-what-is-under-the-cursor configuration. #862\n\n- Support window-rules including properties and on-first-map actions.\n  Any actions in labwc-actions(5) can be used. Only 'serverDecoration'\n  has been added as a property so far. Example config:\n\n```xml\n<windowRules>\n  <windowRule identifier=\"some-application\">\n    <action name=\"Maximize\"/>\n  </windowRule>\n  <windowRule identifier=\"foo*\" serverDecoration=\"yes|no\"/>\n</windowRules>\n```\n\n- Support configuration of window switcher field definitions.\n  Issues #852 #855 #879\n\n```xml\n<windowSwitcher show=\"yes\" preview=\"yes\" outlines=\"yes\">\n  <fields>\n    <field content=\"type\" width=\"25%\" />\n    <field content=\"app_id\" width=\"25%\" />\n    <field content=\"title\" width=\"50%\" />\n  </fields>\n</windowSwitcher>\n```\n\n- Add actions:\n  - 'Lower' Written-by: @jech\n  - 'Maximize'\n- Support ext-session-lock protocol. Helped-by: @heroin-moose\n- Handle XWayland unmanaged surface requests for 'activate' and\n  'override-redirect'. Fixes: #874\n- Add config support for scroll-factor. Fixes #846\n- Support 'follow' attribute for SendToDesktop action. Fixes #841\n\n### Fixed\n\n- Fix adaptive sync configuration. Helped-by: @heroin-moose #642\n- Ignore SIGPIPE to fix crash caused by Wayland clients requesting X11\n  clipboard but closing the read-fd before/while the X11 clipboard is\n  being written to. Fixes #890\n- Ellipsize on-screen-display text\n- Validate PID before activating XWayland unmanaged surfaces to check that\n  the surface trying to grab focus is actually a child of the topmost\n  mapped window.\n- Respect cursor constraint hints when cursor movement occurs after\n  unlocking the pointer. Written-by: @FuzzyQuills Fixes #872\n- Fix invisible cursor on startup and output loss/restore.\n  Reported-by: @Flrian Fixes #820\n- Fix decoration protocol implementation\n  - Respect earlier decoration negotiation results via the\n    xdg-decoration protocol. Previously setting `<decoration>` to\n    `client` would cause applications which prefer server side\n    decorations to not have any decorations at all.\n    Fixes #297 #831\n  - Handle results of kde-server-decoration negotiations\n- Fix `<focus><followMouse>` cursor glitches and issues with focus\n  switching via Alt-Tab. Issue #830 #849\n\n### Changed\n\n- Make `<windowSwitcher>` a toplevel element rather than a child of\n  `<core>`\n- Default to follow=\"true\" for SendToDesktop action as per Openbox 3.6\n  specification.\n\n## [0.6.2] - 2023-03-20\n\nThis release contains refactoring and simplification relating to\nview-output association and xdg/xwayland configure/map events.\n\nUnless otherwise stated all contributions are by the core-devs\n(@Consolatis, @jlindgren90 and @johanmalm).\n\n### Added\n\n- Add config option `<core><windowSwitcher show=\"no\" />` to hide\n  windowSwitcher (also known as On Screen Display) when switching windows.\n- Enable config option `<core><windowSwitcher preview=\"\" />` by default.\n- Add ToggleKeybinds action to disable/enable all keybinds (other than\n  ToggleKeybinds itself). This can be used to better control Virtual\n  Machines, VNC clients, nested compositors or similar. (#738 and #810)\n- Implement cursor constraints (Written-by: @Ph42oN) and lock confinement.\n- Support xdg-activation protocol to allow applications to activate\n  themselves (e.g. raise to the top and get keyboard focus) if they\n  provide a valid `xdg_activation token`.\n- Allow clearing key/mouse bindings by using the 'None' action. This\n  enables the use of `<default />` and then selectively removing keybinds.\n  For example the following could be used to allow using A-Left/Right with\n  Firefox.\n\n```xml\n<keyboard>\n  <default/>\n  <keybind key=\"A-Left\"><action name=\"None\" /></keybind>\n  <keybind key=\"A-Right\"><action name=\"None\" /></keybind>\n</keyboard>\n```\n\n### Fixed\n\n- Prevent cursor based region-snapping when starting a move with Alt-Left.\n  If region-snapping is wanted in this situation, just press the modifier\n  again. (#761)\n- Prevent rare crash due to layering move/resize/menu operations. (#817)\n- Fully reset config default values on Reconfigure if not set in config\n  file.\n- Fix visual glitch when resizing xfce4-terminal from left edge caused by\n  windows not accepting their request size exactly.\n- Fix issue with havoc not having a valid size on map.\n- Save `natural_geometry.x/y` with initially maximized xdg-view to fix an\n  issue where, if Thunar was started maximized, it would un-maximize to\n  the top-left corner rather than the center.\n\n### Changed\n\n- Change config option `<cycleView*>` to `<windowSwitcher>`.\n  Use `<core><windowSwitcher show=\"yes\" preview=\"no\" outlines=\"yes\" />`\n  instead of:\n\n```xml\n<core>\n  <cycleViewOSD>yes</cycleViewOSD>\n  <cycleViewOutlines>yes</cycleViewOutlines>\n  <cycleViewPreview>yes</cycleViewPreview>\n</core>\n```\n\n## [0.6.1] - 2023-01-29\n\nAs usual, this release contains lots of refactoring and bug fixes with\nparticular thanks going to @Consolatis, @jlindgren90, @bi4k8, @Flrian and\n@Joshua-Ashton.\n\n### Added\n\n- Add `<regions>` config option allowing the definition of regions to which\n  windows can be snapped by keeping a keyboard modifier pressed while dragging\n  or by using the SnapToRegion action. Written-by: @Consolatis\n- Add `<Kill>` action to send SIGTERM to a client process. Written-by: @bi4k8\n- Add config option `<core><reuseOutputMode>` to support flicker free boot\n  (issue #724). Written-by: @Consolatis\n- Enable single-pixel-buffer-v1\n- Support theme setting override by reading `<config-dir>/themerc-override`\n- Scale down SSD button icons if necessary to allow using larger ones for high\n  and mixed DPI usecases. Issue #609. Written-by: @Consolatis\n- Handle client request for layer-change\n- Support setting color of client menu buttons. Written-by: @Flrian\n- Dynamically adjust menu width based on widest item. Written-by: @Consolatis\n- Add theme options menu.width.{min,max} and menu.items.padding.{x,y}\n\n### Fixed\n\n- Scale cursor correctly at startup and on output scale-change.\n  Written-by: @bi4k8\n- Release layer tree when releasing output. Written-by: @yuanye\n- Ensure natural geometry is restored when no outputs available.\n  Reported-by: @Flrian\n- Fixes memory leaks and prevent crashes associated with missing outputs\n  Thanks to @Consolatis.\n- Update translations for new client menus strings. Thanks-to: @01micko and\n  @ersen0\n- On un-fullscreen, restore SSD before applying previous geometry to avoid\n  rendering offscreen in some instances. Written-by: @Consolatis\n- Allow snapping to the same edge. Thanks-to: @Consolatis and @Flrian\n- Send enter event when new layer surface appears under pointer. Issue #667\n- Prevent re-focus for always-on-top views when switching workspaces.\n  Written-by: @Consolatis\n- Make sure a default libinput category always exists to avoid devices not\n  being configured is some instances. Written-by: @jlindgren90\n- Update cursor if it is within the OSD area when OSD appears/disappears.\n  Written-by: @bi4k8\n- Provide generic parsing of XML action arguments to enable the use of the\n  `direction` argument in menu entries. Written-by: @Consolatis\n- Fix SSD margin computation. Written-by: @jlindgren90\n- Hide SSD decorations for fullscreen views to avoid rendering them on\n  adjacent outputs. Written-by: @jlindgren90\n- Set inactive window button color correctly. Written-by: @ScarcelyThere\n- Fix positioning of initially-maximized XWayland views.\n  Written-by: @jlindgren90\n- Check for modifiers when merging mousebinds. Issue #630.\n- Handle layer-shell exclusive and on-demand keyboard-interactivity\n  correctly, and thus support xfce4-panel better. Issues #704 and #725.\n- Only overwrite wlroots's automatic layout when necessary.\n\n### Changed\n\n- Filter out `wp_drm_lease_device` from Xwayland to avoid Electron apps such as\n  VS Code and Discord lagging over time. Issue #553. Written-by: @Joshua-Ashton\n- Do not switch output on SnapToEdge if view is maximized. Written-by: @Flrian\n\n## [0.6.0] - 2022-11-17\n\nThis release contains significant refactoring to use the wlroots\nscene-graph API. This touches many areas of the code, particularly\nrendering, server-side-decoration, the layer-shell implementation and the\nmenu. Many thanks to @Consolatis for doing most of the heavy lifting with\nthis.\n\nNoteworthy, related changes include:\n\n- The use of a buffer implementation instead of using `wlr_texture`. It\n  handles both images and fonts, and scales according to output scale.\n- The use of node-descriptors to assign roles to `wlr_scene_nodes` in order\n  to simplify the code.\n- Improving the \"Debug\" action to print scene-graph trees\n\nA large number of bugs and regressions have been fixed following the\nre-factoring, too many to list here, but we are grateful to all who have\nreported, tested and fixed issues. Particular mentions go to @bi4k8,\n@flrian, @heroin-moose, @jlindgren90, @Joshua-Ashton, @01micko and @skerit\n\n### Added\n\n- Set environment variable `LABWC_PID` to the pid of the compositor so that\n  SIGHUP and SIGTERM can be sent to specific instances.\n- Add command line options --exit and --reconfigure.\n- Support setting keyboard repeat and delay at runtime. Written-by: @bi4k8\n- Add support for mouse-wheel bindings. Set default bindings to switch\n  workspaces when scrolling on the desktop.  Written-by: @Arnaudv6\n- Implement key repeat for keybindings. Written-by: @jlindgren90\n- Support smooth scroll and horizontal scroll. Written-by: @bi4k8\n- Implement virtual keyboard and pointer protocols, enabling the use of\n  clients such as wtype and wayvnc. Written-by: @Joshua-Ashton\n- Add github workflow CI including Debian, FreeBSD, Arch and Void,\n  including a build without xwayland.\n- Support keybind \"None\" action to clear other actions for a particular\n  keybind context. Written-by: @jlindgren90\n- Support font slant (itliacs) and weight (bold). Written-by: @jlindgren90\n- Support `<default />` mousebinds to load default mousebinds and provide\n  a way to keep config files simpler whilst allowing user specific binds.\n  Issue #416. Written-by: @Consolatis\n- Add config option `<core><cycleViewOutlines>` to enable/disable preview\n  of outlines. Written-by: @Flrian\n- Render submenu arrows\n- Allow highest level menu definitions - typically used for root-menu and\n  client-menu - to be defined without label attribute, for example like this:\n  `<openbox_menu><menu id=\"root-menu\">...</menu></openbox>`. Issue #472\n- Allow xdg-desktop-portal-wlr to work out of the box by initializing dbus\n  and systemd activation environment. This enables for example OBS Studio\n  to work with no user configuration. If systemd or dbus is not available\n  the environment update will fail gracefully. PR #461\n  Written-by: @Joshua-Ashton and @Consolatis\n- Workspaces. Written-by: @Consolatis\n- presentation-time protocol\n- Native language support for client-menus. Written-by: @01micko\n- Touch support. Written-by: @bi4k8\n- `drm_lease_v1` for VR to work and leasing of desktop displays.\n  Written-by: Joshua Ashton\n- ToggleAlwaysOnTop action. Written-by: @Consolatis\n- Command line option -C to specify config directory\n- Theme options osd.border.color and osd.border.width. Written-by: @Consolatis\n- Menu `<separator />` and associated theme options:\n  menu.separator.width, menu.separator.padding.width,\n  menu.separator.padding.height and menu.separator.color\n- Adjust maximized and tiled windows according to `usable_area` taking\n  into account exclusive layer-shell clients. Written-by: @Consolatis\n- Restore natural geometry when moving tiled/maximized window\n  Fixes #391. Written-by: @Consolatis\n- Improve action implementation to take a list of arguments in preparation\n  for actions with multiple arguments. Written-by: @Consolatis\n\n### Fixed\n\n- Remove unwanted gap when initially (on map) positioning windows larger\n  than output usable area (issue #403).\n- Prevent setting cursor icon on drag. Written-by: @Consolatis (issue #549)\n- Fix bugs relating to sending matching pairs of press and release\n  keycodes to clients when using keybinds. Also fix related key-repeat\n  bug. (Issue #510)\n- Fix `wlr_output_cursor` initialization bug on new output.\n  Written-by: @jlindgren90\n- Show correct cursor for resize action triggered by keybind.\n  Written-by: @jlindgren\n- Fix bug which manifest itself when keeping button pressed in GTK3 menu\n  and firefox context menu. Written-by: @jlindgren90\n- Enable tap be default on non-touch devices (which some laptop trackpads\n  apparently are)\n- Handle missing cursor theme (issue #246). Written-by: @Consolatis\n- Fix various surface synchronization, stacking, positioning and focus\n  issues, including those related to both xwayland, scroll/drag events\n  and also #526 #483\n- On first map, do not center xwayland views with explicitly specified\n  position. Written-by: @jlindgren90\n- Give keyboard focus back to topmost mapped view when unmapping topmost\n  xwayland unmanaged surfaces, such as dmenu. Written-by: @Consolatis.\n- Fix mousebind ordering and replace earlier mousebinds by later ones\n  Written-by: @Consolatis\n- Fix various bugs associated with destroying/disabling outputs, including\n  issue #497\n- Hide Alt-Tab switcher when canceling via Escape. @jlindgren90\n- (Re)set seat when xwayland is ready (because wlroots reset the seat\n  assigned to xwayland to NULL whenever Xwayland terminates).\n  Issues #166 #444. Written-by: @Consolatis. Helped-by: @droc12345\n- Increase File Descriptor (FD) limit to max because a compositor has to\n  handle many: client connections, DMA-BUFs, `wl_data_device` pipes and so on.\n  Fixes client freeze/crashes (swaywm/sway#6642). Written-by: @Joshua-Ashton\n- Fix crash when creating a cursor constraint and there is no currently\n  focused view.\n- Gracefully handle dying client during interactive move.\n  Written-by: @Consolatis\n- Dynamically adjust server-side-decoration invisible resize areas based\n  on `usable_area` to ensure that cursor events are sent to clients such as\n  panels in preference to grabbing window edges. Fixes #265.\n  Written-by: @Consolatis\n- Always position submenus inside output extents. Fixes #276\n  Written-by: @Consolatis\n- Do not crash when changing TTY. Written-by: @bi4k8\n- Set wlroots.wrap to a specific commit rather than master because it\n  enables labwc commits to be checked out and build without manually\n  having to find the right wlroots commit if there are upstream breaking\n  changes.\n- Increase accuracy of window center-alignment, taking into account\n  `usable_area` and window decoration. Also, top/left align if window is\n  bigger than usable area.\n- Handle view-destruction during alt-tab cycling.\n  Written-by: @Joshua-Ashton\n- Survive all outputs being disabled\n- Check that double-clicks are on the same window. Written-by: yizixiao\n- Set xdg-shell window position before maximize on first map so that the\n  unmaximized geometry is known when started in maximized mode.\n  Fixes issue #305. Reported-by: @01micko\n- Support `<menu><item><action name=\"Execute\"><execute>`\n  `<execute>` is a deprecated name for `<command>`, but is supported for\n  backward compatibility with old menu-generators.\n- Keep xwayland-shell SSD state on unmap/map cycle.\n  Written-by: @Consolatis\n- Prevent segfault on missing direction arguments. Reported-by: @flrian\n- Fix keybind insertion order to restore intended behavior of keybinds\n  set by `<default />`. Written-by: @Consolatis\n- Ensure client-menu actions are always applied on window they belong to\n  This fixes #380. Written-by: @Consolatis\n- Keep window margin in sync when toggling decorations.\n  Written-by: @Consolatis\n- Fix handling of client-initiated configure requests.\n  Written-by: @jlindgren90\n- Always react to new output configuration. Reported-by @heroin-moose and\n  Written-by: @Consolatis\n- Fix bug in environment variable expansion by allowing underscores to be\n  part of the variable names. Issue #439\n- Fix parsing bug of adaptiveSync setting and test for support\n\n### Changed\n\n- src/config/rcxml.c: distinguish between no and unknown font places so\n  that `<font>` with no `place` attribute can be added after other font\n  elements without over-writing their values. Written-by: @bi4k8\n- theme: change window.label.text.justify default to center\n- Redefine the SSD \"Title\" context to cover the whole Titlebar area except\n  the parts occupied by buttons. This allows \"Drag\" and \"DoubleClick\"\n  actions to be de-coupled from buttons. As a result, \"Drag\" and\n  \"DoubleClick\" actions previously defined against \"TitleBar\" should now\n  come under the \"Title\" context, for example:\n  `<mousebind button=\"Left\" action=\"Drag\"><action name=\"Move\"/></mousebind>`\n- Remove default alt-escape keybind for Exit because too many people have\n  exited the compositor by mistake trying to get out of alt-tab cycling\n  or similar.\n\n## [0.5.3] - 2022-07-15\n\n### Added\n\n- wlr-output-power-management protocol to enable clients such as wlopm\n  Written-by: @bi4k8\n\n### Fixed\n\n- Call foreign-toplevel-destroy when unmapping xwayland surfaces because\n  some xwayland clients leave unmapped child views around. Although\n  `handle_destroy()` is not called for these, we have to call\n  foreign-toplevel-destroy to avoid clients such as panels incorrectly\n  showing them.\n- Handle xwayland `set_override_redirect` events to fix weird behaviour\n  with gitk menus and rofi.\n- Re-focus parent surface on unmapping xwayland unmanaged surfaces\n  Fixes #352 relating to JetBrains and Intellij focus issues\n  Written-by: Jelle De Loecker\n- Do not segfault on missing drag icon. Written-by: @Consolatis\n- Fix windows erratically sticking to edges during move/resize.\n  Fixes issues #331 and #309\n\n## [0.5.2] - 2022-05-17\n\nThis is a minor bugfix release mostly to ease packaging.\n\n### Fixed\n\n- Properly use system provided wlroots. Written-by: @eli-schwartz\n\n## [0.5.1] - 2022-04-08\n\n### Added\n\n- Honour size increments from `WM_SIZE_HINTS`, for example to allow\n  xwayland terminal emulators to be resized to a width/height evenly\n  divisible by the cell size. Written-by: @jlindgren90\n- Implement cursor input for overlay popups. Written-by: @Consolatis\n\n### Fixed\n\n- Do not raise xwayland windows when deactivating (issue #270).\n  Written-by: @Consolatis\n- Restore drag mouse-bindings and proper double-click (issues #258 and\n  #259). Written-by: @Consolatis\n- Implement cursor input for unmanaged xwayland surfaces outside their\n  parent view. Without this menus extending outside the main application\n  window do not receive mouse input. Written-by: @jlindgren90\n- Allow dragging scrollbar or selecting text even when moving cursor\n  outside of the window (issue #241). Written-by: @Consolatis\n- Fix positioning of xwayland views with multiple queued configure\n  events. Written-by: @Consolatis\n- Force a pointer enter event on the surface below the cursor when\n  cycling views (issue #162). Written-by: @Consolatis\n- Fix qt application crash on touchpad scroll (issue #225).\n  Written-by: @Consolatis\n\n## [0.5.0] - 2022-02-18\n\nAs usual, this release contains a bunch of fixes and improvements, of\nwhich the most notable feature-type changes are listed below. A big\nthank you to @ARDiDo, @Consolatis and @jlindgren90 for much of the hard\nwork.\n\n### Added\n\n- Render overlay layer popups to support sfwbar (issue #239)\n- Support HiDPI on-screen-display images for outputs with different scales\n- Reload environment variables on SIGHUP (issue #227)\n- Add client menu\n- Allow applications to start in fullscreen\n- Add config option `<core><cycleViewPreview>` to preview the contents\n  of each view when cycling through them (for example using alt-tab).\n- Allow mouse movements to trigger SnapToEdge. When dragging a view, move\n  the cursor outside an output to snap in that direction.\n- Unmaximize on Move\n- Support wlroots environment variable `WLR_{WL,X11}_OUTPUTS` for running\n  in running nested in X11 or a wlroots compositor.\n- Support pointer gestures (pinch/swipe)\n- Adjust views to account for output layout changes\n\n### Changed\n\nThis release contains the following two breaking changes:\n\n- Disabling outputs now causes views to be re-arranged, so in the\n  context of idle system power management (for example when using\n  swaylock), it is no longer suitable to call wlr-randr {--off,--on}\n  to enable/disable outputs.\n- The \"Drag\" mouse-event and the unmaximize-on-move feature require\n  slightly different `<mousebind>` settings to feel natural, so suggest\n  updating any local `rc.xml` settings in accordance with\n  `docs/rc.xml.all`\n\n## [0.4.0] - 2021-12-31\n\nCompile with wlroots 0.15.0\n\nThis release contains lots of internal changes, fixes and  new features.\nA big thank you goes out to @ARDiDo, @bi4k8, @Joshua-Ashton,\n@jlindgren90, @Consolatis, @telent and @apbryan. The most notable\nfeature-type changes are listed below.\n\n### Added\n\n- Add support for the following wayland protocols:\n  - `pointer_constraints` and `relative_pointer` - mostly for gaming.\n    Written-by: @Joshua-Ashton\n  - `viewporter` - needed for some games to fake modesets.\n    Written-by: @Joshua-Ashton\n  - `wlr_input_inhibit`. This enables swaylock to be run.\n    Written-by: @telent\n  - `wlr_foreign_toplevel`. This enables controlling windows from clients\n    such as waybar.\n  - `idle` and `idle_inhibit` (Written-by: @ARDiDo)\n- Support fullscreen mode.\n- Support drag-and-drop. Written-by: @ARDiDo\n- Add the following config options:\n  - Load default keybinds on `<keyboard><default />`\n  - `<keyboard><repeatRate>` and `<keyboard><repeatDelay>`\n  - Specify distance between views and output edges with `<core><gap>`\n  - `<core><adaptiveSync>`\n  - Set menu item font with `<theme><font place=\"MenuItem\">`\n  - Allow `<theme><font>` without place=\"\" attribute, thus enabling\n    simpler config files\n  - Support `<mousebind>` with `contexts` (e.g. `TitleBar`, `Left`,\n    `TLCorner`, `Frame`), `buttons` (e.g. `left`, `right`), and\n    `mouse actions` (e.g. `Press`, `DoubleClick`). Modifier keys are\n    also supported to handle configurations such as `alt` + mouse button\n    to move/resize windows. (Written-by: @bi4k8, @apbryan)\n  - `<libinput>` configuration. Written-by: @ARDiDo\n  - `<resistance><screenEdgeStrength>`\n- Support for primary selection. Written-by: @telent\n- Support 'alt-tab' on screen display when cycling between windows\n  including going backwards by pressing `shift` (Written-by: @Joshua-Ashton)\n  and cancelling with `escape` (Written-by: @jlindgren90)\n- Add the following theme options:\n  - set buttons colors individually (for iconify, close and maximize)\n  - `window.(in)active.label.text.color`\n  - `window.label.text.justify`\n  - OSD colors\n- Show application title in window decoration title bar\n- Handle double click on window decoration title bar\n- Support a 'resize-edges' area that is wider than than the visible\n  window decoration. This makes it easier to grab edges to resize\n  windows.\n- Add window actions 'MoveToEdge', 'ToggleMaximize', 'Close', 'Iconify',\n  'ToggleDecorations', 'ToggleFullscreen', 'SnapToEdge', 'Focus', 'Raise',\n  'Move', 'MoveToEdge', 'Resize', 'PreviousWindow', 'ShowMenu'\n- Add labwc.desktop for display managers\n- layer-shell:\n  - Take into account exclusive areas of clients (such as panels) when\n    maximizing windows\n  - Support popups\n- Handle xwayland `set_decorations` and xdg-shell-decoration requests.\n  Written-by: @Joshua-Ashton\n- Handle view min/max size better, including xwayland hint support.\n  Written-by: @Joshua-Ashton\n- Handle xwayland move/resize events. Written-by: @Joshua-Ashton\n- Support audio and monitor-brightness keys by default\n- Catch ctrl-alt-F1 to F12 to switch tty\n- Support `XCURSOR_THEME` and `XCURSOR_SIZE` environment variables\n- Support submenus including inline definitions\n\n### Changed\n\n- The config option `<lab><xdg_shell_server_side_deco>` has changed to\n  `<core><decoration>` (breaking change)\n\n## [0.3.0] - 2021-06-28\n\nCompile with wlroots 0.14.0\n\n### Added\n\n- Add config options `<focus><followMouse>` and `<focus><raiseOnFocus>`\n  (provided-by: Mikhail Kshevetskiy)\n- Do not use Clearlooks-3.4 theme by default, just use built-in theme\n- Fix bug which triggered Qt application segfault\n\n## [0.2.0] - 2021-04-15\n\nCompile with wlroots 0.13.0\n\n### Added\n\n- Support wlr-output-management protocol for setting output position, scale\n  and orientation with kanshi or similar\n- Support server side decoration rounded corners\n- Change built-in theme to match default GTK style\n- Add labwc-environment(5)\n- Call `wlr_output_enable_adaptive_sync()` if `LABWC_ADAPTIVE_SYNC` set\n\n## [0.1.0] - 2021-03-05\n\nCompile with wlroots 0.12.0 and wayland-server >=1.16\n\n### Added\n\n- Support xdg-shell and optionally xwayland-shell\n- Show xbm buttons for maximize, iconify and close\n- Support layer-shell protocol (partial)\n- Support damage tracking to reduce CPU usage\n- Support very basic root-menu implementation\n- Re-load config and theme on SIGHUP\n- Support simple configuration to auto-start applications, set\n  environment variables and specify theme, font and keybinds.\n- Support some basic theme settings for window borders and title bars\n- Support basic actions including Execute, Exit, NextWindow, Reconfigure and\n  ShowMenu\n\n[Keep a Changelog]: https://keepachangelog.com/en/1.0.0/\n[unreleased]: https://github.com/labwc/labwc/compare/0.8.2...HEAD\n[0.8.2]: https://github.com/labwc/labwc/compare/0.8.1...0.8.2\n[0.8.1]: https://github.com/labwc/labwc/compare/0.8.0...0.8.1\n[0.8.0]: https://github.com/labwc/labwc/compare/0.7.3...0.8.0\n[0.7.4]: https://github.com/labwc/labwc/compare/0.7.3...0.7.4\n[0.7.3]: https://github.com/labwc/labwc/compare/0.7.2...0.7.3\n[0.7.2]: https://github.com/labwc/labwc/compare/0.7.1...0.7.2\n[0.7.1]: https://github.com/labwc/labwc/compare/0.7.0...0.7.1\n[0.7.0]: https://github.com/labwc/labwc/compare/0.6.6...0.7.0\n[0.6.6]: https://github.com/labwc/labwc/compare/0.6.5...0.6.6\n[0.6.5]: https://github.com/labwc/labwc/compare/0.6.4...0.6.5\n[0.6.4]: https://github.com/labwc/labwc/compare/0.6.3...0.6.4\n[0.6.3]: https://github.com/labwc/labwc/compare/0.6.2...0.6.3\n[0.6.2]: https://github.com/labwc/labwc/compare/0.6.1...0.6.2\n[0.6.1]: https://github.com/labwc/labwc/compare/0.6.0...0.6.1\n[0.6.0]: https://github.com/labwc/labwc/compare/0.5.0...0.6.0\n[0.5.3]: https://github.com/labwc/labwc/compare/0.5.2...0.5.3\n[0.5.2]: https://github.com/labwc/labwc/compare/0.5.1...0.5.2\n[0.5.1]: https://github.com/labwc/labwc/compare/0.5.0...0.5.1\n[0.5.0]: https://github.com/labwc/labwc/compare/0.4.0...0.5.0\n[0.4.0]: https://github.com/labwc/labwc/compare/0.3.0...0.4.0\n[0.3.0]: https://github.com/labwc/labwc/compare/0.2.0...0.3.0\n[0.2.0]: https://github.com/labwc/labwc/compare/0.1.0...0.2.0\n[0.1.0]: https://github.com/labwc/labwc/compare/081339e...0.1.0\n\n[#1278]: https://github.com/labwc/labwc/pull/1278\n[#1503]: https://github.com/labwc/labwc/pull/1503\n[#1716]: https://github.com/labwc/labwc/pull/1716\n[#2030]: https://github.com/labwc/labwc/pull/2030\n[#2052]: https://github.com/labwc/labwc/pull/2052\n[#2055]: https://github.com/labwc/labwc/pull/2055\n[#2057]: https://github.com/labwc/labwc/pull/2057\n[#2072]: https://github.com/labwc/labwc/pull/2072\n[#2075]: https://github.com/labwc/labwc/pull/2075\n[#2088]: https://github.com/labwc/labwc/pull/2088\n[#2091]: https://github.com/labwc/labwc/pull/2091\n[#2094]: https://github.com/labwc/labwc/pull/2094\n[#2097]: https://github.com/labwc/labwc/pull/2097\n[#2100]: https://github.com/labwc/labwc/pull/2100\n[#2101]: https://github.com/labwc/labwc/pull/2101\n[#2102]: https://github.com/labwc/labwc/pull/2102\n[#2105]: https://github.com/labwc/labwc/pull/2105\n[#2116]: https://github.com/labwc/labwc/pull/2116\n[#2127]: https://github.com/labwc/labwc/pull/2127\n[#2128]: https://github.com/labwc/labwc/pull/2128\n[#2150]: https://github.com/labwc/labwc/pull/2150\n[#2152]: https://github.com/labwc/labwc/pull/2152\n[#2154]: https://github.com/labwc/labwc/pull/2154\n[#2166]: https://github.com/labwc/labwc/pull/2166\n[#2167]: https://github.com/labwc/labwc/pull/2167\n[#2174]: https://github.com/labwc/labwc/pull/2174\n[#2189]: https://github.com/labwc/labwc/pull/2189\n[#2190]: https://github.com/labwc/labwc/pull/2190\n[#2191]: https://github.com/labwc/labwc/pull/2191\n[#2196]: https://github.com/labwc/labwc/pull/2196\n[#2205]: https://github.com/labwc/labwc/pull/2205\n[#2207]: https://github.com/labwc/labwc/pull/2207\n[#2221]: https://github.com/labwc/labwc/pull/2221\n[#2224]: https://github.com/labwc/labwc/pull/2224\n[#2225]: https://github.com/labwc/labwc/pull/2225\n[#2226]: https://github.com/labwc/labwc/pull/2226\n[#2231]: https://github.com/labwc/labwc/pull/2231\n[#2234]: https://github.com/labwc/labwc/pull/2234\n[#2244]: https://github.com/labwc/labwc/pull/2244\n[#2245]: https://github.com/labwc/labwc/pull/2245\n[#2249]: https://github.com/labwc/labwc/pull/2249\n[#2250]: https://github.com/labwc/labwc/pull/2250\n[#2257]: https://github.com/labwc/labwc/pull/2257\n[#2266]: https://github.com/labwc/labwc/pull/2266\n[#2273]: https://github.com/labwc/labwc/pull/2273\n[#2274]: https://github.com/labwc/labwc/pull/2274\n[#2276]: https://github.com/labwc/labwc/pull/2276\n[#2277]: https://github.com/labwc/labwc/pull/2277\n[#2291]: https://github.com/labwc/labwc/pull/2291\n[#2295]: https://github.com/labwc/labwc/pull/2295\n[#2313]: https://github.com/labwc/labwc/pull/2313\n[#2319]: https://github.com/labwc/labwc/pull/2319\n[#2321]: https://github.com/labwc/labwc/pull/2321\n[#2325]: https://github.com/labwc/labwc/pull/2325\n[#2326]: https://github.com/labwc/labwc/pull/2326\n[#2329]: https://github.com/labwc/labwc/pull/2329\n[#2331]: https://github.com/labwc/labwc/pull/2331\n[#2335]: https://github.com/labwc/labwc/pull/2335\n[#2336]: https://github.com/labwc/labwc/pull/2336\n[#2337]: https://github.com/labwc/labwc/pull/2337\n[#2338]: https://github.com/labwc/labwc/pull/2338\n[#2340]: https://github.com/labwc/labwc/pull/2340\n[#2345]: https://github.com/labwc/labwc/pull/2345\n[#2350]: https://github.com/labwc/labwc/pull/2350\n[#2356]: https://github.com/labwc/labwc/pull/2356\n[#2360]: https://github.com/labwc/labwc/pull/2360\n[#2361]: https://github.com/labwc/labwc/pull/2361\n[#2363]: https://github.com/labwc/labwc/pull/2363\n[#2371]: https://github.com/labwc/labwc/pull/2371\n[#2376]: https://github.com/labwc/labwc/pull/2376\n[#2377]: https://github.com/labwc/labwc/pull/2377\n[#2380]: https://github.com/labwc/labwc/pull/2380\n[#2398]: https://github.com/labwc/labwc/pull/2398\n[#2400]: https://github.com/labwc/labwc/pull/2400\n[#2409]: https://github.com/labwc/labwc/pull/2409\n[#2412]: https://github.com/labwc/labwc/pull/2412\n[#2414]: https://github.com/labwc/labwc/pull/2414\n[#2420]: https://github.com/labwc/labwc/pull/2420\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.197265625,
          "content": "# labwc\n\n<h3 align=\"center\">[<a\nhref=\"https://labwc.github.io/\">Website</a>] [<a\nhref=\"https://github.com/labwc/labwc-scope#readme\">Scope</a>] [<a\nhref=\"https://web.libera.chat/gamja/?channels=#labwc\">IRC&nbsp;Channel</a>] [<a\nhref=\"NEWS.md\">Release&nbsp;Notes</a>]</h3>\n\n- [1. Project Description](#1-project-description)\n  - [1.1 What Is This?](#11-what-is-this)\n  - [1.2 Why](#12-why)\n  - [1.3 Why The Openbox Theme Specification?](#13-why-the-openbox-theme-specification)\n  - [1.4 Very High Level Scope](#14-very-high-level-scope)\n  - [1.5 Videos](#15-videos)\n  - [1.6 Screenshot](#16-screenshot)\n- [2. Build and Installation](#2-build-and-installation)\n- [3. Configuration](#3-configuration)\n- [4. Theming](#4-theming)\n- [5. Translations](#5-translations)\n- [6. Usage](#6-usage)\n  - [6.1 Gaming](#61-gaming)\n- [7. Integration](#7-integration)\n\n## 1. Project Description\n\n### 1.1 What Is This?\n\nLabwc stands for Lab Wayland Compositor, where lab can mean any of the\nfollowing:\n\n- Lightweight And Box-inspired\n- sense of experimentation and treading new ground\n- inspired by BunsenLabs and ArchLabs\n- your favorite pet\n\nLabwc is a [wlroots]-based window-stacking compositor for [wayland], inspired\nby [openbox].\n\nIt is light-weight and independent with a focus on simply stacking windows well\nand rendering some window decorations. It takes a no-bling/frills approach and\nsays no to features such as animations.  It relies on clients for panels,\nscreenshots, wallpapers and so on to create a full desktop environment.\n\nLabwc tries to stay in keeping with [wlroots] and [sway] in terms of general\napproach and coding style.\n\nLabwc has no reliance on any particular Desktop Environment, Desktop Shell or\nsession. Nor does it depend on any UI toolkits such as Qt or GTK.\n\n### 1.2 Why?\n\nFirstly, we believe that there is a need for a simple Wayland window-stacking\ncompositor which strikes a balance between minimalism and bloat approximately\nat the level where Window Managers like Openbox reside in the X11 domain.  Most\nof the core developers are accustomed to low resource Desktop Environments such\nas Mate/XFCE or standalone Window Managers such as Openbox under X11.  Labwc\naims to make a similar setup possible under Wayland, with small and independent\ncomponents rather than a large, integrated software eco-system.\n\nSecondly, the Wayland community has achieved an amazing amount so far, and we\nwant to help solve the unsolved problems to make Wayland viable for more\npeople. We think that standardisation and de-fragmentation is a route to\ngreater Wayland adoption, and wanting to play our part in this, Labwc only\nunderstands [wayland-protocols] &amp; [wlr-protocols], and it cannot be\ncontrolled with dbus, sway/i3/custom-IPC or other technology.\n\nThirdly, it is important to us that scope is tightly controlled so that the\ncompositor matures to production quality. On the whole, we value robustness,\nreliability, stability and simplicity over new features. Coming up with new\nideas and features is easy - maintaining and stabilising them is not.\n\nFourthly, we are of the view that a compositor should be boring in order to do\nits job well. In this regard we follow in the footsteps of [metacity] which\ndescribes itself as a \"Boring window manager for the adult in you. Many window\nmanagers are like Marshmallow Froot Loops; Metacity is like Cheerios.\"\n\nFinally, we think that an elegant solution to all of this does not need feel\nsquare and pixelated like something out of the 1990s, but should look\ncontemporary and enable cutting-edge performance.\n\n### 1.3 Why The Openbox Theme Specification?\n\nIn order to avoid reinventing configuration and theme syntaxes, the [openbox]\n3.6 specification is used. This does not mean that labwc is an openbox clone\nbut rather that configuration files will look and feel familiar.\n\nAlso, parsing GTK3+ and Qt themes for window decorations is very complicated,\nso using much simpler specs such as those used by openbox and xfwm makes sense\nfor a compositor such as labwc, both in terms of implementation and for user\nmodification.\n\nOpenbox spec is somewhat of a stable standard considering how long it has\nremained unchanged for and how wide-spread its adoption is by lightweight\ndistributions such as LXDE, LXQt, BunsenLabs, ArchLabs, Mabox and Raspbian. Some\nwidely used themes (for example Numix and Arc) have built-in support.\n\nWe could have invented a whole new syntax, but that's not where we want to\nspend our effort.\n\n### 1.4 Very High Level Scope\n\nA lot of emphasis is put on code simplicity when considering features.\n\nThe main development effort is focused on producing a solid foundation for a\nstacking compositor rather than adding configuration and theming options.\n\nSee [scope] for full details on implemented features.\n\nHigh-level summary of items that Labwc supports:\n\n- [x] Config files (rc.xml, autostart, shutdown, environment, menu.xml)\n- [x] Theme files and xbm/png/svg icons\n- [x] Basic desktop and client menus\n- [x] HiDPI\n- [x] wlroots protocols such as `output-management`, `layer-shell` and\n  `foreign-toplevel`\n- [x] Optionally xwayland\n\n### 1.5 Videos\n\n| video link                | date        | duration\n| ------------------------- | ------------| -------\n| [0.7.2-release-video]     | 24-May-2024 | 3:17\n| [0.6.0-release-video]     | 31-Oct-2022 | 2:48\n| [0.3.0-release-video]     | 05-Aug-2021 | 1:10\n| [pre-0.1.0-release-video] | 25-Feb-2021 | 3:42\n\n[0.7.2-release-video]: https://youtu.be/gNIj6VU-IH8\n[0.6.0-release-video]: https://youtu.be/guBnx18EQiA\n[0.3.0-release-video]: https://youtu.be/AU_M3n_FS-E\n[pre-0.1.0-release-video]: https://youtu.be/rE1bQjSVJzg\n\n### 1.6 Screenshot\n\nThe obligatory screenshot:\n\n<a href=\"https://labwc.github.io/img/scrot1.png\">\n  <img src=\"https://labwc.github.io/img/scrot1-small.png\">\n</a><br />\n<a href=\"https://labwc.github.io/obligatory-screenshot.html\">\n  <small>Screenshot description</small>\n</a>\n\n## 2. Build and Installation\n\nTo build, simply run:\n\n    meson setup build/\n    meson compile -C build/\n\nRun-time dependencies include:\n\n- wlroots, wayland, libinput, xkbcommon\n- libxml2, cairo, pango, glib-2.0\n- libpng\n- librsvg >=2.46 (optional)\n- xwayland, xcb (optional)\n\nBuild dependencies include:\n\n- meson, ninja, gcc/clang\n- wayland-protocols\n\nDisable xwayland with `meson -Dxwayland=disabled build/`\n\nFor OS/distribution specific details see [wiki].\n\nIf the right version of `wlroots` is not found on the system, the build setup\nwill automatically download the wlroots repo. If this fallback is not desired\nplease use:\n\n    meson setup --wrap-mode=nodownload build/\n\nTo enforce the supplied wlroots.wrap file, run:\n\n    meson setup --force-fallback-for=wlroots build/\n\nIf installing after using the wlroots.wrap file, use the following to\nprevent installing the wlroots headers:\n\n    meson install --skip-subprojects -C build/\n\n## 3. Configuration\n\nUser config files are located at `${XDG_CONFIG_HOME:-$HOME/.config/labwc/}`\nwith the following six files being used: [rc.xml], [menu.xml], [autostart], [shutdown],\n[environment] and [themerc-override].\n\nRun `labwc --reconfigure` to reload configuration and theme.\n\nFor a step-by-step initial configuration guide, see [getting-started].\n\n## 4. Theming\n\nThemes are located at `~/.local/share/themes/\\<theme-name\\>/labwc/` or\nequivalent `XDG_DATA_{DIRS,HOME}` location in accordance with freedesktop XDG\ndirectory specification.\n\nFor full theme options, see [labwc-theme(5)] or the [themerc] example file.\n\nFor themes, search the internet for \"openbox themes\" and place them in\n`~/.local/share/themes/`. Some good starting points include:\n\n- https://github.com/addy-dclxvi/openbox-theme-collections\n- https://github.com/the-zero885/Lubuntu-Arc-Round-Openbox-Theme\n- https://github.com/BunsenLabs/bunsen-themes\n\n## 5. Translations\n\nThe default window bar menu can be translated on the [weblate platform](https://translate.lxqt-project.org/projects/labwc/labwc/).\n\n<a href=\"https://translate.lxqt-project.org/engage/labwc/?utm_source=widget\">\n<img src=\"https://translate.lxqt-project.org/widgets/labwc/-/labwc/multi-blue.svg\" alt=\"Translation status\" />\n</a>\n\n## 6. Usage\n\n    ./build/labwc [-s <command>]\n\n> **_NOTE:_** If you are running on **NVIDIA**, you will need the\n> `nvidia-drm.modeset=1` kernel parameter.\n\nIf you have not created an rc.xml config file, default bindings will be:\n\n| combination              | action\n| ------------------------ | ------\n| `alt`-`tab`              | activate next window\n| `alt`-`shift`-`tab`      | activate previous window\n| `super`-`return`         | alacritty\n| `alt`-`F3`               | bemenu\n| `alt`-`F4`               | close window\n| `super`-`a`              | toggle maximize\n| `alt`-`mouse-left`       | move window\n| `alt`-`mouse-right`      | resize window\n| `alt`-`arrow`            | move window to edge\n| `super`-`arrow`          | resize window to fill half the output\n| `alt`-`space`            | show the window menu\n| `XF86_AudioLowerVolume`  | amixer sset Master 5%-\n| `XF86_AudioRaiseVolume`  | amixer sset Master 5%+\n| `XF86_AudioMute`         | amixer sset Master toggle\n| `XF86_MonBrightnessUp`   | brightnessctl set +10%\n| `XF86_MonBrightnessDown` | brightnessctl set 10%-\n\nA root-menu can be opened by clicking on the desktop.\n\n### 6.1 Gaming\n\nCursor confinement is supported from version `0.6.2`. If using older versions,\nuse a nested [gamescope] instance for gaming.  It can be added to steam via\ngame launch option: `gamescope -f -- %command%`.\n\n## 7. Integration\n\nSuggested apps to use with labwc:\n\n- Screen shooter: [grim]\n- Screen recorder: [wf-recorder]\n- Background image: [swaybg]\n- Panel: [waybar], [yambar], [lavalauncher], [sfwbar]\n- Launchers: [bemenu], [fuzzel], [wofi]\n- Output managers: [wlopm], [kanshi], [wlr-randr]\n- Screen locker: [swaylock]\n- Gamma adjustment: [gammastep]\n\nSee [integration] for further details.\n\n[wayland]: https://wayland.freedesktop.org/\n[openbox]: https://openbox.org/help/Contents\n[wlroots]: https://gitlab.freedesktop.org/wlroots/wlroots\n[sway]: https://github.com/swaywm\n[wayland-protocols]: https://gitlab.freedesktop.org/wayland/wayland-protocols\n[wlr-protocols]: https://gitlab.freedesktop.org/wlroots/wlr-protocols\n[scope]: https://github.com/labwc/labwc-scope#readme\n[wiki]: https://github.com/labwc/labwc/wiki\n[getting-started]: https://labwc.github.io/getting-started.html\n[integration]: https://labwc.github.io/integration.html\n[metacity]: https://github.com/GNOME/metacity\n\n[rc.xml]: docs/rc.xml.all\n[menu.xml]: docs/menu.xml\n[autostart]: docs/autostart\n[shutdown]: docs/shutdown\n[environment]: docs/environment\n[themerc-override]: docs/themerc\n[themerc]: docs/themerc\n[labwc-theme(5)]: https://labwc.github.io/labwc-theme.5.html\n\n[gamescope]: https://github.com/Plagman/gamescope\n[grim]: https://github.com/emersion/grim\n[wf-recorder]: https://github.com/ammen99/wf-recorder\n[swaybg]: https://github.com/swaywm/swaybg\n[waybar]: https://github.com/Alexays/Waybar\n[yambar]: https://codeberg.org/dnkl/yambar\n[lavalauncher]: https://sr.ht/~leon_plickat/LavaLauncher\n[sfwbar]: https://github.com/LBCrion/sfwbar\n[bemenu]: https://github.com/Cloudef/bemenu\n[fuzzel]: https://codeberg.org/dnkl/fuzzel\n[wofi]: https://hg.sr.ht/~scoopta/wofi\n[wlopm]: https://git.sr.ht/~leon_plickat/wlopm\n[kanshi]: https://sr.ht/~emersion/kanshi/\n[wlr-randr]: https://sr.ht/~emersion/wlr-randr/\n[swaylock]: https://github.com/swaywm/swaylock\n[gammastep]: https://gitlab.com/chinstrap/gammastep\n\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 4.3212890625,
          "content": "project(\n  'labwc',\n  'c',\n  version: '0.8.2',\n  license: 'GPL-2.0-only',\n  meson_version: '>=0.59.0',\n  default_options: [\n    'c_std=c11',\n    'warning_level=2',\n  ],\n)\n\nadd_project_arguments(\n  [\n    '-DWLR_USE_UNSTABLE',\n  ],\n  language: 'c',\n)\n\ncc = meson.get_compiler('c')\n\nadd_project_arguments(cc.get_supported_arguments([\n  '-Wundef',\n  '-Wlogical-op',\n  '-Wmissing-include-dirs',\n  '-Wold-style-definition',\n  '-Wpointer-arith',\n  '-Winit-self',\n  '-Wstrict-prototypes',\n  '-Wimplicit-fallthrough=2',\n  '-Wendif-labels',\n  '-Wstrict-aliasing=2',\n  '-Woverflow',\n  '-Wmissing-prototypes',\n  '-Walloca',\n  '-Wunused-macros',\n\n  '-Wno-unused-parameter',\n  '-Wno-expansion-to-defined',\n]), language: 'c')\n\nversion='\"@0@\"'.format(meson.project_version())\ngit = find_program('git', native: true, required: false)\nif git.found()\n  git_commit = run_command([git, 'describe', '--dirty'], check: false)\n  if git_commit.returncode() == 0\n    version = '\"@0@\"'.format(git_commit.stdout().strip())\n  endif\nendif\nadd_project_arguments('-DLABWC_VERSION=@0@'.format(version), language: 'c')\n\nwlroots = dependency(\n  'wlroots-0.18',\n  default_options: ['default_library=static', 'examples=false'],\n  version: ['>=0.18.1', '<0.19.0'],\n)\n\nwlroots_has_xwayland = wlroots.get_variable('have_xwayland') == 'true'\nhave_libsfdo = not get_option('icon').disabled()\n\nwayland_server = dependency('wayland-server', version: '>=1.19.0')\nwayland_protos = dependency('wayland-protocols', version: '>=1.35')\nxkbcommon = dependency('xkbcommon')\nxcb = dependency('xcb', required: get_option('xwayland'))\nxcb_icccm = dependency('xcb-icccm', required: get_option('xwayland'))\ndrm_full = dependency('libdrm')\ndrm = drm_full.partial_dependency(compile_args: true, includes: true)\nxml2 = dependency('libxml-2.0')\nglib = dependency('glib-2.0')\ncairo = dependency('cairo')\npangocairo = dependency('pangocairo')\ninput = dependency('libinput', version: '>=1.14')\npixman = dependency('pixman-1')\nmath = cc.find_library('m')\npng = dependency('libpng')\nsvg = dependency('librsvg-2.0', version: '>=2.46', required: false)\nsfdo_basedir = dependency(\n  'libsfdo-basedir',\n  default_options: ['default_library=static', 'examples=false', 'tests=false'],\n  version: '>=0.1.3',\n  required: have_libsfdo,\n)\nsfdo_desktop = dependency(\n  'libsfdo-desktop',\n  default_options: ['default_library=static', 'examples=false', 'tests=false'],\n  version: '>=0.1.3',\n  required: have_libsfdo,\n)\nsfdo_icon = dependency(\n  'libsfdo-icon',\n  default_options: ['default_library=static', 'examples=false', 'tests=false'],\n  version: '>=0.1.3',\n  required: have_libsfdo,\n)\n\nif get_option('xwayland').enabled() and not wlroots_has_xwayland\n\terror('no wlroots Xwayland support')\nendif\nhave_xwayland = xcb.found() and wlroots_has_xwayland\nconf_data = configuration_data()\nconf_data.set10('HAVE_XWAYLAND', have_xwayland)\n\nif get_option('svg').disabled()\n  have_rsvg = false\nelse\n  have_rsvg = svg.found()\nendif\nconf_data.set10('HAVE_RSVG', have_rsvg)\n\nconf_data.set10('HAVE_LIBSFDO', have_libsfdo)\n\nif get_option('static_analyzer').enabled()\n  add_project_arguments(['-fanalyzer'], language: 'c')\nendif\n\nmsgfmt = find_program('msgfmt', required: get_option('nls'))\nif msgfmt.found()\n  source_root = meson.current_source_dir()\n  conf_data.set('HAVE_NLS', 1)\n  subdir('po')\nelse\n  conf_data.set('HAVE_NLS', 0)\nendif\n\nlabwc_inc = include_directories('include')\n\nsubdir('protocols')\n\nlabwc_deps = [\n  server_protos,\n  wayland_server,\n  wlroots,\n  xkbcommon,\n  xcb_icccm,\n  xml2,\n  glib,\n  cairo,\n  drm,\n  pangocairo,\n  input,\n  pixman,\n  math,\n  png,\n]\nif have_rsvg\n  labwc_deps += [\n    svg,\n  ]\nendif\nif have_libsfdo\n  labwc_deps += [\n    sfdo_basedir,\n    sfdo_desktop,\n    sfdo_icon,\n  ]\nendif\n\nsubdir('include')\nsubdir('src')\nsubdir('docs')\n\ndep_cmocka = dependency('cmocka', required: get_option('test'))\nif dep_cmocka.found()\n  subdir('t')\nendif\n\nexecutable(\n  meson.project_name(),\n  labwc_sources,\n  include_directories: [labwc_inc],\n  dependencies: labwc_deps,\n  install: true,\n)\n\ninstall_data('data/labwc.desktop', install_dir: get_option('datadir') / 'wayland-sessions')\n\ninstall_data('data/labwc-portals.conf', install_dir: get_option('datadir') / 'xdg-desktop-portal')\n\nicons = ['labwc-symbolic.svg', 'labwc.svg']\nforeach icon : icons\n  icon_path = join_paths('data', icon)\n  install_data(icon_path, install_dir: get_option('datadir') / 'icons/hicolor/scalable/apps')\nendforeach\n"
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 0.6357421875,
          "content": "option('man-pages', type: 'feature', value: 'auto', description: 'Generate and install man pages')\noption('xwayland', type: 'feature', value: 'auto', description: 'Enable support for X11 applications')\noption('svg', type: 'feature', value: 'enabled', description: 'Enable svg window buttons')\noption('icon', type: 'feature', value: 'enabled', description: 'Enable window icons')\noption('nls', type: 'feature', value: 'auto', description: 'Enable native language support')\noption('static_analyzer', type: 'feature', value: 'disabled', description: 'Run gcc static analyzer')\noption('test', type: 'feature', value: 'disabled', description: 'Run tests')\n"
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "protocols",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "subprojects",
          "type": "tree",
          "content": null
        },
        {
          "name": "t",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}