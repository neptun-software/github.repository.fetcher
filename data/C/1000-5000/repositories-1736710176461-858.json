{
  "metadata": {
    "timestamp": 1736710176461,
    "page": 858,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ArtifexSoftware/mupdf",
      "stars": 1687,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 2.9248046875,
          "content": "# editorconfig.org settings for mupdf project\n\nroot = true\n\n[*]\nindent_style = tab\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nend_of_line = lf\n\n[memento.*]\nindent_style = space\nindent_size = 4\n\n[*.json]\nindent_style = space\nindent_size = 2\n\n[*.{c++,cc,cpp,cppm,cxx,h,h++,hh,hpp,hxx,inl,ipp,ixx,tlh,tli}]\n\n# Visual C++ Code Style settings\n\ncpp_generate_documentation_comments = xml\n\n# Visual C++ Formatting settings\n\ncpp_indent_braces = false\ncpp_indent_multi_line_relative_to = innermost_parenthesis\ncpp_indent_within_parentheses = indent\ncpp_indent_preserve_within_parentheses = true\ncpp_indent_case_contents = true\ncpp_indent_case_labels = false\ncpp_indent_case_contents_when_block = false\ncpp_indent_lambda_braces_when_parameter = true\ncpp_indent_goto_labels = one_left\ncpp_indent_preprocessor = leftmost_column\ncpp_indent_access_specifiers = false\ncpp_indent_namespace_contents = true\ncpp_indent_preserve_comments = false\ncpp_new_line_before_open_brace_namespace = ignore\ncpp_new_line_before_open_brace_type = ignore\ncpp_new_line_before_open_brace_function = ignore\ncpp_new_line_before_open_brace_block = ignore\ncpp_new_line_before_open_brace_lambda = ignore\ncpp_new_line_scope_braces_on_separate_lines = false\ncpp_new_line_close_brace_same_line_empty_type = false\ncpp_new_line_close_brace_same_line_empty_function = false\ncpp_new_line_before_catch = true\ncpp_new_line_before_else = false\ncpp_new_line_before_while_in_do_while = false\ncpp_space_before_function_open_parenthesis = ignore\ncpp_space_within_parameter_list_parentheses = false\ncpp_space_between_empty_parameter_list_parentheses = false\ncpp_space_after_keywords_in_control_flow_statements = true\ncpp_space_within_control_flow_statement_parentheses = false\ncpp_space_before_lambda_open_parenthesis = false\ncpp_space_within_cast_parentheses = false\ncpp_space_after_cast_close_parenthesis = false\ncpp_space_within_expression_parentheses = false\ncpp_space_before_block_open_brace = true\ncpp_space_between_empty_braces = false\ncpp_space_before_initializer_list_open_brace = false\ncpp_space_within_initializer_list_braces = false\ncpp_space_preserve_in_initializer_list = true\ncpp_space_before_open_square_bracket = false\ncpp_space_within_square_brackets = false\ncpp_space_before_empty_square_brackets = false\ncpp_space_between_empty_square_brackets = false\ncpp_space_group_square_brackets = false\ncpp_space_within_lambda_brackets = false\ncpp_space_between_empty_lambda_brackets = false\ncpp_space_before_comma = false\ncpp_space_after_comma = true\ncpp_space_remove_around_member_operators = false\ncpp_space_before_inheritance_colon = false\ncpp_space_before_constructor_colon = false\ncpp_space_remove_before_semicolon = true\ncpp_space_after_semicolon = false\ncpp_space_remove_around_unary_operator = false\ncpp_space_around_binary_operator = ignore\ncpp_space_around_assignment_operator = ignore\ncpp_space_pointer_reference_alignment = ignore\ncpp_space_around_ternary_operator = ignore\ncpp_wrap_preserve_blocks = one_liners\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.6806640625,
          "content": "# Macros:\n[attr]tabs\t\twhitespace=trailing-space,space-before-tab,indent-with-non-tab,tabwidth=4\n[attr]spaces\t\twhitespace=trailing-space,space-before-tab,tabs-in-indent\n[attr]makefile\t\twhitespace=trailing-space,space-before-tab,indent-with-non-tab,tabwidth=8\n\n# Source files:\n*\t\t\ttext=auto\nMake*\t\t\tmakefile\n*.mk\t\t\tmakefile\n*.make\t\t\tmakefile\n*.[chm]\t\t\ttabs\n*.java\t\t\ttabs\n*.xml\t\t\ttabs\n*.props\t\t\tspaces\n*.targets\t\tspaces\n*.vcxproj\t\tspaces\n*.vcxproj.filters\tspaces\nbin2coff.xml\t\tspaces\n\n# Documentation files:\n*.txt\t\t\tspaces\n\n# Legacy source files:\nmemento.*\t\tspaces\n\n# Generated source files:\nsource/html/css-properties.h\tspaces\n\n# iOS project files:\n*.xib\t\t\tspaces\n*.xcscheme\t\tspaces\n*.json\t\t\tspaces\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.830078125,
          "content": "# Optional thirdparty libraryes\nthirdparty/luratech\nthirdparty/jpegxr\nthirdparty/mapping-resources-pdf\nthirdparty/cmap-resources\n\n# Generated files:\nbuild\ngenerated/resources/fonts/droid\ngenerated/resources/fonts/han\ngenerated/resources/fonts/noto\ngenerated/resources/fonts/sil\ntags\ncscope.*\nnode_modules\n\n# Editor and file browser turds:\n*~\n.*.swp\n.DS_Store\n\\#*\\#\n\n# Editor settings:\n.exrc\n.vimrc\n*.xcworkspace\n*.xcuserdatad\nuser.make\nguide\n\n# Temporary and build files:\n*.class\n*.jar\n*.o\n*.so\n*.dll\nDerivedData\n\n# PyMuPDF generated build files\n__pycache__\nplatform/c++\nplatform/python\n\nplatform/java/local.properties\nplatform/win32/*.user\nplatform/win32/*.ncb\nplatform/win32/*.suo\nplatform/win32/Debug\nplatform/win32/DebugOpenssl\nplatform/win32/Profile\nplatform/win32/Release\nplatform/win32/ReleaseOpenssl\nplatform/win32/Memento\nplatform/win32/x64\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 1.24609375,
          "content": "[submodule \"thirdparty/jbig2dec\"]\n\tpath = thirdparty/jbig2dec\n\turl = ../jbig2dec.git\n[submodule \"thirdparty/mujs\"]\n\tpath = thirdparty/mujs\n\turl = ../mujs.git\n[submodule \"thirdparty/freetype\"]\n\tpath = thirdparty/freetype\n\turl = ../thirdparty-freetype2.git\n[submodule \"thirdparty/gumbo-parser\"]\n\tpath = thirdparty/gumbo-parser\n\turl = ../thirdparty-gumbo-parser.git\n[submodule \"thirdparty/harfbuzz\"]\n\tpath = thirdparty/harfbuzz\n\turl = ../thirdparty-harfbuzz.git\n[submodule \"thirdparty/jpeg\"]\n\tpath = thirdparty/libjpeg\n\turl = ../thirdparty-libjpeg.git\n[submodule \"thirdparty/lcms2\"]\n\tpath = thirdparty/lcms2\n\turl = ../thirdparty-lcms2.git\n[submodule \"thirdparty/openjpeg\"]\n\tpath = thirdparty/openjpeg\n\turl = ../thirdparty-openjpeg.git\n[submodule \"thirdparty/zlib\"]\n\tpath = thirdparty/zlib\n\turl = ../thirdparty-zlib.git\n[submodule \"thirdparty/curl\"]\n\tpath = thirdparty/curl\n\turl = ../thirdparty-curl.git\n[submodule \"thirdparty/freeglut\"]\n\tpath = thirdparty/freeglut\n\turl = ../thirdparty-freeglut.git\n[submodule \"thirdparty/tesseract\"]\n\tpath = thirdparty/tesseract\n\turl = ../thirdparty-tesseract.git\n[submodule \"thirdparty/leptonica\"]\n\tpath = thirdparty/leptonica\n\turl = ../thirdparty-leptonica.git\n[submodule \"thirdparty/extract\"]\n\tpath = thirdparty/extract\n\turl = ../extract.git\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.7265625,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-20.04\n  tools:\n    python: \"3.9\"\n    # You can also specify other tool versions:\n    # nodejs: \"16\"\n    # rust: \"1.55\"\n    # golang: \"1.17\"\n  apt_packages:\n    - graphviz\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/src/conf.py\n\n# If using Sphinx, optionally build your docs in additional formats such as\n# PDF\nformats:\n  - pdf\n\n# Optionally declare the Python requirements required to build your docs\npython:\n  install:\n    - requirements: docs/src/requirements.txt\n"
        },
        {
          "name": "CHANGES",
          "type": "blob",
          "size": 31.7001953125,
          "content": "List of changes in MuPDF 1.25\n\n\tNew logo!\n\n\tRedaction options:\n\t\t- New \"don't redact text\" option\n\t\t- New \"redact line art\" option\n\n\tStructured Text options:\n\t\t- Use \"Tagged PDF\" structure information\n\t\t- Detect underlines and strikeouts\n\t\t- Mark automatically inserted spaces\n\t\t- Mark areas where line art (vectors) are present\n\t\t- Use accurate glyph bounding boxes\n\t\t- Ignore ActualText tags\n\t\t- Scan page for 'grid' lines\n\t\t- Segment page into areas (headers, columns, etc)\n\n\tAnnotation features:\n\t\t- Intent property accessors.\n\t\t- Rich Content styling on FreeText annotations.\n\t\t- Callout arrows on FreeText annotations.\n\t\t- Leader Line and Caption on Line annotations.\n\t\t- Improved handling of Rect and RD.\n\n\tLow level FDF format support.\n\t\t- See docs/examples/import-fdf.js for how to use.\n\n\tImproved FileSpec handling with new functions.\n\n\tFunctions for listing document and page Associated Files (AF).\n\n\tFunctions to create and write XML DOM trees (fz_xml).\n\n\tSkew detection and deskew algorithms on pixmaps and PDFOCR device.\n\n\tDocument area detection in scanned images.\n\n\tZUGFeRD support.\n\n\tNew tool \"mutool audit\" to create summary of PDF file composition.\n\n\tNoteworthy API changes:\n\t\t- New \"wants_file\" member for fz_document_handler.\n\t\t- fz_text_item now has an explicit pen \"advance\" member.\n\t\t- mutool recolor can now be used as a function.\n\t\t- pdf_annot_rect works with the \"design\" rectangle.\n\t\t- structured text \"color\" field renamed to \"argb\" and now includes alpha channel\n\n\tImportant bug fixes:\n\t\t- More robust font subsetting.\n\t\t- More robust handling of page and annotation objects during\n\t\t  undo and redo.\n\t\t- Updated \"gray.icc\" profile to actual sGray gamma ramp.\n\n\tSupport for \"SmartOffice\" commercially licensed plugin to load office\n\tdocuments.\n\nList of changes in MuPDF 1.24\n\n\tError handling changes:\n\n\t\tYou must call pdf_report_error in the final fz_catch. Any\n\t\tunreported errors will be automatically reported when a new\n\t\terror is raised, or when closing the fitz context.\n\n\n\tNew formats:\n\n\t\tRead Office (XML) files! We internally open and convert\n\t\tdocx/pptx/xlsx documents to HTML to allow reading the plain\n\t\ttext content. The exact layout will NOT be preserved.\n\n\t\tOptional compile time option to use libarchive for reading CBR\n\t\tand other archive formats.\n\n\t\tRead plain text documents.\n\n\t\tRead gzipped files directly.\n\n\t\tOpen and read FDF files to support importing annotations or\n\t\tform data using the low-level PDF functions. There are no tools\n\t\tfor this yet.\n\n\t\tRead CFB (Compound File Binary) format archives -- used for the\n\t\tOffice formats.\n\n\t\tWrite images as JPEG2000.\n\n\tNew tools and features:\n\n\t\tmutool bake (and associated functions) to bake appearance of\n\t\tannotations and forms into static content.\n\n\t\tFont subsetting flag to mutool clean (EXPERIMENTAL FEATURE).\n\n\t\tOption to use ObjStms when writing PDF files.\n\n\t\tCompression effort option when writing PDF files.\n\n\t\tAdd option to control how line art is affected by redaction.\n\t\tAdd more options to control how images are affected by\n\t\tredaction (remove-unless-invisible).\n\n\t\tFix up q/Q gstate balance when cleaning content streams.\n\n\tNew functions and types:\n\n\t\tpdf_rearrange_pages to subset or re-order pages in a PDF file.\n\n\t\tfz_invert_bitmap to invert monochrome bitmaps.\n\n\t\tfz_compressed_image_type to query the format of a compressed\n\t\timage.\n\n\t\tfz_text_decoder to convert various legacy and CJK encodings\n\t\tinto UTF-8.\n\n\t\tMore helper functions to easily manipulate PDF objects in C.\n\n\t\tAdd flag to control fz_place_story overflow behavior when the\n\t\ttext doesn't fit into the box.\n\n\t\tNew archive handlers can be added at runtime.\n\n\tMajor bug fixes and improvements:\n\n\t\tSupport using Art, Bleed, Media, and Trim boxes for PDF page\n\t\tsize.\n\n\t\tSupport ActualText in PDF! No more strange text extraction when\n\t\tthe file uses ActualText to patch over bad font encodings.\n\n\t\tAdd special TrueType fallback encoding CMap for a specific\n\t\tflavor of broken PDF files that use an \"identity\" encoding\n\t\twithout embedding the font.\n\n\t\tLimited \"transfer function\" support in PDF. Transfer functions\n\t\tare a deprecated legacy PDF feature that predates proper color\n\t\tmanagement. They were intended to provide limited color\n\t\tmanagement such as applying a gamma curve. Transfer functions\n\t\thave often been (ab)-used to invert images, and many PDF\n\t\tcreators use them when writing softmask images. We have added\n\t\tsupport for this case only.\n\n\t\tBox drawing characters added to fonts for HTML and plain text\n\t\tdocuments.\n\n\t\tWrite more compact PDF files (removed some unneccessary\n\t\twhitespace).\n\n\t\tImproved selection behavior for non-axis aligned text.\n\n\t\tImproved heuristics for detecting the logical and visual order\n\t\tof RTL text in PDF.\n\n\t\tImproved heuristics for inserting missing spaces in PDF text.\n\n\t\tImproved handling of CMYK JPEG files (which ones are inverted\n\t\tand which are not).\n\n\t\tImproved content type detection. Don't assume everything is PDF\n\t\twhen we can't recognize it.\n\n\tRemoved deprecated functions:\n\t\tpdf_check_signature\n\nList of changes in MuPDF 1.23.0\n\n\tNew features:\n\t\tNew WASM library with same API as mutool run and Java, for both browser and Node environments.\n\t\tSupport CropBox, TrimBox, BleedBox, and ArtBox in PDF tools and viewers.\n\t\tPhotoShop PSD image support.\n\t\tmupdf-gl: Custom ICC display profile support.\n\t\tmutool poster: Option to split in RTL direction.\n\n\tMiscellaneous improvements and notable bug fixes:\n\t\tEPUB: Fix table cell height calculations.\n\t\tEPUB: Inherit table cell background color from table row.\n\t\tEPUB: Support files with partial encryption (only read unencrypted parts).\n\t\tEPUB: Support files with incorrect directory prefixes.\n\t\tTIFF: Stability improvements.\n\t\tMOBI: Stability improvements.\n\t\tPDF: Support old style border dash patterns.\n\t\tPDF: Support GoToR links to remote PDF documents.\n\t\tPDF: Improve link parsing and creation.\n\t\tZIP: Improve unicode file name handling.\n\t\tFall back to unhinted fonts if hints are broken.\n\t\tRecognize document types by sniffing contents (don't need to rely on mimetype or file extension).\n\n\tNew APIs:\n\t\tMore PDF document permission flags.\n\t\tTweaked exception error logging.\n\t\tpdf_minimize_document to squeeze amount of memory used by an open document.\n\n\tIncompatible API changes:\n\t\tpdf_field_name renamed to pdf_load_field_name.\n\t\tmutool run -- changed many methods to match Java and new WASM library.\n\n\tNew and improved documentation.\n\nList of changes in MuPDF 1.22.0\n\n\tNew command line \"mutool recolor\" to change colorspace of PDF files.\n\tNew command line \"mutool trim\" to remove content outside mediabox.\n\tNew flag to \"mutool draw\": -KK to remove all non-textual content.\n\n\tSupport PDF page labels.\n\n\tLayout HTML tables with variable column widths.\n\n\tAdded JPEG output format. JPEG should be used with care due to its\n\tlossy nature (if in doubt, use PDF instead).\n\n\tAdded PDF filter factories.\n\tAdded PDF color filter.\n\tAdded \"culler\" to sanitize filter.\n\tAdded flags to control embedding fonts in output.\n\tNew device methods for structured tags.\n\tIncreased maximum allowed image size.\n\tAdd magic flag to temporarily hide annotations when editing them.\n\n\tSupport RD in Square and Circle annotations.\n\tSupport dashed borders in annotations.\n\tSupport cloudy borders in annotations.\n\tImproved layers in PDF files.\n\tFix performance issue with large PDF files and outlines.\n\n\tUpdated multi-threading examples.\n\n\tMoved WASM project into separate repository.\n\n\tAdded Java and \"mutool run\" bindings for many more functions.\n\nList of changes in MuPDF 1.21.0\n\n\tAdded MOBI input format support.\n\tAdded Story API for creating PDF documents from formatted text.\n\tAdded API to create, edit, and delete links.\n\n\tSupport custom images for Stamp annotations.\n\tSupport interior color on Polygon annotations.\n\tSupport line endings on PolyLine annotations.\n\n\tImproved SVG output.\n\n\tC++/Python/C# binding:\n\t\tChanges to naming of wrapper functions and classes.\n\t\tAdded limited support for callbacks into Python, using SWIG Directors.\n\nList of changes in MuPDF 1.20.0\n\n\tExperimental C# bindings.\n\tCross compilation should no longer need a host compiler.\n\tMajor additions to JNI bindings.\n\n\tNew API to edit outline\n\tNew API to resolve and create links\n\tNew API to toggle individual layers in PDF\n\t\tLayer panel in mupdf-gl\n\t\tLayer option in mutool draw\n\tNew API to add a Javascript console\n\t\tConsole panel in mupdf-gl\n\n\tText search API extended to be able to distinguish between separate search hits.\n\n\tCommand line tool improvements:\n\t\tall: Negative page numbers to index from the last page\n\t\tmutool draw: Add option to render document without text\n\t\tmutool draw and convert: Support DPI option in text and HTML output\n\n\tNew hybrid HTML output format using \"scripts/pdftohtml\" script:\n\t\tGraphics in a background image\n\t\tText on top\n\n\tImproved WASM viewer demo\n\t\tSupport high DPI screens\n\t\tProgressive loading\n\n\tUpdate to zlib 1.2.12 for security fix.\n\n\tToo many bug fixes to list.\n\nList of changes in MuPDF 1.19.0\n\n\tRemoved support for Luratech JBIG2 and JPEG2000 decoders.\n\n\tAdded 'extract' library for more output options:\n\t\tAdded DOCX output format\n\t\tAdded ODT output format\n\n\tNotable new features:\n\t\tJournal for undo and redo\n\t\tSnapshot for auto-save and restore (for backgrounding mobile apps)\n\t\tReflow document wrapper\n\t\tRollover appearance for annotations and widgets\n\t\tCustomize appearance of signed digital signatures\n\t\tProgress and cancel callbacks to OCR functions\n\t\tCreate signature form fields\n\n\tMinor new features:\n\t\tSupport CJK fonts in pdfwrite output\n\t\tSupport JBIG2 images in pdfwrite output\n\t\tSupport opacity for all markup annotation types\n\t\tHigh-DPI aware UI in mupdf-gl\n\t\tmutool extract -a option to embed SMasks as alpha channel\n\n\tAPI changes:\n\t\tRemoved pdf_widget type alias (was always same as pdf_annot)\n\t\tUpdated annotation 'dirty' logic\n\t\tFix typo in function and type names: designated name -> distinguished name\n\t\tMore functions available to 'mutool run'\n\t\tMore functions available to Java library\n\n\tNew unicode scripts and fonts for EPUB:\n\t\tDogra, Elymaic, Gondi, Hanifi Rohingya, Masaram Gondi,\n\t\tMedefaidrin, Nushu, Nyiakeng Puachue Hmong, Old Sogdian,\n\t\tSogdian, Soyombo, Wancho, Yezidi, and Zanabazar Square.\n\n\tC++ and Python bindings:\n\t\tC++ and Python bindings now work on Windows.\n\t\tPython bindings are available as pre-built binaries on pypi.org.\n\t\tAdded demo PDF viewer using the Python MuPDF bindings and PyQt.\n\n\t\tBetter access to data in generated wrapper classes.\n\t\tImproved handling of out-parameters in generated Python.\n\t\tText representation of POD types via C++ operator<< and Python str().\n\t\tFixed ref-counting bug in iterators.\n\t\tUpdates for new MuPDF functions.\n\nList of changes in MuPDF 1.18.0\n\n\tmutool draw: bbox output format.\n\tmutool draw: structured text extraction in JSON format.\n\tmutool run: StructuredText.walk()\n\tmutool run: PDFPage.process() and PDFAnnotation.process()\n\n\tmupdf-gl: Added IBM Common User Access shortcuts for copy & paste.\n\tmupdf-gl: Improved redaction UI.\n\n\tjava: Example desktop Java viewer.\n\n\twasm: WebAssembly viewer that runs in a browser.\n\n\tapi: Dehyphenation option in structured text extraction, to improve\n\t\tsearching for words that are hyphenated across lines.\n\tapi: pdf_new_date, pdf_to_date, pdf_dict_put_date and pdf_dict_get_date.\n\tapi: Added choice of image redaction algorithms: none, full, partial.\n\tapi: Optional use of Tesseract to use OCR to extract text.\n\n\tsvg: Many small parsing fixes.\n\tsvg: Parse inline CSS style attributes.\n\tsvg: Text elements (simple text layout only).\n\n\thtml: Added HTML5 parser.\n\n\tpdf: High security redaction -- save redacted PDF as flattened bitmap,\n\t\tguaranteed to not leak any sensitive redacted information.\n\n\tExperimental C++ bindings.\n\tExperimental Python bindings.\n\nList of changes in MuPDF 1.17.0\n\n\tapi: Improved accessors for markup/ink/polygon annotation data.\n\tapi: Chapter based API for faster EPUB loading.\n\tapi: Add more documentation to header files.\n\tapi: Improved digital signature signing and verification.\n\tapi: Validate changes in a signed PDF file.\n\n\tbuild: Moved windows build to VS2019 solution.\n\n\tpdf: Redaction now works on images and links as well as text.\n\tpdf: Greek, Cyrillic, Chinese, Japanese, and Korean scripts in forms and annotations.\n\tpdf: File attachment annotations.\n\tpdf: Use CCITT Fax compression for 1-bit images when creating PDF files.\n\n\tepub: More forgiving XHTML parsing.\n\tepub: Accelerator files to cache chapter data for faster EPUB loading.\n\tepub: Optimized memory use.\n\n\tmutool run: Edit Markup, Ink, and Polygon annotation data.\n\tmutool run: Fill out form fields.\n\tviewer: Ask for confirmation before closing a PDF with unsaved changes.\n\tviewer: Embed and extract file attachment annotations.\n\n\tlibrary: Miscellaneous bugfixes.\n\tlibrary: Fixes to store operation.\n\n\tthirdparty: Updated Harfbuzz to 2.6.4.\n\tthirdparty: Updated jbig2dec to 0.18.\n\tthirdparty: Updated MuJS to 1.0.7.\n\tthirdparty: Updated OpenJPEG to 2.3.1.\n\tthirdparty: Updated cURL to 7.66.0 (windows only).\n\nList of changes in MuPDF 1.16.1\n\n\tmupdf-x11: Changed key bindings to match mupdf-gl.\n\tmupdf-x11: Invert by luminance for dark mode.\n\tandroid: Fix compilation error.\n\nList of changes in MuPDF 1.16.0\n\n\tapi: Major overhaul of color management architecture.\n\tapi: Improved functions to verify/sign PDF documents.\n\tapi: Number tree accessor function pdf_lookup_number.\n\tapi: Parse and handle more options for PWG output.\n\tapi: Removed obsolete gproof document type.\n\tapi: User callbacks for warning and error messages.\n\n\tepub: Changed default page size to A5.\n\tepub: Draw embedded SVG documents in EPUB/XHTML.\n\tepub: New Noto fonts covering more unicode scripts.\n\tepub: Support small-caps font-variant.\n\tpdf: Add Redact annotation type and function to apply redactions.\n\tpdf: Add/remove/change encryption and password when saving PDF files.\n\tpdf: Improvements to text handling in PDF filter processor.\n\tpdf: MP and DP operators now call begin/end_layer device methods.\n\tpdf: New and improved progressive loading.\n\tsvg: Draw external images in SVG documents.\n\n\tmutool show: Add 'form' selector to list PDF form fields.\n\tmutool sign: Sign PDF documents from the command line.\n\tmutool sign: Verify signatures in PDF documents from the command line.\n\tviewer: Option to save a script of user actions for replay with mutool run.\n\tviewer: Runtime toggle for ICC and spot rendering.\n\tviewer: Tooltip when hovering over a link in mupdf-gl.\n\nList of changes in MuPDF 1.15.0\n\nGeneral improvements:\n\t* WebAssembly build target and examples.\n\t* Improved forms API in both C and Java bindings.\n\t* Improved forms JavaScript support.\n\t* Create appearance streams for more form field types.\n\t* Fixed many bugs in ICC color management.\n\t* Fixed many memory leaks in error cleanup.\n\t* Fixed bugs in pdfwrite output.\n\t* Improved text extraction from LaTeX documents with math symbols.\n\t* Improved trace device formatting.\n\t* Support CBZ and CBT files larger than 2Gb.\n\t* Show table of contents for FB2 and XHTML documents.\n\t* Show embedded raster images in SVG and XHTML documents.\n\t* Show FB2 cover page.\n\t* Add option to save PDF files without encryption.\n\t* Add inhibit-spaces option to stext device to turn off missing space detection.\n\t* Simplified fz_try/fz_always/fz_catch macros.\n\nmupdf-gl improvements:\n\t* Automatically open annotation editor when selecting an annotation.\n\t* Full page color tinting option in mupdf-gl.\n\t* Show/hide table of contents sections.\n\t* Trigger a reload with sighup.\n\t* Toggle spot color mode with 'e'.\n\nmutool improvements:\n\tmutool show $PDF outline -- show outline with open/closed state indicator.\n\tmutool show $PDF js -- show document level javascript.\n\tmutool clean -A -- create appearance streams when missing.\n\tmutool clean -AA -- recreate all appearance streams.\n\tmutool run docs/examples/portfolio.js -- extract embedded files from PDF document.\n\tmutool run docs/examples/pdf-dejpx.js -- decompress JPEG2000 images in PDF document.\n\tmutool run docs/examples/fix-s22pdf.js -- fix fonts in documents generated by S22PDF.\n\nSignificant API changes:\n\t* New and improved forms API.\n\t* Renamed -DNO_ICC to -DFZ_ENABLE_ICC=0\n\t* Removed fz_annot superclass. Use pdf_annot and pdf_widget directly instead.\n\t* Annotations and Widgets now have separate enumerators.\n\t* Added optional separations argument to pixmap rendering utility functions.\n\nVarious cleanups:\n\tPer-function documentation comments moved to the source file.\n\tHopefully they will stay up to date more often than when they\n\twere hidden away in the header file.\n\n\tRemoved unused internal testing tools: mjsgen and jstest.\n\n\tRemoved TGA output support. Use one of the more common and useful PAM,\n\tPNM, PNG, or TIFF formats instead.\n\n\tRemoved support for PDF portfolios. This work-in-progress feature was\n\tnever completed, and only worked for a small subset of files.\n\n\tRemoved support for progressive loading. This rarely used feature added\n\ta lot of complexity and was an unending source of bugs and strange\n\tbehaviour. Removing this feature has allowed us to clean up and\n\tsimplify large amounts of code, and fix dozens of bugs in one fell\n\tswoop.\n\nList of changes in MuPDF 1.14.0\n\n* New features:\n\t* Added \"Source Han Serif\" CJK fallback font.\n\t* Added more scripts to the Noto fallback fonts.\n\t* Multi-page PNM support.\n\t* \"mutool show\" now supports a path syntax for selecting objects to show.\n\n* Build system simplifications:\n\t* Auto-generated CMap, ICC, and JS source files are checked in to git.\n\t* Embedded CMap resources are now generated by a python script.\n\t* Embedded font resources are linked directly if using GNU ld or windows.\n\t* Namegen tool replaced by use of C macros.\n\t* Simplified Makefile.\n\n* Annotation editing:\n\t* New annotation editing mode in mupdf-gl.\n\t* Can create, edit, and delete most annotation types.\n\t* Can create appearance streams for most annotation types.\n\t* Can create appearance streams for Tx form fields.\n\t* Can create appearance streams for Ch form fields.\n\n* Form filling in mupdf-gl:\n\t* Can click buttons, checkboxes, and radioboxes.\n\t* Can fill out text fields using dialog box.\n\t* Can select choice options using dialog box.\n\t* Can verify and sign digital signatures.\n\n* Improved UI for mupdf-gl:\n\t* Password dialog.\n\t* Error dialog.\n\t* Open/save file dialog.\n\t* Snap selection to words or lines by holding control or control+shift.\n\t* Save and restore current location, bookmarks, and navigation history.\n\n* Bug fixes:\n\t* Improved CJK character fallback handling in EPUB.\n\n* API changes:\n\t* Pass rectangle and matrix structs by value.\n\t* Replaced PDF_NAME_Xxx macros with PDF_NAME(Xxx).\n\t* Added PDF_TRUE, PDF_FALSE, and PDF_NULL constant pdf_obj* macros.\n\t* Added helper functions: pdf_dict_get_int, etc.\n\t* Removed 'doc' argument in pdf_new_int, etc.\n\t* Quads instead of rects when highlighting and searching text.\n\t* mutool run: Pass arguments to script in scriptArgs global.\n\nList of changes in MuPDF 1.13.0\n\n* This is primarily a bugfix release.\n\n* New \"mutool sign\" tool for showing and verifying digital signatures.\n* Chinese, Japanese, Korean, Cyrillic, and Greek font support in mutool create.\n* Improvements to annotation editing API.\n\nList of changes in MuPDF 1.12.0\n\n* New Android SDK:\n\tNew git repositories for the SDK projects:\n\t\t* mupdf-android-fitz.git has the JNI bindings in a library.\n\t\t* mupdf-android-viewer.git has the viewer as an activity in a library.\n\t\t* mupdf-android-viewer-mini.git has the minimalist viewer as an activity in a library.\n\tBinary packages in our Maven repository at http://maven.ghostscript.com:\n\t\t* com.artifex.mupdf:fitz:1.12.+\n\t\t* com.artifex.mupdf:viewer:1.12.+\n\t\t* com.artifex.mupdf:mini:1.12.+\n\n* Color management:\n\t* LCMS2 library for color management.\n\t* CMYK rendering with overprint simulation.\n\t* Spot color rendering.\n\t* Transparency rendering fixes.\n\n* Structured text output improvements:\n\t* Reworked structured text API.\n\t* Faster text searching.\n\t* Highlight and copy text by selecting lines instead of by area.\n\t* New semantic XHTML output format.\n\t* New layout preserving HTML output format.\n\n* Features and improvements:\n\t* Improved non-AA rendering with new scan converter.\n\t* Improved LARGEFILE support.\n\t* Improved TIFF support.\n\t* Improved documentation.\n\t* PCLm output.\n\t* PSD output.\n\t* New \"mutool trace\" tool.\n\t* New \"mutool sign\" tool (work in progress).\n\t* Text redaction (work in progress).\n\n* Lots of bug fixes.\n\nList of changes in MuPDF 1.11\n\n* This is primarily a bug fix release.\n\n* Split Android and iOS viewers into separate projects:\n\t* mupdf-viewer-ios.git has the iOS viewer.\n\t* mupdf-viewer-android-old.git has the Android viewer.\n\t* mupdf-viewer-android-nui.git has a new advanced Android viewer.\n\t* mupdf-viewer-android-mini.git has a new minimalist Android viewer.\n\n* PDF portfolio support with command line tool \"mutool portfolio\".\n* Add callbacks to load fallback fonts from the system.\n* Use system fonts in Android to reduce install size.\n* Flag to disable publisher styles in EPUB layout.\n* Improved SVG output.\n\nList of changes in MuPDF 1.10\n\n* Headline changes:\n\t* FictionBook (FB2) e-book support.\n\t* Simple SVG parser (a small subset of SVG only).\n\t* mutool convert: a new document conversion tool and interface.\n\t* Multi-threaded rendering in mudraw.\n\t* Luratech decoders for JBIG2 and JPEG2000 (commercial releases only).\n\t* Optional JPEG-XR support (not included by default for security reasons).\n\t* Updated base 14 fonts from URW.\n\t* New CJK font with language specific variants.\n\t* Hyperlink support in EPUB.\n\n* Reduced memory use:\n\t* New tool muraster: example printer driver with limited RAM usage and automatic banding.\n\t* Alpha channel is now optional in pixmaps.\n\t* More aggressive purging of cached objects.\n\t* Partial image decoding for lower memory use when banding.\n\n* Reduced code size when building with a subset of features:\n\t* Reduced default set of built-in CMap tables to the minimum required.\n\t* FZ_ENABLE_PDF, _XPS, _JS, to disable features at compile time.\n\t* Function level linking.\n\n* Interface changes and cleanups:\n\t* Dropped pdf object generation numbers from public interfaces.\n\t* Simplified PDF page, xobject, and annotation internals.\n\t* Closing and freeing devices and writers are now separate steps.\n\t* Improved PDF annotation editing interface (still a work in progress).\n\t* Document writer interface.\n\t* Banded image writer interface.\n\n* Mobile viewers:\n\t* New JNI interfaces to match capabilities of 'mutool run' javascript.\n\t* New android and desktop java examples using new JNI interface.\n\nList of changes in MuPDF 1.9\n\n* Headline changes:\n\t* New command line tools: create and run.\n\t* New low-level Java interface for desktop and android.\n\t* Bidirectional layout for Arabic and Hebrew scripts.\n\t* Shaping complex scripts for EPUB text layout.\n\t* Noto fallback fonts for EPUB layout.\n\n* mutool create\n\tCreate new PDF files from scratch.\n\tRead an annotated content stream in a text file and write a PDF file,\n\tautomatically embedding font and image resources.\n\n* mutool run\n\tRun javascript scripts with MuPDF bindings.\n\tThe interface is similar to the new Java interface.\n\n* mutool draw\n\tOptional multi-threaded operation (Windows and pthreads).\n\tOptional low memory mode (primarily for testing).\n\nList of changes in MuPDF 1.8\n\n* Headline changes:\n\t* New OpenGL-based barebones desktop viewer.\n\t* New URW fonts with greek and cyrillic.\n\t* 64-bit file support.\n\t* Ghostscript proofing mode (source only; not in shipped binaries).\n\n* EPUB improvements:\n\t* User style sheets.\n\t* GIF images (also for CBZ).\n\t* Table of contents.\n\t* CJK text.\n\t* Page margins.\n\t* Many bug fixes.\n\n* Bug fixes:\n\t* Updated FreeType to version 2.6.1.\n\t* Various font substitution bug fixes.\n\t* Fix setjmp/longjmp behaviour which could cause optimizing compilers to misbehave.\n\nList of changes in MuPDF 1.7a\n\n* Bugfixes\n\t* Fixed bug that allocated too much memory when packing paths.\n\t* Fixed EPUB font scaling bug.\n\t* Fixed EPUB file type handling in viewers.\n\t* Improved tolerance for broken and unsupported CSS.\n\n* Features\n\t* Added mudraw -z option to compress output streams.\n\nList of changes in MuPDF 1.7\n\n* Headline changes:\n\t* New 'Indie dev' licensing options - contact sales@artifex.com for more details.\n\t* New HTML layout engine, and (DRM-free) EPUB viewer.\n\t* Reduced memory usage - displaylists and internal PDF representation take much less memory, reducing total memory use on some files by over 60%.\n\n* Important API changes:\n\t* Bound contexts have been removed; we now pass fz_contexts explicitly.\n\t* Reference counting of paths and text structures.\n\n* Features:\n\t* Add mutool pages option.\n\t* Tweaked rendering to prevent feature dropout in common cases.\n\t* Viewer tweaks\n\t\t* Better mouse wheel handling\n\t\t* Shift-space support\n\t\t* Mouse button control of presentation mode\n\n* Internal changes:\n\t* Removal of bound contexts; fz_contexts now passed explicitly everywhere.\n\t* PDF filter revamp - simpler interface.\n\t* Devices use derived structures rather than user pointer.\n\t* Sparse PDF xrefs held in more compact form.\n\t* New gsview viewer split out to its own repository.\n\n* Bug fixes\n\t* Improved handling of broken files.\n\t* Fix BBoxes of Type 3 fonts.\n\t* Updated fonts (including greek and cyrillic).\n\t* Various memory leaks and crashes.\n\t* And many more.\n\n\nList of changes in MuPDF 1.6\n\n* Features:\n\t* Color detection device (mudraw -T).\n\t* Sepia mode full-page color tinting in X11 and win32 viewer (keybinding: shift-C).\n\t* Re-implement printf and strtod due to portability issue with locales and number formatting.\n\t* Add 'gsview' project: a Windows Modern UI viewer.\n\t* Improve XML parser interface.\n* Bug fixes:\n\t* CBZ page ordering\n\t* ZIP64 support\n\t* iOS and Android bug fixes\n\t* Miscellaneous minor fixes\n\n\nList of changes in MuPDF 1.5\n\n* Bug fixes.\n\n\nList of changes in MuPDF 1.4\n\n* Headline changes:\n\t* CMYK rendering (mudraw PWG and PAM formats)\n\t* TIFF viewer (with multi-page support).\n\t* Added MuJS Javascript interpreter.\n\t\t* MuJS is the default, V8 and JavaScriptCore are compile time options.\n\t\t* Javascript support has to be explicitly enabled with pdf_enable_js.\n\t\t* All viewers now have JavaScript enabled in the default builds.\n* Viewers:\n\t* X11: Horizontal scroll wheel support.\n\t* X11: Status bar display with warnings.\n\t* Android: Digital signatures.\n\t* iOS: Links, form filling, annotation editing, and javascript.\n\t* iOS: Reflow mode.\n\t* WinRT: Printing.\n\t* WinRT: Improved zooming behaviour.\n* Tools:\n\t* mudraw: Banded rendering with -B /band-height/.\n\t* mudraw: Select output format with -F /format/.\n\t* mudraw: Write to stdout if you use '-' as the output file name.\n\t* mudraw: Add TGA output format.\n\t* mudraw: Improved SVG output.\n\t* mutool show: Write output to file instead of stdout with -o /filename/.\n\t* mutool clean: Clean content streams with -s option.\n* Annotations:\n\t* Improved font handling.\n\t* Form fields.\n\t* Free text.\n\t* Sticky notes.\n* Optimizations:\n\t* glyph cache: Partial eviction.\n\t* glyph cache: Run-length compressed glyphs.\n\t* Smarter handling of subpixel metrics in text rendering.\n\t* Optimized blitting functions.\n\t* Optimized gradient mesh drawing.\n* API changes and additions:\n\t* fz_stream API reworked: replace \"read\" function with \"next\".\n\t* \"Rebind\" functions to associate context bound objects with another context:\n\t\tfz_output, fz_stream, fz_device and fz_document.\n\t* Introduce \"document handlers\" to detect and open different file types.\n\t\t* Must now call fz_register_document_handlers() to register the defaults.\n\t\t* May register your own handlers as well to work with fz_open_document.\n\t* Hook to load system fonts: fz_install_load_system_font_funcs.\n\t* PDF xref cache flushing functions (mark/clear/clear-to-mark).\n\t* Add our own \"printf\" set of functions to format strings and write to fz_output:\n\t\t* Format %f as short as possible while preserving precision.\n\t\t* Has %C for formatting a unicode character as UTF-8.\n\t\t* Has %M to format fz_matrix.\n\t\t* Has %R to format fz_rect.\n\t\t* Has %q and %( to format strings with escaped characters.\n\t* PDF process interface: allow PDF interpreter to do more than just draw!\n\t\t* Content stream state cleaning filter.\n\t\t* Content stream rewriting filter.\n\t* PDF digital signatures.\n\t* Stroke states may now be stored on the stack.\n\t* Improved fz_path internals.\n\t* Gradient mesh drawing interface has been improved.\n\t* Save files with incremental updates.\n\n\nList of changes in MuPDF 1.3\n\n * Windows RT viewer app for MuPDF.\n * Library changes to support progressive loading (display PDF files as\n   they download). Windows/Linux/MacOS viewer supports this using curl.\n * Incremental updates to PDF files are now (optionally) preserved on\n   loading/saving.\n * Prototype support for checking PDF Digital Signatures.\n * Initial annotation support (strike-out, underline, highlight and ink)\n   (library and android builds only).\n * Fix operation on Android API level 8.\n * Android redraw optimisations.\n * Android app now supports Google Cloud Print.\n * Android app translated into many languages.\n * Android support for more architectures.\n * Improvements to store (avoid collisions causing unnecessary evictions).\n * Windows apps use Unicode filenames now.\n * PDF function handling improved; functions can now be passed to devices\n   without 'sampling'.\n * PDF image handling improved; images can now be passed to devices\n   without decompression.\n * Indexed images are no longer uncompressed at load time, saving memory.\n * Caching of rendered tiles for speed.\n * Improved text analysis mode, capable of spotting columns/indents,\n   right-to-left text etc.\n * HTML output mode now includes image output.\n * PDF password encoding handling improved.\n * MuPDF now opens Jpeg, Tiff and PNG files directly.\n * Bug preventing OpenXPS files from being opened fixed.\n * Initial (feature incomplete) SVG and PDF output devices.\n * PWG raster (mono/grey/RGB) and PCL (mono) output devices.\n * Various performance improvements (including tilings and mesh based\n   shadings).\n * Revamped directory structure to reflect recent changes.\n * Various potential SEGV, SoftMask and rendering fixes.\n * Many potential crashes in Jpeg2000 and JBIG2 images fixed.\n\n\nList of changes in MuPDF 1.2\n\n * Important API changes:\n    * fz_bbox is now fz_irect.\n    * APIs (including fz_device) now pass fz_rect/fz_matrix by reference.\n    * fz_device API is now more consistent with regards to use of\n      fz_rect rather than fz_bbox.\n * Add support for Javascript and forms handling.\n * Fix many SEGVs with out of spec files. Many thanks to Mateusz \"j00ru\"\n   Jurczyk and Gynvael Coldwind of the Google Security team, zeniko,\n   Sebastian Rasmussen and all other contributors.\n * Add fz_open_document_with_stream to allow non-file based operation.\n * Move to using git submodules for third party libraries.\n * Much enhanced Android application. Now on Google Play!\n * Oversized and stroke text clipping implemented.\n * Change shadings to decompose at render times; massive memory savings.\n * Renamed 'mubusy' to 'mutool'.\n * PDF 1.7 Extension Level 8 encryption implemented.\n * Added consts to various parts of the API to help C++ interworking.\n * Prototype transition support.\n * Text searching API moved to fitz.\n * Highlight and copy text selections.\n * Performance enhancements for color conversion and fax decompression.\n * ARM optimisations for color conversion and bitmap scaling.\n * Bitmap subsampling stage introduced, with ARM optimisations.\n * Type 3 fonts; glyphs are now handled as display lists.\n * Scan converter performance improvements.\n * Various rendering fixes.\n\n\nList of changes in MuPDF 1.1\n\n * Rendering bugs fixed (text clipping, stroked text etc).\n * Better handling of 'large' (uncachable) glyphs.\n * Added a delete button to the library view on the iOS port.\n * Minor speed optimisations.\n * Shading bug fixes.\n * Move to using dynamically allocated parsing buffers (more resilient).\n * Support for UserUnits.\n * Fix bugs with image predictors (including with 16 bit images).\n * More resilient to out of spec files.\n * Extract pdf writing capability into the library from pdfclean, and\n   expand on it to allow for linearisation. Bug fixes in the garbage\n   collection of unused objects.\n * Improve pdf writing recognition of images.\n * Improved font matching.\n * Start to move away from macros to inline functions (helpful for\n   applications requiring certification).\n * Many bugs fixed.\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 0.470703125,
          "content": "MuPDF was developed by Artifex Software, who own the copyright.\nAlong the way various patches for bug fixes and features were\ncontributed by many outside developers. We are grateful for\nthese contributions, and while privacy/brevity/confidentiality\nprevent us from listing everyone here, we would like to thank\nthe following in particular:\n\n * Simon Bünzli (zeniko, of the SumatraPDF project).\n\n * Krzysztof Kowalczyk (of the SumatraPDF project). \n\n * Sebastian Rasmussen (Sebras).\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 33.7109375,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 21.4580078125,
          "content": "# GNU Makefile\n\n-include user.make\n\nifndef build\n  build := release\nendif\n\ndefault: all\n\ninclude Makerules\n\nifndef OUT\n  OUT := build/$(build_prefix)$(build)$(build_suffix)\nendif\n\ninclude Makethird\n\n# --- Configuration ---\n\n# Do not specify CFLAGS, LDFLAGS, LIB_LDFLAGS, EXE_LDFLAGS or LIBS on the make\n# invocation line - specify XCFLAGS, XLDFLAGS, XLIB_LDFLAGS, XEXE_LDFLAGS or\n# XLIBS instead. Make ignores any lines in the makefile that set a variable\n# that was set on the command line.\nCFLAGS += $(XCFLAGS) -Iinclude\nLIBS += $(XLIBS) -lm\n\nLDFLAGS += $(XLDFLAGS)\nLIB_LDFLAGS += $(XLIB_LDFLAGS)\nEXE_LDFLAGS += $(XEXE_LDFLAGS)\n\nifneq ($(threading),no)\n  ifeq ($(HAVE_PTHREAD),yes)\n\tTHREADING_CFLAGS := $(PTHREAD_CFLAGS) -DHAVE_PTHREAD\n\tTHREADING_LIBS := $(PTHREAD_LIBS)\n  endif\nendif\n\nifeq ($(HAVE_WIN32),yes)\n  WIN32_LIBS := -lcomdlg32 -lgdi32\n  WIN32_LDFLAGS := -Wl,-subsystem,windows\nendif\n\nVERSION_MAJOR = $(shell grep \"define FZ_VERSION_MAJOR\" include/mupdf/fitz/version.h | cut -d ' ' -f 3)\nVERSION_MINOR = $(shell grep \"define FZ_VERSION_MINOR\" include/mupdf/fitz/version.h | cut -d ' ' -f 3)\nVERSION_PATCH = $(shell grep \"define FZ_VERSION_PATCH\" include/mupdf/fitz/version.h | cut -d ' ' -f 3)\n\nifeq ($(LINUX_OR_OPENBSD),yes)\n  ifneq ($(USE_SONAME),no)\n    SO_VERSION = .$(VERSION_MINOR).$(VERSION_PATCH)\n    ifeq ($(OS),Linux)\n      SO_VERSION_LINUX := yes\n    endif\n  endif\nendif\n\n# --- Commands ---\n\nifneq ($(verbose),yes)\n  QUIET_AR = @ echo \"    AR $@\" ;\n  QUIET_RANLIB = @ echo \"    RANLIB $@\" ;\n  QUIET_CC = @ echo \"    CC $@\" ;\n  QUIET_CXX = @ echo \"    CXX $@\" ;\n  QUIET_GEN = @ echo \"    GEN $@\" ;\n  QUIET_LINK = @ echo \"    LINK $@\" ;\n  QUIET_RM = @ echo \"    RM $@\" ;\n  QUIET_TAGS = @ echo \"    TAGS $@\" ;\n  QUIET_WINDRES = @ echo \"    WINDRES $@\" ;\n  QUIET_OBJCOPY = @ echo \"    OBJCOPY $@\" ;\n  QUIET_DLLTOOL = @ echo \"    DLLTOOL $@\" ;\n  QUIET_GENDEF = @ echo \"    GENDEF $@\" ;\nendif\n\nMKTGTDIR = mkdir -p $(dir $@)\nCC_CMD = $(QUIET_CC) $(MKTGTDIR) ; $(CC) $(CFLAGS) -MMD -MP -o $@ -c $<\nCXX_CMD = $(QUIET_CXX) $(MKTGTDIR) ; $(CXX) $(CFLAGS) $(XCXXFLAGS) -MMD -MP -o $@ -c $<\nAR_CMD = $(QUIET_AR) $(MKTGTDIR) ; $(AR) cr $@ $^\nifdef RANLIB\n  RANLIB_CMD = $(QUIET_RANLIB) $(RANLIB) $@\nendif\nLINK_CMD = $(QUIET_LINK) $(MKTGTDIR) ; $(CC) $(LDFLAGS) -o $@ $^ $(LIBS)\nTAGS_CMD = $(QUIET_TAGS) ctags\nWINDRES_CMD = $(QUIET_WINDRES) $(MKTGTDIR) ; $(WINDRES) $< $@\nOBJCOPY_CMD = $(QUIET_OBJCOPY) $(MKTGTDIR) ; $(LD) -r -b binary -z noexecstack -o $@ $<\nGENDEF_CMD = $(QUIET_GENDEF) gendef - $< > $@\nDLLTOOL_CMD = $(QUIET_DLLTOOL) dlltool -d $< -D $(notdir $(^:%.def=%.dll)) -l $@\n\nifeq ($(shared),yes)\nLINK_CMD = $(QUIET_LINK) $(MKTGTDIR) ; $(CC) $(LDFLAGS) -o $@ \\\n\t$(filter-out %.$(SO)$(SO_VERSION),$^) \\\n\t$(sort $(patsubst %,-L%,$(dir $(filter %.$(SO)$(SO_VERSION),$^)))) \\\n\t$(patsubst lib%.$(SO)$(SO_VERSION),-l%,$(notdir $(filter %.$(SO)$(SO_VERSION),$^))) \\\n\t$(LIBS)\nendif\n\n# --- Rules ---\n\n$(OUT)/%.a :\n\t$(AR_CMD)\n\t$(RANLIB_CMD)\n\n$(OUT)/%.exe: %.c\n\t$(LINK_CMD)\n\n$(OUT)/%.$(SO)$(SO_VERSION):\nifeq ($(SO_VERSION_LINUX),yes)\n\t$(LINK_CMD) -Wl,-soname,$(notdir $@) $(LIB_LDFLAGS) $(THIRD_LIBS) $(LIBCRYPTO_LIBS)\n\tln -sf $(notdir $@) $(patsubst %$(SO_VERSION), %, $@)\nelse\n\t$(LINK_CMD) $(LIB_LDFLAGS) $(THIRD_LIBS) $(LIBCRYPTO_LIBS)\nendif\n\n$(OUT)/%.def: $(OUT)/%.$(SO)$(SO_VERSION)\n\t$(GENDEF_CMD)\n\n$(OUT)/%_$(SO)$(SO_VERSION).a: $(OUT)/%.def\n\t$(DLLTOOL_CMD)\n\n$(OUT)/source/helpers/mu-threads/%.o : source/helpers/mu-threads/%.c\n\t$(CC_CMD) $(WARNING_CFLAGS) $(LIB_CFLAGS) $(THREADING_CFLAGS)\n\n$(OUT)/source/helpers/pkcs7/%.o : source/helpers/pkcs7/%.c\n\t$(CC_CMD) $(WARNING_CFLAGS) $(LIB_CFLAGS) $(LIBCRYPTO_CFLAGS)\n\n$(OUT)/source/tools/%.o : source/tools/%.c\n\t$(CC_CMD) $(LIB_CFLAGS) $(WARNING_CFLAGS) $(THIRD_CFLAGS) $(THREADING_CFLAGS)\n\n$(OUT)/generated/%.o : generated/%.c\n\t$(CC_CMD) $(WARNING_CFLAGS) $(LIB_CFLAGS) -O0\n\n$(OUT)/platform/x11/%.o : platform/x11/%.c\n\t$(CC_CMD) $(WARNING_CFLAGS) $(X11_CFLAGS)\n\n$(OUT)/platform/x11/curl/%.o : platform/x11/%.c\n\t$(CC_CMD) $(WARNING_CFLAGS) $(X11_CFLAGS) $(CURL_CFLAGS)\n\n$(OUT)/platform/gl/%.o : platform/gl/%.c\n\t$(CC_CMD) $(WARNING_CFLAGS) $(THIRD_CFLAGS) $(THIRD_GLUT_CFLAGS)\n\nifeq ($(HAVE_OBJCOPY),yes)\n  $(OUT)/source/fitz/noto.o : source/fitz/noto.c\n\t$(CC_CMD) $(WARNING_CFLAGS) -Wdeclaration-after-statement -DHAVE_OBJCOPY $(LIB_CFLAGS) $(THIRD_CFLAGS)\nendif\n\n$(OUT)/source/fitz/memento.o : source/fitz/memento.c\n\t$(CC_CMD) $(WARNING_CFLAGS) $(LIB_CFLAGS) $(THIRD_CFLAGS) -DMEMENTO_MUPDF_HACKS\n\n$(OUT)/source/%.o : source/%.c\n\t$(CC_CMD) $(WARNING_CFLAGS) -Wdeclaration-after-statement $(LIB_CFLAGS) $(THIRD_CFLAGS)\n\n$(OUT)/thirdparty/so/source/%.o : thirdparty/so/source/%.c\n\t$(CC_CMD) $(WARNING_CFLAGS) -Wdeclaration-after-statement $(LIB_CFLAGS) $(THIRD_CFLAGS)\n\n$(OUT)/source/%.o : source/%.cpp\n\t$(CXX_CMD) $(WARNING_CFLAGS) $(LIB_CFLAGS) $(THIRD_CFLAGS)\n\nifeq ($(HAVE_TESSERACT),yes)\n$(OUT)/source/fitz/tessocr.o : source/fitz/tessocr.cpp\n\t$(CXX_CMD) $(WARNING_CFLAGS) $(LIB_CFLAGS) $(THIRD_CFLAGS) $(TESSERACT_CFLAGS) $(TESSERACT_DEFINES) $(TESSERACT_LANGFLAGS)\nendif\n\nifeq ($(HAVE_LEPTONICA),yes)\n$(OUT)/source/fitz/leptonica-wrap.o : source/fitz/leptonica-wrap.c\n\t$(CC_CMD) $(WARNING_CFLAGS) $(LIB_CFLAGS) $(THIRD_CFLAGS) $(LEPTONICA_CFLAGS) $(LEPTONICA_DEFINES) $(LEPTONICA_BUILD_CFLAGS)\nendif\n\n$(OUT)/platform/%.o : platform/%.c\n\t$(CC_CMD) $(WARNING_CFLAGS)\n\n$(OUT)/%.o: %.rc\n\t$(WINDRES_CMD)\n\n.PRECIOUS : $(OUT)/%.o # Keep intermediates from chained rules\n.PRECIOUS : $(OUT)/%.exe # Keep intermediates from chained rules\n\n# --- File lists ---\n\nTHIRD_OBJ := $(THIRD_SRC:%.c=$(OUT)/%.o)\nTHIRD_OBJ := $(THIRD_OBJ:%.cc=$(OUT)/%.o)\nTHIRD_OBJ := $(THIRD_OBJ:%.cpp=$(OUT)/%.o)\n\nTHIRD_GLUT_OBJ := $(THIRD_GLUT_SRC:%.c=$(OUT)/%.o)\n\nMUPDF_SRC := $(sort $(wildcard source/fitz/*.c))\nMUPDF_SRC += $(sort $(wildcard source/fitz/*.cpp))\nMUPDF_SRC += $(sort $(wildcard source/pdf/*.c))\nMUPDF_SRC += $(sort $(wildcard source/xps/*.c))\nMUPDF_SRC += $(sort $(wildcard source/svg/*.c))\nMUPDF_SRC += $(sort $(wildcard source/html/*.c))\nMUPDF_SRC += $(sort $(wildcard source/reflow/*.c))\nMUPDF_SRC += $(sort $(wildcard source/cbz/*.c))\n\nMUPDF_OBJ := $(MUPDF_SRC:%.c=$(OUT)/%.o)\nMUPDF_OBJ := $(MUPDF_OBJ:%.cpp=$(OUT)/%.o)\n\nTHREAD_SRC := source/helpers/mu-threads/mu-threads.c\nTHREAD_OBJ := $(THREAD_SRC:%.c=$(OUT)/%.o)\n\nPKCS7_SRC += source/helpers/pkcs7/pkcs7-openssl.c\nPKCS7_OBJ := $(PKCS7_SRC:%.c=$(OUT)/%.o)\n\n# --- Generated embedded font files ---\n\nHEXDUMP_SH := scripts/hexdump.sh\n\nFONT_BIN := $(sort $(wildcard resources/fonts/urw/*.cff))\nFONT_BIN += $(sort $(wildcard resources/fonts/han/*.ttc))\nFONT_BIN += $(sort $(wildcard resources/fonts/droid/DroidSansFallbackFull.ttf))\nFONT_BIN += $(sort $(wildcard resources/fonts/droid/DroidSansFallback.ttf))\nFONT_BIN += $(sort $(wildcard resources/fonts/noto/*.otf))\nFONT_BIN += $(sort $(wildcard resources/fonts/noto/*.ttf))\nFONT_BIN += $(sort $(wildcard resources/fonts/sil/*.cff))\n\n# Note: The tests here must match the equivalent tests in noto.c\n\nifneq ($(filter -DTOFU_CJK,$(XCFLAGS)),)\n  FONT_BIN := $(filter-out resources/fonts/han/%.ttc, $(FONT_BIN))\n  FONT_BIN := $(filter-out resources/fonts/droid/DroidSansFallbackFull.ttf, $(FONT_BIN))\n  FONT_BIN := $(filter-out resources/fonts/droid/DroidSansFallback.ttf, $(FONT_BIN))\nendif\n\nifneq ($(filter -DTOFU_CJK_EXT,$(XCFLAGS)),)\n  FONT_BIN := $(filter-out resources/fonts/han/%.ttc, $(FONT_BIN))\n  FONT_BIN := $(filter-out resources/fonts/droid/DroidSansFallbackFull.ttf, $(FONT_BIN))\nendif\n\nifneq ($(filter -DTOFU_CJK_LANG,$(XCFLAGS)),)\n  FONT_BIN := $(filter-out resources/fonts/han/%.ttc, $(FONT_BIN))\nendif\n\nifneq ($(filter -DTOFU,$(XCFLAGS)),)\n  FONT_BIN := $(filter-out resources/fonts/noto/%.otf,$(FONT_BIN))\n  FONT_BIN := $(filter-out resources/fonts/noto/%.ttf,$(FONT_BIN))\n  FONT_BIN := $(filter-out resources/fonts/sil/%.cff,$(FONT_BIN))\nendif\n\nifneq ($(filter -DTOFU_NOTO,$(XCFLAGS)),)\n  FONT_BIN := $(filter-out resources/fonts/noto/%.otf,$(FONT_BIN))\n  FONT_BIN := $(filter-out resources/fonts/noto/%.ttf,$(FONT_BIN))\nendif\n\nifneq ($(filter -DTOFU_SIL,$(XCFLAGS)),)\n  FONT_BIN := $(filter-out resources/fonts/sil/%.cff,$(FONT_BIN))\nendif\n\nFONT_GEN := $(FONT_BIN:%=generated/%.c)\n\ngenerated/%.cff.c : %.cff $(HEXDUMP_SH) ; $(QUIET_GEN) $(MKTGTDIR) ; bash $(HEXDUMP_SH) > $@ $<\ngenerated/%.otf.c : %.otf $(HEXDUMP_SH) ; $(QUIET_GEN) $(MKTGTDIR) ; bash $(HEXDUMP_SH) > $@ $<\ngenerated/%.ttf.c : %.ttf $(HEXDUMP_SH) ; $(QUIET_GEN) $(MKTGTDIR) ; bash $(HEXDUMP_SH) > $@ $<\ngenerated/%.ttc.c : %.ttc $(HEXDUMP_SH) ; $(QUIET_GEN) $(MKTGTDIR) ; bash $(HEXDUMP_SH) > $@ $<\n\nifeq ($(HAVE_OBJCOPY),yes)\n  MUPDF_OBJ += $(FONT_BIN:%=$(OUT)/%.o)\n  $(OUT)/%.cff.o : %.cff ; $(OBJCOPY_CMD)\n  $(OUT)/%.otf.o : %.otf ; $(OBJCOPY_CMD)\n  $(OUT)/%.ttf.o : %.ttf ; $(OBJCOPY_CMD)\n  $(OUT)/%.ttc.o : %.ttc ; $(OBJCOPY_CMD)\nelse\n  MUPDF_OBJ += $(FONT_GEN:%.c=$(OUT)/%.o)\nendif\n\ngenerate: $(FONT_GEN)\n\n# --- Generated ICC profiles ---\n\nsource/fitz/icc/%.icc.h: resources/icc/%.icc\n\t$(QUIET_GEN) xxd -i $< | \\\n\t\tsed 's/unsigned/static const unsigned/' | \\\n\t\tsed '1i// This is an automatically generated file. Do not edit.' \\\n\t\t> $@\n\ngenerate: source/fitz/icc/gray.icc.h\ngenerate: source/fitz/icc/rgb.icc.h\ngenerate: source/fitz/icc/cmyk.icc.h\ngenerate: source/fitz/icc/lab.icc.h\n\n# --- Generated CMap files ---\n\nCMAP_GEN := $(notdir $(sort $(wildcard resources/cmaps/*)))\nCMAP_GEN := $(CMAP_GEN:%=source/pdf/cmaps/%.h)\n\nsource/pdf/cmaps/%.h: resources/cmaps/% scripts/cmapdump.py\n\t$(QUIET_GEN) python3 scripts/cmapdump.py > $@ $<\n\ngenerate: $(CMAP_GEN)\n\n# --- Generated embedded javascript files ---\n\nsource/pdf/js/%.js.h: source/pdf/js/%.js scripts/jsdump.sed\n\t$(QUIET_GEN) sed -f scripts/jsdump.sed < $< > $@\n\ngenerate: source/pdf/js/util.js.h\n\n# --- Generated perfect hash source files ---\n\nsource/html/css-properties.h: source/html/css-properties.gperf\n\t$(QUIET_GEN) gperf > $@ $<\n\ngenerate: source/html/css-properties.h\n\n# --- Library ---\n\nifeq ($(shared),yes)\nMUPDF_LIB = $(OUT)/libmupdf.$(SO)$(SO_VERSION)\nifeq ($(SO),dll)\nMUPDF_LIB_IMPORT = $(OUT)/libmupdf_$(SO).a\nLIBS_TO_INSTALL_IN_BIN = $(MUPDF_LIB)\nLIBS_TO_INSTALL_IN_LIB = $(MUPDF_LIB_IMPORT)\nelse\nLIBS_TO_INSTALL_IN_LIB = $(MUPDF_LIB)\nendif\nifneq ($(USE_SYSTEM_GLUT),yes)\nTHIRD_GLUT_LIB = $(OUT)/libmupdf-glut.a\nendif\nTHREAD_LIB = $(OUT)/libmupdf-threads.a\nPKCS7_LIB = $(OUT)/libmupdf-pkcs7.a\n\n$(MUPDF_LIB) : $(MUPDF_OBJ) $(THIRD_OBJ)\n$(THIRD_GLUT_LIB) : $(THIRD_GLUT_OBJ)\n$(THREAD_LIB) : $(THREAD_OBJ)\n$(PKCS7_LIB) : $(PKCS7_OBJ)\nelse\nMUPDF_LIB = $(OUT)/libmupdf.a\nLIBS_TO_INSTALL_IN_LIB = $(MUPDF_LIB) $(THIRD_LIB)\nTHIRD_LIB = $(OUT)/libmupdf-third.a\nifneq ($(USE_SYSTEM_GLUT),yes)\nTHIRD_GLUT_LIB = $(OUT)/libmupdf-glut.a\nendif\nTHREAD_LIB = $(OUT)/libmupdf-threads.a\nPKCS7_LIB = $(OUT)/libmupdf-pkcs7.a\n\n$(MUPDF_LIB) : $(MUPDF_OBJ)\n$(THIRD_LIB) : $(THIRD_OBJ)\n$(THIRD_GLUT_LIB) : $(THIRD_GLUT_OBJ)\n$(THREAD_LIB) : $(THREAD_OBJ)\n$(PKCS7_LIB) : $(PKCS7_OBJ)\nendif\n\n$(MUPDF_LIB) : $(MUPDF_OBJ)\n$(THIRD_LIB) : $(THIRD_OBJ)\n$(THREAD_LIB) : $(THREAD_OBJ)\n$(PKCS7_LIB) : $(PKCS7_OBJ)\n\n# --- Main tools and viewers ---\n\nMUTOOL_SRC := source/tools/mutool.c\nMUTOOL_SRC += source/tools/muconvert.c\nMUTOOL_SRC += source/tools/mudraw.c\nMUTOOL_SRC += source/tools/murun.c\nMUTOOL_SRC += source/tools/mutrace.c\nMUTOOL_SRC += source/tools/cmapdump.c\nMUTOOL_SRC += $(sort $(wildcard source/tools/pdf*.c))\nMUTOOL_OBJ := $(MUTOOL_SRC:%.c=$(OUT)/%.o)\nMUTOOL_EXE := $(OUT)/mutool$(EXE)\n$(MUTOOL_EXE) : $(MUTOOL_OBJ) $(MUPDF_LIB) $(THIRD_LIB) $(PKCS7_LIB) $(THREAD_LIB)\n\t$(LINK_CMD) $(EXE_LDFLAGS) $(THIRD_LIBS) $(THREADING_LIBS) $(LIBCRYPTO_LIBS)\nTOOL_APPS += $(MUTOOL_EXE)\n\nMURASTER_OBJ := $(OUT)/source/tools/muraster.o\nMURASTER_EXE := $(OUT)/muraster$(EXE)\n$(MURASTER_EXE) : $(MURASTER_OBJ) $(MUPDF_LIB) $(THIRD_LIB) $(PKCS7_LIB) $(THREAD_LIB)\n\t$(LINK_CMD) $(EXE_LDFLAGS) $(THIRD_LIBS) $(THREADING_LIBS) $(LIBCRYPTO_LIBS)\nTOOL_APPS += $(MURASTER_EXE)\n\nifeq ($(HAVE_GLUT),yes)\n  MUVIEW_GLUT_SRC += $(sort $(wildcard platform/gl/*.c))\n  MUVIEW_GLUT_OBJ := $(MUVIEW_GLUT_SRC:%.c=$(OUT)/%.o)\nifeq ($(HAVE_WIN32),yes)\n  MUVIEW_GLUT_OBJ += $(OUT)/platform/gl/gl-winres.o\nendif\n  MUVIEW_GLUT_EXE := $(OUT)/mupdf-gl$(EXE)\n  $(MUVIEW_GLUT_EXE) : $(MUVIEW_GLUT_OBJ) $(MUPDF_LIB) $(THIRD_LIB) $(THIRD_GLUT_LIB) $(PKCS7_LIB)\n\t$(LINK_CMD) $(EXE_LDFLAGS) $(THIRD_LIBS) $(LIBCRYPTO_LIBS) $(WIN32_LDFLAGS) $(THIRD_GLUT_LIBS)\n  VIEW_APPS += $(MUVIEW_GLUT_EXE)\nendif\n\nifeq ($(HAVE_X11),yes)\n  MUVIEW_X11_EXE := $(OUT)/mupdf-x11$(EXE)\n  MUVIEW_X11_OBJ += $(OUT)/platform/x11/pdfapp.o\n  MUVIEW_X11_OBJ += $(OUT)/platform/x11/x11_main.o\n  MUVIEW_X11_OBJ += $(OUT)/platform/x11/x11_image.o\n  $(MUVIEW_X11_EXE) : $(MUVIEW_X11_OBJ) $(MUPDF_LIB) $(THIRD_LIB) $(PKCS7_LIB)\n\t$(LINK_CMD) $(THIRD_LIBS) $(X11_LIBS) $(LIBCRYPTO_LIBS)\n  VIEW_APPS += $(MUVIEW_X11_EXE)\nendif\n\nifeq ($(HAVE_WIN32),yes)\n  MUVIEW_WIN32_EXE := $(OUT)/mupdf-w32$(EXE)\n  MUVIEW_WIN32_OBJ += $(OUT)/platform/x11/pdfapp.o\n  MUVIEW_WIN32_OBJ += $(OUT)/platform/x11/win_main.o\n  MUVIEW_WIN32_OBJ += $(OUT)/platform/x11/win_res.o\n  $(MUVIEW_WIN32_EXE) : $(MUVIEW_WIN32_OBJ) $(MUPDF_LIB) $(THIRD_LIB) $(PKCS7_LIB)\n\t$(LINK_CMD) $(THIRD_LIBS) $(WIN32_LDFLAGS) $(WIN32_LIBS) $(LIBCRYPTO_LIBS)\n  VIEW_APPS += $(MUVIEW_WIN32_EXE)\nendif\n\nifeq ($(HAVE_X11),yes)\nifeq ($(HAVE_CURL),yes)\nifeq ($(HAVE_PTHREAD),yes)\n  MUVIEW_X11_CURL_EXE := $(OUT)/mupdf-x11-curl$(EXE)\n  MUVIEW_X11_CURL_OBJ += $(OUT)/platform/x11/curl/pdfapp.o\n  MUVIEW_X11_CURL_OBJ += $(OUT)/platform/x11/curl/x11_main.o\n  MUVIEW_X11_CURL_OBJ += $(OUT)/platform/x11/curl/x11_image.o\n  MUVIEW_X11_CURL_OBJ += $(OUT)/platform/x11/curl/curl_stream.o\n  MUVIEW_X11_CURL_OBJ += $(OUT)/platform/x11/curl/prog_stream.o\n  $(MUVIEW_X11_CURL_EXE) : $(MUVIEW_X11_CURL_OBJ) $(MUPDF_LIB) $(THIRD_LIB) $(PKCS7_LIB) $(CURL_LIB)\n\t$(LINK_CMD) $(EXE_LDFLAGS) $(THIRD_LIBS) $(X11_LIBS) $(LIBCRYPTO_LIBS) $(CURL_LIBS) $(PTHREAD_LIBS)\n  VIEW_APPS += $(MUVIEW_X11_CURL_EXE)\nendif\nendif\nendif\n\n# --- Generated dependencies ---\n\n-include $(MUPDF_OBJ:%.o=%.d)\n-include $(PKCS7_OBJ:%.o=%.d)\n-include $(THREAD_OBJ:%.o=%.d)\n-include $(THIRD_OBJ:%.o=%.d)\n-include $(THIRD_GLUT_OBJ:%.o=%.d)\n\n-include $(MUTOOL_OBJ:%.o=%.d)\n-include $(MUVIEW_GLUT_OBJ:%.o=%.d)\n-include $(MUVIEW_X11_OBJ:%.o=%.d)\n-include $(MUVIEW_WIN32_OBJ:%.o=%.d)\n\n-include $(MURASTER_OBJ:%.o=%.d)\n-include $(MUVIEW_X11_CURL_OBJ:%.o=%.d)\n\n# --- Examples ---\n\nexamples: $(OUT)/example $(OUT)/multi-threaded $(OUT)/storytest\n\n$(OUT)/example: docs/examples/example.c $(MUPDF_LIB) $(THIRD_LIB)\n\t$(LINK_CMD) $(CFLAGS) $(THIRD_LIBS)\n$(OUT)/multi-threaded: docs/examples/multi-threaded.c $(MUPDF_LIB) $(THIRD_LIB)\n\t$(LINK_CMD) $(CFLAGS) $(THIRD_LIBS) -lpthread\n$(OUT)/storytest: docs/examples/storytest.c $(MUPDF_LIB) $(THIRD_LIB)\n\t$(LINK_CMD) $(CFLAGS) $(THIRD_LIBS)\n\n# --- Update version string header ---\n\nVERSION = $(shell git describe --tags)\n\nversion:\n\tsed -i~ -e '/FZ_VERSION /s/\".*\"/\"'$(VERSION)'\"/' include/mupdf/fitz/version.h\n\n# --- Format man pages ---\n\n%.txt: %.1\n\tnroff -man $< | col -b | expand > $@\n\nMAN_FILES := $(sort $(wildcard docs/man/*.1))\nTXT_FILES := $(MAN_FILES:%.1=%.txt)\n\ncatman: $(TXT_FILES)\n\n# --- Install ---\n\nprefix ?= /usr/local\nbindir ?= $(prefix)/bin\nlibdir ?= $(prefix)/lib\nincdir ?= $(prefix)/include\nmandir ?= $(prefix)/share/man\ndocdir ?= $(prefix)/share/doc/mupdf\npydir ?= $(shell python3 -c \"import sysconfig; print(sysconfig.get_path('platlib'))\")\nSO_INSTALL_MODE ?= 644\n\nthird: $(THIRD_LIB)\nextra-libs: $(THIRD_GLUT_LIB)\nlibs: $(LIBS_TO_INSTALL_IN_BIN) $(LIBS_TO_INSTALL_IN_LIB) $(COMMERCIAL_LIBS)\ncommercial-libs: $(COMMERCIAL_LIBS)\ntools: $(TOOL_APPS)\napps: $(TOOL_APPS) $(VIEW_APPS)\nlibmupdf-threads: $(THREAD_LIB)\n\ninstall-headers:\n\tinstall -d $(DESTDIR)$(incdir)/mupdf\n\tinstall -d $(DESTDIR)$(incdir)/mupdf/fitz\n\tinstall -d $(DESTDIR)$(incdir)/mupdf/pdf\n\tinstall -m 644 include/mupdf/*.h $(DESTDIR)$(incdir)/mupdf\n\tinstall -m 644 include/mupdf/fitz/*.h $(DESTDIR)$(incdir)/mupdf/fitz\n\tinstall -m 644 include/mupdf/pdf/*.h $(DESTDIR)$(incdir)/mupdf/pdf\n\ninstall-libs: libs install-headers\nifneq ($(LIBS_TO_INSTALL_IN_LIB),)\n\tinstall -d $(DESTDIR)$(libdir)\n\tinstall -m 644 $(LIBS_TO_INSTALL_IN_LIB) $(DESTDIR)$(libdir)\nendif\n\ninstall-apps: apps\n\tinstall -d $(DESTDIR)$(bindir)\n\tinstall -m 755 $(LIBS_TO_INSTALL_IN_BIN) $(TOOL_APPS) $(VIEW_APPS) $(DESTDIR)$(bindir)\n\ninstall-docs:\n\tinstall -d $(DESTDIR)$(mandir)/man1\n\tinstall -m 644 docs/man/*.1 $(DESTDIR)$(mandir)/man1\n\n\tinstall -d $(DESTDIR)$(docdir)\n\tinstall -d $(DESTDIR)$(docdir)/examples\n\tinstall -m 644 README CHANGES $(DESTDIR)$(docdir)\n\tinstall -m 644 $(wildcard COPYING LICENSE) $(DESTDIR)$(docdir)\n\tinstall -m 644 docs/examples/* $(DESTDIR)$(docdir)/examples\n\ninstall: install-libs install-apps install-docs\n\ndocs:\n\tpython3 scripts/build-docs.py\n\ninstall-docs-html: docs\n\tinstall -d $(DESTDIR)$(docdir)\n\tinstall -d $(DESTDIR)$(docdir)/_images\n\tinstall -d $(DESTDIR)$(docdir)/_static\n\tinstall -d $(DESTDIR)$(docdir)/_static/styles\n\tinstall -d $(DESTDIR)$(docdir)/_static/scripts\n\tinstall -m 644 build/docs/html/*.html $(DESTDIR)$(docdir)\n\tinstall -m 644 build/docs/html/*.inv $(DESTDIR)$(docdir)\n\tinstall -m 644 build/docs/html/*.js $(DESTDIR)$(docdir)\n\tinstall -m 644 build/docs/html/_images/* $(DESTDIR)$(docdir)/_images\n\tinstall -m 644 build/docs/html/_static/*.ico $(DESTDIR)$(docdir)/_static\n\tinstall -m 644 build/docs/html/_static/*.js $(DESTDIR)$(docdir)/_static\n\tinstall -m 644 build/docs/html/_static/*.png $(DESTDIR)$(docdir)/_static\n\tinstall -m 644 build/docs/html/_static/*.css $(DESTDIR)$(docdir)/_static\n\tinstall -m 644 build/docs/html/_static/scripts/*.js $(DESTDIR)$(docdir)/_static/scripts\n\tinstall -m 644 build/docs/html/_static/scripts/*.map $(DESTDIR)$(docdir)/_static/scripts\n\tinstall -m 644 build/docs/html/_static/styles/*.css $(DESTDIR)$(docdir)/_static/styles\n\ntarball:\n\tbash scripts/archive.sh\n\n# --- Clean and Default ---\n\nWATCH_SRCS = $(shell find include source platform -type f -name '*.[ch]')\nwatch:\n\t@ inotifywait -q -e modify $(WATCH_SRCS)\n\nwatch-recompile:\n\t@ while ! inotifywait -q -e modify $(WATCH_SRCS) ; do time -p $(MAKE) ; done\n\njava:\n\t$(MAKE) -C platform/java build=$(build)\n\njava-clean:\n\t$(MAKE) -C platform/java build=$(build) clean\n\nextract-test:\n\t$(MAKE) debug\n\t$(MAKE) -C thirdparty/extract mutool=../../build/debug/mutool test-mutool\n\nTAG_HDR_FILES=$(shell git ls-files | grep -v '^\\(docs\\|scripts\\|generated\\)' | grep '\\.h$$')\nTAG_SRC_FILES=$(shell git ls-files | grep -v '^\\(docs\\|scripts\\|generated\\)' | grep -v '\\.h$$')\n\ntags:\n\t$(TAGS_CMD) --sort=no --c-kinds=+p-t $(TAG_SRC_FILES)\n\t$(TAGS_CMD) -a --sort=no --c-kinds=+p-t $(TAG_HDR_FILES)\n\t$(TAGS_CMD) -a --sort=no --c-kinds=t $(TAG_SRC_FILES) $(TAG_HDR_FILES)\n\nfind-try-return:\n\t@ bash scripts/find-try-return.sh\n\ncscope.files: $(shell find include source platform -name '*.[ch]')\n\t@ echo $^ | tr ' ' '\\n' > $@\n\ncscope.out: cscope.files\n\tcscope -b\n\nall: libs apps\n\nclean:\n\trm -rf $(OUT)\nnuke:\n\trm -rf build/*\n\trm -rf generated/resources/fonts/droid\n\trm -rf generated/resources/fonts/han\n\trm -rf generated/resources/fonts/noto\n\trm -rf generated/resources/fonts/sil\n\nrelease:\n\t$(MAKE) build=release\ndebug:\n\t$(MAKE) build=debug\nsanitize:\n\t$(MAKE) build=sanitize\n\nshared: shared-$(build)\n\nshared-release:\n\t$(MAKE) shared=yes build=release\nshared-debug:\n\t$(MAKE) shared=yes build=debug\nshared-clean:\n\trm -rf build/shared-*\n\nandroid: generate\n\tndk-build -j8 \\\n\t\tAPP_BUILD_SCRIPT=platform/java/Android.mk \\\n\t\tAPP_PROJECT_PATH=build/android \\\n\t\tAPP_PLATFORM=android-16 \\\n\t\tAPP_OPTIM=$(build)\n\n# --- C++, Python and C#, and system installation ---\n\nc++: c++-$(build)\npython: python-$(build)\ncsharp: csharp-$(build)\n\nc++-clean:\n\trm -rf platform/c++\npython-clean:\n\trm -rf platform/python\ncsharp-clean:\n\trm -rf platform/csharp\n\n# $(OUT) only contains the `shared-` infix if shared=yes and targets that\n# require shared-libraries only work if shared=yes. So if this is not the case,\n# we re-run ourselves with `$(MAKE) shared=yes $@`.\n\nifeq ($(shared),yes)\n\n# We can build targets that require shared libraries and use $(OUT).\n\n# Assert that $(OUT) contains `shared`.\nifeq ($(findstring shared, $(OUT)),)\n$(error OUT=$(OUT) does not contain shared)\nendif\n\n# C++, Python and C# shared libraries.\n#\n# To disable automatic use of a venv, use `make VENV_FLAG= ...` or `VENV_FLAG=\n# make ...`.\n#\nVENV_FLAG ?= --venv\nc++-%: shared-%\n\t./scripts/mupdfwrap.py $(VENV_FLAG) -d $(OUT) -b 01\npython-%: c++-%\n\t./scripts/mupdfwrap.py $(VENV_FLAG) -d $(OUT) -b 23\ncsharp-%: c++-%\n\t./scripts/mupdfwrap.py $(VENV_FLAG) -d $(OUT) -b --csharp 23\n\n# Installs of C, C++, Python and C# shared libraries\n#\n# We only allow install of shared libraries if we are not using any libraries\n# in thirdparty/.\ninstall-shared-check:\nifneq ($(USE_SYSTEM_LIBS),yes)\n\techo \"install-shared-* requires that USE_SYSTEM_LIBS=yes.\"\n\tfalse\nendif\n\ninstall-shared-c: install-shared-check shared install-headers\n\tinstall -d $(DESTDIR)$(libdir)\n\tinstall -m $(SO_INSTALL_MODE) $(OUT)/libmupdf.$(SO)$(SO_VERSION) $(DESTDIR)$(libdir)/\nifneq ($(OS),OpenBSD)\n\tln -sf libmupdf.$(SO)$(SO_VERSION) $(DESTDIR)$(libdir)/libmupdf.$(SO)\nendif\n\ninstall-shared-c++: install-shared-c c++\n\tinstall -m 644 platform/c++/include/mupdf/*.h $(DESTDIR)$(incdir)/mupdf\n\tinstall -m $(SO_INSTALL_MODE) $(OUT)/libmupdfcpp.$(SO)$(SO_VERSION) $(DESTDIR)$(libdir)/\nifneq ($(OS),OpenBSD)\n\tln -sf libmupdfcpp.$(SO)$(SO_VERSION) $(DESTDIR)$(libdir)/libmupdfcpp.$(SO)\nendif\n\ninstall-shared-python: install-shared-c++ python\n\tinstall -d $(DESTDIR)$(pydir)/mupdf\n\tinstall -m $(SO_INSTALL_MODE) $(OUT)/_mupdf.$(SO) $(DESTDIR)$(pydir)/mupdf\n\tinstall -m 644 $(OUT)/mupdf.py $(DESTDIR)$(pydir)/mupdf/__init__.py\n\nelse\n\n# $(shared) != yes. For all targets that require a shared-library build and use\n# $(OUT), we need to re-run ourselves with shared=yes.\ninstall-% c++-% python-% csharp-%:\n\t# Running: $(MAKE) shared=yes $@\n\t$(MAKE) shared=yes $@\n\nendif\n\n.PHONY: all clean nuke install third libs apps generate tags docs\n.PHONY: shared shared-debug shared-clean\n.PHONY: c++-% python-% csharp-%\n.PHONY: c++-clean python-clean csharp-clean\n"
        },
        {
          "name": "Makelists",
          "type": "blob",
          "size": 36.783203125,
          "content": "# List of source files for all thirdparty libraries.\n\n# --- FREETYPE2 ---\n\nFREETYPE_CFLAGS += -Ithirdparty/freetype/include\nFREETYPE_CFLAGS += -Iscripts/freetype\n\nFREETYPE_BUILD_CFLAGS += -DFT_CONFIG_MODULES_H=\\\"slimftmodules.h\\\"\nFREETYPE_BUILD_CFLAGS += -DFT_CONFIG_OPTIONS_H=\\\"slimftoptions.h\\\"\nFREETYPE_BUILD_CFLAGS += -DFT2_BUILD_LIBRARY\n\nFREETYPE_SRC += thirdparty/freetype/src/base/ftbase.c\nFREETYPE_SRC += thirdparty/freetype/src/base/ftbbox.c\nFREETYPE_SRC += thirdparty/freetype/src/base/ftbitmap.c\nFREETYPE_SRC += thirdparty/freetype/src/base/ftdebug.c\nFREETYPE_SRC += thirdparty/freetype/src/base/ftfstype.c\nFREETYPE_SRC += thirdparty/freetype/src/base/ftgasp.c\nFREETYPE_SRC += thirdparty/freetype/src/base/ftglyph.c\nFREETYPE_SRC += thirdparty/freetype/src/base/ftinit.c\nFREETYPE_SRC += thirdparty/freetype/src/base/ftstroke.c\nFREETYPE_SRC += thirdparty/freetype/src/base/ftsynth.c\nFREETYPE_SRC += thirdparty/freetype/src/base/ftsystem.c\nFREETYPE_SRC += thirdparty/freetype/src/base/fttype1.c\nFREETYPE_SRC += thirdparty/freetype/src/cff/cff.c\nFREETYPE_SRC += thirdparty/freetype/src/cid/type1cid.c\nFREETYPE_SRC += thirdparty/freetype/src/psaux/psaux.c\nFREETYPE_SRC += thirdparty/freetype/src/pshinter/pshinter.c\nFREETYPE_SRC += thirdparty/freetype/src/psnames/psnames.c\nFREETYPE_SRC += thirdparty/freetype/src/raster/raster.c\nFREETYPE_SRC += thirdparty/freetype/src/sfnt/sfnt.c\nFREETYPE_SRC += thirdparty/freetype/src/smooth/smooth.c\nFREETYPE_SRC += thirdparty/freetype/src/truetype/truetype.c\nFREETYPE_SRC += thirdparty/freetype/src/type1/type1.c\n\n# --- GUMBO ---\n\nGUMBO_CFLAGS += -Ithirdparty/gumbo-parser/src\n\nGUMBO_BUILD_CFLAGS += -std=c99\n\nGUMBO_SRC += thirdparty/gumbo-parser/src/attribute.c\nGUMBO_SRC += thirdparty/gumbo-parser/src/char_ref.c\nGUMBO_SRC += thirdparty/gumbo-parser/src/error.c\nGUMBO_SRC += thirdparty/gumbo-parser/src/parser.c\nGUMBO_SRC += thirdparty/gumbo-parser/src/string_buffer.c\nGUMBO_SRC += thirdparty/gumbo-parser/src/string_piece.c\nGUMBO_SRC += thirdparty/gumbo-parser/src/tag.c\nGUMBO_SRC += thirdparty/gumbo-parser/src/tokenizer.c\nGUMBO_SRC += thirdparty/gumbo-parser/src/utf8.c\nGUMBO_SRC += thirdparty/gumbo-parser/src/util.c\nGUMBO_SRC += thirdparty/gumbo-parser/src/vector.c\n\n# --- HARFBUZZ ---\n\nHARFBUZZ_CFLAGS += -Ithirdparty/harfbuzz/src\n\nHARFBUZZ_BUILD_CFLAGS += -Iinclude/mupdf\nHARFBUZZ_BUILD_CFLAGS += $(FREETYPE_CFLAGS)\n\nHARFBUZZ_BUILD_CFLAGS += -DHAVE_FALLBACK=1\nHARFBUZZ_BUILD_CFLAGS += -DHAVE_FREETYPE\nHARFBUZZ_BUILD_CFLAGS += -DHAVE_OT\nHARFBUZZ_BUILD_CFLAGS += -DHAVE_ROUND\nHARFBUZZ_BUILD_CFLAGS += -DHAVE_UCDN\nHARFBUZZ_BUILD_CFLAGS += -DHB_NO_MT\n\n# disable warnings\nHARFBUZZ_BUILD_CFLAGS += -DHB_NO_PRAGMA_GCC_DIAGNOSTIC\nHARFBUZZ_BUILD_CFLAGS += -w\n\nHARFBUZZ_BUILD_CFLAGS += -Dhb_malloc_impl=fz_hb_malloc\nHARFBUZZ_BUILD_CFLAGS += -Dhb_calloc_impl=fz_hb_calloc\nHARFBUZZ_BUILD_CFLAGS += -Dhb_free_impl=fz_hb_free\nHARFBUZZ_BUILD_CFLAGS += -Dhb_realloc_impl=fz_hb_realloc\n\nHARFBUZZ_BUILD_CFLAGS += -fno-exceptions\nHARFBUZZ_BUILD_CFLAGS += -fno-rtti\nHARFBUZZ_BUILD_CFLAGS += -fno-threadsafe-statics\nHARFBUZZ_BUILD_CFLAGS += -fvisibility-inlines-hidden\nHARFBUZZ_BUILD_CFLAGS += -std=gnu++11\n\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/graph/gsubgpos-context.cc\n\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-aat-layout.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-aat-map.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-blob.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-buffer.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-buffer-verify.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-buffer-serialize.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-common.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-face.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-fallback-shape.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-font.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ft.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-map.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-number.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-cff1-table.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-cff2-table.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-color.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-face.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-font.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-layout.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-map.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-math.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-meta.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-metrics.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-name.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-fallback.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-normalize.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shaper-arabic.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shaper-default.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shaper-hangul.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shaper-hebrew.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shaper-indic.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shaper-indic-table.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shaper-khmer.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shaper-myanmar.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shaper-syllabic.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shaper-thai.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shaper-use.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shaper-vowel-constraints.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-tag.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-var.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-set.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-shape.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-shape-plan.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-shaper.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-static.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-subset.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-subset-cff1.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-subset-cff2.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-subset-cff-common.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-subset-input.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-subset-plan.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ucd.cc\nHARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-unicode.cc\n\n# --- JPEG-XR (optional, used by XPS) ---\n\nJPEGXR_CFLAGS += -Ithirdparty/jpegxr\nJPEGXR_CFLAGS += -Ithirdparty/jpegxr/Software\nJPEGXR_CFLAGS += -DHAVE_JPEGXR\n\nJPEGXR_BUILD_CFLAGS += -Wno-tautological-compare\n\nJPEGXR_SRC += thirdparty/jpegxr/Software/algo.c\nJPEGXR_SRC += thirdparty/jpegxr/Software/api.c\nJPEGXR_SRC += thirdparty/jpegxr/Software/cr_parse.c\nJPEGXR_SRC += thirdparty/jpegxr/Software/flags.c\nJPEGXR_SRC += thirdparty/jpegxr/Software/init.c\nJPEGXR_SRC += thirdparty/jpegxr/Software/io.c\nJPEGXR_SRC += thirdparty/jpegxr/Software/jpegxr_pixelformat.c\nJPEGXR_SRC += thirdparty/jpegxr/Software/r_parse.c\nJPEGXR_SRC += thirdparty/jpegxr/Software/r_strip.c\nJPEGXR_SRC += thirdparty/jpegxr/Software/r_tile_frequency.c\nJPEGXR_SRC += thirdparty/jpegxr/Software/r_tile_spatial.c\nJPEGXR_SRC += thirdparty/jpegxr/Software/x_strip.c\n\n# --- LIBJPEG ---\n\nLIBJPEG_CFLAGS += -Ithirdparty/libjpeg\nLIBJPEG_CFLAGS += -Iscripts/libjpeg\n\nLIBJPEG_SRC += thirdparty/libjpeg/jaricom.c\nLIBJPEG_SRC += thirdparty/libjpeg/jcapimin.c\nLIBJPEG_SRC += thirdparty/libjpeg/jcapistd.c\nLIBJPEG_SRC += thirdparty/libjpeg/jcarith.c\nLIBJPEG_SRC += thirdparty/libjpeg/jccoefct.c\nLIBJPEG_SRC += thirdparty/libjpeg/jccolor.c\nLIBJPEG_SRC += thirdparty/libjpeg/jcdctmgr.c\nLIBJPEG_SRC += thirdparty/libjpeg/jchuff.c\nLIBJPEG_SRC += thirdparty/libjpeg/jcinit.c\nLIBJPEG_SRC += thirdparty/libjpeg/jcmainct.c\nLIBJPEG_SRC += thirdparty/libjpeg/jcmarker.c\nLIBJPEG_SRC += thirdparty/libjpeg/jcmaster.c\nLIBJPEG_SRC += thirdparty/libjpeg/jcomapi.c\nLIBJPEG_SRC += thirdparty/libjpeg/jcparam.c\nLIBJPEG_SRC += thirdparty/libjpeg/jcprepct.c\nLIBJPEG_SRC += thirdparty/libjpeg/jcsample.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdapimin.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdapistd.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdarith.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdatadst.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdatasrc.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdcoefct.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdcolor.c\nLIBJPEG_SRC += thirdparty/libjpeg/jddctmgr.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdhuff.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdinput.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdmainct.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdmarker.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdmaster.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdmerge.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdpostct.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdsample.c\nLIBJPEG_SRC += thirdparty/libjpeg/jdtrans.c\nLIBJPEG_SRC += thirdparty/libjpeg/jerror.c\nLIBJPEG_SRC += thirdparty/libjpeg/jfdctflt.c\nLIBJPEG_SRC += thirdparty/libjpeg/jfdctfst.c\nLIBJPEG_SRC += thirdparty/libjpeg/jfdctint.c\nLIBJPEG_SRC += thirdparty/libjpeg/jidctflt.c\nLIBJPEG_SRC += thirdparty/libjpeg/jidctfst.c\nLIBJPEG_SRC += thirdparty/libjpeg/jidctint.c\nLIBJPEG_SRC += thirdparty/libjpeg/jmemmgr.c\nLIBJPEG_SRC += thirdparty/libjpeg/jquant1.c\nLIBJPEG_SRC += thirdparty/libjpeg/jquant2.c\nLIBJPEG_SRC += thirdparty/libjpeg/jutils.c\n\n# --- LCMS2 (multi-threaded fork) ---\n\nLCMS2_CFLAGS += -Ithirdparty/lcms2/include\nLCMS2_CFLAGS += -DHAVE_LCMS2MT\n\nLCMS2_SRC += thirdparty/lcms2/src/cmsalpha.c\nLCMS2_SRC += thirdparty/lcms2/src/cmscam02.c\nLCMS2_SRC += thirdparty/lcms2/src/cmscgats.c\nLCMS2_SRC += thirdparty/lcms2/src/cmscnvrt.c\nLCMS2_SRC += thirdparty/lcms2/src/cmserr.c\nLCMS2_SRC += thirdparty/lcms2/src/cmsgamma.c\nLCMS2_SRC += thirdparty/lcms2/src/cmsgmt.c\nLCMS2_SRC += thirdparty/lcms2/src/cmshalf.c\nLCMS2_SRC += thirdparty/lcms2/src/cmsintrp.c\nLCMS2_SRC += thirdparty/lcms2/src/cmsio0.c\nLCMS2_SRC += thirdparty/lcms2/src/cmsio1.c\nLCMS2_SRC += thirdparty/lcms2/src/cmslut.c\nLCMS2_SRC += thirdparty/lcms2/src/cmsmd5.c\nLCMS2_SRC += thirdparty/lcms2/src/cmsmtrx.c\nLCMS2_SRC += thirdparty/lcms2/src/cmsnamed.c\nLCMS2_SRC += thirdparty/lcms2/src/cmsopt.c\nLCMS2_SRC += thirdparty/lcms2/src/cmspack.c\nLCMS2_SRC += thirdparty/lcms2/src/cmspcs.c\nLCMS2_SRC += thirdparty/lcms2/src/cmsplugin.c\nLCMS2_SRC += thirdparty/lcms2/src/cmsps2.c\nLCMS2_SRC += thirdparty/lcms2/src/cmssamp.c\nLCMS2_SRC += thirdparty/lcms2/src/cmssm.c\nLCMS2_SRC += thirdparty/lcms2/src/cmstypes.c\nLCMS2_SRC += thirdparty/lcms2/src/cmsvirt.c\nLCMS2_SRC += thirdparty/lcms2/src/cmswtpnt.c\nLCMS2_SRC += thirdparty/lcms2/src/cmsxform.c\n\n# --- MUJS ---\n\nMUJS_CFLAGS += -Ithirdparty/mujs\n\nMUJS_SRC += thirdparty/mujs/one.c\n\n# --- ZLIB ---\n\nZLIB_CFLAGS += -Ithirdparty/zlib\n\nZLIB_BUILD_CFLAGS += -DHAVE_UNISTD_H\nZLIB_BUILD_CFLAGS += -DHAVE_STDARG_H\n\nZLIB_SRC += thirdparty/zlib/adler32.c\nZLIB_SRC += thirdparty/zlib/compress.c\nZLIB_SRC += thirdparty/zlib/crc32.c\nZLIB_SRC += thirdparty/zlib/deflate.c\nZLIB_SRC += thirdparty/zlib/inffast.c\nZLIB_SRC += thirdparty/zlib/inflate.c\nZLIB_SRC += thirdparty/zlib/inftrees.c\nZLIB_SRC += thirdparty/zlib/trees.c\nZLIB_SRC += thirdparty/zlib/uncompr.c\nZLIB_SRC += thirdparty/zlib/zutil.c\n\n# --- JBIG2DEC ---\n\nJBIG2DEC_CFLAGS += -Ithirdparty/jbig2dec\n\nJBIG2DEC_BUILD_CFLAGS += -Iinclude\nJBIG2DEC_BUILD_CFLAGS += -DHAVE_STDINT_H\nJBIG2DEC_BUILD_CFLAGS += -DJBIG_EXTERNAL_MEMENTO_H=\\\"mupdf/memento.h\\\"\n\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_arith.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_arith_iaid.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_arith_int.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_generic.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_halftone.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_huffman.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_hufftab.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_image.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_mmr.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_page.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_refinement.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_segment.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_symbol_dict.c\nJBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_text.c\n\n# --- OPENJPEG ---\n\nOPENJPEG_CFLAGS += -Ithirdparty/openjpeg/src/lib/openjp2\nOPENJPEG_CFLAGS += -DOPJ_STATIC\nOPENJPEG_CFLAGS += -DOPJ_HAVE_INTTYPES_H\nOPENJPEG_CFLAGS += -DOPJ_HAVE_STDINT_H\n\nOPENJPEG_BUILD_CFLAGS += -Ithirdparty/openjpeg/src/lib/openjp2\nOPENJPEG_BUILD_CFLAGS += -DMUTEX_pthread=0\n\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/bio.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/cio.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/dwt.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/event.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/function_list.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/ht_dec.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/image.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/invert.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/j2k.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/jp2.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/mct.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/mqc.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/openjpeg.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/pi.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/sparse_array.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/t1.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/t2.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/tcd.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/tgt.c\nOPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/thread.c\n\n# --- FREEGLUT ---\n\nGLUT_CFLAGS += -Ithirdparty/freeglut/include\n\nGLUT_BUILD_CFLAGS += -Ithirdparty/freeglut/src\nGLUT_BUILD_CFLAGS += -DHAVE_UNISTD_H\nGLUT_BUILD_CFLAGS += -DHAVE_STDINT_H\nGLUT_BUILD_CFLAGS += -DHAVE_X11_EXTENSIONS_XRANDR_H\n\nGLUT_SRC += thirdparty/freeglut/src/fg_callbacks.c\nGLUT_SRC += thirdparty/freeglut/src/fg_cursor.c\nGLUT_SRC += thirdparty/freeglut/src/fg_display.c\nGLUT_SRC += thirdparty/freeglut/src/fg_ext.c\nGLUT_SRC += thirdparty/freeglut/src/fg_font.c\nGLUT_SRC += thirdparty/freeglut/src/fg_font_data.c\nGLUT_SRC += thirdparty/freeglut/src/fg_gamemode.c\nGLUT_SRC += thirdparty/freeglut/src/fg_geometry.c\nGLUT_SRC += thirdparty/freeglut/src/fg_gl2.c\nGLUT_SRC += thirdparty/freeglut/src/fg_init.c\nGLUT_SRC += thirdparty/freeglut/src/fg_input_devices.c\nGLUT_SRC += thirdparty/freeglut/src/fg_joystick.c\nGLUT_SRC += thirdparty/freeglut/src/fg_main.c\nGLUT_SRC += thirdparty/freeglut/src/fg_menu.c\nGLUT_SRC += thirdparty/freeglut/src/fg_misc.c\nGLUT_SRC += thirdparty/freeglut/src/fg_overlay.c\nGLUT_SRC += thirdparty/freeglut/src/fg_spaceball.c\nGLUT_SRC += thirdparty/freeglut/src/fg_state.c\nGLUT_SRC += thirdparty/freeglut/src/fg_stroke_mono_roman.c\nGLUT_SRC += thirdparty/freeglut/src/fg_stroke_roman.c\nGLUT_SRC += thirdparty/freeglut/src/fg_structure.c\nGLUT_SRC += thirdparty/freeglut/src/fg_teapot.c\nGLUT_SRC += thirdparty/freeglut/src/fg_videoresize.c\nGLUT_SRC += thirdparty/freeglut/src/fg_window.c\n\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_cursor_x11.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_display_x11_glx.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_ext_x11.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_gamemode_x11.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_glutfont_definitions_x11.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_init_x11.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_input_devices_x11.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_joystick_x11.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_main_x11.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_menu_x11.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_spaceball_x11.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_state_x11.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_state_x11_glx.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_structure_x11.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_window_x11.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_window_x11_glx.c\nGLUT_SRC += thirdparty/freeglut/src/x11/fg_xinput_x11.c\n\nGLUT_LIBS += -lGL\nGLUT_LIBS += -lX11\nGLUT_LIBS += -lXrandr\n\n# --- LEPTONICA (optional, used by Tesseract) ---\n\nLEPTONICA_CFLAGS += -Ithirdparty/leptonica/src\n\nLEPTONICA_BUILD_CFLAGS += -Iscripts/tesseract\nLEPTONICA_BUILD_CFLAGS += -DLEPTONICA_INTERCEPT_ALLOC=1\nLEPTONICA_BUILD_CFLAGS += -DHAVE_LIBPNG=0\nLEPTONICA_BUILD_CFLAGS += -DHAVE_LIBTIFF=0\nLEPTONICA_BUILD_CFLAGS += -DHAVE_LIBJPEG=0\nLEPTONICA_BUILD_CFLAGS += -DHAVE_LIBZ=0\nLEPTONICA_BUILD_CFLAGS += -DHAVE_LIBGIF=0\nLEPTONICA_BUILD_CFLAGS += -DHAVE_LIBUNGIF=0\nLEPTONICA_BUILD_CFLAGS += -DHAVE_LIBWEBP=0\nLEPTONICA_BUILD_CFLAGS += -DHAVE_LIBWEBP_ANIM=0\nLEPTONICA_BUILD_CFLAGS += -DHAVE_LIBJP2K=0\nLEPTONICA_BUILD_CFLAGS += -Wno-address-of-packed-member\n\nLEPTONICA_SRC += thirdparty/leptonica/src/adaptmap.c\nLEPTONICA_SRC += thirdparty/leptonica/src/affine.c\nLEPTONICA_SRC += thirdparty/leptonica/src/affinecompose.c\nLEPTONICA_SRC += thirdparty/leptonica/src/arrayaccess.c\nLEPTONICA_SRC += thirdparty/leptonica/src/baseline.c\nLEPTONICA_SRC += thirdparty/leptonica/src/bbuffer.c\nLEPTONICA_SRC += thirdparty/leptonica/src/bilateral.c\nLEPTONICA_SRC += thirdparty/leptonica/src/bilinear.c\nLEPTONICA_SRC += thirdparty/leptonica/src/binarize.c\nLEPTONICA_SRC += thirdparty/leptonica/src/binexpand.c\nLEPTONICA_SRC += thirdparty/leptonica/src/binreduce.c\nLEPTONICA_SRC += thirdparty/leptonica/src/blend.c\nLEPTONICA_SRC += thirdparty/leptonica/src/bmf.c\nLEPTONICA_SRC += thirdparty/leptonica/src/bmpio.c\nLEPTONICA_SRC += thirdparty/leptonica/src/bmpiostub.c\nLEPTONICA_SRC += thirdparty/leptonica/src/bootnumgen1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/bootnumgen2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/bootnumgen3.c\nLEPTONICA_SRC += thirdparty/leptonica/src/bootnumgen4.c\nLEPTONICA_SRC += thirdparty/leptonica/src/boxbasic.c\nLEPTONICA_SRC += thirdparty/leptonica/src/boxfunc1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/boxfunc2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/boxfunc3.c\nLEPTONICA_SRC += thirdparty/leptonica/src/boxfunc4.c\nLEPTONICA_SRC += thirdparty/leptonica/src/boxfunc5.c\nLEPTONICA_SRC += thirdparty/leptonica/src/bytearray.c\nLEPTONICA_SRC += thirdparty/leptonica/src/ccbord.c\nLEPTONICA_SRC += thirdparty/leptonica/src/ccthin.c\nLEPTONICA_SRC += thirdparty/leptonica/src/classapp.c\nLEPTONICA_SRC += thirdparty/leptonica/src/colorcontent.c\nLEPTONICA_SRC += thirdparty/leptonica/src/coloring.c\nLEPTONICA_SRC += thirdparty/leptonica/src/colormap.c\nLEPTONICA_SRC += thirdparty/leptonica/src/colormorph.c\nLEPTONICA_SRC += thirdparty/leptonica/src/colorquant1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/colorquant2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/colorseg.c\nLEPTONICA_SRC += thirdparty/leptonica/src/colorspace.c\nLEPTONICA_SRC += thirdparty/leptonica/src/compare.c\nLEPTONICA_SRC += thirdparty/leptonica/src/conncomp.c\nLEPTONICA_SRC += thirdparty/leptonica/src/convertfiles.c\nLEPTONICA_SRC += thirdparty/leptonica/src/convolve.c\nLEPTONICA_SRC += thirdparty/leptonica/src/correlscore.c\nLEPTONICA_SRC += thirdparty/leptonica/src/dewarp1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/dewarp2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/dewarp3.c\nLEPTONICA_SRC += thirdparty/leptonica/src/dewarp4.c\nLEPTONICA_SRC += thirdparty/leptonica/src/dnabasic.c\nLEPTONICA_SRC += thirdparty/leptonica/src/dnafunc1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/dnahash.c\nLEPTONICA_SRC += thirdparty/leptonica/src/dwacomb.2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/dwacomblow.2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/edge.c\nLEPTONICA_SRC += thirdparty/leptonica/src/encoding.c\nLEPTONICA_SRC += thirdparty/leptonica/src/enhance.c\nLEPTONICA_SRC += thirdparty/leptonica/src/fhmtauto.c\nLEPTONICA_SRC += thirdparty/leptonica/src/fhmtgenlow.1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/fmorphauto.c\nLEPTONICA_SRC += thirdparty/leptonica/src/fmorphgen.1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/fmorphgenlow.1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/fpix1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/fpix2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/gifiostub.c\nLEPTONICA_SRC += thirdparty/leptonica/src/gplot.c\nLEPTONICA_SRC += thirdparty/leptonica/src/graphics.c\nLEPTONICA_SRC += thirdparty/leptonica/src/graymorph.c\nLEPTONICA_SRC += thirdparty/leptonica/src/grayquant.c\nLEPTONICA_SRC += thirdparty/leptonica/src/hashmap.c\nLEPTONICA_SRC += thirdparty/leptonica/src/heap.c\nLEPTONICA_SRC += thirdparty/leptonica/src/jbclass.c\nLEPTONICA_SRC += thirdparty/leptonica/src/jp2kheader.c\nLEPTONICA_SRC += thirdparty/leptonica/src/jp2kheaderstub.c\nLEPTONICA_SRC += thirdparty/leptonica/src/jp2kiostub.c\nLEPTONICA_SRC += thirdparty/leptonica/src/jpegiostub.c\nLEPTONICA_SRC += thirdparty/leptonica/src/kernel.c\nLEPTONICA_SRC += thirdparty/leptonica/src/libversions.c\nLEPTONICA_SRC += thirdparty/leptonica/src/list.c\nLEPTONICA_SRC += thirdparty/leptonica/src/map.c\nLEPTONICA_SRC += thirdparty/leptonica/src/morph.c\nLEPTONICA_SRC += thirdparty/leptonica/src/morphapp.c\nLEPTONICA_SRC += thirdparty/leptonica/src/morphdwa.c\nLEPTONICA_SRC += thirdparty/leptonica/src/morphseq.c\nLEPTONICA_SRC += thirdparty/leptonica/src/numabasic.c\nLEPTONICA_SRC += thirdparty/leptonica/src/numafunc1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/numafunc2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pageseg.c\nLEPTONICA_SRC += thirdparty/leptonica/src/paintcmap.c\nLEPTONICA_SRC += thirdparty/leptonica/src/partify.c\nLEPTONICA_SRC += thirdparty/leptonica/src/partition.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pdfio1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pdfio1stub.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pdfio2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pdfio2stub.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pix1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pix2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pix3.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pix4.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pix5.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pixabasic.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pixacc.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pixafunc1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pixafunc2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pixalloc.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pixarith.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pixcomp.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pixconv.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pixlabel.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pixtiling.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pngiostub.c\nLEPTONICA_SRC += thirdparty/leptonica/src/pnmio.c\nLEPTONICA_SRC += thirdparty/leptonica/src/projective.c\nLEPTONICA_SRC += thirdparty/leptonica/src/psio1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/psio1stub.c\nLEPTONICA_SRC += thirdparty/leptonica/src/psio2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/psio2stub.c\nLEPTONICA_SRC += thirdparty/leptonica/src/ptabasic.c\nLEPTONICA_SRC += thirdparty/leptonica/src/ptafunc1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/ptafunc2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/ptra.c\nLEPTONICA_SRC += thirdparty/leptonica/src/quadtree.c\nLEPTONICA_SRC += thirdparty/leptonica/src/queue.c\nLEPTONICA_SRC += thirdparty/leptonica/src/rank.c\nLEPTONICA_SRC += thirdparty/leptonica/src/rbtree.c\nLEPTONICA_SRC += thirdparty/leptonica/src/readfile.c\nLEPTONICA_SRC += thirdparty/leptonica/src/regutils.c\nLEPTONICA_SRC += thirdparty/leptonica/src/rop.c\nLEPTONICA_SRC += thirdparty/leptonica/src/roplow.c\nLEPTONICA_SRC += thirdparty/leptonica/src/rotate.c\nLEPTONICA_SRC += thirdparty/leptonica/src/rotateam.c\nLEPTONICA_SRC += thirdparty/leptonica/src/rotateorth.c\nLEPTONICA_SRC += thirdparty/leptonica/src/rotateshear.c\nLEPTONICA_SRC += thirdparty/leptonica/src/runlength.c\nLEPTONICA_SRC += thirdparty/leptonica/src/sarray1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/sarray2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/scale1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/scale2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/seedfill.c\nLEPTONICA_SRC += thirdparty/leptonica/src/sel1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/sel2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/selgen.c\nLEPTONICA_SRC += thirdparty/leptonica/src/shear.c\nLEPTONICA_SRC += thirdparty/leptonica/src/skew.c\nLEPTONICA_SRC += thirdparty/leptonica/src/spixio.c\nLEPTONICA_SRC += thirdparty/leptonica/src/stack.c\nLEPTONICA_SRC += thirdparty/leptonica/src/stringcode.c\nLEPTONICA_SRC += thirdparty/leptonica/src/strokes.c\nLEPTONICA_SRC += thirdparty/leptonica/src/textops.c\nLEPTONICA_SRC += thirdparty/leptonica/src/tiffiostub.c\nLEPTONICA_SRC += thirdparty/leptonica/src/utils1.c\nLEPTONICA_SRC += thirdparty/leptonica/src/utils2.c\nLEPTONICA_SRC += thirdparty/leptonica/src/warper.c\nLEPTONICA_SRC += thirdparty/leptonica/src/webpiostub.c\nLEPTONICA_SRC += thirdparty/leptonica/src/writefile.c\nLEPTONICA_SRC += thirdparty/leptonica/src/zlibmem.c\nLEPTONICA_SRC += thirdparty/leptonica/src/zlibmemstub.c\n\n# --- TESSERACT (optional) ---\n\nTESSERACT_LANGFLAGS = -std=c++17\nTESSERACT_CFLAGS += -Ithirdparty/tesseract/include\nTESSERACT_CFLAGS += -Iscripts/tesseract\n\nTESSERACT_DEFINES  = -DTESSERACT_IMAGEDATA_AS_PIX\nTESSERACT_DEFINES += -DTESSERACT_DISABLE_DEBUG_FONTS\nTESSERACT_DEFINES += -DGRAPHICS_DISABLED\nTESSERACT_DEFINES += -DDISABLED_LEGACY_ENGINE\n\nTESSERACT_BUILD_CFLAGS += -Ithirdparty/tesseract/src\nTESSERACT_BUILD_CFLAGS += -Ithirdparty/tesseract/src/api\nTESSERACT_BUILD_CFLAGS += -Ithirdparty/tesseract/src/arch\nTESSERACT_BUILD_CFLAGS += -Ithirdparty/tesseract/src/ccmain\nTESSERACT_BUILD_CFLAGS += -Ithirdparty/tesseract/src/ccstruct\nTESSERACT_BUILD_CFLAGS += -Ithirdparty/tesseract/src/ccutil\nTESSERACT_BUILD_CFLAGS += -Ithirdparty/tesseract/src/classify\nTESSERACT_BUILD_CFLAGS += -Ithirdparty/tesseract/src/dict\nTESSERACT_BUILD_CFLAGS += -Ithirdparty/tesseract/src/lstm\nTESSERACT_BUILD_CFLAGS += -Ithirdparty/tesseract/src/textord\nTESSERACT_BUILD_CFLAGS += -Ithirdparty/tesseract/src/viewer\nTESSERACT_BUILD_CFLAGS += -Ithirdparty/tesseract/src/wordrec\nTESSERACT_BUILD_CFLAGS += -Ithirdparty/tesseract/src/cutil\nTESSERACT_BUILD_CFLAGS += $(TESSERACT_LANGFLAGS)\n\nTESSERACT_BUILD_CFLAGS += $(LEPTONICA_CFLAGS)\n\nTESSERACT_LIBS += -lpthread\nTESSERACT_LIBS += -lstdc++\n\nTESSERACT_SRC += thirdparty/tesseract/src/api/altorenderer.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/api/baseapi.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/api/capi.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/api/hocrrenderer.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/api/lstmboxrenderer.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/api/pagerenderer.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/api/pdfrenderer.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/api/renderer.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/api/wordstrboxrenderer.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/arch/dotproduct.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/arch/dotproductneon.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/arch/intsimdmatrix.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/arch/simddetect.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/applybox.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/control.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/linerec.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/ltrresultiterator.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/mutableiterator.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/output.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/pageiterator.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/pagesegmain.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/pagewalk.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/paragraphs.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/paramsd.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/pgedit.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/reject.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/resultiterator.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/tessedit.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/tesseractclass.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/tessvars.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/thresholder.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccmain/werdit.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/blamer.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/blobbox.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/blobs.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/blread.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/boxread.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/boxword.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/ccstruct.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/coutln.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/detlinefit.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/dppoint.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/image.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/imagedata.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/linlsq.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/matrix.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/mod128.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/normalis.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/ocrblock.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/ocrpara.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/ocrrow.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/otsuthr.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/pageres.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/pdblock.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/points.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/polyaprx.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/polyblk.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/quadlsq.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/quspline.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/ratngs.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/rect.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/rejctmap.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/seam.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/split.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/statistc.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/stepblob.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccstruct/werd.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/ccutil.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/clst.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/elst.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/elst2.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/errcode.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/params.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/scanutils.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/serialis.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/tessdatamanager.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/tprintf.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/unichar.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/unicharcompress.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/unicharmap.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/ccutil/unicharset.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/classify/classify.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/dict/context.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/dict/dawg.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/dict/dawg_cache.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/dict/dict.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/dict/permdawg.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/dict/stopper.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/dict/trie.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/convolve.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/fullyconnected.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/functions.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/input.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/lstm.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/lstmrecognizer.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/maxpool.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/network.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/networkio.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/parallel.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/plumbing.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/recodebeam.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/reconfig.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/reversed.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/series.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/stridemap.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/lstm/weightmatrix.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/alignedblob.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/baselinedetect.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/bbgrid.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/blkocc.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/blobgrid.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/ccnontextdetect.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/cjkpitch.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/colfind.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/colpartition.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/colpartitiongrid.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/colpartitionset.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/devanagari_processing.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/drawtord.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/edgblob.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/edgloop.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/fpchop.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/gap_map.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/imagefind.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/linefind.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/makerow.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/oldbasel.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/pithsync.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/pitsync1.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/scanedg.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/sortflts.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/strokewidth.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/tabfind.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/tablefind.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/tablerecog.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/tabvector.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/textlineprojection.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/textord.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/topitch.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/tordmain.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/tospace.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/tovars.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/underlin.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/wordseg.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/textord/workingpartset.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/viewer/scrollview.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/viewer/svmnode.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/viewer/svutil.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/wordrec/tface.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/wordrec/wordrec.cpp\n\nifeq ($(HAVE_AVX),yes)\nTESSERACT_DEFINES += -DHAVE_AVX -D__AVX__\nTESSERACT_BUILD_CFLAGS += -mavx\nTESSERACT_SRC += thirdparty/tesseract/src/arch/dotproductavx.cpp\nendif\n\nifeq ($(HAVE_AVX2),yes)\nTESSERACT_DEFINES += -DHAVE_AVX2 -D__AVX2__\nTESSERACT_BUILD_CFLAGS += -mavx2\nTESSERACT_SRC += thirdparty/tesseract/src/arch/intsimdmatrixavx2.cpp\nendif\n\nifeq ($(HAVE_FMA),yes)\nTESSERACT_DEFINES += -DHAVE_FMA -D__FMA__\nTESSERACT_BUILD_CFLAGS += -mfma\nTESSERACT_SRC += thirdparty/tesseract/src/arch/dotproductfma.cpp\nendif\n\nifeq ($(HAVE_SSE4_1),yes)\nTESSERACT_DEFINES += -DHAVE_SSE4_1 -D__SSE4_1__\nTESSERACT_BUILD_CFLAGS += -msse4.1\nTESSERACT_SRC += thirdparty/tesseract/src/arch/dotproductsse.cpp\nTESSERACT_SRC += thirdparty/tesseract/src/arch/intsimdmatrixsse.cpp\nendif\n\nifeq ($(HAVE_NEON),yes)\nTESSERACT_DEFINES += -DHAVE_NEON\nTESSERACT_BUILD_CFLAGS += $(NEONFLAGS)\nendif\n# Always include the neon code - it will compile to nothing if\n# neon isn't enabled. We need to always include it, because it\n# will be used if __aarch64__ is defined, which implies the\n# presence of NEON even without the HAVE_NEON flags.\nTESSERACT_SRC += thirdparty/tesseract/src/arch/intsimdmatrixneon.cpp\n\nTESSERACT_BUILD_CFLAGS += $(TESSERACT_DEFINES)\n\n# --- EXTRACT ---\n\nEXTRACT_CFLAGS += -Ithirdparty/extract/include -Ithirdparty/extract/src\n\nEXTRACT_SRC += thirdparty/extract/src/alloc.c\nEXTRACT_SRC += thirdparty/extract/src/astring.c\nEXTRACT_SRC += thirdparty/extract/src/boxer.c\nEXTRACT_SRC += thirdparty/extract/src/buffer.c\nEXTRACT_SRC += thirdparty/extract/src/document.c\nEXTRACT_SRC += thirdparty/extract/src/docx.c\nEXTRACT_SRC += thirdparty/extract/src/docx_template.c\nEXTRACT_SRC += thirdparty/extract/src/extract.c\nEXTRACT_SRC += thirdparty/extract/src/join.c\nEXTRACT_SRC += thirdparty/extract/src/json.c\nEXTRACT_SRC += thirdparty/extract/src/mem.c\nEXTRACT_SRC += thirdparty/extract/src/html.c\nEXTRACT_SRC += thirdparty/extract/src/odt.c\nEXTRACT_SRC += thirdparty/extract/src/odt_template.c\nEXTRACT_SRC += thirdparty/extract/src/outf.c\nEXTRACT_SRC += thirdparty/extract/src/rect.c\nEXTRACT_SRC += thirdparty/extract/src/sys.c\nEXTRACT_SRC += thirdparty/extract/src/text.c\nEXTRACT_SRC += thirdparty/extract/src/xml.c\nEXTRACT_SRC += thirdparty/extract/src/zip.c\n"
        },
        {
          "name": "Makerules",
          "type": "blob",
          "size": 9.931640625,
          "content": "# Configuration for the Makefile\n\n# We use $OS from environment if set.\nifeq ($(OS),)\n  OS := $(shell uname)\n  OS := $(OS:MINGW%=MINGW)\n  OS := $(OS:MSYS%=MINGW)\n  OS := $(OS:Windows_NT=MINGW)\n  OS := $(OS:Darwin=MACOS)\nendif\n\nWARNING_CFLAGS := -Wall -Wsign-compare\n\n# Feature configuration options\n\nbuild_suffix :=\n\nifeq ($(tesseract),yes)\n  build_suffix := $(build_suffix)-tesseract\n  USE_TESSERACT := yes\nendif\n\nifeq ($(tofu),yes)\n  build_suffix := $(build_suffix)-tofu\n  XCFLAGS += -DTOFU\nendif\n\nifeq ($(tofu_cjk),yes)\n  build_suffix := $(build_suffix)-tofu_cjk\n  XCFLAGS += -DTOFU_CJK\nendif\n\nifeq ($(tofu_cjk_ext),yes)\n  build_suffix := $(build_suffix)-tofu_cjk_ext\n  XCFLAGS += -DTOFU_CJK_EXT\nendif\n\nifeq ($(tofu_cjk_lang),yes)\n  build_suffix := $(build_suffix)-tofu_cjk_lang\n  XCFLAGS += -DTOFU_CJK_LANG\nendif\n\nifeq ($(archive),yes)\n  build_suffix := $(build_suffix)-archive\n  XCFLAGS += -DHAVE_LIBARCHIVE\n  HAVE_LIBARCHIVE := yes\nendif\n\nifeq ($(commercial),yes)\n  build_suffix := $(build_suffix)-commercial\n  XCFLAGS += -DHAVE_SMARTOFFICE\n  HAVE_SMARTOFFICE := yes\nendif\n\n# System specific features\n\nifeq ($(findstring -fembed-bitcode,$(XCFLAGS)),)\n  # clang does not support these in combination with -fembed-bitcode\n  CFLAGS += -ffunction-sections -fdata-sections\nendif\n\nifeq ($(OS),MACOS)\n  LDREMOVEUNREACH := -Wl,-dead_strip\n  SO := dylib\nelse\n  LDREMOVEUNREACH := -Wl,--gc-sections\n  ifeq ($(OS),MINGW)\n    SO := dll\n    EXE := .exe\n  else\n    SO := so\n  endif\nendif\n\nifeq \"$(OS)\" \"ios\"\n  NEONFLAGS =\nelse\n  NEONFLAGS = -mneon\nendif\n\nSANITIZE_FLAGS += -fsanitize=address\nSANITIZE_FLAGS += -fsanitize=leak\n\nifeq ($(shared),yes)\n  ifeq ($(findstring shared-, $(build_prefix)),)\n    override build_prefix := $(build_prefix)shared-\n  endif\n  LIB_CFLAGS = -fPIC\n  ifeq ($(OS),MACOS)\n    LIB_LDFLAGS = -dynamiclib\n  else ifeq ($(OS),wasm)\n    LIB_LDFLAGS = -shared -sSIDE_MODULE\n    EXE_LDFLAGS = -sMAIN_MODULE\n  else ifeq ($(OS),wasm-mt)\n    LIB_LDFLAGS = -shared -sSIDE_MODULE\n    EXE_LDFLAGS = -sMAIN_MODULE\n  else ifeq ($(OS),pyodide)\n    LIB_LDFLAGS = -shared -sSIDE_MODULE\n    EXE_LDFLAGS = -sMAIN_MODULE\n\n    # Pyodide's ld does not support -b so we cannot use it to create object\n    # files containing font data, so leave HAVE_OBJCOPY unset. And we need\n    # extra memory when linking.\n    LDFLAGS += -sTOTAL_MEMORY=48MB\n  else\n    LIB_LDFLAGS = -shared\n  endif\nelse\n  LIB_CFLAGS =\n  LIB_LDFLAGS =\nendif\n\nifeq ($(build),debug)\n  CFLAGS += -pipe -g\n  LDFLAGS += -g\nelse ifeq ($(build),release)\n  CFLAGS += -pipe -O2 -DNDEBUG\n  LDFLAGS += $(LDREMOVEUNREACH) -Wl,-s\nelse ifeq ($(build),small)\n  CFLAGS += -pipe -Os -DNDEBUG\n  LDFLAGS += $(LDREMOVEUNREACH) -Wl,-s\nelse ifeq ($(build),valgrind)\n  CFLAGS += -pipe -O2 -DNDEBUG -DPACIFY_VALGRIND\n  LDFLAGS += $(LDREMOVEUNREACH) -Wl,-s\nelse ifeq ($(build),sanitize)\n  CFLAGS += -pipe -g $(SANITIZE_FLAGS)\n  LDFLAGS += -g $(SANITIZE_FLAGS)\nelse ifeq ($(build),sanitize-release)\n  CFLAGS += -pipe -O2 -DNDEBUG $(SANITIZE_FLAGS)\n  LDFLAGS += $(LDREMOVEUNREACH) -Wl,-s $(SANITIZE_FLAGS)\nelse ifeq ($(build),profile)\n  CFLAGS += -pipe -O2 -DNDEBUG -pg\n  LDFLAGS += -pg\nelse ifeq ($(build),coverage)\n  CFLAGS += -pipe -g -pg -fprofile-arcs -ftest-coverage\n  LIBS += -lgcov\nelse ifeq ($(build),native)\n  CFLAGS += -pipe -O2 -DNDEBUG -march=native\n  LDFLAGS += $(LDREMOVEUNREACH) -Wl,-s\nelse ifeq ($(build),memento)\n  CFLAGS += -pipe -g -DMEMENTO -DMEMENTO_MUPDF_HACKS\n  LDFLAGS += -g -rdynamic\n  ifneq ($(HAVE_LIBDL),no)\n    CFLAGS += -DHAVE_LIBDL\n    ifeq ($(OS),OpenBSD)\n      LIBS += -L /usr/local/lib -l execinfo\n    else\n      LIBS += -ldl\n    endif\n  endif\nelse ifeq ($(build),gperf)\n  CFLAGS += -pipe -O2 -DNDEBUG -DGPERF\n  LIBS += -lprofiler\nelse\n  $(error unknown build setting: '$(build)')\nendif\n\nifeq ($(OS),OpenBSD)\n  LDFLAGS += -pthread\nendif\n\n# Default system libraries\nSYS_FREETYPE_LIBS := -lfreetype2\nSYS_HARFBUZZ_LIBS := -lharfbuzz\nSYS_JBIG2DEC_LIBS := -ljbig2dec\nSYS_JPEGXR_LIBS := -ljpegxr\nSYS_LCMS2_LIBS := -llcms2\nSYS_LIBJPEG_LIBS := -ljpeg\nSYS_MUJS_LIBS := -lmujs\nSYS_OPENJPEG_LIBS := -lopenjp2\nSYS_ZLIB_LIBS := -lz\nSYS_TESSERACT_LIBS := -ltesseract\nSYS_LEPTONICA_LIBS := -llept\nSYS_LIBARCHIVE_LIBS := -larchive\n\nifneq \"$(CLUSTER)\" \"\"\n  CFLAGS += -DCLUSTER\nendif\n\nifeq ($(OS),Linux)\n    LINUX_OR_OPENBSD := yes\nendif\nifeq ($(OS),OpenBSD)\n    LINUX_OR_OPENBSD := yes\nendif\n\nifeq ($(OS),MINGW)\n  WINDRES := windres\n  HAVE_WIN32 := yes\n\nelse ifeq ($(OS),MACOS)\n  HAVE_GLUT := yes\n  SYS_GLUT_CFLAGS := -Wno-deprecated-declarations\n  SYS_GLUT_LIBS := -framework GLUT -framework OpenGL\n  CC = xcrun cc\n  AR = xcrun ar\n  LD = xcrun ld\n  RANLIB = xcrun ranlib\n\n  ifneq ($(ARCHFLAGS),)\n    $(warning \"MacOS with ARCHFLAGS set. Assuming we are building for arm64, and setting HAVE_LIBCRYPTO to no.\")\n    HAVE_LIBCRYPTO := no\n  else ifeq (, $(shell command -v pkg-config))\n    $(warning \"No pkg-config found, install it for proper integration of libcrypto\")\n  else\n    HAVE_LIBCRYPTO := $(shell pkg-config --exists 'libcrypto >= 1.1.0' && echo yes)\n    ifeq ($(HAVE_LIBCRYPTO),yes)\n\t  LIBCRYPTO_CFLAGS := $(shell pkg-config --cflags libcrypto) -DHAVE_LIBCRYPTO\n\t  LIBCRYPTO_LIBS := $(shell pkg-config --libs libcrypto)\n    endif\n  endif\n\nelse ifeq ($(LINUX_OR_OPENBSD),yes)\n\n  ifeq ($(OS),Linux)\n    HAVE_OBJCOPY := yes\n  endif\n\n  ifeq ($(shell pkg-config --exists freetype2 && echo yes),yes)\n\tSYS_FREETYPE_CFLAGS := $(shell pkg-config --cflags freetype2)\n\tSYS_FREETYPE_LIBS := $(shell pkg-config --libs freetype2)\n  endif\n  ifeq ($(shell pkg-config --exists gumbo && echo yes),yes)\n\tSYS_GUMBO_CFLAGS := $(shell pkg-config --cflags gumbo)\n\tSYS_GUMBO_LIBS := $(shell pkg-config --libs gumbo)\n  endif\n  ifeq ($(shell pkg-config --exists harfbuzz && echo yes),yes)\n\tSYS_HARFBUZZ_CFLAGS := $(shell pkg-config --cflags harfbuzz)\n\tSYS_HARFBUZZ_LIBS := $(shell pkg-config --libs harfbuzz)\n  endif\n  ifeq ($(shell pkg-config --exists lcms2 && echo yes),yes)\n\tSYS_LCMS2_CFLAGS := $(shell pkg-config --cflags lcms2)\n\tSYS_LCMS2_LIBS := $(shell pkg-config --libs lcms2)\n  endif\n  ifeq ($(shell pkg-config --exists libjpeg && echo yes),yes)\n\tSYS_LIBJPEG_CFLAGS := $(shell pkg-config --cflags libjpeg)\n\tSYS_LIBJPEG_LIBS := $(shell pkg-config --libs libjpeg)\n  endif\n  ifeq ($(shell pkg-config --exists libopenjp2 && echo yes),yes)\n\tSYS_OPENJPEG_CFLAGS := $(shell pkg-config --cflags libopenjp2)\n\tSYS_OPENJPEG_LIBS := $(shell pkg-config --libs libopenjp2)\n  endif\n  ifeq ($(shell pkg-config --exists zlib && echo yes),yes)\n\tSYS_ZLIB_CFLAGS := $(shell pkg-config --cflags zlib)\n\tSYS_ZLIB_LIBS := $(shell pkg-config --libs zlib)\n  endif\n\n  HAVE_SYS_LEPTONICA := $(shell pkg-config --exists 'lept >= 1.7.4' && echo yes)\n  ifeq ($(HAVE_SYS_LEPTONICA),yes)\n\tSYS_LEPTONICA_CFLAGS := $(shell pkg-config --cflags lept)\n\tSYS_LEPTONICA_LIBS := $(shell pkg-config --libs lept)\n  endif\n\n  HAVE_SYS_TESSERACT := $(shell pkg-config --exists 'tesseract >= 4.0.0' && echo yes)\n  ifeq ($(HAVE_SYS_TESSERACT),yes)\n\tSYS_TESSERACT_CFLAGS := $(shell pkg-config --cflags tesseract)\n\tSYS_TESSERACT_LIBS := $(shell pkg-config --libs tesseract)\n  endif\n\n  HAVE_SYS_LIBARCHIVE := $(shell pkg-config --exists 'libarchive' && echo yes)\n  ifeq ($(HAVE_SYS_LIBARCHIVE),yes)\n\tSYS_LIBARCHIVE_CFLAGS := $(shell pkg-config --cflags libarchive)\n\tSYS_LIBARCHIVE_LIBS := $(shell pkg-config --libs libarchive)\n  endif\n\n  HAVE_SYS_CURL := $(shell pkg-config --exists libcurl && echo yes)\n  ifeq ($(HAVE_SYS_CURL),yes)\n\tSYS_CURL_CFLAGS := $(shell pkg-config --cflags libcurl)\n\tSYS_CURL_LIBS := $(shell pkg-config --libs libcurl)\n  endif\n\n  HAVE_GLUT := yes\n  ifeq ($(HAVE_GLUT),yes)\n    ifeq ($(OS),OpenBSD)\n      SYS_GLUT_CFLAGS := $(shell pkg-config --cflags glut gl)\n      SYS_GLUT_LIBS := $(shell pkg-config --libs glut gl)\n    else\n      SYS_GLUT_CFLAGS :=\n      SYS_GLUT_LIBS := -lglut -lGL\n    endif\n  endif\n\n  HAVE_X11 := $(shell pkg-config --exists x11 xext && echo yes)\n  ifeq ($(HAVE_X11),yes)\n\tX11_CFLAGS := $(shell pkg-config --cflags x11 xext)\n\tX11_LIBS := $(shell pkg-config --libs x11 xext)\n  endif\n\n  ifeq ($(HAVE_LIBCRYPTO),)\n    HAVE_LIBCRYPTO := $(shell pkg-config --exists 'libcrypto >= 1.1.0' && echo yes)\n  endif\n  ifeq ($(HAVE_LIBCRYPTO),yes)\n\tLIBCRYPTO_CFLAGS := $(shell pkg-config --cflags libcrypto) -DHAVE_LIBCRYPTO\n\tLIBCRYPTO_LIBS := $(shell pkg-config --libs libcrypto)\n  endif\n\n  HAVE_PTHREAD := yes\n  ifeq ($(HAVE_PTHREAD),yes)\n\tPTHREAD_CFLAGS :=\n\tPTHREAD_LIBS := -lpthread\n  endif\n\nendif\n\n# The following section has various cross compilation configurations.\n#\n# Invoke these as:\n#      make OS=mingw32-cross\n#\n# This does rely on the generated directory being populated with the font files.\n# On a unix-like system, run 'make generate' before doing the cross compile.\n# On Windows, run 'nmake -f scripts\\fontdump.nmake' in a Visual Studio command prompt.\n\nifeq \"$(OS)\" \"wasm\"\n  build_prefix += wasm/\n  CC = emcc\n  CXX = em++\n  AR = emar\n  HAVE_GLUT=no\n  HAVE_X11=no\n  HAVE_OBJCOPY=no\n  HAVE_LIBCRYPTO=no\nendif\n\nifeq \"$(OS)\" \"wasm-mt\"\n  build_prefix += wasm-mt/\n  CC = emcc\n  CXX = em++\n  AR = emar\n  HAVE_GLUT=no\n  HAVE_X11=no\n  HAVE_OBJCOPY=no\n  HAVE_LIBCRYPTO=no\n  CFLAGS += -pthread\nendif\n\nifeq \"$(OS)\" \"pyodide\"\n  build_prefix += $(OS)/\n  # We use the provided $CC and $CXX.\n  AR = emar\n  HAVE_GLUT=no\n  HAVE_X11=no\n  HAVE_OBJCOPY=no\n  HAVE_LIBCRYPTO=no\n  CFLAGS += -pthread\nendif\n\nifeq \"$(OS)\" \"mingw32-cross\"\n  build_prefix += $(OS)/\n  SO := dll\n  EXE := .exe\n  CC = i686-w64-mingw32-gcc\n  CXX = i686-w64-mingw32-g++\n  LD = i686-w64-mingw32-gcc\n  AR = i686-w64-mingw32-ar\n  WINDRES = i686-w64-mingw32-windres\n  HAVE_WIN32=yes\nendif\n\nifeq \"$(OS)\" \"mingw64-cross\"\n  build_prefix += $(OS)/\n  SO := dll\n  EXE := .exe\n  CC = x86_64-w64-mingw32-gcc\n  CXX = x86_64-w64-mingw32-g++\n  LD = x86_64-w64-mingw32-gcc\n  AR = x86_64-w64-mingw32-ar\n  WINDRES = x86_64-w64-mingw32-windres\n  HAVE_WIN32=yes\nendif\n\n# Most variables when building for iOS are set up in ios/build_libs.sh,\n# which is called from the Xcode project as a \"Run Script\" build step.\n# The following section works for both device and simulator builds.\nifeq \"$(OS)\" \"ios\"\n  CC = xcrun cc\n  CXX = xcrun c++\n  AR = xcrun ar\n  LD = xcrun ld\n  RANLIB = xcrun ranlib\nendif\n"
        },
        {
          "name": "Makethird",
          "type": "blob",
          "size": 8.6611328125,
          "content": "# GNU Makefile for third party libraries used by MuPDF\n\nifeq ($(USE_SYSTEM_LIBS),yes)\n  USE_SYSTEM_FREETYPE := yes\n  USE_SYSTEM_GUMBO := yes\n  USE_SYSTEM_HARFBUZZ := yes\n  USE_SYSTEM_JBIG2DEC := yes\n  USE_SYSTEM_JPEGXR := no # not available\n  USE_SYSTEM_LCMS2 := no # lcms2mt is strongly preferred\n  USE_SYSTEM_LIBJPEG := yes\n  USE_SYSTEM_MUJS := no # not available\n  USE_SYSTEM_OPENJPEG := yes\n  USE_SYSTEM_ZLIB := yes\n  USE_SYSTEM_GLUT := yes\n  USE_SYSTEM_CURL := yes\n  USE_SYSTEM_LEPTONICA := yes\n  USE_SYSTEM_TESSERACT := yes\nendif\n\n# Unlike the other libraries, we default to using system\n# libarchive if it is requested - because we offer no\n# packaged version.\nUSE_SYSTEM_LIBARCHIVE ?= yes\n\nifeq ($(OS),MACOS)\n  USE_SYSTEM_GLUT := yes\nendif\n\nifeq ($(OS),Linux)\n  USE_SYSTEM_CURL ?= yes\nendif\n\n# Use of Tesseract is optional:\nifeq ($(USE_TESSERACT),yes)\n  USE_LEPTONICA := yes\n  ifeq ($(USE_SYSTEM_TESSERACT),yes)\n    HAVE_TESSERACT := $(HAVE_SYS_TESSERACT)\n  else\n    ifneq ($(wildcard thirdparty/tesseract/src/*),)\n      HAVE_TESSERACT := yes\n    endif\n  endif\nendif\n\nifeq ($(USE_LEPTONICA),yes)\n  ifeq ($(USE_SYSTEM_LEPTONICA),yes)\n    HAVE_LEPTONICA := $(HAVE_SYS_LEPTONICA)\n  else\n    ifneq ($(wildcard thirdparty/leptonica/src/*),)\n      HAVE_LEPTONICA := yes\n    endif\n  endif\nendif\n\nifeq ($(USE_TESSERACT),yes)\n  ifneq ($(HAVE_LEPTONICA),yes)\n    echo \"Build will fail! Tesseract requires LEPTONICA\"\n  endif\nendif\n\n# --- Include source file lists ---\n\ninclude Makelists\n\n# --- FREETYPE 2 ---\n\nifeq ($(USE_SYSTEM_FREETYPE),yes)\n  THIRD_CFLAGS += $(SYS_FREETYPE_CFLAGS)\n  THIRD_LIBS += $(SYS_FREETYPE_LIBS)\nelse\n  THIRD_CFLAGS += $(FREETYPE_CFLAGS)\n  THIRD_LIBS += $(FREETYPE_LIBS)\n  THIRD_SRC += $(FREETYPE_SRC)\n$(OUT)/thirdparty/freetype/%.o: thirdparty/freetype/%.c\n\t$(CC_CMD) $(LIB_CFLAGS) $(FREETYPE_CFLAGS) $(FREETYPE_BUILD_CFLAGS)\nendif\n\n# --- GUMBO (HTML5 parser) ---\n\nifeq ($(USE_SYSTEM_GUMBO),yes)\n  THIRD_CFLAGS += $(SYS_GUMBO_CFLAGS)\n  THIRD_LIBS += $(SYS_GUMBO_LIBS)\nelse\n  THIRD_CFLAGS += $(GUMBO_CFLAGS)\n  THIRD_LIBS += $(GUMBO_LIBS)\n  THIRD_SRC += $(GUMBO_SRC)\n$(OUT)/thirdparty/gumbo-parser/%.o: thirdparty/gumbo-parser/%.c\n\t$(CC_CMD) $(LIB_CFLAGS) $(GUMBO_CFLAGS) $(GUMBO_BUILD_CFLAGS)\nendif\n\n# --- HARFBUZZ ---\n\nifeq ($(USE_SYSTEM_HARFBUZZ),yes)\n  THIRD_CFLAGS += $(SYS_HARFBUZZ_CFLAGS)\n  THIRD_LIBS += $(SYS_HARFBUZZ_LIBS)\nelse\n  THIRD_CFLAGS += $(HARFBUZZ_CFLAGS)\n  THIRD_LIBS += $(HARFBUZZ_LIBS)\n  THIRD_SRC += $(HARFBUZZ_SRC)\n$(OUT)/thirdparty/harfbuzz/%.o: thirdparty/harfbuzz/%.cc\n\t$(CXX_CMD) $(LIB_CFLAGS) $(HARFBUZZ_CFLAGS) $(HARFBUZZ_BUILD_CFLAGS)\nendif\n\n# --- JPEG-XR ---\n\nifeq ($(HAVE_JPEGXR),yes)\n  THIRD_CFLAGS += -DHAVE_JPEGXR\nifeq ($(USE_SYSTEM_JPEGXR),yes)\n  THIRD_CFLAGS += $(SYS_JPEGXR_CFLAGS)\n  THIRD_LIBS += $(SYS_JPEGXR_LIBS)\nelse\n  THIRD_CFLAGS += $(JPEGXR_CFLAGS)\n  THIRD_LIBS += $(JPEGXR_LIBS)\n  THIRD_SRC += $(JPEGXR_SRC)\n$(OUT)/thirdparty/jpegxr/%.o: thirdparty/jpegxr/%.c\n\t$(CC_CMD) $(LIB_CFLAGS) $(JPEGXR_CFLAGS) $(JPEGXR_BUILD_CFLAGS)\nendif\nendif\n\n# --- LIBJPEG ---\n\nifeq ($(USE_SYSTEM_LIBJPEG),yes)\n  THIRD_CFLAGS += $(SYS_LIBJPEG_CFLAGS) -DSHARE_JPEG\n  THIRD_LIBS += $(SYS_LIBJPEG_LIBS)\nelse\n  THIRD_CFLAGS += $(LIBJPEG_CFLAGS)\n  THIRD_LIBS += $(LIBJPEG_LIBS)\n  THIRD_SRC += $(LIBJPEG_SRC)\n$(OUT)/thirdparty/libjpeg/%.o: thirdparty/libjpeg/%.c\n\t$(CC_CMD) $(LIB_CFLAGS) $(LIBJPEG_CFLAGS) $(LIBJPEG_BUILD_CFLAGS)\nendif\n\n# --- LCMS2 ---\n\nifeq ($(USE_SYSTEM_LCMS2),yes)\n  THIRD_CFLAGS += $(SYS_LCMS2_CFLAGS)\n  THIRD_LIBS += $(SYS_LCMS2_LIBS)\nelse\n  THIRD_CFLAGS += $(LCMS2_CFLAGS)\n  THIRD_LIBS += $(LCMS2_LIBS)\n  THIRD_SRC += $(LCMS2_SRC)\n$(OUT)/thirdparty/lcms2/%.o: thirdparty/lcms2/%.c\n\t$(CC_CMD) $(LIB_CFLAGS) $(LCMS2_CFLAGS) $(LCMS2_BUILD_CFLAGS)\nendif\n\n# --- MuJS ---\n\nifeq ($(USE_SYSTEM_MUJS),yes)\n  THIRD_CFLAGS += $(SYS_MUJS_CFLAGS)\n  THIRD_LIBS += $(SYS_MUJS_LIBS)\nelse\n  THIRD_CFLAGS += $(MUJS_CFLAGS)\n  THIRD_LIBS += $(MUJS_LIBS)\n  THIRD_SRC += $(MUJS_SRC)\n$(OUT)/thirdparty/mujs/%.o: thirdparty/mujs/%.c\n\t$(CC_CMD) $(LIB_CFLAGS) $(MUJS_CFLAGS) $(MUJS_BUILD_CFLAGS)\nendif\n\n# --- ZLIB ---\n\nifeq ($(USE_SYSTEM_ZLIB),yes)\n  THIRD_CFLAGS += $(SYS_ZLIB_CFLAGS)\n  THIRD_LIBS += $(SYS_ZLIB_LIBS)\nelse\n  THIRD_CFLAGS += $(ZLIB_CFLAGS)\n  THIRD_LIBS += $(ZLIB_LIBS)\n  THIRD_SRC += $(ZLIB_SRC)\n$(OUT)/thirdparty/zlib/%.o: thirdparty/zlib/%.c\n\t$(CC_CMD) $(LIB_CFLAGS) $(ZLIB_CFLAGS) $(ZLIB_BUILD_CFLAGS)\nendif\n\n# --- JBIG2DEC ---\n\nifeq ($(USE_SYSTEM_JBIG2DEC),yes)\n  THIRD_CFLAGS += $(SYS_JBIG2DEC_CFLAGS)\n  THIRD_LIBS += $(SYS_JBIG2DEC_LIBS)\nelse\n  THIRD_CFLAGS += $(JBIG2DEC_CFLAGS)\n  THIRD_LIBS += $(JBIG2DEC_LIBS)\n  THIRD_SRC += $(JBIG2DEC_SRC)\n$(OUT)/thirdparty/jbig2dec/%.o: thirdparty/jbig2dec/%.c\n\t$(CC_CMD) $(WARNING_CFLAGS) $(LIB_CFLAGS) $(JBIG2DEC_CFLAGS) $(JBIG2DEC_BUILD_CFLAGS)\nendif\n\n# --- OPENJPEG ---\n\nifeq ($(USE_SYSTEM_OPENJPEG),yes)\n  THIRD_CFLAGS += $(SYS_OPENJPEG_CFLAGS)\n  THIRD_LIBS += $(SYS_OPENJPEG_LIBS)\nelse\n  THIRD_CFLAGS += $(OPENJPEG_CFLAGS)\n  THIRD_LIBS += $(OPENJPEG_LIBS)\n  THIRD_SRC += $(OPENJPEG_SRC)\n$(OUT)/thirdparty/openjpeg/%.o: thirdparty/openjpeg/%.c\n\t$(CC_CMD) $(LIB_CFLAGS) $(OPENJPEG_CFLAGS) $(OPENJPEG_BUILD_CFLAGS)\nendif\n\n# --- FreeGLUT ---\n\nifeq ($(USE_SYSTEM_GLUT),yes)\n  THIRD_GLUT_CFLAGS := $(SYS_GLUT_CFLAGS)\n  THIRD_GLUT_LIBS += $(SYS_GLUT_LIBS)\nelse\n  THIRD_GLUT_CFLAGS += $(GLUT_CFLAGS)\n  THIRD_GLUT_LIBS += $(GLUT_LIBS)\n  THIRD_GLUT_SRC += $(GLUT_SRC)\n$(OUT)/thirdparty/freeglut/%.o: thirdparty/freeglut/%.c\n\t$(CC_CMD) $(LIB_CFLAGS) $(GLUT_CFLAGS) $(GLUT_BUILD_CFLAGS)\nendif\n\n# --- cURL ---\n\nifeq ($(USE_SYSTEM_CURL),yes)\n  ifeq ($(HAVE_SYS_CURL),yes)\n    HAVE_CURL := yes\n    CURL_CFLAGS := $(SYS_CURL_CFLAGS) -DHAVE_CURL\n    CURL_LIBS := $(SYS_CURL_LIBS)\n  endif\nendif\n\n# --- LEPTONICA ---\n\nifeq ($(HAVE_LEPTONICA),yes)\n  THIRD_CFLAGS += -DHAVE_LEPTONICA\nifeq ($(USE_SYSTEM_LEPTONICA),yes)\n  THIRD_CFLAGS += $(SYS_LEPTONICA_CFLAGS)\n  THIRD_LIBS += $(SYS_LEPTONICA_LIBS)\nelse\n  THIRD_CFLAGS += $(LEPTONICA_CFLAGS)\n  THIRD_LIBS += $(LEPTONICA_LIBS)\n  THIRD_SRC += $(LEPTONICA_SRC)\n$(OUT)/thirdparty/leptonica/%.o: thirdparty/leptonica/%.c\n\t$(CC_CMD) $(LIB_CFLAGS) $(LEPTONICA_CFLAGS) $(LEPTONICA_BUILD_CFLAGS)\nendif\nendif\n\n# --- TESSERACT ---\n\nifeq ($(HAVE_TESSERACT),yes)\n  THIRD_CFLAGS += -DHAVE_TESSERACT\nifeq ($(USE_SYSTEM_TESSERACT),yes)\n  THIRD_CFLAGS += $(SYS_TESSERACT_CFLAGS)\n  THIRD_LIBS += $(SYS_TESSERACT_LIBS) -lstdc++\nelse\n  THIRD_CFLAGS += $(TESSERACT_CFLAGS)\n  THIRD_LIBS += $(TESSERACT_LIBS)\n  THIRD_SRC += $(TESSERACT_SRC)\n  THIRD_SRC += $(TESSERACT_SRC)\n$(OUT)/thirdparty/tesseract/%.o: thirdparty/tesseract/%.cpp\n\t$(CXX_CMD) $(LIB_CFLAGS) $(TESSERACT_CFLAGS) $(TESSERACT_BUILD_CFLAGS)\nendif\nendif\n\n# --- EXTRACT ---\n\nTHIRD_CFLAGS += $(EXTRACT_CFLAGS)\nTHIRD_LIBS += $(EXTRACT_LIBS)\nTHIRD_SRC += $(EXTRACT_SRC)\n$(OUT)/thirdparty/extract/%.o: thirdparty/extract/%.c\n\t$(CC_CMD) $(WARNING_CFLAGS) $(LIB_CFLAGS) $(EXTRACT_CFLAGS) $(ZLIB_CFLAGS) $(EXTRACT_BUILD_CFLAGS)\n\n# The first python3 command in the next two rules returns 0 (success) iff\n# python3 exists and is version 3.6 or later.\n\nthirdparty/extract/src/docx_template.c: thirdparty/extract/src/template.docx thirdparty/extract/src/docx_template_build.py\n\t$(QUIET_GEN) if python3 -c 'import sys; sys.exit(sys.version_info < (3,6))'; \\\n\t\tthen python3 thirdparty/extract/src/docx_template_build.py \\\n\t\t\t-i thirdparty/extract/src/template.docx \\\n\t\t\t-n docx \\\n\t\t\t-o thirdparty/extract/src/docx_template ; \\\n\t\telse echo python3 is older than 3.6 so not running docx_template_build.py; \\\n\t\tfi\n\t@touch $@\n\nthirdparty/extract/src/odt_template.c: thirdparty/extract/src/template.odt thirdparty/extract/src/docx_template_build.py\n\t$(QUIET_GEN) if python3 -c 'import sys; sys.exit(sys.version_info < (3,6))'; \\\n\t\tthen python3 thirdparty/extract/src/docx_template_build.py \\\n\t\t\t-i thirdparty/extract/src/template.odt \\\n\t\t\t-n odt \\\n\t\t\t-o thirdparty/extract/src/odt_template ; \\\n\t\telse echo python3 is older than 3.6 so not running docx_template_build.py; \\\n\t\tfi\n\t@touch $@\n\ngenerate: thirdparty/extract/src/docx_template.c\n\n# --- LIBARCHIVE ---\n\nifeq ($(HAVE_LIBARCHIVE),yes)\n  THIRD_CFLAGS += -DHAVE_LIBARCHIVE\nifeq ($(USE_SYSTEM_LIBARCHIVE),yes)\n  THIRD_CFLAGS += $(SYS_LIBARCHIVE_CFLAGS)\n  THIRD_LIBS += $(SYS_LIBARCHIVE_LIBS) -lstdc++\nelse\n  THIRD_CFLAGS += $(LIBARCHIVE_CFLAGS)\n  THIRD_LIBS += $(LIBARCHIVE_LIBS)\n  THIRD_SRC += $(LIBARCHIVE_SRC)\n  THIRD_SRC += $(LIBARCHIVE_SRC)\nendif\nendif\n\n# --- HAVE_SMARTOFFICE ---\n\nifeq ($(HAVE_SMARTOFFICE),yes)\n  THIRD_CFLAGS += -DHAVE_SMARTOFFICE -Ithirdparty/so/include\n  SODOCHANDLER_LIB = $(OUT)/libsodochandler.a\n  COMMERCIAL_LIBS = $(SODOCHANDLER_LIB)\n  SOLIB_PATH ?= thirdparty/so/lib/linux/x64/\n  THIRD_LIBS += -L$(OUT) -L$(SOLIB_PATH) -lsodochandler -l:smart-office-lib.a\nendif\n\nSODOCHANDLER_SRC := $(sort $(wildcard thirdparty/so/source/*.c))\nSODOCHANDLER_OBJ := $(SODOCHANDLER_SRC:%.c=$(OUT)/%.o)\n$(SODOCHANDLER_LIB) : $(SODOCHANDLER_OBJ)\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 1.369140625,
          "content": "ABOUT\n\nMuPDF is a lightweight open source software framework for viewing and converting\nPDF, XPS, and E-book documents.\n\nSee the documentation in:\n\n\thttps://mupdf.readthedocs.io/en/latest/\n\nBuild instructions can be found in:\n\n\thttps://mupdf.readthedocs.io/en/latest/quick-start-guide.html\n\nLICENSE\n\nMuPDF is Copyright (c) 2006-2023 Artifex Software, Inc.\n\nThis program is free software: you can redistribute it and/or modify it under\nthe terms of the GNU Affero General Public License as published by the Free\nSoftware Foundation, either version 3 of the License, or (at your option) any\nlater version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License along\nwith this program. If not, see <http://www.gnu.org/licenses/>.\n\nFor commercial licensing, including our \"Indie Dev\" friendly options,\nplease contact sales@artifex.com.\n\nREPORTING BUGS AND PROBLEMS\n\nThe MuPDF developers hang out on Discord here:\n\n\thttps://discord.gg/taPnFQp5gb\n\nReport bugs on the ghostscript bugzilla, with MuPDF as the selected component:\n\n\thttp://bugs.ghostscript.com/\n\nIf you are reporting a problem with a specific file, please include the file as\nan attachment.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "generated",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "platform",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.162109375,
          "content": "[build-system]\n# We define required packages in setup.py:get_requires_for_build_wheel().\nrequires = []\n\n# See pep-517.\n#\nbuild-backend = \"setup\"\nbackend-path = [\".\"]\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 18.4345703125,
          "content": "#!/usr/bin/env python3\n\n'''\nInstallation script for MuPDF Python bindings, using scripts/pipcl.py.\n\nNotes:\n\n    When building an sdist (e.g. with 'pip sdist'), we use clang-python to\n    generate C++ source which is then included in the sdist.\n\n    This allows wheels to be built from an sdist without requiring clang-python\n    to be installed.\n\n\nInternal testing only - environmental variables:\n\n    MUPDF_SETUP_BUILD_DIR\n        Overrides the default build directory.\n\n    MUPDF_SETUP_USE_CLANG_PYTHON\n        Affects whether we use clang-python when building.\n\n        If set, must be '0' or '1', and we override the default and do not\n        ('0') / do ('1') use clang-python to generate C++ source code from\n        MuPDF headers.\n\n        If we are an sdist we default to not re-generating C++ - the generated\n        files will be already available in platform/c++/. Otherwise we default\n        to generating C++ source code.\n\n    MUPDF_SETUP_USE_SWIG\n        If set, must be '0' or '1', and we do not ('0') / do ('1') attempt to\n        run swig.\n'''\n\nimport os\nimport platform\nimport re\nimport subprocess\nimport sys\nimport time\n\n\ndef log(text=''):\n    for line in text.split('\\n'):\n        print(f'mupdf:setup.py: {line}')\n    sys.stdout.flush()\n\ndef cache(function):\n    '''\n    Simple (and probably unnecessary) caching decorator.\n    '''\n    cache = {}\n    def wrapper(*args):\n        if not args in cache:\n            cache[args] = function()\n        return cache[args]\n    return wrapper\n\n@cache\ndef root_dir():\n    return os.path.dirname(os.path.abspath(__file__))\n\n@cache\ndef windows():\n    s = platform.system()\n    return s == 'Windows' or s.startswith('CYGWIN')\n\n@cache\ndef macos():\n    s = platform.system()\n    return s == 'Darwin'\n\n@cache\ndef openbsd():\n    s = platform.system()\n    return s == 'OpenBSD'\n\n@cache\ndef msys2():\n    return platform.system().startswith('MSYS_NT-')\n\n@cache\ndef build_dir():\n    # This is x86/x64-specific.\n    #\n    # We generate 32 or 64-bit binaries to match whatever Python we\n    # are running under.\n    #\n    ret = os.environ.get('MUPDF_SETUP_BUILD_DIR')\n    if ret is None:\n        cpu = 'x32' if sys.maxsize == 2**31 - 1 else 'x64'\n        python_version = '.'.join(platform.python_version().split('.')[:2])\n        ret = f'{root_dir()}/build/shared-release-{cpu}-py{python_version}'\n    return ret\n\n@cache\ndef in_sdist():\n    return os.path.exists(f'{root_dir()}/PKG-INFO')\n\nsys.path.append(f'{root_dir()}/scripts')\nimport pipcl\n\n\n@cache\ndef mupdf_version():\n    '''\n    Returns version string.\n\n    If $MUPDF_SETUP_VERSION is set we use it directly, asserting that it starts\n    with the version string defined in include/mupdf/fitz/version.h.\n\n    Otherwise if we are in an sdist ('PKG-INFO' exists) we use its\n    version. We assert that this starts with the base version in\n    include/mupdf/fitz/version.h.\n\n    Otherwise we generate a version string by appending the current date and\n    time to the base version in include/mupdf/fitz/version.h. For example\n    '1.18.0.20210330.1800'.\n    '''\n    return mupdf_version_internal()\n\n\ndef mupdf_version_internal(t_tuple=None):\n    '''\n    Return version number, with doctest check for broken behaviour with leading\n    zeros.\n\n    >>> t0str = '2024-06-06-00:00'\n    >>> t0tuple = time.strptime(t0str, '%Y-%m-%d-%H:%M')\n    >>> v = mupdf_version_internal(t0tuple)\n    >>> print(v, file=sys.stderr)\n    >>> assert v.endswith('.202406060000')\n    '''\n    with open(f'{root_dir()}/include/mupdf/fitz/version.h') as f:\n        text = f.read()\n    m = re.search('\\n#define FZ_VERSION \"([^\"]+)\"\\n', text)\n    assert m\n    base_version = m.group(1)\n\n    # If MUPDF_SETUP_VERSION exists, use it.\n    #\n    ret = os.environ.get('MUPDF_SETUP_VERSION')\n    if ret:\n        log(f'Using version from $MUPDF_SETUP_VERSION: {ret}')\n        assert ret.startswith(base_version)\n        return ret\n\n    # If we are in an sdist, so use the version from the PKG-INFO file.\n    #\n    if in_sdist():\n        items = pipcl.parse_pkg_info('PKG-INFO')\n        assert items['Name'] == 'mupdf'\n        ret = items['Version']\n        #log(f'Using version from PKG-INFO: {ret}')\n        assert ret.startswith(base_version)\n        return ret\n\n    # If we get here, we are in a source tree.\n    #\n    # We use the MuPDF version with a unique(ish) suffix based on the current\n    # date and time, so we can make multiple Python releases without requiring\n    # an increment to the MuPDF version.\n    #\n    # This also allows us to easily experiment on test.pypi.org.\n    #\n    # We have to avoid the time component(s) containing `.0` as this is\n    # prohibited by PEP-440.\n    #\n    if t_tuple is None:\n        t_tuple = time.localtime()\n    tt = time.strftime(\".%Y%m%d%H%M\", t_tuple)\n    tail = tt.replace('.0', '.')\n    ret = base_version + tail\n    #log(f'Have created version number: {ret}')\n    pipcl._assert_version_pep_440(ret)\n    return ret\n\n\ndef git_info():\n    '''\n    Returns (current, origin, diff):\n        current: git id from 'git show'.\n        origin: git id from 'git show origin'.\n        diff: diff relative to current.\n    '''\n    def get_id(command):\n        text = subprocess.check_output(command, shell=True, cwd=root_dir())\n        text = text.decode('utf8')\n        text = text.split('\\n', 1)[0]\n        text = text.split(' ', 1)[0]\n        return text\n    current = get_id('git show --pretty=oneline')\n    origin = get_id('git show --pretty=oneline origin')\n    diff = subprocess.check_output(f'cd {root_dir()} && git diff', shell=True).decode('utf8')\n    return current, origin, diff\n\n\ndef get_flag(name, default):\n    '''\n    name:\n        Name of environmental variable.\n    default:\n        Value to return if <name> undefined.\n    Returns False if name is '0', True if name is '1', <default> if\n    undefined. Otherwise assert fails.\n    '''\n    value = os.environ.get(name)\n    if value is None:\n        ret = default\n    elif value == '0':\n        ret = False\n    elif value == '1':\n        ret = True\n    else:\n        assert 0, f'If set, ${name} must be \"0\" or \"1\", but is: {value!r}'\n    log(f'name={name} default={default} value={value} ret={ret}')\n    return ret\n\n\n# pipcl Callbacks.\n#\n\ndef sdist():\n    '''\n    pipcl callback. We run './scripts/mupdfwrap.py -b 0' to create C++ files\n    etc using clang-python, and return these generated files plus all files\n    known to git. [This allows sdists to be used to generate wheels etc on\n    machines without clang-python.]\n    '''\n    assert os.path.exists(f'{root_dir()}/.git'), f'Cannot make sdist because not a git checkout: {root_dir()}'\n\n    # Create 'git-info' file containing git ids that identify this tree. For\n    # the moment this is a simple text format, but we could possibly use pickle\n    # instead, depending on whether we want to include more information, e.g.\n    # diff relative to origin.\n    #\n    git_id, git_id_origin, git_diff = git_info()\n    with open(f'{root_dir()}/git-info', 'w') as f:\n        f.write(f'git-id: {git_id}\\n')\n        f.write(f'git-id-origin: {git_id_origin}\\n')\n        f.write(f'git-diff:\\n{git_diff}\\n')\n\n    paths = pipcl.git_items( root_dir(), submodules=True)\n\n    # Strip out some large test directories.\n    i = 0\n    while i < len( paths):\n        path = paths[i]\n        remove = False\n        if (0\n                or path.startswith( 'thirdparty/harfbuzz/test/')\n                or path.startswith( 'thirdparty/tesseract/test/')\n                or path.startswith( 'thirdparty/extract/test/')\n                ):\n            remove = True\n        if remove:\n            #log( f'Excluding: {path}')\n            del paths[i]\n        else:\n            i += 1\n\n    # Build C++ files and SWIG C code for inclusion in sdist, so that it can be\n    # used on systems without clang-python or SWIG.\n    #\n    use_clang_python = get_flag('MUPDF_SETUP_USE_CLANG_PYTHON', True)\n    use_swig = get_flag('MUPDF_SETUP_USE_SWIG', True)\n    b = ''\n    if use_clang_python:\n        b += '0'\n    if use_swig:\n        b += '2'\n    command = '' if os.getcwd() == root_dir() else f'cd {os.path.relpath(root_dir())} && '\n    command += f'{sys.executable} ./scripts/mupdfwrap.py -d {build_dir()} -b \"{b}\"'\n    log(f'Running: {command}')\n    subprocess.check_call(command, shell=True)\n    paths += [\n            'build/shared-release/mupdf.py',\n            'git-info',\n            'platform/c++/generated.pickle',\n            'platform/c++/implementation/classes.cpp',\n            'platform/c++/implementation/classes2.cpp',\n            'platform/c++/implementation/exceptions.cpp',\n            'platform/c++/implementation/functions.cpp',\n            'platform/c++/implementation/internal.cpp',\n            'platform/c++/include/mupdf/classes.h',\n            'platform/c++/include/mupdf/classes2.h',\n            'platform/c++/include/mupdf/exceptions.h',\n            'platform/c++/include/mupdf/functions.h',\n            'platform/c++/include/mupdf/internal.h',\n            'platform/c++/windows_mupdf.def',\n            'platform/python/mupdfcpp_swig.i.cpp',\n            ]\n    return paths\n\n\ndef build():\n    '''\n    pipcl callback. Build MuPDF C, C++ and Python libraries and return list of\n    created files.\n    '''\n    # If we are an sdist, default to not trying to run clang-python - the\n    # generated files will already exist, and installing/using clang-python\n    # might be tricky.\n    #\n    use_clang_python = get_flag('MUPDF_SETUP_USE_CLANG_PYTHON', not in_sdist())\n    use_swig = get_flag('MUPDF_SETUP_USE_SWIG', True)\n\n    b = ''\n    if not windows():\n        b = 'm'     # Build C library.\n    if use_clang_python:\n        b += '0'    # Build C++ source.\n    b += '1'        # Build C++ library (also contains C library on Windows).\n    if use_swig:\n        b += '2'    # Build SWIG-generated source.\n    b += '3'        # Build SWIG library _mupdf.so.\n\n    command = '' if root_dir() == os.getcwd() else f'cd {os.path.relpath(root_dir())} && '\n    command += (\n            f'\"{sys.executable}\" ./scripts/mupdfwrap.py'\n            f' -d {build_dir()}'\n            f' -b {b}'\n            )\n\n    do_build = os.environ.get('MUPDF_SETUP_DO_BUILD')\n    if do_build == '0':\n        # This is a hack for testing.\n        log(f'Not doing build because $MUPDF_SETUP_DO_BUILD={do_build}')\n    else:\n        log(f'build(): Building MuPDF C, C++ and Python libraries with: {command}')\n        subprocess.check_call(command, shell=True)\n\n    # Return generated files to install or copy into wheel.\n    #\n    if windows():\n        infix = '' if sys.maxsize == 2**31 - 1 else '64'\n        names = [\n                f'{build_dir()}/mupdfcpp{infix}.dll',   # C and C++.\n                f'{build_dir()}/_mupdf.pyd',            # Python internals.\n                f'{build_dir()}/mupdf.py',              # Python.\n                ]\n    elif macos():\n        log( f'Contents of {build_dir()} are:')\n        for leaf in os.listdir(build_dir()):\n            log( f'    {leaf}')\n        names = [\n                f'{build_dir()}/libmupdf.dylib',    # C.\n                f'{build_dir()}/libmupdfcpp.so',    # C++.\n                f'{build_dir()}/_mupdf.so',         # Python internals.\n                f'{build_dir()}/mupdf.py',          # Python.\n                ]\n    else:\n        names = [\n                pipcl.get_soname(f'{build_dir()}/libmupdf.so'),     # C.\n                pipcl.get_soname(f'{build_dir()}/libmupdfcpp.so'),  # C++.\n                f'{build_dir()}/_mupdf.so',                         # Python internals.\n                f'{build_dir()}/mupdf.py',                          # Python.\n                ]\n    paths = []\n    for name in names:\n        paths.append((name, ''))\n\n    log(f'build(): returning: {paths}')\n    return paths\n\n\ndef clean(all_):\n    if all_:\n        return [\n                'build',\n                'platform/win32/Release',\n                'platform/win32/ReleaseDLL',\n                'platform/win32/Win32',\n                'platform/win32/x64',\n                ]\n    else:\n        # Ideally we would return selected directories in platform/win32/ if on\n        # Windows, but that would get a little involved.\n        #\n        return build_dir()\n\n\n# Setup pipcl.\n#\ndescription = \"\"\"\nSummary\n-------\n\n* Python bindings for the MuPDF PDF library.\n* A python module called ``mupdf``.\n* Generated from the MuPDF C++ API, which is itself generated from the MuPDF C API.\n* Provides Python functions that wrap most ``fz_`` and ``pdf_`` functions.\n* Provides Python classes that wrap most ``fz_`` and ``pdf_`` structs.\n\n  * Class methods provide access to most of the underlying C API functions (except for functions that don't take struct args such as ``fz_strlcpy()``).\n* MuPDF's ``setjmp``/``longjmp`` exceptions are converted to Python exceptions.\n* Functions and methods do not take ``fz_context`` arguments. (Automatically-generated per-thread contexts are used internally.)\n* Wrapper classes automatically handle reference counting of the underlying structs (with internal calls to ``fz_keep_*()`` and ``fz_drop_*()``).\n* Support for MuPDF function pointers with SWIG Director classes, allowing MuPDF to call Python callbacks.\n* Provides a small number of extensions beyond the basic C API:\n\n  * Some generated classes have extra support for iteration.\n  * Some custom class methods and constructors.\n  * Simple 'POD' structs have ``__str__()`` methods, for example ``mupdf.Rect`` is represented like: ``(x0=90.51 y0=160.65 x1=501.39 y1=215.6)``.\n\nExample usage\n-------------\n\nMinimal Python code that uses the ``mupdf`` module:\n\n::\n\n    import mupdf\n    document = mupdf.Document('foo.pdf')\n\n\nA simple example Python test script (run by ``scripts/mupdfwrap.py -t``) is:\n\n* ``scripts/mupdfwrap_test.py``\n\nMore detailed usage of the Python API can be found in:\n\n* ``scripts/mutool.py``\n* ``scripts/mutool_draw.py``\n\nHere is some example code that shows all available information about document's Stext blocks, lines and characters:\n\n::\n\n    #!/usr/bin/env python3\n\n    import mupdf\n\n    def show_stext(document):\n        '''\n        Shows all available information about Stext blocks, lines and characters.\n        '''\n        for p in range(document.count_pages()):\n            page = document.load_page(p)\n            stextpage = mupdf.StextPage(page, mupdf.StextOptions())\n            for block in stextpage:\n                block_ = block.m_internal\n                log(f'block: type={block_.type} bbox={block_.bbox}')\n                for line in block:\n                    line_ = line.m_internal\n                    log(f'    line: wmode={line_.wmode}'\n                            + f' dir={line_.dir}'\n                            + f' bbox={line_.bbox}'\n                            )\n                    for char in line:\n                        char_ = char.m_internal\n                        log(f'        char: {chr(char_.c)!r} c={char_.c:4} color={char_.color}'\n                                + f' origin={char_.origin}'\n                                + f' quad={char_.quad}'\n                                + f' size={char_.size:6.2f}'\n                                + f' font=('\n                                    +  f'is_mono={char_.font.flags.is_mono}'\n                                    + f' is_bold={char_.font.flags.is_bold}'\n                                    + f' is_italic={char_.font.flags.is_italic}'\n                                    + f' ft_substitute={char_.font.flags.ft_substitute}'\n                                    + f' ft_stretch={char_.font.flags.ft_stretch}'\n                                    + f' fake_bold={char_.font.flags.fake_bold}'\n                                    + f' fake_italic={char_.font.flags.fake_italic}'\n                                    + f' has_opentype={char_.font.flags.has_opentype}'\n                                    + f' invalid_bbox={char_.font.flags.invalid_bbox}'\n                                    + f' name={char_.font.name}'\n                                    + f')'\n                                )\n\n    document = mupdf.Document('foo.pdf')\n    show_stext(document)\n\nMore information\n----------------\n\nhttps://mupdf.com/r/C-and-Python-APIs\n\n\"\"\"\n\nwith open(f'{root_dir()}/COPYING') as f:\n    license = f.read()\n\nmupdf_package = pipcl.Package(\n        name = 'mupdf',\n        version = mupdf_version(),\n        root = root_dir(),\n        summary = 'Python bindings for MuPDF library.',\n        description = description,\n        classifier = [\n                'Development Status :: 4 - Beta',\n                'Intended Audience :: Developers',\n                'License :: OSI Approved :: GNU Affero General Public License v3',\n                'Programming Language :: Python :: 3',\n                ],\n        author = 'Artifex Software, Inc.',\n        author_email = 'support@artifex.com',\n        home_page = 'https://mupdf.com/',\n        project_url = [\n            ('Documentation, https://mupdf.com/r/C-and-Python-APIs/'),\n            ('Source, https://git.ghostscript.com/?p=mupdf.git'),\n            ('Tracker, https://bugs.ghostscript.com/'),\n            ],\n        keywords = 'PDF',\n        platform = None,\n        license = license,\n        fn_build = build,\n        fn_clean = clean,\n        fn_sdist = sdist,\n        )\n\n\n# Things to allow us to function as a PIP-517 backend:\n#\ndef build_wheel( wheel_directory, config_settings=None, metadata_directory=None):\n    return mupdf_package.build_wheel(\n            wheel_directory,\n            config_settings,\n            metadata_directory,\n            )\n\ndef build_sdist( sdist_directory, config_settings=None):\n    return mupdf_package.build_sdist(\n            sdist_directory,\n            config_settings,\n            )\n\ndef get_requires_for_build_wheel(config_settings=None):\n    '''\n    Adds to pyproject.toml:[build-system]:requires, allowing programmatic\n    control over what packages we require.\n    '''\n    ret = list()\n    ret.append('setuptools')\n    if openbsd():\n        #print(f'OpenBSD: libclang not available via pip; assuming `pkg_add py3-llvm`.')\n        pass\n    elif macos() and platform.machine() == 'arm64':\n        #print(\n        #       f'MacOS/arm64: forcing use of libclang 16.0.6 because 17.0.6'\n        #       f' and 18.1.1 are known to fail with:'\n        #       f' `clang.cindex.TranslationUnitLoadError: Error parsing translation unit.`'\n        #       )\n        ret.append('libclang==16.0.6')\n    else:\n        ret.append('libclang')\n    if msys2():\n        #print(f'msys2: pip install of swig does not build; assuming `pacman -S swig`.')\n        pass\n    elif openbsd():\n        #print(f'OpenBSD: pip install of swig does not build; assuming `pkg_add swig`.')\n        pass\n    else:\n        ret.append( 'swig')\n    return ret\n\n\n# Allow us to be used as a pre-PIP-517 setup.py script.\n#\nif __name__ == '__main__':\n    mupdf_package.handle_argv(sys.argv)\n"
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        },
        {
          "name": "thirdparty",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}