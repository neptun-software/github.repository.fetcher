{
  "metadata": {
    "timestamp": 1736710057028,
    "page": 673,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "P403n1x87/austin",
      "stars": 1965,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.333984375,
          "content": "# -----------------------------------------------------------------------------\n# --  C SOURCES\n# -----------------------------------------------------------------------------\n\n/autom4te.cache/\n/config/\nMakefile\nMakefile.in\naclocal.m4\napp.info\ncompile\nconfig.h\nconfig.h.in\nconfig.log\nconfig.status\nconfigure\nconfigure.scan\ncoverage_report\ndepcomp\ninstall-sh\nlibtool\nm4\nmissing\nstamp-h1\n*~\n*.log\n*.o\n*.la\n*.so*\n*.a\n.deps\n*.tar*\n*.zip\n*.lo\n*.gcno\n*.gcda\n\nsrc/austin\nsrc/austinp\nsrc/austin.exe\nsrc/austin.dSYM*\n\n\n# -----------------------------------------------------------------------------\n# --  PYTHON SOURCES\n# -----------------------------------------------------------------------------\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Sphinx documentation\ndocs/*build/\n\n# PyBuilder\ntarget/\n\n# pyenv\n.python-version\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n\n# -----------------------------------------------------------------------------\n# --  SNAP SOURCES\n# -----------------------------------------------------------------------------\n\n/parts/\n/stage/\n/prime/\n/*.snap\n\n# Snapcraft global state tracking data(automatically generated)\n# https://forum.snapcraft.io/t/location-to-save-global-state/768\n/snap/.snapcraft/\n\n# Source archive packed by `snapcraft cleanbuild` before pushing to the LXD container\n/*_source.tar.bz2\n\n\n# -----------------------------------------------------------------------------\n# -- DEB SOURCES\n# -----------------------------------------------------------------------------\n\n*debhelper*\ndebian/austin\ndebian/files\n*.substvars\n\n\n# -----------------------------------------------------------------------------\n# -- EDITORS\n# -----------------------------------------------------------------------------\n.vscode\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.0439453125,
          "content": "Gabriele N. Tornetta <phoenix1987@gmail.com>\n"
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 3.1748046875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.357421875,
          "content": "# Contributing to Austin\n\nThanks for taking the time to contribute or considering doing so.\n\nThe following is a set of guidelines for contributing to Austin.\n\n## Preamble\n\nPresently, Austin is mainly a C project. The reason behind this is because\nCPython is written in C, and therefore this is the most natural choice of\nlanguage for anything that needs to interface to its ABI.\n\n## The Coding Style\n\nThe Python C API is written in an Object Oriented style. Austin adopts this\nstyle too. Some translation unit are used to export a main \"object\". For\nexample, the `py_thread.c` source exports the type `py_thread_t`, which is\nAustin's representation of the analogous `PyThreadState` from the Python C API.\n\nUtility units, like `mem.h` or `logging.c` need not export objects, but may\nimplement a singleton pattern.\n\n### Conventions\n\nEvery object is a structure that takes a name of the form `<object>_t`, and is\ndeclared in a pair of sources `object.c` and `object.h`.\n\n#### Methods\n\nMethods should have a general structure that includes the object name as a\nprefix, and the rest must give a short description of what the method does. If\nthe method is a _class_ method, then the prefix and the method description is\nseparated by only one underscore `_`. For instance method, the separator is a\ndouble underscore `__`.\n\nPrivate methods, i.e. those that are used only within the translation unit,\nmust be `static` and prefixed with an underscore `_` so that they can be easly\nrecognised in the code.\n\nTo summarise, here is an example of the above rules in place for an object of\ntype `object_t`.\n\n| Method Type             | Example                   |\n| ----------------------- | ------------------------- |\n| Private class method    | `_object_get_version`     |\n| Private instance method | `_object__get_rgba_value` |\n| Public class method     | `object_new`              |\n| Public instance method  | `object__get_color`       |\n\n\n#### Objects Life-cycle\n\nEvery translation unit that exports an object type that can be instantiated at\nrun-time must provide at least two public methods: the class method\n`<object>_new` for object creation and the instance method `<object>__destroy`\nfor object disposal. There isn't enough complexity at the moment to justify the\nuse of smart pointers, so objects are passed around by pointers, and care should\nbe taken to destroy all the objects no longer needed to avoid memory leaks.\n\nPlease make sure that your changes do not introduce any memory leaks before\nsubmitting a new PR.\n\n### Dependencies Between Units\n\nCircular dependencies among translation units should be avoided as much as\npossible. Whilst sources are stored in a flat file system structure, their\ndependency tree should be a DAG.\n\n\n## Opening PRs\n\nEverybody is more than welcome to open a PR to fix a bug/propose enhancements/\nimplement missing features. If you do, please adhere to the following\nstyleguides as much as possible.\n\n\n### Git Commit Messages\n\nThis styleguide is taken from the Atom project.\n\n* Use the present tense (\"Add feature\" not \"Added feature\")\n* Use the imperative mood (\"Move cursor to...\" not \"Moves cursor to...\")\n* Limit the first line to 72 characters or less\n* Reference issues and pull requests liberally after the first line\n\n\n### Labels\n\nWhen opening a new PR, please apply a label to them. Try to use existing labels\nas much as possible and only create a new one if the current ones are not\napplicable.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 6.03515625,
          "content": "2024-10-14 v3.7.0\n\n  Added support for CPython 3.13.\n\n  Improve support for Python processes running in containers.\n\n  Removed the exclude-empty option.\n\n  Bugfix: fixed a bug with the MOJO binary format that caused the line end\n  position to wrongly be set to a non-zero value for CPython < 3.11, where line\n  end information is not actually available.\n\n\n2023-10-04 v3.6.0\n\n  Added support for CPython 3.12\n\n  Added support for sub-interpreters.\n\n  Dropped support for CPython 2, 3.3, 3.4, 3.5, 3.6 and 3.7.\n\n  Improved interpreter detection and general stability on all supported\n  platforms.\n\n  Bugfix: ensure that threads are resumed by austinp when an error occurs during\n  the sampling process.\n\n  Bugfix: propagate the termination signal to the child process when launching a\n  command with Austin to prevent it from running indefinitely in the background.\n\n\n2023-02-21 v3.5.0\n\n  Added support for fine-grained, column-level location information when\n  exporting samples in binary mode.\n\n  Improved multiprocess support.\n\n  Dropped the alternative output format.\n\n  Improved interpreter detection on all supported platforms.\n\n\n2022-10-26 v3.4.1\n\n  Fixed a bug with the MOJO binary format.\n\n\n2022-10-25 v3.4.0\n\n  Added support for Python 3.11.\n\n  Allowed disabling logging by setting the environment variable\n  AUSTIN_NO_LOGGING.\n\n  Improved permission error reporting on MacOS.\n\n  Improved MacOS support.\n\n  Improved austinp support on fork.\n\n  Small performance improvements.\n\n  Renamed the austinp binary installed from the Snap Store from austin.austinp\n  to austin.p.\n  \n  Fixed a bug in austinp that could have caused the interpreter to stall on\n  launch.\n\n  Fixed a bug in austinp that could have caused segmentation faults.\n\n  Fixed a regression in austinp that caused most of the samples to be wrongly\n  reported as idle\n\n\n2022-01-28 v3.3.0\n\n  Added the new Where mode.\n\n  Overall performance and accuracy improvements.\n\n  The heap allocation has been turned off by default.\n\n  Added support for profiling child processes that might have a different Python\n  runtime version than the parent process.\n\n  Bugfix: fixed heap size handling.\n\n  Bugfix: fixed a potential segmentation fault issue in the austinp variant.\n\n  Bugfix: fixed a potential deadlock scenario in austinp.\n\n  Bugfix: fixed support for the py.exe launcher on Windows.\n\n\n2021-12-16 v3.2.0\n\n  Improved detection of invalid samples\n\n  Added support for Python launchers on Windows\n\n  Improved Python version detection on Linux\n\n  Fixed support of older versions of glibc on Linux\n\n\n2021-08-18 v3.1.0\n\n  Added garbage collection state sampling for Python 3.7 onward.\n\n  Bugfix: the MinGW libwinpthread library is now linked statically on Windows.\n\n\n2021-06-13 v3.0.0\n\n  Added pipe mode.\n\n  Bugfix: fixed file descriptor leak on Linux.\n\n  Bugfix: fixed sampling duration reporting on macOS.\n\n\n2021-04-25 v3.0.0a1\n\n  The format of the emitted samples has been changed into something easier to\n  parse.\n\n  The sleepless mode now gives an estimate of CPU time.\n\n  Binaries with arbitrary names are now supported, allowing Austin to easily\n  profile applications like uWSGI.\n\n  Windows compatibility has been enhanced to support wrapper launchers.\n\n  Bugfix: report the correct process ID on macOS.\n\n\n2020-12-30 v2.1.1\n\n  Bugfix: Fix symbol name clash on BSD systems with strtonum.\n\n\n2020-12-29 v2.1.0\n\n  Improved general Python support on all the supported platforms.\n\n  Allowed specifying argument for time-like parameters using units (e.g. 10ms).\n\n  Error reporting has been made more accurate and informative.\n\n  Bugfix: Fixed line number reporting.\n\n\n2020-10-06 v2.0.0\n\n  Substantial performance improvements. Austin 2 can sample deep call stacks\n  5 to 8 times faster than previous versions.\n\n  Support for Python 3.9.\n\n  Added the exposure option to instruct Austin to sample for a given number of\n  seconds only (#53).\n\n\n2020-05-16 v1.0.1\n\n  Bugfix: Fixed broken support for Python 3.8 on MacOS.\n\n\n2019-07-28 v1.0.0\n\n  Austin can now profile multi-process Python application:\n\n    When attaching Austin to an already running multi-process application it is\n    enough to provide the process ID of the parent process. Austin will then\n    discover all the child processes and profile those too.\n\n    To tell Austin to look for child processes, use the new -C switch from the\n    command line.\n\n  Austin can now profile Python 3.8 applications.\n\n\n2019-07-28 v0.7.0\n\n  Austin can now profile memory usage and output samples to a file.\n\n  Added new command line options:\n\n    - --memory, -m:\n\n        Switch to memory profling mode\n\n    - --full, -f:\n\n        Generate samples with a full set of metrics, which include timing and\n        memory profiling information. Note that the output from this mode needs\n        to be processed before it can be used with FlameGraph.\n\n    - --output, -o:\n\n        Designate an output file for the collected samples.\n\n\n2018-10-15 v0.6.0-beta\n\n  Introduced native support for MacOS and Windows.\n\n\n2018-10-10 v0.5.0-beta\n\n  Added support for all the major releases of Python 2 and 3 on 32-bit Linux.\n\n\n2018-10-08 v0.4.0-alpha\n\n  Added support for all the major releases of Python 2 and 3 on 64-bit Linux.\n\n\n2018-10-02 v0.3.1-alpha\n\n  Bugfix: Austin can now attach to a running Python process again.\n\n\n2018-09-30 v0.3.0-alpha\n\n  Austin now supports Python 3.3, 3.4, 3.5 and 3.7 on x86_64 Linux.\n\n\n2018-09-26 v0.2.0-alpha\n\n  Austin can now be attached to a running Python 3 process.\n\n  Added new command line options:\n\n    - --alt-format, -a:\n\n        Use the alternative format for collapsed stack samples.\n\n    - --exclude-empty, -e:\n\n        Exclude samples of threads with no frame stacks.\n\n        Usually, these are Python threads created by C extensions, whose code\n        cannot currently be traced.\n\n    - --sleepless, -s:\n\n        Suppress idle samples.\n\n        These are samples where a call to wait has been made and the thread\n        sits there doing nothing.\n\n  Fixed a bug that caused some valid thread samples to be marked as invalid.\n\n  Austin has been tested successfully on Windows 10 64-bit via WSL.\n\n\n2018-09-20 v0.1.0-alpha\n\n  Initial release.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.2734375,
          "content": "FROM  ubuntu:20.04\nCOPY  . /austin\nRUN   apt-get update && \\\n      apt-get install -y autoconf build-essential libunwind-dev binutils-dev libiberty-dev zlib1g-dev && \\\n      cd /austin && \\\n      autoreconf --install && \\\n      ./configure && \\\n      make && \\\n      make install\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 15.38671875,
          "content": "Installation Instructions\n*************************\n\n   Copyright (C) 1994-1996, 1999-2002, 2004-2016 Free Software\nFoundation, Inc.\n\n   Copying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout warranty of any kind.\n\nBasic Installation\n==================\n\n   Briefly, the shell command './configure && make && make install'\nshould configure, build, and install this package.  The following\nmore-detailed instructions are generic; see the 'README' file for\ninstructions specific to this package.  Some packages provide this\n'INSTALL' file but do not implement all of the features documented\nbelow.  The lack of an optional feature in a given package is not\nnecessarily a bug.  More recommendations for GNU packages can be found\nin *note Makefile Conventions: (standards)Makefile Conventions.\n\n   The 'configure' shell script attempts to guess correct values for\nvarious system-dependent variables used during compilation.  It uses\nthose values to create a 'Makefile' in each directory of the package.\nIt may also create one or more '.h' files containing system-dependent\ndefinitions.  Finally, it creates a shell script 'config.status' that\nyou can run in the future to recreate the current configuration, and a\nfile 'config.log' containing compiler output (useful mainly for\ndebugging 'configure').\n\n   It can also use an optional file (typically called 'config.cache' and\nenabled with '--cache-file=config.cache' or simply '-C') that saves the\nresults of its tests to speed up reconfiguring.  Caching is disabled by\ndefault to prevent problems with accidental use of stale cache files.\n\n   If you need to do unusual things to compile the package, please try\nto figure out how 'configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the 'README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point 'config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n\n   The file 'configure.ac' (or 'configure.in') is used to create\n'configure' by a program called 'autoconf'.  You need 'configure.ac' if\nyou want to change it or regenerate 'configure' using a newer version of\n'autoconf'.\n\n   The simplest way to compile this package is:\n\n  1. 'cd' to the directory containing the package's source code and type\n     './configure' to configure the package for your system.\n\n     Running 'configure' might take a while.  While running, it prints\n     some messages telling which features it is checking for.\n\n  2. Type 'make' to compile the package.\n\n  3. Optionally, type 'make check' to run any self-tests that come with\n     the package, generally using the just-built uninstalled binaries.\n\n  4. Type 'make install' to install the programs and any data files and\n     documentation.  When installing into a prefix owned by root, it is\n     recommended that the package be configured and built as a regular\n     user, and only the 'make install' phase executed with root\n     privileges.\n\n  5. Optionally, type 'make installcheck' to repeat any self-tests, but\n     this time using the binaries in their final installed location.\n     This target does not install anything.  Running this target as a\n     regular user, particularly if the prior 'make install' required\n     root privileges, verifies that the installation completed\n     correctly.\n\n  6. You can remove the program binaries and object files from the\n     source code directory by typing 'make clean'.  To also remove the\n     files that 'configure' created (so you can compile the package for\n     a different kind of computer), type 'make distclean'.  There is\n     also a 'make maintainer-clean' target, but that is intended mainly\n     for the package's developers.  If you use it, you may have to get\n     all sorts of other programs in order to regenerate files that came\n     with the distribution.\n\n  7. Often, you can also type 'make uninstall' to remove the installed\n     files again.  In practice, not all packages have tested that\n     uninstallation works correctly, even though it is required by the\n     GNU Coding Standards.\n\n  8. Some packages, particularly those that use Automake, provide 'make\n     distcheck', which can by used by developers to test that all other\n     targets like 'make install' and 'make uninstall' work correctly.\n     This target is generally not run by end users.\n\nCompilers and Options\n=====================\n\n   Some systems require unusual options for compilation or linking that\nthe 'configure' script does not know about.  Run './configure --help'\nfor details on some of the pertinent environment variables.\n\n   You can give 'configure' initial values for configuration parameters\nby setting variables in the command line or in the environment.  Here is\nan example:\n\n     ./configure CC=c99 CFLAGS=-g LIBS=-lposix\n\n   *Note Defining Variables::, for more details.\n\nCompiling For Multiple Architectures\n====================================\n\n   You can compile the package for more than one kind of computer at the\nsame time, by placing the object files for each architecture in their\nown directory.  To do this, you can use GNU 'make'.  'cd' to the\ndirectory where you want the object files and executables to go and run\nthe 'configure' script.  'configure' automatically checks for the source\ncode in the directory that 'configure' is in and in '..'.  This is known\nas a \"VPATH\" build.\n\n   With a non-GNU 'make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use 'make distclean' before\nreconfiguring for another architecture.\n\n   On MacOS X 10.5 and later systems, you can create libraries and\nexecutables that work on multiple system types--known as \"fat\" or\n\"universal\" binaries--by specifying multiple '-arch' options to the\ncompiler but only a single '-arch' option to the preprocessor.  Like\nthis:\n\n     ./configure CC=\"gcc -arch i386 -arch x86_64 -arch ppc -arch ppc64\" \\\n                 CXX=\"g++ -arch i386 -arch x86_64 -arch ppc -arch ppc64\" \\\n                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the 'lipo' tool if you have problems.\n\nInstallation Names\n==================\n\n   By default, 'make install' installs the package's commands under\n'/usr/local/bin', include files under '/usr/local/include', etc.  You\ncan specify an installation prefix other than '/usr/local' by giving\n'configure' the option '--prefix=PREFIX', where PREFIX must be an\nabsolute file name.\n\n   You can specify separate installation prefixes for\narchitecture-specific files and architecture-independent files.  If you\npass the option '--exec-prefix=PREFIX' to 'configure', the package uses\nPREFIX as the prefix for installing programs and libraries.\nDocumentation and other data files still use the regular prefix.\n\n   In addition, if you use an unusual directory layout you can give\noptions like '--bindir=DIR' to specify different values for particular\nkinds of files.  Run 'configure --help' for a list of the directories\nyou can set and what kinds of files go in them.  In general, the default\nfor these options is expressed in terms of '${prefix}', so that\nspecifying just '--prefix' will affect all of the other directory\nspecifications that were not explicitly provided.\n\n   The most portable way to affect installation locations is to pass the\ncorrect locations to 'configure'; however, many packages provide one or\nboth of the following shortcuts of passing variable assignments to the\n'make install' command line to change installation locations without\nhaving to reconfigure or recompile.\n\n   The first method involves providing an override variable for each\naffected directory.  For example, 'make install\nprefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n'${prefix}'.  Any directories that were specified during 'configure',\nbut not in terms of '${prefix}', must each be overridden at install time\nfor the entire installation to be relocated.  The approach of makefile\nvariable overrides for each directory variable is required by the GNU\nCoding Standards, and ideally causes no recompilation.  However, some\nplatforms have known limitations with the semantics of shared libraries\nthat end up requiring recompilation when using this method, particularly\nnoticeable in packages that use GNU Libtool.\n\n   The second method involves providing the 'DESTDIR' variable.  For\nexample, 'make install DESTDIR=/alternate/directory' will prepend\n'/alternate/directory' before all installation names.  The approach of\n'DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of '${prefix}'\nat 'configure' time.\n\nOptional Features\n=================\n\n   If the package supports it, you can cause programs to be installed\nwith an extra prefix or suffix on their names by giving 'configure' the\noption '--program-prefix=PREFIX' or '--program-suffix=SUFFIX'.\n\n   Some packages pay attention to '--enable-FEATURE' options to\n'configure', where FEATURE indicates an optional part of the package.\nThey may also pay attention to '--with-PACKAGE' options, where PACKAGE\nis something like 'gnu-as' or 'x' (for the X Window System).  The\n'README' should mention any '--enable-' and '--with-' options that the\npackage recognizes.\n\n   For packages that use the X Window System, 'configure' can usually\nfind the X include and library files automatically, but if it doesn't,\nyou can use the 'configure' options '--x-includes=DIR' and\n'--x-libraries=DIR' to specify their locations.\n\n   Some packages offer the ability to configure how verbose the\nexecution of 'make' will be.  For these packages, running './configure\n--enable-silent-rules' sets the default to minimal output, which can be\noverridden with 'make V=1'; while running './configure\n--disable-silent-rules' sets the default to verbose, which can be\noverridden with 'make V=0'.\n\nParticular systems\n==================\n\n   On HP-UX, the default C compiler is not ANSI C compatible.  If GNU CC\nis not installed, it is recommended to use the following options in\norder to use an ANSI C compiler:\n\n     ./configure CC=\"cc -Ae -D_XOPEN_SOURCE=500\"\n\nand if that doesn't work, install pre-built binaries of GCC for HP-UX.\n\n   HP-UX 'make' updates targets which have the same time stamps as their\nprerequisites, which makes it generally unusable when shipped generated\nfiles such as 'configure' are involved.  Use GNU 'make' instead.\n\n   On OSF/1 a.k.a. Tru64, some versions of the default C compiler cannot\nparse its '<wchar.h>' header file.  The option '-nodtk' can be used as a\nworkaround.  If GNU CC is not installed, it is therefore recommended to\ntry\n\n     ./configure CC=\"cc\"\n\nand if that doesn't work, try\n\n     ./configure CC=\"cc -nodtk\"\n\n   On Solaris, don't put '/usr/ucb' early in your 'PATH'.  This\ndirectory contains several dysfunctional programs; working variants of\nthese programs are available in '/usr/bin'.  So, if you need '/usr/ucb'\nin your 'PATH', put it _after_ '/usr/bin'.\n\n   On Haiku, software installed for all users goes in '/boot/common',\nnot '/usr/local'.  It is recommended to use the following options:\n\n     ./configure --prefix=/boot/common\n\nSpecifying the System Type\n==========================\n\n   There may be some features 'configure' cannot figure out\nautomatically, but needs to determine by the type of machine the package\nwill run on.  Usually, assuming the package is built to be run on the\n_same_ architectures, 'configure' can figure that out, but if it prints\na message saying it cannot guess the machine type, give it the\n'--build=TYPE' option.  TYPE can either be a short name for the system\ntype, such as 'sun4', or a canonical name which has the form:\n\n     CPU-COMPANY-SYSTEM\n\nwhere SYSTEM can have one of these forms:\n\n     OS\n     KERNEL-OS\n\n   See the file 'config.sub' for the possible values of each field.  If\n'config.sub' isn't included in this package, then this package doesn't\nneed to know the machine type.\n\n   If you are _building_ compiler tools for cross-compiling, you should\nuse the option '--target=TYPE' to select the type of system they will\nproduce code for.\n\n   If you want to _use_ a cross compiler, that generates code for a\nplatform different from the build platform, you should specify the\n\"host\" platform (i.e., that on which the generated programs will\neventually be run) with '--host=TYPE'.\n\nSharing Defaults\n================\n\n   If you want to set default values for 'configure' scripts to share,\nyou can create a site shell script called 'config.site' that gives\ndefault values for variables like 'CC', 'cache_file', and 'prefix'.\n'configure' looks for 'PREFIX/share/config.site' if it exists, then\n'PREFIX/etc/config.site' if it exists.  Or, you can set the\n'CONFIG_SITE' environment variable to the location of the site script.\nA warning: not all 'configure' scripts look for a site script.\n\nDefining Variables\n==================\n\n   Variables not defined in a site shell script can be set in the\nenvironment passed to 'configure'.  However, some packages may run\nconfigure again during the build, and the customized values of these\nvariables may be lost.  In order to avoid this problem, you should set\nthem in the 'configure' command line, using 'VAR=value'.  For example:\n\n     ./configure CC=/usr/local2/bin/gcc\n\ncauses the specified 'gcc' to be used as the C compiler (unless it is\noverridden in the site shell script).\n\nUnfortunately, this technique does not work for 'CONFIG_SHELL' due to an\nAutoconf limitation.  Until the limitation is lifted, you can use this\nworkaround:\n\n     CONFIG_SHELL=/bin/bash ./configure CONFIG_SHELL=/bin/bash\n\n'configure' Invocation\n======================\n\n   'configure' recognizes the following options to control how it\noperates.\n\n'--help'\n'-h'\n     Print a summary of all of the options to 'configure', and exit.\n\n'--help=short'\n'--help=recursive'\n     Print a summary of the options unique to this package's\n     'configure', and exit.  The 'short' variant lists options used only\n     in the top level, while the 'recursive' variant lists options also\n     present in any nested packages.\n\n'--version'\n'-V'\n     Print the version of Autoconf used to generate the 'configure'\n     script, and exit.\n\n'--cache-file=FILE'\n     Enable the cache: use and save the results of the tests in FILE,\n     traditionally 'config.cache'.  FILE defaults to '/dev/null' to\n     disable caching.\n\n'--config-cache'\n'-C'\n     Alias for '--cache-file=config.cache'.\n\n'--quiet'\n'--silent'\n'-q'\n     Do not print messages saying which checks are being made.  To\n     suppress all normal output, redirect it to '/dev/null' (any error\n     messages will still be shown).\n\n'--srcdir=DIR'\n     Look for the package's source code in directory DIR.  Usually\n     'configure' can determine that directory automatically.\n\n'--prefix=DIR'\n     Use DIR as the installation prefix.  *note Installation Names:: for\n     more details, including other options available for fine-tuning the\n     installation locations.\n\n'--no-create'\n'-n'\n     Run the configure checks, but stop before creating any output\n     files.\n\n'configure' also accepts some other, not widely useful, options.  Run\n'configure --help' for more details.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 34.1181640625,
          "content": "# GNU GENERAL PUBLIC LICENSE\nVersion 3, 29 June 2007\n\nCopyright (C) 2007 [Free Software Foundation, Inc.](http://fsf.org/)\n\nEveryone is permitted to copy and distribute verbatim copies of this license\ndocument, but changing it is not allowed.\n\n## Preamble\n\nThe GNU General Public License is a free, copyleft license for software and\nother kinds of works.\n\nThe licenses for most software and other practical works are designed to take\naway your freedom to share and change the works. By contrast, the GNU General\nPublic License is intended to guarantee your freedom to share and change all\nversions of a program--to make sure it remains free software for all its users.\nWe, the Free Software Foundation, use the GNU General Public License for most\nof our software; it applies also to any other work released this way by its\nauthors. You can apply it to your programs, too.\n\nWhen we speak of free software, we are referring to freedom, not price. Our\nGeneral Public Licenses are designed to make sure that you have the freedom to\ndistribute copies of free software (and charge for them if you wish), that you\nreceive source code or can get it if you want it, that you can change the\nsoftware or use pieces of it in new free programs, and that you know you can do\nthese things.\n\nTo protect your rights, we need to prevent others from denying you these rights\nor asking you to surrender the rights. Therefore, you have certain\nresponsibilities if you distribute copies of the software, or if you modify it:\nresponsibilities to respect the freedom of others.\n\nFor example, if you distribute copies of such a program, whether gratis or for\na fee, you must pass on to the recipients the same freedoms that you received.\nYou must make sure that they, too, receive or can get the source code. And you\nmust show them these terms so they know their rights.\n\nDevelopers that use the GNU GPL protect your rights with two steps:\n\n  1. assert copyright on the software, and\n  2. offer you this License giving you legal permission to copy, distribute\n     and/or modify it.\n\nFor the developers' and authors' protection, the GPL clearly explains that\nthere is no warranty for this free software. For both users' and authors' sake,\nthe GPL requires that modified versions be marked as changed, so that their\nproblems will not be attributed erroneously to authors of previous versions.\n\nSome devices are designed to deny users access to install or run modified\nversions of the software inside them, although the manufacturer can do so. This\nis fundamentally incompatible with the aim of protecting users' freedom to\nchange the software. The systematic pattern of such abuse occurs in the area of\nproducts for individuals to use, which is precisely where it is most\nunacceptable. Therefore, we have designed this version of the GPL to prohibit\nthe practice for those products. If such problems arise substantially in other\ndomains, we stand ready to extend this provision to those domains in future\nversions of the GPL, as needed to protect the freedom of users.\n\nFinally, every program is threatened constantly by software patents. States\nshould not allow patents to restrict development and use of software on\ngeneral-purpose computers, but in those that do, we wish to avoid the special\ndanger that patents applied to a free program could make it effectively\nproprietary. To prevent this, the GPL assures that patents cannot be used to\nrender the program non-free.\n\nThe precise terms and conditions for copying, distribution and modification\nfollow.\n\n## TERMS AND CONDITIONS\n\n### 0. Definitions.\n\n*This License* refers to version 3 of the GNU General Public License.\n\n*Copyright* also means copyright-like laws that apply to other kinds of works,\nsuch as semiconductor masks.\n\n*The Program* refers to any copyrightable work licensed under this License.\nEach licensee is addressed as *you*. *Licensees* and *recipients* may be\nindividuals or organizations.\n\nTo *modify* a work means to copy from or adapt all or part of the work in a\nfashion requiring copyright permission, other than the making of an exact copy.\nThe resulting work is called a *modified version* of the earlier work or a work\n*based on* the earlier work.\n\nA *covered work* means either the unmodified Program or a work based on the\nProgram.\n\nTo *propagate* a work means to do anything with it that, without permission,\nwould make you directly or secondarily liable for infringement under applicable\ncopyright law, except executing it on a computer or modifying a private copy.\nPropagation includes copying, distribution (with or without modification),\nmaking available to the public, and in some countries other activities as well.\n\nTo *convey* a work means any kind of propagation that enables other parties to\nmake or receive copies. Mere interaction with a user through a computer\nnetwork, with no transfer of a copy, is not conveying.\n\nAn interactive user interface displays *Appropriate Legal Notices* to the\nextent that it includes a convenient and prominently visible feature that\n\n  1. displays an appropriate copyright notice, and\n  2. tells the user that there is no warranty for the work (except to the\n     extent that warranties are provided), that licensees may convey the work\n     under this License, and how to view a copy of this License.\n\nIf the interface presents a list of user commands or options, such as a menu, a\nprominent item in the list meets this criterion.\n\n### 1. Source Code.\n\nThe *source code* for a work means the preferred form of the work for making\nmodifications to it. *Object code* means any non-source form of a work.\n\nA *Standard Interface* means an interface that either is an official standard\ndefined by a recognized standards body, or, in the case of interfaces specified\nfor a particular programming language, one that is widely used among developers\nworking in that language.\n\nThe *System Libraries* of an executable work include anything, other than the\nwork as a whole, that (a) is included in the normal form of packaging a Major\nComponent, but which is not part of that Major Component, and (b) serves only\nto enable use of the work with that Major Component, or to implement a Standard\nInterface for which an implementation is available to the public in source code\nform. A *Major Component*, in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system (if any) on\nwhich the executable work runs, or a compiler used to produce the work, or an\nobject code interpreter used to run it.\n\nThe *Corresponding Source* for a work in object code form means all the source\ncode needed to generate, install, and (for an executable work) run the object\ncode and to modify the work, including scripts to control those activities.\nHowever, it does not include the work's System Libraries, or general-purpose\ntools or generally available free programs which are used unmodified in\nperforming those activities but which are not part of the work. For example,\nCorresponding Source includes interface definition files associated with source\nfiles for the work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require, such as\nby intimate data communication or control flow between those subprograms and\nother parts of the work.\n\nThe Corresponding Source need not include anything that users can regenerate\nautomatically from other parts of the Corresponding Source.\n\nThe Corresponding Source for a work in source code form is that same work.\n\n### 2. Basic Permissions.\n\nAll rights granted under this License are granted for the term of copyright on\nthe Program, and are irrevocable provided the stated conditions are met. This\nLicense explicitly affirms your unlimited permission to run the unmodified\nProgram. The output from running a covered work is covered by this License only\nif the output, given its content, constitutes a covered work. This License\nacknowledges your rights of fair use or other equivalent, as provided by\ncopyright law.\n\nYou may make, run and propagate covered works that you do not convey, without\nconditions so long as your license otherwise remains in force. You may convey\ncovered works to others for the sole purpose of having them make modifications\nexclusively for you, or provide you with facilities for running those works,\nprovided that you comply with the terms of this License in conveying all\nmaterial for which you do not control copyright. Those thus making or running\nthe covered works for you must do so exclusively on your behalf, under your\ndirection and control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\nConveying under any other circumstances is permitted solely under the\nconditions stated below. Sublicensing is not allowed; section 10 makes it\nunnecessary.\n\n### 3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\nNo covered work shall be deemed part of an effective technological measure\nunder any applicable law fulfilling obligations under article 11 of the WIPO\ncopyright treaty adopted on 20 December 1996, or similar laws prohibiting or\nrestricting circumvention of such measures.\n\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention is\neffected by exercising rights under this License with respect to the covered\nwork, and you disclaim any intention to limit operation or modification of the\nwork as a means of enforcing, against the work's users, your or third parties'\nlegal rights to forbid circumvention of technological measures.\n\n### 4. Conveying Verbatim Copies.\n\nYou may convey verbatim copies of the Program's source code as you receive it,\nin any medium, provided that you conspicuously and appropriately publish on\neach copy an appropriate copyright notice; keep intact all notices stating that\nthis License and any non-permissive terms added in accord with section 7 apply\nto the code; keep intact all notices of the absence of any warranty; and give\nall recipients a copy of this License along with the Program.\n\nYou may charge any price or no price for each copy that you convey, and you may\noffer support or warranty protection for a fee.\n\n### 5. Conveying Modified Source Versions.\n\nYou may convey a work based on the Program, or the modifications to produce it\nfrom the Program, in the form of source code under the terms of section 4,\nprovided that you also meet all of these conditions:\n\n  - a) The work must carry prominent notices stating that you modified it, and\n    giving a relevant date.\n  - b) The work must carry prominent notices stating that it is released under\n    this License and any conditions added under section 7. This requirement\n    modifies the requirement in section 4 to *keep intact all notices*.\n  - c) You must license the entire work, as a whole, under this License to\n    anyone who comes into possession of a copy. This License will therefore\n    apply, along with any applicable section 7 additional terms, to the whole\n    of the work, and all its parts, regardless of how they are packaged. This\n    License gives no permission to license the work in any other way, but it\n    does not invalidate such permission if you have separately received it.\n  - d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your work need\n    not make them do so.\n\nA compilation of a covered work with other separate and independent works,\nwhich are not by their nature extensions of the covered work, and which are not\ncombined with it such as to form a larger program, in or on a volume of a\nstorage or distribution medium, is called an *aggregate* if the compilation and\nits resulting copyright are not used to limit the access or legal rights of the\ncompilation's users beyond what the individual works permit. Inclusion of a\ncovered work in an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n### 6. Conveying Non-Source Forms.\n\nYou may convey a covered work in object code form under the terms of sections 4\nand 5, provided that you also convey the machine-readable Corresponding Source\nunder the terms of this License, in one of these ways:\n\n  - a) Convey the object code in, or embodied in, a physical product (including\n    a physical distribution medium), accompanied by the Corresponding Source\n    fixed on a durable physical medium customarily used for software\n    interchange.\n  - b) Convey the object code in, or embodied in, a physical product (including\n    a physical distribution medium), accompanied by a written offer, valid for\n    at least three years and valid for as long as you offer spare parts or\n    customer support for that product model, to give anyone who possesses the\n    object code either\n    1. a copy of the Corresponding Source for all the software in the product\n       that is covered by this License, on a durable physical medium\n       customarily used for software interchange, for a price no more than your\n       reasonable cost of physically performing this conveying of source, or\n    2. access to copy the Corresponding Source from a network server at no\n       charge.\n  - c) Convey individual copies of the object code with a copy of the written\n    offer to provide the Corresponding Source. This alternative is allowed only\n    occasionally and noncommercially, and only if you received the object code\n    with such an offer, in accord with subsection 6b.\n  - d) Convey the object code by offering access from a designated place\n    (gratis or for a charge), and offer equivalent access to the Corresponding\n    Source in the same way through the same place at no further charge. You\n    need not require recipients to copy the Corresponding Source along with the\n    object code. If the place to copy the object code is a network server, the\n    Corresponding Source may be on a different server operated by you or a\n    third party) that supports equivalent copying facilities, provided you\n    maintain clear directions next to the object code saying where to find the\n    Corresponding Source. Regardless of what server hosts the Corresponding\n    Source, you remain obligated to ensure that it is available for as long as\n    needed to satisfy these requirements.\n  - e) Convey the object code using peer-to-peer transmission, provided you\n    inform other peers where the object code and Corresponding Source of the\n    work are being offered to the general public at no charge under subsection\n    6d.\n\nA separable portion of the object code, whose source code is excluded from the\nCorresponding Source as a System Library, need not be included in conveying the\nobject code work.\n\nA *User Product* is either\n\n  1. a *consumer product*, which means any tangible personal property which is\n     normally used for personal, family, or household purposes, or\n  2. anything designed or sold for incorporation into a dwelling.\n\nIn determining whether a product is a consumer product, doubtful cases shall be\nresolved in favor of coverage. For a particular product received by a\nparticular user, *normally used* refers to a typical or common use of that\nclass of product, regardless of the status of the particular user or of the way\nin which the particular user actually uses, or expects or is expected to use,\nthe product. A product is a consumer product regardless of whether the product\nhas substantial commercial, industrial or non-consumer uses, unless such uses\nrepresent the only significant mode of use of the product.\n\n*Installation Information* for a User Product means any methods, procedures,\nauthorization keys, or other information required to install and execute\nmodified versions of a covered work in that User Product from a modified\nversion of its Corresponding Source. The information must suffice to ensure\nthat the continued functioning of the modified object code is in no case\nprevented or interfered with solely because modification has been made.\n\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as part of a\ntransaction in which the right of possession and use of the User Product is\ntransferred to the recipient in perpetuity or for a fixed term (regardless of\nhow the transaction is characterized), the Corresponding Source conveyed under\nthis section must be accompanied by the Installation Information. But this\nrequirement does not apply if neither you nor any third party retains the\nability to install modified object code on the User Product (for example, the\nwork has been installed in ROM).\n\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates for a\nwork that has been modified or installed by the recipient, or for the User\nProduct in which it has been modified or installed. Access to a network may be\ndenied when the modification itself materially and adversely affects the\noperation of the network or violates the rules and protocols for communication\nacross the network.\n\nCorresponding Source conveyed, and Installation Information provided, in accord\nwith this section must be in a format that is publicly documented (and with an\nimplementation available to the public in source code form), and must require\nno special password or key for unpacking, reading or copying.\n\n### 7. Additional Terms.\n\n*Additional permissions* are terms that supplement the terms of this License by\nmaking exceptions from one or more of its conditions. Additional permissions\nthat are applicable to the entire Program shall be treated as though they were\nincluded in this License, to the extent that they are valid under applicable\nlaw. If additional permissions apply only to part of the Program, that part may\nbe used separately under those permissions, but the entire Program remains\ngoverned by this License without regard to the additional permissions.\n\nWhen you convey a copy of a covered work, you may at your option remove any\nadditional permissions from that copy, or from any part of it. (Additional\npermissions may be written to require their own removal in certain cases when\nyou modify the work.) You may place additional permissions on material, added\nby you to a covered work, for which you have or can give appropriate copyright\npermission.\n\nNotwithstanding any other provision of this License, for material you add to a\ncovered work, you may (if authorized by the copyright holders of that material)\nsupplement the terms of this License with terms:\n\n  - a) Disclaiming warranty or limiting liability differently from the terms of\n    sections 15 and 16 of this License; or\n  - b) Requiring preservation of specified reasonable legal notices or author\n    attributions in that material or in the Appropriate Legal Notices displayed\n    by works containing it; or\n  - c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in reasonable\n    ways as different from the original version; or\n  - d) Limiting the use for publicity purposes of names of licensors or authors\n    of the material; or\n  - e) Declining to grant rights under trademark law for use of some trade\n    names, trademarks, or service marks; or\n  - f) Requiring indemnification of licensors and authors of that material by\n    anyone who conveys the material (or modified versions of it) with\n    contractual assumptions of liability to the recipient, for any liability\n    that these contractual assumptions directly impose on those licensors and\n    authors.\n\nAll other non-permissive additional terms are considered *further restrictions*\nwithin the meaning of section 10. If the Program as you received it, or any\npart of it, contains a notice stating that it is governed by this License along\nwith a term that is a further restriction, you may remove that term. If a\nlicense document contains a further restriction but permits relicensing or\nconveying under this License, you may add to a covered work material governed\nby the terms of that license document, provided that the further restriction\ndoes not survive such relicensing or conveying.\n\nIf you add terms to a covered work in accord with this section, you must place,\nin the relevant source files, a statement of the additional terms that apply to\nthose files, or a notice indicating where to find the applicable terms.\n\nAdditional terms, permissive or non-permissive, may be stated in the form of a\nseparately written license, or stated as exceptions; the above requirements\napply either way.\n\n### 8. Termination.\n\nYou may not propagate or modify a covered work except as expressly provided\nunder this License. Any attempt otherwise to propagate or modify it is void,\nand will automatically terminate your rights under this License (including any\npatent licenses granted under the third paragraph of section 11).\n\nHowever, if you cease all violation of this License, then your license from a\nparticular copyright holder is reinstated\n\n  - a) provisionally, unless and until the copyright holder explicitly and\n    finally terminates your license, and\n  - b) permanently, if the copyright holder fails to notify you of the\n    violation by some reasonable means prior to 60 days after the cessation.\n\nMoreover, your license from a particular copyright holder is reinstated\npermanently if the copyright holder notifies you of the violation by some\nreasonable means, this is the first time you have received notice of violation\nof this License (for any work) from that copyright holder, and you cure the\nviolation prior to 30 days after your receipt of the notice.\n\nTermination of your rights under this section does not terminate the licenses\nof parties who have received copies or rights from you under this License. If\nyour rights have been terminated and not permanently reinstated, you do not\nqualify to receive new licenses for the same material under section 10.\n\n### 9. Acceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or run a copy\nof the Program. Ancillary propagation of a covered work occurring solely as a\nconsequence of using peer-to-peer transmission to receive a copy likewise does\nnot require acceptance. However, nothing other than this License grants you\npermission to propagate or modify any covered work. These actions infringe\ncopyright if you do not accept this License. Therefore, by modifying or\npropagating a covered work, you indicate your acceptance of this License to do\nso.\n\n### 10. Automatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically receives a\nlicense from the original licensors, to run, modify and propagate that work,\nsubject to this License. You are not responsible for enforcing compliance by\nthird parties with this License.\n\nAn *entity transaction* is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations. If propagation of a covered work\nresults from an entity transaction, each party to that transaction who receives\na copy of the work also receives whatever licenses to the work the party's\npredecessor in interest had or could give under the previous paragraph, plus a\nright to possession of the Corresponding Source of the work from the\npredecessor in interest, if the predecessor has it or can get it with\nreasonable efforts.\n\nYou may not impose any further restrictions on the exercise of the rights\ngranted or affirmed under this License. For example, you may not impose a\nlicense fee, royalty, or other charge for exercise of rights granted under this\nLicense, and you may not initiate litigation (including a cross-claim or\ncounterclaim in a lawsuit) alleging that any patent claim is infringed by\nmaking, using, selling, offering for sale, or importing the Program or any\nportion of it.\n\n### 11. Patents.\n\nA *contributor* is a copyright holder who authorizes use under this License of\nthe Program or a work on which the Program is based. The work thus licensed is\ncalled the contributor's *contributor version*.\n\nA contributor's *essential patent claims* are all patent claims owned or\ncontrolled by the contributor, whether already acquired or hereafter acquired,\nthat would be infringed by some manner, permitted by this License, of making,\nusing, or selling its contributor version, but do not include claims that would\nbe infringed only as a consequence of further modification of the contributor\nversion. For purposes of this definition, *control* includes the right to grant\npatent sublicenses in a manner consistent with the requirements of this\nLicense.\n\nEach contributor grants you a non-exclusive, worldwide, royalty-free patent\nlicense under the contributor's essential patent claims, to make, use, sell,\noffer for sale, import and otherwise run, modify and propagate the contents of\nits contributor version.\n\nIn the following three paragraphs, a *patent license* is any express agreement\nor commitment, however denominated, not to enforce a patent (such as an express\npermission to practice a patent or covenant not to sue for patent\ninfringement). To *grant* such a patent license to a party means to make such\nan agreement or commitment not to enforce a patent against the party.\n\nIf you convey a covered work, knowingly relying on a patent license, and the\nCorresponding Source of the work is not available for anyone to copy, free of\ncharge and under the terms of this License, through a publicly available\nnetwork server or other readily accessible means, then you must either\n\n  1. cause the Corresponding Source to be so available, or\n  2. arrange to deprive yourself of the benefit of the patent license for this\n     particular work, or\n  3. arrange, in a manner consistent with the requirements of this License, to\n     extend the patent license to downstream recipients.\n\n*Knowingly relying* means you have actual knowledge that, but for the patent\nlicense, your conveying the covered work in a country, or your recipient's use\nof the covered work in a country, would infringe one or more identifiable\npatents in that country that you have reason to believe are valid.\n\nIf, pursuant to or in connection with a single transaction or arrangement, you\nconvey, or propagate by procuring conveyance of, a covered work, and grant a\npatent license to some of the parties receiving the covered work authorizing\nthem to use, propagate, modify or convey a specific copy of the covered work,\nthen the patent license you grant is automatically extended to all recipients\nof the covered work and works based on it.\n\nA patent license is *discriminatory* if it does not include within the scope of\nits coverage, prohibits the exercise of, or is conditioned on the non-exercise\nof one or more of the rights that are specifically granted under this License.\nYou may not convey a covered work if you are a party to an arrangement with a\nthird party that is in the business of distributing software, under which you\nmake payment to the third party based on the extent of your activity of\nconveying the work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory patent\nlicense\n\n  - a) in connection with copies of the covered work conveyed by you (or copies\n    made from those copies), or\n  - b) primarily for and in connection with specific products or compilations\n    that contain the covered work, unless you entered into that arrangement, or\n    that patent license was granted, prior to 28 March 2007.\n\nNothing in this License shall be construed as excluding or limiting any implied\nlicense or other defenses to infringement that may otherwise be available to\nyou under applicable patent law.\n\n### 12. No Surrender of Others' Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not excuse\nyou from the conditions of this License. If you cannot convey a covered work so\nas to satisfy simultaneously your obligations under this License and any other\npertinent obligations, then as a consequence you may not convey it at all. For\nexample, if you agree to terms that obligate you to collect a royalty for\nfurther conveying from those to whom you convey the Program, the only way you\ncould satisfy both those terms and this License would be to refrain entirely\nfrom conveying the Program.\n\n### 13. Use with the GNU Affero General Public License.\n\nNotwithstanding any other provision of this License, you have permission to\nlink or combine any covered work with a work licensed under version 3 of the\nGNU Affero General Public License into a single combined work, and to convey\nthe resulting work. The terms of this License will continue to apply to the\npart which is the covered work, but the special requirements of the GNU Affero\nGeneral Public License, section 13, concerning interaction through a network\nwill apply to the combination as such.\n\n### 14. Revised Versions of this License.\n\nThe Free Software Foundation may publish revised and/or new versions of the GNU\nGeneral Public License from time to time. Such new versions will be similar in\nspirit to the present version, but may differ in detail to address new problems\nor concerns.\n\nEach version is given a distinguishing version number. If the Program specifies\nthat a certain numbered version of the GNU General Public License *or any later\nversion* applies to it, you have the option of following the terms and\nconditions either of that numbered version or of any later version published by\nthe Free Software Foundation. If the Program does not specify a version number\nof the GNU General Public License, you may choose any version ever published by\nthe Free Software Foundation.\n\nIf the Program specifies that a proxy can decide which future versions of the\nGNU General Public License can be used, that proxy's public statement of\nacceptance of a version permanently authorizes you to choose that version for\nthe Program.\n\nLater license versions may give you additional or different permissions.\nHowever, no additional obligations are imposed on any author or copyright\nholder as a result of your choosing to follow a later version.\n\n### 15. Disclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE\nLAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER\nPARTIES PROVIDE THE PROGRAM *AS IS* WITHOUT WARRANTY OF ANY KIND, EITHER\nEXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE\nQUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE\nDEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR\nCORRECTION.\n\n### 16. Limitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY\nCOPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS\nPERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL,\nINCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE\nTHE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED\nINACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE\nPROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY\nHAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n### 17. Interpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided above cannot\nbe given local legal effect according to their terms, reviewing courts shall\napply local law that most closely approximates an absolute waiver of all civil\nliability in connection with the Program, unless a warranty or assumption of\nliability accompanies a copy of the Program in return for a fee.\n\n## END OF TERMS AND CONDITIONS ###\n\n### How to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest possible\nuse to the public, the best way to achieve this is to make it free software\nwhich everyone can redistribute and change under these terms.\n\nTo do so, attach the following notices to the program. It is safest to attach\nthem to the start of each source file to most effectively state the exclusion\nof warranty; and each file should have at least the *copyright* line and a\npointer to where the full notice is found.\n\n\t<one line to give the program's name and a brief idea of what it does.>\n\tCopyright (C) <year>  <name of author>\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program does terminal interaction, make it output a short notice like\nthis when it starts in an interactive mode:\n\n\t<program>  Copyright (C) <year>  <name of author>\n\tThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n\tThis is free software, and you are welcome to redistribute it\n\tunder certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w` and `show c` should show the appropriate\nparts of the General Public License. Of course, your program's commands might\nbe different; for a GUI interface, you would use an *about box*.\n\nYou should also get your employer (if you work as a programmer) or school, if\nany, to sign a *copyright disclaimer* for the program, if necessary. For more\ninformation on this, and how to apply and follow the GNU GPL, see\n[http://www.gnu.org/licenses/](http://www.gnu.org/licenses/).\n\nThe GNU General Public License does not permit incorporating your program into\nproprietary programs. If your program is a subroutine library, you may consider\nit more useful to permit linking proprietary applications with the library. If\nthis is what you want to do, use the GNU Lesser General Public License instead\nof this License. But first, please read\n[http://www.gnu.org/philosophy/why-not-lgpl.html](http://www.gnu.org/philosophy/why-not-lgpl.html).\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 0.017578125,
          "content": "SUBDIRS = \\\n  src\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "README",
          "type": "blob",
          "size": 0.0087890625,
          "content": "README.md"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 31.1982421875,
          "content": "<p align=\"center\"><img src=\"art/austin_die_cut_sticker.png\" alt=\"Austin\"></p>\n\n<h3 align=\"center\">A Frame Stack Sampler for CPython</h3>\n\n<p align=\"center\">\n  <img src=\"art/tux.svg\"\n       height=\"24px\" />\n  &nbsp;&nbsp;&nbsp;&nbsp;\n  <img src=\"art/apple.svg\" />\n  &nbsp;&nbsp;&nbsp;&nbsp;\n  <img src=\"art/win.svg\"\n       height=\"24px\" />\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/P403n1x87/austin/actions?query=workflow%3ATests\"><img src=\"https://github.com/P403n1x87/austin/actions/workflows/tests.yml/badge.svg\" alt=\"GitHub Action Status: Tests\" /></a>\n  <a href=\"https://github.com/P403n1x87/austin/actions?query=workflow%3AChecks\"><img src=\"https://github.com/P403n1x87/austin/actions/workflows/checks.yml/badge.svg\" alt=\"GitHub Action Status: Checks\" /></a>\n  <a href=\"https://codecov.io/gh/P403n1x87/austin\"><img src=\"https://codecov.io/gh/P403n1x87/austin/branch/master/graph/badge.svg?token=OEDWB2IYBR\" alt=\"Code coverage\"/></a>\n  <a href=\"https://github.com/P403n1x87/austin/releases/latest\"><img src=\"http://img.shields.io/github/v/release/p403n1x87/austin\" alt=\"latest release\" /></a>\n  <a href=\"https://github.com/P403n1x87/austin/blob/master/LICENSE.md\"><img src=\"https://img.shields.io/badge/license-GPLv3-ff69b4.svg\" alt=\"LICENSE\" /></a>\n\n  <br/>\n  <a href=\"https://badge.fury.io/py/austin-dist\"><img src=\"https://badge.fury.io/py/austin-dist.svg\" alt=\"PyPI version\"></a>\n  <a href=\"https://chocolatey.org/packages/austin/\"><img src=\"https://img.shields.io/chocolatey/v/austin\" alt=\"Chocolatey Version\" /></a>\n  <a href=\"https://anaconda.org/conda-forge/austin\"><img src=\"https://img.shields.io/conda/vn/conda-forge/austin.svg\" alt=\"Conda Version\" /></a>\n  <!-- <a href=\"https://packages.debian.org/unstable/austin\">\n    <img src=\"https://badges.debian.net/badges/debian/unstable/austin/version.svg\"\n         alt=\"Debian package status\" />\n  </a> -->\n  <a href=\"https://formulae.brew.sh/formula/austin\"><img src=\"https://img.shields.io/homebrew/v/austin\" alt=\"homebrew\" /></a>\n  <a href=\"https://snapcraft.io/austin\"><img src=\"https://snapcraft.io/austin/badge.svg\" alt=\"austin Snap Store Build Status\" /></a>\n\n</p>\n\n<p align=\"center\">\n  <a href=\"https://snapcraft.io/austin\" title=\"Get it from the Snap Store\">\n    <img src=\"https://snapcraft.io/static/images/badges/en/snap-store-black.svg\"\n         alt=\"Get it from the Snap Store\" />\n  </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"#synopsis\"><b>Synopsis</b></a>&nbsp;&bull;\n  <a href=\"#installation\"><b>Installation</b></a>&nbsp;&bull;\n  <a href=\"#usage\"><b>Usage</b></a>&nbsp;&bull;\n  <a href=\"#cheat-sheet\"><b>Cheat sheet</b></a>&nbsp;&bull;\n  <a href=\"#compatibility\"><b>Compatibility</b></a>&nbsp;&bull;\n  <a href=\"#why--austin\"><b>Why <img src=\"art/austin_logo.svg\" height=\"20px\" /> Austin</b></a>&nbsp;&bull;\n  <a href=\"#examples\"><b>Examples</b></a>&nbsp;&bull;\n  <a href=\"#contribute\"><b>Contribute</b></a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://www.buymeacoffee.com/Q9C1Hnm28\" target=\"_blank\">\n    <img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\"\n         alt=\"Buy Me A Coffee\" />\n  </a>\n</p>\n\n----\n\n<p align=\"center\"><i>This is the nicest profiler I’ve found for Python. It’s\ncross-platform, doesn’t need me to change the code that’s being profiled, and\nits output can be piped directly into <code>flamegraph.pl</code>. I just used it\nto pinpoint a gross misuse of SQLAlchemy at work that’s run in some code at the\nend of each day, and now I can go home earlier.</i><br/><br/>-- gthm on <a\nhref=\"https://lobste.rs/s/qairy5/austin_python_frame_stack_sampler_for\">lobste.rs</a></p>\n\n<p align=\"center\"><i>If people are looking for a profiler, Austin looks pretty\ncool. Check it out!</i><br/><br/>-- Michael Kennedy on <a\nhref=\"https://www.youtube.com/watch?v=eFgybynhMrs\">Python Bytes 180</a></p>\n\n<p align=\"center\"> <a href=\"https://twitter.com/AustinSampler\">Follow <img\nsrc=\"art/austin_logo.svg\" height=\"20px\" /> on <img\nsrc=\"https://upload.wikimedia.org/wikipedia/en/thumb/9/9f/Twitter_bird_logo_2012.svg/1024px-Twitter_bird_logo_2012.svg.png\"\nheight=\"18px\" alt=\"Twitter\" /></a>\n</p>\n\n----\n\n\n# Synopsis\n\nAustin is a Python frame stack sampler for CPython written in pure C. Samples\nare collected by reading the CPython interpreter virtual memory space to\nretrieve information about the currently running threads along with the stack of\nthe frames that are being executed. Hence, one can use Austin to easily make\npowerful statistical profilers that have minimal impact on the target\napplication and that don't require any instrumentation.\n\n\nThe key features of Austin are:\n- Zero instrumentation;\n- Minimal impact;\n- Fast and lightweight;\n- Time and memory profiling;\n- Built-in support for multi-process applications (e.g. `mod_wsgi`).\n\nThe simplest way to turn Austin into a full-fledged profiler is to use together\nwith the [VS\nCode](https://marketplace.visualstudio.com/items?itemName=p403n1x87.austin-vscode)\nextension or combine it with [FlameGraph] or [Speedscope]. However, Austin's\nsimple output format can be piped into any other external or custom tool for\nfurther processing. Look, for instance, at the following Python TUI\n\n\n<p align=\"center\">\n  <img src=\"art/austin-tui.png\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\nCheck out [A Survey of Open-Source Python\nProfilers](https://www.usenix.org/system/files/login/articles/login_winter19_12_norton.pdf)\nby Peter Norton for a general overview of Austin.\n\nKeep reading for more tool ideas and examples!\n\n---\n\n<p align=\"center\">💜</br><i>Austin is a free and open-source project. A lot of\neffort goes into its development to ensure the best performance and that it\nstays up-to-date with the latest Python releases. If you find it useful,\nconsider <a href=\"https://github.com/sponsors/P403n1x87\">sponsoring</a> this\nproject.</i></br>🙏</p>\n\n---\n\n# Installation\n\nAustin is available to install from [PyPI](pypi) and from the major software\nrepositories of the most popular platforms. Check out the [latest release] page\nfor pre-compiled binaries and installation packages.\n\nOn all supported platforms and architectures, Austin can be installed from PyPI\nwith `pip` or `pipx` via the commands\n\n~~~\npip install austin-dist\n~~~\nor\n~~~\npipx install austin-dist\n~~~\n\nOn Linux, it can be installed using `autotools` or as a snap from the [Snap\nStore](https://snapcraft.io/store). The latter will automatically perform the\nsteps of the `autotools` method with a single command. On distributions derived\nfrom Debian, Austin can be installed from the official repositories with\n`apt`. Anaconda users can install Austin from [Conda Forge].\n\nOn Windows, Austin can be easily installed from the command line using either\n[Chocolatey] or [Scoop]. Alternatively, you can download the installer from the\n[latest release] page.\n\nOn macOS, Austin can be easily installed from the command line using [Homebrew].\nAnaconda users can install Austin from [Conda Forge].\n\nFor any other platforms, compiling Austin from sources is as easy as cloning the\nrepository and running the C compiler. The [Releases][releases] page has many\npre-compiled binaries that are ready to be uncompressed and used.\n\n## With `autotools`\n\nInstalling Austin using `autotools` amounts to the usual `./configure`, `make`\nand `make install` finger gymnastic. The only dependency is the standard C\nlibrary. Before proceeding with the steps below, make sure that the `autotools`\nare installed on your system. Refer to your distro's documentation for details\non how to do so.\n\n~~~ console\ngit clone --depth=1 https://github.com/P403n1x87/austin.git && cd austin\nautoreconf --install\n./configure\nmake\nmake install\n~~~\n\n> **NOTE** Some Linux distributions, like Manjaro, might require the execution\n> of `automake --add-missing` before `./configure`.\n\nAlternatively, sources can be compiled with just a C compiler (see below).\n\n\n## From the Snap Store\n\nAustin can be installed on [many major Linux\ndistributions](https://snapcraft.io/docs/installing-snapd) from the Snap Store\nwith the following command\n\n~~~ console\nsudo snap install austin --classic\n~~~\n\n\n## On Debian and Derivatives\n\nOn March 30 2019 Austin was accepted into the official Debian repositories and\ncan therefore be installed with the `apt` utility.\n\n~~~ console\nsudo apt update -y && sudo apt install austin -y\n~~~\n\n## On macOS\n\nAustin can be installed on macOS using [Homebrew](https://docs.brew.sh):\n\n~~~ console\nbrew install austin\n~~~\n\n\n## From Chocolatey\n\nTo install [Austin from Chocolatey](https://chocolatey.org/packages/austin), run\nthe following command from the command line or from PowerShell\n\n~~~ console\nchoco install austin\n~~~\n\nTo upgrade run the following command from the command line or from PowerShell:\n\n~~~ console\nchoco upgrade austin\n~~~\n\n\n## From Scoop\n\nTo install Austin using Scoop, run the following command from the command line\nor PowerShell\n\n~~~ console\nscoop install austin\n~~~\n\nTo upgrade run the following command from the command line or PowerShell:\n\n~~~ console\nscoop update\n~~~\n\n\n## From Conda Forge\n\nAnaconda users on Linux and macOS can install Austin from [Conda Forge] with the\ncommand\n\n~~~ console\nconda install -c conda-forge austin\n~~~\n\n## From Sources without `autotools`\n\nTo install Austin from sources using the GNU C compiler, without `autotools`,\nclone the repository with\n\n~~~ console\ngit clone --depth=1 https://github.com/P403n1x87/austin.git\n~~~\n\nOn Linux, one can then use the command\n\n~~~ console\ngcc -O3 -Os -Wall -pthread src/*.c -o src/austin\n~~~\n\nwhereas on macOS it is enough to run\n\n~~~ console\ngcc -O3 -Os -Wall src/*.c -o src/austin\n~~~\n\nOn Windows, the `-lpsapi -lntdll` switches are needed\n\n~~~ console\ngcc -O3 -Os -Wall -lpsapi -lntdll src/*.c -o src/austin\n~~~\n\nAdd `-DDEBUG` if you need a more verbose log. This is useful if you encounter a\nbug with Austin and you want to report it here.\n\n\n# Usage\n\n<!-- [[[cog\nfrom subprocess import check_output\nprint(\"~~~\")\nprint(check_output([\"src/austin\", \"--help\"]).decode().strip())\nprint(\"~~~\")\n]]] -->\n~~~\nUsage: austin [OPTION...] command [ARG...]\nAustin is a frame stack sampler for CPython that is used to extract profiling\ndata out of a running Python process (and all its children, if required) that\nrequires no instrumentation and has practically no impact on the tracee.\n\n  -b, --binary               Emit data in the MOJO binary format. See\n                             https://github.com/P403n1x87/austin/wiki/The-MOJO-file-format\n                             for more details.\n  -C, --children             Attach to child processes.\n  -f, --full                 Produce the full set of metrics (time +mem -mem).\n  -g, --gc                   Sample the garbage collector state.\n  -h, --heap=n_mb            Maximum heap size to allocate to increase sampling\n                             accuracy, in MB (default is 0).\n  -i, --interval=n_us        Sampling interval in microseconds (default is\n                             100). Accepted units: s, ms, us.\n  -m, --memory               Profile memory usage.\n  -o, --output=FILE          Specify an output file for the collected samples.\n  -p, --pid=PID              Attach to the process with the given PID.\n  -P, --pipe                 Pipe mode. Use when piping Austin output.\n  -s, --sleepless            Suppress idle samples to estimate CPU time.\n  -t, --timeout=n_ms         Start up wait time in milliseconds (default is\n                             100). Accepted units: s, ms.\n  -w, --where=PID            Dump the stacks of all the threads within the\n                             process with the given PID.\n  -x, --exposure=n_sec       Sample for n_sec seconds only.\n  -?, --help                 Give this help list\n      --usage                Give a short usage message\n  -V, --version              Print program version\n\nMandatory or optional arguments to long options are also mandatory or optional\nfor any corresponding short options.\n\nReport bugs to <https://github.com/P403n1x87/austin/issues>.\n~~~\n<!-- [[[end]]] -->\n\nThe output is a sequence of frame stack samples, one on each line. The format is\nthe collapsed one that is recognised by [FlameGraph] so that it can be piped\nstraight to `flamegraph.pl` for a quick visualisation, or redirected to a file\nfor some further processing.\n\nBy default, each line has the following structure:\n\n~~~\nP<pid>;T<iid>:<tid>[;[frame]]* [metric]*\n~~~\n\nwhere the structure of `[frame]` and the number and type of metrics on each line\ndepend on the mode. The `<pid>`, `<iid>` and `<tid>` component represent the\nprocess ID, the sub-interpreter ID, and the thread ID respectively.\n\n\n## Environment variables\n\nSome behaviour of Austin can be configured via environment variables.\n\n| Variable            | Effect                                                      |\n| ------------------- | ----------------------------------------------------------- |\n| `AUSTIN_NO_LOGGING` | Disables all [log messages](#logging) (since Austin 3.4.0). |\n\n\n## Normal Mode\n\nIn normal mode, the `[frame]` part of each emitted sample has the structure\n\n~~~\n[frame] := <module>:<function>:<line number>\n~~~\n\nEach line then ends with a single `[metric]`, i.e. the sampling time measured in\nmicroseconds.\n\n\n> **NOTE** This was changed in Austin 3. In previous version, the alternative\n> format used to be the default one.\n\n\n## Binary Mode\n\nThe output generated by Austin by default can be quickly visualised by some\nexisting tools without further processing. However, this comes at the cost of\npotentially big raw output files. The binary mode can be used to produce a more\ncompact binary representation of the collected data, and more efficiently, by\nexploiting the performance enhancement of internal caching of frame data.\n\nThe `mojo2austin` CLI tool that comes with the [`austin-python`] Python package\ncan be used to convert a MOJO file back to the standard Austin output. Be aware\nthat the resulting file might be quite large, well over 4 times the size of the\nMOJO file itself.\n\nMore details about the [MOJO] binary format can be found in the [Wiki].\n\n*Since Austin 3.4.0*.\n\n\n## Column-level Location Information\n\nSince Python 3.11, code objects carry finer-grained location information at the\ncolumn level. When using the binary MOJO format, Austin can extract this extra\nlocation information when profiling code running with versions of the\ninterpreter that expose this data.\n\n*Since Austin 3.5.0*.\n\n\n## Memory and Full Metrics\n\nWhen profiling in memory mode with the `-m` or `--memory` switch, the metric\nvalue at the end of each line is the memory delta between samples, measured in\nbytes. In full mode (`-f` or `--full` switches), each sample ends with a\ncomma-separated list of three values: the time delta, the idle state (1 for\nidle, 0 otherwise) and the RSS memory delta (positive for memory allocations,\nnegative for deallocations). This way it is possible to estimate wall-clock\ntime, CPU time and memory pressure, all from a single run.\n\n> **NOTE** The reported memory allocations and deallocations are obtained by\n> computing resident memory deltas between samples. Hence these values give an\n> idea of how much _physical_ memory is being requested/released.\n\n\n## Multi-process Applications\n\nAustin can be told to profile multi-process applications with the `-C` or\n`--children` switch. This way Austin will look for new children of the parent\nprocess.\n\n\n## Sub-interpreters\n\nAustin has support for Python applications that make use of sub-interpreters.\nThis means that Austin will sample all the sub-interpreters that are running\nwithin each process making up the Python application.\n\n*Since Austin 3.6.0*.\n\n\n## Garbage Collector Sampling\n\nAustin can sample the Python garbage collector state for applications running\nwith Python 3.7 and later versions. If the `-g`/`--gc` option is passed, Austin\nwill append `:GC:` at the end of each collected frame stack whenever the garbage\ncollector is collecting. This gives you a measure of how *busy* the Python GC is\nduring a run.\n\n*Since Austin 3.1.0*.\n\n\n## Where?\n\nIf you are only interested in what is currently happening inside a Python\nprocess, you can have a quick overview printed on the terminal with the\n`-w/--where` option. This takes the PID of the process whose threads you want to\ninspect, e.g.\n\n~~~ console\nsudo austin -w `pgrep -f my-running-python-app`\n~~~\n\nBelow is an example of what the output looks like\n\n<p align=\"center\">\n  <img src=\"art/austin-where.png\"\n       alt=\"Austin where mode example\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\nThis works with the `-C/--children` option too. The emojis to the left indicate\nwhether the thread is active or sleeping and whether the process is a child or\nnot.\n\n*Since Austin 3.3.0*.\n\n\n## Sampling Accuracy\n\nAustin tries to keep perturbations to the tracee at a minimum. To do so, the\ntracee is never halted. To improve sampling accuracy, Austin can allocate a heap\nthat is used to get large snapshots of the private VM of the tracee that is\nlikely to contain frame information in a single attempt. The larger the heap is\nallowed the grow, the more accurate the results. The maximum size of the heap\nthat Austin is allowed to allocate can be controlled with the `-h/--heap`\noption, followed by the maximum size in bytes. By default, Austin does not\nallocate a heap, which is ideal for systems with limited resources. If you think\nyour results are not accurate, try setting this parameter.\n\n*Since Austin 3.2.0*.\n\n*Changed in Austin 3.3.0*: the default heap size is 0.\n\n\n## Native Frame Stack\n\nIf you want observability into the native frame stacks, you can use the\n`austinp` variant of `austin` which can be obtained by compiling the source\nwith `-DAUSTINP` on Linux, or from the released binaries.\n\n`austinp` makes use of `ptrace` to halt the application and grab a\nsnapshot of the call stack with `libunwind`. If you are compiling `austinp` from\nsources make sure that you have the development version of the `libunwind`\nlibrary available on your system, for example on Ubuntu,\n\n~~~ console\nsudo apt install libunwind-dev binutils-dev\n~~~\n\nand compile with\n\n~~~ console\ngcc -O3 -Os -Wall -pthread src/*.c -DAUSTINP -lunwind-ptrace -lunwind-generic -lbfd -o src/austinp\n~~~\n\nthen use as per normal. The extra `-k/--kernel` option is available with\n`austinp` which allows sampling kernel call stacks as well.\n\n> **WARNING** Since `austinp` uses `ptrace`, the impact on the tracee is no\n> longer minimal and it becomes higher at smaller sampling intervals. Therefore\n> the use of `austinp` is not recommended in production environments. For this\n> reason, the default sampling interval for `austinp` is 10 milliseconds.\n\nThe `austinp-resolve` tool from the [`austin-python`] Python package can be used\nto resolve the VM addresses to source and line numbers, provided that the\nreferenced binaries have DWARF debug symbols. Internally, the tool uses\n`addr2line(1)` to determine the source name and line number given an address,\nwhen possible.\n\n> Whilst `austinp` comes with a stripped-down implementation of `addr2line`, it\n> is only used for the \"where\" option, as resolving symbols at runtime is\n> expensive. This is to minimise the impact of austinp on the tracee, increase\n> accuracy and maximise the sampling rate.\n\nThe [where](#where) option is also available for the `austinp` variant and will\nshow both native and Python frames. Highlighting helps tell frames apart. The\n`-k` option outputs Linux kernel frames too, as shown in this example\n\n<p align=\"center\">\n  <img src=\"art/austin-where-kernel.png\"\n       alt=\"Austin where mode example\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\n> **NOTE** If you have installed Austin from the Snap Store, the `austinp`\n> executable will be available as `austin.p` from the command line.\n\n\n## Logging\n\nAustin uses `syslog` on Linux and macOS, and `%TEMP%\\austin.log` on Windows\nfor log messages, so make sure to watch these to get execution details and\nstatistics. _Bad_ frames are output together with the other frames. In general,\nentries for bad frames will not be visible in a flame graph as all tests show\nerror rates below 1% on average.\n\nLogging can be disabled using [environment variables](#environment-variables).\n\n\n## Cheat sheet\n\nAll the above Austin options and arguments are summarised in a cheat sheet that\nyou can find in the [doc](https://github.com/P403n1x87/austin/blob/master/doc/)\nfolder in either the SVG, PDF or PNG format\n\n<p align=\"center\">\n  <img src=\"doc/cheatsheet.png\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\n# Compatibility\n\nAustin supports Python 3.8 through 3.13, and has been tested on the following\nplatforms and architectures\n\n|             | <img src=\"art/tux.svg\" /> | <img src=\"art/win.svg\"/> | <img src=\"art/apple.svg\"/> |\n| ----------- | ------------------------- | ------------------------ | -------------------------- |\n| **x86_64**  | ✓                         | ✓                        | ✓                          |\n| **i686**    | ✓                         |                          | ✓                          |\n| **armv7**   | ✓                         |                          |                            |\n| **arm64**   | ✓                         |                          | ✓                          |\n| **ppc64le** | ✓                         |                          |                            |\n\n> **NOTE** Austin *might* work with other versions of Python on all the\n> platforms and architectures above. So it is worth giving it a try even if\n> your system is not listed below. If you are looking for support for Python <\n> 3.8, you can use Austin 3.5.\n\nBecause of platform-specific details, Austin usage may vary slightly. Below are\nfurther compatibility details to be aware of.\n\n\n## On Linux\n\nAustin requires the `CAP_SYS_PTRACE` capability to attach to an external\nprocess. This means that you will have to either use ``sudo`` when attaching to\na running Python process or grant the CAP_SYS_PTRACE capability to the Austin\nbinary with, e.g.\n\n~~~ console\nsudo setcap cap_sys_ptrace+ep `which austin`\n~~~\n\nTo use Austin with Docker, the `--cap-add SYS_PTRACE` option needs to be passed\nwhen starting a container.\n\n\n## On MacOS\n\nDue to the **System Integrity Protection**, introduced in **MacOS** with El\nCapitan, and the [Hardened Runtime][hardened runtime], introduced in Mojave,\nAustin cannot profile Python processes that use an executable located in the\n`/bin` folder, or code-signed, even with `sudo`. This is the case for the\nsystem-provided version of Python, and the one installed with the official\ninstallers from [python.org](https://python.org). Other installation methods,\nlike [pyenv][pyenv] or [Anaconda][anaconda] or\n[Homebrew](https://formulae.brew.sh/formula/austin) are known to work with\nAustin, out of the box.\n\nTo use Austin with Python from the official installer, you could remove the\nsignature from the binaries with\n~~~ console\ncodesign --remove-signature /Library/Frameworks/Python.framework/Versions/<M.m>/bin/python3\ncodesign --remove-signature /Library/Frameworks/Python.framework/Versions/<M.m>/Resources/Python.app/Contents/MacOS/Python\n~~~\nAlternatively, you could self-sign the Austin binary with the [Debugging Tool\nEntitlement][dte], as done for debugging tools like GDB. However, this method\nhas not been tested.\n\n> Austin requires the use of `sudo` to work on MacOS. To avoid having to type\n> the password every time you use Austin, consider adding a rule to the\n> `sudoers` file, e.g.\n> ~~~\n> yourusername  ALL = (root) NOPASSWD: /usr/local/bin/austin\n> ~~~\n\n\n# Why Austin\n\nWhen there already are similar tools out there, it's normal to wonder why one\nshould be interested in yet another one. So here is a list of features that\ncurrently distinguish Austin.\n\n- **Written in pure C** Austin is written in pure C code. There are no\n  dependencies on third-party libraries except for the standard C library and\n  the API provided by the Operating System.\n\n- **Just a sampler** Austin is just a frame stack sampler. It looks into a\n  running Python application at regular intervals of time and dumps whatever\n  frame stack it finds. The samples can then be analysed at a later time so that\n  Austin can sample at rates higher than other non-C alternatives that perform\n  some aggregations at run-time.\n\n- **Simple output, powerful tools** Austin uses the collapsed stack format of\n  FlameGraph that is easy to parse. You can then go and build your own tool to\n  analyse Austin's output. You could even make a _player_ that replays the\n  application execution in slow motion, so that you can see what has happened in\n  temporal order.\n\n- **Small size** Austin compiles to a single binary executable of just a bunch\nof KB.\n\n- **Easy to maintain** Occasionally, the Python C API changes and Austin will\nneed to be adjusted to new releases. However, given that Austin, like CPython,\nis written in C, implementing the new changes is rather straight-forward.\n\n\n# Examples\n\nThe following flame graph has been obtained with the command\n\n~~~ console\naustin -i 1ms ./test.py | sed '/^#/d' | ./flamegraph.pl --countname=μs > test.svg\n~~~\n\nwhere the sample `test.py` script has the execute permission and the following\ncontent\n\n~~~ python\n#!/usr/bin/env python3\n\nimport dis\n\nfor i in range(1000):\n    dis.dis(dis.dis)\n~~~\n\n<object data=\"art/dis_fg.svg\" type=\"image/svg+xml\" width=\"100%\" >\n  <img src=\"art/dis_fg.svg\" style=\"width:100%;\"/>\n</object>\n\nTo profile Apache2 WSGI application, one can attach Austin to the web server\nwith\n\n~~~ console\naustin -Cp `pgrep apache2 | head -n 1`\n~~~\n\nAny child processes will be automatically detected as they are created and\nAustin will sample them too.\n\n\n## IDE Extensions\n\nIt is easy to write your own extension for your favourite text editor. This, for\nexample, is a demo of a [Visual Studio Code] extension that highlights the most\nhit lines of code straight into the editor\n\n<p align=\"center\">\n  <img src=\"art/vscode-demo.gif\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\n\n## Austin TUI\n\nThe [Austin TUI] is a text-based user interface for Austin that gives you a\ntop-like view of what is currently running inside a Python application. It is\nmost useful for scripts that have long-running procedures as you can see where\nexecution is at without tracing instructions in your code. You can also save the\ncollected data from within the TUI and feed it to Flame Graph for visualisation,\nor convert it to the [pprof] format.\n\nIf you want to give it a go you can install it using `pip` with\n\n~~~ console\npip install austin-tui --upgrade\n~~~\n\nand run it with\n\n~~~ console\naustin-tui [OPTION...] command [ARG...]\n~~~\n\nwith the same command line as Austin. Please note that the `austin` binary\nshould be available from within the `PATH` environment variable in order for the\nTUI to work.\n\n> The TUI is based on `python-curses`. The version included with the standard\n> Windows installations of Python is broken so it won't work out of the box. A\n> solution is to install the wheel of the port to Windows from\n> [this](https://www.lfd.uci.edu/~gohlke/pythonlibs/#curses) page. Wheel files\n> can be installed directly with `pip`, as described in the\n> [linked](https://pip.pypa.io/en/latest/user_guide/#installing-from-wheels)\n> page.\n\n<!-- ![austin-tui thread navigation](art/austin-tui_threads_nav.gif) -->\n<p align=\"center\">\n  <img src=\"art/austin-tui.gif\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\n\n## Austin Web\n\n[Austin Web] is a web application that wraps around Austin. At its core, Austin\nWeb is based on [d3-flame-graph] to display a _live_ flame graph in the browser,\nthat refreshes every 3 seconds with newly collected samples. Austin Web can also\nbe used for _remote_ profiling by setting the `--host` and `--port` options.\n\nIf you want to give it a go you can install it using `pip` with\n\n~~~ console\npip install austin-web --upgrade\n~~~\n\nand run it with\n\n~~~ console\naustin-web [OPTION...] command [ARG...]\n~~~\n\nwith the same command line as Austin. This starts a simple HTTP server that\nserves on `localhost` by default. When no explicit port is given, Austin Web\nwill use an ephemeral one.\n\nPlease note that the `austin` binary should be available from within the `PATH`\nenvironment variable in order for Austin Web to work.\n\n<p align=\"center\">\n  <img src=\"art/austin-web.gif\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\n\n## Speedscope\n\nAustin output is now supported by [Speedscope]. However, the [`austin-python`]\nlibrary comes with format conversion tools that allow converting the output from\nAustin to the Speedscope JSON format.\n\nIf you want to give it a go you can install it using `pip` with\n\n~~~ console\npip install austin-python --upgrade\n~~~\n\nand run it with\n\n~~~ console\naustin2speedscope [-h] [--indent INDENT] [-V] input output\n~~~\n\nwhere `input` is a file containing the output from Austin and `output` is the\nname of the JSON file to use to save the result of the conversion, ready to be\nused on [Speedscope].\n\n<p align=\"center\">\n  <img src=\"art/speedscope.png\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\n## Google pprof\n\nAustin's format can also be converted to the Google pprof format using the\n`austin2pprof` utility that comes with [`austin-python`]. If you want to give it\na go you can install it using `pip` with\n\n~~~ console\npip install austin-python --upgrade\n~~~\n\nand run it with\n\n~~~ console\naustin2pprof [-h] [-V] input output\n~~~\n\nwhere `input` is a file containing the output from Austin and `output` is the\nname of the protobuf file to use to save the result of the conversion, ready to\nbe used with [Google's pprof tools][pprof].\n\n\n# Contribute\n\nIf you like Austin and you find it useful, there are ways for you to contribute.\n\nIf you want to help with the development, then have a look at the open issues\nand have a look at the [contributing guidelines](CONTRIBUTING.md) before you\nopen a pull request.\n\nYou can also contribute to the development of the Austin by becoming a sponsor\nand/or by [buying me a coffee](https://www.buymeacoffee.com/Q9C1Hnm28) on BMC or\nby chipping in a few pennies on [PayPal.Me](https://www.paypal.me/gtornetta/1).\n\n<p align=\"center\">\n  <a href=\"https://www.buymeacoffee.com/Q9C1Hnm28\"\n     target=\"_blank\">\n  <img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\"\n       alt=\"Buy Me A Coffee\" />\n  </a>\n</p>\n\n\n----\n\n<p align=\"center\">\n  <a href=\"https://twitter.com/AustinSampler\">\n    Follow <img src=\"art/austin_logo.svg\" height=\"20px\" /> on <img src=\"https://upload.wikimedia.org/wikipedia/en/thumb/9/9f/Twitter_bird_logo_2012.svg/1024px-Twitter_bird_logo_2012.svg.png\" height=\"18px\" alt=\"Twitter\" />\n  </a>\n</p>\n\n\n[anaconda]: https://www.anaconda.com/\n[`austin-python`]: https://github.com/P403n1x87/austin-python\n[Austin TUI]: https://github.com/P403n1x87/austin-tui\n[Austin Web]: https://github.com/P403n1x87/austin-web\n[Chocolatey]: https://chocolatey.org/\n[Conda Forge]: https://anaconda.org/conda-forge/austin\n[d3-flame-graph]: https://github.com/spiermar/d3-flame-graph\n[dte]: https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_security_cs_debugger\n[FlameGraph]: https://github.com/brendangregg/FlameGraph\n[hardened runtime]: https://developer.apple.com/documentation/security/hardened_runtime\n[Homebrew]: https://formulae.brew.sh/formula/austin\n[latest release]: https://github.com/P403n1x87/austin/releases/latest\n[MOJO]: https://github.com/P403n1x87/austin/wiki/The-MOJO-file-format\n[pprof]: https://github.com/google/pprof\n[pyenv]: https://github.com/pyenv/pyenv\n[pypi]: https://pypi.org/project/austin-dist/\n[releases]: https://github.com/P403n1x87/austin/releases\n[Scoop]: https://scoop.sh/\n[Speedscope]: https://speedscope.app\n[Visual Studio Code]: https://marketplace.visualstudio.com/items?itemName=p403n1x87.austin-vscode\n[Wiki]: https://github.com/P403n1x87/austin/wiki\n"
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 2.8251953125,
          "content": "#                                               -*- Autoconf -*-\n# Process this file with autoconf to produce a configure script.\n\nAC_PREREQ([2.69])\n# [[[cog\n# from scripts.utils import get_current_version_from_changelog as version\n# print(f\"AC_INIT([austin], [{version()}], [https://github.com/p403n1x87/austin/issues])\")\n# ]]]\nAC_INIT([austin], [3.7.0], [https://github.com/p403n1x87/austin/issues])\n# [[[end]]]\nAC_CONFIG_SRCDIR([config.h.in])\nAC_CONFIG_HEADERS([config.h])\nAM_INIT_AUTOMAKE\n: ${CFLAGS=\"\"}\n# Checks for programs.\nAC_PROG_CC_C99\nAC_PROG_CPP\n\n# Use the C language and compiler for the following checks\nAC_LANG([C])\n\n# Checks for libraries.\nAC_CHECK_HEADER(libunwind-ptrace.h, [\n    AM_CONDITIONAL(BUILD_AUSTINP, true)\n    AUSTINP_CFLAGS=\"-DAUSTINP -fPIC\"\n    AUSTINP_LDADD=\"-l:libunwind-ptrace.a -l:liblzma.a -l:libunwind-generic.a -l:libunwind.a\"\n    echo \"including build of austinp\"\n], [\n    AM_CONDITIONAL(BUILD_AUSTINP, false)\n    echo \"not building austinp: missing libunwind\"\n])\nAC_CHECK_LIB(bfd, bfd_openr, [\n    AC_DEFINE([HAVE_BFD], [1], [\"Compile with BFD support\"])\n    AUSTINP_CFLAGS+=\" -DHAVE_BFD\"\n    AUSTINP_LDADD+=\" -l:libbfd.a -l:libz.a\"\n    echo \"enabling symbol resolution support for austinp\"\n], [\n    echo \"austinp will be built without symbol resolution support: missing libbfd\"\n])\nAC_CHECK_LIB(iberty, bfd_demangle, [\n    AC_DEFINE([HAVE_LIBERTY], [1], [\"Compile with C++ name demangling support\"])\n    AUSTINP_CFLAGS+=\" -DHAVE_LIBERTY\"\n    AUSTINP_LDADD+=\" -l:libiberty.a\"\n    echo \"enabling C++ name demangling support for austinp\"\n], [\n    echo \"austinp will be built without C++ names demangling support: missing libiberty\"\n], [\n    -lbfd\n])\nAUSTINP_LDADD+=\" -ldl\"\n\nAC_SUBST(AUSTINP_CFLAGS, [$AUSTINP_CFLAGS])\nAC_SUBST(AUSTINP_LDADD, [$AUSTINP_LDADD])\n\n# Checks for header files.\nAC_HEADER_STDC\nAC_CHECK_HEADERS([stddef.h stdlib.h string.h syslog.h unistd.h stdio.h])\n\n# Checks for typedefs, structures, and compiler characteristics.\nAC_TYPE_PID_T\nAC_TYPE_SSIZE_T\n\n# Checks for library functions.\nAC_FUNC_FORK\nAC_FUNC_MALLOC\nAC_FUNC_REALLOC\nAC_CHECK_FUNCS([strstr])\n\n# Coverage\nAC_ARG_ENABLE([coverage], [\n  --enable-coverage    Turn on coverage], [\ncase \"${enableval}\" in\n    yes) coverage=true ;;\n    no)  coverage=false ;;\n    *) AC_MSG_ERROR([bad value ${enableval} for --enable-coverage]) ;;\nesac], [coverage=false])\n\nAM_CONDITIONAL([COVERAGE], [test x$coverage = xtrue])\n\n# Debug symbols\nAC_ARG_ENABLE([debug-symbols], [\n  --enable-debug-symbols    Include debug symbols], [\ncase \"${enableval}\" in\n    yes)\n        debugsymbols=true\n        AUSTINP_LDADD+=\" -lm\"\n        ;;\n    no)  debugsymbols=false ;;\n    *) AC_MSG_ERROR([bad value ${enableval} for --enable-debug-symbols]) ;;\nesac], [debugsymbols=false])\n\nAM_CONDITIONAL([DEBUG_SYMBOLS], [test x$debugsymbols = xtrue])\n\nAC_CONFIG_FILES([Makefile\n                 src/Makefile])\nAC_OUTPUT\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}