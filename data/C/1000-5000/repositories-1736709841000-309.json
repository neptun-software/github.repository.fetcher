{
  "metadata": {
    "timestamp": 1736709841000,
    "page": 309,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "axboe/liburing",
      "stars": 2961,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.708984375,
          "content": "*.rej\n*.orig\n*~\n/*.patch\n\n*.d\n*.o\n*.o[ls]\n\n/src/liburing.a\n/src/liburing.so*\n/src/liburing-ffi.a\n/src/liburing-ffi.so*\n/src/include/liburing/compat.h\n/src/include/liburing/io_uring_version.h\n\n/examples/io_uring-close-test\n/examples/io_uring-cp\n/examples/io_uring-test\n/examples/io_uring-udp\n/examples/link-cp\n/examples/napi-busy-poll-client\n/examples/napi-busy-poll-server\n/examples/ucontext-cp\n/examples/poll-bench\n/examples/proxy\n/examples/send-zerocopy\n/examples/rsrc-update-bench\n/examples/kdigest\n/examples/reg-wait\n\n/test/*.t\n/test/*.dmesg\n/test/output/\n\n# Clang's compilation database file and directory.\n/.cache\n/compile_commands.json\n\nconfig-host.h\nconfig-host.mak\nconfig.log\n\nliburing.pc\nliburing-ffi.pc\n\ncscope.out\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 5.4951171875,
          "content": "liburing-2.9 release\n\n- Add support for ring resizing\n- Add support for registered waits\n- Test additions and improvements\n- Fix bug with certain ring setups with SQE128 set not fully closing\n  the ring after io_uring_queue_exit(3) had been called.\n- Various man page fixes and updates\n\nliburing-2.8 release\n\n- Add support for incrementally/partially consumed provided buffers,\n  usable with the provided buffer ring support.\n- Add support for foo_and_wait_min_timeout(), where it's possible to\n  define a minimum timeout for waiting to get batches of completions,\n  but if that fails, extend for a longer timeout without having any\n  extra context switches.\n- Add support for using different clock sources for completion waiting.\n- Great increase coverage of test cases, test case improvements and\n  fixes.\n- Man page updates\n- Don't leak _GNU_SOURCE via pkb-config --cflags\n- Support for address sanitizer\n- Add examples/kdigest sample program\n- Add discard helper, test, and man page\n\nliburing-2.7 release\n\n- Man page updates\n- Sync with kernel 6.10\n\t- send/recv bundle support\n\t- accept nowait and CQE_F_MORE\n- Add and update test cases\n- Fix io_uring_queue_init_mem() returning a value that was too small,\n  potentially causing memory corruption in userspace by overwriting\n  64 bytes beyond the returned value. Also add test case for that.\n- Add 64-bit length variants of io_uring_prep_{m,f}advise()\n- Add BIND/LISTEN support and helpers / man pages\n- Add io_uring_enable_rings.3 man page\n- Fix bug in io_uring_prep_read_multishot()\n- Fixup bundle test cases\n- Add fixed-hugepage test case\n- Fix io_uring_prep_fixed_fd_install.3 man page\n- Note 'len' == 0 requirement in io_uring_prep_send.3 man page\n- Fix some test cases for skipping on older kernels\n\nliburing-2.6 release\n\n- Add getsockopt and setsockopt socket commands\n- Add test cases to test/hardlink\n- Man page fixes\n- Add futex support, and test cases\n- Add waitid support, and test cases\n- Add read multishot, and test cases\n- Add support for IORING_SETUP_NO_SQARRAY\n- Use IORING_SETUP_NO_SQARRAY as the default\n- Add support for IORING_OP_FIXED_FD_INSTALL\n- Add io_uring_prep_fixed_fd_install() helper\n- Support for napi busy polling\n- Improve/add test cases\n- Man page fixes\n- Add sample 'proxy' example\n\nliburing-2.5 release\n\n- Add support for io_uring_prep_cmd_sock()\n- Add support for application allocated ring memory, for placing rings\n  in huge mem. Available through io_uring_queue_init_mem().\n- Add support for registered ring fds\n- Various documentation updates\n- Various fixes\n\nliburing-2.4 release\n\n- Add io_uring_{major,minor,check}_version() functions.\n- Add IO_URING_{MAJOR,MINOR,CHECK}_VERSION() macros.\n- FFI support (for non-C/C++ languages integration).\n- Add io_uring_prep_msg_ring_cqe_flags() function.\n- Deprecate --nolibc configure option.\n- CONFIG_NOLIBC is always enabled on x86-64, x86, and aarch64.\n- Add support for IORING_REGISTER_USE_REGISTERED_RING and use if available.\n- Add io_uring_close_ring_fd() function.\n- Add io_uring_prep_msg_ring_fd_alloc function.\n- Add io_uring_free_buf_ring() and io_uring_setup_buf_ring() functions.\n- Ensure that io_uring_prep_accept_direct(), io_uring_prep_openat_direct(),\n  io_uring_prep_openat2_direct(), io_uring_prep_msg_ring_fd(), and\n  io_uring_prep_socket_direct() factor in being called with\n  IORING_FILE_INDEX_ALLOC for allocating a direct descriptor.\n- Add io_uring_prep_sendto() function.\n- Add io_uring_prep_cmd_sock() function.\n\nliburing-2.3 release\n\n- Support non-libc build for aarch64.\n- Add io_uring_{enter,enter2,register,setup} syscall functions.\n- Add sync cancel interface, io_uring_register_sync_cancel().\n- Fix return value of io_uring_submit_and_wait_timeout() to match the\n  man page.\n- Improvements to the regression tests\n- Add support and test case for passthrough IO\n- Add recv and recvmsg multishot helpers and support\n- Add documentation and support for IORING_SETUP_DEFER_TASKRUN\n- Fix potential missing kernel entry with IORING_SETUP_IOPOLL\n- Add support and documentation for zero-copy network transmit\n- Various optimizations\n- Many cleanups\n- Many man page additions and updates\n\nliburing-2.2 release\n\n- Support non-libc builds.\n- Optimized syscall handling for x86-64/x86/aarch64.\n- Enable non-lib function calls for fast path functions.\n- Add support for multishot accept.\n- io_uring_register_files() will set RLIMIT_NOFILE if necessary.\n- Add support for registered ring fds, io_uring_register_ring_fd(),\n  reducing the overhead of an io_uring_enter() system call.\n- Add support for the message ring opcode.\n- Add support for newer request cancelation features.\n- Add support for IORING_SETUP_COOP_TASKRUN, which can help reduce the\n  overhead of io_uring in general. Most applications should set this flag,\n  see the io_uring_setup.2 man page for details.\n- Add support for registering a sparse buffer and file set.\n- Add support for a new buffer provide scheme, see\n  io_uring_register_buf_ring.3 for details.\n- Add io_uring_submit_and_wait_timeout() for submitting IO and waiting\n  for completions with a timeout.\n- Add io_uring_prep_{read,write}v2 prep helpers.\n- Add io_uring_prep_close_direct() helper.\n- Add support for SQE128 and CQE32, which are doubly sized SQE and CQE\n  rings. This is needed for some cases of the new IORING_OP_URING_CMD,\n  notably for NVMe passthrough.\n- ~5500 lines of man page additions, including adding ~90 new man pages.\n- Synced with the 5.19 kernel release, supporting all the features of\n  5.19 and earlier.\n- 24 new regression test cases, and ~7000 lines of new tests in general.\n- General optimizations and fixes.\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.23828125,
          "content": "cff-version: 1.2.0\npreferred-citation:\ntype: software\nauthors:\n  - family-names: \"Axboe\"\n    given-names: \"Jens\"\n    email: axboe@kernel.dk\ntitle: \"liburing library for io_uring\"\nyear: 2022\nurl: \"https://github.com/axboe/liburing\"\nlicence: MIT\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.8623046875,
          "content": "Introduction\n============\n\nliburing welcomes contributions, whether they be bug fixes, features, or\ndocumentation additions/updates. However, we do have some rules in place\nto govern the sanity of the project, and all contributions should follow\nthe guidelines in this document. The main reasons for the rules are:\n\n1) Keep the code consistent\n2) Keep the git repository consistent\n3) Maintain bisectability\n\nCoding style\n============\n\nGenerally, all the code in liburing should follow the same style. A few\nknown exceptions exist, like syzbot test cases that got committed rather\nthan re-writing them in a saner format. Any change you make, please\nfollow the style of the code around you.\n\nCommit format\n=============\n\nEach commit should do one thing, and one thing only. If you find yourself,\nin the commit message, adding phrases like \"Also do [...]\" or \"While in\nhere [...]\", then that's a sign that the change should have been split\ninto multiple commits. If your change includes some refactoring of code to\nmake your change possible, then that refactoring should be a separate\ncommit, done first. That means this preparatory commit won't have any\nfunctional changes, and hence should be a no-op. It also means that your\nmain commit, with the change that you actually care about, will be smaller\nand easier to review.\n\nEach commit must stand on its own in terms of what it provides, and how it\nworks. Lots of changes are just a single commit, but for something a bit\nmore involved, it's not uncommon to have a pull request contain multiple\ncommits. Make each commit as simple as possible, and not any simpler. We'd\nmuch rather see 10 simple commits than 2 more complicated ones. If you\nstumble across something that needs fixing while making an unrelated\nchange, then please make that change as a separate commit, explaining why\nit's being made.\n\nEach commit in a series must be buildable, it's not enough that the end\nresult is buildable. See reason 3 in the introduction for why that's the\ncase.\n\nNo fixup commits! Sometimes people post a change and errors are pointed\nout in the commit, and the author then does a followup fix for that\nerror. This isn't acceptable, please squash fixup commits into the\ncommit that introduced the problem in the first place. This is done by\namending the fix into the original commit that caused the issue. You can\ndo that with git rebase -i <sha> and arrange the commit order such that\nthe fixup is right after the original commit, and then use 's' (for\nsquash) to squash the fixup into the original commit. Don't forget to\nedit the commit message while doing that, as git will combine the two\ncommit messages into one. Or you can do it manually. Once done, force\npush your rewritten git history. See reasons 1-3 in the introduction\nseries for why that is.\n\nCommit message\n==============\n\nA good commit explains the WHY of a commit - explain the reason for this\ncommit to exist. Don't explain what the code in commit does, that should\nbe readily apparent from just reading the code. If that isn't the case,\nthen a comment in the code is going to be more useful than a lengthy\nexplanation in the commit message. liburing commits use the following\nformat:\n\nTitle\n\nBody of commit\n\nSigned-off-by: ```My Identity <my@email.com>```\n\nThat is, a descriptive title on the first line, then an empty line, then\nthe body of the commit message, then an empty line, and finally an SOB\ntag. The signed-off-by exists to provide proof of origin, see the\n[DCO](https://developercertificate.org/).\n\nExample commit:\n\n```\ncommit 0fe5c09195c0918f89582dd6ff098a58a0bdf62a\nAuthor: Jens Axboe <axboe@kernel.dk>\nDate:   Fri Sep 6 15:54:04 2024 -0600\n\n    configure: fix ublk_cmd header check\n    \n    The previous commit is mixing private structures and defines with public\n    uapi ones. Testing for UBLK_U_CMD_START_DEV is fine, CTRL_CMD_HAS_DATA\n    is not. And struct ublk_ctrl_cmd_data is not a public struct.\n    \n    Fixes: 83bc535a3118 (\"configure: don't enable ublk if modern commands not available\")\n    Signed-off-by: Jens Axboe <axboe@kernel.dk>\n```\n\nSince this change is pretty trivial, a huge explanation need not be given\nas to the reasonings for the change. However, for more complicated\nchanges, better reasonings should be given.\n\nA Fixes line can be added if this commit fixes an issue in a previous\ncommit. That kind of meta data can be useful down the line for finding\ndependencies between commits. Adding the following to your .gitconfig:\n\n```\n[pretty]\n\tfixes = Fixes: %h (\\\"%s\\\")\n```\n\nand running ```git fixes <sha>``` will then generate the correctly\nformatted Fixes line for the commit. Likewise, other meta data can be:\n\nLink: https://somesite/somewhere\n\ncan be useful to link to a discussion around the issue that led to this\ncommit, perhaps a bug report. This can be a GitHub issue as well. If a\ncommit closes/solves a GitHub issue, than:\n\nCloses: https://github.com/axboe/liburing/issues/XXXX\n\ncan also be used.\n\nEach commit message should be formatted so each full line is 72-74 chars\nwide. For many of us, GitHub is not the primary location, and git log is\noften used in a terminal to browse the repo. Breaking lines at 72-74\ncharacters retains readability in an xterm/terminal.\n\nPull Requests\n=============\n\nThe git repository itself is the canonical location for information. It's\nquite fine to provide a lengthy explanation for a pull request on GitHub,\nhowever please ensure that this doesn't come at the expense of the commit\nmessages themselves being lacking. The commit messages should stand on\ntheir own and contain everything that you'd otherwise put in the PR\nmessage. If you've worked on projects that send patches before, consider\nthe PR message similar to the cover letter for a series of patches.\n\nMost contributors seem to use GH for sending patches, which is fine. If\nyou prefer using email, then patches can also be sent to the io_uring\nmailing list: io-uring@vger.kernel.org.\n\nliburing doesn't squash/rebase-on-merge, or other heinous practices\nsometimes seen elsewhere. Whatever sha your commit has in your tree is\nwhat it'll have in the upstream tree. Patches are applied directly, and\npull requests are merged with a merge commit. If meta data needs to go\ninto the merge commit, then it will go into the merge commit message.\nThis means that you don't need to continually rebase your changes on top\nof the master branch.\n\nTesting changes\n===============\n\nYou should ALWAYS test your changes, no matter how trivial or obviously\ncorrect they may seem. Nobody is infallible, and making mistakes is only\nhuman.\n\nliburing contains a wide variety of functional tests. If you make changes\nto liburing, then you should run the test cases. This is done by building\nthe repo and running ```make runtests```. Note that some of the liburing\ntests test for defects in older kernels, and hence it's possible that they\nwill crash on an outdated kernel that doesn't contain fixes from the\nstable kernel tree. If in doubt, building and running the tests in a vm is\nencouraged.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 25.8994140625,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "COPYING.GPL",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.025390625,
          "content": "Copyright 2020 Jens Axboe\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.697265625,
          "content": "include Makefile.common\n\nRPMBUILD=$(shell `which rpmbuild >&/dev/null` && echo \"rpmbuild\" || echo \"rpm\")\n\nINSTALL=install\n\ndefault: all\n\nall:\n\t@$(MAKE) -C src\n\t@$(MAKE) -C test\n\t@$(MAKE) -C examples\n\nlibrary:\n\t@$(MAKE) -C src\n\n.PHONY: all install default clean test library\n.PHONY: FORCE cscope\n\nruntests: all\n\t@$(MAKE) -C test runtests\nruntests-loop: all\n\t@$(MAKE) -C test runtests-loop\nruntests-parallel: all\n\t@$(MAKE) -C test runtests-parallel\n\nconfig-host.mak: configure\n\t+@if [ ! -e \"$@\" ]; then\t\t\t\t\\\n\t  echo \"Running configure ...\";\t\t\t\t\\\n\t  ./configure;\t\t\t\t\t\t\\\n\telse\t\t\t\t\t\t\t\\\n\t  echo \"$@ is out-of-date, running configure\";\t\t\\\n\t  sed -n \"/.*Configured with/s/[^:]*: //p\" \"$@\" | sh;\t\\\n\tfi\n\nifneq ($(MAKECMDGOALS),clean)\ninclude config-host.mak\nendif\n\n%.pc: %.pc.in config-host.mak $(SPECFILE)\n\tsed -e \"s%@prefix@%$(prefix)%g\" \\\n\t    -e \"s%@libdir@%$(libdir)%g\" \\\n\t    -e \"s%@includedir@%$(includedir)%g\" \\\n\t    -e \"s%@NAME@%$(NAME)%g\" \\\n\t    -e \"s%@VERSION@%$(VERSION)%g\" \\\n\t    $< >$@\n\ninstall: $(NAME).pc $(NAME)-ffi.pc\n\t@$(MAKE) -C src install prefix=$(DESTDIR)$(prefix) \\\n\t\tincludedir=$(DESTDIR)$(includedir) \\\n\t\tlibdir=$(DESTDIR)$(libdir) \\\n\t\tlibdevdir=$(DESTDIR)$(libdevdir) \\\n\t\trelativelibdir=$(relativelibdir)\n\t$(INSTALL) -D -m 644 $(NAME).pc $(DESTDIR)$(libdevdir)/pkgconfig/$(NAME).pc\n\t$(INSTALL) -D -m 644 $(NAME)-ffi.pc $(DESTDIR)$(libdevdir)/pkgconfig/$(NAME)-ffi.pc\n\t$(INSTALL) -m 755 -d $(DESTDIR)$(mandir)/man2\n\t$(INSTALL) -m 644 man/*.2 $(DESTDIR)$(mandir)/man2\n\t$(INSTALL) -m 755 -d $(DESTDIR)$(mandir)/man3\n\t$(INSTALL) -m 644 man/*.3 $(DESTDIR)$(mandir)/man3\n\t$(INSTALL) -m 755 -d $(DESTDIR)$(mandir)/man7\n\t$(INSTALL) -m 644 man/*.7 $(DESTDIR)$(mandir)/man7\n\nuninstall:\n\t@$(MAKE) -C src uninstall prefix=$(DESTDIR)$(prefix) datadir=$(DESTDIR)$(datadir)\n\t@rm -f $(DESTDIR)$(libdevdir)/pkgconfig/$(NAME).pc\n\t@rm -f $(DESTDIR)$(libdevdir)/pkgconfig/$(NAME)-ffi.pc\n\t@rm -rf $(DESTDIR)$(mandir)/man2/io_uring*.2\n\t@rm -rf $(DESTDIR)$(mandir)/man3/io_uring*.3\n\t@rm -rf $(DESTDIR)$(mandir)/man7/io_uring*.7\n\ninstall-tests:\n\t@$(MAKE) -C test install prefix=$(DESTDIR)$(prefix) datadir=$(DESTDIR)$(datadir)\n\nuninstall-tests:\n\t@$(MAKE) -C test uninstall prefix=$(DESTDIR)$(prefix) datadir=$(DESTDIR)$(datadir)\n\nclean:\n\t@rm -f config-host.mak config-host.h cscope.out $(NAME).pc $(NAME)-ffi.pc test/*.dmesg\n\t@$(MAKE) -C src clean\n\t@$(MAKE) -C test clean\n\t@$(MAKE) -C examples clean\n\ncscope:\n\t@cscope -b -R\n\ntag-archive:\n\t@git tag $(TAG)\n\ncreate-archive:\n\t@git archive --prefix=$(NAME)-$(VERSION)/ -o $(NAME)-$(VERSION).tar.gz $(TAG)\n\t@echo \"The final archive is ./$(NAME)-$(VERSION).tar.gz.\"\n\narchive: clean tag-archive create-archive\n\nsrpm: create-archive\n\t$(RPMBUILD) --define \"_sourcedir `pwd`\" --define \"_srcrpmdir `pwd`\" --nodeps -bs $(SPECFILE)\n"
        },
        {
          "name": "Makefile.common",
          "type": "blob",
          "size": 0.3017578125,
          "content": "TOP := $(dir $(CURDIR)/$(word $(words $(MAKEFILE_LIST)),$(MAKEFILE_LIST)))\nNAME=liburing\nSPECFILE=$(TOP)/$(NAME).spec\nVERSION=$(shell awk '/Version:/ { print $$2 }' $(SPECFILE))\nVERSION_MAJOR=$(shell echo $(VERSION) | cut -d. -f1)\nVERSION_MINOR=$(shell echo $(VERSION) | cut -d. -f2)\nTAG = $(NAME)-$(VERSION)\n"
        },
        {
          "name": "Makefile.quiet",
          "type": "blob",
          "size": 0.2314453125,
          "content": "ifneq ($(findstring $(MAKEFLAGS),s),s)\nifndef V\n\tQUIET_CC\t= @echo '    '   CC $@;\n\tQUIET_CXX\t= @echo '    '  CXX $@;\n\tQUIET_LINK\t= @echo '  '   LINK $@;\n\tQUIET_AR\t= @echo '    '   AR $@;\n\tQUIET_RANLIB\t= @echo '' RANLIB $@;\nendif\nendif\n\n\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 3.056640625,
          "content": "liburing\n--------\n\nThis is the io_uring library, liburing. liburing provides helpers to setup and\nteardown io_uring instances, and also a simplified interface for\napplications that don't need (or want) to deal with the full kernel\nside implementation.\n\nFor more info on io_uring, please see:\n\nhttps://kernel.dk/io_uring.pdf\n\nSubscribe to io-uring@vger.kernel.org for io_uring related discussions\nand development for both kernel and userspace. The list is archived here:\n\nhttps://lore.kernel.org/io-uring/\n\n\nkernel version dependency\n--------------------------\n\nliburing itself is not tied to any specific kernel release, and hence it's\npossible to use the newest liburing release even on older kernels (and vice\nversa). Newer features may only be available on more recent kernels,\nobviously.\n\n\nulimit settings\n---------------\n\nio_uring accounts memory it needs under the rlimit memlocked option, which\ncan be quite low on some setups (64K). The default is usually enough for\nmost use cases, but bigger rings or things like registered buffers deplete\nit quickly. root isn't under this restriction, but regular users are. Going\ninto detail on how to bump the limit on various systems is beyond the scope\nof this little blurb, but check /etc/security/limits.conf for user specific\nsettings, or /etc/systemd/user.conf and /etc/systemd/system.conf for systemd\nsetups. This affects 5.11 and earlier, new kernels are less dependent\non RLIMIT_MEMLOCK as it is only used for registering buffers.\n\n\nRegressions tests\n-----------------\n\nThe bulk of liburing is actually regression/unit tests for both liburing and\nthe kernel io_uring support. Please note that this suite isn't expected to\npass on older kernels, and may even crash or hang older kernels!\n\n\nBuilding liburing\n-----------------\n\n    #\n    # Prepare build config (optional).\n    #\n    #  --cc  specifies the C   compiler.\n    #  --cxx specifies the C++ compiler.\n    #\n    ./configure --cc=gcc --cxx=g++;\n\n    #\n    # Build liburing.\n    #\n    make -j$(nproc);\n\n    #\n    # Build liburing.pc\n    #\n    make liburing.pc\n\n    #\n    # Install liburing (headers, shared/static libs, and manpage).\n    #\n    sudo make install;\n\nSee './configure --help' for more information about build config options.\n\n\nFFI support\n-----------\n\nBy default, the build results in 4 lib files:\n\n    2 shared libs:\n\n        liburing.so\n        liburing-ffi.so\n\n    2 static libs:\n\n        liburing.a\n        liburing-ffi.a\n\nLanguages and applications that can't use 'static inline' functions in\nliburing.h should use the FFI variants.\n\nliburing's main public interface lives in liburing.h as 'static inline'\nfunctions. Users wishing to consume liburing purely as a binary dependency\nshould link against liburing-ffi. It contains definitions for every 'static\ninline' function.\n\n\nLicense\n-------\n\nAll software contained within this repo is dual licensed LGPL and MIT, see\nCOPYING and LICENSE, except for a header coming from the kernel which is\ndual licensed GPL with a Linux-syscall-note exception and MIT, see\nCOPYING.GPL and <https://spdx.org/licenses/Linux-syscall-note.html>.\n\nJens Axboe 2022-05-19\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.201171875,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nPlease report any security issue to axboe@kernel.dk where the issue will be triaged appropriately.\nThank you in advance for helping to keep liburing secure.\n"
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 15.3857421875,
          "content": "#!/bin/sh\n\nset -e\n\ncc=${CC:-gcc}\ncxx=${CXX:-g++}\n\nfor opt do\n  optarg=$(expr \"x$opt\" : 'x[^=]*=\\(.*\\)' || true)\n  case \"$opt\" in\n  --help|-h) show_help=yes\n  ;;\n  --prefix=*) prefix=\"$(realpath -s $optarg)\"\n  ;;\n  --includedir=*) includedir=\"$optarg\"\n  ;;\n  --libdir=*) libdir=\"$optarg\"\n  ;;\n  --libdevdir=*) libdevdir=\"$optarg\"\n  ;;\n  --mandir=*) mandir=\"$optarg\"\n  ;;\n  --datadir=*) datadir=\"$optarg\"\n  ;;\n  --cc=*) cc=\"$optarg\"\n  ;;\n  --cxx=*) cxx=\"$optarg\"\n  ;;\n  --use-libc) use_libc=yes\n  ;;\n  --enable-sanitizer) use_sanitizer=yes\n  ;;\n  *)\n    echo \"ERROR: unknown option $opt\"\n    echo \"Try '$0 --help' for more information\"\n    exit 1\n  ;;\n  esac\ndone\n\nif test -z \"$prefix\"; then\n  prefix=/usr\nfi\nif test -z \"$includedir\"; then\n  includedir=\"$prefix/include\"\nfi\nif test -z \"$libdir\"; then\n  libdir=\"$prefix/lib\"\nfi\nif test -z \"$libdevdir\"; then\n  libdevdir=\"$prefix/lib\"\nfi\nif test -z \"$mandir\"; then\n  mandir=\"$prefix/man\"\nfi\nif test -z \"$datadir\"; then\n  datadir=\"$prefix/share\"\nfi\n\nif test x\"$libdir\" = x\"$libdevdir\"; then\n  relativelibdir=\"\"\nelse\n  relativelibdir=\"$libdir/\"\nfi\n\nif test \"$show_help\" = \"yes\"; then\ncat <<EOF\n\nUsage: configure [options]\nOptions: [defaults in brackets after descriptions]\n  --help                   print this message\n  --prefix=PATH            install in PATH [$prefix]\n  --includedir=PATH        install headers in PATH [$includedir]\n  --libdir=PATH            install runtime libraries in PATH [$libdir]\n  --libdevdir=PATH         install development libraries in PATH [$libdevdir]\n  --mandir=PATH            install man pages in PATH [$mandir]\n  --datadir=PATH           install shared data in PATH [$datadir]\n  --cc=CMD                 use CMD as the C compiler\n  --cxx=CMD                use CMD as the C++ compiler\n  --use-libc               use libc for liburing (useful for hardening)\n  --enable-sanitizer       compile liburing with the address and undefined behaviour sanitizers. (useful for debugging)\nEOF\nexit 0\nfi\n\nTMP_DIRECTORY=\"$(mktemp -d)\"\nTMPC=\"$TMP_DIRECTORY/liburing-conf.c\"\nTMPC2=\"$TMP_DIRECTORY/liburing-conf-2.c\"\nTMPCXX=\"$TMP_DIRECTORY/liburing-conf-2.cpp\"\nTMPO=\"$TMP_DIRECTORY/liburing-conf.o\"\nTMPE=\"$TMP_DIRECTORY/liburing-conf.exe\"\n\ntouch $TMPC $TMPC2 $TMPCXX $TMPO $TMPE\n\n# NB: do not call \"exit\" in the trap handler; this is buggy with some shells;\n# see <1285349658-3122-1-git-send-email-loic.minier@linaro.org>\ntrap \"rm -rf $TMP_DIRECTORY\" EXIT INT QUIT TERM\n\nrm -rf config.log\n\nconfig_host_mak=\"config-host.mak\"\nconfig_host_h=\"config-host.h\"\n\nrm -rf $config_host_mak\nrm -rf $config_host_h\n\nfatal() {\n  echo $@\n  echo \"Configure failed, check config.log and/or the above output\"\n  rm -rf $config_host_mak\n  rm -rf $config_host_h\n  exit 1\n}\n\n# Print result for each configuration test\nprint_config() {\n  printf \"%-35s%s\\n\" \"$1\" \"$2\"\n}\n\n# Default CFLAGS\nCFLAGS=\"-D_GNU_SOURCE -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -include config-host.h\"\nBUILD_CFLAGS=\"\"\n\n# Print configure header at the top of $config_host_h\necho \"/*\" > $config_host_h\necho \" * Automatically generated by configure - do not modify\" >> $config_host_h\nprintf \" * Configured with:\" >> $config_host_h\nprintf \" * '%s'\" \"$0\" \"$@\" >> $config_host_h\necho \"\" >> $config_host_h\necho \" */\" >> $config_host_h\n\necho \"# Automatically generated by configure - do not modify\" > $config_host_mak\nprintf \"# Configured with:\" >> $config_host_mak\nprintf \" '%s'\" \"$0\" \"$@\" >> $config_host_mak\necho >> $config_host_mak\n\ndo_cxx() {\n    # Run the compiler, capturing its output to the log.\n    echo $cxx \"$@\" >> config.log\n    $cxx \"$@\" >> config.log 2>&1 || return $?\n    return 0\n}\n\ndo_cc() {\n    # Run the compiler, capturing its output to the log.\n    echo $cc \"$@\" >> config.log\n    $cc \"$@\" >> config.log 2>&1 || return $?\n    # Test passed. If this is an --enable-werror build, rerun\n    # the test with -Werror and bail out if it fails. This\n    # makes warning-generating-errors in configure test code\n    # obvious to developers.\n    if test \"$werror\" != \"yes\"; then\n        return 0\n    fi\n    # Don't bother rerunning the compile if we were already using -Werror\n    case \"$*\" in\n        *-Werror*)\n           return 0\n        ;;\n    esac\n    echo $cc -Werror \"$@\" >> config.log\n    $cc -Werror \"$@\" >> config.log 2>&1 && return $?\n    echo \"ERROR: configure test passed without -Werror but failed with -Werror.\"\n    echo \"This is probably a bug in the configure script. The failing command\"\n    echo \"will be at the bottom of config.log.\"\n    fatal \"You can run configure with --disable-werror to bypass this check.\"\n}\n\ncompile_prog() {\n  local_cflags=\"$1\"\n  local_ldflags=\"$2 $LIBS\"\n  echo \"Compiling test case $3\" >> config.log\n  do_cc $CFLAGS $local_cflags -o $TMPE $TMPC $LDFLAGS $local_ldflags\n}\n\ncompile_prog_cxx() {\n  local_cflags=\"$1\"\n  local_ldflags=\"$2 $LIBS\"\n  echo \"Compiling test case $3\" >> config.log\n  do_cxx $CFLAGS $local_cflags -o $TMPE $TMPCXX $LDFLAGS $local_ldflags\n}\n\nhas() {\n  type \"$1\" >/dev/null 2>&1\n}\n\noutput_mak() {\n  echo \"$1=$2\" >> $config_host_mak\n}\n\noutput_sym() {\n  output_mak \"$1\" \"y\"\n  echo \"#define $1\" >> $config_host_h\n}\n\nprint_and_output_mak() {\n  print_config \"$1\" \"$2\"\n  output_mak \"$1\" \"$2\"\n}\nprint_and_output_mak \"prefix\" \"$prefix\"\nprint_and_output_mak \"includedir\" \"$includedir\"\nprint_and_output_mak \"libdir\" \"$libdir\"\nprint_and_output_mak \"libdevdir\" \"$libdevdir\"\nprint_and_output_mak \"relativelibdir\" \"$relativelibdir\"\nprint_and_output_mak \"mandir\" \"$mandir\"\nprint_and_output_mak \"datadir\" \"$datadir\"\n\n####################################################\n# Check for correct compiler runtime library to link with\nlibgcc_link_flag=\"-lgcc\"\nif $cc -print-libgcc-file-name >/dev/null 2>&1; then\n  libgcc_link_flag=\"$($cc $CFLAGS $LDFLAGS -print-libgcc-file-name)\"\nfi\nprint_and_output_mak \"libgcc_link_flag\" \"$libgcc_link_flag\"\n####################################################\n\n##########################################\n# check for compiler -Wstringop-overflow\nstringop_overflow=\"no\"\ncat > $TMPC << EOF\n#include <linux/fs.h>\nint main(int argc, char **argv)\n{\n  return 0;\n}\nEOF\nif compile_prog \"-Werror -Wstringop-overflow=0\" \"\" \"stringop_overflow\"; then\n  stringop_overflow=\"yes\"\nfi\nprint_config \"stringop_overflow\" \"$stringop_overflow\"\n\n##########################################\n# check for compiler -Warryr-bounds\narray_bounds=\"no\"\ncat > $TMPC << EOF\n#include <linux/fs.h>\nint main(int argc, char **argv)\n{\n  return 0;\n}\nEOF\nif compile_prog \"-Werror -Warray-bounds=0\" \"\" \"array_bounds\"; then\n  array_bounds=\"yes\"\nfi\nprint_config \"array_bounds\" \"$array_bounds\"\n\n\n##########################################\n# check for __kernel_rwf_t\n__kernel_rwf_t=\"no\"\ncat > $TMPC << EOF\n#include <linux/fs.h>\nint main(int argc, char **argv)\n{\n  __kernel_rwf_t x;\n  x = 0;\n  return x;\n}\nEOF\nif compile_prog \"\" \"\" \"__kernel_rwf_t\"; then\n  __kernel_rwf_t=\"yes\"\nfi\nprint_config \"__kernel_rwf_t\" \"$__kernel_rwf_t\"\n\n##########################################\n# check for __kernel_timespec\n__kernel_timespec=\"no\"\ncat > $TMPC << EOF\n#include <linux/time.h>\n#include <linux/time_types.h>\nint main(int argc, char **argv)\n{\n  struct __kernel_timespec ts;\n  ts.tv_sec = 0;\n  ts.tv_nsec = 1;\n  return 0;\n}\nEOF\nif compile_prog \"\" \"\" \"__kernel_timespec\"; then\n  __kernel_timespec=\"yes\"\nfi\nprint_config \"__kernel_timespec\" \"$__kernel_timespec\"\n\n##########################################\n# check for open_how\nopen_how=\"no\"\ncat > $TMPC << EOF\n#include <sys/types.h>\n#include <fcntl.h>\n#include <string.h>\n#include <linux/openat2.h>\nint main(int argc, char **argv)\n{\n  struct open_how how;\n  how.flags = 0;\n  how.mode = 0;\n  how.resolve = 0;\n  return 0;\n}\nEOF\nif compile_prog \"\" \"\" \"open_how\"; then\n  open_how=\"yes\"\nfi\nprint_config \"open_how\" \"$open_how\"\n\n##########################################\n# check for statx\nstatx=\"no\"\ncat > $TMPC << EOF\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <unistd.h>\n#include <fcntl.h>\n#include <string.h>\nint main(int argc, char **argv)\n{\n  struct statx x;\n\n  return memset(&x, 0, sizeof(x)) != NULL;\n}\nEOF\nif compile_prog \"\" \"\" \"statx\"; then\n  statx=\"yes\"\nfi\nprint_config \"statx\" \"$statx\"\n\n##########################################\n# check for glibc statx\nglibc_statx=\"no\"\ncat > $TMPC << EOF\n#include <sys/types.h>\n#include <unistd.h>\n#include <fcntl.h>\n#include <string.h>\n#include <sys/stat.h>\nint main(int argc, char **argv)\n{\n  struct statx x;\n\n  return memset(&x, 0, sizeof(x)) != NULL;\n}\nEOF\nif compile_prog \"\" \"\" \"glibc_statx\"; then\n  glibc_statx=\"yes\"\nfi\nprint_config \"glibc_statx\" \"$glibc_statx\"\n\n##########################################\n# check for C++\nhas_cxx=\"no\"\ncat > $TMPCXX << EOF\n#include <iostream>\nint main(int argc, char **argv)\n{\n  std::cout << \"Test\";\n  return 0;\n}\nEOF\nif compile_prog_cxx \"\" \"\" \"C++\"; then\n  has_cxx=\"yes\"\nfi\nprint_config \"C++\" \"$has_cxx\"\n\n##########################################\n# check for ucontext support\nhas_ucontext=\"no\"\ncat > $TMPC << EOF\n#include <ucontext.h>\nint main(int argc, char **argv)\n{\n  ucontext_t ctx;\n  getcontext(&ctx);\n  makecontext(&ctx, 0, 0);\n  return 0;\n}\nEOF\nif compile_prog \"\" \"\" \"has_ucontext\"; then\n  has_ucontext=\"yes\"\nfi\nprint_config \"has_ucontext\" \"$has_ucontext\"\n\n##########################################\n# Check NVME_URING_CMD support\nnvme_uring_cmd=\"no\"\ncat > $TMPC << EOF\n#include <linux/nvme_ioctl.h>\nint main(void)\n{\n  struct nvme_uring_cmd *cmd;\n\n  return sizeof(struct nvme_uring_cmd);\n}\nEOF\nif compile_prog \"\" \"\" \"nvme uring cmd\"; then\n  nvme_uring_cmd=\"yes\"\nfi\nprint_config \"NVMe uring command support\" \"$nvme_uring_cmd\"\n\n##########################################\n# Check futexv support\nfutexv=\"no\"\ncat > $TMPC << EOF\n#include <linux/futex.h>\n#include <unistd.h>\n#include <string.h>\nint main(void)\n{\n  struct futex_waitv fw;\n\n  memset(&fw, FUTEX_32, sizeof(fw));\n\n  return sizeof(struct futex_waitv);\n}\nEOF\nif compile_prog \"\" \"\" \"futexv\"; then\n  futexv=\"yes\"\nfi\nprint_config \"futex waitv support\" \"$futexv\"\n\n##########################################\n# Check block discard cmd support\ndiscard_cmd=\"no\"\ncat > $TMPC << EOF\n#include <linux/blkdev.h>\nint main(void)\n{\n  return BLOCK_URING_CMD_DISCARD;\n}\nEOF\nif compile_prog \"\" \"\" \"discard command\"; then\n  discard_cmd=\"yes\"\nfi\nprint_config \"io_uring discard command support\" \"$discard_cmd\"\n\n##########################################\n# Check idtype_t support\nhas_idtype_t=\"no\"\ncat > $TMPC << EOF\n#include <sys/wait.h>\nint main(void)\n{\n  idtype_t v;\n  return 0;\n}\nEOF\nif compile_prog \"\" \"\" \"idtype_t\"; then\n  has_idtype_t=\"yes\"\nfi\nprint_config \"has_idtype_t\" \"$has_idtype_t\"\n\n#############################################################################\nliburing_nolibc=\"no\"\nif test \"$use_libc\" != \"yes\"; then\n\n  #\n  # Currently, CONFIG_NOLIBC only supports x86-64, x86 (32-bit), aarch64 and riscv64.\n  #\n  cat > $TMPC << EOF\nint main(void){\n#if defined(__x86_64__) || defined(__i386__) || defined(__aarch64__) || (defined(__riscv) && __riscv_xlen == 64)\n  return 0;\n#else\n#error libc is needed\n#endif\n}\nEOF\n\n  if compile_prog \"\" \"\" \"nolibc\"; then\n    liburing_nolibc=\"yes\"\n  fi\nfi\n\nprint_config \"nolibc\" \"$liburing_nolibc\";\n#############################################################################\n\n####################################################\n# Most Android devices don't have sys/fanotify.h\nhas_fanotify=\"no\"\ncat > $TMPC << EOF\n#include <sys/fanotify.h>\nint main(void)\n{\n  return 0;\n}\nEOF\nif compile_prog \"\" \"\" \"fanotify\"; then\n  has_fanotify=\"yes\"\nfi\nprint_config \"has_fanotify\" \"$has_fanotify\"\n####################################################\n\n##########################################\n# check for ublk headers\nublk_header=\"no\"\ncat > $TMPC << EOF\n#include <string.h>\n#include <sys/ioctl.h>\n#include <linux/ublk_cmd.h>\nint main(int argc, char **argv)\n{\n  struct ublksrv_ctrl_cmd cmd = { };\n\n  cmd.addr = UBLK_U_CMD_START_DEV;\n  return cmd.queue_id;\n}\nEOF\nif compile_prog \"\" \"\" \"ublk_header\"; then\n  ublk_header=\"yes\"\nfi\nprint_config \"ublk_header\" \"$ublk_header\"\n\nif test \"$liburing_nolibc\" = \"yes\"; then\n  output_sym \"CONFIG_NOLIBC\"\nfi\nif test \"$__kernel_rwf_t\" = \"yes\"; then\n  output_sym \"CONFIG_HAVE_KERNEL_RWF_T\"\nfi\nif test \"$__kernel_timespec\" = \"yes\"; then\n  output_sym \"CONFIG_HAVE_KERNEL_TIMESPEC\"\nfi\nif test \"$open_how\" = \"yes\"; then\n  output_sym \"CONFIG_HAVE_OPEN_HOW\"\nfi\nif test \"$statx\" = \"yes\"; then\n  output_sym \"CONFIG_HAVE_STATX\"\nfi\nif test \"$glibc_statx\" = \"yes\"; then\n  output_sym \"CONFIG_HAVE_GLIBC_STATX\"\nfi\nif test \"$has_cxx\" = \"yes\"; then\n  output_sym \"CONFIG_HAVE_CXX\"\nfi\nif test \"$has_ucontext\" = \"yes\"; then\n  output_sym \"CONFIG_HAVE_UCONTEXT\"\nfi\nif test \"$stringop_overflow\" = \"yes\"; then\n  output_sym \"CONFIG_HAVE_STRINGOP_OVERFLOW\"\nfi\nif test \"$array_bounds\" = \"yes\"; then\n  output_sym \"CONFIG_HAVE_ARRAY_BOUNDS\"\nfi\nif test \"$nvme_uring_cmd\" = \"yes\"; then\n  output_sym \"CONFIG_HAVE_NVME_URING\"\nfi\nif test \"$has_fanotify\" = \"yes\"; then\n  output_sym \"CONFIG_HAVE_FANOTIFY\"\nfi\nif test \"$futexv\" = \"yes\"; then\n  output_sym \"CONFIG_HAVE_FUTEXV\"\nfi\nif test \"$ublk_header\" = \"yes\"; then\n  output_sym \"CONFIG_HAVE_UBLK_HEADER\"\nfi\nif test \"$use_sanitizer\" = \"yes\"; then\n  output_sym \"CONFIG_USE_SANITIZER\"\n  print_config \"use sanitizer\" \"yes\"\nelse\n  print_config \"use sanitizer\" \"no\"\nfi\n\necho \"CC=$cc\" >> $config_host_mak\nprint_config \"CC\" \"$cc\"\necho \"CXX=$cxx\" >> $config_host_mak\nprint_config \"CXX\" \"$cxx\"\n\n# generate io_uring_version.h\n# Reset MAKEFLAGS\nMAKEFLAGS=\nMAKE_PRINT_VARS=\"include Makefile.common\\nprint-%%: ; @echo \\$(\\$*)\\n\"\nVERSION_MAJOR=$(printf \"$MAKE_PRINT_VARS\" | make -s --no-print-directory -f - print-VERSION_MAJOR)\nVERSION_MINOR=$(printf \"$MAKE_PRINT_VARS\" | make -s --no-print-directory -f - print-VERSION_MINOR)\nio_uring_version_h=\"src/include/liburing/io_uring_version.h\"\ncat > $io_uring_version_h << EOF\n/* SPDX-License-Identifier: MIT */\n#ifndef LIBURING_VERSION_H\n#define LIBURING_VERSION_H\n\n#define IO_URING_VERSION_MAJOR $VERSION_MAJOR\n#define IO_URING_VERSION_MINOR $VERSION_MINOR\n\n#endif\nEOF\n\n# generate compat.h\ncompat_h=\"src/include/liburing/compat.h\"\ncat > $compat_h << EOF\n/* SPDX-License-Identifier: MIT */\n#ifndef LIBURING_COMPAT_H\n#define LIBURING_COMPAT_H\n\nEOF\n\nif test \"$__kernel_rwf_t\" != \"yes\"; then\ncat >> $compat_h << EOF\ntypedef int __kernel_rwf_t;\n\nEOF\nfi\nif test \"$__kernel_timespec\" != \"yes\"; then\ncat >> $compat_h << EOF\n#include <stdint.h>\n\nstruct __kernel_timespec {\n\tint64_t\t\ttv_sec;\n\tlong long\ttv_nsec;\n};\n\n/* <linux/time_types.h> is not available, so it can't be included */\n#define UAPI_LINUX_IO_URING_H_SKIP_LINUX_TIME_TYPES_H 1\n\nEOF\nelse\ncat >> $compat_h << EOF\n#include <linux/time_types.h>\n/* <linux/time_types.h> is included above and not needed again */\n#define UAPI_LINUX_IO_URING_H_SKIP_LINUX_TIME_TYPES_H 1\n\nEOF\nfi\nif test \"$open_how\" != \"yes\"; then\ncat >> $compat_h << EOF\n#include <inttypes.h>\n\nstruct open_how {\n\tuint64_t\tflags;\n\tuint64_t\tmode;\n\tuint64_t\tresolve;\n};\n\nEOF\nelse cat >> $compat_h << EOF\n#include <linux/openat2.h>\n\nEOF\nfi\nif [ \"$glibc_statx\" = \"no\" ] && [ \"$statx\" = \"yes\" ]; then\ncat >> $compat_h << EOF\n#include <sys/stat.h>\n\nEOF\nfi\nif test \"$futexv\" != \"yes\"; then\ncat >> $compat_h << EOF\n#include <inttypes.h>\n\n#define FUTEX_32\t2\n#define FUTEX_WAITV_MAX\t128\n\nstruct futex_waitv {\n\tuint64_t\tval;\n\tuint64_t\tuaddr;\n\tuint32_t\tflags;\n\tuint32_t\t__reserved;\n};\n\nEOF\nfi\n\nif test \"$has_idtype_t\" != \"yes\"; then\ncat >> $compat_h << EOF\ntypedef enum\n{\n  P_ALL,\t\t/* Wait for any child.  */\n  P_PID,\t\t/* Wait for specified process.  */\n  P_PGID\t\t/* Wait for members of process group.  */\n} idtype_t;\nEOF\nfi\n\nif test \"$discard_cmd\" != \"yes\"; then\ncat >> $compat_h << EOF\n\n#include <linux/ioctl.h>\n\n#ifndef BLOCK_URING_CMD_DISCARD\n#define BLOCK_URING_CMD_DISCARD                        _IO(0x12, 0)\n#endif\n\nEOF\nelse cat >> $compat_h << EOF\n#include <linux/blkdev.h>\n\nEOF\nfi\n\ncat >> $compat_h << EOF\n#endif\nEOF\n"
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "liburing-ffi.pc.in",
          "type": "blob",
          "size": 0.236328125,
          "content": "prefix=@prefix@\nexec_prefix=${prefix}\nlibdir=@libdir@\nincludedir=@includedir@\n\nName: @NAME@\nVersion: @VERSION@\nDescription: io_uring FFI library\nURL: https://git.kernel.dk/cgit/liburing/\n\nLibs: -L${libdir} -luring-ffi\nCflags: -I${includedir}\n"
        },
        {
          "name": "liburing.pc.in",
          "type": "blob",
          "size": 0.228515625,
          "content": "prefix=@prefix@\nexec_prefix=${prefix}\nlibdir=@libdir@\nincludedir=@includedir@\n\nName: @NAME@\nVersion: @VERSION@\nDescription: io_uring library\nURL: https://git.kernel.dk/cgit/liburing/\n\nLibs: -L${libdir} -luring\nCflags: -I${includedir}\n"
        },
        {
          "name": "liburing.spec",
          "type": "blob",
          "size": 1.7021484375,
          "content": "Name: liburing\nVersion: 2.9\nRelease: 1%{?dist}\nSummary: Linux-native io_uring I/O access library\nLicense: (GPLv2 with exceptions and LGPLv2+) or MIT\nSource0: https://brick.kernel.dk/snaps/%{name}-%{version}.tar.gz\nSource1: https://brick.kernel.dk/snaps/%{name}-%{version}.tar.gz.asc\nURL: https://git.kernel.dk/cgit/liburing/\nBuildRequires: gcc\nBuildRequires: make\n\n%description\nProvides native async IO for the Linux kernel, in a fast and efficient\nmanner, for both buffered and O_DIRECT.\n\n%package devel\nSummary: Development files for Linux-native io_uring I/O access library\nRequires: %{name}%{_isa} = %{version}-%{release}\nRequires: pkgconfig\n\n%description devel\nThis package provides header files to include and libraries to link with\nfor the Linux-native io_uring.\n\n%prep\n%autosetup\n\n%build\n%set_build_flags\n./configure --prefix=%{_prefix} --libdir=%{_libdir} --libdevdir=%{_libdir} --mandir=%{_mandir} --includedir=%{_includedir}\n\n%make_build\n\n%install\n%make_install\n\n%files\n%attr(0755,root,root) %{_libdir}/liburing.so.*\n%license COPYING\n\n%files devel\n%{_includedir}/liburing/\n%{_includedir}/liburing.h\n%{_libdir}/liburing.so\n%exclude %{_libdir}/liburing.a\n%{_libdir}/pkgconfig/*\n%{_mandir}/man2/*\n%{_mandir}/man3/*\n%{_mandir}/man7/*\n\n%changelog\n* Thu Oct 31 2019 Jeff Moyer <jmoyer@redhat.com> - 0.2-1\n- Add io_uring_cq_ready()\n- Add io_uring_peek_batch_cqe()\n- Add io_uring_prep_accept()\n- Add io_uring_prep_{recv,send}msg()\n- Add io_uring_prep_timeout_remove()\n- Add io_uring_queue_init_params()\n- Add io_uring_register_files_update()\n- Add io_uring_sq_space_left()\n- Add io_uring_wait_cqe_timeout()\n- Add io_uring_wait_cqes()\n- Add io_uring_wait_cqes_timeout()\n\n* Tue Jan 8 2019 Jens Axboe <axboe@kernel.dk> - 0.1\n- Initial version\n"
        },
        {
          "name": "make-debs.sh",
          "type": "blob",
          "size": 1.6845703125,
          "content": "#!/usr/bin/env bash\n# Copyright (C) 2019  Liu Changcheng <changcheng.liu@aliyun.com>\n# Author: Liu Changcheng <changcheng.liu@aliyun.com>\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <https://www.gnu.org/licenses/>.\n#\nset -xe\n\n# Create dir for build\nbase=${1:-/tmp/release}\ndistro=unstable\nreleasedir=$base/$(lsb_release -si)/liburing\nrm -rf $releasedir\nmkdir -p $releasedir\nHEAD=$(which head)\nDCH=$(which dch)\n\nsrc_dir=$(readlink -e `basename $0`)\nliburing_dir=$(dirname $src_dir)\nbasename=$(basename $liburing_dir)\ndirname=$(dirname $liburing_dir)\nversion=$(git describe --match \"lib*\" | cut -d '-' -f 2)\noutfile=\"liburing-$version\"\norgfile=$(echo $outfile | tr '-' '_')\n\n# Prepare source code\ncp -arf ${dirname}/${basename} ${releasedir}/${outfile}\ncd ${releasedir}/${outfile}\ngit clean -dxf\n\n# Change changelog if it's needed\ncur_ver=`$HEAD < debian/changelog | sed -n -e 's/.* (\\(.*\\)) .*/\\1/p'`\nif [ \"$cur_ver\" != \"$version-1\" ]; then\n\t$DCH -D $distro --force-distribution -b -v \"$version-1\" \"new version\"\nfi\n\n# Create tar archive\ncd ../\ntar cvzf ${outfile}.tar.gz ${outfile}\nln -s ${outfile}.tar.gz ${orgfile}.orig.tar.gz\n\n# Build debian package\ncd -\ndebuild\n"
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}