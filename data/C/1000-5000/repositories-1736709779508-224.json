{
  "metadata": {
    "timestamp": 1736709779508,
    "page": 224,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "libffi/libffi",
      "stars": 3263,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".allow-ai-service",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 3.3779296875,
          "content": "shallow_clone: true\n\n# We're currently only testing libffi built with Microsoft's\n# tools.\n# This matrix should be expanded to include at least:\n#  32- and 64-bit gcc/cygwin\n#  32- and 64-bit gcc/mingw\n#  32- and 64-bit clang/mingw\n#  and perhaps more.\n\nimage: Visual Studio 2017\nplatform:\n  - x64\n  - x86\n  - arm\n  - arm64\n\nconfiguration:\n  - Debug\n  - Release\n\nenvironment:\n  global:\n    CYG_ROOT: C:/cygwin64\n    CYG_CACHE: C:/cygwin64/var/cache/setup\n    CYG_MIRROR: http://mirrors.kernel.org/sourceware/cygwin/\n    VSVER: 15\n  matrix:\n    - SHARED_ARG: \"--enable-shared --disable-static\"\n    - SHARED_ARG: \"--enable-static --disable-shared\"\n\ninstall:\n  - ps: >-\n      If ($env:Platform -Match \"x86\") {\n          $env:VCVARS_PLATFORM=\"x86\"\n          $env:BUILD=\"i686-pc-cygwin\"\n          $env:HOST=\"i686-pc-cygwin\"\n          $env:MSVCC=\"/cygdrive/c/projects/libffi/msvcc.sh\"\n          $env:SRC_ARCHITECTURE=\"x86\"\n        } ElseIf ($env:Platform -Match \"arm64\") {\n          $env:VCVARS_PLATFORM=\"x86_arm64\"\n          $env:BUILD=\"i686-pc-cygwin\"\n          $env:HOST=\"aarch64-w64-cygwin\"\n          $env:MSVCC=\"/cygdrive/c/projects/libffi/msvcc.sh -marm64\"\n          $env:SRC_ARCHITECTURE=\"aarch64\"\n        } ElseIf ($env:Platform -Match \"arm\") {\n          $env:VCVARS_PLATFORM=\"x86_arm\"\n          $env:BUILD=\"i686-pc-cygwin\"\n          $env:HOST=\"arm-w32-cygwin\"\n          $env:MSVCC=\"/cygdrive/c/projects/libffi/msvcc.sh -marm\"\n          $env:SRC_ARCHITECTURE=\"arm\"\n        } Else {\n          $env:VCVARS_PLATFORM=\"amd64\"\n          $env:BUILD=\"x86_64-w64-cygwin\"\n          $env:HOST=\"x86_64-w64-cygwin\"\n          $env:MSVCC=\"/cygdrive/c/projects/libffi/msvcc.sh -m64\"\n          $env:SRC_ARCHITECTURE=\"x86\"\n      }\n      If ($env:Configuration -Match \"Debug\") {\n          $env:DEBUG_ARG=\"--enable-debug\"\n        } Else {\n          $env:DEBUG_ARG=\"--disable-debug\"\n      }\n  - 'appveyor DownloadFile https://cygwin.com/setup-x86_64.exe -FileName setup.exe'\n  - 'setup.exe -qgnNdO -R \"%CYG_ROOT%\" -s \"%CYG_MIRROR%\" -l \"%CYG_CACHE%\" -P dejagnu -P autoconf -P automake -P libtool'\n  - '%CYG_ROOT%/bin/bash -lc \"cygcheck -dc cygwin\"'\n  - echo call VsDevCmd to set VS150COMNTOOLS\n  - call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\VsDevCmd.bat\"\n  - ps: $env:VSCOMNTOOLS=(Get-Content (\"env:VS\" + \"$env:VSVER\" + \"0COMNTOOLS\"))\n  - echo \"Using Visual Studio %VSVER%.0 at %VSCOMNTOOLS%\"\n  - call \"%VSCOMNTOOLS%..\\..\\vc\\Auxiliary\\Build\\vcvarsall.bat\" %VCVARS_PLATFORM%\n\nbuild_script:\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; ./autogen.sh)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; ./configure CC='%MSVCC%' CXX='%MSVCC%' LD='link' CPP='cl -nologo -EP' CXXCPP='cl -nologo -EP' CPPFLAGS='-DFFI_BUILDING_DLL' AR='/cygdrive/c/projects/libffi/.travis/ar-lib lib' NM='dumpbin -symbols' STRIP=':' --build=$BUILD --host=$HOST $DEBUG_ARG $SHARED_ARG)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp src/%SRC_ARCHITECTURE%/ffitarget.h include)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; make)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp $HOST/.libs/libffi.lib $HOST/testsuite/libffi-8.lib || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp `find . -name 'libffi-?.dll'` $HOST/testsuite/ || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; TERM=none make check RUNTESTFLAGS='-v -v -v -v --target '$HOST  DEJAGNU=$PWD/.appveyor/site.exp SITEDIR=$PWD/.appveyor)\"\n\n\non_finish:\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cat `find ./ -name libffi.log`)\"\n"
        },
        {
          "name": ".appveyor",
          "type": "tree",
          "content": null
        },
        {
          "name": ".ci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.056640625,
          "content": "*\ttext=auto\n\n*.sln\ttext eol=crlf\n*.vcxproj*\ttext eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5205078125,
          "content": ".libs\n.deps\n*.o\n*.lo\n*.wasm\n*.js\n*.test\n*.log\n.dirstamp\n*.la\nMakefile\n!testsuite/libffi.bhaible/Makefile\nMakefile.in\naclocal.m4\ncompile\n!.ci/compile\nconfigure\ndepcomp\ndoc/libffi.info\n*~\nfficonfig.h.in\nfficonfig.h\ninclude/ffi.h\ninclude/ffitarget.h\ninstall-sh\nlibffi.pc\nlibtool\nltmain.sh\nm4/libtool.m4\nm4/lt*.m4\nmdate-sh\nmissing\nstamp-h1\nlibffi*gz\nautom4te.cache\nlibffi.xcodeproj/xcuserdata\nlibffi.xcodeproj/project.xcworkspace\nbuild_*/\ndarwin_*/\nsrc/arm/trampoline.S\n**/texinfo.tex\ntarget/\n__pycache__\n.docker_home\nemsdk\ntest-results\n"
        },
        {
          "name": "ChangeLog.old",
          "type": "blob",
          "size": 249.4912109375,
          "content": "Libffi change logs used to be maintained in separate ChangeLog files.\nThese days we generate them directly from the git commit messages.\nThe old ChangeLog files are saved here in order to maintain the historical\nrecord.\n\n=============================================================================\nFrom the old ChangeLog.libffi-3.1 file...\n\n2014-03-16  Josh Triplett  <josh@joshtriplett.org>\n\n\t* ChangeLog: Archive to ChangeLog.libffi-3.1 and delete.  Future\n\tchangelogs will come from git, with autogenerated snapshots shipped in\n\tdistributed tarballs.\n\n2014-03-16  Josh Triplett  <josh@joshtriplett.org>\n\n\tAdd support for stdcall, thiscall, and fastcall on non-Windows\n\tx86-32.\n\n\tLinux supports the stdcall calling convention, either via\n\tfunctions explicitly declared with the stdcall attribute, or via\n\tcode compiled with -mrtd which effectively makes stdcall the\n\tdefault.\n\n\tThis introduces FFI_STDCALL, FFI_THISCALL, and FFI_FASTCALL on\n\tnon-Windows x86-32 platforms, as non-default calling conventions.\n\n\t* Makefile.am: Compile in src/x86/win32.S on non-Windows x86-32.\n\t* src/x86/ffitarget.h: Add FFI_STDCALL, FFI_THISCALL, and\n\tFFI_FASTCALL on non-Windows x86-32.  Increase trampoline size to\n\taccomodate these calling conventions, and unify some ifdeffery.\n\t* src/x86/ffi.c: Add support for FFI_STDCALL, FFI_THISCALL, and\n\tFFI_FASTCALL on non-Windows x86-32 platforms; update ifdeffery.\n\t* src/x86/win32.S: Support compiling on non-Windows x86-32\n\tplatforms.  On those platforms, avoid redefining the SYSV symbols\n\talready provided by src/x86/sysv.S.\n\t* testsuite/libffi.call/closure_stdcall.c: Run on non-Windows.\n\t#define __stdcall if needed.\n\t* testsuite/libffi.call/closure_thiscall.c: Run on non-Windows.\n\t#define __fastcall if needed.\n\t* testsuite/libffi.call/fastthis1_win32.c: Run on non-Windows.\n\t* testsuite/libffi.call/fastthis2_win32.c: Ditto.\n\t* testsuite/libffi.call/fastthis3_win32.c: Ditto.\n\t* testsuite/libffi.call/many2_win32.c: Ditto.\n\t* testsuite/libffi.call/many_win32.c: Ditto.\n\t* testsuite/libffi.call/strlen2_win32.c: Ditto.\n\t* testsuite/libffi.call/strlen_win32.c: Ditto.\n\t* testsuite/libffi.call/struct1_win32.c: Ditto.\n\t* testsuite/libffi.call/struct2_win32.c: Ditto.\n\n2014-03-16  Josh Triplett  <josh@joshtriplett.org>\n\n\t* prep_cif.c: Remove unnecessary ifdef for X86_WIN32.\n\tffi_prep_cif_core had a special case for X86_WIN32, checking for\n\tFFI_THISCALL in addition to the FFI_FIRST_ABI-to-FFI_LAST_ABI\n\trange before returning FFI_BAD_ABI.  However, on X86_WIN32,\n\tFFI_THISCALL already falls in that range, making the special case\n\tunnecessary.  Remove it.\n\n2014-03-16  Josh Triplett  <josh@joshtriplett.org>\n\n\t* testsuite/libffi.call/closure_stdcall.c,\n\ttestsuite/libffi.call/closure_thiscall.c: Remove fragile stack\n\tpointer checks.  These files included inline assembly to save the\n\tstack pointer before and after the call, and compare the values.\n\tHowever, compilers can and do leave the stack in different states\n\tfor these two pieces of inline assembly, such as by saving a\n\ttemporary value on the stack across the call; observed with gcc\n\t-Os, and verified as spurious through careful inspection of\n\tdisassembly.\n\n2014-03-16  Josh Triplett  <josh@joshtriplett.org>\n\n\t* testsuite/libffi.call/many.c: Avoid spurious failure due to\n\texcess floating-point precision.\n\t* testsuite/libffi.call/many_win32.c: Ditto.\n\n2014-03-16  Josh Triplett <josh@joshtriplett.org>\n\n\t* libtool-ldflags: Re-add.\n\n2014-03-16  Josh Triplett <josh@joshtriplett.org>\n\n\t* Makefile.in, aclocal.m4, compile, config.guess, config.sub,\n\tconfigure, depcomp, include/Makefile.in, install-sh,\n\tlibtool-ldflags, ltmain.sh, m4/libtool.m4, m4/ltoptions.m4,\n\tm4/ltsugar.m4, m4/ltversion.m4, m4/lt~obsolete.m4,\n\tman/Makefile.in, mdate-sh, missing, testsuite/Makefile.in: Delete\n\tautogenerated files from version control.\n\t* .gitignore: Add autogenerated files.\n\t* autogen.sh: New script to generate the autogenerated files.\n\t* README: Document requirement to run autogen.sh when building\n\tdirectly from version control.\n\t* .travis.yml: Run autogen.sh\n\n2014-03-14  Anthony Green <green@moxielogic.com>\n\n\t* configure, Makefile.in: Rebuilt.\n\n2014-03-10  Mike Hommey <mh+mozilla@glandium.org>\n\n\t* configure.ac: Allow building for mipsel with Android NDK r8.\n\t* Makefile.am (AM_MAKEFLAGS): Replace double quotes with single\n\tquotes.\n\n2014-03-10  Landry Breuil <landry@openbsd.org>\n\n\t* configure.ac: Ensure the linker supports @unwind sections in libffi.\n\n2014-03-01  Anthony Green  <green@moxielogic.com>\n\n\t* Makefile.am (EXTRA_DIST): Replace old scripts with\n\tgenerate-darwin-source-and-headers.py.\n\t* Makefile.in: Rebuilt.\n\n2014-02-28  Anthony Green  <green@moxielogic.com>\n\n\t* Makefile.am (AM_CFLAGS): Reintroduce missing -DFFI_DEBUG for\n\t--enable-debug builds.\n\t* Makefile.in: Rebuilt.\n\n2014-02-28  Makoto Kato  <m_kato@ga2.so-net.ne.jp>\n\n\t* src/closures.c: Fix build failure when using clang for Android.\n\n2014-02-28  Marcin Wojdyr  <wojdyr@gmail.com>\n\n\t* libffi.pc.in (toolexeclibdir): use -L${toolexeclibdir} instead\n\tof -L${libdir}.\n\n2014-02-28  Paulo Pizarro  <paulo.pizarro@gmail.com>\n\n\t* src/bfin/sysv.S: Calling functions in shared libraries requires\n\tconsidering the GOT.\n\n2014-02-28  Josh Triplett  <josh@joshtriplett.org>\n\n\t* src/x86/ffi64.c (classify_argument): Handle case where\n\tFFI_TYPE_LONGDOUBLE == FFI_TYPE_DOUBLE.\n\n2014-02-28  Anthony Green  <green@moxielogic.com>\n\n\t* ltmain.sh: Generate with libtool-2.4.2.418.\n\t* m4/libtool.m4, m4/ltoptions.m4, m4/ltversion.m4: Ditto.\n\t* configure: Rebuilt.\n\n2014-02-28  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* configure.ac (AC_ARG_ENABLE struct): Fix typo in help\n\tmessage.\n\t(AC_ARG_ENABLE raw_api): Ditto.\n\t* configure, fficonfig.h.in: Rebuilt.\n\n2014-02-28  Will Newton  <will.newton@linaro.org>\n\n\t* src/arm/sysv.S: Initialize IP register with FP.\n\n2014-02-28  Yufeng Zhang  <yufeng.zhang@arm.com>\n\n\t* src/aarch64/sysv.S (ffi_closure_SYSV): Use x29 as the\n\tmain CFA reg; update cfi_rel_offset.\n\n2014-02-15  Marcus Comstedt  <marcus@mc.pp.se>\n\n\t* src/powerpc/ffi_linux64.c, src/powerpc/linux64_closure.S: Remove\n\tassumption on contents of r11 in closure.\n\n2014-02-09  Heiher  <r@hev.cc>\n\n\t* src/mips/n32.S: Fix call floating point va function.\n\n2014-01-21  Zachary Waldowski  <zach@waldowski.me>\n\n\t* src/aarch64/ffi.c: Fix missing semicolons on assertions under\n\tdebug mode.\n\n2013-12-30  Zachary Waldowski  <zach@waldowski.me>\n\n\t* .gitignore: Exclude darwin_* generated source and build_* trees.\n\t* src/aarch64/ffi.c, src/arm/ffi.c, src/x86/ffi.c: Inhibit Clang\n\tprevious prototype warnings.\n\t* src/arm/ffi.c: Prevent NULL dereference, fix short type warning\n\t* src/dlmalloc.c: Fix warnings from set_segment_flags return type,\n\tand the native use of size_t for malloc on platforms\n\t* src/arm/sysv.S: Use unified syntax. Clang clean-ups for\n\tARM_FUNC_START.\n\t* generate-osx-source-and-headers.py: Remove.\n\t* build-ios.sh: Remove.\n\t* libffi.xcodeproj/project.pbxproj: Rebuild targets. Include\n\tx86_64+aarch64 pieces in library.  Export headers properly.\n\t* src/x86/ffi64.c: More Clang warning clean-ups.\n\t* src/closures.c (open_temp_exec_file_dir): Use size_t.\n\t* src/prep_cif.c (ffi_prep_cif_core): Cast ALIGN result.\n\t* src/aarch64/sysv.S: Use CNAME for global symbols.  Only use\n\t.size for ELF targets.\n\t* src/aarch64/ffi.c: Clean up for double == long double.  Clean up\n\tfrom Clang warnings.  Use Clang cache invalidation builtin.  Use\n\tsize_t in place of unsigned in many places.  Accommodate for\n\tdifferences in Apple AArch64 ABI.\n\n2013-12-02  Daniel Rodríguez Troitiño  <drodrigueztroitino@yahoo.es>\n\n\t* generate-darwin-source-and-headers.py: Clean up, modernize,\n\tmerged version of previous scripts.\n\n2013-11-21  Anthony Green  <green@moxielogic.com>\n\n\t* configure, Makefile.in, include/Makefile.in, include/ffi.h.in,\n\tman/Makefile.in, testsuite/Makefile.in, fficonfig.h.in: Rebuilt.\n\n2013-11-21  Alan Modra  <amodra@gmail.com>\n\n\t* Makefile.am (EXTRA_DIST): Add new src/powerpc files.\n\t(nodist_libffi_la_SOURCES <POWERPC, POWERPC_FREEBSD>): Likewise.\n\t* configure.ac (HAVE_LONG_DOUBLE_VARIANT): Define for powerpc.\n\t* include/ffi.h.in (ffi_prep_types): Declare.\n\t* src/prep_cif.c (ffi_prep_cif_core): Call ffi_prep_types.\n\t* src/types.c (FFI_NONCONST_TYPEDEF): Define and use for\n\tHAVE_LONG_DOUBLE_VARIANT.\n\t* src/powerpc/ffi_powerpc.h: New file.\n\t* src/powerpc/ffi.c: Split into..\n\t* src/powerpc/ffi_sysv.c: ..new file, and..\n\t* src/powerpc/ffi_linux64.c: ..new file, rewriting parts.\n\t* src/powerpc/ffitarget.h (enum ffi_abi): Rewrite powerpc ABI\n\tselection as bits controlling features.\n\t* src/powerpc/linux64.S: For consistency, use POWERPC64 rather\n\tthan __powerpc64__.\n\t* src/powerpc/linux64_closure.S: Likewise.\n\t* src/powerpc/ppc_closure.S: Likewise.  Move .note.FNU-stack\n\tinside guard.\n\t* src/powerpc/sysv.S: Likewise.\n\t* configure: Regenerate.\n\t* fficonfig.h.in: Regenerate.\n\t* Makefile.in: Regenerate.\n\n2013-11-20  Alan Modra  <amodra@gmail.com>\n\n\t* src/powerpc/ffi.c (ffi_prep_cif_machdep_core): Use\n\tNUM_FPR_ARG_REGISTERS64 and NUM_GPR_ARG_REGISTERS64 not their\n\t32-bit versions for 64-bit code.\n\t* src/powerpc/linux64_closure.S: Don't use the return value area\n\tas a parameter save area on ELFv2.\n\n2013-11-18  Iain Sandoe  <iain@codesourcery.com>\n\n\t* src/powerpc/darwin.S (EH): Correct use of pcrel FDE encoding.\n\t* src/powerpc/darwin_closure.S (EH): Likewise. Modernise picbase\n\tlabels.\n\n2013-11-18  Anthony Green  <green@moxielogic.com>\n\n\t* src/arm/ffi.c (ffi_call): Hoist declaration of temp to top of\n\tfunction.\n\t* src/arm/ffi.c (ffi_closure_inner): Moderize function declaration\n\tto appease compiler.\n\tThanks for Gregory P. Smith <greg@krypto.org>.\n\n2013-11-18  Anthony Green  <green@moxielogic.com>\n\n\t* README (tested): Mention PowerPC ELFv2.\n\n2013-11-16  Alan Modra  <amodra@gmail.com>\n\n\t* src/powerpc/ppc_closure.S: Move errant #endif to where it belongs.\n\tDon't bl .Luint128.\n\n2013-11-16  Alan Modra  <amodra@gmail.com>\n\n\t* src/powerpc/ffi.c (ffi_prep_cif_machdep_core): Use #if _CALL_ELF\n\ttest to select parameter save sizing for ELFv2 vs. ELFv1.\n\t* src/powerpc/ffitarget.h (FFI_V2_TYPE_FLOAT_HOMOG,\n\tFFI_V2_TYPE_DOUBLE_HOMOG, FFI_V2_TYPE_SMALL_STRUCT): Define.\n\t(FFI_TRAMPOLINE_SIZE): Define variant for ELFv2.\n\t* src/powerpc/ffi.c (FLAG_ARG_NEEDS_PSAVE): Define.\n\t(discover_homogeneous_aggregate): New function.\n\t(ffi_prep_args64): Adjust start of param save area for ELFv2.\n\tHandle homogenous floating point struct parms.\n\t(ffi_prep_cif_machdep_core): Adjust space calculation for ELFv2.\n\tHandle ELFv2 return values.  Set FLAG_ARG_NEEDS_PSAVE.  Handle\n\thomogenous floating point structs.\n\t(ffi_call): Increase size of smst_buffer for ELFv2.  Handle ELFv2.\n\t(flush_icache): Compile for ELFv2.\n\t(ffi_prep_closure_loc): Set up ELFv2 trampoline.\n\t(ffi_closure_helper_LINUX64): Don't return all structs directly\n\tto caller.  Handle homogenous floating point structs.  Handle\n\tELFv2 struct return values.\n\t* src/powerpc/linux64.S (ffi_call_LINUX64): Set up r2 for\n\tELFv2.  Adjust toc save location.  Call function pointer using\n\tr12.  Handle FLAG_RETURNS_SMST.  Don't predict branches.\n\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64): Set up r2\n\tfor ELFv2.  Define ELFv2 versions of STACKFRAME, PARMSAVE, and\n\tRETVAL.  Handle possibly missing parameter save area.  Handle\n\tELFv2 return values.\n\t(.note.GNU-stack): Move inside outer #ifdef.\n\n2013-11-16  Alan Modra  <amodra@gmail.com>\n\n\t* src/powerpc/ffi.c (ffi_prep_cif_machdep): Revert 2013-02-08\n\tchange.  Do not consume an int arg when returning a small struct\n\tfor FFI_SYSV ABI.\n\t(ffi_call): Only use bounce buffer when FLAG_RETURNS_SMST.\n\tProperly copy bounce buffer to destination.\n\t* src/powerpc/sysv.S: Revert 2013-02-08 change.\n\t* src/powerpc/ppc_closure.S: Remove stray '+'.\n\n2013-11-16  Alan Modra  <amodra@gmail.com>\n\n\t* src/powerpc/ffi.c (ffi_prep_args64): Align struct parameters\n\taccording to __STRUCT_PARM_ALIGN__.\n\t(ffi_prep_cif_machdep_core): Likewise.\n\t(ffi_closure_helper_LINUX64): Likewise.\n\n2013-11-16  Alan Modra  <amodra@gmail.com>\n\n\t* src/powerpc/linux64.S (ffi_call_LINUX64): Tweak restore of r28.\n\t(.note.GNU-stack): Move inside outer #ifdef.\n\t* src/powerpc/linux64_closure.S (STACKFRAME, PARMSAVE,\n\tRETVAL): Define and use throughout.\n\t(ffi_closure_LINUX64): Save fprs before buying stack.\n\t(.note.GNU-stack): Move inside outer #ifdef.\n\n2013-11-16  Alan Modra  <amodra@gmail.com>\n\n\t* src/powerpc/ffitarget.h (FFI_TARGET_SPECIFIC_VARIADIC): Define.\n\t(FFI_EXTRA_CIF_FIELDS): Define.\n\t* src/powerpc/ffi.c (ffi_prep_args64): Save fprs as per the\n\tABI, not to both fpr and param save area.\n\t(ffi_prep_cif_machdep_core): Renamed from ffi_prep_cif_machdep.\n\tKeep initial flags.  Formatting.  Remove dead FFI_LINUX_SOFT_FLOAT\n\tcode.\n\t(ffi_prep_cif_machdep, ffi_prep_cif_machdep_var): New functions.\n\t(ffi_closure_helper_LINUX64): Pass floating point as per ABI,\n\tnot to both fpr and parameter save areas.\n\n\t* libffi/testsuite/libffi.call/cls_double_va.c (main): Correct\n\tfunction cast and don't call ffi_prep_cif.\n\t* libffi/testsuite/libffi.call/cls_longdouble_va.c (main): Likewise.\n\n2013-11-15  Andrew Haley  <aph@redhat.com>\n\n\t* doc/libffi.texi (Closure Example): Fix the sample code.\n\t* doc/libffi.info, doc/stamp-vti, doc/version.texi: Rebuilt.\n\n2013-11-15  Andrew Haley  <aph@redhat.com>\n\n\t* testsuite/libffi.call/va_struct1.c (main): Fix broken test.\n\t* testsuite/libffi.call/cls_uint_va.c (cls_ret_T_fn): Likewise\n\t* testsuite/libffi.call/cls_struct_va1.c (test_fn): Likewise.\n\t* testsuite/libffi.call/va_1.c (main): Likewise.\n\n2013-11-14  David Schneider  <david.schneider@bivab.de>\n\n\t* src/arm/ffi.c: Fix register allocation for mixed float and\n\tdoubles.\n\t* testsuite/libffi.call/cls_many_mixed_float_double.c: Testcase\n\tfor many mixed float and double arguments.\n\n2013-11-13  Alan Modra  <amodra@gmail.com>\n\n\t* doc/libffi.texi (Simple Example): Correct example code.\n\t* doc/libffi.info, doc/stamp-vti, doc/version.texi: Rebuilt.\n\n2013-11-13  Anthony Green  <green@moxielogic.com>\n\n\t* include/ffi_common.h: Respect HAVE_ALLOCA_H for GNU compiler\n\tbased build. (Thanks to tmr111116 on github)\n\n2013-11-09  Anthony Green  <green@moxielogic.com>\n\n\t* m4/libtool.m4: Refresh.\n\t* configure, Makefile.in: Rebuilt.\n\t* README: Add more notes about next release.\n\n2013-11-09  Shigeharu TAKENO  <shige@iee.niit.ac.jp>\n\n\t* m4/ax_gcc_archflag.m4 (ax_gcc_arch): Don't recognize\n\tUltraSPARC-IIi as ultrasparc3.\n\n2013-11-06  Mark Kettenis  <kettenis@gnu.org>\n\n\t* src/x86/freebsd.S (ffi_call_SYSV): Align the stack pointer to\n        16-bytes.\n\n2013-11-06  Konstantin Belousov <kib@freebsd.org>\n\n\t* src/x86/freebsd.S (ffi_closure_raw_SYSV): Mark the assembler\n\tsource as not requiring executable stack.\n\n2013-11-02  Anthony Green  <green@moxielogic.com>\n\n\t* doc/libffi.texi (The Basics): Clarify return value buffer size\n\trequirements.  Also, NULL result buffer pointers are no longer\n\tsupported.\n\t* doc/libffi.info: Rebuilt.\n\n2013-11-02  Mischa Jonker  <mjonker@synopsys.com>\n\n\t* Makefile.am (nodist_libffi_la_SOURCES): Fix build error.\n\t* Makefile.in: Rebuilt.\n\n2013-11-02  David Schneider  <david.schneider@bivab.de>\n\n\t* src/arm/ffi.c: more robust argument handling for closures on arm hardfloat\n\t* testsuite/libffi.call/many_mixed.c: New file.\n\t* testsuite/libffi.call/cls_many_mixed_args.c: More tests.\n\n2013-11-02  Vitaly Budovski\n\n\t* src/x86/ffi.c (ffi_prep_cif_machdep): Don't align stack for win32.\n\n2013-10-23  Mark H Weaver  <mhw@netris.org>\n\n\t* src/mips/ffi.c: Fix handling of uint32_t arguments on the\n\tMIPS N32 ABI.\n\n2013-10-13  Sandra Loosemore  <sandra@codesourcery.com>\n\n\t* README: Add Nios II to table of supported platforms.\n\t* Makefile.am (EXTRA_DIST): Add nios2 files.\n\t(nodist_libffi_la_SOURCES): Likewise.\n\t* Makefile.in: Regenerated.\n\t* configure.ac (nios2*-linux*): New host.\n\t(NIOS2): Add AM_CONDITIONAL.\n\t* configure: Regenerated.\n\t* src/nios2/ffi.c: New.\n\t* src/nios2/ffitarget.h: New.\n\t* src/nios2/sysv.S: New.\n\t* src/prep_cif.c (initialize_aggregate): Handle extra structure\n\talignment via FFI_AGGREGATE_ALIGNMENT.\n\t(ffi_prep_cif_core): Conditionalize structure return for NIOS2.\n\n2013-10-10  Sandra Loosemore  <sandra@codesourcery.com>\n\n\t* testsuite/libffi.call/cls_many_mixed_args.c (cls_ret_double_fn):\n\tFix uninitialized variable.\n\n2013-10-11  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n\n\t* testsuite/libffi.call/many.c (many): Replace * with +.\n\n2013-10-08  Ondřej Bílka  <neleai@seznam.cz>\n\n\t* src/aarch64/ffi.c, src/aarch64/sysv.S, src/arm/ffi.c,\n\tsrc/arm/gentramp.sh, src/bfin/sysv.S, src/closures.c,\n\tsrc/dlmalloc.c, src/ia64/ffi.c, src/microblaze/ffi.c,\n\tsrc/microblaze/sysv.S, src/powerpc/darwin_closure.S,\n\tsrc/powerpc/ffi.c, src/powerpc/ffi_darwin.c, src/sh/ffi.c,\n\tsrc/tile/tile.S, testsuite/libffi.call/nested_struct11.c: Fix\n\tspelling errors.\n\n2013-10-08  Anthony Green  <green@moxielogic.com>\n\n\t* aclocal.m4, compile, config.guess, config.sub, depcomp,\n\tinstall-sh, mdate-sh, missing, texinfo.tex: Update from upstream.\n\t* configure.ac: Update version to 3.0.14-rc0.\n\t* Makefile.in, configure, Makefile.in, include/Makefile.in,\n\tman/Makefile.in, testsuite/Makefile.in: Rebuilt.\n\t* README: Mention M88K and VAX.\n\n2013-07-15  Miod Vallat  <miod@openbsd.org>\n\n\t* Makefile.am,\n\tconfigure.ac,\n\tsrc/m88k/ffi.c,\n\tsrc/m88k/ffitarget.h,\n\tsrc/m88k/obsd.S,\n\tsrc/vax/elfbsd.S,\n\tsrc/vax/ffi.c,\n\tsrc/vax/ffitarget.h: Add m88k and vax support.\n\n2013-06-24 Alan Modra  <amodra@gmail.com>\n\n\t* src/powerpc/ffi.c (ffi_prep_args_SYSV): Move var declaration\n\tbefore statements.\n\t(ffi_prep_args64): Support little-endian.\n\t(ffi_closure_helper_SYSV, ffi_closure_helper_LINUX64): Likewise.\n\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64): Likewise.\n\t* src/powerpc/ppc_closure.S (ffi_closure_SYSV): Likewise.\n\n2013-06-12  Mischa Jonker  <mjonker@synopsys.com>\n\n\t * configure.ac: Add support for ARC.\n\t * Makefile.am: Likewise.\n\t * README: Add ARC details.\n\t * src/arc/arcompact.S: New.\n\t * src/arc/ffi.c: Likewise.\n\t * src/arc/ffitarget.h: Likewise.\n\n2013-03-28  David Schneider  <david.schneider@bivab.de>\n\n\t * src/arm/ffi.c: Fix support for ARM hard-float calling convention.\n\t * src/arm/sysv.S: call different methods for SYSV and VFP ABIs.\n\t * testsuite/libffi.call/cls_many_mixed_args.c: testcase for a closure with\n\t mixed arguments, many doubles.\n\t * testsuite/libffi.call/many_double.c: testcase for calling a function using\n\t more than 8 doubles.\n\t * testcase/libffi.call/many.c: use absolute value to check result against an\n\t epsilon\n\n2013-03-17  Anthony Green  <green@moxielogic.com>\n\n\t* README: Update for 3.0.13.\n\t* configure.ac: Ditto.\n\t* configure: Rebuilt.\n\t* doc/*: Update version.\n\n2013-03-17  Dave Korn  <dave.korn.cygwin@gmail.com>\n\n\t* src/closures.c (is_emutramp_enabled\n\t[!FFI_MMAP_EXEC_EMUTRAMP_PAX]): Move default definition outside\n\tenclosing #if scope.\n\n2013-03-17  Anthony Green  <green@moxielogic.com>\n\n\t* configure.ac: Only modify toolexecdir in certain cases.\n\t* configure: Rebuilt.\n\n2013-03-16  Gilles Talis  <gilles.talis@gmail.com>\n\n\t* src/powerpc/ffi.c (ffi_prep_args_SYSV): Don't use\n\tfparg_count,etc on __NO_FPRS__ targets.\n\n2013-03-16  Alan Hourihane  <alanh@fairlite.co.uk>\n\n\t* src/m68k/sysv.S (epilogue): Don't use extb instruction on\n\tm680000 machines.\n\n2013-03-16  Alex Gaynor <alex.gaynor@gmail.com>\n\n\t* src/x86/ffi.c (ffi_prep_cif_machdep): Always align stack.\n\n2013-03-13  Markos Chandras <markos.chandras@imgtec.com>\n\n\t* configure.ac: Add support for Imagination Technologies Meta.\n\t* Makefile.am: Likewise.\n\t* README: Add Imagination Technologies Meta details.\n\t* src/metag/ffi.c: New.\n\t* src/metag/ffitarget.h: Likewise.\n\t* src/metag/sysv.S: Likewise.\n\n2013-02-24  Andreas Schwab  <schwab@linux-m68k.org>\n\n\t* doc/libffi.texi (Structures): Fix missing category argument of\n\t@deftp.\n\n2013-02-11  Anthony Green <green@moxielogic.com>\n\n\t* configure.ac: Update release number to 3.0.12.\n\t* configure: Rebuilt.\n\t* README: Update release info.\n\n2013-02-10  Anthony Green <green@moxielogic.com>\n\n\t* README: Add Moxie.\n\t* src/moxie/ffi.c: Created.\n\t* src/moxie/eabi.S: Created.\n\t* src/moxie/ffitarget.h: Created.\n\t* Makefile.am (nodist_libffi_la_SOURCES): Add Moxie.\n\t* Makefile.in: Rebuilt.\n\t* configure.ac: Add Moxie.\n\t* configure: Rebuilt.\n\t* testsuite/libffi.call/huge_struct.c: Disable format string\n\twarnings for moxie*-*-elf tests.\n\n2013-02-10  Anthony Green <green@moxielogic.com>\n\n\t* Makefile.am (LTLDFLAGS): Fix reference.\n\t* Makefile.in: Rebuilt.\n\n2013-02-10  Anthony Green <green@moxielogic.com>\n\n\t* README: Update supported platforms.  Update test results link.\n\n2013-02-09  Anthony Green <green@moxielogic.com>\n\n\t* testsuite/libffi.call/negint.c: Remove forced -O2.\n\t* testsuite/libffi.call/many2.c (foo): Remove GCCism.\n\t* testsuite/libffi.call/ffitest.h: Add default PRIuPTR definition.\n\n\t* src/sparc/v8.S (ffi_closure_v8): Import ancient ulonglong\n\tclosure return type fix developed by Martin v. Löwis for cpython\n\tfork.\n\n2013-02-08  Andreas Tobler  <andreast@fgznet.ch>\n\n\t* src/powerpc/ffi.c (ffi_prep_cif_machdep): Fix small struct\n\tsupport.\n\t* src/powerpc/sysv.S: Ditto.\n\n2013-02-08  Anthony Green <green@moxielogic.com>\n\n\t* testsuite/libffi.call/cls_longdouble.c: Remove xfail for\n\tarm*-*-*.\n\n2013-02-08  Anthony Green <green@moxielogic.com>\n\n\t* src/sparc/ffi.c (ffi_prep_closure_loc): Fix cache flushing for GCC.\n\n2013-02-08  Matthias Klose  <doko@ubuntu.com>\n\n\t* man/ffi_prep_cif.3: Clean up for debian linter.\n\n2013-02-08  Peter Bergner  <bergner@vnet.ibm.com>\n\n\t* src/powerpc/ffi.c (ffi_prep_args_SYSV): Account for FP args pushed\n\ton the stack.\n\n2013-02-08  Anthony Green <green@moxielogic.com>\n\n\t* Makefile.am (EXTRA_DIST): Add missing files.\n\t* testsuite/Makefile.am (EXTRA_DIST): Ditto.\n\t* Makefile.in: Rebuilt.\n\n2013-02-08  Anthony Green <green@moxielogic.com>\n\n\t* configure.ac: Move sparc asm config checks to within functions\n\tfor compatibility with sun tools.\n\t* configure: Rebuilt.\n\t* src/sparc/ffi.c (ffi_prep_closure_loc): Flush cache on v9\n\tsystems.\n\t* src/sparc/v8.S (ffi_flush_icache): Implement a sparc v9 cache\n\tflusher.\n\n2013-02-08  Nathan Rossi <nathan.rossi@xilinx.com>\n\n\t* src/microblaze/ffi.c (ffi_closure_call_SYSV): Fix handling of\n\tsmall big-endian structures.\n\t(ffi_prep_args): Ditto.\n\n2013-02-07  Anthony Green <green@moxielogic.com>\n\n\t* src/sparc/v8.S (ffi_call_v8): Fix typo from last patch\n\t(effectively hiding ffi_call_v8).\n\n2013-02-07  Anthony Green <green@moxielogic.com>\n\n\t* configure.ac: Update bug reporting address.\n\t* configure.in: Rebuild.\n\n\t* src/sparc/v8.S (ffi_flush_icache): Out-of-line cache flusher for\n\tSun compiler.\n\t* src/sparc/ffi.c (ffi_call): Remove warning.\n\tCall ffi_flush_icache for non-GCC builds.\n\t(ffi_prep_closure_loc): Use ffi_flush_icache.\n\n\t* Makefile.am (EXTRA_DIST): Add libtool-ldflags.\n\t* Makefile.in: Rebuilt.\n\t* libtool-ldflags: New file.\n\n2013-02-07  Daniel Schepler <dschepler@gmail.com>\n\n\t* configure.ac: Correctly identify x32 systems as 64-bit.\n\t* m4/libtool.m4: Remove libtool expr error.\n\t* aclocal.m4, configure: Rebuilt.\n\n2013-02-07  Anthony Green <green@moxielogic.com>\n\n\t* configure.ac: Fix GCC usage test.\n\t* configure: Rebuilt.\n\t* README: Mention LLVM/GCC x86_64 issue.\n\t* testsuite/Makefile.in: Rebuilt.\n\n2013-02-07  Anthony Green <green@moxielogic.com>\n\n\t* testsuite/libffi.call/cls_double_va.c (main): Replace // style\n\tcomments with /* */ for xlc compiler.\n\t* testsuite/libffi.call/stret_large.c (main): Ditto.\n\t* testsuite/libffi.call/stret_large2.c (main): Ditto.\n\t* testsuite/libffi.call/nested_struct1.c (main): Ditto.\n\t* testsuite/libffi.call/huge_struct.c (main): Ditto.\n\t* testsuite/libffi.call/float_va.c (main): Ditto.\n\t* testsuite/libffi.call/cls_struct_va1.c (main): Ditto.\n\t* testsuite/libffi.call/cls_pointer_stack.c (main): Ditto.\n\t* testsuite/libffi.call/cls_pointer.c (main): Ditto.\n\t* testsuite/libffi.call/cls_longdouble_va.c (main): Ditto.\n\n2013-02-06  Anthony Green <green@moxielogic.com>\n\n\t* man/ffi_prep_cif.3: Clean up for debian lintian checker.\n\n2013-02-06  Anthony Green <green@moxielogic.com>\n\n\t* Makefile.am (pkgconfigdir): Add missing pkgconfig install bits.\n\t* Makefile.in: Rebuild.\n\n2013-02-02  Mark H Weaver <mhw@netris.org>\n\n\t* src/x86/ffi64.c (ffi_call): Sign-extend integer arguments passed\n\tvia general purpose registers.\n\n2013-01-21  Nathan Rossi <nathan.rossi@xilinx.com>\n\n\t* README: Add MicroBlaze details.\n\t* Makefile.am: Add MicroBlaze support.\n\t* configure.ac: Likewise.\n\t* src/microblaze/ffi.c: New.\n\t* src/microblaze/ffitarget.h: Likewise.\n\t* src/microblaze/sysv.S: Likewise.\n\n2013-01-21  Nathan Rossi <nathan.rossi@xilinx.com>\n\t* testsuite/libffi.call/return_uc.c: Fixed issue.\n\n2013-01-21  Chris Zankel   <chris@zankel.net>\n\n\t* README: Add Xtensa support.\n\t* Makefile.am: Likewise.\n\t* configure.ac: Likewise.\n\t* Makefile.in Regenerate.\n\t* configure: Likewise.\n\t* src/prep_cif.c: Handle Xtensa.\n\t* src/xtensa: New directory.\n\t* src/xtensa/ffi.c: New file.\n\t* src/xtensa/ffitarget.h: Ditto.\n\t* src/xtensa/sysv.S: Ditto.\n\n2013-01-11  Anthony Green  <green@moxielogic.com>\n\n\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Replace // style\n\tcomments with /* */ for xlc compiler.\n\t* src/powerpc/aix.S (ffi_call_AIX): Ditto.\n\t* testsuite/libffi.call/ffitest.h (allocate_mmap): Delete\n\tdeprecated inline function.\n\t* testsuite/libffi.special/ffitestcxx.h: Ditto.\n\t* README: Add update for AIX support.\n\n2013-01-11  Anthony Green  <green@moxielogic.com>\n\n\t* configure.ac: Robustify pc relative reloc check.\n\t* m4/ax_cc_maxopt.m4: Don't -malign-double.  This is an ABI\n\tchanging option for 32-bit x86.\n\t* aclocal.m4, configure: Rebuilt.\n\t* README: Update supported target list.\n\n2013-01-10  Anthony Green  <green@moxielogic.com>\n\n\t* README (tested): Add Compiler column to table.\n\n2013-01-10  Anthony Green  <green@moxielogic.com>\n\n\t* src/x86/ffi64.c (struct register_args): Make sse array and array\n\tof unions for sunpro compiler compatibility.\n\n2013-01-10  Anthony Green  <green@moxielogic.com>\n\n\t* configure.ac: Test target platform size_t size.  Handle both 32\n\tand 64-bit builds for x86_64-* and i?86-* targets (allowing for\n\tCFLAG option to change default settings).\n\t* configure, aclocal.m4: Rebuilt.\n\n2013-01-10  Anthony Green  <green@moxielogic.com>\n\n\t* testsuite/libffi.special/special.exp: Only run exception\n\thandling tests when using GNU compiler.\n\n\t* m4/ax_compiler_vendor.m4: New file.\n\t* configure.ac: Test for compiler vendor and don't use\n\tAX_CFLAGS_WARN_ALL with the sun compiler.\n\t* aclocal.m4, configure: Rebuilt.\n\n2013-01-10  Anthony Green  <green@moxielogic.com>\n\n\t* include/ffi_common.h: Don't use GCCisms to define types when\n\tbuilding with the SUNPRO compiler.\n\n2013-01-10  Anthony Green  <green@moxielogic.com>\n\n\t* configure.ac: Put local.exp in the right place.\n\t* configure: Rebuilt.\n\n\t* src/x86/ffi.c: Update comment about regparm function attributes.\n\t* src/x86/sysv.S (ffi_closure_SYSV): The SUNPRO compiler requires\n\tthat all function arguments be passed on the stack (no regparm\n\tsupport).\n\n2013-01-08  Anthony Green  <green@moxielogic.com>\n\n\t* configure.ac: Generate local.exp.  This sets CC_FOR_TARGET\n\twhen we are using the vendor compiler.\n\t* testsuite/Makefile.am (EXTRA_DEJAGNU_SITE_CONFIG): Point to\n\t../local.exp.\n\t* configure, testsuite/Makefile.in: Rebuilt.\n\n\t* testsuite/libffi.call/call.exp: Run tests with different\n\toptions, depending on whether or not we are using gcc or the\n\tvendor compiler.\n\t* testsuite/lib/libffi.exp (libffi-init): Set using_gcc based on\n\twhether or not we are building/testing with gcc.\n\n2013-01-08  Anthony Green  <green@moxielogic.com>\n\n\t* configure.ac: Switch x86 solaris target to X86 by default.\n\t* configure: Rebuilt.\n\n2013-01-08  Anthony Green  <green@moxielogic.com>\n\n\t* configure.ac: Fix test for read-only eh_frame.\n\t* configure: Rebuilt.\n\n2013-01-08  Anthony Green  <green@moxielogic.com>\n\n\t* src/x86/sysv.S, src/x86/unix64.S: Only emit DWARF unwind info\n\twhen building with the GNU toolchain.\n\t* testsuite/libffi.call/ffitest.h (CHECK): Fix for Solaris vendor\n\tcompiler.\n\n2013-01-07  Thorsten Glaser <tg@mirbsd.org>\n\n\t* testsuite/libffi.call/cls_uchar_va.c,\n\ttestsuite/libffi.call/cls_ushort_va.c,\n\ttestsuite/libffi.call/va_1.c: Testsuite fixes.\n\n2013-01-07  Thorsten Glaser <tg@mirbsd.org>\n\n\t* src/m68k/ffi.c (CIF_FLAGS_SINT8, CIF_FLAGS_SINT16): Define.\n\t(ffi_prep_cif_machdep): Fix 8-bit and 16-bit signed calls.\n\t* src/m68k/sysv.S (ffi_call_SYSV, ffi_closure_SYSV): Ditto.\n\n2013-01-04  Anthony Green  <green@moxielogic.com>\n\n\t* Makefile.am (AM_CFLAGS): Don't automatically add -fexceptions\n\tand -Wall.  This is set in the configure script after testing for\n\tGCC.\n\t* Makefile.in: Rebuilt.\n\n2013-01-02  rofl0r <https://github.com/rofl0r>\n\n\t* src/powerpc/ffi.c (ffi_prep_cif_machdep): Fix build error on ppc\n\twhen long double == double.\n\n2013-01-02  Reini Urban  <rurban@x-ray.at>\n\n\t* Makefile.am (libffi_la_LDFLAGS): Add -no-undefined to LDFLAGS\n\t(required for shared libs on cygwin/mingw).\n\t* Makefile.in: Rebuilt.\n\n2012-10-31  Alan Modra  <amodra@gmail.co>\n\n\t* src/powerpc/linux64_closure.S: Add new ABI support.\n\t* src/powerpc/linux64.S: Likewise.\n\n2012-10-30  Magnus Granberg  <zorry@gentoo.org>\n\t    Pavel Labushev  <pavel.labushev@runbox.ru>\n\n\t* configure.ac: New options pax_emutramp\n\t* configure, fficonfig.h.in: Regenerated\n\t* src/closures.c: New function emutramp_enabled_check() and\n\tchecks.\n\n2012-10-30  Frederick Cheung  <frederick.cheung@gmail.com>\n\n\t* configure.ac: Enable FFI_MAP_EXEC_WRIT for Darwin 12 (mountain\n\tlion) and future version.\n\t* configure: Rebuild.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * README: Add details of aarch64 port.\n        * src/aarch64/ffi.c: New.\n        * src/aarch64/ffitarget.h: Likewise.\n        * src/aarch64/sysv.S: Likewise.\n\t* Makefile.am: Support aarch64.\n\t* configure.ac: Support aarch64.\n\t* Makefile.in, configure: Rebuilt.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * testsuite/lib/libffi.exp: Add support for aarch64.\n        * testsuite/libffi.call/cls_struct_va1.c: New.\n        * testsuite/libffi.call/cls_uchar_va.c: Likewise.\n        * testsuite/libffi.call/cls_uint_va.c: Likewise.\n        * testsuite/libffi.call/cls_ulong_va.c: Likewise.\n        * testsuite/libffi.call/cls_ushort_va.c: Likewise.\n        * testsuite/libffi.call/nested_struct11.c: Likewise.\n        * testsuite/libffi.call/uninitialized.c: Likewise.\n        * testsuite/libffi.call/va_1.c: Likewise.\n        * testsuite/libffi.call/va_struct1.c: Likewise.\n        * testsuite/libffi.call/va_struct2.c: Likewise.\n        * testsuite/libffi.call/va_struct3.c: Likewise.\n\n2012-10-12  Walter Lee  <walt@tilera.com>\n\n        * Makefile.am: Add TILE-Gx/TILEPro support.\n        * configure.ac: Likewise.\n        * Makefile.in: Regenerate.\n        * configure: Likewise.\n        * src/prep_cif.c (ffi_prep_cif_core): Handle TILE-Gx/TILEPro.\n        * src/tile: New directory.\n        * src/tile/ffi.c: New file.\n        * src/tile/ffitarget.h: Ditto.\n        * src/tile/tile.S: Ditto.\n\n2012-10-12  Matthias Klose  <doko@ubuntu.com>\n\n\t* generate-osx-source-and-headers.py: Normalize whitespace.\n\n2012-09-14  David Edelsohn  <dje.gcc@gmail.com>\n\n\t* configure: Regenerated.\n\n2012-08-26  Andrew Pinski  <apinski@cavium.com>\n\n\tPR libffi/53014\n\t* src/mips/ffi.c (ffi_prep_closure_loc): Allow n32 with soft-float and n64 with\n\tsoft-float.\n\n2012-08-08  Uros Bizjak  <ubizjak@gmail.com>\n\n\t* src/s390/ffi.c (ffi_prep_closure_loc): Don't ASSERT ABI test,\n\tjust return FFI_BAD_ABI when things are wrong.\n\n2012-07-18  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR libffi/53982\n\tPR libffi/53973\n\t* src/x86/ffitarget.h: Check __ILP32__ instead of __LP64__ for x32.\n\t(FFI_SIZEOF_JAVA_RAW): Defined to 4 for x32.\n\n2012-05-16  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* configure: Regenerated.\n\n2012-05-05  Nicolas Lelong\n\n\t* libffi.xcodeproj/project.pbxproj: Fixes.\n\t* README: Update for iOS builds.\n\n2012-04-23  Alexandre Keunecke I. de Mendonca <alexandre.keunecke@gmail.com>\n\n\t* configure.ac: Add Blackfin/sysv support\n\t* Makefile.am: Add Blackfin/sysv support\n\t* src/bfin/ffi.c:  Add Blackfin/sysv support\n\t* src/bfin/ffitarget.h: Add Blackfin/sysv support\n\n2012-04-11  Anthony Green  <green@moxielogic.com>\n\n\t* Makefile.am (EXTRA_DIST): Add new script.\n\t* Makefile.in: Rebuilt.\n\n2012-04-11  Zachary Waldowski  <zwaldowski@gmail.com>\n\n\t* generate-ios-source-and-headers.py,\n\tlibffi.xcodeproj/project.pbxproj: Support a Mac static library via\n\tXcode. Set iOS compatibility to 4.0.  Move iOS trampoline\n\tgeneration into an Xcode \"run script\" phase.  Include both as\n\tXcode build scripts. Don't always regenerate config files.\n\n2012-04-10  Anthony Green  <green@moxielogic.com>\n\n\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Add missing semicolon.\n\n2012-04-06  Anthony Green  <green@moxielogic.com>\n\n\t* Makefile.am (EXTRA_DIST): Add new iOS/xcode files.\n\t* Makefile.in: Rebuilt.\n\n2012-04-06  Mike Lewis  <mikelikespie@gmail.com>\n\n\t* generate-ios-source-and-headers.py: New file.\n\t* libffi.xcodeproj/project.pbxproj: New file.\n\t* README: Update instructions on building iOS binary.\n\t* build-ios.sh: Delete.\n\n2012-04-06  Anthony Green  <green@moxielogic.com>\n\n\t* src/x86/ffi64.c (UINT128): Define differently for Intel and GNU\n\tcompilers, then use it.\n\n2012-04-06  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* m4/libtool.m4 (_LT_ENABLE_LOCK): Support x32.\n\n2012-04-06  Anthony Green  <green@moxielogic.com>\n\n\t* testsuite/Makefile.am (EXTRA_DIST): Add missing test cases.\n\t* testsuite/Makefile.in: Rebuilt.\n\n2012-04-05  Zachary Waldowski  <zwaldowski@gmail.com>\n\n\t* include/ffi.h.in: Add missing trampoline table fields.\n\t* src/arm/sysv.S: Fix ENTRY definition, and wrap symbol references\n\tin CNAME.\n\t* src/x86/ffi.c: Wrap Windows specific code in ifdefs.\n\n2012-04-02  Peter Bergner  <bergner@vnet.ibm.com>\n\n\t* src/powerpc/ffi.c (ffi_prep_args_SYSV): Declare double_tmp.\n\tSilence casting pointer to integer of different size warning.\n\tDelete goto to previously deleted label.\n\t(ffi_call): Silence possibly undefined warning.\n\t(ffi_closure_helper_SYSV): Declare variable type.\n\n2012-04-02  Peter Rosin  <peda@lysator.liu.se>\n\n\t* src/x86/win32.S (ffi_call_win32): Sign/zero extend the return\n\tvalue in the Intel version as is already done for the AT&T version.\n\t(ffi_closure_SYSV): Likewise.\n\t(ffi_closure_raw_SYSV): Likewise.\n\t(ffi_closure_STDCALL): Likewise.\n\n2012-03-29  Peter Rosin  <peda@lysator.liu.se>\n\n\t* src/x86/win32.S (ffi_closure_raw_THISCALL): Unify the frame\n\tgeneration, fix the ENDP label and remove the surplus third arg\n\tfrom the 'lea' insn.\n\n2012-03-29  Peter Rosin  <peda@lysator.liu.se>\n\n\t* src/x86/win32.S (ffi_closure_raw_SYSV): Make the 'stubraw' label\n\tvisible outside the PROC, so that ffi_closure_raw_THISCALL can see\n\tit.  Also instruct the assembler to add a frame to the function.\n\n2012-03-23  Peter Rosin  <peda@lysator.liu.se>\n\n\t* Makefile.am (AM_CPPFLAGS): Add -DFFI_BUILDING.\n\t* Makefile.in: Rebuilt.\n\t* include/ffi.h.in [MSVC]: Add __declspec(dllimport) decorations\n\tto all data exports, when compiling libffi clients using MSVC.\n\n2012-03-29  Peter Rosin  <peda@lysator.liu.se>\n\n\t* src/x86/ffitarget.h (ffi_abi): Add new ABI FFI_MS_CDECL and\n\tmake it the default for MSVC.\n\t(FFI_TYPE_MS_STRUCT): New structure return convention.\n\t* src/x86/ffi.c (ffi_prep_cif_machdep): Tweak the structure\n\treturn convention for FFI_MS_CDECL to be FFI_TYPE_MS_STRUCT\n\tinstead of an ordinary FFI_TYPE_STRUCT.\n\t(ffi_prep_args): Treat FFI_TYPE_MS_STRUCT as FFI_TYPE_STRUCT.\n\t(ffi_call): Likewise.\n\t(ffi_prep_incoming_args_SYSV): Likewise.\n\t(ffi_raw_call): Likewise.\n\t(ffi_prep_closure_loc): Treat FFI_MS_CDECL as FFI_SYSV.\n\t* src/x86/win32.S (ffi_closure_SYSV): For FFI_TYPE_MS_STRUCT,\n\treturn a pointer to the result structure in eax and don't pop\n\tthat pointer from the stack, the caller takes care of it.\n\t(ffi_call_win32): Treat FFI_TYPE_MS_STRUCT as FFI_TYPE_STRUCT.\n\t(ffi_closure_raw_SYSV): Likewise.\n\n2012-03-22  Peter Rosin  <peda@lysator.liu.se>\n\n\t* testsuite/libffi.call/closure_stdcall.c [MSVC]: Add inline\n\tassembly version with Intel syntax.\n\t* testsuite/libffi.call/closure_thiscall.c [MSVC]: Likewise.\n\n2012-03-23  Peter Rosin  <peda@lysator.liu.se>\n\n\t* testsuite/libffi.call/ffitest.h: Provide abstration of\n\t__attribute__((fastcall)) in the form of a __FASTCALL__\n\tdefine.  Define it to __fastcall for MSVC.\n\t* testsuite/libffi.call/fastthis1_win32.c: Use the above.\n\t* testsuite/libffi.call/fastthis2_win32.c: Likewise.\n\t* testsuite/libffi.call/fastthis3_win32.c: Likewise.\n\t* testsuite/libffi.call/strlen2_win32.c: Likewise.\n\t* testsuite/libffi.call/struct1_win32.c: Likewise.\n\t* testsuite/libffi.call/struct2_win32.c: Likewise.\n\n2012-03-22  Peter Rosin  <peda@lysator.liu.se>\n\n\t* src/x86/win32.S [MSVC] (ffi_closure_THISCALL): Remove the manual\n\tframe on function entry, MASM adds one automatically.\n\n2012-03-22  Peter Rosin  <peda@lysator.liu.se>\n\n\t* testsuite/libffi.call/ffitest.h [MSVC]: Add kludge for missing\n\tbits in the MSVC headers.\n\n2012-03-22  Peter Rosin  <peda@lysator.liu.se>\n\n\t* testsuite/libffi.call/cls_12byte.c: Adjust to the C89 style\n\twith no declarations after statements.\n\t* testsuite/libffi.call/cls_16byte.c: Likewise.\n\t* testsuite/libffi.call/cls_18byte.c: Likewise.\n\t* testsuite/libffi.call/cls_19byte.c: Likewise.\n\t* testsuite/libffi.call/cls_1_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_20byte.c: Likewise.\n\t* testsuite/libffi.call/cls_20byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_24byte.c: Likewise.\n\t* testsuite/libffi.call/cls_2byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte2.c: Likewise.\n\t* testsuite/libffi.call/cls_4_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_4byte.c: Likewise.\n\t* testsuite/libffi.call/cls_5_1_byte.c: Likewise.\n\t* testsuite/libffi.call/cls_5byte.c: Likewise.\n\t* testsuite/libffi.call/cls_64byte.c: Likewise.\n\t* testsuite/libffi.call/cls_6_1_byte.c: Likewise.\n\t* testsuite/libffi.call/cls_6byte.c: Likewise.\n\t* testsuite/libffi.call/cls_7_1_byte.c: Likewise.\n\t* testsuite/libffi.call/cls_7byte.c: Likewise.\n\t* testsuite/libffi.call/cls_8byte.c: Likewise.\n\t* testsuite/libffi.call/cls_9byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_9byte2.c: Likewise.\n\t* testsuite/libffi.call/cls_align_double.c: Likewise.\n\t* testsuite/libffi.call/cls_align_float.c: Likewise.\n\t* testsuite/libffi.call/cls_align_longdouble.c: Likewise.\n\t* testsuite/libffi.call/cls_align_longdouble_split.c: Likewise.\n\t* testsuite/libffi.call/cls_align_longdouble_split2.c: Likewise.\n\t* testsuite/libffi.call/cls_align_pointer.c: Likewise.\n\t* testsuite/libffi.call/cls_align_sint16.c: Likewise.\n\t* testsuite/libffi.call/cls_align_sint32.c: Likewise.\n\t* testsuite/libffi.call/cls_align_sint64.c: Likewise.\n\t* testsuite/libffi.call/cls_align_uint16.c: Likewise.\n\t* testsuite/libffi.call/cls_align_uint32.c: Likewise.\n\t* testsuite/libffi.call/cls_align_uint64.c: Likewise.\n\t* testsuite/libffi.call/cls_dbls_struct.c: Likewise.\n\t* testsuite/libffi.call/cls_pointer_stack.c: Likewise.\n\t* testsuite/libffi.call/err_bad_typedef.c: Likewise.\n\t* testsuite/libffi.call/huge_struct.c: Likewise.\n\t* testsuite/libffi.call/nested_struct.c: Likewise.\n\t* testsuite/libffi.call/nested_struct1.c: Likewise.\n\t* testsuite/libffi.call/nested_struct10.c: Likewise.\n\t* testsuite/libffi.call/nested_struct2.c: Likewise.\n\t* testsuite/libffi.call/nested_struct3.c: Likewise.\n\t* testsuite/libffi.call/nested_struct4.c: Likewise.\n\t* testsuite/libffi.call/nested_struct5.c: Likewise.\n\t* testsuite/libffi.call/nested_struct6.c: Likewise.\n\t* testsuite/libffi.call/nested_struct7.c: Likewise.\n\t* testsuite/libffi.call/nested_struct8.c: Likewise.\n\t* testsuite/libffi.call/nested_struct9.c: Likewise.\n\t* testsuite/libffi.call/stret_large.c: Likewise.\n\t* testsuite/libffi.call/stret_large2.c: Likewise.\n\t* testsuite/libffi.call/stret_medium.c: Likewise.\n\t* testsuite/libffi.call/stret_medium2.c: Likewise.\n\t* testsuite/libffi.call/struct1.c: Likewise.\n\t* testsuite/libffi.call/struct1_win32.c: Likewise.\n\t* testsuite/libffi.call/struct2.c: Likewise.\n\t* testsuite/libffi.call/struct2_win32.c: Likewise.\n\t* testsuite/libffi.call/struct3.c: Likewise.\n\t* testsuite/libffi.call/struct4.c: Likewise.\n\t* testsuite/libffi.call/struct5.c: Likewise.\n\t* testsuite/libffi.call/struct6.c: Likewise.\n\t* testsuite/libffi.call/struct7.c: Likewise.\n\t* testsuite/libffi.call/struct8.c: Likewise.\n\t* testsuite/libffi.call/struct9.c: Likewise.\n\t* testsuite/libffi.call/testclosure.c: Likewise.\n\n2012-03-21  Peter Rosin\t <peda@lysator.liu.se>\n\n\t* testsuite/libffi.call/float_va.c (float_va_fn): Use %f when\n\tprinting doubles (%lf is for long doubles).\n\t(main): Likewise.\n\n2012-03-21  Peter Rosin  <peda@lysator.liu.se>\n\n\t* testsuite/lib/target-libpath.exp [*-*-cygwin*, *-*-mingw*]\n\t(set_ld_library_path_env_vars): Add the library search dir to PATH\n\t(and save PATH for later).\n\t(restore_ld_library_path_env_vars): Restore PATH.\n\n2012-03-21  Peter Rosin  <peda@lysator.liu.se>\n\n\t* testsuite/lib/target-libpath.exp [*-*-cygwin*, *-*-mingw*]\n\t(set_ld_library_path_env_vars): Add the library search dir to PATH\n\t(and save PATH for later).\n\t(restore_ld_library_path_env_vars): Restore PATH.\n\n2012-03-20  Peter Rosin  <peda@lysator.liu.se>\n\n\t* testsuite/libffi.call/strlen2_win32.c (main): Remove bug.\n\t* src/x86/win32.S [MSVC] (ffi_closure_SYSV): Make the 'stub' label\n\tvisible outside the PROC, so that ffi_closure_THISCALL can see it.\n\n2012-03-20  Peter Rosin  <peda@lysator.liu.se>\n\n\t* testsuite/libffi.call/strlen2_win32.c (main): Remove bug.\n\t* src/x86/win32.S [MSVC] (ffi_closure_SYSV): Make the 'stub' label\n\tvisible outside the PROC, so that ffi_closure_THISCALL can see it.\n\n2012-03-19  Alan Hourihane  <alanh@fairlite.co.uk>\n\n\t* src/m68k/ffi.c: Add MINT support.\n\t* src/m68k/sysv.S: Ditto.\n\n2012-03-06  Chung-Lin Tang  <cltang@codesourcery.com>\n\n\t* src/arm/ffi.c (ffi_call): Add __ARM_EABI__ guard around call to\n\tffi_call_VFP().\n\t(ffi_prep_closure_loc): Add __ARM_EABI__ guard around use of\n\tffi_closure_VFP.\n\t* src/arm/sysv.S: Add __ARM_EABI__ guard around VFP code.\n\n2012-03-19  chennam  <csit@axway.com>\n\n\t* src/powerpc/ffi_darwin.c (ffi_prep_closure_loc): Fix AIX closure\n\tsupport.\n\n2012-03-13  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (ffi_prep_closure_loc): Don't ASSERT ABI test,\n\tjust return FFI_BAD_ABI when things are wrong.\n\t* src/sh64/ffi.c (ffi_prep_closure_loc): Ditto.\n\n2012-03-09  David Edelsohn  <dje.gcc@gmail.com>\n\n\t* src/powerpc/aix_closure.S (ffi_closure_ASM): Adjust for Darwin64\n\tchange to return value of ffi_closure_helper_DARWIN and load type\n\tfrom return type.\n\n2012-03-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* src/x86/ffi64.c (ffi_call): Cast the return value to unsigned\n\tlong.\n\t(ffi_prep_closure_loc): Cast to 64bit address in trampoline.\n\t(ffi_closure_unix64_inner): Cast return pointer to unsigned long\n\tfirst.\n\n\t* src/x86/ffitarget.h (FFI_SIZEOF_ARG): Defined to 8 for x32.\n\t(ffi_arg): Set to unsigned long long for x32.\n\t(ffi_sarg): Set to long long for x32.\n\n2012-03-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* src/prep_cif.c (ffi_prep_cif_core): Properly check bad ABI.\n\n2012-03-03  Andoni Morales Alastruey  <ylatuya@gmail.com>\n\n\t* configure.ac: Add -no-undefined for both 32- and 64-bit x86\n\twindows-like hosts.\n\t* configure: Rebuilt.\n\n2012-02-27  Mikael Pettersson  <mikpe@it.uu.se>\n\n\tPR libffi/52223\n\t* Makefile.am (FLAGS_TO_PASS): Define.\n\t* Makefile.in: Regenerate.\n\n2012-02-23  Anthony Green  <green@moxielogic.com>\n\n\t* src/*/ffitarget.h: Ensure that users never include ffitarget.h\n\tdirectly.\n\n2012-02-23  Kai Tietz  <ktietz@redhat.com>\n\n\tPR libffi/52221\n\t* src/x86/ffi.c (ffi_closure_raw_THISCALL): New\n\tprototype.\n\t(ffi_prep_raw_closure_loc): Use ffi_closure_raw_THISCALL for\n\tthiscall-convention.\n\t(ffi_raw_call): Use ffi_prep_args_raw.\n\t* src/x86/win32.S (ffi_closure_raw_THISCALL): Add\n\timplementation for stub.\n\n2012-02-10  Kai Tietz  <ktietz@redhat.com>\n\n\t* configure.ac (AM_LTLDFLAGS): Add -no-undefine for x64\n\twindows target.\n\t* configure: Regenerated.\n\n2012-02-08  Kai Tietz  <ktietz@redhat.com>\n\n\t* src/prep_cif.c (ffi_prep_cif): Allow for X86_WIN32\n\talso FFI_THISCALL.\n\t* src/x86/ffi.c (ffi_closure_THISCALL): Add prototype.\n\t(FFI_INIT_TRAMPOLINE_THISCALL): New trampoline code.\n\t(ffi_prep_closure_loc): Add FFI_THISCALL support.\n\t* src/x86/ffitarget.h (FFI_TRAMPOLINE_SIZE): Adjust size.\n\t* src/x86/win32.S (ffi_closure_THISCALL): New closure code\n\tfor thiscall-calling convention.\n\t* testsuite/libffi.call/closure_thiscall.c: New test.\n\n2012-01-28  Kai Tietz  <ktietz@redhat.com>\n\n\t* src/libffi/src/x86/ffi.c (ffi_call_win32): Add new\n\targument to prototype for specify calling-convention.\n\t(ffi_call): Add support for stdcall/thiscall convention.\n\t(ffi_prep_args): Likewise.\n\t(ffi_raw_call): Likewise.\n\t* src/x86/ffitarget.h (ffi_abi): Add FFI_THISCALL and\n\tFFI_FASTCALL.\n\t* src/x86/win32.S (_ffi_call_win32): Add support for\n\tfastcall/thiscall calling-convention calls.\n\t* testsuite/libffi.call/fastthis1_win32.c: New test.\n\t* testsuite/libffi.call/fastthis2_win32.c: New test.\n\t* testsuite/libffi.call/fastthis3_win32.c: New test.\n\t* testsuite/libffi.call/strlen2_win32.c: New test.\n\t* testsuite/libffi.call/many2_win32.c: New test.\n\t* testsuite/libffi.call/struct1_win32.c: New test.\n\t* testsuite/libffi.call/struct2_win32.c: New test.\n\n2012-01-23  Uros Bizjak  <ubizjak@gmail.com>\n\n\t* src/alpha/ffi.c (ffi_prep_closure_loc): Check for bad ABI.\n\n2012-01-23  Anthony Green  <green@moxielogic.com>\n\t    Chris Young  <cdyoung@ntlworld.com>\n\n\t* configure.ac: Add Amiga support.\n\t* configure: Rebuilt.\n\n2012-01-23  Dmitry Nadezhin  <dmitry.nadezhin@gmail.com>\n\n\t* include/ffi_common.h (LIKELY, UNLIKELY): Fix definitions.\n\n2012-01-23  Andreas Schwab  <schwab@linux-m68k.org>\n\n\t* src/m68k/sysv.S (ffi_call_SYSV): Properly test for plain\n\tmc68000.  Test for __HAVE_68881__ in addition to __MC68881__.\n\n2012-01-19  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/48496\n\t* src/ia64/ffi.c (ffi_call): Fix up aliasing violations.\n\n2012-01-09  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\t* configure.ac (i?86-*-*): Set TARGET to X86_64.\n\t* configure: Regenerate.\n\n2011-12-07  Andrew Pinski  <apinski@cavium.com>\n\n\tPR libffi/50051\n\t* src/mips/n32.S: Add \".set mips4\".\n\n2011-11-21  Andreas Tobler  <andreast@fgznet.ch>\n\n\t* configure: Regenerate.\n\n2011-11-12  David Gilbert <david.gilbert@linaro.org>\n\n\t* doc/libffi.texi, include/ffi.h.in, include/ffi_common.h,\n\tman/Makefile.am, man/ffi.3, man/ffi_prep_cif.3,\n\tman/ffi_prep_cif_var.3, src/arm/ffi.c, src/arm/ffitarget.h,\n\tsrc/cris/ffi.c, src/prep_cif.c,\n\ttestsuite/libffi.call/cls_double_va.c,\n\ttestsuite/libffi.call/cls_longdouble_va.c,\n\ttestsuite/libffi.call/float_va.c: Many changes to support variadic\n\tfunction calls.\n\n2011-11-12  Kyle Moffett <Kyle.D.Moffett@boeing.com>\n\n\t* src/powerpc/ffi.c, src/powerpc/ffitarget.h,\n\tsrc/powerpc/ppc_closure.S, src/powerpc/sysv.S: Many changes for\n\tsoftfloat powerpc variants.\n\n2011-11-12  Petr Salinger <Petr.Salinger@seznam.cz>\n\n\t* configure.ac (FFI_EXEC_TRAMPOLINE_TABLE): Fix kfreebsd support.\n\t* configure: Rebuilt.\n\n2011-11-12  Timothy Wall  <twall@users.sf.net>\n\n\t* src/arm/ffi.c (ffi_prep_args, ffi_prep_incoming_args_SYSV): Max\n\talignment of 4 for wince on ARM.\n\n2011-11-12  Kyle Moffett <Kyle.D.Moffett@boeing.com>\n\t    Anthony Green <green@moxielogic.com>\n\n\t* src/ppc/sysv.S, src/ppc/ffi.c: Remove use of ppc string\n\tinstructions (not available on some cores, like the PPC440).\n\n2011-11-12  Kimura Wataru  <kimuraw@i.nifty.jp>\n\n\t* m4/ax_enable_builddir: Change from string comparison to numeric\n\tcomparison for wc output.\n\t* configure.ac: Enable FFI_MMAP_EXEC_WRIT for darwin11 aka Mac OS\n\tX 10.7.\n\t* configure: Rebuilt.\n\n2011-11-12  Anthony Green  <green@moxielogic.com>\n\n\t* Makefile.am (AM_CCASFLAGS): Add -g option to build assembly\n\tfiles with debug info.\n\t* Makefile.in: Rebuilt.\n\n2011-11-12  Jasper Lievisse Adriaanse <jasper@openbsd.org>\n\n\t* README: Update list of supported OpenBSD systems.\n\n2011-11-12  Anthony Green  <green@moxielogic.com>\n\n\t* libtool-version: Update.\n\t* Makefile.am (nodist_libffi_la_SOURCES): Add src/debug.c if\n\tFFI_DEBUG.\n\t(libffi_la_SOURCES): Remove src/debug.c\n\t(EXTRA_DIST): Add src/debug.c\n\t* Makefile.in: Rebuilt.\n\t* README: Update for 3.0.11.\n\n2011-11-10  Richard Henderson  <rth@redhat.com>\n\n\t* configure.ac (GCC_AS_CFI_PSEUDO_OP): Use it instead of inline check.\n\t* configure, aclocal.m4: Rebuild.\n\n2011-09-04  Iain Sandoe  <iains@gcc.gnu.org>\n\n\tPR libffi/49594\n\t* src/powerpc/darwin_closure.S (stubs): Make the stub binding\n\thelper reference track the architecture pointer size.\n\n2011-08-25  Andrew Haley  <aph@redhat.com>\n\n\t* src/arm/ffi.c (FFI_INIT_TRAMPOLINE): Remove hard-coded assembly\n\tinstructions.\n\t* src/arm/sysv.S (ffi_arm_trampoline): Put them here instead.\n\n2011-07-11  Andrew Haley  <aph@redhat.com>\n\n        * src/arm/ffi.c (FFI_INIT_TRAMPOLINE): Clear icache.\n\n2011-06-29  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\t* testsuite/libffi.call/cls_double_va.c: Move PR number to comment.\n\t* testsuite/libffi.call/cls_longdouble_va.c: Likewise.\n\n2011-06-29  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\tPR libffi/46660\n\t* testsuite/libffi.call/cls_double_va.c: xfail dg-output on\n\tmips-sgi-irix6*.\n\t* testsuite/libffi.call/cls_longdouble_va.c: Likewise.\n\n2011-06-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\t* testsuite/libffi.call/huge_struct.c (test_large_fn): Use PRIu8,\n\tPRId8 instead of %hhu, %hhd.\n\t* testsuite/libffi.call/ffitest.h [__alpha__ && __osf__] (PRId8,\n\tPRIu8): Define.\n\t[__sgi__] (PRId8, PRIu8): Define.\n\n2011-04-29  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\t* src/alpha/osf.S (UA_SI, FDE_ENCODING, FDE_ENCODE, FDE_ARANGE):\n\tDefine.\n\tUse them to handle ELF vs. ECOFF differences.\n\t[__osf__] (_GLOBAL__F_ffi_call_osf): Define.\n\n2011-03-30  Timothy Wall  <twall@users.sf.net>\n\n\t* src/powerpc/darwin.S: Fix unknown FDE encoding.\n\t* src/powerpc/darwin_closure.S: ditto.\n\n2011-02-25  Anthony Green  <green@moxielogic.com>\n\n\t* src/powerpc/ffi.c (ffi_prep_closure_loc): Allow for more\n\t32-bit ABIs.\n\n2011-02-15  Anthony Green  <green@moxielogic.com>\n\n\t* m4/ax_cc_maxopt.m4: Don't -malign-double or use -ffast-math.\n\t* configure: Rebuilt.\n\n2011-02-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* configure: Regenerate.\n\n2011-02-13  Anthony Green  <green@moxielogic.com>\n\n\t* include/ffi_common.h (UNLIKELY, LIKELY): Define.\n\t* src/x86/ffi64.c (UNLIKELY, LIKELY): Remove definition.\n\t* src/prep_cif.c (UNLIKELY, LIKELY): Remove definition.\n\n\t* src/prep_cif.c (initialize_aggregate): Convert assertion into\n\tFFI_BAD_TYPEDEF return.  Initialize arg size and alignment to 0.\n\n\t* src/pa/ffi.c (ffi_prep_closure_loc): Don't ASSERT ABI test,\n\tjust return FFI_BAD_ABI when things are wrong.\n\t* src/arm/ffi.c (ffi_prep_closure_loc): Ditto.\n\t* src/powerpc/ffi.c (ffi_prep_closure_loc): Ditto.\n\t* src/mips/ffi.c (ffi_prep_closure_loc): Ditto.\n\t* src/ia64/ffi.c (ffi_prep_closure_loc): Ditto.\n\t* src/avr32/ffi.c (ffi_prep_closure_loc): Ditto.\n\n2011-02-11  Anthony Green  <green@moxielogic.com>\n\n\t* src/sparc/ffi.c (ffi_prep_closure_loc): Don't ASSERT ABI test,\n\tjust return FFI_BAD_ABI when things are wrong.\n\n2012-02-11  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* src/sparc/v9.S (STACKFRAME): Bump to 176.\n\n2011-02-09  Stuart Shelton  <srcshelton@gmail.com>\n\n\thttp://bugs.gentoo.org/show_bug.cgi?id=286911\n\t* src/mips/ffitarget.h: Clean up error messages.\n\t* src/java_raw_api.c (ffi_java_translate_args): Cast raw arg to\n\tffi_raw*.\n\t* include/ffi.h.in: Add pragma for SGI compiler.\n\n2011-02-09  Anthony Green  <green@moxielogic.com>\n\n\t* configure.ac: Add powerpc64-*-darwin* support.\n\n2011-02-09  Anthony Green <green@moxielogic.com>\n\n\t* README: Mention Interix.\n\n2011-02-09  Jonathan Callen  <abcd@gentoo.org>\n\n\t* configure.ac: Add Interix to win32/cygwin/mingw case.\n\t* configure: Ditto.\n\t* src/closures.c: Treat Interix like Cygwin, instead of as a\n\tgeneric win32.\n\n2011-02-09  Anthony Green <green@moxielogic.com>\n\n\t* testsuite/libffi.call/err_bad_typedef.c: Remove xfail.\n\t* testsuite/libffi.call/err_bad_abi.c: Remove xfail.\n\t* src/x86/ffi64.c (UNLIKELY, LIKELY): Define.\n\t(ffi_prep_closure_loc): Check for bad ABI.\n\t* src/prep_cif.c (UNLIKELY, LIKELY): Define.\n\t(initialize_aggregate): Check for bad types.\n\n2011-02-09  Landon Fuller <landonf@plausible.coop>\n\n\t* Makefile.am (EXTRA_DIST): Add build-ios.sh, src/arm/gentramp.sh,\n\tsrc/arm/trampoline.S.\n\t(nodist_libffi_la_SOURCES): Add src/arc/trampoline.S.\n\t* configure.ac (FFI_EXEC_TRAMPOLINE_TABLE): Define.\n\t* src/arm/ffi.c (ffi_trampoline_table)\n\t(ffi_closure_trampoline_table_page, ffi_trampoline_table_entry)\n\t(FFI_TRAMPOLINE_CODELOC_CONFIG, FFI_TRAMPOLINE_CONFIG_PAGE_OFFSET)\n\t(FFI_TRAMPOLINE_COUNT, ffi_trampoline_lock, ffi_trampoline_tables)\n\t(ffi_trampoline_table_alloc, ffi_closure_alloc, ffi_closure_free):\n\tDefine for FFI_EXEC_TRAMPOLINE_TABLE case (iOS).\n\t(ffi_prep_closure_loc): Handl FFI_EXEC_TRAMPOLINE_TABLE case\n\tseparately.\n\t* src/arm/sysv.S: Handle Apple iOS host.\n\t* src/closures.c: Handle FFI_EXEC_TRAMPOLINE_TABLE case.\n\t* build-ios.sh: New file.\n\t* fficonfig.h.in, configure, Makefile.in: Rebuilt.\n\t* README: Mention ARM iOS.\n\n2011-02-08  Oren Held  <orenhe@il.ibm.com>\n\n\t* src/dlmalloc.c (_STRUCT_MALLINFO): Define in order to avoid\n\tredefinition of mallinfo on HP-UX.\n\n2011-02-08  Ginn Chen  <ginn.chen@oracle.com>\n\n\t* src/sparc/ffi.c (ffi_call): Make compatible with Solaris Studio\n\taggregate return ABI.  Flush cache.\n\t(ffi_prep_closure_loc): Flush cache.\n\n2011-02-11  Anthony Green  <green@moxielogic.com>\n\n\tFrom Tom Honermann <tom.honermann@oracle.com>:\n\t* src/powerpc/aix.S (ffi_call_AIX): Support for xlc toolchain on\n\tAIX.  Declare .ffi_prep_args.  Insert nops after branch\n\tinstructions so that the AIX linker can insert TOC reload\n\tinstructions.\n\t* src/powerpc/aix_closure.S: Declare .ffi_closure_helper_DARWIN.\n\n2011-02-08  Ed  <ed@kdtc.net>\n\n\t* src/powerpc/asm.h: Fix grammar nit in comment.\n\n2011-02-08  Uli Link  <ul.mcamafia@linkitup.de>\n\n\t* include/ffi.h.in (FFI_64_BIT_MAX): Define and use.\n\n2011-02-09  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\tPR libffi/46661\n\t* testsuite/libffi.call/cls_pointer.c (main): Cast void * to\n\tuintptr_t first.\n\t* testsuite/libffi.call/cls_pointer_stack.c (main): Likewise.\n\n2011-02-08  Rafael Avila de Espindola  <respindola@mozilla.com>\n\n\t* configure.ac: Fix x86 test for pc related relocs.\n\t* configure: Rebuilt.\n\n2011-02-07  Joel Sherrill <joel.sherrill@oarcorp.com>\n\n\t* libffi/src/m68k/ffi.c: Add RTEMS support for cache flushing.\n\tHandle case when CPU variant does not have long double support.\n\t* libffi/src/m68k/sysv.S: Add support for mc68000, Coldfire,\n\tand cores with soft floating point.\n\n2011-02-07  Joel Sherrill <joel.sherrill@oarcorp.com>\n\n\t* configure.ac: Add mips*-*-rtems* support.\n\t* configure: Regenerate.\n\t* src/mips/ffitarget.h: Ensure needed constants are available\n\tfor targets which do not have sgidefs.h.\n\n2011-01-26  Dave Korn  <dave.korn.cygwin@gmail.com>\n\n\tPR target/40125\n\t* configure.ac (AM_LTLDFLAGS): Add -bindir option for windows DLLs.\n\t* configure: Regenerate.\n\n2010-12-18  Iain Sandoe  <iains@gcc.gnu.org>\n\n\tPR libffi/29152\n\tPR libffi/42378\n\t* src/powerpc/darwin_closure.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffitarget.h (POWERPC_DARWIN64): New,\n\t(FFI_TRAMPOLINE_SIZE): Update for Darwin64.\n\t* src/powerpc/darwin.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffi_darwin.c: Likewise.\n\n2010-12-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\t* configure.ac (libffi_cv_as_ascii_pseudo_op): Use double\n\tbackslashes.\n\t(libffi_cv_as_string_pseudo_op): Likewise.\n\t* configure: Regenerate.\n\n2010-12-03  Chung-Lin Tang  <cltang@codesourcery.com>\n\n\t* src/arm/sysv.S (ffi_closure_SYSV): Add UNWIND to .pad directive.\n\t(ffi_closure_VFP): Same.\n\t(ffi_call_VFP): Move down to before ffi_closure_VFP. Add '.fpu vfp'\n\tdirective.\n\n2010-12-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\t* testsuite/libffi.call/ffitest.h [__sgi] (PRId64, PRIu64): Define.\n\t(PRIuPTR): Define.\n\n2010-11-29  Richard Henderson  <rth@redhat.com>\n\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\t* src/x86/sysv.S (FDE_ENCODING, FDE_ENCODE): Define.\n\t(.eh_frame): Use FDE_ENCODING.\n\t(.LASFDE1, .LASFDE2, LASFDE3): Simplify with FDE_ENCODE.\n\n2010-11-22  Jacek Caban <jacek@codeweavers.com>\n\n\t* configure.ac: Check for symbol underscores on mingw-w64.\n\t* configure: Rebuilt.\n\t* src/x86/win64.S: Correctly access extern symbols in respect to\n\tunderscores.\n\n2010-11-15  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\t* testsuite/lib/libffi-dg.exp: Rename ...\n\t* testsuite/lib/libffi.exp: ... to this.\n\t* libffi/testsuite/libffi.call/call.exp: Don't load libffi-dg.exp.\n\t* libffi/testsuite/libffi.special/special.exp: Likewise.\n\n2010-10-28  Chung-Lin Tang  <cltang@codesourcery.com>\n\n\t* src/arm/ffi.c (ffi_prep_args): Add VFP register argument handling\n\tcode, new parameter, and return value. Update comments.\n\t(ffi_prep_cif_machdep): Add case for VFP struct return values. Add\n\tcall to layout_vfp_args().\n\t(ffi_call_SYSV): Update declaration.\n\t(ffi_call_VFP): New declaration.\n\t(ffi_call): Add VFP struct return conditions. Call ffi_call_VFP()\n\twhen ABI is FFI_VFP.\n\t(ffi_closure_VFP): New declaration.\n\t(ffi_closure_SYSV_inner): Add new vfp_args parameter, update call to\n\tffi_prep_incoming_args_SYSV().\n\t(ffi_prep_incoming_args_SYSV): Update parameters. Add VFP argument\n\tcase handling.\n\t(ffi_prep_closure_loc): Pass ffi_closure_VFP to trampoline\n\tconstruction under VFP hard-float.\n\t(rec_vfp_type_p): New function.\n\t(vfp_type_p): Same.\n\t(place_vfp_arg): Same.\n\t(layout_vfp_args): Same.\n\t* src/arm/ffitarget.h (ffi_abi): Add FFI_VFP. Define FFI_DEFAULT_ABI\n\tbased on __ARM_PCS_VFP.\n\t(FFI_EXTRA_CIF_FIELDS): Define for adding VFP hard-float specific\n\tfields.\n\t(FFI_TYPE_STRUCT_VFP_FLOAT): Define internally used type code.\n\t(FFI_TYPE_STRUCT_VFP_DOUBLE): Same.\n\t* src/arm/sysv.S (ffi_call_SYSV): Change call of ffi_prep_args() to\n\tdirect call. Move function pointer load upwards.\n\t(ffi_call_VFP): New function.\n\t(ffi_closure_VFP): Same.\n\n\t* testsuite/lib/libffi-dg.exp (check-flags): New function.\n\t(dg-skip-if): New function.\n\t* testsuite/libffi.call/cls_double_va.c: Skip if target is arm*-*-*\n\tand compiler options include -mfloat-abi=hard.\n\t* testsuite/libffi.call/cls_longdouble_va.c: Same.\n\n2010-10-01  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR libffi/45677\n\t* src/x86/ffi64.c (ffi_prep_cif_machdep): Ensure cif->bytes is\n\ta multiple of 8.\n\t* testsuite/libffi.call/many2.c: New test.\n\n2010-08-20  Mark Wielaard  <mjw@redhat.com>\n\n\t* src/closures.c (open_temp_exec_file_mnt): Check if getmntent_r\n\treturns NULL.\n\n2010-08-09  Andreas Tobler  <andreast@fgznet.ch>\n\n\t* configure.ac: Add target powerpc64-*-freebsd*.\n\t* configure: Regenerate.\n\t* testsuite/libffi.call/cls_align_longdouble_split.c: Pass\n\t-mlong-double-128 only to linux targets.\n\t* testsuite/libffi.call/cls_align_longdouble_split2.c: Likewise.\n\t* testsuite/libffi.call/cls_longdouble.c: Likewise.\n\t* testsuite/libffi.call/huge_struct.c: Likewise.\n\n2010-08-05  Dan Witte  <dwitte@mozilla.com>\n\n        * Makefile.am: Pass FFI_DEBUG define to msvcc.sh for linking to the\n        debug CRT when --enable-debug is given.\n        * configure.ac: Define it.\n        * msvcc.sh: Translate -g and -DFFI_DEBUG appropriately.\n\n2010-08-04  Dan Witte  <dwitte@mozilla.com>\n\n\t* src/x86/ffitarget.h: Add X86_ANY define for all x86/x86_64\n\tplatforms.\n\t* src/x86/ffi.c: Remove redundant ifdef checks.\n\t* src/prep_cif.c: Push stack space computation into src/x86/ffi.c\n\tfor X86_ANY so return value space doesn't get added twice.\n\n2010-08-03  Neil Rashbrooke <neil@parkwaycc.co.uk>\n\n\t* msvcc.sh: Don't pass -safeseh to ml64 because behavior is buggy.\n\n2010-07-22  Dan Witte  <dwitte@mozilla.com>\n\n\t* src/*/ffitarget.h: Make FFI_LAST_ABI one past the last valid ABI.\n\t* src/prep_cif.c: Fix ABI assertion.\n        * src/cris/ffi.c: Ditto.\n\n2010-07-10  Evan Phoenix  <evan@fallingsnow.net>\n\n\t* src/closures.c (selinux_enabled_check): Fix strncmp usage bug.\n\n2010-07-07  Dan Horák <dan@danny.cz>\n\n\t* include/ffi.h.in: Protect #define with #ifndef.\n\t* src/powerpc/ffitarget.h: Ditto.\n\t* src/s390/ffitarget.h: Ditto.\n\t* src/sparc/ffitarget.h: Ditto.\n\n2010-07-07   Neil Roberts <neil@linux.intel.com>\n\n\t* src/x86/sysv.S (ffi_call_SYSV): Align the stack pointer to\n\t16-bytes.\n\n2010-07-02  Jakub Jelinek  <jakub@redhat.com>\n\n\t* Makefile.am (AM_MAKEFLAGS): Pass also mandir to submakes.\n\t* Makefile.in: Regenerated.\n\n2010-05-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\t* configure.ac (libffi_cv_as_x86_pcrel): Check for illegal in as\n\toutput, too.\n\t(libffi_cv_as_ascii_pseudo_op): Check for .ascii.\n\t(libffi_cv_as_string_pseudo_op): Check for .string.\n\t* configure: Regenerate.\n\t* fficonfig.h.in: Regenerate.\n\t* src/x86/sysv.S (.eh_frame): Use .ascii, .string or error.\n\n2010-05-11  Dan Witte  <dwitte@mozilla.com>\n\n\t* doc/libffi.tex: Document previous change.\n\n2010-05-11  Makoto Kato <m_kato@ga2.so-net.ne.jp>\n\n\t* src/x86/ffi.c (ffi_call): Don't copy structs passed by value.\n\n2010-05-05  Michael Kohler <michaelkohler@live.com>\n\n\t* src/dlmalloc.c (dlfree): Fix spelling.\n\t* src/ia64/ffi.c (ffi_prep_cif_machdep): Ditto.\n\t* configure.ac: Ditto.\n\t* configure: Rebuilt.\n\n2010-04-13  Dan Witte  <dwitte@mozilla.com>\n\n\t* msvcc.sh: Build with -W3 instead of -Wall.\n\t* src/powerpc/ffi_darwin.c: Remove build warnings.\n\t* src/x86/ffi.c: Ditto.\n\t* src/x86/ffitarget.h: Ditto.\n\n2010-04-12  Dan Witte  <dwitte@mozilla.com>\n\t    Walter Meinl <wuno@lsvw.de>\n\n\t* configure.ac: Add OS/2 support.\n\t* configure: Rebuilt.\n\t* src/closures.c: Ditto.\n\t* src/dlmalloc.c: Ditto.\n\t* src/x86/win32.S: Ditto.\n\n2010-04-07  Jakub Jelinek  <jakub@redhat.com>\n\n\t* testsuite/libffi.call/err_bad_abi.c: Remove unused args variable.\n\n2010-04-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* man/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\n2010-03-30  Dan Witte  <dwitte@mozilla.com>\n\n\t* msvcc.sh: Disable build warnings.\n\t* README (tested): Clarify windows build procedure.\n\n2010-03-15  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\t* configure.ac (libffi_cv_as_x86_64_unwind_section_type): New test.\n\t* configure: Regenerate.\n\t* fficonfig.h.in: Regenerate.\n\t* libffi/src/x86/unix64.S (.eh_frame)\n\t[HAVE_AS_X86_64_UNWIND_SECTION_TYPE]: Use @unwind section type.\n\n2010-03-14  Matthias Klose  <doko@ubuntu.com>\n\n\t* src/x86/ffi64.c: Fix typo in comment.\n\t* src/x86/ffi.c: Use /* ... */ comment style.\n\n2010-02-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\t* doc/libffi.texi (The Closure API): Fix typo.\n\t* doc/libffi.info: Remove.\n\n2010-02-15  Matthias Klose  <doko@ubuntu.com>\n\n\t* src/arm/sysv.S (__ARM_ARCH__): Define for processor\n\t__ARM_ARCH_7EM__.\n\n2010-01-15  Anthony Green  <green@redhat.com>\n\n\t* README: Add notes on building with Microsoft Visual C++.\n\n2010-01-15  Daniel Witte  <dwitte@mozilla.com>\n\n\t* msvcc.sh: New file.\n\n\t* src/x86/win32.S: Port assembly routines to MSVC and #ifdef.\n\t* src/x86/ffi.c: Tweak function declaration and remove excess\n\tparens.\n\t* include/ffi.h.in: Add __declspec(align(8)) to typedef struct\n\tffi_closure.\n\n\t* src/x86/ffi.c: Merge ffi_call_SYSV and ffi_call_STDCALL into new\n\tfunction ffi_call_win32 on X86_WIN32.\n\t* src/x86/win32.S (ffi_call_SYSV): Rename to ffi_call_win32.\n\t(ffi_call_STDCALL): Remove.\n\n\t* src/prep_cif.c (ffi_prep_cif): Move stack space allocation code\n\tto ffi_prep_cif_machdep for x86.\n\t* src/x86/ffi.c (ffi_prep_cif_machdep): To here.\n\n2010-01-15  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* src/x86/ffitarget.h (ffi_abi): Check for __i386 and __amd64 for\n\tSun Studio compiler compatibility.\n\n2010-01-12  Conrad Irwin <conrad.irwin@gmail.com>\n\n\t* doc/libffi.texi: Add closure example.\n\n2010-01-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\tPR libffi/40701\n\t* testsuite/libffi.call/ffitest.h [__alpha__ && __osf__] (PRIdLL,\n\tPRIuLL, PRId64, PRIu64, PRIuPTR): Define.\n\t* testsuite/libffi.call/cls_align_sint64.c: Add -Wno-format on\n\talpha*-dec-osf*.\n\t* testsuite/libffi.call/cls_align_uint64.c: Likewise.\n\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n\t* testsuite/libffi.call/return_ll1.c: Likewise.\n\t* testsuite/libffi.call/stret_medium2.c: Likewise.\n\t* testsuite/libffi.special/ffitestcxx.h (allocate_mmap): Cast\n\tMAP_FAILED to char *.\n\n2010-01-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\t* src/mips/n32.S: Use .abicalls and .eh_frame with __GNUC__.\n\n2009-12-31  Anthony Green  <green@redhat.com>\n\n\t* README: Update for libffi 3.0.9.\n\n2009-12-27  Matthias Klose  <doko@ubuntu.com>\n\n\t* configure.ac (HAVE_LONG_DOUBLE): Define for mips when\n\tappropriate.\n\t* configure: Rebuilt.\n\n2009-12-26  Anthony Green  <green@redhat.com>\n\n\t* testsuite/libffi.call/cls_longdouble_va.c: Mark as xfail for\n\tavr32*-*-*.\n\t* testsuite/libffi.call/cls_double_va.c: Ditto.\n\n2009-12-26  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* testsuite/libffi.call/ffitest.h: Conditionally include stdint.h\n\tand inttypes.h.\n\t* testsuite/libffi.special/unwindtest.cc: Ditto.\n\n2009-12-26  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* configure.ac: Add amd64-*-openbsd*.\n\t* configure: Rebuilt.\n\t* testsuite/lib/libffi-dg.exp (libffi_target_compile): Link\n\topenbsd programs with -lpthread.\n\n2009-12-26  Anthony Green  <green@redhat.com>\n\n\t* testsuite/libffi.call/cls_double_va.c,\n\ttestsuite/libffi.call/cls_longdouble.c,\n\ttestsuite/libffi.call/cls_longdouble_va.c,\n\ttestsuite/libffi.call/cls_pointer.c,\n\ttestsuite/libffi.call/cls_pointer_stack.c: Remove xfail for\n\tmips*-*-* and arm*-*-*.\n\t* testsuite/libffi.call/cls_align_longdouble_split.c,\n\ttestsuite/libffi.call/cls_align_longdouble_split2.c,\n\ttestsuite/libffi.call/stret_medium2.c,\n\ttestsuite/libffi.call/stret_medium.c,\n\ttestsuite/libffi.call/stret_large.c,\n\ttestsuite/libffi.call/stret_large2.c: Remove xfail for arm*-*-*.\n\n2009-12-31  Kay Tietz  <ktietz70@googlemail.com>\n\n\t* testsuite/libffi.call/ffitest.h,\n\ttestsuite/libffi.special/ffitestcxx.h (PRIdLL, PRuLL): Fix\n\tdefinitions.\n\n2009-12-31  Carlo Bramini  <carlo.bramix@libero.it>\n\n\t* configure.ac (AM_LTLDFLAGS): Define for windows hosts.\n\t* Makefile.am (libffi_la_LDFLAGS): Add AM_LTLDFLAGS.\n\t* configure: Rebuilt.\n\t* Makefile.in: Rebuilt.\n\n2009-12-31  Anthony Green  <green@redhat.com>\n\t    Blake Chaffin.\n\n\t* testsuite/libffi.call/huge_struct.c: New test case from Blake\n\tChaffin @ Apple.\n\n2009-12-28  David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Copy abi and nargs to\n\tlocal variables.\n\t(aix_adjust_aggregate_sizes): New function.\n\t(ffi_prep_cif_machdep): Call it.\n\n2009-12-26  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* configure.ac: Define FFI_MMAP_EXEC_WRIT for the given targets.\n\t* configure: Regenerate.\n\t* fficonfig.h.in: Likewise.\n\t* src/closures.c: Remove the FFI_MMAP_EXEC_WRIT definition for\n\tSolaris/x86.\n\n2009-12-26  Andreas Schwab  <schwab@linux-m68k.org>\n\n\t* src/powerpc/ffi.c (ffi_prep_args_SYSV): Advance intarg_count\n\twhen a float arguments is passed in memory.\n\t(ffi_closure_helper_SYSV): Mark general registers as used up when\n\ta 64bit or soft-float long double argument is passed in memory.\n\n2009-12-25  Matthias Klose  <doko@ubuntu.com>\n\n\t* man/ffi_call.3: Fix #include in examples.\n\t* doc/libffi.texi: Add dircategory.\n\n2009-12-25  Frank Everdij <f.p.x.everdij@tudelft.nl>\n\n\t* include/ffi.h.in: Placed '__GNUC__' ifdef around\n\t'__attribute__((aligned(8)))' in ffi_closure, fixes compile for\n\tIRIX MIPSPro c99.\n\t* include/ffi_common.h: Added '__sgi' define to non\n\t'__attribute__((__mode__()))' integer typedefs.\n\t* src/mips/ffi.c (ffi_call, ffi_closure_mips_inner_O32,\n\tffi_closure_mips_inner_N32): Added 'defined(_MIPSEB)' to BE check.\n\t(ffi_closure_mips_inner_O32, ffi_closure_mips_inner_N32): Added\n\tFFI_LONGDOUBLE support and alignment(N32 only).\n\t* src/mips/ffitarget.h: Corrected '#include <sgidefs.h>' for IRIX and\n\tfixed non '__attribute__((__mode__()))' integer typedefs.\n\t* src/mips/n32.S: Put '#ifdef linux' around '.abicalls' and '.eh_frame'\n\tsince they are Linux/GNU Assembler specific.\n\n2009-12-25  Bradley Smith  <brad@brad-smith.co.uk>\n\n\t* configure.ac, Makefile.am, src/avr32/ffi.c,\n\tsrc/avr32/ffitarget.h,\n\tsrc/avr32/sysv.S: Add AVR32 port.\n\t* configure, Makefile.in: Rebuilt.\n\n2009-12-21  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* configure.ac: Make i?86 build on FreeBSD and OpenBSD.\n\t* configure: Regenerate.\n\n2009-12-15  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n\n\t* testsuite/libffi.call/ffitest.h: Define PRIuPTR on PA HP-UX.\n\n2009-12-13  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n\n\t* src/pa/ffi.c (ffi_closure_inner_pa32): Handle FFI_TYPE_LONGDOUBLE\n\ttype on HP-UX.\n\n2012-02-13  Kai Tietz  <ktietz@redhat.com>\n\n\tPR libffi/52221\n\t* src/x86/ffi.c (ffi_prep_raw_closure_loc): Add thiscall\n\tsupport for X86_WIN32.\n\t(FFI_INIT_TRAMPOLINE_THISCALL): Fix displacement.\n\n2009-12-11  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* src/sparc/ffi.c (ffi_closure_sparc_inner_v9): Properly align 'long\n\tdouble' arguments.\n\n2009-12-11  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* testsuite/libffi.call/ffitest.h: Define PRIuPTR on Solaris < 10.\n\n2009-12-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\tPR libffi/40700\n\t* src/closures.c [X86_64 && __sun__ && __svr4__]\n\t(FFI_MMAP_EXEC_WRIT): Define.\n\n2009-12-08  David Daney  <ddaney@caviumnetworks.com>\n\n\t* testsuite/libffi.call/stret_medium.c: Remove xfail for mips*-*-*\n\t* testsuite/libffi.call/cls_align_longdouble_split2.c: Same.\n\t* testsuite/libffi.call/stret_large.c: Same.\n\t* testsuite/libffi.call/cls_align_longdouble_split.c: Same.\n\t* testsuite/libffi.call/stret_large2.c: Same.\n\t* testsuite/libffi.call/stret_medium2.c: Same.\n\n2009-12-07  David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/powerpc/aix_closure.S (libffi_closure_ASM): Fix tablejump\n\ttypo.\n\n2009-12-05  David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/powerpc/aix.S: Update AIX32 code to be consistent with AIX64\n\tcode.\n\t* src/powerpc/aix_closure.S: Same.\n\n2009-12-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* man/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\n2009-12-04  David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/powerpc/aix_closure.S: Reorganize 64-bit code to match\n\tlinux64_closure.S.\n\n2009-12-04  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR libffi/41908\n\t* src/x86/ffi64.c (classify_argument): Update from\n\tgcc/config/i386/i386.c.\n\t(ffi_closure_unix64_inner): Do not use the address of two consecutive\n\tSSE registers directly.\n\t* testsuite/libffi.call/cls_dbls_struct.c (main): Remove xfail\n\tfor x86_64 linux targets.\n\n2009-12-04  David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/powerpc/ffi_darwin.c (ffi_closure_helper_DARWIN): Increment\n\tpfr for long double split between fpr13 and stack.\n\n2009-12-03  David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Increment next_arg and\n\tfparg_count twice for long double.\n\n2009-12-03  David Edelsohn  <edelsohn@gnu.org>\n\n\tPR libffi/42243\n\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Remove extra parentheses.\n\n2009-12-03  Uros Bizjak  <ubizjak@gmail.com>\n\n\t* testsuite/libffi.call/cls_longdouble_va.c (main): Fix format string.\n\tRemove xfails for x86 linux targets.\n\n2009-12-02  David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Fix typo in INT64\n\tcase.\n\n2009-12-01  David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/powerpc/aix.S (ffi_call_AIX): Convert to more standard\n\tregister usage.  Call ffi_prep_args directly.  Add long double\n\treturn value support.\n\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Double arg increment\n\tapplies to FFI_TYPE_DOUBLE.  Correct fpr_base increment typo.\n\tSeparate FFI_TYPE_SINT32 and FFI_TYPE_UINT32 cases.\n\t(ffi_prep_cif_machdep): Only 16 byte stack alignment in 64 bit\n\tmode.\n\t(ffi_closure_helper_DARWIN): Remove nf and ng counters.  Move temp\n\tinto case.\n\t* src/powerpc/aix_closure.S: Maintain 16 byte stack alignment.\n\tAllocate result area between params and FPRs.\n\n2009-11-30  David Edelsohn  <edelsohn@gnu.org>\n\n\tPR target/35484\n\t* src/powerpc/ffitarget.h (POWERPC64): Define for PPC64 Linux and\n\tAIX64.\n\t* src/powerpc/aix.S: Implement AIX64 version.\n\t* src/powerpc/aix_closure.S: Implement AIX64 version.\n\t(ffi_closure_ASM): Use extsb, lha and displament addresses.\n\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Implement AIX64\n\tsupport.\n\t(ffi_prep_cif_machdep): Same.\n\t(ffi_call): Same.\n\t(ffi_closure_helper_DARWIN): Same.\n\n2009-11-02  Andreas Tobler  <a.tobler@schweiz.org>\n\n\tPR libffi/41908\n\t* testsuite/libffi.call/testclosure.c: New test.\n\n2009-09-28  Kai Tietz  <kai.tietz@onevision.com>\n\n\t* src/x86/win64.S (_ffi_call_win64 stack): Remove for gnu\n\tassembly version use of ___chkstk.\n\n2009-09-23  Matthias Klose  <doko@ubuntu.com>\n\n\tPR libffi/40242, PR libffi/41443\n\t* src/arm/sysv.S (__ARM_ARCH__): Define for processors\n\t__ARM_ARCH_6T2__, __ARM_ARCH_6M__, __ARM_ARCH_7__,\n\t__ARM_ARCH_7A__, __ARM_ARCH_7R__, __ARM_ARCH_7M__.\n\tChange the conditionals to __SOFTFP__ || __ARM_EABI__\n\tfor -mfloat-abi=softfp to work.\n\n2009-09-17  Loren J. Rittle  <ljrittle@acm.org>\n\n\tPR testsuite/32843 (strikes again)\n\t* src/x86/ffi.c (ffi_prep_cif_machdep): Add X86_FREEBSD to\n\tenable proper extension on char and short.\n\n2009-09-15  David Daney  <ddaney@caviumnetworks.com>\n\n\t* src/java_raw_api.c (ffi_java_raw_to_rvalue): Remove special\n\thandling for FFI_TYPE_POINTER.\n\t* src/mips/ffitarget.h (FFI_TYPE_STRUCT_D_SOFT,\n\tFFI_TYPE_STRUCT_F_SOFT, FFI_TYPE_STRUCT_DD_SOFT,\n\tFFI_TYPE_STRUCT_FF_SOFT, FFI_TYPE_STRUCT_FD_SOFT,\n\tFFI_TYPE_STRUCT_DF_SOFT, FFI_TYPE_STRUCT_SOFT): New defines.\n\t(FFI_N32_SOFT_FLOAT, FFI_N64_SOFT_FLOAT): New ffi_abi enumerations.\n\t(enum ffi_abi): Set FFI_DEFAULT_ABI for soft-float.\n\t* src/mips/n32.S (ffi_call_N32): Add handling for soft-float\n\tstructure and pointer returns.\n\t(ffi_closure_N32): Add handling for pointer returns.\n\t* src/mips/ffi.c (ffi_prep_args, calc_n32_struct_flags,\n\tcalc_n32_return_struct_flags): Handle soft-float.\n\t(ffi_prep_cif_machdep):  Handle soft-float, fix pointer handling.\n\t(ffi_call_N32): Declare proper argument types.\n\t(ffi_call, copy_struct_N32, ffi_closure_mips_inner_N32): Handle\n\tsoft-float.\n\n2009-08-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* configure.ac (AC_PREREQ): Bump to 2.64.\n\n2009-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (install-html, install-pdf): Remove.\n\t* Makefile.in: Regenerate.\n\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* fficonfig.h.in: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* man/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\n2011-08-22  Jasper Lievisse Adriaanse <jasper@openbsd.org>\n\n\t* configure.ac: Add OpenBSD/hppa and OpenBSD/powerpc support.\n\t* configure: Rebuilt.\n\n2009-07-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* configure.ac (_AC_ARG_VAR_PRECIOUS): Use m4_rename_force.\n\n2009-07-24  Dave Korn  <dave.korn.cygwin@gmail.com>\n\n\tPR libffi/40807\n\t* src/x86/ffi.c (ffi_prep_cif_machdep): Also use sign/zero-extending\n\treturn types for X86_WIN32.\n\t* src/x86/win32.S (_ffi_call_SYSV): Handle omitted return types.\n\t(_ffi_call_STDCALL, _ffi_closure_SYSV, _ffi_closure_raw_SYSV,\n\t_ffi_closure_STDCALL): Likewise.\n\n\t* src/closures.c (is_selinux_enabled): Define to const 0 for Cygwin.\n\t(dlmmap, dlmunmap): Also use these functions on Cygwin.\n\n2009-07-11  Richard Sandiford  <rdsandiford@googlemail.com>\n\n\tPR testsuite/40699\n\tPR testsuite/40707\n\tPR testsuite/40709\n\t* testsuite/lib/libffi-dg.exp: Revert 2009-07-02, 2009-07-01 and\n\t2009-06-30 commits.\n\n2009-07-01  Richard Sandiford  <r.sandiford@uk.ibm.com>\n\n\t* testsuite/lib/libffi-dg.exp (libffi-init): Set ld_library_path\n\tto \"\" before adding paths.  (This reinstates an assignment that\n\twas removed by my 2009-06-30 commit, but changes the initial\n\tvalue from \".\" to \"\".)\n\n2009-07-01  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR testsuite/40601\n\t* testsuite/lib/libffi-dg.exp (libffi-init): Properly set\n\tgccdir.  Adjust ld_library_path for gcc only if gccdir isn't\n\tempty.\n\n2009-06-30  Richard Sandiford  <r.sandiford@uk.ibm.com>\n\n\t* testsuite/lib/libffi-dg.exp (libffi-init): Don't add \".\"\n\tto ld_library_path.  Use add_path.  Add just find_libgcc_s\n\tto ld_library_path, not every libgcc multilib directory.\n\n2009-06-16  Wim Lewis  <wiml@hhhh.org>\n\n\t* src/powerpc/ffi.c: Avoid clobbering cr3 and cr4, which are\n\tsupposed to be callee-saved.\n\t* src/powerpc/sysv.S (small_struct_return_value): Fix overrun of\n\treturn buffer for odd-size structs.\n\n2009-06-16  Andreas Tobler  <a.tobler@schweiz.org>\n\n\tPR libffi/40444\n\t* testsuite/lib/libffi-dg.exp (libffi_target_compile): Add\n\tallow_stack_execute for Darwin.\n\n2009-06-16  Andrew Haley  <aph@redhat.com>\n\n\t* configure.ac (TARGETDIR): Add missing blank lines.\n\t* configure: Regenerate.\n\n2009-06-16  Andrew Haley  <aph@redhat.com>\n\n\t* testsuite/libffi.call/cls_align_sint64.c,\n\ttestsuite/libffi.call/cls_align_uint64.c,\n\ttestsuite/libffi.call/cls_longdouble_va.c,\n\ttestsuite/libffi.call/cls_ulonglong.c,\n\ttestsuite/libffi.call/return_ll1.c,\n\ttestsuite/libffi.call/stret_medium2.c: Fix printf format\n\tspecifiers.\n\t* testsuite/libffi.call/ffitest.h,\n\ttestsuite/libffi.special/ffitestcxx.h (PRIdLL, PRIuLL): Define.\n\n2009-06-15  Andrew Haley  <aph@redhat.com>\n\n\t* testsuite/libffi.call/err_bad_typedef.c: xfail everywhere.\n\t* testsuite/libffi.call/err_bad_abi.c: Likewise.\n\n2009-06-12  Andrew Haley  <aph@redhat.com>\n\n\t* Makefile.am: Remove info_TEXINFOS.\n\n2009-06-12  Andrew Haley  <aph@redhat.com>\n\n\t* ChangeLog.libffi: testsuite/libffi.call/cls_align_sint64.c,\n\ttestsuite/libffi.call/cls_align_uint64.c,\n\ttestsuite/libffi.call/cls_ulonglong.c,\n\ttestsuite/libffi.call/return_ll1.c,\n\ttestsuite/libffi.call/stret_medium2.c: Fix printf format\n\tspecifiers.\n\ttestsuite/libffi.special/unwindtest.cc: include stdint.h.\n\n2009-06-11  Timothy Wall  <twall@users.sf.net>\n\n\t* Makefile.am,\n\tconfigure.ac,\n\tinclude/ffi.h.in,\n\tinclude/ffi_common.h,\n\tsrc/closures.c,\n\tsrc/dlmalloc.c,\n\tsrc/x86/ffi.c,\n\tsrc/x86/ffitarget.h,\n\tsrc/x86/win64.S (new),\n\tREADME: Added win64 support (mingw or MSVC)\n\t* Makefile.in,\n\tinclude/Makefile.in,\n\tman/Makefile.in,\n\ttestsuite/Makefile.in,\n\tconfigure,\n\taclocal.m4: Regenerated\n\t* ltcf-c.sh: properly escape cygwin/w32 path\n\t* man/ffi_call.3: Clarify size requirements for return value.\n\t* src/x86/ffi64.c: Fix filename in comment.\n\t* src/x86/win32.S: Remove unused extern.\n\n\t* testsuite/libffi.call/closure_fn0.c,\n\ttestsuite/libffi.call/closure_fn1.c,\n\ttestsuite/libffi.call/closure_fn2.c,\n\ttestsuite/libffi.call/closure_fn3.c,\n\ttestsuite/libffi.call/closure_fn4.c,\n\ttestsuite/libffi.call/closure_fn5.c,\n\ttestsuite/libffi.call/closure_fn6.c,\n\ttestsuite/libffi.call/closure_stdcall.c,\n\ttestsuite/libffi.call/cls_12byte.c,\n\ttestsuite/libffi.call/cls_16byte.c,\n\ttestsuite/libffi.call/cls_18byte.c,\n\ttestsuite/libffi.call/cls_19byte.c,\n\ttestsuite/libffi.call/cls_1_1byte.c,\n\ttestsuite/libffi.call/cls_20byte.c,\n\ttestsuite/libffi.call/cls_20byte1.c,\n\ttestsuite/libffi.call/cls_24byte.c,\n\ttestsuite/libffi.call/cls_2byte.c,\n\ttestsuite/libffi.call/cls_3_1byte.c,\n\ttestsuite/libffi.call/cls_3byte1.c,\n \ttestsuite/libffi.call/cls_3byte2.c,\n \ttestsuite/libffi.call/cls_4_1byte.c,\n \ttestsuite/libffi.call/cls_4byte.c,\n \ttestsuite/libffi.call/cls_5_1_byte.c,\n \ttestsuite/libffi.call/cls_5byte.c,\n \ttestsuite/libffi.call/cls_64byte.c,\n \ttestsuite/libffi.call/cls_6_1_byte.c,\n \ttestsuite/libffi.call/cls_6byte.c,\n \ttestsuite/libffi.call/cls_7_1_byte.c,\n \ttestsuite/libffi.call/cls_7byte.c,\n \ttestsuite/libffi.call/cls_8byte.c,\n \ttestsuite/libffi.call/cls_9byte1.c,\n \ttestsuite/libffi.call/cls_9byte2.c,\n \ttestsuite/libffi.call/cls_align_double.c,\n \ttestsuite/libffi.call/cls_align_float.c,\n \ttestsuite/libffi.call/cls_align_longdouble.c,\n \ttestsuite/libffi.call/cls_align_longdouble_split.c,\n \ttestsuite/libffi.call/cls_align_longdouble_split2.c,\n \ttestsuite/libffi.call/cls_align_pointer.c,\n \ttestsuite/libffi.call/cls_align_sint16.c,\n \ttestsuite/libffi.call/cls_align_sint32.c,\n \ttestsuite/libffi.call/cls_align_sint64.c,\n \ttestsuite/libffi.call/cls_align_uint16.c,\n \ttestsuite/libffi.call/cls_align_uint32.c,\n \ttestsuite/libffi.call/cls_align_uint64.c,\n \ttestsuite/libffi.call/cls_dbls_struct.c,\n \ttestsuite/libffi.call/cls_double.c,\n \ttestsuite/libffi.call/cls_double_va.c,\n \ttestsuite/libffi.call/cls_float.c,\n \ttestsuite/libffi.call/cls_longdouble.c,\n \ttestsuite/libffi.call/cls_longdouble_va.c,\n \ttestsuite/libffi.call/cls_multi_schar.c,\n \ttestsuite/libffi.call/cls_multi_sshort.c,\n \ttestsuite/libffi.call/cls_multi_sshortchar.c,\n \ttestsuite/libffi.call/cls_multi_uchar.c,\n \ttestsuite/libffi.call/cls_multi_ushort.c,\n \ttestsuite/libffi.call/cls_multi_ushortchar.c,\n \ttestsuite/libffi.call/cls_pointer.c,\n \ttestsuite/libffi.call/cls_pointer_stack.c,\n \ttestsuite/libffi.call/cls_schar.c,\n \ttestsuite/libffi.call/cls_sint.c,\n \ttestsuite/libffi.call/cls_sshort.c,\n \ttestsuite/libffi.call/cls_uchar.c,\n \ttestsuite/libffi.call/cls_uint.c,\n \ttestsuite/libffi.call/cls_ulonglong.c,\n \ttestsuite/libffi.call/cls_ushort.c,\n \ttestsuite/libffi.call/err_bad_abi.c,\n \ttestsuite/libffi.call/err_bad_typedef.c,\n \ttestsuite/libffi.call/float2.c,\n \ttestsuite/libffi.call/huge_struct.c,\n \ttestsuite/libffi.call/nested_struct.c,\n \ttestsuite/libffi.call/nested_struct1.c,\n \ttestsuite/libffi.call/nested_struct10.c,\n \ttestsuite/libffi.call/nested_struct2.c,\n \ttestsuite/libffi.call/nested_struct3.c,\n \ttestsuite/libffi.call/nested_struct4.c,\n \ttestsuite/libffi.call/nested_struct5.c,\n \ttestsuite/libffi.call/nested_struct6.c,\n \ttestsuite/libffi.call/nested_struct7.c,\n \ttestsuite/libffi.call/nested_struct8.c,\n \ttestsuite/libffi.call/nested_struct9.c,\n \ttestsuite/libffi.call/problem1.c,\n \ttestsuite/libffi.call/return_ldl.c,\n \ttestsuite/libffi.call/return_ll1.c,\n \ttestsuite/libffi.call/stret_large.c,\n \ttestsuite/libffi.call/stret_large2.c,\n \ttestsuite/libffi.call/stret_medium.c,\n \ttestsuite/libffi.call/stret_medium2.c,\n\ttestsuite/libffi.special/unwindtest.cc: use ffi_closure_alloc instead\n\tof checking for MMAP.  Use intptr_t instead of long casts.\n\n2009-06-11  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* testsuite/libffi.call/cls_longdouble_va.c: Add xfail sh*-*-linux-*.\n\t* testsuite/libffi.call/err_bad_abi.c: Add xfail sh*-*-*.\n\t* testsuite/libffi.call/err_bad_typedef.c: Likewise.\n\n2009-06-09  Andrew Haley  <aph@redhat.com>\n\n\t* src/x86/freebsd.S: Add missing file.\n\n2009-06-08  Andrew Haley  <aph@redhat.com>\n\n\tImport from libffi 3.0.8:\n\n\t* doc/libffi.texi: New file.\n\t* doc/libffi.info: Likewise.\n\t* doc/stamp-vti: Likewise.\n\t* man/Makefile.am: New file.\n\t* man/ffi_call.3: New file.\n\n\t* Makefile.am (EXTRA_DIST): Add src/x86/darwin64.S,\n\tsrc/dlmalloc.c.\n\t(nodist_libffi_la_SOURCES): Add X86_FREEBSD.\n\n\t* configure.ac: Bump version to 3.0.8.\n\tparisc*-*-linux*: Add.\n\ti386-*-freebsd* | i386-*-openbsd*: Add.\n\tpowerpc-*-beos*: Add.\n\tAM_CONDITIONAL X86_FREEBSD: Add.\n\tAC_CONFIG_FILES: Add man/Makefile.\n\n\t* include/ffi.h.in (FFI_FN): Change void (*)() to void (*)(void).\n\n2009-06-08  Andrew Haley  <aph@redhat.com>\n\n\t* README: Import from libffi 3.0.8.\n\n2009-06-08  Andrew Haley  <aph@redhat.com>\n\n\t* testsuite/libffi.call/err_bad_abi.c: Add xfails.\n\t* testsuite/libffi.call/cls_longdouble_va.c: Add xfails.\n\t* testsuite/libffi.call/cls_dbls_struct.c: Add xfail x86_64-*-linux-*.\n\t* testsuite/libffi.call/err_bad_typedef.c: Add xfails.\n\n\t* testsuite/libffi.call/stret_medium2.c: Add __UNUSED__ to args.\n\t* testsuite/libffi.call/stret_medium.c: Likewise.\n\t* testsuite/libffi.call/stret_large2.c: Likewise.\n\t* testsuite/libffi.call/stret_large.c:  Likewise.\n\n2008-12-26  Timothy Wall  <twall@users.sf.net>\n\n\t* testsuite/libffi.call/cls_longdouble.c,\n\ttestsuite/libffi.call/cls_longdouble_va.c,\n\ttestsuite/libffi.call/cls_align_longdouble.c,\n\ttestsuite/libffi.call/cls_align_longdouble_split.c,\n\ttestsuite/libffi.call/cls_align_longdouble_split2.c: mark expected\n\tfailures on x86_64 cygwin/mingw.\n\n2008-12-22  Timothy Wall  <twall@users.sf.net>\n\n\t* testsuite/libffi.call/closure_fn0.c,\n\ttestsuite/libffi.call/closure_fn1.c,\n\ttestsuite/libffi.call/closure_fn2.c,\n\ttestsuite/libffi.call/closure_fn3.c,\n\ttestsuite/libffi.call/closure_fn4.c,\n\ttestsuite/libffi.call/closure_fn5.c,\n\ttestsuite/libffi.call/closure_fn6.c,\n\ttestsuite/libffi.call/closure_loc_fn0.c,\n\ttestsuite/libffi.call/closure_stdcall.c,\n\ttestsuite/libffi.call/cls_align_pointer.c,\n\ttestsuite/libffi.call/cls_pointer.c,\n\ttestsuite/libffi.call/cls_pointer_stack.c: use portable cast from\n\tpointer to integer (intptr_t).\n\t* testsuite/libffi.call/cls_longdouble.c: disable for win64.\n\n2008-07-24  Anthony Green  <green@redhat.com>\n\n\t* testsuite/libffi.call/cls_dbls_struct.c,\n\ttestsuite/libffi.call/cls_double_va.c,\n\ttestsuite/libffi.call/cls_longdouble.c,\n\ttestsuite/libffi.call/cls_longdouble_va.c,\n\ttestsuite/libffi.call/cls_pointer.c,\n\ttestsuite/libffi.call/cls_pointer_stack.c,\n\ttestsuite/libffi.call/err_bad_abi.c: Clean up failures from\n\tcompiler warnings.\n\n2008-03-04  Anthony Green  <green@redhat.com>\n\t    Blake Chaffin\n\t    hos@tamanegi.org\n\n\t* testsuite/libffi.call/cls_align_longdouble_split2.c\n\t  testsuite/libffi.call/cls_align_longdouble_split.c\n\t  testsuite/libffi.call/cls_dbls_struct.c\n\t  testsuite/libffi.call/cls_double_va.c\n\t  testsuite/libffi.call/cls_longdouble.c\n\t  testsuite/libffi.call/cls_longdouble_va.c\n\t  testsuite/libffi.call/cls_pointer.c\n\t  testsuite/libffi.call/cls_pointer_stack.c\n\t  testsuite/libffi.call/err_bad_abi.c\n\t  testsuite/libffi.call/err_bad_typedef.c\n\t  testsuite/libffi.call/stret_large2.c\n\t  testsuite/libffi.call/stret_large.c\n\t  testsuite/libffi.call/stret_medium2.c\n\t  testsuite/libffi.call/stret_medium.c: New tests from Apple.\n\n2009-06-05  Andrew Haley  <aph@redhat.com>\n\n\t* src/x86/ffitarget.h, src/x86/ffi.c: Merge stdcall changes from\n\tlibffi.\n\n2009-06-04  Andrew Haley  <aph@redhat.com>\n\n\t* src/x86/ffitarget.h, src/x86/win32.S, src/x86/ffi.c: Back out\n\tstdcall changes.\n\n2008-02-26  Anthony Green  <green@redhat.com>\n\t    Thomas Heller  <theller@ctypes.org>\n\n\t* src/x86/ffi.c (ffi_closure_SYSV_inner): Change C++ comment to C\n\tcomment.\n\n2008-02-03  Timothy Wall  <twall@users.sf.net>\n\n\t* src/x86/ffi.c (FFI_INIT_TRAMPOLINE_STDCALL): Calculate jump return\n\t  offset based on code pointer, not data pointer.\n\n2008-01-31  Timothy Wall <twall@users.sf.net>\n\n\t* testsuite/libffi.call/closure_stdcall.c: Add test for stdcall\n\tclosures.\n\t* src/x86/ffitarget.h: Increase size of trampoline for stdcall\n\tclosures.\n\t* src/x86/win32.S: Add assembly for stdcall closure.\n\t* src/x86/ffi.c: Initialize stdcall closure trampoline.\n\n2009-06-04  Andrew Haley  <aph@redhat.com>\n\n\t* include/ffi.h.in: Change void (*)() to void (*)(void).\n\t* src/x86/ffi.c: Likewise.\n\n2009-06-04  Andrew Haley  <aph@redhat.com>\n\n\t* src/powerpc/ppc_closure.S: Insert licence header.\n\t* src/powerpc/linux64_closure.S: Likewise.\n\t* src/m68k/sysv.S: Likewise.\n\n\t* src/sh64/ffi.c: Change void (*)() to void (*)(void).\n\t* src/powerpc/ffi.c: Likewise.\n\t* src/powerpc/ffi_darwin.c: Likewise.\n\t* src/m32r/ffi.c: Likewise.\n\t* src/sh64/ffi.c: Likewise.\n\t* src/x86/ffi64.c: Likewise.\n\t* src/alpha/ffi.c: Likewise.\n\t* src/alpha/osf.S: Likewise.\n\t* src/frv/ffi.c: Likewise.\n\t* src/s390/ffi.c: Likewise.\n\t* src/pa/ffi.c: Likewise.\n\t* src/pa/hpux32.S: Likewise.\n\t* src/ia64/unix.S: Likewise.\n\t* src/ia64/ffi.c: Likewise.\n\t* src/sparc/ffi.c: Likewise.\n\t* src/mips/ffi.c: Likewise.\n\t* src/sh/ffi.c: Likewise.\n\n2008-02-15  David Daney  <ddaney@avtrex.com>\n\n\t* src/mips/ffi.c (USE__BUILTIN___CLEAR_CACHE):\n\tDefine (conditionally), and use it to include cachectl.h.\n\t(ffi_prep_closure_loc): Fix cache flushing.\n\t* src/mips/ffitarget.h (_ABIN32, _ABI64, _ABIO32): Define.\n\n2009-06-04  Andrew Haley  <aph@redhat.com>\n\n\tinclude/ffi.h.in,\n\tsrc/arm/ffitarget.h,\n\tsrc/arm/ffi.c,\n\tsrc/arm/sysv.S,\n\tsrc/powerpc/ffitarget.h,\n\tsrc/closures.c,\n\tsrc/sh64/ffitarget.h,\n\tsrc/sh64/ffi.c,\n\tsrc/sh64/sysv.S,\n\tsrc/types.c,\n\tsrc/x86/ffi64.c,\n\tsrc/x86/ffitarget.h,\n\tsrc/x86/win32.S,\n\tsrc/x86/darwin.S,\n\tsrc/x86/ffi.c,\n\tsrc/x86/sysv.S,\n\tsrc/x86/unix64.S,\n\tsrc/alpha/ffitarget.h,\n\tsrc/alpha/ffi.c,\n\tsrc/alpha/osf.S,\n\tsrc/m68k/ffitarget.h,\n\tsrc/frv/ffitarget.h,\n\tsrc/frv/ffi.c,\n\tsrc/s390/ffitarget.h,\n\tsrc/s390/sysv.S,\n\tsrc/cris/ffitarget.h,\n\tsrc/pa/linux.S,\n\tsrc/pa/ffitarget.h,\n\tsrc/pa/ffi.c,\n\tsrc/raw_api.c,\n\tsrc/ia64/ffitarget.h,\n\tsrc/ia64/unix.S,\n\tsrc/ia64/ffi.c,\n\tsrc/ia64/ia64_flags.h,\n\tsrc/java_raw_api.c,\n\tsrc/debug.c,\n\tsrc/sparc/v9.S,\n\tsrc/sparc/ffitarget.h,\n\tsrc/sparc/ffi.c,\n\tsrc/sparc/v8.S,\n\tsrc/mips/ffitarget.h,\n\tsrc/mips/n32.S,\n\tsrc/mips/o32.S,\n\tsrc/mips/ffi.c,\n\tsrc/prep_cif.c,\n\tsrc/sh/ffitarget.h,\n\tsrc/sh/ffi.c,\n\tsrc/sh/sysv.S: Update license text.\n\n2009-05-22  Dave Korn  <dave.korn.cygwin@gmail.com>\n\n\t* src/x86/win32.S (_ffi_closure_STDCALL):  New function.\n\t(.eh_frame):  Add FDE for it.\n\n2009-05-22  Dave Korn  <dave.korn.cygwin@gmail.com>\n\n\t* configure.ac:  Also check if assembler supports pc-relative\n\trelocs on X86_WIN32 targets.\n\t* configure:  Regenerate.\n\t* src/x86/win32.S (ffi_prep_args):  Declare extern, not global.\n\t(_ffi_call_SYSV):  Add missing function type symbol .def and\n\tadd EH markup labels.\n\t(_ffi_call_STDCALL):  Likewise.\n\t(_ffi_closure_SYSV):  Likewise.\n\t(_ffi_closure_raw_SYSV):  Likewise.\n\t(.eh_frame):  Add hand-crafted EH data.\n\n2009-04-09  Jakub Jelinek  <jakub@redhat.com>\n\n\t* testsuite/lib/libffi-dg.exp: Change copyright header to refer to\n\tversion 3 of the GNU General Public License and to point readers\n\tat the COPYING3 file and the FSF's license web page.\n\t* testsuite/libffi.call/call.exp: Likewise.\n\t* testsuite/libffi.special/special.exp: Likewise.\n\n2009-03-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* configure: Regenerate.\n\n2008-12-18  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\tPR libffi/26048\n\t* configure.ac (HAVE_AS_X86_PCREL): New test.\n\t* configure: Regenerate.\n\t* fficonfig.h.in: Regenerate.\n\t* src/x86/sysv.S [!FFI_NO_RAW_API]: Precalculate\n\tRAW_CLOSURE_CIF_OFFSET, RAW_CLOSURE_FUN_OFFSET,\n\tRAW_CLOSURE_USER_DATA_OFFSET for the Solaris 10/x86 assembler.\n\t(.eh_frame): Only use SYMBOL-. iff HAVE_AS_X86_PCREL.\n\t* src/x86/unix64.S (.Lstore_table): Move to .text section.\n\t(.Lload_table): Likewise.\n\t(.eh_frame): Only use SYMBOL-. iff HAVE_AS_X86_PCREL.\n\n2008-12-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* configure: Regenerate.\n\n2008-11-21  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* src/sparc/ffi.c (ffi_prep_cif_machdep): Add support for\n\tsigned/unsigned int8/16 return values.\n\t* src/sparc/v8.S (ffi_call_v8): Likewise.\n\t(ffi_closure_v8): Likewise.\n\n2008-09-26  Peter O'Gorman  <pogma@thewrittenword.com>\n\t    Steve Ellcey  <sje@cup.hp.com>\n\n\t* configure: Regenerate for new libtool.\n\t* Makefile.in: Ditto.\n\t* include/Makefile.in: Ditto.\n\t* aclocal.m4: Ditto.\n\n2008-08-25  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* src/powerpc/ffitarget.h (ffi_abi): Add FFI_LINUX and\n\tFFI_LINUX_SOFT_FLOAT to the POWERPC_FREEBSD enum.\n\tAdd note about flag bits used for FFI_SYSV_TYPE_SMALL_STRUCT.\n\tAdjust copyright notice.\n\t* src/powerpc/ffi.c: Add two new flags to indicate if we have one\n\tregister or two register to use for FFI_SYSV structs.\n\t(ffi_prep_cif_machdep): Pass the right register flag introduced above.\n\t(ffi_closure_helper_SYSV): Fix the return type for\n\tFFI_SYSV_TYPE_SMALL_STRUCT. Comment.\n\tAdjust copyright notice.\n\n2008-07-16  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (ffi_prep_closure_loc): Turn INSN into an unsigned\n\tint.\n\n2008-06-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* configure: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\n2008-06-07  Joseph Myers  <joseph@codesourcery.com>\n\n\t* configure.ac (parisc*-*-linux*, powerpc-*-sysv*,\n\tpowerpc-*-beos*): Remove.\n\t* configure: Regenerate.\n\n2008-05-09  Julian Brown  <julian@codesourcery.com>\n\n\t* Makefile.am (LTLDFLAGS): New.\n\t(libffi_la_LDFLAGS): Use above.\n\t* Makefile.in: Regenerate.\n\n2008-04-18  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR bootstrap/35457\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\n2008-03-26  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/sysv.S: Add .note.GNU-stack on Linux.\n\t* src/sh64/sysv.S: Likewise.\n\n2008-03-26  Daniel Jacobowitz  <dan@debian.org>\n\n\t* src/arm/sysv.S: Fix ARM comment marker.\n\n2008-03-26  Jakub Jelinek  <jakub@redhat.com>\n\n\t* src/alpha/osf.S: Add .note.GNU-stack on Linux.\n\t* src/s390/sysv.S: Likewise.\n\t* src/powerpc/ppc_closure.S: Likewise.\n\t* src/powerpc/sysv.S: Likewise.\n\t* src/x86/unix64.S: Likewise.\n\t* src/x86/sysv.S: Likewise.\n\t* src/sparc/v8.S: Likewise.\n\t* src/sparc/v9.S: Likewise.\n\t* src/m68k/sysv.S: Likewise.\n\t* src/arm/sysv.S: Likewise.\n\n2008-03-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* aclocal.m4: Regenerate.\n\t* configure: Likewise.\n\t* Makefile.in: Likewise.\n\t* include/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\n2008-02-12  Bjoern Koenig  <bkoenig@alpha-tierchen.de>\n\t    Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* configure.ac: Add amd64-*-freebsd* target.\n\t* configure: Regenerate.\n\n2008-01-30  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR libffi/34612\n\t* src/x86/sysv.S (ffi_closure_SYSV): Pop 4 byte from stack when\n\treturning struct.\n\n\t* testsuite/libffi.call/call.exp: Add \"-O2 -fomit-frame-pointer\"\n\ttests.\n\n2008-01-24  David Edelsohn  <edelsohn@gnu.org>\n\n\t* configure: Regenerate.\n\n2008-01-06  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* src/x86/ffi.c (ffi_prep_cif_machdep): Fix thinko.\n\n2008-01-05  Andreas Tobler  <a.tobler@schweiz.org>\n\n\tPR testsuite/32843\n\t* src/x86/ffi.c (ffi_prep_cif_machdep): Add code for\n\tsigned/unsigned int8/16 for X86_DARWIN.\n\tUpdated copyright info.\n\tHandle one and two byte structs with special cif->flags.\n\t* src/x86/ffitarget.h: Add special types for one and two byte structs.\n\tUpdated copyright info.\n\t* src/x86/darwin.S (ffi_call_SYSV): Rewrite to use a jump table like\n\tsysv.S\n\tRemove code to pop args from the stack after call.\n\tSpecial-case signed/unsigned for int8/16, one and two byte structs.\n\t(ffi_closure_raw_SYSV): Handle FFI_TYPE_UINT8,\n\tFFI_TYPE_SINT8, FFI_TYPE_UINT16, FFI_TYPE_SINT16, FFI_TYPE_UINT32,\n\tFFI_TYPE_SINT32.\n\tUpdated copyright info.\n\n2007-12-08  David Daney  <ddaney@avtrex.com>\n\n\t* src/mips/n32.S (ffi_call_N32):  Replace dadd with ADDU, dsub with\n\tSUBU, add with ADDU and use smaller code sequences.\n\n2007-12-07  David Daney  <ddaney@avtrex.com>\n\n\t* src/mips/ffi.c (ffi_prep_cif_machdep): Handle long double return\n\ttype.\n\n2007-12-06  David Daney  <ddaney@avtrex.com>\n\n\t* include/ffi.h.in (FFI_SIZEOF_JAVA_RAW): Define if not\talready\n\tdefined.\n\t(ffi_java_raw): New typedef.\n\t(ffi_java_raw_call, ffi_java_ptrarray_to_raw,\n\tffi_java_raw_to_ptrarray): Change parameter types from ffi_raw to\n\tffi_java_raw.\n\t(ffi_java_raw_closure) : Same.\n\t(ffi_prep_java_raw_closure, ffi_prep_java_raw_closure_loc): Change\n\tparameter types.\n\t* src/java_raw_api.c (ffi_java_raw_size):  Replace FFI_SIZEOF_ARG with\n\tFFI_SIZEOF_JAVA_RAW.\n\t(ffi_java_raw_to_ptrarray): Change type of raw to ffi_java_raw.\n\tReplace FFI_SIZEOF_ARG with FFI_SIZEOF_JAVA_RAW. Use\n\tsizeof(ffi_java_raw) for alignment calculations.\n\t(ffi_java_ptrarray_to_raw): Same.\n\t(ffi_java_rvalue_to_raw): Add special handling for FFI_TYPE_POINTER\n\tif FFI_SIZEOF_JAVA_RAW == 4.\n\t(ffi_java_raw_to_rvalue): Same.\n\t(ffi_java_raw_call): Change type of raw to ffi_java_raw.\n\t(ffi_java_translate_args): Same.\n\t(ffi_prep_java_raw_closure_loc, ffi_prep_java_raw_closure): Change\n\tparameter types.\n\t* src/mips/ffitarget.h (FFI_SIZEOF_JAVA_RAW): Define for N32 ABI.\n\n2007-12-06  David Daney  <ddaney@avtrex.com>\n\n\t* src/mips/n32.S (ffi_closure_N32): Use 64-bit add instruction on\n\tpointer values.\n\n2007-12-01  Andreas Tobler  <a.tobler@schweiz.org>\n\n\tPR libffi/31937\n\t* src/powerpc/ffitarget.h: Introduce new ABI FFI_LINUX_SOFT_FLOAT.\n\tAdd local FFI_TYPE_UINT128 to handle soft-float long-double-128.\n\t* src/powerpc/ffi.c: Distinguish between __NO_FPRS__ and not and\n\tset the NUM_FPR_ARG_REGISTERS according to.\n\tAdd support for potential soft-float support under hard-float\n\tarchitecture.\n\t(ffi_prep_args_SYSV): Set NUM_FPR_ARG_REGISTERS to 0 in case of\n\tFFI_LINUX_SOFT_FLOAT, handle float, doubles and long-doubles according\n\tto the FFI_LINUX_SOFT_FLOAT ABI.\n\t(ffi_prep_cif_machdep): Likewise.\n\t(ffi_closure_helper_SYSV): Likewise.\n\t* src/powerpc/ppc_closure.S: Make sure not to store float/double\n\ton archs where __NO_FPRS__ is true.\n\tAdd FFI_TYPE_UINT128 support.\n\t* src/powerpc/sysv.S: Add support for soft-float long-double-128.\n\tAdjust copyright notice.\n\n2007-11-25  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* src/closures.c: Move defintion of MAYBE_UNUSED from here to ...\n\t* include/ffi_common.h: ... here.\n\tUpdate copyright.\n\n2007-11-17  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* src/powerpc/sysv.S: Load correct cr to compare if we have long double.\n\t* src/powerpc/linux64.S: Likewise.\n\t* src/powerpc/ffi.c: Add a comment to show which part goes into cr6.\n\t* testsuite/libffi.call/return_ldl.c: New test.\n\n2007-09-04    <aph@redhat.com>\n\n\t* src/arm/sysv.S (UNWIND): New.\n\t(Whole file): Conditionally compile unwinder directives.\n\t* src/arm/sysv.S: Add unwinder directives.\n\n\t* src/arm/ffi.c (ffi_prep_args): Align structs by at least 4 bytes.\n\tOnly treat r0 as a struct address if we're actually returning a\n\tstruct by address.\n\tOnly copy the bytes that are actually within a struct.\n\t(ffi_prep_cif_machdep): A Composite Type not larger than 4 bytes\n\tis returned in r0, not passed by address.\n\t(ffi_call): Allocate a word-sized temporary for the case where\n\ta composite is returned in r0.\n\t(ffi_prep_incoming_args_SYSV): Align as necessary.\n\n2007-08-05  Steven Newbury  <s_j_newbury@yahoo.co.uk>\n\n\t* src/arm/ffi.c (FFI_INIT_TRAMPOLINE): Use __clear_cache instead of\n\tdirectly using the sys_cacheflush syscall.\n\n2007-07-27  Andrew Haley  <aph@redhat.com>\n\n\t* src/arm/sysv.S (ffi_closure_SYSV): Add soft-float.\n\n2007-09-03  Maciej W. Rozycki  <macro@linux-mips.org>\n\n\t* Makefile.am: Unify MIPS_IRIX and MIPS_LINUX into MIPS.\n\t* configure.ac: Likewise.\n\t* Makefile.in: Regenerate.\n\t* include/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\t* configure: Likewise.\n\n2007-08-24  David Daney  <ddaney@avtrex.com>\n\n\t* testsuite/libffi.call/return_sl.c: New test.\n\n2007-08-10  David Daney  <ddaney@avtrex.com>\n\n\t* testsuite/libffi.call/cls_multi_ushort.c,\n\ttestsuite/libffi.call/cls_align_uint16.c,\n\ttestsuite/libffi.call/nested_struct1.c,\n\ttestsuite/libffi.call/nested_struct3.c,\n\ttestsuite/libffi.call/cls_7_1_byte.c,\n\ttestsuite/libffi.call/nested_struct5.c,\n\ttestsuite/libffi.call/cls_double.c,\n\ttestsuite/libffi.call/nested_struct7.c,\n\ttestsuite/libffi.call/cls_sint.c,\n\ttestsuite/libffi.call/nested_struct9.c,\n\ttestsuite/libffi.call/cls_20byte1.c,\n\ttestsuite/libffi.call/cls_multi_sshortchar.c,\n\ttestsuite/libffi.call/cls_align_sint64.c,\n\ttestsuite/libffi.call/cls_3byte2.c,\n\ttestsuite/libffi.call/cls_multi_schar.c,\n\ttestsuite/libffi.call/cls_multi_uchar.c,\n\ttestsuite/libffi.call/cls_19byte.c,\n\ttestsuite/libffi.call/cls_9byte1.c,\n\ttestsuite/libffi.call/cls_align_float.c,\n\ttestsuite/libffi.call/closure_fn1.c,\n\ttestsuite/libffi.call/problem1.c,\n\ttestsuite/libffi.call/closure_fn3.c,\n\ttestsuite/libffi.call/cls_sshort.c,\n\ttestsuite/libffi.call/closure_fn5.c,\n\ttestsuite/libffi.call/cls_align_double.c,\n\ttestsuite/libffi.call/nested_struct.c,\n\ttestsuite/libffi.call/cls_2byte.c,\n\ttestsuite/libffi.call/nested_struct10.c,\n\ttestsuite/libffi.call/cls_4byte.c,\n\ttestsuite/libffi.call/cls_6byte.c,\n\ttestsuite/libffi.call/cls_8byte.c,\n\ttestsuite/libffi.call/cls_multi_sshort.c,\n\ttestsuite/libffi.call/cls_align_sint16.c,\n\ttestsuite/libffi.call/cls_align_uint32.c,\n\ttestsuite/libffi.call/cls_20byte.c,\n\ttestsuite/libffi.call/cls_float.c,\n\ttestsuite/libffi.call/nested_struct2.c,\n\ttestsuite/libffi.call/cls_5_1_byte.c,\n\ttestsuite/libffi.call/nested_struct4.c,\n\ttestsuite/libffi.call/cls_24byte.c,\n\ttestsuite/libffi.call/nested_struct6.c,\n\ttestsuite/libffi.call/cls_64byte.c,\n\ttestsuite/libffi.call/nested_struct8.c,\n\ttestsuite/libffi.call/cls_uint.c,\n\ttestsuite/libffi.call/cls_multi_ushortchar.c,\n\ttestsuite/libffi.call/cls_schar.c,\n\ttestsuite/libffi.call/cls_uchar.c,\n\ttestsuite/libffi.call/cls_align_uint64.c,\n\ttestsuite/libffi.call/cls_ulonglong.c,\n\ttestsuite/libffi.call/cls_align_longdouble.c,\n\ttestsuite/libffi.call/cls_1_1byte.c,\n\ttestsuite/libffi.call/cls_12byte.c,\n\ttestsuite/libffi.call/cls_3_1byte.c,\n\ttestsuite/libffi.call/cls_3byte1.c,\n\ttestsuite/libffi.call/cls_4_1byte.c,\n\ttestsuite/libffi.call/cls_6_1_byte.c,\n\ttestsuite/libffi.call/cls_16byte.c,\n\ttestsuite/libffi.call/cls_18byte.c,\n\ttestsuite/libffi.call/closure_fn0.c,\n\ttestsuite/libffi.call/cls_9byte2.c,\n\ttestsuite/libffi.call/closure_fn2.c,\n\ttestsuite/libffi.call/closure_fn4.c,\n\ttestsuite/libffi.call/cls_ushort.c,\n\ttestsuite/libffi.call/closure_fn6.c,\n\ttestsuite/libffi.call/cls_5byte.c,\n\ttestsuite/libffi.call/cls_align_pointer.c,\n\ttestsuite/libffi.call/cls_7byte.c,\n\ttestsuite/libffi.call/cls_align_sint32.c,\n\ttestsuite/libffi.special/unwindtest_ffi_call.cc,\n\ttestsuite/libffi.special/unwindtest.cc: Remove xfail for mips64*-*-*.\n\n2007-08-10  David Daney  <ddaney@avtrex.com>\n\n\tPR libffi/28313\n\t* configure.ac: Don't treat mips64 as a special case.\n\t* Makefile.am (nodist_libffi_la_SOURCES): Add n32.S.\n\t* configure: Regenerate\n\t* Makefile.in: Ditto.\n\t* fficonfig.h.in: Ditto.\n\t* src/mips/ffitarget.h (REG_L, REG_S, SUBU, ADDU, SRL, LI): Indent.\n\t(LA, EH_FRAME_ALIGN, FDE_ADDR_BYTES): New preprocessor macros.\n\t(FFI_DEFAULT_ABI): Set for n64 case.\n\t(FFI_CLOSURES, FFI_TRAMPOLINE_SIZE): Define for n32 and n64 cases.\n\t* src/mips/n32.S (ffi_call_N32): Add debug macros and labels for FDE.\n\t(ffi_closure_N32): New function.\n\t(.eh_frame): New section\n\t* src/mips/o32.S: Clean up comments.\n\t(ffi_closure_O32): Pass ffi_closure parameter in $12.\n\t* src/mips/ffi.c: Use FFI_MIPS_N32 instead of\n\t_MIPS_SIM == _ABIN32 throughout.\n\t(FFI_MIPS_STOP_HERE): New, use in place of\n\tffi_stop_here.\n\t(ffi_prep_args): Use unsigned long to hold pointer values.  Rewrite\n\tto support n32/n64 ABIs.\n\t(calc_n32_struct_flags): Rewrite.\n\t(calc_n32_return_struct_flags): Remove unused variable.  Reverse\n\tposition of flag bits.\n\t(ffi_prep_cif_machdep): Rewrite n32 portion.\n\t(ffi_call): Enable for n64.  Add special handling for small structure\n\treturn values.\n\t(ffi_prep_closure_loc): Add n32 and n64 support.\n\t(ffi_closure_mips_inner_O32): Add cast to silence warning.\n\t(copy_struct_N32, ffi_closure_mips_inner_N32): New functions.\n\n2007-08-08  David Daney  <ddaney@avtrex.com>\n\n\t* testsuite/libffi.call/ffitest.h (ffi_type_mylong): Remove definition.\n\t* testsuite/libffi.call/cls_align_uint16.c (main): Use correct type\n\tspecifiers.\n\t* testsuite/libffi.call/nested_struct1.c (main): Ditto.\n\t* testsuite/libffi.call/cls_sint.c (main): Ditto.\n\t* testsuite/libffi.call/nested_struct9.c (main): Ditto.\n\t* testsuite/libffi.call/cls_20byte1.c (main): Ditto.\n\t* testsuite/libffi.call/cls_9byte1.c (main): Ditto.\n\t* testsuite/libffi.call/closure_fn1.c (main): Ditto.\n\t* testsuite/libffi.call/closure_fn3.c (main): Ditto.\n\t* testsuite/libffi.call/return_dbl2.c (main): Ditto.\n\t* testsuite/libffi.call/cls_sshort.c (main): Ditto.\n\t* testsuite/libffi.call/return_fl3.c (main): Ditto.\n\t* testsuite/libffi.call/closure_fn5.c (main): Ditto.\n\t* testsuite/libffi.call/nested_struct.c (main): Ditto.\n\t* testsuite/libffi.call/nested_struct10.c (main): Ditto.\n\t* testsuite/libffi.call/return_ll1.c (main): Ditto.\n\t* testsuite/libffi.call/cls_8byte.c (main): Ditto.\n\t* testsuite/libffi.call/cls_align_uint32.c (main): Ditto.\n\t* testsuite/libffi.call/cls_align_sint16.c (main): Ditto.\n\t* testsuite/libffi.call/cls_20byte.c (main): Ditto.\n\t* testsuite/libffi.call/nested_struct2.c (main): Ditto.\n\t* testsuite/libffi.call/cls_24byte.c (main): Ditto.\n\t* testsuite/libffi.call/nested_struct6.c (main): Ditto.\n\t* testsuite/libffi.call/cls_uint.c (main): Ditto.\n\t* testsuite/libffi.call/cls_12byte.c (main): Ditto.\n\t* testsuite/libffi.call/cls_16byte.c (main): Ditto.\n\t* testsuite/libffi.call/closure_fn0.c (main): Ditto.\n\t* testsuite/libffi.call/cls_9byte2.c (main): Ditto.\n\t* testsuite/libffi.call/closure_fn2.c (main): Ditto.\n\t* testsuite/libffi.call/return_dbl1.c (main): Ditto.\n\t* testsuite/libffi.call/closure_fn4.c (main): Ditto.\n\t* testsuite/libffi.call/closure_fn6.c (main): Ditto.\n\t* testsuite/libffi.call/cls_align_sint32.c (main): Ditto.\n\n2007-08-07  Andrew Haley  <aph@redhat.com>\n\n\t* src/x86/sysv.S (ffi_closure_raw_SYSV): Fix typo in previous\n\tcheckin.\n\n2007-08-06  Andrew Haley  <aph@redhat.com>\n\n\tPR testsuite/32843\n\t* src/x86/sysv.S (ffi_closure_raw_SYSV): Handle FFI_TYPE_UINT8,\n\tFFI_TYPE_SINT8, FFI_TYPE_UINT16, FFI_TYPE_SINT16, FFI_TYPE_UINT32,\n\tFFI_TYPE_SINT32.\n\n2007-08-02  David Daney  <ddaney@avtrex.com>\n\n\t* testsuite/libffi.call/return_ul.c (main): Define return type as\n\tffi_arg.  Use proper printf conversion specifier.\n\n2007-07-30  Andrew Haley  <aph@redhat.com>\n\n\tPR testsuite/32843\n\t* src/x86/ffi.c (ffi_prep_cif_machdep): in x86 case, add code for\n\tsigned/unsigned int8/16.\n\t* src/x86/sysv.S (ffi_call_SYSV): Rewrite to:\n\tUse a jump table.\n\tRemove code to pop args from the stack after call.\n\tSpecial-case signed/unsigned int8/16.\n\t* testsuite/libffi.call/return_sc.c (main): Revert.\n\n2007-07-26  Richard Guenther  <rguenther@suse.de>\n\n\tPR testsuite/32843\n\t* testsuite/libffi.call/return_sc.c (main): Verify call\n\tresult as signed char, not ffi_arg.\n\n2007-07-16  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* configure.ac (i?86-*-solaris2.1[0-9]): Set TARGET to X86_64.\n\t* configure: Regenerate.\n\n2007-07-11  David Daney  <ddaney@avtrex.com>\n\n\t* src/mips/ffi.c: Don't include sys/cachectl.h.\n\t(ffi_prep_closure_loc): Use __builtin___clear_cache() instead of\n\tcacheflush().\n\n2007-05-18  Aurelien Jarno  <aurelien@aurel32.net>\n\n\t* src/arm/ffi.c (ffi_prep_closure_loc): Renamed and ajusted\n\tfrom (ffi_prep_closure): ... this.\n\t(FFI_INIT_TRAMPOLINE): Adjust.\n\n2005-12-31  Phil Blundell  <pb@reciva.com>\n\n\t* src/arm/ffi.c (ffi_prep_incoming_args_SYSV,\n\tffi_closure_SYSV_inner, ffi_prep_closure): New, add closure support.\n\t* src/arm/sysv.S(ffi_closure_SYSV): Likewise.\n\t* src/arm/ffitarget.h (FFI_TRAMPOLINE_SIZE): Likewise.\n\t(FFI_CLOSURES): Enable closure support.\n\n2007-07-03  Andrew Haley  <aph@hedges.billgatliff.com>\n\n\t* testsuite/libffi.call/cls_multi_ushort.c,\n\ttestsuite/libffi.call/cls_align_uint16.c,\n\ttestsuite/libffi.call/nested_struct1.c,\n\ttestsuite/libffi.call/nested_struct3.c,\n\ttestsuite/libffi.call/cls_7_1_byte.c,\n\ttestsuite/libffi.call/cls_double.c,\n\ttestsuite/libffi.call/nested_struct5.c,\n\ttestsuite/libffi.call/nested_struct7.c,\n\ttestsuite/libffi.call/cls_sint.c,\n\ttestsuite/libffi.call/nested_struct9.c,\n\ttestsuite/libffi.call/cls_20byte1.c,\n\ttestsuite/libffi.call/cls_multi_sshortchar.c,\n\ttestsuite/libffi.call/cls_align_sint64.c,\n\ttestsuite/libffi.call/cls_3byte2.c,\n\ttestsuite/libffi.call/cls_multi_schar.c,\n\ttestsuite/libffi.call/cls_multi_uchar.c,\n\ttestsuite/libffi.call/cls_19byte.c,\n\ttestsuite/libffi.call/cls_9byte1.c,\n\ttestsuite/libffi.call/cls_align_float.c,\n\ttestsuite/libffi.call/closure_fn1.c,\n\ttestsuite/libffi.call/problem1.c,\n\ttestsuite/libffi.call/closure_fn3.c,\n\ttestsuite/libffi.call/cls_sshort.c,\n\ttestsuite/libffi.call/closure_fn5.c,\n\ttestsuite/libffi.call/cls_align_double.c,\n\ttestsuite/libffi.call/cls_2byte.c,\n\ttestsuite/libffi.call/nested_struct.c,\n\ttestsuite/libffi.call/nested_struct10.c,\n\ttestsuite/libffi.call/cls_4byte.c,\n\ttestsuite/libffi.call/cls_6byte.c,\n\ttestsuite/libffi.call/cls_8byte.c,\n\ttestsuite/libffi.call/cls_multi_sshort.c,\n\ttestsuite/libffi.call/cls_align_uint32.c,\n\ttestsuite/libffi.call/cls_align_sint16.c,\n\ttestsuite/libffi.call/cls_float.c,\n\ttestsuite/libffi.call/cls_20byte.c,\n\ttestsuite/libffi.call/cls_5_1_byte.c,\n\ttestsuite/libffi.call/nested_struct2.c,\n\ttestsuite/libffi.call/cls_24byte.c,\n\ttestsuite/libffi.call/nested_struct4.c,\n\ttestsuite/libffi.call/nested_struct6.c,\n\ttestsuite/libffi.call/cls_64byte.c,\n\ttestsuite/libffi.call/nested_struct8.c,\n\ttestsuite/libffi.call/cls_uint.c,\n\ttestsuite/libffi.call/cls_multi_ushortchar.c,\n\ttestsuite/libffi.call/cls_schar.c,\n\ttestsuite/libffi.call/cls_uchar.c,\n\ttestsuite/libffi.call/cls_align_uint64.c,\n\ttestsuite/libffi.call/cls_ulonglong.c,\n\ttestsuite/libffi.call/cls_align_longdouble.c,\n\ttestsuite/libffi.call/cls_1_1byte.c,\n\ttestsuite/libffi.call/cls_12byte.c,\n\ttestsuite/libffi.call/cls_3_1byte.c,\n\ttestsuite/libffi.call/cls_3byte1.c,\n\ttestsuite/libffi.call/cls_4_1byte.c,\n\ttestsuite/libffi.call/cls_6_1_byte.c,\n\ttestsuite/libffi.call/cls_16byte.c,\n\ttestsuite/libffi.call/cls_18byte.c,\n\ttestsuite/libffi.call/closure_fn0.c,\n\ttestsuite/libffi.call/cls_9byte2.c,\n\ttestsuite/libffi.call/closure_fn2.c,\n\ttestsuite/libffi.call/closure_fn4.c,\n\ttestsuite/libffi.call/cls_ushort.c,\n\ttestsuite/libffi.call/closure_fn6.c,\n\ttestsuite/libffi.call/cls_5byte.c,\n\ttestsuite/libffi.call/cls_align_pointer.c,\n\ttestsuite/libffi.call/cls_7byte.c,\n\ttestsuite/libffi.call/cls_align_sint32.c,\n\ttestsuite/libffi.special/unwindtest_ffi_call.cc,\n\ttestsuite/libffi.special/unwindtest.cc: Enable for ARM.\n\n2007-07-05  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* aclocal.m4: Regenerated.\n\n2007-06-02  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* configure: Regenerate.\n\n2007-05-23  Steve Ellcey  <sje@cup.hp.com>\n\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\n2007-05-10  Roman Zippel <zippel@linux-m68k.org>\n\n\t* src/m68k/ffi.c (ffi_prep_incoming_args_SYSV,\n\tffi_closure_SYSV_inner,ffi_prep_closure): New, add closure support.\n\t* src/m68k/sysv.S(ffi_closure_SYSV,ffi_closure_struct_SYSV): Likewise.\n\t* src/m68k/ffitarget.h (FFI_TRAMPOLINE_SIZE): Likewise.\n\t(FFI_CLOSURES): Enable closure support.\n\n2007-05-10  Roman Zippel <zippel@linux-m68k.org>\n\n\t* configure.ac (HAVE_AS_CFI_PSEUDO_OP): New test.\n\t* configure: Regenerate.\n\t* fficonfig.h.in: Regenerate.\n\t* src/m68k/sysv.S (CFI_STARTPROC,CFI_ENDPROC,\n\tCFI_OFFSET,CFI_DEF_CFA): New macros.\n\t(ffi_call_SYSV): Add callframe annotation.\n\n2007-05-10  Roman Zippel <zippel@linux-m68k.org>\n\n\t* src/m68k/ffi.c (ffi_prep_args,ffi_prep_cif_machdep): Fix\n\tnumerous test suite failures.\n\t* src/m68k/sysv.S (ffi_call_SYSV): Likewise.\n\n2007-04-11  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* Makefile.am (EXTRA_DIST): Bring up to date.\n\t* Makefile.in: Regenerate.\n\t* src/frv/eabi.S: Remove RCS keyword.\n\n2007-04-06  Richard Henderson  <rth@redhat.com>\n\n\t* configure.ac: Tidy target case.\n\t(HAVE_LONG_DOUBLE): Allow the target to override.\n\t* configure: Regenerate.\n\t* include/ffi.h.in: Don't define ffi_type_foo if\n\tLIBFFI_HIDE_BASIC_TYPES is defined.\n\t(ffi_type_longdouble): If not HAVE_LONG_DOUBLE, define\n\tto ffi_type_double.\n\t* types.c (LIBFFI_HIDE_BASIC_TYPES): Define.\n\t(FFI_TYPEDEF, ffi_type_void): Mark the data const.\n\t(ffi_type_longdouble): Special case for Alpha.  Don't define\n\tif long double == double.\n\n\t* src/alpha/ffi.c (FFI_TYPE_LONGDOUBLE): Assert unique value.\n\t(ffi_prep_cif_machdep): Handle it as the 128-bit type.\n\t(ffi_call, ffi_closure_osf_inner): Likewise.\n\t(ffi_closure_osf_inner): Likewise.  Mark hidden.\n\t(ffi_call_osf, ffi_closure_osf): Mark hidden.\n\t* src/alpha/ffitarget.h (FFI_LAST_ABI): Tidy definition.\n\t* src/alpha/osf.S (ffi_call_osf, ffi_closure_osf): Mark hidden.\n\t(load_table): Handle 128-bit long double.\n\n\t* testsuite/libffi.call/float4.c: Add -mieee for alpha.\n\n2007-04-06  Tom Tromey  <tromey@redhat.com>\n\n\tPR libffi/31491:\n\t* README: Fixed bug in example.\n\n2007-04-03  Jakub Jelinek  <jakub@redhat.com>\n\n\t* src/closures.c: Include sys/statfs.h.\n\t(_GNU_SOURCE): Define on Linux.\n\t(FFI_MMAP_EXEC_SELINUX): Define.\n\t(selinux_enabled): New variable.\n\t(selinux_enabled_check): New function.\n\t(is_selinux_enabled): Define.\n\t(dlmmap): Use it.\n\n2007-03-24  Uros Bizjak  <ubizjak@gmail.com>\n\n\t* testsuite/libffi.call/return_fl2.c (return_fl): Mark as static.\n\tUse 'volatile float sum' to create sum of floats to avoid false\n\tnegative due to excess precision on ix86 targets.\n\t(main): Ditto.\n\n2007-03-08  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* src/powerpc/ffi.c (flush_icache): Fix left-over from previous\n\tpatch.\n\t(ffi_prep_closure_loc): Remove unneeded casts.  Add needed ones.\n\n2007-03-07  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* include/ffi.h.in (ffi_closure_alloc, ffi_closure_free): New.\n\t(ffi_prep_closure_loc): New.\n\t(ffi_prep_raw_closure_loc): New.\n\t(ffi_prep_java_raw_closure_loc): New.\n\t* src/closures.c: New file.\n\t* src/dlmalloc.c [FFI_MMAP_EXEC_WRIT] (struct malloc_segment):\n\tReplace sflags with exec_offset.\n\t[FFI_MMAP_EXEC_WRIT] (mmap_exec_offset, add_segment_exec_offset,\n\tsub_segment_exec_offset): New macros.\n\t(get_segment_flags, set_segment_flags, check_segment_merge): New\n\tmacros.\n\t(is_mmapped_segment, is_extern_segment): Use get_segment_flags.\n\t(add_segment, sys_alloc, create_mspace, create_mspace_with_base,\n\tdestroy_mspace): Use new macros.\n\t(sys_alloc): Silence warning.\n\t* Makefile.am (libffi_la_SOURCES): Add src/closures.c.\n\t* Makefile.in: Rebuilt.\n\t* src/prep_cif [FFI_CLOSURES] (ffi_prep_closure): Implement in\n\tterms of ffi_prep_closure_loc.\n\t* src/raw_api.c (ffi_prep_raw_closure_loc): Renamed and adjusted\n\tfrom...\n\t(ffi_prep_raw_closure): ... this.  Re-implement in terms of the\n\trenamed version.\n\t* src/java_raw_api (ffi_prep_java_raw_closure_loc): Renamed and\n\tadjusted from...\n\t(ffi_prep_java_raw_closure): ... this.  Re-implement in terms of\n\tthe renamed version.\n\t* src/alpha/ffi.c (ffi_prep_closure_loc): Renamed from\n\t(ffi_prep_closure): ... this.\n\t* src/pa/ffi.c: Likewise.\n\t* src/cris/ffi.c: Likewise.  Adjust.\n\t* src/frv/ffi.c: Likewise.\n\t* src/ia64/ffi.c: Likewise.\n\t* src/mips/ffi.c: Likewise.\n\t* src/powerpc/ffi_darwin.c: Likewise.\n\t* src/s390/ffi.c: Likewise.\n\t* src/sh/ffi.c: Likewise.\n\t* src/sh64/ffi.c: Likewise.\n\t* src/sparc/ffi.c: Likewise.\n\t* src/x86/ffi64.c: Likewise.\n\t* src/x86/ffi.c: Likewise.\n\t(FFI_INIT_TRAMPOLINE): Adjust.\n\t(ffi_prep_raw_closure_loc): Renamed and adjusted from...\n\t(ffi_prep_raw_closure): ... this.\n\t* src/powerpc/ffi.c (ffi_prep_closure_loc): Renamed from\n\t(ffi_prep_closure): ... this.\n\t(flush_icache): Adjust.\n\n2007-03-07  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* src/dlmalloc.c: New file, imported version 2.8.3 of Doug\n\tLea's malloc.\n\n2007-03-01  Brooks Moses  <brooks.moses@codesourcery.com>\n\n\t* Makefile.am: Add dummy install-pdf target.\n\t* Makefile.in: Regenerate\n\n2007-02-13  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* src/s390/ffi.c (ffi_prep_args, ffi_prep_cif_machdep,\n\tffi_closure_helper_SYSV): Add long double handling.\n\n2007-02-02  Jakub Jelinek  <jakub@redhat.com>\n\n\t* src/powerpc/linux64.S (ffi_call_LINUX64): Move restore of r2\n\timmediately after bctrl instruction.\n\n2007-01-18  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* Makefile.am (all-recursive, install-recursive,\n\tmostlyclean-recursive, clean-recursive, distclean-recursive,\n\tmaintainer-clean-recursive): Add missing targets.\n\t* Makefile.in: Rebuilt.\n\n2006-12-14  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* configure.ac: Add TARGET for x86_64-*-darwin*.\n\t* Makefile.am (nodist_libffi_la_SOURCES): Add rules for 64-bit sources\n\tfor X86_DARWIN.\n\t* src/x86/ffitarget.h: Set trampoline size for x86_64-*-darwin*.\n\t* src/x86/darwin64.S: New file for x86_64-*-darwin* support.\n\t* configure: Regenerate.\n\t* Makefile.in: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\t* testsuite/libffi.special/unwindtest_ffi_call.cc: New test case for\n\tffi_call only.\n\n2006-12-13  Andreas Tobler <a.tobler@schweiz.org>\n\n\t* aclocal.m4: Regenerate with aclocal -I .. as written in the\n\tMakefile.am.\n\n2006-10-31  Geoffrey Keating  <geoffk@apple.com>\n\n\t* src/powerpc/ffi_darwin.c (darwin_adjust_aggregate_sizes): New.\n\t(ffi_prep_cif_machdep): Call darwin_adjust_aggregate_sizes for\n\tDarwin.\n\t* testsuite/libffi.call/nested_struct4.c: Remove Darwin XFAIL.\n\t* testsuite/libffi.call/nested_struct6.c: Remove Darwin XFAIL.\n\n2006-10-10  Paolo Bonzini  <bonzini@gnu.org>\n\t    Sandro Tolaini  <tolaini@libero.it>\n\n\t* configure.ac [i*86-*-darwin*]: Set X86_DARWIN symbol and\n\tconditional.\n\t* configure: Regenerated.\n\t* Makefile.am (nodist_libffi_la_SOURCES) [X86_DARWIN]: New case.\n\t(EXTRA_DIST): Add src/x86/darwin.S.\n\t* Makefile.in: Regenerated.\n\t* include/Makefile.in: Regenerated.\n\t* testsuite/Makefile.in: Regenerated.\n\n\t* src/x86/ffi.c (ffi_prep_cif_machdep) [X86_DARWIN]: Treat like\n\tX86_WIN32, and additionally align stack to 16 bytes.\n\t* src/x86/darwin.S: New, based on sysv.S.\n\t* src/prep_cif.c (ffi_prep_cif) [X86_DARWIN]: Align > 8-byte structs.\n\n2006-09-12  David Daney  <ddaney@avtrex.com>\n\n\tPR libffi/23935\n\t* include/Makefile.am: Install both ffi.h and ffitarget.h in\n\t$(libdir)/gcc/$(target_alias)/$(gcc_version)/include.\n\t* aclocal.m4: Regenerated for automake 1.9.6.\n\t* Makefile.in: Regenerated.\n\t* include/Makefile.in: Regenerated.\n\t* testsuite/Makefile.in: Regenerated.\n\n2006-08-17  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* include/ffi_common.h (struct): Revert accidental commit.\n\n2006-08-15  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* include/ffi_common.h: Remove lint directives.\n\t* include/ffi.h.in: Likewise.\n\n2006-07-25  Torsten Schoenfeld  <kaffeetisch@gmx.de>\n\n\t* include/ffi.h.in (ffi_type_ulong, ffi_type_slong): Define correctly\n\tfor 32-bit architectures.\n\t* testsuite/libffi.call/return_ul.c: New test case.\n\n2006-07-19  David Daney  <ddaney@avtrex.com>\n\n\t* testsuite/libffi.call/closure_fn6.c: Remove xfail for mips,\n\txfail remains for mips64.\n\n2006-05-23  Carlos O'Donell  <carlos@codesourcery.com>\n\n\t* Makefile.am: Add install-html target. Add install-html to .PHONY\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\n2006-05-18  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n\n\t* pa/ffi.c (ffi_prep_args_pa32): Load floating point arguments from\n\tstack slot.\n\n2006-04-22  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* README: Remove notice about 'Crazy Comments'.\n\t* src/debug.c: Remove lint directives. Cleanup white spaces.\n\t* src/java_raw_api.c: Likewise.\n\t* src/prep_cif.c: Likewise.\n\t* src/raw_api.c: Likewise.\n\t* src/ffitest.c: Delete. No longer needed, all test cases migrated\n\tto the testsuite.\n\t* src/arm/ffi.c: Remove lint directives.\n\t* src/m32r/ffi.c: Likewise.\n\t* src/pa/ffi.c: Likewise.\n\t* src/powerpc/ffi.c: Likewise.\n\t* src/powerpc/ffi_darwin.c: Likewise.\n\t* src/sh/ffi.c: Likewise.\n\t* src/sh64/ffi.c: Likewise.\n\t* src/x86/ffi.c: Likewise.\n\t* testsuite/libffi.call/float2.c: Likewise.\n\t* testsuite/libffi.call/promotion.c: Likewise.\n\t* testsuite/libffi.call/struct1.c: Likewise.\n\n2006-04-13  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/pa/hpux32.S: Correct unwind offset calculation for\n\tffi_closure_pa32.\n\t* src/pa/linux.S: Likewise.\n\n2006-04-12  James E Wilson  <wilson@specifix.com>\n\n\tPR libgcj/26483\n\t* src/ia64/ffi.c (stf_spill, ldf_fill): Rewrite as macros.\n\t(hfa_type_load): Call stf_spill.\n\t(hfa_type_store): Call ldf_fill.\n\t(ffi_call): Adjust calls to above routines.  Add local temps for\n\tmacro result.\n\n2006-04-10  Matthias Klose  <doko@debian.org>\n\n\t* testsuite/lib/libffi-dg.exp (libffi-init): Recognize multilib\n\tdirectory names containing underscores.\n\n2006-04-07  James E Wilson  <wilson@specifix.com>\n\n\t* testsuite/libffi.call/float4.c: New testcase.\n\n2006-04-05  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n\t    Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* Makefile.am: Add PA_HPUX port.\n\t* Makefile.in: Regenerate.\n\t* include/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\t* configure.ac: Add PA_HPUX rules.\n\t* configure: Regenerate.\n\t* src/pa/ffitarget.h: Rename linux target to PA_LINUX.\n\tAdd PA_HPUX and PA64_HPUX.\n\tRename FFI_LINUX ABI to FFI_PA32 ABI.\n\t(FFI_TRAMPOLINE_SIZE): Define for 32-bit HP-UX targets.\n\t(FFI_TYPE_SMALL_STRUCT2): Define.\n\t(FFI_TYPE_SMALL_STRUCT4): Likewise.\n\t(FFI_TYPE_SMALL_STRUCT8): Likewise.\n\t(FFI_TYPE_SMALL_STRUCT3): Redefine.\n\t(FFI_TYPE_SMALL_STRUCT5): Likewise.\n\t(FFI_TYPE_SMALL_STRUCT6): Likewise.\n\t(FFI_TYPE_SMALL_STRUCT7): Likewise.\n\t* src/pa/ffi.c (ROUND_DOWN): Delete.\n\t(fldw, fstw, fldd, fstd): Use '__asm__'.\n\t(ffi_struct_type): Add support for FFI_TYPE_SMALL_STRUCT2,\n\tFFI_TYPE_SMALL_STRUCT4 and FFI_TYPE_SMALL_STRUCT8.\n\t(ffi_prep_args_LINUX): Rename to ffi_prep_args_pa32. Update comment.\n\tSimplify incrementing of stack slot variable. Change type of local\n\t'n' to unsigned int.\n\t(ffi_size_stack_LINUX): Rename to ffi_size_stack_pa32. Handle long\n\tdouble on PA_HPUX.\n\t(ffi_prep_cif_machdep): Likewise.\n\t(ffi_call): Likewise.\n\t(ffi_closure_inner_LINUX): Rename to ffi_closure_inner_pa32. Change\n\treturn type to ffi_status. Simplify incrementing of stack slot\n\tvariable. Only copy floating point argument registers when PA_LINUX\n\tis true. Reformat debug statement.\n\tAdd support for FFI_TYPE_SMALL_STRUCT2, FFI_TYPE_SMALL_STRUCT4 and\n\tFFI_TYPE_SMALL_STRUCT8.\n\t(ffi_closure_LINUX): Rename to ffi_closure_pa32. Add 'extern' to\n\tdeclaration.\n\t(ffi_prep_closure): Make linux trampoline conditional on PA_LINUX.\n\tAdd nops to cache flush.  Add trampoline for PA_HPUX.\n\t* src/pa/hpux32.S: New file.\n\t* src/pa/linux.S (ffi_call_LINUX): Rename to ffi_call_pa32. Rename\n\tffi_prep_args_LINUX to ffi_prep_args_pa32.\n\tLocalize labels. Add support for 2, 4 and 8-byte small structs. Handle\n\tunaligned destinations in 3, 5, 6 and 7-byte small structs. Order\n\targument type checks so that common argument types appear first.\n\t(ffi_closure_LINUX): Rename to ffi_closure_pa32. Rename\n\tffi_closure_inner_LINUX to ffi_closure_inner_pa32.\n\n2006-03-24  Alan Modra  <amodra@bigpond.net.au>\n\n\t* src/powerpc/ffitarget.h (enum ffi_abi): Add FFI_LINUX.  Default\n\tfor 32-bit using IBM extended double format.  Fix FFI_LAST_ABI.\n\t* src/powerpc/ffi.c (ffi_prep_args_SYSV): Handle linux variant of\n\tFFI_TYPE_LONGDOUBLE.\n\t(ffi_prep_args64): Assert using IBM extended double.\n\t(ffi_prep_cif_machdep): Don't munge FFI_TYPE_LONGDOUBLE type.\n\tHandle FFI_LINUX FFI_TYPE_LONGDOUBLE return and args.\n\t(ffi_call): Handle FFI_LINUX.\n\t(ffi_closure_helper_SYSV): Non FFI_LINUX long double return needs\n\tgpr3 return pointer as for struct return.  Handle FFI_LINUX\n\tFFI_TYPE_LONGDOUBLE return and args.  Don't increment \"nf\"\n\tunnecessarily.\n\t* src/powerpc/ppc_closure.S (ffi_closure_SYSV): Load both f1 and f2\n\tfor FFI_TYPE_LONGDOUBLE.  Move epilogue insns into case table.\n\tDon't use r6 as pointer to results, instead use sp offset.  Don't\n\tmake a special call to load lr with case table address, instead\n\tuse offset from previous call.\n\t* src/powerpc/sysv.S (ffi_call_SYSV): Save long double return.\n\t* src/powerpc/linux64.S (ffi_call_LINUX64): Simplify long double\n\treturn.\n\n2006-03-15  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh64/ffi.c (ffi_prep_cif_machdep): Handle float arguments\n\tpassed with FP registers correctly.\n\t(ffi_closure_helper_SYSV): Likewise.\n\t* src/sh64/sysv.S: Likewise.\n\n2006-03-01  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.special/unwindtest.cc (closure_test_fn): Mark cif,\n\targs and userdata unused.\n\t(closure_test_fn1): Mark cif and userdata unused.\n\t(main): Remove unused res.\n\n2006-02-28  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/call.exp: Adjust FSF address. Add test runs for\n\t-O2, -O3, -Os and the warning flags -W -Wall.\n\t* testsuite/libffi.special/special.exp: Likewise.\n\t* testsuite/libffi.call/ffitest.h: Add an __UNUSED__ macro to mark\n\tunused parameter unused for gcc or else do nothing.\n\t* testsuite/libffi.special/ffitestcxx.h: Likewise.\n\t* testsuite/libffi.call/cls_12byte.c (cls_struct_12byte_gn): Mark cif\n\tand userdata unused.\n\t* testsuite/libffi.call/cls_16byte.c (cls_struct_16byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_18byte.c (cls_struct_18byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_19byte.c (cls_struct_19byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_1_1byte.c (cls_struct_1_1byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_20byte.c (cls_struct_20byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_20byte1.c (cls_struct_20byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_24byte.c (cls_struct_24byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_2byte.c (cls_struct_2byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_3_1byte.c (cls_struct_3_1byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_3byte1.c (cls_struct_3byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_3byte2.c (cls_struct_3byte_gn1): Likewise.\n\t* testsuite/libffi.call/cls_4_1byte.c (cls_struct_4_1byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_4byte.c (cls_struct_4byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_5_1_byte.c (cls_struct_5byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_5byte.c (cls_struct_5byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_64byte.c (cls_struct_64byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_6_1_byte.c (cls_struct_6byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_6byte.c (cls_struct_6byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_7_1_byte.c (cls_struct_7byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_7byte.c (cls_struct_7byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_8byte.c (cls_struct_8byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_9byte1.c (cls_struct_9byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_9byte2.c (cls_struct_9byte_gn): Likewise.\n\t* testsuite/libffi.call/cls_align_double.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_float.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_longdouble.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_pointer.c (cls_struct_align_fn): Cast\n\tvoid* to avoid compiler warning.\n\t(main): Likewise.\n\t(cls_struct_align_gn): Mark cif and userdata unused.\n\t* testsuite/libffi.call/cls_align_sint16.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_sint32.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_sint64.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_uint16.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_align_uint32.c (cls_struct_align_gn):\n\tLikewise.\n\t* testsuite/libffi.call/cls_double.c (cls_ret_double_fn): Likewise.\n\t* testsuite/libffi.call/cls_float.c (cls_ret_float_fn): Likewise.\n\t* testsuite/libffi.call/cls_multi_schar.c (test_func_gn): Mark cif and\n\tdata unused.\n\t(main): Cast res_call to silence gcc.\n\t* testsuite/libffi.call/cls_multi_sshort.c (test_func_gn): Mark cif and\n\tdata unused.\n\t(main): Cast res_call to silence gcc.\n\t* testsuite/libffi.call/cls_multi_sshortchar.c (test_func_gn): Mark cif\n\tand data unused.\n\t(main): Cast res_call to silence gcc.\n\t* testsuite/libffi.call/cls_multi_uchar.c (test_func_gn): Mark cif and\n\tdata unused.\n\t(main): Cast res_call to silence gcc.\n\t* testsuite/libffi.call/cls_multi_ushort.c (test_func_gn): Mark cif and\n\tdata unused.\n\t(main): Cast res_call to silence gcc.\n\t* testsuite/libffi.call/cls_multi_ushortchar.c (test_func_gn): Mark cif\n\tand data unused.\n\t(main): Cast res_call to silence gcc.\n\t* testsuite/libffi.call/cls_schar.c (cls_ret_schar_fn): Mark cif and\n\tuserdata unused.\n\t(cls_ret_schar_fn): Cast printf parameter to silence gcc.\n\t* testsuite/libffi.call/cls_sint.c (cls_ret_sint_fn): Mark cif and\n\tuserdata unused.\n\t(cls_ret_sint_fn): Cast printf parameter to silence gcc.\n\t* testsuite/libffi.call/cls_sshort.c (cls_ret_sshort_fn): Mark cif and\n\tuserdata unused.\n\t(cls_ret_sshort_fn): Cast printf parameter to silence gcc.\n\t* testsuite/libffi.call/cls_uchar.c (cls_ret_uchar_fn):  Mark cif and\n\tuserdata unused.\n\t(cls_ret_uchar_fn): Cast printf parameter to silence gcc.\n\t* testsuite/libffi.call/cls_uint.c (cls_ret_uint_fn): Mark cif and\n\tuserdata unused.\n\t(cls_ret_uint_fn): Cast printf parameter to silence gcc.\n\t* testsuite/libffi.call/cls_ulonglong.c (cls_ret_ulonglong_fn): Mark cif\n\tand userdata unused.\n\t* testsuite/libffi.call/cls_ushort.c (cls_ret_ushort_fn): Mark cif and\n\tuserdata unused.\n\t(cls_ret_ushort_fn): Cast printf parameter to silence gcc.\n\t* testsuite/libffi.call/float.c (floating): Remove unused parameter e.\n\t* testsuite/libffi.call/float1.c (main): Remove unused variable i.\n\tCleanup white spaces.\n\t* testsuite/libffi.call/negint.c (checking): Remove unused variable i.\n\t* testsuite/libffi.call/nested_struct.c (cls_struct_combined_gn): Mark\n\tcif and userdata unused.\n\t* testsuite/libffi.call/nested_struct1.c (cls_struct_combined_gn):\n\tLikewise.\n\t* testsuite/libffi.call/nested_struct10.c (B_gn): Likewise.\n\t* testsuite/libffi.call/nested_struct2.c (B_fn): Adjust printf\n\tformatters to silence gcc.\n\t(B_gn): Mark cif and userdata unused.\n\t* testsuite/libffi.call/nested_struct3.c (B_gn): Mark cif and userdata\n\tunused.\n\t* testsuite/libffi.call/nested_struct4.c: Mention related PR.\n\t(B_gn): Mark cif and userdata unused.\n\t* testsuite/libffi.call/nested_struct5.c (B_gn): Mark cif and userdata\n\tunused.\n\t* testsuite/libffi.call/nested_struct6.c: Mention related PR.\n\t(B_gn): Mark cif and userdata unused.\n\t* testsuite/libffi.call/nested_struct7.c (B_gn): Mark cif and userdata\n\tunused.\n\t* testsuite/libffi.call/nested_struct8.c (B_gn): Likewise.\n\t* testsuite/libffi.call/nested_struct9.c (B_gn): Likewise.\n\t* testsuite/libffi.call/problem1.c (stub): Likewise.\n\t* testsuite/libffi.call/pyobjc-tc.c (main): Cast the result to silence\n\tgcc.\n\t* testsuite/libffi.call/return_fl2.c (return_fl): Add the note mentioned\n\tin the last commit for this test case in the test case itself.\n\t* testsuite/libffi.call/closure_fn0.c (closure_test_fn0): Mark cif as\n\tunused.\n\t* testsuite/libffi.call/closure_fn1.c (closure_test_fn1): Likewise.\n\t* testsuite/libffi.call/closure_fn2.c (closure_test_fn2): Likewise.\n\t* testsuite/libffi.call/closure_fn3.c (closure_test_fn3): Likewise.\n\t* testsuite/libffi.call/closure_fn4.c (closure_test_fn0): Likewise.\n\t* testsuite/libffi.call/closure_fn5.c (closure_test_fn5): Likewise.\n\t* testsuite/libffi.call/closure_fn6.c (closure_test_fn0): Likewise.\n\n2006-02-22  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/sysv.S: Fix register numbers in the FDE for\n\tffi_closure_SYSV.\n\n2006-02-20  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/return_fl2.c (return_fl): Remove static\n\tdeclaration to avoid a false negative on ix86. See PR323.\n\n2006-02-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (ffi_closure_helper_SYSV): Remove unused variable\n\tand cast integer to void * if needed.  Update the pointer to\n\tthe FP register saved area correctly.\n\n2006-02-17  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/nested_struct6.c: XFAIL this test until PR25630\n\tis fixed.\n\t* testsuite/libffi.call/nested_struct4.c: Likewise.\n\n2006-02-16  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/return_dbl.c: New test case.\n\t* testsuite/libffi.call/return_dbl1.c: Likewise.\n\t* testsuite/libffi.call/return_dbl2.c: Likewise.\n\t* testsuite/libffi.call/return_fl.c: Likewise.\n\t* testsuite/libffi.call/return_fl1.c: Likewise.\n\t* testsuite/libffi.call/return_fl2.c: Likewise.\n\t* testsuite/libffi.call/return_fl3.c: Likewise.\n\t* testsuite/libffi.call/closure_fn6.c: Likewise.\n\n\t* testsuite/libffi.call/nested_struct2.c: Remove ffi_type_mylong\n\tdefinition.\n\t* testsuite/libffi.call/ffitest.h: Add ffi_type_mylong definition\n\there to be used by other test cases too.\n\n\t* testsuite/libffi.call/nested_struct10.c: New test case.\n\t* testsuite/libffi.call/nested_struct9.c: Likewise.\n\t* testsuite/libffi.call/nested_struct8.c: Likewise.\n\t* testsuite/libffi.call/nested_struct7.c: Likewise.\n\t* testsuite/libffi.call/nested_struct6.c: Likewise.\n\t* testsuite/libffi.call/nested_struct5.c: Likewise.\n\t* testsuite/libffi.call/nested_struct4.c: Likewise.\n\n2006-01-21  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* configure.ac: Enable libffi for sparc64-*-freebsd*.\n\t* configure: Rebuilt.\n\n2006-01-18  Jakub Jelinek  <jakub@redhat.com>\n\n\t* src/powerpc/sysv.S (smst_two_register): Don't call __ashldi3,\n\tinstead do the shifting inline.\n\t* src/powerpc/ppc_closure.S (ffi_closure_SYSV): Don't compute %r5\n\tshift count unconditionally.  Simplify load sequences for 1, 2, 3, 4\n\tand 8 byte structs, for the remaining struct sizes don't call\n\t__lshrdi3, instead do the shifting inline.\n\n2005-12-07  Thiemo Seufer  <ths@networkno.de>\n\n\t* src/mips/ffitarget.h: Remove obsolete sgidefs.h include. Add\n\tmissing parentheses.\n\t* src/mips/o32.S (ffi_call_O32): Code formatting. Define\n\tand use A3_OFF, FP_OFF, RA_OFF. Micro-optimizations.\n\t(ffi_closure_O32): Likewise, but with newly defined A3_OFF2,\n\tA2_OFF2, A1_OFF2, A0_OFF2, RA_OFF2, FP_OFF2, S0_OFF2, GP_OFF2,\n\tV1_OFF2, V0_OFF2, FA_1_1_OFF2, FA_1_0_OFF2, FA_0_1_OFF2,\n\tFA_0_0_OFF2.\n\t* src/mips/ffi.c (ffi_prep_args): Code formatting. Fix\n\tendianness bugs.\n\t(ffi_prep_closure): Improve trampoline instruction scheduling.\n\t(ffi_closure_mips_inner_O32): Fix endianness bugs.\n\n2005-12-03  Alan Modra  <amodra@bigpond.net.au>\n\n\t* src/powerpc/ffi.c: Formatting.\n\t(ffi_prep_args_SYSV): Avoid possible aliasing problems by using unions.\n\t(ffi_prep_args64): Likewise.\n\n2005-09-30  Geoffrey Keating  <geoffk@apple.com>\n\n\t* testsuite/lib/libffi-dg.exp (libffi_target_compile): For\n\tdarwin, use -shared-libgcc not -lgcc_s, and explain why.\n\n2005-09-26  Tom Tromey  <tromey@redhat.com>\n\n\t* testsuite/libffi.call/float1.c (value_type): New typedef.\n\t(CANARY): New define.\n\t(main): Check for result buffer overflow.\n\t* src/powerpc/linux64.S: Handle linux64 long double returns.\n\t* src/powerpc/ffi.c (FLAG_RETURNS_128BITS): New constant.\n\t(ffi_prep_cif_machdep): Handle linux64 long double returns.\n\n2005-08-25  Alan Modra  <amodra@bigpond.net.au>\n\n\tPR target/23404\n\t* src/powerpc/ffi.c (ffi_prep_args_SYSV): Correct placement of stack\n\thomed fp args.\n\t(ffi_status ffi_prep_cif_machdep): Correct stack sizing for same.\n\n2005-08-11  Jakub Jelinek  <jakub@redhat.com>\n\n\t* configure.ac (HAVE_HIDDEN_VISIBILITY_ATTRIBUTE): New test.\n\t(AH_BOTTOM): Add FFI_HIDDEN definition.\n\t* configure: Rebuilt.\n\t* fficonfig.h.in: Rebuilt.\n\t* src/powerpc/ffi.c (hidden): Remove.\n\t(ffi_closure_LINUX64, ffi_prep_args64, ffi_call_LINUX64,\n\tffi_closure_helper_LINUX64): Use FFI_HIDDEN instead of hidden.\n\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64,\n\t.ffi_closure_LINUX64): Use FFI_HIDDEN instead of .hidden.\n\t* src/x86/ffi.c (ffi_closure_SYSV, ffi_closure_raw_SYSV): Remove,\n\tadd FFI_HIDDEN to its prototype.\n\t(ffi_closure_SYSV_inner): New.\n\t* src/x86/sysv.S (ffi_closure_SYSV, ffi_closure_raw_SYSV): New.\n\t* src/x86/win32.S (ffi_closure_SYSV, ffi_closure_raw_SYSV): New.\n\n2005-08-10  Alfred M. Szmidt  <ams@gnu.org>\n\n\tPR libffi/21819:\n\t* configure: Rebuilt.\n\t* configure.ac: Handle i*86-*-gnu*.\n\n2005-08-09  Jakub Jelinek  <jakub@redhat.com>\n\n\t* src/powerpc/ppc_closure.S (ffi_closure_SYSV): Use\n\tDW_CFA_offset_extended_sf rather than\n\tDW_CFA_GNU_negative_offset_extended.\n\t* src/powerpc/sysv.S (ffi_call_SYSV): Likewise.\n\n2005-07-22  SUGIOKA Toshinobu  <sugioka@itonet.co.jp>\n\n\t* src/sh/sysv.S (ffi_call_SYSV): Stop argument popping correctly\n\ton sh3.\n\t(ffi_closure_SYSV): Change the stack layout for sh3 struct argument.\n\t* src/sh/ffi.c (ffi_prep_args): Fix sh3 argument copy, when it is\n\tpartially on register.\n\t(ffi_closure_helper_SYSV): Likewise.\n\t(ffi_prep_cif_machdep): Don't set too many cif->flags.\n\n2005-07-20  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (ffi_call): Handle small structures correctly.\n\tRemove empty line.\n\t* src/sh64/ffi.c (simple_type): Remove.\n\t(return_type): Handle small structures correctly.\n\t(ffi_prep_args): Likewise.\n\t(ffi_call): Likewise.\n\t(ffi_closure_helper_SYSV): Likewise.\n\t* src/sh64/sysv.S (ffi_call_SYSV): Handle 1, 2 and 4-byte return.\n\tEmit position independent code if PIC and remove wrong datalabel\n\tprefixes from EH data.\n\n2005-07-19  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* Makefile.am (nodist_libffi_la_SOURCES): Add POWERPC_FREEBSD.\n\t* Makefile.in: Regenerate.\n\t* include/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\t* configure.ac: Add POWERPC_FREEBSD rules.\n\t* configure: Regenerate.\n\t* src/powerpc/ffitarget.h: Add POWERPC_FREEBSD rules.\n\t(FFI_SYSV_TYPE_SMALL_STRUCT): Define.\n\t* src/powerpc/ffi.c: Add flags to handle small structure returns\n\tin ffi_call_SYSV.\n\t(ffi_prep_cif_machdep): Handle small structures for SYSV 4 ABI.\n\tAka FFI_SYSV.\n\t(ffi_closure_helper_SYSV): Likewise.\n\t* src/powerpc/ppc_closure.S: Add return types for small structures.\n\t* src/powerpc/sysv.S: Add bits to handle small structures for\n\tfinal SYSV 4 ABI.\n\n2005-07-10  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/cls_5_1_byte.c: New test file.\n\t* testsuite/libffi.call/cls_6_1_byte.c: Likewise.\n\t* testsuite/libffi.call/cls_7_1_byte.c: Likewise.\n\n2005-07-05  Randolph Chung  <tausq@debian.org>\n\n\t* src/pa/ffi.c (ffi_struct_type): Rename FFI_TYPE_SMALL_STRUCT1\n\tas FFI_TYPE_SMALL_STRUCT3.  Break out handling for 5-7 byte\n\tstructures.  Kill compilation warnings.\n\t(ffi_closure_inner_LINUX): Print return values as hex in debug\n\tmessage.  Rename FFI_TYPE_SMALL_STRUCT1 as FFI_TYPE_SMALL_STRUCT3.\n\tProperly handle 5-7 byte structure returns.\n\t* src/pa/ffitarget.h (FFI_TYPE_SMALL_STRUCT1)\n\t(FFI_TYPE_SMALL_STRUCT2): Remove.\n\t(FFI_TYPE_SMALL_STRUCT3, FFI_TYPE_SMALL_STRUCT5)\n\t(FFI_TYPE_SMALL_STRUCT6, FFI_TYPE_SMALL_STRUCT7): Define.\n\t* src/pa/linux.S: Mark source file as using PA1.1 assembly.\n\t(checksmst1, checksmst2): Remove.\n\t(checksmst3): Optimize handling of 3-byte struct returns.\n\t(checksmst567): Properly handle 5-7 byte struct returns.\n\n2005-06-15  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\tPR libgcj/21943\n\t* src/mips/n32.S: Enforce PIC code.\n\t* src/mips/o32.S: Likewise.\n\n2005-06-15  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* configure.ac: Treat i*86-*-solaris2.10 and up as X86_64.\n\t* configure: Regenerate.\n\n2005-06-01  Alan Modra  <amodra@bigpond.net.au>\n\n\t* src/powerpc/ppc_closure.S (ffi_closure_SYSV): Don't use JUMPTARGET\n\tto call ffi_closure_helper_SYSV.  Append @local instead.\n\t* src/powerpc/sysv.S (ffi_call_SYSV): Likewise for ffi_prep_args_SYSV.\n\n2005-05-17  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* configure.ac: Use AC_C_BIGENDIAN instead of AC_C_BIGENDIAN_CROSS.\n\tUse AC_CHECK_SIZEOF instead of AC_COMPILE_CHECK_SIZEOF.\n\t* Makefile.am (ACLOCAL_AMFLAGS): Remove -I ../config.\n\t* aclocal.m4, configure, fficonfig.h.in, Makefile.in,\n\tinclude/Makefile.in, testsuite/Makefile.in: Regenerate.\n\n2005-05-09  Mike Stump  <mrs@apple.com>\n\n\t* configure: Regenerate.\n\n2005-05-08  Richard Henderson  <rth@redhat.com>\n\n\tPR libffi/21285\n\t* src/alpha/osf.S: Update unwind into to match code.\n\n2005-05-04  Andreas Degert <ad@papyrus-gmbh.de>\n\t    Richard Henderson  <rth@redhat.com>\n\n\t* src/x86/ffi64.c (ffi_prep_cif_machdep): Save sse-used flag in\n\tbit 11 of flags.\n\t(ffi_call): Mask return type field.  Pass ssecount to ffi_call_unix64.\n\t(ffi_prep_closure): Set carry bit if sse-used flag set.\n\t* src/x86/unix64.S (ffi_call_unix64): Add ssecount argument.\n\tOnly load sse registers if ssecount non-zero.\n\t(ffi_closure_unix64): Only save sse registers if carry set on entry.\n\n2005-04-29  Ralf Corsepius  <ralf.corsepius@rtems.org>\n\n\t* configure.ac: Add i*86-*-rtems*, sparc*-*-rtems*,\n\tpowerpc-*rtems*, arm*-*-rtems*, sh-*-rtems*.\n\t* configure: Regenerate.\n\n2005-04-20  Hans-Peter Nilsson  <hp@axis.com>\n\n\t* testsuite/lib/libffi-dg.exp (libffi-dg-test-1): In regsub use,\n\thave Tcl8.3-compatible intermediate variable.\n\n2005-04-18  Simon Posnjak <simon.posnjak@siol.net>\n\t    Hans-Peter Nilsson  <hp@axis.com>\n\n\t* Makefile.am: Add CRIS support.\n\t* configure.ac: Likewise.\n\t* Makefile.in, configure, testsuite/Makefile.in,\n\tinclude/Makefile.in: Regenerate.\n\t* src/cris: New directory.\n\t* src/cris/ffi.c, src/cris/sysv.S, src/cris/ffitarget.h: New files.\n\t* src/prep_cif.c (ffi_prep_cif): Wrap in #ifndef __CRIS__.\n\n\t* testsuite/lib/libffi-dg.exp (libffi-dg-test-1): Replace \\n with\n\t\\r?\\n in output tests.\n\n2005-04-12  Mike Stump  <mrs@apple.com>\n\n\t* configure: Regenerate.\n\n2005-03-30  Hans Boehm  <Hans.Boehm@hp.com>\n\n\t* src/ia64/ffitarget.h (ffi_arg): Use long long instead of DI.\n\n2005-03-30  Steve Ellcey  <sje@cup.hp.com>\n\n\t* src/ia64/ffitarget.h (ffi_arg) ADD DI attribute.\n\t(ffi_sarg) Ditto.\n\t* src/ia64/unix.S (ffi_closure_unix): Extend gp\n\tto 64 bits in ILP32 mode.\n\tLoad 64 bits even for short data.\n\n2005-03-23  Mike Stump  <mrs@apple.com>\n\n\t* src/powerpc/darwin.S: Update for -m64 multilib.\n\t* src/powerpc/darwin_closure.S: Likewise.\n\n2005-03-21  Zack Weinberg  <zack@codesourcery.com>\n\n\t* configure.ac: Do not invoke TL_AC_GCC_VERSION.\n\tDo not set tool_include_dir.\n\t* aclocal.m4, configure, Makefile.in, testsuite/Makefile.in:\n\tRegenerate.\n\t* include/Makefile.am: Set gcc_version and toollibffidir.\n\t* include/Makefile.in: Regenerate.\n\n2005-02-22  Andrew Haley  <aph@redhat.com>\n\n\t* src/powerpc/ffi.c (ffi_prep_cif_machdep): Bump alignment to\n\todd-numbered register pairs for 64-bit integer types.\n\n2005-02-23  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\tPR libffi/20104\n\t* testsuite/libffi.call/return_ll1.c: New test case.\n\n2005-02-11  Janis Johnson  <janis187@us.ibm.com>\n\n\t* testsuite/libffi.call/cls_align_longdouble.c: Remove dg-options.\n\t* testsuite/libffi.call/float.c: Ditto.\n\t* testsuite/libffi.call/float2.c: Ditto.\n\t* testsuite/libffi.call/float3.c: Ditto.\n\n2005-02-08  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/frv/ffitarget.h: Remove PPC stuff which does not belong to frv.\n\n2005-01-12  Eric Botcazou  <ebotcazou@libertysurf.fr>\n\n\t* testsuite/libffi.special/special.exp (cxx_options): Add\n\t-shared-libgcc.\n\n2004-12-31  Richard Henderson  <rth@redhat.com>\n\n\t* src/types.c (FFI_AGGREGATE_TYPEDEF): Remove.\n\t(FFI_TYPEDEF): Rename from FFI_INTEGRAL_TYPEDEF.  Replace size and\n\toffset parameters with a type parameter; deduce size and structure\n\talignment.  Update all users.\n\n2004-12-31  Richard Henderson  <rth@redhat.com>\n\n\t* src/types.c (FFI_TYPE_POINTER): Define with sizeof.\n\t(FFI_TYPE_LONGDOUBLE): Fix for ia64.\n\t* src/ia64/ffitarget.h (struct ffi_ia64_trampoline_struct): Move\n\tinto ffi_prep_closure.\n\t* src/ia64/ia64_flags.h, src/ia64/ffi.c, src/ia64/unix.S: Rewrite\n\tfrom scratch.\n\n2004-12-27  Richard Henderson  <rth@redhat.com>\n\n\t* src/x86/unix64.S: Fix typo in unwind info.\n\n2004-12-25  Richard Henderson  <rth@redhat.com>\n\n\t* src/x86/ffi64.c (struct register_args): Rename from stackLayout.\n\t(enum x86_64_reg_class): Add X86_64_COMPLEX_X87_CLASS.\n\t(merge_classes): Check for it.\n\t(SSE_CLASS_P): New.\n\t(classify_argument): Pass byte_offset by value; perform all updates\n\tinside struct case.\n\t(examine_argument): Add classes argument; handle\n\tX86_64_COMPLEX_X87_CLASS.\n\t(ffi_prep_args): Merge into ...\n\t(ffi_call): ... here.  Share stack frame with ffi_call_unix64.\n\t(ffi_prep_cif_machdep): Setup cif->flags for proper structure return.\n\t(ffi_fill_return_value): Remove.\n\t(ffi_prep_closure): Remove dead assert.\n\t(ffi_closure_unix64_inner): Rename from ffi_closure_UNIX64_inner.\n\tRewrite to use struct register_args instead of va_list.  Create\n\tflags for handling structure returns.\n\t* src/x86/unix64.S: Remove dead strings.\n\t(ffi_call_unix64): Rename from ffi_call_UNIX64.  Rewrite to share\n\tstack frame with ffi_call.  Handle structure returns properly.\n\t(float2sse, floatfloat2sse, double2sse): Remove.\n\t(sse2float, sse2double, sse2floatfloat): Remove.\n\t(ffi_closure_unix64): Rename from ffi_closure_UNIX64.  Rewrite\n\tto handle structure returns properly.\n\n2004-12-08  David Edelsohn  <edelsohn@gnu.org>\n\n\t* Makefile.am (AM_MAKEFLAGS): Remove duplicate LIBCFLAGS and\n\tPICFLAG.\n\t* Makefile.in: Regenerated.\n\n2004-12-02  Richard Sandiford  <rsandifo@redhat.com>\n\n\t* configure.ac: Use TL_AC_GCC_VERSION to set gcc_version.\n\t* configure, aclocal.m4, Makefile.in: Regenerate.\n\t* include/Makefile.in, testsuite/Makefile.in: Regenerate.\n\n2004-11-29  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* configure: Regenerate for libtool change.\n\n2004-11-25  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* configure: Regenerate for libtool reversion.\n\n2004-11-24  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* configure: Regenerate for libtool change.\n\n2004-11-23  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n\n\t* testsuite/lib/libffi-dg.exp: Use new procs in target-libpath.exp.\n\n2004-11-23  Richard Sandiford  <rsandifo@redhat.com>\n\n\t* src/mips/o32.S (ffi_call_O32, ffi_closure_O32): Use jalr instead\n\tof jal.  Use an absolute encoding for the frame information.\n\n2004-11-23  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* Makefile.am: Remove no-dependencies.  Add ACLOCAL_AMFLAGS.\n\t* acinclude.m4: Delete logic for sincludes.\n\t* aclocal.m4, Makefile.in, configure: Regenerate.\n\t* include/Makefile: Likewise.\n\t* testsuite/Makefile: Likewise.\n\n2004-11-22  Eric Botcazou  <ebotcazou@libertysurf.fr>\n\n\t* src/sparc/ffi.c (ffi_prep_closure): Align doubles and 64-bit integers\n\ton a 8-byte boundary.\n\t* src/sparc/v8.S (ffi_closure_v8): Reserve frame space for arguments.\n\n2004-10-27  Richard Earnshaw  <rearnsha@arm.com>\n\n\t* src/arm/ffi.c (ffi_prep_cif_machdep): Handle functions that return\n\tlong long values.  Round stack allocation to a multiple of 8 bytes\n\tfor ATPCS compatibility.\n\t* src/arm/sysv.S (ffi_call_SYSV): Rework to avoid use of APCS register\n\tnames.  Handle returning long long types.  Add Thumb and interworking\n\tsupport.  Improve soft-float code.\n\n2004-10-27  Richard Earnshaw  <rearnsha@arm.com>\n\n\t* testsuite/lib/libffi-db.exp (load_gcc_lib): New function.\n\t(libffi_exit): New function.\n\t(libffi_init): Build the testglue wrapper if needed.\n\n2004-10-25  Eric Botcazou  <ebotcazou@libertysurf.fr>\n\n\tPR other/18138\n\t* testsuite/lib/libffi-dg.exp: Accept more than one multilib libgcc.\n\n2004-10-25  Kazuhiro Inaoka <inaoka.kazuhiro@renesas.com>\n\n\t* src/m32r/libffitarget.h (FFI_CLOSURES): Set to 0.\n\n2004-10-20  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/sysv.S (ffi_call_SYSV): Don't align for double data.\n\t* testsuite/libffi.call/float3.c: New test case.\n\n2004-10-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (ffi_prep_closure): Set T bit in trampoline for\n\tthe function returning a structure pointed with R2.\n\t* src/sh/sysv.S (ffi_closure_SYSV): Use R2 as the pointer to\n\tthe structure return value if T bit set.  Emit position\n\tindependent code and EH data if PIC.\n\n2004-10-13  Kazuhiro Inaoka  <inaoka.kazuhiro@renesas.com>\n\n\t* Makefile.am: Add m32r support.\n\t* configure.ac: Likewise.\n\t* Makefile.in: Regenerate.\n\t* confiugre: Regenerate.\n\t* src/types.c: Add m32r port to FFI_INTERNAL_TYPEDEF\n\t(uint64, sint64, double, longdouble)\n\t* src/m32r: New directory.\n\t* src/m32r/ffi.c: New file.\n\t* src/m32r/sysv.S: Likewise.\n\t* src/m32r/ffitarget.h: Likewise.\n\n2004-10-02  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* testsuite/libffi.call/negint.c: New test case.\n\n2004-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR libgcj/17465\n\t* testsuite/lib/libffi-dg.exp: Don't use global ld_library_path.\n\tSet up LD_LIBRARY_PATH, SHLIB_PATH, LD_LIBRARYN32_PATH,\n\tLD_LIBRARY64_PATH, LD_LIBRARY_PATH_32, LD_LIBRARY_PATH_64 and\n\tDYLD_LIBRARY_PATH.\n\n2004-09-05  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/many_win32.c: Remove whitespaces.\n\t* testsuite/libffi.call/promotion.c: Likewise.\n\t* testsuite/libffi.call/return_ll.c: Remove unused var. Cleanup\n\twhitespaces.\n\t* testsuite/libffi.call/return_sc.c: Likewise.\n\t* testsuite/libffi.call/return_uc.c: Likewise.\n\n2004-09-05  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/powerpc/darwin.S: Fix comments and identation.\n\t* src/powerpc/darwin_closure.S: Likewise.\n\n2004-09-02  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/powerpc/ffi_darwin.c: Add flag for longdouble return values.\n\t(ffi_prep_args): Handle longdouble arguments.\n\t(ffi_prep_cif_machdep): Set flags for longdouble. Calculate space for\n\tlongdouble.\n\t(ffi_closure_helper_DARWIN): Add closure handling for longdouble.\n\t* src/powerpc/darwin.S (_ffi_call_DARWIN): Add handling of longdouble\n\tvalues.\n\t* src/powerpc/darwin_closure.S (_ffi_closure_ASM): Likewise.\n\t* src/types.c: Defined longdouble size and alignment for darwin.\n\n2004-09-02  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/powerpc/aix.S: Remove whitespaces.\n\t* src/powerpc/aix_closure.S: Likewise.\n\t* src/powerpc/asm.h: Likewise.\n\t* src/powerpc/ffi.c: Likewise.\n\t* src/powerpc/ffitarget.h: Likewise.\n\t* src/powerpc/linux64.S: Likewise.\n\t* src/powerpc/linux64_closure.S: Likewise.\n\t* src/powerpc/ppc_closure.S: Likewise.\n\t* src/powerpc/sysv.S: Likewise.\n\n2004-08-30  Anthony Green  <green@redhat.com>\n\n\t* Makefile.am: Add frv support.\n\t* Makefile.in, testsuite/Makefile.in: Rebuilt.\n\t* configure.ac: Read configure.host.\n\t* configure.in: Read configure.host.\n\t* configure.host: New file.  frv-elf needs libgloss.\n\t* include/ffi.h.in: Force ffi_closure to have a nice big (8)\n\talignment.  This is needed to frv and shouldn't harm the others.\n\t* include/ffi_common.h (ALIGN_DOWN): New macro.\n\t* src/frv/ffi.c, src/frv/ffitarget.h, src/frv/eabi.S: New files.\n\n2004-08-24  David Daney  <daney@avtrex.com>\n\n\t* testsuite/libffi.call/closure_fn0.c: Xfail mips64* instead of mips*.\n\t* testsuite/libffi.call/closure_fn1.c: Likewise.\n\t* testsuite/libffi.call/closure_fn2.c  Likewise.\n\t* testsuite/libffi.call/closure_fn3.c: Likewise.\n\t* testsuite/libffi.call/closure_fn4.c: Likewise.\n\t* testsuite/libffi.call/closure_fn5.c: Likewise.\n\t* testsuite/libffi.call/cls_18byte.c: Likewise.\n\t* testsuite/libffi.call/cls_19byte.c: Likewise.\n\t* testsuite/libffi.call/cls_1_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_20byte.c: Likewise.\n\t* testsuite/libffi.call/cls_20byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_24byte.c: Likewise.\n\t* testsuite/libffi.call/cls_2byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte2.c: Likewise.\n\t* testsuite/libffi.call/cls_4_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_4byte.c: Likewise.\n\t* testsuite/libffi.call/cls_64byte.c: Likewise.\n\t* testsuite/libffi.call/cls_6byte.c: Likewise.\n\t* testsuite/libffi.call/cls_7byte.c: Likewise.\n\t* testsuite/libffi.call/cls_8byte.c: Likewise.\n\t* testsuite/libffi.call/cls_9byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_9byte2.c: Likewise.\n\t* testsuite/libffi.call/cls_align_double.c: Likewise.\n\t* testsuite/libffi.call/cls_align_float.c: Likewise.\n\t* testsuite/libffi.call/cls_align_longdouble.c: Likewise.\n\t* testsuite/libffi.call/cls_align_pointer.c: Likewise.\n\t* testsuite/libffi.call/cls_align_sint16.c: Likewise.\n\t* testsuite/libffi.call/cls_align_sint32.c: Likewise.\n\t* testsuite/libffi.call/cls_align_sint64.c: Likewise.\n\t* testsuite/libffi.call/cls_align_uint16.c: Likewise.\n\t* testsuite/libffi.call/cls_align_uint32.c: Likewise.\n\t* testsuite/libffi.call/cls_align_uint64.c: Likewise.\n\t* testsuite/libffi.call/cls_double.c: Likewise.\n\t* testsuite/libffi.call/cls_float.c: Likewise.\n\t* testsuite/libffi.call/cls_multi_schar.c: Likewise.\n\t* testsuite/libffi.call/cls_multi_sshort.c: Likewise.\n\t* testsuite/libffi.call/cls_multi_sshortchar.c: Likewise.\n\t* testsuite/libffi.call/cls_multi_uchar.c: Likewise.\n\t* testsuite/libffi.call/cls_multi_ushort.c: Likewise.\n\t* testsuite/libffi.call/cls_multi_ushortchar.c: Likewise.\n\t* testsuite/libffi.call/cls_schar.c: Likewise.\n\t* testsuite/libffi.call/cls_sint.c: Likewise.\n\t* testsuite/libffi.call/cls_sshort.c: Likewise.\n\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n\t* testsuite/libffi.call/cls_uint.c: Likewise.\n\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n\t* testsuite/libffi.call/nested_struct.c: Likewise.\n\t* testsuite/libffi.call/nested_struct1.c: Likewise.\n\t* testsuite/libffi.call/nested_struct2.c: Likewise.\n\t* testsuite/libffi.call/nested_struct3.c: Likewise.\n\t* testsuite/libffi.call/problem1.c: Likewise.\n\t* testsuite/libffi.special/unwindtest.cc: Likewise.\n\t* testsuite/libffi.call/cls_12byte.c: Likewise and set return value\n\tto zero.\n\t* testsuite/libffi.call/cls_16byte.c: Likewise.\n\t* testsuite/libffi.call/cls_5byte.c: Likewise.\n\n2004-08-23  David Daney <daney@avtrex.com>\n\n\tPR libgcj/13141\n\t* src/mips/ffitarget.h (FFI_O32_SOFT_FLOAT): New ABI.\n\t* src/mips/ffi.c (ffi_prep_args): Fix alignment calculation.\n\t(ffi_prep_cif_machdep): Handle FFI_O32_SOFT_FLOAT floating point\n\tparameters and return types.\n\t(ffi_call): Handle FFI_O32_SOFT_FLOAT ABI.\n\t(ffi_prep_closure): Ditto.\n\t(ffi_closure_mips_inner_O32): Handle FFI_O32_SOFT_FLOAT ABI, fix\n\talignment calculations.\n\t* src/mips/o32.S (ffi_closure_O32): Don't use floating point\n\tinstructions if FFI_O32_SOFT_FLOAT, make stack frame ABI compliant.\n\n2004-08-14  Casey Marshall <csm@gnu.org>\n\n\t* src/mips/ffi.c (ffi_pref_cif_machdep): set `cif->flags' to\n\tcontain `FFI_TYPE_UINT64' as return type for any 64-bit\n\tinteger (O32 ABI only).\n\t(ffi_prep_closure): new function.\n\t(ffi_closure_mips_inner_O32): new function.\n\t* src/mips/ffitarget.h: Define `FFI_CLOSURES' and\n\t`FFI_TRAMPOLINE_SIZE' appropriately if the ABI is o32.\n\t* src/mips/o32.S (ffi_call_O32): add labels for .eh_frame. Return\n\t64 bit integers correctly.\n\t(ffi_closure_O32): new function.\n\tAdded DWARF-2 unwind info for both functions.\n\n2004-08-10  Andrew Haley  <aph@redhat.com>\n\n\t* src/x86/ffi64.c (ffi_prep_args ): 8-align all stack arguments.\n\n2004-08-01  Robert Millan  <robertmh@gnu.org>\n\n\t* configure.ac: Detect knetbsd-gnu and kfreebsd-gnu.\n\t* configure: Regenerate.\n\n2004-07-30  Maciej W. Rozycki  <macro@linux-mips.org>\n\n\t* acinclude.m4 (AC_FUNC_MMAP_BLACKLIST): Check for <sys/mman.h>\n\tand mmap() explicitly instead of relying on preset autoconf cache\n\tvariables.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\n2004-07-11  Ulrich Weigand  <uweigand@de.ibm.com>\n\n\t* src/s390/ffi.c (ffi_prep_args): Fix C aliasing violation.\n\t(ffi_check_float_struct): Remove unused prototype.\n\n2004-06-30  Geoffrey Keating  <geoffk@apple.com>\n\n\t* src/powerpc/ffi_darwin.c (flush_icache): ';' is a comment\n\tcharacter on Darwin, use '\\n\\t' instead.\n\n2004-06-26  Matthias Klose  <doko@debian.org>\n\n\t* libtool-version: Fix typo in revision/age.\n\n2004-06-17  Matthias Klose  <doko@debian.org>\n\n\t* libtool-version: New.\n\t* Makefile.am (libffi_la_LDFLAGS): Use -version-info for soname.\n\t* Makefile.in: Regenerate.\n\n2004-06-15  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* Makefile.am: Remove useless multilib rules.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate with automake 1.8.5.\n\t* configure.ac: Remove useless multilib configury.\n\t* configure: Regenerate.\n\n2004-06-15  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* .cvsignore: New file.\n\n2004-06-10  Jakub Jelinek  <jakub@redhat.com>\n\n\t* src/ia64/unix.S (ffi_call_unix): Insert group barrier break\n\tfp_done.\n\t(ffi_closure_UNIX): Fix f14/f15 adjustment if FLOAT_SZ is ever\n\tchanged from 8.\n\n2004-06-06  Sean McNeil  <sean@mcneil.com>\n\n\t* configure.ac: Add x86_64-*-freebsd* support.\n\t* configure: Regenerate.\n\n2004-04-26  Joe Buck <jbuck@welsh-buck.org>\n\n\tBug 15093\n\t* configure.ac: Test for existence of mmap and sys/mman.h before\n\tchecking blacklist.  Fix suggested by Jim Wilson.\n\t* configure: Regenerate.\n\n2004-04-26  Matt Austern  <austern@apple.com>\n\n\t* src/powerpc/darwin.S: Go through a non-lazy pointer for initial\n\tFDE location.\n\t* src/powerpc/darwin_closure.S: Likewise.\n\n2004-04-24  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/cls_multi_schar.c (main): Fix initialization\n\terror. Reported by Thomas Heller <theller@python.net>.\n\t* testsuite/libffi.call/cls_multi_sshort.c (main): Likewise.\n\t* testsuite/libffi.call/cls_multi_ushort.c (main): Likewise.\n\n2004-03-20  Matthias Klose  <doko@debian.org>\n\n\t* src/pa/linux.S: Fix typo.\n\n2004-03-19  Matthias Klose  <doko@debian.org>\n\n\t* Makefile.am: Update.\n\t* Makefile.in: Regenerate.\n\t* src/pa/ffi.h.in: Remove.\n\t* src/pa/ffitarget.h: New file.\n\n2004-02-10  Randolph Chung  <tausq@debian.org>\n\n\t* Makefile.am: Add PA support.\n\t* Makefile.in: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* configure.ac: Add PA target.\n\t* configure: Regenerate.\n\t* src/pa/ffi.c: New file.\n\t* src/pa/ffi.h.in: Add PA support.\n\t* src/pa/linux.S: New file.\n\t* prep_cif.c: Add PA support.\n\n2004-03-16  Hosaka Yuji  <hos@tamanegi.org>\n\n\t* src/types.c: Fix alignment size of X86_WIN32 case int64 and\n\tdouble.\n\t* src/x86/ffi.c (ffi_prep_args): Replace ecif->cif->rtype->type\n\twith ecif->cif->flags.\n\t(ffi_call, ffi_prep_incoming_args_SYSV): Replace cif->rtype->type\n\twith cif->flags.\n\t(ffi_prep_cif_machdep): Add X86_WIN32 struct case.\n\t(ffi_closure_SYSV): Add 1 or 2-bytes struct case for X86_WIN32.\n\t* src/x86/win32.S (retstruct1b, retstruct2b, sc_retstruct1b,\n\tsc_retstruct2b): Add for 1 or 2-bytes struct case.\n\n2004-03-15 Kelley Cook <kcook@gcc.gnu.org>\n\n\t* configure.in: Rename file to ...\n\t* configure.ac: ... this.\n\t* fficonfig.h.in: Regenerate.\n\t* Makefile.in: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\n2004-03-12  Matt Austern  <austern@apple.com>\n\n\t* src/powerpc/darwin.S: Fix EH information so it corresponds to\n\tchanges in EH format resulting from addition of linkonce support.\n\t* src/powerpc/darwin_closure.S: Likewise.\n\n2004-03-11  Andreas Tobler  <a.tobler@schweiz.ch>\n\t    Paolo Bonzini  <bonzini@gnu.org>\n\n\t* Makefile.am (AUTOMAKE_OPTIONS): Set them.\n\tRemove VPATH. Remove rules for object files. Remove multilib support.\n\t(AM_CCASFLAGS): Add.\n\t* configure.in (AC_CONFIG_HEADERS): Relace AM_CONFIG_HEADER.\n\t(AC_PREREQ): Bump version to 2.59.\n\t(AC_INIT): Fill with version info and bug address.\n\t(ORIGINAL_LD_FOR_MULTILIBS): Remove.\n\t(AM_ENABLE_MULTILIB): Use this instead of AC_ARG_ENABLE.\n\tDe-precious CC so that the right flags are passed down to multilibs.\n\t(AC_MSG_ERROR): Replace obsolete macro AC_ERROR.\n\t(AC_CONFIG_FILES): Replace obsolete macro AC_LINK_FILES.\n\t(AC_OUTPUT): Reorganize the output with AC_CONFIG_COMMANDS.\n\t* configure: Rebuilt.\n\t* aclocal.m4: Likewise.\n\t* Makefile.in, include/Makefile.in, testsuite/Makefile.in: Likewise.\n\t* fficonfig.h.in: Likewise.\n\n2004-03-11  Andreas Schwab  <schwab@suse.de>\n\n\t* src/ia64/ffi.c (ffi_prep_incoming_args_UNIX): Get floating point\n\targuments from fp registers only for the first 8 parameter slots.\n\tDon't convert a float parameter when passed in memory.\n\n2004-03-09  Hans-Peter Nilsson  <hp@axis.com>\n\n\t* configure: Regenerate for config/accross.m4 correction.\n\n2004-02-25  Matt Kraai  <kraai@alumni.cmu.edu>\n\n\t* src/powerpc/ffi.c (ffi_prep_args_SYSV): Change\n\tecif->cif->bytes to bytes.\n\t(ffi_prep_cif_machdep): Add braces around nested if statement.\n\n2004-02-09  Alan Modra  <amodra@bigpond.net.au>\n\n\t* src/types.c (pointer): POWERPC64 has 8 byte pointers.\n\n\t* src/powerpc/ffi.c (ffi_prep_args64): Correct long double handling.\n\t(ffi_closure_helper_LINUX64): Fix typo.\n\t* testsuite/libffi.call/cls_align_longdouble.c: Pass -mlong-double-128\n\tfor powerpc64-*-*.\n\t* testsuite/libffi.call/float.c: Likewise.\n\t* testsuite/libffi.call/float2.c: Likewise.\n\n2004-02-08  Alan Modra  <amodra@bigpond.net.au>\n\n\t* src/powerpc/ffi.c (ffi_prep_cif_machdep <FFI_LINUX64>): Correct\n\tlong double function return and long double arg handling.\n\t(ffi_closure_helper_LINUX64): Formatting.  Delete unused \"ng\" var.\n\tUse \"end_pfr\" instead of \"nf\".  Correct long double handling.\n\tLocalise \"temp\".\n\t* src/powerpc/linux64.S (ffi_call_LINUX64): Save f2 long double\n\treturn value.\n\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64): Allocate\n\tspace for long double return value.  Adjust stack frame and offsets.\n\tLoad f2 long double return.\n\n2004-02-07  Alan Modra  <amodra@bigpond.net.au>\n\n\t* src/types.c: Use 16 byte long double for POWERPC64.\n\n2004-01-25  Eric Botcazou  <ebotcazou@libertysurf.fr>\n\n\t* src/sparc/ffi.c (ffi_prep_args_v9): Shift the parameter array\n\twhen the structure return address is passed in %o0.\n\t(ffi_V9_return_struct): Rename into ffi_v9_layout_struct.\n\t(ffi_v9_layout_struct): Align the field following a nested structure\n\ton a word boundary.  Use memmove instead of memcpy.\n\t(ffi_call): Update call to ffi_V9_return_struct.\n\t(ffi_prep_closure): Define 'ctx' only for V8.\n\t(ffi_closure_sparc_inner): Clone into ffi_closure_sparc_inner_v8\n\tand ffi_closure_sparc_inner_v9.\n\t(ffi_closure_sparc_inner_v8): Return long doubles by reference.\n\tAlways skip the structure return address.  For structures and long\n\tdoubles, copy the argument directly.\n\t(ffi_closure_sparc_inner_v9): Skip the structure return address only\n\tif required.  Shift the maximum floating-point slot accordingly.  For\n\tbig structures, copy the argument directly; otherwise, left-justify the\n\targument and call ffi_v9_layout_struct to lay out the structure on\n\tthe stack.\n\t* src/sparc/v8.S: Undef STACKFRAME before defining it.\n\t(ffi_closure_v8): Pass the structure return address.  Update call to\n\tffi_closure_sparc_inner_v8.  Short-circuit FFI_TYPE_INT handling.\n\tSkip the 'unimp' insn when returning long doubles and structures.\n\t* src/sparc/v9.S: Undef STACKFRAME before defining it.\n\t(ffi_closure_v9): Increase the frame size by 2 words.  Short-circuit\n\tFFI_TYPE_INT handling.  Load structures both in integers and\n\tfloating-point registers on return.\n\t* README: Update status of the SPARC port.\n\n2004-01-24  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/pyobjc-tc.c (main): Treat result value\n\tas of type ffi_arg.\n\t* testsuite/libffi.call/struct3.c (main): Fix CHECK.\n\n2004-01-22  Ulrich Weigand  <uweigand@de.ibm.com>\n\n\t* testsuite/libffi.call/cls_uint.c (cls_ret_uint_fn): Treat result\n\tvalue as of type ffi_arg, not unsigned int.\n\n2004-01-21  Michael Ritzert  <ritzert@t-online.de>\n\n\t* ffi64.c (ffi_prep_args): Cast the RHS of an assignment instead\n\tof the LHS.\n\n2004-01-12  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/lib/libffi-dg.exp: Set LD_LIBRARY_PATH_32 for\n\tSolaris.\n\n2004-01-08  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* testsuite/libffi.call/ffitest.h (allocate_mmap): Cast MAP_FAILED\n\tto void *.\n\n2003-12-10  Richard Henderson  <rth@redhat.com>\n\n\t* testsuite/libffi.call/cls_align_pointer.c: Cast pointers to\n\tsize_t instead of int.\n\n2003-12-04  Hosaka Yuji  <hos@tamanegi.org>\n\n\t* testsuite/libffi.call/many_win32.c: Include <float.h>.\n\t* testsuite/libffi.call/many_win32.c (main): Replace variable\n\tint i with unsigned long ul.\n\n\t* testsuite/libffi.call/cls_align_uint64.c: New test case.\n\t* testsuite/libffi.call/cls_align_sint64.c: Likewise.\n\t* testsuite/libffi.call/cls_align_uint32.c: Likewise.\n\t* testsuite/libffi.call/cls_align_sint32.c: Likewise.\n\t* testsuite/libffi.call/cls_align_uint16.c: Likewise.\n\t* testsuite/libffi.call/cls_align_sint16.c: Likewise.\n\t* testsuite/libffi.call/cls_align_float.c: Likewise.\n\t* testsuite/libffi.call/cls_align_double.c: Likewise.\n\t* testsuite/libffi.call/cls_align_longdouble.c: Likewise.\n\t* testsuite/libffi.call/cls_align_pointer.c: Likewise.\n\n2003-12-02  Hosaka Yuji  <hos@tamanegi.org>\n\n\tPR other/13221\n\t* src/x86/ffi.c (ffi_prep_args, ffi_prep_incoming_args_SYSV):\n\tAlign arguments to 32 bits.\n\n2003-12-01  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\tPR other/13221\n\t* testsuite/libffi.call/cls_multi_sshort.c: New test case.\n\t* testsuite/libffi.call/cls_multi_sshortchar.c: Likewise.\n\t* testsuite/libffi.call/cls_multi_uchar.c: Likewise.\n\t* testsuite/libffi.call/cls_multi_schar.c: Likewise.\n\t* testsuite/libffi.call/cls_multi_ushortchar.c: Likewise.\n\t* testsuite/libffi.call/cls_multi_ushort.c: Likewise.\n\n\t* testsuite/libffi.special/unwindtest.cc: Cosmetics.\n\n2003-11-26  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n\n\t* testsuite/libffi.call/ffitest.h: Include <fcntl.h>.\n\t* testsuite/libffi.special/ffitestcxx.h: Likewise.\n\n2003-11-22  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* Makefile.in: Rebuilt.\n\t* configure: Likewise.\n\t* testsuite/libffi.special/unwindtest.cc: Convert the mmap to\n\tthe right type.\n\n2003-11-21  Andreas Jaeger  <aj@suse.de>\n\t    Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* acinclude.m4: Add AC_FUNC_MMAP_BLACKLIST.\n\t* configure.in: Call AC_FUNC_MMAP_BLACKLIST.\n\t* Makefile.in: Rebuilt.\n\t* aclocal.m4: Likewise.\n\t* configure: Likewise.\n\t* fficonfig.h.in: Likewise.\n\t* testsuite/lib/libffi-dg.exp: Add include dir.\n\t* testsuite/libffi.call/ffitest.h: Add MMAP definitions.\n\t* testsuite/libffi.special/ffitestcxx.h: Likewise.\n\t* testsuite/libffi.call/closure_fn0.c: Use MMAP functionality\n\tfor ffi_closure if available.\n\t* testsuite/libffi.call/closure_fn1.c: Likewise.\n\t* testsuite/libffi.call/closure_fn2.c: Likewise.\n\t* testsuite/libffi.call/closure_fn3.c: Likewise.\n\t* testsuite/libffi.call/closure_fn4.c: Likewise.\n\t* testsuite/libffi.call/closure_fn5.c: Likewise.\n\t* testsuite/libffi.call/cls_12byte.c: Likewise.\n\t* testsuite/libffi.call/cls_16byte.c: Likewise.\n\t* testsuite/libffi.call/cls_18byte.c: Likewise.\n\t* testsuite/libffi.call/cls_19byte.c: Likewise.\n\t* testsuite/libffi.call/cls_1_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_20byte.c: Likewise.\n\t* testsuite/libffi.call/cls_20byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_24byte.c: Likewise.\n\t* testsuite/libffi.call/cls_2byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte2.c: Likewise.\n\t* testsuite/libffi.call/cls_4_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_4byte.c: Likewise.\n\t* testsuite/libffi.call/cls_5byte.c: Likewise.\n\t* testsuite/libffi.call/cls_64byte.c: Likewise.\n\t* testsuite/libffi.call/cls_6byte.c: Likewise.\n\t* testsuite/libffi.call/cls_7byte.c: Likewise.\n\t* testsuite/libffi.call/cls_8byte.c: Likewise.\n\t* testsuite/libffi.call/cls_9byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_9byte2.c: Likewise.\n\t* testsuite/libffi.call/cls_double.c: Likewise.\n\t* testsuite/libffi.call/cls_float.c: Likewise.\n\t* testsuite/libffi.call/cls_schar.c: Likewise.\n\t* testsuite/libffi.call/cls_sint.c: Likewise.\n\t* testsuite/libffi.call/cls_sshort.c: Likewise.\n\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n\t* testsuite/libffi.call/cls_uint.c: Likewise.\n\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n\t* testsuite/libffi.call/nested_struct.c: Likewise.\n\t* testsuite/libffi.call/nested_struct1.c: Likewise.\n\t* testsuite/libffi.call/nested_struct2.c: Likewise.\n\t* testsuite/libffi.call/nested_struct3.c: Likewise.\n\t* testsuite/libffi.call/problem1.c: Likewise.\n\t* testsuite/libffi.special/unwindtest.cc: Likewise.\n\n2003-11-20  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/lib/libffi-dg.exp: Make the -lgcc_s conditional.\n\n2003-11-19  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/lib/libffi-dg.exp: Add DYLD_LIBRARY_PATH for darwin.\n\tAdd -lgcc_s to additional flags.\n\n2003-11-12  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* configure.in, include/Makefile.am: PR libgcj/11147, install\n\tthe ffitarget.h header file in a gcc versioned and target\n\tdependent place.\n\t* configure: Regenerated.\n\t* Makefile.in, include/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\n2003-11-09  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/closure_fn0.c: Print result and check\n\twith dg-output to make debugging easier.\n\t* testsuite/libffi.call/closure_fn1.c: Likewise.\n\t* testsuite/libffi.call/closure_fn2.c: Likewise.\n\t* testsuite/libffi.call/closure_fn3.c: Likewise.\n\t* testsuite/libffi.call/closure_fn4.c: Likewise.\n\t* testsuite/libffi.call/closure_fn5.c: Likewise.\n\t* testsuite/libffi.call/cls_12byte.c: Likewise.\n\t* testsuite/libffi.call/cls_16byte.c: Likewise.\n\t* testsuite/libffi.call/cls_18byte.c: Likewise.\n\t* testsuite/libffi.call/cls_19byte.c: Likewise.\n\t* testsuite/libffi.call/cls_1_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_20byte.c: Likewise.\n\t* testsuite/libffi.call/cls_20byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_24byte.c: Likewise.\n\t* testsuite/libffi.call/cls_2byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte2.c: Likewise.\n\t* testsuite/libffi.call/cls_4_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_4byte.c: Likewise.\n\t* testsuite/libffi.call/cls_5byte.c: Likewise.\n\t* testsuite/libffi.call/cls_64byte.c: Likewise.\n\t* testsuite/libffi.call/cls_6byte.c: Likewise.\n\t* testsuite/libffi.call/cls_7byte.c: Likewise.\n\t* testsuite/libffi.call/cls_8byte.c: Likewise.\n\t* testsuite/libffi.call/cls_9byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_9byte2.c: Likewise.\n\t* testsuite/libffi.call/cls_double.c: Likewise.\n\t* testsuite/libffi.call/cls_float.c: Likewise.\n\t* testsuite/libffi.call/cls_schar.c: Likewise.\n\t* testsuite/libffi.call/cls_sint.c: Likewise.\n\t* testsuite/libffi.call/cls_sshort.c: Likewise.\n\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n\t* testsuite/libffi.call/cls_uint.c: Likewise.\n\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n\t* testsuite/libffi.call/problem1.c: Likewise.\n\n\t* testsuite/libffi.special/unwindtest.cc: Make ffi_closure\n\tstatic.\n\n2003-11-08  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/cls_9byte2.c: New test case.\n\t* testsuite/libffi.call/cls_9byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_64byte.c: Likewise.\n\t* testsuite/libffi.call/cls_20byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_19byte.c: Likewise.\n\t* testsuite/libffi.call/cls_18byte.c: Likewise.\n\t* testsuite/libffi.call/closure_fn4.c: Likewise.\n\t* testsuite/libffi.call/closure_fn5.c: Likewise.\n\t* testsuite/libffi.call/cls_schar.c: Likewise.\n\t* testsuite/libffi.call/cls_sint.c: Likewise.\n\t* testsuite/libffi.call/cls_sshort.c: Likewise.\n\t* testsuite/libffi.call/nested_struct2.c: Likewise.\n\t* testsuite/libffi.call/nested_struct3.c: Likewise.\n\n2003-11-08  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/cls_double.c: Do a check on the result.\n\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n\t* testsuite/libffi.call/cls_uint.c: Likewise.\n\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n\t* testsuite/libffi.call/return_sc.c: Cleanup whitespaces.\n\n2003-11-06  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/prep_cif.c (ffi_prep_cif): Move the validity check after\n\tthe initialization.\n\n2003-10-23  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/java_raw_api.c (ffi_java_ptrarray_to_raw): Replace\n\tFFI_ASSERT(FALSE) with FFI_ASSERT(0).\n\n2003-10-22  David Daney  <ddaney@avtrex.com>\n\n\t* src/mips/ffitarget.h: Replace undefined UINT32 and friends with\n\t__attribute__((__mode__(__SI__))) and friends.\n\n2003-10-22  Andreas Schwab  <schwab@suse.de>\n\n\t* src/ia64/ffi.c: Replace FALSE/TRUE with false/true.\n\n2003-10-21  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* configure.in: AC_LINK_FILES(ffitarget.h).\n\t* configure: Regenerate.\n\t* Makefile.in: Likewise.\n\t* include/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\t* fficonfig.h.in: Likewise.\n\n2003-10-21  Paolo Bonzini  <bonzini@gnu.org>\n\t    Richard Henderson  <rth@redhat.com>\n\n\tAvoid that ffi.h includes fficonfig.h.\n\n\t* Makefile.am (EXTRA_DIST): Include ffitarget.h files\n\t(TARGET_SRC_MIPS_GCC): Renamed to TARGET_SRC_MIPS_IRIX.\n\t(TARGET_SRC_MIPS_SGI): Removed.\n\t(MIPS_GCC): Renamed to TARGET_SRC_MIPS_IRIX.\n\t(MIPS_SGI): Removed.\n\t(CLEANFILES): Removed.\n\t(mostlyclean-am, clean-am, mostlyclean-sub, clean-sub): New\n\ttargets.\n\t* acconfig.h: Removed.\n\t* configure.in: Compute sizeofs only for double and long double.\n\tUse them to define and subst HAVE_LONG_DOUBLE.  Include comments\n\tinto AC_DEFINE instead of using acconfig.h.  Create\n\tinclude/ffitarget.h instead of include/fficonfig.h.  Rename\n\tMIPS_GCC to MIPS_IRIX, drop MIPS_SGI since we are in gcc's tree.\n\tAC_DEFINE EH_FRAME_FLAGS.\n\t* include/Makefile.am (DISTCLEANFILES): New automake macro.\n\t(hack_DATA): Add ffitarget.h.\n\t* include/ffi.h.in: Remove all system specific definitions.\n\tDeclare raw API even if it is not installed, why bother?\n\tUse limits.h instead of SIZEOF_* to define ffi_type_*.  Do\n\tnot define EH_FRAME_FLAGS, it is in fficonfig.h now.  Include\n\tffitarget.h instead of fficonfig.h.  Remove ALIGN macro.\n\t(UINT_ARG, INT_ARG): Removed, use ffi_arg and ffi_sarg instead.\n\t* include/ffi_common.h (bool): Do not define.\n\t(ffi_assert): Accept failed assertion.\n\t(ffi_type_test): Return void and accept file/line.\n\t(FFI_ASSERT): Pass stringized failed assertion.\n\t(FFI_ASSERT_AT): New macro.\n\t(FFI_ASSERT_VALID_TYPE): New macro.\n\t(UINT8, SINT8, UINT16, SINT16, UINT32, SINT32,\n\tUINT64, SINT64): Define here with gcc's __attribute__ macro\n\tinstead of in ffi.h\n\t(FLOAT32, ALIGN): Define here instead of in ffi.h\n\t* include/ffi-mips.h: Removed.  Its content moved to\n\tsrc/mips/ffitarget.h after separating assembly and C sections.\n\t* src/alpha/ffi.c, src/alpha/ffi.c, src/java_raw_api.c\n\tsrc/prep_cif.c, src/raw_api.c, src/ia64/ffi.c,\n\tsrc/mips/ffi.c, src/mips/n32.S, src/mips/o32.S,\n\tsrc/mips/ffitarget.h, src/sparc/ffi.c, src/x86/ffi64.c:\n\tSIZEOF_ARG -> FFI_SIZEOF_ARG.\n\t* src/ia64/ffi.c: Include stdbool.h (provided by GCC 2.95+).\n\t* src/debug.c (ffi_assert): Accept stringized failed assertion.\n\t(ffi_type_test): Rewritten.\n\t* src/prep-cif.c (initialize_aggregate, ffi_prep_cif): Call\n\tFFI_ASSERT_VALID_TYPE.\n\t* src/alpha/ffitarget.h, src/arm/ffitarget.h,\n\tsrc/ia64/ffitarget.h, src/m68k/ffitarget.h,\n\tsrc/mips/ffitarget.h, src/powerpc/ffitarget.h,\n\tsrc/s390/ffitarget.h, src/sh/ffitarget.h,\n\tsrc/sh64/ffitarget.h, src/sparc/ffitarget.h,\n\tsrc/x86/ffitarget.h: New files.\n\t* src/alpha/osf.S, src/arm/sysv.S, src/ia64/unix.S,\n\tsrc/m68k/sysv.S, src/mips/n32.S, src/mips/o32.S,\n\tsrc/powerpc/aix.S, src/powerpc/darwin.S,\n\tsrc/powerpc/ffi_darwin.c, src/powerpc/linux64.S,\n\tsrc/powerpc/linux64_closure.S, src/powerpc/ppc_closure.S,\n\tsrc/powerpc/sysv.S, src/s390/sysv.S, src/sh/sysv.S,\n\tsrc/sh64/sysv.S, src/sparc/v8.S, src/sparc/v9.S,\n\tsrc/x86/sysv.S, src/x86/unix64.S, src/x86/win32.S:\n\tinclude fficonfig.h\n\n2003-10-20  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* src/mips/ffi.c: Use _ABIN32, _ABIO32 instead of external\n\t_MIPS_SIM_NABI32, _MIPS_SIM_ABI32.\n\n2003-10-19  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Declare bytes again.\n\tUsed when FFI_DEBUG = 1.\n\n2003-10-14  Alan Modra  <amodra@bigpond.net.au>\n\n\t* src/types.c (double, longdouble): Default POWERPC64 to 8 byte size\n\tand align.\n\n2003-10-06  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* include/ffi_mips.h: Define FFI_MIPS_N32 for N32/N64 ABIs,\n\tFFI_MIPS_O32 for O32 ABI.\n\n2003-10-01  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/lib/libffi-dg.exp: Set LD_LIBRARY_PATH_64 for\n\tSPARC64. Cleanup whitespaces.\n\n2003-09-19  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/closure_fn0.c: Xfail mips, arm,\n\tstrongarm, xscale. Cleanup whitespaces.\n\t* testsuite/libffi.call/closure_fn1.c: Likewise.\n\t* testsuite/libffi.call/closure_fn2.c: Likewise.\n\t* testsuite/libffi.call/closure_fn3.c: Likewise.\n\t* testsuite/libffi.call/cls_12byte.c: Likewise.\n\t* testsuite/libffi.call/cls_16byte.c: Likewise.\n\t* testsuite/libffi.call/cls_1_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_20byte.c: Likewise.\n\t* testsuite/libffi.call/cls_24byte.c: Likewise.\n\t* testsuite/libffi.call/cls_2byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte2.c: Likewise.\n\t* testsuite/libffi.call/cls_4_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_4byte.c: Likewise.\n\t* testsuite/libffi.call/cls_5byte.c: Likewise.\n\t* testsuite/libffi.call/cls_6byte.c: Likewise.\n\t* testsuite/libffi.call/cls_7byte.c: Likewise.\n\t* testsuite/libffi.call/cls_8byte.c: Likewise.\n\t* testsuite/libffi.call/cls_double.c: Likewise.\n\t* testsuite/libffi.call/cls_float.c: Likewise.\n\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n\t* testsuite/libffi.call/cls_uint.c: Likewise.\n\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n\t* testsuite/libffi.call/nested_struct.c: Likewise.\n\t* testsuite/libffi.call/nested_struct1.c: Likewise.\n\t* testsuite/libffi.call/problem1.c: Likewise.\n\t* testsuite/libffi.special/unwindtest.cc: Likewise.\n\t* testsuite/libffi.call/pyobjc-tc.c: Cleanup whitespaces.\n\n2003-09-18  David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/powerpc/aix.S: Cleanup whitespaces.\n\t* src/powerpc/aix_closure.S: Likewise.\n\n2003-09-18  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/powerpc/darwin.S: Cleanup whitespaces, comment formatting.\n\t* src/powerpc/darwin_closure.S: Likewise.\n\t* src/powerpc/ffi_darwin.c: Likewise.\n\n2003-09-18  Andreas Tobler  <a.tobler@schweiz.ch>\n\t    David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/types.c (double): Add AIX and Darwin to the right TYPEDEF.\n\t* src/powerpc/aix_closure.S: Remove the pointer to the outgoing\n\tparameter stack.\n\t* src/powerpc/darwin_closure.S: Likewise.\n\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Handle structures\n\taccording to the Darwin/AIX ABI.\n\t(ffi_prep_cif_machdep): Likewise.\n\t(ffi_closure_helper_DARWIN): Likewise.\n\tRemove the outgoing parameter stack logic. Simplify the evaluation\n\tof the different CASE types.\n\t(ffi_prep_clousure): Avoid the casts on lvalues. Change the branch\n\tstatement in the trampoline code.\n\n2003-09-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (ffi_prep_args): Take account into the alignement\n\tfor the register size.\n\t(ffi_closure_helper_SYSV): Handle the structure return value\n\taddress correctly.\n\t(ffi_closure_helper_SYSV): Return the appropriate type when\n\tthe registers are used for the structure return value.\n\t* src/sh/sysv.S (ffi_closure_SYSV): Fix the stack layout for\n\tthe 64-bit return value.  Update copyright years.\n\n2003-09-17  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* testsuite/lib/libffi-dg.exp (libffi_target_compile): Search in\n\tsrcdir for ffi_mips.h.\n\n2003-09-12  Alan Modra  <amodra@bigpond.net.au>\n\n\t* src/prep_cif.c (initialize_aggregate): Include tail padding in\n\tstructure size.\n\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64): Correct\n\tplacement of float result.\n\t* testsuite/libffi.special/unwindtest.cc (closure_test_fn1): Correct\n\tcast of \"resp\" for big-endian 64 bit machines.\n\n2003-09-11  Alan Modra  <amodra@bigpond.net.au>\n\n\t* src/types.c (double, longdouble): Merge identical SH and ARM\n\ttypedefs, and add POWERPC64.\n\t* src/powerpc/ffi.c (ffi_prep_args64): Correct next_arg calc for\n\tstruct split over gpr and rest.\n\t(ffi_prep_cif_machdep): Correct intarg_count for structures.\n\t* src/powerpc/linux64.S (ffi_call_LINUX64): Fix gpr offsets.\n\n2003-09-09  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/powerpc/ffi.c (ffi_closure_helper_SYSV) Handle struct\n\tpassing correctly.\n\n2003-09-09  Alan Modra  <amodra@bigpond.net.au>\n\n\t* configure: Regenerate.\n\n2003-09-04  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* Makefile.am: Remove build rules for ffitest.\n\t* Makefile.in: Rebuilt.\n\n2003-09-04  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/java_raw_api.c: Include <stdlib.h> to fix compiler warning\n\tabout implicit declaration of abort().\n\n2003-09-04  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* Makefile.am: Add dejagnu test framework. Fixes PR other/11411.\n\t* Makefile.in: Rebuilt.\n\t* configure.in: Add dejagnu test framework.\n\t* configure: Rebuilt.\n\n\t* testsuite/Makefile.am: New file.\n\t* testsuite/Makefile.in: Built\n\t* testsuite/lib/libffi-dg.exp: New file.\n\t* testsuite/config/default.exp: Likewise.\n\t* testsuite/libffi.call/call.exp: Likewise.\n\t* testsuite/libffi.call/ffitest.h: Likewise.\n\t* testsuite/libffi.call/closure_fn0.c: Likewise.\n\t* testsuite/libffi.call/closure_fn1.c: Likewise.\n\t* testsuite/libffi.call/closure_fn2.c: Likewise.\n\t* testsuite/libffi.call/closure_fn3.c: Likewise.\n\t* testsuite/libffi.call/cls_1_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_4_1byte.c: Likewise.\n\t* testsuite/libffi.call/cls_2byte.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte1.c: Likewise.\n\t* testsuite/libffi.call/cls_3byte2.c: Likewise.\n\t* testsuite/libffi.call/cls_4byte.c: Likewise.\n\t* testsuite/libffi.call/cls_5byte.c: Likewise.\n\t* testsuite/libffi.call/cls_6byte.c: Likewise.\n\t* testsuite/libffi.call/cls_7byte.c: Likewise.\n\t* testsuite/libffi.call/cls_8byte.c: Likewise.\n\t* testsuite/libffi.call/cls_12byte.c: Likewise.\n\t* testsuite/libffi.call/cls_16byte.c: Likewise.\n\t* testsuite/libffi.call/cls_20byte.c: Likewise.\n\t* testsuite/libffi.call/cls_24byte.c: Likewise.\n\t* testsuite/libffi.call/cls_double.c: Likewise.\n\t* testsuite/libffi.call/cls_float.c: Likewise.\n\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n\t* testsuite/libffi.call/cls_uint.c: Likewise.\n\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n\t* testsuite/libffi.call/float.c: Likewise.\n\t* testsuite/libffi.call/float1.c: Likewise.\n\t* testsuite/libffi.call/float2.c: Likewise.\n\t* testsuite/libffi.call/many.c: Likewise.\n\t* testsuite/libffi.call/many_win32.c: Likewise.\n\t* testsuite/libffi.call/nested_struct.c: Likewise.\n\t* testsuite/libffi.call/nested_struct1.c: Likewise.\n\t* testsuite/libffi.call/pyobjc-tc.c: Likewise.\n\t* testsuite/libffi.call/problem1.c: Likewise.\n\t* testsuite/libffi.call/promotion.c: Likewise.\n\t* testsuite/libffi.call/return_ll.c: Likewise.\n\t* testsuite/libffi.call/return_sc.c: Likewise.\n\t* testsuite/libffi.call/return_uc.c: Likewise.\n\t* testsuite/libffi.call/strlen.c: Likewise.\n\t* testsuite/libffi.call/strlen_win32.c: Likewise.\n\t* testsuite/libffi.call/struct1.c: Likewise.\n\t* testsuite/libffi.call/struct2.c: Likewise.\n\t* testsuite/libffi.call/struct3.c: Likewise.\n\t* testsuite/libffi.call/struct4.c: Likewise.\n\t* testsuite/libffi.call/struct5.c: Likewise.\n\t* testsuite/libffi.call/struct6.c: Likewise.\n\t* testsuite/libffi.call/struct7.c: Likewise.\n\t* testsuite/libffi.call/struct8.c: Likewise.\n\t* testsuite/libffi.call/struct9.c: Likewise.\n\t* testsuite/libffi.special/special.exp: New file.\n\t* testsuite/libffi.special/ffitestcxx.h: Likewise.\n\t* testsuite/libffi.special/unwindtest.cc: Likewise.\n\n\n2003-08-13  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (OFS_INT16): Set 0 for little endian case.  Update\n\tcopyright years.\n\n2003-08-02  Alan Modra  <amodra@bigpond.net.au>\n\n\t* src/powerpc/ffi.c (ffi_prep_args64): Modify for changed gcc\n\tstructure passing.\n\t(ffi_closure_helper_LINUX64): Likewise.\n\t* src/powerpc/linux64.S: Remove code writing to parm save area.\n\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64): Use return\n\taddress in lr from ffi_closure_helper_LINUX64 call to calculate\n\ttable address.  Optimize function tail.\n\n2003-07-28  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/sparc/ffi.c: Handle all floating point registers.\n\t* src/sparc/v9.S: Likewise. Fixes second part of PR target/11410.\n\n2003-07-11  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n\n\t* README: Note that libffi is not part of GCC.  Update the project\n\tURL and status.\n\n2003-06-19  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n\t* src/powerpc/ppc_closure.S: Include ffi.h.\n\n2003-06-13  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* src/x86/sysv.S: Avoid gas-only .uleb128/.sleb128 directives.\n\tUse C style comments.\n\n2003-06-13  Kaz Kojima  <kkojima@rr.iij4u.or.jp>\n\n\t* Makefile.am: Add SHmedia support.  Fix a typo of SH support.\n\t* Makefile.in: Regenerate.\n\t* configure.in (sh64-*-linux*, sh5*-*-linux*): Add target.\n\t* configure: Regenerate.\n\t* include/ffi.h.in: Add SHmedia support.\n\t* src/sh64/ffi.c: New file.\n\t* src/sh64/sysv.S: New file.\n\n2003-05-16  Jakub Jelinek  <jakub@redhat.com>\n\n\t* configure.in (HAVE_RO_EH_FRAME): Check whether .eh_frame section\n\tshould be read-only.\n\t* configure: Rebuilt.\n\t* fficonfig.h.in: Rebuilt.\n\t* include/ffi.h.in (EH_FRAME_FLAGS): Define.\n\t* src/alpha/osf.S: Use EH_FRAME_FLAGS.\n\t* src/powerpc/linux64.S: Likewise.\n\t* src/powerpc/linux64_closure.S: Likewise.  Include ffi.h.\n\t* src/powerpc/sysv.S: Use EH_FRAME_FLAGS.  Use pcrel encoding\n\tif -fpic/-fPIC/-mrelocatable.\n\t* src/powerpc/powerpc_closure.S: Likewise.\n\t* src/sparc/v8.S: If HAVE_RO_EH_FRAME is defined, don't include\n\t#write in .eh_frame flags.\n\t* src/sparc/v9.S: Likewise.\n\t* src/x86/unix64.S: Use EH_FRAME_FLAGS.\n\t* src/x86/sysv.S: Likewise.  Use pcrel encoding if -fpic/-fPIC.\n\t* src/s390/sysv.S: Use EH_FRAME_FLAGS.  Include ffi.h.\n\n2003-05-07  Jeff Sturm  <jsturm@one-point.com>\n\n\tFixes PR bootstrap/10656\n\t* configure.in (HAVE_AS_REGISTER_PSEUDO_OP): Test assembler\n\tsupport for .register pseudo-op.\n\t* src/sparc/v8.S: Use it.\n\t* fficonfig.h.in: Rebuilt.\n\t* configure: Rebuilt.\n\n2003-04-18  Jakub Jelinek  <jakub@redhat.com>\n\n\t* include/ffi.h.in (POWERPC64): Define if 64-bit.\n\t(enum ffi_abi): Add FFI_LINUX64 on POWERPC.\n\tMake it the default on POWERPC64.\n\t(FFI_TRAMPOLINE_SIZE): Define to 24 on POWERPC64.\n\t* configure.in: Change powerpc-*-linux* into powerpc*-*-linux*.\n\t* configure: Rebuilt.\n\t* src/powerpc/ffi.c (hidden): Define.\n\t(ffi_prep_args_SYSV): Renamed from\n\tffi_prep_args.  Cast pointers to unsigned long to shut up warnings.\n\t(NUM_GPR_ARG_REGISTERS64, NUM_FPR_ARG_REGISTERS64,\n\tASM_NEEDS_REGISTERS64): New.\n\t(ffi_prep_args64): New function.\n\t(ffi_prep_cif_machdep): Handle FFI_LINUX64 ABI.\n\t(ffi_call): Likewise.\n\t(ffi_prep_closure): Likewise.\n\t(flush_icache): Surround by #ifndef POWERPC64.\n\t(ffi_dblfl): New union type.\n\t(ffi_closure_helper_SYSV): Use it to avoid aliasing problems.\n\t(ffi_closure_helper_LINUX64): New function.\n\t* src/powerpc/ppc_closure.S: Surround whole file by #ifndef\n\t__powerpc64__.\n\t* src/powerpc/sysv.S: Likewise.\n\t(ffi_call_SYSV): Rename ffi_prep_args to ffi_prep_args_SYSV.\n\t* src/powerpc/linux64.S: New file.\n\t* src/powerpc/linux64_closure.S: New file.\n\t* Makefile.am (EXTRA_DIST): Add src/powerpc/linux64.S and\n\tsrc/powerpc/linux64_closure.S.\n\t(TARGET_SRC_POWERPC): Likewise.\n\n\t* src/ffitest.c (closure_test_fn, closure_test_fn1, closure_test_fn2,\n\tclosure_test_fn3): Fix result printing on big-endian 64-bit\n\tmachines.\n\t(main): Print tst2_arg instead of uninitialized tst2_result.\n\n\t* src/ffitest.c (main): Hide what closure pointer really points to\n\tfrom the compiler.\n\n2003-04-16  Richard Earnshaw  <rearnsha@arm.com>\n\n\t* configure.in (arm-*-netbsdelf*): Add configuration.\n\t(configure): Regenerated.\n\n2003-04-04  Loren J. Rittle  <ljrittle@acm.org>\n\n\t* include/Makefile.in: Regenerate.\n\n2003-03-21  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n\n\t* libffi/include/ffi.h.in: Define X86 instead of X86_64 in 32\n\tbit mode.\n\t* libffi/src/x86/ffi.c (ffi_closure_SYSV, ffi_closure_raw_SYSV):\n\tReceive closure pointer through parameter, read args using\n\t__builtin_dwarf_cfa.\n\t(FFI_INIT_TRAMPOLINE): Send closure reference through eax.\n\n2003-03-12  Andreas Schwab  <schwab@suse.de>\n\n\t* configure.in: Avoid trailing /. in toolexeclibdir.\n\t* configure: Rebuilt.\n\n2003-03-03  Andreas Tobler <a.tobler@schweiz.ch>\n\n\t* src/powerpc/darwin_closure.S: Recode to fit dynamic libraries.\n\n2003-02-06  Andreas Tobler <a.tobler@schweiz.ch>\n\n\t* libffi/src/powerpc/darwin_closure.S:\n\tFix alignement bug, allocate 8 bytes for the result.\n\t* libffi/src/powerpc/aix_closure.S:\n\tLikewise.\n\t* libffi/src/powerpc/ffi_darwin.c:\n\tUpdate stackframe description for aix/darwin_closure.S.\n\n2003-02-06  Jakub Jelinek  <jakub@redhat.com>\n\n\t* src/s390/ffi.c (ffi_closure_helper_SYSV): Add hidden visibility\n\tattribute.\n\n2003-01-31  Christian Cornelssen  <ccorn@cs.tu-berlin.de>,\n\t    Andreas Schwab  <schwab@suse.de>\n\n\t* configure.in: Adjust command to source config-ml.in to account\n\tfor changes to the libffi_basedir definition.\n\t(libffi_basedir): Remove ${srcdir} from value and include trailing\n\tslash if nonempty.\n\n\t* configure: Regenerate.\n\n2003-01-29  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n\t* src/powerpc/ppc_closure.S: Recode to fit shared libs.\n\n2003-01-28  Andrew Haley  <aph@redhat.com>\n\n\t* include/ffi.h.in: Enable FFI_CLOSURES for x86_64.\n\t* src/x86/ffi64.c (ffi_prep_closure): New.\n\t(ffi_closure_UNIX64_inner): New.\n\t* src/x86/unix64.S (ffi_closure_UNIX64): New.\n\n2003-01-27  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* configure.in (toolexecdir, toolexeclibdir): Set and AC_SUBST.\n\tRemove USE_LIBDIR conditional.\n\t* Makefile.am (toolexecdir, toolexeclibdir): Don't override.\n\t* Makefile.in, configure: Rebuilt.\n\n2003-01027  David Edelsohn  <edelsohn@gnu.org>\n\n\t* Makefile.am (TARGET_SRC_POWERPC_AIX): Fix typo.\n\t* Makefile.in: Regenerate.\n\n2003-01-22  Andrew Haley  <aph@redhat.com>\n\n\t* src/powerpc/darwin.S (_ffi_call_AIX): Add Augmentation size to\n\tunwind info.\n\n2003-01-21  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/powerpc/darwin.S: Add unwind info.\n\t* src/powerpc/darwin_closure.S: Likewise.\n\n2003-01-14  Andrew Haley  <aph@redhat.com>\n\n\t* src/x86/ffi64.c (ffi_prep_args): Check for void retval.\n\t(ffi_prep_cif_machdep): Likewise.\n\t* src/x86/unix64.S: Add unwind info.\n\n2003-01-14  Andreas Jaeger  <aj@suse.de>\n\n\t* src/ffitest.c (main): Only use ffi_closures if those are\n\tsupported.\n\n2003-01-13 Andreas Tobler <a.tobler@schweiz.ch>\n\n\t* libffi/src/ffitest.c\n\t add closure testcases\n\n2003-01-13 Kevin B. Hendricks <khendricks@ivey.uwo.ca>\n\n\t* libffi/src/powerpc/ffi.c\n\t fix alignment bug for float (4 byte aligned iso 8 byte)\n\n2003-01-09  Geoffrey Keating  <geoffk@apple.com>\n\n\t* src/powerpc/ffi_darwin.c: Remove RCS version string.\n\t* src/powerpc/darwin.S: Remove RCS version string.\n\n2003-01-03  Jeff Sturm  <jsturm@one-point.com>\n\n\t* include/ffi.h.in: Add closure defines for SPARC, SPARC64.\n\t* src/ffitest.c (main): Use static storage for closure.\n\t* src/sparc/ffi.c (ffi_prep_closure, ffi_closure_sparc_inner): New.\n\t* src/sparc/v8.S (ffi_closure_v8): New.\n\t* src/sparc/v9.S (ffi_closure_v9): New.\n\n2002-11-10  Ranjit Mathew <rmathew@hotmail.com>\n\n\t* include/ffi.h.in: Added FFI_STDCALL ffi_type\n\t  enumeration for X86_WIN32.\n\t* src/x86/win32.S: Added ffi_call_STDCALL function\n\t  definition.\n\t* src/x86/ffi.c (ffi_call/ffi_raw_call): Added\n\t  switch cases for recognising FFI_STDCALL and\n\t  calling ffi_call_STDCALL if target is X86_WIN32.\n\t* src/ffitest.c (my_stdcall_strlen/stdcall_many):\n\t  stdcall versions of the \"my_strlen\" and \"many\"\n\t  test functions (for X86_WIN32).\n\t  Added test cases to test stdcall invocation using\n\t  these functions.\n\n2002-12-02  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/sysv.S: Add DWARF2 unwind info.\n\n2002-11-27  Ulrich Weigand  <uweigand@de.ibm.com>\n\n\t* src/s390/sysv.S (.eh_frame section): Make section read-only.\n\n2002-11-26  Jim Wilson  <wilson@redhat.com>\n\n\t* src/types.c (FFI_TYPE_POINTER): Has size 8 on IA64.\n\n2002-11-23  H.J. Lu <hjl@gnu.org>\n\n\t* acinclude.m4: Add dummy AM_PROG_LIBTOOL.\n\tInclude ../config/accross.m4.\n\t* aclocal.m4; Rebuild.\n\t* configure: Likewise.\n\n2002-11-15  Ulrich Weigand  <uweigand@de.ibm.com>\n\n\t* src/s390/sysv.S (.eh_frame section): Adapt to pcrel FDE encoding.\n\n2002-11-11  DJ Delorie  <dj@redhat.com>\n\n\t* configure.in: Look for common files in the right place.\n\n2002-10-08  Ulrich Weigand  <uweigand@de.ibm.com>\n\n\t* src/java_raw_api.c (ffi_java_raw_to_ptrarray): Interpret\n\traw data as _Jv_word values, not ffi_raw.\n\t(ffi_java_ptrarray_to_raw): Likewise.\n\t(ffi_java_rvalue_to_raw): New function.\n\t(ffi_java_raw_call): Call it.\n\t(ffi_java_raw_to_rvalue): New function.\n\t(ffi_java_translate_args): Call it.\n\t* src/ffitest.c (closure_test_fn): Interpret return value\n\tas ffi_arg, not int.\n\t* src/s390/ffi.c (ffi_prep_cif_machdep): Add missing\n\tFFI_TYPE_POINTER case.\n\t(ffi_closure_helper_SYSV): Likewise.  Also, assume return\n\tvalues extended to word size.\n\n2002-10-02  Andreas Jaeger  <aj@suse.de>\n\n\t* src/x86/ffi64.c (ffi_prep_cif_machdep): Remove debug output.\n\n2002-10-01  Bo Thorsen  <bo@smetana.suse.de>\n\n\t* include/ffi.h.in: Fix i386 win32 compilation.\n\n2002-09-30  Ulrich Weigand  <uweigand@de.ibm.com>\n\n\t* configure.in: Add s390x-*-linux-* target.\n\t* configure: Regenerate.\n\t* include/ffi.h.in: Define S390X for s390x targets.\n\t(FFI_CLOSURES): Define for s390/s390x.\n\t(FFI_TRAMPOLINE_SIZE): Likewise.\n\t(FFI_NATIVE_RAW_API): Likewise.\n\t* src/prep_cif.c (ffi_prep_cif): Do not compute stack space for s390.\n\t* src/types.c (FFI_TYPE_POINTER): Use 8-byte pointers on s390x.\n\t* src/s390/ffi.c: Major rework of existing code.  Add support for\n\ts390x targets.  Add closure support.\n\t* src/s390/sysv.S: Likewise.\n\n2002-09-29  Richard Earnshaw  <rearnsha@arm.com>\n\n\t* src/arm/sysv.S: Fix typo.\n\n2002-09-28  Richard Earnshaw  <rearnsha@arm.com>\n\n\t* src/arm/sysv.S: If we don't have machine/asm.h and the pre-processor\n\thas defined __USER_LABEL_PREFIX__, then use it in CNAME.\n\t(ffi_call_SYSV): Handle soft-float.\n\n2002-09-27  Bo Thorsen  <bo@suse.de>\n\n\t* include/ffi.h.in: Fix multilib x86-64 support.\n\n2002-09-22  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n\n\t* Makefile.am (all-multi): Fix multilib parallel build.\n\n2002-07-19  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* configure.in (sh[34]*-*-linux*): Add brackets.\n\t* configure: Regenerate.\n\n2002-07-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* Makefile.am: Add SH support.\n\t* Makefile.in: Regenerate.\n\t* configure.in (sh-*-linux*, sh[34]*-*-linux*): Add target.\n\t* configure: Regenerate.\n\t* include/ffi.h.in: Add SH support.\n\t* src/sh/ffi.c: New file.\n\t* src/sh/sysv.S: New file.\n\t* src/types.c: Add SH support.\n\n2002-07-16  Bo Thorsen  <bo@suse.de>\n\n\t* src/x86/ffi64.c: New file that adds x86-64 support.\n\t* src/x86/unix64.S: New file that handles argument setup for\n\tx86-64.\n\t* src/x86/sysv.S: Don't use this on x86-64.\n\t* src/x86/ffi.c: Don't use this on x86-64.\n\tRemove unused vars.\n\t* src/prep_cif.c (ffi_prep_cif): Don't do stack size calculation\n\tfor x86-64.\n\t* src/ffitest.c (struct6): New test that tests a special case in\n\tthe x86-64 ABI.\n\t(struct7): Likewise.\n\t(struct8): Likewise.\n\t(struct9): Likewise.\n\t(closure_test_fn): Silence warning about this when it's not used.\n\t(main): Add the new tests.\n\t(main): Fix a couple of wrong casts and silence some compiler warnings.\n\t* include/ffi.h.in: Add x86-64 ABI definition.\n\t* fficonfig.h.in: Regenerate.\n\t* Makefile.am: Add x86-64 support.\n\t* configure.in: Likewise.\n\t* Makefile.in: Regenerate.\n\t* configure: Likewise.\n\n2002-06-24  Bo Thorsen  <bo@suse.de>\n\n\t* src/types.c: Merge settings for similar architectures.\n\tAdd x86-64 sizes and alignments.\n\n2002-06-23  Bo Thorsen  <bo@suse.de>\n\n\t* src/arm/ffi.c (ffi_prep_args): Remove unused vars.\n\t* src/sparc/ffi.c (ffi_prep_args_v8): Likewise.\n\t* src/mips/ffi.c (ffi_prep_args): Likewise.\n\t* src/m68k/ffi.c (ffi_prep_args): Likewise.\n\n2002-07-18  H.J. Lu  (hjl@gnu.org)\n\n\t* Makefile.am (TARGET_SRC_MIPS_LINUX): New.\n\t(libffi_la_SOURCES): Support MIPS_LINUX.\n\t(libffi_convenience_la_SOURCES): Likewise.\n\t* Makefile.in: Regenerated.\n\n\t* configure.in (mips64*-*): Skip.\n\t(mips*-*-linux*): New.\n\t* configure: Regenerated.\n\n\t* src/mips/ffi.c: Include <sgidefs.h>.\n\n2002-06-06  Ulrich Weigand  <uweigand@de.ibm.com>\n\n\t* src/s390/sysv.S: Save/restore %r6.  Add DWARF-2 unwind info.\n\n2002-05-27  Roger Sayle  <roger@eyesopen.com>\n\n\t* src/x86/ffi.c (ffi_prep_args): Remove reference to avn.\n\n2002-05-27  Bo Thorsen  <bo@suse.de>\n\n\t* src/x86/ffi.c (ffi_prep_args): Remove unused variable and\n\tfix formatting.\n\n2002-05-13  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/powerpc/ffi_darwin.c (ffi_prep_closure): Declare fd at\n\tbeginning of function (for older apple cc).\n\n2002-05-08  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* configure.in (ORIGINAL_LD_FOR_MULTILIBS): Preserve LD at\n\tscript entry, and set LD to it when configuring multilibs.\n\t* configure: Rebuilt.\n\n2002-05-05  Jason Thorpe  <thorpej@wasabisystems.com>\n\n\t* configure.in (sparc64-*-netbsd*): Add target.\n\t(sparc-*-netbsdelf*): Likewise.\n\t* configure: Regenerate.\n\n2002-04-28  David S. Miller  <davem@redhat.com>\n\n\t* configure.in, configure: Fix SPARC test in previous change.\n\n2002-04-29  Gerhard Tonn  <GerhardTonn@swol.de>\n\n\t* Makefile.am: Add Linux for S/390 support.\n\t* Makefile.in: Regenerate.\n\t* configure.in: Add Linux for S/390 support.\n\t* configure: Regenerate.\n\t* include/ffi.h.in: Add Linux for S/390 support.\n\t* src/s390/ffi.c: New file from libffi CVS tree.\n\t* src/s390/sysv.S: New file from libffi CVS tree.\n\n2002-04-28  Jakub Jelinek  <jakub@redhat.com>\n\n\t* configure.in (HAVE_AS_SPARC_UA_PCREL): Check for working\n\t%r_disp32().\n\t* src/sparc/v8.S: Use it.\n\t* src/sparc/v9.S: Likewise.\n\t* fficonfig.h.in: Rebuilt.\n\t* configure: Rebuilt.\n\n2002-04-08  Hans Boehm  <Hans_Boehm@hp.com>\n\n\t* src/java_raw_api.c (ffi_java_raw_size): Handle FFI_TYPE_DOUBLE\n\tcorrectly.\n\t* src/ia64/unix.S: Add unwind information. Fix comments.\n\tSave sp in a way that's compatible with unwind info.\n\t(ffi_call_unix): Correctly restore sp in all cases.\n\t* src/ia64/ffi.c: Add, fix comments.\n\n2002-04-08  Jakub Jelinek  <jakub@redhat.com>\n\n\t* src/sparc/v8.S: Make .eh_frame dependent on target word size.\n\n2002-04-06  Jason Thorpe  <thorpej@wasabisystems.com>\n\n\t* configure.in (alpha*-*-netbsd*): Add target.\n\t* configure: Regenerate.\n\n2002-04-04  Jeff Sturm  <jsturm@one-point.com>\n\n\t* src/sparc/v8.S: Add unwind info.\n\t* src/sparc/v9.S: Likewise.\n\n2002-03-30  Krister Walfridsson  <cato@df.lth.se>\n\n\t* configure.in: Enable i*86-*-netbsdelf*.\n\t* configure: Rebuilt.\n\n2002-03-29  David Billinghurst <David.Billinghurst@riotinto.com>\n\n\tPR other/2620\n\t* src/mips/n32.s: Delete\n\t* src/mips/o32.s: Delete\n\n2002-03-21  Loren J. Rittle  <ljrittle@acm.org>\n\n\t* configure.in: Enable alpha*-*-freebsd*.\n\t* configure: Rebuilt.\n\n2002-03-17  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n\n\t* Makefile.am: libfficonvenience -> libffi_convenience.\n\t* Makefile.in: Rebuilt.\n\n\t* Makefile.am: Define ffitest_OBJECTS.\n\t* Makefile.in: Rebuilt.\n\n2002-03-07  Andreas Tobler  <toa@pop.agri.ch>\n\t    David Edelsohn  <edelsohn@gnu.org>\n\n\t* Makefile.am (EXTRA_DIST): Add Darwin and AIX closure files.\n\t(TARGET_SRC_POWERPC_AIX): Add aix_closure.S.\n\t(TARGET_SRC_POWERPC_DARWIN): Add darwin_closure.S.\n\t* Makefile.in: Regenerate.\n\t* include/ffi.h.in: Add AIX and Darwin closure definitions.\n\t* src/powerpc/ffi_darwin.c (ffi_prep_closure): New function.\n\t(flush_icache, flush_range): New functions.\n\t(ffi_closure_helper_DARWIN): New function.\n\t* src/powerpc/aix_closure.S: New file.\n\t* src/powerpc/darwin_closure.S: New file.\n\n2002-02-24  Jeff Sturm  <jsturm@one-point.com>\n\n\t* include/ffi.h.in: Add typedef for ffi_arg.\n\t* src/ffitest.c (main): Declare rint with ffi_arg.\n\n2002-02-21  Andreas Tobler  <toa@pop.agri.ch>\n\n\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Skip appropriate\n\tnumber of GPRs for floating-point arguments.\n\n2002-01-31  Anthony Green  <green@redhat.com>\n\n\t* configure: Rebuilt.\n\t* configure.in: Replace CHECK_SIZEOF and endian tests with\n\tcross-compiler friendly macros.\n\t* aclocal.m4 (AC_COMPILE_CHECK_SIZEOF, AC_C_BIGENDIAN_CROSS): New\n\tmacros.\n\n2002-01-18  David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/powerpc/darwin.S (_ffi_call_AIX): New.\n\t* src/powerpc/aix.S (ffi_call_DARWIN): New.\n\n2002-01-17  David Edelsohn  <edelsohn@gnu.org>\n\n\t* Makefile.am (EXTRA_DIST): Add Darwin and AIX files.\n\t(TARGET_SRC_POWERPC_AIX): New.\n\t(POWERPC_AIX): New stanza.\n\t* Makefile.in: Regenerate.\n\t* configure.in: Add AIX case.\n\t* configure: Regenerate.\n\t* include/ffi.h.in (ffi_abi): Add FFI_AIX.\n\t* src/powerpc/ffi_darwin.c (ffi_status): Use \"long\" to scale frame\n\tsize.  Fix \"long double\" support.\n\t(ffi_call): Add FFI_AIX case.\n\t* src/powerpc/aix.S: New.\n\n2001-10-09  John Hornkvist  <john@toastedmarshmallow.com>\n\n\tImplement Darwin PowerPC ABI.\n\t* configure.in: Handle powerpc-*-darwin*.\n\t* Makefile.am: Set source files for POWERPC_DARWIN.\n\t* configure: Rebuilt.\n\t* Makefile.in: Rebuilt.\n\t* include/ffi.h.in: Define FFI_DARWIN and FFI_DEFAULT_ABI for\n\tPOWERPC_DARWIN.\n\t* src/powerpc/darwin.S: New file.\n\t* src/powerpc/ffi_darwin.c: New file.\n\n2001-10-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n\n\t* src/x86/ffi.c: Fix spelling error of \"separate\" as \"seperate\".\n\n2001-07-16  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* src/x86/sysv.S: Avoid gas-only .balign directive.\n\tUse C style comments.\n\n2001-07-16  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* src/alpha/ffi.c (ffi_prep_closure): Avoid gas-only mnemonic.\n\tFixes PR bootstrap/3563.\n\n2001-06-26  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* src/alpha/osf.S (ffi_closure_osf): Use .rdata for ECOFF.\n\n2001-06-25  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* configure.in: Recognize sparc*-sun-* host.\n\t* configure: Regenerate.\n\n2001-06-06  Andrew Haley  <aph@redhat.com>\n\n\t* src/alpha/osf.S (__FRAME_BEGIN__): Conditionalize for ELF.\n\n2001-06-03  Andrew Haley  <aph@redhat.com>\n\n\t* src/alpha/osf.S: Add unwind info.\n\t* src/powerpc/sysv.S: Add unwind info.\n\t* src/powerpc/ppc_closure.S: Likewise.\n\n2000-05-31  Jeff Sturm  <jsturm@one-point.com>\n\n\t* configure.in: Fix AC_ARG_ENABLE usage.\n\t* configure: Rebuilt.\n\n2001-05-06  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n\n\t* configure.in: Remove warning about beta code.\n\t* configure: Rebuilt.\n\n2001-04-25  Hans Boehm <Hans_Boehm@hp.com>\n\n\t* src/ia64/unix.S: Restore stack pointer when returning from\n\tffi_closure_UNIX.\n\t* src/ia64/ffi.c: Fix typo in comment.\n\n2001-04-18  Jim Wilson  <wilson@redhat.com>\n\n\t* src/ia64/unix.S: Delete unnecessary increment and decrement of loc2\n\tto eliminate RAW DV.\n\n2001-04-12  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* Makefile.am: Make a libtool convenience library.\n\t* Makefile.in: Rebuilt.\n\n2001-03-29  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* configure.in: Use different syntax for subdirectory creation.\n\t* configure: Rebuilt.\n\n2001-03-27  Jon Beniston  <jon@beniston.com>\n\n\t* configure.in: Added X86_WIN32 target (Win32, CygWin, MingW).\n\t* configure: Rebuilt.\n\t* Makefile.am: Added X86_WIN32 target support.\n\t* Makefile.in: Rebuilt.\n\n\t* include/ffi.h.in: Added X86_WIN32 target support.\n\n\t* src/ffitest.c: Doesn't run structure tests for X86_WIN32 targets.\n\t* src/types.c: Added X86_WIN32 target support.\n\n\t* src/x86/win32.S: New file. Based on sysv.S, but with EH\n\tstuff removed and made to work with CygWin's gas.\n\n2001-03-26  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* configure.in: Make target subdirectory in build dir.\n\t* Makefile.am: Override suffix based rules to specify correct output\n\tsubdirectory.\n\t* Makefile.in: Rebuilt.\n\t* configure: Rebuilt.\n\n2001-03-23  Kevin B Hendricks  <khendricks@ivey.uwo.ca>\n\n\t* src/powerpc/ppc_closure.S: New file.\n\t* src/powerpc/ffi.c (ffi_prep_args): Fixed ABI compatibility bug\n\tinvolving long long and register pairs.\n\t(ffi_prep_closure): New function.\n\t(flush_icache): Likewise.\n\t(ffi_closure_helper_SYSV): Likewise.\n\t* include/ffi.h.in (FFI_CLOSURES): Define on PPC.\n\t(FFI_TRAMPOLINE_SIZE): Likewise.\n\t(FFI_NATIVE_RAW_API): Likewise.\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (EXTRA_DIST): Added src/powerpc/ppc_closure.S.\n\t(TARGET_SRC_POWERPC): Likewise.\n\n2001-03-19  Tom Tromey  <tromey@redhat.com>\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (ffitest_LDFLAGS): New macro.\n\n2001-03-02  Nick Clifton  <nickc@redhat.com>\n\n\t* include/ffi.h.in: Remove RCS ident string.\n\t* include/ffi_mips.h: Remove RCS ident string.\n\t* src/debug.c: Remove RCS ident string.\n\t* src/ffitest.c: Remove RCS ident string.\n\t* src/prep_cif.c: Remove RCS ident string.\n\t* src/types.c: Remove RCS ident string.\n\t* src/alpha/ffi.c: Remove RCS ident string.\n\t* src/alpha/osf.S: Remove RCS ident string.\n\t* src/arm/ffi.c: Remove RCS ident string.\n\t* src/arm/sysv.S: Remove RCS ident string.\n\t* src/mips/ffi.c: Remove RCS ident string.\n\t* src/mips/n32.S: Remove RCS ident string.\n\t* src/mips/o32.S: Remove RCS ident string.\n\t* src/sparc/ffi.c: Remove RCS ident string.\n\t* src/sparc/v8.S: Remove RCS ident string.\n\t* src/sparc/v9.S: Remove RCS ident string.\n\t* src/x86/ffi.c: Remove RCS ident string.\n\t* src/x86/sysv.S: Remove RCS ident string.\n\n2001-02-08  Joseph S. Myers  <jsm28@cam.ac.uk>\n\n\t* include/ffi.h.in: Change sourceware.cygnus.com references to\n\tgcc.gnu.org.\n\n2000-12-09  Richard Henderson  <rth@redhat.com>\n\n\t* src/alpha/ffi.c (ffi_call): Simplify struct return test.\n\t(ffi_closure_osf_inner): Index rather than increment avalue\n\tand arg_types.  Give ffi_closure_osf the raw return value type.\n\t* src/alpha/osf.S (ffi_closure_osf): Handle return value type\n\tpromotion.\n\n2000-12-07  Richard Henderson  <rth@redhat.com>\n\n\t* src/raw_api.c (ffi_translate_args): Fix typo.\n\t(ffi_prep_closure): Likewise.\n\n\t* include/ffi.h.in [ALPHA]: Define FFI_CLOSURES and\n\tFFI_TRAMPOLINE_SIZE.\n\t* src/alpha/ffi.c (ffi_prep_cif_machdep): Adjust minimal\n\tcif->bytes for new ffi_call_osf implementation.\n\t(ffi_prep_args): Absorb into ...\n\t(ffi_call): ... here.  Do all stack allocation here and\n\tavoid a callback function.\n\t(ffi_prep_closure, ffi_closure_osf_inner): New.\n\t* src/alpha/osf.S (ffi_call_osf): Reimplement with no callback.\n\t(ffi_closure_osf): New.\n\n2000-09-10  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* config.guess, config.sub, install-sh: Removed.\n\t* ltconfig, ltmain.sh, missing, mkinstalldirs: Likewise.\n\t* Makefile.in: Rebuilt.\n\n\t* acinclude.m4: Include libtool macros from the top level.\n\t* aclocal.m4, configure: Rebuilt.\n\n2000-08-22  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* configure.in [i*86-*-freebsd*] (TARGET, TARGETDIR): Set.\n\t* configure: Rebuilt.\n\n2000-05-11  Scott Bambrough  <scottb@netwinder.org>\n\n\t* libffi/src/arm/sysv.S (ffi_call_SYSV): Doubles are not saved to\n\tmemory correctly.  Use conditional instructions, not branches where\n\tpossible.\n\n2000-05-04  Tom Tromey  <tromey@cygnus.com>\n\n\t* configure: Rebuilt.\n\t* configure.in: Match `arm*-*-linux-*'.\n\tFrom Chris Dornan <cdornan@arm.com>.\n\n2000-04-28  Jakub Jelinek  <jakub@redhat.com>\n\n\t* Makefile.am (SUBDIRS): Define.\n\t(AM_MAKEFLAGS): Likewise.\n\t(Multilib support.): Add section.\n\t* Makefile.in: Rebuilt.\n\t* ltconfig (extra_compiler_flags, extra_compiler_flags_value):\n\tNew variables. Set for gcc using -print-multi-lib. Export them\n\tto libtool.\n\t(sparc64-*-linux-gnu*): Use libsuff 64 for search paths.\n\t* ltmain.sh (B|b|V): Don't throw away gcc's -B, -b and -V options\n\tfor -shared links.\n\t(extra_compiler_flags_value, extra_compiler_flags): Check these\n\tfor extra compiler options which need to be passed down in\n\tcompiler_flags.\n\n2000-04-16  Anthony Green  <green@redhat.com>\n\n\t* configure: Rebuilt.\n\t* configure.in: Change i*86-pc-linux* to i*86-*-linux*.\n\n2000-04-14  Jakub Jelinek  <jakub@redhat.com>\n\n\t* include/ffi.h.in (SPARC64): Define for 64bit SPARC builds.\n\tSet SPARC FFI_DEFAULT_ABI based on SPARC64 define.\n\t* src/sparc/ffi.c (ffi_prep_args_v8): Renamed from ffi_prep_args.\n\tReplace all void * sizeofs with sizeof(int).\n\tOnly compare type with FFI_TYPE_LONGDOUBLE if LONGDOUBLE is\n\tdifferent than DOUBLE.\n\tRemove FFI_TYPE_SINT32 and FFI_TYPE_UINT32 cases (handled elsewhere).\n\t(ffi_prep_args_v9): New function.\n\t(ffi_prep_cif_machdep): Handle V9 ABI and long long on V8.\n\t(ffi_V9_return_struct): New function.\n\t(ffi_call): Handle FFI_V9 ABI from 64bit code and FFI_V8 ABI from\n\t32bit code (not yet cross-arch calls).\n\t* src/sparc/v8.S: Add struct return delay nop.\n\tHandle long long.\n\t* src/sparc/v9.S: New file.\n\t* src/prep_cif.c (ffi_prep_cif): Return structure pointer\n\tis used on sparc64 only for structures larger than 32 bytes.\n\tPass by reference for structures is done for structure arguments\n\tlarger than 16 bytes.\n\t* src/ffitest.c (main): Use 64bit rint on sparc64.\n\tRun long long tests on sparc.\n\t* src/types.c (FFI_TYPE_POINTER): Pointer is 64bit on alpha and\n\tsparc64.\n\t(FFI_TYPE_LONGDOUBLE): long double is 128 bit aligned to 128 bits\n\ton sparc64.\n\t* configure.in (sparc-*-linux*): New supported target.\n\t(sparc64-*-linux*): Likewise.\n\t* configure: Rebuilt.\n\t* Makefile.am: Add v9.S to SPARC files.\n\t* Makefile.in: Likewise.\n\t(LINK): Surround $(CCLD) into double quotes, so that multilib\n\tcompiles work correctly.\n\n2000-04-04  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n\t* configure: Rebuilt.\n\t* configure.in: (i*86-*-solaris*): New libffi target. Patch\n\tproposed by Bryce McKinlay.\n\n2000-03-20  Tom Tromey  <tromey@cygnus.com>\n\n\t* Makefile.in: Hand edit for java_raw_api.lo.\n\n2000-03-08  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* config.guess, config.sub: Update from the gcc tree.\n\tFix for PR libgcj/168.\n\n2000-03-03  Tom Tromey  <tromey@cygnus.com>\n\n\t* Makefile.in: Fixed ia64 by hand.\n\n\t* configure: Rebuilt.\n\t* configure.in (--enable-multilib): New option.\n\t(libffi_basedir): New subst.\n\t(AC_OUTPUT): Added multilib code.\n\n2000-03-02  Tom Tromey  <tromey@cygnus.com>\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (TARGET_SRC_IA64): Use `ia64', not `alpha', as\n\tdirectory name.\n\n2000-02-25  Hans Boehm <boehm@acm.org>\n\n\t* src/ia64/ffi.c, src/ia64/ia64_flags.h, src/ia64/unix.S: New\n\tfiles.\n\t* src/raw_api.c (ffi_translate_args): Fixed typo in argument\n\tlist.\n\t(ffi_prep_raw_closure): Use ffi_translate_args, not\n\tffi_closure_translate.\n\t* src/java_raw_api.c: New file.\n\t* src/ffitest.c (closure_test_fn): New function.\n\t(main): Define `rint' as long long on IA64.  Added new test when\n\tFFI_CLOSURES is defined.\n\t* include/ffi.h.in (ALIGN): Use size_t, not unsigned.\n\t(ffi_abi): Recognize IA64.\n\t(ffi_raw): Added `flt' field.\n\tAdded \"Java raw API\" code.\n\t* configure.in: Recognize ia64.\n\t* Makefile.am (TARGET_SRC_IA64): New macro.\n\t(libffi_la_common_SOURCES): Added java_raw_api.c.\n\t(libffi_la_SOURCES): Define in IA64 case.\n\n2000-01-04  Tom Tromey  <tromey@cygnus.com>\n\n\t* Makefile.in: Rebuilt with newer automake.\n\n1999-12-31  Tom Tromey  <tromey@cygnus.com>\n\n\t* Makefile.am (INCLUDES): Added -I$(top_srcdir)/src.\n\n1999-09-01  Tom Tromey  <tromey@cygnus.com>\n\n\t* include/ffi.h.in: Removed PACKAGE and VERSION defines and\n\tundefs.\n\t* fficonfig.h.in: Rebuilt.\n\t* configure: Rebuilt.\n\t* configure.in: Pass 3rd argument to AM_INIT_AUTOMAKE.\n\tUse AM_PROG_LIBTOOL (automake 1.4 compatibility).\n\t* acconfig.h: Don't #undef PACKAGE or VERSION.\n\n1999-08-09  Anthony Green  <green@cygnus.com>\n\n\t* include/ffi.h.in: Try to work around messy header problem\n\twith PACKAGE and VERSION.\n\n\t* configure: Rebuilt.\n\t* configure.in: Change version to 2.00-beta.\n\n\t* fficonfig.h.in: Rebuilt.\n\t* acconfig.h (FFI_NO_STRUCTS, FFI_NO_RAW_API): Define.\n\n\t* src/x86/ffi.c (ffi_raw_call): Rename.\n\n1999-08-02  Kresten Krab Thorup  <krab@dominiq.is.s.u-tokyo.ac.jp>\n\n\t* src/x86/ffi.c (ffi_closure_SYSV): New function.\n\t(ffi_prep_incoming_args_SYSV): Ditto.\n\t(ffi_prep_closure): Ditto.\n\t(ffi_closure_raw_SYSV): Ditto.\n\t(ffi_prep_raw_closure): More ditto.\n\t(ffi_call_raw): Final ditto.\n\n\t* include/ffi.h.in: Add definitions for closure and raw API.\n\n\t* src/x86/ffi.c (ffi_prep_cif_machdep): Added case for\n\tFFI_TYPE_UINT64.\n\n\t* Makefile.am (libffi_la_common_SOURCES): Added raw_api.c\n\n\t* src/raw_api.c: New file.\n\n\t* include/ffi.h.in (ffi_raw): New type.\n\t(UINT_ARG, SINT_ARG): New defines.\n\t(ffi_closure, ffi_raw_closure): New types.\n\t(ffi_prep_closure, ffi_prep_raw_closure): New declarations.\n\n\t* configure.in: Add check for endianness and sizeof void*.\n\n\t* src/x86/sysv.S (ffi_call_SYSV): Call fixup routine via argument,\n\tinstead of directly.\n\n\t* configure: Rebuilt.\n\nThu Jul  8 14:28:42 1999  Anthony Green  <green@cygnus.com>\n\n\t* configure.in: Add x86 and powerpc BeOS configurations.\n\tFrom Makoto Kato <m_kato@ga2.so-net.ne.jp>.\n\n1999-05-09  Anthony Green  <green@cygnus.com>\n\n\t* configure.in: Add warning about this being beta code.\n\tRemove src/Makefile.am from the picture.\n\t* configure: Rebuilt.\n\n\t* Makefile.am: Move logic from src/Makefile.am.  Add changes\n\tto support libffi as a target library.\n\t* Makefile.in: Rebuilt.\n\n\t* aclocal.m4, config.guess, config.sub, ltconfig, ltmain.sh:\n\tUpgraded to new autoconf, automake, libtool.\n\n\t* README: Tweaks.\n\n\t* LICENSE: Update copyright date.\n\n\t* src/Makefile.am, src/Makefile.in: Removed.\n\n1998-11-29  Anthony Green  <green@cygnus.com>\n\n\t* include/ChangeLog: Removed.\n\t* src/ChangeLog: Removed.\n\t* src/mips/ChangeLog: Removed.\n\t* src/sparc/ChangeLog: Remboved.\n\t* src/x86/ChangeLog: Removed.\n\n\t* ChangeLog.v1: Created.\n\n=============================================================================\nFrom the old ChangeLog.libffi file....\n\n2011-02-08  Andreas Tobler  <andreast@fgznet.ch>\n\n\t* testsuite/lib/libffi.exp: Tweak for stand-alone mode.\n\n2009-12-25  Samuli Suominen  <ssuominen@gentoo.org>\n\n\t* configure.ac: Undefine _AC_ARG_VAR_PRECIOUS for autoconf 2.64.\n\t* configure: Rebuilt.\n\t* fficonfig.h.in: Rebuilt.\n\n2009-06-16  Andrew Haley  <aph@redhat.com>\n\n\t* testsuite/libffi.call/cls_align_sint64.c,\n\ttestsuite/libffi.call/cls_align_uint64.c,\n\ttestsuite/libffi.call/cls_longdouble_va.c,\n\ttestsuite/libffi.call/cls_ulonglong.c,\n\ttestsuite/libffi.call/return_ll1.c,\n\ttestsuite/libffi.call/stret_medium2.c: Fix printf format\n\tspecifiers.\n\t* testsuite/libffi.call/huge_struct.c: Ad x86 XFAILs.\n\t* testsuite/libffi.call/float2.c: Fix dg-excess-errors.\n\t* testsuite/libffi.call/ffitest.h,\n\ttestsuite/libffi.special/ffitestcxx.h (PRIdLL, PRIuLL): Define.\n\n2009-06-12  Andrew Haley  <aph@redhat.com>\n\n\t* testsuite/libffi.call/cls_align_sint64.c,\n\ttestsuite/libffi.call/cls_align_uint64.c,\n\ttestsuite/libffi.call/cls_ulonglong.c,\n\ttestsuite/libffi.call/return_ll1.c,\n\ttestsuite/libffi.call/stret_medium2.c: Fix printf format\n\tspecifiers.\n\ttestsuite/libffi.special/unwindtest.cc: include stdint.h.\n\n2009-06-11  Timothy Wall  <twall@users.sf.net>\n\n\t* Makefile.am,\n        configure.ac,\n        include/ffi.h.in,\n        include/ffi_common.h,\n        src/closures.c,\n        src/dlmalloc.c,\n        src/x86/ffi.c,\n        src/x86/ffitarget.h,\n        src/x86/win64.S (new),\n\tREADME: Added win64 support (mingw or MSVC)\n        * Makefile.in,\n        include/Makefile.in,\n        man/Makefile.in,\n        testsuite/Makefile.in,\n        configure,\n        aclocal.m4: Regenerated\n        * ltcf-c.sh: properly escape cygwin/w32 path\n        * man/ffi_call.3: Clarify size requirements for return value.\n        * src/x86/ffi64.c: Fix filename in comment.\n        * src/x86/win32.S: Remove unused extern.\n\n        * testsuite/libffi.call/closure_fn0.c,\n        testsuite/libffi.call/closure_fn1.c,\n        testsuite/libffi.call/closure_fn2.c,\n        testsuite/libffi.call/closure_fn3.c,\n        testsuite/libffi.call/closure_fn4.c,\n        testsuite/libffi.call/closure_fn5.c,\n        testsuite/libffi.call/closure_fn6.c,\n\ttestsuite/libffi.call/closure_stdcall.c,\n\ttestsuite/libffi.call/cls_12byte.c,\n\ttestsuite/libffi.call/cls_16byte.c,\n\ttestsuite/libffi.call/cls_18byte.c,\n\ttestsuite/libffi.call/cls_19byte.c,\n\ttestsuite/libffi.call/cls_1_1byte.c,\n\ttestsuite/libffi.call/cls_20byte.c,\n\ttestsuite/libffi.call/cls_20byte1.c,\n\ttestsuite/libffi.call/cls_24byte.c,\n\ttestsuite/libffi.call/cls_2byte.c,\n\ttestsuite/libffi.call/cls_3_1byte.c,\n\ttestsuite/libffi.call/cls_3byte1.c,\n \ttestsuite/libffi.call/cls_3byte2.c,\n \ttestsuite/libffi.call/cls_4_1byte.c,\n \ttestsuite/libffi.call/cls_4byte.c,\n \ttestsuite/libffi.call/cls_5_1_byte.c,\n \ttestsuite/libffi.call/cls_5byte.c,\n \ttestsuite/libffi.call/cls_64byte.c,\n \ttestsuite/libffi.call/cls_6_1_byte.c,\n \ttestsuite/libffi.call/cls_6byte.c,\n \ttestsuite/libffi.call/cls_7_1_byte.c,\n \ttestsuite/libffi.call/cls_7byte.c,\n \ttestsuite/libffi.call/cls_8byte.c,\n \ttestsuite/libffi.call/cls_9byte1.c,\n \ttestsuite/libffi.call/cls_9byte2.c,\n \ttestsuite/libffi.call/cls_align_double.c,\n \ttestsuite/libffi.call/cls_align_float.c,\n \ttestsuite/libffi.call/cls_align_longdouble.c,\n \ttestsuite/libffi.call/cls_align_longdouble_split.c,\n \ttestsuite/libffi.call/cls_align_longdouble_split2.c,\n \ttestsuite/libffi.call/cls_align_pointer.c,\n \ttestsuite/libffi.call/cls_align_sint16.c,\n \ttestsuite/libffi.call/cls_align_sint32.c,\n \ttestsuite/libffi.call/cls_align_sint64.c,\n \ttestsuite/libffi.call/cls_align_uint16.c,\n \ttestsuite/libffi.call/cls_align_uint32.c,\n \ttestsuite/libffi.call/cls_align_uint64.c,\n \ttestsuite/libffi.call/cls_dbls_struct.c,\n \ttestsuite/libffi.call/cls_double.c,\n \ttestsuite/libffi.call/cls_double_va.c,\n \ttestsuite/libffi.call/cls_float.c,\n \ttestsuite/libffi.call/cls_longdouble.c,\n \ttestsuite/libffi.call/cls_longdouble_va.c,\n \ttestsuite/libffi.call/cls_multi_schar.c,\n \ttestsuite/libffi.call/cls_multi_sshort.c,\n \ttestsuite/libffi.call/cls_multi_sshortchar.c,\n \ttestsuite/libffi.call/cls_multi_uchar.c,\n \ttestsuite/libffi.call/cls_multi_ushort.c,\n \ttestsuite/libffi.call/cls_multi_ushortchar.c,\n \ttestsuite/libffi.call/cls_pointer.c,\n \ttestsuite/libffi.call/cls_pointer_stack.c,\n \ttestsuite/libffi.call/cls_schar.c,\n \ttestsuite/libffi.call/cls_sint.c,\n \ttestsuite/libffi.call/cls_sshort.c,\n \ttestsuite/libffi.call/cls_uchar.c,\n \ttestsuite/libffi.call/cls_uint.c,\n \ttestsuite/libffi.call/cls_ulonglong.c,\n \ttestsuite/libffi.call/cls_ushort.c,\n \ttestsuite/libffi.call/err_bad_abi.c,\n \ttestsuite/libffi.call/err_bad_typedef.c,\n \ttestsuite/libffi.call/float2.c,\n \ttestsuite/libffi.call/huge_struct.c,\n \ttestsuite/libffi.call/nested_struct.c,\n \ttestsuite/libffi.call/nested_struct1.c,\n \ttestsuite/libffi.call/nested_struct10.c,\n \ttestsuite/libffi.call/nested_struct2.c,\n \ttestsuite/libffi.call/nested_struct3.c,\n \ttestsuite/libffi.call/nested_struct4.c,\n \ttestsuite/libffi.call/nested_struct5.c,\n \ttestsuite/libffi.call/nested_struct6.c,\n \ttestsuite/libffi.call/nested_struct7.c,\n \ttestsuite/libffi.call/nested_struct8.c,\n \ttestsuite/libffi.call/nested_struct9.c,\n \ttestsuite/libffi.call/problem1.c,\n \ttestsuite/libffi.call/return_ldl.c,\n \ttestsuite/libffi.call/return_ll1.c,\n \ttestsuite/libffi.call/stret_large.c,\n \ttestsuite/libffi.call/stret_large2.c,\n \ttestsuite/libffi.call/stret_medium.c,\n \ttestsuite/libffi.call/stret_medium2.c,\n        testsuite/libffi.special/unwindtest.cc: use ffi_closure_alloc instead\n        of checking for MMAP.  Use intptr_t instead of long casts.\n\n2009-06-04  Andrew Haley  <aph@redhat.com>\n\n\t* src/powerpc/ffitarget.h: Fix misapplied merge from gcc.\n\n2009-06-04  Andrew Haley  <aph@redhat.com>\n\n\t* src/mips/o32.S,\n\tsrc/mips/n32.S: Fix licence formatting.\n\n2009-06-04  Andrew Haley  <aph@redhat.com>\n\n\t* src/x86/darwin.S: Fix licence formatting.\n\tsrc/x86/win32.S: Likewise.\n\tsrc/sh64/sysv.S: Likewise.\n\tsrc/sh/sysv.S: Likewise.\n\n2009-06-04  Andrew Haley  <aph@redhat.com>\n\n\t* src/sh64/ffi.c: Remove lint directives.  Was missing from merge\n\tof Andreas Tobler's patch from 2006-04-22.\n\t\n2009-06-04  Andrew Haley  <aph@redhat.com>\n\n\t* src/sh/ffi.c: Apply missing hunk from Alexandre Oliva's patch of\n\t2007-03-07.\n\n2008-12-26  Timothy Wall  <twall@users.sf.net>\n\n\t* testsuite/libffi.call/cls_longdouble.c,\n        testsuite/libffi.call/cls_longdouble_va.c,\n        testsuite/libffi.call/cls_align_longdouble.c,\n        testsuite/libffi.call/cls_align_longdouble_split.c,\n        testsuite/libffi.call/cls_align_longdouble_split2.c: mark expected\n        failures on x86_64 cygwin/mingw.\n\n2008-12-22  Timothy Wall  <twall@users.sf.net>\n\n\t* testsuite/libffi.call/closure_fn0.c,\n        testsuite/libffi.call/closure_fn1.c,    \n        testsuite/libffi.call/closure_fn2.c,    \n        testsuite/libffi.call/closure_fn3.c,    \n        testsuite/libffi.call/closure_fn4.c,    \n        testsuite/libffi.call/closure_fn5.c,    \n        testsuite/libffi.call/closure_fn6.c,    \n        testsuite/libffi.call/closure_loc_fn0.c,    \n        testsuite/libffi.call/closure_stdcall.c,    \n        testsuite/libffi.call/cls_align_pointer.c,    \n        testsuite/libffi.call/cls_pointer.c,    \n        testsuite/libffi.call/cls_pointer_stack.c: use portable cast from\n        pointer to integer (intptr_t).\n        * testsuite/libffi.call/cls_longdouble.c: disable for win64.\n\t\n2008-12-19  Anthony Green  <green@redhat.com>\n\n\t* configure.ac: Bump version to 3.0.8.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-11-11  Anthony Green  <green@redhat.com>\n\n\t* configure.ac: Bump version to 3.0.7.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-08-25  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* src/powerpc/ffitarget.h (ffi_abi): Add FFI_LINUX and\n\tFFI_LINUX_SOFT_FLOAT to the POWERPC_FREEBSD enum.\n\tAdd note about flag bits used for FFI_SYSV_TYPE_SMALL_STRUCT.\n\tAdjust copyright notice.\n\t* src/powerpc/ffi.c: Add two new flags to indicate if we have one\n\tregister or two register to use for FFI_SYSV structs.\n\t(ffi_prep_cif_machdep): Pass the right register flag introduced above.\n\t(ffi_closure_helper_SYSV): Fix the return type for\n\tFFI_SYSV_TYPE_SMALL_STRUCT. Comment.\n\tAdjust copyright notice.\n\n2008-07-24  Anthony Green  <green@redhat.com>\n\n\t* testsuite/libffi.call/cls_dbls_struct.c,\n\ttestsuite/libffi.call/cls_double_va.c,\n\ttestsuite/libffi.call/cls_longdouble.c,\n\ttestsuite/libffi.call/cls_longdouble_va.c,\n\ttestsuite/libffi.call/cls_pointer.c,\n\ttestsuite/libffi.call/cls_pointer_stack.c,\n\ttestsuite/libffi.call/err_bad_abi.c: Clean up failures from\n\tcompiler warnings.\n\n2008-07-17  Anthony Green  <green@redhat.com>\n\n\t* configure.ac: Bump version to 3.0.6.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.  Add documentation.\n\t* README: Update for new release.\n\n2008-07-16  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (ffi_prep_closure_loc): Turn INSN into an unsigned\n\tint.\n\n2008-07-16  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/sysv.S: Add .note.GNU-stack on Linux.\n\t* src/sh64/sysv.S: Likewise.\n\n2008-04-03  Anthony Green  <green@redhat.com>\n\n\t* libffi.pc.in (Libs): Add -L${libdir}.\n\t* configure.ac: Bump version to 3.0.5.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-04-03  Anthony Green  <green@redhat.com>\n\t    Xerces Ranby  <xerxes@zafena.se>\n\n\t* include/ffi.h.in: Wrap definition of target architecture to\n\tprotect from double definitions.\n\n2008-03-22  Moriyoshi Koizumi  <moriyoshi@gmail.com>\n\n\t* src/x86/ffi.c (ffi_prep_closure_loc): Fix for bug revealed in\n\tclosure_loc_fn0.c.\n\t* testsuite/libffi.call/closure_loc_fn0.c (closure_loc_test_fn0):\n\tNew test.\n\n2008-03-04  Anthony Green  <green@redhat.com>\n\t    Blake Chaffin\n\t    hos@tamanegi.org\n\n\t* testsuite/libffi.call/cls_align_longdouble_split2.c\n          testsuite/libffi.call/cls_align_longdouble_split.c\n          testsuite/libffi.call/cls_dbls_struct.c\n          testsuite/libffi.call/cls_double_va.c\n          testsuite/libffi.call/cls_longdouble.c\n          testsuite/libffi.call/cls_longdouble_va.c\n          testsuite/libffi.call/cls_pointer.c\n          testsuite/libffi.call/cls_pointer_stack.c\n          testsuite/libffi.call/err_bad_abi.c\n          testsuite/libffi.call/err_bad_typedef.c\n          testsuite/libffi.call/huge_struct.c\n          testsuite/libffi.call/stret_large2.c\n          testsuite/libffi.call/stret_large.c\n          testsuite/libffi.call/stret_medium2.c\n          testsuite/libffi.call/stret_medium.c: New tests from Apple.\n\n2008-02-26  Jakub Jelinek  <jakub@redhat.com>\n            Anthony Green  <green@redhat.com>\n\n\t* src/alpha/osf.S: Add .note.GNU-stack on Linux.\n\t* src/s390/sysv.S: Likewise.\n\t* src/powerpc/linux64.S: Likewise.\n\t* src/powerpc/linux64_closure.S: Likewise.\n\t* src/powerpc/ppc_closure.S: Likewise.\n\t* src/powerpc/sysv.S: Likewise.\n\t* src/x86/unix64.S: Likewise.\n\t* src/x86/sysv.S: Likewise.\n\t* src/sparc/v8.S: Likewise.\n\t* src/sparc/v9.S: Likewise.\n\t* src/m68k/sysv.S: Likewise.\n\t* src/ia64/unix.S: Likewise.\n\t* src/arm/sysv.S: Likewise.\n\n2008-02-26  Anthony Green  <green@redhat.com>\n            Thomas Heller  <theller@ctypes.org>\n\n\t* src/x86/ffi.c (ffi_closure_SYSV_inner): Change C++ comment to C\n\tcomment.\n\n2008-02-26  Anthony Green  <green@redhat.org>\n            Thomas Heller  <theller@ctypes.org>\n\n\t* include/ffi.h.in: Change void (*)() to void (*)(void).\n\n2008-02-26  Anthony Green  <green@redhat.org>\n            Thomas Heller  <theller@ctypes.org>\n\n\t* src/alpha/ffi.c: Change void (*)() to void (*)(void).\n\tsrc/alpha/osf.S, src/arm/ffi.c, src/frv/ffi.c, src/ia64/ffi.c,\n\tsrc/ia64/unix.S, src/java_raw_api.c, src/m32r/ffi.c,\n\tsrc/mips/ffi.c, src/pa/ffi.c, src/pa/hpux32.S, src/pa/linux.S,\n\tsrc/powerpc/ffi.c, src/powerpc/ffi_darwin.c, src/raw_api.c,\n\tsrc/s390/ffi.c, src/sh/ffi.c, src/sh64/ffi.c, src/sparc/ffi.c,\n\tsrc/x86/ffi.c, src/x86/unix64.S, src/x86/darwin64.S,\n\tsrc/x86/ffi64.c: Ditto.\n\n2008-02-24  Anthony Green  <green@redhat.org>\n\n\t* configure.ac: Accept openbsd*, not just openbsd.\n\tBump version to 3.0.4.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-02-22  Anthony Green  <green@redhat.com>\n\n\t* README: Clean up list of tested platforms.\n\n2008-02-22  Anthony Green  <green@redhat.com>\n\n\t* configure.ac: Bump version to 3.0.3.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.  Clean up test docs.\n\n2008-02-22  Bjoern Koenig  <bkoenig@alpha-tierchen.de>\n\t    Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* configure.ac: Add amd64-*-freebsd* target.\n\t* configure: Regenerate.\n\n2008-02-22  Thomas Heller <theller@ctypes.org>\n\n\t* configure.ac: Add x86 OpenBSD support.\n\t* configure: Rebuilt.\n\n2008-02-21  Thomas Heller <theller@ctypes.org>\n\n\t* README: Change \"make test\" to \"make check\".\n\n2008-02-21  Anthony Green  <green@redhat.com>\n\n\t* configure.ac: Bump version to 3.0.2.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-02-21  Björn König <bkoenig@alpha-tierchen.de>\n\n\t* src/x86/freebsd.S: New file.\n\t* configure.ac: Add x86 FreeBSD support.\n\t* Makefile.am: Ditto.\n\n2008-02-15  Anthony Green  <green@redhat.com>\n\n\t* configure.ac: Bump version to 3.0.1.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-02-15  David Daney\t <ddaney@avtrex.com>\n\n\t* src/mips/ffi.c: Remove extra '>' from include directive.\n\t(ffi_prep_closure_loc): Use clear_location instead of tramp.\n\n2008-02-15  Anthony Green  <green@redhat.com>\n\n\t* configure.ac: Bump version to 3.0.0.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\n2008-02-15  David Daney\t <ddaney@avtrex.com>\n\n\t* src/mips/ffi.c (USE__BUILTIN___CLEAR_CACHE):\n\tDefine (conditionally), and use it to include cachectl.h.\n\t(ffi_prep_closure_loc): Fix cache flushing.\n\t* src/mips/ffitarget.h (_ABIN32, _ABI64, _ABIO32): Define.\n\n2008-02-15  Anthony Green  <green@redhat.com>\n\n        * man/ffi_call.3, man/ffi_prep_cif.3, man/ffi.3:\n\tUpdate dates and remove all references to ffi_prep_closure.\n\t* configure.ac: Bump version to 2.99.9.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\n2008-02-15  Anthony Green  <green@redhat.com>\n\n\t* man/ffi_prep_closure.3: Delete.\n\t* man/Makefile.am (EXTRA_DIST): Remove ffi_prep_closure.3.\n\t(man_MANS): Ditto.\n\t* man/Makefile.in: Rebuilt.\n\t* configure.ac: Bump version to 2.99.8.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n\t* configure.ac: Bump version to 2.99.7.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* include/ffi.h.in LICENSE src/debug.c src/closures.c\n          src/ffitest.c src/s390/sysv.S src/s390/ffitarget.h\n          src/types.c src/m68k/ffitarget.h src/raw_api.c src/frv/ffi.c\n          src/frv/ffitarget.h src/sh/ffi.c src/sh/sysv.S\n          src/sh/ffitarget.h src/powerpc/ffitarget.h src/pa/ffi.c\n          src/pa/ffitarget.h src/pa/linux.S src/java_raw_api.c\n          src/cris/ffitarget.h src/x86/ffi.c src/x86/sysv.S\n          src/x86/unix64.S src/x86/win32.S src/x86/ffitarget.h\n          src/x86/ffi64.c src/x86/darwin.S src/ia64/ffi.c\n          src/ia64/ffitarget.h src/ia64/ia64_flags.h src/ia64/unix.S\n          src/sparc/ffi.c src/sparc/v9.S src/sparc/ffitarget.h\n          src/sparc/v8.S src/alpha/ffi.c src/alpha/ffitarget.h\n          src/alpha/osf.S src/sh64/ffi.c src/sh64/sysv.S\n          src/sh64/ffitarget.h src/mips/ffi.c src/mips/ffitarget.h\n          src/mips/n32.S src/mips/o32.S src/arm/ffi.c src/arm/sysv.S\n          src/arm/ffitarget.h src/prep_cif.c: Update license text.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n\t* README: Update tested platforms.\n\t* configure.ac: Bump version to 2.99.6.\n\t* configure: Rebuilt.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n\t* configure.ac: Bump version to 2.99.5.\n\t* configure: Rebuilt.\n\t* Makefile.am (EXTRA_DIST): Add darwin64.S\n\t* Makefile.in: Rebuilt.\n\t* testsuite/lib/libffi-dg.exp: Remove libstdc++ bits from GCC tree.\n\t* LICENSE: Update WARRANTY.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n\t* libffi.pc.in (libdir): Fix libdir definition.\n\t* configure.ac: Bump version to 2.99.4.\n\t* configure: Rebuilt.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n\t* README: Update.\n\t* libffi.info: New file.\n\t* doc/stamp-vti: New file.\n\t* configure.ac: Bump version to 2.99.3.\n\t* configure: Rebuilt.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n\t* Makefile.am (SUBDIRS): Add man dir.\n\t* Makefile.in: Rebuilt.\n\t* configure.ac: Create Makefile.\n\t* configure: Rebuilt.\n        * man/ffi_call.3 man/ffi_prep_cif.3 man/ffi_prep_closure.3\n          man/Makefile.am man/Makefile.in: New files.\n\n2008-02-14  Tom Tromey  <tromey@redhat.com>\n\n\t* aclocal.m4, Makefile.in, configure, fficonfig.h.in: Rebuilt.\n\t* mdate-sh, texinfo.tex: New files.\n\t* Makefile.am (info_TEXINFOS): New variable.\n\t* doc/libffi.texi: New file.\n\t* doc/version.texi: Likewise.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n\t* Makefile.am (AM_CFLAGS): Don't compile with -D$(TARGET).\n\t(lib_LTLIBRARIES): Define.\n\t(toolexeclib_LIBRARIES): Undefine.\n\t* Makefile.in: Rebuilt.\n\t* configure.ac: Reset version to 2.99.1.\n\t* configure.in: Rebuilt.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n\t* libffi.pc.in: Use @PACKAGE_NAME@ and @PACKAGE_VERSION@.\n\t* configure.ac: Reset version to 2.99.1.\n\t* configure.in: Rebuilt.\n\t* Makefile.am (EXTRA_DIST): Add ChangeLog.libffi.\n\t* Makefile.in: Rebuilt.\n\t* LICENSE: Update copyright notice.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n\t* include/Makefile.am (nodist_includes_HEADERS): Define.  Don't\n\tdistribute ffitarget.h or ffi.h from the build include dir.\n\t* Makefile.in: Rebuilt.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n\t* include/Makefile.am (includesdir): Install headers under libdir.\n\t(pkgconfigdir): Define. Install libffi.pc.\n\t* include/Makefile.in: Rebuilt.\n\t* libffi.pc.in: Create.\n\t* libtool-version: Increment CURRENT\n\t* configure.ac: Add libffi.pc.in\n\t* configure: Rebuilt.\n\n2008-02-03  Anthony Green  <green@redhat.com>\n\n\t* include/Makefile.am (includesdir): Fix header install with\n\tDESTDIR.\n\t* include/Makefile.in: Rebuilt.\n\n2008-02-03  Timothy Wall  <twall@users.sf.net>\n\n\t* src/x86/ffi.c (FFI_INIT_TRAMPOLINE_STDCALL): Calculate jump return\n          offset based on code pointer, not data pointer.\n\n2008-02-01  Anthony Green  <green@redhat.com>\n\n\t* include/Makefile.am: Fix header installs.\n\t* Makefile.am: Ditto.\n\t* include/Makefile.in: Rebuilt.\n\t* Makefile.in: Ditto.\n\n2008-02-01  Anthony Green  <green@redhat.com>\n\n\t* src/x86/ffi.c (FFI_INIT_TRAMPOLINE_STDCALL,\n\tFFI_INIT_TRAMPOLINE): Revert my broken changes to twall's last\n\tpatch.\n\n2008-01-31  Anthony Green  <green@redhat.com>\n\n\t* Makefile.am (EXTRA_DIST): Add missing files.\n\t* testsuite/Makefile.am: Ditto.\n\t* Makefile.in, testsuite/Makefile.in: Rebuilt.\n\n2008-01-31  Timothy Wall <twall@users.sf.net>\n\n\t* testsuite/libffi.call/closure_stdcall.c: Add test for stdcall\n\tclosures.\n\t* src/x86/ffitarget.h: Increase size of trampoline for stdcall\n\tclosures.\n\t* src/x86/win32.S: Add assembly for stdcall closure.\n\t* src/x86/ffi.c: Initialize stdcall closure trampoline.\n\n2008-01-30  H.J. Lu <hongjiu.lu@intel.com>\n\n\tPR libffi/34612\n\t* src/x86/sysv.S (ffi_closure_SYSV): Pop 4 byte from stack when\n\treturning struct.\n\n\t* testsuite/libffi.call/call.exp: Add \"-O2 -fomit-frame-pointer\"\n\ttests.\n\n2008-01-30  Anthony Green  <green@redhat.com>\n\n\t* Makefile.am, include/Makefile.am: Move headers to\n\tlibffi_la_SOURCES for new automake.\n\t* Makefile.in, include/Makefile.in: Rebuilt.\n\n\t* testsuite/lib/wrapper.exp: Copied from gcc tree to allow for\n\texecution outside of gcc tree.\n\t* testsuite/lib/target-libpath.exp: Ditto.\n\n\t* testsuite/lib/libffi-dg.exp: Many changes to allow for execution\n\toutside of gcc tree.\n\n\n=============================================================================\nFrom the old ChangeLog.libgcj file....\n\n2004-01-14  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* configure.in: Add in AC_PREREQ(2.13)\n\n2003-02-20  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* configure.in: Propagate ORIGINAL_LD_FOR_MULTILIBS to\n\tconfig.status.\n\t* configure: Rebuilt.\n\n2002-01-27  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* configure.in (toolexecdir, toolexeclibdir): Set and AC_SUBST.\n\tRemove USE_LIBDIR conditional.\n\t* Makefile.am (toolexecdir, toolexeclibdir): Don't override.\n\t* Makefile.in, configure: Rebuilt.\n\nMon Aug  9 18:33:38 1999  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\t* include/Makefile.in: Rebuilt.\n\t* Makefile.in: Rebuilt\n\t* Makefile.am (toolexeclibdir): Add $(MULTISUBDIR) even for native\n\tbuilds.\n\tUse USE_LIBDIR.\n\n\t* configure: Rebuilt.\n\t* configure.in (USE_LIBDIR): Define for native builds.\n\tUse lowercase in configure --help explanations.\n\n1999-08-08  Anthony Green  <green@cygnus.com>\n\n\t* include/ffi.h.in (FFI_FN): Remove `...'.\n\n1999-08-08  Anthony Green  <green@cygnus.com>\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (AM_CFLAGS): Compile with -fexceptions.\n\n\t* src/x86/sysv.S: Add exception handling metadata.\n\n\n=============================================================================\n\t\nThe libffi version 1 ChangeLog archive.\n\nVersion 1 of libffi had per-directory ChangeLogs.  Current and future\nversions have a single ChangeLog file in the root directory.  The\nversion 1 ChangeLogs have all been concatenated into this file for\nfuture reference only.\n\n--- libffi ----------------------------------------------------------------\n\nMon Oct  5 02:17:50 1998  Anthony Green  <green@cygnus.com>\n\n\t* configure.in: Boosted rev.\n\t* configure, Makefile.in, aclocal.m4: Rebuilt.\n\t* README: Boosted rev and updated release notes.\n\nMon Oct  5 01:03:03 1998  Anthony Green  <green@cygnus.com>\n\n\t* configure.in: Boosted rev.\n\t* configure, Makefile.in, aclocal.m4: Rebuilt.\n\t* README: Boosted rev and updated release notes.\n\n1998-07-25  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n\n\t* m68k/ffi.c (ffi_prep_cif_machdep): Use bitmask for cif->flags.\n\tCorrectly handle small structures.\n\t(ffi_prep_args): Also handle small structures.\n\t(ffi_call): Pass size of return type to ffi_call_SYSV.\n\t* m68k/sysv.S: Adjust for above changes.  Correctly align small\n\tstructures in the return value.\n\n\t* types.c (uint64, sint64) [M68K]: Change alignment to 4.\n\nFri Apr 17 17:26:58 1998  Anthony Green  <green@hoser.cygnus.com>\n\n\t* configure.in: Boosted rev.\n\t* configure,Makefile.in,aclocal.m4: Rebuilt.\n\t* README: Boosted rev and added release notes.\n\nSun Feb 22 00:50:41 1998  Geoff Keating  <geoffk@ozemail.com.au>\n\n\t* configure.in: Add PowerPC config bits.\n\n1998-02-14  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n\n\t* configure.in: Add m68k config bits.  Change AC_CANONICAL_SYSTEM\n\tto AC_CANONICAL_HOST, this is not a compiler.  Use $host instead\n\tof $target.  Remove AC_CHECK_SIZEOF(char), we already know the\n\tresult.  Fix argument of AC_ARG_ENABLE.\n\t* configure, fficonfig.h.in: Rebuilt.\n\nTue Feb 10 20:53:40 1998  Richard Henderson  <rth@cygnus.com>\n\n\t* configure.in: Add Alpha config bits.\n\nTue May 13 13:39:20 1997  Anthony Green  <green@hoser.cygnus.com>\n\n\t* README: Updated dates and reworded Irix comments.\n\n\t* configure.in: Removed AC_PROG_RANLIB.\n\n\t* Makefile.in, aclocal.m4, config.guess, config.sub, configure,\n\tltmain.sh, */Makefile.in: libtoolized again and\trebuilt with \n\tautomake and autoconf.\n\t\nSat May 10 18:44:50 1997  Tom Tromey  <tromey@cygnus.com>\n\n\t* configure, aclocal.m4: Rebuilt.\n\t* configure.in: Don't compute EXTRADIST; now handled in\n\tsrc/Makefile.in.  Removed macros implied by AM_INIT_AUTOMAKE.\n\tDon't run AM_MAINTAINER_MODE.\n\nThu May  8 14:34:05 1997  Anthony Green  <green@hoser.cygnus.com>\n\n\t* missing, ltmain.sh, ltconfig.sh: Created. These are new files\n\trequired by automake and libtool.\n\n\t* README: Boosted rev to 1.14. Added notes.\n\n\t* acconfig.h: Moved PACKAGE and VERSION for new automake.\n\t\n\t* configure.in: Changes for libtool.\n\t\n\t* Makefile.am (check): make test now make check. Uses libtool now.\n\n\t* Makefile.in, configure.in, aclocal.h, fficonfig.h.in: Rebuilt.\n\nThu May  1 16:27:07 1997  Anthony Green  <green@hoser.cygnus.com>\n\n\t* missing: Added file required by new automake.\n\nTue Nov 26 14:10:42 1996  Anthony Green  <green@csk3.cygnus.com>\n\n\t* acconfig.h: Added USING_PURIFY flag. This is defined when\n\t--enable-purify-safety was used at configure time.\n\n\t* configure.in (allsources): Added --enable-purify-safety switch.\n\t(VERSION): Boosted rev to 1.13.\n\t* configure: Rebuilt.\n\nFri Nov 22 06:46:12 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* configure.in (VERSION): Boosted rev to 1.12.\n\tRemoved special CFLAGS hack for gcc.\n\t* configure: Rebuilt.\n\n\t* README: Boosted rev to 1.12. Added notes.\n\n\t* Many files: Cygnus Support changed to Cygnus Solutions.\n\nWed Oct 30 11:15:25 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* configure.in (VERSION): Boosted rev to 1.11.\n\t* configure: Rebuilt.\n\n\t* README: Boosted rev to 1.11. Added notes about GNU make.\n\nTue Oct 29 12:25:12 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* configure.in: Fixed -Wall trick.\n\t(VERSION): Boosted rev.\n\t* configure: Rebuilt\n\n\t* acconfig.h: Needed for --enable-debug configure switch.\n\n\t* README: Boosted rev to 1.09. Added more notes on building\n\tlibffi, and LCLint.\n\n\t* configure.in: Added --enable-debug switch. Boosted rev to\n\t1.09.\n\t* configure: Rebuilt\n\nTue Oct 15 13:11:28 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* configure.in (VERSION): Boosted rev to 1.08\n\t* configure: Rebuilt.\n\n\t* README: Added n32 bug fix notes.\n\n\t* Makefile.am: Added \"make lint\" production. \n\t* Makefile.in: Rebuilt.\n\nMon Oct 14 10:54:46 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* README: Added web page reference.\n\n\t* configure.in, README: Boosted rev to 1.05\n\t* configure: Rebuilt.\n\n\t* README: Fixed n32 sample code.\n\nFri Oct 11 17:09:28 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* README: Added sparc notes.\n\n\t* configure.in, README: Boosted rev to 1.04.\n\t* configure: Rebuilt.\n\nThu Oct 10 10:31:03 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* configure.in, README: Boosted rev to 1.03.\n\t* configure: Rebuilt.\n\n\t* README: Added struct notes. \n\n\t* Makefile.am (EXTRA_DIST): Added LICENSE to distribution.\n\t* Makefile.in: Rebuilt.\n\n\t* README: Removed Linux section. No special notes now\n\tbecause aggregates arg/return types work.\n\nWed Oct  9 16:16:42 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* README, configure.in (VERSION): Boosted rev to 1.02\n\t* configure: Rebuilt.\n\nTue Oct  8 11:56:33 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* README (NOTE): Added n32 notes.\n\n\t* Makefile.am: Added test production.\n\t* Makefile: Rebuilt\n\n\t* README: spell checked!\n\n\t* configure.in (VERSION): Boosted rev to 1.01\n\t* configure: Rebuilt.\n\nMon Oct  7 15:50:22 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* configure.in: Added nasty bit to support SGI tools.\n\t* configure: Rebuilt.\n\t\n\t* README: Added SGI notes. Added note about automake bug.\n\nMon Oct  7 11:00:28 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* README: Rewrote intro, and fixed examples.\n\nFri Oct  4 10:19:55 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* configure.in: -D$TARGET is no longer used as a compiler switch.\n\tIt is now inserted into ffi.h at configure time.\n\t* configure: Rebuilt.\n\n\t* FFI_ABI and FFI_STATUS are now ffi_abi and ffi_status.\n\nThu Oct  3 13:47:34 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* README, LICENSE: Created. Wrote some docs.\n\n\t* configure.in: Don't barf on i586-unknown-linuxaout.\n\tAdded EXTRADIST code for \"make dist\".\n\t* configure: Rebuilt.\n\n\t* */Makefile.in: Rebuilt with patched automake. \n\nTue Oct  1 17:12:25 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* Makefile.am, aclocal.m4, config.guess, config.sub,\n\tconfigure.in, fficonfig.h.in, install-sh, mkinstalldirs, \n\tstamp-h.in: Created\n\t* Makefile.in, configure: Generated\n\n--- libffi/include --------------------------------------------------------\n\nTue Feb 24 13:09:36 1998  Anthony Green  <green@gerbil.cygnus.com>\n\n\t* ffi_mips.h: Updated FFI_TYPE_STRUCT_* values based on\n\tffi.h.in changes.  This is a work-around for SGI's \"simple\"\n\tassembler.\n\nSun Feb 22 00:51:55 1998  Geoff Keating  <geoffk@ozemail.com.au>\n\n\t* ffi.h.in: PowerPC support.\n\n1998-02-14  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n\n\t* ffi.h.in: Add m68k support.\n\t(FFI_TYPE_LONGDOUBLE): Make it a separate value.\n\nTue Feb 10 20:55:16 1998  Richard Henderson  <rth@cygnus.com>\n\n\t* ffi.h.in (SIZEOF_ARG): Use a pointer type by default.\n\n\t* ffi.h.in: Alpha support.\n\nFri Nov 22 06:48:45 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.h.in, ffi_common.h: Cygnus Support -> Cygnus Solutions.\n\nWed Nov 20 22:31:01 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffi.h.in: Added ffi_type_void definition.\n\nTue Oct 29 12:22:40 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* Makefile.am (hack_DATA): Always install ffi_mips.h.\n\n\t* ffi.h.in: Removed FFI_DEBUG. It's now in the correct\n\tplace (acconfig.h).\n\tAdded #include <stddef.h> for size_t definition.\n\nTue Oct 15 17:23:35 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffi.h.in, ffi_common.h, ffi_mips.h: More clean up.\n\tCommented out #define of FFI_DEBUG.\n\nTue Oct 15 13:01:06 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi_common.h: Added bool definition.\n\n\t* ffi.h.in, ffi_common.h: Clean up based on LCLint output.\n\tAdded funny /*@...@*/ comments to annotate source.\n\nMon Oct 14 12:29:23 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.h.in: Interface changes based on feedback from Jim\n\tBlandy.\n\nFri Oct 11 16:49:35 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.h.in: Small change for sparc support.\n\nThu Oct 10 14:53:37 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi_mips.h: Added FFI_TYPE_STRUCT_* definitions for \n\tspecial structure return types.\n\nWed Oct  9 13:55:57 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.h.in: Added SIZEOF_ARG definition for X86\n\nTue Oct  8 11:40:36 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.h.in (FFI_FN): Added macro for eliminating compiler warnings.\n\tUse it to case your function pointers to the proper type.\n\n\t* ffi_mips.h (SIZEOF_ARG): Added magic to fix type promotion bug.\n\n\t* Makefile.am (EXTRA_DIST): Added ffi_mips.h to EXTRA_DIST.\n\t* Makefile: Rebuilt.\n\n\t* ffi_mips.h: Created. Moved all common mips definitions here.\n\nMon Oct  7 10:58:12 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffi.h.in: The SGI assember is very picky about parens. Redefined\n \tsome macros to avoid problems.\n\n\t* ffi.h.in: Added FFI_DEFAULT_ABI definitions. Also added\n\texterns for pointer, and 64bit integral ffi_types.\n\nFri Oct  4 09:51:37 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffi.h.in: Added FFI_ABI member to ffi_cif and changed\n\tfunction prototypes accordingly.\n\tAdded #define @TARGET@. Now programs including ffi.h don't \n\thave to specify this themselves.\n\nThu Oct  3 15:36:44 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffi.h.in: Changed ffi_prep_cif's values from void* to void**\n\n\t* Makefile.am (EXTRA_DIST): Added EXTRA_DIST for \"make dist\"\n\tto work.\n\t* Makefile.in: Regenerated.\n\nWed Oct  2 10:16:59 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* Makefile.am: Created\n\t* Makefile.in: Generated\n\n\t* ffi_common.h: Added rcsid comment\n\nTue Oct  1 17:13:51 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.h.in, ffi_common.h: Created\n\n--- libffi/src ------------------------------------------------------------\n\nMon Oct  5 02:17:50 1998  Anthony Green  <green@cygnus.com>\n\n\t* arm/ffi.c, arm/sysv.S: Created.\n\n\t* Makefile.am: Added arm files.\n\t* Makefile.in: Rebuilt.\n\nMon Oct  5 01:41:38 1998  Anthony Green  <green@rtl.cygnus.com>\n\n\t* Makefile.am (libffi_la_LDFLAGS): Incremented revision.\n\nSun Oct  4 16:27:17 1998  Anthony Green  <green@cygnus.com>\n\n\t* alpha/osf.S (ffi_call_osf): Patch for DU assembler.\n\n\t* ffitest.c (main): long long and long double return values work\n\tfor x86.\n\nFri Apr 17 11:50:58 1998  Anthony Green  <green@hoser.cygnus.com>\n\n\t* Makefile.in: Rebuilt.\n\n\t* ffitest.c (main): Floating point tests not executed for systems\n \twith broken lond double (SunOS 4 w/ GCC).\n\n\t* types.c: Fixed x86 alignment info for long long types.\n\nThu Apr 16 07:15:28 1998  Anthony Green  <green@ada.cygnus.com>\n\n\t* ffitest.c: Added more notes about GCC bugs under Irix 6.\n\nWed Apr 15 08:42:22 1998  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffitest.c (struct5): New test function.\n\t(main): New test with struct5.\n\nThu Mar  5 10:48:11 1998  Anthony Green  <green@tootie.to.cygnus.com>\n\n\t* prep_cif.c (initialize_aggregate): Fix assertion for\n\tnested structures.\n\nTue Feb 24 16:33:41 1998  Anthony Green  <green@hoser.cygnus.com>\n\n\t* prep_cif.c (ffi_prep_cif): Added long double support for sparc.\n\nSun Feb 22 00:52:18 1998  Geoff Keating  <geoffk@ozemail.com.au>\n\n\t* powerpc/asm.h: New file.\n\t* powerpc/ffi.c: New file.\n\t* powerpc/sysv.S: New file.\n\t* Makefile.am: PowerPC port.\n\t* ffitest.c (main): Allow all tests to run even in presence of gcc\n \tbug on PowerPC.\n\n1998-02-17  Anthony Green  <green@hoser.cygnus.com>\n\n\t* mips/ffi.c: Fixed comment typo.\n\n\t* x86/ffi.c (ffi_prep_cif_machdep), x86/sysv.S (retfloat): \n\tFixed x86 long double return handling.\n\n\t* types.c: Fixed x86 long double alignment info.\n\n1998-02-14  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n\n\t* types.c: Add m68k support.\n\n\t* ffitest.c (floating): Add long double parameter.\n\t(return_ll, ldblit): New functions to test long long and long\n\tdouble return value.\n\t(main): Fix type error in assignment of ts[1-4]_type.elements.\n\tAdd tests for long long and long double arguments and return\n\tvalues.\n\n\t* prep_cif.c (ffi_prep_cif) [M68K]: Don't allocate argument for\n\tstruct value pointer.\n\n\t* m68k/ffi.c, m68k/sysv.S: New files.\n\t* Makefile.am: Add bits for m68k port.  Add kludge to work around\n\tautomake deficiency.\n\t(test): Don't require \".\" in $PATH.\n\t* Makefile.in: Rebuilt.\n\nWed Feb 11 07:36:50 1998  Anthony Green  <green@hoser.cygnus.com>\n\n\t* Makefile.in: Rebuilt.\n\nTue Feb 10 20:56:00 1998  Richard Henderson  <rth@cygnus.com>\n\n\t* alpha/ffi.c, alpha/osf.S: New files.\n\t* Makefile.am: Alpha port.\n\nTue Nov 18 14:12:07 1997  Anthony Green  <green@hoser.cygnus.com>\n\n\t* mips/ffi.c (ffi_prep_cif_machdep): Initialize rstruct_flag\n\tfor n32.\n\nTue Jun  3 17:18:20 1997  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffitest.c (main): Added hack to get structure tests working\n\tcorrectly.\n\nSat May 10 19:06:42 1997  Tom Tromey  <tromey@cygnus.com>\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (EXTRA_DIST): Explicitly list all distributable\n\tfiles in subdirs.\n\t(VERSION, CC): Removed.\n\nThu May  8 17:19:01 1997  Anthony Green  <green@hoser.cygnus.com>\n\n\t* Makefile.am: Many changes for new automake and libtool.\n\t* Makefile.in: Rebuilt.\n\nFri Nov 22 06:57:56 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffitest.c (main): Fixed test case for non mips machines.\n\nWed Nov 20 22:31:59 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* types.c: Added ffi_type_void declaration.\n\nTue Oct 29 13:07:19 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffitest.c (main): Fixed character constants.\n\t(main): Emit warning for structure test 3 failure on Sun.\n\n\t* Makefile.am (VPATH): Fixed VPATH def'n so automake won't\n\tstrip it out. \n\tMoved distdir hack from libffi to automake. \n\t(ffitest): Added missing -c for $(COMPILE) (change in automake).\n\t* Makefile.in: Rebuilt.\n\t\nTue Oct 15 13:08:20 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* Makefile.am: Added \"make lint\" production. \n\t* Makefile.in: Rebuilt.\n\n\t* prep_cif.c (STACK_ARG_SIZE): Improved STACK_ARG_SIZE macro.\n  \tClean up based on LCLint output. Added funny /*@...@*/ comments to\n \tannotate source.\n\n\t* ffitest.c, debug.c: Cleaned up code.\n\nMon Oct 14 12:26:56 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffitest.c: Changes based on interface changes.\n\n\t* prep_cif.c (ffi_prep_cif): Cleaned up interface based on\n\tfeedback from Jim Blandy.\n\nFri Oct 11 15:53:18 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffitest.c: Reordered tests while porting to sparc.\n\tMade changes to handle lame structure passing for sparc.\n\tRemoved calls to fflush().\n\n\t* prep_cif.c (ffi_prep_cif): Added special case for sparc\n\taggregate type arguments.\n\nThu Oct 10 09:56:51 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffitest.c (main): Added structure passing/returning tests.\n\n\t* prep_cif.c (ffi_prep_cif): Perform proper initialization\n\tof structure return types if needed.\n\t(initialize_aggregate): Bug fix\n\nWed Oct  9 16:04:20 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* types.c: Added special definitions for x86 (double doesn't\n\tneed double word alignment).\n\n\t* ffitest.c: Added many tests\n\nTue Oct  8 09:19:22 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* prep_cif.c (ffi_prep_cif): Fixed assertion.\n\n\t* debug.c (ffi_assert): Must return a non void now.\n\n\t* Makefile.am: Added test production.\n\t* Makefile: Rebuilt.\n\n\t* ffitest.c (main): Created. \n\n\t* types.c: Created. Stripped common code out of */ffi.c.\n\n\t* prep_cif.c: Added missing stdlib.h include.\n\n\t* debug.c (ffi_type_test): Used \"a\" to eliminate compiler\n\twarnings in non-debug builds. Included ffi_common.h.\n\nMon Oct  7 15:36:42 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* Makefile.am: Added a rule for .s -> .o\n\tThis is required by the SGI compiler.\n\t* Makefile: Rebuilt.\n\nFri Oct  4 09:51:08 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* prep_cif.c (initialize_aggregate): Moved abi specification\n\tto ffi_prep_cif().\n\nThu Oct  3 15:37:37 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* prep_cif.c (ffi_prep_cif): Changed values from void* to void**.\n\t(initialize_aggregate): Fixed aggregate type initialization.\n\n\t* Makefile.am (EXTRA_DIST): Added support code for \"make dist\".\n\t* Makefile.in: Regenerated.\n\nWed Oct  2 11:41:57 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* debug.c, prep_cif: Created.\n\n\t* Makefile.am: Added debug.o and prep_cif.o to OBJ.\n\t* Makefile.in: Regenerated.\n\n\t* Makefile.am (INCLUDES): Added missing -I../include\n\t* Makefile.in: Regenerated.\n\nTue Oct  1 17:11:51 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* error.c, Makefile.am: Created.\n\t* Makefile.in: Generated.\n\n--- libffi/src/x86 --------------------------------------------------------\n\nSun Oct  4 16:27:17 1998  Anthony Green  <green@cygnus.com>\n\n\t* sysv.S (retlongdouble): Fixed long long return value support.\n\t* ffi.c (ffi_prep_cif_machdep): Ditto.\n\nWed May 13 04:30:33 1998  Anthony Green  <green@raft.ppp.tsoft.net>\n\n\t* ffi.c (ffi_prep_cif_machdep): Fixed long double return value\n\tsupport.\n\nWed Apr 15 08:43:20 1998  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffi.c (ffi_prep_args): small struct support was missing.\n\nThu May  8 16:53:58 1997  Anthony Green  <green@hoser.cygnus.com>\n\n\t* objects.mak: Removed.\n\nMon Dec  2 15:12:58 1996  Tom Tromey  <tromey@cygnus.com>\n\n\t* sysv.S: Use .balign, for a.out Linux boxes.\n\nTue Oct 15 13:06:50 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffi.c: Clean up based on LCLint output.\n\tAdded funny /*@...@*/ comments to annotate source.\n\nFri Oct 11 16:43:38 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.c (ffi_call): Added assertion for bad ABIs.\n\nWed Oct  9 13:57:27 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* sysv.S (retdouble): Fixed double return problems.\n\n\t* ffi.c\t(ffi_call): Corrected fn arg definition.\n\t(ffi_prep_cif_machdep): Fixed double return problems\n\nTue Oct  8 12:12:49 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.c: Moved ffi_type definitions to types.c.\n\t(ffi_prep_args): Fixed type promotion bug.\n\nMon Oct  7 15:53:06 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.c (FFI_*_TYPEDEF): Removed redundant ';'\n\nFri Oct  4 09:54:53 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffi.c (ffi_call): Removed FFI_ABI arg, and swapped\n\tremaining args.\n\nWed Oct  2 10:07:05 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffi.c, sysv.S, objects.mak: Created.\n\t(ffi_prep_cif): cif->rvalue no longer initialized to NULL.\n\t(ffi_prep_cif_machdep): Moved machine independent cif processing\n\tto src/prep_cif.c. Introduced ffi_prep_cif_machdep().\n\n--- libffi/src/mips -------------------------------------------------------\n\nTue Feb 17 17:18:07 1998  Anthony Green  <green@hoser.cygnus.com>\n\n\t* o32.S: Fixed typo in comment.\n\n\t* ffi.c (ffi_prep_cif_machdep): Fixed argument processing.\n\nThu May  8 16:53:58 1997  Anthony Green  <green@hoser.cygnus.com>\n\n\t* o32.s, n32.s: Wrappers for SGI tool support.\n\n\t* objects.mak: Removed.\n\nTue Oct 29 14:37:45 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.c (ffi_prep_args): Changed int z to size_t z.\n\nTue Oct 15 13:17:25 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* n32.S: Fixed bad stack munging. \n\n\t* ffi.c: Moved prototypes for ffi_call_?32() to here from\n\tffi_mips.h because extended_cif is not defined in ffi_mips.h.\n\nMon Oct 14 12:42:02 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.c: Interface changes based on feedback from Jim Blandy.\n\nThu Oct 10 11:22:16 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* n32.S, ffi.c: Lots of changes to support passing and \n\treturning structures with the n32 calling convention.\n\n\t* n32.S: Fixed fn pointer bug.\n\n\t* ffi.c (ffi_prep_cif_machdep): Fix for o32 structure\n\treturn values.\n\t(ffi_prep_args): Fixed n32 structure passing when structures\n\tpartially fit in registers.\n\nWed Oct  9 13:49:25 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* objects.mak: Added n32.o.\n\n\t* n32.S: Created.\n\n\t* ffi.c (ffi_prep_args): Added magic to support proper\n\tn32 processing.\n\nTue Oct  8 10:37:35 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.c: Moved ffi_type definitions to types.c.\n\t(ffi_prep_args): Fixed type promotion bug.\n\n\t* o32.S: This code is only built for o32 compiles.\n\tA lot of the #define cruft has moved to ffi_mips.h.\n\n\t* ffi.c (ffi_prep_cif_machdep): Fixed arg flags. Second arg\n\tis only processed if the first is either a float or double.\n\nMon Oct  7 15:33:59 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* o32.S: Modified to compile under each of o32, n32 and n64.\n\n\t* ffi.c (FFI_*_TYPEDEF): Removed redundant ';'\n\nFri Oct  4 09:53:25 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffi.c (ffi_call): Removed FFI_ABI arg, and swapped\n\tremaining args.\n\nWed Oct  2 17:41:22 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* o32.S: Removed crufty definitions.\n\nWed Oct  2 12:53:42 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffi.c (ffi_prep_cif): cif->rvalue no longer initialized to NULL.\n\t(ffi_prep_cif_machdep): Moved all machine independent cif processing\n\tto src/prep_cif.c. Introduced ffi_prep_cif_machdep. Return types\n\tof FFI_TYPE_STRUCT are no different than FFI_TYPE_INT.\n\nTue Oct  1 17:11:02 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.c, o32.S, object.mak: Created\n\t\n--- libffi/src/sparc ------------------------------------------------------\n\nTue Feb 24 16:33:18 1998  Anthony Green  <green@hoser.cygnus.com>\n\n\t* ffi.c (ffi_prep_args): Added long double support.\n\nThu May  8 16:53:58 1997  Anthony Green  <green@hoser.cygnus.com>\n\n\t* objects.mak: Removed.\n\nThu May  1 16:07:56 1997  Anthony Green  <green@hoser.cygnus.com>\n\n\t* v8.S: Fixed minor portability problem reported by \n\tRuss McManus <mcmanr@eq.gs.com>.\n\nTue Nov 26 14:12:43 1996  Anthony Green  <green@csk3.cygnus.com>\n\n\t* v8.S: Used STACKFRAME define elsewhere. \n\n\t* ffi.c (ffi_prep_args): Zero out space when USING_PURIFY\n\tis set.\n\t(ffi_prep_cif_machdep): Allocate the correct stack frame \n\tspace for functions with < 6 args.\n\nTue Oct 29 15:08:55 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.c (ffi_prep_args): int z is now size_t z.\n\nMon Oct 14 13:31:24 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* v8.S (ffi_call_V8): Gordon rewrites this again. It looks\n\tgreat now.\n\n\t* ffi.c (ffi_call): The comment about hijacked registers\n\tis no longer valid after gordoni hacked v8.S.\n\n        * v8.S (ffi_call_V8): Rewrote with gordoni. Much simpler.\n\t\n\t* v8.S, ffi.c: ffi_call() had changed to accept more than\n\ttwo args, so v8.S had to change (because it hijacks incoming\n\targ registers).\n\n\t* ffi.c: Interface changes based on feedback from Jim Blandy.\n\nThu Oct 10 17:48:16 1996  Anthony Green  <green@rtl.cygnus.com>\n\n\t* ffi.c, v8.S, objects.mak: Created.\n\t\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.10546875,
          "content": "libffi - Copyright (c) 1996-2024  Anthony Green, Red Hat, Inc and others.\nSee source files for details.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n``Software''), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "LICENSE-BUILDTOOLS",
          "type": "blob",
          "size": 18.259765625,
          "content": "The libffi source distribution contains certain code that is not part\nof libffi, and is only used as tooling to assist with the building and\ntesting of libffi.  This includes the msvcc.sh script used to wrap the\nMicrosoft compiler with GNU compatible command-line options,\nmake_sunver.pl, and the libffi test code distributed in the\ntestsuite/libffi.bhaible directory.  This code is distributed with\nlibffi for the purpose of convenience only, and libffi is in no way\nderived from this code.\n\nmsvcc.sh an testsuite/libffi.bhaible are both distributed under the\nterms of the GNU GPL version 2, as below.\n\n\n\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 6.169921875,
          "content": "## Process this with automake to create Makefile.in\n\nAUTOMAKE_OPTIONS = foreign subdir-objects\n\nACLOCAL_AMFLAGS = -I m4\n\nSUBDIRS = include testsuite man\nif BUILD_DOCS\n## This hack is needed because it doesn't seem possible to make a\n## conditional info_TEXINFOS in Automake.  At least Automake 1.14\n## either gives errors -- if this attempted in the most\n## straightforward way -- or simply unconditionally tries to build the\n## info file.\nSUBDIRS += doc\nendif\n\nEXTRA_DIST = LICENSE ChangeLog.old\t\t\t\t\t\\\n\tm4/libtool.m4 m4/lt~obsolete.m4\t\t\t\t\t\\\n\t m4/ltoptions.m4 m4/ltsugar.m4 m4/ltversion.m4\t\t\t\\\n\t m4/ltversion.m4 src/debug.c msvcc.sh\t\t\t\t\\\n\tgenerate-darwin-source-and-headers.py\t\t\t\t\\\n\tlibffi.xcodeproj/project.pbxproj\t\t\t\t\\\n        src/powerpc/t-aix                                               \\\n\tlibtool-ldflags libtool-version configure.host README.md        \\\n\tlibffi.map.in LICENSE-BUILDTOOLS msvc_build make_sunver.pl\n\n# local.exp is generated by configure\nDISTCLEANFILES = local.exp\n\n# Subdir rules rely on $(FLAGS_TO_PASS)\nFLAGS_TO_PASS = $(AM_MAKEFLAGS)\n\nMAKEOVERRIDES=\n\npkgconfigdir = $(libdir)/pkgconfig\npkgconfig_DATA = libffi.pc\n\ntoolexeclib_LTLIBRARIES = libffi.la\nnoinst_LTLIBRARIES = libffi_convenience.la\n\nlibffi_la_SOURCES = src/prep_cif.c src/types.c \\\n\t\tsrc/raw_api.c src/java_raw_api.c src/closures.c \\\n\t\tsrc/tramp.c\n\nif FFI_DEBUG\nlibffi_la_SOURCES += src/debug.c\nendif\n\nnoinst_HEADERS = src/aarch64/ffitarget.h src/aarch64/internal.h\t\t\\\n\tsrc/alpha/ffitarget.h src/alpha/internal.h\t\t\t\\\n\tsrc/arc/ffitarget.h src/arm/ffitarget.h src/arm/internal.h\t\\\n\tsrc/avr32/ffitarget.h src/bfin/ffitarget.h\t\t\t\\\n\tsrc/cris/ffitarget.h src/csky/ffitarget.h src/frv/ffitarget.h\t\\\n\tsrc/ia64/ffitarget.h src/ia64/ia64_flags.h\t\t\t\\\n\tsrc/m32r/ffitarget.h src/m68k/ffitarget.h\t\t\t\\\n\tsrc/m88k/ffitarget.h src/metag/ffitarget.h\t\t\t\\\n\tsrc/microblaze/ffitarget.h src/mips/ffitarget.h\t\t\t\\\n\tsrc/moxie/ffitarget.h src/nios2/ffitarget.h\t\t\t\\\n\tsrc/or1k/ffitarget.h src/pa/ffitarget.h\t\t\t\t\\\n\tsrc/powerpc/ffitarget.h src/powerpc/asm.h\t\t\t\\\n\tsrc/powerpc/ffi_powerpc.h src/riscv/ffitarget.h\t\t\t\\\n\tsrc/s390/ffitarget.h src/s390/internal.h src/sh/ffitarget.h\t\\\n\tsrc/sh64/ffitarget.h src/sparc/ffitarget.h\t\t\t\\\n\tsrc/sparc/internal.h src/tile/ffitarget.h src/vax/ffitarget.h\t\\\n\tsrc/wasm32/ffitarget.h \\\n\tsrc/x86/ffitarget.h src/x86/internal.h src/x86/internal64.h\t\\\n\tsrc/x86/asmnames.h src/xtensa/ffitarget.h src/dlmalloc.c\t\\\n\tsrc/kvx/ffitarget.h src/kvx/asm.h\t\t\t\t\\\n\tsrc/loongarch64/ffitarget.h\n\nEXTRA_libffi_la_SOURCES = src/aarch64/ffi.c src/aarch64/sysv.S\t\t\\\n\tsrc/aarch64/win64_armasm.S src/alpha/ffi.c src/alpha/osf.S\t\\\n\tsrc/arc/ffi.c src/arc/arcompact.S src/arm/ffi.c\t\t\t\\\n\tsrc/arm/sysv.S src/arm/ffi.c src/arm/sysv_msvc_arm32.S\t\t\\\n\tsrc/avr32/ffi.c src/avr32/sysv.S src/bfin/ffi.c\t\t\t\\\n\tsrc/bfin/sysv.S src/cris/ffi.c src/cris/sysv.S src/frv/ffi.c\t\\\n\tsrc/csky/ffi.c src/csky/sysv.S src/frv/eabi.S src/ia64/ffi.c\t\\\n\tsrc/ia64/unix.S src/m32r/ffi.c src/m32r/sysv.S src/m68k/ffi.c\t\\\n\tsrc/m68k/sysv.S src/m88k/ffi.c src/m88k/obsd.S\t\t\t\\\n\tsrc/metag/ffi.c src/metag/sysv.S src/microblaze/ffi.c\t\t\\\n\tsrc/microblaze/sysv.S src/mips/ffi.c src/mips/o32.S\t\t\\\n\tsrc/mips/n32.S src/moxie/ffi.c src/moxie/eabi.S\t\t\t\\\n\tsrc/nios2/ffi.c src/nios2/sysv.S src/or1k/ffi.c\t\t\t\\\n\tsrc/or1k/sysv.S src/pa/ffi.c src/pa/linux.S src/pa/hpux32.S\t\\\n\tsrc/pa/hpux64.S src/powerpc/ffi.c src/powerpc/ffi_sysv.c\t\\\n\tsrc/powerpc/ffi_linux64.c src/powerpc/sysv.S\t\t\t\\\n\tsrc/powerpc/linux64.S src/powerpc/linux64_closure.S\t\t\\\n\tsrc/powerpc/ppc_closure.S src/powerpc/aix.S\t\t\t\\\n\tsrc/powerpc/darwin.S src/powerpc/aix_closure.S\t\t\t\\\n\tsrc/powerpc/darwin_closure.S src/powerpc/ffi_darwin.c\t\t\\\n\tsrc/riscv/ffi.c src/riscv/sysv.S src/s390/ffi.c\t\t\t\\\n\tsrc/s390/sysv.S src/sh/ffi.c src/sh/sysv.S src/sh64/ffi.c\t\\\n\tsrc/sh64/sysv.S src/sparc/ffi.c src/sparc/ffi64.c\t\t\\\n\tsrc/sparc/v8.S src/sparc/v9.S src/tile/ffi.c src/tile/tile.S\t\\\n\tsrc/vax/ffi.c src/vax/elfbsd.S src/x86/ffi.c src/x86/sysv.S\t\\\n\tsrc/wasm32/ffi.c \\\n\tsrc/x86/ffiw64.c src/x86/win64.S src/x86/ffi64.c\t\t\\\n\tsrc/x86/unix64.S src/x86/sysv_intel.S src/x86/win64_intel.S\t\\\n\tsrc/xtensa/ffi.c src/xtensa/sysv.S src/kvx/ffi.c\t\t\\\n\tsrc/kvx/sysv.S src/loongarch64/ffi.c src/loongarch64/sysv.S\n\nTARGET_OBJ = @TARGET_OBJ@\nlibffi_la_LIBADD = $(TARGET_OBJ)\n\nlibffi_convenience_la_SOURCES = $(libffi_la_SOURCES)\nEXTRA_libffi_convenience_la_SOURCES = $(EXTRA_libffi_la_SOURCES)\nlibffi_convenience_la_LIBADD = $(libffi_la_LIBADD)\nlibffi_convenience_la_DEPENDENCIES = $(libffi_la_DEPENDENCIES)\nnodist_libffi_convenience_la_SOURCES = $(nodist_libffi_la_SOURCES)\n\nLTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/libtool-ldflags $(LDFLAGS))\n\nAM_CFLAGS =\nif FFI_DEBUG\n# Build debug. Define FFI_DEBUG on the commandline so that, when building with\n# MSVC, it can link against the debug CRT.\nAM_CFLAGS += -DFFI_DEBUG\nendif\n\nif LIBFFI_BUILD_VERSIONED_SHLIB\nif LIBFFI_BUILD_VERSIONED_SHLIB_GNU\nlibffi_version_script = -Wl,--version-script,libffi.map\nlibffi_version_dep = libffi.map\nendif\nif LIBFFI_BUILD_VERSIONED_SHLIB_SUN\nlibffi_version_script = -Wl,-M,libffi.map-sun\nlibffi_version_dep = libffi.map-sun\nlibffi.map-sun : libffi.map $(top_srcdir)/make_sunver.pl \\\n\t\t $(libffi_la_OBJECTS) $(libffi_la_LIBADD)\n\tperl $(top_srcdir)/make_sunver.pl libffi.map \\\n\t `echo $(libffi_la_OBJECTS) $(libffi_la_LIBADD) | \\\n\t    sed 's,\\([^/        ]*\\)\\.l\\([ao]\\),.libs/\\1.\\2,g'` \\\n\t > $@ || (rm -f $@ ; exit 1)\nendif\nelse\nlibffi_version_script =\nlibffi_version_dep =\nendif\nlibffi_version_info = -version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n\nlibffi.map: $(top_srcdir)/libffi.map.in\n\t$(COMPILE) -D$(TARGET) -DGENERATE_LIBFFI_MAP \\\n\t -E -x assembler-with-cpp -o $@ $(top_srcdir)/libffi.map.in\n\nlibffi_la_LDFLAGS = -no-undefined $(libffi_version_info) $(libffi_version_script) $(LTLDFLAGS) $(AM_LTLDFLAGS)\nlibffi_la_DEPENDENCIES = $(libffi_la_LIBADD) $(libffi_version_dep)\n\nAM_CPPFLAGS = -I. -I$(top_srcdir)/include -Iinclude -I$(top_srcdir)/src\nAM_CCASFLAGS = $(AM_CPPFLAGS)\n\ndist-hook:\n\td=`(cd $(distdir); pwd)`; (cd doc; make pdf; cp *.pdf $$d/doc)\n\tif [ -d $(top_srcdir)/.git ] ; then (cd $(top_srcdir); git log --no-decorate) ; else echo 'See git log for history.' ; fi > $(distdir)/ChangeLog\n\ts=`awk '/was released on/{ print NR; exit}' $(top_srcdir)/README.md`; tail -n +$$(($$s-1)) $(top_srcdir)/README.md > $(distdir)/README.md\n\n# target overrides\n-include $(tmake_file)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.0400390625,
          "content": "Status\n======\n\nlibffi-3.4.6 was released on February 18, 2024.  Check the libffi web\npage for updates: <URL:http://sourceware.org/libffi/>.\n\n\nWhat is libffi?\n===============\n\nCompilers for high level languages generate code that follow certain\nconventions. These conventions are necessary, in part, for separate\ncompilation to work. One such convention is the \"calling\nconvention\". The \"calling convention\" is essentially a set of\nassumptions made by the compiler about where function arguments will\nbe found on entry to a function. A \"calling convention\" also specifies\nwhere the return value for a function is found.\n\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function. For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function. Libffi can be used in such programs to provide a\nbridge from the interpreter program to compiled code.\n\nThe libffi library provides a portable, high level programming\ninterface to various calling conventions. This allows a programmer to\ncall any function specified by a call interface description at run\ntime.\n\nFFI stands for Foreign Function Interface.  A foreign function\ninterface is the popular name for the interface that allows code\nwritten in one language to call code written in another language. The\nlibffi library really only provides the lowest, machine dependent\nlayer of a fully featured foreign function interface. A layer must\nexist above libffi that handles type conversions for values passed\nbetween the two languages.\n\n\nSupported Platforms\n===================\n\nLibffi has been ported to many different platforms.\n\nAt the time of release, the following basic configurations have been\ntested:\n\n| Architecture    | Operating System | Compiler                |\n| --------------- | ---------------- | ----------------------- |\n| AArch64 (ARM64) | iOS              | Clang                   |\n| AArch64         | Linux            | GCC                     |\n| AArch64         | Windows          | MSVC                    |\n| Alpha           | Linux            | GCC                     |\n| Alpha           | Tru64            | GCC                     |\n| ARC             | Linux            | GCC                     |\n| ARC32           | Linux            | GCC                     |\n| ARC64           | Linux            | GCC                     |\n| ARM             | Linux            | GCC                     |\n| ARM             | iOS              | GCC                     |\n| ARM             | Windows          | MSVC                    |\n| AVR32           | Linux            | GCC                     |\n| Blackfin        | uClinux          | GCC                     |\n| CSKY            | Linux            | GCC                     |\n| HPPA            | HPUX             | GCC                     |\n| HPPA64          | HPUX             | GCC                     |\n| KVX             | Linux            | GCC                     |\n| IA-64           | Linux            | GCC                     |\n| LoongArch64     | Linux            | GCC                     |\n| M68K            | FreeMiNT         | GCC                     |\n| M68K            | Linux            | GCC                     |\n| M68K            | RTEMS            | GCC                     |\n| M88K            | OpenBSD/mvme88k  | GCC                     |\n| Meta            | Linux            | GCC                     |\n| MicroBlaze      | Linux            | GCC                     |\n| MIPS            | IRIX             | GCC                     |\n| MIPS            | Linux            | GCC                     |\n| MIPS            | RTEMS            | GCC                     |\n| MIPS64          | Linux            | GCC                     |\n| Moxie           | Bare metal       | GCC                     |\n| Nios II         | Linux            | GCC                     |\n| OpenRISC        | Linux            | GCC                     |\n| PowerPC 32-bit  | AIX              | GCC                     |\n| PowerPC 32-bit  | AIX              | IBM XL C                |\n| PowerPC 64-bit  | AIX              | IBM XL C                |\n| PowerPC         | AMIGA            | GCC                     |\n| PowerPC         | Linux            | GCC                     |\n| PowerPC         | Mac OSX          | GCC                     |\n| PowerPC         | FreeBSD          | GCC                     |\n| PowerPC 64-bit  | FreeBSD          | GCC                     |\n| PowerPC 64-bit  | Linux ELFv1      | GCC                     |\n| PowerPC 64-bit  | Linux ELFv2      | GCC                     |\n| RISC-V 32-bit   | Linux            | GCC                     |\n| RISC-V 64-bit   | Linux            | GCC                     |\n| S390            | Linux            | GCC                     |\n| S390X           | Linux            | GCC                     |\n| SPARC           | Linux            | GCC                     |\n| SPARC           | Solaris          | GCC                     |\n| SPARC           | Solaris          | Oracle Solaris Studio C |\n| SPARC64         | Linux            | GCC                     |\n| SPARC64         | FreeBSD          | GCC                     |\n| SPARC64         | Solaris          | Oracle Solaris Studio C |\n| TILE-Gx/TILEPro | Linux            | GCC                     |\n| VAX             | OpenBSD/vax      | GCC                     |\n| WASM32          | Emscripten       | EMCC                    |\n| X86             | FreeBSD          | GCC                     |\n| X86             | GNU HURD         | GCC                     |\n| X86             | Interix          | GCC                     |\n| X86             | kFreeBSD         | GCC                     |\n| X86             | Linux            | GCC                     |\n| X86             | OpenBSD          | GCC                     |\n| X86             | OS/2             | GCC                     |\n| X86             | Solaris          | GCC                     |\n| X86             | Solaris          | Oracle Solaris Studio C |\n| X86             | Windows/Cygwin   | GCC                     |\n| X86             | Windows/MinGW    | GCC                     |\n| X86-64          | FreeBSD          | GCC                     |\n| X86-64          | Linux            | GCC                     |\n| X86-64          | Linux/x32        | GCC                     |\n| X86-64          | OpenBSD          | GCC                     |\n| X86-64          | Solaris          | Oracle Solaris Studio C |\n| X86-64          | Windows/Cygwin   | GCC                     |\n| X86-64          | Windows/MinGW    | GCC                     |\n| X86-64          | Mac OSX          | GCC                     |\n| Xtensa          | Linux            | GCC                     |\n\nPlease send additional platform test results to\nlibffi-discuss@sourceware.org.\n\nInstalling libffi\n=================\n\nFirst you must configure the distribution for your particular\nsystem. Go to the directory you wish to build libffi in and run the\n\"configure\" program found in the root directory of the libffi source\ndistribution.  Note that building libffi requires a C99 compatible\ncompiler.\n\nIf you're building libffi directly from git hosted sources, configure\nwon't exist yet; run ./autogen.sh first.  This will require that you\ninstall autoconf, automake and libtool.\n\nYou may want to tell configure where to install the libffi library and\nheader files. To do that, use the ``--prefix`` configure switch.  Libffi\nwill install under /usr/local by default.\n\nIf you want to enable extra run-time debugging checks use the the\n``--enable-debug`` configure switch. This is useful when your program dies\nmysteriously while using libffi.\n\nAnother useful configure switch is ``--enable-purify-safety``. Using this\nwill add some extra code which will suppress certain warnings when you\nare using Purify with libffi. Only use this switch when using\nPurify, as it will slow down the library.\n\nIf you don't want to build documentation, use the ``--disable-docs``\nconfigure switch.\n\nIt's also possible to build libffi on Windows platforms with\nMicrosoft's Visual C++ compiler.  In this case, use the msvcc.sh\nwrapper script during configuration like so:\n\n    path/to/configure CC=path/to/msvcc.sh CXX=path/to/msvcc.sh LD=link CPP=\"cl -nologo -EP\" CXXCPP=\"cl -nologo -EP\" CPPFLAGS=\"-DFFI_BUILDING_DLL\"\n\nFor 64-bit Windows builds, use ``CC=\"path/to/msvcc.sh -m64\"`` and\n``CXX=\"path/to/msvcc.sh -m64\"``.  You may also need to specify\n``--build`` appropriately.\n\nIt is also possible to build libffi on Windows platforms with the LLVM\nproject's clang-cl compiler, like below:\n\n    path/to/configure CC=\"path/to/msvcc.sh -clang-cl\" CXX=\"path/to/msvcc.sh -clang-cl\" LD=link CPP=\"clang-cl -EP\"\n\nWhen building with MSVC under a MingW environment, you may need to\nremove the line in configure that sets 'fix_srcfile_path' to a 'cygpath'\ncommand.  ('cygpath' is not present in MingW, and is not required when\nusing MingW-style paths.)\n\nTo build static library for ARM64 with MSVC using visual studio solution, msvc_build folder have\n   aarch64/Ffi_staticLib.sln\n   required header files in aarch64/aarch64_include/\n\n\nSPARC Solaris builds require the use of the GNU assembler and linker.\nPoint ``AS`` and ``LD`` environment variables at those tool prior to\nconfiguration.\n\nFor iOS builds, the ``libffi.xcodeproj`` Xcode project is available.\n\nConfigure has many other options. Use ``configure --help`` to see them all.\n\nOnce configure has finished, type \"make\". Note that you must be using\nGNU make.  You can ftp GNU make from ftp.gnu.org:/pub/gnu/make .\n\nTo ensure that libffi is working as advertised, type \"make check\".\nThis will require that you have DejaGNU installed.\n\nTo install the library and header files, type ``make install``.\n\n\nHistory\n=======\n\nSee the git log for details at http://github.com/libffi/libffi.\n\n    3.4.6 Feb-18-2024\n        Fix long double regression on mips64 and alpha.\n\n    3.4.5 Feb-15-2024\n        Add support for wasm32.\n        Add support for aarch64 branch target identification (bti).\n        Add support for ARCv3: ARC32 & ARC64.\n        Add support for HPPA64, and many HPPA fixes.\n        Add support for Haikuos on PowerPC.\n        Fixes for AIX, loongson, MIPS, power, sparc64, and x86 Darwin.\n\n    3.4.4 Oct-23-2022\n        Important aarch64 fixes, including support for linux builds\n          with Link Time Optimization (-flto).\n        Fix x86 stdcall stack alignment.\n        Fix x86 Windows msvc assembler compatibility.\n        Fix moxie and or1k small structure args.\n\n    3.4.3 Sep-19-2022\n        All struct args are passed by value, regardless of size, as per ABIs.\n        Enable static trampolines for Cygwin.\n        Add support for Loongson's LoongArch64 architecture.\n        Fix x32 static trampolines.\n        Fix 32-bit x86 stdcall stack corruption.\n        Fix ILP32 aarch64 support.\n\n    3.4.2 Jun-28-2021\n        Add static trampoline support for Linux on x86_64 and ARM64.\n        Add support for Alibaba's CSKY architecture.\n        Add support for Kalray's KVX architecture.\n        Add support for Intel Control-flow Enforcement Technology (CET).\n        Add support for ARM Pointer Authentication (PA).\n        Fix 32-bit PPC regression.\n        Fix MIPS soft-float problem.\n        Enable tmpdir override with the $LIBFFI_TMPDIR environment variable.\n        Enable compatibility with MSVC runtime stack checking.\n        Reject float and small integer argument in ffi_prep_cif_var().\n          Callers must promote these types themselves.\n\n    3.3 Nov-23-2019\n        Add RISC-V support.\n        New API in support of GO closures.\n        Add IEEE754 binary128 long double support for 64-bit Power\n        Default to Microsoft's 64 bit long double ABI with Visual C++.\n        GNU compiler uses 80 bits (128 in memory) FFI_GNUW64 ABI.\n        Add Windows on ARM64 (WOA) support.\n        Add Windows 32-bit ARM support.\n        Raw java (gcj) API deprecated.\n        Add pre-built PDF documentation to source distribution.\n        Many new test cases and bug fixes.\n\n    3.2.1 Nov-12-2014\n        Build fix for non-iOS AArch64 targets.\n\n    3.2 Nov-11-2014\n        Add C99 Complex Type support (currently only supported on\n          s390).\n        Add support for PASCAL and REGISTER calling conventions on x86\n          Windows/Linux.\n        Add OpenRISC and Cygwin-64 support.\n        Bug fixes.\n\n    3.1 May-19-2014\n        Add AArch64 (ARM64) iOS support.\n        Add Nios II support.\n        Add m88k and DEC VAX support.\n        Add support for stdcall, thiscall, and fastcall on non-Windows\n          32-bit x86 targets such as Linux.\n        Various Android, MIPS N32, x86, FreeBSD and UltraSPARC IIi\n          fixes.\n        Make the testsuite more robust: eliminate several spurious\n          failures, and respect the $CC and $CXX environment variables.\n        Archive off the manually maintained ChangeLog in favor of git\n          log.\n\n    3.0.13 Mar-17-2013\n        Add Meta support.\n        Add missing Moxie bits.\n        Fix stack alignment bug on 32-bit x86.\n        Build fix for m68000 targets.\n        Build fix for soft-float Power targets.\n        Fix the install dir location for some platforms when building\n          with GCC (OS X, Solaris).\n        Fix Cygwin regression.\n\n    3.0.12 Feb-11-2013\n        Add Moxie support.\n        Add AArch64 support.\n        Add Blackfin support.\n        Add TILE-Gx/TILEPro support.\n        Add MicroBlaze support.\n        Add Xtensa support.\n        Add support for PaX enabled kernels with MPROTECT.\n        Add support for native vendor compilers on\n          Solaris and AIX.\n        Work around LLVM/GCC interoperability issue on x86_64.\n\n    3.0.11 Apr-11-2012\n        Lots of build fixes.\n        Add support for variadic functions (ffi_prep_cif_var).\n        Add Linux/x32 support.\n        Add thiscall, fastcall and MSVC cdecl support on Windows.\n        Add Amiga and newer MacOS support.\n        Add m68k FreeMiNT support.\n        Integration with iOS' xcode build tools.\n        Fix Octeon and MC68881 support.\n        Fix code pessimizations.\n\n    3.0.10 Aug-23-2011\n        Add support for Apple's iOS.\n        Add support for ARM VFP ABI.\n        Add RTEMS support for MIPS and M68K.\n        Fix instruction cache clearing problems on\n          ARM and SPARC.\n        Fix the N64 build on mips-sgi-irix6.5.\n        Enable builds with Microsoft's compiler.\n        Enable x86 builds with Oracle's Solaris compiler.\n        Fix support for calling code compiled with Oracle's Sparc\n          Solaris compiler.\n        Testsuite fixes for Tru64 Unix.\n        Additional platform support.\n\n    3.0.9 Dec-31-2009\n        Add AVR32 and win64 ports.  Add ARM softfp support.\n        Many fixes for AIX, Solaris, HP-UX, *BSD.\n        Several PowerPC and x86-64 bug fixes.\n        Build DLL for windows.\n\n    3.0.8 Dec-19-2008\n        Add *BSD, BeOS, and PA-Linux support.\n\n    3.0.7 Nov-11-2008\n        Fix for ppc FreeBSD.\n        (thanks to Andreas Tobler)\n\n    3.0.6 Jul-17-2008\n        Fix for closures on sh.\n        Mark the sh/sh64 stack as non-executable.\n        (both thanks to Kaz Kojima)\n\n    3.0.5 Apr-3-2008\n        Fix libffi.pc file.\n        Fix #define ARM for IcedTea users.\n        Fix x86 closure bug.\n\n    3.0.4 Feb-24-2008\n        Fix x86 OpenBSD configury.\n\n    3.0.3 Feb-22-2008\n        Enable x86 OpenBSD thanks to Thomas Heller, and\n          x86-64 FreeBSD thanks to Björn König and Andreas Tobler.\n        Clean up test instruction in README.\n\n    3.0.2 Feb-21-2008\n        Improved x86 FreeBSD support.\n        Thanks to Björn König.\n\n    3.0.1 Feb-15-2008\n        Fix instruction cache flushing bug on MIPS.\n        Thanks to David Daney.\n\n    3.0.0 Feb-15-2008\n        Many changes, mostly thanks to the GCC project.\n        Cygnus Solutions is now Red Hat.\n\n      [10 years go by...]\n\n    1.20 Oct-5-1998\n        Raffaele Sena produces ARM port.\n\n    1.19 Oct-5-1998\n        Fixed x86 long double and long long return support.\n        m68k bug fixes from Andreas Schwab.\n        Patch for DU assembler compatibility for the Alpha from Richard\n          Henderson.\n\n    1.18 Apr-17-1998\n        Bug fixes and MIPS configuration changes.\n\n    1.17 Feb-24-1998\n        Bug fixes and m68k port from Andreas Schwab. PowerPC port from\n        Geoffrey Keating. Various bug x86, Sparc and MIPS bug fixes.\n\n    1.16 Feb-11-1998\n        Richard Henderson produces Alpha port.\n\n    1.15 Dec-4-1997\n        Fixed an n32 ABI bug. New libtool, auto* support.\n\n    1.14 May-13-97\n        libtool is now used to generate shared and static libraries.\n        Fixed a minor portability problem reported by Russ McManus\n        <mcmanr@eq.gs.com>.\n\n    1.13 Dec-2-1996\n        Added --enable-purify-safety to keep Purify from complaining\n          about certain low level code.\n        Sparc fix for calling functions with < 6 args.\n        Linux x86 a.out fix.\n\n    1.12 Nov-22-1996\n        Added missing ffi_type_void, needed for supporting void return\n          types. Fixed test case for non MIPS machines. Cygnus Support\n          is now Cygnus Solutions.\n\n    1.11 Oct-30-1996\n        Added notes about GNU make.\n\n    1.10 Oct-29-1996\n        Added configuration fix for non GNU compilers.\n\n    1.09 Oct-29-1996\n        Added --enable-debug configure switch. Clean-ups based on LCLint\n        feedback. ffi_mips.h is always installed. Many configuration\n        fixes. Fixed ffitest.c for sparc builds.\n\n    1.08 Oct-15-1996\n        Fixed n32 problem. Many clean-ups.\n\n    1.07 Oct-14-1996\n        Gordon Irlam rewrites v8.S again. Bug fixes.\n\n    1.06 Oct-14-1996\n        Gordon Irlam improved the sparc port.\n\n    1.05 Oct-14-1996\n        Interface changes based on feedback.\n\n    1.04 Oct-11-1996\n        Sparc port complete (modulo struct passing bug).\n\n    1.03 Oct-10-1996\n        Passing struct args, and returning struct values works for\n        all architectures/calling conventions. Expanded tests.\n\n    1.02 Oct-9-1996\n        Added SGI n32 support. Fixed bugs in both o32 and Linux support.\n        Added \"make test\".\n\n    1.01 Oct-8-1996\n        Fixed float passing bug in mips version. Restructured some\n        of the code. Builds cleanly with SGI tools.\n\n    1.00 Oct-7-1996\n        First release. No public announcement.\n\nAuthors & Credits\n=================\n\nlibffi was originally written by Anthony Green <green@moxielogic.com>.\n\nThe developers of the GNU Compiler Collection project have made\ninnumerable valuable contributions.  See the ChangeLog file for\ndetails.\n\nSome of the ideas behind libffi were inspired by Gianni Mariani's free\ngencall library for Silicon Graphics machines.\n\nThe closure mechanism was designed and implemented by Kresten Krab\nThorup.\n\nMajor processor architecture ports were contributed by the following\ndevelopers:\n\n    aarch64             Marcus Shawcroft, James Greenhalgh\n    alpha               Richard Henderson\n    arc                 Hackers at Synopsis\n    arm                 Raffaele Sena\n    avr32               Bradley Smith\n    blackfin            Alexandre Keunecke I. de Mendonca\n    cris                Simon Posnjak, Hans-Peter Nilsson\n    csky                Ma Jun, Zhang Wenmeng\n    frv                 Anthony Green\n    ia64                Hans Boehm\n    kvx                 Yann Sionneau\n    loongarch64         Cheng Lulu, Xi Ruoyao, Xu Hao,\n                        Zhang Wenlong, Pan Xuefeng\n    m32r                Kazuhiro Inaoka\n    m68k                Andreas Schwab\n    m88k                Miod Vallat\n    metag               Hackers at Imagination Technologies\n    microblaze          Nathan Rossi\n    mips                Anthony Green, Casey Marshall\n    mips64              David Daney\n    moxie               Anthony Green\n    nios ii             Sandra Loosemore\n    openrisc            Sebastian Macke\n    pa                  Randolph Chung, Dave Anglin, Andreas Tobler\n    pa64                Dave Anglin\n    powerpc             Geoffrey Keating, Andreas Tobler,\n                        David Edelsohn, John Hornkvist\n    powerpc64           Jakub Jelinek\n    riscv               Michael Knyszek, Andrew Waterman, Stef O'Rear\n    s390                Gerhard Tonn, Ulrich Weigand\n    sh                  Kaz Kojima\n    sh64                Kaz Kojima\n    sparc               Anthony Green, Gordon Irlam\n    tile-gx/tilepro     Walter Lee\n    vax                 Miod Vallat\n    wasm32              Hood Chatham, Brion Vibber, Kleis Auke Wolthuizen\n    x86                 Anthony Green, Jon Beniston\n    x86-64              Bo Thorsen\n    xtensa              Chris Zankel\n\nJesper Skov and Andrew Haley both did more than their fair share of\nstepping through the code and tracking down bugs.\n\nThanks also to Tom Tromey for bug fixes, documentation and\nconfiguration help.\n\nThanks to Jim Blandy, who provided some useful feedback on the libffi\ninterface.\n\nAndreas Tobler has done a tremendous amount of work on the testsuite.\n\nAlex Oliva solved the executable page problem for SElinux.\n\nThe list above is almost certainly incomplete and inaccurate.  I'm\nhappy to make corrections or additions upon request.\n\nIf you have a problem, or have found a bug, please file an issue on\nour issue tracker at https://github.com/libffi/libffi/issues.\n\nThe author can be reached at green@moxielogic.com.\n\nTo subscribe/unsubscribe to our mailing lists, visit:\nhttps://sourceware.org/mailman/listinfo/libffi-announce\nhttps://sourceware.org/mailman/listinfo/libffi-discuss\n"
        },
        {
          "name": "acinclude.m4",
          "type": "blob",
          "size": 13.5,
          "content": "# mmap(2) blacklisting.  Some platforms provide the mmap library routine\n# but don't support all of the features we need from it.\nAC_DEFUN([AC_FUNC_MMAP_BLACKLIST],\n[\nAC_CHECK_HEADER([sys/mman.h],\n\t\t[libffi_header_sys_mman_h=yes], [libffi_header_sys_mman_h=no])\nAC_CHECK_FUNC([mmap], [libffi_func_mmap=yes], [libffi_func_mmap=no])\nif test \"$libffi_header_sys_mman_h\" != yes \\\n || test \"$libffi_func_mmap\" != yes; then\n   ac_cv_func_mmap_file=no\n   ac_cv_func_mmap_dev_zero=no\n   ac_cv_func_mmap_anon=no\nelse\n   AC_CACHE_CHECK([whether read-only mmap of a plain file works],\n  ac_cv_func_mmap_file,\n  [# Add a system to this blacklist if\n   # mmap(0, stat_size, PROT_READ, MAP_PRIVATE, fd, 0) doesn't return a\n   # memory area containing the same data that you'd get if you applied\n   # read() to the same fd.  The only system known to have a problem here\n   # is VMS, where text files have record structure.\n   case \"$host_os\" in\n     vms* | ultrix*)\n\tac_cv_func_mmap_file=no ;;\n     *)\n\tac_cv_func_mmap_file=yes;;\n   esac])\n   AC_CACHE_CHECK([whether mmap from /dev/zero works],\n  ac_cv_func_mmap_dev_zero,\n  [# Add a system to this blacklist if it has mmap() but /dev/zero\n   # does not exist, or if mmapping /dev/zero does not give anonymous\n   # zeroed pages with both the following properties:\n   # 1. If you map N consecutive pages in with one call, and then\n   #    unmap any subset of those pages, the pages that were not\n   #    explicitly unmapped remain accessible.\n   # 2. If you map two adjacent blocks of memory and then unmap them\n   #    both at once, they must both go away.\n   # Systems known to be in this category are Windows (all variants),\n   # VMS, and Darwin.\n   case \"$host_os\" in\n     vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)\n\tac_cv_func_mmap_dev_zero=no ;;\n     *)\n\tac_cv_func_mmap_dev_zero=yes;;\n   esac])\n\n   # Unlike /dev/zero, the MAP_ANON(YMOUS) defines can be probed for.\n   AC_CACHE_CHECK([for MAP_ANON(YMOUS)], ac_cv_decl_map_anon,\n    [AC_COMPILE_IFELSE(\n[AC_LANG_PROGRAM([[#include <sys/types.h>\n#include <sys/mman.h>\n#include <unistd.h>\n\n#ifndef MAP_ANONYMOUS\n#define MAP_ANONYMOUS MAP_ANON\n#endif\n]],\n[[int n = MAP_ANONYMOUS;]])],\n    ac_cv_decl_map_anon=yes,\n    ac_cv_decl_map_anon=no)])\n\n   if test $ac_cv_decl_map_anon = no; then\n     ac_cv_func_mmap_anon=no\n   else\n     AC_CACHE_CHECK([whether mmap with MAP_ANON(YMOUS) works],\n     ac_cv_func_mmap_anon,\n  [# Add a system to this blacklist if it has mmap() and MAP_ANON or\n   # MAP_ANONYMOUS, but using mmap(..., MAP_PRIVATE|MAP_ANONYMOUS, -1, 0)\n   # doesn't give anonymous zeroed pages with the same properties listed\n   # above for use of /dev/zero.\n   # Systems known to be in this category are Windows, VMS, and SCO Unix.\n   case \"$host_os\" in\n     vms* | cygwin* | pe | mingw* | sco* | udk* )\n\tac_cv_func_mmap_anon=no ;;\n     *)\n\tac_cv_func_mmap_anon=yes;;\n   esac])\n   fi\nfi\n\nif test $ac_cv_func_mmap_file = yes; then\n  AC_DEFINE(HAVE_MMAP_FILE, 1,\n\t    [Define if read-only mmap of a plain file works.])\nfi\nif test $ac_cv_func_mmap_dev_zero = yes; then\n  AC_DEFINE(HAVE_MMAP_DEV_ZERO, 1,\n\t    [Define if mmap of /dev/zero works.])\nfi\nif test $ac_cv_func_mmap_anon = yes; then\n  AC_DEFINE(HAVE_MMAP_ANON, 1,\n\t    [Define if mmap with MAP_ANON(YMOUS) works.])\nfi\n])\n\ndnl ----------------------------------------------------------------------\ndnl This whole bit snagged from libstdc++-v3, via libatomic.\n\ndnl\ndnl LIBFFI_ENABLE\ndnl    (FEATURE, DEFAULT, HELP-ARG, HELP-STRING)\ndnl    (FEATURE, DEFAULT, HELP-ARG, HELP-STRING, permit a|b|c)\ndnl    (FEATURE, DEFAULT, HELP-ARG, HELP-STRING, SHELL-CODE-HANDLER)\ndnl\ndnl See docs/html/17_intro/configury.html#enable for documentation.\ndnl\nm4_define([LIBFFI_ENABLE],[dnl\nm4_define([_g_switch],[--enable-$1])dnl\nm4_define([_g_help],[AS_HELP_STRING([_g_switch$3],[$4 @<:@default=$2@:>@])])dnl\n AC_ARG_ENABLE($1,_g_help,\n  m4_bmatch([$5],\n   [^permit ],\n     [[\n      case \"$enableval\" in\n       m4_bpatsubst([$5],[permit ])) ;;\n       *) AC_MSG_ERROR(Unknown argument to enable/disable $1) ;;\n          dnl Idea for future:  generate a URL pointing to\n          dnl \"onlinedocs/configopts.html#whatever\"\n      esac\n     ]],\n   [^$],\n     [[\n      case \"$enableval\" in\n       yes|no) ;;\n       *) AC_MSG_ERROR(Argument to enable/disable $1 must be yes or no) ;;\n      esac\n     ]],\n   [[$5]]),\n  [enable_]m4_bpatsubst([$1],-,_)[=][$2])\nm4_undefine([_g_switch])dnl\nm4_undefine([_g_help])dnl\n])\n\ndnl\ndnl If GNU ld is in use, check to see if tricky linker opts can be used.  If\ndnl the native linker is in use, all variables will be defined to something\ndnl safe (like an empty string).\ndnl\ndnl Defines:\ndnl  SECTION_LDFLAGS='-Wl,--gc-sections' if possible\ndnl  OPT_LDFLAGS='-Wl,-O1' if possible\ndnl  LD (as a side effect of testing)\ndnl Sets:\ndnl  with_gnu_ld\ndnl  libat_ld_is_gold (possibly)\ndnl  libat_gnu_ld_version (possibly)\ndnl\ndnl The last will be a single integer, e.g., version 1.23.45.0.67.89 will\ndnl set libat_gnu_ld_version to 12345.  Zeros cause problems.\ndnl\nAC_DEFUN([LIBFFI_CHECK_LINKER_FEATURES], [\n  # If we're not using GNU ld, then there's no point in even trying these\n  # tests.  Check for that first.  We should have already tested for gld\n  # by now (in libtool), but require it now just to be safe...\n  test -z \"$SECTION_LDFLAGS\" && SECTION_LDFLAGS=''\n  test -z \"$OPT_LDFLAGS\" && OPT_LDFLAGS=''\n  AC_REQUIRE([LT_PATH_LD])\n  AC_REQUIRE([AC_PROG_AWK])\n\n  # The name set by libtool depends on the version of libtool.  Shame on us\n  # for depending on an impl detail, but c'est la vie.  Older versions used\n  # ac_cv_prog_gnu_ld, but now it's lt_cv_prog_gnu_ld, and is copied back on\n  # top of with_gnu_ld (which is also set by --with-gnu-ld, so that actually\n  # makes sense).  We'll test with_gnu_ld everywhere else, so if that isn't\n  # set (hence we're using an older libtool), then set it.\n  if test x${with_gnu_ld+set} != xset; then\n    if test x${ac_cv_prog_gnu_ld+set} != xset; then\n      # We got through \"ac_require(ac_prog_ld)\" and still not set?  Huh?\n      with_gnu_ld=no\n    else\n      with_gnu_ld=$ac_cv_prog_gnu_ld\n    fi\n  fi\n\n  # Start by getting the version number.  I think the libtool test already\n  # does some of this, but throws away the result.\n  libat_ld_is_gold=no\n  if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n    libat_ld_is_gold=yes\n  fi\n  libat_ld_is_lld=no\n  if $LD --version 2>/dev/null | grep 'LLD '> /dev/null 2>&1; then\n    libat_ld_is_lld=yes\n  fi\n  libat_ld_is_mold=no\n  if $LD --version 2>/dev/null | grep 'mold '> /dev/null 2>&1; then\n    libat_ld_is_mold=yes\n  fi\n  changequote(,)\n  ldver=`$LD --version 2>/dev/null |\n         sed -e 's/GNU gold /GNU ld /;s/GNU ld version /GNU ld /;s/GNU ld ([^)]*) /GNU ld /;s/GNU ld \\([0-9.][0-9.]*\\).*/\\1/; q'`\n  changequote([,])\n  libat_gnu_ld_version=`echo $ldver | \\\n         $AWK -F. '{ if (NF<3) [$]3=0; print ([$]1*100+[$]2)*100+[$]3 }'`\n\n  # Set --gc-sections.\n  if test \"$with_gnu_ld\" = \"notbroken\"; then\n    # GNU ld it is!  Joy and bunny rabbits!\n\n    # All these tests are for C++; save the language and the compiler flags.\n    # Need to do this so that g++ won't try to link in libstdc++\n    ac_test_CFLAGS=\"${CFLAGS+set}\"\n    ac_save_CFLAGS=\"$CFLAGS\"\n    CFLAGS='-x c++  -Wl,--gc-sections'\n\n    # Check for -Wl,--gc-sections\n    # XXX This test is broken at the moment, as symbols required for linking\n    # are now in libsupc++ (not built yet).  In addition, this test has\n    # cored on solaris in the past.  In addition, --gc-sections doesn't\n    # really work at the moment (keeps on discarding used sections, first\n    # .eh_frame and now some of the glibc sections for iconv).\n    # Bzzzzt.  Thanks for playing, maybe next time.\n    AC_MSG_CHECKING([for ld that supports -Wl,--gc-sections])\n    AC_RUN_IFELSE([AC_LANG_SOURCE([[\n     int main(void)\n     {\n       try { throw 1; }\n       catch (...) { };\n       return 0;\n     }\n    ]])],[ac_sectionLDflags=yes],[ac_sectionLDflags=no],[ac_sectionLDflags=yes])\n    if test \"$ac_test_CFLAGS\" = set; then\n      CFLAGS=\"$ac_save_CFLAGS\"\n    else\n      # this is the suspicious part\n      CFLAGS=''\n    fi\n    if test \"$ac_sectionLDflags\" = \"yes\"; then\n      SECTION_LDFLAGS=\"-Wl,--gc-sections $SECTION_LDFLAGS\"\n    fi\n    AC_MSG_RESULT($ac_sectionLDflags)\n  fi\n\n  # Set linker optimization flags.\n  if test x\"$with_gnu_ld\" = x\"yes\"; then\n    OPT_LDFLAGS=\"-Wl,-O1 $OPT_LDFLAGS\"\n  fi\n\n  AC_SUBST(SECTION_LDFLAGS)\n  AC_SUBST(OPT_LDFLAGS)\n])\n\n\ndnl\ndnl Add version tags to symbols in shared library (or not), additionally\ndnl marking other symbols as private/local (or not).\ndnl\ndnl --enable-symvers=style adds a version script to the linker call when\ndnl       creating the shared library.  The choice of version script is\ndnl       controlled by 'style'.\ndnl --disable-symvers does not.\ndnl  +  Usage:  LIBFFI_ENABLE_SYMVERS[(DEFAULT)]\ndnl       Where DEFAULT is either 'yes' or 'no'.  Passing `yes' tries to\ndnl       choose a default style based on linker characteristics.  Passing\ndnl       'no' disables versioning.\ndnl\nAC_DEFUN([LIBFFI_ENABLE_SYMVERS], [\n\nLIBFFI_ENABLE(symvers,yes,[=STYLE],\n  [enables symbol versioning of the shared library],\n  [permit yes|no|gnu*|sun])\n\n# If we never went through the LIBFFI_CHECK_LINKER_FEATURES macro, then we\n# don't know enough about $LD to do tricks...\nAC_REQUIRE([LIBFFI_CHECK_LINKER_FEATURES])\n\n# Turn a 'yes' into a suitable default.\nif test x$enable_symvers = xyes ; then\n  # FIXME  The following test is too strict, in theory.\n  if test $enable_shared = no || test \"x$LD\" = x; then\n    enable_symvers=no\n  else\n    if test $with_gnu_ld = yes ; then\n      enable_symvers=gnu\n    else\n      case ${target_os} in\n        # Sun symbol versioning exists since Solaris 2.5.\n        solaris2.[[5-9]]* | solaris2.1[[0-9]]*)\n          enable_symvers=sun ;;\n        *)\n          enable_symvers=no ;;\n      esac\n    fi\n  fi\nfi\n\n# Check if 'sun' was requested on non-Solaris 2 platforms.\nif test x$enable_symvers = xsun ; then\n  case ${target_os} in\n    solaris2*)\n      # All fine.\n      ;;\n    *)\n      # Unlikely to work.\n      AC_MSG_WARN([=== You have requested Sun symbol versioning, but])\n      AC_MSG_WARN([=== you are not targetting Solaris 2.])\n      AC_MSG_WARN([=== Symbol versioning will be disabled.])\n      enable_symvers=no\n      ;;\n  esac\nfi\n\n# Check to see if libgcc_s exists, indicating that shared libgcc is possible.\nif test $enable_symvers != no; then\n  AC_MSG_CHECKING([for shared libgcc])\n  ac_save_CFLAGS=\"$CFLAGS\"\n  CFLAGS=' -lgcc_s'\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[return 0;]])],[libat_shared_libgcc=yes],[libat_shared_libgcc=no])\n  CFLAGS=\"$ac_save_CFLAGS\"\n  if test $libat_shared_libgcc = no; then\n    cat > conftest.c <<EOF\nint main (void) { return 0; }\nEOF\nchangequote(,)dnl\n    libat_libgcc_s_suffix=`${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS \\\n\t\t\t     -shared -shared-libgcc -o conftest.so \\\n\t\t\t     conftest.c -v 2>&1 >/dev/null \\\n\t\t\t     | sed -n 's/^.* -lgcc_s\\([^ ]*\\) .*$/\\1/p'`\nchangequote([,])dnl\n    rm -f conftest.c conftest.so\n    if test x${libat_libgcc_s_suffix+set} = xset; then\n      CFLAGS=\" -lgcc_s$libat_libgcc_s_suffix\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[return 0;]])],[libat_shared_libgcc=yes],[])\n      CFLAGS=\"$ac_save_CFLAGS\"\n    fi\n  fi\n  AC_MSG_RESULT($libat_shared_libgcc)\nfi\n\n# For GNU ld, we need at least this version.  The format is described in\n# LIBFFI_CHECK_LINKER_FEATURES above.\nlibat_min_gnu_ld_version=21400\n# XXXXXXXXXXX libat_gnu_ld_version=21390\n\n# Check to see if unspecified \"yes\" value can win, given results above.\n# Change \"yes\" into either \"no\" or a style name.\nif test $enable_symvers != no && test $libat_shared_libgcc = yes; then\n  if test $with_gnu_ld = yes; then\n    if test $libat_gnu_ld_version -ge $libat_min_gnu_ld_version ; then\n      enable_symvers=gnu\n    elif test $libat_ld_is_gold = yes ; then\n      enable_symvers=gnu\n    elif test $libat_ld_is_lld = yes ; then\n      enable_symvers=gnu\n    elif test $libat_ld_is_mold = yes ; then\n      enable_symvers=gnu\n    else\n      # The right tools, the right setup, but too old.  Fallbacks?\n      AC_MSG_WARN(=== Linker version $libat_gnu_ld_version is too old for)\n      AC_MSG_WARN(=== full symbol versioning support in this release of GCC.)\n      AC_MSG_WARN(=== You would need to upgrade your binutils to version)\n      AC_MSG_WARN(=== $libat_min_gnu_ld_version or later and rebuild GCC.)\n      if test $libat_gnu_ld_version -ge 21200 ; then\n        # Globbing fix is present, proper block support is not.\n        dnl AC_MSG_WARN([=== Dude, you are soooo close.  Maybe we can fake it.])\n        dnl enable_symvers=???\n        AC_MSG_WARN([=== Symbol versioning will be disabled.])\n        enable_symvers=no\n      else\n        # 2.11 or older.\n        AC_MSG_WARN([=== Symbol versioning will be disabled.])\n        enable_symvers=no\n      fi\n    fi\n  elif test $enable_symvers = sun; then\n    : All interesting versions of Sun ld support sun style symbol versioning.\n  else\n    # just fail for now\n    AC_MSG_WARN([=== You have requested some kind of symbol versioning, but])\n    AC_MSG_WARN([=== either you are not using a supported linker, or you are])\n    AC_MSG_WARN([=== not building a shared libgcc_s (which is required).])\n    AC_MSG_WARN([=== Symbol versioning will be disabled.])\n    enable_symvers=no\n  fi\nfi\nif test $enable_symvers = gnu; then\n  AC_DEFINE(LIBFFI_GNU_SYMBOL_VERSIONING, 1,\n\t    [Define to 1 if GNU symbol versioning is used for libatomic.])\nfi\n\nAM_CONDITIONAL(LIBFFI_BUILD_VERSIONED_SHLIB, test $enable_symvers != no)\nAM_CONDITIONAL(LIBFFI_BUILD_VERSIONED_SHLIB_GNU, test $enable_symvers = gnu)\nAM_CONDITIONAL(LIBFFI_BUILD_VERSIONED_SHLIB_SUN, test $enable_symvers = sun)\nAC_MSG_NOTICE(versioning on shared library symbols is $enable_symvers)\n])\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.03125,
          "content": "#!/bin/sh\nexec autoreconf -v -i\n"
        },
        {
          "name": "config.guess",
          "type": "blob",
          "size": 49.537109375,
          "content": "#! /bin/sh\n# Attempt to guess a canonical system name.\n#   Copyright 1992-2024 Free Software Foundation, Inc.\n\n# shellcheck disable=SC2006,SC2268 # see below for rationale\n\ntimestamp='2024-01-01'\n\n# This file is free software; you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see <https://www.gnu.org/licenses/>.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n#\n# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n#\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\n#\n# Please send patches to <config-patches@gnu.org>.\n\n\n# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION]\n\nOutput the configuration name of the system '$me' is run on.\n\nOptions:\n  -h, --help         print this help, then exit\n  -t, --time-stamp   print date of last modification, then exit\n  -v, --version      print version number, then exit\n\nReport bugs and patches to <config-patches@gnu.org>.\"\n\nversion=\"\\\nGNU config.guess ($timestamp)\n\nOriginally written by Per Bothner.\nCopyright 1992-2024 Free Software Foundation, Inc.\n\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n\nhelp=\"\nTry '$me --help' for more information.\"\n\n# Parse command line\nwhile test $# -gt 0 ; do\n  case $1 in\n    --time-stamp | --time* | -t )\n       echo \"$timestamp\" ; exit ;;\n    --version | -v )\n       echo \"$version\" ; exit ;;\n    --help | --h* | -h )\n       echo \"$usage\"; exit ;;\n    -- )     # Stop option processing\n       shift; break ;;\n    - )\t# Use stdin as input.\n       break ;;\n    -* )\n       echo \"$me: invalid option $1$help\" >&2\n       exit 1 ;;\n    * )\n       break ;;\n  esac\ndone\n\nif test $# != 0; then\n  echo \"$me: too many arguments$help\" >&2\n  exit 1\nfi\n\n# Just in case it came from the environment.\nGUESS=\n\n# CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n# compiler to aid in system detection is discouraged as it requires\n# temporary files to be created and, as you can see below, it is a\n# headache to deal with in a portable fashion.\n\n# Historically, 'CC_FOR_BUILD' used to be named 'HOST_CC'. We still\n# use 'HOST_CC' if defined, but it is deprecated.\n\n# Portable tmp directory creation inspired by the Autoconf team.\n\ntmp=\n# shellcheck disable=SC2172\ntrap 'test -z \"$tmp\" || rm -fr \"$tmp\"' 0 1 2 13 15\n\nset_cc_for_build() {\n    # prevent multiple calls if $tmp is already set\n    test \"$tmp\" && return 0\n    : \"${TMPDIR=/tmp}\"\n    # shellcheck disable=SC2039,SC3028\n    { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n\t{ test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir \"$tmp\" 2>/dev/null) ; } ||\n\t{ tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir \"$tmp\" 2>/dev/null) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n\t{ echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; }\n    dummy=$tmp/dummy\n    case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in\n\t,,)    echo \"int x;\" > \"$dummy.c\"\n\t       for driver in cc gcc c89 c99 ; do\n\t\t   if ($driver -c -o \"$dummy.o\" \"$dummy.c\") >/dev/null 2>&1 ; then\n\t\t       CC_FOR_BUILD=$driver\n\t\t       break\n\t\t   fi\n\t       done\n\t       if test x\"$CC_FOR_BUILD\" = x ; then\n\t\t   CC_FOR_BUILD=no_compiler_found\n\t       fi\n\t       ;;\n\t,,*)   CC_FOR_BUILD=$CC ;;\n\t,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n    esac\n}\n\n# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n# (ghazi@noc.rutgers.edu 1994-08-24)\nif test -f /.attbin/uname ; then\n\tPATH=$PATH:/.attbin ; export PATH\nfi\n\nUNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\nUNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\nUNAME_SYSTEM=`(uname -s) 2>/dev/null` || UNAME_SYSTEM=unknown\nUNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n\ncase $UNAME_SYSTEM in\nLinux|GNU|GNU/*)\n\tLIBC=unknown\n\n\tset_cc_for_build\n\tcat <<-EOF > \"$dummy.c\"\n\t#if defined(__ANDROID__)\n\tLIBC=android\n\t#else\n\t#include <features.h>\n\t#if defined(__UCLIBC__)\n\tLIBC=uclibc\n\t#elif defined(__dietlibc__)\n\tLIBC=dietlibc\n\t#elif defined(__GLIBC__)\n\tLIBC=gnu\n\t#elif defined(__LLVM_LIBC__)\n\tLIBC=llvm\n\t#else\n\t#include <stdarg.h>\n\t/* First heuristic to detect musl libc.  */\n\t#ifdef __DEFINED_va_list\n\tLIBC=musl\n\t#endif\n\t#endif\n\t#endif\n\tEOF\n\tcc_set_libc=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n\teval \"$cc_set_libc\"\n\n\t# Second heuristic to detect musl libc.\n\tif [ \"$LIBC\" = unknown ] &&\n\t   command -v ldd >/dev/null &&\n\t   ldd --version 2>&1 | grep -q ^musl; then\n\t\tLIBC=musl\n\tfi\n\n\t# If the system lacks a compiler, then just pick glibc.\n\t# We could probably try harder.\n\tif [ \"$LIBC\" = unknown ]; then\n\t\tLIBC=gnu\n\tfi\n\t;;\nesac\n\n# Note: order is significant - the case branches are not exclusive.\n\ncase $UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION in\n    *:NetBSD:*:*)\n\t# NetBSD (nbsd) targets should (where applicable) match one or\n\t# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,\n\t# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently\n\t# switched to ELF, *-*-netbsd* would select the old\n\t# object file format.  This provides both forward\n\t# compatibility and a consistent mechanism for selecting the\n\t# object file format.\n\t#\n\t# Note: NetBSD doesn't particularly care about the vendor\n\t# portion of the name.  We always set it to \"unknown\".\n\tUNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \\\n\t    /sbin/sysctl -n hw.machine_arch 2>/dev/null || \\\n\t    /usr/sbin/sysctl -n hw.machine_arch 2>/dev/null || \\\n\t    echo unknown)`\n\tcase $UNAME_MACHINE_ARCH in\n\t    aarch64eb) machine=aarch64_be-unknown ;;\n\t    armeb) machine=armeb-unknown ;;\n\t    arm*) machine=arm-unknown ;;\n\t    sh3el) machine=shl-unknown ;;\n\t    sh3eb) machine=sh-unknown ;;\n\t    sh5el) machine=sh5le-unknown ;;\n\t    earmv*)\n\t\tarch=`echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n\t\tendian=`echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n\t\tmachine=${arch}${endian}-unknown\n\t\t;;\n\t    *) machine=$UNAME_MACHINE_ARCH-unknown ;;\n\tesac\n\t# The Operating System including object format, if it has switched\n\t# to ELF recently (or will in the future) and ABI.\n\tcase $UNAME_MACHINE_ARCH in\n\t    earm*)\n\t\tos=netbsdelf\n\t\t;;\n\t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n\t\tset_cc_for_build\n\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t\t| grep -q __ELF__\n\t\tthen\n\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n\t\t    # Return netbsd for either.  FIX?\n\t\t    os=netbsd\n\t\telse\n\t\t    os=netbsdelf\n\t\tfi\n\t\t;;\n\t    *)\n\t\tos=netbsd\n\t\t;;\n\tesac\n\t# Determine ABI tags.\n\tcase $UNAME_MACHINE_ARCH in\n\t    earm*)\n\t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n\t\tabi=`echo \"$UNAME_MACHINE_ARCH\" | sed -e \"$expr\"`\n\t\t;;\n\tesac\n\t# The OS release\n\t# Debian GNU/NetBSD machines have a different userland, and\n\t# thus, need a distinct triplet. However, they do not need\n\t# kernel version information, so it can be replaced with a\n\t# suitable tag, in the style of linux-gnu.\n\tcase $UNAME_VERSION in\n\t    Debian*)\n\t\trelease='-gnu'\n\t\t;;\n\t    *)\n\t\trelease=`echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2`\n\t\t;;\n\tesac\n\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n\t# contains redundant information, the shorter form:\n\t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n\tGUESS=$machine-${os}${release}${abi-}\n\t;;\n    *:Bitrig:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-bitrig$UNAME_RELEASE\n\t;;\n    *:OpenBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-openbsd$UNAME_RELEASE\n\t;;\n    *:SecBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/SecBSD.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-secbsd$UNAME_RELEASE\n\t;;\n    *:LibertyBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-libertybsd$UNAME_RELEASE\n\t;;\n    *:MidnightBSD:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-midnightbsd$UNAME_RELEASE\n\t;;\n    *:ekkoBSD:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-ekkobsd$UNAME_RELEASE\n\t;;\n    *:SolidBSD:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-solidbsd$UNAME_RELEASE\n\t;;\n    *:OS108:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-os108_$UNAME_RELEASE\n\t;;\n    macppc:MirBSD:*:*)\n\tGUESS=powerpc-unknown-mirbsd$UNAME_RELEASE\n\t;;\n    *:MirBSD:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-mirbsd$UNAME_RELEASE\n\t;;\n    *:Sortix:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-sortix\n\t;;\n    *:Twizzler:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-twizzler\n\t;;\n    *:Redox:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-redox\n\t;;\n    mips:OSF1:*.*)\n\tGUESS=mips-dec-osf1\n\t;;\n    alpha:OSF1:*:*)\n\t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n\ttrap '' 0\n\tcase $UNAME_RELEASE in\n\t*4.0)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n\t\t;;\n\t*5.*)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n\t\t;;\n\tesac\n\t# According to Compaq, /usr/sbin/psrinfo has been available on\n\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase $ALPHA_CPU_TYPE in\n\t    \"EV4 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"EV4.5 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"LCA4 (21066/21068)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"EV5 (21164)\")\n\t\tUNAME_MACHINE=alphaev5 ;;\n\t    \"EV5.6 (21164A)\")\n\t\tUNAME_MACHINE=alphaev56 ;;\n\t    \"EV5.6 (21164PC)\")\n\t\tUNAME_MACHINE=alphapca56 ;;\n\t    \"EV5.7 (21164PC)\")\n\t\tUNAME_MACHINE=alphapca57 ;;\n\t    \"EV6 (21264)\")\n\t\tUNAME_MACHINE=alphaev6 ;;\n\t    \"EV6.7 (21264A)\")\n\t\tUNAME_MACHINE=alphaev67 ;;\n\t    \"EV6.8CB (21264C)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.8AL (21264B)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.8CX (21264D)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.9A (21264/EV69A)\")\n\t\tUNAME_MACHINE=alphaev69 ;;\n\t    \"EV7 (21364)\")\n\t\tUNAME_MACHINE=alphaev7 ;;\n\t    \"EV7.9 (21364A)\")\n\t\tUNAME_MACHINE=alphaev79 ;;\n\tesac\n\t# A Pn.n version is a patched version.\n\t# A Vn.n version is a released version.\n\t# A Tn.n version is a released field test version.\n\t# A Xn.n version is an unreleased experimental baselevel.\n\t# 1.2 uses \"1.2\" for uname -r.\n\tOSF_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tGUESS=$UNAME_MACHINE-dec-osf$OSF_REL\n\t;;\n    Amiga*:UNIX_System_V:4.0:*)\n\tGUESS=m68k-unknown-sysv4\n\t;;\n    *:[Aa]miga[Oo][Ss]:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-amigaos\n\t;;\n    *:[Mm]orph[Oo][Ss]:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-morphos\n\t;;\n    *:OS/390:*:*)\n\tGUESS=i370-ibm-openedition\n\t;;\n    *:z/VM:*:*)\n\tGUESS=s390-ibm-zvmoe\n\t;;\n    *:OS400:*:*)\n\tGUESS=powerpc-ibm-os400\n\t;;\n    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n\tGUESS=arm-acorn-riscix$UNAME_RELEASE\n\t;;\n    arm*:riscos:*:*|arm*:RISCOS:*:*)\n\tGUESS=arm-unknown-riscos\n\t;;\n    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)\n\tGUESS=hppa1.1-hitachi-hiuxmpp\n\t;;\n    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n\tcase `(/bin/universe) 2>/dev/null` in\n\t    att) GUESS=pyramid-pyramid-sysv3 ;;\n\t    *)   GUESS=pyramid-pyramid-bsd   ;;\n\tesac\n\t;;\n    NILE*:*:*:dcosx)\n\tGUESS=pyramid-pyramid-svr4\n\t;;\n    DRS?6000:unix:4.0:6*)\n\tGUESS=sparc-icl-nx6\n\t;;\n    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)\n\tcase `/usr/bin/uname -p` in\n\t    sparc) GUESS=sparc-icl-nx7 ;;\n\tesac\n\t;;\n    s390x:SunOS:*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=$UNAME_MACHINE-ibm-solaris2$SUN_REL\n\t;;\n    sun4H:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-hal-solaris2$SUN_REL\n\t;;\n    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-sun-solaris2$SUN_REL\n\t;;\n    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n\tGUESS=i386-pc-auroraux$UNAME_RELEASE\n\t;;\n    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n\tset_cc_for_build\n\tSUN_ARCH=i386\n\t# If there is a compiler, see if it is configured for 64-bit objects.\n\t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n\t# This test works for both compilers.\n\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t(CCOPTS=\"\" $CC_FOR_BUILD -m64 -E - 2>/dev/null) | \\\n\t\tgrep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tSUN_ARCH=x86_64\n\t    fi\n\tfi\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=$SUN_ARCH-pc-solaris2$SUN_REL\n\t;;\n    sun4*:SunOS:6*:*)\n\t# According to config.sub, this is the proper way to canonicalize\n\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n\t# it's likely to be more like Solaris than SunOS4.\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-sun-solaris3$SUN_REL\n\t;;\n    sun4*:SunOS:*:*)\n\tcase `/usr/bin/arch -k` in\n\t    Series*|S4*)\n\t\tUNAME_RELEASE=`uname -v`\n\t\t;;\n\tesac\n\t# Japanese Language versions have a version number like '4.1.3-JL'.\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/-/_/'`\n\tGUESS=sparc-sun-sunos$SUN_REL\n\t;;\n    sun3*:SunOS:*:*)\n\tGUESS=m68k-sun-sunos$UNAME_RELEASE\n\t;;\n    sun*:*:4.2BSD:*)\n\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n\ttest \"x$UNAME_RELEASE\" = x && UNAME_RELEASE=3\n\tcase `/bin/arch` in\n\t    sun3)\n\t\tGUESS=m68k-sun-sunos$UNAME_RELEASE\n\t\t;;\n\t    sun4)\n\t\tGUESS=sparc-sun-sunos$UNAME_RELEASE\n\t\t;;\n\tesac\n\t;;\n    aushp:SunOS:*:*)\n\tGUESS=sparc-auspex-sunos$UNAME_RELEASE\n\t;;\n    # The situation for MiNT is a little confusing.  The machine name\n    # can be virtually everything (everything which is not\n    # \"atarist\" or \"atariste\" at least should have a processor\n    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n    # the system name \"TOS\" denotes a system which is actually not\n    # MiNT.  But MiNT is downward compatible to TOS, so this should\n    # be no problem.\n    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n\tGUESS=m68k-atari-mint$UNAME_RELEASE\n\t;;\n    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n\tGUESS=m68k-atari-mint$UNAME_RELEASE\n\t;;\n    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n\tGUESS=m68k-atari-mint$UNAME_RELEASE\n\t;;\n    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n\tGUESS=m68k-milan-mint$UNAME_RELEASE\n\t;;\n    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n\tGUESS=m68k-hades-mint$UNAME_RELEASE\n\t;;\n    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n\tGUESS=m68k-unknown-mint$UNAME_RELEASE\n\t;;\n    m68k:machten:*:*)\n\tGUESS=m68k-apple-machten$UNAME_RELEASE\n\t;;\n    powerpc:machten:*:*)\n\tGUESS=powerpc-apple-machten$UNAME_RELEASE\n\t;;\n    RISC*:Mach:*:*)\n\tGUESS=mips-dec-mach_bsd4.3\n\t;;\n    RISC*:ULTRIX:*:*)\n\tGUESS=mips-dec-ultrix$UNAME_RELEASE\n\t;;\n    VAX*:ULTRIX*:*:*)\n\tGUESS=vax-dec-ultrix$UNAME_RELEASE\n\t;;\n    2020:CLIX:*:* | 2430:CLIX:*:*)\n\tGUESS=clipper-intergraph-clix$UNAME_RELEASE\n\t;;\n    mips:*:*:UMIPS | mips:*:*:RISCos)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n#ifdef __cplusplus\n#include <stdio.h>  /* for printf() prototype */\n\tint main (int argc, char *argv[]) {\n#else\n\tint main (argc, argv) int argc; char *argv[]; {\n#endif\n\t#if defined (host_mips) && defined (MIPSEB)\n\t#if defined (SYSTYPE_SYSV)\n\t  printf (\"mips-mips-riscos%ssysv\\\\n\", argv[1]); exit (0);\n\t#endif\n\t#if defined (SYSTYPE_SVR4)\n\t  printf (\"mips-mips-riscos%ssvr4\\\\n\", argv[1]); exit (0);\n\t#endif\n\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n\t  printf (\"mips-mips-riscos%sbsd\\\\n\", argv[1]); exit (0);\n\t#endif\n\t#endif\n\t  exit (-1);\n\t}\nEOF\n\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" &&\n\t  dummyarg=`echo \"$UNAME_RELEASE\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n\t  SYSTEM_NAME=`\"$dummy\" \"$dummyarg\"` &&\n\t    { echo \"$SYSTEM_NAME\"; exit; }\n\tGUESS=mips-mips-riscos$UNAME_RELEASE\n\t;;\n    Motorola:PowerMAX_OS:*:*)\n\tGUESS=powerpc-motorola-powermax\n\t;;\n    Motorola:*:4.3:PL8-*)\n\tGUESS=powerpc-harris-powermax\n\t;;\n    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)\n\tGUESS=powerpc-harris-powermax\n\t;;\n    Night_Hawk:Power_UNIX:*:*)\n\tGUESS=powerpc-harris-powerunix\n\t;;\n    m88k:CX/UX:7*:*)\n\tGUESS=m88k-harris-cxux7\n\t;;\n    m88k:*:4*:R4*)\n\tGUESS=m88k-motorola-sysv4\n\t;;\n    m88k:*:3*:R3*)\n\tGUESS=m88k-motorola-sysv3\n\t;;\n    AViiON:dgux:*:*)\n\t# DG/UX returns AViiON for all architectures\n\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n\tif test \"$UNAME_PROCESSOR\" = mc88100 || test \"$UNAME_PROCESSOR\" = mc88110\n\tthen\n\t    if test \"$TARGET_BINARY_INTERFACE\"x = m88kdguxelfx || \\\n\t       test \"$TARGET_BINARY_INTERFACE\"x = x\n\t    then\n\t\tGUESS=m88k-dg-dgux$UNAME_RELEASE\n\t    else\n\t\tGUESS=m88k-dg-dguxbcs$UNAME_RELEASE\n\t    fi\n\telse\n\t    GUESS=i586-dg-dgux$UNAME_RELEASE\n\tfi\n\t;;\n    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n\tGUESS=m88k-dolphin-sysv3\n\t;;\n    M88*:*:R3*:*)\n\t# Delta 88k system running SVR3\n\tGUESS=m88k-motorola-sysv3\n\t;;\n    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n\tGUESS=m88k-tektronix-sysv3\n\t;;\n    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n\tGUESS=m68k-tektronix-bsd\n\t;;\n    *:IRIX*:*:*)\n\tIRIX_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/-/_/g'`\n\tGUESS=mips-sgi-irix$IRIX_REL\n\t;;\n    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n\tGUESS=romp-ibm-aix    # uname -m gives an 8 hex-code CPU id\n\t;;                    # Note that: echo \"'`uname -s`'\" gives 'AIX '\n    i*86:AIX:*:*)\n\tGUESS=i386-ibm-aix\n\t;;\n    ia64:AIX:*:*)\n\tif test -x /usr/bin/oslevel ; then\n\t\tIBM_REV=`/usr/bin/oslevel`\n\telse\n\t\tIBM_REV=$UNAME_VERSION.$UNAME_RELEASE\n\tfi\n\tGUESS=$UNAME_MACHINE-ibm-aix$IBM_REV\n\t;;\n    *:AIX:2:3)\n\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tset_cc_for_build\n\t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n\t\t#include <sys/systemcfg.h>\n\n\t\tmain()\n\t\t\t{\n\t\t\tif (!__power_pc())\n\t\t\t\texit(1);\n\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n\t\t\texit(0);\n\t\t\t}\nEOF\n\t\tif $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"`\n\t\tthen\n\t\t\tGUESS=$SYSTEM_NAME\n\t\telse\n\t\t\tGUESS=rs6000-ibm-aix3.2.5\n\t\tfi\n\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tGUESS=rs6000-ibm-aix3.2.4\n\telse\n\t\tGUESS=rs6000-ibm-aix3.2\n\tfi\n\t;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n\t\tIBM_ARCH=powerpc\n\tfi\n\tif test -x /usr/bin/lslpp ; then\n\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc | \\\n\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n\telse\n\t\tIBM_REV=$UNAME_VERSION.$UNAME_RELEASE\n\tfi\n\tGUESS=$IBM_ARCH-ibm-aix$IBM_REV\n\t;;\n    *:AIX:*:*)\n\tGUESS=rs6000-ibm-aix\n\t;;\n    ibmrt:4.4BSD:*|romp-ibm:4.4BSD:*)\n\tGUESS=romp-ibm-bsd4.4\n\t;;\n    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n\tGUESS=romp-ibm-bsd$UNAME_RELEASE    # 4.3 with uname added to\n\t;;                                  # report: romp-ibm BSD 4.3\n    *:BOSX:*:*)\n\tGUESS=rs6000-bull-bosx\n\t;;\n    DPX/2?00:B.O.S.:*:*)\n\tGUESS=m68k-bull-sysv3\n\t;;\n    9000/[34]??:4.3bsd:1.*:*)\n\tGUESS=m68k-hp-bsd\n\t;;\n    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n\tGUESS=m68k-hp-bsd4.4\n\t;;\n    9000/[34678]??:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*.[0B]*//'`\n\tcase $UNAME_MACHINE in\n\t    9000/31?)            HP_ARCH=m68000 ;;\n\t    9000/[34]??)         HP_ARCH=m68k ;;\n\t    9000/[678][0-9][0-9])\n\t\tif test -x /usr/bin/getconf; then\n\t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n\t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n\t\t    case $sc_cpu_version in\n\t\t      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0\n\t\t      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1\n\t\t      532)                      # CPU_PA_RISC2_0\n\t\t\tcase $sc_kernel_bits in\n\t\t\t  32) HP_ARCH=hppa2.0n ;;\n\t\t\t  64) HP_ARCH=hppa2.0w ;;\n\t\t\t  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20\n\t\t\tesac ;;\n\t\t    esac\n\t\tfi\n\t\tif test \"$HP_ARCH\" = \"\"; then\n\t\t    set_cc_for_build\n\t\t    sed 's/^\t\t//' << EOF > \"$dummy.c\"\n\n\t\t#define _HPUX_SOURCE\n\t\t#include <stdlib.h>\n\t\t#include <unistd.h>\n\n\t\tint main ()\n\t\t{\n\t\t#if defined(_SC_KERNEL_BITS)\n\t\t    long bits = sysconf(_SC_KERNEL_BITS);\n\t\t#endif\n\t\t    long cpu  = sysconf (_SC_CPU_VERSION);\n\n\t\t    switch (cpu)\n\t\t\t{\n\t\t\tcase CPU_PA_RISC1_0: puts (\"hppa1.0\"); break;\n\t\t\tcase CPU_PA_RISC1_1: puts (\"hppa1.1\"); break;\n\t\t\tcase CPU_PA_RISC2_0:\n\t\t#if defined(_SC_KERNEL_BITS)\n\t\t\t    switch (bits)\n\t\t\t\t{\n\t\t\t\tcase 64: puts (\"hppa2.0w\"); break;\n\t\t\t\tcase 32: puts (\"hppa2.0n\"); break;\n\t\t\t\tdefault: puts (\"hppa2.0\"); break;\n\t\t\t\t} break;\n\t\t#else  /* !defined(_SC_KERNEL_BITS) */\n\t\t\t    puts (\"hppa2.0\"); break;\n\t\t#endif\n\t\t\tdefault: puts (\"hppa1.0\"); break;\n\t\t\t}\n\t\t    exit (0);\n\t\t}\nEOF\n\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null) && HP_ARCH=`\"$dummy\"`\n\t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n\t\tfi ;;\n\tesac\n\tif test \"$HP_ARCH\" = hppa2.0w\n\tthen\n\t    set_cc_for_build\n\n\t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n\t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n\t    # generating 64-bit code.  GNU and HP use different nomenclature:\n\t    #\n\t    # $ CC_FOR_BUILD=cc ./config.guess\n\t    # => hppa2.0w-hp-hpux11.23\n\t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n\t    # => hppa64-hp-hpux11.23\n\n\t    if echo __LP64__ | (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) |\n\t\tgrep -q __LP64__\n\t    then\n\t\tHP_ARCH=hppa2.0w\n\t    else\n\t\tHP_ARCH=hppa64\n\t    fi\n\tfi\n\tGUESS=$HP_ARCH-hp-hpux$HPUX_REV\n\t;;\n    ia64:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*.[0B]*//'`\n\tGUESS=ia64-hp-hpux$HPUX_REV\n\t;;\n    3050*:HI-UX:*:*)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#include <unistd.h>\n\tint\n\tmain ()\n\t{\n\t  long cpu = sysconf (_SC_CPU_VERSION);\n\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n\t     results, however.  */\n\t  if (CPU_IS_PA_RISC (cpu))\n\t    {\n\t      switch (cpu)\n\t\t{\n\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n\t\t}\n\t    }\n\t  else if (CPU_IS_HP_MC68K (cpu))\n\t    puts (\"m68k-hitachi-hiuxwe2\");\n\t  else puts (\"unknown-hitachi-hiuxwe2\");\n\t  exit (0);\n\t}\nEOF\n\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"` &&\n\t\t{ echo \"$SYSTEM_NAME\"; exit; }\n\tGUESS=unknown-hitachi-hiuxwe2\n\t;;\n    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:*)\n\tGUESS=hppa1.1-hp-bsd\n\t;;\n    9000/8??:4.3bsd:*:*)\n\tGUESS=hppa1.0-hp-bsd\n\t;;\n    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n\tGUESS=hppa1.0-hp-mpeix\n\t;;\n    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:*)\n\tGUESS=hppa1.1-hp-osf\n\t;;\n    hp8??:OSF1:*:*)\n\tGUESS=hppa1.0-hp-osf\n\t;;\n    i*86:OSF1:*:*)\n\tif test -x /usr/sbin/sysversion ; then\n\t    GUESS=$UNAME_MACHINE-unknown-osf1mk\n\telse\n\t    GUESS=$UNAME_MACHINE-unknown-osf1\n\tfi\n\t;;\n    parisc*:Lites*:*:*)\n\tGUESS=hppa1.1-hp-lites\n\t;;\n    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n\tGUESS=c1-convex-bsd\n\t;;\n    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n\tif getsysinfo -f scalar_acc\n\tthen echo c32-convex-bsd\n\telse echo c2-convex-bsd\n\tfi\n\texit ;;\n    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n\tGUESS=c34-convex-bsd\n\t;;\n    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n\tGUESS=c38-convex-bsd\n\t;;\n    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n\tGUESS=c4-convex-bsd\n\t;;\n    CRAY*Y-MP:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=ymp-cray-unicos$CRAY_REL\n\t;;\n    CRAY*[A-Z]90:*:*:*)\n\techo \"$UNAME_MACHINE\"-cray-unicos\"$UNAME_RELEASE\" \\\n\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n\t      -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*TS:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=t90-cray-unicos$CRAY_REL\n\t;;\n    CRAY*T3E:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=alphaev5-cray-unicosmk$CRAY_REL\n\t;;\n    CRAY*SV1:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=sv1-cray-unicos$CRAY_REL\n\t;;\n    *:UNICOS/mp:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=craynv-cray-unicosmp$CRAY_REL\n\t;;\n    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ /_/'`\n\tGUESS=${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n    5000:UNIX_System_V:4.*:*)\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n\tGUESS=sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n\tGUESS=$UNAME_MACHINE-pc-bsdi$UNAME_RELEASE\n\t;;\n    sparc*:BSD/OS:*:*)\n\tGUESS=sparc-unknown-bsdi$UNAME_RELEASE\n\t;;\n    *:BSD/OS:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-bsdi$UNAME_RELEASE\n\t;;\n    arm:FreeBSD:*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tset_cc_for_build\n\tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_PCS_VFP\n\tthen\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabi\n\telse\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabihf\n\tfi\n\t;;\n    *:FreeBSD:*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tcase $UNAME_PROCESSOR in\n\t    amd64)\n\t\tUNAME_PROCESSOR=x86_64 ;;\n\t    i386)\n\t\tUNAME_PROCESSOR=i586 ;;\n\tesac\n\tFREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL\n\t;;\n    i*:CYGWIN*:*)\n\tGUESS=$UNAME_MACHINE-pc-cygwin\n\t;;\n    *:MINGW64*:*)\n\tGUESS=$UNAME_MACHINE-pc-mingw64\n\t;;\n    *:MINGW*:*)\n\tGUESS=$UNAME_MACHINE-pc-mingw32\n\t;;\n    *:MSYS*:*)\n\tGUESS=$UNAME_MACHINE-pc-msys\n\t;;\n    i*:PW*:*)\n\tGUESS=$UNAME_MACHINE-pc-pw32\n\t;;\n    *:SerenityOS:*:*)\n        GUESS=$UNAME_MACHINE-pc-serenity\n        ;;\n    *:Interix*:*)\n\tcase $UNAME_MACHINE in\n\t    x86)\n\t\tGUESS=i586-pc-interix$UNAME_RELEASE\n\t\t;;\n\t    authenticamd | genuineintel | EM64T)\n\t\tGUESS=x86_64-unknown-interix$UNAME_RELEASE\n\t\t;;\n\t    IA64)\n\t\tGUESS=ia64-unknown-interix$UNAME_RELEASE\n\t\t;;\n\tesac ;;\n    i*:UWIN*:*)\n\tGUESS=$UNAME_MACHINE-pc-uwin\n\t;;\n    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n\tGUESS=x86_64-pc-cygwin\n\t;;\n    prep*:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=powerpcle-unknown-solaris2$SUN_REL\n\t;;\n    *:GNU:*:*)\n\t# the GNU system\n\tGNU_ARCH=`echo \"$UNAME_MACHINE\" | sed -e 's,[-/].*$,,'`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's,/.*$,,'`\n\tGUESS=$GNU_ARCH-unknown-$LIBC$GNU_REL\n\t;;\n    *:GNU/*:*:*)\n\t# other systems with GNU libc and userland\n\tGNU_SYS=`echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_MACHINE-unknown-$GNU_SYS$GNU_REL-$LIBC\n\t;;\n    x86_64:[Mm]anagarm:*:*|i?86:[Mm]anagarm:*:*)\n\tGUESS=\"$UNAME_MACHINE-pc-managarm-mlibc\"\n\t;;\n    *:[Mm]anagarm:*:*)\n\tGUESS=\"$UNAME_MACHINE-unknown-managarm-mlibc\"\n\t;;\n    *:Minix:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-minix\n\t;;\n    aarch64:Linux:*:*)\n\tset_cc_for_build\n\tCPU=$UNAME_MACHINE\n\tLIBCABI=$LIBC\n\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    ABI=64\n\t    sed 's/^\t    //' << EOF > \"$dummy.c\"\n\t    #ifdef __ARM_EABI__\n\t    #ifdef __ARM_PCS_VFP\n\t    ABI=eabihf\n\t    #else\n\t    ABI=eabi\n\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\teabi | eabihf) CPU=armv8l; LIBCABI=$LIBC$ABI ;;\n\t    esac\n\tfi\n\tGUESS=$CPU-unknown-linux-$LIBCABI\n\t;;\n    aarch64_be:Linux:*:*)\n\tUNAME_MACHINE=aarch64_be\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    alpha:Linux:*:*)\n\tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' /proc/cpuinfo 2>/dev/null` in\n\t  EV5)   UNAME_MACHINE=alphaev5 ;;\n\t  EV56)  UNAME_MACHINE=alphaev56 ;;\n\t  PCA56) UNAME_MACHINE=alphapca56 ;;\n\t  PCA57) UNAME_MACHINE=alphapca56 ;;\n\t  EV6)   UNAME_MACHINE=alphaev6 ;;\n\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n\tesac\n\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n\tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    arc:Linux:*:* | arceb:Linux:*:* | arc32:Linux:*:* | arc64:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    arm*:Linux:*:*)\n\tset_cc_for_build\n\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_EABI__\n\tthen\n\t    GUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\telse\n\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t| grep -q __ARM_PCS_VFP\n\t    then\n\t\tGUESS=$UNAME_MACHINE-unknown-linux-${LIBC}eabi\n\t    else\n\t\tGUESS=$UNAME_MACHINE-unknown-linux-${LIBC}eabihf\n\t    fi\n\tfi\n\t;;\n    avr32*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    cris:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-axis-linux-$LIBC\n\t;;\n    crisv32:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-axis-linux-$LIBC\n\t;;\n    e2k:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    frv:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    hexagon:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    i*86:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-pc-linux-$LIBC\n\t;;\n    ia64:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    k1om:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    kvx:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    kvx:cos:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-cos\n\t;;\n    kvx:mbr:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-mbr\n\t;;\n    loongarch32:Linux:*:* | loongarch64:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    m32r*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    m68*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    mips:Linux:*:* | mips64:Linux:*:*)\n\tset_cc_for_build\n\tIS_GLIBC=0\n\ttest x\"${LIBC}\" = xgnu && IS_GLIBC=1\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#undef CPU\n\t#undef mips\n\t#undef mipsel\n\t#undef mips64\n\t#undef mips64el\n\t#if ${IS_GLIBC} && defined(_ABI64)\n\tLIBCABI=gnuabi64\n\t#else\n\t#if ${IS_GLIBC} && defined(_ABIN32)\n\tLIBCABI=gnuabin32\n\t#else\n\tLIBCABI=${LIBC}\n\t#endif\n\t#endif\n\n\t#if ${IS_GLIBC} && defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6\n\tCPU=mipsisa64r6\n\t#else\n\t#if ${IS_GLIBC} && !defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6\n\tCPU=mipsisa32r6\n\t#else\n\t#if defined(__mips64)\n\tCPU=mips64\n\t#else\n\tCPU=mips\n\t#endif\n\t#endif\n\t#endif\n\n\t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n\tMIPS_ENDIAN=el\n\t#else\n\t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n\tMIPS_ENDIAN=\n\t#else\n\tMIPS_ENDIAN=\n\t#endif\n\t#endif\nEOF\n\tcc_set_vars=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU\\|^MIPS_ENDIAN\\|^LIBCABI'`\n\teval \"$cc_set_vars\"\n\ttest \"x$CPU\" != x && { echo \"$CPU${MIPS_ENDIAN}-unknown-linux-$LIBCABI\"; exit; }\n\t;;\n    mips64el:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    openrisc*:Linux:*:*)\n\tGUESS=or1k-unknown-linux-$LIBC\n\t;;\n    or32:Linux:*:* | or1k*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    padre:Linux:*:*)\n\tGUESS=sparc-unknown-linux-$LIBC\n\t;;\n    parisc64:Linux:*:* | hppa64:Linux:*:*)\n\tGUESS=hppa64-unknown-linux-$LIBC\n\t;;\n    parisc:Linux:*:* | hppa:Linux:*:*)\n\t# Look for CPU level\n\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n\t  PA7*) GUESS=hppa1.1-unknown-linux-$LIBC ;;\n\t  PA8*) GUESS=hppa2.0-unknown-linux-$LIBC ;;\n\t  *)    GUESS=hppa-unknown-linux-$LIBC ;;\n\tesac\n\t;;\n    ppc64:Linux:*:*)\n\tGUESS=powerpc64-unknown-linux-$LIBC\n\t;;\n    ppc:Linux:*:*)\n\tGUESS=powerpc-unknown-linux-$LIBC\n\t;;\n    ppc64le:Linux:*:*)\n\tGUESS=powerpc64le-unknown-linux-$LIBC\n\t;;\n    ppcle:Linux:*:*)\n\tGUESS=powerpcle-unknown-linux-$LIBC\n\t;;\n    riscv32:Linux:*:* | riscv32be:Linux:*:* | riscv64:Linux:*:* | riscv64be:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    s390:Linux:*:* | s390x:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-ibm-linux-$LIBC\n\t;;\n    sh64*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    sh*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    sparc:Linux:*:* | sparc64:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    tile*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    vax:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-dec-linux-$LIBC\n\t;;\n    x86_64:Linux:*:*)\n\tset_cc_for_build\n\tCPU=$UNAME_MACHINE\n\tLIBCABI=$LIBC\n\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    ABI=64\n\t    sed 's/^\t    //' << EOF > \"$dummy.c\"\n\t    #ifdef __i386__\n\t    ABI=x86\n\t    #else\n\t    #ifdef __ILP32__\n\t    ABI=x32\n\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\tx86) CPU=i686 ;;\n\t\tx32) LIBCABI=${LIBC}x32 ;;\n\t    esac\n\tfi\n\tGUESS=$CPU-pc-linux-$LIBCABI\n\t;;\n    xtensa*:Linux:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n    i*86:DYNIX/ptx:4*:*)\n\t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n\t# earlier versions are messed up and put the nodename in both\n\t# sysname and nodename.\n\tGUESS=i386-sequent-sysv4\n\t;;\n    i*86:UNIX_SV:4.2MP:2.*)\n\t# Unixware is an offshoot of SVR4, but it has its own version\n\t# number series starting with 2...\n\t# I am not positive that other SVR4 systems won't match this,\n\t# I just have to hope.  -- rms.\n\t# Use sysv4.2uw... so that sysv4* matches it.\n\tGUESS=$UNAME_MACHINE-pc-sysv4.2uw$UNAME_VERSION\n\t;;\n    i*86:OS/2:*:*)\n\t# If we were able to find 'uname', then EMX Unix compatibility\n\t# is probably installed.\n\tGUESS=$UNAME_MACHINE-pc-os2-emx\n\t;;\n    i*86:XTS-300:*:STOP)\n\tGUESS=$UNAME_MACHINE-unknown-stop\n\t;;\n    i*86:atheos:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-atheos\n\t;;\n    i*86:syllable:*:*)\n\tGUESS=$UNAME_MACHINE-pc-syllable\n\t;;\n    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)\n\tGUESS=i386-unknown-lynxos$UNAME_RELEASE\n\t;;\n    i*86:*DOS:*:*)\n\tGUESS=$UNAME_MACHINE-pc-msdosdjgpp\n\t;;\n    i*86:*:4.*:*)\n\tUNAME_REL=`echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//'`\n\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n\t\tGUESS=$UNAME_MACHINE-univel-sysv$UNAME_REL\n\telse\n\t\tGUESS=$UNAME_MACHINE-pc-sysv$UNAME_REL\n\tfi\n\t;;\n    i*86:*:5:[678]*)\n\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n\tcase `/bin/uname -X | grep \"^Machine\"` in\n\t    *486*)\t     UNAME_MACHINE=i486 ;;\n\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n\tesac\n\tGUESS=$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\n\t;;\n    i*86:*:3.2:*)\n\tif test -f /usr/options/cb.name; then\n\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n\t\tGUESS=$UNAME_MACHINE-pc-isc$UNAME_REL\n\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n\t\tUNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`\n\t\t(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486\n\t\t(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i586\n\t\t(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i686\n\t\t(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i686\n\t\tGUESS=$UNAME_MACHINE-pc-sco$UNAME_REL\n\telse\n\t\tGUESS=$UNAME_MACHINE-pc-sysv32\n\tfi\n\t;;\n    pc:*:*:*)\n\t# Left here for compatibility:\n\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n\t# the processor, so we play safe by assuming i586.\n\t# Note: whatever this is, it MUST be the same as what config.sub\n\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n\t# this is a cross-build.\n\tGUESS=i586-pc-msdosdjgpp\n\t;;\n    Intel:Mach:3*:*)\n\tGUESS=i386-pc-mach3\n\t;;\n    paragon:*:*:*)\n\tGUESS=i860-intel-osf1\n\t;;\n    i860:*:4.*:*) # i860-SVR4\n\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n\t  GUESS=i860-stardent-sysv$UNAME_RELEASE    # Stardent Vistra i860-SVR4\n\telse # Add other i860-SVR4 vendors below as they are discovered.\n\t  GUESS=i860-unknown-sysv$UNAME_RELEASE     # Unknown i860-SVR4\n\tfi\n\t;;\n    mini*:CTIX:SYS*5:*)\n\t# \"miniframe\"\n\tGUESS=m68010-convergent-sysv\n\t;;\n    mc68k:UNIX:SYSTEM5:3.51m)\n\tGUESS=m68k-convergent-sysv\n\t;;\n    M680?0:D-NIX:5.3:*)\n\tGUESS=m68k-diab-dnix\n\t;;\n    M68*:*:R3V[5678]*:*)\n\ttest -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;\n    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)\n\tOS_REL=''\n\ttest -r /etc/.relid \\\n\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t  && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4; exit; } ;;\n    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n\tOS_REL='.3'\n\ttest -r /etc/.relid \\\n\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t    && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n\tGUESS=m68k-unknown-lynxos$UNAME_RELEASE\n\t;;\n    mc68030:UNIX_System_V:4.*:*)\n\tGUESS=m68k-atari-sysv4\n\t;;\n    TSUNAMI:LynxOS:2.*:*)\n\tGUESS=sparc-unknown-lynxos$UNAME_RELEASE\n\t;;\n    rs6000:LynxOS:2.*:*)\n\tGUESS=rs6000-unknown-lynxos$UNAME_RELEASE\n\t;;\n    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)\n\tGUESS=powerpc-unknown-lynxos$UNAME_RELEASE\n\t;;\n    SM[BE]S:UNIX_SV:*:*)\n\tGUESS=mips-dde-sysv$UNAME_RELEASE\n\t;;\n    RM*:ReliantUNIX-*:*:*)\n\tGUESS=mips-sni-sysv4\n\t;;\n    RM*:SINIX-*:*:*)\n\tGUESS=mips-sni-sysv4\n\t;;\n    *:SINIX-*:*:*)\n\tif uname -p 2>/dev/null >/dev/null ; then\n\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n\t\tGUESS=$UNAME_MACHINE-sni-sysv4\n\telse\n\t\tGUESS=ns32k-sni-sysv\n\tfi\n\t;;\n    PENTIUM:*:4.0*:*)\t# Unisys 'ClearPath HMP IX 4000' SVR4/MP effort\n\t\t\t# says <Richard.M.Bartel@ccMail.Census.GOV>\n\tGUESS=i586-unisys-sysv4\n\t;;\n    *:UNIX_System_V:4*:FTX*)\n\t# From Gerald Hewes <hewes@openmarket.com>.\n\t# How about differentiating between stratus architectures? -djm\n\tGUESS=hppa1.1-stratus-sysv4\n\t;;\n    *:*:*:FTX*)\n\t# From seanf@swdc.stratus.com.\n\tGUESS=i860-stratus-sysv4\n\t;;\n    i*86:VOS:*:*)\n\t# From Paul.Green@stratus.com.\n\tGUESS=$UNAME_MACHINE-stratus-vos\n\t;;\n    *:VOS:*:*)\n\t# From Paul.Green@stratus.com.\n\tGUESS=hppa1.1-stratus-vos\n\t;;\n    mc68*:A/UX:*:*)\n\tGUESS=m68k-apple-aux$UNAME_RELEASE\n\t;;\n    news*:NEWS-OS:6*:*)\n\tGUESS=mips-sony-newsos6\n\t;;\n    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n\tif test -d /usr/nec; then\n\t\tGUESS=mips-nec-sysv$UNAME_RELEASE\n\telse\n\t\tGUESS=mips-unknown-sysv$UNAME_RELEASE\n\tfi\n\t;;\n    BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n\tGUESS=powerpc-be-beos\n\t;;\n    BeMac:BeOS:*:*)\t# BeOS running on Mac or Mac clone, PPC only.\n\tGUESS=powerpc-apple-beos\n\t;;\n    BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n\tGUESS=i586-pc-beos\n\t;;\n    BePC:Haiku:*:*)\t# Haiku running on Intel PC compatible.\n\tGUESS=i586-pc-haiku\n\t;;\n    ppc:Haiku:*:*)\t# Haiku running on Apple PowerPC\n\tGUESS=powerpc-apple-haiku\n\t;;\n    *:Haiku:*:*)\t# Haiku modern gcc (not bound by BeOS compat)\n\tGUESS=$UNAME_MACHINE-unknown-haiku\n\t;;\n    SX-4:SUPER-UX:*:*)\n\tGUESS=sx4-nec-superux$UNAME_RELEASE\n\t;;\n    SX-5:SUPER-UX:*:*)\n\tGUESS=sx5-nec-superux$UNAME_RELEASE\n\t;;\n    SX-6:SUPER-UX:*:*)\n\tGUESS=sx6-nec-superux$UNAME_RELEASE\n\t;;\n    SX-7:SUPER-UX:*:*)\n\tGUESS=sx7-nec-superux$UNAME_RELEASE\n\t;;\n    SX-8:SUPER-UX:*:*)\n\tGUESS=sx8-nec-superux$UNAME_RELEASE\n\t;;\n    SX-8R:SUPER-UX:*:*)\n\tGUESS=sx8r-nec-superux$UNAME_RELEASE\n\t;;\n    SX-ACE:SUPER-UX:*:*)\n\tGUESS=sxace-nec-superux$UNAME_RELEASE\n\t;;\n    Power*:Rhapsody:*:*)\n\tGUESS=powerpc-apple-rhapsody$UNAME_RELEASE\n\t;;\n    *:Rhapsody:*:*)\n\tGUESS=$UNAME_MACHINE-apple-rhapsody$UNAME_RELEASE\n\t;;\n    arm64:Darwin:*:*)\n\tGUESS=aarch64-apple-darwin$UNAME_RELEASE\n\t;;\n    *:Darwin:*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tcase $UNAME_PROCESSOR in\n\t    unknown) UNAME_PROCESSOR=powerpc ;;\n\tesac\n\tif command -v xcode-select > /dev/null 2> /dev/null && \\\n\t\t! xcode-select --print-path > /dev/null 2> /dev/null ; then\n\t    # Avoid executing cc if there is no toolchain installed as\n\t    # cc will be a stub that puts up a graphical alert\n\t    # prompting the user to install developer tools.\n\t    CC_FOR_BUILD=no_compiler_found\n\telse\n\t    set_cc_for_build\n\tfi\n\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t   grep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tcase $UNAME_PROCESSOR in\n\t\t    i386) UNAME_PROCESSOR=x86_64 ;;\n\t\t    powerpc) UNAME_PROCESSOR=powerpc64 ;;\n\t\tesac\n\t    fi\n\t    # On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n\t    if (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t   grep IS_PPC >/dev/null\n\t    then\n\t\tUNAME_PROCESSOR=powerpc\n\t    fi\n\telif test \"$UNAME_PROCESSOR\" = i386 ; then\n\t    # uname -m returns i386 or x86_64\n\t    UNAME_PROCESSOR=$UNAME_MACHINE\n\tfi\n\tGUESS=$UNAME_PROCESSOR-apple-darwin$UNAME_RELEASE\n\t;;\n    *:procnto*:*:* | *:QNX:[0123456789]*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tif test \"$UNAME_PROCESSOR\" = x86; then\n\t\tUNAME_PROCESSOR=i386\n\t\tUNAME_MACHINE=pc\n\tfi\n\tGUESS=$UNAME_PROCESSOR-$UNAME_MACHINE-nto-qnx$UNAME_RELEASE\n\t;;\n    *:QNX:*:4*)\n\tGUESS=i386-pc-qnx\n\t;;\n    NEO-*:NONSTOP_KERNEL:*:*)\n\tGUESS=neo-tandem-nsk$UNAME_RELEASE\n\t;;\n    NSE-*:NONSTOP_KERNEL:*:*)\n\tGUESS=nse-tandem-nsk$UNAME_RELEASE\n\t;;\n    NSR-*:NONSTOP_KERNEL:*:*)\n\tGUESS=nsr-tandem-nsk$UNAME_RELEASE\n\t;;\n    NSV-*:NONSTOP_KERNEL:*:*)\n\tGUESS=nsv-tandem-nsk$UNAME_RELEASE\n\t;;\n    NSX-*:NONSTOP_KERNEL:*:*)\n\tGUESS=nsx-tandem-nsk$UNAME_RELEASE\n\t;;\n    *:NonStop-UX:*:*)\n\tGUESS=mips-compaq-nonstopux\n\t;;\n    BS2000:POSIX*:*:*)\n\tGUESS=bs2000-siemens-sysv\n\t;;\n    DS/*:UNIX_System_V:*:*)\n\tGUESS=$UNAME_MACHINE-$UNAME_SYSTEM-$UNAME_RELEASE\n\t;;\n    *:Plan9:*:*)\n\t# \"uname -m\" is not consistent, so use $cputype instead. 386\n\t# is converted to i386 for consistency with other x86\n\t# operating systems.\n\tif test \"${cputype-}\" = 386; then\n\t    UNAME_MACHINE=i386\n\telif test \"x${cputype-}\" != x; then\n\t    UNAME_MACHINE=$cputype\n\tfi\n\tGUESS=$UNAME_MACHINE-unknown-plan9\n\t;;\n    *:TOPS-10:*:*)\n\tGUESS=pdp10-unknown-tops10\n\t;;\n    *:TENEX:*:*)\n\tGUESS=pdp10-unknown-tenex\n\t;;\n    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)\n\tGUESS=pdp10-dec-tops20\n\t;;\n    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)\n\tGUESS=pdp10-xkl-tops20\n\t;;\n    *:TOPS-20:*:*)\n\tGUESS=pdp10-unknown-tops20\n\t;;\n    *:ITS:*:*)\n\tGUESS=pdp10-unknown-its\n\t;;\n    SEI:*:*:SEIUX)\n\tGUESS=mips-sei-seiux$UNAME_RELEASE\n\t;;\n    *:DragonFly:*:*)\n\tDRAGONFLY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_MACHINE-unknown-dragonfly$DRAGONFLY_REL\n\t;;\n    *:*VMS:*:*)\n\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n\tcase $UNAME_MACHINE in\n\t    A*) GUESS=alpha-dec-vms ;;\n\t    I*) GUESS=ia64-dec-vms ;;\n\t    V*) GUESS=vax-dec-vms ;;\n\tesac ;;\n    *:XENIX:*:SysV)\n\tGUESS=i386-pc-xenix\n\t;;\n    i*86:skyos:*:*)\n\tSKYOS_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ .*$//'`\n\tGUESS=$UNAME_MACHINE-pc-skyos$SKYOS_REL\n\t;;\n    i*86:rdos:*:*)\n\tGUESS=$UNAME_MACHINE-pc-rdos\n\t;;\n    i*86:Fiwix:*:*)\n\tGUESS=$UNAME_MACHINE-pc-fiwix\n\t;;\n    *:AROS:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-aros\n\t;;\n    x86_64:VMkernel:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-esx\n\t;;\n    amd64:Isilon\\ OneFS:*:*)\n\tGUESS=x86_64-unknown-onefs\n\t;;\n    *:Unleashed:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-unleashed$UNAME_RELEASE\n\t;;\n    *:Ironclad:*:*)\n\tGUESS=$UNAME_MACHINE-unknown-ironclad\n\t;;\nesac\n\n# Do we have a guess based on uname results?\nif test \"x$GUESS\" != x; then\n    echo \"$GUESS\"\n    exit\nfi\n\n# No uname command or uname output not recognized.\nset_cc_for_build\ncat > \"$dummy.c\" <<EOF\n#ifdef _SEQUENT_\n#include <sys/types.h>\n#include <sys/utsname.h>\n#endif\n#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)\n#if defined (vax) || defined (__vax) || defined (__vax__) || defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)\n#include <signal.h>\n#if defined(_SIZE_T_) || defined(SIGLOST)\n#include <sys/utsname.h>\n#endif\n#endif\n#endif\nmain ()\n{\n#if defined (sony)\n#if defined (MIPSEB)\n  /* BFD wants \"bsd\" instead of \"newsos\".  Perhaps BFD should be changed,\n     I don't know....  */\n  printf (\"mips-sony-bsd\\n\"); exit (0);\n#else\n#include <sys/param.h>\n  printf (\"m68k-sony-newsos%s\\n\",\n#ifdef NEWSOS4\n  \"4\"\n#else\n  \"\"\n#endif\n  ); exit (0);\n#endif\n#endif\n\n#if defined (NeXT)\n#if !defined (__ARCHITECTURE__)\n#define __ARCHITECTURE__ \"m68k\"\n#endif\n  int version;\n  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n  if (version < 4)\n    printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n  else\n    printf (\"%s-next-openstep%d\\n\", __ARCHITECTURE__, version);\n  exit (0);\n#endif\n\n#if defined (MULTIMAX) || defined (n16)\n#if defined (UMAXV)\n  printf (\"ns32k-encore-sysv\\n\"); exit (0);\n#else\n#if defined (CMU)\n  printf (\"ns32k-encore-mach\\n\"); exit (0);\n#else\n  printf (\"ns32k-encore-bsd\\n\"); exit (0);\n#endif\n#endif\n#endif\n\n#if defined (__386BSD__)\n  printf (\"i386-pc-bsd\\n\"); exit (0);\n#endif\n\n#if defined (sequent)\n#if defined (i386)\n  printf (\"i386-sequent-dynix\\n\"); exit (0);\n#endif\n#if defined (ns32000)\n  printf (\"ns32k-sequent-dynix\\n\"); exit (0);\n#endif\n#endif\n\n#if defined (_SEQUENT_)\n  struct utsname un;\n\n  uname(&un);\n  if (strncmp(un.version, \"V2\", 2) == 0) {\n    printf (\"i386-sequent-ptx2\\n\"); exit (0);\n  }\n  if (strncmp(un.version, \"V1\", 2) == 0) { /* XXX is V1 correct? */\n    printf (\"i386-sequent-ptx1\\n\"); exit (0);\n  }\n  printf (\"i386-sequent-ptx\\n\"); exit (0);\n#endif\n\n#if defined (vax)\n#if !defined (ultrix)\n#include <sys/param.h>\n#if defined (BSD)\n#if BSD == 43\n  printf (\"vax-dec-bsd4.3\\n\"); exit (0);\n#else\n#if BSD == 199006\n  printf (\"vax-dec-bsd4.3reno\\n\"); exit (0);\n#else\n  printf (\"vax-dec-bsd\\n\"); exit (0);\n#endif\n#endif\n#else\n  printf (\"vax-dec-bsd\\n\"); exit (0);\n#endif\n#else\n#if defined(_SIZE_T_) || defined(SIGLOST)\n  struct utsname un;\n  uname (&un);\n  printf (\"vax-dec-ultrix%s\\n\", un.release); exit (0);\n#else\n  printf (\"vax-dec-ultrix\\n\"); exit (0);\n#endif\n#endif\n#endif\n#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)\n#if defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)\n#if defined(_SIZE_T_) || defined(SIGLOST)\n  struct utsname *un;\n  uname (&un);\n  printf (\"mips-dec-ultrix%s\\n\", un.release); exit (0);\n#else\n  printf (\"mips-dec-ultrix\\n\"); exit (0);\n#endif\n#endif\n#endif\n\n#if defined (alliant) && defined (i860)\n  printf (\"i860-alliant-bsd\\n\"); exit (0);\n#endif\n\n  exit (1);\n}\nEOF\n\n$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null && SYSTEM_NAME=`\"$dummy\"` &&\n\t{ echo \"$SYSTEM_NAME\"; exit; }\n\n# Apollos put the system type in the environment.\ntest -d /usr/apollo && { echo \"$ISP-apollo-$SYSTYPE\"; exit; }\n\necho \"$0: unable to guess system type\" >&2\n\ncase $UNAME_MACHINE:$UNAME_SYSTEM in\n    mips:Linux | mips64:Linux)\n\t# If we got here on MIPS GNU/Linux, output extra information.\n\tcat >&2 <<EOF\n\nNOTE: MIPS GNU/Linux systems require a C compiler to fully recognize\nthe system type. Please install a C compiler and try again.\nEOF\n\t;;\nesac\n\ncat >&2 <<EOF\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite *all*\ncopies of config.guess and config.sub with the latest versions from:\n\n  https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\nand\n  https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\nEOF\n\nour_year=`echo $timestamp | sed 's,-.*,,'`\nthisyear=`date +%Y`\n# shellcheck disable=SC2003\nscript_age=`expr \"$thisyear\" - \"$our_year\"`\nif test \"$script_age\" -lt 3 ; then\n   cat >&2 <<EOF\n\nIf $0 has already been updated, send the following data and any\ninformation you think might be pertinent to config-patches@gnu.org to\nprovide the necessary information to handle your system.\n\nconfig.guess timestamp = $timestamp\n\nuname -m = `(uname -m) 2>/dev/null || echo unknown`\nuname -r = `(uname -r) 2>/dev/null || echo unknown`\nuname -s = `(uname -s) 2>/dev/null || echo unknown`\nuname -v = `(uname -v) 2>/dev/null || echo unknown`\n\n/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`\n/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`\n\nhostinfo               = `(hostinfo) 2>/dev/null`\n/bin/universe          = `(/bin/universe) 2>/dev/null`\n/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`\n/bin/arch              = `(/bin/arch) 2>/dev/null`\n/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n\nUNAME_MACHINE = \"$UNAME_MACHINE\"\nUNAME_RELEASE = \"$UNAME_RELEASE\"\nUNAME_SYSTEM  = \"$UNAME_SYSTEM\"\nUNAME_VERSION = \"$UNAME_VERSION\"\nEOF\nfi\n\nexit 1\n\n# Local variables:\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-start: \"timestamp='\"\n# time-stamp-format: \"%:y-%02m-%02d\"\n# time-stamp-end: \"'\"\n# End:\n"
        },
        {
          "name": "config.sub",
          "type": "blob",
          "size": 36.05859375,
          "content": "#! /bin/sh\n# Configuration validation subroutine script.\n#   Copyright 1992-2024 Free Software Foundation, Inc.\n\n# shellcheck disable=SC2006,SC2268 # see below for rationale\n\ntimestamp='2024-01-01'\n\n# This file is free software; you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see <https://www.gnu.org/licenses/>.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n\n\n# Please send patches to <config-patches@gnu.org>.\n#\n# Configuration subroutine to validate and canonicalize a configuration type.\n# Supply the specified configuration type as an argument.\n# If it is invalid, we print an error message on stderr and exit with code 1.\n# Otherwise, we print the canonical config type on stdout and succeed.\n\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\n\n# This file is supposed to be the same for all GNU packages\n# and recognize all the CPU types, system types and aliases\n# that are meaningful with *any* GNU software.\n# Each package is responsible for reporting which valid configurations\n# it does not support.  The user should be able to distinguish\n# a failure to support a valid configuration from a meaningless\n# configuration.\n\n# The goal of this file is to map all the various variations of a given\n# machine specification into a single specification in the form:\n#\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n# or in some cases, the newer four-part form:\n#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n# It is wrong to echo any other type of specification.\n\n# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n\nCanonicalize a configuration name.\n\nOptions:\n  -h, --help         print this help, then exit\n  -t, --time-stamp   print date of last modification, then exit\n  -v, --version      print version number, then exit\n\nReport bugs and patches to <config-patches@gnu.org>.\"\n\nversion=\"\\\nGNU config.sub ($timestamp)\n\nCopyright 1992-2024 Free Software Foundation, Inc.\n\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n\nhelp=\"\nTry '$me --help' for more information.\"\n\n# Parse command line\nwhile test $# -gt 0 ; do\n  case $1 in\n    --time-stamp | --time* | -t )\n       echo \"$timestamp\" ; exit ;;\n    --version | -v )\n       echo \"$version\" ; exit ;;\n    --help | --h* | -h )\n       echo \"$usage\"; exit ;;\n    -- )     # Stop option processing\n       shift; break ;;\n    - )\t# Use stdin as input.\n       break ;;\n    -* )\n       echo \"$me: invalid option $1$help\" >&2\n       exit 1 ;;\n\n    *local*)\n       # First pass through any local machine types.\n       echo \"$1\"\n       exit ;;\n\n    * )\n       break ;;\n  esac\ndone\n\ncase $# in\n 0) echo \"$me: missing argument$help\" >&2\n    exit 1;;\n 1) ;;\n *) echo \"$me: too many arguments$help\" >&2\n    exit 1;;\nesac\n\n# Split fields of configuration type\n# shellcheck disable=SC2162\nsaved_IFS=$IFS\nIFS=\"-\" read field1 field2 field3 field4 <<EOF\n$1\nEOF\nIFS=$saved_IFS\n\n# Separate into logical components for further validation\ncase $1 in\n\t*-*-*-*-*)\n\t\techo \"Invalid configuration '$1': more than four components\" >&2\n\t\texit 1\n\t\t;;\n\t*-*-*-*)\n\t\tbasic_machine=$field1-$field2\n\t\tbasic_os=$field3-$field4\n\t\t;;\n\t*-*-*)\n\t\t# Ambiguous whether COMPANY is present, or skipped and KERNEL-OS is two\n\t\t# parts\n\t\tmaybe_os=$field2-$field3\n\t\tcase $maybe_os in\n\t\t\tnto-qnx* | linux-* | uclinux-uclibc* \\\n\t\t\t| uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* \\\n\t\t\t| netbsd*-eabi* | kopensolaris*-gnu* | cloudabi*-eabi* \\\n\t\t\t| storm-chaos* | os2-emx* | rtmk-nova* | managarm-* \\\n\t\t\t| windows-* )\n\t\t\t\tbasic_machine=$field1\n\t\t\t\tbasic_os=$maybe_os\n\t\t\t\t;;\n\t\t\tandroid-linux)\n\t\t\t\tbasic_machine=$field1-unknown\n\t\t\t\tbasic_os=linux-android\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tbasic_machine=$field1-$field2\n\t\t\t\tbasic_os=$field3\n\t\t\t\t;;\n\t\tesac\n\t\t;;\n\t*-*)\n\t\t# A lone config we happen to match not fitting any pattern\n\t\tcase $field1-$field2 in\n\t\t\tdecstation-3100)\n\t\t\t\tbasic_machine=mips-dec\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\t*-*)\n\t\t\t\t# Second component is usually, but not always the OS\n\t\t\t\tcase $field2 in\n\t\t\t\t\t# Prevent following clause from handling this valid os\n\t\t\t\t\tsun*os*)\n\t\t\t\t\t\tbasic_machine=$field1\n\t\t\t\t\t\tbasic_os=$field2\n\t\t\t\t\t\t;;\n\t\t\t\t\tzephyr*)\n\t\t\t\t\t\tbasic_machine=$field1-unknown\n\t\t\t\t\t\tbasic_os=$field2\n\t\t\t\t\t\t;;\n\t\t\t\t\t# Manufacturers\n\t\t\t\t\tdec* | mips* | sequent* | encore* | pc533* | sgi* | sony* \\\n\t\t\t\t\t| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \\\n\t\t\t\t\t| unicom* | ibm* | next | hp | isi* | apollo | altos* \\\n\t\t\t\t\t| convergent* | ncr* | news | 32* | 3600* | 3100* \\\n\t\t\t\t\t| hitachi* | c[123]* | convex* | sun | crds | omron* | dg \\\n\t\t\t\t\t| ultra | tti* | harris | dolphin | highlevel | gould \\\n\t\t\t\t\t| cbm | ns | masscomp | apple | axis | knuth | cray \\\n\t\t\t\t\t| microblaze* | sim | cisco \\\n\t\t\t\t\t| oki | wec | wrs | winbond)\n\t\t\t\t\t\tbasic_machine=$field1-$field2\n\t\t\t\t\t\tbasic_os=\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tbasic_machine=$field1\n\t\t\t\t\t\tbasic_os=$field2\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\t;;\n\t\tesac\n\t\t;;\n\t*)\n\t\t# Convert single-component short-hands not valid as part of\n\t\t# multi-component configurations.\n\t\tcase $field1 in\n\t\t\t386bsd)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\ta29khif)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tbasic_os=udi\n\t\t\t\t;;\n\t\t\tadobe68k)\n\t\t\t\tbasic_machine=m68010-adobe\n\t\t\t\tbasic_os=scout\n\t\t\t\t;;\n\t\t\talliant)\n\t\t\t\tbasic_machine=fx80-alliant\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\taltos | altos3068)\n\t\t\t\tbasic_machine=m68k-altos\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tam29k)\n\t\t\t\tbasic_machine=a29k-none\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\tamdahl)\n\t\t\t\tbasic_machine=580-amdahl\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tamiga)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tamigaos | amigados)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tbasic_os=amigaos\n\t\t\t\t;;\n\t\t\tamigaunix | amix)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tbasic_os=sysv4\n\t\t\t\t;;\n\t\t\tapollo68)\n\t\t\t\tbasic_machine=m68k-apollo\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tapollo68bsd)\n\t\t\t\tbasic_machine=m68k-apollo\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\taros)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=aros\n\t\t\t\t;;\n\t\t\taux)\n\t\t\t\tbasic_machine=m68k-apple\n\t\t\t\tbasic_os=aux\n\t\t\t\t;;\n\t\t\tbalance)\n\t\t\t\tbasic_machine=ns32k-sequent\n\t\t\t\tbasic_os=dynix\n\t\t\t\t;;\n\t\t\tblackfin)\n\t\t\t\tbasic_machine=bfin-unknown\n\t\t\t\tbasic_os=linux\n\t\t\t\t;;\n\t\t\tcegcc)\n\t\t\t\tbasic_machine=arm-unknown\n\t\t\t\tbasic_os=cegcc\n\t\t\t\t;;\n\t\t\tconvex-c1)\n\t\t\t\tbasic_machine=c1-convex\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\tconvex-c2)\n\t\t\t\tbasic_machine=c2-convex\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\tconvex-c32)\n\t\t\t\tbasic_machine=c32-convex\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\tconvex-c34)\n\t\t\t\tbasic_machine=c34-convex\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\tconvex-c38)\n\t\t\t\tbasic_machine=c38-convex\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\tcray)\n\t\t\t\tbasic_machine=j90-cray\n\t\t\t\tbasic_os=unicos\n\t\t\t\t;;\n\t\t\tcrds | unos)\n\t\t\t\tbasic_machine=m68k-crds\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tda30)\n\t\t\t\tbasic_machine=m68k-da30\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tdecstation | pmax | pmin | dec3100 | decstatn)\n\t\t\t\tbasic_machine=mips-dec\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tdelta88)\n\t\t\t\tbasic_machine=m88k-motorola\n\t\t\t\tbasic_os=sysv3\n\t\t\t\t;;\n\t\t\tdicos)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tbasic_os=dicos\n\t\t\t\t;;\n\t\t\tdjgpp)\n\t\t\t\tbasic_machine=i586-pc\n\t\t\t\tbasic_os=msdosdjgpp\n\t\t\t\t;;\n\t\t\tebmon29k)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tbasic_os=ebmon\n\t\t\t\t;;\n\t\t\tes1800 | OSE68k | ose68k | ose | OSE)\n\t\t\t\tbasic_machine=m68k-ericsson\n\t\t\t\tbasic_os=ose\n\t\t\t\t;;\n\t\t\tgmicro)\n\t\t\t\tbasic_machine=tron-gmicro\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tgo32)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=go32\n\t\t\t\t;;\n\t\t\th8300hms)\n\t\t\t\tbasic_machine=h8300-hitachi\n\t\t\t\tbasic_os=hms\n\t\t\t\t;;\n\t\t\th8300xray)\n\t\t\t\tbasic_machine=h8300-hitachi\n\t\t\t\tbasic_os=xray\n\t\t\t\t;;\n\t\t\th8500hms)\n\t\t\t\tbasic_machine=h8500-hitachi\n\t\t\t\tbasic_os=hms\n\t\t\t\t;;\n\t\t\tharris)\n\t\t\t\tbasic_machine=m88k-harris\n\t\t\t\tbasic_os=sysv3\n\t\t\t\t;;\n\t\t\thp300 | hp300hpux)\n\t\t\t\tbasic_machine=m68k-hp\n\t\t\t\tbasic_os=hpux\n\t\t\t\t;;\n\t\t\thp300bsd)\n\t\t\t\tbasic_machine=m68k-hp\n\t\t\t\tbasic_os=bsd\n\t\t\t\t;;\n\t\t\thppaosf)\n\t\t\t\tbasic_machine=hppa1.1-hp\n\t\t\t\tbasic_os=osf\n\t\t\t\t;;\n\t\t\thppro)\n\t\t\t\tbasic_machine=hppa1.1-hp\n\t\t\t\tbasic_os=proelf\n\t\t\t\t;;\n\t\t\ti386mach)\n\t\t\t\tbasic_machine=i386-mach\n\t\t\t\tbasic_os=mach\n\t\t\t\t;;\n\t\t\tisi68 | isi)\n\t\t\t\tbasic_machine=m68k-isi\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tm68knommu)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tbasic_os=linux\n\t\t\t\t;;\n\t\t\tmagnum | m3230)\n\t\t\t\tbasic_machine=mips-mips\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tmerlin)\n\t\t\t\tbasic_machine=ns32k-utek\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tmingw64)\n\t\t\t\tbasic_machine=x86_64-pc\n\t\t\t\tbasic_os=mingw64\n\t\t\t\t;;\n\t\t\tmingw32)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tbasic_os=mingw32\n\t\t\t\t;;\n\t\t\tmingw32ce)\n\t\t\t\tbasic_machine=arm-unknown\n\t\t\t\tbasic_os=mingw32ce\n\t\t\t\t;;\n\t\t\tmonitor)\n\t\t\t\tbasic_machine=m68k-rom68k\n\t\t\t\tbasic_os=coff\n\t\t\t\t;;\n\t\t\tmorphos)\n\t\t\t\tbasic_machine=powerpc-unknown\n\t\t\t\tbasic_os=morphos\n\t\t\t\t;;\n\t\t\tmoxiebox)\n\t\t\t\tbasic_machine=moxie-unknown\n\t\t\t\tbasic_os=moxiebox\n\t\t\t\t;;\n\t\t\tmsdos)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=msdos\n\t\t\t\t;;\n\t\t\tmsys)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tbasic_os=msys\n\t\t\t\t;;\n\t\t\tmvs)\n\t\t\t\tbasic_machine=i370-ibm\n\t\t\t\tbasic_os=mvs\n\t\t\t\t;;\n\t\t\tnacl)\n\t\t\t\tbasic_machine=le32-unknown\n\t\t\t\tbasic_os=nacl\n\t\t\t\t;;\n\t\t\tncr3000)\n\t\t\t\tbasic_machine=i486-ncr\n\t\t\t\tbasic_os=sysv4\n\t\t\t\t;;\n\t\t\tnetbsd386)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=netbsd\n\t\t\t\t;;\n\t\t\tnetwinder)\n\t\t\t\tbasic_machine=armv4l-rebel\n\t\t\t\tbasic_os=linux\n\t\t\t\t;;\n\t\t\tnews | news700 | news800 | news900)\n\t\t\t\tbasic_machine=m68k-sony\n\t\t\t\tbasic_os=newsos\n\t\t\t\t;;\n\t\t\tnews1000)\n\t\t\t\tbasic_machine=m68030-sony\n\t\t\t\tbasic_os=newsos\n\t\t\t\t;;\n\t\t\tnecv70)\n\t\t\t\tbasic_machine=v70-nec\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tnh3000)\n\t\t\t\tbasic_machine=m68k-harris\n\t\t\t\tbasic_os=cxux\n\t\t\t\t;;\n\t\t\tnh[45]000)\n\t\t\t\tbasic_machine=m88k-harris\n\t\t\t\tbasic_os=cxux\n\t\t\t\t;;\n\t\t\tnindy960)\n\t\t\t\tbasic_machine=i960-intel\n\t\t\t\tbasic_os=nindy\n\t\t\t\t;;\n\t\t\tmon960)\n\t\t\t\tbasic_machine=i960-intel\n\t\t\t\tbasic_os=mon960\n\t\t\t\t;;\n\t\t\tnonstopux)\n\t\t\t\tbasic_machine=mips-compaq\n\t\t\t\tbasic_os=nonstopux\n\t\t\t\t;;\n\t\t\tos400)\n\t\t\t\tbasic_machine=powerpc-ibm\n\t\t\t\tbasic_os=os400\n\t\t\t\t;;\n\t\t\tOSE68000 | ose68000)\n\t\t\t\tbasic_machine=m68000-ericsson\n\t\t\t\tbasic_os=ose\n\t\t\t\t;;\n\t\t\tos68k)\n\t\t\t\tbasic_machine=m68k-none\n\t\t\t\tbasic_os=os68k\n\t\t\t\t;;\n\t\t\tparagon)\n\t\t\t\tbasic_machine=i860-intel\n\t\t\t\tbasic_os=osf\n\t\t\t\t;;\n\t\t\tparisc)\n\t\t\t\tbasic_machine=hppa-unknown\n\t\t\t\tbasic_os=linux\n\t\t\t\t;;\n\t\t\tpsp)\n\t\t\t\tbasic_machine=mipsallegrexel-sony\n\t\t\t\tbasic_os=psp\n\t\t\t\t;;\n\t\t\tpw32)\n\t\t\t\tbasic_machine=i586-unknown\n\t\t\t\tbasic_os=pw32\n\t\t\t\t;;\n\t\t\trdos | rdos64)\n\t\t\t\tbasic_machine=x86_64-pc\n\t\t\t\tbasic_os=rdos\n\t\t\t\t;;\n\t\t\trdos32)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=rdos\n\t\t\t\t;;\n\t\t\trom68k)\n\t\t\t\tbasic_machine=m68k-rom68k\n\t\t\t\tbasic_os=coff\n\t\t\t\t;;\n\t\t\tsa29200)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tbasic_os=udi\n\t\t\t\t;;\n\t\t\tsei)\n\t\t\t\tbasic_machine=mips-sei\n\t\t\t\tbasic_os=seiux\n\t\t\t\t;;\n\t\t\tsequent)\n\t\t\t\tbasic_machine=i386-sequent\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tsps7)\n\t\t\t\tbasic_machine=m68k-bull\n\t\t\t\tbasic_os=sysv2\n\t\t\t\t;;\n\t\t\tst2000)\n\t\t\t\tbasic_machine=m68k-tandem\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tstratus)\n\t\t\t\tbasic_machine=i860-stratus\n\t\t\t\tbasic_os=sysv4\n\t\t\t\t;;\n\t\t\tsun2)\n\t\t\t\tbasic_machine=m68000-sun\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tsun2os3)\n\t\t\t\tbasic_machine=m68000-sun\n\t\t\t\tbasic_os=sunos3\n\t\t\t\t;;\n\t\t\tsun2os4)\n\t\t\t\tbasic_machine=m68000-sun\n\t\t\t\tbasic_os=sunos4\n\t\t\t\t;;\n\t\t\tsun3)\n\t\t\t\tbasic_machine=m68k-sun\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tsun3os3)\n\t\t\t\tbasic_machine=m68k-sun\n\t\t\t\tbasic_os=sunos3\n\t\t\t\t;;\n\t\t\tsun3os4)\n\t\t\t\tbasic_machine=m68k-sun\n\t\t\t\tbasic_os=sunos4\n\t\t\t\t;;\n\t\t\tsun4)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tsun4os3)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tbasic_os=sunos3\n\t\t\t\t;;\n\t\t\tsun4os4)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tbasic_os=sunos4\n\t\t\t\t;;\n\t\t\tsun4sol2)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tbasic_os=solaris2\n\t\t\t\t;;\n\t\t\tsun386 | sun386i | roadrunner)\n\t\t\t\tbasic_machine=i386-sun\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\t\tsv1)\n\t\t\t\tbasic_machine=sv1-cray\n\t\t\t\tbasic_os=unicos\n\t\t\t\t;;\n\t\t\tsymmetry)\n\t\t\t\tbasic_machine=i386-sequent\n\t\t\t\tbasic_os=dynix\n\t\t\t\t;;\n\t\t\tt3e)\n\t\t\t\tbasic_machine=alphaev5-cray\n\t\t\t\tbasic_os=unicos\n\t\t\t\t;;\n\t\t\tt90)\n\t\t\t\tbasic_machine=t90-cray\n\t\t\t\tbasic_os=unicos\n\t\t\t\t;;\n\t\t\ttoad1)\n\t\t\t\tbasic_machine=pdp10-xkl\n\t\t\t\tbasic_os=tops20\n\t\t\t\t;;\n\t\t\ttpf)\n\t\t\t\tbasic_machine=s390x-ibm\n\t\t\t\tbasic_os=tpf\n\t\t\t\t;;\n\t\t\tudi29k)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tbasic_os=udi\n\t\t\t\t;;\n\t\t\tultra3)\n\t\t\t\tbasic_machine=a29k-nyu\n\t\t\t\tbasic_os=sym1\n\t\t\t\t;;\n\t\t\tv810 | necv810)\n\t\t\t\tbasic_machine=v810-nec\n\t\t\t\tbasic_os=none\n\t\t\t\t;;\n\t\t\tvaxv)\n\t\t\t\tbasic_machine=vax-dec\n\t\t\t\tbasic_os=sysv\n\t\t\t\t;;\n\t\t\tvms)\n\t\t\t\tbasic_machine=vax-dec\n\t\t\t\tbasic_os=vms\n\t\t\t\t;;\n\t\t\tvsta)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tbasic_os=vsta\n\t\t\t\t;;\n\t\t\tvxworks960)\n\t\t\t\tbasic_machine=i960-wrs\n\t\t\t\tbasic_os=vxworks\n\t\t\t\t;;\n\t\t\tvxworks68)\n\t\t\t\tbasic_machine=m68k-wrs\n\t\t\t\tbasic_os=vxworks\n\t\t\t\t;;\n\t\t\tvxworks29k)\n\t\t\t\tbasic_machine=a29k-wrs\n\t\t\t\tbasic_os=vxworks\n\t\t\t\t;;\n\t\t\txbox)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tbasic_os=mingw32\n\t\t\t\t;;\n\t\t\tymp)\n\t\t\t\tbasic_machine=ymp-cray\n\t\t\t\tbasic_os=unicos\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tbasic_machine=$1\n\t\t\t\tbasic_os=\n\t\t\t\t;;\n\t\tesac\n\t\t;;\nesac\n\n# Decode 1-component or ad-hoc basic machines\ncase $basic_machine in\n\t# Here we handle the default manufacturer of certain CPU types.  It is in\n\t# some cases the only manufacturer, in others, it is the most popular.\n\tw89k)\n\t\tcpu=hppa1.1\n\t\tvendor=winbond\n\t\t;;\n\top50n)\n\t\tcpu=hppa1.1\n\t\tvendor=oki\n\t\t;;\n\top60c)\n\t\tcpu=hppa1.1\n\t\tvendor=oki\n\t\t;;\n\tibm*)\n\t\tcpu=i370\n\t\tvendor=ibm\n\t\t;;\n\torion105)\n\t\tcpu=clipper\n\t\tvendor=highlevel\n\t\t;;\n\tmac | mpw | mac-mpw)\n\t\tcpu=m68k\n\t\tvendor=apple\n\t\t;;\n\tpmac | pmac-mpw)\n\t\tcpu=powerpc\n\t\tvendor=apple\n\t\t;;\n\n\t# Recognize the various machine names and aliases which stand\n\t# for a CPU type and a company and sometimes even an OS.\n\t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n\t\tcpu=m68000\n\t\tvendor=att\n\t\t;;\n\t3b*)\n\t\tcpu=we32k\n\t\tvendor=att\n\t\t;;\n\tbluegene*)\n\t\tcpu=powerpc\n\t\tvendor=ibm\n\t\tbasic_os=cnk\n\t\t;;\n\tdecsystem10* | dec10*)\n\t\tcpu=pdp10\n\t\tvendor=dec\n\t\tbasic_os=tops10\n\t\t;;\n\tdecsystem20* | dec20*)\n\t\tcpu=pdp10\n\t\tvendor=dec\n\t\tbasic_os=tops20\n\t\t;;\n\tdelta | 3300 | motorola-3300 | motorola-delta \\\n\t      | 3300-motorola | delta-motorola)\n\t\tcpu=m68k\n\t\tvendor=motorola\n\t\t;;\n\tdpx2*)\n\t\tcpu=m68k\n\t\tvendor=bull\n\t\tbasic_os=sysv3\n\t\t;;\n\tencore | umax | mmax)\n\t\tcpu=ns32k\n\t\tvendor=encore\n\t\t;;\n\telxsi)\n\t\tcpu=elxsi\n\t\tvendor=elxsi\n\t\tbasic_os=${basic_os:-bsd}\n\t\t;;\n\tfx2800)\n\t\tcpu=i860\n\t\tvendor=alliant\n\t\t;;\n\tgenix)\n\t\tcpu=ns32k\n\t\tvendor=ns\n\t\t;;\n\th3050r* | hiux*)\n\t\tcpu=hppa1.1\n\t\tvendor=hitachi\n\t\tbasic_os=hiuxwe2\n\t\t;;\n\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n\t\tcpu=hppa1.0\n\t\tvendor=hp\n\t\t;;\n\thp9k2[0-9][0-9] | hp9k31[0-9])\n\t\tcpu=m68000\n\t\tvendor=hp\n\t\t;;\n\thp9k3[2-9][0-9])\n\t\tcpu=m68k\n\t\tvendor=hp\n\t\t;;\n\thp9k6[0-9][0-9] | hp6[0-9][0-9])\n\t\tcpu=hppa1.0\n\t\tvendor=hp\n\t\t;;\n\thp9k7[0-79][0-9] | hp7[0-79][0-9])\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k78[0-9] | hp78[0-9])\n\t\t# FIXME: really hppa2.0-hp\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n\t\t# FIXME: really hppa2.0-hp\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k8[0-9][13679] | hp8[0-9][13679])\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k8[0-9][0-9] | hp8[0-9][0-9])\n\t\tcpu=hppa1.0\n\t\tvendor=hp\n\t\t;;\n\ti*86v32)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv32\n\t\t;;\n\ti*86v4*)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv4\n\t\t;;\n\ti*86v)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv\n\t\t;;\n\ti*86sol2)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=solaris2\n\t\t;;\n\tj90 | j90-cray)\n\t\tcpu=j90\n\t\tvendor=cray\n\t\tbasic_os=${basic_os:-unicos}\n\t\t;;\n\tiris | iris4d)\n\t\tcpu=mips\n\t\tvendor=sgi\n\t\tcase $basic_os in\n\t\t    irix*)\n\t\t\t;;\n\t\t    *)\n\t\t\tbasic_os=irix4\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tminiframe)\n\t\tcpu=m68000\n\t\tvendor=convergent\n\t\t;;\n\t*mint | mint[0-9]* | *MiNT | *MiNT[0-9]*)\n\t\tcpu=m68k\n\t\tvendor=atari\n\t\tbasic_os=mint\n\t\t;;\n\tnews-3600 | risc-news)\n\t\tcpu=mips\n\t\tvendor=sony\n\t\tbasic_os=newsos\n\t\t;;\n\tnext | m*-next)\n\t\tcpu=m68k\n\t\tvendor=next\n\t\tcase $basic_os in\n\t\t    openstep*)\n\t\t        ;;\n\t\t    nextstep*)\n\t\t\t;;\n\t\t    ns2*)\n\t\t      basic_os=nextstep2\n\t\t\t;;\n\t\t    *)\n\t\t      basic_os=nextstep3\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tnp1)\n\t\tcpu=np1\n\t\tvendor=gould\n\t\t;;\n\top50n-* | op60c-*)\n\t\tcpu=hppa1.1\n\t\tvendor=oki\n\t\tbasic_os=proelf\n\t\t;;\n\tpa-hitachi)\n\t\tcpu=hppa1.1\n\t\tvendor=hitachi\n\t\tbasic_os=hiuxwe2\n\t\t;;\n\tpbd)\n\t\tcpu=sparc\n\t\tvendor=tti\n\t\t;;\n\tpbb)\n\t\tcpu=m68k\n\t\tvendor=tti\n\t\t;;\n\tpc532)\n\t\tcpu=ns32k\n\t\tvendor=pc532\n\t\t;;\n\tpn)\n\t\tcpu=pn\n\t\tvendor=gould\n\t\t;;\n\tpower)\n\t\tcpu=power\n\t\tvendor=ibm\n\t\t;;\n\tps2)\n\t\tcpu=i386\n\t\tvendor=ibm\n\t\t;;\n\trm[46]00)\n\t\tcpu=mips\n\t\tvendor=siemens\n\t\t;;\n\trtpc | rtpc-*)\n\t\tcpu=romp\n\t\tvendor=ibm\n\t\t;;\n\tsde)\n\t\tcpu=mipsisa32\n\t\tvendor=sde\n\t\tbasic_os=${basic_os:-elf}\n\t\t;;\n\tsimso-wrs)\n\t\tcpu=sparclite\n\t\tvendor=wrs\n\t\tbasic_os=vxworks\n\t\t;;\n\ttower | tower-32)\n\t\tcpu=m68k\n\t\tvendor=ncr\n\t\t;;\n\tvpp*|vx|vx-*)\n\t\tcpu=f301\n\t\tvendor=fujitsu\n\t\t;;\n\tw65)\n\t\tcpu=w65\n\t\tvendor=wdc\n\t\t;;\n\tw89k-*)\n\t\tcpu=hppa1.1\n\t\tvendor=winbond\n\t\tbasic_os=proelf\n\t\t;;\n\tnone)\n\t\tcpu=none\n\t\tvendor=none\n\t\t;;\n\tleon|leon[3-9])\n\t\tcpu=sparc\n\t\tvendor=$basic_machine\n\t\t;;\n\tleon-*|leon[3-9]-*)\n\t\tcpu=sparc\n\t\tvendor=`echo \"$basic_machine\" | sed 's/-.*//'`\n\t\t;;\n\n\t*-*)\n\t\t# shellcheck disable=SC2162\n\t\tsaved_IFS=$IFS\n\t\tIFS=\"-\" read cpu vendor <<EOF\n$basic_machine\nEOF\n\t\tIFS=$saved_IFS\n\t\t;;\n\t# We use 'pc' rather than 'unknown'\n\t# because (1) that's what they normally are, and\n\t# (2) the word \"unknown\" tends to confuse beginning users.\n\ti*86 | x86_64)\n\t\tcpu=$basic_machine\n\t\tvendor=pc\n\t\t;;\n\t# These rules are duplicated from below for sake of the special case above;\n\t# i.e. things that normalized to x86 arches should also default to \"pc\"\n\tpc98)\n\t\tcpu=i386\n\t\tvendor=pc\n\t\t;;\n\tx64 | amd64)\n\t\tcpu=x86_64\n\t\tvendor=pc\n\t\t;;\n\t# Recognize the basic CPU types without company name.\n\t*)\n\t\tcpu=$basic_machine\n\t\tvendor=unknown\n\t\t;;\nesac\n\nunset -v basic_machine\n\n# Decode basic machines in the full and proper CPU-Company form.\ncase $cpu-$vendor in\n\t# Here we handle the default manufacturer of certain CPU types in canonical form. It is in\n\t# some cases the only manufacturer, in others, it is the most popular.\n\tcraynv-unknown)\n\t\tvendor=cray\n\t\tbasic_os=${basic_os:-unicosmp}\n\t\t;;\n\tc90-unknown | c90-cray)\n\t\tvendor=cray\n\t\tbasic_os=${Basic_os:-unicos}\n\t\t;;\n\tfx80-unknown)\n\t\tvendor=alliant\n\t\t;;\n\tromp-unknown)\n\t\tvendor=ibm\n\t\t;;\n\tmmix-unknown)\n\t\tvendor=knuth\n\t\t;;\n\tmicroblaze-unknown | microblazeel-unknown)\n\t\tvendor=xilinx\n\t\t;;\n\trs6000-unknown)\n\t\tvendor=ibm\n\t\t;;\n\tvax-unknown)\n\t\tvendor=dec\n\t\t;;\n\tpdp11-unknown)\n\t\tvendor=dec\n\t\t;;\n\twe32k-unknown)\n\t\tvendor=att\n\t\t;;\n\tcydra-unknown)\n\t\tvendor=cydrome\n\t\t;;\n\ti370-ibm*)\n\t\tvendor=ibm\n\t\t;;\n\torion-unknown)\n\t\tvendor=highlevel\n\t\t;;\n\txps-unknown | xps100-unknown)\n\t\tcpu=xps100\n\t\tvendor=honeywell\n\t\t;;\n\n\t# Here we normalize CPU types with a missing or matching vendor\n\tarmh-unknown | armh-alt)\n\t\tcpu=armv7l\n\t\tvendor=alt\n\t\tbasic_os=${basic_os:-linux-gnueabihf}\n\t\t;;\n\tdpx20-unknown | dpx20-bull)\n\t\tcpu=rs6000\n\t\tvendor=bull\n\t\tbasic_os=${basic_os:-bosx}\n\t\t;;\n\n\t# Here we normalize CPU types irrespective of the vendor\n\tamd64-*)\n\t\tcpu=x86_64\n\t\t;;\n\tblackfin-*)\n\t\tcpu=bfin\n\t\tbasic_os=linux\n\t\t;;\n\tc54x-*)\n\t\tcpu=tic54x\n\t\t;;\n\tc55x-*)\n\t\tcpu=tic55x\n\t\t;;\n\tc6x-*)\n\t\tcpu=tic6x\n\t\t;;\n\te500v[12]-*)\n\t\tcpu=powerpc\n\t\tbasic_os=${basic_os}\"spe\"\n\t\t;;\n\tmips3*-*)\n\t\tcpu=mips64\n\t\t;;\n\tms1-*)\n\t\tcpu=mt\n\t\t;;\n\tm68knommu-*)\n\t\tcpu=m68k\n\t\tbasic_os=linux\n\t\t;;\n\tm9s12z-* | m68hcs12z-* | hcs12z-* | s12z-*)\n\t\tcpu=s12z\n\t\t;;\n\topenrisc-*)\n\t\tcpu=or32\n\t\t;;\n\tparisc-*)\n\t\tcpu=hppa\n\t\tbasic_os=linux\n\t\t;;\n\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n\t\tcpu=i586\n\t\t;;\n\tpentiumpro-* | p6-* | 6x86-* | athlon-* | athlon_*-*)\n\t\tcpu=i686\n\t\t;;\n\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n\t\tcpu=i686\n\t\t;;\n\tpentium4-*)\n\t\tcpu=i786\n\t\t;;\n\tpc98-*)\n\t\tcpu=i386\n\t\t;;\n\tppc-* | ppcbe-*)\n\t\tcpu=powerpc\n\t\t;;\n\tppcle-* | powerpclittle-*)\n\t\tcpu=powerpcle\n\t\t;;\n\tppc64-*)\n\t\tcpu=powerpc64\n\t\t;;\n\tppc64le-* | powerpc64little-*)\n\t\tcpu=powerpc64le\n\t\t;;\n\tsb1-*)\n\t\tcpu=mipsisa64sb1\n\t\t;;\n\tsb1el-*)\n\t\tcpu=mipsisa64sb1el\n\t\t;;\n\tsh5e[lb]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/'`\n\t\t;;\n\tspur-*)\n\t\tcpu=spur\n\t\t;;\n\tstrongarm-* | thumb-*)\n\t\tcpu=arm\n\t\t;;\n\ttx39-*)\n\t\tcpu=mipstx39\n\t\t;;\n\ttx39el-*)\n\t\tcpu=mipstx39el\n\t\t;;\n\tx64-*)\n\t\tcpu=x86_64\n\t\t;;\n\txscale-* | xscalee[bl]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^xscale/arm/'`\n\t\t;;\n\tarm64-* | arm64_32-* | aarch64le-*)\n\t\tcpu=aarch64\n\t\t;;\n\n\t# Recognize the canonical CPU Types that limit and/or modify the\n\t# company names they are paired with.\n\tcr16-*)\n\t\tbasic_os=${basic_os:-elf}\n\t\t;;\n\tcrisv32-* | etraxfs*-*)\n\t\tcpu=crisv32\n\t\tvendor=axis\n\t\t;;\n\tcris-* | etrax*-*)\n\t\tcpu=cris\n\t\tvendor=axis\n\t\t;;\n\tcrx-*)\n\t\tbasic_os=${basic_os:-elf}\n\t\t;;\n\tneo-tandem)\n\t\tcpu=neo\n\t\tvendor=tandem\n\t\t;;\n\tnse-tandem)\n\t\tcpu=nse\n\t\tvendor=tandem\n\t\t;;\n\tnsr-tandem)\n\t\tcpu=nsr\n\t\tvendor=tandem\n\t\t;;\n\tnsv-tandem)\n\t\tcpu=nsv\n\t\tvendor=tandem\n\t\t;;\n\tnsx-tandem)\n\t\tcpu=nsx\n\t\tvendor=tandem\n\t\t;;\n\tmipsallegrexel-sony)\n\t\tcpu=mipsallegrexel\n\t\tvendor=sony\n\t\t;;\n\ttile*-*)\n\t\tbasic_os=${basic_os:-linux-gnu}\n\t\t;;\n\n\t*)\n\t\t# Recognize the canonical CPU types that are allowed with any\n\t\t# company name.\n\t\tcase $cpu in\n\t\t\t1750a | 580 \\\n\t\t\t| a29k \\\n\t\t\t| aarch64 | aarch64_be | aarch64c | arm64ec \\\n\t\t\t| abacus \\\n\t\t\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] \\\n\t\t\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] \\\n\t\t\t| alphapca5[67] | alpha64pca5[67] \\\n\t\t\t| am33_2.0 \\\n\t\t\t| amdgcn \\\n\t\t\t| arc | arceb | arc32 | arc64 \\\n\t\t\t| arm | arm[lb]e | arme[lb] | armv* \\\n\t\t\t| avr | avr32 \\\n\t\t\t| asmjs \\\n\t\t\t| ba \\\n\t\t\t| be32 | be64 \\\n\t\t\t| bfin | bpf | bs2000 \\\n\t\t\t| c[123]* | c30 | [cjt]90 | c4x \\\n\t\t\t| c8051 | clipper | craynv | csky | cydra \\\n\t\t\t| d10v | d30v | dlx | dsp16xx \\\n\t\t\t| e2k | elxsi | epiphany \\\n\t\t\t| f30[01] | f700 | fido | fr30 | frv | ft32 | fx80 \\\n\t\t\t| javascript \\\n\t\t\t| h8300 | h8500 \\\n\t\t\t| hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n\t\t\t| hexagon \\\n\t\t\t| i370 | i*86 | i860 | i960 | ia16 | ia64 \\\n\t\t\t| ip2k | iq2000 \\\n\t\t\t| k1om \\\n\t\t\t| kvx \\\n\t\t\t| le32 | le64 \\\n\t\t\t| lm32 \\\n\t\t\t| loongarch32 | loongarch64 \\\n\t\t\t| m32c | m32r | m32rle \\\n\t\t\t| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k \\\n\t\t\t| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x \\\n\t\t\t| m88110 | m88k | maxq | mb | mcore | mep | metag \\\n\t\t\t| microblaze | microblazeel \\\n\t\t\t| mips* \\\n\t\t\t| mmix \\\n\t\t\t| mn10200 | mn10300 \\\n\t\t\t| moxie \\\n\t\t\t| mt \\\n\t\t\t| msp430 \\\n\t\t\t| nanomips* \\\n\t\t\t| nds32 | nds32le | nds32be \\\n\t\t\t| nfp \\\n\t\t\t| nios | nios2 | nios2eb | nios2el \\\n\t\t\t| none | np1 | ns16k | ns32k | nvptx \\\n\t\t\t| open8 \\\n\t\t\t| or1k* \\\n\t\t\t| or32 \\\n\t\t\t| orion \\\n\t\t\t| picochip \\\n\t\t\t| pdp10 | pdp11 | pj | pjl | pn | power \\\n\t\t\t| powerpc | powerpc64 | powerpc64le | powerpcle | powerpcspe \\\n\t\t\t| pru \\\n\t\t\t| pyramid \\\n\t\t\t| riscv | riscv32 | riscv32be | riscv64 | riscv64be \\\n\t\t\t| rl78 | romp | rs6000 | rx \\\n\t\t\t| s390 | s390x \\\n\t\t\t| score \\\n\t\t\t| sh | shl \\\n\t\t\t| sh[1234] | sh[24]a | sh[24]ae[lb] | sh[23]e | she[lb] | sh[lb]e \\\n\t\t\t| sh[1234]e[lb] |  sh[12345][lb]e | sh[23]ele | sh64 | sh64le \\\n\t\t\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet \\\n\t\t\t| sparclite \\\n\t\t\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v | sv1 | sx* \\\n\t\t\t| spu \\\n\t\t\t| tahoe \\\n\t\t\t| thumbv7* \\\n\t\t\t| tic30 | tic4x | tic54x | tic55x | tic6x | tic80 \\\n\t\t\t| tron \\\n\t\t\t| ubicom32 \\\n\t\t\t| v70 | v850 | v850e | v850e1 | v850es | v850e2 | v850e2v3 \\\n\t\t\t| vax \\\n\t\t\t| vc4 \\\n\t\t\t| visium \\\n\t\t\t| w65 \\\n\t\t\t| wasm32 | wasm64 \\\n\t\t\t| we32k \\\n\t\t\t| x86 | x86_64 | xc16x | xgate | xps100 \\\n\t\t\t| xstormy16 | xtensa* \\\n\t\t\t| ymp \\\n\t\t\t| z8k | z80)\n\t\t\t\t;;\n\n\t\t\t*)\n\t\t\t\techo \"Invalid configuration '$1': machine '$cpu-$vendor' not recognized\" 1>&2\n\t\t\t\texit 1\n\t\t\t\t;;\n\t\tesac\n\t\t;;\nesac\n\n# Here we canonicalize certain aliases for manufacturers.\ncase $vendor in\n\tdigital*)\n\t\tvendor=dec\n\t\t;;\n\tcommodore*)\n\t\tvendor=cbm\n\t\t;;\n\t*)\n\t\t;;\nesac\n\n# Decode manufacturer-specific aliases for certain operating systems.\n\nif test x\"$basic_os\" != x\nthen\n\n# First recognize some ad-hoc cases, or perhaps split kernel-os, or else just\n# set os.\nobj=\ncase $basic_os in\n\tgnu/linux*)\n\t\tkernel=linux\n\t\tos=`echo \"$basic_os\" | sed -e 's|gnu/linux|gnu|'`\n\t\t;;\n\tos2-emx)\n\t\tkernel=os2\n\t\tos=`echo \"$basic_os\" | sed -e 's|os2-emx|emx|'`\n\t\t;;\n\tnto-qnx*)\n\t\tkernel=nto\n\t\tos=`echo \"$basic_os\" | sed -e 's|nto-qnx|qnx|'`\n\t\t;;\n\t*-*)\n\t\t# shellcheck disable=SC2162\n\t\tsaved_IFS=$IFS\n\t\tIFS=\"-\" read kernel os <<EOF\n$basic_os\nEOF\n\t\tIFS=$saved_IFS\n\t\t;;\n\t# Default OS when just kernel was specified\n\tnto*)\n\t\tkernel=nto\n\t\tos=`echo \"$basic_os\" | sed -e 's|nto|qnx|'`\n\t\t;;\n\tlinux*)\n\t\tkernel=linux\n\t\tos=`echo \"$basic_os\" | sed -e 's|linux|gnu|'`\n\t\t;;\n\tmanagarm*)\n\t\tkernel=managarm\n\t\tos=`echo \"$basic_os\" | sed -e 's|managarm|mlibc|'`\n\t\t;;\n\t*)\n\t\tkernel=\n\t\tos=$basic_os\n\t\t;;\nesac\n\n# Now, normalize the OS (knowing we just have one component, it's not a kernel,\n# etc.)\ncase $os in\n\t# First match some system type aliases that might get confused\n\t# with valid system types.\n\t# solaris* is a basic system type, with this one exception.\n\tauroraux)\n\t\tos=auroraux\n\t\t;;\n\tbluegene*)\n\t\tos=cnk\n\t\t;;\n\tsolaris1 | solaris1.*)\n\t\tos=`echo \"$os\" | sed -e 's|solaris1|sunos4|'`\n\t\t;;\n\tsolaris)\n\t\tos=solaris2\n\t\t;;\n\tunixware*)\n\t\tos=sysv4.2uw\n\t\t;;\n\t# es1800 is here to avoid being matched by es* (a different OS)\n\tes1800*)\n\t\tos=ose\n\t\t;;\n\t# Some version numbers need modification\n\tchorusos*)\n\t\tos=chorusos\n\t\t;;\n\tisc)\n\t\tos=isc2.2\n\t\t;;\n\tsco6)\n\t\tos=sco5v6\n\t\t;;\n\tsco5)\n\t\tos=sco3.2v5\n\t\t;;\n\tsco4)\n\t\tos=sco3.2v4\n\t\t;;\n\tsco3.2.[4-9]*)\n\t\tos=`echo \"$os\" | sed -e 's/sco3.2./sco3.2v/'`\n\t\t;;\n\tsco*v* | scout)\n\t\t# Don't match below\n\t\t;;\n\tsco*)\n\t\tos=sco3.2v2\n\t\t;;\n\tpsos*)\n\t\tos=psos\n\t\t;;\n\tqnx*)\n\t\tos=qnx\n\t\t;;\n\thiux*)\n\t\tos=hiuxwe2\n\t\t;;\n\tlynx*178)\n\t\tos=lynxos178\n\t\t;;\n\tlynx*5)\n\t\tos=lynxos5\n\t\t;;\n\tlynxos*)\n\t\t# don't get caught up in next wildcard\n\t\t;;\n\tlynx*)\n\t\tos=lynxos\n\t\t;;\n\tmac[0-9]*)\n\t\tos=`echo \"$os\" | sed -e 's|mac|macos|'`\n\t\t;;\n\topened*)\n\t\tos=openedition\n\t\t;;\n\tos400*)\n\t\tos=os400\n\t\t;;\n\tsunos5*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n\t\t;;\n\tsunos6*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n\t\t;;\n\twince*)\n\t\tos=wince\n\t\t;;\n\tutek*)\n\t\tos=bsd\n\t\t;;\n\tdynix*)\n\t\tos=bsd\n\t\t;;\n\tacis*)\n\t\tos=aos\n\t\t;;\n\tatheos*)\n\t\tos=atheos\n\t\t;;\n\tsyllable*)\n\t\tos=syllable\n\t\t;;\n\t386bsd)\n\t\tos=bsd\n\t\t;;\n\tctix* | uts*)\n\t\tos=sysv\n\t\t;;\n\tnova*)\n\t\tos=rtmk-nova\n\t\t;;\n\tns2)\n\t\tos=nextstep2\n\t\t;;\n\t# Preserve the version number of sinix5.\n\tsinix5.*)\n\t\tos=`echo \"$os\" | sed -e 's|sinix|sysv|'`\n\t\t;;\n\tsinix*)\n\t\tos=sysv4\n\t\t;;\n\ttpf*)\n\t\tos=tpf\n\t\t;;\n\ttriton*)\n\t\tos=sysv3\n\t\t;;\n\toss*)\n\t\tos=sysv3\n\t\t;;\n\tsvr4*)\n\t\tos=sysv4\n\t\t;;\n\tsvr3)\n\t\tos=sysv3\n\t\t;;\n\tsysvr4)\n\t\tos=sysv4\n\t\t;;\n\tose*)\n\t\tos=ose\n\t\t;;\n\t*mint | mint[0-9]* | *MiNT | MiNT[0-9]*)\n\t\tos=mint\n\t\t;;\n\tdicos*)\n\t\tos=dicos\n\t\t;;\n\tpikeos*)\n\t\t# Until real need of OS specific support for\n\t\t# particular features comes up, bare metal\n\t\t# configurations are quite functional.\n\t\tcase $cpu in\n\t\t    arm*)\n\t\t\tos=eabi\n\t\t\t;;\n\t\t    *)\n\t\t\tos=\n\t\t\tobj=elf\n\t\t\t;;\n\t\tesac\n\t\t;;\n\taout* | coff* | elf* | pe*)\n\t\t# These are machine code file formats, not OSes\n\t\tobj=$os\n\t\tos=\n\t\t;;\n\t*)\n\t\t# No normalization, but not necessarily accepted, that comes below.\n\t\t;;\nesac\n\nelse\n\n# Here we handle the default operating systems that come with various machines.\n# The value should be what the vendor currently ships out the door with their\n# machine or put another way, the most popular os provided with the machine.\n\n# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n# \"-sun\"), then you have to tell the case statement up towards the top\n# that MANUFACTURER isn't an operating system.  Otherwise, code above\n# will signal an error saying that MANUFACTURER isn't an operating\n# system, and we'll never get to this point.\n\nkernel=\nobj=\ncase $cpu-$vendor in\n\tscore-*)\n\t\tos=\n\t\tobj=elf\n\t\t;;\n\tspu-*)\n\t\tos=\n\t\tobj=elf\n\t\t;;\n\t*-acorn)\n\t\tos=riscix1.2\n\t\t;;\n\tarm*-rebel)\n\t\tkernel=linux\n\t\tos=gnu\n\t\t;;\n\tarm*-semi)\n\t\tos=\n\t\tobj=aout\n\t\t;;\n\tc4x-* | tic4x-*)\n\t\tos=\n\t\tobj=coff\n\t\t;;\n\tc8051-*)\n\t\tos=\n\t\tobj=elf\n\t\t;;\n\tclipper-intergraph)\n\t\tos=clix\n\t\t;;\n\thexagon-*)\n\t\tos=\n\t\tobj=elf\n\t\t;;\n\ttic54x-*)\n\t\tos=\n\t\tobj=coff\n\t\t;;\n\ttic55x-*)\n\t\tos=\n\t\tobj=coff\n\t\t;;\n\ttic6x-*)\n\t\tos=\n\t\tobj=coff\n\t\t;;\n\t# This must come before the *-dec entry.\n\tpdp10-*)\n\t\tos=tops20\n\t\t;;\n\tpdp11-*)\n\t\tos=none\n\t\t;;\n\t*-dec | vax-*)\n\t\tos=ultrix4.2\n\t\t;;\n\tm68*-apollo)\n\t\tos=domain\n\t\t;;\n\ti386-sun)\n\t\tos=sunos4.0.2\n\t\t;;\n\tm68000-sun)\n\t\tos=sunos3\n\t\t;;\n\tm68*-cisco)\n\t\tos=\n\t\tobj=aout\n\t\t;;\n\tmep-*)\n\t\tos=\n\t\tobj=elf\n\t\t;;\n\tmips*-cisco)\n\t\tos=\n\t\tobj=elf\n\t\t;;\n\tmips*-*|nanomips*-*)\n\t\tos=\n\t\tobj=elf\n\t\t;;\n\tor32-*)\n\t\tos=\n\t\tobj=coff\n\t\t;;\n\t*-tti)\t# must be before sparc entry or we get the wrong os.\n\t\tos=sysv3\n\t\t;;\n\tsparc-* | *-sun)\n\t\tos=sunos4.1.1\n\t\t;;\n\tpru-*)\n\t\tos=\n\t\tobj=elf\n\t\t;;\n\t*-be)\n\t\tos=beos\n\t\t;;\n\t*-ibm)\n\t\tos=aix\n\t\t;;\n\t*-knuth)\n\t\tos=mmixware\n\t\t;;\n\t*-wec)\n\t\tos=proelf\n\t\t;;\n\t*-winbond)\n\t\tos=proelf\n\t\t;;\n\t*-oki)\n\t\tos=proelf\n\t\t;;\n\t*-hp)\n\t\tos=hpux\n\t\t;;\n\t*-hitachi)\n\t\tos=hiux\n\t\t;;\n\ti860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)\n\t\tos=sysv\n\t\t;;\n\t*-cbm)\n\t\tos=amigaos\n\t\t;;\n\t*-dg)\n\t\tos=dgux\n\t\t;;\n\t*-dolphin)\n\t\tos=sysv3\n\t\t;;\n\tm68k-ccur)\n\t\tos=rtu\n\t\t;;\n\tm88k-omron*)\n\t\tos=luna\n\t\t;;\n\t*-next)\n\t\tos=nextstep\n\t\t;;\n\t*-sequent)\n\t\tos=ptx\n\t\t;;\n\t*-crds)\n\t\tos=unos\n\t\t;;\n\t*-ns)\n\t\tos=genix\n\t\t;;\n\ti370-*)\n\t\tos=mvs\n\t\t;;\n\t*-gould)\n\t\tos=sysv\n\t\t;;\n\t*-highlevel)\n\t\tos=bsd\n\t\t;;\n\t*-encore)\n\t\tos=bsd\n\t\t;;\n\t*-sgi)\n\t\tos=irix\n\t\t;;\n\t*-siemens)\n\t\tos=sysv4\n\t\t;;\n\t*-masscomp)\n\t\tos=rtu\n\t\t;;\n\tf30[01]-fujitsu | f700-fujitsu)\n\t\tos=uxpv\n\t\t;;\n\t*-rom68k)\n\t\tos=\n\t\tobj=coff\n\t\t;;\n\t*-*bug)\n\t\tos=\n\t\tobj=coff\n\t\t;;\n\t*-apple)\n\t\tos=macos\n\t\t;;\n\t*-atari*)\n\t\tos=mint\n\t\t;;\n\t*-wrs)\n\t\tos=vxworks\n\t\t;;\n\t*)\n\t\tos=none\n\t\t;;\nesac\n\nfi\n\n# Now, validate our (potentially fixed-up) individual pieces (OS, OBJ).\n\ncase $os in\n\t# Sometimes we do \"kernel-libc\", so those need to count as OSes.\n\tllvm* | musl* | newlib* | relibc* | uclibc*)\n\t\t;;\n\t# Likewise for \"kernel-abi\"\n\teabi* | gnueabi*)\n\t\t;;\n\t# VxWorks passes extra cpu info in the 4th filed.\n\tsimlinux | simwindows | spe)\n\t\t;;\n\t# See `case $cpu-$os` validation below\n\tghcjs)\n\t\t;;\n\t# Now accept the basic system types.\n\t# The portable systems comes first.\n\t# Each alternative MUST end in a * to match a version number.\n\tgnu* | android* | bsd* | mach* | minix* | genix* | ultrix* | irix* \\\n\t     | *vms* | esix* | aix* | cnk* | sunos | sunos[34]* \\\n\t     | hpux* | unos* | osf* | luna* | dgux* | auroraux* | solaris* \\\n\t     | sym* |  plan9* | psp* | sim* | xray* | os68k* | v88r* \\\n\t     | hiux* | abug | nacl* | netware* | windows* \\\n\t     | os9* | macos* | osx* | ios* | tvos* | watchos* \\\n\t     | mpw* | magic* | mmixware* | mon960* | lnews* \\\n\t     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \\\n\t     | aos* | aros* | cloudabi* | sortix* | twizzler* \\\n\t     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \\\n\t     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \\\n\t     | mirbsd* | netbsd* | dicos* | openedition* | ose* \\\n\t     | bitrig* | openbsd* | secbsd* | solidbsd* | libertybsd* | os108* \\\n\t     | ekkobsd* | freebsd* | riscix* | lynxos* | os400* \\\n\t     | bosx* | nextstep* | cxux* | oabi* \\\n\t     | ptx* | ecoff* | winnt* | domain* | vsta* \\\n\t     | udi* | lites* | ieee* | go32* | aux* | hcos* \\\n\t     | chorusrdb* | cegcc* | glidix* | serenity* \\\n\t     | cygwin* | msys* | moss* | proelf* | rtems* \\\n\t     | midipix* | mingw32* | mingw64* | mint* \\\n\t     | uxpv* | beos* | mpeix* | udk* | moxiebox* \\\n\t     | interix* | uwin* | mks* | rhapsody* | darwin* \\\n\t     | openstep* | oskit* | conix* | pw32* | nonstopux* \\\n\t     | storm-chaos* | tops10* | tenex* | tops20* | its* \\\n\t     | os2* | vos* | palmos* | uclinux* | nucleus* | morphos* \\\n\t     | scout* | superux* | sysv* | rtmk* | tpf* | windiss* \\\n\t     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \\\n\t     | skyos* | haiku* | rdos* | toppers* | drops* | es* \\\n\t     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \\\n\t     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \\\n\t     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx* | zephyr* \\\n\t     | fiwix* | mlibc* | cos* | mbr* | ironclad* )\n\t\t;;\n\t# This one is extra strict with allowed versions\n\tsco3.2v2 | sco3.2v[4-9]* | sco5v6*)\n\t\t# Don't forget version if it is 3.2v4 or newer.\n\t\t;;\n\t# This refers to builds using the UEFI calling convention\n\t# (which depends on the architecture) and PE file format.\n\t# Note that this is both a different calling convention and\n\t# different file format than that of GNU-EFI\n\t# (x86_64-w64-mingw32).\n\tuefi)\n\t\t;;\n\tnone)\n\t\t;;\n\tkernel* | msvc* )\n\t\t# Restricted further below\n\t\t;;\n\t'')\n\t\tif test x\"$obj\" = x\n\t\tthen\n\t\t\techo \"Invalid configuration '$1': Blank OS only allowed with explicit machine code file format\" 1>&2\n\t\tfi\n\t\t;;\n\t*)\n\t\techo \"Invalid configuration '$1': OS '$os' not recognized\" 1>&2\n\t\texit 1\n\t\t;;\nesac\n\ncase $obj in\n\taout* | coff* | elf* | pe*)\n\t\t;;\n\t'')\n\t\t# empty is fine\n\t\t;;\n\t*)\n\t\techo \"Invalid configuration '$1': Machine code format '$obj' not recognized\" 1>&2\n\t\texit 1\n\t\t;;\nesac\n\n# Here we handle the constraint that a (synthetic) cpu and os are\n# valid only in combination with each other and nowhere else.\ncase $cpu-$os in\n\t# The \"javascript-unknown-ghcjs\" triple is used by GHC; we\n\t# accept it here in order to tolerate that, but reject any\n\t# variations.\n\tjavascript-ghcjs)\n\t\t;;\n\tjavascript-* | *-ghcjs)\n\t\techo \"Invalid configuration '$1': cpu '$cpu' is not valid with os '$os$obj'\" 1>&2\n\t\texit 1\n\t\t;;\nesac\n\n# As a final step for OS-related things, validate the OS-kernel combination\n# (given a valid OS), if there is a kernel.\ncase $kernel-$os-$obj in\n\tlinux-gnu*- | linux-android*- | linux-dietlibc*- | linux-llvm*- \\\n\t\t    | linux-mlibc*- | linux-musl*- | linux-newlib*- \\\n\t\t    | linux-relibc*- | linux-uclibc*- )\n\t\t;;\n\tuclinux-uclibc*- )\n\t\t;;\n\tmanagarm-mlibc*- | managarm-kernel*- )\n\t\t;;\n\twindows*-msvc*-)\n\t\t;;\n\t-dietlibc*- | -llvm*- | -mlibc*- | -musl*- | -newlib*- | -relibc*- \\\n\t\t    | -uclibc*- )\n\t\t# These are just libc implementations, not actual OSes, and thus\n\t\t# require a kernel.\n\t\techo \"Invalid configuration '$1': libc '$os' needs explicit kernel.\" 1>&2\n\t\texit 1\n\t\t;;\n\t-kernel*- )\n\t\techo \"Invalid configuration '$1': '$os' needs explicit kernel.\" 1>&2\n\t\texit 1\n\t\t;;\n\t*-kernel*- )\n\t\techo \"Invalid configuration '$1': '$kernel' does not support '$os'.\" 1>&2\n\t\texit 1\n\t\t;;\n\t*-msvc*- )\n\t\techo \"Invalid configuration '$1': '$os' needs 'windows'.\" 1>&2\n\t\texit 1\n\t\t;;\n\tkfreebsd*-gnu*- | kopensolaris*-gnu*-)\n\t\t;;\n\tvxworks-simlinux- | vxworks-simwindows- | vxworks-spe-)\n\t\t;;\n\tnto-qnx*-)\n\t\t;;\n\tos2-emx-)\n\t\t;;\n\tios*-simulator* | tvos*-simulator* | watchos*-simulator*)\n\t\t;;\t\n\t*-eabi*- | *-gnueabi*-)\n\t\t;;\n\tnone--*)\n\t\t# None (no kernel, i.e. freestanding / bare metal),\n\t\t# can be paired with an machine code file format\n\t\t;;\n\t-*-)\n\t\t# Blank kernel with real OS is always fine.\n\t\t;;\n\t--*)\n\t\t# Blank kernel and OS with real machine code file format is always fine.\n\t\t;;\n\t*-*-*)\n\t\techo \"Invalid configuration '$1': Kernel '$kernel' not known to work with OS '$os'.\" 1>&2\n\t\texit 1\n\t\t;;\nesac\n\n# Here we handle the case where we know the os, and the CPU type, but not the\n# manufacturer.  We pick the logical manufacturer.\ncase $vendor in\n\tunknown)\n\t\tcase $cpu-$os in\n\t\t\t*-riscix*)\n\t\t\t\tvendor=acorn\n\t\t\t\t;;\n\t\t\t*-sunos*)\n\t\t\t\tvendor=sun\n\t\t\t\t;;\n\t\t\t*-cnk* | *-aix*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t*-beos*)\n\t\t\t\tvendor=be\n\t\t\t\t;;\n\t\t\t*-hpux*)\n\t\t\t\tvendor=hp\n\t\t\t\t;;\n\t\t\t*-mpeix*)\n\t\t\t\tvendor=hp\n\t\t\t\t;;\n\t\t\t*-hiux*)\n\t\t\t\tvendor=hitachi\n\t\t\t\t;;\n\t\t\t*-unos*)\n\t\t\t\tvendor=crds\n\t\t\t\t;;\n\t\t\t*-dgux*)\n\t\t\t\tvendor=dg\n\t\t\t\t;;\n\t\t\t*-luna*)\n\t\t\t\tvendor=omron\n\t\t\t\t;;\n\t\t\t*-genix*)\n\t\t\t\tvendor=ns\n\t\t\t\t;;\n\t\t\t*-clix*)\n\t\t\t\tvendor=intergraph\n\t\t\t\t;;\n\t\t\t*-mvs* | *-opened*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t*-os400*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\ts390-* | s390x-*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t*-ptx*)\n\t\t\t\tvendor=sequent\n\t\t\t\t;;\n\t\t\t*-tpf*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t*-vxsim* | *-vxworks* | *-windiss*)\n\t\t\t\tvendor=wrs\n\t\t\t\t;;\n\t\t\t*-aux*)\n\t\t\t\tvendor=apple\n\t\t\t\t;;\n\t\t\t*-hms*)\n\t\t\t\tvendor=hitachi\n\t\t\t\t;;\n\t\t\t*-mpw* | *-macos*)\n\t\t\t\tvendor=apple\n\t\t\t\t;;\n\t\t\t*-*mint | *-mint[0-9]* | *-*MiNT | *-MiNT[0-9]*)\n\t\t\t\tvendor=atari\n\t\t\t\t;;\n\t\t\t*-vos*)\n\t\t\t\tvendor=stratus\n\t\t\t\t;;\n\t\tesac\n\t\t;;\nesac\n\necho \"$cpu-$vendor${kernel:+-$kernel}${os:+-$os}${obj:+-$obj}\"\nexit\n\n# Local variables:\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-start: \"timestamp='\"\n# time-stamp-format: \"%:y-%02m-%02d\"\n# time-stamp-end: \"'\"\n# End:\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 13.9384765625,
          "content": "dnl Process this with autoconf to create configure\n\nAC_PREREQ([2.71])\n\nAC_INIT([libffi],[3.4.6],[http://github.com/libffi/libffi/issues])\nAC_CONFIG_HEADERS([fficonfig.h])\n\nAC_CANONICAL_TARGET\ntarget_alias=${target_alias-$host_alias}\n\ncase \"${host}\" in\n  frv*-elf)\n    LDFLAGS=`echo $LDFLAGS | sed \"s/\\-B[^ ]*libgloss\\/frv\\///\"`\\ -B`pwd`/../libgloss/frv/\n    ;;\nesac\n\nAX_ENABLE_BUILDDIR\n\nAM_INIT_AUTOMAKE\n\n# The same as in boehm-gc and libstdc++. Have to borrow it from there.\n# We must force CC to /not/ be precious variables; otherwise\n# the wrong, non-multilib-adjusted value will be used in multilibs.\n# As a side effect, we have to subst CFLAGS ourselves.\n# Also save and restore CFLAGS, since AC_PROG_CC will come up with\n# defaults of its own if none are provided.\n\nm4_rename([_AC_ARG_VAR_PRECIOUS],[real_PRECIOUS])\nm4_define([_AC_ARG_VAR_PRECIOUS],[])\nsave_CFLAGS=$CFLAGS\nAC_PROG_CC\nAC_PROG_CXX\nCFLAGS=$save_CFLAGS\nm4_undefine([_AC_ARG_VAR_PRECIOUS])\nm4_rename_force([real_PRECIOUS],[_AC_ARG_VAR_PRECIOUS])\n\nAC_SUBST(CFLAGS)\n\nAM_PROG_AS\nAM_PROG_CC_C_O\nAC_PROG_EGREP\nLT_INIT\nAC_CONFIG_MACRO_DIR([m4])\n\nAC_CHECK_TOOLS([READELF], [readelf greadelf])\n\n# Test for 64-bit build.\nAC_CHECK_SIZEOF([size_t])\n\nAX_COMPILER_VENDOR\nAX_CC_MAXOPT\n# The AX_CFLAGS_WARN_ALL macro doesn't currently work for sunpro\n# compiler.\nif test \"$ax_cv_c_compiler_vendor\" != \"sun\"; then\n  AX_CFLAGS_WARN_ALL\nfi\n\nif test \"x$GCC\" = \"xyes\"; then\n  CFLAGS=\"$CFLAGS -fexceptions\"\nfi\n\ncat > local.exp <<EOF\nset CC_FOR_TARGET \"$CC\"\nset CXX_FOR_TARGET \"$CXX\"\nset compiler_vendor \"$ax_cv_c_compiler_vendor\"\nEOF\n\nAM_MAINTAINER_MODE\n\nAC_CHECK_HEADERS(sys/memfd.h)\nAC_CHECK_FUNCS([memfd_create])\n\ndnl The -no-testsuite modules omit the test subdir.\nAM_CONDITIONAL(TESTSUBDIR, test -d $srcdir/testsuite)\n\nTARGETDIR=\"unknown\"\nHAVE_LONG_DOUBLE_VARIANT=0\n\n. ${srcdir}/configure.host\n\nif test -n \"${UNSUPPORTED}\"; then\n  AC_MSG_ERROR([\"libffi has not been ported to $host.\"])\nfi\n\nAC_SUBST(AM_RUNTESTFLAGS)\nAC_SUBST(AM_LTLDFLAGS)\n\nm4_warn([obsolete],\n[The preprocessor macro `STDC_HEADERS' is obsolete.\n  Except in unusual embedded environments, you can safely include all\n  ISO C90 headers unconditionally.])dnl\n# Autoupdate added the next two lines to ensure that your configure\n# script's behavior did not change.  They are probably safe to remove.\nAC_CHECK_INCLUDES_DEFAULT\nAC_PROG_EGREP\n\nAC_CHECK_FUNCS(memcpy)\nAC_CHECK_HEADERS(alloca.h)\n\nAC_CHECK_SIZEOF(double)\nAC_CHECK_SIZEOF(long double)\n\n# Also AC_SUBST this variable for ffi.h.\nif test -z \"$HAVE_LONG_DOUBLE\"; then\n  HAVE_LONG_DOUBLE=0\n  if test $ac_cv_sizeof_long_double != 0; then\n    if test $HAVE_LONG_DOUBLE_VARIANT != 0; then\n      AC_DEFINE(HAVE_LONG_DOUBLE_VARIANT, 1, [Define if you support more than one size of the long double type])\n      HAVE_LONG_DOUBLE=1\n    else\n      if test $ac_cv_sizeof_double != $ac_cv_sizeof_long_double; then\n        HAVE_LONG_DOUBLE=1\n        AC_DEFINE(HAVE_LONG_DOUBLE, 1, [Define if you have the long double type and it is bigger than a double])\n      fi\n    fi\n  fi\nfi\nAC_SUBST(HAVE_LONG_DOUBLE)\nAC_SUBST(HAVE_LONG_DOUBLE_VARIANT)\n\nAC_C_BIGENDIAN\n\nGCC_AS_CFI_PSEUDO_OP\n\ncase \"$TARGET\" in\n  SPARC)\n    AC_CACHE_CHECK([assembler and linker support unaligned pc related relocs],\n\tlibffi_cv_as_sparc_ua_pcrel, [\n\tsave_CFLAGS=\"$CFLAGS\"\n\tsave_LDFLAGS=\"$LDFLAGS\"\n\tCFLAGS=\"$CFLAGS -fpic\"\n\tLDFLAGS=\"$LDFLAGS -shared\"\n\tAC_LINK_IFELSE([AC_LANG_PROGRAM([[asm (\".text; foo: nop; .data; .align 4; .byte 0; .uaword %r_disp32(foo); .text\");]], [[]])],[libffi_cv_as_sparc_ua_pcrel=yes],[libffi_cv_as_sparc_ua_pcrel=no])\n\tCFLAGS=\"$save_CFLAGS\"\n\tLDFLAGS=\"$save_LDFLAGS\"])\n    if test \"x$libffi_cv_as_sparc_ua_pcrel\" = xyes; then\n\tAC_DEFINE(HAVE_AS_SPARC_UA_PCREL, 1,\n\t\t  [Define if your assembler and linker support unaligned PC relative relocs.])\n    fi\n\n    AC_CACHE_CHECK([assembler .register pseudo-op support],\n       libffi_cv_as_register_pseudo_op, [\n       libffi_cv_as_register_pseudo_op=unknown\n       # Check if we have .register\n       AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[asm (\".register %g2, #scratch\");]])],[libffi_cv_as_register_pseudo_op=yes],[libffi_cv_as_register_pseudo_op=no])\n    ])\n    if test \"x$libffi_cv_as_register_pseudo_op\" = xyes; then\n       AC_DEFINE(HAVE_AS_REGISTER_PSEUDO_OP, 1,\n\t       [Define if your assembler supports .register.])\n    fi\n    ;;\n\n  X86*)\n    AC_CACHE_CHECK([assembler supports pc related relocs],\n\tlibffi_cv_as_x86_pcrel, [\n\tlibffi_cv_as_x86_pcrel=no\n\techo '.text; foo: nop; .data; .long foo-.; .text' > conftest.s\n\tif $CC $CFLAGS -c conftest.s > /dev/null 2>&1; then\n\t    libffi_cv_as_x86_pcrel=yes\n\tfi\n\t])\n    if test \"x$libffi_cv_as_x86_pcrel\" = xyes; then\n\tAC_DEFINE(HAVE_AS_X86_PCREL, 1,\n\t\t  [Define if your assembler supports PC relative relocs.])\n    fi\n    ;;\n\n  S390)\n    AC_CACHE_CHECK([compiler uses zarch features],\n\tlibffi_cv_as_s390_zarch, [\n\tlibffi_cv_as_s390_zarch=no\n\techo 'void foo(void) { bar(); bar(); }' > conftest.c\n\tif $CC $CFLAGS -S conftest.c > /dev/null 2>&1; then\n\t    if $GREP -q brasl conftest.s; then\n\t        libffi_cv_as_s390_zarch=yes\n\t    fi\n\tfi\n\t])\n    if test \"x$libffi_cv_as_s390_zarch\" = xyes; then\n\tAC_DEFINE(HAVE_AS_S390_ZARCH, 1,\n\t\t  [Define if the compiler uses zarch features.])\n    fi\n    ;;\nesac\n\nAC_CACHE_CHECK([whether compiler supports pointer authentication],\n   libffi_cv_as_ptrauth, [\n   libffi_cv_as_ptrauth=unknown\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[\n#ifdef __clang__\n# if __has_feature(ptrauth_calls)\n#  define HAVE_ARM64E_PTRAUTH 1\n# endif\n#endif\n\n#ifndef HAVE_ARM64E_PTRAUTH\n# error Pointer authentication not supported\n#endif\n\t\t   ]])],[libffi_cv_as_ptrauth=yes],[libffi_cv_as_ptrauth=no])\n])\nif test \"x$libffi_cv_as_ptrauth\" = xyes; then\n    AC_DEFINE(HAVE_ARM64E_PTRAUTH, 1,\n\t      [Define if your compiler supports pointer authentication.])\nfi\n\n# On PaX enable kernels that have MPROTECT enable we can't use PROT_EXEC;\n# if EMUTRAMP is active too ffi could try mapping without PROT_EXEC,\n# but the kernel needs to recognize the trampoline generated by ffi.\n# Otherwise fallback to double mmap trick.\nAC_ARG_ENABLE(pax_emutramp,\n  [  --enable-pax_emutramp       enable pax emulated trampolines (experimental)],\n  if test \"$enable_pax_emutramp\" = \"yes\"; then\n    AC_MSG_WARN([EMUTRAMP is experimental only.  Use --enable-pax_emutramp=experimental to enforce.])\n  elif test \"$enable_pax_emutramp\" = \"experimental\"; then\n    AC_DEFINE(FFI_MMAP_EXEC_EMUTRAMP_PAX, 1,\n      [Define this if you want to enable pax emulated trampolines (experimental)])\n  fi)\n\nLT_SYS_SYMBOL_USCORE\nif test \"x$sys_symbol_underscore\" = xyes; then\n    AC_DEFINE(SYMBOL_UNDERSCORE, 1, [Define if symbols are underscored.])\nfi\n\nFFI_EXEC_TRAMPOLINE_TABLE=0\ncase \"$target\" in\n     *arm*-apple-* | aarch64-apple-*)\n       FFI_EXEC_TRAMPOLINE_TABLE=1\n       AC_DEFINE(FFI_EXEC_TRAMPOLINE_TABLE, 1,\n                 [Cannot use PROT_EXEC on this target, so, we revert to\n                   alternative means])\n     ;;\n     *-apple-* | *-*-freebsd* | *-*-kfreebsd* | *-*-openbsd* | *-pc-solaris* | *-linux-android*)\n       AC_DEFINE(FFI_MMAP_EXEC_WRIT, 1,\n                 [Cannot use malloc on this target, so, we revert to\n                   alternative means])\n     ;;\nesac\nAM_CONDITIONAL(FFI_EXEC_TRAMPOLINE_TABLE, test x$FFI_EXEC_TRAMPOLINE_TABLE = x1)\nAC_SUBST(FFI_EXEC_TRAMPOLINE_TABLE)\n\nif test x$TARGET = xX86_64; then\n    AC_CACHE_CHECK([toolchain supports unwind section type],\n\tlibffi_cv_as_x86_64_unwind_section_type, [\n        cat  > conftest1.s << EOF\n.text\n.globl foo\nfoo:\njmp bar\n.section .eh_frame,\"a\",@unwind\nbar:\nEOF\n\n        cat > conftest2.c  << EOF\nextern void foo();\nint main(){foo();}\nEOF\n\n\tlibffi_cv_as_x86_64_unwind_section_type=no\n\t# we ensure that we can compile _and_ link an assembly file containing an @unwind section\n\t# since the compiler can support it and not the linker (ie old binutils)\n\tif $CC -Wa,--fatal-warnings $CFLAGS -c conftest1.s > /dev/null 2>&1 && \\\n           $CC conftest2.c conftest1.o > /dev/null 2>&1 ; then\n\t    libffi_cv_as_x86_64_unwind_section_type=yes\n\tfi\n\t])\n    if test \"x$libffi_cv_as_x86_64_unwind_section_type\" = xyes; then\n\tAC_DEFINE(HAVE_AS_X86_64_UNWIND_SECTION_TYPE, 1,\n\t\t  [Define if your assembler supports unwind section type.])\n    fi\nfi\n\nif test \"x$GCC\" = \"xyes\"; then\n  AX_CHECK_COMPILE_FLAG(-fno-lto, libffi_cv_no_lto=-fno-lto)\n\n  AC_CACHE_CHECK([whether .eh_frame section should be read-only],\n      libffi_cv_ro_eh_frame, [\n  \tlibffi_cv_ro_eh_frame=yes\n  \techo 'extern void foo (void); void bar (void) { foo (); foo (); }' > conftest.c\n  \tif $CC $CFLAGS -c -fpic -fexceptions $libffi_cv_no_lto -o conftest.o conftest.c > /dev/null 2>&1; then\n\t    if $READELF -WS conftest.o 2>/dev/null | $GREP -q -n 'eh_frame .* WA'; then\n\t        libffi_cv_ro_eh_frame=no\n\t    fi\n  \tfi\n  \trm -f conftest.*\n      ])\n  if test \"x$libffi_cv_ro_eh_frame\" = xyes; then\n      AC_DEFINE(HAVE_RO_EH_FRAME, 1,\n  \t      [Define if .eh_frame sections should be read-only.])\n      AC_DEFINE(EH_FRAME_FLAGS, \"a\",\n  \t      [Define to the flags needed for the .section .eh_frame directive.  ])\n  else\n      AC_DEFINE(EH_FRAME_FLAGS, \"aw\",\n  \t      [Define to the flags needed for the .section .eh_frame directive.  ])\n  fi\n\n  AC_CACHE_CHECK([for __attribute__((visibility(\"hidden\")))],\n      libffi_cv_hidden_visibility_attribute, [\n  \techo 'int __attribute__ ((visibility (\"hidden\"))) foo (void) { return 1  ; }' > conftest.c\n  \tlibffi_cv_hidden_visibility_attribute=no\n  \tif AC_TRY_COMMAND(${CC-cc} -Werror -S conftest.c -o conftest.s 1>&AS_MESSAGE_LOG_FD); then\n  \t    if $EGREP '(\\.hidden|\\.private_extern).*foo|foo.*,hidden' conftest.s >/dev/null; then\n  \t\tlibffi_cv_hidden_visibility_attribute=yes\n  \t    fi\n  \tfi\n  \trm -f conftest.*\n      ])\n  if test $libffi_cv_hidden_visibility_attribute = yes; then\n      AC_DEFINE(HAVE_HIDDEN_VISIBILITY_ATTRIBUTE, 1,\n  \t      [Define if __attribute__((visibility(\"hidden\"))) is supported.])\n  fi\nfi\n\nAC_ARG_ENABLE(docs,\n              AS_HELP_STRING([--disable-docs],[Disable building of docs (default: no)]),\n              [enable_docs=no],\n              [enable_docs=yes])\nAM_CONDITIONAL(BUILD_DOCS, [test x$enable_docs = xyes])\n\nAH_BOTTOM([\n#ifdef HAVE_HIDDEN_VISIBILITY_ATTRIBUTE\n#ifdef LIBFFI_ASM\n#ifdef __APPLE__\n#define FFI_HIDDEN(name) .private_extern name\n#else\n#define FFI_HIDDEN(name) .hidden name\n#endif\n#else\n#define FFI_HIDDEN __attribute__ ((visibility (\"hidden\")))\n#endif\n#else\n#ifdef LIBFFI_ASM\n#define FFI_HIDDEN(name)\n#else\n#define FFI_HIDDEN\n#endif\n#endif\n])\n\nAC_SUBST(TARGET)\nAC_SUBST(TARGETDIR)\n\nchangequote(<,>)\nTARGET_OBJ=\nfor i in $SOURCES; do\n  TARGET_OBJ=\"${TARGET_OBJ} src/${TARGETDIR}/\"`echo $i | sed 's/[cS]$/lo/'`\ndone\nchangequote([,])\nAC_SUBST(TARGET_OBJ)\n\nAC_SUBST(SHELL)\n\nAC_ARG_ENABLE(debug,\n[  --enable-debug          debugging mode],\n  if test \"$enable_debug\" = \"yes\"; then\n    AC_DEFINE(FFI_DEBUG, 1, [Define this if you want extra debugging.])\n  fi)\nAM_CONDITIONAL(FFI_DEBUG, test \"$enable_debug\" = \"yes\")\n\nAC_ARG_ENABLE(structs,\n[  --disable-structs       omit code for struct support],\n  if test \"$enable_structs\" = \"no\"; then\n    AC_DEFINE(FFI_NO_STRUCTS, 1, [Define this if you do not want support for aggregate types.])\n  fi)\nAM_CONDITIONAL(FFI_DEBUG, test \"$enable_debug\" = \"yes\")\n\nAC_ARG_ENABLE(raw-api,\n[  --disable-raw-api       make the raw api unavailable],\n  if test \"$enable_raw_api\" = \"no\"; then\n    AC_DEFINE(FFI_NO_RAW_API, 1, [Define this if you do not want support for the raw API.])\n  fi)\n\nAC_ARG_ENABLE(exec-static-tramp,\n[  --disable-exec-static-tramp  disable use of static exec trampolines (enabled by default)])\n\nif test \"$enable_exec_static_tramp\" != no; then\ncase \"$target\" in\n     *-cygwin* | *-msys*)\n       # Only define static trampolines if we are using the cygwin runtime.\n       # Will this need to be changed for mingw?\n       if test \"x$GCC\" = \"xyes\"; then\n         AC_DEFINE(FFI_EXEC_STATIC_TRAMP, 1,\n                   [Define this if you want statically defined trampolines])\n       fi\n     ;;\n     *arm*-*-linux-* | aarch64*-*-linux-* | i*86-*-linux-* | x86_64-*-linux-* | loongarch*-*-linux-* | s390x*-linux-*)\n       AC_DEFINE(FFI_EXEC_STATIC_TRAMP, 1,\n                 [Define this if you want statically defined trampolines])\n     ;;\nesac\nfi\n\nAC_ARG_ENABLE(purify-safety,\n[  --enable-purify-safety  purify-safe mode],\n  if test \"$enable_purify_safety\" = \"yes\"; then\n    AC_DEFINE(USING_PURIFY, 1, [Define this if you are using Purify and want to suppress spurious messages.])\n  fi)\n\nAC_ARG_ENABLE(multi-os-directory,\n[  --disable-multi-os-directory\n                          disable use of gcc --print-multi-os-directory to change the library installation directory])\n\n# These variables are only ever used when we cross-build to X86_WIN32.\n# And we only support this with GCC, so...\nif test \"x$GCC\" = \"xyes\"; then\n  if test -n \"$with_cross_host\" &&\n     test x\"$with_cross_host\" != x\"no\"; then\n    toolexecdir='${exec_prefix}'/'$(target_alias)'\n    toolexeclibdir='${toolexecdir}'/lib\n  else\n    toolexecdir='${libdir}'/gcc-lib/'$(target_alias)'\n    toolexeclibdir='${libdir}'\n  fi\n  if test x\"$enable_multi_os_directory\" != x\"no\"; then\n    multi_os_directory=`$CC $CFLAGS -print-multi-os-directory`\n    case $multi_os_directory in\n      .) ;; # Avoid trailing /.\n      ../*) toolexeclibdir=$toolexeclibdir/$multi_os_directory ;;\n    esac\n  fi\n  AC_SUBST(toolexecdir)\nelse\n  toolexeclibdir='${libdir}'\nfi\nAC_SUBST(toolexeclibdir)\n\n# Conditionalize the makefile for this target machine.\ntmake_file_=\nfor f in ${tmake_file}; do\n  if test -f ${srcdir}/src/$TARGETDIR/$f; then\n     tmake_file_=\"${tmake_file_} \\$(srcdir)/src/$TARGETDIR/$f\"\n  fi\ndone\ntmake_file=\"${tmake_file_}\"\nAC_SUBST(tmake_file)\n\n# Check linker support.\nLIBFFI_ENABLE_SYMVERS\n\nAC_CONFIG_COMMANDS(include, [test -d include || mkdir include])\nAC_CONFIG_COMMANDS(src, [\ntest -d src || mkdir src\ntest -d src/$TARGETDIR || mkdir src/$TARGETDIR\n], [TARGETDIR=\"$TARGETDIR\"])\n\nAC_CONFIG_FILES(include/Makefile include/ffi.h Makefile testsuite/Makefile man/Makefile doc/Makefile libffi.pc)\n\nAC_OUTPUT\n\n# Copy this file instead of using AC_CONFIG_LINK in order to support\n# compiling with MSVC, which won't understand cygwin style symlinks.\ncp ${srcdir}/src/$TARGETDIR/ffitarget.h include/ffitarget.h\n"
        },
        {
          "name": "configure.host",
          "type": "blob",
          "size": 6.7294921875,
          "content": "# configure.host\n#\n# This shell script handles all host based configuration for libffi.\n#\n\n# THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n# Most of the time we can define all the variables all at once...\ncase \"${host}\" in\n  aarch64*-*-cygwin* | aarch64*-*-msys* | aarch64*-*-mingw* | aarch64*-*-win* )\n\tTARGET=ARM_WIN64; TARGETDIR=aarch64\n\tif test \"${ax_cv_c_compiler_vendor}\" = \"microsoft\"; then\n\t  MSVC=1\n\tfi\n\t;;\n\n  aarch64*-*-*)\n\tTARGET=AARCH64; TARGETDIR=aarch64\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  alpha*-*-*)\n\tTARGET=ALPHA; TARGETDIR=alpha;\n\t# Support 128-bit long double, changeable via command-line switch.\n\tHAVE_LONG_DOUBLE='defined(__LONG_DOUBLE_128__)'\n\tSOURCES=\"ffi.c osf.S\"\n\t;;\n\n  arc*-*-*)\n\tTARGET=ARC; TARGETDIR=arc\n\tSOURCES=\"ffi.c arcompact.S\"\n\t;;\n\n  arm*-*-cygwin* | arm*-*-msys* | arm*-*-mingw* | arm*-*-win* )\n\tTARGET=ARM_WIN32; TARGETDIR=arm\n\tif test \"${ax_cv_c_compiler_vendor}\" = \"microsoft\"; then\n\t  MSVC=1\n\tfi\n\t;;\n\n  arm*-*-*)\n\tTARGET=ARM; TARGETDIR=arm\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  avr32*-*-*)\n\tTARGET=AVR32; TARGETDIR=avr32\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  bfin*)\n\tTARGET=BFIN; TARGETDIR=bfin\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  cris-*-*)\n\tTARGET=LIBFFI_CRIS; TARGETDIR=cris\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  csky-*-*)\n        TARGET=CSKY; TARGETDIR=csky\n        SOURCES=\"ffi.c sysv.S\"\n        ;;\n\n  frv-*-*)\n\tTARGET=FRV; TARGETDIR=frv\n\tSOURCES=\"ffi.c eabi.S\"\n\t;;\n\n  hppa*-*-linux* | parisc*-*-linux* | hppa*-*-openbsd*)\n\tTARGET=PA_LINUX; TARGETDIR=pa\n\tSOURCES=\"ffi.c linux.S\"\n\t;;\n  hppa*64-*-hpux*)\n\tTARGET=PA64_HPUX; TARGETDIR=pa\n\tSOURCES=\"ffi64.c hpux64.S\"\n\t;;\n  hppa*-*-hpux*)\n\tTARGET=PA_HPUX; TARGETDIR=pa\n\tSOURCES=\"ffi.c hpux32.S\"\n\t;;\n\n  i?86-*-freebsd* | i?86-*-openbsd*)\n\tTARGET=X86_FREEBSD; TARGETDIR=x86\n\t;;\n\n  i?86-*-cygwin* | i?86-*-msys* | i?86-*-mingw* | i?86-*-win* | i?86-*-os2* | i?86-*-interix* \\\n  | x86_64-*-cygwin* | x86_64-*-msys* | x86_64-*-mingw* | x86_64-*-win* )\n\tTARGETDIR=x86\n\tif test $ac_cv_sizeof_size_t = 4; then\n\t  TARGET=X86_WIN32\n\telse\n\t  TARGET=X86_WIN64\n\tfi\n\tif test \"${ax_cv_c_compiler_vendor}\" = \"microsoft\"; then\n\t  MSVC=1\n\tfi\n\t# All mingw/cygwin/win32 builds require -no-undefined for sharedlib.\n\t# We must also check with_cross_host to decide if this is a native\n\t# or cross-build and select where to install dlls appropriately.\n\tif test -n \"$with_cross_host\" &&\n\t   test x\"$with_cross_host\" != x\"no\"; then\n\t  AM_LTLDFLAGS='-no-undefined -bindir \"$(toolexeclibdir)\"';\n\telse\n\t  AM_LTLDFLAGS='-no-undefined -bindir \"$(bindir)\"';\n\tfi\n\t;;\n\n  i?86-*-darwin* | x86_64-*-darwin* | i?86-*-ios | x86_64-*-ios)\n\tTARGETDIR=x86\n\tif test $ac_cv_sizeof_size_t = 4; then\n\t  TARGET=X86_DARWIN\n\telse\n\t  TARGET=X86_64\n\tfi\n\t;;\n\n  i?86-*-* | x86_64-*-* | amd64-*)\n\tTARGETDIR=x86\n\tif test $ac_cv_sizeof_size_t = 4; then\n\t  echo 'int foo (void) { return __x86_64__; }' > conftest.c\n\t  if $CC $CFLAGS -Werror -S conftest.c -o conftest.s > /dev/null 2>&1; then\n\t    TARGET_X32=yes\n\t    TARGET=X86_64\n\t  else\n\t    TARGET=X86;\n\t  fi\n\t  rm -f conftest.*\n\telse\n\t  TARGET=X86_64;\n\tfi\n\t;;\n\n  ia64*-*-*)\n\tTARGET=IA64; TARGETDIR=ia64\n\tSOURCES=\"ffi.c unix.S\"\n\t;;\n\n  kvx-*-*)\n\tTARGET=KVX; TARGETDIR=kvx\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  loongarch64-*-*)\n\tTARGET=LOONGARCH64; TARGETDIR=loongarch64\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  m32r*-*-*)\n\tTARGET=M32R; TARGETDIR=m32r\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  m68k-*-*)\n\tTARGET=M68K; TARGETDIR=m68k\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  m88k-*-*)\n\tTARGET=M88K; TARGETDIR=m88k\n\tSOURCES=\"ffi.c obsd.S\"\n\t;;\n\n  microblaze*-*-*)\n\tTARGET=MICROBLAZE; TARGETDIR=microblaze\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  moxie-*-*)\n\tTARGET=MOXIE; TARGETDIR=moxie\n\tSOURCES=\"ffi.c eabi.S\"\n\t;;\n\n  metag-*-*)\n\tTARGET=METAG; TARGETDIR=metag\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  mips-sgi-irix5.* | mips-sgi-irix6.* | mips*-*-rtems*)\n\tTARGET=MIPS; TARGETDIR=mips\n\t;;\n  mips*-*linux* | mips*-*-openbsd* | mips*-*-freebsd*)\n\t# Support 128-bit long double for NewABI.\n\tHAVE_LONG_DOUBLE='defined(__mips64)'\n\tTARGET=MIPS; TARGETDIR=mips\n\t;;\n\n  nios2*-linux*)\n\tTARGET=NIOS2; TARGETDIR=nios2\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  or1k*-*-*)\n\tTARGET=OR1K; TARGETDIR=or1k\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  powerpc*-*-linux* | powerpc-*-sysv*)\n\tTARGET=POWERPC; TARGETDIR=powerpc\n\tHAVE_LONG_DOUBLE_VARIANT=1\n\t;;\n  powerpc-*-amigaos*)\n\tTARGET=POWERPC; TARGETDIR=powerpc\n\t;;\n  powerpc-*-eabi*)\n\tTARGET=POWERPC; TARGETDIR=powerpc\n\t;;\n  powerpc-*-beos* | powerpc-*-haiku*)\n\tTARGET=POWERPC; TARGETDIR=powerpc\n\t;;\n  powerpc-*-darwin* | powerpc64-*-darwin*)\n\tTARGET=POWERPC_DARWIN; TARGETDIR=powerpc\n\t;;\n  powerpc-*-aix* | rs6000-*-aix*)\n\tTARGET=POWERPC_AIX; TARGETDIR=powerpc\n\t# Create AIX-style \"FAT\" libraries.\n\ttmake_file=\"t-aix\"\n\t;;\n  powerpc-*-freebsd* | powerpc-*-openbsd* | powerpc-*-netbsd*)\n\tTARGET=POWERPC_FREEBSD; TARGETDIR=powerpc\n\tHAVE_LONG_DOUBLE_VARIANT=1\n\t;;\n  powerpcspe-*-freebsd*)\n\tTARGET=POWERPC_FREEBSD; TARGETDIR=powerpc\n\tCFLAGS=\"$CFLAGS -D__NO_FPRS__\"\n\t;;\n  powerpc64-*-freebsd* | powerpc64le-*-freebsd*)\n\tTARGET=POWERPC; TARGETDIR=powerpc\n\t;;\n  powerpc*-*-rtems*)\n\tTARGET=POWERPC; TARGETDIR=powerpc\n\t;;\n\n  riscv*-*)\n\tTARGET=RISCV; TARGETDIR=riscv\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  s390-*-* | s390x-*-*)\n\tTARGET=S390; TARGETDIR=s390\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  sh-*-* | sh[34]*-*-*)\n\tTARGET=SH; TARGETDIR=sh\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n  sh64-*-* | sh5*-*-*)\n\tTARGET=SH64; TARGETDIR=sh64\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\n\n  sparc*-*-*)\n\tTARGET=SPARC; TARGETDIR=sparc\n\tSOURCES=\"ffi.c ffi64.c v8.S v9.S\"\n\t;;\n\n  tile*-*)\n        TARGET=TILE; TARGETDIR=tile\n\tSOURCES=\"ffi.c tile.S\"\n        ;;\n\n  vax-*-*)\n\tTARGET=VAX; TARGETDIR=vax\n\tSOURCES=\"ffi.c elfbsd.S\"\n\t;;\n\n  wasm32-*-*)\n\tTARGET=wasm32; TARGETDIR=wasm32\n\tSOURCES=\"ffi.c\"\n\t;;\n\n  xtensa*-*)\n\tTARGET=XTENSA; TARGETDIR=xtensa\n\tSOURCES=\"ffi.c sysv.S\"\n\t;;\nesac\n\n# ... but some of the cases above share configury.\ncase \"${TARGET}\" in\n  ARM_WIN32)\n\tif test \"$MSVC\" = 1; then\n\t\tSOURCES=\"ffi.c sysv_msvc_arm32.S\"\n\telse\n\t\tSOURCES=\"ffi.c sysv.S\"\n\tfi\n\t;;\n  ARM_WIN64)\n\tif test \"$MSVC\" = 1; then\n\t\tSOURCES=\"ffi.c win64_armasm.S\"\n\telse\n\t\tSOURCES=\"ffi.c sysv.S\"\n\tfi\n\t;;\n  MIPS)\n\tSOURCES=\"ffi.c o32.S n32.S\"\n\t;;\n  POWERPC)\n\tSOURCES=\"ffi.c ffi_sysv.c ffi_linux64.c sysv.S ppc_closure.S\"\n\tSOURCES=\"${SOURCES} linux64.S linux64_closure.S\"\n\t;;\n  POWERPC_AIX)\n\tSOURCES=\"ffi_darwin.c aix.S aix_closure.S\"\n\t;;\n  POWERPC_DARWIN)\n\tSOURCES=\"ffi_darwin.c darwin.S darwin_closure.S\"\n\t;;\n  POWERPC_FREEBSD)\n\tSOURCES=\"ffi.c ffi_sysv.c sysv.S ppc_closure.S\"\n\t;;\n  X86 | X86_DARWIN | X86_FREEBSD | X86_WIN32)\n\tif test \"$MSVC\" = 1; then\n\t\tSOURCES=\"ffi.c sysv_intel.S\"\n\telse\n\t\tSOURCES=\"ffi.c sysv.S\"\n\tfi\n\t;;\n  X86_64)\n\tif test x\"$TARGET_X32\" = xyes; then\n\t\tSOURCES=\"ffi64.c unix64.S\"\n\telse\n\t\tSOURCES=\"ffi64.c unix64.S ffiw64.c win64.S\"\n\tfi\n\t;;\n  X86_WIN64)\n\tif test \"$MSVC\" = 1; then\n\t\tSOURCES=\"ffiw64.c win64_intel.S\"\n\telse\n\t\tSOURCES=\"ffiw64.c win64.S\"\n\tfi\n\t;;\nesac\n\n# If we failed to configure SOURCES, we can't do anything.\nif test -z \"${SOURCES}\"; then\n  UNSUPPORTED=1\nfi\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "generate-darwin-source-and-headers.py",
          "type": "blob",
          "size": 10.21484375,
          "content": "#!/usr/bin/env python\nimport subprocess\nimport os\nimport errno\nimport collections\nimport glob\nimport argparse\n\n\nclass Platform(object):\n    pass\n\n\nclass i386_platform(Platform):\n    arch = 'i386'\n\n    prefix = \"#ifdef __i386__\\n\\n\"\n    suffix = \"\\n\\n#endif\"\n    src_dir = 'x86'\n    src_files = ['sysv.S', 'ffi.c', 'internal.h']\n\n\nclass x86_64_platform(Platform):\n    arch = 'x86_64'\n\n    prefix = \"#ifdef __x86_64__\\n\\n\"\n    suffix = \"\\n\\n#endif\"\n    src_dir = 'x86'\n    src_files = ['unix64.S', 'ffi64.c', 'ffiw64.c', 'win64.S', 'internal64.h', 'asmnames.h']\n\n\nclass arm64_platform(Platform):\n    arch = 'arm64'\n\n    prefix = \"#ifdef __arm64__\\n\\n\"\n    suffix = \"\\n\\n#endif\"\n    src_dir = 'aarch64'\n    src_files = ['sysv.S', 'ffi.c', 'internal.h']\n\n\nclass armv7_platform(Platform):\n    arch = 'armv7'\n\n    prefix = \"#ifdef __arm__\\n\\n\"\n    suffix = \"\\n\\n#endif\"\n    src_dir = 'arm'\n    src_files = ['sysv.S', 'ffi.c', 'internal.h']\n\n\nclass ios_simulator_i386_platform(i386_platform):\n    target = 'i386-apple-ios-simulator'\n    directory = 'darwin_ios'\n    sdk = 'iphonesimulator'\n    version_min = '-miphoneos-version-min=7.0'\n\n\nclass ios_simulator_x86_64_platform(x86_64_platform):\n    target = 'x86_64-apple-ios-simulator'\n    directory = 'darwin_ios'\n    sdk = 'iphonesimulator'\n    version_min = '-miphoneos-version-min=7.0'\n\n\nclass ios_simulator_arm64_platform(arm64_platform):\n    target = 'arm64-apple-ios-simulator'\n    directory = 'darwin_ios'\n    sdk = 'iphonesimulator'\n    version_min = '-miphoneos-version-min=7.0'\n\n\nclass ios_device_armv7_platform(armv7_platform):\n    target = 'armv7-apple-ios'\n    directory = 'darwin_ios'\n    sdk = 'iphoneos'\n    version_min = '-miphoneos-version-min=7.0'\n\n\nclass ios_device_arm64_platform(arm64_platform):\n    target = 'arm64-apple-ios'\n    directory = 'darwin_ios'\n    sdk = 'iphoneos'\n    version_min = '-miphoneos-version-min=7.0'\n\n\nclass desktop_x86_64_platform(x86_64_platform):\n    target = 'x86_64-apple-macos'\n    directory = 'darwin_osx'\n    sdk = 'macosx'\n    version_min = '-mmacosx-version-min=10.6'\n\n\nclass desktop_arm64_platform(arm64_platform):\n    target = 'arm64-apple-macos'\n    directory = 'darwin_osx'\n    sdk = 'macosx'\n    version_min = '-mmacosx-version-min=11.0'\n\n\nclass tvos_simulator_x86_64_platform(x86_64_platform):\n    target = 'x86_64-apple-tvos-simulator'\n    directory = 'darwin_tvos'\n    sdk = 'appletvsimulator'\n    version_min = '-mtvos-version-min=9.0'\n\n\nclass tvos_simulator_arm64_platform(arm64_platform):\n    target = 'arm64-apple-tvos-simulator'\n    directory = 'darwin_tvos'\n    sdk = 'appletvsimulator'\n    version_min = '-mtvos-version-min=9.0'\n\n\nclass tvos_device_arm64_platform(arm64_platform):\n    target = 'arm64-apple-tvos'\n    directory = 'darwin_tvos'\n    sdk = 'appletvos'\n    version_min = '-mtvos-version-min=9.0'\n\n\nclass watchos_simulator_i386_platform(i386_platform):\n    target = 'i386-apple-watchos-simulator'\n    directory = 'darwin_watchos'\n    sdk = 'watchsimulator'\n    version_min = '-mwatchos-version-min=4.0'\n\n\nclass watchos_simulator_x86_64_platform(x86_64_platform):\n    target = 'x86_64-apple-watchos-simulator'\n    directory = 'darwin_watchos'\n    sdk = 'watchsimulator'\n    version_min = '-mwatchos-version-min=4.0'\n\n\nclass watchos_simulator_arm64_platform(arm64_platform):\n    target = 'arm64-apple-watchos-simulator'\n    directory = 'darwin_watchos'\n    sdk = 'watchsimulator'\n    version_min = '-mwatchos-version-min=4.0'\n\n\nclass watchos_device_armv7k_platform(armv7_platform):\n    target = 'armv7k-apple-watchos'\n    directory = 'darwin_watchos'\n    sdk = 'watchos'\n    arch = 'armv7k'\n    version_min = '-mwatchos-version-min=4.0'\n\n\nclass watchos_device_arm64_32_platform(arm64_platform):\n    target = 'arm64_32-apple-watchos'\n    directory = 'darwin_watchos'\n    sdk = 'watchos'\n    arch = 'arm64_32'\n    version_min = '-mwatchos-version-min=4.0'\n\n\ndef mkdir_p(path):\n    try:\n        os.makedirs(path)\n    except OSError as exc:  # Python >2.5\n        if exc.errno != errno.EEXIST:\n            raise\n\n\ndef move_file(src_dir, dst_dir, filename, file_suffix=None, prefix='', suffix=''):\n    mkdir_p(dst_dir)\n    out_filename = filename\n\n    if file_suffix:\n        if filename in ['internal64.h', 'asmnames.h', 'internal.h']:\n            out_filename = filename\n        else:\n            split_name = os.path.splitext(filename)\n            out_filename = \"%s_%s%s\" % (split_name[0], file_suffix, split_name[1])\n\n    with open(os.path.join(src_dir, filename)) as in_file:\n        with open(os.path.join(dst_dir, out_filename), 'w') as out_file:\n            if prefix:\n                out_file.write(prefix)\n\n            out_file.write(in_file.read())\n\n            if suffix:\n                out_file.write(suffix)\n\n\ndef list_files(src_dir, pattern=None, filelist=None):\n    if pattern: filelist = glob.iglob(os.path.join(src_dir, pattern))\n    for file in filelist:\n        yield os.path.basename(file)\n\n\ndef copy_files(src_dir, dst_dir, pattern=None, filelist=None, file_suffix=None, prefix=None, suffix=None):\n    for filename in list_files(src_dir, pattern=pattern, filelist=filelist):\n        move_file(src_dir, dst_dir, filename, file_suffix=file_suffix, prefix=prefix, suffix=suffix)\n\n\ndef copy_src_platform_files(platform):\n    src_dir = os.path.join('src', platform.src_dir)\n    dst_dir = os.path.join(platform.directory, 'src', platform.src_dir)\n    copy_files(src_dir, dst_dir, filelist=platform.src_files, file_suffix=platform.arch, prefix=platform.prefix, suffix=platform.suffix)\n\n\ndef build_target(platform, platform_headers):\n    def xcrun_cmd(cmd):\n        return 'xcrun -sdk %s %s -target %s' % (platform.sdk, cmd, platform.target)\n\n    tag='%s-%s' % (platform.sdk, platform.arch)\n    build_dir = 'build_%s' % tag\n    mkdir_p(build_dir)\n    env = dict(CC=xcrun_cmd('clang'),\n               LD=xcrun_cmd('ld'),\n               CFLAGS='%s -fembed-bitcode' % (platform.version_min))\n    working_dir = os.getcwd()\n    try:\n        os.chdir(build_dir)\n        subprocess.check_call(\n            [\n                \"../configure\",\n                f\"--host={platform.target}\",\n            ] + (\n                [] if platform.sdk == \"macosx\" else [f\"--build={os.uname().machine}-apple-darwin\"]\n            ),\n            env=env\n        )\n    finally:\n        os.chdir(working_dir)\n\n    for src_dir in [build_dir, os.path.join(build_dir, 'include')]:\n        copy_files(src_dir,\n                   os.path.join(platform.directory, 'include'),\n                   pattern='*.h',\n                   file_suffix=platform.arch,\n                   prefix=platform.prefix,\n                   suffix=platform.suffix)\n\n        for filename in list_files(src_dir, pattern='*.h'):\n            platform_headers[filename].add((platform.prefix, platform.arch, platform.suffix))\n\n\ndef generate_source_and_headers(\n    generate_osx=True,\n    generate_ios=True,\n    generate_tvos=True,\n    generate_watchos=True,\n):\n    copy_files('src', 'darwin_common/src', pattern='*.c')\n    copy_files('include', 'darwin_common/include', pattern='*.h')\n\n    if generate_ios:\n        copy_src_platform_files(ios_simulator_i386_platform)\n        copy_src_platform_files(ios_simulator_x86_64_platform)\n        copy_src_platform_files(ios_simulator_arm64_platform)\n        copy_src_platform_files(ios_device_armv7_platform)\n        copy_src_platform_files(ios_device_arm64_platform)\n    if generate_osx:\n        copy_src_platform_files(desktop_x86_64_platform)\n        copy_src_platform_files(desktop_arm64_platform)\n    if generate_tvos:\n        copy_src_platform_files(tvos_simulator_x86_64_platform)\n        copy_src_platform_files(tvos_simulator_arm64_platform)\n        copy_src_platform_files(tvos_device_arm64_platform)\n    if generate_watchos:\n        copy_src_platform_files(watchos_simulator_i386_platform)\n        copy_src_platform_files(watchos_simulator_x86_64_platform)\n        copy_src_platform_files(watchos_simulator_arm64_platform)\n        copy_src_platform_files(watchos_device_armv7k_platform)\n        copy_src_platform_files(watchos_device_arm64_32_platform)\n\n    platform_headers = collections.defaultdict(set)\n\n    if generate_ios:\n        build_target(ios_simulator_i386_platform, platform_headers)\n        build_target(ios_simulator_x86_64_platform, platform_headers)\n        build_target(ios_simulator_arm64_platform, platform_headers)\n        build_target(ios_device_armv7_platform, platform_headers)\n        build_target(ios_device_arm64_platform, platform_headers)\n    if generate_osx:\n        build_target(desktop_x86_64_platform, platform_headers)\n        build_target(desktop_arm64_platform, platform_headers)\n    if generate_tvos:\n        build_target(tvos_simulator_x86_64_platform, platform_headers)\n        build_target(tvos_simulator_arm64_platform, platform_headers)\n        build_target(tvos_device_arm64_platform, platform_headers)\n    if generate_watchos:\n        build_target(watchos_simulator_i386_platform, platform_headers)\n        build_target(watchos_simulator_x86_64_platform, platform_headers)\n        build_target(watchos_simulator_arm64_platform, platform_headers)\n        build_target(watchos_device_armv7k_platform, platform_headers)\n        build_target(watchos_device_arm64_32_platform, platform_headers)\n\n    mkdir_p('darwin_common/include')\n    for header_name, tag_tuples in platform_headers.items():\n        basename, suffix = os.path.splitext(header_name)\n        with open(os.path.join('darwin_common/include', header_name), 'w') as header:\n            for tag_tuple in tag_tuples:\n                header.write('%s#include <%s_%s%s>\\n%s\\n' % (tag_tuple[0], basename, tag_tuple[1], suffix, tag_tuple[2]))\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser()\n    parser.add_argument('--only-ios', action='store_true', default=False)\n    parser.add_argument('--only-osx', action='store_true', default=False)\n    parser.add_argument('--only-tvos', action='store_true', default=False)\n    parser.add_argument('--only-watchos', action='store_true', default=False)\n    args = parser.parse_args()\n\n    generate_source_and_headers(\n        generate_osx=not args.only_ios and not args.only_tvos and not args.only_watchos,\n        generate_ios=not args.only_osx and not args.only_tvos and not args.only_watchos,\n        generate_tvos=not args.only_ios and not args.only_osx and not args.only_watchos,\n        generate_watchos=not args.only_ios and not args.only_osx and not args.only_tvos,\n    )\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "libffi.map.in",
          "type": "blob",
          "size": 1.4013671875,
          "content": "#define LIBFFI_ASM\n#define LIBFFI_H\n#include <fficonfig.h>\n#include <ffitarget.h>\n\n/* These version numbers correspond to the libtool-version abi numbers,\n   not to the libffi release numbers.  */\n\nLIBFFI_BASE_8.0 {\n  global:\n\t/* Exported data variables.  */\n\tffi_type_void;\n\tffi_type_uint8;\n\tffi_type_sint8;\n\tffi_type_uint16;\n\tffi_type_sint16;\n\tffi_type_uint32;\n\tffi_type_sint32;\n\tffi_type_uint64;\n\tffi_type_sint64;\n\tffi_type_float;\n\tffi_type_double;\n\tffi_type_longdouble;\n\tffi_type_pointer;\n\n\t/* Exported functions.  */\n\tffi_call;\n\tffi_prep_cif;\n\tffi_prep_cif_var;\n\n\tffi_raw_call;\n\tffi_ptrarray_to_raw;\n\tffi_raw_to_ptrarray;\n\tffi_raw_size;\n\n#if !FFI_NATIVE_RAW_API\n\tffi_java_raw_call;\n#endif\n\n\tffi_java_ptrarray_to_raw;\n\tffi_java_raw_to_ptrarray;\n\tffi_java_raw_size;\n\n\tffi_get_struct_offsets;\n  local:\n\t*;\n};\n\n#ifdef FFI_TARGET_HAS_COMPLEX_TYPE\nLIBFFI_COMPLEX_8.0 {\n  global:\n\t/* Exported data variables.  */\n\tffi_type_complex_float;\n\tffi_type_complex_double;\n\tffi_type_complex_longdouble;\n} LIBFFI_BASE_8.0;\n#endif\n\n#if FFI_CLOSURES\nLIBFFI_CLOSURE_8.0 {\n  global:\n\tffi_closure_alloc;\n\tffi_closure_free;\n\tffi_prep_closure;\n\tffi_prep_closure_loc;\n\tffi_prep_raw_closure;\n\tffi_prep_raw_closure_loc;\n#if !FFI_NATIVE_RAW_API\n\tffi_prep_java_raw_closure;\n\tffi_prep_java_raw_closure_loc;\n#endif\n} LIBFFI_BASE_8.0;\n#endif\n\n#if FFI_GO_CLOSURES\nLIBFFI_GO_CLOSURE_8.0 {\n  global:\n\tffi_call_go;\n\tffi_prep_go_closure;\n} LIBFFI_CLOSURE_8.0;\n#endif\n"
        },
        {
          "name": "libffi.pc.in",
          "type": "blob",
          "size": 0.2724609375,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\ntoolexeclibdir=@toolexeclibdir@\nincludedir=@includedir@\n\nName: @PACKAGE_NAME@\nDescription: Library supporting Foreign Function Interfaces\nVersion: @PACKAGE_VERSION@\nLibs: -L${toolexeclibdir} -lffi\nCflags: -I${includedir}\n"
        },
        {
          "name": "libffi.xcodeproj",
          "type": "tree",
          "content": null
        },
        {
          "name": "libtool-ldflags",
          "type": "blob",
          "size": 3.291015625,
          "content": "#! /bin/sh\n\n# Script to translate LDFLAGS into a form suitable for use with libtool.\n\n# Copyright (C) 2005 Free Software Foundation, Inc.\n#\n# This file is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n# \n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n# \n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, \n# MA 02110-1301, USA. \n\n# Contributed by CodeSourcery, LLC.\n\n# This script is designed to be used from a Makefile that uses libtool\n# to build libraries as follows: \n#\n#   LTLDFLAGS = $(shell libtool-ldflags $(LDFLAGS))\n#\n# Then, use (LTLDFLAGS) in place of $(LDFLAGS) in your link line.\n\n# The output of the script.  This string is built up as we process the\n# arguments.\nresult=\nprev_arg=\n\nfor arg\ndo\n    case $arg in\n\t-f*|--*)\n\t    # Libtool does not ascribe any special meaning options\n\t    # that begin with -f or with a double-dash.  So, it will\n\t    # think these options are linker options, and prefix them\n\t    # with \"-Wl,\".  Then, the compiler driver will ignore the\n\t    # options.  So, we prefix these options with -Xcompiler to\n\t    # make clear to libtool that they are in fact compiler\n\t    # options.\n\t    case $prev_arg in\n\t\t-Xpreprocessor|-Xcompiler|-Xlinker)\n\t\t    # This option is already prefixed; don't prefix it again.\n\t\t    ;;\n\t\t*)\n\t\t    result=\"$result -Xcompiler\"\n\t\t    ;;\n\t    esac\n\t    ;;\n\t*)\n\t    # We do not want to add -Xcompiler to other options because\n\t    # that would prevent libtool itself from recognizing them.\n\t    ;;\n    esac\n    prev_arg=$arg\n\n    # If $(LDFLAGS) is (say):\n    #   a \"b'c d\" e\n    # then the user expects that:\n    #   $(LD) $(LDFLAGS)\n    # will pass three arguments to $(LD):\n    #   1) a\n    #   2) b'c d\n    #   3) e\n    # We must ensure, therefore, that the arguments are appropriately\n    # quoted so that using:\n    #   libtool --mode=link ... $(LTLDFLAGS)\n    # will result in the same number of arguments being passed to\n    # libtool.   In other words, when this script was invoked, the shell \n    # removed one level of quoting, present in $(LDFLAGS); we have to put \n    # it back.\n\n    # Quote any embedded single quotes.\n    case $arg in\n\t*\"'\"*)\n\t    # The following command creates the script:\n\t    #   1s,^X,,;s|'|'\"'\"'|g\n\t    # which removes a leading X, and then quotes and embedded single\n\t    # quotes.\n\t    sed_script=\"1s,^X,,;s|'|'\\\"'\\\"'|g\"\n\t    # Add a leading \"X\" so that if $arg starts with a dash,\n\t    # the echo command will not try to interpret the argument\n\t    # as a command-line option.\n\t    arg=\"X$arg\"\n\t    # Generate the quoted string.\n\t    quoted_arg=`echo \"$arg\" | sed -e \"$sed_script\"`\n\t    ;;\n\t*)\n\t    quoted_arg=$arg\n\t    ;;\n    esac\n    # Surround the entire argument with single quotes.\n    quoted_arg=\"'\"$quoted_arg\"'\" \n\n    # Add it to the string.\n    result=\"$result $quoted_arg\"\ndone\n\n# Output the string we have built up.\necho \"$result\"\n"
        },
        {
          "name": "libtool-version",
          "type": "blob",
          "size": 1.068359375,
          "content": "# This file is used to maintain libtool version info for libffi.  See\n# the libtool manual to understand the meaning of the fields.  This is\n# a separate file so that version updates don't involve re-running\n# automake.\n#\n# Here are a set of rules to help you update your library version\n# information:\n#\n# 1. Start with version information of `0:0:0' for each libtool library.\n#\n# 2. Update the version information only immediately before a public\n#    release of your software. More frequent updates are unnecessary,\n#    and only guarantee that the current interface number gets larger\n#    faster.\n#\n# 3. If the library source code has changed at all since the last\n#    update, then increment revision (`c:r:a' becomes `c:r+1:a').\n#\n# 4. If any interfaces have been added, removed, or changed since the\n#    last update, increment current, and set revision to 0.\n#\n# 5. If any interfaces have been added since the last public release,\n#    then increment age.\n#\n# 6. If any interfaces have been removed since the last public\n#    release, then set age to 0.\n#\n# CURRENT:REVISION:AGE\n9:4:1\n"
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "make_sunver.pl",
          "type": "blob",
          "size": 8.8095703125,
          "content": "#!/usr/bin/perl -w\n\n# make_sunver.pl\n#\n# This script takes at least two arguments, a GNU style version script and\n# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n# Each glob pattern, C++ mangled pattern or literal in the input script is\n# matched against all global symbols in the input objects, emitting those\n# that matched (or nothing if no match was found).\n# A comment with the original pattern and its type is left in the output\n# file to make it easy to understand the matches.\n#\n# It uses elfdump when present (native), GNU readelf otherwise.\n# It depends on the GNU version of c++filt, since it must understand the\n# GNU mangling style.\n\nuse FileHandle;\nuse IPC::Open2;\n\n# Enforce C locale.\n$ENV{'LC_ALL'} = \"C\";\n$ENV{'LANG'} = \"C\";\n\n# Input version script, GNU style.\nmy $symvers = shift;\n\n##########\n# Get all the symbols from the library, match them, and add them to a hash.\n\nmy %sym_hash = ();\n\n# List of objects and archives to process.\nmy @OBJECTS = ();\n\n# List of shared objects to omit from processing.\nmy @SHAREDOBJS = ();\n\n# Filter out those input archives that have corresponding shared objects to\n# avoid adding all symbols matched in the archive to the output map.\nforeach $file (@ARGV) {\n    if (($so = $file) =~ s/\\.a$/.so/ && -e $so) {\n\tprintf STDERR \"omitted $file -> $so\\n\";\n\tpush (@SHAREDOBJS, $so);\n    } else {\n\tpush (@OBJECTS, $file);\n    }\n}\n\n# We need to detect and ignore hidden symbols.  Solaris nm can only detect\n# this in the harder to parse default output format, and GNU nm not at all,\n# so use elfdump -s in the native case and GNU readelf -s otherwise.\n# GNU objdump -t cannot be used since it produces a variable number of\n# columns.\n\n# The path to elfdump.\nmy $elfdump = \"/usr/ccs/bin/elfdump\";\n\nif (-f $elfdump) {\n    open ELFDUMP,$elfdump.' -s '.(join ' ',@OBJECTS).'|' or die $!;\n    my $skip_arsym = 0;\n\n    while (<ELFDUMP>) {\n\tchomp;\n\n\t# Ignore empty lines.\n\tif (/^$/) {\n\t    # End of archive symbol table, stop skipping.\n\t    $skip_arsym = 0 if $skip_arsym;\n\t    next;\n\t}\n\n\t# Keep skipping until end of archive symbol table.\n\tnext if ($skip_arsym);\n\n\t# Ignore object name header for individual objects and archives.\n\tnext if (/:$/);\n\n\t# Ignore table header lines.\n\tnext if (/^Symbol Table Section:/);\n\tnext if (/index.*value.*size/);\n\n\t# Start of archive symbol table: start skipping.\n\tif (/^Symbol Table: \\(archive/) {\n\t    $skip_arsym = 1;\n\t    next;\n\t}\n\n\t# Split table.\n\t(undef, undef, undef, undef, $bind, $oth, undef, $shndx, $name) = split;\n\n\t# Error out for unknown input.\n\tdie \"unknown input line:\\n$_\" unless defined($bind);\n\n\t# Ignore local symbols.\n\tnext if ($bind eq \"LOCL\");\n\t# Ignore hidden symbols.\n\tnext if ($oth eq \"H\");\n\t# Ignore undefined symbols.\n\tnext if ($shndx eq \"UNDEF\");\n\t# Error out for unhandled cases.\n\tif ($bind !~ /^(GLOB|WEAK)/ or $oth ne \"D\") {\n\t    die \"unhandled symbol:\\n$_\";\n\t}\n\n\t# Remember symbol.\n\t$sym_hash{$name}++;\n    }\n    close ELFDUMP or die \"$elfdump error\";\n} else {\n    open READELF, 'readelf -s -W '.(join ' ',@OBJECTS).'|' or die $!;\n    # Process each symbol.\n    while (<READELF>) {\n\tchomp;\n\n\t# Ignore empty lines.\n\tnext if (/^$/);\n\n\t# Ignore object name header.\n\tnext if (/^File: .*$/);\n\n\t# Ignore table header lines.\n\tnext if (/^Symbol table.*contains.*:/);\n\tnext if (/Num:.*Value.*Size/);\n\n\t# Split table.\n\t(undef, undef, undef, undef, $bind, $vis, $ndx, $name) = split;\n\n\t# Error out for unknown input.\n\tdie \"unknown input line:\\n$_\" unless defined($bind);\n\n\t# Ignore local symbols.\n\tnext if ($bind eq \"LOCAL\");\n\t# Ignore hidden symbols.\n\tnext if ($vis eq \"HIDDEN\");\n\t# Ignore undefined symbols.\n\tnext if ($ndx eq \"UND\");\n\t# Error out for unhandled cases.\n\tif ($bind !~ /^(GLOBAL|WEAK)/ or $vis ne \"DEFAULT\") {\n\t    die \"unhandled symbol:\\n$_\";\n\t}\n\n\t# Remember symbol.\n\t$sym_hash{$name}++;\n    }\n    close READELF or die \"readelf error\";\n}\n\n##########\n# The various types of glob patterns.\n#\n# A glob pattern that is to be applied to the demangled name: 'cxx'.\n# A glob patterns that applies directly to the name in the .o files: 'glob'.\n# This pattern is ignored; used for local variables (usually just '*'): 'ign'.\n\n# The type of the current pattern.\nmy $glob = 'glob';\n\n# We're currently inside `extern \"C++\"', which Sun ld doesn't understand.\nmy $in_extern = 0;\n\n# The c++filt command to use.  This *must* be GNU c++filt; the Sun Studio\n# c++filt doesn't handle the GNU mangling style.\nmy $cxxfilt = $ENV{'CXXFILT'} || \"c++filt\";\n\n# The current version name.\nmy $current_version = \"\";\n\n# Was there any attempt to match a symbol to this version?\nmy $matches_attempted;\n\n# The number of versions which matched this symbol.\nmy $matched_symbols;\n\nopen F,$symvers or die $!;\n\n# Print information about generating this file\nprint \"# This file was generated by make_sunver.pl.  DO NOT EDIT!\\n\";\nprint \"# It was generated by:\\n\";\nprintf \"# %s %s %s\\n\", $0, $symvers, (join ' ',@ARGV);\nprintf \"# Omitted archives with corresponding shared libraries: %s\\n\",\n    (join ' ', @SHAREDOBJS) if $#SHAREDOBJS >= 0;\nprint \"#\\n\\n\";\n\nwhile (<F>) {\n    # Lines of the form '};'\n    if (/^([ \\t]*)(\\}[ \\t]*;[ \\t]*)$/) {\n\t$glob = 'glob';\n\tif ($in_extern) {\n\t    $in_extern--;\n\t    print \"$1##$2\\n\";\n\t} else {\n\t    print;\n\t}\n\tnext;\n    }\n\n    # Lines of the form '} SOME_VERSION_NAME_1.0;'\n    if (/^[ \\t]*\\}[ \\tA-Z0-9_.a-z]+;[ \\t]*$/) {\n\t$glob = 'glob';\n\t# We tried to match symbols agains this version, but none matched.\n\t# Emit dummy hidden symbol to avoid marking this version WEAK.\n\tif ($matches_attempted && $matched_symbols == 0) {\n\t    print \"  hidden:\\n\";\n\t    print \"    .force_WEAK_off_$current_version = DATA S0x0 V0x0;\\n\";\n\t}\n\tprint; next;\n    }\n\n    # Comment and blank lines\n    if (/^[ \\t]*\\#/) { print; next; }\n    if (/^[ \\t]*$/) { print; next; }\n\n    # Lines of the form '{'\n    if (/^([ \\t]*){$/) {\n\tif ($in_extern) {\n\t    print \"$1##{\\n\";\n\t} else {\n\t    print;\n\t}\n\tnext;\n    }\n\n    # Lines of the form 'SOME_VERSION_NAME_1.1 {'\n    if (/^([A-Z0-9_.]+)[ \\t]+{$/) {\n\t# Record version name.\n\t$current_version = $1;\n\t# Reset match attempts, #matched symbols for this version.\n\t$matches_attempted = 0;\n\t$matched_symbols = 0;\n\tprint;\n\tnext;\n    }\n\n    # Ignore 'global:'\n    if (/^[ \\t]*global:$/) { print; next; }\n\n    # After 'local:', globs should be ignored, they won't be exported.\n    if (/^[ \\t]*local:$/) {\n\t$glob = 'ign';\n\tprint;\n\tnext;\n    }\n\n    # After 'extern \"C++\"', globs are C++ patterns\n    if (/^([ \\t]*)(extern \\\"C\\+\\+\\\"[ \\t]*)$/) {\n\t$in_extern++;\n\t$glob = 'cxx';\n\t# Need to comment, Sun ld cannot handle this.\n\tprint \"$1##$2\\n\"; next;\n    }\n\n    # Chomp newline now we're done with passing through the input file.\n    chomp;\n\n    # Catch globs.  Note that '{}' is not allowed in globs by this script,\n    # so only '*' and '[]' are available.\n    if (/^([ \\t]*)([^ \\t;{}#]+);?[ \\t]*$/) {\n\tmy $ws = $1;\n\tmy $ptn = $2;\n\t# Turn the glob into a regex by replacing '*' with '.*', '?' with '.'.\n\t# Keep $ptn so we can still print the original form.\n\t($pattern = $ptn) =~ s/\\*/\\.\\*/g;\n\t$pattern =~ s/\\?/\\./g;\n\n\tif ($glob eq 'ign') {\n\t    # We're in a local: * section; just continue.\n\t    print \"$_\\n\";\n\t    next;\n\t}\n\n\t# Print the glob commented for human readers.\n\tprint \"$ws##$ptn ($glob)\\n\";\n\t# We tried to match a symbol to this version.\n\t$matches_attempted++;\n\n\tif ($glob eq 'glob') {\n\t    my %ptn_syms = ();\n\n\t    # Match ptn against symbols in %sym_hash.\n\t    foreach my $sym (keys %sym_hash) {\n\t\t# Maybe it matches one of the patterns based on the symbol in\n\t\t# the .o file.\n\t\t$ptn_syms{$sym}++ if ($sym =~ /^$pattern$/);\n\t    }\n\n\t    foreach my $sym (sort keys(%ptn_syms)) {\n\t\t$matched_symbols++;\n\t\tprint \"$ws$sym;\\n\";\n\t    }\n\t} elsif ($glob eq 'cxx') {\n\t    my %dem_syms = ();\n\n\t    # Verify that we're actually using GNU c++filt.  Other versions\n\t    # most likely cannot handle GNU style symbol mangling.\n\t    my $cxxout = `$cxxfilt --version 2>&1`;\n\t    $cxxout =~ m/GNU/ or die \"$0 requires GNU c++filt to function\";\n\n\t    # Talk to c++filt through a pair of file descriptors.\n\t    # Need to start a fresh instance per pattern, otherwise the\n\t    # process grows to 500+ MB.\n\t    my $pid = open2(*FILTIN, *FILTOUT, $cxxfilt) or die $!;\n\n\t    # Match ptn against symbols in %sym_hash.\n\t    foreach my $sym (keys %sym_hash) {\n\t\t# No?  Well, maybe its demangled form matches one of those\n\t\t# patterns.\n\t\tprintf FILTOUT \"%s\\n\",$sym;\n\t\tmy $dem = <FILTIN>;\n\t\tchomp $dem;\n\t\t$dem_syms{$sym}++ if ($dem =~ /^$pattern$/);\n\t    }\n\n\t    close FILTOUT or die \"c++filt error\";\n\t    close FILTIN or die \"c++filt error\";\n\t    # Need to wait for the c++filt process to avoid lots of zombies.\n\t    waitpid $pid, 0;\n\n\t    foreach my $sym (sort keys(%dem_syms)) {\n\t\t$matched_symbols++;\n\t\tprint \"$ws$sym;\\n\";\n\t    }\n\t} else {\n\t    # No?  Well, then ignore it.\n\t}\n\tnext;\n    }\n    # Important sanity check.  This script can't handle lots of formats\n    # that GNU ld can, so be sure to error out if one is seen!\n    die \"strange line `$_'\";\n}\nclose F;\n"
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "msvc_build",
          "type": "tree",
          "content": null
        },
        {
          "name": "msvcc.sh",
          "type": "blob",
          "size": 8.3232421875,
          "content": "#!/bin/sh\n\n# ***** BEGIN LICENSE BLOCK *****\n# Version: MPL 1.1/GPL 2.0/LGPL 2.1\n#\n# The contents of this file are subject to the Mozilla Public License Version\n# 1.1 (the \"License\"); you may not use this file except in compliance with\n# the License. You may obtain a copy of the License at\n# http://www.mozilla.org/MPL/\n#\n# Software distributed under the License is distributed on an \"AS IS\" basis,\n# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n# for the specific language governing rights and limitations under the\n# License.\n#\n# The Original Code is the MSVC wrappificator.\n#\n# The Initial Developer of the Original Code is\n# Timothy Wall <twalljava@dev.java.net>.\n# Portions created by the Initial Developer are Copyright (C) 2009\n# the Initial Developer. All Rights Reserved.\n#\n# Contributor(s):\n#   Daniel Witte <dwitte@mozilla.com>\n#\n# Alternatively, the contents of this file may be used under the terms of\n# either the GNU General Public License Version 2 or later (the \"GPL\"), or\n# the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n# in which case the provisions of the GPL or the LGPL are applicable instead\n# of those above. If you wish to allow use of your version of this file only\n# under the terms of either the GPL or the LGPL, and not to allow others to\n# use your version of this file under the terms of the MPL, indicate your\n# decision by deleting the provisions above and replace them with the notice\n# and other provisions required by the GPL or the LGPL. If you do not delete\n# the provisions above, a recipient may use your version of this file under\n# the terms of any one of the MPL, the GPL or the LGPL.\n#\n# ***** END LICENSE BLOCK *****\n\n#\n# GCC-compatible wrapper for cl.exe and ml.exe. Arguments are given in GCC\n# format and translated into something sensible for cl or ml.\n#\n\nargs_orig=$@\nargs=\"-nologo -W3\"\nlinkargs=\nstatic_crt=\ndebug_crt=\ncl=\"cl\"\nml=\"ml\"\nsafeseh=\"-safeseh\"\noutput=\nlibpaths=\nlibversion=8\nverbose=\n\nwhile [ $# -gt 0 ]\ndo\n  case $1\n  in\n    --verbose)\n      verbose=1\n      shift 1\n    ;;\n    --version)\n      args=\"-help\"\n      shift 1\n    ;;\n    -fexceptions)\n      # Don't enable exceptions for now.\n      #args=\"$args -EHac\"\n      shift 1\n    ;;\n    -m32)\n      shift 1\n    ;;\n    -m64)\n      ml=\"ml64\" # \"$MSVC/x86_amd64/ml64\"\n      safeseh=\n      shift 1\n    ;;\n    -marm)\n      ml='armasm'\n      safeseh=\n      shift 1\n    ;;\n    -marm64)\n      ml='armasm64'\n      safeseh=\n      shift 1\n    ;;\n    -clang-cl)\n      cl=\"clang-cl\"\n      shift 1\n    ;;\n    -O0)\n      args=\"$args -Od\"\n      shift 1\n    ;;\n    -O*)\n      # Runtime error checks (enabled by setting -RTC1 in the -DFFI_DEBUG\n      # case below) are not compatible with optimization flags and will\n      # cause the build to fail. Therefore, drop the optimization flag if\n      # -DFFI_DEBUG is also set.\n      case $args_orig in\n        *-DFFI_DEBUG*)\n          args=\"$args\"\n        ;;\n        *)\n          # The ax_cc_maxopt.m4 macro from the upstream autoconf-archive\n          # project doesn't support MSVC and therefore ends up trying to\n          # use -O3. Use the equivalent \"max optimization\" flag for MSVC\n          # instead of erroring out.\n          case $1 in\n            -O3)\n              args=\"$args -O2\"\n            ;;\n            *)\n              args=\"$args $1\"\n            ;;\n          esac\n          opt=\"true\"\n        ;;\n      esac\n      shift 1\n    ;;\n    -g)\n      # Enable debug symbol generation.\n      args=\"$args -Zi\"\n      shift 1\n    ;;\n    -DFFI_DEBUG)\n      # Enable runtime error checks.\n      args=\"$args -RTC1\"\n      defines=\"$defines $1\"\n      shift 1\n    ;;\n    -DUSE_STATIC_RTL)\n      # Link against static CRT.\n      static_crt=1\n      shift 1\n    ;;\n    -DUSE_DEBUG_RTL)\n      # Link against debug CRT.\n      debug_crt=1\n      shift 1\n    ;;\n    -c)\n      args=\"$args -c\"\n      args=\"$(echo $args | sed 's%/Fe%/Fo%g')\"\n      single=\"-c\"\n      shift 1\n    ;;\n    -D*=*)\n      name=\"$(echo $1|sed 's/-D\\([^=][^=]*\\)=.*/\\1/g')\"\n      value=\"$(echo $1|sed 's/-D[^=][^=]*=//g')\"\n      args=\"$args -D${name}='$value'\"\n      defines=\"$defines -D${name}='$value'\"\n      shift 1\n    ;;\n    -D*)\n      args=\"$args $1\"\n      defines=\"$defines $1\"\n      shift 1\n    ;;\n    -I)\n      p=$(cygpath -ma \"$2\")\n      args=\"$args -I\\\"$p\\\"\"\n      includes=\"$includes -I\\\"$p\\\"\"\n      shift 2\n    ;;\n    -I*)\n      p=$(cygpath -ma \"${1#-I}\")\n      args=\"$args -I\\\"$p\\\"\"\n      includes=\"$includes -I\\\"$p\\\"\"\n      shift 1\n    ;;\n    -L)\n      p=$(cygpath -ma $2)\n      linkargs=\"$linkargs -LIBPATH:$p\"\n      shift 2\n    ;;\n    -L*)\n      p=$(cygpath -ma ${1#-L})\n      linkargs=\"$linkargs -LIBPATH:$p\"\n      shift 1\n    ;;\n    -link)\n      # add next argument verbatim to linker args\n      linkargs=\"$linkargs $2\"\n      shift 2\n      ;;\n    -l*)\n      case $1\n      in\n        -lffi)\n          linkargs=\"$linkargs lib${1#-l}-${libversion}.lib\"\n          ;;\n        *)\n          # ignore other libraries like -lm, hope they are\n          # covered by MSVCRT\n          # linkargs=\"$linkargs ${1#-l}.lib\"\n          ;;\n      esac\n      shift 1\n    ;;\n    -W|-Wextra)\n      # TODO map extra warnings\n      shift 1\n    ;;\n    -Wall)\n      # -Wall on MSVC is overzealous, and we already build with -W3. Nothing\n      # to do here.\n      shift 1\n    ;;\n    -pedantic)\n      # libffi tests -pedantic with -Wall, so drop it also.\n      shift 1\n    ;;\n    -warn)\n      # ignore -warn all from libtool as well.\n      if test \"$2\" = \"all\"; then\n        shift 2\n      else\n        args=\"$args -warn\"\n        shift 1\n      fi\n    ;;\n    -Werror)\n      args=\"$args -WX\"\n      shift 1\n    ;;\n    -W*)\n      # TODO map specific warnings\n      shift 1\n    ;;\n    -S)\n      args=\"$args -FAs\"\n      shift 1\n    ;;\n    -o)\n      outdir=\"$(dirname $2)\"\n      base=\"$(basename $2|sed 's/\\.[^.]*//g')\"\n      if [ -n \"$single\" ]; then \n        output=\"-Fo$2\"\n      else\n        output=\"-Fe$2\"\n      fi\n      armasm_output=\"-o $2\"\n      if [ -n \"$assembly\" ]; then\n        args=\"$args $output\"\n      else\n        args=\"$args $output -Fd$outdir/$base -Fp$outdir/$base -Fa$outdir/$base\"\n      fi\n      shift 2\n    ;;\n    *.S)\n      src=\"$(cygpath -ma $1)\"\n      assembly=\"true\"\n      shift 1\n    ;;\n    *.c)\n      args=\"$args $(cygpath -ma $1)\"\n      shift 1\n    ;;\n    *)\n      # Assume it's an MSVC argument, and pass it through.\n      args=\"$args $1\"\n      shift 1\n    ;;\n  esac\ndone\n\nif [ -n \"$linkargs\" ]; then\n\n    # If -Zi is specified, certain optimizations are implicitly disabled\n    # by MSVC. Add back those optimizations if this is an optimized build.\n    # NOTE: These arguments must come after all others.\n    if [ -n \"$opt\" ]; then\n\tlinkargs=\"$linkargs -OPT:REF -OPT:ICF -INCREMENTAL:NO\"\n    fi\n\n    args=\"$args -link $linkargs\"\nfi\n\nif [ -n \"$static_crt\" ]; then\n    md=-MT\nelse\n    md=-MD\nfi\n\nif [ -n \"$debug_crt\" ]; then\n    md=\"${md}d\"\nfi\n\nif [ -n \"$assembly\" ]; then\n    if [ -z \"$outdir\" ]; then\n      outdir=\".\"\n    fi\n    ppsrc=\"$outdir/$(basename $src|sed 's/.S$/.asm/g')\"\n\n    if [ $ml = \"armasm\" ]; then\n      defines=\"$defines -D_M_ARM\"\n    fi\n\n    if [ $ml = \"armasm64\" ]; then\n      defines=\"$defines -D_M_ARM64\"\n    fi\n\n    if test -n \"$verbose\"; then\n      echo \"$cl -nologo -EP $includes $defines $src > $ppsrc\"\n    fi\n\n    eval \"\\\"$cl\\\" -nologo -EP $includes $defines $src\" > $ppsrc || exit $?\n    output=\"$(echo $output | sed 's%/F[dpa][^ ]*%%g')\"\n    if [ $ml = \"armasm\" ]; then\n      args=\"-nologo -g -oldit $armasm_output $ppsrc -errorReport:prompt\"\n    elif [ $ml = \"armasm64\" ]; then\n      args=\"-nologo -g $armasm_output $ppsrc -errorReport:prompt\"\n    else\n      args=\"-nologo $safeseh $single $output $ppsrc\"\n    fi\n\n    if test -n \"$verbose\"; then\n      echo \"$ml $args\"\n    fi\n\n    eval \"\\\"$ml\\\" $args\"\n    result=$?\n\n    # required to fix ml64 broken output?\n    #mv *.obj $outdir\nelse\n    args=\"$md $args\"\n\n    if test -n \"$verbose\"; then\n      echo \"$cl $args\"\n    fi\n    # Return an error code of 1 if an invalid command line parameter is passed\n    # instead of just ignoring it. Any output that is not a warning or an\n    # error is filtered so this command behaves more like gcc. cl.exe prints\n    # the name of the compiled file otherwise, which breaks the dejagnu checks\n    # for excess warnings and errors.\n    eval \"(\\\"$cl\\\" $args 2>&1 1>&3 | \\\n          awk '{print \\$0} /D9002/ {error=1} END{exit error}' >&2) 3>&1 | \\\n          awk '/warning|error/'\"\n    result=$?\nfi\n\nexit $result\n\n# vim: noai:ts=4:sw=4\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "stamp-h.in",
          "type": "blob",
          "size": 0.009765625,
          "content": "timestamp\n"
        },
        {
          "name": "testsuite",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}