{
  "metadata": {
    "timestamp": 1736710245086,
    "page": 989,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mattrajca/sudo-touchid",
      "stars": 1543,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3203125,
          "content": "# Xcode\n#\n# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore\n\n## Build generated\nbuild/\nDerivedData/\n\n## Various settings\n*.pbxuser\n!default.pbxuser\n*.mode1v3\n!default.mode1v3\n*.mode2v3\n!default.mode2v3\n*.perspectivev3\n!default.perspectivev3\nxcuserdata/\n\n## Other\n*.moved-aside\n*.xcuserstate\n*.DS_Store\n\n## Obj-C/Swift specific\n*.hmap\n*.ipa\n*.dSYM.zip\n*.dSYM\n\n# CocoaPods\n#\n# We recommend against adding the Pods directory to your .gitignore. However\n# you should judge for yourself, the pros and cons are mentioned at:\n# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control\n#\n# Pods/\n\n# Carthage\n#\n# Add this line if you want to avoid checking in source code from Carthage dependencies.\n# Carthage/Checkouts\n\nCarthage/Build\n\n# fastlane\n#\n# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the \n# screenshots whenever they are needed.\n# For more information about the recommended setup visit:\n# https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Gitignore.md\n\nfastlane/report.xml\nfastlane/screenshots\n\n#Code Injection\n#\n# After new code Injection tools there's a generated folder /iOSInjectionProject\n# https://github.com/johnno1962/injectionforxcode\n\niOSInjectionProject/\n"
        },
        {
          "name": "AAPL_README",
          "type": "blob",
          "size": 0.2021484375,
          "content": "Configure command line:\n\n./configure --with-password-timeout=0 --disable-setreuid --with-env-editor --with-pam --with-libraries=bsm --with-noexec=no --sysconfdir=\"/private/etc\" --with-timedir=\"/var/db/sudo\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.5244140625,
          "content": "# sudo-touchid\n`sudo-touchid` is a fork of `sudo` with Touch ID support on macOS (powered by the `LocalAuthentication` framework). Once compiled, it will allow you to authenticate `sudo` commands with Touch ID in the Terminal on supported Macs (such as the late 2016 MacBook Pros).\n\n## Screenshot\n\n<img src=\"https://github.com/mattrajca/sudo-touchid/blob/master/images/Screenshot.png?raw=true\" width=556 height=284 />\t\t\n\n## Warning\n\n- I am not a security expert. While I am using this as a fun experiment on my personal computer, your security needs may vary.\n- This has only been tested on the 2016 15\" MacBook Pro with Touch Bar running macOS 10.12.1.\n\n## Building\n\nTo build `sudo-touchid`, simply open the included Xcode project file with Xcode 8+, select the `Build All` target, and click **Build**.\n\n## Running\n\nIf we try running our newly-built `sudo` executable now, we'll get an error:\n\n> sudo must be owned by uid 0 and have the setuid bit set\n\nTo fix this, we can use our system's `sudo` command and the `chown/chmod` commands to give our newly-built `sudo` the permissions it needs:\n\n> cd (built-products-directory)\n\n> sudo chown root:wheel sudo && sudo chmod 4755 sudo\n\nNow if we try running our copy of `sudo`, it should work:\n\n> cd (built-products-directory)\n\n> ./sudo -s\n\nIf you don't have a Mac with a biometric sensor, `sudo-touchid` will fail. If you'd still like to test whether the `LocalAuthentication` framework is working correctly, you can change the `kAuthPolicy` constant to `LAPolicyDeviceOwnerAuthentication` in `sudo/plugins/sudoers/auth/sudo_auth.m`. This will present a dialog box asking the user for his or her password:\t\t\n\n<img src=\"https://github.com/mattrajca/sudo-touchid/blob/master/images/auto_fallback.png?raw=true\" width=556 height=301 />\t\t\n\nWhile not useful in practice, you can use this to verify that the `LocalAuthentication` code does in fact work.\n\n## Installing\n\nReplacing the system's `sudo` program is quite risky (can prevent your Mac from booting) and requires disabling System Integrity Protection (aka \"Rootless\").\n\nInstead of replacing `sudo`, we can install our build under `/usr/local/bin` and give the path precedence over `/usr/bin`, this way our build is found first.\n\n> sudo cp (built-products-directory)/sudo /usr/local/bin/sudo\n\n> sudo chown root:wheel /usr/local/bin/sudo && sudo chmod 4755 /usr/local/bin/sudo\n\nYou can set up your `PATH` by adding `export PATH=/usr/local/bin:$PATH` to `.bashrc` (thanks @edenzik).\n\nNow you should be able to enter `sudo` in any Terminal (or iTerm) window and authenticate with Touch ID!\n"
        },
        {
          "name": "files",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "pam.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "sudo.plist",
          "type": "blob",
          "size": 1.1005859375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n        <key>OpenSourceProject</key>\n        <string>sudo</string>\n        <key>OpenSourceVersion</key>\n        <string>1.8.17p1</string>\n        <key>OpenSourceWebsiteURL</key>\n        <string>http://www.sudo.ws/</string>\n        <key>OpenSourceURL</key>\n        <string>http://www.sudo.ws/dist/sudo-1.8.17p1.tar.gz</string>\n        <key>OpenSourceSHA256</key>\n        <string>c690d707fb561b3ecdf6a6de5563bc0b769388eff201c851edbace408bb155cc</string>\n        <key>OpenSourceImportDate</key>\n        <string>2016-07-06</string>\n        <key>OpenSourceModifications</key>\n        <array>\n        \t<string>Disable sudoedit.</string>\n        \t<string>Disable sudoreplay.</string>\n        \t<string>Allow admin group by default.</string>\n        \t<string>Disable lecture</string>\n        </array>\n        <key>OpenSourceLicense</key>\n        <string>other|bsd</string>\n        <key>OpenSourceLicenseFile</key>\n        <string>sudo.txt</string>\n</dict>\n</plist>\n"
        },
        {
          "name": "sudo.xcodeproj",
          "type": "tree",
          "content": null
        },
        {
          "name": "sudo",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}