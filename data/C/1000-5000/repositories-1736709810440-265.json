{
  "metadata": {
    "timestamp": 1736709810440,
    "page": 265,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hpjansson/chafa",
      "stars": 3103,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.310546875,
          "content": "*~\n\\#*\\#\n*.la\n*.lo\n*.o\n*.stamp\n*-stamp\n.deps\n.libs\nMakefile\nMakefile.in\n\n/aclocal.m4\n/ar-lib\n/autom4te.cache\n/chafa.pc\n/compile\n/config.guess\n/config.h\n/config.h.in\n/config.log\n/config.status\n/config.sub\n/configure\n/depcomp\n/gtk-doc.m4\n/gtk-doc.make\n/install-sh\n/libtool\n/ltmain.sh\n/m4\n/missing\n/stamp-h1\n/test-driver\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.0556640625,
          "content": "language: c\n\ndist: bionic\n\ncompiler:\n  - clang\n  - gcc\n\nbefore_install:\n  - sudo apt-get install -qq -y automake libtool libglib2.0-dev libmagickwand-dev libjpeg-dev librsvg2-dev libtiff-dev libwebp-dev gtk-doc-tools docbook-xml libxml2-utils\n  # Needed for ImageMagick/clang runtime not finding libomp.so\n  - export LD_LIBRARY_PATH=$(if [[ $CC == \"clang\" ]]; then echo -n '/usr/local/clang/lib'; fi)\n\nscript:\n  - mkdir build && cd build && CFLAGS='-g -O2 -fsanitize=address,undefined -fsanitize-undefined-trap-on-error -Werror -Wno-error=unused -Wno-error=unused-function -Wno-error=unused-parameter -Wno-error=unused-variable -Wno-error=unused-const-variable -Wno-error=unused-value -Wno-error=comment -Wno-error=missing-braces' ../autogen.sh --prefix=/usr --enable-gtk-doc --enable-man --without-imagemagick && make -j4 && make check && rm -Rf ../build/* && ../autogen.sh --prefix=/usr --enable-gtk-doc --enable-man && make -j4 && sudo make install && chafa --version && cd ../tests && ./postinstall.sh\n\nafter_failure:\n  - touch tests/test-suite.log && cat tests/test-suite.log\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 1.3935546875,
          "content": "Chafa is principally written and maintained by Hans Petter Jansson\n<hpj@hpjansson.org>. Feel free to contact him with any questions and\ncomments.\n\nThere is a growing list of contributors; these can be found in the\ngit log. For a complete list, you could try:\n\ngit log --pretty=\"format:%an <%ae>\" | sort -f | uniq\n\nPer 2024-06-17, this yields the following (sans duplicates):\n\nalkahest <cyphergothic@protonmail.com>\nbegasus <begasus@gmail.com>\nBiswapriyo Nath <nathbappai@gmail.com>\nDaniel Eklöf <daniel@ekloef.se>\ndata-man <dataman@tutanota.com>\nDelgan <delgan.py@gmail.com>\nEmanuel Haupt <ehaupt@critical.ch>\nErica <e@mage.black>\nFelix Yan <felixonmars@archlinux.org>\nHans Petter Jansson <hpj@hpjansson.org>\nJohan Mattsson <39247600+mjunix@users.noreply.github.com>\nLaunch Lee <80872691+LaunchLee@users.noreply.github.com>\nMichael Vetter <jubalh@iodoru.org>\nMikel Olasagasti Uranga <mikel@olasagasti.info>\nMo Zhou <cdluminate@gmail.com>\noshaboy <35503208+oshaboy@users.noreply.github.com>\noupson <oupson1er@gmail.com>\nRicardo Arguello <ricardo.arguello@gmail.com>\nRobert-André Mauchin <zebob.m@gmail.com>\nRoman Wagner <roman.wagner@pm.me>\nSamuel Thibault <samuel.thibault@ens-lyon.org>\nSimon Law <sfllaw@sfllaw.ca>\nsitiom <sitiom@proton.me>\nSotiris Papatheodorou <sotiris@papatheodorou.xyz>\nSudhakar Verma <svermaiiti@gmail.com>\nTim Gates <tim.gates@iress.com>\nWu Zhenyu <wuzhenyu@ustc.edu>\nØyvind Kolås <pippin@gimp.org>\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "COPYING.LESSER",
          "type": "blob",
          "size": 7.47265625,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "HACKING",
          "type": "blob",
          "size": 3.3818359375,
          "content": "How to hack on Chafa\n====================\n\nCode formatting and structure\n-----------------------------\n\nThe code is mostly C99 with limited use of extensions. It should compile with\nmost standards-compliant C compilers released in the last couple of years.\n\nGLib is our primary support library, and the code is in general very GLib-y.\nWe use only the base library, no GObject or GIO.\n\nFormatting is done with spaces (no tabs) and four-space indenting stops.\n\nThe directory layout is as follows:\n\n* Top level ............ Build scripts, README, etc.\n  |- chafa ............. The Chafa library. All exported APIs are here.\n  |  `- internal ....... Chafa library internals. Internal APIs.\n  |     `- smolscale ... Private copy of a pixmap scaling library.\n  |- docs .............. Built documentation (API and man pages).\n  |- libnsgif .......... Private copy of a GIF library, used by tools.\n  |- lodepng ........... Private copy of a PNG library, used by tools.\n  |- tests ............. Tests for library and tools.\n  `- tools ............. Command-line tools.\n     |- chafa .......... The Chafa command-line graphics viewer.\n     `- fontgen ........ Experimental font generator.\n\nMaking source releases\n----------------------\n\nReleases are made as compressed, signed tar archives (\"tarballs\"). We use\nsemantic versioning.\n\nThe following can be done multiple times and at any time during development,\nalways on the master branch:\n\n1) Write/edit NEWS section with a (TBA) placeholder for release date.\n\nThen right before the release, still on the master branch:\n\n2) Update the soversion in chafa/Makefile.am (-version-info c:r:a):\n   - If the library source code has changed at all since the last update,\n     then increment revision (‘c:r:a’ becomes ‘c:r+1:a’).\n   - If any interfaces have been added, removed, or changed since the last\n     update, increment current, and set revision to 0.\n   - If any interfaces have been added since the last public release, then\n     increment age.\n   - If any interfaces have been removed or changed since the last public\n     release, then set age to 0. \n\n3) If this is a minor (x.y.0) release, bump package to the next even version\n   in configure.ac.\n\n4) Make sure 'make distcheck' passes. Correct any issues.\n\n5) Commit and push above changes. Wait for green CI and correct any issues.\n\n6) Edit NEWS and replace (TBA) with today's date.\n\n7) If this is a minor (x.y.0) release, edit README.md and update the CI links.\n   They should reference master and the latest stable branch.\n\n8) If this is a micro (x.y.z) release, switch to that release's maintenance\n   branch (x.y) and cherry-pick all changes from the previous steps into it,\n   then increment the micro version in configure.ac.\n\n9) Commit above changes.\n\n10) Tag and sign the release: 'git tag -s x.y.z'. Annotate with the appropriate\n    NEWS item, without the --- underline for the heading.\n\n11) If this is a minor (x.y.0) release, make a maintenance branch for it,\n    rooted at the tag: 'git branch x.y'. But keep working on master.\n\n12) Build tarball: 'make distcheck'.\n\n13) Sign tarball: 'gpg --sign --detach --armor chafa-x.y.z.tar.xz'.\n\n14) If this was a minor (x.y.0) release, bump package to the next odd version.\n\n15) Commit the post-release version bump.\n\n16) Push changes. Make sure to push tags and branches too.\n\n17) Upload the tarball and signature to GitHub, and copy the NEWS item there.\n    Add markdown formatting.\n\nThat should do it.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 0.4833984375,
          "content": "SUBDIRS = chafa docs examples libnsgif lodepng tools tests\n\nEXTRA_DIST = \\\n\tHACKING \\\n\tREADME.md \\\n\tSECURITY.md \\\n\tautogen.sh \\\n\tchafa.pc.in\n\npkgconfigdir = $(libdir)/pkgconfig\npkgconfig_DATA = chafa.pc\n\nall-local:\n\t@echo\n\t@echo ---\n\t@echo --- Success! You can now run tools/chafa/chafa, or install everything\n\t@echo --- using \"make install\" or \"sudo make install\".\n\t@echo ---\n\t@echo -e '--- \\e[0;91mNOTE:\\e[0m You may have to run \\e[0;93msudo ldconfig\\e[0m after installing.'\n\t@echo ---\n\t@echo\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 26.9501953125,
          "content": "Chafa releases\n==============\n\n1.14.5 (2024-11-03)\n-------------------\n\nThis release addresses a handful of medium-severity bugs.\n\n* Bug fixes:\n  github#217  Improve sixel and general terminal support inside tmux (found\n              by Steven Walton).\n  github#221  Support JPEGs with CMYK color space (found by Lionel Dricot).\n  github#225  Fix --font-ratio doing nothing (found by @johnd0e).\n  [unfiled]   Ensure CLI tool gets linked with libm.\n\n1.14.4 (2024-09-10)\n-------------------\n\nThis quick follow-up release corrects the incomplete fix for the CLI argument\nfraction parsing. It now accepts C locale formatting in addition to that of the\ncurrent locale.\n\n* Bug fixes:\n  github#216  Dither intensity does not work properly (found by @veltza).\n\n1.14.3 (2024-09-09)\n-------------------\n\nThis release brings important fixes for sixel rendering and Windows Terminal,\nplus a few other odds and ends.\n\n* Sixel transparency has been reenabled for still frames. Animations will be\n  pre-composited on an opaque background to prevent flicker/glitchiness\n  (discussed in github#211, big thanks to James Holderness).\n\n* Now supports the Ghostty terminal, defaulting to the Kitty graphics protocol\n  there.\n\n* Bug fixes:\n  github#185  Chafa version 1.14 breaks image preview on lf (found by\n              @Steven79203).\n  github#210  Crash with -f sixels (found by Chris Antos).\n  github#211  Sixels are too small in Windows Terminal (found by @veltza).\n  github#212  Aspect-preserving calculations are off in some cases.\n  [unfiled]   Inconsistent fraction parsing in CLI arguments.\n  [unfiled]   A few small memory leaks in the JPEG XL loader.\n\n1.14.2 (2024-07-26)\n-------------------\n\nThis is a bugfix release. github#205 is particularly serious, since it affects\nmany users on distributions that build with LTO enabled.\n\n* Bug fixes:\n  github#203  Chafa 1.14.1 fails to build on i686 (reported by @tranzystorekk).\n  github#205  Symbols mode not working since 1.14.1 (reported by Folke\n              Lemaitre).\n  github#206  Crash when importing more than 32767 glyphs (reported by @stgiga).\n  [unfiled]   Fix erroneous base64 encoding of final byte in some circumstances.\n\n1.14.1 (2024-06-17)\n-------------------\n\nThis release brings bug fixes, compatibility improvements and some performance\nenhancements.\n\n* A JPEG XL (.jxl) loader was added using libjxl (github#188, @oupson).\n\n* Added detection of the Eat \"Emulate a Terminal\" Emacs terminal (Simon Law).\n\n* Symbols mode was sped up significantly on AVX2-capable platforms.\n\n* Tests: A new test driver was added. It will log the specifics of any failures,\n  which aids debugging of CI builds (issue found by Mo Zhou).\n\n* Bug fixes:\n  github#189  Fix installation of zsh completions (Felix Yan).\n  github#190  Fix a small memory leak in ChafaCanvas (found by @jstkdng).\n  github#192  Wrong sixel padding in some circumstances (found by @dnkl).\n  github#195  tmux passthrough enabled when already set (found by Ron Lau).\n  github#196  iTerm mode not enabled automatically (found by @sudo-burger).\n\n1.14.0 (2024-01-08)\n-------------------\n\nThis is a feature release with mostly practical improvements and bug fixes.\nIt also adds a modest amount of new API in preparation for things to come.\n\n* Removed ImageMagick loader support. Packagers can now remove this dependency\n  (github#157).\n\n* Polite mode is now off by default. The new default eliminates cursor flicker\n  and makes the output more robust against unusual terminal settings. The old\n  behavior can be restored with \"--polite on\".\n\n* Added image loaders for the AVIF and QOI formats. Thanks to @jerch for\n  suggesting the latter.\n\n* sRGB gamma is now handled correctly in scaling operations.\n\n* New option: --passthrough=<auto|none|screen|tmux>. This allows passing\n  graphics protocols like Sixels, iTerm and Kitty through a terminal\n  multiplexer. It will be enabled automatically for Kitty, and can be enabled\n  manually for other protocols with more limited support (github#116,\n  github#162, thanks to Samantha Collins and @m040601).\n\n* New option: --view-size=<WxH>. Specifies width and height of the viewport,\n  overriding the detected terminal size (github#140, reported by Jamin\n  Thornsberry).\n\n* New option: --fit-width. Fits images to the width of the viewport, allowing\n  them to be taller than the viewport's height (github#115, thanks to\n  @SuperDuperDeou).\n\n* New option: --relative=<bool>. Enables relative cursor positioning. Useful if\n  you've pre-positioned the cursor at a particular offset where you want frames\n  to appear, but tends to make the output illegible in pagers, e.g. 'less -R'\n  (github#146, thanks to @Delgan and @AnonymouX47).\n\n* New option: --exact-size=<auto|on|off>. Preserves the input pixel size when\n  possible. Useful to avoid artifacts caused by resampling (github#119,\n  reported by @ErrorNoInternet).\n\n* New symbol selector: \"imported\". This selects glyphs loaded with\n  --glyph-file (github#124, reported by @clort81).\n\n* MS Windows: Experimental support for ConHost output (-f conhost). This allows\n  direct output on older versions of MS Windows (github#170, @oshaboy).\n\n* Fontgen: Added a BDF font writer (Mo Zhou).\n\n* Fontgen: Cleanup and modernization (Mo Zhou).\n\n* The help text and manual page were overhauled for readability, and the API\n  documentation now includes symbol indexes by version and deprecation status.\n\n* Added a zsh completion script (Wu Zhenyu).\n\n* Installation methods added: Scoop (Launch Lee) and Winget (@sitiom).\n\n* CI: Ported to GitHub actions (Erica Ferrua Edwardsdóttir).\n\n* Bug fixes:\n  github#107  \"Unknown file format\" when using AVIF on stdin (found by @ndren).\n  github#152  Broken linking with libwebp-1.3.1 (found by Vladimír Čunát).\n  [unfiled]   Fix make check with --without-tools (Samuel Thibault).\n  [unfiled]   Fix --duration not working well with still images (@Delgan).\n  [unfiled]   Fix sixel rendering of animations (@Delgan).\n  [unfiled]   Fix operator precedence in geometry calculation (Johan Mattsson).\n\n1.12.5 (2023-05-21)\n-------------------\n\nThis is a bugfix release.\n\n* Bug fixes:\n  github#123  Crash on canvas created with chafa_canvas_new_similar()\n              (reported by Erica Ferrua Edwardsdóttir).\n  github#141  Distortion when rowstride is not a multiple of 4 (reported by\n              @jstkdng).\n  [unfiled]   Missing comma in --help output (reported by @Freed-Wu).\n\n1.12.4 (2022-11-12)\n-------------------\n\nThis release improves support for Microsoft Windows and fixes several bugs.\n\n* MS Windows: Added support for Unicode command-line arguments.\n\n* MS Windows: Enabled support for building a DLL.\n\n* Improved quality of accelerated symbol picking (the default with -w 6 and\n  lower), especially along sharp edges.\n\n* The XWD loader now supports unaligned image data, which can occur when the\n  header is of an uneven length. Such images will no longer be rejected.\n\n* Bug fixes:\n  github#100  Reading image data from stdin fails on Windows (reported by\n              @TransparentLC).\n  github#104  Artifacts with transparent animations on Kitty (reported by Akash\n              Patel).\n  github#112  Bad documentation for -c default (reported by Jakub Wilk).\n  github#113  Autogen/build fails on CentOS 7 (partial solution) (reported by\n              Ivan Shatsky).\n  huntr.dev   Uncontrolled memory allocation in lodepng (reported by\n              @JieyongMa).\n  [unfiled]   -lm should not be in pkg-config Libs: list (Tomasz Kłoczko).\n  [unfiled]   The --watch switch was broken with the introduction of --animate.\n\n1.12.3 (2022-07-01)\n-------------------\n\nA bug crept into the previous release that prevented successful package builds\nin some environments. This has been fixed.\n\n* Increased GLib minimum version to 2.26.\n\n* Enabled a few compiler warnings not included in '-Wall -Wextra' in order to\n  catch more potential issues early. Also started using '-Werror' selectively.\n\n* Silenced deprecation warnings for older GLib APIs that we would like to\n  keep using a bit longer.\n\n* Bug fixes:\n  github#96  Regression: Fails to build on Linux/Debian (reported by Mo Zhou).\n\n1.12.2 (2022-06-28)\n-------------------\n\nThis release adds basic support for Microsoft Windows.\n\n* Made everything compile for the x86_64-w64-mingw32 target using gcc.\n\n* Added support for the Windows 10 Command Prompt.\n\n* Improved error reporting.\n\n1.12.1 (2022-06-20)\n-------------------\n\nThis release fixes one important input validation bug and several instances of\nundefined behavior revealed by fuzzing.\n\n* Increased GLib minimum version to 2.20.\n\n* Added 12 new test inputs, including bad inputs to handle gracefully.\n\n* Added a few symbols to API documentation that were accidentally left out.\n\n* Bug fixes:\n  huntr.dev  CVE-2022-2061: Out-of-bounds read in libnsgif's lzw_decode()\n             (Sudhakar Verma of CrowdStrike).\n  [unfiled]  Undefined behavior in libnsgif due to uninitialized frame fields.\n  [unfiled]  Signed integer overflow in chafa_pack_color().\n  [unfiled]  Integer overflow in normalization pass on some images.\n  [unfiled]  Potential unaligned access with corrupt XWD images.\n  [unfiled]  Integer overflow in quantization on some images.\n  [unfiled]  Calculating offset from NULL pointer in LodePNG.\n\n1.12.0 (2022-06-06)\n-------------------\n\nThis is a feature release with new image loaders aimed at phasing out\nImageMagick. It also has new convenience functions, character art improvements,\ntests and bug fixes.\n\nSpecial thanks go to the very fine security researchers at huntr.dev for their\nhelp in hardening Chafa over the last few releases.\n\n* The ImageMagick dependency is now optional and deprecated. Packagers are\n  encouraged to drop the ImageMagick dependency (--without-imagemagick) and\n  add direct dependencies on relevant image codecs. ImageMagick support will be\n  removed in a future release.\n\n* Added image loaders for the following formats: JPEG, SVG, TIFF, WebP. Like\n  the existing GIF, PNG and XWD loaders, these are much faster and generally\n  safer than their ImageMagick counterparts. If ImageMagick is enabled, it will\n  be used as a fallback. Supported image loaders will be listed in the\n  --version output.\n\n* Implemented a 16/8 mode producing 8 colors and an additional 8 bright\n  foreground-only colors for a total of 16 foreground and 8 background colors.\n  When using ANSI escape sequences in symbol mode, the sequence for bold text\n  is used to enable bright colors. This scheme corresponds to that of the IBM\n  PC's VGA hardware text modes and was popular with terminal emulators in the\n  late 1980s to early 2000s.\n\n  With a few tweaks, output from this mode can be turned into ANSI art scene\n  .ANS files compatible with utilities like the wonderful Ansilove, e.g:\n\n  $ chafa -f symbols -c 16/8 -s 80 --symbols space+solid+half --fill stipple \\\n      in.jpg | tr -d '\\n' | iconv -c -f utf8 -t cp437 > out.ans\n  $ ansilove out.ans -o out.png\n\n* New builtin Latin symbols (available with --symbols latin). This class\n  comprises most of the symbols from the Latin-1 Supplement, Latin Extended-A\n  and -B, IPA Extensions and Spacing Modifier Letters plus a few Latin-like\n  symbols from other ranges, using Terminus as the reference font. The ASCII\n  class is also a subset of this class.\n\n* Reworked ASCII symbols to be more representative of modern terminal fonts. As\n  with the other Latin ranges, the reference font is now Terminus.\n\n* New option: --scale <n>. This takes a real number specifying the on-screen\n  scaling factor relative to the input's pixel size, respecting the terminal\n  size. The special argument 'max' will fit the output to the terminal. The\n  defaults are 1.0 for iTerm, Kitty and sixels, and 4.0 for symbols. Suggested\n  by Lionel Dricot in github#84.\n\n* Deprecated option: --zoom. Use '--scale max' instead.\n\n* Added a battery of simple tests that can be run with 'make check'.\n\n* Made 'configure' friendlier. It's now more lenient with dependencies, and\n  the summary is more detailed and colorized if possible.\n\n* Bug fixes:\n  github#62  Too big alloc on bogus terminal dimensions (reported by\n             Sotiris Papatheodorou and Mo Zhou).\n  huntr.dev  Null pointer dereference caused by calling post_func on unused\n             batch entries (reported by @han0nly).\n  [unfiled]  Small memory leaks when using iTerm and Kitty formats.\n  [unfiled]  Wide symbol coverages leaked in symbol map destructor.\n  [unfiled]  No error code if files failed to load.\n\n1.10.3 (2022-05-04)\n-------------------\n\nThis release fixes multiple input validation issues. These were found in the\n'chafa' command-line tool and do not affect the library backend.\n\n* Improved input validation in the XWD loader.\n\n* Bug fixes:\n  huntr.dev  Buffer over-read when compiled with -O0 or non-x86 target\n             (reported by @JieyongMa).\n\n1.10.2 (2022-04-25)\n-------------------\n\nThis release adds security/responsible disclosure guidelines and fixes a few\nissues with input validation in the 'chafa' command-line tool.\n\n* Added disclosure guidelines in SECURITY.md (suggested by Jamie Slome).\n\n* Bug fixes:\n  huntr.dev  Null pointer dereference in libnsgif with crafted GIF file\n             (reported by @JieyongMa).\n  [unfiled]  File magic would not effectively rule out internal loaders.\n  [unfiled]  Very big images could cause absurd allocation requests triggering\n             an abort in the loader.\n\n1.10.1 (2022-04-04)\n-------------------\n\nThis release brings one small but important fix and a few minor corrections\nto the documentation.\n\n* Bug fixes:\n  github#87  Garbled last row of pixels on some images (found by @hydrargyrum).\n  [unfiled]  Correctly label new functions since 1.10.\n\n1.10.0 (2022-03-20)\n-------------------\n\nThis is a feature release focused on compatibility, presentation and\nergonomics.\n\n* New option: --animate <bool>. On by default. Can be turned off to replace\n  animations with a still frame. Suggested by Lionel Dricot in github#79. \n\n* New option: --center or -C <bool>. Off by default. Can be turned on to center\n  images. Suggested by Lionel Dricot in github#83.\n\n* New options: --margin-bottom <n> and --margin-right <n>. These permit\n  using all available space (with --margin-bottom 0) or some smaller amount.\n  Suggested by @crmabs in github#61.\n\n* New option: --polite <bool>. On by default. Can be turned off to correct\n  issues caused by previous terminal state (e.g. no sixel scrolling) and\n  improve presentation (e.g. by temporarily hiding the cursor). This can\n  leave the terminal in an altered state, which is somewhat rude.\n\n* New option: --threads <n>. Allows manually specifying the number of threads\n  to use. Defaults to one per detected logical CPU core.\n\n* When invoked with redirected input and no arguments, act like a filter as\n  if invoked with \"-\". Here's an example that downloads an image, converts it\n  to Unicode text and mails it to hello@example.com:\n\n  $ curl https://hpjansson.org/chafa/img/lc.jpg \\\n    | chafa -f symbols -c none -s 77 --invert --dither bayer \\\n    | mailx hello@example.com\n\n* If input or output is being redirected, default to playing animations only\n  once instead of looping forever. This can be overridden with '-d inf'.\n\n* Replaced obsolete Autoconf macros (Mikel Olasagasti Uranga).\n\n* Improved image loaders:\n  - GIF: Load GIF87a images as well as GIF89a.\n  - PNG: Add an internal copy of LodePNG, bypassing ImageMagick. This improves\n    performance and helps with eventually phasing out the latter.\n  - XWD: Support images generated by 'convert'.\n\n* Improved terminal support:\n  - Contour: Enable sixel support (Dmitry Atamanov).\n  - foot: Open-ended TERM string matching (Daniel Eklöf).\n  - Konsole: Enable sixel support (Dmitry Atamanov).\n  - WezTerm: Enable sixel support.\n\n* Bug fixes:\n  github#76  Smolscale uses too much stack space (found by Hoang Nguyen).\n  github#81  Chafa --version is returned to stderr, not stdout (found by\n             Lionel Dricot).\n  [unfiled]  Potential memory overrun when using Floyd-Steinberg dithering\n             in symbols mode.\n  [unfiled]  iTerm2 compatibility issue with WezTerm and possibly others.\n\n1.8.0 (2021-08-31)\n------------------\n\nThis is a major feature release.\n\n* Added basic support for the Kitty and iTerm2 graphics protocols. These are\n  enabled automatically when corresponding terminal support is detected, or\n  manually with '-f kitty' or '-f iterm'.\n\n* Implemented an 8-color mode, selectable with '-c 8' (Øyvind Kolås).\n\n* Implemented a foreground-only switch, '--fg-only'. This produces character\n  art using foreground colors only, and will avoid modifying or resetting\n  the background color. Looks best with non-contiguous symbols (e.g. ascii).\n\n* Added builtins for Japanese kana fullwidth symbols. These can now be used\n  without loading any external fonts (try '-c none --symbols wide').\n\n* Added builtins for legacy computer symbols (mainly wedges and sextant\n  blocks). These were widely used in PETSCII and Teletext, and can be enabled\n  using --symbols or --fill with their respective tags: legacy, wedge and\n  sextant (Øyvind Kolås).\n\n* Since there is a growing number of builtin symbols that may not be available\n  everywhere, the default selection has been restricted to the widely supported\n  block and border sets.\n\n* If possible, we now select a visually blank character from the specified\n  symbol/fill sets instead of hardcoding ASCII space for featureless cells.\n  One practical upshot of this is that the constant-width braille range can\n  be used to produce consistent images even in contexts with variable-width\n  fonts. U+2800 (BRAILLE PATTERN BLANK) will then be used in blank cells.\n\n* Improved terminal size detection when used with pipelines and redirection.\n  This should now produce an image properly sized for your terminal:\n\n  $ curl https://i.imgur.com/WFDEFVg.jpeg | chafa - | tee out\n\n* ChafaCanvas gained API functions for programmatically getting and setting\n  character cell contents. These are used in a new example in tests/ncurses.c\n  demonstrating ncurses integration.\n\n* Made --disable-rpath the default in order to simplify packaging.\n\n* Added a HACKING file featuring a much needed release checklist.\n\n* Improved terminal support:\n  - Ctx will now use optimizing REP sequences at high -O levels.\n  - foot now defaults to sixels (Daniel Eklöf).\n  - iTerm2 now defaults to the iTerm2 protocol.\n  - Kitty now defaults to the Kitty protocol.\n  - st now defaults to truecolor symbols (Roman Wagner).\n\n* Bug fixes:\n  github#44  Missing error handling on stdout writes (reported by Markus\n             Elfring).\n  [unfiled]  Solid symbols erroneously replaced by fill in FGBG mode.\n  [unfiled]  Integer formatter was not using fast path for 8-bit values.\n  [unfiled]  Wrong default cell aspect used for sixel graphics.\n\n1.6.1 (2021-06-03)\n------------------\n\nThis is a bugfix release.\n\n* Add NOCONFIGURE variable to autogen.sh to skip configure (Biswapriyo Nath).\n\n* Bug fixes:\n  github#50  SIGBUS while loading huge GIFs (reported by Grzegorz Koperwas).\n  github#52  Produces small glitches in output with some images (reported by\n             Sami Farin).\n  github#54  Haiku port fails on 32bit (Luc Schrijvers).\n  [unfiled]  Exclude RTL code points that could break the output.\n  [unfiled]  Apple Terminal lacks truecolor support, so make it default to 256\n             colors (reported by Behdad Esfahbod).\n  [unfiled]  Fix typo affecting middle dot symbol.\n\n1.6.0 (2021-01-15)\n------------------\n\nThis release adds major features and important fixes to both libchafa and\nthe chafa command-line tool.\n\n* Added support for fullwidth symbols that take up two character\n  cells. These are common in East Asian scripts. Single-cell and\n  double-cell symbols can be mixed, and -f symbols mode will use both\n  if possible.\n\n* New symbol tags: Alpha, digit, alnum, narrow, wide, ambiguous, ugly, bad.\n  \"Ambiguous\" symbols have uncertain widths and may render poorly in some\n  terminals. \"Ugly\" denotes symbols that are unsuitable for Chafa's\n  cell-based graphics (multicolor emoji, ideographic descriptors, etc).\n  \"Bad\" is a superset of these two categories. Bad symbols are always\n  excluded unless explicitly enabled with e.g. CHAFA_SYMBOL_TAG_BAD\n  (--symbols +bad in the frontend).\n\n* The font loader (--glyph-file option) now does a better job with\n  proportional fonts.\n\n* Added options for controlling lossless optimization of output. Currently,\n  attribute reuse and character repetition (REP sequence) are implemented.\n\n* Added -O option to the frontend. This controls the optimization level.\n\n* Added a simple abstraction layer for terminal control sequences\n  (ChafaTermInfo and ChafaTermDb). This allows for improved terminal\n  support.\n\n* FbTerm is now supported with TERM=fbterm in the environment.\n\n* Bug fixes:\n  github#43  Fix signal handler (reported by Markus Elfring).\n  [unfiled]  Crash when invalid font paths were passed on command line.\n  [unfiled]  Small typo in fontgen's README (Tim Gates).\n  [unfiled]  Bad contrast adjustment in images with transparency.\n\n1.4.1 (2020-04-10)\n------------------\n\nThis is a bugfix release.\n\n* Added configure option --disable-rpath. This allows packagers to\n  prevent the hard-coded library search path from being embedded in\n  the chafa command-line tool (Mo Zhou, github#39).\n\n* Added defaults for the yaft terminal.\n\n* Bug fixes:\n  github#40  Fails to build on hurd-i386 + other i386 (reported by\n             Mo Zhou).\n  [unfiled]  Rare failed assert with mostly transparent sixel image\n             (reported by Reddit user spryfigure).\n  [unfiled]  Minor typo in function docstring.\n\n1.4.0 (2020-04-01)\n------------------\n\nThis release adds major features to both libchafa and the chafa\ncommand-line tool.\n\n* Added sixel graphics support. Chafa will automatically produce sixels\n  if the connected terminal supports it. It can also be forced using the\n  new -f or --format flag. This is a new implementation written from the\n  ground up to maximize throughput.\n\n* Added the --glyph-file option, which loads glyph-symbol mappings from\n  any file format supported by FreeType (TTF, PCF, etc). This allows for\n  custom font support and improved symbol selection.\n\n* Added the --speed option specifying animation speed. It accepts a\n  unitless multiplier, a specific number of frames per second, or \"max\"\n  for maximum throughput.\n\n* There are now two ways to assign colors to symbol cells. Formerly,\n  this was done based on the average color of the covered area. The new\n  default is to use the median color, which produces sharper edges,\n  but is slightly more prone to high-frequency noise. The new option\n  --color-extractor selects the method to employ.\n\n* When displaying multiple files, the default delay between files has\n  been changed from three seconds to zero. Animations will still play\n  through once. This can be overridden on the chafa command line with -d\n  or --duration.\n\n* Minor tweaks to built-in symbols.\n\n* Performance improvements:\n  - Halved pixel storage requirements from 64 bits to 32 bits, resulting\n    in significant memory savings.\n  - Now builds with -ffast-math, yielding a big speedup for DIN99d.\n\n1.2.2 (2020-03-02)\n------------------\n\nThis minor release fixes a bug causing builds linking with libchafa to\nfail.\n\n* Bug fixes:\n  github#34  Cannot compile example (found by Petr Bílek).\n\n1.2.1 (2019-08-15)\n------------------\n\nThis minor release fixes a few bugs and improves terminal detection.\n\n* Detect kitty and mlterm virtual terminals and apply optimal defaults\n  accordingly.\n\n* Make Automake build more strict and fix a few compatibility nits.\n\n* Bug fixes:\n  github#30  Failed to build on hurd-i386 (found by Mo Zhou).\n  [unfiled]  Crash on certain broken GIFs.\n\n1.2.0 (2019-08-04)\n------------------\n\nThis is a feature and performance release.\n\n* Added --dither, --dither-grain and --dither-intensity options. These\n  allow for sub-cell dithering in quantized modes (none, 2, 16, 240\n  and 256). Especially beneficial when used with -p off.\n\n* Added API for ordered and diffusion-based dithering in quantization.\n\n* Added API support for multiple 8bpc pixel modes: RGB, BGR, RGBA, BGRA,\n  ARGB, ABGR with either premultiplied or unassociated alpha channels.\n\n* Smooth scaling is now done internally, meaning libchafa consumers no\n  longer need to prescale images.\n\n* Implemented a machine learning tool that can generate custom fonts\n  for efficient image reproduction from a provided dataset. This is\n  left uninstalled since it's still experimental (Mo Zhou).\n\n* Throughput improvements:\n  - GIF animations now start playing instantly.\n  - GIF CPU overhead reduced by 75%, peak memory use down 95%-99% (!).\n  - XWD common case CPU overhead down 60-70%, peak memory down 70%.\n  - Additional halving of CPU overhead in 240- and 256-color modes.\n  - Streamlined pixel pipeline for better parallelization.\n\n* Installation instructions:\n  - New: Guix (Guy Fleury Iteriteka).\n  - New: openSUSE (Michael Vetter).\n\n* Bug fixes:\n  [unfiled]  Certain SVGs had transparency replaced with a white\n             background (nemo).\n  [unfiled]  -lm dependency belongs in libchafa, not frontend.\n\n1.0.1 (2018-12-18)\n------------------\n\n* Bug fixes:\n  [unfiled]  Bad geometry calculation when specifying one dimension\n             and omitting the other.\n\n1.0.0 (2018-12-16)\n------------------\n\nThis release adds features, greatly improves performance and fixes\nseveral bugs. Programs written for the command line and libchafa\ninterfaces in this release will be supported by future versions in\nthe 1.y.z series without the need for modification or recompilation.\n\n* Added ability to specify \"fill\" symbols to use as halftone for better\n  color approximation. This can be used to augment the regular symbol\n  selection or to replace it (with --symbols none) for a different,\n  purely intensity-based effect.\n\n* Improved preprocessing in 2-color and 16-color modes. This is optional\n  (default: on) and consists of a contrast boost and, for the 16-color\n  mode, an additional saturation boost. The new implementation lives in\n  libchafa and does not rely on ImageMagick. It is multithreaded, and due\n  to its specialized nature, much faster.\n\n* Added --watch option to continuously monitor a file.\n\n* Added more symbols:\n  - Most of the ASCII range.\n  - Braille range (github#2, thanks to Adam Borowski).\n  - Miscellaneous math and scanline symbols.\n  - More geometric symbols (black circle, triangles) (Mo Zhou).\n\n* Throughput improvements:\n  - Fast symbol candidate set reduction by median cut.\n  - Parallel processing with threads.\n  - Prescaling using bilinear interpolation instead of lanczos.\n\n* Installation instructions:\n  - New: Arch (github#12, Felix Yan).\n  - New: Debian testing/unstable (github#9, Mo Zhou).\n  - New: Fedora (github#14, Ricardo Arguello).\n  - Mention missing dependency for Debian (github#13, @medusacle).\n\n* Bug fixes:\n  github#1   -c none produces pointless \\e[0m after every line (found by\n             Adam Borowski).\n  github#3   Compile error (found by Lajos Papp).\n  github#4   AM_PROG_LIBTOOL is obsolete, replace it with LT_INIT\n             (Robert-André Mauchin).\n  github#5   Port chafa to i386 architecture (Mo Zhou).\n  github#7   Chafa should not return an error when being asked for\n             --version (Mo Zhou).\n  github#10  Fix detection of MagickWand methods (Felix Yan).\n  github#11  ImageMagick 7 support (found by Felix Yan).\n  github#21  chafa.c:547: pointless assignment (found by @dcb314).\n\n0.9.0 (2018-04-24)\n------------------\n\nInitial release.\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 2.8818359375,
          "content": "Chafa\n=====\n\nChafa is a command-line utility that converts image data, including\nanimated GIFs, into graphics formats or ANSI/Unicode character art suitable\nfor display in a terminal. It has broad feature support, allowing it to be\nused on devices ranging from historical teleprinters to modern terminal\nemulators and everything in between.\n\nThe core functionality is provided by a C library with a public,\nwell-documented API.\n\nBoth library and frontend tools are covered by the Lesser GPL license,\nversion 3 or later (LGPLv3+).\n\nFor the most up-to-date information, please see https://hpjansson.org/chafa/\n\nInstalling with package manager\n-------------------------------\n\nChafa is available as packages for many software distributions. A few are\nlisted below, along with their command-line installation instructions:\n\nArch Linux .... pacman -S chafa\nBrew .......... brew install chafa\nDebian ........ apt install chafa\nFedora ........ dnf install chafa\nFreeBSD ....... pkg install chafa\nGentoo ........ emerge media-gfx/chafa\nGuix .......... guix install chafa\nKali Linux .... apt install chafa\nMacPorts ...... port install chafa\nOpenBSD ....... pkg_add chafa\nopenSUSE ...... zypper in chafa\nUbuntu ........ apt install chafa\n\nOn Windows, Chafa can be installed via Scoop and Winget:\n\nScoop ....... scoop install chafa\nWinget ....... winget install hpjansson.Chafa\n\nSee https://hpjansson.org/chafa/download/ for more.\n\nInstalling from tarball\n-----------------------\n\nYou will need GCC, make and the GLib development package installed to\ncompile Chafa from a release tarball. If you want to build the\ncommand-line tool `chafa` and not just the library, you will\nadditionally need the ImageMagick development packages.\n\nPrebuilt documentation is included in the release tarball, and you do not\nneed gtk-doc unless you want to make changes/rebuild it.\n\nAfter unpacking, cd to the toplevel directory and issue the following\nshell commands:\n\n$ ./configure\n$ make\n$ sudo make install\n\nInstalling from git repository\n------------------------------\n\nYou will need GCC, make, Autoconf, Automake, Libtool and the GLib\ndevelopment package installed to compile Chafa from its git repository. If\nyou want to build the command-line tool `chafa` and not just the library,\nyou will additionally need development packages for:\n\n* FreeType2\n* libjpeg (optional)\n* librsvg (optional)\n* libtiff (optional)\n* libwebp (optional)\n* ImageMagick (optional, deprecated)\n\nIf you want to build documentation, you will also need gtk-doc.\n\nStart by cloning the repository:\n\n$ git clone https://github.com/hpjansson/chafa.git\n\nThen cd to the toplevel directory and issue the following shell commands:\n\n$ ./autogen.sh\n$ make\n$ sudo make install\n\nPython bindings\n---------------\n\nErica Ferrua Edwardsdóttir maintains excellent Python bindings for Chafa. If\nPython's your thing, check them out. They are easy to use and come with a\ndetailed tutorial:\n\nhttps://chafapy.mage.black/\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.646484375,
          "content": "<!-- This file is mostly readable as plain text, but it will look better\n  -- in a Markdown reader (try Frogmouth).\n  -- \n  -- Alternately, go to https://hpjansson.org/chafa/ in a web browser. -->\n\n<p align=\"center\"><a href=\"https://hpjansson.org/chafa/\"><img src=\"https://raw.githubusercontent.com/hpjansson/chafa/master/docs/chafa-logo.gif\" /></a></p>\n<p align=\"center\"><a href=\"https://github.com/hpjansson/chafa/actions/workflows/c-cpp.yml\"><img src=\"https://img.shields.io/github/actions/workflow/status/hpjansson/chafa/c-cpp.yml?style=for-the-badge\" alt=\"Master Build Status\" /></a>&emsp;<a href=\"https://hpjansson.org/chafa/download/\"><img src=\"https://img.shields.io/github/v/release/hpjansson/chafa?style=for-the-badge\" alt=\"Latest Release\" /></a>&emsp;<a href=\"https://matrix.to/#/#chafa:matrix.org\"><img src=\"https://img.shields.io/badge/friendly_chat-%23chafa%3Amatrix.org-blue?style=for-the-badge&logo=matrix\" alt=\"Friendly Chat\" /></a></p>\n<p align=\"center\"><a href=\"https://hpjansson.org/chafa/\">About</a> • <a href=\"https://hpjansson.org/chafa/gallery/\">Gallery</a> • <a href=\"https://hpjansson.org/chafa/download/\">Packages</a> • <a href=\"https://hpjansson.org/chafa/development/\">Development</a></p>\n\n## About\n\nChafa is a command-line utility that converts image data, including\nanimated GIFs, into graphics formats or ANSI/Unicode character art suitable\nfor display in a terminal. It has broad feature support, allowing it to be\nused on devices ranging from historical teleprinters to modern terminal\nemulators and everything in between.\n\nThe core functionality is provided by a C library with a public,\nwell-documented API.\n\nBoth library and frontend tools are covered by the Lesser GPL license,\nversion 3 or later (LGPLv3+).\n\nThe [official web pages](https://hpjansson.org/chafa/) and [C API\ndocumentation](https://hpjansson.org/chafa/ref/) can be found online. Check\nout the [gallery](https://hpjansson.org/chafa/gallery/) for screenshots.\n\n## Installing\n\nChafa is most likely packaged for your distribution, so if you're not\ngoing to hack on it, you're better off using\n[official packages](https://hpjansson.org/chafa/download/). If you want to\nbuild the latest and greatest yourself, read on.\n\nYou will need GCC, make, Autoconf, Automake, Libtool and the GLib\ndevelopment package installed to compile Chafa from its git repository. If\nyou want to build the command-line tool `chafa` and not just the library,\nyou will additionally need development packages for:\n\n* FreeType2. Often packaged as `libfreetype6-dev` or `freetype2-devel`.\n* libjpeg (optional). Look for `libjpeg-dev`, `libjpeg62-devel` or `libjpeg8-devel`.\n* librsvg (optional). Look for `librsvg2-dev` or `librsvg-devel`.\n* libtiff (optional). Look for `libtiff5-dev` or `libtiff-devel`.\n* libwebp (optional). Look for `libwebp-dev` or `libwebp-devel`.\n\nIf you want to build documentation, you will also need gtk-doc.\n\nStart by cloning the repository:\n\n```sh\n$ git clone https://github.com/hpjansson/chafa.git\n```\n\nThen cd to the toplevel directory and issue the following shell commands:\n\n```sh\n$ ./autogen.sh\n$ make\n$ sudo make install\n```\n\nThat should do it!\n\n## Python bindings\n\n[Erica Ferrua Edwardsdóttir](https://mage.black/) maintains\n[excellent Python bindings](https://chafapy.mage.black/) for Chafa. If\nPython's your thing, check them out. They are easy to use and come with a\n[detailed tutorial](https://chafapy.mage.black/usage/tutorial.html).\n\n## JavaScript bindings\n\n[Héctor Molinero Fernández](https://hector.molinero.dev/) maintains\n[wonderful JavaScript bindings](https://github.com/hectorm/chafa-wasm)\nbuilt around his WebAssembly port. These are available from NPM and can\nbe used in Node.js, web browsers, and more.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.4052734375,
          "content": "# Security Policies and Procedures\n\nThis document outlines security procedures and general policies for Chafa.\n\n## Reporting a Bug\n\nWe are grateful for the testing and analysis carried out by the community. All\nbug reports are taken seriously.\n\nNormally, bugs can be filed directly in the public GitHub issue tracker, but if\nyou believe there is a security impact, please contact the lead maintainer at\nhis e-mail address <hpj@hpjansson.org> instead.\n\nWe will most likely respond within 48 hours, but since Chafa is a volunteer\nproject, please allow up to a week for those rare times we're away from the\nkeyboard or general connectivity.\n\nWhen a fix is published, you will receive credit under your real name or bug\ntracker handle in the NEWS document and possibly elsewhere (GitHub, blog post,\netc). If you prefer to remain anonymous or pseudonymous, you should mention\nthis in your e-mail.\n\n## Disclosure Policy\n\nThe maintainer will coordinate the fix and release process, involving the\nfollowing steps:\n\n  * Confirm the problem and determine the affected versions.\n  * Audit code to find any potential similar problems.\n  * Prepare fixes for all releases still under maintenance. These fixes will be\n    released as fast as possible.\n\nYou may be asked to provide further information in pursuit of a fix.\n\n## Comments on this Policy\n\nIf you have suggestions on how this process could be improved, please submit an\nissue or pull request.\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 3.43359375,
          "content": "TODO\n====\n\nIf you're particularly interested in any of this, send patches/pull requests\nor maybe just prod me a little.\n\nMinor Features/UX\n-----------------\n\n- Accept -o, --output to write to file.\n- Verbose output. Show file names. Call it --annotate.\n- Add a --test option to print a test page.\n- Add a --show-symbols op to print matching symbols.\n- If FG color is transparent, see if we can use an inverted symbol and swap\n  with BG.\n  - Avoid using transparent foreground due to XFCE Terminal (other terminals?)\n    weird handling with background picture set?\n    - Except in FGBG modes.\n- Test with more terminals.\n  - PuTTY on Windows 8, 10?\n    - Windows 7 fonts support half, solid, some borders.\n  - Terminology.\n    - Emulate tycat.\n  - Emacs ansi-term.\n  - Emacs shell (TERM=dumb).\n  - Come up with some kind of support matrix.\n- More symbols/symbol aliases:\n  - CP437.\n- Output to retro art formats:\n  - RexPaint.\n  - lvllvl.com.\n  - CharPad/CharPad Pro.\n  - Marq's PETSCII Editor (http://www.kameli.net/marq/?page_id=2717).\n  - PabloDraw.\n  - ANSILove (direct to .ANS, other formats?).\n  - Others?\n- More image loaders:\n  - BMP. The GIMP has a fairly complete decoder.\n  - XPM. https://en.wikipedia.org/wiki/X_PixMap\n  - PBM, PGM, PPM. https://en.wikipedia.org/wiki/Netpbm\n- Run image decoders (and Chafa backend?) in sandboxed subprocess.\n- \"Auto\" modes for ChafaCanvasMode and ChafaPixelMode.\n\nMajor features\n--------------\n\n- Selection from multiple internal named font bitmap sets (IBM, C64, etc).\n- Custom palettes.\n  - External (e.g. in GIMP format, or extract from image) or named internal.\n  - Using different palettes for BG and FG allows for retro modes like the\n    C64's Extended Color Character Mode (ECM).\n- Pixmap export (raw image buffer from backend, PNG or TIFF export in frontend).\n- Lossy/lossless intra-frame compression. Data rate regulated:\n  - By desired output size.\n  - By maximum desired per-cell error.\n  - By total error?\n  - Slide window over row, calculate mean colors, calc error?\n- Lossy/lossless delta compression.\n  - Double-buffer with a checkpoint call to swap.\n    - Dirty map not enough in case each frame is composited in multiple steps.\n  - Emit difference between checkpoint state and current.\n  - Optimization: Keep a rect or region of changed area.\n  - Multiply previous symbol's new error with weight to increase or decrease\n    stability (prevent flicker)?\n- Drawing context with clip rect/region, etc.\n  - Potentially a context stack.\n  - Getting into NCurses territory...\n- Video playback.\n- Interactive UI (may need to be in separate tool).\n\nOptimization\n------------\n\n- Preload next image/frame in delay phase.\n- Don't calculate error if we're only using a single symbol (e.g. vhalf).\n\nThe Fine Material\n-----------------\n\n- Tips.\n  - For scrolling, use e.g. chafa input.jpg -s 200 | less -S\n  - Rate-controlled playback with e.g. cat input.txt | pv -qL 100k\n  - Playback with awk + proper inter-frame delay.\n  - X11 applications in terminal\n    $ Xvfb :99 -ac -fbdir t -screen 0 1440x900x24 &\n    $ DISPLAY=:99 lament -root &\n    $ chafa --watch t/Xvfb_screen0\n  - gnome-shell in terminal\n    $ XDG_SESSION_TYPE=x11 DISPLAY=:99 gnome-shell\n    - Run as different user.\n  - Using (unreleased) ffmpeg driver:\n    $ ./ffmpeg -i movie.mkv -pix_fmt rgba -f chafa -color 16 -symbols vhalf,space -fill ascii -\n  - Compact listing of icons:\n    $ montage -tile 6x -background none -geometry 64x64+1+1 /usr/share/icons/Mint-X/*/16/*.png - \\\n      | chafa -s 80\n"
        },
        {
          "name": "acinclude.m4",
          "type": "blob",
          "size": 3.7138671875,
          "content": "# From GLib.\n#\n# Checks the location of the XML Catalog\n# Usage:\n#   JH_PATH_XML_CATALOG([ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n# Defines XMLCATALOG and XML_CATALOG_FILE substitutions\nAC_DEFUN([JH_PATH_XML_CATALOG],\n[\n  # check for the presence of the XML catalog\n  AC_ARG_WITH([xml-catalog],\n              AS_HELP_STRING([--with-xml-catalog=CATALOG],\n                             [path to xml catalog to use]),,\n              [with_xml_catalog=/etc/xml/catalog])\n  jh_found_xmlcatalog=true\n  XML_CATALOG_FILE=\"$with_xml_catalog\"\n  AC_SUBST([XML_CATALOG_FILE])\n  AC_MSG_CHECKING([for XML catalog ($XML_CATALOG_FILE)])\n  if test -f \"$XML_CATALOG_FILE\"; then\n    AC_MSG_RESULT([found])\n  else\n    jh_found_xmlcatalog=false\n    AC_MSG_RESULT([not found])\n  fi\n\n  # check for the xmlcatalog program\n  AC_PATH_PROG(XMLCATALOG, xmlcatalog, no)\n  if test \"x$XMLCATALOG\" = xno; then\n    jh_found_xmlcatalog=false\n  fi\n\n  if $jh_found_xmlcatalog; then\n    ifelse([$1],,[:],[$1])\n  else\n    ifelse([$2],,[AC_MSG_ERROR([could not find XML catalog])],[$2])\n  fi\n])\n\n# From GLib.\n#\n# Checks if a particular URI appears in the XML catalog\n# Usage:\n#   JH_CHECK_XML_CATALOG(URI, [FRIENDLY-NAME], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\nAC_DEFUN([JH_CHECK_XML_CATALOG],\n[\n  AC_REQUIRE([JH_PATH_XML_CATALOG],[JH_PATH_XML_CATALOG(,[:])])dnl\n  AC_MSG_CHECKING([for ifelse([$2],,[$1],[$2]) in XML catalog])\n  if $jh_found_xmlcatalog && \\\n     AC_RUN_LOG([$XMLCATALOG --noout \"$XML_CATALOG_FILE\" \"$1\" >&2]); then\n    AC_MSG_RESULT([found])\n    ifelse([$3],,,[$3\n])dnl\n  else\n    AC_MSG_RESULT([not found])\n    ifelse([$4],,\n       [AC_MSG_ERROR([could not find ifelse([$2],,[$1],[$2]) in XML catalog])],\n       [$4])\n  fi\n])\n\n# ===========================================================================\n#  https://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n# ===========================================================================\n#\n# SYNOPSIS\n#\n#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n#\n# DESCRIPTION\n#\n#   Check whether the given FLAG works with the current language's compiler\n#   or gives an error.  (Warnings, however, are ignored)\n#\n#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n#   success/failure.\n#\n#   If EXTRA-FLAGS is defined, it is added to the current language's default\n#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n#   force the compiler to issue an error when a bad flag is given.\n#\n#   INPUT gives an alternative input source to AC_COMPILE_IFELSE.\n#\n#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n#\n# LICENSE\n#\n#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n#\n#   Copying and distribution of this file, with or without modification, are\n#   permitted in any medium without royalty provided the copyright notice\n#   and this notice are preserved.  This file is offered as-is, without any\n#   warranty.\n\nAC_DEFUN([AX_CHECK_COMPILE_FLAG],\n[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\nAS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\nAC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n    [AS_VAR_SET(CACHEVAR,[yes])],\n    [AS_VAR_SET(CACHEVAR,[no])])\n  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\nAS_VAR_IF(CACHEVAR,yes,\n  [m4_default([$2], :)],\n  [m4_default([$3], :)])\nAS_VAR_POPDEF([CACHEVAR])dnl\n])dnl AX_CHECK_COMPILE_FLAGS\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 2.8564453125,
          "content": "#!/bin/sh\n# Run this to generate all the initial makefiles, etc.\n\nsrcdir=`dirname $0`\ntest -z \"$srcdir\" && srcdir=.\n\nORIGDIR=`pwd`\ncd $srcdir\nPROJECT=chafa\nTEST_TYPE=-f\nFILE=chafa/Makefile.am\nDIE=0\n\nMISSING_TOOLS=\n\nMY_ECHO=$(which echo)\n[ x$MY_ECHO = x ] && MY_ECHO=echo\n\n(autoconf --version) < /dev/null > /dev/null 2>&1 || {\n        MISSING_TOOLS=\"${MISSING_TOOLS}autoconf \"\n        DIE=1\n}\n\n(automake --version) < /dev/null > /dev/null 2>&1 || {\n        MISSING_TOOLS=\"${MISSING_TOOLS}automake \"\n        DIE=1\n}\n\n(libtoolize --version) < /dev/null > /dev/null 2>&1 || {\n        MISSING_TOOLS=\"${MISSING_TOOLS}libtool \"\n        DIE=1\n}\n\n(pkg-config --version) < /dev/null > /dev/null 2>&1 || {\n        MISSING_TOOLS=\"${MISSING_TOOLS}pkg-config \"\n        DIE=1\n}\n\nif test \"$DIE\" -eq 1; then\n        ${MY_ECHO}\n        ${MY_ECHO} -e \"Missing mandatory tools:\\e[1;31m $MISSING_TOOLS\"\n        ${MY_ECHO} -e \"\\e[0m\"\n        ${MY_ECHO} \"These are required for building Chafa from its git repository.\"\n        ${MY_ECHO} \"You should be able to install them using your operating system's\"\n        ${MY_ECHO} \"package manager (apt-get, yum, zypper or similar). Alternately\"\n        ${MY_ECHO} \"they can be obtained directly from GNU: https://ftp.gnu.org/gnu/\"\n        ${MY_ECHO}\n        ${MY_ECHO} \"If you can't provide these tools, you may still be able to\"\n        ${MY_ECHO} \"build Chafa from a tarball release: https://hpjansson.org/chafa/releases/\"\n        ${MY_ECHO}\nfi\n\nif test \"$DIE\" -eq 1; then\n        exit 1\nfi\n\ntest $TEST_TYPE $FILE || {\n        ${MY_ECHO}\n        ${MY_ECHO} \"You must run this script in the top-level $PROJECT directory.\"\n        ${MY_ECHO}\n        exit 1\n}\n\nif test x$NOCONFIGURE = x && test -z \"$*\"; then\n        ${MY_ECHO}\n        ${MY_ECHO} \"I am going to run ./configure with no arguments - if you wish \"\n        ${MY_ECHO} \"to pass any to it, please specify them on the $0 command line.\"\n        ${MY_ECHO}\nfi\n\nam_opt=\"--include-deps --add-missing\"\n\n${MY_ECHO} \"Running libtoolize...\"\nlibtoolize --force --copy\n\nGTKDOCIZE=$(which gtkdocize 2>/dev/null)\n\nif test -z $GTKDOCIZE; then\n        ${MY_ECHO} -e \"Missing optional tool:\\e[1;33m gtk-doc\"\n        ${MY_ECHO} -e \"\\e[0m\"\n        ${MY_ECHO} \"Without this, no developer documentation will be generated.\"\n        ${MY_ECHO}\n        rm -f gtk-doc.make\n        cat > gtk-doc.make <<EOF\nEXTRA_DIST =\nCLEANFILES =\nEOF\nelse\n        gtkdocize || exit $?\nfi\n\n${MY_ECHO} \"Running aclocal...\"\naclocal $ACLOCAL_FLAGS\n\n# optionally feature autoheader\n(autoheader --version)  < /dev/null > /dev/null 2>&1 && autoheader\n\n${MY_ECHO} \"Running automake...\"\nautomake -a $am_opt\n\n${MY_ECHO} \"Running autoconf...\"\nautoconf\n\ncd $ORIGDIR\n\nconf_flags=\"--enable-maintainer-mode\"\n\nif test x$NOCONFIGURE = x; then\n  ${MY_ECHO} Running $srcdir/configure $conf_flags \"$@\" ...\n  $srcdir/configure $conf_flags \"$@\" || exit 1\nelse\n  ${MY_ECHO} Skipping configure process.\nfi\n"
        },
        {
          "name": "chafa.pc.in",
          "type": "blob",
          "size": 0.2724609375,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\nincludedir=@includedir@\n\nName: Chafa\nDescription: Image to character art facsimile\nRequires: glib-2.0\nVersion: @VERSION@\nLibs: -L${libdir} -lchafa\nLibs.private: -lm\nCflags: -I${includedir}/chafa -I${libdir}/chafa/include\n"
        },
        {
          "name": "chafa",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 20.150390625,
          "content": "dnl ----------------------------\ndnl Automake/autoconf input file\ndnl ----------------------------\n\ndnl --- Package configuration ---\n\nm4_define([chafa_major_version], [1])\nm4_define([chafa_minor_version], [15])\nm4_define([chafa_micro_version], [0])\n\nm4_define([chafa_version], [chafa_major_version.chafa_minor_version.chafa_micro_version])\n\nAC_PREREQ([2.69])\nAC_INIT([chafa],[chafa_version],[hpj@hpjansson.org])\nAM_INIT_AUTOMAKE([1.9 foreign dist-xz no-dist-gzip -Wall])\n\nAC_CONFIG_SRCDIR([chafa.pc.in])\n\nAC_CONFIG_MACRO_DIRS([m4])\nAC_CONFIG_HEADERS(config.h)\n\nCHAFA_MAJOR_VERSION=chafa_major_version\nCHAFA_MINOR_VERSION=chafa_minor_version\nCHAFA_MICRO_VERSION=chafa_micro_version\nCHAFA_VERSION=chafa_version\n\nAC_SUBST(CHAFA_MAJOR_VERSION)\nAC_SUBST(CHAFA_MINOR_VERSION)\nAC_SUBST(CHAFA_MICRO_VERSION)\nAC_SUBST(CHAFA_VERSION)\n\nAC_DEFINE(CHAFA_MAJOR_VERSION, [chafa_major_version], [Chafa major version])\nAC_DEFINE(CHAFA_MINOR_VERSION, [chafa_minor_version], [Chafa minor version])\nAC_DEFINE(CHAFA_MICRO_VERSION, [chafa_micro_version], [Chafa micro version])\nAC_DEFINE_UNQUOTED(CHAFA_VERSION, \"$CHAFA_VERSION\", [Package version string])\n\ndnl --- Standard setup ---\n\nBASE_CFLAGS=\"-DGLIB_VERSION_MIN_REQUIRED=GLIB_VERSION_2_26 \\\n-Wall -Wextra -Wmissing-prototypes -Wwrite-strings -Wunused-macros -Wundef \\\n-Wpointer-arith -Werror=format-security\"\n\n# May want to look into -Wconversion sometime. For now, it's just too much noise.\n\nAC_USE_SYSTEM_EXTENSIONS\nAM_SANITY_CHECK\nAM_MAINTAINER_MODE\n\nAC_C_CONST\nAC_PROG_CC\nAC_PROG_CPP\nAC_PROG_INSTALL\nAM_PROG_AR\n\n# We keep this obsolete macro around to allow configuration on older systems\n# that require -std=c99, cf. CentOS 7. See github#113.\nAC_PROG_CC_STDC\n\nLT_INIT([win32-dll])\n\ndnl --- Check for extra compiler warnings ---\n\nAX_CHECK_COMPILE_FLAG([-Wstack-usage=131072],[BASE_CFLAGS=\"$BASE_CFLAGS -Wstack-usage=131072\"],,[-Werror])\nAX_CHECK_COMPILE_FLAG([-Wfor-loop-analysis],[BASE_CFLAGS=\"$BASE_CFLAGS -Wfor-loop-analysis\"],,[-Werror])\nAX_CHECK_COMPILE_FLAG([-Wlogical-op],[BASE_CFLAGS=\"$BASE_CFLAGS -Wlogical-op\"],,[-Werror])\nAX_CHECK_COMPILE_FLAG([-Wlogical-op-parentheses],[BASE_CFLAGS=\"$BASE_CFLAGS -Wlogical-op-parentheses\"],,[-Werror])\n\ndnl --- Required standards ---\n\ndnl POSIX.1-2008 is required to get SA_RESETHAND. We should get this by default\ndnl on most systems, but keep the check around just in case.\n\ndnl AC_MSG_CHECKING(for POSIX.1-2008)\ndnl AC_EGREP_CPP(posix_200809L_supported,\ndnl              [#define _POSIX_C_SOURCE 200809L\ndnl               #include <unistd.h>\ndnl               #ifdef _POSIX_VERSION\ndnl               # if _POSIX_VERSION == 200809L\ndnl               posix_200809L_supported\ndnl               # endif\ndnl               #endif\ndnl              ],\ndnl              [AC_MSG_RESULT(yes)],\ndnl              [AC_MSG_RESULT(no)\ndnl               AC_MSG_FAILURE([Implementation must conform to the POSIX.1-2008 standard.])]\ndnl )\ndnl \ndnl AC_DEFINE([_POSIX_C_SOURCE], [200809L], [Minimum POSIX standard we need])\n\ndnl --- Dependency check ---\n\nPKG_CHECK_MODULES(GLIB, glib-2.0 >= 2.26)\n\nAC_ARG_WITH(tools,\n  [AS_HELP_STRING([--without-tools], [don't build command-line tools [default=on]])],\n  ,\n  with_tools=yes)\nAS_IF([test \"$with_tools\" != no], [\n  dnl FreeType (required)\n  PKG_CHECK_MODULES(FREETYPE, [freetype2 >= 2.0.0],,\n    [AC_MSG_ERROR([You need freetype2-devel (or libfreetype6-dev on Debian) to build command-line tools, or pass --without-tools to build without.])])\n\n  dnl libavif (optional)\n  AC_ARG_WITH(avif,\n    [AS_HELP_STRING([--without-avif], [don't build AVIF loader [default=on]])],\n    ,\n    with_avif=yes)\n  AS_IF([test \"$with_avif\" != no], [\n    PKG_CHECK_MODULES(AVIF, [libavif],,\n      missing_rpms=\"$missing_rpms libavif-devel\"\n      missing_debs=\"$missing_debs libavif-dev\"\n      with_avif=no)])\n  AS_IF([test \"$with_avif\" != no], [AC_DEFINE([HAVE_AVIF], [1], [Define if we have AVIF support.])])\n\n  dnl libjpeg (optional)\n  AC_ARG_WITH(jpeg,\n    [AS_HELP_STRING([--without-jpeg], [don't build JPEG loader [default=on]])],\n    ,\n    with_jpeg=yes)\n  AS_IF([test \"$with_jpeg\" != no], [PKG_CHECK_MODULES(JPEG, [libjpeg],,\n    missing_rpms=\"$missing_rpms libjpeg-devel\"\n    missing_debs=\"$missing_debs libjpeg-dev\"\n    with_jpeg=no)])\n  AS_IF([test \"$with_jpeg\" != no], [AC_DEFINE([HAVE_JPEG], [1], [Define if we have JPEG support.])])\n\n  dnl librsvg (optional)\n  AC_ARG_WITH(svg,\n    [AS_HELP_STRING([--without-svg], [don't build SVG loader [default=on]])],\n    ,\n    with_svg=yes)\n  AS_IF([test \"$with_svg\" != no], [PKG_CHECK_MODULES(SVG, [librsvg-2.0],,\n    missing_rpms=\"$missing_rpms librsvg-devel\"\n    missing_debs=\"$missing_debs librsvg2-dev\"\n    with_svg=no)])\n  AS_IF([test \"$with_svg\" != no], [AC_DEFINE([HAVE_SVG], [1], [Define if we have SVG support.])])\n\n  dnl libtiff (optional)\n  AC_ARG_WITH(tiff,\n    [AS_HELP_STRING([--without-tiff], [don't build TIFF loader [default=on]])],\n    ,\n    with_tiff=yes)\n  AS_IF([test \"$with_tiff\" != no], [PKG_CHECK_MODULES(TIFF, [libtiff-4],,\n    missing_rpms=\"$missing_rpms libtiff-devel\"\n    missing_debs=\"$missing_debs libtiff-dev\"\n    with_tiff=no)])\n  AS_IF([test \"$with_tiff\" != no], [AC_DEFINE([HAVE_TIFF], [1], [Define if we have TIFF support.])])\n\n  dnl libwebp (optional)\n  AC_ARG_WITH(webp,\n    [AS_HELP_STRING([--without-webp], [don't build WebP loader [default=on]])],\n    ,\n    with_webp=yes)\n  AS_IF([test \"$with_webp\" != no], [\n    PKG_CHECK_MODULES(WEBP, [libwebp libwebpdemux],,\n      missing_rpms=\"$missing_rpms libwebp-devel\"\n      missing_debs=\"$missing_debs libwebp-dev\"\n      with_webp=no)])\n  AS_IF([test \"$with_webp\" != no], [AC_DEFINE([HAVE_WEBP], [1], [Define if we have WebP support.])])\n\n  dnl libjxl (optional)\n  AC_ARG_WITH(jxl,\n    [AS_HELP_STRING([--without-jxl], [don't build JXL loader [default=on]])],\n    ,\n    with_jxl=yes)\n  AS_IF([test \"$with_jxl\" != no], [\n    PKG_CHECK_MODULES(JXL, [libjxl libjxl_threads],,\n      missing_rpms=\"$missing_rpms libjxl-devel\"\n      missing_debs=\"$missing_debs libjxl-dev\"\n      with_jxl=no)])\n  AS_IF([test \"$with_jxl\" != no], [AC_DEFINE([HAVE_JXL], [1], [Define if we have JXL support.])])\n])\n\nAM_CONDITIONAL([WANT_TOOLS], [test \"$with_tools\" != no])\nAM_CONDITIONAL([HAVE_JPEG], [test \"$with_tools\" != no -a \"$with_jpeg\" != no])\nAM_CONDITIONAL([HAVE_SVG], [test \"$with_tools\" != no -a \"$with_svg\" != no])\nAM_CONDITIONAL([HAVE_TIFF], [test \"$with_tools\" != no -a \"$with_tiff\" != no])\nAM_CONDITIONAL([HAVE_WEBP], [test \"$with_tools\" != no -a \"$with_webp\" != no])\nAM_CONDITIONAL([HAVE_AVIF], [test \"$with_tools\" != no -a \"$with_avif\" != no])\nAM_CONDITIONAL([HAVE_JXL], [test \"$with_tools\" != no -a \"$with_jxl\" != no])\n\n# Used by gtk-doc's fixxref.\nGLIB_PREFIX=\"`$PKG_CONFIG --variable=prefix glib-2.0`\"\nAC_SUBST(GLIB_PREFIX)\n\ndnl --- Documentation ---\n\n# gtkdocize greps for ^GTK_DOC_CHECK and parses it, so you need to have\n# it on its own line.\nm4_ifdef([GTK_DOC_CHECK], [\nGTK_DOC_CHECK([1.20], [--flavour no-tmpl])\n],[\nAM_CONDITIONAL([ENABLE_GTK_DOC],[false])\n])\n\nAC_ARG_ENABLE(man,\n              [AS_HELP_STRING([--enable-man],\n                              [generate man pages [default=auto]])],,\n              enable_man=maybe)\n\nAS_IF([test \"$enable_man\" != no], [\n  AC_PATH_PROG([XSLTPROC], [xsltproc])\n  AS_IF([test -z \"$XSLTPROC\"], [\n    AS_IF([test \"$enable_man\" = yes], [\n      AC_MSG_ERROR([xsltproc is required for --enable-man])\n    ])\n    enable_man=no\n  ])\n])\n\nAS_IF([ test \"$enable_man\" != no ], [\n  dnl check for DocBook DTD in the local catalog\n  JH_CHECK_XML_CATALOG([-//OASIS//DTD DocBook XML V4.1.2//EN],\n     [DocBook XML DTD V4.1.2], [have_docbook_dtd=yes], [have_docbook_dtd=no])\n  AS_IF([test \"$have_docbook_dtd\" != yes], [\n    AS_IF([test \"$enable_man\" = yes ], [\n      AC_MSG_ERROR([DocBook DTD is required for --enable-man])\n    ])\n    enable_man=no\n  ])\n])\n\nAS_IF([test \"$enable_man\" != no], [\n  dnl check for DocBook XSL stylesheets in the local catalog\n  JH_CHECK_XML_CATALOG([http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl],\n     [DocBook XSL Stylesheets], [have_docbook_style=yes],[have_docbook_style=no])\n  AS_IF([ test \"$have_docbook_style\" != yes ], [\n    AS_IF([ test \"$enable_man\" = yes ], [\n      AC_MSG_ERROR([DocBook XSL Stylesheets are required for --enable-man])\n    ])\n    enable_man=no\n  ])\n])\n\nAM_CONDITIONAL(ENABLE_MAN, test \"$enable_man\" != no)\n\nAC_MSG_CHECKING([whether to generate man pages])\nAS_IF([ test \"$enable_man\" != no ], [\n  enable_man=yes\n  AC_MSG_RESULT([yes])\n], [\n  AC_MSG_RESULT([no])\n])\n\ndnl --- Specific checks ---\n\nAC_CHECK_FUNCS(ctermid getrandom mmap sigaction)\nAC_CHECK_HEADERS(sys/ioctl.h termios.h windows.h)\n\ndnl\ndnl Define IS_WIN32_BUILD if we're building for Microsoft Windows. In order to\ndnl get UTF-8 support in command-line arguments and environment vars, we need\ndnl to build a resource file with windres and link it in.\ndnl\n\nis_windows_build=no\ncase \"${host_os}\" in\n     cygwin*|mingw*)\n         is_windows_build=yes\n         ;;\nesac\n\nAM_CONDITIONAL([IS_WIN32_BUILD],\n               [test \"x$is_windows_build\" = \"xyes\"])\n\nAC_CHECK_TOOL([WINDRES], [windres], [:])\n\ndnl\ndnl Check for -Bsymbolic-functions linker flag used to avoid\ndnl intra-library PLT jumps, if available.\ndnl\n\nAC_ARG_ENABLE(Bsymbolic,\n              [AS_HELP_STRING([--disable-Bsymbolic],\n                              [avoid linking with -Bsymbolic])],,\n              [SAVED_LDFLAGS=\"${LDFLAGS}\" SAVED_LIBS=\"${LIBS}\"\n               AC_MSG_CHECKING([for -Bsymbolic linker flag])\n               LDFLAGS=-Wl,-Bsymbolic\n               LIBS=\n               AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[return 0]])],[AC_MSG_RESULT(yes)\n                              enable_Bsymbolic=yes],[AC_MSG_RESULT(no)\n                              enable_Bsymbolic=no])\n               LDFLAGS=\"${SAVED_LDFLAGS}\" LIBS=\"${SAVED_LIBS}\"])\n\nif test \"x${enable_Bsymbolic}\" = \"xyes\"; then\n  CHAFA_BDYNAMIC_FLAGS=-Wl,-Bsymbolic\nfi\n\ndnl\ndnl Check for runtime gcc x86 instruction set detection. Used in 'chafa-features.c'.\ndnl\n\nAC_CACHE_CHECK([for gcc __builtin_cpu_init function],\n        [ax_cv_gcc_check_x86_cpu_init],\n        [AC_LINK_IFELSE(\n                [AC_LANG_PROGRAM([#include <stdlib.h>],\n                        [__builtin_cpu_init ();])],\n                 [ax_cv_gcc_check_x86_cpu_init=yes],\n                 [ax_cv_gcc_check_x86_cpu_init=no])])\n\nAC_CACHE_CHECK([for gcc __builtin_cpu_supports function],\n        [ax_cv_gcc_check_x86_cpu_supports],\n        [AC_LINK_IFELSE(\n                [AC_LANG_PROGRAM([#include <stdlib.h>],\n                        [__builtin_cpu_supports (\"mmx\");])],\n                 [ax_cv_gcc_check_x86_cpu_supports=yes],\n                 [ax_cv_gcc_check_x86_cpu_supports=no])])\n\ndnl AM_CONDITIONAL([HAVE_GCC_X86_FEATURE_BUILTINS], [test \"$ac_cv_gcc_check_x86_cpu_init\" = \"yes\" && test \"$ac_cv_gcc_check_x86_cpu_supports\" = \"yes\"])\nAS_IF([test \"$ax_cv_gcc_check_x86_cpu_init\" = \"yes\" && test \"$ax_cv_gcc_check_x86_cpu_supports\" = \"yes\"], [\n        AC_DEFINE([HAVE_GCC_X86_FEATURE_BUILTINS], [1], [Define if gcc x86 feature builtins work.])\n])\n\ndnl Check for working MMX intrinsics\nAC_MSG_CHECKING(for working MMX intrinsics)\nSAVED_CFLAGS=\"${CFLAGS}\"\nCFLAGS=\"${CFLAGS} -mmmx\"\nAC_LINK_IFELSE(\n        [AC_LANG_PROGRAM(\n                [[#include <mmintrin.h>]],\n                [[__m64 t [2] = { 0 }; t [0] = _mm_setzero_si64 ();]])],\n        [AC_DEFINE([HAVE_MMX_INTRINSICS], [1], [Define if MMX intrinsics work.])\n         ac_cv_mmx_intrinsics=yes],\n        [ac_cv_mmx_intrinsics=no])\nCFLAGS=\"${SAVED_CFLAGS}\"\nAC_MSG_RESULT(${ac_cv_mmx_intrinsics})\nAM_CONDITIONAL([HAVE_MMX_INTRINSICS], [test \"$ac_cv_mmx_intrinsics\" = \"yes\"])\n\ndnl Check for working SSE intrinsics\nAC_MSG_CHECKING(for working SSE 4.1 intrinsics)\nSAVED_CFLAGS=\"${CFLAGS}\"\nCFLAGS=\"${CFLAGS} -msse4.1\"\nAC_LINK_IFELSE(\n\t[AC_LANG_PROGRAM(\n\t\t[[#include <smmintrin.h>]],\n\t\t[[__m128i t = { 0 }; int r = _mm_test_all_ones (t);]])],\n\t[AC_DEFINE([HAVE_SSE41_INTRINSICS], [1], [Define if SSE 4.1 intrinsics work.])\n\t ac_cv_sse41_intrinsics=yes],\n\t[ac_cv_sse41_intrinsics=no])\nCFLAGS=\"${SAVED_CFLAGS}\"\nAC_MSG_RESULT(${ac_cv_sse41_intrinsics})\nAM_CONDITIONAL([HAVE_SSE41_INTRINSICS], [test \"$ac_cv_sse41_intrinsics\" = \"yes\"])\n\ndnl Check for working AVX2 intrinsics\nAC_MSG_CHECKING(for working AVX2 intrinsics)\nSAVED_CFLAGS=\"${CFLAGS}\"\nCFLAGS=\"${CFLAGS} -mavx2\"\nAC_LINK_IFELSE(\n\t[AC_LANG_PROGRAM(\n\t\t[[#include <immintrin.h>]],\n\t\t[[__m256i t = { 0 }; __m256i r = _mm256_abs_epi32 (t);]])],\n\t[AC_DEFINE([HAVE_AVX2_INTRINSICS], [1], [Define if AVX2 intrinsics work.])\n\t ac_cv_avx2_intrinsics=yes],\n\t[ac_cv_avx2_intrinsics=no])\nCFLAGS=\"${SAVED_CFLAGS}\"\nAC_MSG_RESULT(${ac_cv_avx2_intrinsics})\nAM_CONDITIONAL([HAVE_AVX2_INTRINSICS], [test \"$ac_cv_avx2_intrinsics\" = \"yes\"])\n\ndnl Check for working 64bit popcnt intrinsics\nAC_MSG_CHECKING(for working 64bit popcnt intrinsics)\nSAVED_CFLAGS=\"${CFLAGS}\"\nCFLAGS=\"${CFLAGS} -mpopcnt\"\nAC_LINK_IFELSE(\n\t[AC_LANG_PROGRAM(\n\t\t[[#include <stdint.h>\n                  #include <nmmintrin.h>]],\n\t\t[[uint64_t t = 0; t = _mm_popcnt_u64 (t);]])],\n\t[AC_DEFINE([HAVE_POPCNT64_INTRINSICS], [1], [Define if 64bit popcnt intrinsics work.])\n\t ac_cv_popcnt64_intrinsics=yes],\n\t[ac_cv_popcnt64_intrinsics=no])\nCFLAGS=\"${SAVED_CFLAGS}\"\nAC_MSG_RESULT(${ac_cv_popcnt64_intrinsics})\n\ndnl Check for working 32bit popcnt intrinsics\nAC_MSG_CHECKING(for working 32bit popcnt intrinsics)\nSAVED_CFLAGS=\"${CFLAGS}\"\nCFLAGS=\"${CFLAGS} -mpopcnt\"\nAC_LINK_IFELSE(\n\t[AC_LANG_PROGRAM(\n\t\t[[#include <stdint.h>\n                  #include <nmmintrin.h>]],\n\t\t[[uint32_t t = 0; t = _mm_popcnt_u32 (t);]])],\n\t[AC_DEFINE([HAVE_POPCNT32_INTRINSICS], [1], [Define if 32bit popcnt intrinsics work.])\n\t ac_cv_popcnt32_intrinsics=yes],\n\t[ac_cv_popcnt32_intrinsics=no])\nCFLAGS=\"${SAVED_CFLAGS}\"\nAC_MSG_RESULT(${ac_cv_popcnt32_intrinsics})\n\nAM_CONDITIONAL([HAVE_POPCNT_INTRINSICS],\n    [test \"$ac_cv_popcnt64_intrinsics\" = \"yes\" -o \"$ac_cv_popcnt32_intrinsics\" = \"yes\"])\n\ndnl\ndnl Check for -fvisibility=hidden to determine if we can do GNU-style\ndnl visibility attributes for symbol export control\ndnl\nCHAFA_VISIBILITY_CFLAGS=\"\"\ncase \"$host\" in\n  *-*-mingw*)\n    dnl On mingw32 we do -fvisibility=hidden and __declspec(dllexport)\n    AC_DEFINE([_CHAFA_EXTERN], [__attribute__((visibility(\"default\"))) __declspec(dllexport) extern],\n              [Defines how to decorate public symbols while building])\n    CHAFA_VISIBILITY_CFLAGS=\"-fvisibility=hidden\"\n    ;;\n  *)\n    dnl On other compilers, check if we can do -fvisibility=hidden\n    SAVED_CFLAGS=\"${CFLAGS}\"\n    CFLAGS=\"-fvisibility=hidden\"\n    AC_MSG_CHECKING([for -fvisibility=hidden compiler flag])\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[return 0]])],[AC_MSG_RESULT(yes)\n                      enable_fvisibility_hidden=yes],[AC_MSG_RESULT(no)\n                      enable_fvisibility_hidden=no])\n    CFLAGS=\"${SAVED_CFLAGS}\"\n\n    AS_IF([test \"${enable_fvisibility_hidden}\" = \"yes\"], [\n      AC_DEFINE([_CHAFA_EXTERN], [__attribute__((visibility(\"default\"))) extern],\n                [Defines how to decorate public symbols while building])\n      CHAFA_VISIBILITY_CFLAGS=\"-fvisibility=hidden\"\n    ])\n    ;;\nesac\n\ndnl\ndnl We're not picky about floating point behavior, and this makes e.g.\ndnl lrintf() a lot faster.\ndnl\nAX_CHECK_COMPILE_FLAG([-ffast-math],\n    [BASE_CFLAGS=\"$BASE_CFLAGS -ffast-math\"],\n    ,\n    [-Werror])\n\ndnl --- Set compiler flags ---\n\ndnl Disable some LodePNG features. In particular, the CRC feature, which would\ndnl sometimes cause valid images to not load because of issues in the\ndnl encoding software.\n\nLODEPNG_FEATURES=\"\\\n-DLODEPNG_NO_COMPILE_ENCODER \\\n-DLODEPNG_NO_COMPILE_DISK \\\n-DLODEPNG_NO_COMPILE_CPP \\\n-DLODEPNG_NO_COMPILE_CRC\"\n\nLODEPNG_CFLAGS=\"$BASE_CFLAGS $LODEPNG_FEATURES\"\nLODEPNG_LDFLAGS=\"$CHAFA_BDYNAMIC_FLAGS\"\n\nLIBNSGIF_CFLAGS=\"$BASE_CFLAGS\"\nLIBNSGIF_LDFLAGS=\"$CHAFA_BDYNAMIC_FLAGS\"\n\nLIBCHAFA_CFLAGS=\"$BASE_CFLAGS $CHAFA_VISIBILITY_CFLAGS\"\nLIBCHAFA_LDFLAGS=\"$CHAFA_BDYNAMIC_FLAGS\"\n\nCHAFA_CFLAGS=\"$BASE_CFLAGS $CHAFA_VISIBILITY_CFLAGS $LODEPNG_FEATURES\"\nCHAFA_LDFLAGS=\"$CHAFA_BDYNAMIC_FLAGS\"\n\nAC_SUBST(LODEPNG_CFLAGS)\nAC_SUBST(LODEPNG_LDFLAGS)\n\nAC_SUBST(LIBNSGIF_CFLAGS)\nAC_SUBST(LIBNSGIF_LDFLAGS)\n\nAC_SUBST(LIBCHAFA_CFLAGS)\nAC_SUBST(LIBCHAFA_LDFLAGS)\n\nAC_SUBST(CHAFA_CFLAGS)\nAC_SUBST(CHAFA_LDFLAGS)\n\nAC_ARG_ENABLE(rpath,\n              [AS_HELP_STRING([--enable-rpath],\n                              [use rpath [default=no]])])\n\nAM_CONDITIONAL(ENABLE_RPATH, test \"$enable_rpath\" = yes)\n\ndnl --- Output ---\n\nAC_CONFIG_FILES([Makefile\n                 chafa/Makefile\n                 chafa/chafaconfig.h\n                 chafa/internal/Makefile\n                 chafa/internal/smolscale/Makefile\n                 libnsgif/Makefile\n                 lodepng/Makefile\n                 chafa.pc\n                 docs/Makefile\n                 docs/version.xml\n                 examples/Makefile\n                 tests/Makefile\n                 tests/data/Makefile\n                 tests/data/bad/Makefile\n                 tests/data/good/Makefile\n                 tools/Makefile\n                 tools/chafa/Makefile\n                 tools/completions/Makefile\n                 tools/fontgen/Makefile])\nAC_OUTPUT\n\ndnl --- Print a neatly colorized summary ---\n\ncolorize_vars=\"\n  enable_man\n  ac_cv_mmx_intrinsics\n  ac_cv_sse41_intrinsics\n  ac_cv_avx2_intrinsics\n  ac_cv_popcnt32_intrinsics\n  ac_cv_popcnt64_intrinsics\n  with_tools\n  with_jpeg\n  with_svg\n  with_tiff\n  with_webp\n  with_jxl\n  with_avif\n\"\n\ndnl Only use colors if the terminal supports the aixterm-style bright ones (16 total).\n\ncols=$(tput colors 2>/dev/null)\n\nif test ${cols:--1} -ge 16; then\n  normal=$(tput sgr0)\n  red=$(tput setaf 9)\n  green=$(tput setaf 10)\n  yellow=$(tput setaf 11)\n  blue=$(tput setaf 12)\n\n  pyes=${green}yes${normal}\n  pno=${red}no${normal}\n  pyno=${yellow}no${normal}\nelse\n  normal=\n  red=\n  green=\n  yellow=\n  blue=\n\n  pyes=yes\n  pno=no\n  pyno=no\nfi\n\ndnl Gross. At least make sure eval arguments are sanitized.\nfor i in $colorize_vars; do\n  eval state=\\$$i\n  if test x$state != xno; then state=yes; fi\n  eval p$i=\\$p$state\ndone\n\ndnl gtk-doc needs special handling; since docs come pregenerated in the tarball, \"no\"\ndnl here is less critical, so use a different color. Also, enable_gtk_doc can be empty.\nif test x$enable_gtk_doc = xyes; then\n  penable_gtk_doc=$pyes\nelse\n  penable_gtk_doc=$pyno\nfi\n\necho >&AS_MESSAGE_FD $normal\necho >&AS_MESSAGE_FD \"Build man page .............. $penable_man\"\necho >&AS_MESSAGE_FD \"Rebuild API documentation ... $penable_gtk_doc (--enable-gtk-doc)\"\necho >&AS_MESSAGE_FD \"Support MMX ................. $pac_cv_mmx_intrinsics\"\necho >&AS_MESSAGE_FD \"Support SSE 4.1 ............. $pac_cv_sse41_intrinsics\"\necho >&AS_MESSAGE_FD \"Support AVX2 ................ $pac_cv_avx2_intrinsics\"\necho >&AS_MESSAGE_FD \"Support popcount32 .......... $pac_cv_popcnt32_intrinsics\"\necho >&AS_MESSAGE_FD \"Support popcount64 .......... $pac_cv_popcnt64_intrinsics\"\necho >&AS_MESSAGE_FD\necho >&AS_MESSAGE_FD \"Build command-line tool ..... $pwith_tools\"\n\nif test \"x$with_tools\" != xno; then\necho >&AS_MESSAGE_FD \"With AVIF loader ............ $pwith_avif\"\necho >&AS_MESSAGE_FD \"With GIF loader ............. $pyes (internal)\"\necho >&AS_MESSAGE_FD \"With JPEG loader ............ $pwith_jpeg\"\necho >&AS_MESSAGE_FD \"With PNG loader ............. $pyes (internal)\"\necho >&AS_MESSAGE_FD \"With QOI loader ............. $pyes (internal)\"\necho >&AS_MESSAGE_FD \"With SVG loader ............. $pwith_svg\"\necho >&AS_MESSAGE_FD \"With TIFF loader ............ $pwith_tiff\"\necho >&AS_MESSAGE_FD \"With WebP loader ............ $pwith_webp\"\necho >&AS_MESSAGE_FD \"With JXL loader ............. $pwith_jxl\"\necho >&AS_MESSAGE_FD \"With XWD loader ............. $pyes (internal)\"\nfi\n\necho >&AS_MESSAGE_FD\necho >&AS_MESSAGE_FD \"Install prefix .............. $blue$prefix$normal\"\necho >&AS_MESSAGE_FD\necho >&AS_MESSAGE_FD \"You can now type ${blue}gmake${normal} or ${blue}make${normal} to build the project.\"\n\ndnl --- Warn about missing dependencies ---\n\ndnl Remove leading spaces.\nmissing_rpms=$(echo $missing_rpms | sed 's/^ *//')\nmissing_debs=$(echo $missing_debs | sed 's/^ *//')\n\nif test \"x$missing_rpms\" != x; then\necho >&AS_MESSAGE_FD\necho >&AS_MESSAGE_FD \"Some optional libraries were not found. You may want to install these and\"\necho >&AS_MESSAGE_FD \"run configure again (package names may be different on your system).\"\necho >&AS_MESSAGE_FD\necho >&AS_MESSAGE_FD \"On Fedora, openSUSE or similar:\"\necho >&AS_MESSAGE_FD \"${blue}${missing_rpms}${normal}\"\necho >&AS_MESSAGE_FD \necho >&AS_MESSAGE_FD \"On Debian, Ubuntu or similar:\"\necho >&AS_MESSAGE_FD \"${blue}${missing_debs}${normal}\"\necho >&AS_MESSAGE_FD\nfi\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "libnsgif",
          "type": "tree",
          "content": null
        },
        {
          "name": "lodepng",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}