{
  "metadata": {
    "timestamp": 1736710105638,
    "page": 730,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Novum/vkQuake",
      "stars": 1868,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.576171875,
          "content": "BasedOnStyle: LLVM\nTabWidth: 4\nIndentWidth: 4\nContinuationIndentWidth: 4\nUseTab: Always\nLanguage: Cpp\nAllowShortFunctionsOnASingleLine: Empty\nBreakBeforeBraces: Allman\nDerivePointerAlignment: false\nColumnLimit: 160\nAlignConsecutiveBitFields: AcrossComments\nAlignConsecutiveMacros: AcrossComments\nAlignConsecutiveDeclarations: AcrossComments\nAlignEscapedNewlines: Left\nAlignTrailingComments: true\nAlignAfterOpenBracket: AlwaysBreak\nPointerAlignment: Right\nAlignOperands: Align\nAllowShortIfStatementsOnASingleLine: Never\nSpaceBeforeParens: Always\nSortIncludes: Never\nInsertNewlineAtEOF: true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.689453125,
          "content": "*.suo\nvkquake.VC*\nQuake/*.dll\nQuake/*.o\nQuake/*.d\nQuake/id1/\nQuake/vkquake\nQuake/*.exe\nQuake/*.res\nWindows/VisualStudio/Id1\nShaders/Compiled/Debug/*.spv\nShaders/Compiled/Debug/*.c\nShaders/Compiled/Debug/*.d\nShaders/Compiled/Release/*.spv\nShaders/Compiled/Release/*.c\nShaders/Compiled/Release/*.d\nShaders/*.exe\nShaders/*.obj\nShaders/bintoc\nWindows/VisualStudio/.vs\nWindows/VisualStudio/Build-*\nWindows/VisualStudio/enc_temp_folder\nPackaging/AppImage/AppDir\nPackaging/AppImage/vkquake*\nPackaging/Windows/vkQuake-Installer-*.exe\nPackaging/Windows/vkQuake*.zip\nMisc/vq_pak/mkpak\nMisc/vq_pak/bintoc\nMisc/vq_pak/*.dSYM\nbuild/\n.settings\n.project\n.cproject\n.DS_Store\nhistory.txt\n.vscode/settings.json\nhelgrind.log\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "Misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "Packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "Quake",
          "type": "tree",
          "content": null
        },
        {
          "name": "Shaders",
          "type": "tree",
          "content": null
        },
        {
          "name": "Windows",
          "type": "tree",
          "content": null
        },
        {
          "name": "format.sh",
          "type": "blob",
          "size": 0.2109375,
          "content": "#/bin/sh\ndocker run --user $(id -u):$(id -g) -v `pwd`:`pwd` -w `pwd` -i --rm ghcr.io/jidicula/clang-format:17 -i Quake/*.c Quake/*.h Shaders/*.frag Shaders/*.vert Shaders/*.comp Shaders/*.inc Shaders/*.c Shaders/*.h\n"
        },
        {
          "name": "helgrind.supp",
          "type": "blob",
          "size": 0.515625,
          "content": "{\n   False positives in the Nvidia driver\n   Helgrind:Race\n   ...\n   obj:*libnvidia*\n   ...\n}\n{\n   False positives in the Nvidia driver\n   Helgrind:Misc\n   ...\n   obj:*libnvidia*\n   ...\n}\n{\n   False positives in the Nvidia driver\n   Helgrind:Race\n   ...\n   obj:*libcuda*\n   ...\n}\n{\n   False positives in PulseAudio\n   Helgrind:Race\n   ...\n   obj:*libpulse*\n   ...\n}\n{\n   False positives in SDL2\n   Helgrind:Race\n   ...\n   obj:*libSDL2*\n   ...\n}\n{\n   False positives in SDL2\n   Helgrind:LockOrder\n   ...\n   obj:*libSDL2*\n   ...\n}"
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 6.892578125,
          "content": "project('vkquake', 'c', default_options : ['c_std=gnu11', 'buildtype=release'])\n\nshaders = [\n    'Shaders/alias.frag',\n    'Shaders/alias.vert',\n    'Shaders/alias_alphatest.frag',\n    'Shaders/md5.vert',\n    'Shaders/basic.frag',\n    'Shaders/basic.vert',\n    'Shaders/basic_alphatest.frag',\n    'Shaders/basic_notex.frag',\n    'Shaders/cs_tex_warp.comp',\n    'Shaders/indirect.comp',\n    'Shaders/indirect_clear.comp',\n    'Shaders/postprocess.frag',\n    'Shaders/postprocess.vert',\n    'Shaders/screen_effects_10bit.comp',\n    'Shaders/screen_effects_10bit_scale.comp',\n    'Shaders/screen_effects_10bit_scale_sops.comp',\n    'Shaders/screen_effects_8bit.comp',\n    'Shaders/screen_effects_8bit_scale.comp',\n    'Shaders/screen_effects_8bit_scale_sops.comp',\n    'Shaders/showtris.frag',\n    'Shaders/showtris.vert',\n    'Shaders/sky_box.frag',\n    'Shaders/sky_cube.frag',\n    'Shaders/sky_cube.vert',\n    'Shaders/sky_layer.frag',\n    'Shaders/sky_layer.vert',\n    'Shaders/update_lightmap.comp',\n    'Shaders/update_lightmap_rt.comp',\n    'Shaders/world.frag',\n    'Shaders/world.vert',\n    'Shaders/ray_debug.comp',\n]\n\nglslang = find_program('glslangValidator')\nspirv_opt = find_program('spirv-opt')\nspirv_remap = find_program('spirv-remap')\nbintoc = executable('bintoc', ['Shaders/bintoc.c'], native: true)\nif (build_machine.system() == 'darwin') or get_option('buildtype').startswith('debug')\n    spirv_opt_command = [] # MoltenVK spirv-cross has a bug that breaks optimized shaders\nelse\n    spirv_opt_command = [spirv_opt, '-Os', '@PLAINNAME@.spv', '-o', '@PLAINNAME@.spv', '&&']\nendif\nspirv_remap_command = get_option('buildtype').startswith('debug') ? [] : [spirv_remap, '-s', '-o', '.', '-i', '@PLAINNAME@.spv', '&&']\nbintoc_command = [bintoc, '@PLAINNAME@.spv', '@PLAINNAME@_spv', '@OUTPUT@']\n\nshaders_c = []\nforeach shader : shaders\n    target_env = shader.contains('sops') ? ['--target-env', 'vulkan1.1'] : []\n    debug_flag = get_option('buildtype').startswith('debug') ? ['-g'] : []\n    glslang_command = [glslang, '-V'] + debug_flag + target_env + ['-o', '@PLAINNAME@.spv', '@INPUT@', '--depfile', '@PLAINNAME@.deps', '&&']\n    shaders_c += custom_target(shader.underscorify(),\n                 input: shader,\n                 output: '@PLAINNAME@.c',\n                 depfile: '@PLAINNAME@.deps',\n                 command: glslang_command\n                          + spirv_opt_command\n                          + spirv_remap_command\n                          + bintoc_command)\nendforeach\n\nsrcs = [\n    'Quake/bgmusic.c',\n    'Quake/cd_null.c',\n    'Quake/cfgfile.c',\n    'Quake/chase.c',\n    'Quake/cl_demo.c',\n    'Quake/cl_input.c',\n    'Quake/cl_main.c',\n    'Quake/cl_parse.c',\n    'Quake/cl_tent.c',\n    'Quake/cmd.c',\n    'Quake/common.c',\n    'Quake/console.c',\n    'Quake/crc.c',\n    'Quake/cvar.c',\n    'Quake/gl_draw.c',\n    'Quake/gl_fog.c',\n    'Quake/gl_heap.c',\n    'Quake/gl_mesh.c',\n    'Quake/gl_model.c',\n    'Quake/gl_refrag.c',\n    'Quake/gl_rlight.c',\n    'Quake/gl_rmain.c',\n    'Quake/gl_rmisc.c',\n    'Quake/gl_screen.c',\n    'Quake/gl_sky.c',\n    'Quake/gl_texmgr.c',\n    'Quake/gl_vidsdl.c',\n    'Quake/gl_warp.c',\n    'Quake/host.c',\n    'Quake/host_cmd.c',\n    'Quake/image.c',\n    'Quake/in_sdl.c',\n    'Quake/keys.c',\n    'Quake/main_sdl.c',\n    'Quake/mathlib.c',\n    'Quake/mdfour.c',\n    'Quake/mem.c',\n    'Quake/menu.c',\n    'Quake/miniz.c',\n    'Quake/net_bsd.c',\n    'Quake/net_dgrm.c',\n    'Quake/net_loop.c',\n    'Quake/net_main.c',\n    'Quake/net_udp.c',\n    'Quake/palette.c',\n    'Quake/pl_linux.c',\n    'Quake/pr_cmds.c',\n    'Quake/pr_edict.c',\n    'Quake/pr_exec.c',\n    'Quake/pr_ext.c',\n    'Quake/r_alias.c',\n    'Quake/r_brush.c',\n    'Quake/r_part.c',\n    'Quake/r_part_fte.c',\n    'Quake/r_sprite.c',\n    'Quake/r_world.c',\n    'Quake/sbar.c',\n    'Quake/snd_codec.c',\n    'Quake/snd_dma.c',\n    'Quake/snd_mem.c',\n    'Quake/snd_mix.c',\n    'Quake/snd_sdl.c',\n    'Quake/snd_umx.c',\n    'Quake/snd_wave.c',\n    'Quake/strlcat.c',\n    'Quake/strlcpy.c',\n    'Quake/sv_main.c',\n    'Quake/sv_move.c',\n    'Quake/sv_phys.c',\n    'Quake/sv_user.c',\n\t'Quake/sys_sdl.c',\n    'Quake/sys_sdl_unix.c',\n    'Quake/tasks.c',\n    'Quake/view.c',\n    'Quake/wad.c',\n    'Quake/world.c',\n\t'Quake/hash_map.c',\n\t'Quake/embedded_pak.c',\n]\n\ncflags = ['-Wall', '-Wno-trigraphs', '-Werror', '-std=gnu11']\ncc = meson.get_compiler('c')\ndeps = [\n    cc.find_library('m', required : false),\n    cc.find_library('dl', required : false),\n    dependency('threads'),\n    dependency('sdl2'),\n]\n\nif build_machine.system() == 'darwin'\n    molten_dirs = []\n    if import('fs').exists('/opt/homebrew/lib/libMoltenVK.dylib')\n        molten_dirs += '/opt/homebrew/lib'\n    endif\n    deps += cc.find_library('MoltenVK', required : true, dirs : molten_dirs)\nelse\n    deps += dependency('vulkan')\nendif\n\nif get_option('use_codec_wave').enabled()\n    cflags += '-DUSE_CODEC_WAVE'\nendif\n\nif get_option('mp3_lib') == 'mad'\n    mp3_dep = dependency('mad', required : get_option('use_codec_mp3'))\n    if mp3_dep.found()\n        srcs += [ 'Quake/snd_mp3.c', 'Quake/snd_mp3tag.c' ]\n        deps += mp3_dep\n        cflags += '-DUSE_CODEC_MP3'\n    endif\nelse\n    mp3_dep = dependency('libmpg123', required : get_option('use_codec_mp3'))\n    if mp3_dep.found()\n        srcs += [ 'Quake/snd_mpg123.c', 'Quake/snd_mp3tag.c' ]\n        deps += mp3_dep\n        cflags += '-DUSE_CODEC_MP3'\n    endif\nendif\n\nflac_dep = dependency('flac', required : get_option('use_codec_flac'))\nif flac_dep.found()\n    srcs += 'Quake/snd_flac.c'\n    deps += flac_dep\n    cflags += '-DUSE_CODEC_FLAC'\nendif\n\nogg_dep = dependency('ogg', required : get_option('use_codec_vorbis'))\nif get_option('vorbis_lib') == 'vorbis'\n    vorbisfile_dep = dependency('vorbisfile', required : get_option('use_codec_vorbis'))\n    vorbis_dep = dependency('vorbis', required : get_option('use_codec_vorbis'))\n    if ogg_dep.found() and vorbisfile_dep.found() and vorbis_dep.found()\n        srcs += 'Quake/snd_vorbis.c'\n        deps += [ ogg_dep, vorbisfile_dep, vorbis_dep ]\n        cflags += '-DUSE_CODEC_VORBIS'\n    endif\nelse\n    vorbis_dep = dependency('vorbisidec', required : get_option('use_codec_vorbis'))\n    if ogg_dep.found() and vorbis_dep.found()\n        srcs += 'Quake/snd_vorbis.c'\n        deps += [ ogg_dep, vorbis_dep ]\n        cflags += [ '-DUSE_CODEC_VORBIS', '-DVORBIS_USE_TREMOR' ]\n    endif\nendif\n\nopus_dep = dependency('opus', required : get_option('use_codec_opus'))\nopusfile_dep = dependency('opusfile', required : get_option('use_codec_opus'))\nif opus_dep.found() and opusfile_dep.found()\n    srcs += 'Quake/snd_opus.c'\n    deps += [ opus_dep, opusfile_dep ]\n    cflags += '-DUSE_CODEC_OPUS'\nendif\n\nif get_option('buildtype').startswith('debug')\n    cflags += '-D_DEBUG'\nendif\n\nif get_option('do_userdirs').enabled()\n    cflags += '-DDO_USERDIRS=1'\nendif\n\nincdirs = [\n    'Quake/mimalloc',\n]\n\nexecutable('vkquake', [srcs, shaders_c], dependencies : deps, include_directories : incdirs, c_args : cflags, c_pch: ['Quake/quakedef.h', 'Quake/quakedef.c'])\n"
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 0.51171875,
          "content": "option('use_codec_wave', type : 'feature', value : 'enabled')\noption('use_codec_mp3', type : 'feature', value : 'auto')\noption('use_codec_flac', type : 'feature', value : 'auto')\noption('use_codec_vorbis', type : 'feature', value : 'auto')\noption('use_codec_opus', type : 'feature', value : 'auto')\noption('mp3_lib', type : 'combo', value : 'mpg123', choices: ['mad', 'mpg123'])\noption('vorbis_lib', type : 'combo', value : 'vorbis', choices: ['vorbis', 'tremor'])\noption('do_userdirs', type: 'feature', value : 'disabled')\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 8.859375,
          "content": "# 🌋 vkQuake\n[![Windows CI](https://github.com/Novum/vkQuake/actions/workflows/build-windows.yml/badge.svg)](https://github.com/Novum/vkQuake/actions/workflows/build-windows.yml) [![Windows CI](https://github.com/Novum/vkQuake/actions/workflows/build-mingw.yml/badge.svg)](https://github.com/Novum/vkQuake/actions/workflows/build-mingw.yml) [![Linux CI](https://github.com/Novum/vkQuake/actions/workflows/build-linux.yml/badge.svg)](https://github.com/Novum/vkQuake/actions/workflows/build-linux.yml) [![macOS CI](https://github.com/Novum/vkQuake/actions/workflows/build-mac.yml/badge.svg)](https://github.com/Novum/vkQuake/actions/workflows/build-mac.yml) [![Formatting](https://github.com/Novum/vkQuake/actions/workflows/clang-format-check.yml/badge.svg)](https://github.com/Novum/vkQuake/actions/workflows/clang-format-check.yml)\n\nvkQuake is a port of id Software's [Quake](https://en.wikipedia.org/wiki/Quake_(video_game)) using Vulkan instead of OpenGL for rendering. It is based on the popular [QuakeSpasm](http://quakespasm.sourceforge.net/) and [QuakeSpasm-Spiked](https://triptohell.info/moodles/qss/) ports and runs all mods compatible with QuakeSpasm like [Arcane Dimensions](http://www.moddb.com/mods/arcane-dimensions). \n\nImprovements over QuakeSpasm include:\n* Much better performance with multithreaded rendering and loading\n* The game can run at higher frame rates than 72Hz without breaking physics\n* A software Quake like underwater effect\n* Support for remastered models if using data from the 2021 rerelease\n* Dynamic shadows (requires a GPU with ray tracing support)\n* Better color precision reducing banding in dark areas\n* Native support for anti aliasing and anisotropic filtering\n* 8-bit color emulation\n* Scaling for pixelated look\n* Mods menu for easy mod loading\n* More modern protocol to avoid certain movement issues (from QSS)\n* Support for custom mod HUDs (from QSS)\n* Support for scriptable particles (from QSS)\n\n## Installation\n\n### Windows\nIt is recommended to use the installer on Windows. This sets up start menu entries for the original and remastered Quake versions. Save data and config files will be written to the user folder (`%APPDATA\\vkQuake`) instead of the Quake data folder.\n\nOtherwise copy all files inside the `vkquake-<version>_win64` or `vkquake-<version>_win32` folder in the zip to the Quake base directory. Overwrite any existing files. Afterward to run the game just execute `vkQuake.exe`.\n\n### Linux\nCopy all files inside the `vkquake-<version>-linux64` folder in the tar archive to the Quake base directory. Overwrite any existing files. Run `vkquake.AppImage`.\n\n> **Note**\\\n> Make sure all data files are lowercase, e.g. \"id1\", not \"ID1\" and \"pak0.pak\", not \"PAK0.PAK\". Some distributions of the game have upper case file names, e.g. from GOG.com.\n\n### OpenBSD\n\n[OpenBSD](https://openbsd.org) includes vkQuake in the standard package repositories since version [6.6](https://www.openbsd.org/66.html).\n\nIf you're running `OpenBSD 6.6` or greater you can install the package with:\n\n```console\n$ pkg_add vkquake\n```\n\n### Quake '2021 re-release'\n\nvkQuake has initial support for playing the 2021 re-release content. Follow installation instructions as above but copy the files into the rerelease folder.\n\n## Vulkan\nvkQuake shows basic usage of the API. For example it demonstrates render passes & sub passes, pipeline barriers & synchronization, compute shaders, push & specialization constants, CPU/GPU parallelism and memory pooling.\n\n## Endianness\nvkQuake only supports **little-endian** systems. \nThe reason is, all known existing Vulkan-capable systems in the wild are little-endian. Consequently, all big-endian support from QuakeSpasm has been effectively removed. \nvkQuake wouldn't even start on an big-endian system, outputing a fatal error.\n\n## Building\n> **Note**\\\n> You will need at least Vulkan SDK version 1.2.162 or newer. When building for Linux this is not always the case for the SDK provided by the distribution. Install the latest LunarG SDK if necessary.\n\n### Windows\n\nClone the vkQuake repo from `https://github.com/Novum/vkQuake.git`\n\nPrerequisites:\n\n* [Git for Windows](https://github.com/git-for-windows/git/releases)\n* A [Vulkan-capable GPU](https://en.wikipedia.org/wiki/Vulkan_(API)#Compatibility) with the appropriate drivers installed\n* Install the latest [Vulkan SDK](https://vulkan.lunarg.com/sdk/home). Log out and back in after installation to make sure environment variables are set.\n\n#### Visual Studio\n\n* Install [Visual Studio Community](https://www.visualstudio.com/products/free-developer-offers-vs) with Visual C++ component.\n\nOpen the Visual Studio solution, `Windows\\VisualStudio\\vkquake.sln`, select the desired configuration and platform, then\nbuild the solution.\n\n#### MinGW\n\nSetup your [MinGW-w64](https://sourceforge.net/projects/mingw-w64/) environment, e.g. using [w64devkit](https://github.com/skeeto/w64devkit) or [MSYS2](https://www.msys2.org/).\n\nBuild 32 bit (x86) vkQuake:\n\n~~~\ncd vkQuake/Quake\nmake -f Makefile.w32\n~~~\n\nBuild 64 bit (x64) vkQuake:\n\n~~~\ncd vkQuake/Quake\nmake -f Makefile.w64\n~~~\n\nIf you are on Linux and want to cross-compile for Windows, see the `build_cross_win??.sh` scripts.\n\n### Linux\n\nMake sure that both your GPU and your GPU driver support [Vulkan](https://en.wikipedia.org/wiki/Vulkan#Support_across_vendors).\n\nTo compile vkQuake, first install the build dependencies:\n\nUbuntu:\n~~~\napt-get install git meson gcc glslang-tools spirv-tools libsdl2-dev libvulkan-dev libvorbis-dev libmad0-dev libx11-xcb-dev\n~~~\n\nArch Linux:\n~~~\npacman -S git meson flac glibc libgl libmad libvorbis libx11 sdl2 vulkan-headers glslang spirv-tools\n~~~\n\nThen clone the vkQuake repo:\n\n~~~\ngit clone https://github.com/Novum/vkQuake.git\n~~~\n\nNow go to the Quake directory and compile the executable:\n\n~~~\ncd vkQuake\nmeson build && ninja -C build\n~~~\n\n> **Note**\\\n> The Meson version needs to be 0.47.0 or newer. For older distributions you can use make:\n> ~~~\n> cd vkQuake/Quake\n> make -j\n> ~~~\n> Meson is the preferred way to build vkQuake because it automatically checks for out of date file depenencies, is faster and has better error reporting for missing dependencies.\n\n> **Note**\\\n> vkQuake 0.97 and later requires at least **SDL2 2.0.6 with enabled Vulkan support**. The precompiled versions in some of the distribution repositories (e.g. Ubuntu) do not currently ship with Vulkan support. You will therefore need to compile it from source. Make sure you have libvulkan-dev installed before running configure.\n\n### MacOS\n\nTo compile vkQuake, first install the build dependencies with Homebrew:\n\n~~~\nbrew install molten-vk vulkan-headers glslang spirv-tools sdl2 libvorbis flac opus opusfile flac mad meson pkgconfig\n~~~\n\nThen clone the vkQuake repo:\n\n~~~\ngit clone https://github.com/Novum/vkQuake.git\n~~~\n\nNow go to the Quake directory and compile the executable:\n\n~~~\ncd vkQuake\nmeson build && ninja -C build\n~~~\n\n> **Note**\\\n> The Meson version needs to be 0.47.0 or newer.\n\n## Optional - Music / Soundtrack\n\n> **Note**\\\n> This section only applies to older releases. For the 2021 re-release music will work out of the box.\n\nThe original Quake had a great soundtrack by Nine Inch Nails. Unfortunately, the Steam version does not come with the soundtrack files. The GOG-provided files need to be converted before they are ready for use. In general, you'll just need to move a \"music\" folder to the correct location within your vkQuake installation (.e.g `/usr/share/quake/id1/music`). Most Quake engines play nicest with soundtracks placed in the `id1/music` subfolder vs. `sound\\cdtracks`\n\nQuakeSpasm, the engine vkQuake is derived from, supports OGG, MP3, FLAC, and WAV audio formats. The Linux version of QuakeSpasm/VkQuake requires external libraries: libogg or libvorbis for OGG support, libmad or libmpg123 for MP3, and libflac for FLAC. If you already have a setup that works for the engine you're currently using, then you don't necessarily have to change it. \n\nGenerally, the below setup works for multiple engines, including Quakespasm/vkQuake:\n\n* The music files are loose files, NOT inside a pak or pk3 archive.\n* The files are placed inside a \"music\" subfolder of the \"id1\" folder. For missionpack or mod soundtracks, the files are placed in a \"music\" subfolder of the appropriate game folder. So the original Quake soundtrack files go inside \"id1\\music\", Mission Pack 1 soundtrack files go inside \"hipnotic\\music\", and Mission Pack 2 soundtrack files go inside \"rogue\\music\".\n* The files are named in the pattern \"tracknn\", where \"nn\" is the CD track number that the file was ripped from. Since the soundtrack starts at the second CD track, MP3 soundtrack files are named \"track02.mp3\", \"track03.mp3\", etc. OGG soundtrack files are named \"track02.ogg\", \"track03.ogg\", etc. FLAC soundtrack files are named \"track02.flac\", \"track03.flac\", etc. WAV soundtrack files are named \"track02.wav\", \"track03.wav\", etc.\n\n**See more:** [Quake Soundtrack Solutions (Steam Community)](http://steamcommunity.com/sharedfiles/filedetails/?id=119489135)\n"
        },
        {
          "name": "vs-chromium-project.txt",
          "type": "blob",
          "size": 0.0439453125,
          "content": "[SearchableFiles.include]\r\nQuake/\r\nShaders/\r\n"
        }
      ]
    }
  ]
}