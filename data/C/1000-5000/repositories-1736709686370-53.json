{
  "metadata": {
    "timestamp": 1736709686370,
    "page": 53,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "stlink-org/stlink",
      "stars": 4504,
      "defaultBranch": "testing",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.08984375,
          "content": "build\nbuild-mingw-32\nbuild-mingw-64\n3rdparty\n\n.project\n.cmake/\n.vscode/\n\nobj-*\n*.user*\n*.swp"
        },
        {
          "name": ".version",
          "type": "blob",
          "size": 0.005859375,
          "content": "1.8.0\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 68.2099609375,
          "content": "# stlink Changelog\n\n# v1.8.1\n\nRelease date: 2025-03-xx\n\nThis release drops support for some older operating systems. Check project README for details.\n\nUpdated system requirements:\n- C-Standard: C17 (ISO/IEC 9899:2018)\n- `cmake` >= 3.16.3\n- `libusb` >= 1.0.23\n- `libgtk-dev` >= 3.24.18\n\nFeatures:\n\n- Show all info during full erase ([#1363](https://github.com/stlink-org/stlink/pull/1363), commit [#6a6718b](https://github.com/stlink-org/stlink/commit/6a6718b3342b6c5e282a4e33325b9f97908a0692))\n- Added support for STLINK-V3PWR ([#1388](https://github.com/stlink-org/stlink/pull/1388), [#1389](https://github.com/stlink-org/stlink/pull/1389))\n- Dynamic SRAM size for F4 memory map ([#1390](https://github.com/stlink-org/stlink/pull/1390))\n- Modifications to allow building of toolset in OpenBSD ([#1392](https://github.com/stlink-org/stlink/pull/1392))\n- --mass-erase for st-flash write commands ([#1397](https://github.com/stlink-org/stlink/pull/1397))\n- Support for setting option bytes to STM32L41x_L42x (according to RM0394) ([#1405](https://github.com/stlink-org/stlink/pull/1405), [#1412](https://github.com/stlink-org/stlink/pull/1412), [#1413](https://github.com/stlink-org/stlink/pull/1413))\n- Improvements for stlink-gui ([#1411](https://github.com/stlink-org/stlink/pull/1411))\n- [STM32U575/585]: Added support for OTP bytes ([#1419](https://github.com/stlink-org/stlink/pull/1419))\n- [STM32Gx]: Added erase support for multi-bank products ([#1420](https://github.com/stlink-org/stlink/pull/1420))\n- libusb-cmake as libusb provider and added support for MSVC ([#1424](https://github.com/stlink-org/stlink/pull/1424), [#1440](https://github.com/stlink-org/stlink/pull/1440))\n- [STM32L4Q5CG]: Added support for device ([#1438](https://github.com/stlink-org/stlink/pull/1438), [#1439](https://github.com/stlink-org/stlink/pull/1439))\n\nUpdates & changes:\n\n- [stlink-lib] Clarified warning message for data alignment ([#1371](https://github.com/stlink-org/stlink/pull/1371), commit [#40ee5f4](https://github.com/stlink-org/stlink/commit/40ee5f4bd1151cec65f291f0166429b061c6e5c0))\n- Rewrite commandline usage text for st-flash tool ([#1372](https://github.com/stlink-org/stlink/pull/1372), commit [#95862cc](https://github.com/stlink-org/stlink/commit/95862cc687203ca20e328804f149959c51da2947))\n- Debian 11 x64 doesn't work with v1.8.0 because of incompatible glibc ([#1376](https://github.com/stlink-org/stlink/pull/1376), commit [#ece34ef](https://github.com/stlink-org/stlink/commit/ece34efbce579ca7d367c58f903ffa6dc7bd96e6))\n- [STM32L4R5ZI]: gdb-multiarch uses wrong osabi ([#1386](https://github.com/stlink-org/stlink/pull/1386), [#1387](https://github.com/stlink-org/stlink/pull/1387), [#1394](https://github.com/stlink-org/stlink/pull/1394))\n- [doc] STM32H573 reports chipid 0x000 ([#1398](https://github.com/stlink-org/stlink/pull/1398), commit [#3655871](https://github.com/stlink-org/stlink/commit/3655871f8dd97294bbee191c1c7341c8a129af2f))\n\nFixes:\n\n- Can't build stlink 1.8.0 for Fedora ([#1365](https://github.com/stlink-org/stlink/pull/1365), [#1444](https://github.com/stlink-org/stlink/pull/1444), commit [#6a6718b](https://github.com/stlink-org/stlink/commit/6a6718b3342b6c5e282a4e33325b9f97908a0692))\n- Fixed include path for header file poll.h ([#1370](https://github.com/stlink-org/stlink/pull/1370), commit [#710e1d3](https://github.com/stlink-org/stlink/commit/710e1d3c3b72187769fcc6a4878c73e35ce03f9b))\n- Cmake minimal version mismatch ([#1374](https://github.com/stlink-org/stlink/pull/1374), [#1375](https://github.com/stlink-org/stlink/pull/1375), commit [#1ee7f6b](https://github.com/stlink-org/stlink/commit/1ee7f6b6c05e305112bb070ae571ebbe26c55946))\n- Added a graceful way to terminate st-util ([#1395](https://github.com/stlink-org/stlink/pull/1395), [#1396](https://github.com/stlink-org/stlink/pull/1396))\n- [st-trace] Bug in function static bool read_trace( ) ([#1400](https://github.com/stlink-org/stlink/pull/1400), commit [#32ce4bf](https://github.com/stlink-org/stlink/commit/32ce4bf88a816fb6a9841a33e6c5f6b593a9b927))\n- Fixed STM32H7 FLASH_OPTCR unlock sequence ([#1401](https://github.com/stlink-org/stlink/pull/1401), [#1416](https://github.com/stlink-org/stlink/pull/1416))\n- Restored support for STM32G4 Cat4 device STM32G491 ([#1403](https://github.com/stlink-org/stlink/pull/1403), [#1414](https://github.com/stlink-org/stlink/pull/1414))\n- Target reset is less reliable on testing branch ([#1409](https://github.com/stlink-org/stlink/pull/1409), commit [#733893a](https://github.com/stlink-org/stlink/commit/733893a50b1cc9323765a62c456c129ed6807886))\n- Fixed STM32H7 option byte programming ([#1417](https://github.com/stlink-org/stlink/pull/1417))\n- Latest release stlink-1.8.0-win32 doesn't run ([#1364](https://github.com/stlink-org/stlink/pull/1364), [#1410](https://github.com/stlink-org/stlink/pull/1410), commit [#e493109](https://github.com/stlink-org/stlink/commit/e4931097f887d8a048d1d188388b82ced918cf08))\n- Make path to .chip files relative to installation directory on Windows ([#1421](https://github.com/stlink-org/stlink/pull/1421))\n- Re-add support for STM32F411xC/xE option bytes read/write ([#1422](https://github.com/stlink-org/stlink/pull/1422))\n- Replaced deprecated cmd to fix package uninstall ([#1426](https://github.com/stlink-org/stlink/pull/1426))\n- Fixed compilation error -Wshorten-64-to-32 in stlink-lib/usb.c ([#1427](https://github.com/stlink-org/stlink/pull/1427))\n- st-util cannot parse -V and -F options and --freq option results in a segmentation fault ([#1428](https://github.com/stlink-org/stlink/pull/1428), [#1429](https://github.com/stlink-org/stlink/pull/1429))\n\n\n# v1.8.0\n\nRelease date: 2024-02-01\n\nThis release drops support for macOS and some older operating systems. Check project README for details.\nRemoved Travis CI integration as it is no longer functional.\n\nUpdated system requirements:\n- C-Standard: C11 (ISO/IEC 9899:2011)\n- `cmake` >= 3.13.0\n- `libusb` >= 1.0.22\n- `libgtk-dev` >= 3.22.30\n\nFeatures:\n\n- Support for writing option bytes on STM32F0/F1/F3 ([#346](https://github.com/stlink-org/stlink/pull/346), [#458](https://github.com/stlink-org/stlink/pull/458), [#808](https://github.com/stlink-org/stlink/pull/808), [#1084](https://github.com/stlink-org/stlink/pull/1084), [#1112](https://github.com/stlink-org/stlink/pull/1112))\n- Initial support for STM32 L5 & U5 devices and minor changes ([#1005](https://github.com/stlink-org/stlink/pull/1005), [#1096](https://github.com/stlink-org/stlink/pull/1096), [#1247](https://github.com/stlink-org/stlink/pull/1247), [#1300](https://github.com/stlink-org/stlink/pull/1300), [#1301](https://github.com/stlink-org/stlink/pull/1301))\n- Added chip-IDs for STM32G0B0/G0B1/G0C1/G050/G051/G061 ([#1140](https://github.com/stlink-org/stlink/pull/1140), [#1359](https://github.com/stlink-org/stlink/pull/1359))\n- Added option byte info for STM32F411XX ([#1141](https://github.com/stlink-org/stlink/pull/1141))\n- Expanded and revised list of chips ([#1145](https://github.com/stlink-org/stlink/pull/1145), [#1164](https://github.com/stlink-org/stlink/pull/1164))\n- STM32H72X/3X: Added full access to all device memory ([#1158](https://github.com/stlink-org/stlink/pull/1158), [#1159](https://github.com/stlink-org/stlink/pull/1159))\n- Added support for STM32WLEx ([#1173](https://github.com/stlink-org/stlink/pull/1173), [#1273](https://github.com/stlink-org/stlink/pull/1273))\n- Added support for STLINK-V3 devices with no MSD ([#1185](https://github.com/stlink-org/stlink/pull/1185))\n- Updated gdb-server.c to allow external memory access on STM32H73xx ([#1196](https://github.com/stlink-org/stlink/pull/1196), [#1197](https://github.com/stlink-org/stlink/pull/1197))\n- Erase addr size / section of the flash memory with st-flash ([#1213](https://github.com/stlink-org/stlink/pull/1213))\n- Added support for STM32L4Q5 ([#1224](https://github.com/stlink-org/stlink/pull/1224), [#1295](https://github.com/stlink-org/stlink/pull/1295))\n- Added writing and reading for STM32WL option bytes ([#1226](https://github.com/stlink-org/stlink/pull/1226), [#1227](https://github.com/stlink-org/stlink/pull/1227))\n- Added parametres option_base, option_size for F401xD_xE ([#1235](https://github.com/stlink-org/stlink/pull/1235))\n- Added support for option bytes to F1xx_XLD (GD32F30x) ([#1250](https://github.com/stlink-org/stlink/pull/1250))\n- Added option byte address for L4Rx devices ([#1254](https://github.com/stlink-org/stlink/pull/1254))\n- Added udev-rule rule for the STLink v3 MINIE programmer ([#1274](https://github.com/stlink-org/stlink/pull/1274), [#1281](https://github.com/stlink-org/stlink/pull/1281), [#1358](https://github.com/stlink-org/stlink/pull/1358))\n- Added support for STM32C0x1 devices ([#1329](https://github.com/stlink-org/stlink/pull/1329), [#1354](https://github.com/stlink-org/stlink/pull/1354))\n- First Implementation of the OTP Read/Write function ([#1352](https://github.com/stlink-org/stlink/pull/1352), [#1353](https://github.com/stlink-org/stlink/pull/1353))\n\nUpdates & changes:\n\n- [refactoring] Moved chip-specific parameters into separate files ([#237](https://github.com/stlink-org/stlink/pull/237), [#1129](https://github.com/stlink-org/stlink/pull/1129))\n- [refactoring] General maintenance for code structure ([#903](https://github.com/stlink-org/stlink/pull/903), [#1090](https://github.com/stlink-org/stlink/pull/1090), [#1199](https://github.com/stlink-org/stlink/pull/1199), [#1212](https://github.com/stlink-org/stlink/pull/1212), [#1216](https://github.com/stlink-org/stlink/pull/1216), [#1228](https://github.com/stlink-org/stlink/pull/1228))\n- Added instructions for bug-reports and feature-requests to contribution guidelines ([#906](https://github.com/stlink-org/stlink/pull/906))\n- Added travis CI configuration for macOS 10.14 to maintain capability for 32-bit compilation (commit [#f5ada94](https://github.com/stlink-org/stlink/commit/f5ada9474cdb87ff37de0d4eb9e75622b5870646))\n- [refactoring] Clean code with unified variable type ([#909](https://github.com/stlink-org/stlink/pull/909), commit [#5e85fd0](https://github.com/stlink-org/stlink/commit/5e85fd063908f89499180c28fe5e9ba74868b272))\n- Updated description of chip id 0x0457 to L01x/L02x ([#1143](https://github.com/stlink-org/stlink/pull/1143), [#1144](https://github.com/stlink-org/stlink/pull/1144))\n- [doc] Human-readable flash_type in chip-id files ([#1155](https://github.com/stlink-org/stlink/pull/1155), commit [#1745bf5](https://github.com/stlink-org/stlink/commit/1745bf5193c4d3186d4f6fde59cc86e9bad6e61b))\n- Dropped execute bits from source code files ([#1167](https://github.com/stlink-org/stlink/pull/1167))\n- Use proper Markdown headers for supported MCUs ([#1168](https://github.com/stlink-org/stlink/pull/1168))\n- Ability to flash F7 devices when in dual-bank mode ([#1174](https://github.com/stlink-org/stlink/pull/1174))\n- Removed redundant array ([#1178](https://github.com/stlink-org/stlink/pull/1178))\n- Updated chip config files from the library structs ([#1181](https://github.com/stlink-org/stlink/pull/1181))\n- [doc] Corrected file path in tutorial ([#1186](https://github.com/stlink-org/stlink/pull/1186))\n- Improved chipid checks and printouts ([#1188](https://github.com/stlink-org/stlink/pull/1188))\n- [refactoring] Sourcefile 'common.c' ([#1218](https://github.com/stlink-org/stlink/pull/1218), [#1220](https://github.com/stlink-org/stlink/pull/1220))\n- [STM32H735]: Set hardware breakpoints for external bus ([#1219](https://github.com/stlink-org/stlink/pull/1219))\n- Set C standard through cmake variables ([#1221](https://github.com/stlink-org/stlink/pull/1221))\n- [doc] Added make install to the macOS compiling instructions ([#1259](https://github.com/stlink-org/stlink/pull/1259))\n- [doc] Linux Install from code Documentation improvement ([#1263](https://github.com/stlink-org/stlink/pull/1263), commit [#43498de](https://github.com/stlink-org/stlink/commit/43498dedf651260ef34197e512d35e3ad7142401))\n- End of support for macOS ([#1269](https://github.com/stlink-org/stlink/pull/1269), [#1296](https://github.com/stlink-org/stlink/pull/1296), commit [#61ff09e](https://github.com/stlink-org/stlink/commit/61ff09e5274d46a46ae58bc4ffe44fe90a887ea6))\n- [doc] Added device ID for GD32F303VET6 ([#1288](https://github.com/stlink-org/stlink/pull/1288))\n- [doc] Fixed broken links ([#1312](https://github.com/stlink-org/stlink/pull/1312))\n- [doc] Updated package source link for Arch Linux ([#1318](https://github.com/stlink-org/stlink/pull/1318))\n- CMake: Avoid hard-wired /usr/local/share ([#1325](https://github.com/stlink-org/stlink/pull/1325))\n- [doc] Provide access to the UART via virtual com port ([#1334](https://github.com/stlink-org/stlink/pull/1334), commit [#32e8dcc](https://github.com/stlink-org/stlink/commit/32e8dcc8b5dbed7b6412e7838ea1b2c41f0247fd))\n\nFixes:\n\n- Fixed some flashing issues on STM32L0 ([#681](https://github.com/stlink-org/stlink/pull/681), [#1203](https://github.com/stlink-org/stlink/pull/1203), [#1225](https://github.com/stlink-org/stlink/pull/1225), [#1253](https://github.com/stlink-org/stlink/pull/1253), [#1289](https://github.com/stlink-org/stlink/pull/1289), [#1330](https://github.com/stlink-org/stlink/pull/1330))\n- cmake: Install shared libraries in proper directories ([#1098](https://github.com/stlink-org/stlink/pull/1098), [#1138](https://github.com/stlink-org/stlink/pull/1138), [#1154](https://github.com/stlink-org/stlink/pull/1154))\n- cmake: Install shared libraries in proper directories ([#1142](https://github.com/stlink-org/stlink/pull/1142))\n- Fixed clearance of the H7 dual bank flag ([#1146](https://github.com/stlink-org/stlink/pull/1146), [#1147](https://github.com/stlink-org/stlink/pull/1147), [#1342](https://github.com/stlink-org/stlink/pull/1342))\n- Fix for 'libusb_devices were leaked' when no ST-LINK programmer was found ([#1150](https://github.com/stlink-org/stlink/pull/1150))\n- Set of fixes and improvements ([#1153](https://github.com/stlink-org/stlink/pull/1153), [#1154](https://github.com/stlink-org/stlink/pull/1154))\n- Removed limit check for WRITEMEM_32BIT ([#1157](https://github.com/stlink-org/stlink/pull/1157))\n- Fixed get_stm32l0_flash_base address for STM32L152RE ([#1161](https://github.com/stlink-org/stlink/pull/1161), [#1162](https://github.com/stlink-org/stlink/pull/1162))\n- Fixed segfault if chip was not found in chip config files ([#1138](https://github.com/stlink-org/stlink/pull/1138), [#1163](https://github.com/stlink-org/stlink/pull/1163), [#1165](https://github.com/stlink-org/stlink/pull/1165), [#1166](https://github.com/stlink-org/stlink/pull/1166), [#1170](https://github.com/stlink-org/stlink/pull/1170))\n- Fixed parsing hex numbers in chip config files ([#1156](https://github.com/stlink-org/stlink/pull/1156), commit [#1d301a5](https://github.com/stlink-org/stlink/commit/1d301a5498433900250fe2a8c0e10dfb7f44d7a4))\n- Fixed parsing hex numbers in chip config files ([#1169](https://github.com/stlink-org/stlink/pull/1169))\n- Corrected flash_pagesize to use hex format ([#1172](https://github.com/stlink-org/stlink/pull/1172))\n- Fixed compilation for MSVC ([#1176](https://github.com/stlink-org/stlink/pull/1176))\n- Fixed few warnings for msvc about type conversion with possible lost data ([#1179](https://github.com/stlink-org/stlink/pull/1179))\n- st-flash and other utilities search for chip files in the wrong directory ([#1180](https://github.com/stlink-org/stlink/pull/1180), commit [#c8fc656](https://github.com/stlink-org/stlink/commit/c8fc6561fead79ad49c09d82bab864745086792c))\n- Fixed broken build on 32 bit systems ([#985](https://github.com/stlink-org/stlink/pull/985), [#1175](https://github.com/stlink-org/stlink/pull/1175), commit [#c8fc656](https://github.com/stlink-org/stlink/commit/c8fc6561fead79ad49c09d82bab864745086792c))\n- Define 'SSIZE_MAX' if not defined ([#1183](https://github.com/stlink-org/stlink/pull/1183))\n- [STM32G031G8]: BOOT_LOCK is not possible to change on option bytes address 0x1FFF7870 ([#1194](https://github.com/stlink-org/stlink/pull/1194))\n- Fixed compliation for OpenBSD 7.0 ([#1202](https://github.com/stlink-org/stlink/pull/1202))\n- Included 'SSIZE_MAX' from 'limits.h' in 'src/common.c' ([#1207](https://github.com/stlink-org/stlink/pull/1207))\n- Fix for libusb_kernel_driver_active & error handling for st.st_size () ([#1210](https://github.com/stlink-org/stlink/pull/1210), [#1211](https://github.com/stlink-org/stlink/pull/1211), [#1214](https://github.com/stlink-org/stlink/pull/1214))\n- General fixes and improvements ([#1240](https://github.com/stlink-org/stlink/pull/1240), [#1242](https://github.com/stlink-org/stlink/pull/1242), [#1290](https://github.com/stlink-org/stlink/pull/1290), [#1291](https://github.com/stlink-org/stlink/pull/1291), [#1295](https://github.com/stlink-org/stlink/pull/1295))\n- Fixes for project compilation ([#1241](https://github.com/stlink-org/stlink/pull/1241), [#1271](https://github.com/stlink-org/stlink/pull/1271), [#1283](https://github.com/stlink-org/stlink/pull/1283), [#1286](https://github.com/stlink-org/stlink/pull/1286),commit [#f93adb9](https://github.com/stlink-org/stlink/commit/f93adb92f2e4ecf05a9361cb723c98693586929d))\n- st-trace: Fixed clock issues ([#1248](https://github.com/stlink-org/stlink/pull/1248), [#1251](https://github.com/stlink-org/stlink/pull/1251), [#1252](https://github.com/stlink-org/stlink/pull/1252))\n- Fixed compilation with gcc-12 ([#1257](https://github.com/stlink-org/stlink/pull/1257), [#1267](https://github.com/stlink-org/stlink/pull/1267))\n- Fixed flash regs addr for STM32L152RET6 in common_flash.c ([#1265](https://github.com/stlink-org/stlink/pull/1265))\n- Fixed flash, dbgmcu and rcc registers for STM32L1 ([#1266](https://github.com/stlink-org/stlink/pull/1266))\n- Fixed incorrect SRAM size for L496x and L4A6x ([#1268](https://github.com/stlink-org/stlink/pull/1268), commit [#ff81148](https://github.com/stlink-org/stlink/commit/ff8114895a9fc32cae6a9374e58eac6256d68183))\n- Fixed st-trace reconnect on Windows ([#1272](https://github.com/stlink-org/stlink/pull/1272), [#1292](https://github.com/stlink-org/stlink/pull/1292))\n- [compilation] Corrected path to stlink/chips subdirectory ([#1276](https://github.com/stlink-org/stlink/pull/1276), [#1279](https://github.com/stlink-org/stlink/pull/1279))\n- [compilation] Fixed GUI compilation failure on OpenBSD i386 ([#1284](https://github.com/stlink-org/stlink/pull/1284))\n- [STM32U5x5]: Last bytes are not written (flashed) when len(<binary>)%16 <= 8 ([#1303](https://github.com/stlink-org/stlink/pull/1303), [#1315](https://github.com/stlink-org/stlink/pull/1315))\n- [STM32WLE]: Erase flash fails on second page ([#1305](https://github.com/stlink-org/stlink/pull/1305), commit [#7dcb130](https://github.com/stlink-org/stlink/commit/7dcb1302d8b91b2217c4ce50cb255aa8e78ab001))\n- Fixed unbounded write and check return values of sscanf ([#1306](https://github.com/stlink-org/stlink/pull/1306))\n- Added null check for return value of stlink_chipid_get_params() ([#1307](https://github.com/stlink-org/stlink/pull/1307))\n- Fixed warning in a few *.cmake files ([#1309](https://github.com/stlink-org/stlink/pull/1309))\n- Fixed support for STM32U5 chips ([#1320](https://github.com/stlink-org/stlink/pull/1320), [#1355](https://github.com/stlink-org/stlink/pull/1355))\n- [STM32G0B1]: Erase fails starting page 64 ([#1321](https://github.com/stlink-org/stlink/pull/1321))\n- Notification \"unknown option -- u\" in tool st-util ([#1326](https://github.com/stlink-org/stlink/pull/1326), [#1327](https://github.com/stlink-org/stlink/pull/1327))\n- Do not crash when the STLink chip returns a voltage factor of zero ([#1343](https://github.com/stlink-org/stlink/pull/1343))\n- stlink-gui: failed to allocate 139988352155568 bytes ([#1356](https://github.com/stlink-org/stlink/pull/1356))\n- [STM32U575RGT6]: Verification failed at offset 43008 ([#1362](https://github.com/stlink-org/stlink/pull/1362), commit [#0145bae](https://github.com/stlink-org/stlink/commit/0145baeb2e3bac31bf9d3cbd0dab38d70618d46b))\n\n\n# v1.7.0\n\nRelease date: 2021-04-25\n\nThis release drops support for the STLINK/V1 programmer on macOS 10.13.\n\nFeatures:\n\n- Extended set of cmd line arguments for st-info and st-util ([#332](https://github.com/stlink-org/stlink/pull/332), [#990](https://github.com/stlink-org/stlink/pull/990), [#1091](https://github.com/stlink-org/stlink/pull/1091), [#1114](https://github.com/stlink-org/stlink/pull/1114))\n- Extended support for STM32H7 & rework of software reset ([#532](https://github.com/stlink-org/stlink/pull/532), [#801](https://github.com/stlink-org/stlink/pull/801), [#868](https://github.com/stlink-org/stlink/pull/868), [#1008](https://github.com/stlink-org/stlink/pull/1008), [#1059](https://github.com/stlink-org/stlink/pull/1059), [#1063](https://github.com/stlink-org/stlink/pull/1063), [#1071](https://github.com/stlink-org/stlink/pull/1071))\n- Added support for STM32H742/743/753 ([#671](https://github.com/stlink-org/stlink/pull/671), [#793](https://github.com/stlink-org/stlink/pull/793), [#823](https://github.com/stlink-org/stlink/pull/823), [#998](https://github.com/stlink-org/stlink/pull/998), [#1052](https://github.com/stlink-org/stlink/pull/1052), [#1184](https://github.com/stlink-org/stlink/pull/1184), [#1324](https://github.com/stlink-org/stlink/pull/1324))\n- Official support for STLINK-V3 programmers (commit [#5e0a502](https://github.com/stlink-org/stlink/commit/5e0a502df812495bfa96fa9116a19f1306152b17), [#820](https://github.com/stlink-org/stlink/pull/820), [#1022](https://github.com/stlink-org/stlink/pull/1022), [#1025](https://github.com/stlink-org/stlink/pull/1025))\n- Added preliminary support for STM32L5x2 ([#904](https://github.com/stlink-org/stlink/pull/904), [#999](https://github.com/stlink-org/stlink/pull/999))\n- Option bytes on the STM32F767 ZIT6 Nucleo-144 ([#968](https://github.com/stlink-org/stlink/pull/968), [#997](https://github.com/stlink-org/stlink/pull/997))\n- Use SetConsoleCtrlHandler for Windows ([#1021](https://github.com/stlink-org/stlink/pull/1021))\n- Increase STM32L0 `option_size` to 20 ([#1046](https://github.com/stlink-org/stlink/pull/1046))\n- `st-util`: Add specialized memory map for STM32H7 devices ([#1060](https://github.com/stlink-org/stlink/pull/1060))\n- Support for STM32F4 option bytes ([#1062](https://github.com/stlink-org/stlink/pull/1062))\n- Link for WIN32 & APPLE with stlink-static ([#1069](https://github.com/stlink-org/stlink/pull/1069))\n- ITM functionality for STLink/V2 and STM32Fxx chipsets ([#136](https://github.com/stlink-org/stlink/pull/136), [#179](https://github.com/stlink-org/stlink/pull/179), [#815](https://github.com/stlink-org/stlink/pull/815), [#1072](https://github.com/stlink-org/stlink/pull/1072))\n- Included ITM functionality for building with MSVC ([#1080](https://github.com/stlink-org/stlink/pull/1080))\n- Update for CI integration (commit [#0eebc9a](https://github.com/stlink-org/stlink/commit/0eebc9a74506e84d5c460ec325ae98064a81885e), [#1118](https://github.com/stlink-org/stlink/pull/1118))\n\nUpdates & changes:\n\n- [doc] Added tutorial section on unknown chip id error (commit [#229c721](https://github.com/stlink-org/stlink/commit/229c721189587760db5509c59b3c02e93e7035c8), [#107](https://github.com/stlink-org/stlink/pull/107), [#568](https://github.com/stlink-org/stlink/pull/568))\n- [doc] Updated documentation on target resetting ([#261](https://github.com/stlink-org/stlink/pull/261), [#533](https://github.com/stlink-org/stlink/pull/533), [#1107](https://github.com/stlink-org/stlink/pull/1107))\n- [doc] Added note on `(gdb) run` command (commit [#03793d4](https://github.com/stlink-org/stlink/commit/03793d42b6078344a9ef8ad55f1d5d0fc19e486e), [#267](https://github.com/stlink-org/stlink/pull/267))\n- [doc] `st-flash --reset` parameter (one solution for #356) ([#642](https://github.com/stlink-org/stlink/pull/642))\n- [refactoring] General maintenance ([#864](https://github.com/stlink-org/stlink/pull/864). [#978](https://github.com/stlink-org/stlink/pull/978))\n- Imported debian pkg-settings ([#986](https://github.com/stlink-org/stlink/pull/986))\n- Add support for FreeBSD's `libusb` reimplementation ([#992](https://github.com/stlink-org/stlink/pull/992), [#993](https://github.com/stlink-org/stlink/pull/993))\n- [doc] Added explanation about STM32F103 fake chips (commit [#a66557a](https://github.com/stlink-org/stlink/commit/a66557a102d48e69feb0a9746e8e42c4baf31fe2), [#1024](https://github.com/stlink-org/stlink/pull/1024))\n- [doc] Added example for output of `st-info --probe` ([#1007](https://github.com/stlink-org/stlink/pull/1007), [#1049](https://github.com/stlink-org/stlink/pull/1049))\n- [refactoring] Correctly handle endianness without reference to host platform ([#1081](https://github.com/stlink-org/stlink/pull/1081))\n- Check format string for log messages ([#1093](https://github.com/stlink-org/stlink/pull/1093))\n- Removed abort() from stlink-lib ([#1116](https://github.com/stlink-org/stlink/pull/1116))\n\nFixes:\n\n- Improvements and fixes of the flash loaders, unification of the reset function ([#244](https://github.com/stlink-org/stlink/pull/244), [#382](https://github.com/stlink-org/stlink/pull/382), [#705](https://github.com/stlink-org/stlink/pull/705), [#724](https://github.com/stlink-org/stlink/pull/724), [#980](https://github.com/stlink-org/stlink/pull/980), [#995](https://github.com/stlink-org/stlink/pull/995), [#1008](https://github.com/stlink-org/stlink/pull/1008), [#1115](https://github.com/stlink-org/stlink/pull/1115), [#1117](https://github.com/stlink-org/stlink/pull/1117), [#1122](https://github.com/stlink-org/stlink/pull/1122), [#1124](https://github.com/stlink-org/stlink/pull/1124))\n- Flash loader rework ([#356](https://github.com/stlink-org/stlink/pull/356), [#556](https://github.com/stlink-org/stlink/pull/556), [#593](https://github.com/stlink-org/stlink/pull/593), [#597](https://github.com/stlink-org/stlink/pull/597), [#607](https://github.com/stlink-org/stlink/pull/607), [#612](https://github.com/stlink-org/stlink/pull/612), [#638](https://github.com/stlink-org/stlink/pull/638), [#661](https://github.com/stlink-org/stlink/pull/661), [#690](https://github.com/stlink-org/stlink/pull/690), [#724](https://github.com/stlink-org/stlink/pull/724), [#807](https://github.com/stlink-org/stlink/pull/807), [#817](https://github.com/stlink-org/stlink/pull/817), [#818](https://github.com/stlink-org/stlink/pull/818), [#854](https://github.com/stlink-org/stlink/pull/854), [#868](https://github.com/stlink-org/stlink/pull/868), [#967](https://github.com/stlink-org/stlink/pull/967), [#979](https://github.com/stlink-org/stlink/pull/979), [#1008](https://github.com/stlink-org/stlink/pull/1008), [#1043](https://github.com/stlink-org/stlink/pull/1043), [#1054](https://github.com/stlink-org/stlink/pull/1054), [#1092](https://github.com/stlink-org/stlink/pull/1092), [#1105](https://github.com/stlink-org/stlink/pull/1105), [#1113](https://github.com/stlink-org/stlink/pull/1113))\n- Fixed old DFU serial number for STLINK programmers ([#417](https://github.com/stlink-org/stlink/pull/417), [#494](https://github.com/stlink-org/stlink/pull/494), [#1106](https://github.com/stlink-org/stlink/pull/1106), [#1121](https://github.com/stlink-org/stlink/pull/1121))\n- Improvements for Chip_ID read ([#620](https://github.com/stlink-org/stlink/pull/620), [#1008](https://github.com/stlink-org/stlink/pull/1008), [#1120](https://github.com/stlink-org/stlink/pull/1120))\n- Use vl flashloader for all STM32F1 series ([#724](https://github.com/stlink-org/stlink/pull/724), [#769](https://github.com/stlink-org/stlink/pull/769), [#1041](https://github.com/stlink-org/stlink/pull/1041), [#1044](https://github.com/stlink-org/stlink/pull/1044))\n- [regression] Changed timeout on flash write ([#787](https://github.com/stlink-org/stlink/pull/787), [#981](https://github.com/stlink-org/stlink/pull/981), [#987](https://github.com/stlink-org/stlink/pull/987))\n- cmake compile failure with external `CMAKE_MODULE_PATH` set ([#962](https://github.com/stlink-org/stlink/pull/962))\n- doc/man: Fixed installation directory ([#970](https://github.com/stlink-org/stlink/pull/970))\n- Fixed installation path for desktop-file and icons ([#972](https://github.com/stlink-org/stlink/pull/972))\n- Fix for static linking of `libssp` ([#973](https://github.com/stlink-org/stlink/pull/973), [#974](https://github.com/stlink-org/stlink/pull/974))\n- [regression] Fixed wrong formatting for library install path ([#978](https://github.com/stlink-org/stlink/pull/978), [#1089](https://github.com/stlink-org/stlink/pull/1089), [#1277](https://github.com/stlink-org/stlink/pull/1277))\n- Fixed installation of header files needed for compiling with `libstlink.so.1.6.1` (commit [#31b1fa1](https://github.com/stlink-org/stlink/commit/31b1fa16201521e2aaf464576f2f169981abede0), [#982](https://github.com/stlink-org/stlink/pull/982))\n- Fixed `connect under reset` for `st-flash` and `st-util` ([#983](https://github.com/stlink-org/stlink/pull/983))\n- Fix for `mmap() size_t overflow` in `st-flash` ([#988](https://github.com/stlink-org/stlink/pull/988), [#989](https://github.com/stlink-org/stlink/pull/989))\n- [regression] `stlink-gui` installation issue on Ubuntu-18.04 ([#1001](https://github.com/stlink-org/stlink/pull/1001), [#1004](https://github.com/stlink-org/stlink/pull/1004), [#1006](https://github.com/stlink-org/stlink/pull/1006))\n- `st-util`: wrong register values passed to `gdb` (STLink/V2) ([#1002](https://github.com/stlink-org/stlink/pull/1002), [#1011](https://github.com/stlink-org/stlink/pull/1011), [#1026](https://github.com/stlink-org/stlink/pull/1026), [#1027](https://github.com/stlink-org/stlink/pull/1027), [#1038](https://github.com/stlink-org/stlink/pull/1038), [#1064](https://github.com/stlink-org/stlink/pull/1064), [#1065](https://github.com/stlink-org/stlink/pull/1065))\n- GDB: Fixed problems with target description ([#1013](https://github.com/stlink-org/stlink/pull/1013), [#1088](https://github.com/stlink-org/stlink/pull/1088), [#1109](https://github.com/stlink-org/stlink/pull/1109))\n- [doc] Fixed wrong path for `rules.d` folder ([#1020](https://github.com/stlink-org/stlink/pull/1020))\n- Fixed support for STLINK/V1 programmer ([#1045](https://github.com/stlink-org/stlink/pull/1045), [#1105](https://github.com/stlink-org/stlink/pull/1105))\n- st-util v1.6.1 does not recognize option --freq (commit [#e576768](https://github.com/stlink-org/stlink/commit/e5767681f14de9851aa970a9299930ca68b2ed92), [#1055](https://github.com/stlink-org/stlink/pull/1055))\n- Fixed `gettimeofday` for MSVC ([#1074](https://github.com/stlink-org/stlink/pull/1074))\n- Bugfixes for compilation with clang ([#1076](https://github.com/stlink-org/stlink/pull/1076), [#1078](https://github.com/stlink-org/stlink/pull/1078))\n- Fixed compilation with GCC 11 ([#1077](https://github.com/stlink-org/stlink/pull/1077))\n- [regression] Flash_loader: increased wait rounds for slow boards ([#1085](https://github.com/stlink-org/stlink/pull/1085))\n- Fixed support for writing option bytes ([#1102](https://github.com/stlink-org/stlink/pull/1102), [#1128](https://github.com/stlink-org/stlink/pull/1128))\n- [doc] Corrected spelling mistake in bug report template ([#1103](https://github.com/stlink-org/stlink/pull/1103))\n- Fixed STM32WB55 reading DEBUG IDCODE from the wrong address ([#1100](https://github.com/stlink-org/stlink/pull/1100), [#1101](https://github.com/stlink-org/stlink/pull/1101))\n- Applied missing changes to tests ([#1119](https://github.com/stlink-org/stlink/pull/1119))\n- Fixed reading of chip ID on Cortex-M0+ core ([#1017](https://github.com/stlink-org/stlink/pull/1017), [#1125](https://github.com/stlink-org/stlink/pull/1125), [#1126](https://github.com/stlink-org/stlink/pull/1126), [#1133](https://github.com/stlink-org/stlink/pull/1133))\n\n\n# v1.6.1\n\nRelease date: 2020-06-01\n\nThis release drops support for some older operating systems. Check project README for details.\n\nFeatures:\n\n- Basic compatibility for STLink/V3 programmer ([#271](https://github.com/stlink-org/stlink/pull/271), [#863](https://github.com/stlink-org/stlink/pull/863), [#954](https://github.com/stlink-org/stlink/pull/954), [#1023](https://github.com/stlink-org/stlink/pull/1023))\n  - Added support for JTAG command API v2 & distinguish protocol versions v1 and v2\n  - Compatibility with the STLink/V3 firmware which dropped support for the previous API v1\n  - As of firmware version J11 the STLink/V1 programmer supports API v2 commands as well\n- Display programmer serial when no target is connected ([#432](https://github.com/stlink-org/stlink/pull/432), [#933](https://github.com/stlink-org/stlink/pull/933), [#943](https://github.com/stlink-org/stlink/pull/943))\n- Added `connect under reset` to `stlink_open_usb( )` ([#577](https://github.com/stlink-org/stlink/pull/577), [#963](https://github.com/stlink-org/stlink/pull/963))\n- Support for STM32L1, SM32L4 option bytes write ([#596](https://github.com/stlink-org/stlink/pull/596), [#844](https://github.com/stlink-org/stlink/pull/844), [#847](https://github.com/stlink-org/stlink/pull/847))\n- Added `CMAKEFLAGS` and install target ([#804](https://github.com/stlink-org/stlink/pull/804), [#935](https://github.com/stlink-org/stlink/pull/935))\n- Support for STM32G4 ([#822](https://github.com/stlink-org/stlink/pull/822))\n- Added aliased SRAM2 region in the L496 memory map ([#824](https://github.com/stlink-org/stlink/pull/824))\n- Improved support for STM32G0 ([#825](https://github.com/stlink-org/stlink/pull/825), [#850](https://github.com/stlink-org/stlink/pull/850), [#856](https://github.com/stlink-org/stlink/pull/856), [#857](https://github.com/stlink-org/stlink/pull/857))\n- Added postinst script with `depmod -a` for `make package` ([#845](https://github.com/stlink-org/stlink/pull/845), [#931](https://github.com/stlink-org/stlink/pull/931))\n- Calculate checksums for flash operations ([#862](https://github.com/stlink-org/stlink/pull/862), [#924](https://github.com/stlink-org/stlink/pull/924))\n- Adjust the JTAG/SWD frequency via cmdline option ([#893](https://github.com/stlink-org/stlink/pull/893), [#953](https://github.com/stlink-org/stlink/pull/953))\n- Added usb PID and udev rules for STLink/V2.1 found on Nucleo-L432KC and Nucleo-L552ze boards ([#900](https://github.com/stlink-org/stlink/pull/900))\n- STM32G0/G4 improvements ([#910](https://github.com/stlink-org/stlink/pull/910))\n  - Enable mass erase with a flash programming check\n  - Handle G4 Cat3 devices with configurable dual bank flash by using a helper\n\nUpdates & changes:\n\n- [doc] Updated compiling instructions ([#113](https://github.com/stlink-org/stlink/pull/113), commit [#10ae529](https://github.com/stlink-org/stlink/commit/10ae5294cd03aacfc07312010f026d3cb12ea56c))\n- Defined `libusb` version compatibility for supported systems via `LIBUSB_API_VERSION` ([#211](https://github.com/stlink-org/stlink/pull/211), [#782](https://github.com/stlink-org/stlink/pull/782), [#895](https://github.com/stlink-org/stlink/pull/895))\n- Improved argument parsing for CLI tools ([#378](https://github.com/stlink-org/stlink/pull/378), [#922](https://github.com/stlink-org/stlink/pull/922))\n- [doc] Updated tutorial: macOS STLink/V1 detection ([#574](https://github.com/stlink-org/stlink/pull/574), [#587](https://github.com/stlink-org/stlink/pull/587))\n- Enhanced error log with file path for `map_file()` ([#650](https://github.com/stlink-org/stlink/pull/650), [#879](https://github.com/stlink-org/stlink/pull/879), [#921](https://github.com/stlink-org/stlink/pull/921))\n- Enhanced output for error msg `addr not a multiple of pagesize, not supported` ([#663](https://github.com/stlink-org/stlink/pull/663), [#945](https://github.com/stlink-org/stlink/pull/945))\n- Updated STLink/V1 driver for macOS ([#735](https://github.com/stlink-org/stlink/pull/735), [#964](https://github.com/stlink-org/stlink/pull/964))\n- Package distribution: Provide Windows binaries via Debian-based cross-build ([#738](https://github.com/stlink-org/stlink/pull/738), [#795](https://github.com/stlink-org/stlink/pull/795), [#798](https://github.com/stlink-org/stlink/pull/798), [#870](https://github.com/stlink-org/stlink/pull/870), [#955](https://github.com/stlink-org/stlink/pull/955))\n  - [refactoring] Update, corrections & cleanup for build settings (see #955 for details)\n  - New `cpack` package-config for DEB and RPM build\n  - Update for travis build configuration: builds for `clang -m32`, `clang-9`, MinGW-cross on linux\n  - Updated steps for release preparation\n  - Project contributors now listed in separate file\n  - Test files & gui now use shared `stlink-library`\n- [doc] Verify correct udev configuration for device access ([#764](https://github.com/stlink-org/stlink/pull/764))\n- Added more error info to `WLOGs` during probe ([#883](https://github.com/stlink-org/stlink/pull/883))\n- [doc] Added missing documentation for stlink-gui ([#884](https://github.com/stlink-org/stlink/pull/884))\n- Added check for `libssp` during compilation ([#885](https://github.com/stlink-org/stlink/pull/885))\n- Silenced unnecessary messages ([#886](https://github.com/stlink-org/stlink/pull/886))\n- [doc] Defined `libusb` & `cmake` version compatibility ([#896](https://github.com/stlink-org/stlink/pull/896), [#897](https://github.com/stlink-org/stlink/pull/897), [#899](https://github.com/stlink-org/stlink/pull/899), commit [#27aa888](https://github.com/stlink-org/stlink/commit/27aa88821197d3ffe82baff4e971c3488ec39899))\n- Update for STM32G471/473/474/483/484 devices ([#901](https://github.com/stlink-org/stlink/pull/901))\n- [doc] `st-flash --flash=n[k][m]` command line option to override device model ([#902](https://github.com/stlink-org/stlink/pull/902))\n- [refactoring] Improved cmake build process ([#912](https://github.com/stlink-org/stlink/pull/912))\n  - Set up a `libusb` log level accordingly to verbosity ([#894](https://github.com/stlink-org/stlink/pull/894)\n  - [compatibility] Updated `libusb` to v1.0.23 ([#895](https://github.com/stlink-org/stlink/pull/895)\n  - Updated compiling doc & version support ([#896](https://github.com/stlink-org/stlink/pull/896), [#897](https://github.com/stlink-org/stlink/pull/897), [#899](https://github.com/stlink-org/stlink/pull/899))\n  - Version requirements & pkg-maintainer\n  - Fixed install paths in build script\n  - Updated C-flag `-std=gnu99` to `gnu11`)\n  - Added `cmake` uninstall target ([#619](https://github.com/stlink-org/stlink/pull/619), [#907](https://github.com/stlink-org/stlink/pull/907))\n  - Integrated module `GNUInstallDirs.cmake` ([#557](https://github.com/stlink-org/stlink/pull/557))\n  - [doc] Defined version compatibility and installation instructions for macOS\n  - [refactoring] `libusb` detection\n  - Deprecated old `appveyor-mingw` script\n- [refactoring] BSD-License-compliant rewrite of flashloader source files ([#915](https://github.com/stlink-org/stlink/pull/915), [#932](https://github.com/stlink-org/stlink/pull/932))\n- [refactoring] Overall option code rework ([#927](https://github.com/stlink-org/stlink/pull/927))\n- [refactoring] Build settings / GUI-Build on UNIX-based systems if `GTK3` is detected ([#929](https://github.com/stlink-org/stlink/pull/929))\n- [refactoring] Reconfiguration of package build process ([#931](https://github.com/stlink-org/stlink/pull/931), [#936](https://github.com/stlink-org/stlink/pull/936), [#940](https://github.com/stlink-org/stlink/pull/940), commit [#9b19f92](https://github.com/stlink-org/stlink/commit/9b19f9225460472af9d98959b7217d0a840ee972))\n- [refactoring] `st-util`: Removed now useless v1/v2 STLink version stuff ([#934](https://github.com/stlink-org/stlink/pull/934))\n- [refactoring] Cleanup for option bytes and flash settings ([#941](https://github.com/stlink-org/stlink/pull/941))\n- Added compilation guideline for MSVC toolchain ([#942](https://github.com/stlink-org/stlink/pull/942))\n- [refactoring] Cleanup of `cmake` build process ([#944](https://github.com/stlink-org/stlink/pull/944), [#946](https://github.com/stlink-org/stlink/pull/946), [#947](https://github.com/stlink-org/stlink/pull/947))\n  - `libusb` package extraction no longer requires `7zip` as an external unarchiver\n\nFixes:\n\n- Fixed wait-loop for `flash_loader_run()` ([#290](https://github.com/stlink-org/stlink/pull/290))\n- Better argument parsing for CLI tools: `stlink_open_usb` can address v1, v2, v3 ([#378](https://github.com/stlink-org/stlink/pull/378), [#922](https://github.com/stlink-org/stlink/pull/922))\n- Clear the PG bit before setting the `PER` bit ([#579](https://github.com/stlink-org/stlink/pull/579), [#876](https://github.com/stlink-org/stlink/pull/876))\n- Fixed compilation issues with int length on 32-bit platforms ([#629](https://github.com/stlink-org/stlink/pull/629), [#908](https://github.com/stlink-org/stlink/pull/908))\n- Fixed `st-info --probe` mechanism ([#679](https://github.com/stlink-org/stlink/pull/679), [#918](https://github.com/stlink-org/stlink/pull/918))\n- [regression] Fixed sign-compare (`size != rep_len`) in `usb.c` ([#772](https://github.com/stlink-org/stlink/pull/772), [#869](https://github.com/stlink-org/stlink/pull/869), [#872](https://github.com/stlink-org/stlink/pull/872), [#891](https://github.com/stlink-org/stlink/pull/891))\n- Fixed dead loop after an unexpected unplug ([#780](https://github.com/stlink-org/stlink/pull/780), [#812](https://github.com/stlink-org/stlink/pull/812), [#913](https://github.com/stlink-org/stlink/pull/913))\n- Avoid re-define of `O_BINARY` on Windows ([#788](https://github.com/stlink-org/stlink/pull/788))\n- Fixed stlink lock-up when not connected to a device via JTAG / SWD ([#835](https://github.com/stlink-org/stlink/pull/835), [#943](https://github.com/stlink-org/stlink/pull/943))\n- Fixed `st-flash` manpage read example ([#858](https://github.com/stlink-org/stlink/pull/858))\n- Fixed stlink support with no mass storage ([#861](https://github.com/stlink-org/stlink/pull/861))\n- Make `version.cmake` more error-resistant ([#872](https://github.com/stlink-org/stlink/pull/872))\n- Error return in failed probe ([#887](https://github.com/stlink-org/stlink/pull/887), [#890](https://github.com/stlink-org/stlink/pull/890))\n- Fixed broken build on 32-bit systems ([#919](https://github.com/stlink-org/stlink/pull/919), [#920](https://github.com/stlink-org/stlink/pull/920))\n- `st-flash`: Minor usage fix and make cmdline parsing more user friendly ([#925](https://github.com/stlink-org/stlink/pull/925))\n- [regression] Restored functionality of make test builds ([#926](https://github.com/stlink-org/stlink/pull/926), [#929](https://github.com/stlink-org/stlink/pull/929))\n- Fixed compilation error due to uninitialized cpuid ([#937](https://github.com/stlink-org/stlink/pull/937), [#938](https://github.com/stlink-org/stlink/pull/938))\n- Fixes for STM32F0 flashloader ([#958](https://github.com/stlink-org/stlink/pull/958), [#959](https://github.com/stlink-org/stlink/pull/959))\n- Set static link for `libssp` (stack-smashing protection) ([#960](https://github.com/stlink-org/stlink/pull/960), [#961](https://github.com/stlink-org/stlink/pull/961))\n- Fixed udev rules installing to wrong directory ([#966](https://github.com/stlink-org/stlink/pull/966))\n- Fixed formatting for options display in `st-flash` & `st-info` (commits [#c783d0e](https://github.com/stlink-org/stlink/commit/c783d0e777ccc83a7a8be26a4f4d3414e0478560) and [#562cd24](https://github.com/stlink-org/stlink/commit/562cd2496e696dbd22950925866aac662d81ee5f))\n\n\n# v1.6.0\n\nRelease date: 2020-02-20\n\nMajor changes and added features:\n\n- Initial support for STM32L41X ([#754](https://github.com/stlink-org/stlink/pull/754), [#799](https://github.com/stlink-org/stlink/pull/799))\n- Verified support for CKS32F103C8T6 and related CKS devices with Core-ID 0x2ba01477 ([#756](https://github.com/stlink-org/stlink/pull/756), [#757](https://github.com/stlink-org/stlink/pull/757), [#805](https://github.com/stlink-org/stlink/pull/805), [#834](https://github.com/stlink-org/stlink/pull/834), Regression-Fixes: [#761](https://github.com/stlink-org/stlink/pull/761), [#766](https://github.com/stlink-org/stlink/pull/766))\n- Added preliminary support for some STM32G0 chips ([#759](https://github.com/stlink-org/stlink/pull/759), [#760](https://github.com/stlink-org/stlink/pull/760), [#797](https://github.com/stlink-org/stlink/pull/797))\n- Added support for mass erasing second bank on `STM32F10x_XL` ([#767](https://github.com/stlink-org/stlink/pull/767), [#768](https://github.com/stlink-org/stlink/pull/768))\n- Added call to clear `PG` bit after writing to flash ([#773](https://github.com/stlink-org/stlink/pull/773))\n- Added support to write option bytes for the STM32G0 ([#778](https://github.com/stlink-org/stlink/pull/778))\n- Added support for STM32WB55 chips ([#786](https://github.com/stlink-org/stlink/pull/786), [#810](https://github.com/stlink-org/stlink/pull/810), [#816](https://github.com/stlink-org/stlink/pull/816))\n- Added `STLink V3SET` VID:PIDs to the udev rules ([#789](https://github.com/stlink-org/stlink/pull/789))\n- Support for `STM32+Audio` v2-1 firmware ([#790](https://github.com/stlink-org/stlink/pull/790))\n- Build for Windows under Debian/Ubuntu ([#802](https://github.com/stlink-org/stlink/pull/802))\n- Allow for 64 bytes serials ([#809](https://github.com/stlink-org/stlink/pull/809))\n- Added full support for STLINK CHIP ID L4RX ([#814](https://github.com/stlink-org/stlink/pull/814), [#839](https://github.com/stlink-org/stlink/pull/839))\n- Added support for the STLink/V2.1 when flashed with no mass storage (PID 0x3752) ([#819](https://github.com/stlink-org/stlink/pull/819), [#861](https://github.com/stlink-org/stlink/pull/861))\n- Added support for writing option bytes on STM32L0xx ([#830](https://github.com/stlink-org/stlink/pull/830))\n- Added support to read and write option bytes for STM32F2 series ([#836](https://github.com/stlink-org/stlink/pull/836), [#837](https://github.com/stlink-org/stlink/pull/837))\n- Added support to read and write option bytes for STM32F446 ([#843](https://github.com/stlink-org/stlink/pull/843))\n\nUpdates and fixes:\n\n- Fixed an issue with versioning stuck at 1.4.0 for versions cloned with git ([#563](https://github.com/stlink-org/stlink/pull/563), [#762](https://github.com/stlink-org/stlink/pull/762), [#772](https://github.com/stlink-org/stlink/pull/772))\n- Fixed `unkown chip id`, piped output and `st-util -v` ([#665](https://github.com/stlink-org/stlink/pull/665), [#763](https://github.com/stlink-org/stlink/pull/763))\n- Updated STM32F3xx chip ID that covers a few different devices ([#685](https://github.com/stlink-org/stlink/pull/685), [#758](https://github.com/stlink-org/stlink/pull/758))\n- Made udev rules and modprobe conf installation optional ([#741](https://github.com/stlink-org/stlink/pull/741))\n- Fixed case when `__FILE__` doesn't contain either `/` nor `\\\\` ([#745](https://github.com/stlink-org/stlink/pull/745))\n- Fixed double dash issue in doc/man ([#746](https://github.com/stlink-org/stlink/pull/746), [#747](https://github.com/stlink-org/stlink/pull/747))\n- Compiling documentation: package is called `libusb-1.0-0-dev` on Debian ([#748](https://github.com/stlink-org/stlink/pull/748))\n- Only do bank calculation on STM32L4 devices with dual banked flash / Added chip-ID 0x464 for STM32L41xxx/L42xxx devices ([#751](https://github.com/stlink-org/stlink/pull/751))\n- Added `O_BINARY` option to open file ([#753](https://github.com/stlink-org/stlink/pull/753))\n- Fixed versioning when compiling from the checked out git-repo ([#762](https://github.com/stlink-org/stlink/pull/762), [#772](https://github.com/stlink-org/stlink/pull/772))\n- win32: move usleep definition to `unistd.h` ([#765](https://github.com/stlink-org/stlink/pull/765))\n- Fixed relative path to the UI files needed by `stlink-gui-local` (GUI) ([#770](https://github.com/stlink-org/stlink/pull/770), [#771](https://github.com/stlink-org/stlink/pull/771))\n- Added howto for sending `NRST` signal through GDB ([#774](https://github.com/stlink-org/stlink/pull/774), [#776](https://github.com/stlink-org/stlink/pull/776), [#779](https://github.com/stlink-org/stlink/pull/779))\n- Fixed package name `devscripts` in doc/compiling.md ([#775](https://github.com/stlink-org/stlink/pull/775))\n- Fixed few potential memory/resource leaks ([#803](https://github.com/stlink-org/stlink/pull/803), [#831](https://github.com/stlink-org/stlink/pull/831))\n- Updated Linux source repositories in README.md: Debian and Ubuntu ([#821](https://github.com/stlink-org/stlink/pull/821), [#835](https://github.com/stlink-org/stlink/pull/835), [#859](https://github.com/stlink-org/stlink/pull/859))\n- Do not issue JTAG reset on STLink/V1 ([#828](https://github.com/stlink-org/stlink/pull/828))\n- Fixed flash size of STM32 Discovery VL ([#829](https://github.com/stlink-org/stlink/pull/829))\n- Updated documentation on software structure ([#851](https://github.com/stlink-org/stlink/pull/851))\n\nGeneral project updates:\n\n- Updated `README.md`, `CHANGELOG.md` and issue templates (Nightwalker-87)\n- Fixed travis build config file (Nightwalker-87)\n- Added `CODE_OF_CONDUCT` (Nightwalker-87)\n- Archived page from github project wiki to doc/wiki_old.md (Nightwalker-87)\n\n\n# v1.5.1\n\nRelease date: 2018-09-13\n\nMajor changes and added features:\n\n- Added reset through `AIRCR` ([#254](https://github.com/stlink-org/stlink/pull/254), [#540](https://github.com/stlink-org/stlink/pull/540), [#712](https://github.com/stlink-org/stlink/pull/712))\n- Added creation of icons for `.desktop` file ([#684](https://github.com/stlink-org/stlink/pull/684), [#708](https://github.com/stlink-org/stlink/pull/708))\n- Added desktop file for linux ([#688](https://github.com/stlink-org/stlink/pull/688))\n- Added button to export STM32 flash memory to a file ([#691](https://github.com/stlink-org/stlink/pull/691))\n- Updated `libusb` to 1.0.22 ([#695](https://github.com/stlink-org/stlink/pull/695)) - (related Bugs: [#438](https://github.com/stlink-org/stlink/pull/438), [#632](https://github.com/stlink-org/stlink/pull/632))\n- Added icons for stlink GUI ([#697](https://github.com/stlink-org/stlink/pull/697))\n- Added support for STM32L4R9 target ([#694](https://github.com/stlink-org/stlink/pull/694), [#699](https://github.com/stlink-org/stlink/pull/699))\n- Added memory map for STM32F411RE target ([#709](https://github.com/stlink-org/stlink/pull/709))\n- Implemented intel hex support for `GTK` GUI ([#713](https://github.com/stlink-org/stlink/pull/713), [#718](https://github.com/stlink-org/stlink/pull/718))\n\nUpdates and fixes:\n\n- Fixed missing flash_loader for STM32L0x ([#269](https://github.com/stlink-org/stlink/pull/269), [#274](https://github.com/stlink-org/stlink/pull/274), [#654](https://github.com/stlink-org/stlink/pull/654), [#675](https://github.com/stlink-org/stlink/pull/675))\n- Fix for stlink library calls `exit()` or `_exit()` ([#634](https://github.com/stlink-org/stlink/pull/634), [#696](https://github.com/stlink-org/stlink/pull/696))\n- Added semihosting parameter documentation in doc/man ([#674](https://github.com/stlink-org/stlink/pull/674))\n- Fixed reference to non-exisiting `st-term` tool in doc/man ([#676](https://github.com/stlink-org/stlink/pull/676))\n- Fixed serial number size mismatch with `stlink_open_usb()` ([#680](https://github.com/stlink-org/stlink/pull/680))\n- Debian packaging, `cmake` and `README.md` fixes ([#682](https://github.com/stlink-org/stlink/pull/682), [#683](https://github.com/stlink-org/stlink/pull/683))\n- Disabled static library installation by default ([#702](https://github.com/stlink-org/stlink/pull/702))\n- Fix for `libusb` deprecation ([#703](https://github.com/stlink-org/stlink/pull/703), [#704](https://github.com/stlink-org/stlink/pull/704))\n- Renamed `STLINK_CHIPID_STM32_L4R9` to `STLINK_CHIPID_STM32_L4Rx` ([#706](https://github.com/stlink-org/stlink/pull/706))\n- [regression] stlink installation under Linux (Debian 9) is broken since #695 ([#700](https://github.com/stlink-org/stlink/pull/700), [#701](https://github.com/stlink-org/stlink/pull/701), [#707](https://github.com/stlink-org/stlink/pull/707))\n- Fixed flash memory map for STM32F72xxx target ([#711](https://github.com/stlink-org/stlink/pull/711))\n- Proper flash page size calculation for STM32F412xx target ([#721](https://github.com/stlink-org/stlink/pull/721))\n- Return correct value on `EOF` for semihosting `SYS_READ` ([#726](https://github.com/stlink-org/stlink/pull/726), [#727](https://github.com/stlink-org/stlink/pull/727), [#728](https://github.com/stlink-org/stlink/pull/728), [#729](https://github.com/stlink-org/stlink/pull/729), [#730](https://github.com/stlink-org/stlink/pull/730), [#731](https://github.com/stlink-org/stlink/pull/731), [#732](https://github.com/stlink-org/stlink/pull/732))\n- FreeBSD defines `LIBUSB_API_VERSION` instead of `LIBUSBX_API_VERSION` ([#733](https://github.com/stlink-org/stlink/pull/733))\n\n\n# v1.5.0\n\nRelease date: 2018-02-16\n\nMajor changes and added features:\n\n- Added support of STM32L496xx/4A6xx devices ([#615](https://github.com/stlink-org/stlink/pull/615), [#657](https://github.com/stlink-org/stlink/pull/657))\n- Added unknown chip dummy to obtain the serial of the STlink by a call to `st-info --probe` ([#641](https://github.com/stlink-org/stlink/pull/641))\n- Added support for STM32F72xx (chip-ID: 0x452) devices (commit [#1969148](https://github.com/stlink-org/stlink/commit/19691485359afef1a256964afcbb8dcf4b733209))\n\nUpdates and fixes:\n\n- Fixed verification of flash error for STM32L496x device ([#617](https://github.com/stlink-org/stlink/pull/617), [#618](https://github.com/stlink-org/stlink/pull/618))\n- Updated Linux source repositories in README.md: Gentoo, Fedora and RedHat/CentOS ([#622](https://github.com/stlink-org/stlink/pull/622), [#635](https://github.com/stlink-org/stlink/pull/635))\n- Updated changelog in debian package ([#630](https://github.com/stlink-org/stlink/pull/630))\n- Added `LIB_INSTALL_DIR` to correct libs install on 64-bit systems ([#633](https://github.com/stlink-org/stlink/pull/633), [#636](https://github.com/stlink-org/stlink/pull/636))\n- Fixed write for microcontroller with RAM size less or equal to 32K ([#637](https://github.com/stlink-org/stlink/pull/637))\n- Fixed memory map for STM32L496xx boards ([#639](https://github.com/stlink-org/stlink/pull/639))\n- Fixed `__FILE__` base name extraction ([#624](https://github.com/stlink-org/stlink/pull/624), [#628](https://github.com/stlink-org/stlink/pull/628), [#648](https://github.com/stlink-org/stlink/pull/648))\n- Added debian/triggers to run `ldconfig` ([#664](https://github.com/stlink-org/stlink/pull/664))\n- Fixed build on Fedora with GCC 8 ([#666](https://github.com/stlink-org/stlink/pull/666), [#667](https://github.com/stlink-org/stlink/pull/667), [#668](https://github.com/stlink-org/stlink/pull/668))\n\n\n# v1.4.0\n\nRelease date: 2017-07-01\n\nMajor changes and added features:\n\n- Allow building of debian package with CPack ([#554](https://github.com/stlink-org/stlink/pull/554), commit [#5b69f25](https://github.com/stlink-org/stlink/commit/5b69f25198a1a8f34e2ee48d1ad20f79447e3d55))\n- Added support for STM32L011 target ([#564](https://github.com/stlink-org/stlink/pull/564), [#565](https://github.com/stlink-org/stlink/pull/565), [#572](https://github.com/stlink-org/stlink/pull/572))\n- Added support for flashing second bank on STM32F10x_XL ([#592](https://github.com/stlink-org/stlink/pull/592))\n- Initial support to compile with Microsoft Visual Studio 2017 ([#602](https://github.com/stlink-org/stlink/pull/602))\n- Added support for STM32L452 target ([#603](https://github.com/stlink-org/stlink/pull/603), [#608](https://github.com/stlink-org/stlink/pull/608))\n\nUpdates and fixes:\n\n- Added `--flash=n[k][m]` command line option to override device model ([#305](https://github.com/stlink-org/stlink/pull/305), [#516](https://github.com/stlink-org/stlink/pull/516), [#576](https://github.com/stlink-org/stlink/pull/576))\n- Updated `libusb` to 1.0.21 for Windows ([#562](https://github.com/stlink-org/stlink/pull/562))\n- Fixed low-voltage flashing on STM32F7 devices ([#566](https://github.com/stlink-org/stlink/pull/566), [#567](https://github.com/stlink-org/stlink/pull/567))\n- Fixed building with mingw64 ([#569](https://github.com/stlink-org/stlink/pull/569), [#573](https://github.com/stlink-org/stlink/pull/573), [#578](https://github.com/stlink-org/stlink/pull/578), [#582](https://github.com/stlink-org/stlink/pull/582), [#584](https://github.com/stlink-org/stlink/pull/584), [#610](https://github.com/stlink-org/stlink/pull/610), [#846](https://github.com/stlink-org/stlink/pull/846))\n- Fixed possible memory leak ([#570](https://github.com/stlink-org/stlink/pull/570), [#571](https://github.com/stlink-org/stlink/pull/571))\n- Fixed installation path for shared objects ([#581](https://github.com/stlink-org/stlink/pull/581))\n- Fixed a few `-Wformat` warnings ([#582](https://github.com/stlink-org/stlink/pull/582))\n- Removed unused defines in `mingw.h` ([#583](https://github.com/stlink-org/stlink/pull/583))\n- Skip `GTK` detection when cross-compiling ([#588](https://github.com/stlink-org/stlink/pull/588))\n- Fixed compilation with GCC 7 ([#590](https://github.com/stlink-org/stlink/pull/590), [#591](https://github.com/stlink-org/stlink/pull/591))\n- Fixed flashing to `F0 device` targets ([#594](https://github.com/stlink-org/stlink/pull/594), [#595](https://github.com/stlink-org/stlink/pull/595))\n- Fixed wrong counting when flashing ([#605](https://github.com/stlink-org/stlink/pull/605))\n\n\n# v1.3.1\n\nRelease date: 2017-02-25\n\nMajor changes and added features:\n\n- Added support for Semihosting `SYS_READC` ([#546](https://github.com/stlink-org/stlink/pull/546))\n- Added support for STM32F413 ([#549](https://github.com/stlink-org/stlink/pull/549), [#550](https://github.com/stlink-org/stlink/pull/550), [#758](https://github.com/stlink-org/stlink/pull/758))\n- Added preliminary support for STM32L011 to see it after probe (chip-ID 0x457) ([#558](https://github.com/stlink-org/stlink/pull/558), [#598](https://github.com/stlink-org/stlink/pull/598))\n\nUpdates and fixes:\n\n- `cmake/CPackConfig.cmake`: Fixup OSX zip filename\n- Updated source repositories in README.md: Windows, macOS, Alpine Linux\n- Compilation fixes ([#547](https://github.com/stlink-org/stlink/pull/547), [#551](https://github.com/stlink-org/stlink/pull/551), [#552](https://github.com/stlink-org/stlink/pull/552))\n- Stripped full paths to source files in log ([#548](https://github.com/stlink-org/stlink/pull/548))\n- Fixed incorrect release folder name in docs ([#560](https://github.com/stlink-org/stlink/pull/560))\n- Fixed compilation when path includes spaces ([#561](https://github.com/stlink-org/stlink/pull/561))\n\n\n# v1.3.0\n\nRelease date: 2017-01-28\n\nMajor changes and added features:\n\n- Deprecation of autotools (`autoconf`, `automake`) and fixed build with MinGW ([#83](https://github.com/stlink-org/stlink/pull/83), [#431](https://github.com/stlink-org/stlink/pull/431), [#434](https://github.com/stlink-org/stlink/pull/434), [#465](https://github.com/stlink-org/stlink/pull/465))\n- Added intel hex file reading for `st-flash` ([#110](https://github.com/stlink-org/stlink/pull/110), [#157](https://github.com/stlink-org/stlink/pull/157), [#457](https://github.com/stlink-org/stlink/pull/547), [#459](https://github.com/stlink-org/stlink/pull/549))\n- Added support for ARM semihosting to `st-util` ([#147](https://github.com/stlink-org/stlink/pull/147), [#227](https://github.com/stlink-org/stlink/pull/227), [#454](https://github.com/stlink-org/stlink/pull/454), [#455](https://github.com/stlink-org/stlink/pull/455))\n- Added manpages (generated with `pandoc` from Markdown) ([#208](https://github.com/stlink-org/stlink/pull/208), [#464](https://github.com/stlink-org/stlink/pull/464), [#466](https://github.com/stlink-org/stlink/pull/466), [#467](https://github.com/stlink-org/stlink/pull/467))\n- Removal of undocumented `st-term` utility, which is now replaced by `st-util` ARM semihosting feature ([#228](https://github.com/stlink-org/stlink/pull/228), [#507](https://github.com/stlink-org/stlink/pull/507), commit [#3fd0f09](https://github.com/stlink-org/stlink/commit/3fd0f099782506532198473b24f643a3f68d5ff9))\n- Support serial numbers argument for `st-util` and `st-flash` to probe and control multiple connected programmers ([#318](https://github.com/stlink-org/stlink/pull/318), [#398](https://github.com/stlink-org/stlink/pull/398), [#541](https://github.com/stlink-org/stlink/pull/541))\n- Added 'k' (kill) command to gdb-server, which resets the connection ([#358](https://github.com/stlink-org/stlink/pull/358), [#525](https://github.com/stlink-org/stlink/pull/525), [#527](https://github.com/stlink-org/stlink/pull/527), [#528](https://github.com/stlink-org/stlink/pull/528))\n- Merge `st-probe` tool into `st-info` ([#398](https://github.com/stlink-org/stlink/pull/398))\n- Added support for native debian packaging ([#444](https://github.com/stlink-org/stlink/pull/444), [#472](https://github.com/stlink-org/stlink/pull/472), [#473](https://github.com/stlink-org/stlink/pull/473), [#482](https://github.com/stlink-org/stlink/pull/482), [#483](https://github.com/stlink-org/stlink/pull/483), [#484](https://github.com/stlink-org/stlink/pull/484), [#485](https://github.com/stlink-org/stlink/pull/485))\n- Rewritten commandline parsing for `st-flash` ([#459](https://github.com/stlink-org/stlink/pull/459))\n- Added `--reset` command to `st-flash` ([#505](https://github.com/stlink-org/stlink/pull/505))\n\nChip support added for:\n\n- STM32F401XE: Added memory map for device ([#460](https://github.com/stlink-org/stlink/pull/460))\n- STM32F410RBTx ([#418](https://github.com/stlink-org/stlink/pull/418))\n- STM32F412 ([#537](https://github.com/stlink-org/stlink/pull/537), [#538](https://github.com/stlink-org/stlink/pull/538))\n- STM32F7xx ([#324](https://github.com/stlink-org/stlink/pull/324), [#326](https://github.com/stlink-org/stlink/pull/326), [#327](https://github.com/stlink-org/stlink/pull/327), [#337](https://github.com/stlink-org/stlink/pull/337))\n- STM32F7x7x ([#433](https://github.com/stlink-org/stlink/pull/433), [#435](https://github.com/stlink-org/stlink/pull/435), [#436](https://github.com/stlink-org/stlink/pull/436), [#509](https://github.com/stlink-org/stlink/pull/509))\n- STM32L0xx Cat2 devices (chip-ID: 0x425) ([#414](https://github.com/stlink-org/stlink/pull/414))\n- STM32L0xx Cat5 devices (chip-ID: 0x447) ([#387](https://github.com/stlink-org/stlink/pull/387), [#406](https://github.com/stlink-org/stlink/pull/406))\n- STM32L4xx ([#321](https://github.com/stlink-org/stlink/pull/321))\n- STM32L432 ([#500](https://github.com/stlink-org/stlink/pull/500), [#501](https://github.com/stlink-org/stlink/pull/501))\n\nUpdates and fixes:\n\n- Do a JTAG reset prior to reading CPU information when processor is in deep sleep ([#291](https://github.com/stlink-org/stlink/pull/291), [#428](https://github.com/stlink-org/stlink/pull/428), [#430](https://github.com/stlink-org/stlink/pull/430), [#451](https://github.com/stlink-org/stlink/pull/451))\n- Fixed `unaligned addr or size` when trying to write a program in RAM ([#323](https://github.com/stlink-org/stlink/pull/323))\n- Fixed flashing on `STM32_F3_SMALL` ([#325](https://github.com/stlink-org/stlink/pull/325))\n- Fixed STM32L-problem with flash loader ([#390](https://github.com/stlink-org/stlink/pull/390), [#407](https://github.com/stlink-org/stlink/pull/407), [#408](https://github.com/stlink-org/stlink/pull/408))\n- Don't read the target voltage on startup, because it crashes STM32F100 ([#423](https://github.com/stlink-org/stlink/pull/423), [#424](https://github.com/stlink-org/stlink/pull/424))\n- Added a useful error message instead of `[!] send_recv` ([#425](https://github.com/stlink-org/stlink/pull/425), [#426](https://github.com/stlink-org/stlink/pull/426))\n- Fixed STM32F030 erase error ([#442](https://github.com/stlink-org/stlink/pull/442))\n- Fixed memory map for STM32F7xx ([#453](https://github.com/stlink-org/stlink/pull/453), [#456](https://github.com/stlink-org/stlink/pull/456))\n- Redesign of `st-flash` commandline options parsing ([#459](https://github.com/stlink-org/stlink/pull/459))\n- Set `SWDCLK` and fixed `jtag_reset` bug ([#462](https://github.com/stlink-org/stlink/pull/462), [#475](https://github.com/stlink-org/stlink/pull/475), [#534](https://github.com/stlink-org/stlink/pull/534))\n- doc/compiling.md: Add note about installation and `ldconfig` ([#478](https://github.com/stlink-org/stlink/pull/478), commit [#be66bbf](https://github.com/stlink-org/stlink/commit/be66bbf200c718904514b044ba84d64a36456218))\n- Fixed Release target to generate the man-pages with `pandoc` ([#479](https://github.com/stlink-org/stlink/pull/479))\n- Fixed Cygwin build ([#487](https://github.com/stlink-org/stlink/pull/487), ([#506](https://github.com/stlink-org/stlink/pull/506))\n- Reset flash mass erase (MER) bit after mass erase for safety ([#489](https://github.com/stlink-org/stlink/pull/489))\n- Wrong extract command in `FindLibUSB.cmake` ([#510](https://github.com/stlink-org/stlink/pull/510), [#511](https://github.com/stlink-org/stlink/pull/511))\n- Fixed compilation error on Ubuntu 16.10 ([#514](https://github.com/stlink-org/stlink/pull/514), [#525](https://github.com/stlink-org/stlink/pull/525))\n\n\n# v1.2.0\n\nRelease date: 2016-05-16\n\nFeatures added:\n\n- Added multiple stlink probing (`st-info --probe`, `st-info --hla-serial`) with printing serial in hex and OpenOCD `hla_serial` format (Jerry Jacobs)\n- Added stlink usb probe API functions (Jerry Jacobs)\n- Added parameter to specify one stlink v2 of many (Georg von Zengen)\n\nUpdates and fixes:\n\n- Refactoring/fixes of flash loader (Maxime Coquelin)\n- Synchronized cache for STM32F7 (Tristan Gingold)\n- Allow flashing of STM32L4 down to 1.71 V (Greg Meiste)\n- Fix on STM32L4 to clear flash mass erase flags on CR (Bruno Dal Bo)\n- Proper writing of page 0 of second bank for STM32L476xe (Tobias Badertscher)\n- Trace the read data in `stlink_read_debug32` and not the address of the variable (Tobias Badertscher)\n- Mac OS X El Capitan platform support confirmation (Nikolay)\n- Do not send a `NULL` at end of packets to `gdb` (Tristan Gingold)\n- Correctly compute flash write size for partial pages (Dave Vandervies)\n- `_stlink_usb_reset` use hardreset (mlundinse)\n- Make sure MCU is halted before running RAM based flashloaders (mlundinse)\n- Could not flash `STM32_F3_SMALL` (Max Chen)\n- STM32F4 8-bit support for 1.8v operation (Andy Isaacson)\n- Fixed STM32F2xx memory map (Nicolas Schodet)\n- Memory map for STM32F42xxx and STM32F43xxx devices (Craig Lilley)\n- Stm32l0x flash loader (Robin Kreis)\n- Modified determination of erased byte pattern when flashing ([#193](https://github.com/stlink-org/stlink/pull/193), [#377](https://github.com/stlink-org/stlink/pull/377))\n- Use libusb synchronous api ([#194](https://github.com/stlink-org/stlink/pull/194), [#225](https://github.com/stlink-org/stlink/pull/225), [#374](https://github.com/stlink-org/stlink/pull/374))\n- Fixed segfault when programmer is already busy and `NULL` pointers are in the list ([#256](https://github.com/stlink-org/stlink/pull/256), [#394](https://github.com/stlink-org/stlink/pull/394))\n- Fixed gdb-server: Cortex M0 chips have no `FP_CTRL` register for breakpoints ([#266](https://github.com/stlink-org/stlink/pull/266), [#273](https://github.com/stlink-org/stlink/pull/273), [#341](https://github.com/stlink-org/stlink/pull/341))\n- Fixed issue where \"unknown chip id!\" was seen every other time ([#352](https://github.com/stlink-org/stlink/pull/352), [#367](https://github.com/stlink-org/stlink/pull/367), [#381](https://github.com/stlink-org/stlink/pull/381))\n- Send F4 memory-map and features for STM32F429 ([#188](https://github.com/stlink-org/stlink/pull/188), [#196](https://github.com/stlink-org/stlink/pull/196), [#250](https://github.com/stlink-org/stlink/pull/250), [#251](https://github.com/stlink-org/stlink/pull/251)) (Release v1.1.0)\n- Added AHB3 Peripherals definition for STM32F4 ([#218](https://github.com/stlink-org/stlink/pull/218), [#288](https://github.com/stlink-org/stlink/pull/288)) (Release v1.1.0)\n- Reset: st-flash does not work when CPU is in sleep mode ([#62](https://github.com/stlink-org/stlink/pull/62)) (Release v1.0.0)\n- Ensure USB device search succeeds if the matched device is at index 0 ([#126](https://github.com/stlink-org/stlink/pull/126), [#151](https://github.com/stlink-org/stlink/pull/151)) (Release v1.0.0)\n- Corrected flash size register address for STM32F2 devices ([#278](https://github.com/stlink-org/stlink/pull/278)) (Release v1.0.0)\n\nChip support added for:\n\n- STM32L053R8 (Jean-Luc Béchennec)\n- STM32F7 Support (mlundinse)\n- Added STM32L4 to CHIPID #defines and devices[], flash driver and loader (Dave Vandervies)\n- Basic support for STM32F446 (Pavel Kirienko)\n- STM32F303 High Density\n- STM32F469/STM32F479 ([#345](https://github.com/stlink-org/stlink/pull/345), [#555](https://github.com/stlink-org/stlink/pull/555)) (Release v1.2.0)\n- STM32L1xx Cat.2 devices (Nicolas Schodet)\n- STM32L1xx (chip-ID 0x427) ([#152](https://github.com/stlink-org/stlink/pull/152), [#163](https://github.com/stlink-org/stlink/pull/163), [#165](https://github.com/stlink-org/stlink/pull/165)) (Release v1.0.0)\n- Added `SIGINT` handler for stlink cleanup ([#31](https://github.com/stlink-org/stlink/pull/31), [#135](https://github.com/stlink-org/stlink/pull/135)) (Release v1.0.0)\n\nBoard support added for:\n\n- Nucleo-F303RE (Kyle Manna)\n- Nucleo-F411RE (texane)\n\nBuild system:\n\n- Travis: Initial support for Travis continues integration on Linux & Mac OS X (Jerry Jacobs)\n- CMake: Document in README.md and add extra strict compiler flags (Jerry Jacobs)\n- CMake: First stab at a `cmake` build (Josh Bialkowski)\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 14.64453125,
          "content": "###\n# General cmake settings\n###\n\ncmake_minimum_required(VERSION 3.16.3)\ncmake_policy(SET CMP0042 NEW)\nset(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\nset(CMAKE_C_STANDARD 17)\nset(CMAKE_C_STANDARD_REQUIRED ON)\nset(CMAKE_C_EXTENSIONS ON)\n\n###\n#\n# Default cmake directories:\n#\n# | Target Type             | GNUInstallDirs Variable        | Built-In Default      |\n# | ---                     | ---                            | ---                   |\n# | RUNTIME                 | ${CMAKE_INSTALL_BINDIR}        | bin                   |\n# | LIBRARY                 | ${CMAKE_INSTALL_LIBDIR}        | lib                   |\n# | ARCHIVE                 | ${CMAKE_INSTALL_LIBDIR}        | lib                   |\n# | PRIVATE_HEADER          | ${CMAKE_INSTALL_INCLUDEDIR}    | include               |\n# | PUBLIC_HEADER           | ${CMAKE_INSTALL_INCLUDEDIR}    | include               |\n# | FILE_SET (type HEADERS) | ${CMAKE_INSTALL_INCLUDEDIR}    | include               |\n#\n# | TYPE Argument           | GNUInstallDirs Variable        | Built-In Default      |\n# | ---                     | ---                            | ---                   |\n# | BIN                     | ${CMAKE_INSTALL_BINDIR}        | bin                   |\n# | SBIN                    | ${CMAKE_INSTALL_SBINDIR}       | sbin                  |\n# | LIB                     | ${CMAKE_INSTALL_LIBDIR}        | lib                   |\n# | INCLUDE                 | ${CMAKE_INSTALL_INCLUDEDIR}    | include               |\n# | SYSCONF                 | ${CMAKE_INSTALL_SYSCONFDIR}    | etc                   |\n# | SHAREDSTATE             | ${CMAKE_INSTALL_SHARESTATEDIR} | com                   |\n# | LOCALSTATE              | ${CMAKE_INSTALL_LOCALSTATEDIR} | var                   |\n# | RUNSTATE                | ${CMAKE_INSTALL_RUNSTATEDIR}   | <LOCALSTATE dir>/run  |\n# | DATA                    | ${CMAKE_INSTALL_DATADIR}       | <DATAROOT dir>        |\n# | INFO                    | ${CMAKE_INSTALL_INFODIR}       | <DATAROOT dir>/info   |\n# | LOCALE                  | ${CMAKE_INSTALL_LOCALEDIR}     | <DATAROOT dir>/locale |\n# | MAN                     | ${CMAKE_INSTALL_MANDIR}        | <DATAROOT dir>/man    |\n# | DOC                     | ${CMAKE_INSTALL_DOCDIR}        | <DATAROOT dir>/doc    |\n#\n# ${CMAKE_BINARY_DIR}\n# This is the full path to the top level of the current CMake build tree.\n# For an in-source build, this would be the same as CMAKE_SOURCE_DIR.\n#\n# ${CMAKE_SOURCE_DIR}\n# This is the full path to the top level of the current CMake source tree.\n# For an in-source build, this would be the same as CMAKE_BINARY_DIR.\n#\n# ${CMAKE_CURRENT_BINARY_DIR}\n# The path to the binary directory currently being processed.\n# This is the full path to the build directory that is currently being processed by cmake.\n# Each directory added by add_subdirectory() will create a binary directory in the build tree,\n# and as it is being processed this variable will be set.\n# For in-source builds this is the current source directory being processed.\n#\n# ${CMAKE_CURRENT_SOURCE_DIR}\n# The path to the source directory currently being processed.\n# This is the full path to the source directory that is currently being processed by cmake.\n#\n###\n\n\n###\n# General Project Settings\n###\n\nproject(stlink C)\nset(PROJECT_DESCRIPTION \"Open source version of the STMicroelectronics ST-LINK Tools\")\ninclude(${CMAKE_MODULE_PATH}/get_version.cmake) # Determine project version\n\ninclude(GNUInstallDirs) # Define GNU standard installation directories\n\n# Define install directory for st-link shared files\ncmake_host_system_information(RESULT OS_NAME QUERY OS_NAME)\nmessage(STATUS \"Checking for OS_NAME: ${OS_NAME}\")\n\n\n## Set C build flags\nif (NOT MSVC)\n    include(${CMAKE_MODULE_PATH}/c_flags.cmake)\nelse ()\n    message(STATUS \"MSVC C Flags override to /MT\")\n    set(CMAKE_C_FLAGS_DEBUG_INIT          \"/D_DEBUG /MTd /Zi /Ob0 /Od /RTC1\")\n    set(CMAKE_C_FLAGS_MINSIZEREL_INIT     \"/MT /O1 /Ob1 /D NDEBUG\")\n    set(CMAKE_C_FLAGS_RELEASE_INIT        \"/MT /O2 /Ob2 /D NDEBUG\")\n    set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT \"/MT /Zi /O2 /Ob1 /D NDEBUG\")\nendif()\n\n\n###\n# Dependencies\n###\n\nfind_package(libusb REQUIRED)\nadd_definitions(${LIBUSB_DEFINITIONS}) #only affects MSVC, For ssize-t\n\n## Check for system-specific additional header files and libraries\n\ninclude(CheckIncludeFile)\ninclude(CheckLibraryExists)\n\nCHECK_LIBRARY_EXISTS(ssp __stack_chk_fail \"\" _stack_chk_fail_exists)\nif (_stack_chk_fail_exists)\n    if (WIN32)\n        set(SSP_LIB -static ssp)\n    else ()\n        set(SSP_LIB ssp)\n    endif()\nelse ()\n    set(SSP_LIB \"\")\nendif()\n\nCHECK_INCLUDE_FILE(sys/mman.h STLINK_HAVE_SYS_MMAN_H)\nif (STLINK_HAVE_SYS_MMAN_H)\n    add_definitions(-DSTLINK_HAVE_SYS_MMAN_H)\nendif()\n\nCHECK_INCLUDE_FILE(sys/time.h STLINK_HAVE_SYS_TIME_H)\nif (STLINK_HAVE_SYS_TIME_H)\n    add_definitions(-DSTLINK_HAVE_SYS_TIME_H)\nendif()\n\nCHECK_INCLUDE_FILE(unistd.h STLINK_HAVE_UNISTD_H)\nif (STLINK_HAVE_UNISTD_H)\n    add_definitions(-DSTLINK_HAVE_UNISTD_H)\nendif()\n\nCHECK_INCLUDE_FILE(dirent.h STLINK_HAVE_DIRENT_H)\nif (STLINK_HAVE_DIRENT_H)\n    add_definitions(-DSTLINK_HAVE_DIRENT_H)\nendif()\n\nif (MSVC)\n    # Use string.h rather than strings.h and disable annoying warnings\n    add_definitions(-DHAVE_STRING_H -D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_WARNINGS /wd4710)\nendif()\n\n\n###\n# Main build process\n###\n\n## Define include directories to avoid absolute paths for header defines\ninclude_directories(${LIBUSB_INCLUDE_DIR})\n\ninclude_directories(${PROJECT_SOURCE_DIR}/inc) # contains top-level header files\ninclude_directories(${PROJECT_BINARY_DIR}/inc) # contains version.h\n\ninclude_directories(src)\ninclude_directories(src/st-flash)\ninclude_directories(src/st-info)\ninclude_directories(src/st-trace)\ninclude_directories(src/st-util)\ninclude_directories(src/stlink-lib)\n\n## Set installation directory for header files\nif (WIN32)\nset(STLINK_INCLUDE_PATH ${CMAKE_INSTALL_INCLUDEDIR} CACHE PATH \"Main include install directory\")\nelse ()\nset(STLINK_INCLUDE_PATH ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME} CACHE PATH \"Main include install directory\")\nendif()\n\n## Subordinate CMakeLists for version config & header installation\nadd_subdirectory(inc)\n\n## Define source- and headerfiles for stlink library\nset(STLINK_HEADERS\n        inc/stlink.h\n        inc/stlink_backend.h\n        inc/stlink_cmd.h\n        inc/stm32.h\n        inc/stm32_flash.h\n        src/stlink-lib/calculate.h\n        src/stlink-lib/chipid.h\n        src/stlink-lib/common_flash.h\n        src/stlink-lib/flash_loader.h\n        src/stlink-lib/helper.h\n        src/stlink-lib/libusb_settings.h\n        src/stlink-lib/lib_md5.h\n        src/stlink-lib/logging.h\n        src/stlink-lib/logging_spdlog_wr.h\n        src/stlink-lib/map_file.h\n        src/stlink-lib/md5.h\n        src/stlink-lib/option_bytes.h\n        src/stlink-lib/read_write.h\n        src/stlink-lib/sg_legacy.h\n        src/stlink-lib/usb.h\n        )\n\nset(STLINK_SOURCE\n        src/stlink-lib/calculate.c\n        src/stlink-lib/chipid.c\n        src/stlink-lib/common_flash.c\n        src/stlink-lib/common_legacy.c\n        src/stlink-lib/flash_loader.c\n        src/stlink-lib/helper.c\n        src/stlink-lib/lib_md5.c\n        src/stlink-lib/logging.c\n        src/stlink-lib/map_file.c\n        src/stlink-lib/md5.c\n        src/stlink-lib/option_bytes.c\n        src/stlink-lib/read_write.c\n        src/stlink-lib/sg_legacy.c\n        src/stlink-lib/usb.c\n        )\n\nif (WIN32)\n    include_directories(src/win32)\n    set(STLINK_SOURCE \"${STLINK_SOURCE};src/win32/win32_socket.c\")\n    set(STLINK_HEADERS \"${STLINK_HEADERS};src/win32/win32_socket.h\")\n\n    if (MSVC)\n        # Add drop-in replacement for unistd.h to sources\n        include_directories(src/win32/unistd)\n        set(STLINK_HEADERS \"${STLINK_HEADERS};src/win32/unistd/unistd.h\")\n    endif()\n\n    if (NOT STLINK_HAVE_SYS_MMAN_H)\n        include_directories(src/win32/mmap)\n        set(STLINK_SOURCE \"${STLINK_SOURCE};src/win32/mmap.c\")\n        set(STLINK_HEADERS \"${STLINK_HEADERS};src/win32/mmap.h\")\n    endif()\n\n    if (NOT STLINK_HAVE_SYS_TIME_H)\n        set(STLINK_SOURCE \"${STLINK_SOURCE};src/win32/sys_time.c\")\n        set(STLINK_HEADERS \"${STLINK_HEADERS};src/win32/sys_time.h\")\n    endif()\nendif()\n\n## Include test execution for test-targets for target Debug\nif (${CMAKE_BUILD_TYPE} MATCHES \"Debug\")\n    include(CTest)\nendif()\n\n\n###\n# Libraries\n###\n\n# Set the environment variable LD_LIBRARY_PATH to point to /usr/local/lib (per default).\nexecute_process(COMMAND bash -c \"export LD_LIBRARY_PATH=${CMAKE_INSTALL_LIBDIR}\")\n\n\n###\n# Shared library\n###\n\n# Set library name\nset(STLINK_LIB_SHARED ${PROJECT_NAME}-shared)\n\nadd_library(${STLINK_LIB_SHARED} SHARED ${STLINK_HEADERS} ${STLINK_SOURCE})\n\nset(STLINK_SHARED_VERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH})\nmessage(STATUS \"STLINK_LIB_SHARED: ${STLINK_LIB_SHARED}\")\nmessage(STATUS \"VERSION: ${STLINK_SHARED_VERSION}\")\n\nset_target_properties(${STLINK_LIB_SHARED} PROPERTIES\n                        SOVERSION ${PROJECT_VERSION_MAJOR}\n                        VERSION ${STLINK_SHARED_VERSION}\n                        OUTPUT_NAME ${PROJECT_NAME}\n                        )\n\n# Since we're not using __declspec(dllexport), WINDOWS_EXPORT_ALL_SYMBOLS is mandatory for MSVC.\n# This call will only affect MSVC, compilers/OSes ignore it.\n# TODO: Use dllexport on the desired functions\nset_target_properties(${STLINK_LIB_SHARED} PROPERTIES\n        WINDOWS_EXPORT_ALL_SYMBOLS ON\n)\n\n# Link shared library\nif (WIN32)\n    target_link_libraries(${STLINK_LIB_SHARED} ${LIBUSB_LIBRARY} ${SSP_LIB} wsock32 ws2_32)\nelse ()\n    target_link_libraries(${STLINK_LIB_SHARED} ${LIBUSB_LIBRARY} ${SSP_LIB})\nendif()\n\n# For MSVC:\n#    shared libraries (.dll) go to `bin`\n#    their Import Libraries (aka: ImpLibs; .lib files) go to `lib`\nif (MSVC)\n    install(TARGETS ${STLINK_LIB_SHARED}\n            RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n            LIBRARY DESTINATION ${CMAKE_INSTALL_BINDIR}\n            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})\n# For non-MSVC:\n#    shared libraries go to `lib`\n#    Archive destination is set to `lib` as failsafe\nelse()\n    install(TARGETS ${STLINK_LIB_SHARED}\n            RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n            LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})\nendif()\n\n###\n# Static library\n###\n\n# Set library name\nset(STLINK_LIB_STATIC ${PROJECT_NAME}-static)\nset(STLINK_LIB_STATIC_OUTPUT_NAME ${PROJECT_NAME})\nif (MSVC)\n    set(STLINK_LIB_STATIC_OUTPUT_NAME ${PROJECT_NAME}-static)\nendif()\n\nadd_library(${STLINK_LIB_STATIC} STATIC ${STLINK_HEADERS} ${STLINK_SOURCE})\n\nset(STLINK_STATIC_VERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH})\nmessage(STATUS \"STLINK_LIB_STATIC: ${STLINK_LIB_STATIC}\")\nmessage(STATUS \"VERSION: ${STLINK_STATIC_VERSION}\")\n\nset_target_properties(${STLINK_LIB_STATIC} PROPERTIES\n                        SOVERSION ${PROJECT_VERSION_MAJOR}\n                        VERSION ${STLINK_STATIC_VERSION}\n                        OUTPUT_NAME ${STLINK_LIB_STATIC_OUTPUT_NAME}\n                        )\n\n# Link static library\nif (WIN32)\n    target_link_libraries(${STLINK_LIB_STATIC} ${LIBUSB_LIBRARY} ${SSP_LIB} wsock32 ws2_32)\nelse ()\n    target_link_libraries(${STLINK_LIB_STATIC} ${LIBUSB_LIBRARY} ${SSP_LIB})\nendif()\n\ninstall(TARGETS ${STLINK_LIB_STATIC} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})\n\n\n###\n# Build toolset executables\n###\n\nset(ST-FLASH_SOURCES src/st-flash/flash.c src/st-flash/flash_opts.c)\nset(ST-INFO_SOURCES src/st-info/info.c)\nset(ST-UTIL_SOURCES src/st-util/gdb-remote.c src/st-util/gdb-server.c src/st-util/semihosting.c)\nset(ST-TRACE_SOURCES src/st-trace/trace.c)\n\nif (MSVC)\n    # Add getopt to sources\n    include_directories(src/win32/getopt)\n    set(ST-UTIL_SOURCES \"${ST-UTIL_SOURCES};src/win32/getopt/getopt.c\")\n    set(ST-TRACE_SOURCES \"${ST-TRACE_SOURCES};src/win32/getopt/getopt.c\")\nendif()\n\nadd_executable(st-flash ${ST-FLASH_SOURCES})\nadd_executable(st-info ${ST-INFO_SOURCES})\nadd_executable(st-util ${ST-UTIL_SOURCES})\nadd_executable(st-trace ${ST-TRACE_SOURCES})\n\nif (WIN32)\n    target_link_libraries(st-flash ${STLINK_LIB_STATIC})\n    target_link_libraries(st-info ${STLINK_LIB_STATIC})\n    target_link_libraries(st-util ${STLINK_LIB_STATIC})\n    target_link_libraries(st-trace ${STLINK_LIB_STATIC})\nelse ()\n    target_link_libraries(st-flash ${STLINK_LIB_SHARED})\n    target_link_libraries(st-info ${STLINK_LIB_SHARED})\n    target_link_libraries(st-util ${STLINK_LIB_SHARED})\n    target_link_libraries(st-trace ${STLINK_LIB_SHARED})\nendif()\n\ninstall(TARGETS st-flash DESTINATION ${CMAKE_INSTALL_BINDIR})\ninstall(TARGETS st-info DESTINATION ${CMAKE_INSTALL_BINDIR})\ninstall(TARGETS st-util DESTINATION ${CMAKE_INSTALL_BINDIR})\ninstall(TARGETS st-trace DESTINATION ${CMAKE_INSTALL_BINDIR})\n\n\n###\n# Device configuration (Linux only)\n###\n\nif (CMAKE_SYSTEM_NAME STREQUAL \"Linux\")\n    ## Install modprobe.d conf files to /etc/modprobe.d/ (explicitly hardcoded)\n    set(STLINK_MODPROBED_DIR \"/etc/modprobe.d\" CACHE PATH \"modprobe.d directory\")\n    install(FILES ${CMAKE_SOURCE_DIR}/config/modprobe.d/stlink_v1.conf DESTINATION ${STLINK_MODPROBED_DIR})\n\n    ## Install udev rules files to /lib/udev/rules.d/ (explicitly hardcoded)\n    set(STLINK_UDEV_RULES_DIR \"/lib/udev/rules.d\" CACHE PATH \"udev rules directory\")\n    file(GLOB RULES_FILES ${CMAKE_SOURCE_DIR}/config/udev/rules.d/*.rules)\n    install(FILES ${RULES_FILES} DESTINATION ${STLINK_UDEV_RULES_DIR})\nendif()\n\n\n###\n# Additional build tasks\n###\n\n# MCU configuration files\nif (WIN32)\n    set(CMAKE_CHIPS_DIR ${CMAKE_INSTALL_PREFIX}/config/chips)\nelse ()\n    set(CMAKE_CHIPS_DIR ${CMAKE_INSTALL_FULL_DATADIR}/${PROJECT_NAME}/config/chips)\nendif()\nadd_definitions( -DSTLINK_CHIPS_DIR=\"${CMAKE_CHIPS_DIR}\" )\nfile(GLOB CHIP_FILES ${CMAKE_SOURCE_DIR}/config/chips/*.chip)\ninstall(FILES ${CHIP_FILES} DESTINATION ${CMAKE_CHIPS_DIR})\n\n# Documentation / manpages\noption(STLINK_GENERATE_MANPAGES \"Generate manpages with pandoc\" OFF)\nadd_subdirectory(doc/man)         # contains subordinate CMakeLists to generate manpages\n\nadd_subdirectory(src/stlink-gui)  # contains subordinate CMakeLists to build GUI\nadd_subdirectory(tests)           # contains subordinate CMakeLists to build test executables\nadd_subdirectory(cmake/packaging) # contains subordinate CMakeLists to build packages\n\n\n###\n# Uninstall target\n###\n\nif (NOT TARGET uninstall)\n    configure_file(\n        \"${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in\"\n        \"${CMAKE_CURRENT_BINARY_DIR}/cmake/cmake_uninstall.cmake\"\n        IMMEDIATE @ONLY\n        )\n    add_custom_target(\n        uninstall COMMAND ${CMAKE_COMMAND}\n        -P ${CMAKE_CURRENT_BINARY_DIR}/cmake/cmake_uninstall.cmake\n        )\nendif()\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.3056640625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team [here](https://github.com/stlink-org/stlink/discussions). All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.8564453125,
          "content": "# Contribution guidelines\n\n## Contributing to the stlink project\nWe love your input! We want to make contributing to this project as easy and transparent as possible, whether it's:\n\n- Reporting a bug\n- Discussing the current state of the code\n- Submitting a fix\n- Proposing new features\n- Assistance with maintaining\n\nWe use GitHub to host code, to track issues and feature requests, as well as accept pull requests.\nReport a bug by [opening a new issue]() with one of the available templates. It's that easy!\n\n**NOTE: In order to offer sufficient and the best possible support, please read and follow the instructions below before submitting a ticket:**\n\n1) If using a ST-Link-v2 programmer: Convince yourself that it is recognised as an USB device by your computer, thus reporting device and manufacturer ID. Use a diagnostic tool to probe for enumerated USB devices, e.g [`lsusb -v`](https://linux.die.net/man/8/lsusb) on unix-based systems.\n2) **Use the [ST-Link firmware upgrade tool](https://www.st.com/en/development-tools/stsw-link007.html) based on Java to read out the current firmware version and update to the latest available version. This also works for _non-genuine_ ST programmers and boards.**\n3) Try to make sure you have a working toolchain before starting to build.\n4) **Update to the _latest_ release version or maybe even use the `testing` branch.**\n5) Search for your problem in the available open issues, _before_ opening a new ticket.\n6) Make sure to **use the available issue templates** to submit a bug-report or a feature-request. **Do not replace the prepared text, edit the placeholders instead. _Describe_ your problem.**\n7) Avoid to add new comments to closed issues unless they confirm a solution already available.\n8) Don't comment on tickets which do not specifically address your device or hardware - open a new ticket instead.\n9) Consider if you can help to solve other issues (e.g. you have the same hardware)\n\n## Coding conventions\nTo read code written by other contributors can turn out to be quite demanding - a variable which seems to self-explaining, may appear cryptic to other readers. If you plan to contribute, please take this into account and feel encouraged to help others understand your code. In order to help you along, we have composed some contribution guidelines for this project. As this project already has a history you may find parts in the codebase that do not seem to comply with these guidelines, but we are trying to improve continuosly. However we can do even better, if every contributor considers the following points:\n\n* Naming of all source code elements as well as comments should exclusively be written in English.\n* All functions and global variables should be fully explained. This includes a short description on _what_ the respective function does (but not necessarily _how_ this is achieved), an explantion of transfer parameters and/or return values (if applicable).\n* Use [fixed width integer types](http://en.cppreference.com/w/c/types/integer) wherever possible and size-appropiate datatypes.\n* Only make use of the datatype `char` for specific characters, otherwise use `int8_t` or `uint8_t` respectively.\n\n\n### Coding Style\n* Use 4 spaces for indentation rather than tabs (the latter results in inconsistent appearance on different platforms)\n* Use `/* your comment */` formatting for multi-line comments or section titles and `// your comment` for inline comments.\n* Please try to avoid special characters where possible, as they are interpreted differently on particular platforms and systems. Otherwise these may result in mojibake within the sourcecode or cause translation errors when compiling.\n* Use state-of-the-art UTF-8 encoding whereever possible.\n\n\n## Github Flow\nWe Use [Github Flow](https://guides.github.com/introduction/flow/index.html) which implies that all code changes happen through Pull Requests (PRs).\nThey are the best way to propose changes to the codebase and we actively welcome your own ones:\n\n1. PRs should focus on _one_ single topic.\n2. Fork the repo and create your branch from `develop`.\n3. Begin to implement your changes on a local or personal branch.\n4. Take a look at existing PR and check if these target the same part of the codebase.\n   Should this be the case, you are encouraged to get in touch with the respective author and discuss on how to proceed.\n5. Keep your personal feature-branch up to date with the current development branch, by merging in recent changes regularly.\n6. Don't open a PR unless your contribution has evolved to a somehow completed set of changes.\n7. If you've changed major features, update the documentation.\n8. Ensure your PR passes our travis CI tests.\n9. Issue that pull request!\n\n\n## License\nWhen you submit code changes, your submissions are understood to be under the same [BSD-3 License](LICENSE.md) that covers this project.<br />Feel free to contact the project maintainers should there be any related questions.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.482421875,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2020, stlink-org\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.4677734375,
          "content": "##\n# This Makefile is used to drive building of CMake build targets\n##\n\nMAKEFLAGS += -s\n\n# additional flags for cmake, e.g. install path -DCMAKE_INSTALL_PREFIX=$(HOME)/.local\nCMAKEFLAGS +=\n\nall: release\nci: debug release test\n\nhelp:\n\t\t@echo \"        debug: Run a debug build\"\n\t\t@echo \"      release: Run a release build\"\n\t\t@echo \"      install: Install release build\"\n\t\t@echo \"    uninstall: Uninstall release build\"\n\t\t@echo \"      package: Package release build\"\n\t\t@echo \"         lint: Lint check all source-code\"\n\t\t@echo \"         test: Build and run tests\"\n\t\t@echo \"        clean: Clean all build output\"\n\t\t@echo \"rebuild_cache: Rebuild all CMake caches\"\n\nrebuild_cache: build/Debug build/Release\n\t\t@$(MAKE) -C build/Debug rebuild_cache\n\t\t@$(MAKE) -C build/Release rebuild_cache\n\ndebug: build/Debug\n\t\t@echo \"[DEBUG]\"\n\t\t@$(MAKE) -C build/Debug\n\nrelease: build/Release\n\t\t@echo \"[RELEASE]\"\n\t\t@$(MAKE) -C build/Release\n\ninstall: build/Release\n\t\t@echo \"[INSTALL] Release\"\n\t\t@$(MAKE) -C build/Release install\n\nuninstall: build/Release\n\t\t@echo \"[UNINSTALL] Release\"\n\t\t@$(MAKE) -C build/Release uninstall\n\npackage: build/Release\n\t\t@echo \"[PACKAGE] Release\"\n\t\t@$(MAKE) -C build/Release package\n\ntest: debug\n\t\t@echo \"[TEST] Debug\"\n\t\t@$(MAKE) -C build/Debug test\n\nbuild/Debug:\n\t\t@mkdir -p $@\n\t\t@cd $@ && cmake -DCMAKE_BUILD_TYPE=Debug $(CMAKEFLAGS) ../../\n\nbuild/Release:\n\t\t@mkdir -p $@\n\t\t@cd $@ && cmake -DCMAKE_BUILD_TYPE=Release $(CMAKEFLAGS) ../../\n\nclean:\n\t\t@echo \"[CLEAN]\"\n\t\t@rm -Rf build\n\n.PHONY: clean\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.484375,
          "content": "# Open source version of the STMicroelectronics STLINK Tools\n\n[![BSD licensed](https://img.shields.io/badge/license-BSD-blue.svg)](https://raw.githubusercontent.com/hyperium/hyper/master/LICENSE)\n[![GitHub release](https://img.shields.io/github/release/stlink-org/stlink.svg)](https://github.com/stlink-org/stlink/releases/latest)\n[![Downloads](https://img.shields.io/github/downloads/stlink-org/stlink/total)](https://github.com/stlink-org/stlink/releases/latest)\n![GitHub commits](https://img.shields.io/github/commits-since/stlink-org/stlink/v1.8.0/develop)\n![GitHub activity](https://img.shields.io/github/commit-activity/m/stlink-org/stlink)\n![GitHub contributors](https://img.shields.io/github/contributors/stlink-org/stlink)\n[![CodeQL](https://github.com/stlink-org/stlink/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/stlink-org/stlink/actions/workflows/codeql-analysis.yml)\n[![C/C++ CI](https://github.com/stlink-org/stlink/actions/workflows/c-cpp.yml/badge.svg?branch=testing)](https://github.com/stlink-org/stlink/actions/workflows/c-cpp.yml)\n\nRecent new features and bugfixes can be found in the [Changelog](CHANGELOG.md) of this software project.\n\n#### License\n\nThe stlink library and tools are licensed under the **[BSD-3 License](LICENSE.md)**.\n\n## Introduction\n\nstlink is an open source toolset to program and debug STM32 devices and boards manufactured by STMicroelectronics.\nIt supports several so called STLINK programmer boards (and clones thereof) which use a microcontroller chip to translate commands from USB to JTAG/SWD. There are four generations available on the market which are _all_ supported by this toolset:\n\n- **STLINK/V1** _[obsolete as of 21-11-2019, continued support by this toolset]_\n  - transport layer: SCSI passthru commands over USB\n  - stand-alone programmer\n  - on-board on STM32VL Discovery boards\n- **STLINK/V2**\n  - transport layer: raw USB commands\n  - stand-alone programmer\n  - on-board on STM32L Discovery and STM32 Nucleo boards\n- **STLINK/V2-1**\n  - transport layer: raw USB commands\n  - on-board on some STM32 Nucleo boards\n- **STLINK-V3**\n  - transport layer: raw USB commands\n  - stand-alone programmer (STLINK-V3SET, STLINK-V3MINI, STLINK-V3MODS)\n  - on-board on some STM32 Nucleo boards (STLINK-V3E)\n\nOn the user level there is no difference in handling or operation between these different revisions.\n\nThe STlink toolset includes:\n\n- `st-info` - a programmer and chip information tool\n- `st-flash` - a flash manipulation tool\n- `st-trace` - a logging tool to record information on execution\n- `st-util` - a GDB server (supported in Visual Studio Code / VSCodium via the [Cortex-Debug](https://github.com/Marus/cortex-debug) plugin)\n- `stlink-lib` - a communication library\n- `stlink-gui` - a GUI-Interface _[optional]_\n\n## Supported operating systems and hardware combinations\n\nCurrently known working MCU targets are listed in [supported_devices.md](doc/supported_devices.md).\n\nA list of supported operating can be found in [version_support.md](doc/version_support.md).\n\n## Tutorial & HOWTO\n\nOur [tutorial](doc/tutorial.md) may help you along with some advanced tasks and additional info.\n\n## Installation\n\n**Windows**:\n\nAs of Release v1.6.1 stand-alone Windows binaries are made available (again) on the release page of the project.\nPlease ensure to select the correct version for your system (i686 or x86_64). The archive file can be unzipped to any desired location as it does not contain any hardcoded paths. However we suggest to move the unzipped application folder to `C:\\Program Files\\` on 32-bit systems and to `C:\\Program Files (x86)\\` on 64-bit systems (the toolset is 32-bit).\n\nAlternatively one may compile and install from source as described in our [compiling manual](doc/compiling.md#Windows).\n\n**Linux / Unix**:\n\nWe recommend to install `stlink-tools` from the package repository of the used distribution:\n\n**Note:** As packages distributed via the [Debian](https://packages.debian.org/buster/stlink-tools) and [Ubuntu](https://packages.ubuntu.com/stlink-tools) repositories differ from our self-maintained deb-package, we recommend to use the latter instead (see link below). It provides the opportunity to handle and fix user-reported package issues directly within the project and is not redundant to any limitations deriving from external maintenance guidelines.\n\n- Debian Linux: [(Link)](https://github.com/stlink-org/stlink/releases)\n- Ubuntu Linux: [(Link)](https://github.com/stlink-org/stlink/releases)\n- Arch Linux: [(Link)](https://archlinux.org/packages/extra/x86_64/stlink/)\n- Alpine Linux: [(Link)](https://pkgs.alpinelinux.org/packages?name=stlink)\n- Fedora: [(Link)](https://src.fedoraproject.org/rpms/stlink)\n- FreeBSD: Users can install from [freshports](https://www.freshports.org/devel/stlink)\n\n**macOS**:\n\n**Support for macOS has been dropped with v1.8.0.**\n\nPlease use v1.7.0 instead, **but note that this version is no longer maintained and supported!**\n\n## Installation from source (advanced users)\n\nWhen there is no executable available for your platform or you need the latest (possible unstable) version you need to compile the toolset yourself. This procedure is explained in the [compiling manual](doc/compiling.md).\n\n## Contributing and versioning\n\n- The semantic versioning scheme is used. Read more at [semver.org](http://semver.org)\n- Before creating a pull request, please _ALWAYS_ open a new issue for the discussion of the intended new features. Bugfixes don't require a discussion via a ticket-issue. However they should always be described in a few words as soon as they appear to help others as well.\n- Contributors and/or maintainers may submit comments or request changes to patch-proposals and/or pull-requests.\n- **ATTENTION: _NEVER EVER_ use the '#' character to count-up single points within a listing as '#' is _exclusively_ reserved for referencing GitHub issues and pull-requests. Otherwise you accidentally introduce false cross references within the project.**\n- Please start new forks from the develop branch, as pull requests will go into this branch as well.\n\nPlease also refer to our [Contribution Guidelines](CONTRIBUTING.md).\n\n## User Reviews\n\n*I hope it's not to out of topic, but I've been so frustrated with AVR related things on OpenBSD, the fact that stlink built out of the box without needing to touch anything was so relieving. Literally made my whole weekend better!\nI take it's thanks to @Crest and also to the stlink-org team (@Nightwalker-87 and @xor-gate it seems) to have made a software that's not unfriendly to the \"fringe\" OSes.\nThank you <3\"* - nbonfils, 11.12.2021\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.734375,
          "content": "# Security Policy\n\n## Supported Versions\n\nThe following versions of the stlink toolset are currently being supported.<br />As this is a development toolset, please note that bugfixes will only be applied to the latest version.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| develop | :white_check_mark: |\n| 1.8.0   | :white_check_mark: |\n| 1.7.0   | :x:                |\n| 1.6.x   | :x:                |\n| 1.5.x   | :x:                |\n| 1.4.0   | :x:                |\n| 1.3.x   | :x:                |\n| 1.2.0   | :x:                |\n| 1.1.0   | :x:                |\n| 1.0.0   | :x:                |\n\n## Reporting a Vulnerability\n\nDetected vulnerabilities in the toolset should be reported by opening a regular bugreport issue.\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake_uninstall.cmake.in",
          "type": "blob",
          "size": 1.2333984375,
          "content": "if (NOT EXISTS \"@CMAKE_BINARY_DIR@/install_manifest.txt\")\n    message(FATAL_ERROR \"Cannot find install manifest: @CMAKE_BINARY_DIR@/install_manifest.txt\")\nendif ()\n\nfile(READ \"@CMAKE_BINARY_DIR@/install_manifest.txt\" files)\nstring(REGEX REPLACE \"\\n\" \";\" files \"${files}\")\nforeach (file ${files})\n    message(STATUS \"Uninstalling $ENV{DESTDIR}${file}\")\n    if (IS_SYMLINK \"$ENV{DESTDIR}${file}\" OR EXISTS \"$ENV{DESTDIR}${file}\")\n        execute_process(\n            # remove deprecated: use rm instead,\n            # because it does not check the file path, even return an error.\n            COMMAND \"@CMAKE_COMMAND@\" -E rm \"$ENV{DESTDIR}${file}\"\n            RESULT_VARIABLE rm_retval\n            ERROR_VARIABLE  rm_err\n        )\n        if (NOT \"${rm_retval}\" STREQUAL 0)\n            message(FATAL_ERROR \"Problem when removing $ENV{DESTDIR}${file}\\n${rm_err}\")\n        # Detect whether the file has been removed.\n        elseif (IS_SYMLINK \"$ENV{DESTDIR}${file}\" OR EXISTS \"$ENV{DESTDIR}${file}\")\n            message(FATAL_ERROR \"File has not been removed.\\n${rm_err}\")\n        else ()\n            message(STATUS \"File has been removed.\")\n        endif ()\n    else ()\n        message(STATUS \"File $ENV{DESTDIR}${file} does not exist.\")\n    endif ()\nendforeach ()\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "contributors.txt",
          "type": "blob",
          "size": 2.580078125,
          "content": "List of contributors to the stlink project:\n\nAlexey Cherevatenko\nAlexey Panarin\nAnatoli Klassen [dev26th]\nAndrea Mucignat\nAndreas Michelis [a-michelis]\nAndrew Andrianov [nekromant]\nAndrey Yurovsky\nAndy Isaacson\nAndreas Sandberg [andysan]\nAntoine Faure [antoinefaure]\nAnton [Ant-ON]\nÁron Radics\nA. Sheaff\nBjörn Hauffe\nIhor Bobalo\nBreton M. Saunders\nBruno Dal Bo\nBrian Team [dot4qu]\nBurns Fisher\nCheng Guokai (Xim) [chenguokai]\nChris Dew\nChris Hiszpanski\nChris Li\nChris Samuelson\nChristian Deussen [nullsub]\nChristophe Levantis\nCraig Lilley\nCrest [Crest]\nDan Dev\nDan Hepler\nDaniel Campoverde [alx741]\nDaniel O'Connor\nDave Flogeras\nDave Murphy [WinterMute]\nDave Vandervies [dj3vande]\nDenis Fokin\nDenis Osterland\nDmitry Bravikov [bravikov]\nEfe Can İçöz\nEthan Zonca\nFabien Chouteau [Fabien-Chouteau]\nFlorian Hars\nFriedrich Beckmann\nGabriel Górski [Glaeqen]\nGeoffrey Brown [geoffreymbrown]\nGeorge Talusan [gtalusan]\nGeorg von Zengen\nGiuseppe Barba\nGreg Alexander [galexander1]\nGreg Meiste [meisteg]\nGrzegorz Szymaszek [gszy]\nGuillaume Revaillot [grevaillot]\nGwenhael Goavec-Merou [trabucayre]\n[Hakkavélin]\nHalt Hammerzeit\nHsu Pu [hsupu]\n[hydroconstructor]\nIan Griffiths\nJack Peel\nJakub Tyszkowski\nJan Sarenik\nJean-Luc Béchennec\nJean-Marie Lemetayer\nJeff Kent\nJeffrey Nelson\nJens Hoffmann\nJerome Lambourg\nJim Paris\nJiří Netolický\nJerry Jacobs [xor-gate]\nJerry Nosky [jnosky]\nJochen Wilhelmy [Jochen0x90h]\nJohn Hall [simplerobot]\nJoel Bodenmann [Tectu]\nJohannes Taelman\nJonas Danielsson\nJonas Norling\nJosh Bialkowski\nKarl Palsson [karlp]\nKevlar Harness\nKyle Manna\nLari Lehtomäki\nLuuk van Dijk [lvdlvd]\nMartin Nowak\nMatteo Collina\nMax Chen\nMaxime Coquelin [mcoquelin-stm32]\nMaxime Vincent\nMichael Pratt [prattmic]\nMichael Sparmann\nMike Szczys\nMagnus Lundin [mlu]\nNed Konz\nNic McDonald\nNicolas Schodet\nOleksiy Slyshyk [slyshykO]\nOlivier Croquette\nOlivier Gay\nOnno Kortmann\n[orangeudav]\nPavel Kirienko\nPekka Nikander\nPete Nelson\nPeter Torelli [petertorelli]\nPeter Zotov\nPetteri Aimonen\nPiotr Haber\n[RafaelLeeImg]\n[rcubee]\nRene Hopf [rene-dev]\nRobin Kreis\nRoger Wolff [rewolff]\nRob Spanton\nRytis Karpuska\nRutger Hendriks [rutgerhendriks]\nSean Simmons\nSergey Alirzaev\nSimon Derr [sderr]\nSimon Wright\nStany Marcel\nStefan Misik\nSven Wegener\nTarek Bochkati [tarek-bochkati]\n[texane]\nTimothy Lee [timothytylee]\nTuomo Kaikkonen\nTheodore A. Roth\nThomas Gärtner\nTobias Badertscher\nTom de Boer\nTristan Gingold\nUli Köhler\nUwe Bonnes [UweBonnes]\nVadim Kaushan\nVasiliy Glazov [Vascom]\nVegard Storheil Eriksen\nViacheslav Dobromyslov\nVictor Mayoral Vilches\n[whitequark]\nWilliam Ransohoff [WRansohoff]\nWojciech A. Koszek\nWoodrow Douglass\n\n... and others\n"
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "flashloaders",
          "type": "tree",
          "content": null
        },
        {
          "name": "generate_binaries.sh",
          "type": "blob",
          "size": 0.6455078125,
          "content": "###\n# Build package with binaries for Windows\n###\n\n# Install this cross-compiler toolchain:\n# sudo apt-get install mingw-w64\n\n# x86_64\nmkdir build-mingw-64\ncd build-mingw-64\ncmake -DCMAKE_SYSTEM_NAME=Windows \\\n      -DTOOLCHAIN_PREFIX=x86_64-w64-mingw32 \\\n      -DCMAKE_TOOLCHAIN_FILE=./cmake/modules/set_toolchain.cmake ..\nmake package\nsudo cp dist/*.zip ../build/Release/dist\nmake clean\ncd ..\n\n# i686\nmkdir build-mingw-32\ncd build-mingw-32\ncmake -DCMAKE_SYSTEM_NAME=Windows \\\n      -DTOOLCHAIN_PREFIX=i686-w64-mingw32 \\\n      -DCMAKE_TOOLCHAIN_FILE=./cmake/modules/set_toolchain.cmake ..\nmake package\nsudo cp dist/*.zip ../build/Release/dist\nmake clean\ncd ..\n"
        },
        {
          "name": "inc",
          "type": "tree",
          "content": null
        },
        {
          "name": "mingw64-build.bat",
          "type": "blob",
          "size": 0.224609375,
          "content": "@echo on\r\n\r\nmkdir build-mingw\r\ncd build-mingw\r\nset PATH=C:\\Program Files\\CMake\\bin;C:\\msys64\\ucrt64\\bin;C:\\msys64\\mingw64\\bin;%PATH%\r\ncmake -G \"MinGW Makefiles\" ..\r\nmingw32-make\r\nmingw32-make install\r\nmingw32-make package\r\ncd ..\r\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}