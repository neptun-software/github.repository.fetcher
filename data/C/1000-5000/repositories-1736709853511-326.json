{
  "metadata": {
    "timestamp": 1736709853511,
    "page": 326,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shellinabox/shellinabox",
      "stars": 2902,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.9072265625,
          "content": "*.o\n*.la\n*.lo\n*~\n.libs\n.deps\n.dirstamp\naclocal.m4\nautom4te.cache\ncertificate.pem\ncompile\nconfig.cache\nconfig.guess\nconfig.h\nconfig.h.in\nconfig.log\nconfig.status\nconfig.sub\nconfigure\ndebian/autoreconf.after\ndebian/autoreconf.before\ndebian/files\ndebian/*.debhelper.log\ndebian/*.debhelper\ndebian/*.substvars\ndebian/shellinabox/\ndebian/tmp/\ndemo/beep.wav\ndemo/demo.js\ndemo/enabled.gif\ndemo/favicon.ico\ndemo/keyboard.png\ndemo/print-styles.css\ndemo/styles.css\ndemo/usercss-*.css\ndemo/vt100.js\ndepcomp\nINSTALL\ninstall-sh\nlibtool\nltmain.sh\nMakefile\nMakefile.in\nmissing\nm4/\nshellinabox/beep.h\nshellinabox/cgi_root.h\nshellinabox/enabled.h\nshellinabox/favicon.h\nshellinabox/keyboard.h\nshellinabox/keyboard-layout.h\nshellinabox/print-styles.h\nshellinabox/root_page.h\nshellinabox/shell_in_a_box.h\nshellinabox/shell_in_a_box.js\nshellinabox/styles.h\nshellinabox/vt100.h\nshellinabox/vt100.js\nshellinaboxd\nshellinaboxd.1\nshellinaboxd.ps\nstamp-h1\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.0224609375,
          "content": "markus@shellinabox.com\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 16.76953125,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\n\n## 2015-03\nContributors: [Luka Krajger](https://github.com/KLuka), [Philip Hughes](https://github.com/Grimthorr), [Daniel Gröber](https://github.com/DanielG), [Ezra Buehler](https://github.com/easybe), [Anders Kaseorg](https://github.com/andersk), [Jonathan Rennison](https://github.com/JGRennison), [Guillaume Martres](https://github.com/smarter)\n\n\t- Swap to gzip compression (fixes #262 and #266).\n\n\t- Set the encoding of .html files to UTF-8.\n\n\t- Fix <input> element type.\n\n\t- Issue #173: Keyboard icon on dark background.\n\n\t- Another (final) fix for Firefox keycodes problems.\n\n\t- Removed at sign (@) from beginning of some JS comments.\n\n\t- Issues #51, #202 ... : Keycodes fixes for FireFox.\n\n\t- Issue #195: A couple of bugs in vt100.jspp.\n\n\t- Issue #103, #203: Child process termination (partial fix).\n\n\t- Merge pull request #285 from KLuka/master.\n\n\t- Issue #275: gracefully manage HTTP time-outs and connection problems.\n\n\t- Set SSL options for increased security and disable compromised SSL\n\tversion 2.0 and 3.0.\n\n\t- Issue #262: Page cannot be displayed.\n\n\t- Issue #180: Ever growing console occurs in iPad.\n\n\t- Issue #202: \"-_\" keys don't not work in FF > 15.\n\n\t- No longer set HTTP Content-Length.\n\n\t- Issue #245: Blank screen in Chrome 31.0.1650.57.\n\n\t- Issue #114: popup warning on tab/window close.\n\n\t- Issues 39, 43, 166 and 172 commits applied to .jspp files.\n\n\t- Removed auto-generated .js files.\n\n## 2012-04  Marc Singer  <elf@woollysoft.com>\n\n\t- Fixing errors reported by piuparts.\n\n\t- Debian build now defaults to direct link with shared libraries.\n\n\t- Removing PATH_MAX reference.\n\n\t- Fixing Valgrind discovered issues.\n\n\t- Issue 172: autocorrect/autocapitalize can cause problems on\n\tmobile devices.\n\n\t- Issue 167: Accept connections in subfolders.\n\n\t- Issue 39: Clipboard not integrated with client operating system\n\n\t- Cleanup of debian control file before 2.11.\n\n\t- Issue 166: Color goes away.\n\n\t- Issue 167: Accept connections in subfolders.\n\n## 2012-03  Marc Singer  <elf@woollysoft.com>\n\n\t- Issue 134: How to add arguments.\n\n\t- Issue 116: A shellinthebox runner / configuration file.\n\n\t- Issue 93: openssl required install-time.\n\n\t- Issue 50: SSH service not working on Centos/RHEL.\n\n\t- Issue 49: Debian packageing uses cross-directory hardlinks.\n\n\t- Issue 47: Does not build on Mac OSX.\n\n\t- Issue 43: 2.10 version introduces a keyboard layout problem.\n\n\t- Issue 39: clipboard not integrated with client operating system.\n\n## 2012-02-02  Jay Weisskopf  <jay@jayschwa.net>\n\n\t- Use 2048-bit RSA keys for auto-generated certificates.\n\n\t- Assume a private key is RSA if the header does not specify a type.\n\n## 2012-01-12  Anders Kaseorg  <andersk@mit.edu>\n\n\t- sslGenerateCertificate: Don't use the shell.\n\n\t- sslSNICallback: Properly disallow invalid characters.\n\n\t- Fix miscellaneous strncat buffer overflows.\n\n## 2012-01-04  Jay Weisskopf  <jay@jayschwa.net>\n\n\t- Fixed an error in the init script's status function.\n\n\t- Check for null pointers from gethostbyname_r() to prevent seg faults.\n\n## 2012-01-01  Jay Weisskopf  <jay@jayschwa.net>\n\n\t- Removed \"Lucida Console\" font because bold is wider than normal.\n\n\t- Bold and underline SGR attributes now utilize CSS.\n\n\t- Removed color pair restrictions.\n\n\t- Removed config.h. It is auto-generated by the configure script.\n\n\t- Changed the cursor color to match the default text color.\n\n\t- Write the OSC title to the window's title instead of the status bar. …\n\n## 2010-10  Markus Gutschke  <markus@shellinabox.com>\n\t\n\t- Fixed inefficient I/O behavior and ability to interrupt long running\n\toutput with CTRL-C.\n\n\t- Fixed confusing error message when we fail to dynamically load\n\tPAM support.\n\n\t- Fall back to calling select() instead of poll() for MacOS X.\n\n## 2010-09  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Implement a few work-arounds to avoid some problems with\n\tpututxline() on MacOS X.\n \n\t- Relax a check() that would trigger when using old-style\n\t(pre-Unix 98) pseudo terminals.\n\n\t- Another iteration of changes intended to deal with MacOS X\n\tspecific build.\n\n\t- In an attempt to reduce build dependencies, remove the requirement\n\tfor objcopy. Instead, we are now using \"od\" to generate C source code.\n\n\t- Added support for building with toolchains that don't support\n\tsymbol aliasing.\n\n\t- Adjusted MIME types.\n\n\t- Store keyboard layout in separate HTML file.\n\n## 2010-09-11  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added --pidfile= option that can be used even if running in the\n\tforeground.\n\n## 2010-09-04  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added an optional on-screen keyboard. Must be activated by the\n\tuser by selecting the option in the context-menu.\n\n## 2010-09-03  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Fix some scaling related issues. This fix is thanks to some\n\texcellent detective work by Jan <siev...@zedat.fu-berlin.de>.\n\n\t- Allow changing of font sizes in the user CSS.\n\n## 2010-08-19  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Thanks to lotr44's excellent analysis of the problem, we now have\n\ta fix for the problem with typing \"!\" on French keyboards.\n\n## 2010-08-06  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Allow users to disable the blinking cursor from the context menu.\n\n## 2010-07-08  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added support for systems that have utmpx.h, but don't implement\n\tupdwtmpx().\n\n## 2010-07-02  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Fixed a NULL pointer dereference that can occur when hostnames\n\tdo not resolve. Thanks to <vmagerya> for pointing out this problem.\n\n## 2010-03-31  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Tweaked the build system to work better on OpenWRT. This is largely\n\tthanks to very helpful bug reports, and lots of testing by Jan Jaeger.\n\n## 2010-03-29  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Started working on support for WebSockets.\n\n\t- Fixed some compiler warnings when compiling with -Wextra\n\n\t- Thanks to Jan Jaeger's excellent bug report, made some changes\n\tthat should make it easier to build ShellInABox for OpenWRT.\n\n## 2009-12-10  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Add .note.GNU-stack to all object files so that the generated\n\tbinary doesn't erroneously request an executable stack.\n\n## 2009-12-03  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Allow retrieval of the user's default login shell from\n\t/etc/passwd.\n\n\t- Allow the code to be built without support for the LOGIN\n\tservice, as calling /bin/login does not work well on Fedora.\n\n## 2009-12-02  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added fallback code that dynamically computes the correct commandline\n\targuments for \"objcopy\" if building for an otherwise unknown target\n\tplatform.\n\n## 2009-12-01  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added some basic sanity checks to the commit script that now makes\n\tsure we at least attempt to keep copyright dates updated whenever we\n\tmake changes.\n\n\t- Added checks that the debian/changelog file is up-to-date\n\n\t- Added debian/watch file\n\n\t- Updated the Standards-Version in debian/control. Still need to\n\treview whether we are in full compliance, though.\n\n\t- Fixed lintian errors.\n\n## 2009-11-29  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Preparations for packaging ShellInABox in a way that makes it\n\teasy for Debian package maintainers to pick it up.\n\n## 2009-11-25  Markus Gutschke  <markus@shellinabox.com>\n\n\t- On browsers that support CSS transforms, enable switching between\n\t  80 and 132 column mode.\n\n## 2009-11-21  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Updated manual page documenting --user-css\n\n\t- Released version 2.10\n\n## 2009-11-18  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Fixed some compiler warnings when using more recent versions of\n\tgcc and glibc.\n\n\t- Tweak the handling of CTRL keys, so that some of the more unusual\n\tcombinations work. For historic reasons, there is an expectation that\n\tCTRL-3..CTRL-8 return specific control characters. Also fixed the\n\thandling of CTRL-\\ which could cause problems with some browsers.\n\n\t- Rely on the browser for capitalization. This should fix Capslock\n\tbehavior. Hopefully, it won't break any other keyboard features or\n\tlayouts.\n\n## 2009-08-20  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added transparent printing support. The development of this\n\tfeature is sponsored by De Bortoli Wines Pty Limited and by\n\tEternity Technologies.\n\n## 2009-08-19  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added a ${url} parameter that can be used in the service description.\n\n## 2009-08-11  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added support for user selectable style sheets. Included example\n\tstyle sheets that allow switching to white-on-black or to monochrome\n\tmode from the right click context menu.\n\n\t- Fixed the \"|\" key on Swedish keyboards.\n\n## 2009-07-30  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added the --css command line option to make incremental changes\n\tto the style sheet without having to load a full replacement with\n\tthe --static-file option. Added an example that enables white text\n\ton a black background.\n\n\t- Added Debian specific documentation to the manual page.\n\n## 2009-07-29  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Allow unprivileged users to run the daemon. This requires\n\tcalling \"ssh\" instead of \"login\".\n\n## 2009-07-27  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Use JavaScript redirection for attaching the missing slash to\n\tthe URL. This should make it easier to use reverse proxies. It was\n\talready possible to run shellinaboxd behind a proxy, but a lot of\n\tusers got the configuration wrong.\n\n## 2009-07-08  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Optionally compress large responses, if the browser accepts\n\tdeflate compression. This mainly improves start up time.\n\n\t- More fine tuning of the regular expressions that detect URLs.\n\tWe now allow '.' and ',' in URLs, as long as they are not at the\n\tvery end of the URL, where they would probably be part of the\n\tenclosing sentence and not actually part of the URL.\n\n## 2009-07-06  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Making it easier to host the terminal on non-root URLs by always\n\tredirecting to a URL that includes a trailing slash.\n\n\t- Run-time testing for availability of libpthread functions does not\n\twork reliably on some platforms. So, avoid doing so on anything\n\tother than Linux/i386. For all other platforms, assume that the code\n\tis not linked against libpthread. For ShellInABox, this is always\n\tthe correct assumption. But if the code gets embedded into other\n\tprojects, this might have to be changed.\n\n## 2009-07-05  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Released version 2.9\n\n## 2009-07-04  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Refined regular expressions for finding URLs.\n\n\t- Show new terminal size when resizing the browser.\n\n\t- Restored compatibility with IE5 and IE6.\n\n## 2009-07-03  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added --linkify option. Default settings cause the terminal to\n\trecognize fully qualified URLs and to make them clickable.\n\n## 2009-06-28  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added support for keyboards that have a dedicated \"<\" / \">\" key.\n\n## 2009-06-21  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added --localhost option.\n\n\t- Added support for building on ARM.\n\n\t- Respect \"Connection: close\" for proxies that rely on pre-HTTP/1.1\n\tbehavior.\n\n## 2009-05-24  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added SSL support for OpenBSD\n\n## 2009-05-23  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Released version 2.8\n\n## 2009-05-22  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Improved support for entering non-ASCII characters.\n\n## 2009-05-20  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Fixed various issues with building on OpenBSD\n\n## 2009-04-28  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Fixed variable expansion in service descriptions.\n\t\n## 2009-04-27  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Released version 2.7\n\n\t- Improved compatibility with some PAM configurations when running\n\tas a non-privileged user.\n\n\t- Fixed a bug that required shells to output data (e.g. a prompt)\n\tbefore they could read the first data.\n\n\t- Fixed a potential crash.\n\n## 2009-04-12  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Released version 2.6\n\n\t- The demo application is still incomplete, but starting to be\n\tsomewhat functional. The BASIC interpreter supports variables, and\n\tcan parse expressions. But it is still missing all flow-control\n\tcommands, making it somewhat useless for writing real programs.\n\n## 2009-03-30  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added initial revision of demo application.\n\n\t- Show fatal error message even when running in \"quiet\" mode.\n\n\t- Make it easier to override parameters needed by the system startup\n\tscripts.\n\n## 2009-03-29  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added support for chained SSL certificates\n\n## 2009-03-23  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added an INSTALL.Debian file with Debian-specific instructions on\n\thow to build and install a package file.\n\n## 2009-03-21  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Possible fix for IE problems with horizontal positioning of\n\tcursor if the line ends in spaces.\n\n\t- Work-around for an IE6 bug when doing HTTPS through proxies.\n\t\n## 2009-03-21  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Released version 2.5\n\n\t- More testing on older IE versions.\n\n## 2009-03-19  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Fixed cursor positioning. Hopefully, more browsers will be happy\n\twith this, now.\n\n\t- Explicitly added no-cache headers to our responses. This might help\n\twith the IE6 problems.\n\n## 2009-03-17  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Allow root to bind to privileged port.\n\n## 2009-03-17  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Fixed IE6 support.\n\n\t- Fixed possible memory corruption, when sessions time out.\n\n## 2009-03-16  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Fixed some compiler warnings, that newer versions of GCC issue.\n\n## 2009-02-27  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added fallback on old-style pty's, if /dev/pts is not mounted.\n\n\t- Work-around for systems that don't define a \"nogroup\" group.\n\n\t- Remove the dependency on fdopendir, which does not exist\n\teverywhere.\n\n## 2009-02-16  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Include VCS revision number in user-visible version string.\n\n\t- Allow \"configure\" to select whether OpenSSL and PAM libraries\n\tshould be used at all, dynamically searched-for at run-time, or\n\tlinked as a regular dynamic library.\n\n\t- Fixed various bugs that prevents ShellInABox from running on\n\tFreeBSD\n\n## 2009-02-12  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Released version 2.4\n\n## 2009-02-11  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Fixed fatal compiler warning if compiling without SSL support.\n\n\t- Fixed cursor hiding and showing\n\n\t- Fixed various rendering glitches reported by Phil Endecott of\n\tAnyterm (http://anyterm.org) fame.\n\n\t- Made code more portable. In particular, fixed sed scripts.\n\n\t- Added explicit config.h file, instead of passing configuration\n\toptions on the compiler's command line.\n\n\t- Fixed compilation issues on BSD systems. Code is still untested\n\tand unsupported on non-Linux systems at this time.\n\n## 2009-01-21  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Released version 2.3\n\n\t- Fixed a show-stopper bug that broke the --cert option.\n\n## 2009-01-21  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Released version 2.2\n\n\t- Fixed a bug that could result in the font getting corrupted.\n\n\t- Improved compatibility with more versions of the OpenSSL library.\n\tPreviously, the feature test for TLSEXT did not always work correctly,\n\tresulting in compilation failures.\n\n\t- Improved support for embedding shellinaboxd into existing web\n\tservices. SSL certificates can now be passed in through a file\n\thandle, and port and pid numbers can be retrieved from the CGI header.\n\n## 2009-01-08  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Released version 2.1\n\n\t- Fixed build errors mostly related to x86_64.\n\n\t- Added --no-beep command line option to avoid VLC plugin crashing\n\tFirefox/x86_64.\n\n\t- Fixed multi-line selections in Firefox.\n\n## 2009-01-01  Markus Gutschke  <markus@shellinabox.com>\n\n\t- Added CGI mode for demand-loading the shellinaboxd daemon\n\tfrom a web server. This also allows for the web server to\n\tperform authentication, instead of having shellinaboxd do so.\n\t\n\t- Tightened setuid-root operation to no longer allow switching\n\tto arbitrary users/groups. As before, setuid-root remains a\n\tnon-standard configuration that is not currently recommended.\n\t\n\t- Fixed session management to deal better with torn down\n\tconnections. Closed one bug that could have resulted in\n\tpermanently orphaned connections, when the browser navigated\n\taway from the page.\n\n## 2008-12-27  Markus Gutschke  <markus@shellinabox.com>\n\n\t- First public release of the version 2.0 rewrite. This is the\n\tfirst release of ShellInABox that supports an AJAX interface\n\tinstead of the original Java applet.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 1.6953125,
          "content": "Copyright (C) 2008-2010 Markus Gutschke <markus@shellinabox.com>\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License version 2 as\npublished by the Free Software Foundation.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program; if not, write to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nIn addition to these license terms, the author grants the following\nadditional rights:\n\nIf you modify this program, or any covered work, by linking or\ncombining it with the OpenSSL project's OpenSSL library (or a\nmodified version of that library), containing parts covered by the\nterms of the OpenSSL or SSLeay licenses, the author\ngrants you additional permission to convey the resulting work.\nCorresponding Source for a non-source form of such a combination\nshall include the source code for the parts of OpenSSL used as well\nas that of the covered work.\n\nYou may at your option choose to remove this additional permission from\nthe work, or from any part of it.\n\nIt is possible to build this program in a way that it loads OpenSSL\nlibraries at run-time. If doing so, the following notices are required\nby the OpenSSL and SSLeay licenses:\n\nThis product includes software developed by the OpenSSL Project\nfor use in the OpenSSL Toolkit. (http://www.openssl.org/)\n\nThis product includes cryptographic software written by Eric Young\n(eay@cryptsoft.com)\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 0.01171875,
          "content": "CHANGELOG.md"
        },
        {
          "name": "GPL-2",
          "type": "blob",
          "size": 17.5654296875,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "INSTALL.Debian",
          "type": "blob",
          "size": 2.171875,
          "content": "You can build package files for Debian based distributions (including Ubuntu)\nby running the standard build commands:\n\n  # Install build dependencies\n  i=\"$(dpkg-checkbuilddeps 2>&1 | sed -e 's/.*dependencies: //;t;d')\"\n  [ -n \"$i\" ] && sudo apt-get install $i\n\n  # Build package files\n  dpkg-buildpackage\n\nThese commands replace \"./configure\" and \"make\", which you would run on\nnon-Debian systems.\n\nIf you have a very old Debian system, you might have to use \"fakeroot\ndpkg-buildpackage\", instead of just \"dpkg-buildpackage\".\n\nIf you want HTTPS support, and if you want the ability to run \"shellinaboxd\"\nas a non-privileged user, you should now install these run-time libraries:\n\n  sudo apt-get install libssl0.9.8 libpam0g openssl\n\nRunning \"dpkg-buildpackage\" puts package files into your parent directory.\nYou can install them with:\n\n  sudo dpkg -i ../shellinabox_*.deb\n\nYou can now connect to your new shell at:\n\n  http://localhost:4200\n\nIn contrast to installation by \"make install\", this package file creates\nfiles that are managed by the system tools. This allows it to install\nconfiguration files in \"/etc\" and to automatically start the daemon.\n\nYou can configure the daemon process by editing \"/etc/default/shellinabox\".\n\nYou can also provide SSL certificates for your site by installing them in\n\"/var/lib/shellinabox\". By default, the system will install self-signed\ncertificates for you. These certificates are likely to raise warnings when\nyou point your browser to the site.\n\nAt the very least, you need a file called \"certificate.pem\" that includes\nboth the private key and the public certificate in PEM (i.e. ASCII) format.\nAdditionally, you should create files for each of the publicly visible\nhostnames that your machine has. These are named \"certificate-${FQDN}.pem\".\nYou probably also want \"certificate-localhost.pem\".\n\nAfter you make any configuration changes, you need to restart the daemon by\nrunning:\n\n  sudo /etc/init.d/shellinabox restart\n\nIf you want to know which files were installed by the package, run\n\n  dpkg -L shellinabox\n\nIf you want to uninstall it again, run:\n\n  sudo apt-get remove shellinabox\n\nFor all other administrative tasks, refer to the documentation that came\nwith your system.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 19.7080078125,
          "content": "AM_CPPFLAGS          =\nAM_CFLAGS            = -g -std=gnu99 -Wall\nAM_LDFLAGS           = -g -lm\nACLOCAL_AMFLAGS      = -I m4\n\nnoinst_LTLIBRARIES   = libhttp.la                                             \\\n                       liblogging.la\nnoinst_DATA          = $(top_srcdir)/demo/demo.js\nbin_PROGRAMS         = shellinaboxd\nman_MANS             = shellinaboxd.1\nnoinst_HEADERS       = libhttp/http.h\ndist_doc_DATA        = AUTHORS                                                \\\n                       COPYING                                                \\\n                       GPL-2                                                  \\\n                       NEWS\nEXTRA_DIST           = INSTALL.Debian                                         \\\n                       README.Fedora                                          \\\n                       INSTALL                                                \\\n                       README                                                 \\\n                       TODO                                                   \\\n                       demo/beep.wav                                          \\\n                       demo/favicon.ico                                       \\\n                       demo/demo.html                                         \\\n                       demo/demo.js                                           \\\n                       demo/demo.jspp                                         \\\n                       demo/demo.xml                                          \\\n                       demo/enabled.gif                                       \\\n                       demo/keyboard.html                                     \\\n                       demo/keyboard.png                                      \\\n                       demo/styles.css                                        \\\n                       demo/print-styles.css                                  \\\n                       demo/vt100.js                                          \\\n                       demo/usercss-0.css                                     \\\n                       demo/usercss-1.css                                     \\\n                       demo/usercss-2.css                                     \\\n                       demo/usercss-3.css                                     \\\n                       etc-pam.d-shellinabox-example                          \\\n                       shellinabox/shellinaboxd.man.in                        \\\n                       shellinabox/shell_in_a_box.js                          \\\n                       shellinabox/vt100.js                                   \\\n                       shellinabox/cgi-mode-example.sh                        \\\n                       shellinabox/white-on-black.css                         \\\n                       shellinabox/black-on-white.css                         \\\n                       shellinabox/monochrome.css                             \\\n                       shellinabox/color.css                                  \\\n                       debian/README                                          \\\n                       debian/README.available                                \\\n                       debian/README.enabled                                  \\\n                       debian/changelog                                       \\\n                       debian/compat                                          \\\n                       debian/control                                         \\\n                       debian/copyright                                       \\\n                       debian/docs                                            \\\n                       debian/rules                                           \\\n                       debian/shellinabox.default                             \\\n                       debian/shellinabox.dirs                                \\\n                       debian/shellinabox.init                                \\\n                       debian/shellinabox.install                             \\\n                       debian/shellinabox.postinst                            \\\n                       debian/shellinabox.postrm                              \\\n                       debian/source/format                                   \\\n                       debian/watch\nLIBLOGGING_INCLUDES  = logging/logging.h                                      \\\n                       config.h\nliblogging_la_SOURCES= logging/logging.c                                      \\\n                       $(LIBLOGGING_INCLUDES)\nliblogging_la_LDFLAGS= -version 1:0:0\n\nLIBHTTP_INCLUDES     = libhttp/hashmap.h                                      \\\n                       libhttp/trie.h                                         \\\n                       libhttp/httpconnection.h                               \\\n                       libhttp/server.h                                       \\\n                       libhttp/ssl.h                                          \\\n                       libhttp/url.h                                          \\\n                       config.h\nlibhttp_la_SOURCES   = libhttp/hashmap.c                                      \\\n                       libhttp/trie.c                                         \\\n                       libhttp/httpconnection.c                               \\\n                       libhttp/server.c                                       \\\n                       libhttp/ssl.c                                          \\\n                       libhttp/url.c                                          \\\n                       $(LIBHTTP_INCLUDES)                                    \\\n                       libhttp/libhttp.sym\nlibhttp_la_LDFLAGS   = -export-symbols  $(top_srcdir)/libhttp/libhttp.sym     \\\n                       -version 1:0:0\n\nshellinaboxd_SOURCES = shellinabox/shellinaboxd.c                             \\\n                       shellinabox/externalfile.c                             \\\n                       shellinabox/externalfile.h                             \\\n                       shellinabox/launcher.c                                 \\\n                       shellinabox/launcher.h                                 \\\n                       shellinabox/privileges.c                               \\\n                       shellinabox/privileges.h                               \\\n                       shellinabox/service.c                                  \\\n                       shellinabox/service.h                                  \\\n                       shellinabox/session.c                                  \\\n                       shellinabox/session.h                                  \\\n                       shellinabox/usercss.c                                  \\\n                       shellinabox/usercss.h                                  \\\n                       shellinabox/cgi_root.html                              \\\n                       shellinabox/root_page.html                             \\\n                       shellinabox/vt100.jspp                                 \\\n                       shellinabox/shell_in_a_box.jspp                        \\\n                       shellinabox/styles.css                                 \\\n                       shellinabox/print-styles.css                           \\\n                       shellinabox/enabled.gif                                \\\n                       shellinabox/favicon.ico                                \\\n                       shellinabox/keyboard.png                               \\\n                       shellinabox/keyboard-layout.html                       \\\n                       shellinabox/beep.wav                                   \\\n                       config.h\nBUILT_SOURCES        = shellinabox/beep.h                                     \\\n                       shellinabox/cgi_root.h                                 \\\n                       shellinabox/enabled.h                                  \\\n                       shellinabox/favicon.h                                  \\\n                       shellinabox/keyboard.h                                 \\\n                       shellinabox/keyboard-layout.h                          \\\n                       shellinabox/print-styles.h                             \\\n                       shellinabox/root_page.h                                \\\n                       shellinabox/shell_in_a_box.h                           \\\n                       shellinabox/shell_in_a_box.js                          \\\n                       shellinabox/styles.h                                   \\\n                       shellinabox/vt100.h                                    \\\n                       shellinabox/vt100.js\n\n\nshellinaboxd_LDADD   = liblogging.la                                          \\\n                       libhttp.la\nshellinaboxd_LDFLAGS = -static\n## Added this for compatibility with older versions of autoconf/automake\ndocdir               = ${datadir}/doc/${PACKAGE}\n\nsymbolname           =                                                        \\\n  sed -e 's/.*\\/\\([^.]*\\)[.].*/\\1/'                                           \\\n      -e 't0'                                                                 \\\n      -e 's/\\([^.]*\\)[.].*/\\1/'                                               \\\n      -e ':0'                                                                 \\\n      -e 's/$$/ aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ/'        \\\n      -e ':1'                                                                 \\\n      -e 's/\\([^-_]*\\)[-_]\\([a-z]\\)\\([^ ]* .*\\2\\)\\(.\\)/\\1\\4\\3\\4/'             \\\n      -e 't1'                                                                 \\\n      -e 's/.\\{53\\}$$//'                                                      \\\n      -e 's/[-/.]/_/g'\n\nlibtool: $(LIBTOOL_DEPS)\n\t$(SHELL) ./config.status --recheck\n\n\n${top_srcdir}/demo/demo.js: ${top_srcdir}/demo/beep.wav                       \\\n                            ${top_srcdir}/demo/demo.jspp                      \\\n                            ${top_srcdir}/demo/enabled.gif                    \\\n                            ${top_srcdir}/demo/favicon.ico                    \\\n                            ${top_srcdir}/demo/keyboard.html                  \\\n                            ${top_srcdir}/demo/keyboard.png                   \\\n                            ${top_srcdir}/demo/styles.css                     \\\n                            ${top_srcdir}/demo/print-styles.css               \\\n                            ${top_srcdir}/demo/vt100.js                       \\\n                            ${top_srcdir}/demo/usercss-0.css                  \\\n                            ${top_srcdir}/demo/usercss-1.css                  \\\n                            ${top_srcdir}/demo/usercss-2.css                  \\\n                            ${top_srcdir}/demo/usercss-3.css\n\n${top_srcdir}/demo/beep.wav: ${top_srcdir}/shellinabox/beep.wav\n\t@rm -f \"$@\"\n\tln \"$?\" \"$@\"\n\n${top_srcdir}/demo/enabled.gif: ${top_srcdir}/shellinabox/enabled.gif\n\t@rm -f \"$@\"\n\tln \"$?\" \"$@\"\n\n${top_srcdir}/demo/favicon.ico: ${top_srcdir}/shellinabox/favicon.ico\n\t@rm -f \"$@\"\n\tln \"$?\" \"$@\"\n\n${top_srcdir}/demo/keyboard.html: ${top_srcdir}/shellinabox/keyboard-layout.html\n\t@rm -f \"$@\"\n\tln \"$?\" \"$@\"\n\n${top_srcdir}/demo/keyboard.png: ${top_srcdir}/shellinabox/keyboard.png\n\t@rm -f \"$@\"\n\tln \"$?\" \"$@\"\n\n${top_srcdir}/demo/styles.css: ${top_srcdir}/shellinabox/styles.css\n\t@rm -f \"$@\"\n\tsed -e '/\\[if DEFINES_COLORS\\]/,/\\[endif DEFINES_COLORS\\]/d' \"$?\" >\"$@\"\n\n${top_srcdir}/demo/print-styles.css: ${top_srcdir}/shellinabox/print-styles.css\n\t@rm -f \"$@\"\n\tln \"$?\" \"$@\"\n\n${top_srcdir}/demo/usercss-0.css: ${top_srcdir}/shellinabox/white-on-black.css\n\t@rm -f \"$@\"\n\tln \"$?\" \"$@\"\n\n${top_srcdir}/demo/usercss-1.css: ${top_srcdir}/shellinabox/black-on-white.css\n\t@rm -f \"$@\"\n\tln \"$?\" \"$@\"\n\n${top_srcdir}/demo/usercss-2.css: ${top_srcdir}/shellinabox/monochrome.css\n\t@rm -f \"$@\"\n\tln \"$?\" \"$@\"\n\n${top_srcdir}/demo/usercss-3.css: ${top_srcdir}/shellinabox/color.css\n\t@rm -f \"$@\"\n\tln \"$?\" \"$@\"\n\n${top_srcdir}/demo/vt100.js: ${top_srcdir}/shellinabox/vt100.js\n\t@rm -f \"$@\"\n\tln \"$?\" \"$@\"\n\nshellinaboxd.1: ${top_srcdir}/shellinabox/shellinaboxd.man.in                 \\\n\t\t${top_srcdir}/config.h\n\t@src=\"${top_srcdir}/shellinabox/shellinaboxd.man.in\";                 \\\n\techo preprocess  \"$$src\" '>'\"$@\";                                     \\\n\tif sed -e 's/^#define \\([^ ]*\\).*/\\1/' -e t -e d config.h |           \\\n             grep 'HAVE_BIN_LOGIN' >/dev/null 2>&1; then                      \\\n\t  sed -e '/^#ifndef  *HAVE_BIN_LOGIN$$/,/^#endif$$/d' \"$$src\";        \\\n\telse                                                                  \\\n\t  sed -e '/^#ifdef  *HAVE_BIN_LOGIN$$/,/^#endif$$/d' \"$$src\";         \\\n\tfi |                                                                  \\\n\tif [ `sed -e 's/^#define \\([^ ]*\\).*/\\1/' -e t -e d config.h |        \\\n             egrep 'HAVE_OPENSSL_BIO_H|HAVE_OPENSSL_ERR_H|HAVE_OPENSSL_SSL_H'|\\\n             wc -l` -eq 3 ]; then                                             \\\n\t  sed -e '/^#ifndef  *HAVE_OPENSSL$$/,/^#endif$$/d';                  \\\n\telse                                                                  \\\n\t  sed -e '/^#ifdef  *HAVE_OPENSSL$$/,/^#endif$$/d';                   \\\n\tfi |                                                                  \\\n\tif sed -e 's/^#define \\([^ ]*\\).*/\\1/' -e t -e d config.h |           \\\n             grep 'HAVE_SECURITY_PAM_APPL_H' >/dev/null 2>&1; then            \\\n\t  sed -e '/^#ifndef  *HAVE_PAM$$/,/^#endif$$/d';                      \\\n\telse                                                                  \\\n\t  sed -e '/^#ifdef  *HAVE_PAM$$/,/^#endif$$/d';                       \\\n\tfi |                                                                  \\\n\tif [ -n \"${DPKGBUILD}\" ]; then                                        \\\n\t  sed -e '/^#ifndef  *DPKGBUILD$$/,/^#endif$$/d';                     \\\n\telse                                                                  \\\n\t  sed -e '/^#ifdef  *DPKGBUILD$$/,/^#endif$$/d';                      \\\n\tfi |                                                                  \\\n\tsed -e '/^#/d' >\"$@\"\n\t@out=`echo \"$@\" 2>/dev/null|sed -e 's/\\.[^.]*$$/.ps/'`;               \\\n\tman -Tps \"./$@\" >\"$${out}\" 2>/dev/null || rm -f \"$${out}\"\n\nclean-local: clean-demo\n\t-rm -rf shellinaboxd.1                                                \\\n\t        shellinaboxd.ps                                               \\\n\t        shellinaboxd.pdf\n\t-rm -rf debian/shellinabox                                            \\\n\t        debian/shellinabox*.debhelper*                                \\\n\t        debian/shellinabox.substvars                                  \\\n\t        debian/tmp\n\t-rm -rf shellinabox/beep.h                                            \\\n\t        shellinabox/cgi_root.h      \t\t\t\t      \\\n\t        shellinabox/enabled.h       \t\t\t\t      \\\n\t        shellinabox/favicon.h       \t\t\t\t      \\\n\t        shellinabox/keyboard.h      \t\t\t\t      \\\n\t        shellinabox/keyboard-layout.h\t\t\t\t      \\\n\t        shellinabox/print-styles.h  \t\t\t\t      \\\n\t        shellinabox/root_page.h     \t\t\t\t      \\\n\t        shellinabox/shell_in_a_box.js\t\t\t\t      \\\n\t        shellinabox/shell_in_a_box.h\t\t\t\t      \\\n\t        shellinabox/styles.h                                          \\\n\t        shellinabox/vt100.js                                          \\\n\t        shellinabox/vt100.h\n\nclean-demo:\n\t-rm demo/beep.wav\t\t\t\t\t\t      \\\n\t    demo/demo.js \t\t\t\t\t\t      \\\n\t    demo/enabled.gif \t\t\t\t\t\t      \\\n\t    demo/favicon.ico \t\t\t\t\t\t      \\\n\t    demo/keyboard.png \t\t\t\t\t\t      \\\n\t    demo/print-styles.css \t\t\t\t\t      \\\n\t    demo/styles.css \t\t\t\t\t\t      \\\n\t    demo/usercss-0.css \t\t\t\t\t\t      \\\n\t    demo/usercss-1.css \t\t\t\t\t\t      \\\n\t    demo/usercss-2.css \t\t\t\t\t\t      \\\n\t    demo/usercss-3.css \t\t\t\t\t\t      \\\n\t    demo/vt100.js\n\n.css.h:\n\t@echo od \"$<\" '>'\"$@\"\n\t@mkdir -p \"`dirname \"$@\"`\"\n\t@{ sym=\"`echo \"$<\" | $(symbolname)`\";                                 \\\n\t   echo \"static const char $${sym}Start[] =\";                         \\\n\t   od -vb \"$<\" | sed 's/[0-7]*/\"/;s/ *$$/\"/;/^\"\"$$/d;s/  */\\\\/g';     \\\n\t   echo ';';                                                          \\\n\t   echo \"static const int $${sym}Size ATTR_UNUSED =\"                  \\\n\t           \"(int)sizeof($${sym}Start);\";                              \\\n\t } >\"$@\"\n\n.gif.h:\n\t@echo od \"$<\" '>'\"$@\"\n\t@mkdir -p \"`dirname \"$@\"`\"\n\t@{ sym=\"`echo \"$<\" | $(symbolname)`\";                                 \\\n\t   echo \"static const char $${sym}Start[] =\";                         \\\n\t   od -vb \"$<\" | sed 's/[0-7]*/\"/;s/ *$$/\"/;/^\"\"$$/d;s/  */\\\\/g';     \\\n\t   echo ';';                                                          \\\n\t   echo \"static const int $${sym}Size ATTR_UNUSED =\"                  \\\n\t           \"(int)sizeof($${sym}Start);\";                              \\\n\t } >\"$@\"\n\n.png.h:\n\t@echo od \"$<\" '>'\"$@\"\n\t@mkdir -p \"`dirname \"$@\"`\"\n\t@{ sym=\"`echo \"$<\" | $(symbolname)`\";                                 \\\n\t   echo \"static const char $${sym}Start[] =\";                         \\\n\t   od -vb \"$<\" | sed 's/[0-7]*/\"/;s/ *$$/\"/;/^\"\"$$/d;s/  */\\\\/g';     \\\n\t   echo ';';                                                          \\\n\t   echo \"static const int $${sym}Size ATTR_UNUSED =\"                  \\\n\t           \"(int)sizeof($${sym}Start);\";                              \\\n\t } >\"$@\"\n\n.html.h:\n\t@echo od \"$<\" '>'\"$@\"\n\t@mkdir -p \"`dirname \"$@\"`\"\n\t@{ sym=\"`echo \"$<\" | $(symbolname)`\";                                 \\\n\t   echo \"static const char $${sym}Start[] =\";                         \\\n\t   od -vb \"$<\" | sed 's/[0-7]*/\"/;s/ *$$/\"/;/^\"\"$$/d;s/  */\\\\/g';     \\\n\t   echo ';';                                                          \\\n\t   echo \"static const int $${sym}Size ATTR_UNUSED =\"                  \\\n\t           \"(int)sizeof($${sym}Start);\";                              \\\n\t } >\"$@\"\n\n\n.ico.h:\n\t@echo od \"$<\" '>'\"$@\"\n\t@mkdir -p \"`dirname \"$@\"`\"\n\t@{ sym=\"`echo \"$<\" | $(symbolname)`\";                                 \\\n\t   echo \"static const char $${sym}Start[] =\";                         \\\n\t   od -vb \"$<\" | sed 's/[0-7]*/\"/;s/ *$$/\"/;/^\"\"$$/d;s/  */\\\\/g';     \\\n\t   echo ';';                                                          \\\n\t   echo \"static const int $${sym}Size ATTR_UNUSED =\"                  \\\n\t           \"(int)sizeof($${sym}Start);\";                              \\\n\t } >\"$@\"\n\n.jspp.js:\n\t@echo preprocess \"$<\" \"$@\"\n\t@mkdir -p \"`dirname \"$@\"`\"\n\tsed -e \"`sed -e 's/^#define *\\([^ ]*\\) *\\(.*\\)/\\/^[^#]\\/s\\/\\1\\/\\2 \\\\\\\\\\/* \\1 *\\\\\\\\\\/\\/g/' \\\n\t             -e t                                                     \\\n\t             -e d \"$<\"`\"                                              \\\n\t     -e \"s/^#/\\/\\/ #/\"                                                \\\n\t     -e \"s/VERSION/\\\"@VERSION@ @VCS_REVISION@\\\"/g\"                    \\\n\t     \"$<\" >\"$@\"\n\n.js.h:\n\t@echo od \"$<\" '>'\"$@\"\n\t@mkdir -p \"`dirname \"$@\"`\"\n\t@{ sym=\"`echo \"$<\" | $(symbolname)`\";                                 \\\n\t   echo \"static const char $${sym}Start[] =\";                         \\\n\t   od -vb \"$<\" | sed 's/[0-7]*/\"/;s/ *$$/\"/;/^\"\"$$/d;s/  */\\\\/g';     \\\n\t   echo ';';                                                          \\\n\t   echo \"static const int $${sym}Size ATTR_UNUSED =\"                  \\\n\t           \"(int)sizeof($${sym}Start);\";                              \\\n\t } >\"$@\"\n\n\n.wav.h:\n\t@echo od \"$<\" '>'\"$@\"\n\t@mkdir -p \"`dirname \"$@\"`\"\n\t@{ sym=\"`echo \"$<\" | $(symbolname)`\";                                 \\\n\t   echo \"static const char $${sym}Start[] =\";                         \\\n\t   od -vb \"$<\" | sed 's/[0-7]*/\"/;s/ *$$/\"/;/^\"\"$$/d;s/  */\\\\/g';     \\\n\t   echo ';';                                                          \\\n\t   echo \"static const int $${sym}Size ATTR_UNUSED =\"                  \\\n\t           \"(int)sizeof($${sym}Start);\";                              \\\n\t } >\"$@\"\n\nshellinaboxd.ps: shellinaboxd.1\n\tgroff -man -T ps $^ >$@\n\nshellinaboxd.pdf: shellinaboxd.ps\n\tps2pdf $^ $@\n\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 0.1962890625,
          "content": "Version 2.0 of ShellInABox is a complete rewrite. While previous versions\nrequired the Java plugin, since version 2.0 JavaScript enabled browsers are\nsupported without the need for additional plugins.\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 0.1708984375,
          "content": "Build the package according to the information in INSTALL, then refer to\nto the shellinaboxd.1 manual page, or the shellinaboxd.ps PostScript file\nfor detailed documentation.\n"
        },
        {
          "name": "README.Fedora",
          "type": "blob",
          "size": 1.4462890625,
          "content": "When running in SELinux mode on Fedora, some operations don't work out of the\nbox.\n\nUntil somebody contributes a complete SELinux policy for ShellInABox, here are\nsome tips on getting things working:\n\n- avoid using the default \"LOGIN\" service. Calling /bin/login does not do\n  the right thing.\n  The \"LOGIN\" service is the default service when running \"shellinaboxd\" as\n  \"root\". This means, you will most likely see all logins failing, whenever\n  you start the daemon as \"root\".\n  To fix this problem, consider explicitly specifying a service definition.\n  One of these two should work:\n    --service /:AUTH:HOME:SHELL\n  or\n    --service /:SSH\n  The latter requires that you have a locally running \"sshd\" daemon.\n\n- Alternatively, consider running \"./configure --disable-login\" before building\n  the daemon. This will completely remove support for the \"LOGIN\" service, and\n  shellinaboxd will instead use a default \"SSH\" service for both unprivileged\n  and for \"root\" users.\n\n- On Fedora, PAM authentication does not work for shellinabox until you\n  explicitly configure it. This means, using \"AUTH\" in the service definition\n  will not allow you to log in.\n  You can fix this by defining a proper \"/etc/pam.d/shellinabox\" file. Take a\n  look at \"etc-pam.d-shellinabox-example\" for a working example.\n  Make sure you assign the correct SELinux labels to this file when copying\n  it into \"/etc/pam.d\":\n    cp -Z system_u:object_r:etc_t:s0 etc-pam.d-shellinabox-example /etc/pam.d/\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.734375,
          "content": "\nshellinabox\n===========\n\n[![Build Status](https://drone.io/github.com/shellinabox/shellinabox/status.png)](https://drone.io/github.com/shellinabox/shellinabox/latest)\n[![Join the chat at https://gitter.im/shellinabox/shellinabox](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/shellinabox/shellinabox?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\nThis is a fork of the project **Shell In A Box**. The fork was created because\nthe original project was not maintained by the authorized author.  He did provide some\nearly support for the Debian package.\n\nOur aim is to continue with maintenance of the shellinabox project. For a list of\nrecent changes, please see [CHANGELOG.md](/CHANGELOG.md).\n\nIf you have any questions, issues, or patches, please feel free to submit a pull\nrequest or report an issue. You can also drop an email to the original project\n[issue #261](https://code.google.com/p/shellinabox/issues/detail?id=261) discussion\nfrom where this fork started.\n\n\nAbout shellinabox\n-----------------\n\nShell In A Box implements a web server that can export arbitrary command line\ntools to a web based terminal emulator. This emulator is accessible to any\nJavaScript and CSS enabled web browser and does not require any additional\nbrowser plugins.\n\n![Shell In A Box preview](/misc/preview.gif?raw=true)\n\nMore information:\n\n* [Manual page](https://github.com/shellinabox/shellinabox/wiki/shellinaboxd_man)\n* [Official site](https://code.google.com/p/shellinabox)\n* [Official wiki](https://code.google.com/p/shellinabox/wiki/shellinaboxd_man)\n\n\nBuild\n-----------------\n\nFor building **shellinabox** from source on Debian or RHEL based systems use commands\nlisted below. This will create executable file `shellinaboxd` in project directory.\n\n1. Install dependencies\n\n   ```\n    apt-get install git libssl-dev libpam0g-dev zlib1g-dev dh-autoreconf\n   ```\n   \n   or\n   \n   ```\n   yum install git openssl-devel pam-devel zlib-devel autoconf automake libtool\n   ```\n\n2. Clone source files and move to project directory\n\n   ```\n    git clone https://github.com/shellinabox/shellinabox.git && cd shellinabox\n   ```\n\n3. Run autotools in project directory\n\n   ```\n    autoreconf -i\n   ```\n\n4. Run configure and make in project directory\n\n   ```\n    ./configure && make\n   ```\n\n#### Debian package\n\nFor building and installing `.deb` packages you can use commands listed bellow.\nNote that dependencies from the first step above are also required.\n\n1. Build package\n\n    ```\n    dpkg-buildpackage -b\n    ```\n\n2. Install package\n\n    ```\n    dpkg -i ../shellinabox_{ver}_{arch}.deb\n    ```\n\nFor more information about `.deb` packages please see [INSTALL.Debian](/INSTALL.Debian) file.\n\nIssues\n-----------------\n\nAll reported issues were imported from [Google Code Project Issues](https://code.google.com/p/shellinabox/issues/list).\nYou can report new issues here, but first please try to reproduce them with package\ncreated from our sources. In new issue report please include following things:\n\n* Name and version of your operating system\n* Name and version of your browser\n* Version of shellinabox\n* Steps to reproduce the problem\n\nAlso feel free to post any questions or comments in [shellinabox chat room](https://gitter.im/shellinabox/shellinabox)\non Gitter.\n\n\nKnown Issues\n------------\n\n* The openssl package is required for HTTP/SSL support.\n  Shell-in-a-box may be used without SSL such that the login session\n  is not encrypted.  To enable automatic creation of self-signed\n  certificates or to use a generated certificate, install openssl.\n\n* On Debian Jessie, the default openssl package does not include the\n  utilities necessary for Shell-in-a-box to generate self-signed\n  certificates.  Upgrade openssl to install a version of the tools\n  that support certificate creation.\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 0.1328125,
          "content": "- Check if there is any way that we could fall back on gnutls if openssl is\n  unavailable\n- Package for distributions other than Debian\n"
        },
        {
          "name": "commit",
          "type": "blob",
          "size": 7.6005859375,
          "content": "#!/bin/bash -e\n\necho \"This script would only work on a Subversion repository\"\necho \"and is only kept for historical purpose... for now.\"\nexit 1\n\n\n# The script ensures that all commands succeed unless an error occurred. If it\n# does though, the shell terminates the script and our exit handler runs.\ntrap 'tput bel || :; echo Failed! >&2' EXIT\n\n# Ask the user a yes/no question. This function does not require the user to\n# press ENTER after making a selection.\nyes_no() {\n  local c\n  while :; do\n    c=\"$(set +e\n         trap 'stty echo -iuclc icanon 2>/dev/null' EXIT INT TERM QUIT\n         stty -echo iuclc -icanon 2>/dev/null\n         dd count=1 bs=1 2>/dev/null | od -An -tx1)\"\n    case \"$c\" in\n      \" 0a\") if [ -n \"$1\" ]; then\n               [ $1 -eq 0 ] && echo \"Y\" || echo \"N\"\n               return $1\n             fi\n             ;;\n      \" 79\") echo \"Y\"\n             return 0\n             ;;\n      \" 6e\") echo \"N\"\n             return 1\n             ;;\n      \"\")    echo \"Aborted\" >&2\n             exit 1\n             ;;\n      *)     # The user pressed an unrecognized key. As we are not echoing\n             # any incorrect user input, alert the user by ringing the bell.\n             (tput bel) 2>/dev/null || :\n             ;;\n    esac\n  done\n}\n\n# Build Debian package and create all the files that are needed by the\n# distribution maintainer.\ndebian_package() {\n  set -e\n  (\n    # Try to build the package. If things fail, let the exit handler remove all\n    # temporary files.\n    trap 'rm -rf \"${prj}-${ver}\" \"${prj}_${ver}\"*' EXIT\n\n    # Clean up any old temporary files\n    rm -rf \"${prj}-${ver}\" \"${prj}_${ver}\"*\n\n    # Extract the distribution source archive\n    tar zfx \"${prj}-${ver}.tar.gz\"\n\n    # We want to ship the \"debian\" directory with the source archive that\n    # users download directly from the project web site. This allows them to\n    # easily build their own Debian package by following the instructions in\n    # INSTALL.Debian.\n    # But when preparing our package for direct integration with Debian-based\n    # distributions, we have to instead remove the \"debian\" directory, as the\n    # distribution prefers that third-party projects are not built \"natively\".\n    mv \"${prj}-${ver}/debian\" \"${prj}_${ver}_debian\"\n    tar zfc \"${prj}_${ver}.orig.tar.gz\" \"${prj}-${ver}\"\n    mv \"${prj}_${ver}_debian\" \"${prj}-${ver}/debian\"\n\n    # Reset compatibility level\n    echo 7 >\"${prj}-${ver}/debian/compat\"\n    sed -i -e 's/debhelper *([^0-9]*[^)]*)/debhelper (>= 7.0.0)/'             \\\n        \"${prj}-${ver}/debian/control\"\n    sed -i -e 's/dh_clean *-k/dh_prep/' \"${prj}-${ver}/debian/rules\"\n\n    # Check that the version number in the debian/changelog file matches\n    if [ \"$(sed -e 's/^'\"${prj}\"' *(\\([^-]*\\)-.*).*/\\1/;t1;d;:1;q'            \\\n             \"${prj}-${ver}/debian/changelog\")\" != \"${ver}\" ]; then\n      echo \"Debian changelog file does not match current version number!\" >&2\n      exit 1\n    fi\n\n    # Build Debian packages.\n    (cd \"${prj}-${ver}\"\n     fakeroot dpkg-buildpackage -sa -us -uc || :)\n    trap '' EXIT\n\n    # Run lintian\n    lintian --verbose -I ${prj}_${ver}*_*.changes\n  ) || exit 1\n\n  # Revert any changes that might be pending in distributions/debian/*\n  local revert=\"$(svn st |\n                  grep distributions/debian |\n                  grep '^[^?]' |\n                  awk '{ print $2 }' |\n                  tac)\"\n  if [ -n \"${revert}\" ]; then\n    svn revert ${revert}\n    rm -f ${revert}\n  fi\n\n  # Create distributions/debian if it does not exist yet.\n  mkdir -p distributions/debian\n  for i in distributions distributions/debian; do\n    if [ -z \"$(svn st \"${i}\" 2>/dev/null | grep -v '^[?]')\" ]; then\n      svn add --depth=empty \"${i}\"\n    fi\n  done\n\n  # If this version of files already exists in the distribution directory,\n  # we are not yet ready to cut a new release. Just clean up and exit.\n  for i in \"${prj}_${ver}\"[-.]*.*; do\n    [ -r \"distributions/debian/${i}\" ] && {\n      rm $(ls \"${prj}_${ver}\"[-.]* | egrep -v '_*.changes|_*.deb')\n      return 0\n    }\n  done\n\n  # Move new Debian files into release area.\n  mv $(ls \"${prj}_${ver}\"[-.]* | egrep -v '_*.changes|_*.deb')                \\\n     distributions/debian/\n  svn add distributions/debian/\"${prj}_${ver}\"[-.]*.*\n\n  # Let the caller know that we added new packages.\n  return 1\n}\n\n# Quick sanity check that we are running from the correct directory\ntest -r configure.ac\n\n# Make sure there are no stale files\nsvn update\n\n# Determine Subversion revision number, project name, and public version\n# number\n{\n  rev=$(($(svn info | sed -e 's/^Revision: \\(.*\\)/\\1/;t1;d;:1;q')+1))\n  prj=\"$(sed -e 's/^AC_INIT(\\([^,]*\\),.*/\\1/;t1;d;:1;q' configure.ac)\"\n  ver=\"$(sed -e 's/^AC_INIT([^,]*, *\\([^,]*\\),.*/\\1/;t1;d;:1;q' configure.ac)\"\n} 2>/dev/null\n\n# Update \"configure.ac\" with the next Subversion revision number. This\n# information will trickle down into various source files where it becomes\n# part of the user-visible version information.\nsed -i -e 's/^\\(VCS_REVISION=\\).*/\\1'\"${rev}\"'/' configure.ac\ntouch shellinabox/vt100.jspp shellinabox/shell_in_a_box.jspp\n\n# If the manual page has been changed, make sure that the time stamp will be\n# changed, too.\nif [ -n \"$(svn st shellinabox/shellinaboxd.man.in 2>/dev/null |\n           grep '^M')\" ]; then\n  sed -i -e 's/^\\([.]TH .*\\)\"[^\"]*\"/\\1\"'\"$(date +'%b %d, %Y')\"'\"/\n             s/2008-2[01][0-9][0-9]/2008-'\"$(date +'%Y')\"'/g'                 \\\n      shellinabox/shellinaboxd.man.in\nfi\n\n# Always update the year in the user visible copyright statement(s)\nfor i in shellinabox/shell_in_a_box.jspp                                      \\\n         shellinabox/vt100.jspp                                               \\\n         COPYING                                                              \\\n         debian/copyright; do\n  sed -i -e 's/\\(2[01][0-9][0-9]-\\)2[01][0-9][0-9]/\\1'\"$(date +'%Y')\"'/g' \"$i\"\ndone\n\n# If a source file has changed, make sure to update the year in the copyright\n# statement for that particular file.\nsvn st | egrep '^[MA]' | awk '{ print $2 }' |\n  egrep '^(shellinabox|libhttp|demo)/' |\n  egrep '[.](html|h|c|css|jspp)$' |\n  while read -r f; do\n   sed -i -e 's/\\(2[01][0-9][0-9]-\\)2[01][0-9][0-9]/\\1'\"$(date +'%Y')\"'/g' \"$f\"\n  done\n\n# For now, Ubuntu/Hardy is still quite popular. We want to make it easy for\n# our users to build Debian packages from source. So, make sure we lock the\n# compatibility level at 6. Once we no longer care about maintaining strict\n# backwards compatibility, we can lift this restriction.\necho 6 >debian/compat\nsed -i -e 's/debhelper *([^0-9]*[^)]*)/debhelper (>= 6.0.0)/' debian/control\nsed -i -e 's/dh_prep/dh_clean *-k/' debian/rules\n\n# Build all the sources, create the distribution tar archive, and run some\n# basic sanity checks.\nmake all distcheck\n\n# Build Debian package and create all the files that are needed by the\n# distribution maintainer.\nmsg=\ndebian_package || {\n  msg=\"${msg}\nNOTICE: New version released. Please do not forget to notify distributions\"\n  if [ -r ~/.shellinabox-notifier ]; then\n    while read e; do\n      {\n        echo \"This is an automatically generated e-mail notification that\"\n        echo \"a new release of ShellInABox has just been made available\"\n        echo \"on the project's website at http://shellinabox.com\"\n        echo\n        echo \"You had previously requested to be notified when this happens.\"\n      } | mail -s \"New ShellInABox release\" \"$e\"\n    done\n  else\n    msg=\"${msg}\nNOTICE: Could not find ~/.shellinabox-notifier. Not sending e-mail...\"\n  fi\n}\n\nsvn diff $(svn st |\n           egrep -v ' configure$| aclocal.m4$|distributions|^[?]' |\n           sed -e 's/^[^ ]* *//') | less\necho -n 'Commit these changes (Y/n): '\nyes_no 0 || exit 1\nsvn commit\necho \"${msg}\"\n\ntrap '' EXIT\nexit 0\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 8.62109375,
          "content": "AC_PREREQ(2.57)\n\ndnl This is one of the locations where the authoritative version\ndnl  number is stored.  The other is in the debian/changelog.\nAC_INIT(shellinabox, 2.20, markus@shellinabox.com)\nif test -e .git; then\nVCS_REVISION=\" (revision `cd $srcdir && git log -1 --format=format:%h`)\"\nelse\nVCS_REVISION=\"\"\nfi\nAC_SUBST(VCS_REVISION)\nAC_DEFINE_UNQUOTED(VCS_REVISION, \"${VCS_REVISION}\",\n                   [Most recent revision number in the version control system])\n\ndnl Set up autoconf/automake for building C libraries and binaries with GCC\nCFLAGS=\"${CFLAGS:--Os}\"\nAM_INIT_AUTOMAKE([subdir-objects])\nAM_CONFIG_HEADER(config.h)\nAC_PROG_CC\ndnl Added this for compatibility with older versions of autoconf/automake\nAM_PROG_CC_C_O\nAC_LANG_WERROR\nAC_PROG_INSTALL\nAC_PROG_LIBTOOL\nAC_SUBST(LIBTOOL_DEPS)\nAC_C_CONST\nAC_PROG_GCC_TRADITIONAL\nAC_CONFIG_MACRO_DIR([m4])\n\ndnl Overwrite default archiver flags.\nAC_SUBST(AR_FLAGS, [cr])\n\ndnl Check for header files that do not exist on all platforms\nAC_CHECK_HEADERS([libutil.h pthread.h pty.h strings.h syslog.h sys/prctl.h \\\n                  sys/uio.h util.h])\n\ndnl Most systems require linking against libutil.so in order to get login_tty()\nAC_CHECK_FUNCS(login_tty, [],\n               [AC_CHECK_LIB(util, login_tty,\n                [LIBS=\"-lutil $LIBS\"\n                 AC_DEFINE(HAVE_LOGIN_TTY)])])\n\ndnl Use strlcat() instead of strncat() to avoid spurious warnings\nAC_CHECK_FUNCS([strlcat])\n\ndnl Use vsyslog() for logging important error messages\nAC_CHECK_FUNCS([vsyslog])\n\ndnl Prefer thread-safe functions, if available\nAC_CHECK_FUNCS([getgrgid_r getgrnam_r gethostbyname_r getpwnam_r getpwuid_r  \\\n                openpty strcasestr getresuid getresgid setresuid setresgid ])\n\ndnl We prefer ptsname_r(), but will settle for ptsname() if necessary\nAC_TRY_LINK([#ifndef _XOPEN_SOURCE\n             #define _XOPEN_SOURCE\n             #endif\n             #ifndef _GNU_SOURCE\n             #define _GNU_SOURCE\n             #endif\n             #include <stdlib.h>],\n            [char buf[10]; ptsname_r(0, buf, sizeof(buf));],\n            [AC_DEFINE(HAVE_PTSNAME_R, 1,\n                     Define to 1 if you have a re-entrant version of ptsname)])\n\ndnl Apparently, some systems define sigwait() but fail to implement it\nAC_TRY_LINK([#include <pthread.h>\n             #include <signal.h>],\n            [sigset_t s; int n; sigwait(&s, &n);],\n            [AC_DEFINE(HAVE_SIGWAIT, 1,\n                       Define to 1 if you have a working sigwait)])\n\ndnl Not every system has support for isnan()\nAC_TRY_LINK([#include <math.h>],\n            [if (isnan(0.0)) return 1;],\n            [AC_DEFINE(HAVE_ISNAN, 1,\n                       Define to 1 if you have support for isnan)])\n\n\ndnl Check if the compiler supports aliasing of symbols\nAC_TRY_LINK([void x(void) { };\n             void y(void) __attribute__((alias(\"x\")));],\n            [y();],\n            [AC_DEFINE(HAVE_ATTRIBUTE_ALIAS, 1,\n                       Define to 1 if you have support for symbol aliasing)])\n\ndnl Check if the compiler has support to mark parameters as unused\nAC_TRY_LINK([void x(int i __attribute__((unused))) __attribute__((unused));],\n            [],\n            [AC_DEFINE(HAVE_ATTRIBUTE_UNUSED, 1,\n                  Define to 1 if you have support for the \"unused\" attribute)])\n\ndnl Check the function signature of getgrouplist()\nAC_TRY_LINK([#define _BSD_SOURCE\n             #include <grp.h>\n             #include <unistd.h>],\n            [int (*f)(const char *, int, int *, int *) = getgrouplist;],\n            [AC_DEFINE(HAVE_GETGROUPLIST_TAKES_INTS, 1,\n                       Define to 1 if getgrouplist() takes ints as arguments)])\n\ndnl On some systems, calling /bin/login does not work. Disable the LOGIN\ndnl feature, if the user tells us that it does not do the right thing.\nAC_ARG_ENABLE(login,\n              [  --disable-login           on some systems (e.g. Fedora), calling /bin/login\n                            does not work well. If you know that your system\n                            suffers from this problem, set this option to\n                            remove support for the LOGIN keyword in the\n                            service description.])\nif test \"x$enable_login\" != xno; then\n  AC_DEFINE(HAVE_BIN_LOGIN, 1,\n                                Set if you want support for calling /bin/login)\nfi\n\ndnl We automatically detect SSL support, but allow users to disable it\nAC_ARG_ENABLE(ssl,\n              [  --disable-ssl             if available at built-time, support for SSL\n                            connections will be enabled. It can still be\n                            disabled at run-time, either on the daemon's\n                            command line or if the operating system does not\n                            have the OpenSSL libraries available.])\n\ndnl We automatically detect PAM support, but allow users to disable it\nAC_ARG_ENABLE(pam,\n              [  --disable-pam             PAM support is necessary in order to authenticate\n                            users for running programs other than their default\n                            login shell.])\n\ndnl We try to always use dlopen() instead of linking libraries dynamically, as\ndnl this reduces the hard run-time dependencies that our binary has. But we\ndnl allow users to disable this feature.\nAC_ARG_ENABLE(runtime-loading,\n              [  --disable-runtime-loading ShellInABox will try to load the OpenSSL, and PAM\n                            libraries at run-time, if it has been compiled with\n                            support for these libraries, and if the operating\n                            system supports dynamic loading of libraries. This\n                            allows you to install the same binary on different\n                            systems independent of whether they have OpenSSL\n                            and PAM enabled.  If you would rather directly link\n                            these libraries into the binary, thus making them a\n                            hard dependency, then disable runtime-loading.])\n\ndnl This is feature is not suported in some standard C libs. So users can use\ndnl this switch to avoid compile and runtime problems. Note that utmp must\ndnl disabled on systems with musl libc.\nAC_ARG_ENABLE(utmp,\n              [  --disable-utmp            Disable support for login records. Note\n                                           that for systems with musl libc utmp must\n                                           be disabled.])\n\nif test \"x$enable_utmp\" != xno; then\n  AC_CHECK_HEADERS([utmp.h utmpx.h])\n\n  dnl Even if utmpx.h exists, not all systems have support for updwtmpx()\n  AC_TRY_LINK([#include <utmp.h>],\n              [updwtmp(0, 0);],\n              [AC_DEFINE(HAVE_UPDWTMP, 1,\n                         Define to 1 if you have support for updwtmp)])\n  AC_TRY_LINK([#include <utmpx.h>],\n              [updwtmpx(0, 0);],\n              [AC_DEFINE(HAVE_UPDWTMPX, 1,\n                         Define to 1 if you have support for updwtmpx)])\nfi\n\ndnl Only test for OpenSSL headers, if not explicitly disabled\nif test \"x$enable_ssl\" != xno; then\n  AC_CHECK_HEADERS([openssl/bio.h openssl/err.h openssl/ssl.h])\nfi\n\ndnl Only test for PAM headers, if not explicitly disabled\nif test \"x$enable_pam\" != xno; then\n  AC_CHECK_HEADERS([security/pam_appl.h security/pam_client.h                 \\\n                    security/pam_misc.h ])\nfi\n\ndnl Only test for dlopen(), if not explicitly disabled. Add required libdl.so\ndnl library if necessary. Also, if dlopen() is not available on this system,\ndnl explicitly disable runtime loading.\nif test \"x$enable_runtime_loading\" != xno; then\n  AC_CHECK_FUNCS(dlopen, [],\n                 [AC_CHECK_LIB(dl, dlopen,\n                               [LIBS=\"-ldl $LIBS\"\n                                AC_DEFINE(HAVE_DLOPEN)],\n                               [enable_runtime_loading=no])])\nfi\n\ndnl If runtime loading has been disabled, add OpenSSL and PAM as hard\ndnl dependencies.\nif test \"x$enable_runtime_loading\" == xno; then\n  dnl Link against OpenSSL libraries, unless SSL support has been disabled\n  if test \"x$enable_ssl\" != xno; then\n    AC_CHECK_HEADER(openssl/bio.h,\n      [AC_CHECK_HEADER(openssl/err.h,\n        [AC_CHECK_HEADER(openssl/ssl.h, [LIBS=\"-lssl -lcrypto $LIBS\"])])])\n  fi\n\n  dnl Link against PAM libraries, unless PAM support has been disabled\n  if test \"x$enable_pam\" != xno; then\n    AC_CHECK_HEADER(security/pam_appl.h, [LIBS=\"-lpam $LIBS\"])\n    AC_CHECK_HEADER(security/pam_misc.h, [LIBS=\"-lpam_misc $LIBS\"])\n  fi\nfi\n\nAC_CHECK_LIB(z, deflate, [\n  AC_CHECK_HEADER(zlib.h, [LIBS=\"-lz $LIBS\"\n                           AC_DEFINE(HAVE_ZLIB, 1,\n                           Define to 1 if zlib development files are installed)\n])])\n\ndnl Generate output files\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc-pam.d-shellinabox-example",
          "type": "blob",
          "size": 0.5615234375,
          "content": "#%PAM-1.0\nauth\t   required\tpam_sepermit.so\nauth       include      password-auth\naccount    required     pam_nologin.so\naccount    include      password-auth\npassword   include      password-auth\n# pam_selinux.so close should be the first session rule\nsession    required     pam_selinux.so close\nsession    required     pam_loginuid.so\n# pam_selinux.so open should only be followed by sessions to be executed in the user context\nsession    required     pam_selinux.so open env_params\nsession    optional     pam_keyinit.so force revoke\nsession    include      password-auth\n"
        },
        {
          "name": "libhttp",
          "type": "tree",
          "content": null
        },
        {
          "name": "logging",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "make-chained-cert.sh",
          "type": "blob",
          "size": 0.9912109375,
          "content": "#!/bin/bash -e\n\ntmp=/tmp/make-chained-cert.$$\ntrap 'echo; tput bel; echo FAILURE; rm -rf \"${tmp}\"; exit 1' EXIT INT TERM QUIT\nmkdir -p \"${tmp}/demoCA/newcerts\"\nprintf '%08x' $$ >\"${tmp}/demoCA/serial\"\ntouch \"${tmp}/demoCA/index.txt\"\ncd \"${tmp}\"\n\nopenssl req -nodes -new -x509 -keyout \"${tmp}/ca-key.pem\"                     \\\n            -out \"${tmp}/ca-cert.pem\" -days 7300                              \\\n            -subj \"/CN=Demo CA/\" 2>/dev/null\n\nopenssl x509 -in \"${tmp}/ca-cert.pem\" -out \"${tmp}/ca-cert.crt\" 2>/dev/null\n\nopenssl req -nodes -new -keyout /dev/stdout                                   \\\n            -out \"${tmp}/ssl-req.pem\" -days 7300 -subj \"/CN=$(hostname -f)/\"  \\\n            2>/dev/null | cat\n\nopenssl ca -batch -keyfile \"${tmp}/ca-key.pem\" -cert \"${tmp}/ca-cert.crt\"     \\\n           -notext -policy policy_anything -days 7300 -out /dev/stdout        \\\n           -infiles \"${tmp}/ssl-req.pem\" 2>/dev/null | cat\ncat \"${tmp}/ca-cert.crt\"\n\ntrap 'rm -rf \"${tmp}\"' EXIT INT TERM QUIT\n\nexit 0\n"
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "shellinabox",
          "type": "tree",
          "content": null
        },
        {
          "name": "stresstest.sh",
          "type": "blob",
          "size": 1.21875,
          "content": "#!/bin/bash -e\n\nPORT=4201\nPIDFILE=stresstest.pid\n\nrm -f \"${PIDFILE}\"\ntrap '[ -r \"${PIDFILE}\" ] && kill \"$(cat \"${PIDFILE}\")\"; rm -f \"${PIDFILE}\"'  \\\n     EXIT INT TERM QUIT HUP\n\n./shellinaboxd -p \"${PORT}\" -s \"/:$(id -u):$(id -g):${PWD}:/bin/bash -c       \\\n               'while read i; do [ -z \"${i}\" ] && break; echo \\\" $i\\\"; done'\" \\\n               --background=\"${PIDFILE}\"\n\nsession() {\n  local data=\"$(wget -O- --post-data='' --quiet \"http://localhost:${PORT}/\")\"\n  local session=\"${data##*\\\"session\\\":\\\"}\"\n  session=\"${session%%\\\"*}\"\n  while read -r i; do\n    local keys=\"$(echo -n \"${i}\" | od -tx1 -An -w1000)\"\n    wget -O/dev/null --post-data=\"session=${session}&keys=${keys// /}\"        \\\n                     --quiet \"http://localhost:${PORT}/\"\n    kill -0 \"$(cat \"${PIDFILE}\")\" || break\n    [ -z \"$i\" ] && break\n    data=\"$(wget -O- --post-data=\"session=${session}\"                         \\\n                 --quiet \"http://localhost:${PORT}/\")\"\n    data=${data##*\\\"data\\\":\\\"}\n    data=${data%%\\\"*}\n    echo \"${data}\"\n  done <<'EOF'\nHello world\nThis is a test\nOK, that's it for now\n\nEOF\n}\n\npids=\"\"\nfor i in `seq 100`; do\n  session &\n  pids=\"${pids} $!\"\n  sleep 0.02\n  kill -0 \"$(cat \"${PIDFILE}\")\" || break\ndone\nwait $pids >&/dev/null\n"
        }
      ]
    }
  ]
}