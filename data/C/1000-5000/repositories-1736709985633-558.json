{
  "metadata": {
    "timestamp": 1736709985633,
    "page": 558,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "boazsegev/facil.io",
      "stars": 2206,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang_complete",
          "type": "blob",
          "size": 0.2705078125,
          "content": "-Ilib/\n-Ilib/facil\n-Ilib/facil/fiobj\n-Ilib/facil/cli\n-Ilib/facil/http/\n-Ilib/facil/http/parsers\n-Ilib/facil/redis\n-Ilib/facil/tls\n-Ilib/bearssl\n\n-Idev/\n-Idev/startup\n-Idev/services\n-Idev/http\n\n-DDEBUG\n-DHAVE_BEARSSL\n-DHAVE_OPENSSL\n-DHAVE_ZLIB\n-DINCLUDE_MUSTACHE_IMPLEMENTATION\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.193359375,
          "content": "tmp/*\nhtml/\npublic_www/\nDockerfile\nlibdump\ndocs/_site\nlib/bearssl/\n\n/src/\n\n.gitignore\n.DS_Store\n.gitmodules\n\ncallgrind*\ndocs/assets/styles/main.css.map\ntests/xxhash.h\ntests/xxhash.c\ntests/words.txt\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0009765625,
          "content": "\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3037109375,
          "content": "language: c\nscript:\n  - make vars\n  - DEBUG=1 make vars\n  - make test/optimized\n  - ASAN_OPTIONS=detect_leaks=0 make test/poll\n  - ASAN_OPTIONS=detect_leaks=0 make test/ci\nos:\n  - linux\n  - osx\ncompiler:\n  - clang\n  - gcc\nnotifications:\n  email: false\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 71.8916015625,
          "content": "# Change Log\n\n### v. 0.7.5 (2020-05-18)\n\n**Security**: backport the 0.8.x HTTP/1.1 parser and it's security updates to the 0.7.x version branch. This fixes a request smuggling attack vector and Transfer Encoding attack vector that were exposed by Sam Sanoop from [the Snyk Security team (snyk.io)](https://snyk.io). The parser was updated to deal with these potential issues.\n\n**Fix**: (`http`) fixes an issue with date calculation by backporting code from the 0.8.x branch.\n\n**Fix**: (`fio`) call less signal handlers during shutdown.\n\n### v. 0.7.4\n\n**Fix**: (`http`) fixes an issue and improves support for `chunked` encoded payloads. Credit to Ian Ker-Seymer ( @ianks ) for exposing this, writing tests  (for the Ruby wrapper) and opening both the issue boazsegev/iodine#87 and the PR boazsegev/iodine#88.\n\n**Fix**: (`http`) requests will fail when the path contains a dangling `?` (empty query). Credit to @adam12 for exposing this and opening issue boazsegev/iodine#86.\n\n### v. 0.7.3\n\n**Fix**: (`http`) fixes a security issue in the static file name resolution logic, where a maliciously encoded request could invoke an arbitrary response.\n\n**Fix**: (`fio`) fixes an issue where setting a different value to `FIO_SLOWLORIS_LIMIT` was being ignored.\n\n**Fix**: (`fio`, `fiobj`) improved C++ compatibility. Credit to Joey (@joeyhoek) for PR #76.\n\n**Fix**: (`fio`) fixes an issue where timer cleanup wasn't performed after `fio_stop` (or SIGINT/SIGTERM). No a \"clean slate\" will be provided if `fio_start` is called more then once. Note: this may **break previous behavior**, which should be considered undocumented and unexpected behavior. (this fax **may** be deferred to version 0.8.x, still undecided). Credit to @fbrausse for opening issue #72. \n\n**Fix**: (`fio`) fixes an issue where timer cleanup would be performed after the `AT_EXIT` state callbacks. Now the timer cleanup callbacks will be performed **before** the `AT_EXIT` callback (as they should). (See issue #72).\n\n**Fix**: (`fio`) fixes signal handler (re)establishment test to prevent recursive signal calling.\n\n### v. 0.7.2\n\n**Fix**: (`fio_tls`) fixes a memory leak in the trusted certificate chain. Credit to @fbrausse for opening PR #71.\n\n**Fix**: (`fio_tls`) fixes compilation / linking flags (including a bug caused by the `gcc` optimizer `-fipa-icf`) and improves support for OpenSSL using `pkg-config`. Credit to @fbrausse for PR #71.\n\n**Fix**: (`http1`) fixes a race-condition between the `on_ready` and `on_data` events, that could result in the `on_data` event being called twice instead of once (only possible with some clients). On multi-threaded workers, this could result in the CPU spinning while the task lock remains busy. Credit to NÃ©stor Coppi (@Shelvak) for exposing the issue and providing an example application with detailed reports. Issue #75.\n\n### v. 0.7.1\n\n**Security**: a heap-overflow vulnerability was fixed in the WebSocket parser, which could have been triggered by a maliciously crafted message-header. Credit to Dane (4cad@silvertoque) for exposing this issue and providing a Python script demonstrating the attack. \n\n### v. 0.7.0\n\nStable API release. Future API updates will be wait for the 0.8.x release.\n\n**Fix**: (`fio`, `fiobj`) fixed some `gcc` and `clang` compatibility issues and warnings.\n\n**Fix**: (`http`) fixed HTTP date format to force the day of the month to use two digits. Credit to @ianks (Ian Ker-Seymer) for exposing this issue (iodine#64).\n\n**Compatibility**: (`http`) updated time-zone compile-time tests with a safer fall-back.\n\n### v. 0.7.0.beta8\n\n**Security**: (`fio`) Slowloris mitigation is now part of the core library, where `FIO_SLOWLORIS_LIMIT` pending calls to `write` (currently 1,024 backlogged calls) will flag the connection as an attacker and either close the connection or ignore it. This protocol independent approach improves security.\n\n**Security**: (`http`) HTTP/1.1 client throttling - new requests will not be consumed until pending responses were sent. Since HTTP/1.1 is a response-request protocol, this protocol specific approach should protect the HTTP application against slow clients.\n\n**Fix**: (`fio`) fixed fallback implementation for `fio_atomic_xchange` when missing atomic primitives in compiler (older compilers). Credit to @Low-power for identifying and fixing the issue (PR #55).\n\n**Fix**: (`fio`) fixed a possible unreleased lock when a memory allocation failed (no memory in the system). Credit to @Low-power for identifying and fixing the issue (PR #54).\n\n**Fix**: (`fio`) fixed the `fio_sock_sendfile_from_fd` fall-back for a missing `sendfile`. Credit to @Low-power for identifying and fixing the typo (PR #49).\n\n**Fix**: (`fio`) fixed `fio_pending` not decrementing packet count before reaching zero.\n\n**Fix**: (`fio`) fixed logging message for overflowing log messages. Credit to @weskerfoot (Wesley Kerfoot) and @adam12 (Adam Daniels) for exposing the issue (issue iodine/#56).\n\n**Fix**: (`fio`, `fio_risky_hash`) Florian Weber (@Florianjw) [exposed a byte ordering error (last 7 byte reading order) and took time challenge the algorithm](https://www.reddit.com/r/crypto/comments/9kk5gl/break_my_ciphercollectionpost/eekxw2f/?context=3). The exposed errors were fixed and the exposed a possible attack on RiskyHash using a variation on a Meet-In-The-Middle attack, written by Hening Makholm (@hmakholm). This prompted an update and fixes to the function.\n\n**Fix**: (`fio`) fixed `fio_str_resize` where data might be lost if data was written beyond the current size and the requested size is larger then the String's capacity (i.e., when `fio_str_resize` is (mis)used as an alternative to `fio_str_capa_assert`).\n\n**Fix**: (`json` / `redis`) fixed JSON formatting error caused by buffer reallocation when multiple (more then 48) escape sequences were detected. This issue also effected the Redis command callback handler (which was using JSON for IPC).\n\n**Fix**: (`redis`) fixed a potential double `free` call.\n\n**Fix**: (`redis`) fixed a recursive endless loop when converting nested Hash Tables to Redis objects (which normally wouldn't happen anyway, since they would be processed as JSON).\n\n**Fix**: (`redis`) fixed Redis reconnection. Address and port data was mistakingly written at the wrong address, causing it to be overwritten by incoming (non-pub/sub) data.\n\n**Fix**: (`redis`) fixed a race condition in the Redis reconnection logic which might have caused more then a single pub/sub connection to be established and the first pending command to be sent again.\n\n**Fix**: (`fio`) fix capacity maximization log to accommodate issues where `getrlimit` would return a `rlim_max` that's too high for `rlim_cur` (macOS).\n\n**Fix**: (`fio`) fix uninitialized `kqueue` message in `fio_poll_remove_fd`.\n\n**Fix**: (`http`) possible fix for `http_connect`, where `host` header length might have been left uninitialized, resulting in possible errors.\n\n**Fix**: (`fio`) fixed logging error message for long error messages.\n\n**Update**: (`fio` / `makefile`) improved detection for polling system call, `sendfile`, etc'.\n\n**Update**: (`fio`) improved signal handling. Signal handling now propagates to pre-existing signal handlers. In addition, the `fio_signal_handler_reset` function was made public, allowing facil.io signal handlers to be removed immediately following startup (using `fio_state_callback_add` with `FIO_CALL_PRE_START` to call `fio_signal_handler_reset`).\n\n**Update**: (`fio`) improved pub/sub memory usage to minimize message copying in cluster mode (same memory is used for IPC and local-process message publishing).\n\n**Update**: (`fio`) updated the non-cryptographic PRG algorithm for performance and speed. Now the `fio_rand` functions are modeled after the `xoroshiro128+` algorithm, with an automated re-seeding counter based on RiskyHash. This should improve performance for non cryptographic random requirements.\n\n**Compatibility**: (`fio`) mitigate undefined MAP_ANONYMOUS on MacOS <= 10.10. Credit to @xicreative (Evan Pavlica) for iodine/PR#61.\n\n**Compatibility**: (`fio`) various Solaris OS compatibility patches, courtesy of @Low-power (PR #52, #53).\n\n### v. 0.7.0.beta7\n\n**BREAK**: (`fio_tls`) breaking API changes to the SSL/TLS API... I know, I'm sorry, especially since there's a small and misleading change in argument ordering for `fio_tls_cert_add` and `fio_tls_new`... but if we don't fix the API now, before the 0.7.0 release, bad design might ruin our Wednesday meditation for all eternity.\n\n**BREAK**: (`http`) breaking API changes to `http_connect` were required in order to support Unix Socket connections in client mode.\n\n**Deprecation**: (`http`) deprecating the `http_url_parse` in favor of `fio_url_parse` (moved the function to the core library and rewrote it in part).\n\n**Security**: facil.io hash maps now limit the number of full-collisions allowed in a hash map. This mitigates the effects of hash flooding attacks. As a side effect, hash maps that are under attack might return false results for collision objects.\n\n**Fix**: (`websocket`) fixed an issue with the WebSocket parser where network byte order for long message lengths wasn't always respected and integer bit size was wrong for larger payloads. Credit to Marouane Elmidaoui (@moxgeek) for exposing the issue.\n\n**Fix**: (`http`) fixed `udata` in WebSocket client callback for failed WebSocket client connections.\n\n**Fix**: (`fio`) logging message when listening to a Unix Socket.\n\n**Fix**: (`fio`) numerous minor design fixes, such as Big-Endian string memory access, allowing `fio.h` to be used as a header only library (requires `FIO_FORCE_MALLOC`) and other adjustments.\n\n**Fix**: (`fio`) fixed unaligned memory access in SipHash implementation and added secret randomization for each application restart.\n\n**Fix**: (`redis`) fixed an issue where destroying the Redis engine and exiting pre-maturely, before running facio.io (`fio_start`), will cause a segmentation fault during cleanup.\n\n**Update**: (`fio`) added Risky Hash, for fast hashing of safe data. This is a fast hashing function (about twice as fast as the default SipHash1-3 secure function) that wasn't tested for security. For this reason it should be limited to internal / safe data, such as CLI argument names.\n\n### v. 0.7.0.beta6\n\n**BREAK**: (`fio_tls`) breaking API changes to the SSL/TLS API, adding support for password protected private key files. *Note*: The TLS API is still fragile and should only be considered stable once version 0.7.0 is released with SSL/TLS support.\n\n**Security** / **Fix**: (`http`) fixed an issue with the HTTP/1.1 parser, where maliciously crafted white-space data could cause a segmentation fault, resulting in a potential DoS.\n\n**Fix**: (`fio`) fixed an issue exposed by implementing the TLS layer, where the highet `fd` for a connection that wasn't assigned a `protocol_s` object immediately after the connection was opened, might avoid timeout review or avoid cleanup during shutdown (which will be marked as a memory leak).\n\n**Update**: (`fio_tls`) added experimental support for OpenSSL. This was only partially tested and should be considered experimental.\n\n**Update**: (`fio`) added, the `fio_rw_hook_replace_unsafe` to allow r/w hook switching from within a r/w hook callback.\n\n**Update**: (`fio_cli`) a common user-error is a a missing `fio_cli_end`, resulting in a memory leak notification. Now facil.io protects against this common error by automatically calling  `fio_cli_end` during the exit stage, if `fio_cli_start` was called.\n\n### v. 0.7.0.beta5\n\n**Fix**: (`fio_cli`) fixed an issue introduced in version 0.7.0.beta4, where `fio_cli_get_i` would dereference NULL if the value wasn't set. Now `fio_cli_get_i` returns zero (0) for missing values, as expected. Note: this related to the new hex and binary base support in command line numerals.\n\n### v. 0.7.0.beta4\n\n**BREAK**: (`fio_cli`) breaking API changes make this extension easier than ever to use... *I do apologize for this, but part of the reason 0.7.0 is still in beta is to test the API itself for ease of use and readability*.\n\n**Fix**: (`fio`) fixed a minor memory leak in cluster mode, caused by the root process not freeing the hash map used for child process subscription monitoring.\n\n**Fix**: (`fio`) fixed superfluous and potentially erroneous pub/sub engine callback calls to `unsubscribe`, caused by (mistakingly) reporting filter channel closure.\n\n**Fix**: (`mustache`, `FIOBJ`) added support for dot notation in mustache templates.\n\n**Fix**: (`http/1.1`) avoid processing further requests if the connection was closed.\n\n**Fix**: (`fio_test`) fixed some memory leaks in the testing functions.\n\n**Update**: (`fio_cli`) stylize and beautify `FIO_CLI_PRINT_HEADER` lines.\n\n**Update**: (`fio`) updated the automatic concurrency calculations to leave resources for the system when a negative value is provided (was only available for worker count calculations, now available for thread count as well).\n\n### v. 0.7.0.beta3\n\n**Fix**: (`fio`) fixed superfluous `ping` events that might occur after a `fio_write` (but before the scheduled write actually occurred).\n\n**Fix**: (`mustache`) updated the mustache parser to fix an issue with template loading path names. The partial template path resolution logic was re-written, fixed and improved (I hope). This also adds support for text in mustache lambda, though not applicable when used with FIOBJ.\n\n**Fix**: (`fio`) prevent Read/Write Hooks from delaying `fio_force_close` when an error occures while polling a connection.\n\n**Fix**: (`fio`) deletes Unix sockets once done listening. Fixes an issue where the files would remain intact.\n\n**Fix**: (`fio`) replaced `fio_malloc` existing memory allocation / free-list implementation. This also fixes an issue with large memory pools being retained on multi-core systems with many reported CPU cores.\n\n**Fix**: (`fio`) the `FIO_FORCE_MALLOC` flag was fixed to accommodate for the fact that fio_malloc returns zeroed data (all bytes are set to zero) vs. the system's `malloc` which might return junk data.\n\n**Fix**: (`http`) fixes a possible memory leak in `http_mimetype_register`, where clearing the registry wouldn't free the FIOBJ Strings.\n\n**Update**: (`cli`) updated handling of empty strings in CLI values by ignoring the argument rather than printing an error or experiencing an undefined value.\n\n**Optimization**: (`fio`) pub/sub channel names appear to be (often) objects with a long life-span. Hence, these objects now use `malloc` (instead of `fio_malloc`). Also, temporary allocations in `fio_subscribe` were removed.\n\n**Optimization**: (`fio`) pub/sub meta-data information and callbacks now use an Array (instead of link lists and a hash map). This should improve cache locality when setting and retrieving pub/sub meta-data.\n\n**Optimization**: (`fio`) added an urgent task queue for outbound IO, possibly improving protection against non-evented / blocking user code.\n\n**Optimization**: (`http`) WebSocket broadcasting optimizations are now automated.\n\n### v. 0.7.0.beta2\n\n**Breaking Changes**!\n\nA lot of the code was re-written and re-organized, minimizing the name space used by the core library and consolidating the core library into a two file library (`fio.h` and `fio.c`).\n\nThis translated directly to **breaking the API and ABI and bumping the version number**.\n\nThis should make the library easier to copy and use as well as minimize possible name collisions (at the price of maintaining a couple of monolithic files as the core library).\n\n**These are the main changes**:\n\n* Extracted the FIOBJ library from the core library, making it an add-on that could used by the extensions (such as the HTTP extension) rather than a core requirement.\n\n* Condensed the core library and it's namespace to two files (`fio.h` and `fio.c`) - replaced all `facil_` function names with `fio_` to accommodate the new namespace.\n\n    ...why?\n\n    It's a choice to sacrifice ease of maintainability in favor of ease of use.\n\n    Although two files are more difficult to maintain than 10 files (assuming it's the same amount of code)... it seems that two files are easier for other developers to copy and paste into their projects.\n\n* Added poll support to allow for performance testing and CYGWIN compatibility. The system epoll/kqueue calls should perform better for higher loads, but now you can see for yourself.\n\n* Timers are now in user space, allowing for more timers and less kernel dependencies.\n\n* The `on_idle` and `on_finish` settings in `facil_run` (now `fio_start`) were removed, replaced by the more flexible `fio_state_callback_add` approach.\n\n* The `fio_listen` and `http_listen` functions now return the listening socket's `uuid` (much like `fio_connect` and `http_connect` did).\n\n* The Protocol's `on_shutdown` callback is now expected to return a `uint8_t`, hinting at a requested timeout before the socket is forcefully closed. A return value of 0 will indicate immediate socket closure with an 8 second timeout for outgoing buffer flushing.\n\n* The cluster messaging system and the Pub/Sub system were both refactored, **the API changed** and the FIOBJ dependency was removed. This change cascades to effect all the Pub/Sub system elements.\n\n* The Pub/Sub system's `use_pattern` was replaced with the optional callback argument `match` (a function pointer), allowing for custom pattern matching approaches (such as implementing NATs and RabbitMQ pattern matching). The previous glob matching approach (Redis compatible) is available using the provided `FIO_MATCH_GLOB` function pointer.\n\n* The WebSocket upgrade (`http_upgrade2ws`) now matches the SSE upgrade function (starts with the handle `http_s *` and named arguments come later).\n\n* The CLI API and implementation was completely rewritten. The new code is slightly more \"monolithic\" (one long function does most of the work), but should waste less memory with a simpler API (also got rid of some persistent data).\n\n* The Read/Write socket hooks were redesigned.\n\n* An SSL/TLS API stub was designed for SSL/TLS library abstraction (not implemented yet). This API is experimental and might change as I author the first SSL/TLS library wrappers (roadmap includes OpenSSL and BearSSL).\n\n**Update**: (`fio_mem` => `fio.h`) updated the allocator defaults to lower the price of a longer life allocation. Reminder: the allocator was designed for short/medium allocation life-spans _or_ large allocations (as they directly map to `mmap`). Now 16Kb will be considered a larger allocation and the price of holding on to memory is lower (less fragmentation).\n\n**Fix**: (`fio`) fixed a typo in the shutdown output. Credit to @bjeanes (Bo Jeanes) for the Iodine#39 PR.\n\n**Feature**: (`FIOBJ`) added [mustache template support](http://mustache.github.io).\n\n**Logo**: Logo created by @area55git ([Area55](https://github.com/area55git))\n\n**Documentation**: A new website!\n\n### v. 0.6.4\n\n**Fix**: (`sock`) fixed an issue where calls to `sock_write` could potentially add data to the outgoing queue even after `sock_close` in cases where the outgoing queue isn't empty.\n\n**Fix**: (`facil.io`) fixed a race condition between pre-scheduled tasks (`defer` calls) and the worker process initialization. The race condition might have resulted in some pre-scheduled tasks not running on all the workers.\n\n**Fix**: (`http`) fixed an issue with the HTTP request logging, where the peer address wasn't shown.\n\n**Fix**: (`websocket`) made sure that `on_ready` is never called before `on_open` returns.\n\n**Fix**: (`fio_mem`, `facil`, `http`) fixed compatibility issues with Alpine Linux distro and older OS X versions (< 10.12).\n\n**Fix**: (`http`) fixed the `http_date2rfc2109` method where a space wasn't written to the buffer after the month name (resulting in a junk byte).\n\n**Fix**: (`pubsub`) made sure that newly registered engines get the full list of existing subscriptions (no need to call `pubsub_engine_resubscribe`).\n\n**Fix**: (`facil`) possible fix for protocol attachment with `NULL` protocol.\n\n\n### v. 0.7.0.beta1\n\n**(yanked)**\n\n### v. 0.6.3\n\n**Fix**: (`fio_hashmap` / `fiobj_hash`) fixed a possible issue that could occur when compacting a severely fragmented Hash (where the length of the new storage requirements is shorter than the fragmented ordered array of data).\n\n**Fix**: (`http` / `websocket`) fixed an issue where the WebSocket's `on_close` callback wouldn't be called if certain errors prevented the upgrade. Now the `on_close` callback is always called.\n\n**Fix**: (`http`) fixed an issue where the Content-Type header might be missing when sending unrecognized files. Now an additional best attempt to detect the content type (this time using the URL instead of the file name) will be performed. If no content type is detected, the default RFC content type will be attached (`application/octet-stream`).\n\n**Fix**: (`http1_parser`) fixed a possible unaligned memory access concern.\n\n**Fix**: (`FIOBJ`) fixed compiler compatibility concerns with the `fiobj_num_new` logic, removing some possibly undefined behavior.\n\n**Fix**: (`facil`) a missing `on_data` protocol callback (missing during `facil_attach`) will now call `facil_quite`, preventing the event from firing endlessly.\n\n**Update**: (`http`) the `on_upgrade` callback now supports SSE connections with `sse` protocol identifier and the `http_upgrade2sse` function.\n\n**Update**: (`sock`) initial support for TCP Fast Open (TFO) when listening for connections.\n\n### v. 0.6.2\n\nThis version fixes a number of issues, including a serious issue that prevented sockets from fully flushing their buffer.\n\nThis version also improved the shutdown and hot restart logic and fixes numerous issues with cluster mode an pub/sub services.\n\nIt's recommended that all 0.6.0.beta, 0.6.0 and 0.6.1 upgrade to this version.\n\n**Security**: (`http1`) added a hard-coded limit on the number of headers allowed per request (regardless of size). `HTTP_MAX_HEADER_COUNT` defaults to 128, which should be enough by all accounts.\n\n**Fix**: (`pubsub`, `facil`, `redis-engine`) fixed numerous cluster and Pub/Sub issues, including support for new `on_startup` callback for `pubsub_engine_s` objects (to make handling `fork`s that much easier. This fixes a memory leak, a reference counting error that freed memory prematurely, message parsing errors on fragmented messages, an obsolete ping formatting error, and more.\n\n**Fix**: (`sock`, `facil`) fixed an issue where socket buffers wouldn't be completely cleared (the `on_ready` event wouldn't be properly re-armed). This was discovered as a serious issue and upgrading to 0.6.2 is recommended.\n\n**Fix**: (`http`) fixed an HTTP status string output error, where status codes above 410 would degrade to status 500 (internal error) instead of printing the correct status string to the response.\n\n**Fix**: (`websockets`) fixed a missing \"close\" packet signal that should have been sent immediately after the user's `on_shutdown` callback.\n\n**Fix**: (`FIOBJ`) fixed the `fiobj_str_tmp` function to add thread safety (temp string should be stored in the thread's local storage, not globally accessible).\n\n**Fix**: (`redis`) fixed a race condition in the Redis engine that could prevent publishing connections from being established in worker processes.\n\n**Fix**: (`facil`) fixed an issue where `facil_attach` wouldn't call the `on_close` callback if the failure was due to the file descriptor being equal to -1.\n\n**Fix**: (`facil`) fixed a signaling issue where a `SIGUSR1` sent to a worker process might inadvertently shutdown the server instead or wind down the specific worker and re-spawn a new one.\n\n**Fix**: (`facil`) fixed a signal handling logic to make it async-safe, protecting it against possible deadlocks or cluster stream corruption.\n\n**Update/Fix**: (`facil`) the `on_data` event will no longer be fired for sockets that were flagged to be closed using `sock_close`.\n\n**Update**: (`FIOBJ`) updated the `fiobj_str_readfile` to allow for a negative `stat_at` position (calculated from the end of file of the file backwards).\n\n**Update**: (`facil`) strengthened the `on_shutdown` callback lock to prevent the `on_shutdown` callback from being called while the `on_data` callback (or other connection tasks) is running.\n\n**Update**: (`facil`) shutdown logic provides more time for socket buffers to flush (only when required).\n\n### v. 0.6.1\n\n**Fix**: (`pubsub`) fixed a possible issue where a channel name might be freed before it's callback is handled. This was overlooked during the Hash caching logic update that prevented key hashing when the last item of the ordered Hash is removed.\n\n**Fix**: (`pubsub`) pubsub will now compact the memory used for client and channel data if the storage becomes excessively fragmented.\n\n**Fix**: (`hashmap`) fixed a possible memory reading issue that could occur when a Hash contains only one object and that object is removed (causing a memory read into the location just before the Hash map's address).\n\n**Fix**: (`defer`) defer now prefers the statically allocated buffer over the dynamically allocated buffer when all tasks have completed, preventing the last allocated buffer from leaking during the shutdown stage.\n\n**Fix**: (`websocket`) subscriptions created during the on_close callback (besides indicating that the API was being abused) are now properly removed.\n\n### v. 0.6.0\n\nVersion 0.6.0 is a major release, changing much of the extension API (HTTP, pub/sub, CLI) and some of the core API (i.e., moving the evio polling from level-triggered to one-shot polling, a rewrite to the facil.io dynamic object types FIOBJ, and more).\n\nThe following updates are included in this release (in addition to the beta updates):\n\n**Fix**: (`pubsub`) Fixed an issue where deferred pub/sub messages would have `udata2` set to `udata1` instead of the actual correct value.\n\n**Fix**: (`facil`) Fixed the `facil_is_running()` function, which could crash if facil.io wasn't initialized before the function was called.\n\n**Fix**: (`facil`) Fix CPU limit detection. Negative values are now meaningful (fraction of CPU cores, so -2 == cores/2). Zero values are replaced by facil.io.\n\n**Update**: (`facil`) Hot restart is now available for cluster mode. By sending the `SIGUSR1` signal to the program, facil.io will shutdown any worker processes and re-spawn new workers, allowing for a hot restart feature. Disable using `FACIL_DISABLE_HOT_RESTART`\n\n**Update**: (`facil`) Dedicated system mode can be toggled by setting the `FIO_DEDICATED_SYSTEM` macro during compile time. When `FIO_DEDICATED_SYSTEM` is set, facil.io will assume all the CPU cores are available and it will activate threads sooner. When `FIO_DEDICATED_SYSTEM` is defined as 0, facil.io will limit thread to protect against slow user code (rather than attempt concurrent IO).\n\n**Update**: (`fio_mem`) replaced the double linked list logic with a single linked list to make the library more independent as well as reduce some operations.\n\nAs well as some refactoring and minor adjustments.\n\n### v. 0.6.0.beta.8\n\n**Fix**: (`defer`) the `defer_free_thread` symbol is now correctly marked as weak, allowing the function to be overridden.\n\n**Fix**: (`http`) fixes an issue where cookies without an explicit age would be marked for immediate deletion (instead of the expected \"session\" lifetime).\n\n**Fix**: (`http`) fixes a potential issue where a missing or corrupt `accept-encoding` header could cause a segmentation fault.\n\n**Fix**: (`http`) fixes an issue where a cookie encoding errors would reported repeatedly.\n\n**Fix**: (`fio_hash`) fixes an issue where resubmitting a removed object wouldn't increase the object count.\n\n**Fix**: (`fiobj`) fixes an issue where testing the type of specific FIOBJ_T_NUMBER objects using `FIOBJ_TYPE_IS` would return a false positive for the types FIOBJ_T_HASH or FIOBJ_T_STRING.\n\n**Update**: Added an experimental custom memory allocator (`fio_mem.h`) optimized for small concurrent short-lived allocations (anything over 16Kb and reallocations start to take a toll). It can replace the system's `malloc` function family when `FIO_OVERRIDE_MALLOC` is defined. To use `tcmalloc` or `jemalloc`, define `FIO_FORCE_MALLOC` to prevent `fio_mem` from compiling.\n\n**Update**: (`http`) added cookie parsing.\n\n**Update**: minor optimizations, `fio_malloc` incorporation and documentation updates.\n\n### v. 0.6.0.beta.7\n\n**Fix**: (`websockets`) fixed an issue with client pinging would break the protocol in a way that would result in either loss of data or disconnections.\n\n**Fix**: (`websockets`) removed the debugging ping (3 seconds interval ping) from the Websocket client. Pings can be sent manually or by setting the connection's timeout using `facil_set_timeout`.\n\n**Fix**: (`websockets`) made sure the client mask is never zero by setting a few non-random bits.\n\n**Fix**: (`redis`) fixed an issue where the command queue (for busy pipelined Redis commands and for reconnection) would send the last message repeatedly instead of sending the messages in the queue.\n\n**Fix**: (`facil`) Fixed a possible memory leak related to `facil_connect` and failed connections to localhost. Improved process exit cleanup.\n\n**Fix**: (`pubsub`) improved process exit cleanup.\n\n**Fix**: (`fio_cli`) fixed text coloring on terminal output.\n\n**Fix**: (`fio_hash`) fixed looping logic to remove the need for the \"data-end\" marker optimizing allocations in a very small way.\n\n**Update**: (`websockets`) added a client example using the terminal IO for Websocket text communication.\n\n### v. 0.6.0.beta.6\n\nThis beta release is a performance oriented release and includes mostly performance related changes.\n\nThis release updates some default values to make them more reasonable for common use cases and to help minimize memory consumption.\n\nThese values, such as the `LIB_SOCK_MAX_CAPACITY`, `FIO_HASH_INITIAL_CAPACITY` and the `FIOBJ_ARRAY_DEFAULT_CAPA` values, can be updated during compile time.\n\nSome of these default values can be bypassed during runtime by using specific function calls (such as `fio_hash_new2`).\n\nOther notable performance changes include the short string hash cashing (shortening the FIOBJ short-string capacity in exchange for reducing `fio_siphash` calls).\n\nThese are lessons learned from the TechEmpower benchmarks... although they will not be reflected in the Round 15 results.\n\n### v. 0.6.0.beta.5\n\nReleased fixes for issues related to the [TechEmpower Framework Benchmarks](https://github.com/TechEmpower/FrameworkBenchmarks) 80 core startup.\n\n**Fix**: fixed error handling during cluster mode startup, making sure facil.io fails to start.\n\n**Update**: capped maximum core detection value to 120 cores. Any value larger than 120 will raise a warning and the cap (120) will be used.\n\n### v. 0.6.0.beta.4\n\nReleased after stress testing and memory leakage testing.\n\n### v. 0.6.0.beta.3\n\n**Breaking Change**: (`websockets`) the websocket `on_close` callback signature had changed to allow it to be called on connection/upgrade failures as well (easier `udata` cleanup).\n\n**Fix** (`facil`): fixes an issue introduced in the beta.2 version, where deferred events that where scheduled before a call to `facil_run` would only be called for the parent process. Now these events would perform as intended (once in the root process and once in each worker process).\n\n**Fix** (`facil`): updates the logical assumption about open connections, to make sure any open connections are closed when re-spawning a child worker. This shift the connection assumption from unsafe (forked connections should be closed by extensions) to safe (reconnection should be handled by extension). This change should effect internal extensions only, since active connections aren't handled by the root process in clustered mode.\n\n**Change** (`websocket`): the protocol is now more forgiving in cases where clients don't mask empty messages.\n\n**Feature** (`websockets`): A simple and easy Websocket client using `websocket_connect` as well as support for more complex clients (with authentication logic etc') using a combination of the `http_connect` and `http_upgrade2ws` functions.\n\n**Minor**: some changes to the inner HTTP logic, fixed some error messages, and other minor updates.\n\n### v. 0.6.0.beta.2\n\nVersion 0.6.0 is a major release, changing much of the extension API (HTTP, pub/sub, CLI) and some of the core API (i.e., moving the `evio` polling to One-Shot polling).\n\nIn this beta 2 release:\n\n**Fix** (`facil`): fixes an issue that could occur when forking a large number of processes, where cluster connection locks would remain locked, causing the cluster connections to spin the CPU and prevent shutdown.\n\n**Fix** (`redis`, `pubsub`, `evio`): fixes for the internal Redis engine. There was a connection re-establishing error related to updates in the new `evio` event logic.\n\n**Update**: (`http`) Added experimental query parsing helpers that perform nested parameter name resolution (i.e. `named_hash[named_array][]=value`). Logic might change as performance considerations apply. I'd love to read your feedback on this feature.\n\n**Update**: (`facil`) Simplified the child worker sentinel observation logic, to use threads instead of IPC.\n\n### v. 0.6.0.beta\n\nVersion 0.6.0 is a major release, changing much of the extension API (HTTP, pub/sub, CLI) and some of the core API (i.e., moving the `evio` polling to One-Shot polling).\n\nIn this beta 1 release:\n\n**Fix** (`http`): fixed an issue where receiving the same header name more than once would fail to convert the header value into an array of values.\n\n**Minor fixes**: more error handling, more tests, fixed `fiobj_iseq` to test hash keys as well as objects. The `fio_hashmap.h` key caching for removed objects is cleared when hash is empty (i.e, if it's empty, it's really empty).\n\n**Performance** minor improvements. For example, Header Hash Maps are now cleared and reused by HTTP/1.1 during keep-alive (instead of deallocated and reallocated).\n\n### v. 0.6.0.dev\n\nThis is a major release, changing much of the extension API (HTTP, pub/sub, CLI) and some of the core API (i.e., moving the `evio` polling to One-Shot polling).\n\nMigration isn't difficult, but is not transparent either.\n\n**Fix** (backported): (`websocket_parser`) The websocket parser had a memory offset and alignment handling issue in it's unmasking (XOR) logic and the new memory alignment protection code. The issue would impact the parser in rare occasions when multiple messages where pipelined in the internal buffer and their length produced an odd alignment (the issue would occur with very fast clients, or a very stressed server).\n\n**Note About Fixes**:\n\n-  I simply rewrote much of the code to know if the issues I fixed were present in the 0.5.x version or not.\n\n   I believe some things work better. Some of the locking concerns will have less contention and I think I fixed some issues in the `fiobj` core types as well as the `http` extension.\n\n   However, experience tells me a new major release (0.6.0) is always more fragile than a patch release. I did my best to test the new code, but experience tells me my tests are often as buggy as the code they test.\n\n   Anyway, I'm releasing 0.6.0 knowing it works better than the 0.5.8 version, but also knowing it wasn't battle tested just yet.\n\n**Changes!**: (`fiobj` / facil.io objects):\n\n- Major API changes.\n\n    The facil.io dynamic type library moved closer to facil.io's core, integrating itself into the HTTP request/response handling, the Pub/Sub engine, the Websocket internal buffer and practically every aspect of the library.\n\n    This required some simplification of the `fiobj` and making sure future changes would require less of a migration process.\n\n- The Symbol and Couplet types were removed, along with nesting protection support (which nobody seemed to use anyway).\n\n- We're back to static typing with `enum`, using macros and inline functions for type identification (better performance at the expense of making extendability somewhat harder).\n\n- Hashes are now 100% collision resistant and have improved memory locality, at the expense of using more memory and performing calling `memcmp` (this can be avoided when seeking / removing / deleting items, but not when overwriting items).\n\n**Changes!**: (`http`):\n\n- The HTTP API and engine was completely re-written (except the HTTP/1.1 parser), both to support future client mode (including chunked encoding for trailing headers) and to make routing and request parsing easier.\n\n- The updates to the HTTP API might result in decreased performance during the HTTP request reading due to the need to allocate resources and possibly copy some of the data into dynamic storage... For example, header Hash Tables replaced header Arrays, improving lookup times and increasing creation time. \n\n- The HTTP parser now breaks down long URI schemes into a short URI + `host` header (which might become an array if it's included anyway).\n\n**Changes!**: (`websocket`):\n\n- The Websocket API includes numerous breaking changes, not least is the pub/sub API rewrite that now leverages `FIOBJ` Strings / Symbols.\n\n- `websocket_write_each` was deprecated (favoring a pub/sub only design).\n\n**Changes!**: (`pubsub`):\n\n- The `pubsub` API was redesigned after re-evaluating the function of a pub/sub engine and in order to take advantage of the `FIOBJ` type system.\n\n- Channel names now use a hash map with collision protection (using `memcmp` to compare channel names). The means that the 4 but trie is no longer in use and will be deprecated.\n\n**Changes!**: (`redis`):\n\n- The `redis_engine` was rewritten, along with the RESP parser, to reflect the changes in the new `pubsub` service and to remove obsolete code.\n\n**Changes!**: (`facil`):\n\n- Slight API changes:\n\n    - `facil_last_tick` now returns `struct timespec` instead of `time_t`, allowing for more accurate time stamping.\n\n    - `facil_cluster_send` and `facil_cluster_set_handler` were redesigned to reflect the new cluster engine (now using Unix Sockets instead of pipes).\n\n- Internal updates to accommodate changes to other libraries.\n\n- Cluster mode now behaves as sentinel, re-spawning any crashed worker processes (except in DEBUG mode).\n\n**Changes!**: (`evio`):\n\n- the evented IO library was redesigned for **one-shot** notifications, requiring a call to `evio_add` or `evio_set_timer` in order to receive future notifications.\n\n\n    This was a significant change in behavior and the changes to the API (causing backwards incompatibility) were intentional.\n\n- the code was refactored to separate system specific logic into different files. making it easier to support more systems in the future.\n\n**Changes!**: (`sock`):\n\n- the socket library now supports automatic Unix detection (set `port` to NULL and provide a valid Unix socket path in the `address` field).\n\n- the socket library's Read/Write hooks API was revised, separating the function pointers from the user data. At server loads over 25%, this decreases the memory footprint.\n\n- the socket library's packet buffer API was deprecated and all `sock_write2(...)` operations take ownership of the memory/file (enforce `move`).\n\n- The internal engine was updated, removing pre-allocated packet buffers altogether and enabling packet header allocation using `malloc`, which introduces a significant changes to the internal behavior, possibly effecting embedded systems.\n\n**Changes!**: (`defer`):\n\n- Removed forking from the defer library, moving the `fork` logic into the main `facil` source code.\n\n- Defer thread pools and now include two weak functions that allow for customized thread scheduling (wakeup/wait). These are overwritten by facil.io (in `facil.c`).\n\n    By default, defer will use `nanosleep`.\n\n**Refactoring**: (`fiobj`) moved the underlying Dynamic Array and Hash Table logic into single file libraries that support `void *` pointers, allowing the same logic to be used for any C object collection (as well as the facil.io objects).\n\n---\n\n### Ver. 0.5.10 (backported)\n\n**Fix** (backported): (`facil` / `pubsub`) fixed an issue where cluster messages would be corrupted when passed in high succession. Credit to Dmitry Davydov (@haukot) for exposing this issue through the Iodine server implementation (the Ruby port).\n\nIt should be noted that this doesn't fix the core weakness related to large cluster or pub/sub messages, which is caused by a design weakness in the `pipe` implementation (in some kernels).\n\nThe only solution for large message corruption is to use the new pub/sub engine introduced in the facil.io 0.6.x release branch, which utilizes Unix Sockets instead of pipes.\n\n### Ver. 0.5.9 (backported)\n\n**Fix** (backported from 0.6.0): (`websocket_parser`) The websocket parser had a memory offset and alignment handling issue in it's unmasking (XOR) logic and the new memory alignment protection code. The issue would impact the parser in rare occasions when multiple messages where pipelined in the internal buffer and their length produced an odd alignment (the issue would occur with very fast clients, or a very stressed server).\n\n### Ver. 0.5.8\n\n**Fix**: (`defer`, `fiobj`) fix Linux compatibility concerns (when using GCC). Credit goes to @kotocom for opening issue #23.\n\n### Ver. 0.5.7\n\n**Fix**: (`defer`) fixes the non-debug version of the new (v.0.5.6) defer, which didn't define some debug macros.\n\n**Updates**: minor updates to the boilerplate documentation and the \"new application\" creation process.\n\n### Ver. 0.5.6 (yanked)\n\n**Fix**: Added `cmake_minimum_required` and related CMake fixes to the CMake file and generator. Credit to David MorÃ¡n (@david-moran) for [PR #22](https://github.com/boazsegev/facil.io/pull/22) fixing the CMakelist.txt.\n\n**Compatibility**: (`websocket_parser`) removed unaligned memory access from the XOR logic in the parser, making it more compatible with older CPU systems that don't support unaligned memory access or 64 bit word lengths.\n\n**Optimization**: (`defer`) rewrote the data structure to use a hybrid cyclic buffer and linked list for the task queue (instead of a simple linked list), optimizing locality and minimizing memory allocations.\n\n**Misc**: minor updates and tweaks, such as adding the `fiobj_ary2prt` function for operations such as quick sort, updating some documentation etc'.\n\n### Ver. 0.5.5\n\n**Fix**: (`fiobj`) fixed an issue #21, where `gcc` would complain about overwriting the `fio_cstr_s` struct due to `const` members. Credit to @vit1251 for exposing this issue.\n\n**Fix**: (`fiobj`) fixed NULL pointer testing for `fiobj_free(NULL)`.\n\n**Compatibility**: (`gcc-6`) Fix some compatibility concerns with `gcc` version 6, as well as some warnings that were exposed when testing with `gcc`.\n\n**Optimization**: (`fiobj`) optimized the JSON parsing memory allocations as well as fixed some of the function declarations to add the `const` keyword where relevant.\n\n### Ver. 0.5.4\n\nI've been making so many changes, it took me a while.\n\nThis version includes all the updates in the unreleased version 0.5.3 as well as some extra work.\n\nThe new HTTP/1.1 and Websocket parsers have been debugged and tested in the Iodine Ruby server, the dynamic type system (`fiobj_s`) will be updated to revision 2 in this release...\n\n**Change/Update**: (`fiobj`) The dynamic type library was redesigned to make it extendable. This means that code that used type testing using a `switch` statement needs to be rewritten.\n\n**Fix**: (`websocket`) issues with the new websocket parser were fixed. Credit to Tom Lahti (@uidzip) for exposing the issues.\n\n### Ver. 0.5.3 (unreleased, included in 0.5.4)\n\n**Change**: minor changes to the versioning scheme removed some version MACROS... this isn't API related, so I don't consider it a breaking change, but it might effect code that relied too much on internal workings. The only valid version macros are the `FACIL_VERSION_*` macros, in the `facil.h` header.\n\n**Change**: (`http`) the HTTP/1.x parser was re-written and replaced. It should perform the same, while being easier to maintain. Also, the new parser could potentially be used to author an HTTP client.\n\n**Change**: (`websocket`) the Websocket parser was re-written and replaced, decoupling the parser and message wrapper from the IO layer. Performance might slightly improve, but should mostly remain the same. The new code is easier to maintain and easier to port to other implementations. Also, the new parser supports a client mode (message masking).\n\n**Fix**: (`websocket`) fix #16, where a client's first message could have been lost due to long `on_open` processing times. This was fixed by fragmenting the `upgrade` event into two events, adding the `facil_attach_locked` feature and attaching the new protocol before sending the response. Credit to @madsheep and @nilclass for exposing the issue and tracking it down to the `on_open` callbacks.\n\n**Fix**: (`sock`) sockets created using the TCP/IP `sock` library now use `TCP_NODELAY` as the new default. This shouldn't be considered a breaking change as much as it should be considered a fix.\n\n**Fix**: (`http1`) HTTP/1.x is now more fragmented, avoiding a `read` loop to allow for mid-stream / mid-processing protocol upgrades. This also fixes #16 at it's root (besides the improved `websocket` callback handling).\n\n**Fix**: (`http1`) HTTP/1.x now correctly initializes the `udata` pointer to NULL fore each new request.\n\n**Fix**: (`facil`) the `facil_run_every` function now correctly calls the `on_finish` callback when a timer initialization fails. This fixes a leak that could have occurred due to inconsistent API expectations. Workarounds written due to this issue should be removed.\n\n**Fix**: (`facil`) connection timeout is now correctly ignored for timers.\n\n**Fix**: (`defer`) a shutdown issue in `defer_perform_in_fork` was detected by @cdkrot and his fix was implemented.\n\n**Fix**: (`evio`) fixed an issue where the evented IO library failed to reset the state indicator after `evio_close` was called, causing some functions to believe that events are still processed. Now the `evio_isactive` will correctly indicate that the evented IO is inactive after `evio_close` was called.\n\n**Fix**: (`evio`) fixes an issue where `evio_add_timer` would fail with `EEXIST` instead of reporting success (this might be related to timer consolidation concerns in the Linux kernel).\n\n**Fix**: (`evio`) better timer `fd` creation compatibility with different Linux kernels.\n\n**Fix**: (documentation) credit to @cdkrot for reporting an outdated demo in the README.\n\n**Fix**: (linking) added the missing `-lm` linker flag for `gcc`/Linux (I was using `clang`, which automatically links to the math library, so I didn't notice this).\n\n**Portability**: added `extern \"C\"` directive for untested C++ support.\n\n**Feature**: ð added a CLI helper service, allowing easy parsing and publishing of possible command line arguments.\n\n**Feature**: ðð added a dynamic type library to `facil.io`'s core, making some common web related tasks easier to manage.\n\n**Feature**: ððð added native JSON support. JSON strings can be converted to `fiobj_s *` objects and `fiobj_s *` objects can be rendered as JSON! I'm hoping to get it [benchmarked publicly](https://github.com/miloyip/nativejson-benchmark/pull/92).\n\n### Ver. 0.5.2\n\n**Change**: non-breaking changes to the folder structure are also reflected in the updated `makefile` and `.clang_complete`.\n\n**Fix**: (`defer`) fixed `SIGTERM` handling (signal was mistakingly filtered away).\n\n**Fix**: (`http_response`) fixed `http_response_sendfile2` where path concatenation occurred without a folder separator (`/`) and exclusively safe file paths were being ignored (the function assumed an unsafe path to be used, at least in part).\n\n**Fix**: minor fixes and documentation.\n\n**Fix / Feature**: (`facil`) sibling processes will now detect a sibling's death (caused by a crashed process) and shutdown.\n\n**Feature**: @benjcal suggested the script used to create new applications. The current version is a stand-in draft used for testing.\n\n**Feature**: temporary boiler plate code for a simple \"hello world\" HTTP application using the new application script (see the README). This is a temporary design to allow us to test the script's functionality and decide on the final boiler plate's design.\n\n### Ver. 0.5.1\n\n**Fix**: (`sock`) Fixed an issue where `sock_flush` would always invoke `sock_touch`, even if no data was actually sent on the wire.\n\n**Fix**: (`sock`) fixed a possible issue with `sock_flush_strong` which might have caused the facil.io to hang.\n\n**Fix**: (`Websocket`) fixed an issue with fragmented pipelined Websocket messages.\n\n**Feature**: (`facil`) easily force an IO event, even if it did not occur, using `facil_force_event`.\n\n### Ver. 0.5.0\n\n**Braking changes**: (`pubsub`) The API was changed / updated, making `pubsub_engine_s` objects easier to author and allowing allocations to be avoided by utilizing two `void * udata` fields... Since this is a breaking change, and following semantic versioning, the minor version is updated. I do wish I could have delayed the version bump, as the roadmap ahead is long, but it is what it is.\n\n**Braking changes**: (`facil`) Since the API is already changing a bit, I thought I'd clean it up a bit and have all the `on_X` flow events (`on_close`, `on_fail`, `on_start`...) share the same function signature where possible.\n\n**Changes**: (`facil`) Minor changes to the `fio_cluster_*` API now use signed message types. All negative `msg_type` values are reserved for internal use.\n\n**Fix**: plugging memory leaks while testing the system under very high stress.\n\n**Fix**: (`pubsub`, `fio_dict`) Fixed glob pattern matching... I hope. It seems to work fine, but I'm not sure it the algorithm matches the Redis implementation which is the de-facto standard for channel pattern matching.\n\n**Security**: (`http`) the HTTP parser now breaks pipelined HTTP requests into fragmented events, preventing an attacker from monopolizing requests through endless pipelining of requests that have a long processing time.\n\n**Fix**: (`http`) `http_listen` will now always *copy* the string for the `public_folder`, allowing dynamic strings to be safely used.\n\n**Fix**: (`http`) default error files weren't located due to missing `/` in name. Fixed by adjusting the requirement for the `/` to be more adaptive.\n\n**Fix**: (`http`) dates were off by 1 day. Now fixed.\n\n**Fix**: (`http1`) a minor issue in the `on_data` callback could have caused the parser to crash in rare cases of fragmented pipelined requests on slower connections. This is now fixed.\n\n**Fix**?: (`http`) When decoding the path or a request, the `+` sign is now left unencoded (correct behavior), trusting in better clients in this great jungle.\n\n**Fix**: (`facil`) `facil_defer` would leak memory if a connection was disconnected while a task was scheduled.\n\n**Fix**: (`facil`) `facil_connect` now correctly calls the `on_fail` callback even on immediate failures (i.e. when the function call was missing a target address and port).\n\n**Fix**: (`facil`) `facil_connect` can now be called before other socket events (protected form library initialization conflicts).\n\n**Fix**: (`facil`) `facil_listen` will now always *copy* the string for the `port`, allowing dynamic strings to be safely used when `FACIL_PRINT_STATE` is set.\n\n**Fix**: (`facil`) `facil_last_tick` would crash if called before the library was initialized during socket operations (`facil_listen`, `facil_attach`, etc')...  now `facil_last_tick` falls back to `time()` if nothing happened yet.\n\n**Fix**: (`facil`) `.on_idle` now correctly checks for non networks events as well before the callback is called.\n\n**Fix**: (`defer`) A large enough (or fast enough) thread pool in a forked process would complete the existing tasks before the active flag was set, causing the facil.io reactor to be stranded in an unscheduled mode, as if expecting to exit. This is now fixed by setting a temporary flag pointer for the forked children, preventing a premature task cleanup.\n\n**Changes**: Major folder structure updates make development and support for CMake submodules easier. These changes should also make it easier to push PRs for by offering the `dev` folder for any localized testing prior to submitting the PR.\n\n**Feature**: (`websockets`) The websocket pub/sub support is here - supporting protocol tasks as well as direct client publishsing (and autu text/binary detection)! There are limits and high memory costs related to channel names, since `pubsub` uses a trie for absolute channel matching (i.e. channel name length should be short, definitely less than 1024Bytes).\n\n**Feature**: (`redis`) The websocket pub/sub support features a shiny new Redis engine to synchronize pub/sub across machines! ... I tested it as much as I could, but I know my tests are as buggy as my code, so please test before using.\n\n**Feature**: (`facil_listen`, `http_listen`) supports an optional `on_finish_rw` callback to clean-up the `rw_udata` object.\n\n**Feature**: (`pubsub`) channels now use the available `fio_dict_s` (trie) data store. The potential price of the larger data-structure is elevated by it's absolute protection against hash collisions. Also, I hope that since channels are more often searched than created, this should improve performance when searching for channels by both pattern and perfect match. I hope this combination of hash tables (for client lookup) and tries (for channel traversal) will provide the best balance between string matching, pattern matching, iterations and subscription management.\n\n**Feature**: (`http`) `http_listen` now supports an `on_finish` callback.\n\n**Feature**: (`http1`) HTTP/1.1 will, in some cases, search for available error files (i.e. \"400.html\") in the `public_folder` root, allowing for custom error messages.\n\n**Feature**: CMake inclusion. Credit to @OwenDelahoy (PR#8).\n\n> To use facil.io in a CMake build you may add it as a submodule to the project's repository.\n>\n>       git submodule add https://github.com/boazsegev/facil.io.git\n\n> Then add the following line the project's `CMakeLists.txt`\n>\n>       add_subdirectory(facil.io)\n\n**Optimize**: (`fio_hash_table`) optimize `fio_ht_s` bin memory allocations.\n\n### Ver. 0.4.4\n\n**Fix**: (`pubsub`) Fixed collisions between equal channel names on different engines, so that channels are only considered equal if they share the same name as well as the same engine (rather than only the same name)... actually, if they share the same channel name SipHash value XOR'd with the engine's memory location.\n\n**Fix**: (`facil`) Fixed compiling error on older `gcc` v.4.8.4, discovered on Ubuntu trusty/64.\n\n**Fix**: Fix enhanced CPU cycles introduced in the v.0.4.3 update. Now CPU cycles are lower and thread throttling handles empty queues more effectively.\n\n**Performance**: (`pubsub`) now uses a hash-table storage for the channels, clients and patterns, making the duplicate review in `pubsub_subscribe` much faster, as well as improving large channel collection performance (nothing I can do about pattern pub/sub, though, as they still need to be matched using iterations, channel by channel and for every channel match).\n\n**Feature**: (`http`) The `http_response_sendfile2` function will now test for a `gzip` encoded alternative when the client indicated support for the encoding. To provide a `gzip` alternative file, simply `gzip` the original file and place the `.gz` file in the original file's location.\n\n**Folder Structure**: Updated the folder structure to reflect source code relation to the library. `core` being required files, `http` relating to `http` etc'.\n\n### Ver. 0.4.3\n\n**Fix**: Some killer error handling should now signal all the process group to exit.\n\n**Fix**: (`sock`, `websocket`) `sock_buffer_send` wouldn't automatically schedule a socket buffer flush. This caused some websocket messages to stay in the unsent buffer until a new event would push them along. Now flushing is scheduled and messages are send immediately, regardless of size.\n\n**Fix**: (`facil`) `facil_attach` now correctly calls the `on_close` callback in case of error.\n\n**Fix**: (`facil`) `facil_protocol_try_lock` would return false errors, preventing external access to the internal protocol data... this is now fixed.\n\n**Feature**: (`facil`) Experimental cluster mode messaging, allowing messages to be sent to all the cluster workers. A classic use-case would be a localized pub/sub websocket service that doesn't require a backend database for syncing a single machine... Oh wait, we've added that one too...\n\n**Feature**: (`facil`) Experimental cluster wide pub/sub API with expendable engine support (i.e., I plan to add Redis as a possible engine for websocket pub/sub).\n\n**Update**: (`http`) Updated the `http_listen` to accept the new `sock_rw_hook_set` and `rw_udata` options.\n\n**Update**: (`sock`) Rewrote some of the error handling code. Will it change anything? only if there were issues I didn't know about. It mostly effects errno value availability, I think.\n\n### Ver. 0.4.2\n\n**Fix**: (`sock`) Fixed an issue with the `sendfile` implementation on macOS and BSD, where medium to large files wouldn't be sent correctly.\n\n**Fix**: (`sock`) Fixed the `sock_rw_hook_set` implementation (would lock the wrong `fd`).\n\n**Design**: (`facil`) Separated the Read/Write hooks from the protocol's `on_open` callback by adding a `set_rw_hook` callback, allowing the same protocol to be used either with or without Read/Write hooks (i.e., both HTTP and HTTPS can share the same `on_open` function).\n\n**Fix**: (`evio`, `facil`) Closes the `evio` once facil.io finished running, presumably allowing facil.io to be reinitialized and run again.\n\n**Fix**: (`defer`) return an error if `defer_perform_in_fork` is called from within a running defer-forked process.\n\n**Fix**: (`sock`, `facil`, bscrypt) Add missing `static` keywords.\n\n**Compatibility**: (bscrypt) Add an alternative `HAS_UNIX_FEATURES` test that fits older \\*nix compilers.\n\n---\n\n### Ver. 0.4.1\n\n**Fix**: (HTTP/1.1) fixed the default response `date` (should have been \"now\", but was initialized to 0 instead).\n\n**Fix**: fixed thread throttling for better energy conservation.\n\n**Fix**: fixed stream response logging.\n\n**Compatibility**: (HTTP/1.1) Automatic `should_close` now checks for HTTP/1.0 clients to determine connection persistence.\n\n**Compatibility**: (HTTP/1.1) Added spaces after header names, since some parsers don't seem to read the RFC.\n\n**Fix/Compatibility**: compiling under Linux had been improved.\n\n---\n\n### Ver. 0.4.0\n\nUpdated core and design. New API. Minor possible fixes for HTTP pipelining and parsing.\n\n# Historic Change log\n\nThe following is a historic change log, from before the `facil_` API.\n\n---\n\nNote: This change log is incomplete. I started it quite late, as interest in the libraries started to warrant better documentation of any changes made.\n\nAlthough the libraries in this repo are designed to work together, they are also designed to work separately. Hence, the change logs for each library are managed separately. Here are the different libraries and changes:\n\n* [Lib-React (`libreact`)](#lib-react) - The Reactor library.\n\n* [Lib-Sock (`libsock`)](#lib-sock) - The socket helper library (development incomplete).\n\n* [Lib-Async (`libasync`)](#lib-async) - The thread pool and tasking library.\n\n* [Lib-Server (`libserver`)](#lib-server) - The server writing library.\n\n* [MiniCrypt (`minicrypt`)](#minicrypt) - Common simple crypto library (development incomplete).\n\n* [HTTP Protocol (`http`)](#http_protocol) - including request and response helpers, etc'.\n\n* [Websocket extension (`websockets`)](#websocket_extension) - Websocket Protocol for the basic HTTP implementation provided.\n\n## General notes and _future_ plans\n\nChanges I plan to make in future versions:\n\n* Implement a `Server.connect` for client connections and a Websocket client implementation.\n\n* Implement Websocket writing using `libsock` packets instead of `malloc`.\n\n* Remove / fix server task container pooling (`FDTask` and `GroupTask` pools).\n\n## A note about version numbers\n\nI attempt to follow semantic versioning, except that the libraries are still under pre-release development, so version numbers get updated only when a significant change occurs or API breaks.\n\nLibraries with versions less then 0.1.0 have missing features (i.e. `mini-crypt` is missing almost everything except what little published functions it offers).\n\nMinor bug fixes, implementation optimizations etc' might not prompt a change in version numbers (not even the really minor ones).\n\nAPI breaking changes always cause version bumps (could be a tiny version bump for tiny API changes).\n\nGit commits aren't automatically tested yet and they might introduce new issues or break existing code (I use Git also for backup purposes)...\n\n... In other words, since these libraries are still in early development, test before adopting any updates.\n\n## Lib-React\n\n### V. 0.3.0\n\n* Rewrite from core. The code is (I think) better organized.\n\n*  Different API.\n\n* The reactor is now stateless instead of an object. All state data (except the reactor's ID, which remains static throughout during it's existence), is managed by the OS implementation (`kqueue`/`epoll`).\n\n* Callbacks are statically linked instead of dynamically assigned.\n\n* Better integration with `libsock`.\n\n* (optional) Handles `libsock`'s UUID instead of direct file descriptors, preventing file descriptor collisions.\n\n### V. 0.2.2\n\n* Fixed support for `libsock`, where the `sock_flush` wasn't automatically called due to inline function optimizations used by the compiler (and my errant code).\n\n### V. 0.2.1\n\nBaseline (changes not logged before this point in time).\n\n## Lib-Sock\n\n### V. 0.2.3 (next version number)\n\n* Apple's `getrlimit` is broken, causing server capacity limits to be less than they could / should be.\n\n### V. 0.2.2\n\n* Fixed an issue introduced in `libsock` 0.2.1, where `sock_close` wouldn't close the socket even when all the data was sent.\n\n### V. 0.2.1\n\n* Larger user level buffer - increased from ~4Mb to ~16Mb.\n\n* The system call to `write` will be deferred (asynchronous) when using `libasync`. This can be changed by updating the `SOCK_DELAY_WRITE` value in the `libsock.c` file.\n\n    This will not prevent `sock_write` from emulating a blocking state while the user level buffer is full.\n\n### V. 0.2.0\n\n* Almost the same API. Notice the following: no initialization required; rw_hooks callbacks aren't protected by a lock (use your own thread protection code).\n\n   There was an unknown issue with version 0.1.0 that caused large data sending to hang... tracking it proved harder then re-writing the whole logic, which was both easier and allowed for simplifying some of the code for better maintenance.\n\n* `sock_checkout_packet` will now hang until a packet becomes available. Don't check out more then a single packet at a time and don't hold on to checked out packets, or you might find your threads waiting.\n\n### V. 0.1.0\n\n* Huge rewrite. Different API.\n\n* Uses connection UUIDs instead of direct file descriptors, preventing file descriptor collisions. Note that the UUIDs aren't random and cannot be used to identify the connections across machines or processes.\n\n* No global lock, spin-lock oriented design.\n\n* Better (optional) integration with `libreact`.\n\n### V. 0.0.6\n\n* `libsock` experienced minor API changes, specifically to the `init_socklib` function (which now accepts 0 arguments).\n\n* The `rw_hooks` now support a `flush` callback for hooks that keep an internal buffer. Implementing the `flush` callback will allow these callbacks to prevent a pre-mature closure of the socket stream and ensure that all the data will be sent.\n\n### V. 0.0.5\n\n* Added the client implementation (`sock_connect`).\n\n* Rewrote the whole library to allow for a fixed user-land buffer limit. This means that instead of having buffer packets automatically allocated when more memory is required, the `sock_write(2)` function will hang and flush any pending socket buffers until packets become available.\n\n* File sending is now offset based, so `fseek` data is ignored. This means that it would be possible to cache open `fd` files and send the same file descriptor to multiple clients.\n\n### V. 0.0.4\n\n* Fixed issues with non-system `sendfile` and with underused packet pool memory.\n\n* Added the `.metadata.keep_open` flag, to allow file caching... however, keep in mind that the file offset for read/write is the file's `lseek` position and sending the same file to different sockets will create race conditions related to the file `lseek` position.\n\n* Fix for epoll's on_ready not being sent (sock flush must raise the EAGAIN error, or the on_ready event will not get called). Kqueue is better since the `on_ready` refers to the buffer being clear instead of available (less events to copy the same amount of data, as each data write is optimal when enough data is available to be written).\n\n* optional implementation of sendfile for Apple, BSD and Linux (BSD **not** tested).\n\n* Misc. optimizations. i.e. Buffer packet size now increased to 64Kb, to fit Linux buffer allocation.\n\n* File sending now supports file descriptors.\n\n* TLC support replaced with a simplified read/write hook.\n\n* Changed `struct SockWriteOpt` to a typedef `sock_write_info_s`.\n\n### V. 0.0.3\n\n* Changed `struct Packet` to a typedef `sock_packet_s`.\n\n* fixed and issue where using `sock_write(2)` for big data chunks would cause errors when copying the data to the user buffer.\n\n    it should be noted, for performance reasons, that it is better to send big data using external pointers (especially if the data is cashed) using the `sock_send_packet` function - for cached data, do not set the `packet->external` flag, so the data isn't freed after it was sent.\n\n### V. 0.0.2\n\n* fixed situations in which the `send_packet` might not close a file (if the packet buffer references a `FILE`) before returning an error.\n\n* The use of `sock_free_packet` is now required for any unused Packet object pointers checked out using `sock_checkout_packet`.\n\n    This requirement allows the pool management to minimize memory fragmentation for long running processes.\n\n* `libsock` memory requirements are now higher, as the user land buffer's Packet memory pool is pre-allocated to minimize memory fragmentation.\n\n* Corrected documentation mistakes, such as the one stating that the `sock_send_packet` function will not handle the Packet object's memory on error (it does handle the memory, **always**).\n\n### V. 0.0.1\n\nBaseline (changes not logged before this point in time).\n\n## Lib-Async\n\n### V. 0.4.0\n\n* I rewrote (almost) everything.\n\n* `libasync` now behaves as a global state machine. No more `async_p` objects.\n\n* Uses (by default) `nanosleep` instead of pipes (you can revert back to pipes by setting a simple flag). This, so far, seems to provide better performance (at the expense of a slightly increased CPU load).\n\n### V. 0.3.0\n\n* Fixed task pool initialization to zero-out data that might cause segmentation faults.\n\n* `libasync`'s task pool optimizations and limits were added to minimize memory fragmentation issues for long running processes.\n\nBaseline (changes not logged before this point in time).\n\n## Lib-Server\n\n### V. 0.4.2 (next version number)\n\n* Limited the number of threads (1023) and processes (127) that can be invoked without changing the library's code.\n\n* Minor performance oriented changes.\n\n* Fixed an issue where Websocket upgrade would allow code execution in parallel with `on_open` (protocol locking was fixed while switching the protocol).\n\n* Added `server_each_unsafe` to iterate over all client connections to perform a task. The `unsafe` part in the name is very important - for example, memory could be deallocated during execution.\n\n### V. 0.4.1\n\n* Minor performance oriented changes.\n\n* Shutdown process should now allow single threaded asynchronous (evented) task scheduling.\n\n* Updating a socket's timeout settings automatically \"touches\" the socket (resets the timeout count).\n\n### V. 0.4.0\n\n* Rewrite from core. The code is more concise with less duplications.\n\n* Different API.\n\n* The server is now a global state machine instead of an object.\n\n* Better integration with `libsock`.\n\n* Handles `libsock`'s UUID instead of direct file descriptors, preventing file descriptor collisions and preventing long running tasks from writing to the wrong client (i.e., if file descriptor 6 got disconnected and someone else connected and receive file descriptor 6 to identify the socket).\n\n* Better concurrency protection and protocol cleanup `on_close`. Now, deferred tasks (`server_task` / `server_each`), the `on_data` callback and even the `on_close` callback all run within a connection's \"lock\" (busy flag), limiting concurrency for a single connection to the `on_ready` and `ping` callbacks. No it is safe to free the protocol's memory during an `on_close` callback, as it is (almost) guarantied that no running tasks are using that memory (this assumes that `ping` and `on_ready` don't use any data placed protocol's memory).\n\n### V. 0.3.5\n\n* Moved the global server lock (the one protecting global server data integrity) from a mutex to a spin-lock. Considering API design changes that might allow avoiding a lock.\n\n* File sending is now offset based, so `lseek` data is ignored. This means that it should be possible to cache open `fd` files and send the same file descriptor to multiple clients.\n\n### V. 0.3.4\n\n* Updated `sendfile` to only accept file descriptors (not `FILE *`). This is an optimization requirement.\n\n### V. 0.3.3\n\n* fixed situations in which the `sendfile` might not close the file before returning an error.\n\n* There was a chance that the `on_data` callback might return after the connection was disconnected and a new connection was established for the same `fd`. This could have caused the `busy` flag to be cleared even if the new connection was actually busy. This potential issue had been fixed by checking the connection against the UUID counter before clearing the `busy` flag.\n\n* reminder: The `Server.rw_hooks` feature is deprecated. Use `libsock`'s TLC (Transport Layer Callbacks) features instead.\n\n### V. 0.3.2\n\nBaseline (changes not logged before this point in time).\n\n## MiniCrypt (development incomplete)\n\n### V. 0.1.1\n\n* added a \"dirty\" (and somewhat faster then libc) `gmtime` implementation that ignores localization.\n\nBaseline (changes not logged before this point in time).\n\n## HTTP Protocol\n\n* Sep. 13, 2016: `ETag` support for the static file server, responding with 304 on valid `If-None-Match`.\n\n* Sep. 13, 2016: Updated `HEAD` request handling for static files.\n\n* Fixed pipelining... I think.\n\n* Jun 26, 2016: Fixed logging for static file range requests.\n\n* Jun 26, 2016: Moved URL decoding logic to the `HttpRequest` object.\n\n* Jun 20, 2016: Added basic logging support.\n\n* Jun 20, 2016: Added automatic `Content-Length` header constraints when setting status code to 1xx, 204 or 304.\n\n* Jun 20, 2016: Nicer messages on startup.\n\n* Jun 20, 2016: Updated for new `lib-server` and `libsock`.\n\n* Jun 16, 2016: HttpResponse date handling now utilizes a faster (and dirtier) solution then the standard libc `gmtime_r` and `strftime` solutions.\n\n* Jun 12, 2016: HTTP protocol and HttpResponse `sendfile` and `HttpResponse.sendfile` fixes and optimizations. Now file sending uses file descriptors instead of `FILE *`, avoiding the memory allocations related to `FILE *` data.\n\n* Jun 12, 2016: HttpResponse copy optimizes the first header buffer packet to copy as much of the body as possible into the buffer packet, right after the headers.\n\n* Jun 12, 2016: Optimized mime type search for static file service.\n\n* Jun 9, 2016: Rewrote the HttpResponse implementation to leverage `libsock`'s direct user-land buffer packet injection, minimizing user land data-copying.\n\n* Jun 9, 2016: rewrote the HTTP `sendfile` handling for public folder settings.\n\n* Jun 9, 2016: Fixed an issue related to the new pooling scheme, where old data would persist in some pooled request objects.\n\n* Jun 8, 2016: The HttpRequest object is now being pooled within the request library (not the HTTP protocol implementation) using Atomics (less mutex locking) and minimizing memory fragmentation by pre-initializing the buffer on first request (preventing memory allocated after the first request from getting \"stuck behind\" any of the pool members).\n\nJun 7, 2016: Baseline (changes not logged before this point in time).\n\n## Websocket extension\n\n* Resolved issue #6, Credit to @Filly for exposing the issue.\n\n* Memory pool removed. Might be reinstated after patching it up, but when more tests were added, the memory pool failed them.\n\n* Jan 12, 2017: Memory Performance.\n\n     The Websocket connection Protocol now utilizes both a C level memory pool and a local thread storage for temporary data. This helps mitigate possible memory fragmentation issues related to long running processes and long-lived objects.\n\n     In addition, the socket `read` buffer was moved from the protocol object to a local thread storage (assumes pthreads and not green threads). This minimizes the memory footprint for each connection (at the expense of memory locality) and should allow Iodine to support more concurrent connections using less system resources.\n\n     Last, but not least, the default message buffer per connection starts at 4Kb instead of 16Kb (grows as needed, up to `Iodine::Rack.max_msg_size`), assuming smaller messages are the norm.\n\n### Date 20160607\n\nBaseline (changes not logged before this point in time).\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 0.9921875,
          "content": "project(facil.io C)\ncmake_minimum_required(VERSION 2.4)\n\nfind_package(Threads REQUIRED)\n\nset(facil.io_SOURCES\n  lib/facil/fio.c\n  lib/facil/tls/fio_tls_missing.c\n  lib/facil/tls/fio_tls_openssl.c\n  lib/facil/fiobj/fio_siphash.c\n  lib/facil/fiobj/fiobj_ary.c\n  lib/facil/fiobj/fiobj_data.c\n  lib/facil/fiobj/fiobj_hash.c\n  lib/facil/fiobj/fiobj_json.c\n  lib/facil/fiobj/fiobj_mustache.c\n  lib/facil/fiobj/fiobj_numbers.c\n  lib/facil/fiobj/fiobj_str.c\n  lib/facil/fiobj/fiobject.c\n  lib/facil/cli/fio_cli.c\n  lib/facil/http/http.c\n  lib/facil/http/http1.c\n  lib/facil/http/http_internal.c\n  lib/facil/http/websockets.c\n  lib/facil/redis/redis_engine.c\n)\n\nadd_library(facil.io ${facil.io_SOURCES})\ntarget_link_libraries(facil.io\n  PRIVATE Threads::Threads\n  PUBLIC pthread\n  PUBLIC m\n  )\ntarget_include_directories(facil.io\n  PUBLIC  lib\n  PUBLIC  lib/facil\n  PUBLIC  lib/facil/tls\n  PUBLIC  lib/facil/fiobj\n  PUBLIC  lib/facil/cli\n  PUBLIC  lib/facil/http\n  PUBLIC  lib/facil/http/parsers\n  PUBLIC  lib/facil/redis\n)\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.962890625,
          "content": "# How to Contribute\n\nThank you for inquiring `facil.io`'s contribution guide. It's people like you and me, that are willing to share our efforts, who help make the world of open source development so inspiring and wonderful.\n\n## Guidelines \n\n### General Guidelines\n\n\"Facil\" comes from the Spanish word \"easy\", and this is embedded in `facil.io`'s DNA.\n\n`facil.io` contributions should (ideally) be:\n\n* **Easy to use**:\n\n    clear and concise API, with macros that emulate \"named arguments\" when appropriate.\n\n* **Easy to maintain**:\n\n    * *Modular*: even at the price of performance and even (although less desired) at the price of keeping things DRY.\n\n        Developers should be able to simply remove the module from their implementation if they're not using it.\n\n        To clarify, a module should have as small a responsibility as possible without requiring non-core modules. This makes the module easier to maintain and minimizes code fragility and code entanglement.\n\n    * *Succinctly Commented*: Too much commenting is noise (we can read code), but too little and a future maintainer might not understand why the code was written in the first place.\n\n* **Easy to port**:\n\n    When possible, code should be portable. This is both true in regards to CPU architecture and in regards to OS and environment.\n\n    The project currently has the following limitation that might be addressed in the future:\n\n    * The code requires `kqueue` or `epoll` services from the OS, which means Linux / BSD / macOS.\n\n    * The code assumes a Unix environment (file naming etc').\n\n    * Some of the code (namely some HTTP parts) uses unaligned memory access (requiring newer CPUs and possibly introducing undefined behavior).\n\n* **Easy to compile**:\n\n    The code uses GNU `make` and although we have CMake support, neither CMake nor `configure` should be required at any point.\n\n* **Easy to manage**:\n\n    See the License section below. Contributions must relinquish ownership of contributed code, so licensing and copyright can be managed without the need to reach out to every contributer.\n\n\n### Community Guideline - Play Nice\n\nAs a child, I wasn't any good with people (I'm not sure I'm any better now that I'm older)... which is how come I became good with computers and why we have `facil.io` and other open source projects ;-)\n\nHowever, I promise to do my best to be a respectful communicator and I ask that you do your best as well.\n\nNo matter if discussing a PR (where we might find ourselves entering a heated discussion) or answering an issue (where sometime we find ourselves wondering why people think we work for them)... we should all remember that a little compassion and respect goes a long way.\n\n### Style Guide and Guidelines\n\nA few pointers about code styling (pun intended).\n\n* Use `clang-format` with the `LLVM` style.\n\n* Initialize all variables during declaration - even if it's redundant.\n\n* Use `goto` to move code branches to the end of a function's body.\n\n    It makes the main body of the function more readable (IMHO) and should help with branch prediction (similar to how `unlikely` might help, but using a different approach)\n\n## A quick run-down\n\n`facil.io` is comprised of the following module \"families\":\n\n* The Core:\n\n    This module family comprises `facil.io`'s core. Although it can (mostly) be used outside of `facil.io`, none of the modules in this family can be removed.\n\n    The module in comprised of two files: `fio.h` and `fio.c`.\n\n    The `fio.h` file can be included more then once and includes some core types, such as binary String support, Arrays, Hash Maps, spinlocks, etc' (see documentation).\n\n* Dynamic Types (`FIOBJ`) with native JSON support.\n\n    This soft type system was designed to make some network oriented tasks easier and is therefore used by many of the other modules.\n\n    Unlike most modules, this module is only optional if the core is used independently.\n\n* HTTP / WebSockets:\n\n    The `http` folder refers to the inter-connected HTTP/WebSocket extension / module.\n\n    Although this module family seems very entangled, I did my best to make it easy to maintain and extend with a minimum of entanglement.\n\n    HTTP request and response modules support virtual function tables for future HTTP/2 extensions. The actual request/response implementations might vary between protocol implementation, but their interface should be version agnostic.\n\n    Like most modules, it is optional and can be removed from facil.io without any side-effects.\n\n* Redis:\n\n    The redis engine is in it's own folder, both because it's clearly an \"add-on\" (even though it's a pub/sub add-on) and because it's as optional as it gets.\n\n    This is also a good example for my preference for modular design. The RESP parser is a single file library. It can be easily ported to different projects and is totally separate from the network layer.\n\n* CLI:\n\n    The command line interface extension / module is in the folder `cli` and should be considered and optional add-on. Other modules shouldn't rely on it's existence or absence.\n\n    This too, much like the Redis module, is a good example of the preferred modular approach.\n\n\n### Where to start / Roadmap\n\nBefore you start working on a feature, I consider opening a PR to edit this CONTRIBUTING file and letting the community know that you took this feature upon yourself.\n\nAdd the feature you want to work on to the following list (or assign an existing feature to yourself). This will also allow us to discuss, in the PR's thread, any questions you might have or any expectations that might effect the API or the feature.\n\nOnce you have all the information you need to implementing the feature, the discussion can move to the actual feature's PR.\n\nThese are the features that have been requested so far. Even if any of them are assigned, feel free to offer your help:\n\n|      Feature      |      assigned      |      remarks               |\n|-------------------|--------------------|----------------------------|\n|   Documentation   |     ð Help ð    | Placed at [`docs/_SOURCE`](docs/_SOURCE) |\n|       Tests       |    Never enough    | run through [`tests.c`](tests/tests.c) but implement in source files. |\n| Early Hints HTTP/1.1 |               |                            |\n|      SSL/TLS      |                    | See [`fio_tls_missing.c`](lib/facil/tls/fio_tls_missing.c) for example. |\n|  WebSocket Client |                    | Missing cookie retention.  |\n|    HTTP Client    |                    | Missing SSL/TLS, cookie retention and auto-redirect(?)  |\n|      HTTP/2       |                    |                            |\n|    HTTP Router    |                    | RESTfuk without RegEx. i.e.: `/users/(:id)` |\n|     PostgreSQL    |                    | Wrap `libpq.h` for events + pub/sub engine (?) |\n|     Gossip (?)    |                    | For Pub/Sub engine scaling |\n\n\n## License\n\nThe project requires that all the code is licensed under the MIT license (though that may change).\n\nPlease refrain from using or offering code that requires a change to the licensing scheme or that might prevent future updates to the licensing scheme (I'm considering ISC).\n\nI discovered GitHub doesn't offer a default CLA (Copyright and Licensing Agreement), so I adopted the one used by [BearSSL](https://www.bearssl.org/contrib.html), meaning:\n\n* the resulting code uses the MIT license, listing me (and only me) as the author. You can take credit by stating that the code was written by yourself, but should attribute copyright and authorship to me (Boaz Segev). This is similar to a \"work for hire\" approach.\n\n* I will list meaningful contributions in the CHANGELOG and special contributions will be listed in the README and/or here.\n\nThis allows me to circumvent any future licensing concerns and prevent contributors from revoking the license attached to their code.\n\n## Notable Contributions\n\n* @area55git ([Area55](https://github.com/area55git)) contributed the logo under a [Creative Commons Attribution 4.0 International License.](https://creativecommons.org/licenses/by/4.0/).\n\n* @cdkrot took the time to test some of the demo code using valgrind, detecting a shutdown issue with in core `defer` library and offering a quick fix.\n\n* @madsheep and @nilclass took the time to expose a very quite issue (#16) that involved a long processing `on_open` websocket callback and very short network roundtrips, exposing a weakness in the HTTP/1.x logic.\n\n* @64 took the time to test the pre-released 0.6.0 version and submit [PR #25](https://github.com/boazsegev/facil.io/pull/25), fixing a silent error and some warnings.\n\n* Florian Weber (@Florianjw) took time to challenge the RiskyHash draft and [exposed a byte ordering error (last 7 byte reading order)](https://www.reddit.com/r/crypto/comments/9kk5gl/break_my_ciphercollectionpost/eekxw2f/?context=3).\n\n* Chris Anderson (@injinj) did amazing work exploring a 128 bit variation and attacking RiskyHash using a variation on a Meet-In-The-Middle attack, written by Hening Makholm (@hmakholm) on his ([SMHasher fork](https://github.com/hmakholm/smhasher)). The RiskyHash dfraft was updated to address this attack.\n\n"
        },
        {
          "name": "Doxyfile",
          "type": "blob",
          "size": 101.859375,
          "content": "# Doxyfile 1.8.10\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project.\n#\n# All text after a double hash (##) is considered a comment and is placed in\n# front of the TAG it is preceding.\n#\n# All text after a single hash (#) is considered a comment and will be ignored.\n# The format is:\n# TAG = value [value, ...]\n# For lists, items can also be appended using:\n# TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\\\" \\\").\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# This tag specifies the encoding used for all characters in the config file\n# that follow. The default is UTF-8 which is also the encoding used for all text\n# before the first occurrence of this tag. Doxygen uses libiconv (or the iconv\n# built into libc) for the transcoding. See http://www.gnu.org/software/libiconv\n# for the list of possible encodings.\n# The default value is: UTF-8.\n\nDOXYFILE_ENCODING      = UTF-8\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded by\n# double-quotes, unless you are using Doxywizard) that should identify the\n# project for which the documentation is generated. This name is used in the\n# title of most generated pages and in a few other places.\n# The default value is: My Project.\n\nPROJECT_NAME           = \"Facil.io - the C web framework\"\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         =\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          = \"A Framework/Library for writing network services in C\"\n\n# With the PROJECT_LOGO tag one can specify a logo or an icon that is included\n# in the documentation. The maximum height of the logo should not exceed 55\n# pixels and the maximum width should not exceed 200 pixels. Doxygen will copy\n# the logo to the output directory.\n\nPROJECT_LOGO           =\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path\n# into which the generated documentation will be written. If a relative path is\n# entered, it will be relative to the location where doxygen was started. If\n# left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       =\n\n# If the CREATE_SUBDIRS tag is set to YES then doxygen will create 4096 sub-\n# directories (in 2 levels) under the output directory of each output format and\n# will distribute the generated files over these directories. Enabling this\n# option can be useful when feeding doxygen a huge amount of source files, where\n# putting all generated files in the same directory would otherwise causes\n# performance problems for the file system.\n# The default value is: NO.\n\nCREATE_SUBDIRS         = NO\n\n# If the ALLOW_UNICODE_NAMES tag is set to YES, doxygen will allow non-ASCII\n# characters to appear in the names of generated files. If set to NO, non-ASCII\n# characters will be escaped, for example _xE3_x81_x84 will be used for Unicode\n# U+3044.\n# The default value is: NO.\n\nALLOW_UNICODE_NAMES    = NO\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# Possible values are: Afrikaans, Arabic, Armenian, Brazilian, Catalan, Chinese,\n# Chinese-Traditional, Croatian, Czech, Danish, Dutch, English (United States),\n# Esperanto, Farsi (Persian), Finnish, French, German, Greek, Hungarian,\n# Indonesian, Italian, Japanese, Japanese-en (Japanese with English messages),\n# Korean, Korean-en (Korean with English messages), Latvian, Lithuanian,\n# Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese, Romanian, Russian,\n# Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish, Swedish, Turkish,\n# Ukrainian and Vietnamese.\n# The default value is: English.\n\nOUTPUT_LANGUAGE        = English\n\n# If the BRIEF_MEMBER_DESC tag is set to YES, doxygen will include brief member\n# descriptions after the members that are listed in the file and class\n# documentation (similar to Javadoc). Set to NO to disable this.\n# The default value is: YES.\n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES, doxygen will prepend the brief\n# description of a member or function before the detailed description\n#\n# Note: If both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n# brief descriptions will be completely suppressed.\n# The default value is: YES.\n\nREPEAT_BRIEF           = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator that is\n# used to form the text in various listings. Each string in this list, if found\n# as the leading text of the brief description, will be stripped from the text\n# and the result, after processing the whole list, is used as the annotated\n# text. Otherwise, the brief description is used as-is. If left blank, the\n# following values are used ($name is automatically replaced with the name of\n# the entity):The $name class, The $name widget, The $name file, is, provides,\n# specifies, contains, represents, a, an and the.\n\nABBREVIATE_BRIEF       =\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# doxygen will generate a detailed section even if there is only a brief\n# description.\n# The default value is: NO.\n\nALWAYS_DETAILED_SEC    = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n# inherited members of a class in the documentation of that class as if those\n# members were ordinary class members. Constructors, destructors and assignment\n# operators of the base classes will not be shown.\n# The default value is: NO.\n\nINLINE_INHERITED_MEMB  = NO\n\n# If the FULL_PATH_NAMES tag is set to YES, doxygen will prepend the full path\n# before files name in the file list and in the header files. If set to NO the\n# shortest path that makes the file name unique will be used\n# The default value is: YES.\n\nFULL_PATH_NAMES        = NO\n\n# The STRIP_FROM_PATH tag can be used to strip a user-defined part of the path.\n# Stripping is only done if one of the specified strings matches the left-hand\n# part of the path. The tag can be used to show relative paths in the file list.\n# If left blank the directory from which doxygen is run is used as the path to\n# strip.\n#\n# Note that you can specify absolute paths here, but also relative paths, which\n# will be relative from the directory where doxygen is started.\n# This tag requires that the tag FULL_PATH_NAMES is set to YES.\n\nSTRIP_FROM_PATH        =\n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of the\n# path mentioned in the documentation of a class, which tells the reader which\n# header file to include in order to use a class. If left blank only the name of\n# the header file containing the class definition is used. Otherwise one should\n# specify the list of include paths that are normally passed to the compiler\n# using the -I flag.\n\nSTRIP_FROM_INC_PATH    =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter (but\n# less readable) file names. This can be useful is your file systems doesn't\n# support long names like on DOS, Mac, or CD-ROM.\n# The default value is: NO.\n\nSHORT_NAMES            = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then doxygen will interpret the\n# first line (until the first dot) of a Javadoc-style comment as the brief\n# description. If set to NO, the Javadoc-style will behave just like regular Qt-\n# style comments (thus requiring an explicit @brief command for a brief\n# description.)\n# The default value is: NO.\n\nJAVADOC_AUTOBRIEF      = NO\n\n# If the QT_AUTOBRIEF tag is set to YES then doxygen will interpret the first\n# line (until the first dot) of a Qt-style comment as the brief description. If\n# set to NO, the Qt-style will behave just like regular Qt-style comments (thus\n# requiring an explicit \\brief command for a brief description.)\n# The default value is: NO.\n\nQT_AUTOBRIEF           = NO\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make doxygen treat a\n# multi-line C++ special comment block (i.e. a block of //! or /// comments) as\n# a brief description. This used to be the default behavior. The new default is\n# to treat a multi-line C++ comment block as a detailed description. Set this\n# tag to YES if you prefer the old behavior instead.\n#\n# Note that setting this tag to YES also means that rational rose comments are\n# not recognized any more.\n# The default value is: NO.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# If the INHERIT_DOCS tag is set to YES then an undocumented member inherits the\n# documentation from any documented member that it re-implements.\n# The default value is: YES.\n\nINHERIT_DOCS           = YES\n\n# If the SEPARATE_MEMBER_PAGES tag is set to YES then doxygen will produce a new\n# page for each member. If set to NO, the documentation of a member will be part\n# of the file/class/namespace that contains it.\n# The default value is: NO.\n\nSEPARATE_MEMBER_PAGES  = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab. Doxygen\n# uses this value to replace tabs by spaces in code fragments.\n# Minimum value: 1, maximum value: 16, default value: 4.\n\nTAB_SIZE               = 3\n\n# This tag can be used to specify a number of aliases that act as commands in\n# the documentation. An alias has the form:\n# name=value\n# For example adding\n# \"sideeffect=@par Side Effects:\\n\"\n# will allow you to put the command \\sideeffect (or @sideeffect) in the\n# documentation, which will result in a user-defined paragraph with heading\n# \"Side Effects:\". You can put \\n's in the value part of an alias to insert\n# newlines.\n\nALIASES                =\n\n# This tag can be used to specify a number of word-keyword mappings (TCL only).\n# A mapping has the form \"name=value\". For example adding \"class=itcl::class\"\n# will allow you to use the command class in the itcl::class meaning.\n\nTCL_SUBST              =\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources\n# only. Doxygen will then generate output that is more tailored for C. For\n# instance, some of the names that are used will be different. The list of all\n# members will be omitted, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_FOR_C  = NO\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java or\n# Python sources only. Doxygen will then generate output that is more tailored\n# for that language. For instance, namespaces will be presented as packages,\n# qualified scopes will look different, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\n# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran\n# sources. Doxygen will then generate output that is tailored for Fortran.\n# The default value is: NO.\n\nOPTIMIZE_FOR_FORTRAN   = NO\n\n# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL\n# sources. Doxygen will then generate output that is tailored for VHDL.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_VHDL   = NO\n\n# Doxygen selects the parser to use depending on the extension of the files it\n# parses. With this tag you can assign which parser to use for a given\n# extension. Doxygen has a built-in mapping, but you can override or extend it\n# using this tag. The format is ext=language, where ext is a file extension, and\n# language is one of the parsers supported by doxygen: IDL, Java, Javascript,\n# C#, C, C++, D, PHP, Objective-C, Python, Fortran (fixed format Fortran:\n# FortranFixed, free formatted Fortran: FortranFree, unknown formatted Fortran:\n# Fortran. In the later case the parser tries to guess whether the code is fixed\n# or free formatted code, this is the default for Fortran type files), VHDL. For\n# instance to make doxygen treat .inc files as Fortran files (default is PHP),\n# and .f files as C (default is Fortran), use: inc=Fortran f=C.\n#\n# Note: For files without extension you can use no_extension as a placeholder.\n#\n# Note that for custom extensions you also need to set FILE_PATTERNS otherwise\n# the files are not read by doxygen.\n\nEXTENSION_MAPPING      =\n\n# If the MARKDOWN_SUPPORT tag is enabled then doxygen pre-processes all comments\n# according to the Markdown format, which allows for more readable\n# documentation. See http://daringfireball.net/projects/markdown/ for details.\n# The output of markdown processing is further processed by doxygen, so you can\n# mix doxygen, HTML, and XML commands with Markdown formatting. Disable only in\n# case of backward compatibilities issues.\n# The default value is: YES.\n\nMARKDOWN_SUPPORT       = YES\n\n# When enabled doxygen tries to link words that correspond to documented\n# classes, or namespaces to their corresponding documentation. Such a link can\n# be prevented in individual cases by putting a % sign in front of the word or\n# globally by setting AUTOLINK_SUPPORT to NO.\n# The default value is: YES.\n\nAUTOLINK_SUPPORT       = YES\n\n# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want\n# to include (a tag file for) the STL sources as input, then you should set this\n# tag to YES in order to let doxygen match functions declarations and\n# definitions whose arguments contain STL classes (e.g. func(std::string);\n# versus func(std::string) {}). This also make the inheritance and collaboration\n# diagrams that involve STL classes more complete and accurate.\n# The default value is: NO.\n\nBUILTIN_STL_SUPPORT    = NO\n\n# If you use Microsoft's C++/CLI language, you should set this option to YES to\n# enable parsing support.\n# The default value is: NO.\n\nCPP_CLI_SUPPORT        = NO\n\n# Set the SIP_SUPPORT tag to YES if your project consists of sip (see:\n# http://www.riverbankcomputing.co.uk/software/sip/intro) sources only. Doxygen\n# will parse them like normal C++ but will assume all classes use public instead\n# of private inheritance when no explicit protection keyword is present.\n# The default value is: NO.\n\nSIP_SUPPORT            = NO\n\n# For Microsoft's IDL there are propget and propput attributes to indicate\n# getter and setter methods for a property. Setting this option to YES will make\n# doxygen to replace the get and set methods by a property in the documentation.\n# This will only work if the methods are indeed getting or setting a simple\n# type. If this is not the case, or you want to show the methods anyway, you\n# should set this option to NO.\n# The default value is: YES.\n\nIDL_PROPERTY_SUPPORT   = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n# The default value is: NO.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# If one adds a struct or class to a group and this option is enabled, then also\n# any nested class or struct is added to the same group. By default this option\n# is disabled and one has to add nested compounds explicitly via \\ingroup.\n# The default value is: NO.\n\nGROUP_NESTED_COMPOUNDS = NO\n\n# Set the SUBGROUPING tag to YES to allow class member groups of the same type\n# (for instance a group of public functions) to be put as a subgroup of that\n# type (e.g. under the Public Functions section). Set it to NO to prevent\n# subgrouping. Alternatively, this can be done per class using the\n# \\nosubgrouping command.\n# The default value is: YES.\n\nSUBGROUPING            = YES\n\n# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and unions\n# are shown inside the group in which they are included (e.g. using \\ingroup)\n# instead of on a separate page (for HTML and Man pages) or section (for LaTeX\n# and RTF).\n#\n# Note that this feature does not work in combination with\n# SEPARATE_MEMBER_PAGES.\n# The default value is: NO.\n\nINLINE_GROUPED_CLASSES = NO\n\n# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and unions\n# with only public data fields or simple typedef fields will be shown inline in\n# the documentation of the scope in which they are defined (i.e. file,\n# namespace, or group documentation), provided this scope is documented. If set\n# to NO, structs, classes, and unions are shown on a separate page (for HTML and\n# Man pages) or section (for LaTeX and RTF).\n# The default value is: NO.\n\nINLINE_SIMPLE_STRUCTS  = NO\n\n# When TYPEDEF_HIDES_STRUCT tag is enabled, a typedef of a struct, union, or\n# enum is documented as struct, union, or enum with the name of the typedef. So\n# typedef struct TypeS {} TypeT, will appear in the documentation as a struct\n# with name TypeT. When disabled the typedef will appear as a member of a file,\n# namespace, or class. And the struct will be named TypeS. This can typically be\n# useful for C code in case the coding convention dictates that all compound\n# types are typedef'ed and only the typedef is referenced, never the tag name.\n# The default value is: NO.\n\nTYPEDEF_HIDES_STRUCT   = NO\n\n# The size of the symbol lookup cache can be set using LOOKUP_CACHE_SIZE. This\n# cache is used to resolve symbols given their name and scope. Since this can be\n# an expensive process and often the same symbol appears multiple times in the\n# code, doxygen keeps a cache of pre-resolved symbols. If the cache is too small\n# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\nLOOKUP_CACHE_SIZE      = 0\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES, doxygen will assume all entities in\n# documentation are documented, even if no documentation was available. Private\n# class members and static file members will be hidden unless the\n# EXTRACT_PRIVATE respectively EXTRACT_STATIC tags are set to YES.\n# Note: This will also disable the warnings about undocumented members that are\n# normally produced when WARNINGS is set to YES.\n# The default value is: NO.\n\nEXTRACT_ALL            = NO\n\n# If the EXTRACT_PRIVATE tag is set to YES, all private members of a class will\n# be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PRIVATE        = NO\n\n# If the EXTRACT_PACKAGE tag is set to YES, all members with package or internal\n# scope will be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PACKAGE        = NO\n\n# If the EXTRACT_STATIC tag is set to YES, all static members of a file will be\n# included in the documentation.\n# The default value is: NO.\n\nEXTRACT_STATIC         = NO\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES, classes (and structs) defined\n# locally in source files will be included in the documentation. If set to NO,\n# only classes defined in header files are included. Does not have any effect\n# for Java sources.\n# The default value is: YES.\n\nEXTRACT_LOCAL_CLASSES  = NO\n\n# This flag is only useful for Objective-C code. If set to YES, local methods,\n# which are defined in the implementation section but not in the interface are\n# included in the documentation. If set to NO, only methods in the interface are\n# included.\n# The default value is: NO.\n\nEXTRACT_LOCAL_METHODS  = NO\n\n# If this flag is set to YES, the members of anonymous namespaces will be\n# extracted and appear in the documentation as a namespace called\n# 'anonymous_namespace{file}', where file will be replaced with the base name of\n# the file that contains the anonymous namespace. By default anonymous namespace\n# are hidden.\n# The default value is: NO.\n\nEXTRACT_ANON_NSPACES   = NO\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, doxygen will hide all\n# undocumented members inside documented classes or files. If set to NO these\n# members will be included in the various overviews, but no documentation\n# section is generated. This option has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy. If set\n# to NO, these classes will be included in the various overviews. This option\n# has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, doxygen will hide all friend\n# (class|struct|union) declarations. If set to NO, these declarations will be\n# included in the documentation.\n# The default value is: NO.\n\nHIDE_FRIEND_COMPOUNDS  = NO\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, doxygen will hide any\n# documentation blocks found inside the body of a function. If set to NO, these\n# blocks will be appended to the function's detailed documentation block.\n# The default value is: NO.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation that is typed after a\n# \\internal command is included. If the tag is set to NO then the documentation\n# will be excluded. Set it to YES to include the internal documentation.\n# The default value is: NO.\n\nINTERNAL_DOCS          = NO\n\n# If the CASE_SENSE_NAMES tag is set to NO then doxygen will only generate file\n# names in lower-case letters. If set to YES, upper-case letters are also\n# allowed. This is useful if you have classes or files whose names only differ\n# in case and if your file system supports case sensitive file names. Windows\n# and Mac users are advised to set this option to NO.\n# The default value is: system dependent.\n\nCASE_SENSE_NAMES       = NO\n\n# If the HIDE_SCOPE_NAMES tag is set to NO then doxygen will show members with\n# their full class and namespace scopes in the documentation. If set to YES, the\n# scope will be hidden.\n# The default value is: NO.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the HIDE_COMPOUND_REFERENCE tag is set to NO (default) then doxygen will\n# append additional text to a page's title, such as Class Reference. If set to\n# YES the compound reference will be hidden.\n# The default value is: NO.\n\nHIDE_COMPOUND_REFERENCE= NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES then doxygen will put a list of\n# the files that are included by a file in the documentation of that file.\n# The default value is: YES.\n\nSHOW_INCLUDE_FILES     = YES\n\n# If the SHOW_GROUPED_MEMB_INC tag is set to YES then Doxygen will add for each\n# grouped member an include statement to the documentation, telling the reader\n# which file to include in order to use the member.\n# The default value is: NO.\n\nSHOW_GROUPED_MEMB_INC  = NO\n\n# If the FORCE_LOCAL_INCLUDES tag is set to YES then doxygen will list include\n# files with double quotes in the documentation rather than with sharp brackets.\n# The default value is: NO.\n\nFORCE_LOCAL_INCLUDES   = NO\n\n# If the INLINE_INFO tag is set to YES then a tag [inline] is inserted in the\n# documentation for inline members.\n# The default value is: YES.\n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order.\n# The default value is: YES.\n\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n# The default value is: NO.\n\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n# Note: If SORT_BRIEF_DOCS is set to NO this option is ignored for sorting brief\n# member documentation.\n# Note: If SORT_MEMBER_DOCS is set to NO this option is ignored for sorting\n# detailed member documentation.\n# The default value is: NO.\n\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n\nSORT_GROUP_NAMES       = NO\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be sorted by\n# fully-qualified names, including namespaces. If set to NO, the class list will\n# be sorted only by class name, not including the namespace part.\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n# Note: This option applies only to the class list, not to the alphabetical\n# list.\n# The default value is: NO.\n\nSORT_BY_SCOPE_NAME     = NO\n\n# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to do proper\n# type resolution of all parameters of a function it will reject a match between\n# the prototype and the implementation of a member function even if there is\n# only one candidate or it is obvious which candidate to choose by doing a\n# simple string match. By disabling STRICT_PROTO_MATCHING doxygen will still\n# accept a match between prototype and implementation in such cases.\n# The default value is: NO.\n\nSTRICT_PROTO_MATCHING  = NO\n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or disable (NO) the todo\n# list. This list is created by putting \\todo commands in the documentation.\n# The default value is: YES.\n\nGENERATE_TODOLIST      = YES\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or disable (NO) the test\n# list. This list is created by putting \\test commands in the documentation.\n# The default value is: YES.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable (YES) or disable (NO) the bug\n# list. This list is created by putting \\bug commands in the documentation.\n# The default value is: YES.\n\nGENERATE_BUGLIST       = YES\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or disable (NO)\n# the deprecated list. This list is created by putting \\deprecated commands in\n# the documentation.\n# The default value is: YES.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional documentation\n# sections, marked by \\if <section_label> ... \\endif and \\cond <section_label>\n# ... \\endcond blocks.\n\nENABLED_SECTIONS       =\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines that the\n# initial value of a variable or macro / define can have for it to appear in the\n# documentation. If the initializer consists of more lines than specified here\n# it will be hidden. Use a value of 0 to hide initializers completely. The\n# appearance of the value of individual variables and macros / defines can be\n# controlled using \\showinitializer or \\hideinitializer command in the\n# documentation regardless of this setting.\n# Minimum value: 0, maximum value: 10000, default value: 30.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES, the\n# list will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\nSHOW_USED_FILES        = YES\n\n# Set the SHOW_FILES tag to NO to disable the generation of the Files page. This\n# will remove the Files entry from the Quick Index and from the Folder Tree View\n# (if specified).\n# The default value is: YES.\n\nSHOW_FILES             = YES\n\n# Set the SHOW_NAMESPACES tag to NO to disable the generation of the Namespaces\n# page. This will remove the Namespaces entry from the Quick Index and from the\n# Folder Tree View (if specified).\n# The default value is: YES.\n\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n# version. For an example see the documentation.\n\nFILE_VERSION_FILTER    =\n\n# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed\n# by doxygen. The layout file controls the global structure of the generated\n# output files in an output format independent way. To create the layout file\n# that represents doxygen's defaults, run doxygen with the -l option. You can\n# optionally specify a file name after the option, if omitted DoxygenLayout.xml\n# will be used as the name of the layout file.\n#\n# Note that if you run doxygen from a directory containing a file called\n# DoxygenLayout.xml, doxygen will parse it automatically even if the LAYOUT_FILE\n# tag is left empty.\n\nLAYOUT_FILE            =\n\n# The CITE_BIB_FILES tag can be used to specify one or more bib files containing\n# the reference definitions. This must be a list of .bib files. The .bib\n# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also http://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES         =\n\n#---------------------------------------------------------------------------\n# Configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated to\n# standard output by doxygen. If QUIET is set to YES this implies that the\n# messages are off.\n# The default value is: NO.\n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated to standard error (stderr) by doxygen. If WARNINGS is set to YES\n# this implies that the warnings are on.\n#\n# Tip: Turn warnings on while writing the documentation.\n# The default value is: YES.\n\nWARNINGS               = YES\n\n# If the WARN_IF_UNDOCUMENTED tag is set to YES then doxygen will generate\n# warnings for undocumented members. If EXTRACT_ALL is set to YES then this flag\n# will automatically be disabled.\n# The default value is: YES.\n\nWARN_IF_UNDOCUMENTED   = YES\n\n# If the WARN_IF_DOC_ERROR tag is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some parameters\n# in a documented function, or documenting parameters that don't exist or using\n# markup commands wrongly.\n# The default value is: YES.\n\nWARN_IF_DOC_ERROR      = YES\n\n# This WARN_NO_PARAMDOC option can be enabled to get warnings for functions that\n# are documented, but have no documentation for their parameters or return\n# value. If set to NO, doxygen will only warn about wrong or incomplete\n# parameter documentation, but not about the absence of documentation.\n# The default value is: NO.\n\nWARN_NO_PARAMDOC       = NO\n\n# The WARN_FORMAT tag determines the format of the warning messages that doxygen\n# can produce. The string should contain the $file, $line, and $text tags, which\n# will be replaced by the file and line number from which the warning originated\n# and the warning text. Optionally the format may contain $version, which will\n# be replaced by the version of the file (if it could be obtained via\n# FILE_VERSION_FILTER)\n# The default value is: $file:$line: $text.\n\nWARN_FORMAT            = \"$file:$line: $text\"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning and error\n# messages should be written. If left blank the output is written to standard\n# error (stderr).\n\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag is used to specify the files and/or directories that contain\n# documented source files. You may enter file names like myfile.cpp or\n# directories like /usr/src/myproject. Separate the files or directories with\n# spaces. See also FILE_PATTERNS and EXTENSION_MAPPING\n# Note: If this tag is empty the current directory is searched.\n\nINPUT                  = ./lib\n\n# This tag can be used to specify the character encoding of the source files\n# that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses\n# libiconv (or the iconv built into libc) for the transcoding. See the libiconv\n# documentation (see: http://www.gnu.org/software/libiconv) for the list of\n# possible encodings.\n# The default value is: UTF-8.\n\nINPUT_ENCODING         = UTF-8\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard patterns (like *.cpp and\n# *.h) to filter out the source-files in the directories.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# read by doxygen.\n#\n# If left blank the following patterns are tested:*.c, *.cc, *.cxx, *.cpp,\n# *.c++, *.java, *.ii, *.ixx, *.ipp, *.i++, *.inl, *.idl, *.ddl, *.odl, *.h,\n# *.hh, *.hxx, *.hpp, *.h++, *.cs, *.d, *.php, *.php4, *.php5, *.phtml, *.inc,\n# *.m, *.markdown, *.md, *.mm, *.dox, *.py, *.f90, *.f, *.for, *.tcl, *.vhd,\n# *.vhdl, *.ucf, *.qsf, *.as and *.js.\n\nFILE_PATTERNS          =\n\n# The RECURSIVE tag can be used to specify whether or not subdirectories should\n# be searched for input files as well.\n# The default value is: NO.\n\nRECURSIVE              = YES\n\n# The EXCLUDE tag can be used to specify files and/or directories that should be\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n#\n# Note that relative paths are relative to the directory from which doxygen is\n# run.\n\nEXCLUDE                =\n\n# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or\n# directories that are symbolic links (a Unix file system feature) are excluded\n# from the input.\n# The default value is: NO.\n\nEXCLUDE_SYMLINKS       = NO\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories.\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories for example use the pattern */test/*\n\nEXCLUDE_PATTERNS       =\n\n# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names\n# (namespaces, classes, functions, etc.) that should be excluded from the\n# output. The symbol name can be a fully qualified name, a word, or if the\n# wildcard * is used, a substring. Examples: ANamespace, AClass,\n# AClass::ANamespace, ANamespace::*Test\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories use the pattern */test/*\n\nEXCLUDE_SYMBOLS        =\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or directories\n# that contain example code fragments that are included (see the \\include\n# command).\n\nEXAMPLE_PATH           =\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp and\n# *.h) to filter out the source-files in the directories. If left blank all\n# files are included.\n\nEXAMPLE_PATTERNS       =\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\dontinclude commands\n# irrespective of the value of the RECURSIVE tag.\n# The default value is: NO.\n\nEXAMPLE_RECURSIVE      = NO\n\n# The IMAGE_PATH tag can be used to specify one or more files or directories\n# that contain images that are to be included in the documentation (see the\n# \\image command).\n\nIMAGE_PATH             =\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command:\n#\n# <filter> <input-file>\n#\n# where <filter> is the value of the INPUT_FILTER tag, and <input-file> is the\n# name of an input file. Doxygen will then use the output that the filter\n# program writes to standard output. If FILTER_PATTERNS is specified, this tag\n# will be ignored.\n#\n# Note that the filter must not add or remove lines; it is applied before the\n# code is scanned, but not when the output code is generated. If lines are added\n# or removed, the anchors will not be placed correctly.\n\nINPUT_FILTER           =\n\n# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern\n# basis. Doxygen will compare the file name with each pattern and apply the\n# filter if there is a match. The filters are a list of the form: pattern=filter\n# (like *.cpp=my_cpp_filter). See INPUT_FILTER for further information on how\n# filters are used. If the FILTER_PATTERNS tag is empty or if none of the\n# patterns match the file name, INPUT_FILTER is applied.\n\nFILTER_PATTERNS        =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER) will also be used to filter the input files that are used for\n# producing the source files to browse (i.e. when SOURCE_BROWSER is set to YES).\n# The default value is: NO.\n\nFILTER_SOURCE_FILES    = NO\n\n# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file\n# pattern. A pattern will override the setting for FILTER_PATTERN (if any) and\n# it is also possible to disable source filtering for a specific pattern using\n# *.ext= (so without naming a filter).\n# This tag requires that the tag FILTER_SOURCE_FILES is set to YES.\n\nFILTER_SOURCE_PATTERNS =\n\n# If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that\n# is part of the input, its contents will be placed on the main page\n# (index.html). This can be useful if you have a project on for instance GitHub\n# and want to reuse the introduction page also for the doxygen output.\n\nUSE_MDFILE_AS_MAINPAGE = ./README.md\n\n#---------------------------------------------------------------------------\n# Configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will be\n# generated. Documented entities will be cross-referenced with these sources.\n#\n# Note: To get rid of all source code in the generated output, make sure that\n# also VERBATIM_HEADERS is set to NO.\n# The default value is: NO.\n\nSOURCE_BROWSER         = YES\n\n# Setting the INLINE_SOURCES tag to YES will include the body of functions,\n# classes and enums directly into the documentation.\n# The default value is: NO.\n\nINLINE_SOURCES         = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES will instruct doxygen to hide any\n# special comment blocks from generated source code fragments. Normal C, C++ and\n# Fortran comments will always remain visible.\n# The default value is: YES.\n\nSTRIP_CODE_COMMENTS    = YES\n\n# If the REFERENCED_BY_RELATION tag is set to YES then for each documented\n# function all documented functions referencing it will be listed.\n# The default value is: NO.\n\nREFERENCED_BY_RELATION = NO\n\n# If the REFERENCES_RELATION tag is set to YES then for each documented function\n# all documented entities called/used by that function will be listed.\n# The default value is: NO.\n\nREFERENCES_RELATION    = NO\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES and SOURCE_BROWSER tag is set\n# to YES then the hyperlinks from functions in REFERENCES_RELATION and\n# REFERENCED_BY_RELATION lists will link to the source code. Otherwise they will\n# link to the documentation.\n# The default value is: YES.\n\nREFERENCES_LINK_SOURCE = YES\n\n# If SOURCE_TOOLTIPS is enabled (the default) then hovering a hyperlink in the\n# source code will show a tooltip with additional information such as prototype,\n# brief description and links to the definition and documentation. Since this\n# will make the HTML file larger and loading of large files a bit slower, you\n# can opt to disable this feature.\n# The default value is: YES.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nSOURCE_TOOLTIPS        = YES\n\n# If the USE_HTAGS tag is set to YES then the references to source code will\n# point to the HTML generated by the htags(1) tool instead of doxygen built-in\n# source browser. The htags tool is part of GNU's global source tagging system\n# (see http://www.gnu.org/software/global/global.html). You will need version\n# 4.8.6 or higher.\n#\n# To use it do the following:\n# - Install the latest version of global\n# - Enable SOURCE_BROWSER and USE_HTAGS in the config file\n# - Make sure the INPUT points to the root of the source tree\n# - Run doxygen as normal\n#\n# Doxygen will invoke htags (and that will in turn invoke gtags), so these\n# tools must be available from the command line (i.e. in the search path).\n#\n# The result: instead of the source browser generated by doxygen, the links to\n# source code will now point to the output of htags.\n# The default value is: NO.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nUSE_HTAGS              = NO\n\n# If the VERBATIM_HEADERS tag is set the YES then doxygen will generate a\n# verbatim copy of the header file for each class for which an include is\n# specified. Set to NO to disable this.\n# See also: Section \\class.\n# The default value is: YES.\n\nVERBATIM_HEADERS       = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index of all\n# compounds will be generated. Enable this if the project contains a lot of\n# classes, structs, unions or interfaces.\n# The default value is: YES.\n\nALPHABETICAL_INDEX     = YES\n\n# The COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns in\n# which the alphabetical index list will be split.\n# Minimum value: 1, maximum value: 20, default value: 5.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nCOLS_IN_ALPHA_INDEX    = 5\n\n# In case all classes in a project start with a common prefix, all classes will\n# be put under the same header in the alphabetical index. The IGNORE_PREFIX tag\n# can be used to specify a prefix (or a list of prefixes) that should be ignored\n# while generating the index headers.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES, doxygen will generate HTML output\n# The default value is: YES.\n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_OUTPUT            = html\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for each\n# generated HTML page (for example: .htm, .php, .asp).\n# The default value is: .html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a user-defined HTML header file for\n# each generated HTML page. If the tag is left blank doxygen will generate a\n# standard header.\n#\n# To get valid HTML the header file that includes any scripts and style sheets\n# that doxygen needs, which is dependent on the configuration options used (e.g.\n# the setting GENERATE_TREEVIEW). It is highly recommended to start with a\n# default header using\n# doxygen -w html new_header.html new_footer.html new_stylesheet.css\n# YourConfigFile\n# and then modify the file new_header.html. See also section \"Doxygen usage\"\n# for information on how to generate the default header that doxygen normally\n# uses.\n# Note: The header is subject to change so you typically have to regenerate the\n# default header when upgrading to a newer version of doxygen. For a description\n# of the possible markers and block names see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_HEADER            =\n\n# The HTML_FOOTER tag can be used to specify a user-defined HTML footer for each\n# generated HTML page. If the tag is left blank doxygen will generate a standard\n# footer. See HTML_HEADER for more information on how to generate a default\n# footer and what special commands can be used inside the footer. See also\n# section \"Doxygen usage\" for information on how to generate the default footer\n# that doxygen normally uses.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FOOTER            =\n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading style\n# sheet that is used by each HTML page. It can be used to fine-tune the look of\n# the HTML output. If left blank doxygen will generate a default style sheet.\n# See also section \"Doxygen usage\" for information on how to generate the style\n# sheet that doxygen normally uses.\n# Note: It is recommended to use HTML_EXTRA_STYLESHEET instead of this tag, as\n# it is more robust and this tag (HTML_STYLESHEET) will in the future become\n# obsolete.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_STYLESHEET        =\n\n# The HTML_EXTRA_STYLESHEET tag can be used to specify additional user-defined\n# cascading style sheets that are included after the standard style sheets\n# created by doxygen. Using this option one can overrule certain style aspects.\n# This is preferred over using HTML_STYLESHEET since it does not replace the\n# standard style sheet and is therefore more robust against future updates.\n# Doxygen will copy the style sheet files to the output directory.\n# Note: The order of the extra style sheet files is of importance (e.g. the last\n# style sheet in the list overrules the setting of the previous ones in the\n# list). For an example see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_STYLESHEET  =\n\n# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the HTML output directory. Note\n# that these files will be copied to the base HTML output directory. Use the\n# $relpath^ marker in the HTML_HEADER and/or HTML_FOOTER files to load these\n# files. In the HTML_STYLESHEET file, use the file name only. Also note that the\n# files will be copied as-is; there are no commands or markers available.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_FILES       =\n\n# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output. Doxygen\n# will adjust the colors in the style sheet and background images according to\n# this color. Hue is specified as an angle on a colorwheel, see\n# http://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_HUE    = 220\n\n# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of the colors\n# in the HTML output. For a value of 0 the output will use grayscales only. A\n# value of 255 will produce the most vivid colors.\n# Minimum value: 0, maximum value: 255, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_SAT    = 100\n\n# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to the\n# luminance component of the colors in the HTML output. Values below 100\n# gradually make the output lighter, whereas values above 100 make the output\n# darker. The value divided by 100 is the actual gamma applied, so 80 represents\n# a gamma of 0.8, The value 220 represents a gamma of 2.2, and 100 does not\n# change the gamma.\n# Minimum value: 40, maximum value: 240, default value: 80.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_GAMMA  = 80\n\n# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML\n# page will contain the date and time when the page was generated. Setting this\n# to YES can help to show when doxygen was last run and thus if the\n# documentation is up to date.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_TIMESTAMP         = NO\n\n# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML\n# documentation will contain sections that can be hidden and shown after the\n# page has loaded.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n# tree by default.\n# Minimum value: 0, maximum value: 9999, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_INDEX_NUM_ENTRIES = 100\n\n# If the GENERATE_DOCSET tag is set to YES, additional index files will be\n# generated that can be used as input for Apple's Xcode 3 integrated development\n# environment (see: http://developer.apple.com/tools/xcode/), introduced with\n# OSX 10.5 (Leopard). To create a documentation set, doxygen will generate a\n# Makefile in the HTML output directory. Running make will produce the docset in\n# that directory and running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html\n# for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_DOCSET        = NO\n\n# This tag determines the name of the docset feed. A documentation feed provides\n# an umbrella under which multiple documentation sets from a single provider\n# (such as a company or product suite) can be grouped.\n# The default value is: Doxygen generated docs.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_FEEDNAME        = \"Doxygen generated docs\"\n\n# This tag specifies a string that should uniquely identify the documentation\n# set bundle. This should be a reverse domain-name style string, e.g.\n# com.mycompany.MyDocSet. Doxygen will append .docset to the name.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_BUNDLE_ID       = org.doxygen.Project\n\n# The DOCSET_PUBLISHER_ID tag specifies a string that should uniquely identify\n# the documentation publisher. This should be a reverse domain-name style\n# string, e.g. com.mycompany.MyDocSet.documentation.\n# The default value is: org.doxygen.Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_ID    = org.doxygen.Publisher\n\n# The DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.\n# The default value is: Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_NAME  = Publisher\n\n# If the GENERATE_HTMLHELP tag is set to YES then doxygen generates three\n# additional HTML index files: index.hhp, index.hhc, and index.hhk. The\n# index.hhp is a project file that can be read by Microsoft's HTML Help Workshop\n# (see: http://www.microsoft.com/en-us/download/details.aspx?id=21138) on\n# Windows.\n#\n# The HTML Help Workshop contains a compiler that can convert all HTML output\n# generated by doxygen into a single compiled HTML file (.chm). Compiled HTML\n# files are now used as the Windows 98 help format, and will replace the old\n# Windows help format (.hlp) on all Windows platforms in the future. Compressed\n# HTML files also contain an index, a table of contents, and you can search for\n# words in the documentation. The HTML workshop also contains a viewer for\n# compressed HTML files.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_HTMLHELP      = NO\n\n# The CHM_FILE tag can be used to specify the file name of the resulting .chm\n# file. You can add a path in front of the file if the result should not be\n# written to the html output directory.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_FILE               =\n\n# The HHC_LOCATION tag can be used to specify the location (absolute path\n# including file name) of the HTML help compiler (hhc.exe). If non-empty,\n# doxygen will try to run the HTML help compiler on the generated index.hhp.\n# The file has to be specified with full path.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nHHC_LOCATION           =\n\n# The GENERATE_CHI flag controls if a separate .chi index file is generated\n# (YES) or that it should be included in the master .chm file (NO).\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nGENERATE_CHI           = NO\n\n# The CHM_INDEX_ENCODING is used to encode HtmlHelp index (hhk), content (hhc)\n# and project file content.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_INDEX_ENCODING     =\n\n# The BINARY_TOC flag controls whether a binary table of contents is generated\n# (YES) or a normal table of contents (NO) in the .chm file. Furthermore it\n# enables the Previous and Next buttons.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nBINARY_TOC             = NO\n\n# The TOC_EXPAND flag can be set to YES to add extra items for group members to\n# the table of contents of the HTML help documentation and to the tree view.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nTOC_EXPAND             = NO\n\n# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and\n# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated that\n# can be used as input for Qt's qhelpgenerator to generate a Qt Compressed Help\n# (.qch) of the generated HTML documentation.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_QHP           = NO\n\n# If the QHG_LOCATION tag is specified, the QCH_FILE tag can be used to specify\n# the file name of the resulting .qch file. The path specified is relative to\n# the HTML output folder.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQCH_FILE               =\n\n# The QHP_NAMESPACE tag specifies the namespace to use when generating Qt Help\n# Project output. For more information please see Qt Help Project / Namespace\n# (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#namespace).\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_NAMESPACE          = org.doxygen.Project\n\n# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating Qt\n# Help Project output. For more information please see Qt Help Project / Virtual\n# Folders (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#virtual-\n# folders).\n# The default value is: doc.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_VIRTUAL_FOLDER     = doc\n\n# If the QHP_CUST_FILTER_NAME tag is set, it specifies the name of a custom\n# filter to add. For more information please see Qt Help Project / Custom\n# Filters (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#custom-\n# filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_NAME   =\n\n# The QHP_CUST_FILTER_ATTRS tag specifies the list of the attributes of the\n# custom filter to add. For more information please see Qt Help Project / Custom\n# Filters (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#custom-\n# filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_ATTRS  =\n\n# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this\n# project's filter section matches. Qt Help Project / Filter Attributes (see:\n# http://qt-project.org/doc/qt-4.8/qthelpproject.html#filter-attributes).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_SECT_FILTER_ATTRS  =\n\n# The QHG_LOCATION tag can be used to specify the location of Qt's\n# qhelpgenerator. If non-empty doxygen will try to run qhelpgenerator on the\n# generated .qhp file.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHG_LOCATION           =\n\n# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files will be\n# generated, together with the HTML files, they form an Eclipse help plugin. To\n# install this plugin and make it available under the help contents menu in\n# Eclipse, the contents of the directory containing the HTML and XML files needs\n# to be copied into the plugins directory of eclipse. The name of the directory\n# within the plugins directory should be the same as the ECLIPSE_DOC_ID value.\n# After copying Eclipse needs to be restarted before the help appears.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_ECLIPSEHELP   = NO\n\n# A unique identifier for the Eclipse help plugin. When installing the plugin\n# the directory name containing the HTML and XML files should also have this\n# name. Each documentation set should have its own identifier.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_ECLIPSEHELP is set to YES.\n\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nDISABLE_INDEX          = NO\n\n# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index\n# structure should be generated to display hierarchical information. If the tag\n# value is set to YES, a side panel will be generated containing a tree-like\n# index structure (just like the one that is generated for HTML Help). For this\n# to work a browser that supports JavaScript, DHTML, CSS and frames is required\n# (i.e. any modern browser). Windows users are probably better off using the\n# HTML help feature. Via custom style sheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine-tune the look of the index. As an example, the default style\n# sheet generated by doxygen has an example that shows how to put an image at\n# the root of the tree instead of the PROJECT_NAME. Since the tree basically has\n# the same information as the tab index, you could consider setting\n# DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_TREEVIEW      = NO\n\n# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values that\n# doxygen will group on one line in the generated HTML documentation.\n#\n# Note that a value of 0 will completely suppress the enum values from appearing\n# in the overview section.\n# Minimum value: 0, maximum value: 20, default value: 4.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nENUM_VALUES_PER_LINE   = 4\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be used\n# to set the initial width (in pixels) of the frame in which the tree is shown.\n# Minimum value: 0, maximum value: 1500, default value: 250.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nTREEVIEW_WIDTH         = 250\n\n# If the EXT_LINKS_IN_WINDOW option is set to YES, doxygen will open links to\n# external symbols imported via tag files in a separate window.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nEXT_LINKS_IN_WINDOW    = NO\n\n# Use this tag to change the font size of LaTeX formulas included as images in\n# the HTML documentation. When you change the font size after a successful\n# doxygen run you need to manually remove any form_*.png images from the HTML\n# output directory to force them to be regenerated.\n# Minimum value: 8, maximum value: 50, default value: 10.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_FONTSIZE       = 10\n\n# Use the FORMULA_TRANPARENT tag to determine whether or not the images\n# generated for formulas are transparent PNGs. Transparent PNGs are not\n# supported properly for IE 6.0, but are supported on all modern browsers.\n#\n# Note that when changing this option you need to delete any form_*.png files in\n# the HTML output directory before the changes have effect.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_TRANSPARENT    = YES\n\n# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax (see\n# http://www.mathjax.org) which uses client side Javascript for the rendering\n# instead of using pre-rendered bitmaps. Use this if you do not have LaTeX\n# installed or if you want to formulas look prettier in the HTML output. When\n# enabled you may also need to install MathJax separately and configure the path\n# to it using the MATHJAX_RELPATH option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nUSE_MATHJAX            = NO\n\n# When MathJax is enabled you can set the default output format to be used for\n# the MathJax output. See the MathJax site (see:\n# http://docs.mathjax.org/en/latest/output.html) for more details.\n# Possible values are: HTML-CSS (which is slower, but has the best\n# compatibility), NativeMML (i.e. MathML) and SVG.\n# The default value is: HTML-CSS.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_FORMAT         = HTML-CSS\n\n# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n# MathJax from http://www.mathjax.org before deployment.\n# The default value is: http://cdn.mathjax.org/mathjax/latest.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_RELPATH        = http://cdn.mathjax.org/mathjax/latest\n\n# The MATHJAX_EXTENSIONS tag can be used to specify one or more MathJax\n# extension names that should be enabled during MathJax rendering. For example\n# MATHJAX_EXTENSIONS = TeX/AMSmath TeX/AMSsymbols\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_EXTENSIONS     =\n\n# The MATHJAX_CODEFILE tag can be used to specify a file with javascript pieces\n# of code that will be used on startup of the MathJax code. See the MathJax site\n# (see: http://docs.mathjax.org/en/latest/output.html) for more details. For an\n# example see the documentation.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_CODEFILE       =\n\n# When the SEARCHENGINE tag is enabled doxygen will generate a search box for\n# the HTML output. The underlying search engine uses javascript and DHTML and\n# should work on any modern browser. Note that when using HTML help\n# (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets (GENERATE_DOCSET)\n# there is already a search function so this one should typically be disabled.\n# For large projects the javascript based search engine can be slow, then\n# enabling SERVER_BASED_SEARCH may provide a better solution. It is possible to\n# search using the keyboard; to jump to the search box use <access key> + S\n# (what the <access key> is depends on the OS and browser, but it is typically\n# <CTRL>, <ALT>/<option>, or both). Inside the search box use the <cursor down\n# key> to jump into the search results window, the results can be navigated\n# using the <cursor keys>. Press <Enter> to select an item or <escape> to cancel\n# the search. The filter options can be selected when the cursor is inside the\n# search box by pressing <Shift>+<cursor down>. Also here use the <cursor keys>\n# to select a filter and <Enter> or <escape> to activate or cancel the filter\n# option.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nSEARCHENGINE           = YES\n\n# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using Javascript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n#\n# Doxygen ships with an example indexer (doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see: http://xapian.org/).\n#\n# See the section \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH        = NO\n\n# The SEARCHENGINE_URL should point to a search engine hosted by a web server\n# which will return the search results when EXTERNAL_SEARCH is enabled.\n#\n# Doxygen ships with an example indexer (doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see: http://xapian.org/). See the section \"External Indexing and\n# Searching\" for details.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHENGINE_URL       =\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the unindexed\n# search data is written to a file for indexing by an external tool. With the\n# SEARCHDATA_FILE tag the name of this file can be specified.\n# The default file is: searchdata.xml.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHDATA_FILE        = searchdata.xml\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the\n# EXTERNAL_SEARCH_ID tag can be used as an identifier for the project. This is\n# useful in combination with EXTRA_SEARCH_MAPPINGS to search through multiple\n# projects and redirect the results back to the right project.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH_ID     =\n\n# The EXTRA_SEARCH_MAPPINGS tag can be used to enable searching through doxygen\n# projects other than the one defined by this configuration file, but that are\n# all added to the same external search index. Each project needs to have a\n# unique id set via EXTERNAL_SEARCH_ID. The search mapping then maps the id of\n# to a relative location where the documentation can be found. The format is:\n# EXTRA_SEARCH_MAPPINGS = tagname1=loc1 tagname2=loc2 ...\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTRA_SEARCH_MAPPINGS  =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES, doxygen will generate LaTeX output.\n# The default value is: YES.\n\nGENERATE_LATEX         = NO\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_OUTPUT           = latex\n\n# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be\n# invoked.\n#\n# Note that when enabling USE_PDFLATEX this option is only used for generating\n# bitmaps for formulas in the HTML output, but not in the Makefile that is\n# written to the output directory.\n# The default file is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_CMD_NAME         = latex\n\n# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to generate\n# index for LaTeX.\n# The default file is: makeindex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nMAKEINDEX_CMD_NAME     = makeindex\n\n# If the COMPACT_LATEX tag is set to YES, doxygen generates more compact LaTeX\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nCOMPACT_LATEX          = NO\n\n# The PAPER_TYPE tag can be used to set the paper type that is used by the\n# printer.\n# Possible values are: a4 (210 x 297 mm), letter (8.5 x 11 inches), legal (8.5 x\n# 14 inches) and executive (7.25 x 10.5 inches).\n# The default value is: a4.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPAPER_TYPE             = a4\n\n# The EXTRA_PACKAGES tag can be used to specify one or more LaTeX package names\n# that should be included in the LaTeX output. The package can be specified just\n# by its name or with the correct syntax as to be used with the LaTeX\n# \\usepackage command. To get the times font for instance you can specify :\n# EXTRA_PACKAGES=times or EXTRA_PACKAGES={times}\n# To use the option intlimits with the amsmath package you can specify:\n# EXTRA_PACKAGES=[intlimits]{amsmath}\n# If left blank no extra packages will be included.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nEXTRA_PACKAGES         =\n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for the\n# generated LaTeX document. The header should contain everything until the first\n# chapter. If it is left blank doxygen will generate a standard header. See\n# section \"Doxygen usage\" for information on how to let doxygen write the\n# default header to a separate file.\n#\n# Note: Only use a user-defined header if you know what you are doing! The\n# following commands have a special meaning inside the header: $title,\n# $datetime, $date, $doxygenversion, $projectname, $projectnumber,\n# $projectbrief, $projectlogo. Doxygen will replace $title with the empty\n# string, for the replacement values of the other commands the user is referred\n# to HTML_HEADER.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HEADER           =\n\n# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for the\n# generated LaTeX document. The footer should contain everything after the last\n# chapter. If it is left blank doxygen will generate a standard footer. See\n# LATEX_HEADER for more information on how to generate a default footer and what\n# special commands can be used inside the footer.\n#\n# Note: Only use a user-defined footer if you know what you are doing!\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_FOOTER           =\n\n# The LATEX_EXTRA_STYLESHEET tag can be used to specify additional user-defined\n# LaTeX style sheets that are included after the standard style sheets created\n# by doxygen. Using this option one can overrule certain style aspects. Doxygen\n# will copy the style sheet files to the output directory.\n# Note: The order of the extra style sheet files is of importance (e.g. the last\n# style sheet in the list overrules the setting of the previous ones in the\n# list).\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_STYLESHEET =\n\n# The LATEX_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the LATEX_OUTPUT output\n# directory. Note that the files will be copied as-is; there are no commands or\n# markers available.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_FILES      =\n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated is\n# prepared for conversion to PDF (using ps2pdf or pdflatex). The PDF file will\n# contain links (just like the HTML output) instead of page references. This\n# makes the output suitable for online browsing using a PDF viewer.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPDF_HYPERLINKS         = YES\n\n# If the USE_PDFLATEX tag is set to YES, doxygen will use pdflatex to generate\n# the PDF file directly from the LaTeX files. Set this option to YES, to get a\n# higher quality PDF documentation.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nUSE_PDFLATEX           = YES\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode\n# command to the generated LaTeX files. This will instruct LaTeX to keep running\n# if errors occur, instead of asking the user for help. This option is also used\n# when generating formulas in HTML.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BATCHMODE        = NO\n\n# If the LATEX_HIDE_INDICES tag is set to YES then doxygen will not include the\n# index chapters (such as File Index, Compound Index, etc.) in the output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HIDE_INDICES     = NO\n\n# If the LATEX_SOURCE_CODE tag is set to YES then doxygen will include source\n# code with syntax highlighting in the LaTeX output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_SOURCE_CODE      = NO\n\n# The LATEX_BIB_STYLE tag can be used to specify the style to use for the\n# bibliography, e.g. plainnat, or ieeetr. See\n# http://en.wikipedia.org/wiki/BibTeX and \\cite for more info.\n# The default value is: plain.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BIB_STYLE        = plain\n\n#---------------------------------------------------------------------------\n# Configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES, doxygen will generate RTF output. The\n# RTF output is optimized for Word 97 and may not look too pretty with other RTF\n# readers/editors.\n# The default value is: NO.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: rtf.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_OUTPUT             = rtf\n\n# If the COMPACT_RTF tag is set to YES, doxygen generates more compact RTF\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated will\n# contain hyperlink fields. The RTF file will contain links (just like the HTML\n# output) instead of page references. This makes the output suitable for online\n# browsing using Word or some other Word compatible readers that support those\n# fields.\n#\n# Note: WordPad (write) and others do not support links.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's config\n# file, i.e. a series of assignments. You only have to provide replacements,\n# missing definitions are set to their default value.\n#\n# See also section \"Doxygen usage\" for information on how to generate the\n# default style sheet that doxygen normally uses.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_STYLESHEET_FILE    =\n\n# Set optional variables used in the generation of an RTF document. Syntax is\n# similar to doxygen's config file. A template extensions file can be generated\n# using doxygen -e rtf extensionFile.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_EXTENSIONS_FILE    =\n\n# If the RTF_SOURCE_CODE tag is set to YES then doxygen will include source code\n# with syntax highlighting in the RTF output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_SOURCE_CODE        = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES, doxygen will generate man pages for\n# classes and files.\n# The default value is: NO.\n\nGENERATE_MAN           = NO\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it. A directory man3 will be created inside the directory specified by\n# MAN_OUTPUT.\n# The default directory is: man.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_OUTPUT             = man\n\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_EXTENSION          = .3\n\n# The MAN_SUBDIR tag determines the name of the directory created within\n# MAN_OUTPUT in which the man pages are placed. If defaults to man followed by\n# MAN_EXTENSION with the initial . removed.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_SUBDIR             =\n\n# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_LINKS              = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES, doxygen will generate an XML file that\n# captures the structure of the code including all documentation.\n# The default value is: NO.\n\nGENERATE_XML           = NO\n\n# The XML_OUTPUT tag is used to specify where the XML pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: xml.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_OUTPUT             = xml\n\n# If the XML_PROGRAMLISTING tag is set to YES, doxygen will dump the program\n# listings (including syntax highlighting and cross-referencing information) to\n# the XML output. Note that enabling this will significantly increase the size\n# of the XML output.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_PROGRAMLISTING     = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the DOCBOOK output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_DOCBOOK tag is set to YES, doxygen will generate Docbook files\n# that can be used to generate PDF.\n# The default value is: NO.\n\nGENERATE_DOCBOOK       = NO\n\n# The DOCBOOK_OUTPUT tag is used to specify where the Docbook pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be put in\n# front of it.\n# The default directory is: docbook.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_OUTPUT         = docbook\n\n# If the DOCBOOK_PROGRAMLISTING tag is set to YES, doxygen will include the\n# program listings (including syntax highlighting and cross-referencing\n# information) to the DOCBOOK output. Note that enabling this will significantly\n# increase the size of the DOCBOOK output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_PROGRAMLISTING = NO\n\n#---------------------------------------------------------------------------\n# Configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_AUTOGEN_DEF tag is set to YES, doxygen will generate an\n# AutoGen Definitions (see http://autogen.sf.net) file that captures the\n# structure of the code including all documentation. Note that this feature is\n# still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_PRETTY         = YES\n\n# The names of the make variables in the generated doxyrules.make file are\n# prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. This is useful\n# so different doxyrules.make files included by the same Makefile don't\n# overwrite each other's variables.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_MAKEVAR_PREFIX =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES, doxygen will evaluate all\n# C-preprocessor directives found in the sources and include files.\n# The default value is: YES.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names\n# in the source code. If set to NO, only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nMACRO_EXPANSION        = NO\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES then\n# the macro expansion is limited to the macros specified with the PREDEFINED and\n# EXPAND_AS_DEFINED tags.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_ONLY_PREDEF     = NO\n\n# If the SEARCH_INCLUDES tag is set to YES, the include files in the\n# INCLUDE_PATH will be searched if a #include is found.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by the\n# preprocessor.\n# This tag requires that the tag SEARCH_INCLUDES is set to YES.\n\nINCLUDE_PATH           =\n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will be\n# used.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nINCLUDE_FILE_PATTERNS  =\n\n# The PREDEFINED tag can be used to specify one or more macro names that are\n# defined before the preprocessor is started (similar to the -D option of e.g.\n# gcc). The argument of the tag is a list of macros of the form: name or\n# name=definition (no spaces). If the definition and the \"=\" are omitted, \"=1\"\n# is assumed. To prevent a macro definition from being undefined via #undef or\n# recursively expanded use the := operator instead of the = operator.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nPREDEFINED             =\n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this\n# tag can be used to specify a list of macro names that should be expanded. The\n# macro definition that is found in the sources will be used. Use the PREDEFINED\n# tag if you want to use a different macro definition that overrules the\n# definition found in the source code.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_AS_DEFINED      =\n\n# If the SKIP_FUNCTION_MACROS tag is set to YES then doxygen's preprocessor will\n# remove all references to function-like macros that are alone on a line, have\n# an all uppercase name, and do not end with a semicolon. Such function macros\n# are typically used for boiler-plate code, and will confuse the parser if not\n# removed.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES tag can be used to specify one or more tag files. For each tag\n# file the location of the external documentation should be added. The format of\n# a tag file without this location is as follows:\n# TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n# TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where loc1 and loc2 can be relative or absolute paths or URLs. See the\n# section \"Linking to external documentation\" for more information about the use\n# of tag files.\n# Note: Each tag file must have a unique name (where the name does NOT include\n# the path). If a tag file is not located in the directory in which doxygen is\n# run, you must also specify the path to the tagfile here.\n\nTAGFILES               =\n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create a\n# tag file that is based on the input files it reads. See section \"Linking to\n# external documentation\" for more information about the usage of tag files.\n\nGENERATE_TAGFILE       =\n\n# If the ALLEXTERNALS tag is set to YES, all external class will be listed in\n# the class index. If set to NO, only the inherited external classes will be\n# listed.\n# The default value is: NO.\n\nALLEXTERNALS           = NO\n\n# If the EXTERNAL_GROUPS tag is set to YES, all external groups will be listed\n# in the modules index. If set to NO, only the current project's groups will be\n# listed.\n# The default value is: YES.\n\nEXTERNAL_GROUPS        = YES\n\n# If the EXTERNAL_PAGES tag is set to YES, all external pages will be listed in\n# the related pages index. If set to NO, only the current project's pages will\n# be listed.\n# The default value is: YES.\n\nEXTERNAL_PAGES         = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of 'which perl').\n# The default file (with absolute path) is: /usr/bin/perl.\n\nPERL_PATH              = /usr/bin/perl\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If the CLASS_DIAGRAMS tag is set to YES, doxygen will generate a class diagram\n# (in HTML and LaTeX) for classes with base or super classes. Setting the tag to\n# NO turns the diagrams off. Note that this option also works with HAVE_DOT\n# disabled, but it is recommended to install and use dot, since it yields more\n# powerful graphs.\n# The default value is: YES.\n\nCLASS_DIAGRAMS         = YES\n\n# You can define message sequence charts within doxygen comments using the \\msc\n# command. Doxygen will then run the mscgen tool (see:\n# http://www.mcternan.me.uk/mscgen/)) to produce the chart and insert it in the\n# documentation. The MSCGEN_PATH tag allows you to specify the directory where\n# the mscgen tool resides. If left empty the tool is assumed to be found in the\n# default search path.\n\nMSCGEN_PATH            =\n\n# You can include diagrams made with dia in doxygen documentation. Doxygen will\n# then run dia to produce the diagram and insert it in the documentation. The\n# DIA_PATH tag allows you to specify the directory where the dia binary resides.\n# If left empty dia is assumed to be found in the default search path.\n\nDIA_PATH               =\n\n# If set to YES the inheritance and collaboration graphs will hide inheritance\n# and usage relations if the target is undocumented or is not a class.\n# The default value is: YES.\n\nHIDE_UNDOC_RELATIONS   = YES\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz (see:\n# http://www.graphviz.org/), a graph visualization toolkit from AT&T and Lucent\n# Bell Labs. The other options in this section have no effect if this option is\n# set to NO\n# The default value is: NO.\n\nHAVE_DOT               = NO\n\n# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_NUM_THREADS        = 0\n\n# When you want a differently looking font in the dot files that doxygen\n# generates you can specify the font name using DOT_FONTNAME. You need to make\n# sure dot is able to find the font, which can be done by putting it in a\n# standard location or by setting the DOTFONTPATH environment variable or by\n# setting DOT_FONTPATH to the directory containing the font.\n# The default value is: Helvetica.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTNAME           = Helvetica\n\n# The DOT_FONTSIZE tag can be used to set the size (in points) of the font of\n# dot graphs.\n# Minimum value: 4, maximum value: 24, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTSIZE           = 10\n\n# By default doxygen will tell dot to use the default font as specified with\n# DOT_FONTNAME. If you specify a different font using DOT_FONTNAME you can set\n# the path where dot can find it using this tag.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTPATH           =\n\n# If the CLASS_GRAPH tag is set to YES then doxygen will generate a graph for\n# each documented class showing the direct and indirect inheritance relations.\n# Setting this tag to YES will force the CLASS_DIAGRAMS tag to NO.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH tag is set to YES then doxygen will generate a\n# graph for each documented class showing the direct and indirect implementation\n# dependencies (inheritance, containment, and class references variables) of the\n# class with other documented classes.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCOLLABORATION_GRAPH    = YES\n\n# If the GROUP_GRAPHS tag is set to YES then doxygen will generate a graph for\n# groups, showing the direct groups dependencies.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGROUP_GRAPHS           = YES\n\n# If the UML_LOOK tag is set to YES, doxygen will generate inheritance and\n# collaboration diagrams in a style similar to the OMG's Unified Modeling\n# Language.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LOOK               = NO\n\n# If the UML_LOOK tag is enabled, the fields and methods are shown inside the\n# class node. If there are many fields or methods and many nodes the graph may\n# become too big to be useful. The UML_LIMIT_NUM_FIELDS threshold limits the\n# number of items for each type to make the size more manageable. Set this to 0\n# for no limit. Note that the threshold may be exceeded by 50% before the limit\n# is enforced. So when you set the threshold to 10, up to 15 fields may appear,\n# but if the number exceeds 15, the total amount of fields shown is limited to\n# 10.\n# Minimum value: 0, maximum value: 100, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LIMIT_NUM_FIELDS   = 10\n\n# If the TEMPLATE_RELATIONS tag is set to YES then the inheritance and\n# collaboration graphs will show the relations between templates and their\n# instances.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nTEMPLATE_RELATIONS     = NO\n\n# If the INCLUDE_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are set to\n# YES then doxygen will generate a graph for each documented file showing the\n# direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDE_GRAPH          = YES\n\n# If the INCLUDED_BY_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are\n# set to YES then doxygen will generate a graph for each documented file showing\n# the direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDED_BY_GRAPH      = YES\n\n# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command. Disabling a call graph can be\n# accomplished by means of the command \\hidecallgraph.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALL_GRAPH             = NO\n\n# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command. Disabling a caller graph can be\n# accomplished by means of the command \\hidecallergraph.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALLER_GRAPH           = NO\n\n# If the GRAPHICAL_HIERARCHY tag is set to YES then doxygen will graphical\n# hierarchy of all classes instead of a textual one.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# If the DIRECTORY_GRAPH tag is set to YES then doxygen will show the\n# dependencies a directory has on other directories in a graphical way. The\n# dependency relations are determined by the #include relations between the\n# files in the directories.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDIRECTORY_GRAPH        = YES\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot. For an explanation of the image formats see the section\n# output formats in the documentation of the dot tool (Graphviz (see:\n# http://www.graphviz.org/)).\n# Note: If you choose svg you need to set HTML_FILE_EXTENSION to xhtml in order\n# to make the SVG files visible in IE 9+ (other browsers do not have this\n# requirement).\n# Possible values are: png, jpg, gif, svg, png:gd, png:gd:gd, png:cairo,\n# png:cairo:gd, png:cairo:cairo, png:cairo:gdiplus, png:gdiplus and\n# png:gdiplus:gdiplus.\n# The default value is: png.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_IMAGE_FORMAT       = png\n\n# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to\n# enable generation of interactive SVG images that allow zooming and panning.\n#\n# Note that this requires a modern browser other than Internet Explorer. Tested\n# and working are Firefox, Chrome, Safari, and Opera.\n# Note: For IE 9+ you need to set HTML_FILE_EXTENSION to xhtml in order to make\n# the SVG files visible. Older versions of IE do not have SVG support.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINTERACTIVE_SVG        = NO\n\n# The DOT_PATH tag can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found in the path.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_PATH               =\n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the \\dotfile\n# command).\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOTFILE_DIRS           =\n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           =\n\n# The DIAFILE_DIRS tag can be used to specify one or more directories that\n# contain dia files that are included in the documentation (see the \\diafile\n# command).\n\nDIAFILE_DIRS           =\n\n# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the\n# path where java can find the plantuml.jar file. If left blank, it is assumed\n# PlantUML is not used or called during a preprocessing step. Doxygen will\n# generate a warning when it encounters a \\startuml command in this case and\n# will not generate output for the diagram.\n\nPLANTUML_JAR_PATH      =\n\n# When using plantuml, the specified paths are searched for files specified by\n# the !include statement in a plantuml block.\n\nPLANTUML_INCLUDE_PATH  =\n\n# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_GRAPH_MAX_NODES    = 50\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nMAX_DOT_GRAPH_DEPTH    = 0\n\n# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent\n# background. This is disabled by default, because dot on Windows does not seem\n# to support this out of the box.\n#\n# Warning: Depending on the platform used, enabling this option may lead to\n# badly anti-aliased labels on the edges of a graph (i.e. they become hard to\n# read).\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_TRANSPARENT        = NO\n\n# Set the DOT_MULTI_TARGETS tag to YES to allow dot to generate multiple output\n# files in one run (i.e. multiple -o and -T options on the command line). This\n# makes dot run faster, but since only newer versions of dot (>1.8.10) support\n# this, this feature is disabled by default.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_MULTI_TARGETS      = NO\n\n# If the GENERATE_LEGEND tag is set to YES doxygen will generate a legend page\n# explaining the meaning of the various boxes and arrows in the dot generated\n# graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES, doxygen will remove the intermediate dot\n# files that are used to generate the various graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_CLEANUP            = YES\n"
        },
        {
          "name": "LIBRARIES.md",
          "type": "blob",
          "size": 5.5537109375,
          "content": "# Independent libraries offered by facil.io \n\nThe facil.io framework is based on a modular design, which means many of the modules can be extracted and used independently as separate libraries.\n\n## Single file libraries\n\nThe following libraries consist of a single header file that can be used independently.\n\nSimply copy the header file to your project and enjoy.\n\nPlease note that this isn't a comprehensive list (for example, the Base64 library and SHA256 libraries aren't mentioned).\n\n### Types:\n\nThese type libraries are designed to make many common tasks easy while offering an easy to use API.\n\nThey are all designed to use a data container (that can be allocated either on the stack or on the heap) as well as dynamic memory management, for maximum flexibility.\n\nAnd although they often prefer ease of use over performance, they are very libraries.\n\n* [Dynamic String Library](lib/facil/core/types/fiobj/fio_str.h): this library is easy to use and helps with authoring binary and C Strings.\n\n    For example:\n\n    ```c\n    // container on the stack\n    fio_str_s str = FIO_STR_INIT;\n    fio_str_write(&str, \"Hello\", 5);\n    fio_str_printf(&str, \" world, %d\", 42);\n    printf(\"%s\\n\", fio_str_data(&str)); // \"Hello world, 42\"\n    fio_str_free(&str);\n\n    // container on the heap\n    fio_str_s *str = malloc(sozeof(*str));\n    *str = FIO_STR_INIT;\n    // use ... and ... free when done:\n    fio_str_free(str);\n    free(str);\n    ```\n\n    It should be noted that short Strings (up to 30 bytes on 64bit machines) will be stored within the container without additional memory allocations, improving performance for many common use cases.\n\n* [Dynamic Array Library](lib/facil/core/types/fiobj/fio_ary.h): was designed to make dynamic arrays easy to handle.\n\n    For example:\n\n    ```c\n    // container on the stack (can also be placed on the heap).\n    fio_ary_s ary = FIO_ARY_INIT;\n    fio_ary_push(&ary, (void *)1);\n    printf(\"Array pop value: %zd\", (size_t)fio_ary_pop(&ary));\n    fio_ary_free(&ary);\n    ```\n\n* [Dynamic Hash Map Library](lib/facil/core/types/fiobj/fio_hashmap.h): was designed to make Hash maps a breeze.\n\n    The following example uses `void *` types for values and `uint64_t` types for keys, but it's easy enough to use Strings or any other data type as keys:\n\n    ```c\n    // container on the stack (can also be placed on the heap).\n    fio_hash_s hash = FIO_HASH_INIT;\n    fio_hash_insert(&hash, 1, (void *)1);\n    printf(\"Hash seek key %u => value: %zd\", 1, fio_hash_find(&hash, 1));\n    printf(\"Hash seek key %u => value: %zd\", 2, fio_hash_find(&hash, 2));\n    fio_hash_free(&ary); // use FIO_HASH_FOR_FREE to free object data or custom keys.\n    ```\n\n\n* [Linked Lists Library](lib/facil/core/types/fiobj/fio_llist.h): was designed to make linked lists a breeze.\n\n    The library supports both flavors of linked lists, external (node contains a pointer) and embedded (nodes contain actual data).\n\n### Parsers:\n\nThe single header parser libraries often declare callbacks that should be defined (implemented) by the file that includes the library.\n\nFor example, the JSON parser expects the client to implement the `fio_json_on_null`. The callbacks should be used to build the data structure that contains the results.\n\nThese single-file parsers include:\n\n* [JSON parser](lib/facil/core/types/fiobj/fio_json_parser.h): JSON stands for JavaScript Object Notation and is commonly used for data exchange. More details about JSON at [json.org](http://json.org).\n\n* [Mustache template parser](lib/facil/core/types/fiobj/mustache_parser.h): Mustache is a templating scheme. More details about mustache at [mustache.github.io](http://mustache.github.io).\n\n* [RESP parser](lib/facil/redis/resp_parser.h): RESP (REdis Serialization Protocol) is the protocol used by Redis for data transfer and communications. More details about RESP at [redis.io](https://redis.io/topics/protocol).\n\n* [WebSockets parser](lib/facil/http/parsers/mustache_parser.h): WebSockets are used for bi-directional communication across the web. Unlike raw TCP/IP, this added layer converts the communication scheme from streaming based communication to message based communication, preserving message boundaries. More details about WebSockets at [websocket.org](https://www.websocket.org/aboutwebsocket.html).\n\n* [MIME Multipart parser](ib/facil/http/parsers/http_mime_parser.h): This parser decodes HTTP multipart data used in form data submissions (i.e., when uploading a file or submitting a form using POST). More details about MIME at [wikipedia.org](https://en.wikipedia.org/wiki/MIME).\n\nAn honorary mention goes out to the HTTP/1.1 parser. It is a 2 file parser library ([header file](lib/facil/http/parsers/http1_parser.h) and [source file](lib/facil/http/parsers/http1_parser.c)) that is totally independent from the IO layer or the rest of facil.io.\n\n## Two File Libraries\n\nThe following libraries consist of both a header and a source file that can be used independently.\n\nSimply copy both files to your project and enjoy.\n\n### Memory Allocator\n\nThe `fio_mem` library is a custom memory allocator that was designed for network use, minimizing lock contention and offering minimal allocation overhead.\n\nI wrote it to solve an issue I had with memory fragmentation and race conditions during multi-threaded allocations.\n\nThe allocator doesn't return all the memory to the system. Instead, there's a memory pool that is retained, improving concurrency even across process borders by minimizing system calls.\n\nMore details can be found in [the header file `fio_mem.h`](lib/facil/core/types/fiobj/fio_mem.h) and [the implementation file `fio_mem.c`](lib/facil/core/types/fiobj/fio_mem.c).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2016-2019 Boaz Segev\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 1.375,
          "content": "This software is modular (i.e., the `fiobj` and `evio` modules) and each module should be considered independantly licensed under the MIT license.\n\nThis software implements cryptographic algorithms such as SHA1, SHA2 and SipHash.\n\nIt should be noted that different countries might restrict the use / importation (download) of cryptographic devices / software. You should make sure to comply with the laws of the appilicable country/countries.\n\nThese algorithms might be subject to their own copyrights, patents and licenses, though I couldn't find any that apply I really don't know - you should test this on your own.\n\n---\nSipHash - from https://131002.net/siphash/\n\n> We aren't aware of any patents or patent applications relevant to SipHash. SipHash was designed by:\n> * Jean-Philippe Aumasson (Kudelski Security, Switzerland)\n> * Daniel J. Bernstein (University of Illinois at Chicago, USA)\n\n---\nSHA1 and SHA2\n\nSHA1 and SHA2 seem to be in the public domain, developed by/for NASA.\n\n---\n\nThe single string, binary, glob matching helper function `fio_glob_match` was **rewritten** (I don't know if the original copyright remains) and adapted from:\nhttps://github.com/opnfv/kvmfornfv/blob/465249b61b72d33fe1fad8d43da332faef22bec0/kernel/lib/glob.c#L12-L122\n\nLicensed under the MIT license, the original code's copyright is as follows:\nCopyright 2015 Open Platform for NFV Project, Inc. and its contributors\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.876953125,
          "content": "<p align=\"center\"><img src=\"https://s33.postimg.cc/5d7j1nacf/Readme_1.jpg\"></p>\n\n[![GitHub](https://img.shields.io/badge/Open%20Source-MIT-blue.svg)](https://github.com/boazsegev/facil.io)\n[![Build Status](https://travis-ci.org/boazsegev/facil.io.svg?branch=master)](https://travis-ci.org/boazsegev/facil.io)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/2abeba588afb444ca6d92e68ccfbe36b)](https://www.codacy.com/app/boazsegev/facil.io?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=boazsegev/facil.io&amp;utm_campaign=Badge_Grade)\n[![codecov](https://codecov.io/gh/boazsegev/facil.io/branch/master/graph/badge.svg)](https://codecov.io/gh/boazsegev/facil.io)\n\n[facil.io](http://facil.io) is a C micro-framework for web applications. facil.io includes:\n\n* A fast HTTP/1.1 and Websocket static file + application server.\n* Support for custom network protocols for both server and client connections.\n* Dynamic types designed with web applications in mind (Strings, Hashes, Arrays etc').\n* Performant JSON parsing and formatting for easy network communication.\n* A pub/sub process cluster engine for local and Websocket pub/sub.\n* Optional connectivity with Redis.\n\n[facil.io](http://facil.io) provides high performance TCP/IP network services to Linux / BSD (and macOS) by using an evented design (as well as thread pool and forking support) and provides an easy solution to [the C10K problem](http://www.kegel.com/c10k.html).\n\nYou can read more about [facil.io](http://facil.io) on the [facil.io](http://facil.io) website.\n\n### Important to Note\n\nThe master branch on the `git` repo is the development branch and is likely to be broken at any given time (especially when working on major revisions, as I am at the moment).\n\nPlease select a release version for any production needs.\n\n### Who's running on `facil.io`\n\n* [Iodine, a Ruby HTTP/Websockets Ruby application server](https://github.com/boazsegev/iodine) is powered by `facil.io` - so everyone using the iodine server is running on facil.io.\n\n* Are you using `facil.io`? Let me know!\n\n### An HTTP example\n\n```c\n#include \"http.h\" /* the HTTP facil.io extension */\n\n// We'll use this callback in `http_listen`, to handles HTTP requests\nvoid on_request(http_s *request);\n\n// These will contain pre-allocated values that we will use often\nFIOBJ HTTP_X_DATA;\n\n// Listen to HTTP requests and start facil.io\nint main(int argc, char const **argv) {\n  // allocating values we use often\n  HTTP_X_DATA = fiobj_str_new(\"X-Data\", 6);\n  // listen on port 3000 and any available network binding (NULL == 0.0.0.0)\n  http_listen(\"3000\", NULL, .on_request = on_request, .log = 1);\n  // start the server\n  facil_start(.threads = 1);\n  // deallocating the common values\n  fiobj_free(HTTP_X_DATA);\n}\n\n// Easy HTTP handling\nvoid on_request(http_s *request) {\n  http_set_cookie(request, .name = \"my_cookie\", .name_len = 9, .value = \"data\",\n                  .value_len = 4);\n  http_set_header(request, HTTP_HEADER_CONTENT_TYPE,\n                  http_mimetype_find(\"txt\", 3));\n  http_set_header(request, HTTP_X_DATA, fiobj_str_new(\"my data\", 7));\n  http_send_body(request, \"Hello World!\\r\\n\", 14);\n}\n```\n\n## Using `facil.io` in your project\n\nIt's possible to either start a new project with `facil.io` or simply add it to an existing one. GNU `make` is the default build system and CMake is also supported.\n\n`facil.io` should be C99 compatible.\n\n### Starting a new project with `facil.io`\n\nTo start a new project using the `facil.io` framework, run the following command in the terminal (change `appname` to whatever you want):\n\n     $ bash <(curl -s https://raw.githubusercontent.com/boazsegev/facil.io/master/scripts/new/app) appname\n\nYou can [review the script here](scripts/new/app). In short, it will create a new folder, download a copy of the stable branch, add some demo boiler plate code and run `make clean` (which is required to build the `tmp` folder structure).\n\nNext, edit the `makefile` to remove any generic features you don't need, such as the `DUMP_LIB` feature, the `DEBUG` flag or the `DISAMS` disassembler and start development.\n\nCredit to @benjcal for suggesting the script.\n\n**Notice: The *master* branch is the development branch. Please select the latest release tag for the latest stable release version.**\n\n### Adding facil.io to an existing project\n\n[facil.io](http://facil.io) is a source code library, so it's easy to copy the source code into an existing project and start using the library right away.\n\nThe `make libdump` command will dump all the relevant files in a single folder called `libdump`, and you can copy them all or divide them into header ands source files.\n\nIt's also possible to compile the facil.io library separately using the `make lib` command.\n\n### Using `facil.io` as a CMake submodule\n\n[facil.io](http://facil.io) also supports both `git` and CMake submodules. Credit to @OwenDelahoy (PR#8).\n\nFirst, add the repository as a submodule using `git`:\n\n    git submodule add https://github.com/boazsegev/facil.io.git\n\nThen add the following line the project's `CMakeLists.txt`\n\n    add_subdirectory(facil.io)\n\n### Using `facil.io` with Meson\n\n[facil.io](http://facil.io) is available at [Meson Wrap DB](https://wrapdb.mesonbuild.com/facil).\n\nFirst, install the wrap file:\n\n    meson wrap install facil\n\nThen add the following line to your project's `meson.build`:\n\n    facil_dep = subproject('facil').get_variable('facil_dep')\n\n## More Examples\n\nThe examples folder includes code examples for a [telnet echo protocol](examples/raw-echo.c), a [Simple Hello World server](examples/raw-http.c), an example for [Websocket pub/sub with (optional) Redis](examples/http-chat.c), etc'.\n\nYou can find more information on the [facil.io](http://facil.io) website\n\n---\n\n## Forking, Contributing and all that Jazz\n\n[The contribution guide can be found here](CONTRIBUTING.md).\n\nSure, why not. If you can add Solaris or Windows support to `evio` and `sock`, that could mean `facil` would become available for use on these platforms as well.\n\nIf you encounter any issues, open an issue (or, even better, a pull request with a fix) - that would be great :-)\n\nHit me up if you want to:\n\n* Write tests... I always need more tests...\n\n* Help me write HPACK / HTTP2 protocol support.\n\n* Help me design / write a generic HTTP routing helper library for the `http_s` struct.\n\n* If you want to help me write a new SSL/TLS library or have an SSL/TLS solution we can fit into `facil` (as source code)... Note: SSL/TLS solutions should fit both client and server modes.\n\n* If you want to help promote the library, that would be great as well. Perhaps publish [benchmarks](https://github.com/TechEmpower/FrameworkBenchmarks) or share your story.\n\n* Writing documentation into the `facil.io` website would be great. I keep the source code documentation fairly updated, but the documentation should be copied to the `docs` folder to get the documentation website up and running.\n\n<p align=\"center\"><img src=\"https://s33.postimg.cc/seo47ha0v/Readme_2.jpg\"></p>\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "makefile",
          "type": "blob",
          "size": 34.4921875,
          "content": "#############################################################################\n# This makefile was composed for facil.io\n#\n# Copyright (c) 2016-2020 Boaz Segev\n# License MIT or ISC\n#\n# This makefile SHOULD be easilty portable and Should work on any POSIX\n# system for any project... under the following assumptions:\n#\n# * If your code has a `main` function, that code should be placed in the\n#   `MAIN_ROOT` folder and/or `MAIN_SUBFOLDERS` (i.e., `./src`).\n#\n# * If your code provides a library style API, the published functions are\n#   in the `LIB_ROOT` folder and/or `LIB_XXX_SUBFOLDERS` (i.e., `./lib`).\n#\n# * If you want to concat a number of header / source / markdown (docs) files\n#   than place them in the `LIB_CONCAT_FOLDER`.\n#\n# * Test files are independent (each test files compiles and runs as is) and\n#   placed in the `TEST_ROOT` folder (i.e., `./tests`).\n#\n#   Run tests (i.e., the test file `foo.c`) with:       `make test/foo`\n#   Run tests after linking with the library code with: `make test/lib/foo`\n#\n#############################################################################\n\n#############################################################################\n# Compliation Output Settings\n#############################################################################\n\n# binary name and location\nNAME?=fioapp\n\n# a temporary folder that will be cleared out and deleted between fresh builds\n# All object files will be placed in this folder\nTMP_ROOT=tmp\n\n# destination folder for the final compiled output\nDEST?=$(TMP_ROOT)\n\n# output folder for `make libdump` - dumps all library files (not source files) in one place.\nDUMP_LIB?=libdump\n\n#############################################################################\n# Source Code Folder Settings\n#############################################################################\n\n# the main source .c and .cpp source files root folder\nMAIN_ROOT=src\n# subfolders under the main source root\nMAIN_SUBFOLDERS=\n\n#############################################################################\n# Library Folder Settings\n#############################################################################\n\n# the library .c and .cpp source files root folder\nLIB_ROOT=lib\n\n# publicly used subfolders in the lib root\nLIB_PUBLIC_SUBFOLDERS=facil facil/tls facil/fiobj facil/cli facil/http facil/http/parsers facil/redis\n\n# privately used subfolders in the lib root (this distinction is only relevant for CMake)\nLIB_PRIVATE_SUBFOLDERS=\n\n#############################################################################\n# Single Library Concatenation\n#############################################################################\n\n# a folder containing code that should be unified into a single file\n#\n# Note: files will be unified in the same order the system provides (usually, file anme)\nLIB_CONCAT_FOLDER?=\n# the path and file name to use when unifying *.c, *.h, and *.md files (without extension).\nLIB_CONCAT_TARGET?=\n\n#############################################################################\n# Test Source Code Folder\n#############################################################################\n\n# Testing folder\nTEST_ROOT=tests\n# The default test file to run when running: make test (without the  C extension)\nTEST_DEFAULT=tests\n\n#############################################################################\n# CMake Support\n#############################################################################\n\n# The library details for CMake incorporation. Can be safely removed.\nCMAKE_FILENAME=CMakeLists.txt\n# Project name to be stated in the CMakeFile\nCMAKE_PROJECT=facil.io\n# Space delimited list of required packages\nCMAKE_REQUIRE_PACKAGE=Threads\n\n#############################################################################\n# Compiler / Linker Settings\n#############################################################################\n\n# any libraries required (only names, ommit the \"-l\" at the begining)\nLINKER_LIBS=pthread m\n# optimization level.\nOPTIMIZATION=-O2 -march=native -DNDEBUG\n# optimization level in debug mode.\nOPTIMIZATION_DEBUG=-O0 -march=native -fsanitize=address -fsanitize=thread -fsanitize=undefined -fno-omit-frame-pointer\n# Warnings... i.e. -Wpedantic -Weverything -Wno-format-pedantic\nWARNINGS=-Wshadow -Wall -Wextra -Wpedantic -Wno-missing-field-initializers -Wno-embedded-directive\n# any extra include folders, space seperated list. (i.e. `pg_config --includedir`)\nINCLUDE=./\n# any preprocessosr defined flags we want, space seperated list (i.e. DEBUG )\nFLAGS:=\n# c compiler\nCC?=gcc\n# c++ compiler\nCXX?=g++\n# C specific compiler options\nC_EXTRA_OPT:=\n# C++ specific compiler options\nCXX_EXTRA_OPT:=-Wno-keyword-macro -Wno-vla-extension -Wno-c99-extensions -Wno-zero-length-array -Wno-variadic-macros\n# c standard   (if any, without the `-std=` prefix, i.e.: c11)\nCSTD?=gnu11\n# c++ standard (if any, without the `-std=` prefix, i.e.: c++11)\nCXXSTD?=gnu++11\n# pkg-config\nPKG_CONFIG?=pkg-config\n# for internal use - don't change\nLINKER_LIBS_EXT:=\n\n#############################################################################\n# Debug Settings\n#############################################################################\n\n# add DEBUG flag if requested\nifeq ($(DEBUG), 1)\n  $(info * Detected DEBUG environment flag, enforcing debug mode compilation)\n  FLAGS:=$(FLAGS) DEBUG\n  # # comment the following line if you want to use a different address sanitizer or a profiling tool.\n  OPTIMIZATION:=$(OPTIMIZATION_DEBUG)\n  # possibly useful:  -Wconversion -Wcomma -fsanitize=undefined -Wshadow\n  # go crazy with clang: -Weverything -Wno-cast-qual -Wno-used-but-marked-unused -Wno-reserved-id-macro -Wno-padded -Wno-disabled-macro-expansion -Wno-documentation-unknown-command -Wno-bad-function-cast -Wno-missing-prototypes\nelse\n  FLAGS:=$(FLAGS) NDEBUG NODEBUG\nendif\n\n#############################################################################\n# Makefile Runtime Tests (sets flags, such as HAVE_OPENSSL)\n#############################################################################\n\n# Tests are performed unless the value is empty / missing\n\nTEST4POLL:=1      # HAVE_KQUEUE / HAVE_EPOLL / HAVE_POLL\nTEST4SOCKET:=1    # --- tests for socket library linker flags\nTEST4CRYPTO:=1    # HAVE_OPENSSL / HAVE_BEARSSL + HAVE_SODIUM\nTEST4SENDFILE:=1  # HAVE_SENDFILE\nTEST4TM_ZONE:=1   # HAVE_TM_TM_ZONE\nTEST4ZLIB:=       # HAVE_ZLIB\nTEST4PG:=         # HAVE_POSTGRESQL\nTEST4ENDIAN:=1    # __BIG_ENDIAN__=?\n\n#############################################################################\n# facil.io compilation flag helpers\n#############################################################################\n\n# add FIO_PRINT_STATE flag if requested\nifdef FIO_PRINT\n  $(warning FIO_PRINT_STATE is deprecated. FIO_PRINT support will be removed soon.)\n  FLAGS:=$(FLAGS) FIO_PRINT_STATE=$(FIO_PRINT)\nendif\n\n# add FIO_PUBSUB_SUPPORT flag if requested\nifdef FIO_PUBSUB_SUPPORT\n  FLAGS:=$(FLAGS) FIO_PUBSUB_SUPPORT=$(FIO_PUBSUB_SUPPORT)\nendif\n\n#############################################################################\n# OS Specific Settings (debugger, disassembler, etc')\n#############################################################################\n\n\nifneq ($(OS),Windows_NT)\n  OS:=$(shell uname)\nelse\n  $(warning *** Windows systems might not work with this makefile / library.)\nendif\nifeq ($(OS),Darwin) # Run MacOS commands\n  # debugger\n  DB=lldb\n  # disassemble tool. Use stub to disable.\n  # DISAMS=otool -dtVGX\n  # documentation commands\n  # DOCUMENTATION=cldoc generate $(INCLUDE_STR) -- --output ./html $(foreach dir, $(LIB_PUBLIC_SUBFOLDERS), $(wildcard $(addsuffix /, $(basename $(dir)))*.h*))\n  # rule modifier (can't be indented)\n$(DEST)/libfacil.so: LDFLAGS+=-dynamiclib -install_name $(realpath $(DEST))/libfacil.so\nelse\n  # debugger\n  DB=gdb\n  # disassemble tool, leave undefined.\n  # DISAMS=otool -tVX\n  # documentation commands\n  DOCUMENTATION=\nendif\n\n#############################################################################\n# Automatic Setting Expansion\n# (don't edit)\n#############################################################################\n\nBIN=$(DEST)/$(NAME)\n\nLIBDIR_PUB=$(LIB_ROOT) $(foreach dir, $(LIB_PUBLIC_SUBFOLDERS), $(addsuffix /,$(basename $(LIB_ROOT)))$(dir))\nLIBDIR_PRIV=$(foreach dir, $(LIB_PRIVATE_SUBFOLDERS), $(addsuffix /,$(basename $(LIB_ROOT)))$(dir))\n\nLIBDIR=$(LIBDIR_PUB) $(LIBDIR_PRIV)\nLIBSRC=$(foreach dir, $(LIBDIR), $(wildcard $(addsuffix /, $(basename $(dir)))*.c*))\n\nMAINDIR=$(MAIN_ROOT) $(foreach main_root, $(MAIN_ROOT) , $(foreach dir, $(MAIN_SUBFOLDERS), $(addsuffix /,$(basename $(main_root)))$(dir)))\nMAINSRC=$(foreach dir, $(MAINDIR), $(wildcard $(addsuffix /, $(basename $(dir)))*.c*))\n\nFOLDERS=$(LIBDIR) $(MAINDIR) $(TEST_ROOT)\nSOURCES=$(LIBSRC) $(MAINSRC)\n\nBUILDTREE=$(TMP_ROOT) $(foreach dir, $(FOLDERS), $(addsuffix /, $(basename $(TMP_ROOT)))$(basename $(dir)))\n\nCCL=$(CC)\n\nINCLUDE_STR=$(foreach dir,$(INCLUDE),$(addprefix -I, $(dir))) $(foreach dir,$(FOLDERS),$(addprefix -I, $(dir)))\n\nMAIN_OBJS=$(foreach source, $(MAINSRC), $(addprefix $(TMP_ROOT)/, $(addsuffix .o, $(basename $(source)))))\nLIB_OBJS=$(foreach source, $(LIBSRC), $(addprefix $(TMP_ROOT)/, $(addsuffix .o, $(basename $(source)))))\n\nOBJS_DEPENDENCY:=$(LIB_OBJS:.o=.d) $(MAIN_OBJS:.o=.d) \n\n#############################################################################\n# Combining single-file library\n#############################################################################\n\nifdef LIB_CONCAT_FOLDER\nifdef LIB_CONCAT_TARGET\nLIB_CONCAT_HEADERS=$(wildcard $(LIB_CONCAT_FOLDER)/*.h)\nLIB_CONCAT_SOURCES=$(wildcard $(LIB_CONCAT_FOLDER)/*.c)\nLIB_CONCAT_DOCS=$(wildcard $(LIB_CONCAT_FOLDER)/*.md)\nifneq ($(LIB_CONCAT_HEADERS), $(EMPTY))\n  $(info * Building single-file header: $(LIB_CONCAT_TARGET).h)\n  $(shell rm $(LIB_CONCAT_TARGET).h 2> /dev/null)\n  $(shell cat $(LIB_CONCAT_FOLDER)/*.h >> $(LIB_CONCAT_TARGET).h)\nendif\nifneq ($(LIB_CONCAT_SOURCES), $(EMPTY))\n  $(info * Building single-file source: $(LIB_CONCAT_TARGET).c)\n  $(shell rm $(LIB_CONCAT_TARGET).c 2> /dev/null)\n  $(shell cat $(LIB_CONCAT_FOLDER)/*.c >> $(LIB_CONCAT_TARGET).c)\nendif\nifneq ($(LIB_CONCAT_DOCS), $(EMPTY))\n  $(info * Building documentation: $(LIB_CONCAT_TARGET).md)\n  $(shell rm $(LIB_CONCAT_TARGET).md 2> /dev/null)\n  $(shell cat $(LIB_CONCAT_FOLDER)/*.md >> $(LIB_CONCAT_TARGET).md)\nendif\n\nendif\nendif\n\n#############################################################################\n# TRY_RUN, TRY_COMPILE and TRY_COMPILE_AND_RUN functions\n#\n# Call using $(call TRY_COMPILE, code, compiler_flags)\n#\n# Returns shell code as string: \"0\" (success) or non-0 (failure)\n#\n# TRY_COMPILE_AND_RUN returns the program's shell code as string.\n#############################################################################\n\nTRY_RUN=$(shell $(1) >> /dev/null 2> /dev/null; echo $$?;)\nTRY_COMPILE=$(shell printf $(1) | $(CC) $(INCLUDE_STR) $(CFLAGS) -xc -o /dev/null - $(LDFLAGS) $(2) >> /dev/null 2> /dev/null ; echo $$? 2> /dev/null)\nTRY_COMPILE_AND_RUN=$(shell printf $(1) | $(CC) $(INCLUDE_STR) $(CFLAGS) -xc -o ./___fio_tmp_test_ - $(LDFLAGS) $(2) 2> /dev/null ; ./___fio_tmp_test_ >> /dev/null 2> /dev/null; echo $$?; rm ./___fio_tmp_test_ 2> /dev/null)\nEMPTY:=\n\n#############################################################################\n# GCC bug handling.\n#\n# GCC might trigger a bug when -fipa-icf is enabled and (de)constructor\n# functions are used (as in our case with -O2 or above).\n#\n# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=70306\n#############################################################################\n\nifeq ($(shell $(CC) -v 2>&1 | grep -o \"^gcc version [0-7]\\.\" | grep -o \"^gcc version\"),gcc version)\n  OPTIMIZATION+=-fno-ipa-icf\n  $(info * Disabled `-fipa-icf` optimization, might be buggy with this gcc version.)\nendif\n\n#############################################################################\n# kqueue / epoll / poll Selection / Detection\n# (no need to edit)\n#############################################################################\nifdef TEST4POLL\n\nFIO_POLL_TEST_KQUEUE:=\"\\\\n\\\n\\#define _GNU_SOURCE\\\\n\\\n\\#include <stdlib.h>\\\\n\\\n\\#include <sys/event.h>\\\\n\\\nint main(void) {\\\\n\\\n  int fd = kqueue();\\\\n\\\n}\\\\n\\\n\"\n\nFIO_POLL_TEST_EPOLL:=\"\\\\n\\\n\\#define _GNU_SOURCE\\\\n\\\n\\#include <stdlib.h>\\\\n\\\n\\#include <stdio.h>\\\\n\\\n\\#include <sys/types.h>\\\\n\\\n\\#include <sys/stat.h>\\\\n\\\n\\#include <fcntl.h>\\\\n\\\n\\#include <sys/epoll.h>\\\\n\\\nint main(void) {\\\\n\\\n  int fd = epoll_create1(EPOLL_CLOEXEC);\\\\n\\\n}\\\\n\\\n\"\n\nFIO_POLL_TEST_POLL:=\"\\\\n\\\n\\#define _GNU_SOURCE\\\\n\\\n\\#include <stdlib.h>\\\\n\\\n\\#include <poll.h>\\\\n\\\nint main(void) {\\\\n\\\n  struct pollfd plist[18];\\\\n\\\n  memset(plist, 0, sizeof(plist[0]) * 18);\\\\n\\\n  poll(plist, 1, 1);\\\\n\\\n}\\\\n\\\n\"\n\n# Test for manual selection and then TRY_COMPILE with each polling engine\nifdef FIO_POLL\n  $(info * Skipping polling tests, enforcing manual selection of: poll)\n  FLAGS+=FIO_ENGINE_POLL HAVE_POLL\nelse ifdef FIO_FORCE_POLL\n  $(info * Skipping polling tests, enforcing manual selection of: poll)\n  FLAGS+=FIO_ENGINE_POLL HAVE_POLL\nelse ifdef FIO_FORCE_EPOLL\n  $(info * Skipping polling tests, enforcing manual selection of: epoll)\n  FLAGS+=FIO_ENGINE_EPOLL HAVE_EPOLL\nelse ifdef FIO_FORCE_KQUEUE\n  $(info * Skipping polling tests, enforcing manual selection of: kqueue)\n  FLAGS+=FIO_ENGINE_KQUEUE HAVE_KQUEUE\nelse ifeq ($(call TRY_COMPILE, $(FIO_POLL_TEST_EPOLL), $(EMPTY)), 0)\n  $(info * Detected `epoll`)\n  FLAGS+=HAVE_EPOLL\nelse ifeq ($(call TRY_COMPILE, $(FIO_POLL_TEST_KQUEUE), $(EMPTY)), 0)\n  $(info * Detected `kqueue`)\n  FLAGS+=HAVE_KQUEUE\nelse ifeq ($(call TRY_COMPILE, $(FIO_POLL_TEST_POLL), $(EMPTY)), 0)\n  $(info * Detected `poll` - this is suboptimal fallback!)\n  FLAGS+=HAVE_POLL\nelse\n$(warning No supported polling engine! won't be able to compile facil.io)\nendif\n\nendif # TEST4POLL\n#############################################################################\n# Detecting The `sendfile` System Call\n# (no need to edit)\n#############################################################################\nifdef TEST4SENDFILE\n\n# Linux variation\nFIO_SENDFILE_TEST_LINUX:=\"\\\\n\\\n\\#define _GNU_SOURCE\\\\n\\\n\\#include <stdlib.h>\\\\n\\\n\\#include <stdio.h>\\\\n\\\n\\#include <sys/sendfile.h>\\\\n\\\nint main(void) {\\\\n\\\n  off_t offset = 0;\\\\n\\\n  ssize_t result = sendfile(2, 1, (off_t *)&offset, 300);\\\\n\\\n}\\\\n\\\n\"\n\n# BSD variation\nFIO_SENDFILE_TEST_BSD:=\"\\\\n\\\n\\#define _GNU_SOURCE\\\\n\\\n\\#include <stdlib.h>\\\\n\\\n\\#include <stdio.h>\\\\n\\\n\\#include <sys/types.h>\\\\n\\\n\\#include <sys/socket.h>\\\\n\\\n\\#include <sys/uio.h>\\\\n\\\nint main(void) {\\\\n\\\n  off_t sent = 0;\\\\n\\\n  off_t offset = 0;\\\\n\\\n  ssize_t result = sendfile(2, 1, offset, (size_t)sent, NULL, &sent, 0);\\\\n\\\n}\\\\n\\\n\"\n\n# Apple variation\nFIO_SENDFILE_TEST_APPLE:=\"\\\\n\\\n\\#define _GNU_SOURCE\\\\n\\\n\\#include <stdlib.h>\\\\n\\\n\\#include <stdio.h>\\\\n\\\n\\#include <sys/types.h>\\\\n\\\n\\#include <sys/socket.h>\\\\n\\\n\\#include <sys/uio.h>\\\\n\\\nint main(void) {\\\\n\\\n  off_t sent = 0;\\\\n\\\n  off_t offset = 0;\\\\n\\\n  ssize_t result = sendfile(2, 1, offset, &sent, NULL, 0);\\\\n\\\n}\\\\n\\\n\"\n\nifeq ($(call TRY_COMPILE, $(FIO_SENDFILE_TEST_LINUX), $(EMPTY)), 0)\n  $(info * Detected `sendfile` (Linux))\n  FLAGS+=USE_SENDFILE_LINUX HAVE_SENDFILE\nelse ifeq ($(call TRY_COMPILE, $(FIO_SENDFILE_TEST_BSD), $(EMPTY)), 0)\n  $(info * Detected `sendfile` (BSD))\n  FLAGS+=USE_SENDFILE_BSD HAVE_SENDFILE\nelse ifeq ($(call TRY_COMPILE, $(FIO_SENDFILE_TEST_APPLE), $(EMPTY)), 0)\n  $(info * Detected `sendfile` (Apple))\n  FLAGS+=USE_SENDFILE_APPLE HAVE_SENDFILE\nelse\n  $(info * No `sendfile` support detected.)\n  FLAGS:=$(FLAGS) USE_SENDFILE=0\nendif\n\nendif # TEST4SENDFILE\n#############################################################################\n# Detecting 'struct tm' fields\n# (no need to edit)\n#############################################################################\nifdef TEST4TM_ZONE\n\nFIO_TEST_STRUCT_TM_TM_ZONE:=\"\\\\n\\\n\\#define _GNU_SOURCE\\\\n\\\n\\#include <time.h>\\\\n\\\nint main(void) {\\\\n\\\n  struct tm tm;\\\\n\\\n  tm.tm_zone = \\\"UTC\\\";\\\\n\\\n  return 0;\\\\n\\\n}\\\\n\\\n\"\n\nifeq ($(call TRY_COMPILE, $(FIO_TEST_STRUCT_TM_TM_ZONE), $(EMPTY)), 0)\n  $(info * Detected 'tm_zone' field in 'struct tm')\n  FLAGS:=$(FLAGS) HAVE_TM_TM_ZONE=1\nendif\n\nendif # TEST4TM_ZONE\n#############################################################################\n# Detecting SystemV socket libraries\n# (no need to edit)\n#############################################################################\nifdef TEST4SOCKET\n\nFIO_TEST_SOCKET_AND_NETWORK_SERVICE:=\"\\\\n\\\n\\#include <sys/types.h>\\\\n\\\n\\#include <sys/socket.h>\\\\n\\\n\\#include <netinet/in.h>\\\\n\\\n\\#include <arpa/inet.h>\\\\n\\\nint main(void) {\\\\n\\\n  struct sockaddr_in addr = { .sin_port = 0 };\\\\n\\\n  int fd = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\\\\n\\\n  if(fd == -1) return 1;\\\\n\\\n  if(inet_pton(AF_INET, \\\"127.0.0.1\\\", &addr.sin_addr) < 1) return 1;\\\\n\\\n  return connect(fd, (struct sockaddr *)&addr, sizeof addr) < 0 ? 1 : 0;\\\\n\\\n}\\\\n\\\n\"\n\nifeq ($(call TRY_COMPILE, $(FIO_TEST_SOCKET_AND_NETWORK_SERVICE), $(EMPTY)), 0)\n  $(info * Detected native socket API, without additional libraries)\nelse ifeq ($(call TRY_COMPILE, $(FIO_TEST_SOCKET_AND_NETWORK_SERVICE), \"-lsocket\" \"-lnsl\"), 0)\n  $(info * Detected socket API from libsocket and libnsl)\n  LINKER_LIBS_EXT:=$(LINKER_LIBS_EXT) socket nsl\nelse\n  $(warning No socket API detected - won't be able to compile facil.io)\nendif\n\nendif # TEST4SOCKET\n#############################################################################\n# SSL/ TLS Library Detection\n# (no need to edit)\n#############################################################################\nifdef TEST4CRYPTO\n\n# BearSSL requirement C application code\n# (source code variation)\nFIO_TLS_TEST_BEARSSL_SOURCE:=\"\\\\n\\\n\\#define _GNU_SOURCE\\\\n\\\n\\#include <stdlib.h>\\\\n\\\n\\#include <bearssl.h>\\\\n\\\nint main(void) {\\\\n\\\n}\\\\n\\\n\"\n\n# BearSSL requirement C application code\n# (linked library variation)\nFIO_TLS_TEST_BEARSSL_EXT:=\"\\\\n\\\n\\#define _GNU_SOURCE\\\\n\\\n\\#include <stdlib.h>\\\\n\\\n\\#include <bearssl.h>\\\\n\\\nint main(void) {\\\\n\\\n}\\\\n\\\n\"\n\n# OpenSSL requirement C application code\nFIO_TLS_TEST_OPENSSL:=\"\\\\n\\\n\\#define _GNU_SOURCE\\\\n\\\n\\#include <stdlib.h>\\\\n\\\n\\#include <openssl/bio.h> \\\\n\\\n\\#include <openssl/err.h> \\\\n\\\n\\#include <openssl/ssl.h> \\\\n\\\n\\#if OPENSSL_VERSION_NUMBER < 0x10100000L \\\\n\\\n\\#error \\\"OpenSSL version too small\\\" \\\\n\\\n\\#endif \\\\n\\\nint main(void) { \\\\n\\\n  SSL_library_init(); \\\\n\\\n  SSL_CTX *ctx = SSL_CTX_new(TLS_method()); \\\\n\\\n  SSL *ssl = SSL_new(ctx); \\\\n\\\n  BIO *bio = BIO_new_socket(3, 0); \\\\n\\\n  BIO_up_ref(bio); \\\\n\\\n  SSL_set0_rbio(ssl, bio); \\\\n\\\n  SSL_set0_wbio(ssl, bio); \\\\n\\\n}\\\\n\\\n\"\n\n# automatic library adjustments for possible BearSSL library\nLIB_PRIVATE_SUBFOLDERS:=$(LIB_PRIVATE_SUBFOLDERS) $(if $(wildcard lib/bearssl),bearssl)\n\n# default OpenSSL flags\nOPENSSL_CFLAGS:=\nOPENSSL_LIBS:=\nOPENSSL_LDFLAGS:=\"-lssl\" \"-lcrypto\"\n# detect OpenSSL flags using pkg-config, if available\nifeq ($(shell $(PKG_CONFIG) -- openssl >/dev/null 2>&1; echo $$?), 0)\n  OPENSSL_CFLAGS:=$(shell $(PKG_CONFIG) --cflags openssl)\n  OPENSSL_LDFLAGS:=$(shell $(PKG_CONFIG) --libs openssl)\nendif\nifeq ($(shell $(PKG_CONFIG) -- libsodium >/dev/null 2>&1; echo $$?), 0)\n  LIBSODIUM_CFLAGS:=$(shell $(PKG_CONFIG) --cflags libsodium)\n  LIBSODIUM_LDFLAGS:=$(shell $(PKG_CONFIG) --libs libsodium)\nelse\n  LIBSODIUM_CFLAGS:=\n  LIBSODIUM_LDFLAGS:=-lsodium\nendif\n\n\n# add BearSSL/OpenSSL library flags (exclusive)\nifdef FIO_NO_TLS\n  $(info * Skipping crypto library detection.)\nelse ifeq ($(call TRY_COMPILE, $(FIO_TLS_TEST_BEARSSL_SOURCE), $(EMPTY)), 0)\n  $(info * Detected the BearSSL source code library, setting HAVE_BEARSSL)\n  # TODO: when BearSSL support arrived, set the FIO_TLS_FOUND flag as well\n  FLAGS+=HAVE_BEARSSL\nelse ifeq ($(call TRY_COMPILE, $(FIO_TLS_TEST_BEARSSL_EXT), \"-lbearssl\"), 0)\n  $(info * Detected the BearSSL library, setting HAVE_BEARSSL)\n  # TODO: when BearSSL support arrived, set the FIO_TLS_FOUND flag as well\n  FLAGS+=HAVE_BEARSSL\n  LINKER_LIBS_EXT:=$(LINKER_LIBS_EXT) bearssl\nelse ifeq ($(call TRY_COMPILE, $(FIO_TLS_TEST_OPENSSL), $(OPENSSL_CFLAGS) $(OPENSSL_LDFLAGS)), 0)\n  $(info * Detected the OpenSSL library, setting HAVE_OPENSSL)\n  FLAGS+=HAVE_OPENSSL FIO_TLS_FOUND\n  LINKER_LIBS_EXT:=$(LINKER_LIBS_EXT) $(OPENSSL_LIBS)\n  LDFLAGS+=$(OPENSSL_LDFLAGS)\n  CFLAGS+=$(OPENSSL_CFLAGS)\n  PKGC_REQ_OPENSSL=openssl >= 1.1, openssl < 1.2\n  PKGC_REQ+=$$(PKGC_REQ_OPENSSL)\nelse ifeq ($(call TRY_COMPILE, \"\\#include <sodium.h.h>\\\\n int main(void) {}\", $(LIBSODIUM_CFLAGS) $(LIBSODIUM_LDFLAGS)) , 0)\n  # Sodium Crypto Library: https://doc.libsodium.org/usage\n  $(info * Detected the Sodium library, setting HAVE_SODIUM)\n  FLAGS:=$(FLAGS) HAVE_SODIUM\n  LDFLAGS+=$(LIBSODIUM_CFLAGS)\n  CFLAGS+=$(LIBSODIUM_LDFLAGS)\nelse\n  $(info * No compatible SSL/TLS library detected.)\nendif # FIO_NO_TLS\n\nendif # TEST4CRYPTO\n#############################################################################\n# ZLib Library Detection\n# (no need to edit)\n#############################################################################\nifdef TEST4ZLIB\n\nifeq ($(call TRY_COMPILE, \"\\#include <zlib.h>\\\\nint main(void) {}\", \"-lz\") , 0)\n  $(info * Detected the zlib library, setting HAVE_ZLIB)\n  FLAGS:=$(FLAGS) HAVE_ZLIB\n  LINKER_LIBS_EXT:=$(LINKER_LIBS_EXT) z\n  PKGC_REQ_ZLIB=zlib\n  PKGC_REQ+=$$(PKGC_REQ_ZLIB)\nendif\n\nendif #TEST4ZLIB\n#############################################################################\n# PostgreSQL Library Detection\n# (no need to edit)\n#############################################################################\nifdef TEST4PG\n\nifeq ($(call TRY_COMPILE, \"\\#include <libpq-fe.h>\\\\n int main(void) {}\", \"-lpg\") , 0)\n  $(info * Detected the PostgreSQL library, setting HAVE_POSTGRESQL)\n  FLAGS:=$(FLAGS) HAVE_POSTGRESQL\n  LINKER_LIBS_EXT:=$(LINKER_LIBS_EXT) pg\nelse ifeq ($(call TRY_COMPILE, \"\\#include </usr/include/postgresql/libpq-fe.h>\\\\nint main(void) {}\", \"-lpg\") , 0)\n  $(info * Detected the PostgreSQL library, setting HAVE_POSTGRESQL)\n  FLAGS:=$(FLAGS) HAVE_POSTGRESQL\n  INCLUDE_STR:=$(INCLUDE_STR) -I/usr/include/postgresql\n  LINKER_LIBS_EXT:=$(LINKER_LIBS_EXT) pg\nendif\n\nendif # TEST4PG\n#############################################################################\n# Endian  Detection\n# (no need to edit)\n#############################################################################\nifdef TEST4ENDIAN\n\nifeq ($(call TRY_COMPILE_AND_RUN, \"int main(void) {int i = 1; return (int)(i & ((unsigned char *)&i)[sizeof(i)-1]);}\\n\",$(EMPTY)), 1)\n  $(info * Detected Big Endian byte order.)\n  FLAGS:=$(FLAGS) __BIG_ENDIAN__\nelse ifeq ($(call TRY_COMPILE_AND_RUN, \"int main(void) {int i = 1; return (int)(i & ((unsigned char *)&i)[0]);}\\n\",$(EMPTY)), 1)\n  $(info * Detected Little Endian byte order.)\n  FLAGS:=$(FLAGS) __BIG_ENDIAN__=0\nelse\n  $(info * Byte ordering (endianness) detection failed)\nendif\n\nendif # TEST4ENDIAN\n#############################################################################\n# Updated flags and final values\n# (don't edit)\n#############################################################################\n\nFLAGS_STR=$(foreach flag,$(FLAGS),$(addprefix -D, $(flag)))\nCFLAGS:=$(CFLAGS) -g -std=$(CSTD) -fpic $(FLAGS_STR) $(WARNINGS) $(INCLUDE_STR) $(C_EXTRA_OPT)\nCXXFLAGS:=$(CXXFLAGS) -std=$(CXXSTD) -fpic  $(FLAGS_STR) $(WARNINGS) $(INCLUDE_STR) $(CXX_EXTRA_OPT)\nLINKER_FLAGS=$(LDFLAGS) $(foreach lib,$(LINKER_LIBS),$(addprefix -l,$(lib))) $(foreach lib,$(LINKER_LIBS_EXT),$(addprefix -l,$(lib)))\nCFLAGS_DEPENDENCY=-MT $@ -MMD -MP\n\n\n# Build a \"Requires:\" string for the pkgconfig/facil.pc file\n# unfortunately, leading or trailing commas are interpreted as\n# \"empty package name\" by pkg-config, therefore we work around this by using\n# $(strip ..).\n# The following 2 lines are from the manual of GNU make\nnullstring :=\nspace := $(nullstring) # end of line\ncomma := ,\n$(eval PKGC_REQ_EVAL:=$(subst $(space),$(comma) ,$(strip $(PKGC_REQ))))\n\n#############################################################################\n# Task Settings - Compile Time Measurement\n#############################################################################\nTIME_TEST_CMD:=which time\nifeq ($(call TRY_RUN, $(TIME_TEST_CMD), $(EMPTY)), 0)\n  CC:=time $(CC)\n  CXX:=time $(CXX)\nendif\n\n#############################################################################\n# Tasks - Building\n#############################################################################\n\n$(NAME): build\n\nbuild: | create_tree build_objects\n\t@echo \"* Linking...\"\n\t@$(CCL) -o $(BIN) $^ $(OPTIMIZATION) $(LINKER_FLAGS)\n\t@echo \"* Finished: $(BIN)\"\n\t@$(DOCUMENTATION)\n\nbuild_objects: $(LIB_OBJS) $(MAIN_OBJS)\n\n.PHONY : clean\nclean: | _.___clean\n\n.PHONY : %.___clean\n%.___clean:\n\t-@rm -f $(BIN) 2> /dev/null || echo \"\" >> /dev/null\n\t-@rm -R -f $(TMP_ROOT) 2> /dev/null || echo \"\" >> /dev/null\n\t-@mkdir -p $(BUILDTREE) 2> /dev/null\n\n.PHONY : run\nrun: | build\n\t@$(BIN)\n\n.PHONY : set_debug_flags___\nset_debug_flags___:\n\t$(eval OPTIMIZATION=$($(OPTIMIZATION_DEBUG)))\n\t$(eval CFLAGS+=-coverage -DDEBUG=1 -Werror)\n\t$(eval CXXFLAGS+=-coverage -DDEBUG=1)\n\t$(eval LINKER_FLAGS=-coverage -DDEBUG=1 $(LINKER_FLAGS))\n\t@echo \"* Set Debug flags.\"\n\n.PHONY : db\ndb: | db.___clean set_debug_flags___ build\n\tDEBUG=1 $(MAKE) build\n\t$(DB) $(BIN)\n\n.PHONY : create_tree\ncreate_tree:\n\t-@mkdir -p $(BUILDTREE) 2> /dev/null\n\nlib: | create_tree lib_build\n\n$(DEST)/pkgconfig/facil.pc: makefile | libdump\n\t@mkdir -p $(DEST)/pkgconfig && \\\n\tprintf \"\\\nName: facil.io\\\\n\\\nDescription: facil.io\\\\n\\\nCflags: -I%s\\\\n\\\nLibs: -L%s -lfacil\\\\n\\\nVersion: %s\\\\n\\\nRequires.private: %s\\\\n\\\n\" $(realpath $(DEST)/../libdump/include) $(realpath $(DEST)) 0.7.x \"$(PKGC_REQ_EVAL)\" > $@\n\n$(DEST)/libfacil.so: $(LIB_OBJS) | $(DEST)/pkgconfig/facil.pc\n\t@$(CCL) -shared -o $@ $^ $(OPTIMIZATION) $(LINKER_FLAGS)\n\nlib_build: $(DEST)/libfacil.so\n\t@$(DOCUMENTATION)\n\n%.o : %.c\n\n#### no disassembler (normal / expected state)\nifndef DISAMS\n$(TMP_ROOT)/%.o: %.c $(TMP_ROOT)/%.d\n\t@echo \"* Compiling $<\"\n\t@$(CC) -c $< -o $@ $(CFLAGS_DEPENDENCY) $(CFLAGS) $(OPTIMIZATION)\n\n$(TMP_ROOT)/%.o: %.cpp $(TMP_ROOT)/%.d\n\t@echo \"* Compiling $<\"\n\t@$(CC) -c $< -o $@ $(CFLAGS_DEPENDENCY) $(CXXFLAGS) $(OPTIMIZATION)\n\t$(eval CCL=$(CXX))\n\t$(eval LINKER_FLAGS+= -lc++)\n\n$(TMP_ROOT)/%.o: %.c++ $(TMP_ROOT)/%.d\n\t@echo \"* Compiling $<\"\n\t@$(CC) -c $< -o $@ $(CFLAGS_DEPENDENCY) $(CXXFLAGS) $(OPTIMIZATION)\n\t$(eval CCL=$(CXX))\n\n#### add diassembling stage (testing / slower)\nelse\n$(TMP_ROOT)/%.o: %.c $(TMP_ROOT)/%.d\n\t@echo \"* Compiling $<\"\n\t@$(CC) -c $< -o $@ $(CFLAGS_DEPENDENCY) $(CFLAGS) $(OPTIMIZATION)\n\t@$(DISAMS) $@ > $@.s\n\n$(TMP_ROOT)/%.o: %.cpp $(TMP_ROOT)/%.d\n\t@echo \"* Compiling $<\"\n\t@$(CXX) -o $@ -c $< $(CFLAGS_DEPENDENCY) $(CXXFLAGS) $(OPTIMIZATION)\n\t$(eval CCL=$(CXX))\n\t$(eval LINKER_FLAGS+= -lc++)\n\t@$(DISAMS) $@ > $@.s\n\n$(TMP_ROOT)/%.o: %.c++ $(TMP_ROOT)/%.d\n\t@echo \"* Compiling $<\"\n\t@$(CXX) -o $@ -c $< $(CFLAGS_DEPENDENCY) $(CXXFLAGS) $(OPTIMIZATION)\n\t$(eval CCL=$(CXX))\n\t$(eval LINKER_FLAGS+= -lc++)\n\t@$(DISAMS) $@ > $@.s\nendif\n\n$(TMP_ROOT)/%.d: ;\n\n-include $(OBJS_DEPENDENCY)\n\n#############################################################################\n# Tasks - Testing\n#\n# Tasks:\n#\n# - test/cpp (tests CPP header / compilation)\n# - test/lib/db/XXX (test, build library, use DEBUG, compile and run XXX.c)\n# - test/lib/XXX (test, build library, compile and run XXX.c)\n# - test/db/XXX (test, use DEBUG, compile and run XXX.c)\n# - test/XXX (test, compile and run XXX.c)\n#\n#############################################################################\n\n.PHONY : test_set_test_flag___\ntest_set_test_flag___:\n\t$(eval CFLAGS+=-DTEST=1 -DFIO_WEAK_TLS)\n\t$(eval CXXFLAGS+=-DTEST=1 -DFIO_WEAK_TLS)\n\t@echo \"* Set testing flags.\"\n\n# test/cpp will try to compile a source file using C++ to test header integration\n.PHONY : test/cpp\ntest/cpp: | create_tree test_set_test_flag___ \n\t$(eval BIN:=$(DEST)/cpp)\n\t@echo \"* Compiling $(TEST_ROOT)/cpp.cpp\"\n\t@$(CXX) -c $(TEST_ROOT)/cpp.cpp -o $(TMP_ROOT)/cpp.o $(CFLAGS_DEPENDENCY) $(CXXFLAGS) $(OPTIMIZATION) \n\t@echo \"* Linking\"\n\t@$(CCL) -o $(BIN) $(TMP_ROOT)/cpp.o $(LINKER_FLAGS) -lc++ $(OPTIMIZATION)\n\t@echo \"* Compilation of C++ variation successful.\"\n\n# test/cpp will try to compile a source file using C++ to test header integration\n.PHONY : test/db/cpp\ntest/db/cpp: | create_tree set_debug_flags___ test_set_test_flag___ \n\t$(eval BIN:=$(DEST)/cpp)\n\t@echo \"* Compiling $(TEST_ROOT)/cpp.cpp\"\n\t@$(CXX) -c $(TEST_ROOT)/cpp.cpp -o $(TMP_ROOT)/cpp.o $(CFLAGS_DEPENDENCY) $(CXXFLAGS) $(OPTIMIZATION) \n\t@echo \"* Linking\"\n\t@$(CCL) -o $(BIN) $(TMP_ROOT)/cpp.o $(LINKER_FLAGS) -lc++ $(OPTIMIZATION)\n\t@echo \"* Compilation of C++ variation successful.\"\n\n# test/build/db/XXX will set DEBUG, compile the library and run tests/XXX.c\n.PHONY : test/lib/db/%\ntest/lib/db/%: | create_tree set_debug_flags___ test_set_test_flag___ $(LIB_OBJS)\n\t$(eval BIN:=$(DEST)/$*)\n\t@echo \"* Compiling $(TEST_ROOT)/$*.c\"\n\t@$(CC) -c $(TEST_ROOT)/$*.c -o $(TMP_ROOT)/$*.o -DTEST_WITH_LIBRARY $(CFLAGS_DEPENDENCY) $(CFLAGS) $(OPTIMIZATION) \n\t@echo \"* Linking\"\n\t@$(CCL) -o $(BIN) $(TMP_ROOT)/$*.o $(LIB_OBJS) $(LINKER_FLAGS) $(OPTIMIZATION)\n\t@echo \"* Starting test:\"\n\t@$(BIN)\n\n\n# test/build/XXX will compile the library and compile and run tests/XXX.c\n.PHONY : test/lib/%\ntest/lib/%: | create_tree test_set_test_flag___  $(LIB_OBJS)\n\t$(eval BIN:=$(DEST)/$*)\n\t@echo \"* Compiling $(TEST_ROOT)/$*.c\"\n\t@$(CC) -c $(TEST_ROOT)/$*.c -o $(TMP_ROOT)/$*.o -DTEST_WITH_LIBRARY $(CFLAGS_DEPENDENCY) $(CFLAGS) $(OPTIMIZATION) \n\t@echo \"* Linking\"\n\t@$(CCL) -o $(BIN) $(TMP_ROOT)/$*.o $(LIB_OBJS) $(LINKER_FLAGS) $(OPTIMIZATION)\n\t@echo \"* Starting test:\"\n\t@$(BIN)\n\n# test/build/XXX will set DEBUG and compile and run tests/XXX.c\n.PHONY : test/db/%\ntest/db/%: | create_tree set_debug_flags___ test_set_test_flag___\n\t$(eval BIN:=$(DEST)/$*)\n\t@echo \"* Compiling $(TEST_ROOT)/$*.c\"\n\t@$(CC) -c $(TEST_ROOT)/$*.c -o $(TMP_ROOT)/$*.o $(CFLAGS_DEPENDENCY) $(CFLAGS) $(OPTIMIZATION) \n\t@echo \"* Linking\"\n\t@$(CCL) -o $(BIN) $(TMP_ROOT)/$*.o $(LINKER_FLAGS) $(OPTIMIZATION)\n\t@echo \"* Starting test:\"\n\t@$(BIN)\n\n\n# test/build/XXX will compile and run tests/XXX.c\n.PHONY : test/%\ntest/%: | create_tree test_set_test_flag___ \n\t$(eval BIN:=$(DEST)/$*)\n\t@echo \"* Compiling $(TEST_ROOT)/$*.c\"\n\t@$(CC) -c $(TEST_ROOT)/$*.c -o $(TMP_ROOT)/$*.o $(CFLAGS_DEPENDENCY) $(CFLAGS) $(OPTIMIZATION) \n\t@echo \"* Linking\"\n\t@$(CCL) -o $(BIN) $(TMP_ROOT)/$*.o $(LINKER_FLAGS) $(OPTIMIZATION)\n\t@echo \"* Starting test:\"\n\t@$(BIN)\n\nifneq ($(TEST_DEFAULT),)\n.PHONY : test%\ntest: | create_tree test_set_test_flag___ \n\t$(eval BIN:=$(DEST)/$(TEST_DEFAULT))\n\t@echo \"* Compiling $(TEST_ROOT)/$(TEST_DEFAULT).c\"\n\t@$(CC) -c $(TEST_ROOT)/$(TEST_DEFAULT).c -o $(TMP_ROOT)/$(TEST_DEFAULT).o $(CFLAGS_DEPENDENCY) $(CFLAGS) $(OPTIMIZATION) \n\t@echo \"* Linking\"\n\t@$(CCL) -o $(BIN) $(TMP_ROOT)/$(TEST_DEFAULT).o $(LINKER_FLAGS) $(OPTIMIZATION)\n\t@echo \"* Starting test:\"\n\t@$(BIN)\n\n.PHONY : test/db%\ntest/db: | create_tree set_debug_flags___ test_set_test_flag___\n\t$(eval BIN:=$(DEST)/$(TEST_DEFAULT))\n\t@echo \"* Compiling $(TEST_ROOT)/$(TEST_DEFAULT).c\"\n\t@$(CC) -c $(TEST_ROOT)/$(TEST_DEFAULT).c -o $(TMP_ROOT)/$(TEST_DEFAULT).o $(CFLAGS_DEPENDENCY) $(CFLAGS) $(OPTIMIZATION) \n\t@echo \"* Linking\"\n\t@$(CCL) -o $(BIN) $(TMP_ROOT)/$(TEST_DEFAULT).o $(LINKER_FLAGS) $(OPTIMIZATION)\n\t@echo \"* Starting test:\"\n\t@$(BIN)\nendif\n\n#############################################################################\n# Tasks - library code dumping & CMake\n#############################################################################\n\nifndef DUMP_LIB\n.PHONY : libdump\nlibdump: cmake\n\nelse\n\nifeq ($(LIBDIR_PRIV),)\n\n.PHONY : libdump\nlibdump: cmake\n\t-@rm -R $(DUMP_LIB) 2> /dev/null\n\t-@mkdir $(DUMP_LIB)\n\t-@mkdir $(DUMP_LIB)/src\n\t-@mkdir $(DUMP_LIB)/include\n\t-@mkdir $(DUMP_LIB)/all  # except README.md files\n\t-@cp -n $(foreach dir,$(LIBDIR_PUB), $(wildcard $(addsuffix /, $(basename $(dir)))*.[^m]*)) $(DUMP_LIB)/all 2> /dev/null\n\t-@cp -n $(foreach dir,$(LIBDIR_PUB), $(wildcard $(addsuffix /, $(basename $(dir)))*.h*)) $(DUMP_LIB)/include 2> /dev/null\n\t-@cp -n $(foreach dir,$(LIBDIR_PUB), $(wildcard $(addsuffix /, $(basename $(dir)))*.[^hm]*)) $(DUMP_LIB)/src 2> /dev/null\n\nelse\n\n.PHONY : libdump\nlibdump: cmake\n\t-@rm -R $(DUMP_LIB) 2> /dev/null\n\t-@mkdir $(DUMP_LIB)\n\t-@mkdir $(DUMP_LIB)/src\n\t-@mkdir $(DUMP_LIB)/include\n\t-@mkdir $(DUMP_LIB)/all  # except README.md files\n\t-@cp -n $(foreach dir,$(LIBDIR_PUB), $(wildcard $(addsuffix /, $(basename $(dir)))*.[^m]*)) $(DUMP_LIB)/all 2> /dev/null\n\t-@cp -n $(foreach dir,$(LIBDIR_PUB), $(wildcard $(addsuffix /, $(basename $(dir)))*.h*)) $(DUMP_LIB)/include 2> /dev/null\n\t-@cp -n $(foreach dir,$(LIBDIR_PUB), $(wildcard $(addsuffix /, $(basename $(dir)))*.[^hm]*)) $(DUMP_LIB)/src 2> /dev/null\n\t-@cp -n $(foreach dir,$(LIBDIR_PRIV), $(wildcard $(addsuffix /, $(basename $(dir)))*.[^m]*)) $(DUMP_LIB)/all 2> /dev/null\n\t-@cp -n $(foreach dir,$(LIBDIR_PRIV), $(wildcard $(addsuffix /, $(basename $(dir)))*.h*)) $(DUMP_LIB)/include 2> /dev/null\n\t-@cp -n $(foreach dir,$(LIBDIR_PRIV), $(wildcard $(addsuffix /, $(basename $(dir)))*.[^hm]*)) $(DUMP_LIB)/src 2> /dev/null\n\nendif\nendif\n\nifndef CMAKE_FILENAME\n.PHONY : cmake\ncmake:\n\t@echo 'Missing CMake variables'\n\nelse\n\n.PHONY : cmake\ncmake:\n\t-@rm $(CMAKE_FILENAME) 2> /dev/null\n\t@touch $(CMAKE_FILENAME)\n\t@echo 'project($(CMAKE_PROJECT))' >> $(CMAKE_FILENAME)  \n\t@echo '' >> $(CMAKE_FILENAME)\n\t@echo 'cmake_minimum_required(VERSION 2.4)' >> $(CMAKE_FILENAME)\n\t@echo '' >> $(CMAKE_FILENAME)\n\t@$(foreach pkg,$(CMAKE_REQUIRE_PACKAGE),echo 'find_package($(pkg) REQUIRED)' >> $(CMAKE_FILENAME);)\n\t@echo '' >> $(CMAKE_FILENAME)\n\t@echo 'set($(CMAKE_PROJECT)_SOURCES' >> $(CMAKE_FILENAME)\n\t@$(foreach src,$(LIBSRC),echo '  $(src)' >> $(CMAKE_FILENAME);)\n\t@echo ')' >> $(CMAKE_FILENAME)\n\t@echo '' >> $(CMAKE_FILENAME)\n\t@echo 'add_library($(CMAKE_PROJECT) $${$(CMAKE_PROJECT)_SOURCES})' >> $(CMAKE_FILENAME)\n\t@echo 'target_link_libraries($(CMAKE_PROJECT)' >> $(CMAKE_FILENAME)\n\t@$(foreach src,$(LINKER_LIBS),echo '  PUBLIC $(src)' >> $(CMAKE_FILENAME);)\n\t@echo '  )' >> $(CMAKE_FILENAME)\n\t@echo 'target_include_directories($(CMAKE_PROJECT)' >> $(CMAKE_FILENAME)\n\t@$(foreach src,$(LIBDIR_PUB),echo '  PUBLIC  $(src)' >> $(CMAKE_FILENAME);)\n\t@$(foreach src,$(LIBDIR_PRIV),echo '  PRIVATE $(src)' >> $(CMAKE_FILENAME);)\n\t@echo ')' >> $(CMAKE_FILENAME)\n\t@echo '' >> $(CMAKE_FILENAME)\n\nendif\n\n#############################################################################\n# Tasks - make variable printout (test)\n#############################################################################\n\n# Prints the make variables, used for debugging the makefile\n.PHONY : vars\nvars:\n\t@echo \"CC: $(CC)\"\n\t@echo \"CXX: $(CXX)\"\n\t@echo \"BIN: $(BIN)\"\n\t@echo \"\"\n\t@echo \"LIBDIR_PUB: $(LIBDIR_PUB)\"\n\t@echo \"\"\n\t@echo \"LIBDIR_PRIV: $(LIBDIR_PRIV)\"\n\t@echo \"\"\n\t@echo \"MAINDIR: $(MAINDIR)\"\n\t@echo \"\"\n\t@echo \"FOLDERS: $(FOLDERS)\"\n\t@echo \"\"\n\t@echo \"BUILDTREE: $(BUILDTREE)\"\n\t@echo \"\"\n\t@echo \"LIBSRC: $(LIBSRC)\"\n\t@echo \"\"\n\t@echo \"MAINSRC: $(MAINSRC)\"\n\t@echo \"\"\n\t@echo \"LIB_OBJS: $(LIB_OBJS)\"\n\t@echo \"\"\n\t@echo \"MAIN_OBJS: $(MAIN_OBJS)\"\n\t@echo \"\"\n\t@echo \"TEST_OBJS: $(TEST_OBJS)\"\n\t@echo \"\"\n\t@echo \"OBJS_DEPENDENCY: $(OBJS_DEPENDENCY)\"\n\t@echo \"\"\n\t@echo \"CFLAGS: $(CFLAGS)\"\n\t@echo \"\"\n\t@echo \"OPTIMIZATION: $(OPTIMIZATION)\"\n\t@echo \"\"\n\t@echo \"CXXFLAGS: $(CXXFLAGS)\"\n\t@echo \"\"\n\t@echo \"LINKER_LIBS: $(LINKER_LIBS)\"\n\t@echo \"\"\n\t@echo \"LINKER_LIBS_EXT: $(LINKER_LIBS_EXT)\"\n\t@echo \"\"\n\t@echo \"LINKER_FLAGS: $(LINKER_FLAGS)\"\n\n\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}