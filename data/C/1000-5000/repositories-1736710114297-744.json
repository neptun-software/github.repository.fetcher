{
  "metadata": {
    "timestamp": 1736710114297,
    "page": 744,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "julius-speech/julius",
      "stars": 1857,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.123046875,
          "content": "root = true\n\n[*]\nindent_style = tab\nindent_size = 2\ntab_width = 8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3486328125,
          "content": "### Emacs ###\n*~\n\n### C ###\n# Prerequisites\n*.d\n\n# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Debug files\n*.dSYM/\n*.su\n\n\n### VisualStudioCode ###\n.vscode/*\n!.vscode/manual.code-snippets\n\n### Autotools ###\n\nautom4te.cache\n\n### VisualStudio ###\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio)\n*.userprefs\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# Visual Studio 2015 cache/options directory\n.vs/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n# NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# DNX\nproject.lock.json\nproject.fragment.lock.json\nartifacts/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opendb\n*.opensdf\n*.sdf\n*.cachefile\n*.VC.db\n*.VC.VC.opendb\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n*.sap\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "00readme-DNN.txt",
          "type": "blob",
          "size": 8.171875,
          "content": "\r\n\tJulius for DNN-based speech recognition\r\n\r\n\t\t\t\t\t\t(revised 2016/08/30)\r\n\t\t\t\t\t\t(updated 2013/09/29)\r\n\r\nA. Julius and DNN-HMM\r\n======================\r\n\r\nFrom 4.4, Julius can perform DNN-HMM based recognition in two ways:\r\n\r\n  1. standalone: directly compute DNN for HMM inside Julius (>= 4.4)\r\n\r\n  2. network: receive state probabilities calculated by other process\r\n     via socket (<= 4.3.1)\r\n\r\nBoth are described below.\r\n\r\n A.1. Standalone mode\r\n =====================\r\n\r\nFrom version 4.4, Julius is capable of performing DNN-HMM based\r\nrecognition by itself.  It can read a DNN definition along with a HMM,\r\nand can compute the network against input (spliced) feature vectors\r\nand output the node scores of output layer for each frame, which will\r\nbe used as output probabilities of corresponding HMM states in the\r\nHMM.  All computation will be done in a single process.\r\n\r\nNote that the current implementation is very simple and limited.  Only\r\nbasic functions are implemented for NN.  Any number of hidden layers\r\ncan be defined, but the number of the nodes in the hidden layers\r\nshould be the same.  No batch computation is performed: all\r\nframe-wise.  SIMD instruction (Intel AVX) is used to speed up the\r\ncomputation.  Only tested on Windows and Ubuntu on Intel PC.\r\nSee \"libsent/src/phmm/calc_dnn.c\" for the actual implementation.\r\n\r\nTo run, you need\r\n\r\n 1) an HMM AM (GMM defs are ignored, only its structure is used)\r\n 2) a DNN definition that corresponds to 1)\r\n 3) \".dnnconf\" configuration file (text)\r\n\r\nThe .dnnconf file specifies the parameters, options, DNN definition\r\nfiles, and other parameters all relating to DNN computation. A sample\r\nfile is located in the top directory of Julius archive as\r\n\"Sample.dnnconf\".\r\n\r\nThe matrix/vector definitions should be given in \".npy\" format\r\n(i. e. python's \"NumPy.save\" format).  Only 32bit-float little endian\r\ndatatype is acceptable.\r\n\r\nTo prepare a model for DNN-HMM, note that the orders are important.\r\nThe order of the output nodes in the DNN should be the order of HMM\r\nstate definition id.  If not, Julius won't work properly.\r\n\r\nJulius uses SIMD instruction for internal DNN computation. For Intel\r\nCPU, dispatch function for several Intel SIMD instruction sets (SSE,\r\nAVX and FMA) are implemented. You need gcc-4.7 or later to compile all\r\nthe codes.  They are all compiled and built-in into Julius, and will\r\nbe determined which one to use at run time.  Run \"julius -setting\" and\r\nsee which code will be used on your cpu.  AVX can be run on Sandy\r\nBridge, and FMA on Haswell, later one will run faster.  And for ARM\r\narchitecture, you can enable NEON SIMD codes by adding \"--enable-neon\"\r\nto configure.\r\n\r\n\r\n A.2. Modular mode\r\n =====================\r\n\r\nJulius still has capability of receiving state output probability\r\nvector from other process.  This is an older way before 4.4.\r\n\r\nTo run, you need \r\n\r\n1) a GMM-HMM AM for Julius, (GMM defs are ignored, only HMM structure is used)\r\n2) a DNN state definition of DNN-HMM that corresponds to 1),\r\n3) a program to compute outprob vector from audio input using 2),either\r\n   to file or to Julius socket.\r\n\r\nThe related Julius options are:\r\n- \"-input outprob\" for file input of outprob vector,\r\n- \"-input vecnet\" for vector input (feature/outprob auto-detected by header)\r\n\r\nYou can also see the demo samples in DNN dictation toolkit which is available on the Web.\r\n\r\n\r\nB. State ID to make correspondence between outprob vector and states\r\n=====================================================================\r\n\r\nJulius should know the correspondence between the states in the HMM\r\ndefinition and the dimension number of the given input vector.  The\r\ndimension index, beginning from zero, should be assigned for each\r\nstate in the HMM definition.  The index is called \"state ID\" in this\r\ndocument.\r\n\r\nYou can explicitly specify the state ID of each state within HMM\r\ndefinition by embedding extra tag \"<SID> value\" in the hmmdefs.  When\r\nthe \"<SID>\" tag exist in the given HMM file, Julius uses them as\r\ndimension to access the input outprob vector.  Other tools that\r\ngenerate the outprob vector using DNN should also refer to the values\r\nto generate an outprob vector in the proper order that matches the hmm\r\ndefinition file.\r\n\r\nIf \"<SID>\" tag does not exist in the hmmdefs, Julius assigns the state\r\nID of each state in the order of appearance in the ASCII hmmdefs.  In\r\nthat case the input outprob vector should also have the values in the\r\nsame order.\r\n\r\n- Detailed format definition:\r\n\r\nThe \"<SID> value\" should be inserted at the head of \"state_info\"\r\nstatement, as described in the section \"HTK definition language\" in the\r\nHTKBook.  Currently it is not an official extension, and an hmmdefs\r\nwith \"<SID>\" embedded can not be used in the current HTK.  You can see\r\nthe example script of manually embedding the \"<SID>\" tag into hmmdefs\r\nat the script \"embed_sil.pl\" in the archive.\r\n\r\n\r\nC. Will the state ID (or the order) be kept in the binary HMM?\r\n===============================================================\r\n\r\nNo at old versions, yes at the newer version.\r\n\r\nThe state ID will be kept in the binary HMM with mkbinhmm of this\r\nversion and later.  \"<SID>\" will be kept in the binary HMM.  If not,\r\nthe appearance order of the source will be saved.\r\n\r\nPlease note that the older version of mkbinhmm does not concern about\r\nthe order of appearance in the source hmmdefs.  You CANNOT use the\r\nbinary HMM generated by the older version for DNN.  When you want to\r\nperform DNN-based recognition, please re-convert from ASCII hmmdefs\r\nwith the newest version of mkbinhmm.\r\n\r\n\r\nD. Making outprob vector for Modular mode\r\n==========================================\r\n\r\nD.1. Format of outprob vector file\r\n===================================\r\n\r\nTo make an outprob vector file, just save the state output\r\nprobabilities of each input frame in HTK parameter format with \"USER\"\r\nparameter type.  The length of parameter vector should match the\r\nnumber of states in the HMM definition.  If the source hmmdefs have\r\n\"<SID>\" tag, the output vector should have the same dimension order.\r\nIf don't, you should store the values in the order of appearance of\r\nstate definitions in the source hmmdefs file.\r\n\r\nAdvice: HTK by default cannot handle a vector input longer than 5000\r\nbytes (= 1250 dim.).  To handle large vector, you may have to modify\r\nthe source code of HTK.\r\n\r\n\r\nD.2. Testing generation of an outprob vector file with Julius\r\n--------------------------------------------------------------\r\n\r\nJulius has a test function to save the outprob vector computed while\r\nrecognition.  Run recognition with \"-outprobout filename\" and process\r\nan input file.  Then the state probabilities of the whole given input\r\nwill be written to the given filename.\r\n\r\nNote that currently this function does not support batch processing\r\nusing \"-filelist\".  Only the last one will be saved.\r\n\r\n\r\nD.3. Use the outprob vector for recognition\r\n---------------------------------------------\r\n\r\nRun Julius with \"-input outprob\", and give the outprob vector file as\r\nan input.  Julius will refer to the pre-computed state probabilities\r\nand perform decoding.\r\n\r\nJulius still needs the source GMM-HMM definition to represent search\r\nspace.  You should specify the source GMM-HMM using \"-h\" as normal\r\nrecognition even if using \"-input outprob\", and the state-dimension\r\ncorrespondence as described in the \"B\" section above should be kept.\r\n\r\nThe \"-input outprob\" also accepts batch input by \"-filelist\".\r\n\r\n\r\nD.3. Sending feature / outprob vector via network\r\n--------------------------------------------------\r\n\r\nThis version of Julius can receive input feature vector or outprob\r\nvector from tcp/ip network to perform on-line recognition.  To use\r\nthis, start Julius with an option \"-input outprobnet\", and connect\r\nfrom other program with port number 5531.\r\n\r\nThe sample tiny program to send feature vector or outprob vector is in\r\n\"dnntools/sendvec.c\".  It reads a HTK parameter file and send it as\r\neither input vector or outprob vector toward Julius. To test:\r\n\r\nTerminal 1:\r\n    (compile Julius)\r\n    % ./julius/julius -C ..... -input vecnet\r\n\r\nTerminal 2:\r\n    % cd dnntools\r\n    (edit sendvec.c to choose that the paramfile is whether an output\r\n     vector file or a feature vector file)\r\n    % cc -o sendvec sendvec.c\r\n    % sendvec paramfile localhost\r\n\r\n"
        },
        {
          "name": "00readme-ja.txt",
          "type": "blob",
          "size": 7.626953125,
          "content": "======================================================================\r\n                  Large Vocabulary Continuous Speech\r\n                          Recognition Engine\r\n\r\n                                Julius\r\n\r\n                                                (Rev 4.6   2020/09/02)\r\n                                                (Rev 4.5   2019/01/02)\r\n                                                (Rev 4.4.2 2016/09/12)\r\n                                                (Rev 4.4   2016/08/30)\r\n                                                (Rev 4.3.1 2014/01/15)\r\n                                                (Rev 4.3   2013/12/25)\r\n                                                (Rev 4.2.3 2013/06/30)\r\n                                                (Rev 4.2.2 2012/08/01)\r\n                                                (Rev 4.2.1 2011/12/25)\r\n                                                (Rev 4.2   2011/05/01)\r\n                                                (Rev 4.1.5 2010/06/04)\r\n                                                (Rev 4.1   2008/10/03)\r\n                                                (Rev 4.0.2 2008/05/27)\r\n                                                (Rev 4.0   2007/12/19)\r\n                                                (Rev 3.5.3 2006/12/29)\r\n                                                (Rev 3.4.2 2004/04/30)\r\n                                                (Rev 2.0   1999/02/20)\r\n                                                (Rev 1.0   1998/02/20)\r\n\r\n Copyright (c) 1991-2020 京都大学 河原研究室\r\n Copyright (c) 1997-2000 情報処理振興事業協会(IPA)\r\n Copyright (c) 2000-2005 奈良先端科学技術大学院大学 鹿野研究室\r\n Copyright (c) 2005-2020 名古屋工業大学 Julius開発チーム\r\n All rights reserved\r\n======================================================================\r\n\r\nJulius について\r\n=================\r\n\r\nJulius は，音声認識システムの開発・研究のためのオープンソースの高性能\r\nな汎用大語彙連続音声認識エンジンです．数万語彙の連続音声認識を一般のPC\r\n上でほぼ実時間で実行できます．また，高い汎用性を持ち，発音辞書や言語モ\r\nデル・音響モデルなどの音声認識の各モジュールを組み替えることで，様々な\r\n幅広い用途に応用できます． 動作プラットフォームは Linux, Windows, iOS,\r\nAndroid, その他の環境です．\r\n\r\n\r\nWhat's new in Julius-4.6\r\n==========================\r\n\r\nJulius-4.6 はマイナーリリースです。主な変更点は以下のとおりです。\r\n\r\n- DNN-HMM 計算での CUDA サポート (Linux + CUDA-8,9,10 でのみ動作確認)\r\n- 1パス文法認識の実装\r\n- DNN-HMM で出力が log10 化されていないモデルのサポート\r\n- 特徴量正規化モードを追加：平均は入力自身、分散は固定値を使うモード\r\n- Visual Studio 2017 でのビルド全面対応 (msvc/Julius.sln)\r\n- 不具合の修正\r\n- 修正BSDライセンスへ移行\r\n\r\n全ての変更の詳細は同梱の Release-ja.txt をご覧ください。\r\n\r\n\r\nUTF-8への移行について\r\n======================\r\n\r\nバージョン4.5以前はテキストエンコーディングとして SJISや EUC が混在していましたが、\r\nバージョン4.5から全て UTF-8 に変換されました．\r\n\r\nバージョン4.5の時点でのテキストエンコード変換前のコードを\r\n\"master-4.5-legacy\" ブランチで保存してあります．4.5 リリース以前の\r\nコードから 4.5 までの差分を見る場合はそちらのブランチを checkout して\r\nください．\r\n\r\n\r\nJulius-4.6 のファイルの構成\r\n=============================\r\n\r\n        00readme-ja.txt\t\t最初に読む文書（このファイル）\r\n        LICENSE.txt\t\tライセンス条項\r\n        Release-ja.txt\t\tリリースノート/変更履歴\r\n        00readme-DNN.txt\tDNN-HMM の使い方説明\r\n        configure\t\tconfigureスクリプト\r\n        configure.in\r\n        Sample.jconf\t\tjconf 設定ファイルサンプル\r\n        Sample.dnnconf\t\tDNN 設定ファイルのサンプル\r\n        julius/\t\t\tJulius ソース\r\n        libjulius/\t\tJuliusLib コアエンジンライブラリ ソース\r\n        libsent/\t\tJuliusLib 汎用ライブラリ ソース\r\n        adinrec/\t\t録音ツール adinrec\r\n        adintool/\t\t音声録音/送受信ツール adintool\r\n        generate-ngram/\t\tN-gram文生成ツール\r\n        gramtools/\t\t文法作成ツール群\r\n        jcontrol/\t\tサンプルネットワーククライアント jcontrol\r\n        mkbingram/\t\tバイナリN-gram作成ツール mkbingram\r\n        mkbinhmm/\t\tバイナリHMM作成ツール mkbinhmm\r\n        mkgshmm/\t\tGMS用音響モデル変換ツール mkgshmm\r\n        mkss/\t\t\tノイズ平均スペクトル算出ツール mkss\r\n        support/\t\t開発用スクリプト\r\n        jclient-perl/\t\tA simple perl version of module mode client\r\n        plugin/\t\t\tプラグインソースコードのサンプルと仕様文書\r\n        man/\t\t\tマニュアル類\r\n        msvc/\t\t\tMicrosoft Visual Studio 2013 用ファイル\r\n        dnntools/\t\tSample programs for dnn and vecnet client\r\n        binlm2arpa/\t\tバイナリN-gramからARPAへの変換ツール\r\n\r\n\r\nライセンスおよび引用\r\n=====================\r\n\r\nJuliusのコードは modified BSD License (BSD-3-Clause License) のもとで公開されています．\r\n\r\n上記ライセンスによる利用条件のほか、本ソフトウェアを利用して得られた知見に関して発表を行な\r\nう際には、「大語彙連続音声認識エンジン Julius」を利用したことを明記し、可能であれば\r\n適切な参照あるいは引用を示すことを強くお勧めします．このようにしていただくことで、読者が\r\nJulius の情報へ容易にアクセスできるようになるほか、Julius の利用様態の可視化が促進され、\r\nJuliusおよび関連ソフトウェアの今後の開発・拡張につながります．\r\n参照は、Juliusのホームページ（https://julius.osdn.jp) あるいは GitHub のページ\r\n（https://github.com/julius-speech/julius) へリンクしてください．\r\n文献における引用は、下記のJulius に関する論文を引用いただくか、\r\n\r\n    A. Lee, T. Kawahara and K. Shikano. \"Julius --- An Open Source Real-Time Large Vocabulary\r\n    Recognition Engine\".  In Proc. EUROSPEECH, pp.1691--1694, 2001.\r\n\r\n    A. Lee and T. Kawahara. \"Recent Development of Open-Source Speech Recognition Engine Julius\"\r\n    Asia-Pacific Signal and Information Processing Association Annual Summit and Conference\r\n    (APSIPA ASC), 2009.\r\n\r\nあるいはこのソフトウェアを直接下記の要領で引用いただくか\r\n\r\n    A. Lee and T. Kawahara: Julius v4.5 (2019) https://doi.org/10.5281/zenodo.2530395\r\n\r\nあるいは両方をご使用ください．\r\n\r\n\r\nGitHub への移行について\r\n========================\r\n\r\nJulius のコード開発は2016年より GitHub へ移行しました．開発者向けの\r\n最新のソースコード・各種実行キット・開発情報の公開・共有および\r\nフォーラム運営は GitHub にて行っています．\r\n\r\n        Julius on GitHub\r\n        https://github.com/julius-speech/julius\r\n\r\nホームページには一般向けのお知らせやキットのリンク、日本語の情報等が\r\n掲載されます．こちらもご活用下さい．\r\n\r\n        旧 Julius Web サイト\r\n        http://julius.osdn.jp/\r\n\r\n\r\n連絡先\r\n===========\r\n\r\nJulius 開発に関するご質問・お問い合わせは主に GitHub 上で承っております．\r\n\r\n        Julius on GitHub\r\n        https://github.com/julius-speech/julius\r\n\r\n以上\r\n"
        },
        {
          "name": "00readme.txt",
          "type": "blob",
          "size": 6.4287109375,
          "content": "======================================================================\r\n                  Large Vocabulary Continuous Speech\r\n                          Recognition Engine\r\n\r\n                                Julius\r\n\r\n                                                (Rev 4.6   2020/09/02)\r\n                                                (Rev 4.5   2019/01/02)\r\n                                                (Rev 4.4.2 2016/09/12)\r\n                                                (Rev 4.4   2016/08/30)\r\n                                                (Rev 4.3.1 2014/01/15)\r\n                                                (Rev 4.3   2013/12/25)\r\n                                                (Rev 4.2.3 2013/06/30)\r\n                                                (Rev 4.2.2 2012/08/01)\r\n                                                (Rev 4.2.1 2011/12/25)\r\n                                                (Rev 4.2   2011/05/01)\r\n                                                (Rev 4.1.5 2010/06/04)\r\n                                                (Rev 4.1   2008/10/03)\r\n                                                (Rev 4.0.2 2008/05/27)\r\n                                                (Rev 4.0   2007/12/19)\r\n                                                (Rev 3.5.3 2006/12/29)\r\n                                                (Rev 3.4.2 2004/04/30)\r\n                                                (Rev 2.0   1999/02/20)\r\n                                                (Rev 1.0   1998/02/20)\r\n\r\n Copyright (c) 1991-2020 Kawahara Lab., Kyoto University\r\n Copyright (c) 1997-2000 Information-technology Promotion Agency, Japan\r\n Copyright (c) 2000-2005 Shikano Lab., Nara Institute of Science and Technology\r\n Copyright (c) 2005-2020 Julius project team, Nagoya Institute of Technology\r\n All rights reserved\r\n======================================================================\r\n\r\nAbout Julius\r\n=============\r\n\r\n\"Julius\" is an open-source high-performance large vocabulary\r\ncontinuous speech recognition (LVCSR) decoder software for\r\nspeech-related researchers and developers.  Based on word N-gram and\r\ntriphone context-dependent HMM, it can perform almost real-time\r\ndecoding on most current PCs with small amount of memory.\r\n\r\nIt also has high versatility. The acoustic models and language models\r\nare plug-gable, and you can build various types of speech recognition\r\nsystem by building your own models and modules to be suitable for your\r\ntask.  It also adopts standard formats to cope with other toolkit such\r\nas HTK, CMU-Cam SLM toolkit, etc.\r\n\r\nThe core engine is implemented as embeddable library, to aim to offer\r\nspeech recognition capability to various applications.  The recent\r\nversion supports plug-in capability so that the engine can be extended\r\nby user.\r\n\r\nThe main platform is Linux and other Unix workstations, and also works\r\non Windows, MacOS, iOS, Android and other OS. Julius is distributed\r\nwith open license together with source codes.\r\n\r\n\r\nWhat's new in Julius-4.6\r\n==========================\r\n\r\nJulius-4.6 is a minor release with a few new features and many fixes.\r\n\r\n- New CUDA support at DNN computation (tested on Linux / CUDA-8,9,10)\r\n- New 1-pass grammar recognition\r\n- Support non-log10nized state priors in DNN model\r\n- Feature normalization pattern added: mean = input self, variance = static\r\n- Now can build almost all tools with Visual Studio 2017 (msvc/Julius.sln)\r\n- Now delivered under simplified BSD License\r\n\r\nSee Release.txt for full changes and usage example.\r\n\r\n\r\nContents of Julius-4.6\r\n=======================\r\n\r\n        (Documents with suffix \"ja\" are written in Japanese)\r\n\r\n        00readme.txt\t\tReadMe (This file)\r\n        LICENSE.txt\t\tTerms and conditions of use\r\n        Release.txt\t\tRelease note / ChangeLog\r\n        00readme-DNN.txt\tDNN-HMM related issues\r\n        README.md\t\tdescription about Julius for GitHub\r\n        configure\t\tconfigure script\r\n        configure.in\r\n        Sample.jconf\t\tSample configuration file\r\n        Sample.dnnconf\t\tSample DNN configuration file\r\n        julius/\t\t\tJulius sources\r\n        libjulius/\t\tJuliusLib core engine library sources\r\n        libsent/\t\tJuliusLib low-level library sources\r\n        adinrec/\t\tRecord one sentence utterance to a file\r\n        adintool/\t\tRecord/split/send/receive speech data (GUI)\r\n        generate-ngram/\t\tTool to generate random sentences from N-gram\r\n        gramtools/\t\tTools to build and test recognition grammar\r\n        jcontrol/\t\tA sample network client module\r\n        mkbingram/\t\tConvert N-gram to binary format\r\n        mkbinhmm/\t\tConvert ascii hmmdefs to binary format\r\n        mkgshmm/\t\tModel conversion for Gaussian Mixture Selection\r\n        mkss/\t\t\tEstimate noise spectrum from mic input\r\n        support/\t\tsome tools to compile from source\r\n        jclient-perl/\t\tA simple perl version of module mode client\r\n        plugin/\t\t\tSeveral plugin source codes and documentation\r\n        man/\t\t\tUnix online manuals\r\n        msvc/\t\t\tFiles to compile on Microsoft VC++ 2013\r\n        dnntools/\t\tSample programs for dnn and vecnet client\r\n        binlm2arpa/\t\tConvert binary N-gram to ARPA format\r\n\r\n\r\nLicense and Citation\r\n=====================\r\n\r\nThis code is made available under the modified BSD License (BSD-3-Clause License).\r\n\r\nOver and above the legal restrictions imposed by this license, when you publish\r\nor present results by using this software, we would highly appreciate if you\r\nmention the use of \"Large Vocabulary Continuous Speech Recognition Engine Julius\"\r\nand provide proper reference or citation so that readers can easily access\r\nthe information of the software. This would help boost the visibility\r\nof Julius and then further enhance Julius and the related software.\r\n\r\nCitation to this software can be a paper that describes it,\r\n\r\n  A. Lee, T. Kawahara and K. Shikano. \"Julius --- An Open Source Real-Time Large\r\n  Vocabulary Recognition Engine\".  In Proc. EUROSPEECH, pp.1691--1694, 2001.\r\n\r\n  A. Lee and T. Kawahara. \"Recent Development of Open-Source Speech Recognition\r\n  Engine Julius\" Asia-Pacific Signal and Information Processing Association Annual\r\n  Summit and Conference (APSIPA ASC), 2009.\r\n\r\nor a direct citation to this software,\r\n\r\n  A. Lee and T. Kawahara: Julius v4.5 (2019) https://doi.org/10.5281/zenodo.2530395\r\n\r\nor both.\r\n\r\n\r\nContact Us\r\n===========\r\n\r\nJulius is now hosted on GitHub:\r\n\r\n        https://github.com/julius-speech/julius\r\n\r\nYou can still find older documents and files in previous web page:\r\n\r\n        http://julius.osdn.jp/\r\n        https://osdn.jp/projects/julius/\r\n\r\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.1220703125,
          "content": "To get started, <a href=\"https://www.clahub.com/agreements/julius-speech/julius\">sign the Contributor License Agreement</a>.\n"
        },
        {
          "name": "INSTALL.txt",
          "type": "blob",
          "size": 4.09765625,
          "content": "How to build Julius\r\n=====================\r\n\r\nThis document describes how to build Julius on several platform.\r\nSee each section for details.\r\n\r\nPerformance-optimized compiler flags will be set for several platforms\r\nby default. If the build fails or the compiled binaries would not run,\r\nor you want to set your own compile flags, give the configure script\r\nyour own compiler flags via \"CFLAGS\" environment value like this\r\n(change \"-O3\" below as you like)\r\n\r\n    % make distclean\r\n    % CFLAGS='-O3' ./configure --host=arm-linux-gnueabihf\r\n    % make\r\n\r\nAfter build, compiled binaries of Julius and tools will be placed in\r\ntheir respective directories.  You can run \"make install\" will install\r\nbinaries into system directries:\r\n\r\n  ${prefix}/bin      executables\r\n  ${prefix}/lib      libraries\r\n  ${prefix}/include  headers\r\n\r\n\"${prefix}\" will be \"/usr/local\" by default.  You can change it by\r\nspecifying \"--prefix=...\" to configure script.\r\n\r\n  % ./configure --prefix=/opt\r\n\r\n-----------------------------------------------\r\nLinux  (tested on Ubuntu-14.04 and later)\r\n\r\n  % sudo apt-get install build-essential zlib1g-dev libsdl2-dev\r\n  % sudo apt-get libasound2-dev (or libpulse-dev, whichever you want to enable)\r\n  % ./configure\r\n  % make\r\n  % (optional) make install\r\n\r\nIf you want to explicitly choose an audio interface, use `--with-mictype=xxx`.\r\n\r\n  % ./configure --with-mictype=pulseaudio\r\n  % make\r\n  % (optional) make install\r\n\r\n(4.6 and later) For CUDA support, compile with nvcc:\r\n\r\n  % CC=/usr/local/cuda-x.x/bin/nvcc CFLAGS=-O3 ./configure\r\n\r\nwhere \"/usr/local/cuda-x.x/\" is the location of the CUDA sdk toolkit.\r\n (tested on Ubuntu-16.04 and CUDA-9.0, but later should work)\r\n\r\n\r\n-----------------------------------------------\r\nVisual Studio 2017 / Windows:\r\n\r\nBefore build, prepare libSDL2 development files:\r\n\r\n- Download libSDL2 Development Libraries for Windows from official site.\r\n    Direct link: https://www.libsdl.org/release/SDL2-devel-2.0.12-VC.zip\r\n- Unpack the zip and place the whole content under the \"msvc/SDL2\" folder.\r\n\r\nThe content of \"msvc/SDL2\" should look like:\r\n   msvc\r\n     +- SDL2\r\n          +- include\r\n          +- lib\r\n               +- x64\r\n               +- x86\r\n\r\nbuild:\r\n  1. Open msvc/Julius.sln\r\n  2. Choose build type to \"Release\"\r\n  3. Build the solution\r\n\r\nCompiled binaries will be stored in \"msvc/Release\" folder.\r\n\r\nNote that \"SDL2.dll\" is needed to run \"adintool-gui.exe\".\r\nCopy \"SDL2/lib/x86/SDL2.dll\" to the same place of adintool-gui.exe,\r\ninto \"Release\" folder.\r\n\r\n-----------------------------------------------\r\nMingw on Ubuntu (tested on 16.04)\r\n\r\n  % sudo apt-get install mingw-w64 mingw-w64-tools\r\n  % sudo apt-get install libz-mingw-w64-dev\r\n  % ./configure --host=x86_64-w64-mingw32 --disable-sdlmain\r\n  % make\r\n\r\n\"adintool-gui\" may not be built or run correctly.\r\nIf you want Windows binary, try mingw support in cygwin.\r\n\r\n-----------------------------------------------\r\nCygwin\r\n\r\n  Required packages:\r\n\r\n    gcc-core\r\n    make\r\n    zlib-devel\r\n    libSDL2-devel\r\n    pkg-config\r\n    perl\r\n\r\n  On cygwin terminal, do\r\n\r\n    % ./configure\r\n    % make\r\n    % (optional) make install\r\n\r\n(tested on cygwin-x86 setup-v2.5.2, 08/31/2016)\r\n\r\n-----------------------------------------------\r\nMingw on cygwin\r\n\r\n  Required packages (also cygwin packages above are required)\r\n\r\n    mingw64-i686-gcc-core\r\n    mingw64-i686-zlib\r\n    mingw64-i686-SDL2\r\n    mingw64-i686-pkg-config\r\n\r\n  On cygwin terminal, do\r\n\r\n    % ./configure --host=i686-w64-mingw32 --disable-sdlmain\r\n    % make\r\n\r\n  If \"adintool-gui.exe\" fails or not run, try without \"--disable-sdlmain\".\r\n\r\n(tested on cygwin-x86 setup-v2.5.2, 08/31/2016)\r\n\r\n-----------------------------------------------\r\nCross-compiling for ARM:\r\n\r\n    % ./configure --host=arm-linux-gnueabihf\r\n    % make\r\n\r\nNote that \"-mfpu=neon -mfloat-abi=softfp\" is enabled by default for\r\nbetter performance.  You can replace it with your flags by specifying\r\nyour own compiler flags via \"CFLAGS\" environment value, like this:\r\n\r\n    % CFLAGS='-O3' ./configure --host=arm-linux-gnueabihf\r\n    % make\r\n\r\n(tested on cross-compilation on Ubuntu)\r\n\r\n-----------------------------------------------\r\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.7275390625,
          "content": "BSD 3-Clause License\n\nCopyright (c) 1991-2020 Kawahara Lab., Kyoto University\nCopyright (c) 1997-2000 Information-technology Promotion Agency, Japan\nCopyright (c) 2000-2005 Shikano Lab., Nara Institute of Science and Technology\nCopyright (c) 2005-2020 Julius project team, Nagoya Institute of Technology\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile.in",
          "type": "blob",
          "size": 1.5546875,
          "content": "# Copyright (c) 1991-2016 Kawahara Lab., Kyoto University\n# Copyright (c) 2000-2005 Shikano Lab., Nara Institute of Science and Technology\n# Copyright (c) 2005-2016 Julius project team, Nagoya Institute of Technology\n# All rights reserved\n#\n# Makefile.in --- Makefile Template for configure\n#\nSHELL=/bin/sh\n\nPRIMARY_LIBS=libsent libjulius\nAPPS=julius mkbingram mkbinhmm adinrec adintool mkgshmm mkss jcontrol gramtools generate-ngram jclient-perl binlm2arpa\nSUBDIRS=$(PRIMARY_LIBS) $(APPS) \n\nCONFIG_SUBDIRS=mkgshmm gramtools jcontrol mkbingram julius libjulius libsent\n\nRM=@RM@ -f\nprefix=@prefix@\nexec_prefix=@exec_prefix@\nINSTALL=@INSTALL@\n\n.PHONY: all install install.bin clean distclean configure doxygen\n\nall install install.bin clean distclean: $(SUBDIRS)\n\n$(APPS): $(PRIMARY_LIBS)\n\nall: TARGET=all\n\ninstall: TARGET=install\n\ninstall.bin: TARGET=install.bin\n\nclean: TARGET=clean\nclean:\n\t$(RM) config.log config.cache\n\ndistclean: TARGET=distclean\ndistclean:\n\t$(RM) config.log config.cache\n\t$(RM) config.status\n\t$(RM) Makefile\n\nconfigure:\n\tfor d in $(CONFIG_SUBDIRS); do \\\n\t  (cd $$d; autoconf); \\\n\tdone\n\ndoxygen:\n\tmkdir -p doxygen/en\n\tmkdir -p doxygen/ja\n\tcat support/doxygen.conf.en libjulius/doxygen.conf.ver > doxygen/doxygen.conf.en\n\tcat support/doxygen.conf.ja libjulius/doxygen.conf.ver > doxygen/doxygen.conf.ja\n\tdoxygen doxygen/doxygen.conf.en > doxygen/doxygen-en.log 2> doxygen/doxygen-en-err.log\n\tdoxygen doxygen/doxygen.conf.ja > doxygen/doxygen-ja.log 2> doxygen/doxygen-ja-err.log\n\n$(SUBDIRS): force\n\t@ test -f $@/Makefile && $(MAKE) -C $@ $(TARGET)\n\n.PHONY: force\n\nforce :;\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.8525390625,
          "content": "Julius: Open-Source Large Vocabulary Continuous Speech Recognition Engine\n==========================================================================\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.2530396.svg)](https://doi.org/10.5281/zenodo.2530396)\n\nCopyright (c) 1991-2020 [Kawahara Lab., Kyoto University](http://sap.ist.i.kyoto-u.ac.jp/)  \nCopyright (c) 2005-2020 [Julius project team, Lee Lab., Nagoya Institute of Technology](http://www.slp.nitech.ac.jp/)  \nCopyright (c) 1997-2000 Information-technology Promotion Agency, Japan  \nCopyright (c) 2000-2005 Shikano Lab., Nara Institute of Science and Technology  \n\n# About Julius\n\n\"Julius\" is a high-performance, small-footprint large vocabulary continuous speech recognition (LVCSR) decoder software for speech-related researchers and developers. Based on word N-gram and context-dependent HMM, it can perform real-time decoding on various computers and devices from micro-computer to cloud server. The algorithm is based on 2-pass tree-trellis search, which fully incorporates major decoding techniques such as tree-organized lexicon, 1-best / word-pair context approximation, rank/score pruning, N-gram factoring, cross-word context dependency handling, enveloped beam search, Gaussian pruning, Gaussian selection, etc. Besides search efficiency, it is also modularized to be independent from model structures, and wide variety of HMM structures are supported such as shared-state triphones and tied-mixture models, with any number of mixtures, states, or phone sets. It also can run multi-instance recognition, running dictation, grammar-based recognition or isolated word recognition simultaneously in a single thread.  Standard formats are adopted for the models to cope with other speech / language modeling toolkit such as HTK, SRILM, etc.  Recent version also supports Deep Neural Network (DNN) based real-time decoding.\n\nThe main platform is Linux and other Unix-based system, as well as Windows, Mac, Androids and other platforms.\n\nJulius has been developed as a research software for Japanese LVCSR since 1997, and the work was continued under IPA Japanese dictation toolkit project (1997-2000), Continuous Speech Recognition Consortium, Japan (CSRC) (2000-2003) and Interactive Speech Technology Consortium (ISTC).\n\nThe main developer / maintainer is Akinobu Lee (ri@nitech.ac.jp).\n\n# Features\n\n- An open-source LVCSR software (BSD 3-clause license).\n- Real-time, hi-speed, accurate recognition based on 2-pass strategy.\n- Low memory requirement: less than 32MBytes required for work area (<64MBytes for 20k-word dictation with on-memory 3-gram LM).\n- Supports LM of N-gram with arbitrary N.  Also supports rule-based grammar, and word list for isolated word recognition.\n- Language and unit-dependent: Any LM in ARPA standard format and AM in HTK ascii hmm definition format can be used.\n- Highly configurable: can set various search parameters. Also alternate decoding algorithm (1-best/word-pair approx., word trellis/word graph intermediates, etc.) can be chosen.\n- List of major supported features:\n  - On-the-fly recognition for microphone and network input\n  - GMM-based input rejection\n  - Successive decoding, delimiting input by short pauses\n  - N-best output\n  - Word graph output\n  - Forced alignment on word, phoneme, and state level\n  - Confidence scoring\n  - Server mode and control API\n  - Many search parameters for tuning its performance\n  - Character code conversion for result output.\n  - (Rev. 4) Engine becomes Library and offers simple API\n  - (Rev. 4) Long N-gram support\n  - (Rev. 4) Run with forward / backward N-gram only\n  - (Rev. 4) Confusion network output\n  - (Rev. 4) Arbitrary multi-model decoding in a single thread.\n  - (Rev. 4) Rapid isolated word recognition\n  - (Rev. 4) User-defined LM function embedding\n- DNN-based decoding, using front-end module for frame-wise state probability calculation for flexibility.\n\n# Quick Run\n\nHow to test English dictation with Julius and English DNN model.  The procedure is for Linux but almost the same for other OS.\n\n(For Japanese dictation, Use [dictation kit](https://github.com/julius-speech/julius#japanese-dictation-kit))\n\n## 1. Build latest Julius\n\n```shell\n% sudo apt-get install build-essential zlib1g-dev libsdl2-dev libasound2-dev\n% git clone https://github.com/julius-speech/julius.git\n% cd julius\n% ./configure --enable-words-int\n% make -j4\n% ls -l julius/julius\n-rwxr-xr-x 1 ri lab 746056 May 26 13:01 julius/julius\n```\n\n## 2. Get English DNN model\n\nGo to [JuliusModel](https://sourceforge.net/projects/juliusmodels/files/) page and download the English model(LM+DNN-HMM) named \"`ENVR-v5.4.Dnn.Bin.zip`\".  Unzip it and cd to there.\n\n```shell\n% cd ..\n% unzip /some/where/ENVR-v5.4.Dnn.Bin.zip\n% cd ENVR-v5.4.Dnn.Bin\n```\n\n## 3. Modify config file\n\nEdit the `dnn.jconf` file in the unzipped folder to fit the latest version of Julius:\n\n```text\n(edit dnn.jconf)\n@@ -1,5 +1,5 @@\n feature_type MFCC_E_D_A_Z\n-feature_options -htkconf wav_config -cvn -cmnload ENVR-v5.3.norm -cmnstatic\n+feature_options -htkconf wav_config -cvn -cmnload ENVR-v5.3.norm -cvnstatic\n num_threads 1\n feature_len 48\n context_len 11\n@@ -21,3 +21,4 @@\n output_B ENVR-v5.3.layerout_bias.npy\n state_prior_factor 1.0\n state_prior ENVR-v5.3.prior\n+state_prior_log10nize false\n```\n\n## 4. Recognize audio file\n\nRecognize \"`mozilla.wav`\" included in the zip file.\n\n```shell\n% ../julius/julius/julius -C julius.jconf -dnnconf dnn.jconf\n```\n\nYou'll get tons of messages, but the final result of the first speech part will be output like this:\n\n```\nsentence1: <s> without the data said the article was useless </s>\nwseq1: <s> without the data said the article was useless </s>\nphseq1: sil | w ih dh aw t | dh ax | d ae t ah | s eh d | dh iy | aa r t ah k ah l | w ax z | y uw s l ah s | sil\ncmscore1: 0.785 0.892 0.318 0.284 0.669 0.701 0.818 0.103 0.528 1.000\nscore1: 261.947144\n```\n\n\"`test.dbl`\" contains list of audio files to be recognized.  Edit the file and run again to test with another files.\n\n## 5. Run with live microphone input\n\nTo run Julius on live microphone input, save the following text as \"`mic.jconf`\".\n\n```text\n-input mic\n-htkconf wav_config\n-h ENVR-v5.3.am\n-hlist ENVR-v5.3.phn\n-d ENVR-v5.3.lm\n-v ENVR-v5.3.dct\n-b 4000\n-lmp 12 -6\n-lmp2 12 -6\n-fallback1pass\n-multipath\n-iwsp\n-iwcd1 max\n-spmodel sp\n-no_ccd\n-sepnum 150\n-b2 360\n-n 40\n-s 2000\n-m 8000\n-lookuprange 5\n-sb 80\n-forcedict\n```\n\nand run Julius with the mic.jconf instead of julius.jconf\n\n```shell\n% ../julius/julius/julius -C mic.jconf -dnnconf dnn.jconf\n```\n\n# Download\n\nThe latest release version is [4.6](https://github.com/julius-speech/julius/releases), released on September 2, 2020.\nYou can get the released package from the [Release page](https://github.com/julius-speech/julius/releases).\nSee the \"Release.txt\" file for full list of updates.  Run with \"-help\" to see full list of options.\n\n# Install / Build Julius\n\nFollow the instructions in [INSTALL.txt](https://github.com/julius-speech/julius/blob/master/INSTALL.txt).\n\n# Tools and Assets\n\nThere are also toolkit and assets to run Julius.  They are maintained by the Julius development team.  You can get them from the following Github pages:\n\n## [Japanese Dictation Kit](https://github.com/julius-speech/dictation-kit)\n\nA set of Julius executables and Japanese LM/AM.  You can test 60k-word Japanese dictation with this kit.  For AM, triphone HMMs of both GMM and DNN are included.  For DNN, a front-end DNN module, separated from Julius, computes the state probabilities of HMM for each input frame and send them to Julius via socket to perform real-time DNN decoding.  For LM, 60k-word 3-gram trained by BCCWJ corpus is included.  You can get it from [its GitHub page](https://github.com/julius-speech/dictation-kit).\n\n## [Recognition Grammar Toolkit](https://github.com/julius-speech/grammar-kit)\n\nDocuments, sample files and conversion tools to use and build a recognition grammar for Julius.  You can get it from [the GitHub page](https://github.com/julius-speech/grammar-kit).\n\n## [Speech Segmentation Toolkit](https://github.com/julius-speech/segmentation-kit)\n\nThis is a handy toolkit to do phoneme segmentation (aka phoneme alignments) for speech audio file using Julius. Given pairs of speech audio file and its transcription, this toolkit perform Viterbi alignment to get the beginning and ending time of each phoneme.  This toolkit is available at [its GitHub page](https://github.com/julius-speech/segmentation-kit).\n\n## [Prompter](https://github.com/julius-speech/prompter)\n\nPrompter is a perl/Tkx based tiny program that displays recognition results of Julius in a scrolling caption style.\n\n# About Models\n\nSince Julius itself is a language-independent decoding program, you can make a recognizer of a language if given an appropriate language model and acoustic model for the target language. The recognition accuracy largely depends on the models. Julius adopts acoustic models in HTK ascii format, pronunciation dictionary in almost HTK format, and word 3-gram language models in ARPA standard format (forward 2-gram and reverse N-gram trained from same corpus).\n\nWe had already examined English dictations with Julius, and another researcher has reported that Julius has also worked well in English, Slovenian (see pp.681--684 of Proc. ICSLP2002), French, Thai language, and many other Languages.\n\nHere you can get Japanese and English language/acoustic models.\n\n## Japanese\n\nJapanese language model (60k-word trained by balanced corpus) and acoustic models (triphone GMM/DNN) are included in the [Japanese dictation kit](https://github.com/julius-speech/dictation-kit).  More various types of Japanese N-gram LM and acoustic models are available at CSRC. For more detail, please contact csrc@astem.or.jp.\n\n## English\n\nThere are some user-contributed English models for Julius available on the Web.\n\n[JuliusModels](https://sourceforge.net/projects/juliusmodels/) hosts English and Polish models for Julius.  All of the models are based on HTK modelling software and data sets available freely on the Internet.  They can be downloaded from a project website which I created for this purpose.  Please note that DNN version of these models require minor changes which the author included in a modified version of Julius on Github at https://github.com/palles77/julius .\n\nThe [VoxForge-project](http://www.voxforge.org/) is working on the creation of an open-source acoustic model for the English language.\nIf you have any language or acoustic model that can be distributed as a freeware, would you please contact us? We want to run dictation kit on various languages other than Japanese, and share them freely to provide a free speech recognition system available for various languages.\n\n# Documents\n\nRecent documents:\n\n- Up-to-date document is now provided in markdown at [doc/](https://github.com/julius-speech/julius/blob/master/doc/).\n  - Updating all documents to recent version, work in progress.\n  - Finished Section:\n    [Options](https://github.com/julius-speech/julius/blob/master/doc/Options.md),\n    [Audio](https://github.com/julius-speech/julius/blob/master/doc/Audio.md),\n    [Feature](https://github.com/julius-speech/julius/blob/master/doc/Feature.md),\n    [Vector Input](https://github.com/julius-speech/julius/blob/master/doc/VectorInput.md),\n    [VAD](https://github.com/julius-speech/julius/blob/master/doc/VAD.md),\n    [Normalization](https://github.com/julius-speech/julius/blob/master/doc/Normalize.md),\n    [Input Rejection](https://github.com/julius-speech/julius/blob/master/doc/Rejection.md).\n- All options are fully described at [Options](https://github.com/julius-speech/julius/blob/master/doc/Options.md), also listed in sample configuration file [Sample.jconf](https://github.com/julius-speech/julius/blob/master/Sample.jconf), also be output when invoked with \"julius --help\".\n- Full history and short descriptions are in [Release Notes](https://github.com/julius-speech/julius/blob/master/Release.txt) ([JP version](https://github.com/julius-speech/julius/blob/master/Release-ja.txt))\n- For DNN-HMM, take a look at [00readme-DNN.txt](https://github.com/julius-speech/julius/blob/master/00readme-HNN.txt) for how-to and [Sample.dnnconf](https://github.com/julius-speech/julius/blob/master/Sample.dnnconf) as example.\n\nOther, old documents:\n\n- [The Juliusbook 3 (English) - translated from Japanese for 3.x](http://julius.sourceforge.jp/book/Julius-3.2-book-e.pdf)\n- [The Juliusbook 4 (Japanese) - full documentation in Japanese](http://julius.osdn.jp/juliusbook/ja/)\n- [The grammar format of Julius](http://julius.sourceforge.jp/en_index.php?q=en_grammar.html)\n\n# References\n\n- [Official web site (Japanese)](http://julius.osdn.jp/)\n- [Old development site, having old releases](http://sourceforge.jp/projects/julius/)\n- Publications:\n  - A. Lee and T. Kawahara. \"Recent Development of Open-Source Speech Recognition Engine Julius\" Asia-Pacific Signal and Information Processing Association Annual Summit and Conference (APSIPA ASC), 2009.\n  - A. Lee, T. Kawahara and K. Shikano. \"Julius --- an open source real-time large vocabulary recognition engine.\" In Proc. European Conference on Speech Communication and Technology (EUROSPEECH), pp. 1691--1694, 2001.\n  - T. Kawahara, A. Lee, T. Kobayashi, K. Takeda, N. Minematsu, S. Sagayama, K. Itou, A. Ito, M. Yamamoto, A. Yamada, T. Utsuro and K. Shikano. \"Free software toolkit for Japanese large vocabulary continuous speech recognition.\" In Proc. Int'l Conf. on Spoken Language Processing (ICSLP) , Vol. 4, pp. 476--479, 2000.\n\n# Moved to UTF-8\n\nWe are going to move to UTF-8.\n\nThe master branch after the release of 4.5 (2019/1/2) has codes\nconverted to UTF-8.  All files were converted to UTF-8, and future\nupdate will be commited also in UTF-8.\n\nFor backward compatibility and log visibility, we are keeping the old\nencoding codes at branch \"master-4.5-legacy\".  The branch keeps legacy\nencoding version of version 4.5.  If you want to inspect the code\nprogress before the release of 4.5 (2019/1/2), please checkout the\nbranch.\n\n# License and Citation\n\nThis code is made available under the modified BSD License (BSD-3-Clause License).\n\nOver and above the legal restrictions imposed by this license, when you publish or present results by using this software, we would highly appreciate if you mention the use of \"Large Vocabulary Continuous Speech Recognition Engine Julius\" and provide proper reference or citation so that readers can easily access the information of the software. This would help boost the visibility of Julius and then further enhance Julius and the related software.\n\nCitation to this software can be a paper that describes it,\n\n> A. Lee, T. Kawahara and K. Shikano. \"Julius --- An Open Source Real-Time Large Vocabulary Recognition Engine\".  In Proc. EUROSPEECH, pp.1691--1694, 2001.\n\n> A. Lee and T. Kawahara. \"Recent Development of Open-Source Speech Recognition Engine Julius\" Asia-Pacific Signal and Information Processing Association Annual Summit and Conference (APSIPA ASC), 2009.\n\nor a direct citation to this software,\n\n> A. Lee and T. Kawahara: Julius v4.5 (2019) https://doi.org/10.5281/zenodo.2530395\n\nor both.\n"
        },
        {
          "name": "Release-ja.txt",
          "type": "blob",
          "size": 43.203125,
          "content": "4.6 (2020.09.02)\r\n=================\r\n○新機能\r\n- GPU サポート（DNN-HMM計算部）\r\n  - CUDA toolkit をインストールし nvcc でビルドすることで有効化 詳しくは INSTALL.txt の対応する項目を。\r\n  - .dnnconf で \"cuda_mode=...\" で詳細なパラメータを設定可能 詳しくは Sample.dnnconf の末尾を。\r\n  - Linux の CUDA 8.0, 9.0, 10.2 で動作確認済み\r\n- 1パス文法認識の実装\r\n  - 第1パスからフルの文法制約を適用することで、1パス文法認識を行うモードを新規追加\r\n  - モードのON/OFFは文法単位：\".dfa.forward\" ファイルが存在する文法はこの機能が有効になり、なければ従来バージョン通り（単語対制約のみ）\r\n  - \".dfa.forward\" は前向き文法ファイルで、これ以降のバージョンの \"mkdfa\" で自動生成される。\r\n- DNN-HMM で出力が log10 化されている/いないモデルに両対応\r\n  - .dnnconf で \"state_prior_log10nize=yes/no\" で指定する\r\n- 特徴量正規化モードを追加：平均は入力自身、分散は固定値を使うモード\r\n  - 新たなオプション \"-cvnstatic\" で指定可能\r\n  - 新モードを含めた全体的な動作の説明が \"doc/Normalize.md\" にまとめられた\r\n○更新\r\n- 修正BSDライセンスへ移行\r\n- Python バージョンの文法コンパイラ \"mkdfa.py\" を gramtools/mkdfa に追加\r\n- Visual Studio 2017 でのビルドに対応。多くのツールのビルドに対応。\r\n- 最新版に合わせたドキュメントを markdown 形式で doc/ 以下に執筆中（フロントエンドまで記述）\r\n- GitHubで見やすいよう各ディレクトリに README.md を置き、*.txt を廃止\r\n- mkdfa (mkfa) がエラー行番号などより詳細なエラーを出力するようになった\r\n○バグ修正\r\n- \"mkbingram\" で文字コード変換を指定しても無視される不具合を修正\r\n- その他の軽微な修正\r\n\r\n4.5 (2019.01.02)\r\n=================\r\n○新機能\r\n- ロバストな VAD のために libfvad を取り込み\r\n  - libfvad: a voice activity detection library based on WebRTC's VAD\r\n  engine [https://github.com/dpirch/libfvad]\r\n  - 本バージョンより dual-mode VAD となった：\r\n    - 旧モジュール（入力振幅とゼロ交差数ベース）\r\n    - 新モジュール（libfvadベース (=モデルベース)）\r\n  - 2つのVADモジュールはオーディオ入力に対して並行で同時に動く\r\n  - 両方ともトリガしたときに音声区間が開始される\r\n  - 新VAD (libfvad) はデフォルトではオフ。オプション \"-fvad 値\" で有効\r\n  化。値は 0 から 3 で大きいほどアグレッシブな VAD を行う。(WebRTCの仕\r\n  様のまま）\r\n  - 新VAD と関連オプションは julius, adinrec, adintool にて使用可能\r\n  - 使い方の例:\r\n      - \"-fvad -1\" で旧モジュールのみ使用（以前のバージョンと等価）\r\n      - \"-fvad 3 -lv 1\" で新モジュールのみ使用。 \"-lv 1\" とすることで\r\n      旧モジュールを常にトリガ状態にすることで、VAD結果が新モジュール\r\n      のみに依存させることができる\r\n- マルチスレッドの DNN 計算をサポート\r\n  - スレッド数は dnnconf で \"num_threads\" で指定できる。デフォルトは 2。o\r\n\r\n○変更点\r\n- モジュールモードの出力(XML形式) で XML エスケープに対応\r\n  - <, >, \", &, ' は &lt;, &gt;, &quot; &amp;, %apos; に変換される\r\n  - オプション \"-noxmlescape\" でエスケープをオフにして以前のバージョン\r\n  の動作に戻せます\r\n\r\n○バグ修正\r\n- 並列ビルド (ex. make -j 4)\r\n- adintool-gui に引数を与えるとたまにクラッシュするバグを修正\r\n- ワーニング・メモリリークを修正\r\n- 一部 OS でのビルドエラーを修正\r\n\r\n○新オプション\r\n  [-fvad mode]  libfvadベースVADの有効/無効およびモードの設定。 mode\r\n  が -1 だと無効化、0 から 3 だと有効化。0 以上の値は強度を表し、値が\r\n  大きいほどアグレッシブなVADになる(= speech-like noise でも落とそうと\r\n  する）。デフォルト値は -1 （無効）\r\n\r\n  [-fvad_param nFrame thres]  libfvad ベースVADの詳細パラメータを変更\r\n  する。nFrame はスムージングフレーム数、thres は音声トリガ検知閾値で\r\n  0.0 から 1.0 の間の値。デフォルト値はそれぞれ 5, 0.5 である。\r\n\r\n○新configureオプション\r\n  \"--disable-libfvad\": libfvad のビルドを無効化\r\n\r\n○ドキュメント更新中\r\n- adinrec,adintool README.md README.ja.md\r\n- julius README.md, Options.md\r\n\r\n\r\n4.4.2.1 (2016.12.20)\r\n====================\r\n- AndroidとiOS用の細かい修正\r\n- msvcディレクトリの整理\r\n\r\n4.4.2 (2016.09.12)\r\n===================\r\n- dnnconf 内の相対パスをそのdnnconf自身からの相対パスとして扱うよう修正\r\n- DNN使用時、認識処理の第2パスが異常に遅いことがある不具合を修正\r\n- AVX非対応のCPUでDNN計算が動作しない不具合を修正\r\n- ARMとVisualStudioでのビルドを改善\r\n\r\n4.4.1 (2016.09.07)\r\n===================\r\n- DNNのSIMD計算の高速化と安定化：SSE命令、FMA命令、ARMのNEON命令を実装\r\n- DNN使用時にCPUを自動チェックして最適なSIMDコードを選択使用するよう拡張\r\n- VisualStudio2013でのコンパイル用に PortAudio と zlib のソースを同梱\r\n- mkbinhmmlistで作ったバイナリHMMListが正しく読めないことがあるバグを修正\r\n- adintool-gui コンパイル時のSDL周りが動かないのを修正\r\n- \"INSTALL.txt\" に各OSでのビルドのセットアップと実行方法を記述\r\n- pkg-config に対応\r\n- その他バグの修正\r\n\r\n4.4 (2016.08.30)\r\n=================\r\n- DNN-HMMの計算をサポート\r\n- \"adintool-gui\": 音声入力モニタGUI付き adintool (adintool/README-GUI.txt参照)\r\n- \"binlm2arpa\": バイナリ言語モデルをARPAに変換する\r\n- \"mkbingram\" に言語モデルの文字コードを変換して出力するオプション \"-c\" を追加\r\n- モジュールモードで動作時，クライアント切断後に落ちずに再接続できるよう改善\r\n- 幾つかのOSでのコンパイルエラーを修正\r\n- メモリリークを幾つか修正\r\n- バージョン2.6以降の Autoconf で動作するよう修正\r\n- GitHub用のファイルを追加（README.md, CONTRIBUTING.md 等）\r\n- DNN-HMMを使った認識の説明テキスト \"00readme-DNN.txt\" を追加\r\n- VisualStudio2013以降をサポート\r\n\r\n4.3.1 (2014.01.15)\r\n===================\r\n○バグ修正\r\n- OS X でのコンパイルエラー\r\n- adintool での不要なデバッグメッセージ出力\r\n- \"-cmnload\" まわりの読み込み・計算に関わるいくつかのバグ\r\n\r\n4.3 (2013.12.25)\r\n=================\r\n○新機能\r\n- フィルタバンク出力（FBANK および MELSPEC）のサポート\r\n- ネットワーク経由の特徴量ベクトル入力および出力確率ベクトル入力\r\n- DNN-HMMデコーディングのための状態出力確率ベクトル（outprob vector）入力\r\n- DNN-HMMデコーディングのためのhmmdefsへの \"<SID>\" 拡張の導入\r\n- adintool でリアルタイムの特徴量抽出とネットワーク送信が可能に\r\n\r\n○変更点\r\n- mkbinhmm が変換元hmmdefsの状態順あるいはID（\"<SID>\"）を保持\r\n- Portaudio 使用時エンジンのpause/resumeで音声デバイスも停止・再開する\r\n- CMN/CVN用のケプストラム平均・分散を HTK テキスト形式で保存するように\r\n\r\n○新オプション\r\n  [-input vecnet]       ネットワークから特徴量/出力確率ベクトルを読み込む\r\n  [-input outprob]      HTKパラメータファイルを出力確率ベクトルとして読み込む\r\n  [-outprobout [file]]  計算された出力確率行列をHTK形式ファイルに保存(debug)\r\n\r\n\r\n4.2.3 (2013.06.30)\r\n==================\r\n\r\n○新機能\r\n- 辞書のリロード: j_reload_adddict()\r\n- 音声入力の振幅のスケーリング：\"-lvscale factor\" および\r\n  \"j_adin_change_input_scaling_factor()\"\r\n- 長い入力の棄却：\"-rejectlong msec\"\r\n- バイナリN-gramの文字コード変換をサポート: \"mkbingram\"\r\n- ベイズリスク最小化(MBR)探索の実装（南條浩輝氏，古谷遼氏より提供）\r\n\r\n○修正されたバグ\r\n- ビッグエンディアンマシンでadinnetで音声をネットワーク送信するときに\r\n  エンディアンが異なっていた問題\r\n- j_close_stream() で音声デバイスのクローズにたまに失敗する\r\n- 64bit環境で変換されたパラメータ埋め込み付きバイナリHMMが読み込めない問題\r\n- N-gram ファイル読み込み失敗時のメモリリーク\r\n- 入力長オーバーフロー時のメモリリーク\r\n- 特徴ベクトル呼び込みプラグインが動作しない\r\n- 最新のMacOSXでコンパイルに失敗する\r\n\r\n\r\n4.2.2 (2012.08.01)\r\n==================\r\n\r\n○修正点\r\n\r\n- Flex ライブラリ無しでコンパイルできるようになった\r\n- \"--enable-words-int\" 指定時に通常のバイナリ N-gram が読めない不具合を修正\r\n- Windows において jconf 内でバックスラッシュの入ったパスを扱えないバグを修正\r\n- エラーを含む単語辞書を読んだときに segfault する不具合を修正\r\n- 探索中に稀に segfault する不具合を修正\r\n\r\n\r\n4.2.1 (2011.12.25)\r\n===================\r\n\r\n○新機能\r\n- 文法認識において単語別の挿入ペナルティ設定をサポート．\r\n  辞書において以下のように指定する\r\n        15 @-2.0 15 [a] a\r\n  第１フィールドは従来と同じカテゴリ番号。\r\n　第２フィールドに \"@\" に続けて挿入ペナルティを対数で指定する。\r\n　第３フィールドは第１フィールドと同じ値を書く。\r\n\r\n- 新オプション \"-chunk_size\": オーディオ入力のバッファ長をサンプル数で\r\n  指定可能（デフォルト： 1000）小さくすると遅延を小さくできるが小さす\r\n  ぎると不安定になる。\r\n- adintool で標準入力時に検出をデフォルトで有効化\r\n\r\n○修正されたバグ\r\n- 特徴量に C0 を使っているとき，C0 に CMN が行われない\r\n　（このバグは4.1.3〜4.2までのJuliusに存在する）\r\n- mkbingram，generate-ngram が cygwin で落ちる\r\n- \"-adddict\" で追加した辞書に \"-forcedict\" が効かない\r\n- 音声録音時，CTRL+C で止めると WAV ヘッダにデータ長が書きこまれない\r\n- エラーを含む辞書を読んだとき、エラーを吐かずに segfault する\r\n- \"--enable-word-graph\" でコンパイルエラーが出る\r\n\r\n\r\n4.2 (2011.05.01)\r\n=================\r\n\r\n○新機能\r\n- 第１パスのスコアプルーニング．\"-bs 値\" で有効化, \"値\" はスコア幅．\r\n  通常のランクプルーニング(-b 値) と併用．デフォルトはオフ．\r\n- 新オプション \"-adddict\" \"-addword\"：辞書・単語エントリを追加読み込み．\r\n- PulseAudio サポート (--with-mictype=pulseaudio)\r\n- Portaudio を V19 に更新．\r\n- Portaudio を使う全ての場合において，複数の録音デバイスが利用可能なとき，\r\n  環境変数 PORTAUDIO_DEV_NUM で使用する録音デバイスを指定可能にした．\r\n  起動時に出力されるデバイス一覧の値を指定する．\r\n\r\n○仕様変更を伴う改善\r\n- mkbinhmmlist が音響モデルから抽出した pseudo phone 情報も書きだすよ\r\n  うになった．起動の高速化に寄与する．ただし作成した音響モデルとセット\r\n  で使用する必要がある．また，このバージョン以降の mkbinhmmlist で作成\r\n  した binhmmlist ファイルは以前のバージョンでは使用できない．\r\n- オーディオライブラリのリンク方法の変更．configure に\r\n  \"--with-mictype\" を指定したときは，その指定されたライブラリ＊のみ＊\r\n  をリンクするようになった．指定がないときは，従来通り，検出された\r\n  ライブラリを全てリンクする．\r\n\r\n○ライブラリ関数\r\n- j_config_load_string_new(char *str): j_config_load_file() と同様，\r\n  ただしファイルではなく str に含まれるオプション指定文字列を直接\r\n  評価する．\r\n- add_dict() および add_word(): オプション \"-adddict\" \"-addword\" と同\r\n  じく，辞書や単語を追加する．エンジン起動後動的にはできないので，\r\n  エンジンインスタンス生成前に呼ぶこと．\r\n- portaudio 使用時(Windows等), 環境変数 PORTAUDIO_DEV_NUM と同様に，\r\n  j_open_stream(recog, NUMSTR) として引数でもデバイス選択が可能．\r\n- portaudio 使用時(Windows等)，get_device_list() で利用可能なデバイス\r\n  一覧を取得できる．\r\n\r\n○性能改善・バグ修正\r\n- 木構造化辞書を一部最適化，特に大語彙でメモリ量を削減\r\n- N-gram読み込み時，場合によっては数万回mallocしていたのを減らした\r\n- メモリリークをほぼ撲滅（Valgrind使用）\r\n- j_close_stream() に関する不具合を複数修正\r\n- \"-iwsp\" をマルチパス音響モデルだけで使えるよう修正\r\n\r\n\r\n4.1.5.1 (2010.12.25)\r\n=====================\r\n\r\n○修正\r\n - ライセンスに関する問題を修正\r\n\r\n\r\n4.1.5 (2010.06.04)\r\n===================\r\n\r\n以下のバグを修正：\r\n\r\n・言語モデルとデコーディングのバグ修正\r\n （スコアと認識率に影響する可能性あり）\r\n  - 文法認識で単語挿入ペナルティの扱いがおかしいことがあるのを発見・修正\r\n　- 第2パスで最初の単語 \"</s>\" の1-gramを無視していたのを修正\r\n\r\n・MFCC特徴量計算\r\n　- Liftering パラメータ（CEPLIFTER）が 0 のときに計算がおかしくなるバ\r\n    グを修正\r\n\r\n・コンパイル環境\r\n  - cygwin, MSVC でのコンパイルを改善\r\n  - cygwin で \"gcc -mno-cygwin\" をサポート\r\n  - \"--disable-plugin\" を configure で指定したときにエラーになるのを修正\r\n\r\n・モジュールモード\r\n  - jcontrol から addgram や changegram で文法・辞書が送れないことがあ\r\n　　るのを修正\r\n  - \"DELPROCESS\" コマンドが、SR と LM のインスタンス名が異なるとき動か\r\n　　ないのを修正。（SR名のみで可能）\r\n\r\n・その他修正\r\n  - \"-mapunk\" オプションが引数を正しく読めないことがあるのを修正\r\n  - jconf ファイル内の \"-htkconf\" がファイル名を jconf からの相対パス\r\n    と解釈しないバグを修正\r\n  - \"-input stdin\" で標準入力から与える音声入力ファイルに WAV 形式が\r\n    使えなかったのを修正\r\n  - プラグインの場所指定 \"-plugin ディレクトリ名\" が MSVC で動かなかっ\r\n    たのを修正\r\n\r\n\r\n4.1.4 (2009.12.25)\r\n===================\r\n\r\n○新規\r\n - MSVC でコンパイルされたJuliusにおいて音声入力デバイスを選択する機能\r\n   を追加．環境変数 PORTAUDIO_DEV_NUM で番号を指定する．デバイスの番号\r\n   は起動時に一覧がログに出るのでその中から選択して指定すること．\r\n - MSVC版 Julius で言語モデルごとにロケールを指定できるようになった．\r\n\r\n○修正\r\n - Mac OS X (OS X 10.6 SDK) でコンパイルできるようになった\r\n - 遅延の低減と互換性に関する portaudio (Windows用) 周りの修正\r\n\r\n\r\n4.1.3 (2009.11.02)\r\n===================\r\n\r\n○新規\r\n - 新たな MSVC サポート：\"msvc/00README.txt\" を読んでください。\r\n - 任意長の N-gram をサポート\r\n - システムに portaudio ライブラリとヘッダがあれば、Julius 内蔵の\r\n   portaudio の代わりにそれを使用するようになった。外部ライブラリは\r\n   V19 にも対応する。その場合、録音デバイスを PORTAUDIO_DEV で指定可能。\r\n   書式は起動時のログを見ること。\r\n - モジュールモードでアライメント結果 (-walign) を出力可能に\r\n\r\n○変更・修正\r\n - 4.1.x で 0次ケプストラム項をCMNしていたのを、4.0.x 以前と同様に行わ\r\n   ないよう仕様変更した。\r\n - j_get_current_filename() を JuliusLib に追加\r\n - \"--enable-wpair\" のアルゴリズムを若干改善\r\n\r\n○バグ修正\r\n - 入力ストリーム開始・終了にまつわる複数のバグを修正\r\n - julius-simple が make できないバグを修正\r\n - cygwin で録音できないバグを修正\r\n - adintool が \"-server\" で落ちるバグを修正\r\n - たまに文法認識で文法切り替え後に落ちるバグを修正\r\n\r\n\r\n4.1.2 (2009.02.12)\r\n===================\r\n\r\n[N-gram]\r\n - サイズ上限を 2GB から 4GB に拡張\r\n - \"-mapunk\" で unknown word を指定可能に．デフォルトは \"<unk>\" \"<UNK>\"\r\n - チェックの厳密化：辞書に未知語がある場合，N-gram に \"<unk>\" が無いとエラー\r\n[SRILM対応]\r\n - backward ARPA 読み込み時に <s> </s> を自動入れ替え\r\n - mkbingram で backward ARPA 読み込み時に \"-swap\" で明示的に入れ替え\r\n - <s>の 1-gramが必ず -99 になるのを自動修正\r\n[機能改善]\r\n - successor list 構築アルゴリズムを高速化．\r\n - yomi2voca.pl 更新\r\n - ALSA audio buffer overrun 対策\r\n - generate-ngram の -debug 指定時の挙動を変更\r\n[JuliusLib]\r\n - j_close_stream() 追加\r\n[バグ修正]\r\n - adintool 複数サーバ指定できないバグ修正\r\n - cygwin でのコンパイルエラー修正 (libesd)\r\n - \"-input\" 無指定時に落ちるバグを修正\r\n\r\n\r\n4.1.1 (2008.12.13)\r\n===================\r\nバグ修正：\r\n\r\n[N-gram]\r\n  - SRILM で学習した言語モデルが正しく読み込めないバグを修正\r\n[音声入力]\r\n  - \"-htkconf ConfigFile\" で ConfigFile 内の \"SOURCERATE\" が無視される\r\n    のを修正\r\n  - \"-input stdin\" が動かないのを修正\r\n[アラインメント]\r\n  - 単単語認識や \"-1pass\" 指定時でもアラインメントを出せるようになった\r\n  - \"-palign\", \"-walign\" と \"-salign\" を複数指定してもどれか一つしか\r\n    実行されないバグを修正\r\n[Module mode]\r\n  - 単単語認識時 に receive/activate/dactivate できないバグを修正\r\n  - クライアントから文法をID番号で指定するとフリーズするバグを修正\r\n  - 認識結果の属する文法番号 (GRAM=..) の出力が常に 0 になるバグを修正\r\n  - 単単語認識時 \"SYNCGRAM\" を送るとJuliusが落ちるバグを修正\r\n[Others]\r\n  - いくつかの OS でコンパイルできないのを修正（\"-ldl\" を追加）\r\n  - Jconf 内でバックスラッシュが正しく扱えないバグを修正\r\n  - 1パス実行時に第1パスの結果を最終結果としても出力するよう修正\r\n[Tools]\r\n  Jcontrol\r\n  - \"graminfo\" コマンドを新規サポート\r\n  - 単単語認識時に文法（辞書）をクライアントから送れないバグを修正\r\n  mkdfa\r\n  - mkfa がたまに落ちるのを修正\r\n  - DOS 形式の入力が読めないことがあるバグを修正\r\n  adintool\r\n  - 分割時にその始終端の時間を出力するようになった．\r\n  - 長いオーディオファイルを切るときにおかしくなるバグを修正\r\n\r\n\r\n4.1 (2008.10.3)\r\n================\r\n■プラグインによる機能拡張：\r\n  - 対応するプラグインの型\r\n      - 音声信号入力\r\n      - 特徴量ベクトル入力\r\n      - 音声入力処理\r\n      - 特徴量ベクトル処理\r\n      - 結果出力\r\n      - JuliusLib のコールバック関数をプラグインから追加することも可能\r\n  - プラグインのサンプルソースコードを同梱．各関数の仕様の詳細なコメント付き．\r\n  - 動作環境：Linux, Windows および dlopen() がある OS\r\n\r\n■新機能：\r\n  - マルチストリーム特徴量入力のサポート\r\n  - MSD-HMM のサポート（HTS ツールキットで学習したモデルを使用可能）\r\n  - CVN サポート\r\n  - VTLN 用 frequency warping （パラメータ推定は無し）\r\n  - \"-input alsa\", \"-input oss\" および \"-input esd\"\r\n  - モジュールモード用クライアントの perl 版 \"jclient-perl\" の同梱\r\n\r\n■仕様変更：\r\n  - 複数モデル認識時のオプションの位置を制限\r\n      - オプションは対応するインスタンス定義の真後ろで書く必要がある．\r\n      　（例：言語モデルオプションは \"-LM\" の直後，他のインスタンス定義の\r\n      　　前に書く必要がある．言語モデルオプションを \"-AM\" の後ろに書いたり\r\n      　　するとエラーになる）\r\n      - 全体オプションは，インスタンス定義の前に書くか，\"-GLOBAL\" オプション\r\n      　指定直後に書く\r\n  　なお，この新たな制約は \"-nosectioncheck\" を指定することで解除できる．\r\n\r\n■バグ修正：\r\n  - \"-record\" で各検出区間の最初の無音部分がファイルに保存されない\r\n  - \"-multigramout\" が正しく動かない\r\n  - jconf ファイル内で環境変数の展開がたまにうまくいかない\r\n  - HMM の制約を緩和：HMM名の最大長を 256, 状態数の上限を撤廃\r\n  - モジュールの文法関係エラー時のメッセージを統一\r\n\r\n■ドキュメント\r\n  - \"Juliusbook\" のリリース (pdf / html)\r\n  - マニュアルを刷新し，man ディレクトリ以下に集約．\r\n    デフォルトでインストールされるようになった．\r\n\r\n\r\n4.0.2 (2008.5.27)\r\n==================\r\n新機能：\r\n\r\n- 第2パスの探索が失敗したとき，旧バージョン (3.x 以前) では第1パスの結\r\n  果を最終結果として出力していたが，4.x では認識失敗＝解なしとなる．\r\n  新オプション \"-fallback1pass\" を指定することで，旧バージョンと同様に，\r\n  第2パス失敗時に第1パスの結果を最終結果として出力するようにできる．\r\n- 特徴量抽出で USEPOWER=T をサポート\r\n\r\n仕様変更：\r\n- GMM 使用時，\"-AM_GMM\" の指定がない場合，音響モデルの特徴量設定を共有\r\n  するようになった．\r\n\r\nバグ修正：\r\n- GMM による棄却が 4.0.1 で動かなくなっていたのを修正\r\n- Linux/ALSA で他のデバイスを正しく指定できるようになった．\r\n- 巨大な N-gram の読み込みにたまに失敗するバグを修正\r\n- \"-record\" オプション指定時に不安定になるバグを修正\r\n- マイク入力で sp-segment / GMM / VAD 実行時の callback 実行を修正\r\n- その他，細かいバグ修正\r\n\r\n\r\n4.0.1 (2008.3.12)\r\n==================\r\n仕様変更：\r\n\r\n- Linux のデフォルトオーディオAPIを，OSS から ALSA に変更．\r\n\r\nバグ修正：\r\n\r\n- 音声入力\r\n    - ALSA ネイティブの入力が正しく動作しない\r\n    - \"-48\" オプション指定時に segfault\r\n    - \"-spsegment\" 指定時にMFCC入力でゼロフレームがあると segfault\r\n- VAD関連\r\n    - ショートポーズセグメンテーション，GMM VAD, あるいはデコーダベー\r\n      スVADにおいて，セグメント間で CMN が効いていなかった\r\n- 音響モデル関連\r\n    - マルチパスモード時，ショートポーズモデルが定義されていないと起動しない\r\n- N-gram関連\r\n    - backward N-gram だけ与えられたとき第1パスの2-gramの値が正しくない\r\n    - 未知語エントリに対して確率が正しく割り当てられない．\r\n    - back-off の定義によっては読み込みに失敗することがある．\r\n    - 24bit以上のエントリを持つ巨大なN-gramの扱いに失敗する\r\n    - バックオフ係数の格納エリアが余分に malloc されていた．\r\n- 単単語認識\r\n    - 単単語認識モードにおいて N ベスト出力 (\"-output N\") が正しくない\r\n- インストール時の問題\r\n    - cygwin で \"make install\" に失敗する\r\n- ソースコードの精錬\r\n    - 関数内の不要な static 変数をローカル変数に修正\r\n    - 探索部に残っていたワークエリア用大域変数を StackDecode に移動\r\n\r\n新機能：\r\n\r\n- モジュールモード\r\n    - \"ACTIVATEGRAM\", \"DEACTIVATEGRAM\", \"DELGRAM\" で文法を指定する際に，\r\n      文法 ID 番号だけでなく文法名でも指定できるようになった．\r\n    - 新コマンド \"GRAMINFO\": 現在の文法リストを返す．\r\n\r\n\r\n4.0 (2007.12.19)\r\n=================\r\n（4.0 の新機能について，詳細は別紙を参考にしてください）\r\n- 内部構造の整理\r\n- エンジン本体のライブラリ化\r\n- マルチデコーディングのサポート\r\n- 言語モデルのモジュール化・Julianの統合\r\n- 任意長 N-gram のサポート\r\n- ユーザ定義言語制約\r\n- 孤立単語認識のサポート\r\n- confusion network 出力\r\n- ショートポーズセグメンテーションの改善\r\n- GMM ベースの VAD\r\n- デコーダベースの VAD\r\n- コンパイル時オプションの統合\r\n- メモリ量の削減\r\n- サンプルアプリ julius-simple の追加\r\n- ツールの追加 (generate-ngram)\r\n- adintool のマルチサーバ対応，機能強化など関連ツールの強化\r\n\r\n\r\n3.5.3 (2006.12.29)\r\n===================\r\n- 性能の改善\r\n   - 音響尤度計算の最適化：約 20% から 40% の高速化\r\n   - メモリアクセスの最適化：特に，第2パスでの仮説のメモリ空間の再利用\r\n   - 辞書・単語トレリス周りのメモリ割り付けを改善\r\n\r\n- 新たな文法関連ツール\r\n   - \"dfa_minimize\", \"dfa_determinize\" … DFA を最小化/決定化する．\r\n   - mkdfa.pl は dfa_minimize を自動的に呼び出すようになった．\r\n   - \"slf2dfa\" … HTK の文法ファイルから DFA 形式への変換ツールを同時公開\r\n\r\n- HTK特徴抽出条件パラメータの埋め込み\r\n   - HTK の学習時に使った特徴量抽出設定の Config ファイルを直接読み込\r\n     んでパラメータを設定できるようになった．\r\n   - mkbinhmm で上記情報をバイナリHMMのヘッダに埋め込めるようになった．\r\n\r\n- 単語グラフの改善\r\n   - トライフォンのスコアを考慮してグラフを分けるオプションの追加：同\r\n     じ場所の同じ単語であっても，単語の前後の音素コンテキストが異なる\r\n     場合に別の仮説として出力させる (\"-graphrange -1\")\r\n\r\n- オンラインでのエネルギー項正規化のサポート\r\n   - エネルギー項正規化 (ENORMAL) で学習された音響モデルを用いた\r\n     オンライン音声認識を暫定サポート（直前の音声入力のパワーから正規化する）\r\n\r\n- ソースコードの修正\r\n   - libsent/src/wav2mfcc を再構成\r\n   - 音響特徴量パラメータの扱いをモジュール化\r\n   - \"--setting\" オプションで libsent のコンパイル時設定もあわせて出力\r\n   - Doxygen-1.5.0 のサポート\r\n   - \"julius-info@lists.sourceforge.jp\" をオフィシャルの連絡先アドレスに\r\n   - Copyright のtypoを修正\r\n\r\n- 以下のバグを修正\r\n   - \"--enable-words-int\" 時に言語モデルの読み込みに失敗することがある\r\n   - 大域変数，ローカルバッファ，オプション扱いに関するメモリリーク\r\n   - 制限を越えて長い入力に対する segmentation fault\r\n   - DFA の初期状態を二重にカウント\r\n   - mkdfa.pl: 環境によって mkfa が見つからず内部起動できないことがある\r\n   - adintool: 中断時，最後に空のファイルが残る\r\n   - adintool: 中断時，直前の数秒の入力がファイルに記録されない\r\n   - その他，細かい修正\r\n\r\n\r\n3.5.2 (2006.07.31)\r\n===================\r\n- Windows コンソールでの動作の大幅改善\r\n   - DirectSound サポート (cygwin / mingw)\r\n   - 入力のスレッド化 (portaudio API 使用)\r\n   - 最新の MinGW 環境(5.0.2) に対応\r\n\r\n- 単語グラフの精度改善\r\n   - 単語グラフの深さによるカット機能の追加 (-graphcut)\r\n   - 後処理の無限ループ回避用の上限設定 (-graphboundloop)\r\n   - グラフ単語仮説のマージと探索中断に関するアルゴリズムの改善\r\n\r\n- 第1パスで単語トレリスのかわりに単語グラフを出力可能になった\r\n   - \"--enable-word-graph\" で単語グラフを出力，第2パスはグラフ上で探索\r\n   - \"--enable-wpair\" と同時に指定することで，広く用いられている\r\n     2-gram を使った1パスでのグラフ生成アルゴリズムとほぼ等価になる．\r\n\r\n- バグ修正\r\n   - configure スクリプトが Solaris 8/9 で正しく動作しない\r\n   - tied-mixture モデルで -gprune none が動かない\r\n   - 音響モデルの duration ヘッダのエラーメッセージがおかしい\r\n   - MFCC の strip_zero がいつもワーニングを出す\r\n\r\n- 実装の改善\r\n   - 音響モデルのメモリ管理を hmmdefs ごとに分けて管理するようにした\r\n\r\n\r\n3.5.1 (2006.03.31)\r\n===================\r\n- 特徴量(MFCC)抽出の拡張\r\n  - 二次差分係数(Accel: _A)に対応．\r\n      - _A を用いる音響モデルで音声入力を直接認識できるようになった\r\n      - 新オプション \"-accwin\"\r\n  - 任意の型指定の組み合わせに対応(_0, _E, _N, _D, _A, _N)\r\n  - 任意の次元数に対応\r\n      - 抽出される特徴量のタイプおよび次元数は，音響モデルのヘッダから自動判断\r\n  - 細かい特徴量抽出のパラメータを指定可能になった：\r\n      -preemph, -fbank, -ceplif, -rawe / -norawe,\r\n      -enormal / -noenormal, -escale, -silfloor\r\n  - 新オプション \"-zmeanframe\": フレームごとの DC offset 除去 (HTK互換)\r\n\r\n- MAP-CMN を導入\r\n  - マイク・ネットワーク入力で有効\r\n  - 新オプション\"-cmnmapweight\"：重み係数を変更（デフォルト 100.0）\r\n  - オプション \"-cmnload\" で最初の発話の初期ケプストラムを指定可能\r\n  - 2発話目以降の初期ケプストラムは過去の5秒の平均を用いる．\r\n    新オプション \"-cmnnoupdate\" で初期ケプストラムを更新しないようにできる．\r\n\r\n- モジュールモードの安定化\r\n  - 認識の停止・再開時に \"<STARTPROC/>\" \"<STOPPROC/>\" を新たに出力する\r\n    ようになった\r\n  - \"ADDGRAM 文法名\" \"CHANGEGRAM 文法名\" で文法に名前をつけられるよう\r\n    になった\r\n\r\n- バグ修正\r\n  - モジュールモードのPAUSE/RESUMEタイミングに関するバグを複数修正\r\n  - 要素数が24bitに収まらない巨大なN-gramを扱えないバグを修正\r\n  - マルチパス版で3状態(出力1状態)の音響モデルが読み込めないバグを修正\r\n  - 文法の最後の状態がカウントされないことがあるバグを修正\r\n  - gramtools の一部が MacOSX でうまくコンパイルできないバグを修正\r\n\r\n\r\n3.5 (2005.11.11)\r\n=================\r\n- 新たにサポートされた機能\r\n  - GMM による環境音識別および不要入力棄却(-gmm, -gmmnum -gmmreject)\r\n  - 単語グラフ出力 (--enable-graphout, --enable-graphout-nbest)\r\n  - 単語信頼度による枝刈り (--enable-cmthres)\r\n  - Julianで複数文法認識時に文法ごとの結果を出すオプションを追加\r\n    (-multigramout, 使い方は README-multigramout-ja.txt を参考に）\r\n  - 起動時に複数の文法ファイルを指定\r\n    \"-gram prefix1,prefix2,...\" もしくは \"-gramlist listfile\"\r\n    prefix は .dfa, .dict を除いたファイルのプレフィックスを指定\r\n  - テキスト出力のエンコーディング変換：\"-charconv from to\"\r\n    Linux では iconv, Win32 では Win32API + libjcode を使用．\r\n\r\n- Linux での音声入力の改善\r\n  - ALSA-1.0.0 以降に対応 (--with-mictype=alsa)\r\n  - EsounD オーディオサーバーをサポート (--with-mictype=esd)\r\n  - USBオーディオ使用時にマイク入力が動作しないことがあるバグを修正\r\n  - 音声デバイス名(デフォルト:/dev/dsp)を環境変数 AUDIODEV で指定可能\r\n  - portaudio, spLib を音声入力として指定可能に\r\n\r\n- メモリ使用量の改善\r\n  - 第1パスのビームのワークエリア使用メモリ量を削減\r\n  - 木構造化辞書のメモリ量を削減(outstyle, factoring関連の最適化)\r\n     （20k JNAS fast で 1.5MB削減）\r\n  - 単語N-gramのメモリ使用量を改善\r\n    (1)2-gramバックオフ構造を最適化（20k JNAS で 8MB削減, 3-gram量による）\r\n    (2)2-gramのN-gramインデックスを32bit→24bitに縮小\r\n\r\n- 仕様変更\r\n  - N-gramのインデックス圧縮に伴い，バイナリN-gramのファイル形式が新し\r\n    くなった．古いのもそのまま読み込める（内部で新形式に自動変換される）\r\n    が，以下のようにすることで，あらかじめ新しい形式にしておくことができる．\r\n\t\t\"mkbingram -d oldbinary newbinary\"\r\n    なお，本バージョンの mkbingram で出力したバイナリN-gramは新形式な\r\n    ので，3.4.2以前では読めないことに注意すること．\r\n    （参考：形式はファイルの最初の17バイトで判別できる：\r\n      \"julius_bingram_v3\" なら古いバージョン，\r\n      \"julius_bingram_v4\" なら新しいバージョン）\r\n  - adintool との接続：ネットワーク上のバイトオーダをリトルエンディア\r\n    ンに固定した．\r\n  - デフォルトで圧縮展開に zlib ライブラリを使用するようになった．\r\n    従来は外部 gzip を使用．\"--disable-zlib\" でOFF (従来どおり) に変更可能\r\n  - Win: 出力文字コードのデフォルトを「変換なし」に変更．\r\n    3.4.2ではデフォルトで SJIS に変換していた．\r\n  - Win: VC++でのコンパイル方法を変更\r\n    　Julianは -DBUILD_JULIAN をつける．julius.h を変更しなくて良い．\r\n      詳細は 00HowToCompile-win.txtを参照のこと\r\n\r\n- バグ修正\r\n  - スペクトルサブトラクションが動かないバグを修正\r\n  - 第2パスで stack empty で終了時にメモリリークが生じていたバグを修正\r\n  - 非常に短時間(数フレーム)の入力で落ちるバグを修正\r\n  - CMN非使用の音響モデル使用時に音声ファイル・マイク入力できないバグを修正\r\n  - 逐次デコーディング(--enable-sp-segment)におけるsp単語扱いのバグを修正\r\n  - maxcodebooksize が表示されないバグを修正\r\n  - stack empty で探索失敗時に得られた候補数を表示\r\n  - モジュールモードで -separatescore に対応 (AMSCORE=..., LMSCORE=...）\r\n  - 全探索オプション \"-b 0\" 時にビーム幅が文法追加時に更新されないバグを修正\r\n  - 文法変更時に単語間トライフォンの計算が設計と異なっていたバグを修正\r\n  - 複数文法使用時に，認識結果の文法IDを標準出力でも出力するよう修正\r\n  - エンディアンの異なるマシン間で音声データの送受信に対応\r\n  - Linux: USBオーディオ使用時にマイク入力が動作しないことがあるバグを修正\r\n  - Linux: iccでコンパイルしたJuliusが起動時に落ちるバグを修正\r\n  - Win: 改行コード対応(文法ファイル・-filelist)\r\n  - Win: cygwin環境で mkdfa.pl がテンポラリを開けないバグを修正\r\n  - Win: ZLIB非使用時にfopenに失敗することがあるバグを修正\r\n  - Win: -record で録音したファイルの拡張子が .raw だったのを .wav に修正\r\n\r\n- ソースの統合\r\n  - Linux版 と Windows コンソール版でソースを統合\r\n  - Multipath 版のソースを統合\r\n    \"--enable-multipath\" とすることで，モデルの遷移に制限のない\r\n    multipath 版をコンパイルすることができる．ソース内部では\r\n    \"MULTIPATH_VERSION\" の定義で切り替えている．\r\n\r\n- その他\r\n  - Win: MinGW でコンパイルできるようになった．\r\n  - プログラム中のコメントの大規模な更新：Doxygen に対応．\r\n    \"make doxygen\" で HTML 形式のクロスリファレンスを生成できる．\r\n  - make install 時，\"julius-3.5-fast\" のようにバージョン番号と設定\r\n    (--enable-setup の値)をつけた実行バイナリを追加インストールするよう設定\r\n  - \"./support/build-all.sh\" で各設定の julius, julian および全ての実行バイナ\r\n    リをコンパイルして build-bin/ 以下に生成できるようにした．\r\n  - Updated LICENSE.txt with English translation for reference.\r\n\r\n\r\n3.4.2 (2004.03.31)\r\n===================\r\n- 指定時間より短い入力を棄却する -rejectshort msec を追加\r\n- (-input adinnet) モジュールモード併用時のPAUSE/TERMINATEを安定化\r\n- バグ修正\r\n  - 数フレームの入力時のメモリリークを修正 (beam.c)\r\n  - 数単語の認識でN-best候補が正しく出ないことがある不具合を修正\r\n  - generate の無限ループを修正\r\n- 整形\r\n  - 'gcc -Wall' に合わせてソースを整形\r\n  - copyright 表示を 2004 年へ更新\r\n  - config.guess, config.sub を更新 (for MacOSX)\r\n\r\n3.4.1 (2004.02.25)\r\n===================\r\n- 探索の安定化に向けたアルゴリズムの改善\r\n  - 単語展開時の言語スコアの多重計算を修正\r\n  - 単語間トライフォンの新たなスコア計算方法を実装(-iwcd1 best #)\r\n  バージョン3.4 以前と比べて認識精度が改善される可能性があります！\r\n- バイナリHMM形式（Julius専用）のサポート\r\n  通常のhmmdefsからバイナリ形式に変換するツール \"mkbinhmm\" の追加\r\n- MFCC特徴量抽出がより高速になった（sin/cosテーブルを使用）\r\n- 以下のバグを修正\r\n  - (-input adinnet) 音声の受信開始と同時に認識を開始しない\r\n  - (-input adinnet) モジュールモードとの併用時にPAUSE/TERMINATEが効かない\r\n  - (-input adinnet) プロセスを不必要に fork する\r\n  - (-input rawfile) Windowsのサウンドレコーダーで録音した wav ファイル\r\n                     を読めない\r\n  - (音響モデル) CMNが不要な音響モデルでもCMNを行っていた\r\n  - (音響モデル) triphone エラー時に大量のメッセージを吐いていた\r\n  - (adintool) 連続ファイル送信ができなかった\r\n  - (sp-segment) ショートポーズでの探索再開・中断に関するバグの修正，および\r\n\t\t マイク入力でのショートポーズセグメンテーションの実現\r\n  - (-[wps]align) 連続入力時のメモリリークを修正\r\n- 音声入力のDC成分の除去機能を追加 (-zmean)\r\n- (-module) 新出力 '<INPUTPARAM FRAMES=\"入力フレーム長\" MSEC=\"入力ミリ秒\">'\r\n- おまけ機能「探索空間の可視化」を追加\r\n- HTMLドキュメントを大幅に更新\r\n- rev.3.3 から現在までの変更の詳細を whatsnew/ 以下に記述\r\n\r\n新オプション：\"-iwcd1 best #\" \"-zmean\"\r\n新configureオプション：\"--disable-lmfix\", \"--enable-visualize\"\r\n\r\n3.4   (2003.10.01)\r\n===================\r\n- 確信度計算のサポート\r\n  - \"-cmalpha\" オプションでスムージング係数を指定\r\n  - モジュールモードでの確信度出力は \"-outcode\" で 'C' を指定\r\n  - configure時 \"--disable-cm\"で無効化\r\n  - \"--enable-cm-nbest\"でN-bestを用いた計算方法に変更可能\r\n- クラスN-gramのサポート\r\n  - configure時 \"--disable-class-ngram\"で無効化\r\n  - factoringノード決定をN-gram単語ベースから辞書単語ベースに変更\r\n- adinrec, adintoolおよびオプション\"-record\"での音声記録形式を\r\n  RAW形式からWAV形式に変更\r\n- 出力メッセージの変更：\r\n\tSystem Info のメッセージ構成\r\n\tエンジン設定のメッセージ\r\n- 修正：\r\n\tモジュールモードの出力のバグをいくつか修正\r\n\t数フレーム入力されたときに落ちるバグを修正 (realtime-1stpass.c)\r\n\t検出された音声区間の末尾の無音が長い不具合を修正\r\n\tNetAudio使用時にコンパイルに失敗するバグを修正\r\n\tバイナリN-gram作成時のワードサイズをチェックするよう修正\r\n\tmixture欠け時の音響尤度計算の誤りを修正 (gprune_none.c)\r\n    \t\"-version\"->\"-setting\", \"-hipass\"->\"-hifreq\", \"-lopass\"->\"-lofreq\"\r\n\r\n3.3p4 (2003.05.06)\r\n===================\r\n- 音声入力のいくつかの不具合を改善\r\n  - マイク入力で長時間動作させたときに突然ハングアップする不具合を修正\r\n  - モジュールモードで，入力音声が長すぎたときにクライアントがハングアッ\r\n    プする不具合の修正（クライアントにエラーメッセージを送信するようになっ\r\n    た）\r\n  - 1000サンプル以下の短い入力に対するバッファリングの改良．\r\n  - ネットワーク経由の音声入力におけるブロッキングの改良．\r\n- ソースの見栄えの修正 （jcontrolのtypo, 定数LOG_TENを定義，など）\r\n\r\n3.3p3 (2003.01.08)\r\n===================\r\n- 単語間ショートポーズの扱いが新たに追加された．\r\n  - [Julius] \"-iwspword\" でショートポーズに対応する単語エントリを認識\r\n    辞書に自動追加するようになった．追加される単語のN-gramエントリや\r\n    出力文字列，音響HMM列はデフォルトでは\"<UNK> [sp] sp sp\"で，オプション\r\n    \"-iwspentry\" で指定可能．\r\n  - [マルチパス版] より短時間のcontext-freeな単語間の無音に対応した．\r\n    オプション \"-iwsp\" で，辞書中の全単語の読みの末尾にスキップ可能な\r\n    ショートポーズモデルを付加する．付加するモデルは \"-spmodel\" で変更\r\n    可能．詳細は別ドキュメントを参照のこと．\r\n- 音声入力部の改善:\r\n   - 入力の遅延を改善：これにより，マイク入力の遅延が，\r\n     従来の 200ms 前後から 50ms 前後に改善された．\r\n   - 音声デバイスが他のプロセスで使用中の場合に，ブロックせずにエラー\r\n     終了するように変更．\r\n- 最新デバイス環境に対応：\r\n   - libsndfile-1.0.x に対応．\r\n   - ALSA-0.9.x に対応．\r\n     自動検出では OSS が優先されるので，使用するには configure 時に\r\n     \"--with-mictype=alsa\" を明示的に指定すること．\r\n\r\n3.3p2 (2002.11.18)\r\n===================\r\n- [マルチパス版] モデルスキップ遷移に対応した．音響モデルの初期状態か\r\n  ら最終状態への（出力状態を系列上に含まない）遷移をサポートした．これ\r\n  により，これ以降のバージョンは HTK の「全ての」状態遷移をサポートし\r\n  たことになる．\r\n- 新機能: \"-record dir\" で，Juliusに入力された音声データを全て指定ディ\r\n  レクトリ下に逐次記録していく機能の追加．\r\n- 以下のバグを修正\r\n    - Solaris で MFCC ファイル入力時に落ちる．\r\n    - \"-module\" と \"-input adinnet\" 併用時に，クライアントからのコマンドを\r\n      受け付けなくなる．\r\n    - 最後の認識結果がバッファリングされ正しいタイミングで端末出力されない．\r\n\r\n3.3p1 (2002.10.15)\r\n===================\r\n以下のバグを修正：\r\n- 第２パスの言語モデルの重みとペナルティのデフォルト値が０になっていた．\r\n- 辞書に複数スペースがあると読み込みに失敗する．\r\n- monophone 使用時に -separatescore の出力がおかしくなる．\r\n"
        },
        {
          "name": "Release.txt",
          "type": "blob",
          "size": 35.916015625,
          "content": "4.6 (2020.09.02)\r\n=================\r\nNew features:\r\n- CUDA support for DNN computation\r\n  - build by nvcc to enable it.\r\n  - detailed parameter can be given by .dnnconf option \"cuda_mode=...\".  See Sample.dnnconf for details.\r\n  - tested on Linux with CUDA 8.0, 9.0 and 10.2.\r\n- 1-pass grammar recognition\r\n  - Per-grammar basis: can be enabled for each grammar only when it has additional \".dfa.forward\" file.\r\n  - The \".dfa.forward\" file will be generated by \"mkdfa\" of recent version.  Leave it to enable, or delete it to let Julius work as previous version.\r\n- Support non-log10nized state priors in DNN model\r\n  - New .dnnconf option \"state_prior_log10nize=yes/no\" to switch the behavior\r\n- Feature normalization pattern added: mean = input self, variance = static\r\n  - New option \"-cvnstatic\" to choose this behavior\r\n  - See the updated doc \"doc/Normalize.md\" to know how to set feature normalization in Julius.\r\nUpdates:\r\n- Now delivered under simplified BSD License\r\n- Added Python version of \"mkdfa.py\"\r\n- Update build for Visual Studio 2017, support building more tools.\r\n- Re-write documentations in markdown format under \"doc\" (WIP)\r\n- Place README.md in each directory, remove *.txt instead\r\n- mkdfa (mkfa): now outputs detailed error message (line num etc.) \r\nBug fix\r\n- \"mkbingram\" ignores charset conversion options, performs no conversion\r\n\r\n\r\n4.5 (2019.01.02)\r\n=================\r\nNew features:\r\n- Improve voice detection by integrating \"libfvad\", a voice activity\r\n  detection library based on WebRTC's VAD engine  [https://github.com/dpirch/libfvad]\r\n  - Now Julius has dual-mode VAD:\r\n     - old module (input level and zero-cross based)\r\n     - new module (libfvad = model based)\r\n  - both runs in parallel: both modules runs for an audio input stream\r\n    concurrently\r\n  - detect speech only when **both module triggers**!\r\n  - new module is disabled by default\r\n     - apply \"-fvad arg\" option to enable\r\n     - arg is a switch, \"-fvad 0\" for moderate mode and \"-fvad 3\" for aggressive mode.\r\n  - new module is available on all audio modules\r\n     - julius\r\n     - adinrec\r\n     - adintool\r\n     - adintool-gui\r\n  - typical usage:\r\n      - \"-fvad -1\" to use old VAD only (same as older versions)\r\n      - \"-fvad 3 -lv 1\" to use new VAD only.  \"-lv 1\" forces the old VAD\r\n      \tto \"always triggering\", thus the final VAD result fully depends on\r\n\tthe new module.\r\n- New multi-threaded DNN computation\r\n   - added \"num_threads\" option to dnnconf to specify number of CPU\r\n   threads to be used on DNN computation.\r\n   - default number of thread to be used is 2.\r\n\r\nModified:\r\n- module output now performs XML Escape\r\n  - characters <, >, \", & and ' in output string are now escaped to\r\n    &lt;, &gt;, &quot;, &amp; and &apos;.  This escaping is enabled by\r\n    default from this version, however you can switch off this\r\n    escaping and keep old behavior by applying \"-noxmlescape\" option.\r\n\r\nBug fixes:\r\n- fix Makefile for parallel build (make -j N)\r\n- fix adintool-gui sometimes segfault with arguments\r\n- fix several build warnings\r\n- fix several memory leaks\r\n- fix mis-compilation on some OS\r\n\r\n[New run-time options]\r\n  [-fvad mode]  set libfvad mode. \"mode\" is an integer value from -1 to 3, -1 to disable,\r\n  0 for moderate detection, 3 for aggressive detection (more likely to\r\n  drop speech-like noises).  Default value is -1 (disabled)\r\n\r\n  [-fvad_param nFrame thres]  set libfvad detailed parameter.  \"nFrame\"\r\n  is the number of smoothing frame. \"thres\" is the threshold to\r\n  detect speech trigger [0.0-1.0].  Default values are 5 and 0.5\r\n  respectively.\r\n\r\n[New configure options]\r\n- \"--disable-libfvad\": disable libfvad integration\r\n\r\n[Document update in progress]\r\n- adinrec,adintool README.md README.ja.md\r\n- julius README.md, Options.md\r\n\r\n4.4.2.1 (2016.12.20)\r\n====================\r\n- Small fixes for Android and iOS.\r\n- Clean up msvc dir.\r\n\r\n4.4.2 (2016.09.12)\r\n===================\r\n- Improved handling of file paths in dnnconf, now correctly handled as relative to the dnnconf file.\r\n- Improved DNN decoding that sometimes goes too slow and stack on 2nd pass.\r\n- Fix segfault on old non-AVX Intel CPU with DNN.\r\n- Fix errors in build process on ARM and VisualStudio.\r\n\r\n4.4.1 (2016.09.07)\r\n===================\r\n- more stable and fast SIMD code: SSE, FMA and ARM_NEON\r\n- automatically select suitable SIMD code at run time for DNN computation\r\n- msvc support updated: PortAudio and zlib sources are now included in dist.\r\n- fix incorrect reading of binary hmmlist made by \"mkbinhmmlist\"\r\n- fix SDL detection in adintool-gui\r\n- \"INSTALL.txt\" to share how to build Julius on various platform.\r\n- pkg-config support\r\n- other fixes\r\n\r\n4.4 (2016.08.30)\r\n=================\r\n- DNN-HMM computation support\r\n- \"adintool-gui\": adintool with input monitoring (see adintool/README-GUI.txt)\r\n- \"binlm2arpa\": convert binary LM to ARPA format\r\n- \"mkbingram\" now can convert text encoding of an LM by \"-c\" option\r\n- fix not to exit at disconnection on module mode, wait for next instead.\r\n- fix compilation errors in some recent OS\r\n- fix memory leaks\r\n- work on autoconf >=2.6\r\n- added README.md, CONTRIBUTING.md and other files for GitHub hosting\r\n- added document to use Julius with DNN-HMM AM: \"00readme-DNN.txt\"\r\n- update support for VS2013\r\n\r\n4.3.1 (2014.01.15)\r\n===================\r\nFixed bugs:\r\n- Compilation error on OS X.\r\n- Unnecessary debug messages in adintool.\r\n- Several bugs around reading / applying \"-cmnload\".\r\n\r\n4.3 (2013.12.25)\r\n=================\r\nNew features:\r\n- FBANK and MELSPEC support.\r\n- Network-based feature vector and outprob vector input.\r\n- Static mean/variance for cepstral mean/variance normalization.\r\n- State output probability (i.e. outprob) vector input for DNN-HMM decoding.\r\n- State ID \"<SID>\" extension of hmmdefs for DNN-HMM decoding.\r\n- Real-time feature extraction and network transmittion by 'adintool'.\r\n\r\nModified:\r\n- \"mkbinhmm\" now keeps the state order and id of the original hmmdefs.\r\n- For portaudio, pause / resume operation synced between engine and audio I/O\r\n- Load / save cepstral mean/variance of CMN/CVN in HTK text format.\r\n\r\nNew options:\r\n  [-input vecnet]       read feature / outprob vectors from network\r\n  [-input outprob]      read outprob vectors from HTK parameter file\r\n  [-outprobout [file]]  save computed outprob vectors to HTK file (for debug)\r\n\r\n\r\n4.2.3 (2013.06.30)\r\n==================\r\n\r\nNew features:\r\n- Add function \"j_reload_adddict()\" to reload dictionaries.\r\n- Add option \"-lvscale factor\" and func \"j_adin_change_input_scaling_factor()\"\r\n  to scale the amplitude of captured audio by the factor.\r\n- Add option \"-rejectlong msec\" to reject too long input.\r\n- Add minimum bayes risk decoding, contributed by H. Nanjo and R. Furutani\r\n- Support binary N-gram symbol charset conversion by \"mkbingram\".\r\n\r\nFixes:\r\n- Fix sending audio stream via network with incorrect byte order at\r\n  big-endian machines.\r\n- Fix occasional failure of closing audio device at j_close_stream().\r\n- Fix segfault when reading binary hmm created at 64bit env. with embedded parameters.\r\n- Fix memory leak when failed to read an N-gram file.\r\n- Fix memory leak when input length overflow is detected.\r\n- Fix unable to load feature vector plugin.\r\n- Update microphone input code for recent MacOSX.\r\n\r\n\r\n4.2.2 (2012.08.01)\r\n==================\r\n\r\nFixes:\r\n- Now can be compiled without flex library\r\n- Fix failure of reading binary N-gram when compiled with \"--enable-words-int\"\r\n- Fix incorrect handling of file paths with backslash in jconf file at Windows\r\n- Fix segfault when reading an errorous word dictionary.\r\n- Fix occasional segfault which may occur while search.\r\n\r\n\r\n4.2.1 (2011.12.25)\r\n===================\r\n\r\nNew features:\r\n- Add support for per-word insertion penalty setting at grammar\r\n  recognition. You can set different word insertion score for each word\r\n  entry at .dict file. For example, if you have an entry\r\n        15 [a] a\r\n  in .dict file and want to assign word insertion score of \"-2.0\" to\r\n  this word, you can write like this:\r\n        15 @-2.0 15 [a] a\r\n  The figure after \"@\" is the insertion penalty. The third\r\n  element should be the same as the first element.\r\n\r\n- New option \"-chunk_size\" can specify the audio fragment size in\r\n  number of samples. The default value is 1000.\r\n\r\n- At \"adintool\", enable input detection by default for standard input.\r\n\r\nFixed bugs:\r\n- (IMPORTANT) CMN is not performed for C0 coef.  This bug exists in\r\n  the versions from 4.1.3 to 4.2.\r\n- \"-forcedict\" won't work for additional dictionaries given by \"-adddict\".\r\n- Corrupted header of recorded WAV file when interrupted by CTRL+C.\r\n- Occasional segfault when reading a wrongly formatted dictionary.\r\n- Won't compile with configure option \"--enable-word-graph\".\r\n- Segfault of \"mkbingram\" and \"generate-ngram\" at cygwin.\r\n\r\n\r\n4.2 (2011.05.01)\r\n=================\r\n\r\nNew features:\r\n- Additional score-based pruning at the 1st pass.  It is disabled by\r\n  default, you can enable by using an option \"-bs arg\". The argument\r\n  is score range.\r\n- New support for PulseAudio (--with-mictype=pulseaudio)\r\n- New Option \"-adddict\", \"-addword\" to read additional dictionaries / words.\r\n- Portaudio library updated to V19.  Audio capture device can be\r\n  changed by env. \"PORTAUDIO_DEV_NUM\".  The device list will be\r\n  output at start up.\r\n\r\nChanged behavior:\r\n- \"mkbinhmmlist\" now saves pseudo phone list extracted from AM for\r\n  faster start up. The output should be used with the same AM\r\n  specified at generation.  Note that the converted binhmmlist file\r\n  can not be used with older Julius.\r\n- Audio library linking was modified at configure script.\r\n  When \"--with-mictype=...\" is explicitly specified, Julius will link\r\n  ONLY the audio library.  If not specified, Julius will link all the\r\n  audio devices whose development file was detected by the configure.\r\n\r\nLibrary functions:\r\n- j_config_load_string_new(char *str): like j_config_load_file(), but\r\n  parse the given string to set parameters.\r\n- add_dict(), add_word(): the same as \"-adddict\" and \"-addword\".\r\n  (They should be called at start up before starting engine)\r\n- (portaudio/Windows) j_open_stream(recog, NUMSTR) to choose device NUM.\r\n  ex. 'j_open_stream(recog, \"1\")' will open device number one.\r\n- (portaudio/Windows) get_device_list(): obtain list of available devices.\r\n\r\nFixes:\r\n- Improved tree lexicon structure for better memory management.\r\n- Reduce malloc calls at reading N-gram.\r\n- Eliminated memory leaks using Valgrind.\r\n- Workarounds to avoid crash with j_close_stream().\r\n- Now allow \"-iwsp\" only with multi-path acoustic model.\r\n\r\n\r\n4.1.5.1 (2010.12.25)\r\n=====================\r\n\r\nModified:\r\n - Fixed problem related to the license.\r\n\r\n4.1.5 (2010.06.04)\r\n===================\r\nBug fixes:\r\n\r\n - Language model / decoding (these bugs may affect the ASR performance):\r\n   - Several wrong word insertion penalty handling on grammar was\r\n     found and fixed.\r\n   - Now correctly add the prob. of the first word at the second pass.\r\n\r\n - MFCC computation:\r\n   - Support MFCC computation when liftering parameter (CEPLIFTER) = 0.\r\n\r\n - Compilation:\r\n   - Fixes to build Julius on cygwin and MSVC.\r\n   - Supports \"gcc -mno-cygwin\" on cygwin.\r\n   - Compilation error with configure \"--disable-plugin\"\r\n\r\n - Module mode:\r\n   - Unable to send grammar from jcontrol.\r\n   - Not working \"DELPROCESS\" command when SR and LM has different names.\r\n\r\n - Other fixed bugs:\r\n   - wrong parsing of \"-mapunk\" option.\r\n   - \"-htkconf\" in a jconf file now correctly handles the file path as\r\n     relative to the jconf file.\r\n   - \"-input stdin\" now supports WAV format.\r\n   - not working \"-plugin DIRNAME\" on Win32/MSVC.\r\n\r\n\r\n4.1.4 (2009.12.25)\r\n===================\r\n\r\nNew feature:\r\n - added function to choose input audio device on MSVC compiled Julius,\r\n   by specifying a device ID with env. var. \"PORTAUDIO_DEV_NUM\".\r\n   The available device IDs will be listed in the system log at start up.\r\n - You can now set a locale for a LM in Julius.cpp.\r\n\r\nBug fixes:\r\n - now can be compield on Mac OS X (OS X 10.6 SDK).\r\n - fixes around portaudio for smaller latency and compatibility (Windows).\r\n\r\n\r\n4.1.3 (2009.11.02)\r\n===================\r\n\r\nNew features:\r\n - new MSVC support: please read \"msvc/00README.txt\"\r\n - extended N-gram to support arbitrary N\r\n - portaudio external library (V19) can be used instead of internal V18.\r\n   When configure detects portaudio library installed in your system,\r\n   Julius will use it instead of internal V18.  You can also choose\r\n   input device by \"PORTAUDIO_DEV\" env. var. at V19library.  See the\r\n   log text at start up to know how to set it.\r\n - allow word alignment output (-walign) in module mode\r\n\r\nModified:\r\n - ! now Julius do not perform CMN on 0'th cepstral coefficients,\r\n   which is the same as the old 4.0.x versions.\r\n - j_get_current_filename() added on JuliusLib\r\n - improved \"--enable-wpair\" handling\r\n\r\nBug fixes:\r\n - many bugs around audio open/close API on JuliusLib\r\n - fail to do make in julius-simple\r\n - unable to record inputs at cygwin\r\n - segfault on adintool with \"-server\"\r\n - occasional segfault at grammar recognition\r\n\r\n\r\n4.1.2 (2009.02.12)\r\n===================\r\n\r\n[SRILM support]\r\n - Added swapping \"<s>\" and \"</s>\" when reading BACKWARD ARPA file\r\n   trained by SRILM.  It will be automatically detected.  If detection\r\n   fails, you can specify an option \"-swap\" in mkbingram to do that.\r\n - Internally modify the unigram probability of \"<s>\" or \"</s>\", since\r\n   they may be set to \"-99\" in SRILM model.  The same value as\r\n   opposite will be assigned.\r\n[N-gram]\r\n - Size limit extended from 2GB to 4GB for big N-gram.\r\n - \"<unk>\" and \"<UNK>\" can be changed by \"-mapunk\".\r\n - More strict check for unknown words: Julius now terminates with\r\n   error when dictionary has OOV words and N-gram is not open (no unk word).\r\n[Improvements]\r\n - Faster successor list building algorithm\r\n - Update yomi2voca.pl to cover more minor Japanese pronunciation.\r\n - Workaround for audio buffer overrun in ALSA\r\n[JuliusLib]\r\n - Added API function \"j_close_stream()\" to exit main recognition loop.\r\n[Bug Fixes]\r\n - Fixed segfault on adintool when specifying multiple servers.\r\n - Fixed compilation error on cygwin (libesd)\r\n - Fixed segfault when not specifying \"-input\" option.\r\n\r\n\r\n4.1.1 (2008.12.13)\r\n===================\r\nBug fixes:\r\n\r\n[N-gram]\r\n  - sometimes could not read an ARPA N-gram file trained by SRILM.\r\n[A/D-in]\r\n  - \"-input stdin\" does not work.\r\n  - \"SOURCERATE\" at \"-htkconf\" is ignored.\r\n[Forced alignments]\r\n  - now can be used in isolated word recognition and with \"-1pass\".\r\n  - \"-palign\", \"-walign\" and \"-salign\" can not be run together at a time.\r\n[Module mode]\r\n  - freezes when a grammar is specified by its ID number.\r\n  - wrong grammar ID in recognition result (GRAM=.. always 0)\r\n  - \"SYNCGRAM\" will cause crash at isolated word recognition.\r\n  - unable to receive/activate/dactivate on isolated word recognition.\r\n[Others]\r\n  - fails to compile on several OS (needs \"-ldl\").\r\n  - does not handle backslash escaping correctly in Jconf file.\r\n  - does not output the 1st pass result as a final result with \"-1pass\".\r\n[Tools]\r\n  Jcontrol\r\n  - does not support \"graminfo\" command.\r\n  - can not send a dictionary to Julius running isolated word recognition.\r\n  mkdfa\r\n  - segfault on mkfa\r\n  - fails to read a grammar file on DOS format.\r\n  adintool\r\n  - wrong behavior when splitting a long audio file.\r\n  - now output time of each segment.\r\n\r\n\r\n4.1 (2008.10.3)\r\n================\r\nNew plugin extension:\r\n  - supported types:\r\n      - A/D-in plugin\r\n      - feature vector input plugin\r\n      - audio input monitor / postprocess plugin\r\n      - feature vector monitor / postprocess plugin\r\n      - result plugin\r\n      - can add arbitrary JuliusLib callback via plugin\r\n  - sample codes is included, with full documentation of function spec.\r\n  - run on Linux, Windows and other unix variants with dlopen() capability\r\n\r\nNewly supported features:\r\n  - multi-stream feature input\r\n  - MSD-HMM (compatible with \"HTS\" toolkit)\r\n  - CVN\r\n  - frequency warping for VTLN (no estimation yet)\r\n  - \"-input alsa\", \"-input oss\" and \"-input esd\"\r\n  - perl version of jcontrol client \"jclient-perl\"\r\n\r\nModified:\r\n  - Restrict option orders when multiple instances defined (-AM, -LM, -SR):\r\n      - Option should be just after correspondence instance declaration.\r\n        (ex. LM options should be placed after \"-LM\" and before other\r\n        instance declaration.)\r\n      - Global option should be before any instance declaration, or\r\n        just after \"-GLOBAL\" option.\r\n    This new restriction can be removed by \"-nosectioncheck\" option.\r\n\r\nFixed bugs:\r\n  - \"-record\" fails to record the first silence part!\r\n  - Not working \"-multigramout\"\r\n  - environment variable expansion sometimes fail within jconf file.\r\n  - limits extended:\r\n     maximum HMM name length = 256 char, Number of HMM states unlimited.\r\n  - Module mode error message on grammar command.\r\n\r\nDocuments:\r\n  - Alpha version of \"Juliusbook\" (contains only manuals at this time)\r\n  - Unix manuals are moved to \"man\" directory.\r\n\r\n\r\n4.0.2 (2008.5.27)\r\n==================\r\nNew features:\r\n\r\n  - New option \"-fallback1pass\" will output 1st pass result as final result\r\n    when the 2nd pass fails.\r\n  - Added support for \"USEPOWER=T\" on feature extraction.\r\n\r\nModified:\r\n  - \"-AM_GMM\" becomes optional: GMM will share AM params if not specified.\r\n\r\nFixed:\r\n  - GMM rejection does not work (since 4.0.1)\r\n  - Cannot specify other A/D device on Linux/ALSA correctly.\r\n  - Sometimes fails to read a big N-gram.\r\n  - Sometimes crush with \"-record\" option.\r\n  - Callback timing modified on real-time input with sp-segment/GMM/VAD.\r\n  - Other minor fixes.\r\n\r\n\r\n4.0.1 (2008.3.12)\r\n==================\r\nNew features:\r\n\r\n  A/D-in\r\n    - ALSA now become default on Linux instead of OSS.\r\n\r\n  Module mode\r\n    - \"ACTIVATEGRAM\", \"DEACTIVATEGRAM\" and \"DELGRAM\" now accepts\r\n      grammar name as arguments in addition to grammar ID number.\r\n    - new command \"GRAMINFO\" to get list of current grammars.\r\n\r\n\r\nFixed bugs:\r\n\r\n  A/D-in\r\n    - ALSA codes updated to work on 1.x drivers.\r\n    - segfault with \"-48\".\r\n    - segfault on MFCC input with zero frames with \"-spsegment\".\r\n  VAD\r\n    - CMN not working on spsegment/GMM-VAD/decoder-VAD with microphone input.\r\n  Acoustic model\r\n    - Error when no short-pause model defined in multi-path mode.\r\n  N-gram\r\n    - incorrect 2-gram prob on 1st pass with backward N-gram only.\r\n    - incorrect 1-gram prob for unknown words.\r\n    - fail to read some ARPA files with no back-off compaction.\r\n    - read failure or segfault on big N-gram with over 24bit entries.\r\n    - redundant index for back-off weights in some case.\r\n  Word recognition\r\n    - incorrect N-best output with \"-output N\" on word recognition.\r\n  Installation\r\n    - \"make install\" fails on cygwin.\r\n  Source code\r\n    - Static variables in functions that are not meant to be static\r\n      are made local.\r\n    - Global variables in search are moved to StackDecode.\r\n\r\n\r\n\r\n4.0 (2007.12.19)\r\n=================\r\nFor more detail about new features in 4.0, please see other document.\r\n\r\n- Re-constructed all data structures and re-organize source code.\r\n- Core engine now becomes a library called JuliusLib, with API and callbacks.\r\n- Multi-model decoding now available.\r\n- Modularize language model handling, and merge Julian to JuliusLib.\r\n- Support longer N-gram (N > 3).\r\n- User-defined LM function support.\r\n- Handy isolated word recognition mode.\r\n- Confusion network output.\r\n- Improvements in short-pause segmentation, especially for live input.\r\n- GMM-based VAD.\r\n- Decoder-based VAD.\r\n- Integrated many compile-time options.\r\n- Reduce memory usage.\r\n- Sample application to use the JuliusLib is included: \"julius-simple\".\r\n- Update tools:\r\n   - \"adintool\" supports multi-server mode.\r\n   - \"generate-ngram\" newly added to generate sentences from N-gram\r\n\r\n\r\n3.5.3 (2006.12.29)\r\n===================\r\n  o  Improved Performance:\r\n     - acoustic computation optimized: now becomes 20%-40% faster!\r\n     - optimize memory access: re-use work area of deleted hypothesis\r\n       in the 2nd pass.\r\n     - some memory allocation improvement on dictionary and word trellis.\r\n\r\n  o  New Grammar Tools:\r\n     - \"dfa_minimize\", \"dfa_determinize\" will minimize/determinize DFA.\r\n        mkdfa.pl now calls dfa_mimize in it.\r\n     - \"slf2dfa\": a toolkit to convert HTK slf to Julian dfa (separate kit)\r\n\r\n  o  Embedding HTK Acoustic Parameters:\r\n     - add option to load HTK Config file to set correct acoustic parameter\r\n       configuration at recognition time.\r\n     - the acoustic parameter configuration can be embedded into\r\n       header of a binary HMM file.\r\n\r\n  o  Improved Word Graph:\r\n     - add an option to completely separate graph words: words with\r\n       different phone contexts can be output separatedly by\r\n       \"-graphrange -1\".\r\n\r\n  o  Support for online energy normalization:\r\n     - Preliminary support for live recognition using acoustic model with\r\n       energy normalization. (approximate with maximum energy of last input)\r\n\r\n  o  Code refinements:\r\n     - re-organize libsent/src/wav2mfcc.\r\n     - modularize acoustic parameter (Value) handling.\r\n     - output compile-time configuration of libsent with \"--setting\" option.\r\n     - Doxygen 1.5.0 support.\r\n     - \"julius-info@lists.sourceforge.jp\" becomes the official contact address.\r\n     - fixed typo on copyright notice.\r\n\r\n  o  Fixed bugs:\r\n     - sometimes unable to read a binary LM on \"--enable-words-int\".\r\n     - memory leaks around option handling, global variables and local buffers.\r\n     - segmentation fault on very long input.\r\n     - doublely counted initial state of DFA.\r\n     - mkdfa.pl: unable to find mkfa on some OS.\r\n     - adintool: makes empty output file on termination.\r\n     - adintool: miss last inputs when killed.\r\n     - other small changes.\r\n\r\n\r\n3.5.2 (2006.07.31)\r\n===================\r\n  o  Speed-up and improvement on Windows console:\r\n     - Support DirectSound for better input handling\r\n     - Support input threading utilizing callback API on portaudio.\r\n     - Support newest MinGW (tested on 5.0.2)\r\n\r\n  o  More accurate word graph output:\r\n     - Add option to cut the resulting graph by its depth\r\n       (option -graphcut, and enabled by default!)\r\n     - Set limit for post-processing loop to avoid infinite loop\r\n       (option -graphboundloop, and set by default)\r\n     - Refine graph generation algorithm concerning dynamic word merging\r\n       and search termination on the second pass.\r\n\r\n  o  Add capability to output word graph instead of trellis on 1st pass:\r\n     - 1st pass generates word graph instead of word trellis as\r\n       intermediate result by specifying \"--enable-word-graph\".\r\n       In that case, the 2nd pass will be restricted on the graph, not\r\n       on the whole trellis.\r\n     - With \"--enable-word-graph\" and \"--enable-wpair\" option, the\r\n       first pass of Julius can perform 1-pass graph generation based\r\n       on 2-gram with basically the same algorithm as other popular\r\n       word graph based decoders.\r\n\r\n  o  Bug fixes:\r\n     - configure script did not work on Solaris 8/9\r\n     - \"-gprune none\" did not work on tied-mixture AM\r\n     - Incorrect error message for AM with duration header other than \"NULLD\"\r\n     - Always warns abount zero frame stripping upon MFCC\r\n\r\n  o  Imprementation improvements:\r\n     - bmalloc2-based AM memory management\r\n\r\n\r\n3.5.1 (2006.03.31)\r\n===================\r\n  o  Wider MFCC types support:\r\n     - Added extraction of acceleration coefficients (_A).  Now you\r\n       can recognize waveform or microphone input with AM trained with _A.\r\n     - Support all MFCC qualifiers (_0, _E, _N, _D, _A, _N, _Z) and their\r\n       combination\r\n     - Support for any vector lenth (will be guessed from AM header)\r\n     - New option: \"-accwin\"\r\n     - New option \"-zmeanframe\": frame-wise DC offset removal, like HTK\r\n     - New options to specify detailed analysis parameters (see manual):\r\n          -preemph, -fbank, -ceplif, -rawe / -norawe,\r\n          -enormal / -noenormal, -escale, -silfloor\r\n\r\n  o Improved microphone / network recognition by MAP-CMN:\r\n     - New option \"-cmnmapweight\" to change MAP weight\r\n     - Option \"-cmnload\" can be used to specify the initial cepstral\r\n       mean at startup\r\n     - Cepstral mean of last 5 second input is used as an initial mean\r\n       for each input.  You can inhibit updating of the initial mean\r\n       and keep the value loaded by \"-cmnload\" by option \"-cmnnoupdate\".\r\n\r\n  o Module issue:\r\n     - Julius now outputs \"<STARTPROC/>\" when recognition starts, and\r\n       \"<STOPPROC/>\" after recognition stopped by module command.\r\n       Use this for safer server-client synchronization.\r\n     - now can specify grammar name from client by specifying a name\r\n       after a command like \"ADDGRAM name\" or \"CHANGEGRAM name\".\r\n\r\n  o Bug fixes:\r\n     - Sometimes segfault on pause/resume command on module mode while input.\r\n     - Can not read N-gram with tuples > 2^24.\r\n     - Can not read HMM with 3-state (1 output state) model on multi-path.\r\n     - Sometimes omit the last transition definition in DFA file.\r\n     - Sometimes fails to compile the gramtools on MacOSX.\r\n\r\n\r\n3.5 (2005.11.11)\r\n=================\r\n  o  New features:\r\n     - Input verification / rejection using GMM (-gmm, -gmmnum, -gmmreject)\r\n     - Word graph output (--enable-graphout, --enable-graphout-nbest)\r\n     - Pruning on 2nd pass based on local posterior CM (--enable-cmthres)\r\n     - Multiple/per-grammar recognition (-gram, -gramlist, -multigramout)\r\n     - Can specify multiple grammars at startup: \"-gram prefix1,prefix2,...\"\r\n       or \"-gramlist listfile\" where listfile contains list of prefixes.\r\n     - General output character set conversion \"-charconv from to\"\r\n       based on iconv (Linux) or Win32API+libjcode (Windows)\r\n\r\n  o  Improved audio inputs on Linux:\r\n     - ALSA-1.x support. (--with-mictype=alsa)\r\n     - EsounD daemon input support. (--with-mictype=esd)\r\n     - Fixed some bugs on USB audio input.\r\n     - Audio capturing device can be specified via env. \"AUDIODEV\".\r\n     - Extra microphone API support using portaudio and spLib API.\r\n\r\n  o  Performance improvements:\r\n     - Reduced memory size for beam operation on the 1st pass.\r\n     - Slightly optimized tree lexicon by removing redundant data.\r\n     - Reduced size of word N-gram index (reduced from 32 bit to 24 bit).\r\n\r\n  o  Fixed bugs:\r\n     - Not working spectral subtraction.\r\n     - Memory leak when stack exhausted (\"stack empty\") on 2nd pass.\r\n     - Segmentation fault on a very short input of 1 to 4 frames.\r\n     - AM trained with no CMN cannot be used with waveform/mic input.\r\n     - Wrong short-pause word handling on successive decoding mode.\r\n       (--enable-sp-segment)\r\n     - No output of \"maxcodebooksize\" at startup.\r\n     - No output of the number of sentences found when stack exhausted.\r\n     - No output of \"-separatescore\" on module mode.\r\n     - Beam width does not adjusted when grammar has been changed and\r\n       full beam options (-b 0) is specified in Julian.\r\n     - Wrong update of category-aware cross-word triphones when\r\n       dynamically switching grammar on Julian.\r\n     - No output of grammar to stdout on multiple grammar mode.\r\n     - Unable to send/receive audio data between different endian machines.\r\n     - (Linux) crash when compiled with icc.\r\n     - (Linux) some strange behavior on USB audio.\r\n     - (Windows) confuse with CR/LF newline inputs in several text inputs.\r\n     - (Windows) mkdfa.pl could not work on cygwin.\r\n     - (Windows) sometimes fails to read a file when not using zlib.\r\n     - (Windows) wrong file suffix when recording with \"-record\" (.raw->.wav)\r\n\r\n  o  Unified source code:\r\n     - Linux and Windows version are integrated into one source.\r\n     - Multi-path version has been integrated with the normal version\r\n       into one source.  The multi-path version of Julius/Julian, that\r\n       allows any transitions of HMMs including model skip transition,\r\n       can be compiled by \"--enable-multipath\" option.  The part of\r\n       source codes for the multi-path version can be identified\r\n       by the definition \"MULTIPATH_VERSION\".\r\n\r\n  o  Other improvements:\r\n     - Now can be compiled on MinGW/MSYS on Windows\r\n     - Totally rewritten comments in entire source in Doxygen format.\r\n       You can generate fully browsable source documents in English.\r\n       Try \"make doxygen\" at the top directory (you need doxygen installed)\r\n     - Install additional executables of julius/julian with version and setting\r\n       names like \"julius-3.5-fast\" when \"make install\" is invoked.\r\n     - Updated LICENSE.txt with English translation for reference.\r\n\r\n  o  Changed behaviors:\r\n     - Binary N-gram file format has been changed for smaller size.\r\n       The old files can still be read directly by julius, in which\r\n       case on-line conversion will be performed at startup.\r\n       You can convert the old files (3.4.2 and earlier) to the new\r\n       format with the new mkbingram by involing the command below:\r\n\t       \"mkbingram -d oldbinary newbinary\"\r\n       Please note that since mkbingram now output the new format\r\n       file, it can not be read by older Julius.\r\n       The binary N-gram file version can be detected by the first 17\r\n       bytes of the file: old format should be \"julius_bingram_v3\" and\r\n       new format should be \"julius_bingram_v4\".\r\n     - Byte order of audio stream via tcpip fixed to LITTLE ENDIAN.\r\n     - Now use built-in zlib by default for compressed files.  This may\r\n       make the engine startup slower, and if you prefer, you can still\r\n       use the previous method using external gzip command by specifying\r\n       \"--disable-zlib\".\r\n     - (Windows) Changed the compilation procedure on VC++.  You can build\r\n       Julian by only specifying \"-DBUILD_JULIAN\" at compiler option,\r\n       and do not need to alter \"julius.h\".\r\n\r\n\r\n3.4.2 (2004.03.31)\r\n===================\r\n- New option \"-rejectshort msec\" to reject short input.\r\n- More stable PAUSE/RESUME on module mode with adinnet input.\r\n- Bug fixes:\r\n  - Memory leak on very short input.\r\n  - Missing Nth result when small vocabulary is used.\r\n  - Hang up of \"generate\" on small grammar.\r\n- Cosmetic changes:\r\n  - Cleanup codes to confirm for 'gcc -Wall'.\r\n  - Update of config.guess and config.sub.\r\n  - Update of copyright to 2004.\r\n\r\n3.4.1 (2004.02.25)\r\n===================\r\n- AM and LM computation method is slightly modified to improve search\r\n  stability of 2nd pass.  These modification are enabled by default, and\r\n  MAY IMPROVE THE RECOGNITION ACCURACY as compared with older versions.\r\n  - fixed overcounting of LM score for the expanded word.\r\n  - new inter-word triphone approximation (-iwcd1 best #) on 1st\r\n    pass.  This new algorithm now becomes default.\r\n- Newly supports binary HMM (original format, not compatible with HTK).\r\n  A tool \"mkbinhmm\" converts a hmmdefs(ascii) file to the binary format.\r\n- MFCC computation becomes faster by sin/cos table lookup.\r\n- Bugs below have been fixed:\r\n  - (-input adinnet) recognition does not start immediately after speech\r\n\t\t     inputs begin when using adinnet client.\r\n  - (-input adinnet) together with module mode, speech input cannot\r\n\t\t     stop by pause/terminate command.\r\n  - (-input adinnet) unneccesary fork when connecting with adinnet client.\r\n  - (-input rawfile) error in reading wave files created by Windows\r\n                     sound recorder.\r\n  - (CMN) CMN was applied any time even when acoustic models does not want.\r\n  - (AM) numerous messages in case of missing triphone errors at startup.\r\n  - (adintool) immediately exit after single file input.\r\n  - (sp-segment) fixed many bugs relating short pause word and LM\r\n  - (sp-segment) wow it works with microphone input.\r\n  - (-[wps]align) memory leak on continuous input.\r\n- Add option to remove DC offset from speech input (option -zmean).\r\n- (-module) new output message:\r\n  '<INPUTPARAM FRAMES=\"input_frame_length\" MSEC=\"length_in_msec\">'\r\n- Optional feature \"Search Space Visualization\" is added (--enable-visualize)\r\n- HTML documentations greatly revised in doc.\r\n\r\nNew argument: \"-iwcd1 best #\" \"-zmean\"\r\nNew configure option: \"--disable-lmfix\", \"--enable-visualize\"\r\n\r\n3.4   (2003.10.01)\r\n===================\r\n- Confidence measure support\r\n  - New parameter \"-cmalpha\" as smoothing coef.\r\n  - New command \"-outcode C\" to output CM in module output\r\n  - Can be disabled by configure option \"--disbale-cm\"\r\n  - Can use an alternate CM algorithm by configure option \"--enable-cm-nbest\"\r\n- Class N-gram support\r\n  - Can be disabled by configure option \"--disable-class-ngram\"\r\n  - Factoring basis changed from N-gram entry to dictionary word\r\n- WAV format recording in \"adinrec\", \"adintool\" and \"-record\" option\r\n- Modified output message\r\n    startup messages,\r\n    engine configuration message in --version and --help,\r\n- Fixes:\r\n    some outputs in module mode,\r\n    bug in only several frame input (realtime-1stpass.c),\r\n    long silence at end of segmented speech\r\n    miscompilation with NetAudio,\r\n    word size check in binary N-gram,\r\n    bug in acoustic computation (gprune_none.c).\r\n    \"-version\" -> \"-setting\", \"-hipass\" -> \"-hifreq\", \"-lopass\" -> \"-lofreq\"\r\n\r\n3.3p4 (2003.05.06)\r\n===================\r\n- Fixes for audio input:\r\n  - Fix segfault/hangup with continuous microphone input.\r\n  - Fix client hangup when input speech too long in module mode.\r\n    (now send an buffer overflow message to the client)\r\n  - Fix audio input buffering for very short input (<1000 samples).\r\n  - Fix blocking handling in tcpip adin.\r\n- Some cosmetic changes (jcontrol, LOG_TEN, etc.)\r\n\r\n3.3p3 (2003.01.08)\r\n===================\r\n- New inter-word short pause handling:\r\n  - [Julius] New option added for short pause handling.  Specifying\r\n    \"-iwspword\" adds a short-pause word entry, namely \"<UNK> [sp] sp sp\",\r\n    to the dictionary.  The entry content to be changed by using \"-iwspentry\".\r\n  - [multi-path] Supports inter-word context-free short pause handling.\r\n    \"-iwsp\" option automatically appends a skippable short pause model at\r\n    every word end.  The added model will also be ignored in context\r\n    modeling.  The short pause model to be appended by \"-iwsp\" can be\r\n    specified by \"-spmodel\" options.  See documents for details.\r\n- Fixes for audio input:\r\n   - Input delay improved: the initial response to mic input now\r\n     becomes much faster than previous versions (200ms -> 50ms approx.).\r\n   - Would not block when other process is using the audio device, but\r\n     just output error and exit.\r\n   - Update support for libsndfile-1.0.x.\r\n   - Update support for ALSA-0.9.x\r\n     (to use this, add \"--with-mictype=alsa\" to configure option.)\r\n\r\n3.3p2 (2002.11.18)\r\n===================\r\n- [multi-path version] Supports model-skip transition.  From\r\n  this version, you can use \"any\" type of state transition in HTK\r\n  format acoustic model.\r\n- New feature: \"-record dir\" records speech inputs sucessively\r\n  into the specified directory with time-stamp file names.\r\n- fix segfault on Solaris with \"-input mfcfile\".\r\n- fix blocking command input when using module mode and adinnet together.\r\n- modified the output flush timing to make sure the last recognition\r\n  result will be output immediately.\r\n\r\n3.3p1 (2002.10.15)\r\n===================\r\nFollowing bugs are fixed:\r\n- Fixed incorrect default value of language weights for second pass (-lmp2).\r\n- Fixed sometimes read failure of dictionary file (double space enabled).\r\n- Fixed wrong output of \"-separatescore\" together with monophone model.\r\n\r\n3.3 (2002.09.12)\r\n==================\r\nThe updates and new features from rev.3.2 is shown below.\r\n\r\n- New features added:\r\n        - Server module mode - control Julius (input on/off, grammar switching)\r\n          from other client process via network.\r\n        - Online grammar changing and multi-grammar recognition supported.\r\n- Noise robustness:\r\n        - Spectral subtraction incorporated.\r\n- Support more variety of acoustic models:\r\n        - \"multi-path version\" is available that allows any transition\r\n           including loop, skip and parallel transition.\r\n- A little improvement of recognition performance by bug fixes\r\n- Other minor extensions (CMN parameter saving, etc.)\r\n- Many bug fixes\r\n\r\nEnglish documents are available in\r\n  o online manuals (will be installed by default), and\r\n  o Translated full documentation in PDF format: Julius-3.2-book-e.pdf.\r\nWe are sorry that current release contains only documents for old rev.3.2.\r\nWe are now working to update it to catch up with the current rev.3.3 version.\r\n\r\n"
        },
        {
          "name": "Sample.dnnconf",
          "type": "blob",
          "size": 2.4794921875,
          "content": "####\n#### Sample DNN Configuration for DNN-HMM Decoding (-dnnconf)\n####\n\n####\n#### Feature Extraction\n####\n\n# feature type, in HTK parameter specification format\nfeature_type FBANK_D_A_Z\n\n# julius options to configure the acoustic parameter extraction.\n#\n#   The example below indicates that:\n#     1. parameters should be loaded from an HTK config file,\n#     2. use CMN/CVN,\n#     3. load ceptral mean and variance from the specified file,\n#     4. keep the cepstral mean/variance static, not update while processing\n#\n# the specified string will be expanded inline at the point where this\n# dnnconf file is specified by \"-dnnconf\", and passed to Julius.\n# As the same as other options in Julius, the later option will override\n# former. Please check the start-up messages to check if the\n# feature extraction are correctly set up.\n#\nfeature_options -htkconf model/dnn/config.lmfb.40ch.jnas -cvn -cmnload model/dnn/norm.jnas -cmnstatic\n\n# feature vector length (including delta or accel, before splicing)\nfeature_len 120\n\n# splicing length\ncontext_len 11\n\n####\n#### NN Definition\n####\n\n# number of input nodes (should be equal to (feature_len * context_len))\ninput_nodes 1320\n\n# number of output nodes (num and order should correspond to HMM definition)\noutput_nodes 2004\n\n# number of nodes in hidden layers\nhidden_nodes 2048\n\n# number of hidden layers (layers excluding input and output)\nhidden_layers 5\n\n# weights W and biases b for hidden layers, in numpy np.save() format\n#   dtype of these file should be '<f4' (32-bit float little indian)!\nW1 model/dnn/W_l1.npy\nW2 model/dnn/W_l2.npy\nW3 model/dnn/W_l3.npy\nW4 model/dnn/W_l4.npy\nW5 model/dnn/W_l5.npy\nB1 model/dnn/bias_l1.npy\nB2 model/dnn/bias_l2.npy\nB3 model/dnn/bias_l3.npy\nB4 model/dnn/bias_l4.npy\nB5 model/dnn/bias_l5.npy\n\n# also weights and biases for output layer\noutput_W model/dnn/W_output.npy\noutput_B model/dnn/bias_output.npy\n\n# state prior in 'state_id(%d) prior(%e)' format\nstate_prior model/dnn/prior.dnn\n\n# state prior factor\nstate_prior_factor 1.0\n\n# batch size (not used)\nbatch_size 64\n\n# number of threads (>=4.5)\nnum_threads 2\n\n# set CUDA mode (\"disable\", \"global\" or \"shared\")\n# optinally can append block size parameters (value1,value,...)\n# shared mode block size can not be changed, fixed to 16x8 now\n#\n#  Ex.\n#    cuda_mode disable\n#    cuda_mode global\n#    cuda_mode global,128\n#    cuda_mode shared\n#    (cuda_mode shared,16,8 --- not implemneted now)\n#\n# default is \"global,128\" when enabled, \"disable\" when not compiled with CUDA\n\n#cuda_mode global,128\n"
        },
        {
          "name": "Sample.jconf",
          "type": "blob",
          "size": 15.3154296875,
          "content": "#\n# Sample Jconf configuration file\n# for Julius library rev.4.3\n#\n# 1) Options can also be specified in command line option.\n#    The values are default values in Julius.\n# 2) For file name, relative path must be relative to THIS FILE.\n# 3) Texts after '#' at each line will be ignored.  If you want to specify\n#    '#', use `\\#'.\n# 4) Each line should be no longer than 512 bytes.\n#\n#\n\n######################################################################\n#### JULIUS APPLICATION OPTION (not a part of JuliusLib)\n######################################################################\n#-outfile\t\t\t# save each result in separate file\n#-separatescore\t\t\t# print AM / LM scores separately\n#-callbackdebug\t\t\t# print callback names at call for debug\n#-charconv from to\t\t# print with character set conversion\n#-nocharconv\t\t\t# disable \"-charconv\"\n#-module\t\t\t# start in module mode\n#-record dir\t\t\t# record each inputs into dir\n#-logfile file\t\t\t# redirect logs to file\n#-nolog\t\t\t\t# disable all logs\n#-help\t\t\t\t# print help, and exit\n\n\n######################################################################\n#### GLOBAL OPTIONS\n######################################################################\n####\n#### Misc. Options\n####\n#-C jconffile\t\t\t# include jconf file at here\n#-version\t\t\t# print version info to stderr, and exit\n#-setting\t\t\t# print version info to stderr, and exit\n#-quiet\t\t\t\t# output less log\n#-debug\t\t\t\t# output more log for debug\n#-check wchmm\t\t\t# for debug, enter debug shell mode\n#-check trellis\t\t\t# for debug, enter debug shell mode\n#-check triphone\t\t# for debug, enter debug shell mode\n#-demo\t\t\t\t# same as \"-quiet -progout\"\n\n####\n#### Stream Input\n####\n\n## Feature vector input\n#-input mfcfile\t\t\t# feature vector in HTK parameter file\n#-input htkparam\t\t# (same as \"mfcfile\")\n#-input outprob\t\t\t# outprob vector in HTK parameter file\n#-input vecet\t\t\t# feature / outprob vector via network client\n\n## Raw audio input\n#-input mic    \t\t\t# live microphone\n#-input rawfile\t\t\t# wavefile\n#-input file\t\t\t# (same as \"rawfile\")\n#-input stdin\t\t\t# waveform from standard input\n#-input adinnet\t\t\t# waveform via network client\n#-input netaudio                # DatLink server\n#-input oss\t\t\t# OSS API input (if available)\n#-input alsa\t\t\t# ALSA API input (if available)\n#-input esd\t\t\t# ESounD daemon input (if available)\n#-input portaudio\t\t# PortAudio API\n#-input pulseaudio\t\t# PulseAudio API\n\n\n#-filelist filename\t\t# input file list\n#-notypecheck\t\t\t# does not check parameter type of input\n#-48\t\t\t\t# 48kHz sampling > 16kHz conv. (16kHz only)\n#-NA devname\t\t\t# hostname for DatLink server\n#-adport 5530\t\t\t# port number for adinnet\n#-nostrip\t\t\t# do not strip zero samples\n#-zmean\t\t\t\t# remove DC offset (use long input average)\n#-nozmean\t\t\t# disable \"-zmean\" specified before\n\n####\n#### Audio Input Scaling\n####\n#-lvscale 1.0\t\t\t# input level scaling factor (1.0 = disable)\n\n####\n#### Speech segment detection by level and zero-cross\n####\n#### default: on for microphone, off for other sources\n####\n#-cutsilence\t\t\t# detection on\n#-nocutsilence\t\t\t# detection off\n#-lv 2000\t\t\t# level threshold (0-32767)\n#-zc 60\t\t\t\t# zero-cross threshold (times in sec.)\n#-headmargin 300\t\t# head silence margin (msec)\n#-tailmargin 400\t\t# tail silence margin (msec)\n#-chunk_size 1000\t\t# processing segment unit length in samples\n#-rejectshort 0\t\t\t# reject shorter input (msec)\n#-rejectlong -1\t\t\t# reject longer input (msec) -1 to disable\n\n####\n#### Speech detection by libfvad\n####\n#-fvad -1           # disable libfvad\n#-fvad 0            # enable on mode 0 (least aggressive to filtering out non-speech)\n#-fvad 1            # enable on mode 1 (moderately aggressive to filtering out non-speech)\n#-fvad 2            # enable on mode 2 (aggressive to filtering out non-speech)\n#-fvad 3            # enable on mode 3 (very aggressive to filtering out non-speech)\n#-fvad_param 5 0.5  # optinal parameter: smoothing frames, trigger threshold\n\n####\n#### Input rejection by average power (EXPERIMENTAL)\n####\n####  This will be enabled by \"--enable-power-reject\" on compilation.\n####  Should be used with Decoder VAD or GMM VAD.\n####  Valid for real-time input only.\n####\n#-powerthres 9.0\t\t# reject input by avg. energy\n\n####\n#### Gaussian Mixture Model\n####\n####  GMM will be used for input rejection by accumurated score, or\n####  for GMM-based frontend VAD when \"--enable-gmm-vad\" specified.\n####\n####  NOTE: If you use MFCC for the GMM which is different from AM, you\n####  should also set the parameters like other AM with an option \"-AM_GMM\".\n####  If \"-AM_GMM\" is not used, Julius assume GMM to use the same\n####  parameter as the first AM.\n####\n#-gmm hmmdefs\t\t\t# GMM definitions in HTK format\n#-gmmnum 10\t\t\t# num of Gaussians to be computed per GMM\n#-gmmreject string\t\t# comma-separated list of GMM name to reject\n#### GMM_VAD\n#-gmmmargin 20\t\t\t# head margin for GMM based VAD in frames\n\n####\n#### Decoding option\n####\n#### Real-time processing means concurrent processing of MFCC computation\n#### and 1st pass decoding.  By default, real-time processing on the\n#### 1st pass is on for microphone / adinnet / netaudio input, and\n#### off for others.\n####\n#-realtime\t\t\t# force real-time processing\n#-norealtime\t\t\t# force non real-time processing\n\n####\n#### Plug-in\n####\n#### See plugin/00readme.txt for detail\n####\n#-plugindir ./plugin:/usr/local/share/julius/plugins\n\n\n######################################################################\n#### INSTANCE DEFINITION FOR MULTI DECODING\n######################################################################\n####\n#### The following three argument will create a new configuration set\n#### with default parameters, and switch current set to it.  Jconf\n#### parameters specified after the option will be set into the current\n#### set.\n####\n#### To do multi-model decoding, these argument should be specified at\n#### the first of each model / search instances with different names.\n#### Any options before the first instance definition will be IGNORED.\n####\n#### When no instance definition is found (as older version of Julius),\n#### all the options are assigned to a default instance named \"_default\".\n####\n#### Please note that decoding with a single LM and multiple AMs is not\n#### fully supported.  For example, you may want to construct the\n#### jconf file as this:\n####\n####  -AM am_1 -AM am_2\n####  -LM lm (LM spec..)\n####  -SR search1 am_1 lm\n####  -SR search2 am_2 lm\n####\n#### This type of model sharing is not supported yet, since some part\n#### of LM processing depends on the assigned AM.  Instead, you can\n#### get the same result by defining the same LMs for each AM, like this:\n####\n####  -AM am_1 -AM am_2\n####  -LM lm_1 (LM spec..)\n####  -LM lm_2 (same LM spec..)\n####  -SR search1 am_1 lm_1\n####  -SR search2 am_2 lm_2\n####\n\n## Create a new AM configuration set, and switch current to it.\n## You should give a unique name.\n#-AM name\t\t\t\n\n## Create a new LM configuration set, and switch current to it.\n## You should give a unique name.\n#-LM name\t\t\t\n\n## Create a new Search configuration set with AM and LM, and switch \n## current to it.  AM and LM name can be either name or ID number.\n#-SR name am_name_or_id lm_name_or_id\n\n## Switch current AM to special one reserved for GMM, to specify\n## analysis parameter for GMM.  Be sure not to confuse with normal AM\n## configuration.\n# -AM_GMM\n\n## When using instance declarations, global options should be placed\n## at top before any instance declaration, or after this option below.\n## This option is only a switcher and can be used anywhere anytime.\n# -GLOBAL\n\n## This option disables the strict section checkings and back to 4.0\n# -nosectioncheck\n\n######################################################################\n#### LANGUAGE MODEL (-LM)\n######################################################################\n####\n#### Only one type of LM can be specified for a LM configuration.\n####\n\n####\n#### N-gram\n####\n#-d binary_ngram_file\t\t# N-gram in Julius binary format\n#-nlr ngram\t\t\t# forward (left-to-right) N-gram\n#-nrl rev_ngram\t\t\t# backward (right-to-left) N-gram\n#-v dictfile\t\t\t# word dictionary\n## param.\n#-silhead \"<s>\"\t\t\t# beginning-of-sentence (silence) word\n#-siltail \"</s>\"\t\t# end-of-sentence (silence) word\n#-mapunk \"<unk>\"\t\t# word to which unknown words should be mapped\n#-iwspword\t\t\t# add a pause word to the dictionary\n#-iwspentry \"<UNK> [sp] sp sp\"\t# word that will be added by \"-iwspword\"\n#-sepnum 150\t\t\t# num of high freq words to linearize \n#-adddict dictfile              # append additional word dictionary\n#-addword entry                 # append additional word entry\n\n####\n#### Grammar\n####\n#### \"-gram\", \"-gramlist\" can be used multiple times\n#-gram gramprefix\t\t# (comma-separated list of) grammar file prefix\n#-gramlist txtfile\t\t# text file containing grammar prefixes\n#-dfa dfafile -v dictfile\t# specify DFA and dictionary separately\n#-nogram\t\t\t# reset all grammar list already specified\n\n####\n#### Isolated Word\n####\n#-w dictfile\t\t\t# word dictionary\n#-wlist txtfile\t\t\t# text file containing dictionaries\n#-nogram\t\t\t# reset all dictfiles already specified\n## param.\n#-wsil silB silE NULL\t\t# head / tail silence models to be appended\n\n####\n#### User-defined LM\n####\n#-userlm\t\t\t# declare to use user LM defined in program\n\n####\n#### misc LM option\n####\n#-forcedict\t\t\t# skip error word entries (no stop on error)\n\n######################################################################\n#### ACOUSTIC MODEL (-AM)  (-AM_GMM)\n######################################################################\n####\n#### Acoustic analysis parameters are included in this section, since\n#### the AM defines the required parameter.  You can use different MFCC\n#### type for each AM.\n#### For GMM, the same parameter should be specified after \"-AM_GMM\"\n#### \n#### When using multiple AM,  the values of \"-smpPeriod\", \"-smpFreq\",\n#### \"-fsize\" and \"-fshift\" should be the same among all AM.\n####\n\n## Acoustic model\n#-h hmmfile\t\t\t# acoustic HMM (ascii or Julius binary)\n#-hlist logicaltri\t\t# HMMList to map logical phone to physical\n#-tmix 2\t\t\t# # of mixture to compute in a mixture PDF\n#-spmodel \"sp\"\t\t\t# name of a short-pause silence model\n#-multipath\t\t\t# force enable MULTI-PATH model handling\n#-gprune {safe|heuristic|beam|none|default} # Gaussian pruning method\n#-iwcd1 {max|avg|best 3}\t# Inter-word triphone approximation method\n#-iwsppenalty -1.0\t\t# pause insertion penalty for \"-iwsp\"\n#-gshmm hmmfile \t\t# HMM for Gaussian mixture selection\n#-gsnum 24\t\t\t# Threshold number of HMM for gshmm\n\n## Analysis\n#-smpPeriod 625\t\t\t# sampling period (ns) (= 10000000 / smpFreq)\n#-smpFreq 16000\t\t\t# sampling rate (Hz)\n#-fsize 400\t\t\t# window size (samples)\n#-fshift 160\t\t\t# frame shift (samples)\n#-preemph 0.97\t\t\t# pre-emphasis coef.\n#-fbank 24\t\t\t# number of filterbank channels\n#-ceplif 22\t\t\t# cepstral liftering coef.\n#-rawe\t\t\t\t# use raw energy\n#-norawe\t\t\t# disable \"-rawe\" (this is default)\n#-enormal\t\t\t# normalize log energy\n#-noenormal\t\t\t# disable \"-enormal\" (this is default)\n#-escale 1.0\t\t\t# scaling log energy for enormal\n#-silfloor 50.0\t\t\t# energy silence floor in dB for enormal\n#-delwin 2\t\t\t# delta window (frames)\n#-accwin 2\t\t\t# acceleration window (frames)\n#-hifreq -1\t\t\t# cut-off hi frequency (Hz) (-1: disable)\n#-lofreq -1\t\t\t# cut-off low frequency (Hz) (-1: disable)\n#-zmeanframe\t\t\t# frame-wise DC offset removal (same as HTK)\n#-nozmeanframe\t\t\t# disable \"-zmeanframe\" (this is default)\n\n## Cepstral mean / variance normalization\n#-cmnload filename\t\t# load initial cep. mean / variance on startup\n#-cmnsave filename\t\t# save cep. mean / variance at each input end\n#-cmnupdate\t\t\t# update beginning cep. data at each input\n#-cmnnoupdate\t\t\t# keep initial mean, disable \"-cmnupdate\"\n#-cmnmapweight 100.0\t\t# weight for MAP-CMN\n#-cvn\t\t\t\t# enable variance normalization\n#-cmnstatic\t\t\t# totally static cmn/cvn\n\n## Vocal tract length normalization (VTLN)\n#-vtln 1.0 300 4800\t\t# enable VTLN (alpha, lowerfreq, upperfreq)\n\n## Spectral subtraction (default: disabled)\n#-sscalc\t\t\t# do SS, estimate noise from head sil\n#-sscalclen 300\t\t\t# length of head silence for \"-sscalc\" (msec)\n#-ssload filename\t\t# do SS, load noise spectrum saved by \"mkss\"\n#-ssalpha 2.0\t\t\t# alpha coef. for spectral subtraction\n#-ssfloor 0.5\t\t\t# spectral floor coef.\n\n## DNN-HMM definition (default disabled (= GMM-HMM))\n#-dnnconf file\t\t\t# DNN configuration file\n\n## Others\n#-htkconf configfile\t\t# load analysis settings from HTK Config file \n\n######################################################################\n#### RECOGNIZER (-SR)\n######################################################################\n####\n#### Default values for beam width and LM weights will change\n#### according to compile-time setup of JuliusLib and model specification.\n#### Please see the startup log for the actual values.\n#### \n\n####\n#### parameter (common)\n####\n#-inactive\t\t\t# start this process with inactive status\n#-1pass\t\t\t\t# perform only the 1st pass, omit 2nd pass\n#-no_ccd\t\t\t# switch off the phone context dependency\n#-force_ccd\t\t\t# force on the phone context dependency\n#-cmalpha 0.05\t\t\t# CM alpha value\n#-iwsp\t\t\t\t# append a skippable sp at all word ends\n#-transp 0.0\t\t\t# transition penalty for transparent words\n\n####\n#### parameter (1st pass)\n####\n#-lmp weight penalty\t\t# LM weight and word insertion penalty (pass1)\n#-penalty1 penalty\t\t# word insertion penalty for grammar (pass1)\n#-b width\t\t\t# beam width (# of nodes)\n#-bs score                      # beam width (score)\n#-nlimit 3\t\t\t# with enable-wpair-nlimit, set max N at nodes\n#-progout\t\t\t# progressive output while decoding\n#-proginterval 300\t\t# output interval in msec for \"-progout\"\n\n####\n#### parameter (2nd pass)\n####\n#-lmp2 weight penalty\t\t# LM weight and word insertion penalty (pass2)\n#-penalty2 penalty\t\t# word insertion penalty for grammar (pass2)\n#-b2 width\t\t\t# envelope beam width of 2nd pass (#word)\n#-sb 80.0\t\t\t# envelope score width at 2nd pass\n#-s 500\t\t\t\t# hypotheses stack size on 2nd pass (#hypo)\n#-m 2000\t\t\t# hypotheses overflow threshold (#hypo)\n#-n n\t\t\t\t# num of sentences to find\n#-output 1\t\t\t# num of sentences to output as result\n#-lookuprange 5\t\t\t# hypo. lookup range at word expansion (#frame)\n#-looktrellis\t\t\t# expand only trellis words in grammar\n#-fallback1pass\t\t\t# output 1st pass result when 2nd pass fails\n\n####\n#### short-pause segmentation (and decoder-based VAD)\n####\n#-spsegment\t\t\t# enable sp segmentation (or decoder VAD)\n#-spdur 10\t\t\t# # of frames to detect a short pause\n#-pausemodels string\t\t# comma-separated pause model names\n#### for decoder-VAD\n#-spmargin 40\t\t\t# backstep margin at trigger up (frame)\n#-spdelay 4\t\t\t# decision delay at trigger up (frame)\n\n#### \n#### lattice output\n#### \n#-lattice\t\t\t# output result in word graph (aka -graphout)\n#-graphrange 0\t\t\t# merge same words nearby, -1 to disable merge\n#-graphcut 80\t\t\t# graph depth cut threshold (in depth)\n#-graphboundloop 20\t\t# max itertations for boundary adjustment loop\n#-graphsearchdelay\t\t# activate an alternate generation algorithm \n#-nographsearchdelay\t\t# disable \"-graphsearchdelay\"\n\n#### \n#### confusion network output\n#### \n#-confnet\t\t\t# enable confusion network output\n#-noconfnet\t\t\t# disable confusion network output\n\n#### \n#### multi-grammar output (for grammar and isolated word)\n#### \n#-multigramout\t\t\t# output max hypo for each grammar\n#-nomultigramout\t\t# disable \"-multigramout\"\n\n#### \n#### forced alignment\n#### \n#-walign\t\t\t# enable alignment for result at word level\n#-palign\t\t\t# enable alignment for result at phoneme level\n#-salign\t\t\t# enable alignment for result at state level\n\n####\n#### misc.\n####\n#-outprobout filename\t\t# save computed outprob vectors to HTK file (for debug)\n\n################################################################# end of file\n"
        },
        {
          "name": "adinrec",
          "type": "tree",
          "content": null
        },
        {
          "name": "adintool",
          "type": "tree",
          "content": null
        },
        {
          "name": "binlm2arpa",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 124.080078125,
          "content": "#! /bin/sh\n# Guess values for system-dependent variables and create Makefiles.\n# Generated by GNU Autoconf 2.69.\n#\n#\n# Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.\n#\n#\n# This configure script is free software; the Free Software Foundation\n# gives unlimited permission to copy, distribute and modify it.\n## -------------------- ##\n## M4sh Initialization. ##\n## -------------------- ##\n\n# Be more Bourne compatible\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac\nfi\n\n\nas_nl='\n'\nexport as_nl\n# Printing a long string crashes Solaris 7 /usr/bin/printf.\nas_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo\n# Prefer a ksh shell builtin over an external printf program on Solaris,\n# but without wasting forks for bash or zsh.\nif test -z \"$BASH_VERSION$ZSH_VERSION\" \\\n    && (test \"X`print -r -- $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='print -r --'\n  as_echo_n='print -rn --'\nelif (test \"X`printf %s $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='printf %s\\n'\n  as_echo_n='printf %s'\nelse\n  if test \"X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`\" = \"X-n $as_echo\"; then\n    as_echo_body='eval /usr/ucb/echo -n \"$1$as_nl\"'\n    as_echo_n='/usr/ucb/echo -n'\n  else\n    as_echo_body='eval expr \"X$1\" : \"X\\\\(.*\\\\)\"'\n    as_echo_n_body='eval\n      arg=$1;\n      case $arg in #(\n      *\"$as_nl\"*)\n\texpr \"X$arg\" : \"X\\\\(.*\\\\)$as_nl\";\n\targ=`expr \"X$arg\" : \".*$as_nl\\\\(.*\\\\)\"`;;\n      esac;\n      expr \"X$arg\" : \"X\\\\(.*\\\\)\" | tr -d \"$as_nl\"\n    '\n    export as_echo_n_body\n    as_echo_n='sh -c $as_echo_n_body as_echo'\n  fi\n  export as_echo_body\n  as_echo='sh -c $as_echo_body as_echo'\nfi\n\n# The user is always right.\nif test \"${PATH_SEPARATOR+set}\" != set; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n# IFS\n# We need space, tab and new line, in precisely that order.  Quoting is\n# there to prevent editors from complaining about space-tab.\n# (If _AS_PATH_WALK were called with IFS unset, it would disable word\n# splitting by setting IFS to empty value.)\nIFS=\" \"\"\t$as_nl\"\n\n# Find who we are.  Look in the path if we contain no directory separator.\nas_myself=\ncase $0 in #((\n  *[\\\\/]* ) as_myself=$0 ;;\n  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    test -r \"$as_dir/$0\" && as_myself=$as_dir/$0 && break\n  done\nIFS=$as_save_IFS\n\n     ;;\nesac\n# We did not find ourselves, most probably we were run as `sh COMMAND'\n# in which case we are not to be found in the path.\nif test \"x$as_myself\" = x; then\n  as_myself=$0\nfi\nif test ! -f \"$as_myself\"; then\n  $as_echo \"$as_myself: error: cannot find myself; rerun with an absolute file name\" >&2\n  exit 1\nfi\n\n# Unset variables that we do not need and which cause bugs (e.g. in\n# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the \"|| exit 1\"\n# suppresses any \"Segmentation fault\" message there.  '((' could\n# trigger a bug in pdksh 5.2.14.\nfor as_var in BASH_ENV ENV MAIL MAILPATH\ndo eval test x\\${$as_var+set} = xset \\\n  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :\ndone\nPS1='$ '\nPS2='> '\nPS4='+ '\n\n# NLS nuisances.\nLC_ALL=C\nexport LC_ALL\nLANGUAGE=C\nexport LANGUAGE\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n# Use a proper internal environment variable to ensure we don't fall\n  # into an infinite loop, continuously re-executing ourselves.\n  if test x\"${_as_can_reexec}\" != xno && test \"x$CONFIG_SHELL\" != x; then\n    _as_can_reexec=no; export _as_can_reexec;\n    # We cannot yet assume a decent shell, so we have to provide a\n# neutralization value for shells without unset; and this also\n# works around shells that cannot unset nonexistent variables.\n# Preserve -v and -x to the replacement shell.\nBASH_ENV=/dev/null\nENV=/dev/null\n(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV\ncase $- in # ((((\n  *v*x* | *x*v* ) as_opts=-vx ;;\n  *v* ) as_opts=-v ;;\n  *x* ) as_opts=-x ;;\n  * ) as_opts= ;;\nesac\nexec $CONFIG_SHELL $as_opts \"$as_myself\" ${1+\"$@\"}\n# Admittedly, this is quite paranoid, since all the known shells bail\n# out after a failed `exec'.\n$as_echo \"$0: could not re-execute with $CONFIG_SHELL\" >&2\nas_fn_exit 255\n  fi\n  # We don't want this to propagate to other subprocesses.\n          { _as_can_reexec=; unset _as_can_reexec;}\nif test \"x$CONFIG_SHELL\" = x; then\n  as_bourne_compatible=\"if test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac\nfi\n\"\n  as_required=\"as_fn_return () { (exit \\$1); }\nas_fn_success () { as_fn_return 0; }\nas_fn_failure () { as_fn_return 1; }\nas_fn_ret_success () { return 0; }\nas_fn_ret_failure () { return 1; }\n\nexitcode=0\nas_fn_success || { exitcode=1; echo as_fn_success failed.; }\nas_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }\nas_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }\nas_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }\nif ( set x; as_fn_ret_success y && test x = \\\"\\$1\\\" ); then :\n\nelse\n  exitcode=1; echo positional parameters were not saved.\nfi\ntest x\\$exitcode = x0 || exit 1\ntest -x / || exit 1\"\n  as_suggested=\"  as_lineno_1=\";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested\" as_lineno_1a=\\$LINENO\n  as_lineno_2=\";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested\" as_lineno_2a=\\$LINENO\n  eval 'test \\\"x\\$as_lineno_1'\\$as_run'\\\" != \\\"x\\$as_lineno_2'\\$as_run'\\\" &&\n  test \\\"x\\`expr \\$as_lineno_1'\\$as_run' + 1\\`\\\" = \\\"x\\$as_lineno_2'\\$as_run'\\\"' || exit 1\"\n  if (eval \"$as_required\") 2>/dev/null; then :\n  as_have_required=yes\nelse\n  as_have_required=no\nfi\n  if test x$as_have_required = xyes && (eval \"$as_suggested\") 2>/dev/null; then :\n\nelse\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nas_found=false\nfor as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  as_found=:\n  case $as_dir in #(\n\t /*)\n\t   for as_base in sh bash ksh sh5; do\n\t     # Try only shells that exist, to save several forks.\n\t     as_shell=$as_dir/$as_base\n\t     if { test -f \"$as_shell\" || test -f \"$as_shell.exe\"; } &&\n\t\t    { $as_echo \"$as_bourne_compatible\"\"$as_required\" | as_run=a \"$as_shell\"; } 2>/dev/null; then :\n  CONFIG_SHELL=$as_shell as_have_required=yes\n\t\t   if { $as_echo \"$as_bourne_compatible\"\"$as_suggested\" | as_run=a \"$as_shell\"; } 2>/dev/null; then :\n  break 2\nfi\nfi\n\t   done;;\n       esac\n  as_found=false\ndone\n$as_found || { if { test -f \"$SHELL\" || test -f \"$SHELL.exe\"; } &&\n\t      { $as_echo \"$as_bourne_compatible\"\"$as_required\" | as_run=a \"$SHELL\"; } 2>/dev/null; then :\n  CONFIG_SHELL=$SHELL as_have_required=yes\nfi; }\nIFS=$as_save_IFS\n\n\n      if test \"x$CONFIG_SHELL\" != x; then :\n  export CONFIG_SHELL\n             # We cannot yet assume a decent shell, so we have to provide a\n# neutralization value for shells without unset; and this also\n# works around shells that cannot unset nonexistent variables.\n# Preserve -v and -x to the replacement shell.\nBASH_ENV=/dev/null\nENV=/dev/null\n(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV\ncase $- in # ((((\n  *v*x* | *x*v* ) as_opts=-vx ;;\n  *v* ) as_opts=-v ;;\n  *x* ) as_opts=-x ;;\n  * ) as_opts= ;;\nesac\nexec $CONFIG_SHELL $as_opts \"$as_myself\" ${1+\"$@\"}\n# Admittedly, this is quite paranoid, since all the known shells bail\n# out after a failed `exec'.\n$as_echo \"$0: could not re-execute with $CONFIG_SHELL\" >&2\nexit 255\nfi\n\n    if test x$as_have_required = xno; then :\n  $as_echo \"$0: This script requires a shell more modern than all\"\n  $as_echo \"$0: the shells that I found on your system.\"\n  if test x${ZSH_VERSION+set} = xset ; then\n    $as_echo \"$0: In particular, zsh $ZSH_VERSION has bugs and should\"\n    $as_echo \"$0: be upgraded to zsh 4.3.4 or later.\"\n  else\n    $as_echo \"$0: Please tell bug-autoconf@gnu.org about your system,\n$0: including any error possibly output before this\n$0: message. Then install a modern shell, or manually run\n$0: the script under such a shell if you do have one.\"\n  fi\n  exit 1\nfi\nfi\nfi\nSHELL=${CONFIG_SHELL-/bin/sh}\nexport SHELL\n# Unset more variables known to interfere with behavior of common tools.\nCLICOLOR_FORCE= GREP_OPTIONS=\nunset CLICOLOR_FORCE GREP_OPTIONS\n\n## --------------------- ##\n## M4sh Shell Functions. ##\n## --------------------- ##\n# as_fn_unset VAR\n# ---------------\n# Portably unset VAR.\nas_fn_unset ()\n{\n  { eval $1=; unset $1;}\n}\nas_unset=as_fn_unset\n\n# as_fn_set_status STATUS\n# -----------------------\n# Set $? to STATUS, without forking.\nas_fn_set_status ()\n{\n  return $1\n} # as_fn_set_status\n\n# as_fn_exit STATUS\n# -----------------\n# Exit the shell with STATUS, even in a \"trap 0\" or \"set -e\" context.\nas_fn_exit ()\n{\n  set +e\n  as_fn_set_status $1\n  exit $1\n} # as_fn_exit\n\n# as_fn_mkdir_p\n# -------------\n# Create \"$as_dir\" as a directory, including parents if necessary.\nas_fn_mkdir_p ()\n{\n\n  case $as_dir in #(\n  -*) as_dir=./$as_dir;;\n  esac\n  test -d \"$as_dir\" || eval $as_mkdir_p || {\n    as_dirs=\n    while :; do\n      case $as_dir in #(\n      *\\'*) as_qdir=`$as_echo \"$as_dir\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; #'(\n      *) as_qdir=$as_dir;;\n      esac\n      as_dirs=\"'$as_qdir' $as_dirs\"\n      as_dir=`$as_dirname -- \"$as_dir\" ||\n$as_expr X\"$as_dir\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_dir\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$as_dir\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n      test -d \"$as_dir\" && break\n    done\n    test -z \"$as_dirs\" || eval \"mkdir $as_dirs\"\n  } || test -d \"$as_dir\" || as_fn_error $? \"cannot create directory $as_dir\"\n\n\n} # as_fn_mkdir_p\n\n# as_fn_executable_p FILE\n# -----------------------\n# Test if FILE is an executable regular file.\nas_fn_executable_p ()\n{\n  test -f \"$1\" && test -x \"$1\"\n} # as_fn_executable_p\n# as_fn_append VAR VALUE\n# ----------------------\n# Append the text in VALUE to the end of the definition contained in VAR. Take\n# advantage of any shell optimizations that allow amortized linear growth over\n# repeated appends, instead of the typical quadratic growth present in naive\n# implementations.\nif (eval \"as_var=1; as_var+=2; test x\\$as_var = x12\") 2>/dev/null; then :\n  eval 'as_fn_append ()\n  {\n    eval $1+=\\$2\n  }'\nelse\n  as_fn_append ()\n  {\n    eval $1=\\$$1\\$2\n  }\nfi # as_fn_append\n\n# as_fn_arith ARG...\n# ------------------\n# Perform arithmetic evaluation on the ARGs, and store the result in the\n# global $as_val. Take advantage of shells that can avoid forks. The arguments\n# must be portable across $(()) and expr.\nif (eval \"test \\$(( 1 + 1 )) = 2\") 2>/dev/null; then :\n  eval 'as_fn_arith ()\n  {\n    as_val=$(( $* ))\n  }'\nelse\n  as_fn_arith ()\n  {\n    as_val=`expr \"$@\" || test $? -eq 1`\n  }\nfi # as_fn_arith\n\n\n# as_fn_error STATUS ERROR [LINENO LOG_FD]\n# ----------------------------------------\n# Output \"`basename $0`: error: ERROR\" to stderr. If LINENO and LOG_FD are\n# provided, also output the error to LOG_FD, referencing LINENO. Then exit the\n# script with STATUS, using 1 if that was 0.\nas_fn_error ()\n{\n  as_status=$1; test $as_status -eq 0 && as_status=1\n  if test \"$4\"; then\n    as_lineno=${as_lineno-\"$3\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n    $as_echo \"$as_me:${as_lineno-$LINENO}: error: $2\" >&$4\n  fi\n  $as_echo \"$as_me: error: $2\" >&2\n  as_fn_exit $as_status\n} # as_fn_error\n\nif expr a : '\\(a\\)' >/dev/null 2>&1 &&\n   test \"X`expr 00001 : '.*\\(...\\)'`\" = X001; then\n  as_expr=expr\nelse\n  as_expr=false\nfi\n\nif (basename -- /) >/dev/null 2>&1 && test \"X`basename -- / 2>&1`\" = \"X/\"; then\n  as_basename=basename\nelse\n  as_basename=false\nfi\n\nif (as_dir=`dirname -- /` && test \"X$as_dir\" = X/) >/dev/null 2>&1; then\n  as_dirname=dirname\nelse\n  as_dirname=false\nfi\n\nas_me=`$as_basename -- \"$0\" ||\n$as_expr X/\"$0\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$0\" : 'X\\(//\\)$' \\| \\\n\t X\"$0\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X/\"$0\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n\n# Avoid depending upon Character Ranges.\nas_cr_letters='abcdefghijklmnopqrstuvwxyz'\nas_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nas_cr_Letters=$as_cr_letters$as_cr_LETTERS\nas_cr_digits='0123456789'\nas_cr_alnum=$as_cr_Letters$as_cr_digits\n\n\n  as_lineno_1=$LINENO as_lineno_1a=$LINENO\n  as_lineno_2=$LINENO as_lineno_2a=$LINENO\n  eval 'test \"x$as_lineno_1'$as_run'\" != \"x$as_lineno_2'$as_run'\" &&\n  test \"x`expr $as_lineno_1'$as_run' + 1`\" = \"x$as_lineno_2'$as_run'\"' || {\n  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)\n  sed -n '\n    p\n    /[$]LINENO/=\n  ' <$as_myself |\n    sed '\n      s/[$]LINENO.*/&-/\n      t lineno\n      b\n      :lineno\n      N\n      :loop\n      s/[$]LINENO\\([^'$as_cr_alnum'_].*\\n\\)\\(.*\\)/\\2\\1\\2/\n      t loop\n      s/-\\n.*//\n    ' >$as_me.lineno &&\n  chmod +x \"$as_me.lineno\" ||\n    { $as_echo \"$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell\" >&2; as_fn_exit 1; }\n\n  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have\n  # already done that, so ensure we don't try to do so again and fall\n  # in an infinite loop.  This has already happened in practice.\n  _as_can_reexec=no; export _as_can_reexec\n  # Don't try to exec as it changes $[0], causing all sort of problems\n  # (the dirname of $[0] is not the place where we might find the\n  # original and so on.  Autoconf is especially sensitive to this).\n  . \"./$as_me.lineno\"\n  # Exit status is that of the last command.\n  exit\n}\n\nECHO_C= ECHO_N= ECHO_T=\ncase `echo -n x` in #(((((\n-n*)\n  case `echo 'xy\\c'` in\n  *c*) ECHO_T='\t';;\t# ECHO_T is single tab character.\n  xy)  ECHO_C='\\c';;\n  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null\n       ECHO_T='\t';;\n  esac;;\n*)\n  ECHO_N='-n';;\nesac\n\nrm -f conf$$ conf$$.exe conf$$.file\nif test -d conf$$.dir; then\n  rm -f conf$$.dir/conf$$.file\nelse\n  rm -f conf$$.dir\n  mkdir conf$$.dir 2>/dev/null\nfi\nif (echo >conf$$.file) 2>/dev/null; then\n  if ln -s conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s='ln -s'\n    # ... but there are two gotchas:\n    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.\n    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.\n    # In both cases, we have to default to `cp -pR'.\n    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||\n      as_ln_s='cp -pR'\n  elif ln conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s=ln\n  else\n    as_ln_s='cp -pR'\n  fi\nelse\n  as_ln_s='cp -pR'\nfi\nrm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file\nrmdir conf$$.dir 2>/dev/null\n\nif mkdir -p . 2>/dev/null; then\n  as_mkdir_p='mkdir -p \"$as_dir\"'\nelse\n  test -d ./-p && rmdir ./-p\n  as_mkdir_p=false\nfi\n\nas_test_x='test -x'\nas_executable_p=as_fn_executable_p\n\n# Sed expression to map a string onto a valid CPP name.\nas_tr_cpp=\"eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'\"\n\n# Sed expression to map a string onto a valid variable name.\nas_tr_sh=\"eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'\"\n\n\ntest -n \"$DJDIR\" || exec 7<&0 </dev/null\nexec 6>&1\n\n# Name of the host.\n# hostname on some systems (SVR3.2, old GNU/Linux) returns a bogus exit status,\n# so uname gets run too.\nac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`\n\n#\n# Initializations.\n#\nac_default_prefix=/usr/local\nac_clean_files=\nac_config_libobj_dir=.\nLIBOBJS=\ncross_compiling=no\nsubdirs=\nMFLAGS=\nMAKEFLAGS=\n\n# Identity of this package.\nPACKAGE_NAME=\nPACKAGE_TARNAME=\nPACKAGE_VERSION=\nPACKAGE_STRING=\nPACKAGE_BUGREPORT=\nPACKAGE_URL=\n\nac_unique_file=\"Sample.jconf\"\nenable_option_checking=no\nac_subst_vars='LTLIBOBJS\nLIBOBJS\nRM\nINSTALL_DATA\nINSTALL_SCRIPT\nINSTALL_PROGRAM\nCPP\nOBJEXT\nEXEEXT\nac_ct_CC\nCPPFLAGS\nLDFLAGS\nCFLAGS\nCC\nhost_os\nhost_vendor\nhost_cpu\nhost\nbuild_os\nbuild_vendor\nbuild_cpu\nbuild\nsubdirs\ntarget_alias\nhost_alias\nbuild_alias\nLIBS\nECHO_T\nECHO_N\nECHO_C\nDEFS\nmandir\nlocaledir\nlibdir\npsdir\npdfdir\ndvidir\nhtmldir\ninfodir\ndocdir\noldincludedir\nincludedir\nrunstatedir\nlocalstatedir\nsharedstatedir\nsysconfdir\ndatadir\ndatarootdir\nlibexecdir\nsbindir\nbindir\nprogram_transform_name\nprefix\nexec_prefix\nPACKAGE_URL\nPACKAGE_BUGREPORT\nPACKAGE_STRING\nPACKAGE_VERSION\nPACKAGE_TARNAME\nPACKAGE_NAME\nPATH_SEPARATOR\nSHELL'\nac_subst_files=''\nac_user_opts='\nenable_option_checking\n'\n      ac_precious_vars='build_alias\nhost_alias\ntarget_alias\nCC\nCFLAGS\nLDFLAGS\nLIBS\nCPPFLAGS\nCPP'\nac_subdirs_all='adintool mkgshmm gramtools jcontrol mkbingram julius libjulius libsent'\n\n# Initialize some variables set by options.\nac_init_help=\nac_init_version=false\nac_unrecognized_opts=\nac_unrecognized_sep=\n# The variables have the same names as the options, with\n# dashes changed to underlines.\ncache_file=/dev/null\nexec_prefix=NONE\nno_create=\nno_recursion=\nprefix=NONE\nprogram_prefix=NONE\nprogram_suffix=NONE\nprogram_transform_name=s,x,x,\nsilent=\nsite=\nsrcdir=\nverbose=\nx_includes=NONE\nx_libraries=NONE\n\n# Installation directory options.\n# These are left unexpanded so users can \"make install exec_prefix=/foo\"\n# and all the variables that are supposed to be based on exec_prefix\n# by default will actually change.\n# Use braces instead of parens because sh, perl, etc. also accept them.\n# (The list follows the same order as the GNU Coding Standards.)\nbindir='${exec_prefix}/bin'\nsbindir='${exec_prefix}/sbin'\nlibexecdir='${exec_prefix}/libexec'\ndatarootdir='${prefix}/share'\ndatadir='${datarootdir}'\nsysconfdir='${prefix}/etc'\nsharedstatedir='${prefix}/com'\nlocalstatedir='${prefix}/var'\nrunstatedir='${localstatedir}/run'\nincludedir='${prefix}/include'\noldincludedir='/usr/include'\ndocdir='${datarootdir}/doc/${PACKAGE}'\ninfodir='${datarootdir}/info'\nhtmldir='${docdir}'\ndvidir='${docdir}'\npdfdir='${docdir}'\npsdir='${docdir}'\nlibdir='${exec_prefix}/lib'\nlocaledir='${datarootdir}/locale'\nmandir='${datarootdir}/man'\n\nac_prev=\nac_dashdash=\nfor ac_option\ndo\n  # If the previous option needs an argument, assign it.\n  if test -n \"$ac_prev\"; then\n    eval $ac_prev=\\$ac_option\n    ac_prev=\n    continue\n  fi\n\n  case $ac_option in\n  *=?*) ac_optarg=`expr \"X$ac_option\" : '[^=]*=\\(.*\\)'` ;;\n  *=)   ac_optarg= ;;\n  *)    ac_optarg=yes ;;\n  esac\n\n  # Accept the important Cygnus configure options, so we can diagnose typos.\n\n  case $ac_dashdash$ac_option in\n  --)\n    ac_dashdash=yes ;;\n\n  -bindir | --bindir | --bindi | --bind | --bin | --bi)\n    ac_prev=bindir ;;\n  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)\n    bindir=$ac_optarg ;;\n\n  -build | --build | --buil | --bui | --bu)\n    ac_prev=build_alias ;;\n  -build=* | --build=* | --buil=* | --bui=* | --bu=*)\n    build_alias=$ac_optarg ;;\n\n  -cache-file | --cache-file | --cache-fil | --cache-fi \\\n  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)\n    ac_prev=cache_file ;;\n  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \\\n  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)\n    cache_file=$ac_optarg ;;\n\n  --config-cache | -C)\n    cache_file=config.cache ;;\n\n  -datadir | --datadir | --datadi | --datad)\n    ac_prev=datadir ;;\n  -datadir=* | --datadir=* | --datadi=* | --datad=*)\n    datadir=$ac_optarg ;;\n\n  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \\\n  | --dataroo | --dataro | --datar)\n    ac_prev=datarootdir ;;\n  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \\\n  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)\n    datarootdir=$ac_optarg ;;\n\n  -disable-* | --disable-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*disable-\\(.*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid feature name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"enable_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval enable_$ac_useropt=no ;;\n\n  -docdir | --docdir | --docdi | --doc | --do)\n    ac_prev=docdir ;;\n  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)\n    docdir=$ac_optarg ;;\n\n  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)\n    ac_prev=dvidir ;;\n  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)\n    dvidir=$ac_optarg ;;\n\n  -enable-* | --enable-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*enable-\\([^=]*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid feature name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"enable_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval enable_$ac_useropt=\\$ac_optarg ;;\n\n  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \\\n  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \\\n  | --exec | --exe | --ex)\n    ac_prev=exec_prefix ;;\n  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \\\n  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \\\n  | --exec=* | --exe=* | --ex=*)\n    exec_prefix=$ac_optarg ;;\n\n  -gas | --gas | --ga | --g)\n    # Obsolete; use --with-gas.\n    with_gas=yes ;;\n\n  -help | --help | --hel | --he | -h)\n    ac_init_help=long ;;\n  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)\n    ac_init_help=recursive ;;\n  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)\n    ac_init_help=short ;;\n\n  -host | --host | --hos | --ho)\n    ac_prev=host_alias ;;\n  -host=* | --host=* | --hos=* | --ho=*)\n    host_alias=$ac_optarg ;;\n\n  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)\n    ac_prev=htmldir ;;\n  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \\\n  | --ht=*)\n    htmldir=$ac_optarg ;;\n\n  -includedir | --includedir | --includedi | --included | --include \\\n  | --includ | --inclu | --incl | --inc)\n    ac_prev=includedir ;;\n  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \\\n  | --includ=* | --inclu=* | --incl=* | --inc=*)\n    includedir=$ac_optarg ;;\n\n  -infodir | --infodir | --infodi | --infod | --info | --inf)\n    ac_prev=infodir ;;\n  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)\n    infodir=$ac_optarg ;;\n\n  -libdir | --libdir | --libdi | --libd)\n    ac_prev=libdir ;;\n  -libdir=* | --libdir=* | --libdi=* | --libd=*)\n    libdir=$ac_optarg ;;\n\n  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \\\n  | --libexe | --libex | --libe)\n    ac_prev=libexecdir ;;\n  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \\\n  | --libexe=* | --libex=* | --libe=*)\n    libexecdir=$ac_optarg ;;\n\n  -localedir | --localedir | --localedi | --localed | --locale)\n    ac_prev=localedir ;;\n  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)\n    localedir=$ac_optarg ;;\n\n  -localstatedir | --localstatedir | --localstatedi | --localstated \\\n  | --localstate | --localstat | --localsta | --localst | --locals)\n    ac_prev=localstatedir ;;\n  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \\\n  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)\n    localstatedir=$ac_optarg ;;\n\n  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)\n    ac_prev=mandir ;;\n  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)\n    mandir=$ac_optarg ;;\n\n  -nfp | --nfp | --nf)\n    # Obsolete; use --without-fp.\n    with_fp=no ;;\n\n  -no-create | --no-create | --no-creat | --no-crea | --no-cre \\\n  | --no-cr | --no-c | -n)\n    no_create=yes ;;\n\n  -no-recursion | --no-recursion | --no-recursio | --no-recursi \\\n  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)\n    no_recursion=yes ;;\n\n  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \\\n  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \\\n  | --oldin | --oldi | --old | --ol | --o)\n    ac_prev=oldincludedir ;;\n  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \\\n  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \\\n  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)\n    oldincludedir=$ac_optarg ;;\n\n  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)\n    ac_prev=prefix ;;\n  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)\n    prefix=$ac_optarg ;;\n\n  -program-prefix | --program-prefix | --program-prefi | --program-pref \\\n  | --program-pre | --program-pr | --program-p)\n    ac_prev=program_prefix ;;\n  -program-prefix=* | --program-prefix=* | --program-prefi=* \\\n  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)\n    program_prefix=$ac_optarg ;;\n\n  -program-suffix | --program-suffix | --program-suffi | --program-suff \\\n  | --program-suf | --program-su | --program-s)\n    ac_prev=program_suffix ;;\n  -program-suffix=* | --program-suffix=* | --program-suffi=* \\\n  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)\n    program_suffix=$ac_optarg ;;\n\n  -program-transform-name | --program-transform-name \\\n  | --program-transform-nam | --program-transform-na \\\n  | --program-transform-n | --program-transform- \\\n  | --program-transform | --program-transfor \\\n  | --program-transfo | --program-transf \\\n  | --program-trans | --program-tran \\\n  | --progr-tra | --program-tr | --program-t)\n    ac_prev=program_transform_name ;;\n  -program-transform-name=* | --program-transform-name=* \\\n  | --program-transform-nam=* | --program-transform-na=* \\\n  | --program-transform-n=* | --program-transform-=* \\\n  | --program-transform=* | --program-transfor=* \\\n  | --program-transfo=* | --program-transf=* \\\n  | --program-trans=* | --program-tran=* \\\n  | --progr-tra=* | --program-tr=* | --program-t=*)\n    program_transform_name=$ac_optarg ;;\n\n  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)\n    ac_prev=pdfdir ;;\n  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)\n    pdfdir=$ac_optarg ;;\n\n  -psdir | --psdir | --psdi | --psd | --ps)\n    ac_prev=psdir ;;\n  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)\n    psdir=$ac_optarg ;;\n\n  -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n  | -silent | --silent | --silen | --sile | --sil)\n    silent=yes ;;\n\n  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n  | --runstate | --runstat | --runsta | --runst | --runs \\\n  | --run | --ru | --r)\n    ac_prev=runstatedir ;;\n  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n  | --run=* | --ru=* | --r=*)\n    runstatedir=$ac_optarg ;;\n\n  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n    ac_prev=sbindir ;;\n  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n  | --sbi=* | --sb=*)\n    sbindir=$ac_optarg ;;\n\n  -sharedstatedir | --sharedstatedir | --sharedstatedi \\\n  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \\\n  | --sharedst | --shareds | --shared | --share | --shar \\\n  | --sha | --sh)\n    ac_prev=sharedstatedir ;;\n  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \\\n  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \\\n  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \\\n  | --sha=* | --sh=*)\n    sharedstatedir=$ac_optarg ;;\n\n  -site | --site | --sit)\n    ac_prev=site ;;\n  -site=* | --site=* | --sit=*)\n    site=$ac_optarg ;;\n\n  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)\n    ac_prev=srcdir ;;\n  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)\n    srcdir=$ac_optarg ;;\n\n  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \\\n  | --syscon | --sysco | --sysc | --sys | --sy)\n    ac_prev=sysconfdir ;;\n  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \\\n  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)\n    sysconfdir=$ac_optarg ;;\n\n  -target | --target | --targe | --targ | --tar | --ta | --t)\n    ac_prev=target_alias ;;\n  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)\n    target_alias=$ac_optarg ;;\n\n  -v | -verbose | --verbose | --verbos | --verbo | --verb)\n    verbose=yes ;;\n\n  -version | --version | --versio | --versi | --vers | -V)\n    ac_init_version=: ;;\n\n  -with-* | --with-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*with-\\([^=]*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid package name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"with_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval with_$ac_useropt=\\$ac_optarg ;;\n\n  -without-* | --without-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*without-\\(.*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid package name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"with_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval with_$ac_useropt=no ;;\n\n  --x)\n    # Obsolete; use --with-x.\n    with_x=yes ;;\n\n  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \\\n  | --x-incl | --x-inc | --x-in | --x-i)\n    ac_prev=x_includes ;;\n  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \\\n  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)\n    x_includes=$ac_optarg ;;\n\n  -x-libraries | --x-libraries | --x-librarie | --x-librari \\\n  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)\n    ac_prev=x_libraries ;;\n  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \\\n  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)\n    x_libraries=$ac_optarg ;;\n\n  -*) as_fn_error $? \"unrecognized option: \\`$ac_option'\nTry \\`$0 --help' for more information\"\n    ;;\n\n  *=*)\n    ac_envvar=`expr \"x$ac_option\" : 'x\\([^=]*\\)='`\n    # Reject names that are not valid shell variable names.\n    case $ac_envvar in #(\n      '' | [0-9]* | *[!_$as_cr_alnum]* )\n      as_fn_error $? \"invalid variable name: \\`$ac_envvar'\" ;;\n    esac\n    eval $ac_envvar=\\$ac_optarg\n    export $ac_envvar ;;\n\n  *)\n    # FIXME: should be removed in autoconf 3.0.\n    $as_echo \"$as_me: WARNING: you should use --build, --host, --target\" >&2\n    expr \"x$ac_option\" : \".*[^-._$as_cr_alnum]\" >/dev/null &&\n      $as_echo \"$as_me: WARNING: invalid host type: $ac_option\" >&2\n    : \"${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}\"\n    ;;\n\n  esac\ndone\n\nif test -n \"$ac_prev\"; then\n  ac_option=--`echo $ac_prev | sed 's/_/-/g'`\n  as_fn_error $? \"missing argument to $ac_option\"\nfi\n\nif test -n \"$ac_unrecognized_opts\"; then\n  case $enable_option_checking in\n    no) ;;\n    fatal) as_fn_error $? \"unrecognized options: $ac_unrecognized_opts\" ;;\n    *)     $as_echo \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2 ;;\n  esac\nfi\n\n# Check all directory arguments for consistency.\nfor ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n\t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n\t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n\t\tlibdir localedir mandir runstatedir\ndo\n  eval ac_val=\\$$ac_var\n  # Remove trailing slashes.\n  case $ac_val in\n    */ )\n      ac_val=`expr \"X$ac_val\" : 'X\\(.*[^/]\\)' \\| \"X$ac_val\" : 'X\\(.*\\)'`\n      eval $ac_var=\\$ac_val;;\n  esac\n  # Be sure to have absolute directory names.\n  case $ac_val in\n    [\\\\/$]* | ?:[\\\\/]* )  continue;;\n    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;\n  esac\n  as_fn_error $? \"expected an absolute directory name for --$ac_var: $ac_val\"\ndone\n\n# There might be people who depend on the old broken behavior: `$host'\n# used to hold the argument of --host etc.\n# FIXME: To remove some day.\nbuild=$build_alias\nhost=$host_alias\ntarget=$target_alias\n\n# FIXME: To remove some day.\nif test \"x$host_alias\" != x; then\n  if test \"x$build_alias\" = x; then\n    cross_compiling=maybe\n  elif test \"x$build_alias\" != \"x$host_alias\"; then\n    cross_compiling=yes\n  fi\nfi\n\nac_tool_prefix=\ntest -n \"$host_alias\" && ac_tool_prefix=$host_alias-\n\ntest \"$silent\" = yes && exec 6>/dev/null\n\n\nac_pwd=`pwd` && test -n \"$ac_pwd\" &&\nac_ls_di=`ls -di .` &&\nac_pwd_ls_di=`cd \"$ac_pwd\" && ls -di .` ||\n  as_fn_error $? \"working directory cannot be determined\"\ntest \"X$ac_ls_di\" = \"X$ac_pwd_ls_di\" ||\n  as_fn_error $? \"pwd does not report name of working directory\"\n\n\n# Find the source files, if location was not specified.\nif test -z \"$srcdir\"; then\n  ac_srcdir_defaulted=yes\n  # Try the directory containing this script, then the parent directory.\n  ac_confdir=`$as_dirname -- \"$as_myself\" ||\n$as_expr X\"$as_myself\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_myself\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_myself\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_myself\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$as_myself\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n  srcdir=$ac_confdir\n  if test ! -r \"$srcdir/$ac_unique_file\"; then\n    srcdir=..\n  fi\nelse\n  ac_srcdir_defaulted=no\nfi\nif test ! -r \"$srcdir/$ac_unique_file\"; then\n  test \"$ac_srcdir_defaulted\" = yes && srcdir=\"$ac_confdir or ..\"\n  as_fn_error $? \"cannot find sources ($ac_unique_file) in $srcdir\"\nfi\nac_msg=\"sources are in $srcdir, but \\`cd $srcdir' does not work\"\nac_abs_confdir=`(\n\tcd \"$srcdir\" && test -r \"./$ac_unique_file\" || as_fn_error $? \"$ac_msg\"\n\tpwd)`\n# When building in place, set srcdir=.\nif test \"$ac_abs_confdir\" = \"$ac_pwd\"; then\n  srcdir=.\nfi\n# Remove unnecessary trailing slashes from srcdir.\n# Double slashes in file names in object file debugging info\n# mess up M-x gdb in Emacs.\ncase $srcdir in\n*/) srcdir=`expr \"X$srcdir\" : 'X\\(.*[^/]\\)' \\| \"X$srcdir\" : 'X\\(.*\\)'`;;\nesac\nfor ac_var in $ac_precious_vars; do\n  eval ac_env_${ac_var}_set=\\${${ac_var}+set}\n  eval ac_env_${ac_var}_value=\\$${ac_var}\n  eval ac_cv_env_${ac_var}_set=\\${${ac_var}+set}\n  eval ac_cv_env_${ac_var}_value=\\$${ac_var}\ndone\n\n#\n# Report the --help message.\n#\nif test \"$ac_init_help\" = \"long\"; then\n  # Omit some internal or obsolete options to make the list less imposing.\n  # This message is too long to be a string in the A/UX 3.1 sh.\n  cat <<_ACEOF\n\\`configure' configures this package to adapt to many kinds of systems.\n\nUsage: $0 [OPTION]... [VAR=VALUE]...\n\nTo assign environment variables (e.g., CC, CFLAGS...), specify them as\nVAR=VALUE.  See below for descriptions of some of the useful variables.\n\nDefaults for the options are specified in brackets.\n\nConfiguration:\n  -h, --help              display this help and exit\n      --help=short        display options specific to this package\n      --help=recursive    display the short help of all the included packages\n  -V, --version           display version information and exit\n  -q, --quiet, --silent   do not print \\`checking ...' messages\n      --cache-file=FILE   cache test results in FILE [disabled]\n  -C, --config-cache      alias for \\`--cache-file=config.cache'\n  -n, --no-create         do not create output files\n      --srcdir=DIR        find the sources in DIR [configure dir or \\`..']\n\nInstallation directories:\n  --prefix=PREFIX         install architecture-independent files in PREFIX\n                          [$ac_default_prefix]\n  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX\n                          [PREFIX]\n\nBy default, \\`make install' will install all the files in\n\\`$ac_default_prefix/bin', \\`$ac_default_prefix/lib' etc.  You can specify\nan installation prefix other than \\`$ac_default_prefix' using \\`--prefix',\nfor instance \\`--prefix=\\$HOME'.\n\nFor better control, use the options below.\n\nFine tuning of the installation directories:\n  --bindir=DIR            user executables [EPREFIX/bin]\n  --sbindir=DIR           system admin executables [EPREFIX/sbin]\n  --libexecdir=DIR        program executables [EPREFIX/libexec]\n  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n  --libdir=DIR            object code libraries [EPREFIX/lib]\n  --includedir=DIR        C header files [PREFIX/include]\n  --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]\n  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]\n  --infodir=DIR           info documentation [DATAROOTDIR/info]\n  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]\n  --mandir=DIR            man documentation [DATAROOTDIR/man]\n  --docdir=DIR            documentation root [DATAROOTDIR/doc/PACKAGE]\n  --htmldir=DIR           html documentation [DOCDIR]\n  --dvidir=DIR            dvi documentation [DOCDIR]\n  --pdfdir=DIR            pdf documentation [DOCDIR]\n  --psdir=DIR             ps documentation [DOCDIR]\n_ACEOF\n\n  cat <<\\_ACEOF\n\nSystem types:\n  --build=BUILD     configure for building on BUILD [guessed]\n  --host=HOST       cross-compile to build programs to run on HOST [BUILD]\n_ACEOF\nfi\n\nif test -n \"$ac_init_help\"; then\n\n  cat <<\\_ACEOF\n\nSome influential environment variables:\n  CC          C compiler command\n  CFLAGS      C compiler flags\n  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a\n              nonstandard directory <lib dir>\n  LIBS        libraries to pass to the linker, e.g. -l<library>\n  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if\n              you have headers in a nonstandard directory <include dir>\n  CPP         C preprocessor\n\nUse these variables to override the choices made by `configure' or to help\nit to find libraries and programs with nonstandard names/locations.\n\nReport bugs to the package provider.\n_ACEOF\nac_status=$?\nfi\n\nif test \"$ac_init_help\" = \"recursive\"; then\n  # If there are subdirs, report their specific --help.\n  for ac_dir in : $ac_subdirs_all; do test \"x$ac_dir\" = x: && continue\n    test -d \"$ac_dir\" ||\n      { cd \"$srcdir\" && ac_pwd=`pwd` && srcdir=. && test -d \"$ac_dir\"; } ||\n      continue\n    ac_builddir=.\n\ncase \"$ac_dir\" in\n.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;\n*)\n  ac_dir_suffix=/`$as_echo \"$ac_dir\" | sed 's|^\\.[\\\\/]||'`\n  # A \"..\" for each directory in $ac_dir_suffix.\n  ac_top_builddir_sub=`$as_echo \"$ac_dir_suffix\" | sed 's|/[^\\\\/]*|/..|g;s|/||'`\n  case $ac_top_builddir_sub in\n  \"\") ac_top_builddir_sub=. ac_top_build_prefix= ;;\n  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;\n  esac ;;\nesac\nac_abs_top_builddir=$ac_pwd\nac_abs_builddir=$ac_pwd$ac_dir_suffix\n# for backward compatibility:\nac_top_builddir=$ac_top_build_prefix\n\ncase $srcdir in\n  .)  # We are building in place.\n    ac_srcdir=.\n    ac_top_srcdir=$ac_top_builddir_sub\n    ac_abs_top_srcdir=$ac_pwd ;;\n  [\\\\/]* | ?:[\\\\/]* )  # Absolute name.\n    ac_srcdir=$srcdir$ac_dir_suffix;\n    ac_top_srcdir=$srcdir\n    ac_abs_top_srcdir=$srcdir ;;\n  *) # Relative name.\n    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix\n    ac_top_srcdir=$ac_top_build_prefix$srcdir\n    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;\nesac\nac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n\n    cd \"$ac_dir\" || { ac_status=$?; continue; }\n    # Check for guested configure.\n    if test -f \"$ac_srcdir/configure.gnu\"; then\n      echo &&\n      $SHELL \"$ac_srcdir/configure.gnu\" --help=recursive\n    elif test -f \"$ac_srcdir/configure\"; then\n      echo &&\n      $SHELL \"$ac_srcdir/configure\" --help=recursive\n    else\n      $as_echo \"$as_me: WARNING: no configuration information is in $ac_dir\" >&2\n    fi || ac_status=$?\n    cd \"$ac_pwd\" || { ac_status=$?; break; }\n  done\nfi\n\ntest -n \"$ac_init_help\" && exit $ac_status\nif $ac_init_version; then\n  cat <<\\_ACEOF\nconfigure\ngenerated by GNU Autoconf 2.69\n\nCopyright (C) 2012 Free Software Foundation, Inc.\nThis configure script is free software; the Free Software Foundation\ngives unlimited permission to copy, distribute and modify it.\n_ACEOF\n  exit\nfi\n\n## ------------------------ ##\n## Autoconf initialization. ##\n## ------------------------ ##\n\n# ac_fn_c_try_compile LINENO\n# --------------------------\n# Try to compile conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext\n  if { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest.$ac_objext; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_compile\n\n# ac_fn_c_try_cpp LINENO\n# ----------------------\n# Try to preprocess conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_cpp ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if { { ac_try=\"$ac_cpp conftest.$ac_ext\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_cpp conftest.$ac_ext\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } > conftest.i && {\n\t test -z \"$ac_c_preproc_warn_flag$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n    ac_retval=1\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_cpp\ncat >config.log <<_ACEOF\nThis file contains any messages produced by compilers while\nrunning configure, to aid debugging if configure makes a mistake.\n\nIt was created by $as_me, which was\ngenerated by GNU Autoconf 2.69.  Invocation command line was\n\n  $ $0 $@\n\n_ACEOF\nexec 5>>config.log\n{\ncat <<_ASUNAME\n## --------- ##\n## Platform. ##\n## --------- ##\n\nhostname = `(hostname || uname -n) 2>/dev/null | sed 1q`\nuname -m = `(uname -m) 2>/dev/null || echo unknown`\nuname -r = `(uname -r) 2>/dev/null || echo unknown`\nuname -s = `(uname -s) 2>/dev/null || echo unknown`\nuname -v = `(uname -v) 2>/dev/null || echo unknown`\n\n/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`\n/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`\n\n/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`\n/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`\n/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`\n/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`\n/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`\n/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`\n/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`\n\n_ASUNAME\n\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    $as_echo \"PATH: $as_dir\"\n  done\nIFS=$as_save_IFS\n\n} >&5\n\ncat >&5 <<_ACEOF\n\n\n## ----------- ##\n## Core tests. ##\n## ----------- ##\n\n_ACEOF\n\n\n# Keep a trace of the command line.\n# Strip out --no-create and --no-recursion so they do not pile up.\n# Strip out --silent because we don't want to record it for future runs.\n# Also quote any args containing shell meta-characters.\n# Make two passes to allow for proper duplicate-argument suppression.\nac_configure_args=\nac_configure_args0=\nac_configure_args1=\nac_must_keep_next=false\nfor ac_pass in 1 2\ndo\n  for ac_arg\n  do\n    case $ac_arg in\n    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;\n    -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n    | -silent | --silent | --silen | --sile | --sil)\n      continue ;;\n    *\\'*)\n      ac_arg=`$as_echo \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    esac\n    case $ac_pass in\n    1) as_fn_append ac_configure_args0 \" '$ac_arg'\" ;;\n    2)\n      as_fn_append ac_configure_args1 \" '$ac_arg'\"\n      if test $ac_must_keep_next = true; then\n\tac_must_keep_next=false # Got value, back to normal.\n      else\n\tcase $ac_arg in\n\t  *=* | --config-cache | -C | -disable-* | --disable-* \\\n\t  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \\\n\t  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \\\n\t  | -with-* | --with-* | -without-* | --without-* | --x)\n\t    case \"$ac_configure_args0 \" in\n\t      \"$ac_configure_args1\"*\" '$ac_arg' \"* ) continue ;;\n\t    esac\n\t    ;;\n\t  -* ) ac_must_keep_next=true ;;\n\tesac\n      fi\n      as_fn_append ac_configure_args \" '$ac_arg'\"\n      ;;\n    esac\n  done\ndone\n{ ac_configure_args0=; unset ac_configure_args0;}\n{ ac_configure_args1=; unset ac_configure_args1;}\n\n# When interrupted or exit'd, cleanup temporary files, and complete\n# config.log.  We remove comments because anyway the quotes in there\n# would cause problems or look ugly.\n# WARNING: Use '\\'' to represent an apostrophe within the trap.\n# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.\ntrap 'exit_status=$?\n  # Save into config.log some information that might help in debugging.\n  {\n    echo\n\n    $as_echo \"## ---------------- ##\n## Cache variables. ##\n## ---------------- ##\"\n    echo\n    # The following way of writing the cache mishandles newlines in values,\n(\n  for ac_var in `(set) 2>&1 | sed -n '\\''s/^\\([a-zA-Z_][a-zA-Z0-9_]*\\)=.*/\\1/p'\\''`; do\n    eval ac_val=\\$$ac_var\n    case $ac_val in #(\n    *${as_nl}*)\n      case $ac_var in #(\n      *_cv_*) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline\" >&5\n$as_echo \"$as_me: WARNING: cache variable $ac_var contains a newline\" >&2;} ;;\n      esac\n      case $ac_var in #(\n      _ | IFS | as_nl) ;; #(\n      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(\n      *) { eval $ac_var=; unset $ac_var;} ;;\n      esac ;;\n    esac\n  done\n  (set) 2>&1 |\n    case $as_nl`(ac_space='\\'' '\\''; set) 2>&1` in #(\n    *${as_nl}ac_space=\\ *)\n      sed -n \\\n\t\"s/'\\''/'\\''\\\\\\\\'\\'''\\''/g;\n\t  s/^\\\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\\\)=\\\\(.*\\\\)/\\\\1='\\''\\\\2'\\''/p\"\n      ;; #(\n    *)\n      sed -n \"/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p\"\n      ;;\n    esac |\n    sort\n)\n    echo\n\n    $as_echo \"## ----------------- ##\n## Output variables. ##\n## ----------------- ##\"\n    echo\n    for ac_var in $ac_subst_vars\n    do\n      eval ac_val=\\$$ac_var\n      case $ac_val in\n      *\\'\\''*) ac_val=`$as_echo \"$ac_val\" | sed \"s/'\\''/'\\''\\\\\\\\\\\\\\\\'\\'''\\''/g\"`;;\n      esac\n      $as_echo \"$ac_var='\\''$ac_val'\\''\"\n    done | sort\n    echo\n\n    if test -n \"$ac_subst_files\"; then\n      $as_echo \"## ------------------- ##\n## File substitutions. ##\n## ------------------- ##\"\n      echo\n      for ac_var in $ac_subst_files\n      do\n\teval ac_val=\\$$ac_var\n\tcase $ac_val in\n\t*\\'\\''*) ac_val=`$as_echo \"$ac_val\" | sed \"s/'\\''/'\\''\\\\\\\\\\\\\\\\'\\'''\\''/g\"`;;\n\tesac\n\t$as_echo \"$ac_var='\\''$ac_val'\\''\"\n      done | sort\n      echo\n    fi\n\n    if test -s confdefs.h; then\n      $as_echo \"## ----------- ##\n## confdefs.h. ##\n## ----------- ##\"\n      echo\n      cat confdefs.h\n      echo\n    fi\n    test \"$ac_signal\" != 0 &&\n      $as_echo \"$as_me: caught signal $ac_signal\"\n    $as_echo \"$as_me: exit $exit_status\"\n  } >&5\n  rm -f core *.core core.conftest.* &&\n    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&\n    exit $exit_status\n' 0\nfor ac_signal in 1 2 13 15; do\n  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal\ndone\nac_signal=0\n\n# confdefs.h avoids OS command line length limits that DEFS can exceed.\nrm -f -r conftest* confdefs.h\n\n$as_echo \"/* confdefs.h */\" > confdefs.h\n\n# Predefined preprocessor variables.\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_NAME \"$PACKAGE_NAME\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_TARNAME \"$PACKAGE_TARNAME\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_VERSION \"$PACKAGE_VERSION\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_STRING \"$PACKAGE_STRING\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_BUGREPORT \"$PACKAGE_BUGREPORT\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_URL \"$PACKAGE_URL\"\n_ACEOF\n\n\n# Let the site file select an alternate cache file if it wants to.\n# Prefer an explicitly selected file to automatically selected ones.\nac_site_file1=NONE\nac_site_file2=NONE\nif test -n \"$CONFIG_SITE\"; then\n  # We do not want a PATH search for config.site.\n  case $CONFIG_SITE in #((\n    -*)  ac_site_file1=./$CONFIG_SITE;;\n    */*) ac_site_file1=$CONFIG_SITE;;\n    *)   ac_site_file1=./$CONFIG_SITE;;\n  esac\nelif test \"x$prefix\" != xNONE; then\n  ac_site_file1=$prefix/share/config.site\n  ac_site_file2=$prefix/etc/config.site\nelse\n  ac_site_file1=$ac_default_prefix/share/config.site\n  ac_site_file2=$ac_default_prefix/etc/config.site\nfi\nfor ac_site_file in \"$ac_site_file1\" \"$ac_site_file2\"\ndo\n  test \"x$ac_site_file\" = xNONE && continue\n  if test /dev/null != \"$ac_site_file\" && test -r \"$ac_site_file\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file\" >&5\n$as_echo \"$as_me: loading site script $ac_site_file\" >&6;}\n    sed 's/^/| /' \"$ac_site_file\" >&5\n    . \"$ac_site_file\" \\\n      || { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"failed to load site script $ac_site_file\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n  fi\ndone\n\nif test -r \"$cache_file\"; then\n  # Some versions of bash will fail to source /dev/null (special files\n  # actually), so we avoid doing that.  DJGPP emulates it as a regular file.\n  if test /dev/null != \"$cache_file\" && test -f \"$cache_file\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: loading cache $cache_file\" >&5\n$as_echo \"$as_me: loading cache $cache_file\" >&6;}\n    case $cache_file in\n      [\\\\/]* | ?:[\\\\/]* ) . \"$cache_file\";;\n      *)                      . \"./$cache_file\";;\n    esac\n  fi\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: creating cache $cache_file\" >&5\n$as_echo \"$as_me: creating cache $cache_file\" >&6;}\n  >$cache_file\nfi\n\n# Check that the precious variables saved in the cache have kept the same\n# value.\nac_cache_corrupted=false\nfor ac_var in $ac_precious_vars; do\n  eval ac_old_set=\\$ac_cv_env_${ac_var}_set\n  eval ac_new_set=\\$ac_env_${ac_var}_set\n  eval ac_old_val=\\$ac_cv_env_${ac_var}_value\n  eval ac_new_val=\\$ac_env_${ac_var}_value\n  case $ac_old_set,$ac_new_set in\n    set,)\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: error: \\`$ac_var' was set to \\`$ac_old_val' in the previous run\" >&5\n$as_echo \"$as_me: error: \\`$ac_var' was set to \\`$ac_old_val' in the previous run\" >&2;}\n      ac_cache_corrupted=: ;;\n    ,set)\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: error: \\`$ac_var' was not set in the previous run\" >&5\n$as_echo \"$as_me: error: \\`$ac_var' was not set in the previous run\" >&2;}\n      ac_cache_corrupted=: ;;\n    ,);;\n    *)\n      if test \"x$ac_old_val\" != \"x$ac_new_val\"; then\n\t# differences in whitespace do not lead to failure.\n\tac_old_val_w=`echo x $ac_old_val`\n\tac_new_val_w=`echo x $ac_new_val`\n\tif test \"$ac_old_val_w\" != \"$ac_new_val_w\"; then\n\t  { $as_echo \"$as_me:${as_lineno-$LINENO}: error: \\`$ac_var' has changed since the previous run:\" >&5\n$as_echo \"$as_me: error: \\`$ac_var' has changed since the previous run:\" >&2;}\n\t  ac_cache_corrupted=:\n\telse\n\t  { $as_echo \"$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in \\`$ac_var' since the previous run:\" >&5\n$as_echo \"$as_me: warning: ignoring whitespace changes in \\`$ac_var' since the previous run:\" >&2;}\n\t  eval $ac_var=\\$ac_old_val\n\tfi\n\t{ $as_echo \"$as_me:${as_lineno-$LINENO}:   former value:  \\`$ac_old_val'\" >&5\n$as_echo \"$as_me:   former value:  \\`$ac_old_val'\" >&2;}\n\t{ $as_echo \"$as_me:${as_lineno-$LINENO}:   current value: \\`$ac_new_val'\" >&5\n$as_echo \"$as_me:   current value: \\`$ac_new_val'\" >&2;}\n      fi;;\n  esac\n  # Pass precious variables to config.status.\n  if test \"$ac_new_set\" = set; then\n    case $ac_new_val in\n    *\\'*) ac_arg=$ac_var=`$as_echo \"$ac_new_val\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    *) ac_arg=$ac_var=$ac_new_val ;;\n    esac\n    case \" $ac_configure_args \" in\n      *\" '$ac_arg' \"*) ;; # Avoid dups.  Use of quotes ensures accuracy.\n      *) as_fn_append ac_configure_args \" '$ac_arg'\" ;;\n    esac\n  fi\ndone\nif $ac_cache_corrupted; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build\" >&5\n$as_echo \"$as_me: error: changes in the environment can compromise the build\" >&2;}\n  as_fn_error $? \"run \\`make distclean' and/or \\`rm $cache_file' and start over\" \"$LINENO\" 5\nfi\n## -------------------- ##\n## Main body of script. ##\n## -------------------- ##\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\nac_aux_dir=\nfor ac_dir in support \"$srcdir\"/support; do\n  if test -f \"$ac_dir/install-sh\"; then\n    ac_aux_dir=$ac_dir\n    ac_install_sh=\"$ac_aux_dir/install-sh -c\"\n    break\n  elif test -f \"$ac_dir/install.sh\"; then\n    ac_aux_dir=$ac_dir\n    ac_install_sh=\"$ac_aux_dir/install.sh -c\"\n    break\n  elif test -f \"$ac_dir/shtool\"; then\n    ac_aux_dir=$ac_dir\n    ac_install_sh=\"$ac_aux_dir/shtool install -c\"\n    break\n  fi\ndone\nif test -z \"$ac_aux_dir\"; then\n  as_fn_error $? \"cannot find install-sh, install.sh, or shtool in support \\\"$srcdir\\\"/support\" \"$LINENO\" 5\nfi\n\n# These three variables are undocumented and unsupported,\n# and are intended to be withdrawn in a future Autoconf release.\n# They can cause serious problems if a builder's source tree is in a directory\n# whose full name contains unusual characters.\nac_config_guess=\"$SHELL $ac_aux_dir/config.guess\"  # Please don't use this var.\nac_config_sub=\"$SHELL $ac_aux_dir/config.sub\"  # Please don't use this var.\nac_configure=\"$SHELL $ac_aux_dir/configure\"  # Please don't use this var.\n\n\n\n\nsubdirs=\"$subdirs adintool mkgshmm gramtools jcontrol mkbingram julius libjulius libsent\"\n\n\n\n# Make sure we can run config.sub.\n$SHELL \"$ac_aux_dir/config.sub\" sun4 >/dev/null 2>&1 ||\n  as_fn_error $? \"cannot run $SHELL $ac_aux_dir/config.sub\" \"$LINENO\" 5\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking build system type\" >&5\n$as_echo_n \"checking build system type... \" >&6; }\nif ${ac_cv_build+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_build_alias=$build_alias\ntest \"x$ac_build_alias\" = x &&\n  ac_build_alias=`$SHELL \"$ac_aux_dir/config.guess\"`\ntest \"x$ac_build_alias\" = x &&\n  as_fn_error $? \"cannot guess build type; you must specify one\" \"$LINENO\" 5\nac_cv_build=`$SHELL \"$ac_aux_dir/config.sub\" $ac_build_alias` ||\n  as_fn_error $? \"$SHELL $ac_aux_dir/config.sub $ac_build_alias failed\" \"$LINENO\" 5\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_build\" >&5\n$as_echo \"$ac_cv_build\" >&6; }\ncase $ac_cv_build in\n*-*-*) ;;\n*) as_fn_error $? \"invalid value of canonical build\" \"$LINENO\" 5;;\nesac\nbuild=$ac_cv_build\nac_save_IFS=$IFS; IFS='-'\nset x $ac_cv_build\nshift\nbuild_cpu=$1\nbuild_vendor=$2\nshift; shift\n# Remember, the first character of IFS is used to create $*,\n# except with old shells:\nbuild_os=$*\nIFS=$ac_save_IFS\ncase $build_os in *\\ *) build_os=`echo \"$build_os\" | sed 's/ /-/g'`;; esac\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking host system type\" >&5\n$as_echo_n \"checking host system type... \" >&6; }\nif ${ac_cv_host+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test \"x$host_alias\" = x; then\n  ac_cv_host=$ac_cv_build\nelse\n  ac_cv_host=`$SHELL \"$ac_aux_dir/config.sub\" $host_alias` ||\n    as_fn_error $? \"$SHELL $ac_aux_dir/config.sub $host_alias failed\" \"$LINENO\" 5\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_host\" >&5\n$as_echo \"$ac_cv_host\" >&6; }\ncase $ac_cv_host in\n*-*-*) ;;\n*) as_fn_error $? \"invalid value of canonical host\" \"$LINENO\" 5;;\nesac\nhost=$ac_cv_host\nac_save_IFS=$IFS; IFS='-'\nset x $ac_cv_host\nshift\nhost_cpu=$1\nhost_vendor=$2\nshift; shift\n# Remember, the first character of IFS is used to create $*,\n# except with old shells:\nhost_os=$*\nIFS=$ac_save_IFS\ncase $host_os in *\\ *) host_os=`echo \"$host_os\" | sed 's/ /-/g'`;; esac\n\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking host specific optimization flag\" >&5\n$as_echo_n \"checking host specific optimization flag... \" >&6; }\nif test -z \"$CFLAGS\" ; then\n    OPTFLAG=support/cflags.${host_cpu}-${host_vendor}-${host_os}\n    if test -f \"$OPTFLAG\" ; then\n\t. $OPTFLAG\n\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $OPTFLAG\" >&5\n$as_echo \"$OPTFLAG\" >&6; }\n    else\n\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\n    fi\nelse\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: skipped\" >&5\n$as_echo \"skipped\" >&6; }\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}gcc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}gcc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}gcc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_CC\"; then\n  ac_ct_CC=$CC\n  # Extract the first word of \"gcc\", so it can be a program name with args.\nset dummy gcc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"gcc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\n$as_echo \"$ac_ct_CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nelse\n  CC=\"$ac_cv_prog_CC\"\nfi\n\nif test -z \"$CC\"; then\n          if test -n \"$ac_tool_prefix\"; then\n    # Extract the first word of \"${ac_tool_prefix}cc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}cc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}cc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  fi\nfi\nif test -z \"$CC\"; then\n  # Extract the first word of \"cc\", so it can be a program name with args.\nset dummy cc; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\n  ac_prog_rejected=no\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    if test \"$as_dir/$ac_word$ac_exec_ext\" = \"/usr/ucb/cc\"; then\n       ac_prog_rejected=yes\n       continue\n     fi\n    ac_cv_prog_CC=\"cc\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nif test $ac_prog_rejected = yes; then\n  # We found a bogon in the path, so make sure we never use it.\n  set dummy $ac_cv_prog_CC\n  shift\n  if test $# != 0; then\n    # We chose a different compiler from the bogus one.\n    # However, it has the same basename, so the bogon will be chosen\n    # first if we set CC to just the basename; use the full file name.\n    shift\n    ac_cv_prog_CC=\"$as_dir/$ac_word${1+' '}$@\"\n  fi\nfi\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$CC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n  for ac_prog in cl.exe\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$CC\" && break\n  done\nfi\nif test -z \"$CC\"; then\n  ac_ct_CC=$CC\n  for ac_prog in cl.exe\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\n$as_echo \"$ac_ct_CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_CC\" && break\ndone\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nfi\n\nfi\n\n\ntest -z \"$CC\" && { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"no acceptable C compiler found in \\$PATH\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n\n# Provide some information about the compiler.\n$as_echo \"$as_me:${as_lineno-$LINENO}: checking for C compiler version\" >&5\nset X $ac_compile\nac_compiler=$2\nfor ac_option in --version -v -V -qversion; do\n  { { ac_try=\"$ac_compiler $ac_option >&5\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compiler $ac_option >&5\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    sed '10a\\\n... rest of stderr output deleted ...\n         10q' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n  fi\n  rm -f conftest.er1 conftest.err\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\ndone\n\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nac_clean_files_save=$ac_clean_files\nac_clean_files=\"$ac_clean_files a.out a.out.dSYM a.exe b.out\"\n# Try to create an executable without -o first, disregard a.out.\n# It will help us diagnose broken compilers, and finding out an intuition\n# of exeext.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C compiler works\" >&5\n$as_echo_n \"checking whether the C compiler works... \" >&6; }\nac_link_default=`$as_echo \"$ac_link\" | sed 's/ -o *conftest[^ ]*//'`\n\n# The possible output files:\nac_files=\"a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*\"\n\nac_rmfiles=\nfor ac_file in $ac_files\ndo\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;\n    * ) ac_rmfiles=\"$ac_rmfiles $ac_file\";;\n  esac\ndone\nrm -f $ac_rmfiles\n\nif { { ac_try=\"$ac_link_default\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link_default\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then :\n  # Autoconf-2.13 could set the ac_cv_exeext variable to `no'.\n# So ignore a value of `no', otherwise this would lead to `EXEEXT = no'\n# in a Makefile.  We should not override ac_cv_exeext if it was cached,\n# so that the user can short-circuit this test for compilers unknown to\n# Autoconf.\nfor ac_file in $ac_files ''\ndo\n  test -f \"$ac_file\" || continue\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )\n\t;;\n    [ab].out )\n\t# We found the default executable, but exeext='' is most\n\t# certainly right.\n\tbreak;;\n    *.* )\n\tif test \"${ac_cv_exeext+set}\" = set && test \"$ac_cv_exeext\" != no;\n\tthen :; else\n\t   ac_cv_exeext=`expr \"$ac_file\" : '[^.]*\\(\\..*\\)'`\n\tfi\n\t# We set ac_cv_exeext here because the later test for it is not\n\t# safe: cross compilers may not add the suffix if given an `-o'\n\t# argument, so we may need to know it at that point already.\n\t# Even if this section looks crufty: it has the advantage of\n\t# actually working.\n\tbreak;;\n    * )\n\tbreak;;\n  esac\ndone\ntest \"$ac_cv_exeext\" = no && ac_cv_exeext=\n\nelse\n  ac_file=''\nfi\nif test -z \"$ac_file\"; then :\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\n$as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n{ { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error 77 \"C compiler cannot create executables\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name\" >&5\n$as_echo_n \"checking for C compiler default output file name... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_file\" >&5\n$as_echo \"$ac_file\" >&6; }\nac_exeext=$ac_cv_exeext\n\nrm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out\nac_clean_files=$ac_clean_files_save\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for suffix of executables\" >&5\n$as_echo_n \"checking for suffix of executables... \" >&6; }\nif { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then :\n  # If both `conftest.exe' and `conftest' are `present' (well, observable)\n# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will\n# work properly (i.e., refer to `conftest.exe'), while it won't with\n# `rm'.\nfor ac_file in conftest.exe conftest conftest.*; do\n  test -f \"$ac_file\" || continue\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;\n    *.* ) ac_cv_exeext=`expr \"$ac_file\" : '[^.]*\\(\\..*\\)'`\n\t  break;;\n    * ) break;;\n  esac\ndone\nelse\n  { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot compute suffix of executables: cannot compile and link\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\nrm -f conftest conftest$ac_cv_exeext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext\" >&5\n$as_echo \"$ac_cv_exeext\" >&6; }\n\nrm -f conftest.$ac_ext\nEXEEXT=$ac_cv_exeext\nac_exeext=$EXEEXT\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdio.h>\nint\nmain ()\n{\nFILE *f = fopen (\"conftest.out\", \"w\");\n return ferror (f) || fclose (f) != 0;\n\n  ;\n  return 0;\n}\n_ACEOF\nac_clean_files=\"$ac_clean_files conftest.out\"\n# Check that the compiler produces executables we can run.  If not, either\n# the compiler is broken, or we cross compile.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling\" >&5\n$as_echo_n \"checking whether we are cross compiling... \" >&6; }\nif test \"$cross_compiling\" != yes; then\n  { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n  if { ac_try='./conftest$ac_cv_exeext'\n  { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; }; then\n    cross_compiling=no\n  else\n    if test \"$cross_compiling\" = maybe; then\n\tcross_compiling=yes\n    else\n\t{ { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot run C compiled programs.\nIf you meant to cross compile, use \\`--host'.\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n    fi\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $cross_compiling\" >&5\n$as_echo \"$cross_compiling\" >&6; }\n\nrm -f conftest.$ac_ext conftest$ac_cv_exeext conftest.out\nac_clean_files=$ac_clean_files_save\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for suffix of object files\" >&5\n$as_echo_n \"checking for suffix of object files... \" >&6; }\nif ${ac_cv_objext+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nrm -f conftest.o conftest.obj\nif { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then :\n  for ac_file in conftest.o conftest.obj conftest.*; do\n  test -f \"$ac_file\" || continue;\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;\n    *) ac_cv_objext=`expr \"$ac_file\" : '.*\\.\\(.*\\)'`\n       break;;\n  esac\ndone\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n{ { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot compute suffix of object files: cannot compile\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\nrm -f conftest.$ac_cv_objext conftest.$ac_ext\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext\" >&5\n$as_echo \"$ac_cv_objext\" >&6; }\nOBJEXT=$ac_cv_objext\nac_objext=$OBJEXT\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler\" >&5\n$as_echo_n \"checking whether we are using the GNU C compiler... \" >&6; }\nif ${ac_cv_c_compiler_gnu+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n#ifndef __GNUC__\n       choke me\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_compiler_gnu=yes\nelse\n  ac_compiler_gnu=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_cv_c_compiler_gnu=$ac_compiler_gnu\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu\" >&5\n$as_echo \"$ac_cv_c_compiler_gnu\" >&6; }\nif test $ac_compiler_gnu = yes; then\n  GCC=yes\nelse\n  GCC=\nfi\nac_test_CFLAGS=${CFLAGS+set}\nac_save_CFLAGS=$CFLAGS\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g\" >&5\n$as_echo_n \"checking whether $CC accepts -g... \" >&6; }\nif ${ac_cv_prog_cc_g+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_save_c_werror_flag=$ac_c_werror_flag\n   ac_c_werror_flag=yes\n   ac_cv_prog_cc_g=no\n   CFLAGS=\"-g\"\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_g=yes\nelse\n  CFLAGS=\"\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\nelse\n  ac_c_werror_flag=$ac_save_c_werror_flag\n\t CFLAGS=\"-g\"\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_g=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   ac_c_werror_flag=$ac_save_c_werror_flag\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g\" >&5\n$as_echo \"$ac_cv_prog_cc_g\" >&6; }\nif test \"$ac_test_CFLAGS\" = set; then\n  CFLAGS=$ac_save_CFLAGS\nelif test $ac_cv_prog_cc_g = yes; then\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-g -O2\"\n  else\n    CFLAGS=\"-g\"\n  fi\nelse\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-O2\"\n  else\n    CFLAGS=\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89\" >&5\n$as_echo_n \"checking for $CC option to accept ISO C89... \" >&6; }\nif ${ac_cv_prog_cc_c89+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_cv_prog_cc_c89=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdarg.h>\n#include <stdio.h>\nstruct stat;\n/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */\nstruct buf { int x; };\nFILE * (*rcsopen) (struct buf *, struct stat *, int);\nstatic char *e (p, i)\n     char **p;\n     int i;\n{\n  return p[i];\n}\nstatic char *f (char * (*g) (char **, int), char **p, ...)\n{\n  char *s;\n  va_list v;\n  va_start (v,p);\n  s = g (p, va_arg (v,int));\n  va_end (v);\n  return s;\n}\n\n/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has\n   function prototypes and stuff, but not '\\xHH' hex character constants.\n   These don't provoke an error unfortunately, instead are silently treated\n   as 'x'.  The following induces an error, until -std is added to get\n   proper ANSI mode.  Curiously '\\x00'!='x' always comes out true, for an\n   array size at least.  It's necessary to write '\\x00'==0 to get something\n   that's true only with -std.  */\nint osf4_cc_array ['\\x00' == 0 ? 1 : -1];\n\n/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters\n   inside strings and character constants.  */\n#define FOO(x) 'x'\nint xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];\n\nint test (int i, double x);\nstruct s1 {int (*f) (int a);};\nstruct s2 {int (*f) (double a);};\nint pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);\nint argc;\nchar **argv;\nint\nmain ()\n{\nreturn f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];\n  ;\n  return 0;\n}\n_ACEOF\nfor ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \\\n\t-Ae \"-Aa -D_HPUX_SOURCE\" \"-Xc -D__EXTENSIONS__\"\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_c89=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext\n  test \"x$ac_cv_prog_cc_c89\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC\n\nfi\n# AC_CACHE_VAL\ncase \"x$ac_cv_prog_cc_c89\" in\n  x)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\n$as_echo \"none needed\" >&6; } ;;\n  xno)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\n$as_echo \"unsupported\" >&6; } ;;\n  *)\n    CC=\"$CC $ac_cv_prog_cc_c89\"\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89\" >&5\n$as_echo \"$ac_cv_prog_cc_c89\" >&6; } ;;\nesac\nif test \"x$ac_cv_prog_cc_c89\" != xno; then :\n\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor\" >&5\n$as_echo_n \"checking how to run the C preprocessor... \" >&6; }\n# On Suns, sometimes $CPP names a directory.\nif test -n \"$CPP\" && test -d \"$CPP\"; then\n  CPP=\nfi\nif test -z \"$CPP\"; then\n  if ${ac_cv_prog_CPP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n      # Double quotes because CPP needs to be expanded\n    for CPP in \"$CC -E\" \"$CC -E -traditional-cpp\" \"/lib/cpp\"\n    do\n      ac_preproc_ok=false\nfor ac_c_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n  # <limits.h> exists even on freestanding compilers.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\t\t     Syntax error\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n\nelse\n  # Broken: fails on valid input.\ncontinue\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n  # Broken: success on invalid input.\ncontinue\nelse\n  # Passes both tests.\nac_preproc_ok=:\nbreak\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok; then :\n  break\nfi\n\n    done\n    ac_cv_prog_CPP=$CPP\n\nfi\n  CPP=$ac_cv_prog_CPP\nelse\n  ac_cv_prog_CPP=$CPP\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CPP\" >&5\n$as_echo \"$CPP\" >&6; }\nac_preproc_ok=false\nfor ac_c_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n  # <limits.h> exists even on freestanding compilers.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\t\t     Syntax error\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n\nelse\n  # Broken: fails on valid input.\ncontinue\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n  # Broken: success on invalid input.\ncontinue\nelse\n  # Passes both tests.\nac_preproc_ok=:\nbreak\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok; then :\n\nelse\n  { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"C preprocessor \\\"$CPP\\\" fails sanity check\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n# Find a good install program.  We prefer a C program (faster),\n# so one script is as good as another.  But avoid the broken or\n# incompatible versions:\n# SysV /etc/install, /usr/sbin/install\n# SunOS /usr/etc/install\n# IRIX /sbin/install\n# AIX /bin/install\n# AmigaOS /C/install, which installs bootblocks on floppy discs\n# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag\n# AFS /usr/afsws/bin/install, which mishandles nonexistent args\n# SVR4 /usr/ucb/install, which tries to use the nonexistent group \"staff\"\n# OS/2's system install, which has a completely different semantic\n# ./install, which can be erroneously created by make from ./install.sh.\n# Reject install programs that cannot install multiple files.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for a BSD-compatible install\" >&5\n$as_echo_n \"checking for a BSD-compatible install... \" >&6; }\nif test -z \"$INSTALL\"; then\nif ${ac_cv_path_install+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    # Account for people who put trailing slashes in PATH elements.\ncase $as_dir/ in #((\n  ./ | .// | /[cC]/* | \\\n  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \\\n  ?:[\\\\/]os2[\\\\/]install[\\\\/]* | ?:[\\\\/]OS2[\\\\/]INSTALL[\\\\/]* | \\\n  /usr/ucb/* ) ;;\n  *)\n    # OSF1 and SCO ODT 3.0 have their own names for install.\n    # Don't use installbsd from OSF since it installs stuff as root\n    # by default.\n    for ac_prog in ginstall scoinst install; do\n      for ac_exec_ext in '' $ac_executable_extensions; do\n\tif as_fn_executable_p \"$as_dir/$ac_prog$ac_exec_ext\"; then\n\t  if test $ac_prog = install &&\n\t    grep dspmsg \"$as_dir/$ac_prog$ac_exec_ext\" >/dev/null 2>&1; then\n\t    # AIX install.  It has an incompatible calling convention.\n\t    :\n\t  elif test $ac_prog = install &&\n\t    grep pwplus \"$as_dir/$ac_prog$ac_exec_ext\" >/dev/null 2>&1; then\n\t    # program-specific install script used by HP pwplus--don't use.\n\t    :\n\t  else\n\t    rm -rf conftest.one conftest.two conftest.dir\n\t    echo one > conftest.one\n\t    echo two > conftest.two\n\t    mkdir conftest.dir\n\t    if \"$as_dir/$ac_prog$ac_exec_ext\" -c conftest.one conftest.two \"`pwd`/conftest.dir\" &&\n\t      test -s conftest.one && test -s conftest.two &&\n\t      test -s conftest.dir/conftest.one &&\n\t      test -s conftest.dir/conftest.two\n\t    then\n\t      ac_cv_path_install=\"$as_dir/$ac_prog$ac_exec_ext -c\"\n\t      break 3\n\t    fi\n\t  fi\n\tfi\n      done\n    done\n    ;;\nesac\n\n  done\nIFS=$as_save_IFS\n\nrm -rf conftest.one conftest.two conftest.dir\n\nfi\n  if test \"${ac_cv_path_install+set}\" = set; then\n    INSTALL=$ac_cv_path_install\n  else\n    # As a last resort, use the slow shell script.  Don't cache a\n    # value for INSTALL within a source directory, because that will\n    # break other packages using the cache if that directory is\n    # removed, or if the value is a relative name.\n    INSTALL=$ac_install_sh\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $INSTALL\" >&5\n$as_echo \"$INSTALL\" >&6; }\n\n# Use test -z because SunOS4 sh mishandles braces in ${var-val}.\n# It thinks the first close brace ends the variable substitution.\ntest -z \"$INSTALL_PROGRAM\" && INSTALL_PROGRAM='${INSTALL}'\n\ntest -z \"$INSTALL_SCRIPT\" && INSTALL_SCRIPT='${INSTALL}'\n\ntest -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n\n# Extract the first word of \"rm\", so it can be a program name with args.\nset dummy rm; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_path_RM+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  case $RM in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_RM=\"$RM\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_path_RM=\"$as_dir/$ac_word$ac_exec_ext\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  ;;\nesac\nfi\nRM=$ac_cv_path_RM\nif test -n \"$RM\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $RM\" >&5\n$as_echo \"$RM\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n\n\nac_config_files=\"$ac_config_files Makefile mkbinhmm/Makefile adinrec/Makefile mkss/Makefile generate-ngram/Makefile jclient-perl/Makefile binlm2arpa/Makefile\"\n\ncat >confcache <<\\_ACEOF\n# This file is a shell script that caches the results of configure\n# tests run on this system so they can be shared between configure\n# scripts and configure runs, see configure's option --config-cache.\n# It is not useful on other systems.  If it contains results you don't\n# want to keep, you may remove or edit it.\n#\n# config.status only pays attention to the cache file if you give it\n# the --recheck option to rerun configure.\n#\n# `ac_cv_env_foo' variables (set or unset) will be overridden when\n# loading this file, other *unset* `ac_cv_foo' will be assigned the\n# following values.\n\n_ACEOF\n\n# The following way of writing the cache mishandles newlines in values,\n# but we know of no workaround that is simple, portable, and efficient.\n# So, we kill variables containing newlines.\n# Ultrix sh set writes to stderr and can't be redirected directly,\n# and sets the high bit in the cache file unless we assign to the vars.\n(\n  for ac_var in `(set) 2>&1 | sed -n 's/^\\([a-zA-Z_][a-zA-Z0-9_]*\\)=.*/\\1/p'`; do\n    eval ac_val=\\$$ac_var\n    case $ac_val in #(\n    *${as_nl}*)\n      case $ac_var in #(\n      *_cv_*) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline\" >&5\n$as_echo \"$as_me: WARNING: cache variable $ac_var contains a newline\" >&2;} ;;\n      esac\n      case $ac_var in #(\n      _ | IFS | as_nl) ;; #(\n      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(\n      *) { eval $ac_var=; unset $ac_var;} ;;\n      esac ;;\n    esac\n  done\n\n  (set) 2>&1 |\n    case $as_nl`(ac_space=' '; set) 2>&1` in #(\n    *${as_nl}ac_space=\\ *)\n      # `set' does not quote correctly, so add quotes: double-quote\n      # substitution turns \\\\\\\\ into \\\\, and sed turns \\\\ into \\.\n      sed -n \\\n\t\"s/'/'\\\\\\\\''/g;\n\t  s/^\\\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\\\)=\\\\(.*\\\\)/\\\\1='\\\\2'/p\"\n      ;; #(\n    *)\n      # `set' quotes correctly as required by POSIX, so do not add quotes.\n      sed -n \"/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p\"\n      ;;\n    esac |\n    sort\n) |\n  sed '\n     /^ac_cv_env_/b end\n     t clear\n     :clear\n     s/^\\([^=]*\\)=\\(.*[{}].*\\)$/test \"${\\1+set}\" = set || &/\n     t end\n     s/^\\([^=]*\\)=\\(.*\\)$/\\1=${\\1=\\2}/\n     :end' >>confcache\nif diff \"$cache_file\" confcache >/dev/null 2>&1; then :; else\n  if test -w \"$cache_file\"; then\n    if test \"x$cache_file\" != \"x/dev/null\"; then\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: updating cache $cache_file\" >&5\n$as_echo \"$as_me: updating cache $cache_file\" >&6;}\n      if test ! -f \"$cache_file\" || test -h \"$cache_file\"; then\n\tcat confcache >\"$cache_file\"\n      else\n        case $cache_file in #(\n        */* | ?:*)\n\t  mv -f confcache \"$cache_file\"$$ &&\n\t  mv -f \"$cache_file\"$$ \"$cache_file\" ;; #(\n        *)\n\t  mv -f confcache \"$cache_file\" ;;\n\tesac\n      fi\n    fi\n  else\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file\" >&5\n$as_echo \"$as_me: not updating unwritable cache $cache_file\" >&6;}\n  fi\nfi\nrm -f confcache\n\ntest \"x$prefix\" = xNONE && prefix=$ac_default_prefix\n# Let make expand exec_prefix.\ntest \"x$exec_prefix\" = xNONE && exec_prefix='${prefix}'\n\n# Transform confdefs.h into DEFS.\n# Protect against shell expansion while executing Makefile rules.\n# Protect against Makefile macro expansion.\n#\n# If the first sed substitution is executed (which looks for macros that\n# take arguments), then branch to the quote section.  Otherwise,\n# look for a macro that doesn't take arguments.\nac_script='\n:mline\n/\\\\$/{\n N\n s,\\\\\\n,,\n b mline\n}\nt clear\n:clear\ns/^[\t ]*#[\t ]*define[\t ][\t ]*\\([^\t (][^\t (]*([^)]*)\\)[\t ]*\\(.*\\)/-D\\1=\\2/g\nt quote\ns/^[\t ]*#[\t ]*define[\t ][\t ]*\\([^\t ][^\t ]*\\)[\t ]*\\(.*\\)/-D\\1=\\2/g\nt quote\nb any\n:quote\ns/[\t `~#$^&*(){}\\\\|;'\\''\"<>?]/\\\\&/g\ns/\\[/\\\\&/g\ns/\\]/\\\\&/g\ns/\\$/$$/g\nH\n:any\n${\n\tg\n\ts/^\\n//\n\ts/\\n/ /g\n\tp\n}\n'\nDEFS=`sed -n \"$ac_script\" confdefs.h`\n\n\nac_libobjs=\nac_ltlibobjs=\nU=\nfor ac_i in : $LIBOBJS; do test \"x$ac_i\" = x: && continue\n  # 1. Remove the extension, and $U if already installed.\n  ac_script='s/\\$U\\././;s/\\.o$//;s/\\.obj$//'\n  ac_i=`$as_echo \"$ac_i\" | sed \"$ac_script\"`\n  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR\n  #    will be set to the directory where LIBOBJS objects are built.\n  as_fn_append ac_libobjs \" \\${LIBOBJDIR}$ac_i\\$U.$ac_objext\"\n  as_fn_append ac_ltlibobjs \" \\${LIBOBJDIR}$ac_i\"'$U.lo'\ndone\nLIBOBJS=$ac_libobjs\n\nLTLIBOBJS=$ac_ltlibobjs\n\n\n\n: \"${CONFIG_STATUS=./config.status}\"\nac_write_fail=0\nac_clean_files_save=$ac_clean_files\nac_clean_files=\"$ac_clean_files $CONFIG_STATUS\"\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS\" >&5\n$as_echo \"$as_me: creating $CONFIG_STATUS\" >&6;}\nas_write_fail=0\ncat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n# Run this file to recreate the current configuration.\n# Compiler output produced by configure, useful for debugging\n# configure, is in config.log if it exists.\n\ndebug=false\nac_cs_recheck=false\nac_cs_silent=false\n\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$CONFIG_STATUS <<\\_ASEOF || as_write_fail=1\n## -------------------- ##\n## M4sh Initialization. ##\n## -------------------- ##\n\n# Be more Bourne compatible\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac\nfi\n\n\nas_nl='\n'\nexport as_nl\n# Printing a long string crashes Solaris 7 /usr/bin/printf.\nas_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo\n# Prefer a ksh shell builtin over an external printf program on Solaris,\n# but without wasting forks for bash or zsh.\nif test -z \"$BASH_VERSION$ZSH_VERSION\" \\\n    && (test \"X`print -r -- $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='print -r --'\n  as_echo_n='print -rn --'\nelif (test \"X`printf %s $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='printf %s\\n'\n  as_echo_n='printf %s'\nelse\n  if test \"X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`\" = \"X-n $as_echo\"; then\n    as_echo_body='eval /usr/ucb/echo -n \"$1$as_nl\"'\n    as_echo_n='/usr/ucb/echo -n'\n  else\n    as_echo_body='eval expr \"X$1\" : \"X\\\\(.*\\\\)\"'\n    as_echo_n_body='eval\n      arg=$1;\n      case $arg in #(\n      *\"$as_nl\"*)\n\texpr \"X$arg\" : \"X\\\\(.*\\\\)$as_nl\";\n\targ=`expr \"X$arg\" : \".*$as_nl\\\\(.*\\\\)\"`;;\n      esac;\n      expr \"X$arg\" : \"X\\\\(.*\\\\)\" | tr -d \"$as_nl\"\n    '\n    export as_echo_n_body\n    as_echo_n='sh -c $as_echo_n_body as_echo'\n  fi\n  export as_echo_body\n  as_echo='sh -c $as_echo_body as_echo'\nfi\n\n# The user is always right.\nif test \"${PATH_SEPARATOR+set}\" != set; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n# IFS\n# We need space, tab and new line, in precisely that order.  Quoting is\n# there to prevent editors from complaining about space-tab.\n# (If _AS_PATH_WALK were called with IFS unset, it would disable word\n# splitting by setting IFS to empty value.)\nIFS=\" \"\"\t$as_nl\"\n\n# Find who we are.  Look in the path if we contain no directory separator.\nas_myself=\ncase $0 in #((\n  *[\\\\/]* ) as_myself=$0 ;;\n  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    test -r \"$as_dir/$0\" && as_myself=$as_dir/$0 && break\n  done\nIFS=$as_save_IFS\n\n     ;;\nesac\n# We did not find ourselves, most probably we were run as `sh COMMAND'\n# in which case we are not to be found in the path.\nif test \"x$as_myself\" = x; then\n  as_myself=$0\nfi\nif test ! -f \"$as_myself\"; then\n  $as_echo \"$as_myself: error: cannot find myself; rerun with an absolute file name\" >&2\n  exit 1\nfi\n\n# Unset variables that we do not need and which cause bugs (e.g. in\n# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the \"|| exit 1\"\n# suppresses any \"Segmentation fault\" message there.  '((' could\n# trigger a bug in pdksh 5.2.14.\nfor as_var in BASH_ENV ENV MAIL MAILPATH\ndo eval test x\\${$as_var+set} = xset \\\n  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :\ndone\nPS1='$ '\nPS2='> '\nPS4='+ '\n\n# NLS nuisances.\nLC_ALL=C\nexport LC_ALL\nLANGUAGE=C\nexport LANGUAGE\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n\n# as_fn_error STATUS ERROR [LINENO LOG_FD]\n# ----------------------------------------\n# Output \"`basename $0`: error: ERROR\" to stderr. If LINENO and LOG_FD are\n# provided, also output the error to LOG_FD, referencing LINENO. Then exit the\n# script with STATUS, using 1 if that was 0.\nas_fn_error ()\n{\n  as_status=$1; test $as_status -eq 0 && as_status=1\n  if test \"$4\"; then\n    as_lineno=${as_lineno-\"$3\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n    $as_echo \"$as_me:${as_lineno-$LINENO}: error: $2\" >&$4\n  fi\n  $as_echo \"$as_me: error: $2\" >&2\n  as_fn_exit $as_status\n} # as_fn_error\n\n\n# as_fn_set_status STATUS\n# -----------------------\n# Set $? to STATUS, without forking.\nas_fn_set_status ()\n{\n  return $1\n} # as_fn_set_status\n\n# as_fn_exit STATUS\n# -----------------\n# Exit the shell with STATUS, even in a \"trap 0\" or \"set -e\" context.\nas_fn_exit ()\n{\n  set +e\n  as_fn_set_status $1\n  exit $1\n} # as_fn_exit\n\n# as_fn_unset VAR\n# ---------------\n# Portably unset VAR.\nas_fn_unset ()\n{\n  { eval $1=; unset $1;}\n}\nas_unset=as_fn_unset\n# as_fn_append VAR VALUE\n# ----------------------\n# Append the text in VALUE to the end of the definition contained in VAR. Take\n# advantage of any shell optimizations that allow amortized linear growth over\n# repeated appends, instead of the typical quadratic growth present in naive\n# implementations.\nif (eval \"as_var=1; as_var+=2; test x\\$as_var = x12\") 2>/dev/null; then :\n  eval 'as_fn_append ()\n  {\n    eval $1+=\\$2\n  }'\nelse\n  as_fn_append ()\n  {\n    eval $1=\\$$1\\$2\n  }\nfi # as_fn_append\n\n# as_fn_arith ARG...\n# ------------------\n# Perform arithmetic evaluation on the ARGs, and store the result in the\n# global $as_val. Take advantage of shells that can avoid forks. The arguments\n# must be portable across $(()) and expr.\nif (eval \"test \\$(( 1 + 1 )) = 2\") 2>/dev/null; then :\n  eval 'as_fn_arith ()\n  {\n    as_val=$(( $* ))\n  }'\nelse\n  as_fn_arith ()\n  {\n    as_val=`expr \"$@\" || test $? -eq 1`\n  }\nfi # as_fn_arith\n\n\nif expr a : '\\(a\\)' >/dev/null 2>&1 &&\n   test \"X`expr 00001 : '.*\\(...\\)'`\" = X001; then\n  as_expr=expr\nelse\n  as_expr=false\nfi\n\nif (basename -- /) >/dev/null 2>&1 && test \"X`basename -- / 2>&1`\" = \"X/\"; then\n  as_basename=basename\nelse\n  as_basename=false\nfi\n\nif (as_dir=`dirname -- /` && test \"X$as_dir\" = X/) >/dev/null 2>&1; then\n  as_dirname=dirname\nelse\n  as_dirname=false\nfi\n\nas_me=`$as_basename -- \"$0\" ||\n$as_expr X/\"$0\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$0\" : 'X\\(//\\)$' \\| \\\n\t X\"$0\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X/\"$0\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n\n# Avoid depending upon Character Ranges.\nas_cr_letters='abcdefghijklmnopqrstuvwxyz'\nas_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nas_cr_Letters=$as_cr_letters$as_cr_LETTERS\nas_cr_digits='0123456789'\nas_cr_alnum=$as_cr_Letters$as_cr_digits\n\nECHO_C= ECHO_N= ECHO_T=\ncase `echo -n x` in #(((((\n-n*)\n  case `echo 'xy\\c'` in\n  *c*) ECHO_T='\t';;\t# ECHO_T is single tab character.\n  xy)  ECHO_C='\\c';;\n  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null\n       ECHO_T='\t';;\n  esac;;\n*)\n  ECHO_N='-n';;\nesac\n\nrm -f conf$$ conf$$.exe conf$$.file\nif test -d conf$$.dir; then\n  rm -f conf$$.dir/conf$$.file\nelse\n  rm -f conf$$.dir\n  mkdir conf$$.dir 2>/dev/null\nfi\nif (echo >conf$$.file) 2>/dev/null; then\n  if ln -s conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s='ln -s'\n    # ... but there are two gotchas:\n    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.\n    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.\n    # In both cases, we have to default to `cp -pR'.\n    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||\n      as_ln_s='cp -pR'\n  elif ln conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s=ln\n  else\n    as_ln_s='cp -pR'\n  fi\nelse\n  as_ln_s='cp -pR'\nfi\nrm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file\nrmdir conf$$.dir 2>/dev/null\n\n\n# as_fn_mkdir_p\n# -------------\n# Create \"$as_dir\" as a directory, including parents if necessary.\nas_fn_mkdir_p ()\n{\n\n  case $as_dir in #(\n  -*) as_dir=./$as_dir;;\n  esac\n  test -d \"$as_dir\" || eval $as_mkdir_p || {\n    as_dirs=\n    while :; do\n      case $as_dir in #(\n      *\\'*) as_qdir=`$as_echo \"$as_dir\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; #'(\n      *) as_qdir=$as_dir;;\n      esac\n      as_dirs=\"'$as_qdir' $as_dirs\"\n      as_dir=`$as_dirname -- \"$as_dir\" ||\n$as_expr X\"$as_dir\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_dir\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$as_dir\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n      test -d \"$as_dir\" && break\n    done\n    test -z \"$as_dirs\" || eval \"mkdir $as_dirs\"\n  } || test -d \"$as_dir\" || as_fn_error $? \"cannot create directory $as_dir\"\n\n\n} # as_fn_mkdir_p\nif mkdir -p . 2>/dev/null; then\n  as_mkdir_p='mkdir -p \"$as_dir\"'\nelse\n  test -d ./-p && rmdir ./-p\n  as_mkdir_p=false\nfi\n\n\n# as_fn_executable_p FILE\n# -----------------------\n# Test if FILE is an executable regular file.\nas_fn_executable_p ()\n{\n  test -f \"$1\" && test -x \"$1\"\n} # as_fn_executable_p\nas_test_x='test -x'\nas_executable_p=as_fn_executable_p\n\n# Sed expression to map a string onto a valid CPP name.\nas_tr_cpp=\"eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'\"\n\n# Sed expression to map a string onto a valid variable name.\nas_tr_sh=\"eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'\"\n\n\nexec 6>&1\n## ----------------------------------- ##\n## Main body of $CONFIG_STATUS script. ##\n## ----------------------------------- ##\n_ASEOF\ntest $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# Save the log message, to keep $0 and so on meaningful, and to\n# report actual input values of CONFIG_FILES etc. instead of their\n# values after options handling.\nac_log=\"\nThis file was extended by $as_me, which was\ngenerated by GNU Autoconf 2.69.  Invocation command line was\n\n  CONFIG_FILES    = $CONFIG_FILES\n  CONFIG_HEADERS  = $CONFIG_HEADERS\n  CONFIG_LINKS    = $CONFIG_LINKS\n  CONFIG_COMMANDS = $CONFIG_COMMANDS\n  $ $0 $@\n\non `(hostname || uname -n) 2>/dev/null | sed 1q`\n\"\n\n_ACEOF\n\ncase $ac_config_files in *\"\n\"*) set x $ac_config_files; shift; ac_config_files=$*;;\nesac\n\n\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n# Files that config.status was made for.\nconfig_files=\"$ac_config_files\"\n\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nac_cs_usage=\"\\\n\\`$as_me' instantiates files and other configuration actions\nfrom templates according to the current configuration.  Unless the files\nand actions are specified as TAGs, all are instantiated by default.\n\nUsage: $0 [OPTION]... [TAG]...\n\n  -h, --help       print this help, then exit\n  -V, --version    print version number and configuration settings, then exit\n      --config     print configuration, then exit\n  -q, --quiet, --silent\n                   do not print progress messages\n  -d, --debug      don't remove temporary files\n      --recheck    update $as_me by reconfiguring in the same conditions\n      --file=FILE[:TEMPLATE]\n                   instantiate the configuration file FILE\n\nConfiguration files:\n$config_files\n\nReport bugs to the package provider.\"\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nac_cs_config=\"`$as_echo \"$ac_configure_args\" | sed 's/^ //; s/[\\\\\"\"\\`\\$]/\\\\\\\\&/g'`\"\nac_cs_version=\"\\\\\nconfig.status\nconfigured by $0, generated by GNU Autoconf 2.69,\n  with options \\\\\"\\$ac_cs_config\\\\\"\n\nCopyright (C) 2012 Free Software Foundation, Inc.\nThis config.status script is free software; the Free Software Foundation\ngives unlimited permission to copy, distribute and modify it.\"\n\nac_pwd='$ac_pwd'\nsrcdir='$srcdir'\nINSTALL='$INSTALL'\ntest -n \"\\$AWK\" || AWK=awk\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# The default lists apply if the user does not specify any file.\nac_need_defaults=:\nwhile test $# != 0\ndo\n  case $1 in\n  --*=?*)\n    ac_option=`expr \"X$1\" : 'X\\([^=]*\\)='`\n    ac_optarg=`expr \"X$1\" : 'X[^=]*=\\(.*\\)'`\n    ac_shift=:\n    ;;\n  --*=)\n    ac_option=`expr \"X$1\" : 'X\\([^=]*\\)='`\n    ac_optarg=\n    ac_shift=:\n    ;;\n  *)\n    ac_option=$1\n    ac_optarg=$2\n    ac_shift=shift\n    ;;\n  esac\n\n  case $ac_option in\n  # Handling of the options.\n  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)\n    ac_cs_recheck=: ;;\n  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )\n    $as_echo \"$ac_cs_version\"; exit ;;\n  --config | --confi | --conf | --con | --co | --c )\n    $as_echo \"$ac_cs_config\"; exit ;;\n  --debug | --debu | --deb | --de | --d | -d )\n    debug=: ;;\n  --file | --fil | --fi | --f )\n    $ac_shift\n    case $ac_optarg in\n    *\\'*) ac_optarg=`$as_echo \"$ac_optarg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    '') as_fn_error $? \"missing file argument\" ;;\n    esac\n    as_fn_append CONFIG_FILES \" '$ac_optarg'\"\n    ac_need_defaults=false;;\n  --he | --h |  --help | --hel | -h )\n    $as_echo \"$ac_cs_usage\"; exit ;;\n  -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n  | -silent | --silent | --silen | --sile | --sil | --si | --s)\n    ac_cs_silent=: ;;\n\n  # This is an error.\n  -*) as_fn_error $? \"unrecognized option: \\`$1'\nTry \\`$0 --help' for more information.\" ;;\n\n  *) as_fn_append ac_config_targets \" $1\"\n     ac_need_defaults=false ;;\n\n  esac\n  shift\ndone\n\nac_configure_extra_args=\n\nif $ac_cs_silent; then\n  exec 6>/dev/null\n  ac_configure_extra_args=\"$ac_configure_extra_args --silent\"\nfi\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nif \\$ac_cs_recheck; then\n  set X $SHELL '$0' $ac_configure_args \\$ac_configure_extra_args --no-create --no-recursion\n  shift\n  \\$as_echo \"running CONFIG_SHELL=$SHELL \\$*\" >&6\n  CONFIG_SHELL='$SHELL'\n  export CONFIG_SHELL\n  exec \"\\$@\"\nfi\n\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nexec 5>>config.log\n{\n  echo\n  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX\n## Running $as_me. ##\n_ASBOX\n  $as_echo \"$ac_log\"\n} >&5\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n\n# Handling of arguments.\nfor ac_config_target in $ac_config_targets\ndo\n  case $ac_config_target in\n    \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n    \"mkbinhmm/Makefile\") CONFIG_FILES=\"$CONFIG_FILES mkbinhmm/Makefile\" ;;\n    \"adinrec/Makefile\") CONFIG_FILES=\"$CONFIG_FILES adinrec/Makefile\" ;;\n    \"mkss/Makefile\") CONFIG_FILES=\"$CONFIG_FILES mkss/Makefile\" ;;\n    \"generate-ngram/Makefile\") CONFIG_FILES=\"$CONFIG_FILES generate-ngram/Makefile\" ;;\n    \"jclient-perl/Makefile\") CONFIG_FILES=\"$CONFIG_FILES jclient-perl/Makefile\" ;;\n    \"binlm2arpa/Makefile\") CONFIG_FILES=\"$CONFIG_FILES binlm2arpa/Makefile\" ;;\n\n  *) as_fn_error $? \"invalid argument: \\`$ac_config_target'\" \"$LINENO\" 5;;\n  esac\ndone\n\n\n# If the user did not use the arguments to specify the items to instantiate,\n# then the envvar interface is used.  Set only those that are not.\n# We use the long form for the default assignment because of an extremely\n# bizarre bug on SunOS 4.1.3.\nif $ac_need_defaults; then\n  test \"${CONFIG_FILES+set}\" = set || CONFIG_FILES=$config_files\nfi\n\n# Have a temporary directory for convenience.  Make it in the build tree\n# simply because there is no reason against having it here, and in addition,\n# creating and moving files from /tmp can sometimes cause problems.\n# Hook for its removal unless debugging.\n# Note that there is a small window in which the directory will not be cleaned:\n# after its creation but before its name has been assigned to `$tmp'.\n$debug ||\n{\n  tmp= ac_tmp=\n  trap 'exit_status=$?\n  : \"${ac_tmp:=$tmp}\"\n  { test ! -d \"$ac_tmp\" || rm -fr \"$ac_tmp\"; } && exit $exit_status\n' 0\n  trap 'as_fn_exit 1' 1 2 13 15\n}\n# Create a (secure) tmp directory for tmp files.\n\n{\n  tmp=`(umask 077 && mktemp -d \"./confXXXXXX\") 2>/dev/null` &&\n  test -d \"$tmp\"\n}  ||\n{\n  tmp=./conf$$-$RANDOM\n  (umask 077 && mkdir \"$tmp\")\n} || as_fn_error $? \"cannot create a temporary directory in .\" \"$LINENO\" 5\nac_tmp=$tmp\n\n# Set up the scripts for CONFIG_FILES section.\n# No need to generate them if there are no CONFIG_FILES.\n# This happens for instance with `./config.status config.h'.\nif test -n \"$CONFIG_FILES\"; then\n\n\nac_cr=`echo X | tr X '\\015'`\n# On cygwin, bash can eat \\r inside `` if the user requested igncr.\n# But we know of no other shell where ac_cr would be empty at this\n# point, so we can use a bashism as a fallback.\nif test \"x$ac_cr\" = x; then\n  eval ac_cr=\\$\\'\\\\r\\'\nfi\nac_cs_awk_cr=`$AWK 'BEGIN { print \"a\\rb\" }' </dev/null 2>/dev/null`\nif test \"$ac_cs_awk_cr\" = \"a${ac_cr}b\"; then\n  ac_cs_awk_cr='\\\\r'\nelse\n  ac_cs_awk_cr=$ac_cr\nfi\n\necho 'BEGIN {' >\"$ac_tmp/subs1.awk\" &&\n_ACEOF\n\n\n{\n  echo \"cat >conf$$subs.awk <<_ACEOF\" &&\n  echo \"$ac_subst_vars\" | sed 's/.*/&!$&$ac_delim/' &&\n  echo \"_ACEOF\"\n} >conf$$subs.sh ||\n  as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\nac_delim_num=`echo \"$ac_subst_vars\" | grep -c '^'`\nac_delim='%!_!# '\nfor ac_last_try in false false false false false :; do\n  . ./conf$$subs.sh ||\n    as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\n\n  ac_delim_n=`sed -n \"s/.*$ac_delim\\$/X/p\" conf$$subs.awk | grep -c X`\n  if test $ac_delim_n = $ac_delim_num; then\n    break\n  elif $ac_last_try; then\n    as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\n  else\n    ac_delim=\"$ac_delim!$ac_delim _$ac_delim!! \"\n  fi\ndone\nrm -f conf$$subs.sh\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\ncat >>\"\\$ac_tmp/subs1.awk\" <<\\\\_ACAWK &&\n_ACEOF\nsed -n '\nh\ns/^/S[\"/; s/!.*/\"]=/\np\ng\ns/^[^!]*!//\n:repl\nt repl\ns/'\"$ac_delim\"'$//\nt delim\n:nl\nh\ns/\\(.\\{148\\}\\)..*/\\1/\nt more1\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\\\\n\"\\\\/\np\nn\nb repl\n:more1\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"\\\\/\np\ng\ns/.\\{148\\}//\nt nl\n:delim\nh\ns/\\(.\\{148\\}\\)..*/\\1/\nt more2\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"/\np\nb\n:more2\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"\\\\/\np\ng\ns/.\\{148\\}//\nt delim\n' <conf$$subs.awk | sed '\n/^[^\"\"]/{\n  N\n  s/\\n//\n}\n' >>$CONFIG_STATUS || ac_write_fail=1\nrm -f conf$$subs.awk\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n_ACAWK\ncat >>\"\\$ac_tmp/subs1.awk\" <<_ACAWK &&\n  for (key in S) S_is_set[key] = 1\n  FS = \"\u0007\"\n\n}\n{\n  line = $ 0\n  nfields = split(line, field, \"@\")\n  substed = 0\n  len = length(field[1])\n  for (i = 2; i < nfields; i++) {\n    key = field[i]\n    keylen = length(key)\n    if (S_is_set[key]) {\n      value = S[key]\n      line = substr(line, 1, len) \"\" value \"\" substr(line, len + keylen + 3)\n      len += length(value) + length(field[++i])\n      substed = 1\n    } else\n      len += 1 + keylen\n  }\n\n  print line\n}\n\n_ACAWK\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nif sed \"s/$ac_cr//\" < /dev/null > /dev/null 2>&1; then\n  sed \"s/$ac_cr\\$//; s/$ac_cr/$ac_cs_awk_cr/g\"\nelse\n  cat\nfi < \"$ac_tmp/subs1.awk\" > \"$ac_tmp/subs.awk\" \\\n  || as_fn_error $? \"could not setup config files machinery\" \"$LINENO\" 5\n_ACEOF\n\n# VPATH may cause trouble with some makes, so we remove sole $(srcdir),\n# ${srcdir} and @srcdir@ entries from VPATH if srcdir is \".\", strip leading and\n# trailing colons and then remove the whole line if VPATH becomes empty\n# (actually we leave an empty line to preserve line numbers).\nif test \"x$srcdir\" = x.; then\n  ac_vpsub='/^[\t ]*VPATH[\t ]*=[\t ]*/{\nh\ns///\ns/^/:/\ns/[\t ]*$/:/\ns/:\\$(srcdir):/:/g\ns/:\\${srcdir}:/:/g\ns/:@srcdir@:/:/g\ns/^:*//\ns/:*$//\nx\ns/\\(=[\t ]*\\).*/\\1/\nG\ns/\\n//\ns/^[^=]*=[\t ]*$//\n}'\nfi\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nfi # test -n \"$CONFIG_FILES\"\n\n\neval set X \"  :F $CONFIG_FILES      \"\nshift\nfor ac_tag\ndo\n  case $ac_tag in\n  :[FHLC]) ac_mode=$ac_tag; continue;;\n  esac\n  case $ac_mode$ac_tag in\n  :[FHL]*:*);;\n  :L* | :C*:*) as_fn_error $? \"invalid tag \\`$ac_tag'\" \"$LINENO\" 5;;\n  :[FH]-) ac_tag=-:-;;\n  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;\n  esac\n  ac_save_IFS=$IFS\n  IFS=:\n  set x $ac_tag\n  IFS=$ac_save_IFS\n  shift\n  ac_file=$1\n  shift\n\n  case $ac_mode in\n  :L) ac_source=$1;;\n  :[FH])\n    ac_file_inputs=\n    for ac_f\n    do\n      case $ac_f in\n      -) ac_f=\"$ac_tmp/stdin\";;\n      *) # Look for the file first in the build tree, then in the source tree\n\t # (if the path is not absolute).  The absolute path cannot be DOS-style,\n\t # because $ac_f cannot contain `:'.\n\t test -f \"$ac_f\" ||\n\t   case $ac_f in\n\t   [\\\\/$]*) false;;\n\t   *) test -f \"$srcdir/$ac_f\" && ac_f=\"$srcdir/$ac_f\";;\n\t   esac ||\n\t   as_fn_error 1 \"cannot find input file: \\`$ac_f'\" \"$LINENO\" 5;;\n      esac\n      case $ac_f in *\\'*) ac_f=`$as_echo \"$ac_f\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; esac\n      as_fn_append ac_file_inputs \" '$ac_f'\"\n    done\n\n    # Let's still pretend it is `configure' which instantiates (i.e., don't\n    # use $as_me), people would be surprised to read:\n    #    /* config.h.  Generated by config.status.  */\n    configure_input='Generated from '`\n\t  $as_echo \"$*\" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'\n\t`' by configure.'\n    if test x\"$ac_file\" != x-; then\n      configure_input=\"$ac_file.  $configure_input\"\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: creating $ac_file\" >&5\n$as_echo \"$as_me: creating $ac_file\" >&6;}\n    fi\n    # Neutralize special characters interpreted by sed in replacement strings.\n    case $configure_input in #(\n    *\\&* | *\\|* | *\\\\* )\n       ac_sed_conf_input=`$as_echo \"$configure_input\" |\n       sed 's/[\\\\\\\\&|]/\\\\\\\\&/g'`;; #(\n    *) ac_sed_conf_input=$configure_input;;\n    esac\n\n    case $ac_tag in\n    *:-:* | *:-) cat >\"$ac_tmp/stdin\" \\\n      || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5 ;;\n    esac\n    ;;\n  esac\n\n  ac_dir=`$as_dirname -- \"$ac_file\" ||\n$as_expr X\"$ac_file\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$ac_file\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$ac_file\" : 'X\\(//\\)$' \\| \\\n\t X\"$ac_file\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$ac_file\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n  as_dir=\"$ac_dir\"; as_fn_mkdir_p\n  ac_builddir=.\n\ncase \"$ac_dir\" in\n.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;\n*)\n  ac_dir_suffix=/`$as_echo \"$ac_dir\" | sed 's|^\\.[\\\\/]||'`\n  # A \"..\" for each directory in $ac_dir_suffix.\n  ac_top_builddir_sub=`$as_echo \"$ac_dir_suffix\" | sed 's|/[^\\\\/]*|/..|g;s|/||'`\n  case $ac_top_builddir_sub in\n  \"\") ac_top_builddir_sub=. ac_top_build_prefix= ;;\n  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;\n  esac ;;\nesac\nac_abs_top_builddir=$ac_pwd\nac_abs_builddir=$ac_pwd$ac_dir_suffix\n# for backward compatibility:\nac_top_builddir=$ac_top_build_prefix\n\ncase $srcdir in\n  .)  # We are building in place.\n    ac_srcdir=.\n    ac_top_srcdir=$ac_top_builddir_sub\n    ac_abs_top_srcdir=$ac_pwd ;;\n  [\\\\/]* | ?:[\\\\/]* )  # Absolute name.\n    ac_srcdir=$srcdir$ac_dir_suffix;\n    ac_top_srcdir=$srcdir\n    ac_abs_top_srcdir=$srcdir ;;\n  *) # Relative name.\n    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix\n    ac_top_srcdir=$ac_top_build_prefix$srcdir\n    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;\nesac\nac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n\n\n  case $ac_mode in\n  :F)\n  #\n  # CONFIG_FILE\n  #\n\n  case $INSTALL in\n  [\\\\/$]* | ?:[\\\\/]* ) ac_INSTALL=$INSTALL ;;\n  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;\n  esac\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# If the template does not know about datarootdir, expand it.\n# FIXME: This hack should be removed a few years after 2.60.\nac_datarootdir_hack=; ac_datarootdir_seen=\nac_sed_dataroot='\n/datarootdir/ {\n  p\n  q\n}\n/@datadir@/p\n/@docdir@/p\n/@infodir@/p\n/@localedir@/p\n/@mandir@/p'\ncase `eval \"sed -n \\\"\\$ac_sed_dataroot\\\" $ac_file_inputs\"` in\n*datarootdir*) ac_datarootdir_seen=yes;;\n*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting\" >&5\n$as_echo \"$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting\" >&2;}\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n  ac_datarootdir_hack='\n  s&@datadir@&$datadir&g\n  s&@docdir@&$docdir&g\n  s&@infodir@&$infodir&g\n  s&@localedir@&$localedir&g\n  s&@mandir@&$mandir&g\n  s&\\\\\\${datarootdir}&$datarootdir&g' ;;\nesac\n_ACEOF\n\n# Neutralize VPATH when `$srcdir' = `.'.\n# Shell code in configure.ac might set extrasub.\n# FIXME: do we really want to maintain this feature?\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nac_sed_extra=\"$ac_vpsub\n$extrasub\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n:t\n/@[a-zA-Z_][a-zA-Z_0-9]*@/!b\ns|@configure_input@|$ac_sed_conf_input|;t t\ns&@top_builddir@&$ac_top_builddir_sub&;t t\ns&@top_build_prefix@&$ac_top_build_prefix&;t t\ns&@srcdir@&$ac_srcdir&;t t\ns&@abs_srcdir@&$ac_abs_srcdir&;t t\ns&@top_srcdir@&$ac_top_srcdir&;t t\ns&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t\ns&@builddir@&$ac_builddir&;t t\ns&@abs_builddir@&$ac_abs_builddir&;t t\ns&@abs_top_builddir@&$ac_abs_top_builddir&;t t\ns&@INSTALL@&$ac_INSTALL&;t t\n$ac_datarootdir_hack\n\"\neval sed \\\"\\$ac_sed_extra\\\" \"$ac_file_inputs\" | $AWK -f \"$ac_tmp/subs.awk\" \\\n  >$ac_tmp/out || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n\ntest -z \"$ac_datarootdir_hack$ac_datarootdir_seen\" &&\n  { ac_out=`sed -n '/\\${datarootdir}/p' \"$ac_tmp/out\"`; test -n \"$ac_out\"; } &&\n  { ac_out=`sed -n '/^[\t ]*datarootdir[\t ]*:*=/p' \\\n      \"$ac_tmp/out\"`; test -z \"$ac_out\"; } &&\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \\`datarootdir'\nwhich seems to be undefined.  Please make sure it is defined\" >&5\n$as_echo \"$as_me: WARNING: $ac_file contains a reference to the variable \\`datarootdir'\nwhich seems to be undefined.  Please make sure it is defined\" >&2;}\n\n  rm -f \"$ac_tmp/stdin\"\n  case $ac_file in\n  -) cat \"$ac_tmp/out\" && rm -f \"$ac_tmp/out\";;\n  *) rm -f \"$ac_file\" && mv \"$ac_tmp/out\" \"$ac_file\";;\n  esac \\\n  || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n ;;\n\n\n\n  esac\n\ndone # for ac_tag\n\n\nas_fn_exit 0\n_ACEOF\nac_clean_files=$ac_clean_files_save\n\ntest $ac_write_fail = 0 ||\n  as_fn_error $? \"write failure creating $CONFIG_STATUS\" \"$LINENO\" 5\n\n\n# configure is writing to config.log, and then calls config.status.\n# config.status does its own redirection, appending to config.log.\n# Unfortunately, on DOS this fails, as config.log is still kept open\n# by configure, so config.status won't be able to write to it; its\n# output is simply discarded.  So we exec the FD to /dev/null,\n# effectively closing config.log, so it can be properly (re)opened and\n# appended to by config.status.  When coming back to configure, we\n# need to make the FD available again.\nif test \"$no_create\" != yes; then\n  ac_cs_success=:\n  ac_config_status_args=\n  test \"$silent\" = yes &&\n    ac_config_status_args=\"$ac_config_status_args --quiet\"\n  exec 5>/dev/null\n  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false\n  exec 5>>config.log\n  # Use ||, not &&, to avoid exiting from the if with $? = 1, which\n  # would make configure fail if this is the last instruction.\n  $ac_cs_success || as_fn_exit 1\nfi\n\n#\n# CONFIG_SUBDIRS section.\n#\nif test \"$no_recursion\" != yes; then\n\n  # Remove --cache-file, --srcdir, and --disable-option-checking arguments\n  # so they do not pile up.\n  ac_sub_configure_args=\n  ac_prev=\n  eval \"set x $ac_configure_args\"\n  shift\n  for ac_arg\n  do\n    if test -n \"$ac_prev\"; then\n      ac_prev=\n      continue\n    fi\n    case $ac_arg in\n    -cache-file | --cache-file | --cache-fil | --cache-fi \\\n    | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)\n      ac_prev=cache_file ;;\n    -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \\\n    | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* \\\n    | --c=*)\n      ;;\n    --config-cache | -C)\n      ;;\n    -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)\n      ac_prev=srcdir ;;\n    -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)\n      ;;\n    -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)\n      ac_prev=prefix ;;\n    -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)\n      ;;\n    --disable-option-checking)\n      ;;\n    *)\n      case $ac_arg in\n      *\\'*) ac_arg=`$as_echo \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n      esac\n      as_fn_append ac_sub_configure_args \" '$ac_arg'\" ;;\n    esac\n  done\n\n  # Always prepend --prefix to ensure using the same prefix\n  # in subdir configurations.\n  ac_arg=\"--prefix=$prefix\"\n  case $ac_arg in\n  *\\'*) ac_arg=`$as_echo \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n  esac\n  ac_sub_configure_args=\"'$ac_arg' $ac_sub_configure_args\"\n\n  # Pass --silent\n  if test \"$silent\" = yes; then\n    ac_sub_configure_args=\"--silent $ac_sub_configure_args\"\n  fi\n\n  # Always prepend --disable-option-checking to silence warnings, since\n  # different subdirs can have different --enable and --with options.\n  ac_sub_configure_args=\"--disable-option-checking $ac_sub_configure_args\"\n\n  ac_popdir=`pwd`\n  for ac_dir in : $subdirs; do test \"x$ac_dir\" = x: && continue\n\n    # Do not complain, so a configure script can configure whichever\n    # parts of a large source tree are present.\n    test -d \"$srcdir/$ac_dir\" || continue\n\n    ac_msg=\"=== configuring in $ac_dir (`pwd`/$ac_dir)\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: $ac_msg\" >&5\n    $as_echo \"$ac_msg\" >&6\n    as_dir=\"$ac_dir\"; as_fn_mkdir_p\n    ac_builddir=.\n\ncase \"$ac_dir\" in\n.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;\n*)\n  ac_dir_suffix=/`$as_echo \"$ac_dir\" | sed 's|^\\.[\\\\/]||'`\n  # A \"..\" for each directory in $ac_dir_suffix.\n  ac_top_builddir_sub=`$as_echo \"$ac_dir_suffix\" | sed 's|/[^\\\\/]*|/..|g;s|/||'`\n  case $ac_top_builddir_sub in\n  \"\") ac_top_builddir_sub=. ac_top_build_prefix= ;;\n  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;\n  esac ;;\nesac\nac_abs_top_builddir=$ac_pwd\nac_abs_builddir=$ac_pwd$ac_dir_suffix\n# for backward compatibility:\nac_top_builddir=$ac_top_build_prefix\n\ncase $srcdir in\n  .)  # We are building in place.\n    ac_srcdir=.\n    ac_top_srcdir=$ac_top_builddir_sub\n    ac_abs_top_srcdir=$ac_pwd ;;\n  [\\\\/]* | ?:[\\\\/]* )  # Absolute name.\n    ac_srcdir=$srcdir$ac_dir_suffix;\n    ac_top_srcdir=$srcdir\n    ac_abs_top_srcdir=$srcdir ;;\n  *) # Relative name.\n    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix\n    ac_top_srcdir=$ac_top_build_prefix$srcdir\n    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;\nesac\nac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n\n\n    cd \"$ac_dir\"\n\n    # Check for guested configure; otherwise get Cygnus style configure.\n    if test -f \"$ac_srcdir/configure.gnu\"; then\n      ac_sub_configure=$ac_srcdir/configure.gnu\n    elif test -f \"$ac_srcdir/configure\"; then\n      ac_sub_configure=$ac_srcdir/configure\n    elif test -f \"$ac_srcdir/configure.in\"; then\n      # This should be Cygnus configure.\n      ac_sub_configure=$ac_aux_dir/configure\n    else\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: no configuration information is in $ac_dir\" >&5\n$as_echo \"$as_me: WARNING: no configuration information is in $ac_dir\" >&2;}\n      ac_sub_configure=\n    fi\n\n    # The recursion is here.\n    if test -n \"$ac_sub_configure\"; then\n      # Make the cache file name correct relative to the subdirectory.\n      case $cache_file in\n      [\\\\/]* | ?:[\\\\/]* ) ac_sub_cache_file=$cache_file ;;\n      *) # Relative name.\n\tac_sub_cache_file=$ac_top_build_prefix$cache_file ;;\n      esac\n\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: running $SHELL $ac_sub_configure $ac_sub_configure_args --cache-file=$ac_sub_cache_file --srcdir=$ac_srcdir\" >&5\n$as_echo \"$as_me: running $SHELL $ac_sub_configure $ac_sub_configure_args --cache-file=$ac_sub_cache_file --srcdir=$ac_srcdir\" >&6;}\n      # The eval makes quoting arguments work.\n      eval \"\\$SHELL \\\"\\$ac_sub_configure\\\" $ac_sub_configure_args \\\n\t   --cache-file=\\\"\\$ac_sub_cache_file\\\" --srcdir=\\\"\\$ac_srcdir\\\"\" ||\n\tas_fn_error $? \"$ac_sub_configure failed for $ac_dir\" \"$LINENO\" 5\n    fi\n\n    cd \"$ac_popdir\"\n  done\nfi\nif test -n \"$ac_unrecognized_opts\" && test \"$enable_option_checking\" != no; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts\" >&5\n$as_echo \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2;}\nfi\n\n"
        },
        {
          "name": "configure.in",
          "type": "blob",
          "size": 0.9482421875,
          "content": "dnl Copyright (c) 1991-2016 Kawahara Lab., Kyoto University\ndnl Copyright (c) 2000-2005 Shikano Lab., Nara Institute of Science and Technology\ndnl Copyright (c) 2005-2016 Julius project team, Nagoya Institute of Technology\ndnl All rights reserved\ndnl\nAC_INIT(Sample.jconf)\nAC_CONFIG_AUX_DIR(support)\nAC_CONFIG_SUBDIRS(adintool mkgshmm gramtools jcontrol mkbingram julius libjulius libsent)\n\ndnl all configure options will be passed to all subdirectries.\n\nAC_CANONICAL_HOST\n\nAC_MSG_CHECKING([host specific optimization flag])\nif test -z \"$CFLAGS\" ; then\n    OPTFLAG=support/cflags.${host_cpu}-${host_vendor}-${host_os}\n    if test -f \"$OPTFLAG\" ; then\n\t. $OPTFLAG\n\tAC_MSG_RESULT([$OPTFLAG])\n    else\n\tAC_MSG_RESULT([no])\n    fi\nelse\n    AC_MSG_RESULT([skipped])\nfi\n\nAC_PROG_CC\nAC_PROG_CPP\nAC_PROG_INSTALL\nAC_PATH_PROG(RM, rm)\nAC_EXEEXT\n\nAC_OUTPUT(Makefile mkbinhmm/Makefile adinrec/Makefile mkss/Makefile generate-ngram/Makefile jclient-perl/Makefile binlm2arpa/Makefile)\n"
        },
        {
          "name": "dnntools",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "generate-ngram",
          "type": "tree",
          "content": null
        },
        {
          "name": "gramtools",
          "type": "tree",
          "content": null
        },
        {
          "name": "jclient-perl",
          "type": "tree",
          "content": null
        },
        {
          "name": "jcontrol",
          "type": "tree",
          "content": null
        },
        {
          "name": "julius-simple",
          "type": "tree",
          "content": null
        },
        {
          "name": "julius",
          "type": "tree",
          "content": null
        },
        {
          "name": "libjulius",
          "type": "tree",
          "content": null
        },
        {
          "name": "libsent",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkbingram",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkbinhmm",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkgshmm",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkss",
          "type": "tree",
          "content": null
        },
        {
          "name": "msvc",
          "type": "tree",
          "content": null
        },
        {
          "name": "oldman",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "support",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}