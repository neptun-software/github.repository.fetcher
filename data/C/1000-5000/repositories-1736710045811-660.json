{
  "metadata": {
    "timestamp": 1736710045811,
    "page": 660,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "chocolate-doom/chocolate-doom",
      "stars": 1983,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 4.1484375,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  LLVM\nAccessModifierOffset: -2\nAlignAfterOpenBracket: Align\nAlignConsecutiveMacros: true\nAlignConsecutiveAssignments: false\nAlignConsecutiveBitFields: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Right\nAlignOperands:   Align\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: true\nAllowAllConstructorInitializersOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortEnumsOnASingleLine: true\nAllowShortBlocksOnASingleLine: Never\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortLambdasOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: MultiLine\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterCaseLabel:  false\n  AfterClass:      true\n  AfterControlStatement: Always\n  AfterEnum:       true\n  AfterFunction:   true\n  AfterNamespace:  true\n  AfterObjCDeclaration: false\n  AfterStruct:     true\n  AfterUnion:      true\n  AfterExternBlock: false\n  BeforeCatch:     false\n  BeforeElse:      true\n  BeforeLambdaBody: false\n  BeforeWhile:     false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false\nBreakInheritanceList: BeforeColon\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     80\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDeriveLineEnding: true\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeBlocks:   Preserve\nIncludeCategories:\n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n    SortPriority:    0\n  - Regex:           '^(<|\"(gtest|gmock|isl|json)/)'\n    Priority:        3\n    SortPriority:    0\n  - Regex:           '.*'\n    Priority:        1\n    SortPriority:    0\nIncludeIsMainRegex: '(Test)?$'\nIncludeIsMainSourceRegex: ''\nIndentCaseLabels: true\nIndentCaseBlocks: false\nIndentGotoLabels: true\nIndentPPDirectives: None\nIndentExternBlock: AfterExternBlock\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nInsertTrailingCommas: None\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 2\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 2\nObjCBreakBeforeNestedBlockParam: true\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Right\nReflowComments:  false\nSortIncludes:    false\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: true\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyBlock: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInConditionalStatement: false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nSpaceBeforeSquareBrackets: false\nStandard:        Latest\nStatementMacros:\n  - Q_UNUSED\n  - QT_REQUIRE_VERSION\nTabWidth:        8\nUseCRLF:         false\nUseTab:          Never\nWhitespaceSensitiveMacros:\n  - STRINGIZE\n  - PP_STRINGIZE\n  - BOOST_PP_STRINGIZE\n...\n\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.634765625,
          "content": "CMDLINE\nINSTALL\nMakefile\nMakefile.in\nTAGS\naclocal.m4\nautom4te.cache\nautotools\nbin\nconfig.h\nconfig.hin\nconfig.log\nconfig.status\nconfigure\nlib\nobj\nrpm.spec\nstamp-h\nstamp-h.in\nstamp-h1\ntags\n\\#*\\#\nDOOM*.png\nHTIC*.png\nHEXEN*.png\nSTRIFE*.png\nDOOM*.pcx\nHTIC*.pcx\nHEXEN*.pcx\nSTRIFE*.pcx\n\n# CMake-specific ignores\n/.vs\n/build*\n/CMakeSettings.json\n/out\n\n# These are the default patterns globally ignored by Subversion:\n*.o\n*.lo\n*.la\n*.al\n.libs\n*.so\n*.so.[0-9]*\n*.a\n*.pyc\n*.pyo\n*.rej\n*~\n.#*\n.*.swp\n.DS_store\n\n# Ignore GNU Global tags and html files\nGPATH\nGRTAGS\nGTAGS\n/HTML/\n\n# VSCode settings\n\n/.vscode/\n\n# clangd settings\n/.cache/clangd\ncompile_commands.json\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.09765625,
          "content": "[submodule \"quickcheck\"]\n\tpath = quickcheck\n\turl = https://github.com/chocolate-doom/quickcheck.git\n"
        },
        {
          "name": ".lvimrc",
          "type": "blob",
          "size": 0.7626953125,
          "content": "\" Local vimrc configuration file.  Install the localvimrc.vim vim script.\nset expandtab\nset tabstop=8\nset softtabstop=4\nset shiftwidth=4\n\n\" Add all tag files to tags path.\n\nlet topdir = findfile(\"configure.ac\", \".;\")\nlet topdir = substitute(topdir, \"configure.ac\", \"\", \"\")\n\n\" Check tags file in current dir:\nset tags+=tags\n\n\" Add tag files in parent directories:\nlet tagfiles = findfile(\"tags\", \".;\", -1)\n\n\" Add tag files for libraries:\ncall add(tagfiles, topdir . \"opl/tags\")\ncall add(tagfiles, topdir . \"pcsound/tags\")\ncall add(tagfiles, topdir . \"textscreen/tags\")\n\nfor tagfile in tagfiles\n    \" Don't go beyond the project top level when adding parent dirs:\n    if stridx(tagfile, topdir) >= 0\n        exec \"set tags+=\" . tagfile\n    endif\nendfor\n\nunlet topdir\nunlet tagfiles\n\n"
        },
        {
          "name": ".travis.sh",
          "type": "blob",
          "size": 0.529296875,
          "content": "#!/bin/sh\nif [ \"$ANALYZE\" = \"true\" ] ; then\n\t# -D__GNUC__ is required for cppcheck to know about noreturn functions\n\tcppcheck --error-exitcode=1 -j2 -UTESTING -D__GNUC__ -Iopl -Isrc -Isrc/setup opl pcsound src textscreen 2> stderr.txt\n\tRET=$?\n\tif [ -s stderr.txt ]\n\tthen\n\t\tcat stderr.txt\n\tfi\n\texit $RET\nelse\n\tset -e\n\t./autogen.sh --enable-werror\n\tmake -j4\n\tmake install DESTDIR=/tmp/whatever\n\tmake dist\n\tPREFIX=`sed -n '/PROGRAM_PREFIX/p' ${PWD}/config.h | cut -d '\"' -f 2`\n\tmake -j4 -C quickcheck check SOURCE_PORT=$PWD/src/${PREFIX}doom\nfi\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.240234375,
          "content": "Simon Howard <fraggle@gmail.com>\nJames Haley <haleyjd@hotmail.com>\nSamuel Villarreal <svkaiser@gmail.com>\nFabian Greffrath <fabian@greffrath.com>\nJonathan Dowland <jon@dow.land>\nAlexey Khokholov <alexeytf2@gmail.com>\nTuro Lamminen <turol@iki.fi>\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 3.029296875,
          "content": "set(CMAKE_MODULE_PATH \"${CMAKE_CURRENT_SOURCE_DIR}/cmake\")\n\ncmake_minimum_required(VERSION 3.7.2)\nproject(\"Chocolate Doom\" VERSION 3.1.0 LANGUAGES C)\n\n# Autotools variables\nset(top_srcdir ${CMAKE_CURRENT_SOURCE_DIR})\nset(top_builddir ${CMAKE_CURRENT_BINARY_DIR})\n\n# AC_INIT variables\nset(PACKAGE_NAME \"${PROJECT_NAME}\")\nset(PACKAGE_TARNAME \"chocolate-doom\")\nset(PACKAGE_VERSION \"${PROJECT_VERSION}\")\nset(PACKAGE_STRING \"${PROJECT_NAME} ${PROJECT_VERSION}\")\nset(PACKAGE_BUGREPORT \"chocolate-doom-dev-list@chocolate-doom.org\")\n\nstring(REGEX REPLACE \" Doom$\" \"\" PACKAGE_SHORTNAME \"${PACKAGE_NAME}\")\nset(PACKAGE_COPYRIGHT \"Copyright (C) 1993-2024\")\nset(PACKAGE_LICENSE \"GNU General Public License, version 2\")\n\n# Any settings that should apply to all targets in this directory and all\n# subdirectories should go here.  Use judiciously.\nif(MSVC)\n    add_definitions(\"/D_CRT_SECURE_NO_WARNINGS\" \"/D_CRT_SECURE_NO_DEPRECATE\"\n                    \"/D_CRT_NONSTDC_NO_DEPRECATE\")\nelse()\n    add_compile_options(\"-Wall\" \"-Wdeclaration-after-statement\"\n                        \"-Wredundant-decls\")\nendif()\n\noption(CMAKE_FIND_PACKAGE_PREFER_CONFIG\n       \"Lookup package config files before using find modules\" On)\n\noption(ENABLE_SDL2_NET \"Enable SDL2_net\" On)\noption(ENABLE_SDL2_MIXER \"Enable SDL2_mixer\" On)\n\nif (NOT DEFINED EMSCRIPTEN)\n    find_package(SDL2 2.0.14)\nendif()\nif(ENABLE_SDL2_MIXER)\n    if (NOT DEFINED EMSCRIPTEN)\n        find_package(SDL2_mixer 2.0.2)\n    endif()\nelse()\n    add_compile_definitions(DISABLE_SDL2MIXER=1)\nendif()\n\nif(ENABLE_SDL2_NET)\n    if (NOT DEFINED EMSCRIPTEN)\n        find_package(SDL2_net 2.0.0)\n    endif()\nelse()\n    add_compile_definitions(DISABLE_SDL2NET=1)\nendif()\n\n\n# Check for libsamplerate.\nfind_package(SampleRate)\nif(SampleRate_FOUND)\n    set(HAVE_LIBSAMPLERATE TRUE)\nendif()\n\n# Check for libpng.\nfind_package(PNG)\nif(PNG_FOUND)\n    set(HAVE_LIBPNG TRUE)\nendif()\n\n# Check for FluidSynth.\nfind_package(FluidSynth 2.2.0)\nif(FluidSynth_FOUND AND ENABLE_SDL2_MIXER)\n    set(HAVE_FLUIDSYNTH TRUE)\nendif()\n\nfind_package(m)\n\ninclude(CheckSymbolExists)\ninclude(CheckIncludeFile)\ncheck_symbol_exists(strcasecmp \"strings.h\" HAVE_DECL_STRCASECMP)\ncheck_symbol_exists(strncasecmp \"strings.h\" HAVE_DECL_STRNCASECMP)\ncheck_include_file(\"dirent.h\" HAVE_DIRENT_H)\n\nstring(CONCAT WINDOWS_RC_VERSION \"${PROJECT_VERSION_MAJOR}, \"\n    \"${PROJECT_VERSION_MINOR}, ${PROJECT_VERSION_PATCH}, 0\")\n\n# Without a hyphen. This is used for the bash-completion scripts.\nstring(TOLOWER \"${PACKAGE_SHORTNAME}\" PROGRAM_SPREFIX)\n\n# With a hyphen, used almost everywhere else.\nset(PROGRAM_PREFIX \"${PROGRAM_SPREFIX}-\")\n\nconfigure_file(cmake/config.h.cin config.h)\n\nconfigure_file(src/doom-res.rc.in src/doom-res.rc)\nconfigure_file(src/heretic-res.rc.in src/heretic-res.rc)\nconfigure_file(src/hexen-res.rc.in src/hexen-res.rc)\nconfigure_file(src/setup-res.rc.in src/setup-res.rc)\nconfigure_file(src/setup/setup-manifest.xml.in src/setup/setup-manifest.xml)\nconfigure_file(src/strife-res.rc.in src/strife-res.rc)\n\nforeach(SUBDIR textscreen opl pcsound src)\n    add_subdirectory(\"${SUBDIR}\")\nendforeach()\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1494140625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at fraggle@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "COPYING.md",
          "type": "blob",
          "size": 17.4755859375,
          "content": "### GNU GENERAL PUBLIC LICENSE\n\nVersion 2, June 1991\n\n    Copyright (C) 1989, 1991 Free Software Foundation, Inc.  \n    51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n    Everyone is permitted to copy and distribute verbatim copies\n    of this license document, but changing it is not allowed.\n\n### Preamble\n\nThe licenses for most software are designed to take away your freedom\nto share and change it. By contrast, the GNU General Public License is\nintended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users. This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it. (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.) You can apply it to\nyour programs, too.\n\nWhen we speak of free software, we are referring to freedom, not\nprice. Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\nTo protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if\nyou distribute copies of the software, or if you modify it.\n\nFor example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have. You must make sure that they, too, receive or can get the\nsource code. And you must show them these terms so they know their\nrights.\n\nWe protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\nAlso, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware. If the software is modified by someone else and passed on,\nwe want its recipients to know that what they have is not the\noriginal, so that any problems introduced by others will not reflect\non the original authors' reputations.\n\nFinally, any free program is threatened constantly by software\npatents. We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary. To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at\nall.\n\nThe precise terms and conditions for copying, distribution and\nmodification follow.\n\n### TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n**0.** This License applies to any program or other work which\ncontains a notice placed by the copyright holder saying it may be\ndistributed under the terms of this General Public License. The\n\"Program\", below, refers to any such program or work, and a \"work\nbased on the Program\" means either the Program or any derivative work\nunder copyright law: that is to say, a work containing the Program or\na portion of it, either verbatim or with modifications and/or\ntranslated into another language. (Hereinafter, translation is\nincluded without limitation in the term \"modification\".) Each licensee\nis addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope. The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the Program\n(independent of having been made by running the Program). Whether that\nis true depends on what the Program does.\n\n**1.** You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a\nfee.\n\n**2.** You may modify your copy or copies of the Program or any\nportion of it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n  \n**a)** You must cause the modified files to carry prominent notices\nstating that you changed the files and the date of any change.\n\n  \n**b)** You must cause any work that you distribute or publish, that in\nwhole or in part contains or is derived from the Program or any part\nthereof, to be licensed as a whole at no charge to all third parties\nunder the terms of this License.\n\n  \n**c)** If the modified program normally reads commands interactively\nwhen run, you must cause it, when started running for such interactive\nuse in the most ordinary way, to print or display an announcement\nincluding an appropriate copyright notice and a notice that there is\nno warranty (or else, saying that you provide a warranty) and that\nusers may redistribute the program under these conditions, and telling\nthe user how to view a copy of this License. (Exception: if the\nProgram itself is interactive but does not normally print such an\nannouncement, your work based on the Program is not required to print\nan announcement.)\n\nThese requirements apply to the modified work as a whole. If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works. But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n**3.** You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n  \n**a)** Accompany it with the complete corresponding machine-readable\nsource code, which must be distributed under the terms of Sections 1\nand 2 above on a medium customarily used for software interchange; or,\n\n  \n**b)** Accompany it with a written offer, valid for at least three\nyears, to give any third party, for a charge no more than your cost of\nphysically performing source distribution, a complete machine-readable\ncopy of the corresponding source code, to be distributed under the\nterms of Sections 1 and 2 above on a medium customarily used for\nsoftware interchange; or,\n\n  \n**c)** Accompany it with the information you received as to the offer\nto distribute corresponding source code. (This alternative is allowed\nonly for noncommercial distribution and only if you received the\nprogram in object code or executable form with such an offer, in\naccord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it. For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable. However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n**4.** You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License. Any attempt otherwise\nto copy, modify, sublicense or distribute the Program is void, and\nwill automatically terminate your rights under this License. However,\nparties who have received copies, or rights, from you under this\nLicense will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n**5.** You are not required to accept this License, since you have not\nsigned it. However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works. These actions are\nprohibited by law if you do not accept this License. Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n**6.** Each time you redistribute the Program (or any work based on\nthe Program), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions. You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n**7.** If, as a consequence of a court judgment or allegation of\npatent infringement or for any other reason (not limited to patent\nissues), conditions are imposed on you (whether by court order,\nagreement or otherwise) that contradict the conditions of this\nLicense, they do not excuse you from the conditions of this License.\nIf you cannot distribute so as to satisfy simultaneously your\nobligations under this License and any other pertinent obligations,\nthen as a consequence you may not distribute the Program at all. For\nexample, if a patent license would not permit royalty-free\nredistribution of the Program by all those who receive copies directly\nor indirectly through you, then the only way you could satisfy both it\nand this License would be to refrain entirely from distribution of the\nProgram.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices. Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n**8.** If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded. In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n**9.** The Free Software Foundation may publish revised and/or new\nversions of the General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number. If the Program\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation. If the Program does not specify a\nversion number of this License, you may choose any version ever\npublished by the Free Software Foundation.\n\n**10.** If you wish to incorporate parts of the Program into other\nfree programs whose distribution conditions are different, write to\nthe author to ask for permission. For software which is copyrighted by\nthe Free Software Foundation, write to the Free Software Foundation;\nwe sometimes make exceptions for this. Our decision will be guided by\nthe two goals of preserving the free status of all derivatives of our\nfree software and of promoting the sharing and reuse of software\ngenerally.\n\n**NO WARRANTY**\n\n**11.** BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nPROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n**12.** IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nPROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n### END OF TERMS AND CONDITIONS\n\n### How to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these\nterms.\n\nTo do so, attach the following notices to the program. It is safest to\nattach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    one line to give the program's name and an idea of what it does.\n    Copyright (C) yyyy  name of author\n\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\nAlso add information on how to contact you by electronic and paper\nmail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details\n    type `show w'.  This is free software, and you are welcome\n    to redistribute it under certain conditions; type `show c' \n    for details.\n\nThe hypothetical commands \\`show w' and \\`show c' should show the\nappropriate parts of the General Public License. Of course, the\ncommands you use may be called something other than \\`show w' and\n\\`show c'; they could even be mouse-clicks or menu items--whatever\nsuits your program.\n\nYou should also get your employer (if you work as a programmer) or\nyour school, if any, to sign a \"copyright disclaimer\" for the program,\nif necessary. Here is a sample; alter the names:\n\n    Yoyodyne, Inc., hereby disclaims all copyright\n    interest in the program `Gnomovision'\n    (which makes passes at compilers) written \n    by James Hacker.\n\n    signature of Ty Coon, 1 April 1989\n    Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program\ninto proprietary programs. If your program is a subroutine library,\nyou may consider it more useful to permit linking proprietary\napplications with the library. If this is what you want to do, use the\n[GNU Lesser General Public\nLicense](https://www.gnu.org/licenses/lgpl.html) instead of this\nLicense.\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 0.1572265625,
          "content": "Chocolate Doom's version history is stored in Git. For a full\nchange log, clone the repository on Github:\n\n    https://github.com/chocolate-doom/chocolate-doom\n\n"
        },
        {
          "name": "HACKING.md",
          "type": "blob",
          "size": 7.16796875,
          "content": "# Coding style guidelines\n\nThe coding style guidelines for Chocolate Doom are designed to keep the\nstyle of the original source code.  This maintains consistency throughout\nthe program, and does not require the original code to be changed. Some\nof these guidelines are stricter than what was done in the original\nsource; follow these when writing new code only: there is no need to\nchange existing code to fit them.\n\nYou should set tabs to *display* as eight spaces, not four.  However,\n*indentation* should be four spaces.  If possible, do not use tab\ncharacters at all.  There is a utility called “expand” which will remove\ntab characters.  For the reasoning behind this, see:\nhttp://www.jwz.org/doc/tabs-vs-spaces.html\n\nPlease write code to an 80 column limit so that it fits within a standard\n80 column terminal. Do not leave trailing whitespace at the end of lines.\n\nFunctions should be named like this: `AB_FunctionName`.  The `AB` prefix\ndenotes the subsystem (`AM_` for automap, `G_` for game, etc).  If a\nfunction is static, you can omit the prefix and just name it like\n`FunctionName`.  Functions and global variables should always be made\nstatic if possible.\n\nPut `_t` on the end of types created with typedef.  Type names like this\nshould be all lowercase and have the subsystem name at the start. An\nexample of this is `txt_window_t`.  When creating structures, always\ntypedef them.\n\nDo not use Hungarian notation.\n\nDo not use the goto statement.\n\nUse C++-style comments, ie. `//` comments, not `/* ... */` comments.\nI don’t care that this isn’t standard ANSI C.\n\nVariables should be named like this: `my_variable_name`, not like this:\n`MyVariableName`.  In pointer variable declarations, place the `*` next\nto the variable name, not the type.\n\nWhen casting variables from one type to another, put a space after the\nlast closing brace.\n\nWhen using an if, do, while, or for statement, always use the { } braces\neven when they are not necessary.  For example, do this:\n\n```c\nif (condition)\n{\n    body;\n}\n```\n\nNot this:\n\n```c\nif (condition)   // NO\n    body;\n```\n\nWrite code like this:\n\n```c\ntypedef struct\n{\n    int member1;\n    char *member2;\n} my_structure_t;\n\nvoid FunctionName(int argument, int arg2, int arg3, int arg4, int arg5,\n                  int arg6, int arg7)\n{\n    int assign_var;\n\n    assign_var = arg2 + arg3 * arg4 * (arg5 + arg6);\n\n    if (foo && !bar || baz && qux || !(foo && bar && baz))\n    {\n        body;\n    }\n    else if (xyz + 4 < abc * 4 + 3)\n    {\n        body;\n    }\n    else\n    {\n        body;\n    }\n\n    if (very_long_condition_like_this_one_that_forces_a_line_break\n     && other_condition)\n    {\n        body;\n    }\n\n    switch (argument)\n    {\n        case FIRST:\n            code;\n            break;\n\n        case SECOND:\n            code;\n            break;\n\n        default:\n            break;\n    }\n\n    for (a = 0; a < 10; ++a)\n    {\n        FunctionCall(arg1, arg2, arg3, arg4,\n                     arg_split_onto_second_line);\n    }\n\n    while (a < 10)\n    {\n        loop_body;\n    }\n\n    do\n    {\n\n    } while (condition);\n}\n```\n\n## Editor-specific default settings\n\nIf you use vim, you can put this into your `.vimrc` (or install the\n`localvimrc` script):\n\n```\nset expandtab\nset tabstop=8\nset softtabstop=4\nset shiftwidth=4\n```\n\nOr, if you use Emacs, put this in your `.emacs`:\n\n```lisp\n(add-hook 'c-mode-hook (lambda ()\n  (when (and buffer-file-name\n             (string-match \"chocolate-doom\" buffer-file-name))\n    (c-set-style \"bsd\")\n    (setq indent-tabs-mode nil)\n    (setq tab-width 8)\n    (setq c-basic-offset 4))))\n```\n\n## Security\n\nThe C standard library has a number of unsafe functions that should be\navoided when writing code for Chocolate Doom. These are:\n\nUnsafe function   |   Safer alternative\n------------------|------------------------\n`gets()`          |  `fgets(.., stdin)`\n`sprintf`         |  `M_snprintf()`\n`snprintf`        |  `M_snprintf()`\n`vsprintf`        |  `M_vsnprintf()`\n`vsnprintf`       |  `M_vsnprintf()`\n`strcpy()`        |  `M_StringCopy()`\n`strncpy()`       |  `M_StringCopy()`\n`strcat()`        |  `M_StringConcat()`\n`strncat()`       |  `M_StringConcat()`\n`strdup()`        |  `M_StringDuplicate()`\n`realloc()`       |  `I_Realloc()`\n\nLots of the code includes calls to DEH_String() to simulate string\nreplacement by the Dehacked tool. Be careful when using Dehacked\nreplacements of printf format strings. For example, do not do this:\n\n```c\nprintf(DEH_String(\"foo %s\"), s);\nsprintf(mybuf, DEH_String(\"bar %s\"), t);\n```\n\nInstead do this:\n\n```c\nDEH_printf(\"foo %s\", s);\nDEH_snprintf(mybuf, sizeof(mybuf), \"bar %s\", t);\n```\n\nThis does the format string replacement safely in a way that checks\nthe arguments securely.\n\n## Portability\n\nChocolate Doom is designed to be cross-platform and work on different\nOperating Systems and processors.  Bear this in mind when writing code.\n\nDo not use the `long` type (its size differs across platforms; use\n`int` or `int64_t` depending on which you want).\n\nUse Doom’s byte data type for byte data. `int` is assumed to be a\n32-bit integer, and `short` is a 16-bit integer. You can also use the\nISO C99 data types: `intN_t` and `uintN_t` where N is 8, 16, 32, 64.\n\nBe careful with platform dependencies: do not use Windows API\nfunctions, for example.  Use SDL where possible.\n\nPreprocessor `#defines` are set that can be used to identify the OS\nif necessary: `_WIN32` for Windows and `__MACOSX__` for Mac OS X. Others\nare set through SDL.  Try to avoid this if possible.\n\nBe careful of endianness!  Doom has `SHORT()` and `LONG()` macros that\ndo endianness conversion.  Never assume that integer types have a\nparticular byte ordering.  Similarly, never assume that fields\ninside a structure are aligned in a particular way.  This is most\nrelevant when reading or writing data to a file or a network pipe.\n\nFor signed integers, you shouldn’t assume that `(i >> n)` is the same as\n`(i / (1 << n))`.  However, most processors handle bitshifts of signed\nintegers properly, so it’s not a huge problem.\n\nDue to Microsoft implementation of the Unicode support in C standard\nlibrary you should use these wrappers to support non-latin paths and\nfilenames on Windows.\n\nC library function |   Wrapper\n-------------------|-------------------\n`fopen()`          |  `M_fopen()`\n`remove()`         |  `M_remove()`\n`rename()`         |  `M_rename()`\n`stat()`           |  `M_stat()`\n`mkdir()`          |  `M_MakeDirectory()`\n`getenv()`         |  `M_getenv()`\n\n## GNU GPL and licensing\n\nAll code submitted to the project must be licensed under the GNU GPLv2 or a\ncompatible license.  If you use code that you haven’t 100% written\nyourself, say so. Add a copyright header to the start of every file.  Use\nthis template:\n\n```\n//\n// Copyright(C) YEAR Author's name\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n//\n// *File description goes here*\n//\n```\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 2.0185546875,
          "content": "AUX_DIST_GEN =                          \\\n        $(ac_aux_dir)/install-sh        \\\n        $(ac_aux_dir)/missing\n\nCMAKE_FILES=                                   \\\n        CMakeLists.txt                         \\\n        cmake/FindSDL2.cmake                   \\\n        cmake/FindSDL2_mixer.cmake             \\\n        cmake/FindSDL2_net.cmake               \\\n        cmake/FindFluidSynth.cmake             \\\n        cmake/Findm.cmake                      \\\n        cmake/FindSampleRate.cmake             \\\n        cmake/config.h.cin\n\nDOC_FILES=                              \\\n        COPYING.md                      \\\n        README.md                       \\\n        README.Music.md                 \\\n        NEWS.md                         \\\n        PHILOSOPHY.md                   \\\n        ChangeLog\n\nEXTRA_DIST=                             \\\n        $(AUX_DIST_GEN)                 \\\n        $(CMAKE_FILES)                  \\\n        $(DOC_FILES)                    \\\n        NOT-BUGS.md                     \\\n        README.Strife.md                \\\n        .lvimrc                         \\\n        HACKING.md                      \\\n        TODO.md                         \\\n        rpm.spec                        \\\n        win32/win_opendir.c             \\\n        win32/win_opendir.h\n\ndoomdocsdir = ${docdir}/../${PROGRAM_PREFIX}doom\ndoomdocs_DATA = $(DOC_FILES) NOT-BUGS.md\n\nhereticdocsdir = ${docdir}/../${PROGRAM_PREFIX}heretic\nhereticdocs_DATA = $(DOC_FILES)\n\nhexendocsdir = ${docdir}/../${PROGRAM_PREFIX}hexen\nhexendocs_DATA = $(DOC_FILES)\n\nstrifedocsdir = ${docdir}/../${PROGRAM_PREFIX}strife\nstrifedocs_DATA = $(DOC_FILES) README.Strife.md\n\nMAINTAINERCLEANFILES =  $(AUX_DIST_GEN)\n\nSUBDIRS=textscreen opl pcsound data src man\n\nDIST_SUBDIRS=pkg $(SUBDIRS)\n\nif HAVE_DOC\n\nINSTALL : man/INSTALL.template man/simplecpp\n\t$(srcdir)/man/simplecpp -DDOOM -DHERETIC -DHEXEN -DSTRIFE \\\n            -DLONG_GAME_NAME=\"@PACKAGE_SHORTNAME@ Doom\" \\\n            -DLONG_EXE_NAME=\"@PROGRAM_PREFIX@doom\" \\\n\t                < $(srcdir)/man/INSTALL.template > $@\n\nendif\n"
        },
        {
          "name": "NEWS.md",
          "type": "blob",
          "size": 70.0302734375,
          "content": "## 3.1.0 (2024-08-01)\n\n### General\n  * Drag and drop loading of WAD, Dehacked and demo files is now supported on\n    Windows - simply drag the files onto chocolate-doom.exe (thanks Fabian).\n  * WAD file autoloading was added - WAD and DEH files can be copied into\n    an autoload folder to be automatically included on every game start.\n  * Music pack configuration has been significantly simplified. By simply\n    copying .flac/.ogg music files into a folder they will be automatically\n    detected by filename and used.\n  * Music packs can now be used with OPL as a fallback, and music pack\n    config files can have any name ending in '.cfg'.\n  * MP3 music packs are now supported.\n  * Network synchronization now uses a PID controller by default, which\n    makes games more smooth and more stable, especially for Internet play.\n  * UDP hole punching is now used to make servers behind NAT gateways\n    automatically accessible to the Internet.\n  * OPL emulation now uses Nuked OPL3 v1.8 (thanks nukeykt)\n  * Allow simultaneous PC speaker emulation and OPL emulation\n    (thanks Michael Day).\n  * The setup tool now uses \"Romero Blue\" as a background (see the wiki:\n    <https://doomwiki.org/wiki/Romero_Blue> for more info).\n  * The 0 and 5 keys on the number pad can now be bound independently\n    of any other keyboard key (thanks BlooD2ool).\n  * With aspect ratio correction disabled, the game can scale to any\n    arbitrary size and remove all black borders in full screen mode.\n    (thanks chungy)\n  * The executable's location is now checked when looking for IWADs.\n  * The IWAD files installed by Steam-on-Linux are now detected (thanks\n    chungy).\n  * It's now possible to use `-response` to load response files.\n  * Default savegame name now includes the WAD filename (thanks Fabian).\n  * Mouse movement is no longer read when the game window is inactive\n    (thanks Julia Nechaevskaya).\n  * Chocolate Doom now by default generates a \"pet name\" for the user\n    to respect privacy (thanks Jon!)\n  * The Freedoom single-player IWAD files are now officially supported,\n    since recent versions changed all levels to be vanilla compatible.\n  * Add native support for the FluidSynth midi synthesizer.\n  * Add a fsynth_gain config key to fine tune the FluidSynth output level\n    (thanks Fabian).\n  * Redesign of native MIDI support in Windows (thanks ceski and Roman Fomin):\n    - Emulates DMX MPU-401 feature set by default, change with\n      `winmm_complevel`.\n    - MIDI device reset between songs using \"GM System On\", change with\n      `winmm_reset_type`.\n    - Configurable delay after reset for legacy MIDI hardware (e.g. Roland\n      SC-55), change with `winmm_reset_delay`.\n  * Add improved gamepad support via the SDL\\_GameController interface. This\n    includes support for analog triggers, modern dual-stick default bindings\n    (based on Unity Doom), descriptive button names for common controller types\n    and configurable dead zones for stick axes. (Michael Day).\n  * All games now have shiny new icons!\n  * The -display parameter was added to specify the display number on which to show the screen (thanks Robin Emeršič).\n\n### Build systems\n  * SDL2_mixer and SDL2_net can now be optionally disabled to increase\n    portability to systems that might not support audio or networking\n    (thanks turol).\n  * Travis CI was replaced with GitHub Actions (thanks Michael Francis).\n  * mingw CI was added for automatic Windows-building (thanks turol).\n  * A cpp-linter CI was added to improve the quality and formatting of code\n    (thanks turol).\n  * The `--disable-zpool` autoconf argument for disabling memory pooling was\n    added to make debugging easier (thanks turol).\n  * Python 2 has been deprecated and Python 3 is now used exclusively\n  (thanks Fabian).\n\n### Refactorings\n  * CMake project files have been added, replacing the Microsoft Visual\n    Studio and Code::Blocks files. CMake maintains support for multiple\n    IDEs and versions thereof, and reduces developer overhead when updating\n    Chocolate Doom (huge thanks to AlexMax for this work).\n  * Source code has been retrofitted to fix many compiler warnings and\n    add const annotations to many variables (thanks turol).\n  * Several functions have been hardened against incomplete reads and\n    error conditions, and made safer (thanks turol).\n  * Man page generation has been reworked to use autoconf macro\n    substitution, making it eaiser for downstream forks to change the\n    project name (thanks Jon).\n  * We now print a meaningful error message when a savegame cannot be\n    loaded (thanks Zodomaniac, chungy).\n  * There's now a log file feature for the network code to aid in tracking\n    down multiplayer bugs.\n  * AppData files were updated to the AppStream standard (thanks Mike).\n  * Many abuses of the extern keyword have been cleaned up to prevent\n    undefined behavior (thanks turol).\n  * Install of bash completion scripts was fixed (thanks Mike Swanson).\n\n### Bug fixes\n  * Fixed an exception thrown by the Windows kernel when debugging with\n    GDB (thanks AXDOOMER).\n  * Loop metadata now works properly with music packs on Windows.\n  * Mouse movement is ignored when the game window isn't active (thanks\n    Julia Nechaevskaya).\n  * A bug was fixed where music would not play after pausing on an\n    intermission screen (thanks Julia Nechaevskaya).\n  * Timeouts when connecting to a network server were fixed (thanks\n    @bradc6).\n  * A long-standing bug where some visplane overflows caused crashes was\n    fixed (thanks Michael Francis).\n  * A multiplayer deadlock bug where clients would stop sending tics after\n    missing tics from the server was fixed. There are both client- and\n    server- side fixes to fix the problem when playing with older versions\n    (thanks MadDog and Mortrixs for help tracking this down).\n  * The macOS launcher now quits automatically when all windows are closed.\n  * The mouse speed calibration thermometer was fixed.\n  * Some improvements have been made to PC speaker emulation to better match\n    Vanilla (thanks NY00123).\n  * Filenames and paths with non-latin characters now work on Windows\n    (thanks Roman Fomin).\n  * Properly handle orphan carriage returns when parsing deh files\n    (thanks Michael Day).\n\n### Doom\n  * Doom 1.2 demo support was added (thanks James Canete!)\n  * Map33 intermission screen and map33-map35 automap names are\n    emulated (thanks CapnClever).\n  * We now exit gracefully when player starts are missing (thanks Michael\n    Francis).\n  * We now exit gracefully on levels with a boss brain and no boss spitter\n    things (thanks Jason Benaim).\n  * It's now possible to play multiplayer with gameversion=1.2.\n  * When the game hits the limit for the number of wall scrollers, a count\n    of the number of scrollers is now displayed (thanks Jon).\n  * Sector special 17 (random light flicker) is now accurately emulated to\n    only appear in gameversion > 1.2 (thanks tpoppins).\n  * Fixed mouse events causing unwanted key presses (thanks Michael Day).\n  * French Doom II files doom2f.wad and french.deh are now automatically\n    detected (thanks Acts19quiz).\n  * Mouse buttons are now bindable to run (thanks Archenoth).\n  * The \"Sky never changes in Doom II\" bug is now accurately emulated\n    (thanks Michael Francis).\n  * Mouse buttons are now bindable to turn left/right (thanks Fabian).\n  * Fix possible undefined behavior and accurately emulate vanilla when -skill\n    parameter is given a negative value (thanks Henrique Jorge).\n\n### Heretic\n  * P\\_FindNextHighestFloor was changed to match vanilla behavior (thanks\n    AXDOOMER).\n  * WAD hash table is now generated for speed (thanks Michael Francis).\n  * HHE level name replacements now apply on the intermission screen\n    (thanks ETTiNGRiNDER).\n  * Mouse buttons are now bindable to scroll through inventory and\n    \"use artifact\" (thanks Michael Day).\n  * Mouse buttons are now bindable to run (thanks Archenoth).\n  * Multiplayer demo playback was fixed (thanks Ryan Krafnick).\n  * The GOG.com release is now detected (thanks Mike Swanson).\n  * Mouse buttons are now bindable to turn left/right (thanks Fabian).\n  * Fix NULL backsector crash (thanks kitchen-ace and Julia Nechaevskaya).\n\n### Hexen\n  * ACS code has been hardened against potential security vulnerabilities.\n  * WAD hash table is now generated for speed (thanks AXDOOMER).\n  * Mouse buttons are now bindable to scroll through inventory and\n    \"use artifact\" (thanks Michael Day).\n  * Mouse buttons are now bindable to run (thanks Archenoth).\n  * Multiplayer demo playback was fixed (thanks Ryan Krafnick).\n  * The GOG.com release is now detected (thanks Mike Swanson).\n  * Mouse buttons are now bindable to turn left/right (thanks Fabian).\n  * Fixed demo desyncs in P_LookForPlayers (thanks Michael Day)\n  * Add support for two different v1.1 variants through -gameversion\n    argument (thank NY00123).\n\n### Strife\n  * Sehacked replacements of the \"empty slot\" string now work.\n  * VOICES.WAD is now found in a case-insensitive way (thanks Michael Francis).\n  * PC speaker sound effects are now supported (thanks ceski).\n  * Mouse buttons are now bindable to turn left/right (thanks Fabian).\n  * Fixed demo desyncs in P_LookForPlayers (thanks Michael Day)\n  * Fix possible undefined behavior and accurately emulate vanilla when -skill\n    parameter is given a negative value (thanks Henrique Jorge).\n\n## 3.0.1 (2020-06-24)\n\nThis is a point release that includes two security fixes related to Chocolate\nDoom server logic.\n\nThanks to Michał Dardas from LogicalTrust for discovering the vulnerability.\n\n### Bug fixes\n  * ([CVE-2020-14983](https://nvd.nist.gov/vuln/detail/CVE-2020-14983)) Fixed a vulnerability where\n    an unchecked `num_players` field in the server logic could allow a malicious attacker to trigger\n    arbitrary code execution against Chocolate Doom servers.\n  * Fixed an issue where a client could crash if the server sent an invalid `ticdup` setting.\n\n## 3.0.0 (2017-12-30)\n\n  Chocolate Doom 3.0 is a new major revision. The main change is that\n  the codebase has been ported to SDL 2.0. This brings a number of\n  benefits, although there have also been some other minor changes (all\n  listed below).\n\n  Huge thanks go to the entire Chocolate Doom team for working on the\n  port to SDL2, and to all the testers who have found and reported bugs\n  during its development.\n\n### General\n  * All screen scaling is now performed in hardware, meaning that the\n    game can run in arbitrary window sizes in high quality. It can also\n    scale to very large resolutions sizes without using large amounts of\n    CPU or suffering degraded performance (thanks Fabian).\n  * It is now possible to switch between windowed and full screen modes\n    while the game is running by pressing alt + enter (thanks Jon)\n  * Windows binaries now ship with several previously-optional DLLs.\n    This means it is now possible to take PNG screenshots and to use\n    digital music packs (FLAC/Ogg Vorbis formats).\n  * The game now remembers your preferred monitor and will start on the\n    same monitor you were using the last time you played. Windows appear\n    centered on the screen.\n  * The OS X launcher was tweaked somewhat, and now uses proper path\n    controls for choosing files. FreeDM was added as an IWAD.\n  * Configuration files on Mac OS X and Unix are now stored in locations\n    compliant with the XDG standard (thanks chungy):\n    - On Unix: `~/.local/share/chocolate-doom/`\n    - On OS X: `~/Library/Application Support/chocolate-doom/`\n  * Icons when the game is running are now a higher resolution.\n  * Keyboard input is improved and uses the new SDL input API; on\n    systems with on-screen keyboards, this should activate the on-screen\n    keyboard when it is appropriate.\n  * Menu navigation with the joystick is now much more practical, and\n    it’s possible to bind a joystick axis to look up/down in games which\n    support it (thanks Jon, Wintermute0110).\n  * Several command line options were removed that were judged to be\n    useless: `-grabmouse`, `-novert` and `-nonovert`. The mouse grabbing\n    and novert settings can still be configured in the setup tool.\n  * There is no longer any option in the setup tool to specify a screen\n    resolution, since in full screen mode the game just runs at the\n    desktop resolution without changing screen modes. If necessary, the\n    config file options `fullscreen_width` and `fullscreen_height` can\n    be used to explicitly set a screen resolution.\n  * There is no longer a soft dependency on Zenity on Unix systems; the\n    SDL API is now used to display error dialogs.\n  * Joysticks are identified more precisely using GUID now.\n  * A new parameter, `-savedir` allows users to specify a directory from\n    which to load and save games. (thanks CapnClever)\n  * The midiproc code from Eternity Engine has been imported, improving\n    native MIDI playback on Windows and fixing a long-standing bug with\n    music volume adjustment (thanks AlexMax, Quasar).\n  * VGA “porch” emulation was added (thanks Jon).\n  * The codebase now compiles with OpenWatcom (thanks Stephen Finniss).\n\n### Doom\n  * The GOG install of Doom 3: BFG Edition is now detected (thanks chungy)\n  * A `-shorttics` command line parameter was added that simulates\n    recording a vanilla demo without actually recording a demo.\n\n### Hexen\n  * The CD audio option for music playback has been removed; the CD\n    playback API has been removed from SDL 2.0. However, it is possible\n    to use digital music packs as an alternative.\n\n### Strife\n  * `voices.wad` is now correctly loaded before PWADs (thanks\n    @Catoptromancy)\n\n### libtextscreen\n  * On OS X on machines with retina displays, text screens are rendered\n    using a high detail font.\n  * File selector widgets now look more visually distinctive.\n  * There is now a convenience widget for conditionally hiding widgets.\n  * Font handling was restructured to be based around PNG format fonts\n    which are converted during the build and can be more easily edited.\n  * Handling of code pages was cleaned up, so it is easier to change the\n    code to work with a different code page now.\n  * Lots of the UI code was changed to use UTF-8 strings.\n  * File extensions when using the Zenity file selector are now case\n    insensitive (thanks Jon).\n\n## 2.3.0 (2016-12-29)\n\n### General\n  * Bash completion scripts are included (thanks Fabian)\n  * The OS X launcher now supports the .lmp file format (thanks Jon)\n  * Pitch-shifting from early versions of Doom, Heretic, and Hexen.\n    is now supported (thanks Jon)\n  * Aspect ratio-corrected 1600×1200 PNGs are now written (thanks Jon)\n  * OPL emulation is more accurate (thanks Nuke.YKT)\n  * DMX bugs with GUS cards are now better emulated (thanks Nuke.YKT)\n  * The disk activity floppy disk icon is now shown (thanks Fabian, Jon)\n  * Checksum calculations are fixed on big endian systems, allowing\n    multiplayer games to be played in mixed little/big-endian\n    environments (thanks GhostlyDeath, njankowski)\n  * The NES30, SNES30, and SFC30 gamepads are detected and configured\n    automatically by the Setup tool. The automap can also be configured\n    to a joystick button (thanks Jon)\n  * The vanilla limit of 4046 lumps per WAD is now enforced (thanks\n    Jon, Quasar, Edward-san)\n  * Solidsegs overflow is emulated like in vanilla (thanks Quasar)\n  * Multiple capitalizations are now tried when searching for WAD files,\n    for convenience when running on case sensitive filesystems (thanks\n    Fabian).\n  * A new command line argument, `-strictdemos`, was added, to allow\n    more careful control over demo format extensions. Such extensions\n    are now forbidden in WAD files and warning messages are shown.\n\n### Build systems\n  * There is better compatibility with BSD Make (thanks R.Rebello)\n  * `./configure --with-PACKAGE` checks were repaired to behave\n    logically, rather than disabling the feature (thanks R.Rebello)\n  * Games are now installed to ${bindir} by default, eg.\n    /usr/local/bin, rather than /usr/local/games (thanks chungy)\n  * Visual Studio 2015 is now supported (thanks Azarien)\n  * SDL headers and libraries can now exist in the Microsoft Visual\n    Studio project directory (thanks Quasar)\n  * CodeBlocks projects were repaired by removing non-existent files\n    from the project files (thanks krystalgamer)\n\n### Doom\n  * Chex Quest’s level warp cheat (LEESNYDER##) now behaves more like\n    like the original EXE (thanks Nuke.YKT)\n  * It’s now possible to start multiplayer Chex Quest games.\n  * Freedoom: Phase 1 <= 0.10.1 can now be loaded with mods, with\n    -gameversion older than ultimate (thanks Fabian, chungy)\n  * The IWAD order preference for GOG.com installs matches vanilla\n    Final Doom: doom2, plutonia, tnt, doom (thanks chungy)\n  * There are better safety checks against write failures when saving\n    a game, such as when the directory is read-only (thanks\n    terrorcide)\n  * Versions 1.666, 1.7, and 1.8 are emulated (thanks Nuke.YKT)\n  * Crashes are now handled more gracefully when a linedef references\n    nonexistent sidedefs (thanks Fabian)\n\n### Heretic\n  * Map names were added for Episode 6, fixing a crash after completing\n    a level in this episode (thanks J.Benaim)\n  * Support for unlimited demo/savegames was added (thanks CapnClever)\n  * Demo support is expanded: `-demoextend` allows demos to last longer\n    than a single level; `-shortticfix` adjusts low-resolution turning\n    to match Doom’s handling, and there is now `-maxdemo` and `-longtics`\n    support (thanks CapnClever)\n\n### Hexen\n  * The MRJONES cheat code returns an identical string to vanilla, and\n    enables fully reproducible builds (thanks Fabian)\n  * An issue was fixed where the game crashed while killing the\n    Wraithverge in 64-bit builds (thanks J.Benaim)\n  * Support for unlimited demo/savegames was added (thanks CapnClever)\n  * Mouse buttons for strafe left/right and move backward were added,\n    as well as a “Double click acts as use” mouse option (thanks\n    CapnClever)\n  * Demo support is expanded: `-demoextend` allows demos to last longer\n    than a single level; `-shortticfix` adjusts low-resolution turning\n    to match Doom’s handling, and there is now `-maxdemo` and `-longtics`\n    support (thanks CapnClever)\n\n### Strife\n  * Support was added for automatic loading of the IWAD from the GOG.com\n    release of Strife: Veteran Edition on Windows (thanks chungy)\n  * Jumping can now be bound to a mouse button (thanks Gez)\n  * Gibbing logic was changed to match vanilla behavior (thanks Quasar)\n  * Several constants differences from vanilla were fixed (thanks\n    Nuke.YKT, Quasar)\n  * When using -iwad, voices.wad from the IWAD’s directory is prefered\n    over auto-detected DOS/Steam/GOG.com installs (thanks Quasar)\n\n### libtextscreen\n  * The API for creating and managing tables and columns was simplified.\n  * It’s now possible to cycle through tables with the tab key.\n  * Windows can now have multiple columns.\n\n## 2.2.1 (2015-09-10)\n\n  Chocolate Doom has not seen a great deal of “stable” patch releases\n  in its history. While the development tree sees major new features\n  and changes, the purpose of this release, and hopefully others to\n  follow like it, is to repair some deficiencies that existed\n  in 2.2.0.\n\n### General\n  * Preferences for the OS X launcher are now stored with a unique\n    name to not conflict with other applications. (thanks\n    Xeriphas1994)\n  * Unix desktop entry files are now brought up to full desktop entry\n    specification compliance. (thanks chungy, Fabian)\n  * Unix AppData entries are now included, allowing software centers\n    to display detailed information about the engines. (thanks chungy)\n  * Partial XDG base directory specification compliance on Unix\n    systems now exist to search for IWAD paths.  One benefit is that\n    $HOME/.local/share/games/doom is now a valid location to store and\n    automatically find IWADs. (thanks chungy)\n\n### Build systems\n  * The Microsoft Visual Studio build system was not fully functional\n    in 2.2.0 and has been fixed. (thanks Linguica)\n  * The autoconf build system checks for windres only for Windows\n    toolchains.  Some Linux distributions mistakingly include the\n    program in their native toolchains. (thanks Fabian)\n  * A compiler hint for packed structs has been added, which otherwise\n    broke the games when built under recent GCC releases for\n    Windows. (thanks Fabian)\n\n### Doom\n  * The GOG.com releases of The Ultimate Doom, Doom II, and Final Doom\n    are now detected and supported on Windows. (thanks chungy)\n  * An integer overflow was used in spawn angle calculation, undefined\n    C behavior which broke with Clang optimization.  (thanks David\n    Majnemer for insight)\n\n### Setup tool\n  * The help URL for the level warp menu now points to the proper wiki\n    page, rather than the multiplayer page.\n  * The manifest has been updated for Windows 10 compatibility.\n    (thanks chungy)\n\n## 2.2.0 (2015-06-09)\n\n  * The Hexen four level demo IWAD is now supported. Thanks to Fabian\n    Greffrath for his careful investigation and emulation of the demo\n    game’s behavior in developing this.\n  * OPL music playback has been improved in a number of ways to match\n    the behavior of Vanilla Doom’s DMX library much more closely. OPL3\n    playback is also now supported. Thanks go to Alexey Khokholov for\n    his excellent research into the Vanilla DMX library that enabled\n    these improvements.\n  * New gamepad configurations:\n      - PS4 DualShock 4 (thanks Matt “3nT” Davis).\n      - Xbox One controller on Linux (thanks chungy).\n      - “Super Joy Box 7” USB/PC gameport adapter.\n  * The Doom reload hack has been added back. See the wiki for more\n    context on this: http://doomwiki.org/wiki/Reload_hack\n  * The IWAD file from Strife: Veteran Edition is now detected\n    automatically (thanks chungy).\n  * It’s now possible to build outside of the source directory (thanks\n    Dave Murphy).\n  * MSVC project files were brought up to date (thanks dbrackett16).\n  * M_StringDuplicate() has been added as a safer replacement for\n    strdup() (thanks Quasar). M_StringCopy() now handles short buffers\n    more gracefully.\n  * The netgame discrepancy window is now dismissed by pressing enter\n    to proceed, not escape (thanks AXDOOMER).\n  * A couple of source files that were in the previous release and\n    were GPL3 have been replaced by GPL2 equivalents. Previous\n    releases that included these files should be retroactively\n    considered GPL3.\n\n### Bug fixes\n  * A long-standing bug that could cause every display frame to be\n    rendered twice was fixed (thanks Linguica, Harha, AXDOOMER).\n  * Lots of endianness fixes were integrated that were found by Ronald\n    Lasmanowicz during development of his Wii port of Chocolate Doom,\n    including a fix for a bug that could cause monsters to become\n    partially invisible.\n  * DeHackEd files without a newline character at the EOF are now\n    correctly parsed (thanks Fabian).\n  * An infinite loop that could occur in the weapon cycling code was\n    fixed (thanks raithe, Fabian).\n  * Mouse input triggered by cursor warp was fixed (thanks Super6-4).\n  * Loop tags in substitute music files are ignored if both of the\n    loop tags are equal to zero. This makes us consistent with other\n    source ports that support the tags.\n  * It’s now possible to more conveniently play back demo .lmp files\n    with names that end in the all-caps “.LMP” (thanks Ioan Chera).\n  * Some code that accessed memory after freeing it was fixed. Two new\n    parameters, -zonezero and -zonescan, were added to try to help\n    detect these cases.\n  * Mistaken assumptions about representations of booleans that\n    affected some ARM systems were fixed (thanks floppes).\n  * memcpy() uses on overlapping memory were changed to use memmove(),\n    fixing abort traps on OpenBSD (thanks ryan-sg).\n  * Hyphens in manpages were fixed (thanks chungy, Fabian).\n  * Lots of compiler build warnings were fixed (thanks Fabian).\n\n### Setup tool\n  * The setup tool now has help buttons for its various different\n    screens, which link to articles on the wiki that give more\n    information (thanks to chungy for helping to put the wiki pages\n    together).\n  * A fix was applied for a buffer overrun that could occur if the\n    user had lots of IWAD files installed (thanks Fabian).\n  * A crash related to username lookup was fixed.\n  * It’s now possible to connect via the setup tool to multiplayer\n    servers that are not listening on the default port (thanks\n    AXDOOMER).\n\n### Doom\n  * Sky transitions when emulating the id anthology version of the\n    Final Doom executable were fixed (thanks AXDOOMER, Fabian,\n    chungy).\n  * Structure fields in the stair-building functions were fixed to be\n    deterministic, fixing a desync in mm09-512.lmp (thanks Fabian).\n\n### Hexen\n  * A bug with texture names that had long names was fixed (thanks\n    ETTiNGRiNDER).\n  * Minotaur spawn time is now stored in little endian format, fixing\n    a bug that affected compatibility with Vanilla savegames on big\n    endian systems.\n  * Code that starts ACS scripts is no longer compiler-dependent.\n\n### Strife (all these are thanks to Quasar)\n  * Sound priority was changed, so that the ticking sound that Stalker\n    enemies make while active matches Vanilla behavior (thanks\n    GeoffLedak).\n  * Minor fixes to game behavior to match Vanilla, discovered during\n    development of Strife: Veteran edition.\n  * Behavior of descending stairs was fixed to match Vanilla.\n  * Inventory items beyond the 8-bit range are now allowed in\n    netgames.\n  * Automap behavior better matches Vanilla now.\n  * Multiplayer name changes were fixed.\n  * Sound origin behavior for switches was fixed.\n  * Teleport beacon behavior was fixed.\n  * Default Strife skill level and screen size were changed to match\n    Vanilla.\n  * Bug was fixed where Rowan would not always take Beldin’s ring.\n  * Totally-invisible objects are now displayed correctly, and a\n    Vanilla glitch with Shadow Acolytes is correctly emulated.\n  * The level name for MAP29 (Entity’s Lair) was fixed (thanks\n    chungy).\n\n### libtextscreen\n  * The main loop now exits immediately once all windows are closed\n    (thanks AXDOOMER).\n  * The large font is no longer selected based entirely on screen\n    size.\n\n## 2.1.0 (2014-10-22)\n\n  Chocolate Doom now supports high-quality substitute music packs that\n  are used in place of the original MIDI music tracks. I’m hoping to\n  put together high-quality recordings of the music for all supported\n  games using the Roland SC-55 synthesizer originally used to compose\n  Doom’s music (thanks twipley and MusicallyInspired).\n\n  Support for joysticks and gamepads has been significantly improved\n  in this version. Most gamepads should now work; if they don’t,\n  please report a bug. A number of gamepads are now automatically\n  detected and configured automatically; if yours is not, you can help\n  by sending in details. See the following page:\n\n  http://www.chocolate-doom.org/wiki/index.php/Adding_your_gamepad\n\n  OPL MIDI playback has been significantly improved, and problems with\n  most tracks should now be resolved. Multi-track MIDI files now play\n  back properly, MIDI tempo meta events are now supported and problems\n  with stuttering when playing certain tracks have been fixed. If you\n  still have problems with OPL playback, let me know.\n\n  Also of note is that Chocolate Doom now has a document that\n  describes the philosophy of the project and the reasoning behind its\n  design (see PHILOSOPHY distributed with the source).\n\n### Other new features\n  * There is now a -dehlump command line parameter to load Dehacked\n    files contained inside WAD files (thanks Fabian Greffrath).\n  * PNG format screenshots are now supported, and there is a dedicated\n    key binding for taking screenshots without needing to always use\n    -devparm (thanks Fabian Greffrath). The PrintScreen key can be\n    used as a key binding (thanks AXDOOMER).\n  * There is now a config file variable (snd_maxslicetime_ms) to\n    control the sound buffer size, and the default is more precise to\n    reduce sound latency (thanks Holering).\n  * You can now use an external command for music playback (thanks\n    Holering).\n  * All games now detect if you’re tring to play using the wrong type\n    of IWAD (doom.wad with Hexen, etc.) and exit with a helpful error\n    message. A couple of users made this mistake after the 2.0 release\n    introduced support for the new games.\n  * The OS X app now associates with .hhe and .seh files.\n  * There is now a -nodes parameter that automatically starts a\n    netgame when a desired number of players have joined the game.\n  * There is now more extensive documentation about music\n    configuration (README.Music).\n  * On Linux, a GUI pop-up is used when the game quits with an error\n    to show the error message (thanks Willy Barro).\n  * There are now Linux .desktop files for all supported games (thanks\n    Mike Swanson).\n  * The -geometry command line parameter can now be used to specify\n    fullscreen or windowed modes, eg. -geometry 640x480w or -geometry\n    1024x768f. (thanks Mike Swanson)\n\n### Doom\n  * Minor workarounds were added to allow the BFG Edition IWADs to be\n    used without crashing the game (thanks Fabian Greffrath).\n  * GUS patch files included with the BFG Edition are now\n    automatically detected.\n  * The “no fog on spawn west” Vanilla bug is now correctly emulated\n    (thanks xttl).\n  * Behavior of older versions of Doom back to v1.666 can now be\n    emulated.\n  * The new Freedoom IWAD names are now recognized and supported.\n  * Freedoom’s DEHACKED lump can now be parsed and is automatically\n    loaded when a Freedoom IWAD file is used (thanks Fabian\n    Greffrath). A new command line parameter, -nodeh, can be used to\n    prevent this from being loaded.\n  * Behavior of the M_EPI4 menu item is now correctly emulated based\n    on game version (thanks AXDOOMER).\n  * IDCLEV up to MAP40 is now supported, to match Vanilla (thanks\n    AXDOOMER).\n  * Level warping on the command line (-warp) to episodes higher than\n    4 is possible, matching Vanilla behavior (thanks plumsinus).\n  * The -cdrom command line parameter writes savegames to the correct\n    directory now, matching Vanilla Doom behavior (thanks AXDOOMER).\n  * The Doom II mission pack to use can now be specified manually on\n    the command line with the -pack parameter (thanks chungy)\n\n### Heretic\n  * Weapon cycling keys for mouse and joystick were fixed (thanks\n    Sander van Dijk).\n  * The -timedemo parameter has been fixed, and -playdemo now handles\n    full paths correctly.\n  * A bug when panning the map was fixed (thanks Chris Fielder).\n  * A savegame bug where plat_t structures were not restored correctly\n    was fixed (thanks romeroyakovlev).\n  * Rebinding of the pause key was fixed (thanks Fabian Greffrath).\n\n### Hexen\n  * Music workarounds have been added so that it is possible to play\n    using the Mac version of the Hexen IWAD file.\n  * Weapon cycling keys for mouse and joystick were fixed (thanks\n    Sander van Dijk).\n  * The -timedemo parameter has been fixed, and -playdemo now handles\n    full paths correctly.\n  * There are now key bindings to allow the artifact keys to be\n    rebound (thanks Fabian Greffrath).\n  * Rebinding of the pause key was fixed (thanks Fabian Greffrath).\n  * Maximum level number was extended to MAP60, allowing multiplayer\n    games using the Deathkings add-on.\n  * The startup screen can now be aborted by pressing escape, like in\n    Vanilla.\n  * Desync when playing back DEMO1 was fixed (thanks alexey.lysiuk).\n\n### Strife\n  * “Show mission” key is configured properly in setup (thanks Sander\n    van Dijk).\n  * Default music volume level now matches Vanilla (thanks AXDOOMER).\n  * Teleport beacon allegiance was fixed to match Vanilla (thanks\n    Quasar).\n  * The stair building code now more closely matches Vanilla (thanks\n    Quasar).\n  * Torpedo weapon changing behavior now matches Vanilla (thanks\n    Quasar).\n\n### Cleanups\n  * The copyright headers at the top of all source files have been\n    vastly simplified.\n  * Unsafe string functions have been eliminated from the codebase.\n    Thanks to Theo de Raadt for calling out Chocolate Doom by name\n    (alongside many other packages) for still using unsafe functions\n    like strcpy: http://marc.info/?l=openbsd-tech&m=138733933417096\n  * vldoor_e enum values are now namespaced to avoid potential\n    conflicts with POSIX standard functions.\n\n### Bug fixes\n  * WAD and Dehacked checksums are now sent to clients and checked\n    correctly when setting up netgames.\n  * A bug was fixed that caused sound not to work in multiplayer games\n    (thanks to everyone who reported this, and for AXDOOMER and Quasar\n    for help in fixing it).\n  * The “D_DDTBLU disease” bug affecting certain MIDI files has been\n    fixed (thanks plumsinus, Brad Harding and Quasar).\n  * Calculation of the -devparm “ticker” dots was fixed to match\n    Vanilla behavior (thanks _bruce_ and AXDOOMER).\n  * The PC speaker code now supports the full range of sound\n    frequencies (thanks Gez).\n  * Annoying “jumping” behavior when grabbing the mouse cursor was\n    fixed.\n  * The screen is now initialized at the native bit depth by default,\n    to avoid problems with systems that don’t handle 8-bit\n    screenbuffers very well any more.\n  * The --docdir argument to the configure script is now honored\n    (thanks Jan Engelhardt).\n  * Various issues with the build were fixed (thanks Jan Engelhardt\n    and Fabian Greffrath).\n  * Backwards parameters were fixed in the sound code (thanks\n    proteal).\n  * A crash was fixed when running fullscreen with the -2 parameter\n    (thanks Fabian Greffrath).\n  * A crash when using large values of snd_channels was fixed (thanks\n    AXDOOMER).\n  * A resource leak in the BSD PC speaker code was fixed (thanks\n    Edward-san).\n  * Windows resource files were fixed for Windows 7 (thanks Brad\n    Harding).\n  * A hard to trigger crash caused by a realloc() in the WAD code was\n    fixed (thanks Fabian Greffrath for debugging).\n  * A bug has been fixed where Chocolate Doom would stay running in\n    the background on Windows after quitting. SDL_Quit() is called now\n    (thanks johnsirett, Brad Harding, Quasar).\n  * String replacements in dehacked lumps can now be overridden if a\n    subsequent dehacked patch replaces the same string.\n\n### libtextscreen\n  * Clicking on scrollbars now jumps to the correct position (thanks\n    AXDOOMER).\n  * A use-after-free bug has been fixed where a click in a window that\n    causes the window to close could lead to a crash (thanks DuClare).\n  * Characters that are unprintable in the Extended ASCII chart are\n    just ignored when they’re typed, rather than appearing as an\n    upside-down question mark (thanks AXDOOMER).\n\n## 2.0.0 (2013-12-09)\n\n  This is version 2.0 of Chocolate Doom! This new major version is\n  released to celeberate the 20th anniversary of the first release of\n  Doom in 1993. Happy Birthday Doom!\n\n  This new version has some major changes compared to the 1.0 series:\n\n  * The codebase now includes Chocolate Heretic and Chocolate\n    Hexen. These are based on the GPL source code released by Raven\n    Software.\n  * Also included is Chocolate Strife. This was developed through a\n    mammoth four year reverse engineering project conducted by James\n    “Quasar” Haley and Samuel “Kaiser” Villareal. The result is the\n    most accurate reproduction of Strife to date, including full demo\n    and savegame compatibility. See README.Strife for more\n    information.\n\n### Minor features that are nonetheless worth mentioning\n  * Chocolate Doom now includes a -statdump command line option, which\n    emulates the output of the statdump.exe tool. This is used to\n    implement a form of regression testing (statcheck) that directly\n    compares against the Vanilla behavior.\n  * Chocolate Heretic includes HHE patch file support, and I believe\n    is the first Heretic port to include this feature.\n  * GUS “pseudo-emulation” is now supported. This does not fully\n    emulate a GUS, but Doom’s DMXGUS lump can be used to generate a\n    Timidity configuration file that plays music using the GUS patch\n    set.\n  * The setup tool now includes a built-in server browser, for use\n    when selecting a server to join.\n\n  Version 2.0 of Chocolate Doom has been in development for a long\n  time, and there have been many bugs fixed over this time, too many\n  to list here. Thanks to all the people who have tested it and\n  diligently reported bugs over this time, and to all the people who\n  have tested the beta releases over the past couple of months.  Your\n  contributions have been essential and invaluable.\n\n## 1.7.0 (2012-06-09)\n\n  * Fixed gnome-screensaver desktop file (thanks Rahul Sundaram).\n  * Updated COPYING to current version of GPL2 (thanks Rahul\n    Sundaram).\n  * Running servers now re-resolve the address of the master server\n    occasionally, to adapt to DNS address changes.\n  * Error dialog is no longer shown on OS X when running from the\n    console.\n  * The Makefiles no longer use GNU make extensions, so the package\n    builds on OpenBSD.\n  * There is now an OPL MIDI debug option (-opldev), useful for when\n    developing GENMIDI lumps.\n  * A workaround for SDL mouse lag is now only used on Windows (where\n    it is needed), and not on other systems. This fixes Chocolate Doom\n    on AmigaOS (thanks Timo Sievänen).\n  * UTF-8 usernames are supported, and Windows usernames with\n    non-ASCII characters are now supported (thanks AXDOOMER).\n\n### Compatibility\n  * Palette accuracy is reduced to 6 bits per channel, to more\n    accurately emulate the PC VGA hardware (thanks GhostlyDeath).\n  * Fixed teleport behavior when emulating the alternate Final Doom\n    executable (-gameversion final2) (thanks xttl).\n\n### Bugs fixed\n  * Fixed weapon cycling keys when playing in Shareware Doom and using\n    the IDKFA cheat (thanks AXDOOMER).\n  * Fixed the default mouse buttons in the setup tool (thanks\n    AXDOOMER).\n  * Chat macros now work when vanilla_keyboard_mapping is turned off.\n  * Default chat macros were fixed in the setup tool.\n  * Ping time calculation was fixed for LAN search, and made more\n    accurate for all searches.\n  * Fixed bug with detection of IWAD type by filename (thanks mether).\n\n### libtextscreen\n  * There is now limited UTF-8 text support in the textscreen library,\n    used in the label and input box widgets.\n  * Scroll bar behavior was fixed (thanks AXDOOMER).\n  * Input boxes stop editing and save when they lose their focus,\n    correcting a previous counterintuitive behavior (thanks Twelve).\n  * The numeric keypad now works properly when entering text values\n    (thanks Twelve).\n\n## 1.6.0 (2011-05-17)\n\n  * The instructions in the INSTALL file are now customized for\n    different platforms, and each binary package contains a version\n    with instructions specific to the platform that it is targetting.\n    This should help to avoid confusion that some users have reported\n    experiencing.\n  * The display settings window in the setup tool has been reorganised\n    to a better arrangement.\n  * It is now possible to load .lmp files (and play back demos) with\n    long filenames (thanks blzut3).\n  * In the setup tool, it is now possible to hold down shift when\n    changing key/mouse/joystick bindings to prevent other bindings to\n    the same key from being cleared (thanks myk).\n  * The joystick menu in the setup tool now has a test button (thanks\n    AXDOOMER).\n  * Specifying the -privateserver option implies -server (thanks\n    Porsche Monty).\n  * The Mac OS X .dmg package now has a background and looks generally\n    more polished.\n  * In Mac OS X, it is now possible to simply double click an IWAD\n    file in the Finder to configure its location within the launcher.\n  * Freedesktop.org desktop files are now installed for Doom and the\n    setup tool, which will appear in the main menu on desktop\n    environments such as Gnome and KDE (thanks Adrián Chaves\n    Fernández).\n  * The Chex Quest dehacked patch (chex.deh) will now be detected if\n    it is in the same directory as the IWAD file.\n\n### Compatibility\n  * Added support for the alternate version of the Final Doom\n    executable included in some later versions of the Id Anthology.\n    This version fixed the demo loop crash that occurred with the\n    “original” Final Doom executable.\n\n    This executable can be selected on the command line with\n    -gameversion final2. It has been made the default when playing\n    with the Final Doom IWADs (the original behavior can be selected\n    with -gameversion final).  (thanks Porsche Monty, Enjay).\n  * Very short sound effects are not played, to better emulate the\n    behavior of DMX in Vanilla Doom (thanks to Quasar for help in\n    investigating this).\n  * The null sector dereference emulation code has been imported from\n    Prboom+ - this fixes a desync with CLNJ-506.LMP (thanks entryway).\n  * The IDMUS cheat doesn’t work when emulating the v1.9 executable\n    (thanks AXDOOMER).\n\n### Bugs fixed\n  * Menu navigation when using joystick/joypad (thanks AXDOOMER).\n  * For configuration file value for shift keys, use scan code for\n    right shift, not left shift (thanks AXDOOMER).\n  * Default joystick buttons for the setup tool now match Vanilla\n    (thanks twipley).\n  * Visual Studio project files work again (thanks GhostlyDeath).\n  * The default sfx/music volume set by the setup tool is now 8\n    instead of 15, matching the game itself. (thanks AXDOOMER).\n  * Weapon cycling from the shotgun to the chaingun in Doom 1 now\n    works properly (thanks AXDOOMER).\n  * MIDI playback that locked up when using an empty MUS / MIDI file\n    (thanks AXDOOMER).\n  * Default sampling rate used by setup tool changed to 44100Hz, to\n    match the game default (thanks AXDOOMER).\n  * Cheat codes and menu hot keys now work when shift is held down or\n    capslock turned on (thanks AXDOOMER).\n\n### libtextscreen\n  * The background on GUI controls now lights up when hovering over\n    them, so that it is more obvious what you are selecting.\n  * It is now possible to type a “+” in input boxes (thanks AXDOOMER).\n  * It is possible to use the mouse wheel to scroll through scroll\n    panes.\n  * Clicking on scroll bars now moves the scroll handle to a matching\n    location.\n  * Clicking outside a dropdown list popup window now dismisses the\n    window.\n  * Window hotkeys that are an alphabetical letter now work when shift\n    is held down or capslock turned on (thanks AXDOOMER).\n\n## 1.5.0 (2011-01-02)\n\n  Big changes in this version:\n\n  * The DOSbox OPL emulator (DBOPL) has been imported to replace the\n    older FMOPL code.  The quality of OPL emulation is now therefore\n    much better.\n  * The game can now run in screen modes at any color depth (not just\n    8-bit modes).  This is mainly to work around problems with Windows\n    Vista/7, where 8-bit color modes don’t always work properly.\n  * Multiplayer servers now register themselves with an Internet\n    master server.  Use the -search command line parameter to find\n    servers on the Internet to play on.  You can also use DoomSeeker\n    (http://skulltag.net/doomseeker/) which supports this\n    functionality.\n  * When running in windowed mode, it is now possible to dynamically\n    resize the window by dragging the window borders.\n  * Names can be specified for servers with the -servername command\n    line parameter.\n  * There are now keyboard, mouse and joystick bindings to cycle\n    through available weapons, making play with joypads or mobile\n    devices (ie. without a proper keyboard) much more practical.\n  * There is now a key binding to change the multiplayer spy key\n    (usually F12).\n  * The setup tool now has a “warp” button on the main menu, like\n    Vanilla setup.exe (thanks Proteh).\n  * Up to 8 mouse buttons are now supported (including the\n    mousewheel).\n  * A new command line parameter has been added (-solo-net) which can\n    be used to simulate being in a single player netgame.\n  * There is now a configuration file parameter to set the OPL I/O\n    port, for cards that don’t use port 0x388.\n  * The Python scripts used for building Chocolate Doom now work with\n    Python 3 (but also continue to work with Python 2) (thanks arin).\n  * There is now a NOT-BUGS file included that lists some common\n    Vanilla Doom bugs/limitations that you might encounter (thanks to\n    Sander van Dijk for feedback).\n\n### Compatibility\n  * The -timer and -avg options now work the same as Vanilla when\n    playing back demos (thanks xttl)\n  * A texture lookup bug was fixed that caused the wrong sky to be\n    displayed in Spooky01.wad (thanks Porsche Monty).\n  * The HacX v1.2 IWAD file is now supported, and can be used\n    standalone without the need for the Doom II IWAD (thanks atyth).\n  * The I_Error function doesn’t display “Error:” before the error\n    message, matching the Vanilla behavior.  “Error” has also been\n    removed from the title of the dialog box that appears on Windows\n    when this happens.  This is desirable as not all such messages are\n    actually errors (thanks Proteh).\n  * The setup tool now passes through all command line arguments when\n    launching the game (thanks AXDOOMER).\n  * Demo loop behavior (ie. whether to play DEMO4) now depends on the\n    version being emulated.  When playing Final Doom the game will\n    exit unexpectedly as it tries to play the fourth demo - this is\n    Vanilla behaviour (thanks AXDOOMER).\n\n### Bugs fixed\n  * A workaround has been a bug in old versions of SDL_mixer (v1.2.8\n    and earlier) that could cause the game to lock up.  Please upgrade\n    to a newer version if you haven’t already.\n  * It is now possible to use OPL emulation at 11025Hz sound sampling\n    rate, due to the new OPL emulator (thanks Porsche Monty).\n  * The span renderer function (used for drawing floors and ceilings)\n    now behaves the same as Vanilla Doom, so screenshots are\n    pixel-perfect identical to Vanilla Doom (thanks Porsche Monty).\n  * The zone memory system now aligns allocated memory to 8-byte\n    boundaries on 64-bit systems, which may fix crashes on systems\n    such as sparc64 (thanks Ryan Freeman and Edd Barrett).\n  * The configure script now checks for libm, fixing compile problems\n    on Fedora Linux (thanks Sander van Dijk).\n  * Sound distortion with certain music files when played back using\n    OPL (eg. Heretic title screen).\n  * Error in Windows when reading response files (thanks Porsche\n    Monty, xttl, Janizdreg).\n  * Windows Vista/7 8-bit color mode issues (the default is now to run\n    in 32-bit color depth on these versions) (thanks to everybody who\n    reported this and helped test the fix).\n  * Screen borders no longer flash when running on widescreen\n    monitors, if you choose a true-color screen mode (thanks exp(x)).\n  * The controller player in a netgame is the first player to join,\n    instead of just being someone who gets lucky.\n  * Command line arguments that take an option now check that an\n    option is provided (thanks Sander van Dijk).\n  * Skill level names in the setup tool are now written the same as\n    they are on the in-game “new game” menu (thanks AXDOOMER).\n  * There is no longer a limit on the lengths of filenames provided to\n    the -record command line parameter (thanks AXDOOMER).\n  * Window title is not lost in setup tool when changing video driver\n    (thanks AXDOOMER).\n\n### libtextscreen\n  * The font used for the textscreen library can be forced by setting\n    the TEXTSCREEN_FONT environment variable to “small” or “normal”.\n  * Tables or scroll panes that don’t contain any selectable widgets\n    are now themselves not selectable (thanks Proteh).\n  * The actions displayed at the bottom of windows are now laid out in\n    a more aesthetically pleasing way.\n\n## 1.4.0 (2010-07-10)\n\n  The biggest change in this version is the addition of OPL emulation.\n  This emulates Vanilla Doom’s MIDI playback when using a Yamaha OPL\n  synthesizer chip, as was found on SoundBlaster compatible cards.\n\n  A software OPL emulator is included as most modern computers do not\n  have a hardware OPL chip any more.  If you do have one, you can\n  configure Chocolate Doom to use it; see README.OPL.\n\n  The OPL playback feature is not yet perfect or 100% complete, but is\n  judged to be good enough for general use.  If you find music that\n  does not play back properly, please report it as a bug.\n\n### Other changes\n  * The REJECT overflow emulation code from PrBoom+ has been\n    imported.  This fixes demo desync on some demos, although\n    others will still desync.\n  * Warnings are now generated for invalid dehacked replacements of\n    printf format strings.  Some potential buffer overflows are also\n    checked.\n  * The installation instructions (INSTALL file) have been clarified\n    and made more platform-agnostic.\n  * The mouse is no longer warped to the center of the screen when the\n    demo sequence advances.\n  * Key bindings can now be changed for the demo recording quit key\n    (normally ‘q’) and the multiplayer messaging keys (normally ‘t’,\n    ‘g’, ‘i’, ‘b’ and ‘r’).\n\n## 1.3.0 (2010-02-10)\n\n  * Chocolate Doom now runs on Windows Mobile/Windows CE!\n  * It is possible to rebind most/all of the keys that control the\n    menu, shortcuts, automap and weapon switching.  The main reason\n    for this is to support the Windows CE port and other platforms\n    where a full keyboard may not be present.\n  * Chocolate Doom now includes a proper Mac OS X package; it is no\n    longer necessary to compile binaries for this system by hand.  The\n    package includes a simple graphical launcher program and can be\n    installed simply by dragging the “Chocolate Doom” icon to the\n    Applications folder. (thanks to Rikard Lang for extensive testing\n    and feedback)\n  * The video mode auto-adjust code will automatically choose windowed\n    mode if no fullscreen video modes are available.\n  * The zone memory size is automatically reduced on systems with a\n    small amount of memory.\n  * The “join game” window in the setup tool now has an option to\n    automatically join a game on the local network.\n  * Chocolate Doom includes some initial hacks for compiling under\n    SDL 1.3.\n  * Recent versions of SDL_mixer include rewritten MIDI code on Mac OS\n    X.  If you are using a version of SDL_mixer with the new code,\n    music will now be enabled by default.\n  * Windows Vista and Windows 7 no longer prompt for elevated\n    privileges when running the setup tool (thanks hobbs and MikeRS).\n  * The Windows binaries now have better looking icons (thanks\n    MikeRS).\n  * Magic values specified using the -spechit command line parameter\n    can now be hexadecimal.\n  * DOOMWADDIR/DOOMWADPATH can now specify the complete path to IWAD\n    files, rather than the path to the directory that contains them.\n  * When recording shorttics demos, errors caused by the reduced\n    turning resolution are carried forward, possibly making turning\n    smoother.\n  * The source tarball can now be used to build an RPM package:\n    rpmbuild -tb chocolate-doom-VER.tar.gz\n\n### Compatibility\n  * The A_BossDeath behavior in v1.9 emulation mode was fixed (thanks\n    entryway)\n  * The “loading” disk icon is drawn more like how it is drawn in\n    Vanilla Doom, also fixing a bug with chook3.wad.\n  * Desync on 64-bit systems with ep1-0500.lmp has (at long last) been\n    fixed (thanks exp(x)).\n  * Donut overrun emulation code imported from Prboom+ (thanks\n    entryway).\n  * The correct level name should now be shown in the automap for\n    pl2.wad MAP33 (thanks Janizdreg).\n  * In Chex Quest, the green radiation suit colormap is now used\n    instead of the red colormaps normally used when taking damage or\n    using the berserk pack.  This matches Vanilla chex.exe behavior\n    (thanks Fuzztooth).\n  * Impassible glass now displays and works the same as in Vanilla,\n    fixing wads such as OTTAWAU.WAD (thanks Never_Again).\n\n### Bugs fixed\n  * Memory-mapped WAD I/O is disabled by default, as it caused various\n    issues, including a slowdown/crash with Plutonia 2 MAP23.  It can\n    be explicitly re-enabled using the “-mmap” command line parameter.\n  * Crash when saving games due to the ~/.chocolate-doom/savegames\n    directory not being created (thanks to everyone who reported\n    this).\n  * Chocolate Doom will now run under Win95/98, as the\n    SetProcessAffinityMask function is looked up dynamically.\n  * Compilation under Linux with older versions of libc will now work\n    (the semantics for sched_setaffinity were different in older\n    versions)\n  * Sound clipping when using libsamplerate was improved (thanks David\n    Flater)\n  * The audio buffer size is now calculated based on the sample rate,\n    so there is not a noticeable delay when using a lower sample rate.\n  * The manpage documentation for the DOOMWADPATH variable was fixed\n    (thanks MikeRS).\n  * Compilation with FEATURE_MULTIPLAYER and FEATURE_SOUND disabled\n    was fixed.\n  * Fixed crash when using the donut special type and the joining\n    linedef is one sided (thanks Alexander Waldmann).\n  * Key settings in a configuration file that are out of range do not\n    cause a crash (thanks entryway).\n  * Fix ear-piercing whistle when playing the MAP05 MIDI music using\n    timidity with EAWPATS (thanks entryway / HackNeyed).\n\n### libtextscreen\n  * There is now a second, small textscreen font, so that the ENDOOM\n    screen and setup tool can be used on low resolution devices\n    (eg. PDAs/embedded devices)\n  * The textscreen library now has a scrollable pane widget. Thanks to\n    LionsPhil for contributing code to scroll up and down using the\n    keyboard.\n  * Doxygen documentation was added for the textscreen library.\n\n## 1.2.1 (2008-12-10)\n\n  This version just fixes a crash at the intermission screen when\n  playing Doom 1 levels.\n\n## 1.2.0 (2008-12-10)\n\n  Happy 15th Birthday, Doom!\n\n  * Chocolate Doom now has an icon that is not based on the\n    proprietary Doom artwork.\n  * There is now memory-mapped WAD I/O support, which should be useful\n    on some embedded systems.\n  * Chex quest emulation support is now included, although an\n    auxiliary dehacked patch is needed (chexdeh.zip in the idgames\n    archive).\n\n### Compatibility\n  * The armor class is always set to 2 when picking up a megasphere\n    (thanks entryway).\n  * The quit screen prompts to quit “to dos” instead of just to quit\n    (thanks MikeRS)\n  * The “dimensional shambler” quit message was fixed.\n  * Fix crash related to A_BFGSpray with NULL target when using\n    dehacked patches - discovered with insaned2.deh (thanks CSonicGo)\n  * NUL characters are stripped from dehacked files, to ensure correct\n    behavior with some dehacked patches (eg. the one with portal.wad).\n\n### Bugs fixed\n  * “Python Image Library” should have been “Python Imaging Library”\n    (thanks exp(x)).\n  * The setup tool should no longer ask for elevated permissions on\n    Windows Vista (this fix possibly may not work).\n  * The application icon is set properly when running under Windows XP\n    with the “Luna” theme.\n  * Fix compilation under Cygwin to detect libraries and headers from\n    the correct environment.\n  * The video code does not try to read SDL events before SDL has been\n    properly initialised - this was causing problems with some older\n    versions of SDL.\n\n## 1.1.1 (2008-04-20)\n\n  The previous release (v1.1.0) included a bug that broke compilation\n  when libsamplerate support was enabled.  The only change in this\n  version is to fix this bug.\n\n## 1.1.0 (2008-04-19)\n\n  * The video mode code has been radically restructured.  The video\n    mode is now chosen by directly specifying the mode to use; the\n    scale factor is then chosen to fit the screen.  This is helpful\n    when using widescreen monitors (thanks Linguica)\n  * MSVC build project files (thanks GhostlyDeath and entryway).\n  * Unix manpage improvements; the manpage now lists the environment\n    variables that Chocolate Doom uses.  Manpages have been added for\n    chocolate-setup and chocolate-server, from the versions for the\n    Debian Chocolate Doom package (thanks Jon Dowland).\n  * INSTALL file with installation instructions for installing\n    Chocolate Doom on Unix systems.\n  * Support for high quality resampling of sound effects using\n    libsamplerate (thanks David Flater).\n  * A low pass filter is applied when doing sound resampling in an\n    attempt to filter out high frequency noise from the resampling\n    process.\n  * R_Main progress box is not displayed if stdout is a file (produces\n    cleaner output).\n  * Client/server version checking can be disabled to allow different\n    versions of Chocolate Doom to play together, or Chocolate Doom\n    clients to play with Strawberry Doom clients.\n  * Unix manpages are now generated for the Chocolate Doom\n    configuration files.\n  * The BSD PC speaker driver now works on FreeBSD.\n\n### Compatibility\n  * Use the same spechits compatibility value as PrBoom+, for\n    consistency (thanks Lemonzest).\n  * The intercepts overrun code has been refactored to work on big\n    endian machines.\n  * The default startup delay has been set to one second, to allow\n    time for the screen to settle before starting the game (some\n    monitors have a delay before they come back on after changing\n    modes).\n  * If a savegame buffer overrun occurs, the savegame does not get\n    saved and existing savegames are not overwritten (same behaviour\n    as Vanilla).\n\n### Bugs fixed\n  * Desync with STRAIN demos and dehacked Misc values not being set\n    properly (thanks Lemonzest)\n  * Don’t grab the mouse if the mouse is disabled via -nomouse or\n    use_mouse in the configuration file (thanks MikeRS).\n  * Don’t center the mouse on startup if the mouse is disabled (thanks\n    Siggi).\n  * Reset the palette when the window is restored to clear any screen\n    corruption (thanks Catoptromancy).\n  * mus2mid.c should use `MEM_SEEK_SET`, not `SEEK_SET` (thanks\n    Russell)\n  * Fast/Respawn options were not being exchanged when starting\n    netgames (thanks GhostlyDeath).\n  * Letterbox mode is more accurately described as “pillarboxed” or\n    “windowboxed” where appropriate (thanks MikeRS)\n  * Process affinity mask is set to 1 on Windows, to work around a bug\n    in SDL_mixer that can cause crashes on multi-core machines (thanks\n    entryway).\n  * Bugs in the joystick configuration dialog in the setup tool have\n    been fixed.\n\n## 1.0.0 (2007-12-10)\n\n  This release is dedicated to Dylan “Toke” McIntosh, who was\n  tragically killed in a car crash in 2006.  I knew Dylan from IRC and\n  the Doomworld forums for several years, and he had a deep passion\n  for this game.  He was also a huge help for me while developing\n  Chocolate Doom, as he helped point out a lot of small quirks in\n  Vanilla Doom that I didn’t know about. His death is a great loss.\n  RIP Toke.\n\n  This is the first release to reach full feature parity with Vanilla\n  Doom.  As a result, I have made this version 1.0.0, so Chocolate\n  Doom is no longer beta!\n\n### Big new features\n  * Multiplayer!  This version includes an entirely new multiplayer\n    engine, based on a packet server architecture.  I’d like to thank\n    joe, pritch, Meph and myk, and everyone else who has helped test\n    the new code for their support, feedback and help in testing this.\n    The new code still needs more testing, and I’m eager to hear any\n    feedback on this.\n  * A working setup tool.  This has the same look and feel as the\n    original setup.exe.  I hope people like it!  Note that it has some\n    advantages over the original setup.exe - for example, you can use\n    the mouse.\n\n### Other new features\n  * New mus conversion code thanks to Ben Ryves.  This converts the\n    Doom .mus format to .mid a lot better.  As one example, tnt.wad\n    Map02 is now a lot closer to how Vanilla says.  Also, the music on\n    the deca.wad titlescreen now plays!\n  * x3, x4 and x5 display scale (thanks to MikeRS for x5 scale).\n  * Fullscreen “letterbox” mode allows Chocolate Doom to run on\n    machines where 1.6:1 aspect ratio modes are unavailable\n    (320x200/640x400).  The game runs in 320x240/640x480 instead, with\n    black borders.  The system automatically adjusts to this if closer\n    modes are unavailable.\n  * Aspect ratio correction: you can (also) run at 640x480 without\n    black borders at the top and bottom of the screen.\n  * PC speaker sound effect support.  Chocolate Doom can output real\n    PC speaker sounds on Linux, or emulate a PC speaker through the\n    sound card.\n  * Working three-screen mode, as seen in early versions of Doom!  To\n    test this out, put three computers on a LAN and type:\n\n        chocolate-doom -server\n        chocolate-doom -autojoin -left\n        chocolate-doom -autojoin -right\n\n  * Allow a delay to be specified on startup, to allow the display to\n    settle after changing modes before starting the game.\n  * Allow the full path and filename to be specified when loading\n    demos: It is now possible to type “chocolate-doom -playdemo\n    /tmp/foo.lmp” for example.\n  * Savegames are now stored in separate directories depending on the\n    IWAD: eg. the savegames for Doom II are stored in a different\n    place to those for Doom I, Final Doom, etc. (this does not affect\n    Windows).\n  * New mouse acceleration code works based on a threshold and\n    acceleration.  Hopefully this should be closer to what the DOS\n    drivers do.  There is a ‘test’ feature in the setup tool to help\n    in configuring this.\n  * New “-nwtmerge” command line option that emulates NWT’s “-merge”\n    option.  This allows TiC’s Obituary TC to be played.\n  * The ENDOOM screen no longer closes automatically, you have to\n    click the window to make it go away.\n  * Spechit overrun fixes and improvements.  Thanks to entryway for\n    his continued research on this topic (and because I stole your\n    improvements :-).  Thanks to Quasar for reporting a bug as well.\n  * Multiple dehacked patches can be specified on the command line, in\n    the same way as with WADs - eg. -deh foo.deh bar.deh baz.deh.\n  * Default zone memory size increased to 16MB; this can be controlled\n    using the -mb command-line option.\n  * It is now possible to record demos of unlimited length (by\n    default, the Vanilla limit still applies, but it can now be\n    disabled).\n  * Autoadjusting the screen mode can now be disabled.\n  * On Windows, the registry is queried to detect installed versions\n    of Doom and automatically locate IWAD files.  IWADs installed\n    through Steam are also autodetected.\n  * Added DOOMWADPATH that can be used like PATH to specify multiple\n    locations in which to search for IWAD files.  Also, “-iwad” is now\n    enhanced, so that eg. “-iwad doom.wad” will now search all IWAD\n    search paths for “doom.wad”.\n  * Improved mouse tracking that should no longer lag.  Thanks to\n    entryway for research into this.\n  * The SDL driver can now be specified in the configuration file.\n    The setup tool has an option on Windows to select between DirectX\n    and windib.\n  * Joystick support.\n  * Configuration file option to change the sound sample rate.\n  * More than three mouse buttons are now supported.\n\n### Portability improvements\n  * Chocolate Doom now compiles and runs cleanly on MacOS X.  Huge\n    thanks go to Insomniak who kindly gave me an account on his\n    machine so that I could debug this remotely.  Big thanks also go\n    to athanatos on the Doomworld forums for his patience in testing\n    various ideas as I tried to get Chocolate Doom up and running on\n    MacOS.\n  * Chocolate Doom now compiles and runs natively on AMD64.\n  * Chocolate Doom now compiles and runs on Solaris/SPARC, including\n    the Sun compiler.  Thanks to Mike Spooner for some portability\n    fixes.\n  * Improved audio rate conversion, so that sound should play properly\n    on machines that don’t support low bitrate output.\n\n### Compatibility fixes\n  * Check for IWADs in the same order as Vanilla Doom.\n  * Dehacked code will now not allow string replacements to be longer\n    than those possible through DOS dehacked.\n  * Fix sound effects playing too loud on level 8 (thanks to myk for\n    his continued persistence in getting me to fix this)\n  * Save demos when quitting normally - it is no longer necessary to\n    press ‘q’ to quit and save a demo.\n  * Fix spacing of -devparm mode dots.\n  * Fix sky behavior to be the same as Vanilla Doom - when playing in\n    Doom II, the skies never change from the sky on the first level\n    unless the player loads from a savegame.\n  * Make -nomouse and config file use_mouse work again.\n  * Fix the -nomusic command-line parameter.  Make the snd_sfxdevice\n    snd_musicdevice values in the configuration file work, so that it\n    is possible to disable sound, as with Vanilla.\n  * Repeat key presses when the key is held down (this is the Vanilla\n    behavior) - thanks to Mad_Mac for pointing this out.\n  * Don’t print a list of all arguments read from response files -\n    Vanilla doesn’t do this.\n  * Autorun only when joyb_speed >= 10, not >= 4.  Thanks to Janizdreg\n    for this.\n  * Emulate a bug in DOS dehacked that can overflow the dehacked frame\n    table and corrupt the weaponinfo table.  Note that this means\n    Batman Doom will no longer play properly (identical behavior to\n    Vanilla); vbatman.deh needs to also be applied to fix it.  (Thanks\n    grazza)\n  * Allow dehacked 2.3 patches to be loaded.\n  * Add more dehacked string replacements.\n  * Compatibility option to enable or disable native key mappings.\n    This means that people with non-US keyboards can decide whether to\n    use their correct native mapping or behave like Vanilla mapping\n    (which assumes all keyboards are US).\n  * Emulate overflow bug in P_FindNextHighestFloor.  Thanks to\n    entryway for the fix for this.\n  * Add -netdemo command line parameter, for playing back netgame\n    demos recorded with a single player.\n  * The numeric keypad now behaves like Vanilla Doom does.\n  * Fix some crashes when loading from savegames.\n  * Add intercepts overrun emulation from PrBoom-plus.  Thanks again\n    to entryway for his research on this subject.\n  * Add playeringame overrun emulation.\n\n### Bugs fixed\n  * Fix crash when starting new levels due to the intermission screen\n    being drawn after the WI_ subsystem is shut down (thanks pritch\n    and joe)\n  * Catch failures to initialise sound properly, and fail gracefully.\n  * Fix crasher in 1427uv01.lmp (thanks ultdoomer)\n  * Fix crash in udm1.wad.\n  * Fix crash when loading a savegame with revenant tracer missiles.\n  * Fix crash when loading a savegame when a mancubus was in the\n    middle of firing.\n  * Fix Doom 1 E1-3 intermission screen animations.\n  * Fix loading of dehacked “sound” sections.\n  * Make sure that modified copyright banners always end in a newline\n    - this fixes a bug with av.wad (thanks myk)\n  * Added missing quit message (“are you sure you want to quit this\n    great game?”).\n  * Fix when playing long sound effects - the death sound in\n    marina.wad now plays properly, for example.\n  * Fix buffer overrun on the quicksave prompt screen that caused a\n    mysterious cycling character to appear.\n  * IDCLEV should not work in net games (thanks Janizdreg)\n  * Stop music playing at the ENDOOM screen.\n  * Fix sound sample rate conversion crash.\n  * Fix “pop” heard at the end of sound effects.\n  * Fix crash when playing long sounds.\n  * Fix bug with -timedemo accuracy over multi-level demos.\n  * Fix bug with the automap always following player 1 in multiplayer\n    mode (thanks Janizdreg).\n\n## 0.1.4 (2006-02-13)\n\n  * NWT-style merging command line options (allows Mordeth to be played)\n  * Unix manpage (thanks Jon Dowland)\n  * Dehacked improvements/fixes:\n     * Allow changing the names of graphic lumps used in menu, status bar\n       intermission screen, etc.\n     * Allow changing skies, animated flats + textures\n     * Allow changing more startup strings.\n     * Allow text replacements on music + sfx lump names\n  * Fix for plutonia map12 crash.\n  * Fix bug with playing long sfx at odd sample rates.\n  * Big Endian fixes (for MacOS X).  Thanks to athanatos for helping\n    find some of these.\n  * Install into /usr/games, rather than /usr/bin (thanks Jon Dowland)\n\n## 0.1.3 (2006-01-20)\n\n  * Imported the spechit overrun emulation code from prboom-plus.  Thanks to\n    Andrey Budko for this.\n  * New show_endoom option in the chocolate-doom.cfg config file allows\n    the ENDOOM screen to be disabled.\n  * Chocolate Doom is now savegame-compatible with Vanilla Doom.\n\n  * Fixes for big endian machines (thanks locust)\n  * Fixed the behavior of the dehacked maximum health setting.\n  * Fix the “-skill 0” hack to play without any items (thanks to Janizdreg\n    for pointing out that this was nonfunctional)\n  * Fix playing of sounds at odd sample rates (again).  Sound effects\n    at any sample rate now play, but only sounds with valid headers.\n    This is the *real* way Vanilla Doom behaves.  Thanks to myk for\n    pointing out the incorrect behavior.\n\n## 0.1.2 (2005-10-29)\n\n  * Silence sounds at odd sample rates (rather than bombing out); this\n    is the way Vanilla Doom behaves.\n  * Handle multiple replacements of the same sprite in a PWAD.\n  * Support specifying a specific version to emulate via the command line\n    (-gameversion)\n  * Fix help screen orderings and skull positions.  Behave exactly as\n    the original executables do.\n\n## 0.1.1 (2005-10-18)\n\n  * Display startup “banners” if they have been modified through\n    dehacked.\n  * Dehacked “Misc” section support.\n\n### Bugs fixed\n  * Doom 1 skies always using Episode 1 sky\n  * Crash when switching applications while running fullscreen\n  * Lost soul bounce logic (do not bounce in Registered/Shareware)\n  * Mouse buttons mapped incorrectly (button 1 is right, 2 is middle)\n  * Music not pausing when game is paused, when using SDL_mixer’s\n    native MIDI playback.\n  * Pink icon on startup (palette should be fully set before anything is\n    loaded)\n\n## 0.1.0 (2005-10-09)\n\n  * Dehacked support\n  * WAD merging for TCs\n  * ENDOOM display\n  * Fix bug with invalid MUS files causing crashes\n  * Final Doom fixes\n\n## 0.0.4 (2005-09-27)\n\n  * Application icon and version info included in Windows .exe files\n  * Fixes for non-x86 architectures\n  * Fix uac_dead.wad (platform drop on e1m8 should occur when all\n    bosses die, not just barons)\n  * Fix “loading” icon to work for all graphics modes\n\n## 0.0.3 (2005-09-17)\n\n  * Mouse acceleration code to emulate the behaviour of old DOS mouse\n    drivers (thanks to Toke for information about this and\n    suggestions)\n  * Lock surfaces properly when we have to (fixes crash under\n    Windows 98)\n\n## 0.0.2 (2005-09-13)\n\n  * Remove temporary MIDI files generated by sound code.\n  * Fix sound not playing at the right volume\n  * Allow alt-tab away while running in fullscreen under Windows\n  * Add second configuration file (chocolate-doom.cfg) to allow\n    chocolate-doom specific settings.\n  * Fix switches not changing in Ultimate Doom\n\n## 0.0.1 (2005-09-07)\n\n  First beta release\n"
        },
        {
          "name": "NOT-BUGS.md",
          "type": "blob",
          "size": 6.3671875,
          "content": "The aim of Chocolate Doom is to behave as closely to Vanilla Doom as\npossible.  As a result, you may experience problems that you would\nalso experience when using Vanilla Doom.  These are not “bugs” as\nChocolate Doom is behaving as intended.\n\nThis is not intended to be a comprehensive list of Vanilla Doom bugs.\nFor more information, consult the “engine bugs” page of the Doom Wiki.\n\n## Game exits after title screen with message about game version\n\nThe game may exit after the title screen is shown, with a message like\nthe following:\n\n    Demo is from a different game version!\n    (read 2, should be 109)\n\n    *** You may need to upgrade your version of Doom to v1.9. ***\n        See: https://www.doomworld.com/classicdoom/info/patches.php\n        This appears to be v1.0/v1.1/v1.2.\n\nThis usually indicates that your IWAD file that you are using to play\nthe game (usually named doom.wad or doom2.wad) is out of date.\nChocolate Doom only supports versions 1.666 through 1.9.\n\nTo fix the problem, you must upgrade your IWAD file, preferably\nto 1.9.  The URL in the message has downloadable upgrade patches that\nyou can use to upgrade.\n\n## Game exits in demo loop when playing Final Doom\n\nWhen playing with the Final Doom IWAD files (tnt.wad, plutonia.wad),\nif you leave the game at the title screen to play through the demo\nloop, it will eventually exit with the following error message:\n\n    W_GetNumForName: demo4 not found!\n\nThis is the same behavior as the Vanilla executables that were\nbundled with Final Doom.  When Ultimate Doom was developed, a fourth\ndemo was added to the demo loop, and this change was retained in the\nFinal Doom version of the executable.  However, the Final Doom IWADs\ndo not include a fourth demo, so the game crashes.\n\nAn alternate version of Final Doom was included in the Id Anthology\nboxed set, and this version of the game fixed this bug. However, this\nversion also changes the teleport behavior, so the default is to\nemulate the most commonly distributed version of the game. To use\nthe alternate version, run with:\n\n    chocolate-doom -gameversion final2\n\n## Game exits when accessing the options menu\n\nThe game may exit with the message “Bad V_DrawPatch” when accessing\nthe options menu, if you have your mouse sensitivity set high.\n\nThe Doom options menu has a slider that allows the mouse sensitivity\nto be controlled; however, it has only a very limited range. It is\ncommon for experienced players to set a mouse sensitivity that is much\nhigher than what can be set via the options menu. The setup program\nallows a larger range of values to be set.\n\nHowever, setting very high sensitivity values causes the game to exit\nwhen accessing the options menu under Vanilla Doom. Because Chocolate\nDoom aims to emulate Vanilla Doom as closely as possible, it does the\nsame thing.\n\nOne solution to the problem is to set a lower mouse sensitivity.\nAlternatively, all of the settings in the options menu can be\ncontrolled through Doom’s key bindings anyway:\n\nOption                     | Key\n---------------------------|-----\nEnd game                   | F7\nMessages on/off            | F8\nGraphic detail high/low    | F5\nScreen size smaller/larger | -/+\nSound volume menu          | F4\n\n## Game exits with “Savegame buffer overrun” when saving the game\n\nIf you are playing on a particularly large level, it is possible that\nwhen you save the game, the game will quit with the message “Savegame\nbuffer overrun”.\n\nVanilla Doom has a limited size memory buffer that it uses for saving\ngames.  If you are playing on a large level, the buffer may be too\nsmall for the entire savegame to fit.  Chocolate Doom allows the limit\nto be disabled: in the setup tool, go to the “compatibility” menu and\ndisable the “Vanilla savegame limit” option.\n\nIf this error happens to you, your game has not been lost!  A file\nnamed temp.dsg is saved; rename this to doomsav0.dsg to make it appear\nin the first slot in the “load game” menu.  (On Unix systems, you will\nneed to look in the .chocolate-doom/savegames directory in your home\ndirectory)\n\n## Game ends suddenly when recording a demo\n\nIf you are recording a very long demo, the game may exit suddenly.\nVanilla Doom has a limited size memory buffer that it uses to save the\ndemo into.  When the buffer is full, the game exits.  You can tell if\nthis happens, as the demo file will be around 131,072 bytes in size.\n\nYou can work around this by using the -maxdemo command line parameter\nto specify a larger buffer size.  Alternatively, the limit can be\ndisabled: in the setup tool, go to the compatibility menu and disable\nthe “Vanilla demo limit” option.\n\n## Game exits with a message about “visplanes”\n\nThe game may exit with one of these messages:\n\n    R_FindPlane: no more visplanes\n    R_DrawPlanes: visplane overflow (129)\n\nThis is known as the “visplane overflow” limit and is one of the most\nwell-known Vanilla Doom engine limits.  You should only ever experience\nthis when trying to play an add-on level.  The level you are trying to\nplay is too complex; it was most likely designed to work with a limit\nremoving source port.\n\nMore information can be found here (archived link): https://archive.is/s6h7V\n\n## IDMUS## cheat doesn’t work with shareware/registered Doom IWADs\n\nThe IDMUS cheat allows the in-game music to be changed.  However, in\nthe original v1.9 this cheat didn’t work properly when playing with\nthe Doom 1 (shareware and registered) IWADs.  This bug was fixed in\nthe Ultimate Doom and Final Doom executables.\n\nChocolate Doom emulates this bug.  When playing with the shareware or\nregistered Doom IWADs, the IDMUS cheat therefore does not work\nproperly.  If you are playing with the Ultimate Doom IWAD, the\nUltimate Doom executable is emulated by default, so the cheat works\nproperly.\n\n## Some graphics are wrong when playing with BFG Edition IWADs\n\nIf you are playing using the IWAD files from Doom 3: BFG Edition, you\nmay notice that certain graphics appear strange or wrong. This\nincludes the title screen, and parts of the options menu.\n\nThe IWAD files in the new BFG Edition have had some significant\nchanges from the IWAD files in older releases. Some of the graphics\nlumps have been removed or changed, and the Doom 2 secret levels are\nalso censored. Chocolate Doom includes some small workarounds that\nallow the game to run, but for the best experience, it’s best to get a\ncopy of the classic versions of the IWADs. These are still available\nto buy from Steam or GOG.com.\n"
        },
        {
          "name": "PHILOSOPHY.md",
          "type": "blob",
          "size": 9.787109375,
          "content": "Chocolate Doom has been designed around a careful and deliberate\nphilosophy that attempts to recreate the original (“Vanilla”) DOS\nexecutables for Doom, Heretic, Hexen and Strife. This document\ndescribes some of that philosophy and the reasoning behind it.\n\nThis document is descriptive, not proscriptive.\n\n# Vanilla behavior\n\nIdeally Chocolate Doom aims to recreate the behavior of the Vanilla\nbinaries, but different aspects of Vanilla behavior are held to\nvarying degrees of importance. It can be imagined as different “tiers”\nof compatibility:\n\n * The game and gameplay itself is of central importance. Here, the\n   Vanilla behavior ought to be maintained as accurately as possible.\n   This includes the look, feel and sound, and things like demo\n   compatibility.\n * The surrounding aspects of the game that aren’t part of the central\n   gameplay experience can be extended as long as there’s a good\n   reason and Vanilla behavior is respected.\n * The setup tool is not required to reproduce the behavior of the\n   Vanilla setup tool, even though it reproduces its look and feel.\n\n“Vanilla” is defined as:\n\n * DOS Doom 1.9 (although there are actually multiple “1.9”s).\n * DOS Heretic 1.3.\n * DOS Hexen 1.1 (although there are actually two known “1.1”s).\n * DOS Strife 1.31.\n * DOS Chex Quest.\n\nCompatibility with older versions of the DOS binaries is also a\nsecondary goal (though not pre-release versions). Other ports (either\nofficial or unofficial) are out of scope: this includes console ports,\nnon-DOS ports, Doom 95 and Doom 3: BFG Edition.\n\n# Compatibility\n\nChocolate Doom aims to be compatible with Vanilla Doom in several\ndifferent ways. Examples are:\n\n * Bug compatibility: the aim is to emulate compatibility of the\n   original game down to bugs that were present in the DOS\n   executables. This includes maintaining the limitations of the\n   original engine: for example, the infamous “visplane overflow” bug\n   is intentionally still present, where other source ports have\n   removed it; this allows mappers targeting Vanilla Doom to use\n   Chocolate Doom as a faithful substitute.\n * Demo compatibility: Doom was one of the first games to develop a\n   ‘speedrunning’ community, and thousands of recordings of Doom\n   gameplay (`.lmp` demo files) exist in the Compet-N archive. Chocolate\n   Doom aims for the highest standard of demo compatibility with\n   Vanilla Doom, a goal that is often complicated by obscure behavior\n   that can be difficult to reproduce.\n * Configuration file compatibility: Chocolate Doom uses the same\n   configuration file format as Vanilla Doom, such that a user should\n   be able to reuse their existing Vanilla configuration file without\n   making any changes. Extra non-Vanilla options are stored in a\n   separate configuration file.\n * Savegame file compatibility: Chocolate Doom uses the same savegame\n   file format as Vanilla, such that it should be possible to import\n   and use existing savegame files.\n\n# DOS tools\n\nChocolate Doom includes some features that aren’t part of Vanilla Doom\nbut exist for compatibility with DOS tools that interact with it.\nThese are considered part of the Vanilla experience and ought to be\ntreated as such. Some examples are:\n\n * The novert setting, which reproduces the functionality of\n   `novert.exe`.\n * The `-deh` parameter, which loads Dehacked patches like dehacked.exe\n   does under DOS. Chocolate Doom imposes the same limitations that\n   Vanilla Dehacked does.\n\n# Exceptions\n\nChocolate Doom differs from Vanilla Doom in a number of ways. In most\ncases these are subtle, minor differences. Nonetheless they deserve\nsome explanation and justification. Here are some examples of\nsituations where changes are considered acceptable:\n\n 1. Vanilla behavior can be broken that is harmful, eg. can damage the\n    player’s computer, or is just outright misleading. For example:\n\n    - Vanilla uses unbounded sprintf and strcpy (security issue).\n    - Vanilla has crashes that force the user to reboot the machine.\n    - Vanilla has an out of memory message that recommends tweaking\n      CONFIG.SYS. As Chocolate Doom doesn’t run under DOS, reproducing\n      this message would not be helpful.\n\n 2. Subtly extending behavior is okay where it’s not clear what the\n    Vanilla behavior is anyway. For example:\n\n    - Opening the menu releases mouse grab in Chocolate Doom.\n    - Chocolate Hexen’s graphical startup screen runs in a window.\n\n 3. Supporting obsolete technology is not a goal: it’s considered\n    acceptable that Chocolate Doom does not support every type of\n    hardware from 1993. However, Chocolate Doom should aim to recreate\n    the functionality in a modern way. Examples of technologies that\n    aren’t supported are:\n\n    - No support for IPX networks, but TCP/IP is supported instead.\n    - No support for dial-up/serial connections; modern operating\n      systems have features that do that for you.\n    - No MS-DOS version.\n\n 4. Changes are acceptable that allow the player to be able play the\n    game. For example:\n\n    - There are new key bindings for actions that can’t be rebound with\n      Vanilla Doom, because it’s useful for portability to machines\n      that don’t have a full keyboard.\n    - There are additional mouse and joystick button bindings that let\n      you perform actions with them that can only be done with the\n      keyboard in Vanilla Doom.\n    - Chocolate Doom includes some hacks to support the Doom 3: BFG\n      Edition IWAD files. The assumption is that being able to at least\n      play is better than nothing, even if it’s not Vanilla behavior.\n    - Chocolate Strife does not emulate the save bug from\n      Vanilla 1.31, which could corrupt saves when overwriting a slot,\n      if the old slot was not part of the current game’s progression.\n      Vanilla behavior is unexpected and potentially devastating.\n\n 5. Adding extra options to Vanilla functionality is acceptable as long\n    as the defaults match Vanilla, it doesn’t change gameplay and\n    there’s a good reason for it. For example:\n\n    - PNG screenshots are supported because PCX is an obsolete format.\n    - Chocolate Doom has the vanilla_keyboard_mapping option that\n      allows the user to use the native keyboard mapping for their\n      computer, rather than always assuming a US layout.\n\n 6. Changing configuration file defaults is acceptable where there’s a\n    very good reason. For example:\n\n    - Vanilla Doom defaults to no sound or music if a configuration\n      file is not found. Chocolate Doom defaults to having sound\n      effects and music turned on by default, because modern computers\n      support these; there’s no need to configure hardware IRQ settings\n      to get sound working.\n\n 7. Things can be changed if they’re really just inconsequential. For\n    example:\n\n    - The startup messages in Chocolate Doom are not identical to\n      Vanilla Doom and are not necessarily in the same order.\n    - Vanilla Doom has command line options named `-comdev`, `-shdev`\n      and `-regdev` used by id internally for development; these have\n      been removed.\n\n 8. Expansions to the vanilla demo formats are allowed, to make\n    recording and playback of vanilla gameplay more convenient, with\n    the following restrictions:\n\n    - Such expansions are not supported in WAD files (they are not\n      an editing feature for WAD authors to use).\n    - Support for these features can be completely disabled using the\n      `-strictdemos` command line argument.\n    - A warning is shown to the user on the console (stdout) when a\n      demo using one of these features is recorded or played back.\n\nA good litmus test of when it’s acceptable to break from Vanilla\nbehavior is to ask the question: “Although this is Vanilla behavior,\nis there anyone who would want this?”\n\nFor example, emulating Vanilla bugs like the visplane overflow bug is\nsomething that is useful for people making Vanilla format maps. On the\nother hand, painstakingly emulating Vanilla Doom by starting with no\nsound or music by default is not helpful to anyone.\n\n# Minimalism\n\nChocolate Doom aims to be minimalist and straightforward to configure;\nin particular, the setup tool should have a sane interface. Part of\nthe inspiration for Chocolate Doom came from Boom’s complicated maze\nof options menus (and a desire to avoid them). Too many preferences\nlead to a bad user interface; see Havoc Pennington’s essay on Free\nSoftware UI:\n\n  http://ometer.com/free-software-ui.html\n\nChocolate Doom has some options that are quite obscure and only really\nof interest to a small number of people. In these cases, the options\nare hidden away in configuration files and deliberately not exposed in\nthe setup tool. The assumption is that if you care enough about those\nobscure features, editing a configuration file by hand should not be a\nhuge problem for you.\n\nAlso inspirational was the README file from Havoc’s Metacity window\nmanager, where the list of features begins:\n\n  > Boring window manager for the adult in you. Many window managers\n  > are like Marshmallow Froot Loops; Metacity is like Cheerios.\n\nI’d like to think that Chocolate Doom’s philosophy towards features is\nsimilar. The idea is for a source port that is boring. I find the best\nsoftware - both proprietary and open source - is software that is\n“egoless”: it does a job well without pretentions about its importance\nor delusions of grandeur. A couple of other notable examples of\nsoftware that I feel embody this spirit of design in a beautiful way\nare Marco Pesenti Gritti’s Epiphany web browser and Evince PDF viewer.\n\n# Other philosophical aspects\n\nChocolate Doom aims for maximal portability. That includes running on\nmany different CPUs, different operating systems and different devices\n(ie. not just a desktop machine with a keyboard and mouse).\n\nChocolate Doom is and will always remain Free Software. It will never\ninclude code that is not compatible with the GNU GPL.\n"
        },
        {
          "name": "README.Music.md",
          "type": "blob",
          "size": 6.6005859375,
          "content": "Doom has a memorable and atmospheric soundtrack. Like many games of\nthe era, it is MIDI-based. Chocolate Doom includes a number of\ndifferent options for music playback, detailed below.\n\n# Native MIDI playback\n\nMost modern operating systems have some kind of built-in support for\nMIDI playback; some have very good quality MIDI playback (Mac OS X for\nexample). To use this, choose “Native MIDI” in the sound configuration\ndialog in the setup tool.\n\n# Timidity\n\nTimidity is a software-based MIDI synthesizer, and a version of it is\nincluded in the SDL2_mixer library used by Chocolate Doom. To use\nTimidity for MIDI playback, first download a sound font. An example of\na good quality sound font is the eawpats font, which can be downloaded\nfrom the idgames archive as sounds/eawpats.zip:\n\n  https://www.doomworld.com/idgames/sounds/eawpats\n\nHaving installed a sound font, select “Native MIDI” in the sound\nconfiguration dialog in the setup tool, and use the “Timidity\nconfiguration file” widget below to enter the path to the Timidity\nconfiguration file (normally named timidity.cfg).\n\n# Gravis Ultrasound (GUS)\n\nThe Gravis Ultrasound (GUS) was a PC sound card popular in the ’90s,\nnotable for having wavetable synthesis that provided MIDI playback\nthat was superior to most other cards of the era. Chocolate Doom\nincludes a “pseudo-GUS emulation” feature that simulates the GUS\n(using Timidity, under the hood).\n\nTo use this feature you need a copy of the GUS patch files that were\ndistributed with the original GUS patches. If you have Doom 3: BFG\nEdition, these patches are included with its version of classic Doom,\nand are automatically detected. Otherwise, they can be downloaded\nfrom the idgames archive as music/dgguspat.zip:\n\n  https://www.doomworld.com/idgames/music/dgguspat\n\nHaving downloaded the patches, select “GUS (emulated)” in the sound\nconfiguration dialog in the setup tool, and use the “GUS patch path”\nwidget to enter the path to the directory containing the patch files.\n\nFor the music not to sound weird, you will almost certainly want to\nload gusgonna.wad (sounds/gusgonna.zip in the idgames archive) when\nyou run the game, to work around a bug in vanilla Doom's instrument\nmappings parser:\n\n  https://www.doomworld.com/idgames/sounds/gusgonna\n\nBy default a GUS card with 1024KB is simulated; to simulate a 256KB,\n512KB or 768KB card instead, change the gus_ram_kb option in\nchocolate-doom.cfg.\n\n# OPL (Soundblaster / Adlib)\n\nMost people playing Doom in the ’90s had Soundblaster-compatible sound\ncards, which used the Yamaha OPL series of chips for FM-based MIDI\nsynthesis. Chocolate Doom includes the ability to emulate these chips\nfor a retro experience. OPL emulation is the default MIDI playback,\nbut can be selected in the setup tool as “OPL (Adlib/SB)”.\n\nMost modern computers do not include an OPL chip any more, as CPUs are\nfast enough to do decent software MIDI synthesis. However, no software\nemulator sounds exactly like a real (hardware) OPL chip, and a few\ncards do have real hardware OPL. If you have such a card, here’s how\nto configure Chocolate Doom to use it.\n\n## Sound cards with OPL chips\n\nIf you have an ISA sound card, it almost certainly includes an OPL\nchip. Modern computers don’t have slots for ISA cards though, so you\nmust be running a pretty old machine.\n\nIf you have a PCI sound card, you probably don’t have an OPL chip.\nHowever, there are some exceptions to this. The following cards are\nknown to include “legacy” OPL support:\n\n  * C-Media CMI8738 (*)\n  * Forte Media FM801\n  * Cards based on the Yamaha YMF724 (*)\n\nOther cards that apparently have OPL support but have not been tested:\n\n  * S3 SonicVibes\n  * AZTech PCI 168 (AZT 3328 chipset)\n  * ESS Solo-1 sound cards (ES1938, ES1946, ES1969 chipset)\n  * Conexant Riptide Audio/Modem combo cards\n  * Cards based on the Crystal Semiconductors CS4281\n  * Cards based on the Avance Logic ALS300\n  * Cards based on the Avance Logic ALS4000\n\nIf you desperately want hardware OPL music, you may be able to find\none of these cards for sale cheap on eBay.\n\nFor the cards listed above with (\\*) next to them, OPL support is\ndisabled by default and must be explictly enabled in software. See\nsections below for operating system-specific instructions on how you\nmay be able to do this.\n\nIf your machine is not a PC, you don’t have an OPL chip, and you will\nhave to use the software OPL.\n\n## Operating System support\n\nIf you’re certain that you have a sound card with hardware OPL, you\nmay need to take extra steps to configure your operating system to\nallow access to it. To do hardware OPL, Chocolate Doom must access\nthe chip directly, which is usually not possible in modern operating\nsystems unless you are running as the superuser (root/Administrator).\n\n### Microsoft Windows\n\nOn modern Windows systems it is not possible to directly access the\nOPL chip, even when running as Administrator. Fortunately, it is\npossible to use the “ioperm.sys” driver developed for Cygwin (look for\niopermsys-0.2.1.tar.bz2):\n\n  http://openwince.sourceforge.net/ioperm/\n\nIt is not necessary to have Cygwin installed to use this. Copy the\nioperm.sys file into the same directory as the Chocolate Doom\nexecutable and it should be automatically loaded.\n\nYou can confirm that hardware OPL is working by checking for this\nmessage in stdout.txt:\n\n    OPL_Init: Using driver 'Win32'.\n\nIf you have a C-Media CMI8738, you may need to enable the `FM_EN`\nflag in Windows Device Manager to access hardware OPL output. See\n[this](http://www.vogons.org/viewtopic.php?f=46&t=36445) thread on\nvogons.org for some more information.\n\n### Linux\n\nIf you are using a system based on the Linux kernel, you can access\nthe OPL chip directly, but you must be running as root. You can\nconfirm that hardware OPL is working, by checking for this message on\nstartup:\n\n    OPL_Init: Using driver 'Linux'.\n\nIf you are using one of the PCI cards in the list above with a (*)\nnext to it, you may need to manually enable FM legacy support. Add\nthe following to your /etc/modprobe.conf file to do this:\n\n    options snd-ymfpci fm_port=0x388\n    options snd-cmipci fm_port=0x388\n\n### OpenBSD/NetBSD\n\nYou must be running as root to access the hardware OPL directly. You\ncan confirm that hardware OPL is working by checking for this message\non startup:\n\n    OPL_Init: Using driver 'OpenBSD'.\n\nThere is no native OPL backend for FreeBSD yet. Sorry!\n\n# Other options\n\nIf you have some other favorite MIDI playback option that isn’t\nlisted above, you can set a hook to invoke an external command for\nMIDI playback using the ‘snd_musiccmd’ configuration file option. For\nexample, set:\n\n    snd_musiccmd    \"aplaymidi -p 128:0\"\n\nin your chocolate-doom.cfg file.\n"
        },
        {
          "name": "README.Strife.md",
          "type": "blob",
          "size": 5.1455078125,
          "content": "````````````````````````````````````````````````````````````````````````\n\n          Samuel ‘Kaiser’ Villarreal and James ‘Quasar’ Haley Present\n\n           C      H      O      C      O      L      A      T      E\n            ______________________________._________________________\n           /   _____/\\__    ___/\\______   \\   \\_   _____/\\_   _____/\n           \\_____  \\   |    |    |       _/   ||    __)   |    __)_\n           /        \\  |    |    |    |   \\   ||     \\    |        \\\n          /_______  /  |____|    |____|_  /___|\\___  /   /_______  /\n                  \\/                    \\/         \\/            \\/\n\n````````````````````````````````````````````````````````````````````````\n\n## What is it?\n\nChocolate Strife is the most accurate and complete recreation of Rogue\nEntertainment’s “Strife: Quest for the Sigil.”  It was created through more\nthan four years of reverse engineering effort with the blessings of the\noriginal programmers of the game.\n\n\n## Why?\n\nThe source code for Strife was lost, which means, unlike the code for all the\nother commercial DOOM-engine games, it cannot be released. The only access we\nhave to the code is the binary executable file. Tools such as IDA Pro have\nbeen employed to disassemble and decompile the executable, which was cross-\nreferenced against the Linux DOOM and DOS Heretic sources and painstakingly\ncombed over multiple times, instruction-by-instruction, to ensure that the\nresulting Chocolate Doom-based executable is as close as possible to the\noriginal.\n\n\n## Is it Legal?\n\nChocolate Strife was originally reverse-engineered from the DOS Strife\nbinaries. Although reverse engineering is legally a protected activity, this\nnonetheless left some open questions about its legal status.\n\nIn 2014, a new commercial release of Strife was published (Strife: Veteran\nEdition) based on the Chocolate Strife code, and developed by the authors of\nChocolate Strife under commercial license. The release of Strife: Veteran\nEdition, along with its GPL-licensed source code, constitutes tacit approval\nfor the legal status of Chocolate Strife by its current copyright holder.\n\n\n## Is it Perfect?\n\nAlmost, but not entirely! That’s where you come in. Help us by reporting any\ndiscrepancies you may notice between this executable and the vanilla DOS\nprogram!\n\nHowever, do *not* report any glitch that you can replicate in the vanilla EXE\nas a bug. The point of Chocolate Strife, like Chocolate Doom before it, is to\nbe as bug-compatible with the original game as possible. Also be aware that\nsome glitches are impossible to compatibly recreate, and wherever this is the\ncase, Chocolate Strife has erred on the side of not crashing the program,\nfor example by initializing pointers to NULL rather than using them without\nsetting a value first.\n\n\n## What are some known problems?\n\nThe demo version is *not* supported, and there are not any current plans to\nsupport it in the future, due to the vast number of differences (the demo\nversion of Strife is based on an earlier version of Rogue’s\ncodebase).\n\nThe commercial Strife IWAD version 1.1 may run, but also exhibit issues.  Like\nthe demo version, there are no current plans to fully support it.  Make sure\nyour copy is updated to at least 1.2.  Strife: Veteran Edition already\nincludes the required version.\n\n\n## How do I use it?\n\nFrom the Run box or a command line, issue a command to Chocolate Strife just\nlike you would run Chocolate Doom. Most of the same command line parameters\nare supported.\n\nvoices.wad will be read from the same directory as the IWAD, if it can be\nfound. If it is not found, then voices will be disabled just as would happen\nwith the vanilla executable. Do not add voices.wad using -file, as that is\nredundant and unnecessary.\n\nSome new command-line parameters in Chocolate Strife include the following:\n\n  - -nograph\n    - Disables the graphical introduction sequence. -devparm implies this.\n\n  - -novoice\n    - Disables voices even if voices.wad can be found.\n\n  - -work\n    - Enables Rogue’s playtesting mode. Automatic godmode, and pressing the\n      inventory drop key will toggle noclipping.\n\n  - -flip\n    - Flips player gun graphics. This is buggy, however, because it does not\n      reverse the graphics’ x offsets (this is an accurate emulation of the\n      vanilla engine’s behavior).\n\n  - -random\n    - Randomizes the timing and location of item respawns in deathmatch, when\n      item respawning is enabled.\n\n\n## Copyright\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 2 of the License, or (at your option) any later\nversion.\n\nThis program is distributed in the hope that it will be useful,but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\nA PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nSee the “COPYING” file for the full license text. The source code for this\nprogram is available from the same location where you downloaded this package.\n\nAside from Chocolate Doom, portions of the code are derived from the Eternity\nEngine, Copyright 2011 Team Eternity, as published under the GNU GPL.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.6982421875,
          "content": "# Chocolate Doom\n\nChocolate Doom aims to accurately reproduce the original DOS version of\nDoom and other games based on the Doom engine in a form that can be\nrun on modern computers.\n\nOriginally, Chocolate Doom was only a Doom source port. The project\nnow includes ports of Heretic and Hexen, and Strife.\n\nChocolate Doom’s aims are:\n\n * To always be 100% Free and Open Source software.\n * Portability to as many different operating systems as possible.\n * Accurate reproduction of the original DOS versions of the games,\n   including bugs.\n * Compatibility with the DOS demo, configuration and savegame files.\n * To provide an accurate retro “feel” (display and input should\n   behave the same).\n\nMore information about the philosophy and design behind Chocolate Doom\ncan be found in the PHILOSOPHY file distributed with the source code.\n\n## Setting up gameplay\n\nFor instructions on how to set up Chocolate Doom for play, see the\nINSTALL file.\n\n## Configuration File\n\nChocolate Doom is compatible with the DOS Doom configuration file\n(normally named `default.cfg`). Existing configuration files for DOS\nDoom should therefore simply work out of the box. However, Chocolate\nDoom also provides some extra settings. These are stored in a\nseparate file named `chocolate-doom.cfg`.\n\nThe configuration can be edited using the chocolate-setup tool.\n\n## Command line options\n\nChocolate Doom supports a number of command line parameters, including\nsome extras that were not originally suported by the DOS versions. For\nbinary distributions, see the CMDLINE file included with your\ndownload; more information is also available on the Chocolate Doom\nwebsite.\n\n## Playing TCs\n\nWith Vanilla Doom there is no way to include sprites in PWAD files.\nChocolate Doom’s ‘-file’ command line option behaves exactly the same\nas Vanilla Doom, and trying to play TCs by adding the WAD files using\n‘-file’ will not work.\n\nMany Total Conversions (TCs) are distributed as a PWAD file which must\nbe merged into the main IWAD. Typically a copy of DEUSF.EXE is\nincluded which performs this merge. Chocolate Doom includes a new\noption, ‘-merge’, which will simulate this merge. Essentially, the\nWAD directory is merged in memory, removing the need to modify the\nIWAD on disk.\n\nTo play TCs using Chocolate Doom, run like this:\n\n```\nchocolate-doom -merge thetc.wad\n```\n\nHere are some examples:\n\n```\nchocolate-doom -merge batman.wad -deh batman.deh vbatman.deh  (Batman Doom)\nchocolate-doom -merge aoddoom1.wad -deh aoddoom1.deh  (Army of Darkness Doom)\n```\n\n## Other information\n\n * Chocolate Doom includes a number of different options for music\n   playback. See the README.Music file for more details.\n\n * More information, including information about how to play various\n   classic TCs, is available on the Chocolate Doom website:\n\n     https://www.chocolate-doom.org/\n\n   You are encouraged to sign up and contribute any useful information\n   you may have regarding the port!\n\n * Chocolate Doom is not perfect. Although it aims to accurately\n   emulate and reproduce the DOS executables, some behavior can be very\n   difficult to reproduce. Because of the nature of the project, you\n   may also encounter Vanilla Doom bugs; these are intentionally\n   present; see the NOT-BUGS file for more information.\n\n   New bug reports can be submitted to the issue tracker on Github:\n\n     https://github.com/chocolate-doom/chocolate-doom/issues\n\n * Source code patches are welcome, but please follow the style\n   guidelines - see the file named HACKING included with the source\n   distribution.\n\n * Chocolate Doom is distributed under the GNU GPL. See the COPYING\n   file for more information.\n\n * Please send any feedback, questions or suggestions to\n   chocolate-doom-dev-list@chocolate-doom.org. Thanks!\n"
        },
        {
          "name": "RELEASE_NOTES.md",
          "type": "blob",
          "size": 9.1923828125,
          "content": "## 3.1.0 (2024-08-01)\n\n### General\n  * Drag and drop loading of WAD, Dehacked and demo files is now supported on\n    Windows - simply drag the files onto chocolate-doom.exe (thanks Fabian).\n  * WAD file autoloading was added - WAD and DEH files can be copied into\n    an autoload folder to be automatically included on every game start.\n  * Music pack configuration has been significantly simplified. By simply\n    copying .flac/.ogg music files into a folder they will be automatically\n    detected by filename and used.\n  * Music packs can now be used with OPL as a fallback, and music pack\n    config files can have any name ending in '.cfg'.\n  * MP3 music packs are now supported.\n  * Network synchronization now uses a PID controller by default, which\n    makes games more smooth and more stable, especially for Internet play.\n  * UDP hole punching is now used to make servers behind NAT gateways\n    automatically accessible to the Internet.\n  * OPL emulation now uses Nuked OPL3 v1.8 (thanks nukeykt)\n  * Allow simultaneous PC speaker emulation and OPL emulation\n    (thanks Michael Day).\n  * The setup tool now uses \"Romero Blue\" as a background (see the wiki:\n    <https://doomwiki.org/wiki/Romero_Blue> for more info).\n  * The 0 and 5 keys on the number pad can now be bound independently\n    of any other keyboard key (thanks BlooD2ool).\n  * With aspect ratio correction disabled, the game can scale to any\n    arbitrary size and remove all black borders in full screen mode.\n    (thanks chungy)\n  * The executable's location is now checked when looking for IWADs.\n  * The IWAD files installed by Steam-on-Linux are now detected (thanks\n    chungy).\n  * It's now possible to use `-response` to load response files.\n  * Default savegame name now includes the WAD filename (thanks Fabian).\n  * Mouse movement is no longer read when the game window is inactive\n    (thanks Julia Nechaevskaya).\n  * Chocolate Doom now by default generates a \"pet name\" for the user\n    to respect privacy (thanks Jon!)\n  * The Freedoom single-player IWAD files are now officially supported,\n    since recent versions changed all levels to be vanilla compatible.\n  * Add native support for the FluidSynth midi synthesizer.\n  * Add a fsynth_gain config key to fine tune the FluidSynth output level\n    (thanks Fabian).\n  * Redesign of native MIDI support in Windows (thanks ceski and Roman Fomin):\n    - Emulates DMX MPU-401 feature set by default, change with\n      `winmm_complevel`.\n    - MIDI device reset between songs using \"GM System On\", change with\n      `winmm_reset_type`.\n    - Configurable delay after reset for legacy MIDI hardware (e.g. Roland\n      SC-55), change with `winmm_reset_delay`.\n  * Add improved gamepad support via the SDL\\_GameController interface. This\n    includes support for analog triggers, modern dual-stick default bindings\n    (based on Unity Doom), descriptive button names for common controller types\n    and configurable dead zones for stick axes. (Michael Day).\n  * All games now have shiny new icons!\n  * The -display parameter was added to specify the display number on which to show the screen (thanks Robin Emeršič).\n\n### Build systems\n  * SDL2_mixer and SDL2_net can now be optionally disabled to increase\n    portability to systems that might not support audio or networking\n    (thanks turol).\n  * Travis CI was replaced with GitHub Actions (thanks Michael Francis).\n  * mingw CI was added for automatic Windows-building (thanks turol).\n  * A cpp-linter CI was added to improve the quality and formatting of code\n    (thanks turol).\n  * The `--disable-zpool` autoconf argument for disabling memory pooling was\n    added to make debugging easier (thanks turol).\n  * Python 2 has been deprecated and Python 3 is now used exclusively\n  (thanks Fabian).\n\n### Refactorings\n  * CMake project files have been added, replacing the Microsoft Visual\n    Studio and Code::Blocks files. CMake maintains support for multiple\n    IDEs and versions thereof, and reduces developer overhead when updating\n    Chocolate Doom (huge thanks to AlexMax for this work).\n  * Source code has been retrofitted to fix many compiler warnings and\n    add const annotations to many variables (thanks turol).\n  * Several functions have been hardened against incomplete reads and\n    error conditions, and made safer (thanks turol).\n  * Man page generation has been reworked to use autoconf macro\n    substitution, making it eaiser for downstream forks to change the\n    project name (thanks Jon).\n  * We now print a meaningful error message when a savegame cannot be\n    loaded (thanks Zodomaniac, chungy).\n  * There's now a log file feature for the network code to aid in tracking\n    down multiplayer bugs.\n  * AppData files were updated to the AppStream standard (thanks Mike).\n  * Many abuses of the extern keyword have been cleaned up to prevent\n    undefined behavior (thanks turol).\n  * Install of bash completion scripts was fixed (thanks Mike Swanson).\n\n### Bug fixes\n  * Fixed an exception thrown by the Windows kernel when debugging with\n    GDB (thanks AXDOOMER).\n  * Loop metadata now works properly with music packs on Windows.\n  * Mouse movement is ignored when the game window isn't active (thanks\n    Julia Nechaevskaya).\n  * A bug was fixed where music would not play after pausing on an\n    intermission screen (thanks Julia Nechaevskaya).\n  * Timeouts when connecting to a network server were fixed (thanks\n    @bradc6).\n  * A long-standing bug where some visplane overflows caused crashes was\n    fixed (thanks Michael Francis).\n  * A multiplayer deadlock bug where clients would stop sending tics after\n    missing tics from the server was fixed. There are both client- and\n    server- side fixes to fix the problem when playing with older versions\n    (thanks MadDog and Mortrixs for help tracking this down).\n  * The macOS launcher now quits automatically when all windows are closed.\n  * The mouse speed calibration thermometer was fixed.\n  * Some improvements have been made to PC speaker emulation to better match\n    Vanilla (thanks NY00123).\n  * Filenames and paths with non-latin characters now work on Windows\n    (thanks Roman Fomin).\n  * Properly handle orphan carriage returns when parsing deh files\n    (thanks Michael Day).\n\n### Doom\n  * Doom 1.2 demo support was added (thanks James Canete!)\n  * Map33 intermission screen and map33-map35 automap names are\n    emulated (thanks CapnClever).\n  * We now exit gracefully when player starts are missing (thanks Michael\n    Francis).\n  * We now exit gracefully on levels with a boss brain and no boss spitter\n    things (thanks Jason Benaim).\n  * It's now possible to play multiplayer with gameversion=1.2.\n  * When the game hits the limit for the number of wall scrollers, a count\n    of the number of scrollers is now displayed (thanks Jon).\n  * Sector special 17 (random light flicker) is now accurately emulated to\n    only appear in gameversion > 1.2 (thanks tpoppins).\n  * Fixed mouse events causing unwanted key presses (thanks Michael Day).\n  * French Doom II files doom2f.wad and french.deh are now automatically\n    detected (thanks Acts19quiz).\n  * Mouse buttons are now bindable to run (thanks Archenoth).\n  * The \"Sky never changes in Doom II\" bug is now accurately emulated\n    (thanks Michael Francis).\n  * Mouse buttons are now bindable to turn left/right (thanks Fabian).\n  * Fix possible undefined behavior and accurately emulate vanilla when -skill\n    parameter is given a negative value (thanks Henrique Jorge).\n\n### Heretic\n  * P\\_FindNextHighestFloor was changed to match vanilla behavior (thanks\n    AXDOOMER).\n  * WAD hash table is now generated for speed (thanks Michael Francis).\n  * HHE level name replacements now apply on the intermission screen\n    (thanks ETTiNGRiNDER).\n  * Mouse buttons are now bindable to scroll through inventory and\n    \"use artifact\" (thanks Michael Day).\n  * Mouse buttons are now bindable to run (thanks Archenoth).\n  * Multiplayer demo playback was fixed (thanks Ryan Krafnick).\n  * The GOG.com release is now detected (thanks Mike Swanson).\n  * Mouse buttons are now bindable to turn left/right (thanks Fabian).\n  * Fix NULL backsector crash (thanks kitchen-ace and Julia Nechaevskaya).\n\n### Hexen\n  * ACS code has been hardened against potential security vulnerabilities.\n  * WAD hash table is now generated for speed (thanks AXDOOMER).\n  * Mouse buttons are now bindable to scroll through inventory and\n    \"use artifact\" (thanks Michael Day).\n  * Mouse buttons are now bindable to run (thanks Archenoth).\n  * Multiplayer demo playback was fixed (thanks Ryan Krafnick).\n  * The GOG.com release is now detected (thanks Mike Swanson).\n  * Mouse buttons are now bindable to turn left/right (thanks Fabian).\n  * Fixed demo desyncs in P_LookForPlayers (thanks Michael Day)\n  * Add support for two different v1.1 variants through -gameversion\n    argument (thank NY00123).\n\n### Strife\n  * Sehacked replacements of the \"empty slot\" string now work.\n  * VOICES.WAD is now found in a case-insensitive way (thanks Michael Francis).\n  * PC speaker sound effects are now supported (thanks ceski).\n  * Mouse buttons are now bindable to turn left/right (thanks Fabian).\n  * Fixed demo desyncs in P_LookForPlayers (thanks Michael Day)\n  * Fix possible undefined behavior and accurately emulate vanilla when -skill\n    parameter is given a negative value (thanks Henrique Jorge).\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 1.6484375,
          "content": "This is Chocolate Doom’s “to do” list. Note that this is kind of an arbitrary\nand unstructured wish list of features and improvements. The bug tracker\n(http://chocolate-doom.org/bugs) has more feature requests.\n\n* Multiplayer:\n  - Use UPnP to automatically configure port forwarding for NATed\n    networks.\n  - Multiplayer options and configuration file (server name, etc)\n* Improve multiplayer startup:\n  - Select an IWAD automatically from the server’s game type rather than\n    all players having to specify -iwad.\n  - Send list of WADs to load instead of all clients having to specify -file.\n  - Same applies to dehacked patches and wad merging parameters.\n* Portability improvements:\n  - Test on and fix for architectures where `((-2) >> 1) != -1`\n  - Use size-specific types (eg. `int32_t` instead of int)\n  - Don’t make structure packing assumptions when loading levels.\n  - Port to every OS and architecture under the sun\n  - Port to Emscripten and release a web-based version.\n* Video capture mode\n  - Real-time recording of gameplay\n  - Batch conversion of demos into videos\n* Heretic/Hexen/Strife:\n  - Merge r_draw.c to common version and delete duplicates\n  - Heretic v1.2 emulation (if possible)\n  - Hexen v1.0 emulation (if possible/necessary)\n  - Strife v1.1 emulation (for demo IWAD support)\n  - Screensaver mode\n\nCrazy pie in the sky ideas:\n\n* Automatic WAD installer - download and run TCs from a list automatically\n  (automating the current “instructions on wiki” system).\n* Textscreen interface to the Compet-N database: menu driven system to\n  automatically download and play speedruns.\n* DWANGO-like interface for finding players and setting up games.\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.0419921875,
          "content": "#!/bin/sh\n\nautoreconf -fi\n./configure \"$@\"\n"
        },
        {
          "name": "check-extern.sh",
          "type": "blob",
          "size": 0.1513671875,
          "content": "#!/bin/sh\nEXTERN=\"$(grep -e 'extern[^A-Za-z0-9_]' $(find . -name *.c))\"\nif [ -n \"$EXTERN\" ] ; then\n\techo \"extern found in .c files:\\n${EXTERN}\"\n\texit 1\nfi\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 9.111328125,
          "content": "AC_INIT(Chocolate Doom, 3.1.0,\n        chocolate-doom-dev-list@chocolate-doom.org, chocolate-doom)\n\nPACKAGE_SHORTNAME=${PACKAGE_NAME% Doom}\nPACKAGE_SHORTDESC=\"Conservative source port\"\nPACKAGE_COPYRIGHT=\"Copyright (C) 1993-2024\"\nPACKAGE_LICENSE=\"GNU General Public License, version 2\"\nPACKAGE_MAINTAINER=\"Simon Howard\"\nPACKAGE_URL=\"https://www.chocolate-doom.org/\"\nPACKAGE_RDNS=\"org.chocolate_doom\"\nPACKAGE_BUGREPORT=\"https://github.com/chocolate-doom/chocolate-doom/issues\"\n\ndnl Check for Emscripten environment so we can set necessary environment variables\nAC_ARG_ENABLE(\n  [emscripten],\n  [AS_HELP_STRING([--enable-emscripten=@<:@no/yes@:>@],[compile to JavaScript using Emscripten])],,\n  [AS_CASE([$CC],\n           [*emcc.py], [enable_emscripten=\"yes\"],\n           [*emcc], [enable_emscripten=\"yes\"],\n           [enable_emscripten=\"no\"]\n\t  )\n ]\n)\n\nAS_IF([test \"x$enable_emscripten\" = \"xyes\"],\n  AC_MSG_NOTICE([auto-detected use of Emscripten])\n  SDL_CFLAGS=\"-s USE_SDL=2\"\n  SDL_LIBS=\"-s USE_SDL=2\"\n  SDLMIXER_CFLAGS=\"-s USE_SDL=2 -s USE_SDL_MIXER=2\"\n  SDLMIXER_LIBS=\"-s USE_SDL=2 -s USE_SDL_MIXER=2\"\n  SDLNET_CFLAGS=\"-s USE_SDL=2 -s USE_SDL_NET=2\"\n  SDLNET_LIBS=\"-s USE_SDL=2 -s USE_SDL_NET=2\"\n  EM_LDFLAGS=\"-s ALLOW_MEMORY_GROWTH=1 -s ASYNCIFY=1 -s EXPORTED_RUNTIME_METHODS=[ccall,cwrap,FS,ENV,PATH,ERRNO_CODES] -s FORCE_FILESYSTEM\"\n)\n\nAC_CONFIG_AUX_DIR(autotools)\nAC_CANONICAL_HOST\n\norig_CFLAGS=\"$CFLAGS\"\n\nAM_PROG_AR\nAC_PROG_CC\nAC_PROG_RANLIB\nAC_CHECK_PROG(HAVE_PYTHON, python3, true, false)\n\nOPT_LEVEL=2\n\n# If this is gcc, we have some options we'd like to turn on.  Turn on \n# optimisation and debugging symbols.\n\nif test \"$GCC\" = \"yes\"\nthen\n        WARNINGS=\"-Wall -Wdeclaration-after-statement -Wredundant-decls\"\n        CFLAGS=\"-O$OPT_LEVEL -g $WARNINGS $orig_CFLAGS\"\nfi\n\nAC_CANONICAL_TARGET\nTARGET_OS=\"\"\nAS_CASE([$target_cpu],\n        [x86_64],\n        [\n            TARGET_OS=\"x64\"\n        ],\n        [aarch64*|arm*],\n        [\n            TARGET_OS=\"arm\"\n        ],\n        [i?86|arm*],\n        [\n            TARGET_OS=\"32\"\n        ])\nAC_SUBST([TARGET_OS])\n\nPKG_CHECK_MODULES(SDL, [sdl2 >= 2.0.14])\n# Check for SDL2_mixer\nAC_ARG_ENABLE([sdl2mixer],\nAS_HELP_STRING([--disable-sdl2mixer], [Disable SDL2_mixer support])\n)\nAS_IF([test \"x$enable_sdl2mixer\" != xno], [\n    PKG_CHECK_MODULES(SDLMIXER, [SDL2_mixer >= 2.0.2])], [\n    AC_DEFINE([DISABLE_SDL2MIXER], [1], [SDL2_mixer disabled])\n])\n\n# Check for networking\nAC_ARG_ENABLE([sdl2net],\nAS_HELP_STRING([--disable-sdl2net], [Disable SDL2_net support])\n)\nAS_IF([test \"x$enable_sdl2net\" != xno], [\n    PKG_CHECK_MODULES(SDLNET, [SDL2_net >= 2.0.0])], [\n    AC_DEFINE([DISABLE_SDL2NET], [1], [SDL2_net disabled])\n])\n\n# Check for bash-completion.\nAC_ARG_ENABLE([bash-completion],\nAS_HELP_STRING([--disable-bash-completion], [Disable bash-completion])\n)\nAS_IF([test \"x$enable_bash_completion\" != xno], [\n    AS_IF([test \"x$HAVE_PYTHON\" = xfalse], [\n        AC_MSG_WARN([Building bash-completion requires Python, but Python not found])\n        enable_bash_completion=no\n    ])\n])\n\n# Check for doc.\nAC_ARG_ENABLE([doc],\nAS_HELP_STRING([--disable-doc], [Disable documentation])\n)\nAS_IF([test \"x$enable_doc\" != xno], [\n    AS_IF([test \"x$HAVE_PYTHON\" = xfalse], [\n        AC_MSG_WARN([Building documentation requires Python, but Python not found])\n        enable_doc=no\n    ])\n])\n\n# Check for fonts.\nAC_ARG_ENABLE([fonts],\nAS_HELP_STRING([--disable-fonts], [Disable fonts])\n)\nAS_IF([test \"x$enable_fonts\" != xno], [\n    AS_IF([test \"x$HAVE_PYTHON\" = xfalse], [\n        AC_MSG_WARN([Building fonts require Python, but Python not found])\n        enable_fonts=no\n    ])\n])\n\n# Check for icons.\nAC_ARG_ENABLE([icons],\nAS_HELP_STRING([--disable-icons], [Disable icons])\n)\nAS_IF([test \"x$enable_icons\" != xno], [\n    AS_IF([test \"x$HAVE_PYTHON\" = xfalse], [\n        AC_MSG_WARN([Building icons require Python, but Python not found])\n        enable_icons=no\n    ])\n])\n\n# Check for memory pool debugging.\nAC_ARG_ENABLE([zpool],\nAS_HELP_STRING([--disable-zpool], [Disable memory pools for debugging])\n)\nAS_IF([test \"x$enable_zpool\" != xno], [], [\n    AC_DEFINE([DISABLE_ZPOOL], [1], [Memory pooling disabled])\n])\n\n# Check for libsamplerate.\nAC_ARG_WITH([libsamplerate],\nAS_HELP_STRING([--without-libsamplerate],\n    [Build without libsamplerate @<:@default=check@:>@]),\n[],\n[\n    [with_libsamplerate=check]\n])\nAS_IF([test \"x$with_libsamplerate\" != xno], [\n    PKG_CHECK_MODULES(SAMPLERATE, samplerate >= 0.1.8, [\n        AC_DEFINE([HAVE_LIBSAMPLERATE], [1], [libsamplerate installed])\n    ], [\n        AS_IF([test \"x$with_libsamplerate\" != xcheck], [AC_MSG_FAILURE(\n            [--with-libsamplerate was given, but test for libsamplerate failed])\n        ])\n    ])\n])\n\n# Check for libpng.\nAC_ARG_WITH([libpng],\nAS_HELP_STRING([--without-libpng],\n    [Build without libpng @<:@default=check@:>@]),\n[],\n[\n    [with_libpng=check]\n])\nAS_IF([test \"x$with_libpng\" != xno], [\n    PKG_CHECK_MODULES(PNG, libpng >= 1.2.50, [\n        AC_DEFINE([HAVE_LIBPNG], [1], [libpng installed])\n    ], [\n        AS_IF([test \"x$with_libpng\" != xcheck], [AC_MSG_FAILURE(\n            [--with-libpng was given, but test for libpng failed])\n        ])\n    ])\n])\n\n# Check for fluidsynth.\nAC_ARG_WITH([fluidsynth],\nAS_HELP_STRING([--without-fluidsynth],\n    [Build without fluidsynth @<:@default=check@:>@]),\n[],\n[\n    [with_fluidsynth=check]\n])\nAS_IF([test \"x$with_fluidsynth\" != xno] && [test \"x$enable_sdl2mixer\" != xno], [\n    PKG_CHECK_MODULES(FLUIDSYNTH, fluidsynth >= 2.2.0, [\n        AC_DEFINE([HAVE_FLUIDSYNTH], [1], [fluidsynth installed])\n    ], [\n        AS_IF([test \"x$with_fluidsynth\" != xcheck], [AC_MSG_FAILURE(\n            [--with-fluidsynth was given, but test for fluidsynth failed])\n        ])\n    ])\n])\n\n# TODO: We currently link everything against libraries that don't need it.\n# Use the specific library CFLAGS/LIBS variables instead of setting them here.\nCFLAGS=\"$CFLAGS $SDL_CFLAGS ${SAMPLERATE_CFLAGS:-} ${PNG_CFLAGS:-} ${FLUIDSYNTH_CFLAGS:-}\"\nLDFLAGS=\"$LDFLAGS $SDL_LIBS ${SAMPLERATE_LIBS:-} ${PNG_LIBS:-} ${FLUIDSYNTH_LIBS:-}\"\ncase \"$host\" in\n  *-*-mingw* | *-*-cygwin* | *-*-msvc* )\n    LDFLAGS=\"$LDFLAGS -lwinmm -lshlwapi\"\n    ;;\n  *)\nesac\n\nAC_CHECK_LIB(m, log)\n\nAC_CHECK_HEADERS([dirent.h linux/kd.h dev/isa/spkrio.h dev/speaker/speaker.h])\nAC_CHECK_FUNCS(mmap ioperm)\nAC_CHECK_DECLS([strcasecmp, strncasecmp], [], [], [[#include <strings.h>]])\n\n# OpenBSD I/O i386 library for I/O port access.\n# (64 bit has the same thing with a different name!)\n\nAC_CHECK_LIB(i386, i386_iopl)\nAC_CHECK_LIB(amd64, amd64_iopl)\n\ncase \"$host\" in\n  *-*-mingw* | *-*-cygwin* | *-*-msvc* )\n    AC_CHECK_TOOL(WINDRES, windres, )\n    ;;\n  *)\n    WINDRES=\n    ;;\nesac\n\nAC_CHECK_TOOL(OBJDUMP, objdump, )\nAC_CHECK_TOOL(STRIP, strip, )\n\nAC_ARG_ENABLE([werror], AS_HELP_STRING([--enable-werror], [Treat warnings as errors]))\n\nAS_IF([test \"x$enable_werror\" = \"xyes\"], [\n        CFLAGS=\"$CFLAGS -Werror\"\n])\n\nAM_CONDITIONAL(HAVE_WINDRES, test \"$WINDRES\" != \"\")\nAM_CONDITIONAL(HAVE_BASH_COMPLETION, [test \"x$enable_bash_completion\" != xno])\nAM_CONDITIONAL(HAVE_DOC, [test \"x$enable_doc\" != xno])\nAM_CONDITIONAL(HAVE_FONTS, [test \"x$enable_fonts\" != xno])\nAM_CONDITIONAL(HAVE_ICONS, [test \"x$enable_icons\" != xno])\nAM_CONDITIONAL(HAVE_ZPOOL, [test \"x$enable_zpool\" != xno])\n\ndnl Automake v1.8.0 is required, please upgrade!\n\nAM_INIT_AUTOMAKE([1.8.0 foreign])\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\nWINDOWS_RC_VERSION=`echo $PACKAGE_VERSION | sed 's/-.*//; s/\\./, /g; s/$/, 0/'`\n\ndnl Without a hyphen. This is used for the bash-completion scripts.\nPROGRAM_SPREFIX=$(echo $PACKAGE_SHORTNAME | tr A-Z a-z)\n\ndnl With a hyphen, used almost everywhere else.\nPROGRAM_PREFIX=${PROGRAM_SPREFIX}-\n\nAC_SUBST(PROGRAM_PREFIX)\nAC_DEFINE_UNQUOTED(PROGRAM_PREFIX, \"$PROGRAM_PREFIX\",\n                   Change this when you create your awesome forked version)\nAC_SUBST(PROGRAM_SPREFIX)\n\nAC_CONFIG_HEADERS(config.h:config.hin)\n\nAC_SUBST(WINDOWS_RC_VERSION)\nAC_SUBST(SDLMIXER_CFLAGS)\nAC_SUBST(SDLMIXER_LIBS)\nAC_SUBST(EM_LDFLAGS)\n\nAC_SUBST(SDLNET_CFLAGS)\nAC_SUBST(SDLNET_LIBS)\n\nAC_SUBST(ac_aux_dir)\n\nAC_SUBST(PACKAGE_SHORTNAME)\nAC_SUBST(PACKAGE_SHORTDESC)\nAC_SUBST(PACKAGE_COPYRIGHT)\nAC_SUBST(PACKAGE_LICENSE)\nAC_SUBST(PACKAGE_MAINTAINER)\nAC_SUBST(PACKAGE_URL)\nAC_SUBST(PACKAGE_RDNS)\nAC_SUBST(PACKAGE_BUGREPORT)\n\ndnl Shut up the datarootdir warnings.\nAC_DEFUN([AC_DATAROOTDIR_CHECKED])\n\nAS_IF([test \"x$enable_emscripten\" = \"xyes\"],\n  EXEEXT=\".html\"\n)\n\nAC_CONFIG_FILES([\nMakefile\nman/Makefile\nman/bash-completion/Makefile\nman/bash-completion/doom.template\nman/bash-completion/heretic.template\nman/bash-completion/hexen.template\nman/bash-completion/strife.template\nopl/Makefile\nopl/examples/Makefile\npcsound/Makefile\npkg/Makefile\npkg/config.make\npkg/osx/Info.plist\nrpm.spec\ndata/Makefile\nsrc/Makefile\nsrc/doom-res.rc\nsrc/Doom.metainfo.xml\nsrc/Doom.desktop\nsrc/Doom_Screensaver.desktop\nsrc/doom/Makefile\nsrc/heretic-res.rc\nsrc/Heretic.metainfo.xml\nsrc/Heretic.desktop\nsrc/heretic/Makefile\nsrc/hexen-res.rc\nsrc/Hexen.metainfo.xml\nsrc/Hexen.desktop\nsrc/hexen/Makefile\nsrc/setup-res.rc\nsrc/setup/Makefile\nsrc/setup/Setup.desktop\nsrc/setup/setup-manifest.xml\nsrc/strife-res.rc\nsrc/Strife.metainfo.xml\nsrc/Strife.desktop\nsrc/strife/Makefile\ntextscreen/Makefile\ntextscreen/examples/Makefile\ntextscreen/fonts/Makefile\n])\nAC_OUTPUT\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "opl",
          "type": "tree",
          "content": null
        },
        {
          "name": "pcsound",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "quickcheck",
          "type": "commit",
          "content": null
        },
        {
          "name": "rpm.spec.in",
          "type": "blob",
          "size": 3.0556640625,
          "content": "\nName: @PACKAGE@\nSummary: @PACKAGE_SHORTDESC@\nVersion: @VERSION@\nRelease: 1\nSource: https://www.chocolate-doom.org/downloads/@VERSION@/@PACKAGE@-@VERSION@.tar.gz\nURL: @PACKAGE_URL@\nGroup: Amusements/Games\nBuildRoot: /var/tmp/@PACKAGE@-buildroot\nLicense: @PACKAGE_LICENSE@\nPackager: @PACKAGE_MAINTAINER@ <@PACKAGE_BUGREPORT@>\nPrefix: %{_prefix}\nAutoreq: 0\nRequires: libSDL-1.2.so.0, libSDL_mixer-1.2.so.0, libSDL_net-1.2.so.0\n\n%prep\nrm -rf $RPM_BUILD_ROOT\n\n%setup -q\n\n%build\n./configure \\\n \t--prefix=/usr \\\n\t--exec-prefix=/usr \\\n\t--bindir=/usr/bin \\\n\t--sbindir=/usr/sbin \\\n\t--sysconfdir=/etc \\\n\t--datadir=/usr/share \\\n\t--includedir=/usr/include \\\n\t--libdir=/usr/lib \\\n\t--libexecdir=/usr/lib \\\n\t--localstatedir=/var/lib \\\n\t--sharedstatedir=/usr/com \\\n\t--mandir=/usr/share/man \\\n\t--infodir=/usr/share/info\nmake\n\n%install\n%makeinstall\n\n%clean\nrm -rf $RPM_BUILD_ROOT\n\n%description\n%(sed -n \"/##/ q; p \" < README.md)\n\nSee @PACKAGE_URL@ for more information.\n\n%package -n @PROGRAM_PREFIX@heretic\nSummary: @PACKAGE_SHORTDESC@ (Heretic binaries)\nGroup: Amusements/Games\nRequires: libSDL-1.2.so.0, libSDL_mixer-1.2.so.0, libSDL_net-1.2.so.0\n\n%files\n%{_mandir}/man5/@PROGRAM_PREFIX@doom.cfg.5*\n%{_mandir}/man5/default.cfg.5*\n%{_mandir}/man6/@PROGRAM_PREFIX@doom.6*\n%{_mandir}/man6/@PROGRAM_PREFIX@setup.6*\n%{_mandir}/man6/@PROGRAM_PREFIX@server.6*\n/usr/share/doc/@PACKAGE@/*\n/usr/games/@PROGRAM_PREFIX@doom\n/usr/games/@PROGRAM_PREFIX@server\n/usr/games/@PROGRAM_PREFIX@doom-setup\n/usr/share/icons/hicolor/128x128/apps/*\n/usr/share/applications/*\n\n%description -n @PROGRAM_PREFIX@heretic\n%(sed -n \"/##/ q; p \" < README.md)\n\nThese are the Heretic binaries.\n\nSee @PACKAGE_URL@ for more information.\n\n%files -n @PROGRAM_PREFIX@heretic\n%{_mandir}/man5/@PROGRAM_PREFIX@heretic.cfg.5*\n%{_mandir}/man5/heretic.cfg.5*\n%{_mandir}/man6/@PROGRAM_PREFIX@heretic.6*\n/usr/share/doc/@PROGRAM_PREFIX@heretic/*\n/usr/games/@PROGRAM_PREFIX@heretic\n/usr/games/@PROGRAM_PREFIX@heretic-setup\n\n%package -n @PROGRAM_PREFIX@hexen\nSummary: @PACKAGE_SHORTDESC@ (Hexen binaries)\nGroup: Amusements/Games\nRequires: libSDL-1.2.so.0, libSDL_mixer-1.2.so.0, libSDL_net-1.2.so.0\n\n%description -n @PROGRAM_PREFIX@hexen\n%(sed -n \"/##/ q; p \" < README.md)\n\nThese are the Hexen binaries.\n\nSee @PACKAGE_URL@ for more information.\n\n%files -n @PROGRAM_PREFIX@hexen\n%{_mandir}/man5/@PROGRAM_PREFIX@hexen.cfg.5*\n%{_mandir}/man5/hexen.cfg.5*\n%{_mandir}/man6/@PROGRAM_PREFIX@hexen.6*\n/usr/share/doc/@PROGRAM_PREFIX@hexen/*\n/usr/games/@PROGRAM_PREFIX@hexen\n/usr/games/@PROGRAM_PREFIX@hexen-setup\n\n%package -n @PROGRAM_PREFIX@strife\nSummary: @PACKAGE_SHORTDESC@ (Strife binaries)\nGroup: Amusements/Games\nRequires: libSDL-1.2.so.0, libSDL_mixer-1.2.so.0, libSDL_net-1.2.so.0\n\n%description -n @PROGRAM_PREFIX@strife\n%(sed -n \"/##/ q; p \" < README.md)\n\nThese are the Strife binaries.\n\nSee @PACKAGE_URL@ for more information.\n\n%files -n @PROGRAM_PREFIX@strife\n%{_mandir}/man5/@PROGRAM_PREFIX@strife.cfg.5*\n%{_mandir}/man5/strife.cfg.5*\n%{_mandir}/man6/@PROGRAM_PREFIX@strife.6*\n/usr/share/doc/@PROGRAM_PREFIX@strife/*\n/usr/games/@PROGRAM_PREFIX@strife\n/usr/games/@PROGRAM_PREFIX@strife-setup\n\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "textscreen",
          "type": "tree",
          "content": null
        },
        {
          "name": "vcpkg.json",
          "type": "blob",
          "size": 0.123046875,
          "content": "{\n  \"dependencies\": [\n    \"sdl2\",\n    \"sdl2-mixer\",\n    \"sdl2-net\",\n    \"libpng\",\n    \"libsamplerate\",\n    \"fluidsynth\"\n  ]\n}\n"
        },
        {
          "name": "win32",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}