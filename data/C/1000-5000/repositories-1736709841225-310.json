{
  "metadata": {
    "timestamp": 1736709841225,
    "page": 310,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "starrtc/starrtc-server",
      "stars": 2958,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.173828125,
          "content": "*.sh linguist-language=C\n*.cs linguist-language=C\n*.go linguist-language=C\n*.php linguist-language=C\n*.js linguist-language=C\n*.py linguist-language=C\n*.java linguist-language=C\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0283203125,
          "content": "log/\r\nmsgChatDB/\r\n*.log\r\n*.db"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.6689453125,
          "content": "# 服务端程序免费私有部署\n\n以下服务端均完全免费(采用C语言开发)，无鉴权，可用于腾讯云，阿里云或局域网内部署，现已开放:\n\n\n| 服务端        | 功能           | 备注  |\n| ------------- |:-------------  |:-----|\n| voipServer    | 一对一视频通话 \t\t\t\t\t  | 需要搭配msgServer使用 |\n| msgServer     | 单聊（如文字聊天），私信，信令      |    |\n| chatDBServer  | 离线消息存储      \t\t\t\t  |     |\n| groupServer   | 群聊      \t\t\t\t\t      | 如果只需要单聊，不需要群聊的话，不用启动    |\n| chatRoomServer| 多人聊天室      \t\t\t\t\t  |     |\n| liveSrcServer | 多人视频会议  RTMP推流      \t\t  |     |\n| liveVdnServer | 互动连麦直播，vdn分发网络\t\t      |     |\n| liveProxyServer | RTSP 拉流服务端     \t\t\t\t      |     |\n| videoRecServer | 录制录像功能     \t\t\t\t      |     |\n| groupPushHttpProxy | 系统消息及群操作功能     \t\t\t\t      |     |\n\n\n![#f03c15](https://placehold.it/15/f03c15/000000?text=+) web-supported目录里面是支持web端的服务端程序与自签名证书。do-not-support-web目录里面的服务端程序不支持web端。\n\n**支持CentOS 64bit，Ubuntu 64bit**。Windows上请自行安装虚拟机(请使用桥接)或docker测试。\n\n![#f03c15](https://placehold.it/15/f03c15/000000?text=+) 部署步骤（请切换为root用户或者用sudo执行）：\n\n第1步：下载服务端程序： git clone https://github.com/starrtc/starrtc-server.git\n\t\t\n\t\t然后进入相应目录，直接执行chmod +x *.sh && ./start.sh 即部署成功！如果想单独运行，请继续下面的步骤。\n\n第2步：进入相应目录，给所有服务端程序加可执行权限: chmod +x *Server  \n\n第3步：部署各服务端程序，具体如下：\n\n其中.log后缀文件为日志文件，可通过命令tail -f xxx.log查看相关日志。\n\nvoip服务端部署\n==\n```java\n后台启动：\nnohup ./voipServer > voipServer.log 2>&1 &\n\n刚开始为了验证是否启动成功，可以不后台启动，而是通过运行 ./voipServer 直接看输出日志是否成功，成功了以后就可以后台启动。\n```\n注：也需要部署msgServer,用于传输呼叫，接听等消息。\n\nIM服务端部署\n==\nIM全套服务，分为3个服务端程序，分别是:\n\n消息服务端msgServer、离线消息数据服务端chatDBServer，群管理服务端groupServer，分别启动即可。\n\n只需要单聊的，不需要启动groupServer。\n\n可以保持自己原有的im系统不变，用我们的im系统作为voip等服务的信令服务。\n```java\n后台启动：\nnohup ./msgServer     > msgServer.log 2>&1 &\nnohup ./chatDBServer  > chatDBServer.log 2>&1 &\nnohup ./groupServer   > groupServer.log 2>&1 &\n```\n\nchatRoom服务端部署\n==\n```java\n后台启动：\nnohup ./chatRoomServer > chatRoomServer.log 2>&1 &\n```\n\nliveSrc服务端部署\n==\n```java  \n后台启动：\nnohup ./liveSrcServer > liveSrcServer.log 2>&1 &\n```\n\nRTMP推流测试:可打开安卓客户端，新建一个会议室，点击RTMP推流，填上RTMP URL后，点击推流即可。然后用其它第3方播放器如VLC就可以打开该RTMP URL观看会议画面了。\n\n同理，可以在直播间推流，用vlc打开就可以观看直播了。\n\nliveVdn服务端部署\n==\n互动直播，观众不限人数\n```java  \n后台启动：\nnohup ./liveVdnServer > liveVdnServer.log 2>&1 &\n```\n\n录制服务端(videoRecServer)部署\n==\n目前用于liveSrcServer和voipServer的视频录像功能，目前为测试版，输出为ts文件，支持自定义切片或不切片，音频只支持AAC格式。\n\nvideoRecServer默认是切片模式，30s一片，若不切片，请在程序同级目录中新建starrtc.conf文本文件，写入recSegMode=off，即关闭切片模式，不切片的时候切片序号一直为0。\n\n文件目录格式为：\n\n在线会议或互动直播:\n\n./RECFOLDER/liveChannels/用户名/resSessionId_用户名_切片序号.ts，如./RECFOLDER/liveChannels/tom/1573119917990_tom_0.ts\n\n一对一视频通话(VOIP):\n\n./RECFOLDER/voips/用户名/resSessionId_用户名_切片序号.ts，如./RECFOLDER/voips/tom/1573119917990_tom_0.ts\n\n其中，sessionId在移动端SDK中获取得到，详见android文档。\n\n\n\n```java  \n后台启动：\nnohup ./videoRecServer > videoRecServer.log 2>&1 &\n```\n\n系统消息及群操作功能服务\n==\n用户使用AEC高级模式的情况下使用，比如给某用户发送系统消息(例如购买消费成功通知)，或给某个群的全部用户发送群系统消息(例如某人进群、退群)。\n\n请注意该服务仅供内网其他服务使用，不要将19922端口暴露到外网！\n\n```java \npush系统消息:\ntoUsers：需要发送消息的所有用户，用逗号隔开\nmsg： 需要发送的文本内容\ndigest： 需要发送的文本内容的摘要，用于用户不在线时的push推送使用\nhttp://www.xxx.com:19922/pushSystemMsgToUsers?toUsers=userId1,userId2,userId3,...&msg=xxxx&digest=xxxx\n\npush群消息(全员):   \nhttp://www.xxx.com:19922/pushGroupMsg?groupId=xxx&msg=xxxx\n```\n\n下面五个和群有关的接口，在客户端sdk同样有实现，但通过这些接口，服务端可以主动给群服务器同步群成员，或对群成员进行其他操作，请您根据实际需求来选取合适的群成员同步策略。\n```java \n同步群成员:\t\ngroupId: 群id\ngroupList:   所有群成员，用逗号隔开，不传groupList表示清空这个群的成员\nignoreList： 对该群设置了消息免打扰的群成员id，用逗号隔开\nhttp://www.xxx.com:19922/syncGroupList?groupId=xxx&groupList=userId1,userId2,userId3,...&ignoreList=userId1,userIdx,...\n\n添加群成员:   \naddedUsers: 要添加进的群的所有用户id，用逗号隔开\nhttp://www.xxx.com:19922/addUsersToGroup?groupId=xxx&addedUsers=userId1,userId2,userId3,...\n\n删除群成员:   \ndeledUsers: 需要从群内删除的所有用户id，用逗号隔开\nhttp://www.xxx.com:19922/delUsersFromGroup?groupId=xxx&deledUsers=userId1,userId2,userId3,...\n\n设置免打扰:\t\nignoreList: 对该群设置消息免打扰(不接收群消息)的所有用户id，用逗号隔开\nhttp://www.xxx.com:19922/setPushIgnore?groupId=xxx&ignoreList=userId1,userIdx,...\n\n取消免打扰:\t\nignoreList: 对该群取消免打扰(接收群消息)的所有用户id，用逗号隔开\nhttp://www.xxx.com:19922/unsetPushIgnore?groupId=xxx&ignoreList=userId1,userIdx,...\n\n```\n\n\n\n\n\n拉流服务端部署\n==\n用于拉取第三方rtsp流(RTMP流暂未开放)，转换为starRTC协议后转发到liveSrcServer，\n然后就可以在各终端(Android,iOS,PC和web)的在线会议或互动直播中播放这个流了。\n\n```java  \n后台启动：\nnohup ./liveProxyServer > liveProxyServer.log 2>&1 &\n```\n\n测试方法：首先找到一个可以正常播放的rtsp流（也可以使用示例程序里面的默认测试流），\n然后可以打开安卓示例程序，打开设置-》第3方流测试-》新建一个流，填一下名字，和流的rstp地址（也可以不填直接使用默认的测试流），\n同时选择该流是在直播中播放，还是在会议中播放。 然后去直播间或会议室就可以看到拉的视频流画面了。\n\n\n也可以自己使用HTTP方式调用：\n\n- 1 创建channelId并拉流（streamType暂时只支持rtsp），接口返回channelId：\n\nhttp://www.xxx.com:19932/push?streamType=rtsp&streamUrl=rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov&roomLiveType=0&roomId=xxxx&extra=xxxxx \n\n其中roomId和extra为可选参数\n\n- 2 拉流到指定的channelId：\n\nhttp://www.xxx.com:19932/push?streamType=rtsp&streamUrl=rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov&channelId=xxxx\n\n- 3 停止拉流（不删除channelId，仍在列表中存在）：\n\nhttp://www.xxx.com:19932/close?channelId=xxxx\n\n- 4 停止拉流，同时删除channelId：\n\nhttp://www.xxx.com:19932/delete?channelId=xxxx\n\n需要开放端口\n====\n| 服务端        | 端口           | web端需开放端口            | \n| ------------- |:-------------  |:-------------  |\n| msgServer      | 19903(tcp)     | 29991(tcp):https信任测试   | \n| voipServer     | 10086(udp)  44446(udp):P2P通讯     | 10087(tcp):websocket 10088(udp):webrtc   29992(tcp):https信任测试| \n| chatRoomServer | 19906(tcp)      | 29993(tcp):https信任测试  | \n| liveSrcServer  | 19931(udp)       | 19934(tcp):websocket 19935(udp):webrtc 29994(tcp):https信任测试 |\n| liveVdnServer  | 19928(udp)     \t | 19940(tcp):websocket 19941(udp):webrtc 29995(tcp):https信任测试\t|\n| liveProxyServer |19932(tcp)   \t |   |\n\n\n测试方法\n=====\n下载[客户端示例程序](https://docs.starrtc.com/en/download/)，\n\n打开\"设置->服务器配置\"，然后填写你自己的服务器ip即可（注意不要修改端口号，如果是域名不需要添加“http://”前缀）。\n\n\n客户端开发\n=====\n基于私有部署服务端开发自己的客户端，参见[开发文档](https://docs.starrtc.com/zh-cn/docs/android-3b.html)，\n\n示例代码参见：https://docs.starrtc.com/en/download/\n\n服务端开发\n=====\n打开配置文件starrtc.conf，修改里面的aecurl的值（目前不支持https地址），开发请参考server-api目录里面的示例代码。\n\nContact\n=====\nQQ ： 2162498688\n\n邮箱：<a href=\"mailto:support@starRTC.com\">support@starRTC.com</a>\n\n手机: 186-1294-6552\n\n微信：starRTC\n\nQQ群：807242783\n\n遇到问题请先根据 https://github.com/starrtc/starrtc-server/wiki 自查，还不能解决请加群反馈。\n\n更新记录\n=====\nhttps://github.com/starrtc/starrtc-server/wiki/Changelog\n\n参考\n==\n[端口连接性测试](https://github.com/starrtc/starrtc-server/wiki/TCP%E4%B8%8EUDP%E7%AB%AF%E5%8F%A3%E8%BF%9E%E6%8E%A5%E6%80%A7%E6%B5%8B%E8%AF%95)\n\n[阿里云修改安全组规则](https://help.aliyun.com/document_detail/101471.html)\n\n[腾讯云安全组操作指南](https://cloud.tencent.com/document/product/213/18197)\n\n"
        },
        {
          "name": "README_English.md",
          "type": "blob",
          "size": 11.453125,
          "content": "# Free private deployment of server programs\n\nThe following servers are completely free (developed in C language), which is no authentication and can be used in Tencent Cloud, Alibaba Cloud or LAN deployment. Now the following servers are open :\n\n\n| Server        | Feature           | Remarks  |\n| ------------- |:-------------  |:-----|\n| voipServer    | One-to-one video call \t\t\t\t\t  | it needs to work with msgServer |\n| msgServer     | Single chat (such as text chat), private message, signaling      |    |\n| chatDBServer  | Offline message storage      \t\t\t\t  |     |\n| groupServer   | group chat      \t\t\t\t\t      | In the case of one-to-one chat without group chat, this server does not neet to be started.    |\n| chatRoomServer| people chat      \t\t\t\t\t  |     |\n| liveSrcServer | people video conference and push RTMP stream       |     |\n| liveVdnServer | Interactive live broadcast, vdn distribution network\t\t      |     |\n| liveProxyServer | pull RTSP  stream server     \t\t\t\t      |     |\n| videoRecServer | Recording function     \t\t\t\t      |     |\n| groupHttpProxyServer | System message function and group operation function     \t\t\t\t      |     |\n\n\n![#f03c15](https://placehold.it/15/f03c15/000000?text=+) The server program in the web-supported directory contains the program which supports the web and a self-signed certificate.\n\nThe server program in the do-not-support-web directory does not support the web side.\n\n**Support CentOS 64bit，Ubuntu 64bit**. Please install the VM (use bridge mode) or docker test on Windows system.\n\n![#f03c15](https://placehold.it/15/f03c15/000000?text=+) Deployment(Please switch to root user or execute with sudo)：\n\n1:Download the server program: git clone https://github.com/starrtc/starrtc-server.git\n   Then enter the corresponding directory and execute the command:chmod +x *.sh && ./start.sh,and you have finished the deployment.\n   If you want to run a program alone, continue with the steps below.\n\n2:Go to the appropriate directory to add executable permissions to all server programs: chmod +x *Server \n\n3:Deploy each server program as follows:\n\nThe .log suffix file is a log file. You can view related logs by using the command: tail -f xxx.log.\n\nDeployment of Voip server \n==\n```java\nStart the program in the background:\nnohup ./voipServer > voipServer.log 2>&1 &\n\nIn order to verify whether the startup is successful, you can start it without background by running the command : ./voipServer.\nThen you can judge the startup status by seeing the output log.\nIf the startup is successful, you can start it in the background.\n```\nNote: It is also necessary to deploy msgServer for sending calls, receiving calls and other messages.\n\n\nDeployment of IM server \n==\nIM full service contains 3 server programs. They are:\n\nThe message server:msgServer, the offline message data server:chatDBServer, and the group management server:groupServer.\nThese servers can be started separately.\n\nIf you just need one-to-one chat, you do not need to start groupServer.\n\nYou can keep your original im system unchanged, and use our im system as a signaling service which serves for services such as voip.\n```java\nStart the program in the background:\nnohup ./msgServer     > msgServer.log 2>&1 &\nnohup ./chatDBServer  > chatDBServer.log 2>&1 &\nnohup ./groupServer   > groupServer.log 2>&1 &\n```\n\nDeployment of chatRoom server \n==\n```java\nStart the program in the background:\nnohup ./chatRoomServer > chatRoomServer.log 2>&1 &\n```\n\nDeployment of liveSrc server \n==\n```java  \nStart the program in the background:\nnohup ./liveSrcServer > liveSrcServer.log 2>&1 &\n```\n\nPush RTMP stream test: open the android client app and create a new meeting room, then click RTMP button to fill in the RTMP URL, and click the push stream button. \nThen you can open the RTMP URL to watch the meeting screen by the other 3rd party player such as VLC player.\n\n\nYou can push the stream in the live broadcast room in the same way, then you can watch the live broadcast with vlc player.\n\nDeployment of liveVdn server \n==\nThere are unlimited number of viewers in live broadcast chatroom,\n```java  \nStart the program in the background:\nnohup ./liveVdnServer > liveVdnServer.log 2>&1 &\n```\n\nDeployment of recording server (videoRecServer)\n==\nThe video recording function is used for liveSrcServer and voipServer currently,And the output is ts format, the codec of audio only support AAC.\n\nThe default mode of saved file is sliced ts segment, you can also choose no segment mode by following step:\n\nCreate a new text file called starrtc.conf in the same directory, add a new line: recSegMode=off, that means to disable segment mode.\n\n\nThe format of file directory is：\n\nliveSrcServer:\n\n./RECFOLDER/liveChannels/userId/resSessionId_userId_segmentIndex.ts，如./RECFOLDER/liveChannels/tom/1573119917990_tom_0.ts\n\nvoipServer:\n\n./RECFOLDER/voips/userId/resSessionId_userId_segmentIndex.ts，如./RECFOLDER/voips/tom/1573119917990_tom_0.ts\n\nThe sessionId is obtained in the mobile SDK, see android docs.\n\n\n```java  \nStart the program in the background:\nnohup ./videoRecServer > videoRecServer.log 2>&1 &\n```\n\nSystem message and group operation function Server\n==\nthe server will be worked when the user uses the AEC advanced mode. For example, sending a system message to a user( such as a notification of purchase successfully ), or sending a group system message to all users of the group((such as someone entering or leaving a group).\n\nPlease pay attention that this service is only available for other services on the intranet. Do not expose the port 19922 to the external network!\n\n\n```java \npush system information:\ntoUsers：all users who need to send a message, which is separated by commas.\nmsg： Text message that needs to be sent\ndigest： a summary of the text message that needs to be sent for push mode when the user is offline\nhttp://www.xxx.com:19922/pushSystemMsgToUsers?toUsers=userId1,userId2,userId3,...&msg=xxxx&digest=xxxx\n\nPush group message (all members):   \nhttp://www.xxx.com:19922/pushGroupMsg?groupId=xxx&msg=xxxx\n```\n\nThe following five groups-related interfaces are also implemented in the client sdk.\nThe server can synchronize the group members or perform other operations on the group members actively.\nPlease select the appropriate group member synchronization strategy according to actual needs.\n\n```java \nDo not pass the parameter groupList means clearing the members of this group when synchronizing.\nSynchronization group members:\t\ngroupId: group ID\ngroupList: All user ids in the group, separated by commas\nignoreList： all user ids which is set for mute message notification, which is separated by commas.\nhttp://www.xxx.com:19922/syncGroupList?groupId=xxx&groupList=userId1,userId2,userId3,...&ignoreList=userId1,userIdx,...\n\nAdd group members: \ngroupId: group ID\naddedUsers: All user ids of the group to be added,which is separated by commas.\nhttp://www.xxx.com:19922/addUsersToGroup?groupId=xxx&addedUsers=userId1,userId2,userId3,...\n\nDelete group members:    \ngroupId: group ID\ndeledUsers: All user ids that need to be removed from the group, which is separated by commas.\nhttp://www.xxx.com:19922/delUsersFromGroup?groupId=xxx&deledUsers=userId1,userId2,userId3,...\n\nSet mute:\t\ngroupId: group ID\nignoreList: All user ids that need to be set mute notification from this group,which is separated by commas.\nhttp://www.xxx.com:19922/setPushIgnore?groupId=xxx&ignoreList=userId1,userIdx,...\n\nUnset mute::\t\ngroupId: group ID\nignoreList: All user ids that need to be unset mute notification from this group,which is separated by commas.\nhttp://www.xxx.com:19922/unsetPushIgnore?groupId=xxx&ignoreList=userId1,userIdx,...\n```\n\n\n\n\n\nDeployment of pull stream server \n==\nThe server is used to pull a third-party rtsp stream (RTMP stream is not open yet), and convert the stream to the tream starRTC protocol, then forward the stream to liveSrcServer,\nThen you can play this stream in a meeting room or an interactive live broadcast of each terminal (Android, iOS, PC and web).\n\n```java  \nStart the program in the background:\nnohup ./liveProxyServer > liveProxyServer.log 2>&1 &\n```\n\nTest method: Firstly, you find a rtsp stream that can be played normally (you can also use the default test stream in the demo).\nSecondly, you can open the android demo, open the settings -> \"3rd party flow test ->\" create a new stream, fill in the name and the stream's rstp address (you can also use the default test stream without filling in).\nAt the same time, you need to select whether the stream is played in a live room or in a meeting room. \nAt last, you can go to the live room or meeting room to watch the video stream.\n\n\nYou can also call it  by using HTTP:\n\n- 1 Create channelId and pull the stream, and the interface will return channelId:\n\nhttp://www.xxx.com:19932/push?streamType=rtsp&streamUrl=rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov&roomLiveType=0&roomId=xxxx&extra=xxxxx \n\nroomId and extra are optional parameters\n\n- 2 Pull the stream to the specified channelId:\n\nhttp://www.xxx.com:19932/push?streamType=rtsp&streamUrl=rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov&channelId=xxxx\n\n- 3 Stop pulling the stream (do not delete the channelId,which still exists in the list)：\n\nhttp://www.xxx.com:19932/close?channelId=xxxx\n\n- 4 Stop pulling the stream and deleting the channelId at the same time:\n\nhttp://www.xxx.com:19932/delete?channelId=xxxx\n\n Port needed to be open\n====\n| Server       | port           | Port needed to be open on the web         | \n| ------------- |:-------------  |:-------------  |\n| msgServer      | 19903(tcp)     | 29991(tcp):https trust test   | \n| voipServer     | 10086(udp)  44446(udp):P2P communication   | 10087(tcp):websocket 10088(udp):webrtc   29992(tcp):https trust test| \n| chatRoomServer | 19906(tcp)      | 29993(tcp)::https trust test  | \n| liveSrcServer  | 19931(udp)       | 19934(tcp):websocket 19935(udp):webrtc 29994(tcp)::https trust test |\n| liveVdnServer  | 19928(udp)     \t | 19940(tcp):websocket 19941(udp):webrtc 29995(tcp)::https trust test\t|\n| liveProxyServer |19932(tcp)   \t |   |\n\n\nTest method\n=====\nDownload[client demo](https://docs.starrtc.com/en/download/)，\n\nOpen \"Settings -> Server Configuration\" and fill in your server ip (you should be careful not to change the port number and you do not need to add the \"http://\" prefix if you use the demo name instead of ip).\n\n\nDevelopment of client app\n=====\nif you develop your own client app based on a private deployment server，please refer to [development document](https://docs.starrtc.com/zh-cn/docs/android-3b.html)，\n\nthe demo you can refer to：https://docs.starrtc.com/en/download/\n\n Development of Server\n=====\nYou can open the configuration file named starrtc.conf and modify the value of aecurl (the server does not support https address currently). Please refer to the demo in the server-api directory for development.\n\nContact\n=====\nQQ ： 2162498688\n\nE-mail：<a href=\"mailto:support@starRTC.com\">support@starRTC.com</a>\n\nPhone number: 186-1294-6552\n\nWechat：starRTC\n\nQQ group ID：807242783\n\nIf you encounter problems, please  refer to the page  https://github.com/starrtc/starrtc-server/wiki firstly, If you still can't solve the problem by adding the QQ group to feedback the problem.\n\nChangelog\n=====\nhttps://github.com/starrtc/starrtc-server/wiki/Changelog\n\nReference\n==\n[Port connectivity test](https://github.com/starrtc/starrtc-server/wiki/TCP%E4%B8%8EUDP%E7%AB%AF%E5%8F%A3%E8%BF%9E%E6%8E%A5%E6%80%A7%E6%B5%8B%E8%AF%95)\n\n[Rules of modifying Ali cloud  security group ](https://help.aliyun.com/document_detail/101471.html)\n\n[Operation Guide of Tencent Cloud Security Group](https://cloud.tencent.com/document/product/213/18197)\n"
        },
        {
          "name": "do-not-support-web",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "server-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "test.c",
          "type": "blob",
          "size": 0.0751953125,
          "content": "#include <stdio.h>\r\n\r\nint main(){\r\n\tprintf(\"hello, starRTC.\");\r\n\treturn 0;\r\n}"
        },
        {
          "name": "web-supported",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}