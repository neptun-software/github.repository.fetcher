{
  "metadata": {
    "timestamp": 1736710229994,
    "page": 958,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "golang-ui/nuklear",
      "stars": 1580,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.009765625,
          "content": ".DS_Store\n"
        },
        {
          "name": "CHANGELOG.txt",
          "type": "blob",
          "size": 18.736328125,
          "content": "# Changelog\n[date][x.yy.zz]-[description]\n\n- [date]: date on which the change has been pushed\n- [x.yy.zz]: Numerical version string representation. Each version number on the right\n             resets back to zero if version on the left is incremented.\n    - [x]: Major version with API and library breaking (extremly rare, maybe never)\n    - [yy]: Minor version with non-breaking API and library changes\n    - [zz]: Bug fix version with no direct changes to API\n- [description]: small descriptions listing changes\n\nChanges:\n--------\n- 2017/12/04 (2.00.6) - Added formated string tooltip widget\n- 2017/11/18 (2.00.5) - Fixed window becoming hidden with flag NK_WINDOW_NO_INPUT\n- 2017/11/15 (2.00.4) - Fixed font merging\n- 2017/11/07 (2.00.3) - Fixed window size and position modifier functions\n- 2017/09/14 (2.00.2) - Fixed nk_edit_buffer and nk_edit_focus behavior\n- 2017/09/14 (2.00.1) - Fixed window closing behavior\n- 2017/09/14 (2.00.0) - BREAKING CHANGE: Modifing window position and size funtions now\n                        require the name of the window and must happen outside the window\n                        building process (between function call nk_begin and nk_end).\n- 2017/09/11 (1.40.9) - Fixed window background flag if background window is declared last\n- 2017/08/27 (1.40.8) - Fixed `nk_item_is_any_active` for hidden windows\n- 2017/08/27 (1.40.7) - Fixed window background flag\n- 2017/07/07 (1.40.6) - Fixed missing clipping rect check for hovering/clicked\n                        query for widgets\n- 2017/07/07 (1.40.5) - Fixed drawing bug for vertex output for lines and stroked\n                        and filled rectangles\n- 2017/07/07 (1.40.4) - Fixed bug in nk_convert trying to add windows that are in\n                        process of being destroyed.\n- 2017/07/07 (1.40.3) - Fixed table internal bug caused by storing table size in\n                        window instead of directly in table.\n- 2017/06/30 (1.40.2) - Removed unneeded semicolon in C++ NK_ALIGNOF macro\n- 2017/06/30 (1.40.1) - Fixed drawing lines smaller or equal zero\n- 2017/06/08 (1.40.0) - Removed the breaking part of last commit. Auto layout now only\n                        comes in effect if you pass in zero was row height argument\n- 2017/06/08 (1.40.0) - BREAKING CHANGE: while not directly API breaking it will change\n                        how layouting works. From now there will be an internal minimum\n                        row height derived from font height. If you need a row smaller than\n                        that you can directly set it by `nk_layout_set_min_row_height` and\n                        reset the value back by calling `nk_layout_reset_min_row_height.\n- 2017/06/08 (1.39.1) - Fixed property text edit handling bug caused by past `nk_widget` fix\n- 2017/06/08 (1.39.0) - Added function to retrieve window space without calling a nk_layout_xxx function\n- 2017/06/06 (1.38.5) - Fixed `nk_convert` return flag for command buffer\n- 2017/05/23 (1.38.4) - Fixed activation behavior for widgets partially clipped\n- 2017/05/10 (1.38.3) - Fixed wrong min window size mouse scaling over boundries\n- 2017/05/09 (1.38.2) - Fixed vertical scrollbar drawing with not enough space\n- 2017/05/09 (1.38.1) - Fixed scaler dragging behavior if window size hits minimum size\n- 2017/05/06 (1.38.0) - Added platform double-click support\n- 2017/04/20 (1.37.1) - Fixed key repeat found inside glfw demo backends\n- 2017/04/20 (1.37.0) - Extended properties with selection and clipbard support\n- 2017/04/20 (1.36.2) - Fixed #405 overlapping rows with zero padding and spacing\n- 2017/04/09 (1.36.1) - Fixed #403 with another widget float error\n- 2017/04/09 (1.36.0) - Added window `NK_WINDOW_NO_INPUT` and `NK_WINDOW_NOT_INTERACTIVE` flags\n- 2017/04/09 (1.35.3) - Fixed buffer heap corruption\n- 2017/03/25 (1.35.2) - Fixed popup overlapping for `NK_WINDOW_BACKGROUND` windows\n- 2017/03/25 (1.35.1) - Fixed windows closing behavior\n- 2017/03/18 (1.35.0) - Added horizontal scroll requested in #377\n- 2017/03/18 (1.34.3) - Fixed long window header titles\n- 2017/03/04 (1.34.2) - Fixed text edit filtering\n- 2017/03/04 (1.34.1) - Fixed group closable flag\n- 2017/02/25 (1.34.0) - Added custom draw command for better language binding support\n- 2017/01/24 (1.33.0) - Added programatic way of remove edit focus\n- 2017/01/24 (1.32.3) - Fixed wrong define for basic type definitions for windows\n- 2017/01/21 (1.32.2) - Fixed input capture from hidden or closed windows\n- 2017/01/21 (1.32.1) - Fixed slider behavior and drawing\n- 2017/01/13 (1.32.0) - Added flag to put scaler into the bottom left corner\n- 2017/01/13 (1.31.0) - Added additional row layouting method to combine both\n                        dynamic and static widgets.\n- 2016/12/31 (1.30.0) - Extended scrollbar offset from 16-bit to 32-bit\n- 2016/12/31 (1.29.2)- Fixed closing window bug of minimized windows\n- 2016/12/03 (1.29.1)- Fixed wrapped text with no seperator and C89 error\n- 2016/12/03 (1.29.0) - Changed text wrapping to process words not characters\n- 2016/11/22 (1.28.6)- Fixed window minimized closing bug\n- 2016/11/19 (1.28.5)- Fixed abstract combo box closing behavior\n- 2016/11/19 (1.28.4)- Fixed tooltip flickering\n- 2016/11/19 (1.28.3)- Fixed memory leak caused by popup repeated closing\n- 2016/11/18 (1.28.2)- Fixed memory leak caused by popup panel allocation\n- 2016/11/10 (1.28.1)- Fixed some warnings and C++ error\n- 2016/11/10 (1.28.0)- Added additional `nk_button` versions which allows to directly\n                        pass in a style struct to change buttons visual.\n- 2016/11/10 (1.27.0)- Added additional 'nk_tree' versions to support external state\n                        storage. Just like last the `nk_group` commit the main\n                        advantage is that you optionally can minimize nuklears runtime\n                        memory consumption or handle hash collisions.\n- 2016/11/09 (1.26.0)- Added additional `nk_group` version to support external scrollbar\n                        offset storage. Main advantage is that you can externalize\n                        the memory management for the offset. It could also be helpful\n                        if you have a hash collision in `nk_group_begin` but really\n                        want the name. In addition I added `nk_list_view` which allows\n                        to draw big lists inside a group without actually having to\n                        commit the whole list to nuklear (issue #269).\n- 2016/10/30 (1.25.1)- Fixed clipping rectangle bug inside `nk_draw_list`\n- 2016/10/29 (1.25.0)- Pulled `nk_panel` memory management into nuklear and out of\n                        the hands of the user. From now on users don't have to care\n                        about panels unless they care about some information. If you\n                        still need the panel just call `nk_window_get_panel`.\n- 2016/10/21 (1.24.0)- Changed widget border drawing to stroked rectangle from filled\n                        rectangle for less overdraw and widget background transparency.\n- 2016/10/18 (1.23.0)- Added `nk_edit_focus` for manually edit widget focus control\n- 2016/09/29 (1.22.7)- Fixed deduction of basic type in non `<stdint.h>` compilation\n- 2016/09/29 (1.22.6)- Fixed edit widget UTF-8 text cursor drawing bug\n- 2016/09/28 (1.22.5)- Fixed edit widget UTF-8 text appending/inserting/removing\n- 2016/09/28 (1.22.4)- Fixed drawing bug inside edit widgets which offset all text\n                        text in every edit widget if one of them is scrolled.\n- 2016/09/28 (1.22.3)- Fixed small bug in edit widgets if not active. The wrong\n                        text length is passed. It should have been in bytes but\n                        was passed as glyphes.\n- 2016/09/20 (1.22.2)- Fixed color button size calculation\n- 2016/09/20 (1.22.1)- Fixed some `nk_vsnprintf` behavior bugs and removed\n                        `<stdio.h>` again from `NK_INCLUDE_STANDARD_VARARGS`.\n- 2016/09/18 (1.22.0)- C89 does not support vsnprintf only C99 and newer as well\n                        as C++11 and newer. In addition to use vsnprintf you have\n                        to include <stdio.h>. So just defining `NK_INCLUDE_STD_VAR_ARGS`\n                        is not enough. That behavior is now fixed. By default if\n                        both varargs as well as stdio is selected I try to use\n                        vsnprintf if not possible I will revert to vsprintf. If\n                        varargs but not stdio was defined I will use my own function.\n- 2016/09/15 (1.21.2)- Fixed panel `close` behavior for deeper panel levels\n- 2016/09/15 (1.21.1)- Fixed C++ errors and wrong argument to `nk_panel_get_xxxx`\n- 2016/09/13 (1.21.0) - !BREAKING! Fixed nonblocking popup behavior in menu, combo,\n                        and contextual which prevented closing in y-direction if\n                        popup did not reach max height.\n                        In addition the height parameter was changed into vec2\n                        for width and height to have more control over the popup size.\n- 2016/09/13 (1.20.3) - Cleaned up and extended type selection\n- 2016/09/13 (1.20.2)- Fixed slider behavior hopefully for the last time. This time\n                        all calculation are correct so no more hackery.\n- 2016/09/13 (1.20.1)- Internal change to divide window/panel flags into panel flags and types.\n                        Suprisinly spend years in C and still happened to confuse types\n                        with flags. Probably something to take note.\n- 2016/09/08 (1.20.0)- Added additional helper function to make it easier to just\n                        take the produced buffers from `nk_convert` and unplug the\n                        iteration process from `nk_context`. So now you can\n                        just use the vertex,element and command buffer + two pointer\n                        inside the command buffer retrieved by calls `nk__draw_begin`\n                        and `nk__draw_end` and macro `nk_draw_foreach_bounded`.\n- 2016/09/08 (1.19.0)- Added additional asserts to make sure every `nk_xxx_begin` call\n                        for windows, popups, combobox, menu and contextual is guarded by\n                        `if` condition and does not produce false drawing output.\n- 2016/09/08 (1.18.0)- Changed confusing name for `NK_SYMBOL_RECT_FILLED`, `NK_SYMBOL_RECT`\n                        to hopefully easier to understand `NK_SYMBOL_RECT_FILLED` and\n                        `NK_SYMBOL_RECT_OUTLINE`.\n- 2016/09/08 (1.17.0)- Changed confusing name for `NK_SYMBOL_CIRLCE_FILLED`, `NK_SYMBOL_CIRCLE`\n                        to hopefully easier to understand `NK_SYMBOL_CIRCLE_FILLED` and\n                        `NK_SYMBOL_CIRCLE_OUTLINE`.\n- 2016/09/08 (1.16.0)- Added additional checks to select correct types if `NK_INCLUDE_FIXED_TYPES`\n                        is not defined by supporting the biggest compiler GCC, clang and MSVC.\n- 2016/09/07 (1.15.3)- Fixed `NK_INCLUDE_COMMAND_USERDATA` define to not cause an error\n- 2016/09/04 (1.15.2)- Fixed wrong combobox height calculation\n- 2016/09/03 (1.15.1)- Fixed gaps inside combo boxes in OpenGL\n- 2016/09/02 (1.15.0) - Changed nuklear to not have any default vertex layout and\n                        instead made it user provided. The range of types to convert\n                        to is quite limited at the moment, but I would be more than\n                        happy to accept PRs to add additional.\n- 2016/08/30 (1.14.2) - Removed unused variables\n- 2016/08/30 (1.14.1) - Fixed C++ build errors\n- 2016/08/30 (1.14.0) - Removed mouse dragging from SDL demo since it does not work correctly\n- 2016/08/30 (1.13.4) - Tweaked some default styling variables\n- 2016/08/30 (1.13.3) - Hopefully fixed drawing bug in slider, in general I would\n                        refrain from using slider with a big number of steps.\n- 2016/08/30 (1.13.2) - Fixed close and minimize button which would fire even if the\n                        window was in Read Only Mode.\n- 2016/08/30 (1.13.1) - Fixed popup panel padding handling which was previously just\n                        a hack for combo box and menu.\n- 2016/08/30 (1.13.0) - Removed `NK_WINDOW_DYNAMIC` flag from public API since\n                        it is bugged and causes issues in window selection.\n- 2016/08/30 (1.12.0) - Removed scaler size. The size of the scaler is now\n                        determined by the scrollbar size\n- 2016/08/30 (1.11.2) - Fixed some drawing bugs caused by changes from 1.11\n- 2016/08/30 (1.11.1) - Fixed overlapping minimized window selection\n- 2016/08/30 (1.11.0) - Removed some internal complexity and overly complex code\n                        handling panel padding and panel border.\n- 2016/08/29 (1.10.0) - Added additional height parameter to `nk_combobox_xxx`\n- 2016/08/29 (1.10.0) - Fixed drawing bug in dynamic popups\n- 2016/08/29 (1.10.0) - Added experimental mouse scrolling to popups, menus and comboboxes\n- 2016/08/26 (1.10.0) - Added window name string prepresentation to account for\n                        hash collisions. Currently limited to NK_WINDOW_MAX_NAME\n                        which in term can be redefined if not big enough.\n- 2016/08/26 (1.10.0) - Added stacks for temporary style/UI changes in code\n- 2016/08/25 (1.10.0) - Changed `nk_input_is_key_pressed` and 'nk_input_is_key_released'\n                        to account for key press and release happening in one frame.\n- 2016/08/25 (1.10.0) - Added additional nk_edit flag to directly jump to the end on activate\n- 2016/08/17 (1.09.6)- Removed invalid check for value zero in nk_propertyx\n- 2016/08/16 (1.09.5)- Fixed ROM mode for deeper levels of popup windows parents.\n- 2016/08/15 (1.09.4)- Editbox are now still active if enter was pressed with flag\n                        `NK_EDIT_SIG_ENTER`. Main reasoning is to be able to keep\n                        typing after commiting.\n- 2016/08/15 (1.09.4)- Removed redundant code\n- 2016/08/15 (1.09.4)- Fixed negative numbers in `nk_strtoi` and remove unused variable\n- 2016/08/15 (1.09.3)- Fixed `NK_WINDOW_BACKGROUND` flag behavior to select a background\n                        window only as selected by hovering and not by clicking.\n- 2016/08/14 (1.09.2)- Fixed a bug in font atlas which caused wrong loading\n                        of glyphes for font with multiple ranges.\n- 2016/08/12 (1.09.1)- Added additional function to check if window is currently\n                        hidden and therefore not visible.\n- 2016/08/12 (1.09.1)- nk_window_is_closed now queries the correct flag `NK_WINDOW_CLOSED`\n                        instead of the old flag `NK_WINDOW_HIDDEN`\n- 2016/08/09 (1.09.0) - Added additional double version to nk_property and changed\n                        the underlying implementation to not cast to float and instead\n                        work directly on the given values.\n- 2016/08/09 (1.08.0) - Added additional define to overwrite library internal\n                        floating pointer number to string conversion for additional\n                        precision.\n- 2016/08/09 (1.08.0) - Added additional define to overwrite library internal\n                        string to floating point number conversion for additional\n                        precision.\n- 2016/08/08 (1.07.2)- Fixed compiling error without define NK_INCLUDE_FIXED_TYPE\n- 2016/08/08 (1.07.1)- Fixed possible floating point error inside `nk_widget` leading\n                        to wrong wiget width calculation which results in widgets falsly\n                        becomming tagged as not inside window and cannot be accessed.\n- 2016/08/08 (1.07.0) - Nuklear now differentiates between hiding a window (NK_WINDOW_HIDDEN) and\n                        closing a window (NK_WINDOW_CLOSED). A window can be hidden/shown\n                        by using `nk_window_show` and closed by either clicking the close\n                        icon in a window or by calling `nk_window_close`. Only closed\n                        windows get removed at the end of the frame while hidden windows\n                        remain.\n- 2016/08/08 (1.06.0) - Added `nk_edit_string_zero_terminated` as a second option to\n                        `nk_edit_string` which takes, edits and outputs a '\\0' terminated string.\n- 2016/08/08 (1.05.4)- Fixed scrollbar auto hiding behavior\n- 2016/08/08 (1.05.3)- Fixed wrong panel padding selection in `nk_layout_widget_space`\n- 2016/08/07 (1.05.2)- Fixed old bug in dynamic immediate mode layout API, calculating\n                        wrong item spacing and panel width.\n- 2016/08/07 (1.05.1)- Hopefully finally fixed combobox popup drawing bug\n- 2016/08/07 (1.05.0) - Split varargs away from NK_INCLUDE_STANDARD_IO into own\n                        define NK_INCLUDE_STANDARD_VARARGS to allow more fine\n                        grained controlled over library includes.\n- 2016/08/06 (1.04.5)- Changed memset calls to NK_MEMSET\n- 2016/08/04 (1.04.4)- Fixed fast window scaling behavior\n- 2016/08/04 (1.04.3)- Fixed window scaling, movement bug which appears if you\n                        move/scale a window and another window is behind it.\n                        If you are fast enough then the window behind gets activated\n                        and the operation is blocked. I now require activating\n                        by hovering only if mouse is not pressed.\n- 2016/08/04 (1.04.2)- Fixed changing fonts\n- 2016/08/03 (1.04.1)- Fixed `NK_WINDOW_BACKGROUND` behavior\n- 2016/08/03 (1.04.0) - Added color parameter to `nk_draw_image`\n- 2016/08/03 (1.04.0) - Added additional window padding style attributes for\n                        sub windows (combo, menu, ...)\n- 2016/08/03 (1.04.0) - Added functions to show/hide software cursor\n- 2016/08/03 (1.04.0) - Added `NK_WINDOW_BACKGROUND` flag to force a window\n                        to be always in the background of the screen\n- 2016/08/03 (1.03.2)- Removed invalid assert macro for NK_RGB color picker\n- 2016/08/01 (1.03.1)- Added helper macros into header include guard\n- 2016/07/29 (1.03.0) - Moved the window/table pool into the header part to\n                        simplify memory management by removing the need to\n                        allocate the pool.\n- 2016/07/29 (1.02.0) - Added auto scrollbar hiding window flag which if enabled\n                        will hide the window scrollbar after NK_SCROLLBAR_HIDING_TIMEOUT\n                        seconds without window interaction. To make it work\n                        you have to also set a delta time inside the `nk_context`.\n- 2016/07/25 (1.01.1) - Fixed small panel and panel border drawing bugs\n- 2016/07/15 (1.01.0) - Added software cursor to `nk_style` and `nk_context`\n- 2016/07/15 (1.01.0) - Added const correctness to `nk_buffer_push' data argument\n- 2016/07/15 (1.01.0) - Removed internal font baking API and simplified\n                        font atlas memory management by converting pointer\n                        arrays for fonts and font configurations to lists.\n- 2016/07/15 (1.00.0) - Changed button API to use context dependend button\n                        behavior instead of passing it for every function call.\n\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.080078125,
          "content": "The MIT License (MIT)\nCopyright © 2016-2017 Maxim Kupriianov <max@kc.vc>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.1689453125,
          "content": "all:\n\tc-for-go nk.yml\n\nclean:\n\trm -f nk/cgo_helpers.go nk/cgo_helpers.h nk/cgo_helpers.c\n\trm -r nk/doc.go nk/types.go nk/const.go\n\trm -f nk/nk.go\n\ntest:\n\tcd nk && go build\n\t"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.716796875,
          "content": "## Nuklear [![version-2.00.6](https://img.shields.io/badge/version-2.00.6-lightgrey.svg)](/CHANGELOG.txt) [![GoDoc](https://godoc.org/github.com/golang-ui/nuklear/nk?status.svg)](https://godoc.org/github.com/golang-ui/nuklear/nk)\n\nPackage nk provides Go bindings for nuklear.h — a small ANSI C gui library. See [github.com/vurtun/nuklear](https://github.com/vurtun/nuklear).<br />\nAll the binding code has automatically been generated with rules defined in [nk.yml](/nk.yml).\n\nThere is no idiomatic wrapper package that will make things easier to use, but the original API is pretty straightforward. The `nk` package is fine for the start, then we'll figure out something better that just a wrapper.\n\n### Features (plain C version)\n\n* Immediate mode graphical user interface toolkit\n* Single header library\n* Written in C89 (ANSI C)\n* Small codebase (~15kLOC)\n* Focus on portability, efficiency and simplicity\n* No dependencies (not even the standard library if not wanted)\n* Fully skinnable and customizable\n* Low memory footprint with total memory control if needed or wanted\n* UTF-8 support\n* No global or hidden state\n* Customizable library modules (you can compile and use only what you need)\n* Optional font baker and vertex buffer output\n\n#### About nuklear.h\n\nThis is a minimal state immediate mode graphical user interface single header\ntoolkit written in ANSI C and licensed under public domain.\nIt was designed as a simple embeddable user interface for application and does\nnot have any dependencies, a default render backend or OS window and input handling\nbut instead provides a very modular library approach by using simple input state\nfor input and draw commands describing primitive shapes as output.\nSo instead of providing a layered library that tries to abstract over a number\nof platform and render backends it only focuses on the actual UI.\n\n### Overview\n\n<img src=\"https://cl.ly/311k1R011T1K/nk-arch.png\" alt=\"nuklear golang architecture\" width=\"400\"/>\n\nYour Go application runs a loop where it handles input from the platform and manages the rendering backend. It uses Nuklear API bindings (the `nk` package) to run UI commands for layout and event handling. Nuklear maintains a draw command list that is consumed by one of the rendering backends so the UI is displayed. In this case, a C program is being a middleman that does all the UI heavylifting for us, so we can focus on the application logic, event handling and drawing backends in Go.\n\n### Installation of nk\n\nSupported platforms are:\n\n* Windows 32-bit\n* Windows 64-bit\n* OS X\n* Linux\n* Android\n\nThe desktop support is achieved using [GLFW](https://github.com/go-gl/glfw) and there are backends written in Go for OpenGL 2.1 and OpenGL 3.2. Thanks to [strangebroadcasts](https://github.com/strangebroadcasts) it also has [SDL2](https://github.com/veandco/go-sdl2) support now.\n\nAndroid support is added using the [android-go](http://github.com/xlab/android-go) project, there is a corresponding backend for OpenGL ES 2.0 or 3.0 surface and input handling logic. Sophisticated things like scroll gestures will be added later.\n\n#### Desktop installation\n\nDebian/Ubuntu dependencies: (Header files required for GLFW)\n\n```\n# apt install xorg-dev\n```\n\nFedora(tested on 28):\n\n```\n# libX11-devel libXcursor-devel libXrandr-devel libXinerama-devel mesa-libGL-devel libXi-devel\n```\n\n\nAfter that, standard `go get` should work:\n\n```\n$ go get github.com/golang-ui/nuklear/nk\n```\n\nOn desktop both OpenGL 2.1 and OpenGL 3.2 contexts are working fine, but by default OpenGL 3.2-core is used, to compile with OpenGL 2.1 support instead. The 2.1 backend is for legacy hardware or VMs like Parallels.\n\n```\n$ go get -tags opengl2 github.com/golang-ui/nuklear/nk\n```\n\nAdditional steps for Windows users:\n\n1. Get MinGW compiler toolchain and MSYS via [MinGW installer](https://sourceforge.net/projects/mingw/files/latest/download);\n2. Open MSYS shell (usually `C:\\MinGW\\msys\\1.0\\msys.bat`);\n\nThen everything should go smooth.\n\n```\n$ go version\ngo version go1.6.2 windows/386\n\n$ gcc -v\nCOLLECT_GCC=C:\\MinGW\\bin\\gcc.exe\nThread model: posix\ngcc version 5.3.0 (GCC)\n\n$ go install github.com/golang-ui/nuklear/nk\n```\n\nHint: use `-tags sdl2` to run with SDL2 instead of GLFW. SDL2 requires additional installation process, see [SDL2](https://github.com/veandco/go-sdl2). Use GLFW if you want to stay go-get-able.\n\n### Android demo\n\nIn order run Android demo app [nk-android](https://github.com/golang-ui/nuklear/blob/master/cmd/nk-android/main.go) make sure that you've prepared your environent as described in plain [example](https://github.com/xlab/android-go/tree/master/example) Android app. Namely you need to install Android SDK, tools and run `make toolchain`:\n\n```bash\n$ cd $GOPATH/src/github.com/golang-ui/nuklear/cmd/nk-android\n$ make toolchain # need to run once\n\n# the regular routine:\n$ make\n$ make install\n$ make listen\n```\n\n<img src=\"https://cl.ly/2c0s3R3Q2g3V/Screenshot_20170108-045948.png\" width=\"300\"/>&nbsp;&nbsp;<img src=\"https://cl.ly/2X133z0Z3S1j/Screenshot_20170108-050051.png\" width=\"300\"/>\n\n[Click for video](https://www.youtube.com/watch?v=3-MiceegZlM)\n\n### Desktop demo\n\nThere is an example app [nk-example](https://github.com/golang-ui/nuklear/blob/master/cmd/nk-example/main.go) that shows the usage of Nuklear GUI library, based on the official demos.\n\n```bash\n$ go get github.com/golang-ui/nuklear/cmd/nk-example\n\n$ nk-example\n2016/09/23 23:13:09 glfw: created window 400x500\n2016/09/23 23:13:10 [INFO] button pressed!\n2016/09/23 23:13:10 [INFO] button pressed!\n2016/09/23 23:13:10 [INFO] button pressed!\n```\n\n<img alt=\"demo screenshot nuklear\" src=\"assets/demo.png\" width=\"400\"/>\n\nAnother more realistic Go application that uses Nuklear to do its GUI, [a simple WebM player](https://github.com/xlab/libvpx-go):\n\n<a href=\"https://www.youtube.com/watch?v=5kj5ApnhPAE\"><img alt=\"nuklear screenshot webm\" src=\"assets/demo2.png\" width=\"800\"/></a>\n\n### Rebuilding the package\n\nYou will need to get the [c-for-go](https://git.io/c-for-go) tool installed first.\n\n```\n$ git clone https://github.com/golang-ui/nuklear && cd nuklear\n$ make clean\n$ make\n```\n\n### Building nuklear - Using vcpkg\n\nYou can download and install nuklear using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:\n\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.sh\n    ./vcpkg integrate install\n    ./vcpkg install nuklear\n\nThe nuklear port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\n### License\n\nAll the code except when stated otherwise is licensed under the [MIT license](https://xlab.mit-license.org).\nNuklear (ANSI C version) is in public domain, authored from 2015-2016 by Micha Mettke.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "nk.yml",
          "type": "blob",
          "size": 4.015625,
          "content": "---\nGENERATOR:\n  PackageName: nk\n  PackageDescription: \"Package nk provides Go bindings for nuklear.h — a small ANSI C gui library.\"\n  PackageLicense: \"THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.\"\n  Includes: [\"nk.h\"]\n  Options:\n    SafeStrings: true\n    StructAccessors: true\n\nPARSER:\n  IncludePaths: [\"/usr/include\", \"/usr/local/include\"]\n  SourcesPaths: [\"nk/nuklear.h\", \"nk/nk.h\"]\n  Defines:\n    NK_INCLUDE_FIXED_TYPES: 1\n    NK_INCLUDE_STANDARD_IO: 1\n    NK_INCLUDE_DEFAULT_ALLOCATOR: 1\n    NK_INCLUDE_FONT_BAKING: 1\n    NK_INCLUDE_DEFAULT_FONT: 1\n    NK_INCLUDE_VERTEX_BUFFER_OUTPUT: 1\n\nTRANSLATOR:\n  ConstRules:\n    defines: expand\n    enum: expand\n  MemTips:\n    - {target: \"draw_begin$\", self: raw}\n    - {target: \"draw_end$\", self: raw}\n    - {target: \"item_getter$\", self: raw}\n    - {target: \"value_getter$\", self: raw}\n    - {target: \"_user\", self: bind}\n    - {target: \"_draw_vertex_layout_element\", self: bind}\n    - {target: \"_convert_config\", self: bind}\n    - {target: \"nk_plugin_\", self: bind}\n    - {target: \"nk_text_width_f\", self: bind}\n    - {target: \"nk_query_font_glyph_f\", self: bind}\n    - {target: \"nk_\", self: raw}\n  TypeTips:\n    function:\n      - {target: _(hsv|rgb)_bv$, tips: [plain,plain,plain,0]}\n      - {target: _(hsv|rgb)a_bv$, tips: [plain,plain,plain,0]}\n      - {target: _(hsv|rgb)_b$, tips: [plain,plain,plain,0]}\n      - {target: _(hsv|rgb)a_b$, tips: [plain,plain,plain,0]}\n  PtrTips:\n    function:\n      - {target: \"_color_fv$\", tips: [arr,0]}\n      - {target: \"_color_dv$\", tips: [arr,0]}\n      - {target: \"_color_hex_rgba$\", tips: [arr,0]}\n      - {target: \"_color_hex_rgb$\", tips: [arr,0]}\n      - {target: \"_color_hsv_iv$\", tips: [arr,0]}\n      - {target: \"_color_hsv_bv$\", tips: [arr,0]}\n      - {target: \"_color_hsv_fv$\", tips: [arr,0]}\n      - {target: \"_color_hsva_iv$\", tips: [arr,0]}\n      - {target: \"_color_hsva_bv$\", tips: [arr,0]}\n      - {target: \"_color_hsva_fv$\", tips: [arr,0]}\n      - {target: \"_edit_string$\", tips: [ref,0,arr,ref,0,0]}\n      - {target: \"_edit_string_zero_terminated$\", tips: [ref,0,arr,0,0]}\n      - {target: \"_font_atlas_add_from_memory$\", tips: [ref,ref,size,0,ref]}\n      - {target: \"_convert$\", tips: [ref,ref,ref,ref,ref]}\n      - {target: \"^nk_style_from_table$\", tips: [sref,arr]}\n      - {target: \"^nk_stroke_polygon$\", tips: [sref,arr,size,0,0]}\n      - {target: \"^nk_stroke_polyline$\", tips: [sref,arr,size,0,0]}\n      - {target: \"^nk_fill_polygon$\", tips: [sref,arr,size,0,0]}\n      - {target: \"^nk_draw_text$\", tips: [sref,0,0,0,sref,sref,sref]}\n      - {target: \"nk_\", tips: [sref,sref,sref,sref]} # defaults\n  Rules:\n    global:\n      - {transform: lower}\n      - {action: accept, from: \"^nk_\"}\n      - {transform: export}\n    const:\n      - {action: accept, from: \"(?i)^nk_\"}\n      - {action: replace, from: \"(?i)^nk_\", to: _}\n\n      - {action: ignore, from: _INT8}\n      - {action: ignore, from: _UINT8}\n      - {action: ignore, from: _INT16}\n      - {action: ignore, from: _UINT16}\n      - {action: ignore, from: _INT32}\n      - {action: ignore, from: _UINT32}\n      - {action: ignore, from: _SIZE_TYPE}\n      - {action: ignore, from: _POINTER_TYPE}\n      - {action: ignore, from: _API}\n      - {action: ignore, from: _INTERN}\n      - {action: ignore, from: _STORAGE}\n      - {action: ignore, from: _GLOBAL}\n      - {action: ignore, from: _VERTEX_LAYOUT_END}\n\n      - {action: replace, from: ^_command_, to: _command_type_}\n      - {action: replace, from: \"_rgb$\", to: _color_format_RGB}\n      - {action: replace, from: \"_rgba$\", to: _color_format_RGBA}\n    function:\n      # - {action: ignore, from: \"(?i)nk_str\"}\n      - {action: ignore, from: \"_plot_function$\"}\n      - {action: ignore, from: \"_combo_callback$\"}\n      - {action: ignore, from: \"_combobox_callback$\"}\n      - {action: ignore, from: \"_input_glyph$\"}\n      - {action: ignore, from: \"_draw_list_clear$\"}\n    type:\n      - {action: replace, from: \"^Nk_\", to: _}\n      - {action: replace, from: \"_t$\"}\n    private:\n      - {transform: unexport}\n    post-global:\n      - {action: replace, from: _$}\n      - {load: snakecase}\n"
        },
        {
          "name": "nk",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}