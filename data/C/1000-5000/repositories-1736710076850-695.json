{
  "metadata": {
    "timestamp": 1736710076850,
    "page": 695,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "stevengj/nlopt",
      "stars": 1922,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.052734375,
          "content": ".gitignore export-ignore\n.gitattributes export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1953125,
          "content": "# binaries\n*.exe\n*.dll\n*.lib\n*.exp\n*.obj\n*.so\n*.do\n*.o\n*.a\n*.dylib\n*.dSYM\n*.mex*\n*.oct\n*.py[cod]\n*.tar.gz\n*.zip\n\n# build output: prefer out-of-tree builds\nbuild/\n\n# MacOS\n.DS_Store\n\n# VSCode\n.vscode/\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.3720703125,
          "content": "NLopt was originally written/packaged by:\n\nSteven G. Johnson <stevenj@alum.mit.edu>\n\nwith subsequent contributions by Julien Schueller and other contributors\nthat can be found in the git history, summarized here:\n\n     https://github.com/stevengj/nlopt/graphs/contributors\n\nSee the subdirectories for the authors of the original nonlinear optimization\nlibraries utilized by NLopt.\n"
        },
        {
          "name": "CITATION.bib",
          "type": "blob",
          "size": 6.412109375,
          "content": "% the software:\n\n@misc{NLopt,\n  title = {The {NLopt} nonlinear-optimization package},\n  author = {Steven G. Johnson},\n  year = {2007},\n  howpublished = {\\url{https://github.com/stevengj/nlopt}}\n}\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n% optimization algorithms (cite as needed):\n\n@article{DIRECT,\n  title = {{L}ipschitzian optimization without the {L}ipschitz constant},\n  author = {D. R. Jones and C. D. Perttunen and B. E. Stuckman},\n  doi = {10.1007/bf00941892},\n  year = {1993},\n  volume = {79},\n  pages = {157--181},\n  journal = {Journal of Optimization Theory and Applications}\n}\n@article{DIRECT_L,\n  title = {A locally-biased form of the {DIRECT} algorithm},\n  author = {J. M. Gablonsky and C. T. Kelley},\n  doi = {10.1023/a:1017930332101},\n  year = {2001},\n  volume = {21},\n  pages = {27--37},\n  journal = {Journal of Global Optimization}\n}\n\n@article{CRS2,\n  title = {Some variants of the controlled random search algorithm for global optimization},\n  author = {P. Kaelo and M. M. Ali},\n  doi = {10.1007/s10957-006-9101-0},\n  year = {2006},\n  volume = {130},\n  pages = {253--264},\n  journal = {Journal of Optimization Theory and Applications}\n}\n\n@article{MLSL,\n  title = {Stochastic global optimization methods part {II}: Multi level methods},\n  author = {A. H. G. Rinnooy Kan and G. T. Timmer},\n  doi = {10.1007/bf02592071},\n  year = {1987},\n  volume = {39},\n  pages = {57--78},\n  journal = {Mathematical Programming}\n}\n\n@misc{StoGO,\n  title = {{StoGO}: A program for global optimization},\n  author = {K. Madsen and S. Zertchaninov and A. Zilinskas},\n  year = {1998},\n  howpublished = {\\url{http://www.imm.dtu.dk/projects/scicomp/GlobOpt/opt.html}}\n}\n\n@book{AGS,\n  title = {Global Optimization with Non-Convex Constraints},\n  author = {Roman G. Strongin and Yaroslav D. Sergeyev},\n  doi = {10.1007/978-1-4615-4677-1},\n  year = {2000},\n  publisher = {Springer}\n}\n\n@article{ISRES,\n  title = {Search biases in constrained evolutionary optimization},\n  author = {T. P. Runarsson and X. Yao},\n  doi = {10.1109/tsmcc.2004.841906},\n  year = {2005},\n  volume = {35},\n  pages = {233--243},\n  journal = {{IEEE} Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews)}\n}\n\n@article{ESCH,\n  title = {Designing novel photonic devices by bio-inspired computing},\n  author = {da Silva Santos, Carlos Henrique and Marcos Sergio Gon{\\c{c}}alves and Hugo Enrique Hern{\\'{a}}ndez-Figueroa},\n  doi = {10.1109/lpt.2010.2051222},\n  year = {2010},\n  volume = {22},\n  pages = {1177--1179},\n  journal = {{IEEE} Photonics Technology Letters}\n}\n\n@incollection{COBYLA,\n  title = {A direct search optimization method that models the objective and constraint functions by linear interpolation},\n  author = {M. J. D. Powell},\n  doi = {10.1007/978-94-015-8330-5_4},\n  year = {1994},\n  publisher = {Springer},\n  pages = {51--67},\n  editor = {S. Gomez and J.-P. Hennart},\n  series = {Mathematics and Its Applications},\n  volume = {275},\n  booktitle = {Advances in Optimization and Numerical Analysis}\n}\n\n@techreport{BOBYQA,\n  author      = {M. J. D. Powell},\n  title       = {The {BOBYQA} algorithm for bound constrained optimization without derivatives},\n  institution = {Department of Applied Mathematics and Theoretical Physics, Cambridge University},\n  year        = {2009},\n  number      = {NA2009/06},\n  address     = {Cambridge, UK}\n}\n\n@incollection{NEWUOA,\n  author = {M. J. D. Powell},\n  title = {The {NEWUOA} software for unconstrained optimization without derivatives},\n  doi = {10.1007/0-387-30065-1_16},\n  year = {2006},\n  publisher = {Springer},\n  pages = {255--297},\n  editor = {G. Di Pillo and M. Roma}\n  series = {Nonconvex Optimization and Its Applications},\n  volume = {83},\n  booktitle = {Large-Scale Nonlinear Optimization}\n}\n\n@Book{PRAXIS,\n  author    = {Richard Brent},\n  title     = {Algorithms for Minimization without Derivatives},\n  publisher = {Prentice-Hall},\n  year      = {1972},\n}\n\n@article{NELDERMEAD,\n  author = {J. A. Nelder and R. Mead},\n  title = {A simplex method for function minimization},\n  doi = {10.1093/comjnl/7.4.308},\n  year = {1965},\n  volume = {7},\n  pages = {308--313},\n  journal = {The Computer Journal}\n}\n\n@phdthesis{SUBPLEX,\n  author  = {Thomas Harvey Rowan},\n  title   = {Functional stability analysis of numerical algorithms},\n  school  = {Department of Computer Science, University of Texas at Austin},\n  year    = {1990},\n  address = {Austin, TX}\n}\n\n% CCSA: MMA and CCSAQ\n@article{CCSA,\n  author = {Krister Svanberg},\n  title = {A class of globally convergent optimization methods based on conservative convex separable approximations},\n  doi = {10.1137/s1052623499362822},\n  year = {2002},\n  volume = {12},\n  pages = {555--573},\n  journal = {{SIAM} Journal on Optimization}\n}\n\n@article{SLSQP,\n  author = {Dieter Kraft},\n  title = {Algorithm 733: {TOMP}--Fortran modules for optimal control calculations},\n  doi = {10.1145/192115.192124},\n  year = {1994},\n  volume = {20},\n  pages = {262--281},\n  journal = {{ACM} Transactions on Mathematical Software}\n}\n\n@article{LBFGS,\n  author = {Dong C. Liu and Jorge Nocedal},\n  title = {On the limited memory {BFGS} method for large scale optimization},\n  doi = {10.1007/bf01589116},\n  year = {1989},\n  volume = {45},\n  pages = {503--528},\n  journal = {Mathematical Programming}\n}\n\n@article{TNEWTON,\n  author = {Ron S. Dembo and Trond Steihaug},\n  title = {Truncated-{N}ewton algorithms for large-scale unconstrained optimization},\n  doi = {10.1007/bf02592055},\n  year = {1983},\n  volume = {26},\n  pages = {190--212},\n  journal = {Mathematical Programming}\n}\n\n@article{VAR,\n  author = {Jan Vl{\\v{c}}ek and Ladislav Luk{\\v{s}}an},\n  title = {Shifted limited-memory variable metric methods for large-scale unconstrained optimization},\n  doi = {10.1016/j.cam.2005.02.010},\n  year = {2006},\n  volume = {186},\n  pages = {365--390},\n  journal = {Journal of Computational and Applied Mathematics}\n}\n\n@article{AUGLAG,\n  author = {Andrew R. Conn and Nicholas I. M. Gould and Philippe Toint},\n  title = {A globally convergent augmented {Lagrangian} algorithm for optimization with general constraints and simple bounds},\n  doi = {10.1137/0728030},\n  year = {1991},\n  volume = {28},\n  pages = {545--572},\n  journal = {{SIAM} Journal on Numerical Analysis}\n}\n@article{AUGLAG2,\n  author = {E.G. Birgin and J.M. Mart{\\'{\\i}}nez},\n  title = {Improving ultimate convergence of an augmented {Lagrangian} method},\n  doi = {10.1080/10556780701577730},\n  year = {2008},\n  volume = {23},\n  pages = {177--195},\n  journal = {Optimization Methods and Software}\n}\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 15.2431640625,
          "content": "#==============================================================================\n# NLOPT CMake file\n#\n# NLopt is a free/open-source library for nonlinear optimization, providing\n# a common interface for a number of different free optimization routines\n# available online as well as original implementations of various other\n# algorithms\n# WEBSITE: http://ab-initio.mit.edu/wiki/index.php/NLopt\n# AUTHOR: Steven G. Johnson\n#\n# This CMakeLists.txt file was created to compile NLOPT with the CMAKE utility.\n# Benoit Scherrer, 2010 CRL, Harvard Medical School\n# Copyright (c) 2008-2009 Children's Hospital Boston\n#==============================================================================\ncmake_minimum_required (VERSION 3.15)\n\nset (CMAKE_BUILD_TYPE Release CACHE STRING \"Build type\")\n\nproject (nlopt)\n\n#==============================================================================\n# version\nset (NLOPT_MAJOR_VERSION \"2\")\nset (NLOPT_MINOR_VERSION \"9\")\nset (NLOPT_BUGFIX_VERSION \"1\")\nset (NLOPT_VERSION_STRING ${NLOPT_MAJOR_VERSION}.${NLOPT_MINOR_VERSION}.${NLOPT_BUGFIX_VERSION})\nmessage (STATUS \"NLopt version ${NLOPT_VERSION_STRING}\")\n\n# This is the ABI version number, which differes from the API version above\n# (it indicates ABI compatibility), but they are typically incremented together.\nset(SO_MAJOR 0)\nset(SO_MINOR 13)\nset(SO_PATCH 0)\n#==============================================================================\n\nlist (APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n\noption (NLOPT_CXX \"enable cxx routines\" ON)\noption (NLOPT_FORTRAN \"enable fortran\" OFF)\noption (BUILD_SHARED_LIBS \"Build NLopt as a shared library\" ON)\noption (NLOPT_PYTHON \"build python bindings\" ON)\noption (NLOPT_OCTAVE \"build octave bindings\" ON)\noption (NLOPT_MATLAB \"build matlab bindings\" OFF)\noption (NLOPT_GUILE \"build guile bindings\" ON)\noption (NLOPT_SWIG \"use SWIG to build bindings\" ON)\noption (NLOPT_LUKSAN \"enable LGPL Luksan solvers\" ON)\noption (NLOPT_TESTS \"build unit tests\" OFF)\n\nif (NLOPT_FORTRAN)\n  enable_language (Fortran)\nendif ()\n\ninclude (GNUInstallDirs)\n\n# Offer the user the choice of overriding the installation directories\nset (NLOPT_INSTALL_LIBDIR     ${CMAKE_INSTALL_LIBDIR}        CACHE STRING \"Installation directory for libraries\")\nset (NLOPT_INSTALL_BINDIR     ${CMAKE_INSTALL_BINDIR}        CACHE STRING \"Installation directory for executables\")\nset (NLOPT_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_INCLUDEDIR}    CACHE STRING \"Installation directory for header files\")\nset (NLOPT_INSTALL_DATADIR    ${CMAKE_INSTALL_DATADIR}/nlopt CACHE STRING \"Installation directory for data files\")\nset (NLOPT_INSTALL_MANDIR     ${CMAKE_INSTALL_MANDIR}        CACHE STRING \"Installation directory for man documentation\")\nset (NLOPT_INSTALL_CMAKEDIR   ${CMAKE_INSTALL_LIBDIR}/cmake/nlopt CACHE STRING \"Installation directory for cmake config files\")\n\nset (CMAKE_INSTALL_RPATH ${CMAKE_INSTALL_PREFIX}/${NLOPT_INSTALL_LIBDIR} CACHE PATH \"rpath\")\nset (CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE CACHE BOOL \"use link path\")\n\nif(POLICY CMP0042)\n  # Set MACOSX_RPATH to ON\n  cmake_policy(SET CMP0042 NEW)\nendif()\n\nif (POLICY CMP0086)\n  # UseSWIG honors SWIG_MODULE_NAME via -module flag\n  cmake_policy(SET CMP0086 NEW)\nendif ()\n\ninclude (CheckIncludeFiles)\ninclude (CheckFunctionExists)\ninclude (CheckTypeSize)\ninclude (CheckCCompilerFlag)\ninclude (CheckCXXSymbolExists)\ninclude (CheckCSourceCompiles)\ninclude (CheckCXXCompilerFlag)\ninclude (CheckLibraryExists)\n\n#==============================================================================\n# COMPILATION CHECKINGS and CONFIGURATION GENERATION\n#==============================================================================\ncheck_include_file (getopt.h HAVE_GETOPT_H)\ncheck_include_file (unistd.h HAVE_UNISTD_H)\ncheck_include_file (stdint.h HAVE_STDINT_H)\ncheck_include_file (time.h HAVE_TIME_H)\ncheck_include_file (sys/time.h HAVE_SYS_TIME_H)\nif (HAVE_TIME_H AND HAVE_SYS_TIME_H)\n  set (TIME_WITH_SYS_TIME TRUE)\nendif ()\ncheck_function_exists (getpid HAVE_GETPID)\ncheck_function_exists (syscall HAVE_GETTID_SYSCALL)\ncheck_function_exists (isinf HAVE_ISINF)\ncheck_function_exists (isnan HAVE_ISNAN)\ncheck_function_exists (gettimeofday HAVE_GETTIMEOFDAY)\ncheck_function_exists (qsort_r HAVE_QSORT_R)\ncheck_function_exists (time HAVE_TIME)\ncheck_function_exists (copysign HAVE_COPYSIGN)\ncheck_function_exists (getopt HAVE_GETOPT)\ncheck_type_size (\"uint32_t\" SIZEOF_UINT32_T)\nset (HAVE_UINT32_T ${SIZEOF_UINT32_T})\ncheck_type_size (\"unsigned int\" SIZEOF_UNSIGNED_INT)\ncheck_type_size (\"unsigned long\" SIZEOF_UNSIGNED_LONG)\n\ncheck_library_exists (\"m\" sqrt \"\" HAVE_LIBM)\nif (HAVE_LIBM)\n  set (M_LIBRARY m)\n  set (LIBS_PRIVATE \"-l${M_LIBRARY}\")\nendif()\n\nif (NOT DEFINED HAVE_FPCLASSIFY)\n  message(STATUS \"Looking for fpclassify\")\n  file (WRITE ${PROJECT_BINARY_DIR}/fpclassify.c \"#include <math.h>\\n\")\n  file (APPEND ${PROJECT_BINARY_DIR}/fpclassify.c \"int main(void) {\\n\")\n  file (APPEND ${PROJECT_BINARY_DIR}/fpclassify.c \"if (!fpclassify(3.14159)) fpclassify(2.7183);\\n\")\n  file (APPEND ${PROJECT_BINARY_DIR}/fpclassify.c \"  return 0; }\\n\")\n  try_compile (HAVE_FPCLASSIFY\n  ${PROJECT_BINARY_DIR}/build_fpclassify\n  ${PROJECT_BINARY_DIR}/fpclassify.c\n  CMAKE_FLAGS -DLINK_LIBRARIES=m)\n  message(STATUS \"Looking for fpclassify - ${HAVE_FPCLASSIFY}\")\nendif ()\n\noption (WITH_THREADLOCAL \"check thread local keyword\" ON)\nif (WITH_THREADLOCAL AND NOT DEFINED THREADLOCAL)\n  foreach (_THREADLOCAL_KEY \"__thread\" \"__declspec(thread)\")\n    unset (HAVE_THREAD_LOCAL_STORAGE CACHE)\n    check_c_source_compiles(\"\n    ${_THREADLOCAL_KEY} int tls;\n\n    int main(void) {\n        return 0;\n    }\" HAVE_THREAD_LOCAL_STORAGE)\n    if (HAVE_THREAD_LOCAL_STORAGE)\n      set (THREADLOCAL ${_THREADLOCAL_KEY} CACHE STRING \"Thread local keyword\")\n    endif ()\n  endforeach()\nendif ()\n\n\nif (NLOPT_CXX OR NLOPT_PYTHON OR NLOPT_GUILE OR NLOPT_OCTAVE)\n  check_cxx_symbol_exists (__cplusplus ciso646 SYSTEM_HAS_CXX)\n  if (SYSTEM_HAS_CXX)\n    set (CMAKE_CXX_STANDARD 11) # set the standard to C++11 but do not require it\n\n    if (NLOPT_CXX)\n      set (CMAKE_CXX_STANDARD_REQUIRED ON) # if we build C++ API, we do need C++11\n    endif ()\n  else()\n    message (FATAL_ERROR \"The compiler doesn't support CXX.\")\n  endif ()\nendif ()\n\n#==============================================================================\n# CREATE nlopt_config.h\n#==============================================================================\n\nconfigure_file (${CMAKE_CURRENT_SOURCE_DIR}/nlopt_config.h.in ${CMAKE_CURRENT_BINARY_DIR}/nlopt_config.h IMMEDIATE)\n\n# pkgconfig file\nconfigure_file (${CMAKE_CURRENT_SOURCE_DIR}/nlopt.pc.in ${CMAKE_CURRENT_BINARY_DIR}/nlopt.pc @ONLY)\ninstall (FILES ${CMAKE_CURRENT_BINARY_DIR}/nlopt.pc DESTINATION ${NLOPT_INSTALL_LIBDIR}/pkgconfig)\n\n#==============================================================================\n# nlopt LIBRARY TARGET (SHARED OR STATIC)\n#==============================================================================\n\nset (NLOPT_HEADERS\n  src/api/nlopt.h ${PROJECT_BINARY_DIR}/nlopt.hpp\n)\n\nadd_custom_command (OUTPUT nlopt.hpp\n  COMMAND ${CMAKE_COMMAND} -DAPI_SOURCE_DIR=${PROJECT_SOURCE_DIR}/src/api -P ${PROJECT_SOURCE_DIR}/cmake/generate-cpp.cmake\n  MAIN_DEPENDENCY src/api/nlopt-in.hpp)\nadd_custom_target (generate-cpp ALL DEPENDS nlopt.hpp)\n\nif (NLOPT_FORTRAN)\n  add_custom_command (OUTPUT nlopt.f\n    COMMAND ${CMAKE_COMMAND} -DAPI_SOURCE_DIR=${PROJECT_SOURCE_DIR}/src/api -P ${PROJECT_SOURCE_DIR}/cmake/generate-fortran.cmake\n    MAIN_DEPENDENCY src/api/nlopt.h)\n  add_custom_target (generate-fortran ALL DEPENDS nlopt.f)\n  list (APPEND NLOPT_HEADERS ${PROJECT_BINARY_DIR}/nlopt.f)\nendif()\n\nset (NLOPT_SOURCES\n  src/algs/direct/DIRect.c src/algs/direct/direct_wrap.c src/algs/direct/DIRserial.c src/algs/direct/DIRsubrout.c src/algs/direct/direct-internal.h src/algs/direct/direct.h\n  src/algs/cdirect/cdirect.c src/algs/cdirect/hybrid.c src/algs/cdirect/cdirect.h\n  src/algs/praxis/praxis.c src/algs/praxis/praxis.h\n  src/algs/crs/crs.c src/algs/crs/crs.h\n  src/algs/mlsl/mlsl.c src/algs/mlsl/mlsl.h\n  src/algs/mma/mma.c src/algs/mma/mma.h src/algs/mma/ccsa_quadratic.c\n  src/algs/cobyla/cobyla.c src/algs/cobyla/cobyla.h\n  src/algs/newuoa/newuoa.c src/algs/newuoa/newuoa.h\n  src/algs/neldermead/nldrmd.c src/algs/neldermead/neldermead.h src/algs/neldermead/sbplx.c\n  src/algs/auglag/auglag.c src/algs/auglag/auglag.h\n  src/algs/bobyqa/bobyqa.c src/algs/bobyqa/bobyqa.h\n  src/algs/isres/isres.c src/algs/isres/isres.h\n  src/algs/slsqp/slsqp.c src/algs/slsqp/slsqp.h\n  src/algs/esch/esch.c src/algs/esch/esch.h\n  src/api/general.c src/api/options.c src/api/optimize.c src/api/deprecated.c src/api/nlopt-internal.h src/api/nlopt.h src/api/f77api.c src/api/f77funcs.h src/api/f77funcs_.h ${PROJECT_BINARY_DIR}/nlopt.hpp\n  src/util/mt19937ar.c src/util/sobolseq.c src/util/soboldata.h src/util/timer.c src/util/stop.c src/util/nlopt-util.h src/util/redblack.c src/util/redblack.h src/util/qsort_r.c src/util/rescale.c\n)\n\nif(NLOPT_LUKSAN)\n  list(APPEND NLOPT_SOURCES\n    src/algs/luksan/plis.c src/algs/luksan/plip.c src/algs/luksan/pnet.c src/algs/luksan/mssubs.c src/algs/luksan/pssubs.c src/algs/luksan/luksan.h)\nendif()\n\n\nset_property(SOURCE src/algs/bobyqa/bobyqa.c src/algs/cdirect/hybrid.c src/algs/mma/ccsa_quadratic.c src/algs/cobyla/cobyla.c\n                    src/util/redblack.c src/algs/neldermead/nldrmd.c src/algs/newuoa/newuoa.c src/util/qsort_r.c src/util/mt19937ar.c\n             PROPERTY SKIP_UNITY_BUILD_INCLUSION ON)\n\n# workaround for false positive in newuoa\nif (CMAKE_C_COMPILER_ID MATCHES \"GNU\" AND CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL 12)\n  set_source_files_properties(src/algs/newuoa/newuoa.c PROPERTIES COMPILE_FLAGS -U_FORTIFY_SOURCE)\nendif ()\n\nif (NLOPT_CXX)\n  list (APPEND NLOPT_SOURCES\n    src/algs/stogo/global.cc\n    src/algs/stogo/linalg.cc\n    src/algs/stogo/local.cc\n    src/algs/stogo/stogo.cc\n    src/algs/stogo/tools.cc\n    src/algs/stogo/global.h\n    src/algs/stogo/linalg.h\n    src/algs/stogo/local.h\n    src/algs/stogo/stogo_config.h\n    src/algs/stogo/stogo.h\n    src/algs/stogo/tools.h\n    src/algs/ags/data_types.hpp\n    src/algs/ags/evolvent.hpp\n    src/algs/ags/evolvent.cc\n    src/algs/ags/solver.hpp\n    src/algs/ags/solver.cc\n    src/algs/ags/local_optimizer.hpp\n    src/algs/ags/local_optimizer.cc\n    src/algs/ags/ags.h\n    src/algs/ags/ags.cc)\n\nset_property(SOURCE src/algs/ags/solver.cc src/algs/ags/local_optimizer.cc src/algs/ags/ags.cc src/algs/slsqp/slsqp.c\n             PROPERTY SKIP_UNITY_BUILD_INCLUSION ON)\nendif ()\n\ninstall (FILES ${NLOPT_HEADERS} DESTINATION ${NLOPT_INSTALL_INCLUDEDIR})\n\nset (nlopt_lib nlopt)\nadd_library (${nlopt_lib} ${NLOPT_SOURCES})\nadd_dependencies(${nlopt_lib} generate-cpp)\nif (NLOPT_LUKSAN)\n  target_include_directories(${nlopt_lib} PRIVATE src/algs/luksan)\n  target_compile_definitions (${nlopt_lib} PRIVATE NLOPT_LUKSAN)\nendif ()\ntarget_link_libraries (${nlopt_lib} ${M_LIBRARY})\nset_target_properties (${nlopt_lib} PROPERTIES SOVERSION ${SO_MAJOR})\nset_target_properties (${nlopt_lib} PROPERTIES VERSION \"${SO_MAJOR}.${SO_MINOR}.${SO_PATCH}\")\n\n#==============================================================================\n# INCLUDE DIRECTORIES\n#==============================================================================\ntarget_include_directories (${nlopt_lib} PRIVATE\n  ${PROJECT_BINARY_DIR}\n  src/algs/stogo\n  src/algs/ags\n  src/util\n  src/algs/direct\n  src/algs/cdirect\n  src/algs/praxis\n  src/algs/crs\n  src/algs/mlsl\n  src/algs/mma\n  src/algs/cobyla\n  src/algs/newuoa\n  src/algs/neldermead\n  src/algs/auglag\n  src/algs/bobyqa\n  src/algs/isres\n  src/algs/slsqp\n  src/algs/esch\n  src/api)\n\nget_target_property (NLOPT_PRIVATE_INCLUDE_DIRS ${nlopt_lib} INCLUDE_DIRECTORIES)\ntarget_include_directories (${nlopt_lib} INTERFACE \"$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/src/api;${PROJECT_BINARY_DIR}>\" \"$<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}>\")\n\nif (BUILD_SHARED_LIBS)\n  target_compile_definitions (${nlopt_lib} PUBLIC NLOPT_DLL)\n\n  if (WIN32)\n    # needed to switch between dllexport/dllimport\n    target_compile_definitions (${nlopt_lib} PRIVATE NLOPT_DLL_EXPORT)\n  endif ()\nendif ()\n\n# needed for the language plugins\nset_target_properties (${nlopt_lib} PROPERTIES POSITION_INDEPENDENT_CODE ON)\n\n# for consistent floating-point operations across architectures\noption (DISABLE_FP_CONTRACT \"Disable floating-point contractions\" ON)\nif (DISABLE_FP_CONTRACT AND CMAKE_C_COMPILER_ID MATCHES \"GNU|Clang\")\n  set (CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ffp-contract=off\")\nendif ()\n\ninstall ( TARGETS ${nlopt_lib}\n          EXPORT  NLoptLibraryDepends\n          RUNTIME DESTINATION ${NLOPT_INSTALL_BINDIR}\n          LIBRARY DESTINATION ${NLOPT_INSTALL_LIBDIR}\n          ARCHIVE DESTINATION ${NLOPT_INSTALL_LIBDIR}\n        )\n\nif (MSVC AND BUILD_SHARED_LIBS)\n  install (FILES $<TARGET_PDB_FILE:${nlopt_lib}> DESTINATION ${NLOPT_INSTALL_BINDIR} CONFIGURATIONS Debug RelWithDebInfo COMPONENT Debug)\nendif ()\n\n# install man\nif (UNIX)\n  install (FILES src/api/nlopt.3 src/api/nlopt_minimize.3 src/api/nlopt_minimize_constrained.3 DESTINATION ${NLOPT_INSTALL_MANDIR}/man3)\nendif ()\n\nif (NLOPT_PYTHON)\n  if (CMAKE_VERSION VERSION_LESS 3.26)\n    find_package (Python 3.6 COMPONENTS Interpreter Development NumPy)\n  else ()\n    find_package (Python 3.6 COMPONENTS Interpreter Development.Module Development.SABIModule NumPy)\n  endif ()\nendif ()\n\nif (WIN32)\n  set (INSTALL_PYTHON_DIR Lib/site-packages CACHE STRING \"site packages dir\")\nelse ()\n  set (INSTALL_PYTHON_DIR ${NLOPT_INSTALL_LIBDIR}/python${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}/site-packages CACHE STRING \"site packages dir\")\nendif ()\n\nif (NLOPT_GUILE)\n  find_package (Guile)\nendif ()\n\nif (NLOPT_SWIG)\n  find_package (SWIG 3)\n  if (SWIG_FOUND)\n    add_subdirectory (src/swig)\n  endif ()\nendif ()\n\nif (NLOPT_OCTAVE)\n  find_package (Octave)\nendif ()\n\nif (NLOPT_MATLAB)\n  find_package (Matlab COMPONENTS MX_LIBRARY MAIN_PROGRAM)\nendif ()\n\nif (OCTAVE_FOUND OR Matlab_FOUND)\n  add_subdirectory (src/octave)\nendif ()\n\nif (NLOPT_TESTS)\n  enable_testing ()\n  add_subdirectory (test)\nendif ()\n\nset (CPACK_PACKAGE_NAME          \"${CMAKE_PROJECT_NAME}\")\nset (CPACK_PACKAGE_VERSION_MAJOR \"${NLOPT_MAJOR_VERSION}\")\nset (CPACK_PACKAGE_VERSION_MINOR \"${NLOPT_MINOR_VERSION}\")\nset (CPACK_PACKAGE_VERSION_PATCH \"${NLOPT_BUGFIX_VERSION}\")\nset (CPACK_SOURCE_GENERATOR      \"TBZ2;TGZ\"    )\nset (CPACK_BINARY_STGZ           OFF CACHE BOOL \"STGZ\")\nset (CPACK_BINARY_TBZ2           ON  CACHE BOOL \"TBZ2\")\nset (CPACK_BINARY_TGZ            ON  CACHE BOOL \"TGZ\")\nset (CPACK_BINARY_TZ             OFF CACHE BOOL \"TZ\")\nset (CPACK_SOURCE_IGNORE_FILES \".git;/build;.*~;${CPACK_SOURCE_IGNORE_FILES}\")\n\nset (CPACK_SOURCE_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${NLOPT_VERSION_STRING})\n\ninclude (CPack)\n\n# configuration files\nexport (TARGETS ${nlopt_lib} NAMESPACE NLopt:: FILE ${PROJECT_BINARY_DIR}/NLoptLibraryDepends.cmake)\n\n# Install the export set for use with the install-tree\ninstall(EXPORT NLoptLibraryDepends\n        NAMESPACE NLopt::\n        DESTINATION ${NLOPT_INSTALL_CMAKEDIR}\n        COMPONENT Development)\n\n# Create a NLOPTConfig.cmake file for the use from the install tree\n# and install it\nset (NLOPT_LIBRARIES \"NLopt::${nlopt_lib}\")\n\nconfigure_file (cmake/NLoptConfig.cmake.in NLoptConfig.cmake @ONLY)\nconfigure_file (cmake/NLoptConfigVersion.cmake.in NLoptConfigVersion.cmake @ONLY)\ninstall (FILES\n          ${CMAKE_CURRENT_BINARY_DIR}/NLoptConfig.cmake\n          ${CMAKE_CURRENT_BINARY_DIR}/NLoptConfigVersion.cmake\n         DESTINATION ${NLOPT_INSTALL_CMAKEDIR}\n         COMPONENT Development)\n"
        },
        {
          "name": "CMakePresets.json",
          "type": "blob",
          "size": 0.5263671875,
          "content": "{\n  \"version\": 2,\n  \"configurePresets\": [\n    {\n      \"name\": \"linux-debug\",\n      \"binaryDir\": \"${sourceDir}/build\",\n      \"generator\": \"Unix Makefiles\",\n      \"cacheVariables\": {\n        \"CMAKE_BUILD_TYPE\": \"RelWithDebInfo\",\n        \"CMAKE_C_FLAGS\": \"-Wall -Wextra -Wpedantic -Wshadow\",\n        \"CMAKE_CXX_FLAGS\": \"-Wall -Wextra -Wpedantic -Wshadow -D_GLIBCXX_ASSERTIONS -fno-inline\",\n        \"CMAKE_INSTALL_PREFIX\": \"${sourceDir}/build/install\",\n        \"SWIG_COMPILE_FLAGS\": \"-O1 -Wno-unused-parameter -Wno-shadow\"\n      }\n    }\n  ]\n}\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 2.0322265625,
          "content": "NLopt combines several free/open-source nonlinear optimization\nlibraries by various authors.  See the COPYING, COPYRIGHT, and README\nfiles in the subdirectories for the original copyright and licensing\ninformation of these packages.\n\nThe compiled NLopt library, i.e. the combined work of all of the\nincluded optimization routines, is licensed under the conjunction of\nall of these licensing terms. By default, the most restrictive terms\nare for the code in the \"luksan\" directory, which is licensed under\nthe GNU Lesser General Public License (GNU LGPL), version 2.1 or\nlater (see luksan/COPYRIGHT). That means that, by default, the compiled\nNLopt library is governed by the terms of the LGPL.\n\n---------------------------------------------------------------------------\n\nHowever, NLopt also offers the option to be built without the code in\nthe \"luksan\" directory. In this case, NLopt, including any modifications\nto the abovementioned packages, are licensed under the standard \"MIT License:\"\n\nCopyright (c) 2007-2024 Massachusetts Institute of Technology\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "COPYRIGHT",
          "type": "blob",
          "size": 1.1728515625,
          "content": "/* Copyright (c) 2007-2020 Massachusetts Institute of Technology\n *                         and other contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n * \n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \n */\n\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 0.068359375,
          "content": "See https://github.com/stevengj/nlopt for a detailed version history.\n"
        },
        {
          "name": "NEWS.md",
          "type": "blob",
          "size": 17.796875,
          "content": "# NLopt Release Notes\n\n## NLopt 2.9.1\n\n25 november 2024\n\n* Fixed PRAXIS box constraints ([#528])\n\n## NLopt 2.9\n\n10 November 2024\n\n* New `NLOPT_LUKSAN` cmake option to build without Luksan LGPL code ([#568]).\n\n* Dropped unused LD_LBFGS_NOCEDAL enum value.\n\n* Python 3.13 support ([#565]).\n\n* Fixed COBYLA not returning the optimum ([#57])\n\n* Fixed SLSQP returning infeasible optimum ([#368])\n\n* Fixed STOGO not registering new optimum ([#504])\n\n* Various minor bugfixes ([#570], [#563], [#379], [#511])\n\n## NLopt 2.8\n\n9 August 2024\n\n* Support C++ functors for objective functions ([#457]).\n\n* CCSA/MMA an now use the `initial_step` parameter to bound their initial stepsize,\n  and also expose a new internal parameter `rho_init` ([#561]).\n\n* Install `pkg-config` file on Windows ([#534]).\n\n* Allow having more equality constraints than there are variables ([#509]).\n\n* Bugfixes to `nlopt_algorithm_name` ([#558]), Matlab `NLOPT_GN_AGS` ([#533]), forced stop for empty dimensions ([#473]), SLSQP ([#465]), and build improvements ([#551], [#535],[#510], [#445]…).\n\n## NLopt 2.7.1\n\n3 December 2021\n\n* Various minor bugfixes ([#268], [#409], [#420]) and build\n  improvements (support Octave 6.x, Guile 3.x, Cmake 3.2).\n\n## NLopt 2.7\n\n18 November 2020\n\n* New `nlopt_set_param` API for setting internal algorithm parameters ([#365]).\n\n* Avoid library-symbol conflicts ([#355], [#361])\n\n## NLopt 2.6.2\n\n15 April 2020\n\n* Fixed forced stop exception with dimension elimination ([#317])\n\n* Fixed `get_initial_step` wrapping ([#319])\n\n* Various build fixes ([#314], [#308], [#303], [#278])\n\n## NLopt 2.6.1\n\n13 April 2019\n\n* Fix `nlopt_version` result for 2.6.x and update soname.\n\n## NLopt 2.6\n\n12 April 2019\n\n* New `nlopt_set_upper_bound` and `nlopt_set_lower_bound` functions in the low-level C API to set one bound at a time ([#257]).\n\n* There is no longer a separate `libnlopt_cxx` library: C++ algorithms (STOGO and AGS) are compiled and included by default ([#198]).\n\n* Various build fixes ([#197], [#216], [#245], [#250], [#230], [#261], etc.), other fixes ([#242], [#258]).\n\n## NLopt 2.5\n\n26 July 2018\n\n* New AGS global solver ([#194]), thanks to Vladislav Sovrasov.\n\n* New `nlopt_get_numevals` function providing a built-in evaluation counter ([#160]).\n\n* New `nlopt_get_errmsg` function for more descriptive error messages.\n\n* Build system is converted to `cmake` ([#49]), thanks to Julien Schueller\n\n* Plugins updated for recent Octave and Guile versions.\n\n* Various other build fixes and minor bug fixes.\n\n## NLopt 2.4.2\n\n20 May 2014\n\n* Fix CRS for empty dimensions (where lower `==` upper bound) (issue [#13]).\n\n* Improvements to CMake (thanks to @xantares) and Windows builds (issue [#12]).\n\n* Fix guile2 compatibility (issue [#21]).\n\n## NLopt 2.4.1\n\n19 November 2013\n\n* Use `cdecl` calling convention instead of stdcall on Win32, to\n  simplify shared-library usage and for consistency with Win64.\n\n## NLopt 2.4\n\n2 November 2013\n\n* New genetic algorithm ESCH, thanks to Carlos Henrique da Silva Santos.\n\n* Fix swig dir for `VPATH` builds, thanks to Sandro Vitenti for the bug report.\n\n* Use `python-config` program in the `configure` script to find the include\n  directories for Python, if possible (may be overridden by `PYTHON_CONFIG`\n  environment variable).\n\n* Bugfix in copy constructor for C++ and Python interfaces.\n\n* Bugfix in return value for setting min/max objective.\n\n* Handle negative rescalings in COBYLA and BOBYQA.\n\n* Plugin installation honors the `configure --prefix`, if any\n  (thanks to xantares@github).\n\n* Various compilation fixes for compatibility with recent software.\n\n## NLopt 2.3.1\n\n16 September 2012\n\n* Bug fix: COBLYA should return `ROUNDOFF_LIMITED` rather than `XTOL_REACHED`\n  if the trust-region radius underflows to zero; thanks to David Liu.\n\n* Bug fix: incorrect return value from set min/max objective.\n\n* Handle case of negative rescalings (from negative dx) in COBYLA and BOBYQA;\n  thanks to Alexander Law for the bug report\n\n## NLopt 2.3\n\n20 July 2012\n\n* In Matlab/Octave interface, make returning NaN from the objective\n  equivalent to `nlopt_force_stop`; thanks to Norman Violet for the suggestion.\n\n* Added CCSA-quadratic (`NLOPT_LD_CCSAQ`), similar to MMA.\n\n* Added interface for supplying a preconditioner (approximate Hessian);\n  currently only supported in CCSAQ.\n\n* When adding mconstraints, allow `tol==NULL` as synonym for zero tolerances.\n\n* Added missing `NLOPT_LD_SLSQP` constant in Matlab/Octave.\n\n* Lower tolerance for dual optimization in MMA/CCSAQ; thanks to\n  Christophe Leruste for the problem report\n\n* Fixed bug in timer, thanks to William Vaughn for the patch.\n\n* Bug fix to convergence test in sbplx; thanks to Douglas Bates.\n\n## NLopt 2.2.4\n\n9 June 2011\n\n* Fixed linking problem for C++ and Python shared libraries on MacOS X;\n  thanks to Volker Lorrmann for the bug report.\n\n## NLopt 2.2.3\n\n8 June 2011\n\n* Fixed additional re-entrancy problem in Luksan algorithms missed\n  in the previous version; thanks to Gert Wollny for the bug report.\n\n* Fixed set/get `vector_storage` in Fortran interface for Fortran\n  compilers with all-uppercase linkage.\n\n## NLopt 2.2.2\n\n26 May 2011\n\n* Added `set_vector_storage` API to modify the memory usage and the\n  subspace dimension for low-storage quasi-Newton methods.\n\n* Fixed missing support for maxtime stopping criteria in Luksan and\n  `ORIG_DIRECT` algorithms; thanks to Jurgen Werner for the bug report.\n\n* Fixed algorithms to support the case where the lower and upper bounds\n  are equal for some variables (which effectively eliminates those\n  variables from optimization).\n\n* Added missing xtol check to SLSQP, which caused erroneous `ROUNDOFF_LIMITED`\n  error codes to be returned; thanks to Alexander Riess for the bug report.\n\n* Fixed slight overcounting of function evaluations for maxeval check\n  in SLSQP.\n\n* Fixed deprecated API to support `xtol_abs == NULL` for backward\n  compatibility (thanks to Francesco Biscani for the bug report).\n\n* Made Luksan algorithms (e.g. LBFGS and other quasi-Newton methods)\n  re-entrant; thanks to Gert Wollny for the bug report.  (Fixes\n  Gentoo bug #368685.)\n\n* Fixed bug in DIRECT (not `ORIG_DIRECT`), where a typo caused suboptimal\n  convergence in some cases; thanks to Sinisa Hristov for the bug report.\n\n## NLopt 2.2.1\n\n6 September 2010\n\n* If you compile `nlopt.h` with the `NLOPT_DLL_EXPOR`T symbol `#defined`,\n  it now uses the `dllexport` directive (under Windows), useful for\n  compiling an NLopt DLL under Microsoft compilers; thanks to Benoit\n  Scherrer for the suggestion.\n\n* Handle case where `copysign` function is missing, e.g. on Windows;\n  thanks to Benoit Scherrer for the bug report.\n\n* Remove C99-style mixed declaration and code in a couple files, so\n  that code compiles in C89; thanks to Benoit Scherrer for the bug report.\n\n* Removed a few compiler warnings under Microsoft compilers; thanks\n  to Benoit Scherrer for the bug report.\n\n* Export `nlopt_get_algorithm_name` function on Windows; thanks to Ofek\n  Shilon for the bug report.\n\n* Don't use `dllimport` directive with `lcc` on Windows (which doesn't\n  support it); thanks to Laurent Vanbeylen for the bug report.\n\n* Update Nodedal README directory to indicate that Nocedal's LBFGS code\n  is now available under the GPL, and therefore may be distributed with\n  a future NLopt version (although Luksan's LBFGS code already works well).\n\n* Bug fix in `set`/`get_xtol_abs`; thanks to David Rivest-Henault for the report.\n\n## NLopt 2.2\n\n15 July 2010\n\n* Added SLSQP algorithm for gradient-based local optimization with\n  nonlinear constraints via sequential quadratic programming, based\n  on the implementation by Dieter Kraft that was adapted for SciPy.\n\n* Modified BOBYQA and COBYLA algorithms to support unequal initial\n  step sizes in different directions; thanks to Tom Fiddaman for pointing\n  out the need for this in the case where different directions have\n  very different scales.\n\n* Added Python module docstring; thanks to Sebastian Walter for the suggestion.\n\n* Added `GUILE_INSTALL_DIR` variable to allow the user to change the\n  Guile installation directory.\n\n* Added Fortran interface for vector-valued constraints.\n\n* Throw correct exceptions in Python for the `add_*constraint` functions;\n  thanks to Dmitrey Kroshko for the bug report.\n\n* Support forced stop and exceptions in `ORIG_DIRECT` algorithm.\n\n* Remove arbitrary `1e20` upper bound on function values from `ORIG_DIRECT`\n  code.\n\n* Bugfix in C++ interface (and some other language front-ends) when\n  deallocating the nlopt_opt object in cases like MLSL where\n  local_optimizer is used; thanks to Jurgen Werner for the bug report.\n\n## NLopt 2.1.2\n\n8 July 2010\n\n* The Python mconstraint (vector-valued constraint) functions\n  now pass a 2-dimensional array for the gradient argument, rather\n  than a flattened 1d array.\n\n* Improved handling of exceptions and forced stops for constrained\n  optimization, making sure that no constraints are evaluated after\n  the stop.\n\n* Return an `NLOPT_INVALID_ARGS` error if more than n equality constraints\n  are added in an n-dimensional problem.\n\n* Fix bug that could cause spurious `NLOPT_INVALID_ARGS` errors when\n  adding constraints under rare circumstances.\n\n* Eliminate a few small memory leaks that could occur under error conditions.\n\n## NLopt 2.1.1\n\n7 July 2010\n\n* More robust configure check for Python include directories, via\n  `distutils.sysconfig.get_python_inc()` and `numpy.get_include()`.\n  Thanks to Nathaniel Smith for the tip.\n\n* Bug fix in Guile interface: added missing prefix to nlopt-version-major\n  etcetera.\n\n## NLopt 2.1\n\n6 July 2010\n\n* New vector-valued constraint feature; thanks to Dmitrey Kroshko of OpenOpt\n  for the suggestion.\n\n* COBYLA now accepts equality constraints.\n\n* Guard against multiple inclusion in `nlopt.hpp`; thanks to Saul\n  Thurrowgood for the suggestion.\n\n## NLopt 2.0.2\n\n17 June 2010\n\n* Fixed compilation failure in Microsoft Visual Studio, due to\n  incorrect usage of `__stdcall` keyword; thanks to Dave Katz for the\n  bug report.\n\n## NLopt 2.0.1\n\n16 June 2010\n\n* Bug fix in Fortran API (for `nlo_get_` functions returning arrays).\n\n* Fixed buggy compilation with MinGW.\n\n## NLopt 2.0\n\n15 June 2010\n\n* New C API, that works by creating an `nlopt_opt` \"object\" and then calling\n  functions to set the optimization parameters — much more extensible\n  than the old API (which is preserved for backwards compatibility).\n  (Updated Fortran, Matlab, and GNU Octave wrappers as well.)\n\n* C++ `nlopt.hpp` wrapper around C API, allowing namespaces, object\n  constructors/destructors, `std::vector<double>`, and exceptions\n  to be exploited.\n\n* New nlopt wrappers callable from Python and GNU Guile, generated\n  with the help of SWIG.\n\n* New `man nlopt` manual page documenting new API.\n\n* New AUGLAG algorithm(s) implementing an augmented-Lagrangian method\n  proposed by Birgin and Martinez (2008), which supports nonlinear\n  equality and inequality constraints \"wrapped around\" other\n  local/global optimization methods.\n\n* Added API for nonlinear equality constraints (currently only\n  supported by AUGLAG and ISRES algorithms).\n\n* Support inequality constraints directly in `ORIG_DIRECT` algorithms\n  (no need to return NaN when constraint is violated).\n\n* Inequality/equality constraints now have optional tolerances that\n  are used as conditions in stopping criteria.\n\n* Pseudo-randomize simplex steps in COBYLA algorithm, improving robustness\n  by avoiding accidentally taking steps that don't improve conditioning\n  (which seems to happen sometimes with active bound constraints).  The\n  algorithm remains deterministic (a deterministic seed is used), however.\n\n* Allow COBYLA to increase the trust-region radius if the predicted improvement\n  was approximately right and the simplex is OK, following a suggestion\n  in the SAS manual for PROC NLP that seems to improve convergence speed.\n\n* Added `nlopt_force_stop` function to force a (graceful) halt to\n  the optimization, and corresponding `NLOPT_FORCED_STOP` return code.\n\n* Improved thread-safety in random-number generation: thread-local\n  storage is used for random-number state, on compilers that support\n  it (e.g. gcc, Intel, Microsoft), to make the generation thread-safe.\n  In this case, the random-number seed must be set per-thread.\n\n* Return an error in global-search algorithms if the domain is not finite.\n\n* Use `stdcall` convention on Windows; thanks to Alan Young for the suggestion.\n\n* Added missing absolute-tolerance criteria in Luksan algorithms; thanks\n  to Greg Nicholas for the bug report.\n\n* Fixed compilation under C++, and use C++ compiler for everything in\n  `--with-cxx` mode; thanks to Greg Nicholas for the bug report.\n\n* In MMA, only stop at minf_max/stopval if the point is feasible.\n\n* Fix Matlab mex file to not include unnecessary `nlopt-util.h` file,\n  simplifying Windows compilation.\n\n## NLopt 1.2\n\n18 November 2009\n\n* Added Powell's BOBYQA algorithm for box-constrained optimization\n  without derivatives, an improvement on NEWUOA.\n\n* Added ISRES genetic algorithm, supporting nonlinearly constrained\n  global optimization.\n\n* New functions `nlopt_{set/get}_stochastic_population` to provide\n  optional greater control over the random \"population\" sizes in\n  stochastic algorithms (although it still has a sensible default).\n\n* Bug fix: remove extraneous text accidentally included in `nlopt.f` Fortran\n  include file.\n\n* Bug fix: `configure` script now correctly handles Matlab installation\n  when `MEX_INSTALL_DIR` is specified manually by the user.\n\n## NLopt 1.1\n\n12 November 2009\n\n* `configure` script detects whether `--enable-shared` is required\n  in order to compile Matlab and Octave plugins (as is the case\n  on x86_64), and disables compilation of those plugins if\n  `--enable-shared` is not used.\n\n* Added `--without-octave` and `--without-matlab` configure options to\n  disable Octave and Matlab plugins, respectively.\n\n* Modified COBYLA algorithm to have better support for bound\n  constraints.\n\n* Added new `NLOPT_ROUNDOFF_LIMITED` failure code to indicate\n  cases in which optimization breaks down due to roundoff errors,\n  in which case it is possible that useful results were obtained.\n\n* Experimental support for nonlinear equality constraints via\n  augmented-Lagrangian method.\n\n* Support for compiling under Windows (ideally with MinGW) as a\n  DLL, although you have to manually add `#define NLOPT_DLL`\n  to nlopt.h *after* installing (after compiling NLopt).\n\n* Added several checks for roundoff-related breakdown to NEWUOA code.\n\n* When only a relative error tolerance is specified, no longer\n  fails to halt when exact convergence to zero is obtained.\n\n* Workaround for incompatible `qsort_r` functions in BSD and GNU libc\n  by always using my own version; thanks to Wendy Vandoolaeghe\n  and Philippe Preux for the bug report and explanation.\n\n* Workaround for gcc 3.4.x conflict with `HUGE_VAL` definition in Solaris\n  (gcc bug 19933).\n\n* Better identification of Matlab-plugin installation directory.\n\n* Fixed identification of Octave-plugin installation directory for\n  recent Octave versions.\n\n## NLopt 1.0.1\n\n13 Nov. 2008\n\n* Allow user to override Matlab-plugin installation directory with\n  `MEX_INSTALL_DIR`.\n\n* Bug fix in my DIRECT code that prevented convergence (DIRECT-L unaffected).\n\n* MLSL needs a nonzero default `ftol_rel` and/or `xtol_rel` to ensure that\n  its local searches terminate; use roughly machine precision as defaults.\n\n## NLopt 1.0\n\n11 Nov. 2008\n\n* Initial public release.\n\n<!--- generated by script similar to julia/doc/NEWS-update.jl: -->\n[#12]: https://github.com/stevengj/nlopt/issues/12\n[#13]: https://github.com/stevengj/nlopt/issues/13\n[#21]: https://github.com/stevengj/nlopt/issues/21\n[#49]: https://github.com/stevengj/nlopt/issues/49\n[#57]: https://github.com/stevengj/nlopt/issues/57\n[#160]: https://github.com/stevengj/nlopt/issues/160\n[#194]: https://github.com/stevengj/nlopt/issues/194\n[#197]: https://github.com/stevengj/nlopt/issues/197\n[#198]: https://github.com/stevengj/nlopt/issues/198\n[#216]: https://github.com/stevengj/nlopt/issues/216\n[#230]: https://github.com/stevengj/nlopt/issues/230\n[#242]: https://github.com/stevengj/nlopt/issues/242\n[#245]: https://github.com/stevengj/nlopt/issues/245\n[#250]: https://github.com/stevengj/nlopt/issues/250\n[#257]: https://github.com/stevengj/nlopt/issues/257\n[#258]: https://github.com/stevengj/nlopt/issues/258\n[#261]: https://github.com/stevengj/nlopt/issues/261\n[#268]: https://github.com/stevengj/nlopt/issues/268\n[#278]: https://github.com/stevengj/nlopt/issues/278\n[#303]: https://github.com/stevengj/nlopt/issues/303\n[#308]: https://github.com/stevengj/nlopt/issues/308\n[#314]: https://github.com/stevengj/nlopt/issues/314\n[#317]: https://github.com/stevengj/nlopt/issues/317\n[#319]: https://github.com/stevengj/nlopt/issues/319\n[#355]: https://github.com/stevengj/nlopt/issues/355\n[#361]: https://github.com/stevengj/nlopt/issues/361\n[#365]: https://github.com/stevengj/nlopt/issues/365\n[#368]: https://github.com/stevengj/nlopt/issues/368\n[#379]: https://github.com/stevengj/nlopt/issues/379\n[#409]: https://github.com/stevengj/nlopt/issues/409\n[#420]: https://github.com/stevengj/nlopt/issues/420\n[#445]: https://github.com/stevengj/nlopt/issues/445\n[#457]: https://github.com/stevengj/nlopt/issues/457\n[#465]: https://github.com/stevengj/nlopt/issues/465\n[#473]: https://github.com/stevengj/nlopt/issues/473\n[#504]: https://github.com/stevengj/nlopt/issues/504\n[#509]: https://github.com/stevengj/nlopt/issues/509\n[#510]: https://github.com/stevengj/nlopt/issues/510\n[#511]: https://github.com/stevengj/nlopt/issues/511\n[#528]: https://github.com/stevengj/nlopt/issues/528\n[#533]: https://github.com/stevengj/nlopt/issues/533\n[#534]: https://github.com/stevengj/nlopt/issues/534\n[#535]: https://github.com/stevengj/nlopt/issues/535\n[#551]: https://github.com/stevengj/nlopt/issues/551\n[#558]: https://github.com/stevengj/nlopt/issues/558\n[#561]: https://github.com/stevengj/nlopt/issues/561\n[#563]: https://github.com/stevengj/nlopt/issues/563\n[#565]: https://github.com/stevengj/nlopt/issues/565\n[#568]: https://github.com/stevengj/nlopt/issues/568\n[#570]: https://github.com/stevengj/nlopt/issues/570\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.76953125,
          "content": "[![Latest Docs](https://readthedocs.org/projects/nlopt/badge/?version=latest)](http://nlopt.readthedocs.io/en/latest/)\n[![Build Status](https://github.com/stevengj/nlopt/actions/workflows/build.yml/badge.svg?branch=master)](https://github.com/stevengj/nlopt/actions/workflows/build.yml)\n\nNLopt is a library for nonlinear local and global optimization, for\nfunctions with and without gradient information.  It is designed as\na simple, unified interface and packaging of several free/open-source\nnonlinear optimization libraries.\n\nThe latest release can be downloaded from the [NLopt releases](https://github.com/stevengj/nlopt/releases) page on Github, and the \n[NLopt manual](https://nlopt.readthedocs.io/en/latest/) is hosted on readthedocs.\n\nTo build it refer to the [installation instructions](https://nlopt.readthedocs.io/en/latest/#download-and-installation).\n\nTo use in your C/C++ programs see the [C reference manual](https://nlopt.readthedocs.io/en/latest/NLopt_Reference/).\n\nThere are also interfaces for [C++](https://nlopt.readthedocs.io/en/latest/NLopt_C-plus-plus_Reference/), [Fortran](https://nlopt.readthedocs.io/en/latest/NLopt_Fortran_Reference/), [Python](https://nlopt.readthedocs.io/en/latest/NLopt_Python_Reference/), [Matlab or GNU Octave](https://nlopt.readthedocs.io/en/latest/NLopt_Matlab_Reference/), [OCaml](https://bitbucket.org/mkur/nlopt-ocaml),\n[GNU Guile](https://nlopt.readthedocs.io/en/latest/NLopt_Guile_Reference/), [GNU R](https://www.ucl.ac.uk/~uctpjyy/nloptr.html), [Lua](https://github.com/rochus-keller/LuaNLopt), [Perl](https://metacpan.org/pod/Math::NLopt), [Rust](https://github.com/jesskfullwood/rust-nlopt), [Ruby](https://github.com/ankane/nlopt-ruby), and [Julia](https://github.com/JuliaOpt/NLopt.jl).  Interfaces for other languages may\nbe added in the future.\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 0.458984375,
          "content": "Add nonlinearly constrained multistart algorithm.\n\nAdd option to control subspace size (mf) in LBFGS etcetera.\n\nSTOGO has bitrotted - doesn't return proper NLopt codes, doesn't\nsupport forced stop, etcetera.  Needs to be fixed.\n\nIf local_optimizer is set, STOGO should use it instead of its\nown BFGS.\n\nWrappers for GNU R, Java, Perl, Ocaml, C#, ...\n\nUpdates from Jones, D.R., Martins, J.R.R.A., (2021) \"The DIRECT algorithm: 25 years Later.\" J  Glob Optim 79, 521–566."
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 1.31640625,
          "content": "site_name: NLopt Documentation\nsite_author: S. G. Johnson et al.\nrepo_url: https://github.com/stevengj/nlopt/\nedit_uri: edit/master/doc/docs\n\ndocs_dir: 'doc/docs'\nsite_dir: 'doc/site'\n\ntheme: readthedocs\n\nmarkdown_extensions:\n    - wikilinks\n    - toc:\n        title: Table of Contents\n    - attr_list\n    - fenced_code\n    - mdx_math:\n        enable_dollar_delimiter: True\n\nextra_javascript: ['https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML','mathjaxhelper.js']\n\nnav:\n - NLopt:\n    - Overview: index.md\n    - FAQ: NLopt_FAQ.md\n - NLopt manual:\n    - NLopt manual: NLopt_manual.md\n    - Introduction: NLopt_Introduction.md\n    - Installation: NLopt_Installation.md\n    - Tutorial:     NLopt_Tutorial.md\n - NLopt reference:\n    - General reference: NLopt_Reference.md\n    - C++ reference: NLopt_C-plus-plus_Reference.md\n    - Fortran reference: NLopt_Fortran_Reference.md\n    - Matlab reference: NLopt_Matlab_Reference.md\n    - Python reference: NLopt_Python_Reference.md\n    - Guile reference: NLopt_Guile_Reference.md\n    - R reference:     NLopt_R_Reference.md\n    - Deprecated API reference: NLopt_Deprecated_API_Reference.md\n - NLopt algorithms:\n    - NLopt algorithms: NLopt_Algorithms.md\n - NLopt on Windows: NLopt_on_Windows.md\n - License and Copyright: NLopt_License_and_Copyright.md\n - Citing NLopt: Citing_NLopt.md\n"
        },
        {
          "name": "nlopt.pc.in",
          "type": "blob",
          "size": 0.2880859375,
          "content": "prefix=@CMAKE_INSTALL_PREFIX@\nexec_prefix=${prefix}\nlibdir=${exec_prefix}/@NLOPT_INSTALL_LIBDIR@\nincludedir=${prefix}/include\n\nName: NLopt\nDescription: nonlinear optimization library\nVersion: @NLOPT_VERSION_STRING@\nLibs: -L${libdir} -lnlopt\nLibs.private: @LIBS_PRIVATE@\nCflags: -I${includedir}\n\n"
        },
        {
          "name": "nlopt_config.h.in",
          "type": "blob",
          "size": 4.0654296875,
          "content": "/*==============================================================================\n# NLOPT CMake configuration file\n#\n# NLopt is a free/open-source library for nonlinear optimization, providing\n# a common interface for a number of different free optimization routines\n# available online as well as original implementations of various other\n# algorithms\n# WEBSITE: http://ab-initio.mit.edu/wiki/index.php/NLopt\n# AUTHOR: Steven G. Johnson\n#\n# This config.cmake.h.in file was created to compile NLOPT with the CMAKE utility.\n# Benoit Scherrer, 2010 CRL, Harvard Medical School\n# Copyright (c) 2008-2009 Children's Hospital Boston\n#\n# Minor changes to the source was applied to make possible the compilation with\n# Cmake under Linux/Win32\n#============================================================================*/\n\n/* Bugfix version number. */\n#define BUGFIX_VERSION @NLOPT_BUGFIX_VERSION@\n\n/* Define to enable extra debugging code. */\n#undef DEBUG\n\n/* Define to 1 if you have the `BSDgettimeofday' function. */\n#undef HAVE_BSDGETTIMEOFDAY\n\n/* Define if the copysign function/macro is available. */\n#cmakedefine HAVE_COPYSIGN\n\n/* Define if the fpclassify() function/macro is available. */\n#cmakedefine HAVE_FPCLASSIFY\n\n/* Define to 1 if you have the <getopt.h> header file. */\n#cmakedefine HAVE_GETOPT_H\n\n/* Define to 1 if you have the getopt function in your standard library. */\n#cmakedefine HAVE_GETOPT\n\n/* Define to 1 if you have the `getpid' function. */\n#cmakedefine HAVE_GETPID\n\n/* Define if syscall(SYS_gettid) available. */\n#undef HAVE_GETTID_SYSCALL\n\n/* Define to 1 if you have the `gettimeofday' function. */\n#cmakedefine HAVE_GETTIMEOFDAY\n\n/* Define if the isinf() function/macro is available. */\n#cmakedefine HAVE_ISINF\n\n/* Define if the isnan() function/macro is available. */\n#cmakedefine HAVE_ISNAN\n\n/* Define to 1 if you have the `m' library (-lm). */\n#undef HAVE_LIBM\n\n/* Define to 1 if you have the `qsort_r' function. */\n#cmakedefine HAVE_QSORT_R\n\n/* Define to 1 if you have the <stdint.h> header file. */\n#cmakedefine HAVE_STDINT_H\n\n/* Define to 1 if you have the <sys/types.h> header file. */\n#cmakedefine HAVE_SYS_TIME_H\n\n/* Define to 1 if you have the `time' function. */\n#cmakedefine HAVE_TIME\n\n/* Define to 1 if the system has the type `uint32_t'. */\n#cmakedefine HAVE_UINT32_T\n\n/* Define to 1 if you have the <unistd.h> header file. */\n#cmakedefine HAVE_UNISTD_H\n\n/* Define to the sub-directory in which libtool stores uninstalled libraries.\n   */\n#undef LT_OBJDIR\n\n/* Major version number. */\n#define MAJOR_VERSION @NLOPT_MAJOR_VERSION@\n\n/* Minor version number. */\n#define MINOR_VERSION @NLOPT_MINOR_VERSION@\n\n/* Name of package */\n#undef PACKAGE\n\n/* Define to the address where bug reports for this package should be sent. */\n#undef PACKAGE_BUGREPORT\n\n/* Define to the full name of this package. */\n#undef PACKAGE_NAME\n\n/* Define to the full name and version of this package. */\n#undef PACKAGE_STRING\n\n/* Define to the one symbol short name of this package. */\n#undef PACKAGE_TARNAME\n\n/* Define to the home page for this package. */\n#undef PACKAGE_URL\n\n/* Define to the version of this package. */\n#undef PACKAGE_VERSION\n\n/* replacement for broken HUGE_VAL macro, if needed */\n#undef REPLACEMENT_HUGE_VAL\n\n/* The size of `unsigned int', as computed by sizeof. */\n#define SIZEOF_UNSIGNED_INT @SIZEOF_UNSIGNED_INT@\n\n/* The size of `unsigned long', as computed by sizeof. */\n#define SIZEOF_UNSIGNED_LONG @SIZEOF_UNSIGNED_LONG@\n\n/* Define to 1 if you have the ANSI C header files. */\n#undef STDC_HEADERS\n\n/* Define to C thread-local keyword, or to nothing if this is not supported in\n   your compiler. */\n#define THREADLOCAL @THREADLOCAL@\n\n/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */\n#cmakedefine TIME_WITH_SYS_TIME\n\n/* Version number of package */\n#undef VERSION\n\n/* Define if compiled including C++-based routines */\n#cmakedefine NLOPT_CXX\n\n/* Define to empty if `const' does not conform to ANSI C. */\n#undef const\n\n/* Define to `__inline__' or `__inline' if that's what the C compiler\n   calls it, or to nothing if 'inline' is not supported under any name.  */\n#ifndef __cplusplus\n#undef inline\n#endif\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}