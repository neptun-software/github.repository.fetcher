{
  "metadata": {
    "timestamp": 1736710217388,
    "page": 933,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "libtom/libtomcrypt",
      "stars": 1608,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".ci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.2197265625,
          "content": "---\nAccessModifierOffset: -2\nConstructorInitializerIndentWidth: 4\nAlignEscapedNewlinesLeft: false\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakTemplateDeclarations: false\nAlwaysBreakBeforeMultilineStrings: false\nBreakBeforeBinaryOperators: false\nBreakConstructorInitializersBeforeComma: false\nBinPackParameters: true\nColumnLimit:     120\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nDerivePointerBinding: true\nExperimentalAutoDetectBinPacking: false\nIndentCaseLabels: true\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakComment: 60\nPenaltyBreakString: 1000\nPenaltyBreakFirstLessLess: 120\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerBindsToType: false\nSpacesBeforeTrailingComments: 1\nCpp11BracedListStyle: false\nStandard:        Cpp03\nIndentWidth:     3\nTabWidth:        8\nUseTab:          Never\nBreakBeforeBraces: Linux\nIndentFunctionDeclarationAfterType: false\nSpacesInParentheses: false\nSpaceInEmptyParentheses: false\nSpacesInCStyleCastParentheses: false\nSpaceAfterControlStatementKeyword: true\nSpaceBeforeAssignmentOperators: true\n...\n\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1396484375,
          "content": "/.gitattributes export-ignore\n/.gitignore     export-ignore\n/.travis.yml    export-ignore\n\n/**             export-subst\n\n/tests/test.key -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.4677734375,
          "content": "# suppress compiler/linker output\r\n*.[oa]\r\n*.obj\r\n*.l[oa]\r\n[Dd]ebug/\r\n[Rr]elease/\r\n/MSVC_*\r\n.libs/\r\n\r\n# release files\r\n/libtomcrypt-*\r\n/crypt-*\r\n\r\n# suppress output of build process\r\ngcc_[12].txt\r\ntestok.txt\r\ntest_*.txt\r\ntv.txt\r\n*_tv.txt\r\ndoxygen/\r\ndoc/crypt.pdf\r\ndoc/refman.pdf\r\n\r\n# *nix/windows test executables\r\nltc-*\r\naesgcm\r\naesgcm.exe\r\nconstants\r\nconstants.exe\r\ncrypt\r\ncrypt.exe\r\nhashsum\r\nhashsum.exe\r\nmulti\r\nmulti.exe\r\nopenssl-enc\r\nopenssl-enc.exe\r\nopenssh-privkey\r\nopenssh-privkey.exe\r\npem-info\r\npem-info.exe\r\nsizes\r\nsizes.exe\r\nsmall\r\nsmall.exe\r\ntest\r\ntest.exe\r\ntv_gen\r\ntv_gen.exe\r\ntiming\r\ntiming.exe\r\n\r\n# Visual Studio special files\r\n# ignore user specific settings\r\n*.user\r\n*.suo\r\n# ignore non-compressed browse file (holds information for ClassView, IntelliSense and WizardBar)\r\n*.ncb\r\n# ignore VS intermediate and program database files\r\n*.idb\r\n*.pdb\r\n\r\n# Eclipse special files\r\n.project\r\n.cproject\r\n.settings/\r\n\r\n# KDevelop special files\r\n*.kdev4\r\n\r\n\r\n# macOS special files\r\n.DS_Store\r\n\r\n# other special files\r\nshowlibs      # symlink to .libs\r\n\r\n# oops ;) but we don't want them to appear in the repository...\r\n*.stackdump\r\n*.core\r\n\r\n# misc\r\n*.rej\r\n*.patch\r\n*.diff\r\n*.orig\r\n*.out\r\n*.ll\r\n*.gcda\r\n*.gcno\r\n*.gcov\r\nlibtomcrypt.pc\r\n\r\n# output from doc generation\r\ndoxygen/\r\n*.dvi\r\n*.log\r\n*.aux\r\n*.toc\r\n*.idx\r\n*.ilg\r\n*.ind\r\n*.out\r\n*.lof\r\n*.bak\r\n\r\ncoverage/\r\ncoverage*.info\r\n\r\n# coverity intermediate directory etc.\r\ncov-int/\r\n.coverity_*\r\nlibtomcrypt.lzma\r\n\r\n# cmake build directories\r\nbuild*/\r\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 14.5146484375,
          "content": "# SPDX-License-Identifier: Unlicense\n#\n# LibTomCrypt, modular cryptographic library -- Tom St Denis\n#\n\ncmake_minimum_required(VERSION 3.10)\n\nproject(\n    libtomcrypt\n    VERSION 1.18.2\n    DESCRIPTION \"A modular cryptographic library.\"\n    HOMEPAGE_URL \"https://www.libtom.net/LibTomCrypt\"\n    LANGUAGES C\n)\n\n# package release version\n#\n# * bump if re-releasing the same VERSION + patches\n# * set to 1 if releasing a new VERSION\nset(PACKAGE_RELEASE_VERSION 1)\n\n# -----------------------------------------------------------------------------\n# Include CMake modules\n# -----------------------------------------------------------------------------\ninclude(GNUInstallDirs)\ninclude(CheckIPOSupported)\ninclude(CMakePackageConfigHelpers)\n# for potential builds against gnump\ninclude(FindPkgConfig)\n# for potential builds with MSVC\ninclude(CMakePushCheckState)\ninclude(CheckSymbolExists)\n# default is \"No tests\"\noption(BUILD_TESTING \"\" OFF)\ninclude(CTest)\ninclude(sources.cmake)\n\n# -----------------------------------------------------------------------------\n# Options\n# -----------------------------------------------------------------------------\noption(WITH_LTM \"Build with support for libtommath\" TRUE)\noption(WITH_TFM \"Build with support for tomsfastmath\" FALSE)\noption(WITH_GMP \"Build with support for GNU Multi Precision Arithmetic Library\" FALSE)\nset(MPI_PROVIDER\n    \"LTM\"\n    CACHE STRING \"Build tests and demos against 'LTM', 'TFM' or 'GMP', default is LTM\"\n)\noption(BUILD_SHARED_LIBS\n       \"Build shared library and only the shared library if \\\"ON\\\", default is static\" OFF\n)\noption(WITH_PTHREAD \"Build with pthread support\" FALSE)\n\n# -----------------------------------------------------------------------------\n# Add support for ccache if desired\n# -----------------------------------------------------------------------------\nfind_program(CCACHE ccache)\n\nif(CCACHE)\n    option(ENABLE_CCACHE \"Enable ccache.\" ON)\nendif()\n\n# use ccache if installed\nif(CCACHE AND ENABLE_CCACHE)\n    set(CMAKE_C_COMPILER_LAUNCHER ${CCACHE})\nendif()\n\n# -----------------------------------------------------------------------------\n# Compose CFLAGS\n# -----------------------------------------------------------------------------\n\n# Some information ported from makefile_include.mk\n\nif(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n    message(STATUS \"Setting build type to 'Release' as none was specified.\")\n    set(CMAKE_BUILD_TYPE \"Release\")\nendif()\n\n# We differentiate between MSVC, WATCOM and GCC-compatible compilers\nif(MSVC)\n    set(LTC_C_FLAGS -W3)\nelseif(WATCOM)\n    set(LTC_C_FLAGS -fo=.obj -oaxt -3r -w3)\nelse()\n    set(LTC_C_FLAGS\n        -Wall\n        -Wsign-compare\n        -Wextra\n        -Wshadow\n        -Wdeclaration-after-statement\n        -Wbad-function-cast\n        -Wcast-align\n        -Wstrict-prototypes\n        -Wpointer-arith\n        -Wsystem-headers\n    )\n    set(CMAKE_C_FLAGS_DEBUG \"-g3\")\n    set(CMAKE_C_FLAGS_RELEASE \"-O3 -funroll-loops -fomit-frame-pointer\")\n    set(CMAKE_C_FLAGS_RELWITHDEBINFO \"-g3 -O2\")\n    set(CMAKE_C_FLAGS_MINSIZEREL \"-Os\")\nendif()\n\n# What compiler do we have and what are their...uhm... peculiarities\nif(CMAKE_C_COMPILER_ID MATCHES \"(C|c?)lang\")\n    list(APPEND LTC_C_FLAGS -Wno-typedef-redefinition -Wno-tautological-compare\n         -Wno-builtin-requires-header\n    )\n    # Clang requires at least '-O1' for dead code eliminiation\n    set(CMAKE_C_FLAGS_DEBUG \"-O1 ${CMAKE_C_FLAGS_DEBUG}\")\nendif()\nif(CMAKE_C_COMPILER MATCHES \"mingw\")\n    list(APPEND LTC_C_FLAGS -Wno-shadow -Wno-expansion-to-defined -Wno-declaration-after-statement\n         -Wno-bad-function-cast\n    )\nendif()\nif(CMAKE_SYSTEM_NAME MATCHES \"Darwin\")\n    list(APPEND LTC_C_FLAGS -Wno-nullability-completeness)\nendif()\nif(CMAKE_SYSTEM_NAME MATCHES \"CYGWIN\")\n    list(APPEND LTC_C_FLAGS -no-undefined)\nendif()\n\nif(MSVC)\n    cmake_push_check_state()\n    check_symbol_exists(BCryptGenRandom bcrypt.h BCRYPT_AVAILABLE)\n    cmake_pop_check_state()\n    if(BCRYPT_AVAILABLE)\n        target_link_libraries(${PROJECT_NAME} PRIVATE Bcrypt)\n        list(APPEND LTC_C_FLAGS -DLTC_WIN32_BCRYPT)\n    endif()\nendif()\n\n# If the user set the environment variables at generate-time, append them in order to allow\n# overriding our defaults.\n# ~~~\n# ${LTC_CFLAGS} means the user passed it via sth like:\n# $ cmake -DLTC_CFLAGS=\"foo\"\n# ~~~\nlist(APPEND LTC_C_FLAGS ${LTC_CFLAGS})\nlist(APPEND LTC_LD_FLAGS ${LTC_LDFLAGS})\n\n# -----------------------------------------------------------------------------\n# Library targets\n# -----------------------------------------------------------------------------\nadd_library(${PROJECT_NAME} ${SOURCES} ${PUBLIC_HEADERS} ${PRIVATE_HEADERS})\n\ntarget_include_directories(\n    ${PROJECT_NAME} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/headers>\n                           $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}>\n)\n\ntarget_compile_options(${PROJECT_NAME} BEFORE PRIVATE ${LTC_C_FLAGS})\ntarget_link_options(${PROJECT_NAME} BEFORE PRIVATE ${LTC_LD_FLAGS})\n\nset_target_properties(\n    ${PROJECT_NAME}\n    PROPERTIES OUTPUT_NAME tomcrypt\n               VERSION ${PROJECT_VERSION}\n               SOVERSION ${PROJECT_VERSION_MAJOR}\n               PUBLIC_HEADER \"${PUBLIC_HEADERS}\"\n)\n\noption(COMPILE_LTO \"Build with LTO enabled\")\nif(COMPILE_LTO)\n    check_ipo_supported(RESULT COMPILER_SUPPORTS_LTO)\n    if(COMPILER_SUPPORTS_LTO)\n        set_property(TARGET ${PROJECT_NAME} PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)\n    else()\n        message(\n            SEND_ERROR\n                \"This compiler does not support LTO. Reconfigure ${PROJECT_NAME} with -DCOMPILE_LTO=OFF.\"\n        )\n    endif()\nendif()\n\n# -----------------------------------------------------------------------------\n# MPI provider\n# -----------------------------------------------------------------------------\n# libtommath\nif(WITH_LTM)\n    find_package(libtommath 1.2.0 REQUIRED)\n\n    target_compile_definitions(${PROJECT_NAME} PUBLIC LTM_DESC)\n    if(MPI_PROVIDER MATCHES \"LTM\")\n        target_compile_definitions(${PROJECT_NAME} PUBLIC USE_LTM)\n    endif()\n    target_link_libraries(${PROJECT_NAME} PUBLIC libtommath)\n    list(APPEND LTC_PKG_CONFIG_CFLAGS -DLTM_DESC)\n    list(APPEND LTC_PKG_CONFIG_LIBS -ltommath)\n    list(APPEND LTC_DEBIAN_MPI_PROVIDER_DEPENDS libtommath-dev)\nendif()\n# tomsfastmath\nif(WITH_TFM)\n    find_package(tomsfastmath 0.13.1 REQUIRED)\n\n    target_compile_definitions(${PROJECT_NAME} PUBLIC TFM_DESC)\n    if(MPI_PROVIDER MATCHES \"TFM\")\n        target_compile_definitions(${PROJECT_NAME} PUBLIC USE_TFM)\n    endif()\n    target_link_libraries(${PROJECT_NAME} PUBLIC tomsfastmath)\n    list(APPEND LTC_PKG_CONFIG_CFLAGS -DTFM_DESC)\n    list(APPEND LTC_PKG_CONFIG_LIBS -ltfm)\n    list(APPEND LTC_DEBIAN_MPI_PROVIDER_DEPENDS libtfm-dev)\nendif()\n# GNU MP\nif(WITH_GMP)\n    pkg_check_modules(GMP REQUIRED gmp>=6.1.2)\n\n    target_compile_definitions(${PROJECT_NAME} PUBLIC GMP_DESC)\n    if(MPI_PROVIDER MATCHES \"GMP\")\n        target_compile_definitions(${PROJECT_NAME} PUBLIC USE_GMP)\n    endif()\n    target_link_libraries(${PROJECT_NAME} PUBLIC ${GMP_LIBRARIES})\n    list(APPEND LTC_PKG_CONFIG_CFLAGS -DGMP_DESC)\n    list(APPEND LTC_PKG_CONFIG_LIBS -lgmp)\n    list(APPEND LTC_DEBIAN_MPI_PROVIDER_DEPENDS libgmp-dev)\nendif()\n\n# -----------------------------------------------------------------------------\n# other options\n# -----------------------------------------------------------------------------\n\nif(WITH_PTHREAD)\n    set(THREADS_PREFER_PTHREAD_FLAG ON)\n    find_package(Threads REQUIRED)\n    if(CMAKE_USE_PTHREADS_INIT)\n        target_compile_definitions(${PROJECT_NAME} PUBLIC LTC_PTHREAD)\n        target_link_libraries(${PROJECT_NAME} PRIVATE Threads::Threads)\n        list(APPEND LTC_PKG_CONFIG_CFLAGS -DLTC_PTHREAD)\n    else()\n        message(\n            SEND_ERROR\n                \"pthreads not supported. Reconfigure ${PROJECT_NAME} with -DWITH_PTHREAD=OFF.\"\n        )\n    endif()\nendif()\n\nlist(JOIN LTC_PKG_CONFIG_CFLAGS \" \" PKG_CONFIG_CFLAGS)\nlist(JOIN LTC_PKG_CONFIG_LIBS \" \" PKG_CONFIG_LIBS)\nlist(JOIN LTC_DEBIAN_MPI_PROVIDER_DEPENDS \" \" DEBIAN_MPI_PROVIDER_DEPENDS)\n\n# -----------------------------------------------------------------------------\n# demos&test targets\n# -----------------------------------------------------------------------------\n\nadd_subdirectory(demos)\nif(BUILD_TESTING)\n    enable_testing()\n    add_subdirectory(tests)\nendif()\n\n# ---------------------------------------------------------------------------------------\n# Install/export targets and files\n# ---------------------------------------------------------------------------------------\nset(CONFIG_INSTALL_DIR \"${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}\")\nset(PROJECT_VERSION_FILE \"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config-version.cmake\")\nset(PROJECT_CONFIG_FILE \"${PROJECT_NAME}-config.cmake\")\nset(TARGETS_EXPORT_NAME \"${PROJECT_NAME}Targets\")\n\n# install targets\ninstall(\n    TARGETS ${PROJECT_NAME}\n    EXPORT ${TARGETS_EXPORT_NAME}\n    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT Libraries\n    RUNTIME DESTINATION ${CMAKE_INSTALL_LIBDIR}\n    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}\n)\n\n# Install libtomcrypt.pc for pkg-config if we build a shared library\nif(BUILD_SHARED_LIBS)\n    # Let the user override the default directory of the pkg-config file (usually this shouldn't be\n    # required to be changed)\n    set(CMAKE_INSTALL_PKGCONFIGDIR\n        \"${CMAKE_INSTALL_LIBDIR}/pkgconfig\"\n        CACHE PATH \"Folder where to install .pc files\"\n    )\n\n    configure_file(\n        ${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME}.pc.in\n        ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.pc @ONLY\n    )\n\n    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.pc\n            DESTINATION ${CMAKE_INSTALL_PKGCONFIGDIR}\n    )\nendif()\n\n# generate package version file\nwrite_basic_package_version_file(\n    ${PROJECT_VERSION_FILE}\n    VERSION ${PROJECT_VERSION}\n    COMPATIBILITY SameMajorVersion\n)\n\n# install version file\ninstall(FILES ${PROJECT_VERSION_FILE} DESTINATION ${CONFIG_INSTALL_DIR})\n\n# build directory package config\nexport(EXPORT ${TARGETS_EXPORT_NAME} FILE ${PROJECT_CONFIG_FILE})\n\n# installed package config\ninstall(\n    EXPORT ${TARGETS_EXPORT_NAME}\n    DESTINATION ${CONFIG_INSTALL_DIR}\n    FILE ${PROJECT_CONFIG_FILE}\n)\n\n# add to CMake registry\nexport(PACKAGE ${PROJECT_NAME})\n\n# ---------------------------------------------------------------------------------------\n# Create release packages\n# ---------------------------------------------------------------------------------------\n\n# determine distribution and architecture\nfind_program(LSB_RELEASE lsb_release)\nfind_program(SYSCTL sysctl)\nfind_program(UNAME uname)\n\nif(UNAME)\n    execute_process(\n        COMMAND uname -m\n        OUTPUT_VARIABLE MACHINE_ARCH\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n    )\nelseif(SYSCTL)\n    execute_process(\n        COMMAND sysctl -b hw.machine_arch\n        OUTPUT_VARIABLE MACHINE_ARCH\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n    )\nelse()\n    string(TOLOWER ${CMAKE_SYSTEM_NAME} MACHINE_ARCH)\nendif()\n\nif(LSB_RELEASE)\n    execute_process(\n        COMMAND lsb_release -si\n        OUTPUT_VARIABLE LINUX_DISTRO\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n    )\n    execute_process(\n        COMMAND lsb_release -sc\n        OUTPUT_VARIABLE LINUX_DISTRO_CODENAME\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n    )\n    execute_process(\n        COMMAND lsb_release -sr\n        OUTPUT_VARIABLE LINUX_DISTRO_VERSION\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n    )\n\n    string(TOLOWER ${LINUX_DISTRO} LINUX_DISTRO)\n    if(LINUX_DISTRO_CODENAME STREQUAL \"n/a\")\n        set(DISTRO_PACK_PATH ${LINUX_DISTRO}/${LINUX_DISTRO_VERSION}/)\n    else()\n        set(DISTRO_PACK_PATH ${LINUX_DISTRO}/${LINUX_DISTRO_CODENAME}/)\n    endif()\nelse()\n    set(DISTRO_PACK_PATH ${CMAKE_SYSTEM_NAME}/)\nendif()\n\n# make sure untagged versions get a different package name\nexecute_process(\n    COMMAND git describe --exact-match --tags\n    ERROR_QUIET\n    RESULT_VARIABLE REPO_HAS_TAG\n)\nif(REPO_HAS_TAG EQUAL 0)\n    set(PACKAGE_NAME_SUFFIX \"\")\nelse()\n    set(PACKAGE_NAME_SUFFIX \"-git\")\n    message(STATUS \"Use -git suffix\")\nendif()\n\n# default CPack generators\nset(CPACK_GENERATOR TGZ STGZ)\n\n# extra CPack generators\nif(LINUX_DISTRO STREQUAL \"debian\"\n   OR LINUX_DISTRO STREQUAL \"ubuntu\"\n   OR LINUX_DISTRO STREQUAL \"linuxmint\"\n)\n    list(APPEND CPACK_GENERATOR DEB)\nelseif(\n    LINUX_DISTRO STREQUAL \"fedora\"\n    OR LINUX_DISTRO STREQUAL \"opensuse\"\n    OR LINUX_DISTRO STREQUAL \"centos\"\n)\n    list(APPEND CPACK_GENERATOR RPM)\nelseif(CMAKE_SYSTEM_NAME STREQUAL \"FreeBSD\")\n    list(APPEND CPACK_GENERATOR FREEBSD)\nendif()\n\nset(LTC_DEBIAN_SHARED_PACKAGE_NAME \"${PROJECT_NAME}${PACKAGE_NAME_SUFFIX}${PROJECT_VERSION_MAJOR}\")\n\n# general CPack config\nset(CPACK_PACKAGE_DIRECTORY ${CMAKE_BINARY_DIR}/packages/${DISTRO_PACK_PATH})\nmessage(STATUS \"CPack: packages will be generated under ${CPACK_PACKAGE_DIRECTORY}\")\nif(BUILD_SHARED_LIBS)\n    set(CPACK_PACKAGE_NAME \"${PROJECT_NAME}${PROJECT_VERSION_MAJOR}\")\n    set(CPACK_DEBIAN_PACKAGE_NAME \"${LTC_DEBIAN_SHARED_PACKAGE_NAME}\")\nelse()\n    set(CPACK_PACKAGE_NAME \"${PROJECT_NAME}-devel\")\n    set(CPACK_DEBIAN_LIBRARIES_PACKAGE_NAME \"${PROJECT_NAME}${PACKAGE_NAME_SUFFIX}-dev\")\nendif()\nset(CPACK_PACKAGE_VERSION ${PROJECT_VERSION})\nset(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"LibTomCrypt\")\nset(CPACK_PACKAGE_VENDOR \"libtom projects\")\nset(CPACK_PACKAGE_CONTACT \"libtom@googlegroups.com\")\nset(CPACK_RESOURCE_FILE_LICENSE \"${PROJECT_SOURCE_DIR}/LICENSE\")\nset(PACKAGE_NAME_TRAILER ${CPACK_PACKAGE_VERSION}-${PACKAGE_RELEASE_VERSION}_${MACHINE_ARCH})\nset(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${PACKAGE_NAME_TRAILER})\nset(CPACK_STRIP_FILES ON)\n\n# deb specific CPack config\nset(CPACK_DEBIAN_FILE_NAME DEB-DEFAULT)\nset(CPACK_DEBIAN_DEBUGINFO_PACKAGE ON)\nset(CPACK_DEBIAN_PACKAGE_RELEASE ${PACKAGE_RELEASE_VERSION})\nset(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)\nif(BUILD_SHARED_LIBS)\n    set(CPACK_DEBIAN_PACKAGE_SECTION \"libs\")\n    set(CPACK_DEBIAN_PACKAGE_DEPENDS ${DEBIAN_MPI_PROVIDER_DEPENDS})\nelse()\n    set(CPACK_DEBIAN_PACKAGE_SECTION \"libdevel\")\n    set(CPACK_DEBIAN_PACKAGE_DEPENDS ${LTC_DEBIAN_SHARED_PACKAGE_NAME})\n    set(CPACK_DEB_COMPONENT_INSTALL ON)\n    set(CPACK_ARCHIVE_COMPONENT_INSTALL ON)\n    set(CPACK_COMPONENTS_ALL Libraries)\nendif()\n\n# rpm specific CPack config\nset(CPACK_RPM_PACKAGE_RELEASE ${PACKAGE_RELEASE_VERSION})\nset(CPACK_RPM_PACKAGE_ARCHITECTURE ${MACHINE_ARCH})\nset(CPACK_RPM_PACKAGE_NAME \"${CPACK_PACKAGE_NAME}-${PROJECT_VERSION}\")\nset(CPACK_RPM_PACKAGE_LICENSE \"The Unlicense\")\n\n# FreeBSD specific CPack config\nset(CPACK_FREEBSD_PACKAGE_MAINTAINER \"gahr@FreeBSD.org\")\nset(CPACK_FREEBSD_PACKAGE_ORIGIN \"security/libtomcrypt\")\nset(CPACK_FREEBSD_PACKAGE_CATEGORIES \"security\")\n\ninclude(CPack)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.2275390625,
          "content": "                          The LibTom license\n\nThis is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to <http://unlicense.org/>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.033203125,
          "content": "# libtomcrypt\n\nPreviously the git repository contained `doc/crypt.pdf` for detailed documentation.\nThis was changed and the file is now only available from the tarball of the appropriate version\nor from the page https://github.com/libtom/libtomcrypt/releases .\n\n## Project Status\n\n### Travis CI\n\nmaster: [![Build Status](https://github.com/libtom/libtomcrypt/actions/workflows/main.yml/badge.svg?branch=master)](https://github.com/libtom/libtomcrypt/actions/workflows/main.yml?query=branch%3Amaster+++) [![Coverage Status](https://coveralls.io/repos/libtom/libtomcrypt/badge.png?branch=master)](https://coveralls.io/r/libtom/libtomcrypt)\n\ndevelop: [![Build Status](https://github.com/libtom/libtomcrypt/actions/workflows/main.yml/badge.svg?branch=develop)](https://github.com/libtom/libtomcrypt/actions/workflows/main.yml?query=branch%3Adevelop+++) [![Coverage Status](https://coveralls.io/repos/libtom/libtomcrypt/badge.png?branch=develop)](https://coveralls.io/r/libtom/libtomcrypt)\n\n### AppVeyor\n\nmaster: [![Build status](https://ci.appveyor.com/api/projects/status/xyl2nbdsyp1tj9ye/branch/master?svg=true)](https://ci.appveyor.com/project/libtom/libtomcrypt/branch/master)\n\ndevelop: [![Build status](https://ci.appveyor.com/api/projects/status/xyl2nbdsyp1tj9ye/branch/develop?svg=true)](https://ci.appveyor.com/project/libtom/libtomcrypt/branch/develop)\n\n### Coverity\n\n[![Coverity Scan Build Status](https://scan.coverity.com/projects/487/badge.svg)](https://scan.coverity.com/projects/487)\n\n### ABI Laboratory\n\nAPI/ABI changes: [check here](https://abi-laboratory.pro/tracker/timeline/libtomcrypt/)\n\n## Submitting patches\n\nPlease branch off from develop if you want to submit a patch.\n\nPatch integration will be faster if tests and documentation are included.\n\nPlease update the makefiles in a separate commit. To update them simply run the `updatemakes.sh` script.\n\nIf you have something bigger to submit, feel free to contact us beforehand.\nThen we can give you write access to this repo, so you can open your PR based on this repo\nand we can easier follow the rebase-before-merge approach we're using (or even do the rebase ourself).\n\n### Reviews\n\nWe're using Pull Request reviews to make sure that the code is in line with the existing code base.\n\nPlease have a look [here](https://help.github.com/articles/approving-a-pull-request-with-required-reviews/) to get an idea of the approach.\n\n## Branches\n\nPlease be aware, that all branches besides _master_ and _develop_ __can__ and __will be__ force-pushed, rebased and/or removed!\n\nIf you want to rely on such an _unstable_ branch, create your own fork of this repository to make sure nothing breaks for you.\n\n## Configuration options\n\nBy default the library builds its entire feature set (besides `katja`) in a (depending on your needs more or less) optimal way.\n\nThere are numerous configuration options available if you want to trim down the functionality of the library.\n\nPlease have a look at `src/headers/tomcrypt_custom.h` for all available configuration options.\n\nThe following list is a small part of the available, but the most often required, configuration switches.\n\n| Flag | Behavior |\n| ---- | -------- |\n| `LTC_NO_TEST` | Remove all algorithm self-tests from the library |\n| `LTC_NO_FILE` | Remove all API functions requiring a pre-defined `FILE` data-type (mostly useful for embedded targets) |\n| `GMP_DESC` | enable [gmp](https://gmplib.org/) as MPI provider *\\*1* |\n| `LTM_DESC` | enable [libtommath](http://www.libtom.net/) as MPI provider *\\*1* |\n| `TFM_DESC` | enable [tomsfastmath](http://www.libtom.net/) as MPI provider *\\*1* *\\*2* |\n| `USE_GMP` | use `gmp` as MPI provider when building the binaries *\\*3* |\n| `USE_LTM` | use `libtommath` as MPI provider when building the binaries *\\*3* |\n| `USE_TFM` | use `tomsfastmath` as MPI provider when building the binaries *\\*3* |\n\n*\\*1* It is possible to build the library against all MPI providers in parallel and choose at startup-time which math library should be used.\n\n*\\*2* Please be aware that `tomsfastmath` has the limitation of a fixed max size of MPI's.\n\n*\\*3* Only one is supported at the time & this is only required when building the binaries, not when building the library itself.\n\n## Building the library\n\nThere are several `makefile`s provided. Please choose the one that fits best for you.\n\n| makefile | use-case |\n| -------- | -------- |\n| `makefile` | builds a static library (GNU Make required) |\n| `makefile.shared` | builds a shared (and static) library (GNU Make required) |\n| `makefile.unix` | for unusual UNIX platforms, or if you do not have GNU Make |\n| `makefile.mingw` | for usage with the mingw compiler on MS Windows |\n| `makefile.msvc` | for usage with the MSVC compiler on MS Windows |\n| `libtomcrypt_VS2008.sln` | A VisualStudio 2008 project for MS Windows |\n\n### Make targets\n\nThe `makefile`s provide several targets to build (VS project excluded).\nThe following list does not claim to be complete resp. to be available across all `makefile` variants.\n\n| target | application |\n| ------ | ----------- |\n| *empty target*/none given | c.f. `library`\n| `library` | builds only the library |\n| `hashsum` | builds the `hashsum` binary, similar to [`shasum`](https://linux.die.net/man/1/shasum), but with support for all hash-algorithms included in the library *\\*4* |\n| `crypt` | builds the `crypt` binary, implementing something similar to [`crypt`](https://linux.die.net/man/3/crypt) *\\*4* |\n| `sizes` | builds the `sizes` binary, printing all internal data sizes on invocation *\\*4* |\n| `constants` | builds the `constants` binary, printing all internal constants on invocation *\\*4* |\n| `openssl-enc` | builds the `openssl-enc` binary, which is more or less compatible to [`openssl enc`](https://linux.die.net/man/1/enc) *\\*4* *\\*5* |\n| `test` | builds the `test` binary, which runs all algorithm self-tests + some extended tests *\\*4* |\n| `timing` | builds the `timing` binary, which can be used to measure timings for algorithms and modes *\\*4* |\n| `bins` | builds `hashsum` *\\*4* |\n| `all_test` | builds `test`, `hashsum`, `crypt`, `small`, `tv_gen`, `sizes` & `constants` *\\*4* |\n| `docs` | builds the developer documentation `doc/crypt.pdf` |\n| `install` | installs the `library` and header files *\\*7* *\\*8* |\n| `install_bins` | installs the binaries created by the `bins` target *\\*7* *\\*8* |\n| `install_docs` | installs the documentation created by the `docs` target *\\*7* *\\*8* |\n| `install_test` | installs the test-app created by the `test` target *\\*7* *\\*8* |\n| `install_all` | installs everything (i.e. `library`, `bins`, `docs` and `test`) *\\*8* |\n| `uninstall` | uninstalls the `library` and header files |\n\n*\\*4* also builds `library`\n\n*\\*5* broken build in some configurations, therefore not built by default\n\n*\\*7* also builds the necessary artifact(s) before installing it\n\n*\\*8* also have a look at the 'Installation' section of this file\n\n### Examples\n\nYou want to build the library as static library\n\n    make\n\nYou want to build the library as shared library\n\n    make -f makefile.shared\n\nYou have `libtommath` installed on your system and want to build a static library and the `test` binary to run the self-tests.\n\n    make CFLAGS=\"-DUSE_LTM -DLTM_DESC\" EXTRALIBS=\"-ltommath\" test\n\nYou have `tomsfastmath` installed on your system and want to build a shared library and all binaries\n\n    make -f makefile.shared CFLAGS=\"-DUSE_TFM -DTFM_DESC\" EXTRALIBS=\"-ltfm\" all demos\n\nYou have `gmp`, `libtommath` and `tomsfastmath` installed on your system and want to build a static library and the `timing` binary to measure timings against `gmp`.\n\n    make CFLAGS=\"-DUSE_GMP -DGMP_DESC -DLTM_DESC -DTFM_DESC\" EXTRALIBS=\"-lgmp\" timing\n\nIf you have `libtommath` in a non-standard location:\n\n    make CFLAGS=\"-DUSE_LTM -DLTM_DESC -I/opt/devel/ltm\" EXTRALIBS=\"/opt/devel/ltm/libtommath.a\" all\n\nYou want to enable AES-NI support:\n\n    make CFLAGS=-DLTC_AES_NI\n\n## Installation\n\nThere exist several _install_ make-targets which are described in the table above.\n\nThese targets support the standard ways (c.f. [[GNU]], [[FreeBSD]])\nto modify the installation path via the following set of variables:\n\n    DESTDIR\n    PREFIX\n    LIBPATH\n    INCPATH\n    DATAPATH\n    BINPATH\n\nThe entire set of the variables is only supported in `makefile`, `makefile.shared` and `makefile.unix`.\n\nIn case you have to use one of the other makefiles, check in the file which variables are supported.\n\n### Examples\n\nYou want to install the static library to the default paths\n\n    make install\n\nYou want to install the shared library to a special path and use it from this path\n\n    make -f makefile.shared PREFIX=/opt/special/path\n\nHave a look at the developer documentation, [[GNU]] or [[FreeBSD]] to get a detailed explanation of all the variables.\n\n## CMake support\n\nThe project provides support for the CMake build system.\n\n```\ngit clone https://github.com/libtom/libtomcrypt.git\nmkdir -p libtomcrypt/build\ncd libtomcrypt/build\ncmake ..\nmake -j$(nproc)\n```\n\nMore details around building with CMake can be found in the developer documentation.\n\n\n[GNU]: https://www.gnu.org/prep/standards/html_node/DESTDIR.html\n\n[FreeBSD]: https://www.freebsd.org/doc/en/books/porters-handbook/porting-prefix.html\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.2294921875,
          "content": "version: 1.18.2-develop+{build}\r\nbranches:\r\n  only:\r\n  - master\r\n  - develop\r\n  - /^release/\r\n  - /^appveyor/\r\n  - /^build-ci/\r\nimage:\r\n- Visual Studio 2022\r\n- Visual Studio 2019\r\n- Visual Studio 2017\r\n- Visual Studio 2015\r\nbuild_script:\r\n- cmd: >-\r\n    if \"Visual Studio 2022\"==\"%APPVEYOR_BUILD_WORKER_IMAGE%\" call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat\"\r\n      if \"Visual Studio 2019\"==\"%APPVEYOR_BUILD_WORKER_IMAGE%\" call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat\"\r\n      if \"Visual Studio 2017\"==\"%APPVEYOR_BUILD_WORKER_IMAGE%\" call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat\"\r\n      if \"Visual Studio 2015\"==\"%APPVEYOR_BUILD_WORKER_IMAGE%\" call \"C:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Bin\\SetEnv.cmd\" /x64\r\n      if \"Visual Studio 2015\"==\"%APPVEYOR_BUILD_WORKER_IMAGE%\" call \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" x86_amd64\r\n      cd..\r\n      git clone https://github.com/libtom/libtommath.git --branch=master\r\n      cd libtommath\r\n      nmake -f makefile.msvc\r\n      cd..\r\n      cd libtomcrypt\r\n      nmake -f makefile.msvc all\r\ntest_script:\r\n- cmd: test.exe\r\n"
        },
        {
          "name": "changes",
          "type": "blob",
          "size": 112.93359375,
          "content": "July 1st, 2018\nv1.18.2\n      -- Fix Side Channel Based ECDSA Key Extraction (CVE-2018-12437) (PR #408)\n      -- Fix potential stack overflow when DER flexi-decoding (CVE-2018-0739) (PR #373)\n      -- Fix two-key 3DES (PR #390)\n      -- Fix accelerated CTR mode (PR #359)\n      -- Fix Fortuna PRNG (PR #363)\n      -- Fix compilation on platforms where cc doesn't point to gcc (PR #382)\n      -- Fix using the wrong environment variable LT instead of LIBTOOL (PR #392)\n      -- Fix build on platforms where the compiler provides __WCHAR_MAX__ but wchar.h is not available (PR #390)\n      -- Fix & re-factor crypt_list_all_sizes() and crypt_list_all_constants() (PR #414)\n      -- Minor fixes (PR's #350 #351 #375 #377 #378 #379)\n\nJanuary 22nd, 2018\nv1.18.1\n      -- Fix wrong SHA3 blocksizes, thanks to Claus Fischer for reporting this via Mail (PR #329)\n      -- Fix NULL-pointer dereference in `ccm_memory()` with LTC_CLEAN_STACK enabled (PR #327)\n      -- Fix `ccm_process()` being unable to process input buffers longer than 256 bytes (PR #326)\n      -- Fix the `register_all_{ciphers,hashes,prngs}()` return values (PR #316)\n      -- Fix some typos, warnings and duplicate prototypes in code & doc (PR's #310 #320 #321 #335)\n      -- Fix possible undefined behavior with LTC_PTHREAD (PR #337)\n      -- Fix some DER bugs (PR #339)\n      -- Fix CTR-mode when accelerator is used (OP-TEE/optee_os #2086)\n      -- Fix installation procedure (Issue #340)\n\nOctober 10th, 2017\nv1.18.0\n      -- Bugfix multi2\n      -- Bugfix Noekeon\n      -- Bugfix XTEA\n      -- Bugfix rng_get_bytes() on windows where we could read from c:\\dev\\random\n      -- Fixed the Bleichbacher Signature attack in PKCS#1 v1.5 EMSA, thanks to Alex Dent\n      -- Fixed a potential cache-based timing attack in CCM, thanks to Sebastian Verschoor\n      -- Fix GCM counter reuse and potential timing attacks in EAX, OCB and OCBv3,\n         thanks to Raphaël Jamet\n      -- Implement hardened RSA operations when CRT is used\n      -- Enabled timing resistant calculations of ECC and RSA operations per default\n      -- Applied some patches from the OLPC project regarding PKCS#1 and preventing\n         the hash algorithms from overflowing\n      -- Larry Bugbee contributed the necessary stuff to more easily call libtomcrypt\n         from a dynamic language like Python, as shown in his pyTomCrypt\n      -- Nikos Mavrogiannopoulos contributed RSA blinding and export of RSA and DSA keys\n         in OpenSSL/GnuTLS compatible format\n      -- Patrick Pelletier contributed a smart volley of patches\n      -- Christopher Brown contributed some patches and additions to ASN.1/DER\n      -- Pascal Brand of STMicroelectronics contributed patches regarding CCM, the\n         XTS mode and RSA private key operations with keys without CRT parameters\n      -- RC2 now also works with smaller key-sizes\n      -- Improved/extended several tests & demos\n      -- Hardened DSA and RSA by testing (through Karel's perl-CryptX)\n         against Google's \"Wycheproof\" and Kudelski Security's \"CDF\"\n      -- Fixed all compiler warnings\n      -- Fixed several build issues on FreeBSD, NetBSD, Linux x32 ABI, HP-UX/IA64,\n         Mac OS X, Windows (32&64bit, Cygwin, MingW & MSVC) ...\n      -- Re-worked all makefiles\n      -- Re-worked most PRNG's\n      -- The code is now verified by a linter, thanks to Francois Perrad\n      -- Documentation (crypt.pdf) is now built deterministically, thanks to Michael Stapelberg\n      -- Add Adler32 and CRC32 checksum algorithms\n      -- Add Base64-URL de-/encoding and some strict variants\n      -- Add Blake2b & Blake2s (hash & mac), thanks to Kelvin Sherlock\n      -- Add Camellia block cipher\n      -- Add ChaCha (stream cipher), Poly1305 (mac), ChaCha20Poly1305 (encauth)\n      -- Add constant-time mem-compare mem_neq()\n      -- Add DER GeneralizedTime de-/encoding\n      -- Add DSA and ECC key generation FIPS-186-4 compliance\n      -- Add HKDF, thanks to RyanC (especially for also providing documentation :-) )\n      -- Add OCBv3\n      -- Add PKCS#1 v1.5 mode of SSL3.0\n      -- Add PKCS#1 testvectors from RSA\n      -- Add PKCS#8 & X.509 import for RSA keys\n      -- Add stream cipher API\n      -- Add SHA3 & SHAKE\n      -- Add SHA512/256 and SHA512/224\n      -- Add Triple-DES 2-key mode, thanks to Paul Howarth\n      -- Brought back Diffie-Hellman\n\nMay 12th, 2007\nv1.17 -- Cryptography Research Inc. contributed another small volley of patches, one to fix __WCHAR_DEFINED__ for BSD platforms, \n         another to silence MSVC warnings.\n      -- Added LTC_XCBC_PURE to XCBC mode which lets you use it in three-key mode. \n      -- [CRI] Added libtomcrypt.dsp for Visual C++ users.\n      -- [CRI] Added more functions for manipulating the ECC fixed point cache (including saving and loading)\n      -- [CRI] Modified ecc_make_key() to always produce keys smaller than base point order, for standards-compliance\n      -- Elliptic Semiconductor contributed XTS chaining mode to the cipher suite (subsequently optimized it)\n      -- Fixed xcbc_init() keylen when using single key mode.\n      -- Bruce Fortune pointed out a typo in the hmac_process() description in the manual.  Fixed.\n      -- Added variable width counter support to CTR mode\n      -- Fixed CMAC (aka OMAC) when using 64-bit block ciphers and LTC_FAST ... my bad.\n      -- Fixed bug in ecc_is_valid() that would basically always return true\n      -- renamed a lot of macros to add the LTC_ prefix [e.g. RIJNDAEL => LTC_RIJNDAEL]\n\nDecember 16th, 2006\nv1.16 -- Brian Gladman pointed out that a recent change to GCM broke how the IV was handled.  Currently the code complies against his test vectors\n         so the code should be considered frozen now.\n      -- Trevor from Cryptography Research Inc. submitted patches to convert the ECC code to be generic allowing curve parameters to be submitted\n         at runtime.  \n      -- Fixed various doxygen comments\n      -- Added UTF8 support to the ASN1 code\n      -- Fixed STOREXXH macros for x86 platforms (Fix found at Elliptic Inc.)\n      -- Added makefile.unix which is BSD compatible, you have to manually tweak it since well I don't use it normally\n      -- removed a few lingering memcpy's\n      -- Fixed memory free errors in ecc_sign_hash() that can arise if the mp_init_multi() fails\n      -- Fixed incorrect return value in pkcs_1_pss_decode() which would correctly set res to 0 (indicating an incorrect signature) but \n         would return CRYPT_OK to the caller\n      -- ltc_ecc_mulmod() could leak memory if mp_init(&mu) failed, fixed.  Would you believe that ltc_ecc_mulmod_timing() had the same\n         bug?  Also fixed.  :-)\n      -- Added Shamir's trick to the ECC side (defined as LTC_ECC_SHAMIR, enabled by default), gets ~1.34x to ~1.40x faster ECC verifications\n      -- Added Brian's vector #46 to the GCM code.  It catches the ctr counter error from v1.15.  Originally I was going to add all of his vectors,\n         but they're not as easy to parse and I got a lot of other things to do.  Regression!\n      -- Various other small fixes to the ECC code to clean up error handling (I think most of that was from the move in 1.06 to the plugins)\n         All of the errors were in cleaning up from heap failures.  So they were not likely to be triggered in normal usage\n         Made similar fixes to the RSA and DSA code (my bad)\n      -- Cryptography Research Inc. contributed a bunch of fixes to silence warnings (with MSVC) w.r.t. assigned data to unsigned char types.\n      -- Martin Marko suggested some fixes to make the RNG build with WinCE.\n      -- Updates to the manual for print (some fixes thanks to Martin Marko)\n      \n\nNovember 17th, 2006\nv1.15 -- Andreas Lange found that if sha256_init DID fail in fortuna it wouldn't clean up the state correctly.  Thanks.\n         Fortunately sha256_init cannot fail (as of v1.14) :-)\n      -- Andreas Lange contributed RMD-256 and RMD-320 code.\n      -- Removed mutex locks from fortuna_import as they create a deadlock and aren't required anyways [Avi Zelmanovich]\n      -- Added LTC_NO_PROTOTYPES to avoid prototyping functions like memset/memcpy.  Required for fans of GCC 3.3.x\n      -- David Eder caught a off by one overrun bug in pmac_done() which can be exploited if your output tag buffer is \n         smaller than the block size of the cipher, e.g. if you have a 4-byte buffer and you tell pmac_done that you want\n         a 4-byte TAG it will store 4 bytes but return an outlen of 5.\n      -- Added signatures to the ECC and RSA benchmarks\n      -- Added LTC_PROFILE to run the PK tests only once in the timing demo (so you can capture events properly)\n      -- Andreas contributed PKCS #1 v1.5 code that merged cleanly with the existing PKCS code.  w00t.\n         (update: I had to fix it to include the digestInfo and what not.  Bad Andreas, bad! hehehe)\n      -- Fixed a signed variable error in gcm_process() (hard to trigger bug fortunately)\n      -- Removed all memcmp/memset/memcpy from the source (replaced with X macros)\n      -- Renamed macros HMAC/OMAC/PMAC to have a LTC_ prefix.  If you pass these on the command line please update your makefiles\n      -- Added XCBC-MAC support [RFC 3566]\n      -- fixed LOAD32H and LOAD64H to stop putting out that darn warning :-)\n      -- Added the Korean SEED block cipher [RFC 4269]\n      -- Added LTC_VALGRIND define which makes SOBER-128 and RC4 a pure PRNG (and not a stream cipher).  Useful if you use \n         Valgrind to debug your code (reported by Andreas Lange)\n      -- Made SOBER-128 more portable by removing the ASCII key in the test function (my bad, sorry).\n      -- Martin Mocko pointed out that if you have no PRNGs defined the lib won't build.  Fixed, also fixed for if you have no\n         hashes defined.\n      -- Sped up F8 mode with LTC_FAST\n      -- Made CTR mode RFC 3686 compliant (increment counter first), to enable, OR the value LTC_CTR_RFC3686 to the \"mode\"\n         parameter you pass to ctr_start(), otherwise it will be LTC compliant (e.g. encrypt then increment)\n      -- Added ctr_test() to test CTR mode against RFC 3686\n      -- Added crypt_fsa() ... O_o\n      -- Fixed LTC_ECC_TIMING_RESISTANT so it once again builds properly (pt add/dbl are through the plugin now)\n      -- Added ANSI X9.63 (sec 4.3.6) import/export of public keys (cannot export to compressed formats but will import \n         hybrid compressed)\n      -- Added SECP curves for 112, 128, and 160 bits (only the 'r1' curves)\n      -- Added 3GPP-F9 MAC (thanks to Greg Rose for the test vectors)\n      -- Added the KASUMI block cipher\n      -- Added F9/XCBC/OMAC callbacks to the cipher plugin\n      -- Added RSA PKCS #1 v1.5 signature/encrypt tests to rsa_test.c\n      -- Fix to yarrow_test() to not call yarrow_done() which is invalid in that context (thanks Valgrind)\n      -- Christophe Devine pointed out that Anubis would fail on various 64-bit UNIX boxes when \"x>>24\" was used as an index, we needed \n         to mask it with 0xFF.  Thanks.  Fixed.\n\nAugust 0x1E, 0x07D6\nv1.14 -- Renamed the chaining mode macros from XXX to LTC_XXX_MODE.  Should help avoid polluting the macro name space.\n      -- clean up of SHA-256\n      -- Chris Colman pointed out that der_decode_sequence_* allows LTC_ASN1_SETOF to accept SEQUENCEs and vice versa.\n         Decoder [non-flexi decoder that is] is more strict now and requires a match.\n      -- Steffen Jaeckel pointed out a typo in the user manual (re: rsa_exptmod).  Fixed.  This disproves the notion that\n         nobody reads it.  :-)\n      -- Made GCM a bit more portable w.r.t. handling the CTR IV (e.g. & with 255)\n      -- Add LTC_VERBOSE if you really want to see what test is doing :-)\n      -- Added SSE2 support to GCM [use GCM_TABLES_SSE2 to enable], shaves 2 cycles per byte on Opteron processors\n         Shaved 4 cycles on a Prescott (Intel P4)\n         Requires you align your gcm_state on a 16 byte boundary, see gcm_memory() for more info\n      -- Added missing prototype for f8_test_mode()\n      -- two fixes to CCM for corner cases [L+noncelen > 15] and fixing the CTR pad to encrypt the CBC-MAC tag\n      -- Franz Glasner pointed out the ARGTYPE=4 is not actually valid.  Fixed.\n      -- Fixed bug in f8_start() if your key < saltkey unspecified behaviour occurs.  :-(\n      -- Documented F8 mode.  Yeah, because you read the manual.  \n      -- Minor updates to the technotes.\n\n\nJune 17th, 2006\nv1.13 -- Fixed to fortuna_start() to clean up state if an error occurs.  Not really useful at this stage (sha256 can't fail) but useful\n         if I ever make fortuna pluggable\n      -- Mike Marin submitted a whole bunch of patches for fixing up the libs on traditional UNIX platforms.  Go AIX!  Thanks!\n      -- One of bugs found in the multi demo highlights that at least with gcc you need to pass integers with a UL prefix to ensure\n         they're unsigned long\n      -- Updated the FP ECC code to use affine points.  It's teh fast.\n      -- Made it so many functions which return CRYPT_BUFFER_OVERFLOW now also indicate the required buffer size, note that not all functions\n         do this (most do though).\n      -- Added F8 chaining mode.  It's super neato.\n\nMay 29th, 2006\nv1.12 -- Fixed OID encoder/decoder/length to properly handle the first two parts of an OID, matches 2002 X.690 now.\n      -- [Wesley Shields] Allows both GMP/LTM and TFM to be defined now.  \n      -- [Wesley Shields] GMP pluggin is cleaner now and doesn't use deprecated symbols. Yipee\n      -- Added count_lsb_bits to get the number of leading LSB zero bits there are.\n      -- Fixed a bug in the INTEGER encoders for values of -(256**k)/2\n      -- Added BOOLEAN type to ASN.1 thingy-ma-do-hicky\n      -- Testprof doesn't strictly require GMP ... oops [Nils Durner]\n      -- Added LTC_CALL and LTC_EXPORT macros in tomcrypt_cfg.h to support various calling and linker conventions\n         (Thanks to John Kirk from Demonware)\n      -- In what has to be the best thing since sliced bread I bring you MECC_FP which is the fixed point\n         ECC point multiplier.  It's fast, it's sexy and what's more it's hella fast [did I mention it's fast?]\n         You can tune it somewhat with FP_LUT (default to 8) for look-up width.\n         Read section 8.2 of the manual for more info.\n         It is disabled by default, you'll have to build LTC with it defined to get it.  \n      -- Fixed bug in ecc_test.c (from testprof) to include the 521 [not 512] bit curve.  :-)\n\nApril 4th, 2006\nv1.11 -- Removed printf's from lrw_test ... whoops\n      -- lrw_process now checks the return of the cipher ecb encrypt/decrypt calls\n      -- lrw_start was not using num_rounds ...\n      -- Adam Miller reported a bug in the flexi decoder with elements past the end of a sequence.  Fixed.\n      -- Bruce Guenter suggested I use --tag=CC for libtool builds where the compiler may think it's C++.  (I applied this to LTM and TFM)\n      -- Optimized the ECC for TFM a bit by removing the useless \"if\" statements (most TFM functions don't return error codes)\n         Actually shaved a good chunk of time off and made the code smaller.  By default with TFM the stock LTC point add/dbl functions \n         will be totally omitted (ECC-256 make key times on a Prescott for old vs. new are 11.03M vs. 9.59M cycles)\n      -- added missing CVS tags to ltc_ecc_mulmod.c\n      -- corrected typo in tomcrypt_cfg.h about what the file has been called \n      -- corrected my address in the user manual.  A \"bit\" out of date.\n      -- added lrw_gen to tv_gen\n      -- added GMP plugin, only tested on a AMD64 and x86_32 Gentoo Linux box so be aware\n      -- made testme.sh runs diff case insensitivityly [whatever...] cuz GMP outputs lowercase satan text\n      -- added LDFLAGS to the makefile to allow cross porting linking options\n      -- added lrw_test() to the header file ... whoops\n      -- changed libtomcrypt.org to libtomcrypt.com .... mumble mumble\n      -- Updates to detect __STRICT_ANSI__ which is defined in --std=c99 modes (note -ansi is not supported as it lacks long long) so you can\n         build LTC out of the box with c99 (note: it'll be slower as there is no asm in this case)\n      -- Updated pelican.c and aes_tab.c to undef tables not-required.  The tables are static so both AES and Pelican MAC would have copies.  Save a few KB in the final binary.\n      -- Added LTC_NO_FAST to the makefile.icc to compensate for the fact ICC v9 can't handle it (Pelican MAC fails for instance)\n\nFebruary 11th, 2006\nv1.10 -- Free ecb/cbc/ctr/lrw structures in timing code by calling the \"done\" function\n      -- fixed bug in lrw_process() which would always use the slow update ...\n      -- vastly sped up gcm_gf_mult() when LTC_FAST is defined.  This speeds up LRW and GCM state creation, useful for servers with GCM\n      -- Removed NLS since there are some attacks against it.  \n      -- fixed memory leak in rsa_import reported by John Kuhns\n      ++ re-released as the rsa fix was incorrect (bad John bad ... hehehe) and I missed some NULLs in the static descriptor entry for ciphers \n\nJanuary 26th, 2006\nv1.09 -- Added missing doxygen comments to some of the ASN.1 routines\n      -- Added \"easy button\" define LTC_EASY and LTC will build with a subset of all the algos.  Reduces build times for typical\n         configurations.  Tunable [see tomcrypt_custom.h]\n      -- Added some error detection to reg_algs() of the testprof.a library to detect when the PRNG is not setup correctly (took me 10 mins to figure out, PITA!)\n      -- Similar fixes to timing demo (MD5 not defined when EASY is defined)\n      -- Added the NLS enc+mac stream cipher from QUALCOMM, disabled for this release, waiting on test vectors\n      -- Finally added an auto-update script for the makefiles.  So when I add new files/dirs it can automatically fix up the makefiles [all four of them...]\n      -- Added LRW to the list of cipher modes supported\n      -- cleaned up ciphers definitions to remove cbc/cfb/ofb/ctr/etc from the namespace when not used.\n\nNovember 24th, 2005\nv1.08 -- Added SET and SET OF support to the ASN.1 side\n      -- Fixed up X macros, added QSORT to the mix [thanks SET/SETOF]\n      -- Added XMEMCMP to the list of X macros\n      -- In der_decode_sequence() the SHORT_INTEGER type was not being handled correctly [oddly enough it worked just enough to make RSA work ... go figure!]\n      -- Fixed bug in math descriptors where if you hadn't defined MECC (ECC support) you would get linker errors\n      -- Added RSA accelerators to the math descriptors to make it possible to not include the stock routines if you supply your own.\n      -- dsa_decrypt_key() was erroneously dependent on MECC not MDSA ... whoops\n      -- Moved DSA size limits to tomcrypt_pk.h so they're defined with LTC_NO_PK+MDSA\n      -- cleaned up tomcrypt_custom.h to make customizable PK easier (and also cleaned up the error traps so they're correctly reported)\n\nNovember 18th, 2005\nv1.07 -- Craig Schlenter pointed out the \"encrypt\" demo doesn't call ctr_start() correctly.  That's because as of a few releases ago\n         I added support to set the mode of the counter at init time\n      -- Fixed some \"testprof\" make issues\n      -- Added RSA keygen to the math descriptors\n      -- Fixed install_test target ... oops\n      -- made the \"ranlib\" program renamable useful for cross-compiling\n      -- Made the cipher accelerators return error codes.  :-)\n      -- Made CCM accept a pre-scheduled key to speed it up if you use the same key for multiple packets\n      -- Added \"Katja\" public key crypto.  It's based on the recent N = p^2q work by Katja.  I added OAEP padding\n         to it.  Note this code has been disabled not because it doesn't work but because it hasn't been thoroughly\n         analyzed.   It does carry some advantages over RSA (slightly smaller public key, faster decrypt) but also\n         some annoying \"setup\" issues like the primes are smaller which makes ECM factoring more plausible.\n      -- Made makefile accept a NODOCS flag to disable the requirement of tetex to install LTC for you no tetex people... all 3 of ya  :-)\n      -- Cleaned up rsa_export() since \"zero\" was handled with a SHORT_INTEGER\n      -- Cleaned up the LIBTEST_S definitions in both GNU makefiles.  A few minor touchups as well.\n      -- Made the cipher ecb encrypt/decrypt return an int as well, changed ALL dependent code to check for this.  \n      -- der_decode_choice() would fail to mark a NULL as \"used\" when decoding.  Fixed\n      -- ecc_decrypt_key() now uses find_hash_oid() to clean up the code ;-)\n      -- Added mp_neg() to the math descriptors.\n      -- Swapped arguments for the pkcs_1_mgf1() function so the hash_idx is the first param (to be more consistent)\n      -- Made the math descriptors buildable when RSA has been undefined\n      -- ECC timing demo now capable of detecting which curves have been defined\n      -- Refactored the ECC code so it's easier to maintain.  (note: the form of this code hasn't really changed since I first added ECC ... :-/)\n      -- Updated the documentation w.r.t. ECC and the accelerators to keep it current\n      -- Fixed bug in ltc_init_multi() which would fail to free all allocated memory on error.\n      -- Fixed bug in ecc_decrypt_key() which could possibly lead to overflows (if MAXBLOCKSIZE > ECC_BUF_SIZE and you have a hash that emits MAXBLOCKSIZE bytes)\n      -- Added encrypt/decrypt to the DSA side (basically DH with DSA parameters)\n      -- Updated makefiles to remove references to the old DH object files and the ecc_sys.o crap ... clean code ahead!\n      -- ecc_import() now checks if the point it reads in lies on the curve (to prevent degenerative points from being used)\n      -- ECC code now ALWAYS uses the accelerator interface.  This allows people who use the accelerators to not have the stock\n         ECC point add/dbl/mul code linked in.  Yeah space savings! Rah Rah Rah.\n      -- Added LTC_MUTEX_* support to Yarrow and Fortuna allowing you to use respective prng_state as a global PRNG state [e.g. thread-safe] if you define one of the LTC_* defines at\n         build time (e.g. LTC_PTHREAD == pthreads)\n      -- Added PPC32 support to the rotate macros (tested on an IBM PPC 405) and LTC_FAST macros (it aint fast but it's faster than stock)\n      -- Added ltc_mp checks in all *_make_key() and *_import() which will help catch newbs who don't register their bignum first :-)\n      -- the UTCTIME type was missing from der_length_sequence() [oops, oh like you've never done that]\n      -- the main makefile allows you to rename the make command [e.g. MAKE=gmake gmake install] so you can build LTC on platforms where the default make command sucks [e.g. BSD]\n      -- Added DER flexi decoder which allows the decoding of arbitrary DER encoded packets without knowing\n         their structure in advance (thanks to MSVC for finding 3 bugs in it just prior to release! ... don't ask)\n\nAugust 1st, 2005\nv1.06 -- Fixed rand_prime() to accept negative inputs as a signal for BBS primes. [Fredrik Olsson]\n      -- Added fourth ARGCHK type which outputs to stderr and continues.  Useful if you trap sigsegv.   [Valient Gough]\n      -- Removed the DH code from the tree\n      -- Made the ECC code fully public (you can access ecc_mulmod directly now) useful for debuging\n      -- Added ecc test to tv_gen\n      -- Added hmac callback to hash descriptors.\n      -- Fixed two doxy comment errors in the UTCTIME functions\n      -- rsa_import() can now read OpenSSL format DER public keys as well as the PKCS #1 RSAPublicKey format.\n         Note that rsa_export()  **ONLY** writes PKCS #1 formats\n      -- Changed MIN/MAX to only define if not already present.  -- Kirk J from Demonware ... \n      -- Ported tv_gen to new framework (and yes, I made ecc vectors BEFORE changing the API and YES they match now :-))\n      -- ported testing scripts to support pluggable math.  yipee!\n      -- Wrote a TFM descriptor ... yipee\n      -- Cleaned up LTC_FAST in CBC mode a bit \n      -- Merged in patches from Michael Brown for the sparc/sparc64 targets\n      -- Added find_hash_oid() to search for a hash by its OID\n      -- Cleaned up a few stray CLEAN_STACKs that should have been LTC_CLEAN_STACK\n      -- Added timing resistant ECC, enable by defining LTC_ECC_TIMING_RESISTANT then use ECC API as normal \n      -- Updated the ECC documentation as it was a bit out of date\n\nJune 27th, 2005\nv1.05\n      -- Added Technote #6 which covers the current PK compliance.  \n      -- Fixed buffer overflow in OAEP decoder\n      -- Added CHOICE to the list of ASN.1 types\n      -- Added UTCTIME to the list of ASN.1 types\n      -- Added MUTEX locks around descriptor table functions [but not on the functions that are dependent on them]\n         All functions call *_is_valid() before using a descriptor index which means the respective table must be unlocked before \n         it can be accessed.  However, during the operation [e.g. CCM] if the descriptor has been altered the results will be \n         undefined.  \n      -- Minor updates to the manual to reflect recent changes\n      -- Added a catch to for an error that should never come up in rsa_exptmod().  Just being thorough.\n\nJune 15th, 2005\nv1.04\n      -- Fixed off by one [bit] error in dsa_make_key() it was too high by one bit [not a security problem just inconsistent]\n      -- ECC-224 curve was wrong [it was an ok curve just not NIST, so no security flaw just interoperability].\n      -- Removed point compression since it slows down ECC ops to save a measly couple bytes.\n         This makes the ecc export format incompatible with 1.03 [it shouldn't change in the future]\n      -- Removed ECC-160 from timing and added the other curves\n\nJune 9th, 2005\nv1.03\n      -- Users may want to note that on a P4/GCC3.4 platform \"-fno-regmove\" greatly accelerates the ciphers/hashes.\n      --------------------------------------------------------------------------------------------------------------\n      -- Made it install the testing library in the icc/static makefiles\n      -- Found bug in ccm_memory.c which would fail to compile when LTC_CLEAN_STACK was enabled\n      -- Simon Johnson proposed I do a fully automated test suite.  Hence \"testme.sh\" was born\n      -- Added LTC_NO_TEST which forces test vectors off (regardless of what tomcrypt_custom.h has)\n      -- Added LTC_NO_TABLES which disables large tables (where possible, regardless of what tomcrypt_custom.h has)\n      -- New test script found a bug in twofish.c when TABLES was disabled.  Yeah testing!\n      -- Added a LTC_FAST specific test to the testing software.\n      -- Updated test driver to actually halt on errors and just print them out (useful for say... automated testing...)\n      -- Added bounds checking to Pelican MAC\n      -- Added BIT and OCTET STRING to the ASN.1 side of things.  \n      -- Pekka Riikonen pointed out that my ctr_start() function should accept the counter mode. \n      -- Cleaned up warnings in testprof\n      -- Removed redundant mu and point mapping in ecc_verify_hash() so it should be a bit faster now\n      -- Pekka pointed out that the AES key structure was using 32 bytes more than it ought to.\n      -- Added quick defines to remove entire classes of algorithms.  This makes it easier if you want to build with just \n         one algorithm (say AES or SHA-256).  Defines are LTC_NO_CIPHERS, LTC_NO_MODES, LTC_NO_HASHES, LTC_NO_MACS,\n         LTC_NO_PRNGS, LTC_NO_PK, LTC_NO_PKCS\n      -- As part of the move for ECC to X9.62 I've changed the signature algorithm to EC DSA.  No API changes.\n      -- Pekka helped me clean up the PKCS #1 v2.1 [OAEP/PSS] code\n      -- Wrote new DER SEQUENCE coder/decoder\n      -- RSA, DSA and ECDSA now use the DER SEQUENCE code (saves a lot of code!)\n      -- DSA output is now a DER SEQUENCE (so not compatible with previous releases).  \n      -- Added Technote #5 which shows how to build LTC on an AMD64 to have a variety of algorithms in only ~80KB of code.\n      -- Changed temp variable in LOAD/STORE macros to \"ulong32\" for 32-bit ops.  Makes it safer on Big endian platforms\n      -- Added INSTALL_GROUP and INSTALL_USER which you can specify on the build to override the default USER/GROUP the library \n         is to be installed as\n      -- Removed \"testprof\" from the default build.  \n      -- Added IA5, NULL and Object Identifier to the list of ASN.1 DER supported types\n      -- The \"no_oops\" target (part of zipup) now scans for non-cvs files.  This helps prevent temp/scratch files from appearing in releases ;-)\n      -- Added DERs for missing hashes, but just the OID not the PKCS #1 v1.5 additions. \n      -- Removed PKCS #1 v1.5 from the tree since it's taking up space and you ought to use v2.1 anyways\n      -- Kevin Kenny pointed out a few stray // comments\n      -- INTEGER code properly supports negatives and zero padding [Pekka!]\n      -- Sorted asn1/der/ directory ... less of a mess now ;-)\n      -- Added PRINTABLE STRING type\n      -- Removed ECC-160 as it wasn't a standard curve\n      -- Made ecc_shared_secret() ANSI X9.63 compliant\n      -- Changed \"printf\" to \"fprintf(stderr, \" in the testbench... ;-)\n      -- Optimized the GCM table creation.  On 1KB packets [with key switching] the new GCM is 12.7x faster than before.\n      -- Changed OID representation for hashes to be just a list of unsigned longs (so you can compare against them nicely after decoding a sequence)\n      -- ECC code now uses Montgomery reduction ... it's even faster [ECC-256 make key down from 37.4M to 4.6M cycles on an Athlon64]\n      -- Added SHORT_INTEGER so users can easily store DER encoded INTEGER types without using the bignum math library\n      -- Fixed OMAC code so that with LTC_FAST it doesn't require that LTC_FAST_TYPE divides 16 [it has to divide the block size instead]\n      -- ECC key export is now a simple [and documented] SEQUENCE, the \"encrypt_key\" also uses a new SEQUENCE format.\n      -- Thanks goes to the following testers\n            Michael Brown             - Solaris 10/uSPARCII\n            Richard Outerbridge       - MacOS\n            Martin Carpenter          - Solaris 8/uSPARCII [Thanks for cleaning up the scripts]\n            Greg Rose                 -  ... SunOS 5.8/SPARC [... what's with the SPARCS?]\n            Matt Johnston             - MacOS X  [Thanks for pointing out GCC 4 problems with -Os]\n\nApril 19th, 2005\nv1.02\n      -- Added LTC_TEST support to gcm_test()\n      -- \"pt/ct\" can now be NULL in gcm_process() if you are processing zero bytes\n      -- Optimized GCM by removing the \"double copy\" handling of the plaintext/aad\n      -- Richard Outerbridge pointed out that x86_prof won't build on MACOS and that the manual \n         erroneously refers to \"mycrypt\" all over the place.  Fixed.\n\nApril 17th, 2005\nv1.01\n       ** Secure Science Corporation has supported this release cycle by sponsoring the development time taken.  Their \n          continuing support of this project has helped me maintain a steady pace in order to keep LibTomCrypt up to date,\n          stable and more efficient.\n       -----------------------------------------------------------------------------------------------------\n       -- Updated base64_decode.c so if there are more than 3 '=' signs it would stop parsing\n       -- Merged in latest mpi that fixed a few bugs here and there\n       -- Updated OAEP encoder/decoder to catch when the hash output is too large\n          Cleaned up PSS code too\n       -- Andy Bontoft fixed a bug in my demos/tests/makefile.msvc ... seems \"dsa_test.c\" isn't an object\n          afterall.  Thanks.\n       -- Made invalid ECC key sizes (configuration) not hard fault the program (it returns an error code now)\n       -- SAFER has been re-enabled after I was pointed to http://www.ciphersbyritter.com/NEWS2/95032301.HTM\n          [Mark Kotiaho]\n       -- Added CCM mode to the encauth list (now has EAX, OCB and CCM, c'est un treo magnifique!)\n       -- Added missing ASN.1 header to the RSA keys ... oops... now the rsa_export/import are FULLY compatible\n          with other libs like OpenSSL (comment:  Test vectors would go a long way RSA...)\n       -- Manually merged in fix to the prime_random_ex() LTM function that ensures the 2nd MSB is set properly.  Now\n          When you say \"I want a 1024/8 byte RSA key\" the MSB bit of the modulus is set as expected.  Note I generally \n          don't view this as a \"huge issue\" but it's just one less nit to worry about. [Bryan Klisch]\n       -- A new CVS has been setup on my Athlon64 box... if you want developer access send me an email (and at this point the email would have to be awesome).\n       -- Updated API for ECB and CBC shell code.  Now can process N whole blocks in one call (like $DEITY intended)\n       -- Introduced a new \"hardware accel\" framework that can be used to speed up cipher ECB, CBC and CTR mode\n          calls.  Later on dependent code (e.g. OMAC, CCM) will be re-written to use the generic cbc/ctr functions.  But now\n          if you [say] call ctr_encrypt() with a cipher descriptor that has hardware CTR it will automatically\n          be used (e.g. no code rewrites)\n       -- Now ships with 20% more love.\n       -- x86_prof now uses ECB shell code (hint: accelerators) and outputs cycles per BLOCK not byte.  This will make it a bit \n          easier to compare hardware vs. software cipher implementations.  It also emits timings for CBC and CTR modes\n       -- [Peter LaDow] fixed a typo w.r.t. XREALLOC macro (spelling counts kids!)\n       -- Fixed bug with __x86_64__ where ROL64/ROR64 with LTC_NO_ROLC would be the 32-bit versions instead...\n       -- Shipping with preliminary GCM code (disabled).  It's buggy (stack overflow hidden somewhere).  If anyone can spot it let me know.\n       -- Added Pelican MAC [it's an AES based fast MAC] to the list of supported MACs\n       -- Added LTC_FAST [and you can disable by defining LTC_NO_FAST] so that CBC and CTR mode XOR whole words [e.g. 32 or 64 bits] at a time\n          instead of one byte.  On my AMD64 this reduced the overhead for AES-128-CBC from 4.56 cycles/byte to around 1 cycle/byte.  This requires\n          that you either allow unaligned read/writes [e.g. x86_32/x86_64] or align all your data.  It won't go out of it's way to ensure \n          aligned access.  Only enabled for x86_* platforms by default since they allow unaligned read/writes.\n       -- Added LTC_FAST support to PMAC (drops the cycle/byte by about 9 cycles on my AMD64) [note: I later rewrote this prior to release]\n       -- Updated \"profiled\" target to work with the new directory layout\n       -- Added [demo only] optimized RC5-CTR code to x86_prof demo to show off how to make an accelerator\n          [This has been removed prior to release... It may re-appear later]\n       -- Added CCM acelerator callbacks to the list [now supports ECB, CTR, CBC and now CCM].\n       -- Added chapter to manual about accelerators (you know you want it)\n       -- Added \"bswap\" optimizations to x86 LOAD/STORE with big endian.  Can be disabled by defining LTC_NO_BSWAP\n       -- LTC_NO_ASM is now the official \"disable all non-portable stuff\" macro.  When defined it will make the code endian-neutral,\n          disable any form of ASM and disable LTC_FAST load/stores.  Essentially build the library with this defined if you're having\n          trouble building the library (old GCCs for instance dislike the ROLc macro)\n       -- Added tomcrypt_mac.h and moved MAC/encMAC functions from tomcrypt_hash.h into it\n       -- Added \"done\" function to ciphers and the five chaining modes [and things like omac/pmac/etc]\n       -- Changed install group to \"wheel\" from \"root\".\n       -- Replaced // comments with /**/ so it will build on older UNIX-like platforms\n       -- x86_prof builds and runs with IntelCC fine now \n       -- Added \"stest\" build to intel CC to test static linked from within the dir (so you don't have to install to test)\n       -- Moved testing/benchmark into testprof directory and build it as part of the build.  Now you can link against libtomcrypt_prof.a to get \n          testing info (hint: hardware developers ;-) )\n       -- Added CCM to tv_gen \n       -- Added demos to MSVC makefile\n       -- Removed -funroll-all-loops from GCC makefile and replaced with -funroll-loops which is a bit more sane (P4 ain't got much cache for the IDATA)\n       -- Fixed GCM prior to release and re-enabled it.  It has not been optimized but it does conform when compiled with optimizations.\n       -- I've since optimized GCM and CCM.  They're close in speed but GCM is more flexible imho (though EAX is more flexible than both)\n       -- For kicks I optimized the ECC code to use projective points.  Gets between 3.21x (Prescott P4) to 4.53x (AMD64) times faster than before at 160-bit keys and the\n          speedup grows as the keysize grows.  Basically removing most practical reasons to \"not use the ECC code\".  Enjoy.\n       -- Added LTC_FAST support to OMAC/PMAC and doubled it's speed on my amd64 [faster on the P4 too I guess]\n       -- Added GCM to tv_gen\n       -- Removed \"makefile.cygwin_dll\" as it's not really used by anyone and not worth the effort (hell I hardly maintain the MSVC makefiles ...)\n       -- Updated a few files in the \"misc\" directory to have correct @file comments for doxygen\n       -- Removed \"profile\" target since it was slower anyways (go figure...)\n\nDecember 31st, 2004\nv1.00  \n       -- Added \"r,s == 0\" check to dsa_verify_hash()\n       -- Added \"multi block\" helpers for hash, hmac, pmac and omac routines so you can process multiple non-adjacent\n          blocks of data with one call (added demos/multi.c to make sure they work)\n          -- Note these are not documented but they do have doxygen comments inside them\n          -- Also I don't use them in other functions (like pkcs_5_2()) because I didn't have the time.  Job for the new LTC maintainer ;-)\n       -- Added tweaked Anubis test vectors and made it default (undefined ANUBIS_TWEAK to get original Anubis)\n       -- Merged in fix for mp_prime_random_ex() to deal with MSB and LSB \"bugs\"\n       -- Removed tim_exptmod() completely, updated several RSA functions (notably v15 and the decrypt/verify) so they \n          don't require a prng now\n       -- This release brought to you by the fine tunes of Macy Gray.  We miss you.\n\nDecember 23rd, 2004\nv1.00rc1\n       -- Renamed \"mycrypt_*\" to \"tomcrypt_*\" to be more specific and professional\n          Now just include \"tomcrypt.h\" instead of \"mycrypt.h\" to get LTC ;-)\n       -- Cleaned up makefiles to ensure all headers are correctly installed\n       -- Added \"rotate by constant\" macros for portable, x86-32 and x86-64\n          You can disable this new code with LTC_NO_ROLC which is useful for older GCCs\n       -- Cleaned up detection of x86-64 so it works for ROL/ROR macros\n       -- Fixed rsa_import() so that it would detect multi-prime RSA keys and error appropriately\n       -- Sorted the source files by category and updated the makefiles appropriately\n       -- Added LTC_DER define so you can trim out DER code if not required\n       -- Fixed up RSA's decrypt functions changing \"res\" to \"stat\" to be more in sync\n          with the signature variables nomenclature. (no code change just renamed the arguments)\n       -- Removed all labels starting with __ and replaced with LBL_ to avoid namespace conflicts (Randy Howard)\n       -- Merged in LTM fix to mp_prime_random_ex() which zap'ed the most significant byte if the bit size\n          requested was a multiple of eight.\n       -- Made RSA_TIMING off by default as it's not terribly useful [and likely to be deprecated]\n       -- Renamed SMALL_CODE, CLEAN_STACK and NO_FILE to have a LTC_ prefix to avoid namespace collisions\n          with other programs.  e.g. SMALL_CODE => LTC_SMALL_CODE\n       -- Zed Shaw pointed out that on certain systems installing libs as \"root\" isn't possible as the super-user\n          is not root.  Now the makefiles allow this to be changed easily.\n       -- Renamed \"struct _*_descriptor\" to \"struct ltc_*_descriptor\" to avoid using a leading _\n          Also renamed _ARGCHK to LTC_ARGCHK\n       -- Zed Shaw pointed out that I still defined the prng structs in tomcrypt_prng.h even if they \n          weren't defined.  This made undef'ing FORTUNA break the build.\n       -- Added LTC_NO_ASM to disable inline asm macros [ROL/ROR/etc]\n       -- Changed RSA decrypt functions to change the output length variable name from \"keylen\" to \"outlen\" to make \n          it more consistent.\n       -- Added the 64-bit Khazad block cipher [NESSIE]\n       -- Added the 128-bit Anubis block cipher [with key support for 128...320 bit keys] [NESSIE]\n       -- Changes to several MAC functions to rename input arguments to more sensible names\n       -- Removed FAST_PK support from dh_sys.c\n       -- Declared deskey() from des.c as static instead of a global\n       -- Added pretty much all practical GCC warning tests to the GCC [related] makefiles.  These additional\n          warnings can easily be disabled for those with older copies of GCC [or even non GNU cc's]\n       -- Added doxygen @ tags to the code...  phew that was a hell of a lot of [repetitive] work\n       -- Also added pre-configured Doxygen script.\n       -- Cleaned up quite a few functions [ciphers, pk, etc] to make the parameters naming style consistent\n          E.g. ciphers keys are called \"skey\" consistently now.  The input to PK encryption is called \"in\", etc.\n          These changes require no code changes on the behalf of developers fortunately\n       -- Started a SAFER+ optimizer [does encrypt only] which shaves a good 30 or so cycles/byte on my AMD64\n          at an expense of huge code.  It's in notes/etc/saferp_optimizer.c\n       -- DSA sign/verify now uses DER encoded output/inputs and no LTC style headers.  \n       -- Matt Johnston found a missing semi-colon in mp_exptmod().  Fix has been merged in.  \n\nOctober 29th, 2004\nv0.99  -- Merged in the latest version of LTM which includes all of the recent bug fixes\n       -- Deprecated LTMSSE and removed it (to be replaced with TFM later on)\n       -- Stefan Arentz pointed out that mp_s_rmap should be extern\n       -- Kristian Gj?steen pointed out that there are typos in the \n          \"test\" makefile and minor issues in Yarrow and Sober [just cosmetics really]\n       -- Matthew P. Cashdollar pointed out that \"export\" is a C++ keyword \n          so changed the PRNG api to use \"pexport\" and \"pimport\"\n       -- Updated \"hashsum\" demo so it builds ;-)\n       -- Added automatic support for x86-64 (will configure for 64-bit little endian automagically)\n       -- Zhi Chen pointed out a bug in rsa_exptmod which would leak memory on error. \n       -- Made hash functions \"init\" return an int.  slight change to API ;-(\n       -- Added \"CHC\" mode which turns any cipher into a hash the other LTC functions can use\n       -- Added CHC mode stuff to demos such as tv_gen and hashsum\n       -- Added \"makefile.shared\" which builds and installs shared/static object copies\n          of the library.\n       -- Added DER for bignum support \n       -- RSA is now fully joy.  rsa_export/rsa_import use PKCS #1 encodings and should be \n          compatible with other crypto libs that use the format.\n       -- Added support for x86-64 for the ROL/ROR macros \n       -- Changed the DLL and SO makefiles to optimize for speed, commented SMALL_CODE in\n          mycrypt_custom.h and added -DSMALL_CODE to the default makefile\n       -- Updated primality testing code so it does a minimum of 5 tests [of Miller-Rabin]\n          (AFAIK not a security fix, just warm fuzzies)\n       -- Minor updates to the OMAC code (additional __ARGCHK and removed printf from omac_test... oops!)\n       -- Update build and configuration info which was really really really out of date.  (Chapter 14)\n       ++ Minor update, switch RSA to use the PKCS style CRT\n\nAugust 6th, 2004\nv0.98  -- Update to hmac_init to free all allocated memory on error\n       -- Update to PRNG API to fix import/export functions of Fortuna and Yarrow\n       -- Added test functions to PRNG api, RC4 now conforms ;-) [was a minor issue]\n       -- Added the SOBER-128 PRNG based off of code donated by Greg Rose.\n       -- Added Tech Note #4 [notes/tech0004.txt] \n       -- Changed RC4 back [due to request].  It will now XOR the output so you can use it like \n          a stream cipher easily.\n       -- Update Fortuna's export() to emit a hash of each pool.  This means that the accumulated \n          entropy that was spread over all the pools isn't entirely lost when you export/import.\n       -- Zhi Chen suggested a comment for rsa_encrypt_key() to let users know [easily] that it was\n          PKCS #1 v2.0 padding.  (updated other rsa_* functions)\n       -- Cleaned up Noekeon to remove unrolling [wasn't required, was messy and actually slower with GCC/ICC]\n       -- Updated RC4 so that when you feed it >256 bytes of entropy it quietly ignores additional\n          bytes.  Also removed the % from the key setup to speed it up a bit.\n       -- Added cipher/hash/prng tests to x86_prof to help catch bugs while testing\n       -- Made the PRNG \"done\" return int, fixed sprng_done to not require prng* to be non-null\n       -- Spruced up mycrypt_custom.h to trap more errors and also help prevent LTMSSE from being defined\n          on non-i386 platforms by accident.\n       -- Added RSA/ECC/DH speed tests to x86_prof and cleaned it up to build with zero warnings\n       -- Changed Fortuna to count only entropy [not the 2 byte header] added to pool[0] into the \n          reseed mechanism.  \n       -- Added \"export_size\" member to prng_descriptor tables so you can know in advance the size of \n          the exported state for any given PRNG.  \n       -- Ported over patch on LTM 0.30 [not ready to release LTM 0.31] that fixes bug in mp_mul()/mp_div()\n          that used to result in negative zeroes when you multiplied zero by a negative integer.  \n          (patch due to \"Wolfgang Ehrhardt\" <Wolfgang.Ehrhardt@munich.netsurf.de>)\n       -- Fixed rsa_*decrypt_key() and rsa_*verify_hash() to default to invalid \"stat\" or \"res\".  This way\n          if any of the higher level functions fail [before you get to the padding] the result will be in\n          a known state].  Applied to both v2 and v1.5 padding helpers.\n       -- Added MACs to x86_prof\n       -- Fixed up \"warnings\" in x86_prof and tv_gen\n       -- Added a \"profiled\" target back [for GCC 3.4 and ICC v8].  Doesn't seem to help but might be worth\n          tinkering with.\n       -- Beefed up load/store test in demos/test\n\n       ++ New note, in order to use the optimized LOAD/STORE macros your platform\n          must support unaligned 32/64 bit load/stores.  The x86s support this\n          but some [ARM for instance] do not.  If your platform cannot perform\n          unaligned operations you must use the endian neutral code which is safe for \n          any sort of platform.\n\nJuly 23rd, 2004\nv0.97b -- Added PKCS #1 v1.5 RSA encrypt/sign helpers (like rsa_sign_hash, etc...)\n       -- Added missing prng check to rsa_decrypt_key() [not critical as I don't use \n          descriptors directly in that function]\n       -- Merged in LTM-SSE, define LTMSSE before you build and you will get SSE2 optimized math ;-)\n          (roughly 3x faster on a P4 Northwood).  By default it will compile as ISO C portable\n          code (when LTMSSE is undefined).\n       -- Fixed bug in ltc_tommath.h where I had the kara/toom cutoffs not marked as ``extern''\n          Thanks to \"Stefan Arentz\" <stefan at organicnetwork.net>\n       -- Steven Dake <scd@broked.org> and Richard Amacker <ramacker@yahoo.com> submitted patches to \n          fix pkcs_5_2().  It now matches the output of another crypto library.  Whoops... hehehe\n       -- Updated PRNG api.  Added Fortuna PRNG to the list of supported PRNGs\n       -- Fixed up the descriptor tables since globals are automatically zero'ed on startup.\n       -- Changed RC4 to store it's output.  If you want to encrypt with RC4\n          you'll have to do the XOR yourself.\n       -- Fixed buffer overflows/overruns in the HMAC code.  \n\n       ++ API change for the PRNGs there now is a done() function per PRNG.  You\n          should call it when you are done with a prng state.  So far it's\n          not absolutely required (won't cause problems) but is a good idea to\n          start.  \n\n\nJune 23rd, 2004\nv0.97a ++ Fixed several potentially crippling bugs... [read on]\n       -- Fixed bug in OAEP decoder that would incorrectly report \n          buffer overflows. [Zhi Chen]\n       -- Fixed headers which had various C++ missing [extern \"C\"]'s\n       -- Added \"extern\" to sha384_desc descriptor which I removed by mistake\n       -- Fixed bugs in ENDIAN_BIG macros using the wrong byte order [Matt Johnston]\n       -- Updated tiger.c and des.c to not shadow \"round\" which is intrinsic on\n          some C compilers.\n       -- Updated demos/test/rsa_test.c to test the RSA functionality better\n       ++ This update has been tested with GCC [v3.3.3], ICC [v8] and MSVC [v6+SP6] \n          all on a x86 P4  [GCC/ICC tested in Gentoo Linux, MSVC in WinXP]\n       ++ Outcome: The bug Zhi Chen pointed out has been fixed.  So have the bugs\n          that Matt Johnston found.  \n\nJune 19th, 2004\nv0.97  -- Removed spurious unused files [arrg!]\n       -- Patched buffer overflow in tim_exptmod()\n       -- Fixed buffer overrun bug in pkcs_1_v15_es_decode()\n       -- Reduced stack usage in PKCS #1 v2.0 padding functions (by several KBs)\n       -- Removed useless extern's that were an artifact from the project start... ;-)\n       -- Replaced memcpy/memset with XMEMCPY and XMEMSET for greater flexibility\n       -- fixed bugs in hmac_done()/hmac_init()/[various others()] where I didn't trap errors \n       -- Reduced stack usage in OMAC/PMAC/HMAC/EAX/OCB/PKCS#5 by mallocing any significant sized\n          arrays (e.g. > 100 bytes or so).  Only in non-critical functions (e.g. eax_init())\n       -- \"Zhi Chen\" <zhi@massiveincorporated.com> pointed out that rsa_decrypt_key() requires\n          an incorrect output size (too large).  Fixed.\n       -- Added a \"pretty\" target to the GCC makefile.  Requires PERL.  It is NEAT!\n       -- Minor updates to ch1 of the manual.\n       -- Cleaned up the indentation and added comments to rsa_make_key(), rsa_exptmod() and \n          rsa_verify_hash()\n       -- Updated makefile.icc so the \"install\" target would work ;-)\n       -- Removed demos/test.c [deprecated from demos/test/test.c]\n       -- Changed MAXBLOCKSIZE from 128 to 64 to reflect the true size...\n\nMay 30th, 2004\nv0.96  -- Removed GF and Keyring code\n       -- Extended OAEP decoder to distinguish better [and use a more uniform API]\n       -- Changed PSS/OAEP API slightly to be more consistent with other PK functions (order of arguments)\n       -- rsa_exptmod() now pads with leading zeroes as per I2OSP.\n       -- added error checking to yarrow code\n       --  pointed out that tommath.h from this distro will overwrite tommath.h\n          from libtommath.  I changed this to ltc_tommath.h to avoid any such problems.\n       -- Fixed bug in PSS encoder/decoder that didn't handle the MSB properly\n       -- refactored AES, now sports an \"encrypt only\" descriptor which uses half as much code space.\n       -- modded Yarrow to try and use refactored AES code and added WHIRLPOOL support (d'oh) ;-)\n       -- updated ECB, OCB and CBC decrypt functions to detect when \"encrypt only\" descriptor is used.\n       -- replaced old RSA code with new code that uses PKCS #1 v2.0 padding\n       -- replaced old test harness with new over-engineer'ed one in /demos/test/\n       -- updated cbc/cfb/ofb/ctr code with setiv/getiv functions to change/read the IV without re-keying.\n       -- Added PKCS #1 v1.5 RSA encryption and signature padding routines\n       -- Added DER OID's to most hash descriptors (as many as I could find) \n       -- modded rsa_exptmod() to use timing-resilient tim_exptmod() when doing private key operations \n          added #define RSA_TIMING which can turn on/off this feature.\n       -- No more config.pl so please just read mycrypt_custom.h for build-time tweaks\n       -- Small update to rand_prime()\n       -- Updated sha1, md5 and sha256 so they are smaller when SMALL_CODE is defined.  If you want speed though,\n          you're going to have to undefine SMALL_CODE ;-)\n       -- Worked over AES so that it's even smaller now [in both modes].\n       \nMay 12th, 2004\nv0.95  -- Optimized AES and WHIRLPOOL for SMALL_CODE by taking advantage of the fact\n          the transforms are circulant.  AES dropped 5KB and WHIRLPOOL dropped 13KB\n          using the default build options on the x86.\n       -- Updated eax so the eax_done() would clear the state [like hmac,pmac,ocb] when\n          CLEAN_STACK has been defined.\n       -- added LTC_TEST support to rmd160\n       -- updates to mycrypt_pk.h\n       -- updated rand_prime() to faciliate making RSA composites \n       -- DSA/RSA now makes composites of the exact size desired.\n       -- Refactored quite a bit of the code, fewer functions per C file\n       -- cleaned up the makefiles to organize the objects logically\n       -- added ICC makefile along with \"profiled\" targets for both GNU and ICC compilers\n       -- Marked functions for removal before v1.00 see PLAN for more information\n       -- GCC 3.4.0 tested and seems to work\n       -- Added PKCS #5 support\n       -- Fixed typo in comment header of .C files  ;-)\n       -- Added PKCS #1 OAEP and PSS support.  \n       \nFeb 20th, 2004\nv0.94  -- removed unused variables from ocb.c and fixed it to match known test vectors.\n       -- Added PMAC support, minor changes to OMAC/EAX code [I think....]\n       -- Teamed up with Brian Gladman.  His code verifies against my vectors and my code\n          verifies against his test vectors.  Hazaa for co-operation!\n       -- Various small changes (added missing ARGCHKs and cleaned up indentation)\n       -- Optimization to base64, removed unused variable \"c\"\n       -- Added base64 gen to demos/tv_gen.c\n       -- Fix to demos/x86_prof.c to correctly identify the i386 architecture... weird...\n       -- Fixed up all of the PK code by adding missing error checking, removed \"res\" variables,\n          shrunk some stack variables, removed non-required stack variables and added proper\n          error conversion from MPI to LTC codes.  I also spotted a few \"off by one\" error\n          checking which could have been used to force the code to read past the end of\n          the buffer (in theory, haven't checked if it would work) by a few bytes.\n       -- Added checks to OUTPUT_BIGNUM so the *_export() functions cannot overflow the output and I \n          also modded it so it stores in the output provided to the function (that is not on\n          the local stack) which saves memory and time.\n       -- Made SAFER default to disabled for now (plans are to cleanhouse write an implementation later)\n       -- Added the 512-bit one-way hash WHIRLPOOL which clocks in at 138 cycles per byte on my\n          Athlon XP [for comparison, SHA-512 clocks in at 77 cycles per byte].  This code uses the \n          teams new sbox design (not the original NESSIE one).\n      \n\nJan 25th, 2004\nv0.93  -- [note: deleted v0.93 changes by accident... recreating from memory...]\n       -- Fix to RC2 to not deference pointer before ARGCHK\n       -- Fix to NOEKEON to match published test vectors as well as cleaned up the code a bit\n       -- Optimized Twofish [down to 28 cycles/byte on my box] and Blowfish\n       -- Fix to OMAC to test cipher block size first [prevents wasting any time]\n       -- Added more OMAC test vectors\n       -- Added EAX Encrypt+Authenticate support\n       -- Fix to DSA to check return of a few LTM functions I forgot [mp_to_unsigned_bin]\n       -- Added common headers to all C files\n       -- CTR mode supports big and little [default] endian counters now.  \n       -- fix to find_cipher_any() so that it can handle a fragmented cipher_descriptor table.\n       -- added find_hash_any() akin to find_cipher_any().\n       -- Added EAX code to demos/tv_gen.c  Hazaa! \n       -- Removed SONY defines and files from codebase.\n       -- Added OCB support [patents be damned] and to demos/tv_gen.c\n       -- Merge all of the INPUT/OUTPUT BIGNUM macros (less toc) into mycrypt_pk.h\n       -- Made appropriate changes to the debug string in crypt.c\n\nDec 24th, 2003\nv0.92  -- Updated the config.pl script so the options have more details.\n       -- Updated demos/tv_gen to include RIPEMD hashes\n       -- Updated Twofish so when TWOFISH_ALL_TABLES is defined a pre-computed RS table\n          is included [speedup: slight, about 4k cycles on my Athlon].\n       -- Re-wrote the twofish large key generation [the four 8x32 key dependent tables].  Now about twice as fast.\n          With both optimizations [e.g. TWOFISH_ALL_TABLES defined] a 128-bit Twofish key can now be scheduled\n          in 26,000 cycles on my Athlon XP [as opposed to 49,000 before] when optimized for size.\n       -- config.pl has been updated so rmd128.o and rmd160.o are objects included in the build [oops]\n       -- Andrew Mann found a bug in rsa_exptmod() which wouldn't indicate if the wrong type of key was specified\n          (e.g. not PK_PRIVATE or PK_PUBLIC)\n       -- Fixed up demos/x86_prof so it sorts the output now :-)  \n       -- The project is now powered by radioactive rubber pants.\n       -- Fixed dh_encrypt_key() so if you pass it a hash with a smaller output than the input key it \n          will return CRYPT_INVALID_HASH [to match what ecc_encrypt_key() will do]\n       -- Merge the store/encrypt key part of ecc_encrypt_key() as per dh_encrypt_key() [can you guess what I'm upto?]\n       -- Massive updates to the prime generation code.  I use the LTM random prime functions [and provide a nice \n          interface between the LTC PRNG's and the LTM generic prng prototype].  I also use a variable number of tests\n          depending on the input size.  This nicely speeds up most prime generation/testing within the library.\n       -- Added SHA-224 to the list of hashes.\n       -- Made HMAC test vectors constant and static [takes ROM space instead of RAM]\n       -- This release was brought to you by the letter P which stands for Patent Infringement.\n       -- Added generic HASH_PROCESS macro to mycrypt_hash.h which simplifies the hash \"process\" functions\n          I also optimized the compression functions of all but MD2 to not perform input copies when avoidable.\n       -- Removed the division from the Blowfish setup function [dropped 3k cycles on my Athlon]\n       -- Added stack cleaning to rijndael, cast5 so now all ciphers have CLEAN_STACK code.  \n       -- Added Skipjack to the list of ciphers [made appropriate changes to demos/test.c, demos/tv_gen.c and \n          demos/x86_prof.c]\n       -- Added mechanical testing to cipher test vector routines.  Now it encrypts 1000 times, then decrypts and\n          compares.  Any fault (e.g. bug in code, compiler) in the routines is likely to show through.  Doesn't\n          stress test the key gen though...\n       -- Matt Johnson found a bug in the blowfish.c  apparently I was out of my mind and put twofish defines in there \n          The code now builds with any config.  Thanks.\n       -- Added OMAC1 Message Authentication Code support to the library.\n       -- Re-prototyped the hash \"process\" and \"done\" to prevent buffer overflows [which don't seem easy to exploit].  \n          Updated HMAC code to use them too.  Hazaa!\n       -- Fixed bug in ECC code which wouldn't do an _ARGCHK on stat in ecc_verify_hash().\n       -- Fixed [temp fix] bug in all PK where the OUTPUT_BIGNUM macros would not trap errors on the to_unsigned_bin \n          conversion [now returns CRYPT_MEM, will fix it up better later]\n       -- Added DSA to the list of supported PK algorithms.  \n       -- Fixed up various ciphers to &255 the input key bytes where required [e.g. where used to index a table] to prevent\n          problems on platforms where CHAR_BIT != 8 \n       -- Merged in LibTomMath v0.28\n       -- Updated demos/x86_prof.c to use Yarrow during the key sched testing [was horribly slow on platforms with blockable\n          /dev/random]. \n       -- Added OMAC/HMAC tests to demos/tv_gen and I now store the output of this in notes/ \n       -- Fixed a bug in config.pl that wouldn't have TWOFISH_TABLES defined by default (too many commas on the line)\n       -- Fixed bug in hmac_done().  Apparently FIPS-198 [HMAC] specifies that the output can be truncated.  My code\n          would not support that (does now just like the new OMAC code).\n       -- Removed \"hashsize\" from hmac_state as it wasn't being used.\n       -- Made demos/test.c stop if OMAC or HMAC tests fail (instead of just printing a failed message and keep going).\n       -- Updated notes/tech0003.txt to take into account the existence of Skipjack [also I fixed a few typos].\n       -- Slight changes to Noekeon, with SMALL_CODE undefined it uses a fully unrolled version.  Dropped +10 cycles/byte\n          on my Athlon (35 cycles per byte or 410.4Mbit/sec at 1795Mhz)\n       -- Added _ARGCHK() calls to is_prime() for the two input pointers.\n\nSept 25th, 2003\nv0.91  -- HMAC fix of 0.90 was incorrect for keys larger than the block size of the hash.\n       -- Added error CRYPT_FILE_NOTFOUND for the file [hmac/hash] routines.\n       -- Added RIPEMD hashes to the hashsum demo.\n       -- Added hashsum demo to MSVC makefile.\n       -- Added RMD160 to the x86_prof demo [oops]\n       -- Merged in LibTomMath-0.27 with a patch to mp_shrink() that will be in LibTomMath-0.28\n          Fixes another potential memory leak.\n\nSept 7th, 2003\nv0.90  -- new ROL/ROR for x86 GCC\n       -- Jochen Katz submitted a patch to the makefile to prevent \"make\" from making the .a library\n          when not required.\n       == By default the KR code is not enabled [it's only a demo anyways!]\n       -- changed the \"buf\" in ecc_make_key from 4KB to 128 bytes [since the largest key is 65 bytes]\n       -- hmac_done() now requires you pass it the size of the destination buffer to prevent\n          buffer overflows.  (API CHANGE)\n       -- hmac/hash filebased routines now return CRYPT_NOP if NO_FILE is defined.\n       -- I've removed the primes from dh.c and replaced them with DR safe primes suitable for the default\n          configuration of LibTomMath.  Check out these comparisons on a 1.3Ghz Athlon XP, optimized for size,\n\n768-bit,     4 vs.  10\n1024-bit,    8 vs.  18\n1280-bit,   12 vs.  34\n1536-bit,   20 vs.  56\n1792-bit    28 vs.  88\n2048-bit,   40 vs. 124\n2560-bit,   71 vs. 234\n3072-bit,  113 vs. 386\n4096-bit,  283 vs. 916\n\n          Times are all in milliseconds for key generation.  New primes times on the left.  This makes the code binary\n          incompatible with previous releases.  However, this addition is long overdue as LibTomMath has supported DR\n          reductions for quite some time.\n       -- Added RIPE-MD 128 and 160 to the list of supported hashes [10 in total].\n       -- The project has been released as public domain.  TDCAL no longer applies.\n\nJuly 15th, 2003\nv0.89  -- Fix a bug in bits.c which would prevent it from building with msvc\n       -- Merged in LibTomMath v0.24 [and I used the alloc/free macros this time!]\n       -- Removed the LTC version of next_prime() and replaced it with a call to the\n          mp_prime_next_prime() from LibTomMath\n       -- reverted bits.c to the 0.86 copy since the new one doesn't build in MSVC\n          or cygwin.\n\nJul 10th, 2003\nv0.88  -- Sped up CAST5 key schedule for MSVC\n       -- added \"ulong32\" which allows people on 64-bit platforms to force the 32-bit tables in\n          ciphers like blowfish and AES to be 32-bits.  E.g. when unsigned long is 64-bits.\n       -- Optimized the SAFER-SK64, SAFER-SK128, SAFER+, RC5 and RC6 key schedule [big time!]\n       -- Optimized SHA-1 and SHA-256 quite a bit too.\n       -- Fixed up the makefile to use -fomit-frame-pointer more liberally\n       -- Added tv_gen program which makes test vectors for ciphers/hashes\n       -- Merged in LibTomMath v0.22\n       \nJun 19th, 2003\nv0.87  -- Many MSVC optimizations to the code base\n       -- Improved the AES and Twofish key schedule [faster, more constant time]\n       -- Tons of optimizations here and there.  \n       \nJun 15th, 2003\nv0.86  -- Fixed up AES to workaround MSVC optimizer bug\n       -- Merged in fresh LTM base [based on v0.20] so there are no warnings with MSVC\n       -- Wrote x86_prof which will time the hashes and ciphers downto cycles per byte.\n       -- Fixed up demos/encrypt to remove serpent_desc from the list\n       -- Re-enabled MSVC optimizations w00t w00t\n       -- Replaced \"errno\" with \"err\" in all functions that had it so it wouldn't clash\n          with the global \"errno\"\n       -- Removed a set of unused variables from certain functions\n       -- Removed {#line 0 \"...\"} stuff from mpi.c to comply with ISO C  :-)\n       \nJun 11th, 2003\nv0.85  -- Swapped in a new AES routine\n       -- Removed Serpent\n       -- Added TDCAL policy document\n       \nJun 1st, 2003\nv0.84  -- Removed a 4KB buffer from rsa_decrypt_key that wasn't being used no more\n       -- Fixed another potential buffer problem.  Not an overflow but could cause the \n          PK import routines to read past the end of the buffer.\n       -- Optimized the ECC mulmod more by removing a if condition that will always be false\n       -- Optimized prime.c to not include a 2nd prime table, removed code from is_prime calls prime\n          test from LibTomMath now\n       -- Added LTC_TEST define which when defined will enable the test vector routines [see mycrypt_custom.h]\n       -- Removed ampi.o from the depends cuz it ain't no not working in *nix with it [routines are in mpi.c now].\n        \n\nMar 29th, 2003\nv0.83  -- Optimized the ecc_mulmod, it's faster and takes less heap/stack space\n       -- Fixed a free memory error in ecc_mulmod and del_point which would try to free NULL\n       -- Fixed two serious bugs in rsa_decrypt_key and rsa_verify_hash that would allow a trivialy\n          buffer overflow.\n       -- Fixed a bug in the hmac testing code if you don't register all the hashes it won't return\n          errors now.\n       \nMar 15th, 2003\nv0.82  -- Manual updated\n       -- Added MSVC makefile [back, actually its written from scratch to work with NMAKE]\n       -- Change to HMAC helper functions API to avoid buffer overflow [source changes]\n       -- the rsa_encrypt_key was supposed to reject key sizes out of bounds ... \n          same fix to the rsa_sign_hash \n       -- Added code to ensure that that chaining mode code (cfb/ofb/ctr/cbc) have valid\n          structures when being called.  E.g. the indexes to the pad/ivs are not out of bounds\n       -- Cleaned up the DES code and simplified the core desfunc routine.\n       -- Simplified one of the boolean functions in MD4\n       \nJan 16th, 2003\nv0.81  -- Merged in new makefile from Clay Culver and Mike Frysinger\n       -- Sped up the ECC mulmod() routine by making the word size adapt to the input.  Saves a whopping 9 point\n          operations on 521-bit keys now (translates to about 8ms on my Athlon XP).  I also now use barrett reduction\n          as much as possible.  This sped the routine up quite a bit.\n       -- Fixed a huge flaw in ecc_verify_hash() where it would return CRYPT_OK on error... Now fixed.\n       -- Fixed up config.pl by fixing an invalid query and the file is saved in non-windows [e.g. not CR/LF] format\n          (fix due to Mika Bostr?m)\n       -- Merged in LibTomMath for kicks\n       -- Changed the build process so that by default \"mycrypt_custom.h\" is included and provided\n          The makefile doesn't include any build options anymore\n       -- Removed the PS2 and VC makefiles.\n       \nDec 16th, 2002\nv0.80  -- Found a change I made to the MPI that is questionable.  Not quite a bug but definately not desired.  Had todo\n          with the digit shifting.  In v0.79 I simply truncated without zeroing.  It didn't cause problems during my\n          testing but I fixed it up none the less.\n       -- Optimized s_mp_mul_dig() from MPI to do a minimal number of passes.\n       -- Fixed in rsa_exptmod() where I was getting the size of the result.  Basically it accomplishes the same thing\n          but the fixed code is more readable.\n       -- Fixed slight bug in dh_sign_hash() where the random \"k\" value was 1 byte shorter than it should have been.  I've\n          also made the #define FAST_PK speed up signatures as well.  Essentially FAST_PK tells the DH sub-system to \n          limit any private exponent to 256-bits.   Note that when FAST_PK is defined does not make the library\n          binary or source incompatible with a copy of the library with it undefined.\n       -- Removed the DSA code.  If you want fast diffie-hellman just define FAST_PK :-)\n       -- Updated dh_sign_hash()/dh_verify_hash() to export \"unsigned\" bignums.  Saves two bytes but is not binary\n          compatible with the previous release... sorry!  I've performed the same fix to the ecc code as well.\n       -- Fixed up the PK code to remove all use of mp_toraw() and mp_read_raw() [get all the changes out of the way now]\n       -- Fixed a bug in the DH code where it missed trapping a few errors if they occurred.\n       -- Fixed a slight \"its-not-a-bug-but-could-be-done-better\" bug in the next_prime() function.  Essentially it was\n          testing to ensure that in the loop that searches for the next candidate that the step never grows beyond\n          65000.  Should have been testing for MP_DIGIT_MAX\n       -- Spruced up the config.pl script.  It now makes a header file \"mycrypt_custom.h\" which can be included *before*\n          you include mycrypt.h.  This allows you to add libtomcrypt to a project without completely changing your make\n          system around.  Note that you should use the makefile it writes to at least build the library initially.\n       -- Used splint to check alot of the code out.  Tons of minor fixes and explicit casts added.\n       -- Also made all the internal functions of MPI are now static to avoid poluting the namespace\n       -- **Notice**:  There are no planned future releases for at least a month from the this release date.\n       \nDec 14th, 2002\nv0.79  -- Change to PK code [binary and source].  I made it so you have to pass the buffer size to the *_decrypt_key and\n          *_verify_hash functions.  This prevents malformed packets from performing buffer overflows.  I've also trimmed\n          the packet header size [by 4 bytes].\n       -- Made the test program halt on the first error it occurs.  Also made it trap more errors than before.\n       -- Wrote the first chapter of my new book [DRAFT!], not in this package but check my website!\n       -- Included a perl script \"config.pl\" that will make \"makefile.out\" according to the users needs.  \n       -- Added shell script to look for latest release\n       -- Merge DH and ECC key defines from mycrypt_cfg.h into the makefiles\n       -- updated the makefile to use BSD friendly archiving invokations\n       -- Changed the DH and ECC code to use base64 static key settings [e.g. the primes].  Dropped the code size by 3KB\n          and is ever-so-slightly faster than before.\n       -- added \"mp_shrink\" function to shrink the size of bignums.  Specially useful for PK code :-)\n       -- Added new exptmod function that calculates a^b mod c with fewer multiplies then before [~20% for crypto\n          sized numbers].  Also added a \"low mem\" variant that doesn't use more than 20KB [upto 4096 bit nums] of\n          heap todo the calculation.  Both are #define'able controlled\n       -- Added XREALLOC macro to provide realloc() functionality.\n       -- Added fix where in rsa_import() if you imported a public key or a non-optimized key it would free the mp_int's\n          not being used.\n       -- Fixed potential bug in the ECC code.  Only would occur on platforms where char is not eight bits [which isn't\n          often!]\n       -- Fixed up the ECC point multiplication, its about 15% faster now\n       -- While I was at it [since the lib isn't binary backwards compatible anyways] I've fixed the PK export routines\n          so they export as \"unsigned\" types saving 1 byte per bignum outputted.  Not a lot but heck why not.\n          \nNov 28th, 2002\nv0.78  -- Made the default ARGCHK macro a function call instead which reduced the code size from 264KB to 239KB.\n       -- Fixed a bug in the XTEA keysize function which called ARGCHK incorrectly.\n       -- Added Noekeon block cipher at 2,800 bytes of object code and 345Mbit/sec it is a welcome addition.\n       -- Made the KR code check if the other PK systems are included [provides error when building otherwise].\n       -- Made \"aes\" an alias for Rijndael via a pre-processor macro.  Now you can use \"aes_ecb_encrypt\", etc... :-)\n          Thanks to Jean-Luc Cooke for the \"buzzword conformance\" suggestion.\n       -- Removed the old PK code entirely (e.g. rsa_sign, dh_encrypt).  The *_sign_hash and *_encrypt_key functions\n          are all that is to remain.\n       -- **NOTE** Changed the PK *_import (including the keyring) routine to accept a \"inlen\" parameter.  This fixes a\n          bug where improperly made key packets could result in reading passed the end of the buffer.  This means\n          the code is no longer source compatible but still binary compatible.\n       -- Fixed a few other minor bugs in the PK import code while I was at it.\n       \nNov 26th, 2002\nv0.77  -- Updated the XTEA code to use pre-computed keys.  With optimizations for speed it achieves 222Mbit/sec\n          compared to the 121Mbit/sec before.  It is 288 bytes bigger than before.\n       -- Cleaned up some of the ciphers and hashes (coding style, cosmetic changes)\n       -- Optimized AES slightly for 256-bit keys [only one if statement now, still two for 192-bit keys]\n       -- Removed most test cases from Blowfish, left three of them there.  Makes it smaller and faster to test.\n       -- Changed the primality routines around.  I now use 8 rounds of Rabin-Miller, I use 256 primes in the sieve\n          step and the \"rand_prime\" function uses a modified sieve that avoids alot of un-needed bignum work.\n       -- Fixed a bug in the ECC/DH signatures where the keys \"setting\" value was not checked for validity.  This means\n          that a invalid value could have caused segfaults, etc...\n       -- **NOTE** Changed the way the ECC/DH export/import functions work.  They are source but not binary compatible\n          with v0.76.  Essentially insteading of exporting the setting index like before I export the key size.  Now\n          if you ever re-configure which key settings are supported the lib will still be able to make use of your \n          keys.\n       -- Optimized Blowfish by inlining the round function, unrolling it for four rounds then using a for loop for the \n          rest.  It achieves a rate of 425Mbit/sec with the new code compared to 314Mbit/sec before.  The new blowfish \n          object file is 7,813 bytes compared to 8,663 before and is 850 bytes smaller.  So the code is both smaller and \n          faster!\n       -- Optimized Twofish as well by inlining the round function.  Gets ~400Mbit/sec compared to 280Mbit/sec before\n          and the code is only 78 bytes larger than the previous copy.\n       -- Removed SMALL_PRIME_TAB build option.  I use the smaller table always.\n       -- Fixed some mistakes concerning prime generation in the manual.\n       -- [Note: sizes/speeds are for GCC 3.2 on an x86 Athlon XP @ 1.53Ghz]\n\nNov 25th, 2002\nv0.76  -- Updated makefiles a bit more, use \"-Os\" instead of \"-O2\" to optimize for size.  Got the lib\n          downto 265KB using GCC 3.2 on my x86 box.\n       -- Updated the SAFER+, Twofish and Rijndael test vector routine to use the table driven design.\n       -- Updated all other test vector routines to return as soon as an error is found\n       -- fixed a bug in the test program where errors in the hash test routines would not be reported\n          correctly.  I found this by temporarily changing one of the bytes of the test vectors.  All the\n          hashes check out [the demos/test.c would still have reported an error, just the wrong one].\n          \n\nNov 24th, 2002\nv0.75  -- Fixed a flaw in hash_filehandle, it should ARGCHK that the filehandle is not NULL\n       -- Fixed a bug where in hash_file if the call to hash_filehandle failed the open file would \n          not be closed.\n       -- Added more strict rules to build process, starting to weed out \"oh this works in GCC\" style code\n          In the next release \"-Wconversion\" will be enabled which will deal with all implicit casts.\n\nNov 22nd, 2002 [later in the day]\nv0.74  -- Wrote a small variant of SAFER+ which shaved 50KB off the size of the library on x86 platforms\n       -- Wrote a build option to remove the PK packet functions [keeps the encrypt_key/sign_hash functions]\n       -- Wrote a small variant of Rijndael (trimmed 13KB)\n       -- Trimmed the TIGER/192 hash function a bit\n       -- Overall the entire lib compiled is 295KB [down from 400KB before]\n       -- Fixed a few minor oversights in the MSVC makefile\n\nNov 22nd, 2002\nv0.73  -- Fixed bug in RC4 code where it could only use 255 byte keys.\n       -- Fixed bug in yarrow code where it would allow cast5 or md2 to be used with it...\n       -- Removed the ecc compress/expand points from the global scope.  Reduces namespace polution\n       -- Fixed bug where if you used the SPRNG you couldn't pass NULL as your prng_state which you should be\n          able todo since the SPRNG has no state...\n       -- Corrected some oversights in the manual and the examples...\n       -- By default the GF(2^W) math library is excluded from the build.  The source is maintained because I wrote it\n          and like it :-).  This way the built library is a tad smaller\n       -- the MSVC makefile will now build for a SPACE optimized library rather than TIME optimized.\n\nNov 21th, 2002\nv0.72  -- Fixed bug in the prime testing.  In the Miller-Rabin test I was raising the base to \"N-1\" not \"r\".\n          The math still worked out fine because in effect it was performing a Fermat test.  Tested the new code and it \n          works properly\n       -- Fixed some of the code where it was still using the old error syntax\n       -- Sped up the RSA decrypt/sign routines\n       -- Optimized the ecc_shared_secret routine to not use so much stack\n       -- Fixed up the makefile to make releases where the version # is in the file name and directory it will unzip\n          to\n\nNov 19th, 2002\nv0.71  -- HELP TOM.  I need tuition for the January semester.  Now I don't want to force donations [nor will I ever]\n          but I really need the help!  See my website http://tom.iahu.ca/help_tom.html for more details.  Please help\n          if you can! \n       --------------------------------------------------------------------------------------------------------------\n       -- Officially the library is no longer supported in GCC 3.2 in windows [cygwin].\n          In windows you can either use GCC 2.95.3 or try your luck with 3.2  It seems that\n          \"-fomit-frame-pointer\" is broken in the windows build [but not the linux x86 build???]\n          If you simply must use 3.2 then I suggest you limit the optimizations to simply \"-O2\"\n       -- Started new error handling API.  Similar to the previous except there are more error codes than just\n          CRYPT_ERROR\n       -- Added my implementation of the MD2 hash function [despite the errors in the RFC I managed to get it right!]\n       -- Merged in more changes from Sky Schulz.  I have to make mention here that he has been a tremendous help in \n          getting me motivated to make some much needed updates to the library!\n       -- Fixed one of the many mistakes in the manual as pointed out by Daniel Richards\n       -- Fixed a bug in the RC4 code [wasn't setting up the key correctly]\n       -- Added my implementation of the CAST5 [aka CAST-128] block cipher (conforms...)\n       -- Fixed numerous bugs in the PK code.  Essentially I was \"freeing\" keys when the import failed.  This is neither\n          required nor a good a idea [double free].  \n       -- Tom needs a job.\n       -- Fixed up the test harness as requested by Sky Schulz.  Also modifed the timing routines to run for X seconds\n          and count # of ops performed.  This is more suitable than say encrypting 10 million blocks on a slow processor\n          where it could take minutes!\n       -- Modified test programs hashsum/encrypt to use the new algorithms and error handling syntax\n       -- Removed the PKCS code since it was incomplete.  In the future I plan on writing a \"add-on\" library that\n          provides PKCS support... \n       -- updated the config system so the #defines are in the makefiles instead of mycrypt_cfg.h  \n       -- Willing to work on an hourly basis for 15$ CDN per hour.\n       -- updated the test program to not test ciphers not included\n       -- updated the makefile to make \"rsa_sys.c\" a dependency of rsa.o [helps develop the code...]\n       -- fixed numerous failures to detect buffer overflows [minor] in the PK code.\n       -- fixed the safer [64-bit block version] test routines which didn't check the returns of the setup\n          function\n       -- check out my CV at http://tom.iahu.ca/cv.html\n       -- removed the GBA makefile and code from demos/test.c [not a particularly useful demo...]\n       -- merged in rudimentary [for testing] PS2 RNG from Sky Schulz\n       -- merged in PS2 timer code [only shell included due to NDA reasons...]\n       -- updated HMAC code to return errors where possible\n       -- Thanks go to Sky Schulz who bought me a RegCode for TextPad [the official editor of libtomcrypt]\n\nNov 12th, 2002\nv0.70  -- Updated so you can swap out the default malloc/calloc/free routines at build time with others. (Sky Schulz)\n       -- Sky Schulz contributed some code towards autodetecting the PS2 in mycrypt_cfg.h\n       -- Added PS2 makefile contributed by Sky Schulz [see a pattern forming?]\n       -- Added ability to have no FILE I/O functions at all (see makefile), Sky Schulz....\n       -- Added support for substituting out the clock() function (Sky Schulz)\n       -- Fixed up makefile to include new headers in the HEADERS variable\n       -- Removed \"coin.c\" as its not really useful anyways\n       -- Removed many \"debug\" printfs that would show up on failures.  Basically I wanted to ensure the only output\n          would be from the developer themselves.\n       -- Added \"rc4.c\" a RC4 implementation with a PRNG interface.  Since RC4 isn't a block cipher it wouldn't work\n          too well as a block cipher.\n       -- Fixed ARGCHK macro usage when ARGTYPE=1 throughout the code\n       -- updated makefile to make subdirectory properly (Sku Schulz)\n       -- Started towards new API setup.  Instead of checking for \"== CRYPT_ERROR\" you should check \"!= CRYPT_OK\"\n          In future releases functions will return things other than CRYPT_ERROR on error to give more useful\n          thread safe error reporting.  The manual will be updated to reflect this.  For this release all\n          errors are returned as CRYPT_ERROR (except as noted) but in future releases this will change.         \n       -- Removed the zlib branch since its not really required anyways.  Makes the package smaller\n\nNov 11th, 2002\nv0.69  -- Added ARGCHK (see mycrypt_argchk.h) \"arguement checking\" to all functions that accept pointers\n       -- Note I forgot to change the CRYPT version tag in v0.68... fixed now.\n\nNov 8th, 2002\nv0.68  -- Fixed flaw in kr_import/kr_export that wasted 4 bytes.  Source but not binary compatible with v0.67\n       -- Fixed bug in kr_find_name that used memcmp to match strings.  Uses strncmp now.\n       -- kr_clear now sets the pointer to NULL to facilate debugging [e.g. using the keyring after clearing]\n       -- static functions in _write/_read in keyring.c now check the return of ctr_encrypt/ctr_decrypt.\n       -- Updated blowfish/rc2/rc5/rc6 keysize() function to not reject keys larger than the biggest key the\n          respective ciphers can use.  \n       -- Fixed a bug in hashsum demo that would report the hash for files that don't exist!\n\nOct 16th, 2002\nv0.67  -- Moved the function prototypes into files mycrypt_*.h.  To \"install\" the lib just copy all the \n          header files \"*.h\" from the base of this project into your global include path.\n       -- Made the OFB/CFB/CTR functions use \"unsigned long\" for the length instead of \"int\"\n       -- Added keyring support for the PK functions\n       -- ***API CHANGE*** changed the ecc_make_key and dh_make_key to act more like rsa_make_key.  Basically\n          move the first argument to the next to last.\n       -- Fixed bug in dh_test() that wouldn't test the primality of the order of the sub-group\n       -- replaced the primes in the DH code with new ones that are larger than the size they are \n          associated with.  That is a 1024-bit DH key will have a 1025-bit prime as the modulus\n       -- cleaned up all the PK code, changed a bit of the API around [not source compatible with v0.66]\n       -- major editing of the manual, started Docer program\n       -- added 160 and 224 bit key settings for ECC.  This makes the DH and ECC binary wise incompatible with v0.66\n       -- Added an additional check for memory errors in is_prime() and cleaned up prime.c a bit\n       -- Removed ID_TAG from all files [meh, not a big fan...]\n       -- Removed unused variable from yarrow state and made AES/SHA256 the default cipher/hash combo\n       -- Fixed a bug in the Yarrow code that called prng_is_valid instead of cipher_is_valid from yarrow_start()\n       -- The ECB/CBC/OFB/CFB/CTR wrappers now check that the cipher is valid in the encrypt/decrypt calls\n          Returns int now instead of void.\n\nSept 24th, 2002\nv0.66  -- Updated the /demos/test.c program to time the hashes correctly.  Also it uses the yarrow PRNG for all of the \n          tests meaning its possible to run on RNG less platforms \n       -- Updated the /demos/hashsum.c program to hash from the standard input\n       -- Updated the RSA code to make keys a bit quicker [update by Wayne Scott] by not making both primes at the same\n          time.\n       -- Dan Kaminsky suggested some cleanups for the code and the MPI config\n          Code ships in unix LF format by default now too... will still build in MSVC and all... but if you want\n          to read the stuff you'll have to convert it \n       -- Changes to the manual to reflect new API [e.g. hash_memory/file have v0.65 prototypes]and some typos fixed\n\nSept 20th, 2002\nv0.65  -- Wayne Scott (wscott@bitmover.com) made a few of suggestions to improve the library.  Most \n          importantly he pointed out the math lib is not really required.  He's also tested the lib on 18 \n          different platforms.  According to him with only a few troubles [lack of /dev/random, etc] the \n          library worked as it was supposed to.  You can find the list at \n          http://www.bitkeeper.com/Products.BitKeeper.Platforms.html\n       -- Updated the hash_file and hash_memory functions to keep track of the size of the output\n       -- Wayne Scott updated the demos/test.c file to use the SPRNG less and Yarrow more\n       -- Modified the mycrypt_cfg.h to autodetect x86-32 machines\n\nSept 19th, 2002\nv0.64  -- wrote makefile for the GBA device [and hacked the demos/test.c file to support it conditionally]\n       -- Fixed error in PK (e.g. ECC, RSA, DH) import functions where I was clobbering the packet error messages\n       -- fixed more typos in the manual\n       -- removed all unused variables from the core library (ignore the ID_TAG stuff)\n       -- added \"const char *crypt_build_settings\" string which is a build time constant that gives a listing\n          of all the build time options.  Useful for debugging since you can send that to me and I will know what \n          exactly you had set for the mycrypt_cfg.h file.\n       -- Added control over endianess.  Out of the box it defaults to endianess neutral but you can trivially \n          configure the library for your platform.  Using this I boosted RC5 from 660Mbit/sec to 785Mbit/sec on my \n          Athlon box.  See \"mycrypt_cfg.h\" for more information.\n\nSept 11th, 2002\nv0.63  -- Made hashsum demo output like the original md5sum program \n       -- Made additions to the examples in the manual (fixed them up a bunch)\n       -- Merged in the base64 code from Wayne Scott (wscott@bitmover.com)\n\nAug 29th, 2002\nv0.62  -- Added the CLEAN_STACK functionality to several of the hashes I forgot to update.\n\nAug 9th, 2002\nv0.61  -- Fixed a bug in the DES code [oops I read something wrong].\n\nAug 8th, 2002\nv0.60  -- Merged in DES code [and wrote 3DES-EDE code based on it] from Dobes V.\n\nAug 7th, 2002\nv0.59  -- Fixed a \"unsigned long long\" bug that caused v0.58 not to build in MSVC.\n       -- Cleaned up a little in the makefile\n       -- added code that times the hash functions too in the test program\n\nAug 3rd, 2002\nv0.58  -- Added more stack cleaning conditionals throughout the code.  \n       -- corrected some CLEAR_STACK conditionals... should have been CLEAN_STACK\n       -- Simplified the RSA, DH and ECC encrypt() routines where they use CTR to encode the message\n          now they only make one call to ctr_encrypt()/ctr_decrypt().\n\nAug 2nd, 2002\nv0.57  -- Fixed a few errors messages in the SAFER code to actually report the correct cipher name.\n       -- rsa_encrypt() uses the \"keysize()\" method of the cipher being used to more accurately pick a\n          key size.  By default rsa_encrypt() will choose to use a 256-bit key but the cipher can turn that \n          down if required.\n       -- The rsa_exptmod() function will now more reliably detect invalid inputs (e.g. greater than the modulus).\n       -- The padding method for RSA is more clearly documented.  Namely if you want to encrypt/sign something of length\n          N then your modulus must be of length 1+3N.  So to sign a message with say SHA-384 [48 bytes] you need a \n          145 byte (1160 bits) modulus.  This is all in the manual now.\n       -- Added build option CLEAN_STACK which will allow you to choose whether you want to clean the stack or not after every\n          cipher/hash call\n       -- Sped up the hash \"process()\" functions by not copying one byte at a time.\n       ++ (added just after I uploaded...)\n          MD4 process() now handles input buffers > 64 bytes\n\nAug 1st, 2002\nv0.56  -- Cleaned up the comments in the Blowfish code.\n       -- Oh yeah, in v0.55 I made all of the descriptor elements constant.  I just forgot to mention it.\n       -- fixed a couple of places where descriptor indexes were tested wrong.  Not a huge bug but now its harder\n          to mess up.\n       -- Added the SAFER [64-bit block] ciphers K64, SK64, K128 and SK128 to the library.\n       -- Added the RC2 block cipher to the library.\n       -- Changed the SAFER define for the SAFER+ cipher to SAFERP so that the new SAFER [64-bit] ciphers\n          can use them with less confusion.\n\nJuly 29th, 2002\nv0.55  -- My god stupid Blowfish has yet again been fixed.  I swear I hate that cipher.  Next bug in it and boom its out of the\n          library.  Use AES or something else cuz I really hate Blowfish at this stage....\n       -- Partial PKCS support [hint DONT USE IT YET CUZ ITS UNTESTED!]\n\nJuly 19th, 2002\nv0.54  -- Blowfish now conforms to known test vectors.  Silly bad coding tom!\n       -- RC5/RC6/Serpent all have more test vectors now [and they seemed to have been working before]\n\nJuly 18th, 2002\nv0.53  -- Added more test vectors to the blowfish code just for kicks [and they are const now too :-)]\n       -- added prng/hash/cipher is_valid functions and used them in all of the PK code so you can't enter the code\n          with an invalid index ever now.\n       -- Simplified the Yarrow code once again :-)\n\nJuly 12th, 2002\nv0.52  -- Fixed a bug in MD4 where the hash descriptor ID was the same as SHA-512.  Now MD4 will work with\n          all the routines...\n       -- Fixed the comments in SHA-512 to be a bit more meaningful\n       -- In md4 I made the PADDING array const [again to store it in ROM]\n       -- in hash_file I switched the constant \"512\" to \"sizeof(buf)\" to be a bit safer\n       -- in SHA-1's test routine I fixed the string literal to say SHA-1 not sha1\n       -- Fixed a logical error in the CTR code which would make it skip the first IV value.  This means\n          the CTR code from v0.52 will be incompatible [binary wise] with previous releases but it makes more\n          sense this way.\n       -- Added {} braces for as many if/for/blocks of code I could find.  My rule is that every for/if/while/do block\n          must have {} braces around it.\n       -- made the rounds table in saferp_setup const [again for the ROM think about the ROM!]\n       -- fixed RC5 since it no longer requires rc5 to be registered in the lib.  It used to since the descriptors used to \n          be part of the table...\n       -- the packet.c code now makes crypt_error literal string errors when an error occurs\n       -- cleaned up the SAFER+ key schedule to be a bit easier to read.\n       -- fixed a huge bug in Twofish with the TWOFISH_SMALL define.  Because I clean the stack now I had\n          changed the \"g_func()\" to be called indirectly.  I forgot to actually return the return of the Twofish\n          g_func() function which caused it not to work... [does now :-)]\n\nJuly 11th, 2002\nv0.51  -- Fixed a bug in SHA512/384 code for multi-block messages.\n       -- Added more test vectors to the SHA384/512 and TIGER hash functions\n       -- cleaned up the hash done routines to make more sense\n \nJuly 10th, 2002\nv0.50  -- Fixed yarrow.c so that the cipher/hash used would be registered.  Also fixed\n          a bug where the SAFER+ name was \"safer\" but should have been \"safer+\".\n       -- Added an element to the hash descriptors that gives the size of a block [sent into the compressor]\n       -- Cleaned up the support for HMAC's\n       -- Cleaned up the test vector routines to make the test vector data const.  This means on some platforms it will be\n          placed in ROM not RAM now.\n       -- Added MD4 code submited by Dobes Vandermeer (dobes@smartt.com)\n       -- Added \"burn_stack\" function [idea taken from another source of crypto code].  The idea is if a function has\n          alot of variables it will clean up better.  Functions like the ecb serpent and twofish code will now have their\n          stacks cleaned and the rest of the code is getting much more straightforward.\n       -- Added a hashing demo by Daniel Richards (kyhwana@world-net.co.nz)\n       -- I (Tom) modified some of the test vector routines to use more vectors ala Dobes style.\n          For example, the MD5/SHA1 code now uses all of the test vectors from the RFC/FIPS spec.\n       -- Fixed the register/unregister functions to properly report errors in crypt_error\n       -- Correctly updated yarrow code to remove a few unused variables.\n       -- Updated manual to fix a few erroneous examples.\n       -- Added section on Hash based Message Authentication Codes (HMAC) to the manual\n\nJune 19th, 2002\nv0.46  -- Added in HMAC code from Dobes Vandermeer (dobes@smartt.com)\n\nJune 8th, 2002\nv0.45  -- Fixed bug in rc5.c where if you called rc5_setup() before registering RC5 it would cause\n          undefined behaviour.\n       -- Fixed mycrypt_cfg.h to eliminate the 224 bit ECC key.\n       -- made the \"default\" makefile target have depends on mycrypt.h and mycrypt_cfg.h\n\nApr 4th, 2002\nv0.44  -- Fixed bug in ecc.c::new_point() where if the initial malloc fails it would not catch it.\n\nMar 22nd, 2002\nv0.43  -- Changed the ZLIB code over to the 1.1.4 code base to avoid the \"double free\" bug.  \n       -- Updated the GCC makefile not to use -O3 or -funroll-loops\n       -- Version tag in mycrypt.h has been updated :-)\n\nMar 10th, 2002\nv0.42  -- The RNG code can now use /dev/urandom before trying /dev/random (J. Klapste)\n\nMar 3rd, 2002\nv0.41  -- Added support to link and use ciphers at compile time.  This can greatly reduce the code size!\n       -- Added a demo to show off how small an application can get... 46kb!\n       -- Disastry pointed out that Blowfish is supposed to be high endian.\n       -- Made registry code for the PRNGs as well [now the smallest useable link is 43kb]\n\nFeb 11th, 2002\nv0.40  -- RSA signatures use [and check for] fixed padding scheme.\n       -- I'm developing in Linux now :-)\n       -- No more warnings from GCC 2.96\n\nFeb 5th, 2002\nv0.39  -- Updated the XTEA code to work in accordance with the XTEA design\n\nJanuary 24th, 2002\nv0.38  -- CFB and OFB modes can now handle blocks of variable size like the CTR code\n       -- Wrote a wrapper around the memory compress functions in Zlib that act like the functions\n          in the rest of my crypto lib\n\nJanuary 23rd, 2002\nv0.37  -- Added support code so that if a hash size and key size for a cipher don't match up they will\n          use the next lower key supported.  (mainly for the PK code).  So you can now use SHA-1 with\n          Twofish, etc...\n       -- Added more options for Twofish.  You can now tell it to use precomputed sboxes and MDS multiplications\n          This will speed up the TWOFISH_SMALL implementation by increasing the code size by 1024 bytes.\n       -- Fixed a bug in prime.c that would not use the correct table if you undefined SMALL_PRIME_TAB\n       -- Fixed all of the PK packet code to use the same header format [see packet.c].  This makes the PK code\n          binary wise incompatible with previous releases while the API has not changed at all.\n\nJanuary 22nd, 2002\nv0.36  -- Corrections to the manual\n       -- Made a modification to Twofish which lets you build a \"small ram\" variant.  It requires\n          about 190 bytes of ram for the key storage compared to the 4,200 bytes the normal \n          variant requires.\n       -- Reduced the stack space used in all of the PK routines.\n\nJanuary 19th, 2002\nv0.35  -- If you removed the first hash or cipher from the library it wouldn't return an error if \n          you used an ID=0 [i.e blowfish or sha256] in any routine.  Now it checks for that and will\n          return an error like it should\n       -- Merged in new routines from Clay Culver.  These routines are for the PK code so you can easily \n          encode a symmetric key for multiple recipients.\n       -- Made the ecc and DH make_key() routines make secret keys of the same size as the keysize listed.\n          Originally I wanted to ensure that the keys were smaller than the order of the field used\n          However, the bias is so insignifcant using full sizes.  For example, with a ECC-192 key the order\n          is about 2^191.99, so instead I rounded down and used a 184-bit secret key.  Now I simply use a full 192-bit\n          key the code will work just the same except that some 192-bit keys will be duplicates which is not a big\n          deal since 1/2^192 is a very small bias!\n       -- Made the configuration a bit simpler and more exacting.  You can for example now select which DH or ECC\n          key settings you wish to support without including the data for all other key settings.  I put the #defines\n          in a new file called \"mycrypt_cfg.h\"\n       -- Configured \"mpi-config.h\" so its a bit more conservative with the memory required and code space used\n       -- Jason Klapste submitted bug fixes to the yarrow, hash and various other issues.  The yarrow code will now\n          use what ever remaining hash/cipher combo is left [after you #undef them] at build time.   He also suggested\n          a fix to remove unused structures from the symmetric_key and hash_state unions.\n       -- Made the CTR code handle variable length blocks better. It will buffer the encryption pad so you can\n          encrypt messages any size block at a time.\n       -- Simplified the yarrow code to take advantage of the new CTR code.\n       -- Added a 4096-bit DH key setting.  That took me about 36 hours to find!\n       -- Changed the base64 routines to use a real base64 encoding scheme.\n       -- Added in DH and ECC \"encrypt_key()\" functions.  They are still rather \"beta\"ish.\n       -- Added **Twofish** to the list of ciphers!\n\nJanuary 18th, 2002\nv0.34  -- Added \"sha512\" to the list of hashes.  Produces a 512-bit message digest.  Note that with the current\n          padding with the rsa_sign() function you cannot use sha512 with a key less than 1536 bits for signatures.\n       -- Cleaned up the other hash functions to use the LOAD and STORE macros...\n\nJanuary 17th, 2002\nv0.33  -- Made the lower limit on keysizes for RSA 1024 bits again because I realized that 768 bit keys wouldn't\n          work with the padding scheme and large symmetric keys.\n       -- Added information concerning the Zlib license to the manual\n       -- Added a 3072-bit key setting for the DH code.\n       -- Made the \"find_xyz()\" routines take \"const char *\" as per Clay Culver's suggestion.\n       -- Fixed an embarassing typo in the manual concerning the hashes.  Thank's Clay for finding it!\n       -- Fixed rand_prime() so that it makes primes bigger than the setting you give.  For example,\n          if you want a 1024-bit prime it would make a 1023-bit one.  Now it ensures that the prime\n          it makes is always greater than 2^(8n) (n == bytes in prime).  This doesn't have a huge\n          impact on security but I corrected it just the same.\n       -- Fixed the CTR routine to work on platforms where char != 8-bits \n       -- Fixed sha1/sha256/md5/blowfish to not assume \"unsigned long == 32-bits\", Basically any operation with carries\n          I \"AND\" with 0xFFFFFFFF.  That forces only the lower 32-bits to have information in it.  On x86 platforms\n          most compilers optimize out the AND operation since its a nop.\n\nJanuary 16th, 2002\nv0.32  -- Made Rijndael's setup function fully static so it is thread safe\n       -- Svante Seleborg suggested a cosmetic style fixup for aes.c, \n          basically to remove some of the #defines to clean it up\n       -- Made the PK routines not export the ASCII version of the names of ciphers/hashes which makes\n          the PK message formats *incompatible* with previous releases.\n       -- Merge in Zlib :-)\n \n  \nJanuary 15th, 2002\nv0.31  -- The RSA routines can now use CRT to speed up decryption/signatures.  The routines are backwards \n          compatible with previous releases.\n       -- Fixed another bug that Svante Seleborg found.  Basically you could buffer-overrun the \n          rsa_exptmod() function itself if you're not careful.  That's fixed now.  Fixed another bug in\n          rsa_exptmod() where if it knows the buffer you passed is too small it wouldn't free all used \n          memory.       \n       -- improved the readability of the PK import/export functions\n       -- Added a fix to RSA.C by Clay Culver\n       -- Changed the CONST64 macro for MSVC to use the \"unsigned __int64\" type, e.g. \"ui64\" instead of \"i64\".\n\nJanuary 14th, 2002\nv0.30  -- Major change to the Yarrow PRNG code, fixed a bug that Eugene Starokoltsev found.\n          Basically if you added entropy to the pool in small increments it could in fact\n          cancel out.  Now I hash the pool with the new data which is way smarter.\n\nJanuary 12th, 2002\nv0.29  -- Added MPI code written by Svante Seleborg to the library.  This will make the PK code much\n          easier to follow and debug.  Actually I've already fixed a memory leak in dh_shared_secret().\n       -- Memory leaks found and correct in all three PK routines.  The leaks would occur when a bignum\n          operation fails so it wouldn't normally turn up in the course of a program\n       -- Fixed bugs in dh_key_size and ecc_key_size which would return garbage for invalid key idx'es\n\nJanuary 11th, 2002\nv0.28  -- Cleaned up some code so that it doesn't assume \"char == 8bits\".  Mainly SAFER+ has been \n          changed.\n       -- ***HUGE*** changes in the PK code.  I check all return values in the bignum code so if there\n          are errors [insufficient memory, etc..] it will be reported.  This makes the code fairly more\n          robust and likely to catch any errors.\n       -- Updated the is_prime() function to use a new prototype [it can return errors now] and it also\n          does trial divisions against more primes before the Rabin Miller steps\n       -- Added OFB, CFB and ECB generic wrappers for the symmetric ciphers to round out the implementations.\n       -- Added Xtea to the list of ciphers, to the best of my ability I have verified this implementation.\n          I should note that there is not alot of concrete information about the cipher.  \"Ansi C\" versions\n          I found did not address endianess and were not even portable!.  This code is portable and to the\n          best of my knowledge implements the Xtea algorithm as per the [short] X-Tea paper.\n       -- Reformated the manual to include the **FULL** source code optimized to be pritable.\n\nJanuary 9th, 2002\nv0.27  -- Changed the char constants to numerical values.  It is backwards compatible and should work on\n          platforms where 'd' != 100 [for example].\n       -- Made a change to rand_prime() which takes the input length as a signed type so you can pass\n          a negative len to get a \"3 mod 4\" style prime... oops\n       -- changed the MSVC makefile to build with a warning level of three, no warnings!\n\nJanuary 8th, 2002\nv0.26  -- updated SHA-256 to use ROR() for a rotate so 64-bit machines won't corrupt\n          the output\n       -- Changed #include <> to #include \"\" for local .h files as per Richard Heathfields' suggestions.\n       -- Fixed bug in MPI [well bug in MSVC] that compiled code incorrectly in mp_set_int()\n          I added a work around that catches the error and continues normally.\n\nJanuary 8th, 2002\nv0.25  -- Added a stupid define so MSVC 6.00 can build the library.\n       -- Big thanks to sci.crypt and \"Ajay K. Agrawal\" for helping me port this to MSVC\n\nJanuary 7th, 2002\nv0.24  -- Sped up Blowfish by unrolling and removing the swaps.\n       -- Made the code comply with more traditional ANSI C standards\n          Should compile with MSVC with less errors\n       -- moved the demos and documentation into their own directories\n          so you can easily build the library with other tool chains\n          by compiling the files in the root\n       -- converted functions with length of outputs to use \n          \"unsigned long\" so 16-bit platforms will like this library more.\n\nJanuary 5th, 2002\nv0.23  -- Fixed a small error in the MPI config it should build fine anywhere.\n\nJanuary 4th, 2002\nv0.22  -- faster gf_mul() code\n       -- gf_shl() and gf_shr() are safe on 64-bit platforms now\n       -- Fixed an error in the hashes that Brian Gladman found.  \n          Basically if the message has exactly 56 bytes left to be \n          compressed I handled them incorrectly.\n\nJanuary 4th, 2002\nv0.21  -- sped up the ECC code by removing redundant divisions in the \n          point add and double routines.  I also extract the bits more\n          efficiently in \"ecc_mulmod()\" now.\n       -- sped up [and documented] the rand_prime() function.  Now it just\n          makes a random integer and increments by two until a prime is found\n          This is faster since it doesn't require alot of calls to the PRNG and\n          it doesn't require loading huge integers over and over.  rand_prime()\n          can also make primes congruent to 3 mod 4 [i.e for a blum integer]\n       -- added a gf_sqrt() function that finds square roots in a GF(2^w) field\n       -- fixed a bug in gf_div() that would return the wrong results if the divisor had a greator\n          divisor than the dividend.\n\nJanuary 4th, 2002\nv0.20  -- Added the fixed MPI back in so RSA and DH are much faster again\n\nv0.19  -- Updated the manual to reflect the fact that Brian Gladman wrote the AES and Serpent code.\n       -- DH, ECC and RSA signature/decryption functions check if the key is private\n       -- new DH signature/verification code works just like the RSA/ECC versions\n\nJanuary 3rd, 2002\nv0.18  -- Added way more comments to each .C file \n       -- fixed a bug in cbc_decrypt(pt, ct, key) where pt == ct [i.e same buffer]\n       -- fixed RC5 so it reads the default rounds out of the cipher_descriptor table\n       -- cleaned up ecc_export()\n       -- Cleaned up dh_import() and ecc_import() which also perform more \n          error checking now\n       -- Fixed a serious flaw in rsa_import() with private keys.\n\nJanuary 2nd, 2002\nv0.17  -- Fixed a bug in the random prime generator that fixes the wrong bits to one\n       -- ECC and DH code verify that the moduli and orders are in fact prime.  That \n          slows down the test routines alot but what are you gonna do? \n       -- Fixed a huge bug in the mp_exptmod() function which incorrectly calculates g^x mod p for some\n          values of p.  I replaced it with a slow function.  Once the author of MPI fixes his faster routine\n          I will switch back.\n  \nJanuary 1st, 2002 [whoa new year!]\nv0.16  -- Improved GF division code that is faster.\n       -- documented the GF code\n\nDecember 31st, 2001\nv0.15  -- A 1792-bit and 2048-bit DH setting was added.  Took me all night to \n          find a 1792 and 2048-bit strong prime but what the heck\n       -- Library now has polynomial-basis GF(2^w) routines I wrote myself.  Can be used to perform\n          ECC over GF(2^w) later on....\n       -- Fixed a bug with the defines that allows it to build in windows\n       \nDecember 30th, 2001\nv0.14  -- Fixed the xxx_encrypt() packet routines to make an IV of appropriate size \n          for the cipher used.  It was defaulting to making a 256-bit IV...\n       -- base64_encode() now appends a NULL byte, um \"duh\" stupid mistake now fixed...\n       -- spell checked the manual again... :-)\n\nDecember 30th, 2001\nv0.13  -- Switching back to older copy of MPI since it works! arrg..\n       -- Added sign/verify functions for ECC\n       -- all signature verification routines default to invalid signatures.\n       -- Changed all calls to memset to zeromem.  Fixed up some buffer problems \n          in other routines.  All calls to zeromem let the compiler determine the size\n          of the data to wipe.\n\nDecember 29th, 2001\nv0.12  -- Imported a new version of MPI [the bignum library] that should\n          be a bit more stable [if you want to write your own bignum\n          routines with the library that is...]\n       -- Manual has way more info\n       -- hash_file() clears stack now [like it should]\n       -- The artificial cap on the hash input size of 2^32 bits has been\n          removed.  Basically I was too lazy todo 64-bit math before\n          [don't ask why... I can't remember].  Anyways the hashes\n          support the size of 2^64 bits [if you ever use that many bits in a message\n          that's just wierd...]\n       -- The hashes now wipe the \"hash_state\" after the digest is computed.  This helps\n          prevent the internal state of the hash being leaked accidently [i.e stack problems]\n\nDecember 29th, 2001\nv0.11  -- Made #define's so you can trim the library down by removing\n          ciphers, hashs, modes of operation, prngs, and even PK algorithms\n          For example, the library with rijndael+ctr+sha1+ECC is 91KB compared\n          to the 246kb the full library takes.\n       -- Added ECC packet routines for encrypt/decrypt/sign/verify much akin to\n          the RSA packet routines.\n       -- ECC now compresses the public key, a ECC-192 public key takes 33 bytes \n          for example....\n\nDecember 28th, 2001\nv0.10  -- going to restart the manual from scratch to make it more \n          clear and professional\n       -- Added ECC over Z/pZ.  Basically provides as much as DH\n          except its faster since the numbers are smaller.  For example,\n          A comparable 256-bit ECC key provides as much security as expected\n          from a DH key over 1024-bits.\n       -- Cleaned up the DH code to not export the symbol \"sets[]\"\n       -- Fixed a bug in the DH code that would not make the correct size \n          random string if you made the key short.  For instance if you wanted \n          a 512-bit DH key it would make a 768-bit one but only make up 512-bits \n          for the exponent... now it makes the full 768 bits [or whatever the case \n          is]\n       -- Fixed another ***SERIOUS*** bug in the DH code that would default to 768-bit\n          keys by mistake.\n\nDecember 25th, 2001\nv0.09  -- Includes a demo program called file_crypt which shows off\n          how to use the library to make a command line tool which\n          allows the user to encode/decode a file with any\n          hash (on the passphrase) and cipher in CTR mode.\n       -- Switched everything to use typedef's now to clear up the code.\n       -- Added AES (128/192 and 256 bit key modes)\n\nDecember 24th, 2001\nv0.08  -- fixed a typo in the manual. MPI stores its bignums in\n          BIG endian not little.\n       -- Started adding a RNG to the library.  Right now it tries\n          to open /dev/random and if that fails it uses either the \n          MS CSP or the clock drift RNG.  It also allows callbacks \n          since the drift RNG is slow (about 3.5 bytes/sec)\n       -- the RNG can also automatically setup a PRNG as well now\n\nv0.07  -- Added basic DH routines sufficient to \n          negotiate shared secrets \n          [see the manual for a complete example!]\n       -- Fixed rsa_import to detect when the input\n          could be corrupt.  \n       -- added more to the manual.\n\nDecember 22nd, 2001\nv0.06  -- Fixed some formatting errors in \n          the hash functions [just source code cleaning]\n       -- Fixed a typo in the error message for sha256 :-)\n       -- Fixed an error in base64_encode() that \n          would fail to catch all buffer overruns\n       -- Test program times the RSA and symmetric cipher \n          routines for kicks...\n       -- Added the \"const\" modifier to alot of routines to \n          clear up the purpose of each function.\n       -- Changed the name of the library to \"TomCrypt\" \n          following a suggestion from a sci.crypt reader....\n\nv0.05  -- Fixed the ROL/ROR macro to be safe on platforms \n          where unsigned long is not 32-bits\n       -- I have added a bit more to the documentation \n          manual \"crypt.pdf\" provided.\n       -- I have added a makefile for LCC-Win32.  It should be \n          easy to port to other LCC platforms by changing a few lines.\n       -- Ran a spell checker over the manual.\n       -- Changed the header and library from \"crypt\" to \"mycrypt\" to not\n          clash with the *nix package \"crypt\".\n\nv0.04  -- Fixed a bug in the RC5,RC6,Blowfish key schedules\n          where if the key was not a multiple of 4 bytes it would\n          not get loaded correctly.\n\nDecember 21st, 2001\n\nv0.03  -- Added Serpent to the list of ciphers.\n\nv0.02  -- Changed RC5 to only allow 12 to 24 rounds\n       -- Added more to the manual.\n\nv0.01  -- We will call this the first version.\n\n/* $Source: /cvs/libtom/libtomcrypt/changes,v $ */\n/* $Revision: 1.288 $ */\n/* $Date: 2007/05/12 14:37:41 $ */\n\n"
        },
        {
          "name": "cmake-format.py",
          "type": "blob",
          "size": 8.2099609375,
          "content": "# ----------------------------------\n# Options affecting listfile parsing\n# ----------------------------------\nwith section(\"parse\"):\n\n  # Specify structure for custom cmake functions\n  additional_commands = { 'foo': { 'flags': ['BAR', 'BAZ'],\n             'kwargs': {'DEPENDS': '*', 'HEADERS': '*', 'SOURCES': '*'}}}\n\n  # Override configurations per-command where available\n  override_spec = {}\n\n  # Specify variable tags.\n  vartags = []\n\n  # Specify property tags.\n  proptags = []\n\n# -----------------------------\n# Options affecting formatting.\n# -----------------------------\nwith section(\"format\"):\n\n  # Disable formatting entirely, making cmake-format a no-op\n  disable = False\n\n  # How wide to allow formatted cmake files\n  line_width = 100\n\n  # How many spaces to tab for indent\n  tab_size = 4\n\n  # If true, lines are indented using tab characters (utf-8 0x09) instead of\n  # <tab_size> space characters (utf-8 0x20). In cases where the layout would\n  # require a fractional tab character, the behavior of the  fractional\n  # indentation is governed by <fractional_tab_policy>\n  use_tabchars = False\n\n  # If <use_tabchars> is True, then the value of this variable indicates how\n  # fractional indentions are handled during whitespace replacement. If set to\n  # 'use-space', fractional indentation is left as spaces (utf-8 0x20). If set\n  # to `round-up` fractional indentation is replaced with a single tab character\n  # (utf-8 0x09) effectively shifting the column to the next tabstop\n  fractional_tab_policy = 'use-space'\n\n  # If an argument group contains more than this many sub-groups (parg or kwarg\n  # groups) then force it to a vertical layout.\n  max_subgroups_hwrap = 2\n\n  # If a positional argument group contains more than this many arguments, then\n  # force it to a vertical layout.\n  max_pargs_hwrap = 6\n\n  # If a cmdline positional group consumes more than this many lines without\n  # nesting, then invalidate the layout (and nest)\n  max_rows_cmdline = 2\n\n  # If true, separate flow control names from their parentheses with a space\n  separate_ctrl_name_with_space = False\n\n  # If true, separate function names from parentheses with a space\n  separate_fn_name_with_space = False\n\n  # If a statement is wrapped to more than one line, than dangle the closing\n  # parenthesis on its own line.\n  dangle_parens = True\n\n  # If the trailing parenthesis must be 'dangled' on its on line, then align it\n  # to this reference: `prefix`: the start of the statement,  `prefix-indent`:\n  # the start of the statement, plus one indentation  level, `child`: align to\n  # the column of the arguments\n  dangle_align = 'prefix'\n\n  # If the statement spelling length (including space and parenthesis) is\n  # smaller than this amount, then force reject nested layouts.\n  min_prefix_chars = 4\n\n  # If the statement spelling length (including space and parenthesis) is larger\n  # than the tab width by more than this amount, then force reject un-nested\n  # layouts.\n  max_prefix_chars = 10\n\n  # If a candidate layout is wrapped horizontally but it exceeds this many\n  # lines, then reject the layout.\n  max_lines_hwrap = 2\n\n  # What style line endings to use in the output.\n  line_ending = 'unix'\n\n  # Format command names consistently as 'lower' or 'upper' case\n  command_case = 'lower'\n\n  # Format keywords consistently as 'lower' or 'upper' case\n  keyword_case = 'upper'\n\n  # A list of command names which should always be wrapped\n  always_wrap = []\n\n  # If true, the argument lists which are known to be sortable will be sorted\n  # lexicographicall\n  enable_sort = True\n\n  # If true, the parsers may infer whether or not an argument list is sortable\n  # (without annotation).\n  autosort = False\n\n  # By default, if cmake-format cannot successfully fit everything into the\n  # desired linewidth it will apply the last, most agressive attempt that it\n  # made. If this flag is True, however, cmake-format will print error, exit\n  # with non-zero status code, and write-out nothing\n  require_valid_layout = False\n\n  # A dictionary mapping layout nodes to a list of wrap decisions. See the\n  # documentation for more information.\n  layout_passes = {}\n\n# ------------------------------------------------\n# Options affecting comment reflow and formatting.\n# ------------------------------------------------\nwith section(\"markup\"):\n\n  # What character to use for bulleted lists\n  bullet_char = '*'\n\n  # What character to use as punctuation after numerals in an enumerated list\n  enum_char = '.'\n\n  # If comment markup is enabled, don't reflow the first comment block in each\n  # listfile. Use this to preserve formatting of your copyright/license\n  # statements.\n  first_comment_is_literal = False\n\n  # If comment markup is enabled, don't reflow any comment block which matches\n  # this (regex) pattern. Default is `None` (disabled).\n  literal_comment_pattern = None\n\n  # Regular expression to match preformat fences in comments default=\n  # ``r'^\\s*([`~]{3}[`~]*)(.*)$'``\n  fence_pattern = '^\\\\s*([`~]{3}[`~]*)(.*)$'\n\n  # Regular expression to match rulers in comments default=\n  # ``r'^\\s*[^\\w\\s]{3}.*[^\\w\\s]{3}$'``\n  ruler_pattern = '^\\\\s*[^\\\\w\\\\s]{3}.*[^\\\\w\\\\s]{3}$'\n\n  # If a comment line matches starts with this pattern then it is explicitly a\n  # trailing comment for the preceeding argument. Default is '#<'\n  explicit_trailing_pattern = '#<'\n\n  # If a comment line starts with at least this many consecutive hash\n  # characters, then don't lstrip() them off. This allows for lazy hash rulers\n  # where the first hash char is not separated by space\n  hashruler_min_length = 10\n\n  # If true, then insert a space between the first hash char and remaining hash\n  # chars in a hash ruler, and normalize its length to fill the column\n  canonicalize_hashrulers = True\n\n  # enable comment markup parsing and reflow\n  enable_markup = True\n\n# ----------------------------\n# Options affecting the linter\n# ----------------------------\nwith section(\"lint\"):\n\n  # a list of lint codes to disable\n  disabled_codes = []\n\n  # regular expression pattern describing valid function names\n  function_pattern = '[0-9a-z_]+'\n\n  # regular expression pattern describing valid macro names\n  macro_pattern = '[0-9A-Z_]+'\n\n  # regular expression pattern describing valid names for variables with global\n  # (cache) scope\n  global_var_pattern = '[A-Z][0-9A-Z_]+'\n\n  # regular expression pattern describing valid names for variables with global\n  # scope (but internal semantic)\n  internal_var_pattern = '_[A-Z][0-9A-Z_]+'\n\n  # regular expression pattern describing valid names for variables with local\n  # scope\n  local_var_pattern = '[a-z][a-z0-9_]+'\n\n  # regular expression pattern describing valid names for privatedirectory\n  # variables\n  private_var_pattern = '_[0-9a-z_]+'\n\n  # regular expression pattern describing valid names for public directory\n  # variables\n  public_var_pattern = '[A-Z][0-9A-Z_]+'\n\n  # regular expression pattern describing valid names for function/macro\n  # arguments and loop variables.\n  argument_var_pattern = '[a-z][a-z0-9_]+'\n\n  # regular expression pattern describing valid names for keywords used in\n  # functions or macros\n  keyword_pattern = '[A-Z][0-9A-Z_]+'\n\n  # In the heuristic for C0201, how many conditionals to match within a loop in\n  # before considering the loop a parser.\n  max_conditionals_custom_parser = 2\n\n  # Require at least this many newlines between statements\n  min_statement_spacing = 1\n\n  # Require no more than this many newlines between statements\n  max_statement_spacing = 2\n  max_returns = 6\n  max_branches = 12\n  max_arguments = 5\n  max_localvars = 15\n  max_statements = 50\n\n# -------------------------------\n# Options affecting file encoding\n# -------------------------------\nwith section(\"encode\"):\n\n  # If true, emit the unicode byte-order mark (BOM) at the start of the file\n  emit_byteorder_mark = False\n\n  # Specify the encoding of the input file. Defaults to utf-8\n  input_encoding = 'utf-8'\n\n  # Specify the encoding of the output file. Defaults to utf-8. Note that cmake\n  # only claims to support utf-8 so be careful when using anything else\n  output_encoding = 'utf-8'\n\n# -------------------------------------\n# Miscellaneous configurations options.\n# -------------------------------------\nwith section(\"misc\"):\n\n  # A dictionary containing any per-command configuration overrides. Currently\n  # only `command_case` is supported.\n  per_command = {}\n\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "coverity.sh",
          "type": "blob",
          "size": 0.9912109375,
          "content": "#!/bin/bash\n\nif [ $# -lt 2 ]\nthen\n  echo \"usage is: ${0##*/} <path to coverity scan> <extra compiler options>\"\n  echo \"e.g. \\\"${0##*/} \\\"/usr/local/bin/coverity\\\" \\\"-DLTM_DESC -I/path/to/libtommath/\\\"\\\"\"\n  exit -1\nfi\n\nPATH=$PATH:$1/bin\n\nmake clean\nrm -r cov-int/\n\nmyCflags=\"\"\nmyCflags=\"$myCflags -O2 ${2}\"\nmyCflags=\"$myCflags -pipe -Werror -Wpointer-arith -Winit-self -Wextra -Wall -Wformat -Wformat-security\"\n\nCFLAGS=\"$myCflags\" cov-build --dir cov-int  make -f makefile.unix $MAKE_OPTS IGNORE_SPEED=1 1>gcc_1.txt\n\nif [ $? -ne 0 ]\nthen\n  echo \"make failed\"\n  exit -1\nfi\n\n# zipup everything\ntar caf libtomcrypt.lzma cov-int\n\nmytoken=$(cat .coverity_token)\nmymail=$(cat .coverity_mail)\nmyversion=$(git describe --dirty)\n\ncurl -k --form project=libtomcrypt \\\n  --form token=${mytoken} \\\n  --form email=${mymail} \\\n  --form file=@libtomcrypt.lzma \\\n  --form version=\\\"${myversion}\\\" \\\n  --form description=\"\\\"libtomcrypt version ${myversion}\\\"\" \\\n  https://scan.coverity.com/builds?project=libtom%2Flibtomcrypt\n\n# EOF\n"
        },
        {
          "name": "demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "helper.pl",
          "type": "blob",
          "size": 16.98828125,
          "content": "#!/usr/bin/env perl\n\nuse strict;\nuse warnings;\n\nuse Getopt::Long;\nuse File::Find 'find';\nuse File::Basename 'basename';\nuse File::Glob 'bsd_glob';\n\nsub read_file {\n  my $f = shift;\n  open my $fh, \"<\", $f or die \"FATAL: read_rawfile() cannot open file '$f': $!\";\n  binmode $fh;\n  return do { local $/; <$fh> };\n}\n\nsub write_file {\n  my ($f, $data) = @_;\n  die \"FATAL: write_file() no data\" unless defined $data;\n  open my $fh, \">\", $f or die \"FATAL: write_file() cannot open file '$f': $!\";\n  binmode $fh;\n  print $fh $data or die \"FATAL: write_file() cannot write to '$f': $!\";\n  close $fh or die \"FATAL: write_file() cannot close '$f': $!\";\n  return;\n}\n\nsub check_source {\n  my @all_files = (bsd_glob(\"makefile*\"), bsd_glob(\"*.sh\"), bsd_glob(\"*.pl\"));\n  find({ wanted=>sub { push @all_files, $_ if -f $_ }, no_chdir=>1 }, qw/src tests demos/);\n\n  my $fails = 0;\n  for my $file (sort @all_files) {\n    next unless $file =~ /\\.(c|h|pl|py|sh)$/ || basename($file) =~ /^makefile/i;\n    my $troubles = {};\n    my $lineno = 1;\n    my $content = read_file($file);\n    push @{$troubles->{crlf_line_end}}, '?' if $content =~ /\\r/;\n    for my $l (split /\\n/, $content) {\n      push @{$troubles->{merge_conflict}},   $lineno if $l =~ /^(<<<<<<<|=======|>>>>>>>)([^<=>]|$)/;\n      push @{$troubles->{trailing_space}},   $lineno if $l =~ / $/;\n      push @{$troubles->{tab}},              $lineno if $l =~ /\\t/ && basename($file) !~ /^makefile/i;\n      push @{$troubles->{non_ascii_char}},   $lineno if $l =~ /[^[:ascii:]]/;\n      push @{$troubles->{cpp_comment}},      $lineno if $file =~ /\\.(c|h)$/ && ($l =~ /\\s\\/\\// || $l =~ /\\/\\/\\s/);\n      # in ./src we prefer using XMEMCPY, XMALLOC, XFREE ...\n      push @{$troubles->{unwanted_memcpy}},  $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bmemcpy\\s*\\(/;\n      push @{$troubles->{unwanted_malloc}},  $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bmalloc\\s*\\(/;\n      push @{$troubles->{unwanted_realloc}}, $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\brealloc\\s*\\(/;\n      push @{$troubles->{unwanted_calloc}},  $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bcalloc\\s*\\(/;\n      push @{$troubles->{unwanted_free}},    $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /[^>.]\\bfree\\s*\\(/;\n      push @{$troubles->{unwanted_memset}},  $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bmemset\\s*\\(/;\n      push @{$troubles->{unwanted_memcpy}},  $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bmemcpy\\s*\\(/;\n      push @{$troubles->{unwanted_memmove}}, $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bmemmove\\s*\\(/;\n      push @{$troubles->{unwanted_memcmp}},  $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bmemcmp\\s*\\(/;\n      push @{$troubles->{unwanted_strcmp}},  $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bstrcmp\\s*\\(/;\n      push @{$troubles->{unwanted_strcpy}},  $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bstrcpy\\s*\\(/;\n      push @{$troubles->{unwanted_strlen}},  $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bstrlen\\s*\\(/;\n      push @{$troubles->{unwanted_strncpy}}, $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bstrncpy\\s*\\(/;\n      push @{$troubles->{unwanted_clock}},   $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bclock\\s*\\(/;\n      push @{$troubles->{unwanted_qsort}},   $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bqsort\\s*\\(/;\n      push @{$troubles->{sizeof_no_brackets}}, $lineno if $file =~ /^src\\/.*\\.c$/ && $l =~ /\\bsizeof\\s*[^\\(]/;\n      if ($file =~ m|src/.*\\.c$| &&\n          $file !~ m|src/ciphers/.*\\.c$| &&\n          $file !~ m|src/math/.+_desc.c$| &&\n          $file !~ m|src/pk/ec25519/tweetnacl.c$| &&\n          $file !~ m|src/stream/sober128/sober128_stream.c$| &&\n          $l =~ /^static(\\s+[a-zA-Z0-9_]+)+\\s++([^s][a-zA-Z0-9_]+)\\s*\\(/) {\n        push @{$troubles->{staticfunc_name}}, \"$2\";\n      }\n      if ($file =~ m|src/.*\\.[ch]$| && $l =~ /^\\s*#\\s*define\\s+(_[A-Z_][a-zA-Z0-9_]*)\\b/) {\n        my $n = $1;\n        push @{$troubles->{invalid_macro_name}}, \"$lineno($n)\"\n                unless ($file eq 'src/headers/tomcrypt_cfg.h' &&  $n eq '__has_builtin') ||\n                       ($file eq 'src/headers/tomcrypt_cfg.h' &&  $n eq '_WIN32_WINNT') ||\n                       ($file eq 'src/prngs/rng_get_bytes.c' &&  $n eq '_WIN32_WINNT');\n      }\n      $lineno++;\n    }\n    for my $k (sort keys %$troubles) {\n      warn \"[$k] $file line:\" . join(\",\", @{$troubles->{$k}}) . \"\\n\";\n      $fails++;\n    }\n  }\n\n  warn( $fails > 0 ? \"check-source:    FAIL $fails\\n\" : \"check-source:    PASS\\n\" );\n  return $fails;\n}\n\nsub check_defines {\n  my $fails = 0;\n  my $cust_h = read_file(\"src/headers/tomcrypt_custom.h\");\n  my $cryp_c = read_file(\"src/misc/crypt/crypt.c\");\n  $cust_h =~ s|/\\*.*?\\*/||sg; # remove comments\n  $cryp_c =~ s|/\\*.*?\\*/||sg; # remove comments\n  my %def = map { $_ => 1 } map { my $x = $_; $x =~ s/^\\s*#define\\s+(LTC_\\S+).*$/$1/; $x } grep { /^\\s*#define\\s+LTC_\\S+/ } split /\\n/, $cust_h;\n  for my $d (sort keys %def) {\n    next if $d =~ /^LTC_(DH\\d+|ECC\\d+|ECC_\\S+|MPI|MUTEX_\\S+\\(x\\)|NO_\\S+)$/;\n    warn \"$d missing in src/misc/crypt/crypt.c\\n\" and $fails++ if $cryp_c !~ /\\Q$d\\E/;\n  }\n  warn( $fails > 0 ? \"check-defines:   FAIL $fails\\n\" : \"check-defines:   PASS\\n\" );\n  return $fails;\n}\n\nsub check_descriptor {\n  my $which = shift;\n  my $what = shift;\n  my @src;\n  my @descriptors;\n  find({ wanted => sub { push @src, $_ if $_ =~ /\\.c$/ }, no_chdir=>1 }, \"./src/${which}/\");\n  for my $f (@src) {\n    my @n = map { my $x = $_; $x =~ s/^.*?ltc_${what}_descriptor\\s+(\\S+).*$/$1/; $x } grep { $_ =~ /ltc_${what}_descriptor/ } split /\\n/, read_file($f);\n    push @descriptors, @n if @n;\n  }\n  my $fails = 0;\n  for my $d (@descriptors) {\n    for my $f (\"./src/misc/crypt/crypt_register_all_${which}.c\") {\n      my $txt = read_file($f);\n      warn \"$d missing in $f\\n\" and $fails++ if $txt !~ /\\Q$d\\E/;\n    }\n  }\n  for my $d (@descriptors) {\n    for my $f (\"./tests/test.c\") {\n      my $txt = read_file($f);\n      warn \"$d missing in $f\\n\" and $fails++ if $txt !~ /\\Q$d\\E/;\n    }\n  }\n  my $name = sprintf(\"%-17s\", \"check-${which}:\");\n  warn( $fails > 0 ? \"${name}FAIL $fails\\n\" : \"${name}PASS\\n\" );\n  return $fails;\n}\n\nsub check_descriptors {\n  my $fails = 0;\n  $fails = $fails + check_descriptor(\"ciphers\", \"cipher\");\n  $fails = $fails + check_descriptor(\"hashes\", \"hash\");\n  $fails = $fails + check_descriptor(\"prngs\", \"prng\");\n  return $fails;\n}\n\nsub check_comments {\n  my $fails = 0;\n  my $first_comment = <<'MARKER';\n/* LibTomCrypt, modular cryptographic library -- Tom St Denis */\n/* SPDX-License-Identifier: Unlicense */\nMARKER\n  my @all_files;\n  find({ wanted=> sub { push @all_files, $_ if $_ =~ /\\.(c|h)$/ }, no_chdir=>1 }, 'demos', 'src', 'tests');\n  for my $f (@all_files) {\n    my $txt = read_file($f);\n    if ($txt !~ /^\\Q$first_comment\\E/s) {\n      warn \"[first_comment] $f\\n\";\n      $fails++;\n    }\n  }\n  warn( $fails > 0 ? \"check-comments:  FAIL $fails\\n\" : \"check-comments:  PASS\\n\" );\n  return $fails;\n}\n\nsub prepare_variable {\n  my ($varname, @list) = @_;\n  my $output = \"$varname=\";\n  my $len = length($output);\n  foreach my $obj (sort @list) {\n    $len = $len + length $obj;\n    $obj =~ s/\\*/\\$/;\n    if ($len > 100) {\n      $output .= \"\\\\\\n\";\n      $len = length $obj;\n    }\n    $output .= $obj . ' ';\n  }\n  $output =~ s/ $//;\n  return $output;\n}\n\nsub prepare_msvc_files_xml {\n  my ($all, $exclude_re, $targets) = @_;\n  my $last = [];\n  my $depth = 2;\n\n  # sort files in the same order as visual studio (ugly, I know)\n  my @parts = ();\n  for my $orig (@$all) {\n    my $p = $orig;\n    $p =~ s|/|/~|g;\n    $p =~ s|/~([^/]+)$|/$1|g;\n    # now we have: 'src/pk/rsa/rsa_verify_hash.c' > 'src/~pk/~rsa/rsa_verify_hash.c'\n    my @l = map { sprintf \"% -99s\", $_ } split /\\//, $p;\n    push @parts, [ $orig, join(':', @l) ];\n  }\n  my @sorted = map { $_->[0] } sort { $a->[1] cmp $b->[1] } @parts;\n\n  my $files = \"<Files>\\r\\n\";\n  for my $full (@sorted) {\n    my @items = split /\\//, $full; # split by '/'\n    $full =~ s|/|\\\\|g;             # replace '/' bt '\\'\n    shift @items; # drop first one (src)\n    pop @items;   # drop last one (filename.ext)\n    my $current = \\@items;\n    if (join(':', @$current) ne join(':', @$last)) {\n      my $common = 0;\n      $common++ while ($last->[$common] && $current->[$common] && $last->[$common] eq $current->[$common]);\n      my $back = @$last - $common;\n      if ($back > 0) {\n        $files .= (\"\\t\" x --$depth) . \"</Filter>\\r\\n\" for (1..$back);\n      }\n      my $fwd = [ @$current ]; splice(@$fwd, 0, $common);\n      for my $i (0..scalar(@$fwd) - 1) {\n        $files .= (\"\\t\" x $depth) . \"<Filter\\r\\n\";\n        $files .= (\"\\t\" x $depth) . \"\\tName=\\\"$fwd->[$i]\\\"\\r\\n\";\n        $files .= (\"\\t\" x $depth) . \"\\t>\\r\\n\";\n        $depth++;\n      }\n      $last = $current;\n    }\n    $files .= (\"\\t\" x $depth) . \"<File\\r\\n\";\n    $files .= (\"\\t\" x $depth) . \"\\tRelativePath=\\\"$full\\\"\\r\\n\";\n    $files .= (\"\\t\" x $depth) . \"\\t>\\r\\n\";\n    if ($full =~ $exclude_re) {\n      for (@$targets) {\n        $files .= (\"\\t\" x $depth) . \"\\t<FileConfiguration\\r\\n\";\n        $files .= (\"\\t\" x $depth) . \"\\t\\tName=\\\"$_\\\"\\r\\n\";\n        $files .= (\"\\t\" x $depth) . \"\\t\\tExcludedFromBuild=\\\"true\\\"\\r\\n\";\n        $files .= (\"\\t\" x $depth) . \"\\t\\t>\\r\\n\";\n        $files .= (\"\\t\" x $depth) . \"\\t\\t<Tool\\r\\n\";\n        $files .= (\"\\t\" x $depth) . \"\\t\\t\\tName=\\\"VCCLCompilerTool\\\"\\r\\n\";\n        $files .= (\"\\t\" x $depth) . \"\\t\\t\\tAdditionalIncludeDirectories=\\\"\\\"\\r\\n\";\n        $files .= (\"\\t\" x $depth) . \"\\t\\t\\tPreprocessorDefinitions=\\\"\\\"\\r\\n\";\n        $files .= (\"\\t\" x $depth) . \"\\t\\t/>\\r\\n\";\n        $files .= (\"\\t\" x $depth) . \"\\t</FileConfiguration>\\r\\n\";\n      }\n    }\n########### aes_enc \"hack\" disabled - discussion: https://github.com/libtom/libtomcrypt/pull/158\n#    if ($full eq 'src\\ciphers\\aes\\aes.c') { #hack\n#      my %cmd = (\n#        'Debug|Win32'   => [ 'Debug/aes.obj;Debug/aes_enc.obj', 'cl /nologo /MLd /W3 /Gm /GX /ZI /Od /I &quot;src\\headers&quot; /I &quot;..\\libtommath&quot; /D &quot;_DEBUG&quot; /D &quot;LTM_DESC&quot; /D &quot;WIN32&quot; /D &quot;_MBCS&quot; /D &quot;_LIB&quot; /D &quot;LTC_SOURCE&quot; /D &quot;USE_LTM&quot; /Fp&quot;Debug/libtomcrypt.pch&quot; /YX /Fo&quot;Debug/&quot; /Fd&quot;Debug/&quot; /FD /GZ /c $(InputPath)&#x0D;&#x0A;cl /nologo /DENCRYPT_ONLY /MLd /W3 /Gm /GX /ZI /Od /I &quot;src\\headers&quot; /I &quot;..\\libtommath&quot; /D &quot;_DEBUG&quot; /D &quot;LTM_DESC&quot; /D &quot;WIN32&quot; /D &quot;_MBCS&quot; /D &quot;_LIB&quot; /D &quot;LTC_SOURCE&quot; /D &quot;USE_LTM&quot; /Fp&quot;Debug/libtomcrypt.pch&quot; /YX /Fo&quot;Debug/aes_enc.obj&quot; /Fd&quot;Debug/&quot; /FD /GZ /c $(InputPath)&#x0D;&#x0A;' ],\n#        'Release|Win32' => [ 'Release/aes.obj;Release/aes_enc.obj', 'cl /nologo /MLd /W3 /Gm /GX /ZI /Od /I &quot;src\\headers&quot; /I &quot;..\\libtommath&quot; /D &quot;_DEBUG&quot; /D &quot;LTM_DESC&quot; /D &quot;WIN32&quot; /D &quot;_MBCS&quot; /D &quot;_LIB&quot; /D &quot;LTC_SOURCE&quot; /D &quot;USE_LTM&quot; /Fp&quot;Release/libtomcrypt.pch&quot; /YX /Fo&quot;Release/&quot; /Fd&quot;Release/&quot; /FD /GZ /c $(InputPath)&#x0D;&#x0A;cl /nologo /DENCRYPT_ONLY /MLd /W3 /Gm /GX /ZI /Od /I &quot;src\\headers&quot; /I &quot;..\\libtommath&quot; /D &quot;_DEBUG&quot; /D &quot;LTM_DESC&quot; /D &quot;WIN32&quot; /D &quot;_MBCS&quot; /D &quot;_LIB&quot; /D &quot;LTC_SOURCE&quot; /D &quot;USE_LTM&quot; /Fp&quot;Release/libtomcrypt.pch&quot; /YX /Fo&quot;Release/aes_enc.obj&quot; /Fd&quot;Release/&quot; /FD /GZ /c $(InputPath)&#x0D;&#x0A;' ],\n#      );\n#      for (@$targets) {\n#        next unless $cmd{$_};\n#        $files .= (\"\\t\" x $depth) . \"\\t<FileConfiguration\\r\\n\";\n#        $files .= (\"\\t\" x $depth) . \"\\t\\tName=\\\"$_\\\"\\r\\n\";\n#        $files .= (\"\\t\" x $depth) . \"\\t\\t>\\r\\n\";\n#        $files .= (\"\\t\" x $depth) . \"\\t\\t<Tool\\r\\n\";\n#        $files .= (\"\\t\" x $depth) . \"\\t\\t\\tName=\\\"VCCustomBuildTool\\\"\\r\\n\";\n#        $files .= (\"\\t\" x $depth) . \"\\t\\t\\tCommandLine=\\\"$cmd{$_}[1]\\\"\\r\\n\";\n#        $files .= (\"\\t\" x $depth) . \"\\t\\t\\tOutputs=\\\"$cmd{$_}[0]\\\"\\r\\n\";\n#        $files .= (\"\\t\" x $depth) . \"\\t\\t/>\\r\\n\";\n#        $files .= (\"\\t\" x $depth) . \"\\t</FileConfiguration>\\r\\n\";\n#      }\n#    }\n    $files .= (\"\\t\" x $depth) . \"</File>\\r\\n\";\n  }\n  $files .= (\"\\t\" x --$depth) . \"</Filter>\\r\\n\" for (@$last);\n  $files .= \"\\t</Files>\";\n  return $files;\n}\n\nsub patch_file {\n  my ($content, @variables) = @_;\n  for my $v (@variables) {\n    if ($v =~ /^([A-Z0-9_]+)\\s*=.*$/si) {\n      my $name = $1;\n      $content =~ s/\\n\\Q$name\\E\\b.*?[^\\\\]\\n/\\n$v\\n/s;\n    }\n    else {\n      die \"patch_file failed: \" . substr($v, 0, 30) . \"..\";\n    }\n  }\n  return $content;\n}\n\nsub version_from_tomcrypt_h {\n  my $h = read_file(shift);\n  if ($h =~ /\\n#define\\s*SCRYPT\\s*\"([0-9]+)\\.([0-9]+)\\.([0-9]+)(\\S*)\"/s) {\n    return \"VERSION_PC=$1.$2.$3\", \"VERSION_LT=1:1\", \"VERSION=$1.$2.$3$4\", \"PROJECT_NUMBER=$1.$2.$3$4\";\n  }\n  else {\n    die \"#define SCRYPT not found in tomcrypt.h\";\n  }\n}\n\nsub make_sources_cmake {\n  my ($list, $pub_headers) = @_;\n  my $output = \"set(SOURCES\\n\";\n\n  foreach my $obj (sort @$list) {\n    $output .= $obj . \"\\n\";\n  }\n  $output .= \")\\n\\n\";\n\n  if ($pub_headers eq \"\") {\n    return $output;\n  }\n\n  $output .= \"set(PUBLIC_HEADERS\\n\";\n\n  foreach my $obj (sort @$pub_headers) {\n    $output .= $obj . \"\\n\";\n  }\n\n  $output .= \")\\n\\nset(PRIVATE_HEADERS src/headers/tomcrypt_private.h)\\n\";\n  $output .= \"set_property(GLOBAL PROPERTY PUBLIC_HEADERS \\$\\{PUBLIC_HEADERS\\}\\)\\n\\n\";\n\n  return $output;\n}\n\nsub process_makefiles {\n  my $write = shift;\n  my $changed_count = 0;\n  my @c = ();\n  find({ no_chdir => 1, wanted => sub { push @c, $_ if -f $_ && $_ =~ /\\.c$/ && $_ !~ /tab.c$/ } }, 'src');\n  my @h = ();\n  find({ no_chdir => 1, wanted => sub { push @h, $_ if -f $_ && $_ =~ /\\.h$/ && $_ !~ /dh_static.h$/ && $_ !~ /tomcrypt_private.h$/ } }, 'src');\n  my @all = ();\n  find({ no_chdir => 1, wanted => sub { push @all, $_ if -f $_ && $_ =~ /\\.(c|h)$/  } }, 'src');\n  my @t = qw();\n  find({ no_chdir => 1, wanted => sub { push @t, $_ if $_ =~ /(common|no_prng|_tests?|test).c$/ } }, 'tests');\n\n  my @o = sort ('src/ciphers/aes/aes_enc.o', 'src/ciphers/aes/aes_enc_desc.o', map { my $x = $_; $x =~ s/\\.c$/.o/; $x } @c);\n  my $var_o = prepare_variable(\"OBJECTS\", @o);\n  my $var_h = prepare_variable(\"HEADERS_PUB\", (sort @h));\n  (my $var_obj = $var_o) =~ s/\\.o\\b/.obj/sg;\n\n  my @t_srcs = sort (map { my $x = $_; $x =~ s/^tests\\///; $x } @t);\n  my $var_to = prepare_variable(\"TOBJECTS\", sort map { my $x = $_; $x =~ s/\\.c$/.o/; $x } @t);\n  (my $var_tobj = $var_to) =~ s/\\.o\\b/.obj/sg;\n\n  my @ver_version = version_from_tomcrypt_h(\"src/headers/tomcrypt.h\");\n\n  # update MSVC project files\n  my $msvc_files = prepare_msvc_files_xml(\\@all, qr/tab\\.c$/, ['Debug|Win32', 'Release|Win32', 'Debug|x64', 'Release|x64']);\n  for my $m (qw/libtomcrypt_VS2008.vcproj/) {\n    my $old = read_file($m);\n    my $new = $old;\n    $new =~ s|<Files>.*</Files>|$msvc_files|s;\n    if ($old ne $new) {\n      write_file($m, $new) if $write;\n      warn \"changed: $m\\n\";\n      $changed_count++;\n    }\n  }\n\n  # update OBJECTS + HEADERS in makefile*\n  for my $m (qw/ makefile makefile.shared makefile.unix makefile.mingw makefile.msvc makefile_include.mk doc\\/Doxyfile sources.cmake tests\\/sources.cmake /) {\n    my $old = read_file($m);\n    my $new = $m eq 'makefile.msvc' ? patch_file($old, $var_obj, $var_h, $var_tobj, @ver_version)\n            : $m eq 'sources.cmake' ? make_sources_cmake(\\@all, \\@h)\n            : $m eq 'tests/sources.cmake' ? make_sources_cmake(\\@t_srcs, \"\")\n            :                         patch_file($old, $var_o, $var_h, $var_to, @ver_version);\n\n    if ($old ne $new) {\n      write_file($m, $new) if $write;\n      warn \"changed: $m\\n\";\n      $changed_count++;\n    }\n  }\n\n  if ($write) {\n    return 0; # no failures\n  }\n  else {\n    warn( $changed_count > 0 ? \"check-makefiles: FAIL $changed_count\\n\" : \"check-makefiles: PASS\\n\" );\n    return $changed_count;\n  }\n}\n\nsub die_usage {\n  die <<\"MARKER\";\nusage: $0 -s   OR   $0 --check-source\n       $0 -c   OR   $0 --check-descriptors\n       $0 -d   OR   $0 --check-defines\n       $0 -o   OR   $0 --check-comments\n       $0 -m   OR   $0 --check-makefiles\n       $0 -a   OR   $0 --check-all\n       $0 -u   OR   $0 --update-makefiles\n       $0 --fixupind crypt.ind\nMARKER\n}\n\nGetOptions( \"s|check-source\"        => \\my $check_source,\n            \"c|check-descriptors\"   => \\my $check_descriptors,\n            \"d|check-defines\"       => \\my $check_defines,\n            \"o|check-comments\"      => \\my $check_comments,\n            \"m|check-makefiles\"     => \\my $check_makefiles,\n            \"a|check-all\"           => \\my $check_all,\n            \"u|update-makefiles\"    => \\my $update_makefiles,\n            \"f|fixupind=s\"          => \\my $fixupind,\n            \"h|help\"                => \\my $help\n          ) or die_usage;\n\nif ($fixupind) {\n  my $txt = read_file($fixupind);\n  $txt =~ s/^([^\\n]*\\n)/$1\\n\\\\addcontentsline{toc}{chapter}{Index}\\n/s;\n  write_file($fixupind, $txt);\n  exit 0;\n}\n\nmy $failure;\n$failure ||= check_source()       if $check_all || $check_source;\n$failure ||= check_defines()      if $check_all || $check_defines;\n$failure ||= check_descriptors()  if $check_all || $check_descriptors;\n$failure ||= check_comments()     if $check_all || $check_comments;\n$failure ||= process_makefiles(0) if $check_all || $check_makefiles;\n$failure ||= process_makefiles(1) if $update_makefiles;\n\ndie_usage unless defined $failure;\nexit $failure ? 1 : 0;\n"
        },
        {
          "name": "hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "libtomcrypt.pc.in",
          "type": "blob",
          "size": 0.3232421875,
          "content": "prefix=@CMAKE_INSTALL_PREFIX@\nlibdir=${prefix}/@CMAKE_INSTALL_LIBDIR@\nincludedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@/@PROJECT_NAME@\n\nName: LibTomCrypt\nDescription: public domain open source cryptographic toolkit\nVersion: @PROJECT_VERSION@\nLibs: -L${libdir} -ltomcrypt @PKG_CONFIG_LIBS@\nCflags: -I${includedir} @PKG_CONFIG_CFLAGS@\n"
        },
        {
          "name": "libtomcrypt_VS2008.sln",
          "type": "blob",
          "size": 1.21875,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 10.00\r\n# Visual Studio 2008\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libtomcrypt\", \"libtomcrypt_VS2008.vcproj\", \"{E3802982-DCB6-4D85-A2BD-6B08F0657E79}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Win32 = Debug|Win32\r\n\t\tDebug|x64 = Debug|x64\r\n\t\tRelease|Win32 = Release|Win32\r\n\t\tRelease|x64 = Release|x64\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{E3802982-DCB6-4D85-A2BD-6B08F0657E79}.Debug|Win32.ActiveCfg = Debug|Win32\r\n\t\t{E3802982-DCB6-4D85-A2BD-6B08F0657E79}.Debug|Win32.Build.0 = Debug|Win32\r\n\t\t{E3802982-DCB6-4D85-A2BD-6B08F0657E79}.Debug|x64.ActiveCfg = Debug|x64\r\n\t\t{E3802982-DCB6-4D85-A2BD-6B08F0657E79}.Debug|x64.Build.0 = Debug|x64\r\n\t\t{E3802982-DCB6-4D85-A2BD-6B08F0657E79}.Release|Win32.ActiveCfg = Release|Win32\r\n\t\t{E3802982-DCB6-4D85-A2BD-6B08F0657E79}.Release|Win32.Build.0 = Release|Win32\r\n\t\t{E3802982-DCB6-4D85-A2BD-6B08F0657E79}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{E3802982-DCB6-4D85-A2BD-6B08F0657E79}.Release|x64.Build.0 = Release|x64\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "libtomcrypt_VS2008.vcproj",
          "type": "blob",
          "size": 60.509765625,
          "content": "<?xml version=\"1.0\" encoding=\"Windows-1252\"?>\r\n<VisualStudioProject\r\n\tProjectType=\"Visual C++\"\r\n\tVersion=\"9,00\"\r\n\tName=\"libtomcrypt\"\r\n\tProjectGUID=\"{E3802982-DCB6-4D85-A2BD-6B08F0657E79}\"\r\n\tRootNamespace=\"libtomcrypt\"\r\n\tTargetFrameworkVersion=\"0\"\r\n\t>\r\n\t<Platforms>\r\n\t\t<Platform\r\n\t\t\tName=\"Win32\"\r\n\t\t/>\r\n\t\t<Platform\r\n\t\t\tName=\"x64\"\r\n\t\t/>\r\n\t</Platforms>\r\n\t<ToolFiles>\r\n\t</ToolFiles>\r\n\t<Configurations>\r\n\t\t<Configuration\r\n\t\t\tName=\"Debug|Win32\"\r\n\t\t\tOutputDirectory=\"MSVC_$(PlatformName)_$(ConfigurationName)\"\r\n\t\t\tIntermediateDirectory=\"MSVC_$(PlatformName)_$(ConfigurationName)\\Intermediate\"\r\n\t\t\tConfigurationType=\"4\"\r\n\t\t\tUseOfMFC=\"0\"\r\n\t\t\tATLMinimizesCRunTimeLibraryUsage=\"false\"\r\n\t\t\tCharacterSet=\"0\"\r\n\t\t\t>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCPreBuildEventTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCCustomBuildTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCXMLDataGeneratorTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCMIDLTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\tOptimization=\"0\"\r\n\t\t\t\tAdditionalIncludeDirectories=\"src\\headers,..\\libtommath\"\r\n\t\t\t\tPreprocessorDefinitions=\"WIN32;_DEBUG;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_DEPRECATE;LTM_DESC;LTC_SOURCE;LTC_NO_TEST;LTC_NO_PROTOTYPES\"\r\n\t\t\t\tMinimalRebuild=\"true\"\r\n\t\t\t\tExceptionHandling=\"0\"\r\n\t\t\t\tBasicRuntimeChecks=\"3\"\r\n\t\t\t\tRuntimeLibrary=\"1\"\r\n\t\t\t\tPrecompiledHeaderFile=\"$(IntDir)\\libtomcrypt.pch\"\r\n\t\t\t\tAssemblerListingLocation=\"$(IntDir)\\\"\r\n\t\t\t\tObjectFile=\"$(IntDir)\\\"\r\n\t\t\t\tProgramDataBaseFileName=\"$(IntDir)\\\"\r\n\t\t\t\tWarningLevel=\"3\"\r\n\t\t\t\tSuppressStartupBanner=\"true\"\r\n\t\t\t\tDebugInformationFormat=\"4\"\r\n\t\t\t\tCompileAs=\"1\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCManagedResourceCompilerTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCResourceCompilerTool\"\r\n\t\t\t\tPreprocessorDefinitions=\"_DEBUG\"\r\n\t\t\t\tCulture=\"1033\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCPreLinkEventTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCLibrarianTool\"\r\n\t\t\t\tOutputFile=\"$(OutDir)\\tomcryptd.lib\"\r\n\t\t\t\tSuppressStartupBanner=\"true\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCALinkTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCXDCMakeTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCBscMakeTool\"\r\n\t\t\t\tSuppressStartupBanner=\"true\"\r\n\t\t\t\tOutputFile=\".\\Debug/libtomcrypt.bsc\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCFxCopTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCPostBuildEventTool\"\r\n\t\t\t/>\r\n\t\t</Configuration>\r\n\t\t<Configuration\r\n\t\t\tName=\"Release|Win32\"\r\n\t\t\tOutputDirectory=\"MSVC_$(PlatformName)_$(ConfigurationName)\"\r\n\t\t\tIntermediateDirectory=\"MSVC_$(PlatformName)_$(ConfigurationName)\\Intermediate\"\r\n\t\t\tConfigurationType=\"4\"\r\n\t\t\tUseOfMFC=\"0\"\r\n\t\t\tATLMinimizesCRunTimeLibraryUsage=\"false\"\r\n\t\t\tCharacterSet=\"0\"\r\n\t\t\t>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCPreBuildEventTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCCustomBuildTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCXMLDataGeneratorTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCMIDLTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\tOptimization=\"2\"\r\n\t\t\t\tInlineFunctionExpansion=\"1\"\r\n\t\t\t\tAdditionalIncludeDirectories=\"src\\headers,..\\libtommath\"\r\n\t\t\t\tPreprocessorDefinitions=\"WIN32;NDEBUG;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_DEPRECATE;LTM_DESC;LTC_SOURCE;LTC_NO_TEST;LTC_NO_PROTOTYPES\"\r\n\t\t\t\tStringPooling=\"true\"\r\n\t\t\t\tExceptionHandling=\"0\"\r\n\t\t\t\tRuntimeLibrary=\"0\"\r\n\t\t\t\tEnableFunctionLevelLinking=\"true\"\r\n\t\t\t\tPrecompiledHeaderFile=\"$(IntDir)\\libtomcrypt.pch\"\r\n\t\t\t\tAssemblerListingLocation=\"$(IntDir)\\\"\r\n\t\t\t\tObjectFile=\"$(IntDir)\\\"\r\n\t\t\t\tProgramDataBaseFileName=\"$(IntDir)\\\"\r\n\t\t\t\tWarningLevel=\"3\"\r\n\t\t\t\tSuppressStartupBanner=\"true\"\r\n\t\t\t\tCompileAs=\"1\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCManagedResourceCompilerTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCResourceCompilerTool\"\r\n\t\t\t\tPreprocessorDefinitions=\"NDEBUG\"\r\n\t\t\t\tCulture=\"1033\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCPreLinkEventTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCLibrarianTool\"\r\n\t\t\t\tOutputFile=\"$(OutDir)\\tomcrypt.lib\"\r\n\t\t\t\tSuppressStartupBanner=\"true\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCALinkTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCXDCMakeTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCBscMakeTool\"\r\n\t\t\t\tSuppressStartupBanner=\"true\"\r\n\t\t\t\tOutputFile=\".\\Release/libtomcrypt.bsc\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCFxCopTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCPostBuildEventTool\"\r\n\t\t\t/>\r\n\t\t</Configuration>\r\n\t\t<Configuration\r\n\t\t\tName=\"Debug|x64\"\r\n\t\t\tOutputDirectory=\"MSVC_$(PlatformName)_$(ConfigurationName)\"\r\n\t\t\tIntermediateDirectory=\"MSVC_$(PlatformName)_$(ConfigurationName)\\Intermediate\"\r\n\t\t\tConfigurationType=\"4\"\r\n\t\t\tUseOfMFC=\"0\"\r\n\t\t\tATLMinimizesCRunTimeLibraryUsage=\"false\"\r\n\t\t\tCharacterSet=\"0\"\r\n\t\t\t>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCPreBuildEventTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCCustomBuildTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCXMLDataGeneratorTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCMIDLTool\"\r\n\t\t\t\tTargetEnvironment=\"3\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\tOptimization=\"0\"\r\n\t\t\t\tAdditionalIncludeDirectories=\"src\\headers,..\\libtommath\"\r\n\t\t\t\tPreprocessorDefinitions=\"WIN32;_DEBUG;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_DEPRECATE;LTM_DESC;LTC_SOURCE;LTC_NO_TEST;LTC_NO_PROTOTYPES\"\r\n\t\t\t\tMinimalRebuild=\"true\"\r\n\t\t\t\tExceptionHandling=\"0\"\r\n\t\t\t\tBasicRuntimeChecks=\"3\"\r\n\t\t\t\tRuntimeLibrary=\"1\"\r\n\t\t\t\tPrecompiledHeaderFile=\"$(IntDir)\\libtomcrypt.pch\"\r\n\t\t\t\tAssemblerListingLocation=\"$(IntDir)\\\"\r\n\t\t\t\tObjectFile=\"$(IntDir)\\\"\r\n\t\t\t\tProgramDataBaseFileName=\"$(IntDir)\\\"\r\n\t\t\t\tWarningLevel=\"3\"\r\n\t\t\t\tSuppressStartupBanner=\"true\"\r\n\t\t\t\tDebugInformationFormat=\"3\"\r\n\t\t\t\tCompileAs=\"1\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCManagedResourceCompilerTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCResourceCompilerTool\"\r\n\t\t\t\tPreprocessorDefinitions=\"_DEBUG\"\r\n\t\t\t\tCulture=\"1033\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCPreLinkEventTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCLibrarianTool\"\r\n\t\t\t\tOutputFile=\"$(OutDir)\\tomcryptd.lib\"\r\n\t\t\t\tSuppressStartupBanner=\"true\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCALinkTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCXDCMakeTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCBscMakeTool\"\r\n\t\t\t\tSuppressStartupBanner=\"true\"\r\n\t\t\t\tOutputFile=\".\\Debug/libtomcrypt.bsc\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCFxCopTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCPostBuildEventTool\"\r\n\t\t\t/>\r\n\t\t</Configuration>\r\n\t\t<Configuration\r\n\t\t\tName=\"Release|x64\"\r\n\t\t\tOutputDirectory=\"MSVC_$(PlatformName)_$(ConfigurationName)\"\r\n\t\t\tIntermediateDirectory=\"MSVC_$(PlatformName)_$(ConfigurationName)\\Intermediate\"\r\n\t\t\tConfigurationType=\"4\"\r\n\t\t\tUseOfMFC=\"0\"\r\n\t\t\tATLMinimizesCRunTimeLibraryUsage=\"false\"\r\n\t\t\tCharacterSet=\"0\"\r\n\t\t\t>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCPreBuildEventTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCCustomBuildTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCXMLDataGeneratorTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCWebServiceProxyGeneratorTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCMIDLTool\"\r\n\t\t\t\tTargetEnvironment=\"3\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\tOptimization=\"2\"\r\n\t\t\t\tInlineFunctionExpansion=\"1\"\r\n\t\t\t\tAdditionalIncludeDirectories=\"src\\headers,..\\libtommath\"\r\n\t\t\t\tPreprocessorDefinitions=\"WIN32;NDEBUG;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_DEPRECATE;LTM_DESC;LTC_SOURCE;LTC_NO_TEST;LTC_NO_PROTOTYPES\"\r\n\t\t\t\tStringPooling=\"true\"\r\n\t\t\t\tExceptionHandling=\"0\"\r\n\t\t\t\tRuntimeLibrary=\"0\"\r\n\t\t\t\tEnableFunctionLevelLinking=\"true\"\r\n\t\t\t\tPrecompiledHeaderFile=\"$(IntDir)\\libtomcrypt.pch\"\r\n\t\t\t\tAssemblerListingLocation=\"$(IntDir)\\\"\r\n\t\t\t\tObjectFile=\"$(IntDir)\\\"\r\n\t\t\t\tProgramDataBaseFileName=\"$(IntDir)\\\"\r\n\t\t\t\tWarningLevel=\"3\"\r\n\t\t\t\tSuppressStartupBanner=\"true\"\r\n\t\t\t\tCompileAs=\"1\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCManagedResourceCompilerTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCResourceCompilerTool\"\r\n\t\t\t\tPreprocessorDefinitions=\"NDEBUG\"\r\n\t\t\t\tCulture=\"1033\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCPreLinkEventTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCLibrarianTool\"\r\n\t\t\t\tOutputFile=\"$(OutDir)\\tomcrypt.lib\"\r\n\t\t\t\tSuppressStartupBanner=\"true\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCALinkTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCXDCMakeTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCBscMakeTool\"\r\n\t\t\t\tSuppressStartupBanner=\"true\"\r\n\t\t\t\tOutputFile=\".\\Release/libtomcrypt.bsc\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCFxCopTool\"\r\n\t\t\t/>\r\n\t\t\t<Tool\r\n\t\t\t\tName=\"VCPostBuildEventTool\"\r\n\t\t\t/>\r\n\t\t</Configuration>\r\n\t</Configurations>\r\n\t<References>\r\n\t</References>\r\n\t<Files>\r\n\t\t<Filter\r\n\t\t\tName=\"ciphers\"\r\n\t\t\t>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\anubis.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\blowfish.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\camellia.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\cast5.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\des.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\idea.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\kasumi.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\khazad.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\kseed.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\multi2.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\noekeon.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\rc2.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\rc5.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\rc6.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\serpent.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\skipjack.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\sm4.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\tea.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\ciphers\\xtea.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"aes\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\ciphers\\aes\\aes.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\ciphers\\aes\\aes_desc.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\ciphers\\aes\\aes_tab.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Debug|Win32\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Release|Win32\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Debug|x64\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Release|x64\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\ciphers\\aes\\aesni.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"safer\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\ciphers\\safer\\safer.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\ciphers\\safer\\safer_tab.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Debug|Win32\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Release|Win32\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Debug|x64\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Release|x64\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\ciphers\\safer\\saferp.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"twofish\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\ciphers\\twofish\\twofish.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\ciphers\\twofish\\twofish_tab.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Debug|Win32\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Release|Win32\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Debug|x64\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Release|x64\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t</Filter>\r\n\t\t<Filter\r\n\t\t\tName=\"encauth\"\r\n\t\t\t>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"ccm\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ccm\\ccm_add_aad.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ccm\\ccm_add_nonce.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ccm\\ccm_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ccm\\ccm_init.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ccm\\ccm_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ccm\\ccm_process.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ccm\\ccm_reset.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ccm\\ccm_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"chachapoly\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\chachapoly\\chacha20poly1305_add_aad.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\chachapoly\\chacha20poly1305_decrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\chachapoly\\chacha20poly1305_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\chachapoly\\chacha20poly1305_encrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\chachapoly\\chacha20poly1305_init.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\chachapoly\\chacha20poly1305_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\chachapoly\\chacha20poly1305_setiv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\chachapoly\\chacha20poly1305_setiv_rfc7905.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\chachapoly\\chacha20poly1305_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"eax\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\eax\\eax_addheader.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\eax\\eax_decrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\eax\\eax_decrypt_verify_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\eax\\eax_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\eax\\eax_encrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\eax\\eax_encrypt_authenticate_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\eax\\eax_init.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\eax\\eax_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"gcm\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\gcm\\gcm_add_aad.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\gcm\\gcm_add_iv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\gcm\\gcm_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\gcm\\gcm_gf_mult.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\gcm\\gcm_init.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\gcm\\gcm_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\gcm\\gcm_mult_h.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\gcm\\gcm_process.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\gcm\\gcm_reset.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\gcm\\gcm_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"ocb\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb\\ocb_decrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb\\ocb_decrypt_verify_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb\\ocb_done_decrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb\\ocb_done_encrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb\\ocb_encrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb\\ocb_encrypt_authenticate_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb\\ocb_init.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb\\ocb_ntz.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb\\ocb_shift_xor.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb\\ocb_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb\\s_ocb_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"ocb3\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb3\\ocb3_add_aad.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb3\\ocb3_decrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb3\\ocb3_decrypt_last.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb3\\ocb3_decrypt_verify_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb3\\ocb3_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb3\\ocb3_encrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb3\\ocb3_encrypt_authenticate_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb3\\ocb3_encrypt_last.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb3\\ocb3_init.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb3\\ocb3_int_ntz.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb3\\ocb3_int_xor_blocks.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\ocb3\\ocb3_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"siv\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\encauth\\siv\\siv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t</Filter>\r\n\t\t<Filter\r\n\t\t\tName=\"hashes\"\r\n\t\t\t>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\hashes\\blake2b.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\hashes\\blake2s.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\hashes\\md2.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\hashes\\md4.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\hashes\\md5.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\hashes\\rmd128.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\hashes\\rmd160.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\hashes\\rmd256.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\hashes\\rmd320.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\hashes\\sha1.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\hashes\\sha3.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\hashes\\sha3_test.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\hashes\\tiger.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"chc\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\hashes\\chc\\chc.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"helper\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\hashes\\helper\\hash_file.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\hashes\\helper\\hash_filehandle.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\hashes\\helper\\hash_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\hashes\\helper\\hash_memory_multi.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"sha2\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\hashes\\sha2\\sha224.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\hashes\\sha2\\sha256.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\hashes\\sha2\\sha384.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\hashes\\sha2\\sha512.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\hashes\\sha2\\sha512_224.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\hashes\\sha2\\sha512_256.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"whirl\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\hashes\\whirl\\whirl.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\hashes\\whirl\\whirltab.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Debug|Win32\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Release|Win32\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Debug|x64\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Release|x64\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t</Filter>\r\n\t\t<Filter\r\n\t\t\tName=\"headers\"\r\n\t\t\t>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt_argchk.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt_cfg.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt_cipher.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt_custom.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt_hash.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt_mac.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt_macros.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt_math.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt_misc.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt_pk.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt_pkcs.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt_private.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\headers\\tomcrypt_prng.h\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t</Filter>\r\n\t\t<Filter\r\n\t\t\tName=\"mac\"\r\n\t\t\t>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"blake2\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\blake2\\blake2bmac.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\blake2\\blake2bmac_file.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\blake2\\blake2bmac_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\blake2\\blake2bmac_memory_multi.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\blake2\\blake2bmac_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\blake2\\blake2smac.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\blake2\\blake2smac_file.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\blake2\\blake2smac_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\blake2\\blake2smac_memory_multi.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\blake2\\blake2smac_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"f9\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\f9\\f9_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\f9\\f9_file.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\f9\\f9_init.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\f9\\f9_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\f9\\f9_memory_multi.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\f9\\f9_process.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\f9\\f9_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"hmac\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\hmac\\hmac_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\hmac\\hmac_file.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\hmac\\hmac_init.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\hmac\\hmac_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\hmac\\hmac_memory_multi.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\hmac\\hmac_process.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\hmac\\hmac_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"omac\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\omac\\omac_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\omac\\omac_file.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\omac\\omac_init.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\omac\\omac_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\omac\\omac_memory_multi.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\omac\\omac_process.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\omac\\omac_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"pelican\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\pelican\\pelican.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\pelican\\pelican_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\pelican\\pelican_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"pmac\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\pmac\\pmac_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\pmac\\pmac_file.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\pmac\\pmac_init.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\pmac\\pmac_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\pmac\\pmac_memory_multi.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\pmac\\pmac_ntz.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\pmac\\pmac_process.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\pmac\\pmac_shift_xor.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\pmac\\pmac_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"poly1305\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\poly1305\\poly1305.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\poly1305\\poly1305_file.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\poly1305\\poly1305_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\poly1305\\poly1305_memory_multi.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\poly1305\\poly1305_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"xcbc\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\xcbc\\xcbc_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\xcbc\\xcbc_file.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\xcbc\\xcbc_init.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\xcbc\\xcbc_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\xcbc\\xcbc_memory_multi.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\xcbc\\xcbc_process.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\mac\\xcbc\\xcbc_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t</Filter>\r\n\t\t<Filter\r\n\t\t\tName=\"math\"\r\n\t\t\t>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\math\\gmp_desc.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\math\\ltm_desc.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\math\\multi.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\math\\radix_to_bin.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\math\\rand_bn.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\math\\rand_prime.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\math\\tfm_desc.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"fp\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\math\\fp\\ltc_ecc_fp_mulmod.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t</Filter>\r\n\t\t<Filter\r\n\t\t\tName=\"misc\"\r\n\t\t\t>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\misc\\adler32.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\misc\\burn_stack.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\misc\\compare_testvector.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\misc\\copy_or_zeromem.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\misc\\crc32.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\misc\\error_to_string.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\misc\\mem_neq.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\misc\\password_free.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\misc\\zeromem.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"base16\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\base16\\base16_decode.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\base16\\base16_encode.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"base32\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\base32\\base32_decode.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\base32\\base32_encode.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"base64\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\base64\\base64_decode.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\base64\\base64_encode.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"bcrypt\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\bcrypt\\bcrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"crypt\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_argchk.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_cipher_descriptor.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_cipher_is_valid.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_constants.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_find_cipher.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_find_cipher_any.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_find_cipher_id.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_find_hash.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_find_hash_any.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_find_hash_id.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_find_hash_oid.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_find_prng.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_fsa.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_hash_descriptor.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_hash_is_valid.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_inits.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_ltc_mp_descriptor.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_prng_descriptor.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_prng_is_valid.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_prng_rng_descriptor.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_register_all_ciphers.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_register_all_hashes.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_register_all_prngs.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_register_cipher.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_register_hash.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_register_prng.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_sizes.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_unregister_cipher.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_unregister_hash.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\crypt\\crypt_unregister_prng.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"hkdf\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\hkdf\\hkdf.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\hkdf\\hkdf_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"padding\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\padding\\padding_depad.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\padding\\padding_pad.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"pbes\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\pbes\\pbes.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\pbes\\pbes1.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\pbes\\pbes2.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"pem\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\pem\\pem.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\pem\\pem_pkcs.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\pem\\pem_read.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\pem\\pem_ssh.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"pkcs12\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\pkcs12\\pkcs12_kdf.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\pkcs12\\pkcs12_utf8_to_utf16.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"pkcs5\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\pkcs5\\pkcs_5_1.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\pkcs5\\pkcs_5_2.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\pkcs5\\pkcs_5_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"ssh\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\ssh\\ssh_decode_sequence_multi.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\misc\\ssh\\ssh_encode_sequence_multi.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t</Filter>\r\n\t\t<Filter\r\n\t\t\tName=\"modes\"\r\n\t\t\t>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"cbc\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\cbc\\cbc_decrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\cbc\\cbc_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\cbc\\cbc_encrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\cbc\\cbc_getiv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\cbc\\cbc_setiv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\cbc\\cbc_start.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"cfb\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\cfb\\cfb_decrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\cfb\\cfb_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\cfb\\cfb_encrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\cfb\\cfb_getiv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\cfb\\cfb_setiv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\cfb\\cfb_start.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"ctr\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ctr\\ctr_decrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ctr\\ctr_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ctr\\ctr_encrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ctr\\ctr_getiv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ctr\\ctr_setiv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ctr\\ctr_start.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ctr\\ctr_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"ecb\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ecb\\ecb_decrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ecb\\ecb_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ecb\\ecb_encrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ecb\\ecb_start.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"f8\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\f8\\f8_decrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\f8\\f8_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\f8\\f8_encrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\f8\\f8_getiv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\f8\\f8_setiv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\f8\\f8_start.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\f8\\f8_test_mode.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"lrw\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\lrw\\lrw_decrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\lrw\\lrw_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\lrw\\lrw_encrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\lrw\\lrw_getiv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\lrw\\lrw_process.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\lrw\\lrw_setiv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\lrw\\lrw_start.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\lrw\\lrw_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"ofb\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ofb\\ofb_decrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ofb\\ofb_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ofb\\ofb_encrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ofb\\ofb_getiv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ofb\\ofb_setiv.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\ofb\\ofb_start.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"xts\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\xts\\xts_decrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\xts\\xts_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\xts\\xts_encrypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\xts\\xts_init.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\xts\\xts_mult_x.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\modes\\xts\\xts_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t</Filter>\r\n\t\t<Filter\r\n\t\t\tName=\"pk\"\r\n\t\t\t>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\pk\\pka_key.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"asn1\"\r\n\t\t\t\t>\r\n\t\t\t\t<Filter\r\n\t\t\t\t\tName=\"der\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"bit\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\bit\\der_decode_bit_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\bit\\der_decode_raw_bit_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\bit\\der_encode_bit_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\bit\\der_encode_raw_bit_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\bit\\der_length_bit_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"boolean\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\boolean\\der_decode_boolean.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\boolean\\der_encode_boolean.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\boolean\\der_length_boolean.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"choice\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\choice\\der_decode_choice.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"custom_type\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\custom_type\\der_decode_custom_type.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\custom_type\\der_encode_custom_type.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\custom_type\\der_length_custom_type.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"general\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\general\\der_asn1_maps.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\general\\der_decode_asn1_identifier.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\general\\der_decode_asn1_length.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\general\\der_encode_asn1_identifier.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\general\\der_encode_asn1_length.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\general\\der_length_asn1_identifier.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\general\\der_length_asn1_length.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"generalizedtime\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\generalizedtime\\der_decode_generalizedtime.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\generalizedtime\\der_encode_generalizedtime.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\generalizedtime\\der_length_generalizedtime.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"ia5\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\ia5\\der_decode_ia5_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\ia5\\der_encode_ia5_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\ia5\\der_length_ia5_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"integer\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\integer\\der_decode_integer.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\integer\\der_encode_integer.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\integer\\der_length_integer.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"object_identifier\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\object_identifier\\der_decode_object_identifier.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\object_identifier\\der_encode_object_identifier.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\object_identifier\\der_length_object_identifier.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"octet\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\octet\\der_decode_octet_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\octet\\der_encode_octet_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\octet\\der_length_octet_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"printable_string\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\printable_string\\der_decode_printable_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\printable_string\\der_encode_printable_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\printable_string\\der_length_printable_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"sequence\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\sequence\\der_decode_sequence_ex.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\sequence\\der_decode_sequence_flexi.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\sequence\\der_decode_sequence_multi.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\sequence\\der_encode_sequence_ex.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\sequence\\der_encode_sequence_multi.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\sequence\\der_flexi_sequence_cmp.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\sequence\\der_length_sequence.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\sequence\\der_sequence_free.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\sequence\\der_sequence_shrink.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"set\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\set\\der_encode_set.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\set\\der_encode_setof.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"short_integer\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\short_integer\\der_decode_short_integer.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\short_integer\\der_encode_short_integer.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\short_integer\\der_length_short_integer.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"teletex_string\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\teletex_string\\der_decode_teletex_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\teletex_string\\der_length_teletex_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"utctime\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\utctime\\der_decode_utctime.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\utctime\\der_encode_utctime.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\utctime\\der_length_utctime.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t\t<Filter\r\n\t\t\t\t\t\tName=\"utf8\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\utf8\\der_decode_utf8_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\utf8\\der_encode_utf8_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t\t<File\r\n\t\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\der\\utf8\\der_length_utf8_string.c\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</File>\r\n\t\t\t\t\t</Filter>\r\n\t\t\t\t</Filter>\r\n\t\t\t\t<Filter\r\n\t\t\t\t\tName=\"oid\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<File\r\n\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\oid\\pk_get.c\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</File>\r\n\t\t\t\t\t<File\r\n\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\oid\\pk_oid_cmp.c\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</File>\r\n\t\t\t\t\t<File\r\n\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\oid\\pk_oid_str.c\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</File>\r\n\t\t\t\t</Filter>\r\n\t\t\t\t<Filter\r\n\t\t\t\t\tName=\"pkcs8\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<File\r\n\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\pkcs8\\pkcs8_decode_flexi.c\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</File>\r\n\t\t\t\t\t<File\r\n\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\pkcs8\\pkcs8_get.c\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</File>\r\n\t\t\t\t</Filter>\r\n\t\t\t\t<Filter\r\n\t\t\t\t\tName=\"x509\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<File\r\n\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\x509\\x509_decode_public_key_from_certificate.c\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</File>\r\n\t\t\t\t\t<File\r\n\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\x509\\x509_decode_spki.c\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</File>\r\n\t\t\t\t\t<File\r\n\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\x509\\x509_decode_subject_public_key_info.c\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</File>\r\n\t\t\t\t\t<File\r\n\t\t\t\t\t\tRelativePath=\"src\\pk\\asn1\\x509\\x509_encode_subject_public_key_info.c\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</File>\r\n\t\t\t\t</Filter>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"dh\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dh\\dh.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dh\\dh_check_pubkey.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dh\\dh_export.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dh\\dh_export_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dh\\dh_free.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dh\\dh_generate_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dh\\dh_import.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dh\\dh_import_pkcs8.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dh\\dh_set.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dh\\dh_set_pg_dhparam.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dh\\dh_shared_secret.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"dsa\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_decrypt_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_encrypt_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_export.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_free.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_generate_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_generate_pqg.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_import.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_import_pkcs8.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_init.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_make_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_set.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_set_pqg_dsaparam.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_shared_secret.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_sign_hash.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_verify_hash.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\dsa\\dsa_verify_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"ec25519\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ec25519\\ec25519_crypto_ctx.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ec25519\\ec25519_export.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ec25519\\ec25519_import_pkcs8.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ec25519\\tweetnacl.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"ecc\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_ansi_x963_export.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_ansi_x963_import.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_decrypt_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_encrypt_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_export.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_export_openssl.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_find_curve.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_free.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_get_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_get_oid_str.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_get_size.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_import.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_import_openssl.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_import_pkcs8.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_import_x509.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_make_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_recover_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_set_curve.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_set_curve_internal.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_set_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_shared_secret.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_sign_hash.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_sizes.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_ssh_ecdsa_encode_name.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ecc_verify_hash.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ltc_ecc_export_point.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ltc_ecc_import_point.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ltc_ecc_is_point.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ltc_ecc_is_point_at_infinity.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ltc_ecc_map.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ltc_ecc_mul2add.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ltc_ecc_mulmod.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ltc_ecc_mulmod_timing.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ltc_ecc_points.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ltc_ecc_projective_add_point.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ltc_ecc_projective_dbl_point.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ecc\\ltc_ecc_verify_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"ed25519\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ed25519\\ed25519_export.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ed25519\\ed25519_import.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ed25519\\ed25519_import_pkcs8.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ed25519\\ed25519_import_raw.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ed25519\\ed25519_import_x509.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ed25519\\ed25519_make_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ed25519\\ed25519_sign.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\ed25519\\ed25519_verify.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"pkcs1\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\pkcs1\\pkcs_1_i2osp.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\pkcs1\\pkcs_1_mgf1.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\pkcs1\\pkcs_1_oaep_decode.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\pkcs1\\pkcs_1_oaep_encode.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\pkcs1\\pkcs_1_os2ip.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\pkcs1\\pkcs_1_pss_decode.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\pkcs1\\pkcs_1_pss_encode.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\pkcs1\\pkcs_1_v1_5_decode.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\pkcs1\\pkcs_1_v1_5_encode.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"rsa\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_decrypt_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_encrypt_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_export.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_exptmod.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_get_size.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_import.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_import_pkcs8.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_import_x509.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_make_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_set.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_sign_hash.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_sign_saltlen_get.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\rsa\\rsa_verify_hash.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"x25519\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\x25519\\x25519_export.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\x25519\\x25519_import.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\x25519\\x25519_import_pkcs8.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\x25519\\x25519_import_raw.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\x25519\\x25519_import_x509.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\x25519\\x25519_make_key.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\pk\\x25519\\x25519_shared_secret.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t</Filter>\r\n\t\t<Filter\r\n\t\t\tName=\"prngs\"\r\n\t\t\t>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\prngs\\chacha20.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\prngs\\fortuna.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\prngs\\rc4.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\prngs\\rng_get_bytes.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\prngs\\rng_make_prng.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\prngs\\sober128.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\prngs\\sprng.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t\t<File\r\n\t\t\t\tRelativePath=\"src\\prngs\\yarrow.c\"\r\n\t\t\t\t>\r\n\t\t\t</File>\r\n\t\t</Filter>\r\n\t\t<Filter\r\n\t\t\tName=\"stream\"\r\n\t\t\t>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"chacha\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\chacha\\chacha_crypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\chacha\\chacha_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\chacha\\chacha_ivctr32.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\chacha\\chacha_ivctr64.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\chacha\\chacha_keystream.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\chacha\\chacha_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\chacha\\chacha_setup.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\chacha\\chacha_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"rabbit\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\rabbit\\rabbit.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\rabbit\\rabbit_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"rc4\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\rc4\\rc4_stream.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\rc4\\rc4_stream_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\rc4\\rc4_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"salsa20\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\salsa20\\salsa20_crypt.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\salsa20\\salsa20_done.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\salsa20\\salsa20_ivctr64.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\salsa20\\salsa20_keystream.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\salsa20\\salsa20_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\salsa20\\salsa20_setup.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\salsa20\\salsa20_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\salsa20\\xsalsa20_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\salsa20\\xsalsa20_setup.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\salsa20\\xsalsa20_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"sober128\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\sober128\\sober128_stream.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\sober128\\sober128_stream_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\sober128\\sober128_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\sober128\\sober128tab.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Debug|Win32\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Release|Win32\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Debug|x64\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t\t<FileConfiguration\r\n\t\t\t\t\t\tName=\"Release|x64\"\r\n\t\t\t\t\t\tExcludedFromBuild=\"true\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tool\r\n\t\t\t\t\t\t\tName=\"VCCLCompilerTool\"\r\n\t\t\t\t\t\t\tAdditionalIncludeDirectories=\"\"\r\n\t\t\t\t\t\t\tPreprocessorDefinitions=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FileConfiguration>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t\t<Filter\r\n\t\t\t\tName=\"sosemanuk\"\r\n\t\t\t\t>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\sosemanuk\\sosemanuk.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\sosemanuk\\sosemanuk_memory.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t\t<File\r\n\t\t\t\t\tRelativePath=\"src\\stream\\sosemanuk\\sosemanuk_test.c\"\r\n\t\t\t\t\t>\r\n\t\t\t\t</File>\r\n\t\t\t</Filter>\r\n\t\t</Filter>\r\n\t</Files>\r\n\t<Globals>\r\n\t</Globals>\r\n</VisualStudioProject>\r\n"
        },
        {
          "name": "makefile",
          "type": "blob",
          "size": 4.0791015625,
          "content": "# MAKEFILE for linux GCC\n#\n# Tom St Denis\n# Modified by Clay Culver\n#\n#  (GNU make only)\n\nifeq ($V,0)\nsilent_echo= > /dev/null\nelse\nsilent_echo=\nendif\nifeq ($V,1)\nsilent=\nsilent_stdout=\nsilent_stderr=\nelse\nsilent=@\nsilent_stdout= > /dev/null\nsilent_stderr= 2> /dev/null\nendif\n\nPLATFORM := $(shell uname | sed -e 's/_.*//')\n\n# ranlib tools\nifndef RANLIB\nRANLIB:=$(CROSS_COMPILE)ranlib\nendif\nINSTALL_CMD = install\nUNINSTALL_CMD = rm\n\n#Output filenames for various targets.\nifndef LIBNAME\n   LIBNAME=libtomcrypt.a\nendif\n\n\ninclude makefile_include.mk\n\nifeq ($(COVERAGE),1)\nall_test: LIB_PRE = -Wl,--whole-archive\nall_test: LIB_POST = -Wl,--no-whole-archive\nLTC_CFLAGS += -fprofile-arcs -ftest-coverage\nLTC_EXTRALIBS += -lgcov\nendif\n\nLTC_EXTRALIBS += $(EXTRALIBS)\n\n#AES comes in two flavours... enc+dec and enc\nsrc/ciphers/aes/aes_enc.o: src/ciphers/aes/aes.c src/ciphers/aes/aes_tab.c\nifneq ($V,1)\n\t@echo \"   * ${CC} $@\" ${silent_echo}\nendif\n\t${silent} ${CC} ${LTC_CFLAGS} -DENCRYPT_ONLY -c $< -o $@\nsrc/ciphers/aes/aes_enc_desc.o: src/ciphers/aes/aes_desc.c\nifneq ($V,1)\n\t@echo \"   * ${CC} $@\" ${silent_echo}\nendif\n\t${silent} ${CC} ${LTC_CFLAGS} -DENCRYPT_ONLY -c $< -o $@\n\n.c.o:\nifneq ($V,1)\n\t@echo \"   * ${CC} $@\" ${silent_echo}\nendif\n\t${silent} ${CC} ${LTC_CFLAGS} -c $< -o $@\n\n$(LIBNAME): $(OBJECTS)\nifneq ($V,1)\n\t@echo \"   * ${AR} $@\" ${silent_echo}\nendif\n\t${silent} $(AR) $(ARFLAGS) $@ $(OBJECTS)\nifneq ($V,1)\n\t@echo \"   * ${RANLIB} $@\" ${silent_echo}\nendif\n\t${silent} $(RANLIB) $@\n\ntest: $(call print-help,test,Builds the library and the 'test' application to run all self-tests) $(LIBNAME) $(TOBJECTS)\nifneq ($V,1)\n\t@echo \"   * ${CC} $@\" ${silent_echo}\nendif\n\t${silent} $(CC) $(LTC_LDFLAGS) $(TOBJECTS) $(LIB_PRE) $(LIBNAME) $(LIB_POST) $(LTC_EXTRALIBS) -o $(TEST)\n\n# build the demos from a template\ndefine DEMO_template\n$(1): $(call print-help,$(1),Builds the library and the '$(1)' demo) demos/$(1).o $$(LIBNAME)\nifneq ($V,1)\n\t@echo \"   * $${CC} $$@\" ${silent_echo}\nendif\n\t$${silent} $$(CC) $$(LTC_LDFLAGS) $$< $$(LIB_PRE) $$(LIBNAME) $$(LIB_POST) $$(LTC_EXTRALIBS) -o $$@\nendef\n\n$(foreach demo, $(strip $(DEMOS)), $(eval $(call DEMO_template,$(demo))))\n\n\n#This rule installs the library and the header files. This must be run\n#as root in order to have a high enough permission to write to the correct\n#directories and to set the owner and group to root.\ninstall: $(call print-help,install,Installs the library and headers) .common_install\n\ninstall_bins: $(call print-help,install_bins,Installs the useful demos ($(USEFUL_DEMOS))) .common_install_bins\n\nuninstall: $(call print-help,uninstall,Uninstalls the library and headers) .common_uninstall\n\nprofile:\n\tLTC_CFLAGS=\"$(LTC_CFLAGS) -fprofile-generate\" $(MAKE) timing EXTRALIBS=\"$(LTC_EXTRALIBS) -lgcov\"\n\t./timing\n\trm -f timing `find . -type f | grep [.][ao] | xargs`\n\tLTC_CFLAGS=\"$(LTC_CFLAGS) -fprofile-use\" $(MAKE) timing EXTRALIBS=\"$(LTC_EXTRALIBS) -lgcov\"\n\n# target that pre-processes all coverage data\nlcov-single-create:\n\tlcov --capture --no-external --directory src -q --output-file coverage_std.info\n\n# target that removes all coverage output\ncleancov-clean:\n\trm -f `find . -type f -name \"*.info\" | xargs`\n\trm -rf coverage/\n\n# merges all coverage_*.info files into coverage.info\ncoverage.info:\n\tlcov `find -name 'coverage_*.info' -exec echo -n \" -a {}\" \\;` -o coverage.info\n\n# generates html output from all coverage_*.info files\nlcov-html: coverage.info\n\tgenhtml coverage.info --output-directory coverage -q\n\n# combines all necessary steps to create the coverage from a single testrun with e.g.\n# CFLAGS=\"-DUSE_LTM -DLTM_DESC -I../libtommath\" EXTRALIBS=\"../libtommath/libtommath.a\" make coverage -j9\nlcov-single:\n\t$(MAKE) cleancov-clean\n\t$(MAKE) lcov-single-create\n\t$(MAKE) coverage.info\n\n\n#make the code coverage of the library\ncoverage: LTC_CFLAGS += -fprofile-arcs -ftest-coverage\ncoverage: LTC_EXTRALIBS += -lgcov\ncoverage: LIB_PRE = -Wl,--whole-archive\ncoverage: LIB_POST = -Wl,--no-whole-archive\n\ncoverage: $(call print-help,coverage,Create code-coverage of the library - but better use coverage.sh) test\n\t./test\n\n# cleans everything - coverage output and standard 'clean'\ncleancov: cleancov-clean clean\n"
        },
        {
          "name": "makefile.mingw",
          "type": "blob",
          "size": 21.5771484375,
          "content": "# MAKEFILE for MS Windows (mingw + gcc + gmake)\n#\n# BEWARE: variables OBJECTS, TOBJECTS, HEADERS, VERSION are updated via ./updatemakes.sh\n\n### USAGE:\n# Open a command prompt with gcc + gmake in PATH and start:\n#\n# gmake -f makefile.mingw all\n# test.exe\n# gmake -f makefile.mingw PREFIX=c:\\devel\\libtom install\n#\n#Or:\n#\n# gmake -f makefile.mingw CFLAGS=\"-O3 -DUSE_LTM -DLTM_DESC -Ic:/path/to/libtommath\" EXTRALIBS=\"-Lc:/path/to/libtommath -ltommath\" all\n#\n\n#The following can be overridden from command line e.g. make -f makefile.mingw CC=gcc ARFLAGS=rcs\nPREFIX    = c:\\mingw\nCC        = gcc\nAR        = ar\nARFLAGS   = r\nRANLIB    = ranlib\nSTRIP     = strip\nCFLAGS    = -O2 -DUSE_LTM -DLTM_DESC -I../libtommath\nEXTRALIBS = -L../libtommath -ltommath\n\n#Compilation flags\nLTC_CFLAGS  = -Isrc/headers -Itests -DLTC_SOURCE $(CFLAGS)\nLTC_LDFLAGS = $(LDFLAGS) $(EXTRALIBS)\nVERSION=1.18.2-develop\n\n#Libraries to be created\nLIBMAIN_S =libtomcrypt.a\nLIBMAIN_I =libtomcrypt.dll.a\nLIBMAIN_D =libtomcrypt.dll\n\n#List of objects to compile (all goes to libtomcrypt.a)\nOBJECTS=src/ciphers/aes/aes.o src/ciphers/aes/aes_desc.o src/ciphers/aes/aes_enc.o \\\nsrc/ciphers/aes/aes_enc_desc.o src/ciphers/aes/aesni.o src/ciphers/anubis.o src/ciphers/blowfish.o \\\nsrc/ciphers/camellia.o src/ciphers/cast5.o src/ciphers/des.o src/ciphers/idea.o src/ciphers/kasumi.o \\\nsrc/ciphers/khazad.o src/ciphers/kseed.o src/ciphers/multi2.o src/ciphers/noekeon.o src/ciphers/rc2.o \\\nsrc/ciphers/rc5.o src/ciphers/rc6.o src/ciphers/safer/safer.o src/ciphers/safer/saferp.o \\\nsrc/ciphers/serpent.o src/ciphers/skipjack.o src/ciphers/sm4.o src/ciphers/tea.o \\\nsrc/ciphers/twofish/twofish.o src/ciphers/xtea.o src/encauth/ccm/ccm_add_aad.o \\\nsrc/encauth/ccm/ccm_add_nonce.o src/encauth/ccm/ccm_done.o src/encauth/ccm/ccm_init.o \\\nsrc/encauth/ccm/ccm_memory.o src/encauth/ccm/ccm_process.o src/encauth/ccm/ccm_reset.o \\\nsrc/encauth/ccm/ccm_test.o src/encauth/chachapoly/chacha20poly1305_add_aad.o \\\nsrc/encauth/chachapoly/chacha20poly1305_decrypt.o src/encauth/chachapoly/chacha20poly1305_done.o \\\nsrc/encauth/chachapoly/chacha20poly1305_encrypt.o src/encauth/chachapoly/chacha20poly1305_init.o \\\nsrc/encauth/chachapoly/chacha20poly1305_memory.o src/encauth/chachapoly/chacha20poly1305_setiv.o \\\nsrc/encauth/chachapoly/chacha20poly1305_setiv_rfc7905.o \\\nsrc/encauth/chachapoly/chacha20poly1305_test.o src/encauth/eax/eax_addheader.o \\\nsrc/encauth/eax/eax_decrypt.o src/encauth/eax/eax_decrypt_verify_memory.o src/encauth/eax/eax_done.o \\\nsrc/encauth/eax/eax_encrypt.o src/encauth/eax/eax_encrypt_authenticate_memory.o \\\nsrc/encauth/eax/eax_init.o src/encauth/eax/eax_test.o src/encauth/gcm/gcm_add_aad.o \\\nsrc/encauth/gcm/gcm_add_iv.o src/encauth/gcm/gcm_done.o src/encauth/gcm/gcm_gf_mult.o \\\nsrc/encauth/gcm/gcm_init.o src/encauth/gcm/gcm_memory.o src/encauth/gcm/gcm_mult_h.o \\\nsrc/encauth/gcm/gcm_process.o src/encauth/gcm/gcm_reset.o src/encauth/gcm/gcm_test.o \\\nsrc/encauth/ocb/ocb_decrypt.o src/encauth/ocb/ocb_decrypt_verify_memory.o \\\nsrc/encauth/ocb/ocb_done_decrypt.o src/encauth/ocb/ocb_done_encrypt.o src/encauth/ocb/ocb_encrypt.o \\\nsrc/encauth/ocb/ocb_encrypt_authenticate_memory.o src/encauth/ocb/ocb_init.o src/encauth/ocb/ocb_ntz.o \\\nsrc/encauth/ocb/ocb_shift_xor.o src/encauth/ocb/ocb_test.o src/encauth/ocb/s_ocb_done.o \\\nsrc/encauth/ocb3/ocb3_add_aad.o src/encauth/ocb3/ocb3_decrypt.o src/encauth/ocb3/ocb3_decrypt_last.o \\\nsrc/encauth/ocb3/ocb3_decrypt_verify_memory.o src/encauth/ocb3/ocb3_done.o \\\nsrc/encauth/ocb3/ocb3_encrypt.o src/encauth/ocb3/ocb3_encrypt_authenticate_memory.o \\\nsrc/encauth/ocb3/ocb3_encrypt_last.o src/encauth/ocb3/ocb3_init.o src/encauth/ocb3/ocb3_int_ntz.o \\\nsrc/encauth/ocb3/ocb3_int_xor_blocks.o src/encauth/ocb3/ocb3_test.o src/encauth/siv/siv.o \\\nsrc/hashes/blake2b.o src/hashes/blake2s.o src/hashes/chc/chc.o src/hashes/helper/hash_file.o \\\nsrc/hashes/helper/hash_filehandle.o src/hashes/helper/hash_memory.o \\\nsrc/hashes/helper/hash_memory_multi.o src/hashes/md2.o src/hashes/md4.o src/hashes/md5.o \\\nsrc/hashes/rmd128.o src/hashes/rmd160.o src/hashes/rmd256.o src/hashes/rmd320.o src/hashes/sha1.o \\\nsrc/hashes/sha2/sha224.o src/hashes/sha2/sha256.o src/hashes/sha2/sha384.o src/hashes/sha2/sha512.o \\\nsrc/hashes/sha2/sha512_224.o src/hashes/sha2/sha512_256.o src/hashes/sha3.o src/hashes/sha3_test.o \\\nsrc/hashes/tiger.o src/hashes/whirl/whirl.o src/mac/blake2/blake2bmac.o \\\nsrc/mac/blake2/blake2bmac_file.o src/mac/blake2/blake2bmac_memory.o \\\nsrc/mac/blake2/blake2bmac_memory_multi.o src/mac/blake2/blake2bmac_test.o src/mac/blake2/blake2smac.o \\\nsrc/mac/blake2/blake2smac_file.o src/mac/blake2/blake2smac_memory.o \\\nsrc/mac/blake2/blake2smac_memory_multi.o src/mac/blake2/blake2smac_test.o src/mac/f9/f9_done.o \\\nsrc/mac/f9/f9_file.o src/mac/f9/f9_init.o src/mac/f9/f9_memory.o src/mac/f9/f9_memory_multi.o \\\nsrc/mac/f9/f9_process.o src/mac/f9/f9_test.o src/mac/hmac/hmac_done.o src/mac/hmac/hmac_file.o \\\nsrc/mac/hmac/hmac_init.o src/mac/hmac/hmac_memory.o src/mac/hmac/hmac_memory_multi.o \\\nsrc/mac/hmac/hmac_process.o src/mac/hmac/hmac_test.o src/mac/omac/omac_done.o src/mac/omac/omac_file.o \\\nsrc/mac/omac/omac_init.o src/mac/omac/omac_memory.o src/mac/omac/omac_memory_multi.o \\\nsrc/mac/omac/omac_process.o src/mac/omac/omac_test.o src/mac/pelican/pelican.o \\\nsrc/mac/pelican/pelican_memory.o src/mac/pelican/pelican_test.o src/mac/pmac/pmac_done.o \\\nsrc/mac/pmac/pmac_file.o src/mac/pmac/pmac_init.o src/mac/pmac/pmac_memory.o \\\nsrc/mac/pmac/pmac_memory_multi.o src/mac/pmac/pmac_ntz.o src/mac/pmac/pmac_process.o \\\nsrc/mac/pmac/pmac_shift_xor.o src/mac/pmac/pmac_test.o src/mac/poly1305/poly1305.o \\\nsrc/mac/poly1305/poly1305_file.o src/mac/poly1305/poly1305_memory.o \\\nsrc/mac/poly1305/poly1305_memory_multi.o src/mac/poly1305/poly1305_test.o src/mac/xcbc/xcbc_done.o \\\nsrc/mac/xcbc/xcbc_file.o src/mac/xcbc/xcbc_init.o src/mac/xcbc/xcbc_memory.o \\\nsrc/mac/xcbc/xcbc_memory_multi.o src/mac/xcbc/xcbc_process.o src/mac/xcbc/xcbc_test.o \\\nsrc/math/fp/ltc_ecc_fp_mulmod.o src/math/gmp_desc.o src/math/ltm_desc.o src/math/multi.o \\\nsrc/math/radix_to_bin.o src/math/rand_bn.o src/math/rand_prime.o src/math/tfm_desc.o src/misc/adler32.o \\\nsrc/misc/base16/base16_decode.o src/misc/base16/base16_encode.o src/misc/base32/base32_decode.o \\\nsrc/misc/base32/base32_encode.o src/misc/base64/base64_decode.o src/misc/base64/base64_encode.o \\\nsrc/misc/bcrypt/bcrypt.o src/misc/burn_stack.o src/misc/compare_testvector.o src/misc/copy_or_zeromem.o \\\nsrc/misc/crc32.o src/misc/crypt/crypt.o src/misc/crypt/crypt_argchk.o \\\nsrc/misc/crypt/crypt_cipher_descriptor.o src/misc/crypt/crypt_cipher_is_valid.o \\\nsrc/misc/crypt/crypt_constants.o src/misc/crypt/crypt_find_cipher.o \\\nsrc/misc/crypt/crypt_find_cipher_any.o src/misc/crypt/crypt_find_cipher_id.o \\\nsrc/misc/crypt/crypt_find_hash.o src/misc/crypt/crypt_find_hash_any.o \\\nsrc/misc/crypt/crypt_find_hash_id.o src/misc/crypt/crypt_find_hash_oid.o \\\nsrc/misc/crypt/crypt_find_prng.o src/misc/crypt/crypt_fsa.o src/misc/crypt/crypt_hash_descriptor.o \\\nsrc/misc/crypt/crypt_hash_is_valid.o src/misc/crypt/crypt_inits.o \\\nsrc/misc/crypt/crypt_ltc_mp_descriptor.o src/misc/crypt/crypt_prng_descriptor.o \\\nsrc/misc/crypt/crypt_prng_is_valid.o src/misc/crypt/crypt_prng_rng_descriptor.o \\\nsrc/misc/crypt/crypt_register_all_ciphers.o src/misc/crypt/crypt_register_all_hashes.o \\\nsrc/misc/crypt/crypt_register_all_prngs.o src/misc/crypt/crypt_register_cipher.o \\\nsrc/misc/crypt/crypt_register_hash.o src/misc/crypt/crypt_register_prng.o src/misc/crypt/crypt_sizes.o \\\nsrc/misc/crypt/crypt_unregister_cipher.o src/misc/crypt/crypt_unregister_hash.o \\\nsrc/misc/crypt/crypt_unregister_prng.o src/misc/error_to_string.o src/misc/hkdf/hkdf.o \\\nsrc/misc/hkdf/hkdf_test.o src/misc/mem_neq.o src/misc/padding/padding_depad.o \\\nsrc/misc/padding/padding_pad.o src/misc/password_free.o src/misc/pbes/pbes.o src/misc/pbes/pbes1.o \\\nsrc/misc/pbes/pbes2.o src/misc/pem/pem.o src/misc/pem/pem_pkcs.o src/misc/pem/pem_read.o \\\nsrc/misc/pem/pem_ssh.o src/misc/pkcs12/pkcs12_kdf.o src/misc/pkcs12/pkcs12_utf8_to_utf16.o \\\nsrc/misc/pkcs5/pkcs_5_1.o src/misc/pkcs5/pkcs_5_2.o src/misc/pkcs5/pkcs_5_test.o \\\nsrc/misc/ssh/ssh_decode_sequence_multi.o src/misc/ssh/ssh_encode_sequence_multi.o src/misc/zeromem.o \\\nsrc/modes/cbc/cbc_decrypt.o src/modes/cbc/cbc_done.o src/modes/cbc/cbc_encrypt.o \\\nsrc/modes/cbc/cbc_getiv.o src/modes/cbc/cbc_setiv.o src/modes/cbc/cbc_start.o \\\nsrc/modes/cfb/cfb_decrypt.o src/modes/cfb/cfb_done.o src/modes/cfb/cfb_encrypt.o \\\nsrc/modes/cfb/cfb_getiv.o src/modes/cfb/cfb_setiv.o src/modes/cfb/cfb_start.o \\\nsrc/modes/ctr/ctr_decrypt.o src/modes/ctr/ctr_done.o src/modes/ctr/ctr_encrypt.o \\\nsrc/modes/ctr/ctr_getiv.o src/modes/ctr/ctr_setiv.o src/modes/ctr/ctr_start.o src/modes/ctr/ctr_test.o \\\nsrc/modes/ecb/ecb_decrypt.o src/modes/ecb/ecb_done.o src/modes/ecb/ecb_encrypt.o \\\nsrc/modes/ecb/ecb_start.o src/modes/f8/f8_decrypt.o src/modes/f8/f8_done.o src/modes/f8/f8_encrypt.o \\\nsrc/modes/f8/f8_getiv.o src/modes/f8/f8_setiv.o src/modes/f8/f8_start.o src/modes/f8/f8_test_mode.o \\\nsrc/modes/lrw/lrw_decrypt.o src/modes/lrw/lrw_done.o src/modes/lrw/lrw_encrypt.o \\\nsrc/modes/lrw/lrw_getiv.o src/modes/lrw/lrw_process.o src/modes/lrw/lrw_setiv.o \\\nsrc/modes/lrw/lrw_start.o src/modes/lrw/lrw_test.o src/modes/ofb/ofb_decrypt.o src/modes/ofb/ofb_done.o \\\nsrc/modes/ofb/ofb_encrypt.o src/modes/ofb/ofb_getiv.o src/modes/ofb/ofb_setiv.o \\\nsrc/modes/ofb/ofb_start.o src/modes/xts/xts_decrypt.o src/modes/xts/xts_done.o \\\nsrc/modes/xts/xts_encrypt.o src/modes/xts/xts_init.o src/modes/xts/xts_mult_x.o \\\nsrc/modes/xts/xts_test.o src/pk/asn1/der/bit/der_decode_bit_string.o \\\nsrc/pk/asn1/der/bit/der_decode_raw_bit_string.o src/pk/asn1/der/bit/der_encode_bit_string.o \\\nsrc/pk/asn1/der/bit/der_encode_raw_bit_string.o src/pk/asn1/der/bit/der_length_bit_string.o \\\nsrc/pk/asn1/der/boolean/der_decode_boolean.o src/pk/asn1/der/boolean/der_encode_boolean.o \\\nsrc/pk/asn1/der/boolean/der_length_boolean.o src/pk/asn1/der/choice/der_decode_choice.o \\\nsrc/pk/asn1/der/custom_type/der_decode_custom_type.o \\\nsrc/pk/asn1/der/custom_type/der_encode_custom_type.o \\\nsrc/pk/asn1/der/custom_type/der_length_custom_type.o src/pk/asn1/der/general/der_asn1_maps.o \\\nsrc/pk/asn1/der/general/der_decode_asn1_identifier.o src/pk/asn1/der/general/der_decode_asn1_length.o \\\nsrc/pk/asn1/der/general/der_encode_asn1_identifier.o src/pk/asn1/der/general/der_encode_asn1_length.o \\\nsrc/pk/asn1/der/general/der_length_asn1_identifier.o src/pk/asn1/der/general/der_length_asn1_length.o \\\nsrc/pk/asn1/der/generalizedtime/der_decode_generalizedtime.o \\\nsrc/pk/asn1/der/generalizedtime/der_encode_generalizedtime.o \\\nsrc/pk/asn1/der/generalizedtime/der_length_generalizedtime.o \\\nsrc/pk/asn1/der/ia5/der_decode_ia5_string.o src/pk/asn1/der/ia5/der_encode_ia5_string.o \\\nsrc/pk/asn1/der/ia5/der_length_ia5_string.o src/pk/asn1/der/integer/der_decode_integer.o \\\nsrc/pk/asn1/der/integer/der_encode_integer.o src/pk/asn1/der/integer/der_length_integer.o \\\nsrc/pk/asn1/der/object_identifier/der_decode_object_identifier.o \\\nsrc/pk/asn1/der/object_identifier/der_encode_object_identifier.o \\\nsrc/pk/asn1/der/object_identifier/der_length_object_identifier.o \\\nsrc/pk/asn1/der/octet/der_decode_octet_string.o src/pk/asn1/der/octet/der_encode_octet_string.o \\\nsrc/pk/asn1/der/octet/der_length_octet_string.o \\\nsrc/pk/asn1/der/printable_string/der_decode_printable_string.o \\\nsrc/pk/asn1/der/printable_string/der_encode_printable_string.o \\\nsrc/pk/asn1/der/printable_string/der_length_printable_string.o \\\nsrc/pk/asn1/der/sequence/der_decode_sequence_ex.o \\\nsrc/pk/asn1/der/sequence/der_decode_sequence_flexi.o \\\nsrc/pk/asn1/der/sequence/der_decode_sequence_multi.o \\\nsrc/pk/asn1/der/sequence/der_encode_sequence_ex.o \\\nsrc/pk/asn1/der/sequence/der_encode_sequence_multi.o \\\nsrc/pk/asn1/der/sequence/der_flexi_sequence_cmp.o src/pk/asn1/der/sequence/der_length_sequence.o \\\nsrc/pk/asn1/der/sequence/der_sequence_free.o src/pk/asn1/der/sequence/der_sequence_shrink.o \\\nsrc/pk/asn1/der/set/der_encode_set.o src/pk/asn1/der/set/der_encode_setof.o \\\nsrc/pk/asn1/der/short_integer/der_decode_short_integer.o \\\nsrc/pk/asn1/der/short_integer/der_encode_short_integer.o \\\nsrc/pk/asn1/der/short_integer/der_length_short_integer.o \\\nsrc/pk/asn1/der/teletex_string/der_decode_teletex_string.o \\\nsrc/pk/asn1/der/teletex_string/der_length_teletex_string.o \\\nsrc/pk/asn1/der/utctime/der_decode_utctime.o src/pk/asn1/der/utctime/der_encode_utctime.o \\\nsrc/pk/asn1/der/utctime/der_length_utctime.o src/pk/asn1/der/utf8/der_decode_utf8_string.o \\\nsrc/pk/asn1/der/utf8/der_encode_utf8_string.o src/pk/asn1/der/utf8/der_length_utf8_string.o \\\nsrc/pk/asn1/oid/pk_get.o src/pk/asn1/oid/pk_oid_cmp.o src/pk/asn1/oid/pk_oid_str.o \\\nsrc/pk/asn1/pkcs8/pkcs8_decode_flexi.o src/pk/asn1/pkcs8/pkcs8_get.o \\\nsrc/pk/asn1/x509/x509_decode_public_key_from_certificate.o src/pk/asn1/x509/x509_decode_spki.o \\\nsrc/pk/asn1/x509/x509_decode_subject_public_key_info.o \\\nsrc/pk/asn1/x509/x509_encode_subject_public_key_info.o src/pk/dh/dh.o src/pk/dh/dh_check_pubkey.o \\\nsrc/pk/dh/dh_export.o src/pk/dh/dh_export_key.o src/pk/dh/dh_free.o src/pk/dh/dh_generate_key.o \\\nsrc/pk/dh/dh_import.o src/pk/dh/dh_import_pkcs8.o src/pk/dh/dh_set.o src/pk/dh/dh_set_pg_dhparam.o \\\nsrc/pk/dh/dh_shared_secret.o src/pk/dsa/dsa_decrypt_key.o src/pk/dsa/dsa_encrypt_key.o \\\nsrc/pk/dsa/dsa_export.o src/pk/dsa/dsa_free.o src/pk/dsa/dsa_generate_key.o \\\nsrc/pk/dsa/dsa_generate_pqg.o src/pk/dsa/dsa_import.o src/pk/dsa/dsa_import_pkcs8.o \\\nsrc/pk/dsa/dsa_init.o src/pk/dsa/dsa_make_key.o src/pk/dsa/dsa_set.o src/pk/dsa/dsa_set_pqg_dsaparam.o \\\nsrc/pk/dsa/dsa_shared_secret.o src/pk/dsa/dsa_sign_hash.o src/pk/dsa/dsa_verify_hash.o \\\nsrc/pk/dsa/dsa_verify_key.o src/pk/ec25519/ec25519_crypto_ctx.o src/pk/ec25519/ec25519_export.o \\\nsrc/pk/ec25519/ec25519_import_pkcs8.o src/pk/ec25519/tweetnacl.o src/pk/ecc/ecc.o \\\nsrc/pk/ecc/ecc_ansi_x963_export.o src/pk/ecc/ecc_ansi_x963_import.o src/pk/ecc/ecc_decrypt_key.o \\\nsrc/pk/ecc/ecc_encrypt_key.o src/pk/ecc/ecc_export.o src/pk/ecc/ecc_export_openssl.o \\\nsrc/pk/ecc/ecc_find_curve.o src/pk/ecc/ecc_free.o src/pk/ecc/ecc_get_key.o src/pk/ecc/ecc_get_oid_str.o \\\nsrc/pk/ecc/ecc_get_size.o src/pk/ecc/ecc_import.o src/pk/ecc/ecc_import_openssl.o \\\nsrc/pk/ecc/ecc_import_pkcs8.o src/pk/ecc/ecc_import_x509.o src/pk/ecc/ecc_make_key.o \\\nsrc/pk/ecc/ecc_recover_key.o src/pk/ecc/ecc_set_curve.o src/pk/ecc/ecc_set_curve_internal.o \\\nsrc/pk/ecc/ecc_set_key.o src/pk/ecc/ecc_shared_secret.o src/pk/ecc/ecc_sign_hash.o \\\nsrc/pk/ecc/ecc_sizes.o src/pk/ecc/ecc_ssh_ecdsa_encode_name.o src/pk/ecc/ecc_verify_hash.o \\\nsrc/pk/ecc/ltc_ecc_export_point.o src/pk/ecc/ltc_ecc_import_point.o src/pk/ecc/ltc_ecc_is_point.o \\\nsrc/pk/ecc/ltc_ecc_is_point_at_infinity.o src/pk/ecc/ltc_ecc_map.o src/pk/ecc/ltc_ecc_mul2add.o \\\nsrc/pk/ecc/ltc_ecc_mulmod.o src/pk/ecc/ltc_ecc_mulmod_timing.o src/pk/ecc/ltc_ecc_points.o \\\nsrc/pk/ecc/ltc_ecc_projective_add_point.o src/pk/ecc/ltc_ecc_projective_dbl_point.o \\\nsrc/pk/ecc/ltc_ecc_verify_key.o src/pk/ed25519/ed25519_export.o src/pk/ed25519/ed25519_import.o \\\nsrc/pk/ed25519/ed25519_import_pkcs8.o src/pk/ed25519/ed25519_import_raw.o \\\nsrc/pk/ed25519/ed25519_import_x509.o src/pk/ed25519/ed25519_make_key.o src/pk/ed25519/ed25519_sign.o \\\nsrc/pk/ed25519/ed25519_verify.o src/pk/pka_key.o src/pk/pkcs1/pkcs_1_i2osp.o src/pk/pkcs1/pkcs_1_mgf1.o \\\nsrc/pk/pkcs1/pkcs_1_oaep_decode.o src/pk/pkcs1/pkcs_1_oaep_encode.o src/pk/pkcs1/pkcs_1_os2ip.o \\\nsrc/pk/pkcs1/pkcs_1_pss_decode.o src/pk/pkcs1/pkcs_1_pss_encode.o src/pk/pkcs1/pkcs_1_v1_5_decode.o \\\nsrc/pk/pkcs1/pkcs_1_v1_5_encode.o src/pk/rsa/rsa_decrypt_key.o src/pk/rsa/rsa_encrypt_key.o \\\nsrc/pk/rsa/rsa_export.o src/pk/rsa/rsa_exptmod.o src/pk/rsa/rsa_get_size.o src/pk/rsa/rsa_import.o \\\nsrc/pk/rsa/rsa_import_pkcs8.o src/pk/rsa/rsa_import_x509.o src/pk/rsa/rsa_key.o \\\nsrc/pk/rsa/rsa_make_key.o src/pk/rsa/rsa_set.o src/pk/rsa/rsa_sign_hash.o \\\nsrc/pk/rsa/rsa_sign_saltlen_get.o src/pk/rsa/rsa_verify_hash.o src/pk/x25519/x25519_export.o \\\nsrc/pk/x25519/x25519_import.o src/pk/x25519/x25519_import_pkcs8.o src/pk/x25519/x25519_import_raw.o \\\nsrc/pk/x25519/x25519_import_x509.o src/pk/x25519/x25519_make_key.o \\\nsrc/pk/x25519/x25519_shared_secret.o src/prngs/chacha20.o src/prngs/fortuna.o src/prngs/rc4.o \\\nsrc/prngs/rng_get_bytes.o src/prngs/rng_make_prng.o src/prngs/sober128.o src/prngs/sprng.o \\\nsrc/prngs/yarrow.o src/stream/chacha/chacha_crypt.o src/stream/chacha/chacha_done.o \\\nsrc/stream/chacha/chacha_ivctr32.o src/stream/chacha/chacha_ivctr64.o \\\nsrc/stream/chacha/chacha_keystream.o src/stream/chacha/chacha_memory.o \\\nsrc/stream/chacha/chacha_setup.o src/stream/chacha/chacha_test.o src/stream/rabbit/rabbit.o \\\nsrc/stream/rabbit/rabbit_memory.o src/stream/rc4/rc4_stream.o src/stream/rc4/rc4_stream_memory.o \\\nsrc/stream/rc4/rc4_test.o src/stream/salsa20/salsa20_crypt.o src/stream/salsa20/salsa20_done.o \\\nsrc/stream/salsa20/salsa20_ivctr64.o src/stream/salsa20/salsa20_keystream.o \\\nsrc/stream/salsa20/salsa20_memory.o src/stream/salsa20/salsa20_setup.o \\\nsrc/stream/salsa20/salsa20_test.o src/stream/salsa20/xsalsa20_memory.o \\\nsrc/stream/salsa20/xsalsa20_setup.o src/stream/salsa20/xsalsa20_test.o \\\nsrc/stream/sober128/sober128_stream.o src/stream/sober128/sober128_stream_memory.o \\\nsrc/stream/sober128/sober128_test.o src/stream/sosemanuk/sosemanuk.o \\\nsrc/stream/sosemanuk/sosemanuk_memory.o src/stream/sosemanuk/sosemanuk_test.o\n\n#List of test objects to compile\nTOBJECTS=tests/base16_test.o tests/base32_test.o tests/base64_test.o tests/bcrypt_test.o \\\ntests/cipher_hash_test.o tests/common.o tests/der_test.o tests/dh_test.o tests/dsa_test.o \\\ntests/ecc_test.o tests/ed25519_test.o tests/file_test.o tests/mac_test.o tests/misc_test.o \\\ntests/modes_test.o tests/mpi_test.o tests/multi_test.o tests/no_null_termination_check_test.o \\\ntests/no_prng.o tests/padding_test.o tests/pem_test.o tests/pkcs_1_eme_test.o tests/pkcs_1_emsa_test.o \\\ntests/pkcs_1_oaep_test.o tests/pkcs_1_pss_test.o tests/pkcs_1_test.o tests/prng_test.o \\\ntests/rotate_test.o tests/rsa_test.o tests/ssh_test.o tests/store_test.o tests/test.o tests/x25519_test.o\n\n#The following headers will be installed by \"make install\"\nHEADERS_PUB=src/headers/tomcrypt.h src/headers/tomcrypt_argchk.h src/headers/tomcrypt_cfg.h \\\nsrc/headers/tomcrypt_cipher.h src/headers/tomcrypt_custom.h src/headers/tomcrypt_hash.h \\\nsrc/headers/tomcrypt_mac.h src/headers/tomcrypt_macros.h src/headers/tomcrypt_math.h \\\nsrc/headers/tomcrypt_misc.h src/headers/tomcrypt_pk.h src/headers/tomcrypt_pkcs.h \\\nsrc/headers/tomcrypt_prng.h\n\nHEADERS=$(HEADERS_PUB) src/headers/tomcrypt_private.h\n\n#The default rule for make builds the libtomcrypt.a library (static)\ndefault: $(LIBMAIN_S)\n\n#SPECIAL: AES comes in two flavours - enc+dec and enc-only\nsrc/ciphers/aes/aes_enc.o: src/ciphers/aes/aes.c src/ciphers/aes/aes_tab.c\n\t$(CC) $(LTC_CFLAGS) -DENCRYPT_ONLY -c src/ciphers/aes/aes.c -o src/ciphers/aes/aes_enc.o\nsrc/ciphers/aes/aes_enc_desc.o: src/ciphers/aes/aes.c\n\t$(CC) $(LTC_CFLAGS) -DENCRYPT_ONLY -c src/ciphers/aes/aes_desc.c -o src/ciphers/aes/aes_enc_desc.o\n\n#SPECIAL: these are the rules to make certain object files\nsrc/ciphers/aes/aes.o: src/ciphers/aes/aes.c src/ciphers/aes/aes_tab.c\nsrc/ciphers/twofish/twofish.o: src/ciphers/twofish/twofish.c src/ciphers/twofish/twofish_tab.c\nsrc/hashes/sha2/sha256.o: src/hashes/sha2/sha256.c src/hashes/sha2/sha224.c\nsrc/hashes/sha2/sha384.o: src/hashes/sha2/sha384.c src/hashes/sha2/sha512.c\nsrc/hashes/sha2/sha512.o: src/hashes/sha2/sha512.c src/hashes/sha2/sha384.c\nsrc/hashes/sha2/sha512_224.o: src/hashes/sha2/sha512.c src/hashes/sha2/sha512_224.c\nsrc/hashes/sha2/sha512_256.o: src/hashes/sha2/sha512.c src/hashes/sha2/sha512_256.c\nsrc/hashes/whirl/whirl.o: src/hashes/whirl/whirl.c src/hashes/whirl/whirltab.c\n\n#Dependencies on *.h\n$(OBJECTS): $(HEADERS)\n$(TOBJECTS): $(HEADERS) tests/tomcrypt_test.h\n\n.c.o:\n\t$(CC) $(LTC_CFLAGS) -c $< -o $@\n\n#Create libtomcrypt.a\n$(LIBMAIN_S): $(OBJECTS)\n\t$(AR) $(ARFLAGS) $@ $(OBJECTS)\n\t$(RANLIB) $@\n\n#Create DLL + import library libtomcrypt.dll.a\n$(LIBMAIN_D) $(LIBMAIN_I): $(OBJECTS)\n\t$(CC) -s -shared -o $(LIBMAIN_D) $^ -Wl,--enable-auto-import,--export-all -Wl,--out-implib=$(LIBMAIN_I) $(LTC_LDFLAGS)\n\t$(STRIP) -S $(LIBMAIN_D)\n\n#Demo tools/utilities\nhashsum.exe: demos/hashsum.o $(LIBMAIN_S)\n\t$(CC) demos/hashsum.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\ncrypt.exe: demos/crypt.o $(LIBMAIN_S)\n\t$(CC) demos/crypt.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\nsmall.exe: demos/small.o $(LIBMAIN_S)\n\t$(CC) demos/small.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\ntv_gen.exe: demos/tv_gen.o $(LIBMAIN_S)\n\t$(CC) demos/tv_gen.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\nsizes.exe: demos/sizes.o $(LIBMAIN_S)\n\t$(CC) demos/sizes.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\nconstants.exe: demos/constants.o $(LIBMAIN_S)\n\t$(CC) demos/constants.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\ntiming.exe: demos/timing.o $(LIBMAIN_S)\n\t$(CC) demos/timing.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\n\n#Tests\ntest.exe: $(TOBJECTS) $(LIBMAIN_S)\n\t$(CC) $(TOBJECTS) $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\n\t@echo NOTICE: start the tests by launching test.exe\n\nall: $(LIBMAIN_S) $(LIBMAIN_I) $(LIBMAIN_D) hashsum.exe crypt.exe small.exe tv_gen.exe sizes.exe constants.exe timing.exe test.exe\n\ntest: test.exe\n\nclean:\n\t@-cmd /c del /Q *_tv.txt 2>nul\n\t@-cmd /c del /Q /S *.o *.a *.exe *.dll 2>nul\n\n#Install the library + headers\ninstall: $(LIBMAIN_S) $(LIBMAIN_I) $(LIBMAIN_D)\n\tcmd /c if not exist \"$(PREFIX)\\bin\" mkdir \"$(PREFIX)\\bin\"\n\tcmd /c if not exist \"$(PREFIX)\\lib\" mkdir \"$(PREFIX)\\lib\"\n\tcmd /c if not exist \"$(PREFIX)\\include\" mkdir \"$(PREFIX)\\include\"\n\tcopy /Y $(LIBMAIN_S) \"$(PREFIX)\\lib\"\n\tcopy /Y $(LIBMAIN_I) \"$(PREFIX)\\lib\"\n\tcopy /Y $(LIBMAIN_D) \"$(PREFIX)\\bin\"\n\tcopy /Y src\\headers\\tomcrypt*.h \"$(PREFIX)\\include\"\n\n#Install useful tools\ninstall_bins: hashsum.exe\n\tcmd /c if not exist \"$(PREFIX)\\bin\" mkdir \"$(PREFIX)\\bin\"\n\tcopy /Y hashsum.exe \"$(PREFIX)\\bin\\ltc-hashsum.exe\"\n\n#Install documentation\ninstall_docs: doc/crypt.pdf\n\tcmd /c if not exist \"$(PREFIX)\\doc\" mkdir \"$(PREFIX)\\doc\"\n\tcopy /Y doc\\crypt.pdf \"$(PREFIX)\\doc\"\n"
        },
        {
          "name": "makefile.msvc",
          "type": "blob",
          "size": 22.4609375,
          "content": "# MAKEFILE for MS Windows (nmake + Windows SDK)\n#\n# BEWARE: variables OBJECTS, TOBJECTS, HEADERS, VERSION are updated via ./updatemakes.sh\n\n### USAGE:\n# Open a command prompt with WinSDK variables set and start:\n#\n# nmake -f makefile.msvc all\n# test.exe\n# nmake -f makefile.msvc PREFIX=c:\\devel\\libtom install\n#\n#Or:\n#\n# nmake -f makefile.msvc CFLAGS=\"/DUSE_LTM /DLTM_DESC /Ic:\\path\\to\\libtommath\" EXTRALIBS=c:\\path\\to\\libtommath\\tommath.lib all\n#\n\n#The following can be overridden from command line e.g. make -f makefile.msvc CC=gcc ARFLAGS=rcs\nPREFIX    = c:\\devel\nCFLAGS    = /Ox /DUSE_LTM /DLTM_DESC /I../libtommath\nEXTRALIBS = ../libtommath/tommath.lib\n\n#Compilation flags\nLTC_CFLAGS  = /nologo /Isrc/headers/ /Itests/ /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_DEPRECATE /DLTC_SOURCE /W3 $(CFLAGS)\nLTC_LDFLAGS = advapi32.lib $(EXTRALIBS)\nVERSION=1.18.2-develop\n\n#Libraries to be created (this makefile builds only static libraries)\nLIBMAIN_S =tomcrypt.lib\n\n#List of objects to compile (all goes to tomcrypt.lib)\nOBJECTS=src/ciphers/aes/aes.obj src/ciphers/aes/aes_desc.obj src/ciphers/aes/aes_enc.obj \\\nsrc/ciphers/aes/aes_enc_desc.obj src/ciphers/aes/aesni.obj src/ciphers/anubis.obj src/ciphers/blowfish.obj \\\nsrc/ciphers/camellia.obj src/ciphers/cast5.obj src/ciphers/des.obj src/ciphers/idea.obj src/ciphers/kasumi.obj \\\nsrc/ciphers/khazad.obj src/ciphers/kseed.obj src/ciphers/multi2.obj src/ciphers/noekeon.obj src/ciphers/rc2.obj \\\nsrc/ciphers/rc5.obj src/ciphers/rc6.obj src/ciphers/safer/safer.obj src/ciphers/safer/saferp.obj \\\nsrc/ciphers/serpent.obj src/ciphers/skipjack.obj src/ciphers/sm4.obj src/ciphers/tea.obj \\\nsrc/ciphers/twofish/twofish.obj src/ciphers/xtea.obj src/encauth/ccm/ccm_add_aad.obj \\\nsrc/encauth/ccm/ccm_add_nonce.obj src/encauth/ccm/ccm_done.obj src/encauth/ccm/ccm_init.obj \\\nsrc/encauth/ccm/ccm_memory.obj src/encauth/ccm/ccm_process.obj src/encauth/ccm/ccm_reset.obj \\\nsrc/encauth/ccm/ccm_test.obj src/encauth/chachapoly/chacha20poly1305_add_aad.obj \\\nsrc/encauth/chachapoly/chacha20poly1305_decrypt.obj src/encauth/chachapoly/chacha20poly1305_done.obj \\\nsrc/encauth/chachapoly/chacha20poly1305_encrypt.obj src/encauth/chachapoly/chacha20poly1305_init.obj \\\nsrc/encauth/chachapoly/chacha20poly1305_memory.obj src/encauth/chachapoly/chacha20poly1305_setiv.obj \\\nsrc/encauth/chachapoly/chacha20poly1305_setiv_rfc7905.obj \\\nsrc/encauth/chachapoly/chacha20poly1305_test.obj src/encauth/eax/eax_addheader.obj \\\nsrc/encauth/eax/eax_decrypt.obj src/encauth/eax/eax_decrypt_verify_memory.obj src/encauth/eax/eax_done.obj \\\nsrc/encauth/eax/eax_encrypt.obj src/encauth/eax/eax_encrypt_authenticate_memory.obj \\\nsrc/encauth/eax/eax_init.obj src/encauth/eax/eax_test.obj src/encauth/gcm/gcm_add_aad.obj \\\nsrc/encauth/gcm/gcm_add_iv.obj src/encauth/gcm/gcm_done.obj src/encauth/gcm/gcm_gf_mult.obj \\\nsrc/encauth/gcm/gcm_init.obj src/encauth/gcm/gcm_memory.obj src/encauth/gcm/gcm_mult_h.obj \\\nsrc/encauth/gcm/gcm_process.obj src/encauth/gcm/gcm_reset.obj src/encauth/gcm/gcm_test.obj \\\nsrc/encauth/ocb/ocb_decrypt.obj src/encauth/ocb/ocb_decrypt_verify_memory.obj \\\nsrc/encauth/ocb/ocb_done_decrypt.obj src/encauth/ocb/ocb_done_encrypt.obj src/encauth/ocb/ocb_encrypt.obj \\\nsrc/encauth/ocb/ocb_encrypt_authenticate_memory.obj src/encauth/ocb/ocb_init.obj src/encauth/ocb/ocb_ntz.obj \\\nsrc/encauth/ocb/ocb_shift_xor.obj src/encauth/ocb/ocb_test.obj src/encauth/ocb/s_ocb_done.obj \\\nsrc/encauth/ocb3/ocb3_add_aad.obj src/encauth/ocb3/ocb3_decrypt.obj src/encauth/ocb3/ocb3_decrypt_last.obj \\\nsrc/encauth/ocb3/ocb3_decrypt_verify_memory.obj src/encauth/ocb3/ocb3_done.obj \\\nsrc/encauth/ocb3/ocb3_encrypt.obj src/encauth/ocb3/ocb3_encrypt_authenticate_memory.obj \\\nsrc/encauth/ocb3/ocb3_encrypt_last.obj src/encauth/ocb3/ocb3_init.obj src/encauth/ocb3/ocb3_int_ntz.obj \\\nsrc/encauth/ocb3/ocb3_int_xor_blocks.obj src/encauth/ocb3/ocb3_test.obj src/encauth/siv/siv.obj \\\nsrc/hashes/blake2b.obj src/hashes/blake2s.obj src/hashes/chc/chc.obj src/hashes/helper/hash_file.obj \\\nsrc/hashes/helper/hash_filehandle.obj src/hashes/helper/hash_memory.obj \\\nsrc/hashes/helper/hash_memory_multi.obj src/hashes/md2.obj src/hashes/md4.obj src/hashes/md5.obj \\\nsrc/hashes/rmd128.obj src/hashes/rmd160.obj src/hashes/rmd256.obj src/hashes/rmd320.obj src/hashes/sha1.obj \\\nsrc/hashes/sha2/sha224.obj src/hashes/sha2/sha256.obj src/hashes/sha2/sha384.obj src/hashes/sha2/sha512.obj \\\nsrc/hashes/sha2/sha512_224.obj src/hashes/sha2/sha512_256.obj src/hashes/sha3.obj src/hashes/sha3_test.obj \\\nsrc/hashes/tiger.obj src/hashes/whirl/whirl.obj src/mac/blake2/blake2bmac.obj \\\nsrc/mac/blake2/blake2bmac_file.obj src/mac/blake2/blake2bmac_memory.obj \\\nsrc/mac/blake2/blake2bmac_memory_multi.obj src/mac/blake2/blake2bmac_test.obj src/mac/blake2/blake2smac.obj \\\nsrc/mac/blake2/blake2smac_file.obj src/mac/blake2/blake2smac_memory.obj \\\nsrc/mac/blake2/blake2smac_memory_multi.obj src/mac/blake2/blake2smac_test.obj src/mac/f9/f9_done.obj \\\nsrc/mac/f9/f9_file.obj src/mac/f9/f9_init.obj src/mac/f9/f9_memory.obj src/mac/f9/f9_memory_multi.obj \\\nsrc/mac/f9/f9_process.obj src/mac/f9/f9_test.obj src/mac/hmac/hmac_done.obj src/mac/hmac/hmac_file.obj \\\nsrc/mac/hmac/hmac_init.obj src/mac/hmac/hmac_memory.obj src/mac/hmac/hmac_memory_multi.obj \\\nsrc/mac/hmac/hmac_process.obj src/mac/hmac/hmac_test.obj src/mac/omac/omac_done.obj src/mac/omac/omac_file.obj \\\nsrc/mac/omac/omac_init.obj src/mac/omac/omac_memory.obj src/mac/omac/omac_memory_multi.obj \\\nsrc/mac/omac/omac_process.obj src/mac/omac/omac_test.obj src/mac/pelican/pelican.obj \\\nsrc/mac/pelican/pelican_memory.obj src/mac/pelican/pelican_test.obj src/mac/pmac/pmac_done.obj \\\nsrc/mac/pmac/pmac_file.obj src/mac/pmac/pmac_init.obj src/mac/pmac/pmac_memory.obj \\\nsrc/mac/pmac/pmac_memory_multi.obj src/mac/pmac/pmac_ntz.obj src/mac/pmac/pmac_process.obj \\\nsrc/mac/pmac/pmac_shift_xor.obj src/mac/pmac/pmac_test.obj src/mac/poly1305/poly1305.obj \\\nsrc/mac/poly1305/poly1305_file.obj src/mac/poly1305/poly1305_memory.obj \\\nsrc/mac/poly1305/poly1305_memory_multi.obj src/mac/poly1305/poly1305_test.obj src/mac/xcbc/xcbc_done.obj \\\nsrc/mac/xcbc/xcbc_file.obj src/mac/xcbc/xcbc_init.obj src/mac/xcbc/xcbc_memory.obj \\\nsrc/mac/xcbc/xcbc_memory_multi.obj src/mac/xcbc/xcbc_process.obj src/mac/xcbc/xcbc_test.obj \\\nsrc/math/fp/ltc_ecc_fp_mulmod.obj src/math/gmp_desc.obj src/math/ltm_desc.obj src/math/multi.obj \\\nsrc/math/radix_to_bin.obj src/math/rand_bn.obj src/math/rand_prime.obj src/math/tfm_desc.obj src/misc/adler32.obj \\\nsrc/misc/base16/base16_decode.obj src/misc/base16/base16_encode.obj src/misc/base32/base32_decode.obj \\\nsrc/misc/base32/base32_encode.obj src/misc/base64/base64_decode.obj src/misc/base64/base64_encode.obj \\\nsrc/misc/bcrypt/bcrypt.obj src/misc/burn_stack.obj src/misc/compare_testvector.obj src/misc/copy_or_zeromem.obj \\\nsrc/misc/crc32.obj src/misc/crypt/crypt.obj src/misc/crypt/crypt_argchk.obj \\\nsrc/misc/crypt/crypt_cipher_descriptor.obj src/misc/crypt/crypt_cipher_is_valid.obj \\\nsrc/misc/crypt/crypt_constants.obj src/misc/crypt/crypt_find_cipher.obj \\\nsrc/misc/crypt/crypt_find_cipher_any.obj src/misc/crypt/crypt_find_cipher_id.obj \\\nsrc/misc/crypt/crypt_find_hash.obj src/misc/crypt/crypt_find_hash_any.obj \\\nsrc/misc/crypt/crypt_find_hash_id.obj src/misc/crypt/crypt_find_hash_oid.obj \\\nsrc/misc/crypt/crypt_find_prng.obj src/misc/crypt/crypt_fsa.obj src/misc/crypt/crypt_hash_descriptor.obj \\\nsrc/misc/crypt/crypt_hash_is_valid.obj src/misc/crypt/crypt_inits.obj \\\nsrc/misc/crypt/crypt_ltc_mp_descriptor.obj src/misc/crypt/crypt_prng_descriptor.obj \\\nsrc/misc/crypt/crypt_prng_is_valid.obj src/misc/crypt/crypt_prng_rng_descriptor.obj \\\nsrc/misc/crypt/crypt_register_all_ciphers.obj src/misc/crypt/crypt_register_all_hashes.obj \\\nsrc/misc/crypt/crypt_register_all_prngs.obj src/misc/crypt/crypt_register_cipher.obj \\\nsrc/misc/crypt/crypt_register_hash.obj src/misc/crypt/crypt_register_prng.obj src/misc/crypt/crypt_sizes.obj \\\nsrc/misc/crypt/crypt_unregister_cipher.obj src/misc/crypt/crypt_unregister_hash.obj \\\nsrc/misc/crypt/crypt_unregister_prng.obj src/misc/error_to_string.obj src/misc/hkdf/hkdf.obj \\\nsrc/misc/hkdf/hkdf_test.obj src/misc/mem_neq.obj src/misc/padding/padding_depad.obj \\\nsrc/misc/padding/padding_pad.obj src/misc/password_free.obj src/misc/pbes/pbes.obj src/misc/pbes/pbes1.obj \\\nsrc/misc/pbes/pbes2.obj src/misc/pem/pem.obj src/misc/pem/pem_pkcs.obj src/misc/pem/pem_read.obj \\\nsrc/misc/pem/pem_ssh.obj src/misc/pkcs12/pkcs12_kdf.obj src/misc/pkcs12/pkcs12_utf8_to_utf16.obj \\\nsrc/misc/pkcs5/pkcs_5_1.obj src/misc/pkcs5/pkcs_5_2.obj src/misc/pkcs5/pkcs_5_test.obj \\\nsrc/misc/ssh/ssh_decode_sequence_multi.obj src/misc/ssh/ssh_encode_sequence_multi.obj src/misc/zeromem.obj \\\nsrc/modes/cbc/cbc_decrypt.obj src/modes/cbc/cbc_done.obj src/modes/cbc/cbc_encrypt.obj \\\nsrc/modes/cbc/cbc_getiv.obj src/modes/cbc/cbc_setiv.obj src/modes/cbc/cbc_start.obj \\\nsrc/modes/cfb/cfb_decrypt.obj src/modes/cfb/cfb_done.obj src/modes/cfb/cfb_encrypt.obj \\\nsrc/modes/cfb/cfb_getiv.obj src/modes/cfb/cfb_setiv.obj src/modes/cfb/cfb_start.obj \\\nsrc/modes/ctr/ctr_decrypt.obj src/modes/ctr/ctr_done.obj src/modes/ctr/ctr_encrypt.obj \\\nsrc/modes/ctr/ctr_getiv.obj src/modes/ctr/ctr_setiv.obj src/modes/ctr/ctr_start.obj src/modes/ctr/ctr_test.obj \\\nsrc/modes/ecb/ecb_decrypt.obj src/modes/ecb/ecb_done.obj src/modes/ecb/ecb_encrypt.obj \\\nsrc/modes/ecb/ecb_start.obj src/modes/f8/f8_decrypt.obj src/modes/f8/f8_done.obj src/modes/f8/f8_encrypt.obj \\\nsrc/modes/f8/f8_getiv.obj src/modes/f8/f8_setiv.obj src/modes/f8/f8_start.obj src/modes/f8/f8_test_mode.obj \\\nsrc/modes/lrw/lrw_decrypt.obj src/modes/lrw/lrw_done.obj src/modes/lrw/lrw_encrypt.obj \\\nsrc/modes/lrw/lrw_getiv.obj src/modes/lrw/lrw_process.obj src/modes/lrw/lrw_setiv.obj \\\nsrc/modes/lrw/lrw_start.obj src/modes/lrw/lrw_test.obj src/modes/ofb/ofb_decrypt.obj src/modes/ofb/ofb_done.obj \\\nsrc/modes/ofb/ofb_encrypt.obj src/modes/ofb/ofb_getiv.obj src/modes/ofb/ofb_setiv.obj \\\nsrc/modes/ofb/ofb_start.obj src/modes/xts/xts_decrypt.obj src/modes/xts/xts_done.obj \\\nsrc/modes/xts/xts_encrypt.obj src/modes/xts/xts_init.obj src/modes/xts/xts_mult_x.obj \\\nsrc/modes/xts/xts_test.obj src/pk/asn1/der/bit/der_decode_bit_string.obj \\\nsrc/pk/asn1/der/bit/der_decode_raw_bit_string.obj src/pk/asn1/der/bit/der_encode_bit_string.obj \\\nsrc/pk/asn1/der/bit/der_encode_raw_bit_string.obj src/pk/asn1/der/bit/der_length_bit_string.obj \\\nsrc/pk/asn1/der/boolean/der_decode_boolean.obj src/pk/asn1/der/boolean/der_encode_boolean.obj \\\nsrc/pk/asn1/der/boolean/der_length_boolean.obj src/pk/asn1/der/choice/der_decode_choice.obj \\\nsrc/pk/asn1/der/custom_type/der_decode_custom_type.obj \\\nsrc/pk/asn1/der/custom_type/der_encode_custom_type.obj \\\nsrc/pk/asn1/der/custom_type/der_length_custom_type.obj src/pk/asn1/der/general/der_asn1_maps.obj \\\nsrc/pk/asn1/der/general/der_decode_asn1_identifier.obj src/pk/asn1/der/general/der_decode_asn1_length.obj \\\nsrc/pk/asn1/der/general/der_encode_asn1_identifier.obj src/pk/asn1/der/general/der_encode_asn1_length.obj \\\nsrc/pk/asn1/der/general/der_length_asn1_identifier.obj src/pk/asn1/der/general/der_length_asn1_length.obj \\\nsrc/pk/asn1/der/generalizedtime/der_decode_generalizedtime.obj \\\nsrc/pk/asn1/der/generalizedtime/der_encode_generalizedtime.obj \\\nsrc/pk/asn1/der/generalizedtime/der_length_generalizedtime.obj \\\nsrc/pk/asn1/der/ia5/der_decode_ia5_string.obj src/pk/asn1/der/ia5/der_encode_ia5_string.obj \\\nsrc/pk/asn1/der/ia5/der_length_ia5_string.obj src/pk/asn1/der/integer/der_decode_integer.obj \\\nsrc/pk/asn1/der/integer/der_encode_integer.obj src/pk/asn1/der/integer/der_length_integer.obj \\\nsrc/pk/asn1/der/object_identifier/der_decode_object_identifier.obj \\\nsrc/pk/asn1/der/object_identifier/der_encode_object_identifier.obj \\\nsrc/pk/asn1/der/object_identifier/der_length_object_identifier.obj \\\nsrc/pk/asn1/der/octet/der_decode_octet_string.obj src/pk/asn1/der/octet/der_encode_octet_string.obj \\\nsrc/pk/asn1/der/octet/der_length_octet_string.obj \\\nsrc/pk/asn1/der/printable_string/der_decode_printable_string.obj \\\nsrc/pk/asn1/der/printable_string/der_encode_printable_string.obj \\\nsrc/pk/asn1/der/printable_string/der_length_printable_string.obj \\\nsrc/pk/asn1/der/sequence/der_decode_sequence_ex.obj \\\nsrc/pk/asn1/der/sequence/der_decode_sequence_flexi.obj \\\nsrc/pk/asn1/der/sequence/der_decode_sequence_multi.obj \\\nsrc/pk/asn1/der/sequence/der_encode_sequence_ex.obj \\\nsrc/pk/asn1/der/sequence/der_encode_sequence_multi.obj \\\nsrc/pk/asn1/der/sequence/der_flexi_sequence_cmp.obj src/pk/asn1/der/sequence/der_length_sequence.obj \\\nsrc/pk/asn1/der/sequence/der_sequence_free.obj src/pk/asn1/der/sequence/der_sequence_shrink.obj \\\nsrc/pk/asn1/der/set/der_encode_set.obj src/pk/asn1/der/set/der_encode_setof.obj \\\nsrc/pk/asn1/der/short_integer/der_decode_short_integer.obj \\\nsrc/pk/asn1/der/short_integer/der_encode_short_integer.obj \\\nsrc/pk/asn1/der/short_integer/der_length_short_integer.obj \\\nsrc/pk/asn1/der/teletex_string/der_decode_teletex_string.obj \\\nsrc/pk/asn1/der/teletex_string/der_length_teletex_string.obj \\\nsrc/pk/asn1/der/utctime/der_decode_utctime.obj src/pk/asn1/der/utctime/der_encode_utctime.obj \\\nsrc/pk/asn1/der/utctime/der_length_utctime.obj src/pk/asn1/der/utf8/der_decode_utf8_string.obj \\\nsrc/pk/asn1/der/utf8/der_encode_utf8_string.obj src/pk/asn1/der/utf8/der_length_utf8_string.obj \\\nsrc/pk/asn1/oid/pk_get.obj src/pk/asn1/oid/pk_oid_cmp.obj src/pk/asn1/oid/pk_oid_str.obj \\\nsrc/pk/asn1/pkcs8/pkcs8_decode_flexi.obj src/pk/asn1/pkcs8/pkcs8_get.obj \\\nsrc/pk/asn1/x509/x509_decode_public_key_from_certificate.obj src/pk/asn1/x509/x509_decode_spki.obj \\\nsrc/pk/asn1/x509/x509_decode_subject_public_key_info.obj \\\nsrc/pk/asn1/x509/x509_encode_subject_public_key_info.obj src/pk/dh/dh.obj src/pk/dh/dh_check_pubkey.obj \\\nsrc/pk/dh/dh_export.obj src/pk/dh/dh_export_key.obj src/pk/dh/dh_free.obj src/pk/dh/dh_generate_key.obj \\\nsrc/pk/dh/dh_import.obj src/pk/dh/dh_import_pkcs8.obj src/pk/dh/dh_set.obj src/pk/dh/dh_set_pg_dhparam.obj \\\nsrc/pk/dh/dh_shared_secret.obj src/pk/dsa/dsa_decrypt_key.obj src/pk/dsa/dsa_encrypt_key.obj \\\nsrc/pk/dsa/dsa_export.obj src/pk/dsa/dsa_free.obj src/pk/dsa/dsa_generate_key.obj \\\nsrc/pk/dsa/dsa_generate_pqg.obj src/pk/dsa/dsa_import.obj src/pk/dsa/dsa_import_pkcs8.obj \\\nsrc/pk/dsa/dsa_init.obj src/pk/dsa/dsa_make_key.obj src/pk/dsa/dsa_set.obj src/pk/dsa/dsa_set_pqg_dsaparam.obj \\\nsrc/pk/dsa/dsa_shared_secret.obj src/pk/dsa/dsa_sign_hash.obj src/pk/dsa/dsa_verify_hash.obj \\\nsrc/pk/dsa/dsa_verify_key.obj src/pk/ec25519/ec25519_crypto_ctx.obj src/pk/ec25519/ec25519_export.obj \\\nsrc/pk/ec25519/ec25519_import_pkcs8.obj src/pk/ec25519/tweetnacl.obj src/pk/ecc/ecc.obj \\\nsrc/pk/ecc/ecc_ansi_x963_export.obj src/pk/ecc/ecc_ansi_x963_import.obj src/pk/ecc/ecc_decrypt_key.obj \\\nsrc/pk/ecc/ecc_encrypt_key.obj src/pk/ecc/ecc_export.obj src/pk/ecc/ecc_export_openssl.obj \\\nsrc/pk/ecc/ecc_find_curve.obj src/pk/ecc/ecc_free.obj src/pk/ecc/ecc_get_key.obj src/pk/ecc/ecc_get_oid_str.obj \\\nsrc/pk/ecc/ecc_get_size.obj src/pk/ecc/ecc_import.obj src/pk/ecc/ecc_import_openssl.obj \\\nsrc/pk/ecc/ecc_import_pkcs8.obj src/pk/ecc/ecc_import_x509.obj src/pk/ecc/ecc_make_key.obj \\\nsrc/pk/ecc/ecc_recover_key.obj src/pk/ecc/ecc_set_curve.obj src/pk/ecc/ecc_set_curve_internal.obj \\\nsrc/pk/ecc/ecc_set_key.obj src/pk/ecc/ecc_shared_secret.obj src/pk/ecc/ecc_sign_hash.obj \\\nsrc/pk/ecc/ecc_sizes.obj src/pk/ecc/ecc_ssh_ecdsa_encode_name.obj src/pk/ecc/ecc_verify_hash.obj \\\nsrc/pk/ecc/ltc_ecc_export_point.obj src/pk/ecc/ltc_ecc_import_point.obj src/pk/ecc/ltc_ecc_is_point.obj \\\nsrc/pk/ecc/ltc_ecc_is_point_at_infinity.obj src/pk/ecc/ltc_ecc_map.obj src/pk/ecc/ltc_ecc_mul2add.obj \\\nsrc/pk/ecc/ltc_ecc_mulmod.obj src/pk/ecc/ltc_ecc_mulmod_timing.obj src/pk/ecc/ltc_ecc_points.obj \\\nsrc/pk/ecc/ltc_ecc_projective_add_point.obj src/pk/ecc/ltc_ecc_projective_dbl_point.obj \\\nsrc/pk/ecc/ltc_ecc_verify_key.obj src/pk/ed25519/ed25519_export.obj src/pk/ed25519/ed25519_import.obj \\\nsrc/pk/ed25519/ed25519_import_pkcs8.obj src/pk/ed25519/ed25519_import_raw.obj \\\nsrc/pk/ed25519/ed25519_import_x509.obj src/pk/ed25519/ed25519_make_key.obj src/pk/ed25519/ed25519_sign.obj \\\nsrc/pk/ed25519/ed25519_verify.obj src/pk/pka_key.obj src/pk/pkcs1/pkcs_1_i2osp.obj src/pk/pkcs1/pkcs_1_mgf1.obj \\\nsrc/pk/pkcs1/pkcs_1_oaep_decode.obj src/pk/pkcs1/pkcs_1_oaep_encode.obj src/pk/pkcs1/pkcs_1_os2ip.obj \\\nsrc/pk/pkcs1/pkcs_1_pss_decode.obj src/pk/pkcs1/pkcs_1_pss_encode.obj src/pk/pkcs1/pkcs_1_v1_5_decode.obj \\\nsrc/pk/pkcs1/pkcs_1_v1_5_encode.obj src/pk/rsa/rsa_decrypt_key.obj src/pk/rsa/rsa_encrypt_key.obj \\\nsrc/pk/rsa/rsa_export.obj src/pk/rsa/rsa_exptmod.obj src/pk/rsa/rsa_get_size.obj src/pk/rsa/rsa_import.obj \\\nsrc/pk/rsa/rsa_import_pkcs8.obj src/pk/rsa/rsa_import_x509.obj src/pk/rsa/rsa_key.obj \\\nsrc/pk/rsa/rsa_make_key.obj src/pk/rsa/rsa_set.obj src/pk/rsa/rsa_sign_hash.obj \\\nsrc/pk/rsa/rsa_sign_saltlen_get.obj src/pk/rsa/rsa_verify_hash.obj src/pk/x25519/x25519_export.obj \\\nsrc/pk/x25519/x25519_import.obj src/pk/x25519/x25519_import_pkcs8.obj src/pk/x25519/x25519_import_raw.obj \\\nsrc/pk/x25519/x25519_import_x509.obj src/pk/x25519/x25519_make_key.obj \\\nsrc/pk/x25519/x25519_shared_secret.obj src/prngs/chacha20.obj src/prngs/fortuna.obj src/prngs/rc4.obj \\\nsrc/prngs/rng_get_bytes.obj src/prngs/rng_make_prng.obj src/prngs/sober128.obj src/prngs/sprng.obj \\\nsrc/prngs/yarrow.obj src/stream/chacha/chacha_crypt.obj src/stream/chacha/chacha_done.obj \\\nsrc/stream/chacha/chacha_ivctr32.obj src/stream/chacha/chacha_ivctr64.obj \\\nsrc/stream/chacha/chacha_keystream.obj src/stream/chacha/chacha_memory.obj \\\nsrc/stream/chacha/chacha_setup.obj src/stream/chacha/chacha_test.obj src/stream/rabbit/rabbit.obj \\\nsrc/stream/rabbit/rabbit_memory.obj src/stream/rc4/rc4_stream.obj src/stream/rc4/rc4_stream_memory.obj \\\nsrc/stream/rc4/rc4_test.obj src/stream/salsa20/salsa20_crypt.obj src/stream/salsa20/salsa20_done.obj \\\nsrc/stream/salsa20/salsa20_ivctr64.obj src/stream/salsa20/salsa20_keystream.obj \\\nsrc/stream/salsa20/salsa20_memory.obj src/stream/salsa20/salsa20_setup.obj \\\nsrc/stream/salsa20/salsa20_test.obj src/stream/salsa20/xsalsa20_memory.obj \\\nsrc/stream/salsa20/xsalsa20_setup.obj src/stream/salsa20/xsalsa20_test.obj \\\nsrc/stream/sober128/sober128_stream.obj src/stream/sober128/sober128_stream_memory.obj \\\nsrc/stream/sober128/sober128_test.obj src/stream/sosemanuk/sosemanuk.obj \\\nsrc/stream/sosemanuk/sosemanuk_memory.obj src/stream/sosemanuk/sosemanuk_test.obj\n\n#List of test objects to compile\nTOBJECTS=tests/base16_test.obj tests/base32_test.obj tests/base64_test.obj tests/bcrypt_test.obj \\\ntests/cipher_hash_test.obj tests/common.obj tests/der_test.obj tests/dh_test.obj tests/dsa_test.obj \\\ntests/ecc_test.obj tests/ed25519_test.obj tests/file_test.obj tests/mac_test.obj tests/misc_test.obj \\\ntests/modes_test.obj tests/mpi_test.obj tests/multi_test.obj tests/no_null_termination_check_test.obj \\\ntests/no_prng.obj tests/padding_test.obj tests/pem_test.obj tests/pkcs_1_eme_test.obj tests/pkcs_1_emsa_test.obj \\\ntests/pkcs_1_oaep_test.obj tests/pkcs_1_pss_test.obj tests/pkcs_1_test.obj tests/prng_test.obj \\\ntests/rotate_test.obj tests/rsa_test.obj tests/ssh_test.obj tests/store_test.obj tests/test.obj tests/x25519_test.obj\n\n#The following headers will be installed by \"make install\"\nHEADERS_PUB=src/headers/tomcrypt.h src/headers/tomcrypt_argchk.h src/headers/tomcrypt_cfg.h \\\nsrc/headers/tomcrypt_cipher.h src/headers/tomcrypt_custom.h src/headers/tomcrypt_hash.h \\\nsrc/headers/tomcrypt_mac.h src/headers/tomcrypt_macros.h src/headers/tomcrypt_math.h \\\nsrc/headers/tomcrypt_misc.h src/headers/tomcrypt_pk.h src/headers/tomcrypt_pkcs.h \\\nsrc/headers/tomcrypt_prng.h\n\nHEADERS=$(HEADERS_PUB) src/headers/tomcrypt_private.h\n\n#The default rule for make builds the tomcrypt.lib library (static)\ndefault: $(LIBMAIN_S)\n\n#SPECIAL: AES comes in two flavours - enc+dec and enc-only\nsrc/ciphers/aes/aes_enc.obj: src/ciphers/aes/aes.c src/ciphers/aes/aes_tab.c\n\t$(CC) $(LTC_CFLAGS) /DENCRYPT_ONLY /c src/ciphers/aes/aes.c /Fosrc/ciphers/aes/aes_enc.obj\nsrc/ciphers/aes/aes_enc_desc.obj: src/ciphers/aes/aes_desc.c\n\t$(CC) $(LTC_CFLAGS) /DENCRYPT_ONLY /c src/ciphers/aes/aes_desc.c /Fosrc/ciphers/aes/aes_enc_desc.obj\n\n#SPECIAL: these are the rules to make certain object files\nsrc/ciphers/aes/aes.obj: src/ciphers/aes/aes.c src/ciphers/aes/aes_tab.c\nsrc/ciphers/twofish/twofish.obj: src/ciphers/twofish/twofish.c src/ciphers/twofish/twofish_tab.c\nsrc/hashes/sha2/sha256.obj: src/hashes/sha2/sha256.c src/hashes/sha2/sha224.c\nsrc/hashes/sha2/sha384.obj: src/hashes/sha2/sha384.c src/hashes/sha2/sha512.c\nsrc/hashes/sha2/sha512.obj: src/hashes/sha2/sha512.c src/hashes/sha2/sha384.c\nsrc/hashes/sha2/sha512_224.obj: src/hashes/sha2/sha512.c src/hashes/sha2/sha512_224.c\nsrc/hashes/sha2/sha512_256.obj: src/hashes/sha2/sha512.c src/hashes/sha2/sha512_256.c\nsrc/hashes/whirl/whirl.obj: src/hashes/whirl/whirl.c src/hashes/whirl/whirltab.c\n\n#Dependencies on *.h\n$(OBJECTS): $(HEADERS)\n$(TOBJECTS): $(HEADERS) tests/tomcrypt_test.h\n\n.c.obj:\n\t$(CC) $(LTC_CFLAGS) /c $< /Fo$@\n\n#Create tomcrypt.lib\n$(LIBMAIN_S): $(OBJECTS)\n\tlib /out:$(LIBMAIN_S) $(OBJECTS)\n\n#Demo tools/utilities\nhashsum.exe: demos/hashsum.c tests/common.c $(LIBMAIN_S)\n\tcl $(LTC_CFLAGS) demos/hashsum.c tests/common.c $(LIBMAIN_S) $(LTC_LDFLAGS) /Fe$@\ncrypt.exe: demos/crypt.c $(LIBMAIN_S)\n\tcl $(LTC_CFLAGS) demos/crypt.c tests/common.c $(LIBMAIN_S) $(LTC_LDFLAGS) /Fe$@\nsmall.exe: demos/small.c $(LIBMAIN_S)\n\tcl $(LTC_CFLAGS) demos/small.c tests/common.c $(LIBMAIN_S) $(LTC_LDFLAGS) /Fe$@\ntv_gen.exe: demos/tv_gen.c $(LIBMAIN_S)\n\tcl $(LTC_CFLAGS) demos/tv_gen.c tests/common.c $(LIBMAIN_S) $(LTC_LDFLAGS) /Fe$@\nsizes.exe: demos/sizes.c $(LIBMAIN_S)\n\tcl $(LTC_CFLAGS) demos/sizes.c tests/common.c $(LIBMAIN_S) $(LTC_LDFLAGS) /Fe$@\nconstants.exe: demos/constants.c $(LIBMAIN_S)\n\tcl $(LTC_CFLAGS) demos/constants.c tests/common.c $(LIBMAIN_S) $(LTC_LDFLAGS) /Fe$@\ntiming.exe: demos/timing.c $(LIBMAIN_S)\n\tcl $(LTC_CFLAGS) demos/timing.c tests/common.c $(LIBMAIN_S) $(LTC_LDFLAGS) /Fe$@\n\n#Tests\ntest.exe: $(LIBMAIN_S) $(TOBJECTS)\n\tcl $(LTC_CFLAGS) $(TOBJECTS) $(LIBMAIN_S) $(LTC_LDFLAGS) /Fe$@\n\t@echo NOTICE: start the tests by launching test.exe\n\nall: $(LIBMAIN_S) hashsum.exe crypt.exe small.exe tv_gen.exe sizes.exe constants.exe timing.exe test.exe\n\ntest: test.exe\n\nclean:\n\t@-cmd /c del /Q *_tv.txt 2>nul\n\t@-cmd /c del /Q /S *.OBJ *.LIB *.EXE *.DLL 2>nul\n\n#Install the library + headers\ninstall: $(LIBMAIN_S)\n\tcmd /c if not exist \"$(PREFIX)\\bin\" mkdir \"$(PREFIX)\\bin\"\n\tcmd /c if not exist \"$(PREFIX)\\lib\" mkdir \"$(PREFIX)\\lib\"\n\tcmd /c if not exist \"$(PREFIX)\\include\" mkdir \"$(PREFIX)\\include\"\n\tcopy /Y $(LIBMAIN_S) \"$(PREFIX)\\lib\"\n\tcopy /Y src\\headers\\tomcrypt*.h \"$(PREFIX)\\include\"\n\n#Install useful tools\ninstall_bins: hashsum.exe\n\tcmd /c if not exist \"$(PREFIX)\\bin\" mkdir \"$(PREFIX)\\bin\"\n\tcopy /Y hashsum.exe \"$(PREFIX)\\bin\\ltc-hashsum.exe\"\n\n#Install documentation\ninstall_docs: doc/crypt.pdf\n\tcmd /c if not exist \"$(PREFIX)\\doc\" mkdir \"$(PREFIX)\\doc\"\n\tcopy /Y doc\\crypt.pdf \"$(PREFIX)\\doc\"\n"
        },
        {
          "name": "makefile.shared",
          "type": "blob",
          "size": 3.978515625,
          "content": "# MAKEFILE for linux GCC\n#\n# This makefile produces a shared object and requires libtool to be installed.\n#\n# Thanks to Zed Shaw for helping debug this on BSD/OSX.\n# Tom St Denis\n#\n#  (GNU make only)\n\n### USAGE:\n#\n# CFLAGS=\"-DUSE_LTM -DLTM_DESC -I/path/to/libtommath\" make -f makefile.shared all EXTRALIBS=/path/to/libtommath/libtommath.a\n# ./test\n# make -f makefile.shared PREFIX=/opt/libtom install\n#\n\nPLATFORM := $(shell uname | sed -e 's/_.*//')\n### Observed uname outputs:\n# MINGW32_NT-6.2          (on MSYS/MINGW old)\n# MINGW64_NT-10.0-14393   (on MSYS new)\n# MSYS_NT-10.0-19042      (on MSYS2)\n# CYGWIN_NT-10.0          (on Cygwin 64bit)\n# CYGWIN_NT-6.2-WOW64     (on Cygwin 32bit)\n# Linux                   (on all Linux distros)\n# Darwin                  (on macOS, OS X)\n\nifeq ($(LIBTOOL),rlibtool)\n  TGTLIBTOOL:=slibtool-shared\nelse\n  ifndef LIBTOOL\n    ifeq ($(PLATFORM), Darwin)\n      TGTLIBTOOL:=glibtool\n    else\n      TGTLIBTOOL:=libtool\n    endif\n  else\n    TGTLIBTOOL=$(LIBTOOL)\n  endif\nendif\n\nifneq ($(findstring $(PLATFORM),CYGWIN MINGW32 MINGW64 MSYS),)\n  NO_UNDEFINED:=-no-undefined\nendif\n\nLTCOMPILE = $(TGTLIBTOOL) --mode=compile --tag=CC $(CC)\nINSTALL_CMD = $(TGTLIBTOOL) --mode=install install\nUNINSTALL_CMD = $(TGTLIBTOOL) --mode=uninstall rm\n\n#Output filenames for various targets.\nifndef LIBNAME\n   LIBNAME=libtomcrypt.la\nendif\n\n\ninclude makefile_include.mk\n\nifneq ($(findstring -DLTM_DESC,$(LTC_CFLAGS)),)\nLTC_PKG_CONFIG_CFLAGS += -DLTM_DESC\nLTC_PKG_CONFIG_LIBS += -ltommath\nendif\nifneq ($(findstring -DTFM_DESC,$(LTC_CFLAGS)),)\nLTC_PKG_CONFIG_CFLAGS += -DTFM_DESC\nLTC_PKG_CONFIG_LIBS += -ltfm\nendif\nifneq ($(findstring -DGMP_DESC,$(LTC_CFLAGS)),)\nLTC_PKG_CONFIG_CFLAGS += -DGMP_DESC\nLTC_PKG_CONFIG_LIBS += -lgmp\nendif\nifneq ($(findstring -DLTC_PTHREAD,$(LTC_CFLAGS)),)\nLTC_PKG_CONFIG_CFLAGS += -DLTC_PTHREAD\nendif\n\n# set PKG_CONFIG_CFLAGS and PKG_CONFIG_LIBS to what your environment requires\nLTC_PKG_CONFIG_CFLAGS += $(PKG_CONFIG_CFLAGS)\nLTC_PKG_CONFIG_LIBS += $(PKG_CONFIG_LIBS)\n\n#ciphers come in two flavours... enc+dec and enc\nsrc/ciphers/aes/aes_enc.o: src/ciphers/aes/aes.c src/ciphers/aes/aes_tab.c\n\t$(LTCOMPILE) $(LTC_CFLAGS) $(CPPFLAGS) $(LTC_LDFLAGS) -DENCRYPT_ONLY -c src/ciphers/aes/aes.c -o src/ciphers/aes/aes_enc.o\nsrc/ciphers/aes/aes_enc_desc.o: src/ciphers/aes/aes_desc.c\n\t$(LTCOMPILE) $(LTC_CFLAGS) $(CPPFLAGS) $(LTC_LDFLAGS) -DENCRYPT_ONLY -c src/ciphers/aes/aes_desc.c -o src/ciphers/aes/aes_enc_desc.o\n\n.c.o:\n\t$(LTCOMPILE) $(LTC_CFLAGS) $(CPPFLAGS) $(LTC_LDFLAGS) -o $@ -c $<\n\nLOBJECTS = $(OBJECTS:.o=.lo)\n\n$(LIBNAME): $(OBJECTS)\n\t$(TGTLIBTOOL) --mode=link --tag=CC $(CC) $(LTC_LDFLAGS) $(LOBJECTS) $(EXTRALIBS) -o $@ -rpath $(LIBPATH) -version-info $(VERSION_LT) $(NO_UNDEFINED)\n\ntest: $(call print-help,test,Builds the library and the 'test' application to run all self-tests) $(LIBNAME) $(TOBJECTS)\n\t$(TGTLIBTOOL) --mode=link --tag=CC $(CC) $(LTC_LDFLAGS) -o $(TEST) $(TOBJECTS) $(LIBNAME) $(EXTRALIBS)\n\n# build the demos from a template\ndefine DEMO_template\n$(1): $(call print-help,$(1),Builds the library and the '$(1)' demo) demos/$(1).o $$(LIBNAME)\n\t$$(TGTLIBTOOL) --mode=link --tag=CC $$(CC) $$(LTC_LDFLAGS) $$^ $$(EXTRALIBS) -o $$@\nendef\n\n$(foreach demo, $(strip $(DEMOS)), $(eval $(call DEMO_template,$(demo))))\n\ninstall: $(call print-help,install,Installs the library + headers + pkg-config file) .common_install\n\tsed -e 's,^prefix=.*,prefix=$(PREFIX),' -e 's,^Version:.*,Version: $(VERSION_PC),' -e 's,^libdir=.*,libdir=$(LIBPATH),' \\\n\t\t-e 's,^includedir=.*,includedir=$(INCPATH),' \\\n\t\t-e 's,@PKG_CONFIG_LIBS@,$(LTC_PKG_CONFIG_LIBS),' \\\n\t\t-e 's,@PKG_CONFIG_CFLAGS@,$(LTC_PKG_CONFIG_CFLAGS),' libtomcrypt.pc.in > libtomcrypt.pc\n\tinstall -p -d $(DESTDIR)$(LIBPATH)/pkgconfig\n\tinstall -p -m 644 libtomcrypt.pc $(DESTDIR)$(LIBPATH)/pkgconfig/\n\ninstall_bins: $(call print-help,install_bins,Installs the useful demos ($(USEFUL_DEMOS))) .common_install_bins\n\nuninstall: $(call print-help,uninstall,Uninstalls the library + headers + pkg-config file) .common_uninstall\n\trm $(DESTDIR)$(LIBPATH)/pkgconfig/libtomcrypt.pc\n"
        },
        {
          "name": "makefile.unix",
          "type": "blob",
          "size": 22.2841796875,
          "content": "# MAKEFILE that is intended to be compatible with any kind of make (GNU make, BSD make, ...)\n# works on: Linux, *BSD, Cygwin, AIX, HP-UX and hopefully other UNIX systems\n#\n# Please do not use here neither any special make syntax nor any unusual tools/utilities!\n#\n# BEWARE: variables OBJECTS, TOBJECTS, HEADERS, VERSION are updated via ./updatemakes.sh\n\n### USAGE:\n#\n# make -f makefile.unix all\n# ./test\n# make -f makefile.unix install\n#\n#Or:\n#\n# make -f makefile.unix CFLAGS=\"-O3 -DUSE_LTM -DLTM_DESC -I/path/to/libtommath\" EXTRALIBS=/path/to/libtommath/libtommath.a all\n# ./test\n# make -f makefile.unix PREFIX=/opt/libtom install\n#\n#Or if you are using Intel C compiler you might need something like:\n#\n# make -f makefile.unix CC=icc AR=xiar CFLAGS=\"-fast -DUSE_LTM -DLTM_DESC -I/path/to/libtommath\" EXTRALIBS=/path/to/libtommath/libtommath.a all\n#\n\n#The following can be overridden from command line e.g. \"make -f makefile.unix CC=gcc ARFLAGS=rcs\"\nDESTDIR   =\nPREFIX    = /usr/local\nLIBPATH   = $(PREFIX)/lib\nINCPATH   = $(PREFIX)/include\nDATAPATH  = $(PREFIX)/share/doc/libtomcrypt/pdf\nBINPATH   = $(PREFIX)/bin\nCC        = cc\nAR        = ar\nARFLAGS   = r\nRANLIB    = ranlib\nCFLAGS    = -O2 -DUSE_LTM -DLTM_DESC -I../libtommath\nEXTRALIBS = ../libtommath/libtommath.a\n# pkg-config flags, added to libtomcrypt.pc on install time\nPC_CFLAGS = -DLTM_DESC\nPC_LIBS   = -ltommath\n\n#Compilation flags\nLTC_CFLAGS  = -Isrc/headers -Itests -DLTC_SOURCE $(CFLAGS)\nLTC_LDFLAGS = $(LDFLAGS) $(EXTRALIBS)\nVERSION=1.18.2-develop\nVERSION_PC=1.18.2\n\n#Libraries to be created (this makefile builds only static libraries)\nLIBMAIN_S =libtomcrypt.a\n\n#List of objects to compile (all goes to libtomcrypt.a)\nOBJECTS=src/ciphers/aes/aes.o src/ciphers/aes/aes_desc.o src/ciphers/aes/aes_enc.o \\\nsrc/ciphers/aes/aes_enc_desc.o src/ciphers/aes/aesni.o src/ciphers/anubis.o src/ciphers/blowfish.o \\\nsrc/ciphers/camellia.o src/ciphers/cast5.o src/ciphers/des.o src/ciphers/idea.o src/ciphers/kasumi.o \\\nsrc/ciphers/khazad.o src/ciphers/kseed.o src/ciphers/multi2.o src/ciphers/noekeon.o src/ciphers/rc2.o \\\nsrc/ciphers/rc5.o src/ciphers/rc6.o src/ciphers/safer/safer.o src/ciphers/safer/saferp.o \\\nsrc/ciphers/serpent.o src/ciphers/skipjack.o src/ciphers/sm4.o src/ciphers/tea.o \\\nsrc/ciphers/twofish/twofish.o src/ciphers/xtea.o src/encauth/ccm/ccm_add_aad.o \\\nsrc/encauth/ccm/ccm_add_nonce.o src/encauth/ccm/ccm_done.o src/encauth/ccm/ccm_init.o \\\nsrc/encauth/ccm/ccm_memory.o src/encauth/ccm/ccm_process.o src/encauth/ccm/ccm_reset.o \\\nsrc/encauth/ccm/ccm_test.o src/encauth/chachapoly/chacha20poly1305_add_aad.o \\\nsrc/encauth/chachapoly/chacha20poly1305_decrypt.o src/encauth/chachapoly/chacha20poly1305_done.o \\\nsrc/encauth/chachapoly/chacha20poly1305_encrypt.o src/encauth/chachapoly/chacha20poly1305_init.o \\\nsrc/encauth/chachapoly/chacha20poly1305_memory.o src/encauth/chachapoly/chacha20poly1305_setiv.o \\\nsrc/encauth/chachapoly/chacha20poly1305_setiv_rfc7905.o \\\nsrc/encauth/chachapoly/chacha20poly1305_test.o src/encauth/eax/eax_addheader.o \\\nsrc/encauth/eax/eax_decrypt.o src/encauth/eax/eax_decrypt_verify_memory.o src/encauth/eax/eax_done.o \\\nsrc/encauth/eax/eax_encrypt.o src/encauth/eax/eax_encrypt_authenticate_memory.o \\\nsrc/encauth/eax/eax_init.o src/encauth/eax/eax_test.o src/encauth/gcm/gcm_add_aad.o \\\nsrc/encauth/gcm/gcm_add_iv.o src/encauth/gcm/gcm_done.o src/encauth/gcm/gcm_gf_mult.o \\\nsrc/encauth/gcm/gcm_init.o src/encauth/gcm/gcm_memory.o src/encauth/gcm/gcm_mult_h.o \\\nsrc/encauth/gcm/gcm_process.o src/encauth/gcm/gcm_reset.o src/encauth/gcm/gcm_test.o \\\nsrc/encauth/ocb/ocb_decrypt.o src/encauth/ocb/ocb_decrypt_verify_memory.o \\\nsrc/encauth/ocb/ocb_done_decrypt.o src/encauth/ocb/ocb_done_encrypt.o src/encauth/ocb/ocb_encrypt.o \\\nsrc/encauth/ocb/ocb_encrypt_authenticate_memory.o src/encauth/ocb/ocb_init.o src/encauth/ocb/ocb_ntz.o \\\nsrc/encauth/ocb/ocb_shift_xor.o src/encauth/ocb/ocb_test.o src/encauth/ocb/s_ocb_done.o \\\nsrc/encauth/ocb3/ocb3_add_aad.o src/encauth/ocb3/ocb3_decrypt.o src/encauth/ocb3/ocb3_decrypt_last.o \\\nsrc/encauth/ocb3/ocb3_decrypt_verify_memory.o src/encauth/ocb3/ocb3_done.o \\\nsrc/encauth/ocb3/ocb3_encrypt.o src/encauth/ocb3/ocb3_encrypt_authenticate_memory.o \\\nsrc/encauth/ocb3/ocb3_encrypt_last.o src/encauth/ocb3/ocb3_init.o src/encauth/ocb3/ocb3_int_ntz.o \\\nsrc/encauth/ocb3/ocb3_int_xor_blocks.o src/encauth/ocb3/ocb3_test.o src/encauth/siv/siv.o \\\nsrc/hashes/blake2b.o src/hashes/blake2s.o src/hashes/chc/chc.o src/hashes/helper/hash_file.o \\\nsrc/hashes/helper/hash_filehandle.o src/hashes/helper/hash_memory.o \\\nsrc/hashes/helper/hash_memory_multi.o src/hashes/md2.o src/hashes/md4.o src/hashes/md5.o \\\nsrc/hashes/rmd128.o src/hashes/rmd160.o src/hashes/rmd256.o src/hashes/rmd320.o src/hashes/sha1.o \\\nsrc/hashes/sha2/sha224.o src/hashes/sha2/sha256.o src/hashes/sha2/sha384.o src/hashes/sha2/sha512.o \\\nsrc/hashes/sha2/sha512_224.o src/hashes/sha2/sha512_256.o src/hashes/sha3.o src/hashes/sha3_test.o \\\nsrc/hashes/tiger.o src/hashes/whirl/whirl.o src/mac/blake2/blake2bmac.o \\\nsrc/mac/blake2/blake2bmac_file.o src/mac/blake2/blake2bmac_memory.o \\\nsrc/mac/blake2/blake2bmac_memory_multi.o src/mac/blake2/blake2bmac_test.o src/mac/blake2/blake2smac.o \\\nsrc/mac/blake2/blake2smac_file.o src/mac/blake2/blake2smac_memory.o \\\nsrc/mac/blake2/blake2smac_memory_multi.o src/mac/blake2/blake2smac_test.o src/mac/f9/f9_done.o \\\nsrc/mac/f9/f9_file.o src/mac/f9/f9_init.o src/mac/f9/f9_memory.o src/mac/f9/f9_memory_multi.o \\\nsrc/mac/f9/f9_process.o src/mac/f9/f9_test.o src/mac/hmac/hmac_done.o src/mac/hmac/hmac_file.o \\\nsrc/mac/hmac/hmac_init.o src/mac/hmac/hmac_memory.o src/mac/hmac/hmac_memory_multi.o \\\nsrc/mac/hmac/hmac_process.o src/mac/hmac/hmac_test.o src/mac/omac/omac_done.o src/mac/omac/omac_file.o \\\nsrc/mac/omac/omac_init.o src/mac/omac/omac_memory.o src/mac/omac/omac_memory_multi.o \\\nsrc/mac/omac/omac_process.o src/mac/omac/omac_test.o src/mac/pelican/pelican.o \\\nsrc/mac/pelican/pelican_memory.o src/mac/pelican/pelican_test.o src/mac/pmac/pmac_done.o \\\nsrc/mac/pmac/pmac_file.o src/mac/pmac/pmac_init.o src/mac/pmac/pmac_memory.o \\\nsrc/mac/pmac/pmac_memory_multi.o src/mac/pmac/pmac_ntz.o src/mac/pmac/pmac_process.o \\\nsrc/mac/pmac/pmac_shift_xor.o src/mac/pmac/pmac_test.o src/mac/poly1305/poly1305.o \\\nsrc/mac/poly1305/poly1305_file.o src/mac/poly1305/poly1305_memory.o \\\nsrc/mac/poly1305/poly1305_memory_multi.o src/mac/poly1305/poly1305_test.o src/mac/xcbc/xcbc_done.o \\\nsrc/mac/xcbc/xcbc_file.o src/mac/xcbc/xcbc_init.o src/mac/xcbc/xcbc_memory.o \\\nsrc/mac/xcbc/xcbc_memory_multi.o src/mac/xcbc/xcbc_process.o src/mac/xcbc/xcbc_test.o \\\nsrc/math/fp/ltc_ecc_fp_mulmod.o src/math/gmp_desc.o src/math/ltm_desc.o src/math/multi.o \\\nsrc/math/radix_to_bin.o src/math/rand_bn.o src/math/rand_prime.o src/math/tfm_desc.o src/misc/adler32.o \\\nsrc/misc/base16/base16_decode.o src/misc/base16/base16_encode.o src/misc/base32/base32_decode.o \\\nsrc/misc/base32/base32_encode.o src/misc/base64/base64_decode.o src/misc/base64/base64_encode.o \\\nsrc/misc/bcrypt/bcrypt.o src/misc/burn_stack.o src/misc/compare_testvector.o src/misc/copy_or_zeromem.o \\\nsrc/misc/crc32.o src/misc/crypt/crypt.o src/misc/crypt/crypt_argchk.o \\\nsrc/misc/crypt/crypt_cipher_descriptor.o src/misc/crypt/crypt_cipher_is_valid.o \\\nsrc/misc/crypt/crypt_constants.o src/misc/crypt/crypt_find_cipher.o \\\nsrc/misc/crypt/crypt_find_cipher_any.o src/misc/crypt/crypt_find_cipher_id.o \\\nsrc/misc/crypt/crypt_find_hash.o src/misc/crypt/crypt_find_hash_any.o \\\nsrc/misc/crypt/crypt_find_hash_id.o src/misc/crypt/crypt_find_hash_oid.o \\\nsrc/misc/crypt/crypt_find_prng.o src/misc/crypt/crypt_fsa.o src/misc/crypt/crypt_hash_descriptor.o \\\nsrc/misc/crypt/crypt_hash_is_valid.o src/misc/crypt/crypt_inits.o \\\nsrc/misc/crypt/crypt_ltc_mp_descriptor.o src/misc/crypt/crypt_prng_descriptor.o \\\nsrc/misc/crypt/crypt_prng_is_valid.o src/misc/crypt/crypt_prng_rng_descriptor.o \\\nsrc/misc/crypt/crypt_register_all_ciphers.o src/misc/crypt/crypt_register_all_hashes.o \\\nsrc/misc/crypt/crypt_register_all_prngs.o src/misc/crypt/crypt_register_cipher.o \\\nsrc/misc/crypt/crypt_register_hash.o src/misc/crypt/crypt_register_prng.o src/misc/crypt/crypt_sizes.o \\\nsrc/misc/crypt/crypt_unregister_cipher.o src/misc/crypt/crypt_unregister_hash.o \\\nsrc/misc/crypt/crypt_unregister_prng.o src/misc/error_to_string.o src/misc/hkdf/hkdf.o \\\nsrc/misc/hkdf/hkdf_test.o src/misc/mem_neq.o src/misc/padding/padding_depad.o \\\nsrc/misc/padding/padding_pad.o src/misc/password_free.o src/misc/pbes/pbes.o src/misc/pbes/pbes1.o \\\nsrc/misc/pbes/pbes2.o src/misc/pem/pem.o src/misc/pem/pem_pkcs.o src/misc/pem/pem_read.o \\\nsrc/misc/pem/pem_ssh.o src/misc/pkcs12/pkcs12_kdf.o src/misc/pkcs12/pkcs12_utf8_to_utf16.o \\\nsrc/misc/pkcs5/pkcs_5_1.o src/misc/pkcs5/pkcs_5_2.o src/misc/pkcs5/pkcs_5_test.o \\\nsrc/misc/ssh/ssh_decode_sequence_multi.o src/misc/ssh/ssh_encode_sequence_multi.o src/misc/zeromem.o \\\nsrc/modes/cbc/cbc_decrypt.o src/modes/cbc/cbc_done.o src/modes/cbc/cbc_encrypt.o \\\nsrc/modes/cbc/cbc_getiv.o src/modes/cbc/cbc_setiv.o src/modes/cbc/cbc_start.o \\\nsrc/modes/cfb/cfb_decrypt.o src/modes/cfb/cfb_done.o src/modes/cfb/cfb_encrypt.o \\\nsrc/modes/cfb/cfb_getiv.o src/modes/cfb/cfb_setiv.o src/modes/cfb/cfb_start.o \\\nsrc/modes/ctr/ctr_decrypt.o src/modes/ctr/ctr_done.o src/modes/ctr/ctr_encrypt.o \\\nsrc/modes/ctr/ctr_getiv.o src/modes/ctr/ctr_setiv.o src/modes/ctr/ctr_start.o src/modes/ctr/ctr_test.o \\\nsrc/modes/ecb/ecb_decrypt.o src/modes/ecb/ecb_done.o src/modes/ecb/ecb_encrypt.o \\\nsrc/modes/ecb/ecb_start.o src/modes/f8/f8_decrypt.o src/modes/f8/f8_done.o src/modes/f8/f8_encrypt.o \\\nsrc/modes/f8/f8_getiv.o src/modes/f8/f8_setiv.o src/modes/f8/f8_start.o src/modes/f8/f8_test_mode.o \\\nsrc/modes/lrw/lrw_decrypt.o src/modes/lrw/lrw_done.o src/modes/lrw/lrw_encrypt.o \\\nsrc/modes/lrw/lrw_getiv.o src/modes/lrw/lrw_process.o src/modes/lrw/lrw_setiv.o \\\nsrc/modes/lrw/lrw_start.o src/modes/lrw/lrw_test.o src/modes/ofb/ofb_decrypt.o src/modes/ofb/ofb_done.o \\\nsrc/modes/ofb/ofb_encrypt.o src/modes/ofb/ofb_getiv.o src/modes/ofb/ofb_setiv.o \\\nsrc/modes/ofb/ofb_start.o src/modes/xts/xts_decrypt.o src/modes/xts/xts_done.o \\\nsrc/modes/xts/xts_encrypt.o src/modes/xts/xts_init.o src/modes/xts/xts_mult_x.o \\\nsrc/modes/xts/xts_test.o src/pk/asn1/der/bit/der_decode_bit_string.o \\\nsrc/pk/asn1/der/bit/der_decode_raw_bit_string.o src/pk/asn1/der/bit/der_encode_bit_string.o \\\nsrc/pk/asn1/der/bit/der_encode_raw_bit_string.o src/pk/asn1/der/bit/der_length_bit_string.o \\\nsrc/pk/asn1/der/boolean/der_decode_boolean.o src/pk/asn1/der/boolean/der_encode_boolean.o \\\nsrc/pk/asn1/der/boolean/der_length_boolean.o src/pk/asn1/der/choice/der_decode_choice.o \\\nsrc/pk/asn1/der/custom_type/der_decode_custom_type.o \\\nsrc/pk/asn1/der/custom_type/der_encode_custom_type.o \\\nsrc/pk/asn1/der/custom_type/der_length_custom_type.o src/pk/asn1/der/general/der_asn1_maps.o \\\nsrc/pk/asn1/der/general/der_decode_asn1_identifier.o src/pk/asn1/der/general/der_decode_asn1_length.o \\\nsrc/pk/asn1/der/general/der_encode_asn1_identifier.o src/pk/asn1/der/general/der_encode_asn1_length.o \\\nsrc/pk/asn1/der/general/der_length_asn1_identifier.o src/pk/asn1/der/general/der_length_asn1_length.o \\\nsrc/pk/asn1/der/generalizedtime/der_decode_generalizedtime.o \\\nsrc/pk/asn1/der/generalizedtime/der_encode_generalizedtime.o \\\nsrc/pk/asn1/der/generalizedtime/der_length_generalizedtime.o \\\nsrc/pk/asn1/der/ia5/der_decode_ia5_string.o src/pk/asn1/der/ia5/der_encode_ia5_string.o \\\nsrc/pk/asn1/der/ia5/der_length_ia5_string.o src/pk/asn1/der/integer/der_decode_integer.o \\\nsrc/pk/asn1/der/integer/der_encode_integer.o src/pk/asn1/der/integer/der_length_integer.o \\\nsrc/pk/asn1/der/object_identifier/der_decode_object_identifier.o \\\nsrc/pk/asn1/der/object_identifier/der_encode_object_identifier.o \\\nsrc/pk/asn1/der/object_identifier/der_length_object_identifier.o \\\nsrc/pk/asn1/der/octet/der_decode_octet_string.o src/pk/asn1/der/octet/der_encode_octet_string.o \\\nsrc/pk/asn1/der/octet/der_length_octet_string.o \\\nsrc/pk/asn1/der/printable_string/der_decode_printable_string.o \\\nsrc/pk/asn1/der/printable_string/der_encode_printable_string.o \\\nsrc/pk/asn1/der/printable_string/der_length_printable_string.o \\\nsrc/pk/asn1/der/sequence/der_decode_sequence_ex.o \\\nsrc/pk/asn1/der/sequence/der_decode_sequence_flexi.o \\\nsrc/pk/asn1/der/sequence/der_decode_sequence_multi.o \\\nsrc/pk/asn1/der/sequence/der_encode_sequence_ex.o \\\nsrc/pk/asn1/der/sequence/der_encode_sequence_multi.o \\\nsrc/pk/asn1/der/sequence/der_flexi_sequence_cmp.o src/pk/asn1/der/sequence/der_length_sequence.o \\\nsrc/pk/asn1/der/sequence/der_sequence_free.o src/pk/asn1/der/sequence/der_sequence_shrink.o \\\nsrc/pk/asn1/der/set/der_encode_set.o src/pk/asn1/der/set/der_encode_setof.o \\\nsrc/pk/asn1/der/short_integer/der_decode_short_integer.o \\\nsrc/pk/asn1/der/short_integer/der_encode_short_integer.o \\\nsrc/pk/asn1/der/short_integer/der_length_short_integer.o \\\nsrc/pk/asn1/der/teletex_string/der_decode_teletex_string.o \\\nsrc/pk/asn1/der/teletex_string/der_length_teletex_string.o \\\nsrc/pk/asn1/der/utctime/der_decode_utctime.o src/pk/asn1/der/utctime/der_encode_utctime.o \\\nsrc/pk/asn1/der/utctime/der_length_utctime.o src/pk/asn1/der/utf8/der_decode_utf8_string.o \\\nsrc/pk/asn1/der/utf8/der_encode_utf8_string.o src/pk/asn1/der/utf8/der_length_utf8_string.o \\\nsrc/pk/asn1/oid/pk_get.o src/pk/asn1/oid/pk_oid_cmp.o src/pk/asn1/oid/pk_oid_str.o \\\nsrc/pk/asn1/pkcs8/pkcs8_decode_flexi.o src/pk/asn1/pkcs8/pkcs8_get.o \\\nsrc/pk/asn1/x509/x509_decode_public_key_from_certificate.o src/pk/asn1/x509/x509_decode_spki.o \\\nsrc/pk/asn1/x509/x509_decode_subject_public_key_info.o \\\nsrc/pk/asn1/x509/x509_encode_subject_public_key_info.o src/pk/dh/dh.o src/pk/dh/dh_check_pubkey.o \\\nsrc/pk/dh/dh_export.o src/pk/dh/dh_export_key.o src/pk/dh/dh_free.o src/pk/dh/dh_generate_key.o \\\nsrc/pk/dh/dh_import.o src/pk/dh/dh_import_pkcs8.o src/pk/dh/dh_set.o src/pk/dh/dh_set_pg_dhparam.o \\\nsrc/pk/dh/dh_shared_secret.o src/pk/dsa/dsa_decrypt_key.o src/pk/dsa/dsa_encrypt_key.o \\\nsrc/pk/dsa/dsa_export.o src/pk/dsa/dsa_free.o src/pk/dsa/dsa_generate_key.o \\\nsrc/pk/dsa/dsa_generate_pqg.o src/pk/dsa/dsa_import.o src/pk/dsa/dsa_import_pkcs8.o \\\nsrc/pk/dsa/dsa_init.o src/pk/dsa/dsa_make_key.o src/pk/dsa/dsa_set.o src/pk/dsa/dsa_set_pqg_dsaparam.o \\\nsrc/pk/dsa/dsa_shared_secret.o src/pk/dsa/dsa_sign_hash.o src/pk/dsa/dsa_verify_hash.o \\\nsrc/pk/dsa/dsa_verify_key.o src/pk/ec25519/ec25519_crypto_ctx.o src/pk/ec25519/ec25519_export.o \\\nsrc/pk/ec25519/ec25519_import_pkcs8.o src/pk/ec25519/tweetnacl.o src/pk/ecc/ecc.o \\\nsrc/pk/ecc/ecc_ansi_x963_export.o src/pk/ecc/ecc_ansi_x963_import.o src/pk/ecc/ecc_decrypt_key.o \\\nsrc/pk/ecc/ecc_encrypt_key.o src/pk/ecc/ecc_export.o src/pk/ecc/ecc_export_openssl.o \\\nsrc/pk/ecc/ecc_find_curve.o src/pk/ecc/ecc_free.o src/pk/ecc/ecc_get_key.o src/pk/ecc/ecc_get_oid_str.o \\\nsrc/pk/ecc/ecc_get_size.o src/pk/ecc/ecc_import.o src/pk/ecc/ecc_import_openssl.o \\\nsrc/pk/ecc/ecc_import_pkcs8.o src/pk/ecc/ecc_import_x509.o src/pk/ecc/ecc_make_key.o \\\nsrc/pk/ecc/ecc_recover_key.o src/pk/ecc/ecc_set_curve.o src/pk/ecc/ecc_set_curve_internal.o \\\nsrc/pk/ecc/ecc_set_key.o src/pk/ecc/ecc_shared_secret.o src/pk/ecc/ecc_sign_hash.o \\\nsrc/pk/ecc/ecc_sizes.o src/pk/ecc/ecc_ssh_ecdsa_encode_name.o src/pk/ecc/ecc_verify_hash.o \\\nsrc/pk/ecc/ltc_ecc_export_point.o src/pk/ecc/ltc_ecc_import_point.o src/pk/ecc/ltc_ecc_is_point.o \\\nsrc/pk/ecc/ltc_ecc_is_point_at_infinity.o src/pk/ecc/ltc_ecc_map.o src/pk/ecc/ltc_ecc_mul2add.o \\\nsrc/pk/ecc/ltc_ecc_mulmod.o src/pk/ecc/ltc_ecc_mulmod_timing.o src/pk/ecc/ltc_ecc_points.o \\\nsrc/pk/ecc/ltc_ecc_projective_add_point.o src/pk/ecc/ltc_ecc_projective_dbl_point.o \\\nsrc/pk/ecc/ltc_ecc_verify_key.o src/pk/ed25519/ed25519_export.o src/pk/ed25519/ed25519_import.o \\\nsrc/pk/ed25519/ed25519_import_pkcs8.o src/pk/ed25519/ed25519_import_raw.o \\\nsrc/pk/ed25519/ed25519_import_x509.o src/pk/ed25519/ed25519_make_key.o src/pk/ed25519/ed25519_sign.o \\\nsrc/pk/ed25519/ed25519_verify.o src/pk/pka_key.o src/pk/pkcs1/pkcs_1_i2osp.o src/pk/pkcs1/pkcs_1_mgf1.o \\\nsrc/pk/pkcs1/pkcs_1_oaep_decode.o src/pk/pkcs1/pkcs_1_oaep_encode.o src/pk/pkcs1/pkcs_1_os2ip.o \\\nsrc/pk/pkcs1/pkcs_1_pss_decode.o src/pk/pkcs1/pkcs_1_pss_encode.o src/pk/pkcs1/pkcs_1_v1_5_decode.o \\\nsrc/pk/pkcs1/pkcs_1_v1_5_encode.o src/pk/rsa/rsa_decrypt_key.o src/pk/rsa/rsa_encrypt_key.o \\\nsrc/pk/rsa/rsa_export.o src/pk/rsa/rsa_exptmod.o src/pk/rsa/rsa_get_size.o src/pk/rsa/rsa_import.o \\\nsrc/pk/rsa/rsa_import_pkcs8.o src/pk/rsa/rsa_import_x509.o src/pk/rsa/rsa_key.o \\\nsrc/pk/rsa/rsa_make_key.o src/pk/rsa/rsa_set.o src/pk/rsa/rsa_sign_hash.o \\\nsrc/pk/rsa/rsa_sign_saltlen_get.o src/pk/rsa/rsa_verify_hash.o src/pk/x25519/x25519_export.o \\\nsrc/pk/x25519/x25519_import.o src/pk/x25519/x25519_import_pkcs8.o src/pk/x25519/x25519_import_raw.o \\\nsrc/pk/x25519/x25519_import_x509.o src/pk/x25519/x25519_make_key.o \\\nsrc/pk/x25519/x25519_shared_secret.o src/prngs/chacha20.o src/prngs/fortuna.o src/prngs/rc4.o \\\nsrc/prngs/rng_get_bytes.o src/prngs/rng_make_prng.o src/prngs/sober128.o src/prngs/sprng.o \\\nsrc/prngs/yarrow.o src/stream/chacha/chacha_crypt.o src/stream/chacha/chacha_done.o \\\nsrc/stream/chacha/chacha_ivctr32.o src/stream/chacha/chacha_ivctr64.o \\\nsrc/stream/chacha/chacha_keystream.o src/stream/chacha/chacha_memory.o \\\nsrc/stream/chacha/chacha_setup.o src/stream/chacha/chacha_test.o src/stream/rabbit/rabbit.o \\\nsrc/stream/rabbit/rabbit_memory.o src/stream/rc4/rc4_stream.o src/stream/rc4/rc4_stream_memory.o \\\nsrc/stream/rc4/rc4_test.o src/stream/salsa20/salsa20_crypt.o src/stream/salsa20/salsa20_done.o \\\nsrc/stream/salsa20/salsa20_ivctr64.o src/stream/salsa20/salsa20_keystream.o \\\nsrc/stream/salsa20/salsa20_memory.o src/stream/salsa20/salsa20_setup.o \\\nsrc/stream/salsa20/salsa20_test.o src/stream/salsa20/xsalsa20_memory.o \\\nsrc/stream/salsa20/xsalsa20_setup.o src/stream/salsa20/xsalsa20_test.o \\\nsrc/stream/sober128/sober128_stream.o src/stream/sober128/sober128_stream_memory.o \\\nsrc/stream/sober128/sober128_test.o src/stream/sosemanuk/sosemanuk.o \\\nsrc/stream/sosemanuk/sosemanuk_memory.o src/stream/sosemanuk/sosemanuk_test.o\n\n#List of test objects to compile (all goes to libtomcrypt_prof.a)\nTOBJECTS=tests/base16_test.o tests/base32_test.o tests/base64_test.o tests/bcrypt_test.o \\\ntests/cipher_hash_test.o tests/common.o tests/der_test.o tests/dh_test.o tests/dsa_test.o \\\ntests/ecc_test.o tests/ed25519_test.o tests/file_test.o tests/mac_test.o tests/misc_test.o \\\ntests/modes_test.o tests/mpi_test.o tests/multi_test.o tests/no_null_termination_check_test.o \\\ntests/no_prng.o tests/padding_test.o tests/pem_test.o tests/pkcs_1_eme_test.o tests/pkcs_1_emsa_test.o \\\ntests/pkcs_1_oaep_test.o tests/pkcs_1_pss_test.o tests/pkcs_1_test.o tests/prng_test.o \\\ntests/rotate_test.o tests/rsa_test.o tests/ssh_test.o tests/store_test.o tests/test.o tests/x25519_test.o\n\n#The following headers will be installed by \"make install\"\nHEADERS_PUB=src/headers/tomcrypt.h src/headers/tomcrypt_argchk.h src/headers/tomcrypt_cfg.h \\\nsrc/headers/tomcrypt_cipher.h src/headers/tomcrypt_custom.h src/headers/tomcrypt_hash.h \\\nsrc/headers/tomcrypt_mac.h src/headers/tomcrypt_macros.h src/headers/tomcrypt_math.h \\\nsrc/headers/tomcrypt_misc.h src/headers/tomcrypt_pk.h src/headers/tomcrypt_pkcs.h \\\nsrc/headers/tomcrypt_prng.h\n\nHEADERS=$(HEADERS_PUB) src/headers/tomcrypt_private.h\n\n#The default rule for make builds the libtomcrypt.a library (static)\ndefault: $(LIBMAIN_S)\n\n#SPECIAL: AES comes in two flavours - enc+dec and enc-only\nsrc/ciphers/aes/aes_enc.o: src/ciphers/aes/aes.c src/ciphers/aes/aes_tab.c\n\t$(CC) $(LTC_CFLAGS) -DENCRYPT_ONLY -c src/ciphers/aes/aes.c -o src/ciphers/aes/aes_enc.o\nsrc/ciphers/aes/aes_enc_desc.o: src/ciphers/aes/aes_desc.c\n\t$(CC) $(LTC_CFLAGS) -DENCRYPT_ONLY -c src/ciphers/aes/aes_desc.c -o src/ciphers/aes/aes_enc_desc.o\n\n#SPECIAL: these are the rules to make certain object files\nsrc/ciphers/aes/aes.o: src/ciphers/aes/aes.c src/ciphers/aes/aes_tab.c\nsrc/ciphers/twofish/twofish.o: src/ciphers/twofish/twofish.c src/ciphers/twofish/twofish_tab.c\nsrc/hashes/sha2/sha256.o: src/hashes/sha2/sha256.c src/hashes/sha2/sha224.c\nsrc/hashes/sha2/sha384.o: src/hashes/sha2/sha384.c src/hashes/sha2/sha512.c\nsrc/hashes/sha2/sha512.o: src/hashes/sha2/sha512.c src/hashes/sha2/sha384.c\nsrc/hashes/sha2/sha512_224.o: src/hashes/sha2/sha512.c src/hashes/sha2/sha512_224.c\nsrc/hashes/sha2/sha512_256.o: src/hashes/sha2/sha512.c src/hashes/sha2/sha512_256.c\nsrc/hashes/whirl/whirl.o: src/hashes/whirl/whirl.c src/hashes/whirl/whirltab.c\n\n#Dependencies on *.h\n$(OBJECTS): $(HEADERS)\n$(TOBJECTS): $(HEADERS) tests/tomcrypt_test.h\n\n#This is necessary for compatibility with BSD make (namely on OpenBSD)\n.SUFFIXES: .o .c\n.c.o:\n\t$(CC) $(LTC_CFLAGS) -c $< -o $@\n\n#Create libtomcrypt.a\n$(LIBMAIN_S): $(OBJECTS)\n\t$(AR) $(ARFLAGS) $@ $(OBJECTS)\n\t$(RANLIB) $@\n\n#Demo tools/utilities\nhashsum: demos/hashsum.o $(LIBMAIN_S)\n\t$(CC) demos/hashsum.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\ncrypt: demos/crypt.o $(LIBMAIN_S)\n\t$(CC) demos/crypt.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\nsmall: demos/small.o $(LIBMAIN_S)\n\t$(CC) demos/small.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\ntv_gen: demos/tv_gen.o $(LIBMAIN_S)\n\t$(CC) demos/tv_gen.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\nsizes: demos/sizes.o $(LIBMAIN_S)\n\t$(CC) demos/sizes.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\nconstants: demos/constants.o $(LIBMAIN_S)\n\t$(CC) demos/constants.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\ntiming: demos/timing.o $(LIBMAIN_S)\n\t$(CC) demos/timing.o $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\n\n#Tests\ntest: $(TOBJECTS) $(LIBMAIN_S)\n\t$(CC) $(TOBJECTS) $(LIBMAIN_S) $(LTC_LDFLAGS) -o $@\n\t@echo \"NOTICE: start the tests by: ./test\"\n\nall: $(LIBMAIN_S) hashsum crypt small tv_gen sizes constants timing test\n\n#NOTE: this makefile works also on cygwin, thus we need to delete *.exe\nclean:\n\t-@rm -f $(OBJECTS) $(TOBJECTS)\n\t-@rm -f $(LIBMAIN_S)\n\t-@rm -f demos/*.o *_tv.txt\n\t-@rm -f test constants sizes tv_gen hashsum crypt small timing\n\t-@rm -f test.exe constants.exe sizes.exe tv_gen.exe hashsum.exe crypt.exe small.exe timing.exe\n\n#Install the library + headers\ninstall: $(LIBMAIN_S)\n\t@mkdir -p $(DESTDIR)$(INCPATH) $(DESTDIR)$(LIBPATH)/pkgconfig\n\t@cp $(LIBMAIN_S) $(DESTDIR)$(LIBPATH)/\n\t@cp $(HEADERS_PUB) $(DESTDIR)$(INCPATH)/\n\t@sed -e 's,^prefix=.*,prefix=$(PREFIX),' -e 's,^Version:.*,Version: $(VERSION_PC),' -e 's,^libdir=.*,libdir=$(LIBPATH),' \\\n\t\t-e 's,^includedir=.*,includedir=$(INCPATH),' \\\n\t\t-e 's,@MPI_PROVIDERS_LIBS@,$(PC_LIBS),' \\\n\t\t-e 's,@MPI_PROVIDERS_CFLAGS@,$(PC_CFLAGS),' libtomcrypt.pc.in > $(DESTDIR)$(LIBPATH)/pkgconfig/libtomcrypt.pc\n\n#Install useful tools\ninstall_bins: hashsum\n\t@mkdir -p $(DESTDIR)$(BINPATH)\n\t@cp hashsum $(DESTDIR)$(BINPATH)/ltc-hashsum\n\t@cp demos/ltc $(DESTDIR)$(BINPATH)/ltc\n\n#Install documentation\ninstall_docs: doc/crypt.pdf\n\t@mkdir -p $(DESTDIR)$(DATAPATH)\n\t@cp doc/crypt.pdf $(DESTDIR)$(DATAPATH)/\n"
        },
        {
          "name": "makefile_include.mk",
          "type": "blob",
          "size": 28.2919921875,
          "content": "#\n# Include makefile used by makefile + makefile.shared\n#  (GNU make only)\n\n# The version - BEWARE: VERSION, VERSION_PC and VERSION_LT are updated via ./updatemakes.sh\nVERSION=1.18.2-develop\nVERSION_PC=1.18.2\n# http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\nVERSION_LT=1:1\n\n# Compiler and Linker Names\nifndef CROSS_COMPILE\n  CROSS_COMPILE:=\nendif\n\nH := \\#\nifeq (CLANG,$(shell printf \"$(H)ifdef __clang__\\nCLANG\\n$(H)endif\\n\" | $(CC) -E - | grep CLANG))\n  CC_IS_CLANG := 1\nelse\n  CC_IS_CLANG := 0\nendif # Clang\n\nifneq (,$(CROSS_COMPILE))\nifeq ($(origin CC),default)\nifeq ($(CC_IS_CLANG), 1)\n  CC := $(CROSS_COMPILE)clang\nelse\n  CC := $(CROSS_COMPILE)gcc\nendif # Clang\nendif # cc is Make's default\nendif # CROSS_COMPILE non-empty\n\nLD:=$(CROSS_COMPILE)ld\nAR:=$(CROSS_COMPILE)ar\n\n# Archiver [makes .a files]\n#AR=ar\nARFLAGS:=r\n\nifndef MAKE\n# BSDs refer to GNU Make as gmake\nifneq (,$(findstring $(PLATFORM),FreeBSD OpenBSD DragonFly NetBSD))\n  MAKE=gmake\nelse\n  MAKE=make\nendif\nendif\n\nifndef INSTALL_CMD\n$(error your makefile must define INSTALL_CMD)\nendif\nifndef UNINSTALL_CMD\n$(error your makefile must define UNINSTALL_CMD)\nendif\n\nifndef EXTRALIBS\nifneq ($(shell echo $(CFLAGS) | grep USE_LTM),)\nEXTRALIBS=$(shell PKG_CONFIG_PATH=$(LIBPATH)/pkgconfig pkg-config --libs libtommath ${silent_stderr} || true)\nelse ifneq ($(shell echo $(CFLAGS) | grep USE_TFM),)\nEXTRALIBS=$(shell PKG_CONFIG_PATH=$(LIBPATH)/pkgconfig pkg-config --libs tomsfastmath ${silent_stderr} || true)\nelse ifneq ($(shell echo $(CFLAGS) | grep USE_GMP),)\nEXTRALIBS=$(shell PKG_CONFIG_PATH=$(LIBPATH)/pkgconfig pkg-config --libs gmp ${silent_stderr} || true)\nendif\nendif # EXTRALIBS\n\nneed-help := $(filter help,$(MAKECMDGOALS))\ndefine print-help\n$(if $(need-help),$(info $1 -- $2))\nendef\n\n#\n# Compilation flags. Note the += does not write over the user's CFLAGS!\n#\n# Also note that we're extending the environments' CFLAGS.\n# If you think that our CFLAGS are not nice you can easily override them\n# by giving them as a parameter to make:\n#  make CFLAGS=\"-I./src/headers/ -DLTC_SOURCE ...\" ...\n#\nifneq ($(shell echo $(CFLAGS) | grep LTM_DESC),)\nLTC_CFLAGS+=$(shell PKG_CONFIG_PATH=$(LIBPATH)/pkgconfig pkg-config --cflags-only-I libtommath ${silent_stderr} || true)\nendif\nifneq ($(shell echo $(CFLAGS) | grep TFM_DESC),)\nLTC_CFLAGS+=$(shell PKG_CONFIG_PATH=$(LIBPATH)/pkgconfig pkg-config --cflags-only-I tomsfastmath ${silent_stderr} || true)\nendif\nifneq ($(shell echo $(CFLAGS) | grep GMP_DESC),)\nLTC_CFLAGS+=$(shell PKG_CONFIG_PATH=$(LIBPATH)/pkgconfig pkg-config --cflags-only-I gmp ${silent_stderr} || true)\nendif\nLTC_CFLAGS += -I./src/headers/ -DLTC_SOURCE -Wall -Wsign-compare -Wshadow\n\nifdef OLD_GCC\nLTC_CFLAGS += -W\n# older GCCs can't handle the \"rotate with immediate\" ROLc/RORc/etc macros\n# define this to help\nLTC_CFLAGS += -DLTC_NO_ROLC\nelse\nLTC_CFLAGS += -Wextra\n# additional warnings\nLTC_CFLAGS += -Wsystem-headers -Wbad-function-cast -Wcast-align\nLTC_CFLAGS += -Wstrict-prototypes -Wpointer-arith\nLTC_CFLAGS += -Wdeclaration-after-statement\nLTC_CFLAGS += -Wwrite-strings\nendif\n\nifdef LTC_DEBUG\n$(info Debug build)\n# compile for DEBUGGING (required for ccmalloc checking!!!)\nLTC_CFLAGS += -g3 -DLTC_NO_ASM\n\nifneq (,$(strip $(LTC_DEBUG)))\nLTC_CFLAGS += -DLTC_TEST_DBG=$(LTC_DEBUG)\nelse\nLTC_CFLAGS += -DLTC_TEST_DBG\nendif\nendif # LTC_DEBUG\n\nifndef IGNORE_SPEED\n# optimize for SPEED\nLTC_CFLAGS += -O3 -funroll-loops\n\n# add -fomit-frame-pointer.  hinders debugging!\nLTC_CFLAGS += -fomit-frame-pointer\nendif # IGNORE_SPEED\n\nifdef LTC_SMALL\n# optimize for SIZE\nLTC_CFLAGS += -Os -DLTC_SMALL_CODE\nendif # LTC_SMALL\n\n\nifeq ($(CC_IS_CLANG), 1)\nLTC_CFLAGS += -Wno-typedef-redefinition -Wno-tautological-compare -Wno-builtin-requires-header\nLTC_CFLAGS += -Wno-missing-field-initializers -Wno-missing-braces -Wno-incomplete-setjmp-declaration -Wno-cast-align\nLTC_CFLAGS += -Wno-declaration-after-statement\nendif\nifneq ($(findstring mingw,$(CC)),)\nLTC_CFLAGS += -Wno-shadow -Wno-attributes\nendif\nifeq ($(PLATFORM), Darwin)\nLTC_CFLAGS += -Wno-nullability-completeness\nendif\n\n\nGIT_VERSION := $(shell { [ -e .git ] && which git 2>/dev/null 1>&2 ; } && { printf git- ; git describe --tags --always --dirty ; } || echo $(VERSION))\nifneq ($(GIT_VERSION),)\nLTC_CFLAGS += -DGIT_VERSION=\\\"$(GIT_VERSION)\\\"\nendif\n\nLTC_CFLAGS := $(LTC_CFLAGS) $(CFLAGS)\n\nifneq ($(findstring -DLTC_PTHREAD,$(LTC_CFLAGS)),)\nLTC_LDFLAGS += -pthread\nendif\n\nLTC_LDFLAGS := $(LTC_LDFLAGS) $(LDFLAGS)\n\nifeq ($(V)$(filter clean,$(MAKECMDGOALS)),0)\n$(warning CFLAGS=$(LTC_CFLAGS))\n$(warning LDFLAGS=$(LTC_LDFLAGS))\nendif\n\n#List of demo objects\nDSOURCES = $(wildcard demos/*.c)\nDOBJECTS = $(DSOURCES:.c=.o)\n\n#List of tests headers\nTHEADERS = $(wildcard tests/*.h)\n\nTEST=test\n\n# Demos that are even somehow useful and could be installed as a system-tool\nUSEFUL_DEMOS   = hashsum\n\n# Demos that are usable but only rarely make sense to be installed\nUSEABLE_DEMOS  = aesgcm constants crypt openssh-privkey openssl-enc pem-info sizes timing\n\n# Demos that are used for testing or measuring\nTEST_DEMOS     = small tv_gen\n\n# Combine demos in groups\nUNBROKEN_DEMOS = $(TEST_DEMOS) $(USEABLE_DEMOS) $(USEFUL_DEMOS)\nDEMOS          = $(UNBROKEN_DEMOS) $(BROKEN_DEMOS)\n\n#LIBPATH  The directory for libtomcrypt to be installed to.\n#INCPATH  The directory to install the header files for libtomcrypt.\n#DATAPATH The directory to install the pdf docs.\n#BINPATH  The directory to install the binaries provided.\nDESTDIR  ?=\nPREFIX   ?= /usr/local\nLIBPATH  ?= $(PREFIX)/lib\nINCPATH  ?= $(PREFIX)/include/libtomcrypt\nDATAPATH ?= $(PREFIX)/share/doc/libtomcrypt/pdf\nBINPATH  ?= $(PREFIX)/bin\n\n#Who do we install as?\nifdef INSTALL_USER\nUSER=$(INSTALL_USER)\nelse\nUSER=root\nendif\n\nifdef INSTALL_GROUP\nGROUP=$(INSTALL_GROUP)\nelse\nGROUP=wheel\nendif\n\n\n#The first rule is also the default rule and builds the libtomcrypt library.\nlibrary: $(call print-help,library,Builds the library) $(LIBNAME)\n\n\n# List of objects to compile (all goes to libtomcrypt.a)\nOBJECTS=src/ciphers/aes/aes.o src/ciphers/aes/aes_desc.o src/ciphers/aes/aes_enc.o \\\nsrc/ciphers/aes/aes_enc_desc.o src/ciphers/aes/aesni.o src/ciphers/anubis.o src/ciphers/blowfish.o \\\nsrc/ciphers/camellia.o src/ciphers/cast5.o src/ciphers/des.o src/ciphers/idea.o src/ciphers/kasumi.o \\\nsrc/ciphers/khazad.o src/ciphers/kseed.o src/ciphers/multi2.o src/ciphers/noekeon.o src/ciphers/rc2.o \\\nsrc/ciphers/rc5.o src/ciphers/rc6.o src/ciphers/safer/safer.o src/ciphers/safer/saferp.o \\\nsrc/ciphers/serpent.o src/ciphers/skipjack.o src/ciphers/sm4.o src/ciphers/tea.o \\\nsrc/ciphers/twofish/twofish.o src/ciphers/xtea.o src/encauth/ccm/ccm_add_aad.o \\\nsrc/encauth/ccm/ccm_add_nonce.o src/encauth/ccm/ccm_done.o src/encauth/ccm/ccm_init.o \\\nsrc/encauth/ccm/ccm_memory.o src/encauth/ccm/ccm_process.o src/encauth/ccm/ccm_reset.o \\\nsrc/encauth/ccm/ccm_test.o src/encauth/chachapoly/chacha20poly1305_add_aad.o \\\nsrc/encauth/chachapoly/chacha20poly1305_decrypt.o src/encauth/chachapoly/chacha20poly1305_done.o \\\nsrc/encauth/chachapoly/chacha20poly1305_encrypt.o src/encauth/chachapoly/chacha20poly1305_init.o \\\nsrc/encauth/chachapoly/chacha20poly1305_memory.o src/encauth/chachapoly/chacha20poly1305_setiv.o \\\nsrc/encauth/chachapoly/chacha20poly1305_setiv_rfc7905.o \\\nsrc/encauth/chachapoly/chacha20poly1305_test.o src/encauth/eax/eax_addheader.o \\\nsrc/encauth/eax/eax_decrypt.o src/encauth/eax/eax_decrypt_verify_memory.o src/encauth/eax/eax_done.o \\\nsrc/encauth/eax/eax_encrypt.o src/encauth/eax/eax_encrypt_authenticate_memory.o \\\nsrc/encauth/eax/eax_init.o src/encauth/eax/eax_test.o src/encauth/gcm/gcm_add_aad.o \\\nsrc/encauth/gcm/gcm_add_iv.o src/encauth/gcm/gcm_done.o src/encauth/gcm/gcm_gf_mult.o \\\nsrc/encauth/gcm/gcm_init.o src/encauth/gcm/gcm_memory.o src/encauth/gcm/gcm_mult_h.o \\\nsrc/encauth/gcm/gcm_process.o src/encauth/gcm/gcm_reset.o src/encauth/gcm/gcm_test.o \\\nsrc/encauth/ocb/ocb_decrypt.o src/encauth/ocb/ocb_decrypt_verify_memory.o \\\nsrc/encauth/ocb/ocb_done_decrypt.o src/encauth/ocb/ocb_done_encrypt.o src/encauth/ocb/ocb_encrypt.o \\\nsrc/encauth/ocb/ocb_encrypt_authenticate_memory.o src/encauth/ocb/ocb_init.o src/encauth/ocb/ocb_ntz.o \\\nsrc/encauth/ocb/ocb_shift_xor.o src/encauth/ocb/ocb_test.o src/encauth/ocb/s_ocb_done.o \\\nsrc/encauth/ocb3/ocb3_add_aad.o src/encauth/ocb3/ocb3_decrypt.o src/encauth/ocb3/ocb3_decrypt_last.o \\\nsrc/encauth/ocb3/ocb3_decrypt_verify_memory.o src/encauth/ocb3/ocb3_done.o \\\nsrc/encauth/ocb3/ocb3_encrypt.o src/encauth/ocb3/ocb3_encrypt_authenticate_memory.o \\\nsrc/encauth/ocb3/ocb3_encrypt_last.o src/encauth/ocb3/ocb3_init.o src/encauth/ocb3/ocb3_int_ntz.o \\\nsrc/encauth/ocb3/ocb3_int_xor_blocks.o src/encauth/ocb3/ocb3_test.o src/encauth/siv/siv.o \\\nsrc/hashes/blake2b.o src/hashes/blake2s.o src/hashes/chc/chc.o src/hashes/helper/hash_file.o \\\nsrc/hashes/helper/hash_filehandle.o src/hashes/helper/hash_memory.o \\\nsrc/hashes/helper/hash_memory_multi.o src/hashes/md2.o src/hashes/md4.o src/hashes/md5.o \\\nsrc/hashes/rmd128.o src/hashes/rmd160.o src/hashes/rmd256.o src/hashes/rmd320.o src/hashes/sha1.o \\\nsrc/hashes/sha2/sha224.o src/hashes/sha2/sha256.o src/hashes/sha2/sha384.o src/hashes/sha2/sha512.o \\\nsrc/hashes/sha2/sha512_224.o src/hashes/sha2/sha512_256.o src/hashes/sha3.o src/hashes/sha3_test.o \\\nsrc/hashes/tiger.o src/hashes/whirl/whirl.o src/mac/blake2/blake2bmac.o \\\nsrc/mac/blake2/blake2bmac_file.o src/mac/blake2/blake2bmac_memory.o \\\nsrc/mac/blake2/blake2bmac_memory_multi.o src/mac/blake2/blake2bmac_test.o src/mac/blake2/blake2smac.o \\\nsrc/mac/blake2/blake2smac_file.o src/mac/blake2/blake2smac_memory.o \\\nsrc/mac/blake2/blake2smac_memory_multi.o src/mac/blake2/blake2smac_test.o src/mac/f9/f9_done.o \\\nsrc/mac/f9/f9_file.o src/mac/f9/f9_init.o src/mac/f9/f9_memory.o src/mac/f9/f9_memory_multi.o \\\nsrc/mac/f9/f9_process.o src/mac/f9/f9_test.o src/mac/hmac/hmac_done.o src/mac/hmac/hmac_file.o \\\nsrc/mac/hmac/hmac_init.o src/mac/hmac/hmac_memory.o src/mac/hmac/hmac_memory_multi.o \\\nsrc/mac/hmac/hmac_process.o src/mac/hmac/hmac_test.o src/mac/omac/omac_done.o src/mac/omac/omac_file.o \\\nsrc/mac/omac/omac_init.o src/mac/omac/omac_memory.o src/mac/omac/omac_memory_multi.o \\\nsrc/mac/omac/omac_process.o src/mac/omac/omac_test.o src/mac/pelican/pelican.o \\\nsrc/mac/pelican/pelican_memory.o src/mac/pelican/pelican_test.o src/mac/pmac/pmac_done.o \\\nsrc/mac/pmac/pmac_file.o src/mac/pmac/pmac_init.o src/mac/pmac/pmac_memory.o \\\nsrc/mac/pmac/pmac_memory_multi.o src/mac/pmac/pmac_ntz.o src/mac/pmac/pmac_process.o \\\nsrc/mac/pmac/pmac_shift_xor.o src/mac/pmac/pmac_test.o src/mac/poly1305/poly1305.o \\\nsrc/mac/poly1305/poly1305_file.o src/mac/poly1305/poly1305_memory.o \\\nsrc/mac/poly1305/poly1305_memory_multi.o src/mac/poly1305/poly1305_test.o src/mac/xcbc/xcbc_done.o \\\nsrc/mac/xcbc/xcbc_file.o src/mac/xcbc/xcbc_init.o src/mac/xcbc/xcbc_memory.o \\\nsrc/mac/xcbc/xcbc_memory_multi.o src/mac/xcbc/xcbc_process.o src/mac/xcbc/xcbc_test.o \\\nsrc/math/fp/ltc_ecc_fp_mulmod.o src/math/gmp_desc.o src/math/ltm_desc.o src/math/multi.o \\\nsrc/math/radix_to_bin.o src/math/rand_bn.o src/math/rand_prime.o src/math/tfm_desc.o src/misc/adler32.o \\\nsrc/misc/base16/base16_decode.o src/misc/base16/base16_encode.o src/misc/base32/base32_decode.o \\\nsrc/misc/base32/base32_encode.o src/misc/base64/base64_decode.o src/misc/base64/base64_encode.o \\\nsrc/misc/bcrypt/bcrypt.o src/misc/burn_stack.o src/misc/compare_testvector.o src/misc/copy_or_zeromem.o \\\nsrc/misc/crc32.o src/misc/crypt/crypt.o src/misc/crypt/crypt_argchk.o \\\nsrc/misc/crypt/crypt_cipher_descriptor.o src/misc/crypt/crypt_cipher_is_valid.o \\\nsrc/misc/crypt/crypt_constants.o src/misc/crypt/crypt_find_cipher.o \\\nsrc/misc/crypt/crypt_find_cipher_any.o src/misc/crypt/crypt_find_cipher_id.o \\\nsrc/misc/crypt/crypt_find_hash.o src/misc/crypt/crypt_find_hash_any.o \\\nsrc/misc/crypt/crypt_find_hash_id.o src/misc/crypt/crypt_find_hash_oid.o \\\nsrc/misc/crypt/crypt_find_prng.o src/misc/crypt/crypt_fsa.o src/misc/crypt/crypt_hash_descriptor.o \\\nsrc/misc/crypt/crypt_hash_is_valid.o src/misc/crypt/crypt_inits.o \\\nsrc/misc/crypt/crypt_ltc_mp_descriptor.o src/misc/crypt/crypt_prng_descriptor.o \\\nsrc/misc/crypt/crypt_prng_is_valid.o src/misc/crypt/crypt_prng_rng_descriptor.o \\\nsrc/misc/crypt/crypt_register_all_ciphers.o src/misc/crypt/crypt_register_all_hashes.o \\\nsrc/misc/crypt/crypt_register_all_prngs.o src/misc/crypt/crypt_register_cipher.o \\\nsrc/misc/crypt/crypt_register_hash.o src/misc/crypt/crypt_register_prng.o src/misc/crypt/crypt_sizes.o \\\nsrc/misc/crypt/crypt_unregister_cipher.o src/misc/crypt/crypt_unregister_hash.o \\\nsrc/misc/crypt/crypt_unregister_prng.o src/misc/error_to_string.o src/misc/hkdf/hkdf.o \\\nsrc/misc/hkdf/hkdf_test.o src/misc/mem_neq.o src/misc/padding/padding_depad.o \\\nsrc/misc/padding/padding_pad.o src/misc/password_free.o src/misc/pbes/pbes.o src/misc/pbes/pbes1.o \\\nsrc/misc/pbes/pbes2.o src/misc/pem/pem.o src/misc/pem/pem_pkcs.o src/misc/pem/pem_read.o \\\nsrc/misc/pem/pem_ssh.o src/misc/pkcs12/pkcs12_kdf.o src/misc/pkcs12/pkcs12_utf8_to_utf16.o \\\nsrc/misc/pkcs5/pkcs_5_1.o src/misc/pkcs5/pkcs_5_2.o src/misc/pkcs5/pkcs_5_test.o \\\nsrc/misc/ssh/ssh_decode_sequence_multi.o src/misc/ssh/ssh_encode_sequence_multi.o src/misc/zeromem.o \\\nsrc/modes/cbc/cbc_decrypt.o src/modes/cbc/cbc_done.o src/modes/cbc/cbc_encrypt.o \\\nsrc/modes/cbc/cbc_getiv.o src/modes/cbc/cbc_setiv.o src/modes/cbc/cbc_start.o \\\nsrc/modes/cfb/cfb_decrypt.o src/modes/cfb/cfb_done.o src/modes/cfb/cfb_encrypt.o \\\nsrc/modes/cfb/cfb_getiv.o src/modes/cfb/cfb_setiv.o src/modes/cfb/cfb_start.o \\\nsrc/modes/ctr/ctr_decrypt.o src/modes/ctr/ctr_done.o src/modes/ctr/ctr_encrypt.o \\\nsrc/modes/ctr/ctr_getiv.o src/modes/ctr/ctr_setiv.o src/modes/ctr/ctr_start.o src/modes/ctr/ctr_test.o \\\nsrc/modes/ecb/ecb_decrypt.o src/modes/ecb/ecb_done.o src/modes/ecb/ecb_encrypt.o \\\nsrc/modes/ecb/ecb_start.o src/modes/f8/f8_decrypt.o src/modes/f8/f8_done.o src/modes/f8/f8_encrypt.o \\\nsrc/modes/f8/f8_getiv.o src/modes/f8/f8_setiv.o src/modes/f8/f8_start.o src/modes/f8/f8_test_mode.o \\\nsrc/modes/lrw/lrw_decrypt.o src/modes/lrw/lrw_done.o src/modes/lrw/lrw_encrypt.o \\\nsrc/modes/lrw/lrw_getiv.o src/modes/lrw/lrw_process.o src/modes/lrw/lrw_setiv.o \\\nsrc/modes/lrw/lrw_start.o src/modes/lrw/lrw_test.o src/modes/ofb/ofb_decrypt.o src/modes/ofb/ofb_done.o \\\nsrc/modes/ofb/ofb_encrypt.o src/modes/ofb/ofb_getiv.o src/modes/ofb/ofb_setiv.o \\\nsrc/modes/ofb/ofb_start.o src/modes/xts/xts_decrypt.o src/modes/xts/xts_done.o \\\nsrc/modes/xts/xts_encrypt.o src/modes/xts/xts_init.o src/modes/xts/xts_mult_x.o \\\nsrc/modes/xts/xts_test.o src/pk/asn1/der/bit/der_decode_bit_string.o \\\nsrc/pk/asn1/der/bit/der_decode_raw_bit_string.o src/pk/asn1/der/bit/der_encode_bit_string.o \\\nsrc/pk/asn1/der/bit/der_encode_raw_bit_string.o src/pk/asn1/der/bit/der_length_bit_string.o \\\nsrc/pk/asn1/der/boolean/der_decode_boolean.o src/pk/asn1/der/boolean/der_encode_boolean.o \\\nsrc/pk/asn1/der/boolean/der_length_boolean.o src/pk/asn1/der/choice/der_decode_choice.o \\\nsrc/pk/asn1/der/custom_type/der_decode_custom_type.o \\\nsrc/pk/asn1/der/custom_type/der_encode_custom_type.o \\\nsrc/pk/asn1/der/custom_type/der_length_custom_type.o src/pk/asn1/der/general/der_asn1_maps.o \\\nsrc/pk/asn1/der/general/der_decode_asn1_identifier.o src/pk/asn1/der/general/der_decode_asn1_length.o \\\nsrc/pk/asn1/der/general/der_encode_asn1_identifier.o src/pk/asn1/der/general/der_encode_asn1_length.o \\\nsrc/pk/asn1/der/general/der_length_asn1_identifier.o src/pk/asn1/der/general/der_length_asn1_length.o \\\nsrc/pk/asn1/der/generalizedtime/der_decode_generalizedtime.o \\\nsrc/pk/asn1/der/generalizedtime/der_encode_generalizedtime.o \\\nsrc/pk/asn1/der/generalizedtime/der_length_generalizedtime.o \\\nsrc/pk/asn1/der/ia5/der_decode_ia5_string.o src/pk/asn1/der/ia5/der_encode_ia5_string.o \\\nsrc/pk/asn1/der/ia5/der_length_ia5_string.o src/pk/asn1/der/integer/der_decode_integer.o \\\nsrc/pk/asn1/der/integer/der_encode_integer.o src/pk/asn1/der/integer/der_length_integer.o \\\nsrc/pk/asn1/der/object_identifier/der_decode_object_identifier.o \\\nsrc/pk/asn1/der/object_identifier/der_encode_object_identifier.o \\\nsrc/pk/asn1/der/object_identifier/der_length_object_identifier.o \\\nsrc/pk/asn1/der/octet/der_decode_octet_string.o src/pk/asn1/der/octet/der_encode_octet_string.o \\\nsrc/pk/asn1/der/octet/der_length_octet_string.o \\\nsrc/pk/asn1/der/printable_string/der_decode_printable_string.o \\\nsrc/pk/asn1/der/printable_string/der_encode_printable_string.o \\\nsrc/pk/asn1/der/printable_string/der_length_printable_string.o \\\nsrc/pk/asn1/der/sequence/der_decode_sequence_ex.o \\\nsrc/pk/asn1/der/sequence/der_decode_sequence_flexi.o \\\nsrc/pk/asn1/der/sequence/der_decode_sequence_multi.o \\\nsrc/pk/asn1/der/sequence/der_encode_sequence_ex.o \\\nsrc/pk/asn1/der/sequence/der_encode_sequence_multi.o \\\nsrc/pk/asn1/der/sequence/der_flexi_sequence_cmp.o src/pk/asn1/der/sequence/der_length_sequence.o \\\nsrc/pk/asn1/der/sequence/der_sequence_free.o src/pk/asn1/der/sequence/der_sequence_shrink.o \\\nsrc/pk/asn1/der/set/der_encode_set.o src/pk/asn1/der/set/der_encode_setof.o \\\nsrc/pk/asn1/der/short_integer/der_decode_short_integer.o \\\nsrc/pk/asn1/der/short_integer/der_encode_short_integer.o \\\nsrc/pk/asn1/der/short_integer/der_length_short_integer.o \\\nsrc/pk/asn1/der/teletex_string/der_decode_teletex_string.o \\\nsrc/pk/asn1/der/teletex_string/der_length_teletex_string.o \\\nsrc/pk/asn1/der/utctime/der_decode_utctime.o src/pk/asn1/der/utctime/der_encode_utctime.o \\\nsrc/pk/asn1/der/utctime/der_length_utctime.o src/pk/asn1/der/utf8/der_decode_utf8_string.o \\\nsrc/pk/asn1/der/utf8/der_encode_utf8_string.o src/pk/asn1/der/utf8/der_length_utf8_string.o \\\nsrc/pk/asn1/oid/pk_get.o src/pk/asn1/oid/pk_oid_cmp.o src/pk/asn1/oid/pk_oid_str.o \\\nsrc/pk/asn1/pkcs8/pkcs8_decode_flexi.o src/pk/asn1/pkcs8/pkcs8_get.o \\\nsrc/pk/asn1/x509/x509_decode_public_key_from_certificate.o src/pk/asn1/x509/x509_decode_spki.o \\\nsrc/pk/asn1/x509/x509_decode_subject_public_key_info.o \\\nsrc/pk/asn1/x509/x509_encode_subject_public_key_info.o src/pk/dh/dh.o src/pk/dh/dh_check_pubkey.o \\\nsrc/pk/dh/dh_export.o src/pk/dh/dh_export_key.o src/pk/dh/dh_free.o src/pk/dh/dh_generate_key.o \\\nsrc/pk/dh/dh_import.o src/pk/dh/dh_import_pkcs8.o src/pk/dh/dh_set.o src/pk/dh/dh_set_pg_dhparam.o \\\nsrc/pk/dh/dh_shared_secret.o src/pk/dsa/dsa_decrypt_key.o src/pk/dsa/dsa_encrypt_key.o \\\nsrc/pk/dsa/dsa_export.o src/pk/dsa/dsa_free.o src/pk/dsa/dsa_generate_key.o \\\nsrc/pk/dsa/dsa_generate_pqg.o src/pk/dsa/dsa_import.o src/pk/dsa/dsa_import_pkcs8.o \\\nsrc/pk/dsa/dsa_init.o src/pk/dsa/dsa_make_key.o src/pk/dsa/dsa_set.o src/pk/dsa/dsa_set_pqg_dsaparam.o \\\nsrc/pk/dsa/dsa_shared_secret.o src/pk/dsa/dsa_sign_hash.o src/pk/dsa/dsa_verify_hash.o \\\nsrc/pk/dsa/dsa_verify_key.o src/pk/ec25519/ec25519_crypto_ctx.o src/pk/ec25519/ec25519_export.o \\\nsrc/pk/ec25519/ec25519_import_pkcs8.o src/pk/ec25519/tweetnacl.o src/pk/ecc/ecc.o \\\nsrc/pk/ecc/ecc_ansi_x963_export.o src/pk/ecc/ecc_ansi_x963_import.o src/pk/ecc/ecc_decrypt_key.o \\\nsrc/pk/ecc/ecc_encrypt_key.o src/pk/ecc/ecc_export.o src/pk/ecc/ecc_export_openssl.o \\\nsrc/pk/ecc/ecc_find_curve.o src/pk/ecc/ecc_free.o src/pk/ecc/ecc_get_key.o src/pk/ecc/ecc_get_oid_str.o \\\nsrc/pk/ecc/ecc_get_size.o src/pk/ecc/ecc_import.o src/pk/ecc/ecc_import_openssl.o \\\nsrc/pk/ecc/ecc_import_pkcs8.o src/pk/ecc/ecc_import_x509.o src/pk/ecc/ecc_make_key.o \\\nsrc/pk/ecc/ecc_recover_key.o src/pk/ecc/ecc_set_curve.o src/pk/ecc/ecc_set_curve_internal.o \\\nsrc/pk/ecc/ecc_set_key.o src/pk/ecc/ecc_shared_secret.o src/pk/ecc/ecc_sign_hash.o \\\nsrc/pk/ecc/ecc_sizes.o src/pk/ecc/ecc_ssh_ecdsa_encode_name.o src/pk/ecc/ecc_verify_hash.o \\\nsrc/pk/ecc/ltc_ecc_export_point.o src/pk/ecc/ltc_ecc_import_point.o src/pk/ecc/ltc_ecc_is_point.o \\\nsrc/pk/ecc/ltc_ecc_is_point_at_infinity.o src/pk/ecc/ltc_ecc_map.o src/pk/ecc/ltc_ecc_mul2add.o \\\nsrc/pk/ecc/ltc_ecc_mulmod.o src/pk/ecc/ltc_ecc_mulmod_timing.o src/pk/ecc/ltc_ecc_points.o \\\nsrc/pk/ecc/ltc_ecc_projective_add_point.o src/pk/ecc/ltc_ecc_projective_dbl_point.o \\\nsrc/pk/ecc/ltc_ecc_verify_key.o src/pk/ed25519/ed25519_export.o src/pk/ed25519/ed25519_import.o \\\nsrc/pk/ed25519/ed25519_import_pkcs8.o src/pk/ed25519/ed25519_import_raw.o \\\nsrc/pk/ed25519/ed25519_import_x509.o src/pk/ed25519/ed25519_make_key.o src/pk/ed25519/ed25519_sign.o \\\nsrc/pk/ed25519/ed25519_verify.o src/pk/pka_key.o src/pk/pkcs1/pkcs_1_i2osp.o src/pk/pkcs1/pkcs_1_mgf1.o \\\nsrc/pk/pkcs1/pkcs_1_oaep_decode.o src/pk/pkcs1/pkcs_1_oaep_encode.o src/pk/pkcs1/pkcs_1_os2ip.o \\\nsrc/pk/pkcs1/pkcs_1_pss_decode.o src/pk/pkcs1/pkcs_1_pss_encode.o src/pk/pkcs1/pkcs_1_v1_5_decode.o \\\nsrc/pk/pkcs1/pkcs_1_v1_5_encode.o src/pk/rsa/rsa_decrypt_key.o src/pk/rsa/rsa_encrypt_key.o \\\nsrc/pk/rsa/rsa_export.o src/pk/rsa/rsa_exptmod.o src/pk/rsa/rsa_get_size.o src/pk/rsa/rsa_import.o \\\nsrc/pk/rsa/rsa_import_pkcs8.o src/pk/rsa/rsa_import_x509.o src/pk/rsa/rsa_key.o \\\nsrc/pk/rsa/rsa_make_key.o src/pk/rsa/rsa_set.o src/pk/rsa/rsa_sign_hash.o \\\nsrc/pk/rsa/rsa_sign_saltlen_get.o src/pk/rsa/rsa_verify_hash.o src/pk/x25519/x25519_export.o \\\nsrc/pk/x25519/x25519_import.o src/pk/x25519/x25519_import_pkcs8.o src/pk/x25519/x25519_import_raw.o \\\nsrc/pk/x25519/x25519_import_x509.o src/pk/x25519/x25519_make_key.o \\\nsrc/pk/x25519/x25519_shared_secret.o src/prngs/chacha20.o src/prngs/fortuna.o src/prngs/rc4.o \\\nsrc/prngs/rng_get_bytes.o src/prngs/rng_make_prng.o src/prngs/sober128.o src/prngs/sprng.o \\\nsrc/prngs/yarrow.o src/stream/chacha/chacha_crypt.o src/stream/chacha/chacha_done.o \\\nsrc/stream/chacha/chacha_ivctr32.o src/stream/chacha/chacha_ivctr64.o \\\nsrc/stream/chacha/chacha_keystream.o src/stream/chacha/chacha_memory.o \\\nsrc/stream/chacha/chacha_setup.o src/stream/chacha/chacha_test.o src/stream/rabbit/rabbit.o \\\nsrc/stream/rabbit/rabbit_memory.o src/stream/rc4/rc4_stream.o src/stream/rc4/rc4_stream_memory.o \\\nsrc/stream/rc4/rc4_test.o src/stream/salsa20/salsa20_crypt.o src/stream/salsa20/salsa20_done.o \\\nsrc/stream/salsa20/salsa20_ivctr64.o src/stream/salsa20/salsa20_keystream.o \\\nsrc/stream/salsa20/salsa20_memory.o src/stream/salsa20/salsa20_setup.o \\\nsrc/stream/salsa20/salsa20_test.o src/stream/salsa20/xsalsa20_memory.o \\\nsrc/stream/salsa20/xsalsa20_setup.o src/stream/salsa20/xsalsa20_test.o \\\nsrc/stream/sober128/sober128_stream.o src/stream/sober128/sober128_stream_memory.o \\\nsrc/stream/sober128/sober128_test.o src/stream/sosemanuk/sosemanuk.o \\\nsrc/stream/sosemanuk/sosemanuk_memory.o src/stream/sosemanuk/sosemanuk_test.o\n\n# List of test objects to compile (all goes to libtomcrypt_prof.a)\nTOBJECTS=tests/base16_test.o tests/base32_test.o tests/base64_test.o tests/bcrypt_test.o \\\ntests/cipher_hash_test.o tests/common.o tests/der_test.o tests/dh_test.o tests/dsa_test.o \\\ntests/ecc_test.o tests/ed25519_test.o tests/file_test.o tests/mac_test.o tests/misc_test.o \\\ntests/modes_test.o tests/mpi_test.o tests/multi_test.o tests/no_null_termination_check_test.o \\\ntests/no_prng.o tests/padding_test.o tests/pem_test.o tests/pkcs_1_eme_test.o tests/pkcs_1_emsa_test.o \\\ntests/pkcs_1_oaep_test.o tests/pkcs_1_pss_test.o tests/pkcs_1_test.o tests/prng_test.o \\\ntests/rotate_test.o tests/rsa_test.o tests/ssh_test.o tests/store_test.o tests/test.o tests/x25519_test.o\n\n# The following headers will be installed by \"make install\"\nHEADERS_PUB=src/headers/tomcrypt.h src/headers/tomcrypt_argchk.h src/headers/tomcrypt_cfg.h \\\nsrc/headers/tomcrypt_cipher.h src/headers/tomcrypt_custom.h src/headers/tomcrypt_hash.h \\\nsrc/headers/tomcrypt_mac.h src/headers/tomcrypt_macros.h src/headers/tomcrypt_math.h \\\nsrc/headers/tomcrypt_misc.h src/headers/tomcrypt_pk.h src/headers/tomcrypt_pkcs.h \\\nsrc/headers/tomcrypt_prng.h\n\nHEADERS=$(HEADERS_PUB) src/headers/tomcrypt_private.h\n\n#These are the rules to make certain object files.\nsrc/ciphers/aes/aes.o: src/ciphers/aes/aes.c src/ciphers/aes/aes_tab.c\nsrc/ciphers/twofish/twofish.o: src/ciphers/twofish/twofish.c src/ciphers/twofish/twofish_tab.c\nsrc/hashes/sha2/sha224.o: src/hashes/sha2/sha224.c src/hashes/sha2/sha256.c\nsrc/hashes/sha2/sha384.o: src/hashes/sha2/sha384.c src/hashes/sha2/sha512.c\nsrc/hashes/sha2/sha512_224.o: src/hashes/sha2/sha512.c src/hashes/sha2/sha512_224.c\nsrc/hashes/sha2/sha512_256.o: src/hashes/sha2/sha512.c src/hashes/sha2/sha512_256.c\nsrc/hashes/whirl/whirl.o: src/hashes/whirl/whirl.c src/hashes/whirl/whirltab.c\n\n\n$(DOBJECTS): LTC_CFLAGS := -Itests $(LTC_CFLAGS)\n$(TOBJECTS): LTC_CFLAGS := -Itests $(LTC_CFLAGS)\n\n#Dependencies on *.h\n$(OBJECTS): $(HEADERS)\n$(DOBJECTS): $(HEADERS) $(THEADERS)\n$(TOBJECTS): $(HEADERS) $(THEADERS)\n\nall: $(call print-help,all,Builds the library and all demos and test utils (test $(UNBROKEN_DEMOS) $(BROKEN_DEMOS))) all_test $(BROKEN_DEMOS)\n\nall_test: $(call print-help,all_test,Builds the library and all unbroken demos and test utils (test $(UNBROKEN_DEMOS))) test $(UNBROKEN_DEMOS)\n\nbins: $(call print-help,bins,Builds the library and all useful demos) $(USEFUL_DEMOS)\n\ncheck: test\n\t./test\n\ntvs: hashsum sizes constants tv_gen\n\t./tv_gen\n\t./.ci/coverage_more.sh\n\tmv *_tv.txt notes/\n\npr-check: tvs\n\t./helper.pl -a -u\n\n#build the doxy files (requires Doxygen, tetex and patience)\ndoxygen: $(call print-help,doxygen,Builds the doxygen html documentation)\n\t$(MAKE) -C doc/ $@ V=$(V)\ndoxy: $(call print-help,doxy,Builds the complete doxygen documentation including refman.pdf (takes long to generate))\n\t$(MAKE) -C doc/ $@ V=$(V)\ndocs: $(call print-help,docs,Builds the Developer Manual)\n\t$(MAKE) -C doc/ $@ V=$(V)\n\ndoc/crypt.pdf: $(call print-help,doc/crypt.pdf,Builds the Developer Manual)\n\t$(MAKE) -C doc/ crypt.pdf V=$(V)\n\n\ninstall_all: $(call print-help,install_all,Install everything - library bins docs tests) install install_bins install_docs\n\nINSTALL_OPTS ?= -m 644\n\n.common_install: $(LIBNAME)\n\tinstall -p -d $(DESTDIR)$(INCPATH)\n\tinstall -p -d $(DESTDIR)$(LIBPATH)\n\t$(INSTALL_CMD) -p $(INSTALL_OPTS) $(LIBNAME) $(DESTDIR)$(LIBPATH)/$(LIBNAME)\n\tinstall -p -m 644 $(HEADERS_PUB) $(DESTDIR)$(INCPATH)\n\n$(DESTDIR)$(BINPATH):\n\tinstall -p -d $(DESTDIR)$(BINPATH)\n\n.common_install_bins: $(USEFUL_DEMOS) $(DESTDIR)$(BINPATH)\n\tfor d in $(USEFUL_DEMOS); do $(INSTALL_CMD) -p -m 775 $$d $(DESTDIR)$(BINPATH)/ltc-$$d\n\t$(INSTALL_CMD) -p -m 775 demos/ltc $(DESTDIR)$(BINPATH)\n\ninstall_docs: $(call print-help,install_docs,Installs the Developer Manual) doc/crypt.pdf\n\tinstall -p -d $(DESTDIR)$(DATAPATH)\n\tinstall -p -m 644 doc/crypt.pdf $(DESTDIR)$(DATAPATH)\n\ninstall_test: $(call print-help,install_test,Installs the self-test binary) test $(DESTDIR)$(BINPATH)\n\t$(INSTALL_CMD) -p -m 775 $< $(DESTDIR)$(BINPATH)\n\ninstall_hooks: $(call print-help,install_hooks,Installs the git hooks)\n\tfor s in `ls hooks/`; do ln -s ../../hooks/$$s .git/hooks/$$s; done\n\nHEADER_FILES=$(notdir $(HEADERS_PUB))\n.common_uninstall:\n\t$(UNINSTALL_CMD) $(DESTDIR)$(LIBPATH)/$(LIBNAME)\n\trm $(HEADER_FILES:%=$(DESTDIR)$(INCPATH)/%)\n\n#This rule cleans the source tree of all compiled code, not including the pdf\n#documentation.\nclean: $(call print-help,clean,Clean everything besides the pdf documentation)\n\tfind . -type f    -name \"*.o\"   \\\n               -o -name \"*.lo\"  \\\n               -o -name \"*.a\"   \\\n               -o -name \"*.la\"  \\\n               -o -name \"*.obj\" \\\n               -o -name \"*.lib\" \\\n               -o -name \"*.exe\" \\\n               -o -name \"*.dll\" \\\n               -o -name \"*.so\"  \\\n               -o -name \"*.gcov\"\\\n               -o -name \"*.gcda\"\\\n               -o -name \"*.gcno\"\\\n               -o -name \"*.il\"  \\\n               -o -name \"*.dyn\" \\\n               -o -name \"*.dpi\"  | xargs rm -f\n\trm -f $(TIMING) $(TEST) $(DEMOS)\n\trm -f *_tv.txt\n\trm -f *.pc\n\trm -rf `find . -type d -name \"*.libs\" | xargs`\n\t$(MAKE) -C doc/ clean\n\nzipup: $(call print-help,zipup,Prepare the archives for a release) doc/crypt.pdf\n\t@# Update the index, so diff-index won't fail in case the pdf has been created.\n\t@#   As the pdf creation modifies crypt.tex, git sometimes detects the\n\t@#   modified file, but misses that it's put back to its original version.\n\t@git update-index --refresh\n\t@git diff-index --quiet HEAD -- || ( echo \"FAILURE: uncommited changes or not a git\" && exit 1 )\n\t@perl helper.pl --check-all || ( echo \"FAILURE: helper.pl --check-all errors\" && exit 1 )\n\trm -rf libtomcrypt-$(VERSION) crypt-$(VERSION).*\n\t@# files/dirs excluded from \"git archive\" are defined in .gitattributes\n\tgit archive --format=tar --prefix=libtomcrypt-$(VERSION)/ HEAD | tar x\n\t@echo 'fixme check'\n\t-@(find libtomcrypt-$(VERSION)/ -type f | xargs grep 'FIXM[E]') && echo '############## BEWARE: the \"fixme\" marker was found !!! ##############' || true\n\tmkdir -p libtomcrypt-$(VERSION)/doc\n\tcp doc/crypt.pdf libtomcrypt-$(VERSION)/doc/crypt.pdf\n\ttar -c libtomcrypt-$(VERSION)/ | xz -6e -c - > crypt-$(VERSION).tar.xz\n\tzip -9rq crypt-$(VERSION).zip libtomcrypt-$(VERSION)\n\trm -rf libtomcrypt-$(VERSION)\n\tgpg -b -a crypt-$(VERSION).tar.xz\n\tgpg -b -a crypt-$(VERSION).zip\n\ncodecheck: $(call print-help,codecheck,Check the code of the library)\n\tperl helper.pl -a\n\tperlcritic *.pl\n\nhelp: $(call print-help,help,That's what you're currently looking at)\n"
        },
        {
          "name": "notes",
          "type": "tree",
          "content": null
        },
        {
          "name": "sources.cmake",
          "type": "blob",
          "size": 16.603515625,
          "content": "set(SOURCES\nsrc/ciphers/aes/aes.c\nsrc/ciphers/aes/aes_desc.c\nsrc/ciphers/aes/aes_tab.c\nsrc/ciphers/aes/aesni.c\nsrc/ciphers/anubis.c\nsrc/ciphers/blowfish.c\nsrc/ciphers/camellia.c\nsrc/ciphers/cast5.c\nsrc/ciphers/des.c\nsrc/ciphers/idea.c\nsrc/ciphers/kasumi.c\nsrc/ciphers/khazad.c\nsrc/ciphers/kseed.c\nsrc/ciphers/multi2.c\nsrc/ciphers/noekeon.c\nsrc/ciphers/rc2.c\nsrc/ciphers/rc5.c\nsrc/ciphers/rc6.c\nsrc/ciphers/safer/safer.c\nsrc/ciphers/safer/safer_tab.c\nsrc/ciphers/safer/saferp.c\nsrc/ciphers/serpent.c\nsrc/ciphers/skipjack.c\nsrc/ciphers/sm4.c\nsrc/ciphers/tea.c\nsrc/ciphers/twofish/twofish.c\nsrc/ciphers/twofish/twofish_tab.c\nsrc/ciphers/xtea.c\nsrc/encauth/ccm/ccm_add_aad.c\nsrc/encauth/ccm/ccm_add_nonce.c\nsrc/encauth/ccm/ccm_done.c\nsrc/encauth/ccm/ccm_init.c\nsrc/encauth/ccm/ccm_memory.c\nsrc/encauth/ccm/ccm_process.c\nsrc/encauth/ccm/ccm_reset.c\nsrc/encauth/ccm/ccm_test.c\nsrc/encauth/chachapoly/chacha20poly1305_add_aad.c\nsrc/encauth/chachapoly/chacha20poly1305_decrypt.c\nsrc/encauth/chachapoly/chacha20poly1305_done.c\nsrc/encauth/chachapoly/chacha20poly1305_encrypt.c\nsrc/encauth/chachapoly/chacha20poly1305_init.c\nsrc/encauth/chachapoly/chacha20poly1305_memory.c\nsrc/encauth/chachapoly/chacha20poly1305_setiv.c\nsrc/encauth/chachapoly/chacha20poly1305_setiv_rfc7905.c\nsrc/encauth/chachapoly/chacha20poly1305_test.c\nsrc/encauth/eax/eax_addheader.c\nsrc/encauth/eax/eax_decrypt.c\nsrc/encauth/eax/eax_decrypt_verify_memory.c\nsrc/encauth/eax/eax_done.c\nsrc/encauth/eax/eax_encrypt.c\nsrc/encauth/eax/eax_encrypt_authenticate_memory.c\nsrc/encauth/eax/eax_init.c\nsrc/encauth/eax/eax_test.c\nsrc/encauth/gcm/gcm_add_aad.c\nsrc/encauth/gcm/gcm_add_iv.c\nsrc/encauth/gcm/gcm_done.c\nsrc/encauth/gcm/gcm_gf_mult.c\nsrc/encauth/gcm/gcm_init.c\nsrc/encauth/gcm/gcm_memory.c\nsrc/encauth/gcm/gcm_mult_h.c\nsrc/encauth/gcm/gcm_process.c\nsrc/encauth/gcm/gcm_reset.c\nsrc/encauth/gcm/gcm_test.c\nsrc/encauth/ocb/ocb_decrypt.c\nsrc/encauth/ocb/ocb_decrypt_verify_memory.c\nsrc/encauth/ocb/ocb_done_decrypt.c\nsrc/encauth/ocb/ocb_done_encrypt.c\nsrc/encauth/ocb/ocb_encrypt.c\nsrc/encauth/ocb/ocb_encrypt_authenticate_memory.c\nsrc/encauth/ocb/ocb_init.c\nsrc/encauth/ocb/ocb_ntz.c\nsrc/encauth/ocb/ocb_shift_xor.c\nsrc/encauth/ocb/ocb_test.c\nsrc/encauth/ocb/s_ocb_done.c\nsrc/encauth/ocb3/ocb3_add_aad.c\nsrc/encauth/ocb3/ocb3_decrypt.c\nsrc/encauth/ocb3/ocb3_decrypt_last.c\nsrc/encauth/ocb3/ocb3_decrypt_verify_memory.c\nsrc/encauth/ocb3/ocb3_done.c\nsrc/encauth/ocb3/ocb3_encrypt.c\nsrc/encauth/ocb3/ocb3_encrypt_authenticate_memory.c\nsrc/encauth/ocb3/ocb3_encrypt_last.c\nsrc/encauth/ocb3/ocb3_init.c\nsrc/encauth/ocb3/ocb3_int_ntz.c\nsrc/encauth/ocb3/ocb3_int_xor_blocks.c\nsrc/encauth/ocb3/ocb3_test.c\nsrc/encauth/siv/siv.c\nsrc/hashes/blake2b.c\nsrc/hashes/blake2s.c\nsrc/hashes/chc/chc.c\nsrc/hashes/helper/hash_file.c\nsrc/hashes/helper/hash_filehandle.c\nsrc/hashes/helper/hash_memory.c\nsrc/hashes/helper/hash_memory_multi.c\nsrc/hashes/md2.c\nsrc/hashes/md4.c\nsrc/hashes/md5.c\nsrc/hashes/rmd128.c\nsrc/hashes/rmd160.c\nsrc/hashes/rmd256.c\nsrc/hashes/rmd320.c\nsrc/hashes/sha1.c\nsrc/hashes/sha2/sha224.c\nsrc/hashes/sha2/sha256.c\nsrc/hashes/sha2/sha384.c\nsrc/hashes/sha2/sha512.c\nsrc/hashes/sha2/sha512_224.c\nsrc/hashes/sha2/sha512_256.c\nsrc/hashes/sha3.c\nsrc/hashes/sha3_test.c\nsrc/hashes/tiger.c\nsrc/hashes/whirl/whirl.c\nsrc/hashes/whirl/whirltab.c\nsrc/headers/tomcrypt.h\nsrc/headers/tomcrypt_argchk.h\nsrc/headers/tomcrypt_cfg.h\nsrc/headers/tomcrypt_cipher.h\nsrc/headers/tomcrypt_custom.h\nsrc/headers/tomcrypt_hash.h\nsrc/headers/tomcrypt_mac.h\nsrc/headers/tomcrypt_macros.h\nsrc/headers/tomcrypt_math.h\nsrc/headers/tomcrypt_misc.h\nsrc/headers/tomcrypt_pk.h\nsrc/headers/tomcrypt_pkcs.h\nsrc/headers/tomcrypt_private.h\nsrc/headers/tomcrypt_prng.h\nsrc/mac/blake2/blake2bmac.c\nsrc/mac/blake2/blake2bmac_file.c\nsrc/mac/blake2/blake2bmac_memory.c\nsrc/mac/blake2/blake2bmac_memory_multi.c\nsrc/mac/blake2/blake2bmac_test.c\nsrc/mac/blake2/blake2smac.c\nsrc/mac/blake2/blake2smac_file.c\nsrc/mac/blake2/blake2smac_memory.c\nsrc/mac/blake2/blake2smac_memory_multi.c\nsrc/mac/blake2/blake2smac_test.c\nsrc/mac/f9/f9_done.c\nsrc/mac/f9/f9_file.c\nsrc/mac/f9/f9_init.c\nsrc/mac/f9/f9_memory.c\nsrc/mac/f9/f9_memory_multi.c\nsrc/mac/f9/f9_process.c\nsrc/mac/f9/f9_test.c\nsrc/mac/hmac/hmac_done.c\nsrc/mac/hmac/hmac_file.c\nsrc/mac/hmac/hmac_init.c\nsrc/mac/hmac/hmac_memory.c\nsrc/mac/hmac/hmac_memory_multi.c\nsrc/mac/hmac/hmac_process.c\nsrc/mac/hmac/hmac_test.c\nsrc/mac/omac/omac_done.c\nsrc/mac/omac/omac_file.c\nsrc/mac/omac/omac_init.c\nsrc/mac/omac/omac_memory.c\nsrc/mac/omac/omac_memory_multi.c\nsrc/mac/omac/omac_process.c\nsrc/mac/omac/omac_test.c\nsrc/mac/pelican/pelican.c\nsrc/mac/pelican/pelican_memory.c\nsrc/mac/pelican/pelican_test.c\nsrc/mac/pmac/pmac_done.c\nsrc/mac/pmac/pmac_file.c\nsrc/mac/pmac/pmac_init.c\nsrc/mac/pmac/pmac_memory.c\nsrc/mac/pmac/pmac_memory_multi.c\nsrc/mac/pmac/pmac_ntz.c\nsrc/mac/pmac/pmac_process.c\nsrc/mac/pmac/pmac_shift_xor.c\nsrc/mac/pmac/pmac_test.c\nsrc/mac/poly1305/poly1305.c\nsrc/mac/poly1305/poly1305_file.c\nsrc/mac/poly1305/poly1305_memory.c\nsrc/mac/poly1305/poly1305_memory_multi.c\nsrc/mac/poly1305/poly1305_test.c\nsrc/mac/xcbc/xcbc_done.c\nsrc/mac/xcbc/xcbc_file.c\nsrc/mac/xcbc/xcbc_init.c\nsrc/mac/xcbc/xcbc_memory.c\nsrc/mac/xcbc/xcbc_memory_multi.c\nsrc/mac/xcbc/xcbc_process.c\nsrc/mac/xcbc/xcbc_test.c\nsrc/math/fp/ltc_ecc_fp_mulmod.c\nsrc/math/gmp_desc.c\nsrc/math/ltm_desc.c\nsrc/math/multi.c\nsrc/math/radix_to_bin.c\nsrc/math/rand_bn.c\nsrc/math/rand_prime.c\nsrc/math/tfm_desc.c\nsrc/misc/adler32.c\nsrc/misc/base16/base16_decode.c\nsrc/misc/base16/base16_encode.c\nsrc/misc/base32/base32_decode.c\nsrc/misc/base32/base32_encode.c\nsrc/misc/base64/base64_decode.c\nsrc/misc/base64/base64_encode.c\nsrc/misc/bcrypt/bcrypt.c\nsrc/misc/burn_stack.c\nsrc/misc/compare_testvector.c\nsrc/misc/copy_or_zeromem.c\nsrc/misc/crc32.c\nsrc/misc/crypt/crypt.c\nsrc/misc/crypt/crypt_argchk.c\nsrc/misc/crypt/crypt_cipher_descriptor.c\nsrc/misc/crypt/crypt_cipher_is_valid.c\nsrc/misc/crypt/crypt_constants.c\nsrc/misc/crypt/crypt_find_cipher.c\nsrc/misc/crypt/crypt_find_cipher_any.c\nsrc/misc/crypt/crypt_find_cipher_id.c\nsrc/misc/crypt/crypt_find_hash.c\nsrc/misc/crypt/crypt_find_hash_any.c\nsrc/misc/crypt/crypt_find_hash_id.c\nsrc/misc/crypt/crypt_find_hash_oid.c\nsrc/misc/crypt/crypt_find_prng.c\nsrc/misc/crypt/crypt_fsa.c\nsrc/misc/crypt/crypt_hash_descriptor.c\nsrc/misc/crypt/crypt_hash_is_valid.c\nsrc/misc/crypt/crypt_inits.c\nsrc/misc/crypt/crypt_ltc_mp_descriptor.c\nsrc/misc/crypt/crypt_prng_descriptor.c\nsrc/misc/crypt/crypt_prng_is_valid.c\nsrc/misc/crypt/crypt_prng_rng_descriptor.c\nsrc/misc/crypt/crypt_register_all_ciphers.c\nsrc/misc/crypt/crypt_register_all_hashes.c\nsrc/misc/crypt/crypt_register_all_prngs.c\nsrc/misc/crypt/crypt_register_cipher.c\nsrc/misc/crypt/crypt_register_hash.c\nsrc/misc/crypt/crypt_register_prng.c\nsrc/misc/crypt/crypt_sizes.c\nsrc/misc/crypt/crypt_unregister_cipher.c\nsrc/misc/crypt/crypt_unregister_hash.c\nsrc/misc/crypt/crypt_unregister_prng.c\nsrc/misc/error_to_string.c\nsrc/misc/hkdf/hkdf.c\nsrc/misc/hkdf/hkdf_test.c\nsrc/misc/mem_neq.c\nsrc/misc/padding/padding_depad.c\nsrc/misc/padding/padding_pad.c\nsrc/misc/password_free.c\nsrc/misc/pbes/pbes.c\nsrc/misc/pbes/pbes1.c\nsrc/misc/pbes/pbes2.c\nsrc/misc/pem/pem.c\nsrc/misc/pem/pem_pkcs.c\nsrc/misc/pem/pem_read.c\nsrc/misc/pem/pem_ssh.c\nsrc/misc/pkcs12/pkcs12_kdf.c\nsrc/misc/pkcs12/pkcs12_utf8_to_utf16.c\nsrc/misc/pkcs5/pkcs_5_1.c\nsrc/misc/pkcs5/pkcs_5_2.c\nsrc/misc/pkcs5/pkcs_5_test.c\nsrc/misc/ssh/ssh_decode_sequence_multi.c\nsrc/misc/ssh/ssh_encode_sequence_multi.c\nsrc/misc/zeromem.c\nsrc/modes/cbc/cbc_decrypt.c\nsrc/modes/cbc/cbc_done.c\nsrc/modes/cbc/cbc_encrypt.c\nsrc/modes/cbc/cbc_getiv.c\nsrc/modes/cbc/cbc_setiv.c\nsrc/modes/cbc/cbc_start.c\nsrc/modes/cfb/cfb_decrypt.c\nsrc/modes/cfb/cfb_done.c\nsrc/modes/cfb/cfb_encrypt.c\nsrc/modes/cfb/cfb_getiv.c\nsrc/modes/cfb/cfb_setiv.c\nsrc/modes/cfb/cfb_start.c\nsrc/modes/ctr/ctr_decrypt.c\nsrc/modes/ctr/ctr_done.c\nsrc/modes/ctr/ctr_encrypt.c\nsrc/modes/ctr/ctr_getiv.c\nsrc/modes/ctr/ctr_setiv.c\nsrc/modes/ctr/ctr_start.c\nsrc/modes/ctr/ctr_test.c\nsrc/modes/ecb/ecb_decrypt.c\nsrc/modes/ecb/ecb_done.c\nsrc/modes/ecb/ecb_encrypt.c\nsrc/modes/ecb/ecb_start.c\nsrc/modes/f8/f8_decrypt.c\nsrc/modes/f8/f8_done.c\nsrc/modes/f8/f8_encrypt.c\nsrc/modes/f8/f8_getiv.c\nsrc/modes/f8/f8_setiv.c\nsrc/modes/f8/f8_start.c\nsrc/modes/f8/f8_test_mode.c\nsrc/modes/lrw/lrw_decrypt.c\nsrc/modes/lrw/lrw_done.c\nsrc/modes/lrw/lrw_encrypt.c\nsrc/modes/lrw/lrw_getiv.c\nsrc/modes/lrw/lrw_process.c\nsrc/modes/lrw/lrw_setiv.c\nsrc/modes/lrw/lrw_start.c\nsrc/modes/lrw/lrw_test.c\nsrc/modes/ofb/ofb_decrypt.c\nsrc/modes/ofb/ofb_done.c\nsrc/modes/ofb/ofb_encrypt.c\nsrc/modes/ofb/ofb_getiv.c\nsrc/modes/ofb/ofb_setiv.c\nsrc/modes/ofb/ofb_start.c\nsrc/modes/xts/xts_decrypt.c\nsrc/modes/xts/xts_done.c\nsrc/modes/xts/xts_encrypt.c\nsrc/modes/xts/xts_init.c\nsrc/modes/xts/xts_mult_x.c\nsrc/modes/xts/xts_test.c\nsrc/pk/asn1/der/bit/der_decode_bit_string.c\nsrc/pk/asn1/der/bit/der_decode_raw_bit_string.c\nsrc/pk/asn1/der/bit/der_encode_bit_string.c\nsrc/pk/asn1/der/bit/der_encode_raw_bit_string.c\nsrc/pk/asn1/der/bit/der_length_bit_string.c\nsrc/pk/asn1/der/boolean/der_decode_boolean.c\nsrc/pk/asn1/der/boolean/der_encode_boolean.c\nsrc/pk/asn1/der/boolean/der_length_boolean.c\nsrc/pk/asn1/der/choice/der_decode_choice.c\nsrc/pk/asn1/der/custom_type/der_decode_custom_type.c\nsrc/pk/asn1/der/custom_type/der_encode_custom_type.c\nsrc/pk/asn1/der/custom_type/der_length_custom_type.c\nsrc/pk/asn1/der/general/der_asn1_maps.c\nsrc/pk/asn1/der/general/der_decode_asn1_identifier.c\nsrc/pk/asn1/der/general/der_decode_asn1_length.c\nsrc/pk/asn1/der/general/der_encode_asn1_identifier.c\nsrc/pk/asn1/der/general/der_encode_asn1_length.c\nsrc/pk/asn1/der/general/der_length_asn1_identifier.c\nsrc/pk/asn1/der/general/der_length_asn1_length.c\nsrc/pk/asn1/der/generalizedtime/der_decode_generalizedtime.c\nsrc/pk/asn1/der/generalizedtime/der_encode_generalizedtime.c\nsrc/pk/asn1/der/generalizedtime/der_length_generalizedtime.c\nsrc/pk/asn1/der/ia5/der_decode_ia5_string.c\nsrc/pk/asn1/der/ia5/der_encode_ia5_string.c\nsrc/pk/asn1/der/ia5/der_length_ia5_string.c\nsrc/pk/asn1/der/integer/der_decode_integer.c\nsrc/pk/asn1/der/integer/der_encode_integer.c\nsrc/pk/asn1/der/integer/der_length_integer.c\nsrc/pk/asn1/der/object_identifier/der_decode_object_identifier.c\nsrc/pk/asn1/der/object_identifier/der_encode_object_identifier.c\nsrc/pk/asn1/der/object_identifier/der_length_object_identifier.c\nsrc/pk/asn1/der/octet/der_decode_octet_string.c\nsrc/pk/asn1/der/octet/der_encode_octet_string.c\nsrc/pk/asn1/der/octet/der_length_octet_string.c\nsrc/pk/asn1/der/printable_string/der_decode_printable_string.c\nsrc/pk/asn1/der/printable_string/der_encode_printable_string.c\nsrc/pk/asn1/der/printable_string/der_length_printable_string.c\nsrc/pk/asn1/der/sequence/der_decode_sequence_ex.c\nsrc/pk/asn1/der/sequence/der_decode_sequence_flexi.c\nsrc/pk/asn1/der/sequence/der_decode_sequence_multi.c\nsrc/pk/asn1/der/sequence/der_encode_sequence_ex.c\nsrc/pk/asn1/der/sequence/der_encode_sequence_multi.c\nsrc/pk/asn1/der/sequence/der_flexi_sequence_cmp.c\nsrc/pk/asn1/der/sequence/der_length_sequence.c\nsrc/pk/asn1/der/sequence/der_sequence_free.c\nsrc/pk/asn1/der/sequence/der_sequence_shrink.c\nsrc/pk/asn1/der/set/der_encode_set.c\nsrc/pk/asn1/der/set/der_encode_setof.c\nsrc/pk/asn1/der/short_integer/der_decode_short_integer.c\nsrc/pk/asn1/der/short_integer/der_encode_short_integer.c\nsrc/pk/asn1/der/short_integer/der_length_short_integer.c\nsrc/pk/asn1/der/teletex_string/der_decode_teletex_string.c\nsrc/pk/asn1/der/teletex_string/der_length_teletex_string.c\nsrc/pk/asn1/der/utctime/der_decode_utctime.c\nsrc/pk/asn1/der/utctime/der_encode_utctime.c\nsrc/pk/asn1/der/utctime/der_length_utctime.c\nsrc/pk/asn1/der/utf8/der_decode_utf8_string.c\nsrc/pk/asn1/der/utf8/der_encode_utf8_string.c\nsrc/pk/asn1/der/utf8/der_length_utf8_string.c\nsrc/pk/asn1/oid/pk_get.c\nsrc/pk/asn1/oid/pk_oid_cmp.c\nsrc/pk/asn1/oid/pk_oid_str.c\nsrc/pk/asn1/pkcs8/pkcs8_decode_flexi.c\nsrc/pk/asn1/pkcs8/pkcs8_get.c\nsrc/pk/asn1/x509/x509_decode_public_key_from_certificate.c\nsrc/pk/asn1/x509/x509_decode_spki.c\nsrc/pk/asn1/x509/x509_decode_subject_public_key_info.c\nsrc/pk/asn1/x509/x509_encode_subject_public_key_info.c\nsrc/pk/dh/dh.c\nsrc/pk/dh/dh_check_pubkey.c\nsrc/pk/dh/dh_export.c\nsrc/pk/dh/dh_export_key.c\nsrc/pk/dh/dh_free.c\nsrc/pk/dh/dh_generate_key.c\nsrc/pk/dh/dh_import.c\nsrc/pk/dh/dh_import_pkcs8.c\nsrc/pk/dh/dh_set.c\nsrc/pk/dh/dh_set_pg_dhparam.c\nsrc/pk/dh/dh_shared_secret.c\nsrc/pk/dsa/dsa_decrypt_key.c\nsrc/pk/dsa/dsa_encrypt_key.c\nsrc/pk/dsa/dsa_export.c\nsrc/pk/dsa/dsa_free.c\nsrc/pk/dsa/dsa_generate_key.c\nsrc/pk/dsa/dsa_generate_pqg.c\nsrc/pk/dsa/dsa_import.c\nsrc/pk/dsa/dsa_import_pkcs8.c\nsrc/pk/dsa/dsa_init.c\nsrc/pk/dsa/dsa_make_key.c\nsrc/pk/dsa/dsa_set.c\nsrc/pk/dsa/dsa_set_pqg_dsaparam.c\nsrc/pk/dsa/dsa_shared_secret.c\nsrc/pk/dsa/dsa_sign_hash.c\nsrc/pk/dsa/dsa_verify_hash.c\nsrc/pk/dsa/dsa_verify_key.c\nsrc/pk/ec25519/ec25519_crypto_ctx.c\nsrc/pk/ec25519/ec25519_export.c\nsrc/pk/ec25519/ec25519_import_pkcs8.c\nsrc/pk/ec25519/tweetnacl.c\nsrc/pk/ecc/ecc.c\nsrc/pk/ecc/ecc_ansi_x963_export.c\nsrc/pk/ecc/ecc_ansi_x963_import.c\nsrc/pk/ecc/ecc_decrypt_key.c\nsrc/pk/ecc/ecc_encrypt_key.c\nsrc/pk/ecc/ecc_export.c\nsrc/pk/ecc/ecc_export_openssl.c\nsrc/pk/ecc/ecc_find_curve.c\nsrc/pk/ecc/ecc_free.c\nsrc/pk/ecc/ecc_get_key.c\nsrc/pk/ecc/ecc_get_oid_str.c\nsrc/pk/ecc/ecc_get_size.c\nsrc/pk/ecc/ecc_import.c\nsrc/pk/ecc/ecc_import_openssl.c\nsrc/pk/ecc/ecc_import_pkcs8.c\nsrc/pk/ecc/ecc_import_x509.c\nsrc/pk/ecc/ecc_make_key.c\nsrc/pk/ecc/ecc_recover_key.c\nsrc/pk/ecc/ecc_set_curve.c\nsrc/pk/ecc/ecc_set_curve_internal.c\nsrc/pk/ecc/ecc_set_key.c\nsrc/pk/ecc/ecc_shared_secret.c\nsrc/pk/ecc/ecc_sign_hash.c\nsrc/pk/ecc/ecc_sizes.c\nsrc/pk/ecc/ecc_ssh_ecdsa_encode_name.c\nsrc/pk/ecc/ecc_verify_hash.c\nsrc/pk/ecc/ltc_ecc_export_point.c\nsrc/pk/ecc/ltc_ecc_import_point.c\nsrc/pk/ecc/ltc_ecc_is_point.c\nsrc/pk/ecc/ltc_ecc_is_point_at_infinity.c\nsrc/pk/ecc/ltc_ecc_map.c\nsrc/pk/ecc/ltc_ecc_mul2add.c\nsrc/pk/ecc/ltc_ecc_mulmod.c\nsrc/pk/ecc/ltc_ecc_mulmod_timing.c\nsrc/pk/ecc/ltc_ecc_points.c\nsrc/pk/ecc/ltc_ecc_projective_add_point.c\nsrc/pk/ecc/ltc_ecc_projective_dbl_point.c\nsrc/pk/ecc/ltc_ecc_verify_key.c\nsrc/pk/ed25519/ed25519_export.c\nsrc/pk/ed25519/ed25519_import.c\nsrc/pk/ed25519/ed25519_import_pkcs8.c\nsrc/pk/ed25519/ed25519_import_raw.c\nsrc/pk/ed25519/ed25519_import_x509.c\nsrc/pk/ed25519/ed25519_make_key.c\nsrc/pk/ed25519/ed25519_sign.c\nsrc/pk/ed25519/ed25519_verify.c\nsrc/pk/pka_key.c\nsrc/pk/pkcs1/pkcs_1_i2osp.c\nsrc/pk/pkcs1/pkcs_1_mgf1.c\nsrc/pk/pkcs1/pkcs_1_oaep_decode.c\nsrc/pk/pkcs1/pkcs_1_oaep_encode.c\nsrc/pk/pkcs1/pkcs_1_os2ip.c\nsrc/pk/pkcs1/pkcs_1_pss_decode.c\nsrc/pk/pkcs1/pkcs_1_pss_encode.c\nsrc/pk/pkcs1/pkcs_1_v1_5_decode.c\nsrc/pk/pkcs1/pkcs_1_v1_5_encode.c\nsrc/pk/rsa/rsa_decrypt_key.c\nsrc/pk/rsa/rsa_encrypt_key.c\nsrc/pk/rsa/rsa_export.c\nsrc/pk/rsa/rsa_exptmod.c\nsrc/pk/rsa/rsa_get_size.c\nsrc/pk/rsa/rsa_import.c\nsrc/pk/rsa/rsa_import_pkcs8.c\nsrc/pk/rsa/rsa_import_x509.c\nsrc/pk/rsa/rsa_key.c\nsrc/pk/rsa/rsa_make_key.c\nsrc/pk/rsa/rsa_set.c\nsrc/pk/rsa/rsa_sign_hash.c\nsrc/pk/rsa/rsa_sign_saltlen_get.c\nsrc/pk/rsa/rsa_verify_hash.c\nsrc/pk/x25519/x25519_export.c\nsrc/pk/x25519/x25519_import.c\nsrc/pk/x25519/x25519_import_pkcs8.c\nsrc/pk/x25519/x25519_import_raw.c\nsrc/pk/x25519/x25519_import_x509.c\nsrc/pk/x25519/x25519_make_key.c\nsrc/pk/x25519/x25519_shared_secret.c\nsrc/prngs/chacha20.c\nsrc/prngs/fortuna.c\nsrc/prngs/rc4.c\nsrc/prngs/rng_get_bytes.c\nsrc/prngs/rng_make_prng.c\nsrc/prngs/sober128.c\nsrc/prngs/sprng.c\nsrc/prngs/yarrow.c\nsrc/stream/chacha/chacha_crypt.c\nsrc/stream/chacha/chacha_done.c\nsrc/stream/chacha/chacha_ivctr32.c\nsrc/stream/chacha/chacha_ivctr64.c\nsrc/stream/chacha/chacha_keystream.c\nsrc/stream/chacha/chacha_memory.c\nsrc/stream/chacha/chacha_setup.c\nsrc/stream/chacha/chacha_test.c\nsrc/stream/rabbit/rabbit.c\nsrc/stream/rabbit/rabbit_memory.c\nsrc/stream/rc4/rc4_stream.c\nsrc/stream/rc4/rc4_stream_memory.c\nsrc/stream/rc4/rc4_test.c\nsrc/stream/salsa20/salsa20_crypt.c\nsrc/stream/salsa20/salsa20_done.c\nsrc/stream/salsa20/salsa20_ivctr64.c\nsrc/stream/salsa20/salsa20_keystream.c\nsrc/stream/salsa20/salsa20_memory.c\nsrc/stream/salsa20/salsa20_setup.c\nsrc/stream/salsa20/salsa20_test.c\nsrc/stream/salsa20/xsalsa20_memory.c\nsrc/stream/salsa20/xsalsa20_setup.c\nsrc/stream/salsa20/xsalsa20_test.c\nsrc/stream/sober128/sober128_stream.c\nsrc/stream/sober128/sober128_stream_memory.c\nsrc/stream/sober128/sober128_test.c\nsrc/stream/sober128/sober128tab.c\nsrc/stream/sosemanuk/sosemanuk.c\nsrc/stream/sosemanuk/sosemanuk_memory.c\nsrc/stream/sosemanuk/sosemanuk_test.c\n)\n\nset(PUBLIC_HEADERS\nsrc/headers/tomcrypt.h\nsrc/headers/tomcrypt_argchk.h\nsrc/headers/tomcrypt_cfg.h\nsrc/headers/tomcrypt_cipher.h\nsrc/headers/tomcrypt_custom.h\nsrc/headers/tomcrypt_hash.h\nsrc/headers/tomcrypt_mac.h\nsrc/headers/tomcrypt_macros.h\nsrc/headers/tomcrypt_math.h\nsrc/headers/tomcrypt_misc.h\nsrc/headers/tomcrypt_pk.h\nsrc/headers/tomcrypt_pkcs.h\nsrc/headers/tomcrypt_prng.h\n)\n\nset(PRIVATE_HEADERS src/headers/tomcrypt_private.h)\nset_property(GLOBAL PROPERTY PUBLIC_HEADERS ${PUBLIC_HEADERS})\n\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "testme.sh",
          "type": "blob",
          "size": 2.2080078125,
          "content": "#!/bin/bash\n\nif [ $# -lt 3 ]\nthen\n  echo \"usage is: ${0##*/} <which makefile and other make options> <additional defines> <path to math provider>\"\n  echo \"e.g. \\\"${0##*/} \\\"makefile -j9\\\" \\\"-DUSE_LTM -DLTM_DESC -I../libtommath\\\" ../libtommath/libtommath.a\\\"\"\n  echo \"to create aggregate coverage: pre-pend with LTC_COVERAGE=1\"\n  exit -1\nfi\n\n# date\necho \"date=\"`date`\n\n# check sources\nbash .ci/check_source.sh \"CHECK_SOURCES\" \" \" \"$1\" \"$2\" \"$3\" || exit 1\n\nmk=\"$1\"\n\n[ \"$LTC_COVERAGE\" != \"\" ] && mk=\"$mk COVERAGE=1\"\n\n# meta builds\nbash .ci/meta_builds.sh \"META_BUILS\" \" \" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# valgrind build\nbash .ci/valgrind.sh \"VALGRIND\" \" \" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# stock build\nbash .ci/run.sh \"STOCK\" \" \" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# EASY build\nbash .ci/run.sh \"EASY\" \"-DLTC_EASY\" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# SMALL code\nbash .ci/run.sh \"SMALL\" \"-DLTC_SMALL_CODE\" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# NOTABLES\nbash .ci/run.sh \"NOTABLES\" \"-DLTC_NO_TABLES\" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# SMALL+NOTABLES\nbash .ci/run.sh \"SMALL+NOTABLES\" \"-DLTC_SMALL_CODE -DLTC_NO_TABLES\" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# CLEANSTACK\nbash .ci/run.sh \"CLEANSTACK\" \"-DLTC_CLEAN_STACK\" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# CLEANSTACK + SMALL\nbash .ci/run.sh \"CLEANSTACK+SMALL\" \"-DLTC_SMALL_CODE -DLTC_CLEAN_STACK\" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# CLEANSTACK + NOTABLES\nbash .ci/run.sh \"CLEANSTACK+NOTABLES\" \"-DLTC_NO_TABLES -DLTC_CLEAN_STACK\" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# CLEANSTACK + NOTABLES + SMALL\nbash .ci/run.sh \"CLEANSTACK+NOTABLES+SMALL\" \"-DLTC_NO_TABLES -DLTC_CLEAN_STACK -DLTC_SMALL_CODE\" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# NO_FAST\nbash .ci/run.sh \"NO_FAST\" \"-DLTC_NO_FAST\" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# NO_FAST + NOTABLES\nbash .ci/run.sh \"NO_FAST+NOTABLES\" \"-DLTC_NO_FAST -DLTC_NO_TABLES\" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# NO_ASM\nbash .ci/run.sh \"NO_ASM\" \"-DLTC_NO_ASM\" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# NO_TIMING_RESISTANCE\nbash .ci/run.sh \"NO_TIMING_RESISTANCE\" \"-DLTC_NO_ECC_TIMING_RESISTANT -DLTC_NO_RSA_BLINDING\" \"$mk\" \"$2\" \"$3\" || exit 1\n\n# CLEANSTACK+NOTABLES+SMALL+NO_ASM+NO_TIMING_RESISTANCE\nbash .ci/run.sh \"CLEANSTACK+NOTABLES+SMALL+NO_ASM+NO_TIMING_RESISTANCE\" \"-DLTC_CLEAN_STACK -DLTC_NO_TABLES -DLTC_SMALL_CODE -DLTC_NO_ECC_TIMING_RESISTANT -DLTC_NO_RSA_BLINDING\" \"$mk\" \"$2\" \"$3\" || exit 1\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "updatemakes.sh",
          "type": "blob",
          "size": 0.357421875,
          "content": "#!/bin/bash\n\n./helper.pl --update-makefiles || exit 1\n\nmakefiles=(makefile makefile_include.mk makefile.shared makefile.unix makefile.mingw makefile.msvc sources.cmake tests/sources.cmake)\nvcproj=(libtomcrypt_VS2008.vcproj)\n\nif [ $# -eq 1 ] && [ \"$1\" == \"-c\" ]; then\n  git add ${makefiles[@]} ${vcproj[@]} doc/Doxyfile && git commit -m 'Update makefiles'\nfi\n\nexit 0\n"
        }
      ]
    }
  ]
}