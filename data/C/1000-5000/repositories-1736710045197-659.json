{
  "metadata": {
    "timestamp": 1736710045197,
    "page": 659,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gsliepen/tinc",
      "stars": 1987,
      "defaultBranch": "1.1",
      "files": [
        {
          "name": ".astylerc",
          "type": "blob",
          "size": 0.2294921875,
          "content": "--indent=tab=8\n--convert-tabs\n--exclude=subprojects\n--exclude=build\n--ignore-exclude-errors\n--add-braces\n--break-blocks\n--style=attach\n--unpad-paren\n--pad-oper\n--pad-return-type\n--align-pointer=name\n--indent-preproc-define\n--formatted\n"
        },
        {
          "name": ".builds",
          "type": "tree",
          "content": null
        },
        {
          "name": ".ci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.490234375,
          "content": "Checks: \"-*,performance-*,modernize-*,misc-*,-misc-no-recursion,bugprone-*,-bugprone-macro-parentheses,-bugprone-easily-swappable-parameters,-bugprone-reserved-identifier,-bugprone-suspicious-string-compare,-bugprone-implicit-widening-of-multiplication-result,-bugprone-not-null-terminated-result,-bugprone-branch-clone,-bugprone-sizeof-expression,clang-analyzer-*,-clang-analyzer-security.insecureAPI.*,-clang-analyzer-core.UndefinedBinaryOperatorResult\"\nHeaderFilterRegex: \".*\"\nWarningsAsErrors: \"*\"\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.646484375,
          "content": ".*\n!.github/\n!.ci/\n!.builds/\n!.gitignore\n!.astylerc\n!.clang-tidy\n*~\n*.a\n*.dirstamp\n*.o\n*.orig\n*.swp\n*.gcno\n*.gcda\n*-coverage*\n/ChangeLog\n/INSTALL\n/README\n/aclocal.m4\n/autom4te.cache\n/compile\n/config.*\n/configure\n/depcomp\n/doc/sample-config.tar.gz\n/doc/*.tex\n/doc/*.info\n/doc/*.5\n/doc/*.8\n/doc/*.html\n/doc/*.pdf\n/doc/*.t2p\n/doc/tincinclude.texi\n/install-sh\n/missing\n/src/device.c\n/src/tincd\n/src/tinc\n/src/sptps_keypair\n/src/sptps_speed\n/src/sptps_test\n/src/version_git.h\n/stamp-h1\n/systemd/*.service\n/test-driver\n/test/*.test.*\n/test/*.log\n/test/*.trs\n/test/splice\nMakefile\nMakefile.in\ncore*\nheaptrack.*\n*.tar.gz*\n/subprojects/*\n!/subprojects/*.wrap\n__pycache__\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 0.21875,
          "content": "[MASTER]\njobs=0\npersistent=yes\npy-version=3.6\nrecursive=yes\nignore=build\n\n[BASIC]\ngood-names=foo, bar, baz, f, k, ex\n\n[REPORTS]\noutput-format=colorized\n\n[DESIGN]\nmin-public-methods=0\n\n[SIMILARITIES]\nmin-similarity-lines=10\n\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.9306640625,
          "content": "Main tinc authors:\n\n- Guus Sliepen <guus@tinc-vpn.org>\n- Ivo Timmermans (inactive)\n\nSignificant code contributions from:\n\n- Brandon Black <blblack@gmail.com>\n- Etienne Dechamps <etienne@edechamps.fr>\n- Florian Forster <octo@verplant.org>\n- Grzegorz Dymarek <gregd72002@googlemail.com>\n- Julien Muchembled <jm@jmuchemb.eu>\n- Loïc Grenié <loic.grenie@gmail.com>\n- Max Rijevski <maksuf@gmail.com>\n- Michael Tokarev <mjt@tls.msk.ru>\n- Scott Lamb <slamb@slamb.org>\n- Sven-Haegar Koch <haegar@sdinet.de>\n- Timothy Redaelli <timothy@redaelli.eu>\n\nThese files are from other sources:\n\n* lib/pidfile.h and lib/pidfile.c are by Martin Schulze, taken from\n the syslog 1.3 sources.\n\n* src/bsd/tunemu.c and tunemu.h are by Friedrich Schöller\n  <friedrich.schoeller@gmail.com>\n\nAlso some of the macro files in the directory m4, and their\naccompanying files in lib, were taken from GNU fileutils.\n\nPlease see the file THANKS for a list of all contributors to tinc.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 15.109375,
          "content": "Copyright (C) 1998-2021 Ivo Timmermans, Guus Sliepen and others.\nSee the AUTHORS file for a complete list.\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 2 of the License, or (at your option) any later\nversion.\n\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "COPYING.README",
          "type": "blob",
          "size": 0.62890625,
          "content": "The following applies to tinc:\n\n> This program is released under the GPL with the additional exemption that\n> compiling, linking, and/or using OpenSSL is allowed.  You may provide binary\n> packages linked to the OpenSSL libraries, provided that all other requirements\n> of the GPL are met.\n\nThe following applies to the LZO library:\n\n> Hereby I grant a special exception to the tinc VPN project\n> (https://www.tinc-vpn.org/) to link the LZO library with the OpenSSL library\n> (https://openssl.org).\n>\n> Markus F.X.J. Oberhumer\n\nWhen tinc is compiled with the --enable-tunemu option, the resulting binary\nfalls under the GPL version 3 or later.\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 7.7109375,
          "content": "# Dependencies\n\n## Required\n\nBefore you can start compiling tinc from a fresh git clone, you have to install\nthe very latest versions of the following packages:\n\n- `meson` or `muon` (read below)\n- `ninja` or `samurai`\n- `pkgconf` or `pkg-config`\n- `GCC` or `Clang` (any version with C11 support, although older versions might\n  work)\n- `OpenSSL`\\* (1.1.0+) or `LibreSSL` or `libgcrypt` (not needed if legacy\n  protocol is disabled)\n\n### No Python?\n\nIf you're on a constrained system that doesn't have (or cannot run) Python, you\ncan try building tinc with [muon][muon], which is a pure C reimplementation of\nthe same idea. Please note that `meson` is considered to be the main way of\nbuilding tinc, and `muon` is supported on a best-effort basis.\n\n[muon]: https://git.sr.ht/~lattis/muon\n\n## Optional\n\nPlus a few optional dependencies. Support for them will be enabled if they're\npresent:\n\n- `ncurses` or `PDCurses`\n- `readline`\n- `zlib`\\*\n- `LZO`\\*\n- `LZ4`\\*\n\nIf packages marked by `*` are not available, tinc will fall back to its own\nvendored copies. This behavior can be disabled by setting the appropriate meson\noption to `disabled`.\n\nTo build `info` documentation you'll also need these packages:\n\n- `texinfo` or `makeinfo`\n\nYou might also need some additional command-line utilities to be able to run the\nintegration test suite:\n\n- `diffutils`\n- `procps`\n- `socat`\n- `netcat`\n\n\n## Linux\n\nDepending on the distribution, one of the following commands can be used to install all dependencies:\n- Arch Linux: `sudo pacman --needed --sync base-devel meson ninja pkg-config openssl ncurses readline zlib lzo lz4 texinfo diffutils procps socat openbsd-netcat`\n- Debian: `sudo apt install meson ninja-build pkg-config build-essential libssl-dev libncurses-dev libreadline-dev zlib1g-dev liblzo2-dev liblz4-dev texinfo diffutils procps socat netcat-openbsd`\n- Alpine Linux: `doas apk add meson ninja pkgconf build-base linux-headers openssl-dev ncurses-dev readline-dev zlib-dev lzo-dev lz4-dev texinfo diffutils procps-ng socat netcat-openbsd`\n- Fedora: `sudo dnf install meson ninja-build pkgconf-pkg-config @development-tools openssl-devel ncurses-devel readline-devel zlib-devel lzo-devel lz4-devel texinfo diffutils procps-ng socat netcat`\n\n## Windows\n\nYou can build tinc using either the native [Windows SDK][sdk-ms] (which comes\nwith Visual Studio), or with the Unix-like [msys2 environment][sdk-msys2].\nInstall either one of them, plus the latest version of [meson][meson-release].\n\nIf you prefer the native SDK, you might want to work on tinc (or build it) under\nVisual Studio. To do so, follow [these instructions][meson-vs].\n\nBy default, tinc produces a static Windows build, so you don't need to install\nanything in order to _run_ the compiled binaries.\n\n[sdk-ms]: https://visualstudio.com/\n[sdk-msys2]: https://msys2.org/\n[meson-release]: https://github.com/mesonbuild/meson/releases\n[meson-vs]: https://mesonbuild.com/Using-with-Visual-Studio.html\n\n# Building from source\n\n## Native\n\n### Setup\n\nTinc's functionality can vary greatly depending on how you configure it. Have a\nlook at the available options in [`meson_options.txt`](meson_options.txt), or\nrun:\n\n```sh\nmeson configure\n```\n\nFirst you need to create a build directory. If you want the default experience,\nrun:\n\n```sh\nmeson setup builddir\n```\n\nor with configuration options (your shell can probably autocomplete them on\n`Tab`, try it):\n\n```sh\nmeson setup builddir -Dprefix=/usr/local -Dbuildtype=release\n```\n\n(For autotools users: this is a rough equivalent of\n`autoreconf -fsi && ./configure --prefix=/usr/local --with-foobar`).\n\nThis creates a build directory (named `builddir`) with build type set to\n`release` (which enables compiler optimizations) and path prefix set to\n`/usr/local`.\n\nPass any additional options in the same way. Typically, this is not needed: tinc\nwill autodetect available libraries and adjust its functionality accordingly.\n\nIf you'd like to reconfigure the project after running `setup`, you can either\nremove the build directory and start anew, or use:\n\n```sh\nmeson configure builddir -Dlzo=disabled -Dlz4=enabled\n```\n\n### Compile\n\nYou then need to build the project:\n\n```sh\nmeson compile -C builddir\n```\n\n(For autotools users: this is an equivalent of `make -j$(nproc)`).\n\n### Test\n\nYou might want to run the test suite to ensure tinc is working correctly:\n\n```sh\nmeson test -C builddir\n```\n\n(For autotools users: this is an equivalent of `make -j$(nproc) test`).\n\n### Install\n\nTo install tinc to your system, run:\n\n```sh\nmeson install -C builddir\n```\n\n(For autotools users: this is an equivalent of `make install`).\n\nPlease be aware that this is not the best method of installing software because\nit will not be tracked by your operating system's package manager. You should\nuse packages provided by your operating system, or build your own (this is a\nlarge and complicated topic which is out of the scope of this document).\n\n### Uninstall\n\nTo uninstall tinc, run:\n\n```sh\nninja -C builddir uninstall\n```\n\n(For autotools users: this is an equivalent of `make uninstall`).\n\n## Cross-compilation\n\n### Linux to Linux\n\nCross-compilation is easy to do on Debian or its derivatives. Set `$HOST` to\nyour target architecture and install the cross-compilation toolchain and `-dev`\nversions of all libraries you'd like to link:\n\n```sh\nHOST=armhf\ndpkg --add-architecture $HOST\napt update\napt install -y crossbuild-essential-$HOST zlib1g-dev:$HOST …\n```\n\nIf you'd like to run tests on emulated hardware, install `qemu-user`:\n\n```sh\napt install -y qemu-user\nupdate-binfmts --enable\n```\n\nSet two environment variables: the C compiler, and pkg-config, and then proceed\nas usual:\n\n```sh\nexport CC=arm-linux-gnueabihf-gcc\nexport PKG_CONFIG=arm-linux-gnueabihf-pkg-config\nmeson setup build --cross-file /dev/null\n```\n\nOr put the names into a [cross file][cross] and pass it to meson:\n\n```sh\ncat >cross-armhf <<EOF\n[binaries]\nc = 'arm-linux-gnueabihf-gcc'\npkgconfig = 'arm-linux-gnueabihf-pkg-config'\nEOF\n\nmeson setup build --cross-file cross-armhf\n```\n\n[cross]: https://mesonbuild.com/Cross-compilation.html\n\n### Linux to Windows\n\nInstall cross-compilation toolchain:\n\n```sh\napt install -y mingw-w64 mingw-w64-tools\n```\n\ntinc will use its own vendored libraries, so you don't need to install or build\nanything manually.\n\nPrepare the [cross file][cross] to let meson know you're building binaries for a\ndifferent operating system. Take a look at the [file](.ci/cross/windows/amd64)\nused by CI for an example, or refer to examples provided by the meson project:\n[x86][mingw32],[x86_64][mingw64].\n\nThen build as usual. Because Windows binaries are built with static linkage by\ndefault, you might want to enable link-time optimization. It is much slower than\nbuilding without LTO, but produces binaries that are 80%+ smaller:\n\n```sh\nmeson setup build -Dbuildtype=release -Db_lto=true --cross-file cross-windows\nninja -C build\n```\n\n[mingw64]: https://github.com/mesonbuild/meson/blob/master/cross/linux-mingw-w64-64bit.txt\n[mingw32]: https://github.com/mesonbuild/meson/blob/master/cross/linux-mingw-w64-32bit.txt\n\n### Linux to Android\n\nFirst you need to install [Android NDK][ndk].\n\n[ndk]: https://developer.android.com/studio/projects/install-ndk\n\nPrepare a [cross file][cross]. Here's a working example for reference:\n\n```ini\n[host_machine]\nsystem     = 'android'\ncpu_family = 'arm'\ncpu        = 'aarch64'\nendian     = 'little'\n\n[binaries]\nc = 'aarch64-linux-android24-clang'\n```\n\nThen build as usual:\n\n```sh\nexport ANDROID_NDK_ROOT=/tmp/ndk/android-ndk-r24\nexport PATH=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH\nmeson setup android-aarch64 -Dcrypto=nolegacy --cross-file android\nninja -C android-aarch64\n```\n\n### macOS to iOS\n\nThe same instructions should work for iOS. Refer to this [cross file][ios] for\nan example.\n\n[ios]: https://github.com/mesonbuild/meson/blob/master/cross/iphone.txt\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 29.3935546875,
          "content": "# Version 1.1pre18             June 27 2021\n\n* Check all Address statements when making outgoing connections.\n* Make more variables safe for use in invitations.\n* Allow \"tinc --force join\" to accept all variables sent in an invitation.\n* Make sure the stop command works on Windows if tincd is running in the\n  foreground.\n* Handle DOS line endings in invitation files.\n* Double-quote node names in dump graph output.\n* Prevent large amounts of UDP probes being sent consecutively.\n* Try harder to reconnect with unreachable nodes.\n* Generate tinc-up.bat on Windows.\n* Fix a possible infinite loop when adding Subnets to a running tincd.\n* Allow a tun/tap filedescriptor to be passed through a UNIX socket.\n* Use auto-clone tun/tap devices as default on FreeBSD and DragonFlyBSD.\n\nThanks to Fabian Maurer, Ilia Pavlikhin, Maciej S. Szmigiero, Pacien\nTran-Girard, Aaron Li, Andreas Rammhold, Rosen Penev, Shengjing Zhu, Werner\nSchreiber, iczero and leptonyu for their contributions to this version of tinc.\n\n# Version 1.1pre17             October 8 2018\n\n* Prevent oracle attacks in the legacy protocol (CVE-2018-16737,\n  CVE-2018-16738).\n* Prevent a MITM from forcing a NULL cipher for UDP in the legacy protocol\n  (CVE-2018-16758).\n* AutoConnect is now enabled by default.\n* Per-node network traffic statistics are now shown in the output of \"info\" and\n  \"dump nodes\" commands.\n\nThanks to volth and Rafael Sadowski for their contributions to this version of\ntinc.\n\n# Version 1.1pre16             June 12 2018\n\n* Fixed building with support for UML sockets.\n* Documentation updates and spelling fixes.\n* Support for MSS clamping of IP-in-IP packets.\n* Fixed parsing of the -b flag.\n* Added the ability to set a firemall mark on sockets on Linux.\n* Minor improvements to the build system.\n* Added a cache of recently seen addresses of peers.\n* Add support for --runstatedir to the configure script.\n* Fixed linking with libncurses on some distributions.\n* Automatically disable PMTUDiscovery when TCPOnly is enabled.\n* Fixed removing the tinc service on Windows in some situations.\n* Fixed the TAP-Win32 device locking up after waking up from suspend.\n\nThanks to Todd C. Miller, Etienne Dechamps, Daniel Lublin,\nGjergji Ramku, Mike Sullivan and Oliver Freyermuth for their\ncontributions to this version of tinc.\n\n# Version 1.1pre15             September 2 2017\n\n* Detect when the machine is resuming from suspension or hibernation.\n* When an old PID file is found, check whether the old daemon is still alive.\n* Remember scope_id for IPv6 addresses when sending UDP packets to link-local\n  addresses.\n* Ensure compatibility with OpenSSL 1.1.\n* Only log about dropped packets with debug level 5.\n* Warn when trying to generate RSA keys less than 2048 bits.\n* Use AES256 and SHA256 as the default encryption and digest algorithms.\n* Add DeviceType = fd to support tinc on Android without requiring root.\n* Support PriorityInheritance for IPv6 packets.\n* Fixes for Solaris tun/tap support.\n* Add a configurable expiration time for invitations.\n* Store invitation data after a successful join.\n* Exit gracefully when the tun/tap device is in a bad state.\n* Add the LogLevel option.\n* AutoConnect now actively tries to heal split networks.\n\nThanks to Etienne Dechamps, Rafał Leśniak, Sean McVeigh, Vittorio Gambaletta,\nDennis Lan, Pacien Tran-Girard, Roman Savelyev, lemoer and volth for their\ncontributions to this version of tinc.\n\n# Version 1.1pre14             May 1 2016\n\n* Add tinc.service back.\n\n# Version 1.1pre13             April 30 2016\n\n* Fix BSD tun device support that was broken in 1.1pre12.\n* Speed up AutoConnect when there are many host config files present without\n  an Address.\n\n# Version 1.1pre12             April 24 2016\n\n* Added a \"--syslog\" option to force logging to syslog even if running in the\n  foreground.\n* Fixes and improvements to the DecrementTTL function.\n* Improved PMTU discovery and UDP keepalive probes.\n* More efficient relaying of UDP packets through intermediate nodes.\n* Improved compatibility with newer TAP-Win32 drivers.\n* Added support for UPnP.\n* Allow tinc to be compiled without LibreSSL or OpenSSL (this drops\n  compatibility with nodes running 1.0.x).\n* Added a \"fsck\" command to check the configuration files for problems.\n* Tinc \"start\" now checks whether the daemon really started successfully, and\n  displays error messages otherwise.\n* Added systemd service files.\n* Use the recvmmsg() function if available.\n* Support ToS/Diffserv on IPv6 connections.\n* Updated support for BSD tun/tap devices.\n* Added support for OS X utun interfaces.\n* Dropped support for Windows 2000.\n* Initial support for generating a tinc-up script from an invitation.\n* Many small fixes, documentation updates.\n\nThanks to Etienne Dechamps, Rafał Leśniak, Vittorio Gambaletta, Martin Weinelt,\nSven-Haegar Koch, Florian Klink, LunnarShadow, Dato Simó, Jo-Philipp Wich,\nJochen Voss, Nathan Stratton Treadway, Pierre Emeriaud, xentec, Samuel\nThibault and Michael Tokarev for their contributions to this version of tinc.\n\n# Version 1.1pre11             December 27 2014\n\n* Added a \"network\" command to list or switch networks.\n* Switched to Ed25519 keys and the ChaCha-Poly1305 cipher for the new protocol.\n* AutoConnect is now a boolean option, when enabled tinc always tries to keep\n  at least three meta-connections open.\n* The new protocol now uses UDP much more often.\n* Tinc \"del\" and \"get\" commands now return a non-zero exit code when they\n  don't find the requested variable.\n* Updated documentation.\n* Added a \"DeviceStandby\" option to defer running tinc-up until a working\n  connection is made, and which on Windows will also change the network\n  interface link status accordingly.\n* Tinc now tells the resolver to reload /etc/resolv.conf when it receives\n  SIGALRM.\n* Improved error messages and event loop handling on Windows.\n* LocalDiscovery now uses local address learned from other nodes, and is\n  enabled by default.\n* Added a \"BroadcastSubnet\" option to change the behavior of broadcast packets\n  in router mode.\n* Added support for dotted quad notation in IPv6 (e.g. ::1.2.3.4).\n* Improved format of printed Subnets, MAC and IPv6 addresses.\n* Added a \"--batch\" option to force the tinc CLI to run in non-interactive\n  mode.\n* Improve default Device selection on *BSD and Mac OS X.\n* Allow running tinc without RSA keys.\n\nThanks to Etienne Dechamps, Sven-Haegar Koch, William A. Kennington III,\nBaptiste Jonglez, Alexis Hildebrandt, Armin Fisslthaler, Franz Pletz, Alexander\nRied and Saverio Proto for their contributions to this version of tinc.\n\n# Version 1.1pre10             February 7 2014\n\n* Added a benchmark tool (sptps_speed) for the new protocol.\n* Fixed a crash when using Name = $HOST while $HOST is not set.\n* Use AES-256-GCM for the new protocol.\n* Updated support for Solaris.\n* Allow running tincd without a private ECDSA key present when\n  ExperimentalProtocol is not explicitly set.\n* Enable various compiler hardening flags by default.\n* Added support for a \"conf.d\" configuration directory.\n* Fix tinc-gui on Windows, also allowing it to connect to a 32-bits tincd when\n  tinc-gui is run in a 64-bits Python environment.\n* Added a \"ListenAddress\" option, which like BindToAddress adds more listening\n  address/ports, but doesn't bind to them for outgoing sockets.\n* Make invitations work better when the \"invite\" and \"join\" commands are not\n  run interactively.\n* When creating meta-connections to a node for which no Address statement is\n  specified, try to use addresses learned from other nodes.\n\nThanks to Dennis Joachimsthaler and Florent Clairambault for their contribution\nto this version of tinc.\n\n# Version 1.1pre9              September 8 2013\n\n* The UNIX socket is now created before tinc-up is called.\n* Windows users can now use any extension that is in %PATHEXT% for scripts,\n  not only .bat.\n* Outgoing sockets are bound to the address of the listening sockets again,\n  when there is no ambiguity.\n* Added invitation-created and invitation-accepted scripts.\n* Invited nodes now learn of the Mode and Broadcast settings of the VPN.\n* Joining a VPN with an invitation now also works on Windows.\n* The port number tincd is listening on is now always included in the\n  invitation URL.\n* A running tincd is now correctly informed when a new invitation has been\n  generated.\n* Several bug fixes for the new protocol.\n* Added a test suite.\n\nThanks to Etienne Dechamps for his contribution to this version of tinc.\n\n# Version 1.1pre8              August 13 2013\n\n* ExperimentalProtocol is now enabled by default.\n* Added an invitation protocol that makes it easy to invite new nodes.\n* Added the LocalDiscoveryAddress option to change the broadcast address used\n  to find local nodes.\n* Limit the rate of incoming meta-connections.\n* Many small bug fixes and code cleanups.\n\nThanks to Etienne Dechamps and Sven-Haegar Koch for their contributions to this\nversion of tinc.\n\n# Version 1.1pre7              April 22 2013\n\n* Fixed large latencies on Windows.\n* Renamed the tincctl tool to tinc.\n* Simplified changing the configuration using the tinc tool.\n* Added a full description of the ExperimentalProtocol to the manual.\n* Drop packets forwarded via TCP if they are too big (CVE-2013-1428).\n\nThanks to Martin Schobert for auditing tinc and reporting the vulnerability.\n\n# Version 1.1pre6              February 20 2013\n\n* Fixed tincd exitting immediately on Windows.\n* Detect PMTU increases.\n* Fixed crashes when using a SOCKS5 proxy.\n* Fixed control connection when using a proxy.\n\n# Version 1.1pre5              January 20 2013\n\n* Fixed long delays and possible hangs on Windows.\n* Fixed support for the tunemu device on iOS, the UML and VDE devices.\n* Small improvements to the documentation and error messages.\n* Fixed broadcast packets not reaching the whole VPN.\n* Tincctl now connects via a UNIX socket to the tincd on platforms that\n  support this.\n* The PriorityInheritance option now also works in switch mode.\n\n# Version 1.1pre4              December  5 2012\n\n* Added the \"AutoConnect\" option which will let tinc automatically select\n  which nodes to connect to.\n* Improved performance of VLAN-tagged IP traffic inside the VPN.\n* Ensured LocalDiscovery works with multiple BindToAddress statements and/or\n  IPv6-only LANs.\n* Dropped dependency on libevent.\n* Fixed Windows version not reading packets from the TAP adapter.\n\n# Version 1.1pre3              October 14 2012\n\n* New experimental protocol:\n  * Uses 521 bit ECDSA keys for authentication.\n  * Uses AES-256-CTR and HMAC-SHA256.\n  * Always provides perfect forward secrecy.\n  * Used for both meta-connections and VPN packets.\n  * VPN packets are encrypted end-to-end.\n* Many improvements to tincctl:\n  * \"config\" command shows/adds/changes configuration variables.\n  * \"export\" and \"import\" commands help exchange configuration files.\n  * \"init\" command sets up initial configuration files.\n  * \"info\" command shows details about a node, subnet or address.\n  * \"log\" command shows live log messages.\n  * Without a command it acts as a shell, with history and TAB completion.\n  * Improved starting/stopping tincd.\n  * Improved graph output.\n* When trying to directly send UDP packets to a node for which multiple\n  addresses are known, all of them are tried.\n* Many small fixes, code cleanups and documentation updates.\n\n# Version 1.1pre2              July 17 2011\n\n* .cookie files are renamed to .pid files, which are compatible with 1.0.x.\n* Experimental protocol enhancements that can be enabled with the option\n  ExperimentalProtocol = yes:\n\n  * Ephemeral ECDH key exchange will be used for both the meta protocol and\n    UDP session keys.\n  * Key exchanges are signed with ECDSA.\n  * ECDSA public keys are automatically exchanged after RSA authentication if\n    nodes do not know each other's ECDSA public key yet.\n\n# Version 1.1pre1              June 25 2011\n\n* Control interface allows control of a running tinc daemon. Used by:\n  * tincctl, a commandline utility\n  * tinc-gui, a preliminary GUI implemented in Python/wxWidgets\n* Code cleanups and reorganization.\n* Repleacable cryptography backend, currently supports OpenSSL and libgcrypt.\n* Use libevent to handle I/O events and timeouts.\n* Use splay trees instead of AVL trees to manage internal datastructures.\n\nThanks to Scott Lamb and Sven-Haegar Koch for their contributions to this\nversion of tinc.\n\n# Version 1.0.22               August 13 2013\n\n* Fixed the combination of Mode = router and DeviceType = tap.\n* The $NAME variable is now set in subnet-up/down scripts.\n* Tinc now gives an error when unknown options are given on the command line.\n* Tinc now correctly handles a space between a short command line option and\n  an optional argument.\n\nThanks to Etienne Dechamps for his contribution to this version of tinc.\n\n# Version 1.0.21               April 22 2013\n\n* Drop packets forwarded via TCP if they are too big (CVE-2013-1428).\n\nThanks to Martin Schobert for auditing tinc and reporting this vulnerability.\n\n# Version 1.0.20               March 03 2013\n\n* Use /dev/tap0 by default on FreeBSD and NetBSD when using switch mode.\n* Minor improvements and clarifications in the documentation.\n* Allow tinc to be cross-compiled with Android's NDK.\n* The discovered PMTU is now also applied to VLAN tagged traffic.\n* The LocalDiscovery option now makes use of all addresses tinc is bound to.\n* Fixed support for tunemu on iOS devices.\n* The PriorityInheritance option now also works with switch mode.\n* Fixed tinc crashing when using a SOCKS5 proxy.\n\nThanks to Mesar Hameed, Vilbrekin and Martin Schürrer for their contributions\nto this version of tinc.\n\n# Version 1.0.19               June 25 2012\n\n* Allow :: notation in IPv6 Subnets.\n* Add support for systemd style socket activation.\n* Allow environment variables to be used for the Name option.\n* Add basic support for SOCKS proxies, HTTP proxies, and proxying through an\n  external command.\n\n# Version 1.0.18               March 25 2012\n\n* Fixed IPv6 in switch mode by turning off DecrementTTL by default.\n* Allow a port number to be specified in BindToAddress, which also allows tinc\n  to listen on multiple ports.\n* Add support for multicast communication with UML/QEMU/KVM.\n\n# Version 1.0.17               March 10 2012\n\n* The DeviceType option can now be used to select dummy, raw socket, UML and\n  VDE devices without needing to recompile tinc.\n* Allow multiple BindToAddress statements.\n* Decrement TTL value of IPv4 and IPv6 packets.\n* Add LocalDiscovery option allowing tinc to detect peers that are behind the\n  same NAT.\n* Accept Subnets passed with the -o option when StrictSubnets = yes.\n* Disabling old RSA keys when generating new ones now also works properly on\n  Windows.\n\n# Version 1.0.16               July 23 2011\n\n* Fixed a performance issue with TCP communication under Windows.\n* Fixed code that, during network outages, would cause tinc to exit when it\n  thought two nodes with identical Names were on the VPN.\n\n# Version 1.0.15               June 24 2011\n\n* Improved logging to file.\n* Reduced amount of process wakeups on platforms which support pselect().\n* Fixed ProcessPriority option under Windows.\n\n Thanks to Loïc Grenié for his contribution to this version of tinc.\n\n# Version 1.0.14               May  8 2011\n\n* Fixed reading configuration files that do not end with a newline. Again.\n* Allow arbitrary configuration options being specified on the command line.\n* Allow all options in both tinc.conf and the local host config file.\n* Configurable replay window, UDP send and receive buffers for performance tuning.\n* Try harder to get UDP communication back after falling back to TCP.\n* Initial support for attaching tinc to a VDE switch.\n* DragonFly BSD support.\n* Allow linking with OpenSSL 1.0.0.\n\nThanks to Brandon Black, Julien Muchembled, Michael Tokarev, Rumko and Timothy\nRedaelli for their contributions to this version of tinc.\n\n# Version 1.0.13               Apr 11 2010\n\n* Allow building tinc without LZO and/or Zlib.\n* Clamp MSS of TCP packets in both directions.\n* Experimental StrictSubnets, Forwarding and DirectOnly options,\n  giving more control over information and packets received from/sent to other\n  nodes.\n* Ensure tinc never sends symbolic names for ports over the wire.\n\n# Version 1.0.12               Feb  3 2010\n\n* Really allow fast roaming of hosts to other nodes in a switched VPN.\n* Fixes missing or incorrect environment variables when calling host-up/down\n  and subnet-up/down scripts in some cases.\n* Allow port to be specified in Address statements.\n* Clamp MSS of TCP packets to the discovered path MTU.\n* Let two nodes behind NAT learn each others current UDP address and port via\n  a third node, potentially allowing direct communications in a similar way to\n  STUN.\n\n# Version 1.0.11               Nov  1 2009\n\n* Fixed potential crash when the HUP signal is sent.\n* Fixes handling of weighted Subnets in switch and hub modes, preventing\n  unnecessary broadcasts.\n* Works around a MinGW bug that caused packets to Windows nodes to always be\n  sent via TCP.\n* Improvements to the PMTU discovery code, especially on Windows.\n* Use UDP again in certain cases where 1.0.10 was too conservative and fell\n  back to TCP unnecessarily.\n* Allow fast roaming of hosts to other nodes in a switched VPN.\n\n# Version 1.0.10               Oct 18 2009\n\n* Fixed potential crashes during shutdown and (in rare conditions) when other\n  nodes disconnected from the VPN.\n* Improved NAT handling: tinc now copes with mangled port numbers, and will\n  automatically fall back to TCP if direct UDP connection between nodes is not\n  possible. The TCPOnly option should not have to be used anymore.\n* Allow configuration files with CRLF line endings to be read on UNIX.\n* Disable old RSA keys when generating new ones, and raise the default size of\n  new RSA keys to 2048 bits.\n* Many fixes in the path MTU discovery code, especially when Compression is\n  being used.\n* Tinc can now drop privileges and/or chroot itself.\n* The TunnelServer code now just ignores information from clients instead of\n  disconnecting them.\n* Improved performance on Windows by using the new ProcessPriority option and\n  by making the handling of packets received from the TAP-Win32 adapter more\n  efficient.\n* Code cleanups: tinc now follows the C99 standard, copyright headers have\n  been updated to include patch authors, checkpoint tracing and localisation\n  features have been removed.\n* Support for (jailbroken) iPhone and iPod Touch has been added.\n\nThanks to Florian Forster, Grzegorz Dymarek and especially Michael Tokarev for\ntheir contributions to this version of tinc.\n\n# Version 1.0.9                Dec 26 2008\n\n* Fixed tinc as a service under Windows 2003.\n* Fixed reading configuration files that do not end with a newline.\n* Fixed crashes in situations where hostnames could not be resolved or hosts\n  would disconnect at the same time as session keys were exchanged.\n* Improved default settings of tun and tap devices on BSD platforms.\n* Make IPv6 sockets bind only to IPv6 on Linux.\n* Enable path MTU discovery by default.\n* Fixed a memory leak that occurred when connections were closed.\n\nThanks to Max Rijevski for his contributions to this version of tinc.\n\n# Version 1.0.8                May 16 2007\n\n* Fixed some memory and resource leaks.\n* Made network sockets non-blocking under Windows.\n\nThanks to Scott Lamb and \"dnk\" for their contributions to this version of tinc.\n\n# Version 1.0.7                Jan  5 2007\n\n* Fixed a bug that caused slow network speeds on Windows.\n* Fixed a bug that caused tinc unable to write packets to the tun device on\n  OpenBSD.\n\n# Version 1.0.6                Dec 18 2006\n\n* More flexible detection of the LZO libraries when compiling.\n* Fixed a bug where broadcasts in switch and hub modes sometimes would not\n  work anymore when part of the VPN had become disconnected from the rest.\n\n# Version 1.0.5                Nov 14 2006\n\n* Lots of small fixes.\n* Broadcast packets no longer grow in size with each hop. This should\n  fix switch mode (again).\n* Generic host-up and host-down scripts.\n* Optionally dump graph in graphviz format to a file or a script.\n* Support LZO 2.0 and later.\n\nThanks to Scott Lamb for his contributions to this version of tinc.\n\n# Version 1.0.4                May  4 2005\n\n* Fix switch and hub modes.\n* Optionally start scripts when a Subnet becomes (un)reachable.\n\n# Version 1.0.3                Nov 11 2004\n\n* Show error message when failing to write a PID file.\n* Ignore spaces at end of lines in config files.\n* Fix handling of late packets.\n* Unify BSD tun/tap device handling. This allows IPv6 on tun devices and\n  anything on tap devices as long as the underlying OS supports it.\n* Handle IPv6 on Solaris tun devices.\n* Allow tinc to work properly under Windows XP SP2.\n* Allow VLAN tagged Ethernet frames in switch and hub mode.\n* Experimental PMTUDiscovery, TunnelServer and BlockingTCP options.\n\n# Version 1.0.2                Nov  8 2003\n\n* Fix address and hostname resolving under Windows.\n* Remove warnings about non-existing scripts and unsupported address families.\n* Use the event logger under Windows.\n* Fix quoting of filenames and command line arguments under Windows.\n* Strict checks for length incoming network packets and return values of\n  cryptographic functions,\n* Fix a bug in metadata handling that made the tinc daemon abort.\n\n# Version 1.0.1                Aug 14 2003\n\n* Allow empty lines in config files.\n* Fix handling of spaces and backslashes in filenames under native Windows.\n* Allow scripts to be executed under native Windows.\n* Update documentation, make it less Linux specific.\n\n# Version 1.0                  Aug  4 2003\n\n* Lots of small bugfixes and code cleanups.\n* Throughput doubled and latency reduced.\n* Added support for LZO compression.\n* No need to set MAC address or disable ARP anymore.\n* Added support for Windows 2000 and XP, both natively and in a Cygwin\n  environment.\n\n# Version 1.0pre8              Sep 16 2002\n\n* More fixes for subnets with prefixlength undivisible by 8.\n* Added support for NetBSD and MacOS/X.\n* Switched from undirected graphs to directed graphs to avoid certain race\n  conditions and improve scalability.\n* Generalized broadcasting and forwarding of protocol messages.\n* Cleanup of source code.\n\n# Version 1.0pre7              Apr  7 2002\n\n* Don't do blocking read()s when getting a signal.\n* Remove RSA key checking code, since it sometimes thinks perfectly good RSA\n  keys are bad.\n* Fix handling of subnets when prefixlength isn't divisible by 8.\n\n# Version 1.0pre6              Mar 27 2002\n\n* Improvement of redundant links:\n  * Non-blocking connects.\n  * Protocol broadcast messages can no longer go into an infinite loop.\n  * Graph algorithm updated to look harder for direct connections.\n* Good support for routing IPv6 packets over the VPN. Works on Linux,\n  FreeBSD, possibly OpenBSD but not on Solaris.\n* Support for tunnels over IPv6 networks. Works on all supported\n  operating systems.\n* Optional compression of UDP connections using zlib.\n* Optionally let UDP connections inherit TOS field of tunneled packets.\n* Optionally start scripts when certain hosts become (un)reachable.\n\n# Version 1.0pre5              Feb  9 2002\n\n* Security enhancements:\n  * Added sequence number and optional message authentication code to\n    the packets.\n  * Configurable encryption cipher and digest algorithms.\n* More robust handling of dis- and reconnects.\n* Added a \"switch\" and a \"hub\" mode to allow bridging setups.\n* Preliminary support for routing of IPv6 packets.\n* Supports Linux, FreeBSD, OpenBSD and Solaris.\n\n# Version 1.0pre4              Jan 17 2001\n\n* Updated documentation; the documentation now reflects the\n  configuration as it is.\n* Some internal changes to make tinc scale better for large\n  networks, such as using AVL trees instead of linked lists for the\n  connection list.\n* RSA keys can be stored in separate files if needed.  See the\n  documentation for more information.\n* Tinc has now been reported to run on Linux PowerPC and FreeBSD x86.\n\n# Version 1.0pre3              Oct 31 2000\n\n* The protocol has been redesigned, and although some details are\n  still under discussion, this is secure.  Care has been taken to\n  resist most, if not all, attacks.\n* Unfortunately this protocol is not compatible with earlier versions,\n  nor are earlier versions compatible with this version.  Because the\n  older protocol has huge security flaws, we feel that not\n  implementing backwards compatibility is justified.\n* Some data about the protocol:\n  * It uses public/private RSA keys for authentication (this is the\n    actual fix for the security hole).\n  * All cryptographic functions have been taken out of tinc, instead\n    it uses the OpenSSL library functions.\n  * Offers support for multiple subnets per tinc daemon.\n* New is also the support for the universal tun/tap device.  This\n  means better portability to FreeBSD and Solaris.\n* Tinc is tested to compile on Solaris, Linux x86, Linux alpha.\n* Tinc now uses the OpenSSL library for cryptographic operations.\n  More information on getting and installing OpenSSL is in the manual.\n  This also means that the GMP library is no longer required.\n* Further, thanks to Enrique Zanardi, we have Spanish messages; Matias\n  Carrasco provided us with a Spanish translation of the manual.\n\n# Version 1.0pre2              May 31 2000\n\n* This version has been internationalized; and a Dutch translation has\n  been included.\n* Two configuration variables have been added:\n  * VpnMask - the IP network mask for the entire VPN, not just our\n    subnet (as given by MyVirtualIP).  The Redhat and Debian packages\n    use this variable in their system startup scripts, but it is\n    ignored by tinc.\n  * Hostnames - if set to `yes', look up the names of IP addresses\n    trying to connect to us.  Default set to `no', to prevent lockups\n    during lookups.\n* The system startup scripts for Debian and Redhat use\n  /etc/tinc/nets.boot to find out which networks need to be started\n  during system boot.\n* Fixes to prevent denial of service attacks by sending random data\n  after connecting (and even when the connection has been established),\n  either random garbage or just nonsensical protocol fields.\n* Tinc will retry to connect upon startup, does not quit if it doesn't\n  work the first time.\n* Hosts that are disconnected implicitly if we lose a connection get\n  deleted from the internal list, to prevent hogging each other with\n  add and delete requests when the connection is restored.\n\n# Version 1.0pre1              May 12 2000\n\n* New meta-protocol\n* Various other bugfixes\n* Documentation updates\n\n# Version 0.3.3                Feb  9 2000\n\n* Fixed bug that made tinc stop working with latest kernels\n* Updated the manual\n\n# Version 0.3.2                Nov 12 1999\n\n* No more `Invalid filedescriptor' when working with multiple\n  connections.\n* Forward unknown packets to uplink.\n\n# Version 0.3.1                Oct 20 1999\n\n* Fixed a bug where tinc would exit without a trace.\n\n# Version 0.3                  Aug 20 1999\n\n* Pings now work immediately.\n* All packet sizes get transmitted correctly.\n\n# Version 0.2.26               Aug 15 1999\n\n* Fixed some remaining bugs.\n* --sysconfdir works with configure.\n* Last version before 0.3.\n\n# Version 0.2.25               Aug  8 1999\n\n* Improved stability, going towards 0.3 now.\n\n# Version 0.2.24               Aug  7 1999\n\n* Added key aging, there's a new config variable, KeyExpire.\n* Updated man and info pages.\n\n# Version 0.2.23               Aug  5 1999\n\n* All known bugs fixed, this is a candidate for 0.3.\n\n# Version 0.2.22               Apr 11 1999\n\n* Multiconnection thing is now working nearly perfect :)\n\n# Version 0.2.21               Apr 10 1999\n\n* You shouldn't notice a thing, but a lot has changed wrt key\nmanagement - except that it refuses to talk to versions < 0.2.20\n\n# Version 0.2.19               Apr  3 1999\n\n* Don't install a libcipher.so.\n\n# Version 0.2.18               Apr  3 1999\n\n* Blowfish library dynamically loaded upon execution.\n* Included Eric Young's IDEA library.\n\n# Version 0.2.17               Apr  1 1999\n\n* Tincd now re-executes itself in case of a segmentation fault.\n\n# Version 0.2.16               Apr  1 1999\n\n* Wrote tincd.conf(5) man page, which still needs a lot of work.\n* Config file now accepts and tolerates spaces, and any integer base\n  for integer variables, and better error reporting. See\n  doc/tincd.conf.sample for an example.\n\n# Version 0.2.15               Mar 29 1999\n\n* Fixed bugs.\n\n# Version 0.2.14               Feb 10 1999\n\n* Added --timeout flag and PingTimeout configuration.\n* Did some first syslog cleanup work.\n\n# Version 0.2.13               Jan 23 1999\n\n* Bugfixes.\n\n# Version 0.2.12               Jan 23 1999\n\n* Fixed nauseating bug so that it would crash whenever a connection\n  got lost.\n\n# Version 0.2.11               Jan 22 1999\n\n* Framework for multiple connections has been done.\n* Simple manpage for tincd.\n\n# Version 0.2.10               Jan 18 1999\n\n* Passphrase support added.\n\n# Version 0.2.9                Jan 13 1999\n\n* Bugs fixed.\n\n# Version 0.2.8                Jan 11 1999\n\n* A reworked protocol version.\n* A ping/pong system.\n* More reliable networking code.\n* Automatic reconnection.\n* Still does not work with more than one connection :)\n* Strips MAC addresses before sending, so there's less overhead, and\n  less redundancy.\n\n# Version 0.2.7                Jan  3 1999\n\n* Several updates to make extending more easy.\n\n# Version 0.2.6                Dec 20 1998\n\n* Point-to-Point connections have been established, including\n  Blowfish encryption and a secret key-exchange.\n\n# Version 0.2.5                Dec 16 1998\n\n* Project renamed to tinc, in honour of TINC.\n\n# Version 0.2.4                Dec 16 1998\n\n* Now it really does ;)\n\n# Version 0.2.3                Nov 24 1998\n\n* It sort of works now.\n\n# Version 0.2.2                Nov 20 1998\n\n* Uses GNU gmp.\n\n# Version 0.2.1                Nov 14 1998\n\n* Bare version.\n"
        },
        {
          "name": "QUICKSTART.md",
          "type": "blob",
          "size": 7.2568359375,
          "content": "# Creating a new VPN\n\nIf you are just starting to create a VPN, first consider what IP addresses you\nwant to use on the VPN. There are several blocks of IP addresses reserved for\n[private networks](https://en.wikipedia.org/wiki/Private_network):\n\n- 192.168.0.0/16\n- 172.16.0.0/12\n- 10.0.0.0/8\n- fd00::/8\n\nMake sure the [IP range](https://en.wikipedia.org/wiki/CIDR) you are choosing is\nlarge enough for all the nodes you want to add to the VPN, and also consider\nthat some of these private address ranges might also be used on local area\nnetworks, so check in advance that you won't conflict with any range that is\nalready in use by any of the participants. When in doubt, just pick one and try\nit out. For this quickstart guide, we will use 172.16.0.0/16 as the range of the\nVPN.\n\nAlso think of a name for your whole VPN. This will be used as the \"netname\"\nparameter for tinc, and on Linux this will then also automatically be used as\nthe name for the virtual network interface. We will use \"myvpn\" as the name in\nthe examples below.\n\n# Create your first node\n\nThink of a name for your first node. We will call it \"first\" in the examples\nbelow. The name must be unique for each node in the same VPN, and may only\ncontain letters, numbers and underscores. Apart from that you can choose\nwhatever you want. Now we can create the first node:\n\n```sh\nsudo tinc -n myvpn init first\n```\n\nThis creates the initial configuration for the node, but has not started tinc\nyet. Before we do that, two things have to be done first. We have to tell tinc\nwhich part of the IP range of the VPN belongs to *this* particular node. We will\nuse 172.168.1.0/24 for this example. We then have to give this command:\n\n```sh\nsudo tinc -n myvpn add Subnet 172.168.1.0/24\n```\n\nHowever, tinc itself will not actually configure the virtual network interface\nfor you. You have to create a script named `tinc-up` that does this. To do this,\nrun the command:\n\n```sh\nsudo tinc -n myvpn edit tinc-up\n```\n\nThis should start an editor. When you ran the `init` command, a dummy script was\nalready created. Edit it to make sure it looks like this:\n\n```sh\n#!/bin/sh\nifconfig $INTERFACE 172.168.1.1/16\n```\n\nNote that the literal text `$INTERFACE` should be in the script, tinc will make\nsure that environment variable is set correctly when the script is run. The\naddress should be that of the node itself, but the netmask or prefix length (the\n`/16` in this case) you provide must be that of the *whole* VPN. This tells the\nkernel that everything for the VPN's IP range should go to tinc's virtual\nnetwork interface, from then on tinc will handle it and route it to the right\nnode based on the `Subnet`s that you configured.\n\nTo start tinc run:\n\n```sh\nsudo tinc -n myvpn start\n```\n\nThis will start running tinc in the background. You can also run it in the\nforeground with debugging enabled using this command:\n\n```sh\nsudo tinc -n myvpn start -d5 -D\n```\n\nThis might be helpful in the beginning to debug any issues you have setting up\nthe VPN.\n\n# Create your second node\n\nThere are two ways to add new nodes to the VPN.\n\n## Using import/export of host config files\n\nOne way to do it is to create a second node just like you created the first\nnode. Just make sure it has a different name (let's call it \"second\"), and that\nit gets a different IP range for itself (let's use 172.168.2.0/24). So on the\nsecond node run:\n\n```sh\nsudo tinc -n myvpn init second\nsudo tinc -n myvpn add Subnet 172.168.2.0/24\nsudo tinc -n myvpn edit tinc-up\n```\n\nAnd make sure the second node's tinc up contains:\n\n```sh\n#!/bin/sh\nifconfig $INTERFACE 172.168.2.1/16\n```\n\nAnd `start` the second node. After you have done that, you have to make sure\nthat the two nodes can find each other. To do this, at least one node should\nhave a public IP address. Let's assume the first node has public IP address\n93.184.216.34. You would then give this command on the first node:\n\n```sh\nsudo tinc -n myvpn add Address 93.184.216.34\n```\n\nNote that if you have a public domain name, you can also use that domain name\ninstead of a numeric IP address. Now run the following on the first node:\n\n```sh\nsudo tinc -n myvpn export\n```\n\nThis outputs a small amount of text that contains the node's public keys and the\npublic address. On the second node, run this:\n\n```sh\nsudo tinc -n myvpn import\n```\n\nAnd copy&paste the output from the first node, then press ctrl-D on a new line.\nIf done correctly it should tell you that it has imported the host configuration\nfile. Now you have to do the same but in the other direction: use the `export`\ncommand on the second node, and then use `import` on the first node. Now that\nboth nodes know each other, they should be able to connect. This should happen\nautomatically after a while.\n\nNote that instead of copy&pasting the text manually, you could also redirect it\nto a text file, send it via email, pipe it through an SSH connection, or use any\nother way to exchange the host config files. For more information, see the\n[manual](https://www.tinc-vpn.org/documentation-1.1/How-to-configure.html).\n\n## Using invitations\n\nAnother way to add more nodes is to have an existing node generate an\n[invitation](https://www.tinc-vpn.org/documentation-1.1/Invitations.html) for\nanother node. A prerequisite is that the node generating the invitation should\nhave a public IP address to the invitee will be able to connect to it. Again,\nlet's assume the first node has public IP address 93.184.216.34:\n\n```sh\nsudo tinc -n myvpn add Address 93.184.216.34\n```\n\nThen on the first node, generate in invitation for the second node:\n\n```sh\nsudo tinc -n myvpn invite second\n```\n\nThis should generate one line of text that looks like an URL, like for example:\n\n```\n93.184.216.34:655/R4BU9VMzdY4S_EIuAhW1-B0XV50HqooyEv6EUfl4k6Z9_zrq\n```\n\nOn the second node, don't using `init` to create the initial configuration.\nInstead, run the following command:\n\n```sh\nsudo tinc -n myvpn join 93.184.216.34:655/R4BU9VMzdY4S_EIuAhW1-B0XV50HqooyEv6EUfl4k6Z9_zrq\n```\n\nIt will then initialize itself and make a connection to the first node and\nexchange configuration files automatically. You still have to add the `Subnet`\nand edit `tinc-up` afterwards on the second node (as described in the section\nabove), and use the `start` command to start tinc.\n\nInvitations are easier to use, and relatively secure. Once used, the invitation\nis no longer valid. However, be aware that anyone holding an unused invitation\ncan use it to join a VPN, so make sure you do not make invitation URLs public.\n\n# Checking that things are working\n\nAfter you have set up two nodes, you should be able to ping `172.16.1.1`. If it\ndoesn't work, there can be multiple reasons. Make sure you don't have any\nfirewall rules blocking tinc's port, and that at least one node has a public IP\naddress that is accepting incoming connections. You can further investigate by\nasking tinc the status of a given node. So for example, on the first node, you\ncan run:\n\n```sh\nsudo tinc -n myvpn info second\n```\n\nYou can also dump a list of connections:\n\n```sh\nsudo tinc -n myvpn dump connections\n```\n\nOr `dump nodes` to get a list of known nodes, `dump subnets` to see all subnets.\nIf you ran tinc in the background, you can get still get log output like so:\n\n```sh\nsudo tinc -n myvpn log 5\n```\n\nFinally, if the problem is not with tinc, using `tcpdump` to look at the traffic\non your real and virtual interfaces might help determine what the problem is.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.3779296875,
          "content": "# About tinc\n\nTinc is a peer-to-peer VPN daemon that supports VPNs with an arbitrary number of\nnodes. Instead of configuring tunnels, you give tinc the location and public key\nof a few nodes in the VPN. After making the initial connections to those nodes,\ntinc will learn about all other nodes on the VPN, and will make connections\nautomatically. When direct connections are not possible, data will be forwarded\nby intermediate nodes.\n\nTinc can operate in several routing modes. In the default mode, \"router\", every\nnode is associated with one or more IPv4 and/or IPv6 Subnets. The other two\nmodes, \"switch\" and \"hub\", let the tinc daemons work together to form a virtual\nEthernet network switch or hub.\n\n## This is a pre-release\n\nPlease note that this is NOT a stable release. Until version 1.1.0 is released,\nplease use one of the 1.0.x versions if you need a stable version of tinc.\n\nAlthough tinc 1.1 will be protocol compatible with tinc 1.0.x, the functionality\nof the tinc program may still change, and the control socket protocol is not\nfixed yet.\n\n# Documentation\n\nSee [QUICKSTART.md](QUICKSTART.md) for a quick guide to get tinc up and running.\nRead the [manual](https://www.tinc-vpn.org/documentation-1.1/) for more detailed\ninformation.\n\n# Getting tinc\n\n## From your distribution\n\nMany operating system distributions have packaged tinc. Check your package\nmanager first.\n\n## Nightly builds\n\nYou can download pre-built binary packages for multiple Linux distributions and\nWindows here:\n\n- [development version](https://github.com/gsliepen/tinc/releases/tag/latest)\n- [latest release](https://github.com/gsliepen/tinc/releases/latest)\n\nNote that these packages have not been heavily tested and are not officially\nsupported by the project. Use them at your own risk. You are advised to use tinc\nshipped by your distribution, or build from source.\n\n## Build it from source\n\nSee the file [INSTALL.md](INSTALL.md) for instructions of how to build and\ninstall tinc from source.\n\n# Copyright\n\ntinc is Copyright © 1998-2022 Ivo Timmermans, Guus Sliepen <guus@tinc-vpn.org>,\nand others.\n\nFor a complete list of authors see the [AUTHORS](AUTHORS) file.\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 2 of the License, or (at your option) any later\nversion. See the file COPYING for more details.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.98046875,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nIf you have found a security vulnerability in tinc, please email\nguus@tinc-vpn.org directly. You can encrypt the email using PGP if desired. We\nwill try to respond within 48 hours. If there is no response, try to contact us\nvia alternate means listed at https://www.tinc-vpn.org/contact/.\n\n## Disclosure Policy\n\nWe greatly prefer to use the responsible disclosure model. After we have been\ncontacted about a potential vulnerability, we will do the following:\n\n- Confirm the problem and determine the affected versions.\n- Register a CVE number.\n- Prepare a fix for all affected versions of tinc.\n- Coordinate a release of the fix with Linux and BSD distributions.\n- Disclose the vulneratbility after the fix has been released and any agreed\n  upon embargo period has expired.\n\n## Supported Versions\n\nCurrently we support the 1.0.x and 1.1.x branches of tinc.\n\n| Version | Supported |\n|---------|-----------|\n| 1.1.x   | yes       |\n| 1.0.x   | yes       |\n"
        },
        {
          "name": "THANKS",
          "type": "blob",
          "size": 2.4033203125,
          "content": "We would like to thank the following people for their contributions to tinc:\n\n* Aaron Li\n* Alexander Reil and Gemeinde Berg\n* Alexander Ried\n* Alexis Hildebrandt\n* Allesandro Gatti\n* Andreas Rammhold\n* Andreas van Cranenburgh\n* Andrew Hahn\n* Anthony G. Basile\n* Armijn Hemel\n* Armin Fisslthaler\n* Aron Cowan\n* Ashish Bajaj\n* Baptiste Jonglez\n* Borg\n* Brandon Black\n* Cheng LI\n* Cris van Pelt\n* Darius Jahandarie\n* Dato Simó\n* David Pflug\n* Delf Eldkraft\n* Dennis Joachimsthaler\n* dnk\n* Élie Bouttier\n* Enrique Zanardi\n* Erik Tews\n* Etienne Dechamps\n* Fabian Maurer\n* Florent Clairambault\n* Florian Forster\n* Florian Klink\n* Florian Weik\n* Flynn Marquardt\n* Franz Pletz\n* Fufu Fang\n* Gary Kessler and Claudia Gonzalez\n* Grzegorz Dymarek\n* Gusariev Oleksandr\n* Hans Bayle\n* Harvest\n* Huai An Hsu\n* iczero\n* Ilia Pavlikhin\n* Ivan Mirić\n* Ivo Smits\n* Ivo van Dong\n* James Cook\n* James MacLean\n* Jamie Briggs\n* Jason Harper\n* Jason Livesay\n* Jasper Krijgsman\n* Jelle de Jong\n* Jeroen Domburg\n* Jeroen Ubbink\n* Jerome Etienne\n* Jiang Sheng\n* Jochen Voss\n* Jo-Philipp Wich\n* Julien Muchembled\n* Kirill Isakov\n* Lavrans Laading\n* leptonyu\n* Loïc Dachary\n* Loïc Grenié\n* Lubomír Bulej\n* luckyhacky\n* LunarShaddow\n* Maciej S. Szmigiero\n* Mads Kiilerich\n* Marc A. Lehmann\n* Marco Oggioni\n* Mark Glines\n* Mark Petryk\n* Markus Goetz\n* Martin Kihlgren\n* Martin Schobert\n* Martin Schürrer\n* Martin Weinelt\n* Matias Carrasco\n* Mathew Heard\n* Max Rijevski\n* Menno Smits\n* Mesar Hameed\n* Michael Tokarev\n* Michael Yonli\n* Miles Nordin\n* Murat Donmez\n* Nathan Stratton Treadway\n* Nick Hibma\n* Nick Patavalis\n* Niklas Hambüchen\n* Pacien Tran-Girard\n* Patrick Helms\n* Paul Littlefield\n* Philipp Babel\n* Pierre Emeriaud\n* Pierre-Olivier Mercier\n* Rafael Sadowski\n* Rafał Leśniak\n* René Rüthlein\n* Rhosyn Celyn\n* Robert van der Meulen\n* Robert Waniek\n* Rosen Penev\n* Rumko\n* Ryan Miller\n* Sam Bryan\n* Samuel Thibault\n* Saverio Proto\n* Scott Lamb\n* Shengjing Zhu\n* Steffan Karger\n* Stig Fagrell\n* Sven-Haegar Koch\n* Teemu Kiviniemi\n* Thomas Tsiakalakis\n* Timothy Redaelli\n* Tomasz Fortuna\n* Tomislav Čohar\n* Tommy Arnkværn\n* Tonnerre Lombard\n* Ulrich Seifert\n* Vil Brekin\n* Vincent Laurent\n* Vittorio Gambaletta\n* Volker Augustin\n* Wendy Willard\n* Werner Schreiber\n* Wessel Dankers\n* William A. Kennington III\n* William McArthur\n* Wouter van Heyst\n* xentec\n* 戴 鸣\n\nAnd everyone we forgot (if we did, please let us know). Thank you!\n\n---\nIvo Timmermans,\nGuus Sliepen.\n"
        },
        {
          "name": "bash_completion.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "lint.py",
          "type": "blob",
          "size": 1.91015625,
          "content": "#!/usr/bin/env python3\n\n\"\"\"Run linters on project code. Add --fix to autofix files with linters that support it.\"\"\"\n\nimport sys\nimport subprocess as subp\nfrom glob import glob\nfrom os import path, environ, chdir\n\nDRY = \"--fix\" not in sys.argv or environ.get(\"CI\")\nHEADER = \"#\" * 24\n\nif DRY:\n    MSG = \"\"\"\nYou're running linters in non-destructive readonly mode.\nSome of them support automated fixes (like reformatting code).\nTo apply them, run `lint.py --fix` or `ninja -C build reformat`.\n\"\"\"\n    print(MSG, file=sys.stderr)\n\nsource_root = path.dirname(path.realpath(__file__))\nsource_root = environ.get(\"MESON_SOURCE_ROOT\", source_root)\nchdir(source_root)\n\n# It's best not to use globs that cover everything in the project — if integration\n# tests are run with a large --repeat value, test working directory can reach\n# enormous sizes, and linters either get very slow, or start crashing.\nlinters = (\n    [\n        \"astyle\",\n        \"--recursive\",\n        \"--options=.astylerc\",\n        \"--dry-run\" if DRY else \"--formatted\",\n        \"./*.c\",\n        \"./*.h\",\n    ],\n    [\"shfmt\", \"-d\" if DRY else \"-w\", \"-i\", \"2\", \"-s\", \".\"],\n    [\"black\", \"--check\" if DRY else \".\", \".\"],\n    [\"pylint\", \".\"],\n    [\"mypy\", \"--exclude\", \"build\", \".\"],\n    [\"shellcheck\", \"-x\", *glob(\".ci/**/*.sh\", recursive=True)],\n    [\"markflow\", \"--line-length\", \"80\", \"--check\" if DRY else \"--verbose\", \".\", \".ci\"],\n)\n\nfailed: bool = False\n\nfor cmd in linters:\n    exe = cmd[0]\n    print(f\"{HEADER} Running linter '{exe}' {HEADER}\")\n\n    try:\n        res = subp.run(\n            cmd,\n            check=False,\n            stdout=subp.PIPE,\n            encoding=\"utf-8\",\n        )\n        failed = (\n            failed\n            or bool(res.returncode)\n            or (exe == \"astyle\" and \"Formatted  \" in res.stdout)\n        )\n        print(res.stdout)\n    except FileNotFoundError as e:\n        print(f\"Warning: linter {exe} is missing\", file=sys.stderr)\n\nsys.exit(int(failed))\n"
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 4.328125,
          "content": "project('tinc', 'c',\n  version: '1.1pre18',\n  license: 'GPL-2.0-or-later',\n  meson_version: '>=0.51',\n  default_options: [\n    'c_std=c11',\n    'warning_level=3',\n    'buildtype=debugoptimized',\n  ],\n)\n\ndir_run_state = get_option('runstatedir')\nopt_crypto = get_option('crypto')\nopt_curses = get_option('curses')\nopt_debug = get_option('debug')\nopt_docs = get_option('docs')\nopt_harden = get_option('hardening')\nopt_jumbograms = get_option('jumbograms')\nopt_lz4 = get_option('lz4')\nopt_lzo = get_option('lzo')\nopt_miniupnpc = get_option('miniupnpc')\nopt_readline = get_option('readline')\nopt_sandbox = get_option('sandbox')\nopt_static = get_option('static')\nopt_systemd = get_option('systemd')\nopt_tests = get_option('tests')\nopt_tunemu = get_option('tunemu')\nopt_uml = get_option('uml')\nopt_vde = get_option('vde')\nopt_zlib = get_option('zlib')\n\nmeson_version = meson.version()\n\ncc = meson.get_compiler('c')\nos_name = host_machine.system()\ncpu_family = host_machine.cpu_family()\ncc_name = cc.get_id()\n\npython = find_program('python3', required: false)\nif python.found()\n  if meson_version.version_compare('>=0.55')\n    python_path = python.full_path()\n  else\n    python_path = python.path()\n  endif\nelse\n  python_path = ''\nendif\n\ncc_defs = ['-D_GNU_SOURCE']\nif os_name == 'sunos'\n  cc_defs += '-D__EXTENSIONS__'\nendif\n\ncc_flags = [cc_defs]\nld_flags = []\n\nif cc_name != 'msvc'\n  cc_flags += [\n    '-Wbad-function-cast',\n    '-Wduplicated-branches',\n    '-Wduplicated-cond',\n    '-Wformat-overflow=2',\n    '-Wformat-truncation=1', # 2 prints too much noise\n    '-Wformat=2',\n    '-Wlogical-op',\n    '-Wmissing-declarations',\n    '-Wmissing-noreturn',\n    '-Wmissing-prototypes',\n    '-Wno-embedded-directive',\n    '-Wold-style-definition',\n    '-Wredundant-decls',\n    '-Wreturn-type',\n    '-Wstrict-prototypes',\n    '-Wswitch-enum',\n    '-Wtrampolines', # may require executable stack which is disabled\n    '-Wvla', # VLAs are not supported by MSVC\n    '-Wwrite-strings',\n    '-fdiagnostics-show-option',\n    '-fno-strict-overflow',\n    '-fstrict-aliasing',\n  ]\nendif\n\nif opt_static.auto()\n  static = os_name == 'windows'\nelse\n  static = opt_static.enabled()\nendif\n\nif static and cc_name != 'msvc'\n  ld_flags += '-static'\nendif\n\nif opt_harden\n  if cc_name == 'msvc'\n    # Most of these flags are already ON by default in the latest version of MSVC.\n    # Add anyway in case someone is building using an old toolchain.\n    cc_flags += ['/guard:cf', '/GS']\n    ld_flags += [\n      '/guard:cf',\n      '/NXCOMPAT',\n      '/DYNAMICBASE',\n      cpu_family.endswith('64') ? '/HIGHENTROPYVA' : '/SAFESEH',\n    ]\n  else\n    cc_flags += [\n      '-D_FORTIFY_SOURCE=2',\n      '-fcf-protection=full',\n      '-fstack-protector-strong',\n    ]\n    ld_flags += ['-Wl,-z,relro', '-Wl,-z,now', '-Wl,-z,noexecstack']\n    if os_name == 'windows'\n      ld_flags += ['-Wl,--dynamicbase', '-Wl,--nxcompat']\n    else\n      # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458\n      cc_flags += '-fstack-clash-protection'\n    endif\n  endif\nendif\n\ncc_flags = cc.get_supported_arguments(cc_flags)\nld_flags = cc.get_supported_link_arguments(ld_flags)\n\nadd_project_arguments(cc_flags, language: 'c')\nadd_project_link_arguments(ld_flags, language: 'c')\n\nbuild_root = meson.current_build_dir()\nsrc_root = meson.current_source_dir()\n\nprefix = get_option('prefix')\ndir_bin = prefix / get_option('bindir')\ndir_data = prefix / get_option('datadir')\ndir_info = prefix / get_option('infodir')\ndir_lib = prefix / get_option('libdir')\ndir_local_state = prefix / get_option('localstatedir')\ndir_locale = prefix / get_option('localedir')\ndir_man = prefix / get_option('mandir')\ndir_sbin = prefix / get_option('sbindir')\ndir_sysconf = prefix / get_option('sysconfdir')\n\nif dir_run_state == ''\n  dir_run_state = dir_local_state / 'run'\nendif\n\nif not opt_docs.disabled()\n  subdir('doc')\nendif\n\nsubdir('src')\n\nif not opt_tests.disabled()\n  subdir('test')\nendif\n\nsubdir('bash_completion.d')\n\nif os_name == 'linux' and not opt_systemd.disabled()\n  subdir('systemd')\nendif\n\nif python.found()\n  run_target('reformat', command: [\n    python,\n    '@SOURCE_ROOT@/lint.py',\n    '--fix',\n  ])\n\n  run_target('lint', command: [\n    python,\n    '@SOURCE_ROOT@/lint.py',\n  ])\nendif\n\nif meson_version.version_compare('>=0.53')\n  summary({\n    'prefix': prefix,\n    'sandbox': cdata.has('HAVE_SANDBOX'),\n    'watchdog': cdata.has('HAVE_WATCHDOG'),\n  }, bool_yn: true, section: 'System')\nendif\n"
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 2.2783203125,
          "content": "option('runstatedir',\n       type: 'string',\n       value: '',\n       description: 'state directory for sockets, PID files')\n\noption('docs',\n       type: 'feature',\n       value: 'auto',\n       description: 'generate documentation')\n\noption('tests',\n       type: 'feature',\n       value: 'auto',\n       description: 'enable tests')\n\noption('hardening',\n       type: 'boolean',\n       value: true,\n       description: 'add compiler and linker hardening flags')\n\noption('static',\n       type: 'feature',\n       value: 'auto',\n       description: 'statically link dependencies (auto: YES on Windows, NO everywhere else)')\n\noption('systemd',\n       type: 'feature',\n       value: 'auto',\n       description: 'install systemd service files')\n\noption('systemd_dir',\n       type: 'string',\n       value: '',\n       description: 'systemd service directory (defaults to $prefix/lib/systemd/system)')\n\noption('crypto',\n       type: 'combo',\n       choices: ['openssl', 'gcrypt', 'nolegacy'],\n       value: 'openssl',\n       description: 'which cryptographic library to use')\n\noption('miniupnpc',\n       type: 'feature',\n       value: 'disabled',\n       description: 'miniupnpc support')\n\noption('lzo',\n       type: 'feature',\n       value: 'auto',\n       description: 'lzo compression support')\n\noption('lz4',\n       type: 'feature',\n       value: 'auto',\n       description: 'lz4 compression support')\n\noption('curses',\n       type: 'feature',\n       value: 'auto',\n       description: 'curses support')\n\noption('readline',\n       type: 'feature',\n       value: 'auto',\n       description: 'readline support')\n\noption('zlib',\n       type: 'feature',\n       value: 'auto',\n       description: 'zlib compression support')\n\noption('uml',\n       type: 'boolean',\n       value: false,\n       description: 'User Mode Linux support')\n\noption('tunemu',\n       type: 'feature',\n       value: 'auto',\n       description: 'support for the tunemu driver')\n\noption('vde',\n       type: 'feature',\n       value: 'auto',\n       description: 'support for Virtual Distributed Ethernet')\n\noption('jumbograms',\n       type: 'boolean',\n       value: false,\n       description: 'support for jumbograms (packets up to 9000 bytes)')\n\noption('sandbox',\n       type: 'feature',\n       value: 'auto',\n       description: 'use sandboxing on platforms that support it')\n\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "subprojects",
          "type": "tree",
          "content": null
        },
        {
          "name": "systemd",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.py",
          "type": "blob",
          "size": 0.55859375,
          "content": "#!/usr/bin/env python3\n\n\"\"\"Print current tinc version for using in build scripts.\"\"\"\n\nfrom os import path, environ\nimport subprocess as subp\n\nPREFIX = \"release-\"\nSOURCE_ROOT = path.dirname(path.realpath(__file__))\nSOURCE_ROOT = environ.get(\"MESON_SOURCE_ROOT\", SOURCE_ROOT)\n\ncmd = [\n    \"git\",\n    \"--git-dir\",\n    path.join(SOURCE_ROOT, \".git\"),\n    \"describe\",\n    \"--always\",\n    \"--tags\",\n    \"--match=\" + PREFIX + \"*\",\n]\n\nresult = subp.run(cmd, stdout=subp.PIPE, encoding=\"utf-8\", check=True)\nversion = result.stdout.strip().replace(\"release-\", \"\", 1)\nprint(version)\n"
        }
      ]
    }
  ]
}