{
  "metadata": {
    "timestamp": 1736709891807,
    "page": 384,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nigels-com/glew",
      "stars": 2691,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.150390625,
          "content": "*              text eol=lf\n*.png          binary\n*.pdf          binary\nbuild/*/*      text eol=crlf\nCMakeLists.txt text eol=lf\nbuild/cmake/*  text eol=lf\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3681640625,
          "content": "*.pc\n/src/*.c\n/include/GL/*.h\n/build/vc6/*.rc\n/build/*.rc\n/build/*/*.sdf\n/build/*/*.suo\n/build/*/*.db\n/build/*/*.vcxproj.user\n/build/*/.vs/\n/build/*/tmp/\n/build/cmake/CMakeFiles/\n/build/cmake/CMakeCache.txt\n/build/cmake/cmake_install.cmake\n/build/cmake/Makefile\n/auto/extensions\n/auto/registry\n/bin\n/lib\n/tmp\n/out\n.DS_Store*\nauto/EGL-Registry\nauto/OpenGL-Registry\nauto/glfixes\n"
        },
        {
          "name": ".lgtm.yml",
          "type": "blob",
          "size": 0.2275390625,
          "content": "extraction:\n  cpp:\n    prepare:\n      packages:\n      - \"build-essential\"\n      - \"libxmu-dev\"\n      - \"libxi-dev\"\n      - \"libgl-dev\"\n    index:\n      build_command:\n        - \"cd auto; make all -j8; cd ..\"\n        - \"make all -j8\"\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.865234375,
          "content": "language: cpp\ndist: trusty\ninstall:\nscript:\n- make -C auto clobber\n- make extensions\n- make dist-src\n- make clean && SYSTEM=linux            make\n- make clean && SYSTEM=linux-osmesa     make\n- make clean && SYSTEM=linux-egl        make\n- make clean && SYSTEM=linux-clang      make\n- make clean && SYSTEM=linux-clang-egl  make\n- pushd build/cmake && git clean -xdf . && cmake -G 'Unix Makefiles' .                              && make && popd\n- pushd build/cmake && git clean -xdf . && cmake -G 'Unix Makefiles' -DGLEW_OSMESA=ON .             && make && popd\n- pushd build/cmake && git clean -xdf . && cmake -G 'Unix Makefiles' -DGLEW_EGL=ON -DGLEW_X11=OFF . && make && popd\naddons:\n  apt:\n    packages:\n    - git\n    - cmake\n    - dos2unix\n    - libosmesa6-dev\n    - libegl1-mesa-dev\n  artifacts:\n    paths:\n    - $(ls *.zip *.tgz | tr \"\\n\" \":\")\n    - $(find doc -type f | tr \"\\n\" \":\")\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 3.7080078125,
          "content": "The OpenGL Extension Wrangler Library\nCopyright (C) 2002-2007, Milan Ikits <milan ikits[]ieee org>\nCopyright (C) 2002-2007, Marcelo E. Magallon <mmagallo[]debian org>\nCopyright (C) 2002, Lev Povalahev\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without \nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, \n  this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice, \n  this list of conditions and the following disclaimer in the documentation \n  and/or other materials provided with the distribution.\n* The name of the author may be used to endorse or promote products \n  derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" \nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE \nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\nTHE POSSIBILITY OF SUCH DAMAGE.\n\n\nMesa 3-D graphics library\nVersion:  7.0\n\nCopyright (C) 1999-2007  Brian Paul   All Rights Reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\nBRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\nAN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nCopyright (c) 2007 The Khronos Group Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and/or associated documentation files (the\n\"Materials\"), to deal in the Materials without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Materials, and to\npermit persons to whom the Materials are furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Materials.\n\nTHE MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nMATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 11.6005859375,
          "content": "#!gmake\n## The OpenGL Extension Wrangler Library\n## Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>\n## Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>\n## Copyright (C) 2002, Lev Povalahev\n## All rights reserved.\n## \n## Redistribution and use in source and binary forms, with or without \n## modification, are permitted provided that the following conditions are met:\n## \n## * Redistributions of source code must retain the above copyright notice, \n##   this list of conditions and the following disclaimer.\n## * Redistributions in binary form must reproduce the above copyright notice, \n##   this list of conditions and the following disclaimer in the documentation \n##   and/or other materials provided with the distribution.\n## * The name of the author may be used to endorse or promote products \n##   derived from this software without specific prior written permission.\n##\n## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" \n## AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \n## IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n## ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE \n## LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \n## CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n## SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n## THE POSSIBILITY OF SUCH DAMAGE.\n\ninclude config/version\n\nSHELL = /bin/sh\nSYSTEM ?= $(shell config/config.guess | cut -d - -f 3 | sed -e 's/\\.//g' -e 's/[0-9]\\{1,\\}.*//')\nSYSTEM.SUPPORTED = $(shell test -f config/Makefile.$(SYSTEM) && echo 1)\n\nifeq ($(SYSTEM.SUPPORTED), 1)\ninclude config/Makefile.$(SYSTEM)\nelse\n$(error \"Platform '$(SYSTEM)' not supported\")\nendif\n\nGLEW_PREFIX ?= /usr/local\nGLEW_DEST ?= /usr/local\nBINDIR    ?= $(GLEW_DEST)/bin\nLIBDIR    ?= $(GLEW_DEST)/lib\nINCDIR    ?= $(GLEW_DEST)/include/GL\nPKGDIR    ?= $(GLEW_DEST)/lib/pkgconfig\n\nifneq ($(GLEW_NO_GLU), -DGLEW_NO_GLU)\nLIBGLU = glu\nendif\n\nDIST_NAME    ?= glew-$(GLEW_VERSION)\nDIST_SRC_ZIP ?= $(shell pwd)/$(DIST_NAME).zip\nDIST_SRC_TGZ ?= $(shell pwd)/$(DIST_NAME).tgz\nDIST_WIN32   ?= $(shell pwd)/$(DIST_NAME)-win32.zip\n\nDIST_DIR := $(shell mktemp -d /tmp/glew.XXXXXX)/$(DIST_NAME)\n\n# To disable stripping of linked binaries either:\n#   - use STRIP= on gmake command-line\n#   - edit this makefile to set STRIP to the empty string\n#\n# To disable symlinks:\n#   - use LN= on gmake command-line\n\nAR       ?= ar\nARFLAGS  ?= cr\nINSTALL  ?= install\nSTRIP    ?= strip\nRM       ?= rm -f\nLN       ?= ln -sf\nUNIX2DOS ?= unix2dos -q\nDOS2UNIX ?= dos2unix -q\n\nifneq (,$(filter debug,$(MAKECMDGOALS)))\nOPT = -g\nSTRIP :=\nelse\nOPT = $(POPT)\nendif\nINCLUDE = -Iinclude\nCFLAGS = $(OPT) $(WARN) $(INCLUDE) $(CFLAGS.EXTRA)\n\nall debug: glew.lib glew.bin\n\n# GLEW shared and static libraries\n\nLIB.LDFLAGS        := $(LDFLAGS.EXTRA) $(LDFLAGS.GL)\nLIB.LIBS           := $(GL_LDFLAGS)\nLIB.SHARED.DIR     ?= lib\n\nLIB.SRCS           := src/glew.c\nLIB.SRCS.NAMES     := $(notdir $(LIB.SRCS))\n\nLIB.OBJS           := $(addprefix tmp/$(SYSTEM)/default/static/,$(LIB.SRCS.NAMES))\nLIB.OBJS           := $(LIB.OBJS:.c=.o)\nLIB.SOBJS          := $(addprefix tmp/$(SYSTEM)/default/shared/,$(LIB.SRCS.NAMES))\nLIB.SOBJS          := $(LIB.SOBJS:.c=.o)\n\nglew.lib: glew.lib.shared glew.lib.static\n\nglew.lib.shared: lib $(LIB.SHARED.DIR) $(LIB.SHARED.DIR)/$(LIB.SHARED) glew.pc\nglew.lib.static: lib lib/$(LIB.STATIC) glew.pc\n\n.PHONY: glew.lib glew.lib.shared glew.lib.static\n\nlib:\n\tmkdir lib\n\nlib/$(LIB.STATIC): $(LIB.OBJS)\nifneq ($(AR),)\n\t$(AR) $(ARFLAGS) $@ $^\nelse ifneq ($(LIBTOOL),)\n\t$(LIBTOOL) $@ $^\nendif\nifneq ($(STRIP),)\n\t$(STRIP) -x $@\nendif\n\n$(LIB.SHARED.DIR)/$(LIB.SHARED): $(LIB.SOBJS)\n\t$(LD) $(LDFLAGS.SO) -o $@ $^ $(LIB.LDFLAGS) $(LIB.LIBS)\nifneq ($(LN),)\n\t$(LN) $(LIB.SHARED) $(LIB.SHARED.DIR)/$(LIB.SONAME)\n\t$(LN) $(LIB.SHARED) $(LIB.SHARED.DIR)/$(LIB.DEVLNK)\nendif\nifneq ($(STRIP),)\n\t$(STRIP) -x $@\nendif\n\ntmp/$(SYSTEM)/default/static/glew.o: src/glew.c include/GL/glew.h include/GL/wglew.h include/GL/glxew.h\n\t@mkdir -p $(dir $@)\n\t$(CC) -DGLEW_NO_GLU -DGLEW_STATIC $(CFLAGS) $(CFLAGS.SO) -o $@ -c $<\n\ntmp/$(SYSTEM)/default/shared/glew.o: src/glew.c include/GL/glew.h include/GL/wglew.h include/GL/glxew.h\n\t@mkdir -p $(dir $@)\n\t$(CC) -DGLEW_NO_GLU -DGLEW_BUILD $(CFLAGS) $(CFLAGS.SO) -o $@ -c $<\n\n# Force re-write of glew.pc, GLEW_DEST can vary\n\n.PHONY: glew.pc\n\nglew.pc: glew.pc.in\n\tsed \\\n\t\t-e \"s|@prefix@|$(GLEW_PREFIX)|g\" \\\n\t\t-e \"s|@libdir@|$(LIBDIR)|g\" \\\n\t\t-e \"s|@exec_prefix@|$(BINDIR)|g\" \\\n\t\t-e \"s|@includedir@|$(INCDIR)|g\" \\\n\t\t-e \"s|@version@|$(GLEW_VERSION)|g\" \\\n\t\t-e \"s|@cflags@||g\" \\\n\t\t-e \"s|@libname@|$(NAME)|g\" \\\n\t\t-e \"s|@libgl@|$(LDFLAGS.GL)|g\" \\\n\t\t-e \"s|@requireslib@|$(LIBGLU)|g\" \\\n\t\t< $< > $@\n\n# GLEW utility programs\n\nBIN.LIBS = -Llib $(LDFLAGS.DYNAMIC) -l$(NAME) $(LDFLAGS.EXTRA) $(LDFLAGS.GL)\n\nGLEWINFO.BIN       := glewinfo$(BIN.SUFFIX)\nGLEWINFO.BIN.SRC   := src/glewinfo.c\nGLEWINFO.BIN.OBJ   := $(addprefix tmp/$(SYSTEM)/default/shared/,$(notdir $(GLEWINFO.BIN.SRC)))\nGLEWINFO.BIN.OBJ   := $(GLEWINFO.BIN.OBJ:.c=.o)\n\nVISUALINFO.BIN     := visualinfo$(BIN.SUFFIX)\nVISUALINFO.BIN.SRC := src/visualinfo.c\nVISUALINFO.BIN.OBJ := $(addprefix tmp/$(SYSTEM)/default/shared/,$(notdir $(VISUALINFO.BIN.SRC)))\nVISUALINFO.BIN.OBJ := $(VISUALINFO.BIN.OBJ:.c=.o)\n\n# Don't build glewinfo or visualinfo for NaCL, yet.\n\nifneq ($(filter nacl%,$(SYSTEM)),)\nglew.bin: glew.lib\nelse\nglew.bin: glew.lib bin/$(GLEWINFO.BIN) bin/$(VISUALINFO.BIN)\nendif\n\nbin/$(GLEWINFO.BIN): $(GLEWINFO.BIN.OBJ) $(LIB.SHARED.DIR)/$(LIB.SHARED)\n\t@mkdir -p $(dir $@)\n\t$(CC) $(CFLAGS) -o $@ $(GLEWINFO.BIN.OBJ) $(BIN.LIBS)\nifneq ($(STRIP),)\n\t$(STRIP) -x $@\nendif\n\nbin/$(VISUALINFO.BIN): $(VISUALINFO.BIN.OBJ) $(LIB.SHARED.DIR)/$(LIB.SHARED)\n\t@mkdir -p $(dir $@)\n\t$(CC) $(CFLAGS) -o $@ $(VISUALINFO.BIN.OBJ) $(BIN.LIBS)\nifneq ($(STRIP),)\n\t$(STRIP) -x $@\nendif\n\n$(GLEWINFO.BIN.OBJ): $(GLEWINFO.BIN.SRC) include/GL/glew.h include/GL/wglew.h include/GL/glxew.h\n\t@mkdir -p $(dir $@)\n\t$(CC) -DGLEW_NO_GLU $(CFLAGS) $(CFLAGS.SO) -o $@ -c $<\n\n$(VISUALINFO.BIN.OBJ): $(VISUALINFO.BIN.SRC) include/GL/glew.h include/GL/wglew.h include/GL/glxew.h\n\t@mkdir -p $(dir $@)\n\t$(CC) -DGLEW_NO_GLU $(CFLAGS) $(CFLAGS.SO) -o $@ -c $<\n\n# Install targets\n\ninstall.all: install install.bin\n\ninstall:     install.include install.lib install.pkgconfig\n\ninstall.lib: glew.lib\n\t$(INSTALL) -d -m 0755 \"$(DESTDIR)$(LIBDIR)\"\n# runtime\nifeq ($(filter-out mingw% cygwin,$(SYSTEM)),)\n\t$(INSTALL) -d -m 0755 \"$(DESTDIR)$(BINDIR)\"\n\t$(INSTALL) -m 0755 $(LIB.SHARED.DIR)/$(LIB.SHARED) \"$(DESTDIR)$(BINDIR)/\"\nelse\n\t$(INSTALL) -m 0644 $(LIB.SHARED.DIR)/$(LIB.SHARED) \"$(DESTDIR)$(LIBDIR)/\"\nendif\nifneq ($(LN),)\n\t$(LN) $(LIB.SHARED) \"$(DESTDIR)$(LIBDIR)/$(LIB.SONAME)\"\nendif\n\n# development files\nifeq ($(filter-out mingw% cygwin,$(SYSTEM)),)\n\t$(INSTALL) -m 0644 lib/$(LIB.DEVLNK) \"$(DESTDIR)$(LIBDIR)/\"\nendif\nifneq ($(LN),)\n\t$(LN) $(LIB.SHARED) \"$(DESTDIR)$(LIBDIR)/$(LIB.DEVLNK)\"\nendif\n\t$(INSTALL) -m 0644 lib/$(LIB.STATIC) \"$(DESTDIR)$(LIBDIR)/\"\n\ninstall.bin: glew.bin\n\t$(INSTALL) -d -m 0755 \"$(DESTDIR)$(BINDIR)\"\n\t$(INSTALL)    -m 0755 bin/$(GLEWINFO.BIN) bin/$(VISUALINFO.BIN) \"$(DESTDIR)$(BINDIR)/\"\n\ninstall.include:\n\t$(INSTALL) -d -m 0755 \"$(DESTDIR)$(INCDIR)\"\n\t$(INSTALL) -m 0644 include/GL/wglew.h \"$(DESTDIR)$(INCDIR)/\"\n\t$(INSTALL) -m 0644 include/GL/glew.h \"$(DESTDIR)$(INCDIR)/\"\n\t$(INSTALL) -m 0644 include/GL/glxew.h \"$(DESTDIR)$(INCDIR)/\"\n\t$(INSTALL) -m 0644 include/GL/eglew.h \"$(DESTDIR)$(INCDIR)/\"\n\ninstall.pkgconfig: glew.pc\n\t$(INSTALL) -d -m 0755 \"$(DESTDIR)$(PKGDIR)\"\n\t$(INSTALL) -d -m 0755 \"$(DESTDIR)$(PKGDIR)\"\n\t$(INSTALL) -m 0644 glew.pc \"$(DESTDIR)$(PKGDIR)/\"\n\nuninstall:\n\t$(RM) \"$(DESTDIR)$(INCDIR)/wglew.h\"\n\t$(RM) \"$(DESTDIR)$(INCDIR)/glew.h\"\n\t$(RM) \"$(DESTDIR)$(INCDIR)/glxew.h\"\n\t$(RM) \"$(DESTDIR)$(LIBDIR)/$(LIB.DEVLNK)\"\nifeq ($(filter-out mingw% cygwin,$(SYSTEM)),)\n\t$(RM) \"$(DESTDIR)$(BINDIR)/$(LIB.SHARED)\"\nelse\n\t$(RM) \"$(DESTDIR)$(LIBDIR)/$(LIB.SONAME)\"\n\t$(RM) \"$(DESTDIR)$(LIBDIR)/$(LIB.SHARED)\"\nendif\n\t$(RM) \"$(DESTDIR)$(LIBDIR)/$(LIB.STATIC)\"\n\t$(RM) \"$(DESTDIR)$(BINDIR)/$(GLEWINFO.BIN)\" \"$(DESTDIR)$(BINDIR)/$(VISUALINFO.BIN)\"\n\nclean:\n\t$(RM) -r tmp/\n\t$(RM) -r lib/\n\t$(RM) -r bin/\n\t$(RM) glew.pc\n\ndistclean: clean\n\tfind . -name \\*~ | xargs $(RM)\n\tfind . -name .\\*.sw\\? | xargs $(RM)\n\n# Distributions\n\ndist-win32:\n\t$(RM) -r $(DIST_DIR)\n\tmkdir -p $(DIST_DIR)\n\tcp -a include $(DIST_DIR)\n\tcp -a doc $(DIST_DIR)\n\tcp -a *.txt $(DIST_DIR)\n\tcp -a bin $(DIST_DIR)\n\tcp -a lib $(DIST_DIR)\n\t$(RM) -f $(DIST_DIR)/bin/*/*/*.pdb $(DIST_DIR)/bin/*/*/*.exp\n\t$(RM) -f $(DIST_DIR)/bin/*/*/glewinfo-*.exe $(DIST_DIR)/bin/*/*/visualinfo-*.exe \n\t$(RM) -f $(DIST_DIR)/lib/*/*/*.pdb $(DIST_DIR)/lib/*/*/*.exp\n\t$(UNIX2DOS) $(DIST_DIR)/include/GL/*.h\n\t$(UNIX2DOS) $(DIST_DIR)/doc/*.txt\n\t$(UNIX2DOS) $(DIST_DIR)/doc/*.html\n\t$(UNIX2DOS) $(DIST_DIR)/*.txt\n\trm -f $(DIST_WIN32)\n\tcd $(DIST_DIR)/.. && zip -rq9 $(DIST_WIN32) $(DIST_NAME)\n\t$(RM) -r $(DIST_DIR)\n\ndist-src:\n\t$(RM) -r $(DIST_DIR)\n\tmkdir -p $(DIST_DIR)\n\tmkdir -p $(DIST_DIR)/bin\n\tmkdir -p $(DIST_DIR)/lib\n\tcp -a auto $(DIST_DIR)\n\t$(RM) -Rf $(DIST_DIR)/auto/registry\n\t$(RM) -Rf $(DIST_DIR)/auto/glfixes\n\t$(RM) -Rf $(DIST_DIR)/auto/OpenGL-Registry\n\t$(RM) -Rf $(DIST_DIR)/auto/EGL-Registry\n\tcp -a build $(DIST_DIR)\n\tcp -a config $(DIST_DIR)\n\tcp -a src $(DIST_DIR)\n\tcp -a doc $(DIST_DIR)\n\tcp -a include $(DIST_DIR)\n\tcp -a *.md $(DIST_DIR)\n\tcp -a *.txt $(DIST_DIR)\n\tcp -a Makefile $(DIST_DIR)\n\tcp -a glew.pc.in $(DIST_DIR)\n\tfind $(DIST_DIR) -name '*.o' | xargs $(RM) -r\n\tfind $(DIST_DIR) -name '*~' | xargs $(RM) -r\n\tfind $(DIST_DIR) -name CVS -o -name .cvsignore | xargs $(RM) -r\n\tfind $(DIST_DIR) -name .svn | xargs $(RM) -r\n\tfind $(DIST_DIR) -name \"*.patch\" | xargs $(RM) -r\n\t$(DOS2UNIX) $(DIST_DIR)/Makefile\n\t$(DOS2UNIX) $(DIST_DIR)/auto/Makefile\n\t$(DOS2UNIX) $(DIST_DIR)/config/*\n\t$(UNIX2DOS) $(DIST_DIR)/auto/core/*\n\t$(UNIX2DOS) $(DIST_DIR)/auto/extensions/*\n\tfind $(DIST_DIR) -name '*.h' | xargs $(UNIX2DOS)\n\tfind $(DIST_DIR) -name '*.c' | xargs $(UNIX2DOS)\n\tfind $(DIST_DIR) -name '*.md' | xargs $(UNIX2DOS)\n\tfind $(DIST_DIR) -name '*.txt' | xargs $(UNIX2DOS)\n\tfind $(DIST_DIR) -name '*.html' | xargs $(UNIX2DOS)\n\tfind $(DIST_DIR) -name '*.css' | xargs $(UNIX2DOS)\n\tfind $(DIST_DIR) -name '*.sh' | xargs $(UNIX2DOS)\n\tfind $(DIST_DIR) -name '*.pl' | xargs $(UNIX2DOS)\n\tfind $(DIST_DIR) -name 'Makefile' | xargs $(UNIX2DOS)\n\tfind $(DIST_DIR) -name '*.in' | xargs $(UNIX2DOS)\n\tfind $(DIST_DIR) -name '*.pm' | xargs $(UNIX2DOS)\n\tfind $(DIST_DIR) -name '*.rc' | xargs $(UNIX2DOS)\n\trm -f $(DIST_SRC_ZIP)\n\tcd $(DIST_DIR)/.. && zip -rq9 $(DIST_SRC_ZIP) $(DIST_NAME)\n\t$(DOS2UNIX) $(DIST_DIR)/Makefile\n\t$(DOS2UNIX) $(DIST_DIR)/auto/Makefile\n\t$(DOS2UNIX) $(DIST_DIR)/config/*\n\t$(DOS2UNIX) $(DIST_DIR)/auto/core/*\n\t$(DOS2UNIX) $(DIST_DIR)/auto/extensions/*\n\tfind $(DIST_DIR) -name '*.h' | xargs $(DOS2UNIX)\n\tfind $(DIST_DIR) -name '*.c' | xargs $(DOS2UNIX)\n\tfind $(DIST_DIR) -name '*.md' | xargs $(DOS2UNIX)\n\tfind $(DIST_DIR) -name '*.txt' | xargs $(DOS2UNIX)\n\tfind $(DIST_DIR) -name '*.html' | xargs $(DOS2UNIX)\n\tfind $(DIST_DIR) -name '*.css' | xargs $(DOS2UNIX)\n\tfind $(DIST_DIR) -name '*.sh' | xargs $(DOS2UNIX)\n\tfind $(DIST_DIR) -name '*.pl' | xargs $(DOS2UNIX)\n\tfind $(DIST_DIR) -name 'Makefile' | xargs $(DOS2UNIX)\n\tfind $(DIST_DIR) -name '*.in' | xargs $(DOS2UNIX)\n\tfind $(DIST_DIR) -name '*.pm' | xargs $(DOS2UNIX)\n\tfind $(DIST_DIR) -name '*.rc' | xargs $(DOS2UNIX)\n\trm -f $(DIST_SRC_TGZ)\n\tcd $(DIST_DIR)/.. && env GZIP=-9 tar czf $(DIST_SRC_TGZ) $(DIST_NAME)\n\t$(RM) -r $(DIST_DIR)\n\nextensions:\n\t$(MAKE) -C auto\n\n.PHONY: clean distclean tardist dist-win32 dist-src\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.26953125,
          "content": "# GLEW - The OpenGL Extension Wrangler Library\n\nThe OpenGL Extension Wrangler Library (GLEW) is a cross-platform open-source C/C++ extension loading library. GLEW provides efficient run-time mechanisms for determining which OpenGL extensions are supported on the target platform. OpenGL core and extension functionality is exposed in a single header file. GLEW has been tested on a variety of operating systems, including Windows, Linux, Mac OS X, FreeBSD, Irix, and Solaris.\n\n![](http://glew.sourceforge.net/glew.png)\n\nhttp://glew.sourceforge.net/\n\nhttps://github.com/nigels-com/glew\n\n[![Gitter](https://badges.gitter.im/nigels-com/glew.svg)](https://gitter.im/nigels-com/glew?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![Download](https://img.shields.io/sourceforge/dm/glew.svg)](https://sourceforge.net/projects/glew/files/latest/download)\n[![Health](https://codebuild.ap-southeast-2.amazonaws.com/badges?uuid=eyJlbmNyeXB0ZWREYXRhIjoiZ0cxMFNORFBPTGQ5Z1MyRUsxRnU5V1ZyOUNUWmZZRFJwNWdBNng5MnNtdFFObGNsTEJkQkxZa0lHYmtMNEZRREZaZmdvMUh2bDMxVjhFc3c2L29odFQ4PSIsIml2UGFyYW1ldGVyU3BlYyI6InhLVlFqWXVaMEZRVFh6c1QiLCJtYXRlcmlhbFNldFNlcmlhbCI6MX0%3D&branch=master)](https://ap-southeast-2.codebuild.aws.amazon.com/project/eyJlbmNyeXB0ZWREYXRhIjoiK3RLWndGOVVkMWthbXRQZCtVTTNOQ0w2dEpxakZ1cVBTNDZ1UldGODdqUERSdkx0U21Nd0RFaGhQL1kycVlmNzh2OXpEYnRKV3hXTVJJdjUvVStCbTl0dkliZm5jRTFsc0VBPSIsIml2UGFyYW1ldGVyU3BlYyI6ImZ0ekRoMkNjaU0rRUt5K2UiLCJtYXRlcmlhbFNldFNlcmlhbCI6MX0%3D)\n\n## Table of Contents\n\n* [Downloads](#downloads)\n\t* [Recent snapshots](#recent-snapshots)\n* [Build](#build)\n\t* [Linux and Mac](#linux-and-mac)\n\t\t* [Using GNU Make](#using-gnu-make)\n\t\t* [Install build tools](#install-build-tools)\n\t\t* [Build](#build-1)\n\t\t* [Linux EGL](#linux-egl)\n\t\t* [Linux OSMesa](#linux-osmesa)\n\t\t* [Linux mingw-w64](#linux-mingw-w64)\n\t* [Using cmake](#using-cmake)\n\t\t* [Install build tools](#install-build-tools-1)\n\t\t* [Build](#build-2)\n\t* [Windows](#windows)\n\t\t* [Visual Studio](#visual-studio)\n\t\t* [MSYS/Mingw](#msysmingw)\n\t\t* [MSYS2/Mingw-w64](#msys2mingw-w64)\n* [glewinfo](#glewinfo)\n* [Code Generation](#code-generation)\n* [Authors](#authors)\n* [Contributions](#contributions)\n* [Copyright and Licensing](#copyright-and-licensing)\n\n## Downloads\n\nCurrent release is [2.2.0](https://github.com/nigels-com/glew/releases/tag/glew-2.2.0).\n[(Change Log)](http://glew.sourceforge.net/log.html)\n\nSources available as\n[ZIP](https://github.com/nigels-com/glew/releases/download/glew-2.2.0/glew-2.2.0.zip) or\n[TGZ](https://github.com/nigels-com/glew/releases/download/glew-2.2.0/glew-2.2.0.tgz).\n\nWindows binaries for [32-bit and 64-bit](https://github.com/nigels-com/glew/releases/download/glew-2.2.0/glew-2.2.0-win32.zip).\n\n### Recent snapshots\n\nSnapshots may contain new features, bug-fixes or new OpenGL extensions ahead of tested, official releases.\n\n[glew-20220402.tgz](https://sourceforge.net/projects/glew/files/glew/snapshots/glew-20220402.tgz/download) *GLEW 2.2.0 - with fix for glCreateProgressFenceNVX*\n\n## Build\n\nIt is highly recommended to build from a tgz or zip release snapshot.\nThe code generation workflow is a complex brew of gnu make, perl and python, that works best on Linux or Mac.\nThe code generation is known to work on Windows using [MSYS2](https://www.msys2.org/).\nFor most end-users of GLEW the official releases are the best choice, with first class support.\n\n### Linux and Mac\n\n#### Using GNU Make\n\nGNU make is the primary build system for GLEW, historically.\nIt includes targets for building the sources and headers, for maintenance purposes.\n\n##### Install build tools\n\nDebian/Ubuntu/Mint:    `$ sudo apt-get install build-essential libxmu-dev libxi-dev libgl-dev`\n\nRedHat/CentOS/Fedora:  `$ sudo yum install libXmu-devel libXi-devel libGL-devel`\n\nFreeBSD: `# pkg install xorg lang/gcc git cmake gmake bash python perl5`\n\n##### Build\n\n\t$ make\n\t$ sudo make install\n\t$ make clean\n\nTargets:    `all, glew.lib (sub-targets: glew.lib.shared, glew.lib.static), glew.bin, clean, install, uninstall`\n\nVariables:  `SYSTEM=linux-clang, GLEW_DEST=/usr/local, STRIP=`\n\n_Note: you may need to call `make` in the  **auto** folder first_\n\n##### Linux EGL\n\n\t$ sudo apt install libegl1-mesa-dev\n\t$ make SYSTEM=linux-egl\n\n##### Linux OSMesa\n\n\t$ sudo apt install libosmesa-dev\n\t$ make SYSTEM=linux-osmesa\n\n##### Linux mingw-w64\n\n\t$ sudo apt install mingw-w64\n\t$ make SYSTEM=linux-mingw32\n\t$ make SYSTEM=linux-mingw64\n\n#### Using cmake\n\nThe cmake build is mostly contributor maintained.\nDue to the multitude of use cases this is maintained on a _best effort_ basis.\nPull requests are welcome.\n\n*CMake 3.16 or higher is required.*\n\n##### Install build tools\n\nDebian/Ubuntu/Mint:   `$ sudo apt-get install build-essential libxmu-dev libxi-dev libgl-dev cmake git`\n\nRedHat/CentOS/Fedora: `$ sudo yum install libXmu-devel libXi-devel libGL-devel cmake git`\n\n##### Build\n\n\t$ cd build\n\t$ cmake ./cmake\n\t$ make -j4\n\n| Target     | Description |\n| ---------- | ----------- |\n| glew       | Build the glew shared library. |\n| glew_s     | Build the glew static library. |\n| glewinfo   | Build the `glewinfo` executable (requires `BUILD_UTILS` to be `ON`). |\n| visualinfo | Build the `visualinfo` executable (requires `BUILD_UTILS` to be `ON`). |\n| install    | Install all enabled targets into `CMAKE_INSTALL_PREFIX`. |\n| clean      | Clean up build artifacts. |\n| all        | Build all enabled targets (default target). |\n\n| Variables       | Description |\n| --------------- | ----------- |\n| BUILD_UTILS     | Build the `glewinfo` and `visualinfo` executables. |\n| GLEW_REGAL      | Build in Regal mode. |\n| GLEW_OSMESA     | Build in off-screen Mesa mode. |\n| BUILD_FRAMEWORK | Build as MacOSX Framework.  Setting `CMAKE_INSTALL_PREFIX` to `/Library/Frameworks` is recommended. |\n\n### Windows\n\n#### Visual Studio\n\nUse the provided Visual Studio project file in build/vc15/\n\nProjects for vc6, vc10, vc12 and vc14 are also provided\n\n#### MSYS/Mingw\n\nAvailable from [Mingw](http://www.mingw.org/)\n\nRequirements: bash, make, gcc\n\n\t$ mingw32-make\n\t$ mingw32-make install\n\t$ mingw32-make install.all\n\nAlternative toolchain:  `SYSTEM=mingw-win32`\n\n#### MSYS2/Mingw-w64\n\nAvailable from [Msys2](http://msys2.github.io/) and/or [Mingw-w64](http://mingw-w64.org/)\n\nRequirements: bash, make, gcc\n\n\t$ pacman -S gcc make mingw-w64-i686-gcc mingw-w64-x86_64-gcc\n\t$ make\n\t$ make install\n\t$ make install.all\n\nAlternative toolchain:  `SYSTEM=msys, SYSTEM=msys-win32, SYSTEM=msys-win64`\n\n## glewinfo\n\n`glewinfo` is a command-line tool useful for inspecting the capabilities of an\nOpenGL implementation and GLEW support for that.  Please include `glewinfo.txt`\nwith bug reports, as appropriate.\n\n\t---------------------------\n\t    GLEW Extension Info\n\t---------------------------\n\n\tGLEW version 2.0.0\n\tReporting capabilities of pixelformat 3\n\tRunning on a Intel(R) HD Graphics 3000 from Intel\n\tOpenGL version 3.1.0 - Build 9.17.10.4229 is supported\n\n\tGL_VERSION_1_1:                                                OK\n\t---------------\n\n\tGL_VERSION_1_2:                                                OK\n\t---------------\n\t  glCopyTexSubImage3D:                                         OK\n\t  glDrawRangeElements:                                         OK\n\t  glTexImage3D:                                                OK\n\t  glTexSubImage3D:                                             OK\n\n\t...\n\n## Code Generation\n\nA Unix or Mac environment is needed for building GLEW from scratch to\ninclude new extensions, or customize the code generation. The extension\ndata is regenerated from the top level source directory with:\n\n\tmake extensions\n\nAn alternative to generating the GLEW sources from scratch is to\ndownload a pre-generated (unsupported) snapshot:\n\nhttps://sourceforge.net/projects/glew/files/glew/snapshots/\n\n## Authors\n\nGLEW is currently maintained by [Nigel Stewart](https://github.com/nigels-com)\nwith bug fixes, new OpenGL extension support and new releases.\n\nGLEW was developed by [Milan Ikits](http://www.cs.utah.edu/~ikits/)\nand [Marcelo Magallon](http://wwwvis.informatik.uni-stuttgart.de/~magallon/).\nAaron Lefohn, Joe Kniss, and Chris Wyman were the first users and also\nassisted with the design and debugging process.\n\nThe acronym GLEW originates from Aaron Lefohn.\nPasi K&auml;rkk&auml;inen identified and fixed several problems with\nGLX and SDL.  Nate Robins created the `wglinfo` utility, to\nwhich modifications were made by Michael Wimmer.\n\n## Contributions\n\nGLEW welcomes community contributions.  Typically these are co-ordinated\nvia [Issues](https://github.com/nigels-com/glew/issues) or\n[Pull Requests](https://github.com/nigels-com/glew/pulls) in the\nGitHub web interface.\n\nBe sure to mention platform and compiler toolchain details when filing\na bug report.  The output of `glewinfo` can be quite useful for discussion\nalso.\n\nGenerally GLEW is usually released once a year, around the time of the Siggraph\ncomputer graphics conference.  If you're not using the current release\nversion of GLEW, be sure to check if the issue or bug is fixed there.\n\n## Copyright and Licensing\n\nGLEW is originally derived from the EXTGL project by Lev Povalahev.\nThe source code is licensed under the\n[Modified BSD License](http://glew.sourceforge.net/glew.txt), the\n[Mesa 3-D License](http://glew.sourceforge.net/mesa.txt) (MIT) and the\n[Khronos License](http://glew.sourceforge.net/khronos.txt) (MIT).\n\nThe automatic code generation scripts are released under the\n[GNU GPL](http://glew.sourceforge.net/gpl.txt).\n"
        },
        {
          "name": "auto",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake-testbuild.sh",
          "type": "blob",
          "size": 2.185546875,
          "content": "#!/bin/sh\n\n# This script tests the CMake build:\n#\n# - builds the main CMakeLists.txt\n# - builds and runs a small test app in a separate build tree so\n#   the config-module is tested, too\n#\n# Options (environment variables):\n#\n# - The variable BUILD_SHARED_LIBS will be forwarded to the CMake project\n#   that builds and installs the GLEW libraries. Set BUILD_SHARED_LIBS to\n#   ON or OFF to install only static or shared libs. Leave it unset to\n#   install both.\n#\n#   Note: BUILD_SHARED_LIBS controls only what to install not what to build.\n#\n# - GLEW_USE_STATIC_LIBS will be forwarded to the test project that calls\n#   `find_package` to find GLEW. Set GLEW_USE_STATIC LIBS to ON or OFF force\n#   finding the shared or static versions of GLEW. Leave it unset to find\n#   the shared or what is available.\n#\n# Examples:\n#\n# Build & install shared + static, find default (shared)\n#\n#    ./cmake-testbuild.sh\n#\n# Build & install shared + static, find static\n#\n#    GLEW_USE_STATIC_LIBS=ON ./cmake-testbuild.sh\n#\n# Install static only (still build both)\n#\n#    BUILD_SHARED_LIBS=OFF ./cmake-testbuild.sh\n#\n\nset -ex\n\nrm -rf out/include\nrm -rf out/lib*\nrm -rf out/bin\n\nif [ -n \"$BUILD_SHARED_LIBS\" ]; then\n    bsl=-DBUILD_SHARED_LIBS=$BUILD_SHARED_LIBS\nelse\n    bsl=-UBUILD_SHARED_LIBS\nfi\n\nif [ -n \"$GLEW_USE_STATIC_LIBS\" ]; then\n    gusl=-DGLEW_USE_STATIC_LIBS=$GLEW_USE_STATIC_LIBS\nelse\n    gusl=-UGLEW_USE_STATIC_LIBS\nfi\n\ncmake -Hbuild/cmake -Bout/build/glew -DCMAKE_INSTALL_PREFIX=${PWD}/out -DCMAKE_BUILD_TYPE=Debug $bsl\ncmake --build out/build/glew --target install --config Debug\ncmake out/build/glew -DCMAKE_BUILD_TYPE=Release\ncmake --build out/build/glew --target install --config Release --clean-first\n\ncmake -Hbuild/cmake/testbuild -Bout/build/cmake-testbuild -DCMAKE_INSTALL_PREFIX=${PWD}/out -DCMAKE_PREFIX_PATH=${PWD}/out -DCMAKE_BUILD_TYPE=Debug $gusl\ncmake --build out/build/cmake-testbuild --target install --config Debug\n\ncmake out/build/cmake-testbuild -DCMAKE_BUILD_TYPE=Release\ncmake --build out/build/cmake-testbuild --target install --config Release --clean-first\n\nexport LD_LIBRARY_PATH=${PWD}/out/lib:$LD_LIBRARY_PATH\nexport DYLD_LIBRARY_PATH=${PWD}/out/lib:$DYLD_LIBRARY_PATH\n\nout/bin/cmake-test_d\nout/bin/cmake-test\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "glew.pc.in",
          "type": "blob",
          "size": 0.25390625,
          "content": "prefix=@prefix@\nexec_prefix=${prefix}\nlibdir=@libdir@\nincludedir=${prefix}/include\n\nName: glew\nDescription: The OpenGL Extension Wrangler library\nVersion: @version@\nCflags: -I${includedir} @cflags@\nLibs: -L${libdir} -l@libname@ @libgl@\nRequires: @requireslib@\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}