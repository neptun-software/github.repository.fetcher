{
  "metadata": {
    "timestamp": 1736709931938,
    "page": 459,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Exely/CSAPP-Labs",
      "stars": 2451,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.1318359375,
          "content": "# Compiled source #\n###################\n*.com\n*.class\n*.dll\n*.exe\n*.o\n*.py\n*.f0\n*.f1\n*.tmp\n*.marker\n*.cism_results\n*.yo\n*.so\n \n# Packages #\n############\n# it's better to unpack these files and commit the raw source\n# git has its own built in compression methods\n*.7z\n*.dmg\n*.gz\n*.iso\n*.jar\n*.rar\n*.tar\n*.zip\n \n# Logs and databases #\n######################\n*.log\n*.sql\n*.sqlite\n \n# OS generated files #\n######################\n._*\n.Trashes\nehthumbs.db\nThumbs.db\n\n# Emacs\n# -*- mode: gitignore; -*-\n*~\n\\#*\\#\n/.emacs.desktop\n/.emacs.desktop.lock\n*.elc\nauto-save-list\ntramp\n.\\#*\n\n# Org-mode\n.org-id-locations\n*_archive\n\n# flymake-mode\n*_flymake.*\n\n# eshell files\n/eshell/history\n/eshell/lastdir\n\n# elpa packages\n/elpa/\n\n# reftex files\n*.rel\n\n# AUCTeX auto folder\n/auto/\n\n# vim git ignore files\n*~\n*.swp\n*.swo\n\n# cache files for sublime text\n*.tmlanguage.cache\n*.tmPreferences.cache\n*.stTheme.cache\n\n# workspace files are user-specific\n*.sublime-workspace\n\n# project files should be checked into the repository, unless a significant\n# proportion of contributors will probably not be using SublimeText\n# *.sublime-project\n\n# sftp configuration file\nsftp-config.json\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.5791015625,
          "content": "# CSAPP-Labs\n\n这个项目是我对《深入理解计算机系统》第三版配套实验的解答和我写的笔记，实验文件在目录[labs](./labs/)下，来源[Lab Assignments](http://csapp.cs.cmu.edu/3e/labs.html)。\n\n## 目录：\n\n### [labs](./labs/)\n\n 包含所有的lab文件，以及CMU给的参考文档，也包含我写的解答文件，我的实验环境是 Ubuntu 16.04 amd-64，其中[source](./labs/source/)保存了所有lab的原文件；\n\n### [notes](./notes/)\n\n 是我写的笔记：\n\n- [Data Lab 笔记](./notes/datalab.md)\n\n涉及了位运算，补码和浮点数等内容，都是`C`语言程序设计题。\n\n- [Bomb Lab 笔记](./notes/bomb.md)\n\n拆除二进制炸弹，可以大大提升看汇编代码的能力。\n\n- [Attack Lab 笔记](./notes/attack.md)\n\n 这个lab主要涉及了栈随机化，不可执行等栈保护的方法和使栈溢出、ROP攻击等内容。\n\n- [Architecture Lab (Y86-64) 笔记](./notes/archlab.md)\n\n Architecture Lab，涉及了`Y86-64`指令集，和SEQ和PIPE的实现方式，以及程序优化等内容，可以熟悉汇编和硬件语言`HCL`。\n\n- [Performance Lab 笔记](./notes/perflab.md)\n\n这个lab在CMU已经被Cache Lab取代了，考虑到Cache Lab比较难，可以先做这个lab练练手。基于书上第五、六章对程序进行优化，主要用了循环分块消除缓存不命中和消除分支预测错误等方法。   \n\n- [Cache Lab 笔记](./notes/cachelab.md)\n\nPart A要求写一个缓存模拟器，Part B要求优化矩阵转置函数，减少缓存不命中数。这个lab可以加深对缓存的理解。已写完Part A。\n"
        },
        {
          "name": "labs",
          "type": "tree",
          "content": null
        },
        {
          "name": "notes",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}