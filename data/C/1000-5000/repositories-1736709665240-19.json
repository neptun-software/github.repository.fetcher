{
  "metadata": {
    "timestamp": 1736709665240,
    "page": 19,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "facebookincubator/katran",
      "stars": 4811,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0166015625,
          "content": "_build/\n.vscode/\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.8525390625,
          "content": "cmake_minimum_required (VERSION 3.9 FATAL_ERROR)\n\nproject(\n  katran\n)\n\nset(CMAKE_MODULE_PATH\n  \"${CMAKE_CURRENT_SOURCE_DIR}/build/fbcode_builder/CMake\"\n  ${CMAKE_MODULE_PATH})\n\nlist(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)\n# for modules vended by fbcode_builder and getdeps\nlist(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/build/fbcode_builder/CMake)\n\n# KATRAN_FBCODE_ROOT is where the top level katran/ directory resides, so\n# an #include <katran/path/to/file> will resolve to\n# $KATRAN_FBCODE_ROOT/katran/path/to/file on disk\nset(KATRAN_FBCODE_ROOT ${CMAKE_CURRENT_SOURCE_DIR})\n\nset(KATRAN_INCLUDE_DIR \"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../../>\")\n\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nmessage(STATUS \"setting C++ standard to C++${CMAKE_CXX_STANDARD}\")\n\n# for clang's compile_commands.json\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\n# Dependencies\nfind_package(fmt CONFIG REQUIRED)\nfind_package(folly CONFIG REQUIRED)\nfind_package(Glog REQUIRED)\nfind_package(Gflags REQUIRED)\nfind_package(Threads)\n\ninclude_directories(\".\")\nadd_subdirectory(katran)\n\nif(BUILD_TESTS)\n  enable_testing()\n  include(KatranTest)\nendif()\n\nif(DEFINED ENV{CMAKE_BUILD_EXAMPLE_THRIFT})\n    message(\"Building example of thrift and grpc based katran server\")\n    add_subdirectory(example)\nendif()\n\nif(DEFINED ENV{CMAKE_BUILD_EXAMPLE_GRPC})\n    add_subdirectory(example_grpc)\nendif()\n\nif(DEFINED ENV{CMAKE_BUILD_TOOLS})\n    add_subdirectory(tools)\nendif()\n\ninstall(\n  EXPORT katran-exports\n  FILE katran-targets.cmake\n  NAMESPACE katran::\n  DESTINATION lib/cmake/katran/\n)\n\ninclude(CMakePackageConfigHelpers)\nconfigure_package_config_file(\n  cmake/katran-config.cmake.in\n  ${CMAKE_CURRENT_BINARY_DIR}/katran-config.cmake\n  INSTALL_DESTINATION lib/cmake/katran/\n)\n\ninstall(\n  FILES ${CMAKE_CURRENT_BINARY_DIR}/katran-config.cmake\n  DESTINATION lib/cmake/katran/\n)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.27734375,
          "content": "# Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at <opensource-conduct@fb.com>. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.380859375,
          "content": "# Contributing to katran\nWe want to make contributing to this project as easy and transparent as\npossible.\n\n## Pull Requests\nWe actively welcome your pull requests.\n\n1. Fork the repo and create your branch from `main`.\n2. If you've added code that should be tested, add tests.\n3. If you've changed APIs, update the documentation.\n4. Ensure the test suite passes.\n5. Make sure your code lints.\n6. If you haven't already, complete the Contributor License Agreement (\"CLA\").\n\n## Contributor License Agreement (\"CLA\")\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Facebook's open source projects.\n\nComplete your CLA here: <https://code.facebook.com/cla>\n\n## Issues\nWe use GitHub issues to track public bugs. Please ensure your description is\nclear and has sufficient instructions to be able to reproduce the issue.\n\nFacebook has a [bounty program](https://www.facebook.com/whitehat/) for the safe\ndisclosure of security bugs. In those cases, please go through the process\noutlined on that page and do not file a public issue.\n\n## Coding Style\nwe are using clang-format tool for coding style. please\nrun `clang-format -i <filename>` on file, where changes has been made, before\nyou commit them.\n## License\nBy contributing to katran, you agree that your contributions will be licensed\nunder the LICENSE file in the root directory of this source tree.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.6484375,
          "content": "GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "DEVELOPING.md",
          "type": "blob",
          "size": 8.3642578125,
          "content": "# DEVELOPING\n\n### Developing of katran\n\nThis guide contains information on how you can build and test katran's\nBPF forwarding plane and cpp library to control it.\n\n### Formatting:\n\nWe are using clang-format for C++ code formatting. Please make sure that code is properly\nformatted before sending PR. You can format it with `clang-format -i <path/to/file>`\n(if your linux distribution does not have clang-format installed, you can use one from the \ndeps folder: `./deps/clang/clang+llvm-5.0.0-linux-x86_64-ubuntu16.04/bin/clang-format`)\n\n### Build and compile.\n\nYou can build the initial version with `build_katran.sh` script (if you are using\nubuntu 18.04). It will download all required dependencies and build\nactual binaries. However, you can build everything separately.\n\n### BPF forwarding plane\n\nTo be able to build BPF forwarding plane you need to run\n`build_bpf_modules_opensource.sh` from the root of the working directory. It assumes\nthat you have all dependencies installed and that the linux kernel source code\nis located at `deps/linux/` (__Note:__ It is automatically installed there with the script: `build_katran.sh`).\nThe result of this script will be object files w/ BPF programs, which are going\nto be located in `deps/linux/bpfprog/bpf/`. These files are:\n\n1. __`balancer.bpf.o`__ - object file w/ main BPF program for forwarding\n2. __`healthchecking_ipip.o`__ - object file w/ BPF program for the forwarding of\nhealthchecks\n\n### C++ library\n\nTo be able to build C++ library (and examples) you need to:\n\n1. create (if it doesn't exist already) __`build dir`__\n2. run `cmake ..` inside this __`build dir`__\n\n## Testing\n\n### C++ library\nIf you are adding new features into C++ library, please make sure that you also submit\nunittests for them (all BPF specific calls should be added into `if(!testing_){...}` block\nas they require root access (most of the time). You can run unittests manually or w/ ctest\nutil.\n\n```\n$ pwd\n$HOME/katran/build/katran/lib/tests\n$ ctest\nTest project build/katran/lib/tests\n    Start 1: IpHelpersTests\n1/4 Test #1: IpHelpersTests ...................   Passed    0.00 sec\n    Start 2: CHHelpersTests\n2/4 Test #2: CHHelpersTests ...................   Passed    0.01 sec\n    Start 3: LibKatranTests\n3/4 Test #3: LibKatranTests ...................   Passed    0.26 sec\n    Start 4: VipTests\n4/4 Test #4: VipTests .........................   Passed    0.03 sec\n\n100% tests passed, 0 tests failed out of 4\n\nTotal Test time (real) =   0.31 sec\n$\n```\n\n### BPF\n\nWe have developed a special framework for the BPF program testing. It is based on\n`bpf_prog_test_run`. This framework allow us to specify predefined test fixtures (input and expected output)\nto make sure that for a specified input, the BPF program produces expected output. Test fixtures in our case contain\nbase64 encoded packets. You can check `katran/lib/testing/KatranTestFixtures.h` for examples. To run these tests\nyou just need to run `./os_run_tester.sh` script (this script requires root privileges).\n\n```\n$ ./os_run_tester.sh\n++ pwd\n++ pwd\n+ sudo sh -c '/home/username/katran_oss/build/katran/lib/testing/katran_tester -balancer_prog /home/username/katran_oss/deps/linux/bpfprog/bpf/balancer.bpf.o -test_from_fixtures=true '\nE0318 15:21:07.659436 28440 BpfLoader.cpp:144] Can't read section size for index: 2\nI0318 15:21:07.659950 28440 BpfLoader.cpp:419] Skipping section: 2 of file: /home/username/katran_oss/deps/linux/bpfprog/bpf/balancer.bpf.o\nI0318 15:21:07.692260 28440 BpfLoader.cpp:338] relocation for non existing prog w/ idx 10\nI0318 15:21:07.692790 28440 BpfLoader.cpp:338] relocation for non existing prog w/ idx 14\nI0318 15:21:07.693243 28440 BpfLoader.cpp:338] relocation for non existing prog w/ idx 16\nI0318 15:21:07.693667 28440 BpfLoader.cpp:338] relocation for non existing prog w/ idx 18\nI0318 15:21:07.694093 28440 BpfLoader.cpp:338] relocation for non existing prog w/ idx 20\nI0318 15:21:07.701683 28440 KatranLb.cpp:378] adding new vip: 10.200.1.1:80:17\nI0318 15:21:07.865139 28440 KatranLb.cpp:378] adding new vip: 10.200.1.1:80:6\nI0318 15:21:08.022128 28440 KatranLb.cpp:378] adding new vip: 10.200.1.2:0:6\nI0318 15:21:08.178966 28440 KatranLb.cpp:378] adding new vip: 10.200.1.4:0:6\nI0318 15:21:08.327633 28440 KatranLb.cpp:443] modyfing vip: 10.200.1.4:0:6\nI0318 15:21:08.328361 28440 KatranLb.cpp:378] adding new vip: 10.200.1.3:80:6\nI0318 15:21:08.481209 28440 KatranLb.cpp:378] adding new vip: fc00:1::1:80:6\nI0318 15:21:08.631790 28440 KatranLb.cpp:378] adding new vip: 10.200.1.5:443:17\nI0318 15:21:08.632745 28440 KatranLb.cpp:443] modyfing vip: 10.200.1.5:443:17\nI0318 15:21:08.788859 28440 KatranLb.cpp:378] adding new vip: fc00:1::2:443:17\nI0318 15:21:08.789475 28440 KatranLb.cpp:443] modyfing vip: fc00:1::2:443:17\nI0318 15:21:08.938019 28440 XdpTester.cpp:142] Test: packet to UDP based v4 VIP (and v4 real)                     result: Passed\nI0318 15:21:08.938712 28440 XdpTester.cpp:142] Test: packet to TCP based v4 VIP (and v4 real)                     result: Passed\nI0318 15:21:08.939400 28440 XdpTester.cpp:142] Test: packet to TCP based v4 VIP (and v4 real; any dst ports).     result: Passed\nI0318 15:21:08.940088 28440 XdpTester.cpp:142] Test: packet to TCP based v4 VIP (and v6 real)                     result: Passed\nI0318 15:21:08.940827 28440 XdpTester.cpp:142] Test: packet to TCP based v6 VIP (and v6 real)                     result: Passed\nI0318 15:21:08.941443 28440 XdpTester.cpp:142] Test: v4 ICMP echo-request                                         result: Passed\nI0318 15:21:08.941794 28440 XdpTester.cpp:142] Test: v6 ICMP echo-request                                         result: Passed\nI0318 15:21:08.942143 28440 XdpTester.cpp:142] Test: v4 ICMP dest-unreachabe fragmentation-needed                 result: Passed\nI0318 15:21:08.942488 28440 XdpTester.cpp:142] Test: v6 ICMP packet-too-big                                       result: Passed\nI0318 15:21:08.942817 28440 XdpTester.cpp:142] Test: drop of IPv4 packet w/ options                               result: Passed\nI0318 15:21:08.943133 28440 XdpTester.cpp:142] Test: drop of IPv4 fragmented packet                               result: Passed\nI0318 15:21:08.943462 28440 XdpTester.cpp:142] Test: drop of IPv6 fragmented packet                               result: Passed\nI0318 15:21:08.943747 28440 XdpTester.cpp:142] Test: pass of v4 packet with dst not equal to any configured VIP   result: Passed\nI0318 15:21:08.944027 28440 XdpTester.cpp:142] Test: pass of v6 packet with dst not equal to any configured VIP   result: Passed\nI0318 15:21:08.944326 28440 XdpTester.cpp:142] Test: pass of arp packet                                           result: Passed\nI0318 15:21:08.944638 28440 XdpTester.cpp:142] Test: LRU hit                                                      result: Passed\nI0318 15:21:08.944896 28440 XdpTester.cpp:142] Test: packet #1 dst port hashing only                              result: Passed\nI0318 15:21:08.945171 28440 XdpTester.cpp:142] Test: packet #2 dst port hashing only                              result: Passed\nI0318 15:21:08.945444 28440 XdpTester.cpp:142] Test: ipinip packet                                                result: Passed\nI0318 15:21:08.945725 28440 XdpTester.cpp:142] Test: ipv6inipv6 packet                                            result: Passed\nI0318 15:21:08.945996 28440 XdpTester.cpp:142] Test: ipv4inipv6 packet                                            result: Passed\nI0318 15:21:08.946280 28440 XdpTester.cpp:142] Test: QUIC: long header. Client Initial type                       result: Passed\nI0318 15:21:08.946561 28440 XdpTester.cpp:142] Test: QUIC: long header. 0-RTT Protected                           result: Passed\nI0318 15:21:08.946645 28440 XdpTester.cpp:142] Test: QUIC: long header. v4 vip v6 real                            result: Passed\nI0318 15:21:08.946728 28440 XdpTester.cpp:142] Test: QUIC: long header. v6 vip v6 real                            result: Passed\nI0318 15:21:08.946970 28440 XdpTester.cpp:142] Test: QUIC: short header. no connection id                         result: Passed\nI0318 15:21:08.947049 28440 XdpTester.cpp:142] Test: QUIC: short header w/ connection id                          result: Passed\nI0318 15:21:08.947124 28440 XdpTester.cpp:142] Test: QUIC: short header w/ connection id but non-existing mapping result: Passed\nI0318 15:21:08.947191 28440 katran_tester.cpp:135] Testing counter's sanity. Printing on errors only\nI0318 15:21:08.947327 28440 katran_tester.cpp:156] Testing of counters is complite\n$\n```\n"
        },
        {
          "name": "EXAMPLE.md",
          "type": "blob",
          "size": 20.9345703125,
          "content": "# Examples\n\n### Example of katran library usage -\n\nIn this repository we provide two simple examples ([example](example) and [example_grpc](example_grpc) dirs)\non how katran library can be used in production. They are based on thrift and\ngRPC RPC frameworks. The actual code of this wrappers is simple, they just\nperform one-to-one translation between exposed RPC endpoint to internal methods of katran library.\n\n### Example scenario:\n\nWe are going to use VM to illustrate simple steps of how katran can be used.\nwe will show:\n\n1. How katran can be used in standalone mode.\n2. How katran can be used in shared mode (we are also provide an example of\nroot xdp program).\n3. How katran's healthchecking forwarding plane could be used\n4. We are going to configure one VIP with one real and show tcpdump's output\nto show how packets look on the wire.\n\n### Starting katran\nAs a first step make sure that BPF's jit is enabled (for best possible performance):\nnet.core.bpf_jit_enable sysctl should be set to 1:\n```\nsysctl net.core.bpf_jit_enable=1\n```\n\nWe are going to use gRPC in our example (but all this steps\nare applicable to thrift as well. They are intentionally written\nto look and feel alike (with same flags, same behavior etc). The only\ndifference is where the actual binaries are located).\n\nFirst of all, we need to build cli tool, which will allow us to\ncommunicate with the server. You must have ‘go toolchain’ installed,\nas well as all the required libraries to be able to build gRPC client(https://grpc.io/docs/tutorials/basic/go.html).\nTo build the cli tool, you need to run a script from `example_grpc` dir:\n\n```\n./build_grpc_client.sh\n```\n\nBefore starting katran you need to collect this data (here we are describing manual steps. However, it's highly\nrecommended that for production deployments you collect this data with some form of prerun scripts):\n\n1. __MAC address of default gateway__ : katran offloads all the routing to default gateway. It's doing so\nby sending everything, which we determined as a traffic toward configured VIP, to it.\nyou can get this info w/ a help of this commands:\n\n```\n$ ip route  | grep default\ndefault via 10.0.2.2 dev enp0s3 proto dhcp src 10.0.2.15 metric 100\n$ ip n show | grep 10.0.2.2\n10.0.2.2 dev enp0s3 lladdr 52:54:00:12:35:02 REACHABLE\n```\n\nIn this example mac address of default router is `52:54:00:12:35:02`\n\n2. __You need to know how many receive queues your NIC has and what the mapping between them and cpus__ :\nkatran has built in optimizations, so it would allocate memory only for CPUs\nwhich are actually forwarding traffic. If you do not need this\noptimization - you can omit this step, by specifying that all CPUs are using for forwarding\n(for example: on 4 CPU server just specify -forwarding_cores=\"0,1,2,3\" flag)\n\nIf you want to use memory optimization here is an example that illustrates how to achieve this:\nYou need to be familiar with [RSS](https://github.com/torvalds/linux/blob/master/Documentation/networking/scaling.txt)\nand how [IRQ affinity (\"pinning\")](https://github.com/torvalds/linux/blob/master/Documentation/IRQ-affinity.txt) works.\n\nTo get a list of how many rx queues are currently configured for your interface you can run this command:\n\n```\nethtool -l <interface name>\n```\n\nLet’s imagine that you have a server with 4 CPUs but only one RX queue for you NIC.\nNext step is to get an IRQ number which has been used by your NIC, to do this you can inspect `/proc/interrupts`\n(in this example enp0s3 is an interface)\n\n```\n$ cat /proc/interrupts  | grep enp0s3\n 19:     740509   IO-APIC  19-fasteoi   enp0s3\n```\n\nThe first field is an IRQ number. In this example `enp0s3` is using IRQ 19. If you have a NIC with multiple rx queues, you will\nsee multiple lines in this output.\n\nNext step is to \"pin\" this IRQ to specific CPU (if your NIC has multiple queues (e.g. N)/ you would see multiple IRQs from the previous command -\nyou will need to repeat this step N times. For the best performance you need to make 1 to 1 mapping between CPU and IRQ, and they should not overlap\n(e.g. a single CPU should not be assigned to multiple IRQs)). If you are running irqbalance (default on ubuntu/systemd) - it's recommended to turn it off\n\n```\n$ sudo systemctl stop irqbalance\n$ sudo systemctl disable irqbalance\n```\n\n```sh\n$ cd /proc/irq/19  # 19 is an IRQ number from previous step\n$ sudo  sh -c \"echo 1 > smp_affinity\"  # allow only cpu 0 (smp_affinity is a bitmask) to handle IRQ 19\n```\n\n3. If you use a server with multiple physical CPUs (hence multiple NUMA domains) you need to collect\nCPU to NUMA node mapping (if you want to use NUMA hints for memory allocation,\nto achieve maximum performance. if you dont need this optimization - just omit\n-numa_nodes cli flag)\ne.g. for cpu0 this info (NUMA id) is located here:\n\n```\n$ cat /sys/devices/system/cpu/cpu0/topology/physical_package_id\n```\n\nAfter collecting this mappings between cpus and NUMA nodes, for each cpu in -forwarding_cores list on the same\nposition in -numa_nodes would be ID of NUMA for this cpu.\n\nFor example: We have a server with 4 forwarding cpu 0,1,2,3. cpus 0 and 2 belongs to NUMA node 0\ncpus 1 and 3 - to NUMA node 1. for this scenario cli flags would looks like this:\n-forwarding_cores=\"0,1,2,3\" -numa_nodes=\"0,1,0,1\"\n\nYou need to create tunneling interfaces (katran uses ipip encapsulation for both forwarding and for the healthchecks).\nOn the load balancer side, this tunnels is going to be used for healthchecks forwarding (and if you don't need to run healthchecks from it\nthis step could be omitted (by passing -hc_forwarding=false). This could be desirable if you are using dedicated servers for healthchecking\nand loadbalancer get the state of the world from them (in this case no need to run local healthchecks))\n\nSame interfaces must be configured on the real side, so it would be able to receive ipip packets and decapsulate them.\n\n```\n$ sudo ip link add name ipip0 type ipip external\n$ sudo ip link add name ipip60 type ip6tnl external\n$ sudo ip link set up dev ipip0\n$ sudo ip link set up dev ipip60\n```\n\nIf you need to run bpf program for healthchecks forwarding - you need to\nattach clsact qdisc on egress interface (enp0s3 in this example):\n\n```\n$ sudo tc qd add  dev enp0s3 clsact\n```\n\n4. __Disable Receive Offload__:\nReceive offloads need to be disabled since Katran imposes limits on the maximum size for the packets it processes. If you are running Katran in the driver mode, Large Receive Offload (LRO) must be disabled.\n```\n$ /usr/sbin/ethtool --offload <interface name> lro off\n```\nIf you are running Katran in the generic mode, Generic Receive Offload (GRO) must be disabled.\n```\n$ /usr/sbin/ethtool --offload <interface name> gro off\n```\n\nAfter all this preparations we are ready to start katran_server\n\n#### Starting katran in standalone mode\n\nstandalone mode is when katran is attached to the interface directly (and you wont\nbe able to run any other XDP program on this interface)\n\n```\n$ sudo ./build/example_grpc/katran_server_grpc -balancer_prog ./deps/bpfprog/bpf/balancer.bpf.o -default_mac 52:54:00:12:35:02 -forwarding_cores=0 -healthchecker_prog ./deps/bpfprog/bpf/healthchecking_ipip.o -intf=enp0s3 -ipip_intf=ipip0 -ipip6_intf=ipip60 -lru_size=10000\n```\n\nIn this example:\n1. MAC address of default router is 52:54:00:12:35:02\n2. Only cpu 0 is configured for forwarding (by IRQ affinity).\n3. We want to run healthchecking bpf program.\n4. We are using enp0s3 interface for load balancing (packets would be received on this interface).\n5. ipip0 and ipip60 interfaces has been created prior for healthchecks forwarding.\n6. The size of connection table (number of flows which we are going to track) has been configured to 10000 (default is 8mil).\n\n#### starting katran is shared mode\nThis is a recommended way to run anything XDP related. This method allows you to run multiple XDP programs\nby doing a simple trick: install special \"root\" xdp program that runs programs from the prog_array\n(the only requirement is that programs need to be aware about each other, e.g. first program in a chain in the end of the\nrun must try to run other programs in prog_array). This allows us to run XDP based firewall in front\nof your load balancer.\nIn this repository we provide a simple example of such \"root\" xdp program.\nWe configure a small prog_array and try to run xdp programs from there.\nIt is located in `katran/lib/bpf/xdp_root.c`\n\nFor our example we are going to use ./install_xdproot.sh script from the repository.\nThis script assumes that \"root\" program will be attached to enp0s3 interface\nand it will automatically attach bpffs (BPF file system)\nand attach shared prog_array (array where other XDP programs would register themselves)\n\n```\n./install_xdproot.sh\n```\n\nYou will see that bpffs has been mounted and special file has been created on this\nfilesystem:\n\n```\n$ mount | grep bpf\nbpffs on /sys/fs/bpf type bpf (rw,relatime)\n$ ls -alh /sys/fs/bpf/jmp_eth0\n-rw------- 1 root root 0 Mar 18 18:01 /sys/fs/bpf/jmp_eth0\n```\n\nNow you need to run katran binary with special flags so it will know that it should\nwork in \"shared\" mode. The flags are:\n\n1. `-map_path` - this is a path to file, created by \"root\" xdp program\n\n2. `-prog_pos` - this is a position in prog_array (in our example\nThe size of prog array is 3 elements (defined in \"root\" xdp program)\nand we want our load balancer to be registered as the last program in this\narray (hence the usage of index 2). This allows us to run 2 xdp programs,\nif needed, in front of load balancer.\n\n\n```\n$ sudo ./build/example_grpc/katran_server_grpc -balancer_prog ./deps/bpfprog/bpf/balancer.bpf.o -default_mac 52:54:00:12:35:02 -forwarding_cores=0 -healthchecker_prog ./deps/bpfprog/bpf/healthchecking_ipip.o -intf=enp0s3 -ipip_intf=ipip0 -ipip6_intf=ipip60 -lru_size=10000 -map_path /sys/fs/bpf/jmp_eth0 -prog_pos=2\n```\n\n### Configuring healthchecks forwarding\n\nThis is applicable only if you want to run healthchecks from the load balancer itself\n(e.g. you have started it with -hc_forwarding=true (default))\n\nhealthchecks forwarding works in a way such that you configure socket mark to real server mappings.\nThen if you want to check the health of a vip on a specific real - you send a packet w/ configured socket mark\nIn our example we will use a simple python program to generate such packets (just to show how socket mark could be configured\non a socket with setsockopt).\n\nLet’s imagine that we have two VIPs: `10.100.1.1` and `fc00:100::1`\n\nFor v4 VIP we are using reals with addresses:\n`10.200.200.1`, `10.200.200.2` and  `fc00:200::1`\n\nFor v6 VIP we are using only one real with address: `fc00:200::1`\n\nTo configure so_mark to real mapping, we are going to use go client that we built earlier:\n\n```\n$ cp  ./example_grpc/goclient/bin/main ./katran_goclient\n$ ./katran_goclient -new_hc 10.200.200.1 -somark 1000\nexiting\n$ ./katran_goclient -new_hc 10.200.200.2 -somark 1001\nexiting\n$ ./katran_goclient -new_hc fc00:200::1 -somark 1002\nexiting\n```\n\nTo list all currently configured somark to real mapping you can run this command:\n\n```\n$ ./katran_goclient -list_hc\nsomark: 1000 addr: 10.200.200.1\nsomark: 1001 addr: 10.200.200.2\nsomark: 1002 addr: fc00:200::1\nexiting\n```\n\nNow let’s open second screen and run tcpdump program there with filter \"proto 4 or proto 41\"\nthis filter will match all ipip or ip6ip6 packets.\n\nlets use this simple python script to emulate a program which is doing healthchecks (hc_it_client.py)\n\n```python\n#!/usr/bin/env python\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\nfrom __future__ import unicode_literals\nimport socket\nimport sys\nimport time\n\nSO_MARK = 36\n\n\ndef send_packet(fam, num, dst, fwmark):\n    if fam == \"4\":\n        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n    else:\n        s = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n    s.setsockopt(socket.SOL_SOCKET, SO_MARK, int(fwmark))\n    for _i in range(0, int(num)):\n        s.sendto(\"PING\", (dst, 1337))\n        time.sleep(1)\n\n\ndef main():\n    send_packet(sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4])\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\nIn the first screen lets run our helper python program to generate udp packets toward `10.100.1.1` and `fc00:100::1` (our VIPs)\n\n```\n$ sudo python hc_it_client.py 4 4 10.100.1.1  1000  # 4 packets with dst 10.100.1.1 and socket mark 1000\n$ sudo python hc_it_client.py 4 4 10.100.1.1  1001  # same but with socket mark 1001\n$ sudo python hc_it_client.py 4 4 10.100.1.1  1002  # w/ socket mark 1002\n```\n\nAs expected, in the tcpdump output we can see that depending on socket mark packets are sent as ipip encapsulated\ntoward specific reals\n\n```\n$ sudo tcpdump -ni enp0s3 proto 4 or proto 41\ntcpdump: verbose output suppressed, use -v or -vv for full protocol decode\nlistening on enp0s3, link-type EN10MB (Ethernet), capture size 262144 bytes\n18:25:10.438333 IP 10.0.2.15 > 10.200.200.1: IP 10.0.2.15.55835 > 10.100.1.1.1337: UDP, length 4 (ipip-proto-4)\n18:25:11.439472 IP 10.0.2.15 > 10.200.200.1: IP 10.0.2.15.55835 > 10.100.1.1.1337: UDP, length 4 (ipip-proto-4)\n18:25:12.441076 IP 10.0.2.15 > 10.200.200.1: IP 10.0.2.15.55835 > 10.100.1.1.1337: UDP, length 4 (ipip-proto-4)\n18:25:13.443512 IP 10.0.2.15 > 10.200.200.1: IP 10.0.2.15.55835 > 10.100.1.1.1337: UDP, length 4 (ipip-proto-4)\n18:25:16.003227 IP 10.0.2.15 > 10.200.200.2: IP 10.0.2.15.59985 > 10.100.1.1.1337: UDP, length 4 (ipip-proto-4)\n18:25:17.004897 IP 10.0.2.15 > 10.200.200.2: IP 10.0.2.15.59985 > 10.100.1.1.1337: UDP, length 4 (ipip-proto-4)\n18:25:18.006895 IP 10.0.2.15 > 10.200.200.2: IP 10.0.2.15.59985 > 10.100.1.1.1337: UDP, length 4 (ipip-proto-4)\n18:25:19.008000 IP 10.0.2.15 > 10.200.200.2: IP 10.0.2.15.59985 > 10.100.1.1.1337: UDP, length 4 (ipip-proto-4)\n18:25:21.043145 IP6 fc00:33::2 > fc00:200::1: IP 10.0.2.15.53918 > 10.100.1.1.1337: UDP, length 4\n18:25:22.044215 IP6 fc00:33::2 > fc00:200::1: IP 10.0.2.15.53918 > 10.100.1.1.1337: UDP, length 4\n18:25:23.045364 IP6 fc00:33::2 > fc00:200::1: IP 10.0.2.15.53918 > 10.100.1.1.1337: UDP, length 4\n18:25:24.047293 IP6 fc00:33::2 > fc00:200::1: IP 10.0.2.15.53918 > 10.100.1.1.1337: UDP, length 4\n```\n\nfor v6 vip\n\n```\n$ sudo python hc_it_client.py 6 4 fc00:100::1  1002\n```\n\n```\n18:30:05.300691 IP6 fc00:33::2 > fc00:200::1: IP6 fc00:33::2.37751 > fc00:100::1.1337: UDP, length 4\n18:30:06.302625 IP6 fc00:33::2 > fc00:200::1: IP6 fc00:33::2.37751 > fc00:100::1.1337: UDP, length 4\n18:30:07.304750 IP6 fc00:33::2 > fc00:200::1: IP6 fc00:33::2.37751 > fc00:100::1.1337: UDP, length 4\n18:30:08.306662 IP6 fc00:33::2 > fc00:200::1: IP6 fc00:33::2.37751 > fc00:100::1.1337: UDP, length 4\n```\n\nipv6 in ipv4 encapsulation is not supported (for example you cannot have IPv6 VIP with IPv4 reals. However, you\ncan have IPv4 VIP with IPv6 reals)\n\n###  Configuration of forwarding plane\n\nWe will use simple topology for this example:\n\n```\n<client> ---- <net> ---- <katran> ---- <net> ---- <server>\n```\n\nclient will try to initiate a ssh session w/ a VIP (10.200.200.1)\nand then run scp command to copy a file from there.\n\nWe will have this VIP configured on katran with 1 real (\"server\")\n\nIn our example we will see:\n\n1. How packets forwarded from \"client\" to \"server\".\n2. How katran configured for this to work.\n3. How encapsulation looks like.\n4. How \"server\" must be configured to work properly.\n5. How replies are forward from \"server\" to \"client\" directly (katran works\nin DSR (Direct Sever Return) mode).\n\n\nLet’s start w/ configuration of the server:\n\n1. We need to create ipip interfaces on the server (katran is using ipip as encapsulation\nfor packet forwarding).\n\n```\n$ sudo ip link add name ipip0 type ipip external\n$ sudo ip link add name ipip60 type ip6tnl external\n$ sudo ip link set up dev ipip0\n$ sudo ip link set up dev ipip60\n```\n\n2. Specific to the linux is that for ipip interface to work - it must have\nat least single ip configured. We are going to configure an ip from 127.0.0.0/8 network\nas this is somehow artificial IP (it has local significance) - we could reuse the same\nIP across the fleet -\n\n```\n$ sudo ip a a 127.0.0.42/32 dev ipip0\n```\n\n3. Since most of the time server is connected w/ a single interface - we don't need rp_filter\nfeature:\n\n```\nfor sc in $(sysctl -a | awk '/\\.rp_filter/ {print $1}'); do  echo $sc ; sudo sysctl ${sc}=0; done\n```\n\n4. VIP must be configured on the real\n\n```\n$ sudo ip a a 10.200.200.1/32 dev lo\n```\n\nAfter this 4 steps server is fully configured to receive traffic from the client.\n\nLet’s look on the katran's configuration:\n\n1. First of all you need to configure a VIP. In our case we are interested in traffic\nTowards ip 10.200.200.1 and destination port 22/tcp (ssh). To interact with katran we are using\ngo based client, you can run it w/ `--help` flag to see what options it supports.\n\n```\n$ ./katran_goclient -A -t 10.200.200.1:22\n2018/03/19 12:50:02 Adding service: 10.200.200.1:22 6\n2018/03/19 12:50:02 Vip modified\nexiting\n\n```\nin this example:\n - -A - Add a new service\n - -t - new service is tcp based\n - :22 - we are interested only for traffic w/ dst port 22\n\nIf this was IPv6 based VIP we would need to specify it inside square brackets. for example\n`[fc00::1]:22`\n\n2. we need to add a real to this VIP. In this case: ip address of the real would be 10.0.0.2. As in our example\nVIP will have only single real - we will not configure any weight for this real.\n\n```\n$ ./katran_goclient -a -t 10.200.200.1:22 -r 10.0.0.2\n2018/03/19 12:52:59 Reals modified\nexiting\n```\n\n - -a - add a new real to specified VIP\n - -r - ip address of the real\n\n\nYou can get a list of all VIPs and corresponding real w/ -l flag -\n\n```\n$ ./katran_goclient -l\n2018/03/19 12:54:05 vips len 1\nVIP: 10.200.200.1 Port: 22 Protocol: tcp\nVip's flags:\n-> 10.0.0.2 weight 1\nexiting\n```\n\nNow, let’s initiate a ssh session from the client and look at tcpdump from the server side and\nstats output from katran. At katran, we are going to run client w/ `-s` and `-lru` flags.\nThis flags will show total packet and byte rate. as well as will show connection table hit\npercentage.\n\n```\n./katran_goclient -s -lru\nsummary: 0 pkts/sec. lru hit: 0.00% lru miss: 0.00% (tcp syn: 0.00% tcp non-syn: 0.00% udp: 0.00%) fallback lru hit: 0 pkts/sec\nsummary: 9 pkts/sec. lru hit: 88.89% lru miss: 11.11% (tcp syn: 0.11% tcp non-syn: 0.00% udp: 0.00%) fallback lru hit: 0 pkts/sec\nsummary: 0 pkts/sec. lru hit: 0.00% lru miss: 0.00% (tcp syn: 0.00% tcp non-syn: 0.00% udp: 0.00%) fallback lru hit: 0 pkts/sec\nsummary: 2 pkts/sec. lru hit: 100.00% lru miss: 0.00% (tcp syn: 0.00% tcp non-syn: 0.00% udp: 0.00%) fallback lru hit: 0 pkts/sec\n```\n\nOn the server side, if we run tcpdump, we can see ingress ipip packets and egress regular IP, with a destination of the client -\n\n```\n$ sudo tcpdump -ni enp0s8 proto 4 or host 10.200.200.1\ntcpdump: verbose output suppressed, use -v or -vv for full protocol decode\nlistening on enp0s8, link-type EN10MB (Ethernet), capture size 262144 bytes\n15:48:53.338329 IP 172.16.215.45 > 10.0.0.2: IP 10.0.0.3.11991 > 10.200.200.1.22: Flags [S], seq 3909606823, win 65535, options [mss 1460,nop,wscale 6,sackOK,TS val 10629589 ecr 0], length 0 (ipip-proto-4)\n15:48:53.338438 IP 10.200.200.1.22 > 10.0.0.3.11991: Flags [S.], seq 2576041211, ack 3909606824, win 28960, options [mss 1460,sackOK,TS val 2916608748 ecr 10629589,nop,wscale 6], length 0\n15:48:53.338864 IP 172.16.215.45 > 10.0.0.2: IP 10.0.0.3.11991 > 10.200.200.1.22: Flags [.], ack 1, win 4106, options [nop,nop,TS val 10629590 ecr 2916608748], length 0 (ipip-proto-4)\n15:48:53.339649 IP 172.16.215.45 > 10.0.0.2: IP 10.0.0.3.11991 > 10.200.200.1.22: Flags [P.], seq 1:39, ack 1, win 4106, options [nop,nop,TS val 10629591 ecr 2916608748], length 38 (ipip-proto-4)\n15:48:53.339687 IP 10.200.200.1.22 > 10.0.0.3.11991: Flags [.], ack 39, win 453, options [nop,nop,TS val 2916608749 ecr 10629591], length 0\n15:48:53.350785 IP 10.200.200.1.22 > 10.0.0.3.11991: Flags [P.], seq 1:33, ack 39, win 453, options [nop,nop,TS val 2916608761 ecr 10629591], length 32\n15:48:53.351821 IP 172.16.215.45 > 10.0.0.2: IP 10.0.0.3.11991 > 10.200.200.1.22: Flags [P.], seq 39:1375, ack 33, win 4106, options [nop,nop,TS val 10629603 ecr 2916608761], length 1336 (ipip-proto-4)\n\n```\n\nInteresting part here is the source of IPIP packets – that it is not equal to the source of the load balancer, but instead it's a crafted one,\nwhere first two octets are equal to 172.16 (defined in `katran/lib/bpf/balancer_const.h` and is configurable)\nin IPIP_*_PREFIX macros) and the last two are crafted in a way, that they would be the same for a single tcp flow\nbut different flows will have different source IP. This is designed  intentionally to leverage\nRSS capability of the NIC.\n\nSo in a nutshell, packet flow looks like this:\n\n1. From \"client\" to \"katran\" (which advertises VIP reachability to the network) it's IP packets\nwith a src of \"client\" and dst of the VIP.\n\n2. When \"katran\" receives this packets, it encapsulates them and sends to the real. this packets\nare going to be IPIP encapsulated. inner header would state the same (\"client\" -> \"VIP\").\nThe outer header contains specifically crafted src address and destination would be address of the\n\"server\".\n\n3. When server receives this IPIP packet - it removes outer ip header, and processes original packet\nand while sending replies - it sends it directly from the \"VIP\" to the \"client\".\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.6484375,
          "content": "GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.953125,
          "content": "<p align=\"center\">\n  <img src=\"logo.png\" alt=\"logo\" width=\"50%\"/>\n</p>\n<p align=\"center\">\n  <a href=\"https://opensource.fb.com/support-ukraine\">\n    <img src=\"https://img.shields.io/badge/Support-Ukraine-FFD500?style=flat&labelColor=005BBB\" alt=\"Support Ukraine\" />\n  </a>\n  <a href=\"https://github.com/facebookincubator/katran/actions?workflow=CI\">\n    <img src=\"https://github.com/facebookincubator/katran/actions/workflows/getdeps_linux.yml/badge.svg\" alt=\"CI Status\" />\n  </a>\n</p>\n\n\nKatran is a C++ library and [`BPF`](https://en.wikipedia.org/wiki/Berkeley_Packet_Filter) program to build high-performance\nlayer 4 load balancing forwarding plane. Katran leverages [`XDP infrastructure`](https://www.iovisor.org/technology/xdp)\nfrom the kernel to provide an in-kernel facility for fast packet's processing.\n\n## Katran's key features\n\n1. Blazing fast (especially w/ XDP in driver mode).\n2. Performance scaling linearly with a number of NIC's RX queues.\n3. RSS friendly encapsulation.\n\nSee the detailed features' description below :\n\n## Documentation's sections\n\n1. [`README`](README.md) (this file) - a generic overview of katran.\n2. [`USAGE`](USAGE.md) - the detailed description of how katran's library can be used, configured or changed.\n3. [`DEVELOPING`](DEVELOPING.md) - description of how developing process looks like: how to build and test katran.\n4. [`EXAMPLE`](EXAMPLE.md) - output of how to run provided examples (thrift and [`gRPC services`](https://grpc.io/docs/), which leverage katran library)\n\n## Examples of usage\n\nWe provide simple examples of katran library usage w/ thrift and gRPC endpoints.\nPlease refer to [`Examples`](EXAMPLE.md) for more detailed information.\n\n## Installation\n\nCurrent distribution tested: Ubuntu 20.04\n\nRequirements:\n  - Recent linux kernel (5.6+)\n  - Recent version of clang compiler (6.0+)\n      For ubuntu if unsure run `sudo apt install build-essential`\n\n### build_katran.sh\n\nTo build and install katran library and thrift/gRPC examples - you need to run `build_katran.sh` script.\n\nIt should take care of all the required dependencies.\nIf you need to build it for other Linux distributions, you need to make sure that you have installed:\n    - [`folly`](https://github.com/facebook/folly)\n    - recent version of clang compiler (6.0+)\n    - glog/gtest/gflags/elf libraries\n\nAdditionally, if you want to build examples, [`fbthrift`](https://github.com/facebook/fbthrift) and [`gRPC`](https://github.com/grpc/grpc) must be installed, as well!\n\nWhile we run Meta's CI on CentOS, we do our best to support OSS build on recent Ubuntu versions. If you have any issues with build or need older Ubuntu versions - open github issue or better send us PR :)\n\n## Motivation behind layer 4 load balancing\n\nLayer 4 load balancer (lb) enables to easily scale out Layer7 load balancers (the\nones which terminate TCP sessions). Benefits of L4 lb over other\ntechniques for scaling L7 lb is that it is :\n\n1. compared to DNS it doesn't need to wait for TTL to redirect traffic from failed\nL7 lb.\n\n2. compared to anycast-based solution, L4 lbs are more resilient to the networking\nrelated issues (which triggers mass ECMP reshuffle)/ enable better handling\nof adding/removing of L7 lbs from the pool as well as provide better support for\nunequal load balancing.\n\n## Environment requirements for katran to run\n\nThere are special requirements for katran to work properly. However, we do\nbelieve that most of the potential users of the library can easily satisfy\nthem:\n\n1. katran works only in DSR (direct service response) mode.\n\n2. Network topology should be L3 based (everything above the top of the rack switch should be routed).\nThis is because we are 'offloading' routing decision for sending packets to the real server to first\nrouting device (by unconditionally sending all packets from katran there.)\n\n3. katran doesn't support fragmentation (it cannot forward the fragmented packet, nor it can fragment\nthem by itself if resulting packet size is bigger then MTU). This could be mitigated either by increasing MTU inside your\nnetwork or by changing advertising TCP MSS from L7 lbs (this is recommended even if you have\nincreased MTU, as it will prevent fragmentation related issues towards some of the client.\nFor example, if instead of default TCP MSS 1460 (for ipv4) you will advertise 1450 - it will help clients behind [`PPPoE`](https://en.wikipedia.org/wiki/Point-to-Point_Protocol_over_Ethernet) connection).\n\n4. katran doesn't support packets w/ IP options set.\n\n5. Maximum packet size cannot be bigger than 3.5k (and 1.5k by default).\n\n6. katran is built with the assumption that it's going to be used in a\n\"load balancer on a stick\" scenario: where single interface would be used both for\ntraffic \"from user to L4 lb (ingress)\" and \"from L4 lb to L7 lb (egress).\"\n\n<h3 align=\"center\"> L4 load balancing network topology </h3>\n\n![alt text](imgs/katran_pktflow.png \"Network Topology\")\n\n__Steps:__\n\n1. katran receives packet\n\n2. Checks if the destination of the packet is configured as a\nVIP (virtual IP address - IP address of the service).\n\n3. For an incoming packet toward a VIP - katran is checking if it saw packet from the same\nsession before, and if it has - it sends the packet to the same real (actual server/l7 lb\nwhich then processes/terminates the TCP session).\n\n4. If it's a new session - from 5 tuples in the packet, calculate a hash value.\n\n5. Using this hash value - pick a real server.\n\n6. Update session table with this lookup information so that katran can simply\nlookup this information for the next packet in the session and not calculate the hash again.\n\n7. Encapsulate packet in another IP packet and send to the real.\n\n<h3 align=\"center\"> L4 load balancing failure scenario </h3>\n\n![alt text](imgs/katran_consistency.png \"Failure Scenario\")\n\nAs we use only the data from the packet's headers to calculate a hash value,\nwhich is then used to pick a real server, different L4 lbs are consistent in real server selection,\neven w/o explicit state sharing amongst each other. This feature allows us to restart/drain single\nL4 lb w/o affecting TCP sessions, going to the L7 lbs.\n\n## katran's features description\n\n1. __Fast :__ katran uses XDP for packet forwarding, which allows\nto run packet handling routines right after packet has been received by\nnetwork interface card (NIC) and before kernel had any chance to run (when XDP\nis working in \"driver mode\", katran supports \"generic XDP\" mode of operation\nas well (with some performance degradation compare to \"driver mode\")).\n\n2. __Performance scales linearly with a number of NIC's RX queues :__ The way XDP\nworks is that it invokes BPF program on every received packet, and if your\nNIC has multiple queues, for each of them BPF program will be invoked\nindependently. As katran is completely lockless and uses per-cpu\nversions of BPF maps - it scales linearly.\n\n3. __RSS friendly encapsulation :__ katran is uses ipip encapsulation for packet\nforwarding from L4 lb to L7 lb. However, to be able to work in conjunction with\nRSS on L7 lb receive side, instead of using the same source for every ipip\npacket, katran crafts a special one, in such a way, that different flows will have\ndifferent outer (ipip) source IP, but packets in same flow will always have\nthe same.\n\n4. Fixed size (size is configurable on start) connection tracking table w/ LRU\nstrategy for eviction of old entries.\n\n5. __Modified Maglev hashing for connections :__ It provides us good resiliency in\ncase of failure and excellent load balancing features. The hashing was modified\nto be able to support unequal weights for backend (L7 lbs) servers\n\n6. __No need for busylooping on receive path :__ Your load balancer will barely\nconsume any CPU if there is no traffic to serve.\n\n7. katran (and XDP in general) allows you to run any application w/o any\nperformance penalties on the same server (compare to some of other\n\"kernel bypass\" technologies)\n\n## Trivia\n\nkatran is named (it's actually an alternative name) after __[spiny dogfish shark](https://en.wikipedia.org/wiki/Spiny_dogfish)__.\n\n## License\n\nkatran is GPL-2.0 licensed, as found in the LICENSE file.\n"
        },
        {
          "name": "USAGE.md",
          "type": "blob",
          "size": 11.2138671875,
          "content": "# USAGE\n\n### Usage of katran library.\n\nMain class to interact with L4 forwarding plane is located in\n`lib/KatranLb.h`. katran consists of two parts -\n\n1. BPF code for actual forwarding (which is used in XDP attachment\n  point; code located at lib/bpf/ folder).\n\n2. C++ library to interact w/ BPF forwarding plane.\n\n### Terminology\n\n1. __VIP - Virtual IP Address__ - IP address of the service. However, katran extends\nthis definition of VIP to also include port and\nprotocol (TCP or UDP), aside from just IP address.\n\n2. __Real__ - IP address of backend server, where the traffic would be redirected.\n\n### Example of usage\n\nAll methods in `KatranLb.h` are well documented, but high level overview of\nlibrary usage could be describe in following steps.\n\n1. initialize katran w/ config.\n\n2. load and attach BPF program.\n\n3. optionally (if enabled) add healthchecking endpoints.\n\n4. add VIP to forwarding plane w/ specified params.\n\n5. add reals to the VIP (either in batch or one by one. Reals could have\n  different \"weights\" (to configure how much traffic)).\n\n6. if server goes out of service (e.g. due to maintenance) - it could be done either\nby removing real from VIP or by setting up weight equal to zero for specified\nreal.\n\n\n### initialize katran w/ config\n\nkatran's XDP forwarding plane can work in two modes:\n\n1. __\"standalone\"__ - when we attach katran directly to the interface.\n\n2. __\"shared\"__ - this is a special mode that allows to run multiple XDP programs\nfrom single interface. It is achieved by attaching special\n(\"root\", see example in `lib/bpf/root_kern.h`) XDP program; whole purpose of this\nprogram is to try run another XDP programs from program array, and, as a last\nstep, if there is no registered BPF programs, send packet to the kernel.\n\nSee [Example](EXAMPLE.md) for example of usage in standalone and shared modes.\n\nkatran config structure (from `lib/KatranLbStruct.h`)\n\n```c\nstruct KatranConfig {\n  std::string mainInterface;\n  std::string v4TunInterface;\n  std::string v6TunInterface;\n  std::string balancerProgPath;\n  std::string healthcheckingProgPath;\n  std::vector<uint8_t> defaultMac;\n  uint32_t priority = kDefaultPriority;\n  std::string rootMapPath = kNoExternalMap;\n  uint32_t rootMapPos = kDefaultKatranPos;\n  bool enableHc = true;\n  uint32_t maxVips = kDefaultMaxVips;\n  uint32_t maxReals = kDefaultMaxReals;\n  uint32_t chRingSize = kLbDefaultChRingSize;\n  bool testing = false;\n  uint64_t LruSize = kDefaultLruSize;\n  std::vector<int32_t> forwardingCores;\n  std::vector<int32_t> numaNodes;\n};\n```\n\n(additional description for the field is available in `KatranLbStruct.h` file)\n\n1. `mainInterface` - Name of the main interface; this is where XDP program is\nattached, if katran works in __\"standalone\"__ mode.\n\n2. `v4TunInterface` and `v6TunInterface` - Name of the tunneling interface, if\nforwarding of healthchecks is enabled.\n\n3. `balancerProgPath` - Path to the object file which contains katran's BPF\nforwarding plane.\n\n4. `healthcheckingProgPath` - Path to the object file which contains katran's\nbpf program for healthchecks forwarding.\n\n5. `defaultMac` - mac address of default router. katran \"offloads\" forwarding to\nthe top of the rack switch (by simply sending everything to it by default).\n\n6. `priority` - TC's filter priority for healthchecking BPF program.\n\n7. `rootMapPath` - Path to pinned program array of root XDP program (if katran\n  is being used in __\"shared mode\"__).\n\n8. `rootMapPos` - Position of katran in root program's program array.\n\n9. `enableHc` - Flag to indicate if healthchecking forwarding plane should be\nenabled or not.\n\n10. `maxVips` - Maximum number of VIPs supported by katran. It must be in sync\nwith configuration of forwarding plane (BPF program complie time constants. See BPF specific configs bellow).\n\n11. `maxReals` - Maximum number of Real servers. It must be in sync w/ configuration\nof forwarding plane.\n\n12. `chRingSize` - Size of consistent hashing ring size. It must be in sync w/\nconfiguration of forwarding plane and, since it uses Maglev's hashing\nalgorithm it also must be a prime number.\n\n13. `testing` - flag, which is indicates that this is test run or not. During a test-\nrun KatranLb library doesn't communicate with kernel through syscalls (and\ntherefore doesn't require root privileges. It is used only for unittesting)\n\n14. `LruSize` - size of connection tracking table\n\n15. `forwardingCores` - ID of cpu cores which are responsible for the packet\nforwarding. When you have multi-queue NIC it could have less RX queues configured\nfor [RSS](https://github.com/torvalds/linux/blob/master/Documentation/networking/scaling.rst) than CPUs on the server.\nIn this case [best practice is to \"pin\"/map IRQs of the NIC to the certain CPUs.](https://github.com/torvalds/linux/blob/master/Documentation/core-api/irq/irq-affinity.rst)\nwe store this mapping in this vector.\n\n16. If server has multiple CPU sockets/NUMA domains - you can provide hints\nof forwarding cores to NUMA node mappings\n\n17. `mainInterfaceIndex` - index of the main interface; if not specified (0) then\nwe'll attempt to resolve mainInterface name to the interface index.\n\n18. `hcInterfaceIndex` - index of the healthcheck interface; if not specified (0) then\nwe'll attempt to resolve hcInterface name to the interface index.\n\nAfter populating this KatranConfig structure, next step is to\ncreate an instance of KatranLb:\n```c\nkatran::KatranLb lb(config);\n```\n\n### Load and attach BPF program\n\nAfter you create an instance of KatranLb you need to load BPF program into the\nkernel. At this step BPF in-kernel BPF verifier will run and report either\nsuccess or failure (if BPF program is \"unsafe\" from it's point of view;\nlibrary throws on failure)\n```c\nlb.loadBpfProgs();\n```\n\nWhen program is successfully loaded - it can be attached (depending on the config,\neither to interface directly (in \"standalone\" mode) or registered in program\narray (in \"shared\" mode))\n\n```c\nlb.attachBpfProgs();\n```\n\n### Optionally (if going to be used) add healthchecking endpoints\n\nkatran's healthchecking forwarding plane, if enabled, works in such a way that all\npackets with specified socket mark (which can be added with\nsetsockopt syscall (level SOL_SOCKET, optname SO_MARK)) will be forwarded to\nconfigured real. See [Examples](EXAMPLE.md) for more info on healthchecks.\n\nSocket mark to real server mapping can be added with this helpers\n(in this example all packets with socket mark 100 would be forwarded to\nserver with ip address 10.0.0.1. with socket mark 200 - to fc00::1):\n```c\nlb.addHealthcheckerDst(100, \"10.0.0.1\");\nlb.addHealthcheckerDst(200, \"fc00::1\");\n```\nSee `lib/KatranLb.h` for more info on how to delete this mapping or retrieve\ncurrently configured ones.\n\n### Add VIP to forwarding plane w/ specified params\n\nVIP is described by VipKey class (from `lib/KatranLbStruct.h`)\n\n```c\nclass VipKey {\n public:\n  std::string address;\n  uint16_t port;\n  uint8_t proto;\n ...other methods...\n}\n```\n\nTo add a VIP you need to populate this class with intended values\n(e.g. if you want to configure TCP VIP toward HTTP port this values are going to\nbe:)\n\n```c\nkatran::VipKey vip;\nvip.address = \"10.0.0.1\";\nvip.port = 80;\nvip.proto = IPPROTO_TCP; // IPPROTO_TCP defined in linux/in.h\n```\n\nIf you want to have a service, where all packets to specified IP address (but\ndifferent destination port) must be forwarded to the real servers - you need to\nuse port equal to 0 in VipKey. for example if you configure VipKey as:\n\n```c\nvip.address = \"10.0.0.1\";\nvip.port = 0;\nvip.proto = IPPROTO_TCP;\n```\n\nthen all packets with e.g. destination port 80, 443, 22 etc are going to be\nforwarded to the real servers (by default if there is no match w/ port - packets\nwould be send to the kernel for further processing)\n\n\nNext step is to add a VIP to load balancer:\n\n```c\nlb.addVip(vip);\n```\n\nThe same function can be called w/ optional \"flag\" parameter.\n__‘flag’__ can be used to specify some special conditions of this VIP. Currently the supported options are:\n\n- __0__ - default value. Default vip uses connection table and use\nsrc port and src addresses of the packet for hashing.\n\n- __1__ - `HASH_NO_SRC_PORT`, this flag removes src port from hashing calculation. This\nallows packets from same source address, but different ports to end up on the\nsame destination server (some applications requires this: e.g. nfs or gfs).\n\n- __2__ - `LRU_BYPASS` - disable connection table lookup/update for this VIP.\n\n- __4__ - `QUIC_VIP` - this is a VIP for QUIC protocol. Load balancing is going to be\ndone based on connection-id field. This is not fully stable/actively being developed codepath\n(as IETF QUIC is still in developing stage and standard has not been finalized yet)\n\n- __8__ - `HASH_DPORT_ONLY` - use only destination port for hashing. In this case\nonly destination port is going to be used for hashing, so different clients\n(different src address/src port) with the same destination port would end\nup on the same real server (usually VOIP based protocols needs this)\n\nSee `lib/KatranLb.h` for more information (e.g. how to delete or modify VIP)\n\n### Add reals to the VIP\n\n__Reals__  are described with NewReal struct (from `lib/KatranLbStruct.h`)\n```c\nstruct NewReal {\n  std::string address;\n  uint32_t weight;\n};\n```\n\nFor example, if you want to add a real with ip address `10.10.0.1` and weight 10\nyou need do something similar to:\n\n```c\nkatran::NewReal real;\nreal.address = \"10.10.0.1\";\nreal.weight = 10;\n```\n\nWeight in this context is \"amount of traffic to be sent to this\nreal\". e.g. if server1 has 10x more weight than server2, it will receive 10x\nmore traffic. For best (most fair) load balancing sum of weights of all reals\nfor particular VIP should be equal to consistent hash ring size (by default\n65537; controlled with chRingSize config param).\n\nYou can add real only for already existing VIP.\n\nThere are few ways to add real to the VIP. You can add reals one by one:\n```c\nlb.addRealForVip(real, vip);\n```\n\nIf you want to change weight of already added real, you just run this method\nAgain for that real. e.g.\n\n```c\nreal.weight = 100;\nlb.addRealForVip(real, vip);\n```\n\nHowever, if you need to add (or delete) more than one real, it's better to use\nmodifyRealsForVip method, that allows to do this in a batch\n\n```c\nlb.modifyRealsForVip(katran::ModifyAction::ADD, <vector of reals>, vip);\n```\n\nSee `lib/KatranLb.h` for more information (e.g. how to get/delete reals for VIP)\n\n### maintenance (or how to \"drain\" a real server)\n\nTo \"drain\" a server (so that new traffic won’t be sent there) you can either\nremove real from the vip or (if you are expecting it to be back online soon)\nyou can change its weight to be 0.\n\n```c\nreal.weight = 0;\nlb.addRealForVip(real, vip);\n```\n\nHowever, this drain will affect only new connections towards this real (unless\nVIP was created with LRU_BYPASS flag), all established ones are still going to be\nrouted to this real (so that you can \"drain\" those connections, w/o affecting existing\nsessions)\n\n### Compile time BPF forwarding plane configurations.\n\nkatran contains two major part: userspace for all housekeeping, and BPF program\nwhich is loaded into the kernel. Most of the BPF configuration must\nbe in sync w/ the same params in userspace (e.g. max reals, max vips,\nconsistent hash ring size). bpf related configurations are defined and described\nin `lib/bpf/balancer_consts.h`. You can change them by providing `-D` flag during\nBPF compilation time (e.g. by adding it in lib/Makefile-bpf)\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_bpf_modules_opensource.sh",
          "type": "blob",
          "size": 2.9013671875,
          "content": "#!/usr/bin/env bash\n\n # Copyright (C) 2018-present, Facebook, Inc.\n #\n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; version 2 of the License.\n #\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n #\n # You should have received a copy of the GNU General Public License along\n # with this program; if not, write to the Free Software Foundation, Inc.,\n # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nset -xeo pipefail\n# this script must be run inside katran's project root\n# if you are adding new bpf prog:\n# 1) put it into bpf/ dir\n# 2) edit Makefile (add new prog into always += section)\n\n# By default it is called from the build dir.\n# Optionally BUILD_DIR and SRC_DIR args can be supplied\nusage() {\ncat 1>&2 <<EOF\n\nUsage ${0##*/} [-h|?] [-s SRC_DIR] [-b BUILD_DIR] [-d DEFINES]\n  -s SRC_DIR                     (optional): Path to source dir for katran\n  -b BUILD_DIR                   (optional): Path to build dir for katran\n  -d DEFINES                     (optional): Specify custom defines for bpf program\n  -h|?                                       Show this help message\nEOF\n}\n\nwhile getopts \":hb:s:d:m\" arg; do\n  case $arg in\n    b)\n      BUILD_DIR=\"${OPTARG}\"\n      ;;\n    s)\n      SRC_DIR=\"${OPTARG}\"\n      ;;\n    d)\n      DEFINES=\"${OPTARG}\"\n      ;;\n    h) # Display help.\n      usage\n      exit 0\n      ;;\n  esac\ndone\nshift $((OPTIND -1))\n\n# Validate required parameters\nif [ -z \"${BUILD_DIR-}\" ] ; then\n  echo -e \"[ INFO ] BUILD_DIR is not set. So setting it as default to $(pwd)\"\n  BUILD_DIR=\"$(pwd)/_build/\"\nfi\n\n# Validate required parameters\nif [ -z \"${SRC_DIR-}\" ] ; then\n  echo -e \"[ INFO ] SRC_DIR is not set. So setting it as default to $(pwd) \"\n  SRC_DIR=\"$(pwd)\"\nfi\n\n# Use the clang version based on the one fetched in 'build_katran.sh'\nCLANG_PATH=\"${BUILD_DIR}/deps/clang/clang+llvm-12.0.0-x86_64-linux-gnu-ubuntu-20.04\"\nif [ -f /etc/redhat-release ]; then\n  CLANG_PATH=/usr\nfi\n\nrm -rf \"${BUILD_DIR}/deps/bpfprog\"\nmkdir -p \"${BUILD_DIR}/deps/bpfprog/include\"\nmkdir -p \"${BUILD_DIR}/deps/bpfprog/katran/lib/bpf\"\ncp \"${SRC_DIR}/katran/lib/Makefile-bpf\" \"${BUILD_DIR}/deps/bpfprog/Makefile\"\ncp -r \"${SRC_DIR}/katran/lib/bpf\" \"${BUILD_DIR}/deps/bpfprog/katran/lib/\"\ncp -r \"${SRC_DIR}/katran/lib/linux_includes\" \"${BUILD_DIR}/deps/bpfprog/katran/lib/linux_includes\"\ncp -r \"${SRC_DIR}/katran/decap/bpf\" \"${BUILD_DIR}/deps/bpfprog/\"\ncp \"${SRC_DIR}\"/katran/lib/linux_includes/* \"${BUILD_DIR}/deps/bpfprog/include/\"\ncd \"${BUILD_DIR}/deps/bpfprog\" && LD_LIBRARY_PATH=\"${CLANG_PATH}/lib\" make \\\n  EXTRA_CFLAGS=\"${DEFINES}\" \\\n  LLC=\"${CLANG_PATH}/bin/llc\" CLANG=\"${CLANG_PATH}/bin/clang\"\necho \"BPF BUILD COMPLETED\"\n"
        },
        {
          "name": "build_katran.sh",
          "type": "blob",
          "size": 19.7607421875,
          "content": "#!/usr/bin/env bash\n\n # Copyright (C) 2018-present, Facebook, Inc.\n #\n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; version 2 of the License.\n #\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n #\n # You should have received a copy of the GNU General Public License along\n # with this program; if not, write to the Free Software Foundation, Inc.,\n # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nset -xeo pipefail\nNCPUS=$(nproc)\n# default to 4 threads for a reasonable build speed (e.g in travis)\nif (( NCPUS < 4 )); then\n  NCPUS=4\nfi\nROOT_DIR=$(pwd)\n\n# Useful constants\nCOLOR_RED=\"\\033[0;31m\"\nCOLOR_GREEN=\"\\033[0;32m\"\nCOLOR_OFF=\"\\033[0m\"\n\nusage() {\ncat 1>&2 <<EOF\n\nUsage ${0##*/} [-h|?] [-p PATH] [-i INSTALL_DIR]\n  -p BUILD_DIR                       (optional): Path to the base dir for katran\n  -i INSTALL_DIR                     (optional): Install prefix path\n  -v                                 (optional): make it verbose (even more)\n  -h|?                                           Show this help message\nEOF\n}\n\nwhile getopts \":hp:i:v\" arg; do\n  case $arg in\n    p)\n      BUILD_DIR=\"${OPTARG}\"\n      ;;\n    i)\n      INSTALL_DIR=\"${OPTARG}\"\n      ;;\n    v)\n      VERBOSE=1\n      ;;\n    h | *) # Display help.\n      usage\n      exit 0\n      ;;\n  esac\ndone\n\n# Validate required parameters\nif [ -z \"${BUILD_DIR-}\" ] ; then\n  echo -e \"${COLOR_RED}[ INFO ] Build dir is not set. So going to build into _build ${COLOR_OFF}\"\n  BUILD_DIR=${ROOT_DIR}/_build\n  mkdir -p \"$BUILD_DIR\"\nfi\n\ncd \"$BUILD_DIR\" || exit\nDEPS_DIR=$BUILD_DIR/deps\nmkdir -p \"$DEPS_DIR\" || exit\n\nif [ -z \"${INSTALL_DIR-}\" ] ; then\n  echo -e \"${COLOR_RED}[ INFO ] Install dir is not set. So going to install into ${DEPS_DIR} ${COLOR_OFF}\"\n  INSTALL_DIR=${DEPS_DIR}\n  mkdir -p \"$INSTALL_DIR\"\nfi\n\nif [ -n \"$FORCE_INSTALL\" ]; then\n    rm -rf ./deps\n    rm -rf \"$BUILD_DIR\"\nfi\n\nif [ -n \"$BUILD_EXAMPLE_THRIFT\" ]; then\n    BUILD_EXAMPLE_THRIFT=1\n    export CMAKE_BUILD_EXAMPLE_THRIFT=\"$BUILD_EXAMPLE_THRIFT\"\nfi\n\nif [ -z \"$BUILD_EXAMPLE_GRPC\" ]; then\n    BUILD_EXAMPLE_GRPC=1\n    export CMAKE_BUILD_EXAMPLE_GRPC=\"$BUILD_EXAMPLE_GRPC\"\nfi\n\nif [ -n \"$BUILD_TOOLS\" ]; then\n    BUILD_TOOLS=1\n    export CMAKE_BUILD_TOOLS=\"$BUILD_TOOLS\"\nfi\n\nif [ -n \"$BUILD_KATRAN_TPR\" ]; then\n    BUILD_KATRAN_TPR=1\n    export CMAKE_BUILD_KATRAN_TPR=\"$BUILD_KATRAN_TPR\"\nfi\n\nget_dev_tools() {\n    if [ -f /etc/redhat-release ]; then\n        sudo yum install -y epel-release\n        sudo yum-config-manager --enable PowerTools\n        sudo yum groupinstall -y \"Development Tools\"\n        sudo yum install -y cmake\n    else\n        sudo apt-get update\n        sudo apt-get install -y   \\\n            build-essential       \\\n            cmake                 \\\n            libbison-dev          \\\n            bison                 \\\n            flex                  \\\n            bc                    \\\n            libbpfcc-dev\n    fi\n}\n\nget_required_libs() {\n    if [ -f /etc/redhat-release ]; then\n        sudo yum install -y \\\n            git \\\n            elfutils-libelf-devel \\\n            libmnl-devel \\\n            xz-devel \\\n            re2-devel \\\n            libatomic-static \\\n            libsodium-static \\\n            fmt-devel\n    else\n        sudo apt-get install -y    \\\n            libgoogle-glog-dev     \\\n            libgflags-dev          \\\n            libelf-dev             \\\n            libmnl-dev             \\\n            liblzma-dev            \\\n            libre2-dev             \\\n            libsodium-dev          \\\n            libfmt-dev\n    fi\n}\n\n\nget_libevent() {\n    if [ ! -f /etc/redhat-release ]; then\n        # not needed on ubuntu as it is available as a package\n        return\n    fi\n\n    if [ -f \"${DEPS_DIR}/libevent_installed\" ]; then\n        return\n    fi\n\n    EVENT_DIR=$DEPS_DIR/event\n    EVENT_BUILD_DIR=$DEPS_DIR/event/_build\n    rm -rf \"$EVENT_DIR\"\n    pushd .\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning libevent repo ${COLOR_OFF}\"\n    git clone https://github.com/libevent/libevent --depth 1 --branch release-2.1.11-stable \"$EVENT_DIR\"\n    echo -e \"${COLOR_GREEN}[ INFO ] Building libevent ${COLOR_OFF}\"\n    mkdir -p \"$EVENT_BUILD_DIR\"\n    cd \"$EVENT_BUILD_DIR\" || exit\n\n    cmake -DEVENT__DISABLE_SAMPLES=on -DEVENT__DISABLE_TESTS=on -DCXX_STD=gnu++17       \\\n      -DCMAKE_BUILD_TYPE=RelWithDebInfo             \\\n      -DCMAKE_PREFIX_PATH=\"$INSTALL_DIR\"            \\\n      -DCMAKE_INSTALL_PREFIX=\"$INSTALL_DIR\"         \\\n      ..\n\n    make -j \"$NCPUS\"\n    make install\n    echo -e \"${COLOR_GREEN}Libevent is installed ${COLOR_OFF}\"\n    popd\n    touch \"${DEPS_DIR}/libevent_installed\"\n}\n\nget_gflags() {\n    if [ ! -f /etc/redhat-release ]; then\n        # not needed on ubuntu as it is available as a package\n        return\n    fi\n\n    if [ -f \"${DEPS_DIR}/gflags_installed\" ]; then\n        return\n    fi\n    GFLAGS_DIR=$DEPS_DIR/gflags\n    GFLAGS_BUILD_DIR=$DEPS_DIR/gflags/_build\n    rm -rf \"$GFLAGS_DIR\"\n    pushd .\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning gflags repo ${COLOR_OFF}\"\n    git clone https://github.com/gflags/gflags --depth 1 --branch v2.2.2 \"$GFLAGS_DIR\"\n    echo -e \"${COLOR_GREEN}[ INFO ] Building gflags ${COLOR_OFF}\"\n    mkdir -p \"$GFLAGS_BUILD_DIR\"\n    cd \"$GFLAGS_BUILD_DIR\" || exit\n\n    cmake  -DCXX_STD=gnu++17                        \\\n      -DCMAKE_BUILD_TYPE=RelWithDebInfo             \\\n      -DCMAKE_PREFIX_PATH=\"$INSTALL_DIR\"            \\\n      -DCMAKE_INSTALL_PREFIX=\"$INSTALL_DIR\"         \\\n      ..\n\n    make -j \"$NCPUS\"\n    make install\n    echo -e \"${COLOR_GREEN}Gflags is installed ${COLOR_OFF}\"\n    popd\n    touch \"${DEPS_DIR}/gflags_installed\"\n}\n\nget_fast_float() {\n    if [ -f \"${DEPS_DIR}/fast_float_installed\" ]; then\n        export FASTFLOAT_INCLUDE_DIR=\"$DEPS_DIR/fast_float/include\"\n        return\n    fi\n    \n    FAST_FLOAT_DIR=$DEPS_DIR/fast_float\n    rm -rf \"$FAST_FLOAT_DIR\"\n    pushd .\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning fast_float repo ${COLOR_OFF}\"\n    git clone https://github.com/fastfloat/fast_float --depth 1 \"$FAST_FLOAT_DIR\"\n\n    echo -e \"${COLOR_GREEN}Fast_float is set up. Include directory: ${FASTFLOAT_INCLUDE_DIR} ${COLOR_OFF}\"\n    popd\n    touch \"${DEPS_DIR}/fast_float_installed\"\n    \n    # Set the include directory\n    export FASTFLOAT_INCLUDE_DIR=\"$FAST_FLOAT_DIR/include\"\n}\n\nget_folly() {\n    if [ -f \"${DEPS_DIR}/folly_installed\" ]; then\n        return\n    fi\n    FOLLY_DIR=$DEPS_DIR/folly\n    FOLLY_BUILD_DIR=$DEPS_DIR/folly/build\n\n    rm -rf \"$FOLLY_DIR\"\n    if [ -f /etc/redhat-release ]; then\n        sudo yum install -y \\\n            boost-devel \\\n            boost-static \\\n            lz4-devel \\\n            xz-devel \\\n            snappy-devel \\\n            zlib-devel \\\n            zlib-static \\\n            glog-devel \\\n            python3-scons \\\n            double-conversion-devel \\\n            openssl-devel \\\n            libdwarf-devel \\\n            elfutils-devel elfutils-devel-static \\\n            libunwind-devel \\\n            bzip2-devel \\\n            binutils-devel\n    else\n        sudo apt-get install -y       \\\n            g++                       \\\n            automake                  \\\n            autoconf                  \\\n            autoconf-archive          \\\n            libtool                   \\\n            libboost-all-dev          \\\n            libevent-dev              \\\n            libdouble-conversion-dev  \\\n            libgoogle-glog-dev        \\\n            libgflags-dev             \\\n            liblz4-dev                \\\n            liblzma-dev               \\\n            libsnappy-dev             \\\n            make                      \\\n            zlib1g-dev                \\\n            binutils-dev              \\\n            libjemalloc-dev           \\\n            libssl-dev                \\\n            pkg-config                \\\n            libiberty-dev             \\\n            libunwind8-dev            \\\n            libdwarf-dev\n    fi\n\n    pushd .\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning folly repo ${COLOR_OFF}\"\n    git clone https://github.com/facebook/folly --depth 1 \"$FOLLY_DIR\"\n    echo -e \"${COLOR_GREEN}[ INFO ] Building Folly ${COLOR_OFF}\"\n    mkdir -p \"$FOLLY_BUILD_DIR\"\n    cd \"$FOLLY_BUILD_DIR\" || exit\n\n    cmake  -DCXX_STD=gnu++17                        \\\n      -DCMAKE_BUILD_TYPE=RelWithDebInfo             \\\n      -DCMAKE_PREFIX_PATH=\"$INSTALL_DIR\"            \\\n      -DCMAKE_INSTALL_PREFIX=\"$INSTALL_DIR\"         \\\n      -DFASTFLOAT_INCLUDE_DIR=\"$FASTFLOAT_INCLUDE_DIR\" \\\n      ..\n    make -j \"$NCPUS\"\n    make install\n    echo -e \"${COLOR_GREEN}Folly is installed ${COLOR_OFF}\"\n    popd\n    touch \"${DEPS_DIR}/folly_installed\"\n}\n\nget_clang() {\n    if [ -f \"${DEPS_DIR}/clang_installed\" ]; then\n        return\n    fi\n\n    if [ -f /etc/redhat-release ]; then\n        sudo yum install -y clang llvm\n    else\n        CLANG_DIR=$DEPS_DIR/clang\n        rm -rf \"$CLANG_DIR\"\n        pushd .\n        mkdir -p \"$CLANG_DIR\"\n        cd \"$CLANG_DIR\"\n        echo -e \"${COLOR_GREEN}[ INFO ] Downloading Clang ${COLOR_OFF}\"\n        # download platform appropriate version (9.0+) of clang from https://github.com/llvm/llvm-project/releases/\n        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/clang+llvm-12.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz\n        tar xvf ./clang+llvm-12.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz\n        echo -e \"${COLOR_GREEN}Clang is installed ${COLOR_OFF}\"\n        popd\n    fi\n    touch \"${DEPS_DIR}/clang_installed\"\n}\n\nget_gtest() {\n    if [ -f \"${DEPS_DIR}/googletest_installed\" ]; then\n        return\n    fi\n    GTEST_DIR=${DEPS_DIR}/googletest\n    GTEST_BUILD_DIR=${DEPS_DIR}/googletest/build\n\n    rm -rf \"$GTEST_DIR\"\n    pushd .\n    mkdir -p \"$GTEST_DIR\"\n    cd \"$GTEST_DIR\"\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning googletest repo ${COLOR_OFF}\"\n    git clone --depth 1 https://github.com/google/googletest\n    mkdir -p \"$GTEST_BUILD_DIR\"\n    cd \"$GTEST_BUILD_DIR\"\n    cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo         \\\n      -DCMAKE_PREFIX_PATH=\"$INSTALL_DIR\"            \\\n      -DCMAKE_INSTALL_PREFIX=\"$INSTALL_DIR\"         \\\n      ../googletest\n    make install\n    echo -e \"${COLOR_GREEN}googletest is installed ${COLOR_OFF}\"\n    popd\n    touch \"${DEPS_DIR}/googletest_installed\"\n}\n\nget_mstch() {\n    if [ -f \"${DEPS_DIR}/mstch_installed\" ]; then\n        return\n    fi\n    MSTCH_DIR=${DEPS_DIR}/mstch\n    MSTCH_BUILD_DIR=${DEPS_DIR}/mstch/build\n    rm -rf \"${MSTCH_DIR}\"\n    pushd .\n    cd \"${DEPS_DIR}\"\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning mstch repo ${COLOR_OFF}\"\n    git clone --depth 1 https://github.com/no1msd/mstch\n    mkdir -p \"${MSTCH_BUILD_DIR}\"\n    cd \"${MSTCH_BUILD_DIR}\" || exit\n    cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo         \\\n      -DCMAKE_PREFIX_PATH=\"$INSTALL_DIR\"            \\\n      -DCMAKE_INSTALL_PREFIX=\"$INSTALL_DIR\"         \\\n      ..\n    make -j \"$NCPUS\"\n    make install\n    popd\n    echo -e \"${COLOR_GREEN}mstch is installed ${COLOR_OFF}\"\n    touch \"${DEPS_DIR}/mstch_installed\"\n}\n\nget_fizz() {\n    if [ -f \"${DEPS_DIR}/fizz_installed\" ]; then\n        return\n    fi\n    FIZZ_DIR=$DEPS_DIR/fizz\n    FIZZ_BUILD_DIR=$DEPS_DIR/fizz/build/\n    rm -rf \"${FIZZ_DIR}\"\n    pushd .\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning fizz repo ${COLOR_OFF}\"\n    git clone https://github.com/facebookincubator/fizz \"$FIZZ_DIR\"\n    echo -e \"${COLOR_GREEN}[ INFO ] install dependencies ${COLOR_OFF}\"\n\n    echo -e \"${COLOR_GREEN}Building Fizz ${COLOR_OFF}\"\n    mkdir -p \"$FIZZ_BUILD_DIR\"\n    cd \"$FIZZ_BUILD_DIR\" || exit\n    cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo       \\\n      -DCMAKE_PREFIX_PATH=\"$INSTALL_DIR\"     \\\n      -DCMAKE_INSTALL_PREFIX=\"$INSTALL_DIR\"  \\\n      -DBUILD_TESTS=OFF                      \\\n      \"$FIZZ_DIR/fizz\"\n    make -j \"$NCPUS\"\n    make install\n    echo -e \"${COLOR_GREEN}Fizz is installed ${COLOR_OFF}\"\n    popd\n    echo -e \"${COLOR_GREEN}Fizz is installed ${COLOR_OFF}\"\n    touch \"${DEPS_DIR}/fizz_installed\"\n}\n\nget_wangle() {\n    if [ -f \"${DEPS_DIR}/wangle_installed\" ]; then\n        return\n    fi\n    WANGLE_DIR=$DEPS_DIR/wangle\n    WANGLE_BUILD_DIR=$DEPS_DIR/wangle/build/\n    rm -rf \"$WANGLE_DIR\"\n    pushd .\n    cd \"${DEPS_DIR}\"\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning wangle repo ${COLOR_OFF}\"\n    git clone --depth 1 https://github.com/facebook/wangle \"$WANGLE_DIR\"\n    mkdir -p \"$WANGLE_BUILD_DIR\"\n    cd \"$WANGLE_BUILD_DIR\" || exit\n    echo -e \"${COLOR_GREEN}Building Wangle ${COLOR_OFF}\"\n    cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo         \\\n      -DCMAKE_PREFIX_PATH=\"$INSTALL_DIR\"            \\\n      -DCMAKE_INSTALL_PREFIX=\"$INSTALL_DIR\"         \\\n      ../wangle\n    make -j \"$NCPUS\"\n    make install\n    echo -e \"${COLOR_GREEN}wangle is installed ${COLOR_OFF}\"\n    popd\n    touch \"${DEPS_DIR}/wangle_installed\"\n}\n\nget_zstd() {\n    if [ -f \"${DEPS_DIR}/zstd_installed\" ]; then\n        return\n    fi\n    ZSTD_DIR=$DEPS_DIR/zstd\n    rm -rf \"$ZSTD_DIR\"\n    pushd .\n    cd \"$DEPS_DIR\"\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning zstd repo ${COLOR_OFF}\"\n    git clone --depth 1 https://github.com/facebook/zstd --branch v1.3.7\n    cd \"$ZSTD_DIR\"\n    make -j \"$NCPUS\"\n    sudo make install\n    echo -e \"${COLOR_GREEN}zstd is installed ${COLOR_OFF}\"\n    popd\n    touch \"${DEPS_DIR}/zstd_installed\"\n}\n\nget_fbthrift() {\n    if [ -f \"$DEPS_DIR/fbthrift_installed\" ]; then\n        return\n    fi\n    FBTHRIFT_DIR=$DEPS_DIR/fbthrift\n    FBTHRIFT_BUILD_DIR=$DEPS_DIR/fbthrift/build/\n    rm -rf \"$FBTHRIFT_DIR\"\n    # install fb thrift specific deps\n    sudo apt-get install -y \\\n        libkrb5-dev \\\n        flex\n    pushd .\n    cd \"$DEPS_DIR\"\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning fbthrift repo ${COLOR_OFF}\"\n    git clone --depth 1 https://github.com/facebook/fbthrift || true\n    mkdir -p \"$FBTHRIFT_BUILD_DIR\"\n    cd \"$FBTHRIFT_BUILD_DIR\"\n    cmake -DCXX_STD=gnu++17                         \\\n      -DCMAKE_BUILD_TYPE=RelWithDebInfo             \\\n      -DCMAKE_PREFIX_PATH=\"$INSTALL_DIR\"            \\\n      -DCMAKE_INSTALL_PREFIX=\"$INSTALL_DIR\"         \\\n      ..\n\n    make -j \"$NCPUS\"\n    make install\n    echo -e \"${COLOR_GREEN}fbthrift is installed ${COLOR_OFF}\"\n    popd\n    touch \"$DEPS_DIR/fbthrift_installed\"\n}\n\nget_rsocket() {\n    if [ -f \"$DEPS_DIR/rsocket_installed\" ]; then\n        return\n    fi\n    RSOCKET_DIR=$DEPS_DIR/rsocket-cpp\n    RSOCKET_BUILD_DIR=$DEPS_DIR/rsocket-cpp/build/\n    rm -rf \"$RSOCKET_DIR\"\n    pushd .\n    cd \"$DEPS_DIR\"\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning rsocket repo ${COLOR_OFF}\"\n    git clone --depth 1 https://github.com/rsocket/rsocket-cpp || true\n    mkdir -p \"$RSOCKET_BUILD_DIR\"\n    cd \"$RSOCKET_BUILD_DIR\" || exit\n    cmake -DCXX_STD=gnu++17                         \\\n      -DCMAKE_BUILD_TYPE=RelWithDebInfo             \\\n      -DCMAKE_PREFIX_PATH=\"$INSTALL_DIR\"            \\\n      -DCMAKE_INSTALL_PREFIX=\"$INSTALL_DIR\"         \\\n      ..\n    make -j \"$NCPUS\"\n    make install\n    echo -e \"${COLOR_GREEN}rsocket is installed ${COLOR_OFF}\"\n    popd\n    touch \"$DEPS_DIR/rsocket_installed\"\n}\n\nget_grpc() {\n    if [ -f \"${DEPS_DIR}/grpc_installed\" ]; then\n        return\n    fi\n    GO_INSTALLED=$(which go || true)\n    if [ -z \"$GO_INSTALLED\" ]; then\n        if [ -f /etc/centos-release ]; then\n            sudo yum install -y golang\n        else\n            sudo apt-get install -y golang\n        fi\n    fi\n    GRPC_DIR=$DEPS_DIR/grpc\n    GRPC_BUILD_DIR=$DEPS_DIR/grpc/_build/\n    rm -rf \"$GRPC_DIR\"\n    pushd .\n    cd \"$DEPS_DIR\"\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning grpc repo ${COLOR_OFF}\"\n    # pin specific release of grpc to avoid build failures\n    # with new changes in grpc/absl\n    git clone  --depth 1 https://github.com/grpc/grpc --branch v1.49.1\n    # this is to deal with a nested dir\n    cd grpc\n    git submodule update --init\n    mkdir -p \"$GRPC_BUILD_DIR\"\n    cd \"$GRPC_BUILD_DIR\" || exit\n    cmake -DCXX_STD=gnu++17                         \\\n      -DCMAKE_CXX_FLAGS=-Wno-unused-result          \\\n      -DCMAKE_BUILD_TYPE=RelWithDebInfo             \\\n      -DCMAKE_PREFIX_PATH=\"$INSTALL_DIR\"            \\\n      -DCMAKE_INSTALL_PREFIX=\"$INSTALL_DIR\"         \\\n      -DgRPC_BUILD_GRPC_CSHARP_PLUGIN=OFF           \\\n      -DgRPC_BUILD_GRPC_NODE_PLUGIN=OFF             \\\n      -DgRPC_BUILD_GRPC_OBJECTIVE_C_PLUGIN=OFF      \\\n      -DgRPC_BUILD_GRPC_PHP_PLUGIN=OFF              \\\n      -DgRPC_BUILD_GRPC_RUBY_PLUGIN=OFF             \\\n      ..\n\n    make -j \"$NCPUS\"\n    make install\n    cd \"$GRPC_DIR\"/third_party/protobuf\n    make && make install\n    echo -e \"${COLOR_GREEN}grpc is installed ${COLOR_OFF}\"\n    popd\n    touch \"${DEPS_DIR}/grpc_installed\"\n}\n\nget_libbpf() {\n    if [ -f \"${DEPS_DIR}/libbpf_installed\" ]; then\n        return\n    fi\n    LIBBPF_DIR=\"${DEPS_DIR}/libbpf\"\n    rm -rf \"${LIBBPF_DIR}\"\n    pushd .\n    cd \"${DEPS_DIR}\"\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning libbpf repo ${COLOR_OFF}\"\n    git clone --depth 1 https://github.com/libbpf/libbpf || true\n    cd \"${LIBBPF_DIR}\"/src\n    make\n    #on centos the cp -fpR used was throwing an error, so just use a regular cp -R\n    if [ -f /etc/redhat-release ]; then\n        sed -i 's/cp -fpR/cp -R/g' Makefile\n    fi\n    DESTDIR=\"$INSTALL_DIR\" make install\n    cd \"$LIBBPF_DIR\"\n    cp -r include/uapi \"$INSTALL_DIR\"/usr/include/bpf/\n    cd \"$INSTALL_DIR\"/usr/include/bpf\n    # override to use local bpf.h instead of system wide\n    sed -i 's/#include <linux\\/bpf.h>/#include <bpf\\/uapi\\/linux\\/bpf.h>/g' ./bpf.h\n    sed -i 's/#include <linux\\/bpf.h>/#include <bpf\\/uapi\\/linux\\/bpf.h>/g' ./libbpf.h\n    sed -i 's/#include <linux\\/bpf.h>/#include <bpf\\/uapi\\/linux\\/bpf.h>/g' ./libbpf_legacy.h\n    # Move to CMAKE_PREFIX_PATH so that cmake can easily discover them\n    cd \"$INSTALL_DIR\"\n    mv \"$INSTALL_DIR\"/usr/include/bpf \"$INSTALL_DIR\"/include/\n    cp -r \"$INSTALL_DIR\"/usr/lib64/* \"$INSTALL_DIR\"/lib/\n    echo -e \"${COLOR_GREEN}libbpf is installed ${COLOR_OFF}\"\n    popd\n    touch \"${DEPS_DIR}/libbpf_installed\"\n}\n\nget_bpftool() {\n    if [ -f \"${DEPS_DIR}/bpftool_installed\" ]; then\n        return\n    fi\n    BPFTOOL_DIR=\"${DEPS_DIR}/bpftool\"\n    rm -rf \"${BPFTOOL_DIR}\"\n    pushd .\n    cd \"${DEPS_DIR}\"\n    echo -e \"${COLOR_GREEN}[ INFO ] Cloning bpftool repo ${COLOR_OFF}\"\n    git clone --recurse-submodules https://github.com/libbpf/bpftool.git || true\n    cd \"${BPFTOOL_DIR}\"/src\n    make\n    cp \"${BPFTOOL_DIR}\"/src/bpftool \"${INSTALL_DIR}/bin/bpftool\"\n    echo -e \"${COLOR_GREEN}bpftool is installed ${COLOR_OFF}\"\n    popd\n    touch \"${DEPS_DIR}/bpftool_installed\"\n}\n\n\nbuild_katran() {\n    pushd .\n    KATRAN_BUILD_DIR=$BUILD_DIR/build\n    rm -rf \"$KATRAN_BUILD_DIR\"\n    mkdir -p \"$KATRAN_BUILD_DIR\"\n\n    cd \"$KATRAN_BUILD_DIR\" || exit\n    LIB_BPF_PREFIX=\"$INSTALL_DIR\"\n\n    # Base set of CMake flags\n    CMAKE_FLAGS=\"-DCMAKE_PREFIX_PATH=$INSTALL_DIR \\\n    -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \\\n    -DCMAKE_BUILD_TYPE=RelWithDebInfo \\\n    -DPKG_CONFIG_USE_CMAKE_PREFIX_PATH=ON \\\n    -DLIB_BPF_PREFIX=$LIB_BPF_PREFIX \\\n    -DCMAKE_CXX_STANDARD=17 \\\n    -DBUILD_TESTS=On\"\n\n    # Append verbose flag if VERBOSE is set to 1\n    if [ \"$VERBOSE\" -eq 1 ]; then\n        CMAKE_FLAGS=\"$CMAKE_FLAGS -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON\"\n    fi\n\n    # Run CMake with the constructed flags\n    cmake $CMAKE_FLAGS ../..\n\n    make -j \"$NCPUS\"\n    popd\n    \"${ROOT_DIR}\"/build_bpf_modules_opensource.sh \\\n        -s \"${ROOT_DIR}\"                          \\\n        -b \"${BUILD_DIR}\"                         \\\n        2>/dev/null\n}\n\ntest_katran() {\n    pushd .\n    cd \"$BUILD_DIR\"/build/katran/lib/tests/\n    ctest -v ./*\n    cd ../testing/\n    ctest -v ./*\n    popd\n}\n\nget_dev_tools\nget_required_libs\nget_libevent\nget_gflags\nget_fast_float\nget_folly\nget_clang\nget_gtest\nget_libbpf\nif [ \"$BUILD_EXAMPLE_THRIFT\" -eq 1 ]; then\n  get_mstch\n  get_fizz\n  get_wangle\n  get_zstd\n  get_rsocket\n  get_fbthrift\nfi\nif [ \"$BUILD_EXAMPLE_GRPC\" -eq 1 ]; then\n  get_grpc\nfi\nif [ \"$BUILD_KATRAN_TPR\" -eq 1 ]; then\n  get_bpftool\nfi\nif [ -z \"$INSTALL_DEPS_ONLY\" ]; then\n  build_katran\n  test_katran\nfi\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "collect_debug_lb.sh",
          "type": "blob",
          "size": 0.9521484375,
          "content": "#!/usr/bin/env bash\n # Copyright (C) 2019-present, Facebook, Inc.\n #\n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; version 2 of the License.\n #\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n #\n # You should have received a copy of the GNU General Public License along\n # with this program; if not, write to the Free Software Foundation, Inc.,\n # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\necho \"### links ###\"\nip link show\necho \"### default route ###\"\nip route show | grep default\necho \"### neighbors ###\"\nip neighbor show\necho \"### ps ###\"\nps ax  | grep katran\necho \"### sysctl ###\"\nsysctl -a 2>&1 | grep bpf | grep -v denied\n"
        },
        {
          "name": "collect_debug_real.sh",
          "type": "blob",
          "size": 0.9619140625,
          "content": "#!/usr/bin/env bash\n # Copyright (C) 2019-present, Facebook, Inc.\n #\n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; version 2 of the License.\n #\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n #\n # You should have received a copy of the GNU General Public License along\n # with this program; if not, write to the Free Software Foundation, Inc.,\n # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\necho \"### links ###\"\nip link show\necho \"### default route ###\"\nip route show | grep default\necho \"### neighbors ###\"\nip neighbor show\necho \"### sysctl ###\"\nsysctl -a 2>&1 | grep rp_filter | grep -v denied\necho \"### iptables ###\"\nsudo iptables -vnL\n"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "example_grpc",
          "type": "tree",
          "content": null
        },
        {
          "name": "imgs",
          "type": "tree",
          "content": null
        },
        {
          "name": "install_xdproot.sh",
          "type": "blob",
          "size": 1.490234375,
          "content": "#!/usr/bin/env bash\n\n # Copyright (C) 2018-present, Facebook, Inc.\n #\n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; version 2 of the License.\n #\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n #\n # You should have received a copy of the GNU General Public License along\n # with this program; if not, write to the Free Software Foundation, Inc.,\n # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n# Example script to start and run xdproot program\nset -xeo pipefail\n\nif [ -z \"${KATRAN_INTERFACE}\" ]\nthen\n    KATRAN_INTERFACE=enp0s3\nfi\n\nout=$(mount | grep bpffs) || true\nif [ -z \"$out\" ]; then\n    sudo mount -t bpf bpffs /sys/fs/bpf/\nfi\n\n# By default this script assumes to be invoked from the root dir.\nif [ -z \"${KATRAN_BUILD_DIR}\" ]\nthen\n    KATRAN_BUILD_DIR=$(pwd)/_build/build\nfi\n\nif [ -z \"${DEPS_DIR}\" ]\nthen\n    DEPS_DIR=$(pwd)/_build/deps\nfi\n\nif [ ! -f \"/sys/fs/bpf/jmp_${KATRAN_INTERFACE}\" ]; then\n    echo \"Assuming ${KATRAN_INTERFACE} exists. please change script to actual interface if it does not\"\n    sudo sh -c \"${KATRAN_BUILD_DIR}/katran/lib/xdproot -bpfprog ${DEPS_DIR}/bpfprog/bpf/xdp_root.o -bpfpath=/sys/fs/bpf/jmp_${KATRAN_INTERFACE} -intf=${KATRAN_INTERFACE}\"\nfi\n"
        },
        {
          "name": "katran",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 25.6025390625,
          "content": null
        },
        {
          "name": "os_run_tester.sh",
          "type": "blob",
          "size": 1.0927734375,
          "content": "#!/usr/bin/env bash\n\n # Copyright (C) 2018-present, Facebook, Inc.\n #\n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; version 2 of the License.\n #\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n #\n # You should have received a copy of the GNU General Public License along\n # with this program; if not, write to the Free Software Foundation, Inc.,\n # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nset -xeo pipefail\n\n# By default this script assumes to be invoked from the root dir.\nif [ -z \"${KATRAN_BUILD_DIR}\" ]\nthen\n    KATRAN_BUILD_DIR=$(pwd)/_build/build\nfi\n\nif [ -z \"${DEPS_DIR}\" ]\nthen\n    DEPS_DIR=$(pwd)/_build/deps\nfi\n\nsudo sh -c \"${KATRAN_BUILD_DIR}/katran/lib/testing/katran_tester -balancer_prog ${DEPS_DIR}/bpfprog/bpf/balancer.bpf.o -test_from_fixtures=true $1\"\n"
        },
        {
          "name": "start_katran_grpc_server.sh",
          "type": "blob",
          "size": 1.3515625,
          "content": "#!/usr/bin/env bash\n\n # Copyright (C) 2018-present, Facebook, Inc.\n #\n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; version 2 of the License.\n #\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n #\n # You should have received a copy of the GNU General Public License along\n # with this program; if not, write to the Free Software Foundation, Inc.,\n # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n# this script will start simple_katran_server w/ xdproot\nset -xeo pipefail\n\nif [ -z \"${KATRAN_INTERFACE}\" ]\nthen\n    KATRAN_INTERFACE=enp0s3\nfi\n\n# By default this script assumes to be invoked from the root dir.\nif [ -z \"${KATRAN_BUILD_DIR}\" ]\nthen\n    KATRAN_BUILD_DIR=$(pwd)/_build/build\nfi\n\nif [ -z \"${DEPS_DIR}\" ]\nthen\n    DEPS_DIR=$(pwd)/_build/deps\nfi\n\n./install_xdproot.sh -b \"${KATRAN_BUILD_DIR}\" -d \"${DEPS_DIR}\"\nsudo sh -c \"${KATRAN_BUILD_DIR}/example_grpc/katran_server_grpc -balancer_prog=${DEPS_DIR}/bpfprog/bpf/balancer.bpf.o -intf=${KATRAN_INTERFACE} -hc_forwarding=false -map_path=/sys/fs/bpf/jmp_${KATRAN_INTERFACE} -prog_pos=2\"\n"
        },
        {
          "name": "start_katran_simple_server.sh",
          "type": "blob",
          "size": 1.3486328125,
          "content": "#!/usr/bin/env bash\n\n # Copyright (C) 2018-present, Facebook, Inc.\n #\n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; version 2 of the License.\n #\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n #\n # You should have received a copy of the GNU General Public License along\n # with this program; if not, write to the Free Software Foundation, Inc.,\n # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n# this script will start simple_katran_server w/ xdproot\nset -xeo pipefail\n\nif [ -z \"${KATRAN_INTERFACE}\" ]\nthen\n    KATRAN_INTERFACE=enp0s3\nfi\n\n# By default this script assumes to be invoked from the root dir.\nif [ -z \"${KATRAN_BUILD_DIR}\" ]\nthen\n    KATRAN_BUILD_DIR=$(pwd)/_build/build\nfi\n\nif [ -z \"${DEPS_DIR}\" ]\nthen\n    DEPS_DIR=$(pwd)/_build/deps\nfi\n\n./install_xdproot.sh -b \"${KATRAN_BUILD_DIR}\" -d \"${DEPS_DIR}\"\nsudo sh -c \"${KATRAN_BUILD_DIR}/example/simple_katran_server -balancer_prog=${DEPS_DIR}/bpfprog/bpf/balancer.bpf.o -intf=${KATRAN_INTERFACE} -hc_forwarding=false -map_path=/sys/fs/bpf/jmp_${KATRAN_INTERFACE} -prog_pos=2\"\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}