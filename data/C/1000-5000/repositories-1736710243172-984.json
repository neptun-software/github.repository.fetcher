{
  "metadata": {
    "timestamp": 1736710243172,
    "page": 984,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "atomvm/AtomVM",
      "stars": 1551,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.21875,
          "content": "# Copyright 2020 Davide Bettio <davide@uninstall.it>\n#\n# SPDX-License-Identifier: CC0-1.0\n\n---\nLanguage:        Cpp\n# BasedOnStyle:  WebKit\nAccessModifierOffset: -4\nAlignAfterOpenBracket: DontAlign\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Right\nAlignOperands:   false\nAlignTrailingComments: false\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterClass:      true\n  AfterControlStatement: false\n  AfterEnum:       true\n  AfterFunction:   true\n  AfterNamespace:  true\n  AfterObjCDeclaration: true\n  AfterStruct:     true\n  AfterUnion:      true\n  AfterExternBlock: false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: All\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeComma\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     0\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: false\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\n  - LIST_FOR_EACH\n  - MUTABLE_LIST_FOR_EACH\nIncludeBlocks:   Preserve\nIncludeCategories:\n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n  - Regex:           '^(<|\"(gtest|gmock|isl|json)/)'\n    Priority:        3\n  - Regex:           '.*'\n    Priority:        1\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: true\nIndentPPDirectives: None\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: Inner\nObjCBlockIndentWidth: 4\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Right\nReflowComments:  true\nSortIncludes:    true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: true\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nTabWidth:        8\nUseTab:          Never\n...\n\n"
        },
        {
          "name": ".clang-format-ignore",
          "type": "blob",
          "size": 1.29296875,
          "content": "#\n#  Copyright 2022 Davide Bettio <davide@uninstall.it>\n#\n#  SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later\n#\n\n# We have a number of existing files that are quite \"re-format unfriendly\"\n# Let's ignore all of them\nsrc/libAtomVM/bif.c\nsrc/libAtomVM/bitstring.h\nsrc/libAtomVM/debug.h\nsrc/libAtomVM/defaultatoms.c\nsrc/libAtomVM/externalterm.c\nsrc/libAtomVM/module.c\nsrc/libAtomVM/nifs.c\nsrc/libAtomVM/opcodesswitch.h\nsrc/libAtomVM/overflow_helpers.h\nsrc/libAtomVM/term.c\nsrc/libAtomVM/term.h\nsrc/libAtomVM/term_typedef.h\nsrc/libAtomVM/trace.h\nsrc/libAtomVM/utils.h\nsrc/platforms/esp32/main/gpio_driver.c\nsrc/platforms/esp32/main/i2c_driver.c\nsrc/platforms/esp32/main/ledc_nif.c\nsrc/platforms/esp32/main/network_driver.c\nsrc/platforms/esp32/main/nvs_nif.c\nsrc/platforms/esp32/main/platform_defaultatoms.c\nsrc/platforms/esp32/main/platform_nifs.c\nsrc/platforms/esp32/main/socket_driver.c\nsrc/platforms/esp32/main/spi_driver.c\nsrc/platforms/esp32/main/uart_driver.c\nsrc/platforms/esp32/build/*\nsrc/platforms/esp32/components/*\nsrc/platforms/generic_unix/lib/platform_defaultatoms.c\nsrc/platforms/generic_unix/lib/platform_nifs.c\nsrc/platforms/generic_unix/lib/socket_driver.c\nsrc/platforms/stm32/src/lib/platform_defaultatoms.c\nsrc/platforms/stm32/src/lib/platform_nifs.c\nsrc/platforms/stm32/build/*\ntests/test-structs.c\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.74609375,
          "content": "# Copyright 2017-2020 Davide Bettio <davide@uninstall.it>\n# Copyright 2018-2020 Fred Dushin <fred@dushin.net>\n#\n# SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later\n\n*.avm\n*.beam\n*.o\nbuild/**\nxcode/**\nsrc/platforms/esp32/build/**\nsrc/platforms/esp32/build/**/*.d\nsrc/platforms/esp32/test/build/**\nsrc/platforms/esp32/test/__pycache__/**\nsrc/platforms/esp32/components/**\nsrc/platforms/esp32/managed_components/**\nsrc/platforms/esp32/sdkconfig\n!src/platforms/esp32/components/avm_builtins/\n!src/platforms/esp32/components/avm_builtins/**\n!src/platforms/esp32/components/avm_sys/\n!src/platforms/esp32/components/avm_sys/**\n!src/platforms/esp32/components/libatomvm/\n!src/platforms/esp32/components/libatomvm/**\n.idea/**\n.vscode/**\n.DS_Store\n.cache\n.clang-tidy\n"
        },
        {
          "name": ".reuse",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 26.431640625,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## Unreleased\n\n### Added\n- Added a limited implementation of the OTP `ets` interface\n- Added `code:all_loaded/0` and `code:all_available/0`\n- Added menuconfig option for enabling USE_USB_SERIAL, eg. serial over USB for certain ESP32-S2 boards etc.\n- Partial support for `erlang:fun_info/2`\n- Added support for `registered_name` in `erlang:process_info/2` and `Process.info/2`\n- Added `net:gethostname/0` on platforms with gethostname(3).\n- Added `socket:getopt/2`\n- Added `supervisor:terminate_child/2`, `supervisor:restart_child/2` and `supervisor:delete_child/2`\n\n### Fixed\n- ESP32: improved sntp sync speed from a cold boot.\n- Utilize reserved `phy_init` partition on ESP32 to store wifi calibration for faster connections.\n\n## [0.6.6] - Unreleased\n\n### Added\n\n- Added the ability to run beams from the CLI for Generic Unix platform (it was already possible with nodejs and emscripten).\n- Added support for 'erlang:--/2'.\n- Added preliminary support for ESP32P4 (no networking support yet).\n\n### Fixed\n\n- Fixed specifications of nifs from `esp_adc` module\n- ESP32: fix `gpio:init/1` on GPIO >= 32\n- Adding missing check, passing a non numeric argument to a function expecting a floating point\nmight lead to a crash in certain situations.\n- Fixed several bugs in `http_server` (#1366)\n- Fixed generic\\_unix `socket_driver` to return `{gen_tcp, closed}` when socket is closed on Linux instead of `{gen_tcp, {recv, 104}}`\n- Fixed a memory leak where modules were not properly destroyed when the global context is destroyd\n- alisp: fix support to variables that are not binaries or integers.\n- Fixed destruction of ssl-related resources\n- Fix corruption when dealing with specific situations that involve more than 16 x registers when\ncertain VM instructions are used.\n- Fixed ESP32 GPIO interrupt trigger `none`\n- Fixed an issue where a timeout would occur immediately in a race condition\n- Fixed SPI close command\n- Added missing lock on socket structure\n- Fixed a race condition affecting multi-core MCUs where a timeout would not be properly cleared\n- Fixed a double free when esp32 uart driver was closed, yielding an assert abort\n- Fixed compilation with latest debian gcc-arm-none-eabi\n- Fix `network:stop/0` on ESP32 so the network can be started again\n\n## [0.6.5] - 2024-10-15\n\n### Added\n\n- ESP32: add a new Elixir release \"flavor\" with a bigger boot.avm partition that has room for\nElixir standard library modules\n- ESP32: `--boot` option to mkimage.sh tool\n- Add `erlang:atom_to_binary/1` that is equivalent to `erlang:atom_to_binary(Atom, utf8)`\n- Support for Elixir `String.Chars` protocol, now functions such as `Enum.join` are able to take\nalso non string parameters (e.g. `Enum.join([1, 2], \",\")`\n- Support for Elixir `Enum.at/3`\n- Add support for `is_bitstring/1` construct which is used in Elixir protocols runtime.\n- Add support to Elixir `Enumerable` protocol also for `Enum.all?`, `Enum.any?`, `Enum.each`,\n`Enum.filter`, `Enum.flat_map`, `Enum.reject`, `Enum.chunk_by` and `Enum.chunk_while`\n- Support for `maps:merge_with/3`\n- Support for `lists:last/1` and `lists:mapfoldl/3`\n- Add support to Elixir for `Process.send/2` `Process.send_after/3/4` and `Process.cancel_timer/1`\n- Add support for `handle_continue` callback in `gen_server`\n- Support for Elixir `List.Chars` protocol\n- Support for `gen_server:start_monitor/3,4`\n- Support for `code:ensure_loaded/1`\n- Support for `io_lib:latin1_char_list/1`\n- Add support to Elixir for `Keyword.split/2`\n- Support for `binary:split/3` and `string:find/2,3`\n- Support for large tuples (more than 255 elements) in external terms.\n- Support for `io:put_chars/2`\n- Support for `lists:nthtail/2`\n- Support for Elixir `IO.chardata_to_string/1`\n- Support for Elixir `List.duplicate/2`\n- Support for `binary:copy/1,2`\n- Support for directory listing using POSIX APIs: (`atomvm:posix_opendir/1`,\n`atomvm:posix_readdir/1`, `atomvm:posix_closedir/1`).\n- ESP32: add support for `esp_adc` ADC driver, with Erlang and Elixir examples\n- Add handler for ESP32 network driver STA mode `beacon_timeout` (event: 21), see issue\n[#1100](https://github.com/atomvm/AtomVM/issues/1100)\n- Support for mounting/unmounting storage on ESP32 (such as SD or internal flash) using\n`esp:mount/4` and `esp:umount/1`\n- Support for `binary_to_integer/2`\n- Support for `binary:decode_hex/1` and `binary:encode_hex/1,2`\n- Support for Elixir `Base.decode16/2` and `Base.encode16/2`\n- Make external term serialize functions available without using `externalterm_to_binary` so terms\ncan be written directly to a buffer.\n- Support for `erlang:list_to_integer/2`\n- Add `externalterm_to_term_copy` that can be safely used from NIFs taking temporary buffers\n\n### Changed\n\n- ESP32: Elixir library is not shipped anymore with `esp32boot.avm`. Use `elixir_esp32boot.avm`\ninstead\n- `Enum.find_index` and `Enum.find_value` support Enumerable and not just lists\n- Install AtomVM libraries source code and binaries for better dialyzer integration\n- Made the `device_config` properties list in `spi:open/1` optional (defaults to `[]`), so you can use the function with only a `bus_config`\n\n### Fixed\n\n- ESP32: content of `boot.avm` partition is not truncated anymore\n- ESP32: `Fixed gpio:set_int` to accept any pin, not only pin 2\n- Fix memory corruption in `unicode:characters_to_binary`\n- Fix handling of large literal indexes and large extended literal indexes\n- `unicode:characters_to_list`: fixed bogus out_of_memory error on some platforms such as ESP32\n- Fix crash in Elixir library when doing `inspect(:atom)`\n- General inspect() compliance with Elixir behavior (but there are still some minor differences)\n- Fix several uses of free on prevously released memory on ESP32, under certain error condition using\n`network:start/1`, that would lead to a hard crash of the VM.\n- Fix a bug in ESP32 network driver where the low level driver was not being stopped and resoureces were not freed\nwhen `network:stop/0` was used, see issue [#643](https://github.com/atomvm/AtomVM/issues/643)\n- `uart:open/1,2` now works with uppercase peripheral names\n\n## [0.6.4] - 2024-08-18\n\n### Added\n\n- Implement `gpio:init/1` on esp32 to initialize pins for GPIO usage, which some pins\nrequire depending on default function and bootloader code\n- Implement missing opcode 161 (raw_raise), that looks more likely to be generated with Elixir code\n- Support for Elixir `Map.replace/3` and `Map.replace!/3`\n- Support for Elixir `Kernel.struct` and `Kernel.struct!`\n- Support for Elixir `IO.iodata_to_binary/1`\n- Support for Elixir exceptions: `Exception` module and the other error related modules such as\n`ArgumentError`, `UndefinedFunctionError`, etc...\n- Support for Elixir `Enumerable` and `Collectable` protocol\n- Support for Elixir `Enum` functions: `split_with`, `join`, `map_join`, `into`, `reverse`,\n`slice` and `to_list`\n- Support for Elixir `MapSet` module\n- Support for Elixir `Range` module\n- Support for Elixir `Kernel.min` and `Kernel.max`\n- Support (as stub) for `erlang:error/3` (that is required from Elixir code)\n\n## [0.6.3] - 2024-07-20\n\n### Added\n\n- Simple http client, that can be used for different use case such as downloading OTA updates\n- Elixir support for `Keyword.merge` `Keyword.take` `Keyword.pop(!)` `Keyword.keyword?` `Keyword.has_key?` functions.\n- Support for ESP32-H2\n- lists:keytake/3 implemented.\n- Support for setting channel used by network driver wifi access point.\n- Support for `maps:iterator/2` and `~kp` with `io_lib:format/2` that were introduced with OTP26.\n- Support for `erlang:apply/2`\n- Support for `lists:keystore/4`\n- Support for `erlang:size/1` bif\n- Support for USB serial output on ESP32 (needs to be manually enabled)\n- Support for `lists:filtermap/2`\n- Support for standard library `queue` module\n- Support for `maps:from_keys/2` NIF\n- Support for standard library `sets` module\n\n### Changed\n\n- ESP32 network driver messages for event 40 (home channel change events) are now suppressed, but the\ndetails for the channel changes can be observed in the console log if \"debug\" level logging is enabled\nin ESP-IDF Kconfig options.\n- Default size of ESP32 RTC slow memory from 4086 to 4096, except on ESP32-H2 where it's 3072\n- Update `byte_size/1` and `bit_size/1` to implement OTP27 match context reuse optimization OTP-18987.\n\n### Fixed\n\n- Fix bug (with code compiled with OTP-21) with binary pattern matching: the fix introduced with\n`02411048` was not completely right, and it was converting match context to bogus binaries.\n- Fix creation of multiple links for the same process and not removing link at trapped exits.\nSee issue [#1193](https://github.com/atomvm/AtomVM/issues/1193).\n- Fix error that is raised when a function is undefined\n- Fix a bug that could yield crashes when functions are sent in messages\n- Fix bug where failing guards would corrupt x0 and x1\n- Fix a memory leak when raising out of memory error while executing PUT_MAP_ASSOC instruction\n\n## [0.6.2] - 25-05-2024\n\n### Added\n\n- Support for DragonFly BSD (generic\\_unix platform).\n- Added guards `is_even` and `is_odd` to the `Integer` module\n- Add a number of functions to proplists module, such as `delete/2`, `from/to_map/1`, etc...\n- Add `esp:deep_sleep_enable_gpio_wakeup/2` to allow wakeup from deep sleep for ESP32C3 and ESP32C6.\n- Obtain RSSI of the current connection with `network:sta_rssi/0` on ESP32.\n- Pico-W support for `network:sta_rssi/0`.\n- Add support to ESP32C2\n\n### Fixed\n\n- Fix invalid read after free in ssl code, see also issue\n[#1115](https://github.com/atomvm/AtomVM/issues/1115).\n- Fix semantic of `ssl:recv(Socket, 0)` to return all available bytes, matching what OTP does.\n- Fix `binary` option handling in `ssl:connect/3` so `binary` can be used instead of\n`{binary, true}`.\n- Fix scheduling of trapped process that were wrongly immediately rescheduled before being signaled.\n- Fix `gen_tcp` and `ssl` types.\n- Fix documentation and specification of `esp:sleep_enable_ext0_wakeup/2` and `esp:sleep_enable_ext1_wakeup/2`.\n\n### Changed\n- Stacktraces are included by default on Pico devices.\n- Changed ssl default from `{active, false}` to `{active, true}` in order to have same behavior as\nOTP. Since active mode is not supported right now, `active` must be explicitly set to false:\n`ssl:connect(..., ..., [{active, false}, ...])`, otherwise it will crash.\n\n## [0.6.1] - 2024-04-17\n\n### Added\n\n- Added experimental optimized GC mode that makes use of C realloc instead of copying data around,\nit can be enabled with `-DENABLE_REALLOC_GC=On`.\n\n### Fixed\n\n- Fix bug in `erlang:ref_to_list/1` and `erlang:display/1`: the unique integer was truncated on some\n32-bit architectures\n- Stop hardcoding `erl_eval` as module name in both display and fun_to_list\n- Correctly display and convert to list funs such as `fun m:f/a`\n- Fixed bug in STM32 cmake that could cause builds with multiple jobs to fail due to incorrect artifact dependency\n- Fix crash on macOS due to missing call to `psa_crypto_init` for TLS 1.3\n- Fix crypto test on rp2040\n\n## [0.6.0] - 2024-03-05\n\n### Fixed\n\n- Fix a bug that broke sockets on ESP32-C3 and other single core ESP32 devices, that may also\ncause other issues. The bug has been introduced with messages from tasks change between beta.1\nand rc.0\n- Fixed several issues related to Esp32 socket_driver that made it unreliable, especially with\nsingle core MCUs\n\n## [0.6.0-rc.0] - 2024-03-03\n\n### Added\n\n- `BOOTLOADER_OFFSET` for all current Esp32 models.\n- Added API to send messages from FreeRTOS tasks or pthreads, typically to\neasily support integration with Esp32 callbacks\n\n### Fixed\n\n- `BOOTLOADER_OFFSET` was incorrect for Esp32-C6 and Esp32-S2.\n- Fixed a bug that would fail to set DHCP hostname in STA+AP mode on all ESP32 platforms.\n- ESP32-S3: crash in network driver caused by a smaller stack size for scheduler threads, when\ncalling `esp_wifi_init()`. See also issue [#1059](https://github.com/atomvm/AtomVM/issues/1059).\n- Fixed Esp32 network driver on non-SMP builds\n- ESP32: fixed bug in `gpio:stop/0` and `gpio:close/1` that would cause the VM to crash.\n\n## [0.6.0-beta.1] - 2024-02-28\n\n### Added\n\n- Support for utf8 encoding to `*_to_atom` and `atom_to_*` functions\n- `binary_to_atom/1` and `atom_to_binary/1` that default to utf8 (they were introduced with OTP23)\n- Added Pico cmake option `AVM_WAIT_BOOTSEL_ON_EXIT` (default `ON`) to allow tools to use automated `BOOTSEL` mode after main application exits\n- Use UTF-8 encoding for atoms when using `erlang:term_to_binary/1`, in conformance with OTP-26\n- Pico: Wait for USB serial connection `cmake` configuration option `AVM_USB_WAIT_SECONDS` added with 20 second default.\n- Support for code that makes use of more than 16 live registers, such as functions with > 16\nparameters and complex pattern matchings.\n\n### Fixed\n\n- ESP32: fix i2c_driver_acquire and i2c_driver_release functions, that were working only once.\n- Sending messages to registered processes using the `!` operator now works.\n- Fixed bug in `OP_SEND` that would accept sending a message to any integer or term without raising an error.\n- `binary_to_term` checks atom encoding validity, and fix latin1 support (when non-ASCII chars are\nused)\n- ESP32: fixed bug in `gpio:set_pin_mode/2` and `gpio:set_direction/3` that would accept any atom for the mode parameter without an error.\n- ESP32: GPIO driver fix bug that would accept invalid `pull` direction, and silently set `pull` direction to `floating` without issuing an error.\n- ESP32: fixed bug in gpio driver that would accept invalid pin numbers (either negative, or too large)\n- RP2040: fixed bug in `gpio:set_pin_pull/2` that would accept any parameter as a valid `pull` mode.\n- Support to function with 10 or more parameters\n- Very unlikely but possible corruption caused by generated code that uses 16 live registers\n\n### Changed\n\n- `binary_to_atom/2` validates utf8 strings\n- `*_to_atom` and `atom_to_*` properly convert latin1 (not just ASCII) to utf8 and viceversa\n- ESP32: use esp-idf v5.1.3 for building release binaries\n\n## [0.6.0-beta.0] - 2024-02-08\n\n### Added\n- Added `esp:get_default_mac/0` for retrieving the default MAC address on ESP32.\n- Added support for `pico` and `poci` as an alternative to `mosi` and `miso` for SPI\n- ESP32: Added support to SPI peripherals other than hspi and vspi\n- Added `gpio:set_int/4`, with the 4th parameter being the pid() or registered name of the process to receive interrupt messages\n- Added support for `lists:split/2`\n- Added ESP32 API for allowing coexistence of native and Erlang I2C drivers\n\n### Changed\n\n- Shorten SPI config options, such as `sclk_io_num` -> `sclk`\n- Shorten I2C config options, such as `scl_io_num` -> `scl`\n- Shorten UART config options, such as `tx_pin` -> `tx`\n- Introduced support to non-integer peripheral names, `\"i2c0\"`, `\"uart1\"` (instead of just `0` and\n- `1`, which now they are deprecated)\n- New atom table, which uses less memory, has improved performances and better code.\n- SPI: when gpio number is not provided for `miso` or `mosi` default to disabled\n- Change port call tuple format to the same format as gen_server, so casts can be supported too\n\n### Fixed\n\n- Fix several missing memory allocation checks in libAtomVM.\n- Fixed a possible memory leak in libAtomVM/module.c `module_destroy`.\n- Fix possibile bug in random number generator on ESP32 and RPi2040\n- Fixed interpretation of live for opcodes, thus altering GC semantics for nifs. See also [UPDATING](UPDATING.md).\n\n## [0.6.0-alpha.2] - 2023-12-10\n\n### Fixed\n\n- Fixed a bug where guards would raise exceptions instead of just being false\n- Fixed support for big endian CPUs (such as some MIPS CPUs).\n- Fixed STM32 not aborting when `AVM_ABORT()` is used\n- Fixed a bug that would leave the STM32 trapped in a loop on hard faults, rather than aborting\n- Fixed a bug that would make the VM to loop and failing to process selected fds on Linux\n- Fixed classes of exceptions in estdlib.\n- Fixed STM32 code that was hard coded to the default target device, now configured based on the `cmake -DDEVICE=` parameter\n- Fixed hard fault on STM32 durung malloc on boards with more than one bank of sram\n- Fixed invalid src_clk error on ESP-IDF >= 5.0\n- Fixed changed default to `AVM_USE_32BIT_FLOAT=on` for STM32 platform to enable use of single precision hardware FPU on F4/F7 devices.\n- Fixed a bug where emscripten `register_*_callback/1` functions would use x[1] as second argument\n- Fixed precision of integers used with timers which could yield to halts and wait times smaller than expected\n- Add support for ESP32-C6\n\n### Changed\n\n- Crypto functions on generic_unix platform now rely on MbedTLS instead of OpenSSL\n- Platform function providing time used by timers was changed from `sys_monotonic_millis` to `sys_monotonic_time_u64`, `sys_monotonic_time_u64_to_ms` and `sys_monotonic_time_ms_to_u64`.\n- Implement `atomvm:random/0` and `atomvm:rand_bytes/1` on top of `crypto:strong_rand_bytes/1` on\n  generic_unix, ESP32 and RP2040 platforms.\n- Performance improvements\n\n### Added\n\n- Added support for the OTP `socket` interface.\n- Enhancd performance of STM32 by enabling flash cache and i-cache with branch prediction.\n- Added cmake configuration option `AVM_CONFIG_REBOOT_ON_NOT_OK` for STM32\n- New gpio driver for STM32 with nif and port support for read and write functions.\n- Added support for interrupts to STM32 GPIO port driver.\n- Added suppoprt for PicoW extra gpio pins (led) to the gpio driver.\n- Added support for `net:getaddrinfo/1,2`\n- Added minimal support for the OTP `ssl` interface.\n- Added support for `crypto:one_time/4,5` on Unix and Pico as well as for `crypto:hash/2` on Pico\n- Added ability to configure STM32 Nucleo boards onboard UART->USB-COM using the `-DBOARD=nucleo` cmake option\n- Added STM32 cmake option `-DAVM_CFG_CONSOLE=` to select a different uart peripheral for the system console\n- Added `crypto:strong_rand_bytes/1` using Mbed-TLS (only on generic_unix, ESP32 and RP2040\n  platforms)\n- Added support for setting the default receive buffer size for sockets via `socket:setopt/3`\n- Added support for pattern matching binaries containing 32 and 64 bit floating point values, but\n  only when aligned to byte boundaries (e.g. `<<0:4, F:32/float>> = Bin` is not supported).\n- Added experimental backend to `get_tcp` and `get_udp` based on the new `socket` interface\n- Added API for managing ESP32 watchdog (only on `esp-idf` >= v5.x)\n\n### Removed\n\n- OpenSSL support, Mbed-TLS is required instead.\n\n## [0.6.0-alpha.1] - 2023-10-09\n\n### Added\n\n- Added erlang:spawn_link/1,3\n- Added erlang:exit/2\n- Added links to process_info/2\n- Added lists:usort/1,2\n- Added missing documentation and specifications for available nifs\n- Added configurable logging macros to stm32 platform\n- Added support for ULP wakeup on ESP32\n- Added heap growth strategies as a fine-tuning option to `spawn_opt/2,4`\n- Added `crypto:crypto_one_time/4,5` on ESP32\n- Improved nif and port support on STM32\n- Added support for `atomvm:posix_clock_settime/2`\n- Added support for creations of binaries with unaligned strings\n- Added `-h` and `-v` flags to generic_unix AtomVM command\n- Removed support to ESP32 NVS from network module in order to make it generic. See also [UPDATING](UPDATING.md).\n- Added initial support for Pico-W: on-board LED, Wifi (STA and AP modes).\n\n### Changed\n\n- Changed offset of atomvmlib and of program on Pico. See also [UPDATING](UPDATING.md).\n\n### Fixed\n\n- Fixed incorrect exit reason for exceptions of class exit\n- Fixed several incorrect type specifications\n- Fixed `esp:nvs_set_binary` functions.\n- Fixed `monotonic_time/1` and `system_time/1` functions for Raspberry Pi Pico\n- Fixed race conditions in atoms table.\n- Fixed a bug in the STM32 port that caused the final result to never be returned.\n- Fix bug when building a binary using a 64-bit integer on a 32-bit CPU.\n- Fix (using 'auto' option)  SPI on ESP32 models other than ESP32, such as ESP32S2, ESP32C3, ...\n\n## [0.6.0-alpha.0] - 2023-08-13\n\n### Added\n\n- Added the ability to specify the HSPI or VSPI ESP32 hardware interfaces when initializing the\n  SPI Bus.\n- Added support for the `spi:close/1` function.\n- Added `AVM_VERBOSE_ABORT` CMake define, which when set to on, will print the C module and line\n  number when a VM abort occurs.  This define is off by default.\n- Added `spi:write/3` and `spi:write_read/3` functions to support generalized SPI transactions\n  and arbitrary-length reads and writes from SPI devices.\n- Added support for building ESP32 port with all currently supported versions of Espressif ESP-IDF,\n  version 4.1.x through 4.4.x.\n- Added support for `controlling_process/2` in `gen_udp` and `gen_tcp` modules.\n- Added ability to get the atomvm version via `erlang:system_info`.\n- Added `erlang:is_boolean/1` Bif.\n- Added support for `esp:partition_erase_range/2`\n- Added support for `i2c:close/1`\n- Added support for `erlang:unregister/1`\n- Added Elixir ESP32 LEDC driver and example\n- Added support for `uart:close/1`\n- Added Bitwise support for Elixir\n- Added support for esp32-s2, esp32-s3, and esp32-c3 chips.\n- Added Elixir I2C driver and example\n- Added the ability to specify the I2C port\n- Added support for the OTP `math` module\n- Added support for `erlang:integer_to_list/2` and `erlang:integer_to_binary/2`\n- Added functions `esp:sleep_enable_ext0_wakeup/2` and `esp:sleep_enable_ext1_wakeup/2.`\n- Added support for FP opcodes 94-102 thus removing the need for `AVM_DISABLE_FP=On` with OTP-22+\n- Added support for stacktraces\n- Added support for `utf-8`, `utf-16`, and `utf-32` bit syntax modifiers (put and match)\n- Added support for Erlang `gpio:close/1` and Elixir `GPIO.close/1` for ESP32\n- Added support for the Erlang `gen_event` module\n- Added `start_link` support for the `network` module\n- Added support for `erlang:monotonic_time/1`\n- Added `start_link` support for the `gen_statem` module\n- Added support for serializing floats in erlang external term encoding\n- Added support for the `SMALL_BIG_EXT` erlang external term encoding\n- Added support for `erlang:memory(binary)`\n- Added support for callbacks on SNTP updates\n- Multithreading support (SMP)\n- Added support for code:load_abs/1, code:load_binary/3\n- Added support for loading / closing AVMPacks at runtime\n- Added support for ESP-IDF v5.x\n- Added support for `calendar:system_time_to_universal_time/2`\n- Added support for `calendar:datetime_to_gregorian_seconds/1`\n- Added support for Raspberry Pi Pico\n- Added support for nodejs with Wasm\n- Added support for a subset of the OTP logger interface\n- Added `esp:partition_list/0` function\n- Added `esp:nvs_fetch_binary/2` and `nvs_put_binary/3` functions (`esp:nvs_set_binary` and\nfunctions that default to `?ATOMVM_NVS_NS` are deprecated now).\n- Added most format possibilities to `io:format/2` and `io_lib:format/2`\n- Added `unicode` module with `characters_to_list/1,2` and `characters_to_binary/1,2,3` functions\n- Added support for `crypto:hash/2` (ESP32 and generic_unix with openssl)\n\n### Fixed\n- Fixed issue with formatting integers with io:format() on STM32 platform\n- Fixed a bug in the order of child initialization in the `supervisor` module\n- Fixed a bug in the evaluation of `receive ... after infinity -> ...` expressions\n- Fixed a bug in when putting integers in bit syntax with integer field sizes\n- Fixed numerous bugs in memory allocations that could crash the VM\n- Fixed SNTP support that had been broken in IDF 4.x builds\n- Fixed `erlang:send/2` not sending to registered name\n\n### Breaking Changes\n\n> IMPORTANT: These changes are incompatible with previous releases of AtomVM.\n\n- Changed the configuration model of the SPI driver, in order to allow for multiple \"follower\"\n  devices to be attached to the same SPI Bus.\n- Changed the return value from `erlang:system_info(esp32_chip_info)` from a tuple to a map, with\nadditional information.\n- Changed the return type of the `network:start` function to return the tuple `{ok, Pid}` on a\nsuccessful call, instead of the bare atom `ok`.  Applications that use `network:start` and\ncheck the return value will need to be modified.\n- The return type of `i2c:read_bytes` has changed from returning just a binary to\nreturning the tuple `{ok, Binary}` when successful.\n- The return type of many `i2c` operations under error conditions has changed from\n`error` to `{error, Reason}`, for improved diagnostics.\n- The eavmlib logger interface has been removed\n\n### Removed\n- ESP-IDF v3.x support.\n\n## [0.5.1] - Unreleased\n### Added\n- New function for atom comparison, useful when writing 3rd party components.\n- New function for translating an atom term to an int value, according to a given translation table.\n  This function can be used for translating an atom term to an enum const before doing a switch.\n- New no-op `ATOM_STR(...)` macro for avoiding issues with clang-format.\n- [ESP32] `REGISTER_PORT_DRIVER` for registering additional port drivers without editing any\n  source file. This allows adding new components by just copying them to the components directory.\n- [ESP32] `REGISTER_NIF_COLLECTION` for registering additional NIFs sets without editing any\n  source file. This allows adding new NIFs by just copying them to the components directory.\n- New function for getting a map or proplist value using an atom string without poluting the atom\n  table.\n\n### Fixed\n- Fix `gen_statem`: Cancel outstanding timers during state transitions in\n  order to prevent spurious timeout messages from being sent to `gen_statem`\n  process.\n- Fix missing Elixir libraries: examvlib was not packed into atomvmlib.avm\n- Fix `bs_context_to_binary`: match offset wasn't used, leading in certain situations to infinite loops\n  while matching binaries.\n- Fix how `start` option was handled from `bs_restore2` instruction: last saved match offset was\n  used instead of match starting offset, causing some bytes being skipped.\n- Fix another potential bug when doing pattern matching using code compiled with OTP 21.\n- [ESP32] [UART]: Allow using different pins for rx, tx, cts and rts.\n- [ESP32] [UART]: Replace custom UART handling with esp-idf UART event queues, hence other UARTs\n  than UART0 are supported, with better performances and stability.\n- Fix binaries concat (`bs_append` instruction) that was adding some extra zeroes at the end of\n  built binaries.\n- Fixed a bug in `gen_tcp` that prevents an accepting socket from inheriting settings on the listening socket.\n- Fixed a bug in packing and unpacking integers into and from binaries when the\n  bit length is not a multiple of 8.\n- Fixed `esp:deep_sleep/1` that did not accept values above 31 minutes.\n- Fixed a bug that could cause processes to hang indefinitely when calling ports that have terminated.\n- Fixed potential VM crash when parsing external terms.\n- Fixed the enforcement of `min_free_space` process option.\n\n## [0.5.0] - 2022-03-22\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 2.03515625,
          "content": "#\n# This file is part of AtomVM.\n#\n# Copyright 2017-2019 Davide Bettio <davide@uninstall.it>\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later\n#\n\ncmake_minimum_required (VERSION 3.13)\n\nproject(AtomVM)\nset(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/CMakeModules)\n\nfind_package(Dialyzer)\nfind_package(Elixir)\n\noption(AVM_DISABLE_FP \"Disable floating point support.\" OFF)\noption(AVM_DISABLE_SMP \"Disable SMP.\" OFF)\noption(AVM_DISABLE_TASK_DRIVER \"Disable task driver support.\" OFF)\noption(AVM_USE_32BIT_FLOAT \"Use 32 bit floats.\" OFF)\noption(AVM_VERBOSE_ABORT \"Print module and line number on VM abort\" OFF)\noption(AVM_RELEASE \"Build an AtomVM release\" OFF)\noption(AVM_CREATE_STACKTRACES \"Create stacktraces\" ON)\noption(AVM_BUILD_RUNTIME_ONLY \"Only build the AtomVM runtime\" OFF)\noption(COVERAGE \"Build for code coverage\" OFF)\n\nif((${CMAKE_SYSTEM_NAME} STREQUAL \"Darwin\") OR\n   (${CMAKE_SYSTEM_NAME} STREQUAL \"Linux\") OR\n   (${CMAKE_SYSTEM_NAME} STREQUAL \"FreeBSD\") OR\n   (${CMAKE_SYSTEM_NAME} STREQUAL \"DragonFly\"))\n    add_subdirectory(src/platforms/generic_unix)\nelse()\n    message(FATAL_ERROR \"Unsupported platform: ${CMAKE_SYSTEM_NAME}\")\nendif()\n\nif(NOT AVM_BUILD_RUNTIME_ONLY)\n    add_subdirectory(tests)\nendif()\n\nadd_subdirectory(tools/packbeam)\nadd_subdirectory(tools/uf2tool)\n\nif (NOT \"${CMAKE_GENERATOR}\" MATCHES \"Xcode\")\n    add_custom_target(dialyzer COMMENT \"Run dialyzer\")\n    add_subdirectory(libs)\n    if(NOT AVM_BUILD_RUNTIME_ONLY)\n        add_subdirectory(examples)\n        add_subdirectory(doc)\n    endif()\nendif()\n"
        },
        {
          "name": "CMakeModules",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.18359375,
          "content": "<!--\n  Copyright 2014 Coraline Ada Ehmke\n\n  SPDX-License-Identifier: CC-BY-4.0\n-->\n\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\ndavide AT uninstall.it.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.7587890625,
          "content": "<!--\n Copyright 2018-2022 Davide Bettio <davide@uninstall.it>\n\n SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later\n-->\n\n# Contributing\n\nAtomVM is open to any contribution.\n\n[Pull requests](https://github.com/atomvm/AtomVM/pulls),\n[bug reports and feature requests](https://github.com/atomvm/AtomVM/issues) are welcome.\n\nHowever before contributing, please read carefully our [Code of Conduct](CODE_OF_CONDUCT.md) and\nthe following contribution guidelines.\n\nPlease, also make sure to understand the [Apache 2.0 license](LICENSES/Apache-2.0.txt) and the\n[Developer Certificate of Origin](https://developercertificate.org/).\n\nLast but not least, **do not use GitHub issues for vulnerability reports**, read instead the\n[security policy](SECURITY.md) for instructions.\n\n## Git Recommended Practices\n\n* Commit messages should have a\n* [summary and a description](https://github.com/erlang/otp/wiki/writing-good-commit-messages)\n* Remove any trailing white spaces\n* Always `git pull --rebase`\n* [Clean up your branch history](https://git-scm.com/book/id/v2/Git-Tools-Rewriting-History) with\n`git rebase -i`\n* Squash commits before PR, unless there is a good reason not to\n* All your intermediate commits should build\n\n## Coding Style\n\nFor all source code modules:\n\n* Remove all trailing whitespace\n* Newlines (`\\n`) at end of file\n* Use line ending conventions appropriate for the platform (e.g., `\\n` on UNIX-like systems)\n\n### Copyright Headers\n\nAll source code modules should include copyright headers that are formatted for the relevant module language.  Copyright headers should take the following form:\n\n    /*\n    * This file is part of AtomVM.\n    *\n    * Copyright 2020 Your name <your@email.address>\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *    http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    *\n    * SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later\n    */\n\n\n### C Code\n\nC source code style is enforced with [`clang-format-16`](https://releases.llvm.org/16.0.0/tools/clang/docs/ClangFormat.html). To automatically fix a file, run:\n\n    clang-format-16 --style=file -i file.c\n\n#### Indentation\n\n* [K&R indentation and braces style](https://en.wikipedia.org/wiki/Indentation_style#K&R_style)\n* [Mandatory braces](https://en.wikipedia.org/wiki/Indentation_style#Variant:_mandatory_braces)\n* 4 space indentation (no tabs)\n\nGood:\n\n    void f(bool reverse)\n    {\n        if (reverse) {\n            puts(\"!dlroW olleH\");\n        } else {\n            puts(\"Hello world\");\n        }\n    }\n\nBad:\n\n    void f(bool reverse) {\n        if (reverse)\n            puts (\"!dlroW olleH\");\n        else\n            puts (\"Hello world\");\n    }\n\n#### Naming Conventions\n\n* Struct names are PascalCase (e.g. `Context`)\n* Scalar types are lower case (e.g. `term`)\n* All other names (e.g. functions and variables) are snake_case (e.g. `term_is_integer`)\n* Always prefix exported function names with the module in which they are defined (e.g. `term_is_nil`, `term_is_integer`, `context_new`, `context_destroy`)\n\n#### Other Coding Conventions\n\n* Pointers (`*`) should be with the variable name rather than with the type (e.g. `char *name`, not\n`char* name`)\n* Avoid long lines, use intermediate variables with meaningful names.\n* Function definitions should be separated by 1 empty line\n\nFunction declarations should be structured as follows:\n\n    func(main_input, additional_inputs, main_output, additional_outputs, opts, [context])\n\nwhere `context` is a context structure (such as `Context` or `GlobalContext`).\n\nAny functions that are not exported should be qualified with the `static` keyword.\n\nFunctions that return booleans should be named `is_something` (or possibly `module_is_something`, if the function is exported).\n\nC header modules (`.h`) should be organized as follows:\n\n    +-------------------\n    | Copyright Header\n    |\n    | #ifdef MODULE__H__\n    | #define MODULE__H__\n    |\n    | #ifdef __cplusplus\n    | extern \"C\" {\n    | #endif\n    |\n    | #includes (alphabetical)\n    |\n    | #defines\n    |\n    | type definitions\n    |\n    | function declarations\n    |\n    | #ifdef __cplusplus\n    | }\n    | #endif\n    |\n    | #endif\n    +-------------------\n     module.h\n\nC source modules (`.c`) should be organized as follows:\n\n    +-------------------\n    | Copyright Header\n    |\n    | #includes (alphabetical)\n    |\n    | #defines\n    |\n    | type definitions\n    |\n    | forward declarations (only if necessary)\n    |\n    | function definitions\n    |   dependent static functions first\n    |   exported functions and entrypoints last\n    +-------------------\n     module.c\n\n#### Documentation\n\n[Doxygen Javadoc style](https://www.doxygen.nl/manual/docblocks.html) code comments will be picked up and added to the documentation. Changes will automatically be added to the [libAtomVM Source Files](https://www.atomvm.net/doc/main/c_api_docs.html#libatomvm-source-files) and the [libAtomVM Index](https://www.atomvm.net/doc/main/apidocs/libatomvm/index.html#libatomvm-index). But to have `Data Structures`, `Types`, `MACROS`, and `Functions` appear in the correct C Library APIs section the corresponding entries must be added to the similarly named `*.rst` files in the `AtomVM/doc/src/apidocs/libatomvm/` directory. The exact names of the files that need to be altered are: `data_structures.rst`, `functions.rst`, `macros.rst`, and `types.rst`. The other files in the directory handle auto`generated content and do not need to be altered.\n\nIn the rare case that a function declaration and definition are both in different header files (rather than the definition in a `*.c` file) this can cause rendering errors for `Doxygen`. The work around for these cases can be demonstrated with this example for the function `sys_listener_destroy` it is documented and declared in `sys.h` and defined as follows in `listeners.h`:\n\n    #ifndef DOXYGEN_SKIP_SECTION /* documented in sys.h */\n    void sys_listener_destroy(struct ListHead *item)\n    {\n        EventListener *listener = GET_LIST_ENTRY(item, EventListener, listeners_list_head);\n        free(listener);\n    }\n    #endif /* DOXYGEN_SKIP_SECTION */\n\n> Note: You should include a short `/* comment */` trailing the `#ifndef` entry mentioning the file where the function is actually documented.\n\n### Erlang Code\n\nErlang source code style is enforced using [erlfmt](https://github.com/WhatsApp/erlfmt).\n\n### Elixir Code\n\nJust use Elixir formatter enforced style.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSES",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.Md",
          "type": "blob",
          "size": 5.484375,
          "content": "<!---\n  Copyright 2017-2021 Davide Bettio <davide@uninstall.it>\n\n  SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later\n-->\n\nAtomVM\n===========\n\nBrings [Erlang](https://www.erlang.org/), [Elixir](https://elixir-lang.org/) and other functional\nlanguages to really small systems.\n\nAtomVM implements from scratch a minimal Erlang VM that supports a subset of ErlangVM features and that is able to run unmodified BEAM binaries on really small systems like MCUs.\n\nSupported Platforms\n===================\n\n* Linux, macOS, FreeBSD, DragonFly ([generic_unix](https://www.atomvm.net/doc/main/getting-started-guide.html#getting-started-on-the-generic-unix-platform))\n* ESP32 SoC (with IDF/FreeRTOS, see [esp32](https://www.atomvm.net/doc/main/getting-started-guide.html#getting-started-on-the-esp32-platform))\n* STM32 MCUs (with LibOpenCM3, see [stm32](https://www.atomvm.net/doc/main/getting-started-guide.html#getting-started-on-the-stm32-platform))\n* Raspberry Pi Pico and Pico 2 (see [rp2](https://www.atomvm.net/doc/main/getting-started-guide.html#getting-started-on-the-raspberry-pi-pico-platform))\n* Browsers and NodeJS with WebAssembly (see [emscripten](https://www.atomvm.net/doc/main/getting-started-guide.html#getting-started-with-atomvm-webassembly))\n\nAtomVM aims to be easily portable to new platforms with a minimum effort, so additional platforms\nmight be supported in a near future.\n\nGetting Started\n===============\nThere is much more information, including a more complete\n[\"Getting Started Guide\"](https://www.atomvm.net/doc/main/getting-started-guide.html),\n[examples](https://www.atomvm.net/sample-code),\ndetailed [build instructions](https://www.atomvm.net/doc/main/build-instructions.html),\nand [contact information](https://www.atomvm.net/contact) available on the\n[AtomVM](https://atomvm.net) project website.\n\n>Don't forget to check out the [examples repository](https://github.com/atomvm/atomvm_examples) to\n>help get you started on your next IoT project.\n\n**Please, use [v0.6.x](https://github.com/atomvm/AtomVM/tree/release-0.6) releases, main branch\nis for development purposes and it might be unstable.**\n\nDependencies\n------------\n\nRequired for building:\n* CMake ([CMake build system](https://cmake.org/))\n* gperf ([GNU Perfect Hash Function Generator](https://www.gnu.org/software/gperf/manual/gperf.html))\n* erlc ([erlang compiler](https://www.erlang.org/))\n* elixirc ([elixir compiler](https://elixir-lang.org))\n* rebar3 ([rebar3 build tool](https://www.rebar3.org/))\n* Mbed TLS ([portable TLS library, optionally required to support SSL](https://www.trustedfirmware.org/projects/mbed-tls/))\n* zlib ([zlib compression and decompression library](https://zlib.net/))\n\nDocumentation and Coverage:\n* gcov and lcov are optionally required to generate coverage report (`make coverage`).\n* For documentation build requirements consult the [Documentation README](doc/README.md).\n\nStep-by-Step Build Instructions (generic unix platform)\n-------------------------------------------------------\n\n```\n$ mkdir build\n$ cd build\n$ cmake ..\n$ make\n$ ./src/AtomVM ./examples/erlang/hello_world.avm\n```\n\nRun tests within build directory with:\n```\n$ ./tests/test-erlang\n$ ./tests/test-enif\n$ ./tests/test-mailbox\n$ ./tests/test-structs\n$ ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm\n$ ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm\n$ ./src/AtomVM ./tests/libs/alisp/test_alisp.avm\n```\n\nComplete [Build Instructions](https://www.atomvm.net/doc/main/build-instructions.html) are\navailable in the documentation for\n[Generic UNIX](https://www.atomvm.net/doc/main/build-instructions.html) (Linux, MacOS, FreeBSD, DragonFly),\n[ESP32](https://www.atomvm.net/doc/main/build-instructions.html#building-for-esp32),\n[STM32](https://www.atomvm.net/doc/main/build-instructions.html#building-for-stm32),\n[Raspberry Pi Pico and Pico 2](https://www.atomvm.net/doc/main/build-instructions.html#building-for-raspberry-pi-pico)\n(rp2), and\n[WASM](https://www.atomvm.net/doc/main/build-instructions.html#building-for-nodejs-web) (NodeJS/Web).\n\nProject Status\n==============\n\n[![Build and Test](https://github.com/atomvm/AtomVM/actions/workflows/build-and-test.yaml/badge.svg?branch=main)](https://github.com/atomvm/AtomVM/actions/workflows/build-and-test.yaml)\n\nAtomVM is still in its early stages, but it can run simple applications similar to those available\nin [examples](examples/) and [tests](tests/).\n\nAtomVM might crash with a similar message:\n```\nUndecoded opcode: 15\nAborted (core dumped)\n```\nThis basically means that an instruction has not been implemented yet, or that an outdated version has been used. Please, make sure to always run AtomVM using latest version.\n\nKnown Limitations\n-----------------\nThis project is a work in progress, so there are several known limitations, that will prevent to run unmodified software, some of them are:\n* There is a minimal standard library, so several standard functions are missing.\n* Several instructions are not yet implemented.\n\nAll of these limitations are going to be fixed in a reasonable amount of time.\n\nAbout This Project\n==================\nThis project has been created by [Davide Bettio](https://github.com/bettio/), and now is developed\nfrom a growing number of contributors.\n\nHow to Contribute\n-----------------\nAny kind of [contribution](CONTRIBUTING.md) is welcome, you can either contribute to this repository\nby improving the virtual machine, the core libraries or the documentation or by contributing to any\nof the [organization](https://github.com/atomvm) repositories.\n\nLicense\n-------\nThis project is under the terms of the Apache 2.0 license.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.6123046875,
          "content": "<!--\n Copyright 2022 Davide Bettio <davide@uninstall.it>\n\n SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later\n-->\n\n# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 0.6.x   | :white_check_mark: |\n| < 0.5   | :x:                |\n<!-- TODO: add first supported version: | 1.0.x   | :white_check_mark: | -->\n\n## Reporting a Vulnerability\n\nTo submit a vulnerability report, please contact us at davide at uninstall.it.\nPlease, **do not use GitHub issues for vulnerability reports**.\nYour submission will be promptly reviewed and validated by a member of our team.\n"
        },
        {
          "name": "UPDATING.md",
          "type": "blob",
          "size": 2.34765625,
          "content": "<!---\n  Copyright 2023 Davide Bettio <davide@uninstall.it>\n\n  SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later\n-->\n\n# AtomVM Update Instructions\n\n## v0.6.4 -> v0.6.5\n\n- ESP32: `esp32boot.avm` doesn't contain anymore Elixir standard library, use instead\n`elixir_esp32boot.avm`, or the Elixir release flavor when using an image.\n- ESP32: partitioning schema for Elixir flavor is different, so app offset has been changed for\nElixir images. Make sure to use `0x250000` as offset in your mix.exs or when performing manual\nflashing.\n- ESP32 a bug was discovered in `i2c:write_bytes/2` that has not been fixed yet. Writing bytes\nsequentally using `i2c:write_byte/2` still works as a temporary workaround.\n- STM32 devices with 512k of flash are not supported in this release, due to lack of\nflash space. Support may return in a future release.\n\n## v0.6.0-beta.1 -> v0.6.0-rc.0\n\n- Drivers that send messages from Esp32 callbacks should use new functions\n`port_send_message_from_task`, `globalcontext_send_message_from_task` or\n`memory_destroy_heap_from_task` instead of `port_send_message`,\n`globalcontext_send_message` and `memory_destroy_heap`.\n\n## v0.6.0-alpha.2 -> v0.6.0-beta.0\n\n- Registers are no longer preserved by GC by default when invoking nifs, as part of the fix\nof interpretation of the emulator of the live parameter of many opcodes. NIFs may need\nto call `memory_ensure_free_with_roots` and pass their arguments are roots, instead of\n`memory_ensure_free` or `memory_ensure_free_opt`.\n- Port call message tuple format has been changed, hence previous version of the standard library\n  cannot be used. **Libraries (or boot .avm file) from latest version must be used**.\n\n## v0.6.0-alpha.0 -> v0.6.0-alpha.1\n\n- **Libraries (or boot .avm file) from latest version must be used**. Standard library from\n`v0.6.0-alpha.0` cannot work on top of latest version.\n- Address (offset) of programs for Pico was changed from 0x100A0000 to 0x10100000. UF2\nbinaries need to be rebuilt with the proper offset using `uf2tool`.\n- On ESP32, SSID and PSK stored in NVS are no longer read by network module. Applications\nmust fetch the values and pass them to `network:start/1` or `network:start_link/1`.\n- The `lib.avm` partition is no longer supported on ESP32.  If you have been using a\nspacialized partitioning of your ESP32 flash (uncommon), AtomVM will no longer try to load\ncode off this partition name.\n"
        },
        {
          "name": "code-queries",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.cmake",
          "type": "blob",
          "size": 0.7998046875,
          "content": "#\n# This file is part of AtomVM.\n#\n# Copyright 2022-2024 Davide Bettio <davide@uninstall.it>\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later\n#\n\n# Please, keep also in sync src/libAtomVM/atomvm_version.h\nset(ATOMVM_BASE_VERSION \"0.7.0-dev\")\nset(ATOMVM_DEV TRUE)\n"
        }
      ]
    }
  ]
}