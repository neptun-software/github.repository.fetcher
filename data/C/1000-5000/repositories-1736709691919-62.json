{
  "metadata": {
    "timestamp": 1736709691919,
    "page": 62,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ultrajson/ultrajson",
      "stars": 4357,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.109375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\n*.cover\n*.py,cover\n.cache\n.coverage\n.coverage.*\n.hypothesis/\n.nox/\n.pytest_cache/\n.testmondata\n.tox/\ncover/\ncoverage.xml\nhtmlcov/\nnosetests.xml\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Generated by setuptools_scm\npython/version.h\n\n# Docker wheel build\npip-cache/\ntemp-wheels/\n\n# gcov coverage files\ncov\n*.gcov\n*.gcda\n*.gcno\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.2490234375,
          "content": "repos:\n  - repo: https://github.com/asottile/pyupgrade\n    rev: v3.19.1\n    hooks:\n      - id: pyupgrade\n        args: [--py39-plus]\n\n  - repo: https://github.com/psf/black-pre-commit-mirror\n    rev: 24.10.0\n    hooks:\n      - id: black\n        args: [--target-version=py39]\n\n  - repo: https://github.com/PyCQA/isort\n    rev: 5.13.2\n    hooks:\n      - id: isort\n\n  - repo: https://github.com/PyCQA/flake8\n    rev: 7.1.1\n    hooks:\n      - id: flake8\n        additional_dependencies: [flake8-2020, flake8-implicit-str-concat]\n\n  - repo: https://github.com/pre-commit/pygrep-hooks\n    rev: v1.10.0\n    hooks:\n      - id: python-check-blanket-noqa\n      - id: rst-backticks\n\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-json\n      - id: check-merge-conflict\n      - id: check-toml\n      - id: check-yaml\n      - id: end-of-file-fixer\n      - id: trailing-whitespace\n        exclude: \"^.github/.*_TEMPLATE.md\"\n\n  - repo: https://github.com/woodruffw/zizmor-pre-commit\n    rev: v1.0.0\n    hooks:\n      - id: zizmor\n\n  - repo: https://github.com/asottile/setup-cfg-fmt\n    rev: v2.7.0\n    hooks:\n      - id: setup-cfg-fmt\n        args: [--include-version-classifiers, --max-py-version=3.13]\nci:\n  autoupdate_schedule: quarterly\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 5.8349609375,
          "content": "Developed by ESN, an Electronic Arts Inc. studio.\nCopyright (c) 2014, Electronic Arts Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n* Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n* Neither the name of ESN, Electronic Arts Inc. nor the\nnames of its contributors may be used to endorse or promote products\nderived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL ELECTRONIC ARTS INC. BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n----\n\nPortions of code from MODP_ASCII - Ascii transformations (upper/lower, etc)\nhttps://github.com/client9/stringencoders\n\n  Copyright 2005, 2006, 2007\n  Nick Galbreath -- nickg [at] modp [dot] com\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are\n  met:\n\n    Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n    Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\n    Neither the name of the modp.com nor the names of its\n    contributors may be used to endorse or promote products derived from\n    this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n  This is the standard \"new\" BSD license:\n  http://www.opensource.org/licenses/bsd-license.php\n\nhttps://github.com/client9/stringencoders/blob/cfd5c1507325ae497ea9bacdacba12c0ffd79d30/COPYING\n\n----\n\nNumeric decoder derived from from TCL library\nhttps://opensource.apple.com/source/tcl/tcl-14/tcl/license.terms\n * Copyright (c) 1988-1993 The Regents of the University of California.\n * Copyright (c) 1994 Sun Microsystems, Inc.\n\n  This software is copyrighted by the Regents of the University of\n  California, Sun Microsystems, Inc., Scriptics Corporation, ActiveState\n  Corporation and other parties.  The following terms apply to all files\n  associated with the software unless explicitly disclaimed in\n  individual files.\n\n  The authors hereby grant permission to use, copy, modify, distribute,\n  and license this software and its documentation for any purpose, provided\n  that existing copyright notices are retained in all copies and that this\n  notice is included verbatim in any distributions. No written agreement,\n  license, or royalty fee is required for any of the authorized uses.\n  Modifications to this software may be copyrighted by their authors\n  and need not follow the licensing terms described here, provided that\n  the new terms are clearly indicated on the first page of each file where\n  they apply.\n\n  IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY\n  FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES\n  ARISING OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY\n  DERIVATIVES THEREOF, EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE\n  POSSIBILITY OF SUCH DAMAGE.\n\n  THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,\n  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE\n  IS PROVIDED ON AN \"AS IS\" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE\n  NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR\n  MODIFICATIONS.\n\n  GOVERNMENT USE: If you are acquiring this software on behalf of the\n  U.S. government, the Government shall have only \"Restricted Rights\"\n  in the software and related documentation as defined in the Federal\n  Acquisition Regulations (FARs) in Clause 52.227.19 (c) (2).  If you\n  are acquiring the software on behalf of the Department of Defense, the\n  software shall be classified as \"Commercial Computer Software\" and the\n  Government shall have only \"Restricted Rights\" as defined in Clause\n  252.227-7013 (c) (1) of DFARs.  Notwithstanding the foregoing, the\n  authors grant the U.S. Government and others acting in its behalf\n  permission to use and distribute the software in accordance with the\n  terms specified in this license.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.0244140625,
          "content": "include python/version.h\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.1591796875,
          "content": "# UltraJSON\n\n[![PyPI version](https://img.shields.io/pypi/v/ujson.svg?logo=pypi&logoColor=FFE873)](https://pypi.org/project/ujson)\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/ujson.svg?logo=python&logoColor=FFE873)](https://pypi.org/project/ujson)\n[![PyPI downloads](https://img.shields.io/pypi/dm/ujson.svg)](https://pypistats.org/packages/ujson)\n[![GitHub Actions status](https://github.com/ultrajson/ultrajson/workflows/Test/badge.svg)](https://github.com/ultrajson/ultrajson/actions)\n[![codecov](https://codecov.io/gh/ultrajson/ultrajson/branch/main/graph/badge.svg)](https://codecov.io/gh/ultrajson/ultrajson)\n[![DOI](https://zenodo.org/badge/1418941.svg)](https://zenodo.org/badge/latestdoi/1418941)\n[![Code style: Black](https://img.shields.io/badge/code%20style-Black-000000.svg)](https://github.com/psf/black)\n\nUltraJSON is an ultra fast JSON encoder and decoder written in pure C with bindings for\nPython 3.9+.\n\nInstall with pip:\n\n```sh\npython -m pip install ujson\n```\n\n## Project status\n\n> [!WARNING]\n> UltraJSON's architecture is fundamentally ill-suited to making changes without\n> risk of introducing new security vulnerabilities. As a result, this library\n> has been put into a *maintenance-only* mode. Support for new Python versions\n> will be added and critical bugs and security issues will still be\n> fixed but all other changes will be rejected. Users are encouraged to migrate\n> to [orjson](https://pypi.org/project/orjson/) which is both much faster and\n> less likely to introduce a surprise buffer overflow vulnerability in the\n> future.\n\n## Usage\n\nMay be used as a drop in replacement for most other JSON parsers for Python:\n\n```pycon\n>>> import ujson\n>>> ujson.dumps([{\"key\": \"value\"}, 81, True])\n'[{\"key\":\"value\"},81,true]'\n>>> ujson.loads(\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\")\n[{'key': 'value'}, 81, True]\n```\n\n### Encoder options\n\n#### encode_html_chars\n\nUsed to enable special encoding of \"unsafe\" HTML characters into safer Unicode\nsequences. Default is `False`:\n\n```pycon\n>>> ujson.dumps(\"<script>John&Doe\", encode_html_chars=True)\n'\"\\\\u003cscript\\\\u003eJohn\\\\u0026Doe\"'\n```\n\n#### ensure_ascii\n\nLimits output to ASCII and escapes all extended characters above 127. Default is `True`.\nIf your end format supports UTF-8, setting this option to false is highly recommended to\nsave space:\n\n```pycon\n>>> ujson.dumps(\"åäö\")\n'\"\\\\u00e5\\\\u00e4\\\\u00f6\"'\n>>> ujson.dumps(\"åäö\", ensure_ascii=False)\n'\"åäö\"'\n```\n\n#### escape_forward_slashes\n\nControls whether forward slashes (`/`) are escaped. Default is `True`:\n\n```pycon\n>>> ujson.dumps(\"https://example.com\")\n'\"https:\\\\/\\\\/example.com\"'\n>>> ujson.dumps(\"https://example.com\", escape_forward_slashes=False)\n'\"https://example.com\"'\n```\n\n#### indent\n\nControls whether indentation (\"pretty output\") is enabled. Default is `0` (disabled):\n\n```pycon\n>>> ujson.dumps({\"foo\": \"bar\"})\n'{\"foo\":\"bar\"}'\n>>> print(ujson.dumps({\"foo\": \"bar\"}, indent=4))\n{\n    \"foo\":\"bar\"\n}\n```\n\n## Benchmarks\n\n*UltraJSON* calls/sec compared to other popular JSON parsers with performance gain\nspecified below each.\n\n### Test machine\n\nLinux 5.15.0-1037-azure x86_64 #44-Ubuntu SMP Thu Apr 20 13:19:31 UTC 2023\n\n### Versions\n\n- CPython 3.11.3 (main, Apr  6 2023, 07:55:46) [GCC 11.3.0]\n- ujson        : 5.7.1.dev26\n- orjson       : 3.9.0\n- simplejson   : 3.19.1\n- json         : 2.0.9\n\n|                                                                               | ujson      | orjson     | simplejson | json       |\n|-------------------------------------------------------------------------------|-----------:|-----------:|-----------:|-----------:|\n| Array with 256 doubles                                                        |            |            |            |            |\n| encode                                                                        |     18,282 |     79,569 |      5,681 |      5,935 |\n| decode                                                                        |     28,765 |     93,283 |     13,844 |     13,367 |\n| Array with 256 UTF-8 strings                                                  |            |            |            |            |\n| encode                                                                        |      3,457 |     26,437 |      3,630 |      3,653 |\n| decode                                                                        |      3,576 |      4,236 |        522 |      1,978 |\n| Array with 256 strings                                                        |            |            |            |            |\n| encode                                                                        |     44,769 |    125,920 |     21,401 |     23,565 |\n| decode                                                                        |     28,518 |     75,043 |     41,496 |     42,221 |\n| Medium complex object                                                         |            |            |            |            |\n| encode                                                                        |     11,672 |     47,659 |      3,913 |      5,729 |\n| decode                                                                        |     12,522 |     23,599 |      8,007 |      9,720 |\n| Array with 256 True values                                                    |            |            |            |            |\n| encode                                                                        |    110,444 |    425,919 |     81,428 |     84,347 |\n| decode                                                                        |    203,430 |    318,193 |    146,867 |    156,249 |\n| Array with 256 dict{string, int} pairs                                        |            |            |            |            |\n| encode                                                                        |     14,170 |     72,514 |      3,050 |      7,079 |\n| decode                                                                        |     19,116 |     27,542 |      9,374 |     13,713 |\n| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |\n| encode                                                                        |         55 |        282 |         11 |         26 |\n| decode                                                                        |         48 |         53 |         27 |         34 |\n| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |\n| encode                                                                        |         42 |            |          8 |         27 |\n| Complex object                                                                |            |            |            |            |\n| encode                                                                        |        462 |            |        397 |        444 |\n| decode                                                                        |        480 |        618 |        177 |        310 |\n\nAbove metrics are in call/sec, larger is better.\n\n## Build options\n\nFor those with particular needs, such as Linux distribution packagers, several\nbuild options are provided in the form of environment variables.\n\n### Debugging symbols\n\n#### UJSON_BUILD_NO_STRIP\n\nBy default, debugging symbols are stripped on Linux platforms. Setting this\nenvironment variable with a value of `1` or `True` disables this behavior.\n\n### Using an external or system copy of the double-conversion library\n\nThese two environment variables are typically used together, something like:\n\n```sh\nexport UJSON_BUILD_DC_INCLUDES='/usr/include/double-conversion'\nexport UJSON_BUILD_DC_LIBS='-ldouble-conversion'\n```\n\nUsers planning to link against an external shared library should be aware of\nthe ABI-compatibility requirements this introduces when upgrading system\nlibraries or copying compiled wheels to other machines.\n\n#### UJSON_BUILD_DC_INCLUDES\n\nOne or more directories, delimited by `os.pathsep` (same as the `PATH`\nenvironment variable), in which to look for `double-conversion` header files;\nthe default is to use the bundled copy.\n\n#### UJSON_BUILD_DC_LIBS\n\nCompiler flags needed to link the `double-conversion` library; the default\nis to use the bundled copy.\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 0.8642578125,
          "content": "# Release Checklist\n\n- [ ] Get `main` to the appropriate code release state.\n      [GitHub Actions](https://github.com/ultrajson/ultrajson/actions) should be running\n      cleanly for all merges to `main`.\n      [![GitHub Actions status](https://github.com/ultrajson/ultrajson/workflows/Test/badge.svg)](https://github.com/ultrajson/ultrajson/actions)\n\n- [ ] Edit release draft, adjust text if needed: https://github.com/ultrajson/ultrajson/releases\n\n- [ ] Check next tag is correct, amend if needed\n\n- [ ] Publish release\n\n- [ ] Check the tagged GitHub Actions builds have deployed\n      [source and wheels](https://github.com/ultrajson/ultrajson/actions?query=workflow%3ADeploy)\n      to\n      [PyPI](https://pypi.org/project/ujson/#history)\n\n- [ ] Check installation:\n\n```bash\npip3 uninstall -y ujson && pip3 install -U ujson\npython3 -c \"import ujson; print(ujson.__version__)\"\n```\n"
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.24609375,
          "content": "[build-system]\nrequires = [\n  \"setuptools>=42\",\n  'setuptools<72.2; implementation_name == \"pypy\"', # https://github.com/pypa/distutils/issues/283\n  \"setuptools_scm[toml]>=3.4\",\n]\n\n[tool.black]\ntarget_version = [\"py39\"]\n\n[tool.isort]\nprofile = \"black\"\n"
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.951171875,
          "content": "[metadata]\nname = ujson\ndescription = Ultra fast JSON encoder and decoder for Python\nlong_description = file: README.md\nlong_description_content_type = text/markdown\nurl = https://github.com/ultrajson/ultrajson\nauthor = Jonas Tarnstrom\nlicense_files = LICENSE.txt\nplatforms = any\nclassifiers =\n    Development Status :: 5 - Production/Stable\n    Intended Audience :: Developers\n    License :: OSI Approved :: BSD License\n    Programming Language :: C\n    Programming Language :: Python :: 3\n    Programming Language :: Python :: 3 :: Only\n    Programming Language :: Python :: 3.9\n    Programming Language :: Python :: 3.10\n    Programming Language :: Python :: 3.11\n    Programming Language :: Python :: 3.12\n    Programming Language :: Python :: 3.13\ndownload_url = https://github.com/ultrajson/ultrajson\nproject_urls =\n    Source=https://github.com/ultrajson/ultrajson\n\n[options]\npython_requires = >=3.9\nsetup_requires =\n    setuptools-scm\n\n[flake8]\nmax_line_length = 88\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.513671875,
          "content": "import platform\nimport shlex\nfrom glob import glob\nfrom os import environ, pathsep\n\nfrom setuptools import Extension, setup\n\ndconv_includes = [\n    dir\n    for dir in environ.get(\n        \"UJSON_BUILD_DC_INCLUDES\",\n        \"./deps/double-conversion/double-conversion\",\n    ).split(pathsep)\n    if dir\n]\ndconv_libs = shlex.split(environ.get(\"UJSON_BUILD_DC_LIBS\", \"\"))\ndconv_source_files = []\nif not dconv_libs:\n    dconv_source_files.extend(glob(\"./deps/double-conversion/double-conversion/*.cc\"))\ndconv_source_files.append(\"./lib/dconv_wrapper.cc\")\n\nif platform.system() == \"Linux\" and environ.get(\"UJSON_BUILD_NO_STRIP\", \"0\") not in (\n    \"1\",\n    \"True\",\n):\n    strip_flags = [\"-Wl,--strip-all\"]\nelse:\n    strip_flags = []\n\nmodule1 = Extension(\n    \"ujson\",\n    sources=dconv_source_files\n    + [\n        \"./python/ujson.c\",\n        \"./python/objToJSON.c\",\n        \"./python/JSONtoObj.c\",\n        \"./lib/ultrajsonenc.c\",\n        \"./lib/ultrajsondec.c\",\n    ],\n    include_dirs=[\"./python\", \"./lib\"] + dconv_includes,\n    extra_compile_args=[\"-D_GNU_SOURCE\"],\n    extra_link_args=[\"-lstdc++\", \"-lm\"] + dconv_libs + strip_flags,\n)\n\nwith open(\"python/version_template.h\") as f:\n    version_template = f.read()\n\n\ndef local_scheme(version):\n    \"\"\"Skip the local version (eg. +xyz of 0.6.1.dev4+gdf99fe2)\n    to be able to upload to Test PyPI\"\"\"\n    return \"\"\n\n\nsetup(\n    ext_modules=[module1],\n    use_scm_version={\n        \"local_scheme\": local_scheme,\n        \"write_to\": \"python/version.h\",\n        \"write_to_template\": version_template,\n    },\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}