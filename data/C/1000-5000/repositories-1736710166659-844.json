{
  "metadata": {
    "timestamp": 1736710166659,
    "page": 844,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RRZE-HPC/likwid",
      "stars": 1706,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2177734375,
          "content": "make/config_git.mk ident\n\n# set language correctly\n*.h linguist-language=C\n*.c linguist-language=C\n\n# ignore external code\next/* linguist-vendored\n\n# Use assembly for likwid-bench ptt files\n*.ptt linguist-language=Assembly\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5068359375,
          "content": "# generated files: headers, objects, intermediate assembly, etc.\nGCC\nGCCX86\nCLANG\nICC\nMIC\nGCCARM*\nARMCLANG\nFCC\nGCCPOWER\nXLC\nPGI\n\n# libraries\n*.so*\n\n# executables\nbench/likwid-bench\next/lua/lua\nlikwid-accessD\nlikwid-setFreq\n\n# lua scripts\nlikwid-config.cmake\nlikwid-features\nlikwid-genTopoCfg\nlikwid-memsweeper\nlikwid-mpirun\nlikwid-perfctr\nlikwid-perfscope\nlikwid-pin\nlikwid-powermeter\nlikwid-setFrequencies\nlikwid-topology\nlikwid-bridge\nlikwid-sysfeatures\nlikwid.lua\n\n# generated doc files\ndoc/html\n\n# core dumps\n/core\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 5.615234375,
          "content": "variables:\n    GIT_STRATEGY: fetch\n\nworkflow:\n  rules:\n    - if: $CI_PIPELINE_SOURCE == \"merge_request_event\"\n    - if: $CI_COMMIT_TAG\n\nbuild-x86-daemon:\n    stage: build\n    variables:\n      LIKWID_COMPILER: \"GCC\"\n      LIKWID_ACCESSMODE: \"accessdaemon\"\n      LIKWID_MODULE: \"likwid/5.2-dev\"\n    script:\n      - mkdir /tmp/$CI_JOB_NAME\n      - module load \"$LIKWID_MODULE\"\n      - export LIKWID_PREFIX=$(realpath $(dirname $(which likwid-topology))/..)\n      - module unload \"$LIKWID_MODULE\"\n      - sed -e s+\"INSTALLED_ACCESSDAEMON = .*\"+\"INSTALLED_ACCESSDAEMON=$LIKWID_PREFIX/sbin/likwid-accessD\"+g -i config.mk\n      - sed -e s+\"ACCESSMODE = .*\"+\"ACCESSMODE=$LIKWID_ACCESSMODE\"+g -i config.mk\n      - sed -e s+\"COMPILER = .*\"+\"COMPILER=$LIKWID_COMPILER\"+g -i config.mk\n      - sed -e s+\"PREFIX ?= .*\"+\"PREFIX=/tmp/$CI_JOB_NAME\"+g -i config.mk\n      - sed -e s+\"INSTRUMENT_BENCH = .*\"+\"INSTRUMENT_BENCH=true\"+g -i config.mk\n      - sed -e s+\"BUILD_SYSFEATURES = .*\"+\"BUILD_SYSFEATURES=true\"+g -i config.mk\n      - sed -e s+\"BUILDDAEMON = .*\"+\"BUILDDAEMON=false\"+g -i config.mk\n      - sed -e s+\"BUILDFREQ = .*\"+\"BUILDFREQ=false\"+g -i config.mk\n      - make\n      - make BUILDDAEMON=false BUILDFREQ=false BUILD_SYSFEATURES=true install\n      - cp -r /tmp/$CI_JOB_NAME $CI_PROJECT_DIR/$CI_JOB_NAME\n      - if [ -e $CI_JOB_NAME/sbin/likwid-accessD ]; then rm $CI_JOB_NAME/sbin/likwid-accessD; fi\n      - if [ -e $CI_JOB_NAME/sbin/likwid-setFreq ]; then rm $CI_JOB_NAME/sbin/likwid-setFreq; fi\n      - rm -rf /tmp/$CI_JOB_NAME\n    before_script:\n      - rm -rf /tmp/$CI_JOB_NAME\n    after_script:\n      - rm -rf /tmp/$CI_JOB_NAME\n    artifacts:\n      paths:\n        - $CI_JOB_NAME/\n    tags:\n      - testcluster\n\n\nbuild-x86-perf:\n    stage: build\n    variables:\n      LIKWID_COMPILER: \"GCC\"\n      LIKWID_ACCESSMODE: \"perf_event\"\n    script:\n      - mkdir /tmp/$CI_JOB_NAME\n      - sed -e s+\"ACCESSMODE = .*\"+\"ACCESSMODE=$LIKWID_ACCESSMODE\"+g -i config.mk\n      - sed -e s+\"COMPILER = .*\"+\"COMPILER=$LIKWID_COMPILER\"+g -i config.mk\n      - sed -e s+\"PREFIX ?= .*\"+\"PREFIX=/tmp/$CI_JOB_NAME\"+g -i config.mk\n      - sed -e s+\"INSTRUMENT_BENCH = .*\"+\"INSTRUMENT_BENCH=true\"+g -i config.mk\n      - sed -e s+\"BUILDDAEMON = .*\"+\"BUILDDAEMON=false\"+g -i config.mk\n      - sed -e s+\"BUILD_SYSFEATURES = .*\"+\"BUILD_SYSFEATURES=true\"+g -i config.mk\n      - sed -e s+\"BUILDFREQ = .*\"+\"BUILDFREQ=false\"+g -i config.mk\n      - make\n      - make BUILDDAEMON=false BUILDFREQ=false BUILD_SYSFEATURES=true install\n      - cp -r /tmp/$CI_JOB_NAME $CI_PROJECT_DIR/$CI_JOB_NAME\n      - if [ -e $CI_JOB_NAME/sbin/likwid-accessD ]; then rm $CI_JOB_NAME/sbin/likwid-accessD; fi\n      - if [ -e $CI_JOB_NAME/sbin/likwid-setFreq ]; then rm $CI_JOB_NAME/sbin/likwid-setFreq; fi\n      - rm -rf /tmp/$CI_JOB_NAME\n    before_script:\n      - rm -rf /tmp/$CI_JOB_NAME\n    after_script:\n      - rm -rf /tmp/$CI_JOB_NAME\n    artifacts:\n      paths:\n        - $CI_JOB_NAME/\n    tags:\n      - testcluster\n\nbuild-arm8-perf:\n    stage: build\n    variables:\n      LIKWID_COMPILER: \"GCCARMv8\"\n      LIKWID_ACCESSMODE: \"perf_event\"\n      SLURM_NODELIST: warmup\n    script:\n      - mkdir /tmp/$CI_JOB_NAME\n      - sed -e s+\"ACCESSMODE = .*\"+\"ACCESSMODE=$LIKWID_ACCESSMODE\"+g -i config.mk\n      - sed -e s+\"COMPILER = .*\"+\"COMPILER=$LIKWID_COMPILER\"+g -i config.mk\n      - sed -e s+\"PREFIX ?= .*\"+\"PREFIX=/tmp/$CI_JOB_NAME\"+g -i config.mk\n      - sed -e s+\"INSTRUMENT_BENCH = .*\"+\"INSTRUMENT_BENCH=true\"+g -i config.mk\n      - sed -e s+\"BUILDDAEMON = .*\"+\"BUILDDAEMON=false\"+g -i config.mk\n      - sed -e s+\"BUILD_SYSFEATURES = .*\"+\"BUILD_SYSFEATURES=true\"+g -i config.mk\n      - sed -e s+\"BUILDFREQ = .*\"+\"BUILDFREQ=false\"+g -i config.mk\n      - make\n      - make BUILDDAEMON=false BUILDFREQ=false install\n      - cp -r /tmp/$CI_JOB_NAME $CI_PROJECT_DIR/$CI_JOB_NAME\n      - if [ -e $CI_JOB_NAME/sbin/likwid-accessD ]; then rm $CI_JOB_NAME/sbin/likwid-accessD; fi\n      - if [ -e $CI_JOB_NAME/sbin/likwid-setFreq ]; then rm $CI_JOB_NAME/sbin/likwid-setFreq; fi\n      - rm -rf /tmp/$CI_JOB_NAME\n    before_script:\n      - rm -rf /tmp/$CI_JOB_NAME\n    after_script:\n      - rm -rf /tmp/$CI_JOB_NAME\n    artifacts:\n      paths:\n        - $CI_JOB_NAME/\n    tags:\n      - testcluster\n\n#check-event-files:\n#    stage: .pre\n#    tags:\n#      - testcluster\n#    script:\n#      - module load python\n#      - test/check_data_files.py events\n#      - test/check_data_files.py groups\n\nnotify-github-pending:\n  stage: .pre\n  tags:\n    - testcluster\n  variables:\n    NO_SLURM_SUBMIT: 1\n  when: always\n  script:\n    - test/gitlab-ci/notify_github.sh pending\n\narch-gen:\n  stage: build\n  tags:\n    - testcluster\n  variables:\n    NO_SLURM_SUBMIT: 1\n  script: \n   - test/gitlab-ci/generate_arch_jobs.sh > arch-pipeline.yml\n  artifacts:\n    paths:\n      - arch-pipeline.yml\n\narch-pipeline:\n  stage: test\n  trigger:\n    include:\n      - artifact: arch-pipeline.yml\n        job: arch-gen\n    strategy: depend\n  variables:\n    PARENT_PIPELINE_ID: $CI_PIPELINE_ID\n\ncuda-gen:\n  stage: build\n  tags:\n    - testcluster\n  variables:\n    SLURM_NODELIST: medusa\n  script: \n   - test/gitlab-ci/generate_cuda_jobs.sh > cuda-pipeline.yml\n  artifacts:\n    paths:\n      - cuda-pipeline.yml\n\ncuda-pipeline:\n  stage: test\n  trigger:\n    include:\n      - artifact: cuda-pipeline.yml\n        job: cuda-gen\n    strategy: depend\n  variables:\n    PARENT_PIPELINE_ID: $CI_PIPELINE_ID\n\nnotify-github-success:\n  stage: .post\n  tags:\n    - testcluster\n  variables:\n    NO_SLURM_SUBMIT: 1\n  when: on_success\n  script:\n    - test/gitlab-ci/notify_github.sh success\n\nnotify-github-failure:\n  stage: .post\n  tags:\n    - testcluster\n  variables:\n    NO_SLURM_SUBMIT: 1\n  when: on_failure\n  script:\n    - test/gitlab-ci/notify_github.sh failure\n"
        },
        {
          "name": ".zenodo.json",
          "type": "blob",
          "size": 1.333984375,
          "content": "{\n  \"title\": \"LIKWID\",\n  \"description\": \"Performance monitoring and benchmarking suite.\",\n  \"creators\": [\n    {\n      \"affiliation\": \"Reginales Rechenzentrum Erlangen, Friedrich-Alexander-Universität Erlangen-Nürnberg\",\n      \"name\": \"Thomas Gruber\",\n      \"orcid\": \"0000-0001-5560-6964\"\n    },\n    {\n      \"affiliation\": \"Reginales Rechenzentrum Erlangen, Friedrich-Alexander-Universität Erlangen-Nürnberg\",\n      \"name\": \"Michael Panzlaff\"\n    },\n    {\n      \"affiliation\": \"Reginales Rechenzentrum Erlangen, Friedrich-Alexander-Universität Erlangen-Nürnberg\",\n      \"name\": \"Jan Eitzinger\"\n    },\n    {\n      \"affiliation\": \"Reginales Rechenzentrum Erlangen, Friedrich-Alexander-Universität Erlangen-Nürnberg\",\n      \"name\": \"Georg Hager\",\n      \"orcid\": \"0000-0002-8723-2781\"\n    },\n    {\n      \"affiliation\": \"Reginales Rechenzentrum Erlangen, Friedrich-Alexander-Universität Erlangen-Nürnberg\",\n      \"name\": \"Gerhard Wellein\",\n      \"orcid\": \"0000-0001-7371-3026\"\n    }\n  ],\n  \"upload_type\": \"software\",\n  \"license\": \"GPL-3.0\",\n  \"access_right\": \"open\",\n  \"keywords\": [\n    \"performance-engineering\",\n    \"performance-monitoring\",\n    \"performance-analysis\",\n    \"open-source\"\n  ],\n  \"notes\": \"This research has been partially funded by grants: BMBF 01IH13009, BMBF 01IH16012C and BMBF 16ME0583K\",\n  \"communities\": [\n    {\"identifier\": \"fau\"}\n  ]\n}\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 15.494140625,
          "content": "# Changelog 5.4.1\n- Fixes linking errors due to missing bstrlib.h\n- Fix for likwid-bench kernel stream_mem\n- Fix builds with CUDA for versions 11.2 to 12.6\n- Fix sysfeatures with ACCESSMODE=perf_event\n- Add AMD Zen1 to Zen3 to sysfeatures\n- Add support for apple-cpufreq and cppc driver to sysfeatures\n- Fix sysfeatures on ARM architectures\n\n# Changelog 5.4.0\n- Support for Intel Granite Rapids (core, energy, uncore)\n- Support for Intel Sierra Forrest (core, energy, uncore)\n- Support for AMD Bergamo (core, energy, uncore)\n- Support for Nvidia Grace (core, uncore)\n- Fix: AMD Zen4 DataFabric units\n- Fix: Multi-socket RAPL measurements on Sapphire Rapids\n- Fix: Energy unit for RAPL DRAM domain for SPR, GNR and SRF\n- Fix: Discovery mechanism workaround for UPI and M3UPI units of SPR\n- Fix: Intel Westmere Uncore with perf_event backend\n- Fix: Fujitsu A64FX (more counters, fixed topology, ...)\n- Container bridge to use LIKWID inside container\n- Sysfeatures interface reworked with support for various architectures and libraries\n- Fix build for NVMON for CUDA 12.6+\n- likwid-mpirun: SLURM pinning with cpu_mask feature\n- Update of internal hwloc (2.11.2) and Lua (5.4.7) version\n\n\n# Changelog 5.3.0\n- Support for Intel SapphireRapids (Core, Uncore, RAPL)\n- Support for AMD Zen4 (Core, Uncore, RAPL)\n- Support for Apple M1\n- Support for AMD GPUs (MarkerAPI, F90 interface)\n- Support for AWS Graviton3 (ARM Neoverse V1)\n- Support for HiSilicon TSV110\n- Fix of F90 interface installation\n- Support for extended umasks in ICX and SPR\n- Units for metrics in performance groups\n- Library calls to get meta information (version, supported features, etc.)\n- Some fixes for direct access mode\n- Some fixes for X86 RDPMC detection\n- Update of internal hwloc (2.9.3) and Lua (5.4.6) version\n- New experimental sysfeatures module\n\n# Changelog 5.2.2\n- Add mutex to pinning library\n- Fix pin string parsing in pinning library\n- Make SBIN path configurable in build system\n- Add PKGBUILD for ArchLinux package builds\n- Remove accessDaemon double-fork in systemd environements\n- Group updates for L2/L3 (mainly AMD Zen)\n- Fix multi-initialization in MarkerAPI\n- Add energy event scaling for Fujitsu A64FX\n- Nvmon: Use Cupti error string to get better warning/error messages\n- Nvmon: Store events internally to re-use event strings in stopCounters\n- AccessLayer: Catch SIGCHLD to stop sending requests to accessDaemon if it was killed\n- likwid-genTopoCfg: Update writing and reading of topology file\n- Add INST_RETIRED_NOP event for Intel Icelake (desktop & server)\n- Removed some memory leaks\n- Improved checks for RDPMC availability\n- Add TOPDOWN_SLOTS for perf_event\n- Fix for systems with CPU sockets without hwthreads (A64FX FX1000)\n- Fix if HOME environment variable is not set (systemd)\n- Reader function for perf_event_paranoid in Lua to get state early\n- likwid-mpirun: Sanitize np and ppn values to avoid crashes\n\n\n# Changelog 5.2.1\n- Add support for Intel Rocketlake and AMD Zen3 variant (Family 19, Model 0x50)\n- Fix for perf_event multiplexing (important!)\n- Fix for potential deadlock in MarkerAPI (thx @jenny-cheung)\n- Build and runtime fixes for Nvidia GPU backend, updates for CUDA test codes\n- peakflops kernel for ARMv8\n- Updates for AMD Zen1/2/3 event lists and groups\n- Support spaces in MarkerAPI region tags (thx @jrmadsen)\n- Use 'online' cpulist instead of 'present'\n- Switch CI from Travis-CI to NHR@FAU Cx services\n- Document -reset and -ureset for likwid-setFrequencies\n- Reset cpuset in unpinned runs\n- Remove destructor in frequency module\n- Check PID if given through --perfpid\n- Intel Icelake: OFFCORE_RESPONSE events\n- AccessDaemon: Check PCI init state before using it\n- likwid-mpirun: Set mpi type for SLURM automatically\n- likwid-mpirun: Fix for skip mask for OpenMPI\n\n\n# Changelog 5.2.0\n- Support for AMD Zen3 (Core + Uncore)\n- Support for Intel IcelakeSP (Core + Uncore)\n- New affinity code\n- Fix for Ivybridge uncore code\n- Bypass accessdaemon by using rdpmc instruction on x86_64\n- Introduce notion of CPU die in topology module\n- Use CPU dies for socket-lock for Intel CascadelakeAP\n- Add environment variable LIKWID_IGNORE_CPUSET to break out of current CPUset\n- Fixes for affinity module CPUlist sorting\n- Build against system-installed hwloc\n- Update for Intel SkylakeX/CascadelakeX L3 group\n- Rename DataFabric events for all generations of AMD Zen\n- Add static cache configuration for Fujitsu A64FX\n- Add multiplexing checks for perf_event backend\n- Fix for table width of likwid-topology afteradding CPU die column\n- Adding RasPi 4 with 32 bit OS as ARMv7\n- Add default groups for Intel Icelake desktop\n- Fix for likwid-setFrequencies to not apply minFreq when setting governor\n- likwid-powermeter: Fix hwthread selection when run with -p\n- likwid-setFrequencies: Get measured base frequency if register is not readable\n- CLOCK group for all AMD Zen\n- Fixes in Nvidia GPU support in NvMarkerAPI and topology module\n\n# Changelog 5.1.1\n- Support for Intel Cometlake desktop (Core + Uncore)\n- Fix for topology module of Fujitsu A64FX\n- Fix for Intel Skylake SP in SNC mode\n- Fix for likwid-perfscope\n- Fix for CLI argument parsing\n- Updated group and data file checkers\n- Vector sum benchmark in SVE\n- FP_PIPE group for Fujitsu A64FX\n- Maximal number of CLI arguments configurable in config.mk (currently 16384)\n\n# Changelog 5.1.0\n- Support for Intel Icelake desktop (Core + Uncore)\n- Support for Intel Icelake server (Core only)\n- Support for Intel Tigerlake desktop (Core only)\n- Support for Nvidia GPUs with compute capability >= 7.0 (CUpti Profiling API)\n- Support for Fujitsu A64FX (Core) including SVE assembly benchmarks\n- Support for ARM Neoverse N1 (AWS Graviton 2)\n- Support for AMD Zen3 (Core + Uncore but without any events)\n- Check for Intel HWP\n- Fix for TID filter of Skylake SP LLC filter0 register\n- Fix for Lua 5.1\n- Fix for likwid-mpirun skip masks\n- Fortran90 interface for NvMarkerAPI\n- CPU_is_online check to filter non-usable CPU cores\n\n# Changelog 5.0.2\n- Fix memory leak in calc_metric()\n- New peakflops benchmarks in likwid-bench\n- Fix for NUMA domain handling properly\n- Improvements for perf_event backend\n- Fix for perfctr and powermeter with perf_event backend\n- Fix for likwid-mpirun for SLURM with cpusets\n- Fix for likwid-setFrequencies in cpusets\n- Update for POWER9 event list\n- Updates for AMD Zen, Zen+ and Zen2 (events, groups)\n- Fix for Intel Uncore events with same name for different devices\n- Fix for file descriptor handling\n- Fix for compilation with GCC10\n- Remove sleep timer warning\n- Update examples C-markerAPI and C-internalMarkerAPI\n\n# Changelog 5.0.1\n- Some fixes for likwid-mpirun\n  - Fix for hybrid pinning with multiple hosts\n  - Fix for perf.groups without core-local events (switch to likwid-pin)\n  - Fix for command line parser\n  - For for mpiopts parameter\n  - Add UPMC as Uncore counter to splitUncoreEvents()\n  - Expand user-given input to abspath if possible\n  - Check for at least one executable in user-given command\n  - Add skip mask for SLURM + Intel OpenMP\n  - Check if user-given MPI type is available\n- Fix for perf_event backend when used as root\n- Inlude likwid-marker.h in likwid.h to not break old MarkerAPI code\n- Enable build with ARM HPC compiler (ARMCLANG compiler setting)\n- Fix creation of likwid-bench benchmarks on POWER platforms\n- Fix for build system in NVIDIA_INTERFACE=BUILD_APPDAEMON=true\n- Update for executable tester\n- Update for MPI+X test (X: OpenMP or Pthreads)\n\n# Changelog 5.0.0\n- Support for ARM architectures. Special support for Marvell Thunder X2\n- Support for IBM POWER architectures. Support for POWER8 and POWER9.\n- Support for AMD Zen2 microarchitecture.\n- Support for data fabric counters of AMD Zen microarchitecture\n- Support for Nvidia GPU monitoring (with NvMarkerAPI)\n- New clock frequency backend (with less overhead)\n- Generation of benchmarks for likwid-bench on-the-fly from ptt files\n- Switch back to C-based metric calculator (less overhead)\n- Interface function to performance groups, create your own.\n- Integration of GOTCHA for hooking into client application at runtime\n- Thread-local initialization of streams for likwid-bench\n- Enhanced support for SLURM with likwid-mpirun\n- New MPI and Hybrid pinning features for likwid-mpirun\n- Interface to enable the membind kernel memory policy\n- JSON output filter file (use -o output.json)\n- Update of internal HWLOC to 2.1.0\n\n\n# Changelog 4.3.4\n- Fix for detecting PCI devices if system can split up LLC and memory channels (Intel CoD or SNC)\n- Don't pin accessDaemon to threads to avoid long access latencies due to busy hardware thread\n- Fix for calculations in likwid-bench if streams are used for input and output\n- Fix for LIKWID_MARKER_REGISTER with perf_event backend\n- Support for Intel Atom (Tremont) (nothing new, same as Intel Atom (Goldmont Plus))\n- Workaround for topology detection if LLC and memory channels are split up. Kernel does not detect it properly sometimes. (Intel CoD or SNC)\n- Minor updates for build system\n- Minor updates for documentation\n\n# Changelog 4.3.3\n- Fixes for likwid-mpirun\n- Fixes for events of Intel Skylake SP and Intel Broadwell\n- Support for Intel CascadeLake X (only new eventlist, uses code from Intel Skylake SP)\n- Fix for bitmask creation in Lua\n- Event options for perf_event backend\n- New assembly benchmarks in likwid-bench\n- MarkerAPI: Function to reset regions\n- Some new performance groups (DIVIDE and TMA)\n- Fixes for AMD Zen performance groups\n- Fix when using topology input file\n- Minor bugfixes\n\n# Changelog 4.3.2\n- Fix in internal metric calculator\n- Support for Intel Knights Mill (core, rapl, uncore)\n- Intel Skylake X: Some fixes for events and perf. groups\n- Set KMP_INIT_AT_FORK to bypass bug in Intel OpenMP memory allocator\n- AMD Zen: Use RETIRED_INSTRUCTION instead of fixed-purpose counter for metric calculation\n- All FLOPS_* groups now have vectorization ratio\n- Fix for MarkerAPI with perf_event backend\n- Fix for maximal/minimal uncore frequency\n- Skip counters that are already in use, don't exit\n- likwid-mpirun: minor fix when overloading a host\n- Improved detection of PCI devices\n\n# Changelog 4.3.1\n- Fix for setting/getting turbo mode in frequency module\n- Exchanged two events in perf. groups of Intel Skylake X\n\n# Changelog 4.3.0\n- Support for Intel Skylake SP architecture (core, uncore, energy)\n- Support for AMD Zen architecture (core, l2, energy)\n- Pinning strategy 'balanced'\n\n# Changelog 4.2.1\n- Fix for logical selection strings\n- likwid-agent: general update\n- likwid-mpirun: Improved SLURM support\n- likwid-mpirun: Print metrics sorted as they are listen in perf. group\n- likwid-perfctr: Print metrics/events as header in timeline mode\n- likwid-setFrequency: Commandline options to set min, max and current frequency\n- Pinning-Library: Automatically detect and skip shepard threads\n- Intel Broadwell: Added support for E3 (like Desktop), Fix for L3 group\n- Intel IvyBridge: Fix for PCU fixed-purpose counters\n- Intel Skylake: Fix for events CYCLE_ACTIVITY, new event L2_LINES_OUT\n- Intel Xeon Phi (KNL): Fix for overflow register, Update for ENERGY group\n- Intel SandyBridge: Fix for L3CACHE group\n- Event/Counter list contains only usable counters and events\n\n# Changelog 4.2.0\n- Support for Intel Xeon Phi (Knights Landing): Core, Uncore, RAPL\n- Support for Uncore counters of some desktop chips (SandyBridge, IvyBridge,\n  Haswell, Broadwell and Skylake)\n- Basic support for Linux perf_event interface instead of native access.\n  Currently only core-local counters working, Uncore is experimental\n- Support to build against a existing Lua installation (5.1 - 5.3 tested)\n- Support for CPU frequency manipulation, Lua interface updated\n- Access module checks for LLNL's msr_safe kernel module\n- Support for counter registers that are only available when\n  HyperThreading is off\n- Fix for non-HyperThreading counters (PMC4-7) on Intel Broadwell\n- Socket measurements can be used for all cores on the socket in\n  metric formulas.\n- likwid-perfctr: Timeline mode without executable runs until user presses Ctrl+c\n- likwid-perfctr: New CYCLE_ACTIVITY groups\n- likwid-perfctr: New PORT_USAGE groups (only with deactivated HyperThreading)\n- likwid-perfctr: Regions are sorted in output as they are executed by the code\n- likwid-powermeter: Read Uncore frequency settings and performance energy bias\n- likwid-powermeter: Update of energy unit for DRAM domain for Intel\n                     Broadwell D/EP and Intel Xeon Phi (Knights Landing)\n- likwid-bench: Fix for 'cycles per update' metric\n- likwid-bench: Vector lengths are sanitized for thread count and loop stride\n- likwid-topology: Increase robustness\n- likwid-mpirun: Some fixes\n\n# Changelog 4.1.2\n- Fix for likwid-powermeter: Use proper energy unit\n- Fix for performance groups for Intel Broadwell (D/EP): DATA and FALSE_SHARE\n- Reduce number of started access daemons\n- Clean Uncore unit local control registers (needed for simultaneous use of LIKWID 3 and 4)\n- Clean config, filter and counter registers at *_finalize function\n- Fix for likwid-features and likwid-perfctr\n\n# Changelog 4.1.1\n- Fix for Uncore handling for EP/EN/EX systems\n- Minor fix for Uncore handling for Intel desktop systems\n- Fix in generic readCounters function\n- Support for Intel Goldmont (untested)\n- Fixes for likwid-mpirun\n\n# Changelog 4.1.0\n- Support for Intel Skylake (Core + Uncore)\n- Support for Intel Broadwell (Core + Uncore)\n- Support for Intel Broadwell D (Core + Uncore)\n- Support for Intel Broadwell EP/EN/EX (Core + Uncore)\n- Support for Intel Airmont (Core)\n- Uncore support for Intel SandyBridge, IvyBridge and Haswell\n- Performance group and event set handling in library\n- Internal calculator for derived metrics\n- Improvement of Marker API\n- Get results/metrics of last measurement cycle\n- Fixed most memory leaks\n- Respect 'Intel PMU sharing guide'\n- Update of internal Lua to 5.3\n- More examples (C++11 threads,Cilk+, TBB)\n- Test suite for executables and library\n- Accuracy checker supports multiple CPUs\n- Security checked access daemon\n- Likwid-bench supports Integer benchmarks\n- Likwid-bench selects interation count automatically\n- Likwid-bench has new FMA related benchmarks\n- Likwid-mpirun supports SLURM job scheduler\n- New tool likwid-features\n\n# Changelog 4.0.1\n- likwid-bench: Iteration determination is done serially\n- likwid-bench: Manual selection of iterations possible\n- likwid-perfctr: Set cpuset to all CPUs not only the first\n- likwid-pin: Set cpuset to all CPUs not only the first\n- likwid-accuracy.py: Enhanced plotting functions, use only instrumented likwid-bench\n- likwid-accessD: Check for allowed register for PCI accesses\n- Add models HASWELL_M1 (0x45) and HASWELL_M2 (0x46) to likwid-powermeter and likwid-accessD\n- New test application using Cilk and Marker API\n- New test application using C++11 threads and Marker API\n- likwid-agent: gmetric version check for --group option and s/\\s*/_/ in metric names\n- likwid-powermeter: Print RAPL domain name\n- Marker API: Initialize access already at likwid_markerInit()\n- Marker API: likwid_markerThreadInit() only pins if not already pinned\n\n# Changelog 4.0.0\n\n- Support for Intel Broadwell\n- Uncore support for all Uncore-aware architectures\n    - Nehalem (EX)\n    - Westmere (EX)\n    - SandyBridge EP\n    - IvyBridge EP\n    - Haswell EP\n- Measure multiple event sets in a round-robin fashion (no multiplexing!)\n- Event options to filter the counter increments\n- Whole LIKWID functionality is exposed as API for C/C++ and Lua\n- New functions in the Marker API to switch event sets and get intermediate results\n- Topology code relies on hwloc. CPUID is still included but only as fallback\n- Most LIKWID applications are written in Lua (only exception likwid-bench)\n- Monitoring daemon likwid-agent with multiple output backends\n- More performance groups\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 31.7119140625,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 10.197265625,
          "content": "== Basic build ==\n\n1. Edit config.mk. Follow the comments there.\n   Optionally you can change compiler settings in include_[GCC|CLANG|ICC|MIC|*].mk.\n   Please note that only the default compiler flags GCC are supported and tested.\n   For 32 bit builds the only supported compiler setting is GCCX86.\n   For ARM builds the possible compiler settings are GCCARMv8 and ARMCLANG.\n   For POWER builds the possible compiler settings are GCCPOWER and XLC.\n2. make (Builds hwloc, lua, Likwid libraries, access daemons and likwid-bench)\n3. make install (this is required for likwid-pin and if you use the accessDaemon)\n\nOnly the default flags set are tested. As it is not possible to test all\ncompiler setting variants the Intel icc compiler and Clang is only build tested.\nA basic function test is done for the icc binary. The only variant fully tested\nis gcc with default compiler flags. It is therefore recommended to use gcc with\nthe default flags. If you want to use and build the Fortran interface you can mix\nGCC with the Intel Fortran Compiler (default setup). You can change the Fortran\ncompiler in make/include_[GCC|CLANG|ICC|MIC].mk.\n\n*NOTICE*\n\nAll generated files are located in the [GCC|ICC|CLANG|MIC|GCCX86|*] build directory.\nThis includes the dependency files, object files. The\ngenerated source files and the pas and assembly files for likwid-bench are build\nin bench/[GCC|ICC|CLANG|MIC|GCCX86].\nIf you debug your likwid-bench benchmarks you can look at all\nintermediate build files and also the final assembly code.\n\n== Build on Xeon Phi (Knights Corner) ==\nThis section is _only_ for Knights Corner, for Knights Landing use default\ninstallation method!\nFor builds for the Xeon Phi (Knights Corner) coprocessor, the accessDaemon and\nthe frequency daemon are disabled. Moreover, the access mode is set to 'direct'.\nThis was made because it is important to run as few processes as possible on the\nXeon Phi and the accessDaemon would start one process per hardware thread.\nIn order to build Likwid for the Xeon Phi processor, you have to change the\nRPATHS variable in make/include_MIC.mk to point to the folder with the Intel\nlibraries like libimf.so. This is crucial because when using an suid-root\nexecutable, the LD_LIBRARY_PATH gets lost but Likwid still needs to know where\nthe Intel libraries reside.\nAfter installation change the owner of likwid-lua to root and set the suid-root\nbit for likwid-lua:\nchown root <BINPATH>/likwid-lua\nchmod u+s <BINPATH>/likwid-lua\nAfterwards Likwid can be used as anywhere else.\n\n== Known problems ==\n\nOn very old systems with old kernels (< 2.6.7) or old glibc versions likwid\nis build with reduced funtionality. This includes missing support for NUMA\nand pinning.\nlikwid-setFrequencies can only be used if the acpi_cpufreq module is loaded. It\nis not possible to fix the frequency with the intel_pstate module.\n\n== Additional Targets ==\n\nmake clean     -  clean the object directory\nmake distclean -  clean also the executables/libraries\nmake uninstall -  delete installed files\nmake docs      -  generate html documentation using doxygen\nmake local     -  set paths in Lua files to work from current directory\n                  (for testing only! Uses already installed access daemons and\n                  libraries. Often you have to set the LD_LIBRARY_PATH to the\n                  contain the current folder)\n\n== Dependencies ==\nMost parts of the Likwid suite do not have external dependencies that need to be\ninstalled before you can build Likwid. If external libraries are used, they are\nshipped with Likwid.\n\nIncluded dependencies:\n- hwloc\n- Lua\n- Perl Template toolkit\n- GOTCHA (experimental)\n\n\nBuild dependencies:\n- C compiler (commonly gcc, but clang and icc are also possible)\n- make\n- Perl\n\nRuntime dependencies for likwid-perfscope:\n- gnuplot\n\nFor the HTML documentation you further need doxygen.\n\n== Build  accessDaemon ==\n\nChange path for the accessDaemon:\n\n1. Edit config.mk and configure path in ACCESSDAEMON variable. You can overwrite\n   it later in likwid.cfg\n2. Set the desired default ACCESSMODE. You can overwrite this on the command\n   line or likwid.cfg.\n2. make will also build the accessDaemon\n3. Install with (sudo) make install\n\nWith the standard make install target the daemon will also be installed in\nto the path in $ACCESSDAEMON. It also sets the user to root and the suid bit.\n\n== Setup of msr module ==\n\nlikwid-perfctr, likwid-powermeter, likwid-agent, require the Linux msr kernel\nmodule. This module is part of most standard distro kernels. You have to be root\nto do the initial setup.\n\n1. Check if the msr module is loaded with 'lsmod | grep msr'.\n   There should be an output.\n2. If the module is not loaded, load it with 'modprobe msr'. For automatic\n   loading at startup consult your distros documentation how to do so, commonly\n   by adding 'msr' to /etc/modules.\n3. Adopt access rights on the msr device files for normal user. To allow\n   everybody access you can use 'chmod o+rw /dev/cpu/*/msr'.\n   This is only recommended on save single user desktop systems and might be not\n   enough to grant access to anybody because of POSIX capabilites or other\n   security features of your distro.\n\nAs a general access to the msr registers is not desired on security sensitive\nsystems, you can either implement a more sophisticated access rights settings\nwith e.g. setgid. A common solution used on many other device files, e.g. for\naudio, is to introduce a group and make a chown on the msr device files to that\ngroup or use dbus rules. Now if you execute likwid-perfctr with setgid on that\ngroup the executing user can use the tool but cannot directly write or read the\nmsr device files.\n\nA secure solution is to use the accessDaemon, which encapsulates the access to\nthe msr device files and performs an address check for allowed registers. For\nmore information how to setup look at the HTML documentation.\n\nA demo for a root exploit involving the msr device files was published. As\na consequence the security settings for access to the msr device files are\ntightened in recent kernels. The exploit used a specify register to alter the\nentry point for the current process to a malware. The daemon grants access only\nto hardware performance counter related registers.\n\nJust setting the file access rights or using suid root on the access daemon is\nnot sufficient anymore for some distros. You have to register your binary at the\nlibcap now to get access. This is only necessary if above setup does not work.\n\nYou register the necessary capability by calling\n\nsudo setcap cap_sys_rawio+ep EXECUTABLE\n\non the executables. Not all file systems support capabilities.\nThe only feasable way is to register the likwid-accessD and proxy all access\nover it.\n\nIf you want to avoid the suid-root likwid-accessD, it is still possible to use\ndirect mode access for normal users. Set the capabilities on the LIKWID binaries\nas described above and additionally assign rw file permissions to the user on\n/dev/cpu/*/msr (with groups, ACLs, etc.). However, beware of the security risk.\n\nIn case access to MSRs is still not possible, you can additionally set\ncap_dac_override. Please be aware that this poses a severe security risk, since\nit allows accessD (accessdaemon mode) or one of the LIKWID binaries (direct mode)\nto read and write all files on the system. This is easily exploitable to become\nroot. Do not do this unless you know what you are doing.\n\nNotes regarding Intel Sapphire Rapids (and possibly newer) CPUs:\nIn order to support Uncore Discovery, LIKWID needs read and write access to\n/dev/mem. If required, set the capabilities the same way as you do for MSR device\nfiles. Please be reminded that user access to /dev/mem leaves the door open for\nanyone who wants to exploit the system. Accordingly, the usage of accessD with\nsuid-root is highly recommended.\n\nUpdate for Linux kernel 5.9 and newer:\nWith Linux 5.9, the msr kernel module got some security fixes. The major change for LIKWID is, that now all MSR are non-writable by default. In order to change that, you have to change the boot options of your operating system to contain msr.allow_writes=on to enable writes again. This affects only ACCESSMODE=direct and ACCESSMODE=accessdaemon. If you use the perf_event backend, you don't have to change anything.\n\nUpdate for Linux kernel 5.10 and newer:\nWe got reports, that with Linux 5.10 the PCI accesses are also restricted by security mechanisms. In order to fix this, the access daemon requires an additinal capabilities flag: sudo setcap cap_sys_admin,cap_sys_rawio=ep EXECUTABLE\n\nIf you have still problems please let me know on the likwid mailing list:\nhttp://groups.google.com/group/likwid-users\n\n== Building LIKWID with perf_event kernel backend ==\nWhen setting USE_PERF_EVENT in config.mk, the perf_event kernel interface is\nused to programm the counters instead of the way through the msr kernel module\nand PCI devices. The event and counter lists are the same.\nThe perf_event interface handles the counter allocation itself, thus the counters\nprovided to LIKWID might not be the ones perf_event uses internally.\nThe support is tested for the core-local fixed- and general-purpose counters. The\nparanoid setting requires to be 1 or less.\nIt is also able to use it for Uncore counters but the support is experimental\nand requires a paranoid setting of 0 or less.\nCurrently no counter options are supported.\n\nparanoid setting: /proc/sys/kernel/perf_event_paranoid\n\n\n== Linking applications with LIKWID lib ==\nCommonly the LIKWID C library can be used as all other libraries by setting the\ninclude (-I) and library path (-L) and add -llikwid to the command line.\n\n==== Internal hwloc library ====\nThe included hwloc library shouldn't make a problem as all hwloc functions are\nprefixed with 'likwid_'.\n\n==== Internal Lua library and interpreter ====\nThe included Lua libray might cause problems because the functions are not\nrenamed and might interfere with the other Lua library functions.\nMaybe it works if the versions of Lua are the same (5.3.2).\nThe Lua interpreter is renamed at installation to likwid-lua, so does not\noverwrite other interpreters.\n\n==== Building LIKWID with support for Nvidia GPUs ====\nThe Nvidia backend is optional and needs to be activated in config.mk. Make sure\nthat the CUDA lib/inc paths and the lib/inc paths to CUPTI are adjusted accoring\nto your system. The library paths need to be in LD_LIBRARY_PATH at runtime.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 42.1044921875,
          "content": "# =======================================================================================\n#\n#      Filename:  Makefile\n#\n#      Description:  Central Makefile\n#\n#      Version:   <VERSION>\n#      Released:  <DATE>\n#\n#      Author:  Jan Treibig (jt), jan.treibig@gmail.com\n#      Project:  likwid\n#\n#      Copyright (C) 2016 Jan Treibig\n#\n#      This program is free software: you can redistribute it and/or modify it under\n#      the terms of the GNU General Public License as published by the Free Software\n#      Foundation, either version 3 of the License, or (at your option) any later\n#      version.\n#\n#      This program is distributed in the hope that it will be useful, but WITHOUT ANY\n#      WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n#      PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n#\n#      You should have received a copy of the GNU General Public License along with\n#      this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n# =======================================================================================\n\nBASE_DIR    = $(shell pwd)\nSRC_DIR     = $(BASE_DIR)/src\nDOC_DIR     = $(BASE_DIR)/doc\nGROUP_DIR   = $(BASE_DIR)/groups\nFILTER_DIR  = $(BASE_DIR)/filters\nMAKE_DIR    = $(BASE_DIR)/make\nEXAMPLES_DIR    = $(BASE_DIR)/examples\n\nQ         ?= @\n\n#DO NOT EDIT BELOW\n\n# Dependency chains:\n# *.[ch] -> *.o -> executables\n# *.ptt -> *.pas -> *.s -> *.o -> executables\n# *.txt -> *.h (generated)\n\ninclude ./config.mk\ninclude $(MAKE_DIR)/include_$(COMPILER).mk\ninclude $(MAKE_DIR)/config_git.mk\ninclude $(MAKE_DIR)/config_checks.mk\ninclude $(MAKE_DIR)/config_defines.mk\n\nINCLUDES  += -I./src/includes -I$(LUA_INCLUDE_DIR) -I$(HWLOC_INCLUDE_DIR) -I$(BUILD_DIR)\nLIBS      += -ldl\n\n#CONFIGURE BUILD SYSTEM\nBUILD_DIR  = ./$(COMPILER)\nGENGROUPLOCK = .gengroup\n\nVPATH     = $(SRC_DIR)\nOBJ       = $(patsubst $(SRC_DIR)/%.c, $(BUILD_DIR)/%.o,$(wildcard $(SRC_DIR)/*.c))\nOBJ      += $(patsubst $(SRC_DIR)/%.cc, $(BUILD_DIR)/%.o,$(wildcard $(SRC_DIR)/*.cc))\nOBJ      += $(patsubst $(SRC_DIR)/%.S, $(BUILD_DIR)/%.o,$(wildcard $(SRC_DIR)/*.S))\nifeq ($(FILTER_HWLOC_OBJ),yes)\nOBJ := $(filter-out $(BUILD_DIR)/topology_hwloc.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/numa_hwloc.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/pci_hwloc.o,$(OBJ))\nendif\nifneq ($(FORTRAN_INTERFACE),true)\nOBJ := $(filter-out $(BUILD_DIR)/likwid_f90_interface.o,$(OBJ))\nendif\nifeq ($(COMPILER), GCCARMv7)\nOBJ := $(filter-out $(BUILD_DIR)/topology_cpuid.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/loadData.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_msr.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_pci.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_rdpmc.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_mmio.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_clientmem.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_translate.o,$(OBJ))\nelse\nOBJ := $(filter-out $(BUILD_DIR)/loadDataARM.o,$(OBJ))\nendif\nifeq ($(COMPILER), GCCARMv8)\nOBJ := $(filter-out $(BUILD_DIR)/topology_cpuid.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/loadData.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_msr.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_pci.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_rdpmc.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_mmio.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_clientmem.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_translate.o,$(OBJ))\nelse\nOBJ := $(filter-out $(BUILD_DIR)/loadDataARM.o,$(OBJ))\nendif\nifeq ($(COMPILER), GCCARM)\nOBJ := $(filter-out $(BUILD_DIR)/topology_cpuid.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/loadData.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_msr.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_pci.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_rdpmc.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_mmio.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_clientmem.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_translate.o,$(OBJ))\nelse\nOBJ := $(filter-out $(BUILD_DIR)/loadDataARM.o,$(OBJ))\nendif\nifeq ($(COMPILER), FCC)\nOBJ := $(filter-out $(BUILD_DIR)/topology_cpuid.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/loadData.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_msr.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_pci.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_rdpmc.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_mmio.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_clientmem.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_translate.o,$(OBJ))\nelse\nOBJ := $(filter-out $(BUILD_DIR)/loadDataARM.o,$(OBJ))\nendif\nifeq ($(COMPILER), ARMCLANG)\nOBJ := $(filter-out $(BUILD_DIR)/topology_cpuid.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/loadData.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_msr.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_pci.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_clientmem.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_rdpmc.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_translate.o,$(OBJ))\nelse\nOBJ := $(filter-out $(BUILD_DIR)/loadDataARM.o,$(OBJ))\nendif\nifneq ($(NVIDIA_INTERFACE), true)\nOBJ := $(filter-out $(BUILD_DIR)/nvmon.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/nvmon_nvml.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/topology_cuda.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/libnvctr.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/sysFeatures_nvml.o,$(OBJ))\nendif\nifneq ($(ROCM_INTERFACE), true)\nOBJ := $(filter-out $(BUILD_DIR)/rocmon.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/rocmon_marker.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/topology_rocm.o,$(OBJ))\nendif\nifeq ($(COMPILER),GCCPOWER)\nOBJ := $(filter-out $(BUILD_DIR)/topology_cpuid.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_msr.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_pci.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_clientmem.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_rdpmc.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_mmio.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_translate.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/loadData.o,$(OBJ))\nendif\nifeq ($(COMPILER),XLC)\nOBJ := $(filter-out $(BUILD_DIR)/topology_cpuid.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_msr.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_pci.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_clientmem.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_rdpmc.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_mmio.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/access_x86_translate.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/loadData.o,$(OBJ))\nendif\nPERFMONHEADERS  = $(patsubst $(SRC_DIR)/includes/%.txt, $(BUILD_DIR)/%.h,$(wildcard $(SRC_DIR)/includes/*.txt))\nOBJ_LUA    =  $(wildcard ./ext/lua/$(COMPILER)/*.o)\nOBJ_HWLOC  =  $(wildcard ./ext/hwloc/$(COMPILER)/*.o)\nOBJ_GOTCHA = $(wildcard ./ext/GOTCHA/$(COMPILER)/*.o)\nFILTERS := $(filter-out $(FILTER_DIR)/README,$(wildcard $(FILTER_DIR)/*))\n\n\nL_APPS      =   likwid-perfctr \\\n\t\t\t\tlikwid-pin \\\n\t\t\t\tlikwid-powermeter \\\n\t\t\t\tlikwid-topology \\\n\t\t\t\tlikwid-memsweeper \\\n\t\t\t\tlikwid-mpirun \\\n\t\t\t\tlikwid-features \\\n\t\t\t\tlikwid-perfscope \\\n\t\t\t\tlikwid-genTopoCfg\nC_APPS      =   bench/likwid-bench\nL_HELPER    =   likwid.lua\nifeq ($(BUILDFREQ),true)\n\tL_APPS += likwid-setFrequencies\nendif\nifeq ($(BUILD_SYSFEATURES),true)\n\tL_APPS += likwid-sysfeatures\n\tDEFINES += -DLIKWID_WITH_SYSFEATURES\nelse\nSYSFEATURE_OBJ       = $(patsubst $(SRC_DIR)/%.c, $(BUILD_DIR)/%.o,$(wildcard $(SRC_DIR)/sysFeatures*.c))\nOBJ := $(filter-out $(SYSFEATURE_OBJ), $(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/likwid_device.o,$(OBJ))\nOBJ := $(filter-out $(BUILD_DIR)/devstring.o,$(OBJ))\nendif\n\nCPPFLAGS := $(CPPFLAGS) $(DEFINES) $(INCLUDES)\n\n.PHONY: all\nifeq ($(BUILDDAEMON),false)\nall: $(TARGET_LIB) $(FORTRAN_IF) $(PINLIB) $(L_APPS) $(L_HELPER) $(FREQ_TARGET) $(BENCH_TARGET) $(APPDAEMON_TARGET)\nelse\nifeq ($(BUILDFREQ),false)\nall: $(TARGET_LIB) $(FORTRAN_IF) $(PINLIB) $(L_APPS) $(L_HELPER) $(DAEMON_TARGET) $(BENCH_TARGET) $(APPDAEMON_TARGET)\nelse\nifeq ($(CONTAINER_HELPER),false)\nall: $(TARGET_LIB) $(FORTRAN_IF) $(PINLIB) $(L_APPS) $(L_HELPER) $(DAEMON_TARGET) $(FREQ_TARGET) $(BENCH_TARGET) $(APPDAEMON_TARGET)\nelse\nall: $(TARGET_LIB) $(FORTRAN_IF) $(PINLIB) $(L_APPS) $(L_HELPER) $(DAEMON_TARGET) $(FREQ_TARGET) $(BENCH_TARGET) $(APPDAEMON_TARGET) $(CONTAINER_HELPER_TARGET)\nendif\nendif\nendif\n\n.PHONY: tags\ntags:\n\t@echo \"===>  GENERATE  TAGS\"\n\t$(Q)ctags -R\n\n.PHONY: docs\ndocs:\n\t@echo \"===>  GENERATE DOXYGEN DOCS\"\n\t@cp doc/lua-doxygen.md doc/lua-doxygen.md.safe\n\t@cp doc/likwid-doxygen.md doc/likwid-doxygen.md.safe\n\t@cp doc/Doxyfile doc/Doxyfile.safe\n\t@sed -i -e 's#<PREFIX>#$(PREFIX)#g' -e 's#<VERSION>#$(VERSION)#g' -e 's#<DATE>#$(DATE)#g' -e 's#<RELEASE>#$(RELEASE)#g' -e 's#<MINOR>#$(MINOR)#g' -e 's#<GITCOMMIT>#$(GITCOMMIT)#g' doc/lua-doxygen.md\n\t@sed -i -e 's#<PREFIX>#$(PREFIX)#g' -e 's#<VERSION>#$(VERSION)#g' -e 's#<DATE>#$(DATE)#g' -e 's#<RELEASE>#$(RELEASE)#g' -e 's#<MINOR>#$(MINOR)#g' -e 's#<GITCOMMIT>#$(GITCOMMIT)#g' doc/likwid-doxygen.md\n\t@sed -i -e 's#<PREFIX>#$(PREFIX)#g' -e 's#<VERSION>#$(VERSION)#g' -e 's#<DATE>#$(DATE)#g' -e 's#<RELEASE>#$(RELEASE)#g' -e 's#<MINOR>#$(MINOR)#g' -e 's#<GITCOMMIT>#$(GITCOMMIT)#g' doc/Doxyfile\n\t$(Q)doxygen doc/Doxyfile\n\t@mv doc/lua-doxygen.md.safe doc/lua-doxygen.md\n\t@mv doc/likwid-doxygen.md.safe doc/likwid-doxygen.md\n\t@mv doc/Doxyfile.safe doc/Doxyfile\n\n$(L_APPS):  $(addprefix $(SRC_DIR)/applications/,$(addsuffix  .lua,$(L_APPS)))\n\t@echo \"===>  ADJUSTING  $@\"\n\t@if [ \"$(ACCESSMODE)\" = \"direct\" ]; then sed -i -e s#\"access_mode = 1\"#\"access_mode = 0\"#g $(SRC_DIR)/applications/$@.lua;fi\n\t@sed -e s#'<INSTALLED_BINPREFIX>'#$(subst /,\\\\/,$(INSTALLED_BINPREFIX))#g \\\n\t\t-e s#'<INSTALLED_LIBPREFIX>'#$(subst /,\\\\/,$(INSTALLED_LIBPREFIX))#g \\\n\t\t-e s#'<INSTALLED_PREFIX>'#$(subst /,\\\\/,$(INSTALLED_PREFIX))#g \\\n\t\t-e s#'<VERSION>'#$(VERSION).$(RELEASE).$(MINOR)#g \\\n\t\t-e s#'<DATE>'#$(DATE)#g \\\n\t\t-e s#'<RELEASE>'#$(RELEASE)#g \\\n\t\t-e s#'<MINOR>'#$(MINOR)#g \\\n\t\t-e s#'<GITCOMMIT>'#$(GITCOMMIT)#g \\\n\t\t$(addprefix $(SRC_DIR)/applications/,$(addsuffix  .lua,$@)) > $@\n\t@if [ \"$(LUA_INTERNAL)\" = \"false\" ]; then \\\n\t\tsed -i -e s#\"$(subst /,\\\\/,$(INSTALLED_BINPREFIX))/likwid-lua\"#\"$(LUA_BIN)/$(LUA_LIB_NAME)\"# $@; \\\n\tfi\n\t@if [ \"$(ACCESSMODE)\" = \"direct\" ]; then sed -i -e s#\"access_mode = 0\"#\"access_mode = 1\"#g $(SRC_DIR)/applications/$@.lua;fi\n\n$(L_HELPER):\n\t@echo \"===>  ADJUSTING  $@\"\n\t@sed -e s#'<PREFIX>'#$(subst /,\\\\/,$(PREFIX))#g \\\n\t\t-e s#'<INSTALLED_LIBPREFIX>'#$(subst /,\\\\/,$(INSTALLED_LIBPREFIX))#g \\\n\t\t-e s#'<INSTALLED_PREFIX>'#$(subst /,\\\\/,$(INSTALLED_PREFIX))#g \\\n\t\t-e s#'<LIKWIDGROUPPATH>'#$(subst /,\\\\/,$(LIKWIDGROUPPATH))#g \\\n\t\t-e s#'<LIBLIKWIDPIN>'#$(subst /,\\\\/,$(LIBLIKWIDPIN))#g \\\n\t\t-e s#'<VERSION>'#$(VERSION)#g \\\n\t\t-e s#'<RELEASE>'#$(RELEASE)#g \\\n\t\t-e s#'<MINOR>'#$(MINOR)#g \\\n\t\t-e s#'<GITCOMMIT>'#$(GITCOMMIT)#g \\\n\t\t$(SRC_DIR)/applications/$@ > $@\n\n$(STATIC_TARGET_LIB): $(OBJ) $(TARGET_HWLOC_LIB) $(TARGET_LUA_LIB)\n\t@echo \"===>  CREATE STATIC LIB  $(TARGET_LIB)\"\n\t$(Q)$(AR) -crs $(STATIC_TARGET_LIB) $(OBJ) $(TARGET_HWLOC_LIB) $(TARGET_LUA_LIB)\n\t@sed -e s#'@PREFIX@'#$(INSTALLED_PREFIX)#g \\\n\t\t-e s#'@NVIDIA_INTERFACE@'#$(NVIDIA_INTERFACE)#g \\\n\t\t-e s#'@FORTRAN_INTERFACE@'#$(FORTRAN_INTERFACE)#g \\\n\t\t-e s#'@LIBPREFIX@'#$(INSTALLED_LIBPREFIX)#g \\\n\t\t-e s#'@BINPREFIX@'#$(INSTALLED_BINPREFIX)#g \\\n\t\tmake/likwid-config.cmake > likwid-config.cmake\n\n$(DYNAMIC_TARGET_LIB): $(OBJ) $(TARGET_HWLOC_LIB) $(TARGET_LUA_LIB)\n\t@echo \"===>  CREATE SHARED LIB  $(TARGET_LIB)\"\n\t$(Q)$(CC) $(DEBUG_FLAGS) $(SHARED_LFLAGS) -Wl,-soname,$(TARGET_LIB).$(VERSION).$(RELEASE),--no-undefined $(SHARED_CFLAGS) -o $@ $^ $(LIBS) $(RPATHS)\n\t@ln -sf $(TARGET_LIB) $(TARGET_LIB).$(VERSION).$(RELEASE)\n\t@sed -e s#'@PREFIX@'#$(INSTALLED_PREFIX)#g \\\n\t\t-e s#'@NVIDIA_INTERFACE@'#$(NVIDIA_INTERFACE)#g \\\n\t\t-e s#'@ROCM_INTERFACE@'#$(ROCM_INTERFACE)#g \\\n\t\t-e s#'@FORTRAN_INTERFACE@'#$(FORTRAN_INTERFACE)#g \\\n\t\t-e s#'@LIBPREFIX@'#$(INSTALLED_LIBPREFIX)#g \\\n\t\t-e s#'@BINPREFIX@'#$(INSTALLED_BINPREFIX)#g \\\n\t\tmake/likwid-config.cmake > likwid-config.cmake\n\n$(DAEMON_TARGET): $(SRC_DIR)/access-daemon/accessDaemon.c\n\t@echo \"===>  BUILD access daemon likwid-accessD\"\n\t$(Q)$(MAKE) --no-print-directory -C  $(SRC_DIR)/access-daemon ../../likwid-accessD\n\n$(FREQ_TARGET): $(SRC_DIR)/access-daemon/setFreqDaemon.c\n\t@echo \"===>  BUILD frequency daemon likwid-setFreq\"\n\t$(Q)$(MAKE) --no-print-directory -C  $(SRC_DIR)/access-daemon ../../likwid-setFreq\n\n$(APPDAEMON_TARGET): $(SRC_DIR)/access-daemon/appDaemon.c $(TARGET_LIB) $(TARGET_GOTCHA_LIB)\n\t@echo \"===>  BUILD application interface likwid-appDaemon.so\"\n\t$(Q)$(MAKE) --no-print-directory -C  $(SRC_DIR)/access-daemon ../../likwid-appDaemon.so\n\n$(CONTAINER_HELPER_TARGET): $(SRC_DIR)/bridge/bridge.c\n\t@echo \"===>  BUILD container helper likwid-bridge\"\n\t$(Q)$(CC) $(DEBUG_FLAGS) $(CFLAGS) $(ANSI_CFLAGS) $(CPPFLAGS) $(SRC_DIR)/bridge/bridge.c -o $@\n\n$(PINLIB):\n\t@echo \"===>  CREATE LIB  $(PINLIB)\"\n\t$(Q)$(MAKE) --no-print-directory -C src/pthread-overload/ ../../$(PINLIB)\n\n$(GENGROUPLOCK): $(foreach directory,$(shell ls $(GROUP_DIR)), $(wildcard $(GROUP_DIR)/$(directory)/*.txt))\n\t@echo \"===>  GENERATE GROUP HEADERS\"\n\t@mkdir -p $(BUILD_DIR)\n\t$(Q)$(GEN_GROUPS) ./groups  $(BUILD_DIR) ./perl/templates\n\t$(Q)touch $(GENGROUPLOCK)\n\n$(FORTRAN_IF): $(SRC_DIR)/likwid.F90\n\t@echo \"===>  COMPILE FORTRAN INTERFACE  $@\"\n\t$(Q)$(FC) -c  $(FCFLAGS) $<\n\t@rm -f likwid.o\n\nifeq ($(LUA_INTERNAL),true)\n# we usually don't change lua, so don't unconditionally rebuild it\n#.PHONY: $(TARGET_LUA_LIB)\n$(TARGET_LUA_LIB):\n\t@echo \"===>  ENTER  $(LUA_FOLDER)\"\n\t$(Q)$(MAKE) --no-print-directory -C $(LUA_FOLDER)\nelse\n$(TARGET_LUA_LIB):\n\t@echo \"===>  EXTERNAL LUA\"\nendif\n\n# we usually don't change GOTCHA, so don't unconditionally rebuild it\n#.PHONY: $(TARGET_GOTCHA_LIB)\n$(TARGET_GOTCHA_LIB):\n\t@echo \"===>  ENTER  $(GOTCHA_FOLDER)\"\n\t$(Q)$(MAKE) --no-print-directory -C $(GOTCHA_FOLDER)\n\nifeq ($(USE_INTERNAL_HWLOC),true)\n# we usually don't change hwloc, so don't unconditionally rebuild it\n#.PHONY: $(TARGET_HWLOC_LIB)\n$(TARGET_HWLOC_LIB):\n\t@echo \"===>  ENTER  $(HWLOC_FOLDER)\"\n\t$(Q)$(MAKE) --no-print-directory -C $(HWLOC_FOLDER)\nelse\n$(TARGET_HWLOC_LIB):\n\t@echo \"===>  EXTERNAL HWLOC\"\nendif\n\n.PHONY: $(BENCH_TARGET)\n$(BENCH_TARGET): $(TARGET_LIB)\n\t@echo \"===>  ENTER  $(BENCH_FOLDER)\"\n\t$(Q)$(MAKE) --no-print-directory -C $(BENCH_FOLDER)\n\n#PATTERN RULES\n$(BUILD_DIR)/%.o: %.c $(PERFMONHEADERS)\n\t@echo \"===>  COMPILE  $@\"\n\t@mkdir -p $(BUILD_DIR)\n\t$(Q)$(CC) -c $(DEBUG_FLAGS) $(CFLAGS) $(ANSI_CFLAGS) $(CPPFLAGS) $< -o $@\n\t$(Q)$(CC) $(DEBUG_FLAGS) $(CPPFLAGS) -MT $(@:.d=.o) -MM  $< > $(BUILD_DIR)/$*.d\n\n$(BUILD_DIR)/rocmon_marker.o:  rocmon_marker.c\n\t@echo \"===>  COMPILE  $@\"\n\t@mkdir -p $(BUILD_DIR)\n\t$(Q)$(CC) -c $(DEBUG_FLAGS) $(CFLAGS) $(ANSI_CFLAGS) $(CPPFLAGS) $< -o $@\n\t$(Q)objcopy --redefine-sym HSA_VEN_AMD_AQLPROFILE_LEGACY_PM4_PACKET_SIZE=HSA_VEN_AMD_AQLPROFILE_LEGACY_PM4_PACKET_SIZE2 $@\n\n$(BUILD_DIR)/%.o:  %.cc\n\t@echo \"===>  COMPILE  $@\"\n\t@mkdir -p $(BUILD_DIR)\n\t$(Q)$(CXX) -c $(DEBUG_FLAGS) $(CXXFLAGS) $(CPPFLAGS) $< -o $@\n\t$(Q)$(CXX) $(DEBUG_FLAGS) $(CXXFLAGS) $(CPPFLAGS) -MT $(@:.d=.o) -MM  $< > $(BUILD_DIR)/$*.d\n\n$(BUILD_DIR)/%.o:  %.S\n\t@echo \"===>  COMPILE  $@\"\n\t@mkdir -p $(BUILD_DIR)\n\t$(Q)$(CPP) $(CPPFLAGS) $< -o $@.tmp\n\t$(Q)$(AS) $(ASFLAGS) $@.tmp -o $@\n\t@rm $@.tmp\n\n# Keep generated headers. Because all sources (unfortunately) depend on the\n# PERFMONHEADERS, they all get rebuilt if a single source file is rebuilt.\n# That is because make usually cleans up those headers, which causes them to be\n# all regenerated every time, thus causing all .c files to be rebuilt.\n.PRECIOUS: $(PERFMONHEADERS)\n$(BUILD_DIR)/%.h:  $(SRC_DIR)/includes/%.txt\n\t@echo \"===>  GENERATE HEADER $@\"\n\t@mkdir -p $(BUILD_DIR)\n\t$(Q)$(GEN_PMHEADER) $< $@\n\nifeq ($(findstring $(MAKECMDGOALS),clean),)\n-include $(OBJ:.o=.d)\nendif\n\n.PHONY: clean\nclean:\n\t@echo \"===>  CLEAN\"\n\t$(Q)$(MAKE) --no-print-directory -C $(LUA_FOLDER) $(MAKECMDGOALS)\n\t$(Q)$(MAKE) --no-print-directory -C $(HWLOC_FOLDER) $(MAKECMDGOALS)\n\t$(Q)$(MAKE) --no-print-directory -C $(GOTCHA_FOLDER) $(MAKECMDGOALS)\n\t$(Q)$(MAKE) --no-print-directory -C $(BENCH_FOLDER) $(MAKECMDGOALS)\n\t@rm -f $(L_APPS) likwid-sysfeatures likwid-setFrequencies\n\t@rm -f likwid.lua\n\t@rm -f $(STATIC_TARGET_LIB)\n\t@rm -f $(DYNAMIC_TARGET_LIB)*\n\t@rm -f $(PINLIB)*\n\t@rm -f $(FORTRAN_IF_NAME)\n\t@rm -f $(FREQ_TARGET) $(DAEMON_TARGET) $(APPDAEMON_TARGET) $(CONTAINER_HELPER_TARGET)\n\t@rm -f likwid-config.cmake\n\n.PHONY: distclean\ndistclean: clean\n\t@echo \"===>  DIST CLEAN\"\n\t@rm -rf $(BUILD_DIR)\n\t@if [ \"$(LUA_INTERNAL)\" = \"true\" ]; then rm -f $(TARGET_LUA_LIB).* $(shell basename $(TARGET_LUA_LIB)).*; fi\n\t@if [ \"$(USE_INTERNAL_HWLOC)\" = \"true\" ]; then rm -f $(TARGET_HWLOC_LIB).* $(shell basename $(TARGET_HWLOC_LIB)).*; fi\n\t@rm -f $(TARGET_GOTCHA_LIB).* $(shell basename $(TARGET_GOTCHA_LIB)).*\n\t@rm -f $(GENGROUPLOCK)\n\t@rm -rf doc/html\n\t@rm -f tags\n\n.PHONY: install_daemon move_daemon uninstall_daemon uninstall_daemon_moved\nifeq ($(BUILDDAEMON),true)\nifneq ($(COMPILER),MIC)\ninstall_daemon:\n\t@echo \"===> INSTALL access daemon to $(ACCESSDAEMON)\"\n\t@mkdir -p `dirname $(ACCESSDAEMON)`\n\tinstall -m 4755 $(INSTALL_CHOWN) $(DAEMON_TARGET) $(ACCESSDAEMON)\nmove_daemon:\n\t@echo \"===> MOVE access daemon from $(ACCESSDAEMON) to $(INSTALLED_ACCESSDAEMON)\"\n\t@mkdir -p `dirname $(INSTALLED_ACCESSDAEMON)`\n\t@install -m 4755 $(INSTALL_CHOWN) $(ACCESSDAEMON) $(INSTALLED_ACCESSDAEMON)\nuninstall_daemon:\n\t@echo \"===> REMOVING access daemon from $(ACCESSDAEMON)\"\n\t@rm -f $(ACCESSDAEMON)\nuninstall_daemon_moved:\n\t@echo \"===> REMOVING access daemon from $(INSTALLED_ACCESSDAEMON)\"\n\t@rm -f $(INSTALLED_ACCESSDAEMON)\nelse\ninstall_daemon:\n\t@echo \"===> No INSTALL of the access daemon\"\nmove_daemon:\n\t@echo \"===> No MOVE of the access daemon\"\nuninstall_daemon:\n\t@echo \"===> No UNINSTALL of the access daemon\"\nuninstall_daemon_moved:\n\t@echo \"===> No UNINSTALL of the access daemon\"\nendif\nelse\ninstall_daemon:\n\t@echo \"===> No INSTALL of the access daemon\"\nmove_daemon:\n\t@echo \"===> No MOVE of the access daemon\"\nuninstall_daemon:\n\t@echo \"===> No UNINSTALL of the access daemon\"\nuninstall_daemon_moved:\n\t@echo \"===> No UNINSTALL of the access daemon\"\nendif\n\n.PHONY: install_freq move_freq uninstall_freq uninstall_freq_moved\nifeq ($(BUILDFREQ),true)\nifneq ($(COMPILER),MIC)\ninstall_freq:\n\t@echo \"===> INSTALL setFrequencies tool to $(SBINPREFIX)/$(FREQ_TARGET)\"\n\t@mkdir -p $(SBINPREFIX)\n\t@install -m 4755 $(INSTALL_CHOWN) $(FREQ_TARGET) $(SBINPREFIX)/$(FREQ_TARGET)\nmove_freq:\n\t@echo \"===> MOVE setFrequencies tool from $(SBINPREFIX)/$(FREQ_TARGET) to $(INSTALLED_SBINPREFIX)/$(FREQ_TARGET)\"\n\t@mkdir -p $(INSTALLED_SBINPREFIX)\n\t@install -m 4755 $(INSTALL_CHOWN) $(SBINPREFIX)/$(FREQ_TARGET) $(INSTALLED_SBINPREFIX)/$(FREQ_TARGET)\nuninstall_freq:\n\t@echo \"===> REMOVING setFrequencies tool from $(SBINPREFIX)/$(FREQ_TARGET)\"\n\t@rm -f $(SBINPREFIX)/$(FREQ_TARGET)\nuninstall_freq_moved:\n\t@echo \"===> REMOVING setFrequencies tool from $(INSTALLED_SBINPREFIX)/$(FREQ_TARGET)\"\n\t@rm -f $(INSTALLED_SBINPREFIX)/$(FREQ_TARGET)\nelse\ninstall_freq:\n\t@echo \"===> No INSTALL of setFrequencies tool\"\nmove_freq:\n\t@echo \"===> No MOVE of setFrequencies tool\"\nuninstall_freq:\n\t@echo \"===> No UNINSTALL of setFrequencies tool\"\nuninstall_freq_moved:\n\t@echo \"===> No UNINSTALL of setFrequencies tool\"\nendif\nelse\ninstall_freq:\n\t@echo \"===> No INSTALL of setFrequencies tool\"\nmove_freq:\n\t@echo \"===> No MOVE of setFrequencies tool\"\nuninstall_freq:\n\t@echo \"===> No UNINSTALL of setFrequencies tool\"\nuninstall_freq_moved:\n\t@echo \"===> No UNINSTALL of setFrequencies tool\"\nendif\n\n.PHONY: install_appdaemon move_appdaemon uninstall_appdaemon uninstall_appdaemon_moved\nifeq ($(BUILDAPPDAEMON),true)\ninstall_appdaemon:\n\t@echo \"===> INSTALL application interface appDaemon to $(PREFIX)/lib/$(APPDAEMON_TARGET)\"\n\t@mkdir -p $(PREFIX)/lib\n\t@install -m 755 $(APPDAEMON_TARGET) $(PREFIX)/lib/$(APPDAEMON_TARGET)\nmove_appdaemon:\n\t@echo \"===> MOVE application interface appDaemon from $(PREFIX)/lib/$(APPDAEMON_TARGET) to $(INSTALLED_PREFIX)/lib/$(APPDAEMON_TARGET)\"\n\t@mkdir -p $(INSTALLED_PREFIX)/lib\n\t@install -m 755 $(PREFIX)/lib/$(APPDAEMON_TARGET) $(INSTALLED_PREFIX)/lib/$(APPDAEMON_TARGET)\nuninstall_appdaemon:\n\t@echo \"===> REMOVING application interface appDaemon from $(PREFIX)/lib/$(APPDAEMON_TARGET)\"\n\t@rm -f $(PREFIX)/lib/$(APPDAEMON_TARGET)\nuninstall_appdaemon_moved:\n\t@echo \"===> REMOVING application interface appDaemon from $(INSTALLED_PREFIX)/lib/$(APPDAEMON_TARGET)\"\n\t@rm -f $(INSTALLED_PREFIX)/lib/$(APPDAEMON_TARGET)\nelse\ninstall_appdaemon:\n\t@echo \"===> No INSTALL of the application interface appDaemon\"\nmove_appdaemon:\n\t@echo \"===> No MOVE of the application interface appDaemon\"\nuninstall_appdaemon:\n\t@echo \"===> No UNINSTALL of the application interface appDaemon\"\nuninstall_appdaemon_moved:\n\t@echo \"===> No UNINSTALL of the application interface appDaemon\"\nendif\n\n.PHONY: install_container_helper move_container_helper uninstall_container_helper uninstall_container_helper_moved\nifeq ($(CONTAINER_HELPER),true)\ninstall_container_helper: $(CONTAINER_HELPER_TARGET)\n\t@echo \"===> INSTALL container helper likwid-bridge to $(SBINPREFIX)/likwid-bridge\"\n\t@mkdir -p $(SBINPREFIX)\n\t@install -m 755 $(CONTAINER_HELPER_TARGET) $(SBINPREFIX)/likwid-bridge\nmove_container_helper:\n\t@echo \"===> MOVE container helper likwid-bridge from $(SBINPREFIX)/likwid-bridge to $(INSTALLED_SBINPREFIX)/likwid-bridge\"\n\t@mkdir -p $(INSTALLED_SBINPREFIX)\n\t@install -m 755 $(SBINPREFIX)/$(CONTAINER_HELPER_TARGET) $(INSTALLED_SBINPREFIX)/$(CONTAINER_HELPER_TARGET)\nuninstall_container_helper:\n\t@echo \"===> REMOVING container helper likwid-bridge from $(SBINPREFIX)/$(CONTAINER_HELPER_TARGET)\"\n\t@rm -f $(SBINPREFIX)/$(CONTAINER_HELPER_TARGET)\nuninstall_container_helper_moved:\n\t@echo \"===> REMOVING container helper likwid-bridge from $(INSTALLED_SBINPREFIX)/$(CONTAINER_HELPER_TARGET)\"\n\t@rm -f $(INSTALLED_SBINPREFIX)/$(CONTAINER_HELPER_TARGET)\nelse\ninstall_container_helper:\n\t@echo \"===> No INSTALL of the container helper likwid-bridge\"\nmove_container_helper:\n\t@echo \"===> No MOVE of the container helper likwid-bridge\"\nuninstall_container_helper:\n\t@echo \"===> No UNINSTALL of the container helper likwid-bridge\"\nuninstall_container_helper_moved:\n\t@echo \"===> No UNINSTALL of the container helper likwid-bridge\"\nendif\n\n.PHONY: install\ninstall: install_daemon install_freq install_appdaemon install_container_helper\n\t@echo \"===> INSTALL applications to $(BINPREFIX)\"\n\t@mkdir -p $(BINPREFIX)\n\t@chmod 755 $(BINPREFIX)\n\t@for APP in $(L_APPS); do \\\n\t\tinstall -m 755 $$APP  $(BINPREFIX); \\\n\tdone\n\t@for APP in $(C_APPS); do \\\n\t\tinstall -m 755 $$APP  $(BINPREFIX); \\\n\tdone\n\t@if [ \"$(LUA_INTERNAL)\" = \"true\" ]; then \\\n\t\tinstall -m 755 ext/lua/lua $(BINPREFIX)/$(LUA_LIB_NAME); \\\n\tfi\n\t@echo \"===> INSTALL helper applications to $(BINPREFIX)\"\n\t@install -m 755 perl/feedGnuplot $(BINPREFIX)\n\t@echo \"===> INSTALL lua to likwid interface to $(PREFIX)/share/lua\"\n\t@mkdir -p $(PREFIX)/share/lua\n\t@chmod 755 $(PREFIX)/share/lua\n\t@install -m 644 likwid.lua $(PREFIX)/share/lua\n\t@echo \"===> INSTALL libraries to $(LIBPREFIX)\"\n\t@mkdir -p $(LIBPREFIX)\n\t@chmod 755 $(LIBPREFIX)\n\t@install -m 755 $(TARGET_LIB) $(LIBPREFIX)/$(TARGET_LIB).$(VERSION).$(RELEASE)\n\t@install -m 755 liblikwidpin.so $(LIBPREFIX)/liblikwidpin.so.$(VERSION).$(RELEASE)\n\t@if [ \"$(USE_INTERNAL_HWLOC)\" = \"true\" ]; then \\\n\t\tinstall -m 755 $(TARGET_HWLOC_LIB) $(LIBPREFIX)/$(shell basename $(TARGET_HWLOC_LIB)).$(VERSION).$(RELEASE); \\\n\tfi\n\t@if [ \"$(LUA_INTERNAL)\" = \"true\" ]; then \\\n\t\tinstall -m 755 $(TARGET_LUA_LIB) $(LIBPREFIX)/$(shell basename $(TARGET_LUA_LIB)).$(VERSION).$(RELEASE); \\\n\tfi\n\t@cd $(LIBPREFIX) && ln -fs $(TARGET_LIB).$(VERSION).$(RELEASE) $(TARGET_LIB)\n\t@cd $(LIBPREFIX) && ln -fs $(TARGET_LIB).$(VERSION).$(RELEASE) $(TARGET_LIB).$(VERSION)\n\t@cd $(LIBPREFIX) && ln -fs $(PINLIB).$(VERSION).$(RELEASE) $(PINLIB)\n\t@cd $(LIBPREFIX) && ln -fs $(PINLIB).$(VERSION).$(RELEASE) $(PINLIB).$(VERSION)\n\t@if [ \"$(USE_INTERNAL_HWLOC)\" = \"true\" ]; then \\\n\t\tcd $(LIBPREFIX) && ln -fs $(shell basename $(TARGET_HWLOC_LIB)).$(VERSION).$(RELEASE) $(shell basename $(TARGET_HWLOC_LIB)); \\\n\t\tcd $(LIBPREFIX) && ln -fs $(shell basename $(TARGET_HWLOC_LIB)).$(VERSION).$(RELEASE) $(shell basename $(TARGET_HWLOC_LIB)).$(VERSION); \\\n\tfi\n\t@if [ \"$(LUA_INTERNAL)\" = \"true\" ]; then \\\n\t\tcd $(LIBPREFIX) && ln -fs $(shell basename $(TARGET_LUA_LIB)).$(VERSION).$(RELEASE) $(shell basename $(TARGET_LUA_LIB)); \\\n\t\tcd $(LIBPREFIX) && ln -fs $(shell basename $(TARGET_LUA_LIB)).$(VERSION).$(RELEASE) $(shell basename $(TARGET_LUA_LIB)).$(VERSION); \\\n\tfi\n\t@if [ \"$(BUILDAPPDAEMON)\" = \"true\" ]; then \\\n\t\tinstall -m 755 $(GOTCHA_FOLDER)/$(TARGET_GOTCHA_LIB) $(LIBPREFIX)/$(TARGET_GOTCHA_LIB).$(VERSION).$(RELEASE); \\\n\t\tcd $(LIBPREFIX) && ln -fs $(shell basename $(TARGET_GOTCHA_LIB)).$(VERSION).$(RELEASE) $(shell basename $(TARGET_GOTCHA_LIB)); \\\n\t\tcd $(LIBPREFIX) && ln -fs $(shell basename $(TARGET_GOTCHA_LIB)).$(VERSION).$(RELEASE) $(shell basename $(TARGET_GOTCHA_LIB)).$(VERSION); \\\n\tfi\n\t@echo \"===> INSTALL man pages to $(MANPREFIX)/man1\"\n\t@mkdir -p $(MANPREFIX)/man1\n\t@chmod 755 $(MANPREFIX)/man1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" < $(DOC_DIR)/likwid-topology.1 > $(MANPREFIX)/man1/likwid-topology.1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" -e \"s#<PREFIX>#$(PREFIX)#g\" < $(DOC_DIR)/likwid-perfctr.1 > $(MANPREFIX)/man1/likwid-perfctr.1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" < $(DOC_DIR)/likwid-powermeter.1 > $(MANPREFIX)/man1/likwid-powermeter.1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" < $(DOC_DIR)/likwid-pin.1 > $(MANPREFIX)/man1/likwid-pin.1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" < $(DOC_DIR)/feedGnuplot.1 > $(MANPREFIX)/man1/feedGnuplot.1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" < $(DOC_DIR)/likwid-accessD.1 > $(MANPREFIX)/man1/likwid-accessD.1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" < $(DOC_DIR)/likwid-genTopoCfg.1 > $(MANPREFIX)/man1/likwid-genTopoCfg.1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" < $(DOC_DIR)/likwid-memsweeper.1 > $(MANPREFIX)/man1/likwid-memsweeper.1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" < $(DOC_DIR)/likwid-mpirun.1 > $(MANPREFIX)/man1/likwid-mpirun.1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" < $(DOC_DIR)/likwid-perfscope.1 > $(MANPREFIX)/man1/likwid-perfscope.1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" < $(DOC_DIR)/likwid-setFreq.1 > $(MANPREFIX)/man1/likwid-setFreq.1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" < $(DOC_DIR)/likwid-features.1 > $(MANPREFIX)/man1/likwid-features.1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" < $(DOC_DIR)/likwid-bench.1 > $(MANPREFIX)/man1/likwid-bench.1\n\t@sed -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" < $(DOC_DIR)/likwid-setFrequencies.1 > $(MANPREFIX)/man1/likwid-setFrequencies.1\n\t@sed -e \"s#.TH LUA#.TH LIKWID-LUA#g\" -e \"s#lua - Lua interpreter#likwid-lua - Lua interpreter included in LIKWID#g\" -e \"s#.B lua#.B likwid-lua#g\" -e \"s#.BR luac (1)##g\" $(DOC_DIR)/likwid-lua.1 > $(MANPREFIX)/man1/likwid-lua.1\n\t@chmod 644 $(MANPREFIX)/man1/likwid-*\n\t@echo \"===> INSTALL headers to $(PREFIX)/include\"\n\t@mkdir -p $(PREFIX)/include\n\t@chmod 755 $(PREFIX)/include\n\t@install -m 644 $(SRC_DIR)/includes/likwid.h  $(PREFIX)/include/\n\t@sed -i -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" -e \"s#VERSION.RELEASE.MINORVERSION#$(VERSION).$(RELEASE).$(MINOR)#g\" -e \"s#LIKWID_COMMIT GITCOMMIT#LIKWID_COMMIT \\\"$(GITCOMMIT)\\\"#g\" $(PREFIX)/include/likwid.h\n\t@install -m 644 $(SRC_DIR)/includes/likwid-marker.h  $(PREFIX)/include/\n\t$(FORTRAN_INSTALL)\n\t@echo \"===> INSTALL groups to $(PREFIX)/share/likwid/perfgroups\"\n\t@mkdir -p $(PREFIX)/share/likwid/perfgroups\n\t@chmod 755 $(PREFIX)/share/likwid\n\t@chmod 755 $(PREFIX)/share/likwid/perfgroups\n\t@cp -rf $(GROUP_DIR)/* $(PREFIX)/share/likwid/perfgroups\n\t@chmod 755 $(PREFIX)/share/likwid/perfgroups/*\n\t@find $(PREFIX)/share/likwid/perfgroups -name \"*.txt\" -exec chmod 644 {} \\;\n\t@echo \"===> INSTALL docs and examples to $(PREFIX)/share/likwid/docs\"\n\t@mkdir -p $(PREFIX)/share/likwid/docs\n\t@chmod 755 $(PREFIX)/share/likwid/docs\n\t@mkdir -p $(PREFIX)/share/likwid/examples\n\t@chmod 755 $(PREFIX)/share/likwid/examples\n\t@install -m 644 $(EXAMPLES_DIR)/* $(PREFIX)/share/likwid/examples\n\t@echo \"===> INSTALL filters to $(abspath $(PREFIX)/share/likwid/filter)\"\n\t@mkdir -p $(abspath $(PREFIX)/share/likwid/filter)\n\t@chmod 755 $(abspath $(PREFIX)/share/likwid/filter)\n\t@for F in $(FILTERS); do \\\n\t\tinstall -m 755 $$F  $(abspath $(PREFIX)/share/likwid/filter); \\\n\tdone\n\t@echo \"===> INSTALL cmake to $(abspath $(PREFIX)/share/likwid)\"\n\t@install -m 644 $(PWD)/likwid-config.cmake $(PREFIX)/share/likwid\n\n.PHONY: move\nmove: move_daemon move_freq move_appdaemon move_container_helper\n\t@echo \"===> MOVE applications from $(BINPREFIX) to $(INSTALLED_BINPREFIX)\"\n\t@mkdir -p $(INSTALLED_BINPREFIX)\n\t@chmod 755 $(INSTALLED_BINPREFIX)\n\t@for APP in $(L_APPS); do \\\n\t\tinstall -m 755 $(BINPREFIX)/$$APP  $(INSTALLED_BINPREFIX); \\\n\tdone\n\t@for APP in $(C_APPS); do \\\n\t\tinstall -m 755 $(BINPREFIX)/`basename $$APP`  $(INSTALLED_BINPREFIX); \\\n\tdone\n\t@install -m 755 $(BINPREFIX)/likwid-lua $(INSTALLED_BINPREFIX)/likwid-lua\n\t@echo \"===> MOVE helper applications from $(BINPREFIX) to $(INSTALLED_BINPREFIX)\"\n\t@install -m 755 $(BINPREFIX)/feedGnuplot $(INSTALLED_BINPREFIX)\n\t@echo \"===> MOVE lua to likwid interface from $(PREFIX)/share/lua to $(INSTALLED_PREFIX)/share/lua\"\n\t@mkdir -p $(INSTALLED_PREFIX)/share/lua\n\t@chmod 755 $(INSTALLED_PREFIX)/share/lua\n\t@install -m 644 $(PREFIX)/share/lua/likwid.lua $(INSTALLED_PREFIX)/share/lua\n\t@echo \"===> MOVE libraries from $(LIBPREFIX) to $(INSTALLED_LIBPREFIX)\"\n\t@mkdir -p $(INSTALLED_LIBPREFIX)\n\t@chmod 755 $(INSTALLED_LIBPREFIX)\n\t@install -m 755 $(LIBPREFIX)/$(TARGET_LIB).$(VERSION).$(RELEASE) $(INSTALLED_LIBPREFIX)/$(TARGET_LIB).$(VERSION).$(RELEASE)\n\t@install -m 755 $(LIBPREFIX)/$(PINLIB).$(VERSION).$(RELEASE) $(INSTALLED_LIBPREFIX)/$(PINLIB).$(VERSION).$(RELEASE)\n\t@install -m 755 $(LIBPREFIX)/$(shell basename $(TARGET_HWLOC_LIB)).$(VERSION).$(RELEASE) $(INSTALLED_LIBPREFIX)/$(shell basename $(TARGET_HWLOC_LIB)).$(VERSION).$(RELEASE)\n\t@install -m 755 $(LIBPREFIX)/$(shell basename $(TARGET_LUA_LIB)).$(VERSION).$(RELEASE) $(INSTALLED_LIBPREFIX)/$(shell basename $(TARGET_LUA_LIB)).$(VERSION).$(RELEASE)\n\t@install -m 755 $(LIBPREFIX)/$(shell basename $(TARGET_GOTCHA_LIB)).$(VERSION).$(RELEASE) $(INSTALLED_LIBPREFIX)/$(shell basename $(TARGET_GOTCHA_LIB)).$(VERSION).$(RELEASE)\n\t@cd $(INSTALLED_LIBPREFIX) && ln -fs $(TARGET_LIB).$(VERSION).$(RELEASE) $(TARGET_LIB)\n\t@cd $(INSTALLED_LIBPREFIX) && ln -fs $(TARGET_LIB).$(VERSION).$(RELEASE) $(TARGET_LIB).$(VERSION)\n\t@cd $(INSTALLED_LIBPREFIX) && ln -fs $(PINLIB).$(VERSION).$(RELEASE) $(PINLIB)\n\t@cd $(INSTALLED_LIBPREFIX) && ln -fs $(PINLIB).$(VERSION).$(RELEASE) $(PINLIB).$(VERSION)\n\t@cd $(INSTALLED_LIBPREFIX) && ln -fs $(shell basename $(TARGET_HWLOC_LIB)).$(VERSION).$(RELEASE) $(shell basename $(TARGET_HWLOC_LIB))\n\t@cd $(INSTALLED_LIBPREFIX) && ln -fs $(shell basename $(TARGET_HWLOC_LIB)).$(VERSION).$(RELEASE) $(shell basename $(TARGET_HWLOC_LIB)).$(VERSION)\n\t@cd $(INSTALLED_LIBPREFIX) && ln -fs $(shell basename $(TARGET_LUA_LIB)).$(VERSION).$(RELEASE) $(shell basename $(TARGET_LUA_LIB))\n\t@cd $(INSTALLED_LIBPREFIX) && ln -fs $(shell basename $(TARGET_LUA_LIB)).$(VERSION).$(RELEASE) $(shell basename $(TARGET_LUA_LIB)).$(VERSION)\n\t@cd $(INSTALLED_LIBPREFIX) && ln -fs $(shell basename $(TARGET_GOTCHA_LIB)).$(VERSION).$(RELEASE) $(shell basename $(TARGET_GOTCHA_LIB))\n\t@cd $(INSTALLED_LIBPREFIX) && ln -fs $(shell basename $(TARGET_GOTCHA_LIB)).$(VERSION).$(RELEASE) $(shell basename $(TARGET_GOTCHA_LIB)).$(VERSION)\n\t@echo \"===> MOVE man pages from $(MANPREFIX)/man1 to $(INSTALLED_MANPREFIX)/man1\"\n\t@mkdir -p $(INSTALLED_MANPREFIX)/man1\n\t@chmod 755 $(INSTALLED_MANPREFIX)/man1\n\t@install -m 644 $(MANPREFIX)/man1/*.1 $(INSTALLED_MANPREFIX)/man1\n\t@echo \"===> MOVE headers from $(PREFIX)/include to $(INSTALLED_PREFIX)/include\"\n\t@mkdir -p $(INSTALLED_PREFIX)/include\n\t@chmod 755 $(INSTALLED_PREFIX)/include\n\t@install -m 644 $(PREFIX)/include/likwid.h $(INSTALLED_PREFIX)/include/likwid.h\n\t@install -m 644 $(PREFIX)/include/likwid-marker.h $(INSTALLED_PREFIX)/include/likwid-marker.h\n\t@if [ -e $(PREFIX)/include/likwid.mod ]; then install $(PREFIX)/include/likwid.mod $(INSTALLED_PREFIX)/include/likwid.mod; fi\n\t@echo \"===> MOVE groups from $(PREFIX)/share/likwid/perfgroups to $(INSTALLED_PREFIX)/share/likwid/perfgroups\"\n\t@mkdir -p $(INSTALLED_PREFIX)/share/likwid/perfgroups\n\t@chmod 755 $(INSTALLED_PREFIX)/share/likwid\n\t@chmod 755 $(INSTALLED_PREFIX)/share/likwid/perfgroups\n\t@cp -rf $(PREFIX)/share/likwid/perfgroups/* $(INSTALLED_PREFIX)/share/likwid/perfgroups\n\t@chmod 755 $(INSTALLED_PREFIX)/share/likwid/perfgroups/*\n\t@find $(INSTALLED_PREFIX)/share/likwid/perfgroups -name \"*.txt\" -exec chmod 644 {} \\;\n\t@mkdir -p $(INSTALLED_PREFIX)/share/likwid/docs\n\t@chmod 755 $(INSTALLED_PREFIX)/share/likwid/docs\n\t@mkdir -p $(INSTALLED_PREFIX)/share/likwid/examples\n\t@chmod 755 $(INSTALLED_PREFIX)/share/likwid/examples\n\t@install -m 644 $(EXAMPLES_DIR)/* $(INSTALLED_PREFIX)/share/likwid/examples\n\t@echo \"===> MOVE filters from $(abspath $(PREFIX)/share/likwid/filter) to $(LIKWIDFILTERPATH)\"\n\t@mkdir -p $(LIKWIDFILTERPATH)\n\t@chmod 755 $(LIKWIDFILTERPATH)\n\t@cp -f $(abspath $(PREFIX)/share/likwid/filter)/* $(LIKWIDFILTERPATH)\n\t@chmod 755 $(LIKWIDFILTERPATH)/*\n\t@echo \"===> MOVE cmake from $(abspath $(PREFIX)/share/likwid) to $(INSTALLED_PREFIX)/share/likwid\"\n\t@mkdir -p $(INSTALLED_PREFIX)/share/likwid\n\t@chmod 755 $(INSTALLED_PREFIX)/share/likwid\n\t@sed -e s#'\\(# @MOVE_LIKWID_INSTALL@\\)'#\"set(_DEFAULT_PREFIXES $(INSTALLED_PREFIX) $(INSTALLED_LIBPREFIX) $(INSTALLED_BINPREFIX))\\n\\1\"#g \\\n\t\t$(PREFIX)/share/likwid/likwid-config.cmake > $(INSTALLED_PREFIX)/share/likwid/likwid-config.cmake\n\t@chmod 644 $(INSTALLED_PREFIX)/share/likwid/likwid-config.cmake\n\n.PHONY: uninstall\nuninstall: uninstall_daemon uninstall_freq uninstall_appdaemon uninstall_container_helper\n\t@echo \"===> REMOVING applications from $(PREFIX)/bin\"\n\t@rm -f $(addprefix $(BINPREFIX)/,$(addsuffix  .lua,$(L_APPS)))\n\t@for APP in $(L_APPS); do \\\n\t\trm -f $(BINPREFIX)/$$APP; \\\n\tdone\n\t@for APP in $(C_APPS); do \\\n\t\trm -f $(BINPREFIX)/$$APP; \\\n\tdone\n\t@rm -f $(BINPREFIX)/feedGnuplot\n\t@rm -f $(BINPREFIX)/likwid-lua\n\t@rm -f $(BINPREFIX)/likwid-bench\n\t@echo \"===> REMOVING Lua to likwid interface from $(PREFIX)/share/lua\"\n\t@rm -rf  $(PREFIX)/share/lua/likwid.lua\n\t@echo \"===> REMOVING libs from $(LIBPREFIX)\"\n\t@rm -f $(LIBPREFIX)/liblikwid*\n\t@rm -f $(LIBPREFIX)/$(TARGET_GOTCHA_LIB)\n\t@echo \"===> REMOVING man pages from $(MANPREFIX)/man1\"\n\t@rm -f $(addprefix $(MANPREFIX)/man1/,$(addsuffix  .1,$(L_APPS)))\n\t@rm -f $(MANPREFIX)/man1/feedGnuplot.1\n\t@rm -f $(MANPREFIX)/man1/likwid-setFreq.1\n\t@rm -f $(MANPREFIX)/man1/likwid-accessD.1\n\t@rm -f $(MANPREFIX)/man1/likwid-lua.1\n\t@rm -f $(MANPREFIX)/man1/likwid-bench.1\n\t@echo \"===> REMOVING header from $(PREFIX)/include\"\n\t@rm -f $(PREFIX)/include/likwid.h\n\t@rm -f $(PREFIX)/include/likwid-marker.h\n\t$(FORTRAN_REMOVE)\n\t@echo \"===> REMOVING filter, groups and default configs from $(PREFIX)/share/likwid\"\n\t@rm -rf $(abspath $(PREFIX)/share/likwid/filter)\n\t@rm -rf $(PREFIX)/share/likwid/perfgroups\n\t@rm -rf $(PREFIX)/share/likwid/docs\n\t@rm -rf $(PREFIX)/share/likwid/examples\n\t@rm -rf $(PREFIX)/share/likwid/likwid-config.cmake\n\t@rm -rf $(PREFIX)/share/likwid\n\n.PHONY: uninstall_moved\nuninstall_moved: uninstall_daemon_moved uninstall_freq_moved uninstall_appdaemon_moved uninstall_container_helper_moved\n\t@echo \"===> REMOVING applications from $(INSTALLED_PREFIX)/bin\"\n\t@rm -f $(addprefix $(INSTALLED_BINPREFIX)/,$(addsuffix  .lua,$(L_APPS)))\n\t@for APP in $(L_APPS); do \\\n\t\trm -f $(INSTALLED_BINPREFIX)/$$APP; \\\n\tdone\n\t@for APP in $(C_APPS); do \\\n\t\trm -f $(INSTALLED_BINPREFIX)/$$APP; \\\n\tdone\n\t@rm -f $(INSTALLED_BINPREFIX)/feedGnuplot\n\t@rm -f $(INSTALLED_BINPREFIX)/likwid-lua\n\t@rm -f $(INSTALLED_BINPREFIX)/likwid-bench\n\t@echo \"===> REMOVING Lua to likwid interface from $(INSTALLED_PREFIX)/share/lua\"\n\t@rm -rf  $(INSTALLED_PREFIX)/share/lua/likwid.lua\n\t@echo \"===> REMOVING libs from $(INSTALLED_LIBPREFIX)\"\n\t@rm -f $(INSTALLED_LIBPREFIX)/liblikwid*\n\t@rm -f $(INSTALLED_LIBPREFIX)/$(TARGET_GOTCHA_LIB)\n\t@echo \"===> REMOVING man pages from $(INSTALLED_MANPREFIX)/man1\"\n\t@rm -f $(addprefix $(INSTALLED_MANPREFIX)/man1/,$(addsuffix  .1,$(L_APPS)))\n\t@rm -f $(INSTALLED_MANPREFIX)/man1/feedGnuplot.1\n\t@rm -f $(INSTALLED_MANPREFIX)/man1/likwid-setFreq.1\n\t@rm -f $(INSTALLED_MANPREFIX)/man1/likwid-accessD.1\n\t@rm -f $(INSTALLED_MANPREFIX)/man1/likwid-lua.1\n\t@rm -f $(INSTALLED_MANPREFIX)/man1/likwid-bench.1\n\t@echo \"===> REMOVING header from $(INSTALLED_PREFIX)/include\"\n\t@rm -f $(INSTALLED_PREFIX)/include/likwid.h\n\t@rm -f $(PREFIX)/include/likwid-marker.h\n\t$(FORTRAN_REMOVE)\n\t@echo \"===> REMOVING filter, groups and default configs from $(INSTALLED_PREFIX)/share/likwid\"\n\t@rm -rf $(LIKWIDFILTERPATH)\n\t@rm -rf $(INSTALLED_PREFIX)/share/likwid/perfgroups\n\t@rm -rf $(INSTALLED_PREFIX)/share/likwid/docs\n\t@rm -rf $(INSTALLED_PREFIX)/share/likwid/examples\n\t@rm -rf $(INSTALLED_PREFIX)/share/likwid/likwid-config.cmake\n\t@rm -rf $(INSTALLED_PREFIX)/share/likwid\n\n.PHONY: local\nlocal: $(L_APPS) likwid.lua\n\t@echo \"===> Setting Lua scripts to run from current directory\"\n\t@for APP in $(L_APPS); do \\\n\t\tsed -i -e \"s#<VERSION>/#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<RELEASE>#$(RELEASE)#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" -e \"s#$(PREFIX)/bin/likwid-lua#$(PWD)/ext/lua/lua#\" -e \"s#$(PREFIX)/share/lua/?.lua#$(PWD)/?.lua#\" -e \"s#$(PREFIX)/bin/likwid-pin#$(PWD)/likwid-pin#\" -e \"s#$(PREFIX)/bin/likwid-perfctr#$(PWD)/likwid-perfctr#\" -e \"s#$(PREFIX)/lib#$(PWD)#\" $$APP; \\\n\t\tchmod +x $$APP; \\\n\tdone\n\t@sed -i -e \"s#<VERSION>#$(VERSION)#g\" -e \"s#<DATE>#$(DATE)#g\" -e \"s#<RELEASE>#$(RELEASE)#g\" -e \"s#$(PREFIX)/lib#$(PWD)#g\" -e \"s#$(PREFIX)/share/likwid/perfgroups#$(PWD)/groups#g\" -e \"s#<GITCOMMIT>#$(GITCOMMIT)#g\" -e \"s#<MINOR>#$(MINOR)#g\" likwid.lua;\n\t@ln -sf liblikwid.so liblikwid.so.$(VERSION)\n\t@ln -sf liblikwid.so liblikwid.so.$(VERSION).$(RELEASE)\n\t@ln -sf $(HWLOC_FOLDER)/liblikwid-hwloc.so liblikwid-hwloc.so.$(VERSION)\n\t@ln -sf $(HWLOC_FOLDER)/liblikwid-hwloc.so liblikwid-hwloc.so.$(VERSION).$(RELEASE)\n\t@ln -sf $(LUA_FOLDER)/liblikwid-lua.so liblikwid-lua.so.$(VERSION)\n\t@ln -sf $(LUA_FOLDER)/liblikwid-lua.so liblikwid-lua.so.$(VERSION).$(RELEASE)\n\t@ln -sf $(GOTCHA_FOLDER)/liblikwid-gotcha.so liblikwid-gotcha.so.$(VERSION)\n\t@ln -sf $(GOTCHA_FOLDER)/liblikwid-gotcha.so liblikwid-gotcha.so.$(VERSION).$(RELEASE)\n\t@if [ \"$(LUA_INTERNAL)\" = \"true\" ]; then \\\n\t\tif [ -e $(LUA_FOLDER)/liblikwid-lua.so ]; then ln -sf $(LUA_FOLDER)/liblikwid-lua.so liblikwid-lua.so.$(VERSION).$(RELEASE); fi; \\\n\tfi\n\t@if [ \"$(USE_INTERNAL_HWLOC)\" = \"true\" ]; then \\\n\t\tif [ -e $(HWLOC_FOLDER)/liblikwid-hwloc.so ]; then ln -sf $(HWLOC_FOLDER)/liblikwid-hwloc.so liblikwid-hwloc.so.$(VERSION).$(RELEASE); fi; \\\n\tfi\n\t@if [ -e $(PINLIB) ]; then ln -sf $(PINLIB) $(PINLIB).$(VERSION).$(RELEASE); fi\n\t@if [ -e $(CUDA_HOME)/extras/CUPTI/lib64 ]; then echo \"export LD_LIBRARY_PATH=$(PWD):$(CUDA_HOME)/extras/CUPTI/lib64:$$LD_LIBRARY_PATH\"; else echo \"export LD_LIBRARY_PATH=$(PWD):$$LD_LIBRARY_PATH\"; fi\n\n.PHONY: testit\ntestit: test/test-likwidAPI.c\n\tmake -C test test-likwidAPI\n\ttest/test-likwidAPI\n\tmake -C test/executable_tests\n\n.PHONY: help\nhelp:\n\t@echo \"Help for building LIKWID:\"\n\t@echo\n\t@echo \"Common make targets:\"\n\t@echo \"- make : build anything (integrate already compiled files)\"\n\t@echo \"- make clean : clean library and executables, keep compiled files\"\n\t@echo \"- make distclean : clean anything\"\n\t@echo \"- make docs : Build documentation (requires Doxygen)\"\n\t@echo \"- make install : Copy compiled files to $(PREFIX)\"\n\t@echo \"- make move : Copy files from $(PREFIX) to $(INSTALLED_PREFIX)\"\n\t@echo \"- make uninstall : Delete files from $(PREFIX)\"\n\t@echo \"- make uninstall_moved : Delete files from $(INSTALLED_PREFIX)\"\n\t@echo\n\t@echo \"Compiler selection can be done in config.mk at COMPILER:\"\n\t@echo \"- GCC : Use GCC for C code and Intel Fortran compiler for Fortran interface (default)\"\n\t@echo \"- GCCX86 : Use GCC for C code. No Fortran compiler set (only for 32 bit builds)\"\n\t@echo \"- CLANG: Use CLANG for C code and Intel Fortran compiler for Fortran interface (unsupported, may fail)\"\n\t@echo \"- ICC: Use Intel C compiler for C code and Intel Fortran compiler for Fortran interface (unsupported, may fail)\"\n\t@echo \"- MIC: Build for Intel Xeon Phi. Use Intel C compiler for C code and\\n       Intel Fortran compiler for Fortran interface (unsupported)\"\n\t@echo\n\t@echo \"LIKWID runs only in INSTALLED_PREFIX = $(INSTALLED_PREFIX)\"\n\t@echo \"You can change it in config.mk, but it is recommended to keep INSTALLED_PREFIX = PREFIX\"\n\t@echo \"The PREFIX is used for temporary install directories (e.g. for packaging).\"\n\t@echo \"LIKWID will not run in PREFIX, it has to be in INSTALLED_PREFIX.\"\n\t@echo \"The common configuration is INSTALLED_PREFIX = PREFIX, so changing PREFIX is enough.\"\n\t@echo \"If PREFIX and INSTALLED_PREFIX differ, you have to move anything after 'make install' to\"\n\t@echo \"the INSTALLED_PREFIX. You can also use 'make move' which does the job for you.\"\n\n.PHONY: rpm RPM\nrpm: RPM\nRPM: packaging/rpm/likwid.spec\n\tFROM_MAKEFILE=1 $(BASE_DIR)/packaging/rpm/package.sh\n\n.PHONY: deb DEB\ndeb: DEB\nDEB: packaging/deb/likwid.deb.control\n\tNAME=$(NAME) VERSION=$(VERSION) RELEASE=$(RELEASE) MINOR=$(MINOR) \\\n\t\t PREFIX=$(PREFIX) FROM_MAKEFILE=1 $(BASE_DIR)/packaging/deb/package.sh\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.50390625,
          "content": "--------------------------------------------------------------------------------\nIntroduction\n--------------------------------------------------------------------------------\n\nLikwid is a simple to install and use toolsuite of command line applications and a library\nfor performance oriented programmers. It works for Intel, AMD, ARMv8 and POWER9\nprocessors on the Linux operating system. There is additional support for Nvidia and AMD GPUs.\nThere is support for ARMv7 and POWER8/9 but there is currently no test machine in\nour hands to test them properly.\n\n[LIKWID Playlist (YouTube)](https://www.youtube.com/playlist?list=PLxVedhmuwLq2CqJpAABDMbZG8Whi7pKsk)\n\n[![Build Status](https://gitos.rrze.fau.de/ub55yzis/likwid/badges/master/pipeline.svg)](https://gitos.rrze.fau.de/ub55yzis/likwid/-/commits/master) [![General LIKWID DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.4275676.svg)](https://doi.org/10.5281/zenodo.4275676)\n\nIt consists of:\n\n- likwid-topology: print thread, cache and NUMA topology\n- likwid-perfctr: configure and read out hardware performance counters on Intel, AMD, ARM and POWER processors and Nvidia GPUs\n- likwid-powermeter: read out RAPL Energy information and get info about Turbo mode steps\n- likwid-pin: pin your threaded application (pthread, Intel and gcc OpenMP to dedicated processors)\n- likwid-bench: Micro benchmarking platform for CPU architectures\n- likwid-features: Print and manipulate cpu features like hardware prefetchers (x86 only)\n- likwid-genTopoCfg: Dumps topology information to a file\n- likwid-mpirun: Wrapper to start MPI and Hybrid MPI/OpenMP applications (Supports Intel MPI, OpenMPI, MPICH and SLURM)\n- likwid-perfscope: Frontend to the timeline mode of likwid-perfctr, plots live graphs of performance metrics using gnuplot\n- likwid-memsweeper: Sweep memory of NUMA domains and evict cachelines from the last level cache\n- likwid-setFrequencies: Tool to control the CPU and Uncore frequencies (x86 only)\n- likwid-sysFeatures: Tool to system settings like frequencies, powercaps and prefetchers (experimental)\n\nFor further information please take a look at the [Wiki](https://github.com/RRZE-HPC/likwid/wiki) or contact us via Matrix chat [LIKWID General](https://matrix.to/#/#likwid:matrix.org?via=matrix.org).\n\n\n--------------------------------------------------------------------------------\nSupported architectures\n--------------------------------------------------------------------------------\nIntel\n- Intel Atom\n- Intel Pentium M\n- Intel Core2\n- Intel Nehalem\n- Intel NehalemEX\n- Intel Westmere\n- Intel WestmereEX\n- Intel Xeon Phi (KNC)\n- Intel Silvermont & Airmont\n- Intel Goldmont\n- Intel SandyBridge\n- Intel SandyBridge EP/EN\n- Intel IvyBridge\n- Intel IvyBridge EP/EN/EX\n- Intel Xeon Phi (KNL, KNM)\n- Intel Haswell\n- Intel Haswell EP/EN/EX\n- Intel Broadwell\n- Intel Broadwell D\n- Intel Broadwell EP\n- Intel Skylake\n- Intel Kabylake\n- Intel Coffeelake\n- Intel Skylake SP\n- Intel Cascadelake SP\n- Intel Icelake\n- Intel Icelake SP\n- Intel Tigerlake (experimental)\n- Intel SapphireRapids\n\nAMD\n- AMD K8\n- AMD K10\n- AMD Interlagos\n- AMD Kabini\n- AMD Zen\n- AMD Zen2\n- AMD Zen3\n- AMD Zen4\n\nARM\n- ARMv7\n- ARMv8\n- Special support for Marvell Thunder X2\n- Fujitsu A64FX\n- ARM Neoverse N1 (AWS Graviton 2)\n- ARM Neoverse V1\n- HiSilicon TSV110\n- Apple M1 (only with Linux)\n\nPOWER (experimental)\n- IBM POWER8\n- IBM POWER9\n\nNvidia GPUs\n\nAMD GPUs\n\n--------------------------------------------------------------------------------\nDownload, Build and Install\n--------------------------------------------------------------------------------\nYou can get the releases of LIKWID at:\nhttp://ftp.fau.de/pub/likwid/\n\nFor build and installation hints see INSTALL file or check the build instructions\npage in the wiki https://github.com/RRZE-HPC/likwid/wiki/Build\n\nFor quick install:\n```bash\nVERSION=stable\nwget http://ftp.fau.de/pub/likwid/likwid-$VERSION.tar.gz\ntar -xaf likwid-$VERSION.tar.gz\ncd likwid-*\nvi config.mk # configure build, e.g. change installation prefix and architecture flags\nmake\nsudo make install # sudo required to install the access daemon with proper permissions\n```\n\nFor ARM builds, the `COMPILER` flag in `config.mk` needs to changed to `GCCARMv8` or `ARMCLANG` (experimental).\nFor POWER builds, the `COMPILER` flag in `config.mk` needs to changed to `GCCPOWER` or `XLC` (experimental).\nFor Nvidia GPU support, set `NVIDIA_INTERFACE` in `config.mk` to `true` and adjust build-time variables if needed\nFor AMD GPU support, set `ROCM_INTERFACE` in `config.mk` to `true` and adjust build-time variables if needed\n\n--------------------------------------------------------------------------------\nUsage examples\n--------------------------------------------------------------------------------\n<details>\n<summary><code>likwid-topology</code></summary>\n<pre>\n--------------------------------------------------------------------------------\nCPU name:\tIntel(R) Core(TM) i7-6700K CPU @ 4.00GHz\nCPU type:\tIntel Skylake processor\nCPU stepping:\t3\n********************************************************************************\nHardware Thread Topology\n********************************************************************************\nSockets:\t\t1\nCores per socket:\t4\nThreads per core:\t2\n--------------------------------------------------------------------------------\nHWThread        Thread        Core        Die        Socket        Available\n0               0             0           0          0             *                \n1               0             1           0          0             *                \n2               0             2           0          0             *                \n3               0             3           0          0             *                \n4               1             0           0          0             *                \n5               1             1           0          0             *                \n6               1             2           0          0             *                \n7               1             3           0          0             *                \n--------------------------------------------------------------------------------\nSocket 0:\t\t( 0 4 1 5 2 6 3 7 )\n--------------------------------------------------------------------------------\n********************************************************************************\nCache Topology\n********************************************************************************\nLevel:\t\t\t1\nSize:\t\t\t32 kB\nCache groups:\t\t( 0 4 ) ( 1 5 ) ( 2 6 ) ( 3 7 )\n--------------------------------------------------------------------------------\nLevel:\t\t\t2\nSize:\t\t\t256 kB\nCache groups:\t\t( 0 4 ) ( 1 5 ) ( 2 6 ) ( 3 7 )\n--------------------------------------------------------------------------------\nLevel:\t\t\t3\nSize:\t\t\t8 MB\nCache groups:\t\t( 0 4 1 5 2 6 3 7 )\n--------------------------------------------------------------------------------\n********************************************************************************\nNUMA Topology\n********************************************************************************\nNUMA domains:\t\t1\n--------------------------------------------------------------------------------\nDomain:\t\t\t0\nProcessors:\t\t( 0 4 1 5 2 6 3 7 )\nDistances:\t\t10\nFree memory:\t\t318.203 MB\nTotal memory:\t\t7626.23 MB\n--------------------------------------------------------------------------------\n</pre>\n</details>\n\n<details>\n<summary><code>likwid-perfctr</code></summary>\n<pre>\n$ likwid-perfctr -C 0 -g L2 hostname\n--------------------------------------------------------------------------------\nCPU name:\tIntel(R) Core(TM) i7-6700K CPU @ 4.00GHz\nCPU type:\tIntel Skylake processor\nCPU clock:\t4.01 GHz\n--------------------------------------------------------------------------------\nmytesthost\n--------------------------------------------------------------------------------\nGroup 1: L2\n+-----------------------+---------+------------+\n|         Event         | Counter | HWThread 0 |\n+-----------------------+---------+------------+\n|   INSTR_RETIRED_ANY   |  FIXC0  |     321342 |\n| CPU_CLK_UNHALTED_CORE |  FIXC1  |     450498 |\n|  CPU_CLK_UNHALTED_REF |  FIXC2  |    1118900 |\n|    L1D_REPLACEMENT    |   PMC0  |       6670 |\n|      L1D_M_EVICT      |   PMC1  |       1840 |\n| ICACHE_64B_IFTAG_MISS |   PMC2  |       9293 |\n+-----------------------+---------+------------+\n\n+--------------------------------+------------+\n|             Metric             | HWThread 0 |\n+--------------------------------+------------+\n|       Runtime (RDTSC) [s]      |     0.0022 |\n|      Runtime unhalted [s]      |     0.0001 |\n|           Clock [MHz]          |  1613.6392 |\n|               CPI              |     1.4019 |\n|  L2D load bandwidth [MBytes/s] |   197.8326 |\n|  L2D load data volume [GBytes] |     0.0004 |\n| L2D evict bandwidth [MBytes/s] |    54.5745 |\n| L2D evict data volume [GBytes] |     0.0001 |\n|     L2 bandwidth [MBytes/s]    |   528.0381 |\n|     L2 data volume [GBytes]    |     0.0011 |\n+--------------------------------+------------+\n</pre>\n</details>\n\n<details>\n<summary><code>likwid-pin</code></summary>\n<pre>\n$ likwid-pin -c 0,1,2 ./a.out\n[pthread wrapper] \n[pthread wrapper] MAIN -> 0\n[pthread wrapper] PIN_MASK: 0->1  1->2  \n[pthread wrapper] SKIP MASK: 0x0\n\tthreadid 140566548539136 -> hwthread 1 - OK\n\tthreadid 140566540146432 -> hwthread 2 - OK\nNumber of Threads requested = 3\nThread 0 running on processor 0 ....\nThread 1 running on processor 1 ....\nThread 2 running on processor 2 ....\n[...]\n</pre>\n</details>\n\n<details>\n<summary><code>likwid-bench</code></summary>\n<pre>\n$ likwid-bench -t triad_avx -W N:2GB:3\nWarning: Sanitizing vector length to a multiple of the loop stride 16 and thread count 3 from 62500000 elements (500000000 bytes) to 62499984 elements (499999872 bytes)\nAllocate: Process running on hwthread 0 (Domain N) - Vector length 62499984/499999872 Offset 0 Alignment 512\nAllocate: Process running on hwthread 0 (Domain N) - Vector length 62499984/499999872 Offset 0 Alignment 512\nAllocate: Process running on hwthread 0 (Domain N) - Vector length 62499984/499999872 Offset 0 Alignment 512\nAllocate: Process running on hwthread 0 (Domain N) - Vector length 62499984/499999872 Offset 0 Alignment 512\nInitialization: Each thread in domain initializes its own stream chunks\n--------------------------------------------------------------------------------\nLIKWID MICRO BENCHMARK\nTest: triad_avx\n--------------------------------------------------------------------------------\nUsing 1 work groups\nUsing 3 threads\n--------------------------------------------------------------------------------\nRunning without Marker API. Activate Marker API with -m on commandline.\n--------------------------------------------------------------------------------\nGroup: 0 Thread 1 Global Thread 1 running on hwthread 4 - Vector length 20833328 Offset 20833328\nGroup: 0 Thread 0 Global Thread 0 running on hwthread 0 - Vector length 20833328 Offset 0\nGroup: 0 Thread 2 Global Thread 2 running on hwthread 1 - Vector length 20833328 Offset 41666656\n--------------------------------------------------------------------------------\nCycles:\t\t\t22977763263\nCPU Clock:\t\t4007946861\nCycle Clock:\t\t4007946861\nTime:\t\t\t5.733051e+00 sec\nIterations:\t\t96\nIterations per thread:\t32\nInner loop executions:\t1302083\nSize (Byte):\t\t1999999488\nSize per thread:\t666666496\nNumber of Flops:\t3999998976\nMFlops/s:\t\t697.71\nData volume (Byte):\t63999983616\nMByte/s:\t\t11163.34\nCycles per update:\t11.488885\nCycles per cacheline:\t91.911077\nLoads per update:\t3\nStores per update:\t1\nLoad bytes per element:\t24\nStore bytes per elem.:\t8\nLoad/store ratio:\t3.00\nInstructions:\t\t2374999408\nUOPs:\t\t\t3749999040\n--------------------------------------------------------------------------------\n</pre>\n</details>\n\n<details>\n<summary><code>likwid-mpirun</code></summary>\n<pre>\n$ likwid-mpirun -mpi slurm -np 4 -t 2 ./a.out\nMPI started\nProcess with rank 0 running on Node f0846.nhr.fau.de core 0\nProcess with rank 2 running on Node f0859.nhr.fau.de core 0\nProcess with rank 3 running on Node f0859.nhr.fau.de core 36\nProcess with rank 1 running on Node f0846.nhr.fau.de core 36\nEnter OpenMP parallel region\nStart OpenMP threads\nRank 0 Thread 0 running on Node f0846.nhr.fau.de core 0\nRank 0 Thread 1 running on Node f0846.nhr.fau.de core 1\nRank 1 Thread 0 running on Node f0846.nhr.fau.de core 36\nRank 1 Thread 1 running on Node f0846.nhr.fau.de core 37\nRank 2 Thread 0 running on Node f0859.nhr.fau.de core 0\nRank 2 Thread 1 running on Node f0859.nhr.fau.de core 1\nRank 3 Thread 0 running on Node f0859.nhr.fau.de core 36\nRank 3 Thread 1 running on Node f0859.nhr.fau.de core 37\n</pre>\n</details>\n\n<details>\n<summary><code>likwid-powermeter</code></summary>\n<pre>\n$ likwid-powermeter \n--------------------------------------------------------------------------------\nCPU name:\tIntel(R) Core(TM) i7-6700K CPU @ 4.00GHz\nCPU type:\tIntel Skylake processor\nCPU clock:\t4.01 GHz\n--------------------------------------------------------------------------------\n--------------------------------------------------------------------------------\nRuntime: 2.00019 s\nMeasure for socket 0 on CPU 0\nDomain PKG:\nEnergy consumed: 7.47705 Joules\nPower consumed: 3.73817 Watt\nDomain PP0:\nEnergy consumed: 5.42047 Joules\nPower consumed: 2.70998 Watt\nDomain PP1:\nEnergy consumed: 0.0872803 Joules\nPower consumed: 0.043636 Watt\nDomain DRAM:\nEnergy consumed: 1.02612 Joules\nPower consumed: 0.513013 Watt\nDomain PLATFORM:\nEnergy consumed: 0 Joules\nPower consumed: 0 Watt\n--------------------------------------------------------------------------------\n</pre>\n</details>\n\n<details>\n<summary><code>likwid-features</code></summary>\n<pre>\n$ likwid-features -c 0 -l\nFeature               HWThread 0\t\nHW_PREFETCHER         on\t\nCL_PREFETCHER         on\t\nDCU_PREFETCHER        on\t\nIP_PREFETCHER         on\t\nFAST_STRINGS          on\t\nTHERMAL_CONTROL       on\t\nPERF_MON              on\t\nFERR_MULTIPLEX        off\t\nBRANCH_TRACE_STORAGE  on\t\nXTPR_MESSAGE          off\t\nPEBS                  on\t\nSPEEDSTEP             on\t\nMONITOR               on\t\nSPEEDSTEP_LOCK        off\t\nCPUID_MAX_VAL         off\t\nXD_BIT                on\t\nDYN_ACCEL             off\t\nTURBO_MODE            on\t\nTM2                   off\n</pre>\n</details>\n\n\n--------------------------------------------------------------------------------\nDocumentation\n--------------------------------------------------------------------------------\nFor a detailed  documentation on the usage of the tools have a look at the\nhtml documentation build with doxygen. Call\n\n`make docs`\n\nor after installation, look at the man pages.\n\nThere is also a wiki at the github page:\nhttps://github.com/rrze-likwid/likwid/wiki\n\nIf you have problems or suggestions please let me know on the likwid mailing list:\nhttp://groups.google.com/group/likwid-users\n\nor if it is bug, add an issue at:\nhttps://github.com/rrze-likwid/likwid/issues\n\nYou can also chat with us through Matrix:\n- General chat: https://matrix.to/#/#likwid:matrix.org?via=matrix.org\n- Development chat: https://matrix.to/#/#likwid-dev:matrix.org?via=matrix.org\n\n--------------------------------------------------------------------------------\nExtras\n--------------------------------------------------------------------------------\n- If you want to use the Marker API with Java, you can find the Java module here:\nhttps://github.com/jacek-lewandowski/likwid-java-api\n- For Python you can find an interface to the LIKWID API here:\nhttps://github.com/RRZE-HPC/pylikwid or `pip install pylikwid`\n- A Julia interface to LIKWID is provided by the [Paderborn Center for Parallel Computing (PC²)](https://pc2.uni-paderborn.de) and the [MIT JuliaLab](https://julia.mit.edu/):\nhttps://github.com/JuliaPerf/LIKWID.jl or `] add LIKWID`\n\n--------------------------------------------------------------------------------\nSurvey\n--------------------------------------------------------------------------------\nWe opened a survey at the user mailing list to get a feeling who uses LIKWID and how.\nMoreover we would be interested if you are missing a feature or what annoys you when using LIKWID.\nLink to the survey:\nhttps://groups.google.com/forum/#!topic/likwid-users/F7TDho3k7ps\n\n--------------------------------------------------------------------------------\nFunding\n--------------------------------------------------------------------------------\n\nLIKWID development was funded by BMBF Germany under the [FEPA project](https://gauss-allianz.de/en/project/title/FEPA), grant 01IH13009. Since 2017 the development is further funded by BMBF Germany under the [SeASiTe project](https://gauss-allianz.de/en/project/title/SeASiTe), grant 01IH16012A. In 2022, the [EE-HPC project](https://gauss-allianz.de/en/project/title/EE-HPC) is funded by BMBF Germany in the GreenHPC grant.\n\n<div align=center><img src=\"https://raw.githubusercontent.com/wiki/RRZE-HPC/likwid/images/BMBF.png\" alt=\"BMBF logo\" width=\"150\"/></div>\n"
        },
        {
          "name": "README_ROCM.md",
          "type": "blob",
          "size": 0.55078125,
          "content": "## Build & Install\n\n```bash\nexport ROCM_HOME=/opt/rocm\nmake\nmake install\n```\n\n## Test\n\nBuild\n\n```bash\ncd test\n# make clean\nmake test-topology-gpu-rocm\nmake test-rocmon-triad\nmake test-rocmon-triad-marker\n```\n\nRun\n\n```bash\nexport LD_LIBRARY_PATH=/home/users/kraljic/likwid-rocmon/install/lib:/opt/rocm/hip/lib:/opt/rocm/hsa/lib:/opt/rocm/rocprofiler/lib:$LD_LIBRARY_PATH\nexport ROCP_METRICS=/opt/rocm/rocprofiler/lib/metrics.xml # for rocmon test\nexport HSA_TOOLS_LIB=librocprofiler64.so.1 # allows rocmon to intercept hsa commands\n./gpu-test-topology-gpu-rocm\n```\n"
        },
        {
          "name": "bench",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.mk",
          "type": "blob",
          "size": 8.2958984375,
          "content": "#################################################################\n#################################################################\n# Configuration options                                         #\n#################################################################\n#################################################################\n\n# Please have a look in INSTALL and the WIKI for details on\n# configuration options setup steps.\n# Supported: GCC, CLANG, ICC, MIC (ICC), GCCX86 (for 32bit systems)\n# GCCARMv8, GCCARMv7 and GCCPOWER\n# Since 5.3, there is a generic GCCARM target\nCOMPILER = GCC#NO SPACE\n\n# Absolute path where to install likwid. If you need just an intermediate\n# install location, e.g. for packaging, use PREFIX for the intermediate\n# location and INSTALLED_PREFIX for the final location. You can use\n# 'make move' to copy it from PREFIX to INSTALLED_PREFIX.\nPREFIX ?= /usr/local#NO SPACE\n\n# Set the default mode for MSR access.\n# This can usually be overriden on the commandline.\n# Valid values are: direct, accessdaemon and perf_event\nACCESSMODE = accessdaemon#NO SPACE\n\n# Build Fortran90 module interface for Marker API. Adopt Fortran compiler\n# in ./make/include_<COMPILER>.mk if necessary. Default: ifort (even for\n# COMPILER=GCC)\nFORTRAN_INTERFACE = false#NO SPACE\n\n# Instrument likwid-bench with Marker API calls for use with likwid-perfctr\nINSTRUMENT_BENCH = true#NO SPACE\n\n# Build LIKWID with NVIDIA interface (CUDA, CUPTI)\n# For configuring include paths, go to CUDA section\nNVIDIA_INTERFACE = false#NO SPACE\n\n# Build LIKWID with AMD GPU interface (ROCm)\n# For configuring include paths, go to ROCm section\nROCM_INTERFACE = false#NO SPACE\n\n# Build experimental sysfeatures interface and Lua CLI application\nBUILD_SYSFEATURES = false#NO SPACE\n\n# Build container helper\nCONTAINER_HELPER = false#NO SPACE\n\n#################################################################\n#################################################################\n# Advanced configuration options                                #\n# Most users do not need to change values below this comment!   #\n#################################################################\n#################################################################\n\n# Define the color of the likwid-pin output\n# Can be NONE, BLACK, RED, GREEN, YELLOW, BLUE,\n# MAGENTA, CYAN or WHITE\nCOLOR = BLUE#NO SPACE\n\n# Some path definitions\nMANPREFIX = $(PREFIX)/man#NO SPACE\nBINPREFIX = $(PREFIX)/bin#NO SPACE\nSBINPREFIX = $(PREFIX)/sbin#NO SPACE\nLIBPREFIX = $(PREFIX)/lib#NO SPACE\n\n# These paths are hardcoded into executables and libraries. Usually\n# they'll be the same as above, but package maintainers may want to\n# distinguish between the image directories and the final install\n# target.\n# Keep in mind that the access and setFreq daemon need enough\n# privileges that may be deleted when copying the files to\n# the INTSTALLED_PREFIX\nINSTALLED_PREFIX ?= $(PREFIX)#NO SPACE\nINSTALLED_BINPREFIX = $(INSTALLED_PREFIX)/bin#NO SPACE\nINSTALLED_SBINPREFIX = $(INSTALLED_PREFIX)/sbin#NO SPACE\nINSTALLED_LIBPREFIX = $(INSTALLED_PREFIX)/lib#NO SPACE\n\n# Build the accessDaemon. Have a look in the WIKI for details.\nBUILDDAEMON = true#NO SPACE\n# For the daemon based secure msr/pci access configure\n# the absolute path to the msr daemon executable.\nACCESSDAEMON = $(SBINPREFIX)/likwid-accessD#NO SPACE\nINSTALLED_ACCESSDAEMON = $(INSTALLED_SBINPREFIX)/likwid-accessD#NO SPACE\n\n# Build the setFrequencies daemon to allow users setting the CPU and Uncore\n# frequency\nBUILDFREQ = true#NO SPACE\n# Paths for frequencie deaemon after installation\nFREQDAEMON = $(SBINPREFIX)/likwid-setFreq#NO SPACE\nINSTALLED_FREQDAEMON = $(INSTALLED_SBINPREFIX)/likwid-setFreq#NO SPACE\n\n# Build the appDaemon. It's not really a daemon but an LD_PRELOAD library\n# It is required to get access to the application context.\nBUILDAPPDAEMON=true\nAPPDAEMON = $(PREFIX)/lib/likwid-appDaemon.so#NO SPACE\nINSTALLED_APPDAEMON = $(INSTALLED_PREFIX)/lib/likwid-appDaemon.so#NO SPACE\n\n# Build the container helper.\nTMP_CONTAINER_HELPER = $(PREFIX)/sbin/likwid-bridge\nINSTALLED_CONTAINER_HELPER = $(INSTALLED_PREFIX)/sbin/likwid-bridge\n\n# chown installed tools to this user/group\n# if you change anything here, make sure that the user/group can access\n# the MSR devices and (on Intel) the PCI devices.\nINSTALL_CHOWN = -g root -o root#NO SPACE\n\n# uncomment to optionally set external lua@5.2 or lua@5.3:\n# default is use internally provide lua\n#LUA_INCLUDE_DIR = /usr/include/lua5.2#NO SPACE\n#LUA_LIB_DIR = /usr/lib/x86_64-linux-gnu#NO SPACE\n#LUA_LIB_NAME = lua5.2#NO SPACE, executable is assumed to have the same name\n#LUA_BIN = /usr/bin#NO SPACE\n\n# uncomment to optionally use system hwloc (tested with hwloc 2.x):\n# default is to use internal hwloc\n#HWLOC_INCLUDE_DIR = /usr/include#NO SPACE\n#HWLOC_LIB_DIR = /usr/lib#NO SPACE\n#HWLOC_LIB_NAME = hwloc#NO SPACE, used later as -l$HWLOC_LIB_NAME\n\n# Change to true to a build shared library instead of a static one\n# It is NOT recommended to switch to static libraries as some features don't\n# work when compiled statically\nSHARED_LIBRARY = true#NO SPACE\n\n# Build LIKWID with debug flags\nDEBUG = false#NO SPACE\n\n# Build LIKWID with address sanitizer flags\nSANITIZE = false#NO SPACE\n\n# Basic configuration for some internal arrays.\n# Maximal number of hardware threads\nMAX_NUM_THREADS = 512\n# Maximal number of sockets\nMAX_NUM_NODES = 128\n# Maximal number of CLI parameters\nMAX_NUM_CLIARGS = 16384\n\n# Paths to some configuration files that can be used to overwrite some\n# array lengths defined at compilation\nCFG_FILE_PATH = /etc/likwid.cfg\n# With the likwid-genTopoCfg it is possible to store the topology of a system\n# in a file to avoid re-reading all topology informations again\nTOPO_FILE_PATH = /etc/likwid_topo.cfg\n\n# Versioning Information\n# The libraries are named liblikwid.<VERSION>.<RELEASE>\nVERSION = 5\nRELEASE = 4\nMINOR = 0\n# Date when the release is published\nDATE    = 28.11.2024\n\n# In come cases it is important to set the rpaths for the LIKWID library. One\n# example is the use of sudo because it resets environment variables like\n# LD_LIBRARY_PATH\nRPATHS = -Wl,-rpath=$(INSTALLED_LIBPREFIX)\n\n# LIKWID uses a lock to avoid simultaneous usage by multiple users. The user\n# owning this file has access to the LIKWID library and can use LIKWID\n# simultaneously.\nLIKWIDLOCKPATH = /var/run/likwid.lock\n\n# The access daemon creates sockets under this path to communicate with the\n# LIKWID library.\nLIKWIDSOCKETBASE = /tmp/likwid  # -%d will be added automatically to the socket name\n\n# The pinning library is put in LD_PRELOAD when using LIKIWD for thread/process\n# pinning. The library overloads the pthread_create function to pin threads\n# directly after their creation\nLIBLIKWIDPIN = $(abspath $(INSTALLED_LIBPREFIX)/liblikwidpin.so.$(VERSION).$(RELEASE))\n\n# Some tools (likwid-perfctr and likwid-topology) provide the export of their\n# output to a file. LIKWID tries to format the file based on the file suffix.\n# The folder contains scripts named as the file suffix, like xml, which read\n# the CSV output of the tools and perform the conversation to the desired file\n# format\nLIKWIDFILTERPATH = $(abspath $(INSTALLED_PREFIX)/share/likwid/filter)\n\n# LIKWID uses txt-files as input for the performance groups. The configured\n# folder contains folders for each architecture with the architecture-specific\n# performance group files. Despite this folder, LIKWID also checks\n# $HOME/.likwid/groups\nLIKWIDGROUPPATH = $(abspath $(INSTALLED_PREFIX)/share/likwid/perfgroups)\n\n# CUDA / CUPTI build data\n# LIKWID requires CUDA and CUPTI to be present only for compilation with\n# NVIDIA_INTERFACE=true. At runtime, the CUDA and the CUPTI library have\n# to be in the LD_LIBRARY_PATH to dynamically load the libraries.\n# Include directory for CUDA headers\nCUDAINCLUDE = $(CUDA_HOME)/include\n# Include directory for CUPTI headers\nCUPTIINCLUDE = $(CUDA_HOME)/extras/CUPTI/include\n# In order to hook into the CUDA application, the appDaemon is required\n# If you just want the NvMarkerAPI, you can keep it false\nBUILDAPPDAEMON=false\n\n# ROCm build data\n# LIKWID requires ROCm to be present only for compilation with\n# ROCM_INTERFACE=true. At runtime, the ROCm library have\n# to be in the LD_LIBRARY_PATH to dynamically load the libraries.\n# Include directory for ROCm headers\nHSAINCLUDE \t\t\t= $(ROCM_HOME)/include\nROCPROFILERINCLUDE\t        = $(ROCM_HOME)/include/rocprofiler\nHIPINCLUDE \t\t\t= $(ROCM_HOME)/include\nRSMIINCLUDE\t\t\t= $(ROCM_HOME)/include\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "ext",
          "type": "tree",
          "content": null
        },
        {
          "name": "filters",
          "type": "tree",
          "content": null
        },
        {
          "name": "groups",
          "type": "tree",
          "content": null
        },
        {
          "name": "kernel",
          "type": "tree",
          "content": null
        },
        {
          "name": "make",
          "type": "tree",
          "content": null
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "perl",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}