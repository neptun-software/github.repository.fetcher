{
  "metadata": {
    "timestamp": 1736710144158,
    "page": 797,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bluekitchen/btstack",
      "stars": 1771,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.33203125,
          "content": "*~\n*.o\n*.d\n*.dSYM\n*.aux\n*.toc\n*.out\n*.pklg\n*.fdb_latexmk\n*.hex\n*.dylib\n*.bts\n*.elf\n*.map\n.theos\n.stamp\n.bts\nbluetooth_init_cc2560B_1.*_BT_Spec_4.1.c\nbluetooth_init_cc2564B_1.*_BT_Spec_4.1.c\nTIInit_11.8.32.c\ninitscripts_TIInit_6.7.16_bt_spec_4.1.c\n*.jdebug\n*.jdebug.user\ncmake-build-*\nbuild\nbuild-asan\nbuild-coverage\n.idea\n.vs\n.vscode\nninja\n"
        },
        {
          "name": "3rd-party",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 64.7119140625,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n---\n\n## Unreleased\n### Added\n### Fixed\n- HFP: use 'don't care' to accept SCO connections, fixes issue on ESP32\n- HFP: fix LC3-WB init\n- HFP AG: fix setup of audio connection in service level established event\n \n### Changed\n\n\n## Release v1.6.2\n\n### Added\n- btstack_util: safe wrappers for snprintf\n- btstack_version: provides BTstack major, minor, patch versions\n- HCI Dump: support ISO packets in PacketLogger format\n- HCI Dump Dispatch: allow to chain multiple HCI Dump implementations\n- GAP: support LE Connection Subrating with gap_request_connection_subrating\n- GATT Client: gatt_client_add_service_changed_handler to receive Service Changed and Database Hash events\n- GATT Client: various _with_context functions that provide a service + connection id to GATT query events\n- GATT Service Client: generic client discovers characteristics and enables notifications/indications\n- L2CAP: provide access to number of available credits in CBM/ECBM\n- AVDTP, A2DP: MPEG AAC capability and configuration events provide DRC field\n- AVRCP: support Browsing in Target role\n- HFP HF: support Apple Accessory information with:\n  - hfp_hf_apple_set_identification\n  - hfp_hf_apple_set_battery_level\n  - hfp_hf_apple_set_docked_state\n- HFP AG: report Apple Accessory information, battery level and docked state\n- HID Parser: introduce HID Descriptor and HID Descriptor Usage iterators\n- PBAP Client: allow to set start offset and max list count for pull phonebook operation\n- PBAP Client: create SDP record with pbap_client_create_sdp_record\n- PBAP Client: support multiple parallel connections\n- Battery Service v1.1 Server\n- Immediate Alert Service Server and Client: added\n- Link Loss Service Server and Client: added\n- TX Power Service Client: added\n- Chipset: support PatchRAM download on CYW5551x and CYW5557x\n \n### Fixed\n- btstack_util: skip whitespace in btstack_atoi\n- L2CAP: Fix ERTM Tx buffer reconfiguration\n- RFCOMM: shut down multiplexer after closing last channel instead of multiplexer idle timer\n- RFCOMM: fix multiple outgoing channel setup\n- SDP Server: skip empty attribute lists in Service Search Attribute Response\n- HID Host: return complete HID report\n- SM: fix CTKD key distribution over BR/EDR\n- SM: fix CTKD after BR/EDR Role Change\n- A2DP: emit stream established if peer set-up configuration\n- AVDTP: fix SDP Client registration bug that could block other SDP queries\n- HFP HF: send HF Indicator update only if enabled by AG\n- HID Host: omit Report ID in Set/Get Report and send report for report id == HID_REPORT_ID_UNDEFINED\n- PBAP Client: fix PBAP_SUBEVENT_OPERATION_COMPLETED with OBEX_DISCONNECTED for pbap_disconnect\n- HIDS Client: emit disconnected event on HCI disconnect and free connection struct\n- Scan Parameter Service Client: emit disconnected event on HCI disconnect and free connection struct\n- POSIX: clear run loop exit flag\n- esp32: use synchronous VHCI API with newer ESP32 variants (esp32, -c3, and -s3 use asynchronous API)\n- 3rd-party: update hxcmod-player to fix GCC 11 warnings\n\n### Changed\n- HCI Dump: only log internal BTstack events if ENABLE_LOG_BTSTACK_EVENTS is defined\n- GAP: return command disallowed if disconnect already requested\n- GAP: improve handling of incorrectly resolved addresses in HCI_SUBEVENT_LE_CONNECTION_COMPLETE\n- GAP: only store link key if at least one side requests bonding during the IO Capabilities exchange.\n- GATT Client: use Find by Information Request to lookup CCCD for Notifications/Indications\n- SDP Client: trigger next SDP query callback, if registered callback does not start SDP query\n- BNEP Client: provide setup connection response in BNEP_EVENT_CHANNEL_OPENED\n- GOEP Client: remove goep_client_create_connection. Use goep_client_connect instead.\n- HID Parser: cleanup of function names and signatures\n- HIDS Client: use error code instead of ATT status in connected event\n- Device Information Service Server: update for v1.2\n- Device Information Service Client: update for v1.2\n- esp32: enable audio driver by default on esp32, esp32c3 and esp32c6\n- test: removed auto-pts support\n\n\n## Release v1.6.1\n\n### Added\n- GAP: support coordinated private random address updates\n- libusb: support send/receive of HCI ISO packets\n\n### Fixed\n- GAP: allow use of own address type different from gap_random_set_mode() incl. RPA in LE Extended Advertising\n- GAP: emit GAP_SUBEVENT_LE_CONNECTION_COMPLETE for failed outgoing connections\n- HCI: improved BIG setup/termination\n- L2CAP: set extended flow control bit in information response if enabled\n- SM: abort pairing with invalid parameter error for encryption key size > 16\n- SM: ignore Security Request after re-encryption has started\n- SM: respond to Pairing Request after Identity Resolution failed\n- SM: fix CTKD from Classic in Peripheral role\n- ATT Server: support delayed read responses for registered services\n- ATT Server: allow to start crypto operation from delayed att read/write request\n- HFP: use round robin for outgoing connections\n- HFP HF: send HF Indicator update only if enabled by AG\n- HFP AG: send OK after SLC for HF that does not support 3-way-calling or HF Indicators\n- HSP HS: use EV3 and 2EV3 packets for 7.5 ms voice interval\n- AVDTP: use round robin for outgoing connections\n- AVDTP: allow call to avdtp_disconnect before connection was established\n- A2DP: allow call to avdtp_disconnect before connection was established\n- AVRCP: use round robin for outgoing connections\n- GOEP Client: use round robin for outgoing connections\n- HID Host: use round robin for outgoing connections\n- HOG Host: emit GATTSERVICE_SUBEVENT_HID_REPORT for hids_client_send_write_report\n \n### Changed\n- HCI: hci_reserved_packet_buffer and higher layer functions asserts if packet buffer is free instead of return value\n- GAP: suppress GAP_SUBEVENT_LE_CONNECTION_COMPLETE for intermediate connection pause due to filterlist update\n- GAP: mutual authentication for legacy secure connections to prevent BIAS attacks was made optional with \n       ENABLE_MUTUAL_AUTHENTICATION_FOR_LEGACY_SECURE_CONNECTIONS. Not needed for default encryption key size of 16\n- HCI Dump: only log internal/BTstack events for ENABLE_LOG_BTSTACK_EVENTS\n\n## Release v1.6\n\n### Added\n- HCI: allow to configure Classic ACL packet types with hci_enable_acl_packet_types\n- GAP: emit generic GAP_SUBEVENT_LE_CONNECTION_COMPLETE for any LE Connection Complete\n- SM: support LE Secure Connection debug keys for testing\n- L2CAP: additional authorization_required param in l2cap_ecbm_register_service  \n- GATT Client: support GATT over Enhanced LE Bearer\n- GATT Server: support GATT over Enhanced LE Bearer\n- A2DP: support SDP record without service name and/or provider\n- AVRCP: support SDP record without service name and/or provider\n- HFP: hfp_hf_create_sdp_record_with_codecs and hfp_hf_create_sdp_record_with_codecs\n- HFP: support for LC3-SWB\n- HFP: support SDP record without service name\n- PABP Server: support SDP record without service name\n- SPP Server: support SDP record without service name\n- HOG Device: emit HIDS_SUBEVENT_SET_REPORT\n- HOG Device: provide report for GET REPORT operation via callback\n- SBC Codec: new interface allows for multiple instances\n- LE Device DB: le_device_db_dump dumps LTK\n- Port for Zephyr 3.x\n- Port for FreeBSD that uses kernel netgraph HCI node \n\n### Fixed\n- HCI: fix remove le device from whitelist and periodic advertiser list\n- HCI: fix restart connect with whitelist after whitelist modification\n- GAP: store classic link keys independent from peer bonding request\n- SM: directly detect invalid Public key when Controller ECC is used \n- SM: sm: only set LinkKey flag in Pairing Request/Response if BR/EDR supported locally\n- L2CAP: make l2cap_get_remote_mtu_for_local_cid available to LE-only builds\n- L2CAP: handle all signaling requests and responses in closed state\n- HFP: use 'don't care' to accept SCO connections, fixes issue on ESP32\n- HFP: fix LC3-WB init\n- HFP AG: fix setup of audio connection in service level established event\n- HFP AG: fix BCM WBS setup\n- HFP AG: allow use of mSBC in subsequent audio connections after CSVD downgrade\n- HFP AG: fix terminate held call\n- HFP HF: send 'deactivate EC/NR' if supported in AG\n- HID Device: set Report Mode as default\n- HID Host: support large HID Descriptors\n- AVDTP: limit L2CAP MTU to largest BR/EDR packet, fixes A2DP Sink role for some Samsung TV\n- AVDTP: fix Get Stream Configuration\n- AVDTP: reject suspend in state endpoint open\n- AVDTP: return error in avdtp_suspend_stream if state is not streaming\n- AVRCP: reject incoming second l2cap connection\n- AVRCP: generate command for avrcp_controller_get_element_attributes dynamically\n- SPP Server: fix SPP version in SDP record\n- GATT Client: ignore notifications/indications until re-encrypted for bonded device without ENABLE_LE_PROACTIVE_AUTHENTICATION\n- btstack_flash_bank: support alignment larger than 4\n- windows: fix timestamps in packet logs\n\n### Changed\n- HCI: simplified implicit SCO flow control\n- HCI: return ERROR_CODE_COMMAND_DISALLOWED for outgoing connections in gap_connect\n- GAP: only return status code for errors in gap_connect\n- AVRCP: shorten default SDP Service and Provider Names\n- GATT Client: emit query complete event for gatt_client_discover_characteristic_descriptors in next run loop iteration\n- HFP: report HFP Version 1.9 in SDP record\n- HID Parser: ignore Report Items without Usage\n- btstack_crypto: allow MBEDTLS config via MBEDTLS_CONFIG_FILE\n- remove old Zephyr 1.9 port\n- ports: require CMake 3.12 for CMake projects\n \n## Release v1.5.6\n\n### Added\n- HCI: HCI_ACL_CHUNK_SIZE_ALIGNMENT allows to keep HCI transport writes aligned\n- GAP: support additional LE PHYs for scanning and outgoing connections\n- GATT Client: allow to queue requests with gatt_client_request_to_send_gatt_query and gatt_client_request_to_write_without_response\n- GATT Client: support GATT over BR/EDR transport via gatt_client_classic_connect\n- HFP: provide SCO packet types and rx/tx packet lengths in HFP_SUBEVENT_AUDIO_CONNECTION_ESTABLISHED\n- HFP: allow to register custom at commands with hfp_hf_register_custom_at_command\n- HFP: experimental support for LC3-SWB from HFP SWB draft with ENABLE_HFP_SUPER_WIDE_BAND_SPEECH\n- AVRCP: support Cover Art via avrcp_cover_art_client\n- example: gatt_streamer_server and le_streamer_client report DLE and PHY changes\n- NXP: support for NXP Controller with bootloader versions v1, e.g. NXP 88W8997, and v3, e.g. NXP IW416 or IW61x\n- esp32: support esp-idf v5.x audio driver\n- esp32: warn about sdkconfig issues\n- esp32: add BTstack component config options via menuconfig\n- esp32: allow to disable default audio i2s driver via component config\n- esp32: btstack_stdio_init configures buffered output, required for stdin support\n- Port for Renesas RA6M4 with DA14531\n- Port for NXP Controller on POSIX (posix-h4-nxp)\n- Port for newer Infineon Controller on POSIX (posix-h4-bcm) that requires autobaud-mode\n\n### Fixed\n- HCI: fix set extended scan response\n- HCI: fix report of extended advertisements with data len > 31\n- HCI: fix CTKD in Initiator role over BR/EDR SC when using dedicated bonding\n- SM: fix value in SM_EVENT_NUMERIC_COMPARISON_REQUEST\n- SM: ignore Security Request during re-encryption\n- GATT Client: return ERROR_CODE_UNKNOWN_CONNECTION_IDENTIFIER for invalid connection handle\n- A2DP: emit A2DP_SUBEVENT_STREAM_ESTABLISHED with if connection fails, e.g. because of Page Timeout\n- A2DP Source: a2dp_source_stream_send_media_payload was removed, use a2dp_source_stream_send_media_payload_rtp instead\n- A2DP: use samples as timestamp, fixes issue with Apple Airpods Pro 2nd Gen\n- AVDTP Source: avdtp_source_stream_send_media_payload was removed, use avdtp_source_stream_send_media_payload_rtp instead\n- AVRCP: re-register for notification\n- BNEP: validate UUID32 and UUID128 service in connect request\n- HFP: fix setup/accept of synchronous connection\n- HFP: use mandatory safe settings considering BR/EDR Secure Connections to accept synchronous connections\n- HFP: avoid SCO packet types not supported either locally or remotely\n- HFP: remove trailing newline/carriage return in custom command event \n- PBAP Client: make pbap_set_property_selector work for Pull Phonebook\n- btstack_stdin_embedded: use timer to poll RTT input, fix for tickless RTOS\n- esp32: fix audio power amplifier control on Lyra T v4.3 board\n- tool/convert_gatt_service: removed as GATT Service descriptions not available on Bluetooth SIG web site\n\n### Changed\n- GAP: add gap_set_peer_privacy_mode with default LE_PRIVACY_MODE_DEVICE\n- GAP: use stack defaults for LE Connection Parameter Updates\n- GAP: set minimum and maximum CE length to 0\n- GAP: ENABLE_EXPLICIT_DEDICATED_BONDING_DISCONNECT disables disconnect after dedicated bonding\n- GOEP Client: support multiple instances\n- A2DP Sink: drop unused local seid argument in a2dp_sink_establish_stream\n- HFP: emit HFP_SUBEVENT_CUSTOM_AT_MESSAGE_SENT after sending custom command / unsolicited response code\n- sco_demo_util: replace hfp_msbc by hfp_codec\n- BCM: look for PatchRAM file with prefix DEVICE_NAME and extension '.hcd'\n- bluetooth: indicated identity address in resolved address type enums name\n- btstack_audio: added get_samplerate function to help with audio sample rate synchronization \n- btstack_flash_bank: write empty tag instead of overwriting existing tag with ENABLE_TLV_FLASH_WRITE_ONCE\n- esp32: drop support for Makefile projects from esp-idf 3.x\n- esp32: avoid deprecated btstack_run_loop_freertos API calls\n- esp32: use sample rate compensation in a2dp_sink_demo\n- stm32-f4discovery-cc256x: use external oscillator for better I2S clock\n- stm32-f4discovery: use sample rate compensation in a2dp_sink_demo\n\n\n## Release v1.5.5\n\n### Added\n- hci_dump_stdout: allow to truncate ACL, SCO and ISO packets with HCI_DUMP_STDOUT_MAX_SIZE_*\n- GATT Service: Broadcast Audio Scan Service Server and Client (BASS 1.0)\n- example/a2dp_source_demo: add command to scan and connect to Bluetooth speaker by class of device\n- OPP Server profile and OPP Server demo\n\n### Fixed\n- GAP: reload LE Resolving List after power-cycle \n- GAP: fix setting of LE Scan Response for data that needs to be fragmented  \n- SM: fix pairing process with active ATT communication\n- ESP32: fix init for BR/EDR Only mode\n- ESP32: fix audio driver for sink + source mode\n- ESP32: fixes for ESP-IDF v5.x\n- ESP32: fix compile of non-BTstack examples after adding components/btstack\n\n### Changed\n- GAP: reload LE Filterlist and Periodic Advertiser List after power-cycle\n- SM: delete bonding information for existing device with BD_ADDR on new pairing with different IRK\n- Mesh: move GATT Services into src/mesh/gatt-service\n- LE Audio: move GATT Services into src/le-audio/gatt-service\n- libusb: improve implementation\n\n## Known Issues\n- ESP32: audio driver for ES8388/LyraT v4.3 not updated for esp-idf 5.x\n\n\n## Release v1.5.4\n\n### Added\n- HFP HF: send custom AT command with hfp_hf_send_at_command\n- HFP HF: terminate held calls with hfp_hf_terminate_held_calls\n- HFP HF: provide Call Waiting information alpha field\n- HFP HF: add hfp_hf_set_default_microphone_gain and hfp_hf_set_set_default_speaker_gain for SLC\n- HFP AG: support handling of custom AT commands with hfp_ag_register_custom_at_command\n- HFP AG: send custom unsolicited result code with hfp_ag_send_unsolicited_result_code\n- GAP: allow to enable duplicate filter for LE scanning with gap_set_scan_duplicate_filter\n- GAP: support BIG with gap_big_create and gap_big_terminate\n- GAP: support BIG Sync gap_big_sync_create and gap_big_sync_terminate\n- GAP: support Periodic Advertisement Sync Transfer\n- PBAP Server profile and PBAP Server demo\n- OPP Client profile and OPP Client demo\n- port: CMake build files in all windows-* ports allow to use Visual Studio 2022\n- embedded audio: mono audio is played on both channels if HAVE_HAL_AUDIO_SINK_STEREO_ONLY is defined\n- Support for ESP32-C3 and ESP32-S3\n \n### Fixed\n- HCI: only add paired LE devices with IRK to resolving list\n- HCI: send HCI LE Create Connection Cancel only once for outgoing LE connections without whitelist\n- GAP: use static random address after power up\n- L2CAP: fix L2CAP_EVENT_CONNECTION_PARAMETER_UPDATE_REQUEST\n- SM: avoid potential loop during CTKD  \n \n### Changed\n- HCI Dump: provide log level to log_message implementation\n- GAP: replace BTSTACK_EVENT_DISCOVERABLE_ENABLED with BTSTACK_EVENT_SCAN_MODE_CHANGED\n\n\n## Release v1.5.3\n\n### Added\n- GAP: support periodic advertising with ENABLE_LE_PERIODIC_ADVERTISING\n- GAP: support periodic inquiry mode with gap_inquiry_periodic_start\n- HFP HF: provide Calling Line Identification alpha field\n- HFP HF: emit HFP_SUBEVENT_TRANSMIT_DTMF_CODES after sending DTMF command\n- GOEP Server\n- Chipset: support for firmware download and configuration of Realtek Controllers\n- PBAP Server and pbap_server_demo\n\n### Fixed\n- GAP: fix gap_connect_cancel for gap_connect_with_whitelist\n- GAP: fix race condition that causes duplicate authenticate request\n- SM: address update for non-resolvable private addresses\n- SM: reset state on power off transition\n- L2CAP: Fix accept incoming ERTM connection when Information Request already complete\n- A2DP Sink: fix config API for AAC, ATRAC, and other codecs\n- HFP: try next link setting for SCO connection failure after SCO reject errors\n- HFP AG: activate all AG indicators upon service level connection establishment\n- HFP AG: handle call termination in alerting call state\n- HFP HF: fix parsing of phone number for voice tag\n- HFP HF: report HFP_SUBEVENT_NETWORK_OPERATOR_CHANGED event\n\n### Changed\n- HCI: use ERROR_CODE_CONNECTION_REJECTED_DUE_TO_SECURITY_REASONS to rejected classic connections\n- SM: pairing events indicate if LE Secure Connection will be used\n- A2DP: new a2dp.c contains shared code of Sink and Source roles\n- A2DP Sink: automatically configure stream endpoint for outgoing connections\n- HFP AG: drop unused number parameter from hfp_ag_outgoing_call_initiated\n- libusb: command line options to delete TLV and specify log file path\n- Windows: native implementations of btstack_tlv_window, hci_dump_windows_fs, hci_dump_window_stdout\n \n## Release v1.5.2\n\n### Added\n- GAP: ENABLE_HCI_SERIALIZED_CONTROLLER_OPERATIONS serializes Inquiry, Remote Name Request and Create Connection operations\n- GAP: support extended advertising with ENABLE_LE_EXTENDED_ADVERTISING\n- GAP: gap_enable_link_watchdog() uses automatic flush timeout to disconnect if data cannot be sent\n- GAP: gap_secure_connections_active() to query if BR/EDR Secure Connecions are possible\n- ATT DB: provide gatt_server_get_handle_range_for_service_with_uuid16 to find included service within handle range\n- GATT Service: Audio Input Control Service Server (AICS 1.0)\n- GATT Service: Microphone Control Service Server (MCS 1.0)\n- GATT Service: Published Audio Capabilities Service Server (PACS 1.0)\n- GATT Service: Volume Control Service Server (VCS 1.0)\n- GATT Service: Volume Offset Control Service Server (VOCS 1.0)\n\n### Fixed\n- POSIX: fix RTS/CTS configuration by keeping local termios copy in btstack_uart_posix\n- HCI: fix handling of HCI Connection Complete with error (regression introduced in v1.5.1)\n- GAP: disable scanning, advertising, connection before updating random address\n- GAP: fix LE Scan with whitelist\n- HFP_AG: fix tracking for call dropped during outgoing ringing\n- HFP: Free HFP Connection object on SDP error / Service not found\n- PBAP Client: emit operation complete with status OBEX_ABORTED\n\n### Changed\n- Chipset: use da145xx in folder/file/function names for Dialog Semiconductor SoCs\n- GAP: set min encryption key size during init, if supported\n- AVDTP: use BLUETOOTH_SERVICE_CLASS_AUDIO_SINK / SOURCE instead of BLUETOOTH_PROTOCOL_AVDTP in SDP queries\n- ATT Server: use uint8_t for status returns\n- libusb, POSIX and Windows ports: use '-' instead of ':' in btstack_BD_ADDR.tlv filename\n\n\n## Release v1.5.1\n\n### Added\n- GOEP Client: add goep_client_version_20_or_higher\n- ESP32: implement audio source\n \n### Fixed\n- PBAP Client: support disconnect while operation is ongoing\n- PBAP Client: use SRM only if GOEP v2.0 or higher connection\n- PBAP Client: emit vCard entry data as PBAP_DATA_PACKET\n- L2CAP: limit remote MTU by local tx configuration in ERTM\n\n### Changed\n- Example: init SM if LE supported to avoid issue with Android Cross-Transport Key-Derivation\n- ESP32: update sdkconfig for esp-idf v4.3, disable Bluedroid host stack\n- ESP32: use I2S configuration from ESP32 LyraT V4.3\n\n\n## Release v1.5.0\n\n### Added\n- HCI Dump: Support BTSnoop format in hci_dump_posix_fs.c for format = HCI_DUMP_BTSNOOP\n- HCI Dump RTT STDOUT: drop messages if RTT buffer is full and RTT is configured for non-blocking\n- HCI: hci_remove_event_handler to remove packet handler\n- hci_cmd: support variable length fields and arrayed parameters\n- GAP: ENABLE_EXPLICIT_LINK_KEY_REPLY allows for asynchronous link key lookup by application\n- GAP: gap_set_page_timeout to set Page Timeout\n- GAP: gap_inquiry_set_scan_activity to set Inquiry Scan Activity\n- L2CAP: emit L2CAP_EVENT_INFORMATION_RESPONSE event with extended features and fixed channels supported\n- L2CAP: support Enhanced Credit-based Flow-Control Mode for connection-oriented channels over BR/EDR/LE\n- A2DP: allow to register media codec validator for sink and source with:\n  - `a2dp_sink_register_media_config_validator`\n  - `a2dp_source_register_media_config_validator`\n- A2DP Sink: allow accept or reject of stream start on A2DP_SUBEVENT_START_STREAM_REQUESTED when ENABLE_AVDTP_ACCEPTOR_EXPLICIT_START_STREAM_CONFIRMATION is defined\n- OBEX: new obex_parser for chunked OBEX data\n- SM: Support Cross-Transport Key-Derivation (CTKD) of LE LTK from BR/EDR SC Link Key in Responder role\n- SM: sm_remove_event_handler to remove packet handler\n- GATT Service: Bond Management Service (BMS 1.0) Server\n- GATT Service: Microphone Control Service (MICS 1.0) Server\n- GATT Service: TX Power Service (TPS 1.0) Server \n- POSIX: btstack_signal allows to register for callback on signal, e.g. ctrl-c\n- Windows: btstack_stdin_window_register_ctrl_c_callback allows to register for ctrl-c\n\n### Fixed\n- A2DP Source: fix reconfigure\n- AVRCP Controller: prevent registering of notifications for unsupported events\n- RFCOMM: fixed handling of remote port configuration command\n- HFP AG: fix accept incoming connection while audio connection is established\n- PBAP Client: handle chunked vCard Listing\n- PBAP Client: use new streaming obex_parser to handle chunked OBEX data\n- SM: Work around for unexpected Windows 10 disconnect for BR Secure Connections (SMP over BR timeout)\n- SM: support storing bonding information for devices with identical IRK but different public addresses\n- GAP: restart advertising when private address changes\n- le_device_db_tlv: keep number of devices reported by le_device_db_count if old entry is replaced\n \n### Changed\n- Drop iOS support\n- HCI: provide status instead of undocumented int error code and bool for API functions\n- HCI: use 1000 ms watchdog to force power off for hci_power_control(HCI_POWER_OFF)\n- GAP: local name, EIR data, class of device and default link policy can be updated at any time\n- L2CAP: provide status instead of undocumented int error code and bool for API functions\n- L2CAP: remote features not required for SDP connections\n- L2CAP: replaced l2cap_register_packet_handler with l2cap_add_event_handler to register multiple handlers\n- L2CAP: drop reason parameter in l2cap_disconnect\n- L2CAP: use official terminology for L2CAP channel modes - ENABLE_L2CAP_LE_CREDIT_BASED_FLOW_CONTROL_MODE replaces ENABLE_LE_DATA_CHANNELS\n- L2CAP: unify API for can send now, request to send, and send packet and disconnect channel\n- L2CAP: unify events for can send now, packet sent, channel closed (CbM/ECBM using existing events)\n- RFCOMM: `RFCOMM_EVENT_PORT_CONFIGURATION` contains rfcomm_cid and remote flag, emitted for query config\n- RFCOMM: provide status instead of undocumented int error code and bool for API functions\n- RFCOMM: remote port configuration, line status, and modem status are sent by channel state machine\n- HSP: add ACL Connection to all events and BD ADDR to HSP_SUBEVENT_RFCOMM_CONNECTION_COMPLETE\n- HFP: API functions return status code if appropriate \n- HFP: removed one parameter from hfp_ag/hf_activate_voice_recognition function, introduce hfp_ag/hf_deactivate_voice_recognition instead\n- HFP: merged legacy and enhanced Voice Recognition Activation (VRA) API. If available enhanced mode will be preferred.\n- HFP: separate events for activation (HFP_SUBEVENT_VOICE_RECOGNITION_ACTIVATED) and deactivation (HFP_SUBEVENT_VOICE_RECOGNITION_DEACTIVATED) instead of combined HFP_SUBEVENT_VOICE_RECOGNITION_STATUS with status field. HFP_SUBEVENT_VOICE_RECOGNITION_ACTIVATED contains field \"enhanced\" to indicate if enhanced mode is used. \n- HFP: enhanced VRA: HFP_SUBEVENT_VOICE_RECOGNITION_ACTIVATED is emitted after VRA is ready and the the audio connection is established. This simplifies HFP HF client logic, i.e. client can call `hfp_hf_enhanced_voice_recognition_report_ready_for_audio directly` upon reception of HFP_SUBEVENT_VOICE_RECOGNITION_ACTIVATED event.\n- AVDTP: media config validator is called with preview of media codec configuration event and configured separately for sink/source\n- AVRCP: use PANEL as default unit + subunit info\n- AVRCP Controller: automatically query supported events when registering for notifications \n- AVRCP Target: cache companies and events in library and remove need to answer query in application callback. Use Bluetooth SIG as default company.\n- Run Loop: new functionality for HCI transport drivers and inter-process communication:\n  - *btstack_run_loop_poll_data_sources_from_irq*: used to transfer control from IRQ handler to main thread/run loop\n  - *btstack_run_loop_execute_on_main_thread*: schedule code execution on main thread from other thread\n  - *btstack_run_loop_trigger_exit*: trigger run loop exit\n- POSIX / Windows / Raspi / Qt: use updated ctrl-c handling\n- POSIX TLV: use max value size of 2048, assert in store function if value size is larger\n\n\n## Release v1.4.1\n\n### Added\n- GAP: emit GAP_EVENT_PAIRING_STARTED and GAP_EVENT_PAIRING_COMPLETE\n\n### Fixed\n- GAP: store link key in hci connection struct to allow authenticate after pairing without bonding\n- GAP: avoid requesting authentication twice\n- GAP: cache own address on start advertising and connecting, provide getters\n- GAP: stop LE connecting if create connection fails (e.g. connectable adv active and multiple roles not supported)\n- SM: fix race condition between local address changes and pairing procedure\n- ATT DB: fix spelling `gatt_server_get_handle_range_for_service_with_uuid128`, `gatt_server_get_handle_range_for_service_with_uuid16`\n\n### Changed\n- HCI: update advertising data without stopping advertising first\n- GAP: Drop local bonding flag in IO Capability Reply if remote does not indicate bonding\n- GAP: return status for `gap_set_security_mode`\n- GAP: abort legacy pairing if Level 4 is required\n- GAP: abort SSP on IO Capabilities Request event if Level 4 is required but SC not supported by remote\n- GAP: abort SSP on User Confirmation Request event if Level 3 is required but MITM protection not possible\n- GAP: validate minimal service security level can be reached during pairing in responder role\n- L2CAP: don't trigger hci disconnect if l2cap security requirements are insufficient\n- CVE-2020-26555: reject connections to and from devices with same BD ADDR\n- CVE-2020-26555: ignore NULL link key\n- CVE-2020-26558: abort LE Secure Connection pairing if remote uses the same public key\n\n## Release v1.4\n\n### Added\n- HCI: `btstack_transport_sco.h` supports SCO over physical PCM/I2S interface (`HAVE_SCO_TRANSPORT`)\n- POSIX: `btstack_transport_sco_i2s_test_bridge.c` implements SCO transport interface for UART-to-I2S test bridge\n- btstack_uart: `btstack_uart_t` interface extends `btstack_uart_block_t`:\n  - support sending and receiving SLIP frames for HCI H5\n  - support odd parity\n  - `hci_transport_h4` and chipset drivers have new functions to provide `btstack_uart_t`\n- btstack_uart_slip_wrapper: wrapper that implements SLIP functionality for existing `btstack_uart_block` drivers.\n- hci_transport: add parity field and pass on to `btstack_uart_t` in h4 and h5\n- GATT Client: Battery Service Client \n- GATT Client: Device Information Service Client\n- GATT Client: HID-over-GATT (HOG) Client, Report and Boot Host\n- GATT Client: Scan Parameters Service Client \n- GATT Server: Scan Parameters Service Server\n- GAP: support scan page configuration with `gap_set_page_scan_activity` and `gap_set_page_scan_type`\n- GAP: support sniff subrating with `gap_sniff_subrating_configure`\n- GAP: support QoS setup with `gap_qos_set`\n- AVRCP: new field `button_pressed` in `AVRCP_SUBEVENT_OPERATION`\n- AVRCP: `AVRCP_SUBEVENT_OPERATION` emitted for button release\n- AVRCP Controller: `avrcp_controller_start_press_and_hold_cmd` supports arbitrary device buttons\n- AVRCP Controller: reassemble fragmented AVCTP packets\n- AVDTP: `avdtp_register_media_config_validator` allows to validate media codec configuration\n- A2DP Source: `ENABLE_A2DP_SOURCE_EXPLICIT_CONFIG` disables auto config. requires call to `a2dp_source_set_config_{CODEC}`\n\n### Fixed\n- GAP: calculate IO Cap AuthReq Bondable Mode based on `gap_ssp_set_authentication_requirement` and `gap_set_bondable_mode`\n- GAP: only store link key for SSP if remote side has set bondable in io cap auth requirements \n- GAP: allow to disable link supervision timeout\n- GAP: fix `gap_connect` after `gap_connect_cancel` \n- GAP: re-configure advertisements after power cycle\n- HCI: handle start inquiry failure\n- L2CAP: fix create outgoing connection triggered from packet handler on hci disconnect event\n- L2CAP: return unknown mandatory option in config response\n- AVDTP: fix spelling `avdtp_set_preferred_sampling_frequency`\n- AVRCP Target: fix notification changed event\n- HFP: Emit audio connection released on SLC Release, e.g. on remote power off\n- HFP HF: fix audio connection setup if codec negotiation is supported\n- HFP HF: only emit single event for RING and AG Status updates\n- HFP AG: fix audio connection setup for in-band ringtone on incoming connection\n\n### Changed\n- Port Archive: moved ports that are not recommended for new designs to port/archive folder:\n  - MSP430: the ports used the older community GCC version without 20-bit support needed for code size > 64kB\n  - Broadcom/Cypress H5: uploading PatchRAM is only possible in H4 mode. It's better to also use H4 in general\n  - PIC32-Harmony: the port used Harmony v1 while Harmony v3 has been out since a while\n  - iOS: not supported\n- Run Loop Base: functionality used in most platform run loop implementations\n  - code from `btstack_run_loop_base.c` moved into `btstack_run_loop.c` to minimize changes to build systems\n  - `btstack_run_loop_base.c` is a placeholder and can be removed from build\n- HCI Dump: replace monolithic `hci_dump.c` (with many #ifdefs) into dispatcher with platform-specific implementations:\n  - `posix/hci_dump_posix_fs` - writes binary log file\n  - `posix/hci_dump_stdout` - log to console using printf with local system time\n  - `embedded/hci_dump_embedded_stdout` - log to console using printf\n  - `embedded/hci_dump_segger_stdout` - log to RTT console using `SEGGER_printf`\n  - `embedded/hci_dump_segger_binary` - writes binary log over RTT to host\n- HCI: config I2S for BCM Controllers if `ENABLE_SCO_OVER_PCM`, reduce bit clock to 256/512 kHz\n- btstack_uart_posix: supports SLIP frames and replaces `btstack_uart_block_posix`\n- hci_transport_h5: more performant H5 implementation that requires `btstack_uart_t` driver with SLIP support\n- POSIX Ports: use new `btstack_uart_posix` implementation\n- posix-h5/posix-h5-bcm: use even parity for UART\n- HCI Transport: extract convenience function declaration for h4, h5, em9304_spi, and usb into separate hci_transport_{type}.h\n- GAP: provide Device ID from EIR in GAP_EVENT_INQUIRY_RESULT\n- GAP: only store link key if it allows requested security level\n- GAP: abort SSP pairing if MITM protection required but not possible\n- SM: start pairing as Central for already encrypted connection on Slave Security Request\n- GATT Client: Use ATT_READ_REQUEST for first blob of Read Long Characteristic and Read Long Characteristic Descriptor\n- GATT Server: Allow ATT Read Callback to return custom ATT Error Code\n- Nordic SPP Service Server: use `GATTSERVICE_SUBEVENT_SPP_SERVICE_CONNECTED` and `GATTSERVICE_SUBEVENT_SPP_SERVICE_CONNECTED`\n  events instead of callback, and `RFCOMM_DATA_PACKET` for received data\n- u-blox SPP Service Server: use `GATTSERVICE_SUBEVENT_SPP_SERVICE_CONNECTED` and `GATTSERVICE_SUBEVENT_SPP_SERVICE_CONNECTED`\n  events instead of callback, and `RFCOMM_DATA_PACKET` for received data\n- HID: Move `src/classic/hid.h` into `src` and prefix with `btstack_` to use it with BLE and avoid name clashes\n- HFP: provide acl_handle in events to identify connection\n- HSP AG: emit HSP_SUBEVENT_BUTTON_PRESSED instead of audio connection setup/release\n- Example: use `btstack_event.h` getters instead of direct array access, use enum to compare status codes\n\n\n## Release v1.3.2\n\n### Added\n- GAP: support for Classic Out-of-Band (OOB) pairing via `gap_ssp_remote_oob_data` with `ENABLE_CLASSIC_OOB_PAIRING`\n- GAP: read local OOB data on start and on call to `gap_ssp_generate_oob_data`, provided via `GAP_EVENT_LOCAL_OOB_DATA`\n- HID Host: add profile, update `hid_host_demo.c` example\n\n### Fixed\n- L2CAP: make handling of HCI disconnect more robust\n- AVDTP: emit stream release for active stream if signaling connection is closed first, e.g. caused by HCI disconnect\n- AVRCP: fix issue when Controller and Target send at the same time\n\n### Changed\n- A2DP, AVDTP: use `a2dp_source_set_config_{TYPE}` and `avdtp_config{TYPE}_store` to avoid large number of parameters\n\n\n## Release v1.3\n\n### Added\n- CC256x: with ENABLE_CC256X_ASSISTED_HFP, HFP enables WBS codec on demand and configures PCM/I2S interface for 8kH/16kHz\n- BCM: with ENABLE_BCM_PCM_WBS, HFP enables WBS codec on demand and configures PCM/I2S interface for 8kH/16kHz\n- SDP Client RFCOMM: add `sdp_client_query_rfcomm_channel_and_name_for_service_class_uuid`\n- HFP: `ENABLE_HFP_AT_MESSAGES` lets HFP emit  `HFP_SUBEVENT_AT_MESSAGE_SENT` and `HFP_SUBEVENT_AT_MESSAGE_RECEIVED`\n- A2DP, AVDTP: provide capabilities and configuration events for A2DP codecs: SBC, MPEG Audio, MPEG AAC, ATRAC\n- A2DP + AVDTP Source: allow to send media packet with `avdtp_source_stream_send_media_packet` and `a2dp_source_stream_send_media_packet`\n- A2DP + AVDTP Source: add `avdtp_source_stream_send_media_payload_rtp` and `a2dp_source_stream_send_media_payload_rtp`\n- A2DP Source: emit `A2DP_SUBEVENT_SIGNALING_CAPABILITIES_COMPLETE`\n- A2DP Source: allow to configure endpoints by calling `a2dp_source_set_config_{TYPE}` during SEP discovery with SBC fallback\n\n### Fixed\n- HCI: keep `le connecting request` on connection complete active, fixes gap_auto_connection_stop() + gap_auto_connection_start()\n- L2CAP: fix packet size check for incoming classic basic channels (regression introduced in v1.2.1)\n- HFP AG/HSP AG: avoid connecting to remote service with same role\n- A2DP Source: support multiple Stream Endpoints with different Media Codec types\n- A2DP Source: emit codec configure event with reconfigure flag set on reconfigure\n- GATT Compiler: support multiple instances of the same service\n\n### Changed\n- GAP: provide Link Type parameter to incoming connection filter for `gap_register_classic_connection_filter`\n- HFP/GOEP Client/AVDTP/A2DP: return `SDP_SERVICE_NOT_FOUND` if no suitable SDP record is found\n- AVDTP Source: `avdtp_source_stream_send_media_payload` includes SBC Header and was deprecated\n- AVDTP/A2DP: use `avdtp_channel_mode_t` in `A2DP_SUBEVENT_SIGNALING_MEDIA_CODEC_SBC_CONFIGURATION`\n- A2DP: fix events and use `a2dp_cid`, `local_seid,` `remote_seid` field names in A2DP sub-events\n- GATT Client: Skip MTU exchange after MTU exchange on ATT Server\n- Ports: STM32-F103RB Nucleo + CC256x port removed\n- ESP32: enabled HFP Wide-Band Speech, disable classic secure connections in HSP/HFP demos\n\n\n## Release v1.2.1\n\n### Fixed\n- L2CAP: use connection handle for channel lookups\n- L2CAP: forward data only in open state\n\n### Changed\n- L2CAP: check packet size against local mtu for classic basic channels\n\n\n## Release v1.2\n\n### Fixed\n- L2CAP: trigger pairing for outgoing LE Data Channels if security level insufficient\n- SM: fix update of sc flag for re-encrypted connection in peripheral role\n- SM: send security request on re-connect if bonded and `ENABLE_LE_PROACTIVE_AUTHENTICATION` is defined\n- ESP32: fix audio sink driver\n\n### Added\n- GAP: `gap_delete_bonding` removes device from LE Resolving List and from discards LE bonding information\n- GATT Client: delete bonding information if re-encryption fails and `ENABLE_LE_PROACTIVE_AUTHENTICATION` is not defined\n- GATT Client: gatt_client_set_required_security_level() allows to set required minimum security level for all GATT requests\n- SM: emit events for re-encryption started/complete when bonding information is available\n\n### Changed\n- AVRCP Controller: allow to send multiple absolute volume commands without waiting for response. \n- GAP: replaced `ENABLE_LE_CENTRAL_AUTO_ENCRYPION` with `ENABLE_LE_PROACTIVE_AUTHENTICATION`\n\n\n## Changes October 2020\n\n### Fixed\n- AVDTP Initiator: avoid use of remote seid for stream endpoint lookup, fixes issue with two connected devices \n- AVDTP Source: buffer for SBC media codec information got discarded, leading to invalid Set Configuration command in second connection\n- SM: only trigger Cross-Transport Key Derivation (CTKD) when bonding is enabled\n- SM: set LinkKey flag to request CTKD if enabled\n- SM: store CTKD key with Public Identity Address\n- SM: only allow CTKD to overwrite existing link key if derived key has same or higher authentication\n- SM: start SMP Timeout when sending Security Request\n- HFP HF: fix response to AG Codec Selection while waiting for OK of parallel command\n- HCI: fix reject of LE remote connection param request via HCI\n\n### Added\n- GAP: add `gap_get_link_key_for_bd_addr`\n- GAP: add `gap_bonded` to check if bonding information is available for active connection\n- SM: support h7 for CTKD\n\n### Changed\n- SM: Cross-Transport Key Derivation requires `ENABLE_CROSS_TRANSPORT_KEY_DERIVATION` now\n- SM: block connection if encryption fails for bonded devices as Central\n- SM: support pairing as Central after failed re-encryption\n\n\n## Release v1.1\n\n### Fixed\n- AVRCP/AVCTP: report AVRCP 1.6 and AVCTP 1.4 in SDP record\n\n### Added\n\n### Changed\n\n\n## Changes September 2020\n\n### Fixed\n- HFP: fix parsing of ranges e.g. in +CIND responses\n- AVDTP, AVRCP: fix bugs due to transaction id overrun\n- A2DP Source: fix issues with stream configuration by sink\n- hci_dump: fix tv_us calculation for non-posix / embedded systems with binary output\n\n### Added\n- `btstack_ring_buffer`: add `btstack_ring_buffer_reset` to reset it to initial state/empty\n- GAP: Support for address resolution of resolvable private addresses by Controller with `ENABLE_LE_PRIVACY_ADDRESS_RESOLUTION`\n\n### Changed\n- AVDTP, AVRCP, HSP: schedule SDP query, avoids avoids 'command disallowed' if SDP client is busy\n- HSP, HFP: allow to configure usable SCO packet types\n- cc256x: update CC256xC init script to v1.4\n- A2DP Source: use Get All Capabilities if supported by remote get Delay Reporting capability\n\n## Changes August 2020\n\n### Fixed\n- ESP32: fix authentication for incoming Secure Connections\n- AVDTP: Fix forwarding of Delay reports\n- STM32-F4Discovery: fix pan_lwip_http_server by increasing HCI_ACL_PAYLOAD_SIZE\n- tool/create_packet_log: basic support for 16-bit Unicode log files from Windows\n \n### Added\n- `btstack_run_loop_base`: added `btstack_run_loop_base_dump_timer`\n- GAP: request role change for classic connection via `gap_request_role`\n- GAP: LE Whitelist API with `gap_le_whitelist_x` with x = add, remove, clear and new `gap_connect_with_whitelist`\n- SDP Client: add sdp_client_register_query_callback() allows to register query request instead of polling sdp_client_ready()\n- BNEP lwIP: add `bnep_lwip_connect` to establish BNEP connection and manage lwIP network interface\n- New `btstack_linked_queue` utility, a linked list-based queue with first-in-first-out semantics and constant time enqueue/dequeue operations\n- btstack_tlv_posix: add `btstack_tlv_posix_deinit`\n- New `btpclient` for use with [auto-pts project](https://github.com/intel/auto-pts)\n\n### Changed\n- GAP: treat AES-CCM encrypted connection as mutually authenticated (BIAS)\n- GAP: 'gap_auto_connect_x' API deprecated. Please directly manage LE Whitelist with `gap_le_whitelist_*` functions and call `gap_connect_with_whitelist` instead\n- example/hid_host_demo: try to become master for incoming connections\n- btstack_run_loop: use btstack_assert instead of local while(true)\n- att_db_util: allow to reset att_db via `att_db_util_init`\n\n## Changes July 2020\n\n### Fixed\n- AVDTP: fix invalid response for Get Capabilities request if Delay Reporting was supported\n- AVDTP: handle concurrent signaling establishment with reject and retry\n\n### Added\n- example/hid_host_demo: support reconnect from HID device\n- Crypto: support software AES128 for AES-CCM operations\n- AVRCP: introduced AVRCP_FEATURE_MASK_* as alternative to avrcp_controller_supported_feature_t and avrcp_target_supported_feature_t enums\n- btstack_audio: add set_volume() to sink and set_gain() to source interfaces, minimal volume control for portaudio playback\n- AVDTP: renamed definition of supported features from AVDTP_SOURCE_SF_ and AVDTP_SINK_SF_ to AVDTP_SOURCE_FEATURE_MASK_ and AVDTP_SINK_FEATURE_MASK_ respectively\n- GAP: Provide gap_get_role to query master/slave role for HCI connection handle\n- GAP: Provide gap_pin_code_response_binary to use binary data as PIN, e.g. for pairing with Nintendo Wii Remote\n\n### Changed\n- GAP: set minimum required encryption key size for Classic connections back from 16 to 7, matching the Core spec\n\n\n## Changes June 2020\n\n### Fixed\n- HFP: Fix parsing of empty fields, e.g. phone number in +CLCC and other AT commands\n- SM: Fix validation of confirm value for secure connection Passkey entry\n- AVRCP: handle concurrent signaling establishment with reject and retry\n\n### Added\n- GAP: Detect Secure Connection -> Legacy Connection Downgrade Attack by remote features and actual encryption type (BIAS) \n- GAP: Mutual authentication: request authentication after Classic connection got encrypted (BIAS)\n- Windows port for Dialog DA14585 connected via serial port\n\n## Changes\n- CVSD PLC: treat zero frames as good and allow to mark data as bad, e.g. if reported by Controller as erroneous\n\n## Changes May 2020\n\n### Fixed\n- hfp_hf, hsp_hs: use eSCO params in accept sco connection only for incoming eSCO connections\n- pbap_client: fix PBAP UUID len on connect message\n- SM: fix secure connection pairing as peripheral when local user confirmation happens after remote one\n- A2DP Source: only connect to remote sink stream endpoints\n- btstack_hal_flash_memory: fix write of 0xff bytes to simulated flash\n- hsp_hs: fix disconnect if audio not connected\n- hsp_ag: fix accept incoming connection\n\n### Added\n- example/le_mitm: MITM implementation that forwards ATT PDUs and allows for pairing\n- GAP: gap_set_security_level sets required security level for incoming and outgoing connections\n- cc256x: allow to specify power vector for each modulation type\n- FreeRTOS: btstack_run_loop_freertos_trigger_exit allows to request run loop exit\n- SM: support LE Secure Connections Only mode with sm_set_secure_connections_only_mode\n- GAP: enable BR/EDR Secure Connections if supported, add gap_secure_connections_enable\n\n### Changed\n- L2CAP ERTM: send extended features request only once per HCI connection\n\n\n## Changes April 2020\n\n### Fixed\n- hog_mouse_demo/hog_keyboard_demo: handle set protocol mode = boot protocol mode\n- HCI: only update BD_ADDR placeholder in shortened and complete name in EIR data, limit device name to 240/248 bytes\n\n### Added\n- GAP: gap_set_allow_role_switch allows to prevent role switch in outgoing classic ACL connections\n- example: hog_boot_host_demo implements an HID-over-GATT Boot Host that supports keyboard and mouse\n- HCI: add ENABLE_LE_LIMIT_ACL_FRAGMENT_BY_MAX_OCTETS that forces fragmentation of ACL-LE packets to fit into over-the-air packet\n\n### Changed\n- Broadcom/Cypress: wait 300 ms after PatchRAM update in hci.c to assert Controller is ready\n- esp32: provide esp-idf/component/btstack/btstack_port_esp32.c and only minimal app_main in template/main/main.c\n- att_db: skip att_read_callback for ATT Read Blob Request if offset == value_len\n\n\n## Changes March 2020\n\n### Fixed\n- GAP: fixed gap_set_scan_parameters() if issued right before gap_start_scan() \n- HCI: only send HCI Read Local Encryption Key Size if supported by Controller\n\n### Added\n- GATT Client: allow to register for any notification/indication and/or any connection\n- HCI: added hci_read_inquiry_scan_activity and hci_write_inquiry_scan_activity commands\n- chipset: assert hci packet buffers are suitable for firmware upload or patches (atwilc3000,bcm,cc256x,intel)\n- btstack_util: added btstack_replace_bd_addr_placeholder\n\n### Changed\n- AVRCP Target: volume in avrcp_target_volume_changed is reported as current value in interim response to register for volume change notifications\n- SDP Client: query attributes 0x0000..0xffff instead of 0x0001..0xffff to match other stacks / improve compatibility with bad sdp server implementations\n\n\n## Changes Februar 2020\n\n### Fixed\n- AVRCP Target: fix reporting of PLAYBACK_STATUS_CHANGED\n- HCI: handle reconnect request for Classic and LE connections triggered by packet handler for Disconnection Complete Event\n\n### Changed\n- hid_host_mode: allow sniff mode\n\n### Added\n- port/qt-usb and port/qt-h4: integrate BTstack Qt run loop for Unix- and Win32-based Qt application connected to Bluetooth module via H4 over serial port or USB\n\n\n## Changes January 2020\n\n### Fixed\n- L2CAP ERTM: avoid read-after-free on decline of incoming connection\n- GATT Client: set uuid16 to zero when deserializing uuid128 services, characteristics, and descriptors\n- att_db_util: fix realloc of att db buffer for large attributes\n- btstack_tlv_posix: only keep last value in memory, fix delete operation\n- l2cap_signaling: use packet boundary flags 0x00 for LE signaling packets (ignoring hci_non_flushable_packet_boundary_flag_supported())\n\n### Added\n- att_db_util: provide GATT Database Hash via att_db_util_hash_calc\n- GATT Compiler: provide GATT Database Hash via GATT_DATABASE_HASH Characteristic\n- ATT Server: validate request pdu length\n\n### Changed\n- Crypto: update AES-CMAC implementation to access all message bytes sequentially\n\n\n## Changes December 2019\n\n### Fixed\n- example/pan_lwip_http_server: use Network Access Point, CoD\n- sm: emit pairing complete in master role when no keys are distributed / bonding disabled\n\n### Added\n\n### Changed\n- Updated CC256x initscript: CC256xC v1.3\n- ESP32: add CMake project files\n\n\n## Changes November 2019\n\n### Fixed\n- AVDTP Source: return correct `avdtp_cid` and `local_seid` in `AVDTP_SUBEVENT_STREAMING_CAN_SEND_MEDIA_PACKET_NOW`\n- L2CAP: send LE Data Channel SDUs round robin with other data\n- L2CAP ERTM: send ERTM I-frames round robin with other data\n\n### Added\n- ATT Server: return error if request to send now for Notification or Indication already registered\n- Linked List: return if item was added for `btstack_linked_list_add[_tail]`\n- btstack_run_loop_remove: return bool true if timer/data source was removed\n- segger-rtt: allow to configure with `SEGGER_RTT_PACKETLOG_*` directives, update to v6.54\n- GAP: support setting Link Supervision Timetout for outgoing Classic connections using `gap_set_link_supervision_timeout`\n- lwip: add download test files to http server demo\n\n### Changed\n- Linked List: return bool true if item was removed\n\n\n## Changes October 2019\n\n### Fixed\n\n### Added\n- `btstack_bool.h`: provide boolean type 'bool' via `<stdbool.h>` or as backport\n- provide `btstack_assert(condition)`\n- H4 Transport: avoid calling `hci_transport_h4_trigger_next_read` when transport is closed\n\n### Changed\n- libusb and posix ports: store bonding information in TLV\n\n\n## Changes September 2019\n\n### Fixed\n- L2CAP ERTM: assert that packet can be stored in fragment buffers in ertm\n- L2CAP ERTM: reject incoming connection if ERTM is configured as mandatory but not supported by remote\n- GATT Client: allow Write Without Response independent of other requests\n\n### Added\n- GAP: allow to reject GAP classic connection via gap_register_classic_connection_filter\n- GAP: support reading RSSI for Classic+LE using gap_read_rssi. Emits `GAP_EVENT_RSSI_MEASUREMENT`\n\n### Changed\n- Bluetooth and BTstack Error Codes and Events: collect status codes in bluetooth.h and events in btstack_defines.h\n- bluetooth.h: extract internal defintitions to respective protocol layers\n- Updated CC256x initscripts (CC256xB v1.8, CC256xC v1.2, CC256xC v1.2)\n\n\n## Changes August 2019\n\n### Fixed\n- POSIX, WICED, Windows, FreeRTOS run loops: handle time_ms overrun after 49 days\n- RFCOMM: accept incoming L2CAP connection in Basic mode if ERTM is enabled but not requested for this connection\n- RFCOMM: limit RFCOMM MTU by local L2CAP MTU for outgoing connections (only revelvant for ERTM)\n- L2CAP ERTM: stop timers on disconnect\n- L2CAP ERTM: fix sending of segmented SDUs\n- L2CAP ERTM: handle unsupported Information Response\n- SM: generate local nonce for confirm value in JW+NC+PK in Secure Connections Responder role\n\n### Added\n- `btstack_run_loop_base`: portable implementation of timer and data source management as base for platform specific implementations\n\n## Changed\n- FreeRTOS: use xQueueCreateStatic (static variant of xQueueCreate) if available for static memory-only setups\n- L2CAP ERTM: handle invalid Information Response (assume no extended features supported)\n- POSIX: use monotonic clock as timebase if available\n- HCI Transport H4/H5/EM9304 SPI: ignore block read/sent from UART driver when closed\n- HCI: Read Encryption Key Size after encryption was enabled\n- Errata 11838:\n  - GAP: gap_set_required_encryption_key_size allows to set the required key size, default = 16 (max)\n  - GAP: validate encryption key size to emit GAP Security Levels\n\n## Changes July 2019\n\n### Fixed\n- SM: Fixed regression introduced in f3582630\n- L2CAP: avoid reading l2cap signaling command len out of bounds\n- HCI Transport H4/H5/EM9304 SPI: fix payload size checks (also for 8/16-bit platforms)\n\n### Changed\n- SM: Start encryption upon receiving slave securiy request if bonded\n- hci: use 2 as HCI_INCOMING_PRE_BUFFER_SIZE in LE-only configuration for GATT Client\n\n---\n\n## Changes June 2019\n\n### Changed\n- FreeRTOS: use freertos/.. prefix to include FreeRTOS headers if HAVE_FREERTOS_INCLUDE_PREFIX is defined\n- BNEP: add Connection Handle to BNEP_EVENT_CHANNEL_OPENED\n- Examples: renamed le_counter to gatt_counter and le_streamer to le_streamer_server to indicate support for GATT over BR/EDR\n\n### Fixed\n- BNEP: Bluetooth address is stored in little-endian format for all BNEP_EVENT_*\n- libusb: avoid use-after-free for SCO packets on disconnect\n\n### Added\n- example: pan_lwip_http_server using lwIP as network stack to implement PAN NAP service\n- platform/lwip/bnep_lwip.c: BNEP lwIP adapter that forwards packets between BNEP service and lwIP\n- ENABLE_GATT_OVER_CLASSIC enables support for GATT over BR/EDR in att_server\n\n---\n\n## Changes May 2019\n\n### Changed\n- ESP32: Configure SCO over HCI after power up\n- btstack_tlv_flash_bank: support targets where a value cannot be overwritten with zero. When ENABLE_TLV_FLASH_EXPLICIT_DELETE_FIELD\n  is defined, an explicit delete field is used to indicate an invalid entry.\n\n### Fixed\n- SM: Avoid potential use-after-free on immediate disconnect (lookup connection via con handle instead of storing pointer)\n\n### Added\n- gatt_client: emit query complete event for signed write operation\n- hci_transport_h4: add workaround for flow control bug in CYW2070x, enable with ENABLE_CYPRESS_BAUDRATE_CHANGE_FLOWCONTROL_BUG_WORKAROUND \n\n---\n\n## Changes April 2019\n\n### Changed\n- ESP32: use micro-ecc from 3rd-party as esp-idf removed it in their 3.3 release\n\n### Fixed\n- hci: pad LE Scan response with zeroes\n- SM: store local CSRK\n- ATT DB: call write callback for validated signed writes\n- ATT Server: abort signed write validation on incoming new request\n- Bluetooth SIG web scraping tools updated\n- libusb: compiles for FreeBSD\n\n### Added\n\n---\n\n## Changes March 2019\n\n### Changed\n- use Makefile for stm32-f4discovery-cc256x port\n- le_device_db: add secure_connection argument to le_device_db_encryption_set and le_device_db_encryption_get\n\n### Fixed\n- SM: Use provided authentication requirements in slave security request\n\n### Added\n- port/stm32-f4discovery-cc256x: add support for built-in MEMS microphone\n- SM: Track if connection encryption is based on LE Secure Connection pairing\n- ATT DB: Validate if connection encrypted is based on SC if requested \n- att_db_util: support ATT_SECURITY_AUTHENTICATED_SC permission flag\n- GATT Compiler: support READ_AUTHENTICATED and WRITE_AUTHENTICATED permsission flags\n- ESP32: erase nvs flash is newer nvs version found\n- libusb: add support for nRF52840-PCA10056 running Zephyr hci_usb example\n- port/stm32-l073rz-nucleo-em9304 for Nucleo L073RZ with EM9304 DVK, replaces port/stm32-l053r8-nucleo-em9304\n\n## Changes February 2019\n\n### Changed\n- example/a2dp_sink_demo: use linear resampling to fix sample rate drift\n- btstack_audio: split interface into sink and source\n\n### Fixed\n- Crypto: fix lockup when stack is shutdown while waiting for result of HCI Command, e.g. LE Read Local P256 Public Key\n- SM: Avoid SM_EVENT_PAIRING_COMPLETE with ERROR_CODE_REMOTE_USER_TERMINATED_CONNECTION after successful pairing in responder role\n\n### Added\n- example/a2dp_sink_demo: add target role, support volume control on both devices\n- example/audio_duplex: playback audio audio source on audio sink (test audio path)\n- btstack_audio_embedded: implement audio source path\n\n---\n\n## Changes January 2019\n\n### Changed\n- L2CAP: provide channel mode (basic/ertm) and fcs option in L2CAP_EVENT_CHANNEL_OPENED \n- RFCOMM: support L2CAP ERTM. Callbacks passed to rfcomm_enable_l2cap_ertm() are used to manage ERTM buffers\n\n### Added\n- L2CAP: emit L2CAP_EVENT_ERTM_BUFFER_RELEASED if ERTM buffer not needed/used anymore\n- L2CAP: add fcs_option to ERTM config l2cap_ertm_config_t\n- HCI: validate advertisement data length field when generating GAP_EVENT_ADVERTISING_REPORT\n- ad_parser: validate data element length fields in ad_iterator_has_more\n- Raspberry Pi 3 A+/B+ port in port/raspi, starts without power cycle\n\n### Fixed\n- HCI: release outgoing buffer on disconnect if waiting to send another ACL fragment\n- POSIX: use correct baudrate enums for baud rates higher than 921600 (Linux)\n- Crypto: directly process queued crypto operation on HCI result\n\n---\n\n## Changes December 2018\n\n### Added\n- SM: generate and store ER / IR keys in TLV, unless manually set by application\n- hci_dump: support PacketLogger or BlueZ format output via SEGGER RTT Channel 1 Up\n\n### Fixed\n- SM: fix internal buffer overrun during random address generation\n\n## Changes November 2018\n\n### Added\n- GAP: gap_le_connection_interval provides connection interval for conn handle\n- Nordic SPP Service Server: GATT service that emulates a serial port over BLE based on Nordic Semiconductor documentation.\n- uBlox  SPP Service Server: GATT service that emulates a serial port over BLE based on uBlox documentation.\n- SM: ENABLE_LE_CENTRAL_AUTO_ENCRYPTION triggers automatic encryption on connect to bonded devices\n- SM: generate and store ER / IR keys in TLV, unless manually set by application\n\n### Fixed\n- SM: prevent random address updates if gap_random_address_set was used\n- SM: fix internal buffer overrun that can cause storing of bonding information to fail\n- SM: ignore Slave Security Request after sending own Pairing Request\n- L2CAP: fix use after free on disconnect if ERTM is enabled\n- HFP: Handle multiple commands/responses in single RFCOMM packet\n- Memory Pools: clear all buffers before use\n\n---\n\n## Changes October 2018\n\n### Added\n- SDP Server: queue incoming connections when already connected instead of rejecting them\n- GAP: Support enter/exit sniff mode via gap_sniff_mode_enter/exit. gap_set_default_link_policy_settings is needed to enable sniff mode in general.\n- HIDS Device: GATT service that exposes HID reports intended for HID Devices, like keyboard and mouse.\n\n### Fixed\n- HCI: fix bug in gap_inquiry_stop that triggered additional GAP_EVENT_INQUIRY_COMPLETE instead of stopping the inquiry\n- L2CAP: fix issue with outgoing connection before read remote supported complete when other channels exist\n- L2CAP ERTM: allow SDU of szie MPS in first packet that contains L2CAP SDU Length\n- L2CAP ERTM: fix memory corruption triggered if local_mtu > mps\n- L2CAP ERTM: fix outgoing fragment management\n- HFP: decline incoming RFCOMM connection after outgoing connection was started\n- AVRCP: fix crash on disconnect of connection established by remote\n\n---\n\n## Changes September 2018\n\n### Fixed\n- HCI: Error creating outgoing connection (e.g. Connection Limit Exceeded) now handled\n- L2CAP: Error creating outgoing connection (e.g. Connection Limit Exceeded) now handled\n- L2CAP: Evaluate 'can send now' on HCI Disconnect as ACL buffers in Bluetooth Controller have been used for the closed connection are freed implicitly\n- L2CAP: Check can send now before sending extended information requeste needed for ERTM mode\n- L2CAP: Use valid signaling identifier for L2CAP Connection Parameter Update Request\n- RFCOMM: Trigger l2cap request to send on rfcomm credits when client is waiting to sendtrigger l2cap request to send on rfcomm credits when client is waiting to send\n- RFCOMM: Avoid use-after-free on channel finalize\n- GATT Client: stop timer on disconnect - fixes use after free / crash\n\n### Added\n- A2DP Source: Support stream reconfiguration (a2dp_source_reconfigure_stream_sampling_frequency)\n- 3rd-party: yxml is used for PBAP vCard list parsing\n- cc256xC: new v1.1 init scripts\n\n---\n\n## Changes August 2018\n\n### Added\n- PBAP: added pbap_get_phonebook_size() to get phonebook entry count\n\n### Fixed\n- GATT Server: Allow enable Notifications/Indication with Write Command. Fixes issue with some Android devices.\n- SM: fix pairing for Secure Connections with Bonding if remote sends additional keys\n- SM: drop LTK flag from Pairing Response for Secure Connections\n- L2CAP: fix emitted L2CAP_EVENT_CONNECTION_PARAMETER_UPDATE_REQUEST\n\n## Changes June 2018\n\n### Added\n- btstack_audio.h: application level API for audio playback and recording\n- embedded/hal_audio.h: low-level API for audio playback and recording\n- HID Device: hid_device_connect(..) function\n- ESP32: implement hal_audio\n- DA14585: support for Dialog Semiconductor DA14585 LE-only controller\n- Raspberry Pi 3 + Raspberry Pi Zero W port in port/raspi\n\n### Changed\n- Errata 10734:\n  - SM: Generate new EC Public Keypair after each pairing\n  - SM: Abort failure with DHKEY_CHECK_FAILED if received public key is invalid (instead of unspecified error)\n- btstack.h: only include classic headers if ENABLE_CLASSIC is defined\n- windows: ignore virtual Bluetooth adapter provided by VMware\n- Replaced HCI_PACKET_BUFFER_SIZE with HCI_INCOMING_PACKET_BUFFER_SIZE and HCI_OUTGOING_PACKET_BUFFER_SIZE\n\n---\n\n## Changes June 2018\n\n### Fixed\n- HFP: Fix Wide Band Speech bit in SDP record for both HF/AG. Missing bit prevents macOS from using mSBC\n- ATT Server: send ATT_EVENT_HANDLE_VALUE_INDICATION_COMPLETE with status ATT_HANDLE_VALUE_INDICATION_DISCONNECT on disconnect\n- AVRCP Controller: fix parsing of now playing info\n\n### Changed\n- ATT Server: ATT_HANDLE_VALUE_INDICATION_DISCONNECT is delivered to service handler if registered\n\n### Added\n- ATT Server: packet handler field added to att_service_handler_t to receive: connect/disconnect, atu exchange, indication complete\n\n---\n\n## Changes May 2018\n\n### Added\n- GAP: re-encrypt outgoing connection if bonded\n- ATT Server: wait until re-encryption is complete\n- GATT Client: wait until re-encryption is complete\n- ATT Server: added att_server_request_to_send_notification and att_server_request_to_send_indication\n- GATT Client: if ENABLE_GATT_CLIENT_PAIRING, GATT Client starts pairing and retry operation on security error\n\n### Changed\n- ATT Server: att_server_register_can_send_now_callback is deprecated, use att_server_request_to_send_notification/indication instead\n\n### Fixed\n- SM: Fix LE Secure Connection pairing in Central role\n- le_device_db_tlv: fix seq nr management\n- SM: improve le_device_db lookup and storing of IRK\n- GATT Server: fix lookup for Client Characteristic Configuration in services with multiple Characteristics\n- RFCOMM: emit channel closed on HCI/L2CAP disconnect after sending DISC while expecting UA\n\n---\n\n## Changes April 2018\n\n### Added\n- Crypto: btstack_crypo.h provides cryptographic functions for random data generation, AES128, EEC, CBC-MAC (Mesh)\n- SM: support pairing using Out-of-Band (OOB) data with LE Secure Connections\n- Embedded: support btstack_stdin via SEGGER RTT\n\n### Changed\n- att_db_util: added security requirement arguments to characteristic creators\n- SM: use btstack_crypto for cryptographpic functions\n- GAP: security level for Classic protocols (asides SDP) raised to 2 (encryption)\n\n### Fixed\n- HFP: fix answer call command\n- HCI: fix buffer overrun in gap_inquiry_explode\n- SDP: free service record item on sdp_unregister_service\n\n## Changes March 2018\n\n### Added\n- GAP: allow to limit number of connections in LE Peripheral role with gap_set_max_number_peripheral_connections\n- ATT Server: support for delayed ATT read response, see example/att_delayed_read_response.c\n- ATT Server: allow to specify security requirements seperately for read/writes. .h files need to be regenerated\n\n### Fixed\n- RFCOMM: fix infinite loop on L2CAP connection error (regression from 4c3eeed1)\n- HSP HS: accept incomming SCO connection\n- SM: fix iteration over LE Device DB entries for bonding and address resolving\n- SM: store pairing information only if both devices have requested bonding\n\n---\n\n## Changes February 2018\n\n### Added\n- GATT Client: gatt_client_request_can_write_without_response_event() causes GATT_EVENT_CAN_WRITE_WITHOUT_RESPONSE\n- SM: new event SM_EVENT_PAIRING_COMPLETE\n- GAP: support iteration over stored Classic link keys: gap_link_key_iterator_init, gap_link_key_iterator_get_next, gap_link_key_iterator_done\n- GAP: add gap_delete_all_link_keys\n\n### Changed\n- GATT Client: round robin for multiple connections\n- ATT Dispatch: round robin for ATT Server & GATT Client\n- L2CAP: round robin for all L2CAP channels (fixed and dynamic)\n- btstack_link_key_db: addition functions for link key iteration\n- GAP: LE scanning enabled not reset on HCI Reset -> can be enabled before HCI Power Up\n- CSR: set all keys in psram instead of default\n\n### Fixed\n- tc3556x: fix startup after baud rate change\n\n---\n\n## Changes January 2018\n\n### Added\n- Port for Windows with Zephyr HCI Firmware connected via serial port\n- em9304: upload patch containers during HCI bootup\n- Makefile for STM32-F4Discovery port\n- support for console out via SEGGER RTT\n- LE Data Channels example in BTstack and [iOS example on GitHub](https://github.com/bluekitchen/CBL2CAPChannel-Demo)\n- LE Streamer Client can send as fast as possbile as well\n- L2CAP: option to limit ATT MTU via l2cap_set_max_le_mtu\n\n### Changed\n- HCI: allow to set hci_set_master_slave_policy (0: try to become master, 1: accept slave)\n- GAP: gap_set_connection_parameters includes scan interval and window params\n- GATT Client: GATT_EVENT_MTU indicates max MTU\n- ATT DB Util: attribute handle is returned for new Services and Characteristics\n\n### Fixed\n- Windows: retry serial port operations if not all bytes have been read/written\n- HFP: avoid buffer overflows setting up messages\n- SBC Decoder: improved error handling for invalid SBC audio data\n- GAP: fix Connection Parameter Response in Central role\n- ATT DB Util: update pointer to database in case of realloc\n- GATT Client: set UUID16 field if 16-bit UUID is stored as UUID128\n- GAP: release HCI Connnection after gap_le_conne\n- ATT: Exchanged MTU is propagate to ATT Server and GATT Client\n\n---\n\n## Changes December 2017\n\n### Added\n- Introduced btstack_network.h network interface abstraction\n- btstack_network_posix implementation using Linux tun/tap interface\n- WICED: support for btstack_stdin (HAVE_STDIN)\n- GATT Server: Writes to GATT Client Characteristic Configuration are stored in TLV and restored on reconnect. The db.h file generated from db.gatt needs to be re-created.\n- TLV: global TLV instance available via btstack_tlv_get_instance() (src/btstack_tlv.h)\n- TLV: POSIX implementation that appends to a file on disk (platform/posix/btstack_tlv_posix.c\n- LE Device DB TLV: overwrite oldest entry if no free entries available \n- SM: allow to set fixed passkey in display role using sm_use_fixed_passkey_in_display_role\n- Example/hid_host_demo with HID parser and support for basic US keyboard layout\n- EM9304: custom HCI Transport implementation for EM9304 on top of btstack_em9304_spi.h platform abstraction only requires hal_em9304_spi.h to be implemented for new ports\n- Port for Apollo2 MCU with EM9304 (ports/apollo2-em9304)\n\n### Changed\n- panu_demo: uses btstack_network.h now\n- WICED: configure printf to replace Linefeed with CRLF\n- SBC: split btstack_sbc_bludroid.c into seperate encoder and decoder implementations\n\n### Fixed\n- RFCOMM: support connection requests during connection failure \n- L2CAP: support connection requests during connection failure \n- L2CAP: fix default remote MTU as 672 instead of 48 (Minimal MTU)\n- HCI: avoid double free during halting\n- SM: fixed reconnect using legacy pairing in slave role\n\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.6806640625,
          "content": "\nCopyright (C) 2009 BlueKitchen GmbH\nAll rights reserved \n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holders nor the names of\n   contributors may be used to endorse or promote products derived\n   from this software without specific prior written permission.\n\n4. Any redistribution, use, or modification is done solely for\n   personal benefit and not for any commercial purpose or for\n   monetary gain.\n\nTHIS SOFTWARE IS PROVIDED BY BLUEKITCHEN GMBH AND CONTRIBUTORS\n``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\nFOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BLUEKITCHEN \nGMBH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS\nOF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED\nAND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\nTHE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\nPlease inquire about commercial licensing options at \ncontact@bluekitchen-gmbh.com\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 27.763671875,
          "content": "# Welcome to BTstack\n\nBTstack is [BlueKitchen's](https://bluekitchen-gmbh.com) implementation of the official Bluetooth stack.\nIt is well suited for small, resource-constraint devices\nsuch as 8 or 16 bit embedded systems as it is highly configurable and comes with an ultra small memory footprint.\n\nTargeting a variety of platforms is as simple as providing the necessary UART, CPU, and CLOCK implementations. BTstack is currently capable of connecting to Bluetooth-modules via: (H2) HCI USB, (H4) HCI UART + TI's eHCILL, and (H5) HCI Three-Wire UART.\n\nOn smaller embedded systems, a minimal run loop implementation allows to use BTstack without a Real Time OS (RTOS).\nIf a RTOS is already provided, BTstack can be integrated and run as a single thread.\n\nOn larger systems, BTstack provides a server that connects to a Bluetooth module.\nMultiple applications can communicate with this server over different inter-process communication methods. As sockets are used for client/server communication, it's easy to interact via higher-level level languages, e.g. there's already a Java binding for use in desktop environments.\n\nBTstack supports the Central and the Peripheral Role of Bluetooth 5 Low Energy specification incl. LE Secure Connections, LE Data Channels, and LE Data Length Extension. It can be configured to run as either single-mode stack or a dual-mode stack.\n\nBTstack is free for non-commercial use. However, for commercial use, <a href=\"mailto:contact@bluekitchen-gmbh.com\">tell us</a> a bit about your project to get a quote.\n\n**Documentation:** [HTML](https://bluekitchen-gmbh.com/btstack/), [PDF](https://bluekitchen-gmbh.com/btstack.pdf)\n\n**Third-party libraries (FOSS):** [List of used libraries and their licenses](https://github.com/bluekitchen/btstack/blob/master/3rd-party/README.md)\n\n**Discussion and Community Support:** [BTstack Google Group](https://groups.google.com/group/btstack-dev)\n\n\n### Supported Protocols and Profiles\n\n**Protocols:** L2CAP (incl. Enhanced Retransmission Mode, LE Credit-Based Flow-Control Mode and LE Enhanced Credit-Based Flow-Control Mode), RFCOMM, SDP, BNEP, AVDTP, AVCTP, ATT, SM (incl. LE Secure Connections and Cross-Transport Key Derivation).\n\n**Profiles:** A2DP, AVRCP incl. Browsing (CT+TG) and Cover Art (CT), GAP, GATT, HFP, HID, HSP, IOP, MAP, OPP, SPP, PAN, PBAP.\n\n**GATT Service Servers:** Battery (BAS), Bond Management (BMS), Cycling Power (CPS), Cycling Speed and Cadence (CSCS), Device Information (DID), Heart Rate (HRS), HID over GATT (HIDS) Device, Immediate Alert, Link Loss (LLS),\nMesh Provisioning, Mesh Proxy, Nordic SPP, Scan Parameters (SCPS), TX Power (TPS), u-Blox SPP. \n\n**GATT Service Clients:**: ANCS, Battery (BAS), Device Information (DID), HID-over-GATT (HOGP) Host, Immediate Alert, Link Loss, Scan Parameters (SCPP), TX Power (TXS).\n\n**LE Audio Profiles**: Object Transfer Profile (OTP), Volume Control Profile (VCP), Microphone Control Profile (MICP), Media Control Profile (MCP), Call Control Profile (CCP),\nCoordinated Set Identification Profile (CSIP), Basic Audio Profile (BAP), Common Audio Profile (CAP), Hearing Access Profile (HAP), Telephony and Media Audio Profile (TMAP),\nPublic Broadcast Profile (PBP), Gaming Audio Profile (GMAP)\n\n**LE Audio Services**: Audio Input Control Service (AICS), Volume Offset Control Service (VOCS), Volume Control Service (VCS), Microphone Control Service (MICS),\nMedia Control Service (MCS), Generic Media Control Service (GMCS), Telephony Bearer Service (TBS), Coordinated Set Identification Service (CSIS), \nPublished Audio Capabilities Service (PACS), Audio Stream Control Service (ASCS), Broadcast Audio Scan Service (BASS), Common Audio Service (CAS), and Hearing Access Service (HAS).\n\nGATT Services are in general easy to implement and require short development time. For more GATT Services please contact us, or follow the [implementation guidelines](https://bluekitchen-gmbh.com/btstack/profiles/#gatt-generic-attribute-profile).  \n\n**Qualification**: BTstack been qualified with the Bluetooth SIG (DN Q331293) for ATT, GAP, GATT, IOP, L2CAP, SDP, SM of the Bluetooth Core 6.0 specification as well as \nA2DP 1.4, AICS 1.0, ASCS 1.0.1, AVCTP 1.4, AVDTP 1.3, AVRCP 1.6.3, BAP 1.0.2, BAS 1.1, BASS 1.0, BAU 1.0, BNEP 1.0, CAP 1.0, CAS 1.0, CCP 1.0, CPP 1.1, CPS 1.1, \nCSCP 1.0, CSCS 1.0, CSIP 1.0.1, CSIS 1.0.1, DID 1.3, DIS 1.1, GAVDP 1.3, GMAP 1.0, GMCS 1.0.1, HAP 1.0, HAS 1.0, HFP 1.9, HID 1.1.1, HIDS 1.0, HOGP 1.0, HRP 1.0,\nHRS 1.0, HSP 1.2, IAS 1.0, LC3 1.0.1, LLS 1.0, MAP 1.4.2, MCP 1.0, MCS 1.0.1, MICP 1.0, MICS 1.0, OPP 1.2.1, OTP 1.0, OTS 1.0, PACS 1.0.1, PANP 1.0, PBAP 1.2.3,\nPBP 1.0, RFCOMM 1.2, SPP 1.2, SPS 1.0, TBS 1.0, TMAP 1.0, TxPS 1.0, VCP 1.0, VCS 1.0, VOCS 1.0.\n\nFor information on Apple's MFi/iAP2 and Find My profiles or access to LE Audio, MAP, PBAP Server, please <a href=\"mailto:contact@bluekitchen-gmbh.com\">contact us directly</a>.\n\n## Evaluation Platforms\n\n#### Embedded Platforms:      \n| Build Status                                                                                                                                                                                                     | Port                                                                                                                  | Platform                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [<img src=\"https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-esp32-master.svg\">](https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-esp32-master)                                           | [esp32](https://github.com/bluekitchen/btstack/tree/master/port/esp32)                                               | [Espressif ESP32](https://www.espressif.com/products/hardware/esp32/overview) 2.4 GHz Wi-Fi and Bluetooth Dual-Mode combo chip using [FreeRTOS](https://www.freertos.org)                                                                                                                                                                                                                                                                                       |\n| [<img src=\"https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-max32630-fthr-master.svg\">](https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-max32630-fthr)                                   | [max32630-fthr](https://github.com/bluekitchen/btstack/tree/master/port/max32630-fthr)                               | [MAX32630FTHR ARM Cortex M4F Board](https://www.maximintegrated.com/en/products/digital/microcontrollers/MAX32630FTHR.html) with onboard [Panasonic PAN1326 module](https://na.industrial.panasonic.com/products/wireless-connectivity/bluetooth/multi-mode/series/pan13261316-series/CS467) containing  [TI CC2564B Bluetooth controller](https://www.ti.com/product/cc2564)                                                                                   |\n| [<img src=\"https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-msp432p401lp-cc256x-master.svg\">](https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-msp432p401lp-cc256x-master)               | [msp432p401lp-cc256x](https://github.com/bluekitchen/btstack/tree/master/port/msp432p401lp-cc256x)                   | [TI MSP432P401R LaunchPad](https://www.ti.com/tool/MSP-EXP432P401R) with [CC2564C Dual-mode Bluetooth® Controller Evaluation Module](https://store.ti.com/CC256XCQFN-EM-CC2564C-Dual-Mode-Bluetooth-Controller-Evaluation-Module-P51277.aspx) and [EM Adapter BoosterPack](https://www.ti.com/tool/boost-ccemadapter) with additional 32768Hz quartz oscillator                                                                                                 |\n| No build server                                                                                                                                                                                                  | [rrenesas-ek-ra6m4a-da14531](https://github.com/bluekitchen/btstack/tree/master/port/rrenesas-ek-ra6m4a-da14531)     | [Renesas EK-RA6M4](https://www.renesas.com/us/en/products/microcontrollers-microprocessors/ra-cortex-m-mcus/ek-ra6m4-evaluation-kit-ra6m4-mcu-group) with [MikroeE BLE Tiny Click board](https://www.mikroe.com/ble-tiny-click)                                                                                          |\n| No build server                                                                                                                                                                                                  | [renesas-tb-s1ja-cc256x](https://github.com/bluekitchen/btstack/tree/master/port/renesas-tb-s1ja-cc256x)             | [Renesas TB-S1JA](https://www.renesas.com/eu/en/products/synergy/hardware/kits/tb-s1ja.html) with  with [Dual-mode Bluetooth® CC2564 evaluation board](https://www.ti.com/tool/CC256XQFNEM) and [EM Adapter BoosterPack](https://www.ti.com/tool/boost-ccemadapter) with additional 32768Hz quartz oscillator                                                                                                                                                   |\n| [<img src=\"https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-samv71-xplained-atwilc3000-master.svg\">](https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-samv71-xplained-atwilc3000-master) | [samv71-xplained-atwilc3000](https://github.com/bluekitchen/btstack/tree/master/port/samv71-xplained-atwilc3000)     | [SAMV71 Ultra Xplained Ultra](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/ATSAMV71-XULT) evaluation kit with [ATWILC3000 SHIELD](https://www.microchip.com/DevelopmentTools/ProductDetails/ATWILC3000-SHLD)                                                                                                                                                                                                                                |\n| [<img src=\"https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-stm32-f4discovery-cc256x-master.svg\">](https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-stm32-f4discovery-cc256x-master)     | [stm32-f4discovery-cc2564b](https://github.com/bluekitchen/btstack/tree/master/port/stm32-f4discovery-cc256x)        | [STM32 F4 Discovery Board](https://www.st.com/en/evaluation-tools/stm32f4discovery.html) with [CC256xEM Bluetooth Adapter Kit for ST](https://store.ti.com/CC256XEM-STADAPT-CC256xEM-Bluetooth-Adapter-Kit-P45158.aspx) and [CC2564B Dual-mode Bluetooth® Controller Evaluation Module](https://store.ti.com/cc2564modnem.aspx)                                                                                                                                 |\n| [<img src=\"https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-stm32-l073rz-nucleo-em9304-master.svg\">](https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-stm32-l073rz-nucleo-em9304)         | [stm32-l073rz-nucleo-em9304](https://github.com/bluekitchen/btstack/tree/master/port/stm32-l073rz-nucleo-em9304)     | EM9304 DVK: [STM32 Nucleo development board NUCELO-L73RZ](https://www.st.com/en/evaluation-tools/nucleo-l073rz.html) with [EM9304 Bluetooth Controller](https://www.emmicroelectronic.com/product/standard-protocols/em9304)                                                                                                                                                                                                                                    |\n| No build server                                                                                                                                                                                                  | [stm32-wb55xx-nucleo-freertos](https://github.com/bluekitchen/btstack/tree/master/port/stm32-wb55xx-nucleo-freertos) | [P-NUCLEO-WB55 kit](https://www.st.com/en/evaluation-tools/p-nucleo-wb55.html)                                                                                                                                                                                                                                                                                                                                                                                  |\n| [<img src=\"https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-wiced-h4-master.svg\">](https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-wiced-h4-master)                                     | [wiced-h4](https://github.com/bluekitchen/btstack/tree/master/port/wiced-h4)                                         | Broadcom/Cypress platforms that support the WICED SDK via H4 UART, e.g. [RedBear Duo](https://www.seeedstudio.com/RedBear-DUO-Wi-Fi-BLE-IoT-Board-p-2635.html) (BCM43438 A1), [Inventek Systems ISM4334x](https://www.inventeksys.com/wifi/wifi-modules/ism4343-wmb-l151/) (BCM43438 A1), [Inventek Systems ISM4343](https://www.inventeksys.com/products-page/wifi-modules/serial-wifi/ism43341-m4g-l44-cu-embedded-serial-to-wifi-ble-nfc-module/) (BCM43340) |\n\n#### Other Platforms:     \n| Status                                                                                                                                                                       | Port                                                                                                  | Platform                                                                                                   |\n|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------|\n| No build server                                                                                                                                                              | [freebsd-netgraph](https://github.com/bluekitchen/btstack/tree/master/port/freebsd-netgraph)                   | FreeBSD port that uses kernel netgraph HCI node \n| [<img src=\"https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-libusb-master.svg\">](https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-libusb-master)     | [libusb](https://github.com/bluekitchen/btstack/tree/master/port/libusb)                             | Unix-based system with dedicated USB Bluetooth dongle                                                      |\n| No build server                                                                                                                                                              | [libusb-intel](https://github.com/bluekitchen/btstack/tree/master/port/libusb-intel)                 | Unix-based system with Intel Wireless 8260/8265 Controller                                                 |\n| [<img src=\"https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-posix-h4-master.svg\">](https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-posix-h4-master) | [posix-h4](https://github.com/bluekitchen/btstack/tree/master/port/posix-h4)                         | Unix-based system connected to Bluetooth module via H4 over serial port                                    |\n| No build server                                                                                                                                                              | [posix-h4-nxp](https://github.com/bluekitchen/btstack/tree/master/port/posix-h4-bcm)                 | Unix-based system connected to Cypress controllers via H4 over serial port                             |\n| No build server                                                                                                                                                              | [posix-h4-da14581](https://github.com/bluekitchen/btstack/tree/master/port/posix-h4-da14581)         | Unix-based system connected to Dialog Semiconductor DA14581 via H4 over serial port                        |\n| No build server                                                                                                                                                              | [posix-h4-da14585](https://github.com/bluekitchen/btstack/tree/master/port/posix-h4-da14585)         | Unix-based system connected to Dialog Semiconductor DA14585 via H4 over serial port                        |\n| No build server                                                                                                                                                              | [posix-h4-nxp](https://github.com/bluekitchen/btstack/tree/master/port/posix-h4-nxp)                 | Unix-based system connected to NXP controllers via H4 over serial port                                     |\n| No build server                                                                                                                                                              | [posix-h4-zephyr](https://github.com/bluekitchen/btstack/tree/master/port/posix-h4-zephyr)           | Unix-based system connected to Bluetooth module with Zephyr HCI firmware via H4 over serial port           |\n| No build server                                                                                                                                                              | [posix-h5](https://github.com/bluekitchen/btstack/tree/master/port/posix-h5)                         | Unix-based system connected to Bluetooth module via H5 over serial port                                    |\n| No build server                                                                                                                                                              | [qt-h4](https://github.com/bluekitchen/btstack/tree/master/port/qt-h4)                               | Unix- or Win32-based [Qt application](https://qt.io) connected to Bluetooth module via H4 over serial port |\n| No build server                                                                                                                                                              | [qt-usb](https://github.com/bluekitchen/btstack/tree/master/port/qt-usb)                             | Unix- or Win32-based [Qt application](https://qt.io) with dedicated USB Bluetooth dongle                   |\n| No build server                                                                                                                                                              | [windows-h4](https://github.com/bluekitchen/btstack/tree/master/port/windows-h4)                     | Win32-based system connected to Bluetooth module via serial port                                           |\n| No build server                                                                                                                                                              | [windows-h4-da14585](https://github.com/bluekitchen/btstack/tree/master/port/windows-h4-da14585)     | Win32-based system connected to Dialog Semiconductor DA14585 via H4 over serial port                       |\n| No build server                                                                                                                                                              | [windows-winusb](https://github.com/bluekitchen/btstack/tree/master/port/windows-winusb)             | Win32-based system with dedicated USB Bluetooth dongle                                                     |\n| No build server                                                                                                                                                              | [windows-winusb-intel](https://github.com/bluekitchen/btstack/tree/master/port/windows-winusb-intel) | Win32-based system with Intel Wireless 8260/8265 Controller                                                |\n| No build server                                                                                                                                                              | [raspi](https://github.com/bluekitchen/btstack/tree/master/port/raspi)                               | Raspberry Pi 3 or Raspberry Pi Zero W with built-in BCM4343 Bluetooth/Wifi Controller                      |\n| [<img src=\"https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-daemon-master.svg\">](https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-daemon-master)     | [daemon](https://github.com/bluekitchen/btstack/tree/master/port/daemon)                             | TCP and Unix domain named socket client-server architecture supporting multiple clients                    |\n| [<img src=\"https://buildbot.bluekitchen-gmbh.com/btstack/badges/java-master.svg\">](https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/java-master)                   | [java](https://github.com/bluekitchen/btstack/tree/master/platform/daemon/binding/java)              | Java wrapper for daemon                                                                                    |\n| [<img src=\"https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-mtk-master.svg\">](https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-mtk-master)           | [mtk](https://github.com/bluekitchen/btstack/tree/master/port/mtk)                                   | daemon for rooted Android devices, based on Mediatek MT65xx processor, Java and C client-server API        |\n| No build server                                                                                                                                                              | [freertos](https://github.com/bluekitchen/btstack/tree/master/platform/freertos)                     | [FreeRTOS](https://www.freertos.org): Run BTstack on a dedicated thread, not thread-safe.                  |\n\n## Supported Chipsets\n\n| Chipset                              | Type             | HCI Transport  | SCO over HCI     | BTstack folder | Comment                                        |\n|--------------------------------------|------------------|----------------|------------------|----------------|------------------------------------------------|\n| Atmel ATWILC3000                     | LE               | H4             | n.a.             | atwilc3000     | Firmware size: 60 kB                           |\n| Broadcom UART                        | Dual mode        | H4, H5         | Probably         | bcm            | Max UART baudrate 2 mbps                       |\n| Broadcom USB Dongles                 | Dual mode        | USB            | Yes              | bcm            |                                                |\n| CSR UART                             | Dual mode        | H4, H5, BCSP   | No (didn't work) | csr            |                                                |\n| CSR USB Dongles                      | Dual mode        | USB            | Yes              | csr            |                                                |\n| Infineon CYW207xx                    | Dual mode        | H4, H5, USB    | Probably         | bcm            |                                                |\n| Infineon CYW20819                    | Dual mode        | H4, H5, USB    | Probably         | bcm            | Keep CTS high during power cycle               |\n| Infineon CYW43xxx                    | Dual mode + Wifi | H4, H5         | Don't know       | bcm            | Bluetooth + Wifi Combo Controller              |\n| Infineon CYW5557x                    | Dual mode + Wifi | H4             | Yes              | bcm            | autobaud-mode needed, see posix-h4-bcm         |\n| Infineon PSoC 4                      | LE               | H4             | n.a.             |                | HCI Firmware part of PSoC Creator kit examples |\n| Dialog Semiconductor DA145xx         | LE               | H4, SPI        | n.a.             | da14581        | Official HCI firmware used                     |\n| Dialog Semiconductor DA1469x         | LE               | H4, SPI        | n.a              |                | HCI Firmware part of DA1469x SDK               |\n| Espressif ESP32                      | Dual mode + Wifi | VHCI, H4       | Yes              |                | SoC with Bluetooth and Wifi                    |\n| Espressif ESP32-S3,C2,C3,C5,C6,H2    | LE + Wifi        | VHCI, H4       | Yes              |                | SoC with Bluetooth and Wifi                    |\n| EM 9301, 9304, 9305                  | LE               | SPI            | n.a.             | em9301         | Custom HCI SPI implementation                  |\n| Intel Dual Wireless 3165, 8260, 8265 | Dual mode        | USB            | Probably         | intel          | Firmware size: 400 kB                          |\n| Nordic nRF                           | LE               | H4             | n.a.             |                | Requires custom HCI firmware                   |\n| NXP 88W88997, IW416, IW61x           | Dual mode + Wifi | H4             | Yes              | nxp            | Requires initial firmware                      |\n| Realtek RTL8822CS                    | Dual mode + Wifi | H5             | Yes              |                | Requires initial firmware and config           |\n| Realtek USB Dongles                  | Dual mode + Wifi | USB            | Yes              | realtek        | Requires initial firmware and config           |\n| Renesas RX23W                        | LE               | H4             | n.a.             |                | HCI Firmware part of BTTS                      |\n| STM STLC2500D                        | Classic          | H4             | No (didn't try)  | stlc2500d      | Custom deep sleep management not supported     |\n| STM32-WB                             | LE               | VHCI           | n.a.             |                | SoC with multi-protocol Radio co-processor     |\n| STM32-WB0                            | LE               | H4             | n.a.             |                | HCI Firmware part of STM32WB0 Cube Package     |\n| Toshiba TC35661                      | Dual mode        | H4             | No               | tc3566         |                                                |\n| TI CC256x, WL183x                    | Dual mode        | H4, H5, eHCILL | Yes              | cc256x         | Also WL185x, WL187x, and WL189x                |\n\n[More infos on supported chipsets](https://bluekitchen-gmbh.com/btstack/master/chipsets/)\n\n## Source Tree Overview\n| Path\t\t\t\t | Description                                      |\n|----------|--------------------------------------------------|\n| chipset  | Support for individual Bluetooth chipsets        |\n| doc      | Sources for BTstack documentation                |\n| example  | Example applications available for all ports     |\n| platform | Support for special OSs and/or MCU architectures |\n| port     | Complete port for a MCU + Chipset combinations   |\n| src      | Bluetooth stack implementation                   |\n| test     | Unit and PTS tests                               |\n| tool     | Helper tools for BTstack                         |\n"
        },
        {
          "name": "chipset",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "platform",
          "type": "tree",
          "content": null
        },
        {
          "name": "port",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tool",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}