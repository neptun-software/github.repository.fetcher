{
  "metadata": {
    "timestamp": 1736710023161,
    "page": 628,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "espressif/esp-iot-solution",
      "stars": 2045,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.8125,
          "content": ".config\n*.o\n*.pyc\n*.orig\n\n# gtags\nGTAGS\nGRTAGS\nGPATH\n\n# emacs\n.dir-locals.el\n\n# emacs temp file suffixes\n*~\n.#*\n\\#*#\n\n# eclipse setting\n.settings\n\n# MacOS directory files\n.DS_Store\n\n# Components Unit Test Apps files\ncomponents/**/build\ncomponents/**/sdkconfig\ncomponents/**/sdkconfig.old\n\n# Example project files\nexamples/**/sdkconfig\nexamples/**/sdkconfig.old\nexamples/**/build\n\n# Example online download files\nexamples/usb/device/usb_dual_uvc_device/**/*.avi\ncomponents/avi_player/test_apps/**/*.avi\n\n# Doc build artifacts\ndocs/**/_build/\ndocs/**/doxygen-warning-log.txt\ndocs/**/sphinx-warning-log.txt\ndocs/**/sphinx-warning-log-sanitized.txt\ndocs/**/xml/\ndocs/**/xml_in/\ndocs/**/man/\n\n# Downloaded font files\ndocs/_static/DejaVuSans.ttf\ndocs/_static/NotoSansSC-Regular.otf\n\n# Unit test app files\ntools/unit-test-app/sdkconfig\ntools/unit-test-app/sdkconfig.old\ntools/unit-test-app/build\ntools/unit-test-app/builds\ntools/unit-test-app/output\ntools/unit-test-app/test_configs\n\n# Unit Test CMake compile log folder\nlog_ut_cmake\n\n# test application build files\ntools/test_apps/**/build\ntools/test_apps/**/sdkconfig\ntools/test_apps/**/sdkconfig.old\n\n# IDF monitor test\ntools/test_idf_monitor/outputs\n\nTEST_LOGS\n\n# gcov coverage reports\n*.gcda\n*.gcno\ncoverage.info\ncoverage_report/\n\ntest_multi_heap_host\n\n# VS Code Settings\n.vscode/\n\n# VIM files\n*.swp\n*.swo\n\n# Clion IDE CMake build & config\n.idea/\ncmake-build-*/\n\n# Results for the checking of the Python coding style and static analysis\n.mypy_cache\nflake8_output.txt\n\n# ESP-IDF default build directory name\nbuild\nbuild_esp*/\nbuild_linux*/\nsize_info.txt\n\n# lock files for examples and components\ndependencies.lock\n\n# managed_components for examples\nmanaged_components\n\n# pytest log\npytest_embedded_log/\npytest_log/\n.pytest_cache/\nXUNIT_RESULT.xml\n\n#format file\n.editorconfig\n\n#launchpad\nbinaries/\noutput.json\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 1.037109375,
          "content": "stages:\n  - pre_check\n  - build\n  - target_test\n  - build_docs\n  - deploy\n\nworkflow:\n  rules:\n    # Disable those non-protected push triggered pipelines\n    - if: '$CI_COMMIT_REF_NAME != \"master\" && $CI_COMMIT_BRANCH !~ /^release\\/v/ && $CI_COMMIT_TAG !~ /^v\\d+\\.\\d+(\\.\\d+)?($|-)/ && $CI_PIPELINE_SOURCE == \"push\"'\n      when: never\n    # when running merged result pipelines, it would create a temp commit id. use $CI_MERGE_REQUEST_SOURCE_BRANCH_SHA instead of $CI_COMMIT_SHA.\n    # Please use PIPELINE_COMMIT_SHA at all places that require a commit sha\n    - if: $CI_OPEN_MERGE_REQUESTS != null\n      variables:\n        PIPELINE_COMMIT_SHA: $CI_MERGE_REQUEST_SOURCE_BRANCH_SHA\n    - if: $CI_OPEN_MERGE_REQUESTS == null\n      variables:\n        PIPELINE_COMMIT_SHA: $CI_COMMIT_SHA\n    - when: always\n\nvariables:\n  IOT_SOLUTION_PATH: \"$CI_PROJECT_DIR\"\n\ninclude:\n  - '.gitlab/ci/danger.yml'\n  - '.gitlab/ci/rules.yml'\n  - '.gitlab/ci/pre_check.yml'\n  - '.gitlab/ci/build.yml'\n  - '.gitlab/ci/docs.yml'\n  - '.gitlab/ci/deploy.yml'\n  - '.gitlab/ci/target_test.yml'\n"
        },
        {
          "name": ".gitlab",
          "type": "tree",
          "content": null
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 3.3330078125,
          "content": "# See https://pre-commit.com for more information\n# See https://pre-commit.com/hooks.html for more hooks\n---\nminimum_pre_commit_version: 3.3.0\ndefault_install_hook_types: [pre-commit,commit-msg]\n\nrepos:\n  - repo: https://github.com/espressif/check-copyright/\n    rev: v1.0.3\n    hooks:\n      - id: check-copyright\n        args: ['--config', 'tools/ci/check_copyright_config.yaml', '--ignore', 'tools/ci/check_copyright_ignore.txt']\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.6.0\n    hooks:\n      - id: file-contents-sorter\n        files: 'tools\\/ci\\/(executable-list\\.txt|check_copyright_ignore\\.txt)'\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.6.0\n    hooks:\n      - id: trailing-whitespace\n        # note: whitespace exclusions use multiline regex, see https://pre-commit.com/#regular-expressions\n        # items are:\n        # 1 - some file extensions\n        # 2 - any file matching *test*/*expected* (for host tests, if possible use this naming pattern always)\n        # 3 - any file with known-warnings in the name\n        # 4 - any directory named 'testdata'\n        # 5 - protobuf auto-generated files\n        exclude: &whitespace_excludes |\n          (?x)^(\n            .+\\.(md|rst|map|bin)|\n            .+test.*\\/.*expected.*|\n            .+known-warnings.*|\n            .+\\/testdata\\/.+|\n            .*_pb2.py|\n            .*.pb-c.h|\n            .*.pb-c.c|\n            .*.yuv|\n            .*.patch\n          )$\n      - id: end-of-file-fixer\n        exclude: *whitespace_excludes\n      - id: check-executables-have-shebangs\n      - id: check-shebang-scripts-are-executable\n      - id: mixed-line-ending\n        args: ['-f=lf']\n      - id: double-quote-string-fixer\n      - id: no-commit-to-branch\n        name: Do not use more than one slash in the branch name\n        args: ['--pattern', '^[^/]*/[^/]*/']\n      - id: no-commit-to-branch\n        name: Do not use uppercase letters in the branch name\n        args: ['--pattern', '^[^A-Z]*[A-Z]']\n  - repo: https://github.com/espressif/astyle_py.git\n    rev: v1.0.5\n    hooks:\n      - id: astyle_py\n        # If you are modifying astyle version, update tools/format.sh as well\n        args: ['--astyle-version=3.4.7', '--rules=tools/ci/astyle-rules.yml']\n  - repo: local\n    hooks:\n      - id: check-executables\n        name: Check File Permissions\n        entry: tools/ci/check_executables.py --action executables\n        language: python\n        types: [executable]\n        exclude: '\\.pre-commit/.+'\n      - id: check-executable-list\n        name: Validate executable-list.txt\n        entry: tools/ci/check_executables.py --action list\n        language: python\n        pass_filenames: false\n        always_run: true\n  - repo: local\n    hooks:\n      - id: release_versions\n        name: Update versions in readme\n        entry: tools/release_versions.py\n        language: python\n        types: [executable]\n        additional_dependencies:\n          - pyyaml\n        always_run: true\n  - repo: https://github.com/espressif/conventional-precommit-linter\n    rev: v1.8.0\n    hooks:\n      - id: conventional-precommit-linter\n        stages: [commit-msg]\n        args:\n          - --subject-min-length=15\n          - --body-max-line-length=200\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.3.0\n    hooks:\n    - id: codespell\n      args: [-w, \"--ignore-words=codespell-ignore-list\"]\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 2.3603515625,
          "content": "Contributions Guide\n========================\n\nWe welcome contributions to the esp-iot-solution project!\n\nHow to Contribute\n--------------------\n\nContributions to esp-iot-solution - fixing bugs, adding features, adding documentation - are welcome. We accept contributions via `Github Pull Requests <https://help.github.com/articles/about-pull-requests>`_.\n\nBefore Contributing\n----------------------\n\nBefore sending us a Pull Request, please consider this list of points:\n\n* Is the contribution entirely your own work, or already licensed under an Apache License 2.0 compatible Open Source License? If not then we unfortunately cannot accept it.\n\n* Does any new code conform to the esp-idf : :doc:`Style Guide <style-guide>` ?\n\n* Have you installed the `pre-commit hook <https://docs.espressif.com/projects/esp-idf/en/stable/esp32/contribute/install-pre-commit-hook.html>`_ for the esp-iot-solution project?\n\n* Does the code documentation follow requirements in `Documenting-code <http://docs.espressif.com/projects/esp-idf/en/stable/contribute/documenting-code.html>`_ ?\n\n* Is the code adequately commented for people to understand how it is structured?\n\n* Are comments and documentation written in clear English, with no spelling or grammar errors?\n\n* If the contribution contains multiple commits, are they grouped together into logical changes (one major change per pull request)? Are any commits with names like \"fixed typo\" `squashed into previous commits <http://eli.thegreenplace.net/2014/02/19/squashing-github-pull-requests-into-a-single-commit>`_?\n\n* If you're unsure about any of these points, please open the Pull Request anyhow and then ask us for feedback.\n\nPull Request Process\n-----------------------\n\nAfter you open the Pull Request, there will probably be some discussion in the comments field of the request itself.\n\nOnce the Pull Request is ready to merge, it will first be merged into our internal git system for in-house automated testing.\n\nIf this process passes, it will be merged onto the public github repository.\n\nLegal Part\n------------\n\nBefore a contribution can be accepted, you will need to sign our `contributor-agreement <http://docs.espressif.com/projects/esp-idf/en/stable/contribute/contributor-agreement.html>`_. You will be prompted for this automatically as part of the Pull Request process.\n\nRelated Documents\n-----------------\n\n.. toctree::\n    :maxdepth: 1\n\n    style-guide\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 25.8876953125,
          "content": "[![Documentation Status](https://dl.espressif.com/AE/docs/docs_latest.svg)](https://docs.espressif.com/projects/esp-iot-solution/en)\n\n<a href=\"https://espressif.github.io/esp-launchpad/?flashConfigURL=https://dl.espressif.com/AE/esp-iot-solution/config.toml\">\n    <img alt=\"Try it with ESP Launchpad\" src=\"https://espressif.github.io/esp-launchpad/assets/try_with_launchpad.png\" width=\"200\" height=\"56\">\n</a>\n\n## Espressif IoT Solution Overview\n\n* [中文版](./README_CN.md)\n\nESP-IoT-Solution contains device drivers and code frameworks for the development of IoT systems, providing extra components that enhance the capabilities of ESP-IDF and greatly simplify the development process.\n\nESP-IoT-Solution contains the following contents:\n\n* Device drivers for sensors, display, audio, input, actuators, etc.\n* Framework and documentation for Low power, security, storage, etc.\n* Guide for espressif open source solutions from practical application point.\n\n## Documentation Center\n\n- 中文：https://docs.espressif.com/projects/esp-iot-solution/zh_CN\n- English:https://docs.espressif.com/projects/esp-iot-solution/en\n\n## Quick Reference\n\n### Development Board\n\nYou can choose any of the ESP series development boards to use ESP-IoT-Solution or choose one of the boards supported in [boards component](./examples/common_components/boards) for a quick start.\n\nPowered by 40nm technology, ESP series SoC provides a robust, highly integrated platform, which helps meet the continuous demands for efficient power usage, compact design, security, high performance, and reliability.\n\n### Setup Environment\n\n#### Setup ESP-IDF Environment\n\nESP-IoT-Solution is developed based on ESP-IDF functions and tools, so ESP-IDF development environment must be set up first, you can refer [Setting up Development Environment](https://docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/index.html#setting-up-development-environment) for the detailed steps.\n\nPlease note that different versions of ESP-IoT-Solution may depend on different versions of ESP-IDF, please refer to the below table to select the correct version:\n\n| ESP-IoT-Solution | Dependent ESP-IDF |                    Major Change                     |                                                  User Guide                                                  |        Support State        |\n| :--------------: | :---------------: | :-------------------------------------------------: | :----------------------------------------------------------------------------------------------------------: | --------------------------- |\n|      master      |      >= v5.3      |                New Chips Support                                     |                     [Docs online](https://docs.espressif.com/projects/esp-iot-solution/)                     | New features                |\n|   release/v2.0   | <= v5.3, >= v4.4  |              Support component manager              |                     [Docs online](https://docs.espressif.com/projects/esp-iot-solution/en/release-v2.0/index.html)                     | Bugfix only，until v5.3 EOL |\n|   release/v1.1   |      v4.0.1       | IDF version update, remove no longer supported code | [v1.1 Overview](https://github.com/espressif/esp-iot-solution/tree/release/v1.1#esp32-iot-solution-overview) | archived                    |\n|   release/v1.0   |      v3.2.2       |                   legacy version                    | [v1.0 Overview](https://github.com/espressif/esp-iot-solution/tree/release/v1.0#esp32-iot-solution-overview) | archived                    |\n\n> Since the `master` branch uses the `ESP Component Manager` to manager components, each of them is a separate package, and each package may support a different version of the ESP-IDF, which will be declared in the component's `idf_component.yml` file\n\n#### Get Components from ESP Component Registry\n\nIf you just want to use the components in ESP-IoT-Solution, we recommend you use it from the [ESP Component Registry](https://components.espressif.com/).\n\nThe registered components in ESP-IoT-Solution are listed below:\n\n<center>\n\n| Component | Version |\n| --- | --- |\n| [aht20](https://components.espressif.com/components/espressif/aht20) | [![Component Registry](https://components.espressif.com/components/espressif/aht20/badge.svg)](https://components.espressif.com/components/espressif/aht20) |\n| [apds9960](https://components.espressif.com/components/espressif/apds9960) | [![Component Registry](https://components.espressif.com/components/espressif/apds9960/badge.svg)](https://components.espressif.com/components/espressif/apds9960) |\n| [at581x](https://components.espressif.com/components/espressif/at581x) | [![Component Registry](https://components.espressif.com/components/espressif/at581x/badge.svg)](https://components.espressif.com/components/espressif/at581x) |\n| [avi_player](https://components.espressif.com/components/espressif/avi_player) | [![Component Registry](https://components.espressif.com/components/espressif/avi_player/badge.svg)](https://components.espressif.com/components/espressif/avi_player) |\n| [ble_anp](https://components.espressif.com/components/espressif/ble_anp) | [![Component Registry](https://components.espressif.com/components/espressif/ble_anp/badge.svg)](https://components.espressif.com/components/espressif/ble_anp) |\n| [ble_conn_mgr](https://components.espressif.com/components/espressif/ble_conn_mgr) | [![Component Registry](https://components.espressif.com/components/espressif/ble_conn_mgr/badge.svg)](https://components.espressif.com/components/espressif/ble_conn_mgr) |\n| [ble_hci](https://components.espressif.com/components/espressif/ble_hci) | [![Component Registry](https://components.espressif.com/components/espressif/ble_hci/badge.svg)](https://components.espressif.com/components/espressif/ble_hci) |\n| [ble_hrp](https://components.espressif.com/components/espressif/ble_hrp) | [![Component Registry](https://components.espressif.com/components/espressif/ble_hrp/badge.svg)](https://components.espressif.com/components/espressif/ble_hrp) |\n| [ble_htp](https://components.espressif.com/components/espressif/ble_htp) | [![Component Registry](https://components.espressif.com/components/espressif/ble_htp/badge.svg)](https://components.espressif.com/components/espressif/ble_htp) |\n| [ble_ota](https://components.espressif.com/components/espressif/ble_ota) | [![Component Registry](https://components.espressif.com/components/espressif/ble_ota/badge.svg)](https://components.espressif.com/components/espressif/ble_ota) |\n| [ble_services](https://components.espressif.com/components/espressif/ble_services) | [![Component Registry](https://components.espressif.com/components/espressif/ble_services/badge.svg)](https://components.espressif.com/components/espressif/ble_services) |\n| [bme280](https://components.espressif.com/components/espressif/bme280) | [![Component Registry](https://components.espressif.com/components/espressif/bme280/badge.svg)](https://components.espressif.com/components/espressif/bme280) |\n| [bootloader_support_plus](https://components.espressif.com/components/espressif/bootloader_support_plus) | [![Component Registry](https://components.espressif.com/components/espressif/bootloader_support_plus/badge.svg)](https://components.espressif.com/components/espressif/bootloader_support_plus) |\n| [button](https://components.espressif.com/components/espressif/button) | [![Component Registry](https://components.espressif.com/components/espressif/button/badge.svg)](https://components.espressif.com/components/espressif/button) |\n| [cmake_utilities](https://components.espressif.com/components/espressif/cmake_utilities) | [![Component Registry](https://components.espressif.com/components/espressif/cmake_utilities/badge.svg)](https://components.espressif.com/components/espressif/cmake_utilities) |\n| [drv10987](https://components.espressif.com/components/espressif/drv10987) | [![Component Registry](https://components.espressif.com/components/espressif/drv10987/badge.svg)](https://components.espressif.com/components/espressif/drv10987) |\n| [elf_loader](https://components.espressif.com/components/espressif/elf_loader) | [![Component Registry](https://components.espressif.com/components/espressif/elf_loader/badge.svg)](https://components.espressif.com/components/espressif/elf_loader) |\n| [esp_lcd_axs15231b](https://components.espressif.com/components/espressif/esp_lcd_axs15231b) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_axs15231b/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_axs15231b) |\n| [esp_lcd_ek79007](https://components.espressif.com/components/espressif/esp_lcd_ek79007) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_ek79007/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_ek79007) |\n| [esp_lcd_gc9b71](https://components.espressif.com/components/espressif/esp_lcd_gc9b71) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_gc9b71/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_gc9b71) |\n| [esp_lcd_hx8399](https://components.espressif.com/components/espressif/esp_lcd_hx8399) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_hx8399/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_hx8399) |\n| [esp_lcd_jd9165](https://components.espressif.com/components/espressif/esp_lcd_jd9165) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_jd9165/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_jd9165) |\n| [esp_lcd_jd9365](https://components.espressif.com/components/espressif/esp_lcd_jd9365) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_jd9365/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_jd9365) |\n| [esp_lcd_nv3022b](https://components.espressif.com/components/espressif/esp_lcd_nv3022b) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_nv3022b/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_nv3022b) |\n| [esp_lcd_panel_io_additions](https://components.espressif.com/components/espressif/esp_lcd_panel_io_additions) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_panel_io_additions/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_panel_io_additions) |\n| [esp_lcd_sh8601](https://components.espressif.com/components/espressif/esp_lcd_sh8601) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_sh8601/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_sh8601) |\n| [esp_lcd_spd2010](https://components.espressif.com/components/espressif/esp_lcd_spd2010) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_spd2010/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_spd2010) |\n| [esp_lcd_st7701](https://components.espressif.com/components/espressif/esp_lcd_st7701) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_st7701/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_st7701) |\n| [esp_lcd_st7703](https://components.espressif.com/components/espressif/esp_lcd_st7703) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_st7703/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_st7703) |\n| [esp_lcd_st77903_qspi](https://components.espressif.com/components/espressif/esp_lcd_st77903_qspi) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_st77903_qspi/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_st77903_qspi) |\n| [esp_lcd_st77903_rgb](https://components.espressif.com/components/espressif/esp_lcd_st77903_rgb) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_st77903_rgb/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_st77903_rgb) |\n| [esp_lcd_st77916](https://components.espressif.com/components/espressif/esp_lcd_st77916) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_st77916/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_st77916) |\n| [esp_lcd_st77922](https://components.espressif.com/components/espressif/esp_lcd_st77922) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_st77922/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_st77922) |\n| [esp_lcd_touch_spd2010](https://components.espressif.com/components/espressif/esp_lcd_touch_spd2010) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_touch_spd2010/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_touch_spd2010) |\n| [esp_lcd_touch_st7123](https://components.espressif.com/components/espressif/esp_lcd_touch_st7123) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_touch_st7123/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_touch_st7123) |\n| [esp_lcd_usb_display](https://components.espressif.com/components/espressif/esp_lcd_usb_display) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_usb_display/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_usb_display) |\n| [esp_lv_decoder](https://components.espressif.com/components/espressif/esp_lv_decoder) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lv_decoder/badge.svg)](https://components.espressif.com/components/espressif/esp_lv_decoder) |\n| [esp_lv_fs](https://components.espressif.com/components/espressif/esp_lv_fs) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lv_fs/badge.svg)](https://components.espressif.com/components/espressif/esp_lv_fs) |\n| [esp_mmap_assets](https://components.espressif.com/components/espressif/esp_mmap_assets) | [![Component Registry](https://components.espressif.com/components/espressif/esp_mmap_assets/badge.svg)](https://components.espressif.com/components/espressif/esp_mmap_assets) |\n| [esp_msc_ota](https://components.espressif.com/components/espressif/esp_msc_ota) | [![Component Registry](https://components.espressif.com/components/espressif/esp_msc_ota/badge.svg)](https://components.espressif.com/components/espressif/esp_msc_ota) |\n| [esp_sensorless_bldc_control](https://components.espressif.com/components/espressif/esp_sensorless_bldc_control) | [![Component Registry](https://components.espressif.com/components/espressif/esp_sensorless_bldc_control/badge.svg)](https://components.espressif.com/components/espressif/esp_sensorless_bldc_control) |\n| [esp_simplefoc](https://components.espressif.com/components/espressif/esp_simplefoc) | [![Component Registry](https://components.espressif.com/components/espressif/esp_simplefoc/badge.svg)](https://components.espressif.com/components/espressif/esp_simplefoc) |\n| [esp_tinyuf2](https://components.espressif.com/components/espressif/esp_tinyuf2) | [![Component Registry](https://components.espressif.com/components/espressif/esp_tinyuf2/badge.svg)](https://components.espressif.com/components/espressif/esp_tinyuf2) |\n| [extended_vfs](https://components.espressif.com/components/espressif/extended_vfs) | [![Component Registry](https://components.espressif.com/components/espressif/extended_vfs/badge.svg)](https://components.espressif.com/components/espressif/extended_vfs) |\n| [gprof](https://components.espressif.com/components/espressif/gprof) | [![Component Registry](https://components.espressif.com/components/espressif/gprof/badge.svg)](https://components.espressif.com/components/espressif/gprof) |\n| [hdc2010](https://components.espressif.com/components/espressif/hdc2010) | [![Component Registry](https://components.espressif.com/components/espressif/hdc2010/badge.svg)](https://components.espressif.com/components/espressif/hdc2010) |\n| [i2c_bus](https://components.espressif.com/components/espressif/i2c_bus) | [![Component Registry](https://components.espressif.com/components/espressif/i2c_bus/badge.svg)](https://components.espressif.com/components/espressif/i2c_bus) |\n| [ina236](https://components.espressif.com/components/espressif/ina236) | [![Component Registry](https://components.espressif.com/components/espressif/ina236/badge.svg)](https://components.espressif.com/components/espressif/ina236) |\n| [iot_usbh](https://components.espressif.com/components/espressif/iot_usbh) | [![Component Registry](https://components.espressif.com/components/espressif/iot_usbh/badge.svg)](https://components.espressif.com/components/espressif/iot_usbh) |\n| [iot_usbh_cdc](https://components.espressif.com/components/espressif/iot_usbh_cdc) | [![Component Registry](https://components.espressif.com/components/espressif/iot_usbh_cdc/badge.svg)](https://components.espressif.com/components/espressif/iot_usbh_cdc) |\n| [iot_usbh_modem](https://components.espressif.com/components/espressif/iot_usbh_modem) | [![Component Registry](https://components.espressif.com/components/espressif/iot_usbh_modem/badge.svg)](https://components.espressif.com/components/espressif/iot_usbh_modem) |\n| [ir_learn](https://components.espressif.com/components/espressif/ir_learn) | [![Component Registry](https://components.espressif.com/components/espressif/ir_learn/badge.svg)](https://components.espressif.com/components/espressif/ir_learn) |\n| [keyboard_button](https://components.espressif.com/components/espressif/keyboard_button) | [![Component Registry](https://components.espressif.com/components/espressif/keyboard_button/badge.svg)](https://components.espressif.com/components/espressif/keyboard_button) |\n| [knob](https://components.espressif.com/components/espressif/knob) | [![Component Registry](https://components.espressif.com/components/espressif/knob/badge.svg)](https://components.espressif.com/components/espressif/knob) |\n| [led_indicator](https://components.espressif.com/components/espressif/led_indicator) | [![Component Registry](https://components.espressif.com/components/espressif/led_indicator/badge.svg)](https://components.espressif.com/components/espressif/led_indicator) |\n| [lightbulb_driver](https://components.espressif.com/components/espressif/lightbulb_driver) | [![Component Registry](https://components.espressif.com/components/espressif/lightbulb_driver/badge.svg)](https://components.espressif.com/components/espressif/lightbulb_driver) |\n| [lis2dh12](https://components.espressif.com/components/espressif/lis2dh12) | [![Component Registry](https://components.espressif.com/components/espressif/lis2dh12/badge.svg)](https://components.espressif.com/components/espressif/lis2dh12) |\n| [mvh3004d](https://components.espressif.com/components/espressif/mvh3004d) | [![Component Registry](https://components.espressif.com/components/espressif/mvh3004d/badge.svg)](https://components.espressif.com/components/espressif/mvh3004d) |\n| [ntc_driver](https://components.espressif.com/components/espressif/ntc_driver) | [![Component Registry](https://components.espressif.com/components/espressif/ntc_driver/badge.svg)](https://components.espressif.com/components/espressif/ntc_driver) |\n| [openai](https://components.espressif.com/components/espressif/openai) | [![Component Registry](https://components.espressif.com/components/espressif/openai/badge.svg)](https://components.espressif.com/components/espressif/openai) |\n| [power_measure](https://components.espressif.com/components/espressif/power_measure) | [![Component Registry](https://components.espressif.com/components/espressif/power_measure/badge.svg)](https://components.espressif.com/components/espressif/power_measure) |\n| [pwm_audio](https://components.espressif.com/components/espressif/pwm_audio) | [![Component Registry](https://components.espressif.com/components/espressif/pwm_audio/badge.svg)](https://components.espressif.com/components/espressif/pwm_audio) |\n| [sensor_hub](https://components.espressif.com/components/espressif/sensor_hub) | [![Component Registry](https://components.espressif.com/components/espressif/sensor_hub/badge.svg)](https://components.espressif.com/components/espressif/sensor_hub) |\n| [servo](https://components.espressif.com/components/espressif/servo) | [![Component Registry](https://components.espressif.com/components/espressif/servo/badge.svg)](https://components.espressif.com/components/espressif/servo) |\n| [sht3x](https://components.espressif.com/components/espressif/sht3x) | [![Component Registry](https://components.espressif.com/components/espressif/sht3x/badge.svg)](https://components.espressif.com/components/espressif/sht3x) |\n| [spi_bus](https://components.espressif.com/components/espressif/spi_bus) | [![Component Registry](https://components.espressif.com/components/espressif/spi_bus/badge.svg)](https://components.espressif.com/components/espressif/spi_bus) |\n| [touch_proximity_sensor](https://components.espressif.com/components/espressif/touch_proximity_sensor) | [![Component Registry](https://components.espressif.com/components/espressif/touch_proximity_sensor/badge.svg)](https://components.espressif.com/components/espressif/touch_proximity_sensor) |\n| [usb_device_uac](https://components.espressif.com/components/espressif/usb_device_uac) | [![Component Registry](https://components.espressif.com/components/espressif/usb_device_uac/badge.svg)](https://components.espressif.com/components/espressif/usb_device_uac) |\n| [usb_device_uvc](https://components.espressif.com/components/espressif/usb_device_uvc) | [![Component Registry](https://components.espressif.com/components/espressif/usb_device_uvc/badge.svg)](https://components.espressif.com/components/espressif/usb_device_uvc) |\n| [usb_stream](https://components.espressif.com/components/espressif/usb_stream) | [![Component Registry](https://components.espressif.com/components/espressif/usb_stream/badge.svg)](https://components.espressif.com/components/espressif/usb_stream) |\n| [veml6040](https://components.espressif.com/components/espressif/veml6040) | [![Component Registry](https://components.espressif.com/components/espressif/veml6040/badge.svg)](https://components.espressif.com/components/espressif/veml6040) |\n| [veml6075](https://components.espressif.com/components/espressif/veml6075) | [![Component Registry](https://components.espressif.com/components/espressif/veml6075/badge.svg)](https://components.espressif.com/components/espressif/veml6075) |\n| [xz](https://components.espressif.com/components/espressif/xz) | [![Component Registry](https://components.espressif.com/components/espressif/xz/badge.svg)](https://components.espressif.com/components/espressif/xz) |\n| [zero_detection](https://components.espressif.com/components/espressif/zero_detection) | [![Component Registry](https://components.espressif.com/components/espressif/zero_detection/badge.svg)](https://components.espressif.com/components/espressif/zero_detection) |\n\n</center>\n\nYou can directly add the components from the Component Registry to your project by using the `idf.py add-dependency` command under your project's root directory. eg run `idf.py add-dependency \"espressif/usb_stream\"` to add the `usb_stream`, the component will be downloaded automatically during the `CMake` step.\n\n> Please refer to [IDF Component Manager](https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-guides/tools/idf-component-manager.html) for details.\n\n#### Get ESP-IoT-Solution Repository\n\nIf you want to [Contribute](https://docs.espressif.com/projects/esp-iot-solution/zh_CN/latest/contribute/index.html) to the components in ESP-IoT-Solution or want to start from the examples in ESP-IoT-Solution, you can get the ESP-IoT-Solution repository by following the steps:\n\n* If select the `master` version, open the terminal, and run the following command:\n\n    ```\n    git clone --recursive https://github.com/espressif/esp-iot-solution\n    ```\n\n* If select the `release/v2.0` version, open the terminal, and run the following command:\n\n    ```\n    git clone -b release/v2.0 --recursive https://github.com/espressif/esp-iot-solution\n    ```\n\n#### Build and Flash Examples\n\n**We highly recommend** you [Build Your First Project](https://docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/index.html#build-your-first-project) to get familiar with ESP-IDF and make sure the environment is set up correctly.\n\nThere is no difference between building and flashing the examples in ESP-IoT-Solution and in ESP-IDF. In most cases, you can build and flash the examples in ESP-IoT-Solution by following the steps:\n\n1. Change the current directory to the example directory, eg `cd examples/usb/host/usb_audio_player`.\n2. Run `idf.py set-target TARGET` to set the target chip. eg `idf.py set-target esp32s3` to set the target chip to ESP32-S3.\n3. Run `idf.py build` to build the example.\n4. Run `idf.py -p PORT flash monitor` to flash the example, and view the serial output. eg `idf.py -p /dev/ttyUSB0 flash monitor` to flash the example and view the serial output on `/dev/ttyUSB0`.\n\n> Some examples may need extra steps to setup the ESP-IoT-Solution environment, you can run `export IOT_SOLUTION_PATH=~/esp/esp-iot-solution` in Linux/MacOS or `set IOT_SOLUTION_PATH=C:\\esp\\esp-iot-solution` in Windows to setup the environment.\n\n### Resources\n\n- Documentation for the latest version: https://docs.espressif.com/projects/esp-iot-solution/ . This documentation is built from the [docs directory](./docs) of this repository.\n- ESP-IDF Programming Guide: https://docs.espressif.com/projects/esp-idf/zh_CN . Please refer to the version ESP-IoT-Solution depends on.\n- The [IDF Component Registry](https://components.espressif.com/) is where you can find the components in ESP-IoT-Solution and other registered components.\n- The [esp32.com forum](https://www.esp32.com/) is a place to ask questions and find community resources.\n- [Check the Issues section on GitHub](https://github.com/espressif/esp-iot-solution/issues) if you find a bug or have a feature request. Please check existing Issues before opening a new one.\n- If you're interested in contributing to ESP-IDF, please check the [Contributions Guide](./CONTRIBUTING.rst).\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 25.5205078125,
          "content": "[![Documentation Status](https://dl.espressif.com/AE/docs/docs_latest.svg)](https://docs.espressif.com/projects/esp-iot-solution/zh_CN)\n\n<a href=\"https://espressif.github.io/esp-launchpad/?flashConfigURL=https://dl.espressif.com/AE/esp-iot-solution/config.toml\">\n    <img alt=\"Try it with ESP Launchpad\" src=\"https://espressif.github.io/esp-launchpad/assets/try_with_launchpad.png\" width=\"200\" height=\"56\">\n</a>\n\n## Espressif IoT Solution 概述\n\n* [English Version](./README.md)\n\nESP-IoT-Solution 包含物联网系统开发中常用的外设驱动和代码框架，提供了 ESP-IDF 的扩展组件，方便用户实现更简单的开发。\n\nESP-IoT-Solution 包含的内容如下:\n\n* 传感器、显示屏、音频设备、输入设备、执行机构等设备驱动；\n* 低功耗、安全加密、存储方案等代码框架或说明文档；\n* 从实际应用的角度出发，为乐鑫开源解决方案提供了入口指引。\n\n## 文档中心\n\n- 中文：https://docs.espressif.com/projects/esp-iot-solution/zh_CN\n- English: https://docs.espressif.com/projects/esp-iot-solution/en\n\n## 快速参考\n\n### 硬件准备\n\n您可以选择任意 ESP 系列开发板使用 ESP-IoT-Solution，或者选择[板级支持组件](./examples/common_components/boards)中支持的开发板快速开始。\n\nESP 系列 SoC 采用 40nm 工艺制成，具有最佳的功耗性能、射频性能、稳定性、通用性和可靠性，适用于各种应用场景和不同功耗需求。\n\n### 环境搭建\n\n#### 搭建 ESP-IDF 开发环境\n\n由于 ESP-IoT-Solution 依赖 ESP-IDF 的基础功能和编译工具，因此首先需要参考 [ESP-IDF 详细安装步骤](https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/get-started/index.html#get-started-step-by-step) 完成 ESP-IDF 开发环境的搭建。\n\n请注意，不同 ESP-IoT-Solution 版本 依赖的 ESP-IDF 版本可能不同，请参考下表进行选择。\n\n| ESP-IoT-Solution |  依赖的 ESP-IDF  |                  主要变更                  |                                                     文档                                                     |           支持状态           |\n| :--------------: | :--------------: | :----------------------------------------: | :----------------------------------------------------------------------------------------------------------: | ---------------------------- |\n|      master      |     >= v5.3      |          新芯片支持                              |                  [Docs online](https://docs.espressif.com/projects/esp-iot-solution/zh_CN)                   | 新功能开发分支               |\n|   release/v2.0   | <= v5.3, >= v4.4 |               支持组件管理器               |                  [Docs online](https://docs.espressif.com/projects/esp-iot-solution/zh_CN/release-v2.0/index.html)                   | 仅限 Bugfix，维护到 v5.3 EOL |\n|   release/v1.1   |      v4.0.1      | IDF 版本更新，删除已经移动到其它仓库的代码 | [v1.1 Overview](https://github.com/espressif/esp-iot-solution/tree/release/v1.1#esp32-iot-solution-overview) | 备份，停止维护               |\n|   release/v1.0   |      v3.2.2      |                  历史版本                  | [v1.0 Overview](https://github.com/espressif/esp-iot-solution/tree/release/v1.0#esp32-iot-solution-overview) | 备份，停止维护               |\n\n> `release/v2.0` `master` 分支使用 `ESP 组件管理器` 来管理组件，因此每个组件都是一个单独的软件包，每个包可能支持不同版本的 ESP-idf，这些版本将在组件的 `idf_component.yml` 文件中声明。\n\n#### 从 ESP 组件注册表获取组件\n\n如果您只想使用 ESP-IoT-Solution 中的组件，我们建议您从 ESP 组件注册表 [ESP Component Registry](https://components.espressif.com/) 中使用它。\n\nESP-IoT-Solution 中注册的组件如下:\n\n<center>\n\n| 组件 | 版本 |\n| --- | --- |\n| [aht20](https://components.espressif.com/components/espressif/aht20) | [![Component Registry](https://components.espressif.com/components/espressif/aht20/badge.svg)](https://components.espressif.com/components/espressif/aht20) |\n| [apds9960](https://components.espressif.com/components/espressif/apds9960) | [![Component Registry](https://components.espressif.com/components/espressif/apds9960/badge.svg)](https://components.espressif.com/components/espressif/apds9960) |\n| [at581x](https://components.espressif.com/components/espressif/at581x) | [![Component Registry](https://components.espressif.com/components/espressif/at581x/badge.svg)](https://components.espressif.com/components/espressif/at581x) |\n| [avi_player](https://components.espressif.com/components/espressif/avi_player) | [![Component Registry](https://components.espressif.com/components/espressif/avi_player/badge.svg)](https://components.espressif.com/components/espressif/avi_player) |\n| [ble_anp](https://components.espressif.com/components/espressif/ble_anp) | [![Component Registry](https://components.espressif.com/components/espressif/ble_anp/badge.svg)](https://components.espressif.com/components/espressif/ble_anp) |\n| [ble_conn_mgr](https://components.espressif.com/components/espressif/ble_conn_mgr) | [![Component Registry](https://components.espressif.com/components/espressif/ble_conn_mgr/badge.svg)](https://components.espressif.com/components/espressif/ble_conn_mgr) |\n| [ble_hci](https://components.espressif.com/components/espressif/ble_hci) | [![Component Registry](https://components.espressif.com/components/espressif/ble_hci/badge.svg)](https://components.espressif.com/components/espressif/ble_hci) |\n| [ble_hrp](https://components.espressif.com/components/espressif/ble_hrp) | [![Component Registry](https://components.espressif.com/components/espressif/ble_hrp/badge.svg)](https://components.espressif.com/components/espressif/ble_hrp) |\n| [ble_htp](https://components.espressif.com/components/espressif/ble_htp) | [![Component Registry](https://components.espressif.com/components/espressif/ble_htp/badge.svg)](https://components.espressif.com/components/espressif/ble_htp) |\n| [ble_ota](https://components.espressif.com/components/espressif/ble_ota) | [![Component Registry](https://components.espressif.com/components/espressif/ble_ota/badge.svg)](https://components.espressif.com/components/espressif/ble_ota) |\n| [ble_services](https://components.espressif.com/components/espressif/ble_services) | [![Component Registry](https://components.espressif.com/components/espressif/ble_services/badge.svg)](https://components.espressif.com/components/espressif/ble_services) |\n| [bme280](https://components.espressif.com/components/espressif/bme280) | [![Component Registry](https://components.espressif.com/components/espressif/bme280/badge.svg)](https://components.espressif.com/components/espressif/bme280) |\n| [bootloader_support_plus](https://components.espressif.com/components/espressif/bootloader_support_plus) | [![Component Registry](https://components.espressif.com/components/espressif/bootloader_support_plus/badge.svg)](https://components.espressif.com/components/espressif/bootloader_support_plus) |\n| [button](https://components.espressif.com/components/espressif/button) | [![Component Registry](https://components.espressif.com/components/espressif/button/badge.svg)](https://components.espressif.com/components/espressif/button) |\n| [cmake_utilities](https://components.espressif.com/components/espressif/cmake_utilities) | [![Component Registry](https://components.espressif.com/components/espressif/cmake_utilities/badge.svg)](https://components.espressif.com/components/espressif/cmake_utilities) |\n| [drv10987](https://components.espressif.com/components/espressif/drv10987) | [![Component Registry](https://components.espressif.com/components/espressif/drv10987/badge.svg)](https://components.espressif.com/components/espressif/drv10987) |\n| [elf_loader](https://components.espressif.com/components/espressif/elf_loader) | [![Component Registry](https://components.espressif.com/components/espressif/elf_loader/badge.svg)](https://components.espressif.com/components/espressif/elf_loader) |\n| [esp_lcd_axs15231b](https://components.espressif.com/components/espressif/esp_lcd_axs15231b) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_axs15231b/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_axs15231b) |\n| [esp_lcd_ek79007](https://components.espressif.com/components/espressif/esp_lcd_ek79007) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_ek79007/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_ek79007) |\n| [esp_lcd_gc9b71](https://components.espressif.com/components/espressif/esp_lcd_gc9b71) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_gc9b71/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_gc9b71) |\n| [esp_lcd_hx8399](https://components.espressif.com/components/espressif/esp_lcd_hx8399) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_hx8399/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_hx8399) |\n| [esp_lcd_jd9165](https://components.espressif.com/components/espressif/esp_lcd_jd9165) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_jd9165/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_jd9165) |\n| [esp_lcd_jd9365](https://components.espressif.com/components/espressif/esp_lcd_jd9365) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_jd9365/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_jd9365) |\n| [esp_lcd_nv3022b](https://components.espressif.com/components/espressif/esp_lcd_nv3022b) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_nv3022b/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_nv3022b) |\n| [esp_lcd_panel_io_additions](https://components.espressif.com/components/espressif/esp_lcd_panel_io_additions) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_panel_io_additions/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_panel_io_additions) |\n| [esp_lcd_sh8601](https://components.espressif.com/components/espressif/esp_lcd_sh8601) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_sh8601/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_sh8601) |\n| [esp_lcd_spd2010](https://components.espressif.com/components/espressif/esp_lcd_spd2010) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_spd2010/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_spd2010) |\n| [esp_lcd_st7701](https://components.espressif.com/components/espressif/esp_lcd_st7701) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_st7701/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_st7701) |\n| [esp_lcd_st7703](https://components.espressif.com/components/espressif/esp_lcd_st7703) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_st7703/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_st7703) |\n| [esp_lcd_st77903_qspi](https://components.espressif.com/components/espressif/esp_lcd_st77903_qspi) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_st77903_qspi/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_st77903_qspi) |\n| [esp_lcd_st77903_rgb](https://components.espressif.com/components/espressif/esp_lcd_st77903_rgb) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_st77903_rgb/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_st77903_rgb) |\n| [esp_lcd_st77916](https://components.espressif.com/components/espressif/esp_lcd_st77916) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_st77916/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_st77916) |\n| [esp_lcd_st77922](https://components.espressif.com/components/espressif/esp_lcd_st77922) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_st77922/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_st77922) |\n| [esp_lcd_touch_spd2010](https://components.espressif.com/components/espressif/esp_lcd_touch_spd2010) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_touch_spd2010/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_touch_spd2010) |\n| [esp_lcd_touch_st7123](https://components.espressif.com/components/espressif/esp_lcd_touch_st7123) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_touch_st7123/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_touch_st7123) |\n| [esp_lcd_usb_display](https://components.espressif.com/components/espressif/esp_lcd_usb_display) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lcd_usb_display/badge.svg)](https://components.espressif.com/components/espressif/esp_lcd_usb_display) |\n| [esp_lv_decoder](https://components.espressif.com/components/espressif/esp_lv_decoder) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lv_decoder/badge.svg)](https://components.espressif.com/components/espressif/esp_lv_decoder) |\n| [esp_lv_fs](https://components.espressif.com/components/espressif/esp_lv_fs) | [![Component Registry](https://components.espressif.com/components/espressif/esp_lv_fs/badge.svg)](https://components.espressif.com/components/espressif/esp_lv_fs) |\n| [esp_mmap_assets](https://components.espressif.com/components/espressif/esp_mmap_assets) | [![Component Registry](https://components.espressif.com/components/espressif/esp_mmap_assets/badge.svg)](https://components.espressif.com/components/espressif/esp_mmap_assets) |\n| [esp_msc_ota](https://components.espressif.com/components/espressif/esp_msc_ota) | [![Component Registry](https://components.espressif.com/components/espressif/esp_msc_ota/badge.svg)](https://components.espressif.com/components/espressif/esp_msc_ota) |\n| [esp_sensorless_bldc_control](https://components.espressif.com/components/espressif/esp_sensorless_bldc_control) | [![Component Registry](https://components.espressif.com/components/espressif/esp_sensorless_bldc_control/badge.svg)](https://components.espressif.com/components/espressif/esp_sensorless_bldc_control) |\n| [esp_simplefoc](https://components.espressif.com/components/espressif/esp_simplefoc) | [![Component Registry](https://components.espressif.com/components/espressif/esp_simplefoc/badge.svg)](https://components.espressif.com/components/espressif/esp_simplefoc) |\n| [esp_tinyuf2](https://components.espressif.com/components/espressif/esp_tinyuf2) | [![Component Registry](https://components.espressif.com/components/espressif/esp_tinyuf2/badge.svg)](https://components.espressif.com/components/espressif/esp_tinyuf2) |\n| [extended_vfs](https://components.espressif.com/components/espressif/extended_vfs) | [![Component Registry](https://components.espressif.com/components/espressif/extended_vfs/badge.svg)](https://components.espressif.com/components/espressif/extended_vfs) |\n| [gprof](https://components.espressif.com/components/espressif/gprof) | [![Component Registry](https://components.espressif.com/components/espressif/gprof/badge.svg)](https://components.espressif.com/components/espressif/gprof) |\n| [hdc2010](https://components.espressif.com/components/espressif/hdc2010) | [![Component Registry](https://components.espressif.com/components/espressif/hdc2010/badge.svg)](https://components.espressif.com/components/espressif/hdc2010) |\n| [i2c_bus](https://components.espressif.com/components/espressif/i2c_bus) | [![Component Registry](https://components.espressif.com/components/espressif/i2c_bus/badge.svg)](https://components.espressif.com/components/espressif/i2c_bus) |\n| [ina236](https://components.espressif.com/components/espressif/ina236) | [![Component Registry](https://components.espressif.com/components/espressif/ina236/badge.svg)](https://components.espressif.com/components/espressif/ina236) |\n| [iot_usbh](https://components.espressif.com/components/espressif/iot_usbh) | [![Component Registry](https://components.espressif.com/components/espressif/iot_usbh/badge.svg)](https://components.espressif.com/components/espressif/iot_usbh) |\n| [iot_usbh_cdc](https://components.espressif.com/components/espressif/iot_usbh_cdc) | [![Component Registry](https://components.espressif.com/components/espressif/iot_usbh_cdc/badge.svg)](https://components.espressif.com/components/espressif/iot_usbh_cdc) |\n| [iot_usbh_modem](https://components.espressif.com/components/espressif/iot_usbh_modem) | [![Component Registry](https://components.espressif.com/components/espressif/iot_usbh_modem/badge.svg)](https://components.espressif.com/components/espressif/iot_usbh_modem) |\n| [ir_learn](https://components.espressif.com/components/espressif/ir_learn) | [![Component Registry](https://components.espressif.com/components/espressif/ir_learn/badge.svg)](https://components.espressif.com/components/espressif/ir_learn) |\n| [keyboard_button](https://components.espressif.com/components/espressif/keyboard_button) | [![Component Registry](https://components.espressif.com/components/espressif/keyboard_button/badge.svg)](https://components.espressif.com/components/espressif/keyboard_button) |\n| [knob](https://components.espressif.com/components/espressif/knob) | [![Component Registry](https://components.espressif.com/components/espressif/knob/badge.svg)](https://components.espressif.com/components/espressif/knob) |\n| [led_indicator](https://components.espressif.com/components/espressif/led_indicator) | [![Component Registry](https://components.espressif.com/components/espressif/led_indicator/badge.svg)](https://components.espressif.com/components/espressif/led_indicator) |\n| [lightbulb_driver](https://components.espressif.com/components/espressif/lightbulb_driver) | [![Component Registry](https://components.espressif.com/components/espressif/lightbulb_driver/badge.svg)](https://components.espressif.com/components/espressif/lightbulb_driver) |\n| [lis2dh12](https://components.espressif.com/components/espressif/lis2dh12) | [![Component Registry](https://components.espressif.com/components/espressif/lis2dh12/badge.svg)](https://components.espressif.com/components/espressif/lis2dh12) |\n| [mvh3004d](https://components.espressif.com/components/espressif/mvh3004d) | [![Component Registry](https://components.espressif.com/components/espressif/mvh3004d/badge.svg)](https://components.espressif.com/components/espressif/mvh3004d) |\n| [ntc_driver](https://components.espressif.com/components/espressif/ntc_driver) | [![Component Registry](https://components.espressif.com/components/espressif/ntc_driver/badge.svg)](https://components.espressif.com/components/espressif/ntc_driver) |\n| [openai](https://components.espressif.com/components/espressif/openai) | [![Component Registry](https://components.espressif.com/components/espressif/openai/badge.svg)](https://components.espressif.com/components/espressif/openai) |\n| [power_measure](https://components.espressif.com/components/espressif/power_measure) | [![Component Registry](https://components.espressif.com/components/espressif/power_measure/badge.svg)](https://components.espressif.com/components/espressif/power_measure) |\n| [pwm_audio](https://components.espressif.com/components/espressif/pwm_audio) | [![Component Registry](https://components.espressif.com/components/espressif/pwm_audio/badge.svg)](https://components.espressif.com/components/espressif/pwm_audio) |\n| [sensor_hub](https://components.espressif.com/components/espressif/sensor_hub) | [![Component Registry](https://components.espressif.com/components/espressif/sensor_hub/badge.svg)](https://components.espressif.com/components/espressif/sensor_hub) |\n| [servo](https://components.espressif.com/components/espressif/servo) | [![Component Registry](https://components.espressif.com/components/espressif/servo/badge.svg)](https://components.espressif.com/components/espressif/servo) |\n| [sht3x](https://components.espressif.com/components/espressif/sht3x) | [![Component Registry](https://components.espressif.com/components/espressif/sht3x/badge.svg)](https://components.espressif.com/components/espressif/sht3x) |\n| [spi_bus](https://components.espressif.com/components/espressif/spi_bus) | [![Component Registry](https://components.espressif.com/components/espressif/spi_bus/badge.svg)](https://components.espressif.com/components/espressif/spi_bus) |\n| [touch_proximity_sensor](https://components.espressif.com/components/espressif/touch_proximity_sensor) | [![Component Registry](https://components.espressif.com/components/espressif/touch_proximity_sensor/badge.svg)](https://components.espressif.com/components/espressif/touch_proximity_sensor) |\n| [usb_device_uac](https://components.espressif.com/components/espressif/usb_device_uac) | [![Component Registry](https://components.espressif.com/components/espressif/usb_device_uac/badge.svg)](https://components.espressif.com/components/espressif/usb_device_uac) |\n| [usb_device_uvc](https://components.espressif.com/components/espressif/usb_device_uvc) | [![Component Registry](https://components.espressif.com/components/espressif/usb_device_uvc/badge.svg)](https://components.espressif.com/components/espressif/usb_device_uvc) |\n| [usb_stream](https://components.espressif.com/components/espressif/usb_stream) | [![Component Registry](https://components.espressif.com/components/espressif/usb_stream/badge.svg)](https://components.espressif.com/components/espressif/usb_stream) |\n| [veml6040](https://components.espressif.com/components/espressif/veml6040) | [![Component Registry](https://components.espressif.com/components/espressif/veml6040/badge.svg)](https://components.espressif.com/components/espressif/veml6040) |\n| [veml6075](https://components.espressif.com/components/espressif/veml6075) | [![Component Registry](https://components.espressif.com/components/espressif/veml6075/badge.svg)](https://components.espressif.com/components/espressif/veml6075) |\n| [xz](https://components.espressif.com/components/espressif/xz) | [![Component Registry](https://components.espressif.com/components/espressif/xz/badge.svg)](https://components.espressif.com/components/espressif/xz) |\n| [zero_detection](https://components.espressif.com/components/espressif/zero_detection) | [![Component Registry](https://components.espressif.com/components/espressif/zero_detection/badge.svg)](https://components.espressif.com/components/espressif/zero_detection) |\n\n</center>\n\n可以在项目根目录下使用 `idf.py add-dependency` 命令直接将组件从 Component Registry 添加到项目中。例如，执行 `idf.py add-dependency \"espressif/usb_stream\"` 命令添加 `usb_stream`，该组件将在 `CMake` 步骤中自动下载。\n\n> 请参考 [IDF Component Manager](https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-guides/tools/idf-component-manager.html) 查看更多关于组件管理器的细节.\n\n#### 从 ESP-IoT-Solution 仓库获取组件\n\n如果您想为 `ESP-IoT-Solution` 中的组件或示例[贡献代码](https://docs.espressif.com/projects/esp-iot-solution/zh_CN/latest/contribute/index.html)，或者想基于 `ESP-IoT-Solution` 中的示例开发项目，您可以通过以下步骤下载 ESP-IoT-Solution 代码仓库:\n\n* 如果选择 `master` 版本，可使用以下指令获取代码：\n\n    ```\n    git clone --recursive https://github.com/espressif/esp-iot-solution\n    ```\n\n* 如果选择 `release/v2.0` 版本，可使用以下指令获取代码：\n\n    ```\n    git clone -b release/v2.0 --recursive https://github.com/espressif/esp-iot-solution\n    ```\n\n#### 编译和下载示例\n\n**我们强烈建议**您 [构建您的第一个项目](https://docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/index.html#build-your-first-project) 以熟悉 ESP-IDF 并确保环境已经设置正确。\n\n在 ESP-IoT-Solution 和 ESP-IDF 中构建和烧录示例没有区别。 在大多数情况下，您可以按照以下步骤在 ESP-IoT-Solution 中构建和烧录示例：\n\n1. 将当前目录更改为示例目录，例如 `cd examples/usb/host/usb_audio_player`；\n2. 运行 `idf.py set-target TARGET` 设置目标芯片。 例如 `idf.py set-target esp32s3` 将目标芯片设置为 `ESP32-S3`；\n3. 运行 `idf.py build` 来构建示例；\n4. 运行 `idf.py -p PORT flash monitor` 烧录示例，并查看串口输出。 例如 `idf.py -p /dev/ttyUSB0 flash monitor` 将示例烧录到 `/dev/ttyUSB0` 端口，并打开串口监视器。\n\n> 某些示例可能需要额外的步骤来设置 `ESP-IoT-Solution` 环境变量，您可以在 Linux/MacOS 中运行 `export IOT_SOLUTION_PATH=~/esp/esp-iot-solution` 或 `set IOT_SOLUTION_PATH=C:\\esp\\esp- iot-solution` 在 Windows 中设置环境。\n\n### 其它参考资源\n\n- 最新版的文档：https://docs.espressif.com/projects/esp-iot-solution/zh_CN ，该文档是由本仓库 [docs](./docs) 目录 构建得到；\n- ESP-IDF 编程指南 https://docs.espressif.com/projects/esp-idf/zh_CN ，请参考 ESP-IoT-Solution 依赖的版本；\n- 可以在 [ESP Component Registry](https://components.espressif.com/)中找到 `ESP-IoT-Solution` 中的组件和其他已注册的组件;\n- 可以前往 [esp32.com](https://www.esp32.com/) 论坛 提问，挖掘社区资源；\n- 如果你在使用中发现了错误或者需要新的功能，请先查看 [GitHub Issues](https://github.com/espressif/esp-iot-solution/issues)，确保该问题不会被重复提交；\n- 如果你有兴趣为 ESP-IoT-Solution 作贡献，请先阅读[贡献指南](./CONTRIBUTING.rst)。"
        },
        {
          "name": "codespell-ignore-list",
          "type": "blob",
          "size": 0.138671875,
          "content": "ALS\nALS\nANS\nans\nco-ordinate\nco-ordinates\ncompresed\nDOUT\ndout\nERRO\nges\ngien\nMOT\nregist\nser\nTE\nuncompressible\nwHeigh\nshoudn't\ndefinations\ninout\n"
        },
        {
          "name": "components",
          "type": "tree",
          "content": null
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 6.728515625,
          "content": "# SPDX-FileCopyrightText: 2022-2023 Espressif Systems (Shanghai) CO LTD\n#\n# SPDX-License-Identifier: Apache-2.0\n\nimport logging\nimport os\nimport pathlib\nimport re\nimport sys\nfrom datetime import datetime\nfrom typing import Callable, List, Optional, Tuple\n\nimport pytest\nfrom pytest import Config, FixtureRequest, Function, Session\nfrom pytest_embedded.plugin import multi_dut_argument, multi_dut_fixture\n\nIDF_VERSION = os.environ.get('IDF_VERSION')\nPYTEST_ROOT_DIR = str(pathlib.Path(__file__).parent)\nlogging.info(f'Pytest root dir: {PYTEST_ROOT_DIR}')\n\n\n@pytest.fixture(scope='session', autouse=True)\ndef idf_version() -> str:\n    if os.environ.get('IDF_VERSION'):\n        return os.environ.get('IDF_VERSION')\n    idf_path = os.environ.get('IDF_PATH')\n    if not idf_path:\n        logging.warning('Failed to get IDF_VERSION!')\n        return ''\n    version_path = os.path.join(os.environ['IDF_PATH'], 'tools/cmake/version.cmake')\n    regex = re.compile(r'^\\s*set\\s*\\(\\s*IDF_VERSION_([A-Z]{5})\\s+(\\d+)')\n    ver = {}\n    with open(version_path) as f:\n        for line in f:\n            m = regex.match(line)\n            if m:\n                ver[m.group(1)] = m.group(2)\n    return '{}.{}'.format(int(ver['MAJOR']), int(ver['MINOR']))\n\n\n@pytest.fixture(scope='session', autouse=True)\ndef session_tempdir() -> str:\n    _tmpdir = os.path.join(\n        os.path.dirname(__file__),\n        'pytest_log',\n        datetime.now().strftime('%Y-%m-%d_%H-%M-%S'),\n    )\n    os.makedirs(_tmpdir, exist_ok=True)\n    return _tmpdir\n\n\n@pytest.fixture\n@multi_dut_argument\ndef config(request: FixtureRequest) -> str:\n    config_marker = list(request.node.iter_markers(name='config'))\n    return config_marker[0].args[0] if config_marker else 'defaults'\n\n\n@pytest.fixture\n@multi_dut_argument\ndef app_path(request: FixtureRequest, test_file_path: str) -> str:\n    config_marker = list(request.node.iter_markers(name='app_path'))\n    if config_marker:\n        return config_marker[0].args[0]\n    else:\n        # compatible with old pytest-embedded parametrize --app_path\n        return request.config.getoption('app_path', None) or os.path.dirname(test_file_path)\n\n\n@pytest.fixture\ndef test_case_name(request: FixtureRequest, target: str, config: str) -> str:\n    if not isinstance(target, str):\n        target = '|'.join(sorted(list(set(target))))\n    if not isinstance(config, str):\n        config = '|'.join(sorted(list(config)))\n    return f'{target}.{config}.{request.node.originalname}'\n\n\n@pytest.fixture\n@multi_dut_fixture\ndef build_dir(\n    app_path: str,\n    target: Optional[str],\n    config: Optional[str],\n    idf_version: str\n) -> Optional[str]:\n    \"\"\"\n    Check local build dir with the following priority:\n\n    1. <app_path>/${IDF_VERSION}/build_<target>_<config>\n    2. <app_path>/${IDF_VERSION}/build_<target>\n    3. <app_path>/build_<target>_<config>\n    4. <app_path>/build\n    5. <app_path>\n\n    Args:\n        app_path: app path\n        target: target\n        config: config\n\n    Returns:\n        valid build directory\n    \"\"\"\n\n    assert target\n    assert config\n    check_dirs = []\n    if idf_version:\n        check_dirs.append(os.path.join(idf_version, f'build_{target}_{config}'))\n        check_dirs.append(os.path.join(idf_version, f'build_{target}'))\n    check_dirs.append(f'build_{target}_{config}')\n    check_dirs.append('build')\n    check_dirs.append('.')\n    for check_dir in check_dirs:\n        binary_path = os.path.join(app_path, check_dir)\n        if os.path.isdir(binary_path):\n            logging.info(f'find valid binary path: {binary_path}')\n            return check_dir\n\n        logging.warning(\n            f'checking binary path: {binary_path} ... missing ... try another place')\n\n    logging.error(\n        f'no build dir. Please build the binary \"python tools/build_apps.py {app_path}\" and run pytest again')\n    sys.exit(1)\n\n\n@pytest.fixture(autouse=True)\n@multi_dut_fixture\ndef junit_properties(\n    test_case_name: str, record_xml_attribute: Callable[[str, object], None]\n) -> None:\n    \"\"\"\n    This fixture is autoused and will modify the junit report test case name to <target>.<config>.<case_name>\n    \"\"\"\n    record_xml_attribute('name', test_case_name)\n\n\n##################\n# Hook functions #\n##################\n_idf_pytest_embedded_key = pytest.StashKey['IdfPytestEmbedded']\n\n\ndef pytest_addoption(parser: pytest.Parser) -> None:\n    base_group = parser.getgroup('idf')\n    base_group.addoption(\n        '--env',\n        help='only run tests matching the environment NAME.',\n    )\n\n\ndef pytest_configure(config: Config) -> None:\n    # Require cli option \"--target\"\n    help_commands = ['--help', '--fixtures', '--markers', '--version']\n    for cmd in help_commands:\n        if cmd in config.invocation_params.args:\n            target = 'unneeded'\n            break\n    else:\n        target = config.getoption('target')\n    if not target:\n        raise ValueError('Please specify one target marker via \"--target [TARGET]\"')\n\n    config.stash[_idf_pytest_embedded_key] = IdfPytestEmbedded(\n        target=target,\n        env_name=config.getoption('env'),\n    )\n    config.pluginmanager.register(config.stash[_idf_pytest_embedded_key])\n\n\ndef pytest_unconfigure(config: Config) -> None:\n    _pytest_embedded = config.stash.get(_idf_pytest_embedded_key, None)\n    if _pytest_embedded:\n        del config.stash[_idf_pytest_embedded_key]\n        config.pluginmanager.unregister(_pytest_embedded)\n\n\nclass IdfPytestEmbedded:\n    def __init__(\n        self,\n        target: Optional[str] = None,\n        env_name: Optional[str] = None,\n    ):\n        # CLI options to filter the test cases\n        self.target = target\n        self.env_name = env_name\n\n        self._failed_cases: List[\n            Tuple[str, bool, bool]\n        ] = []  # (test_case_name, is_known_failure_cases, is_xfail)\n\n    @pytest.hookimpl(tryfirst=True)\n    def pytest_sessionstart(self, session: Session) -> None:\n        if self.target:\n            self.target = self.target.lower()\n            session.config.option.target = self.target\n\n    # @pytest.hookimpl(tryfirst=True)\n    def pytest_collection_modifyitems(self, items: List[Function]) -> None:\n        # set default timeout 10 minutes for each case\n        for item in items:\n            # default timeout 5 mins\n            if 'timeout' not in item.keywords:\n                item.add_marker(pytest.mark.timeout(5 * 60))\n\n        # filter all the test cases with \"--target\"\n        if self.target:\n            def item_targets(item): return [m.args[0] for m in item.iter_markers(name='target')]\n            items[:] = [item for item in items if self.target in item_targets(item)]\n\n        # filter all the test cases with \"--env\"\n        if self.env_name:\n            def item_envs(item): return [m.args[0] for m in item.iter_markers(name='env')]\n            items[:] = [item for item in items if self.env_name in item_envs(item)]\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "issue_template.md",
          "type": "blob",
          "size": 3.32421875,
          "content": "----------------------------- Delete below -----------------------------\n\nIf your issue is a general question, starts similar to \"How do I..\", or is related to 3rd party development kits/libs, please discuss this on our community forum at esp32.com instead.\n\nINSTRUCTIONS\n============\n\nBefore submitting a new issue, please follow the checklist and try to find the answer.\n\n- [ ] I have read the documentation [ESP-IDF Programming Guide](https://docs.espressif.com/projects/esp-idf/en/stable/) and the issue is not addressed there.\n- [ ] I have updated my IDF branch (master or release) to the latest version and checked that the issue is present there.\n- [ ] I have searched the issue tracker for a similar issue and not found a similar issue.\n\nIf the issue cannot be solved after the steps before, please follow these instructions so we can get the needed information to help you in a quick and effective fashion.\n\n1. Fill in all the fields under **Environment** marked with [ ] by picking the correct option for you in each case and deleting the others.\n2. Describe your problem.\n3. Include [debug logs on the monitor](https://docs.espressif.com/projects/esp-idf/en/stable/get-started/idf-monitor.html#automatically-decoding-addresses) or the [coredump](https://docs.espressif.com/projects/esp-idf/en/stable/api-guides/core_dump.html).\n4. Provide more items under **Other items if possible** can help us better locate your problem.\n5. Use markup (buttons above) and the Preview tab to check what the issue will look like.\n6. Delete these instructions from the above to the below marker lines before submitting this issue.\n\n----------------------------- Delete above -----------------------------\n\n## Environment\n\n- Development Kit:      [ESP32-Wrover-Kit|ESP32-DevKitC|ESP32-PICO-Kit|ESP32-LyraT|ESP32-LyraTD-MSC|none]\n- Kit version (for WroverKit/PicoKit/DevKitC): [v1|v2|v3|v4]\n- Module or chip used:  [ESP32-WROOM-32|ESP32-WROOM-32D|ESP32-WROOM-32U|ESP32-WROVER|ESP32-WROVER-I|ESP32-WROVER-B|ESP32-WROVER-IB|ESP32-SOLO-1|ESP32-PICO-D4|ESP32]\n- IDF version (run ``git describe --tags`` to find it): \n    // v3.2-dev-1148-g96cd3b75c\n- Build System:         [Make|CMake]\n- Compiler version (run ``xtensa-esp32-elf-gcc --version`` to find it):\n    // 1.22.0-80-g6c4433a\n- Operating System:     [Windows|Linux|macOS]\n- Power Supply:         [USB|external 5V|external 3.3V|Battery]\n\n## Problem Description\n\n//Detailed problem description goes here.\n\n### Expected Behavior\n\n### Actual Behavior\n\n### Steps to repropduce\n\n1. step1\n2. ...\n\n// It helps if you attach a picture of your setup/wiring here.\n\n\n### Code to reproduce this issue\n\n```cpp\n// the code should be wrapped in the ```cpp tag so that it will be displayed better.\n#include \"esp_log.h\"\n\nvoid app_main()\n{\n    \n}\n\n```\n// If your code is longer than 30 lines, [GIST](https://gist.github.com) is preferred.\n\n## Debug Logs\n\n```\nDebug log goes here, should contain the backtrace, as well as the reset source if it is a crash.\nPlease copy the plain text here for us to search the error log. Or attach the complete logs but leave the main part here if the log is *too* long.\n```\n\n## Other items if possible\n\n- [ ] sdkconfig file (attach the sdkconfig file from your project folder)\n- [ ] elf file in the ``build`` folder (**note this may contain all the code details and symbols of your project.**)\n- [ ] coredump (This provides stacks of tasks.) \n\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 1.0517578125,
          "content": "[pytest]\n# exclude examples/ota/simple_ota_example/pytest_simple_ota.py\nnorecursedirs = examples/ota/*\n# only the files with prefix `pytest_` would be recognized as pytest test scripts.\npython_files = pytest_*.py\n\n# set traceback to \"short\" to prevent the overwhelming tracebacks\naddopts =\n  -s\n  --embedded-services esp,idf\n  --tb short\n  --skip-check-coredump y\n\n# ignore PytestExperimentalApiWarning for record_xml_attribute\nfilterwarnings =\n  ignore::_pytest.warning_types.PytestExperimentalApiWarning\n\n\nmarkers =\n  # target markers\n  target: target chip name (--target)\n  # env markers\n  env: target test env name (--env)\n  # config markers\n  config: choose specific bins built by `sdkconfig.ci.<config>`\n  # app_path markers\n  app_path: choose specific app_path, <app_path>[/build_xxx]\n\n\n# log related\nlog_cli = True\nlog_cli_level = INFO\nlog_cli_format = %(asctime)s %(levelname)s %(message)s\nlog_cli_date_format = %Y-%m-%d %H:%M:%S\n\n# junit related\njunit_family = xunit1\n\n\n## log all to `system-out` when case fail\njunit_logging = stdout\njunit_log_passing_tests = False\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}