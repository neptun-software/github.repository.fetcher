{
  "metadata": {
    "timestamp": 1736710154428,
    "page": 821,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alibaba/xquic",
      "stars": 1740,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0556640625,
          "content": "build/\nbss/\n*.swp\nthird_party/\n.idea/\ncmake-build-debug/\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 10.7919921875,
          "content": "# Copyright (c) 2022, Alibaba Group Holding Limited\n\ncmake_minimum_required (VERSION 2.6)\nproject (xquic)\n\nset (xquic_VERSION_MAJOR 0)\nset (xquic_VERSION_MINOR 1)\nset (CMAKE_MODULE_PATH \"${CMAKE_CURRENT_SOURCE_DIR}/cmake\")\n\noption (XQC_ENABLE_BBR2 \"enable bbr2\" OFF)\noption (XQC_ENABLE_COPA \"enable copa\" OFF)\noption (XQC_ENABLE_RENO \"enable reno\" OFF)\noption (XQC_ENABLE_UNLIMITED \"enable unlimited cc\" OFF)\noption (XQC_ENABLE_MP_INTEROP \"enable MPQUIC interop\" OFF)\noption (XQC_NO_PID_PACKET_PROCESS \"do not expose path_id in xqc_engine_packet_process\" OFF)\noption (XQC_PROTECT_POOL_MEM \"enable write protection for pool memory (for debug)\" OFF)\noption (XQC_COMPAT_DUPLICATE \"qpack compat dup\" OFF)\noption (XQC_ENABLE_FEC \"enable fec\" OFF)\noption (XQC_ENABLE_XOR \"enable fec scheme xor\" OFF)\noption (XQC_ENABLE_RSC \"enable fec scheme reed-solomon code\" OFF)\noption (XQC_ENABLE_PKM \"enable fec scheme packet mask\" OFF)\n\nif(NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE Release)\nendif()\n\n\n# SSL lib type, xquic support babassl and boringssl interfaces\nif(NOT SSL_TYPE)\n    set(SSL_TYPE \"babassl\")\n    message(NOTICE \"-- SSL_TYPE not set, use default babassl\")\nendif()\n\nif(${SSL_TYPE} MATCHES \"babassl\")\n    # PATH of ssl, by default XQUIC will use babassl installed in\n    # /usr/local/babassl if SSL_PATH is not set\n    if(NOT SSL_PATH)\n        set(SSL_PATH \"/usr/local/babassl\")\n        message(NOTICE \"-- SSL_PATH not set, use default ${SSL_PATH}\")\n    endif()\n\nelseif(${SSL_TYPE} MATCHES \"boringssl\")\n    add_definitions(-DNOCRYPT=1)\n    # PATH of ssl, by default XQUIC will use boringssl in third_party\n    if(NOT SSL_PATH)\n        set(SSL_PATH ${CMAKE_CURRENT_SOURCE_DIR}/third_party/boringssl)\n        message(NOTICE \"-- SSL_PATH not set, use default ${SSL_PATH}\")\n    endif()\nendif()\n\n# Users can use both SSL_DIR or SSL_PATH to specify the ssl path to find the ssl\n# module, if both are defined, SSL_DIR will be used.\nif(NOT SSL_DIR)\n    if(NOT SSL_PATH)\n        # at least SSL_DIR or SSL_PATH shall be set\n        message(FATAL_ERROR \"SSL_PATH not set\")\n    else()\n        set(SSL_DIR ${SSL_PATH})\n    endif()\nendif()\n\n\n# find ssl module from SSL_DIR if SSL_INC_PATH AND SSL_LIB_PATH not set.\nif(NOT SSL_INC_PATH AND NOT SSL_LIB_PATH)\n    find_package(SSL)\n\n    if(NOT SSL_FOUND)\n        message(FATAL_ERROR \"ssl module not found\")\n    endif(NOT SSL_FOUND)\n\n    # compat with elder macros\n    if(SSL_DYNAMIC)\n        message(NOTICE \"-- Building with dynamic libssl\")\n        set(SSL_LIB_PATH ${SSL_LIBRARIES})\n    else()\n        message(NOTICE \"-- Building with static libssl\")\n        set(SSL_LIB_PATH ${SSL_LIBRARIES_STATIC})\n    endif()\n    set(SSL_INC_PATH ${SSL_INCLUDE_DIR})\n\nelse()\n    if(NOT EXISTS ${SSL_INC_PATH})\n        message(FATAL_ERROR \"ssl include path not found\")\n    endif()\n\n    foreach(LIB IN LISTS SSL_LIB_PATH)\n        if(NOT EXISTS ${LIB})\n            message(FATAL_ERROR \"ssl lib not found ${LIB}\")\n        endif()\n    endforeach()\n\nendif()\n\nMESSAGE(\"-- SSL_TYPE: ${SSL_TYPE}\")\nMESSAGE(\"-- SSL_PATH: ${SSL_PATH}\")\nMESSAGE(\"-- SSL_LIB_PATH: ${SSL_LIB_PATH}\")\nMESSAGE(\"-- SSL_INC_PATH: ${SSL_INC_PATH}\")\n\n\n# C_FLAGS\nif(ANDROID_ABI OR PLATFORM MATCHES \"mac\")\n    if(PLATFORM STREQUAL \"mac32\")\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -m32\")\n    endif()\nendif()\n\nif(NOT (CMAKE_C_COMPILER_ID MATCHES \"MSVC\" OR CMAKE_CXX_COMPILER_ID MATCHES \"MSVC\"))\n    set(CMAKE_C_FLAGS_OPTION \"-Werror -Wno-unused -Wno-pointer-sign -Wno-format-security \")\nendif()\n\n# C_FLAGS\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -g -O2 -std=gnu11 -Wall ${CMAKE_C_FLAGS_OPTION} -DNDEBUG_PRINT -DNPRINT_MALLOC \")\nset(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS} -g -O0 -std=gnu11 -Wall ${CMAKE_C_FLAGS_OPTION} -DNDEBUG_PRINT -DNPRINT_MALLOC -DXQC_DEBUG \")\n\n\nif(CMAKE_SYSTEM_NAME MATCHES \"Windows\")\n    add_definitions(-DXQC_SYS_WINDOWS=1)\n    set(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} /Zi\")\nendif()\n\n\n# configure file\nconfigure_file (\n    \"${CMAKE_CURRENT_SOURCE_DIR}/xqc_configure.h.in\"\n    \"${CMAKE_CURRENT_SOURCE_DIR}/include/xquic/xqc_configure.h\"\n)\n\ninclude_directories(include\n    ${CMAKE_CURRENT_SOURCE_DIR}\n    ${SSL_INC_PATH}\n    ${CMAKE_SOURCE_DIR}\n)\n\noption (XQC_PRINT_SECRET \"enable TLS secret printing\" OFF)\n\n# print tls traffic secret in keylog\nif(XQC_PRINT_SECRET)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DXQC_PRINT_SECRET\")\nendif()\n\n# compat with the stateless reset before version v1.6.0\nif(XQC_COMPAT_GENERATE_SR_PKT)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DXQC_COMPAT_GENERATE_SR_PKT\")\nendif()\n\n# print only error log\nif(XQC_ONLY_ERROR_LOG)\n    set(CMAKE_C_FLAGS   \"${CMAKE_C_FLAGS} -DXQC_ONLY_ERROR_LOG \")\nendif()\n\n# enable event log\nif(XQC_ENABLE_EVENT_LOG)\n    set(CMAKE_C_FLAGS   \"${CMAKE_C_FLAGS} -DXQC_ENABLE_EVENT_LOG \")\nendif()\n\n# sendmmsg\nif(XQC_SUPPORT_SENDMMSG_BUILD)\n    add_definitions(-DXQC_SUPPORT_SENDMMSG)\nendif()\n\n# coverity\nif(GCOV STREQUAL \"on\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fprofile-arcs -ftest-coverage\")\nendif()\n\n\n\n# testing\nif(XQC_ENABLE_TESTING)\n    add_subdirectory(tests)\n    add_subdirectory(demo)\n    add_subdirectory(mini)\nendif(XQC_ENABLE_TESTING)\n\n\n# http3/qpack source\nset(\n    HTTP3_SOURCES\n    \"src/http3/xqc_h3_conn.c\"\n    \"src/http3/xqc_h3_stream.c\"\n    \"src/http3/xqc_h3_request.c\"\n    \"src/http3/frame/xqc_h3_frame.c\"\n    \"src/http3/xqc_h3_header.c\"\n    \"src/http3/xqc_h3_ctx.c\"\n    \"src/http3/xqc_h3_defs.c\"\n    \"src/http3/qpack/xqc_qpack.c\"\n    \"src/http3/qpack/xqc_prefixed_int.c\"\n    \"src/http3/qpack/xqc_prefixed_str.c\"\n    \"src/http3/qpack/xqc_decoder.c\"\n    \"src/http3/qpack/xqc_encoder.c\"\n    \"src/http3/qpack/xqc_rep.c\"\n    \"src/http3/qpack/xqc_ins.c\"\n    \"src/http3/qpack/stable/xqc_stable.c\"\n    \"src/http3/qpack/dtable/xqc_dtable.c\"\n    \"src/http3/xqc_h3_ext_dgram.c\"\n    \"src/http3/xqc_h3_ext_bytestream.c\"\n)\n\n# Transport source\nset(\n    TRANSPORT_SOURCES\n    \"src/transport/xqc_engine.c\"\n    \"src/transport/xqc_conn.c\"\n    \"src/transport/xqc_client.c\"\n    \"src/transport/xqc_cid.c\"\n    \"src/transport/xqc_packet_parser.c\"\n    \"src/transport/xqc_frame_parser.c\"\n    \"src/transport/xqc_stream.c\"\n    \"src/transport/xqc_datagram.c\"\n    \"src/transport/xqc_packet_out.c\"\n    \"src/transport/xqc_packet_in.c\"\n    \"src/transport/xqc_send_ctl.c\"\n    \"src/transport/xqc_send_queue.c\"\n    \"src/transport/xqc_packet.c\"\n    \"src/transport/xqc_frame.c\"\n    \"src/transport/xqc_recv_record.c\"\n    \"src/transport/xqc_pacing.c\"\n    \"src/transport/xqc_utils.c\"\n    \"src/transport/xqc_multipath.c\"\n    \"src/transport/xqc_defs.c\"\n    \"src/transport/xqc_transport_params.c\"\n    \"src/transport/xqc_quic_lb.c\"\n    \"src/transport/xqc_timer.c\"\n    \"src/transport/xqc_reinjection.c\"\n    \"src/transport/reinjection_control/xqc_reinj_default.c\"\n    \"src/transport/reinjection_control/xqc_reinj_deadline.c\"\n    \"src/transport/reinjection_control/xqc_reinj_dgram.c\"\n    \"src/transport/scheduler/xqc_scheduler_minrtt.c\"\n    \"src/transport/scheduler/xqc_scheduler_common.c\"\n    \"src/transport/scheduler/xqc_scheduler_backup.c\"\n    \"src/transport/scheduler/xqc_scheduler_backup_fec.c\"\n    \"src/transport/scheduler/xqc_scheduler_rap.c\"\n)\n\nif(XQC_ENABLE_MP_INTEROP)\n    set(\n        TRANSPORT_SOURCES\n        ${TRANSPORT_SOURCES}\n        \"src/transport/scheduler/xqc_scheduler_interop.c\"\n    )\nendif()\n\n\n# fec framework\nset(\n    FEC_FRAMEWORK_SOURCE\n    \"src/transport/xqc_fec.c\"\n    \"src/transport/xqc_fec_scheme.c\"\n    \"src/transport/fec_schemes/xqc_galois_calculation.c\"\n)\n\nif(XQC_ENABLE_XOR)\n    set(\n        FEC_FRAMEWORK_SOURCE\n        ${FEC_FRAMEWORK_SOURCE}\n        \"src/transport/fec_schemes/xqc_xor.c\"\n    )\nendif()\n\nif(XQC_ENABLE_RSC)\n    set(\n        FEC_FRAMEWORK_SOURCE\n        ${FEC_FRAMEWORK_SOURCE}\n        \"src/transport/fec_schemes/xqc_reed_solomon.c\"\n    )\nendif()\n\nif(XQC_ENABLE_PKM)\n    set(\n        FEC_FRAMEWORK_SOURCE\n        ${FEC_FRAMEWORK_SOURCE}\n        \"src/transport/fec_schemes/xqc_packet_mask.c\"\n    )\nendif()\n\nif(XQC_ENABLE_FEC)\n    set(\n        TRANSPORT_SOURCES\n        ${TRANSPORT_SOURCES}\n        ${FEC_FRAMEWORK_SOURCE}\n    )\nendif()\n\n# TLS source\nset (\n    TLS_SOURCE\n    \"src/tls/xqc_hkdf.c\"\n    \"src/tls/xqc_null_crypto.c\"\n    \"src/tls/xqc_crypto.c\"\n    \"src/tls/xqc_tls_ctx.c\"\n    \"src/tls/xqc_tls.c\"\n)\n\nif(${SSL_TYPE} MATCHES \"boringssl\")\n    set(\n        TLS_SOURCE\n        ${TLS_SOURCE}\n        \"src/tls/boringssl/xqc_hkdf_impl.c\"\n        \"src/tls/boringssl/xqc_crypto_impl.c\"\n        \"src/tls/boringssl/xqc_ssl_if_impl.c\"\n    )\nelseif(${SSL_TYPE} MATCHES \"babassl\")\n    set(\n        TLS_SOURCE\n        ${TLS_SOURCE}\n        \"src/tls/babassl/xqc_hkdf_impl.c\"\n        \"src/tls/babassl/xqc_crypto_impl.c\"\n        \"src/tls/babassl/xqc_ssl_if_impl.c\"\n    )\nendif()\n\n# common source\nset(\n    COMMON_SOURCES\n    \"src/common/xqc_random.c\"\n    \"src/common/xqc_str.c\"\n    \"src/common/xqc_log.c\"\n    \"src/common/xqc_log_event_callback.c\"\n    \"src/common/xqc_time.c\"\n    \"src/common/utils/huffman/xqc_huffman_code.c\"\n    \"src/common/utils/huffman/xqc_huffman.c\"\n    \"src/common/utils/vint/xqc_discrete_int_parser.c\"\n    \"src/common/utils/vint/xqc_variable_len_int.c\"\n    \"src/common/utils/ringarray/xqc_ring_array.c\"\n    \"src/common/utils/ringmem/xqc_ring_mem.c\"\n    \"src/common/utils/2d_hash/xqc_2d_hash_table.c\"\n    \"src/common/utils/var_buf/xqc_var_buf.c\"\n\n)\n\n# congestion control\nset(\n    CONGESTION_CONTROL_SOURCES\n    \"src/congestion_control/xqc_cubic.c\"\n    \"src/congestion_control/xqc_bbr.c\"\n    \"src/congestion_control/xqc_window_filter.c\"\n    \"src/congestion_control/xqc_sample.c\"\n)\n\nif(XQC_ENABLE_RENO)\n    set(\n        CONGESTION_CONTROL_SOURCES\n        ${CONGESTION_CONTROL_SOURCES}\n        \"src/congestion_control/xqc_new_reno.c\"\n    )\nendif()\n\nif(XQC_ENABLE_BBR2)\n    set(\n        CONGESTION_CONTROL_SOURCES\n        ${CONGESTION_CONTROL_SOURCES}\n        \"src/congestion_control/xqc_bbr2.c\"\n    )\nendif()\n\nif(XQC_ENABLE_COPA)\n    set(\n        CONGESTION_CONTROL_SOURCES\n        ${CONGESTION_CONTROL_SOURCES}\n        \"src/congestion_control/xqc_copa.c\"\n    )\nendif()\n\nif(XQC_ENABLE_UNLIMITED)\n    set(\n        CONGESTION_CONTROL_SOURCES\n        ${CONGESTION_CONTROL_SOURCES}\n        \"src/congestion_control/xqc_unlimited_cc.c\"\n    )\nendif()\n\n\n# xquic source\nset (\n    XQC_SOURCE\n    ${XQC_SOURCE}\n    ${HTTP3_SOURCES}\n    ${TRANSPORT_SOURCES}\n    ${TLS_SOURCE}\n    ${COMMON_SOURCES}\n    ${CONGESTION_CONTROL_SOURCES}\n)\n\n\n\n# target\nadd_library(\n    xquic-static\n    STATIC\n    ${XQC_SOURCE}\n)\n\nadd_library(\n    xquic\n    SHARED\n    ${XQC_SOURCE}\n)\n\nif(PLATFORM MATCHES \"mac\")\n    target_link_libraries(\n        xquic\n        \"-ldl -Wl,-all_load\"\n        ${SSL_LIB_PATH}\n        \"-Wl\"\n        -lpthread\n        -lstdc++\n    )\nelse()\n    target_link_libraries(\n        xquic\n        \"-ldl -Wl,--whole-archive -Wl,--version-script=${CMAKE_CURRENT_SOURCE_DIR}/scripts/xquic.lds\"\n        ${SSL_LIB_PATH}\n        \"-Wl,--no-whole-archive\"\n        -lpthread\n    )\nendif()\n\n\n# Strip binary for release builds\nif(CMAKE_BUILD_TYPE STREQUAL MinSizeRel)\n    add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD\n            COMMAND ${CMAKE_STRIP} libxquic.so)\nendif()\n\n"
        },
        {
          "name": "CMakeOptions.txt",
          "type": "blob",
          "size": 0.490234375,
          "content": "# CMakeOptions\n\noption(ENABLE_DEBUG                     \"Turn on debug output\"  ON)\noption(XQC_BUILD_OPENSSL                \"Turn on OpenSSL\"       ON)\noption(SSL_TYPE                         \"Using BoringSSL\"       boringssl)\noption(SSL_DYNAMIC                      \"Use dynamic libssl\"    OFF)\noption(XQC_ENABLE_TESTING               \"Enable Testing\"        OFF)\noption(XQC_BUILD_SAMPLE                 \"Build Sample\"          OFF)\noption(GCOV                             \"Test Coverage\"         OFF)"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2900390625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at xquic@alibaba-inc.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.7255859375,
          "content": "# Contributing to XQUIC\n\n> [简体中文文档 CONTRIBUTING-zh-CN](./docs/docs-zh/CONTRIBUTING-zh.md)\n\nThank you for investing your time in contributing to our project! All types of contributions are encouraged and valued. As a contributor, here are the guidelines we would like you to follow:\n\n- [Contributing to XQUIC](#contributing-to-xquic)\n  - [Code of Conduct](#code-of-conduct)\n  - [Submitting an Issue](#submitting-an-issue)\n    - [Questions](#questions)\n    - [Bugs](#bugs)\n    - [Security Vulnerability](#security-vulnerability)\n    - [New Features](#new-features)\n  - [Submitting a Pull Request](#submitting-a-pull-request)\n    - [Contributor License Agreement (CLA)](#contributor-license-agreement-cla)\n    - [Contributing Documentation](#contributing-documentation)\n    - [Contributing Code](#contributing-code)\n      - [Initial Setup](#initial-setup)\n      - [Working Branch](#working-branch)\n      - [Commit Messages](#commit-messages)\n      - [Tests](#tests)\n      - [Rebase and Squash](#rebase-and-squash)\n      - [Pull Request](#pull-request)\n      - [Code Review](#code-review)\n  - [Code Style](#code-style)\n  - [All-contributors](#all-contributors)\n\n## Code of Conduct\n\nPlease read and follow our [Code of Conduct](CODE_OF_CONDUCT.md) to keep our community approachable and respectable.\n\n## Submitting an Issue\n\nPlease follow the [template](https://github.com/alibaba/xquic/issues/new) for reporting any issues.\n\n### Questions\n\nGitHub Discussions is an open forum for conversation among maintainers and the community. If you have a question about this project, how to use it, or just need clarification about something, please open a new Discussion topic in our [discussion forums](https://github.com/alibaba/xquic/discussions).\n\n### Bugs\n\nIf you run into an error or bug with the project, you can help us by submitting a GitHub Issue.\nPlease try to create bug reports that are:\n* _Reproducible_. Include steps to reproduce the problem.\n* _Specific_. Include as much detail as possible: which version, what environment, etc.\n* _Unique_. Do not duplicate existing opened issues.\n* _Scoped to a Single Bug_. One bug per report.\n\n### Security Vulnerability\n\nVulnerability information is extremely sensitive, please do not open a GitHub Issue.\nIf you have discovered potential security vulnerability in this project, please send an e-mail to xquic@alibaba-inc.com. You can review our [security policy](https://github.com/alibaba/xquic/security/policy) for more details.\n\n### New Features\n\nIf the project doesn't do something you need or want it to do, you can submit an Github Issue to request a new feature. Please try and be clear about why existing features and alternatives would not work for you.\n\nIf you are suggesting a feature that you are intending to implement, please create an issue first to communicate your proposal so that the community can review and provide feedback. Getting early feedback will help ensure your implementation work is accepted by the community. This will also allow us to better coordinate our efforts and minimize duplicated effort.\n\n## Submitting a Pull Request\n\n### Contributor License Agreement (CLA)\n\nBefore we accept a non-trivial patch or pull request we will need you to sign the [Contributor License Agreement](https://cla-assistant.io/alibaba/xquic). Signing the contributor’s agreement does not grant anyone commit rights to the main repository, but it does mean that we can accept your contributions, and you will get an author credit if we do. Active contributors might be asked to join the core team, and given the ability to merge pull requests.\n\n### Contributing Documentation\n\nDocumentation is an important part of our project. If you wish to help us improve, update or translate the documentation, please don’t hesitate! We welcome your participation to help make the documentation better.\n\nDocumentation undergoes the same review process as code. Feel free to submit a Pull Request even if you're just rewording a sentence to be more clear, or fixing a typo.\n\n### Contributing Code\n\nWe use the \"Fork and Pull\" model to contribute to the XQUIC codebase.\n\nA rough outline of an ideal contributors' workflow is as follows:\n\n#### Initial Setup\n\nFor instructions regarding development environment setup, please visit the quickstart guide.\n\n#### Working Branch\n\nFor each new feature, create a working branch from where to base the contribution. Mostly, it's the main branch.\n\n```bash\ngit checkout -b {branch-name} main\n```\n\n_Branch name_:\n* `dev/${feature_name}`: New feature\n* `fix/${function_or_module_name}`: Bug fix\n* `perf/${optimization_item}`: Performance optimization or other enhancement\n* `doc/${documentation_name}`: Documentation\n\n#### Commit Messages\n\nEach commit message consists of a header, a body and a footer. The header has a special format that includes a type and a subject:\n\n_Template_:\n\n```bash\n[<type>]: <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n```\n\n_Type_:\n* `+`: Add a new feature / a new requirement\n* `-`: Remove deprecated code or functionality\n* `=`: Consistent with previous behaviour, generally representing code optimisation\n* `~`: Changed behaviour, sometimes fixing bugs can also change existing behaviour\n\n_Example_:\n\n```bash\n[~] Update CONTRIBUTING.md\n```\n\n#### Tests\n\nRun the full test suite and ensure that all existing tests pass.\n\nWrite sufficient relevant tests for the code being added or changed, to verify that your contribution works as expected. \n\n#### Rebase and Squash\n\nIf any commits have been made to the upstream main branch, you should rebase your development branch so that merging it will be a simple fast-forward that won't require any conflict resolution work.\n\n```bash\ngit checkout {branch-name} \ngit rebase main\n```\n\nNow, it may be desirable to squash some of your smaller commits down into a small number of larger more cohesive commits. You can do this with an interactive rebase:\n\n```bash\ngit rebase -i main\n```\n\nThis will open up a text editor where you can specify which commits to squash.\n\n#### Pull Request\n\nOnce you've validated that all continuous-integration checks have passed, go to the page for your fork on GitHub, select your development branch, and click the pull request button.\n\nIf your PR is connected to an open issue, add a line in your PR's description that says `Fixes: #123` , where `#123` is the number of the issue you're fixing.\n\n#### Code Review\n\nAll code submissions will be rigorously reviewed and tested. Reviewers may have questions, check back on your PR to keep up with the conversation.\n\nBefore merging a PR, squash any fix review feedback, typo, merged, and rebased sorts of commits. The final commit message should be clear and concise.\n\n## Code Style\n\nWe follow the [Nginx code style](http://nginx.org/en/docs/dev/development_guide.html#code_style), with the following points requiring special attention.\n\n* maximum text width is 80 characters\n* indentation is 4 spaces\n* no tabs, no trailing spaces\n* list elements on the same line are separated with spaces\n* Macro names start from xqc_ or XQC_ (or more specific) prefix. Macro names for constants are uppercase. Parameterized macros and macros for initializers are lowercase.\n\n* “//” comments are not used\n* multi-line comments are formatted like this:\n\n```C\n/*\n * The red-black tree code is based on the algorithm described in\n * the \"Introduction to Algorithms\" by Cormen, Leiserson and Rivest.\n */\n \n/* find the server configuration for the address:port */\n```\n\n* All functions (even static ones) should have prototypes. Prototypes include argument names. Long prototypes are wrapped with a single indentation on continuation lines:\n* The function name in a definition starts with a new line. The function body opening and closing braces are on separate lines. The body of a function is indented. \n* There is no space after the function name and opening parenthesis. Long function calls are wrapped such that continuation lines start from the position of the first function argument. If this is impossible, format the first continuation line such that it ends at position 79.\n\n* Binary operators except “.” and “−>” should be separated from their operands by one space. Unary operators and subscripts are not separated from their operands by spaces:\n* If an expression does not fit into single line, it is wrapped. The preferred point to break a line is a binary operator. The continuation line is lined up with the start of expression.\n\n* The “if” keyword is separated from the condition by one space. Opening brace is located on the same line, or on a dedicated line if the condition takes several lines. Closing brace is located on a dedicated line, optionally followed by “else if / else”. Usually, there is an empty line before the “else if / else” part. Similar formatting rules are applied to “do” and “while” loops.\n* The “switch” keyword is separated from the condition by one space. Opening brace is located on the same line. Closing brace is located on a dedicated line. The “case” keywords are lined up with “switch”.\n\n## All-contributors\n\nXQUIC participants: Taobao Technology Department, Damo Academy XG Lab, and other teams from Alibaba Group who provided help in deployment of this project.\n\nIn no particular order, thanks to these excellent individuals who contributed code to XQUIC or provided great help to the survival of this project.\n\n* 左春伟(平兴)\n* 胡军伟(苍茫)\n* 施威(不达)\n* 洪海(孤星)\n* 李鼎(哲良)\n* 杜叶飞(淮叶)\n* 朱宇(黎叔)\n* 罗凯(懿彬)\n* 曾柯(毅丝)\n* 徐盟欣(象谦)\n* Bai Shi(白石)\n* 周瑞琪(凼凼)\n* 李亮(海苍)\n* @chinsyo\n* @L1MeN9Yu\n* @flx413\n* @robinhzp\n* @contrun\n* @eltociear\n* @happyomg\n* @driventokill\n* @chenzhanfeng\n* @CherylQL\n* @wangweiwei1188\n* @yunwei37\n* @keengo99\n* @ruanshanshan\n* @alagoutte\n* @MPK1\n* @tang-mouren\n\nThis list will be continuously updated. Contributions are welcome!\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.0947265625,
          "content": "# XQUIC\n<img src=\"docs/images/xquic_logo.png\" alt=\"xquic logo\" width=585.9 height=309.1/>\n\n![GitHub](https://img.shields.io/github/license/alibaba/xquic)\n[![Build](https://github.com/alibaba/xquic/actions/workflows/build.yml/badge.svg)](https://github.com/alibaba/xquic/actions/workflows/build.yml)\n[![CodeQL](https://github.com/alibaba/xquic/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/alibaba/xquic/actions/workflows/codeql-analysis.yml)\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/485e758edd98409bb7a51cbb803838c4)](https://www.codacy.com/gh/alibaba/xquic/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=alibaba/xquic&amp;utm_campaign=Badge_Grade)\n[![Codacy Badge](https://app.codacy.com/project/badge/Coverage/485e758edd98409bb7a51cbb803838c4)](https://www.codacy.com/gh/alibaba/xquic/dashboard?utm_source=github.com&utm_medium=referral&utm_content=alibaba/xquic&utm_campaign=Badge_Coverage)\n![Platforms](https://img.shields.io/badge/platform-Android%20%7C%20iOS%20%7C%20Linux%20%7C%20macOS-blue)\n\n> [简体中文文档 README-zh-CN](https://github.com/alibaba/xquic/blob/main/docs/docs-zh/README-zh.md)\n\n## Introduction\n\nXQUIC Library released by Alibaba is …\n\n… **a client and server implementation of QUIC and HTTP/3 as specified by the IETF.** Currently supported QUIC versions are v1 and draft-29.\n\n… **OS and platform agnostic.** It currently supports Android, iOS, HarmonyOS, Linux, macOS and Windows(v1.2.0). Most of the code is used in our own products, and has been tested at scale on android, iOS apps, as well as servers.\n\n… **still in active development.** [Interoperability](https://interop.seemann.io/) is regularly tested with other QUIC implementations.\n\n### Features\n\n[![](https://img.shields.io/static/v1?label=RFC&message=9000&color=brightgreen)](https://tools.ietf.org/html/rfc9000)\n[![](https://img.shields.io/static/v1?label=RFC&message=9001&color=brightgreen)](https://tools.ietf.org/html/rfc9001)\n[![](https://img.shields.io/static/v1?label=RFC&message=9002&color=brightgreen)](https://tools.ietf.org/html/rfc9002)\n[![](https://img.shields.io/static/v1?label=RFC&message=9114&color=brightgreen)](https://tools.ietf.org/html/rfc9114)\n[![](https://img.shields.io/static/v1?label=RFC&message=9204&color=brightgreen)](https://tools.ietf.org/html/rfc9204)\n[![](https://img.shields.io/static/v1?label=RFC&message=9221&color=brightgreen)](https://datatracker.ietf.org/doc/html/rfc9221)\n\n\n[![](https://img.shields.io/static/v1?label=draft-13&message=QUIC-LB&color=9cf)](https://tools.ietf.org/html/draft-ietf-quic-load-balancers-13)\n[![](https://img.shields.io/static/v1?label=draft-05&message=Multipath-QUIC&color=9cf)](https://tools.ietf.org/html/draft-ietf-quic-multipath-05)\n[![](https://img.shields.io/static/v1?label=draft-06&message=Multipath-QUIC&color=9cf)](https://tools.ietf.org/html/draft-ietf-quic-multipath-06)\n[![](https://img.shields.io/static/v1?label=draft-07&message=QUIC-Qlog&color=9cf)](https://datatracker.ietf.org/doc/html/draft-ietf-quic-qlog-main-schema-07)\n\n#### Standardized Features\n\n* All big features conforming with [RFC 9000](https://www.rfc-editor.org/rfc/rfc9000), [RFC9001](https://www.rfc-editor.org/rfc/rfc9001), [RFC9002](https://www.rfc-editor.org/rfc/rfc9002), [RFC9114](https://www.rfc-editor.org/rfc/rfc9114) and [RFC9204](https://www.rfc-editor.org/rfc/rfc9204), including the interface between QUIC and TLS, 0-RTT connection establishment, HTTP/3 and QPACK.\n* ALPN Extension conforming with [RFC7301](https://www.rfc-editor.org/rfc/rfc7301)\n\n#### Not Yet Standardized Features\n\n* [Multipath QUIC](https://tools.ietf.org/html/draft-ietf-quic-multipath-04)\n* [QUIC-LB](https://tools.ietf.org/html/draft-ietf-quic-load-balancers-13)\n\n#### Library Features\n\n* Pluggable congestion control: NewReno, Cubic, BBR and BBRv2, ...\n* Pluggable cryptography, integration with BoringSSL and BabaSSL\n* Cross-platform implementation, support Android, iOS, HarmonyOS, Linux, macOS and Windows(v1.2.0)\n\n## Requirements\n\nTo build XQUIC, you need \n* CMake\n* BoringSSL or BabaSSL\n\nTo run test cases, you need\n* libevent\n* CUnit\n\n## QuickStart Guide\n\nXQUIC can be built with BabaSSL(Tongsuo) or BoringSSL.\n\n### Build with BoringSSL\n\n```bash\nsudo apt-get install -y build-essential libevent-dev\n\n# get XQUIC source code\ngit clone https://github.com/alibaba/xquic.git; cd xquic\n\n# get and build BoringSSL\ngit clone https://github.com/google/boringssl.git ./third_party/boringssl; cd ./third_party/boringssl\nmkdir -p build && cd build\ncmake -DBUILD_SHARED_LIBS=0 -DCMAKE_C_FLAGS=\"-fPIC\" -DCMAKE_CXX_FLAGS=\"-fPIC\" ..\nmake -j ssl crypto\ncd ..\nSSL_TYPE_STR=\"boringssl\"\nSSL_PATH_STR=\"${PWD}\"\ncd ../..\n\n# build XQUIC with BoringSSL\n# When build XQUIC with boringssl, by default XQUIC will use boringssl\n# in third_party. If boringssl is deployed in other directories, SSL_PATH could be \n# used to specify the search path of boringssl\ngit submodule update --init --recursive\nmkdir -p build; cd build\ncmake -DGCOV=on -DCMAKE_BUILD_TYPE=Debug -DXQC_ENABLE_TESTING=1 -DXQC_SUPPORT_SENDMMSG_BUILD=1 -DXQC_ENABLE_EVENT_LOG=1 -DXQC_ENABLE_BBR2=1 -DXQC_ENABLE_RENO=1 -DSSL_TYPE=${SSL_TYPE_STR} -DSSL_PATH=${SSL_PATH_STR} ..\n\n# exit if cmake error\nif [ $? -ne 0 ]; then\n    echo \"cmake failed\"\n    exit 1\nfi\n\nmake -j\n```\n\n### Build with BabaSSL(Tongsuo)\n\n```bash\nsudo apt-get install -y build-essential libevent-dev\n\n# get XQUIC source code\ngit clone https://github.com/alibaba/xquic.git; cd xquic\n\n# get and build BabaSSL(Tongsuo)\ngit clone -b 8.3-stable https://github.com/Tongsuo-Project/Tongsuo.git ./third_party/babassl; cd ./third_party/babassl/\n./config --prefix=/usr/local/babassl\nmake -j\nSSL_TYPE_STR=\"babassl\"\nSSL_PATH_STR=\"${PWD}\"\ncd -\n\n# build XQUIC with BabaSSL\n# When build XQUIC with babassl, /usr/local/babassl directory will be searched\n# as default. If babassl is deployed in other directories, SSL_PATH could be \n# used to specify the search path of babassl\ngit submodule update --init --recursive\nmkdir -p build; cd build\ncmake -DGCOV=on -DCMAKE_BUILD_TYPE=Debug -DXQC_ENABLE_TESTING=1 -DXQC_SUPPORT_SENDMMSG_BUILD=1 -DXQC_ENABLE_EVENT_LOG=1 -DXQC_ENABLE_BBR2=1 -DXQC_ENABLE_RENO=1 -DSSL_TYPE=${SSL_TYPE_STR} -DSSL_PATH=${SSL_PATH_STR} ..\n\n# exit if cmake error\nif [ $? -ne 0 ]; then\n    echo \"cmake failed\"\n    exit 1\nfi\n\nmake -j\n```\n\n### Run testcases\n\n```bash\nsh ../scripts/xquic_test.sh\n```\n\n## Documentation\n\n* For using the API, see the [API docs](./docs/API.md).\n* For platform support details, see the [Platforms docs](./docs/Platforms.md).\n* For Chinese Simplified (zh-CN) translation of the IETF QUIC Protocol, see the Translation docs.\n    - [RFC8999-invariants-zh](./docs/translation/rfc8999-invariants-zh.md)\n    - [RFC9000-transport-zh](./docs/translation/rfc9000-transport-zh.md)\n    - [RFC9001-tls-zh](./docs/translation/rfc9001-tls-zh.md)\n    - [RFC9002-recovery-zh](./docs/translation/rfc9002-recovery-zh.md)\n    - [draft-ietf-quic-http-34-zh](./docs/translation/draft-ietf-quic-http-34-zh.md)\n    - [draft-ietf-quic-qpack-21-zh](./docs/translation/draft-ietf-quic-qpack-21-zh.md)\n    - [RFC9221-datagram-zh](./docs/translation/rfc9221-datagram-zh.md)\n\n* For using quic-qlog, see the [Features: qlog](./docs/Features.md)\n* For testing the library, see the [Testing docs](./docs/docs-zh/Testing-zh.md).\n* For other frequently asked questions, see the [FAQs](./docs/docs-zh/FAQ-zh.md) and [Trouble Shooting Guide](./docs/docs-zh/Troubleshooting-zh.md).\n\n## Contributing\n\nWe would love for you to contribute to XQUIC and help make it even better than it is today! All types of contributions are encouraged and valued. Thanks to [all contributors](https://github.com/alibaba/xquic/blob/main/CONTRIBUTING.md#all-contributors). See our [Contributing Guidelines](./CONTRIBUTING.md) for more information.\n\nIf you have any questions, please feel free to open a new Discussion topic in our [discussion forums](https://github.com/alibaba/xquic/discussions).\n\n## License\n\nXQUIC is released under the Apache 2.0 License.\n\n## Contact Us\n\nFeel free to contact us in the following ways:\n\n* e-mail: xquic@alibaba-inc.com\n* Dingtalk group: 34059705\n* slack channel: #xquic in quicdev group\n\n  <img src=\"docs/images/dingtalk_group.JPG\" width=200 alt=\"dingtalk group\"/>\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.322265625,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nTo report a security issue, please email xquic@alibaba-inc.com with a description of the issue, the steps you took to create the issue, affected versions, and, if known, mitigations for the issue. Our vulnerability management team will respond within 3 working days of your email.\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "interop",
          "type": "tree",
          "content": null
        },
        {
          "name": "mini",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "xqc_build.sh",
          "type": "blob",
          "size": 5.8642578125,
          "content": "# Copyright (c) 2022, Alibaba Group Holding Limited\n#!/bin/sh\n\nandroid_archs=(armeabi-v7a arm64-v8a)\nios_archs=(armv7 arm64 x86_64)\nhmos_archs=(arm64-v8a)\nCMAKE_CMD=\"cmake\"\ncur_dir=$(cd \"$(dirname \"$0\")\";pwd)\n\ncp -f $cur_dir/cmake/CMakeLists.txt  $cur_dir/CMakeLists.txt\n\nplatform=$1\nbuild_dir=$2\nartifact_dir=$3\n\n# boringssl is used as default\nssl_type=\"boringssl\"\nssl_path=$4\n\n# if ssl_path is not defined, try to use the default path\nif [ -z \"$ssl_path\" ] ; then\n    ssl_path=\"`pwd`/third_party/boringssl\"\n    echo \"use default ssl path: $ssl_path\"\nfi\n\nif [ ! -d \"$ssl_path\" ] ; then\n    echo \"ssl environment not exists\"\n    exit 0\nfi\n\ncreate_dir_force() {\n    if [ x\"$2\" == x ] ; then\n        echo \"$1 MUST NOT be empty\"\n        exit 1\n    fi\n    if [ -d $2 ] ; then\n        rm -rf $2\n    fi\n    mkdir $2\n    echo \"create $1 directory($2) suc\"\n}\n\nplatform=$(echo $platform | tr A-Z a-z )\n\nif [ x\"$platform\" == xios ] ; then \n    if [ x\"$IOS_CMAKE_TOOLCHAIN\" == x ] ; then\n        echo \"IOS_CMAKE_TOOLCHAIN MUST be defined\"\n        exit 0\n    fi\n\n    archs=${ios_archs[@]} \n    configures=\"-DSSL_TYPE=${ssl_type}\n                -DSSL_PATH=${ssl_path}\n                -DBORINGSSL_PREFIX=bs\n                -DBORINGSSL_PREFIX_SYMBOLS=$cur_dir/bssl_symbols.txt\n                -DDEPLOYMENT_TARGET=10.0\n                -DCMAKE_BUILD_TYPE=Minsizerel\n                -DXQC_ENABLE_TESTING=OFF\n                -DXQC_BUILD_SAMPLE=OFF\n                -DGCOV=OFF\n                -DCMAKE_TOOLCHAIN_FILE=${IOS_CMAKE_TOOLCHAIN}\n                -DENABLE_BITCODE=OFF\n                -DXQC_NO_SHARED=ON\n\t\t\t\t-DXQC_ENABLE_TH3=ON\n                -DXQC_COMPAT_GENERATE_SR_PKT=ON\n                -DXQC_ENABLE_RENO=OFF\n                -DXQC_ENABLE_BBR2=ON\n                -DXQC_ENABLE_COPA=OFF\n                -DXQC_ENABLE_UNLIMITED=OFF\n                -DXQC_ENABLE_MP_INTEROP=OFF\n                -DXQC_DISABLE_LOG=OFF\n                -DXQC_ONLY_ERROR_LOG=ON\n                -DXQC_COMPAT_GENERATE_SR_PKT=ON\"\n\nelif [ x\"$platform\" == xandroid ] ; then\n    if [ x\"$ANDROID_NDK\" == x ] ; then\n        echo \"ANDROID_NDK MUST be defined\"\n        exit 0\n    fi\n\n    archs=${android_archs[@]}\n    configures=\"-DSSL_TYPE=${ssl_type}\n                -DSSL_PATH=${ssl_path}\n                -DCMAKE_BUILD_TYPE=Minsizerel\n                -DXQC_ENABLE_TESTING=OFF\n                -DXQC_BUILD_SAMPLE=OFF\n                -DGCOV=OFF\n                -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake\n                -DANDROID_STL=c++_shared\n                -DANDROID_NATIVE_API_LEVEL=android-19\n                -DXQC_ENABLE_RENO=OFF\n                -DXQC_ENABLE_BBR2=ON\n                -DXQC_ENABLE_COPA=OFF\n                -DXQC_ENABLE_UNLIMITED=OFF\n                -DXQC_ENABLE_MP_INTEROP=OFF\n                -DXQC_DISABLE_LOG=OFF\n                -DXQC_ONLY_ERROR_LOG=ON\n\t\t\t\t-DXQC_ENABLE_TH3=ON\n                -DXQC_COMPAT_GENERATE_SR_PKT=ON\"\nelif [ x\"$platform\" == xharmony ] ; then\n    if [ x\"$HMOS_CMAKE_TOOLCHAIN\" == x ] ; then\n        echo \"HMOS_CMAKE_TOOLCHAIN MUST be defined\"\n        exit 0\n    fi\n    echo \"HMOS_CMAKE_TOOLCHAIN: ${HMOS_CMAKE_TOOLCHAIN}\"\n\n    if [ x\"$HMOS_CMAKE_PATH\" == x ] ; then\n        echo \"HMOS_CMAKE_PATH MUST be defined\"\n        exit 0\n    fi\n    echo \"HMOS_CMAKE_PATH: ${HMOS_CMAKE_PATH}\"\n    CMAKE_CMD=${HMOS_CMAKE_PATH}\n\n    archs=${hmos_archs[@]}\n    configures=\"-DSSL_TYPE=${ssl_type}\n                -DSSL_PATH=${ssl_path}\n                -DCMAKE_BUILD_TYPE=Release\n                -DXQC_ENABLE_TESTING=OFF\n                -DXQC_BUILD_SAMPLE=OFF\n                -DGCOV=OFF\n                -DCMAKE_TOOLCHAIN_FILE=${HMOS_CMAKE_TOOLCHAIN}\n                -DXQC_ENABLE_RENO=OFF\n                -DXQC_ENABLE_BBR2=ON\n                -DXQC_ENABLE_COPA=OFF\n                -DXQC_ENABLE_UNLIMITED=OFF\n                -DXQC_ENABLE_MP_INTEROP=OFF\n                -DXQC_DISABLE_LOG=OFF\n                -DXQC_ONLY_ERROR_LOG=ON\n                -DXQC_COMPAT_GENERATE_SR_PKT=ON\n                -DDISABLE_WARNINGS=ON\"\nelse\n    echo \"no support platform\"\n    exit 0\nfi\n\n\ngenerate_plat_spec() {\n    plat_spec=\n    if [ x\"$platform\" == xios ] ; then\n        plat_spec=\"-DARCHS=$1\"\n        if [ x\"$1\" == xx86_64 ] ; then\n            plat_spec=\"$plat_spec -DPLATFORM=SIMULATOR64\"\n        elif [ x\"$1\" == xi386 ] ; then\n            plat_spec=\"$plat_spec -DPLATFORM=SIMULATOR\"\n        fi\n    elif [ x\"$platform\" == xharmony ] ; then\n        plat_spec=\"-DOHOS_ARCH=$1\"\n    else\n        plat_spec=\"-DANDROID_ABI=$1\"\n    fi\n    echo $plat_spec\n}\n\ncreate_dir_force build $build_dir\n# to absoulute path \nbuild_dir=$cur_dir/$build_dir\n\ncreate_dir_force artifact $artifact_dir\nartifact_dir=$cur_dir/$artifact_dir\n\ncd $build_dir \n\nfor i in ${archs[@]} ;\ndo\n    rm -f  CMakeCache.txt\n    rm -rf CMakeFiles\n    rm -rf Makefile\n    rm -rf cmake_install.cmake\n    rm -rf include\n    rm -rf outputs\n    rm -rf third_party\n\n    echo \"compiling xquic on $i arch\"\n    \"${CMAKE_CMD}\"  $configures  $(generate_plat_spec $i ) -DLIBRARY_OUTPUT_PATH=`pwd`/outputs/ ..\n    make -j 4\n    if [ $? != 0 ] ; then\n        exit 0\n    fi\n\n    if [ ! -d  ${artifact_dir}/$i ] ; then\n        mkdir -p ${artifact_dir}/$i\n    fi\n    cp -f `pwd`/outputs/*.a     ${artifact_dir}/$i/\n    cp -f `pwd`/outputs/*.so    ${artifact_dir}/$i/\ndone\n\n\nmake_fat() {\n    script=\"lipo -create\"\n    for i in ${archs[@]} ;\n    do\n        script=\"$script -arch $i $artifact_dir/$i/$1  \"\n    done\n    script=\"$script -output $cur_dir/ios/xquic/xquic/Libs/$1\"\n    $($script) \n}\n\n\nif [ x\"$platform\" == xios ] ; then\n    if [ ! -d $cur_dir/ios/xquic/xquic/Headers ] ; then\n        mkdir -p $cur_dir/ios/xquic/xquic/Headers\n    fi\n    if [ ! -d $cur_dir/ios/xquic/xquic/Libs ] ; then\n        mkdir -p $cur_dir/ios/xquic/xquic/Libs\n    fi\n    make_fat libxquic.a\n    make_fat libcrypto.a\n    make_fat libssl.a\n    cp -f $cur_dir/include/xquic/*   $cur_dir/ios/xquic/xquic/Headers/\n    cp -f $build_dir/include/xquic/* $cur_dir/ios/xquic/xquic/Headers/\n\nfi\n\n\n"
        },
        {
          "name": "xqc_configure.h.in",
          "type": "blob",
          "size": 0.5146484375,
          "content": "/* the configured options and settings for xquic */\n#define xquic_VERSION_MAJOR @xquic_VERSION_MAJOR@\n#define xquic_VERSION_MINOR @xquic_VERSION_MINOR@\n\n#cmakedefine XQC_ENABLE_BBR2\n#cmakedefine XQC_ENABLE_RENO\n#cmakedefine XQC_ENABLE_COPA\n#cmakedefine XQC_ENABLE_UNLIMITED\n#cmakedefine XQC_ENABLE_MP_INTEROP\n#cmakedefine XQC_NO_PID_PACKET_PROCESS\n#cmakedefine XQC_PROTECT_POOL_MEM\n#cmakedefine XQC_COMPAT_DUPLICATE\n#cmakedefine XQC_ENABLE_FEC\n#cmakedefine XQC_ENABLE_XOR\n#cmakedefine XQC_ENABLE_RSC\n#cmakedefine XQC_ENABLE_PKM"
        }
      ]
    }
  ]
}