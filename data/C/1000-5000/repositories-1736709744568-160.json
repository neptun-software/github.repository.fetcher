{
  "metadata": {
    "timestamp": 1736709744568,
    "page": 160,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "acidanthera/Lilu",
      "stars": 3667,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1435546875,
          "content": "capstone/* linguist-vendored\nFastCompression/* linguist-vendored\nhde/* linguist-vendored\nsha256/* linguist-vendored\numm_malloc/* linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.146484375,
          "content": ".DS_Store\n.scannerwork\nDerivedData\nLilu.kext\nxcuserdata\nxcshareddata\nproject.xcworkspace\nbuild\nLilu/Scripts/custom*\n.svace-dir\n/MacKernelSDK\n/clang32\n"
        },
        {
          "name": "Changelog.md",
          "type": "blob",
          "size": 13.830078125,
          "content": "Lilu Changelog\n==============\n#### v1.7.0\n- Added Arrow Lake CPU definitions\n- Improved AMD IGPU detection via device-id, thanks @Zormeister\n\n#### v1.6.9\n- Fixed loading on macOS 10.10 and older due to a MacKernelSDK regression\n- Added AMD IGPU detection via device-id, thanks @Zormeister\n\n#### v1.6.8\n- Allow loading on macOS 15 without `-lilubetaall`\n\n#### v1.6.7\n- Added Broadwell-EP CPU model\n- Added Raptor Lake C0 stepping model\n\n#### v1.6.6\n- Fixed macOS 13+ installer detection regression in 1.6.5\n- Allow loading on macOS 14 without `-lilubetaall`\n\n#### v1.6.5\n- Fixed macOS 13+ recovery and installer detection\n\n#### v1.6.4\n- Added AMD IGPU detection\n\n#### v1.6.3\n- Added Raptor Lake CPU definitions\n\n#### v1.6.2\n- Fixed KC segment name, which also fixed kernel panic on macOS 13 b3\n- Disable EFI64 runtime APIs when `-legacy` is used on 32-bit kernels\n\n#### v1.6.1\n- Allow loading on macOS 13 without `-lilubetaall`\n- Added Ventura dyld shared cache pathing\n- Changed SKL default ig-platform-id to KBL on macOS 13+\n- Added patch with masking support\n\n#### v1.6.0\n- Dropped internal shared patcher instance grabbing API\n\n#### v1.5.9\n- Fixed memory corruption when mixing cs_validate_range/page mid/long routes (thx @Goshin)\n- Enforced all routes to be slotted after one slotted route\n- Refactored all internal routes to use new RouteRequest API\n- Deprecated routeFunction APIs as they are dangerous to use for multiple routes\n\n#### v1.5.8\n- Fixed kernel panic on macOS 10.15 and earlier introduced in 1.5.7\n- Added Alder Lake CPU model support\n- Added shared patcher instance grabbing API\n\n#### v1.5.7\n- Added address slot support for all 64-bit macOS version\n\n#### v1.5.6\n- Added the circular buffer API.\n- Added convenient helpers to check a value (available as of C++17).\n- Added the `OSObjectWrapper` API to wrap a non-`OSObject` value.\n\n#### v1.5.5\n- Added a variant of `KernelPatcher::findAndReplace` that requires both `find` and `replace` buffers to have the same length.\n- Added support for macOS 10.4 and newer\n\n#### v1.5.4\n- Allow loading on macOS 12 without `-lilubetaall` (With adapted for macOS 12 plug-ins)\n- Added guarding for address slot usage to avoid potential kernel routing overflow\n- Allow using medium size function routing in the kernel\n- Added medium size function routing for `Long` mode as they are functionally equivalent\n- Added `matchSharedCachePath` API to support dyld cache matching on macOS 12\n- Added `_kmod` hooking for kext listening to unify kext patcher logic\n- Added zlib decompression API\n- Fixed kernel patcher support on 64-bit 10.6\n- Added new GPU switching API\n\n#### v1.5.3\n- Fixed kernel patcher support on 10.7\n\n#### v1.5.2\n- Fixed AZAL recognition as GPU audio on certain AMD platforms (thx to wkpark)\n- Added external GPU disabling API with device and kernel selection via properties\n- Added identifiers for Rocket Lake and Tiger Lake CPUs\n- Added API to disable builtin GPU (IGPU)\n- Reduced hardware presence bruteforce to a more sensible value\n\n#### v1.5.1\n- Added `lilu_os_memmem` and `lilu_os_memchr` APIs\n- Added `getSharedCachePath` API to obtain current cache path\n- Added `LIKELY`/`UNLIKELY` macros\n\n#### v1.5.0\n- Fixed Apple HDEF detection made by NVIDIA\n- Fixed race-condition in select kext detection during patching (thx to lvs1974)\n\n#### v1.4.9\n- Added the PCI GMCH Graphics Control register definition. (by 0xFireWolf)\n- Added a new API to solve multiple symbols in one shot conveniently. (by 0xFireWolf)\n- Added a new `RouteRequest` constructor to work with function pointers without additional type castings. (by 0xFireWolf)\n\n#### v1.4.8\n- Added MacKernelSDK with Xcode 12 compatibility\n- Removed `kern_atomic.hpp` due to MacKernelSDK implementation\n- Acidanthera MacKernelSDK is now required for all plugins\n- Fixed Lilu loading on macOS 10.6 (not all APIs will be functional)\n- Fixed plugin debug log not working with Lilu disabled\n\n#### v1.4.7\n- Added more platform headers for plugin compilation\n- Fixed symbol chainloading regression in 1.4.6\n\n#### v1.4.6\n- Added preliminary definitions for 11.0 support\n- Temporarily disabled user patcher for 11.0\n- Added `external-audio` property to ignore PCI audio cards\n- Added in-memory symbol solving for 11.0\n- Fixed accidentally solving stabs instead of normal symbols\n- Added device publishing API to monitor device startup\n- Added DeviceInfo caching for improved performance\n- Added implicit slotted (medium) patches in KC mode to reduce patch size\n\n#### v1.4.5\n- Fixed newer CPU generation detection\n- Added failsafe versions of CML framebuffers\n\n#### v1.4.4\n- Added new CFL connector-less framebuffers: 0x9BC80003, 0x9BC50003, 0x9BC40003\n- Fixed KDK support disrespecting file suffixes\n\n#### v1.4.3\n- Improved modern CPUID detection\n- Added BaseDeviceInfo API with improved performance\n- Deprecated CPUInfo::getGeneration, WIOKit::getComputerModel(), WIOKit::getComputerInfo()\n\n#### v1.4.2\n- Fixed IMEI device detection on some platforms\n- Added CometLake CPU model support (thx @stormbirds)\n- Added getFatOffset MachO API\n\n#### v1.4.1\n- Made applyLookupPatch support kernel patches by passsing null kext\n- Export hde64 interface\n- Added evector deleter without copying for improved performance\n- Allow C strings as module prefix argument to the logging functions\n\n#### v1.4.0\n- Fixed mishandling user patches process list after processKernel API call\n- Fixed extra I/O in user patcher even when no patches were needed\n- Added support for per-process (LocalOnly) userspace patches\n\n#### v1.3.9\n- Added QEMU/KVM vendor compatibility to device detection logic\n\n#### v1.3.8\n- Compile Xcode 11 OSObject stubs into plugins to allow mixing compilers\n- Unified release archive names\n- Added multirouting support to routeFunction API enabling functions to have multiple proxies\n- Added explicit routing type to routeFunction APIs\n- Made Lilu use long function routes to ease third-part multirouting\n\n#### v1.3.7\n- Allow loading on 10.15 without `-lilubetaall`\n- Add support for Xcode 11 analysis tools\n- Add workaround to 10.15 SDK Dispatch method (use old Xcode when possible)\n\n#### v1.3.6\n- Lilu now uses OpenCore NVRAM variable GUIDs\n- Add support for `0x3E980003` frame id for CFL refresh\n\n#### v1.3.5\n- Fixed analog audio device detection on certain laptops with Insyde firmware\n\n#### v1.3.4\n- Added implicit `eraseCoverageInstPrefix` to `routeMultiple`\n- Fixed user patcher kernel panic when running process via `posix_spawn` without exec\n- Fixed user patcher codesign issues on recent 10.14 versions with SIP\n- Changed `kern_start` and `kern_stop` to contain product prefix to avoid collisions\n\n#### v1.3.3\n- Added support for modern AMD device scanning by @AlGreyy\n- Added support for VMware device scanning\n\n#### v1.3.2\n- Extended supported firmware vendor list\n\n#### v1.3.1\n- Lowered version compatibility to 1.2.0 to let plugins load\n\n#### v1.3.0\n- Fixed a rare kernel panic on user patch failure\n- Removed unimplemented `genPlatformKey` API\n\n#### v1.2.9\n- Added `kern_atomic.hpp` header to support atomic types with old Clang\n- Added ThreadLocal APIs\n- Added `KernelPatcher::eraseCoverageInstPrefix` API\n- Fixed race condition during bootstrap (thx @Download-Fritz)\n- Fixed potential race condition during user patching\n\n#### v1.2.8\n- Fixed CPU generation detection for Coffee Lake-U\n- Fixed PEGP detection with 3D Controller `class-code`\n- Fixed userspace patcher compatibility with macOS Mojave\n- Allow manually specified reservation in `evector`\n- Improved version information printing in DEBUG builds\n\n#### v1.2.7\n- Added support for detecting optimus switch-off\n- Added Sanitize target with ubsan support (thx to NetBSD)\n- Added disk log dump in DEBUG builds via `liludump=N` boot-arg (requires plugin rebuild)\n- Fixed multiple Mach-O parsing issues\n- Fixed support of PCI devices without compatible property\n- Fixed PCI `class-code` masking not detecting HDEF devices\n\n#### v1.2.6\n- Added Cannon Lake and Ice Lake definitions\n- Added missing typed getOSData APIs\n- Added `-liluuseroff` boot-arg to disable user patcher (for e.g. shared cache manipulation)\n- Added `lilucpu=N` boot-arg to assume CPU generation\n- Added CPU topology detection APIs\n- Fixed routeMultiple kernel panic and log report\n- Switched to Apple lzvn implementation\n\n#### v1.2.5\n- Added new DeviceInfo API\n- Added checkKernelArgument API\n- Added enforced LiluAPI interfaces\n- Added KextInfo::switchOff API\n- Added cpuid API\n- Allowed for onKextLoad to accept no callback\n- Removed GPU detection code from CPUInfo API\n- Enabled by default on 10.14\n\n#### v1.2.4\n- Internalize new APIs from 1.2.3\n- Added new EFI runtime API with custom variable extensions\n- Added new RTC storage API\n- Added centralised entitlement hooking API\n- Added lilu_os_qsort export (the supported interface is Apple-private)\n- Added `liludelay=1000` boot argument to insert a 1s delay after each print\n- Added new symbol routing API with simplified interface\n- Fixed a kernel panic in userspace patching code on 10.14b1\n\n#### v1.2.3\n- Added CPU information API for cpu families and generations\n- Added IGPU information API for framebuffers and stuff\n- Added WIOKit::renameDevice API for device renaming with compatible fixing\n- Added KernelPatcher::routeVirtual API for virtual function swapping\n- Added PCI register and address manipulation API\n- Added basic process modification API\n- Added plugin IOService access\n- Added address-printing macros\n- Added address validation API\n- Added strict kext UUID validation to workaround broken kextcache\n- Added version info reporting to IORegistry for Lilu and plugins\n- Fixed several inline function definitions\n- Fixed crash when loading user patches with no binary patches\n- Reduced long patch length in function routing API\n\n#### v1.2.2\n- Acknowledged macOS Install Data and com.apple.recovery.boot prelinkedkernel paths (thx Piker-Alpha)\n- Fixed ignoring `kcsuffix=<suffix>` for kexts and less common names\n- Added extra logging for backtrace macros to ensure that they are not skipped\n- Fixed compilation issues with clang not supporting 2 args for deprecated attribute\n\n#### v1.2.1\n- Fixed a rare kernel panic when running Lilu with `-liludbg`\n- Added a workaround for 10.13.2 beta issues\n- Fixed compilation with Xcode 8.2\n- Added prelink usage detection to avoid confusing different kernels\n- Disabled prelink usage for kext address solving by default since it caused many issues\n\n#### v1.2.0\n- Added more handy reporting macros\n- Enabled Lilu in safe mode by default with all plugins required to declare supported environments\n- Added lzss compression API\n- Added crypto and nvram API\n- Added support for solving kext symbols from kextcache\n- Added memfunc wrappers (e.g. lilu_os_memcpy) to avoid undefined builtins from 10.13 SDK\n- Added `-liludbgall` boot argument (to be on par with `-lilubetaall`)\n- Added unexact process path matching\n- Changed compression API logic to support preallocated buffers\n- Changed memory allocation logic in certain APIs\n- Changed kernel protection API to accept a lock for cpu preemption control\n- Changed KextInfo structure to handle disabled and fsonly kexts\n- Changed logging API to enforce more proper style\n- Disabled advanced disassembly APIs by default (create an issue if you need them)\n- Fixed a memory issue in WIOKit::getComputerInfo introduced in 1.1.7\n- Fixed several assertions triggering in 10.13 development kernel\n- Fixed Xcode 9 compiled binary compatibility with older OS\n- Fixed FAT_CIGAM and FAT_MAGIC parsing issues\n- Fixed a number of potential memory issues in mach parsing code\n- Fixed debug and development kextcache loading issues\n- Fixed shutdown issues in `-lilulowmem` mode\n- Fixed seldom boot slowdown when disabling the plugins via boot arguments\n\n#### v1.1.7\n- Merged advanced disassembly API (thx Pb and others)\n- Added HDE disassembler for quick instruction decoding (by Vyacheslav Patkov)\n- Updated capstone to 3.0.5 rc3\n- Fixed load API lock type preventing dynamic memory allocation (thx Pb)\n- Added setInterrupts API\n- Added an option to define custom plugin entry points\n- Added const reference evector API\n- Added FAT_CIGAM Mach-O support\n- Added WIOKit::getComputerInfo API and improved some other WIOKit APIs\n- Added support of storing larger than pointer types in evector\n- Added `-lilubetaall` boot argument to skip version checking for all plugins\n\n#### v1.1.6\n- Ignored disabled kexts earlier for speed reasons\n- Added High Sierra to the list of compatible OS\n- Added arrsize API\n- Made patch count warning only show in debug mode\n- Made kinfo not found logging only show in debug mode\n- Added routeBlock API for opcode-based routing\n- Centralised user and kernel patcher start time\n- Added c-compliant kern_os_cfree implementation\n- Added a workaround for page fault kernel panics\n- Added a workaround for xnu printf limitations\n\n#### v1.1.5\n- Increased executable memory buffer to page size\n- Added auth-root-dmg support High Sierra installer detection (thx Piker-Alpha)\n- Added -liluforce to force enable Lilu in safe mode and recovery\n- Added preliminary Xcode 9 compatibility\n- Added support for unloadable kexts\n- Merged official capstone patches up to c508224\n\n#### v1.1.4\n- Slightly improved userspace patcher speed for 10.12\n- Added missing dyld_shared_cache detection with a fallback\n- Defined High Sierra kernel version\n\n#### v1.1.3\n- Reduced binary size by modding capstone\n- Fixed LiluAPI::onProcLoad return code\n- Added MachInfo::setRunningAddresses for userspace symbol solving\n- Added getKernelMinorVersion for symmetry\n- Added kernel write protection and interrupt state validation\n\n#### v1.1.1\n- Changed loading policy to ignore kexts that are not permitted to load\n- Increased executable memory buffer from 256 to 1024 bytes\n- Allowed different plugins load the same kexts\n\n#### v1.1.0\n- Added support for patching different sections/segments\n- Added file writing API by lvs1974\n- Added strrchr API\n- Changed requestAccess to include API version to workaround kext loading issues\n- Updated capstone to 3.0.5 rc2\n- Improved 32-bit userspace patcher\n- Enforced `-liluslow` in installer and recovery\n\n#### v1.0\n- Initial release\n"
        },
        {
          "name": "KnownPlugins.md",
          "type": "blob",
          "size": 6.1533203125,
          "content": "Existing Lilu plugins\n=====================\n\nThis for sure may not be a complete list. If you feel that something is missing, make an issue and it will be included.  \nPlease note that improperly written immature plugins will not be listed there.\n\n| Name | Short description |\n|:-----|:------------------|\n[AirportBrcmFixup](https://github.com/acidanthera/AirportBrcmFixup) | Various patches for Broadcom Airport Wi-Fi cards\n[AppleALC](https://github.com/acidanthera/AppleALC) | Native macOS HD audio for not officially supported codecs\n[AMFIExemption](https://github.com/osy86/AMFIExemption) | Adds allowed entitlements to non-Apple signed apps when SIP is enabled\n[ATH9KFixup](https://github.com/chunnann/ATH9KFixup) | Various patches for unsupported Atheros Wi-Fi cards\n[BrightnessKeys](https://github.com/acidanthera/BrightnessKeys) | Automatic handling of brightness keys based on ACPI Specification\n[BlueToolFixup](https://github.com/acidanthera/BrcmPatchRAM) | Forces BlueTool to skip attempting a firmware update, allowing for some Broadcom chipsets to work on Monterey. It also properly sets the transport\n[CPUFriend](https://github.com/acidanthera/CPUFriend) | Dynamic power management data injection\n[CpuTscSync](https://github.com/acidanthera/CpuTscSync) | Сombining functionality of VoodooTSCSync and disabling xcpm_urgency if TSC is not in sync\n[CryptexFixup](https://github.com/acidanthera/CryptexFixup) | Kernel extension for installing Rosetta Cryptex in macOS Ventura\n[DebugEnhancer](https://github.com/acidanthera/DebugEnhancer) | Enable debug output in the macOS kernel\n[DiskArbitrationFixup](https://github.com/Goldfish64/DiskArbitrationFixup) | Disable the uninitialised disk message at disk insertion\n[ECEnabler](https://github.com/1Revenger1/ECEnabler) | Allows reading Embedded Controller fields over 1 byte long, vastly reducing the amount of ACPI modification needed (if any) for working battery status\n[HibernationFixup](https://github.com/acidanthera/HibernationFixup) | Enable 3 & 25 mode hibernation on certain hardware\n[Innie](https://github.com/cdf/Innie) | Making PCIe drives appear as internal\n[IntelBTPatcher](https://github.com/OpenIntelWireless/IntelBluetoothFirmware) | Fix Intel Bluetooth on Big Sur, Catalina, Mojave, High Sierra etc, tested with Big Sur and Catalina all working good.\n[Kryptonite](https://github.com/mayankk2308/kryptonite) | Various patches for Thunderbolt-based eGPUs\n[MacHyperVSupport](https://github.com/acidanthera/MacHyperVSupport) | Hyper-V integration services for macOS\n[NoTouchID](https://github.com/al3xtjames/NoTouchID) | Disables Touch ID checks causing hangs\n[NVMeFix](https://github.com/acidanthera/NVMeFix) | Improved power management for generic NVMe SSDs\n[OpcodeEmulator](https://www.insanelymac.com/forum/topic/329704-opcode-emulator-opemu-plug-in-project/) | Intel Haswell Pentium / Celeron Series Or older processor expansion instruction set Emulation\n[RestrictEvents](https://github.com/acidanthera/RestrictEvents) | Blocking unwanted processes causing compatibility issues on different hardware\n[RealtekCardReaderFriend](https://github.com/0xFireWolf/RealtekCardReaderFriend) | Recognize Realtek card readers as native ones\n[RTCMemoryFixup](https://github.com/acidanthera/RTCMemoryFixup) | Offsets in CMOS (RTC) memory emulation\n[FeatureUnlock](https://github.com/acidanthera/FeatureUnlock) | Enabling Sidecar support and other\n[SystemProfilerMemoryFixup](https://github.com/Goldfish64/SystemProfilerMemoryFixup) | Show memory tab on MacBook models with soldered RAM\n[ThunderboltReset](https://github.com/osy86/ThunderboltReset) | Disable the ICM in the Alpine Ridge\n[VirtualSMC](https://github.com/acidanthera/VirtualSMC) | Advanced SMC emulation\n[WhateverGreen](https://github.com/acidanthera/WhateverGreen) | Various patches necessary for GPUs\n\nPlugins which functionality was merged into other plugins:\n\n| Name | Short description |\n|:-----|:------------------|\n[AzulPatcher4600](https://github.com/coderobe/AzulPatcher4600) | Superseded by [WhateverGreen](https://github.com/acidanthera/WhateverGreen)\n[AppleBacklightFixup](https://github.com/hieplpvip/AppleBacklightFixup) | Superseded by [WhateverGreen](https://github.com/acidanthera/WhateverGreen)\n[EnableLidWake](https://github.com/syscl/EnableLidWake) | Superseded by [WhateverGreen](https://github.com/acidanthera/WhateverGreen)\n[BrcmWLFixup](https://github.com/PMheart/BrcmWLFixup) | Superseded by [AirportBrcmFixup](https://github.com/lvs1974/AirportBrcmFixup)\n[BT4LEContinuityFixup](https://github.com/acidanthera/BT4LEContinuityFixup) | Superseded by [OpenCore](https://github.com/acidanthera/OpenCorePkg)  `ExtendBTFeatureFlags` quirk\n[CoreDisplayFixup](https://github.com/PMheart/CoreDisplayFixup) | Superseded by [WhateverGreen](https://github.com/acidanthera/WhateverGreen)\n[CpuTopologySync](https://github.com/acidanthera/CpuTopologySync) | Superseded by [OpenCore](https://github.com/acidanthera/OpenCorePkg)  `ProvideCurrentCpuInfo` quirk\n[MacProMemoryNotificationDisabler](https://github.com/IOIIIO/MacProMemoryNotificationDisabler) | Superseded by [RestrictEvents](https://github.com/acidanthera/RestrictEvents)\n[NoVPAJpeg](https://github.com/vulgo/NoVPAJpeg) | Superseded by [WhateverGreen](https://github.com/acidanthera/WhateverGreen)\n[NightShiftUnlocker](https://github.com/Austere-J/NightShiftUnlocker) | Superseded by [FeatureUnlock](https://github.com/acidanthera/FeatureUnlock)\n[NightShiftEnabler](https://github.com/cdf/NightShiftEnabler) | Superseded by [FeatureUnlock](https://github.com/acidanthera/FeatureUnlock)\n[IntelGraphicsDVMTFixup](https://github.com/BarbaraPalvin/IntelGraphicsDVMTFixup) | Superseded by [WhateverGreen](https://github.com/acidanthera/WhateverGreen)\n[IntelGraphicsFixup](https://github.com/lvs1974/IntelGraphicsFixup) | Superseded by [WhateverGreen](https://github.com/acidanthera/WhateverGreen)\n[NvidiaGraphicsFixup](https://github.com/lvs1974/NvidiaGraphicsFixup) | Superseded by [WhateverGreen](https://github.com/acidanthera/WhateverGreen)\n[Shiki](https://github.com/acidanthera/Shiki) | Superseded by [WhateverGreen](https://github.com/acidanthera/WhateverGreen)\n[SidecarEnabler](https://github.com/hieplpvip/SidecarEnabler) | Superseded by [FeatureUnlock](https://github.com/acidanthera/FeatureUnlock)\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.4482421875,
          "content": "Copyright (c) 2016-2018, vit9696\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Lilu.xcodeproj",
          "type": "tree",
          "content": null
        },
        {
          "name": "Lilu",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.7998046875,
          "content": "Lilu\n====\n\n[![Build Status](https://github.com/acidanthera/Lilu/actions/workflows/main.yml/badge.svg?branch=master)](https://github.com/acidanthera/Lilu/actions) [![Scan Status](https://scan.coverity.com/projects/16137/badge.svg?flat=1)](https://scan.coverity.com/projects/16137)\n\nAn open source kernel extension bringing a platform for arbitrary kext, library, and program patching throughout the system for macOS.\n\n#### Features\n- Generic kext patcher\n- Generic process patcher (64-bit with basic 32-bit functionality)\n- Generic framework/library patcher (64-bit with basic 32-bit functionality)\n- Provides a unified plugin API\n\n#### Installation\nYou should install this kext along with the plugin kexts depending on it.  \nThe prebuilt binaries are available on [releases](https://github.com/vit9696/Lilu/releases) page.  \nSeveral existing plugins possibly with code samples are available on [known plugins](https://github.com/vit9696/Lilu/blob/master/KnownPlugins.md) page.\nTo compile a plugin copy the debug version of Lilu.kext into its directory.\n\n#### Configuration\n- Add `-liludbg` to enable debug printing (available in DEBUG binaries).\n- Add `-liludbgall` to enable debug printing in Lilu and all loaded plugins (available in DEBUG binaries).\n- Add `-liluoff` to disable Lilu.\n- Add `-liluuseroff` to disable Lilu user patcher (for e.g. dyld_shared_cache manipulations).\n- Add `-liluslow` to enable legacy user patcher.\n- Add `-lilulowmem` to disable kernel unpack (disables Lilu in recovery mode).\n- Add `-lilubeta` to enable Lilu on unsupported OS versions (macOS 15 and below are enabled by default).\n- Add `-lilubetaall` to enable Lilu and all loaded plugins on unsupported os versions (use _very_ carefully).\n- Add `-liluforce` to enable Lilu regardless of the mode, OS, installer, or recovery.\n- Add `liludelay=1000` to enable 1 second delay after each print for troubleshooting.\n- Add `lilucpu=N` to let Lilu and plugins assume Nth CPUInfo::CpuGeneration.\n- Add `liludump=N` to let Lilu DEBUG version dump log to `/var/log/Lilu_VERSION_KERN_MAJOR.KERN_MINOR.txt` after N seconds\n\n#### Peculiarities\nMost of the plugins cease to function in safe (`-x`) mode.  \nBy default Lilu itself does not function in single-user (`-s`) mode, unless `-liluforce` is present.\n\n#### Discussion\n[InsanelyMac topic](http://www.insanelymac.com/forum/topic/321371-lilu-—-kext-and-process-patcher/) in English  \n[AppleLife topic](https://applelife.ru/threads/lilu-patcher-kekstov-i-processov.1964133/) in Russian\n\n#### Contribution\nFor the contributors with programming skills the headers are filled with AppleDOC comments.  \nEarlier code changes could be tracked in [AppleALC](https://github.com/vit9696/AppleALC) project.  \nWriting and supporting code is fun but it takes time. Please provide most descriptive bugreports or pull requests.\n\n#### Credits\n- [Apple](https://www.apple.com) for macOS  and [lzvn](https://github.com/lzfse/lzfse) decompression\n- [Brad Conte](https://github.com/B-Con) for [SHA-256 implementation](https://github.com/B-Con/crypto-algorithms)\n- [fG!](https://github.com/gdbinit) for [Onyx The Black Cat](https://github.com/gdbinit/onyx-the-black-cat) used as a base of the kernel patcher\n- [Nguyen Anh Quynh](https://github.com/aquynh) for [capstone](https://github.com/aquynh/capstone) disassembler module\n- [Pike R. Alpha](https://github.com/Piker-Alpha) for original [lzvn](https://github.com/Piker-Alpha/LZVN) decompression\n- [Ralph Hempel](https://github.com/rhempel) for [umm_malloc](https://github.com/rhempel/umm_malloc) static pool allocator\n- Vyacheslav Patkov for [hde64](https://github.com/mumble-voip/minhook/tree/7d80cff1de5c87b404e7ac451757bfa77e5e82da/src/hde) simple disassembler module\n- [07151129](https://github.com/07151129) for some code parts and suggestions\n- [vit9696](https://github.com/vit9696) for writing the software and maintaining it\n"
        },
        {
          "name": "capstone",
          "type": "tree",
          "content": null
        },
        {
          "name": "hde",
          "type": "tree",
          "content": null
        },
        {
          "name": "lzvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "sha256",
          "type": "tree",
          "content": null
        },
        {
          "name": "sonar-project.properties",
          "type": "blob",
          "size": 3.8154296875,
          "content": "#\n#  sonar-project.properties\n#  Lilu\n#\n#  Copyright © 2018 vit9696. All rights reserved.\n#\n\n# Reference: https://docs.sonarqube.org/latest/analysis/analysis-parameters/\n\nsonar.projectKey=acidanthera_Lilu\nsonar.projectName=Lilu\nsonar.projectVersion=1.0\n\nsonar.links.homepage=https://github.com/acidanthera/Lilu\nsonar.links.ci=https://github.com/acidanthera/Lilu\nsonar.links.scm=https://github.com/acidanthera/Lilu\nsonar.links.issue=https://github.com/acidanthera/Lilu/issues\n\nsonar.sourceEncoding=UTF-8\nsonar.sources=Lilu\n\n# Source exclusions\n\nsonar.exclusions=Lilu/Library/bsd/**,Lilu/Library/corecrypto/**,Lilu/Library/libkern/**,\\\n  Lilu/Library/osfmk/**,Lilu/Library/security/**,Lilu/Library/LegacyIOService.h\n\n# Rule exclusions\n\nsonar.issue.ignore.multicriteria=e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12\n\n# Allow undef in special cases as we use them carefully\nsonar.issue.ignore.multicriteria.e1.ruleKey=cpp:PPUndefUsage\nsonar.issue.ignore.multicriteria.e1.resourceKey=**\n\n# Allow union\nsonar.issue.ignore.multicriteria.e2.ruleKey=cpp:Union\nsonar.issue.ignore.multicriteria.e2.resourceKey=**\n\n# Allow structs with (public only) methods\nsonar.issue.ignore.multicriteria.e3.ruleKey=cpp:S1771\nsonar.issue.ignore.multicriteria.e3.resourceKey=**\n\n# Remove structure complexity limits, fixing will be costly\nsonar.issue.ignore.multicriteria.e4.ruleKey=cpp:S1820\nsonar.issue.ignore.multicriteria.e4.resourceKey=**\n\n# Remove argument complexity limits, fixing will be costly\nsonar.issue.ignore.multicriteria.e5.ruleKey=cpp:S107\nsonar.issue.ignore.multicriteria.e5.resourceKey=**\n\n# Remove function complexity limits, fixing will be costly\nsonar.issue.ignore.multicriteria.e6.ruleKey=cpp:S3776\nsonar.issue.ignore.multicriteria.e6.resourceKey=**\n\n# Remove break/continue complexity limits, fixing will be costly\nsonar.issue.ignore.multicriteria.e7.ruleKey=cpp:SingleGotoOrBreakPerIteration\nsonar.issue.ignore.multicriteria.e7.resourceKey=**\n\n# The use of ## is intentional\nsonar.issue.ignore.multicriteria.e8.ruleKey=cpp:PPStringifyAndPastingUsage\nsonar.issue.ignore.multicriteria.e8.resourceKey=**\n\n# The use of const_cast is intentional to hide the internals\nsonar.issue.ignore.multicriteria.e9.ruleKey=cpp:S859\nsonar.issue.ignore.multicriteria.e9.resourceKey=**\n\n# Adding & prior to function name is not a bug and was removed from MISRA-C 2012\nsonar.issue.ignore.multicriteria.e10.ruleKey=cpp:S936\nsonar.issue.ignore.multicriteria.e10.resourceKey=**\n\n# We need variable argument functions\nsonar.issue.ignore.multicriteria.e11.ruleKey=cpp:FunctionEllipsis\nsonar.issue.ignore.multicriteria.e11.resourceKey=**\n\n# Allow multiple declarations on one line\nsonar.issue.ignore.multicriteria.e12.ruleKey=cpp:SingleDeclarationPerStatement\nsonar.issue.ignore.multicriteria.e12.resourceKey=**\n\n# sonar.language directive is deprecated and breaks multilanguage analysis.\n# One has to manually disable every analyser to ensure no random files are analysed.\n# Enabled languages are commented out.\n\nsonar.abap.file.suffixes=-\nsonar.apex.file.suffixes=-\n#sonar.c.file.suffixes=-\nsonar.cobol.file.suffixes=-\n#sonar.cpp.file.suffixes=-\nsonar.cs.file.suffixes=-\nsonar.css.file.suffixes=-\nsonar.flex.file.suffixes=-\nsonar.go.file.suffixes=-\nsonar.groovy.file.suffixes\nsonar.html.file.suffixes=-\nsonar.java.file.suffixes=-\nsonar.javascript.file.suffixes=-\nsonar.kotlin.file.suffixes=-\n#sonar.objc.file.suffixes=-\nsonar.pli.file.suffixes=-\nsonar.plsql.file.suffixes=-\nsonar.php.file.suffixes=-\nsonar.python.file.suffixes=-\nsonar.ruby.file.suffixes=-\nsonar.scala.file.suffixes=-\nsonar.swift.file.suffixes=-\nsonar.tsql.file.suffixes=-\nsonar.typescript.file.suffixes=-\nsonar.vb.file.suffixes=-\nsonar.vbnet.file.suffixes=-\nsonar.web.file.suffixes=-\nsonar.xml.file.suffixes=-\n\n# Specified --out-dir for the build-wrapper\nsonar.cfamily.build-wrapper-output=DerivedData/compilation-database\n\n# Disable coverage\nsonar.coverage.exclusions=**\n"
        },
        {
          "name": "umm_malloc",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}