{
  "metadata": {
    "timestamp": 1736709902459,
    "page": 405,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OpenSC/OpenSC",
      "stars": 2632,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 7.30078125,
          "content": "version: 0.26.0.{build}\n\nplatform:\n  - x86\n  - x64\n\nconfiguration:\n  - Release\n  - Light\n\nenvironment:\n  GH_TOKEN:\n    secure: jeReA6BNx/dXVMGfroKadgE9ByKAE/tAGcb2z+dIVZGAN29X1Pu22wi1TuVOy9ZugqBzjvFV4knwHJSGi0+U6Yj1fTfa2CYpeCBym4JOXqPis/GpKfSeBV9IrmJGT/Av\n  PATH: C:\\cygwin\\bin;%PATH%\n  OPENPACE_VER: 1.1.3\n  ZLIB_VER_DOT: 1.3.1\n  matrix:\n  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n    VCVARSALL: \"%ProgramFiles(x86)%/Microsoft Visual Studio/2017/Community/VC/Auxiliary/Build/vcvarsall.bat\"\n    DO_PUSH_ARTIFACT: yes\n    OPENSSL_VER: \"1.1.1\"\n    OPENSSL_DIR: \"C:\\\\OpenSSL-v111\"\n  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n    VCVARSALL: \"%ProgramFiles(x86)%/Microsoft Visual Studio/2019/Community/VC/Auxiliary/Build/vcvarsall.bat\"\n    OPENSSL_DIR: \"C:\\\\OpenSSL-v30\"\n    OPENSSL_FLAGS: \"/DHAVE_EVP_PKEY_DUP\"\n  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022\n    VCVARSALL: \"%ProgramFiles%/Microsoft Visual Studio/2022/Community/VC/Auxiliary/Build/vcvarsall.bat\"\n    OPENSSL_DIR: \"C:\\\\OpenSSL-v30\"\n    OPENSSL_FLAGS: \"/DHAVE_EVP_PKEY_DUP\"\n\ninit:\n  # Fixes \"fatal: detected dubious ownership in repository at '/cygdrive/c/projects/opensc'\" with recent images\n  - git config --global --add safe.directory /cygdrive/c/projects/opensc\n\ninstall:\n  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `\n        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `\n        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `\n        throw \"There are newer queued builds for this pull request, failing early.\" }\n  - ps: $env:PACKAGE_NAME=(git describe --tags --abbrev=0)\n  - ps: $env:OPENSSL_PF = If ($env:Platform -eq \"x86\") { \"Win32\" } Else { \"Win64\" }\n  - ps: $env:ARTIFACT=\"OpenSC-${env:PACKAGE_NAME}_${env:OPENSSL_PF}\"\n  - ps: >-\n      If ($env:Configuration -Like \"*Light*\") {\n        $env:ARTIFACT+=\"-Light\"\n      } Else {\n        If (!(Test-Path C:\\zlib )) {\n          appveyor DownloadFile \"https://github.com/madler/zlib/archive/v${env:ZLIB_VER_DOT}.zip\" -FileName zlib.zip\n          7z x zlib.zip -oC:\\\n          Rename-Item -path \"c:\\zlib-${env:ZLIB_VER_DOT}\" -newName \"zlib\"\n        }\n        If (!(Test-Path C:\\openpace )) {\n          appveyor DownloadFile \"https://github.com/frankmorgner/openpace/archive/${env:OPENPACE_VER}.zip\" -FileName openpace.zip\n          7z x openpace.zip -oC:\\\n          Rename-Item -path \"c:\\openpace-${env:OPENPACE_VER}\" -newName \"openpace\"\n        }\n      }\n      If (!(Test-Path cpdksetup.exe )) {\n          appveyor DownloadFile \"https://download.microsoft.com/download/1/7/6/176909B0-50F2-4DF3-B29B-830A17EA7E38/CPDK_RELEASE_UPDATE/cpdksetup.exe\"\n      }\n  - cpdksetup.exe /quiet\n\nbuild_script:\n  - echo \"Using %APPVEYOR_BUILD_WORKER_IMAGE% with %VCVARSALL%\"\n  - call \"%VCVARSALL%\" %Platform%\n  - ps: >-\n      if (!($env:Configuration -Like \"*Light*\")) {\n        If (!(Test-Path -Path \"C:\\zlib-${env:OPENSSL_PF}\" )) {\n          # build zlib.lib as a static library\n          xcopy C:\\zlib C:\\zlib-${env:OPENSSL_PF} /e /i /y /s\n          cd C:\\zlib-${env:OPENSSL_PF}\n          (Get-Content win32/Makefile.msc).replace('-MD', '-MT') | Set-Content win32/Makefile.msc\n          nmake /nologo -f win32/Makefile.msc zlib.lib\n        }\n        If (!(Test-Path -Path \"C:\\openpace-${env:OPENSSL_PF}\" )) {\n          # build libeac.lib as a static library\n          xcopy C:\\openpace C:\\openpace-${env:OPENSSL_PF} /e /i /y /s\n          cd C:\\openpace-${env:OPENSSL_PF}\\src\n          cl /nologo /I${env:OPENSSL_DIR}-${env:OPENSSL_PF}\\include /I. /DX509DIR=\\`\"/\\`\" /DCVCDIR=\\`\"/\\`\" /W3 /D_CRT_SECURE_NO_DEPRECATE /DWIN32_LEAN_AND_MEAN /GS /MT /DHAVE_ASN1_STRING_GET0_DATA=1 /DHAVE_DECL_OPENSSL_ZALLOC=1 /DHAVE_DH_GET0_KEY=1 /DHAVE_DH_GET0_PQG=1 /DHAVE_DH_SET0_KEY=1 /DHAVE_DH_SET0_PQG=1 /DHAVE_ECDSA_SIG_GET0=1 /DHAVE_ECDSA_SIG_SET0=1 /DHAVE_EC_KEY_METHOD=1 /DHAVE_RSA_GET0_KEY=1 /DHAVE_RSA_SET0_KEY=1 /DHAVE_EC_POINT_GET_AFFINE_COORDINATES=1 /DHAVE_EC_POINT_SET_AFFINE_COORDINATES=1 ${env:OPENSSL_FLAGS} /c ca_lib.c cv_cert.c cvc_lookup.c x509_lookup.c eac_asn1.c eac.c eac_ca.c eac_dh.c eac_ecdh.c eac_kdf.c eac_lib.c eac_print.c eac_util.c misc.c pace.c pace_lib.c pace_mappings.c ri.c ri_lib.c ta.c ta_lib.c objects.c ssl_compat.c\n          lib /nologo /out:libeac.lib ca_lib.obj cv_cert.obj cvc_lookup.obj x509_lookup.obj eac_asn1.obj eac.obj eac_ca.obj eac_dh.obj eac_ecdh.obj eac_kdf.obj eac_lib.obj eac_print.obj eac_util.obj misc.obj pace.obj pace_lib.obj pace_mappings.obj ri.obj ri_lib.obj ta.obj ta_lib.obj objects.obj ssl_compat.obj\n          cd ${env:APPVEYOR_BUILD_FOLDER}\n        }\n        $env:ZLIBSTATIC_DEF=\"/DENABLE_ZLIB_STATIC\"\n        $env:ZLIB_INCL_DIR=\"/IC:\\zlib-${env:OPENSSL_PF}\"\n        $env:ZLIB_LIB=\"C:\\zlib-${env:OPENSSL_PF}\\zlib.lib\"\n        $env:OPENSSL_DEF=\"/DENABLE_OPENSSL\"\n        $env:OPENSSL_DIR=\"${env:OPENSSL_DIR}-${env:OPENSSL_PF}\"\n        $env:OPENSSL_EXTRA_CFLAGS=\"/DOPENSSL_SECURE_MALLOC_SIZE=65536\"\n        $env:OPENPACE_DEF=\"/DENABLE_OPENPACE\"\n        $env:OPENPACE_DIR=\"C:\\openpace-${env:OPENSSL_PF}\"\n      }\n  - bash -c \"exec 0</dev/null && if [ \\\"$APPVEYOR_REPO_BRANCH\\\" == \\\"master\\\" -a -z \\\"$APPVEYOR_PULL_REQUEST_NUMBER\\\" ]; then ./bootstrap; fi\"\n  - bash -c \"exec 0</dev/null && if [ \\\"$APPVEYOR_REPO_BRANCH\\\" == \\\"master\\\" -a -n \\\"$APPVEYOR_PULL_REQUEST_NUMBER\\\" ]; then ./bootstrap.ci -s \\\"-pr$APPVEYOR_PULL_REQUEST_NUMBER\\\"; fi\"\n  - bash -c \"exec 0</dev/null && if [ \\\"$APPVEYOR_REPO_BRANCH\\\" != \\\"master\\\" -a -z \\\"$APPVEYOR_PULL_REQUEST_NUMBER\\\" ]; then ./bootstrap.ci -s \\\"-$APPVEYOR_REPO_BRANCH\\\"; fi\"\n  - bash -c \"exec 0</dev/null && if [ \\\"$APPVEYOR_REPO_BRANCH\\\" != \\\"master\\\" -a -n \\\"$APPVEYOR_PULL_REQUEST_NUMBER\\\" ]; then ./bootstrap.ci -s \\\"-$APPVEYOR_REPO_BRANCH-prAPPVEYOR_PULL_REQUEST_NUMBER\\\"; fi\"\n  # disable features to speed up the script\n  - bash -c \"exec 0</dev/null && ./configure --with-cygwin-native --disable-openssl --disable-readline --disable-zlib || cat config.log\"\n  - nmake /nologo /f Makefile.mak opensc.msi\n  - move win32\\OpenSC.msi %ARTIFACT%.msi\n  # put all pdb files for dump analysis, but this consumes approx 100 MB per build\n  - md %ARTIFACT%-Debug\n  - ps: >-\n      Get-ChildItem -recurse ${env:APPVEYOR_BUILD_FOLDER} -exclude vc*.pdb *.pdb | % {\n        7z a -tzip ${env:ARTIFACT}-Debug.zip $_.FullName\n      }\n  - appveyor PushArtifact %ARTIFACT%.msi\n  - appveyor PushArtifact %ARTIFACT%-Debug.zip\n  # keep in sync with .travis.yml\n  - bash -c \"git config --global user.email 'no-reply@appveyor.com'\"\n  - bash -c \"git config --global user.name 'AppVeyor'\"\n  - bash -c \"if [ \\\"$DO_PUSH_ARTIFACT\\\" = yes -a -z \\\"$APPVEYOR_PULL_REQUEST_NUMBER\\\" -a \\\"$APPVEYOR_REPO_NAME\\\" = \\\"OpenSC/OpenSC\\\" ]; then .github/push_artifacts.sh \\\"AppVeyor build ${APPVEYOR_BUILD_NUMBER}.${APPVEYOR_JOB_NUMBER}\\\"; fi\"\n\ndeploy:\n- provider: Webhook\n  url: https://app.signpath.io/API/v1/8d2463fe-39bd-4a41-bb72-f008b4b1fe17/Integrations/AppVeyor?ProjectSlug=OpenSC&SigningPolicySlug=release-signing&ArtifactConfigurationSlug=initial\n  authorization:\n     secure: 73Qvk9MbD7M7ZcoO6NnSH7zDA+9wSKZqNc602b1UeA5v6GsDyEvpCOlzJ9VvBcUuePTKBRsZ+uGQYKsddABgQA==\n\ncache:\n  - C:\\zlib -> .appveyor.yml\n  - C:\\zlib-Win32 -> .appveyor.yml\n  - C:\\zlib-Win64 -> .appveyor.yml\n  - C:\\openpace -> .appveyor.yml\n  - C:\\openpace-Win32 -> .appveyor.yml\n  - C:\\openpace-Win64 -> .appveyor.yml\n  - cpdksetup.exe -> .appveyor.yml\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.08984375,
          "content": "BasedOnStyle: LLVM\n# defaults from LLVM\n# BreakBeforeBraces: Attach\n# AllowShortIfStatementsOnASingleLine: Never\n# IndentCaseLabels: false\n# AlignAfterOpenBracket: Align\n# AlignTrailingComments: true\n# MaxEmptyLinesToKeep: 1\n# ReflowComments: falsedefault\n# SortIncludes: true\n# BreakBeforeBinaryOperators: None\n# BraceWrapping:\n#   AfterClass:      false\n#   AfterControlStatement: false\n#   AfterFunction:   false\n#   AfterNamespace:  false\n#   BeforeCatch:     false\n#   BeforeElse:      false\n#   IndentBraces:    false\n\n# OpenSC modifications\nTabWidth: 8\nIndentWidth: 8\nContinuationIndentWidth: 16\nAlignAfterOpenBracket: DontAlign\nUseTab: Always\nAlignConsecutiveMacros: true\nAlignEscapedNewlines: DontAlign\nAllowShortFunctionsOnASingleLine: None\nAlwaysBreakAfterReturnType: AllDefinitions\n## This prevents reflowing intentionally short lines but\n##  it can be allowed only after we will have some baseline\nColumnLimit: 0\n#ColumnLimit: 110\nIndentCaseBlocks: false\nAlignArrayOfStructures: Left\n\nBreakBeforeBraces: Custom\nBraceWrapping:\n  AfterObjCDeclaration: true\n  AfterUnion:      true\n  AfterFunction:   true\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2880859375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nmax_line_length = 110\nend_of_line = lf\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.{c,h,sh}]\nindent_style = tab\ntab_width = 8\n\n[{Makefile.am,configure.ac}]\nindent_style = tab\ntab_width = 8\n\n[*.{yml,yaml}]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.51171875,
          "content": "Makefile\nMakefile.in\ncore\narchive\nacinclude.m4\naclocal.m4\naminclude_static.am\nautom4te.cache\ncompile\nconfdefs.h\nconfig.*\nconfigure\nconftest\nconftest.c\ndepcomp\ninstall-sh\nlibtool\nlibtool.m4\nlt*.m4\nltmain.sh\nmissing\nmkinstalldirs\nso_locations\nstamp-h*\ntags\ntest-driver\n.deps\n.libs\n.dirstamp\n.#*#\n.*.bak\n.*.orig\n.*.rej\n.*~\n#*#\n*.bak\n*.d\n*.def\n*.dll\n*.exe\n*.la\n*.lib\n*.lo\n*.orig\n*.pdb\n*.rej\n*.u\n*.rc\n*.pc\n*~\n*.o\n*.gz\n*.bz2\n*.[0-9]\n*.gif\n*.css\n*.out\n*.tmp\n*.obj\n*.exp\n*.res\n*.ggo\nChangeLog\n.cache\ncompile_commands.json\n.dirstamp\n\ndoc/tools/*-tool\ndoc/tools/eidenv\ndoc/tools/opensc-explorer\ndoc/tools/pkcs11-register\ndoc/tools/pkcs15-crypt\ndoc/tools/pkcs15-init\ndoc/tools/opensc-asn1\ndoc/tools/opensc-notify\ndoc/files/opensc.conf.5.xml\ndoc/files/pkcs15-profile.5.xml\n\netc/opensc.conf.example\nsrc/common/compat_getopt_main\nsrc/minidriver/opensc-minidriver.inf\nsrc/tools/*-tool\nsrc/tools/pkcs15-crypt\nsrc/tools/pkcs15-init\nsrc/tools/eidenv\nsrc/tools/opensc-explorer\nsrc/tools/cardos-info\nsrc/tools/sceac-example\nsrc/tools/opensc-notify\nsrc/tools/opensc-notify.plist\nsrc/tools/org.opensc.notify.desktop\nsrc/tools/pkcs11-register\nsrc/tools/pkcs11-register.plist\nsrc/tools/pkcs11-register.desktop\nsrc/tools/opensc-asn1\nsrc/tools/org.opensc-project.mac.opensc-notify.plist\nsrc/tools/org.opensc-project.mac.pkcs11-register.plist\n\nwin32/OpenSC.iss\nwin32/OpenSC.wxs\nwin32/winconfig.h\nwin32/OpenSC.msi\nwin32/OpenSC.wixobj\nwin32/OpenSC.wixpdb\n\nMacOSX/build-package\nMacOSX/Distribution*.xml\nMacOSX/resources/Welcome.html\n\n*.dmg\n*.pkg\nOpenSC.tokend/\nbuild/\nengine_pkcs11/\nlibp11/\ntarget/\n\nsrc/scconf/test-conf\n\nsrc/tests/base64\nsrc/tests/lottery\nsrc/tests/p15dump\nsrc/tests/pintest\nsrc/tests/prngtest\nsrc/tests/p11test/p11test\n\ntests/*.log\ntests/*.trs\nsrc/tests/unittests/*.log\nsrc/tests/unittests/*.trs\nsrc/tests/unittests/asn1\nsrc/tests/unittests/cachedir\nsrc/tests/unittests/compression\nsrc/tests/unittests/openpgp-tool\nsrc/tests/unittests/pkcs15filter\nsrc/tests/unittests/simpletlv\nsrc/tests/unittests/sm\nsrc/tests/unittests/check_macro_reference_loop\nsrc/tests/unittests/decode_ecdsa_signature\nsrc/tests/unittests/hextobin\n\nsrc/tests/fuzzing/fuzz_asn1_print\nsrc/tests/fuzzing/fuzz_asn1_sig_value\nsrc/tests/fuzzing/fuzz_card\nsrc/tests/fuzzing/fuzz_piv_tool\nsrc/tests/fuzzing/fuzz_pkcs11\nsrc/tests/fuzzing/fuzz_pkcs15_crypt\nsrc/tests/fuzzing/fuzz_pkcs15_decode\nsrc/tests/fuzzing/fuzz_pkcs15_encode\nsrc/tests/fuzzing/fuzz_pkcs15_reader\nsrc/tests/fuzzing/fuzz_pkcs15_tool\nsrc/tests/fuzzing/fuzz_pkcs15init\nsrc/tests/fuzzing/fuzz_scconf_parse_string\n\nversion.m4.ci\nopenssl_arm64\nopenssl_bin\n"
        },
        {
          "name": ".ignoreRevsFile",
          "type": "blob",
          "size": 1.1787109375,
          "content": "70771735ae10180bb039043b9a1b00b66bf00fc1 # Remove trailing whitespace and reformat to improve readability\nebee0cc63896c13741c1181defb911c1aa8c8872 # Reformat long lines for readability\n010d3f4a5b3fdbf9c393b1a85d261fcb3ff5d207 # profile: Reformat for readability\n38f437f182475ec01c52ff1bce725c14dfcbdf92 # setcos: Reformat for readability\n45e3daacb2380f38b7d09b3cfd6ec1e3240e24fb # Reformat to UTF8\n152b988c5a91eb4761734012d8fb7d0a53e3d830 # p11test: Reformat\nb820bdf5b3799aa15c0a29150e64c227d1c0abfc # tcos: Reformat tcos_decipher\n69544553c36f0613f6283e0eeb3f9eb549825986 # tcos: Reformat insert_pin() for readability\nd3451faa2190e9f4c12bb00adf00149b7af1d18d # tcos: Reformat insert_key\n71d1f69a3a8b7e6436c1747945227fc66f4c6fda # Reformat tcos_compute_signature() for better readability\n1819ca33d616f4b50d8a2e6444a15a0a5a4c157b # tcos_decipher: Reformat to improve readability\n7e0ef7c16c99f80bb90292ea3190eca5b426e251 # ramework-pkcs15.c: Reformat\n0c9717a82e8cd39c755ce5491cf4c3d77bd08022 # Reformat: remove extra spaces and tabs\n1a36ce7586e50de149aa05a9cde638df1b4f746f # Apply OpenSC:ci .clang-format\nf443c391b03d06c821a7a725279c3cd135f9c13b # PIV whitespace cleanup and addtion of // clang-format off|on\n"
        },
        {
          "name": ".packit.yaml",
          "type": "blob",
          "size": 0.4853515625,
          "content": "upstream_project_url: https://github.com/OpenSC/OpenSC\n\nspecfile_path: packaging/opensc.spec\nfiles_to_sync:\n  - packaging/opensc.spec\n  - .packit.yaml\nupstream_package_name: opensc\ndownstream_package_name: opensc\nmerge_pr_in_ci: false\n\nnotifications:\n  pull_request:\n    successful_build: true\n\njobs:\n- job: copr_build\n  trigger: pull_request\n  metadata:\n    targets:\n    - fedora-development-x86_64\n    - fedora-development-aarch64\n    - fedora-development-ppc64le\n    - fedora-development-s390x\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.951171875,
          "content": "# Formatting style\n\nThe OpenSC formatting rules are described in `.clang-format` in the root\ndirectory. It is based on [LLVM](https://llvm.org/docs/CodingStandards.html)\nstyle with couple of modifications:\n\n * Tabs\n   * Tabs are used instead of spaces\n   * Tab is 8 spaces wide\n * The maximum line width is 110 characters\n * Opening braces follow the condition/expression except for the functions\n\nExamples:\n\n```\nvoid\nfunction_name(int arg)\n{\n\tint var = 0;\n\tint rc = 0;\n\n\tif (arg) {\n\t\tvar = do_something();\n\t}\n\tif (rc = call_some_function(arg) ||\n\t\t\trc = call_some_other_long_funct(arg) ||\n\t\t\trc = call_one_more_func(arg)) {\n\t\t/* Note the two Tabs on the line above ! */\n\t\treturn rc;\n\t}\n\treturn var;\n}\n```\n\nTo check your changes if they follow the formatting style (before submitting\na PR), you can use `clang-format` tool or `git-clang-format`, which can check\nonly the parts of the code you changed in your branch\n\n```\n$ git-clang-format --diff --commit upstream/master\n```\n\n# Testing locally\n\nTo learn how to run the tests from Github actions locally in containers, see\n[`containers`](containers/README.md).\n\n# Spelling\n\nOne of the GitHub actions checks spelling using\n[codespell](https://github.com/codespell-project/codespell).\nIf you need to ignore some words, such as variable names or\nwords in languages other than English, add them to file\n`codespell_ignore_words.txt`.\n\nNote that [codespell](https://github.com/codespell-project/codespell#usage)\nexpects words to be lower case:\n> **Important note:** The list passed to -I is case-sensitive\n> based on how it is listed in the codespell dictionaries.\n\nAfter installing\n[codespell](https://github.com/codespell-project/codespell#installation),\nyou can run it from the command line as:\n```sh\ncodespell -I .github/codespell_ignore_words.txt\n```\n\n# Release process\n\nThe release process is described in [OpenSC wiki](https://github.com/OpenSC/OpenSC/wiki/OpenSC-Release-Howto)\n\nTODO tarball signing: https://github.com/OpenSC/OpenSC/issues/1129\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 25.900390625,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n\n"
        },
        {
          "name": "MacOSX",
          "type": "tree",
          "content": null
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 1.4658203125,
          "content": "ACLOCAL_AMFLAGS = -I m4\n\nMAINTAINERCLEANFILES = \\\n\tconfig.log config.status \\\n\t$(srcdir)/Makefile.in \\\n\t$(srcdir)/config.h.in $(srcdir)/config.h.in~ $(srcdir)/configure \\\n\t$(srcdir)/install-sh $(srcdir)/ltmain.sh $(srcdir)/missing \\\n\t$(srcdir)/depcomp $(srcdir)/aclocal.m4 \\\n\t$(srcdir)/config.guess $(srcdir)/config.sub \\\n\t$(srcdir)/m4/ltsugar.m4 $(srcdir)/m4/libtool.m4 \\\n\t$(srcdir)/m4/ltversion.m4 $(srcdir)/m4/lt~obsolete.m4 \\\n\t$(srcdir)/m4/ltoptions.m4 \\\n\t$(srcdir)/packaged\nEXTRA_DIST = Makefile.mak\n\nDISTCHECK_CONFIGURE_FLAGS = --with-completiondir=/tmp\n\nSUBDIRS = etc src win32 doc MacOSX tests\n\ndist_noinst_SCRIPTS = bootstrap bootstrap.ci\ndist_noinst_DATA = README \\\n\tpackaging/debian.templates/changelog \\\n\tpackaging/debian.templates/compat \\\n\tpackaging/debian.templates/control \\\n\tpackaging/debian.templates/copyright \\\n\tpackaging/debian.templates/docs \\\n\tpackaging/debian.templates/opensc.install \\\n\tpackaging/debian.templates/rules\ndist_doc_DATA = NEWS\n\ninclude $(top_srcdir)/aminclude_static.am\nclean-local: code-coverage-clean\ndistclean-local: code-coverage-dist-clean\n\nGenerate-ChangeLog:\n\trm -f ChangeLog.tmp \"$(srcdir)/ChangeLog\"\n\ttest -n \"$(GIT)\"\n\tif test -d \"$(top_srcdir)/.git\"; then \\\n\t\techo \"# Generated by Makefile. Do not edit!\" > ChangeLog.tmp; \\\n\t\t$(GIT) log >> ChangeLog.tmp; \\\n\telse \\\n\t\techo \"Warning: Unable to generate ChangeLog. Need a Git repostiroy.\" >&2; \\\n\t\techo > ChangeLog.tmp; \\\n\tfi\n\tmv ChangeLog.tmp \"$(srcdir)/ChangeLog\"\n\t( cd \"$(srcdir)\" && autoreconf -ivf )\n"
        },
        {
          "name": "Makefile.mak",
          "type": "blob",
          "size": 0.2158203125,
          "content": "SUBDIRS = etc win32 src\n\ndefault: all\n\nopensc.msi: all\n\tcd win32 && $(MAKE) /nologo /f Makefile.mak opensc.msi && cd ..\n\nall clean::\n\t@for %%i in ( $(SUBDIRS) ) do ( cd %%i && $(MAKE) /nologo /f Makefile.mak $@ && cd ..)\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 59.3076171875,
          "content": "NEWS for OpenSC -- History of user visible changes\n\n# New in 0.26.0; 2024-11-13\n\n## Security\n* CVE-2024-45615: Usage of uninitialized values in libopensc and pkcs15init (#3225)\n* CVE-2024-45616: Uninitialized values after incorrect check or usage of APDU response values in libopensc (#3225)\n* CVE-2024-45617: Uninitialized values after incorrect or missing checking return values of functions in libopensc (#3225)\n* CVE-2024-45618: Uninitialized values after incorrect or missing checking return values of functions in pkcs15init (#3225)\n* CVE-2024-45619: Incorrect handling length of buffers or files in libopensc (#3225)\n* CVE-2024-45620: Incorrect handling of the length of buffers or files in pkcs15init (#3225)\n* CVE-2024-8443: Heap buffer overflow in OpenPGP driver when generating key (#3219)\n\n## General improvements\n* Fix reselection of DF after error in PKCS#15 layer (#3067)\n* Unify OpenSSL logging throughout code (#2922)\n* Extend the p11test to support kryoptic (#3141)\n* Fix for error in PCSC reconnection (#3150)\n* Fixed various issues reported by OSS-Fuzz and Coverity in drivers, PKCS#11 and PKCS#15 layer\n\n## PKCS#15\n* Documentation for PKCS#15 profile files (#3132)\n\n## minidriver\n* Support PinCacheAlwaysPrompt usable for PIV cards (#3167)\n\n## pkcs11-tool\n* Show URI when listing token information (#3125) and objects (#3130)\n* Do not limit size of objects to 5000 bytes (#3174)\n* Add support for AES CMAC (#3184)\n* Add support for AES GCM encryption (#3195)\n* Add support for RSA OAEP encryption (#3175)\n* Add support for HKDF (#3193)\n* Implement better support for wrapping and unwrapping (#3198)\n* Add support for EdDSA sign and verify (#2979)\n\n## pkcs15-crypt\n* Fix PKCS#1 encoding function to correctly detect padding type (#3075)\n\n## piv-tool\n* Fix RSA key generation (#3158)\n* Avoid possible state change when matching unknown card (#3112)\n\n## sc-hsm-tool\n* Cleanse buffer with plaintext key share (#3226)\n\n## pkcs11-register\n* Fix pkcs11-register defaults on macOS and Windows (#3053)\n\n## IDPrime\n* Fix identification of IDPrime 840 cards (#3146)\n* Fix container mapping for IDPrime 940 cards (#3220)\n* Reorder ATRs for matching cards (#3154)\n\n## OpenPGP\n* Fix state tracking after erasing card (#3024)\n\n## Belpic\n* Disable Applet V1.8 (#3109)\n\n## MICARDO\n* Deactivate driver (#3152)\n\n## SmartCard-HSM\n* Fix signing with secp521r1 signature (#3157)\n\n## eOI\n* Set model via `sc_card_ctl` function (#3189)\n\n## Rutoken\n* increase the minimum PIN size to support Rutoken ECP BIO (#3208)\n\n## JPKI\n* Adjust parameters for public key in PKCS#15 emulator (#3182)\n\n## D-Trust\n* Add support for ECDSA signatures and ECDH key agreement for D-Trust Signatures Cards 4.1/4.4  (#3240, #3248)\n\n# New in 0.25.1; 2024-04-05\n\n## General improvements\n* Add missing file to dist tarball to build documentation (#3063)\n\n## minidriver\n* Fix RSA decryption with PKCS#1 v1.5 padding (#3077)\n* Fix crash when app is not set (#3084)\n\n# New in 0.25.0; 2024-03-06\n## Security\n* [CVE-2023-5992](https://github.com/OpenSC/OpenSC/wiki/CVE-2023-5992): Side-channel leaks while stripping encryption PKCS#1.5 padding in OpenSC (#2948)\n* [CVE-2024-1454](https://github.com/OpenSC/OpenSC/wiki/CVE-2024-1454): Potential use-after-free in AuthentIC driver during card enrollment in pkcs15init (#2962)\n\n## General improvements\n* Update OpenSSL 1.1.1 to 3.0 in MacOS build (#2930)\n* Remove support for old card drivers Akis, GPK, Incrypto34 and Westcos, disable Cyberflex driver (#2885)\n* Fix 64b to 32b conversions (#2993)\n* Improvements for the p11test (#2991)\n* Fix reader initialization without SCardControl (#3007)\n* Make RSA PKCS#1 v1.5 depadding constant-time (#2948)\n* Add option for disabling PKCS#1 v1.5 depadding (type 01 and 02) on the card (#2975)\n* Enable MSI signing via Signpath CI integration for Windows (#2799)\n* Fixed various issues reported by OSS-Fuzz and Coverity in drivers, PKCS#11 and PKCS#15 layer\n\n## minidriver\n* Fix wrong hash selection (#2932)\n\n## pkcs11-tool\n* Simplify printing EC keys parameters (#2960)\n* Add option to import GENERIC key (#2955)\n* Add support for importing Ed25518/448 keys (#2985)\n## drust-tool\n* Add tool for D-Trust cards (#3026, #3051)\n## IDPrime\n* Support uncompressed certificates on IDPrime 940 (#2958)\n* Enhance IDPrime logging (#3003)\n* Add SafeNet 5110+ FIPS token support (#3048)\n## D-Trust Signature Cards\n* Add support for RSA D-Trust Signature Card 4.1 and 4.4 (#2943)\n## EstEID\n* Remove expired EstEID 3.* card support (#2950)\n## ePass2003\n* Allow SW implementation with more SHA2 hashes and ECDSA (#3012)\n* Fix EC key generation (#3045)\n## SmartCard-HSM\n* Fix SELECT APDU command (#2978)\n## MyEID\n* Update for PKCS#15 profile (#2965)\n## Rutoken\n* Support for RSA 4096 key algorithm (#3011)\n## OpenPGP\n* Fix decryption requiting Manage Security Environment for authentication key (#3042)\n\n# New in 0.24.0; 2023-12-13\n## Security\n* CVE-2023-40660: Fix Potential PIN bypass (#2806, frankmorgner/OpenSCToken#50, #2807)\n* CVE-2023-40661: Important dynamic analyzers reports\n* CVE-2023-4535: Out-of-bounds read in MyEID driver handling encryption using symmetric keys (f1993dc4)\n## General improvements\n* Fix compatibility of EAC with OpenSSL 3.0 (#2674)\n* Enable `use_file_cache` by default (#2501)\n* Use custom libctx with OpenSSL >= 3.0 (#2712, #2715)\n* Fix record-based files (#2604)\n* Fix several race conditions (#2735)\n* Run tests under Valgrind (#2756)\n* Test signing of data bigger than 512 bytes (#2789)\n* Update to OpenPACE 1.1.3 (#2796)\n* Implement logout for some of the card drivers (#2807)\n* Fix wrong popup position of opensc-notify (#2901)\n* Fixed various issues reported by OSS-Fuzz and Coverity regarding card drivers, PKCS#11 and PKCS#15 init\n## PKCS#11\n* Check card presence state in `C_GetSessionInfo` (#2740)\n* Remove `onepin-opensc-pkcs11` module (#2681)\n* Do not use colons in the token info label (#2760)\n* Present profile objects in all slots with the CKA_TOKEN attribute to resolve issues with NSS (#2928, #2924)\n* Use secure memory for PUK (#2906)\n* Don't logout to preserve concurrent access from different processes (#2907)\n* Add more examples to manual page (#2936)\n* Present profile objects in all virtual slots (#2928)\n* Provide CKA_TOKEN attribute for profile objects (#2924)\n* Improve --slot parameter documentation (#2951)\n## PKCS#15\n* Honor cache offsets when writing file cache (#2858)\n* Prevent needless amount of PIN prompts from pkcs15init layer (#2916)\n* Propagate CKA_EXTRACTABLE and SC_PKCS15_PRKEY_ACCESS_SENSITIVE from and back to PKCS#11 (#2936)\n## Minidriver\n* Fix for private keys that do not need a PIN (#2722)\n* Unbreak decipher when the first null byte of PKCS#1.5 padding is missing (#2939)\n## pkcs11-tool\n* Fix RSA key import with OpenSSL 3.0 (#2656)\n* Add support for attribute filtering when listing objects (#2687)\n* Add support for `--private` flag when writing certificates (#2768)\n* Add support for non-AEAD ciphers to the test mode (#2780)\n* Show CKA_SIGN attribute for secret keys (#2862)\n* Do not attempt to read CKA_ALWAYS_AUTHENTICATE on secret keys (#2864, #2913)\n* Show Sign/VerifyRecover attributes (#2888)\n* Add option to import generic keys (#2955)\n## westcos-tool\n* Generate 2k RSA keys by default (b53fc5cd)\n## pkcs11-register\n* Disable autostart on Linux by default (#2680)\n## IDPrime\n* Add support for IDPrime MD 830, 930 and 940 (#2666)\n* Add support for SafeNet eToken 5110 token (#2812)\n* Process index even without keyrefmap and use correct label for second PIN (#2878)\n* Add support for Gemalto IDPrime 940C (#2941)\n## EPass2003\n* Change of PIN requires verification of the PIN (#2759)\n* Fix incorrect CMAC computation for subkeys (#2759, issue #2734)\n* Use true random number for mutual authentication for SM (#2766)\n* Add verification of data coming from the token in the secure messaging mode (#2772)\n* Avoid success when using unsupported digest and fix data length for RAW ECDSA signatures (#2845)\n## OpenPGP\n* Fix select data command (#2753, issue #2752)\n* Unbreak ed/curve25519 support (#2892)\n## eOI\n* Add support for Slovenian eID card (eOI) (#2646)\n## Italian CNS\n* Add support for IDEMIA (Oberthur) tokens (#2483)\n## PIV\n* Add support for Swissbit iShield FIDO2 Authenticator (#2671)\n* Implement PIV secure messaging (#2053)\n## SkeID\n* Add support for Slovak eID cards (#2672)\n## isoApplet\n* Support ECDSA with off-card hashing (#2642)\n## MyEID\n* Fix WRAP operation when using T0 (#2695)\n* Identify changes on the card and enable `use_file_cache` (#2798)\n* Workaround for unwrapping using 2K RSA key (#2921)\n## SC-HSM\n* Add support for `opensc-tool --serial` (#2675)\n* Fix unwrapping of 4096 keys with handling reader limits (#2682)\n* Indicate supported hashes and MGF1s (#2827)\n\n# Addendum for 0.22.0; 2023-09-01\n* fixed security problems\n  * CVE-2021-42778 Heap double free in sc_pkcs15_free_tokeninfo\n  * CVE-2021-42779 Heap use after free in sc_file_valid\n  * CVE-2021-42780 Use after return in insert_pin function\n  * CVE-2021-42781 Heap buffer overflow in pkcs15-oberthur.c\n  * CVE-2021-42782 Stack buffer overflow issues in various places\n  * CVE-2021-34193 is a duplicate CVE covering the 5 individual CVEs listed above\n\n# New in 0.23.0; 2022-11-29\n## General improvements\n* Support signing of data with a length of more than 512 bytes (#2314)\n* By default, disable support for old card drivers (#2391) and remove support for old drivers MioCOS and JCOP (#2374)\n* Bump minimal required OpenSSL version to 1.1.1 and add support for OpenSSL 3.0 (#2438, #2506)\n* Compatibility with LibreSSL (#2495, #2595)\n* Remove support for DSA (#2503)\n* Extend p11test to support symmetric keys (#2430)\n* Notice detached reader on macOS (#2418)\n* Support for OAEP padding (#2475, #2484)\n* Fix for PSS salt length (#2478)\n* Improve fuzzing by adding new tests (#2417, #2500, #2520, #2550, #2637)\n* Fixed various issues reported by OSS-Fuzz and Coverity regarding card drivers, PKCS#11 and PKCS#15 init\n* Fix issues with OpenPACE (#2472)\n* Containers support for local testing\n* Add support for encryption and decryption using symmetric keys (#2473, #2607)\n* Stop building support for Gost algorithms with OpenSSL 3.0 as they require deprecated API (#2586)\n* Fix detection of disconnected readers in PCSC (#2600)\n* Add configuration option for on-disk caching of private data (#2588)\n* Skip building empty binaries when dependencies are missing and remove needless linking (#2617)\n* Define arm64 as a supported architecture in the Installer package (#2610)\n## PKCS#11\n* Implement `C_CreateObject` for EC keys and fix signature verification for `CKM_ECDSA_SHAx` cards (#2420)\n## pkcs11-tool\n* Add more elliptic curves (#2301)\n* Add support for symmetric encrypt and decrypt, wrap and unwrap operations, and initialization vector (#2268)\n* Fix consistent handling of secret key attributes (#2497)\n* Add support for signing and verifying with HMAC (#2385)\n* Add support for SHA3 (#2467)\n* Make object selectable via label (#2570)\n* Do not require an R/W session for some operations and add `--session-rw` option (#2579)\n* Print more information: CKA_UNIQUE_ID attribute, SHA3 HMACs and serial number for certificates (#2644, #2643, #2641)\n* Add new option --undestroyable to create keys with CKA_DESTROYABLE=FALSE (#2645)\n## sc-hsm-tool\n* Add options for public key authentication (#2301)\n## Minidriver\n* Fix reinit of the card (#2525)\n* Add an entry for Italian CNS (e) (#2548)\n* Fix detection of ECC mechanisms (#2523)\n* Fix ATRs before adding them to the windows registry (#2628)\n## NQ-Applet\n* Add support for the JCOP4 Cards with NQ-Applet (#2425)\n## ItaCNS\n* Add support for ItaCMS v1.1 (key length 2048) (#2371)\n## Belpic\n* Add support for applet v1.8 (#2455)\n## Starcos\n* Add ATR for V3.4 (#2464)\n* Add PKCS#15 emulator for 3.x cards with eSign app (#2544)\n* Add (fix) support for eGK v 2.1 (#2871)\n## ePass2003\n* Fix PKCS#15 initialization (#2403)\n* Add support for FIPS (#2543)\n* Fix matching with newer versions and tokens initialized with OpenSC (#2575)\n## MyEID\n* Support logout operation (#2557)\n* Support for symmetric encryption and decryption (#2473, #2607)\n## GIDS\n* Fix decipher for TPM (#1881)\n## OpenPGP\n* Get the list of supported algorithms from algorithm information on the card (#2287)\n* Support for 3 certificates with OpenPGP 3+ (#2103)\n## nPA\n* Fix card detection (#2463)\n## Rutoken\n* Fix formatting rtecp cards (#2599)\n## PIV\n* Add new PIVKey ATRs for current cards (#2602)\n\n\n# New in 0.22.0; 2021-08-10\n## General improvements\n * Use standard paths for file cache on Linux (#2148) and OSX (#2214)\n * Various issues of memory/buffer handling in legacy drivers mostly reported by oss-fuzz and coverity (tcos, oberthur, isoapplet, iasecc, westcos, gpk, flex, dnie, mcrd, authentic, belpic)\n * Add threading test to `pkcs11-tool` (#2067)\n * Add support to generate generic secret keys (#2140)\n * `opensc-explorer`: Print information about LCS (Life cycle status byte) (#2195)\n * Add support for Apple's arm64 (M1) binaries, removed TokenD. A separate installer with TokenD (and without arm64 binaries) will be available (#2179).\n * Support for gcc11 and its new strict aliasing rules (#2241, #2260)\n * Initial support for building with OpenSSL 3.0 (#2343)\n * pkcs15-tool: Write data objects in binary mode (#2324)\n * Avoid limited size of log messages (#2352)\n## PKCS#11\n * Support for ECDSA verification (#2211)\n * Support for ECDSA with different SHA hashes (#2190)\n * Prevent issues in p11-kit by not returning unexpected return codes (#2207)\n * Add support for PKCS#11 3.0: The new interfaces, profile objects and functions (#2096, #2293)\n * Standardize the version 2 on 2.20 in the code (#2096)\n * Fix CKA_MODIFIABLE and CKA_EXTRACTABLE  (#2176)\n * Copy arguments of C_Initialize (#2350)\n## Minidriver\n * Fix RSA-PSS signing (#2234)\n## OpenPGP\n * Fix DO deletion (#2215)\n * Add support for (X)EdDSA keys (#1960)\n## IDPrime\n * Add support for applet version 3 and fix RSA-PSS mechanisms (#2205)\n * Add support for applet version 4 (#2332)\n## MyEID\n * New configuration option for opensc.conf to disable pkcs1_padding (#2193)\n * Add support for ECDSA with different hashes (#2190)\n * Enable more mechanisms (#2178)\n * Fixed asking for a user pin when formatting a card (#1737)\n## IAS/ECC\n * Added support for French CPx Healthcare cards (#2217)\n## CardOS\n * Added ATR for new CardOS 5.4 version (#2296)\n\n# New in 0.21.0; 2020-11-24\n## General Improvements\n* fixed security problems\n  * CVE-2020-26570 (6903aebfddc466d966c7b865fae34572bf3ed23e)\n  * CVE-2020-26571\n  * CVE-2020-26572 (9d294de90d1cc66956389856e60b6944b27b4817)\n* Bump minimal required OpenSSL version to 1.0.1 (#1658)\n* Implement basic unit tests for asn1 library, compression and simpletlv parser (#1830)\n* Allow generating code coverage\n* Improve fuzzing by providing corpus from real cards (#1830)\n* Implement support for OAEP encryption\n* New separate debug level for PIN commands (d06f23e8)\n* Fix handling of card/reader insertion/removal events in pcscd\n* Many bugfixes reported by oss-fuzz, coverity and lgtm.com\n* Fixes of removed readers handling (#1970)\n* Fix Firefox crash because of invalid pcsc context (#2077)\n## PKCS#11\n* Return CKR_TOKEN_NOT_RECOGNIZED for not recognized cards (#2030)\n* Propagate ignore_user_content to PKCS#11 layer not to confuse applications (#2040)\n## Minidriver\n* Fix check of ATR length (2-to 33 characters inclusive) (#2146)\n## MacOS\n* Add installer signing for PR and master\n* Avoid app bundle relocations after installation\n* Move OpenSC to MacOS Utilities folder (#2063)\n## OpenSC tools\n### pkcs11-tool\n* Make SHA256 default for OAEP encryption\n* pkcs11-tool: allow using SW tokens (#2113)\n### opensc-explorer\n* `asn1` accepts offsets and decode records (#2090)\n* `cat` accepts records (#2090)\n## OpenPGP\n* Add new ec curves supported by GNUK (#1853)\n* First steps supporting OpenPGP 3.4\n* Add support for EC key import (#1821)\n## Rutoken\n* Add ATR for Rutoken ECP SC NFC (#2122)\n## CardOS\n* Improve detection of various CardOS 5 configurations (#1987)\n## DNIe\n* Add new DNIe CA structure for the secure channel (#2109)\n## ePass2003\n* Improve ECC support (#1859)\n* Fixed erase sequence (#2097)\n## IAS-ECC (#2070):\n* Fixed support for Idemia Cosmo cards with AWP middleware interoperability (previously broken).\n* Added support for Idemia Cosmo v8 cards.\n* PIN padding settings are now used from PKCS#15 info when available.\n* Added PIN-pad support for PIN unblock.\n## IDPrime\n* New driver for Gemalto IDPrime (only some types) (#1772)\n## eDo\n* New driver with initial support for Polish eID card (e-dowód, eDO) (#2023)\n## MCRD\n* Remove unused and broken RSA EstEID support (#2095)\n## TCOS\n* Add missing encryption certificates (#2083)\n## PIV\n* Add ATR of DOD Yubikey (#2115)\n* fixed PIV global pin bug (#2142)\n## CAC1\n* Support changing PIN with CAC Alt tokens (#2129)\n\n# New in 0.20.0; 2019-12-29\n## General Improvements\n* fixed security problems\n    * CVE-2019-6502 (#1586)\n    * CVE-2019-15946 (a3fc769)\n    * CVE-2019-15945 (412a614)\n    * CVE-2019-19480 (6ce6152284c47ba9b1d4fe8ff9d2e6a3f5ee02c7)\n    * CVE-2019-19481 (b75c002cfb1fd61cd20ec938ff4937d7b1a94278)\n    * CVE-2019-19479 (c3f23b836e5a1766c36617fe1da30d22f7b63de2)\n* Support RSA-PSS signature mechanisms using RSA-RAW (#1435)\n* Added memory locking for secrets (#1491)\n* added support for terminal colors (#1534)\n* PC/SC driver: Fixed error handling in case of changing (#1537) or removing the card reader (#1615)\n* macOS installer\n    * Add installer option to deselect tokend (#1607)\n    * Make OpenSCToken available on 10.12+ and the default on 10.15+ (2017626ed237dbdd4683a4b9410fc610618200c5)\n* Configuration\n    * rename `md_read_only` to `read_only` and use it for PKCS#11 and Minidriver (#1467)\n    * allow global use of ignore_private_certificate (#1623)\n* Build Environment\n    * Bump openssl requirement to 0.9.8 (##1459)\n    * Added support for fuzzing with AFL (#1580) and libFuzzer/OSS-Fuzz (#1697)\n    * Added CI tests for simulating GIDS, OpenPGP, PIV, IsoApplet (#1568) and MyEID (#1677) and CAC (#1757)\n    * Integrate clang-tidy with `make check` (#1673)\n    * Added support for reproducible builds (#1839)\n## PKCS#11\n* Implement write protection (CKF_WRITE_PROTECTED) based on the card profile (#1467)\n* Added C_WrapKey and C_UnwrapKey implementations (#1393)\n* Handle CKA_ALWAYS_AUTHENTICATE when creating key objects. (#1539)\n* Truncate long PKCS#11 labels with ... (#1629)\n* Fixed recognition of a token when being unplugged and reinserted (#1875)\n## Minidriver\n* Register for CardOS5 cards (#1750)\n* Add support for RSA-PSS (263b945)\n## OpenSC tools\n* Harmonize the use of option `-r`/`--reader` (#1548)\n* `goid-tool`: GoID personalization with fingerprint\n* `openpgp-tool`\n    * replace the options `-L`/` --key-length` with `-t`/`--key-type` (#1508)\n    * added options `-C`/`--card-info` and `-K`/`--key-info` (#1508)\n* `opensc-explorer`\n    * add command `pin_info` (#1487)\n    * extend `random` to allow writing to a file (#1487)\n* `opensc-minidriver-test.exe`: Tests for Microsoft CryptoAPI (#1510)\n* `opensc-notify`: Autostart on Windows\n* `pkcs11-register`:\n    * Auto-configuration of applications for use of OpenSC PKCS#11 (#1644)\n    * Autostart on Windows, macOS and Linux (#1644)\n* `opensc-tool`: Show ATR also for cards not recognized by OpenSC (#1625)\n* `pkcs11-spy`:\n    * parse CKM_AES_GCM\n    * Add support for CKA_OTP_* and CKM_*_PSS values\n    * parse EC Derive parameters (#1677)\n* `pkcs11-tool`\n    * Support for signature verification via `--verify` (#1435)\n    * Add object type `secrkey` for `--type` option (#1575)\n    * Implement Secret Key write object (#1648)\n    * Add GOSTR3410-2012 support (#1654)\n    * Add support for testing CKM_RSA_PKCS_OAEP (#1600)\n    * Add extractable option to key import (#1674)\n    * list more key access flags when listing keys (#1653)\n    * Add support for `CKA_ALLOWED_MECHANISMS` when creating new objects and listing keys (#1628)\n* `pkcs15-crypt`: * Handle keys with user consent (#1529)\n## CAC1\nNew separate CAC1 driver using the old CAC specification (#1502)\n## CardOS\n* Add support for 4K RSA keys in CardOS 5 (#1776)\n* Fixed decryption with CardOS 5 (#1867)\n## Coolkey\n* Enable CoolKey driver to handle 2048-bit keys. (#1532)\n## EstEID\n* adds support for a minimalistic, small and fast card profile based on IAS-ECC issued since December 2018 (#1635)\n## GIDS\n* GIDS Decipher fix (#1881)\n* Allow RSA 4K support (#1891)\n## MICARDO\n* Remove long expired EstEID 1.0/1.1 card support (#1470)\n## MyEID\n* Add support for unwrapping a secret key with an RSA key or secret key (#1393)\n* Add support for wrapping a secret key with a secret key (#1393)\n* Support for MyEID 4K RSA (#1657)\n* Support for OsEID (#1677).\n## Gemalto GemSafe\n* add new PTeID ATRs (#1683)\n* Add support for 4K RSA keys (#1863, #1872)\n## OpenPGP\n* OpenPGP Card v3 ECC support (#1506)\n## Rutoken\n* Add Rutoken ECP SC (#1652)\n* Add Rutoken Lite (#1728)\n## SC-HSM\n* Add SmartCard-HSM 4K ATR (#1681)\n* Add missing secp384r1 curve parameter (#1696)\n## Starcos\n* Fixed decipher with 2.3 (#1496)\n* Added ATR for 2nd gen. eGK (#1668)\n* Added new ATR for 3.5 (#1882)\n* Detect and allow Globalplatform PIN encoding (#1882)\n## TCOS\n* Fix TCOS IDKey support (#1880)\n* add encryption certificate for IDKey (#1892)\n## Infocamere, Postecert, Cnipa\n* Removed profiles (#1584)\n## ACS ACOS5\n* Remove incomplete acos5 driver (#1622).\n\n# New in 0.19.0; 2018-09-13\n## General Improvements\n* fixed multiple security problems (out of bound writes/reads, #1447):\n    * CVE-2018-16391\n    * CVE-2018-16392\n    * CVE-2018-16393\n    * CVE-2018-16418\n    * CVE-2018-16419\n    * CVE-2018-16420\n    * CVE-2018-16421\n    * CVE-2018-16422\n    * CVE-2018-16423\n    * CVE-2018-16424\n    * CVE-2018-16425\n    * CVE-2018-16426\n    * CVE-2018-16427\n* Improved documentation:\n    * New manual page for opensc.conf(5)\n    * Added several missing switches in manual pages and fixed formatting\n* Win32 installer:\n    * automatically start SCardSvr\n    * added newer OpenPGP ATRs\n* macOS installer: use HFS+ for backward compatibility\n* Remove outdated solaris files\n* PC/SC driver:\n    * Workaround OMNIKEY 3x21 and 6121 Smart Card Readers wrongly identified as pinpad readers in macOS\n* Workaround cards returning short signatures without leading zeroes\n* bash completion\n    * make location directory configurable\n    * Use a new correct path by default\n* build: support for libressl-2.7+\n* Configuration\n    * Distribute minimal opensc.conf\n    * `pkcs11_enable_InitToken made` global configuration option\n    * Modify behavior of `OPENSC_DRIVER` environment variable to restrict driver list instead of forcing one driver and skipping vital parts of configuration\n    * Removed configuration options `zero_ckaid_for_ca_certs`, `force_card_driver`, `reopen_debug_file`, `paranoid-memory`\n    * Generalized configuration option `ignored_readers`\n* If card initialization fails, continue card detection with other card drivers (#1251)\n* Fixed long term card operations on Windows 8 and later (#1043)\n* reader-pcsc: allow fixing the length of a PIN\n* fixed multithreading issue on Window with OpenPACE OIDs\n## PKCS#11\n* fixed crash during `C_WaitForSlotEvent` (#1335)\n## Minidriver\n* Allow cancelling the PIN pad prompt before starting the reader transaction. Whether to start the transaction immediately or not is user-configurable for each application\n## OpenSC tools\n* `opensc-notify`\n    * add Exit button to tray icon\n    * User better description (GenericName) and a generic application icon\n    * Do not display in the application list\n* `pkcs15-tool`\n    * added support for reading ECDSA ssh keys\n* `p11test`\n    *  Filter certificates other than `CKC_X_509`\n* `openpgp-tool`\n    * allow calling -d multiple times\n    * clarify usage text\n## sc-hsm\n* Implement RSA PSS\n* Add support for SmartCard-HSM 4K (V3.0)\n## CAC\n* Remove support for CAC1 cards\n* Ignore unknown tags in properties buffer\n* Use GET PROPERTIES to recognize buffer formats\n* Unbreak encoding last tag-len-value in the data objects\n* Support HID Alt tokens without CCC\n    * They present certificates in OIDs of first AID and use other undocumented applets\n    * Inspect the tokens through the ACA applet and GET ACR APDU\n## Coolkey\n* Unbreak Get Challenge functionality\n* Make uninitialized cards working as expected with ESC\n## OpenPGP\n* add serial number to card name\n* include detailed version into card name\n* define & set LCS (lifecycle support) as extended capability\n* extend manufacturer list in pkcs15-openpgp.c\n* correctly parse hist_bytes\n* Make deciphering with AUT-key possible for OpenPGP Card >v3.2 (fixes #1352)\n* Add supported algorithms for OpenPGP Card (Fixes #1432)\n## Starcos\n* added support for 2nd generation eGK (#1451)\n## CardOS\n* create PIN in MF (`pkcs15init`)\n##  German ID card\n* fixed identifying unknown card as German ID card (#1360)\n## PIV\n* Context Specific Login Using Pin Pad Reader Fix\n* Better Handling of Reset using Discovery Object\n\n# New in 0.18.0; 2018-05-16\n## General Improvements\n* PKCS#15\n    * fixed parsing ECC parameters from TokenInfo (#1134)\n    * Added PKCS#15 emulator for DIN 66291 profile\n    * Cope with empty serial number in TokenInfo\n* Build Environment\n    * Treat compiler warnings as errors (use `--disable-strict` to avoid)\n    * MacOS\n        * optionally use CTK in package builder\n        * fixed detection of OpenPACE package\n        * macOS High Sierra: fixed dmg creation\n        * fixed DNIe UI compatibility\n* Windows: Use Dedicated md/pkcs11 installation folders instead of installing to System32/SysWOW64\n* fixed (possible) memory leaks for PIV, JPKI, PKCS#11, Minidriver\n* fixed many issues reported via compiler warnings, coverity scan and clang's static analyzer\n* beautify printed ASN.1 data, add support for ASN.1 time types\n* SimpleTLV: Skip correctly two bytes after reading 2b size (#1231)\n* added support for `keep_alive` commands for cards with multiple applets to be enabled via `opensc.conf`\n* added support for bash completion for arguments that expect filenames\n* added keyword `old` for selecting `card_drivers` via `opensc.conf`\n* improved documentation manuals for OpenSC tools\n* use `leave` as default for `disconnect_action` for PC/SC readers\n## PKCS#11\n* Make OpenSC PKCS#11 Vendor Defined attributes, mechanisms etc unique\n## Minidriver\n* added CNS ATR (#1153)\n* Add multiple PINs support to minidriver\n* protect MD entry points with `CriticalSection`\n## Tokend\n* Configuration value for not propagating certificates that require user authentication (`ignore_private_certificate`)\n## CryptoTokenKit\n* Added support for PIN pad\n* fixed codesigning of opensc tools\n* Added complete support for system integration with https://github.com/frankmorgner/OpenSCToken\n## OpenSC Tools\n* `cardos-tool`\n    * List human-readable version for CardOS 5.3\n* `pkcs11-tool`\n    * fixed overwriting digestinfo + hash for RSA-PKCS Signature\n    * Enable support for RSA-PSS signatures in pkcs11-tool\n    * Add support for RSA-OAEP\n    * Fixed #1286\n    * Add missing pkcs11-tool options to man page\n    * allow mechanism to be specified in hexadecimal\n    * fixed default module path on Windows to use opensc-pkcs11.dll\n* `pkcs11-spy`\n    * Add support for RSA-OAEP\n    * Add support for RSA-PSS\n* `pkcs15init`\n    * Fix rutokenS FCP parsing (#1259)\n* `egk-tool`\n    * Read data from German Health Care Card (Elektronische Gesundheitskarte, eGK)\n* `opensc-asn1`\n    * Parse ASN.1 from files\n* `opensc-tool`/`opensc-explorer`\n    * Allow extended APDUs\n## Authentic\n* Correctly handle APDUs with more than 256 bytes (#1205)\n## Coolkey\n* Copy labels from certificate objects to the keys\n## Common Access Card\n* Fixed infinite reading of certificate\n* Added support for Alt token card\n## MyEID\n* support for RAW RSA signature for 2048 bit keys\n## IAS/ECC\n* Support for new MinInt agent card\n## PIV\n* Get cardholder name from the first certificate if token label not specified\n* implemented keep alive command (#1256)\n* fixed signature creation with `CKA_ALWAYS_AUTHENTICATE` (i.e. PKCS#11 `C_Login(CKU_CONTEXT_SPECIFIC)`)\n## CardOS\n* fixed card name for CardOS 5\n* added ATR `\"3b:d2:18:00:81:31:fe:58:c9:02:17\"`\n* Try forcing `max_send_size` for PSO:DEC\n## DNIe\n* DNIe: card also supports 1920 bits (#1247)\n## GIDS\n* Fix GIDS admin authentication\n## epass 3000\n* Add ECC support\n* Fix #1073\n* Fix #1115\n* Fix buffer underrun in decipher\n* Fix #1306\n## Starcos\n* added serial number for 3.4\n* fixed setting key reference for 3.4\n* added support for PIN status queries for 3.4\n## EstEID\n* ECDSA/ECDH token support\n* Fix crash when certificate read failed (#1176)\n* Cleanup expired EstEID card ATR-s\n* Fix reading EstEID certificates with T=0 (#1193)\n## OpenPGP\n* Added support for PIN logout and status\n* factory reset is possible if LCS is supported\n* Added support for OpenPGP card V3\n* fixed selecting Applet\n* implemented keep alive command\n* Retrieve OpenPGP applet version from OpenPGP applet on YubiKey token (#1262)\n## German ID card\n* fixed recognition of newer cards\n## SC-HSM\n* Don't block generic contactless ATR\n* changed default labels of GoID\n* added PIN commands for GoID 1.0\n## Starcos\n* Added Support for Starcos 3.4 and 3.5\n## MioCOS\n* disabled by default, use `card_drivers = old;` to enable; driver will be removed soon.\n## BlueZ PKCS#15 applet\n* disabled by default, use `card_drivers = old;` to enable; driver will be removed soon.\n\n# New in 0.17.0; 2017-07-18\n## Support for new Cards\n* CAC (Common Access Card)\n* GoID (SC-HSM with built-in PIN pad and fingerprint sensor)\n* Coolkey\n* JPKI (Japanese Individual Number Card)\n* nPA (German ID card, eSign Application)\n## General Improvements\n* PKCS#15\n    * Implemented file caching based on card's contact-less UID\n    * Cache EF.ODF and EF.TokenInfo\n    * File caching is done transparently when the user sets the config option.\n* `opensc.conf`\n    * Added `disable_popups` for disabling internal UI\n    * All Windows specific reader configuration is handled by the pcsc driver (cardmod driver was removed)\n* Build Environment\n    * Allow setting `PKG_CONFIG_PATH` for macOS build\n    * Added compatibility with Visual Studio 2015\n    * Allow building against LibreSSL\n    * Allow building against OpenSSL 1.1.0\n    * Allow building against WiX 3.11\n    * Allow building minidriver with MinGW\n    * Include OpenPACE library by default\n    * Removed `BUILD_ON`/`BUILD_FOR` variable\n* Simplified installer on macOS and Windows\n* Added support for PIN commands via PC/SC escape commands\n* Added support for card reader access via CryptoTokenKit\n* Added support for PIN entry on card for verification/unblock/change\n* Recognize T=0 limitation of sending 255 bytes\n* Force T=1 for contactless cards\n* Allow setting driver via `OPENSC_DRIVER` environment variable\n* Fixed many bugs\n* Fixed many compiler warnings\n* Fixed possible issues (memory corruptions, memory leaks, double free, ...)\n* Internal refactoring and cleanup\n## PKCS#11\n* Move PIN type label front of description\n* `C_GetTokenInfo` read the login status from the card if possible\n* Don't use ':' in the token name (#849)\n* Install `opensc-pkcs11.pc` for usage with `pkg-config`\n* Don't shrink the number of slots (#629)\n* Add session handle uniqueness check to PKCS#11 `C_OpenSession()`\n* Activate functionality of `C_WaitForSlot()` for pcsc-lite >= 1.8.22\n## Minidriver\n* Support PIN unblocking in minidriver via PUK as response\n* Added support for Session PIN\n## Tokend\n* Allow usage of readers PIN pad by entering an empty PIN\n## OpenSC Tools\n* Fixed Bash completion (#782)\n* `opensc-tool`\n    * Added `--reset` option\n* `opensc-explorer`\n    * Show tag 0x82 for unknown files\n* `pkcs15-tool`\n    * Fixed `--read-ssh-key` crash (#788)\n    * Added `--clear-cache`\n    * Fixed locking the card on Windows (#868)\n    * Add `--list-info` option\n    * Make `--list-...` messages consistent\n    * Add `--short` option\n    * `--read-data-object`: Do not print data to terminal when output file is given\n    * Reword `--no-prompt` to `--use-pinpad`, old option still available as alias\n    * Added `--test-session-pin` option\n* `pkcs15-init`\n    * Fix using PINPAD to verify PIN (#856)\n    * Fixed locking the card on Windows (#868)\n    * Added `--secret-key-algorithm` option\n    * Print more detailed secret key information\n* `pkcs11-tool`\n    * Added `keygen` for secret key generation\n    * Better handling of PIN (re-) validation\n    * Fixed --id for `C_GenerateKey`, DES and DES3 keygen mechanism (#857)\n    * Added `--derive-pass-der` option\n    * Added `--generate-random` option\n    * Add GOSTR3410 key pair generation\n* `npa-tool` (new)\n    * Allows read/write access to EAC tokens\n    * Allows PIN management for EAC tokens\n* `gids-tool`\n    * Fixed entering SN via command line\n* `sc-hsm-tool`\n    * Added `--print-dkek-share` (hidden from the user)\n    * Fixed locking the card on Windows (#868)\n## CardOS\n* Better support for CardOS 5.3\n## DNIe\n* Fixed interaction with DNIe UI\n* Added support for DNIe 3.0\n## ePass2003\n* Add new ATR for entersafe PKI card\n* Solved Incorrect PIN raise wrong CKR error\n## GemsafeV1\n* PTeid: add objects (SOD, TRACe, CA) and fix flags\n* PTeid: Support PIN max tries and tries left report\n* PTeid: Properly report cards with 2048b keys.\n## MyEID\n* Fix to ECDH implementation (#756)\n* Added support for symmetric keys\n## OpenPGP\n* Improve handling of OpenPGP card PIN change and unblock commands\n## PIV\n* Some workarounds for PIV-alike cards (e.g. Yubikey)\n* Change driver's short name to 'PIV-II'\n* Use certificate's keyUsage to set PKCS#11 key attributes\n## SC-HSM\n* Use PKCS#15 file cache\n* Prevent unnecessary applet selection and state resets\n* Added support for session pin\n* Fixed forcing a card driver via opensc.conf\n## STARCOS\n* Read the maximum transcive sice from the card's ATR (#765)\n\nNew in 0.16.0; 2016-05-15\n* build\n    link OpenSSL in static\n    option: enable PKCS11 thread locking\n* configuration\n    use one configuration file for all systems\n* tools:\n    package revision as version\n  ** pkcs11-tool\n       keygen mechanism in pkcs11 tools\n       write GOST public key\n       fix CKA_SENSITIVE attribute of public keys\n  ** opensc-explorer:\n       added command find_tags\n       allow ASN.1 decoding if the file seems incomplete\n  ** pkcs15-tool:\n       handle record-based files when doing file caching\n       option to prine raw data\n  ** sc-hsm-tool:\n       status info support for SmartCard-HSM V2.0\n  ** doc: some missing options are documented, added documentation\n       for gid tool\n* minidriver:\n  support for ECC\n  Windows x509 enrollment\n  first implementation of CardDeleteContainer\n  MD logs controlled by register and environment variable\n* reader-pcsc\n  fixed unreleased locks with pcsc-lite\n  honour PC/SC pt 10 dwMaxAPDUDataSize\n  added call back for getting vendor/product id\n  restrict access to card handles after fork\n  SCardGetAttrib is used to initialize reader's metadata\n  by default only short APDUs supported\n* pkcs11\n  no slot reserved for hot plug\n  no more slot created 'per-applications'\n  atomic operation (TODO: expand)\n  export all C_* symbols\n  metadata initialized from package info\n  fix registering pkcs11 mechanisms multiple times\n  sloppy initialization for C_GetSlotInfo\n* pkcs15\n  cache of on-card files extended to application paths\n  configuration option to enable/disable application\n  make file cache dir configurable\n  in key info data type introduced 'auxiliary data' -- container\n      for the non-pkc15 data.\n* OpenPGP\n  support for Gnuk -- USB cryptographic token for GNU Privacy Guard\n  build without OpenSSL\n  implemented 'erase card'\n  additional manufacturers\n* MyEID\n  support for 521 bit ECC keys\n  ATRs for the new cards\n* sc-hsm\n  read/write support in minidriver\n* rtecp\n  delete keys\n* GemSafeV1\n  support for European Patent Office smart card\n  sign with SHA256\n* Gids\n  first support for Gids smart card\n* dnie\n* Feitian PKI card\n  new ATRs\n* IsoApplet\n  (fixes)\n* starcos\n  initial support for STARCOS 3.4 (German D-Trust cards)\n* macosx\n  install tokend to /Library/Security/ instead /System/Library/Security/\n  fixed locking issue in pcsc reader\n* PIV\n  allow using of cards where default application in not PIV\n  support for the Yubikey NEO\n* italian-CNS\n  italian-cns reg file for minidriver\n\nNew in 0.15.0; 2015-05-11\n* new card drivers\n  AzeDIT 3.5\n  IsoApplet\n  MaskTech\n* libopensc\n  allow extended length APDUs\n  accept no output for 'SELECT' MF and 'SELECT' DF_NAME APDUs\n  fixed sc_driver_version check\n  adjusted send/receive size according to card capabilities\n  in iso7816 make SELECT agnosting to sc_path_t's aid\n* asn1\n  support multi-bytes tags\n* pkcs15\n  reviewed support and tool functions for public key\n  public certs and pubkeys with an auth_id are treated as private\n* pkcs11\n  introduced  default PKCS#11 provider\n  fetched real value of CKA_LOCAL for pubkey\n  removed inconsistent attributes\n  C_Digest issues\n    no check if buffer too small before update\n* added support for Travis CI\n* updated support of EC in libopensc, pkcs15 and pkcs11\n* fixed number of warnings, resource leaks, overity-scan issues\n* macosx\n  target minimum OSX version to 10.7\n  update the minimal building instructions.\n  locate and target the latest SDK to build against.\n  locate the best newest SDK present on the computer.\n* build\n  disable Secure Messaging if OpenSSL is not used\n* tools\n  util_get_pin helper function\n* PIV\n  Add AES support for PIV General Authenticate\n  fixed invalid bit when writing PIV certificate object with gzipped certificate\n  fixed bad caching behavior of PIV PKCS15 emulator\n* ePass2003\n  fixed failure due to re-authenticate of secure messaging when card is accessed\n      by multiple PKCS11 sessions\n* MyEID\n  EC support for MyEID-v4 card\n* openpgp\n  extended options for openpgp-tool\n* asepcos\n  fixed puk handling\n* sc-hsm\n  support for Koblitz curves secp192k1 and secp256k1 (Bitcoin)\n  improved error detection and reporting in sc-hsm-tool\n  fixed Lc byte in VERIFY PIN block for PC/SC PIN PAD reader\n  fix certificate delete bug\n* IAS/ECC\n  fixed PKCS#11 compliance issues\n  support for Morpho IAS Agent Card\n* cardos\n  overwrite content of deleted private key\n* win32\n  setup improuvement\n     look & feel\n     custom actions with card registration\n  minidriver impouvement\n     fixed errors and warnings returned by Microsoft quality tool\n     pin-pad support\n\nNew in 0.14.0; 2014-05-31\n* new card driver DNIe\n* extended existing drivers by support of\n    Swedish eID card (gemsafeV1)\n    EstEID 3.5 (mcrd)\n* bogus javacard driver removed\n* build\n    return to the standard use of 'autoconf'\n    CI specific bootstrap script: git commit stamp for the built packages\n    windows friendly compile settings\n    fixed a ton of compiler warnings\n    fence against using EVP_sha256 mech\n    debian packaging templates\n    compile without OpenSSL and without SM\n    enable compiler warnings by default\n    win32\n        add 'VarFileInfo' block to version-info\n        include to MSI package 'openpgp-tool.exe'\n        'version-info' resource for each target\n* macOSX\n    \"graphical uninstaller\" to distribution DMG\n    update package building to modern tools\n    new tool and SDK paths for OS X 10.8\n    improved opensc-installer from distribution\n    osx: target 10.9 (a free upgrade to anyone using 10.6+) from now on\n    build 'fat' binaries i386\n* common\n    added getpass implementation for non windows\n* libopensc\n    allow for the pin to be entered on the keypad during issuing\n    introduce 'encoded-content' to the sc_file data\n    general usage method to allocate generalized time\n* minidriver\n    implemented 'CardChangeAuthenticator', 'CardGetChallenge' and 'CardUnblockPin'\n    improved management of GUID\n    use reader pin pad if available and allowed\n    configuration options for\n        compose GUID\n        refuse create container mechanism\n    add registers file for feitian cards\n    fixed\n        return code in 'CardGetContainerInfo'\n        returned 'tries-left' for blocked card\n        length of stripped data in RSADecrypt\n* pkcs#11\n    bind non-recognized card, generic 'init-token' procedure\n    fixed\n        CKA_VALUE of 'public-key' object\n        fix ASN1 encoding issues\n        PIN-NOT-INITIALIZED for the non-user PINs\n        buffers overflow\n        segfault due to the undefined 'application-file'\n* pkcs15\n    'direct' public key in PuKDF encoding\n    implement SPKI public key encoding\n    include and maintain minidriver framework data: cmap-record, md-flags, GUID, ..\n    fixed\n        encoding of 'SubjectPublicKeyInfo'\n        DER encoding of 'issuer' and 'subject'\n        PIN validation in 'pkcs15-verify'\n        public key algorithm\n        ECC public key encoding\n        ECC ecpointQ\n* pkcs15init\n    introduce 'max-unblocks' PIN init parameter\n    keep cert. blob in cert-info data\n    file 'content' and 'prop-attrs' in the card profile\n    in profile more AC operations are parsed\n    fixed\n        NULL pointer dereference error\n        NULL 'store-key' handle\n        ignore if no TokenInfo file to update\n        set EC pubkey parameters from init data\n* reader-pcsc\n    fixed\n        implicit pin modification\n        pin checking when implicitly given\n        verify/modify pinpad commands\n* SM\n    common SM 'increase-sequence-counter' procedure\n    move SM APDU procedures to dedicated source file\n    move SM common crypto procedures to the dedicated library\n* doc\n    documentation for --list-token-slots\n* default driver\n    do not send possibly arbitrary APDU-s to an unknown card.\n    by default 'default' card driver is disabled\n* sc-hsm\n    Added support for\n        persistent EC public keys generated from certificate signing requests\n        token label to be set via C_InitToken or sc-hsm-tool\n        unblock PIN using C_InitPIN()\n    initialize EC key params\n    fixed\n        bug that prevents a newly generated 2048 key to show up at the PKCS#11 interface\n        bug when changing SO-PIN with opensc-explorer sc-hsm-tool\n        memory checking and removed warning\n        problem deleting CA certificates sc-hsm\n        public key format returned when generating ECC keys\n    sc-hsm-tool\n        better error handling for non-SmartCard-HSM cards\n        support for DKEK password sharing scheme\n        threshold scheme parameters to manpage\n        crash on Windows when --wrap-key frees memory allocated in opensc.dll\n* ias\n    simplify the compute signature operation\n* PIV\n    use SPKI encoding for public key data\n    extract public key from cert if no object on card\n    fix\n        segfault and valgrind issue\n        gen_key to expect the proper PIV Key references\n* CardOS\n    build for Windows\n    use information from AlgorithmInfo\n    supported CardOS V5.0\n* epass2003\n    key generation allows stricter privkey/pubkey ACLs\n    list_files implemented\n    properly disable padding\n    allow exponents other than 65537\n* myeid\n    fixed file-id in myeid.profile\n* entersafe\n    fix a bug when writing public key\n* EstEID\n    match card only based on presence of application.\n* pteid\n    do not call the iso7816 driver get_response operation\n* myeid\n    support of EC key is broken\n\nNew in 0.13.0; 2012-12-04\n* New card driver ePass2003.\n* OpenPGP card:\n  greatly improved card driver and PKCS#15 emulation;\n  implemented write (pkcs15init) mode;\n  greatly enhanced documentation and tools.\n* ECDSA keys supported in 'read' and 'write' modes by\n  internal PKCS#15 library, PKCS#11 and tools.\n* Minidriver in 'write' mode.\n* SM: secure messaging in GlobalPlatform-SP01 and CW14890 specifications;\n      supported by ePass2003, IAS/ECC and AuthentIC cards;\n      \"ACL\" and \"APDU\" modes to trigger secure messaging session;\n      'local' version of the external secure messaging module.\n* PKCS#15: support of 'secret-key' PKCS#15 objects\n           support of 'authentication-object' PKCS#15 objects\n           support of 'algReference' common key PKCS#15 attribute\n           support of 'algReference' common key PKCS#15 attribute\n           support of 'subjectName' common public key PKCS#15 attribute\n* PKCS#11: removed 'onepin' version of pkcs#11 module\n           configuration options to expose slots for PINs and present on-card applications.\n           support GOSTR3410 generate key mechanism\n* Support of PACE reader.\n* Remove libltdl reference.\n* ECDSA supported by MyEID card\n* New card driver for the SmartCard-HSM, a light-weight hardware security module\n* New useful commands in 'opensc-explorer' tool: 'find', 'put-data', ...\n* fixed SIGV issue due to the unsupported public key format\n* fixes for the number of documentation issues\n\nNew in 0.12.2; 2011-07-15\n* Builds are now silent by default when OpenSC is built from source on Unix.\n* Using --wait with command line tools works with 64bit Linux again.\n* Greatly improved OpenPGP card support, including OpenPGP 2.0 cards\n  like the one found in German Privacy Foundation CryptoStick.\n* Fixed support for FINeID cards issued after 01.03.2011 with 2048bit keys.\n* #256: Fixed support for TCOS cards (broken since 0.12.0).\n* Added support for IDKey-cards to TCOS3 driver.\n* #361: Improved PC/SC driver to fetch the maximum PIN sizes from the open\n  source CCID driver. This fixes the issue for Linux/OSX with recent driver.\n* WindowsInstaller now installs only static DLL-s (PKCS#11, minidriver) to\n  system folder.\n* Fix FINeID cards for organizations.\n* Several smaller bugs and compiler warnings fixed.\n\nNew in 0.12.1; 2011-05-17\n* New card driver: IAS/ECC 1.0.1\n* rutoken-tool has been deprecated and removed.\n* eidenv and piv-tool utilities now have manual pages.\n* pkcs11-tool now requires the use of --module parameter.\n* All tools can now use an ATR as an argument to --reader, to skip to the\n  card with given ATR.\n* opensc-tool -l with -v now shows information about the inserted cards.\n* Creating files have an enforced upper size limit, 64K\n* Support for multiple PKCS#15 applications with different AID-s.\n  PKCS#15 applications can be listed with pkcs15-tool --list-applications.\n  Binding to a specific AID with PKCS#15 tools can be done with --aid.\n* Hex strings (like card ATR or APDU-s) can now be separated by space, in\n  addition to colons.\n* Pinpad readers known to be bogus are now ignored by OpenSC. At the moment\n  only \"HP USB Smart Card Keyboard\" is disabled.\n* Windows installer is now distributed as a statically built MSI, for both\n  x86 and x64.\n* Numerous compiler warnings, unused code and internal bugs have been\n  eliminated.\n\nNew in 0.12.0; 2010-12-22\n* OpenSC uses a single reader driver, specified at compile time.\n* New card driver: Italian eID (CNS) by Emanuele Pucciarelli.\n* New card driver: Portuguese eID by João Poupino.\n* New card driver: westcos by François Leblanc.\n* pkcs11-tool can use a slot based on ID, label or index in the slot list.\n* PIN flags are updated from supported cards when C_GetTokenInfo is called.\n* Support for CardOS 4.4 cards added.\n* Feature to exclude readers from OpenSC PKCS#11 via \"ignored_readers\"\n  configuration file entry.\n* #229: Support semi-automatic fixes to cards personalized with older and\n  broken OpenSC versions.\n* Software keys removed from pkcs15-init and the PKCS#11 module. OpenSC\n  can either generate keys on card or import plaintext keys to the card, but\n  will never generate plaintext key material in software by itself.\n  All traces of a software token (PKCS#15 Section 7) shall be removed.\n* Updates to PC/SC driver to build with pcsc-lite >= 1.6.2\n* Build script for a binary Mac OS X installer for 10.5 and 10.6 systems.\n  Binary installer includes OpenSC.tokend for platform integration.\n  10.6 installer includes engine_pkcs11.\n* Modify Rutoken S binary interfaces by Aktiv Co.\n* Support GOST R 34.10-2001 and GOST R 34.11-94 by Aktiv Co.\n* CardOS driver now emulates sign on rsa keys with sign+decrypt usage\n  with padding and decrypt(). This is compatible with old cards and\n  card initialized by Siemens software. Removed \"--split-key\" option,\n  as it is no longer needed.\n* Improved debugging support: debug level 3 will show everything\n  except of ASN1 and card matching debugging (usually not needed).\n* Massive changes to libopensc. This library is now internal, only\n  used by opensc-pkcs11.so and command line tools. Header files are\n  no longer installed, library should not be used by other applications.\n  Please use generic PKCS#11 interface instead.\n* #include file statements cleaned up: first include \"config.h\", then\n  system headers, then additional libraries, then headers in opensc\n  (but from other directories), then header files from same directory.\n  Fix path to reference headers, remove src/include/ directory.\n* Various source code fixes and improvements.\n* OpenSC now depends on xsltproc utility and docbook-xsl to build docs and man\n* Remove iconv dependency. EstEID driver now uses the commonName from the\n  certificate for card label.\n* Possibility to change the default behavior for card resets via\n  opensc.conf.\n\nNew in 0.11.12; 2009-12-18; Andreas Jellinghaus\n* Document integer problem in OpenSC and implement workaround\n* Improve entersafe profile to support private data objects\n\nNew in 0.11.9; 2009-07-29; Andreas Jellinghaus\n* New rutoken_ecp driver by  Aktiv Co. / Aleksey Samsonov\n* Allow more keys/certificates/files etc. with entersafe tokens\n* Updates pkcs11.h from scute fixing warnings\n* Small fixes in rutoken driver\n* Major update for piv driver with increased compatibility\n\nNew in 0.11.8; 2009-05-07; Andreas Jellinghaus\n* Fix security problem in pkcs11-tool gen_keypair (PublicExponent 1)\n* fix compiling without openssl.\n* updated and improve entersafe driver. FTCOS/PK-01C cards are supported\n  now, compatible with cards written by Feitian's software on windows.\n\nNew in 0.11.7; 2009-02-26; Andreas Jellinghaus\n* hide_empty_slots now on by default? small logic change?\n* pinpad supported fixed for Mac OS X.\n* ruToken driver was updated.\n* openct virtual readers reduced to 2 by default.\n* link with iconv on Mac OS X for i18n support.\n* Security issue: Fix private data support.\n* Enable lock_login by default.\n* Disable allow_soft_keygen by default.\n\nNew in 0.11.6; 2008-08-27; Andreas Jellinghaus\n* Improved security fix: don't match for \"OpenSC\" in the card label.\n* New support for Feitian ePass3000 by Weitao Sun.\n* GemSafeV1 improved to handle key_ref other than 3 by Douglas E. Engert\n\nNew in 0.11.5; 2008-07-31; Andreas Jellinghaus\n* Apply security fix for cardos driver and extend pkcs15-tool to\n  test cards for the security vulnerability and update them.\n* Build system rewritten (NOTICE: configure options was modified).\n  The build system can produce outputs for *NIX, cygwin and native\n  windows (using mingw).\n* ruToken now supported.\n* Allow specifying application name for data objects.\n* Basic reader hotplug support.\n* PC/SC library is dynamic linked no longer compile time dependency.\n* PKCS#11 provider is now installed at LIBDIR/pkcs11\n* PKCS#11 - Number of virtual slots moved into configuration.\n* PKCS#11 - Fix fork() compliance.\n* make sign_with_decrypt hack configurable for Siemens cards.\n\nNew in 0.11.4; 2007-09-10; Andreas Jellinghaus\n* Drop AC_LIB_LINKFLAGS for libltdl and aclocal/lib* files.\n* New configure option to disable building nsplugin.\n* Support Siemens CardOS initialized cards (signing with decryption)\n* Add Siemens CardOS M4.2B support (experimental, don't have such a card)\n* Support for AKIS cards added (partial so far) by  Gürer Özen.\n* add aclocal/libassuan.m4 back so developers don't need assuan installed.\n\nNew in 0.11.3; 2007-07-11; Andreas Jellinghaus\n* added regression test for raw rsa (crypt0007).\n* regression suite can now use installed binaries with --installed.\n* update wiki export script (add images, fix links).\n* look for ncurses and termcap in configure (in combination with readline).\n* make lots of internal functions and variables static.\n* fix 0 vs NULL in many places. fix ansi c style (void).\n* avoid variable names used also as glibc function (random etc.).\n* new code for deleting objects.\n* special hack for firefox.\n* support for Athena APCOS cards added.\n* piv driver now supports bigger rsa keys too.\n\nNew in 0.11.2; 2007-05-04; Andreas Jellinghaus\n* enabled pin caching by default (needed by regression suite and other apps).\n  disable this for highest security (but that breaks some applications).\n* use max_send_size 255 / max_recv_size 256 bytes by default.\n  reduce this for some readers (e.g. scm) with t=0 cards.\n* increase pin buffer size to allow longer pin codes.\n* Windows Make.rules.mak improved to work with and w/o openssl and zlib\n* Added --read-ssk-key option to pkcs15-tool (prints public key in ssh format)\n* use pkg-config for finding openct, add --enable/disable-openct option\n* use strlcpy function\n* use new pkcs11.h from scute with an open source license\n* add support for sha2 to pkcs15-crypt\n* add piv-tool for managing piv cards\n* add muscle driver (still work in progress)\n* improved oberthur driver\n* add support for pcsc v2 part10 (reader drivers with pinpad support)\n* convert source files to utf-8\n\nNew in 0.11.1; 2006-05-30; Andreas Jellinghaus\n* Fix version variable in win32 build files\n* Update for piv pkcs#15 emulation\n* Improved TCOS driver for Uni Giesen Card\n* Handle size_t printf with \"%lu\" and (unsigned long) cast\n* Add support for d-trust cards / improve micardo 2.1 driver\n\nNew in 0.11.0; 2006-05-01; Andreas Jellinghaus\n* compile fixes/improvements for windows\n* document pkcs15-tool --unblock-pin option\n* remove old and outdated documentation\n* use \"%lu\" format for printf of size_t\n* add piv driver and tool by Douglas E. Engert\n* new threading code in pkcs11 module\n* renamed \"etoken\" driver to \"cardos\", as it really is a generic\n  driver for Siemens CardOS M4, including but not limited to Aladdin eTokens.\n* add code to manage unused space\n* support for swedish nidel cards\n\nNew in 0.10.1; 2006-01-08; Andreas Jellinghaus\n* use sc_print_path everywhere.\n* silence many warnings.\n* add incrypto34 driver by ST Incard, Giuseppe Amato\n* improved TCOS driver by Peter Koch\n* better PINPAD handling\n* updated infocamere driver\n* updated opensc.conf with new default values\n* fix firefox problems (no real fix, only ugly workaround)\n* add cardos M4.2 support\n\nNew in 0.10.0; 2005-10-31; Andreas Jellinghaus\n* released rc2 without changes.\n* Add more documentation, fix man page installation.\n* New generic ATR/card matching code with\n  atrmask support, used by all card drivers.\n* Much improved and unified ATR handling in\n  the configuration file.\n* Support for the next generation FinEID cards\n  with ISO/IEC 7816-15 data layout.\n* Preliminary code merge with the Belgian\n  Belpic EID project.\n* Experimental multi-slot support for CT-API\n  and dynamic loading support for win32.\n  Thanks to Bernhard Froehlich <ted@convey.de>\n* Experimental Class 2 pinpad reader support\n  via TeleTrust compatible PC/SC interface.\n* Fixed OpenSSL behaviour in the configure\n  script.\n* PKCS#15 emulation layer improvements and\n  a new driver for the Italian postecert\n  card.\n* New API documentation and generic documentation\n  structure renovation to base future work on.\n  Many thanks to Bert Vermeulen <bert@biot.com>\n* Spanish manual translation from opensc-ceres\n  project merged.\n* Several memory leaks and other bugs fixed.\n\nNew in 0.9.6; 2005-04-25; Andreas Jellinghaus:\n* undo user_content changes to retain compatibility with 0.9.4.\n* add solaris/ files for easier installation on solaris.\n* Makefile.am: require automake 1.5\n* free() fixes in some card drivers.\n* fix autoconf configure code.\n\nNew in 0.9.5; 2005-01-11; Andreas Jellinghaus:\n* Big rewrite of the autoconf code for openssl. This fixes bugs on Mac OS X\n  and we hope it doesn't break any other system. Feedback is very welcome.\n* The flags object attribute changed to a bitfield.\n* Many small bugfixes, including memory leaks.\n* Changes to the etoken and gpk profiles to eliminate overlapping file ids.\n* pinpad code by Martin Paljak\n* add user_consent parameter to pkcs15emu add object/add prkey functions.\n* estid provide user_consent parameter.\n* add fflush to pkcs11-spy.c\n* set version in configure.in, src/pkcs11/pkcs11-global.c,\n  win32/version.rc  and src/include/winconfig.h\n\nNew in 0.9.4; 2004-10-31; Andreas Jellinghaus:\n* Library version was broken in 0.9.3.\n* Update library version to 1:0:0, as we are no longer\n  compatible with the 0:*:* line, I fear.\n\nNew in 0.9.3;  2004-10-31; Andreas Jellinghaus:\n* Fix some LDFLAGS/LDADD issues for parallel build.\n\nNew in 0.9.2; 2004-07-24; Andreas Jellinghaus:\n* This is an beta test version. Please be careful.\n  Do not use in production environments.\n* Fix sslengine, link those dynamically with libcrypto\n  for openssl 0.9.7d and later.\n* Fixed small bug in pkcs11-tool\n* Link pkcs11-tool and pkcs15-crypt with -lcrypto\n* New driver for estonian ID card.\n* Bumped version number to opensc 0.9.2\n* New card supported: Oberthur AuthentIC v5\n* Pam_opensc's eid module now checks permissions,\n  and supports several certificates in\n  ~/.eid/authorized_certificates\n  Thanks to Fritz Elfert <fritz.elfert@millenux.com>\n* Upgrade library version to 0.9, since incompatible changes\n  are very likely somewhere.\n* Merged several pkcs15 profiles into one with different\n  options.\n\nNew in 0.8.1; 2003-09-30; Olaf Kirch:\n* Upgrade libopensc versioning, hasn't been\n  accidentally upgraded since 0.6.0 release\n* MacOS X specific changes:\n  - Allow to compile without PC/SC support\n  - Bundle installation fixes\n  - OpenSSL engine linking fixed\n  - Renamed OpenSC PKCS#11.bundle to\n    opensc-pkcs11.bundle\n  - CT-API module loading support\n* libopensc:\n  - Renamed sysdep_timestamp_t to sc_timestamp_t\n  - Renamed debug/error functions to sc_debug/sc_error\n  - Don't DER-en/decode the data in a pkcs15 object\n  - Portability fixes for the OpenCT reader driver\n* libscconf: Fixed CRLF parsing for UNIX platforms\n* Added PKCS#11 spy module by Mathias Brossard\n* Other minor bug/build fixes and cleanups\n\nNew in 0.8.0; 2003-08-15; Juha Yrjölä:\n* New and/or improved card drivers:\n  Aladdin eToken, MICARDO 2 and STARCOS\n* New reader driver: OpenCT (Olaf's framework)\n* Improved support for win32 and MacOS X.\n* PKCS #11 stuff improved massively\n* Added PKCS #11 and native OpenSC engine drivers\n  for OpenSSL\n* Added support for reading the PIN from the PIN keypad\n  of a reader\n* New manpages\n* Loads of other improvements and bug-fixes\n\nNew in 0.7.0; 2002-06-03; Juha Yrjölä:\n* Support for config files\n* Yet another PKCS #15 generation rewrite\n* PAM module rewritten for more flexibility and compatibility\n* OpenSC Signer merged to the main source tree\n* CT-API support\n* Support for non-native RSA and DSA keys\n* Improved support for MioCOS cards by Miotec (http://www.miotec.fi)\n* Semi-working support for Aladdin eToken PRO\n* First version to work with OpenSSH without any patching\n\nNew in 0.6.1; 2002-03-20; Juha Yrjölä:\n* Fixed certificate downloading in pkcs15-init\n* Improved PKCS #11 module, so it works with Mozilla 0.9.9 and\n  is capable of signing and decrypting mails in Netscape\n* Other various small fixes and improvements\n\nNew in 0.6.0; 2002-03-13; Juha Yrjölä:\n* Many, many new features -- too many to list here\n* New cards supported: Gemplus GPK family, TCOS 2.0, MioCOS\n* Implemented a card reader abstraction layer\n* PKCS #15 generation rewritten by Olaf Kirch. So far generation\n  is supported only on GPK and Cryptoflex.\n\nNew in 0.5.0; 2002-01-24; Juha Yrjölä:\n* PKCS #15 generation support\n* PKCS #11 module almost completely rewritten\n* Implemented opensc-explorer; a tool for browsing and modifying\n  the card file system\n* Almost complete support for Cryptoflex 16k; implemented cryptoflex-tool\n* Started writing some API documentation using Doxygen\n* Much improved object handling code in PKCS #15 framework\n* Lots of bugs fixed, lots of new ones introduced\n\nNew in 0.4.0; 2001-12-29; Juha Yrjölä:\n* Finished migrating to Autotools\n* Rewritten ASN.1 decoder (should work better on all PKCS #15 cards)\n* Abstracted card handling, so adding support for new cards is a whiz,\n  'opensc-tool -D' will list all installed drivers.\n* Added colored debug and error output ;)\n* Fixed some memory leaks\n* Support for Swedish Posten eID cards\n* Added very preliminary support for EMV compatible cards and Multiflex\n  cards by Schlumberger\n\nNew in 0.3.5; 2001-12-15; Juha Yrjölä:\n* Now compiles with C++\n* Added card reset detection\n* Fixed PIN code changing\n* Improved certificate caching\n\nNew in 0.3.2; 2001-11-27; Juha Yrjölä:\n* Converted to Autotools.\n\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 0.0087890625,
          "content": "README.md"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.126953125,
          "content": "# OpenSC documentation\n\nManual pages for the\n[OpenSC command line tools](https://htmlpreview.github.io/?https://github.com/OpenSC/OpenSC/blob/master/doc/tools/tools.html)\nas well as for the\n[OpenSC configuration files](https://htmlpreview.github.io/?https://github.com/OpenSC/OpenSC/blob/master/doc/files/files.html)\nare available online and typically distributed along with your installation.\n\nThe [OpenSC Wiki](https://github.com/OpenSC/OpenSC/wiki) includes, among others, information for:\n * [Windows Quick Start](https://github.com/OpenSC/OpenSC/wiki/Windows-Quick-Start)\n * [macOS Quick Start](https://github.com/OpenSC/OpenSC/wiki/macOS-Quick-Start)\n * [Compiling and Installing on Unix flavors](https://github.com/OpenSC/OpenSC/wiki/Compiling-and-Installing-on-Unix-flavors)\n * [Frequently Asked Questions](https://github.com/OpenSC/OpenSC/wiki/Frequently-Asked-Questions)\n * More user and developer provided documentation\n\n# Downloads\n\n## Latest release\n\nThe [latest stable version of OpenSC](https://github.com/OpenSC/OpenSC/releases/latest) is available on Github.  It is available as\n\n * Windows installer for 64 bit and 32 bit programs (`OpenSC*_win64.msi` and `OpenSC*_win32.msi`)\n * macOS installer (`OpenSC*.dmg`)\n * Source code distribution (`opensc*.tar.gz`)\n\n## Nightly build\n\nThe latest source code is available through [GitHub](https://github.com/OpenSC/OpenSC/archive/master.zip).\nNightly builds are available by their git hash in branches of [OpenSC/Nightly](https://github.com/OpenSC/Nightly).\n\n\n# Build and testing status\n\n[![Linux build](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml/badge.svg)](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml)\n[![OSX build](https://github.com/OpenSC/OpenSC/actions/workflows/macos.yml/badge.svg)](https://github.com/OpenSC/OpenSC/actions/workflows/macos.yml)\n[![AppVeyor CI Build Status](https://ci.appveyor.com/api/projects/status/github/OpenSC/OpenSC?branch=master&svg=true)](https://ci.appveyor.com/project/frankmorgner/opensc/branch/master)\n[![Coverity Scan Status](https://scan.coverity.com/projects/4026/badge.svg)](https://scan.coverity.com/projects/4026)\n[![CodeQL](https://github.com/OpenSC/OpenSC/actions/workflows/codeql.yml/badge.svg?event=push)](https://github.com/OpenSC/OpenSC/actions/workflows/codeql.yml)\n[![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/opensc.svg)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:opensc)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/3908/badge)](https://bestpractices.coreinfrastructure.org/projects/3908)\n\nBuild and test status of specific cards:\n\n| Cards                                                               | Status                                                                                                                            |\n|----------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| CAC                                                                 | [![CAC](https://gitlab.com/redhat-crypto/OpenSC/badges/cac/pipeline.svg)](https://gitlab.com/redhat-crypto/OpenSC/pipelines)      |\n| [virt_CACard](https://github.com/Jakuje/virt_cacard)                | [![virt_CACard](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml/badge.svg)](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml) |\n| [Coolkey](https://github.com/dogtagpki/coolkey/tree/master/applet)  | [![Coolkey](https://gitlab.com/redhat-crypto/OpenSC/badges/coolkey/pipeline.svg)](https://gitlab.com/redhat-crypto/OpenSC/pipelines) |\n| [PivApplet](https://github.com/arekinath/PivApplet)                 | [![PIV](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml/badge.svg)](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml) |\n| [OpenPGP Applet](https://github.com/Yubico/ykneo-openpgp/)          | [![OpenPGP](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml/badge.svg)](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml) |\n| [GidsApplet](https://github.com/vletoux/GidsApplet/)                | [![GIDS](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml/badge.svg)](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml) |\n| [IsoApplet](https://github.com/philipWendland/IsoApplet/)           | [![IsoApplet](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml/badge.svg)](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml) |\n| [OsEID (MyEID)](https://sourceforge.net/projects/oseid/)            | [![OsEID (MyEID)](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml/badge.svg)](https://github.com/OpenSC/OpenSC/actions/workflows/linux.yml) |\n| SmartCardHSM                                                        | [![SmartCardHSM](https://gitlab.com/redhat-crypto/OpenSC/badges/sc-hsm/pipeline.svg)](https://gitlab.com/redhat-crypto/OpenSC/pipelines) |\n| ePass2003                                                           | [![ePass2003](https://gitlab.com/redhat-crypto/OpenSC/badges/epass2003/pipeline.svg)](https://gitlab.com/redhat-crypto/OpenSC/pipelines) |\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.908203125,
          "content": "# Security Policy\n\n## Supported Versions\n\nOpenSC releases are made roughly once a year, unless important security is discovered.\n\nOpenSC does not release micro updates for previously released versions and does not\nbackport security fixes into them. Only the last release is supported.\n\n| Version  | Supported          |\n| -------- | ------------------ |\n| 0.26.0   | :white_check_mark: |\n| < 0.26.0 | :x:                |\n\n## Reporting a Vulnerability\n\nIf you discovered security vulnerability in supported version of OpenSC,\nyou can either report it with a button \"Report a vulnerability\" in\n[Security tab](https://github.com/OpenSC/OpenSC/security/)\n(Do not create normal public issue with security relevant information!)\nor you can send email to any recently active\nproject developers frankmorgner(at)gmail.com, deengert(at)gmail.com and/or\njakuje(at)gmail.com .\n\nYou can expect update on the issue no later than in two weeks.\n"
        },
        {
          "name": "bootstrap",
          "type": "blob",
          "size": 0.048828125,
          "content": "#!/bin/sh\n\nautoreconf --verbose --install --force\n"
        },
        {
          "name": "bootstrap.ci",
          "type": "blob",
          "size": 1.09765625,
          "content": "#!/bin/sh\n\nusage()\n{\ncat << EOF\nusage: $0 options\n\nOpenSC bootstrap\nOPTIONS:\n   -h      Show this message\n   -s      Package suffix\n   -S      Use package suffix as 'g' appended with the date of last commit\nEOF\n}\n\n\nSUFFIX=\nwhile getopts “:hs:S” OPTION\ndo\n     case $OPTION in\n         h)\n             usage\n             exit 1\n             ;;\n         s)\n             SUFFIX=$OPTARG\n             ;;\n         S)\n             SUFFIX=g`git log -1 --pretty=fuller --date=iso | grep CommitDate: | sed -E 's/^CommitDate:\\s(.*)/\\1/' | sed -E 's/(.*)-(.*)-(.*) (.*):(.*):(.*)\\s+.*/\\1\\2\\3\\4\\5\\6/'`\n             ;;\n         ?)\n             usage\n             exit\n             ;;\n     esac\ndone\n\nset -e\n\nif [ -f Makefile ]; then\n  make distclean\nfi\n\nrm -rf *~ *.cache config.guess config.log config.status config.sub depcomp ltmain.sh m4/version.m4.ci\n\nif [ -n \"$SUFFIX\" ]\nthen\n    echo Set package suffix \"$SUFFIX\"\n    sed 's/^define(\\[PACKAGE_SUFFIX\\],\\s*\\[\\([-~]*[0-9a-zA-Z]*\\)\\])$/define(\\[PACKAGE_SUFFIX\\], \\['$SUFFIX'\\])/g' < m4/version.m4 > m4/version.m4.ci\nfi\n\n./bootstrap\n# autoreconf --verbose --install --force || true\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 36.3759765625,
          "content": "dnl -*- mode: m4; -*-\n\nAC_PREREQ(2.68)\n\ndefine([PRODUCT_NAME], [OpenSC])\ndefine([PRODUCT_TARNAME], [opensc])\ndefine([PRODUCT_BUGREPORT], [https://github.com/OpenSC/OpenSC/issues])\ndefine([PRODUCT_URL], [https://github.com/OpenSC/OpenSC])\ndefine([PACKAGE_VERSION_MAJOR], [0])\ndefine([PACKAGE_VERSION_MINOR], [26])\ndefine([PACKAGE_VERSION_FIX], [0])\ndefine([PACKAGE_SUFFIX], [])\n\ndefine([VS_FF_LEGAL_COPYRIGHT], [OpenSC Project])\ndefine([VS_FF_LEGAL_COMPANY_NAME], [OpenSC Project])\ndefine([VS_FF_LEGAL_COMPANY_URL], [https://github.com/OpenSC])\ndefine([VS_FF_COMMENTS], [Provided under the terms of the GNU Lesser General Public License (LGPLv2.1+).])\ndefine([VS_FF_PRODUCT_NAME], [OpenSC smartcard framework])\ndefine([VS_FF_PRODUCT_UPDATES], [https://github.com/OpenSC/OpenSC/releases])\ndefine([VS_FF_PRODUCT_URL], [https://github.com/OpenSC/OpenSC])\n\nm4_sinclude(m4/version.m4.ci)\n\n# Hint: MacOSX/build-package.in contains minimum OpenSSL reference\nm4_define([openssl_minimum_version], [1.1.1])\n\nAC_INIT([PRODUCT_NAME],[PACKAGE_VERSION_MAJOR.PACKAGE_VERSION_MINOR.PACKAGE_VERSION_FIX[]PACKAGE_SUFFIX],[PRODUCT_BUGREPORT],[PRODUCT_TARNAME],[PRODUCT_URL])\nAC_CONFIG_AUX_DIR([.])\nAC_CONFIG_HEADERS([config.h])\nAC_CONFIG_MACRO_DIR([m4])\nAM_INIT_AUTOMAKE(foreign 1.10 [subdir-objects])\n\nOPENSC_VERSION_MAJOR=\"PACKAGE_VERSION_MAJOR\"\nOPENSC_VERSION_MINOR=\"PACKAGE_VERSION_MINOR\"\nOPENSC_VERSION_FIX=\"PACKAGE_VERSION_FIX\"\n\nOPENSC_VS_FF_LEGAL_COPYRIGHT=\"VS_FF_LEGAL_COPYRIGHT\"\nOPENSC_VS_FF_COMPANY_NAME=\"VS_FF_LEGAL_COMPANY_NAME\"\nOPENSC_VS_FF_COMPANY_URL=\"VS_FF_LEGAL_COMPANY_URL\"\nOPENSC_VS_FF_COMMENTS=\"VS_FF_COMMENTS\"\nOPENSC_VS_FF_PRODUCT_NAME=\"VS_FF_PRODUCT_NAME\"\nOPENSC_VS_FF_PRODUCT_UPDATES=\"VS_FF_PRODUCT_UPDATES\"\nOPENSC_VS_FF_PRODUCT_URL=\"VS_FF_PRODUCT_URL\"\n\n# LT Version numbers, remember to change them just *before* a release.\n#   (Code changed:                      REVISION++)\n#   (Oldest interface changed/removed:  OLDEST++)\n#   (Interfaces added:                  CURRENT++, REVISION=0)\nOPENSC_LT_CURRENT=\"12\"\nOPENSC_LT_OLDEST=\"12\"\nOPENSC_LT_REVISION=\"1\"\nOPENSC_LT_AGE=\"$((${OPENSC_LT_CURRENT}-${OPENSC_LT_OLDEST}))\"\n\nAC_CONFIG_SRCDIR([src/libopensc/sc.c])\n\n# silent build by default\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\nAC_CANONICAL_HOST\nAC_PROG_CC\n# AC_PROG_CXX is needed to built the win32 custom action. Indeed dutil.h use [extern \"C\"] definition which fails on pure c compiler\nAC_PROG_CXX\nAC_PROG_OBJC\nPKG_PROG_PKG_CONFIG\nAC_C_BIGENDIAN\n\nAC_ARG_ENABLE(\n\t[optimization],\n\t[AS_HELP_STRING([--disable-optimization],[disable compile optimization @<:@enabled@:>@])],\n\t,\n\t[enable_optimization=\"yes\"]\n)\n\nAC_ARG_WITH(\n\t[cygwin-native],\n\t[AS_HELP_STRING([--with-cygwin-native],[compile native win32])],\n\t,\n\t[with_cygwin_native=\"no\"]\n)\n\nif test \"${enable_optimization}\" = \"no\"; then\n\tCFLAGS=\"${CFLAGS} -O0 -g\"\nfi\n\ndnl Check for some target-specific stuff\ntest -z \"${WIN32}\" && WIN32=\"no\"\ntest -z \"${CYGWIN}\" && CYGWIN=\"no\"\n\ncase \"${host}\" in\n\t*-*-solaris*)\n\t\tCPPFLAGS=\"${CPPFLAGS} -I/usr/local/include\"\n\t\tLDFLAGS=\"${LDFLAGS} -L/usr/local/lib -R/usr/local/lib\"\n\t;;\n\t*-mingw*|*-winnt*)\n\t\tWIN32=\"yes\"\n\t\tCPPFLAGS=\"${CPPFLAGS} -DWIN32_LEAN_AND_MEAN\"\n\t\tWIN_LIBPREFIX=\"lib\"\n\t;;\n\t*-cygwin*)\n\t\tAC_MSG_CHECKING([cygwin mode to use])\n\t\tCYGWIN=\"yes\"\n\t\tif test \"${with_cygwin_native}\" = \"yes\"; then\n\t\t\tAC_MSG_RESULT([Using native win32])\n\t\t\tCPPFLAGS=\"${CPPFLAGS} -DWIN32_LEAN_AND_MEAN\"\n\t\t\t#CFLAGS=\"${CFLAGS} -mno-cygwin\" deprecated/removed flag\n\t\t\tWIN32=\"yes\"\n\t\telse\n\t\t\tAC_MSG_RESULT([Using cygwin])\n\t\t\tWIN_LIBPREFIX=\"cyg\"\n\t\t\tAC_DEFINE([USE_CYGWIN], [1], [Define if you are on Cygwin])\n\t\tfi\n\t;;\nesac\n\ncase \"${host}\" in\n\t*-mingw*|*-winnt*|*-cygwin*)\n\t\tDEBUG_FILE=\"%TEMP%\\\\\\opensc-debug.log\"\n\t\tPROFILE_DIR_DEFAULT=\"obtained from windows registers\"\n\t\tPROFILE_DIR=\"\\\"\\\"\"\n\t;;\n\t*)\n\t\tDEBUG_FILE=\"/tmp/opensc-debug.log\"\n\t\tPROFILE_DIR=\"\\$(pkgdatadir)\"\n\t\tPROFILE_DIR_DEFAULT=\"\\$(pkgdatadir)\"\n\t;;\nesac\n\ncase \"${host}\" in\n\t*-mingw*)\n\t\tCPPFLAGS=\"${CPPFLAGS} -D__USE_MINGW_ANSI_STDIO=1\"\n\t;;\nesac\n\ndnl with Firefox's osclientcerts.so we skip registering our PKCS#11 module on Windows and macOS by default\ncase \"${host}\" in\n\t*-*-darwin*)\n\t\tPKCS11_REGISTER_SKIP_FIREFOX=\"on\"\n\t;;\n\t*-mingw*|*-winnt*|*-cygwin*)\n\t\tPKCS11_REGISTER_SKIP_FIREFOX=\"on\"\n\t;;\n\t*)\n\t\tPKCS11_REGISTER_SKIP_FIREFOX=\"off\"\n\t;;\nesac\n\nAX_CODE_COVERAGE()\n\nAX_CHECK_COMPILE_FLAG([-Wunknown-warning-option], [have_unknown_warning_option=\"yes\"], [have_unknown_warning_option=\"no\"])\nAM_CONDITIONAL([HAVE_UNKNOWN_WARNING_OPTION], [test \"${have_unknown_warning_option}\" = \"yes\"])\nAX_CHECK_COMPILE_FLAG([-Wshorten-64-to-32], [have_shorten_warning_option=\"yes\"], [have_shorten_warning_option=\"no\"])\nAM_CONDITIONAL([HAVE_SHORTEN_WARNING_OPTION], [test \"${have_shorten_warning_option}\" = \"yes\"])\n\nAX_VALGRIND_CHECK()\n\nAC_ARG_ENABLE(\n\t[fuzzing],\n\t[AS_HELP_STRING([--enable-fuzzing],[enable compile of fuzzing tests @<:@disabled@:>@, note that CC, CFLAGS and FUZZING_LIBS should be set accordingly, e.g. to something like CC=\"clang\" CFLAGS=\"-fsanitize=fuzzer-no-link\" FUZZING_LIBS=\"-fsanitize=fuzzer\"])],\n\t,\n\t[enable_fuzzing=\"no\"]\n)\n\nAC_ARG_VAR([FUZZING_LIBS], [linker flags for fuzzing])\n\nAC_ARG_ENABLE(\n\t[strict],\n\t[AS_HELP_STRING([--disable-strict],[disable strict compile mode @<:@enabled@:>@])],\n\t,\n\t[enable_strict=\"yes\"]\n)\n\nAC_ARG_ENABLE(\n\t[pedantic],\n\t[AS_HELP_STRING([--enable-pedantic],[enable pedantic compile mode @<:@disabled@:>@])],\n\t,\n\t[enable_pedantic=\"no\"]\n)\n\nAC_ARG_ENABLE(\n\t[thread_locking],\n\t[AS_HELP_STRING([--disable-thread-locking],[disable OS thread locking @<:@enabled@:>@])],\n\t,\n\t[enable_thread_locking=\"yes\"]\n)\n\nAC_ARG_ENABLE(\n\t[zlib],\n\t[AS_HELP_STRING([--enable-zlib],[enable zlib linkage @<:@detect@:>@])],\n\t,\n\t[enable_zlib=\"detect\"]\n)\n\nAC_ARG_ENABLE(\n\t[readline],\n\t[AS_HELP_STRING([--enable-readline],[enable readline linkage @<:@detect@:>@])],\n\t,\n\t[enable_readline=\"detect\"]\n)\n\nAC_ARG_ENABLE(\n\t[openssl],\n\t[AS_HELP_STRING([--enable-openssl],[enable OpenSSL linkage @<:@detect@:>@])],\n\t,\n\t[enable_openssl=\"detect\"]\n)\n\nAC_ARG_ENABLE([openssl-secure-malloc],\n    [AS_HELP_STRING([--openssl-secure-malloc=<SIZE_IN_BYTES>],\n        [Enable OpenSSL secure memory by specifying its size in bytes, must be a power of 2 @<:@disabled@:>@])],\n    [], [enable_openssl_secure_malloc=no])\nAS_IF([test $enable_openssl_secure_malloc != no],\n\t[AC_DEFINE_UNQUOTED([OPENSSL_SECURE_MALLOC_SIZE],[$enable_openssl_secure_malloc],[Size of OpenSSL secure memory in bytes, must be a power of 2])])\n\nAC_ARG_ENABLE(\n\t[openpace],\n\t[AS_HELP_STRING([--enable-openpace],[enable OpenPACE linkage @<:@detect@:>@])],\n\t,\n\t[enable_openpace=\"detect\"]\n)\n\nAC_ARG_ENABLE(\n\t[openct],\n\t[AS_HELP_STRING([--enable-openct],[enable openct linkage @<:@disabled@:>@])],\n\t,\n\t[enable_openct=\"no\"]\n)\n\nAC_ARG_ENABLE(\n\t[pcsc],\n\t[AS_HELP_STRING([--disable-pcsc],[disable pcsc support @<:@enabled@:>@])],\n\t,\n\t[enable_pcsc=\"yes\"]\n)\n\nAC_ARG_ENABLE(\n\t[cryptotokenkit],\n\t[AS_HELP_STRING([--disable-cryptotokenkit],[disable CryptoTokenKit support @<:@enabled@:>@])],\n\t,\n\t[enable_cryptotokenkit=\"no\"]\n)\n\nAC_ARG_ENABLE(\n\t[ctapi],\n\t[AS_HELP_STRING([--enable-ctapi],[enable CT-API support @<:@disabled@:>@])],\n\t,\n\t[enable_ctapi=\"no\"]\n)\n\nAC_ARG_ENABLE(\n\t[minidriver],\n\t[AS_HELP_STRING([--enable-minidriver],[enable minidriver on Windows @<:@disabled@:>@])],\n\t,\n\t[enable_minidriver=\"no\"]\n)\n\nAC_ARG_ENABLE(\n\t[sm],\n\t[AS_HELP_STRING([--disable-sm],[disable secure messaging support and SM modules @<:@enabled@:>@])],\n\t,\n\t[enable_sm=\"yes\"]\n)\n\nAC_ARG_ENABLE(\n\t[piv-sm],\n\t[AS_HELP_STRING([--enable-piv-sm],[enable SM in PIV card driver linkage @<:@disabled@:>@])],\n\t,\n\t[enable_piv_sm=\"no\"]\n)\n\nAC_ARG_ENABLE(\n\t[man],\n\t[AS_HELP_STRING([--disable-man],[disable installation of manuals @<:@enabled for none Windows@:>@])],\n\t,\n\t[enable_man=\"detect\"]\n)\n\nAC_ARG_ENABLE(\n\t[doc],\n\t[AS_HELP_STRING([--enable-doc],[enable installation of documents @<:@disabled@:>@])],\n\t,\n\t[enable_doc=\"no\"]\n)\n\nAC_ARG_ENABLE(\n\t[tests],\n\t[AS_HELP_STRING([--enable-tests],[enable tests @<:@enabled@:>@])],\n\t,\n\t[enable_tests=\"yes\"]\n)\n\nAC_ARG_ENABLE(\n\t[dnie-ui],\n\t[AS_HELP_STRING([--enable-dnie-ui],[enable use of external user interface program to request DNIe pin@<:@disabled@:>@])],\n\t,\n\t[enable_dnie_ui=\"no\"]\n)\n\nAC_ARG_ENABLE(\n\t[notify],\n\t[AS_HELP_STRING([--enable-notify],[enable notifications @<:@detect@:>@])],\n\t,\n\t[enable_notify=\"detect\"]\n)\n\nAC_ARG_ENABLE(\n\t[autostart-items],\n\t[AS_HELP_STRING([--enable-autostart-items],[enable autostart items @<:@enabled@:>@])],\n\t,\n\t[enable_autostart=\"no\"]\n)\n\nAC_ARG_ENABLE(\n\t[cmocka],\n\t[AS_HELP_STRING([--enable-cmocka],[Build tests in src/tests/p11test directory @<:@detect@:>@])],\n\t,\n\t[enable_cmocka=\"detect\"]\n)\n\nAC_ARG_WITH(\n\t[xsl-stylesheetsdir],\n\t[AS_HELP_STRING([--with-xsl-stylesheetsdir=PATH],[docbook xsl-stylesheets for svn build @<:@detect@:>@])],\n\t[xslstylesheetsdir=\"${withval}\"],\n\t[xslstylesheetsdir=\"detect\"]\n)\n\nAC_ARG_WITH(\n\t[completiondir],\n\t[AS_HELP_STRING([--with-completiondir=PATH],[Directory of Bash completion @<:@detect@:>@])],\n\t[completiondir=\"${withval}\"],\n\t[completiondir=\"detect\"]\n)\n\nAC_ARG_WITH(\n\t[pcsc-provider],\n\t[AS_HELP_STRING([--with-pcsc-provider=PATH],[Path to system pcsc provider @<:@system default@:>@])],\n\t,\n\t[with_pcsc_provider=\"detect\"]\n)\n\nAC_ARG_WITH(\n\t[pkcs11-provider],\n\t[AS_HELP_STRING([--with-pkcs11-provider=PATH],[Path to the default PKCS11 provider @<:@default=OpenSC@:>@])],\n\t,\n\t[with_pkcs11_provider=\"detect\"]\n)\n\ndnl ./configure check\nreader_count=\"\"\nfor rdriver in \"${enable_pcsc}\" \"${enable_cryptotokenkit}\" \"${enable_openct}\" \"${enable_ctapi}\"; do\n\ttest \"${rdriver}\" = \"yes\" && reader_count=\"${reader_count}x\"\ndone\nif test \"${reader_count}\" != \"x\"; then\n\tAC_MSG_ERROR([Only one of --enable-pcsc, --enable-cryptotokenkit, --enable-openct, --enable-ctapi can be specified!])\nfi\n\ndnl Checks for programs.\nAC_PROG_CPP\nAC_PROG_INSTALL\nAC_PROG_LN_S\nAC_PROG_MKDIR_P\nAC_PROG_SED\nAC_PROG_MAKE_SET\n\ndnl Add libtool support.\nifdef(\n\t[LT_INIT],\n\t[\n\t\tLT_INIT([win32-dll])\n\t\tLT_LANG([Windows Resource])\n\t],\n\t[\n\t\tAC_LIBTOOL_WIN32_DLL\n\t\tAC_LIBTOOL_RC\n\t\tAC_PROG_LIBTOOL\n\t]\n)\n\ndnl These required for repository checkout\nAC_ARG_VAR([XSLTPROC], [xsltproc utility])\nAC_ARG_VAR([git], [git])\nAC_CHECK_PROGS([XSLTPROC],[xsltproc])\nAC_CHECK_PROGS([GIT],[git])\n\nAC_MSG_CHECKING([xsl-stylesheets])\nif test \"${xslstylesheetsdir}\" = \"detect\"; then\n\txslstylesheetsdir=\"no\"\n\tfor f in \\\n\t\t/usr/share/xml/docbook/stylesheet/nwalsh \\\n\t\t/usr/share/xml/docbook/stylesheet/nwalsh/current \\\n\t\t/opt/local/share/xsl/docbook-xsl \\\n\t\t/sw/share/xml/xsl/docbook-xsl \\\n\t\t/usr/share/sgml/docbook/*; do\n\n\t\ttest -e \"${f}/html/docbook.xsl\" && xslstylesheetsdir=\"${f}\"\n\tdone\nelif test \"${xslstylesheetsdir}\" != \"no\"; then\n\ttest -e \"${xslstylesheetsdir}/html/docbook.xsl\" || AC_MSG_ERROR([invalid])\nfi\nAC_MSG_RESULT([${xslstylesheetsdir}])\n\nAC_MSG_CHECKING([git checkout])\nGIT_CHECKOUT=\"no\"\nif test -n \"${GIT}\" -a -d \"${srcdir}/.git\"; then\n\tGIT_CHECKOUT=\"yes\"\nfi\nAC_MSG_RESULT([${GIT_CHECKOUT}])\n\nif test \"${GIT_CHECKOUT}\" = \"yes\"; then\n\tREVISION_DESCRIPTION=\"$(${GIT} describe || echo '<version not available>' )\"\n\tif test \"${REVISION_DESCRIPTION}\" = \"<version not available>\"; then\n\t\tREVISION_DESCRIPTION=\"$(${GIT} describe --tags || echo '<version not available>')\"\n\tfi\n\n\tHASH_COMMIT_DATE=\"$(${GIT} log -1 --pretty=format:'rev: %h, commit-time: %ci')\"\n\tGIT_TAG_COMMIT=\"$(${GIT} rev-list --tags --no-walk --max-count=1)\"\n\n\tOPENSC_SCM_REVISION=\"OpenSC-${REVISION_DESCRIPTION}, ${HASH_COMMIT_DATE}\"\n\tOPENSC_VERSION_REVISION=\"$(${GIT} rev-list ${GIT_TAG_COMMIT}..HEAD --count || echo 0)\"\nelse\n\tOPENSC_SCM_REVISION=\"No Git revision info available\"\n\tOPENSC_VERSION_REVISION=\"0\"\nfi\n\ndnl C Compiler features\nAC_C_INLINE\n\ndnl Checks for header files.\nAC_HEADER_SYS_WAIT\nAC_HEADER_ASSERT\nAC_CHECK_HEADERS([ \\\n\terrno.h fcntl.h stdlib.h \\\n\tinttypes.h string.h strings.h \\\n\tsys/time.h unistd.h sys/mman.h \\\n\tsys/endian.h endian.h\n])\n\ndnl Checks for typedefs, structures, and compiler characteristics.\nAC_C_CONST\nAC_TYPE_UID_T\nAC_TYPE_SIZE_T\n\ndnl Checks for library functions.\nAC_FUNC_ERROR_AT_LINE\nAC_FUNC_STAT\nAC_FUNC_VPRINTF\nAC_CHECK_FUNCS([ \\\n\tgetpass gettimeofday getline memset mkdir \\\n\tstrdup strerror memset_s explicit_bzero \\\n\tstrnlen sigaction\n])\n\n#\n# Check for __builtin_uadd_overflow\n#\nAC_MSG_CHECKING([compiler support for __builtin_*_overflow()])\nAC_LINK_IFELSE(\n    [AC_LANG_PROGRAM(\n         [[#include <limits.h>]],\n         [[return (__builtin_uadd_overflow(UINT_MAX, UINT_MAX, &(unsigned int){ 0 }));]]\n     )],\n    [AC_MSG_RESULT([yes])\n     AC_DEFINE([HAVE_BUILTIN_OVERFLOW], [1], [define if the compiler supports __builtin_*_overflow().])\n    ],\n    [AC_MSG_RESULT([no])\n    ])\n\n# Do not check for strlcpy and strlcat in Linux because it is not implemented\n# and autotools can not detect it in AC_CHECK_DECLS because build does not fail\n# in this test.\n# https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=22192\ncase \"${host_os}\" in\n\tlinux*)\n\t\t;;\n\t*)\n\t\tAC_CHECK_DECLS([strlcpy, strlcat], [], [], [[#include <string.h>]])\n\t\t;;\nesac\n\nAC_CHECK_SIZEOF(void *)\nif test \"${ac_cv_sizeof_void_p}\" = 8; then\n\tLIBRARY_BITNESS=\"64\"\nelse\n\tLIBRARY_BITNESS=\"32\"\nfi\n\ndnl See if socket() is found from libsocket\nAC_CHECK_LIB(\n\t[socket],\n\t[socket],\n\t[\n\t\tLIBS=\"${LIBS} -lsocket\"\n\t\tAC_CHECK_LIB(\n\t\t\t[resolv],\n\t\t\t[res_query],\n\t\t\t[LIBS=\"${LIBS} -lresolv\"]\n\t\t)\n\t]\n)\n\nif test \"${WIN32}\" = \"no\"; then\n\tdnl dl support\n\tAC_ARG_VAR([LDL_LIBS], [linker flags for ldl])\n\tif test -z \"${LDL_LIBS}\"; then\n\t\tAC_CHECK_LIB(\n\t\t\t[dl],\n\t\t\t[dlopen],\n\t\t\t[LDL_LIBS=\"-ldl\"],\n\t\t\tAC_CHECK_LIB(\n\t\t\t\t[dld],\n\t\t\t\t[dlopen],\n\t\t\t\t[LDL_LIBS=\"-ldld\"],\n\t\t\t\tAC_MSG_ERROR([unable to find the dlopen() function])\n\t\t\t)\n\t\t)\n\tfi\n\n\tdnl Special check for pthread support.\n\tAX_PTHREAD(\n\t\t[AC_DEFINE(\n\t\t\t[HAVE_PTHREAD],\n\t\t\t[1],\n\t\t\t[Define if you have POSIX threads libraries and header files.]\n\t\t)],\n\t\t[AC_MSG_ERROR([POSIX thread support required])]\n\t)\n\tCC=\"${PTHREAD_CC}\"\nfi\n\nif test \"${enable_thread_locking}\" = \"yes\"; then\n\tOPENSC_PKCS11_PTHREAD_CFLAGS=\"${PTHREAD_CFLAGS} -DPKCS11_THREAD_LOCKING\"\nelse\n\tOPENSC_PKCS11_PTHREAD_CFLAGS=\"\"\nfi\nAC_SUBST(OPENSC_PKCS11_PTHREAD_CFLAGS)\n\nif test \"${enable_minidriver}\" = \"yes\"; then\n\tdnl win32 special test for minidriver\n\tAC_CHECK_HEADER(\n\t\t[cardmod.h],\n\t\t,\n\t\t[AC_MSG_ERROR([cardmod.h from CNG is required for minidriver])],\n\t\t[#if defined(__MINGW32__)\n#include \"${srcdir}/src/minidriver/cardmod-mingw-compat.h\"\n#endif\n\t])\n\n\tAC_DEFINE([ENABLE_MINIDRIVER], [1], [Enable minidriver support])\nfi\n\nif test \"${enable_dnie_ui}\" = \"yes\"; then\n\tAC_DEFINE([ENABLE_DNIE_UI], [1], [Enable the use of external user interface program to request DNIe user pin])\n\n\tcase \"${host}\" in\n\t\t*-*-darwin*)\n\t\t\tLDFLAGS=\"${LDFLAGS} -framework Carbon\"\n\t\t;;\n\tesac\n\tcase \"${host}\" in\n\t\t*-apple-*)\n\t\t\tLDFLAGS=\"${LDFLAGS} -framework CoreFoundation\"\n\t\t;;\n\tesac\nfi\n\ncase \"${host}\" in\n\t*-*-darwin*|*-mingw*|*-winnt*|*-cygwin*)\n\t\t\thave_notify=\"yes\"\n\t\t;;\n\t*)\n\t\t\tPKG_CHECK_MODULES( [GIO2], [gio-2.0],\n\t\t\t\t\t\t\t  [ have_notify=\"yes\"\n\t\t\t\t\t\t\t\thave_gio2=\"yes\" ],\n\t\t\t\t\t\t\t  [ have_notify=\"no\"\n\t\t\t\t\t\t\t\thave_gio2=\"no\" ])\n\t\t\tsaved_CFLAGS=\"${CFLAGS}\"\n\t\t\tCFLAGS=\"${CFLAGS} ${GIO2_CFLAGS}\"\n\t\t\tAC_CHECK_HEADERS(gio/gio.h, [],\n\t\t\t\t\t\t\t [ AC_MSG_WARN([glib2 headers not found])\n\t\t\t\t\t\t\t   have_notify=\"no\"\n\t\t\t\t\t\t\t   have_gio2=\"no\" ])\n\t\t\tCFLAGS=\"${saved_CFLAGS}\"\n\t\t\tsaved_LIBS=\"$LIBS\"\n\t\t\tLIBS=\"$LIBS  ${GIO2_LIBS}\"\n\t\t\tAC_MSG_CHECKING([for g_application_send_notification])\n\t\t\tAC_TRY_LINK_FUNC(g_application_send_notification, [ AC_MSG_RESULT([yes]) ],\n\t\t\t\t\t\t\t [ AC_MSG_WARN([Cannot link against glib2])\n\t\t\t\t\t\t\t   have_notify=\"no\"\n\t\t\t\t\t\t\t   have_gio2=\"no\"  ])\n\t\t\tLIBS=\"$saved_LIBS\"\n\t\t\t# we do not need glib-2.0\n\t\t\tGIO2_LIBS=$(echo \"$GIO2_LIBS\" | sed 's/-lglib-2.0//g')\n\t\t;;\nesac\n\ncase \"${enable_notify}\" in\n\tno)\n\t\thave_notify=\"no\"\n\t;;\n\tdetect)\n\t\tif test \"${have_notify}\" = \"yes\"; then\n\t\t\tenable_notify=\"yes\"\n\t\telse\n\t\t\tenable_notify=\"no\"\n\t\tfi\n\t;;\nesac\n\nif test \"${enable_notify}\" = \"yes\"; then\n\tif test \"${have_notify}\" = \"yes\"; then\n\t\tAC_DEFINE([ENABLE_NOTIFY], [1], [Use notification libraries and header files])\n\t\tif test \"${have_gio2}\" = \"yes\"; then\n\t\t\tAC_DEFINE([ENABLE_GIO2], [1], [Use glib2 libraries and header files])\n\t\t\tOPTIONAL_NOTIFY_CFLAGS=\"${GIO2_CFLAGS}\"\n\t\t\tOPTIONAL_NOTIFY_LIBS=\"${GIO2_LIBS}\"\n\t\tfi\n\telse\n\t\tAC_MSG_ERROR([notification linkage required, but no notification provider was found])\n\tfi\nfi\n\nhave_cmocka=\"yes\"\nPKG_CHECK_MODULES([CMOCKA], [cmocka >= 1.0.1],,[have_cmocka=\"no\"])\nAC_CHECK_HEADER([setjmp.h])\nAC_CHECK_HEADER([cmocka.h],, [have_cmocka=\"no\"],\n[#include <stdarg.h>\n#include <stddef.h>\n#include <setjmp.h>\n])\n\nAC_ARG_VAR([ZLIB_CFLAGS], [C compiler flags for zlib])\nAC_ARG_VAR([ZLIB_LIBS], [linker flags for zlib])\nif test -z \"${ZLIB_LIBS}\"; then\n\tAC_CHECK_LIB(\n\t\t[z],\n\t\t[inflate],\n\t\t[ZLIB_LIBS=\"-lz\"]\n\t)\nfi\nsaved_CFLAGS=\"${CFLAGS}\"\nCFLAGS=\"${CFLAGS} ${ZLIB_CFLAGS}\"\nAC_CHECK_HEADERS([zlib.h])\nCFLAGS=\"${saved_CFLAGS}\"\ntest -n \"${ZLIB_LIBS}\" -a \"${ac_cv_header_zlib_h}\" = \"yes\" && have_zlib=\"yes\"\n\ncase \"${enable_zlib}\" in\n\tno)\n\t\thave_zlib=\"no\"\n\t;;\n\tdetect)\n\t\tif test \"${have_zlib}\" = \"yes\"; then\n\t\t\tenable_zlib=\"yes\"\n\t\telse\n\t\t\tenable_zlib=\"no\"\n\t\tfi\n\t;;\nesac\n\nif test \"${enable_zlib}\" = \"yes\"; then\n\tif test \"${have_zlib}\" = \"yes\"; then\n\t\tAC_DEFINE([ENABLE_ZLIB], [1], [Use zlib libraries and header files])\n\telse\n\t\tAC_MSG_ERROR([zlib linkage required, but no zlib was found])\n\tfi\nfi\n\nAC_ARG_VAR([READLINE_CFLAGS], [C compiler flags for readline])\nAC_ARG_VAR([READLINE_LIBS], [linker flags for readline])\nif test -z \"${READLINE_LIBS}\"; then\n\tfor l in \"\" -lncurses -ltermcap; do\n\t\tunset ac_cv_lib_readline_readline\n\t\tAC_CHECK_LIB(\n\t\t\t[readline],\n\t\t\t[readline],\n\t\t\t[READLINE_LIBS=\"-lreadline ${l}\"],\n\t\t\t,\n\t\t\t[\"${l}\"]\n\t\t)\n\t\ttest -n \"${READLINE_LIBS}\" && break;\n\tdone\nfi\nsaved_CFLAGS=\"${CFLAGS}\"\nCFLAGS=\"${CFLAGS} ${READLINE_CFLAGS}\"\nAC_CHECK_HEADERS([readline/readline.h])\nCFLAGS=\"${saved_CFLAGS}\"\ntest -n \"${READLINE_LIBS}\" -a \"${ac_cv_header_readline_readline_h}\" = \"yes\" && have_readline=\"yes\"\n\ncase \"${enable_readline}\" in\n\tno)\n\t\thave_readline=\"no\"\n\t;;\n\tdetect)\n\t\tif test \"${have_readline}\" = \"yes\"; then\n\t\t\tenable_readline=\"yes\"\n\t\telse\n\t\t\tenable_readline=\"no\"\n\t\tfi\n\t;;\nesac\n\nif test \"${enable_readline}\" = \"yes\"; then\n\tif test \"${have_readline}\" = \"yes\"; then\n\t\tAC_DEFINE([ENABLE_READLINE], [1], [Use readline libraries and header files])\n\telse\n\t\tAC_MSG_ERROR([readline linkage required, but no readline was found])\n\tfi\nfi\n\nPKG_CHECK_MODULES(\n\t[OPENSSL],\n\t[libcrypto >= openssl_minimum_version],\n\t[have_openssl=\"yes\"],\n\t[AC_CHECK_LIB(\n\t\t[crypto],\n\t\t[RSA_get_version],\n\t\t[\n\t\t\thave_openssl=\"yes\"\n\t\t\tOPENSSL_LIBS=\"-lcrypto\"\n\t\t],\n\t\t[have_openssl=\"no\"]\n\t)]\n)\n\ncase \"${enable_openssl}\" in\n\tno)\n\t\thave_openssl=\"no\"\n\t;;\n\tdetect)\n\t\tsaved_CFLAGS=\"${CFLAGS}\"\n\t\tCFLAGS=\"${CFLAGS} ${OPENSSL_CFLAGS}\"\n\t\tAC_CHECK_HEADERS([openssl/crypto.h],,[have_openssl=\"no\"])\n\t\tCFLAGS=\"${saved_CFLAGS}\"\n\t\tif test \"${have_openssl}\" = \"yes\"; then\n\t\t\tenable_openssl=\"yes\"\n\t\telse\n\t\t\tenable_openssl=\"no\"\n\t\tfi\n\t;;\nesac\n\nif test \"${enable_openssl}\" = \"yes\"; then\n\tif test \"${have_openssl}\" = \"yes\"; then\n\t\tAC_DEFINE([ENABLE_OPENSSL], [1], [Have OpenSSL libraries and header files])\n\telse\n\t\tAC_MSG_ERROR([OpenSSL linkage required, but no OpenSSL was found])\n\tfi\nelse\n\tOPENSSL_CFLAGS=\"\"\n\tOPENSSL_LIBS=\"\"\nfi\n\nif test \"${enable_cmocka}\" = \"detect\"; then\n\tif test \"${have_cmocka}\" = \"yes\" -a \"${have_openssl}\" = \"yes\"; then\n\t\tenable_cmocka=\"yes\"\n\telse\n\t\tenable_cmocka=\"no\"\n\tfi\nfi\n\nif test \"${enable_cmocka}\" = \"yes\"; then\n\tif test \"${have_cmocka}\" != \"yes\"; then\n\t\tAC_MSG_ERROR([Tests required, but cmocka is not available])\n\tfi\nfi\n\nif test \"${enable_fuzzing}\" = \"yes\"; then\n\tAC_DEFINE([FUZZING_ENABLED], [1], [Define if fuzzing is enabled])\nfi\n\n\nPKG_CHECK_EXISTS([libeac], [PKG_CHECK_MODULES([OPENPACE], [libeac >= 0.9])],\n                 [AC_MSG_WARN([libeac not found by pkg-config])])\n\nsaved_CPPFLAGS=\"$CPPFLAGS\"\nsaved_LIBS=\"$LIBS\"\nCPPFLAGS=\"$CPPFLAGS $OPENPACE_CFLAGS\"\nLIBS=\"$LDFLAGS $OPENPACE_LIBS\"\n\nhave_openpace=\"yes\"\nAC_CHECK_HEADERS(eac/eac.h, [],\n                 [ AC_MSG_WARN([OpenPACE headers not found])\n                 have_openpace=\"no\" ])\nAC_MSG_CHECKING([for EAC_CTX_init_pace])\nAC_TRY_LINK_FUNC(EAC_CTX_init_pace, [ AC_MSG_RESULT([yes]) ],\n                 [ AC_MSG_WARN([Cannot link against libeac])\n                 have_openpace=\"no\" ])\nAC_CHECK_FUNCS([EAC_OBJ_nid2obj])\n\nCPPFLAGS=\"$saved_CPPFLAGS\"\nLIBS=\"$saved_LIBS\"\n\n\nAC_ARG_ENABLE(cvcdir,\n              AS_HELP_STRING([--enable-cvcdir=DIR],\n                             [directory containing CV certificates (default is determined by libeac)]),\n                             [cvcdir=\"${enableval}\"],\n                             [cvcdir=false])\nif test \"${cvcdir}\" = false ; then\n    cvcdir=\"`$PKG_CONFIG libeac --variable=cvcdir`\"\nfi\nif test \"${cvcdir}\" = \"\" ; then\n\tcase \"${host}\" in\n\t\t*-mingw*|*-winnt*|*-cygwin*)\n\t\t\tcvcdir=\"%PROGRAMFILES%\\\\\\OpenSC Project\\\\\\OpenSC\\\\\\cvc\"\n\t\t\t;;\n\t\t*)\n\t\t\tAC_MSG_WARN([use --enable-cvcdir=DIR])\n\t\t\t;;\n\tesac\nfi\nCVCDIR=\"${cvcdir}\"\nAC_SUBST(CVCDIR)\nAC_DEFINE_UNQUOTED([CVCDIR], [\"${CVCDIR}\"], [CVC directory])\n\nAC_ARG_ENABLE(x509dir,\n              AS_HELP_STRING([--enable-x509dir=DIR],\n                             [directory containing X.509 certificates (default is determined by libeac)]),\n                             [x509dir=\"${enableval}\"],\n                             [x509dir=false])\nif test \"${x509dir}\" = false ; then\n    x509dir=\"`$PKG_CONFIG libeac --variable=x509dir`\"\nfi\nif test -z \"${x509dir}\"\nthen\n    x509dir=\"`$PKG_CONFIG libeac --variable=x509dir`\"\nfi\nif test -z \"${x509dir}\"\nthen\n\tcase \"${host}\" in\n\t\t*-mingw*|*-winnt*|*-cygwin*)\n\t\t\tx509dir=\"%PROGRAMFILES%\\\\\\OpenSC Project\\\\\\OpenSC\\\\\\x509\"\n\t\t\t;;\n\t\t*)\n\t\t\tAC_MSG_WARN([use --enable-x509dir=DIR])\n\t\t\t;;\n\tesac\nfi\nX509DIR=\"${x509dir}\"\nAC_SUBST(X509DIR)\nAC_DEFINE_UNQUOTED([X509DIR], [\"${X509DIR}\"], [CVC directory])\n\ncase \"${enable_openpace}\" in\n\tno)\n\t\thave_openpace=\"no\"\n\t;;\n\tdetect)\n\t\tif test \"${have_openpace}\" = \"yes\"; then\n\t\t\tenable_openpace=\"yes\"\n\t\telse\n\t\t\tenable_openpace=\"no\"\n\t\tfi\n\t;;\nesac\n\nif test \"${enable_openpace}\" = \"yes\"; then\n\tif test \"${have_openpace}\" = \"yes\"; then\n\t\tAC_DEFINE([ENABLE_OPENPACE], [1], [Use OpenPACE libraries and header files])\n\telse\n\t\tAC_MSG_ERROR([OpenPACE linkage required, but no OpenPACE was found])\n\tfi\nelse\n\tOPENPACE_CFLAGS=\"\"\n\tOPENPACE_LIBS=\"\"\nfi\n\nif  test \"${enable_piv_sm}\" = \"yes\"; then\n\tAC_DEFINE([ENABLE_PIV_SM], [1], [Enable PIV SM])\nfi\n\nif test \"${enable_openct}\" = \"yes\"; then\n\tPKG_CHECK_MODULES(\n\t\t[OPENCT],\n\t\t[libopenct],\n\t\t[AC_DEFINE([ENABLE_OPENCT], [1], [Have OpenCT libraries and header files])],\n\t\t[AC_MSG_ERROR([openct requested but not available])]\n\t)\nfi\n\nif test \"${enable_ctapi}\" = \"yes\"; then\n\tAC_DEFINE([ENABLE_CTAPI], [1], [Enable CT-API support])\nfi\n\nif test \"${enable_pcsc}\" = \"yes\"; then\n\tif test \"${WIN32}\" != \"yes\"; then\n\t\tPKG_CHECK_EXISTS(\n\t\t\t[libpcsclite],\n\t\t\t[PKG_CHECK_MODULES([PCSC], [libpcsclite >= 1.8.22],\n\t\t\t\t[AC_DEFINE([PCSCLITE_GOOD], [1], [Sufficient version of PCSC-Lite with all the required features])],\n\t\t\t\t[:]\n\t\t\t)]\n\t\t)\n\t\tif test -z \"${PCSC_CFLAGS}\"; then\n\t\t\tcase \"${host}\" in\n\t\t\t\t*-*-darwin*)\n\t\t\t\t\t# Locate the latest SDK.\n\t\t\t\t\tSDK_PATH=$(xcrun --sdk macosx --show-sdk-path)\n\t\t\t\t\tPCSC_CFLAGS=\"-I$SDK_PATH/System/Library/Frameworks/PCSC.framework/Versions/Current/Headers\"\n\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tPCSC_CFLAGS=\"-I/usr/include/PCSC\"\n\t\t\t\t;;\n\t\t\tesac\n\t\tfi\n\tfi\n\n\tsaved_CFLAGS=\"${CFLAGS}\"\n\tCFLAGS=\"${CFLAGS} ${PCSC_CFLAGS}\"\n\t# We must cope with mingw32 that does not have winscard.h mingw64 has it.\n\tAC_CHECK_HEADERS([winscard.h],,[test \"${WIN32}\" != \"yes\" && AC_MSG_ERROR([winscard.h is required for pcsc])])\n\tAC_CHECK_HEADERS([pcsclite.h])\n\tCFLAGS=\"${saved_CFLAGS}\"\n\n\tif test \"${with_pcsc_provider}\" = \"detect\"; then\n\t\tcase \"${host}\" in\n\t\t\t*-*-darwin*)\n\t\t\t\tDEFAULT_PCSC_PROVIDER=\"/System/Library/Frameworks/PCSC.framework/PCSC\"\n\t\t\t;;\n\t\t\t*-mingw*|*-winnt*|*-cygwin*)\n\t\t\t\tDEFAULT_PCSC_PROVIDER=\"winscard.dll\"\n\t\t\t;;\n\t\t\t*)\n\t\t\t\tDEFAULT_PCSC_PROVIDER=\"libpcsclite.so.1\"\n\t\t\t;;\n\t\tesac\n\telse\n\t\tDEFAULT_PCSC_PROVIDER=\"${with_pcsc_provider}\"\n\tfi\n\tAC_DEFINE_UNQUOTED([DEFAULT_PCSC_PROVIDER], [\"${DEFAULT_PCSC_PROVIDER}\"], [Default PC/SC provider])\n\tAC_DEFINE([ENABLE_PCSC], [1], [Define if PC/SC is to be enabled])\nfi\n\nif test \"${enable_cryptotokenkit}\" = \"yes\"; then\n\tif test -z \"${CRYPTOTOKENKIT_CFLAGS}\"; then\n\t\tcase \"${host}\" in\n\t\t\t*-apple-*)\n\t\t\t\tCRYPTOTOKENKIT_CFLAGS=\"-framework CryptoTokenKit -framework Foundation\"\n\t\t\t\tLDFLAGS=\"${LDFLAGS} -framework CryptoTokenKit -framework Foundation\"\n\t\t\t;;\n\t\t\t*)\n\t\t\t\tAC_MSG_ERROR([CryptoTokenKit only supported on Darwin])\n\t\t\t;;\n\t\tesac\n\tfi\n\tAC_DEFINE([ENABLE_CRYPTOTOKENKIT], [1], [Define if CryptoTokenKit is to be enabled])\nfi\n\nif test \"${completiondir}\" = \"detect\"; then\n\techo completion ${completiondir}\n\tPKG_CHECK_MODULES([BASH_COMPLETION], [bash-completion >= 2.0],\n\t\t[completiondir=\"`pkg-config --variable=completionsdir bash-completion`\"],\n\t\t[completiondir=\"${sysconfdir}/bash_completion.d\"])\nfi\nAC_SUBST([completiondir])\n\n\nAC_SUBST(DYN_LIB_EXT)\nAC_SUBST(LIBDIR)\nAC_SUBST(LIB_PRE)\ncase \"${host}\" in\n\t*-mingw*|*-winnt*|*-cygwin*)\n\t\tDYN_LIB_EXT=\".dll\"\n\t\tLIBDIR=\"\"\n\t\tLIB_PRE=\"\"\n\t\t;;\n\t*)\n\t\tDYN_LIB_EXT=\".so\"\n\t\tLIBDIR=\"\\$(libdir)/\"\n\t\tLIB_PRE=\"lib\"\n\t\t;;\nesac\n\nif test \"${enable_sm}\" = \"yes\"; then\n\tAC_DEFINE([ENABLE_SM], [1], [Enable secure messaging support])\n\n\tDEFAULT_SM_MODULE=\"${LIB_PRE}smm-local${DYN_LIB_EXT}\"\n\tcase \"${host}\" in\n\t\t*-mingw*|*-winnt*|*-cygwin*)\n\t\t\tDEFAULT_SM_MODULE_PATH=\"%PROGRAMFILES%\\\\\\OpenSC Project\\\\\\OpenSC\\\\\\tools\"\n\t\t;;\n\t\t*)\n\t\t\tDEFAULT_SM_MODULE_PATH=\"${libdir}\"\n\t\t;;\n\tesac\nfi\n\nif test \"${with_pkcs11_provider}\" = \"detect\"; then\n\tif test \"${WIN32}\" != \"yes\"; then\n\t\tDEFAULT_PKCS11_PROVIDER=\"${libdir}/opensc-pkcs11${DYN_LIB_EXT}\"\n\t\tDEFAULT_ONEPIN_PKCS11_PROVIDER=\"${libdir}/onepin-opensc-pkcs11${DYN_LIB_EXT}\"\n\telse\n\t\tDEFAULT_PKCS11_PROVIDER=\"%PROGRAMFILES%\\\\\\OpenSC Project\\\\\\OpenSC\\\\\\pkcs11\\\\\\opensc-pkcs11.dll\"\n\t\tDEFAULT_ONEPIN_PKCS11_PROVIDER=\"%PROGRAMFILES%\\\\\\OpenSC Project\\\\\\OpenSC\\\\\\pkcs11\\\\\\onepin-opensc-pkcs11.dll\"\n\tfi\nelse\n\tDEFAULT_PKCS11_PROVIDER=\"${with_pkcs11_provider}\"\n\tDEFAULT_ONEPIN_PKCS11_PROVIDER=\"${with_pkcs11_provider}\"\nfi\n\nif test \"${enable_man}\" = \"detect\"; then\n\tif test \"${WIN32}\" = \"yes\"; then\n\t\tenable_man=\"no\"\n\telif test -n \"${XSLTPROC}\" -a \"${xslstylesheetsdir}\" != \"no\"; then\n\t\tenable_man=\"yes\"\n\telse\n\t\tenable_man=\"no\"\n\tfi\nfi\n\nif test \"${enable_man}\" = \"yes\" -o \"${enable_doc}\" = \"yes\"; then\n\tAC_MSG_CHECKING([XSLTPROC requirement])\n\ttest -n \"${XSLTPROC}\" || AC_MSG_ERROR([Missing XSLTPROC])\n\ttest \"${xslstylesheetsdir}\" != \"no\" || AC_MSG_ERROR([Missing xslstylesheetsdir])\n\tAC_MSG_RESULT([ok])\nfi\n\nAC_ARG_VAR([GENGETOPT],\n           [absolute path to gengetopt used for command line parsing of npa-tool])\nAC_PATH_PROG(GENGETOPT, gengetopt, not found)\nAC_ARG_VAR([CLANGTIDY],\n           [absolute path to clang-tidy used for static code analysis])\nAC_PATH_PROG(CLANGTIDY, clang-tidy, not found)\nTIDY_CHECKS=\"-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling\"\n\nAX_FUNC_GETOPT_LONG\n#AH_BOTTOM([#include \"common/compat_getopt.h\"])\n\nOPENSC_FEATURES=\"\"\nif test \"${enable_thread_locking}\" = \"yes\"; then\n\tOPENSC_FEATURES=\"${OPENSC_FEATURES} locking\"\nfi\nif test \"${enable_zlib}\" = \"yes\"; then\n\tOPENSC_FEATURES=\"${OPENSC_FEATURES} zlib\"\n\tOPTIONAL_ZLIB_CFLAGS=\"${ZLIB_CFLAGS}\"\n\tOPTIONAL_ZLIB_LIBS=\"${ZLIB_LIBS}\"\nfi\nif test \"${enable_readline}\" = \"yes\"; then\n\tOPENSC_FEATURES=\"${OPENSC_FEATURES} readline\"\n\tOPTIONAL_READLINE_CFLAGS=\"${READLINE_CFLAGS}\"\n\tOPTIONAL_READLINE_LIBS=\"${READLINE_LIBS}\"\nfi\nif test \"${enable_openssl}\" = \"yes\"; then\n\tOPENSC_FEATURES=\"${OPENSC_FEATURES} openssl\"\n\tOPTIONAL_OPENSSL_CFLAGS=\"${OPENSSL_CFLAGS}\"\n\tOPTIONAL_OPENSSL_LIBS=\"${OPENSSL_LIBS}\"\nfi\nif test \"${enable_openct}\" = \"yes\"; then\n\tOPENSC_FEATURES=\"${OPENSC_FEATURES} openct\"\n\tOPTIONAL_OPENCT_CFLAGS=\"${OPENCT_CFLAGS}\"\n\tOPTIONAL_OPENCT_LIBS=\"${OPENCT_LIBS}\"\nfi\nif test \"${enable_pcsc}\" = \"yes\"; then\n\tOPENSC_FEATURES=\"${OPENSC_FEATURES} pcsc(${DEFAULT_PCSC_PROVIDER})\"\n\tOPTIONAL_PCSC_CFLAGS=\"${PCSC_CFLAGS}\"\nfi\nif test \"${enable_cryptotokenkit}\" = \"yes\"; then\n\tOPTIONAL_CRYPTOTOKENKIT_CFLAGS=\"${CRYPTOTOKENKIT_CFLAGS}\"\nfi\nif test \"${enable_ctapi}\" = \"yes\"; then\n\tOPENSC_FEATURES=\"${OPENSC_FEATURES} ctapi\"\nfi\n\nif test \"${enable_minidriver}\" = \"yes\"; then\n\tAC_MSG_CHECKING([WiX SDK])\n\tAC_CHECK_HEADERS([wcautil.h],[enable_minidriver_ca=\"yes\"],[enable_minidriver_ca=\"no\"])\n\tif test \"${enable_minidriver_ca}\" = \"yes\"; then\n\t\tAC_MSG_RESULT([found, minidriver setup custom action will be built])\n\telse\n\t\tAC_MSG_RESULT([not found, minidriver setup custom action will be skipped])\n\tfi\nelse\n\tenable_minidriver_ca=\"no\"\nfi\n\nAC_DEFINE_UNQUOTED([OPENSC_VERSION_MAJOR], [${OPENSC_VERSION_MAJOR}], [OpenSC version major component])\nAC_DEFINE_UNQUOTED([OPENSC_VERSION_MINOR], [${OPENSC_VERSION_MINOR}], [OpenSC version minor component])\nAC_DEFINE_UNQUOTED([OPENSC_VERSION_FIX], [${OPENSC_VERSION_FIX}], [OpenSC version fix component])\nAC_DEFINE_UNQUOTED([OPENSC_VERSION_REVISION], [${OPENSC_VERSION_REVISION}], [OpenSC file version revision])\nAC_DEFINE_UNQUOTED([OPENSC_SCM_REVISION], [\"${OPENSC_SCM_REVISION}\"], [OpenSC version Git describe revision])\nAC_DEFINE_UNQUOTED([OPENSC_FEATURES], [\"${OPENSC_FEATURES}\"], [Enabled OpenSC features])\n\nAC_DEFINE_UNQUOTED([OPENSC_VS_FF_LEGAL_COPYRIGHT], [\"${OPENSC_VS_FF_LEGAL_COPYRIGHT}\"], [OpenSC version-info LegalCopyright value])\nAC_DEFINE_UNQUOTED([OPENSC_VS_FF_COMPANY_NAME], [\"${OPENSC_VS_FF_COMPANY_NAME}\"], [OpenSC version-info CompanyName value])\nAC_DEFINE_UNQUOTED([OPENSC_VS_FF_COMMENTS], [\"${OPENSC_VS_FF_COMMENTS}\"], [OpenSC version-info Comments])\nAC_DEFINE_UNQUOTED([OPENSC_VS_FF_PRODUCT_NAME], [\"${OPENSC_VS_FF_PRODUCT_NAME}\"], [OpenSC version-info ProductName])\nAC_DEFINE_UNQUOTED([OPENSC_VS_FF_PRODUCT_UPDATES], [\"${OPENSC_VS_FF_PRODUCT_UPDATES}\"], [OpenSC version-info UpdateURL])\nAC_DEFINE_UNQUOTED([OPENSC_VS_FF_PRODUCT_URL], [\"${OPENSC_VS_FF_PRODUCT_URL}\"], [OpenSC version-info ProductURL])\nAC_DEFINE_UNQUOTED([OPENSC_VS_FF_COMPANY_URL], [\"${OPENSC_VS_FF_COMPANY_URL}\"], [OpenSC version-info UpdateURL])\n\npkcs11dir=\"\\$(libdir)/pkcs11\"\n\nAC_SUBST([pkcs11dir])\nAC_SUBST([xslstylesheetsdir])\nAC_SUBST([OPENSC_VERSION_MAJOR])\nAC_SUBST([OPENSC_VERSION_MINOR])\nAC_SUBST([OPENSC_VERSION_FIX])\nAC_SUBST([OPENSC_VERSION_REVISION])\nAC_SUBST([OPENSC_SCM_REVISION])\nAC_SUBST([OPENSC_VS_FF_LEGAL_COPYRIGHT])\nAC_SUBST([OPENSC_VS_FF_COMPANY_NAME])\nAC_SUBST([OPENSC_VS_FF_COMMENTS])\nAC_SUBST([OPENSC_VS_FF_PRODUCT_NAME])\nAC_SUBST([OPENSC_VS_FF_PRODUCT_UPDATES])\nAC_SUBST([OPENSC_VS_FF_PRODUCT_URL])\nAC_SUBST([OPENSC_VS_FF_COMPANY_URL])\nAC_SUBST([OPENSC_LT_CURRENT])\nAC_SUBST([OPENSC_LT_REVISION])\nAC_SUBST([OPENSC_LT_AGE])\nAC_SUBST([OPENSC_LT_OLDEST])\nAC_SUBST([WIN_LIBPREFIX])\nAC_SUBST([DEFAULT_PCSC_PROVIDER])\nAC_SUBST([DEFAULT_PKCS11_PROVIDER])\nAC_SUBST([DEFAULT_ONEPIN_PKCS11_PROVIDER])\nAC_SUBST([PKCS11_REGISTER_SKIP_FIREFOX])\nAC_SUBST([OPTIONAL_ZLIB_CFLAGS])\nAC_SUBST([OPTIONAL_ZLIB_LIBS])\nAC_SUBST([OPTIONAL_READLINE_CFLAGS])\nAC_SUBST([OPTIONAL_READLINE_LIBS])\nAC_SUBST([OPTIONAL_OPENSSL_CFLAGS])\nAC_SUBST([OPTIONAL_OPENSSL_LIBS])\nAC_SUBST([OPTIONAL_OPENCT_CFLAGS])\nAC_SUBST([OPTIONAL_OPENCT_LIBS])\nAC_SUBST([OPTIONAL_PCSC_CFLAGS])\nAC_SUBST([LIBRARY_BITNESS])\nAC_SUBST([DEFAULT_SM_MODULE])\nAC_SUBST([DEFAULT_SM_MODULE_PATH])\nAC_SUBST([DEBUG_FILE])\nAC_SUBST([PROFILE_DIR])\nAC_SUBST([PROFILE_DIR_DEFAULT])\nAC_SUBST([OPTIONAL_NOTIFY_CFLAGS])\nAC_SUBST([OPTIONAL_NOTIFY_LIBS])\nAC_SUBST([TIDY_CHECKS])\n\nAM_CONDITIONAL([ENABLE_MAN], [test \"${enable_man}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_THREAD_LOCKING], [test \"${enable_thread_locking}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_ZLIB], [test \"${enable_zlib}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_READLINE], [test \"${enable_readline}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_OPENSSL], [test \"${enable_openssl}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_OPENPACE], [test \"${enable_openpace}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_NOTIFY], [test \"${enable_notify}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_CRYPTOTOKENKIT], [test \"${enable_cryptotokenkit}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_OPENCT], [test \"${enable_openct}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_DOC], [test \"${enable_doc}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_TESTS], [test \"${enable_tests}\" = \"yes\"])\nAM_CONDITIONAL([WIN32], [test \"${WIN32}\" = \"yes\"])\nAM_CONDITIONAL([CYGWIN], [test \"${CYGWIN}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_MINIDRIVER], [test \"${enable_minidriver}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_MINIDRIVER_SETUP_CUSTOMACTION], [test \"${enable_minidriver_ca}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_SM], [test \"${enable_sm}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_DNIE_UI], [test \"${enable_dnie_ui}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_NPATOOL], [test \"${ENABLE_NPATOOL}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_AUTOSTART], [test \"${enable_autostart}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_CMOCKA], [test \"${enable_cmocka}\" = \"yes\"])\nAM_CONDITIONAL([GIT_CHECKOUT], [test \"${GIT_CHECKOUT}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_FUZZING], [test \"${enable_fuzzing}\" = \"yes\"])\nAM_CONDITIONAL([ENABLE_SHARED], [test \"${enable_shared}\" = \"yes\"])\nAS_IF([test \"${enable_shared}\" = \"yes\"], [AC_DEFINE([ENABLE_SHARED], [1], [Enable shared libraries])])\nAM_CONDITIONAL([ENABLE_STATIC], [test \"${enable_static}\" = \"yes\"])\nAS_IF([test \"${enable_static}\" = \"yes\"], [AC_DEFINE([ENABLE_static], [1], [Enable static libraries])])\n\nif test \"${enable_pedantic}\" = \"yes\"; then\n\tenable_strict=\"yes\";\n\tCFLAGS=\"-pedantic ${CFLAGS}\"\nfi\nif test \"${enable_strict}\" = \"yes\"; then\n\tCFLAGS=\"-Wall -Wextra -Wno-unused-parameter -Werror -Wstrict-aliasing=2 ${CFLAGS}\"\nfi\n\nAC_CONFIG_FILES([\n\tMakefile\n\tdoc/Makefile\n\tdoc/tools/Makefile\n\tdoc/files/Makefile\n\tetc/Makefile\n\ttests/Makefile\n\tsrc/Makefile\n\tsrc/common/Makefile\n\tsrc/ui/Makefile\n\tsrc/libopensc/Makefile\n\tsrc/sm/Makefile\n\tsrc/pkcs11/Makefile\n\tsrc/pkcs11/versioninfo-pkcs11.rc\n\tsrc/pkcs11/versioninfo-pkcs11-spy.rc\n\tsrc/pkcs11/opensc-pkcs11.pc\n\tsrc/pkcs15init/Makefile\n\tsrc/scconf/Makefile\n\tsrc/tests/Makefile\n\tsrc/tests/regression/Makefile\n\tsrc/tests/p11test/Makefile\n\tsrc/tests/fuzzing/Makefile\n\tsrc/tests/unittests/Makefile\n\tsrc/tools/Makefile\n\tsrc/tools/versioninfo-tools.rc\n\tsrc/tools/versioninfo-opensc-notify.rc\n\tsrc/smm/Makefile\n\tsrc/minidriver/Makefile\n\tsrc/minidriver/versioninfo-minidriver.rc\n\tsrc/minidriver/opensc-minidriver.inf\n\twin32/Makefile\n\twin32/versioninfo.rc\n\twin32/versioninfo-customactions.rc\n\twin32/winconfig.h\n\twin32/OpenSC.iss\n\twin32/OpenSC.wxs\n\tMacOSX/Makefile\n\tMacOSX/build-package\n\tMacOSX/Distribution.xml\n\tMacOSX/Distribution_universal.xml\n\tMacOSX/resources/Welcome.html\n])\n\nAC_OUTPUT\n\ncat <<EOF\n\nOpenSC has been configured with the following options:\n\n\nVersion:                 ${PACKAGE_VERSION}\nVersion fix:             ${OPENSC_VERSION_FIX}\nVersion revision:        ${OPENSC_VERSION_REVISION}\nGit revision:            ${OPENSC_SCM_REVISION}\n\nCopyright:               ${OPENSC_VS_FF_LEGAL_COPYRIGHT}\nCompany:                 ${OPENSC_VS_FF_COMPANY_NAME}\nCompany URL:             ${OPENSC_VS_FF_COMPANY_URL}\nComments:                ${OPENSC_VS_FF_COMMENTS}\nProduct name:            ${OPENSC_VS_FF_PRODUCT_NAME}\nProduct updates:         ${OPENSC_VS_FF_PRODUCT_UPDATES}\nProduct URL:             ${OPENSC_VS_FF_PRODUCT_URL}\n\nUser binaries:           $(eval eval eval echo \"${bindir}\")\nConfiguration files:     $(eval eval eval echo \"${sysconfdir}\")\nBash completion:         ${completiondir}\nXSL stylesheets:         ${xslstylesheetsdir}\n\nman support:             ${enable_man}\ndoc support:             ${enable_doc}\ntests:                   ${enable_tests}\nthread locking support:  ${enable_thread_locking}\nzlib support:            ${enable_zlib}\nreadline support:        ${enable_readline}\nOpenSSL support:         ${enable_openssl}\nOpenSSL secure memory:   ${enable_openssl_secure_malloc}\nPC/SC support:           ${enable_pcsc}\nCryptoTokenKit support:  ${enable_cryptotokenkit}\nOpenCT support:          ${enable_openct}\nCT-API support:          ${enable_ctapi}\nminidriver support:      ${enable_minidriver}\nSM support:              ${enable_sm}\nSM default module:       ${DEFAULT_SM_MODULE}\nSM default path:         $(eval eval eval echo \"${DEFAULT_SM_MODULE_PATH}\")\nPIV SM support:          ${enable_piv_sm}\nDNIe UI support:         ${enable_dnie_ui}\nNotification support:    ${enable_notify}\nCode coverage:           ${enable_code_coverage}\n\nPC/SC default provider:  ${DEFAULT_PCSC_PROVIDER}\nPKCS11 default provider: $(eval eval eval echo \"${DEFAULT_PKCS11_PROVIDER}\")\nPKCS11 onepin provider:  $(eval eval eval echo \"${DEFAULT_ONEPIN_PKCS11_PROVIDER}\")\n\nHost:                    ${host}\nCompiler:                ${CC}\nPreprocessor flags:      ${CPPFLAGS}\nCompiler flags:          ${CFLAGS}\nLinker flags:            ${LDFLAGS}\nLibraries:               ${LIBS}\n\nLDL_LIBS:                ${LDL_LIBS}\nREADLINE_CFLAGS:         ${READLINE_CFLAGS}\nREADLINE_LIBS:           ${READLINE_LIBS}\nZLIB_CFLAGS:             ${ZLIB_CFLAGS}\nZLIB_LIBS:               ${ZLIB_LIBS}\nOPENSSL_CFLAGS:          ${OPENSSL_CFLAGS}\nOPENSSL_LIBS:            ${OPENSSL_LIBS}\nOPENPACE_CFLAGS:         ${OPENPACE_CFLAGS}\nOPENPACE_LIBS:           ${OPENPACE_LIBS}\nOPENCT_CFLAGS:           ${OPENCT_CFLAGS}\nOPENCT_LIBS:             ${OPENCT_LIBS}\nPCSC_CFLAGS:             ${PCSC_CFLAGS}\nCRYPTOTOKENKIT_CFLAGS:   ${CRYPTOTOKENKIT_CFLAGS}\nGIO2_CFLAGS:             ${GIO2_CFLAGS}\nGIO2_LIBS:               ${GIO2_LIBS}\nFUZZING_LIBS:            ${FUZZING_LIBS}\n\nEOF\n\n"
        },
        {
          "name": "containers",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "win32",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}