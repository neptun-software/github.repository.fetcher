{
  "metadata": {
    "timestamp": 1736710078847,
    "page": 699,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "flutter/codelabs",
      "stars": 1916,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.0849609375,
          "content": "# Auto detect text files and perform LF normalization\n*        text=auto\n\n# Always perform LF normalization on these files\n*.c      text\n*.cc     text\n*.cmake  text\n*.dart   text\n*.gradle text\n*.h      text\n*.html   text\n*.java   text\n*.json   text\n*.md     text\n*.py     text\n*.sh     text\n*.swift  text\n*.txt    text\n*.xml    text\n*.yaml   text\n\n# Make sure that these Windows files always have CRLF line endings in checkout\n*.bat             text eol=crlf\n*.ps1             text eol=crlf\n*.rc              text eol=crlf\n*.sln             text eol=crlf\n*.props           text eol=crlf\n*.vcxproj         text eol=crlf\n*.vcxproj.filters text eol=crlf\n# Including templatized versions.\n*.sln.tmpl        text eol=crlf\n*.props.tmpl      text eol=crlf\n*.vcxproj.tmpl    text eol=crlf\n\n# Never perform LF normalization on these files\n*.ico    binary\n*.jar    binary\n*.png    binary\n*.zip    binary\n\n# Hide generated files in GitHub PRs\n*.config.dart linguist-generated=true\n*.freezed.dart linguist-generated=true\n*.g.dart linguist-generated=true\n*.gen.dart linguist-generated=true\n*.gr.dart linguist-generated=true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1708984375,
          "content": ".DS_Store\n.packages\n\n# */**/android\n# */**/ios\n# */**/.gitignore\n*/**/.metadata\n\n.dart_tool/\n\n# IDEs\n.idea/\n\n# Lockfiles\npackage-lock.json\nPodfile.lock\npubspec.lock\nyarn.lock\n"
        },
        {
          "name": ".idx",
          "type": "tree",
          "content": null
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.2451171875,
          "content": "# Below is a list of people and organizations that have contributed\n# to the Flutter project. Names should be added to the list like so:\n#\n#   Name/Organization <email address>\n\nGoogle Inc.\nThe Chromium Authors\nThe Flutter Authors\nThe Fuchsia Authors\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.1865234375,
          "content": "# Contributing\n\n_See also: [Flutter's code of conduct](https://github.com/flutter/flutter/blob/master/CODE_OF_CONDUCT.md)_\n\nWant to contribute to the Flutter codelabs ecosystem? Great! First, read this\npage (including the small print at the end).\n\n## Is this the right place for your contribution?\n\nThis repo is used by members of the Flutter Developer Relations team \nas a place to store code for our codelabs, on both\n[docs.flutter.dev](https://docs.flutter.dev/codelabs) and\n[codelabs.developer.google.com](https://codelabs.developers.google.com/).\n\n## So what should be contributed here, then?\n\nFixes and necessary improvements to the existing codelabs, mostly.\n\n## Before you contribute\n\nBefore we can use your code, you must sign the\n[Google Individual Contributor License\nAgreement](https://cla.developers.google.com/about/google-individual)\n(CLA), which you can do online. The CLA is necessary mainly because you own the\ncopyright to your changes, even after your contribution becomes part of our\ncodebase, so we need your permission to use and distribute your code. We also\nneed to be sure of various other thingsâ€”for instance that you'll tell us if you\nknow that your code infringes on other people's patents. You don't have to sign\nthe CLA until after you've submitted your code for review and a member has\napproved it, but you must do it before we can put your code into our codebase.\n\nBefore you start working on a larger contribution, you should get in touch with\nus first through the issue tracker with your idea so that we can help out and\npossibly guide you. Coordinating up front makes it much easier to avoid\nfrustration later on.\n\n## Code reviews\n\nAll submissions, including submissions by project members, require review.\n\n## File headers\n\nAll files in the project must start with the following header.\n\n    // Copyright 2024 The Flutter Authors. All rights reserved.\n    // Use of this source code is governed by a BSD-style license that can be\n    // found in the LICENSE file.\n\n## The small print\n\nContributions made by corporations are covered by a different agreement than the\none above, the [Software Grant and Corporate Contributor License\nAgreement](https://developers.google.com/open-source/cla/corporate).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5224609375,
          "content": "// Copyright 2020 The Flutter Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.`\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.77734375,
          "content": "# Flutter codelabs\n\n[![Build Status](https://github.com/flutter/codelabs/workflows/Flutter%20CI/badge.svg)](https://github.com/flutter/codelabs/actions?workflow=Flutter%20CI)\n\nThis repository contains the code for a variety of [Flutter Codelabs](https://codelabs.developers.google.com/?product=flutter). \nHere is a list of the codelabs represented here:\n\n  - [Adaptive Apps in Flutter](https://codelabs.developers.google.com/codelabs/flutter-adaptive-app) is in [`adaptive_app`](adaptive_app)\n  - [Add a user authentication flow to a Flutter app using FirebaseUI](https://firebase.google.com/codelabs/firebase-auth-in-flutter-apps) is in [`firebase-auth-flutterfire-ui`](firebase-auth-flutterfire-ui)\n  - [Add sound and music to your Flutter game](https://codelabs.developers.google.com/codelabs/flutter-codelab-soloud) is in [`audio_soloud`](audio_soloud)\n  - [Adding a Home Screen widget to your Flutter App](https://codelabs.developers.google.com/flutter-home-screen-widgets) is in [`homescreen_codelab`](homescreen_codelab)\n  - [Adding Google Maps to a Flutter app](https://codelabs.developers.google.com/codelabs/google-maps-in-flutter) is in [`google-maps-in-flutter`](google-maps-in-flutter)\n  - [Adding in-app purchases to your Flutter app](https://codelabs.developers.google.com/codelabs/flutter-in-app-purchases) is in [`in_app_purchases`](in_app_purchases)\n  - [Adding WebView to your Flutter app](https://codelabs.developers.google.com/codelabs/flutter-webview) is in [`webview_flutter`](webview_flutter)\n  - [Animations in Flutter](https://codelabs.developers.google.com/advanced-flutter-animations) is in [`animations`](animations)\n  - [Build a 2D physics game with Flutter and Flame](https://codelabs.developers.google.com/codelabs/flutter-flame-forge2d) is in [`forge2d_game`](forge2d_game)\n  - [Build a word puzzle with Flutter](https://codelabs.developers.google.com/codelabs/flutter-word-puzzle) is in [`generate_crossword`](generate_crossword)\n  - [Building a board game with TensorFlow Agents and Flutter](https://codelabs.developers.google.com/tfagents-flutter) is in [`tfagents-flutter`](tfagents-flutter)\n  - [Building a full-stack movie recommendation system](https://codelabs.developers.google.com/tfrecommenders-flutter) is in [`tfrs-flutter`](tfrs-flutter)\n  - [Building an animated responsive app layout with Material 3](https://codelabs.developers.google.com/codelabs/flutter-animated-responsive-layout) is in [`animated-responsive-layout`](animated-responsive-layout)\n  - [Building next generation UIs in Flutter](https://codelabs.developers.google.com/codelabs/flutter-next-gen-uis?hl=en#0) is in [`next-gen-ui`](next-gen-ui)\n  - [Create haikus about Google products with the PaLM API and Flutter](https://codelabs.developers.google.com/haiku-generator) is in [`haiku_generator`](haiku_generator)\n  - [Dive into Dart's patterns and records](https://codelabs.developers.google.com/codelabs/dart-patterns-records) is in [`dart-patterns-and-records`](dart-patterns-and-records)\n  - [Get started with text classification in Flutter apps](https://developers.google.com/learn/pathways/text-classification-flutter) pathway is in [`tfserving-flutter`](tfserving-flutter)\n  - [Get to know Firebase for Flutter](https://firebase.google.com/codelabs/firebase-get-to-know-flutter) is in [`firebase-get-to-know-flutter`](firebase-get-to-know-flutter)\n  - [How to test a Flutter app](https://codelabs.developers.google.com/codelabs/flutter-app-testing) is in [`testing_codelab`](testing_codelab)\n  - [Introduction to Flame with Flutter](https://codelabs.developers.google.com/codelabs/flutter-flame-brick-breaker) is in [`brick_breaker`](brick_breaker)\n  - [Local development for your Flutter apps using the Firebase Emulator Suite](https://firebase.google.com/codelabs/get-started-firebase-emulators-and-flutter) in [`firebase-emulator-suite`](firebase-emulator-suite)\n  - [Take your Flutter app from boring to beautiful](https://codelabs.developers.google.com/codelabs/flutter-boring-to-beautiful) in [`boring_to_beautiful`](boring_to_beautiful)\n  - [Using FFI in a Flutter plugin](https://codelabs.developers.google.com/codelabs/flutter-ffigen) is in [`ffigen_codelab`](ffigen_codelab)\n  - [Write a Flutter desktop application](https://codelabs.developers.google.com/codelabs/flutter-github-client) is in [`github-client`](github-client)\n  - [Your first Flutter app](https://codelabs.developers.google.com/codelabs/flutter-codelab-first) is in [`namer`](namer)\n\nTo learn more about setting up Flutter and running apps, visit\n[docs.flutter.dev/get-started][].\n\n[docs.flutter.dev/get-started]: https://docs.flutter.dev/get-started\n\n## Maintenance & Deprecation of Codelabs\n\nCodelabs should be kept up to date with the current Flutter stable release.\nCodelabs that are more than two stable releases behind will be\ncandidates for deprecation and removal from the repository.\n"
        },
        {
          "name": "adaptive_app",
          "type": "tree",
          "content": null
        },
        {
          "name": "analysis_options.yaml",
          "type": "blob",
          "size": 0.4892578125,
          "content": "include: package:flutter_lints/flutter.yaml\n\nlinter:\n  rules:\n    avoid_types_on_closure_parameters: true\n    avoid_void_async: true\n    cancel_subscriptions: true\n    close_sinks: true\n    directives_ordering: true\n    package_prefixed_library_names: true\n    prefer_relative_imports: true\n    prefer_single_quotes: true\n    test_types_in_equals: true\n    throw_in_finally: true\n    unawaited_futures: true\n    unnecessary_breaks: true\n    unnecessary_statements: true\n    use_super_parameters: true\n"
        },
        {
          "name": "animated-responsive-layout",
          "type": "tree",
          "content": null
        },
        {
          "name": "animations",
          "type": "tree",
          "content": null
        },
        {
          "name": "audio_soloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "boring_to_beautiful",
          "type": "tree",
          "content": null
        },
        {
          "name": "brick_breaker",
          "type": "tree",
          "content": null
        },
        {
          "name": "dart-patterns-and-records",
          "type": "tree",
          "content": null
        },
        {
          "name": "dartpad_codelabs",
          "type": "tree",
          "content": null
        },
        {
          "name": "deeplink_cookbook",
          "type": "tree",
          "content": null
        },
        {
          "name": "ffigen_codelab",
          "type": "tree",
          "content": null
        },
        {
          "name": "firebase-auth-flutterfire-ui",
          "type": "tree",
          "content": null
        },
        {
          "name": "firebase-emulator-suite",
          "type": "tree",
          "content": null
        },
        {
          "name": "firebase-get-to-know-flutter",
          "type": "tree",
          "content": null
        },
        {
          "name": "flutter_ci_script_beta.sh",
          "type": "blob",
          "size": 0.8349609375,
          "content": "#!/usr/bin/env bash\n\nset -e -o pipefail\n\nDIR=\"${BASH_SOURCE%/*}\"\nsource \"$DIR/flutter_ci_script_shared.sh\"\n\ndeclare -a CODELABS=(\n  \"adaptive_app\"\n  \"animated-responsive-layout\"\n  \"animations\"\n  \"audio_soloud\"\n  \"boring_to_beautiful\"\n  \"brick_breaker\"\n  \"dart-patterns-and-records\"\n  \"deeplink_cookbook\"\n  \"ffigen_codelab\"\n  \"firebase-auth-flutterfire-ui\"\n  \"firebase-emulator-suite\"\n  \"firebase-get-to-know-flutter\"\n  \"forge2d_game\"\n  \"generate_crossword\"\n  \"github-client\"\n  \"google-maps-in-flutter\"\n  \"haiku_generator\"\n  \"homescreen_codelab\"\n  \"in_app_purchases\"\n  # TODO(domesticmouse): Add after beta is above Dart 3.7.0-0\n  # \"intro_flutter_gpu\"\n  \"namer\"\n  \"next-gen-ui\"\n  \"testing_codelab\"\n  \"tfagents-flutter\"\n  \"tfrs-flutter\"\n  \"tfserving-flutter\"\n  \"tooling\"\n  \"webview_flutter\"\n  )\n\nci_codelabs \"beta\" \"${CODELABS[@]}\"\n\necho \"== END OF TESTS\"\n"
        },
        {
          "name": "flutter_ci_script_master.sh",
          "type": "blob",
          "size": 0.8583984375,
          "content": "#!/usr/bin/env bash\n\nset -e -o pipefail\n\nDIR=\"${BASH_SOURCE%/*}\"\nsource \"$DIR/flutter_ci_script_shared.sh\"\n\ndeclare -a CODELABS=(\n  \"adaptive_app\"\n  \"animated-responsive-layout\"\n  \"animations\"\n  \"audio_soloud\"\n  \"boring_to_beautiful\"\n  \"brick_breaker\"\n  \"dart-patterns-and-records\"\n  \"deeplink_cookbook\"\n  \"ffigen_codelab\"\n  \"firebase-auth-flutterfire-ui\"\n  \"firebase-emulator-suite\"\n  \"firebase-get-to-know-flutter\"\n  \"forge2d_game\"\n  \"generate_crossword\"\n  \"github-client\"\n  \"google-maps-in-flutter\"\n  \"haiku_generator\"\n  \"homescreen_codelab\"\n  \"in_app_purchases\"\n  # TODO(domesticmouse): Building assets for package:flutter_scene_importer failed.\n  # \"intro_flutter_gpu\"\n  \"namer\"\n  \"next-gen-ui\"\n  \"testing_codelab\"\n  \"tfagents-flutter\"\n  \"tfrs-flutter\"\n  \"tfserving-flutter\"\n  \"tooling\"\n  \"webview_flutter\"\n  )\n\nci_codelabs \"master\" \"${CODELABS[@]}\"\n\necho \"== END OF TESTS\"\n"
        },
        {
          "name": "flutter_ci_script_shared.sh",
          "type": "blob",
          "size": 2.525390625,
          "content": "function ci_codelabs () {\n    local channel=\"$1\"\n    shift\n\n    # Disable analytics to avoid https://github.com/dart-lang/tools/issues/249\n    dart --disable-analytics\n\n    # ffigen_codelab/step_07 needs to build the native library before running the tests\n    pushd ffigen_codelab/step_07/example\n        # RUNNER_OS from https://stackoverflow.com/a/72926104/2142626\n        if [ $RUNNER_OS = 'Linux' ]; then\n            sudo sed -i 's/azure\\.//' /etc/apt/sources.list\n            sudo apt-get update\n            sudo apt-get install -y ninja-build libgtk-3-dev\n        fi\n        flutter build `echo $RUNNER_OS | tr '[:upper:]' '[:lower:]'` --debug\n    popd\n\n    local arr=(\"$@\")\n    for CODELAB in \"${arr[@]}\"\n    do\n        echo \"== Testing '${CODELAB}' on $channel\"\n        declare -a PROJECT_PATHS=($(\n        find $CODELAB -not -path './flutter/*' -not -path '*/.symlinks/*' -name pubspec.yaml -exec dirname {} \\; | sort\n        ))\n        for PROJECT in \"${PROJECT_PATHS[@]}\"\n        do\n            pushd \"${PROJECT}\"\n\n            echo \"== Getting dependencies for ${PROJECT}\"\n            for dir in `find . -name pubspec.yaml  -not -path '*/*symlinks/*' -exec dirname {} \\;`; do\n                pushd $dir\n                flutter pub get\n                popd\n            done\n\n\n            echo \"== Testing\"\n\n            # Run the analyzer to find any static analysis issues.\n            dart analyze --fatal-infos --fatal-warnings\n\n            # Run the formatter on all the dart files to make sure everything's linted.\n            dart format --output none --set-exit-if-changed .\n\n            # Run the actual tests.\n            if [ -d \"test\" ]\n            then\n                if grep -q \"flutter:\" \"pubspec.yaml\"; then\n\n                    # intro_flutter_gpu only runs with Impeller\n                    if [ $CODELAB = 'intro_flutter_gpu' ]; then\n                        if [ $RUNNER_OS = 'macOS' ] || [ $RUNNER_OS = 'Windows' ]; then\n                            flutter config --enable-native-assets\n                            flutter build `echo $RUNNER_OS | tr '[:upper:]' '[:lower:]'` --debug\n                            flutter test --enable-impeller\n                        else\n                            echo \"Skipping $CODELAB on $RUNNER_OS\"\n                        fi\n                    else\n                        flutter test\n                    fi\n                else\n                  # If the project is not a Flutter project, use the Dart CLI.\n                  dart test\n                fi\n            fi\n\n            popd\n        done\n    done\n\n}\n"
        },
        {
          "name": "flutter_ci_script_stable.sh",
          "type": "blob",
          "size": 0.8388671875,
          "content": "#!/usr/bin/env bash\n\nset -e -o pipefail\n\nDIR=\"${BASH_SOURCE%/*}\"\nsource \"$DIR/flutter_ci_script_shared.sh\"\n\ndeclare -a CODELABS=(\n  \"adaptive_app\"\n  \"animated-responsive-layout\"\n  \"animations\"\n  \"audio_soloud\"\n  \"boring_to_beautiful\"\n  \"brick_breaker\"\n  \"dart-patterns-and-records\"\n  \"deeplink_cookbook\"\n  \"ffigen_codelab\"\n  \"firebase-auth-flutterfire-ui\"\n  \"firebase-emulator-suite\"\n  \"firebase-get-to-know-flutter\"\n  \"forge2d_game\"\n  \"generate_crossword\"\n  \"github-client\"\n  \"google-maps-in-flutter\"\n  \"haiku_generator\"\n  \"homescreen_codelab\"\n  \"in_app_purchases\"\n  # TODO(domesticmouse): Add after stable is above Dart 3.7.0-0\n  # \"intro_flutter_gpu\"\n  \"namer\"\n  \"next-gen-ui\"\n  \"testing_codelab\"\n  \"tfagents-flutter\"\n  \"tfrs-flutter\"\n  \"tfserving-flutter\"\n  \"tooling\"\n  \"webview_flutter\"\n  )\n\nci_codelabs \"stable\" \"${CODELABS[@]}\"\n\necho \"== END OF TESTS\"\n"
        },
        {
          "name": "forge2d_game",
          "type": "tree",
          "content": null
        },
        {
          "name": "generate_crossword",
          "type": "tree",
          "content": null
        },
        {
          "name": "github-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "google-maps-in-flutter",
          "type": "tree",
          "content": null
        },
        {
          "name": "haiku_generator",
          "type": "tree",
          "content": null
        },
        {
          "name": "homescreen_codelab",
          "type": "tree",
          "content": null
        },
        {
          "name": "in_app_purchases",
          "type": "tree",
          "content": null
        },
        {
          "name": "intro_flutter_gpu",
          "type": "tree",
          "content": null
        },
        {
          "name": "namer",
          "type": "tree",
          "content": null
        },
        {
          "name": "next-gen-ui",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing_codelab",
          "type": "tree",
          "content": null
        },
        {
          "name": "tfagents-flutter",
          "type": "tree",
          "content": null
        },
        {
          "name": "tfrs-flutter",
          "type": "tree",
          "content": null
        },
        {
          "name": "tfserving-flutter",
          "type": "tree",
          "content": null
        },
        {
          "name": "tooling",
          "type": "tree",
          "content": null
        },
        {
          "name": "webview_flutter",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}