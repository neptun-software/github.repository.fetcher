{
  "metadata": {
    "timestamp": 1736709801862,
    "page": 255,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zlgopen/awtk",
      "stars": 3136,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.171875,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  Google\nAccessModifierOffset: -1\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Left\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: false\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:   \n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  AfterExternBlock: false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nBreakBeforeInheritanceComma: false\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     100\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false \nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:   \n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeCategories: \n  - Regex:           '^<ext/.*\\.h>'\n    Priority:        2\n  - Regex:           '^<.*\\.h>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\nIncludeIsMainRegex: '([-_](test|unittest))?$'\nIndentCaseLabels: true\nIndentPPDirectives: None\nIndentWidth:     2\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 600\nPenaltyBreakFirstLessLess: 100\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nRawStringFormats: \n  - Language:        TextProto\n    BasedOnStyle:    google\nReflowComments: false\nSortIncludes:   false \nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Auto\nTabWidth:        2\nUseTab:          Never\n...\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.482421875,
          "content": "*.o\r\n*.a\r\n*.so\r\n*.swp\r\n*.pdb \r\n*.ilk \r\n*.idb\r\n*.obj\r\n*.lib\r\n*.exp\r\n*.exe\r\n*.os\r\n.sconsign.dblite\r\nlua/demo1\r\nlua/lftk_run\r\nlib/*\r\nbin/*\r\ntags\r\n.vscode\r\n.vs\r\n.lo\r\nawtk_config.pyc\r\nscripts/update_res_common.pyc\r\ninfer-out\r\nargs.txt\r\nlog\r\n*.pyc\r\n__pycache__\r\ntest.bin\r\nrelease\r\nevent_log.bin\r\nres/assets/default/inc/fonts/default_full.res\r\n*.log\r\ndllexports/awtk.def\r\ndllexports/tkc.def\r\ntools/idl_gen/idl.json\r\ntools/idl_gen/tkc.json\r\nt.*\r\ntest.png\r\nREADME.md.download \r\nmanifest.txt \r\ntest.xml\r\n"
        },
        {
          "name": "3rd",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.2939453125,
          "content": "* 独立控件请建立独立仓库，我在README中加链接。\n\n* 不同平台的移植请建立独立仓库，我在README中加链接。\n\n* 不同语言的绑定请建立独立仓库，我在README中加链接。\n\n* 有问题请提交issue，由AWTK团队来改，一般不接收pull requests。\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 25.904296875,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301\n    USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random\n  Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.58984375,
          "content": "# AWTK = Toolkit AnyWhere\r\n\r\n> [中文用户请看这里](README_zh.md)\r\n\r\n## I. Introduction\r\n\r\n[AWTK](README.md) , the abbreviation of Toolkit AnyWhere, is an open source GUI engine developed by [ZLG](http://www.zlg.cn/). It is a cross-platform GUI engine for embedded systems, WEB, mini programs, mobile phones and PC. It is a powerful, efficient, reliable and easy-to-use GUI engine for users to design beautiful GUI applications.\r\n\r\n> Welcome developers to join us in our development:[Joint Ecology Building Plan](docs/awtk_ecology.md)\r\n\r\n#### [AWTK](README.md) has two implications as follows: \r\n\r\n* Toolkit AnyWhere.\r\n* As the built-in GUI of AWorksOS, which is the ZLG IoT operating system.\r\n\r\n#### [AWTK](README.md) source code repositories:\r\n\r\n* Main source code repository: [https://github.com/zlgopen/awtk](https://github.com/zlgopen/awtk)\r\n* Mirrored source code repository：[https://gitee.com/zlgopen/awtk](https://gitee.com/zlgopen/awtk)\r\n* Stable version pack: https://pan.baidu.com/s/1_oRgj67M-I4kivk-YzwFWA    Access code:1cmi\r\n\r\n#### AWTK Designer - the UI design tool:\r\n\r\n* It is no longer necessary to write XML by yourself.\r\n* Design the UI by dragging and dropping. What you see is what you get.\r\n* Support quick preview and pack resources with one-click.\r\n* Registration and download: https://awtk.zlg.cn\r\n\r\n![AWTK Designer](docs/images/designer.png)\r\n\r\n#### Screenshots:\r\n\r\n![Chart-Demo](docs/images/chart_main.png)\r\n\r\n![MusicPlayer-Demo](docs/images/musicplayer_main.png)\r\n\r\n![Watch](docs/images/smartwatch_main.png)\r\n\r\n## II. Ultimate Objectives\r\n\r\n* To support development of embedded applications.✔\r\n* To support development of Linux applications.✔\r\n* To support development of MacOS applications.✔\r\n* To support development of Windows applications.✔\r\n* To support development of [Web](https://github.com/zlgopen/awtk-web.git) applications.✔\r\n* To support development of [Android](https://github.com/zlgopen/awtk-android.git) applications.✔\r\n* To support development of [iOS](https://github.com/zlgopen/awtk-ios.git) applications.✔\r\n* To support development of [HarmonyOs](https://github.com/zlgopen/awtk-harmonyos-next.git) applications.✔\r\n* To support development of 2D mini games.\r\n\r\n## III. Main Features\r\n\r\n### 1. Cross-platform\r\n\r\n[AWTK](README.md) is a cross-platform GUI engine , which has two meanings as follows:\r\n\r\n* AWTK's code is cross-platform. At present, it is compatible with platforms such as ZLG AWorksOS, Windows, Linux, MacOS, embedded Linux, Android, iOS, HarmonyOS, Web and embedded raw systems. It can be easily ported to variety of different RTOS. In the future, AWTK can be also run as mini programs. \r\n\r\n* In addition, AWTK has a cross-platform library of basic tools, which includes lists, arrays, strings (UTF8 and widechar), event emitters, values, objects, file system, mutex, threads, formulas and string analysis, in order that the applications you develop with AWTK can really run across platforms.\r\n\r\n### 2. Efficient\r\n\r\n[AWTK](README.md)  ensure efficiency through the following operations: \r\n\r\n* Update changed parts using dirty rectangles algorithms.\r\n* Support 3 FrameBuffer to make the UI run at the highest frame rate (optional).\r\n* UI description files and theme files are stored in efficient binary formats, in order that they can be analyzed more fast.\r\n* Support different GPU acceleration interfaces, including OpenGL, DirectX, Vulkan and Metal and so on.\r\n* Support 2D acceleration interfaces of embedded platforms, such as NXP's PXP interfaces and STM32's DMA2D interfaces, user can easy to adapt to other acceleration interfaces.\r\n\r\n### 3. Stable\r\n\r\n[AWTK](README.md) makes codes as stable and reliable as possible in following ways: \r\n\r\n* Perform static checks using cppcheck and facebook infer.\r\n* Dynamically check memory with valgrind.\r\n* With approximately 20,000 lines of codes for unit testing.\r\n* With support from the powerful GUI team of ZLG.\r\n* Has been validated in multiple practical projects.\r\n* Has been validated by multiple platforms and compilers.\r\n* With excellent architecture design.\r\n* Code Review.\r\n* Manual test.\r\n\r\n### 4. Powerful \r\n\r\n* Abundant widgets (being add more widgets).\r\n* Support multiple image formats (png/jpg/gif/svg).\r\n* Support multiple font formats (bitmap and vector fonts).\r\n* Support window animation function.\r\n* Support widget animation function.\r\n* Support HD screen.\r\n* Support UI layout description file.\r\n* Support UI theme file.\r\n* Support switch themes in runtime.\r\n* Support custom rule for widget layout.\r\n* Support custom rule for highlighting dialogs.\r\n* With many auxiliary tools.\r\n* Support different CPU from low-end (such as Cortex M3) to high-end.\r\n* Support no-filesystem platform and custom filesystem.\r\n* Support raw systems platform and RTOS.\r\n\r\n### 5. Easy-to-use\r\n\r\n* With many demonstration codes.\r\n* With complete API document and user guide document.\r\n* With technical support from the powerful team of ZLG.\r\n* With the UI designer, which also developed with AWTK (https://awtk.zlg.cn). \r\n* Use declarative UI description language. user can enable widget animation, window animation, and image display (png/jpg/svg/gif) with one line code.\r\n\r\n### 6. Customizable \r\n\r\n* Support extend custom widgets.\r\n* Support extend custom animations.\r\n* Support implement custom main loop.\r\n* Support extend custom soft keyboard.\r\n* Support extend custom image loader.\r\n* Support extend custom font loader.\r\n* Support extend custom input method engine.\r\n* Support extend custom layout algorithms for widgets.\r\n* Support extend custom rule for highlighting dialogs.\r\n* Support implement custom LCD interface.\r\n* Support extend custom vector engines (e.g.skia/cairo).\r\n* All extended and built-in widgets are treated the same.\r\n\r\n### 7. Multiple Development Languages\r\n\r\n[AWTK](README.md) is been developed in the C Program Language. Scripts in different languages can be generated by the IDL. The binding code generated not only simply mapping the C API to the target script language, but  also with the native code styles of the target script language. At present, following languages are supported (More languages will be added): \r\n\r\n* C\r\n* Go\r\n* C++\r\n* lua\r\n* java\r\n* python\r\n* Javascript on jerryscript\r\n* Javascript on nodejs\r\n* Javascript on quickjs\r\n\r\n### 8. Internationalization \r\n\r\n* Support Unicode. \r\n* Support input methods.\r\n* Support translate strings. \r\n* Support translate images.\r\n* Support text bidirectional algorithms.\r\n\r\n### 9. The MVVM framework for embedded software thoroughly separate user interfaces from business logic \r\n\r\n* High performances. \r\n* Low memory usage.\r\n* More thorough isolation.\r\n* Portable to other GUI.\r\n* Less codes (~5,000 lines).\r\n* No need for learning API of AWTK.\r\n* Support multiple programming languages (support C/JS at present).\r\n\r\n> For details, please see https://github.com/zlgopen/awtk-mvvm\r\n\r\n### 10. Open source codes are freely available for commercial purposes (LGPL)\r\n\r\n## IV.  Simulation Run\r\n\r\n### Code Downloading \r\n\r\n* Download with git \r\n\r\n> [Git under Windows](https://git-scm.com/download/win)\r\n\r\n**Code Downloading**\r\n\r\n```\r\ngit clone https://github.com/zlgopen/awtk.git\r\n```\r\n\r\n> Under Windows, codes can be downloaded by git with GUI tool.\r\n\r\n**Code Updating (in the awtk directory)**\r\n\r\n```\r\ngit pull\r\n```\r\n\r\n>  The advantage of using Git is that it is very convenient to update the code later.\r\n\r\n* Directly download the zip file.\r\n\r\n>  Download the [ zip file](https://github.com/zlgopen/awtk/archive/master.zip). Once unzipped, the file shall be renamed **awtk**.\r\n\r\n### Mac\r\n\r\nIf nodejs, scons and sdl2 aren't installed, please run the following command in the terminal (assuming that brew has been installed):\r\n\r\n```\r\nbrew install scons sdl2 node\r\n```\r\n\r\nCompile and run (Enter the directory where awtk is and run the following command in the terminal): \r\n\r\n```\r\nscons\r\n./bin/demoui\r\n```\r\n\r\n### Ubuntu (version >=16)\r\n\r\n If scons and the dependent software pack aren't installed, please run the following command in the terminal:\r\n\r\n```\r\nsudo apt-get install gcc g++ scons libsndio-dev libgtk-3-dev libglu1-mesa libglu1-mesa-dev libgl1-mesa-glx libgl1-mesa-dev libasound2-dev libibus-1.0-dev fcitx-libs-dev git vim clang-format libharfbuzz-dev nodejs libreadline-dev\r\n```\r\n\r\nCompile and run (Enter the awtk directory and run the following command in the terminal): \r\n\r\n```\r\nscons\r\n./bin/demoui\r\n```\r\n\r\n> If it can't be run in Ubuntu 14, please refer to [FAQ](docs/faq.md).\r\n\r\n### Windows\r\n\r\n> Please install python (64-bit python shall be installed for a 64-bit system), scons and Visual Studio C++ (version>=2017) first.\r\n\r\n>  If pywin32 isn't installed, please use pip to install:\r\n\r\n```\r\npip install pywin32\r\n```\r\n\r\nCompile and run (Enter the awtk directory and run the following command in the terminal): \r\n\r\n\r\nInstall [nodejs](https://nodejs.org/en/)\r\n\r\n```\r\nscons\r\nbin\\demoui\r\n```\r\n\r\n### compile prams\r\n\r\nhelp info :\r\n\r\n```\r\nscons help\r\n```\r\n\r\nexport compile prams file ：\r\n\r\n```\r\nscons DEFINE_FILE=./awtk_config_define.py\r\n```\r\n\r\nbuild compile prams file :\r\n\r\n```\r\nscons EXPORT_DEFINE_FILE=./awtk_config_define.py\r\n```\r\n\r\n### for all platforms\r\n\r\n> If PIL isn't installed, please use pip to install:\r\n\r\n```\r\npip install Pillow\r\n```\r\n\r\n> If nodejs glob isn't installed, please use npm to install:\r\n\r\n```\r\nnpm install -g glob\r\n```\r\n\r\n## V. Online Demonstration\r\n\r\n* [Online Demonstration of Basic Widgets](https://awtk.zlg.cn/demos/awtk/demoui/index.html)\r\n\r\n* [Graphical Demonstration](https://awtk.zlg.cn/demos/awtk_projects/Chart.v2-Demo/index.html)\r\n\r\n* [Music Player Demonstration](https://awtk.zlg.cn/demos/awtk_projects/MusicPlayer.v2-Demo/index.html)\r\n\r\n* [Smart Watch Demonstration](https://awtk.zlg.cn/demos/awtk_projects/SmartWatch.v2-Demo/index.html)\r\n\r\n## VI. Platform Porting\r\n\r\n* [For details, refer to the Joint Ecology Building Plan for AWTK](docs/awtk_ecology.md)\r\n\r\n## VII. Language Binding\r\n\r\n* [AWTK Binding Code Generator](https://github.com/zlgopen/awtk-binding)\r\n\r\n* [LUA Binding](https://github.com/zlgopen/awtk-lua)\r\n\r\n* [Go Binding](https://github.com/zlgopen/awtk-go)\r\n\r\n* [C++ Binding](https://github.com/zlgopen/awtk-cpp)\r\n\r\n* [JAVA Binding](https://github.com/zlgopen/awtk-java)\r\n\r\n* [Python Binding](https://github.com/zlgopen/awtk-python)\r\n\r\n* [MiniJVM Binding](https://github.com/zlgopen/awtk-minijvm)\r\n\r\n* [JS-Binding QuickJS](https://github.com/zlgopen/awtk-quickjs)\r\n\r\n* [JS-Binding NodeJS](https://github.com/zlgopen/awtk-nodejs)\r\n\r\n* [JS-Binding JerryScript](https://github.com/zlgopen/awtk-jerryscript)\r\n\r\n## VIII. Related Projects\r\n\r\n* [Template Project](https://github.com/zlgopen/awtk-hello)\r\n\r\n* [MVVM Template Project](https://github.com/zlgopen/awtk-mvvm-c-hello)\r\n\r\n* [awtk-csv-file](https://github.com/zlgopen/awtk-csv-file)\r\n\r\n* [awtk-database-repository](https://github.com/zlgopen/awtk-database-repository)\r\n\r\n* [awtk-sqlite3](https://github.com/zlgopen/awtk-sqlite3)\r\n\r\n* [awtk-vscode-plugin](https://github.com/zlgopen/awtk-vscode-plugin)\r\n\r\n* [awtk-restful-httpd](https://github.com/zlgopen/awtk-restful-httpd)\r\n\r\n* [Auto Test Engine](https://github.com/zlgopen/awtk-ui-automation)\r\n\r\n* [Regression Test](https://github.com/zlgopen/awtk-regression-test)\r\n\r\n* [Demonstration Codes with C Program](https://github.com/zlgopen/awtk-c-demos)\r\n\r\n* [Wonderful Examples](https://github.com/zlgopen/awtk-examples)\r\n\r\n* [HTTP Client](https://github.com/zlgopen/awtk-http-client)\r\n\r\n* [AWTK-MVVM](https://github.com/zlgopen/awtk-mvvm)\r\n\r\n* [MVC/MVVM Example Demonstration](https://github.com/zlgopen/awtk-patterns)\r\n\r\n* [Examples for Custom Widgets: Widget Generator](https://github.com/zlgopen/awtk-widget-generator)\r\n\r\n* [Examples for Custom Widgets: QR code](https://github.com/zlgopen/awtk-widget-qr)\r\n\r\n* [Examples for Custom Widgets: TinyGL](https://github.com/zlgopen/awtk-widget-glview)\r\n\r\n* [Examples for Custom Widgets: Number-label](https://github.com/zlgopen/awtk-widget-number-label)\r\n\r\n* [Examples for Custom Widgets: Code Editor](https://github.com/zlgopen/awtk-widget-code-edit)\r\n\r\n* [Examples for Custom Widgets: Date Picker](https://github.com/zlgopen/awtk-widget-date-picker)\r\n\r\n* [Examples for Custom Widgets: Table View](https://github.com/zlgopen/awtk-widget-table-view)\r\n\r\n* [Examples for Custom Widgets: Tree View](https://github.com/zlgopen/awtk-widget-tree-view)\r\n\r\n* [Examples for Custom Widgets: Shape](https://github.com/zlgopen/awtk-widget-shape)\r\n\r\n* [Examples for Custom Widgets: HTML View](https://github.com/zlgopen/awtk-widget-html-view)\r\n\r\n* [Examples for Custom Widgets: ios/android like list item](https://github.com/zlgopen/awtk-widget-slidable-row)\r\n\r\n* [Examples for Custom Widgets: VLabel](https://github.com/zlgopen/awtk-widget-vlabel)\r\n\r\n* [Examples for Custom Widgets: rlottie](https://github.com/zlgopen/awtk-widget-rlottie)\r\n\r\n* [Examples for Custom Widgets: rive](https://github.com/zlgopen/awtk-widget-rive)\r\n\r\n* [Examples for Custom Widgets: slider circle](https://github.com/zlgopen/awtk-widget-slider-circle)\r\n \r\n* [Examples for Custom Widgets: progress polygon](https://github.com/zlgopen/awtk-widget-progress-polygon)\r\n\r\n* [Integrate 3D engine OGRE](https://github.com/zlgopen/awtk-ogre)\r\n\r\n* [Examples for Custom Widgets: liquid flow](https://github.com/zlgopen/awtk-widget-liquid-flow)\r\n\r\n* [Examples for Custom Font Loader](https://github.com/zlgopen/awtk-custom-font-loader)\r\n\r\n* [Write AWTK App With ReactJS](https://github.com/zlgopen/react-awtk)\r\n\r\n* [awtk-modbus](https://github.com/zlgopen/awtk-modbus)\r\n\r\n* [awtk-ftpd](https://github.com/zlgopen/awtk-ftpd)\r\n\r\n* [awtk-ftp-fs](https://github.com/zlgopen/awtk-ftp-fs) \r\n\r\n* [awtk-hmi](https://github.com/zlgopen/awtk-hmi)\r\n\r\nThe third party provides: \r\n\r\n* [Examples for Custom Widgets: QR code](https://github.com/CUITzhaoqi/awtk-qr)\r\n\r\n* [Examples for Custom Widgets: Circle Sliders](https://github.com/longyuwlz/awtk_slider_circle)\r\n\r\n* [Examples for Custom Widgets: Gesture Lock](https://gitee.com/zhangzhongji/awtk-widget-gesture-lock)\r\n\r\n\r\n## IX. Documentation\r\n\r\n* [Development Docs](docs/README.md)\r\n\r\n* [Change Logs](docs/changes.md)\r\n\r\n* [TODO](TODO.md)\r\n\r\n* [Beginners' Guide and Handbook](https://github.com/zlgopen/awtk-docs)\r\n\r\n## X. Joint Ecology Building Plan\r\n\r\n* [Joint Ecology Building Plan](docs/awtk_ecology.md)\r\n* In-depth Partners\r\n\r\n[![](docs/images/logo_nxp.svg)](https://www.nxp.com)　[![](docs/images/logo_anyka.jpg)](http://www.anyka.com)　[![](docs/images/logo_ingenic.jpg)](http://www.ingenic.com.cn)　[![](docs/images/logo_mindmotion.png)](http://www.mindmotion.com.cn)　[![](docs/images/logo_bestechnic.jpg)](https://www.bestechnic.com)\r\n\r\n## XI. Developer Community\r\n\r\nWelcome any interested developer to evaluate and try to use AWTK. If you have any suggestions or questions about AWTK, please add the WeChat account zlgmcu-888 to enter the AWTK communication group, and ZLG R&D team will answer them for you.\r\n"
        },
        {
          "name": "README_zh.md",
          "type": "blob",
          "size": 13.416015625,
          "content": "# AWTK = Toolkit AnyWhere\n\n![zlg](docs/images/zlg_adv.jpeg)\n\n## 一、介绍\n\n[AWTK](README.md) 全称 Toolkit AnyWhere，是 [ZLG](http://www.zlg.cn/) 开发的开源 GUI 引擎，旨在为嵌入式系统、WEB、各种小程序、手机和 PC 打造的通用 GUI 引擎，为用户提供一个功能强大、高效可靠、简单易用、可轻松做出炫酷效果的 GUI 引擎。\n\n> 欢迎广大开发者一起参与开发：[生态共建计划](docs/awtk_ecology.md)。\n\n#### [AWTK](README.md) 寓意有两个方面：\n\n* Toolkit AnyWhere。 \n* ZLG 物联网操作系统 AWorksOS 内置 GUI。\n\n#### [AWTK](README.md) 源码仓库：\n\n* 主源码仓库：[https://github.com/zlgopen/awtk](https://github.com/zlgopen/awtk)\n* 镜像源码仓库：[https://gitee.com/zlgopen/awtk](https://gitee.com/zlgopen/awtk)\n* 稳定版整合包：https://pan.baidu.com/s/1_oRgj67M-I4kivk-YzwFWA   提取码：1cmi\n\n#### AWTK Designer 界面设计工具：\n\n* 不再需要手写 XML\n* 拖拽方式设计界面，所见即所得\n* 快速预览，一键打包资源\n* 注册及下载地址：https://awtk.zlg.cn\n\n![AWTK Designer](docs/images/designer.png)\n\n#### 运行效果截图：\n\n![Chart-Demo](docs/images/chart_main.png)\n\n![MusicPlayer-Demo](docs/images/musicplayer_main.png)\n\n![Watch](docs/images/smartwatch_main.png)\n\n## 二、最终目标：\n\n* 支持开发嵌入式应用程序。✔\n* 支持开发 Linux 应用程序。✔\n* 支持开发 MacOS 应用程序。✔\n* 支持开发 Windows 应用程序。✔\n* 支持开发 [Web](https://github.com/zlgopen/awtk-webt.git) 应用程序。✔\n* 支持开发 [Android](https://github.com/zlgopen/awtk-android.git) 应用程序。✔\n* 支持开发 [iOS](https://github.com/zlgopen/awtk-ios.git) 应用程序。✔\n* 支持开发 [鸿蒙系统](https://github.com/zlgopen/awtk-harmonyos-next.git) 应用程序。✔\n* 支持开发 2D 小游戏。\n\n## 三、主要特色\n\n### 1. 跨平台\n\n[AWTK](README.md) 是跨平台的，这有两个方面的意思：\n\n* AWTK 本身是跨平台的。目前支持的平台有 ZLG AWorksOS、Windows、Linux、MacOS、嵌入式 Linux、Android、iOS、鸿蒙系统、Web 和嵌入式裸系统，可以轻松的移植到各种 RTOS 上。AWTK 以后也可以运行在各种小程序平台上运行。\n\n* AWTK 同时还提供了一套跨平台的基础工具库。其中包括链表、数组、字符串 (UTF8 和 widechar)，事件发射器、值、对象、文件系统、互斥锁和线程、表达式和字符串解析等等，让你用 AWTK 开发的应用程序可以真正跨平台运行。\n\n### 2. 高效\n\n[AWTK](README.md) 通过一系列的手段保证 AWTK 应用程序高效运行：\n\n* 通过脏矩算法只更新变化的部分。\n* 支持 3 FrameBuffer 让界面以最高帧率运行 （可选）。\n* UI 描述文件和窗体样式文件使用高效的二进制格式，解析在瞬间完成。\n* 支持各种 GPU 加速接口。如 OpenGL、DirectX、Vulkan 和 Metal 等。\n* 支持嵌入式平台的各种 2D 加速接口。目前 STM32 的 DMA2D 和 NXP 的 PXP 接口，厂家可以轻松扩展自己的加速接口。\n\n### 3. 稳定\n\n[AWTK](README.md) 通过下列方式极力让代码稳定可靠：\n\n* 使用 cppcheck 和 facebook infer 进行静态检查。\n* 使用 valgrind 进行动态内存检查。\n* 近两万行的单元测试代码。\n* ZLG 强大 GUI 团队的支持。\n* 经过多个实际项目验证。\n* 多平台 / 多编译器验证。\n* 优秀的架构设计。\n* Code Review。\n* 手工测试。\n\n### 4. 强大\n\n* 丰富的控件 （持续增加中）。\n* 支持各种图片格式 (png/jpg/gif/svg)。\n* 支持各种字体格式 （点阵和矢量）。\n* 支持窗口动画。\n* 支持控件动画。\n* 支持高清屏。\n* 支持界面描述文件。\n* 支持窗体样式描述文件。\n* 主题切换实时生效。\n* 支持控件布局策略。\n* 支持对话框高亮策略。\n* 丰富的辅助工具。\n* 支持从低端的 Cortex M3 到各种高端 CPU。\n* 支持无文件系统和自定义的文件系统。\n* 支持裸系统和 RTOS。\n* 支持事件录制与重放进行压力测试。\n* 支持 Appium 进行全自动化 UI 测试。\n\n### 5. 易用\n\n* 大量的示例代码。\n* 完善的 API 文档和使用文档。\n* ZLG 强大的技术支持团队。\n* 用 AWTK 本身开发的 [界面编辑器](https://awtk.zlg.cn)。\n* 声明式的界面描述语言。一行代码启用控件动画，启用窗口动画，显示图片 (png/jpg/svg/gif)。\n\n### 6. 高度扩展性\n\n* 可以扩展自己的控件。\n* 可以扩展自己的动画。\n* 可以实现自己的主循环。\n* 可以扩展自己的软键盘。\n* 可以扩展自己的图片加载器。\n* 可以扩展自己的字体加载器。\n* 可以扩展自己的输入法引擎。\n* 可以扩展自己的控件布局算法。\n* 可以扩展自己的对话框高亮策略。\n* 可以实现自己的 LCD 接口。\n* 可以扩展自己的矢量引擎 （如使用 skia/cairo）。\n* 所有扩展组件和内置组件具有相同的待遇。\n\n### 7. 多种开发语言\n\n[AWTK](README.md) 本身是用 C 语言开发的，可以通过 IDL 生成各种脚本语言的绑定。生成的绑定代码不是简单的把 C 语言的 API 映射到脚本语言，而是生成脚本语言原生代码风格的 API。目前支持以下语言 （以后根据需要增加）：\n\n* C\n* Go\n* C++\n* lua\n* java\n* python\n* Javascript on jerryscript\n* Javascript on nodejs\n* Javascript on quickjs\n\n### 8. 国际化\n\n* 支持 Unicode。\n* 支持输入法。\n* 支持字符串翻译 （实时生效）。\n* 支持图片翻译 （实时生效）。\n* 文字双向排版。\n\n### 9. 为嵌入式软件定制的 MVVM 框架，彻底分离用户界面和业务逻辑。\n* 性能高。\n* 内存开销小。\n* 隔离更彻底。\n* 可移植到其它 GUI。\n* 代码小（~5000 行）。\n* 无需学习 AWTK 控件本身的 API。\n* 支持多种编程语言（目前支持 C/JS）。\n\n> 详情请参考：https://github.com/zlgopen/awtk-mvvm\n\n### 10. 开放源码，免费商用 (LGPL)。\n\n> 欢迎对照 [《GUI 引擎评价指标》](https://github.com/zlgopen/gui-lib-evaluation) 进行评测。\n\n## 四、模拟运行：\n\n### 下载代码\n\n* 用 git 下载\n\n> [Windows 下的 git](https://git-scm.com/download/win)\n\n**下载代码**\n\n```\ngit clone https://github.com/zlgopen/awtk.git\n```\n\n> 国内用户推荐使用：https://hub.fastgit.org/zlgopen/awtk.git\n\n> Windows 下可以用带 GUI 的 git 下载代码。\n\n**更新代码（在 awtk 目录下运行）**\n\n```\ngit pull\n```\n\n> 用 git 下载代码的好处是以后更新代码非常快。\n\n* 直接下载 zip 文件\n\n> 下载 [ zip 文件](https://github.com/zlgopen/awtk/archive/master.zip)。解压之后**需要把文件夹改名为 awtk**。\n\n### Mac\n\n如果没有安装 nodejs, scons 和 sdl2，请在终端运行下面的命令 （假定已安装 brew）：\n\n```\nbrew install scons sdl2 node\n```\n\n编译运行 （在终端下，进入 awtk 所在的目录，并运行下列命令）：\n\n```\nscons\n./bin/demoui\n```\n\n### Ubuntu （版本 >=16）\n\n如果没有安装 scons 和依赖的软件包，请在终端运行下面的命令：\n\n```\nsudo apt-get install gcc g++ scons libsndio-dev libgtk-3-dev libglu1-mesa libglu1-mesa-dev libgl1-mesa-glx libgl1-mesa-dev libasound2-dev libibus-1.0-dev fcitx-libs-dev git vim clang-format libharfbuzz-dev nodejs libreadline-dev\n```\n\n编译运行 （在终端下，进入 awtk 所在的目录，并运行下列命令）：\n\n```\nscons\n./bin/demoui\n```\n\n> 在 Ubuntu 14 上无法启动，请参考 [FAQ](docs/faq.md) 修改。\n\n### Windows\n\n> 请先安装 python(64 位系统要安装 64 位版本的 python)，scons 和 Visual Studio C++（版本 >=2017）\n\n> 如果没有安装 pywin32，请 pip 安装：\n\n```\npip install pywin32\n```\n\n如果没有安装nodejs，请到 [nodejs](https://nodejs.org/en/)下载并安装。\n\n编译运行 （在命令行模式下，进入 awtk 所在的目录，并运行下列命令）：\n\n```\nscons\nbin\\demoui\n```\n\n### 编译参数\n\n编译帮助信息：\n\n```\nscons help\n```\n\n导入编译参数文件：\n\n```\nscons DEFINE_FILE=./awtk_config_define.py\n```\n\n生成编译参数文件：\n\n```\nscons EXPORT_DEFINE_FILE=./awtk_config_define.py\n```\n\n### 所有平台\n\n* 如果 PIL 没有安装，请用 pip 安装：\n\n```\npip install Pillow\n```\n\n* 如果 glob 没有安装，请用 npm 安装：\n\n```\nnpm install -g glob\n```\n\n## 五、在线演示\n\n* [基本控件在线演示](https://awtk.zlg.cn/demos/awtk/demoui/index.html)\n\n* [图表演示](https://awtk.zlg.cn/demos/awtk_projects/Chart.v2-Demo/index.html)\n\n* [音乐播放器演示](https://awtk.zlg.cn/demos/awtk_projects/MusicPlayer.v2-Demo/index.html)\n\n* [智能手表演示](https://awtk.zlg.cn/demos/awtk_projects/SmartWatch.v2-Demo/index.html)\n\n## 六、各个平台的移植\n\n* [详见 AWTK 生态共建计划](docs/awtk_ecology.md)\n\n## 七、各语言的绑定\n\n* [AWTK 绑定代码生成器](https://github.com/zlgopen/awtk-binding)\n\n* [LUA 绑定](https://github.com/zlgopen/awtk-lua)\n\n* [Go 绑定](https://github.com/zlgopen/awtk-go)\n\n* [C++ 绑定](https://github.com/zlgopen/awtk-cpp)\n\n* [JAVA 绑定](https://github.com/zlgopen/awtk-java)\n\n* [Python 绑定](https://github.com/zlgopen/awtk-python)\n\n* [MiniJVM 绑定](https://github.com/zlgopen/awtk-minijvm)\n\n* [JS 绑定之 QuickJS](https://github.com/zlgopen/awtk-quickjs)\n\n* [JS 绑定之 NodeJS](https://github.com/zlgopen/awtk-nodejs)\n\n* [JS 绑定之 JerryScript](https://github.com/zlgopen/awtk-jerryscript)\n\n## 八、相关工程\n\n* [模板工程](https://github.com/zlgopen/awtk-hello)\n\n* [MVVM 模板工程](https://github.com/zlgopen/awtk-mvvm-c-hello)\n\n* [CSV文件操作](https://github.com/zlgopen/awtk-csv-file)\n\n* [数据库Repository](https://github.com/zlgopen/awtk-database-repository)\n\n* [Sqlite 基于 AWTK 的移植](https://github.com/zlgopen/awtk-sqlite3)\n\n* [VSCode实时预览插件](https://github.com/zlgopen/awtk-vscode-plugin)\n\n* [为嵌入式平台开发的RESTful的Web服务](https://github.com/zlgopen/awtk-restful-httpd)\n\n* [自动测试引擎](https://github.com/zlgopen/awtk-ui-automation)\n\n* [回归测试](https://github.com/zlgopen/awtk-regression-test)\n\n* [C 示例代码](https://github.com/zlgopen/awtk-c-demos)\n\n* [精彩示例](https://github.com/zlgopen/awtk-examples)\n\n* [HTTP 客户端库](https://github.com/zlgopen/awtk-http-client)\n\n* [AWTK-MVVM](https://github.com/zlgopen/awtk-mvvm)\n\n* [MVC/MVVM 演示示例](https://github.com/zlgopen/awtk-patterns)\n\n* [扩展控件实例：控件代码生成器](https://github.com/zlgopen/awtk-widget-generator)\n\n* [扩展控件实例：二维码](https://github.com/zlgopen/awtk-widget-qr)\n\n* [扩展控件实例：TinyGL](https://github.com/zlgopen/awtk-widget-glview)\n\n* [扩展控件实例：数值标签](https://github.com/zlgopen/awtk-widget-number-label)\n\n* [扩展控件实例：代码编辑器](https://github.com/zlgopen/awtk-widget-code-edit)\n\n* [扩展控件实例：日期选择器](https://github.com/zlgopen/awtk-widget-date-picker)\n\n* [扩展控件实例：表格视图](https://github.com/zlgopen/awtk-widget-table-view)\n\n* [扩展控件实例：树形视图](https://github.com/zlgopen/awtk-widget-tree-view)\n\n* [扩展控件实例: Shape](https://github.com/zlgopen/awtk-widget-shape)\n\n* [扩展控件实例：HTML 视图](https://github.com/zlgopen/awtk-widget-html-view)\n\n* [扩展控件实例：垂直文本](https://github.com/zlgopen/awtk-widget-vlabel)\n\n* [扩展控件实例：仿微信列表项](https://github.com/zlgopen/awtk-widget-slidable-row)\n\n* [扩展控件实例：Lottie动画](https://github.com/zlgopen/awtk-widget-rlottie)\n\n* [扩展控件实例：Rive动画](https://github.com/zlgopen/awtk-widget-rive)\n\n* [扩展控件实例：液体流动](https://github.com/zlgopen/awtk-widget-liquid-flow)\n\n* [扩展控件实例：液体流动](https://github.com/zlgopen/awtk-widget-liquid-flow)\n\n* [扩展控件实例：环形调节器](https://github.com/zlgopen/awtk-widget-slider-circle)\n \n* [扩展控件实例：异形进度条](https://github.com/zlgopen/awtk-widget-progress-polygon)\n\n* [集成 3D 引擎 OGRE](https://github.com/zlgopen/awtk-ogre)\n\n* [自定义字体加载器：加载部分字体](https://github.com/zlgopen/awtk-custom-font-loader)\n\n* [用reactjs开发AWTK应用程序](https://github.com/zlgopen/react-awtk)\n\n* [MODBUS 协议](https://github.com/zlgopen/awtk-modbus)\n\n* [FTP 服务器](https://github.com/zlgopen/awtk-ftpd)\n\n* [基于FTP的文件系统](https://github.com/zlgopen/awtk-ftp-fs) \n\n* [开源智能串口屏](https://github.com/zlgopen/awtk-hmi)\n\n第三方提供：\n\n* [扩展控件实例：二维码](https://github.com/CUITzhaoqi/awtk-qr)\n\n* [扩展控件实例：圆形滑块](https://github.com/longyuwlz/awtk_slider_circle)\n\n* [扩展控件实例：手势密码控件](https://gitee.com/zhangzhongji/awtk-widget-gesture-lock)\n\n## 九、文档\n\n* [开发文档](docs/README.md)\n\n* [最新动态](docs/changes.md)\n\n* [任务完成情况](TODO.md)\n\n* [入门指南与手册](https://github.com/zlgopen/awtk-docs)\n\n## 十、生态共建计划\n\n* [生态共建计划](docs/awtk_ecology.md)\n* 深度合作伙伴\n\n[![](docs/images/logo_nxp.svg)](https://www.nxp.com)　[![](docs/images/logo_anyka.jpg)](http://www.anyka.com)　[![](docs/images/logo_ingenic.jpg)](http://www.ingenic.com.cn)　[![](docs/images/logo_mindmotion.png)](http://www.mindmotion.com.cn)　[![](docs/images/logo_bestechnic.jpg)](https://www.bestechnic.com)\n\n## 十一、开发者交流群\n\n欢迎感兴趣的工程师评估和尝试 AWTK，如果您对 AWTK 有相关建议或疑问，可以添加小Z微信（zlgmcu-888）进入 AWTK 开发者交流群，ZLG 研发技术团队亲自为您解答。\n"
        },
        {
          "name": "SConstruct",
          "type": "blob",
          "size": 2.9267578125,
          "content": "import os\nimport atexit\nimport platform\nimport sys\nsys.path.insert(0, './scripts')\nimport compile_config\ncompile_helper = compile_config.compile_helper()\ncompile_helper.try_load_default_config()\ncompile_helper.scons_user_sopt(ARGUMENTS)\ncompile_config.set_curr_config(compile_helper)\n\nimport awtk_config as awtk\n\nAPP_TOOLS = ['default']\nOS_NAME = platform.system()\nawtk.scons_db_check_and_remove()\n\nif awtk.TOOLS_NAME != '' :\n  if awtk.TOOLS_NAME == 'mingw':\n    APP_TOOLS = ['mingw']\nelif awtk.TOOLS_NAME == '' and OS_NAME == 'Windows':\n    APP_TOOLS = ['msvc', 'masm', 'mslink', \"mslib\"]\n\nawtk.genIdlAndDef();\nDefaultEnvironment(TOOLS = APP_TOOLS,\n  CCFLAGS = awtk.AWTK_CCFLAGS + awtk.BUILD_DEBUG_FLAG,\n  LIBS = awtk.LIBS,\n  LIBPATH = awtk.LIBPATH,\n  CPPPATH = awtk.CPPPATH + [awtk.joinPath(awtk.TK_ROOT, 'res')],\n  LINKFLAGS = awtk.LINKFLAGS + awtk.BUILD_DEBUG_LINKFLAGS,\n  TARGET_ARCH=awtk.TARGET_ARCH,\n  OS_SUBSYSTEM_CONSOLE=awtk.OS_SUBSYSTEM_CONSOLE,\n  OS_SUBSYSTEM_WINDOWS=awtk.OS_SUBSYSTEM_WINDOWS\n)\n\nSConscriptFiles=awtk.NANOVG_BACKEND_PROJS + [\n  '3rd/cjson/SConscript',\n  '3rd/mbedtls/SConscript',\n  '3rd/glad/SConscript',\n  '3rd/gpinyin/SConscript', \n  '3rd/svgtiny/SConscript',\n  '3rd/libunibreak/SConscript',\n  '3rd/lz4/SConscript',\n  '3rd/miniz/SConscript',\n  '3rd/fribidi/SConscript',\n  '3rd/nativefiledialog/SConscript',\n  'src/SConscript',\n  'src/csv/SConscript',\n  'src/conf_io/SConscript',\n  'src/hal/SConscript',\n  'src/streams/SConscript',\n  'src/compressors/SConscript',\n  'src/ubjson/SConscript',\n  'src/debugger/SConscript',\n  'src/fscript_ext/SConscript',\n  'src/xml/SConscript',\n  'src/charset/SConscript',\n  'src/romfs/SConscript',\n  ]\n\nos.environ['BUILD_TOOLS'] = str(compile_helper.get_value('BUILD_TOOLS', True))\nif compile_helper.get_value('BUILD_TOOLS', True) :\n  SConscriptFiles += [\n    'src/streams/tools/SConscript',\n    'tools/common/SConscript', \n    'tools/theme_gen/SConscript', \n    'tools/font_gen/SConscript', \n    'tools/image_gen/SConscript', \n    'tools/image_resize/SConscript', \n    'tools/image_dither/SConscript',\n    'tools/res_gen/SConscript', \n    'tools/str_gen/SConscript', \n    'tools/ui_gen/xml_to_ui/SConscript',\n    'tools/svg_gen/SConscript',\n    'tools/api_doc_lint/SConscript',\n    'tools/preview_ui/SConscript',\n    'tools/fdb/SConscript',\n    'tools/dltest/SConscript',\n    'tools/ui_test/SConscript',\n    'src/hal/tools/network_shell/SConscript',\n  ]\n\nif compile_helper.get_value('BUILD_DEMOS', True) :\n  SConscriptFiles += ['demos/SConscript']\n\nif compile_helper.get_value('BUILD_TESTS', True) :\n  SConscriptFiles += ['tests/SConscript']\n\nSConscriptFiles += awtk.OS_PROJECTS\nos.environ['TK_ROOT'] = awtk.TK_ROOT;\nos.environ['BIN_DIR'] = awtk.TK_BIN_DIR;\nos.environ['LIB_DIR'] = awtk.TK_LIB_DIR;\nos.environ['AWTK_SHARED_LIBS'] = ';'.join(awtk.SHARED_LIBS);\n\nSConscript(SConscriptFiles)\n\n\ndef compile_end() :\n  compile_helper.save_last_compile_argv()\n  compile_helper.output_compile_data(awtk.TK_ROOT)\n\natexit.register(compile_end)\n"
        },
        {
          "name": "SDL2Config.cmake",
          "type": "blob",
          "size": 0.34375,
          "content": "set(SDL2_ROOT_DIR ${CMAKE_CURRENT_LIST_DIR} CACHE PATH \"Path to SDL2 root directory\")\n\n# 查找awtk库的头文件和库文件\nfind_library(SDL2_LIBRARY NAMES SDL2 PATHS ${SDL2_ROOT_DIR}/lib)\n\nset(SDL2_LIBRARIES)\nset(SDL2_INCLUDE_DIRS ${SDL2_ROOT_DIR}/3rd/SDL/include)\n\nlink_directories(${SDL2_ROOT_DIR}/lib)\ninclude_directories(${SDL2_INCLUDE_DIRS})\n\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 2.3154296875,
          "content": "## 已完成：\n* main loop\n* clip\n* emitter\n* image load manager\n* image loader \n* widget\n* theme \n* dirty rect \n* font generator\n* image generator\n* button\n* image \n* label \n* progressbar\n* checkbox\n* groupbox\n* dialog\n* binarry ui loader\n* xml ui loader\n* api doc\n* 基本 layout 功能\n* 极速模式\n* stm32 移植\n* draw 9patch image\n* draw 3patch\\_h image\n* draw 3patch\\_v image\n* draw scale image\n* draw image tile/tile\\_h/tile\\_v\n* draw scale\\_x image\n* draw scale\\_y image\n* image support draw\\_type\n* theme support image\\_draw\\_type \n* 矢量图绘图函数接口。\n* slider\n* nanovg 实现 vgcanvas 接口\n* picasso 实现 vgcanvas 接口\n* 支持窗口动画\n* 资源管理器支持从 ROM 和文件中加载。\n* 国际化支持字符串翻译。\n* 实现控件动画。\n* 软键盘\n* 中文输入法\n* edit\n* combobox\n* listbox\n* spinbox\n* tab\n* row\n* app\\_bar\n* col\n* jerryscript binging \n* 支持 tween 动画\n* guage\n* 时钟控件\n* color picker\n* 移植到嵌入式 linux\n* 移植到 STM32F103\n* 移植到 STM32F429\n* 移植到 STM32F767\n* sylixos 移植\n* nanovg 基于 agg 用纯软件实现的矢量图库。\n* nanovg 基于 agge 用纯软件实现的矢量图库。\n* text select\n* switch\n* 模拟时钟控件。\n* 动画控件。\n* 电阻屏校准窗口。\n* Windows/Linux 支持高清屏幕。\n* 电阻屏校准窗口。\n* 数字时钟控件。\n* 支持 SVG\n* 支持 GIF\n* ProgressCircle\n* 支持 clipboard\n* ImageValue\n* SystemBar\n* Canvas\n* SlideMenu\n* API doc 到手册转换工具。\n* 参考手册\n* 高亮对话框（背景模糊）\n* 窗口动画支持自定义。\n* android 移植\n* 在浏览器中运行\n* WEB 版本\n* 键盘导航\n* text editor\n* file browser\n* ios 移植\n* java 绑定\n* C++绑定\n* nodejs 绑定\n* quickjs 绑定\n* lua 绑定\n* go 绑定\n* 用 AWTK 实现界面编辑器\n* MVVM 支持\n* python 绑定\n* 事件录制与重放。\n* 代码编辑器。\n* 日期选择器。\n* 音频接口。\n* 支持文本双向排版\n* 支持 appuim 自动测试\n* 千万级别的table view\n* 支持Lottie动画\n* 多点触摸和手势识别\n* tab控件动画(vpage)\n* 支持rive动画\n* 支持reactjs\n\n## 短期计划（顺序不定）\n* tree view\n* drag & drop\n* image view\n* thumb image view\n\n## 长期计划\n* Accessibility\n* 支持泰文等特殊文字\n* 支持 vue.js\n* 支持粒子产生器\n* 小程序版本\n* 多进程支持\n"
        },
        {
          "name": "awtk-config.cmake",
          "type": "blob",
          "size": 0.8818359375,
          "content": "set(AWTK_ROOT_DIR ${CMAKE_CURRENT_LIST_DIR} CACHE PATH \"Path to AWTK root directory\")\n\n# 查找awtk库的头文件和库文件\nfind_library(AWTK_LIBRARY NAMES awtk PATHS ${AWTK_ROOT_DIR}/bin)\n\nfile(COPY  ${AWTK_LIBRARY} DESTINATION ${PROJECT_SOURCE_DIR}/bin)\n\nadd_compile_definitions(WITH_FS_RES)\nadd_compile_definitions(HAS_STDIO)\nadd_compile_definitions(HAS_STD_MALLOC)\n\nset(AWTK_LIBRARIES ${AWTK_LIBRARY})\nset(AWTK_INCLUDE_DIRS ${AWTK_ROOT_DIR}/src ${AWTK_ROOT_DIR}/3rd ${AWTK_ROOT_DIR}/src/ext_widgets ${AWTK_ROOT_DIR}/src ${AWTK_ROOT_DIR}/3rd/SDL/include ${AWTK_ROOT_DIR}/3rd/nanovg/base)\n\nlink_directories(${AWTK_ROOT_DIR}/bin)\ninclude_directories(${AWTK_INCLUDE_DIRS})\n\nif(WIN32)\n  file(COPY  ${AWTK_ROOT_DIR}/bin/awtk.dll DESTINATION ${CMAKE_BINARY_DIR}/Debug)\n  file(COPY  ${AWTK_ROOT_DIR}/bin/awtk.dll DESTINATION ${PROJECT_SOURCE_DIR}/bin)\nendif()\n\n#示例请参考 awtk-hello/CMakeLists.txt\n"
        },
        {
          "name": "awtk_config.py",
          "type": "blob",
          "size": 12.24609375,
          "content": "import os\nimport sys\nimport glob\nimport os.path\n\nsys.path.insert(0, os.path.join(os.path.abspath(os.path.dirname(__file__)), 'scripts'))\nimport compile_config\ncompile_helper = compile_config.get_curr_config_for_awtk()\n\nfrom awtk_config_common import OS_NAME, TARGET_ARCH, TOOLS_PREFIX, TK_SRC, TK_BIN_DIR, TK_LIB_DIR, TK_3RD_ROOT, TK_TOOLS_ROOT, OS_DEBUG, TK_DEMO_ROOT, GTEST_ROOT, TKC_STATIC_LIBS, TOOLS_NAME, NANOVG_BACKEND, NATIVE_WINDOW, TK_ROOT\nfrom awtk_config_common import joinPath, toWholeArchive, genIdlAndDefEx, setEnvSpawn, genDllLinkFlags, copySharedLib, cleanSharedLib, scons_db_check_and_remove, is_raspberrypi\nfrom awtk_config_common import OS_FLAGS, OS_LIBS, OS_LIBPATH, OS_CPPPATH, OS_LINKFLAGS, OS_SUBSYSTEM_CONSOLE, OS_SUBSYSTEM_WINDOWS, OS_PROJECTS, COMMON_CFLAGS\n\nWIN32_AWTK_RES = 'win32_res/awtk.res'\nif TARGET_ARCH == 'x86':\n    WIN32_AWTK_RES = 'win32_res/awtk_x86.res'\n\nWIN32_AWTK_RES = os.path.join(compile_config.get_curr_app_root(), WIN32_AWTK_RES)\nif not os.path.exists(WIN32_AWTK_RES):\n    if TARGET_ARCH == 'x86':\n        WIN32_AWTK_RES = os.path.join(TK_ROOT, 'win32_res/awtk_x86.res')\n    else:\n        WIN32_AWTK_RES = os.path.join(TK_ROOT, 'win32_res/awtk.res')\n\nWIN32_AWTK_RES = compile_helper.get_value('WIN32_RES', WIN32_AWTK_RES)\nif not os.path.isabs(WIN32_AWTK_RES) :\n    WIN32_AWTK_RES = os.path.join(compile_config.get_curr_app_root(), WIN32_AWTK_RES)\n\nAWTK_STATIC_LIBS = ['awtk_global', 'fscript_ext_widgets', 'extwidgets',\n                    'widgets', 'base', 'gpinyin', 'fribidi', 'linebreak', 'svgtiny']\n\nif os.getenv('SDL_VIDEODRIVER') is None:\n  AWTK_STATIC_LIBS += ['nfd']\n\nAWTK_STATIC_LIBS = AWTK_STATIC_LIBS+TKC_STATIC_LIBS\n\n# INPUT_ENGINE='null'\n# INPUT_ENGINE='spinyin'\n# INPUT_ENGINE='t9'\n# INPUT_ENGINE='t9ext'\nINPUT_ENGINE = 'pinyin'\n\nINPUT_ENGINE = compile_helper.get_value('INPUT_ENGINE', INPUT_ENGINE)\n\nVGCANVAS = 'NANOVG'\nVGCANVAS='NANOVG_PLUS'\n# VGCANVAS='CAIRO'\n\nVGCANVAS = compile_helper.get_value('VGCANVAS', VGCANVAS)\n\nif OS_NAME == 'Windows':\n    TK_ROOT = TK_ROOT.replace('\\\\', '\\\\\\\\')\nNANOVG_BACKEND = 'GL3'\n\n# NANOVG_BACKEND='GLES2'\n# NANOVG_BACKEND='GLES3'\n# NANOVG_BACKEND='AGG'\n# NANOVG_BACKEND='AGGE'\n# NANOVG_BACKEND='GL2'\nif is_raspberrypi():\n  NANOVG_BACKEND='GLES2'\n\nNANOVG_BACKEND = compile_helper.get_value('NANOVG_BACKEND', NANOVG_BACKEND)\n#NANOVG_BACKEND='BGFX'\n\nFRAME_BUFFER_FORMAT = ''\nif VGCANVAS == 'CAIRO':\n    LCD = 'SDL_FB'\n    FRAME_BUFFER_FORMAT = 'bgr565'\n    # FRAME_BUFFER_FORMAT='bgra8888'\nelse:\n    if NANOVG_BACKEND == 'AGGE' or NANOVG_BACKEND == 'AGG':\n        LCD = 'SDL_FB'\n        FRAME_BUFFER_FORMAT = 'bgr565'\n        # FRAME_BUFFER_FORMAT='bgra8888'\n    else:\n        LCD = 'SDL_GPU'\n# LCD='SDL_FB_MONO'\n\nif NANOVG_BACKEND == 'AGGE' or NANOVG_BACKEND == 'AGGE' :\n    lcd_color_format = compile_helper.get_value('LCD_COLOR_FORMAT', '')\n    if lcd_color_format != '' :\n        if lcd_color_format== 'mono' :\n            LCD = 'SDL_FB_MONO'\n        else :\n            LCD = 'SDL_FB'\n            if lcd_color_format == 'bgr565' :\n                FRAME_BUFFER_FORMAT = lcd_color_format\n            else :\n                FRAME_BUFFER_FORMAT = 'bgra8888'\n\n\nNANOVG_BACKEND_LIBS = []\nNANOVG_BACKEND_PROJS = []\nNANOVG_BACKEND_CPPPATH = []\n\nNATIVE_WINDOW = 'sdl'\n\nCOMMON_CCFLAGS = ' -DTK_ROOT=\\\"\\\\\\\"'+TK_ROOT+'\\\\\\\"\\\" '\n#COMMON_CCFLAGS=COMMON_CCFLAGS+' -DWITHOUT_WINDOW_ANIMATOR_CACHE=1 '\n#COMMON_CCFLAGS=COMMON_CCFLAGS+' -DENABLE_PERFORMANCE_PROFILE=1 '\n#COMMON_CCFLAGS=COMMON_CCFLAGS+' -DENABLE_MEM_LEAK_CHECK=1 '\nCOMMON_CCFLAGS=COMMON_CCFLAGS+' -DWITH_STATE_ACTIVATED=1 '\n\nif compile_helper.get_value('NATIVE_WINDOW_BORDERLESS', False) :\n    COMMON_CCFLAGS=COMMON_CCFLAGS+' -DNATIVE_WINDOW_BORDERLESS=1 '\n\nif compile_helper.get_value('NATIVE_WINDOW_NOT_RESIZABLE', False) :\n    COMMON_CCFLAGS=COMMON_CCFLAGS+' -DNATIVE_WINDOW_NOT_RESIZABLE=1 '\n\n\nCOMMON_CCFLAGS = COMMON_CCFLAGS+' -DWITH_MBEDTLS=1 '\nCOMMON_CCFLAGS = COMMON_CCFLAGS+' -DENABLE_CURSOR=1 '\nCOMMON_CCFLAGS = COMMON_CCFLAGS+' -DWITH_TEXT_BIDI=1 '\n#COMMON_CCFLAGS=COMMON_CCFLAGS+' -DLOAD_ASSET_WITH_MMAP=1 '\nCOMMON_CCFLAGS = COMMON_CCFLAGS+' -DWITH_DATA_READER_WRITER=1 '\nCOMMON_CCFLAGS = COMMON_CCFLAGS+' -DWITH_EVENT_RECORDER_PLAYER=1 '\nCOMMON_CCFLAGS = COMMON_CCFLAGS + \\\n    ' -DWITH_ASSET_LOADER -DWITH_FS_RES -DWITH_ASSET_LOADER_ZIP '\nCOMMON_CCFLAGS = COMMON_CCFLAGS + \\\n    ' -DSTBTT_STATIC -DSTB_IMAGE_STATIC -DWITH_STB_IMAGE '\nCOMMON_CCFLAGS = COMMON_CCFLAGS + \\\n    ' -DWITH_VGCANVAS -DWITH_UNICODE_BREAK -DWITH_DESKTOP_STYLE '\nCOMMON_CCFLAGS = COMMON_CCFLAGS + \\\n    ' -DWITH_SDL -DHAS_STDIO -DHAVE_STDIO_H -DHAS_GET_TIME_US64 '\nCOMMON_CCFLAGS = COMMON_CCFLAGS+' -DHAS_STD_MALLOC -DTK_MAX_MEM_BLOCK_NR=3 '\n\n#COMMON_CCFLAGS=COMMON_CCFLAGS+' -DTK_MAX_MEM_BLOCK_NR=3 '\n#COMMON_CCFLAGS=COMMON_CCFLAGS+' -DWITH_FAST_LCD_PORTRAIT '\n\nCOMMON_CCFLAGS = COMMON_CCFLAGS+ ' -DWITH_RES_TOOLS'\n\nCOMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_MAIN_LOOP_CONSOLE=1 '\n\nGRAPHIC_BUFFER = 'default'\n\nif INPUT_ENGINE == 't9':\n    COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_IME_T9 '\nelif INPUT_ENGINE == 't9ext':\n    COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_IME_T9EXT'\nelif INPUT_ENGINE == 'pinyin':\n    COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_IME_PINYIN '\nelif INPUT_ENGINE == 'spinyin':\n    COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_IME_SPINYIN '\nelif INPUT_ENGINE == 'null':\n    COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_IME_NULL '\n\nif LCD == 'SDL_GPU':\n    COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_GPU -DWITH_VGCANVAS_LCD'\n    COMMON_CCFLAGS = COMMON_CCFLAGS+' -DWITH_STB_FONT '\nelif LCD == 'SDL_FB_MONO':\n    NANOVG_BACKEND = 'AGGE'\n    COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_LCD_MONO '\n    COMMON_CCFLAGS = COMMON_CCFLAGS+' -DWITH_STB_FONT '\nelse:\n    COMMON_CCFLAGS = COMMON_CCFLAGS+' -DWITH_STB_FONT '\n    COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_BITMAP_BGRA -DWITH_NANOVG_SOFT '\n    if FRAME_BUFFER_FORMAT == 'bgra8888':\n        COMMON_CCFLAGS = COMMON_CCFLAGS+' -DWITH_FB_BGRA8888=1 '\n    else:\n        COMMON_CCFLAGS = COMMON_CCFLAGS+' -DWITH_FB_BGR565=1'\n\nif VGCANVAS == 'CAIRO':\n    NANOVG_BACKEND_LIBS = ['cairo', 'pixman']\n    NANOVG_BACKEND_PROJS = ['3rd/cairo/SConscript', '3rd/pixman/SConscript']\n    COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_VGCANVAS_CAIRO -DHAVE_CONFIG_H -DCAIRO_WIN32_STATIC_BUILD '\n    COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_BITMAP_PREMULTI_ALPHA -DWITH_PIXMAN_G2D -DWITH_G2D -DWITHOUT_DEFAULT_G2D '\n\nelif VGCANVAS == 'NANOVG_PLUS':\n    NANOVG_BACKEND_LIBS = ['nanovg_plus']\n    NANOVG_BACKEND_PROJS = ['3rd/nanovg_plus/SConscript']\n    NANOVG_BACKEND_CPPPATH = [joinPath(\n        TK_3RD_ROOT, 'nanovg_plus/gl'), joinPath(TK_3RD_ROOT, 'nanovg_plus/base')]\n    COMMON_CCFLAGS = COMMON_CCFLAGS + \\\n        ' -DWITH_NANOVG_PLUS_GPU -DWITH_NANOVG_GPU -DWITH_GPU_GL '\n    if NANOVG_BACKEND == 'GLES2':\n        COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_GPU_GLES2 -DNVGP_GLES2 '\n    elif NANOVG_BACKEND == 'GLES3':\n        COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_GPU_GLES3 -DNVGP_GLES3 '\n    else:\n        COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_GPU_GL3 -DNVGP_GL3 '\nelse:\n    NANOVG_BACKEND_PROJS = ['3rd/nanovg/SConscript']\n    NANOVG_BACKEND_CPPPATH = [\n        joinPath(TK_3RD_ROOT, 'nanovg'),\n        joinPath(TK_3RD_ROOT, 'nanovg/gl'),\n        joinPath(TK_3RD_ROOT, 'nanovg/base'),\n        joinPath(TK_3RD_ROOT, 'nanovg/agge'),\n        joinPath(TK_3RD_ROOT, 'nanovg/bgfx')]\n    if NANOVG_BACKEND == 'AGG':\n        NANOVG_BACKEND_LIBS = ['nanovg-agg', 'nanovg', 'agg']\n        NANOVG_BACKEND_PROJS += ['3rd/agg/SConscript']\n        COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_NANOVG_AGG '\n    elif NANOVG_BACKEND == 'AGGE':\n        NANOVG_BACKEND_LIBS = ['nanovg-agge', 'nanovg', 'agge']\n        NANOVG_BACKEND_PROJS += ['3rd/agge/SConscript']\n        COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_NANOVG_AGGE '\n    elif NANOVG_BACKEND == 'BGFX':\n        NANOVG_BACKEND_LIBS = ['nanovg-bgfx', 'nanovg', 'bgfx']\n        NANOVG_BACKEND_PROJS += ['3rd/bgfx/SConscript']\n        COMMON_CCFLAGS = COMMON_CCFLAGS + ' -DWITH_NANOVG_BGFX -DWITH_NANOVG_GPU '\n    elif NANOVG_BACKEND == 'GLES2':\n        NANOVG_BACKEND_LIBS = ['nanovg']\n        COMMON_CCFLAGS = COMMON_CCFLAGS + \\\n            ' -DWITH_NANOVG_GLES2 -DWITH_GPU_GLES2 -DWITH_NANOVG_GL -DWITH_NANOVG_GPU  '\n    elif NANOVG_BACKEND == 'GLES3':\n        NANOVG_BACKEND_LIBS = ['nanovg']\n        COMMON_CCFLAGS = COMMON_CCFLAGS + \\\n            ' -DWITH_NANOVG_GLES3 -DWITH_NANOVG_GL -DWITH_NANOVG_GPU  '\n    elif NANOVG_BACKEND == 'GL2':\n        NANOVG_BACKEND_LIBS = ['nanovg']\n        COMMON_CCFLAGS = COMMON_CCFLAGS + \\\n            ' -DWITH_NANOVG_GL2 -DWITH_NANOVG_GL -DWITH_NANOVG_GPU  '\n    else:\n        NANOVG_BACKEND_LIBS = ['nanovg']\n        COMMON_CCFLAGS = COMMON_CCFLAGS + \\\n            ' -DWITH_NANOVG_GL3 -DWITH_NANOVG_GL -DWITH_NANOVG_GPU  '\n\nBUILD_DEBUG_FLAG = ''\nBUILD_DEBUG_LINKFLAGS = ''\nOS_PROJECTS = []\nOS_WHOLE_ARCHIVE = toWholeArchive(AWTK_STATIC_LIBS)\nAWTK_DLL_DEPS_LIBS = AWTK_STATIC_LIBS + \\\n    NANOVG_BACKEND_LIBS + ['SDL2', 'glad'] + OS_LIBS\n\n\nif OS_DEBUG :\n    BUILD_DEBUG_FLAG = ' -g -O0 '\nelse :\n    BUILD_DEBUG_FLAG = ' -Os '\n\nif OS_NAME == 'Darwin':\n    OS_WHOLE_ARCHIVE = ' -all_load '\nelif OS_NAME == 'Linux':\n    OS_PROJECTS = ['3rd/SDL/SConscript']\nelif OS_NAME == 'Windows':\n    OS_PROJECTS = ['3rd/SDL/SConscript']\n    OS_LINKFLAGS += '\\\"' + WIN32_AWTK_RES + '\\\" '\n\n    if TOOLS_NAME == 'mingw':\n        print('mingw')\n    else:\n        OS_WHOLE_ARCHIVE = ' /DEF:\"dllexports/awtk.def\" '\n        if OS_DEBUG :\n            BUILD_DEBUG_FLAG = '  /MDd -D_DEBUG -DDEBUG /DEBUG /Od '\n        else :\n            BUILD_DEBUG_FLAG = ' -DNDEBUG /MD /O2 /Oi  '\n        \n        if compile_helper.get_value('PDB', True) :\n            BUILD_DEBUG_LINKFLAGS = ' /DEBUG '\n\n\nCFLAGS = COMMON_CFLAGS\nLINKFLAGS = OS_LINKFLAGS\nLIBPATH = [TK_BIN_DIR, TK_LIB_DIR] + OS_LIBPATH\nCCFLAGS = OS_FLAGS + COMMON_CCFLAGS\nAWTK_CCFLAGS = OS_FLAGS + COMMON_CCFLAGS\n\nAWTK_STATIC_LIBS = AWTK_STATIC_LIBS + NANOVG_BACKEND_LIBS \nSTATIC_LIBS = AWTK_STATIC_LIBS + ['SDL2', 'glad'] + OS_LIBS\nSHARED_LIBS = ['awtk'] + OS_LIBS\n\nLIBS = STATIC_LIBS\n\nCPPPATH = [TK_ROOT,\n           TK_SRC,\n           TK_3RD_ROOT,\n           joinPath(TK_SRC, 'ext_widgets'),\n           joinPath(TK_SRC, 'custom_widgets'),\n           joinPath(TK_3RD_ROOT, 'fribidi'),\n           joinPath(TK_3RD_ROOT, 'mbedtls/include'),\n           joinPath(TK_3RD_ROOT, 'mbedtls/3rdparty/everest/include'),\n           joinPath(TK_3RD_ROOT, 'pixman'),\n           joinPath(TK_3RD_ROOT, 'cairo'),\n           joinPath(TK_3RD_ROOT, 'bgfx/bgfx/include'),\n           joinPath(TK_3RD_ROOT, 'bgfx/bx/include'),\n           joinPath(TK_3RD_ROOT, 'bgfx/bimg/include'),\n           joinPath(TK_3RD_ROOT, 'agge'),\n           joinPath(TK_3RD_ROOT, 'agg/include'),\n           joinPath(TK_3RD_ROOT, 'SDL/src'),\n           joinPath(TK_3RD_ROOT, 'SDL/include'),\n           joinPath(TK_3RD_ROOT, 'agge/src'),\n           joinPath(TK_3RD_ROOT, 'agge/include'),\n           joinPath(TK_3RD_ROOT, 'gpinyin/include'),\n           joinPath(TK_3RD_ROOT, 'libunibreak'),\n           joinPath(TK_3RD_ROOT, 'gtest/googletest'),\n           joinPath(TK_3RD_ROOT, 'gtest/googletest/include'),\n           TK_TOOLS_ROOT] + OS_CPPPATH + NANOVG_BACKEND_CPPPATH\n\nCUSTOM_WIDGETS_SRC=glob.glob('src/custom_widgets/*/src') + \\\n  glob.glob('src/custom_widgets/*/src/*/src') + \\\n  glob.glob('src/custom_widgets/*/src/*/include')\n\nfor iter in CUSTOM_WIDGETS_SRC:\n  fullpath = os.path.join(TK_ROOT, str(iter));\n  CPPPATH.append(fullpath);\n\nos.environ['LCD'] = LCD\nos.environ['TK_ROOT'] = TK_ROOT\nos.environ['CCFLAGS'] = CCFLAGS + BUILD_DEBUG_FLAG\nos.environ['VGCANVAS'] = VGCANVAS\nos.environ['TOOLS_NAME'] = TOOLS_NAME\nos.environ['GTEST_ROOT'] = GTEST_ROOT\nos.environ['TK_3RD_ROOT'] = TK_3RD_ROOT\nos.environ['INPUT_ENGINE'] = INPUT_ENGINE\nos.environ['NANOVG_BACKEND'] = NANOVG_BACKEND\nos.environ['NATIVE_WINDOW'] = NATIVE_WINDOW\nos.environ['GRAPHIC_BUFFER'] = GRAPHIC_BUFFER\nos.environ['FRAME_BUFFER_FORMAT'] = FRAME_BUFFER_FORMAT\nos.environ['OS_WHOLE_ARCHIVE'] = OS_WHOLE_ARCHIVE\nos.environ['AWTK_DLL_DEPS_LIBS'] = ';'.join(AWTK_DLL_DEPS_LIBS)\nos.environ['STATIC_LIBS'] = ';'.join(STATIC_LIBS)\n\nos.environ['WITH_AWTK_SO'] = 'true'\nos.environ['AWTK_CCFLAGS'] = AWTK_CCFLAGS + BUILD_DEBUG_FLAG\nos.environ['CROSS_COMPILE'] = str(not TOOLS_PREFIX == '')\n\nos.environ['SDL_UBUNTU_USE_IME'] = str(compile_helper.get_value('SDL_UBUNTU_USE_IME', False))\n# os.environ['SDL_UBUNTU_USE_IME'] = str(True)\nOS_LIBS = ['SDL2', 'glad'] + OS_LIBS\n\ndef genIdlAndDef():\n    genIdlAndDefEx(True)\n"
        },
        {
          "name": "awtk_config_common.py",
          "type": "blob",
          "size": 10.958984375,
          "content": "import os\nimport os.path\nimport platform\nimport shutil\nimport compile_config\ncompile_helper = compile_config.get_curr_config_for_awtk()\n\nimport sys\nif sys.version_info.major == 2:\n  import cPickle as pickle\nelse:\n  import pickle\n\nOS_NAME = platform.system()\n\nimport subprocess\n\ndef is_raspberrypi():\n  if OS_NAME == \"Windows\":\n    return False\n  result = str(subprocess.check_output([\"uname\", \"-a\"]))\n  return result.find('Linux raspberrypi') >= 0\n\n#######################################################\n# XXX: This file can be edited only in tkc project\n#######################################################\n\nTOOLS_PREFIX = ''\nMACH = platform.machine()\nARCH = platform.architecture()\nis32bit = (ARCH[0] == '32bit')\n\nif is32bit:\n    if MACH == 'i686' or MACH == 'i386' or MACH == 'x86':\n        TARGET_ARCH = 'x86'\n    else:\n        TARGET_ARCH = ''\nelse:\n    TARGET_ARCH = ''\n\nprint('MACH=' + MACH + ' ARCH=' + str(ARCH) + ' TARGET_ARCH=' + TARGET_ARCH)\n\n\ndef addLibPrefix(iter):\n    print(iter)\n    return '-l'+iter\n\n\ndef toWholeArchive(libs):\n    wa = ' '.join(list(map(addLibPrefix, libs)))\n    return ' -Wl,--whole-archive ' + wa + ' -Wl,--no-whole-archive'\n\n\ndef getTkcOnly():\n    env = os.environ\n    if 'TKC_ONLY' in env:\n        return env['TKC_ONLY'] == 'True'\n    else:\n        return False\n\n\ndef joinPath(root, subdir):\n    return os.path.normpath(os.path.join(root, subdir))\n\n\nTK_ROOT = os.path.dirname(os.path.normpath(os.path.abspath(__file__)))\n\nprint('TK_ROOT: ' + TK_ROOT)\n\nTK_SRC = joinPath(TK_ROOT, 'src')\nTK_BIN_DIR = joinPath(TK_ROOT, 'bin')\nTK_LIB_DIR = joinPath(TK_ROOT, 'lib')\nTK_3RD_ROOT = joinPath(TK_ROOT, '3rd')\nTK_TOOLS_ROOT = joinPath(TK_ROOT, 'tools')\nTK_DEMO_ROOT = joinPath(TK_ROOT, 'demos')\nGTEST_ROOT = joinPath(TK_ROOT, '3rd/gtest/googletest')\nTKC_STATIC_LIBS = ['debugger', 'fscript_ext', 'romfs', 'conf_io', 'hal', 'xml', 'charset',\n                   'csv', 'streams', 'ubjson', 'compressors', 'miniz', 'tkc_core', 'mbedtls']\n\nTOOLS_NAME = ''\nNANOVG_BACKEND = ''\nNATIVE_WINDOW = ''\n#TOOLS_NAME = 'mingw'\nTOOLS_NAME = compile_helper.get_value('TOOLS_NAME', TOOLS_NAME)\n\nif OS_NAME == 'Windows':\n    TK_ROOT = TK_ROOT.replace('\\\\', '\\\\\\\\')\n\nOS_FLAGS = ''\nOS_LIBS = []\nOS_LIBPATH = []\nOS_CPPPATH = []\nOS_LINKFLAGS = ''\nOS_SUBSYSTEM_CONSOLE = ''\nOS_SUBSYSTEM_WINDOWS = ''\nOS_PROJECTS = []\n# only for c compiler flags\nCOMMON_CFLAGS = ''\nOS_DEBUG = compile_helper.get_value('DEBUG', True)\n\nif OS_NAME == 'Darwin':\n\n    # Find the correct SDL2 version\n    sdl_path = \"/opt/homebrew/Cellar/sdl2/\" \n    if not os.path.exists(sdl_path) :\n        # Compatible with old systems\n        sdl_path = '/usr/local/Cellar/sdl2/'\n    sdl_versions = os.listdir(sdl_path)\n    if len(sdl_versions)==0:\n        print(\"Can not find the SDL version\")\n        exit(-1)\n    sdl_lib = sdl_path + sdl_versions[0] + \"/lib\"\n\n    TOOLS_NAME = ''\n    OS_FLAGS = '-Wall -Wno-unused-function -fPIC -DWITHOUT_GLAD=1 '\n    OS_LIBS = ['stdc++', 'iconv', 'pthread', 'm', 'dl']\n    OS_LINKFLAGS = '-framework IOKit -framework Cocoa -framework QuartzCore -framework OpenGL -weak_framework Metal -weak_framework MetalKit'\n    OS_FLAGS = OS_FLAGS + ' -DHAS_SEM_OPEN '\n    OS_FLAGS = OS_FLAGS + ' -D__APPLE__ -DHAS_PTHREAD -DMACOS '\n    OS_FLAGS = OS_FLAGS + ' -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS  -DBGFX_CONFIG_RENDERER_METAL=1 '\n    OS_LIBPATH = ['/usr/local/lib/', sdl_lib]\n\nelif OS_NAME == 'Linux':\n    TOOLS_NAME = ''\n    OS_FLAGS = ' -Wall -Wno-unused-function -fPIC '\n    OS_LIBS = ['sndio', 'stdc++', 'asound', 'pthread', 'm', 'dl']\n    COMMON_CFLAGS = COMMON_CFLAGS+' -std=gnu99 '\n    OS_FLAGS = OS_FLAGS + ' -DLINUX -DHAS_PTHREAD'\n\n    OS_PROJECTS = ['3rd/SDL/SConscript']\n    if TARGET_ARCH == 'x86':\n        OS_FLAGS = OS_FLAGS + ' -U__FLT_EVAL_METHOD__ -D__FLT_EVAL_METHOD__=0 '\n    else:\n        OS_FLAGS = OS_FLAGS + ' -DWITH_64BIT_CPU '\n\n    OS_LINKFLAGS = ' -Wl,-rpath=./bin -Wl,-rpath=./ '\n    if is_raspberrypi():\n      OS_FLAGS = OS_FLAGS + ' -DRASPBERRYPI '\n      os.environ['RASPBERRYPI'] = 'true'\n    \n    SDL_VIDEODRIVER=os.getenv('SDL_VIDEODRIVER');\n    if SDL_VIDEODRIVER is None:\n      SDL_VIDEODRIVER = 'x11'\n  \n    if SDL_VIDEODRIVER == 'wayland':\n      OS_LIBS = ['GL', 'xkbcommon', 'wayland-cursor', 'wayland-egl', 'wayland-client'] + OS_LIBS;\n      OS_FLAGS += '-DWITHOUT_NATIVE_FILE_DIALOG '\n    else:\n      OS_LIBS = ['GL', 'gtk-3', 'gdk-3', 'glib-2.0', 'gobject-2.0', 'Xext', 'X11'] + OS_LIBS;\n\n\nelif OS_NAME == 'Windows':\n    if not os.path.exists(os.path.abspath(TK_BIN_DIR)):\n        os.makedirs(os.path.abspath(TK_BIN_DIR))\n    if not os.path.exists(os.path.abspath(TK_LIB_DIR)):\n        os.makedirs(os.path.abspath(TK_LIB_DIR))\n    if TOOLS_NAME == '':\n        OS_LIBS = ['gdi32', 'user32', 'winmm.lib', 'imm32.lib', 'version.lib', 'shell32.lib', 'Setupapi',\n                   'ole32.lib', 'Oleaut32.lib', 'Advapi32.lib', 'DelayImp.lib', 'psapi.lib', \"ws2_32\"]\n        OS_FLAGS = '-DWIN32 -D_WIN32 -DWINDOWS /EHsc -D_CONSOLE   /FS /Z7 /utf-8 '\n        if TARGET_ARCH == 'x86':\n            OS_LINKFLAGS = '/MACHINE:X86 '\n            OS_SUBSYSTEM_CONSOLE = '/SUBSYSTEM:CONSOLE,5.01  '\n            OS_SUBSYSTEM_WINDOWS = '/SUBSYSTEM:WINDOWS,5.01  '\n            OS_FLAGS = OS_FLAGS + ' -D_WIN32 '\n        else:\n            OS_FLAGS = OS_FLAGS + ' -DWITH_64BIT_CPU '\n            OS_LINKFLAGS = '/MACHINE:X64 '\n            OS_SUBSYSTEM_CONSOLE = '/SUBSYSTEM:CONSOLE  '\n            OS_SUBSYSTEM_WINDOWS = '/SUBSYSTEM:WINDOWS  '\n            OS_FLAGS = OS_FLAGS + ' -D_WIN64 '\n        OS_FLAGS = OS_FLAGS + ' -DHAVE_LIBC '\n\n    elif TOOLS_NAME == 'mingw':\n        OS_LIBS = ['kernel32', 'gdi32', 'user32', 'winmm', 'imm32', 'version', 'shell32', 'Setupapi',\n                   'ole32', 'Oleaut32', 'Advapi32', 'oleaut32', 'uuid', 'stdc++', \"ws2_32\"]\n        OS_FLAGS = '-DMINGW -DWINDOWS -D_CONSOLE  -Wall'\n        OS_LINKFLAGS = ' -Wl,-rpath=./bin -Wl,-rpath=./ '\n        OS_SUBSYSTEM_CONSOLE = ' -mconsole  '\n        OS_SUBSYSTEM_WINDOWS = ' -mwindows  '\n        COMMON_CFLAGS = COMMON_CFLAGS+' -std=gnu99 '\n        OS_FLAGS = OS_FLAGS+' -U__FLT_EVAL_METHOD__ -D__FLT_EVAL_METHOD__=0 -DDECLSPEC=  '\n\n    #OS_FLAGS='-DWIN32 -D_WIN32 -DWINDOWS /EHsc -D_CONSOLE  /DEBUG /Od  /FS /Z7 -D_DEBUG /MDd '\n    OS_FLAGS = OS_FLAGS + '-D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D_HAS_EXCEPTIONS=0 -D_HAS_ITERATOR_DEBUGGING=0 -D_ITERATOR_DEBUG_LEVEL=0 -D_SCL_SECURE=0'\n    OS_FLAGS = OS_FLAGS + \\\n        '-D_SECURE_SCL=0 -D_SCL_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE '\n    OS_PROJECTS = ['3rd/SDL/SConscript']\n\n\ndef has_custom_cc():\n    return False\n\n\ndef cleanSharedLib(dst, name):\n    if OS_NAME == 'Darwin':\n        dst = os.path.join(dst, 'lib'+name+'.dylib')\n    elif OS_NAME == 'Linux':\n        dst = os.path.join(dst, 'lib'+name+'.so')\n    elif OS_NAME == 'Windows':\n        dst = os.path.join(dst, name+'.dll')\n    else:\n        print('not support ' + OS_NAME)\n        return\n\n    dst = os.path.normpath(dst)\n\n    if os.path.exists(dst):\n        os.remove(dst)\n        print('Removed ' + dst)\n\n    if OS_NAME == 'Windows':\n        dst=dst.replace('.dll', '.lib')\n        if os.path.exists(dst):\n            os.remove(dst)\n            print('Removed ' + dst)\n\n\ndef copySharedLib(src, dst, name):\n    mingw_src = src\n    if OS_NAME == 'Darwin':\n        src = os.path.join(src, 'bin/lib'+name+'.dylib')\n    elif OS_NAME == 'Linux':\n        src = os.path.join(src, 'bin/lib'+name+'.so')\n    elif OS_NAME == 'Windows':\n        src = os.path.join(src, 'bin/'+name+'.dll')\n    else:\n        print('not support ' + OS_NAME)\n        return\n\n    src = os.path.normpath(src)\n    dst = os.path.normpath(dst)\n\n    if os.path.dirname(src) == dst:\n        return\n\n    if not os.path.exists(src):\n        print('Can\\'t find ' + src + '. Please build '+name+' before!')\n    else:\n        if not os.path.exists(dst):\n            os.makedirs(dst)\n        shutil.copy(src, dst)\n        print(src + '==>' + dst)\n    if OS_NAME == 'Windows':\n        if TOOLS_NAME == 'mingw':\n            src = os.path.join(mingw_src, 'bin/lib'+name+'.a')\n        else:\n            src = src.replace('dll', 'lib')\n        if os.path.exists(src):\n            shutil.copy(src, dst)\n            print(src + '==>' + dst)\n\n\ndef isBuildShared():\n    return 'WITH_AWTK_SO' in os.environ and os.environ['WITH_AWTK_SO'] == 'true'\n\n\ndef genIdlAndDefEx(withAWTK):\n    cmds = [\n        'node tools/idl_gen/tkc.js tools/idl_gen/tkc.json',\n        'node tools/dll_def_gen/index.js tools/idl_gen/tkc.json  dllexports/tkc.def false'\n    ]\n    if withAWTK:\n        cmds += [\n            'node tools/idl_gen/index.js tools/idl_gen/idl.json',\n            'node tools/dll_def_gen/index.js tools/idl_gen/idl.json  dllexports/awtk.def false',\n        ]\n\n    for cmd in cmds:\n        print(cmd)\n        if os.system(cmd) != 0:\n            print('exe cmd: ' + cmd + ' failed.')\n\n\nos.environ['TK_ROOT'] = TK_ROOT\nos.environ['TOOLS_NAME'] = TOOLS_NAME\nos.environ['GTEST_ROOT'] = GTEST_ROOT\nos.environ['TK_3RD_ROOT'] = TK_3RD_ROOT\n\n\ndef setEnvSpawn(env):\n    if env['PLATFORM'] == 'win32' and os.environ['TOOLS_NAME'] != '':\n        import subprocess\n\n        class ourSpawn:\n            def ourspawn(self, sh, escape, cmd, args, env):\n                newargs = ' '.join(args[1:])\n                cmdline = cmd + \" \" + newargs\n                startupinfo = subprocess.STARTUPINFO()\n                startupinfo.dwFlags |= subprocess.STARTF_USESHOWWINDOW\n                proc = subprocess.Popen(cmdline, stdin=subprocess.PIPE, stdout=subprocess.PIPE,\n                                        stderr=subprocess.PIPE, startupinfo=startupinfo, shell=False, env=env)\n                data, err = proc.communicate()\n                rv = proc.wait()\n                if rv:\n                    print(\"=====\")\n                    print(err)\n                    print(\"=====\")\n                return rv\n\n        buf = ourSpawn()\n        buf.ourenv = env\n        env['SPAWN'] = buf.ourspawn\n\n\ndef genDllLinkFlags(libs, defFile):\n    linkFlags = ''\n    wholeArch = toWholeArchive(libs)\n\n    if OS_NAME == 'Windows':\n        if TOOLS_NAME == '':\n            linkFlags += ' /DEF:\"dllexports/'+defFile+'.def\" '\n        elif TOOLS_NAME == 'mingw':\n            linkFlags += wholeArch\n    elif OS_NAME == 'Darwin':\n        linkFlags += ' -all_load '\n    elif OS_NAME == 'Linux':\n        linkFlags += wholeArch\n\n    return linkFlags\n\n\ndef get_scons_db_files(root):\n  scons_db_files = []\n  scons_db_filename = \".sconsign.dblite\"\n\n  for f in os.listdir(root):\n    full_path = joinPath(root, f)\n    if os.path.isfile(full_path) and f == scons_db_filename:\n      scons_db_files.append(full_path)\n    elif os.path.isdir(full_path) and f != \".\" and f != \"..\":\n      get_scons_db_files(full_path)\n\n  return scons_db_files\n\n\ndef scons_db_check_and_remove():\n  scons_db_files = []\n  scons_db_files = get_scons_db_files(TK_ROOT)\n\n  for f in scons_db_files:\n    try:\n      with open(f, \"rb\") as fs:\n        pickle.load(fs)\n        fs.close()\n    except Exception as e :\n        fs.close()\n        print(e)\n        try:\n            os.remove(f)\n        except Exception as e :\n            print(e)\n"
        },
        {
          "name": "build.json",
          "type": "blob",
          "size": 0.884765625,
          "content": "{\n  \"name\": \"demoui\",\n  \"version\": \"1.0\",\n  \"assets\": \"res/assets\",\n  \"vendor\": \"zlgopen\",\n  \"app_name\": \"org.zlgopen.demoui\",\n  \"author\": \"xianjimli@hotmail.com\",\n  \"copyright\": \"Guangzhou ZHIYUAN Electronics Co.,Ltd.\",\n  \"themes\":[\"default\", \"dark\"],\n  \"sources\": [\n     \"demos/assets.c\",\n     \"demos/vg_common.inc\",\n     \"demos/demo_ui_app.c\",\n     \"res/assets.inc\",\n     \"res/assets/__assets_dark.inc\",\n     \"res/assets/__assets_default.inc\"\n  ],\n  \"web\": {\n    \"app_type\": \"c\",\n    \"assets\": \"design\",\n    \"config\": {\n      \"fontScale\": \"0.8\",\n      \"defaultFont\": \"sans\"\n    }\n  },\n  \"harmonyos\": {\n    \"icon\": \"design/default/images/xx/awtk_icon.png\",\n    \"title\": {\n      \"en_US\": \"DemoUI\",\n      \"zh_CN\": \"控件演示\"\n    },\n    \"config\": {\n      \"defaultFont\": \"default_full\"\n    },\n    \"sources\": [\n    ]\n  },\n  \"android\": {\n    \"sources\": [\n    ]\n  },\n  \"ios\": {\n    \"sources\": [\n    ]\n  }\n}\n"
        },
        {
          "name": "build_ui_old.json",
          "type": "blob",
          "size": 0.8984375,
          "content": "{\n  \"name\": \"demouiold\",\n  \"version\": \"1.0\",\n  \"assets\": \"res/assets\",\n  \"vendor\": \"zlgopen\",\n  \"app_name\": \"org.zlgopen.demouiold\",\n  \"author\": \"xianjimli@hotmail.com\",\n  \"copyright\": \"Guangzhou ZHIYUAN Electronics Co.,Ltd.\",\n  \"themes\":[\"default\", \"dark\"],\n  \"sources\": [\n     \"demos/vg_common.inc\",\n     \"demos/assets_old.c\",\n     \"demos/demo_ui_old_app.c\",\n     \"res/assets.inc\",\n     \"res/assets/__assets_dark.inc\",\n     \"res/assets/__assets_default.inc\"\n  ],\n  \"web\": {\n    \"app_type\": \"c\",\n    \"assets\": \"design\",\n    \"config\": {\n      \"fontScale\": \"0.8\",\n      \"defaultFont\": \"sans\"\n    }\n  },\n  \"harmonyos\": {\n    \"icon\": \"design/default/images/xx/awtk_icon.png\",\n    \"title\": {\n      \"en_US\": \"DemoUI\",\n      \"zh_CN\": \"控件演示\"\n    },\n    \"config\": {\n      \"defaultFont\": \"default_full\"\n    },\n    \"sources\": [\n    ]\n  },\n  \"android\": {\n    \"sources\": [\n    ]\n  },\n  \"ios\": {\n    \"sources\": [\n    ]\n  }\n}\n"
        },
        {
          "name": "component.json",
          "type": "blob",
          "size": 0.0439453125,
          "content": "{\r\n  \"name\":\"awtk\",\r\n  \"version\":\"1.1.0\"\r\n}\r\n"
        },
        {
          "name": "demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "design",
          "type": "tree",
          "content": null
        },
        {
          "name": "dllexports",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "format.sh",
          "type": "blob",
          "size": 0.3359375,
          "content": "find src tools demos -name \\*.c -exec clang-format -i {} \\;\nfind src tools demos -name \\*.h -exec clang-format -i {} \\;\nfind src tools demos -name \\*.cc -exec clang-format -i {} \\;\nfind src tools demos -name \\*.cpp -exec clang-format -i {} \\;\n\nfor f in tests/*.cpp tests/*.c tests/*.cc\ndo\n  echo \"clang-format -i $f\"\n  clang-format -i $f\ndone\n\n"
        },
        {
          "name": "project.json",
          "type": "blob",
          "size": 2.5791015625,
          "content": "{\n  \"name\": \"awtk\",\n  \"entry\": \"main\",\n  \"team\": \"AWTK Develop Team\",\n  \"author\": \"Li XianJing <xianjimli@hotmail.com>\",\n  \"desc\": \"全称 Toolkit AnyWhere，是 ZLG 开发的开源 GUI 引擎，旨在为嵌入式系统、WEB、各种小程序、手机和 PC 打造的通用 GUI 引擎，为用户提供一个功能强大、高效可靠、简单易用、可轻松做出炫酷效果的 GUI 引擎。\",\n  \"assets\": {\n    \"activedTheme\": \"default\",\n    \"outputDir\": \"res\",\n    \"loadFrom\": \"any\",\n    \"screenDPR\": \"x1\",\n    \"const\": \"all_data\",\n    \"defaultLanguage\": \"zh\",\n    \"defaultCountry\": \"CN\",\n    \"themes\": {\n      \"default\": {\n        \"activedSystemBar\": \"system_bar\",\n        \"activedBottomSystemBar\": \"system_bar_b\",\n        \"packaged\": true,\n        \"fonts\": {\n          \"default\": {\n            \"text\": \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n          },\n          \"ap\": {\n            \"text\": \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n          },\n          \"default_full\": {\n            \"text\": \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n          },\n          \"trado\": {\n            \"text\": \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n          }\n        },\n        \"lcd\": {\n          \"width\": \"800\",\n          \"height\": \"480\",\n          \"colorDepth\": \"16bit\",\n          \"colorFormat\": \"BGR(A)\"\n        }\n      },\n      \"dark\": {\n        \"activedSystemBar\": \"system_bar\",\n        \"activedBottomSystemBar\": \"system_bar_b\",\n        \"packaged\": true,\n        \"fonts\": {\n          \"default\": {\n            \"text\": \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n          },\n          \"ap\": {\n            \"text\": \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n          },\n          \"default_full\": {\n            \"text\": \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n          },\n          \"trado\": {\n            \"text\": \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n          }\n        },\n        \"lcd\": {\n          \"width\": \"800\",\n          \"height\": \"480\",\n          \"colorDepth\": \"16bit\",\n          \"colorFormat\": \"BGR(A)\"\n        }\n      }\n    }\n  },\n  \"creator\": {\n    \"name\": \"AWTK Designer\",\n    \"version\": \"1.0.0\"\n  },\n  \"awtkRoot\": \".\",\n  \"type\": \"PROJECT_WIDGETS_APPLICATION\"\n}"
        },
        {
          "name": "release_version.sh",
          "type": "blob",
          "size": 0.0986328125,
          "content": "#!/bin/bash\n\nVERSION=\"mbedtls\"\ngit checkout -b \"$VERSION\"\ngit push --set-upstream origin \"$VERSION\"\n\n"
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "run_fscript_test.sh",
          "type": "blob",
          "size": 1.5986328125,
          "content": "\nfor f in \\\n  \"tests/fscripts/demo_app_conf.fs\" \\\n  \"tests/fscripts/demo_function1.fs\" \\\n  \"tests/fscripts/demo_typed_array1.fs\" \\\n  \"tests/fscripts/demo_array.fs\" \\\n  \"tests/fscripts/demo_function2.fs\" \\\n  \"tests/fscripts/demo_typed_array2.fs\" \\\n  \"tests/fscripts/demo_array1.fs\"\t\\\n  \"tests/fscripts/demo_function3.fs\" \\\n  \"tests/fscripts/demo_ubjson.fs\" \\\n  \"tests/fscripts/demo_array2.fs\"\t\\\n  \"tests/fscripts/demo_if1.fs\"\t\\\n  \"tests/fscripts/demo_array3.fs\" \\\n  \"tests/fscripts/demo_json.fs\"\t\\\n  \"tests/fscripts/demo_wbuffer.fs\" \\\n  \"tests/fscripts/demo_array4.fs\"\t\\\n  \"tests/fscripts/demo_json1.fs\"\t\\\n  \"tests/fscripts/demo_wbuffer1.fs\" \\\n  \"tests/fscripts/demo_array5.fs\"\t\\\n  \"tests/fscripts/demo_local.fs\"\t\\\n  \"tests/fscripts/demo_wbuffer2.fs\" \\\n  \"tests/fscripts/demo_array6.fs\"\t\\\n  \"tests/fscripts/demo_object.fs\" \\\n  \"tests/fscripts/demo_wbuffer3.fs\" \\\n  \"tests/fscripts/demo_bits.fs\"\t\\\n  \"tests/fscripts/demo_return.fs\"\t\\\n  \"tests/fscripts/demo_wbuffer4.fs\" \\\n  \"tests/fscripts/demo_comments.fs\"\t\\\n  \"tests/fscripts/demo_while1.fs\" \\\n  \"tests/fscripts/demo_consts.fs\"\t\\\n  \"tests/fscripts/demo_str.fs\"\t\\\n  \"tests/fscripts/demo_while2.fs\" \\\n  \"tests/fscripts/demo_while3.fs\" \\\n  \"tests/fscripts/demo_str3.fs\" \\\n  \"tests/fscripts/demo_while4.fs\" \\\n  \"tests/fscripts/demo_else_if.fs\" \\\n  \"tests/fscripts/demo_stream_file.fs\" \\\n  \"tests/fscripts/demo_zh_var_func.fs\" \\\n  \"tests/fscripts/demo_endian.fs\"\t\\\n  \"tests/fscripts/demo_stream_file1.fs\"\t\\\n  \"tests/fscripts/foo.fs\" \\\n  \"tests/fscripts/demo_expr.fs\"\t\\\n  \"tests/fscripts/demo_fs.fs\"\t\\\n  \"tests/fscripts/demo_typed_array.fs\"\ndo\necho $f\n./bin/runFScript \"@\"$f|grep assert\ndone\n\n"
        },
        {
          "name": "run_ui_test.sh",
          "type": "blob",
          "size": 0.7529296875,
          "content": "#!/bin/bash\n\nfunction runTest() {\n  for f in \\\n  screen_saver.ini \\\n  fps.ini \\\n  main_snapshot.ini \\\n  main_source.ini \\\n  max_fps.ini \\\n  overlay.ini \\\n  exec_fscript.ini \\\n  create_widget.ini \\\n  create_window.ini \\\n  send_key_events.ini \\\n  send_pointer_events.ini \\\n  get_loaded_assets_info.ini \\\n  get_loaded_image_info.ini \\\n  language.ini \\\n  theme.ini \\\n  basic.ini \\\n  button.ini \\\n  edit.ini \\\n  keyboard.ini \\\n  toast.ini \n  do\n    echo \"==============tests/ui_test_data/demouiold/$f==================\"\n    ./bin/ui_test tests/ui_test_data/demouiold/$f\n  done\n}\n\n\n# 检查传入参数的数量\nif [ $# -lt 1 ]; then\n    echo \"Usage: $0 <n times>\"\n    exit 1\nfi\n\nn=$1\n\nfor ((i = 0; i < n; i++)); do\n    echo \"### Execution $((i + 1))/$n ...\"\n    runTest\ndone\n\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "staticcheck",
          "type": "tree",
          "content": null
        },
        {
          "name": "sync_tkc.sh",
          "type": "blob",
          "size": 0.703125,
          "content": "cp -rvf ../tkc/scripts/* scripts\ncp -rfv ../tkc/tests/*test.cc tests\ncp -rfv ../tkc/tests/fdb.cpp tests\ncp -rfv ../tkc/tests/fscript_run.cpp tests\ncp -fv ../tkc/tools/dll_def_gen/* tools/dll_def_gen/.\ncp -fv ../tkc/tools/idl_gen/* tools/idl_gen/.\nrm -f tools/dll_def_gen/package-lock.json\ncp -rvf ../tkc/awtk_config_common.py .\ncp -rf ../tkc/tests/fscripts/* tests/fscripts\ncp -f ../tkc/3rd/gtest/googletest/include/gtest/gtest_helper.h 3rd/gtest/googletest/include/gtest/gtest_helper.h\n\nfor f in tkc.h compressors platforms conf_io hal streams ubjson charset csv\tmisc tkc xml debugger romfs\ndo\n  cp -rvf ../tkc/src/$f src\ndone\n\ncp -rvf ../tkc/src/fscript_ext/*.* src/fscript_ext\n\ngit checkout scripts/compile_config.py\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "valgrind",
          "type": "tree",
          "content": null
        },
        {
          "name": "win32_res",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}