{
  "metadata": {
    "timestamp": 1736709749040,
    "page": 169,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/httpd",
      "stars": 3613,
      "defaultBranch": "trunk",
      "files": [
        {
          "name": ".gdbinit",
          "type": "blob",
          "size": 16.9052734375,
          "content": "# gdb macros which may be useful for folks using gdb to debug\n# apache.  Delete it if it bothers you.\n\ndefine dump_table\n    set $t = (apr_table_entry_t *)((apr_array_header_t *)$arg0)->elts\n    set $n = ((apr_array_header_t *)$arg0)->nelts\n    set $i = 0\n    while $i < $n\n        if $t[$i].val == (void *)0L\n            printf \"[%u] '%s'=>NULL\\n\", $i, $t[$i].key\n        else\n            printf \"[%u] '%s'='%s' [%p]\\n\", $i, $t[$i].key, $t[$i].val, $t[$i].val\n        end\n        set $i = $i + 1\n    end\nend\ndocument dump_table\n    Print the key/value pairs in a table.\nend\n\ndefine dump_skiplist\n    set $sl = (apr_skiplist *)$arg0\n    set $m = $sl->bottom\n    printf \"skiplist@%p: size=%lu: height=%d\\n\", $sl, $sl->size, $sl->height\n    while ($m)\n        printf \"(%p,%.12lx)\", $m, $m->data\n        set $u = $m->up\n        while ($u)\n            printf \" (%p,%.12lx)\", $u, $u->data\n            set $u = $u->up\n        end\n        printf \"\\n\"\n        set $m = $m->next\n    end\nend\ndocument dump_skiplist\n    Print the nodes/values in a skiplist\nend\n\ndefine dump_string_hash\n    set $h = $arg0->array\n    set $n = $arg0->max\n    set $i = 0\n    while $i < $n\n        set $ent = $h[$i]       \n        while $ent != (void *)0L\n            printf \"'%s' => '%p'\\n\", $ent->key, $ent->val\n            set $ent = $ent->next\n        end\n        set $i = $i + 1\n    end\nend\ndocument dump_string_hash\n    Print the entries in a hash table indexed by strings\nend\n\ndefine dump_string_shash\n    set $h = $arg0->array\n    set $n = $arg0->max\n    set $i = 0\n    while $i < $n\n        set $ent = $h[$i]       \n        while $ent != (void *)0L\n            printf \"'%s' => '%s'\\n\", $ent->key, $ent->val\n            set $ent = $ent->next\n        end\n        set $i = $i + 1\n    end\nend\ndocument dump_string_shash\n    Print the entries in a hash table indexed by strings with string values\nend\n\ndefine ro\n    run -DONE_PROCESS\nend\n\ndefine dump_string_array\n    set $a = (char **)((apr_array_header_t *)$arg0)->elts\n    set $n = (int)((apr_array_header_t *)$arg0)->nelts\n    set $i = 0\n    while $i < $n\n        printf \"[%u] '%s'\\n\", $i, $a[$i]\n        set $i = $i + 1\n    end\nend\ndocument dump_string_array\n    Print all of the elements in an array of strings.\nend\n\ndefine printmemn\n    set $i = 0\n    while $i < $arg1\n        if $arg0[$i] < 0x20 || $arg0[$i] > 0x7e\n            printf \"~\"\n        else\n            printf \"%c\", $arg0[$i]\n        end\n        set $i = $i + 1\n    end\nend\n\ndefine print_bkt_datacol\n    # arg0 == column name\n    # arg1 == format\n    # arg2 == value\n    # arg3 == suppress header?\n    set $suppressheader = $arg3\n\n    if !$suppressheader\n        printf \" \"\n        printf $arg0\n        printf \"=\"\n    else\n        printf \" | \"\n    end\n    printf $arg1, $arg2\nend\n\ndefine dump_bucket_ex\n    # arg0 == bucket\n    # arg1 == suppress header?\n    set $bucket = (struct apr_bucket *)$arg0\n    set $sh = $arg1\n    set $refcount = -1\n\n    print_bkt_datacol \"bucket\" \"%-9s\" $bucket->type->name $sh\n    printf \"(%12lx)\", (unsigned long)$bucket\n    print_bkt_datacol \"length\" \"%-6ld\" (long)($bucket->length) $sh\n    print_bkt_datacol \"data\" \"%12lx\" $bucket->data $sh\n\n    if !$sh\n        printf \"\\n    \"\n    end\n\n    if (($bucket->type == &apr_bucket_type_eos)   || \\\n        ($bucket->type == &apr_bucket_type_flush))\n\n        # metadata buckets, no content\n        print_bkt_datacol \"contents\" \"%c\" ' ' $sh\n        printf \"                     \"\n        print_bkt_datacol \"rc\" \"n/%c\" 'a' $sh\n\n    else\n    if ($_streq($bucket->type->name, \"ERROR\"))\n\n        # metadata bucket, no content but it does have an error code in it\n        print_bkt_datacol \"contents\" \"%c\" ' ' $sh\n        set $status = ((ap_bucket_error *)$bucket->data)->status\n        printf \" (status=%3d)        \", $status\n        print_bkt_datacol \"rc\" \"n/%c\" 'a' $sh\n\n    else\n    if ($bucket->type == &apr_bucket_type_file)\n\n        # file bucket, can show fd and refcount\n        set $fd = ((apr_bucket_file*)$bucket->data)->fd->filedes\n        print_bkt_datacol \"contents\" \"[***file***] fd=%-6ld\" (long)$fd $sh\n        set $refcount = ((apr_bucket_refcount *)$bucket->data)->refcount\n        print_bkt_datacol \"rc\" \"%-3d\" $refcount $sh\n\n    else\n    if (($bucket->type == &apr_bucket_type_heap)      || \\\n        ($bucket->type == &apr_bucket_type_pool)      || \\\n        ($bucket->type == &apr_bucket_type_mmap)      || \\\n        ($bucket->type == &apr_bucket_type_transient) || \\\n        ($bucket->type == &apr_bucket_type_immortal))\n\n        # in-memory buckets\n\n        if $bucket->type == &apr_bucket_type_heap\n            set $refcount = ((apr_bucket_refcount *)$bucket->data)->refcount\n            set $p = (apr_bucket_heap *)$bucket->data\n            set $data = $p->base+$bucket->start\n\n        else\n        if $bucket->type == &apr_bucket_type_pool\n            set $refcount = ((apr_bucket_refcount *)$bucket->data)->refcount\n            set $p = (apr_bucket_pool *)$bucket->data\n            if !$p->pool\n                set $p = (apr_bucket_heap *)$bucket->data\n            end\n            set $data = $p->base+$bucket->start\n\n        else\n        if $bucket->type == &apr_bucket_type_mmap\n            # is this safe if not APR_HAS_MMAP?\n            set $refcount = ((apr_bucket_refcount *)$bucket->data)->refcount\n            set $p = (apr_bucket_mmap *)$bucket->data\n            set $data = ((char *)$p->mmap->mm)+$bucket->start\n\n        else\n        if (($bucket->type == &apr_bucket_type_transient) || \\\n            ($bucket->type == &apr_bucket_type_immortal))\n            set $data = ((char *)$bucket->data)+$bucket->start\n\n        end\n        end\n        end\n        end\n\n        if $sh\n            printf \" | [\"\n        else\n            printf \" contents=[\"\n        end\n        set $datalen = $bucket->length\n        if $isValidAddress($data) == 1\n            if $datalen > 17\n                printmem $data 17\n                printf \"...\"\n                set $datalen = 20\n            else\n                printmemn $data $datalen\n            end\n            printf \"]\"\n            while $datalen < 20\n                printf \" \"\n                set $datalen = $datalen + 1\n            end\n        else\n            printf \"Iv addr %12lx]\", $data\n        end\n\n        if $refcount != -1\n            print_bkt_datacol \"rc\" \"%-3d\" $refcount $sh\n        else\n            print_bkt_datacol \"rc\" \"n/%c\" 'a' $sh\n        end\n\n    else\n        if ($bucket->type == &apr_bucket_type_pipe)\n\n            # pipe bucket, can show fd\n            set $fd = ((apr_file_t*)$bucket->data)->filedes\n            print_bkt_datacol \"contents\" \"[***pipe***] fd=%-3ld\" (long)$fd $sh\n\n        else\n        if ($bucket->type == &apr_bucket_type_socket)\n\n            # file bucket, can show fd\n            set $fd = ((apr_socket_t*)$bucket->data)->socketdes\n            print_bkt_datacol \"contents\" \"[**socket**] fd=%-3ld\" (long)$fd $sh\n\n        else\n\n            # 3rd-party bucket type\n            print_bkt_datacol \"contents\" \"[**opaque**]%-7c\" ' ' $sh\n        end\n        end\n\n        # no refcount\n        printf \"   \"\n        print_bkt_datacol \"rc\" \"n/%c\" 'a' $sh\n    end\n    end\n    end\n    end\n\n    printf \"\\n\"\n\nend\n\ndefine dump_bucket\n    dump_bucket_ex $arg0 0\nend\ndocument dump_bucket\n    Print bucket info\nend\n\ndefine dump_brigade\n    set $bb = (apr_bucket_brigade *)$arg0\n    set $bucket = $bb->list.next\n    set $sentinel = ((char *)((&($bb->list)) \\\n                               - ((size_t) &((struct apr_bucket *)0)->link)))\n    printf \"dump of brigade 0x%lx\\n\", (unsigned long)$bb\n\n    printf \"   | type     (address)      | length | \"\n    printf \"data address | contents               | rc\\n\"\n    printf \"-------------------------------------------\"\n    printf \"----------------------------------------\\n\"\n\n    if $bucket == $sentinel\n        printf \"brigade is empty\\n\"\n    end\n\n    set $j = 0\n    set $brigade_length = 0\n    while $bucket != $sentinel\n        printf \"%2d\", $j\n        dump_bucket_ex $bucket 1\n        set $j = $j + 1\n        if $bucket->length > 0\n            set $brigade_length = $brigade_length + $bucket->length\n        end\n        set $bucket = $bucket->link.next\n    end\n    printf \"end of brigade\\n\"\n    printf \"Length of brigade (excluding buckets of unknown length): %u\\n\", $brigade_length\nend\ndocument dump_brigade\n    Print bucket brigade info\nend\n\ndefine dump_filters\n    set $f = $arg0\n    while $f\n        printf \"%s(0x%lx): ctx=0x%lx, r=0x%lx, c=0x%lx\\n\", \\\n        $f->frec->name, (unsigned long)$f, (unsigned long)$f->ctx, \\\n        $f->r, $f->c\n        set $f = $f->next\n    end\nend\ndocument dump_filters\n    Print filter chain info\nend\n\ndefine dump_filter_chain\n    set $r = $arg0\n    set $f = $r->output_filters\n    while $f\n        if $f == $r->output_filters\n            printf \"r->output_filters =>\\n\"\n        end\n        if $f == $r->proto_output_filters\n            printf \"r->proto_output_filters =>\\n\"\n        end\n        if $f == $r->connection->output_filters\n            printf \"r->connection->output_filters =>\\n\"\n        end\n        \n        printf \"  %s(0x%lx): type=%d, ctx=0x%lx, r=%s(0x%lx), c=0x%lx\\n\", \\\n          $f->frec->name, (unsigned long)$f, $f->frec->ftype, (unsigned long)$f->ctx, \\\n          $f->r == $r ? \"r\" : ($f->r == 0L ? \"null\" : \\\n          ($f->r == $r->main ? \"r->main\" :  \\\n          ($r->main && $f->r == $r->main->main ? \"r->main->main\" : \"????\"))), \\\n          $f->r, $f->c\n\n        set $f = $f->next\n    end\nend\ndocument dump_filter_chain\n    Print filter chain info given a request_rec pointer\nend\n\ndefine dump_process_rec\n    set $p = $arg0\n    printf \"process_rec=0x%lx:\\n\", (unsigned long)$p\n    printf \"   pool=0x%lx, pconf=0x%lx\\n\", \\\n           (unsigned long)$p->pool, (unsigned long)$p->pconf\nend\ndocument dump_process_rec\n    Print process_rec info\nend\n\ndefine dump_server_addr_recs\n    set $sa_ = $arg0\n    set $san_ = 0\n    while $sa_\n      ### need to call apr_sockaddr_info_getbuf to print ->host_addr properly\n      ### which is a PITA since we need a buffer :(\n      printf \" addr#%d: vhost=%s -> :%d\\n\", $san_++, $sa_->virthost, $sa_->host_port\n      set $sa_ = $sa_->next\n    end\nend\ndocument dump_server_addr_recs\n    Print server_addr_rec info\nend\n\n\ndefine dump_server_rec\n    set $s = $arg0\n    printf \"name=%s:%d (0x%lx)\\n\", \\\n            $s->server_hostname, $s->port, $s\n    dump_server_addr_recs $s->addrs\n    dump_process_rec($s->process)\nend\ndocument dump_server_rec\n    Print server_rec info\nend\n\ndefine dump_servers\n    set $s = $arg0\n    while $s\n        dump_server_rec($s)\n        printf \"\\n\"\n        set $s = $s->next\n    end\nend\ndocument dump_servers\n    Print server_rec list info\nend\n\ndefine dump_request_tree\n    set $r = $arg0\n    set $i\n    while $r\n        printf \"r=(0x%lx): uri=%s, handler=%s, r->main=0x%lx\\n\", \\\n          $r, $r->unparsed_uri, $r->handler ? $r->handler : \"(none)\", $r->main\n        set $r = $r->main\n    end\nend        \n\ndefine dump_scoreboard\n    # Need to reserve size of array first before string literals could be\n    # put in\n    set $status = {0, 1, 2, 3, 4 ,5 ,6 ,7 ,8 ,9 ,10}\n    set $status = {\"DEAD\", \"STARTING\", \"READY\", \"BUSY_READ\", \"BUSY_WRITE\", \"BUSY_KEEPALIVE\", \"BUSY_LOG\", \"BUSY_DNS\", \"CLOSING\", \"GRACEFUL\", \"IDLE_KILL\"}\n    set $i = 0\n    while ($i < server_limit)\n        if ap_scoreboard_image->servers[$i][0].pid != 0\n            set $j = 0\n            while ($j < threads_per_child)\n                set $ws = ap_scoreboard_image->servers[$i][$j]\n                printf \"pid: %d, tid: 0x%lx, status: %s\\n\", $ws.pid, $ws.tid, $status[$ws.status]\n                set $j = $j +1\n            end\n        end\n        set $i = $i +1\n    end\nend\ndocument dump_scoreboard\n    Dump the scoreboard\nend\n\ndefine dump_allocator\n    printf \"Allocator current_free_index = %d, max_free_index = %d\\n\", \\\n            ($arg0)->current_free_index, ($arg0)->max_free_index\n    printf \"Allocator free list:\\n\"\n    set $i = 0\n    set $max =(sizeof $arg0->free)/(sizeof $arg0->free[0])\n    set $kb = 0\n    while $i < $max\n        set $node = $arg0->free[$i]\n        if $node != 0\n            printf \" #%2d: \", $i\n            while $node != 0\n                printf \"%d, \", ($node->index + 1) << 12\n                set $kb = $kb + (($node->index + 1) << 2)\n                set $node = $node->next\n            end\n            printf \"ends.\\n\"\n        end\n        set $i = $i + 1\n    end\n    printf \"Sum of free blocks: %dkiB\\n\", $kb\nend\ndocument dump_allocator\n    Print status of an allocator and its freelists.\nend\n\ndefine dump_one_pool\n    set $p = $arg0\n    set $size = 0\n    set $free = 0\n    set $nodes = 0\n    set $node = $arg0->active\n    set $done = 0\n    while $done == 0\n        set $size = $size + (($node->index + 1) << 12)\n        set $free = $free + ($node->endp - $node->first_avail)\n        set $nodes = $nodes + 1\n        set $node = $node->next\n        if $node == $arg0->active\n            set $done = 1\n        end\n    end\n    printf \"Pool '\"\n    if $p->tag\n        printf \"%s\", $p->tag\n    else\n        printf \"no tag\"\n    end\n    printf \"' [%p]: %d/%d free (%d blocks)\\n\", $p, $free, $size, $nodes\nend\n\ndefine dump_all_pools\n    if $argc > 0\n        set $root = $arg0\n    else\n        set $root = ap_pglobal\n    end\n    while $root->parent\n        set $root = $root->parent\n    end\n    dump_pool_and_children $root\nend\ndocument dump_all_pools\n    Dump the whole pool hierarchy starting from apr_global_pool. Optionally takes an arbitrary pool as starting parameter.\nend\n\npython\n\nfrom __future__ import print_function\n\nclass DumpPoolAndChilds (gdb.Command):\n  \"\"\"Dump the whole pool hierarchy starting from the given pool.\"\"\"\n\n  def __init__ (self):\n    super (DumpPoolAndChilds, self).__init__ (\"dump_pool_and_children\", gdb.COMMAND_USER)\n\n  def _allocator_free_blocks(self, alloc):\n    salloc = \"%s\" % (alloc)\n    if self.total_free_blocks.get(salloc) != None:\n      return self.total_free_blocks[salloc]\n    i = 0\n    dalloc = alloc.dereference()\n    max =(dalloc['free'].type.sizeof)/(dalloc['free'][0].type.sizeof)\n    kb = 0\n    while i < max:\n      node = dalloc['free'][i]\n      if node != 0:\n        while node != 0:\n          noded = node.dereference()\n          kb = kb + ((int(noded['index']) + 1) << 2)\n          node = noded['next']\n      i = i + 1\n    self.total_free_blocks[salloc] = kb\n    return kb\n\n\n  def _dump_one_pool(self, arg, depth):\n    size = 0\n    free = 0\n    nodes = 0\n    indent = depth * 4 + 1\n    darg = arg.dereference()\n    active = darg['active']\n    node = active\n    done = 0\n    while done == 0:\n      noded = node.dereference()\n      size = size + ((int(noded['index']) + 1) << 12)\n      free = free + (noded['endp'] - noded['first_avail'])\n      nodes = nodes + 1\n      node = noded['next']\n      if node == active:\n        done = 1\n    if darg['tag'] != 0:\n      tag = darg['tag'].string()\n    else:\n      tag = \"No tag\"\n    print(\"%*cPool '%s' [%s]: %d/%d free (%d blocks) allocator: %s free blocks in allocator: %i kiB\" % \\\n          (indent, ' ', tag, arg, free, size, nodes, darg['allocator'], \\\n           self._allocator_free_blocks(darg['allocator'])))\n    self.free = self.free + free\n    self.size = self.size + size\n    self.nodes = self.nodes + nodes\n    c_num = 0\n    c = darg['pre_cleanups']\n    if c:\n        print(\"%*cCleanups (pre):\" % (indent + 1, ' '))\n    while c:\n        c_num = c_num + 1\n        dc = c.dereference()\n        print(\"%*c%.3i: data = %s, plain_cleanup = %s\" % \\\n              (indent + 2, ' ', c_num, \\\n               dc['data'], dc['plain_cleanup_fn'].dereference()))\n        c = dc['next']\n    c = darg['cleanups']\n    if c:\n        print(\"%*cCleanups (post):\" % (indent + 1, ' '))\n    while c:\n        c_num = c_num + 1\n        dc = c.dereference()\n        print(\"%*c%.3i: data = %s, plain_cleanup = %s, child_cleanup = %s\" % \\\n              (indent + 2, ' ', c_num, \\\n               dc['data'], dc['plain_cleanup_fn'].dereference(), \\\n               dc['child_cleanup_fn'].dereference()))\n        c = dc['next']\n\n  def _dump(self, arg, depth):\n    pool = arg\n    while pool:\n        self._dump_one_pool(pool, depth)\n        if pool['child'] != 0:\n            self._dump(pool['child'], depth + 1)\n        pool = pool['sibling']\n\n  def invoke (self, arg, from_tty):\n    pool = gdb.parse_and_eval(arg)\n    self.free = 0\n    self.size = 0\n    self.nodes = 0\n    self.total_free_blocks = {}\n    self._dump(pool, 0)\n    print(\"Total %d/%d free (%d blocks)\" % (self.free, self.size, self.nodes))\n    sum = 0\n    for key in self.total_free_blocks:\n      sum = sum + self.total_free_blocks[key]\n    print(\"Total free allocator blocks: %i kiB\" % (sum))\n\nDumpPoolAndChilds ()\nend\ndocument dump_pool_and_children\n    Dump the whole pool hierarchy starting from the given pool.\nend\n\npython\n\nclass isValidAddress (gdb.Function):\n    \"\"\"Determines if the argument is a valid address.\"\"\"\n\n    def __init__(self):\n        super(isValidAddress, self).__init__(\"isValidAddress\")\n\n    def invoke(self, address):\n        inf = gdb.inferiors()[0]\n        result = 1\n        try:\n            inf.read_memory(address, 8)\n        except:\n            result = 0\n        return result\n\nisValidAddress()\n\nend\n\n# Set sane defaults for common signals:\nhandle SIGPIPE noprint pass nostop\nhandle SIGUSR1 print pass nostop\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 5.4248046875,
          "content": "# global\n.deps\n.libs\n*.swp\n*.o\n*.a\n*.lo\n*.la\n*.slo\n*.so\n*.vcproj\n*.vcproj.*\n*.x\n*.aps\n*.plg\n*.dep\n*.rc\n*.stc\n*.stt\n*.sto\n*.mak\nMakefile\nmodules.mk\nBuildLog.htm\nDebug\nRelease\n\n# /\n/config.nice\n/configure\n/missing\n/install-sh\n/mkinstalldirs\n/aclocal.m4\n/generated_lists\n/buildmk.stamp\n/config.log\n/libtool\n/shlibtool\n/config.status\n/modules.c\n/config.cache\n/httpd\n/httpd.exe\n/LibD\n/LibR\n/Apache.suo\n/Apache.ncb\n/Apache.opt\n/apachecore.dll\n/Apache.sln\n/autom4te.cache\n/httpd.spec\n/tags\n/TAGS\n/*.kdev4\n/.kdev_include_paths\n/.cproject\n/.project\n\n# /built/\n/built/\n\n# /cmake-build-debug/\n/cmake-build-debug/\n\n# /build/\n/build/rules.mk\n/build/config_vars.mk\n/build/apr_common.m4\n/build/find_apr.m4\n/build/find_apu.m4\n/build/ltconfig\n/build/ltmain.sh\n/build/PrintPath\n/build/config.sub\n/build/config.guess\n/build/config_vars.sh\n/build/confdefs.h\n/build/config.log\n/build/config.nice\n/build/srclib/\n/build/srclib/pth\n/build/srclib/apr\n/build/srclib/apr-util\n/build/srclib/apr-iconv\n/build/srclib/distcache\n/build/srclib/lua\n/build/srclib/pcre\n/build/srclib/openssl\n/build/srclib/zlib\n\n# /build/pkg/\n/build/pkg/pkginfo\n\n# /build/win32/\n!/build/win32/httpd.rc\n\n# /docs/\n/docs/dox\n\n# /docs/conf/\n/docs/conf/httpd-std.conf\n/docs/conf/ssl-std.conf\n/docs/conf/httpd.conf\n\n# /docs/conf/extra/\n/docs/conf/extra/*.conf\n\n# /docs/log-message-tags/\n/docs/log-message-tags/list\n\n# /docs/manual/\n/docs/manual/_chm\n/docs/manual/_off\n/docs/manual/_tools\n/docs/manual/_dist\n/docs/manual/build\n/docs/manual/*.tex\n/docs/manual/*.aux\n/docs/manual/*.out\n/docs/manual/*.log\n/docs/manual/*.pdf\n/docs/manual/*.toc\n/docs/manual/.outdated*\n\n# /docs/manual/developer/\n/docs/manual/developer/*.tex\n/docs/manual/developer/*.aux\n\n# /docs/manual/faq/\n/docs/manual/faq/*.tex\n/docs/manual/faq/*.aux\n\n# /docs/manual/howto/\n/docs/manual/howto/*.aux\n/docs/manual/howto/*.tex\n/docs/manual/howto/Working-Copy.txt\n\n# /docs/manual/misc/\n/docs/manual/misc/*.tex\n/docs/manual/misc/*.aux\n\n# /docs/manual/mod/\n/docs/manual/mod/*.tex\n/docs/manual/mod/*.aux\n/docs/manual/mod/.translated.*\n\n# /docs/manual/platform/\n/docs/manual/platform/*.tex\n/docs/manual/platform/*.aux\n\n# /docs/manual/programs/\n/docs/manual/programs/*.tex\n/docs/manual/programs/*.aux\n\n# /docs/manual/rewrite/\n/docs/manual/rewrite/_chm\n/docs/manual/rewrite/_off\n/docs/manual/rewrite/_tools\n/docs/manual/rewrite/_dist\n/docs/manual/rewrite/build\n/docs/manual/rewrite/*.tex\n/docs/manual/rewrite/*.aux\n/docs/manual/rewrite/*.out\n/docs/manual/rewrite/*.log\n/docs/manual/rewrite/*.pdf\n/docs/manual/rewrite/*.toc\n/docs/manual/rewrite/.outdated*\n\n# /docs/manual/ssl/\n/docs/manual/ssl/*.tex\n/docs/manual/ssl/*.aux\n\n# /docs/manual/style/\n/docs/manual/style/_generated\n\n# /docs/manual/vhosts/\n/docs/manual/vhosts/*.tex\n/docs/manual/vhosts/*.aux\n\n# /include/\n/include/ap_config_auto.h\n/include/ap_config_auto.h.in\n/include/ap_config_layout.h\n/include/ap_ldap.h\n/include/mod_cgi.h\n/include/mod_dav.h\n/include/mod_include.h\n/include/mod_proxy.h\n/include/mod_so.h\n/include/mpm.h\n/include/mpm_default.h\n/include/os.h\n\n# /modules/aaa/\n\n# /modules/apreq/\n\n# /modules/arch/\n\n# /modules/arch/unix/\n\n# /modules/arch/win32/\n\n# /modules/cache/\n\n# /modules/cluster/\n\n# /modules/core/\n\n# /modules/core/test/\n/modules/core/test/out\n\n# /modules/database/\n\n# /modules/dav/\n\n# /modules/dav/fs/\n\n# /modules/dav/lock/\n\n# /modules/dav/main/\n\n# /modules/debugging/\n\n# /modules/echo/\n\n# /modules/examples/\n\n# /modules/experimental/\n\n# /modules/filters/\n\n# /modules/generators/\n\n# /modules/http/\n\n# /modules/http2/\n\n# /modules/ldap/\n\n# /modules/loggers/\n\n# /modules/lua/\n\n# /modules/lua/test/\n/modules/lua/test/cycle\n/modules/lua/test/httpd.conf\n\n# /modules/mappers/\n\n# /modules/md/\n/modules/md/a2md\n\n# /modules/metadata/\n\n# /modules/proxy/\n\n# /modules/proxy/balancers/\n\n# /modules/proxy/examples/\n\n# /modules/session/\n\n# /modules/slotmem/\n\n# /modules/ssl/\n\n# /modules/test/\n\n# /os/\n\n# /os/bs2000/\n\n# /os/os2/\n\n# /os/unix/\n\n# /os/win32/\n/os/win32/*.mdp\n/os/win32/*.ncb\n/os/win32/*.opt\n/os/win32/*.dsw\n/os/win32/mod_*D\n/os/win32/mod_*R\n\n# /server/\n/server/test_char.h\n/server/gen_test_char\n/server/gen_test_char.exe\n/server/gen_test_char.exe.manifest\n/server/export_files\n/server/exports.c\n/server/export_vars.h\n/server/ApacheCoreOS2.def\n/server/httpd.exp\n/server/buildmarked.c\n\n# /server/mpm/\n\n# /server/mpm/event/\n\n# /server/mpm/motorz/\n\n# /server/mpm/mpmt_os2/\n\n# /server/mpm/prefork/\n\n# /server/mpm/simple/\n\n# /server/mpm/winnt/\n\n# /server/mpm/worker/\n\n# /srclib/\n/srclib/pth\n/srclib/apr\n/srclib/apr-util\n/srclib/apr-iconv\n/srclib/distcache\n/srclib/lua\n/srclib/pcre\n/srclib/openssl\n/srclib/zlib\n\n# /support/\n/support/rotatelogs\n/support/htpasswd\n/support/htdbm\n/support/htdigest\n/support/htcacheclean\n/support/unescape\n/support/inc2shtml\n/support/httpd_monitor\n/support/suexec\n/support/logresolve\n/support/ab\n/support/apxs\n/support/apachectl\n/support/checkgid\n/support/dbmmanage\n/support/envvars-std\n/support/log_server_status\n/support/logresolve.pl\n/support/split-logfile\n/support/phf_abuse_log.cgi\n/support/httxt2dbm\n/support/fcgistarter\n/support/firehose\n/support/*.exe\n\n# /support/win32/\n!/support/win32/ApacheMonitor.rc\n/support/win32/ApacheMonitorVer.rc\n\n# /test/\n/test/a.out\n/test/time-FCNTL\n/test/time-FLOCK\n/test/time-SYSVSEM\n/test/time-SYSVSEM2\n/test/time-PTHREAD\n/test/time-USLOCK\n/test/zb\n/test/test-writev\n/test/test_date\n/test/test_select\n/test/dbu\n/test/sni\n/test/httpdunit\n/test/httpdunit.cases\n\n# /test/unit/\n/test/unit/*.tests\n\n# Intellij\n/.idea/\n\n# pytest\ntest/__pycache__\ntest/*/__pycache__\ntest/*/*/__pycache__\n\n# make check\ncheck\nbuild/config_vars.out\n"
        },
        {
          "name": "ABOUT_APACHE",
          "type": "blob",
          "size": 13.1796875,
          "content": "\n                     The Apache HTTP Server Project\n\n                        http://httpd.apache.org/\n\nThe Apache HTTP Server Project is a collaborative software development effort\naimed at creating a robust, commercial-grade, featureful, and freely-available\nsource code implementation of an HTTP (Web) server. The project is jointly \nmanaged by a group of volunteers located around the world, using the Internet\nand the Web to communicate, plan, and develop the server and its related \ndocumentation. In addition, hundreds of users have contributed ideas, code, \nand documentation to the project.\n\nThis file is intended to briefly describe the history of the Apache Group (as \nit was called in the early days), recognize the many contributors, and explain\nhow you can join the fun too.\n\nIn February of 1995, the most popular server software on the Web was the\npublic domain HTTP daemon developed by Rob McCool at the National Center\nfor Supercomputing Applications, University of Illinois, Urbana-Champaign.\nHowever, development of that httpd had stalled after Rob left NCSA in\nmid-1994, and many webmasters had developed their own extensions and bug\nfixes that were in need of a common distribution. A small group of these\nwebmasters, contacted via private e-mail, gathered together for the purpose\nof coordinating their changes (in the form of \"patches\"). Brian Behlendorf\nand Cliff Skolnick put together a mailing list, shared information space,\nand logins for the core developers on a machine in the California Bay Area,\nwith bandwidth and diskspace donated by HotWired and Organic Online.\nBy the end of February, eight core contributors formed the foundation\nof the original Apache Group:\n\n   Brian Behlendorf        Roy T. Fielding          Rob Hartill\n   David Robinson          Cliff Skolnick           Randy Terbush\n   Robert S. Thau          Andrew Wilson\n\nwith additional contributions from\n\n   Eric Hagberg            Frank Peters             Nicolas Pioch\n\nUsing NCSA httpd 1.3 as a base, we added all of the published bug fixes\nand worthwhile enhancements we could find, tested the result on our own\nservers, and made the first official public release (0.6.2) of the Apache\nserver in April 1995. By coincidence, NCSA restarted their own development\nduring the same period, and Brandon Long and Beth Frank of the NCSA Server\nDevelopment Team joined the list in March as honorary members so that the\ntwo projects could share ideas and fixes.\n\nThe early Apache server was a big hit, but we all knew that the codebase\nneeded a general overhaul and redesign. During May-June 1995, while\nRob Hartill and the rest of the group focused on implementing new features\nfor 0.7.x (like pre-forked child processes) and supporting the rapidly growing\nApache user community, Robert Thau designed a new server architecture\n(code-named Shambhala) which included a modular structure and API for better\nextensibility, pool-based memory allocation, and an adaptive pre-forking\nprocess model. The group switched to this new server base in July and added\nthe features from 0.7.x, resulting in Apache 0.8.8 (and its brethren)\nin August.\n\nAfter extensive beta testing, many ports to obscure platforms, a new set\nof documentation (by David Robinson), and the addition of many features\nin the form of our standard modules, Apache 1.0 was released on\nDecember 1, 1995.\n\nLess than a year after the group was formed, the Apache server passed\nNCSA's httpd as the #1 server on the Internet.\n\nThe survey by Netcraft (http://www.netcraft.com/survey/) shows that Apache\nis today more widely used than all other web servers combined.\n\n ============================================================================\n\nThe current project management committee of the Apache HTTP Server\nproject (as of March, 2011) is:\n\n    Aaron Bannert       André Malo              Astrid Stolper\n    Ben Laurie          Bojan Smojver           Brad Nicholes\n    Brian Havard        Brian McCallister       Chris Darroch\n    Chuck Murcko        Colm MacCárthaigh       Dan Poirier\n    Dirk-Willem van Gulik                       Doug MacEachern     \n    Eric Covener        Erik Abele              Graham Dumpleton    \n    Graham Leggett      Greg Ames               Greg Stein \n    Gregory Trubetskoy  Guenter Knauf           Issac Goldstand     \n    Jeff Trawick        Jim Gallacher           Jim Jagielski      \n    Joe Orton           Joe Schaefer            Joshua Slive\n    Justin Erenkrantz   Ken Coar                Lars Eilebrecht\n    Manoj Kasichainula  Marc Slemko             Mark J. Cox\n    Martin Kraemer      Maxime Petazzoni        Nick Kew\n    Nicolas Lehuen      Noirin Shirley          Paul Querna\n    Philip M. Gollucci  Ralf S. Engelschall     Randy Kobes\n    Rasmus Lerdorf      Rich Bowen              Roy T. Fielding\n    Rüdiger Plüm        Sander Striker          Sander Temm\n    Stefan Fritsch      Tony Stevenson          Victor J. Orlikowski\n    Wilfredo Sanchez    William A. Rowe Jr.     Yoshiki Hayashi     \n\nOther major contributors\n\n   Howard Fear (mod_include), Florent Guillaume (language negotiation),\n   Koen Holtman (rewrite of mod_negotiation),\n   Kevin Hughes (creator of all those nifty icons),\n   Brandon Long and Beth Frank (NCSA Server Development Team, post-1.3),\n   Ambarish Malpani (Beginning of the NT port),\n   Rob McCool (original author of the NCSA httpd 1.3),\n   Paul Richards (convinced the group to use remote CVS after 1.0),\n   Garey Smiley (OS/2 port), Henry Spencer (author of the regex library).\n\nMany 3rd-party modules, frequently used and recommended, are also\nfreely-available and linked from the related projects page:\n<http://modules.apache.org/>, and their authors frequently\ncontribute ideas, patches, and testing.\n\nHundreds of people have made individual contributions to the Apache\nproject. Patch contributors are listed in the CHANGES file.\n\n ============================================================================\n\nHow to become involved in the Apache project\n\nThere are several levels of contributing. If you just want to send\nin an occasional suggestion/fix, then you can just use the bug reporting\nform at <http://httpd.apache.org/bug_report.html>. You can also subscribe\nto the announcements mailing list (announce-subscribe@httpd.apache.org) which\nwe use to broadcast information about new releases, bugfixes, and upcoming\nevents. There's a lot of information about the development process (much of\nit in serious need of updating) to be found at <http://httpd.apache.org/dev/>.\n\nIf you'd like to become an active contributor to the Apache project (the\ngroup of volunteers who vote on changes to the distributed server), then\nyou need to start by subscribing to the dev@httpd.apache.org mailing list.\nOne warning though: traffic is high, 1000 to 1500 messages/month.\nTo subscribe to the list, send an email to dev-subscribe@httpd.apache.org.\nWe recommend reading the list for a while before trying to jump in to\ndevelopment.\n\n   NOTE: The developer mailing list (dev@httpd.apache.org) is not\n   a user support forum; it is for people actively working on development\n   of the server code and documentation, and for planning future\n   directions. If you have user/configuration questions, send them\n   to users list <http://httpd.apache.org/userslist> or to the USENET\n   newsgroup \"comp.infosystems.www.servers.unix\".or for windows users,\n   the newsgroup \"comp.infosystems.www.servers.ms-windows\".\n\nThere is a core group of contributors (informally called the \"core\")\nwhich was formed from the project founders and is augmented from time\nto time when core members nominate outstanding contributors and the\nrest of the core members agree. The core group focus is more on\n\"business\" issues and limited-circulation things like security problems\nthan on mainstream code development. The term \"The Apache Group\"\ntechnically refers to this core of project contributors.\n\nThe Apache project is a meritocracy--the more work you have done, the more\nyou are allowed to do. The group founders set the original rules, but\nthey can be changed by vote of the active members. There is a group\nof people who have logins on our server (apache.org) and access to the\nsvn repository.  Everyone has access to the svn snapshots.  Changes to\nthe code are proposed on the mailing list and usually voted on by active\nmembers--three +1 (yes votes) and no -1 (no votes, or vetoes) are needed\nto commit a code change during a release cycle; docs are usually committed\nfirst and then changed as needed, with conflicts resolved by majority vote.\n\nOur primary method of communication is our mailing list. Approximately 40\nmessages a day flow over the list, and are typically very conversational in\ntone. We discuss new features to add, bug fixes, user problems, developments\nin the web server community, release dates, etc. The actual code development\ntakes place on the developers' local machines, with proposed changes\ncommunicated using a patch (output of a unified \"diff -u oldfile newfile\"\ncommand), and committed to the source repository by one of the core\ndevelopers using remote svn.  Anyone on the mailing list can vote on a\nparticular issue, but we only count those made by active members or people\nwho are known to be experts on that part of the server. Vetoes must be\naccompanied by a convincing explanation.\n\nNew members of the Apache Group are added when a frequent contributor is\nnominated by one member and unanimously approved by the voting members.\nIn most cases, this \"new\" member has been actively contributing to the\ngroup's work for over six months, so it's usually an easy decision.\n\nThe above describes our past and current (as of July 2000) guidelines,\nwhich will probably change over time as the membership of the group\nchanges and our development/coordination tools improve.\n\n ============================================================================\n\nThe Apache Software Foundation (www.apache.org)\n\nThe Apache Software Foundation exists to provide organizational, legal,\nand financial support for the Apache open-source software projects.\nFounded in June 1999 by the Apache Group, the Foundation has been\nincorporated as a membership-based, not-for-profit corporation in order\nto ensure that the Apache projects continue to exist beyond the participation\nof individual volunteers, to enable contributions of intellectual property\nand funds on a sound basis, and to provide a vehicle for limiting legal\nexposure while participating in open-source software projects. \n\nYou are invited to participate in The Apache Software Foundation. We welcome\ncontributions in many forms. Our membership consists of those individuals\nwho have demonstrated a commitment to collaborative open-source software\ndevelopment through sustained participation and contributions within the\nFoundation's projects. Many people and companies have contributed towards\nthe success of the Apache projects. \n\n ============================================================================\n\nWhy The Apache HTTP Server Is Free\n\nApache HTTP Server exists to provide a robust and commercial-grade reference\nimplementation of the HTTP protocol. It must remain a platform upon which\nindividuals and institutions can build reliable systems, both for\nexperimental purposes and for mission-critical purposes. We believe the\ntools of online publishing should be in the hands of everyone, and\nsoftware companies should make their money providing value-added services\nsuch as specialized modules and support, amongst other things. We realize\nthat it is often seen as an economic advantage for one company to \"own\" a\nmarket - in the software industry that means to control tightly a\nparticular conduit such that all others must pay. This is typically done\nby \"owning\" the protocols through which companies conduct business, at the\nexpense of all those other companies. To the extent that the protocols of\nthe World Wide Web remain \"unowned\" by a single company, the Web will\nremain a level playing field for companies large and small. Thus,\n\"ownership\" of the protocol must be prevented, and the existence of a\nrobust reference implementation of the protocol, available absolutely for\nfree to all companies, is a tremendously good thing. \n\nFurthermore, Apache httpd is an organic entity; those who benefit from it\nby using it often contribute back to it by providing feature enhancements,\nbug fixes, and support for others in public newsgroups. The amount of\neffort expended by any particular individual is usually fairly light, but\nthe resulting product is made very strong. This kind of community can\nonly happen with freeware--when someone pays for software, they usually\naren't willing to fix its bugs. One can argue, then, that Apache's\nstrength comes from the fact that it's free, and if it were made \"not\nfree\" it would suffer tremendously, even if that money were spent on a\nreal development team.\n\nWe want to see Apache httpd used very widely--by large companies, small\ncompanies, research institutions, schools, individuals, in the intranet\nenvironment, everywhere--even though this may mean that companies who\ncould afford commercial software, and would pay for it without blinking,\nmight get a \"free ride\" by using Apache httpd. We would even be happy if \nsome commercial software companies completely dropped their own HTTP server\ndevelopment plans and used Apache httpd as a base, with the proper attributions\nas described in the LICENSE file.\n\nThanks for using Apache HTTP Server!\n\n"
        },
        {
          "name": "Apache-apr2.dsw",
          "type": "blob",
          "size": 68.822265625,
          "content": "Microsoft Developer Studio Workspace File, Format Version 6.00\n# WARNING: DO NOT EDIT OR DELETE THIS WORKSPACE FILE!\n\n###############################################################################\n\nProject: \"httpd\"=\".\\httpd.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"ApacheMonitor\"=.\\support\\win32\\ApacheMonitor.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"BuildAll\"=.\\BuildAll.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name BuildBin\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authnz_ldap\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_bucketeer\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_case_filter\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_case_filter_in\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_echo\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_example_hooks\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_example_ipc\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_lbmethod_rr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"BuildBin\"=.\\BuildBin.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name httpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_apreq\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name ApacheMonitor\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_access_compat\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_actions\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_alias\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_allowhandlers\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_allowmethods\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_asis\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_digest\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_form\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authn_anon\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authn_core\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authn_dbd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authn_dbm\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authn_file\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authn_socache\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authnz_fcgi\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_core\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_dbd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_dbm\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_groupfile\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_host\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_owner\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_user\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_autoindex\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_buffer\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_cache_disk\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_cache_socache\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_cern_meta\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_cgi\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_charset_lite\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_data\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dav_fs\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dav_lock\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dir\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dumpio\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_env\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_expires\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_ext_filter\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_file_cache\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_filter\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_headers\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_heartbeat\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_heartmonitor\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_ident\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_imagemap\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_include\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_info\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_isapi\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_lbmethod_bybusyness\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_lbmethod_byrequests\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_lbmethod_bytraffic\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_lbmethod_heartbeat\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_log_config\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_log_debug\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_log_forensic\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_logio\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_macro\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_mime\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_mime_magic\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_negotiation\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_ajp\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_balancer\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_connect\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_express\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_fcgi\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_ftp\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_hcheck\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_http\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_scgi\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_wstunnel\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_ratelimit\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_reflector\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_remoteip\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_reqtimeout\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_request\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_rewrite\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_sed\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_session_cookie\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_session_dbd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_setenvif\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_slotmem_plain\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_slotmem_shm\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_socache_dbm\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_socache_memcache\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_socache_shmcb\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_socache_redis\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_speling\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_status\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_substitute\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_unique_id\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_userdir\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_usertrack\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_version\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_vhost_alias\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name ab\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name htcacheclean\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name htdbm\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name htdigest\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name htpasswd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name httxt2dbm\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name logresolve\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name rotatelogs\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name wintty\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"InstallBin\"=.\\InstallBin.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name BuildBin\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"ab\"=.\\support\\ab.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"abs\"=.\\support\\abs.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr\"=.\\srclib\\apr\\apr.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name expat_static\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_freetds\"=\".\\srclib\\apr-util\\dbd\\unsupported\\apr_dbd_freetds.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_odbc\"=\".\\srclib\\apr-util\\dbd\\apr_dbd_odbc.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_mysql\"=\".\\srclib\\apr-util\\dbd\\apr_dbd_mysql.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_oracle\"=\".\\srclib\\apr-util\\dbd\\apr_dbd_oracle.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_pgsql\"=\".\\srclib\\apr-util\\dbd\\apr_dbd_pgsql.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_sqlite2\"=\".\\srclib\\apr-util\\dbd\\apr_dbd_sqlite2.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_sqlite3\"=\".\\srclib\\apr-util\\dbd\\apr_dbd_sqlite3.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbm_db\"=\".\\srclib\\apr-util\\dbm\\apr_dbm_db.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbm_gdbm\"=\".\\srclib\\apr-util\\dbm\\apr_dbm_gdbm.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"expat\"=\".\\srclib\\expat\\lib\\expat.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n}}}\n\n###############################################################################\n\nProject: \"expat_static\"=\".\\srclib\\expat\\lib\\expat_static.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n}}}\n\n###############################################################################\n\nProject: \"fcgistarter\"=.\\support\\fcgistarter.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"gen_test_char\"=.\\server\\gen_test_char.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"htcacheclean\"=.\\support\\htcacheclean.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"htdbm\"=.\\support\\htdbm.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"htdigest\"=.\\support\\htdigest.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"htpasswd\"=.\\support\\htpasswd.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"httxt2dbm\"=.\\support\\httxt2dbm.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"libapr\"=.\\srclib\\apr\\libapr.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name expat\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"libapreq\"=.\\libapreq.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libapriconv\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"libhttpd\"=.\\libhttpd.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name gen_test_char\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"logresolve\"=.\\support\\logresolve.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_actions\"=.\\modules\\mappers\\mod_actions.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_alias\"=.\\modules\\mappers\\mod_alias.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_allowhandlers\"=.\\modules\\aaa\\mod_allowhandlers.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_allowmethods\"=.\\modules\\aaa\\mod_allowmethods.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_asis\"=.\\modules\\generators\\mod_asis.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n\n###############################################################################\n\nProject: \"mod_access_compat\"=.\\modules\\aaa\\mod_access_compat.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_auth_basic\"=.\\modules\\aaa\\mod_auth_basic.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_auth_digest\"=.\\modules\\aaa\\mod_auth_digest.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_auth_form\"=.\\modules\\aaa\\mod_auth_form.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authn_anon\"=.\\modules\\aaa\\mod_authn_anon.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authn_core\"=.\\modules\\aaa\\mod_authn_core.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authn_dbd\"=.\\modules\\aaa\\mod_authn_dbd.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dbd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authn_dbm\"=.\\modules\\aaa\\mod_authn_dbm.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authn_file\"=.\\modules\\aaa\\mod_authn_file.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authn_socache\"=.\\modules\\aaa\\mod_authn_socache.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authnz_fcgi\"=.\\modules\\aaa\\mod_authnz_fcgi.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authnz_ldap\"=.\\modules\\aaa\\mod_authnz_ldap.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_ldap\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_core\"=.\\modules\\aaa\\mod_authz_core.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_dbd\"=.\\modules\\aaa\\mod_authz_dbd.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dbd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_dbm\"=.\\modules\\aaa\\mod_authz_dbm.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_groupfile\"=.\\modules\\aaa\\mod_authz_groupfile.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_host\"=.\\modules\\aaa\\mod_authz_host.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_owner\"=.\\modules\\aaa\\mod_authz_owner.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_user\"=.\\modules\\aaa\\mod_authz_user.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_autoindex\"=.\\modules\\generators\\mod_autoindex.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_brotli\"=.\\modules\\filters\\mod_brotli.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_bucketeer\"=.\\modules\\debugging\\mod_bucketeer.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_buffer\"=.\\modules\\filters\\mod_buffer.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_cache\"=.\\modules\\cache\\mod_cache.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_case_filter\"=.\\modules\\examples\\mod_case_filter.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_case_filter_in\"=.\\modules\\examples\\mod_case_filter_in.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_cern_meta\"=.\\modules\\metadata\\mod_cern_meta.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_cgi\"=.\\modules\\generators\\mod_cgi.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_charset_lite\"=.\\modules\\filters\\mod_charset_lite.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_crypto\"=.\\modules\\filters\\mod_crypto.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_data\"=.\\modules\\filters\\mod_data.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_dav\"=.\\modules\\dav\\main\\mod_dav.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_dav_fs\"=.\\modules\\dav\\fs\\mod_dav_fs.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dav\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_dav_lock\"=.\\modules\\dav\\lock\\mod_dav_lock.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dav\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_dbd\"=.\\modules\\database\\mod_dbd.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_deflate\"=.\\modules\\filters\\mod_deflate.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_dir\"=.\\modules\\mappers\\mod_dir.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_cache_disk\"=.\\modules\\cache\\mod_cache_disk.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_cache\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_cache_socache\"=.\\modules\\cache\\mod_cache_socache.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_cache\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_dumpio\"=.\\modules\\debugging\\mod_dumpio.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_echo\"=.\\modules\\echo\\mod_echo.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_env\"=.\\modules\\metadata\\mod_env.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_example_hooks\"=.\\modules\\examples\\mod_example_hooks.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_example_ipc\"=.\\modules\\examples\\mod_example_ipc.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_expires\"=.\\modules\\metadata\\mod_expires.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_ext_filter\"=.\\modules\\filters\\mod_ext_filter.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_file_cache\"=.\\modules\\cache\\mod_file_cache.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_filter\"=.\\modules\\filters\\mod_filter.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_http2\"=.\\modules\\http2\\mod_http2.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_headers\"=.\\modules\\metadata\\mod_headers.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_heartbeat\"=.\\modules\\cluster\\mod_heartbeat.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_watchdog\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_heartmonitor\"=.\\modules\\cluster\\mod_heartmonitor.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_watchdog\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_ident\"=.\\modules\\metadata\\mod_ident.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_imagemap\"=.\\modules\\mappers\\mod_imagemap.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_include\"=.\\modules\\filters\\mod_include.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_info\"=.\\modules\\generators\\mod_info.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_isapi\"=.\\modules\\arch\\win32\\mod_isapi.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_lbmethod_bybusyness\"=.\\modules\\proxy\\balancers\\mod_lbmethod_bybusyness.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_balancer\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_lbmethod_byrequests\"=.\\modules\\proxy\\balancers\\mod_lbmethod_byrequests.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_balancer\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_lbmethod_bytraffic\"=.\\modules\\proxy\\balancers\\mod_lbmethod_bytraffic.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_balancer\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_lbmethod_heartbeat\"=.\\modules\\proxy\\balancers\\mod_lbmethod_heartbeat.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_balancer\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_lbmethod_rr\"=.\\modules\\proxy\\examples\\mod_lbmethod_rr.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_balancer\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_ldap\"=.\\modules\\ldap\\mod_ldap.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_log_config\"=.\\modules\\loggers\\mod_log_config.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_log_debug\"=.\\modules\\loggers\\mod_log_debug.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_log_forensic\"=.\\modules\\loggers\\mod_log_forensic.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_log_json\"=.\\modules\\loggers\\mod_log_json.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_logio\"=.\\modules\\loggers\\mod_logio.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_lua\"=.\\modules\\lua\\mod_lua.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_macro\"=.\\modules\\core\\mod_macro.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_md\"=.\\modules\\md\\mod_md.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_mime\"=.\\modules\\http\\mod_mime.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_mime_magic\"=.\\modules\\metadata\\mod_mime_magic.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_negotiation\"=.\\modules\\mappers\\mod_negotiation.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy\"=.\\modules\\proxy\\mod_proxy.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_ajp\"=.\\modules\\proxy\\mod_proxy_ajp.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_balancer\"=.\\modules\\proxy\\mod_proxy_balancer.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_connect\"=.\\modules\\proxy\\mod_proxy_connect.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_express\"=.\\modules\\proxy\\mod_proxy_express.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_fcgi\"=.\\modules\\proxy\\mod_proxy_fcgi.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n\n###############################################################################\n\nProject: \"mod_proxy_ftp\"=.\\modules\\proxy\\mod_proxy_ftp.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_hcheck\"=.\\modules\\proxy\\mod_proxy_hcheck.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_html\"=.\\modules\\filters\\mod_proxy_html.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_http\"=.\\modules\\proxy\\mod_proxy_http.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_http2\"=.\\modules\\http2\\mod_proxy_http2.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_http2\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_scgi\"=.\\modules\\proxy\\mod_proxy_scgi.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_uwsgi\"=.\\modules\\proxy\\mod_proxy_uwsgi.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_wstunnel\"=.\\modules\\proxy\\mod_proxy_wstunnel.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_ratelimit\"=.\\modules\\filters\\mod_ratelimit.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_reflector\"=.\\modules\\filters\\mod_reflector.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_remoteip\"=.\\modules\\metadata\\mod_remoteip.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_reqtimeout\"=.\\modules\\filters\\mod_reqtimeout.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_request\"=.\\modules\\filters\\mod_request.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_rewrite\"=.\\modules\\mappers\\mod_rewrite.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_sed\"=.\\modules\\filters\\mod_sed.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_serf\"=.\\modules\\proxy\\mod_serf.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_session\"=.\\modules\\session\\mod_session.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_session_crypto\"=.\\modules\\session\\mod_session_crypto.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_session\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_session_cookie\"=.\\modules\\session\\mod_session_cookie.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_session\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_session_dbd\"=.\\modules\\session\\mod_session_dbd.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dbd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_session\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_setenvif\"=.\\modules\\metadata\\mod_setenvif.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_slotmem_plain\"=.\\modules\\slotmem\\mod_slotmem_plain.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_slotmem_shm\"=.\\modules\\slotmem\\mod_slotmem_shm.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_socache_dbm\"=.\\modules\\cache\\mod_socache_dbm.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_socache_dc\"=.\\modules\\cache\\mod_socache_dc.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_socache_memcache\"=.\\modules\\cache\\mod_socache_memcache.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_socache_shmcb\"=.\\modules\\cache\\mod_socache_shmcb.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_socache_redis\"=.\\modules\\cache\\mod_socache_redis.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_speling\"=.\\modules\\mappers\\mod_speling.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_ssl\"=.\\modules\\ssl\\mod_ssl.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_status\"=.\\modules\\generators\\mod_status.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_substitute\"=.\\modules\\filters\\mod_substitute.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_unique_id\"=.\\modules\\metadata\\mod_unique_id.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_userdir\"=.\\modules\\mappers\\mod_userdir.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_usertrack\"=.\\modules\\metadata\\mod_usertrack.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_version\"=.\\modules\\metadata\\mod_version.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_vhost_alias\"=.\\modules\\mappers\\mod_vhost_alias.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_watchdog\"=.\\modules\\core\\mod_watchdog.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_xml2enc\"=.\\modules\\filters\\mod_xml2enc.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"rotatelogs\"=.\\support\\rotatelogs.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"wintty\"=.\\support\\win32\\wintty.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nGlobal:\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<3>\n{{{\n}}}\n\n###############################################################################\n\n"
        },
        {
          "name": "Apache.dsw",
          "type": "blob",
          "size": 84.5703125,
          "content": "Microsoft Developer Studio Workspace File, Format Version 6.00\n# WARNING: DO NOT EDIT OR DELETE THIS WORKSPACE FILE!\n\n###############################################################################\n\nProject: \"httpd\"=\".\\httpd.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"ApacheMonitor\"=.\\support\\win32\\ApacheMonitor.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name aprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"BuildAll\"=.\\BuildAll.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name BuildBin\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_bucketeer\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_case_filter\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_case_filter_in\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_echo\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_example_hooks\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_example_ipc\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_lbmethod_rr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"BuildBin\"=.\\BuildBin.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name httpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_apreq\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name ApacheMonitor\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name apr_ldap\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libapriconv_ces_modules\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libapriconv_ccs_modules\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_access_compat\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_actions\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_alias\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_allowhandlers\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_allowmethods\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_asis\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_digest\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_form\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authn_anon\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authn_core\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authn_dbd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authn_dbm\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authn_file\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authn_socache\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authnz_fcgi\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authnz_ldap\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_core\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_dbd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_dbm\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_groupfile\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_host\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_owner\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_authz_user\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_autoindex\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_buffer\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_cache_disk\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_cache_socache\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_cern_meta\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_cgi\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_charset_lite\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_data\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dav_fs\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dav_lock\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dir\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dumpio\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_env\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_expires\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_ext_filter\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_file_cache\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_filter\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_headers\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_heartbeat\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_heartmonitor\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_ident\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_imagemap\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_include\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_info\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_isapi\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_lbmethod_bybusyness\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_lbmethod_byrequests\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_lbmethod_bytraffic\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_lbmethod_heartbeat\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_log_config\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_log_debug\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_log_forensic\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_logio\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_macro\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_mime\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_mime_magic\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_negotiation\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_ajp\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_balancer\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_connect\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_express\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_fcgi\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_ftp\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_hcheck\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_http\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_scgi\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_uwsgi\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_wstunnel\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_ratelimit\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_reflector\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_remoteip\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_reqtimeout\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_request\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_rewrite\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_sed\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_session_cookie\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_session_dbd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_setenvif\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_slotmem_plain\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_slotmem_shm\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_socache_dbm\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_socache_memcache\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_socache_shmcb\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_socache_redis\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_speling\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_status\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_substitute\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_unique_id\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_userdir\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_usertrack\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_version\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_vhost_alias\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name ab\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name htcacheclean\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name htdbm\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name htdigest\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name htpasswd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name httxt2dbm\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name logresolve\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name rotatelogs\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name wintty\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"InstallBin\"=.\\InstallBin.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name BuildBin\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"ab\"=.\\support\\ab.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name aprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"abs\"=.\\support\\abs.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name aprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr\"=.\\srclib\\apr\\apr.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n}}}\n\n###############################################################################\n\nProject: \"apriconv\"=\".\\srclib\\apr-iconv\\apriconv.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n}}}\n\n###############################################################################\n\nProject: \"aprutil\"=\".\\srclib\\apr-util\\aprutil.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apriconv\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name xml\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_freetds\"=\".\\srclib\\apr-util\\dbd\\unsupported\\apr_dbd_freetds.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_odbc\"=\".\\srclib\\apr-util\\dbd\\apr_dbd_odbc.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_mysql\"=\".\\srclib\\apr-util\\dbd\\apr_dbd_mysql.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_oracle\"=\".\\srclib\\apr-util\\dbd\\apr_dbd_oracle.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_pgsql\"=\".\\srclib\\apr-util\\dbd\\apr_dbd_pgsql.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_sqlite2\"=\".\\srclib\\apr-util\\dbd\\apr_dbd_sqlite2.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbd_sqlite3\"=\".\\srclib\\apr-util\\dbd\\apr_dbd_sqlite3.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbm_db\"=\".\\srclib\\apr-util\\dbm\\apr_dbm_db.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_dbm_gdbm\"=\".\\srclib\\apr-util\\dbm\\apr_dbm_gdbm.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"apr_ldap\"=\".\\srclib\\apr-util\\ldap\\apr_ldap.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"fcgistarter\"=.\\support\\fcgistarter.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name aprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"gen_test_char\"=.\\server\\gen_test_char.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"htcacheclean\"=.\\support\\htcacheclean.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name aprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"htdbm\"=.\\support\\htdbm.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name aprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"htdigest\"=.\\support\\htdigest.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name aprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"htpasswd\"=.\\support\\htpasswd.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name aprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"httxt2dbm\"=.\\support\\httxt2dbm.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name aprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"libapr\"=.\\srclib\\apr\\libapr.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n}}}\n\n###############################################################################\n\nProject: \"libapriconv\"=\".\\srclib\\apr-iconv\\libapriconv.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"libapriconv_ccs_modules\"=\".\\srclib\\apr-iconv\\ccs\\libapriconv_ccs_modules.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libapriconv\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libapriconv_ces_modules\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"libapriconv_ces_modules\"=\".\\srclib\\apr-iconv\\ces\\libapriconv_ces_modules.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libapriconv\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"libaprutil\"=\".\\srclib\\apr-util\\libaprutil.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libapriconv\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name xml\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"libapreq\"=.\\libapreq.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libapriconv\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"libhttpd\"=.\\libhttpd.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libapriconv\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name gen_test_char\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"logresolve\"=.\\support\\logresolve.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name aprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_actions\"=.\\modules\\mappers\\mod_actions.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_alias\"=.\\modules\\mappers\\mod_alias.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_allowhandlers\"=.\\modules\\aaa\\mod_allowhandlers.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_allowmethods\"=.\\modules\\aaa\\mod_allowmethods.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_apreq\"=.\\modules\\apreq\\mod_apreq.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libapreq\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_asis\"=.\\modules\\generators\\mod_asis.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_access_compat\"=.\\modules\\aaa\\mod_access_compat.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_auth_basic\"=.\\modules\\aaa\\mod_auth_basic.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_auth_digest\"=.\\modules\\aaa\\mod_auth_digest.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_auth_form\"=.\\modules\\aaa\\mod_auth_form.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authn_anon\"=.\\modules\\aaa\\mod_authn_anon.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authn_core\"=.\\modules\\aaa\\mod_authn_core.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authn_dbd\"=.\\modules\\aaa\\mod_authn_dbd.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dbd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authn_dbm\"=.\\modules\\aaa\\mod_authn_dbm.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authn_file\"=.\\modules\\aaa\\mod_authn_file.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authn_socache\"=.\\modules\\aaa\\mod_authn_socache.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authnz_fcgi\"=.\\modules\\aaa\\mod_authnz_fcgi.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authnz_ldap\"=.\\modules\\aaa\\mod_authnz_ldap.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_ldap\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_core\"=.\\modules\\aaa\\mod_authz_core.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_dbd\"=.\\modules\\aaa\\mod_authz_dbd.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dbd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_dbm\"=.\\modules\\aaa\\mod_authz_dbm.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_groupfile\"=.\\modules\\aaa\\mod_authz_groupfile.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_host\"=.\\modules\\aaa\\mod_authz_host.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_owner\"=.\\modules\\aaa\\mod_authz_owner.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_authz_user\"=.\\modules\\aaa\\mod_authz_user.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_auth_basic\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_autoindex\"=.\\modules\\generators\\mod_autoindex.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_brotli\"=.\\modules\\filters\\mod_brotli.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_bucketeer\"=.\\modules\\debugging\\mod_bucketeer.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_buffer\"=.\\modules\\filters\\mod_buffer.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_cache\"=.\\modules\\cache\\mod_cache.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_case_filter\"=.\\modules\\examples\\mod_case_filter.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_case_filter_in\"=.\\modules\\examples\\mod_case_filter_in.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_cern_meta\"=.\\modules\\metadata\\mod_cern_meta.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_cgi\"=.\\modules\\generators\\mod_cgi.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_charset_lite\"=.\\modules\\filters\\mod_charset_lite.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_crypto\"=.\\modules\\filters\\mod_crypto.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_data\"=.\\modules\\filters\\mod_data.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_dav\"=.\\modules\\dav\\main\\mod_dav.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_dav_fs\"=.\\modules\\dav\\fs\\mod_dav_fs.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dav\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_dav_lock\"=.\\modules\\dav\\lock\\mod_dav_lock.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dav\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_dbd\"=.\\modules\\database\\mod_dbd.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_deflate\"=.\\modules\\filters\\mod_deflate.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_dir\"=.\\modules\\mappers\\mod_dir.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_cache_disk\"=.\\modules\\cache\\mod_cache_disk.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_cache\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_cache_socache\"=.\\modules\\cache\\mod_cache_socache.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_cache\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_dumpio\"=.\\modules\\debugging\\mod_dumpio.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_echo\"=.\\modules\\echo\\mod_echo.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_env\"=.\\modules\\metadata\\mod_env.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_example_hooks\"=.\\modules\\examples\\mod_example_hooks.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_example_ipc\"=.\\modules\\examples\\mod_example_ipc.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_expires\"=.\\modules\\metadata\\mod_expires.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_ext_filter\"=.\\modules\\filters\\mod_ext_filter.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_file_cache\"=.\\modules\\cache\\mod_file_cache.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_filter\"=.\\modules\\filters\\mod_filter.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_http2\"=.\\modules\\http2\\mod_http2.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_headers\"=.\\modules\\metadata\\mod_headers.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_heartbeat\"=.\\modules\\cluster\\mod_heartbeat.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_watchdog\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_heartmonitor\"=.\\modules\\cluster\\mod_heartmonitor.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_watchdog\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_ident\"=.\\modules\\metadata\\mod_ident.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_imagemap\"=.\\modules\\mappers\\mod_imagemap.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_include\"=.\\modules\\filters\\mod_include.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_info\"=.\\modules\\generators\\mod_info.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_isapi\"=.\\modules\\arch\\win32\\mod_isapi.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_lbmethod_bybusyness\"=.\\modules\\proxy\\balancers\\mod_lbmethod_bybusyness.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_balancer\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_lbmethod_byrequests\"=.\\modules\\proxy\\balancers\\mod_lbmethod_byrequests.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_balancer\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_lbmethod_bytraffic\"=.\\modules\\proxy\\balancers\\mod_lbmethod_bytraffic.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_balancer\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_lbmethod_heartbeat\"=.\\modules\\proxy\\balancers\\mod_lbmethod_heartbeat.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_balancer\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_lbmethod_rr\"=.\\modules\\proxy\\examples\\mod_lbmethod_rr.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy_balancer\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_ldap\"=.\\modules\\ldap\\mod_ldap.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_log_config\"=.\\modules\\loggers\\mod_log_config.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_log_debug\"=.\\modules\\loggers\\mod_log_debug.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_log_forensic\"=.\\modules\\loggers\\mod_log_forensic.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_log_json\"=.\\modules\\loggers\\mod_log_json.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_logio\"=.\\modules\\loggers\\mod_logio.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_lua\"=.\\modules\\lua\\mod_lua.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_macro\"=.\\modules\\core\\mod_macro.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_md\"=.\\modules\\md\\mod_md.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_mime\"=.\\modules\\http\\mod_mime.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_mime_magic\"=.\\modules\\metadata\\mod_mime_magic.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_negotiation\"=.\\modules\\mappers\\mod_negotiation.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy\"=.\\modules\\proxy\\mod_proxy.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_ajp\"=.\\modules\\proxy\\mod_proxy_ajp.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_balancer\"=.\\modules\\proxy\\mod_proxy_balancer.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_connect\"=.\\modules\\proxy\\mod_proxy_connect.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_express\"=.\\modules\\proxy\\mod_proxy_express.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_fcgi\"=.\\modules\\proxy\\mod_proxy_fcgi.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n\n###############################################################################\n\nProject: \"mod_proxy_ftp\"=.\\modules\\proxy\\mod_proxy_ftp.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_hcheck\"=.\\modules\\proxy\\mod_proxy_hcheck.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_html\"=.\\modules\\filters\\mod_proxy_html.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_http\"=.\\modules\\proxy\\mod_proxy_http.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_http2\"=.\\modules\\http2\\mod_proxy_http2.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_http2\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_scgi\"=.\\modules\\proxy\\mod_proxy_scgi.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_uwsgi\"=.\\modules\\proxy\\mod_proxy_uwsgi.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_proxy_wstunnel\"=.\\modules\\proxy\\mod_proxy_wstunnel.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_ratelimit\"=.\\modules\\filters\\mod_ratelimit.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_reflector\"=.\\modules\\filters\\mod_reflector.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_remoteip\"=.\\modules\\metadata\\mod_remoteip.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_reqtimeout\"=.\\modules\\filters\\mod_reqtimeout.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_request\"=.\\modules\\filters\\mod_request.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_rewrite\"=.\\modules\\mappers\\mod_rewrite.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_sed\"=.\\modules\\filters\\mod_sed.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_serf\"=.\\modules\\proxy\\mod_serf.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_proxy\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_session\"=.\\modules\\session\\mod_session.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_session_crypto\"=.\\modules\\session\\mod_session_crypto.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_session\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_session_cookie\"=.\\modules\\session\\mod_session_cookie.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_session\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_session_dbd\"=.\\modules\\session\\mod_session_dbd.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_dbd\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name mod_session\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_setenvif\"=.\\modules\\metadata\\mod_setenvif.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_slotmem_plain\"=.\\modules\\slotmem\\mod_slotmem_plain.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_slotmem_shm\"=.\\modules\\slotmem\\mod_slotmem_shm.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_socache_dbm\"=.\\modules\\cache\\mod_socache_dbm.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_socache_dc\"=.\\modules\\cache\\mod_socache_dc.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_socache_memcache\"=.\\modules\\cache\\mod_socache_memcache.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_socache_shmcb\"=.\\modules\\cache\\mod_socache_shmcb.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_socache_redis\"=.\\modules\\cache\\mod_socache_redis.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_speling\"=.\\modules\\mappers\\mod_speling.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_ssl\"=.\\modules\\ssl\\mod_ssl.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_status\"=.\\modules\\generators\\mod_status.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_substitute\"=.\\modules\\filters\\mod_substitute.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_unique_id\"=.\\modules\\metadata\\mod_unique_id.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_userdir\"=.\\modules\\mappers\\mod_userdir.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_usertrack\"=.\\modules\\metadata\\mod_usertrack.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_version\"=.\\modules\\metadata\\mod_version.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_vhost_alias\"=.\\modules\\mappers\\mod_vhost_alias.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_watchdog\"=.\\modules\\core\\mod_watchdog.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"mod_xml2enc\"=.\\modules\\filters\\mod_xml2enc.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name libapr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libaprutil\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name libhttpd\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"rotatelogs\"=.\\support\\rotatelogs.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name aprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"wintty\"=.\\support\\win32\\wintty.dsp - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n    Begin Project Dependency\n    Project_Dep_Name apr\n    End Project Dependency\n    Begin Project Dependency\n    Project_Dep_Name aprutil\n    End Project Dependency\n}}}\n\n###############################################################################\n\nProject: \"xml\"=\".\\srclib\\apr-util\\xml\\expat\\lib\\xml.dsp\" - Package Owner=<4>\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<4>\n{{{\n}}}\n\n###############################################################################\n\nGlobal:\n\nPackage=<5>\n{{{\n}}}\n\nPackage=<3>\n{{{\n}}}\n\n###############################################################################\n\n"
        },
        {
          "name": "BuildAll.dsp",
          "type": "blob",
          "size": 2.58203125,
          "content": "# Microsoft Developer Studio Project File - Name=\"BuildAll\" - Package Owner=<4>\n# Microsoft Developer Studio Generated Build File, Format Version 6.00\n# ** DO NOT EDIT **\n\n# TARGTYPE \"Win32 (x86) External Target\" 0x0106\n\nCFG=BuildAll - Win32 Debug\n!MESSAGE This is not a valid makefile. To build this project using NMAKE,\n!MESSAGE use the Export Makefile command and run\n!MESSAGE \n!MESSAGE NMAKE /f \"BuildAll.mak\".\n!MESSAGE \n!MESSAGE You can specify a configuration when running NMAKE\n!MESSAGE by defining the macro CFG on the command line. For example:\n!MESSAGE \n!MESSAGE NMAKE /f \"BuildAll.mak\" CFG=\"BuildAll - Win32 Debug\"\n!MESSAGE \n!MESSAGE Possible choices for configuration are:\n!MESSAGE \n!MESSAGE \"BuildAll - Win32 Release\" (based on \"Win32 (x86) External Target\")\n!MESSAGE \"BuildAll - Win32 Debug\" (based on \"Win32 (x86) External Target\")\n!MESSAGE \n\n# Begin Project\n# PROP AllowPerConfigDependencies 0\n# PROP Scc_ProjName \"\"\n# PROP Scc_LocalPath \"\"\n\n!IF  \"$(CFG)\" == \"BuildAll - Win32 Release\"\n\n# PROP BASE Use_Debug_Libraries 0\n# PROP BASE Output_Dir \"\"\n# PROP BASE Intermediate_Dir \"\"\n# PROP BASE Cmd_Line \"NMAKE /f makefile.win\"\n# PROP BASE Rebuild_Opt \"/a\"\n# PROP BASE Target_File \"\\Apache2\\bin\\httpd.exe\"\n# PROP BASE Bsc_Name \".\\Browse\\BuildAll.bsc\"\n# PROP BASE Target_Dir \"\"\n# PROP Use_Debug_Libraries 0\n# PROP Output_Dir \"\"\n# PROP Intermediate_Dir \"\"\n# PROP Cmd_Line \"NMAKE /f makefile.win INSTDIR=\"\\Apache2\" LONG=Release _dummy\"\n# PROP Rebuild_Opt \"\"\n# PROP Target_File \"\\Apache2\\bin\\httpd.exe\"\n# PROP Bsc_Name \".\\Browse\\httpd.bsc\"\n# PROP Target_Dir \"\"\n\n!ELSEIF  \"$(CFG)\" == \"BuildAll - Win32 Debug\"\n\n# PROP BASE Use_Debug_Libraries 1\n# PROP BASE Output_Dir \"\"\n# PROP BASE Intermediate_Dir \"\"\n# PROP BASE Cmd_Line \"NMAKE /f makefile.win\"\n# PROP BASE Rebuild_Opt \"/a\"\n# PROP BASE Target_File \"\\Apache2\\bin\\httpd.exe\"\n# PROP BASE Bsc_Name \".\\Browse\\BuildAll.bsc\"\n# PROP BASE Target_Dir \"\"\n# PROP Use_Debug_Libraries 1\n# PROP Output_Dir \"\"\n# PROP Intermediate_Dir \"\"\n# PROP Cmd_Line \"NMAKE /f makefile.win INSTDIR=\"\\Apache2\" LONG=Debug _dummy\"\n# PROP Rebuild_Opt \"\"\n# PROP Target_File \"\\Apache2\\bin\\httpd.exe\"\n# PROP Bsc_Name \".\\Browse\\httpd.bsc\"\n# PROP Target_Dir \"\"\n\n!ENDIF \n\n# Begin Target\n\n# Name \"BuildAll - Win32 Release\"\n# Name \"BuildAll - Win32 Debug\"\n\n!IF  \"$(CFG)\" == \"BuildAll - Win32 Release\"\n\n!ELSEIF  \"$(CFG)\" == \"BuildAll - Win32 Debug\"\n\n!ENDIF \n\n# Begin Source File\n\nSOURCE=.\\os\\win32\\BaseAddr.ref\n# End Source File\n# Begin Source File\n\nSOURCE=.\\CHANGES\n# End Source File\n# Begin Source File\n\nSOURCE=.\\Makefile.win\n# End Source File\n# Begin Source File\n\nSOURCE=.\\STATUS\n# End Source File\n# End Target\n# End Project\n"
        },
        {
          "name": "BuildBin.dsp",
          "type": "blob",
          "size": 2.75390625,
          "content": "# Microsoft Developer Studio Project File - Name=\"BuildBin\" - Package Owner=<4>\n# Microsoft Developer Studio Generated Build File, Format Version 6.00\n# ** DO NOT EDIT **\n\n# TARGTYPE \"Win32 (x86) External Target\" 0x0106\n\nCFG=BuildBin - Win32 Debug\n!MESSAGE This is not a valid makefile. To build this project using NMAKE,\n!MESSAGE use the Export Makefile command and run\n!MESSAGE \n!MESSAGE NMAKE /f \"BuildBin.mak\".\n!MESSAGE \n!MESSAGE You can specify a configuration when running NMAKE\n!MESSAGE by defining the macro CFG on the command line. For example:\n!MESSAGE \n!MESSAGE NMAKE /f \"BuildBin.mak\" CFG=\"BuildBin - Win32 Debug\"\n!MESSAGE \n!MESSAGE Possible choices for configuration are:\n!MESSAGE \n!MESSAGE \"BuildBin - Win32 Release\" (based on \"Win32 (x86) External Target\")\n!MESSAGE \"BuildBin - Win32 Debug\" (based on \"Win32 (x86) External Target\")\n!MESSAGE \n\n# Begin Project\n# PROP AllowPerConfigDependencies 0\n# PROP Scc_ProjName \"\"\n# PROP Scc_LocalPath \"\"\n\n!IF  \"$(CFG)\" == \"BuildBin - Win32 Release\"\n\n# PROP BASE Use_Debug_Libraries 0\n# PROP BASE Output_Dir \"\"\n# PROP BASE Intermediate_Dir \"\"\n# PROP BASE Cmd_Line \"NMAKE /f makefile.win\"\n# PROP BASE Rebuild_Opt \"/a\"\n# PROP BASE Target_File \"\\Apache2\\bin\\httpd.exe\"\n# PROP BASE Bsc_Name \".\\Browse\\BuildBin.bsc\"\n# PROP BASE Target_Dir \"\"\n# PROP Use_Debug_Libraries 0\n# PROP Output_Dir \"\"\n# PROP Intermediate_Dir \"\"\n# PROP Cmd_Line \"NMAKE /f makefile.win INSTDIR=\"\\Apache2\" LONG=Release _trydb _trylua _tryxml _tryssl _tryzlib _trynghttp2 _trybrotli _trymd _tryserf _tryjson _dummy\"\n# PROP Rebuild_Opt \"\"\n# PROP Target_File \"\\Apache2\\bin\\httpd.exe\"\n# PROP Bsc_Name \".\\Browse\\httpd.bsc\"\n# PROP Target_Dir \"\"\n\n!ELSEIF  \"$(CFG)\" == \"BuildBin - Win32 Debug\"\n\n# PROP BASE Use_Debug_Libraries 1\n# PROP BASE Output_Dir \"\"\n# PROP BASE Intermediate_Dir \"\"\n# PROP BASE Cmd_Line \"NMAKE /f makefile.win\"\n# PROP BASE Rebuild_Opt \"/a\"\n# PROP BASE Target_File \"\\Apache2\\bin\\httpd.exe\"\n# PROP BASE Bsc_Name \".\\Browse\\BuildBin.bsc\"\n# PROP BASE Target_Dir \"\"\n# PROP Use_Debug_Libraries 1\n# PROP Output_Dir \"\"\n# PROP Intermediate_Dir \"\"\n# PROP Cmd_Line \"NMAKE /f makefile.win INSTDIR=\"\\Apache2\" LONG=Debug _trydb _trylua _tryxml _tryssl _tryzlib _trynghttp2 _trybrotli _trymd _tryserf -tryjson _dummy\"\n# PROP Rebuild_Opt \"\"\n# PROP Target_File \"\\Apache2\\bin\\httpd.exe\"\n# PROP Bsc_Name \".\\Browse\\httpd.bsc\"\n# PROP Target_Dir \"\"\n\n!ENDIF \n\n# Begin Target\n\n# Name \"BuildBin - Win32 Release\"\n# Name \"BuildBin - Win32 Debug\"\n\n!IF  \"$(CFG)\" == \"BuildBin - Win32 Release\"\n\n!ELSEIF  \"$(CFG)\" == \"BuildBin - Win32 Debug\"\n\n!ENDIF \n\n# Begin Source File\n\nSOURCE=.\\os\\win32\\BaseAddr.ref\n# End Source File\n# Begin Source File\n\nSOURCE=.\\CHANGES\n# End Source File\n# Begin Source File\n\nSOURCE=.\\Makefile.win\n# End Source File\n# Begin Source File\n\nSOURCE=.\\STATUS\n# End Source File\n# End Target\n# End Project\n"
        },
        {
          "name": "CHANGES",
          "type": "blob",
          "size": 105.9111328125,
          "content": "                                                         -*- coding: utf-8 -*-\nChanges with Apache 2.5.1\n\n  *) mod_http2: improved early cleanup of streams.\n     [Stefan Eissing]\n\n  *) mod_proxy_fcgi: Don't re-encode SCRIPT_FILENAME when set via SetHandler.\n     PR 69203. [Yann Ylavic]\n\n  *) mod_proxy_http2: improved error handling on connection errors while\n     response is already underway.\n     [Stefan Eissing]\n\n  *) mod_proxy: Fix canonicalisation and FCGI env (PATH_INFO, SCRIPT_NAME) for\n     \"balancer:\" URLs set via SetHandler, also allowing for \"unix:\" sockets\n     with BalancerMember(s).  PR 69168.  [Yann Ylavic]\n\n  *) mod_rewrite: Better question mark tracking to avoid UnsafeAllow3F.\n     PR 69197. [Yann Ylavic, Eric Covener]\n\n  *) mod_tls: update version of rustls-ffi to v0.13.0.\n     [Daniel McCarney (@cpu}]\n\n  *) mod_xml2enc: Tolerate libxml2 2.12.0 and later.\n     [ttachi <tachihara AT hotmail.com>]\n\n  *) mod_alias: Add AliasPreservePath directive to map the full\n     path after the alias in a location. [Graham Leggett]\n\n  *) mod_rewrite, mod_proxy: mod_proxy to canonicalize rewritten [P] URLs,\n     including \"unix:\" ones.  PR 69235, PR 69260.  [Yann Ylavic, Ruediger Pluem]\n\n  *) mod_http2: fixed a bug that could lead to a crash in main connection\n     output handling. This occured only when the last request on a HTTP/2\n     connection had been processed and the session decided to shut down.\n     This could lead to an attempt to send a final GOAWAY while the previous\n     write was still in progress. See PR 66646.\n     [Stefan Eissing]\n\n  *) mod_proxy_http2: fix `X-Forward-Host` header to carry the correct value.\n     Fixed PR66752.\n     [Stefan Eissing]\n\n  *) mod_http2: added support for bootstrapping WebSockets via HTTP/2, as\n     described in RFC 8441. A new directive 'H2WebSockets on|off' has been\n     added. The feature is by default not enabled.\n     As also discussed in the manual, this feature should work for setups\n     using \"ProxyPass backend-url upgrade=websocket\" without further changes.\n     Special server modules for WebSockets will have to be adapted,\n     most likely, as the handling if IO events is different with HTTP/2.\n     HTTP/2 WebSockets are supported on platforms with native pipes. This\n     excludes Windows.\n     [Stefan Eissing]\n\n  *) mod_proxy: Fix DNS requests and connections closed before the\n     configured addressTTL.  BZ 69126.  [Yann Ylavic]\n\n  *) apxs: Fix -i in some cases where -n is not used.\n     [Jan Pazdziora <jpazdziora redhat.com>]\n\n  *) worker, event: Avoid possible hangs and crashes during shutdown of\n     child processes that fail to start their configured threads.\n     [Yann Ylavic, Eric Covener]\n\n  *) mod_ssl: Restore support for loading PKCS#11 keys via ENGINE\n     without \"SSLCryptoDevice\" configured.  [Joe Orton]\n\n  *) mod_rewrite: Fix a recent regression where a rule with both a trailing\n     '?' and the [QSA] flag did not have the query appended.  PR66672\n     Frank Meier <frank.meier ergon.ch>\n\n  *) core: On Linux, log the real thread ID in error logs.  [Joe Orton]\n\n  *) mod_http2: fixed a bug in flushing pending data on an already closed\n     connection that could lead to a busy loop, preventing the HTTP/2 session\n     to close down successfully. Fixed PR 66624.\n     [Stefan Eissing]\n\n  *) mod_http2: v2.0.15 with the following fixes and improvements\n     - New directive 'H2EarlyHint name value' to add headers to a response,\n       picked up already when a \"103 Early Hints\" response is sent. 'name' and\n       'value' must comply to the HTTP field restrictions.\n       This directive can be repeated several times and header fields of the\n       same names add. Sending a 'Link' header with 'preload' relation will\n       also cause a HTTP/2 PUSH if enabled and supported by the client.\n     - Fixed an issue where requests were not logged and accounted in a timely\n       fashion when the connection returns to \"keepalive\" handling, e.g. when\n       the request served was the last outstanding one.\n       This led to late appearance in access logs with wrong duration times\n       reported.\n     - Accurately report the bytes sent for a request in the '%O' Log format.\n       This addresses #203, a long outstanding issue where mod_h2 has reported\n       numbers over-eagerly from internal buffering and not what has actually\n       been placed on the connection.\n       The numbers are now the same with and without H2CopyFiles enabled.\n     [Stefan Eissing]\n\n  *) mod_md:\n     - Using OCSP stapling information to trigger certificate renewals. Proposed\n       by @frasertweedale.\n     - Added directive `MDCheckInterval` to control how often the server checks\n       for detected revocations. Added proposals for configurations in the\n       README.md chapter \"Revocations\".\n     - OCSP stapling: accept OCSP responses without a `nextUpdate` entry which is\n       allowed in RFC 6960. Treat those as having an update interval of 12 hours.\n       Added by @frasertweedale.\n     - Adapt OpenSSL usage to changes in their API. By Yann Ylavic.\n\n  *) mod_proxy_http2: fix retry handling to not leak temporary errors.\n     On detecting that that an existing connection was shutdown by the other\n     side, a 503 response leaked even though the request was retried on a\n     fresh connection.\n     [Stefan Eissing]\n\n  *) mod_rewrite: Add server directory to include path as mod_rewrite requires\n     test_char.h. PR 66571 [Valeria Petrov <valeria.petrov@spinetix.com>]\n\n  *) Add an option to specify a source address. PR32524\n     [Daniel Rench <gauze omnimental tmetic com>]\n\n  *) http/1.1: For a chunked response body, ensure the last-chunk\n     terminator is flushed if necessary. [Joe Orton]\n\n  *) mod_rewrite: Don't require [UNC] flag to preserve a leading //\n     added by applying the perdir prefix to the substitution.\n     [Ruediger Pluem, Eric Covener]\n\n  *) mod_http2: new directive `H2ProxyRequests on|off` to enable handling\n     of HTTP/2 requests in a forward proxy configuration.\n     General forward proxying is enabled via `ProxyRequests`. If the\n     HTTP/2 protocol is also enabled for such a server/host, this new\n     directive is needed in addition.\n     [Stefan Eissing]\n\n  *) core: add `final_resp_passed` flag to request_rec to allow\n     ap_die() to judge if it can send out a response. Bump mmn.\n     Enable test cases that check errors during response body to\n     appear as error on client side.\n     [Stefan Eissing]\n\n  *) mod_ldap: HTML-escape data in the ldap-status handler.\n     [Eric Covener, Chamal De Silva]\n\n  *) htcacheclean: In -a/-A mode, list all files per subdirectory\n     rather than only one. PR 65091.\n     [Artem Egorenkov <aegorenkov.91 gmail.com>]\n\n  *) mod_proxy: In case that AllowEncodedSlashes is set to NoDecode do not\n     fail on literal '%' when doing the encoding of the backend URL.\n     PR 66580 [Ruediger Pluem]\n\n  *) mpm_worker: Fix possible warning (AH00045) about children processes not\n     terminating timely.  [Yann Ylavic]\n\n * mod_proxy_http2: fixed using the wrong \"bucket_alloc\" from the backend\n   connection when sending data on the frontend one. This caused crashes\n   or infinite loops in rare situations.\n * mod_proxy_http2: fixed a bug in retry/response handling that could lead\n   to wrong status codes or HTTP messages send at the end of response bodies\n   exceeding the announced content-length.\n * mod_proxy_http2: fix retry handling to not leak temporary errors.\n   On detecting that that an existing connection was shutdown by the other\n   side, a 503 response leaked even though the request was retried on a\n   fresh connection.\n * mod_http2: fixed a bug that did cleanup of consumed and pending buckets in\n   the wrong order when a bucket_beam was destroyed.\n   [Stefan Eissing]\n\n  *) mod_ssl: Add support for loading certs/keys from pkcs11: URIs\n     via OpenSSL 3.x providers.  [Ingo Franzki <ifranzki linux.ibm.com>]\n\n  *) mod_proxy: Allow to set a TTL for how long DNS resolutions to backend\n     systems are cached. [Yann Ylavic]\n\n  *) mod_http2: v2.0.26 with the following fixes:\n     - Fixed `Date` header on requests upgraded from HTTP/1.1 (h2c). Fixes\n       <https://github.com/icing/mod_h2/issues/272>.\n     - Fixed small memory leak in h2 header bucket free. Thanks to\n       Michael Kaufmann for finding this and providing the fix.\n\n  *) mod_ssl: Restore SSL dumping on trace7 loglevel with OpenSSL >= 3.0.\n     [Ruediger Pluem, Yann Ylavic]\n\n  *) mod_http2: avoid double chunked-encoding on internal redirects.\n     PR 66597 [Yann Ylavic, Stefan Eissing]\n\n  *) mod_cgi/mod_cgid: Reject CGI output with a Transfer-Encoding\n     header to avoid unexpected or corrupted responses.  PR 68970.\n     [Joe Orton]\n\n  *) Windows: Restore the ability to \"Include\" configuration files on UNC\n     paths. PR69313 [Eric Covener]\n\n  *) mod_http2: Fix reporting of `Total Accesses` in server-status to not count\n     HTTP/2 requests twice. Fixes PR 66801.\n     [Stefan Eissing]\n\n   *) mod_slotmem_shm: Use ap_os_is_path_absolute() to make it portable.\n      [Jean-Frederic Clere]\n\n  *) Optimise handling LDAP authorization where LDAP was not used\n     previously for LDAP authentication. [Yann Ylavic]\n\n  *) mod_macro: Return an error if the expanded line would exceed the\n     maximum line length.  PR 69258.\n     [Marc Stern <marc.stern approach-cyber.com>]\n\n * mod_http2: fixed a bug in handling of stream timeouts.\n   [Stefan Eissing]\n\n  *) mod_systemd: Log the SELinux context at startup if available and\n     enabled.  [Joe Orton]\n\n  *) mod_proxy: Avoid AH01059 parsing error for SetHandler \"unix:\" URLs.\n     PR 69160 [Yann Ylavic]\n\n  *) mod_dav_fs: Add DavLockDBType directive.  [Joe Orton]\n\n  *) mod_ssl: Disable the OpenSSL ENGINE API when OPENSSL_NO_ENGINE is set.\n     Allow for \"SSLCryptoDevice builtin\" if the ENGINE API is not available,\n     notably with OpenSSL >= 3.  PR 68080.  [Yann Ylavic, Joe Orton]\n\n  *) mod_headers: Fix a possible infinite recursion with the edit* action and\n     empty matches.  [Yann Ylavic]\n\n  *) mod_tls: updating to rustls-ffi version 0.9.2 or higher.\n     Checking in configure for proper version installed. Code\n     fixes for changed clienthello member name.\n     [Stefan Eissing]\n\n * mod_md:\n   - New directive `MDMatchNames all|servernames` to allow more control over how\n     MDomains are matched to VirtualHosts.\n   - New directive `MDChallengeDns01Version`. Setting this to `2` will provide\n     the command also with the challenge value on `teardown` invocation. In version\n     1, the default, only the `setup` invocation gets this parameter.\n     Refs #312. Thanks to @domrim for the idea.\n   - For Managed Domain in \"manual\" mode, the checks if all used ServerName and\n     ServerAlias are part of the MDomain now reports a warning instead of an error\n     (AH10040) when not all names are present.\n   - MDChallengeDns01 can now be configured for individual domains.\n     Using PR from Jérôme Billiras (@bilhackmac) and adding test case and fixing proper working\n   - Fixed a bug found by Jérôme Billiras (@bilhackmac) that caused the challenge\n     teardown not being invoked as it should.\n\n  *) mod_ssl: Fix a regression that causes the default DH parameters for a key\n     no longer set and thus effectively disabling DH ciphers when no explicit\n     DH parameters are set. PR 68863 [Ruediger Pluem]\n\n  *) mod_dav: Update redirect-carefully example BrowserMatch config\n     to match more recent client versions.  PR 66148, 67039.\n     [Michal Maloszewski <michal.maloszewski canonical.com>,\n      Romain Tartière <romain blogreen.org>]\n\n  *) mod_proxy: Avoid AH01059 parsing error for SetHandler \"unix:\" URLs\n     in <Location> (incomplete fix in 2.4.62). PR 69160. [Yann Ylavic]\n\n  *) mod_ssl: Add SSL_HANDSHAKE_RTT environment variable.\n     [Charles Smutz <csmutz gmail.com>]\n\n  *) mod_md: fixed passing of the server environment variables to programs\n     started via MDMessageCmd and MDChallengeDns01 on *nix system.\n     See <https://github.com/icing/mod_md/issues/319>.\n     [Stefan Eissing]\n\n  *) mod_proxy: Honor parameters of ProxyPassMatch workers with substitution\n     in the host name or port. PR 69233. [Yann Ylavic]\n\n  *) mod_md: Fix the reported \"until\" validity of a certificate in the status\n     handler. [Rainer Jung]\n\n  *) mod_md: Fix possible NULL deref when logging the error that an\n     authentication resource could not be retrieved from the ACME server.\n     [Stefan Eissing]\n\n  *) mod_ssl: Improve compatibility with OpenSSL 3, fix build warnings about\n     deprecated ENGINE_ API, honor OPENSSL_API_COMPAT setting while defaulting\n     to compatibitily with version 1.1.1 (including ENGINEs / SSLCryptoDevice).\n     [Yann Ylavic]\n\n  *) core: Add \"multipathtcp\" Listen option. PR 69292.\n     [Anthony Doeraene <anthony.doeraene hotmail.com>]\n\n  *) mod_proxy: Add \"multipathtcp\" worker parameter.  PR 69292.\n     [Anthony Doeraene <anthony.doeraene hotmail.com>]\n\n  *) mod_authnz_ldap.c: Make sure the authentication variables are set in\n     all cases where another module is the source of the authentication,\n     and that authenticated user is looked up in LDAP. [Graham Leggett]\n\n  *) mod_autht_jwt: New module to handle RFC 7519 JWT tokens within\n     bearer tokens, both as part of the aaa framework, and as a way to\n     generate tokens and pass them to backend servers and services.\n     [Graham Leggett]\n\n  *) mod_auth_bearer: New module to handle RFC 6750 Bearer tokens, using\n     the token_checker hook. [Graham Leggett]\n\n  *) mod_autht_core: New module to handle provider aliases for token\n     authentication. [Graham Leggett]\n\n  *) core: Add the token_checker hook, that allows authentication to take\n     place using mechanisms other than username/password, such as bearer\n     tokens. [Graham Leggett]\n\n  *) mod_alias: When an alias is declared inside a Location, make sure\n     the balance of the URL is preserved to match the alias declared\n     outside a location. Fixes an error where all requests are mapped\n     to the root of the location. [Graham Leggett]\n\n  *) core: Be explicit if an enclosing directive contains a path or a\n     regex. [Graham Leggett]\n\n  *) mod_http2: fixed a crash during connection termination. See PR 66539.\n     [Stefan Eissing]\n\n  *) mod_mime: Do not match the extention against possible query string\n     parameters in case ProxyPass was used with the nocanon option.\n     [Ruediger Pluem]\n\n  *) mod_proxy: In case that AllowEncodedSlashes is set to NoDecode do not\n     double encode encoded slashes in the URL sent by the reverse proxy to the\n     backend. [Ruediger Pluem]\n\n  *) mod_rewrite: Add BCTLS flag similar to B, but only escaping the characters\n     checked by 2.4.56 in the query string. [Eric Covener]\n\n  *) mod_md:\n     - Enabling ED25519 support and certificate transparency information when\n       building with libressl v3.5.0 and newer. Thanks to Giovanni Bechis.\n     - MDChallengeDns01 can now be configured for individual domains.\n       Thanks to Jérôme Billiras (@bilhackmac) for the initial PR.\n     - Fixed a bug found by Jérôme Billiras (@bilhackmac) that caused the challenge\n       teardown not being invoked as it should.\n     [Stefan Eissing]\n\n  *) core: Add formats %{z} and %{strftime-format} to ErrorLogFormat, and make\n     sure that if the format is configured early enough it applies to every log\n     line.  PR 62161.  [Yann Ylavic]\n\n  *) mod_proxy: Check before forwarding that a nocanon path has not been\n     rewritten with spaces during processing.  [Yann Ylavic]\n\n  *) mod_rewrite: Re-allow some proxy and redirect substitutions flagged as\n     403 errors in 2.4.56. [Eric Covener]\n\n  *) mod_rewrite: Fix a 2.4.56 regression for substitutions ending\n     in a question mark. [Eric Covener]\n\n  *) Add a SSL_SHARED_CIPHER environment variable with the list of\n     client/server permitted ciphers. [Dirk-Willem van Gulik]\n\n  *) mod_http2: field values (headers and trailers) are stripped of\n     leading/trailing whitespace (space +htab) before being processed\n     or send in a response. This is compatible behaviour to HTTP/1.1\n     parsers that strip incoming headers of such characters.\n     [Stefan Eissing]\n\n  *) build: Use 'command -v' instead of 'which' which is more portable.\n     PR 66130 [Sam James <sam@gentoo.org>]\n\n  *) mod_dav: Allow to disable lock discovery via an DAVLockDiscovery\n     expression (per-request). PR 66313. [Emmanuel Dreyfus <manu netbsd.org>]\n\n  *) mod_ssl: when a proxy connection had handled a request using SSL, an\n     error was logged when \"SSLProxyEngine\" was only configured in the\n     location/proxy section and not the overall server. The connection\n     continued to work, the error log was in error. Fixed PR66190.\n     [Stefan Eissing]\n\n  *) mod_proxy: Ignore (and warn about) enablereuse=on for ProxyPassMatch when\n     some dollar substitution (backreference) happens in the hostname or port\n     part of the URL.  [Yann Ylavic]\n\n  *) rotatelogs: Add -T flag to allow subsequent rotated logfiles to be\n     truncated without the initial logfile being truncated.  [Eric Covener]\n\n  *) mod_md: a new directive `MDStoreLocks` can be used on cluster\n     setups with a shared file system for `MDStoreDir` to order\n     activation of renewed certificates when several cluster nodes are\n     restarted at the same time. Store locks are not enabled by default.\n     Restored curl_easy cleanup behaviour from v2.4.14 and refactored\n     the use of curl_multi for OCSP requests to work with that.\n     Fixes <https://github.com/icing/mod_md/issues/293>.\n\n  *) mod_proxy_ajp: Report an error if the AJP backend sends an invalid number\n     of headers. [Ruediger Pluem]\n\n  *) mod_proxy_http2: apply the standard httpd content type handling\n     to responses from the backend, as other proxy modules do. Fixes PR 66391.\n     Thanks to Jérôme Billiras for providing the patch.\n     [Stefan Eissing]\n\n  *) mod_http2: fixed trailer handling. Empty response bodies\n     prevented trailers from being sent to a client. See\n     <https://github.com/icing/mod_h2/issues/233> for how\n     this affected gRPC use.\n     [Stefan Eissing]\n\n  *) mod_proxy_http2: use only the ':authority' header to forward 'Host'\n     information to a backend. Deduce ':authority' from what the client\n     sent when 'ProxyPreserveHost' is on.\n     [Stefan Eissing]\n\n  *) core: Improve the AH00124 error message about too many redirects by logging\n     the URI of the request. PR 66403 [Ruediger Pluem]\n\n  *) mod_proxy_uwsgi: Stricter backend HTTP response parsing/validation.\n     [Yann Ylavic]\n\n  *) mod_http2: new directive 'H2MaxDataFrameLen n' to limit the maximum\n     amount of response body bytes put into a single HTTP/2 DATA frame.\n     Setting this to 0 places no limit (but the max size allowed by the\n     protocol is observed).\n     The module, by default, tries to use the maximum size possible, which is\n     somewhat around 16KB. This sets the maximum. When less response data is\n     available, smaller frames will be sent.\n\n  *) mod_http2: client resets of HTTP/2 streams led to unwanted 500 errors\n     reported in access logs and error documents. The processing of the\n     reset was correct, only unneccesary reporting was caused.\n     [Stefan Eissing]\n\n  *) mod_proxy: Fix double encoding of the uri-path of the request forwarded\n     to the origin server, when using mapping=encoded|servlet.  [Yann Ylavic]\n\n  *) mod_dav: Open the lock database read-only when possible.\n     PR 36636 [Wilson Felipe <wfelipe gmail.com>, manu]\n\n  *) mod_ldap: LDAPConnectionPoolTTL should accept negative values in order to\n     allow connections of any age to be reused. Up to now, a negative value\n     was handled as an error when parsing the configuration file.  PR 66421.\n     [nailyk <bzapache nailyk.fr>, Christophe Jaillet]\n\n  *) mod_proxy_hcheck: Re-enable workers in standard ERROR state. PR 66302.\n     [Alessandro Cavaliere <alessandro.cavalier7 unibo.it>]\n\n  *) mod_proxy_hcheck: Detect AJP/CPING support correctly. PR 66300.\n     [Alessandro Cavaliere <alessandro.cavalier7 unibo.it>]\n\n  *) mod_proxy_hcheck: hcmethod now allows for HTTP/1.1 requests\n     using GET11, HEAD11 and/or OPTIONS11. [Jim Jagielski]\n\n  *) mod_md:  a bug was fixed that caused very large MDomains\n     with the combined DNS names exceeding ~7k to fail, as\n     request bodies would contain partially wrong data from\n     uninitialized memory. This would have appeared as failure\n     in signing-up/renewing such configurations.\n     [Stefan Eissing, Ronald Crane (Zippenhop LLC)]\n\n  *) mod_proxy_http: Avoid 417 responses for non forwardable 100-continue.\n     PR 65666.  [Yann Ylavic]\n\n  *) mod_ssl: SSLFIPS compatible with OpenSSL 3.0.  PR 66063.\n     [Petr Sumbera <petr.sumbera oracle.com>, Yann Ylavic]\n\n  *) core: the conf/mime.types has been updated in conformance with RFC 9239:\n     - .js moved from 'application/javascript' to 'text/javascript'\n     - .mjs was added as 'text/javascript'\n     [Mathias Bynens <@mathiasbynens> via PR 318]\n\n  *) mod_md: the `MDCertificateAuthority` directive can take more than one URL/name of\n     an ACME CA. This gives a failover for renewals when several consecutive attempts\n     to get a certificate failed.\n     A new directive was added: `MDRetryDelay` sets the delay of retries.\n     A new directive was added: `MDRetryFailover` sets the number of errored\n     attempts before an alternate CA is selected for certificate renewals.\n     [Stefan Eissing]\n\n  *) mod_heartmonitor: Set the documented default value\n     \"10\" for HeartbeatMaxServers instead of \"0\". With \"0\"\n     no shared memory slotmem was initialized. [Rainer Jung]\n\n  *) mod_md:  fixed a bug leading to failed transfers for OCSP\n     stapling information when more than 6 certificates needed\n     updates in the same run. [Stefan Eissing]\n\n  *) mod_http2: use the new REQUEST buckets to forward request\n     on secondary connections. Use the now generic\n     ap_process_connection() in h2 workers to process those.\n     [Stefan Eissing]\n\n  *) Implement full auto status (\"key: value\" type status output).\n     Especially not only status summary counts for certificates and\n     OCSP stapling but also lists. Auto status format is similar to\n     what was used for mod_proxy_balancer.\n     [Rainer Jung]\n\n  *) core/mod_http: use REQUEST meta buckets and a new HTTP/1.x specific\n     input filter to separate the handling for HTTP requests from the\n     handling of HTTP/1.x request parsing and checks.\n     A new HTTP1_REQUEST_IN filter installs itself on http/1.1 connections\n     before a request is being read. It generates either a REQUEST meta\n     bucket on success or an ERROR bucket with the proposed response status.\n     The core connection processing, relying on ap_read_request(), now expects\n     a REQUEST or ERROR bucket from the input filters and is agnostic to\n     specific HTTP versions and how they bring requests into the server.\n     [Stefan Eissing]\n\n  *) mod_http2: remove unused and insecure code. Fixes PR66037.\n     Thanks to Ronald Crane (Zippenhop LLC) for reporting this.\n     [Stefan Eissing]\n\n  *) mod_md: added support for managing certificates via a\n     local tailscale demon for users of that secure networking.\n     This gives trusted certificates for tailscale  assigned\n     domain names in the *.ts.net space.\n     [Stefan Eissing]\n\n  *) mod_md: a possible NULL pointer deref was fixed in\n     the JSON code for persisting time periods (start+end).\n     Fixes #282 on mod_md's github.\n     Thanks to @marcstern for finding this.\n\n  *) core: Avoid an overflow on large inputs in ap_is_matchexp.  PR 66033\n     [Ruediger Pluem]\n\n  *) core/mod_http: use RESPONSE meta buckets and a new HTTP/1.x specific\n     filter to send responses through the output filter chain.\n     Specifically: the HTTP_HEADER output filter and ap_send_interim_response()\n     create a RESPONSE bucket and no longer are concerned with HTTP/1.x\n     serialization.\n     A new HTTP1_RESPONSE_OUT transcode filter writes the proper HTTP/1.x\n     bytes when dealing with a RESPONSE bucket. That filter installs itself\n     on the pre_read_request hook when the connection has protocol 'http/1.1'.\n     [Stefan Eissing]\n\n  *) MPM event: Restart children processes killed before idle maintenance.\n     PR 65769.  [Yann Ylavic, Ruediger Pluem]\n\n  *) core: Disable TCP_NOPUSH optimization on OSX since it might introduce\n     transmission delays.  PR 66019.  [Yann Ylavic]\n\n  *) ab: Allow for TLSv1.3 when the SSL library supports it.\n     [abhilash1232 gmail.com, xiaolongx.jiang intel.com, Yann Ylavic]\n\n  *) ab: Add the -W option to use worker threads, allowing for multiple CPUs\n     to handle the load.  [Yann Ylavic]\n\n  *) mod_substitute: Fix an integer overflow that can happen in very special\n     setups.  PR 66034 [Ruediger Pluem]\n\n  *) core: make ap_escape_quotes() work correctly on strings\n     with more than MAX_INT/2 characters, counting quotes double.\n     Credit to <generalbugs@zippenhop.com> for finding this.\n     [Stefan Eissing]\n\n  *) core: adding a new hook and method to the API:\n     create_secondary_connection and ap_create_secondary_connection()\n     to setup connections related to a \"master\" one, as used in\n     the HTTP/2 protocol implementation.\n  *) mod_http2: using the new API calls to get rid of knowledge\n     about how the core handles conn_rec specifics.\n     Improvements in pollset stream handling to use less sets.\n     Using atomic read/writes instead of volatiles now.\n     Keeping a reserve of \"transit\" pools and bucket_allocs for\n     use on secondary connections to avoid repeated setup/teardowns.\n\n  *) mod_proxy: Set a status code of 502 in case the backend just closed the\n     connection in reply to our forwarded request.  [Ruediger Pluem]\n\n  *) MPM event: Fix accounting of active/total processes on ungraceful restart,\n     PR 66004 (follow up to PR 65626 from 2.4.52).  [Yann Ylavic]\n\n  *) mod_proxy: Add backend port to log messages to\n     ease identification of involved service.  [Rainer Jung]\n\n  *) mod_systemd: Systemd socket activation can now be enabled at\n     build time but disabled at run time, if mod_systemd is not\n     loaded.  [Lubos Uhliarik <luhliari redhat.com>]\n\n  *) ab: Add an optional ramp delay when starting concurrent connections so\n     as to not trigger denial of service protection in the network. Report\n     levels of concurrency achieved in cases where the test completes before\n     full concurrency is achieved. [Graham Leggett]\n\n  *) mod_http2: preserve the port number given in a HTTP/1.1\n     request that was Upgraded to HTTP/2. Fixes PR65881.\n     [Stefan Eissing]\n\n  *) mod_http2: :scheme pseudo-header values, not matching the\n     connection scheme, are forwarded via absolute uris to the\n     http protocol processing to preserve semantics of the request.\n     Checks on combinations of pseudo-headers values/absence\n     have been added as described in RFC 7540.\n     Fixes <https://github.com/icing/mod_h2/issues/230>.\n     [Stefan Eissing]\n\n  *) core/mpm: add hook 'child_stopped` that gets called when the MPM has\n     stopped all processing in a child process. This is when all running\n     threads shall be stopped and joined.\n     [Stefan Eissing]\n\n  *) core: Make sure and check that LimitXMLRequestBody fits in system memory.\n     [Ruediger Pluem, Yann Ylavic]\n\n  *) ab: Fix the detection for when the server performed a legitimate\n     connection close as per RFC7230 6.3.1. We must check whedther the\n     connection was previously kept alive, and not whether the current\n     closed request is keepalive. [Graham Leggett]\n\n  *) mod_rewrite: Make URI-to-filename rewrites work transparently with\n     proxy early mappings (mapping=servlet/decoded).  [Yann Ylavic]\n\n  *) mod_md: do not interfere with requests to /.well-known/acme-challenge/\n     resources if challenge type 'http-01' is not configured for a domain.\n     Fixes <https://github.com/icing/mod_md/issues/279>.\n     [Stefan Eissing]\n\n  *) mod_proxy: Bump limit of proxy workers names to 384 characters.  PR 53218\n     [Yann Ylavic]\n\n  *) core: Simpler connection close logic if discarding the request body fails.\n     [Yann Ylavic, Ruediger Pluem]\n\n  *) mod_proxy: Use the maxium of front end and backend timeouts instead of the\n     minimum when tunneling requests (websockets, CONNECT requests).\n     Backend timeouts can be configured more selectively (per worker if needed)\n     as front end timeouts and typically the backend timeouts reflect the\n     application requirements better.  PR 65886 [Ruediger Pluem]\n\n  *) mod_watchdog: use the `child_stopping` and `child_stopped` hooks\n     to shutdown workers before pool destruction releases global\n     resources and libraries.\n     [Stefan Eissing]\n\n  *) ab: Respond appropriately to SSL_ERROR_WANT_READ and SSL_ERROR_WANT_WRITE.\n     Previously the correct event was polled for, but the response to the poll\n     would call write instead of read, and read instead of write. PR 55952\n     [Graham Leggett]\n\n  *) mod_md: the status description in MDomain's JSON, exposed in the\n     md-status handler (if configure) did sometimes not carry the correct\n     message when certificates needed renew.\n     [Stefan Eissing]\n\n  *) mod_tls: Fix a linkage issue with rustls when compiled\n     with rust 1.55, 1.56 or 1.57. This prevents the loading\n     of the module because of an undefined symbol: fmaf\n     See https://github.com/rustls/rustls-ffi/issues/133\n     [Christophe Jaillet]\n\n  *) ap_regex: Use Thread Local Storage (TLS) to recycle ap_regexec() buffers\n     when an efficient TLS implementation is available. [Yann Ylavic]\n\n  *) mod_reqtimeout: Fix missing handshake= timeout enforcement.  [Yann Ylavic]\n\n  *) mod_dav: Fix regression when gathering properties which could lead to huge\n     memory consumption proportional to the number of resources.\n     [Evgeny Kotkov, Ruediger Pluem]\n\n  *) mod_unixd: CoreDumpDirectory requires enabling tracing on FreeBSD 11+.\n     PR 65819.  [David CARLIER <devnexen gmail.com>]\n\n  *) mpm_event: Fix a possible listener deadlock on heavy load when restarting\n     and/or reaching MaxConnectionsPerChild.  PR 65769.  [Yann Ylavic]\n\n  *) http: Enforce that fully qualified uri-paths not to be forward-proxied\n     have an http(s) scheme, and that the ones to be forward proxied have a\n     hostname, per HTTP specifications.  [Ruediger Pluem, Yann Ylavic]\n\n  *) mod_http2: fixed a bug in v2.0.0 that could lead to an infinite\n     loop when clients close connections prematurely.\n     Enhanced the scoreboard status updates on h2 connections for\n     mod_status. 'server-status' now gives a better idea what the\n     connection is working on.\n     [Stefan Eissing]\n\n  *) mod_http: Correctly sent a 100 Continue status code when sending an interim\n     response as result of an Expect: 100-Continue in the request and not the\n     current status code of the request. PR 65725 [Ruediger Pluem]\n\n  *) mod_proxy_connect: Honor the smallest of the backend or client timeout\n     while tunneling.  [Yann Ylavic]\n\n  *) mod_http2: a regression in v1.15.24 of the modules was fixed that\n     could lead to httpd child processes not being terminated on a\n     graceful reload or when reaching MaxConnectionsPerChild.\n     When unprocessed h2 requests were queued at the time, these could stall.\n     See <https://github.com/icing/mod_h2/issues/212>.\n     [@hansborr, @famzah, Stefan Eissing]\n\n  *) mod_proxy_uwsgi: Remove duplicate slashes at the beginning of PATH_INFO.\n     PR 65616.  [Ruediger Pluem]\n\n  *) mod_md: Fix memory leak in case of failures to load the private key.\n     PR 65620 [ Filipe Casal <filipe.casal@trailofbits.com> ]\n\n  * mod_http2: the new pollset implementation is disabled when\n    compiling with an APR version less than 1.6.\n\n  *) mod_autoindex: Add \"IndexForbiddenReturn404\" to return 404 instead of a\n     403 when Options does not included \"indexes\". [Eric Covener]\n\n  *) mod_dir: Add \"NotFound\" option to \"DirectorySlash\" directive to return\n     404 instead of a DirectorySlash redirect. [Eric Covener]\n\n  *) mod_md: adding v2.4.8 with the following changes\n     - Added support for ACME External Account Binding (EAB).\n       Use the new directive `MDExternalAccountBinding` to provide the\n       server with the value for key identifier and hmac as provided by\n       your CA.\n       While working on some servers, EAB handling is not uniform\n       across CAs. First tests with a Sectigo Certificate Manager in\n       demo mode are successful. But ZeroSSL, for example, seems to\n       regard EAB values as a one-time-use-only thing, which makes them\n       fail if you create a seconde account or retry the creation of the\n       first account with the same EAB.\n     - The directive 'MDCertificateAuthority' now checks if its parameter\n       is a http/https url or one of a set of known names. Those are\n       'LetsEncrypt', 'LetsEncrypt-Test', 'Buypass' and 'Buypass-Test'\n       for now and they are not case-sensitive.\n       The default of LetsEncrypt is unchanged.\n     - `MDContactEmail` can now be specified inside a `<MDomain dnsname>`\n       section.\n     - Treating 401 HTTP status codes for orders like 403, since some ACME\n       servers seem to prefer that for accessing oders from other accounts.\n     - When retrieving certificate chains, try to read the repsonse even\n       if the HTTP Content-Type is unrecognized.\n     - Fixed a bug that reset the error counter of a certificate renewal\n       and prevented the increasing delays in further attempts.\n     - Fixed the renewal process giving up every time on an already existing\n       order with some invalid domains. Now, if such are seen in a previous\n       order, a new order is created for a clean start over again.\n       See <https://github.com/icing/mod_md/issues/268>\n     - Fixed a mixup in md-status handler when static certificate files\n       and renewal was configured at the same time.\n\n  *) mod_http2:\n     - Fixed an issue since 1.15.24 that \"Server\" headers in proxied requests\n       were overwritten instead of preserved. [PR by @daum3ns]\n     - Added directove 'H2StreamTimeout' to configure a separate value for HTTP/2\n       streams, overriding server's 'Timeout' configuration. [rpluem]\n     - HTTP/2 connections now use pollsets to monitor the status of the\n       ongoing streams and their main connection when host OS allows this.\n     - Removed work-arounds for older versions of libnghttp2 and checking\n       during configure that at least version 1.15.0 is present.\n     - The HTTP/2 connection state handler, based on an experiment and draft\n       at the IETF http working group (abandoned for some time), has been removed.\n     - H2SerializeHeaders no longer has an effect. A warning is logged when it is\n       set to \"on\". The switch enabled the internal writing of requests to be parsed\n       by the internal HTTP/1.1 protocol handler and was introduced to avoid\n       potential incompatibilities during the introduction of HTTP/2.\n     - Removed the abort/redo of tasks when mood swings lower the active limit.\n     [Ruediger Pluem, daum3ns, Stefan Eissing]\n\n  *) core: Be safe with ap_lingering_close() called with a socket NULL-ed by\n     a third-party module.  PR 65627.\n     [acmondor <bz.apache.org acmondor.ca>, Yann Ylavic]\n\n  *) mpm_event: Restart stopping of idle children after a load peak. PR 65626.\n     [Yann Ylavic, Ruediger Pluem]\n\n  *) mod_proxy: SetEnv proxy-nohalfclose (or alike) allows to disable TCP\n     half-close forwarding when tunneling protocols.  [Yann Ylavic]\n\n  *) mod_tls: added mod_tls from abetterinternet, donated\n     by ISRG/Prossimo <https://github.com/abetterinternet/mod_tls>.\n     - adds font-/backend TLS (v1.2/v1.3) via the Rust rustls crate\n       and its rustls-ffi C binding <https://github.com/rustls/rustls-ffi>.\n     - documentation at <https://github.com/abetterinternet/mod_tls>\n       (adding to Apache's manual TBD)\n     - build support for Apache httpd configure on *nix platforms,\n       rustls is linked statically into mod_tls.\n\n  *) mod_md: values for External Account Binding (EAB) can\n     now also be configured to be read from a separate JSON\n     file. This allows to keep server configuration permissions\n     world readable without exposing secrets.\n     [Stefan Eissing]\n\n  *) core: Add ap_unescape_url_ex() for better decoding control, and deprecate\n     unused AP_NORMALIZE_DROP_PARAMETERS flag.\n     [Yann Ylavic, Ruediger Pluem, Stefan Eissing, Joe Orton]\n\n  *) core: AP_NORMALIZE_DECODE_UNRESERVED should normalize the second dot in\n     the uri-path when it's preceded by a dot.  [Yann Ylavic]\n\n  *) mod_proxy: New tunnel_forward hooking mechanism allowing modules to handle\n     Upgrade(d) protocols data.  [Yann Ylavic]\n\n  *) mod_dav: Correctly handle errors returned by dav providers on REPORT\n     requests. [Ruediger Pluem]\n\n  *) mod_rewrite: Fix UDS (\"unix:\") scheme for [P] rules.  PR 57691 + 65590.\n     [Janne Peltonen <janne.peltonen sange.fi>]\n\n  *) mod_proxy: Handle UDS URIs with empty hostname (\"unix:///...\") as if they\n     had no hostname (\"unix:/...\").  [Yann Ylavic]\n\n  *) event mpm: Correctly count active child processes in parent process if\n     child process dies due to MaxConnectionsPerChild.\n     PR 65592 [Ruediger Pluem]\n\n  *) core: Add ap_pre_connection() as a wrapper to ap_run_pre_connection()\n     and use it to prevent that failures in running the pre_connection\n     hook cause crashes afterwards. [Ruediger Pluem]\n\n  *) mod_md: fixed a bug in handling multiple parallel OCSP requests. These could\n     run into an assertion which terminated (and restarted) the child process where\n     the task was running. Eventually, all OCSP responses were collected, but not\n     in the way that things are supposed to work.\n     See also <https://bz.apache.org/bugzilla/show_bug.cgi?id=65567>.\n     The bug was possibly triggered when more than one OCSP status needed updating\n     at the same time. For example for several renewed certificates after a server\n     reload.\n\n  *) mod_md: when MDMessageCmd for a 'challenge-setup:<type>:<dnsname>'\n     fails (!= 0 exit), the renewal process is aborted and an error is\n     reported for the MDomain. This provides scripts that distribute\n     information in a cluster to abort early with bothering an ACME\n     server to validate a dns name that will not work. The common\n     retry logic will make another attempt in the future, as with\n     other failures.\n     Fixed a bug when adding private key specs to an already working\n     MDomain, see <https://github.com/icing/mod_md/issues/260>.\n     [Stefan Eissing]\n\n  *) core: Add ap_create_connection() to create either a server or client/proxy\n     connection.\n\n  *) mod_http2: when a server is restarted gracefully, any idle h2 worker\n     threads are shut down immediately. [Stefan Eissing]\n\n  *) core: Initialize the request fields on read failure to avoid NULLs.\n     [Yann Ylavic]\n\n  *) mod_proxy: Do not canonicalize the proxied URL when both \"nocanon\" and\n     \"ProxyPassInterpolateEnv On\" are configured.  PR 65549.\n     [Joel Self <joelself gmail.com>]\n\n  *) mpm_event: Fix children processes possibly not stopped on graceful\n     restart.  PR 63169.  [Joel Self <joelself gmail.com>]\n\n  *) mod_unique_id: Reduce the time window where duplicates may be generated\n     PR 65159\n     [Christophe Jaillet]\n\n  *) Revert \"mod_unique_id: Fix potential duplicated ID generation under heavy load.\n     PR 65159\" added in 2.4.47.\n     This causes issue on Windows.\n     [Christophe Jaillet]\n\n  *) mod_proxy_uwsgi: Fix PATH_INFO setting for generic worker.  [Yann Ylavic]\n\n  *) mod_md: Certificate/keys pairs are verified as matching before a renewal is accepted\n     as successful or a staged renewal is replacing the existing certificates.\n     This avoid potential mess ups in the md store file system to render the active\n     certificates non-working. [@mkauf]\n\n  *) mod_proxy: Fix a potential infinite loop when tunneling Upgrade(d)\n     protocols from mod_proxy_http, and a timeout triggering falsely when\n     using mod_proxy_wstunnel, mod_proxy_connect or mod_proxy_http with\n     upgrade= setting.  PRs 65521 and 65519.  [Yann Ylavic]\n\n  *) mod_proxy: Faster unix socket path parsing in the \"proxy:\" URL.\n     [Yann Ylavic]\n\n  *) mpm_event: Fix graceful stop/restart of children processes if connections\n     are in lingering close for too long.  [Yann Ylavic]\n\n  *) mod_md: fixed a potential null pointer dereference if ACME/OCSP\n     server returned 2xx responses without content type. Reported by chuangwen.\n     [chuangwen, Stefan Eissing]\n\n  * core/mpm: add hook 'child_stopping` that gets called when the MPM is\n    stopping a child process. The additional `graceful` parameter allows\n    registered hooks to free resources early during a graceful shutdown.\n    [Yann Ylavic, Stefan Eissing]\n\n  *) mod_proxy: Fix icomplete initialization of BalancerMember(s) from the\n     balancer-manager, which can lead to a crash.  [Yann Ylavic]\n\n  *) mod_http2:\n   - Aborting requests via RST_STREAM no longer affect the available\n     resources of a connection when the first chunk of the response\n     body has been sent.\n   - H2Min/MaxWorkers behave as intended again. The module will initially\n     create H2MinWorkers threads and add up to H2MaxWorkers when needed. These\n     additional workers time out when idle after H2MaxWorkerIdleSeconds and\n     disappear again.\n   - Added a timeout to h2 worker cleanup to exit latest after 5 seconds of\n     waiting on idle workers to terminate. This happens after all connections\n     have been processed. a WARNING is logged in case workers lagged behind.\n   - When the shutdown of a child is detected (e.g. graceful shutdown), the\n     module will terminate all idle workers above H2MinWorkers right away.\n     This detection currently only happens when a HTTP/2 connection is active.\n     [Stefan Eissing]\n\n  *) mod_md:\n     - Domain names in `<MDomain ...>` can now appear in quoted form.\n     - Fixed a failure in ACME challenge selection that aborted further searches\n       when the tls-alpn-01 method did not seem to be suitable.\n     - Changed the tls-alpn-01 setup to only become unsuitable when none of the\n       dns names showed support for a configured 'Protocols ... acme-tls/1'. This\n       allows use of tls-alpn-01 for dns names that are not mapped to a VirtualHost.\n     [Stefan Eissing]\n\n  *) core/mod_proxy/mod_ssl:\n     Adding `outgoing` flag to conn_rec, indicating a connection is\n     initiated by the server to somewhere, in contrast to incoming\n     connections from clients.\n     Adding 'ap_ssl_bind_outgoing()` function that marks a connection\n     as outgoing and is used by mod_proxy instead of the previous\n     optional function `ssl_engine_set`. This enables other SSL\n     module to secure proxy connections.\n     The optional functions `ssl_engine_set`, `ssl_engine_disable` and\n     `ssl_proxy_enable` are now provided by the core to have backward\n     compatibility with non-httpd modules that might use them. mod_ssl\n     itself no longer registers these functions, but keeps them in its\n     header for backward compatibility.\n     The core provided optional function wrap any registered function\n     like it was done for `ssl_is_ssl`.\n     [Stefan Eissing]\n\n  *) mod_h2: Don't strip headers from 304 responses.  [Yann Ylavic]\n\n  *) mod_proxy: Fix possible reuse/merging of Proxy(Pass)Match worker instances\n     with others when their URLs contain a '$' substitution.  PR 65419.\n     [Yann Ylavic]\n\n  *) mpm_prefork: Block signals for child_init hooks to prevent potential\n     threads created from there to catch MPM's signals.\n     [Ruediger Pluem, Yann Ylavic]\n\n  *) mod_ssl: tighten the handling of ALPN for outgoing (proxy)\n     connections. If ALPN protocols are provided and sent to the\n     remote server, the received protocol selected is inspected\n     and checked for a match. Without match, the peer handshake\n     fails.\n     An exception is the proposal of \"http/1.1\" where it is\n     accepted if the remote server did not answer ALPN with\n     a selected protocol. This accomodates for hosts that do\n     not observe/support ALPN and speak http/1.x be default.\n\n  * mod_log_config/mod_ssl: moved the log_handlers registered by mod_ssl\n    into mod_log_config itself. These now use the global `ap_ssl_var_lookup()`\n    functions and work for all running SSL modules.\n    The dependency from mod_ssl to mod_log_config and its header is removed.\n    mod_ssl now provides the content of \"{errstr}c\" as variable \"SSL_CLIENT_VERIFY_ERRSTR\".\n    This change should be fully compatible to all deployed configurations.\n    [Stefan Eissing]\n\n  *) dbm: Split the loading of a dbm driver from the opening of a dbm file. When\n     an attempt to load a dbm driver fails, log clearly which driver triggered\n     the error (not \"default\"), and what the error was. [Graham Leggett]\n\n  *) core: Fix a regression that stripped the ETag header from 304 responses.\n     PR 61820 [Ruediger Pluem, Roy T. Fielding]\n\n  *) core/mod_ssl/mod_md: adding OCSP response provisioning as core feature. This\n     allows modules to access and provide OCSP response data without being tied\n     of each other. The data is exchanged in standard, portable formats (PEM encoded\n     certificates and DER encoded responses), so that the actual SSL/crypto\n     implementations used by the modules are independant of each other.\n     Registration and retrieval happen in the context of a server (server_rec)\n     which modules may use to decide if they are configured for this or not.\n     The area of changes:\n     1. core: defines 2 functions in include/http_ssl.h, so that modules may\n        register a certificate, together with its issuer certificate for OCSP\n        response provisioning and ask for current response data (DER bytes) later.\n        Also, 2 hooks are defined that allow modules to implement this OCSP\n        provisioning.\n     2. mod_ssl uses the new functions, in addition to what it did already, to\n        register its certificates this way. If no one is interested in providing\n        OCSP, it falls back to its own (if configured) stapling implementation.\n     3. mod_md registers itself at the core hooks for OCSP provisioning. Depending\n        on configuration, it will accept registrations of its own certificates only,\n        all certificates or none.\n     [Stefan Eissing]\n\n  *) mod_proxy_wstunnel: Add ProxyWebsocketFallbackToProxyHttp to opt-out the\n     fallback to mod_proxy_http for WebSocket upgrade and tunneling.\n     [Yann Ylavic]\n\n  *) mod_proxy_hcheck: Honor worker timeout settings.  [Yann Ylavic]\n\n  *) mod_lua: Add support to Lua 5.4 [Joe Orton, Giovanni Bechis, Ruediger Pluem]\n\n  *) mod_md: Tolerate a missing \"revokeCert\" or \"keyChange\" resource.\n     [Fraser Tweedale <ftweedal redhat.com>]\n\n  *) mod_ssl: Add SSL_{CLIENT,SERVER}_B64CERT variables with\n     base64-encoded DER certificates.  Add SSL_CLIENT_B64CERT_CHAIN_n\n     equivalents for SSL_CLIENT_CERT_CHAIN_n, and new\n     \"ExportBase64CertData\" argument for SSLOptions.  PR 65169.\n     [Joe Orton]\n\n  *) mod_proxy_balancer: Include nonce in XML output.  PR 63074.\n     Federico Mennite <federico.mennite lifeware.ch>\n\n  *) mod_http2: Fixed a race condition that could lead to streams being\n     aborted (RST to the client), although a response had been produced.\n     [Stefan Eissing]\n\n  *) mod_unique_id: Fix potential duplicated ID generation under heavy load.\n     PR 65159\n     [Jonas Müntener <jonas.muentener ergon.ch>, Christophe Jaillet]\n\n  *) core: provide ap_ssl_* functions in new http_ssl.h header file.\n     [Stefan Eissing]\n\n  *) mod_socache_shmcb: Avoid double SHM cleanup and possible crash on\n     restart/stop.  PR 59798.  [Yann Ylavic]\n\n  *) mod_md: v2.4.0 with improvements and bugfixes\n     - MDPrivateKeys allows the specification of several types. Beside \"RSA\" plus\n     optional key lengths elliptic curves can be configured. This means you can\n     have multiple certificates for a Managed Domain with different key types.\n     With ```MDPrivateKeys secp384r1 rsa2048``` you get one ECDSA  and one RSA\n     certificate and all modern client will use the shorter ECDSA, while older\n     client will get the RSA certificate.\n     Many thanks to @tlhackque who pushed and helped on this.\n     - Support added for MDomains consisting of a wildcard. Configuring\n     ```MDomain *.host.net``` will match all virtual hosts matching that pattern\n     and obtain one certificate for it (assuming you have 'dns-01' challenge\n     support configured). Addresses #239.\n     - Removed support for ACMEv1 servers. The only known installation used to\n     be Let's Encrypt which has disabled that version more than a year ago for\n     new accounts.\n     - Andreas Ulm (<https://github.com/root360-AndreasUlm>) implemented the\n     ```renewing``` call to ```MDMessageCmd``` that can deny a certificate\n     renewal attempt. This is useful in clustered installations, as\n     discussed in #233).\n     - New event ```challenge-setup:<type>:<domain>```, triggered when the\n     challenge data for a domain has been created. This is invoked before the\n     ACME server is told to check for it. The type is one of the ACME challenge\n     types. This is invoked for every DNS name in a MDomain.\n     - The max delay for retries has been raised to daily (this is like all\n     retries jittered somewhat to avoid repeats at fixed time of day).\n     - Certain error codes reported by the ACME server that indicate a problem\n     with the configured data now immediately switch to daily retries. For\n     example: if the ACME server rejects a contact email or a domain name,\n     frequent retries will most likely not solve the problem. But daily retries\n     still make sense as there might be an error at the server and un-supervised\n     certificate renewal is the goal. Refs #222.\n     - Test case and work around for domain names > 64 octets. Fixes #227.\n     When the first DNS name of an MD is longer than 63 octets, the certificate\n     request will not contain a CN field, but leave it up to the CA to choose one.\n     Currently, Lets Encrypt looks for a shorter name in the SAN list given and\n     fails the request if none is found. But it is really up to the CA (and what\n     browsers/libs accept here) and may change over the years. That is why\n     the decision is best made at the CA.\n     - Retry delays now have a random +/-[0-50]% modification applied to let\n     retries from several servers spread out more, should they have been\n     restarted at the same time of day.\n     - Fixed several places where the 'badNonce' return code from an ACME server\n     was not handled correctly. The test server 'pebble' simulates this behaviour\n     by default and helps nicely in verifying this behaviour. Thanks, pebble!\n     - Set the default `MDActivationDelay` to 0. This was confusing to users that\n     new certificates were deemed not usably before a day of delay. When clocks are\n     correct, using a new certificate right away should not pose a problem.\n     - When handling ACME authorization resources, the module no longer requires\n     the server to return a \"Location\" header, as was necessary in ACMEv1.\n     Fixes #216.\n     - Fixed a theoretical uninitialized read when testing for JSON error responses\n     from the ACME CA. Reported at <https://bz.apache.org/bugzilla/show_bug.cgi?id=64297>.\n     - ACME problem reports from CAs that include parameters in the Content-Type\n     header are handled correctly. (Previously, the problem text would not be\n     reported and retries could exist CA limits.)\n     - Account Update transactions to V2 CAs now use the correct POST-AS-GET method.\n     Previously, an empty JSON object was sent - which apparently LE accepted,\n     but others reject.\n     - MDCertificateFile and MDCertificateKeyFile can now be specified several\n     times to add multiple, static certificates to a MDomain.\n     [Stefan Eissing, @tlhackque, Andreas Ulm]\n\n  *) mod_session: Improve session parsing.  [Yann Yalvic]\n\n  *) mod_proxy_hcheck: Don't pile up health checks if the previous one did\n     not finish before hcinterval.  PR 63010.  [Yann Ylavic]\n\n  *) core: Adding SSL related inquiry functions to the server API.\n     These function are always available, even when no module providing\n     SSL is loaded. They provide their own \"shadowing\" implementation for\n     the optional functions of similar name that mod_ssl and impersonators\n     of mod_ssl provide.\n     This enables loading of several SSL providing modules when all but\n     one of them registers itself into the new hooks. Two old-style SSL\n     modules will not work, as they replace the others optional functions\n     with their own.\n     Modules using the old-style optional functions will continue to work\n     as core supplies its own versions of those.\n     The following has been added so far:\n     - ap_ssl_conn_is_ssl() to query if a connection is using SSL.\n     - ap_ssl_var_lookup() to query SSL related variables for a\n       server/connection/request.\n     - Hooks for 'ssl_conn_is_ssl' and 'ssl_var_lookup' where modules\n       providing SSL can install their own value supplying functions.\n     - ap_ssl_add_cert_files() to enable other modules like mod_md to provide\n       certificate and keys for an SSL module like mod_ssl.\n     - ap_ssl_add_fallback_cert_files() to enable other modules like mod_md to\n       provide a fallback certificate in case no 'proper' certificate is\n       available for an SSL module like mod_ssl.\n     - ap_ssl_answer_challenge() to enable other modules like mod_md to\n       provide a certificate as used in the RFC 8555 'tls-alpn-01' challenge\n       for the ACME protocol for an SSL module like mod_ssl. The function\n       and its hook provide PEM encoded data instead of file names.\n     - Hooks for 'ssl_add_cert_files', 'ssl_add_fallback_cert_files' and\n       'ssl_answer_challenge' where modules like mod_md can provide providers\n       to the above mentioned functions.\n     [Stefan Eissing]\n\n  *) mod_http2: new option 'H2OutputBuffering on/off' which controls the\n     buffering of stream output. The default is on, which is the behaviour of\n     previous mod-h2 versions. When off, all bytes are made available immediately\n     to the main connection for sending them out to the client. This fixes interop\n     issues with certain flavours of gRPC. [Stefan Eissing]\n\n  *) mod_authnz_ldap: Prevent authentications with empty passwords for the\n     initial bind to fail with status 500. [Ruediger Pluem]\n\n  *) mod_http2: Fixed reporting of transferred bytes for mod_logio for\n     modifiers %O (and %S) to report the number of transferred header and\n     body lengths. This is still only an approximation of the bytes on the\n     connection. The data is subject to header compression and h2 framing\n     afterwards. [Stefan Eissing]\n\n  *) mod_cgid: Intercept and log stderr output correctly on Unix systems\n     supporting fd passing.  PR 54221.  [Joe Orton]\n\n  *) mod_auth_digest: Fast validation of the nonce's base64 to fail early if\n     the format can't match anyway.  [Yann Ylavic]\n\n  *) mod_xml2enc: Update check to match MIME types matching\n     \"+xml\" rather than anything containing \"xml\", avoiding\n     corruption of Microsoft OOXML formats.  PR 64339.\n     [Joseph Heenan <joseph.heenan fintechlabs.io>]\n\n  *) mod_proxy_wstunnel: Leave Upgrade requests handling to mod_proxy_http,\n     allowing for (non-)Upgrade negotiation with the origin server.\n     [Yann Ylavic]\n\n  *) mod_ssl: SSLProxyMachineCertificateFile/Path may reference files\n     which include CA certificates; those CA certs are treated as if\n     configured with SSLProxyMachineCertificateChainFile.  [Joe Orton]\n\n  *) mpm_event: don't reset connections after lingering close, restoring prior\n     to 2.4.28 behaviour.  [Yann Ylavic]\n\n  *) mod_dav_fs: Improve logging output when failing to open files for\n     writing.  PR 64413.  [Bingyu Shen <ahshenbingyu gmail.com>]\n\n  *) mod_proxy: Add optional third argument for ProxyRemote, which\n     configures Basic authentication credentials to pass to the remote\n     proxy.  PR 37355.  [Joe Orton]\n\n  *) mod_proxy_http: Fix 100-continue deadlock for spooled request bodies,\n     leading to Request Timeout (408).  PR 63855.  [Yann Ylavic]\n\n  *) http: Allow unknown response status' lines returned in the form of\n     \"HTTP/x.x xxx Status xxx\".  [Yann Ylavic]\n\n  *) mod_proxy_fcgi: Honor \"SetEnv proxy-sendcl\" to forward a chunked\n     Transfer-Encoding from the client, spooling the request body when needed\n     to provide a Content-Length to the backend.  PR 57087.  [Yann Ylavic]\n\n  *) mpm_event: kill connections in keepalive state only when there is no more\n     workers available, not when the maximum number of connections is reached,\n     restoring prior to 2.4.30 behaviour.  [Yann Ylavic]\n\n  *) mod_allowmethods: Allow methods to be added/removed with +/- prefix.  PR64785.\n     [Marcel Montes <spiceman gmail.com>]\n\n  *) mod_unique_id: Use base64url encoding for UNIQUE_ID variable,\n     avoiding the use of '@'.  PR 57044.\n     [Michael Kaufmann <apache-bugzilla michael-kaufmann.ch>]\n\n  *) core: add ReadBufferSize, FlushMaxThreshold and FlushMaxPipelined\n     directives.  [Yann Ylavic]\n\n  *) mod_md: lowered the required minimal libcurl version from 7.50 to 7.29\n     as proposed by <alexander.gerasimov@codeit.pro>.\n\n  *) mod_http2: Log requests and sent the configured error response in case of\n     early detected errors like too many or too long headers.\n     [Ruediger Pluem, Stefan Eissing]\n\n  *) mod_proxy_uwsgi: Fix a crash when sending environment variables with no\n     value. PR 64598 [Ruediger Pluem]\n\n  *) mod_cgi/mod_cgid: Avoid a second read from a CGI script after a\n     timeout, which effectively doubled the configured timeout setting.\n     PR 64709.  [Joe Orton]\n\n  *) core: handle headers when replying a 304 following RFC7234.\n     [Giovanni Bechis]\n\n  *) mod_http2: remove support for abandoned http-wg draft\n     <https://datatracker.ietf.org/doc/draft-kazuho-h2-cache-digest/>.\n     [Stefan Eissing]\n\n  *) mod_proxy_uwsgi: Error out on HTTP header larger than 16K (hard\n     protocol limit).  [Yann Ylavic]\n\n  *) mod_dav: Some DAV extensions, like CalDAV, specify both document\n     elements and property elements that need to be taken into account\n     when generating a property. The document element and property element\n     are made available in the dav_liveprop_elem structure under the\n     DAV_PROP_ELEMENT key in the resource pool. [Graham Leggett]\n\n  *) mod_dav: Add utility functions dav_validate_root_ns(),\n     dav_find_child_ns(), dav_find_next_ns(), dav_find_attr_ns() and\n     dav_find_attr() so that other modules get to play too.\n     [Graham Leggett]\n\n  *) mod_http2:\n     Fixes <https://github.com/icing/mod_h2/issues/200>:\n     \"LimitRequestFields 0\" now disables the limit, as documented.\n     Fixes <https://github.com/icing/mod_h2/issues/201>:\n     Do not count repeated headers with same name against the field\n     count limit. The are merged internally, as if sent in a single HTTP/1 line.\n     [Stefan Eissing]\n\n  *) mod_http2: Avoid segfaults in case of handling certain responses for\n     already aborted connections.  [Stefan Eissing, Ruediger Pluem]\n\n  *) core: Remove support for the Content-MD5 header, removed in RFC7231.\n     Functions ap_md5digest() and ap_md5contextTo64() removed, and\n     ContentDigest directive. [Graham Leggett]\n\n  *) mod_dav: Allow other DAV modules to use dav_get_resource().\n     [Graham Leggett]\n\n  *) mpm_common: remove ap_mpm_unregister_poll_callback() and\n     mpm_unregister_poll_callback hook. [Yann Ylavic]\n\n  *) mod_proxy_http: add asynchronous handling of Upgrade(d) protocols,\n     where idle connections are returned to the MPM and rescheduled on\n     another thread when ready. [Yann Ylavic]\n\n  *) mod_dav: Add method_precondition hook. WebDAV extensions define\n     conditions that must exist before a WebDAV method can be executed.\n     This hook allows a WebDAV extension to verify these preconditions.\n     [Graham Leggett]\n\n  *) Add hooks deliver_report and gather_reports to mod_dav.h. Allows other\n     modules apart from versioning implementations to handle the REPORT method.\n     [Graham Leggett]\n\n  *) Add dav_get_provider(), dav_open_lockdb() and dav_close_lockdb() mod_dav.h.\n     [Graham Leggett]\n\n  *) \"[mod_dav_fs etag handling] should really honor the FileETag setting\".\n     - It now does.\n     - Add \"Digest\" to FileETag directive, allowing a strong ETag to be\n       generated using a file digest.\n     - Add ap_make_etag_ex() and ap_set_etag_fd() to allow full control over\n       ETag generation.\n     - Add concept of \"binary notes\" to request_rec, allowing packed bit flags\n       to be added to a request.\n     - First binary note - AP_REQUEST_STRONG_ETAG - allows modules to force\n       the ETag to a strong ETag to comply with RFC requirements, such as those\n       mandated by various WebDAV extensions.\n     [Graham Leggett]\n\n  *) mod_ssl: Fix a race condition and possible crash when using a proxy client\n     certificate (SSLProxyMachineCertificateFile).\n     [Armin Abfalterer <a.abfalterer gmail.com>]\n\n  *) mod_proxy: recognize parameters from ProxyPassMatch workers with dollar\n     substitution, such that they apply to the backend connection.  Note that\n     connection reuse is disabled by default to avoid compatibility issues.\n     [Takashi Sato, Jan Kaluza, Eric Covener, Yann Ylavic, Jean-Frederic Clere]\n\n  *) mod_proxy_http: remove proxy-sendchunked and proxy-sendchunks\n     handling, the default behaviour being now to stream the request body\n     using Content-Length when the length is known and fall back to chunked\n     Transfer-Encoding otherwise (unless proxy-sendcl is set thus requiring\n     that the request body be spooled to memory or filesystem). [Yann Ylavic]\n\n  *) mod_ldap: Avoid performance overhead of APR-util rebind cache for\n     OpenLDAP 2.2+.  PR 64414.  [Joe Orton]\n\n  *) mod_proxy_http: flush spooled request body in one go to avoid\n     leaking (or long lived) temporary file. PR 64452. [Yann Ylavic]\n\n  *) mod_proxy_fcgi: ProxyFCGISetEnvIf unsets variables when expression\n     evaluates to false.  PR64365. [Michael König <mail ikoenig.net>]\n\n  *) mod_proxy_http: handle Upgrade request, 101 (Switching Protocol) response\n     and switched protocol forwarding.  [Yann Ylavic]\n\n  *) mod_ssl: The \"ssl_var_lookup\" optional function API now takes a\n     const char *name argument and returns a const char * string\n     value.  The pool argument must now be non-NULL.  [Joe Orton]\n\n  *) mod_ssl: With OpenSSL 1.1.1 and later, SSLRandomSeed is now\n     ignored.  OpenSSL must be configured with a suitable entropy\n     source, or mod_ssl will fail to start up.  [Joe Orton]\n\n  *) mod_ssl: With OpenSSL 1.1.1 and later, client-initiated\n     renegotiation in TLSv1.2 and earlier is blocked at SSL library\n     level (with a TLS warning alert sent), rather than by aborting\n     the connection inside mod_ssl.  [Joe Orton]\n\n  *) core: Add optional \"options=\" argument to Listen.  Supported\n     keywords are \"freebind\", \"reuseport\" and \"v6only\".  PR 61865.\n     [Jan Kaluza, Lubos Uhliarik <luhliari redhat.com>, Joe Orton]\n\n  *) config: Allow for environment variable substitution with default value,\n     for when the variable is not defined, using format ${VAR?=default value}.\n     [Yann Ylavic]\n\n  *) htcacheclean: Empty directories in CacheRoot are still present even after\n     using \"-t\". PR64313 [Petros Marios Prokopiou <pprokopi redhat.com>,\n     Ruediger Pluem, Jean-Frederic Clere]\n\n  *) mod_reqtimeout: Cannot override default Virtualhost's mod_reqtimeout.\n     PR64295 [Jean-Frederic Clere]\n\n  *) mod_proxy: Allow ProxyErrorOverride to be restricted to specific status\n     codes.  PR63628. [Martin Drößler <mail martindroessler.de>]\n\n  *) configtest: Issue a warning for non-existent directories in <Directory> config\n     sections. PR63079. [Stephane Blondon <stephane.blondon gmail.com>].\n\n  *) mod_proxy_http: Fix random memory-corruption in case of an error while\n     reading a response from the backend.\n     PR 64234 [Ruediger Pluem, Barnim Dzwillo <dzwillo@strato.de>]\n\n  *) core: Use a temporary file when writing the pid file, avoiding\n     startup failure if an empty pidfile is left over from a\n     previous crashed or aborted invocation of httpd.  PR 63140.\n     [Nicolas Carrier <carrier.nicolas0 gmail.com>, Joe Orton]\n\n  *) mod_http2: Fixes issue where mod_unique_id would generate non-unique request\n     identifier under load, see <https://github.com/icing/mod_h2/issues/195>.\n     [Michael Kaufmann, Stefan Eissing]\n\n  *) mod_session_cookie: Add SessionCookieMaxAge to allow the mod_session\n     cookie to be sent as a \"session cookie\" with no expiration even when the\n     SessionMaxAge will be enforced on the server. PR56040 [Eric Covener]\n\n  *) mod_session: Fix an issue that blocked new sessions being created after\n     session expiration or other session errors. PR56052 [Eric Covener]\n\n  *) mod_proxy_hcheck: Allow healthcheck expressions to use %{Content-Type}.\n     PR64140. [Renier Velazco <renier.velazco upr.edu>]\n\n  *) mod_ssl: Fix memory leak of OCSP stapling response. [Yann Ylavic]\n\n  *) mod_authz_groupfile: Drop AH01666 from loglevel \"error\" to \"info\".\n     PR64172.\n\n  *) mod_usertrack: Add CookieSameSite, CookieHTTPOnly, and CookieSecure\n     to allow customization of the usertrack cookie. PR64077.\n     [Prashant Keshvani <prashant2400 gmail.com>, Eric Covener]\n\n  *) mpm_event: avoid possible KeepAlveTimeout off by -100 ms.\n     [Eric Covener, Yann Ylavic]\n\n  *) mod_md:\n     - Prefer MDContactEmail directive to ServerAdmin for registration. New directive\n       thanks to Timothe Litt (@tlhackque).\n     - protocol check for pre-configured \"tls-alpn-01\" challenge has been improved. It will now\n       check all matching virtual hosts for protocol support. Thanks to @mkauf.\n     - Corrected a check when OCSP stapling was configured for hosts\n       where the responsible MDomain is not clear, by Michal Karm Babacek (@Karm).\n     - Softening the restrictions where mod_md configuration directives may appear. This should\n       allow for use in <If> and <Macro> sections. If all possible variations lead to the configuration\n       you wanted in the first place, is another matter.\n     [Michael Kaufmann <mail michael-kaufmann.ch>, Timothe Litt (@tlhackque),\n      Michal Karm Babacek (@Karm), Stefan Eissing (@icing)]\n\n  *) core: ap_method_mask_t type added for method bitmasks, changed\n     from apr_int64_t and used for the method_mask field in\n     ap_method_list_t, AP_METHOD_BIT, allowed field of request_rec,\n     limited field of cmd_parms.  PR 63885.  [Joe Orton]\n\n  *) mod_ssl: Do not keep connections to OCSP responders alive when doing\n     OCSP requests.  PR 64135.  [Ruediger Pluem]\n\n  *) mod_ssl: Disable client verification on ACME ALPN challenges. Fixes github\n     issue mod_md#172 (https://github.com/icing/mod_md/issues/172).\n     [Michael Kaufmann <mail michael-kaufmann.ch>, Stefan Eissing]\n\n  *) mod_rewrite: Extend the [CO] (cookie) flag of RewriteRule to accept a\n     SameSite attribute. [Eric Covener]\n\n  *) Update DOCTYPE tags in server-generated HTML. PR62989.\n     [Andra Farkas <deepbluemistake gmail.com>, Giovanni Bechis <giovanni paclan.it>]\n\n  *) mod_setenvif: Passing an env-variable parameter of \"--early\" in non-perdir\n     context runs directives from this module before `RequestHeader ... early`\n     are evaluated. This allows results of SetEnvIf conditionals to be used\n     to modify request headers in early mode. [Eric Covener]\n\n  *) config: Speed up graceful restarts by using pre-hashed command table. PR 64066.\n     [Giovanni Bechis <giovanni paclan.it>, Jim Jagielski]\n\n  *) mod_lua: Add r:headers_in_table, r:headers_out_table, r:err_headers_out_table,\n     r:notes_table, r:subprocess_env_table as read-only native table alternatives\n     that can be iterated over. [Eric Covener]\n\n  *) configure: Add manualdir and proxycachedir to the APR_ENABLE_LAYOUT macro call.\n     [Graham Leggett]\n\n  *) Add support for cross compiling to apxs. If apxs is being executed from somewhere\n     other than its target location, add that prefix to includes and library directories.\n     Without this, apxs would fail to find config_vars.mk and exit. [Graham Leggett]\n\n  *) Add a config layout for OpenWRT. [Graham Leggett]\n\n  *) mod_http2: Fixed rare cases where a h2 worker could deadlock the main connection.\n     [Yann Ylavic, Stefan Eissing]\n\n  *) mod_lua: Accept nil assignments to the exposed tables (r.subprocess_env,\n     r.headers_out, etc) to remove the key from the table. PR63971.\n     [Eric Covener]\n\n  *) mod_http2: Fixed interaction with mod_reqtimeout. A loaded mod_http2 was disabling the\n     ssl handshake timeouts. Also, fixed a mistake of the last version that made `H2Direct`\n     always `on`, regardless of configuration. Found and reported by\n     <Armin.Abfalterer@united-security-providers.ch> and\n     <Marcial.Rion@united-security-providers.ch>. [Stefan Eissing]\n\n  *) mod_http2: Multiple field length violations in the same request no longer cause\n     several log entries to be written. [@mkauf]\n\n  *) mod_md: v2.2.4 from github, Fixes a compile time issue with OpenSSL 1.0.2 in\n     the new OCSP code. Skips port checks for domain server_rec selection when \"tls-alpn-01\"\n     is configured explicitly (related to #133). [@mkauf, Stefan Eissing]\n\n  *) mod_ssl: Support logging private key material for use with\n     wireshark via log file given by SSLKEYLOGFILE environment\n     variable.  Requires OpenSSL 1.1.1.  PR 63391.  [Joe Orton]\n\n  *) mod_proxy: Improve tunneling loop to support half closed connections and\n     pending data draining (for protocols like rsync). PR 61616. [Yann Ylavic]\n\n  *) mod_proxy: Add proxy check_trans hook for proxy modules to possibly\n     decline request handling at early stage.  [Yann Ylavic]\n\n  *) mod_proxy: Put mod_proxy_{connect,wstunnel} tunneling code in common in\n     proxy_util.  [Yann Ylavic]\n\n  *) mod_proxy_http: Fix the forwarding of requests with content body when a\n     balancer member is unavailable; the retry on the next member was issued\n     with an empty body (regression introduced in 2.4.41).  [Yann Ylavic]\n\n  *) mod_ssl: negotiate the TLS protocol version per name based vhost\n     configuration, when linked with OpenSSL-1.1.1 or later. The base vhost's\n     SSLProtocol (from the first vhost declared on the IP:port) is now only\n     relevant if no SSLProtocol is declared for the vhost or globally,\n     otherwise the vhost or global value apply.  [Yann Ylavic]\n\n  *) mod_proxy_http: Fix 100-continue deadlock for spooled request bodies,\n     leading to Request Timeout (408).  PR 63855.  [Yann Ylavic]\n\n  *) mod_deflate, mod_brotli: honor \"Accept-Encoding: foo;q=0\" as per RFC 7231; which\n     means 'foo' is \"not acceptable\".  PR 58158 [Chistophe Jaillet]\n\n  *) mod_proxy: Fix crash by resolving pool concurrency problems. PR 63503\n     [Ruediger Pluem, Eric Covener]\n\n  *) core: On Windows, fix a start-up crash if <IfFile ...> is used with a path that is not\n     valid (For example, testing for a file on a flash drive that is not mounted)\n     [Christophe Jaillet]\n\n  *) mod_proxy_balancer: Fix case-sensitive referer check related to CSRF/XSS\n     protection. PR63688. [Armin Abfalterer <a.abfalterer gmail.com>]\n\n  *) mod_authn_socache: Increase the maximum length of strings that can be cached by\n     the module from 100 to 256.  PR 62149 [<thorsten.meinl knime.com>]\n\n  *) mod_ssl: reverting a 2.4.40 change where a superfluous SSLCertificateChainFile configuration\n     for a domain managed by mod_md caused a startup error. This happened when mod_md installed\n     its fallback certificate, before it got the first real certificate from Lets Encrypt.\n     [Stefan Eissing]\n\n  *) core, mod_rewrite: Set PCRE_DOTALL by default. Revert via\n     RegexDefaultOptions -DOTALL [Yann Ylavic]\n\n  *) core: Remove request details from built-in error documents [Eric Covener]\n\n  *) mod_http2: core setting \"LimitRequestFieldSize\" is not additionally checked on\n     merged header fields, just as HTTP/1.1 does. [Stefan Eissing, Michael Kaufmann]\n\n  *) mod_http2: fixed a bug that prevented proper stream cleanup when connection\n     throttling was in place. Stream resets by clients on streams initiated by them\n     are counted as possible trigger for throttling. [Stefan Eissing]\n\n  *) mod_http2/mpm_event: Fixes the behaviour when a HTTP/2 connection has nothing\n     more to write with streams ongoing (flow control block). The timeout waiting\n     for the client to send WINODW_UPDATE was incorrectly KeepAliveTimeout and not\n     Timeout as it should be. Fixes PR 63534. [Yann Ylavic, Stefan Eissing]\n\n  *) mod_ssl/mod_md: reversing dependency by letting mod_ssl offer hooks for\n     adding certificates and keys to a virtual host. An additional hook allows\n     answering special TLS connections as used in ACME challenges.\n     Adding 2 new hooks for init/get of OCSP stapling status information when\n     other modules want to provide those. Falls back to own implementation with\n     same behaviour as before.\n     [Stefan Eissing]\n\n  *) mod_ssl: use OPENSSL_init_ssl() to initialise OpenSSL on versions 1.1+.\n     [Graham Leggett]\n\n  *) mod_proxy_http2: adding support for handling trailers in both directions. PR 63502.\n     [Stefan Eissing]\n\n  *) mod_reqtimeout: Fix default rates missing (not applied) in 2.4.39.\n     PR 63325. [Yann Ylavic]\n\n  *) mod_ldap: Avoid potential crashes in util_ldap_cache_module_kill() or other\n     LDAP related functions during graceful restart of a busy server. PR63305.\n     [Martin Fúsek <mfusek newps.cz>]\n\n  *) mod_cache: Fix parsing of quoted Cache-Control token arguments.\n     PR 63288. [Yann Ylavic]\n\n  *) mod_md: Store permissions are enforced on file creation, enforcing restrictions in\n     spite of umask. Fixes <https://github.com/icing/mod_md/issues/117>. [Stefan Eissing]\n\n  *) mod_ssl: Correctly restore SSL verify state after TLSv1.3 PHA failure.\n     [Michael Kaufmann <mail michael-kaufmann.ch>]\n\n  *) Merge consecutive slashes in URL's. Opt-out with `MergeSlashes OFF`.\n     [Eric Covener]\n\n  *) mod_proxy/ssl: Cleanup per-request SSL configuration anytime a backend\n     connection is recycled/reused to avoid a possible crash with some SSLProxy\n     configurations in <Location> or <Proxy> context. PR 63256. [Yann Ylavic]\n\n  *) mod_mime: Add `MimeOptions` directive to allow Content-Type or all metadata\n     detection to use only the last (right-most) file extension or to be\n     disabled per-dir. [Eric Covener]\n\n  *) MPMs unix: bind the bucket number of each child to its slot number, for a\n     more efficient per bucket maintenance. [Yann Ylavic]\n\n  *) http: Fix possible empty response with mod_ratelimit for HEAD requests.\n     PR 63192. [Yann Ylavic]\n\n  *) mod_cache_socache: Avoid reallocations and be safe with outgoing data\n     lifetime. [Yann Ylavic]\n\n  *) mod_reqtimeout: Allow to configure (TLS-)handshake timeouts.\n     PR 61310. [Yann Ylavic]\n\n  *) mod_auth_digest: Fix a race condition. Authentication with valid credentials could be\n     refused in case of concurrent accesses from different users.\n     PR 63124 [Simon Kappel <simon.kappel axis.com>]\n\n  *) mod_ssl: Don't unset FIPS mode on restart unless it's forced by\n     configuration (SSLFIPS on) and not active by default in OpenSSL.\n     PR 63136. [Yann Ylavic]\n\n  *) mod_ssl: give mod_md the chance to override certificate after ALPN protocol\n     negotiation. [Stefan Eissing]\n\n  *) mod_proxy_wstunnel: Fix websocket proxy over UDS.\n     PR 62932 <pavel dcmsys.com>\n\n  *) mod_negociation: LanguagePriority should be case-insensitive in order to\n     match AddLanguage behavior. PR 39730 [Christophe Jaillet]\n\n  *) mod_session: Always decode session attributes early. [Hank Ibell]\n\n  *) core: Incorrect values for environment variables are substituted when\n     multiple environment variables are specified in a directive. [Hank Ibell]\n\n  *) core: Split out the ability to parse wildcard files and directories\n     from the Include/IncludeOptional directives into a generic set of\n     functions ap_dir_nofnmatch() and ap_dir_fnmatch(). [Graham Leggett]\n\n  *) mod_ssl: Fix mod_authz provider for \"require ssl\" directive to check correctly\n     on HTTP/2 connections. Fixes PR 62654. [Stefan Eissing]\n\n  *) mod_ssl: clear *SSL errors before loading certificates and checking\n     afterwards. Otherwise errors are reported when other SSL using modules\n     are in play. Fixes PR 62880. [Michael Kaufmann]\n\n  *) core: Ensure that aborted connections are logged as such. PR 62823\n     [Arnaud Grandville <contact@grandville.net>]\n\n  *) mpm_event: Stop issuing AH00484 \"server reached MaxRequestWorkers...\" when\n     there are still idle threads available. When there are less idle threads than\n     MinSpareThreads, issue new one-time message AH10159. Matches worker MPM.\n     [Eric Covener]\n\n  *) mod_proxy_scgi, mod_proxy_uwsgi: improve error handling when sending the\n     body of the response. [Jim Jagielski]\n\n  *) mod_session_cookie: avoid duplicate Set-Cookie header in the response.\n     [Emmanuel Dreyfus <manu@netbsd.org>, Luca Toscano]\n\n  *) mod_dav_fs: Set a default DAVLockDB within the state directory.\n     [Joe Orton]\n\n  *) core: Add DefaultStateDir and layout-specific state directory\n     created at \"make install\".  [Joe Orton]\n\n  *) ab: Add client certificate support. [Graham Leggett]\n\n  *) mod_proxy_hcheck: Fix issues with TCP health checks. PR 61499\n     [Dominik Stillhard <dominik.stillhard united-security-providers.ch>]\n\n  *) MPMs: Initialize all runtime/asynchronous objects on a dedicated pool and\n     before signals handling to avoid lifetime issues on restart or shutdown.\n     PR 62658. [Yann Ylavic]\n\n  *) core: Add StrictHostCheck to allow unconfigured hostnames to be\n     rejected. [Eric Covener]\n\n  *) mod_status: Cumulate CPU time of exited child processes in the\n     \"cu\" and \"cs\" values. Add CPU time of the parent process to the\n     \"c\" and \"s\" values.\n     [Rainer Jung]\n\n  *) mod_status: Add cumulated response duration time in milliseconds.\n     [Rainer Jung]\n\n  *) mod_status: Complete the data shown for async MPMs in \"auto\" mode.\n     Added number of processes, number of stopping processes and number\n     of busy and idle workers.  [Rainer Jung]\n\n  *) mod_proxy: Improve the balancer member data shown in mod_status when\n     \"ProxyStatus\" is \"On\": add \"busy\" count and show byte counts in auto\n     mode always in units of kilobytes.  [Rainer Jung]\n\n  *) mod_proxy: If ProxyPassReverse is used for reverse mapping of relative\n     redirects, subsequent ProxyPassReverse statements, whether they are\n     relative or absolute, may fail.  PR 60408.  [Peter Haworth <pmh1wheel gmail.com>]\n\n  *) mod_ratelimit: Don't interfere with \"chunked\" encoding, fixing regression\n     introduced in 2.4.34.  PR 62568.  [Yann Ylavic]\n\n  *) mod_proxy_http: forward 100-continue, and minimize race conditions when\n     reusing backend connections. PR 60330. [Yann Ylavic, Jean-Frederic Clere]\n\n  *) mod_proxy: Remove load order and link dependency between mod_lbmethod_*\n     modules and mod_proxy. PR 62557. [Ruediger Pluem, William Rowe]\n\n  *) mod_md: more robust handling of http-01 challenges and hands-off when module\n     should not be involved, e.g. challenge setup by another ACME client. [Stefan Eissing]\n\n  *) ru, zh-cn and zh-tw translations of errordocs have been added.\n     Contributed by Alexander Gaganashvili and CodeingBoy\n\n  *) mod_userdir: If several directories are given in a UserDir directive, only files\n     in the first existing one are checked. If the file is not found there, the\n     other possible directories are not checked. The doc clearly states that they\n     will be checked one by one, until a match is found or an external redirect is\n     performed.  PR 59636.\n     [Christophe Jaillet]\n\n  *) mod_rewrite: Only create the global mutex used by \"RewriteMap prg:\" when\n     this type of map is present in the configuration.  PR62311.\n     [Hank Ibell <hwibell gmail.com>]\n\n  *) mod_ldap: Abort on LDAP locking errors. [Eric Covener]\n\n  *) mod_ssl: Support loading certificates and private keys from the\n     PKCS#11 OpenSSL engine.  [Anderson Sasaki <ansasaki redhat.com>,\n     Joe Orton]\n\n  *) http: LimitRequestBody applies to proxied requests.  [Yann Ylavic]\n\n  *) mod_logio: Add LogIOTrackTTFU and %^FU logformat to log the time\n     difference between request start and last request body byte read (finished upload).\n     [Rainer Jung]\n\n  *) mod_ssl: add support for TLSv1.3 (tested with OpenSSL v1.1.1-pre4, other libs may\n     need more sugar). SSL(Proxy)CipherSuite now has an optional first parameter for the\n     protocol the ciphers are for.\n     Directive \"SSLVerifyClient\" now triggers certificate retrieval from the client (this\n     is not fully tested - but fails in similar fashion as in TLSv1.2 in my setups).\n     Verifying the client fails exactly the same for HTTP/2 connections for all SSL protocols,\n     as this would need to trigger the master connection thread - which we do not support\n     right now.\n     Renegotiation of ciphers is intentionally ignored for TLSv1.3 connections. \"SSLCipherSuite\"\n     does not allow to specify TLSv1.3 ciphers in a directory context (because it cannot work) and\n     TLSv1.2 or lower ciphers are not relevant, as cipher suites are completely separate.\n     This means there is a bit if a world split when simultaneously having TLSv1.2 and TLSv1.3\n     connections to the same server.\n     [Yann Ylavic, Stefan Eissing]\n\n  *) mod_ssl: proper checks for libressl 2.07/8 and its TLSv1_3 support, see PR 62236.\n     [Bernard Spil <brnrd@freebsd.org>]\n\n  *) mod_cgi: Add CGIScriptTimeout to make mod_cgi's timeout per-directory and\n     independent of the core Timeout directive.  PR 62229.\n     [Hank Ibell <hwibell gmail.com>]\n\n  *) mod_ssl: heavily simplified SSLPolicy. No more user defines, no propxy policies,\n     just the basic \"modern\", \"intermediate\" and \"old\" as specified by Mozilla security.\n     [Stefan Eissing]\n\n  *) mod_md: fixes error in renew window calculation that may lead to mod_md running\n     watchdog in a tight loop until actual renewal becomes necessary. [Stefan Eissing]\n\n  *) mod_md: /.well-known/acme-challenge requests that cannot be answered for hostnames\n     outside the configured MDs are free to be answered by other handlers. This allows\n     co-existance between mod_md and other ACME clients on the same server (implements PR62189).\n     [Stefan Eissing, Arkadiusz Miskiewicz <arekm@maven.pl>]\n\n  *) core: Create a conn_config_t structure to hold an extendable core config rather\n     than consuming the whole pointer with the connection socket. [Graham Leggett]\n\n  *) core: adding AP_DECLARE for ap_parse_vhost_addrs() and minor bump mmn. Resolves\n     building mod_ssl on Windows. [Stefan Eissing, Gregg Smith]\n\n  *) core: adding defines to allow interworking with honggfuzz without\n     further patches. [Stefan Eissing, Robert Swiecki]\n\n  *) mod_headers: 'RequestHeader set|edit|edit_r Content-Type X' could\n     inadvertently modify the Content-Type _response_ header. Applies to\n     Content-Type only and likely to only affect static file responses.\n     [Eric Covener]\n\n  *) mod_cgi: Improve AH01215 messages to make it more clear that the message is\n     the CGI scripts stderr output. PR 61980. [Hank Ibell <hwibell gmail.com>]\n\n  *) mod_headers: Allow 'Header unset Content-Type' to remove the Content-Type\n     header. PR 61983. [Hank Ibell <hwibell gmail.com>]\n\n  *) mod_md v1.1.8: new configuration directive \"MDBaseServer on|off\" to allow/inhibit\n     management of the base server domains outside VirtualHosts. By default, this is \"off\",\n     e.g. mod_md will not manage certificates or perform https: redirections on the\n     base server. [Stefan Eissing]\n\n  *) core: Add \"AcceptErrorsNonFatal\" to allow ECONNREFUSED, ECONNABORTED, and\n     ECONNRESET during the client accept() to not trigger graceful shutdown of\n     the child process.  [Eric Covener]\n\n  *) mod_md v1.1.7:\n     - MDMustStaple was unable to create the necessary OpenSSL OBJ identifier on some platforms,\n       possibly because this fails if the OID is already configured in ```openssl.cnf```, see\n       [here](https://github.com/openssl/openssl/issues/2795).\n     - Two memory leaks in cert issuer and alt-names lookup eliminated by Yann Ylavic.\n     - Changing MDMustStaple triggers certificate renewal.\n     - More verbosity when *not* handing out certificates, e.g. mod_ssl asks, but mod_md has no\n       idea what it is talking about. Some people report misbehaviour here.\n     - Re-enabled support for md_get_credentials() function that was used in older mod_ssl\n       patch, so that people with old patched servers get a chance to upgrade.\n     [Stefan Eissing, Yann Ylavic]\n\n  *) mod_substitute: Allow expressions in the substitution, prefixed with expr=\n     [Eric Covener]\n\n  *) mod_md: fixed mem pool usage for auto-added server names. Added\n     error logging of exact ACME response when challenges failed.\n     [Stefan Eissing]\n\n  *) mod_md: reverses most of v1.0.5 optimization of post_config init, so that\n     mod_ssl can ask for certificates without crashing. [Stefan Eissing]\n\n  *) mod_proxy: allow SSLProxyCheckPeer* usage for all proxy modules.\n     PR 61857.  [Yann Ylavic]\n\n  *) mod_proxy_html: fix handling of <meta http-equiv> elements.\n     PR 58121.  [Nick Kew]\n\n  *) mod_md: fixed backward compatibility to old <ManagedDomain configuration.\n     Add higher level WARNING log when initial request to ACME server fails, mentioning\n     some advice. [Stefan Eissing]\n\n  *) mod_md: name change in configuration directives. The old names are still working\n     in this version, so you can safely upgrade. They will give warnings in the log and\n     will disappear in the immediate future. ManagedDomain is now MDomain,\n     <ManagedDomain> is now <MDomainSet>. [Stefan Eissing]\n\n  *) mod_ssl: renamed section <SSLPolicy to <SSLPolicyDefine. Fixed behaviour\n     for new server config merge flag. Denying global, only once used directives\n     inside a SSLPolicyDefine. [Stefan Eissing]\n\n  *) mod_auth_basic: Be less tolerant when parsing the credencial. Only spaces\n     should be accepted after the authorization scheme. \\t are also tolerated.\n     [Christophe Jaillet]\n\n  *) core: Support zone/scope in IPv6 link-local addresses in Listen and\n     VirtualHost directives (requires APR 1.7.x or later).  PR 59396.  [Joe Orton]\n\n  *) mod_md: v1.0.5, restricting post_config dry run to be more silent and performing\n     only necessary work for mod_ssl to be also happy with the configuration.\n     [Stefan Eissing]\n\n  *) mod_md: v1.0.4, removed the 'a2md' utility command from build. Only used in github\n     testing. Avoid problems with our build system that had problems after the latest\n     changes to make a clean initial build. Remove the windows a2md.dsp therefore also.\n     [Stefan Eissing]\n\n  *) mod_ssl: Fail with 403 if the username for FakeBasicAuth mode\n     includes a colon character.  PR 52644.  [Joe Orton]\n\n  *) mod_md: v1.0.3, fixed various bugs in persisting job properties, so that status is\n     persisted across child process changes and staging is reset on reloads. Changed\n     MDCertificateAgreement url checks. As long as the CA reports that the account has\n     an agreement, no further checking is done. Existing accounts need no changes when\n     a new agreement comes out. [Stefan Eissing]\n\n  *) mod_watchdog: Correct some log messages.  [Rainer Jung]\n\n  *) mod_noloris: complete build setup.  [Rainer Jung]\n\n  *) mod_md: fix static compilation.  [Rainer Jung]\n\n  *) mod_md: fix compilation of helper binary a2md.  [Rainer Jung]\n\n  *) core: fix pcre feature detection in configure when using pcre2.  [Rainer Jung]\n\nChanges with Apache 2.5.0-alpha\n\n  *) mod_speling: Add CheckBasenameMatch PR 44221.  [Christophe Jaillet]\n\n  *) mod_md: v1.0.1, ServerName/Alias names from pure-http: virtual hosts are no longer\n     auto-added to a Managed Domain. Error counts of jobs are persisted. When the server\n     restarts (gracefully) any errored staging areas are purged to reset the signup/renewal\n     process. [Stefan Eissing]\n\n  *) mod_md: v1.0.0, new config directive 'MDNotifyCmd' to hook in a program when Managed\n     Domains have obtained/renewed their certificates successfully. [Stefan Eissing]\n\n  *) mod_md: v0.9.9, fix for applying challenge type based on available ports. [Stefan Eissing]\n\n  *) mod_md: v0.9.7\n     - Use of the new module flag\n     - Removed obsolete function from interface to mod_ssl.\n     - Fallback certificates has version set and no longer claims to be a CA. (re issue #32)\n     - MDRequireHttps now happens before any Redirect.\n     [Stefan Eissing]\n\n  *) mod_ssl: unshare SSLSrvConfigRec instances between base server and virtual hosts. This avoids\n     overwrites of later initializattions (vhost_id), selective disables by \"SSLEngine addr-list\"\n     and certificate/key pickup from mod_md. [Stefan Eissing]\n\n  *) mod_md: v0.9.6: a \"MDRequireHttps permanent\" configured domain automatically sends out\n     HSTS (rfc 6797) headers in https: responses. [Stefan Eissing]\n\n  *) mod_ssl: adding ssl_policies.h[.in] for policy cipher/protocol definitions. Use\n     update_policies.py to update manually from Mozilla JSON definitions at\n     https://statics.tls.security.mozilla.org/server-side-tls-conf.json\n     [Stefan Eissing]\n\n  *) mod_md: v0.9.5:\n     - New directive (srly: what do you expect at this point?) \"MDMustStaple on|off\" to control if\n       new certificates are requested with the OCSP Must Staple extension.\n     - Known limitation: when the server is configured to ditch and restart child processes, for example\n       after a certain number of connections/requests, the mod_md watchdog instance might migrate\n       to a new child process. Since not all its state is persisted, some messages might appear a\n       second time in the logs.\n     - Adding checks when 'MDRequireHttps' is used. It is considered an error when 'MDPortMap 443:-'\n       is used - which negates that a https: port exists. Also, a warning is logged if no\n       VirtualHost can be found for a Managed Domain that has port 443 (or the mapped one) in\n       its address list.\n     - New directive 'MDRequireHttps' for redirecting http: traffic to a Managed Domain, permanently\n       or temporarily.\n     - Fix for using a fallback certificate on initial signup of a Managed Domain. Requires also\n       a changed mod_ssl patch (v5) to take effect.\n     - compatibility with libressl\n       [Stefan Eissing]\n\n  *) mod_md: v0.9.2: new directive 'MDHttpProxy' to define a proxy for outgoing connection,\n     some minor bugfixes, twiddle the build system to avoid non-pic code generation.\n     [Stefan Eissing]\n\n  *) mod_md: v0.9.1:\n     - various fixes in MDRenewWindow handling when specifying percent. Serialization changed. If\n       someone already used percent configurations, it is advised to change these to a new value,\n       reload and change back to the wanted ones.\n     - various fixes in handling of MDPrivateKeys when specifying 2048 bits (the default) explicitly.\n     - mod_md version removed from top level md_store.json file. The store has its own format version\n       to facilitate upgrades.\n    [Stefan Eissing]\n\n  *) mod_md: v0.9.0:\n     Certificate provisioning from Let's Encrypt (and other ACME CAs) for mod_ssl virtual hosts.\n     [Stefan Eissing]\n\n  *) mod_ssl: add SSLPolicy (define/use) and SSLProxyPolicy directives plus documentation. Add\n     core definitions for policies 'modern', 'intermediate' and 'old', as defined by Mozilla\n     in <https://wiki.mozilla.org/Security/Server_Side_TLS>. [Stefan Eissing]\n\n  *) mod_md: new module for managing domains across VirtualHosts with ACME protocol\n     implementation for automated certificate signup and renewal. Default CA is\n     the test area of Let's Encrypt right now, so certificates root will not be valid.\n     Will be switched to the real service endpoint rather soon. If you need it now,\n     configure 'MDCertificateAuthority https://acme-v01.api.letsencrypt.org/directory'.\n     [Stefan Eissing]\n\n  *) mod_rewrite: Add 'RewriteOptions LongURLOptimization' to free memory\n     from each set of unmatched rewrite conditions.\n     [Eric Covener]\n\n  *) Allow the argument to <IfFile>, <IfDefine>, <IfSection>, <IfDirective>,\n     and <IfModule> to be quoted.  This is primarily for the benefit of\n     <IfFile>. [Eric Covener]\n\n  *) Introduce request taint checking framework to prevent privilege\n     hijacking through .htaccess. [Nick Kew]\n\n  *) Add <IfDirective> and <IfSection> directives.  [Joe Orton]\n\n  *) When using mod_status with the Event MPM, report the number of requests\n     associated with an active connection in the \"ACC\" field. Previously\n     zero was always reported with this MPM.  PR60647. [Eric Covener]\n\n  *) mod_proxy_wstunnel: Reliably run before mod_proxy_http.\n     [Eric Covener]\n\n  *) http: Allow unknown response status' lines returned in the form of\n     \"HTTP/x.x xxx Status xxx\".  [Yann Ylavic]\n\n  *) core: Add <IfFile> configuration section to allow any file on disk to be\n     used as a conditional.  [Edward Lu, Eric Covener]\n\n  *) mod_crypto: Add the all purpose crypto filters with support for HLS.\n     [Graham Leggett]\n\n  *) core: Drop an invalid Last-Modified header value coming\n     from a FCGI/CGI script instead of replacing it with Unix epoch.\n     Warn the users about Last-Modified header value replacements\n     and violations of the RFC.\n     [Yann Ylavic, Luca Toscano, William Rowe, Jacob Champion]\n\n  *) mod_dav: Allow other modules to become providers and add ACLs\n     to the DAV response.\n     [Jari Urpalainen <jari.urpalainen nokia.com>, Graham Leggett]\n\n  *) mod_dav: Add dav_begin_multistatus, dav_send_one_response,\n     dav_finish_multistatus, dav_send_multistatus, dav_handle_err,\n     dav_failed_proppatch, dav_success_proppatch to mod_dav.h.\n     [Jari Urpalainen <jari.urpalainen nokia.com>, Graham Leggett]\n\n  *) core: explicitly exclude 'h2' from protocols announced via an Upgrade:\n     header as commanded by http-wg. [Stefan Eissing]\n\n  *) mod_proxy_ajp: Add \"secret\" parameter to proxy workers to implement legacy\n     AJP13 authentication.  PR 53098.  [Dmitry A. Bakshaev <dab1818 gmail com>]\n\n  *) mpm: Generalise the ap_mpm_register_socket functions to accept pipes\n     or sockets. [Graham Leggett]\n\n  *) core: Extend support for setting aside data from the network input filter\n     to any connection or request input filter. [Graham Leggett]\n\n  *) core: Split ap_create_request() from ap_read_request(). [Graham Leggett]\n\n  *) mod_auth_digest: Fix compatibility with expression-based Authname. PR59039.\n     [Eric Covener]\n\n  *) mpm: Add a complete_connection hook that confirms whether an MPM is allowed\n     to leave the WRITE_COMPLETION phase. Move filter code out of the MPMs.\n     [Graham Leggett]\n\n  *) mod_cache: Consider Cache-Control: s-maxage in expiration\n     calculations.  [Eric Covener]\n\n  *) mod_cache: Allow caching of responses with an Expires header\n     in the past that also has Cache-Control: max-age or s-maxage.\n     PR55156. [Eric Covener]\n\n  *) mod_session: Introduce SessionExpiryUpdateInterval which allows to\n     configure the session/cookie expiry's update interval. PR 57300.\n     [Paul Spangler <paul.spangler ni.com>]\n\n  *) core: Extend support for asynchronous write completion from the\n     network filter to any connection or request filter. [Graham Leggett]\n\n  *) mod_auth_digest: remove AuthDigestEnableQueryStringHack which is no\n     more documented since dec 2012 (r1415960). [Christophe Jaillet]\n\n  *) mod_charset_lite: On EBCDIC platforms, make sure mod_charset_lite runs\n     after other resource-level filters. [Eric Covener]\n\n  *) http: Don't remove the Content-Length of zero from a HEAD response if\n     it comes from an origin server, module or script.  [Yann Ylavic]\n\n  *) http: Add support for RFC2324/RFC7168. [Graham Leggett]\n\n  *) mod_authn_core: Add expression support to AuthName and AuthType.\n     [Graham Leggett]\n\n  *) suexec: Filter out the HTTP_PROXY environment variable because it is\n     treated as alias for http_proxy by some programs. [Stefan Fritsch]\n\n  *) mod_proxy_http: Don't establish or reuse a backend connection before pre-\n     fetching the request body, so to minimize the delay between it is supposed\n     to be alive and the first bytes sent: this is a best effort to prevent the\n     backend from closing because of idle or keepalive timeout in the meantime.\n     Also, handle a new \"proxy-flushall\" environment variable which allows to\n     flush any forwarded body data immediately. PR 56541+37920. [Yann Ylavic]\n\n  *) core: Define and UnDefine are no longer permitted in\n     directory context. Previously they would always be evaluated\n     as the configuration was read without regard for the directory\n     context. [Eric Covener]\n\n  *) config: For directives that do not expect any arguments, enforce\n     that none are specified in the configuration file.\n     [Joachim Zobel <jzobel heute-morgen.de>, Eric Covener]\n\n  *) mod_rewrite: Improve 'bad flag delimeters' startup error by showing\n     how the input was tokenized.  PR 56528. [Edward Lu <Chaosed0 gmail.com>]\n\n  *) mod_proxy: Don't put non balancer-member workers in error state by\n     default for connection or 500/503 errors, and honor status=+I for\n     any error.  PR 48388.  [Yann Ylavic]\n\n  *) ap_expr: Add filemod function for checking file modification dates\n     [Daniel Gruno]\n\n  *) mod_authnz_ldap: Resolve crashes with LDAP authz and non-LDAP authn since\n     r1608202. [Eric Covener]\n\n  *) apreq: Content-Length header should be always interpreted as a decimal.\n     Leading 0 could be erroneously considered as an octal value. PR 56598.\n     [Chris Card <ctcard hotmail com>]\n\n  *) mod_proxy: Now allow for 191 character worker names, with non-fatal\n     errors if name is truncated. PR53218. [Jim Jagielski]\n\n  *) mod_ssl: Add optional function \"ssl_get_tls_cb\" to allow support\n     for channel bindings.  [Simo Sorce <simo redhat.com>]\n\n  *) mod_proxy_wstunnel: Concurrent websockets messages could be\n     lost or delayed with ProxyWebsocketAsync enabled.\n     [Edward Lu <Chaosed0 gmail.com>]\n\n  *) core, mod_info: Add compiled and loaded PCRE versions to version\n     number display.  [Rainer Jung]\n\n  *) mod_authnz_ldap: Return LDAP connections to the pool before the handler\n     is run, instead of waiting until the end of the request. [Eric Covener]\n\n  *) mod_proxy_html: support automatic detection of doctype and processing\n     of FPIs.  PR56285 [Micha Lenk <micha lenk info>, Nick Kew]\n\n  *) core: Add ap_mpm_resume_suspended() API to allow a suspended connection\n     to resume. PR56333\n     [Artem <artemciy gmail.com>, Edward Lu <Chaosed0 gmail.com>]\n\n  *) core: Add ap_mpm_register_socket_callback_timeout() API. [Eric Covener]\n\n  *) mod_proxy_wstunnel: Honor ProxyWebsocketIdleTimeout in asynchronous\n     processing mode. [Eric Covener]\n\n  *) mod_authnz_ldap: Fail explicitly when the filter is too long. Remove\n     unnecessary apr_pstrdup() and strlen(). [Graham Leggett]\n\n  *) Add the ldap-search option to mod_authnz_ldap, allowing authorization\n     to be based on arbitrary expressions that do not include the username.\n     [Graham Leggett]\n\n  *) Add the ldap function to the expression API, allowing LDAP filters and\n     distinguished names based on expressions to be escaped correctly to\n     guard against LDAP injection. [Graham Leggett]\n\n  *) Add module mod_ssl_ct, which provides an implementation of Certificate\n     Transparency (RFC 6962) for httpd.  [Jeff Trawick]\n\n  *) mod_proxy_wstunnel: Avoid sending error responses down an upgraded\n     websockets connection as it is being close down. [Eric Covener]\n\n  *) mod_proxy_wstunnel: Allow the administrator to cap the amount\n     of time a synchronous websockets connection stays idle with\n     ProxyWebsocketIdleTimeout. [Eric Covener]\n\n  *) mod_proxy_wstunnel: Change to opt-in for asynchronous support, adding\n     directives ProxyWebsocketAsync and ProxyWebsocketAsyncDelay.\n     [Eric Covener]\n\n  *) mod_proxy_wstunnel: Stop leaking websockets backend connections under\n     event MPM (trunk-only). [Eric Covener]\n\n  *) mod_proxy_http: Add detach_backend hook (potentially usable\n     in other proxy scheme handlers).  [Jeff Trawick]\n\n  *) mod_deflate: Add DeflateAlterETag to control how the ETag\n     is modified. The 'NoChange' parameter mimics 2.2.x behavior.\n     PR 45023, PR 39727. [Eric Covener]\n\n  *) mod_dir: Default to 2.2-like behavior and skip execution when method is\n     neither GET nor POST, such as for DAV requests. PR 54914. [Chris Darroch]\n\n  *) mod_rewrite: Rename the handler that does per-directory internal\n     redirects to \"rewrite-redirect-handler\" from \"redirect-handler\" so\n     it is less ambiguous and less likely to be reused. [Eric Covener]\n\n  *) mod_rewrite: Protect against looping with the [N] flag by enforcing a\n     default limit of 10000 iterations, and allowing each rule to change its\n     limit. [Eric Covener]\n\n  *) mod_ssl: Fix config merging of SSLOCSPEnable and SSLOCSPOverrideResponder.\n     [Jeff Trawick]\n\n  *) Add HttpContentLengthHeadZero and HttpExpectStrict directives.\n     [Yehuda Sadeh <yehuda inktank com>, Justin Erenkrantz]\n\n  *) mod_ssl: Add -t -DDUMP_CA_CERTS option which dumps the filenames of all\n     configured SSL CA certificates to stdout the same way as DUMP_CERTS does.\n     [Jan Kaluza]\n\n  *) mod_ssl: Don't flush when an EOS is received. Prepares mod_ssl\n     to support write completion. [Graham Leggett]\n\n  *) core: Add parse_errorlog_arg callback to ap_errorlog_provider\n     to allow providers to check the ErrorLog argument. [Jan Kaluza]\n\n  *) mod_cgid: Use the servers Timeout for each read from a CGI script,\n     allow override with new CGIDRequestTimeout directive. PR43494\n     [Eric Covener, Toshikuni Fukaya <toshikuni-fukaya cybozu co jp>]\n\n  *) core: ensure any abnormal exit is reported to stderr if it's a tty.\n     PR 55670 [Nick Kew]\n\n  *) mod_lua: Let the Inter-VM get/set functions work with a global\n     shared memory pool instead of a per-process pool. [Daniel Gruno]\n\n  *) ldap: Support ldaps when using the Microsoft LDAP SDK.\n     PR 54626. [Jean-Frederic Clere]\n\n  *) mod_authnz_ldap: Change default value of AuthLDAPMaxSubGroupDepth to 0\n     to avoid performance problems when subgroups aren't in use. [Eric Covener]\n\n  *) mod_syslog: New module implementing syslog ap_error_log provider.\n     Previously, this code was part of core, now it's in separate module.\n     [Jan Kaluza]\n\n  *) core: Add ap_errorlog_provider to make ErrorLog logging modular. Move\n     syslog support from core to new mod_syslog. [Jan Kaluza]\n\n  *) mod_status, mod_echo: Fix the display of client addresses.\n     They were truncated to 31 characters which is not enough for IPv6 addresses.\n     This is done by deprecating the use of the 'client' field and using\n     the new 'client64' field in worker_score.\n     PR 54848 [Bernhard Schmidt <berni birkenwald de>, Jim Jagielski]\n\n  *) core: merge AllowEncodedSlashes from the base configuration into\n     virtual hosts. [Eric Covener]\n\n  *) AIX: Install DSO's with \"cp\" instead of \"install\" in instdso.sh\n     [Eric Covener]\n\n  *) mod_ldap: Don't keep retrying if a new LDAP connection times out.\n     [Eric Covener]\n\n  *) mod_deflate: permit compilation of mod_deflate against a zlib that has\n     been configured with -D Z_PREFIX, which redefines the token \"deflate\".\n     [Eric Covener]\n\n  *) mod_auth_digest: Use the secret when generating nonces in all cases and\n     not only when AuthName is used in .htaccess files (this change may cause\n     problems if used with round robin load balancers). Don't regenerate the\n     secret on graceful restarts. PR 54637  [Stefan Fritsch]\n\n  *) core: Stop the HTTP_IN filter from attempting to write error buckets\n     to the output filters, which is bogus in the proxy case. Create a\n     clean mapping from APR codes to HTTP status codes, and use it where\n     needed. [Graham Leggett]\n\n  *) mod_dav: mod_dav overrides dav_fs response on PUT failure. PR 35981\n     [Basant Kumar Kukreja <basant.kukreja sun.com>, Alejandro Alvarez\n     <alejandro.alvarez.ayllon cern.ch>]\n\n  *) mod_ldap: LDAP connections used for authentication were not respecting\n     LDAPConnectionPoolTimeout.  PR 54587\n\n  *) core: Add option to add valgrind support. Use it to reduce false positive\n     warnings in mod_ssl. [Stefan Fritsch]\n\n  *) mod_authn_file, mod_authn_dbd, mod_authn_dbm, mod_authn_socache:\n     Cache the result of the most recent password hash verification for every\n     keep-alive connection. This saves some expensive calculations.\n     [Stefan Fritsch]\n\n  *) http: Remove support for Request-Range header sent by Navigator 2-3 and\n     MSIE 3. [Stefan Fritsch]\n\n  *) core, http: Extend HttpProtocol with an option to enforce stricter HTTP\n     conformance or to only log the found problems. [Stefan Fritsch]\n\n  *) EventOpt MPM\n\n  *) core: Add LogLevelOverride directive that allows to override the\n     loglevel for clients from certain IPs. This also works for things\n     like the SSL handshake where <If> LogLevel ... </If> is evaluated\n     too late. [Stefan Fritsch]\n\n  *) core: Add new directive Warning to issue warnings from a configuration\n     file. Both Warning and Error now generate a timestamped log message.\n     [Fabien Coelho]\n\n  *) ap_expr: Add SERVER_PROTOCOL_VERSION, ..._MAJOR, and ..._MINOR\n     variables. [Stefan Fritsch]\n\n  *) core: New directive HttpProtocol which allows to disable HTTP/0.9\n     support. [Stefan Fritsch]\n\n  *) mod_allowhandlers: New module to forbid specific handlers for specific\n     directories. [Stefan Fritsch]\n\n  *) mod_systemd: New module, for integration with systemd on Linux.\n     [Jan Kaluza <jkaluza redhat.com>]\n\n  *) WinNT MPM: Store pid and generation for each thread in scoreboard\n     to allow tracking of threads from exiting children via mod_status\n     or other such mechanisms.  [Jeff Trawick]\n\n  *) The following now respect DefaultRuntimeDir/DEFAULT_REL_RUNTIMEDIR:\n     - APIs: ap_log_pid(), ap_remove_pid, ap_read_pid()\n     - mod_cache: thundering herd lock directory\n     - mod_lbmethod_heartbeat, mod_heartmonitor: heartbeat storage file\n     - mod_ldap: shared memory cache\n     - mod_socache_shmcb, mod_socache_dbm: shared memory or dbm for cache\n     [Jeff Trawick]\n\n  *) mod_ssl: Add support for TLS Next Protocol Negotiation.  PR 52210.\n     [Matthew Steele <mdsteele google.com>]\n\n  *) cross-compile: allow to provide CC_FOR_BUILD so that gen_test_char will\n     be compiled by the build compiler instead of the host compiler.\n     Also set CC_FOR_BUILD to 'cc' when cross-compilation is detected.\n     PR 51257. [Guenter Knauf]\n\n  *) core: In maintainer mode, replace apr_palloc with a version that\n     initializes the allocated memory with non-zero values, except if\n     AP_DEBUG_NO_ALLOC_POISON is defined. [Stefan Fritsch]\n\n  *) mod_policy: Add a new testing module to help server administrators\n     enforce a configurable level of protocol compliance on their\n     servers and application servers behind theirs. [Graham Leggett]\n\n  *) mod_firehose: Add a new debugging module able to record traffic\n     passing through the server in such a way that connections and/or\n     requests be reconstructed and replayed. [Graham Leggett]\n\n  *) mod_noloris\n\n  *) APREQ\n\n  *) Simple MPM\n\n  *) mod_serf\n\n  [Apache 2.5.0-dev includes those bug fixes and changes with the\n   Apache 2.4.xx tree as documented below, except as noted.]\n\nChanges with Apache 2.4.x and later:\n\n  *) http://svn.apache.org/viewvc/httpd/httpd/branches/2.4.x/CHANGES?view=markup\n\nChanges with Apache 2.2.x and later:\n\n  *) http://svn.apache.org/viewvc/httpd/httpd/branches/2.2.x/CHANGES?view=markup\n\nChanges with Apache 2.0.x and later:\n\n  *) http://svn.apache.org/viewvc/httpd/httpd/branches/2.0.x/CHANGES?view=markup\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 52.130859375,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# Read README.cmake before using this.\n\n# CMAKE_MINIMUM_REQUIRED should be the first directive in the file:\n# https://cmake.org/cmake/help/latest/command/cmake_minimum_required.html\nCMAKE_MINIMUM_REQUIRED(VERSION 2.8)\n\nPROJECT(HTTPD C)\n\nINCLUDE(CheckSymbolExists)\nINCLUDE(CheckCSourceCompiles)\nINCLUDE(\"build/build-modules-c.cmake\")\n\nFIND_PACKAGE(LibXml2)\nFIND_PACKAGE(Lua51)\nFIND_PACKAGE(OpenSSL)\nFIND_PACKAGE(ZLIB)\nFIND_PACKAGE(CURL)\nFIND_PACKAGE(PCRE2 COMPONENTS 8BIT)\n\n# Options for support libraries not supported by cmake-bundled FindFOO\n\n# Default to using APR trunk (libapr-2.lib) if it exists in PREFIX/lib;\n# otherwise, default to APR 1.x + APR-util 1.x\nIF(EXISTS \"${CMAKE_INSTALL_PREFIX}/lib/libapr-2.lib\")\n  SET(default_apr_libraries \"${CMAKE_INSTALL_PREFIX}/lib/libapr-2.lib\")\nELSEIF(EXISTS \"${CMAKE_INSTALL_PREFIX}/lib/libapr-1.lib\")\n  SET(ldaplib \"${CMAKE_INSTALL_PREFIX}/lib/apr_ldap-1.lib\")\n  IF(NOT EXISTS ${ldaplib})\n    SET(ldaplib)\n  ENDIF()\n  SET(default_apr_libraries ${CMAKE_INSTALL_PREFIX}/lib/libapr-1.lib ${CMAKE_INSTALL_PREFIX}/lib/libaprutil-1.lib ${ldaplib})\nELSE()\n  SET(default_apr_libraries)\nENDIF()\n\n# PCRE names its libraries differently for debug vs. release builds.\n# We can't query our own CMAKE_BUILD_TYPE at configure time.\n# If the debug version exists in PREFIX/lib, default to that one.\nIF(PCRE2_FOUND)\n  SET(default_pcre_libraries \"PCRE2::8BIT\")\n  SET(default_pcre_cflags \"-DHAVE_PCRE2\")\nELSEIF(EXISTS \"${CMAKE_INSTALL_PREFIX}/lib/pcre2-8d.lib\")\n  SET(default_pcre_libraries ${CMAKE_INSTALL_PREFIX}/lib/pcre2-8d.lib)\n  SET(default_pcre_cflags \"-DHAVE_PCRE2\")\nELSEIF(EXISTS \"${CMAKE_INSTALL_PREFIX}/lib/pcre2-8.lib\")\n  SET(default_pcre_libraries ${CMAKE_INSTALL_PREFIX}/lib/pcre2-8.lib)\n  SET(default_pcre_cflags \"-DHAVE_PCRE2\")\nELSEIF(EXISTS \"${CMAKE_INSTALL_PREFIX}/lib/pcre2-8d-static.lib\")\n  SET(default_pcre_libraries ${CMAKE_INSTALL_PREFIX}/lib/pcre2-8d-static.lib)\n  SET(default_pcre_cflags \"-DHAVE_PCRE2 -DPCRE2_STATIC\")\nELSEIF(EXISTS \"${CMAKE_INSTALL_PREFIX}/lib/pcre2-8-static.lib\")\n  SET(default_pcre_libraries ${CMAKE_INSTALL_PREFIX}/lib/pcre2-8-static.lib)\n  SET(default_pcre_cflags \"-DHAVE_PCRE2 -DPCRE2_STATIC\")\nELSEIF(EXISTS \"${CMAKE_INSTALL_PREFIX}/lib/pcred.lib\")\n  SET(default_pcre_libraries ${CMAKE_INSTALL_PREFIX}/lib/pcred.lib)\nELSE()\n  SET(default_pcre_libraries ${CMAKE_INSTALL_PREFIX}/lib/pcre.lib)\nENDIF()\n\nIF(EXISTS \"${CMAKE_INSTALL_PREFIX}/lib/nghttp2d.lib\")\n  SET(default_nghttp2_libraries \"${CMAKE_INSTALL_PREFIX}/lib/nghttp2d.lib\")\nELSE()\n  SET(default_nghttp2_libraries \"${CMAKE_INSTALL_PREFIX}/lib/nghttp2.lib\")\nENDIF()\n\nIF(EXISTS \"${CMAKE_INSTALL_PREFIX}/lib/brotlienc.lib\")\n  SET(default_brotli_libraries \"${CMAKE_INSTALL_PREFIX}/lib/brotlienc.lib\" \"${CMAKE_INSTALL_PREFIX}/lib/brotlicommon.lib\")\nELSE()\n  SET(default_brotli_libraries)\nENDIF()\n\nIF(EXISTS \"${CMAKE_INSTALL_PREFIX}/lib/check.lib\")\n  SET(default_check_libraries \"${CMAKE_INSTALL_PREFIX}/lib/check.lib\" \"${CMAKE_INSTALL_PREFIX}/lib/compat.lib\")\nELSE()\n  SET(default_check_libraries)\nENDIF()\n\nIF(EXISTS \"${CMAKE_INSTALL_PREFIX}/lib/libcurl_imp.lib\")\n  SET(default_curl_libraries \"${CMAKE_INSTALL_PREFIX}/lib/libcurl_imp.lib\")\nELSEIF(EXISTS \"${CMAKE_INSTALL_PREFIX}/lib/libcurl.lib\")\n  SET(default_curl_libraries \"${CMAKE_INSTALL_PREFIX}/lib/libcurl.lib\")\nELSE()\n  SET(default_curl_libraries)\nENDIF()\n\nIF(EXISTS \"${CMAKE_INSTALL_PREFIX}/lib/jansson.lib\")\n  SET(default_jansson_libraries \"${CMAKE_INSTALL_PREFIX}/lib/jansson.lib\")\nELSE()\n  SET(default_jansson_libraries)\nENDIF()\n\nSET(APR_INCLUDE_DIR       \"${CMAKE_INSTALL_PREFIX}/include\" CACHE STRING \"Directory with APR[-Util] include files\")\nSET(APR_LIBRARIES         ${default_apr_libraries}       CACHE STRING \"APR libraries to link with\")\nSET(NGHTTP2_INCLUDE_DIR   \"${CMAKE_INSTALL_PREFIX}/include\" CACHE STRING \"Directory with NGHTTP2 include files within nghttp2 subdirectory\")\nSET(NGHTTP2_LIBRARIES     ${default_nghttp2_libraries}   CACHE STRING \"NGHTTP2 libraries to link with\")\nSET(PCRE_CFLAGS           \"${default_pcre_cflags}\"       CACHE STRING \"PCRE flags for util_pcre.c compilation\")\nSET(PCRE_INCLUDE_DIR      \"${CMAKE_INSTALL_PREFIX}/include\" CACHE STRING \"Directory with PCRE include files\")\nSET(PCRE_LIBRARIES        ${default_pcre_libraries}      CACHE STRING \"PCRE libraries to link with\")\nSET(LIBXML2_ICONV_INCLUDE_DIR     \"\"                     CACHE STRING \"Directory with iconv include files for libxml2\")\nSET(LIBXML2_ICONV_LIBRARIES       \"\"                     CACHE STRING \"iconv libraries to link with for libxml2\")\nSET(BROTLI_INCLUDE_DIR    \"${CMAKE_INSTALL_PREFIX}/include\" CACHE STRING \"Directory with include files for Brotli\")\nSET(BROTLI_LIBRARIES      ${default_brotli_libraries}    CACHE STRING \"Brotli libraries to link with\")\nSET(CURL_INCLUDE_DIR      \"${CMAKE_INSTALL_PREFIX}/include\" CACHE STRING \"Directory with include files for cURL\")\nSET(CURL_LIBRARIES        ${default_curl_libraries}         CACHE STRING \"cURL libraries to link with\")\nSET(JANSSON_INCLUDE_DIR   \"${CMAKE_INSTALL_PREFIX}/include\" CACHE STRING \"Directory with include files for jansson\")\nSET(JANSSON_LIBRARIES     \"${default_jansson_libraries}\" CACHE STRING \"Jansson libraries to link with\")\nSET(CHECK_INCLUDE_DIR     \"${CMAKE_INSTALL_PREFIX}/include\" CACHE STRING \"Directory with include files for Check\")\nSET(CHECK_LIBRARIES       \"${default_check_libraries}\"   CACHE STRING \"Check libraries to link with\")\n# end support library configuration\n\n# Misc. options\nOPTION(INSTALL_PDB        \"Install .pdb files (if generated)\"  ON)\nOPTION(INSTALL_MANUAL     \"Install manual\"                     ON)\n\nSET(ENABLE_MODULES        \"O\"                            CACHE STRING \"Minimum module enablement (e.g., \\\"i\\\" to build all but those without prerequisites)\")\nSET(WITH_MODULES          \"\"                             CACHE STRING \"comma-separated paths to single-file modules to statically link into the server\")\nSET(EXTRA_INCLUDES        \"\"                             CACHE STRING \"Extra include directories\")\nSET(EXTRA_LIBS            \"\"                             CACHE STRING \"Extra libraries\")\nSET(EXTRA_COMPILE_FLAGS   \"\"                             CACHE STRING \"Extra compile flags\")\n\nIF(NOT EXISTS \"${APR_INCLUDE_DIR}/apr.h\")\n  MESSAGE(FATAL_ERROR \"APR include directory ${APR_INCLUDE_DIR} is not correct.\")\nENDIF()\nFOREACH(onelib ${APR_LIBRARIES})\n  IF(NOT EXISTS ${onelib})\n    MESSAGE(FATAL_ERROR \"APR library ${onelib} was not found.\")\n  ENDIF()\nENDFOREACH()\n\nMACRO(GET_MOD_ENABLE_RANK macro_modname macro_mod_enable_val macro_output_rank)\n  IF(${macro_mod_enable_val} STREQUAL \"O\")\n    SET(${macro_output_rank} 0)\n  ELSEIF(${macro_mod_enable_val} STREQUAL \"i\")\n    SET(${macro_output_rank} 1)\n  ELSEIF(${macro_mod_enable_val} STREQUAL \"I\")\n    SET(${macro_output_rank} 2)\n  ELSEIF(${macro_mod_enable_val} STREQUAL \"a\")\n    SET(${macro_output_rank} 3)\n  ELSEIF(${macro_mod_enable_val} STREQUAL \"A\")\n    SET(${macro_output_rank} 4)\n  ELSE()\n    MESSAGE(FATAL_ERROR \"Unexpected enablement value \\\"${macro_mod_enable_val}\\\" for ${macro_modname}\")\n  ENDIF()\nENDMACRO()\n\nGET_MOD_ENABLE_RANK(\"ENABLE_MODULES setting\" ${ENABLE_MODULES} enable_modules_rank)\n\n# Figure out what APR/APU features are available\n#\n# CHECK_APR_FEATURE checks for features defined to 1 or 0 in apr.h or apu.h\n# The symbol representing the feature will be set to TRUE or FALSE for \n# compatibility with the feature tests set by FindFooPackage.\n#\n# (unclear why CHECK_SYMBOL_EXISTS is needed, but I was getting \"found\" for anything \n# not defined to either 1 or 0)\n\nMACRO(CHECK_APR_FEATURE which_define)\n  SET(CMAKE_REQUIRED_INCLUDES \"${APR_INCLUDE_DIR}\")\n  CHECK_SYMBOL_EXISTS(${which_define} \"apr.h;apu.h\" tmp_${which_define})\n  IF(${tmp_${which_define}})\n    CHECK_C_SOURCE_COMPILES(\"#include \\\"${APR_INCLUDE_DIR}/apr.h\\\"\n      #include \\\"${APR_INCLUDE_DIR}/apu.h\\\"\n      int main() {\n      #ifndef ${which_define}\n      #error gobble\n      #endif\n      #if !${which_define}\n      #error gobble\n      #endif\n      return 1;}\" ${which_define})\n  ELSE()\n    SET(${which_define})\n  ENDIF()\n  IF(${${which_define}})\n    SET(${which_define} TRUE)\n  ELSE()\n    SET(${which_define} FALSE)\n  ENDIF()\nENDMACRO()\n\nCHECK_APR_FEATURE(APR_HAS_XLATE)\nCHECK_APR_FEATURE(APU_HAVE_CRYPTO)\n\n# APR_HAS_LDAP is defined in apr_ldap.h, which exists only in apr 1.x, so use\n# special code instead of CHECK_APR_FEATURE()\n# As with CHECK_APR_FEATURE(), convert to a TRUE/FALSE result.\nCHECK_C_SOURCE_COMPILES(\"#include \\\"${APR_INCLUDE_DIR}/apr.h\\\"\n#include \\\"${APR_INCLUDE_DIR}/apr_ldap.h\\\"\nint main() {\n#if !APR_HAS_LDAP\n#error gobble\n#endif\nreturn 1;}\" APR_HAS_LDAP)\nIF(${APR_HAS_LDAP})\n  SET(APR_HAS_LDAP TRUE)\nELSE()\n  SET(APR_HAS_LDAP FALSE)\nENDIF()\n\n# See if nghttp2 exists in a configured or defaulted location\nSET(NGHTTP2_FOUND TRUE)\nIF(EXISTS \"${NGHTTP2_INCLUDE_DIR}/nghttp2/nghttp2.h\")\n  FOREACH(onelib ${NGHTTP2_LIBRARIES})\n    IF(NOT EXISTS ${onelib})\n      SET(NGHTTP2_FOUND FALSE)\n    ENDIF()\n  ENDFOREACH()\nELSE()\n  SET(NGHTTP2_FOUND FALSE)\nENDIF()\n\n# See if we have Brotli\nSET(BROTLI_FOUND TRUE)\nIF(EXISTS \"${BROTLI_INCLUDE_DIR}/brotli/encode.h\")\n  FOREACH(onelib ${BROTLI_LIBRARIES})\n    IF(NOT EXISTS ${onelib})\n      SET(BROTLI_FOUND FALSE)\n    ENDIF()\n  ENDFOREACH()\nELSE()\n  SET(BROTLI_FOUND FALSE)\nENDIF()\n\n# See if we have Check\nSET(CHECK_FOUND TRUE)\nIF (EXISTS \"${CHECK_INCLUDE_DIR}/check.h\")\n  FOREACH(onelib ${CHECK_LIBRARIES})\n    IF(NOT EXISTS \"${onelib}\")\n      SET(CHECK_FOUND FALSE)\n    ENDIF()\n  ENDFOREACH()\nELSE()\n  SET(CHECK_FOUND FALSE)\nENDIF()\n\n# See if we have Jansson\nSET(JANSSON_FOUND TRUE)\nIF(EXISTS \"${JANSSON_INCLUDE_DIR}/jansson.h\")\n  FOREACH(onelib ${JANSSON_LIBRARIES})\n    IF(NOT EXISTS ${onelib})\n      SET(JANSSON_FOUND FALSE)\n    ENDIF()\n  ENDFOREACH()\nELSE()\n  SET(JANSSON_FOUND FALSE)\nENDIF()\n\n\nMESSAGE(STATUS \"\")\nMESSAGE(STATUS \"Summary of feature detection:\")\nMESSAGE(STATUS \"\")\nMESSAGE(STATUS \"LIBXML2_FOUND ............ : ${LIBXML2_FOUND}\")\nMESSAGE(STATUS \"LUA51_FOUND .............. : ${LUA51_FOUND}\")\nMESSAGE(STATUS \"NGHTTP2_FOUND ............ : ${NGHTTP2_FOUND}\")\nMESSAGE(STATUS \"OPENSSL_FOUND ............ : ${OPENSSL_FOUND}\")\nMESSAGE(STATUS \"ZLIB_FOUND ............... : ${ZLIB_FOUND}\")\nMESSAGE(STATUS \"BROTLI_FOUND ............. : ${BROTLI_FOUND}\")\nMESSAGE(STATUS \"CURL_FOUND ............... : ${CURL_FOUND}\")\nMESSAGE(STATUS \"JANSSON_FOUND ............ : ${JANSSON_FOUND}\")\nMESSAGE(STATUS \"CHECK_FOUND .............. : ${CHECK_FOUND}\")\nMESSAGE(STATUS \"APR_HAS_LDAP ............. : ${APR_HAS_LDAP}\")\nMESSAGE(STATUS \"APR_HAS_XLATE ............ : ${APR_HAS_XLATE}\")\nMESSAGE(STATUS \"APU_HAVE_CRYPTO .......... : ${APU_HAVE_CRYPTO}\")\nMESSAGE(STATUS \"\")\n\n# Options for each available module\n#   \"A\" (\"A\"ctive) means installed and active in default .conf, fail if can't be built\n#   \"I\" (\"I\"nactive) means installed and inactive (LoadModule commented out) in default .conf, fail if can't be built\n#   \"O\" (\"O\"mit) means not installed, no LoadModule\n#   \"a\" - like \"A\", but ignore with a warning if any prereqs aren't available\n#   \"i\" - like \"I\", but ignore with a warning if any prereqs aren't available\n\n# Current heuristic for default enablement:\n#\n#   Module requires a prereq and           -> O\n#   finding/usingprereq isn't implemented\n#   yet\n#\n#   Module is included by default in       -> a if it has prereqs, A otherwise\n#   autoconf-based build \n#\n#   Module is included in                  -> i if it has prereqs, I otherwise\n#   --enable-modules=most \n#\n#   Otherwise                              -> O\n#\nSET(MODULE_LIST\n  \"modules/aaa/mod_access_compat+A+mod_access compatibility\"\n  \"modules/aaa/mod_allowhandlers+I+restrict allowed handlers\"\n  \"modules/aaa/mod_allowmethods+I+restrict allowed HTTP methods\"\n  \"modules/aaa/mod_auth_basic+A+basic authentication\"\n  \"modules/aaa/mod_auth_digest+I+RFC2617 Digest authentication\"\n  \"modules/aaa/mod_auth_form+I+form authentication\"\n  \"modules/aaa/mod_authn_anon+I+anonymous user authentication control\"\n  \"modules/aaa/mod_authn_core+A+core authentication module\"\n  \"modules/aaa/mod_authn_dbd+I+SQL-based authentication control\"\n  \"modules/aaa/mod_authn_dbm+I+DBM-based authentication control\"\n  \"modules/aaa/mod_authn_file+A+file-based authentication control\"\n  \"modules/aaa/mod_authn_socache+I+Cached authentication control\"\n  \"modules/aaa/mod_authnz_fcgi+I+FastCGI authorizer-based authentication and authorization\"\n  \"modules/aaa/mod_authnz_ldap+i+LDAP based authentication\"\n  \"modules/aaa/mod_authz_core+A+core authorization provider vector module\"\n  \"modules/aaa/mod_authz_dbd+I+SQL based authorization and Login/Session support\"\n  \"modules/aaa/mod_authz_dbm+I+DBM-based authorization control\"\n  \"modules/aaa/mod_authz_groupfile+A+'require group' authorization control\"\n  \"modules/aaa/mod_authz_host+A+host-based authorization control\"\n  \"modules/aaa/mod_authz_owner+I+'require file-owner' authorization control\"\n  \"modules/aaa/mod_authz_user+A+'require user' authorization control\"\n  \"modules/apreq/mod_apreq+i+Apache Request Filter\"\n  \"modules/arch/win32/mod_isapi+I+isapi extension support\"\n  \"modules/cache/mod_cache+I+dynamic file caching.  At least one storage management module (e.g. mod_cache_disk) is also necessary.\"\n  \"modules/cache/mod_cache_disk+I+disk caching module\"\n  \"modules/cache/mod_cache_socache+I+shared object caching module\"\n  \"modules/cache/mod_file_cache+I+File cache\"\n  \"modules/cache/mod_socache_dbm+I+dbm small object cache provider\"\n  \"modules/cache/mod_socache_dc+O+distcache small object cache provider\"\n  \"modules/cache/mod_socache_memcache+I+memcache small object cache provider\"\n  \"modules/cache/mod_socache_shmcb+I+ shmcb small object cache provider\"\n  \"modules/cache/mod_socache_redis+I+redis small object cache provider\"\n  \"modules/cluster/mod_heartbeat+I+Generates Heartbeats\"\n  \"modules/cluster/mod_heartmonitor+I+Collects Heartbeats\"\n  \"modules/core/mod_macro+I+Define and use macros in configuration files\"\n  \"modules/core/mod_watchdog+I+Watchdog module\"\n  \"modules/database/mod_dbd+I+Apache DBD Framework\"\n  \"modules/dav/fs/mod_dav_fs+I+DAV provider for the filesystem.\"\n  \"modules/dav/lock/mod_dav_lock+I+DAV provider for generic locking\"\n  \"modules/dav/main/mod_dav+I+WebDAV protocol handling.\"\n  \"modules/debugging/mod_bucketeer+O+buckets manipulation filter.  Useful only for developers and testing purposes.\"\n  \"modules/debugging/mod_dumpio+I+I/O dump filter\"\n  \"modules/debugging/mod_firehose+O+Firehose dump filter\"\n  \"modules/echo/mod_echo+O+ECHO server\"\n  \"modules/examples/mod_case_filter+O+Example uppercase conversion filter\"\n  \"modules/examples/mod_case_filter_in+O+Example uppercase conversion input filter\"\n  \"modules/examples/mod_example_hooks+O+Example hook callback handler module\"\n  \"modules/examples/mod_example_ipc+O+Example of shared memory and mutex usage\"\n  \"modules/filters/mod_brotli+i+Brotli compression support\"\n  \"modules/filters/mod_buffer+I+Filter Buffering\"\n  \"modules/filters/mod_charset_lite+i+character set translation\"\n  \"modules/filters/mod_data+O+RFC2397 data encoder\"\n  \"modules/filters/mod_deflate+i+Deflate transfer encoding support\"\n  \"modules/filters/mod_ext_filter+I+external filter module\"\n  \"modules/filters/mod_filter+A+Smart Filtering\"\n  \"modules/filters/mod_include+I+Server Side Includes\"\n  \"modules/filters/mod_proxy_html+i+Fix HTML Links in a Reverse Proxy\"\n  \"modules/filters/mod_ratelimit+I+Output Bandwidth Limiting\"\n  \"modules/filters/mod_reflector+O+Reflect request through the output filter stack\"\n  \"modules/filters/mod_reqtimeout+A+Limit time waiting for request from client\"\n  \"modules/filters/mod_request+I+Request Body Filtering\"\n  \"modules/filters/mod_sed+I+filter request and/or response bodies through sed\"\n  \"modules/filters/mod_substitute+I+response content rewrite-like filtering\"\n  \"modules/filters/mod_xml2enc+i+i18n support for markup filters\"\n  \"modules/generators/mod_asis+I+as-is filetypes\"\n  \"modules/generators/mod_autoindex+A+directory listing\"\n  \"modules/generators/mod_cgi+I+CGI scripts\"\n  \"modules/generators/mod_info+I+server information\"\n  \"modules/generators/mod_status+I+process/thread monitoring\"\n  \"modules/http/mod_mime+A+mapping of file-extension to MIME.  Disabling this module is normally not recommended.\"\n  \"modules/http2/mod_http2+i+HTTP/2 protocol support\"\n  \"modules/ldap/mod_ldap+i+LDAP caching and connection pooling services\"\n  \"modules/loggers/mod_log_config+A+logging configuration.  You won't be able to log requests to the server without this module.\"\n  \"modules/loggers/mod_log_debug+I+configurable debug logging\"\n  \"modules/loggers/mod_log_forensic+I+forensic logging\"\n  \"modules/loggers/mod_logio+I+input and output logging\"\n  \"modules/lua/mod_lua+i+Apache Lua Framework\"\n  \"modules/md/mod_md+i+Apache Managed Domains (Certificates)\"\n  \"modules/mappers/mod_actions+I+Action triggering on requests\"\n  \"modules/mappers/mod_alias+A+mapping of requests to different filesystem parts\"\n  \"modules/mappers/mod_dir+A+directory request handling\"\n  \"modules/mappers/mod_imagemap+I+server-side imagemaps\"\n  \"modules/mappers/mod_negotiation+I+content negotiation\"\n  \"modules/mappers/mod_rewrite+I+rule based URL manipulation\"\n  \"modules/mappers/mod_speling+I+correct common URL misspellings\"\n  \"modules/mappers/mod_userdir+I+mapping of requests to user-specific directories\"\n  \"modules/mappers/mod_vhost_alias+I+mass virtual hosting module\"\n  \"modules/metadata/mod_cern_meta+O+CERN-type meta files\"\n  \"modules/metadata/mod_env+A+clearing/setting of ENV vars\"\n  \"modules/metadata/mod_expires+I+Expires header control\"\n  \"modules/metadata/mod_headers+A+HTTP header control\"\n  \"modules/metadata/mod_ident+O+RFC 1413 identity check\"\n  \"modules/metadata/mod_mime_magic+O+automagically determining MIME type\"\n  \"modules/metadata/mod_remoteip+I+translate header contents to an apparent client remote_ip\"\n  \"modules/metadata/mod_setenvif+A+basing ENV vars on headers\"\n  \"modules/metadata/mod_unique_id+I+per-request unique ids\"\n  \"modules/metadata/mod_usertrack+I+user-session tracking\"\n  \"modules/metadata/mod_version+A+determining httpd version in config files\"\n  \"modules/proxy/balancers/mod_lbmethod_bybusyness+I+Apache proxy Load balancing by busyness\"\n  \"modules/proxy/balancers/mod_lbmethod_byrequests+I+Apache proxy Load balancing by request counting\"\n  \"modules/proxy/balancers/mod_lbmethod_bytraffic+I+Apache proxy Load balancing by traffic counting\"\n  \"modules/proxy/balancers/mod_lbmethod_heartbeat+I+Apache proxy Load balancing from Heartbeats\"\n  \"modules/proxy/mod_proxy_ajp+I+Apache proxy AJP module.  Requires and is enabled by --enable-proxy.\"\n  \"modules/proxy/mod_proxy_balancer+I+Apache proxy BALANCER module.  Requires and is enabled by --enable-proxy.\"\n  \"modules/proxy/mod_proxy+I+Apache proxy module\"\n  \"modules/proxy/mod_proxy_connect+I+Apache proxy CONNECT module.  Requires and is enabled by --enable-proxy.\"\n  \"modules/proxy/mod_proxy_express+I+mass reverse-proxy module. Requires --enable-proxy.\"\n  \"modules/proxy/mod_proxy_fcgi+I+Apache proxy FastCGI module.  Requires and is enabled by --enable-proxy.\"\n  \"modules/proxy/mod_proxy_ftp+I+Apache proxy FTP module.  Requires and is enabled by --enable-proxy.\"\n  \"modules/proxy/mod_proxy_hcheck+I+Apache proxy Health check module.  Requires and is enabled by --enable-proxy.\"\n  \"modules/proxy/mod_proxy_http+I+Apache proxy HTTP module.  Requires and is enabled by --enable-proxy.\"\n  \"modules/proxy/mod_proxy_scgi+I+Apache proxy SCGI module.  Requires and is enabled by --enable-proxy.\"\n  \"modules/proxy/mod_proxy_wstunnel+I+Apache proxy Websocket Tunnel module.  Requires and is enabled by --enable-proxy.\"\n  \"modules/http2/mod_proxy_http2+i+Apache proxy HTTP/2 module.  Requires --enable-proxy.\"\n  \"modules/proxy/mod_serf+O+Reverse proxy module using Serf\"\n  \"modules/session/mod_session+I+session module\"\n  \"modules/session/mod_session_cookie+I+session cookie module\"\n  \"modules/session/mod_session_crypto+i+session crypto module\"\n  \"modules/session/mod_session_dbd+I+session dbd module\"\n  \"modules/slotmem/mod_slotmem_plain+I+slotmem provider that uses plain memory\"\n  \"modules/slotmem/mod_slotmem_shm+I+slotmem provider that uses shared memory\"\n  \"modules/ssl/mod_ssl+i+SSL/TLS support\"\n  \"modules/ssl/mod_ssl_ct+O+Certificate Transparency support (requires OpenSSL >= 1.0.2)\"\n  \"modules/test/mod_dialup+O+rate limits static files to dialup modem speeds\"\n  \"modules/test/mod_optional_fn_export+O+example optional function exporter\"\n  \"modules/test/mod_optional_fn_import+O+example optional function importer\"\n  \"modules/test/mod_optional_hook_export+O+example optional hook exporter\"\n  \"modules/test/mod_optional_hook_import+O+example optional hook importer\"\n  \"modules/test/mod_policy+I+HTTP protocol compliance filters\"\n)\n\n# Track which modules actually built have APIs to link against.\nSET(installed_mod_libs_exps)\n\n# Define extra definitions, sources, headers, etc. required by some modules.\n# This could be included in the master list of modules above, though it \n# certainly would get a lot more unreadable.\nSET(mod_apreq_extra_defines          APREQ_DECLARE_EXPORT)\nSET(mod_apreq_extra_sources          modules/apreq/handle.c)\nSET(mod_apreq_main_source            modules/apreq/filter.c)\nSET(mod_authz_dbd_extra_defines      AUTHZ_DBD_DECLARE_EXPORT)\nSET(mod_authnz_ldap_requires         APR_HAS_LDAP)\nSET(mod_authnz_ldap_extra_libs       mod_ldap)\nSET(mod_cache_extra_defines          CACHE_DECLARE_EXPORT)\nSET(mod_cache_extra_sources\n  modules/cache/cache_storage.c      modules/cache/cache_util.c\n)\nSET(mod_cache_install_lib 1)\nSET(mod_cache_disk_extra_libs        mod_cache)\nSET(mod_cache_socache_extra_libs     mod_cache)\nSET(mod_charset_lite_requires        APR_HAS_XLATE)\nSET(mod_dav_extra_defines            DAV_DECLARE_EXPORT)\nSET(mod_dav_extra_sources\n  modules/dav/main/liveprop.c        modules/dav/main/props.c\n  modules/dav/main/std_liveprop.c    modules/dav/main/providers.c\n  modules/dav/main/util.c            modules/dav/main/util_lock.c\n  modules/dav/main/ms_wdv.c\n)\nSET(mod_dav_install_lib 1)\nSET(mod_dav_fs_extra_sources\n  modules/dav/fs/dbm.c               modules/dav/fs/lock.c\n  modules/dav/fs/quota.c             modules/dav/fs/repos.c\n)\nSET(mod_dav_fs_extra_libs            mod_dav)\nSET(mod_dav_lock_extra_sources       modules/dav/lock/locks.c)\nSET(mod_dav_lock_extra_libs          mod_dav)\nSET(mod_dbd_extra_defines            DBD_DECLARE_EXPORT)\nSET(mod_deflate_requires             ZLIB_FOUND)\nIF(ZLIB_FOUND)\n  SET(mod_deflate_extra_includes       ${ZLIB_INCLUDE_DIR})\n  SET(mod_deflate_extra_libs           ${ZLIB_LIBRARIES})\nENDIF()\nSET(mod_brotli_requires              BROTLI_FOUND)\nIF(BROTLI_FOUND)\n  SET(mod_brotli_extra_includes        ${BROTLI_INCLUDE_DIR})\n  SET(mod_brotli_extra_libs            ${BROTLI_LIBRARIES})\nENDIF()\nSET(mod_firehose_requires            SOMEONE_TO_MAKE_IT_COMPILE_ON_WINDOWS)\nSET(mod_heartbeat_extra_libs         mod_watchdog)\nSET(mod_http2_requires               NGHTTP2_FOUND)\nSET(mod_http2_extra_defines          ssize_t=long)\nSET(mod_http2_extra_includes         ${NGHTTP2_INCLUDE_DIR})\nSET(mod_http2_extra_libs             ${NGHTTP2_LIBRARIES})\nSET(mod_http2_extra_sources\n  modules/http2/h2_bucket_beam.c     modules/http2/h2_bucket_eos.c\n  modules/http2/h2_c1.c              modules/http2/h2_c1_io.c\n  modules/http2/h2_c2.c              modules/http2/h2_c2_filter.c\n  modules/http2/h2_config.c          modules/http2/h2_conn_ctx.c\n  modules/http2/h2_mplx.c            modules/http2/h2_headers.c\n  modules/http2/h2_protocol.c        modules/http2/h2_push.c\n  modules/http2/h2_request.c         modules/http2/h2_session.c\n  modules/http2/h2_stream.c          modules/http2/h2_switch.c\n  modules/http2/h2_util.c            modules/http2/h2_workers.c\n  modules/http2/h2_ws.c\n)\nSET(mod_ldap_extra_defines           LDAP_DECLARE_EXPORT)\nSET(mod_ldap_extra_libs              wldap32)\nSET(mod_ldap_extra_sources\n  modules/ldap/util_ldap_cache.c     modules/ldap/util_ldap_cache_mgr.c\n)\nSET(mod_ldap_main_source             modules/ldap/util_ldap.c)\nSET(mod_ldap_requires                APR_HAS_LDAP)\nSET(mod_lua_extra_defines            AP_LUA_DECLARE_EXPORT)\nSET(mod_lua_extra_includes           ${LUA_INCLUDE_DIR})\nSET(mod_lua_extra_libs               ${LUA_LIBRARIES})\nSET(mod_lua_extra_sources\n  modules/lua/lua_apr.c              modules/lua/lua_config.c\n  modules/lua/lua_passwd.c           modules/lua/lua_request.c\n  modules/lua/lua_vmprep.c           modules/lua/lua_dbd.c\n)\nSET(mod_lua_requires                 LUA51_FOUND)\nSET(mod_md_requires                  OPENSSL_FOUND CURL_FOUND JANSSON_FOUND)\nSET(mod_md_extra_includes            ${OPENSSL_INCLUDE_DIR} ${CURL_INCLUDE_DIR} ${JANSSON_INCLUDE_DIR})\nSET(mod_md_extra_libs                ${OPENSSL_LIBRARIES} ${CURL_LIBRARIES} ${JANSSON_LIBRARIES} mod_watchdog)\nSET(mod_md_extra_sources\n  modules/md/md_acme.c               modules/md/md_acme_acct.c\n  modules/md/md_acme_authz.c         modules/md/md_acme_drive.c\n  modules/md/md_acmev2_drive.c       modules/md/md_event.c\n  modules/md/md_acme_order.c         modules/md/md_core.c\n  modules/md/md_curl.c               modules/md/md_crypt.c\n  modules/md/md_http.c               modules/md/md_json.c\n  modules/md/md_jws.c                modules/md/md_log.c\n  modules/md/md_result.c             modules/md/md_reg.c\n  modules/md/md_status.c             modules/md/md_store.c\n  modules/md/md_store_fs.c           modules/md/md_time.c\n  modules/md/md_ocsp.c               modules/md/md_util.c               \n  modules/md/mod_md_config.c         modules/md/mod_md_drive.c\n  modules/md/mod_md_os.c             modules/md/mod_md_status.c\n  modules/md/mod_md_ocsp.c           modules/md/md_tailscale.c\n)\nSET(mod_optional_hook_export_extra_defines AP_DECLARE_EXPORT) # bogus reuse of core API prefix\nSET(mod_proxy_extra_defines          PROXY_DECLARE_EXPORT)\nSET(mod_proxy_extra_sources          modules/proxy/proxy_util.c)\nSET(mod_proxy_install_lib 1)\nSET(mod_proxy_ajp_extra_sources\n  modules/proxy/ajp_header.c         modules/proxy/ajp_link.c\n  modules/proxy/ajp_msg.c            modules/proxy/ajp_utils.c\n)\nSET(mod_proxy_ajp_extra_libs         mod_proxy)\nSET(mod_proxy_balancer_extra_libs    mod_proxy)\nSET(mod_proxy_connect_extra_libs     mod_proxy)\nSET(mod_proxy_express_extra_libs     mod_proxy)\nSET(mod_proxy_fcgi_extra_libs        mod_proxy)\nSET(mod_proxy_ftp_extra_libs         mod_proxy)\nSET(mod_proxy_hcheck_extra_libs      mod_proxy)\nSET(mod_proxy_http_extra_libs        mod_proxy)\nSET(mod_proxy_html_requires          LIBXML2_FOUND)\nIF(LIBXML2_FOUND)\n  SET(mod_proxy_html_extra_includes    \"${LIBXML2_INCLUDE_DIR};${LIBXML2_ICONV_INCLUDE_DIR}\")\n  SET(mod_proxy_html_extra_libs        \"${LIBXML2_LIBRARIES};${LIBXML2_ICONV_LIBRARIES}\")\nENDIF()\nSET(mod_proxy_scgi_extra_libs        mod_proxy)\nSET(mod_proxy_wstunnel_extra_libs    mod_proxy)\nSET(mod_lbmethod_bybusyness_extra_libs mod_proxy)\nSET(mod_lbmethod_bytraffic_extra_libs  mod_proxy)\nSET(mod_lbmethod_byrequests_extra_libs mod_proxy)\nSET(mod_lbmethod_heartbeat_extra_libs  mod_proxy)\nSET(mod_proxy_http2_requires               NGHTTP2_FOUND)\nSET(mod_proxy_http2_extra_defines          ssize_t=long)\nSET(mod_proxy_http2_extra_includes         ${NGHTTP2_INCLUDE_DIR})\nSET(mod_proxy_http2_extra_libs             ${NGHTTP2_LIBRARIES} mod_proxy)\nSET(mod_proxy_http2_extra_sources\n  modules/http2/h2_proxy_session.c   modules/http2/h2_proxy_util.c\n)\nSET(mod_ratelimit_extra_defines      AP_RL_DECLARE_EXPORT)\nSET(mod_sed_extra_sources\n  modules/filters/regexp.c           modules/filters/sed0.c\n  modules/filters/sed1.c\n)\nSET(mod_serf_requires                AN_UNIMPLEMENTED_SUPPORT_LIBRARY_REQUIREMENT)\nSET(mod_session_extra_defines        SESSION_DECLARE_EXPORT)\nSET(mod_session_install_lib 1)\nSET(mod_session_cookie_extra_libs    mod_session)\nSET(mod_session_crypto_requires      APU_HAVE_CRYPTO)\nSET(mod_session_crypto_extra_libs    mod_session)\nSET(mod_session_dbd_extra_libs       mod_session)\nSET(mod_socache_dc_requires          AN_UNIMPLEMENTED_SUPPORT_LIBRARY_REQUIREMENT)\nSET(mod_ssl_extra_defines            SSL_DECLARE_EXPORT)\nSET(mod_ssl_requires                 OPENSSL_FOUND)\nIF(OPENSSL_FOUND)\n  SET(mod_ssl_extra_includes           ${OPENSSL_INCLUDE_DIR})\n  SET(mod_ssl_extra_libs               ${OPENSSL_LIBRARIES})\nENDIF()\nSET(mod_ssl_extra_sources\n  modules/ssl/ssl_engine_config.c\n  modules/ssl/ssl_engine_init.c      modules/ssl/ssl_engine_io.c\n  modules/ssl/ssl_engine_kernel.c    modules/ssl/ssl_engine_log.c\n  modules/ssl/ssl_engine_mutex.c     modules/ssl/ssl_engine_ocsp.c\n  modules/ssl/ssl_engine_pphrase.c   modules/ssl/ssl_engine_rand.c\n  modules/ssl/ssl_engine_vars.c      modules/ssl/ssl_scache.c\n  modules/ssl/ssl_util.c             modules/ssl/ssl_util_ocsp.c\n  modules/ssl/ssl_util_ssl.c         modules/ssl/ssl_util_stapling.c\n)\nIF(OPENSSL_FOUND)\n  SET(mod_ssl_ct_extra_includes        ${OPENSSL_INCLUDE_DIR})\n  SET(mod_ssl_ct_extra_libs            ${OPENSSL_LIBRARIES})\nENDIF()\nSET(mod_ssl_ct_extra_sources\n  modules/ssl/ssl_ct_log_config.c\n  modules/ssl/ssl_ct_sct.c\n  modules/ssl/ssl_ct_util.c\n)\nSET(mod_status_extra_defines         STATUS_DECLARE_EXPORT)\nSET(mod_watchdog_install_lib 1)\nSET(mod_xml2enc_requires             LIBXML2_FOUND)\nIF(LIBXML2_FOUND)\n  SET(mod_xml2enc_extra_includes     \"${LIBXML2_INCLUDE_DIR};${LIBXML2_ICONV_INCLUDE_DIR}\")\n  SET(mod_xml2enc_extra_libs         \"${LIBXML2_LIBRARIES};${LIBXML2_ICONV_LIBRARIES}\")\nENDIF()\nSET(mod_watchdog_extra_defines       AP_WD_DECLARE_EXPORT)\n\nSET(MODULE_PATHS)\nFOREACH (modinfo ${MODULE_LIST})\n  STRING(REGEX REPLACE \"([^+]*)\\\\+([^+]*)\\\\+([^+]*)\" \"\\\\1;\\\\2;\\\\3\" modinfolist ${modinfo})\n  SET(path_to_module)\n  SET(defaultenable)\n  SET(helptext)\n  FOREACH(i ${modinfolist})\n    IF(\"${path_to_module}\" STREQUAL \"\")\n      SET(path_to_module ${i})\n    ELSEIF(\"${defaultenable}\" STREQUAL \"\")\n      SET(defaultenable ${i})\n    ELSEIF(\"${helptext}\" STREQUAL \"\")\n      SET(helptext ${i})\n    ELSE()\n      MESSAGE(FATAL_ERROR \"Unexpected field or plus sign in >${modinfo}<\")\n    ENDIF()\n  ENDFOREACH()\n\n  # MESSAGE(\"       path to module: ${path_to_module}\")\n  # MESSAGE(\"enablement by default: ${defaultenable}\")\n  # MESSAGE(\"            help text: ${helptext}\")\n\n  STRING(REGEX REPLACE \".*/(mod_[^\\\\+]+)\" \"\\\\1\" mod_name       ${path_to_module})\n  STRING(REGEX REPLACE \"mod_(.*)\"         \"\\\\1\" mod_shortname  ${mod_name})\n\n  STRING(TOUPPER \"ENABLE_${mod_shortname}\" mod_option_name)\n\n  SET(${mod_option_name} ${defaultenable} CACHE STRING ${helptext})\n  SET(MODULE_PATHS \"${MODULE_PATHS};${path_to_module}\")\n\nENDFOREACH()\n\nSET(install_targets)\nSET(install_bin_pdb)\nSET(install_modules) # special handling vs. other installed targets\nSET(install_modules_pdb)\nSET(builtin_module_shortnames)\nLIST(APPEND builtin_module_shortnames \"win32\" \"mpm_winnt\" \"http\" \"so\") # core added automatically\nSET(extra_builtin_modules) # the ones specified with -DWITH_MODULES=\n\nSTRING(REPLACE \",\" \";\" WITH_MODULE_LIST \"${WITH_MODULES}\")\nFOREACH(static_mod ${WITH_MODULE_LIST})\n  STRING(REGEX MATCH   \"[^/]+\\\\.c\"           mod_basename    ${static_mod})\n  STRING(REGEX REPLACE \"^mod_(.*)\\\\.c\" \"\\\\1\" mod_module_name ${mod_basename})\n  LIST(APPEND builtin_module_shortnames \"${mod_module_name}\")\n  CONFIGURE_FILE(${static_mod} ${PROJECT_BINARY_DIR}/ COPYONLY)\n  SET(extra_builtin_modules ${extra_builtin_modules} ${PROJECT_BINARY_DIR}/${mod_basename})\nENDFOREACH()\n\ngenerate_builtin_modules_c(\"${PROJECT_BINARY_DIR}/modules.c\" \"${builtin_module_shortnames}\")\n\n# for easy reference from .dll/.so builds\nCONFIGURE_FILE(os/win32/BaseAddr.ref ${PROJECT_BINARY_DIR}/ COPYONLY)\n\nADD_EXECUTABLE(gen_test_char server/gen_test_char.c)\nADD_CUSTOM_COMMAND(\n  COMMENT \"Generating character tables, test_char.h, for current locale\"\n  DEPENDS gen_test_char\n  COMMAND $<TARGET_FILE:gen_test_char> > ${PROJECT_BINARY_DIR}/test_char.h\n  OUTPUT ${PROJECT_BINARY_DIR}/test_char.h\n)\nADD_CUSTOM_TARGET(\n  test_char_header ALL\n  DEPENDS ${PROJECT_BINARY_DIR}/test_char.h\n)\n\nSET(HTTPD_MAIN_SOURCES\n  server/main.c\n)\n\nSET(LIBHTTPD_SOURCES\n  ${extra_builtin_modules}\n  ${PROJECT_BINARY_DIR}/modules.c\n  server/apreq_cookie.c\n  server/apreq_error.c\n  server/apreq_module.c\n  server/apreq_module_cgi.c\n  server/apreq_module_custom.c\n  server/apreq_param.c\n  server/apreq_parser.c\n  server/apreq_parser_header.c\n  server/apreq_parser_multipart.c\n  server/apreq_parser_urlencoded.c\n  server/apreq_util.c\n  modules/arch/win32/mod_win32.c\n  modules/core/mod_so.c\n  modules/http/byterange_filter.c\n  modules/http/chunk_filter.c\n  modules/http/http_core.c\n  modules/http/http_filters.c\n  modules/http/http_protocol.c\n  modules/http/http_request.c\n  os/win32/ap_regkey.c\n  os/win32/util_win32.c\n  server/buildmark.c\n  server/config.c\n  server/connection.c\n  server/core.c\n  server/core_filters.c\n  server/eoc_bucket.c\n  server/eor_bucket.c\n  server/error_bucket.c\n  server/headers_bucket.c\n  server/listen.c\n  server/log.c\n  server/mpm/winnt/child.c\n  server/mpm/winnt/mpm_winnt.c\n  server/mpm/winnt/nt_eventlog.c\n  server/mpm/winnt/service.c\n  server/mpm_common.c\n  server/protocol.c\n  server/provider.c\n  server/request.c\n  server/ssl.c\n  server/scoreboard.c\n  server/util.c\n  server/util_cfgtree.c\n  server/util_cookies.c\n  server/util_debug.c\n  server/util_etag.c\n  server/util_expr_eval.c\n  server/util_expr_parse.c\n  server/util_fcgi.c\n  server/util_expr_scan.c\n  server/util_filter.c\n  server/util_md5.c\n  server/util_mutex.c\n  server/util_pcre.c\n  server/util_regex.c\n  server/util_script.c\n  server/util_time.c\n  server/util_xml.c\n  server/vhost.c\n)\n\nCONFIGURE_FILE(os/win32/win32_config_layout.h\n               ${PROJECT_BINARY_DIR}/ap_config_layout.h)\n\nSET(HTTPD_INCLUDE_DIRECTORIES\n  ${PROJECT_BINARY_DIR}\n  ${EXTRA_INCLUDES}\n  # see discussion in cmake bug 13188 regarding oddities with relative paths\n  ${CMAKE_CURRENT_SOURCE_DIR}/include\n  ${CMAKE_CURRENT_SOURCE_DIR}/os/win32\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/core\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/database\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/dav/main\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/filters\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/generators\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/http2\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/md\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/proxy\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/session\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/ssl\n  ${CMAKE_CURRENT_SOURCE_DIR}/server\n  ${CMAKE_CURRENT_SOURCE_DIR}/server/mpm/winnt\n  ${APR_INCLUDE_DIR}\n  ${PCRE_INCLUDE_DIR}\n)\n\n# The .h files we install from outside the main include directory\n# largely parallel the include directories above.\nSET(other_installed_h\n  ${PROJECT_BINARY_DIR}/ap_config_layout.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/os/win32/os.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/cache/mod_cache.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/cache/cache_common.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/core/mod_so.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/core/mod_watchdog.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/database/mod_dbd.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/dav/main/mod_dav.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/filters/mod_include.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/filters/mod_xml2enc.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/generators/mod_cgi.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/generators/mod_status.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/http2/mod_http2.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/loggers/mod_log_config.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/mappers/mod_rewrite.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/proxy/mod_proxy.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/session/mod_session.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/ssl/mod_ssl.h\n  ${CMAKE_CURRENT_SOURCE_DIR}/modules/ssl/mod_ssl_openssl.h\n)\n# When mod_serf is buildable, don't forget to copy modules/proxy/mod_serf.h\n\nINCLUDE_DIRECTORIES(${HTTPD_INCLUDE_DIRECTORIES})\n\nSET(HTTPD_SYSTEM_LIBS\n  ws2_32\n  mswsock\n)\n\n###########   HTTPD MODULES     ############\nSET(LoadModules)\nSET(mods_built_and_loaded)\nSET(mods_built_but_not_loaded)\nSET(mods_omitted)\nFOREACH (mod ${MODULE_PATHS})\n  # Build different forms of the module name; e.g., \n  #   mod_name->mod_cgi, mod_module_name->cgi_module, mod_shortname->cgi\n  STRING(REGEX REPLACE \".*/(mod_[^\\\\+]+)\" \"\\\\1\"        mod_name        ${mod})\n  STRING(REGEX REPLACE \"mod_(.*)\"         \"\\\\1_module\" mod_module_name ${mod_name})\n  STRING(REGEX REPLACE \"mod_(.*)\"         \"\\\\1\"        mod_shortname   ${mod_name})\n\n  # Is it enabled?\n  STRING(TOUPPER \"ENABLE_${mod_shortname}\" enable_mod)\n  SET(enable_mod_val ${${enable_mod}})\n\n  # Is ENABLE_MODULES set to a higher value?\n  GET_MOD_ENABLE_RANK(${mod_name} ${enable_mod_val} this_mod_rank)\n  IF(this_mod_rank LESS enable_modules_rank)\n    # Use the value from ENABLE_MODULES\n    SET(enable_mod_val ${ENABLE_MODULES})\n  ENDIF()\n\n  IF(NOT ${enable_mod_val} STREQUAL \"O\") # build of module is desired\n    SET(mod_requires \"${mod_name}_requires\")\n    STRING(TOUPPER ${enable_mod_val} enable_mod_val_upper)\n    IF(NOT \"${${mod_requires}}\" STREQUAL \"\") # module has some prerequisite\n      FOREACH (required ${${mod_requires}})\n        IF(NOT ${required}) # prerequisite doesn't exist\n          IF(NOT ${enable_mod_val} STREQUAL ${enable_mod_val_upper}) # lower case, so optional based on prereq\n            MESSAGE(STATUS \"${mod_name} was requested but couldn't be built due to a missing prerequisite (${required})\")\n            SET(enable_mod_val_upper \"O\") # skip due to missing prerequisite\n          ELSE() # must be upper case \"A\" or \"I\" (or coding error above)\n            MESSAGE(FATAL_ERROR \"${mod_name} was requested but couldn't be built due to a missing prerequisite (${required})\")\n          ENDIF()\n        ENDIF()\n      ENDFOREACH()\n    ENDIF()\n    # map a->A, i->I, O->O for remaining logic since prereq checking is over\n    SET(enable_mod_val ${enable_mod_val_upper})\n  ENDIF()\n  \n  IF(${enable_mod_val} STREQUAL \"O\")\n    # ignore\n    SET(mods_omitted ${mods_omitted} ${mod_name})\n  ELSE()\n    # Handle whether or not the LoadModule is commented out.\n    IF(${enable_mod_val} STREQUAL \"A\")\n      SET(LoadModules \"${LoadModules}LoadModule ${mod_module_name} modules/${mod_name}.so\\n\")\n      SET(mods_built_and_loaded ${mods_built_and_loaded} ${mod_name})\n    ELSEIF(${enable_mod_val} STREQUAL \"I\")\n      SET(LoadModules \"${LoadModules}# LoadModule ${mod_module_name} modules/${mod_name}.so\\n\")\n      SET(mods_built_but_not_loaded ${mods_built_but_not_loaded} ${mod_name})\n    ELSE()\n      MESSAGE(FATAL_ERROR \"${enable_mod} must be set to \\\"A\\\", \\\"I\\\", or \\\"O\\\" instead of \\\"${enable_mod_val}\\\"\")\n    ENDIF()\n\n    # Handle building it.\n    SET(mod_main_source \"${mod_name}_main_source\")\n    SET(mod_extra_sources \"${mod_name}_extra_sources\")\n\n    IF(\"${${mod_main_source}}\" STREQUAL \"\")\n      SET(tmp_mod_main_source \"${mod}.c\")\n    ELSE()\n      SET(tmp_mod_main_source ${${mod_main_source}})\n    ENDIF()\n    SET(all_mod_sources ${tmp_mod_main_source} ${${mod_extra_sources}})\n    ADD_LIBRARY(${mod_name} SHARED ${all_mod_sources} build/win32/httpd.rc)\n    SET(install_modules ${install_modules} ${mod_name})\n    SET(install_modules_pdb ${install_modules_pdb} \"$<TARGET_PDB_FILE:${mod_name}>\")\n    IF(\"${${mod_name}_install_lib}\")\n      SET(installed_mod_libs_exps\n          ${installed_mod_libs_exps}\n          \"$<TARGET_LINKER_FILE:${mod_name}>\"\n          \"$<TARGET_LINKER_FILE_DIR:${mod_name}>/${mod_name}.exp\"\n      )\n    ENDIF()\n    SET(mod_extra_libs \"${mod_name}_extra_libs\")\n    SET_TARGET_PROPERTIES(${mod_name} PROPERTIES\n      SUFFIX .so\n      LINK_FLAGS /base:@${PROJECT_BINARY_DIR}/BaseAddr.ref,${mod_name}.so\n    )\n    TARGET_LINK_LIBRARIES(${mod_name} ${${mod_extra_libs}} libhttpd ${EXTRA_LIBS} ${APR_LIBRARIES} ${HTTPD_SYSTEM_LIBS})\n    TARGET_COMPILE_DEFINITIONS(${mod_name} PRIVATE\n      \"LONG_NAME=${mod_name} for Apache HTTP Server\"\n      \"BIN_NAME=${mod_name}.so\"\n    )\n    TARGET_COMPILE_OPTIONS(${mod_name} PRIVATE \"${EXTRA_COMPILE_FLAGS}\")\n\n    # Extra defines?\n    SET(mod_extra_defines \"${mod_name}_extra_defines\")\n    IF(NOT ${${mod_extra_defines}} STREQUAL \"\")\n      SET_TARGET_PROPERTIES(${mod_name} PROPERTIES COMPILE_DEFINITIONS ${${mod_extra_defines}})\n    ENDIF()\n\n    # Extra includes?\n    SET(mod_extra_includes \"${mod_name}_extra_includes\")\n    IF(NOT \"${${mod_extra_includes}}\" STREQUAL \"\")\n      SET(tmp_includes ${HTTPD_INCLUDE_DIRECTORIES} ${${mod_extra_includes}})\n      SET_TARGET_PROPERTIES(${mod_name} PROPERTIES INCLUDE_DIRECTORIES \"${tmp_includes}\")\n      GET_PROPERTY(tmp_includes TARGET ${mod_name} PROPERTY INCLUDE_DIRECTORIES)\n    ENDIF()\n\n  ENDIF()\nENDFOREACH()\n\n###########   HTTPD LIBRARIES   ############\nADD_LIBRARY(libhttpd SHARED ${LIBHTTPD_SOURCES} build/win32/httpd.rc)\nSET_TARGET_PROPERTIES(libhttpd PROPERTIES\n  LINK_FLAGS /base:@${PROJECT_BINARY_DIR}/BaseAddr.ref,libhttpd.dll\n)\nSET(install_targets ${install_targets} libhttpd)\nSET(install_bin_pdb ${install_bin_pdb} $<TARGET_PDB_FILE:libhttpd>)\nTARGET_LINK_LIBRARIES(libhttpd ${EXTRA_LIBS} ${APR_LIBRARIES} ${PCRE_LIBRARIES} ${HTTPD_SYSTEM_LIBS})\nTARGET_COMPILE_DEFINITIONS(libhttpd PRIVATE\n  \"LONG_NAME=Apache HTTP Server Core\"\n  \"BIN_NAME=libhttpd.dll\"\n  \"AP_DECLARE_EXPORT\"\n  \"APREQ_DECLARE_EXPORT\"\n)\nTARGET_COMPILE_OPTIONS(libhttpd PRIVATE ${PCRE_CFLAGS} ${EXTRA_COMPILE_FLAGS})\nADD_DEPENDENCIES(libhttpd test_char_header)\n\n###########   HTTPD EXECUTABLES   ##########\nADD_EXECUTABLE(httpd server/main.c build/win32/httpd.rc)\nSET(install_targets ${install_targets} httpd)\nSET(install_bin_pdb ${install_bin_pdb} $<TARGET_PDB_FILE:httpd>)\nTARGET_COMPILE_DEFINITIONS(httpd PRIVATE\n  \"APP_FILE\"\n  \"LONG_NAME=Apache HTTP Server\"\n  \"BIN_NAME=httpd.exe\"\n  \"ICON_FILE=${CMAKE_SOURCE_DIR}/build/win32/apache.ico\"\n)\nTARGET_COMPILE_OPTIONS(httpd PRIVATE \"${EXTRA_COMPILE_FLAGS}\")\nSET_TARGET_PROPERTIES(httpd PROPERTIES\n  LINK_FLAGS \"/stack:0x40000\"\n)\nTARGET_LINK_LIBRARIES(httpd libhttpd ${EXTRA_LIBS})\n\nSET(standard_support\n  htcacheclean\n  htdbm\n  htdigest\n  htpasswd\n  httxt2dbm\n  logresolve\n  rotatelogs\n)\n\nSET(htdbm_extra_sources support/passwd_common.c)\nSET(htpasswd_extra_sources support/passwd_common.c)\n\nFOREACH(pgm ${standard_support})\n  SET(extra_sources ${pgm}_extra_sources)\n  ADD_EXECUTABLE(${pgm} support/${pgm}.c ${${extra_sources}} build/win32/httpd.rc)\n  SET(install_targets ${install_targets} ${pgm})\n  SET(install_bin_pdb ${install_bin_pdb} $<TARGET_PDB_FILE:${pgm}>)\n  TARGET_COMPILE_DEFINITIONS(${pgm} PRIVATE\n      \"APP_FILE\"\n      \"LONG_NAME=Apache HTTP Server ${pgm} program\"\n      \"BIN_NAME=${pgm}.exe\"\n  )\n  TARGET_COMPILE_OPTIONS(${mod_name} PRIVATE \"${EXTRA_COMPILE_FLAGS}\")\n  TARGET_LINK_LIBRARIES(${pgm} ${EXTRA_LIBS} ${APR_LIBRARIES})\nENDFOREACH()\n\nADD_EXECUTABLE(ab support/ab.c build/win32/httpd.rc)\nSET(install_targets ${install_targets} ab)\nSET(install_bin_pdb ${install_bin_pdb} $<TARGET_PDB_FILE:ab>)\nSET(tmp_includes ${HTTPD_INCLUDE_DIRECTORIES})\nSET_TARGET_PROPERTIES(ab PROPERTIES INCLUDE_DIRECTORIES \"${tmp_includes}\")\nTARGET_COMPILE_DEFINITIONS(ab PRIVATE\n    \"APP_FILE\"\n    \"LONG_NAME=Apache HTTP Server ab program\"\n    \"BIN_NAME=ab.exe\"\n)\nTARGET_LINK_LIBRARIES(ab ${EXTRA_LIBS} ${APR_LIBRARIES} Ws2_32.lib)\n\nIF(OPENSSL_FOUND)\n  ADD_EXECUTABLE(abs support/ab.c build/win32/httpd.rc)\n  SET(install_targets ${install_targets} abs)\n  SET(install_bin_pdb ${install_bin_pdb} $<TARGET_PDB_FILE:abs>)\n  SET_TARGET_PROPERTIES(abs PROPERTIES COMPILE_DEFINITIONS HAVE_OPENSSL)\n  SET(tmp_includes ${HTTPD_INCLUDE_DIRECTORIES} ${OPENSSL_INCLUDE_DIR})\n  SET_TARGET_PROPERTIES(abs PROPERTIES INCLUDE_DIRECTORIES \"${tmp_includes}\")\n  TARGET_COMPILE_DEFINITIONS(abs PRIVATE\n      \"APP_FILE\"\n      \"LONG_NAME=Apache HTTP Server ab/SSL program\"\n      \"BIN_NAME=abs.exe\"\n  )\n  TARGET_LINK_LIBRARIES(abs ${EXTRA_LIBS} ${APR_LIBRARIES} ${OPENSSL_LIBRARIES} Ws2_32.lib)\nENDIF()\n\n# Unit Test Suite\nIF(CHECK_FOUND)\n  # Get all of the test cases.\n  # XXX Per CMake documentation, if a test case is added or removed we must\n  # re-run CMake due to our use of GLOB. TBD if this tradeoff to have\n  # \"plug-and-play\" test cases is really worth it.\n  FILE(GLOB httpdunit_cases \"${CMAKE_SOURCE_DIR}/test/unit/*.c\")\n\n  ADD_EXECUTABLE(httpdunit\n                   test/httpdunit.c\n                   ${httpdunit_cases})\n  SET_TARGET_PROPERTIES(httpdunit PROPERTIES\n                        INCLUDE_DIRECTORIES \"${HTTPD_INCLUDE_DIRECTORIES} ${CHECK_INCLUDE_DIR}\"\n                        # FIXME why does Check need HAVE_STDINT_H on Windows?\n                        COMPILE_FLAGS \"-DHAVE_STDINT_H\")\n  TARGET_LINK_LIBRARIES(httpdunit libhttpd ${APR_LIBRARIES} ${CHECK_LIBRARIES})\n\n  # Rules for generating the .tests stubs.\n  FILE(GENERATE OUTPUT \"${CMAKE_BINARY_DIR}/httpdunit_gen_stubs.bat\"\n                CONTENT \"perl \\\"${CMAKE_SOURCE_DIR}/build/httpdunit_gen_stubs.pl\\\" < %1 > %2\")\n  FILE(MAKE_DIRECTORY \"${CMAKE_BINARY_DIR}/test/unit\")\n\n  FOREACH(case ${httpdunit_cases})\n    STRING(REGEX REPLACE \"^${CMAKE_SOURCE_DIR}\" \"${CMAKE_BINARY_DIR}\"\n                 stub \"${case}\")\n    STRING(REGEX REPLACE \"\\\\.c$\" \".tests\"\n                 stub \"${stub}\")\n\n    ADD_CUSTOM_COMMAND(TARGET httpdunit\n                       PRE_BUILD\n                       COMMAND \"${CMAKE_BINARY_DIR}/httpdunit_gen_stubs.bat\" \"\\\"${case}\\\"\" \"\\\"${stub}\\\"\"\n                       BYPRODUCTS \"${stub}\")\n  ENDFOREACH()\n\n  # Rule for generating the .cases file.\n  FILE(GENERATE OUTPUT \"${CMAKE_BINARY_DIR}/httpdunit_gen_cases.bat\"\n                CONTENT \"type \\\"${CMAKE_SOURCE_DIR}\\\"\\\\test\\\\unit\\\\*.c 2>NUL | perl \\\"${CMAKE_SOURCE_DIR}/build/httpdunit_gen_cases.pl\\\" --declaration > \\\"${CMAKE_BINARY_DIR}/test/httpdunit.cases\\\"\n                         type \\\"${CMAKE_SOURCE_DIR}\\\"\\\\test\\\\unit\\\\*.c 2>NUL | perl \\\"${CMAKE_SOURCE_DIR}/build/httpdunit_gen_cases.pl\\\" >> \\\"${CMAKE_BINARY_DIR}/test/httpdunit.cases\\\"\")\n  ADD_CUSTOM_COMMAND(TARGET httpdunit\n                     PRE_BUILD\n                     COMMAND \"${CMAKE_BINARY_DIR}/httpdunit_gen_cases.bat\"\n                     BYPRODUCTS \"${CMAKE_BINARY_DIR}/test/httpdunit.cases\")\nENDIF()\n\n# getting duplicate manifest error with ApacheMonitor\n# ADD_EXECUTABLE(ApacheMonitor support/win32/ApacheMonitor.c support/win32/ApacheMonitor.rc)\n# SET(install_targets ${install_targets} ApacheMonitor)\n# SET(install_bin_pdb ${install_bin_pdb} $<TARGET_PDB_FILE:ApacheMonitor>)\n# SET_TARGET_PROPERTIES(ApacheMonitor PROPERTIES WIN32_EXECUTABLE TRUE)\n# SET_TARGET_PROPERTIES(ApacheMonitor PROPERTIES COMPILE_FLAGS \"-DAPP_FILE -DLONG_NAME=ApacheMonitor -DBIN_NAME=ApacheMonitor.exe ${EXTRA_COMPILE_FLAGS}\")\n# TARGET_LINK_LIBRARIES(ApacheMonitor ${EXTRA_LIBS} ${HTTPD_SYSTEM_LIBS} comctl32 wtsapi32)\n\n###########  CONFIGURATION FILES ###########\n# Set up variables used in the .conf file templates\nSET(LoadModule          \"${LoadModules}\")\nSET(Port                \"80\" CACHE STRING \"http port to listen on\")\nSET(SSLPort             \"443\" CACHE STRING \"https port to listen on\")\nSET(ServerRoot          \"${CMAKE_INSTALL_PREFIX}\")\nSET(exp_cgidir          \"${CMAKE_INSTALL_PREFIX}/cgi-bin\")\nSET(exp_htdocsdir       \"${CMAKE_INSTALL_PREFIX}/htdocs\")\nSET(exp_iconsdir        \"${CMAKE_INSTALL_PREFIX}/icons\")\nSET(exp_errordir        \"${CMAKE_INSTALL_PREFIX}/error\")\nSET(exp_manualdir       \"${CMAKE_INSTALL_PREFIX}/manual\")\nSET(rel_logfiledir      \"logs\")\nSET(rel_runtimedir      \"logs\")\nSET(rel_sysconfdir      \"conf\")\nFILE(GLOB_RECURSE conffiles RELATIVE ${CMAKE_SOURCE_DIR}/docs/conf \"docs/conf/*\")\nFOREACH(template ${conffiles})\n  STRING(REPLACE \".conf.in\" \".conf\" conf \"${template}\")\n  FILE(READ \"docs/conf/${template}\" template_text)\n    IF(template MATCHES \".conf.in$\")\n      # substitute @var@/@@var@@ in .conf.in\n      STRING(REPLACE \"@@\" \"@\" template_text \"${template_text}\")\n      STRING(CONFIGURE \"${template_text}\" template_text @ONLY)\n    ENDIF()\n  FILE(WRITE ${CMAKE_BINARY_DIR}/conf/original/${conf} \"${template_text}\")\n  FILE(WRITE ${CMAKE_BINARY_DIR}/conf/${conf} \"${template_text}\")\nENDFOREACH()\n\n###########   INSTALLATION   ###########\nINSTALL(TARGETS ${install_targets}\n        RUNTIME DESTINATION bin\n        LIBRARY DESTINATION lib\n        ARCHIVE DESTINATION lib\n       )\nINSTALL(TARGETS ${install_modules}\n        RUNTIME DESTINATION modules\n       )\n\nIF(INSTALL_PDB)\n  INSTALL(FILES ${install_bin_pdb}\n          DESTINATION bin\n          CONFIGURATIONS RelWithDebInfo Debug)\n\n  INSTALL(FILES ${install_modules_pdb}\n          DESTINATION modules\n          CONFIGURATIONS RelWithDebInfo Debug)\nENDIF()\n\nINSTALL(DIRECTORY include/ DESTINATION include\n    FILES_MATCHING PATTERN \"*.h\"\n)\nINSTALL(FILES ${other_installed_h} DESTINATION include)\nINSTALL(FILES ${installed_mod_libs_exps} DESTINATION lib)\nINSTALL(FILES \"$<TARGET_LINKER_FILE_DIR:libhttpd>/libhttpd.exp\" DESTINATION LIB)\nINSTALL(FILES support/ctlogconfig DESTINATION bin)\n\nIF(INSTALL_MANUAL) # Silly?  This takes a while, and a dev doesn't need it.\n  INSTALL(DIRECTORY docs/manual/ DESTINATION manual)\nENDIF()\n\nINSTALL(DIRECTORY DESTINATION logs)\nINSTALL(DIRECTORY DESTINATION cgi-bin)\n\nINSTALL(CODE \"EXECUTE_PROCESS(COMMAND perl \\\"${CMAKE_CURRENT_SOURCE_DIR}/build/cpR_noreplace.pl\\\" \\\"${CMAKE_CURRENT_SOURCE_DIR}/docs/error\\\" \\\"${CMAKE_INSTALL_PREFIX}/error\\\" ifdestmissing)\")\n\nINSTALL(CODE \"EXECUTE_PROCESS(COMMAND perl \\\"${CMAKE_CURRENT_SOURCE_DIR}/build/cpR_noreplace.pl\\\" \\\"${CMAKE_CURRENT_SOURCE_DIR}/docs/docroot\\\" \\\"${CMAKE_INSTALL_PREFIX}/htdocs\\\" ifdestmissing)\")\n\nINSTALL(CODE \"EXECUTE_PROCESS(COMMAND perl \\\"${CMAKE_CURRENT_SOURCE_DIR}/build/cpR_noreplace.pl\\\" \\\"${CMAKE_CURRENT_SOURCE_DIR}/docs/icons\\\" \\\"${CMAKE_INSTALL_PREFIX}/icons\\\" ifdestmissing)\")\n\n# Copy generated .conf files from the build directory to the install,\n# without overwriting stuff already there.\nINSTALL(CODE \"EXECUTE_PROCESS(COMMAND perl \\\"${CMAKE_CURRENT_SOURCE_DIR}/build/cpR_noreplace.pl\\\" \\\"${CMAKE_BINARY_DIR}/conf\\\" \\\"${CMAKE_INSTALL_PREFIX}/conf\\\")\")\n# But conf/original is supposed to be overwritten.\n# Note: FILE(TO_NATIVE_PATH ...) leaves the backslashes unescaped, which\n#       generates warnings.  Just do it manually since this build only supports\n#       Windows anyway.\nSTRING(REPLACE \"/\" \"\\\\\\\\\" native_src ${CMAKE_BINARY_DIR}/conf/original)\nSTRING(REPLACE \"/\" \"\\\\\\\\\" native_dest ${CMAKE_INSTALL_PREFIX}/conf/original)\nINSTALL(CODE \"EXECUTE_PROCESS(COMMAND xcopy \\\"${native_src}\\\" \\\"${native_dest}\\\" /Q /S /Y)\")\n\nSTRING(TOUPPER \"${CMAKE_BUILD_TYPE}\" buildtype)\nMESSAGE(STATUS \"\")\nMESSAGE(STATUS \"\")\nMESSAGE(STATUS \"Apache httpd configuration summary:\")\nMESSAGE(STATUS \"\")\nMESSAGE(STATUS \"  Build type ...................... : ${CMAKE_BUILD_TYPE}\")\nMESSAGE(STATUS \"  Install .pdb (if available)...... : ${INSTALL_PDB}\")\nMESSAGE(STATUS \"  Install manual .................. : ${INSTALL_MANUAL}\")\nMESSAGE(STATUS \"  Install prefix .................. : ${CMAKE_INSTALL_PREFIX}\")\nMESSAGE(STATUS \"  C compiler ...................... : ${CMAKE_C_COMPILER}\")\nMESSAGE(STATUS \"  APR include directory ........... : ${APR_INCLUDE_DIR}\")\nMESSAGE(STATUS \"  APR libraries ................... : ${APR_LIBRARIES}\")\nMESSAGE(STATUS \"  OpenSSL include directory ....... : ${OPENSSL_INCLUDE_DIR}\")\nMESSAGE(STATUS \"  OpenSSL libraries ............... : ${OPENSSL_LIBRARIES}\")\nMESSAGE(STATUS \"  PCRE include directory .......... : ${PCRE_INCLUDE_DIR}\")\nMESSAGE(STATUS \"  PCRE libraries .................. : ${PCRE_LIBRARIES}\")\nMESSAGE(STATUS \"  libxml2 iconv prereq include dir. : ${LIBXML2_ICONV_INCLUDE_DIR}\")\nMESSAGE(STATUS \"  libxml2 iconv prereq libraries .. : ${LIBXML2_ICONV_LIBRARIES}\")\nMESSAGE(STATUS \"  Brotli include directory......... : ${BROTLI_INCLUDE_DIR}\")\nMESSAGE(STATUS \"  Brotli libraries ................ : ${BROTLI_LIBRARIES}\")\nMESSAGE(STATUS \"  Check include directory.......... : ${CHECK_INCLUDE_DIR}\")\nMESSAGE(STATUS \"  Check libraries ................. : ${CHECK_LIBRARIES}\")\nMESSAGE(STATUS \"  Curl include directory........... : ${CURL_INCLUDE_DIR}\")\nMESSAGE(STATUS \"  Curl libraries .................. : ${CURL_LIBRARIES}\")\nMESSAGE(STATUS \"  Jansson include directory ....... : ${JANSSON_INCLUDE_DIR}\")\nMESSAGE(STATUS \"  Jansson libraries ............... : ${JANSSON_LIBRARIES}\")\nMESSAGE(STATUS \"  Extra include directories ....... : ${EXTRA_INCLUDES}\")\nMESSAGE(STATUS \"  Extra compile flags ............. : ${EXTRA_COMPILE_FLAGS}\")\nMESSAGE(STATUS \"  Extra libraries ................. : ${EXTRA_LIBS}\")\n\nMESSAGE(STATUS \"  Modules built and loaded:\")\nFOREACH(mod ${mods_built_and_loaded})\n  MESSAGE(STATUS \"    ${mod}\")\nENDFOREACH()\n\nMESSAGE(STATUS \"  Modules built but not loaded:\")\nFOREACH(mod ${mods_built_but_not_loaded})\n  MESSAGE(STATUS \"    ${mod}\")\nENDFOREACH()\n\nMESSAGE(STATUS \"  Modules not built:\")\nFOREACH(mod ${mods_omitted})\n  MESSAGE(STATUS \"    ${mod}\")\nENDFOREACH()\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 4.93359375,
          "content": "\n  APACHE INSTALLATION OVERVIEW\n\n  Quick Start - Unix\n  ------------------\n\n  For complete installation documentation, see [ht]docs/manual/install.html or\n  http://httpd.apache.org/docs/trunk/install.html\n\n     $ ./configure --prefix=PREFIX\n     $ make\n     $ make install\n     $ PREFIX/bin/apachectl start\n\n     NOTES: * Replace PREFIX with the filesystem path under which \n              Apache should be installed.  A typical installation\n              might use \"/usr/local/apache2\" for PREFIX (without the\n              quotes).\n\n            * Read the section \"APR - Unix\" below.\n\n            * If you are a developer building Apache directly from\n              Subversion, you will need to run ./buildconf before running\n              configure. This script bootstraps the build environment and\n              requires Python as well as GNU autoconf and libtool. If you\n              build Apache from a release tarball, you don't have to run\n              buildconf.\n\n            * If you want to build a threaded MPM (for instance worker)\n              on  FreeBSD, be aware that threads do not work well with\n              Apache on FreeBSD versions before 5.4-RELEASE. If you wish\n              to try a threaded Apache on an earlier version of FreeBSD,\n              use the --enable-threads parameter to ./configure in\n              addition to the --with-mpm parameter.\n\n            * If you are building directly from Subversion on Mac OS X\n              (Darwin), make sure to use GNU Libtool 1.4.2 or newer. All\n              recent versions of the developer tools on this platform\n              include a sufficiently recent version of GNU Libtool (named\n              glibtool, but buildconf knows where to find it).\n\n  For a short impression of what possibilities you have, here is a\n  typical example which configures Apache for the installation tree\n  /sw/pkg/apache with a particular compiler and flags plus the two\n  additional modules mod_rewrite and mod_speling for later loading\n  through the DSO mechanism:\n\n     $ CC=\"pgcc\" CFLAGS=\"-O2\" \\\n     ./configure --prefix=/sw/pkg/apache \\\n     --enable-rewrite=shared \\\n     --enable-speling=shared \n\n  The easiest way to find all of the configuration flags for Apache 2.5\n  is to run ./configure --help.\n\n  APR - Unix\n  ----------\n\n  httpd trunk (httpd development version 2.5) can use APR trunk (future\n  APR version 2.0) or the combination of the current APR 1.x branch and\n  the current APR-util 1.x branch.  (APR trunk bundles the features in\n  APR-util 1.x.)\n\n  The httpd buildconf step, required when building httpd from Subversion,\n  must have access to the APR source.  The httpd configure step, always\n  required, can configure the APR source in srclib or use a previously-\n  built APR.\n\n  APR (and APR-util if using APR 1.x) can be built with httpd from httpd's\n  srclib directory or can be built separately, prior to building httpd.\n \n  Building APR with httpd from httpd's srclib directory is required if\n  you don't have the compiler which the system APR was built with, and it\n  can also be advantageous if you are a developer who will be linking your\n  code with httpd or using a debugger to step through server code, as it\n  removes the possibility of version or compile-option mismatches with\n  APR and APR-util code.\n\n  To use APR trunk in srclib:\n\n    Check out APR trunk in srclib/apr with the following command:\n\n    svn co http://svn.apache.org/repos/asf/apr/apr/trunk srclib/apr\n\n    buildconf will find it automatically.  Use the --with-included-apr\n    argument to httpd configure.\n\n  To use APR 1.x and APR-util 1.x in srclib:\n\n    Check out the current branches as srclib/apr and srclib/apr-util with\n    the following commands:\n\n    svn co http://svn.apache.org/repos/asf/apr/apr/branches/1.7.x srclib/apr\n    svn co http://svn.apache.org/repos/asf/apr/apr-util/branches/1.6.x srclib/apr-util\n\n    buildconf will find them automatically.  Use the --with-included-apr\n    argument to httpd configure.\n\n  To use existing checkouts of APR (and APR-util if using APR 1.x):\n\n    httpd buildconf must have access to the source trees.  Use these arguments\n    to httpd buildconf:\n\n    --with-apr=[path to apr source] --with-apr-util=[path to apr-util source]\n  \n    (Omit --with-apr-util if using APR trunk.)\n\n    httpd configure must have access to a previously build apr.  Use these\n    arguments to httpd configure:\n\n    --with-apr=[path to apr install] --with-apr-util=[path to apr-util install]\n  \n    (Omit --with-apr-util if using APR trunk.)\n\n\n  Quick Start - Windows\n  ---------------------\n\n  For complete documentation, see manual/platform/windows.html.en or\n  <http://httpd.apache.org/docs/trunk/platform/windows.html>\n\n\n  Postscript\n  ----------\n\n  To obtain help with installation problems, please see the resources at\n  <http://httpd.apache.org/support.html>\n\n  Thanks for using the Apache HTTP Server, version 2.5.\n\n                                     The Apache Software Foundation\n                                     http://www.apache.org/\n"
        },
        {
          "name": "InstallBin.dsp",
          "type": "blob",
          "size": 2.8408203125,
          "content": "# Microsoft Developer Studio Project File - Name=\"InstallBin\" - Package Owner=<4>\n# Microsoft Developer Studio Generated Build File, Format Version 6.00\n# ** DO NOT EDIT **\n\n# TARGTYPE \"Win32 (x86) External Target\" 0x0106\n\nCFG=InstallBin - Win32 Debug\n!MESSAGE This is not a valid makefile. To build this project using NMAKE,\n!MESSAGE use the Export Makefile command and run\n!MESSAGE \n!MESSAGE NMAKE /f \"InstallBin.mak\".\n!MESSAGE \n!MESSAGE You can specify a configuration when running NMAKE\n!MESSAGE by defining the macro CFG on the command line. For example:\n!MESSAGE \n!MESSAGE NMAKE /f \"InstallBin.mak\" CFG=\"InstallBin - Win32 Debug\"\n!MESSAGE \n!MESSAGE Possible choices for configuration are:\n!MESSAGE \n!MESSAGE \"InstallBin - Win32 Release\" (based on \"Win32 (x86) External Target\")\n!MESSAGE \"InstallBin - Win32 Debug\" (based on \"Win32 (x86) External Target\")\n!MESSAGE \n\n# Begin Project\n# PROP AllowPerConfigDependencies 0\n# PROP Scc_ProjName \"\"\n# PROP Scc_LocalPath \"\"\n\n!IF  \"$(CFG)\" == \"InstallBin - Win32 Release\"\n\n# PROP BASE Use_Debug_Libraries 0\n# PROP BASE Output_Dir \"Release\"\n# PROP BASE Intermediate_Dir \"Release\"\n# PROP BASE Cmd_Line \"NMAKE /f InstallBin.mak\"\n# PROP BASE Rebuild_Opt \"/a\"\n# PROP BASE Target_File \"\\Apache2x\\bin\\httpd.exe\"\n# PROP BASE Bsc_Name \"InstallBin.bsc\"\n# PROP BASE Target_Dir \"\"\n# PROP Use_Debug_Libraries 0\n# PROP Output_Dir \"Release\"\n# PROP Intermediate_Dir \"Release\"\n# PROP Cmd_Line \"NMAKE /f makefile.win INSTDIR=\"\\Apache2x\" SHORT=R LONG=Release _install\"\n# PROP Rebuild_Opt \"\"\n# PROP Target_File \"\\Apache2x\\bin\\httpd.exe\"\n# PROP Bsc_Name \"Browse\\httpd.bsc\"\n# PROP Target_Dir \"\"\n\n!ELSEIF  \"$(CFG)\" == \"InstallBin - Win32 Debug\"\n\n# PROP BASE Use_Debug_Libraries 1\n# PROP BASE Output_Dir \"Debug\"\n# PROP BASE Intermediate_Dir \"Debug\"\n# PROP BASE Cmd_Line \"NMAKE /f InstallBin.mak\"\n# PROP BASE Rebuild_Opt \"/a\"\n# PROP BASE Target_File \"\\Apache2x\\bin\\httpd.exe\"\n# PROP BASE Bsc_Name \"InstallBin.bsc\"\n# PROP BASE Target_Dir \"\"\n# PROP Use_Debug_Libraries 1\n# PROP Output_Dir \"Debug\"\n# PROP Intermediate_Dir \"Debug\"\n# PROP Cmd_Line \"NMAKE /f makefile.win INSTDIR=\"\\Apache2x\" SHORT=D LONG=Debug _install\"\n# PROP Rebuild_Opt \"\"\n# PROP Target_File \"\\Apache2x\\bin\\httpd.exe\"\n# PROP Bsc_Name \"\"\n# PROP Target_Dir \"\"\n\n!ENDIF \n\n# Begin Target\n\n# Name \"InstallBin - Win32 Release\"\n# Name \"InstallBin - Win32 Debug\"\n\n!IF  \"$(CFG)\" == \"InstallBin - Win32 Release\"\n\n!ELSEIF  \"$(CFG)\" == \"InstallBin - Win32 Debug\"\n\n!ENDIF \n\n# Begin Source File\n\nSOURCE=..\\logs\\access.log\n# End Source File\n# Begin Source File\n\nSOURCE=.\\os\\win32\\BaseAddr.ref\n# End Source File\n# Begin Source File\n\nSOURCE=.\\CHANGES\n# End Source File\n# Begin Source File\n\nSOURCE=..\\logs\\error.log\n# End Source File\n# Begin Source File\n\nSOURCE=..\\conf\\httpd.conf\n# End Source File\n# Begin Source File\n\nSOURCE=.\\Makefile.win\n# End Source File\n# Begin Source File\n\nSOURCE=..\\STATUS\n# End Source File\n# End Target\n# End Project\n"
        },
        {
          "name": "LAYOUT",
          "type": "blob",
          "size": 3.9033203125,
          "content": "The httpd-2.1 Source Tree LAYOUT\n--------------------------------\n\n./ .................... Top-Level httpd-2.5 Root Directory\n\n  ABOUT_APACHE .......... Overview of the Apache HTTP Server\n  LAYOUT ................ This file describing the source tree\n  README ................ Overview of this distribution\n  STATUS ................ Current project activity and commentary\n\nbuild/ ................ Supporting tools for buildconf/configure\n\n  win32/ ................ Supporting tools for Win32 MSVC builds\n\ndocs/ ................. Documentation and Examples\n\n  cgi-examples/ ......... \n\n  conf/ ................. \n\n  docroot/ .............. \n\n  error/ ................ \n\n    include/ .............. \n\n  icons/ ................ \n\n    small/ ................ \n\n  man/ .................. \n\n  manual/ ............... \n\n    developer/ ............ \n\n    faq/ .................. \n\n    howto/ ................ \n\n    images/ ............... \n\n    misc/ ................. \n\n    mod/ .................. \n\n    platform/ ............. \n\n    programs/ ............. \n\n    search/ ............... \n\n    ssl/ .................. \n\n    style/ ................ \n\n    vhosts/ ............... \n\ninclude/ ................ \n\nmodules/ ................ Manditory and Add-In Apache stock modules\n\n  aaa/ .................... \n\n  arch/ ................... \n\n    netware/ ................ \n\n    win32/ .................. \n\n  cache/ .................. \n\n  dav/ .................... \n\n    fs/ ..................... \n\n    main/ ................... \n\n  echo/ ................... \n\n  experimental/ ........... \n\n  filters/ ................ \n\n  generators/ ............. \n\n  http/ ................... HTTP: protocol module\n\n  loggers/ ................ \n\n  mappers/ ................ \n\n  metadata/ ............... \n\n  pop3/ ...................\n\n  private/ ................\n\n  proxy/ ..................\n\n  ssl/ .................... HTTPS: SSL v2/v3 and TLS v1 protocol module\n\n    README .................. Overview of mod_ssl\n    README.dsov.fig ......... Overview diagram of mod_ssl design\n    README.dsov.ps .......... Overview diagram of mod_ssl design\n    Makefile.in ............. Makefile template for Unix platform\n    config.m4 ............... Autoconf stub for the Apache config mechanism\n    mod_ssl.c ............... main source file containing API structures\n    mod_ssl.h ............... common header file of mod_ssl\n    ssl_engine_config.c ..... module configuration handling\n    ssl_engine_init.c ....... module initialization\n    ssl_engine_io.c ......... I/O support\n    ssl_engine_kernel.c ..... SSL engine kernel\n    ssl_engine_log.c ........ logfile support\n    ssl_engine_mutex.c ...... mutual exclusion support\n    ssl_engine_pphrase.c .... pass-phrase handling\n    ssl_engine_rand.c ....... PRNG support\n    ssl_engine_vars.c ....... Variable Expansion support\n    ssl_scache.c ............ session cache abstraction layer\n    ssl_util.c .............. utility functions\n    ssl_util_ssl.c .......... the OpenSSL companion source\n    ssl_util_ssl.h .......... the OpenSSL companion header\n\n  test/ ................... not distributed with released source tarballs\n\nos/ ..................... \n\n  bs2000/ ................. \n\n  netware/ ................ \n\n  os2/ .................... \n\n  unix/ ................... \n\n  win32/ .................. \n\nserver/ ................. \n\n  mpm/ .................... \n\n    event/ .................. \n\n    mpmt_os2/ ............... \n\n    netware/ ................ \n\n    prefork/ ................ \n\n    winnt/ .................. \n\n    worker/ ................. \n\nsrclib/ ................... Additional Libraries\n\n  apr/ ...................... SEE srclib/apr/LAYOUT\n\n  apr-util/ ................. SEE srclib/apr/LAYOUT\n\nsupport/ ................ Sources for Support Binaries\n\n  SHA1/ .................. Ancient SHA1 password conversion utilities\n\n  win32/ ................. Win32-only Support Applications\n\ntest/ ................... not distributed with released source tarballs\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 24.8818359375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\nAPACHE HTTP SERVER SUBCOMPONENTS: \n\nThe Apache HTTP Server includes a number of subcomponents with\nseparate copyright notices and license terms. Your use of the source\ncode for the these subcomponents is subject to the terms and\nconditions of the following licenses. \n\nFor the mod_mime_magic component:\n\n/*\n * mod_mime_magic: MIME type lookup via file magic numbers\n * Copyright (c) 1996-1997 Cisco Systems, Inc.\n *\n * This software was submitted by Cisco Systems to the Apache Group in July\n * 1997.  Future revisions and derivatives of this source code must\n * acknowledge Cisco Systems as the original contributor of this module.\n * All other licensing and usage conditions are those of the Apache Group.\n *\n * Some of this code is derived from the free version of the file command\n * originally posted to comp.sources.unix.  Copyright info for that program\n * is included below as required.\n * ---------------------------------------------------------------------------\n * - Copyright (c) Ian F. Darwin, 1987. Written by Ian F. Darwin.\n *\n * This software is not subject to any license of the American Telephone and\n * Telegraph Company or of the Regents of the University of California.\n *\n * Permission is granted to anyone to use this software for any purpose on any\n * computer system, and to alter it and redistribute it freely, subject to\n * the following restrictions:\n *\n * 1. The author is not responsible for the consequences of use of this\n * software, no matter how awful, even if they arise from flaws in it.\n *\n * 2. The origin of this software must not be misrepresented, either by\n * explicit claim or by omission.  Since few users ever read sources, credits\n * must appear in the documentation.\n *\n * 3. Altered versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.  Since few users ever read\n * sources, credits must appear in the documentation.\n *\n * 4. This notice may not be removed or altered.\n * -------------------------------------------------------------------------\n *\n */\n\n\nFor the  modules\\mappers\\mod_imagemap.c component:\n\n  \"macmartinized\" polygon code copyright 1992 by Eric Haines, erich@eye.com\n\nFor the  server\\util_md5.c component:\n\n/************************************************************************\n * NCSA HTTPd Server\n * Software Development Group\n * National Center for Supercomputing Applications\n * University of Illinois at Urbana-Champaign\n * 605 E. Springfield, Champaign, IL 61820\n * httpd@ncsa.uiuc.edu\n *\n * Copyright  (C)  1995, Board of Trustees of the University of Illinois\n *\n ************************************************************************\n *\n * md5.c: NCSA HTTPd code which uses the md5c.c RSA Code\n *\n *  Original Code Copyright (C) 1994, Jeff Hostetler, Spyglass, Inc.\n *  Portions of Content-MD5 code Copyright (C) 1993, 1994 by Carnegie Mellon\n *     University (see Copyright below).\n *  Portions of Content-MD5 code Copyright (C) 1991 Bell Communications \n *     Research, Inc. (Bellcore) (see Copyright below).\n *  Portions extracted from mpack, John G. Myers - jgm+@cmu.edu\n *  Content-MD5 Code contributed by Martin Hamilton (martin@net.lut.ac.uk)\n *\n */\n\n\n/* these portions extracted from mpack, John G. Myers - jgm+@cmu.edu */\n/* (C) Copyright 1993,1994 by Carnegie Mellon University\n * All Rights Reserved.\n *\n * Permission to use, copy, modify, distribute, and sell this software\n * and its documentation for any purpose is hereby granted without\n * fee, provided that the above copyright notice appear in all copies\n * and that both that copyright notice and this permission notice\n * appear in supporting documentation, and that the name of Carnegie\n * Mellon University not be used in advertising or publicity\n * pertaining to distribution of the software without specific,\n * written prior permission.  Carnegie Mellon University makes no\n * representations about the suitability of this software for any\n * purpose.  It is provided \"as is\" without express or implied\n * warranty.\n *\n * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO\n * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE\n * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\n * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING\n * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\n * SOFTWARE.\n */\n\n/*\n * Copyright (c) 1991 Bell Communications Research, Inc. (Bellcore)\n *\n * Permission to use, copy, modify, and distribute this material\n * for any purpose and without fee is hereby granted, provided\n * that the above copyright notice and this permission notice\n * appear in all copies, and that the name of Bellcore not be\n * used in advertising or publicity pertaining to this\n * material without the specific, prior written permission\n * of an authorized representative of Bellcore.  BELLCORE\n * MAKES NO REPRESENTATIONS ABOUT THE ACCURACY OR SUITABILITY\n * OF THIS MATERIAL FOR ANY PURPOSE.  IT IS PROVIDED \"AS IS\",\n * WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.  \n */\n\n\nFor the util_pcre.c and ap_regex.h components:\n\n           Copyright (c) 1997-2004 University of Cambridge\n\n-----------------------------------------------------------------------------\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the name of the University of Cambridge nor the names of its\n      contributors may be used to endorse or promote products derived from\n      this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n-----------------------------------------------------------------------------\n\n\nFor the  srclib\\apr\\include\\apr_md5.h component: \n/*\n * This is work is derived from material Copyright RSA Data Security, Inc.\n *\n * The RSA copyright statement and Licence for that original material is\n * included below. This is followed by the Apache copyright statement and\n * licence for the modifications made to that material.\n */\n\n/* Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All\n   rights reserved.\n\n   License to copy and use this software is granted provided that it\n   is identified as the \"RSA Data Security, Inc. MD5 Message-Digest\n   Algorithm\" in all material mentioning or referencing this software\n   or this function.\n\n   License is also granted to make and use derivative works provided\n   that such works are identified as \"derived from the RSA Data\n   Security, Inc. MD5 Message-Digest Algorithm\" in all material\n   mentioning or referencing the derived work.\n\n   RSA Data Security, Inc. makes no representations concerning either\n   the merchantability of this software or the suitability of this\n   software for any particular purpose. It is provided \"as is\"\n   without express or implied warranty of any kind.\n\n   These notices must be retained in any copies of any part of this\n   documentation and/or software.\n */\n\nFor the  srclib\\apr\\passwd\\apr_md5.c component:\n\n/*\n * This is work is derived from material Copyright RSA Data Security, Inc.\n *\n * The RSA copyright statement and Licence for that original material is\n * included below. This is followed by the Apache copyright statement and\n * licence for the modifications made to that material.\n */\n\n/* MD5C.C - RSA Data Security, Inc., MD5 message-digest algorithm\n */\n\n/* Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All\n   rights reserved.\n\n   License to copy and use this software is granted provided that it\n   is identified as the \"RSA Data Security, Inc. MD5 Message-Digest\n   Algorithm\" in all material mentioning or referencing this software\n   or this function.\n\n   License is also granted to make and use derivative works provided\n   that such works are identified as \"derived from the RSA Data\n   Security, Inc. MD5 Message-Digest Algorithm\" in all material\n   mentioning or referencing the derived work.\n\n   RSA Data Security, Inc. makes no representations concerning either\n   the merchantability of this software or the suitability of this\n   software for any particular purpose. It is provided \"as is\"\n   without express or implied warranty of any kind.\n\n   These notices must be retained in any copies of any part of this\n   documentation and/or software.\n */\n/*\n * The apr_md5_encode() routine uses much code obtained from the FreeBSD 3.0\n * MD5 crypt() function, which is licenced as follows:\n * ----------------------------------------------------------------------------\n * \"THE BEER-WARE LICENSE\" (Revision 42):\n * <phk@login.dknet.dk> wrote this file.  As long as you retain this notice you\n * can do whatever you want with this stuff. If we meet some day, and you think\n * this stuff is worth it, you can buy me a beer in return.  Poul-Henning Kamp\n * ----------------------------------------------------------------------------\n */\n\nFor the srclib\\apr-util\\crypto\\apr_md4.c component:\n\n * This is derived from material copyright RSA Data Security, Inc.\n * Their notice is reproduced below in its entirety.\n *\n * Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All\n * rights reserved.\n *\n * License to copy and use this software is granted provided that it\n * is identified as the \"RSA Data Security, Inc. MD4 Message-Digest\n * Algorithm\" in all material mentioning or referencing this software\n * or this function.\n *\n * License is also granted to make and use derivative works provided\n * that such works are identified as \"derived from the RSA Data\n * Security, Inc. MD4 Message-Digest Algorithm\" in all material\n * mentioning or referencing the derived work.\n *\n * RSA Data Security, Inc. makes no representations concerning either\n * the merchantability of this software or the suitability of this\n * software for any particular purpose. It is provided \"as is\"\n * without express or implied warranty of any kind.\n *\n * These notices must be retained in any copies of any part of this\n * documentation and/or software.\n */\n\nFor the srclib\\apr-util\\include\\apr_md4.h component:\n\n *\n * This is derived from material copyright RSA Data Security, Inc.\n * Their notice is reproduced below in its entirety.\n *\n * Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All\n * rights reserved.\n *\n * License to copy and use this software is granted provided that it\n * is identified as the \"RSA Data Security, Inc. MD4 Message-Digest\n * Algorithm\" in all material mentioning or referencing this software\n * or this function.\n *\n * License is also granted to make and use derivative works provided\n * that such works are identified as \"derived from the RSA Data\n * Security, Inc. MD4 Message-Digest Algorithm\" in all material\n * mentioning or referencing the derived work.\n *\n * RSA Data Security, Inc. makes no representations concerning either\n * the merchantability of this software or the suitability of this\n * software for any particular purpose. It is provided \"as is\"\n * without express or implied warranty of any kind.\n *\n * These notices must be retained in any copies of any part of this\n * documentation and/or software.\n */\n\n\nFor the srclib\\apr-util\\test\\testmd4.c component:\n\n *\n * This is derived from material copyright RSA Data Security, Inc.\n * Their notice is reproduced below in its entirety.\n *\n * Copyright (C) 1990-2, RSA Data Security, Inc. Created 1990. All\n * rights reserved.\n *\n * RSA Data Security, Inc. makes no representations concerning either\n * the merchantability of this software or the suitability of this\n * software for any particular purpose. It is provided \"as is\"\n * without express or implied warranty of any kind.\n *\n * These notices must be retained in any copies of any part of this\n * documentation and/or software.\n */\n\nFor the test\\zb.c component:\n\n/*                          ZeusBench V1.01\n\t\t\t    ===============\n\nThis program is Copyright (C) Zeus Technology Limited 1996.\n\nThis program may be used and copied freely providing this copyright notice\nis not removed.\n\nThis software is provided \"as is\" and any express or implied warranties, \nincluding but not limited to, the implied warranties of merchantability and\nfitness for a particular purpose are disclaimed.  In no event shall \nZeus Technology Ltd. be liable for any direct, indirect, incidental, special, \nexemplary, or consequential damaged (including, but not limited to, \nprocurement of substitute good or services; loss of use, data, or profits;\nor business interruption) however caused and on theory of liability.  Whether\nin contract, strict liability or tort (including negligence or otherwise) \narising in any way out of the use of this software, even if advised of the\npossibility of such damage.\n\n     Written by Adam Twiss (adam@zeus.co.uk).  March 1996\n\nThanks to the following people for their input:\n  Mike Belshe (mbelshe@netscape.com) \n  Michael Campanella (campanella@stevms.enet.dec.com)\n\n*/\n\n"
        },
        {
          "name": "Makefile.in",
          "type": "blob",
          "size": 19.6923828125,
          "content": "\nSUBDIRS = srclib os server modules support\nCLEAN_SUBDIRS = test\n\nPROGRAM_NAME         = $(progname)\nPROGRAM_SOURCES      = modules.c\nPROGRAM_LDADD        = buildmark.o $(HTTPD_LDFLAGS) $(PROGRAM_LDDEPS) $(HTTPD_LIBS) $(EXTRA_LIBS) $(AP_LIBS) $(LIBS)\nPROGRAM_PRELINK      = $(COMPILE) -c $(top_srcdir)/server/buildmark.c\nPROGRAM_LDDEPS = \\\n  $(BUILTIN_LIBS) \\\n  $(MPM_LIB) \\\n  $(LIBMAIN_LIB) \\\n  os/$(OS_DIR)/libos.la\nPROGRAM_DEPENDENCIES = \\\n  $(BUILTIN_LIBS) \\\n  $(MPM_LIB) \\\n  server/libmain.la \\\n  os/$(OS_DIR)/libos.la\n\nsbin_PROGRAMS   = $(PROGRAM_NAME)\nTARGETS         = $(sbin_PROGRAMS) $(shared_build) $(other_targets)\nINSTALL_TARGETS = install-conf install-htdocs install-error install-icons \\\n\tinstall-other install-cgi install-include install-suexec install-build \\\n\tinstall-man\n\nCLEAN_TARGETS  = check/bin/* check/build/config_vars.mk \\\n\tcheck/conf/$(PROGRAM_NAME).conf check/conf/magic check/conf/mime.types \\\n\tcheck/conf/extra/* check/include/* $(testcase_OBJECTS) $(testcase_STUBS) \\\n\ttest/httpdunit.cases test/unit/*.o\nDISTCLEAN_TARGETS  = include/ap_config_auto.h include/ap_config_layout.h \\\n\tinclude/apache_probes.h \\\n\tmodules.c config.cache config.log config.status build/config_vars.mk \\\n\tbuild/rules.mk docs/conf/httpd.conf docs/conf/extra/*.conf shlibtool \\\n\tbuild/pkg/pkginfo build/config_vars.sh bsd_converted\nEXTRACLEAN_TARGETS = configure include/ap_config_auto.h.in generated_lists \\\n\thttpd.spec\nPHONY_TARGETS := check check-conf check-dirs check-include unittest-objdir\n\nTESTS =\nTEST_CONFIG =\n\ninclude $(top_builddir)/build/rules.mk\ninclude $(top_srcdir)/build/program.mk\n\ninstall-conf:\n\t@echo Installing configuration files\n\t@$(MKINSTALLDIRS) $(DESTDIR)$(sysconfdir) $(DESTDIR)$(sysconfdir)/extra\n\t@$(MKINSTALLDIRS) $(DESTDIR)$(sysconfdir)/original/extra\n\t@cd $(top_srcdir)/docs/conf; \\\n\tfor i in mime.types magic; do \\\n\t    if test ! -f $(DESTDIR)$(sysconfdir)/$$i; then \\\n\t        $(INSTALL_DATA) $$i $(DESTDIR)$(sysconfdir); \\\n\t    fi; \\\n\tdone; \\\n\tfor j in $(top_srcdir)/docs/conf $(top_builddir)/docs/conf ; do \\\n\t    cd $$j ; \\\n\t    for i in httpd.conf extra/*.conf; do \\\n\t    \tif [ -f $$i ] ; then \\\n\t    \t( \\\n\t    \t\tn_lm=`awk 'BEGIN {n=0} /@@LoadModule@@/ {n+=1} END {print n}' < $$i`; \\\n\t    \t\tif test $$n_lm -eq 0 -o \"x$(MPM_MODULES)$(DSO_MODULES)\" = \"x\"; then \\\n\t    \t\t\tsed -e 's#@@ServerRoot@@#$(prefix)#g' \\\n\t    \t\t\t\t-e 's#@@Port@@#$(PORT)#g' \\\n\t    \t\t\t\t-e 's#@@SSLPort@@#$(SSLPORT)#g' \\\n\t    \t\t\t\t-e '/@@LoadModule@@/d' \\\n\t    \t\t\t\t< $$i; \\\n\t    \t\telse \\\n\t    \t\t\tsed -n -e '/@@LoadModule@@/q' \\\n\t    \t\t\t\t-e 's#@@ServerRoot@@#$(prefix)#g' \\\n\t    \t\t\t\t-e 's#@@Port@@#$(PORT)#g' \\\n\t    \t\t\t\t-e 's#@@SSLPort@@#$(SSLPORT)#g' \\\n\t    \t\t\t\t-e 'p' \\\n\t    \t\t\t\t< $$i; \\\n\t    \t\t\tif echo \" $(DSO_MODULES) \"|$(EGREP) \" cgi \" > /dev/null ; then \\\n\t    \t\t\t\thave_cgi=\"1\"; \\\n\t    \t\t\telse \\\n\t    \t\t\t\thave_cgi=\"0\"; \\\n\t    \t\t\tfi; \\\n\t    \t\t\tif echo \" $(DSO_MODULES) \"|$(EGREP) \" cgid \" > /dev/null ; then \\\n\t    \t\t\t\thave_cgid=\"1\"; \\\n\t    \t\t\telse \\\n\t    \t\t\t\thave_cgid=\"0\"; \\\n\t    \t\t\tfi; \\\n\t    \t\t\tfor j in $(MPM_MODULES) \"^EOL^\"; do \\\n\t    \t\t\t\tif test $$j != \"^EOL^\"; then \\\n\t    \t\t\t\t\tif echo \",$(ENABLED_MPM_MODULE),\"|$(EGREP) \",$$j,\" > /dev/null ; then \\\n\t    \t\t\t\t\t\tloading_disabled=\"\"; \\\n\t    \t\t\t\t\telse \\\n\t    \t\t\t\t\t\tloading_disabled=\"#\"; \\\n\t    \t\t\t\t\tfi; \\\n\t\t\t\t\t\techo \"$${loading_disabled}LoadModule $${j}_module $(rel_libexecdir)/mod_$${j}.so\"; \\\n\t\t\t\t\tfi; \\\n\t    \t\t\tdone; \\\n\t    \t\t\tfor j in $(DSO_MODULES) \"^EOL^\"; do \\\n\t    \t\t\t\tif test $$j != \"^EOL^\"; then \\\n\t    \t\t\t\t\tif echo \",$(ENABLED_DSO_MODULES),\"|$(EGREP) \",$$j,\" > /dev/null ; then \\\n\t    \t\t\t\t\t\tloading_disabled=\"\"; \\\n\t    \t\t\t\t\telse \\\n\t    \t\t\t\t\t\tloading_disabled=\"#\"; \\\n\t\t    \t\t\t\t\tif test \"$(LOAD_ALL_MODULES)\" = \"yes\"; then \\\n\t\t    \t\t\t\t\t\tloading_disabled=\"\"; \\\n\t    \t\t\t\t\t\tfi; \\\n\t    \t\t\t\t\tfi; \\\n\t\t\t\t\t\tif test $$j = \"cgid\" -a \"$$have_cgi\" = \"1\"; then \\\n\t\t\t\t\t\t\techo \"<IfModule !mpm_prefork_module>\"; \\\n\t\t\t\t\t\t\techo \"\t$${loading_disabled}LoadModule $${j}_module $(rel_libexecdir)/mod_$${j}.so\"; \\\n\t\t\t\t\t\t\techo \"</IfModule>\"; \\\n\t\t\t\t\t\telif test $$j = \"cgi\" -a \"$$have_cgid\" = \"1\"; then \\\n\t\t\t\t\t\t\techo \"<IfModule mpm_prefork_module>\"; \\\n\t\t\t\t\t\t\techo \"\t$${loading_disabled}LoadModule $${j}_module $(rel_libexecdir)/mod_$${j}.so\"; \\\n\t\t\t\t\t\t\techo \"</IfModule>\"; \\\n\t\t\t\t\t\telse \\\n\t\t\t\t\t\t\techo \"$${loading_disabled}LoadModule $${j}_module $(rel_libexecdir)/mod_$${j}.so\"; \\\n\t\t\t\t\t\tfi; \\\n\t\t\t\t\tfi; \\\n\t    \t\t\tdone; \\\n\t    \t\t\tsed -e '1,/@@LoadModule@@/d' \\\n\t    \t\t\t\t-e '/@@LoadModule@@/d' \\\n\t    \t\t\t\t-e 's#@@ServerRoot@@#$(prefix)#g' \\\n\t    \t\t\t\t-e 's#@@Port@@#$(PORT)#g' \\\n\t    \t\t\t\t-e 's#@@SSLPort@@#$(SSLPORT)#g' \\\n\t    \t\t\t\t< $$i; \\\n\t    \t\tfi \\\n\t    \t) > $(DESTDIR)$(sysconfdir)/original/$$i; \\\n\t    \tchmod 0644 $(DESTDIR)$(sysconfdir)/original/$$i; \\\n\t    \tfile=$$i; \\\n\t    \tif [ \"$$i\" = \"httpd.conf\" ]; then \\\n\t    \t\tfile=`echo $$i|sed s/.*.conf/$(PROGRAM_NAME).conf/`; \\\n\t    \tfi; \\\n\t    \tif test ! -f $(DESTDIR)$(sysconfdir)/$$file; then \\\n\t    \t\t$(INSTALL_DATA) $(DESTDIR)$(sysconfdir)/original/$$i $(DESTDIR)$(sysconfdir)/$$file; \\\n\t    \tfi; \\\n\t    \tfi; \\\n\t    done ; \\\n\tdone ; \\\n\tif test -f \"$(builddir)/envvars-std\"; then \\\n\t    cp -p envvars-std $(DESTDIR)$(sbindir); \\\n\t    if test ! -f $(DESTDIR)$(sbindir)/envvars; then \\\n\t        cp -p envvars-std $(DESTDIR)$(sbindir)/envvars ; \\\n\t    fi ; \\\n\tfi\n\n# Create a sanitized config_vars.mk\nbuild/config_vars.out: build/config_vars.mk build/config_vars.sh\n\t@$(SHELL) build/config_vars.sh < build/config_vars.mk > build/config_vars.out\n\ninstall-build: build/config_vars.out\n\t@echo Installing build system files\n\t@$(MKINSTALLDIRS) $(DESTDIR)$(installbuilddir)\n\t@$(INSTALL_DATA) $(top_srcdir)/build/*.mk build/*.mk \\\n\t\t$(DESTDIR)$(installbuilddir)\n\t@$(INSTALL_PROGRAM) $(top_builddir)/config.nice \\\n\t\t$(top_srcdir)/build/mkdir.sh \\\n\t\t$(top_srcdir)/build/instdso.sh \\\n\t\t$(DESTDIR)$(installbuilddir)\n\t@$(INSTALL_DATA) build/config_vars.out $(DESTDIR)$(installbuilddir)/config_vars.mk\n\t@rm build/config_vars.out\n\nhtdocs-srcdir = $(top_srcdir)/docs/docroot\n\ndocs:\n\t@if test -d $(top_srcdir)/docs/manual/build; then \\\n\t    cd $(top_srcdir)/docs/manual/build && ./build.sh all; \\\n\telse \\\n\t    echo 'For details on generating the docs, please read:'; \\\n\t    echo '  http://httpd.apache.org/docs-project/docsformat.html'; \\\n\tfi\n\nupdate-changes:\n\t@for i in `find changes-entries -type f`; do \\\n\t    cp CHANGES CHANGES.tmp ; \\\n\t    awk -v fname=$$i 'BEGIN{done = 0; active = 0} \\\n\t                    done == 0 && active == 0 && /^Changes with Apache /{ active = 1; print; next}; \\\n\t                    /^( *\\*|Changes with Apache )/ && active == 1 && done == 0{rec=$$0; while(getline<fname){if (! ($$0 ~ /^ *$$/)){print}}printf \"\\n\";print rec; active = 0; done = 1; next} //;' \\\n\t    CHANGES.tmp > CHANGES ; \\\n\t    rm CHANGES.tmp ; \\\n\t    if [ -n \"$(SVN)\" ] ; then \\\n\t        if ! $(SVN) rm $$i 2>/dev/null ; then \\\n\t            $(RM) $$i ; \\\n\t        fi ; \\\n\t    else \\\n\t        $(RM) $$i ; \\\n\t    fi ; \\\n\tdone ; \\\n\tif [ -n \"$(SVN)\" ] ; then \\\n\t    $(SVN) diff CHANGES ; \\\n\tfi\n\nvalidate-xml:\n\t@if test -d $(top_srcdir)/docs/manual/build; then \\\n\t    cd $(top_srcdir)/docs/manual/build && ./build.sh validate-xml; \\\n\telse \\\n\t    echo 'For details on generating the docs, please read:'; \\\n\t    echo '  http://httpd.apache.org/docs-project/docsformat.html'; \\\n\tfi\n\ndox:\n\tdoxygen $(top_srcdir)/docs/doxygen.conf\n\ninstall-htdocs:\n\t-@if [ -d $(DESTDIR)$(htdocsdir) ]; then \\\n           echo \"[PRESERVING EXISTING HTDOCS SUBDIR: $(DESTDIR)$(htdocsdir)]\"; \\\n        else \\\n\t    echo Installing HTML documents ; \\\n\t    $(MKINSTALLDIRS) $(DESTDIR)$(htdocsdir) ; \\\n\t    if test -d $(htdocs-srcdir) && test \"x$(RSYNC)\" != \"x\" && test -x $(RSYNC) ; then \\\n\t\t$(RSYNC) --exclude .svn -rlpt --numeric-ids $(htdocs-srcdir)/ $(DESTDIR)$(htdocsdir)/; \\\n\t    else \\\n\t\ttest -d $(htdocs-srcdir) && (cd $(htdocs-srcdir) && cp -rp * $(DESTDIR)$(htdocsdir)) ; \\\n\t\tcd $(DESTDIR)$(htdocsdir) && find . -name \".svn\" -type d -print | xargs rm -rf 2>/dev/null || true; \\\n\t    fi; \\\n\tfi\n\ninstall-error:\n\t-@if [ -d $(DESTDIR)$(errordir) ]; then \\\n           echo \"[PRESERVING EXISTING ERROR SUBDIR: $(DESTDIR)$(errordir)]\"; \\\n        else \\\n\t    echo Installing error documents ; \\\n\t    $(MKINSTALLDIRS) $(DESTDIR)$(errordir) ; \\\n\t    cd $(top_srcdir)/docs/error && cp -rp * $(DESTDIR)$(errordir) ; \\\n\t    test \"x$(errordir)\" != \"x\" && cd $(DESTDIR)$(errordir) && find . -name \".svn\" -type d -print | xargs rm -rf 2>/dev/null || true; \\\n\tfi\n\ninstall-icons:\n\t-@if [ -d $(DESTDIR)$(iconsdir) ]; then \\\n           echo \"[PRESERVING EXISTING ICONS SUBDIR: $(DESTDIR)$(iconsdir)]\"; \\\n        else \\\n\t    echo Installing icons ; \\\n\t    $(MKINSTALLDIRS) $(DESTDIR)$(iconsdir) ; \\\n\t    cd $(top_srcdir)/docs/icons && cp -rp * $(DESTDIR)$(iconsdir) ; \\\n\t    test \"x$(iconsdir)\" != \"x\" && cd $(DESTDIR)$(iconsdir) && find . -name \".svn\" -type d -print | xargs rm -rf 2>/dev/null || true; \\\n\tfi\n\ninstall-cgi:\n\t-@if [ -d $(DESTDIR)$(cgidir) ];then \\\n\t    echo \"[PRESERVING EXISTING CGI SUBDIR: $(DESTDIR)$(cgidir)]\"; \\\n\telse \\\n\t   echo Installing CGIs ; \\\n\t   $(MKINSTALLDIRS) $(DESTDIR)$(cgidir) ; \\\n\t   cd $(top_srcdir)/docs/cgi-examples && cp -rp * $(DESTDIR)$(cgidir) ; \\\n\t   test \"x$(cgidir)\" != \"x\" && cd $(DESTDIR)$(cgidir) && find . -name \".svn\" -type d -print | xargs rm -rf 2>/dev/null || true; \\\n\tfi\n\ninstall-other:\n\t@test -d $(DESTDIR)$(logfiledir) || $(MKINSTALLDIRS) $(DESTDIR)$(logfiledir)\n\t@test -d $(DESTDIR)$(runtimedir) || $(MKINSTALLDIRS) $(DESTDIR)$(runtimedir)\n\t@test -d $(DESTDIR)$(statedir) || $(MKINSTALLDIRS) $(DESTDIR)$(statedir)\n\t@for ext in dll x; do \\\n\t\tfile=apachecore.$$ext; \\\n\t\tif test -f $$file; then \\\n\t\t\tcp -p $$file $(DESTDIR)$(libdir); \\\n\t\tfi; \\\n\tdone; \\\n\tfile=httpd.dll; \\\n\tif test -f $$file; then \\\n\t\tcp -p $$file $(DESTDIR)$(bindir); \\\n\tfi;\n\nINSTALL_HEADERS = \\\n\tinclude/*.h \\\n\t$(srcdir)/include/*.h \\\n\t$(srcdir)/os/$(OS_DIR)/os.h \\\n\t$(srcdir)/modules/arch/unix/mod_unixd.h \\\n\t$(srcdir)/modules/core/mod_so.h \\\n\t$(srcdir)/modules/core/mod_watchdog.h \\\n\t$(srcdir)/modules/cache/mod_cache.h \\\n\t$(srcdir)/modules/cache/cache_common.h \\\n\t$(srcdir)/modules/database/mod_dbd.h \\\n\t$(srcdir)/modules/dav/main/mod_dav.h \\\n\t$(srcdir)/modules/http2/mod_http2.h \\\n\t$(srcdir)/modules/filters/mod_include.h \\\n\t$(srcdir)/modules/filters/mod_xml2enc.h \\\n\t$(srcdir)/modules/generators/mod_cgi.h \\\n\t$(srcdir)/modules/generators/mod_status.h \\\n\t$(srcdir)/modules/loggers/mod_log_config.h \\\n\t$(srcdir)/modules/mappers/mod_rewrite.h \\\n\t$(srcdir)/modules/proxy/mod_proxy.h \\\n\t$(srcdir)/modules/proxy/mod_serf.h \\\n        $(srcdir)/modules/session/mod_session.h \\\n\t$(srcdir)/modules/ssl/mod_ssl.h \\\n\t$(srcdir)/modules/ssl/mod_ssl_openssl.h \\\n\t$(srcdir)/os/$(OS_DIR)/*.h\n\ninstall-include:\n\t@echo Installing header files\n\t@$(MKINSTALLDIRS) $(DESTDIR)$(includedir)\n\t@$(INSTALL_DATA) $(INSTALL_HEADERS) $(DESTDIR)$(includedir)\n\ninstall-man:\n\t@echo Installing man pages and online manual\n\t@test -d $(DESTDIR)$(mandir)      || $(MKINSTALLDIRS) $(DESTDIR)$(mandir)\n\t@test -d $(DESTDIR)$(mandir)/man1 || $(MKINSTALLDIRS) $(DESTDIR)$(mandir)/man1\n\t@test -d $(DESTDIR)$(mandir)/man8 || $(MKINSTALLDIRS) $(DESTDIR)$(mandir)/man8\n\t@test -d $(DESTDIR)$(manualdir)   || $(MKINSTALLDIRS) $(DESTDIR)$(manualdir)\n\t@cp -p $(top_srcdir)/docs/man/*.1 $(DESTDIR)$(mandir)/man1\n\t@cp -p $(top_srcdir)/docs/man/*.8 $(DESTDIR)$(mandir)/man8\n\t@if test \"x$(RSYNC)\" != \"x\" && test -x $(RSYNC) ; then \\\n\t  $(RSYNC) --exclude .svn -rlpt --numeric-ids $(top_srcdir)/docs/manual/ $(DESTDIR)$(manualdir)/; \\\n\telse \\\n\t  cd $(top_srcdir)/docs/manual && cp -rp * $(DESTDIR)$(manualdir); \\\n\t  cd $(DESTDIR)$(manualdir) && find . -name \".svn\" -type d -print | xargs rm -rf 2>/dev/null || true; \\\n\tfi\n\ninstall-suexec: install-suexec-$(INSTALL_SUEXEC)\n\ninstall-suexec-binary:\n\t@if test -f $(builddir)/support/suexec; then \\\n            test -d $(DESTDIR)$(sbindir) || $(MKINSTALLDIRS) $(DESTDIR)$(sbindir); \\\n            $(INSTALL_PROGRAM) $(top_builddir)/support/suexec $(DESTDIR)$(sbindir); \\\n\tfi\n\ninstall-suexec-setuid: install-suexec-binary\n\t@if test -f $(builddir)/support/suexec; then \\\n\t    chmod 4755 $(DESTDIR)$(sbindir)/suexec; \\\n\tfi\n\ninstall-suexec-caps: install-suexec-binary\n\t@if test -f $(builddir)/support/suexec; then \\\n            setcap 'cap_setuid,cap_setgid+pe' $(DESTDIR)$(sbindir)/suexec; \\\n\tfi\n\nsuexec:\n\tcd support && $(MAKE) suexec\n\nx-local-distclean:\n\t@rm -rf autom4te.cache\n\nupdate-log-tags update-log-msg-tags:\n\tfind server modules os -name \\*.c|xargs perl \\\n\t\tdocs/log-message-tags/update-log-msg-tags\n\n# XXX: This looks awfully platform-specific [read: bad form and style]\ninclude $(top_srcdir)/os/os2/core.mk\n\n#\n# In-tree Testing\n#\n\n# Installs the include/ header files into the ./check/ directory so we can use\n# them during `make check`.\ncheck-include: override includedir:=$(top_builddir)/check/include\ncheck-include: install-include\n\n# This is basically the same as install-conf, but we only care about the files\n# necessary to run the test suite, and the LoadModule lines point back to the\n# build tree. Configuration files will be installed to ./check/conf and pointed\n# to by ./check/apxs.\ncheck-conf:\n\t@mkdir -p check/conf/extra; \\\n\tcd $(top_srcdir)/docs/conf; \\\n\tfor i in mime.types magic; do \\\n\t    $(INSTALL_DATA) $$i $(top_builddir)/check/conf; \\\n\tdone; \\\n\tfor j in $(top_srcdir)/docs/conf $(top_builddir)/docs/conf ; do \\\n\t    cd $$j ; \\\n\t    for i in httpd.conf extra/*.conf; do \\\n\t        if [ -f $$i ] ; then \\\n\t        ( \\\n\t            n_lm=`awk 'BEGIN {n=0} /@@LoadModule@@/ {n+=1} END {print n}' < $$i`; \\\n\t            if test $$n_lm -eq 0 -o \"x$(MPM_MODULES)$(DSO_MODULES)\" = \"x\"; then \\\n\t                sed -e 's#@@ServerRoot@@#$(top_builddir)/check#g' \\\n\t                    -e 's#@@Port@@#$(PORT)#g' \\\n\t                    -e 's#@@SSLPort@@#$(SSLPORT)#g' \\\n\t                    -e 's#$(prefix)#$(top_builddir)/check#g' \\\n\t                    -e 's/^#ServerName /ServerName /' \\\n\t                    -e '/@@LoadModule@@/d' \\\n\t                    < $$i; \\\n\t            else \\\n\t                sed -n -e '/@@LoadModule@@/q' \\\n\t                    -e 's#@@ServerRoot@@#$(top_builddir)/check#g' \\\n\t                    -e 's#@@Port@@#$(PORT)#g' \\\n\t                    -e 's#@@SSLPort@@#$(SSLPORT)#g' \\\n\t                    -e 's#$(prefix)#$(top_builddir)/check#g' \\\n\t                    -e 's/^#ServerName /ServerName /' \\\n\t                    -e 'p' \\\n\t                    < $$i; \\\n\t                if echo \" $(DSO_MODULES) \"|$(EGREP) \" cgi \" > /dev/null ; then \\\n\t                    have_cgi=\"1\"; \\\n\t                else \\\n\t                    have_cgi=\"0\"; \\\n\t                fi; \\\n\t                if echo \" $(DSO_MODULES) \"|$(EGREP) \" cgid \" > /dev/null ; then \\\n\t                    have_cgid=\"1\"; \\\n\t                else \\\n\t                    have_cgid=\"0\"; \\\n\t                fi; \\\n\t                for j in $(MPM_MODULES) \"^EOL^\"; do \\\n\t                    path=$$(find \"$(top_builddir)/server\" -name \"mod_$$j.so\"); \\\n\t                    if test $$j != \"^EOL^\"; then \\\n\t                        if echo \",$(ENABLED_MPM_MODULE),\"|$(EGREP) \",$$j,\" > /dev/null ; then \\\n\t                            loading_disabled=\"\"; \\\n\t                        else \\\n\t                            loading_disabled=\"#\"; \\\n\t                        fi; \\\n\t                    echo \"$${loading_disabled}LoadModule $${j}_module $${path}\"; \\\n\t                fi; \\\n\t                done; \\\n\t                for j in $(DSO_MODULES) \"^EOL^\"; do \\\n\t                    path=$$(find \"$(top_builddir)/modules\" -name \"mod_$$j.so\"); \\\n\t                    if test $$j != \"^EOL^\"; then \\\n\t                        if test $$j = \"cgid\" -a \"$$have_cgi\" = \"1\"; then \\\n\t                            echo \"<IfModule !mpm_prefork_module>\"; \\\n\t                            echo \"\tLoadModule $${j}_module $${path}\"; \\\n\t                            echo \"</IfModule>\"; \\\n\t                        elif test $$j = \"cgi\" -a \"$$have_cgid\" = \"1\"; then \\\n\t                            echo \"<IfModule mpm_prefork_module>\"; \\\n\t                            echo \"\tLoadModule $${j}_module $${path}\"; \\\n\t                            echo \"</IfModule>\"; \\\n\t                        else \\\n\t                            echo \"LoadModule $${j}_module $${path}\"; \\\n\t                        fi; \\\n\t                    fi; \\\n\t                done; \\\n\t                sed -e '1,/@@LoadModule@@/d' \\\n\t                    -e '/@@LoadModule@@/d' \\\n\t                    -e 's#@@ServerRoot@@#$(top_builddir)/check#g' \\\n\t                    -e 's#@@Port@@#$(PORT)#g' \\\n\t                    -e 's#@@SSLPort@@#$(SSLPORT)#g' \\\n\t                    -e 's#$(prefix)#$(top_builddir)/check#g' \\\n\t                    -e 's/^#ServerName /ServerName /' \\\n\t                    < $$i; \\\n\t            fi \\\n\t        ) > $(top_builddir)/check/conf/$$i; \\\n\t        chmod 0644 $(top_builddir)/check/conf/$$i; \\\n\t        if [ \"$$i\" = \"httpd.conf\" ]; then \\\n\t            mv \"$(top_builddir)/check/conf/$$i\" \"$(top_builddir)/check/conf/$(PROGRAM_NAME).conf\"; \\\n\t        fi; \\\n\t        fi; \\\n\t    done ; \\\n\tdone ;\n\n# Sometimes (e.g. when MPM DSOs are enabled) the test suite runs a full\n# configuration check on our in-tree build. To pass, we have to have all of the\n# correct directories, even though they won't be used.\ncheck-dirs:\n\t@mkdir -p check/htdocs check/logs check/bin\n\ncheck-binaries: check/bin/apxs check/bin/httpd check/bin/ab\n\ncheck/bin/httpd:\n\tln -s $(top_builddir)/httpd check/bin/httpd\n\ncheck/bin/ab:\n\tln -s $(top_builddir)/support/ab check/bin/ab\n\n# A version of apxs with the PREFIX overridden to point inside the install root\ncheck/bin/apxs:\n\tmkdir -p check\n\tsed -e 's#$(prefix)#$(top_builddir)/check#g' support/apxs > $@\n\tchmod +x $@\n\n# A version of config_vars.mk with PREFIX and SBINDIR and BINDIR overridden.\ncheck/build/config_vars.mk: build/config_vars.out\n\tmkdir -p check/build\n\tcp $< $@\n\techo \"prefix = $(top_builddir)/check\" >> $@\n\techo \"sbindir = $(top_builddir)/check/bin\" >> $@\n\techo \"bindir = $(top_builddir)/check/bin\" >> $@\n\n# Generate config & modules etc from scratch any time a header file is\n# touched, so e.g. we don't get MMN mismatch against the modules built\n# in .../c-modules.\n$(TEST_SUITE_LOCATION)/Makefile: $(TEST_SUITE_LOCATION)/Makefile.PL $(INSTALL_HEADERS)\n\tcd \"$(TEST_SUITE_LOCATION)\" && \\\n\t    perl Makefile.PL -apxs \"$(top_builddir)/check/bin/apxs\" && \\\n\t    ./t/TEST -clean && \\\n\t    ./t/TEST -config $(TEST_CONFIG)\n\ncheck-make: $(TEST_SUITE_LOCATION)/Makefile\n\ncheck-no:\n\t@echo 'Re-run configure with the --with-test-suite option to enable in-tree tests.'\n\t@false\n\ncheck-yes: check-include check-dirs check-conf check/build/config_vars.mk \\\n\tcheck-binaries $(TEST_SUITE_LOCATION)/Makefile\n\tcd $(TEST_SUITE_LOCATION) && $(MAKE) && ./t/TEST $(TEST_CONFIG) $(TESTS)\n\n# Run the Apache::Test suite if it has been configured with --with-test-suite.\ncheck: check-$(WITH_TEST_SUITE)\n\n#\n# Unit Test Suite\n#\n\n# Make sure the object subdirectories we use exist in the build directory during\n# VPATH builds.\nunittest-objdir:\n\t@mkdir -p test/unit\n\n# Normally I don't like wildcard sources, but for tests, autodiscovery is the\n# way to go.\ntestcase_SOURCES := $(patsubst $(top_srcdir)/%,%,$(wildcard $(top_srcdir)/test/unit/*.c))\ntestcase_OBJECTS := $(testcase_SOURCES:%.c=%.lo)\ntestcase_STUBS   := $(testcase_SOURCES:%.c=%.tests)\n\n# Each testcase depends on the source file as well as the autogenerated .tests\n# stub.\n$(testcase_OBJECTS): %.lo: %.c %.tests | unittest-objdir\n\n$(testcase_STUBS): %.tests: %.c\n\t$(top_srcdir)/build/httpdunit_gen_stubs.pl < \"$<\" > \"$@\"\n\ntest/httpdunit.cases: $(testcase_SOURCES) | unittest-objdir\n\tcat $^ | $(top_srcdir)/build/httpdunit_gen_cases.pl --declaration > $@\n\tcat $^ | $(top_srcdir)/build/httpdunit_gen_cases.pl >> $@\n\ntest/httpdunit.lo: test/httpdunit.c test/httpdunit.cases | unittest-objdir\n\n# httpdunit is only added to $(other_targets) if configure detects a working\n# libcheck on the system.\nhttpdunit_OBJECTS := test/httpdunit.lo $(testcase_OBJECTS)\n$(httpdunit_OBJECTS): override LTCFLAGS += $(UNITTEST_CFLAGS)\ntest/httpdunit: $(httpdunit_OBJECTS) $(PROGRAM_DEPENDENCIES) $(PROGRAM_OBJECTS)\n\t$(LINK) $(httpdunit_OBJECTS) $(PROGRAM_OBJECTS) $(UNITTEST_LIBS) $(PROGRAM_LDADD)\n"
        },
        {
          "name": "Makefile.win",
          "type": "blob",
          "size": 49.7822265625,
          "content": "# Makefile for Windows NT and Windows 95/98/2000\n\n# Targets are:\n#   _buildr     - build Apache in Release mode\n#   _buildd     - build Apache in Debug mode\n#   installr    - build and install a Release build\n#   installd    - build and install a Debug build\n#   clean       - remove (most) generated files\n#   _cleanr     - remove (most) files generated by a Release build\n#   _cleand     - remove (most) files generated by a Debug build\n#   _browse     - build the browse info file\n#   _fixshebang - add proper shebang lines to activate installed \n#                 printenv files\n#                 Note: _fixshebang must be run separately and is not\n#                 run by any of the above install* targets.\n#\n# The following install defaults may be customized;\n#\n#   Option      Default\n#   INSTDIR     /Apache2x\n#   PORT        80\n#   SSLPORT     443\n#   DOMAINNAME  example.com\n#   SERVERNAME  www.example.com\n#   SERVERNAME  admin@example.com\n#\n#   ALL         (unset)     Includes additional modules for build testing\n#\n# Provide a DBD_LIST argument after configuring LIB and INCLUDE with\n# the SDK paths of the corresponding client support libraries.\n# The ODBC driver is always built on Windows\n#\n#     DBD_LIST=\"sqlite3 pgsql oracle mysql freetds\"\n#\n# Provide a DBM_LIST argument after configuring LIB and INCLUDE with\n# the SDK paths of the corresponding client support libraries.\n# The sdbm driver is always built in.\n#\n#     DBM_LIST=\"db gdbm\"\n#\n# For example;\n#\n#   nmake -f Makefile.win PORT=80 INSTDIR=\"d:\\Program Files\\Apache\" installr\n#\n# Be aware that certain awk's will not accept backslashed names,\n# so the server root should be given in forward slashes (quoted),\n# preferably with the drive designation!\n\n!IF EXIST(\"Apache.sln\") && ([devenv /help > NUL 2>&1] == 0) \\\n    && !defined(USEMAK) && !defined(USEDSW)\nUSESLN=1\nUSEMAK=0\nUSEDSW=0\n!ELSEIF EXIST(\"httpd.mak\") && !defined(USEDSW)\nUSESLN=0\nUSEMAK=1\nUSEDSW=0\n!ELSE\nUSESLN=0\nUSEMAK=0\nUSEDSW=1\n!ENDIF\n\ndefault: _buildr\n\n!IF (\"$(CTARGET)\" == \"\") && ($(USESLN) == 1)\nCTARGET=/build\n!ENDIF\n\n!IF EXIST(\"srclib\\apr\\include\\apu.h\")\nTLP=Apache-apr2\nUTILDIR=apr\n!ELSEIF !EXIST(\"srclib\\apr\") || !EXIST(\"srclib\\apr-util\") || !EXIST(\"srclib\\apr-iconv\")\n!MESSAGE Please check out or download and unpack the Apache Portability Runtime\n!MESSAGE sources (apr, apr-iconv and apr-util) into your srclib dir.\n!MESSAGE Apache cannot build without these libraries!\n!MESSAGE \n!ERROR Need srclib\\  apr, apr-iconv and apr-util\n!ELSE\nTLP=Apache\nUTILDIR=apr-util\n!ENDIF\n\n!IF !EXIST(\"srclib\\expat\") && !EXIST(\"srclib\\apr-util\\xml\\expat\")\n!MESSAGE Please check out or download and unpack the current expat library source\n!MESSAGE under your srclib dir for apr 2.x, or srclib\\apr-util\\xml\\expat for apr 1.x\n!MESSAGE Apache cannot build without this library!\n!MESSAGE \n!ERROR Need srclib\\expat or srclib\\apr-util\\xml\\expat\n!ENDIF\n\n!IF !EXIST(\"srclib\\pcre\")\n!MESSAGE Please check out or download and unpack the current PCRE library source\n!MESSAGE under your srclib dir, and compile the pcre.dll with CMake options\n!MESSAGE BUILD_SHARED_LIBS and CMAKE_BUILD_TYPE RelWithDebInfo.\n!MESSAGE Apache cannot build without this library!\n!MESSAGE \n!ERROR Need srclib\\pcre\n!ENDIF\n\n\n# Note; _tryfoo: blocks are used only by the msvc developer studio environment \n#\tto 'fix up' the build, since conditional dependencies aren't supported.\n#\n\n!IF EXIST(\"srclib\\openssl\")\n!IF \"$(LONG)\" == \"Debug\" && EXIST(\"srclib\\openssl\\out32dll.dbg\\openssl.exe\")\nSSLBIN=out32dll.dbg\n!ELSE\nSSLBIN=out32dll\n!ENDIF\n\n_tryssl:\n!IF $(USEMAK) == 1\n\tcd modules\\ssl\n\t$(MAKE) $(MAKEOPT) -f mod_ssl.mak CFG=\"mod_ssl - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd support\n\t$(MAKE) $(MAKEOPT) -f abs.mak CFG=\"abs - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\n!ELSEIF $(USESLN) == 1\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_ssl\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project abs\n!ELSE\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_ssl - Win32 $(LONG)\" \\\n\t\t\"abs - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n\n!ELSE\n#     NOT EXIST(\"srclib\\openssl\")\n\n_tryssl:\n\t@echo -----\n\t@echo mod_ssl and ab/ssl will not build unless openssl is installed\n\t@echo in srclib\\openssl.  They must be precompiled using the \n\t@echo ms/ntdll.mak file, see srclib\\openssl\\INSTALL.W32.  The most\n\t@echo recent version confirmed to build with mod_ssl and ab is 0.9.8d.\n\t@echo Available from http://www.openssl.org/\n!ENDIF\n#     NOT EXIST(\"srclib\\openssl\")\n\n!IF EXIST(\"srclib\\serf\")\n\n_tryserf:\n!IF $(USEMAK) == 1\n\tcd modules\\proxy\n\t$(MAKE) $(MAKEOPT) -f mod_serf.mak CFG=\"mod_serf - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!ELSEIF $(USESLN) == 1\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_serf\n!ELSE\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_serf - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n\n!ELSE\n#     NOT EXIST(\"srclib\\serf\")\n\n_tryserf:\n\t@echo -----\n\t@echo mod_serf will not build unless libserf.dll is built in srclib\\serf\n\t@echo For purposes of alpha, libserf release 0.3.0 works, but only with\n\t@echo http://people.apache.org/~wrowe/fixserf-win32-0.3.0.patch\n\n!ENDIF\n#     NOT EXIST(\"srclib\\serf\")\n\n!IF EXIST(\"srclib\\jansson\")\n\n_tryjson:\n!IF $(USEMAK) == 1\n    cd modules\\loggers\n    $(MAKE) $(MAKEOPT) -f mod_log_json.mak CFG=\"mod_log_json - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n    cd ..\\..\n!ELSEIF $(USESLN) == 1\n    devenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_log_json\n!ELSE\n    @msdev $(TLP).dsw /USEENV /MAKE \\\n        \"mod_log_json - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n\n!ELSE\n#     NOT EXIST(\"srclib\\jansson\")\n\n_tryjson:\n    @echo -----\n    @echo mod_log_json will not build unless jansson is built in srclib\\jansson\n    @echo Version 2.0 and later available from https://github.com/akheron/jansson/releases\n    @echo build with:\n    @echo cmake -G \"NMake Makefiles\" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF\n    @echo nmake\n\n!ENDIF\n\n!IF EXIST(\"srclib\\zlib\")\n\n_tryzlib:\n!IF $(USEMAK) == 1\n\tcd modules\\filters\n\t$(MAKE) $(MAKEOPT) -f mod_deflate.mak CFG=\"mod_deflate - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!ELSEIF $(USESLN) == 1\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_deflate\n!ELSE\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_deflate - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n\n!ELSE\n#     NOT EXIST(\"srclib\\zlib\")\n\n_tryzlib:\n\t@echo -----\n\t@echo mod_deflate will not build unless zlib is built in srclib\\zlib.  \n\t@echo Version 1.2.1 and later available from http://www.gzip.org/zlib/\n\t@echo built w/ nmake -f win32/Makefile.msc will satisfy this requirement.\n\n!ENDIF\n\n!IF EXIST(\"srclib\\libxml2\")\n\n_tryxml:\n!IF $(USEMAK) == 1\n\tcd modules\\filters\n\t$(MAKE) $(MAKEOPT) -f mod_proxy_html.mak CFG=\"mod_proxy_html - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t$(MAKE) $(MAKEOPT) -f mod_xml2enc.mak CFG=\"mod_xml2enc - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!ELSEIF $(USESLN) == 1\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_proxy_html\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_xml2enc\n!ELSE\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_proxy_html - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_xml2enc - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n\n!ELSE\n#     NOT EXIST(\"srclib\\libxml2\")\n\n_tryxml:\n\t@echo -----\n\t@echo mod_proxy_html and mod_xml2enc will not build unless libxml2 is \n\t@echo built in srclib\\libxml2. Version 2.7.7 and later available from\n\t@echo http://xmlsoft.org/ will satisfy this requirement.\n\n!ENDIF\n\n\n!IF EXIST(\"srclib\\lua\")\n\n_trylua:\n!IF $(USEMAK) == 1\n\tcd modules\\lua\n\t$(MAKE) $(MAKEOPT) -f mod_lua.mak CFG=\"mod_lua - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!ELSEIF $(USESLN) == 1\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_lua\n!ELSE\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_lua - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n\n!ELSE\n#     NOT EXIST(\"srclib\\lua\")\n\n_trylua:\n\t@echo -----\n\t@echo mod_lua will not build unless lua is installed in srclib\\lua.\n\t@echo Version 5.1 includes an etc\\luavs.bat that will satisfy this requirement.\n\n!ENDIF\n\n!IF EXIST(\"srclib\\nghttp2\")\n\n_trynghttp2:\n!IF $(USEMAK) == 1\n\tcd modules\\http2\n\t$(MAKE) $(MAKEOPT) -f mod_http2.mak CFG=\"mod_http2 - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t$(MAKE) $(MAKEOPT) -f mod_proxy_http2.mak CFG=\"mod_proxy_http2 - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!ELSEIF $(USESLN) == 1\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_http2\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_proxy_http2\n!ELSE\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_http2 - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_proxy_http2 - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n\n!ELSE\n#     NOT EXIST(\"srclib\\nghttp2\")\n\n_trynghttp2:\n\t@echo -----\n\t@echo mod_http2 will not build unless nghttp2 is installed in srclib\\nghttp2.\n\t@echo Version 1.0 includes an lib\\makefile.msvc that will satisfy this\n\t@echo requirement.\n\n!ENDIF\n\n!IF EXIST(\"srclib\\brotli\")\n\n_trybrotli:\n!IF $(USEMAK) == 1\n\tcd modules\\filters\n\t$(MAKE) $(MAKEOPT) -f mod_brotli.mak CFG=\"mod_brotli - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!ELSEIF $(USESLN) == 1\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_brotli\n!ELSE\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_brotli - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n\n!ELSE\n#     NOT EXIST(\"srclib\\brotli\")\n\n_trybrotli:\n\t@echo -----\n\t@echo mod_brotli will not build unless brotli is built in srclib\\brotli.  \n\t@echo Version 1.0.0 and later available from https://github.com/google/brotli/releases\n\t@echo build with:\n\t@echo cmake -G \"NMake Makefiles\" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF\n\t@echo nmake\n\n!ENDIF\n\n!IF EXIST(\"srclib\\openssl\") && EXIST(\"srclib\\jansson\") && EXIST(\"srclib\\curl\")\n\n_trymd:\n!IF $(USEMAK) == 1\n\tcd modules\\md\n\t$(MAKE) $(MAKEOPT) $(SSLOPT) -f mod_md.mak CFG=\"mod_md - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!ELSEIF $(USESLN) == 1\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_md\n!ELSE\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_md - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n\n!ELSE\n#     NOT EXIST(\"srclib\\openssl\") && EXIST(\"srclib\\jansson\") && EXIST(\"srclib\\curl\")\n\n_trymd:\n\t@echo -----\n\t@echo mod_md will not build unless OpenSSL, Jansson and Curl are built and placed\n\t@echo in srclib. Example: srclib/openssl, srclib/jansson and srclib/curl\n\n!ENDIF\n\n_trydb:\n!IF $(USEMAK) == 1\n\tcd srclib\\$(UTILDIR)\\dbd\n\tfor %d in (odbc $(DBD_LIST)) do \\\n\t  $(MAKE) $(MAKEOPT) -f apr_dbd_%d.mak CFG=\"apr_dbd_%d - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\dbm\n\tfor %d in ($(DBM_LIST) x) do if not %d == x \\\n\t  $(MAKE) $(MAKEOPT) -f apr_dbm_%d.mak CFG=\"apr_dbm_%d - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\\..\n!ELSEIF $(USESLN) == 1\n\tfor %d in (odbc $(DBD_LIST)) do \\\n\t  devenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project apr_dbd_%d\n\tfor %d in ($(DBM_LIST) x) do if not %d == x \\\n\t  devenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project apr_dbm_%d\n!ELSE\n\t@for %d in (odbc $(DBD_LIST)) do \\\n\t  msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"apr_dbd_%d - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n\t@for %d in ($(DBM_LIST) x) do if not %d == x \\\n\t  msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"apr_dbm_%d - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n\n\n!IF \"$(INSTDIR)\" == \"\"\nINSTDIR=\\Apache2x\n!ENDIF\n!IF \"$(DOMAINNAME)\" == \"\"\nDOMAINNAME=example.com\n!ENDIF \n!IF \"$(SERVERNAME)\" == \"\"\nSERVERNAME=www.$(DOMAINNAME)\n!ENDIF\n!IF \"$(SERVERADMIN)\" == \"\"\nSERVERADMIN=admin@$(DOMAINNAME)\n!ENDIF\n!IF \"$(PORT)\" == \"\"\nPORT=80\n!ENDIF \n!IF \"$(SSLPORT)\" == \"\"\nSSLPORT=443\n!ENDIF \n\n!IF \"$(LONG)\" == \"\"\n!MESSAGE\n!MESSAGE INSTDIR     = $(INSTDIR)\n!MESSAGE DOMAINNAME  = $(DOMAINNAME)\n!MESSAGE SERVERNAME  = $(SERVERNAME)\n!MESSAGE SERVERADMIN = $(SERVERADMIN)\n!MESSAGE PORT        = $(PORT)\n!IF EXIST(\"srclib\\openssl\")\n!MESSAGE SSLPORT     = $(SSLPORT)\n!ENDIF\n!MESSAGE\n!MESSAGE To change these options use 'nmake -f Makefile.win [option=value]'\n!MESSAGE Example: nmake -f Makefile.win PORT=8080\n!MESSAGE\n!MESSAGE\n!ENDIF\n\n!IFNDEF MAKEOPT\n# Only default the behavior if MAKEOPT= is omitted\n!IFDEF _NMAKE_VER\n# Microsoft NMake options\nMAKEOPT=-nologo\n!ELSEIF \"$(MAKE)\" == \"make\"\n# Borland make options?  Not really supported (yet)\nMAKEOPT=-s -N\n!ENDIF\n!ENDIF\n\n_dummy:\n\n_browse:\n\tcd Browse\n\t  bscmake.exe -nologo -Iu -o Apache.bsc *.sbr\n\tcd ..\n\n_buildr: \n\t@$(MAKE) $(MAKEOPT) -f Makefile.win SHORT=R LONG=Release _build\n\n_buildd: \n\t@$(MAKE) $(MAKEOPT) -f Makefile.win SHORT=D LONG=Debug   _build\n\ninstallr: \n\t@$(MAKE) $(MAKEOPT) -f Makefile.win SHORT=R LONG=Release _build _install\n\ninstalld: \n\t@$(MAKE) $(MAKEOPT) -f Makefile.win SHORT=D LONG=Debug   _build _install\n\nclean:\t_cleanr _cleand\n\t-if exist Browse\\. rd /s Browse < << > nul\ny\n<<\n\n!IF $(USEMAK) == 1\n\n_cleanr:\n\t$(MAKE) $(MAKEOPT) -f Makefile.win SHORT=R LONG=Release CTARGET=CLEAN _build\n\n_cleand:  \n\t$(MAKE) $(MAKEOPT) -f Makefile.win SHORT=D LONG=Debug   CTARGET=CLEAN _build\n\n_build:\n\techo Building Win32 $(LONG) targets ($(SHORT) suffixes)\n!IF !EXIST(\"srclib\\apr-util\")\n\tcd srclib\\expat\\lib\n\t $(MAKE) $(MAKEOPT) -f expat.mak             CFG=\"expat - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\\..\n!ENDIF\n\tcd srclib\\apr\n\t $(MAKE) $(MAKEOPT) -f apr.mak             CFG=\"apr - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f libapr.mak          CFG=\"libapr - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!IF EXIST(\"srclib\\apr-util\")\n\tcd srclib\\apr-iconv\n\t $(MAKE) $(MAKEOPT) -f apriconv.mak  CFG=\"apriconv - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f libapriconv.mak  CFG=\"libapriconv - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n!IF \"$(CTARGET)\" == \"CLEAN\"\n\t$(MAKE) $(MAKEOPT) -f build\\modules.mk.win clean \\\n\t\tBUILD_MODE=$(LONG) BIND_MODE=shared API_SOURCE=.\n!ELSE\n\tcd ccs\n\t$(MAKE) $(MAKEOPT) -f Makefile.win all \\\n\t\tBUILD_MODE=$(LONG) BIND_MODE=shared\n\tcd ..\\ces\n\t$(MAKE) $(MAKEOPT) -f Makefile.win all \\\n\t\tBUILD_MODE=$(LONG) BIND_MODE=shared\n\tcd ..\n!ENDIF\n\tcd ..\\..\n\tcd srclib\\apr-util\\xml\\expat\\lib\n\t $(MAKE) $(MAKEOPT) -f xml.mak             CFG=\"xml - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\\..\n\t $(MAKE) $(MAKEOPT) -f aprutil.mak         CFG=\"aprutil - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f libaprutil.mak      CFG=\"libaprutil - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ldap\n\t $(MAKE) $(MAKEOPT) -f apr_ldap.mak        CFG=\"apr_ldap - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\n!ELSE\n\t# DBD, DBM components live now in apr\n\tcd srclib\\apr\n!ENDIF\n\tcd dbd\n\t  for %d in (odbc $(DBD_LIST)) do \\\n\t    $(MAKE) $(MAKEOPT) -f apr_dbd_%d.mak   CFG=\"apr_dbd_%d - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\n\tcd dbm\n\t  for %d in ($(DBM_LIST) x) do if not %d == x \\\n\t    $(MAKE) $(MAKEOPT) -f apr_dbm_%d.mak   CFG=\"apr_dbm_%d - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\n\tcd ..\\..\n\tcd server\n\t $(MAKE) $(MAKEOPT) -f gen_test_char.mak   CFG=\"gen_test_char - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\n\t $(MAKE) $(MAKEOPT) -f libhttpd.mak        CFG=\"libhttpd - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f libapreq.mak        CFG=\"libapreq - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f httpd.mak           CFG=\"httpd - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n# build ldap prior to authnz_ldap\n\tcd modules\\ldap\n\t $(MAKE) $(MAKEOPT) -f mod_ldap.mak        CFG=\"mod_ldap - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\database\n\t $(MAKE) $(MAKEOPT) -f mod_dbd.mak         CFG=\"mod_dbd - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\aaa\n\t $(MAKE) $(MAKEOPT) -f mod_access_compat.mak CFG=\"mod_access_compat - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_allowhandlers.mak CFG=\"mod_allowhandlers - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_allowmethods.mak CFG=\"mod_allowmethods - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_auth_basic.mak  CFG=\"mod_auth_basic - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_auth_digest.mak CFG=\"mod_auth_digest - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_auth_form.mak   CFG=\"mod_auth_form - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authn_anon.mak  CFG=\"mod_authn_anon - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authn_core.mak  CFG=\"mod_authn_core - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authn_dbd.mak   CFG=\"mod_authn_dbd - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authn_dbm.mak   CFG=\"mod_authn_dbm - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authn_file.mak  CFG=\"mod_authn_file - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authn_socache.mak  CFG=\"mod_authn_socache - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authnz_fcgi.mak CFG=\"mod_authnz_fcgi - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authnz_ldap.mak CFG=\"mod_authnz_ldap - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authz_core.mak  CFG=\"mod_authz_core - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authz_dbd.mak   CFG=\"mod_authz_dbd - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authz_dbm.mak   CFG=\"mod_authz_dbm - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authz_groupfile.mak CFG=\"mod_authz_groupfile - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authz_host.mak  CFG=\"mod_authz_host - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authz_owner.mak CFG=\"mod_authz_owner - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_authz_user.mak  CFG=\"mod_authz_user - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\apreq\n\t $(MAKE) $(MAKEOPT) -f mod_apreq.mak       CFG=\"mod_apreq - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\arch\\win32\n\t $(MAKE) $(MAKEOPT) -f mod_isapi.mak       CFG=\"mod_isapi - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\\..\n\tcd modules\\cache\n\t $(MAKE) $(MAKEOPT) -f mod_cache.mak       CFG=\"mod_cache - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_cache_disk.mak  CFG=\"mod_cache_disk - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_cache_socache.mak  CFG=\"mod_cache_socache - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_file_cache.mak  CFG=\"mod_file_cache - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_socache_dbm.mak CFG=\"mod_socache_dbm - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n#\t $(MAKE) $(MAKEOPT) -f mod_socache_dc.mak  CFG=\"mod_socache_dc - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_socache_memcache.mak CFG=\"mod_socache_memcache - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_socache_shmcb.mak CFG=\"mod_socache_shmcb - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_socache_redis.mak CFG=\"mod_socache_redis - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\core\n\t $(MAKE) $(MAKEOPT) -f mod_macro.mak    CFG=\"mod_macro - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_watchdog.mak    CFG=\"mod_watchdog - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\cluster\n\t $(MAKE) $(MAKEOPT) -f mod_heartbeat.mak   CFG=\"mod_heartbeat - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_heartmonitor.mak CFG=\"mod_heartmonitor - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\dav\\main\n\t $(MAKE) $(MAKEOPT) -f mod_dav.mak         CFG=\"mod_dav - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\\..\n\tcd modules\\dav\\fs\n\t $(MAKE) $(MAKEOPT) -f mod_dav_fs.mak      CFG=\"mod_dav_fs - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\\..\n\tcd modules\\dav\\lock\n\t $(MAKE) $(MAKEOPT) -f mod_dav_lock.mak    CFG=\"mod_dav_lock - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\\..\n\tcd modules\\debugging\n!IFDEF ALL\n\t $(MAKE) $(MAKEOPT) -f mod_bucketeer.mak   CFG=\"mod_bucketeer - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n!ENDIF\n\t $(MAKE) $(MAKEOPT) -f mod_dumpio.mak      CFG=\"mod_dumpio - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\echo\n!IFDEF ALL\n\t $(MAKE) $(MAKEOPT) -f mod_echo.mak        CFG=\"mod_echo - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n!ENDIF\n\tcd ..\\..\n!IFDEF ALL\n\tcd modules\\examples\n\t $(MAKE) $(MAKEOPT) -f mod_case_filter.mak    CFG=\"mod_case_filter - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_case_filter_in.mak CFG=\"mod_case_filter_in - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_example_hooks.mak  CFG=\"mod_example_hooks - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_example_ipc.mak    CFG=\"mod_example_ipc - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!ENDIF\n\tcd modules\\filters\n!IF EXIST(\"srclib\\brotli\")\n\t $(MAKE) $(MAKEOPT) -f mod_brotli.mak      CFG=\"mod_brotli - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n!ENDIF\n\t $(MAKE) $(MAKEOPT) -f mod_buffer.mak      CFG=\"mod_buffer - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_charset_lite.mak CFG=\"mod_charset_lite - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_data.mak        CFG=\"mod_data - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n!IF EXIST(\"srclib\\zlib\")\n\t $(MAKE) $(MAKEOPT) -f mod_deflate.mak     CFG=\"mod_deflate - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n!ENDIF\n\t $(MAKE) $(MAKEOPT) -f mod_ext_filter.mak  CFG=\"mod_ext_filter - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_filter.mak      CFG=\"mod_filter - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_include.mak     CFG=\"mod_include - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n!IF EXIST(\"srclib\\libxml2\")\n\t $(MAKE) $(MAKEOPT) -f mod_proxy_html.mak     CFG=\"mod_proxy_html - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_xml2enc.mak     CFG=\"mod_xml2enc - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n!ENDIF\n\t $(MAKE) $(MAKEOPT) -f mod_ratelimit.mak   CFG=\"mod_ratelimit - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_reflector.mak   CFG=\"mod_reflector - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_reqtimeout.mak  CFG=\"mod_reqtimeout - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_request.mak     CFG=\"mod_request - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_sed.mak         CFG=\"mod_sed - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_substitute.mak  CFG=\"mod_substitute - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\generators\n\t $(MAKE) $(MAKEOPT) -f mod_asis.mak        CFG=\"mod_asis - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_autoindex.mak   CFG=\"mod_autoindex - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_cgi.mak         CFG=\"mod_cgi - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_info.mak        CFG=\"mod_info - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_status.mak      CFG=\"mod_status - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\http\n\t $(MAKE) $(MAKEOPT) -f mod_mime.mak        CFG=\"mod_mime - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\loggers\n\t $(MAKE) $(MAKEOPT) -f mod_log_config.mak  CFG=\"mod_log_config - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_log_debug.mak  CFG=\"mod_log_debug - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_log_forensic.mak CFG=\"mod_log_forensic - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n!IF EXIST(\"srclib\\jansson\")\n   \t $(MAKE) $(MAKEOPT) -f mod_log_json.mak\t   CFG=\"mod_log_json - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n!ENDIF\n\t $(MAKE) $(MAKEOPT) -f mod_logio.mak       CFG=\"mod_logio - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!IF EXIST(\"srclib\\lua\")\n\tcd modules\\lua\n\t $(MAKE) $(MAKEOPT) -f mod_lua.mak         CFG=\"mod_lua - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!ENDIF\n\tcd modules\\mappers\n\t $(MAKE) $(MAKEOPT) -f mod_actions.mak     CFG=\"mod_actions - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_alias.mak       CFG=\"mod_alias - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_dir.mak         CFG=\"mod_dir - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_imagemap.mak    CFG=\"mod_imagemap - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_negotiation.mak CFG=\"mod_negotiation - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_rewrite.mak     CFG=\"mod_rewrite - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_speling.mak     CFG=\"mod_speling - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_userdir.mak     CFG=\"mod_userdir - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_vhost_alias.mak CFG=\"mod_vhost_alias - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\metadata\n\t $(MAKE) $(MAKEOPT) -f mod_cern_meta.mak   CFG=\"mod_cern_meta - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_env.mak         CFG=\"mod_env - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_expires.mak     CFG=\"mod_expires - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_headers.mak     CFG=\"mod_headers - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_ident.mak       CFG=\"mod_ident - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_mime_magic.mak  CFG=\"mod_mime_magic - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_remoteip.mak    CFG=\"mod_remoteip - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_setenvif.mak    CFG=\"mod_setenvif - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_unique_id.mak   CFG=\"mod_unique_id - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_usertrack.mak   CFG=\"mod_usertrack - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_version.mak     CFG=\"mod_version - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\proxy\n\t $(MAKE) $(MAKEOPT) -f mod_proxy.mak       CFG=\"mod_proxy - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_proxy_ajp.mak   CFG=\"mod_proxy_ajp - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_proxy_balancer.mak  CFG=\"mod_proxy_balancer - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_proxy_connect.mak CFG=\"mod_proxy_connect - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_proxy_express.mak CFG=\"mod_proxy_express - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_proxy_fcgi.mak  CFG=\"mod_proxy_fcgi - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_proxy_ftp.mak   CFG=\"mod_proxy_ftp - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_proxy_hcheck.mak  CFG=\"mod_proxy_hcheck - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_proxy_http.mak  CFG=\"mod_proxy_http - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_proxy_scgi.mak  CFG=\"mod_proxy_scgi - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_proxy_uwsgi.mak  CFG=\"mod_proxy_uwsgi - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_proxy_wstunnel.mak  CFG=\"mod_proxy_wstunnel - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n!IF EXIST(\"srclib\\serf\")\n\t $(MAKE) $(MAKEOPT) -f mod_serf.mak        CFG=\"mod_serf - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n!ENDIF\n\tcd ..\\..\n# mod_proxy before mod_proxy_http2\n!IF EXIST(\"srclib\\nghttp2\")\n\tcd modules\\http2\n\t $(MAKE) $(MAKEOPT) -f mod_http2.mak       CFG=\"mod_http2 - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_proxy_http2.mak CFG=\"mod_proxy_http2 - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!ENDIF\n\tcd modules\\proxy\\balancers\n\t $(MAKE) $(MAKEOPT) -f mod_lbmethod_bybusyness.mak CFG=\"mod_lbmethod_bybusyness - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_lbmethod_byrequests.mak CFG=\"mod_lbmethod_byrequests - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_lbmethod_bytraffic.mak  CFG=\"mod_lbmethod_bytraffic - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_lbmethod_heartbeat.mak  CFG=\"mod_lbmethod_heartbeat - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\\..\n!IFDEF ALL\n\tcd modules\\proxy\\examples\n\t $(MAKE) $(MAKEOPT) -f mod_lbmethod_rr.mak CFG=\"mod_lbmethod_rr - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\\..\n!ENDIF\n\tcd modules\\session\n\t $(MAKE) $(MAKEOPT) -f mod_session.mak        CFG=\"mod_session - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_session_cookie.mak CFG=\"mod_session_cookie - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_session_dbd.mak    CFG=\"mod_session_dbd - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd modules\\slotmem\n\t $(MAKE) $(MAKEOPT) -f mod_slotmem_plain.mak  CFG=\"mod_slotmem_plain - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f mod_slotmem_shm.mak    CFG=\"mod_slotmem_shm - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!IF EXIST(\"srclib\\openssl\")\n#\tcd modules\\session\n#\t $(MAKE) $(MAKEOPT) -f mod_session_crypto.mak CFG=\"mod_session_crypto - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n#\tcd ..\\..\n\tcd modules\\ssl\n\t $(MAKE) $(MAKEOPT) -f mod_ssl.mak         CFG=\"mod_ssl - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\tcd support\n\t $(MAKE) $(MAKEOPT) -f abs.mak             CFG=\"abs - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\n!IF EXIST(\"srclib\\jansson\") && EXIST(\"srclib\\curl\")\n\tcd modules\\md\n\t $(MAKE) $(MAKEOPT) $(SSLOPT) -f mod_md.mak          CFG=\"mod_md - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n!ENDIF\n!ENDIF\n\tcd support\n\t $(MAKE) $(MAKEOPT) -f ab.mak              CFG=\"ab - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n#\t $(MAKE) $(MAKEOPT) -f fcgistarter.mak     CFG=\"fcgistarter - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f htcacheclean.mak    CFG=\"htcacheclean - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f htdbm.mak           CFG=\"htdbm - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f htdigest.mak        CFG=\"htdigest - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f htpasswd.mak        CFG=\"htpasswd - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f httxt2dbm.mak       CFG=\"httxt2dbm - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f logresolve.mak      CFG=\"logresolve - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f rotatelogs.mak      CFG=\"rotatelogs - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\n\tcd support\\win32\n\t $(MAKE) $(MAKEOPT) -f ApacheMonitor.mak   CFG=\"ApacheMonitor - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\t $(MAKE) $(MAKEOPT) -f wintty.mak          CFG=\"wintty - Win32 $(LONG)\" RECURSE=0 $(CTARGET)\n\tcd ..\\..\n\n!ELSEIF $(USESLN) == 1\n\n_cleanr:  \n\t$(MAKE) $(MAKEOPT) -f Makefile.win SHORT=R LONG=Release CTARGET=\"/clean\" _build\n\n_cleand:  \n\t$(MAKE) $(MAKEOPT) -f Makefile.win SHORT=D LONG=Debug   CTARGET=\"/clean\" _build\n\n_build:\n\techo Building Win32 $(LONG) targets ($(SHORT) suffixes)\n!IFDEF ALL\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project BuildAll\n!ELSE\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project BuildBin\n!ENDIF\n!IF EXIST(\"srclib\\openssl\")\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_ssl\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project abs\n!ENDIF\n!IF EXIST(\"srclib\\zlib\")\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_deflate\n!ENDIF\n!IF EXIST(\"srclib\\lua\")\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_lua\n!ENDIF\n!IF EXIST(\"srclib\\libxml2\")\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_proxy_html\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_xml2enc\n!ENDIF\n!IF EXIST(\"srclib\\serf\")\n\tdevenv $(TLP).sln /useenv $(CTARGET) $(LONG) /project mod_serf\n!ENDIF\n\n!ELSE\n\n_cleanr:  \n\t@$(MAKE) $(MAKEOPT) -f Makefile.win SHORT=R LONG=Release CTARGET=\"/CLEAN\" _build\n\n_cleand:  \n\t@$(MAKE) $(MAKEOPT) -f Makefile.win SHORT=D LONG=Debug   CTARGET=\"/CLEAN\" _build\n\n_build:\n\t@echo Building Win32 $(LONG) targets ($(SHORT) suffixes)\n!IFDEF ALL\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"BuildAll - Win32 $(LONG)\" $(CTARGET)\n!ELSE\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"BuildBin - Win32 $(LONG)\" $(CTARGET)\n!ENDIF\n!IF \"$(CTARGET)\" == \"/CLEAN\"\n!IF EXIST(\"srclib\\apr-iconv\")\n\t@cd srclib\\apr-iconv\n\t@$(MAKE) $(MAKEOPT) -f build\\modules.mk.win clean \\\n\t\tBUILD_MODE=$(LONG) BIND_MODE=shared API_SOURCE=.\n\t@cd ..\\..\n!ENDIF\n!ENDIF\n!IF EXIST(\"srclib\\openssl\")\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_ssl - Win32 $(LONG)\" \\\n\t\t\"abs - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n!IF EXIST(\"srclib\\zlib\")\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_deflate - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n!IF EXIST(\"srclib\\lua\")\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_lua - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n!IF EXIST(\"srclib\\libxml2\")\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_proxy_html - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_xml2enc - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n!IF EXIST(\"srclib\\serf\")\n\t@msdev $(TLP).dsw /USEENV /MAKE \\\n\t\t\"mod_serf - Win32 $(LONG)\" /NORECURSE $(CTARGET)\n!ENDIF\n\n!ENDIF\n\n\n_copybin:\n\tcopy $(LONG)\\httpd.$(src_exe) \t\t\t\t\"$(inst_exe)\" <.y\n\tcopy $(LONG)\\libapreq.$(src_dll) \t\t\t\"$(inst_dll)\" <.y\n\tcopy $(LONG)\\libhttpd.$(src_dll) \t\t\t\"$(inst_dll)\" <.y\n\tcopy srclib\\apr\\$(LONG)\\libapr-1.$(src_dll) \t\t\"$(inst_dll)\" <.y\n!IF EXIST(\"srclib\\apr-util\")\n\tcopy srclib\\apr-iconv\\$(LONG)\\libapriconv-1.$(src_dll) \t\"$(inst_dll)\" <.y\n\tcopy srclib\\apr-util\\$(LONG)\\libaprutil-1.$(src_dll) \t\"$(inst_dll)\" <.y\n\tcopy srclib\\apr-util\\ldap\\$(LONG)\\apr_ldap-1.$(src_dll) \"$(inst_dll)\" <.y\n!ENDIF\n\tfor %d in (odbc $(DBD_LIST)) do ( \\\n\t  copy srclib\\$(UTILDIR)\\dbd\\$(LONG)\\apr_dbd_%d-1.$(src_dll) \"$(inst_dll)\" <.y \\\n\t)\n\tfor %d in ($(DBM_LIST) x) do if not %d == x ( \\\n\t  copy srclib\\$(UTILDIR)\\dbm\\$(LONG)\\apr_dbm_%d-1.$(src_dll) \"$(inst_dll)\" <.y \\\n\t)\n!IF EXIST(\"srclib\\serf\")\n\tcopy srclib\\serf\\$(LONG)\\libserf.$(src_dll) \t\t\"$(inst_dll)\" <.y\n!ENDIF\n!IF \"$(SHORT)\" == \"D\"\n\tcopy srclib\\pcre\\pcred.$(src_dll)\t\t\t\"$(inst_dll)\" <.y\n!ELSE\n\tcopy srclib\\pcre\\pcre.$(src_dll)\t\t\t\"$(inst_dll)\" <.y\n!ENDIF\t\n\tcopy modules\\aaa\\$(LONG)\\mod_access_compat.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_allowhandlers.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_allowmethods.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_auth_basic.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_auth_digest.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_auth_form.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authn_anon.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authn_core.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authn_dbd.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authn_dbm.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authn_file.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authn_socache.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authnz_fcgi.$(src_so)\t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authnz_ldap.$(src_so)\t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authz_core.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authz_dbd.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authz_dbm.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authz_core.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authz_groupfile.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authz_host.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authz_owner.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\aaa\\$(LONG)\\mod_authz_user.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\apreq\\$(LONG)\\mod_apreq.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\arch\\win32\\$(LONG)\\mod_isapi.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\cache\\$(LONG)\\mod_cache.$(src_so)\t\t\"$(inst_so)\" <.y\n\tcopy modules\\cache\\$(LONG)\\mod_cache_disk.$(src_so)\t\"$(inst_so)\" <.y\n\tcopy modules\\cache\\$(LONG)\\mod_cache_socache.$(src_so)\t\"$(inst_so)\" <.y\n\tcopy modules\\cache\\$(LONG)\\mod_file_cache.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\cache\\$(LONG)\\mod_socache_dbm.$(src_so)\t\"$(inst_so)\" <.y\n#\tcopy modules\\cache\\$(LONG)\\mod_socache_dc.$(src_so)\t\"$(inst_so)\" <.y\n\tcopy modules\\cache\\$(LONG)\\mod_socache_memcache.$(src_so) \"$(inst_so)\" <.y\n\tcopy modules\\cache\\$(LONG)\\mod_socache_shmcb.$(src_so)\t\"$(inst_so)\" <.y\n\tcopy modules\\cache\\$(LONG)\\mod_socache_redis.$(src_so)\t\"$(inst_so)\" <.y\n\tcopy modules\\core\\$(LONG)\\mod_macro.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\core\\$(LONG)\\mod_watchdog.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\cluster\\$(LONG)\\mod_heartbeat.$(src_so)\t\"$(inst_so)\" <.y\n\tcopy modules\\cluster\\$(LONG)\\mod_heartmonitor.$(src_so)\t\"$(inst_so)\" <.y\n\tcopy modules\\database\\$(LONG)\\mod_dbd.$(src_so)\t\t\"$(inst_so)\" <.y\n\tcopy modules\\dav\\fs\\$(LONG)\\mod_dav_fs.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\dav\\lock\\$(LONG)\\mod_dav_lock.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\dav\\main\\$(LONG)\\mod_dav.$(src_so)\t\t\"$(inst_so)\" <.y\n!IFDEF ALL\n\tcopy modules\\debugging\\$(LONG)\\mod_bucketeer.$(src_so)\t\"$(inst_so)\" <.y\n!ENDIF\n\tcopy modules\\debugging\\$(LONG)\\mod_dumpio.$(src_so)\t\"$(inst_so)\" <.y\n!IFDEF ALL\n\tcopy modules\\echo\\$(LONG)\\mod_echo.$(src_so)\t\t\"$(inst_so)\" <.y\n\tcopy modules\\examples\\$(LONG)\\mod_case_filter.$(src_so)    \"$(inst_so)\" <.y\n\tcopy modules\\examples\\$(LONG)\\mod_case_filter_in.$(src_so) \"$(inst_so)\" <.y\n\tcopy modules\\examples\\$(LONG)\\mod_example_hooks.$(src_so)  \"$(inst_so)\" <.y\n\tcopy modules\\examples\\$(LONG)\\mod_example_ipc.$(src_so)\t   \"$(inst_so)\" <.y\n!ENDIF\n!IF EXIST(\"srclib\\brotli\")\n\tcopy modules\\filters\\$(LONG)\\mod_brotli.$(src_so) \t\"$(inst_so)\" <.y\n!ENDIF\n\tcopy modules\\filters\\$(LONG)\\mod_buffer.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\filters\\$(LONG)\\mod_charset_lite.$(src_so)\t\"$(inst_so)\" <.y\n\tcopy modules\\filters\\$(LONG)\\mod_data.$(src_so)\t\"$(inst_so)\" <.y\n!IF EXIST(\"srclib\\zlib\")\n\tcopy modules\\filters\\$(LONG)\\mod_deflate.$(src_so) \t\"$(inst_so)\" <.y\n!IF EXIST(\"srclib\\zlib\\zlib1.$(src_dll)\")\n\tcopy srclib\\zlib\\zlib1.$(src_dll)\t\t \t\"$(inst_dll)\" <.y\n!ENDIF\n!ENDIF\n\tcopy modules\\filters\\$(LONG)\\mod_ext_filter.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\filters\\$(LONG)\\mod_filter.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\filters\\$(LONG)\\mod_include.$(src_so) \t\"$(inst_so)\" <.y\n!IF EXIST(\"srclib\\libxml2\")\n\tcopy modules\\filters\\$(LONG)\\mod_proxy_html.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\filters\\$(LONG)\\mod_xml2enc.$(src_so) \t\"$(inst_so)\" <.y\n!IF EXIST(\"srclib\\libxml2\\win32\\bin.msvc\\libxml2.$(src_dll)\")\n\tcopy srclib\\libxml2\\win32\\bin.msvc\\libxml2.$(src_dll)\t\t \t\"$(inst_dll)\" <.y\n!ENDIF\n!ENDIF\n\tcopy modules\\filters\\$(LONG)\\mod_ratelimit.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\filters\\$(LONG)\\mod_reflector.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\filters\\$(LONG)\\mod_reqtimeout.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\filters\\$(LONG)\\mod_request.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\filters\\$(LONG)\\mod_sed.$(src_so) \t\t\"$(inst_so)\" <.y\n\tcopy modules\\filters\\$(LONG)\\mod_substitute.$(src_so)\t\"$(inst_so)\" <.y\n\tcopy modules\\generators\\$(LONG)\\mod_asis.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\generators\\$(LONG)\\mod_autoindex.$(src_so) \"$(inst_so)\" <.y\n\tcopy modules\\generators\\$(LONG)\\mod_cgi.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\generators\\$(LONG)\\mod_info.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\generators\\$(LONG)\\mod_status.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\http\\$(LONG)\\mod_mime.$(src_so) \t\t\"$(inst_so)\" <.y\n!IF EXIST(\"srclib\\nghttp2\")\n\tcopy modules\\http2\\$(LONG)\\mod_http2.$(src_so) \t\t\"$(inst_so)\" <.y\n\tcopy modules\\http2\\$(LONG)\\mod_proxy_http2.$(src_so) \t\"$(inst_so)\" <.y\n!IF \"$(SHORT)\" == \"D\"\n\tcopy srclib\\nghttp2\\lib\\MSVC_obj\\nghttp2d.$(src_dll)\t\t \t\"$(inst_dll)\" <.y\n!ELSE\n\tcopy srclib\\nghttp2\\lib\\MSVC_obj\\nghttp2.$(src_dll)\t\t \t\"$(inst_dll)\" <.y\n!ENDIF\n!ENDIF\n\tcopy modules\\ldap\\$(LONG)\\mod_ldap.$(src_so)\t\t\"$(inst_so)\" <.y\n\tcopy modules\\loggers\\$(LONG)\\mod_log_config.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\loggers\\$(LONG)\\mod_log_debug.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\loggers\\$(LONG)\\mod_log_forensic.$(src_so) \"$(inst_so)\" <.y\n\tcopy modules\\loggers\\$(LONG)\\mod_logio.$(src_so) \t\"$(inst_so)\" <.y\n!IF EXIST(\"srclib\\jansson\")\n    copy modules\\loggers\\$(LONG)\\mod_log_json.$(src_so) \t\"$(inst_so)\" <.y\n    copy srclib\\jansson\\bin\\jansson.$(src_dll) \t\t\t\"$(inst_dll)\" <.y\n!ENDIF\n!IF EXIST(\"srclib\\lua\")\n\tcopy modules\\lua\\$(LONG)\\mod_lua.$(src_so) \t\t\"$(inst_so)\" <.y\n!IF EXIST(\"srclib\\lua\\src\\lua51.$(src_dll)\")\n\tcopy srclib\\lua\\src\\lua51.$(src_dll)\t\t \t\"$(inst_dll)\" <.y\n!ENDIF\n!ENDIF\n\tcopy modules\\mappers\\$(LONG)\\mod_actions.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\mappers\\$(LONG)\\mod_alias.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\mappers\\$(LONG)\\mod_dir.$(src_so) \t\t\"$(inst_so)\" <.y\n\tcopy modules\\mappers\\$(LONG)\\mod_imagemap.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\mappers\\$(LONG)\\mod_negotiation.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\mappers\\$(LONG)\\mod_rewrite.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\mappers\\$(LONG)\\mod_speling.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\mappers\\$(LONG)\\mod_userdir.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\mappers\\$(LONG)\\mod_vhost_alias.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\metadata\\$(LONG)\\mod_cern_meta.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\metadata\\$(LONG)\\mod_env.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\metadata\\$(LONG)\\mod_expires.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\metadata\\$(LONG)\\mod_headers.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\metadata\\$(LONG)\\mod_ident.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\metadata\\$(LONG)\\mod_mime_magic.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\metadata\\$(LONG)\\mod_remoteip.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\metadata\\$(LONG)\\mod_setenvif.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\metadata\\$(LONG)\\mod_unique_id.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\metadata\\$(LONG)\\mod_usertrack.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\metadata\\$(LONG)\\mod_version.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\proxy\\$(LONG)\\mod_proxy.$(src_so) \t\t\"$(inst_so)\" <.y\n\tcopy modules\\proxy\\$(LONG)\\mod_proxy_ajp.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\proxy\\$(LONG)\\mod_proxy_balancer.$(src_so) \"$(inst_so)\" <.y\n\tcopy modules\\proxy\\$(LONG)\\mod_proxy_connect.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\proxy\\$(LONG)\\mod_proxy_express.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\proxy\\$(LONG)\\mod_proxy_fcgi.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\proxy\\$(LONG)\\mod_proxy_ftp.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\proxy\\$(LONG)\\mod_proxy_hcheck.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\proxy\\$(LONG)\\mod_proxy_http.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\proxy\\$(LONG)\\mod_proxy_scgi.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\proxy\\$(LONG)\\mod_proxy_uwsgi.$(src_so) \t\"$(inst_so)\" <.y\n\tcopy modules\\proxy\\$(LONG)\\mod_proxy_wstunnel.$(src_so) \t\"$(inst_so)\" <.y\n!IF EXIST(\"srclib\\serf\")\n\tcopy modules\\proxy\\$(LONG)\\mod_serf.$(src_so)\t\t\"$(inst_so)\" <.y\n!ENDIF\n\tcopy modules\\proxy\\balancers\\$(LONG)\\mod_lbmethod_bybusyness.$(src_so) \"$(inst_so)\" <.y\n\tcopy modules\\proxy\\balancers\\$(LONG)\\mod_lbmethod_byrequests.$(src_so) \"$(inst_so)\" <.y\n\tcopy modules\\proxy\\balancers\\$(LONG)\\mod_lbmethod_bytraffic.$(src_so)  \"$(inst_so)\" <.y\n\tcopy modules\\proxy\\balancers\\$(LONG)\\mod_lbmethod_heartbeat.$(src_so)  \"$(inst_so)\" <.y\n!IFDEF ALL\n\tcopy modules\\proxy\\examples\\$(LONG)\\mod_lbmethod_rr.$(src_so) \"$(inst_so)\" <.y\n!ENDIF\n\tcopy modules\\session\\$(LONG)\\mod_session.$(src_so)        \"$(inst_so)\" <.y\n\tcopy modules\\session\\$(LONG)\\mod_session_cookie.$(src_so) \"$(inst_so)\" <.y\n\tcopy modules\\session\\$(LONG)\\mod_session_dbd.$(src_so)    \"$(inst_so)\" <.y\n\tcopy modules\\slotmem\\$(LONG)\\mod_slotmem_plain.$(src_so)    \"$(inst_so)\" <.y\n\tcopy modules\\slotmem\\$(LONG)\\mod_slotmem_shm.$(src_so)    \"$(inst_so)\" <.y\n!IF EXIST(\"srclib\\openssl\")\n!IF EXIST(\"srclib\\jansson\") &&  EXIST(\"srclib\\curl\")\n\tcopy modules\\md\\$(LONG)\\mod_md.$(src_so) \t\t\"$(inst_so)\" <.y\n\t-copy srclib\\jansson\\bin\\jansson.$(src_dll)\t\t\"$(inst_dll)\" <.y\n\t-copy srclib\\curl\\bin\\libcurl.$(src_dll)\t\t\"$(inst_dll)\" <.y\n!ENDIF\n#\tcopy modules\\session\\$(LONG)\\mod_session_crypto.$(src_so) \"$(inst_so)\" <.y\n\tcopy modules\\ssl\\$(LONG)\\mod_ssl.$(src_so) \t\t\"$(inst_so)\" <.y\n\t-copy srclib\\openssl\\$(SSLBIN)\\libeay32.$(src_dll) \t\"$(inst_dll)\" <.y\n\t-copy srclib\\openssl\\$(SSLBIN)\\ssleay32.$(src_dll) \t\"$(inst_dll)\" <.y\n\t-copy srclib\\openssl\\$(SSLBIN)\\openssl.$(src_exe) \t\"$(inst_exe)\" <.y\n\tcopy support\\$(LONG)\\abs.$(src_exe) \t\t\t\"$(inst_exe)\" <.y\n!ENDIF\n\tcopy support\\$(LONG)\\ab.$(src_exe) \t\t\t\"$(inst_exe)\" <.y\n#\tcopy support\\$(LONG)\\fcgistarter.$(src_exe)\t\t\"$(inst_exe)\" <.y\n\tcopy support\\$(LONG)\\htcacheclean.$(src_exe)\t\t\"$(inst_exe)\" <.y\n\tcopy support\\$(LONG)\\htdbm.$(src_exe) \t\t\t\"$(inst_exe)\" <.y\n\tcopy support\\$(LONG)\\htdigest.$(src_exe) \t\t\"$(inst_exe)\" <.y\n\tcopy support\\$(LONG)\\htpasswd.$(src_exe) \t\t\"$(inst_exe)\" <.y\n\tcopy support\\$(LONG)\\httxt2dbm.$(src_exe)\t\t\"$(inst_exe)\" <.y\n\tcopy support\\$(LONG)\\logresolve.$(src_exe) \t\t\"$(inst_exe)\" <.y\n\tcopy support\\$(LONG)\\rotatelogs.$(src_exe) \t\t\"$(inst_exe)\" <.y\n\tcopy support\\win32\\$(LONG)\\ApacheMonitor.$(src_exe) \t\"$(inst_exe)\" <.y\n\tcopy support\\win32\\$(LONG)\\wintty.$(src_exe) \t\t\"$(inst_exe)\" <.y\n\n\n# First we create the tree and populate the README so that \n# whatever happens, all licensing has already propagated.  \n# Then repeatedly invoke the _copybin build to copy the\n# real binaries, then pdb symbols, anf finally dbg syms.\n# Then hit docs of various sorts, then includes and libs,\n# and finally do the .conf magic.\n#\n_install:\n\techo Y >.y\n\techo A >.A\n\t-mkdir \"$(INSTDIR)\"\n\t-mkdir \"$(INSTDIR)\\bin\"\n!IF EXIST(\"srclib\\apr-util\")\n\t-mkdir \"$(INSTDIR)\\bin\\iconv\"\n!ENDIF\n\t-mkdir \"$(INSTDIR)\\cgi-bin\"\n\t-mkdir \"$(INSTDIR)\\conf\"\n\t-mkdir \"$(INSTDIR)\\conf\\extra\"\n\t-mkdir \"$(INSTDIR)\\conf\\original\"\n\t-mkdir \"$(INSTDIR)\\conf\\original\\extra\"\n\t-mkdir \"$(INSTDIR)\\error\"\n\t-mkdir \"$(INSTDIR)\\htdocs\"\n\t-mkdir \"$(INSTDIR)\\manual\"\n\t-mkdir \"$(INSTDIR)\\icons\"\n\t-mkdir \"$(INSTDIR)\\include\"\n\t-mkdir \"$(INSTDIR)\\lib\"\n\t-mkdir \"$(INSTDIR)\\logs\"\n\t-mkdir \"$(INSTDIR)\\modules\"\n\t$(MAKE) $(MAKEOPT) -f Makefile.win SHORT=$(SHORT) LONG=$(LONG) \\\n\t\t_copybin src_exe=exe src_dll=dll src_so=so             \\\n\t\tinst_exe=\"$(INSTDIR)\\bin\"                              \\\n\t\tinst_dll=\"$(INSTDIR)\\bin\"                              \\\n\t\tinst_so=\"$(INSTDIR)\\modules\"\n\t$(MAKE) $(MAKEOPT) -f Makefile.win SHORT=$(SHORT) LONG=$(LONG) \\\n\t\t_copybin src_exe=pdb src_dll=pdb src_so=pdb            \\\n\t\tinst_exe=\"$(INSTDIR)\\bin\"                              \\\n\t\tinst_dll=\"$(INSTDIR)\\bin\"                              \\\n\t\tinst_so=\"$(INSTDIR)\\modules\"\n!IF EXIST(\"srclib\\apr-util\")\n \tcd srclib\\apr-iconv\n\t$(MAKE) $(MAKEOPT) -f build\\modules.mk.win install \\\n\t\tBUILD_MODE=$(LONG) BIND_MODE=shared API_SOURCE=. \\\n\t\tINSTALL_DIR=\"$(INSTDIR)\\bin\\iconv\"\n\tcd ..\\..\n!ENDIF\n\tcopy docs\\cgi-examples\\printenv \"$(INSTDIR)\\cgi-bin\\printenv.pl\" <.y\n\tcopy docs\\cgi-examples\\printenv.vbs \"$(INSTDIR)\\cgi-bin\\printenv.vbs\" <.y\n\tcopy docs\\cgi-examples\\printenv.wsf \"$(INSTDIR)\\cgi-bin\\printenv.wsf\" <.y\n\txcopy docs\\error \t\"$(INSTDIR)\\error\" /s /d < .a\n\txcopy docs\\docroot \t\"$(INSTDIR)\\htdocs\" /d < .a\n\txcopy docs\\icons \t\"$(INSTDIR)\\icons\" /s /d < .a\n\txcopy docs\\manual \t\"$(INSTDIR)\\manual\" /s /d < .a\n\tfor %f in ( \\\n\t\tsrclib\\expat\\lib\\expat.h \\\n\t\tsrclib\\apr-util\\xml\\expat\\lib\\expat.h \\\n\t\tsrclib\\apr\\include\\*.h \\\n\t\tsrclib\\apr-util\\include\\*.h \\\n!IF EXIST(\"srclib\\serf\")\n\t\tsrclib\\serf\\*.h \\\n!ENDIF\n\t\tinclude\\*.h \\\n\t\tos\\win32\\os.h \\\n\t\tmodules\\cache\\mod_cache.h \\\n\t\tmodules\\cache\\cache_common.h \\\n\t\tmodules\\core\\mod_so.h \\\n\t\tmodules\\core\\mod_watchdog.h \\\n\t\tmodules\\database\\mod_dbd.h \\\n\t\tmodules\\dav\\main\\mod_dav.h \\\n\t\tmodules\\filters\\mod_include.h \\\n\t\tmodules\\generators\\mod_cgi.h \\\n\t\tmodules\\generators\\mod_status.h \\\n\t\tmodules\\http2\\mod_http2.h \\\n\t\tmodules\\loggers\\mod_log_config.h \\\n\t\tmodules\\mappers\\mod_rewrite.h \\\n\t\tmodules\\proxy\\mod_proxy.h \\\n\t\tmodules\\proxy\\mod_serf.h \\\n\t\tmodules\\ssl\\mod_ssl.h \\\n\t\tmodules\\ssl\\mod_ssl_openssl.h \\\n          ) do \\\n\t    @copy %f \"$(INSTDIR)\\include\" < .y > nul\n\tcopy srclib\\apr\\Lib$(SHORT)\\apr-1.lib\t\t\"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\apr\\Lib$(SHORT)\\apr-1.pdb\t\t\"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\apr\\$(LONG)\\libapr-1.lib \t\t\"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\apr\\$(LONG)\\libapr-1.exp \t\t\"$(INSTDIR)\\lib\" <.y\n!IF EXIST(\"srclib\\apr-util\")\n\tcopy srclib\\apr-util\\Lib$(SHORT)\\aprutil-1.lib\t\"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\apr-util\\Lib$(SHORT)\\aprutil-1.pdb\t\"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\apr-util\\xml\\expat\\lib\\Lib$(SHORT)\\xml.lib \"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\apr-util\\xml\\expat\\lib\\Lib$(SHORT)\\xml.pdb \"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\apr-util\\$(LONG)\\libaprutil-1.lib \t\"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\apr-util\\$(LONG)\\libaprutil-1.exp \t\"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\apr-iconv\\$(LONG)\\libapriconv-1.lib\t\"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\apr-iconv\\$(LONG)\\libapriconv-1.exp \"$(INSTDIR)\\lib\" <.y\n!ELSE\n\tcopy srclib\\expat\\win32\\$(LONG)\\libexpatMT.lib  \"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\expat\\win32\\$(LONG)\\libexpatMT.exp  \"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\expat\\win32\\$(LONG)\\libexpat.lib    \"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\expat\\win32\\$(LONG)\\libexpat.exp    \"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\expat\\win32\\$(LONG)\\libexpat.dll    \"$(INSTDIR)\\bin\" <.y\n!ENDIF\n!IF EXIST(\"srclib\\serf\")\n\tcopy srclib\\serf\\$(LONG)\\libserf.lib \t\t\"$(INSTDIR)\\lib\" <.y\n\tcopy srclib\\serf\\$(LONG)\\libserf.exp \t\t\"$(INSTDIR)\\lib\" <.y\n!ENDIF\n\tcopy $(LONG)\\libhttpd.exp \t\t\t\"$(INSTDIR)\\lib\" <.y\n\tcopy $(LONG)\\libhttpd.lib \t\t\t\"$(INSTDIR)\\lib\" <.y\n\tcopy modules\\dav\\main\\$(LONG)\\mod_dav.exp \t\"$(INSTDIR)\\lib\" <.y\n\tcopy modules\\dav\\main\\$(LONG)\\mod_dav.lib \t\"$(INSTDIR)\\lib\" <.y\n\tfor %f in ( charset.conv magic mime.types ) do ( \\\n\t  copy docs\\conf\\%f \"$(INSTDIR)\\conf\\original\\%f\" <.y )\n\tawk -f build\\installwinconf.awk $(DOMAINNAME) $(SERVERNAME) \\\n\t    $(SERVERADMIN) $(PORT) $(SSLPORT) \"$(INSTDIR) \" docs/conf/ \n\tcopy \"support\\dbmmanage.in\" \"$(INSTDIR)\\bin\\dbmmanage.pl\"\n\t-awk -f <<script.awk \"support/dbmmanage.in\" >\"$(INSTDIR)\\bin\\dbmmanage.pl\"\n    { if ( $$0 ~ /^BEGIN \\{ @AnyDBM_File::/ ) {\n\t  sub( /ISA = qw\\(.*\\)/, \"ISA = qw(SDBM_File)\" ); \n      }\n      if ( $$0 !~ /^#!@perlbin@/ )\n\t  print $$0;\n    }\n<<\n\tdel .y\n\tdel .a\n\n_fixshebang:\n!IF EXIST(\"$(INSTDIR)\\cgi-bin\")\n\t-awk -f <<script.awk \"docs/cgi-examples/printenv\" > \"$(INSTDIR)\\cgi-bin\\printenv.pl\"\n    BEGIN { \n\tif ( \"perl -e \\\"print $$^X;\\\"\" | getline perlroot ) {\n\t    gsub( /\\\\/, \"/\", perlroot );\n\t    print \"#!\" perlroot;\n\t}\n    }\n    {\n\tif ( $$0 !~ /^#!/ ) {\n\t    print $$0;\n\t}\n    }\n<<\n\t-cscript -nologo <<script.vbs \"docs/cgi-examples/printenv.vbs\" \"$(INSTDIR)\\cgi-bin\\printenv.vbs\"\n    Dim fso, f, c\n    Set fso = CreateObject(\"Scripting.FileSystemObject\")\n    Set f = fso.OpenTextFile(WScript.Arguments(0), 1)\n    f.SkipLine\n    c = f.ReadAll\n    f.Close\n    Set f = fso.OpenTextFile(WScript.Arguments(1), 2, TRUE)\n    f.WriteLine \"'!\" & Replace(WScript.FullName, \"\\\", \"/\") & \" -nologo\"\n    f.Write c\n    f.Close\n<<\n\t-cscript -nologo <<script.vbs \"docs/cgi-examples/printenv.wsf\" \"$(INSTDIR)\\cgi-bin\\printenv.wsf\"\n    Dim fso, f, c\n    Set fso = CreateObject(\"Scripting.FileSystemObject\")\n    Set f = fso.OpenTextFile(WScript.Arguments(0), 1)\n    f.SkipLine\n    c = f.ReadAll\n    f.Close\n    Set f = fso.OpenTextFile(WScript.Arguments(1), 2, TRUE)\n    f.WriteLine \"'!\" & Replace(WScript.FullName, \"\\\", \"/\") & \" -nologo\"\n    f.Write c\n    f.Close\n<<\n!ENDIF\n\n\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.7041015625,
          "content": "Apache HTTP Server\nCopyright 2021 The Apache Software Foundation.\n\nThis product includes software developed at\nThe Apache Software Foundation (https://www.apache.org/).\n\nPortions of this software were developed at the National Center\nfor Supercomputing Applications (NCSA) at the University of\nIllinois at Urbana-Champaign.\n\nThis software contains code derived from the RSA Data Security\nInc. MD5 Message-Digest Algorithm, including various\nmodifications by Spyglass Inc., Carnegie Mellon University, and\nBell Communications Research, Inc (Bellcore).\n\nThis software contains code derived from the PCRE library pcreposix.c\nsource code, written by Philip Hazel, Copyright 1997-2004\nby the University of Cambridge, England.\n"
        },
        {
          "name": "NWGNUmakefile",
          "type": "blob",
          "size": 14.0625,
          "content": "#\n# Define our required macro's if not already done.\n#\n\nifndef AP_WORK\nexport AP_WORK = $(CURDIR)\nendif\n\nifndef APR_WORK\nifeq \"$(wildcard $(AP_WORK)/srclib/apr)\" \"$(AP_WORK)/srclib/apr\"\nexport APR_WORK = $(AP_WORK)/srclib/apr\nendif\nendif\nifneq \"$(wildcard $(APR_WORK)/include/apr_version.h)\" \"$(APR_WORK)/include/apr_version.h\"\n$(error APR_WORK does not point to a valid APR source tree) \nendif\n\nifndef APU_WORK\nifeq \"$(wildcard $(AP_WORK)/srclib/apr-util)\" \"$(AP_WORK)/srclib/apr-util\"\nexport APU_WORK = $(AP_WORK)/srclib/apr-util\nendif\nendif\nifndef APU_WORK\nifeq \"$(wildcard $(APR_WORK)/include/apu_version.h)\" \"$(APR_WORK)/include/apu_version.h\"\nexport APU_WORK = $(APR_WORK)\nendif\nendif\nifneq \"$(wildcard $(APU_WORK)/include/apu_version.h)\" \"$(APU_WORK)/include/apu_version.h\"\n$(error APU_WORK does not point to a valid APU source tree) \nendif\n\n#\n# Declare the sub-directories to be built here\n#\n\nSUBDIRS = \\\n\t$(APR_WORK) \\\n\tbuild \\\n\tsupport \\\n\tmodules \\\n\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\ninclude $(AP_WORK)/build/NWGNUhead.inc\n\n#\n# build this level's files\n\n#\n# Make sure all needed macro's are defined\n#\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n\t\t\t$(APR)/include \\\n\t\t\t$(APRUTIL)/include \\\n\t\t\t$(SRC)/include \\\n\t\t\t$(STDMOD)/core \\\n\t\t\t$(STDMOD)/filters \\\n\t\t\t$(STDMOD)/generators \\\n\t\t\t$(STDMOD)/proxy \\\n\t\t\t$(NWOS) \\\n\t\t\t$(EOLIST)\n\n#\n# These flags will come after CFLAGS\n#\nXCFLAGS\t\t+= \\\n\t\t\t-DHAVE_CONFIG_H \\\n\t\t\t$(EOLIST)\n\n#\n# These defines will come after DEFINES\n#\nXDEFINES\t+= \\\n\t\t\t$(EOLIST)\n\n#\n# These flags will be added to the link.opt file\n#\nXLFLAGS\t\t+= \\\n\t\t\t$(EOLIST)\n\n#\n# These values will be appended to the correct variables based on the value of\n# RELEASE\n#\nifeq \"$(RELEASE)\" \"debug\"\nXINCDIRS\t+= \\\n\t\t\t$(EOLIST)\n\nXCFLAGS\t\t+= \\\n\t\t\t$(EOLIST)\n\nXDEFINES\t+= \\\n\t\t\t$(EOLIST)\n\nXLFLAGS\t\t+= \\\n\t\t\t$(EOLIST)\nendif\n\nifeq \"$(RELEASE)\" \"noopt\"\nXINCDIRS\t+= \\\n\t\t\t$(EOLIST)\n\nXCFLAGS\t\t+= \\\n\t\t\t$(EOLIST)\n\nXDEFINES\t+= \\\n\t\t\t$(EOLIST)\n\nXLFLAGS\t\t+= \\\n\t\t\t$(EOLIST)\nendif\n\nifeq \"$(RELEASE)\" \"release\"\nXINCDIRS\t+= \\\n\t\t\t$(EOLIST)\n\nXCFLAGS\t\t+= \\\n\t\t\t$(EOLIST)\n\nXDEFINES\t+= \\\n\t\t\t$(EOLIST)\n\nXLFLAGS\t\t+= \\\n\t\t\t$(EOLIST)\nendif\n\n#\n# These are used by the link target if an NLM is being generated\n# This is used by the link 'name' directive to name the nlm.  If left blank\n# TARGET_nlm (see below) will be used.\n#\nNLM_NAME\t= Apache2\n\n#\n# This is used by the link '-desc ' directive.\n# If left blank, NLM_NAME will be used.\n#\nNLM_DESCRIPTION\t= Apache Web Server $(VERSION_STR) $(VERSION_SKT)\n\n#\n# This is used by the '-threadname' directive.  If left blank,\n# NLM_NAME Thread will be used.\n#\nNLM_THREAD_NAME\t= $(NLM_NAME)\n\n#\n# This is used by the '-screenname' directive.  If left blank,\n# 'Apache for NetWare' Thread will be used.\n#\nNLM_SCREEN_NAME = Apache $(VERSION_STR) for NetWare\n\n\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n#\n# If this is specified, it will override the default of 64K\n#\nNLM_STACK_SIZE\t= 65536\n\n\n#\n# If this is specified it will be used by the link '-entry' directive\n#\nNLM_ENTRY_SYM\t=\n\n#\n# If this is specified it will be used by the link '-exit' directive\n#\nNLM_EXIT_SYM\t=\n\n#\n# If this is specified it will be used by the link '-check' directive\n#\nNLM_CHECK_SYM\t= _LibCCheckUnload\n\n#\n# If these are specified it will be used by the link '-flags' directive\n#\nNLM_FLAGS\t= PSEUDOPREEMPTION\n\n#\n# If this is specified it will be linked in with the XDCData option in the def\n# file instead of the default of $(NWOS)/apache.xdc.  XDCData can be disabled\n# by setting APACHE_UNIPROC in the environment\n#\nXDCDATA\t\t=\n\n#\n# If there is an NLM target, put it here\n#\nTARGET_nlm = \\\n\t$(OBJDIR)/$(NLM_NAME).nlm \\\n\t$(EOLIST)\n\n#\n# If there is an LIB target, put it here\n#\nTARGET_lib = \\\n\t$(PCRELIB) \\\n\t$(EOLIST)\n\n#\n# These are the OBJ files needed to create the NLM target above.\n# Paths must all use the '/' character\n#\nFILES_nlm_objs = \\\n\t$(OBJDIR)/apreq_cookie.o \\\n\t$(OBJDIR)/apreq_error.o \\\n\t$(OBJDIR)/apreq_module.o \\\n\t$(OBJDIR)/apreq_module_cgi.o \\\n\t$(OBJDIR)/apreq_module_custom.o \\\n\t$(OBJDIR)/apreq_param.o \\\n\t$(OBJDIR)/apreq_parser.o \\\n\t$(OBJDIR)/apreq_parser_header.o \\\n\t$(OBJDIR)/apreq_parser_multipart.o \\\n\t$(OBJDIR)/apreq_parser_urlencoded.o \\\n\t$(OBJDIR)/apreq_util.o \\\n\t$(OBJDIR)/buildmark.o \\\n\t$(OBJDIR)/config.o \\\n\t$(OBJDIR)/connection.o \\\n\t$(OBJDIR)/core.o \\\n\t$(OBJDIR)/core_filters.o \\\n\t$(OBJDIR)/eoc_bucket.o \\\n\t$(OBJDIR)/eor_bucket.o \\\n\t$(OBJDIR)/error_bucket.o \\\n\t$(OBJDIR)/http_core.o \\\n\t$(OBJDIR)/http_protocol.o \\\n\t$(OBJDIR)/http_request.o \\\n\t$(OBJDIR)/byterange_filter.o \\\n\t$(OBJDIR)/chunk_filter.o \\\n\t$(OBJDIR)/http_filters.o \\\n\t$(OBJDIR)/listen.o \\\n\t$(OBJDIR)/log.o \\\n\t$(OBJDIR)/main.o \\\n\t$(OBJDIR)/mod_authn_core.o \\\n\t$(OBJDIR)/mod_authz_core.o \\\n\t$(OBJDIR)/mod_authz_host.o \\\n\t$(OBJDIR)/mod_alias.o \\\n\t$(OBJDIR)/mod_dir.o \\\n\t$(OBJDIR)/mod_env.o \\\n\t$(OBJDIR)/mod_include.o \\\n\t$(OBJDIR)/mod_log_config.o \\\n\t$(OBJDIR)/mod_mime.o \\\n\t$(OBJDIR)/mod_negotiation.o \\\n\t$(OBJDIR)/mod_netware.o \\\n\t$(OBJDIR)/mod_setenvif.o \\\n\t$(OBJDIR)/mod_so.o \\\n\t$(OBJDIR)/mod_watchdog.o \\\n\t$(OBJDIR)/modules.o \\\n\t$(OBJDIR)/mpm_common.o \\\n\t$(OBJDIR)/mpm_netware.o \\\n\t$(OBJDIR)/protocol.o \\\n\t$(OBJDIR)/provider.o \\\n\t$(OBJDIR)/request.o \\\n\t$(OBJDIR)/scoreboard.o \\\n\t$(OBJDIR)/util.o \\\n\t$(OBJDIR)/util_cfgtree.o \\\n\t$(OBJDIR)/util_charset.o \\\n\t$(OBJDIR)/util_cookies.o \\\n\t$(OBJDIR)/util_debug.o \\\n\t$(OBJDIR)/util_etag.o \\\n\t$(OBJDIR)/util_expr_eval.o \\\n\t$(OBJDIR)/util_expr_parse.o \\\n\t$(OBJDIR)/util_expr_scan.o \\\n\t$(OBJDIR)/util_fcgi.o \\\n\t$(OBJDIR)/util_filter.o \\\n\t$(OBJDIR)/util_md5.o \\\n\t$(OBJDIR)/util_mutex.o \\\n\t$(OBJDIR)/util_nw.o \\\n\t$(OBJDIR)/util_pcre.o \\\n\t$(OBJDIR)/util_regex.o \\\n\t$(OBJDIR)/util_script.o \\\n\t$(OBJDIR)/util_time.o \\\n\t$(OBJDIR)/util_xml.o \\\n\t$(OBJDIR)/vhost.o \\\n\t$(EOLIST)\n\n# Build in mod_nw_ssl if Winsock is being used\nifndef USE_STDSOCKETS\nFILES_nlm_objs += $(OBJDIR)/mod_nw_ssl.o \\\n\t$(EOLIST)\nendif\n\n#\n# These are the LIB files needed to create the NLM target above.\n# These will be added as a library command in the link.opt file.\n#\nFILES_nlm_libs = \\\n\t$(PCRELIB) \\\n\t$(PRELUDE) \\\n\t$(EOLIST)\n\n#\n# These are the modules that the above NLM target depends on to load.\n# These will be added as a module command in the link.opt file.\n#\nFILES_nlm_modules = \\\n\taprlib \\\n\tLibc \\\n\t$(EOLIST)\n\n#\n# If the nlm has a msg file, put it's path here\n#\nFILE_nlm_msg =\n\n#\n# If the nlm has a hlp file put it's path here\n#\nFILE_nlm_hlp =\n\n#\n# If this is specified, it will override $(NWOS)\\copyright.txt.\n#\nFILE_nlm_copyright =\n\n#\n# Any additional imports go here\n#\nFILES_nlm_Ximports = \\\n\t@aprlib.imp \\\n\t@libc.imp \\\n\t@netware.imp \\\n\tGetCurrentAddressSpace \\\n\t$(EOLIST)\n\n# Don't link with Winsock if standard sockets are being used\nifndef USE_STDSOCKETS\nFILES_nlm_Ximports += @ws2nlm.imp \\\n\t$(EOLIST)\nendif\n\n#\n# Any symbols exported to here\n#\nFILES_nlm_exports = \\\n\t@httpd.imp \\\n\t$(EOLIST)\n\n#\n# These are the OBJ files needed to create the LIB target above.\n# Paths must all use the '/' character\n#\nifeq \"$(wildcard $(PCRE)/pcre.c)\" \"$(PCRE)/pcre.c\"\n\nFILES_lib_objs = \\\n\t$(OBJDIR)/pcre.o \\\n\t$(EOLIST)\n\nelse\n\nFILES_lib_objs = \\\n\t$(OBJDIR)/chartables.o \\\n\t$(OBJDIR)/pcre_compile.o \\\n\t$(OBJDIR)/pcre_exec.o \\\n\t$(OBJDIR)/pcre_fullinfo.o \\\n\t$(OBJDIR)/pcre_globals.o \\\n\t$(OBJDIR)/pcre_newline.o \\\n\t$(OBJDIR)/pcre_tables.o \\\n\t$(OBJDIR)/pcre_version.o \\\n\t$(EOLIST)\nifeq \"$(wildcard $(PCRE)/pcre_try_flipped.c)\" \"$(PCRE)/pcre_try_flipped.c\"\nFILES_lib_objs += \\\n\t$(OBJDIR)/pcre_try_flipped.o \\\n\t$(EOLIST)\nendif \n\nendif\n\n#\n# implement targets and dependancies (leave this section alone)\n#\n\nlibs :: $(OBJDIR) $(TARGET_lib)\n\nnlms :: libs $(TARGET_nlm)\n\n#\n# Updated this target to create necessary directories and copy files to the\n# correct place.  (See $(AP_WORK)/build/NWGNUhead.inc for examples)\n#\nMKCNF\t= $(AWK) -v BDIR=$(BASEDIR) -v PORT=$(PORT) -v SSLPORT=$(SSLPORT) -v MODSSL=$(WITH_SSL) -v MODHTTP2=$(WITH_HTTP2) -v BSDSKT=$(USE_STDSOCKETS) -f build/mkconfNW.awk $1 > $2\n\ninstall :: nlms instscripts FORCE\n\t$(call COPY,$(OBJDIR)/$(NLM_NAME).nlm,                         $(INSTALLBASE)/)\n\t$(call COPY,ABOUT_APACHE,                                      $(INSTALLBASE)/)\n\t$(call COPY,CHANGES,                                           $(INSTALLBASE)/)\n\t$(call COPY,LICENSE,                                           $(INSTALLBASE)/)\n\t$(call COPY,README,                                            $(INSTALLBASE)/)\n\t$(call COPY,VERSIONING,                                        $(INSTALLBASE)/)\n\t$(call COPY,STATUS,                                            $(INSTALLBASE)/)\n\t$(call COPY,support/dbmmanage.in,                              $(INSTALLBASE)/bin/dbmmanage.pl)\n\t$(call COPY,support/logresolve.pl.in,                          $(INSTALLBASE)/bin/logresolve.pl)\n\t$(call COPY,support/split-logfile.in,                          $(INSTALLBASE)/bin/split-logfile.pl)\n\t$(call COPY,support/check_forensic,                            $(INSTALLBASE)/bin/check_forensic.sh)\n\t$(call COPY,docs/conf/magic,                                   $(INSTALLBASE)/conf/)\n\t$(call COPY,docs/conf/mime.types,                              $(INSTALLBASE)/conf/)\n\t$(call COPY,docs/conf/charset.conv,                            $(INSTALLBASE)/conf/)\n\t$(call COPY,docs/cgi-examples/printenv,                        $(INSTALLBASE)/cgi-bin/printenv.pl)\n\t$(call MKCNF,docs/conf/httpd.conf.in,                          $(INSTALLBASE)/conf/httpd.conf)\n\t$(call MKCNF,docs/conf/extra/httpd-autoindex.conf.in,          $(INSTALLBASE)/conf/extra/httpd-autoindex.conf)\n\t$(call MKCNF,docs/conf/extra/httpd-dav.conf.in,                $(INSTALLBASE)/conf/extra/httpd-dav.conf)\n\t$(call MKCNF,docs/conf/extra/httpd-default.conf.in,            $(INSTALLBASE)/conf/extra/httpd-default.conf)\n\t$(call MKCNF,docs/conf/extra/httpd-info.conf.in,               $(INSTALLBASE)/conf/extra/httpd-info.conf)\n\t$(call MKCNF,docs/conf/extra/httpd-languages.conf.in,          $(INSTALLBASE)/conf/extra/httpd-languages.conf)\n\t$(call MKCNF,docs/conf/extra/httpd-macro.conf.in,              $(INSTALLBASE)/conf/extra/httpd-macro.conf)\n\t$(call MKCNF,docs/conf/extra/httpd-manual.conf.in,             $(INSTALLBASE)/conf/extra/httpd-manual.conf)\n\t$(call MKCNF,docs/conf/extra/httpd-mpm.conf.in,                $(INSTALLBASE)/conf/extra/httpd-mpm.conf)\n\t$(call MKCNF,docs/conf/extra/httpd-multilang-errordoc.conf.in, $(INSTALLBASE)/conf/extra/httpd-multilang-errordoc.conf)\n\t$(call MKCNF,docs/conf/extra/httpd-userdir.conf.in,            $(INSTALLBASE)/conf/extra/httpd-userdir.conf)\n\t$(call MKCNF,docs/conf/extra/httpd-vhosts.conf.in,             $(INSTALLBASE)/conf/extra/httpd-vhosts.conf)\n\t$(call MKCNF,docs/conf/extra/httpd-policy.conf.in,             $(INSTALLBASE)/conf/extra/httpd-policy.conf)\n\t$(call MKCNF,docs/conf/extra/httpd-ssl.conf.in,                $(INSTALLBASE)/conf/extra/httpd-ssl.conf)\n\t$(call MKCNF,docs/conf/extra/proxy-html.conf.in,               $(INSTALLBASE)/conf/extra/proxy-html.conf)\n\t$(call COPYR,docs/docroot,                                     $(INSTALLBASE)/htdocs)\n\t$(call COPYR,docs/error,                                       $(INSTALLBASE)/error)\n\t$(call COPYR,docs/icons,                                       $(INSTALLBASE)/icons)\n\t$(call COPYR,docs/man,                                         $(INSTALLBASE)/man)\n\t$(call COPYR,docs/manual,                                      $(INSTALLBASE)/manual)\n\ninstalldev :: FORCE\n\t$(call COPY,$(SRC)/include/*.h,                                $(INSTALLBASE)/include/)\n\t$(call COPY,$(NWOS)/*.h,                                       $(INSTALLBASE)/include/)\n\t$(call COPY,$(APR)/include/*.h,                                $(INSTALLBASE)/include/)\n\t$(call COPY,$(APRUTIL)/include/*.h,                            $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/core/mod_so.h,                           $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/core/mod_watchdog.h,                     $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/cache/mod_cache.h,                       $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/cache/cache_common.h,                    $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/database/mod_dbd.h,                      $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/dav/main/mod_dav.h,                      $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/filters/mod_include.h,                   $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/generators/mod_cgi.h,                    $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/generators/mod_status.h,                 $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/loggers/mod_log_config.h,                $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/mappers/mod_rewrite.h,                   $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/proxy/mod_proxy.h,                       $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/proxy/mod_serf.h,                        $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/session/mod_session.h,                   $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/ssl/mod_ssl.h,                           $(INSTALLBASE)/include/)\n\t$(call COPY,$(STDMOD)/ssl/mod_ssl_openssl.h,                   $(INSTALLBASE)/include/)\n\t$(call COPY,$(APR)/*.imp,                                      $(INSTALLBASE)/lib/)\n\t$(call COPY,$(NWOS)/*.imp,                                     $(INSTALLBASE)/lib/)\n\t$(call COPY,$(NWOS)/*.xdc,                                     $(INSTALLBASE)/lib/)\n\t$(call COPY,$(APBUILD)/NWGNU*.inc,                             $(INSTALLBASE)/build/)\n\nprebuild :: FORCE\n\t$(MAKE) -C $(SERVER) -f NWGNUmakefile\n\t$(MAKE) -C $(PCRE) -f NWGNUmakefile\n\t$(call MKDIR,$(PREBUILD_INST))\n\t$(call COPY,$(SERVER)/$(OBJDIR)/*.nlm,                         $(PREBUILD_INST)/)\n\t$(call COPY,$(PCRE)/$(OBJDIR)/*.nlm,                           $(PREBUILD_INST)/)\n\n#\n# Any specialized rules here\n#\n\nvpath %.c server:modules/arch/netware:modules/http:modules/aaa:modules/mappers\nvpath %.c modules/generators:modules/metadata:modules/filters:modules/loggers\nvpath %.c modules/core:os/netware:server/mpm/netware:$(PCRE)\n\n$(OBJDIR)/chartables.o: os/netware/chartables.c\n\n#\n# Include the 'tail' makefile that has targets that depend on variables defined\n# in this makefile\n#\n\ninclude $(APBUILD)/NWGNUtail.inc\n\ninclude $(APBUILD)/NWGNUscripts.inc\n\n\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 4.53125,
          "content": "\n# Apache HTTP Server\n\n##  What is it?\n\nThe Apache HTTP Server is a powerful and flexible HTTP/1.1 compliant\nweb server.  Originally designed as a replacement for the NCSA HTTP\nServer, it has grown to be the most popular web server on the\nInternet.  As a project of the Apache Software Foundation, the\ndevelopers aim to collaboratively develop and maintain a robust,\ncommercial-grade, standards-based server with freely available\nsource code.\n\n## The Latest Version\n\nDetails of the latest version can be found on the [Apache HTTP\nserver project page](https://httpd.apache.org/).\n\n## Documentation\n\nThe documentation available as of the date of this release is\nincluded in HTML format in the docs/manual/ directory.  The most\nup-to-date documentation can be found at\n[https://httpd.apache.org/docs/trunk/](https://httpd.apache.org/docs/trunk/).\n\n## Installation\n\nPlease see the file called `INSTALL`.  Platform specific notes can be\nfound in `README.platforms`.\n\n## Licensing\n\nPlease see the file called `LICENSE`.\n\n## Cryptographic Software Notice\n\nThis distribution may include software that has been designed for use\nwith cryptographic software.  The country in which you currently reside\nmay have restrictions on the import, possession, use, and/or re-export\nto another country, of encryption software.  BEFORE using any encryption\nsoftware, please check your country's laws, regulations and policies\nconcerning the import, possession, or use, and re-export of encryption\nsoftware, to see if this is permitted.  See \n[https://www.wassenaar.org/](https://www.wassenaar.org/)\nfor more information.\n\nThe U.S. Government Department of Commerce, Bureau of Industry and\nSecurity (BIS), has classified this software as Export Commodity \nControl Number (ECCN) 5D002.C.1, which includes information security\nsoftware using or performing cryptographic functions with asymmetric\nalgorithms.  The form and manner of this Apache Software Foundation\ndistribution makes it eligible for export under the License Exception\nENC Technology Software Unrestricted (TSU) exception (see the BIS \nExport Administration Regulations, Section 740.13) for both object \ncode and source code.\n\nThe following provides more details on the included files that\nmay be subject to export controls on cryptographic software:\n\nApache httpd 2.0 and later versions include the mod_ssl module under\n`modules/ssl/`\nfor configuring and listening to connections over SSL encrypted\nnetwork sockets by performing calls to a general-purpose encryption\nlibrary, such as OpenSSL or the operating system's platform-specific\nSSL facilities.\n\nIn addition, some versions of apr-util provide an abstract interface\nfor symmetrical cryptographic functions that make use of a\ngeneral-purpose encryption library, such as OpenSSL, NSS, or the\noperating system's platform-specific facilities. This interface is\nknown as the `apr_crypto` interface, with implementation beneath the\n`/crypto` directory. The `apr_crypto` interface is used by the\n`mod_session_crypto` module available under\n`modules/session`\nfor optional encryption of session information.\n\nSome object code distributions of Apache httpd, indicated with the\nword \"crypto\" in the package name, may include object code for the\nOpenSSL encryption library as distributed in open source form from\n[https://www.openssl.org/source/](https://www.openssl.org/source/).\n\nThe above files are optional and may be removed if the cryptographic\nfunctionality is not desired or needs to be excluded from redistribution.\nDistribution packages of Apache httpd that include the word \"nossl\"\nin the package name have been created without the above files and are\ntherefore not subject to this notice.\n\n##  Contacts\n\n   * If you want to be informed about new code releases, bug fixes,\n     security fixes, general news and information about the Apache server\n     subscribe to the apache-announce mailing list as described under\n     [https://httpd.apache.org/lists.html#http-announce](https://httpd.apache.org/lists.html#http-announce)\n\n   * If you want freely available support for running Apache please see the\n     resources at \n     [https://httpd.apache.org/support.html](https://httpd.apache.org/support.html)\n\n   * If you have a concrete bug report for Apache please see the instructions\n     for bug reporting at \n     [https://httpd.apache.org/bug_report.html](https://httpd.apache.org/bug_report.html)\n\n   * If you want to participate in actively developing Apache please\n     subscribe to the `dev@httpd.apache.org` mailing list as described at\n     [https://httpd.apache.org/lists.html#http-dev](https://httpd.apache.org/lists.html#http-dev)\n\n"
        },
        {
          "name": "README.CHANGES",
          "type": "blob",
          "size": 1.01171875,
          "content": "Changes can be documented in two ways now: Either by directly editing the\nCHANGES file like it was done until now or by storing each entry for the\nCHANGES file correctly formated in a separate file in the changes-entries\ndirectory.\n\nThe benefit of the single file per change approach is that it eases backporting\nthe CHANGES entry to a stable branch as it avoids the frequent merge conflicts\nas changes are merged in different orders or not at all in the stable branch.\n\nIn order to keep the current CHANGES file for the users as is there is a new\nmake target called 'update-changes'. It merges all change files in the\nchanges-entries directory to the top of the CHANGES file and removes them\nafterwards.\n\nThis make target can be seen in a similar way as the scripts to update the\ndocumentation files from its xml sources. It can be executed immediately\nafter the new file in the changes-entries directory has been created / merged\nand committed or it can be executed later. It should be executed at least before\na release gets tagged.\n"
        },
        {
          "name": "README.cmake",
          "type": "blob",
          "size": 12.9111328125,
          "content": "Experimental cmake-based build support for Apache httpd on Microsoft Windows\n\nStatus\n------\n\nThis build support is currently intended only for Microsoft Windows.\n\nThis build support is experimental.  Specifically,\n\n* It does not support all features of Apache httpd.\n* Some components may not be built correctly and/or in a manner\n  compatible with the previous Windows build support.\n* Build interfaces, such as the mechanisms which are used to enable\n  optional functionality or specify prerequisites, may change from\n  release to release as feedback is received from users and bugs and\n  limitations are resolved.\n\nImportant: Refer to the \"Known Bugs and Limitations\" section for further\n           information.\n\n           It is beyond the scope of this document to document or explain\n           how to utilize the various cmake features, such as different\n           build backends or provisions for finding support libraries.\n\n           Please refer to the cmake documentation for additional information\n           that applies to building any project with cmake.\n\nPrerequisites\n-------------\n\nThe following tools must be in PATH:\n\n* cmake, version 2.8 or later\n  cmake version 3.1.3 or later is required to work with current OpenSSL\n  releases.  (OpenSSL is an optional prerequisite of httpd.)\n* Perl\n* If using a command-line compiler: compiler and linker and related tools\n  (Refer to the cmake documentation for more information.)\n\nThe following support libraries are mandatory:\n\n* APR, built with cmake\n  + Either APR 2.0-dev (trunk) or APR 1.5.x and APR-Util 1.5.x.\n  + When building APR (but not APR-Util), specify the build option\n    APR_INSTALL_PRIVATE_H so that non-standard files required for building\n    Apache httpd are installed.\n  + Additional APR settings affect httpd but are not mandatory, such as\n    APR_HAVE_IPV6.\n* PCRE (version 6.7 or higher)\n\nCertain optional features of APR 2.0-dev (trunk) or APR-Util 1.5.x\nallow some optional features of httpd to be enabled.  For example,\nAPU_HAVE_CRYPTO is required for mod_session_crypto.\n\nAdditional support libraries allow some optional features of httpd to be\nenabled:\n\n* libxml2 (e.g., mod_proxy_html)\n* lua 5.1 (mod_lua)\n* nghttp2 (mod_http2)\n* openssl (mod_ssl and https support for ab)\n* zlib (mod_deflate)\n\nOpenSSL\n-------\n\nIf you have a binary install of OpenSSL in a well-known directory (e.g.,\n%HOME%\\OpenSSL-Win64) and you wish to build httpd against a different\ninstall of OpenSSL, the cmake build may unexpectedly select OpenSSL\nlibraries in the well-known directory even if the expected include files\nare used.  Check the cmake output from your httpd build to confirm that\nthe expected OpenSSL libraries and include files are used.\n\nThe cmake FindOpenSSL module searches for OpenSSL libraries in a \"VC\"\nsubdirectory of the OpenSSL install with filenames that indicate the build\ntype (e.g., \"<PREFIX>/lib/VC/ssleay32MD.lib\"); defining CMAKE_PREFIX_PATH\nor OPENSSL_ROOT_DIR or even OPENSSL_LIBRARIES does not circumvent finding\nthese libraries.\n\nTo work around this issue, rename the well-known OpenSSL directory while\nbuilding httpd.  Let us know if you find a better solution.\n\nnghttp2\n-------\n\nThis is required for mod_http2.\n\ncmake-based build support for nghttp2 for Windows can be found at\nhttps://github.com/trawick/nghttp2-minimal-cmake.  That easily fits into\na build system that already uses cmake for httpd, apr, and perhaps other\npackages.  A dynamic build of nghttp2 using its normal Windows build\nsystem should also be usable by nghttp2.\n\nHow to build\n------------\n\n1. cd to a clean directory for building (i.e., don't build in your\n   source tree)\n\n2. Make sure cmake and Perl are in PATH.  Additionally, some backends \n   require compile tools in PATH.  (Hint: \"Visual Studio Command Prompt\")\n\n3. cmake -G \"some backend, like 'NMake Makefiles'\"\n     -DCMAKE_INSTALL_PREFIX=d:/path/to/httpdinst\n     -DENABLE_foo=A|I|O|a|i\n     -DENABLE_MODULES=A|I|O|a|i\n     d:/path/to/httpdsource\n\n   Alternately, you can use the cmake-gui and update settings in the GUI.\n\n   PCRE_INCLUDE_DIR, PCRE_LIBRARIES, APR_INCLUDE_DIR, APR_LIBRARIES,\n     NGHTTP2_INCLUDE_DIR, NGHTTP2_LIBRARIES:\n\n       cmake doesn't bundle FindXXX for these packages, so the crucial\n       information has to be specified in this manner if they aren't found\n       in their default location.\n\n     -DPCRE_INCLUDE_DIR=d:/path/to/pcreinst/include\n     -DPCRE_LIBRARIES=d:/path/to/pcreinst/lib/pcre[d].lib\n\n       These will have to be specified only if PCRE is installed to a different\n       directory than httpd, or if debug *and* release builds of PCRE were\n       installed there and you want to control which is used.  (Currently the\n       build will use pcred.lib (debug) if it is found in the default location\n       and not overridden with -DPCRE_LIBRARIES.)\n\n     -DAPR_INCLUDE_DIR=d:/path/to/aprinst/include\n     -DAPR_LIBRARIES=\"d:/path/to/aprinst/lib/libapr-1.lib;d:/path/to/aprinst/lib/libaprutil-1.lib\"\n\n       These will have to be specified if APR[-Util] was installed to a\n       different directory than httpd.\n\n       When building with APR trunk (future APR 2.x, with integrated APR-Util),\n       specify just the path to libapr-2.lib:\n\n           -DAPR_LIBRARIES=d:/path/to/aprinst/lib/libapr-2.lib\n\n       APR+APR-Util 1.x vs. APR trunk will be detected automatically if they\n       are installed to the same location as httpd.\n\n       APR-Util 1.x has an optional LDAP library.  If APR-Util has LDAP enabled\n       and httpd's mod_ldap and mod_authnz_ldap are being used, include the\n       path to the LDAP library in the APR_LIBRARIES setting.  (If APR and\n       APR-Util are found in the default location, the LDAP library will be\n       included if it is present.\n\n     -DNGHTTP2_INCLUDE_DIR=d:/path/to/nghttp2inst/include  (which has nghttp2/*.h)\n     -DNGHTTP2_LIBRARIES=\"d:/path/to/nghttp2inst/lib/nghttp2.lib\"\n\n       These will have to be specified if nghttp2 was installed to a different\n       directory than httpd.\n\n   LIBXML2_ICONV_INCLUDE_DIR, LIBXML2_ICONV_LIBRARIES\n\n      If using a module that requires libxml2 *and* the build of libxml2 requires\n      iconv, set these variables to allow iconv includes and libraries to be\n      used.  For example:\n\n      -DLIBXML2_ICONV_INCLUDE_DIR=c:\\iconv-1.9.2.win32\\include\n      -DLIBXML2_ICONV_LIBRARIES=c:\\iconv-1.9.2.win32\\lib\\iconv.lib\n\n   CMAKE_C_FLAGS_RELEASE, _DEBUG, _RELWITHDEBINFO, _MINSIZEREL\n   CMAKE_BUILD_TYPE\n\n       For NMake Makefiles the choices are at least DEBUG, RELEASE,\n       RELWITHDEBINFO, and MINSIZEREL\n       Other backends may have other selections.\n\n   ENABLE_foo:\n\n       Each module has a default setting which can be overridden with one of\n       the following values:\n           A        build and Activate module\n           a        build and Activate module IFF prereqs are available; if\n                    prereqs are unavailable, don't build it\n           I        build module but leave it Inactive (commented-out\n                    LoadModule directive)\n           i        build module but leave it Inactive IFF prereqs are\n                    available; if prereqs are unavailable, don't build it\n           O        Omit module completely\n\n       Examples: -DENABLE_ACCESS_COMPAT=O\n                 -DENABLE_PROXY_HTML=i\n\n   ENABLE_MODULES:\n\n       This changes the *minimum* enablement of all modules to the specified\n       value (one of A, a, I, i, O, as described under ENABLE_foo above).\n\n       The ranking of enablement from lowest to highest is O, i, I, a, A.\n       If a specific module has a higher rank enablement setting, either from\n       a built-in default or from -DENABLE_foo, ENABLE_MODULES won't affect\n       that module.  However, if a specific module has a lower-rank enablement\n       setting, presumably from a built-in default, the value of ENABLE_MODULES\n       will be used for that module.\n\n       Explanations for possible values:\n\n       -DENABLE_MODULES=a      build and activate all possible modules,\n                               ignoring any with missing prereqs\n                               (doesn't affect modules with A for ENABLE_foo)\n\n       -DENABLE_MODULES=i      build but leave inactive all possible\n                               modules, ignoring any with missing\n                               prereqs\n                               (doesn't affect modules with A, a, or I for \n                               ENABLE_foo)\n\n       -DENABLE_MODULES=O      no impact, since all modules are either\n                               already disabled or have a higher setting\n\n       -DENABLE_MODULES=A      build and activate all possible modules,\n                               failing the build if any module is missing\n                               a prereq\n\n       -DENABLE_MODULES=I      similar to -DENABLE_MODULES=A\n                               (doesn't affect modules with A or a for\n                               ENABLE_foo)\n\n   WITH_MODULES:\n\n       Comma-separated paths to single file modules to statically linked into\n       the server, like the --with-module=modpath:/path/to/mod_foo.c with\n       the autoconf-based build.  Key differences: The modpath (e.g., \n       \"generators\") isn't provided or used, and the copy of the module\n       source being built is automatically updated when it changes.\n       See also EXTRA_COMPILE_FLAGS, EXTRA_INCLUDES, and EXTRA_LIBS.\n\n   EXTRA_COMPILE_FLAGS:\n\n       Space-delimited compile flags to define with the build.\n\n   EXTRA_INCLUDES:\n\n       List of additional directories to search for .h files.  This may\n       be necessary when including third-party modules in the httpd build\n       via WITH_MODULES.\n\n   EXTRA_LIBS:\n\n       List of additional libraries to link with.  This may be necessary when\n       including third-party modules in the httpd build via WITH_MODULES.\n\n   Port and SSLPort:\n\n       Port numbers for substitution into default .conf files.  (The defaults\n       are 80 and 443.)\n\n   INSTALL_PDB:\n\n       If .pdb files are generated for debugging, install them.\n       Default: ON\n\n       The .pdb files are generally needed for debugging low-level code\n       problems.  If they aren't installed, they are still available in the\n       build directory for use by alternate packaging implementations or when\n       debugging on the build machine.\n\n   INSTALL_MANUAL:\n\n       Install the Apache HTTP Server manual.\n       Default: ON\n\n       This could be turned off when developing changes in order to speed up\n       installation time.\n\n4. Build using the chosen generator (e.g., \"nmake install\" for cmake's \"NMake\n   Makefiles\" generator).\n\nRunning the server and support programs\n---------------------------------------\n\nThis build system does not copy binaries such as dlls from other projects\ninto the httpd install location.  Without taking some precautions, httpd\nand support programs can fail to start or modules can fail to load because\na support library can't be found in PATH or in the directory of the httpd\nbinary.\n\nThis can be resolved in several different ways:\n\n* Install httpd and the various support libraries to a common install\n  prefix so that support libraries and httpd programs are installed in\n  the same bin directory and are found without setting PATH.\n\n* Update PATH to include the bin directories of all necessary support\n  libraries.\n\n  Depending on where PATH is set, it may not affect starting httpd as\n  a service.\n\n* Maintain a script which combines required binaries into a common \n  location, such as the httpd installion bin directory, and use that\n  script after building or otherwise installing or updating support\n  libraries.\n\n* AVOID THE USE of any unrepeatable process of copying dll files around\n  from different install locations until something starts working.  The\n  result is that when you later update a support library to pick up a\n  security fix, httpd will likely continue to use the old, vulnerable\n  library file.\n\nKnown Bugs and Limitations\n--------------------------\n\n* no standard script or makefile is provided to tie together the builds\n  of httpd and support libraries in a manner suitable for typical users\n* no logic to find support libraries or otherwise build these modules:\n  + mod_socache_dc (requires distcache), mod_serf (requires serf)\n  + additionally, mod_lbmethod_rr and mod_firehose don't compile on Windows\n    anyway\n* buildmark.c isn't necessarily rebuilt when httpd.exe is regenerated\n* ApacheMonitor has a build error and is disabled\n* CGI examples aren't installed\n* dbmmanage.pl and wintty aren't built/installed\n* module enablement defaults are not in sync with the autoconf-based build\n* no support for static support library builds; unclear if that is a\n  requirement; if so: taking PCRE as an example, we'd need to detect that it\n  is static and then turn on PCRE_STATIC for the libhttpd build\n\nGenerally:\n\n* Many httpd features have not been tested with this build.\n* Developers need to examine the existing Windows build in great detail and see\n  what is missing from the cmake-based build, whether a feature or some build\n  nuance.\n* Any feedback you can provide on your experiences with this build will be\n  helpful.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.005859375,
          "content": "README"
        },
        {
          "name": "README.platforms",
          "type": "blob",
          "size": 4.314453125,
          "content": "\n                          Apache HTTP Server\n\n  Platform specific notes:\n  ------------------------\n\n================\n  Darwin (OS X):\n   Apache 2 relies heavily on the use of autoconf and libtool to\n   provide a build environment.  Darwin provides these tools as part\n   of the Developers Tools package. Under Darwin, however, GNUlibtool\n   is installed as 'glibtool' to avoid conflicting with the Darwin\n   'libtool' program.  Apache 2 knows about this so that's not a\n   problem.\n\n   As of OS X 10.2 (Jaguar), the bundled versions work perfectly. Partly\n   this is due to the fact that /bin/sh is now 'bash' and not 'zsh' as\n   well as the fact that the bundled versions are up-to-date: \n   autoconf 2.52 and (g)libtool 1.4.2.\n\n   You will note that GNU libtool should actually be installed as\n   glibtool, to avoid conflict with a Darwin program of the same\n   name.\n\n   There have been some reports that autoconf 2.52 prevents Apache's\n   build system from correctly handling passing multi-value envvars\n   to the build system (eg: CFLAGS=\"-g -O3\" ./configure),  causing\n   errors.  Use of bash does not seem to help in this situation.  If\n   this affects you, downgrading to autoconf 2.13 (which is installed\n   on Darwin) will help.\n\n   With Leopard (at least up to 10.5.2), when running configure\n   you will likely see errors such as:\n\n      rm: conftest.dSYM: is a directory\n\n   This is a known issue and will be fixed in a later version of the\n   autoconf suite. These errors can be safely ignored.\n\n   For later versions of OS X, (10.8 and 10.9), be sure to have Xcode\n   AND Xcode Command Line Tools installed. httpd will built both with\n   gcc and clang.\n   \n==========\n  FreeBSD:\n   autoconf 2.52 creates scripts that are incompatible with the Posix\n   shell implementation (/bin/sh) on FreeBSD.  Be sure to use v2.13\n   of autoconf.\n\n   Threaded MPMs are not supported on FreeBSD 4.x.  Current releases of\n   FreeBSD 5.x (5.2 or later) support threaded MPMs correctly.  You must pass\n   '--enable-threads=yes' to APR's configure in order to enable threads.\n   Additionally, you must use libthr or libkse via libmap.conf as the default\n   libc_r is still broken as of this writing.  Please consult the man page for\n   libmap.conf for more details about configuring libthr or libkse.\n================\n  HP-UX:\n   The dlopen() system call in HP-UX has problems when loading/unloading\n   C++ modules. The problem can be resolved by using shl_load() instead\n   of dlopen(). This is fixed in the Apache 2.0.44 release.\n   To enable loading of C++ modules, the httpd binary has to be linked with\n   the following libraries :\n\n   HP-UX (11.0 / 11i):\n      When using shl_load        : \"cpprt0_stub.s -lcl\"\n      When using dlopen          : \"cpprt0_stub.s -lcl -lCsup\"\n\n   HP-UX (11i version 1.5 and greater):\n      When using dlopen/shl_load : \"cpprt0_stub.s -lcl -lunwind\"\n\n   The cpprt0_stub.s can be downloaded from the web site :\n      http://h21007.www2.hp.com/hpux-devtools/CXX/hpux-devtools.0107/0083.html\n\n   Compile cpprt0_stub.s with the PIC option\n     cc -c +z cpprt0_stub.s\n       - OR -\n     gcc -c -fPIC cpprt0_stub.s\n================\n  AIX, using the vendor C compiler with optimization:\n    There is an issue with compiling server/core.c with optimization enabled\n    which has been seen with C for AIX 5.0.2.3 and above.  (5.0.2.0, 5.0.2.1,\n    and 5.0.2.2 have an additional problem with Apache 2.0.x, so either upgrade \n    the compiler or don't use optimization in order to avoid it.)\n\n    cc_r works fine with -O2 but xlc_r does not.  In order to use xlc_r with\n    -O2, apply the patch at \n\n    http://www.apache.org/dist/httpd/patches/apply_to_2.0.49/aix_xlc_optimization.patch\n\n    (That patch works with many recent levels of Apache 2+.)\n\n================\n  Solaris:\n\n    On Solaris, better performance may be achieved by using the Sun Studio\n    compiler instead of gcc.  As of version 11, it is now free (registration\n    required).  Download the compiler from:\n\n    http://developers.sun.com/prodtech/cc/downloads/index.jsp\n\n    If you use Sun Studio, the following compiler flags (CFLAGS) are\n    recommended:\n\n      -XO4 -xchip=generic\n\n================\n  Ubuntu:\n\n    You will need to ensure that you have either libtool 1.5.6\n    or 2.2.6b, or later. Expat 2.0.1 and PCRE 8.02 are also\n    recommended to be installed. If building PCRE from source,\n    you'll also need g++.\n"
        },
        {
          "name": "ROADMAP",
          "type": "blob",
          "size": 9.8994140625,
          "content": "APACHE 2.x ROADMAP\n==================\nLast modified at [$Date$]\n\n\nWORKS IN PROGRESS\n-----------------\n\n    * Source code should follow style guidelines.\n      OK, we all agree pretty code is good.  Probably best to clean this\n      up by hand immediately upon branching a 2.1 tree.\n      Status: Justin volunteers to hand-edit the entire source tree ;)\n\n      Justin says:\n        Recall when the release plan for 2.0 was written:\n            Absolute Enforcement of an \"Apache Style\" for code.\n        Watch this slip into 3.0.\n\n      David says:\n        The style guide needs to be reviewed before this can be done.\n        http://httpd.apache.org/dev/styleguide.html\n        The current file is dated April 20th 1998!\n\n        OtherBill offers:\n          It's survived since '98 because it's welldone :-)  Suggest we\n          simply follow whatever is documented in styleguide.html as we\n          branch the next tree.  Really sort of straightforward, if you\n          dislike a bit within that doc, bring it up on the dev@httpd\n          list prior to the next branch.\n\n      So Bill sums up ... let's get the code cleaned up in CVS head.\n      Remember, it just takes cvs diff -b (that is, --ignore-space-change)\n      to see the code changes and ignore that cruft.  Get editing Justin :)\n\n    * Replace stat [deferred open] with open/fstat in directory_walk.\n      Justin, Ian, OtherBill all interested in this.  Implies setting up\n      the apr_file_t member in request_rec, and having all modules use\n      that file, and allow the cleanup to close it [if it isn't a shared,\n      cached file handle.]\n\n    * The Async Apache Server implemented in terms of APR.\n      [Bill Stoddard's pet project.]\n      Message-ID: <008301c17d42$9b446970$01000100@sashimi> (dev@apr)\n\n        OtherBill notes that this can proceed in two parts...\n\n           Async accept, setup, and tear-down of the request \n           e.g. dealing with the incoming request headers, prior to\n           dispatching the request to a thread for processing.\n           This doesn't need to wait for a 2.x/3.0 bump.\n\n           Async delegation of the entire request processing chain\n           Too many handlers use stack storage and presume it is \n           available for the life of the request, so a complete \n           async implementation would need to happen 3.0 release.\n\n        Brian notes that async writes will provide a bigger\n        scalability win than async reads for most servers.\n        We may want to try a hybrid sync-read/async-write MPM\n        as a next step.  This should be relatively easy to\n        build: start with the current worker or leader/followers\n        model, but hand off each response brigade to a \"completion\n        thread\" that multiplexes writes on many connections, so\n        that the worker thread doesn't have to wait around for\n        the sendfile to complete.\n\n\nMAKING APACHE REPOSITORY-AGNOSTIC\n(or: remove knowledge of the filesystem)\n\n[ 2002/10/01: discussion in progress on items below; this isn't\n  planned yet ]\n\n    * dav_resource concept for an HTTP resource (\"ap_resource\")\n\n    * r->filename, r->canonical_filename, r->finfo need to\n      disappear. All users need to use new APIs on the ap_resource\n      object.\n      \n      (backwards compat: today, when this occurs with mod_dav and a\n       custom backend, the above items refer to the topmost directory\n       mapped by a location; e.g. docroot)\n\n      Need to preserve a 'filename'-like string for mime-by-name\n      sorts of operations.  But this only needs to be the name itself\n      and not a full path.\n\n      Justin: Can we leverage the path info, or do we not trust the\n              user?\n\n      gstein: well, it isn't the \"path info\", but the actual URI of\n              the resource. And of course we trust the user... that is\n              the resource they requested.\n              \n              dav_resource->uri is the field you want. path_info might\n              still exist, but that portion might be related to the\n              CGI concept of \"path translated\" or some other further\n              resolution.\n              \n              To continue, I would suggest that \"path translated\" and\n              having *any* path info is Badness. It means that you did\n              not fully resolve a resource for the given URI. The\n              \"abs_path\" in a URI identifies a resource, and that\n              should get fully resolved. None of this \"resolve to\n              <here> and then we have a magical second resolution\n              (inside the CGI script)\" or somesuch.\n   \n      Justin: Well, let's consider mod_mbox for a second.  It is sort of\n              a virtual filesystem in its own right - as it introduces\n              it's own notion of a URI space, but it is intrinsically\n              tied to the filesystem to do the lookups.  But, for the\n              portion that isn't resolved on the file system, it has\n              its own addressing scheme.  Do we need the ability to\n              layer resolution?\n\n    * The translate_name hook goes away\n\n      Wrowe altogether disagrees.  translate_name today even operates\n      on URIs ... this mechanism needs to be preserved.\n    \n    * The doc for map_to_storage is totally opaque to me. It has\n      something to do with filesystems, but it also talks about\n      security and per_dir_config and other stuff. I presume something\n      needs to happen there -- at least better doc.\n\n      Wrowe agrees and will write it up.\n\n    * The directory_walk concept disappears. All configuration is\n      tagged to Locations. The \"mod_filesystem\" module might have some\n      internal concept of the same config appearing in multiple\n      places, but that is handled internally rather than by Apache\n      core.\n\n      Wrowe suggests this is wrong, instead it's private to filesystem\n      requests, and is already invoked from map_to_storage, not the core\n      handler.  <Directory > and <Files > blocks are preserved as-is,\n      but <Directory > sections become specific to the filesystem handler\n      alone.  Because alternate filesystem schemes could be loaded, this\n      should be exposed, from the core, for other file-based stores to \n      share. Consider an archive store where the layers become \n      <Directory path> -> <Archive store> -> <File name>\n   \n      Justin: How do we map Directory entries to Locations?\n \n    * The \"Location tree\" is an in-memory representation of the URL\n      namespace. Nodes of the tree have configuration specific to that\n      location in the namespace.\n      \n      Something like:\n      \n      typedef struct {\n          const char *name;  /* name of this node relative to parent */\n\n          struct ap_conf_vector_t *locn_config;\n\n          apr_hash_t *children; /* NULL if no child configs */\n      } ap_locn_node;\n\n      The following config:\n      \n      <Location /server-status>\n          SetHandler server-status\n          Order deny,allow\n          Deny from all\n          Allow from 127.0.0.1\n      </Location>\n      \n      Creates a node with name==\"server_status\", and the node is a\n      child of the \"/\" node. (hmm. node->name is redundant with the\n      hash key; maybe drop node->name)\n      \n      In the config vector, mod_access has stored its Order, Deny, and\n      Allow configs. mod_core has stored the SetHandler.\n      \n      During the Location walk, we merge the config vectors normally.\n      \n      Note that an Alias simply associates a filesystem path (in\n      mod_filesystem) with that Location in the tree. Merging\n      continues with child locations, but a merge is never done\n      through filesystem locations. Config on a specific subdir needs\n      to be mapped back into the corresponding point in the Location\n      tree for proper merging.\n\n    * Config is parsed into a tree, as we did for the 2.0 timeframe,\n      but that tree is just a representation of the config (for\n      multiple runs and for in-memory manipulation and usage). It is\n      unrelated to the \"Location tree\".\n\n    * Calls to apr_file_io functions generally need to be replaced\n      with operations against the ap_resource. For example, rather\n      than calling apr_dir_open/read/close(), a caller uses\n      resource->repos->get_children() or somesuch.\n\n      Note that things like mod_dir, mod_autoindex, and mod_negotiation\n      need to be converted to use these mechanisms so that their\n      functions will work on logical repositories rather than just\n      filesystems.\n\n    * How do we handle CGI scripts?  Especially when the resource may\n      not be backed by a file?  Ideally, we should be able to come up\n      with some mechanism to allow CGIs to work in a\n      repository-independent manner.\n\n      - Writing the virtual data as a file and then executing it?\n      - Can a shell be executed in a streamy manner?  (Portably?)\n      - Have an 'execute_resource' hook/func that allows the\n        repository to choose its manner - be it exec() or whatever.\n        - Won't this approach lead to duplication of code?  Helper fns?\n\n      gstein: PHP, Perl, and Python scripts are nominally executed by\n              a filter inserted by mod_php/perl/python. I'd suggest\n              that shell/batch scripts are similar.\n\n              But to ask further: what if it is an executable\n              *program* rather than just a script? Do we yank that out\n              of the repository, drop it onto the filesystem, and run\n              it? eeewwwww...\n              \n              I'll vote -0.9 for CGIs as a filter. Keep 'em handlers.\n\n      Justin: So, do we give up executing CGIs from virtual repositories?\n              That seems like a sad tradeoff to make.  I'd like to have\n              my CGI scripts under DAV (SVN) control.\n\n    * How do we handle overlaying of Location and Directory entries?\n      Right now, we have a problem when /cgi-bin/ is ScriptAlias'd and\n      mod_dav has control over /.  Some people believe that /cgi-bin/\n      shouldn't be under DAV control, while others do believe it\n      should be.  What's the right strategy?\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.39453125,
          "content": "# Security Policy\n\n## Supported Versions\n\nCurrently the only supported version is the latest patch release of the\n2.4.x stable branch.\n\n## Security Updates\n\n[Apache 2.4 Security Vulnerabilities](http://httpd.apache.org/security/vulnerabilities_24.html)\n\n## Reporting a Vulnerability\n\nFor information on how to report a new security problem please see\n[here](http://httpd.apache.org/security_report.html)\n"
        },
        {
          "name": "STATUS",
          "type": "blob",
          "size": 20.787109375,
          "content": "APACHE 2.5 STATUS:                                              -*-text-*-\nLast modified at [$Date$]\n\nThe current version of this file can be found at:\n\n  * http://svn.apache.org/repos/asf/httpd/httpd/trunk/STATUS\n\nDocumentation status is maintained separately and can be found at:\n\n  * docs/STATUS in this source tree, or\n  * http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/STATUS\n\nConsult the following STATUS files for information on related projects:\n\n  * http://svn.apache.org/repos/asf/apr/apr/trunk/STATUS\n\nPatches considered for backport are noted in their branches' STATUS:\n\n  * http://svn.apache.org/repos/asf/httpd/httpd/branches/2.0.x/STATUS\n  * http://svn.apache.org/repos/asf/httpd/httpd/branches/2.2.x/STATUS\n  * http://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x/STATUS\n\n\nRelease history:\n    [NOTE that x.{odd}.z versions are strictly Alpha/Beta releases,\n          while x.{even}.z versions are Stable/GA releases.]\n\n    2.5.1   : In development\n    2.5.0   : Tagged on November 8, 2017. Not released.\n\nContributors looking for a mission:\n\n  * Just do an egrep on \"TODO\" or \"XXX\" in the source.\n\n  * Review the bug database at: http://issues.apache.org/bugzilla/\n\n  * Review the \"PatchAvailable\" bugs in the bug database:\n\n    https://issues.apache.org/bugzilla/buglist.cgi?bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&product=Apache+httpd-2&keywords=PatchAvailable\n\n    After testing, you can append a comment saying \"Reviewed and tested\".\n\n  * Open bugs in the bug database.\n\n  * See also the STATUS file in the docs/ directory, which lists documentation-specific TODO items.\n\n\nCURRENT RELEASE NOTES:\n\n\nRELEASE SHOWSTOPPERS:\n\n\nCURRENT VOTES:\n\n\nTHINGS THAT SHOULD BE CONSIDERED EARLY IN THE 2.6/3.0 DEVELOPMENT CYCLE:\n\n  * Remove directives whose purpose was to preserve existing buggy behaviour\n    in v2.4.x.\n\n  * Re-align structures to be memory efficient. Move bit fields to the\n    top of structures so that they can be extended without adding a\n    memory overhead.\n\n  * Seriously ramp up/replace test framework and cases to have better\n    coverage of existing special cases and behaviours users rely on.\n\n  * Add performance testing to the test framework.\n\n  * Competely untangle core filesystem behavior where a filesystem htdocs/\n    resource wasn't indicated by the request URI.\n\n  * Refactor r->uri into a %escaped raw form presented by the client, and\n    a distinct decoded field used only for local filesystem access.\n\n  * Change default prefix from /usr/local/apache2 to something corresponding\n    to the project name. Rename apachectl to httpdctl.\n\n  * Change merge order of <Location> to be most specific match last. This\n    is more consistent with <Directory> and allows some optimizations for the\n    location merge code.\n\n  * Detect Lua 5.2.0 during configure and add LUA_COMPAT_ALL to CPPFLAGS.\n    Maybe it even suffices to add LUA_COMPAT_MODULE and individually\n    care about the two remaining incompatible code lines (one with lua_strlen,\n    one with lua_objlen).\n\n  * Event's timeout_mutex to enter keepalive state probably needs some\n    analysis/attention.\n\n  * Better H2 integration?\n    - adding handling of slave connections to mpm, no extra H2 workers,\n      triggering \"events\" read/write/timer from main/slave\n    - add slave writes/done/abort to events that wake up master connection\n    - disentangle core filters to server one purpose only, so that H2\n      versions can reuse them properly.\n\n  * Remove mod_access_compat?\n\n  * Ditch platforms/89/old prereqs or anything else?\n\n  * Leverage libmill? Drop serf?\n\n  * Better abstraction of slave connections and \"requests\".\n    - add abstraction for \"response\" as something that can be passed\n      through filters. To be serialized into the correct HTTP bytes on\n      the main connection.\n    - solve multi-threaded access to master connection props/module conf\n      (e.g. ssl vars)\n\n  * make mod_ssl more \"core\"?\n\n  * add high-level server configuration directives that can steer/influence\n    module defaults/warn/rejects related to security\n\n  * Ditch HTTP/0.9? At least, make HttpProtocolOptions Require1.0 the default.\n\n  * Restructure merge fn table/indexes to ignore modules with no directives,\n    and permit modules with dozens upon dozens of merge values to split these\n    into multiple functional config groups to avoid excessive merging.\n    Retitle from 'per-dir' to 'per-location' to better reflect the always-run\n    sections (location, ifexpr etc), while we phase out the file-oriented\n    bias from httpd.\n\n  * New versioning or release cadence.\n\n  * Ditch old APIs when we have the chance with 3.x. Consolidate current\n    functionality into APIs with stronger guarantees. (Specific examples TBD.)\n\n  * Remove as many undesirable-but-kept-for-backwards-compatibility behaviors\n    as possible from current config directives. (Specific examples TBD.)\n\n  * True event-loop/asynchronous support in the server core.\n\n  * Modify configuration syntax to separate meta-directives from runtime\n    directives (e.g. If vs. IfVersion). Allow as much static analysis of the\n    configuration as possible without needing to start the server to figure out\n    what's going on.\n\n  * Support JSON-like configuration files\n\n  * Support YAML based configuration files (JSON does not support comments)\n\n  * Opaque data structures w/ getters/setters\n\n  * Generic interface to enable runtime changes (adjusting log level, modifying\n    balancer information, toggling flags on/off). Perhaps modules can register\n    callbacks for making these changes?\n\n  * REST-based administration for existing (balancer/etc) and new dynamic\n    runtime changes (see above)\n\n  * Improve the look of generated pages (status, load-balancer...) with dynamic\n    update of the values. Generate HTML5 pages, instead of 3.2, Get rid of XHTML\n    in the generated pages.\n\n  * Add performance monitoring of the server, of each module (?), in order to help\n    understanding what worth looking at in order to improve overall performance.\n    (https://cdn.wp.nginx.com/wp-content/uploads/2016/12/Amplify-Dashboards-page-base-for-filters.png)\n\n  * Drop CGI-1.1-incompatible behaviors kept for compatibility reasons with\n    \"broken\" server implementations (PR 51517). (Note that many of them are\n    \"broken\" *because* of our behaviors.)\n\n  * Add a \"normalized\" list of headers for a HTTP response, rather then relying\n    on r->headers_out and r->err_headers_out, since mod_headers' behavior is\n    not really user friendly in some scenarios (example in PR 62380).\n\n\nOLD ISSUES THAT WERE THOUGHT TO BE SHOWSTOPPERS FOR 2.4 BUT OBVIOUSLY WEREN'T:\n\n  * Handling of non-trailing / config by non-default handler is broken\n    http://marc.theaimsgroup.com/?l=apache-httpd-dev&m=105451701628081&w=2\n    jerenkrantz asks: Why should this block a release?\n    wsanchez agrees: this may be a change in behavior, but isn't\n      clearly wrong, and even if so, it doesn't seem like a\n      showstopper.\n\n  * the edge connection filter cannot be removed\n    http://marc.theaimsgroup.com/?l=apache-httpd-dev&m=105366252619530&w=2\n    http://mail-archives.apache.org/mod_mbox/httpd-dev/200501.mbox/%3C41E30B42.4060202@stason.org%3E\n    jerenkrantz asks: Why should this block a release?\n    stas replies: because it requires a rewrite of the filters stack\n          implementation (you have suggested that) and once 2.2 is\n          released you can't do that anymore.\n    pgollucci: this affects mod_perl I'm pretty sure.\n\n\nRELEASE NON-SHOWSTOPPERS BUT WOULD BE REAL NICE TO WRAP THESE UP:\n\n  * Clean up all the kruft and *extremely* outdated stuff below...\n\n  * Maybe remove Limit/LimitExcept or at least make it log warnings when\n    mis-used.\n\n  * Patches submitted to the bug database:\n    http://issues.apache.org/bugzilla/buglist.cgi?bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&product=Apache+httpd-2&keywords=PatchAvailable\n\n  * Filter stacks and subrequests, redirects and fast redirects.\n    There's at least one PR that suffers from the current unclean behaviour\n    (which lets the server send garbage): PR 17629\n    nd says: Every subrequest should get its own filter stack with the\n             subreq_core filter as bottom-most. That filter does two things:\n               - swallow EOS buckets\n               - redirect the data stream to the upper request's (rr->main)\n                 filter chain directly after the subrequest's starting\n                 point.\n             Once we have a clean solution, we can try to optimize\n             it, so that the server won't be slow down too much.\n\n  * pipes deadlock on all platforms with limited pipe buffers (e.g. both\n    Linux and Win32, as opposed to only Win32 on 1.3).  The right solution\n    is either GStein's proposal for a \"CGI Brigade\", or OtherBill's proposal\n    for \"Poll Buckets\" for \"Polling Filter Chains\".  Or maybe both :-)\n\n  * All handlers should always send content down even if r->header_only\n    is set.  If not, it means that the HEAD requests don't generate the\n    same headers as a GET which is wrong.\n\n  * exec cmd and suexec arg-passing enhancements\n    Status: Patches proposed\n    Message-ID: <20020526041748.A29148@prodigy.Redbrick.DCU.IE>\n    (see the \"proc.patch\" and \"suexec-shell.patch\" links in this message)\n\n  * The 2.0.36 worker MPM graceless shutdown changes work but are\n    a bit clunky on some platforms; eg, on Linux, the loop to\n    join each worker thread seems to hang, and the parent ends up\n    killing off the child with SIGKILL.  But at least it shuts down.\n\n    chrisd: Has this been fixed by the changes for PR 38737?\n\n  * We do not properly substitute the prefix-variables in the configuration\n    scripts or generated-configs.  (i.e. if sysconfdir is etc,\n    httpd-std.conf points to conf.)\n\n  * If any request gets through ap_process_request_internal() and is\n    scheduled to be served by the core handler, without a flag that this \n    r->filename was tested by dir/file_walk, we need to 500 at the very \n    end of the ap_process_request_internal() processing so sub_req-esters\n    know this request cannot be run.  This provides authors of older \n    modules better compatibility, while still improving the security and \n    robustness of 2.0.\n\n    Status: still need to decide where this goes, OtherBill comments...\n    Message-ID: <065701c14526$495203b0$96c0b0d0@roweclan.net>\n    [Deleted comments regarding the ap_run_handler phase, as irrelevant\n     as BillS points out that \"common case will be caught in\n     default_handler already (with the r->finfo.filetype == 0 check)\"\n     and the issue is detecting this -before- we try to run the req.]\n\n     gregames says: can this happen somehow without a broken module\n       being involved?  If not, why waste cycles trying to defend against\n       potential broken modules?  It seems futile.\n     wrowe counters: no, it shouldn't happen unless the module is broken.\n       But the right answer is to fail the request up-front in dir/file\n       walk if the path was entirely invalid; and we can't do that either\n       UNTIL 2.1 or we break modules that haven't hooked map_to_storage.\n\n  * Can a static httpd be built reliably?\n      Message-ID: <20020207142751.T31582@clove.org>\n\n  * Usage of APR_BRIGADE_NORMALIZE in core_input_filter should be\n    removed if possible.\n      Message-ID:\n        <Pine.LNX.4.33.0201202232430.318-100000@deepthought.cs.virginia.edu>\n    Jeff wonders if we still care about this.  It is no longer an\n    API issue but simply an extra trip through the brigade.\n\n  * Try to get libtool inter-library dependency code working on AIX.\n      Message-ID: <cm3n10lx555.fsf@rdu163-40-092.nc.rr.com>\n\n    Justin says: If we get it working on AIX, we can enable this\n                 on all platforms and clean up our build system somewhat.\n    Jeff says:   I thought I tested a patch for you sometime in\n                 January that you were going to commit within a few days.\n\n  * Handling of %2f in URIs.  Currently both 1.3 and 2.0\n    completely disallow %2f in the request URI path (see\n    ap_unescape_url() in util.c).  It's permitted and passed\n    through in the query string, however.  Roy says the\n    original reason for disallowing it, from five years ago,\n    was to protect CGI scripts that applied PATH_INFO to\n    a filesystem location and which might be tricked by\n    ..%2f..%2f(...).  We *should* allow path-info of the\n    form 'http://foo.com/index.cgi/path/to/path%2finfo'.\n    Since we've revamped a lot of our processing of path\n    segments, it would be nice to allow this, or at least\n    allow it conditionally with a directive.\n\n      OtherBill adds that %2f as the SECOND character of a multibyte\n      sequence causes the request to fail!  This happens notably in\n      the ja-jis encoding.\n\n  * There is increasing demand from module writers for an API\n    that will allow them to control the server à la apachectl.\n    Reasons include sole-function servers that need to die if\n    an external dependency (e.g., a database) fails, et cetera.\n    Perhaps something in the (ever more abused) scoreboard?\n      \n      On the other hand, we already have a pipe that goes between parent\n      and child for graceful shutdown events, along with an API that\n      can be used to send a message down that pipe.  In threaded MPMs,\n      it is easy enough to make that one pipe be used for graceful\n      and graceless events, and it is also easy to open that pipe\n      to both parent and child for writing.  Then we just need to\n      figure out how to do graceless on non-threaded MPMs.\n\n  * Allow the DocumentRoot directive within <Location > scopes?  This\n    allows the beloved (crusty) Alias /foo/ /somepath/foo/ followed\n    by a <Directory /somepath/foo> to become simply \n    <Location /foo/> DocumentRoot /somefile/foo (IMHO a bit more legible\n    and in-your-face.)  DocumentRoot unset would be accepted [and would\n    not permit content to be served, only virtual resources such as\n    server-info or server-status.\n    This proposed change would _not_ deprecate Alias.\n      striker: See the thread starting with Message-ID:\n        JLEGKKNELMHCJPNMOKHOGEEJFBAA.striker@apache.org.\n\n  * Win32: Rotatelogs sometimes is not terminated when Apache\n    goes down hard.  FirstBill was looking at possibly tracking the \n    child's-child processes in the parent process.\n      stoddard: Shared scoreboard might offer a good way for the parent \n      to keep track of 'other child' processes and whack them if the child \n      goes down.\n      Other thoughts on walking the process chain using the NT kernel\n      have also been proposed on APR.\n\n  * Eliminate unnecessary creation of pipes in mod_cgid\n\n  * Combine log_child and piped_log_spawn. Clean up http_log.c.\n    Common logging API.\n\n  * Platforms that do not support fork (primarily Win32 and AS/400)\n    Architect start-up code that avoids initializing all the modules \n    in the parent process on platforms that do not support fork.\n\n  * There are still a number of places in the code where we are\n    losing error status (i.e. throwing away the error returned by a\n    system call and replacing it with a generic error code)\n\n  * Mass vhosting version of suEXEC.\n\n  * All DBMs suffer from confusion in support/dbmmanage (perl script) since \n    the dbmmanage employs the first-matched dbm format.  This is not\n    necessarily the library that Apache was built with.  Aught to\n    rewrite dbmmanage upon installation to bin/ with the proper library \n    for predictable mod_auth_dbm administration.\n      Questions; htdbm exists, time to kill dbmmanage, or does it remain\n                 useful as a perl dbm management example?  If we keep it,\n                 do we address the issue above?\n\n  * Integrate mod_dav.\n      Some additional items remaining:\n      - case_preserved_filename stuff\n          (use the new canonical name stuff?)\n      - find a new home for ap_text(_header)\n      - is it possible to remove the DAV: namespace stuff from util_xml?\n\n  * ap_core_translate() and its use by mod_mmap_static and mod_file_cache\n    are a bit wonky.  The function should probably be exposed as a utility \n    function (such as ap_translate_url2fs() or ap_validate_fs_url() or \n    something).  Another approach would be a new hook phase after\n    \"translate\" which would allow the module to munge what the\n    translation has decided to do.\n      Status: Greg +1 (volunteers)\n\n  * Explore use of a post-config hook for the code in http_main.c which\n    calls ap_fixup_virutal_hosts(), ap_fini_vhost_config(), and\n    ap_sort_hooks()  [to reduce the logic in main()]\n\n  * read the config tree just once, and process N times (as necessary)\n\n  * (possibly) use UUIDs in mod_unique_id and/or mod_usertrack\n\n  * (possibly) port the bug fix for PR 6942 (segv when LoadModule is put\n    into a VirtualHost container) to 2.0.\n\n  * shift stuff to mod_core.h\n\n  * callers of ap_run_create_request() should check the return value\n    for failure (Doug volunteers)\n\n  * Fix the worker MPM to use POD to kill child processes instead\n    of ap_os_killpg, regardless of how they should die.\n\n      chrisd: Is this done, by any chance?  See r92598 and r93358.\n\n  * Scoreboard structures could be changed in the future such that\n    proper alignment is not maintained, leading to segfaults on \n    some systems.  Cliff posted a patch to deal with this issue but\n    later recanted. See this message to dev@apr.apache.org:\n      Message-ID:\n        <Pine.LNX.4.44.0203011354090.16457-200000@deepthought.cs.virginia.edu>\n\n  * APXS either needs to be fixed completely for use when apr is out of tree,\n    or it should drop query mode altogether, and we just grow an \n    httpd-config or similar arrangement. \n    To quote a discussion in STATUS earlier:\n\n        thommay: this doesn't fix all the problems with apxs and out of\n                 tree apr/apr-util, but it's a good start. There's still the \n                 query cases; but I'm beginning to think that in these cases \n                 the app should be querying ap{r,u}-config directly\n        deprecate -q:  add htpd-config: gstein, pquerna, minfrin, pgollucci\n        other: \n\nTODO ISSUES REMAINING IN MOD_SSL:\n\n  * SSLRequire directive (parsing of) leaks memory\n\n  * ssl_var_lookup could be rewritten to be MUCH faster\n\nWISH LIST\n  * mod_proxy: Ability to run SSL over proxy gateway connections,\n    encrypting (or reencrypting) at the proxy.\n\n  * mod_cache: Handle ESI tags.\n\n  * mod_cache: Resolve issue of how to cache page fragments (or perhaps\n    -if- we want to cache page fragments). Today, mod_cache/mod_mem_cache\n    will cache #include 'virtual' requests (but not #include 'file'\n    requests). This was accomplished by making CACHE_IN a\n    CONTENT_SET-1 filter to force it to run before the SUBREQ_CORE\n    filter.  But now responses cannot be cached that include the\n    effects of having been run through CONTENT_SET filters\n    (mod_deflate, mod_expires, etc).  We could rerun all the\n    CONTENT_SET filters on the cached response, but this will not\n    work in all cases. For example, mod_expires relies on installing\n    the EXPIRATION filter during fixups. Contents served out of\n    mod_cache (out of the quick_handler) bypass -all- the request\n    line server hooks (Ryan really hated this. It is great for\n    performance, but bad because of the complications listed above).\n\n    mod_cache/mod_mem_cache/mod_cache_disk:\n\n  * mod_mem_cache: Consider adding a RevalidateTimeout directive to\n    specify time at which local cached content is to be revalidated\n    (ie, underlying file stat'ed to see if it has changed).\n\n  * mod_mem_cache/mod_cache_disk: Need to be able to query cache\n    status (num of entries, cache object properties, etc.).\n    mod_status could be extended to query optional hooks defined\n    by modules for the purpose of reporting module status.\n    mod_cache (et. al.) could define optional hooks that are called\n    to collect status.  Status should be queryable by\n    HTTP or SNMP?\n    jerenkrantz says: Yawn.  Who cares.\n\n  * Regex containers don't work in an intuitive way\n      Status: No one has come up with an efficient way to fix this\n      behavior. Dean has suggested getting rid of regex containers\n      completely.\n      OtherBill suggests: We at least seem to agree on eliminating\n                          the <Container ~ foo> forms, and using only\n                          <ContainerMatch foo> semantics.\n\n  * orig_ct in the byterange/multipart handling may not be\n    needed. Apache 1.3 just never stashed \"multipart\" into\n    r->content_type. We should probably follow suit since the\n    byterange stuff doesn't want the rest of the code to see the\n    multipart content-type; the other code should still think it is\n    dealing with the <orig_ct> stuff.\n      Status: Greg volunteers to investigate (esp. since he was most \n              likely the one to break it :-)\n\nEXPERIMENTAL MODULES:\n\n    Experimental modules should eventually be be promoted to fully supported\n    status or removed from the repository entirely (ie, the\n    'experiment' failed). This section tracks what needs to happen to \n    get the modules promoted to fully supported status.\n\n"
        },
        {
          "name": "VERSIONING",
          "type": "blob",
          "size": 7.9482421875,
          "content": "APACHE 2.x VERSIONING\n=====================\n[$LastChangedDate$]\n\n\nINTRODUCTION\n------------\nThe Apache HTTP Server project must balance two competing and disjoint\nobjectives: maintain stable code for third party authors, distributors and\nmost importantly users so that bug and security fixes can be quickly adopted\nwithout significant hardship due to user-visible changes; and continue the\ndevelopment process that requires ongoing redesign to correct earlier\noversights and to add additional features.\n\nThe Apache HTTP Server, through version 2.0, used the Module Magic Number (MMN)\nto reflect API changes.  This had the shortcoming of often leaving users\nhunting to replace binary third party modules that were now incompatible.\nThis also left module authors searching through the API change histories to\ndetermine the exact cause for the MMN change and whether their module was\naffected.\n\nWith the simultaneous release of Apache 2.2-stable and Apache 2.3-development,\nthe Apache HTTP Server project is moving towards a more predictable stable\nrelease cycle, while allowing forward progress to occur without concern\nfor breaking the stable branch.  This document explains the rationale between\nthe two versions and their behavior.\n\n\nSTABLE RELEASES, 2.{even}.{revision}\n------------------------------------ \n\nAll even numbered releases will be considered stable revisions. \n\nStable revisions will retain forward compatibility to the maximum\npossible extent.  Features may be added during minor revisions, and\nfeatures may be deprecated by making appropriate notations in the\ndocumentation, but no features may be removed.\n\nIn essence, that implies that you can upgrade from one minor revision\nto the next with a minimum of trouble.  In particular, this means:\n\n  * The Module API will retain forward compatibility.\n    It will not be necessary to update modules to work with new\n    revisions of the stable tree.\n\n  * The run-time configuration will be forward compatible.\n    No configuration changes will be necessary to work with new\n    revisions of the stable tree.\n\n  * Compile-time configuration will be forward compatible.\n    The configure command line options that work in one release\n    of the stable tree will also work in the next release.\n\nAs always, it will be necessary to test any new release to assure\nthat it works correctly with a particular configuration and a \nparticular set of modules, but every effort will be made to assure\nthat upgrades are as smooth as possible.\n\nIn addition, the following development restrictions will aid in \nkeeping the stable tree as safe as possible:\n\n  * No 'Experimental' modules; while it may be possible (based on API changes\n    required to support a given module) to load a 2.3-development module into\n    a 2.2-stable build of Apache, there are no guarantees.  Experimental \n    modules will be introduced to the 2.3-development versions and either\n    added to 2.2-stable once they are proven and compatible, or deferred\n    to the 2.4-stable release if they cannot be incorporated in the current\n    stable release due to API change requirements.\n\n  * The stable subversion tree should not remain unstable at any time.  Atomic \n    commits ought be used to introduce code from the development version to the \n    stable  tree.  At any given time a security release may be in preparation, \n    unbeknownst to other contributors.  At any given time, testers may be\n    checking out SVN trunk to confirm that a bug has been corrected.  And as\n    all code was well-tested in development prior to committing to the stable\n    tree, there is really no reason for this tree to be broken for more than \n    a few minutes during a lengthy commit.\n\nIn order to avoid 'skipped' release numbers in the stable releases, the\nRelease Manager will generally roll a release candidate (APACHE_#_#_#_RC#)\ntag.  Release Candidate tarballs will be announced to the\nstable-testers@httpd.apache.org for the stable tree.  Then, the participants\nwill vote on the quality of the proposed release tarball.\n\nThe final APACHE_#_#_# tag will not exist until the APACHE_#_#_#_RC# candidate\nhas passed the usual votes to release that version.  Only then is the final\ntarball packaged, removing all -rc# designations from the version number, and\ntagging the tree with the release number.\n\nDEVELOPMENT RELEASES, 2.{odd}.{revision}\n-----------------------------------------\n\nAll odd numbered releases designate the 'next' possible stable release,\ntherefore the current development version will always be one greater than\nthe current stable release.  Work proceeds on development releases, permitting\nthe modification of the MMN at any time in order to correct deficiencies \nor shortcomings in the API.  This means that modules from one development\nrelease to another may not be binary compatible, or may not successfully\ncompile without modification to accommodate the API changes.\n\nThe only 'supported' development release at any time will be the most\nrecently released version.  Developers will not be answering bug reports\nof older development releases once a new release is available.  It becomes\nthe responsibility of the reporter to use the latest development version\nto confirm that any issue still exists.\n\nAny new code, new API features or new ('experimental') modules may be\npromoted at any time to the next stable release, by a vote of the project\ncontributors.  This vote is based on the technical stability of the new\ncode and the stability of the interface.  Once moved to stable, that feature\ncannot change for the remainder of that stable release cycle, so the vote must\nreflect that the final decisions on the behavior and naming of that new\nfeature were reached.  Vetos continue to apply to this choice of introducing\nthe new work to the stable version.\n\nAt any given time, when the quality of changes to the development branch\nis considered release quality, that version may become a candidate for the\nnext stable release.  This includes some or all of the API changes, promoting\nexperimental modules to stable or deprecating and eliminating older modules\nfrom the last stable release.  All of these choices are considered by the\nproject as a group in the interests of promoting the stable release, so that\nany given change may be 'deferred' for a future release by the group, rather \nthan introduce unacceptable risks to adopting the next stable release.\n\nThird party module authors are strongly encouraged to test with the latest\ndevelopment version.  This assures that the module will be ready for the next\nstable release, but more importantly, the author can react to shortcomings\nin the API early enough to warn the dev@httpd.apache.org community of the\nshortcomings so that they can be addressed before the stable release.  The\nentire burden is on the module author to anticipate the needs of their module\nbefore the stable release is created.  Once a new stable release cycle has\nbegun, that API will be present for the lifetime of the stable release.  Any\ndesired changes in the stable versions must wait for inclusion into the next\nrelease cycle.\n\nWhen deciding to promote a development tree to being stable, a determination\nshould be made whether the changes since the last stable version warrant a\nmajor version bump.  That is, if 2.2 is the current stable version and 2.3 is\n'ready' to become stable, the group needs to decide if the next stable\nversion is 2.4 or 3.0.  One suggested rule of thumb is that if it requires\ntoo much effort to port a module from 2.2 to 2.4, then the stable version\nshould be labeled 3.0.\n\nIn order to ease the burden of creating development releases, the process\nfor packaging a development releases is less formal than for the stable\nrelease.  This strategy reflects the fact that while in development, versions\nare cheap.  Development releases may be classified as alpha, beta, or GA\nto reflect the group's perceived stability of the tree.  Development releases\nmay be made at any time by any committer.\n\nPlease read the following link for a more detailed description of the\ndevelopment release strategy:\n\nhttp://httpd.apache.org/dev/release.html\n"
        },
        {
          "name": "acinclude.m4",
          "type": "blob",
          "size": 35.9345703125,
          "content": "\ndnl APACHE_HELP_STRING(LHS, RHS)\ndnl Autoconf 2.50 can not handle substr correctly.  It does have \ndnl AC_HELP_STRING, so let's try to call it if we can.\ndnl Note: this define must be on one line so that it can be properly returned\ndnl as the help string.\nAC_DEFUN([APACHE_HELP_STRING],[ifelse(regexp(AC_ACVERSION, 2\\.1), -1, AC_HELP_STRING($1,$2),[  ]$1 substr([                       ],len($1))$2)])dnl\n\ndnl APACHE_SUBST(VARIABLE)\ndnl Makes VARIABLE available in generated files\ndnl (do not use @variable@ in Makefiles, but $(variable))\nAC_DEFUN([APACHE_SUBST],[\n  APACHE_VAR_SUBST=\"$APACHE_VAR_SUBST $1\"\n  AC_SUBST($1)\n])\n\ndnl APACHE_FAST_OUTPUT(FILENAME)\ndnl Perform substitutions on FILENAME (Makefiles only)\nAC_DEFUN([APACHE_FAST_OUTPUT],[\n  APACHE_FAST_OUTPUT_FILES=\"$APACHE_FAST_OUTPUT_FILES $1\"\n])\n\ndnl APACHE_GEN_CONFIG_VARS\ndnl Creates config_vars.mk\nAC_DEFUN([APACHE_GEN_CONFIG_VARS],[\n  APACHE_SUBST(HTTPD_VERSION)\n  APACHE_SUBST(HTTPD_MMN)\n  APACHE_SUBST(abs_srcdir)\n  APACHE_SUBST(bindir)\n  APACHE_SUBST(sbindir)\n  APACHE_SUBST(cgidir)\n  APACHE_SUBST(logfiledir)\n  APACHE_SUBST(exec_prefix)\n  APACHE_SUBST(datadir)\n  APACHE_SUBST(localstatedir)\n  APACHE_SUBST(mandir)\n  APACHE_SUBST(libdir)\n  APACHE_SUBST(libexecdir)\n  APACHE_SUBST(htdocsdir)\n  APACHE_SUBST(manualdir)\n  APACHE_SUBST(includedir)\n  APACHE_SUBST(errordir)\n  APACHE_SUBST(iconsdir)\n  APACHE_SUBST(sysconfdir)\n  APACHE_SUBST(installbuilddir)\n  APACHE_SUBST(runtimedir)\n  APACHE_SUBST(proxycachedir)\n  APACHE_SUBST(statedir)\n  APACHE_SUBST(other_targets)\n  APACHE_SUBST(progname)\n  APACHE_SUBST(prefix)\n  APACHE_SUBST(AWK)\n  APACHE_SUBST(CC)\n  APACHE_SUBST(CPP)\n  APACHE_SUBST(CXX)\n  APACHE_SUBST(CPPFLAGS)\n  APACHE_SUBST(CFLAGS)\n  APACHE_SUBST(CXXFLAGS)\n  APACHE_SUBST(CC_FOR_BUILD)\n  APACHE_SUBST(CFLAGS_FOR_BUILD)\n  APACHE_SUBST(LTFLAGS)\n  APACHE_SUBST(LDFLAGS)\n  APACHE_SUBST(LT_LDFLAGS)\n  APACHE_SUBST(SH_LDFLAGS)\n  APACHE_SUBST(HTTPD_LDFLAGS)\n  APACHE_SUBST(UTIL_LDFLAGS)\n  APACHE_SUBST(LIBS)\n  APACHE_SUBST(DEFS)\n  APACHE_SUBST(INCLUDES)\n  APACHE_SUBST(NOTEST_CPPFLAGS)\n  APACHE_SUBST(NOTEST_CFLAGS)\n  APACHE_SUBST(NOTEST_CXXFLAGS)\n  APACHE_SUBST(NOTEST_LDFLAGS)\n  APACHE_SUBST(NOTEST_LIBS)\n  APACHE_SUBST(EXTRA_CPPFLAGS)\n  APACHE_SUBST(EXTRA_CFLAGS)\n  APACHE_SUBST(EXTRA_CXXFLAGS)\n  APACHE_SUBST(EXTRA_LDFLAGS)\n  APACHE_SUBST(EXTRA_LIBS)\n  APACHE_SUBST(EXTRA_INCLUDES)\n  APACHE_SUBST(INTERNAL_CPPFLAGS)\n  APACHE_SUBST(LIBTOOL)\n  APACHE_SUBST(SHELL)\n  APACHE_SUBST(RSYNC)\n  APACHE_SUBST(SVN)\n  APACHE_SUBST(MODULE_DIRS)\n  APACHE_SUBST(MODULE_CLEANDIRS)\n  APACHE_SUBST(PORT)\n  APACHE_SUBST(SSLPORT)\n  APACHE_SUBST(CORE_IMPLIB_FILE)\n  APACHE_SUBST(CORE_IMPLIB)\n  APACHE_SUBST(SH_LIBS)\n  APACHE_SUBST(SH_LIBTOOL)\n  APACHE_SUBST(MK_IMPLIB)\n  APACHE_SUBST(MKDEP)\n  APACHE_SUBST(INSTALL_PROG_FLAGS)\n  APACHE_SUBST(MPM_MODULES)\n  APACHE_SUBST(ENABLED_MPM_MODULE)\n  APACHE_SUBST(DSO_MODULES)\n  APACHE_SUBST(ENABLED_DSO_MODULES)\n  APACHE_SUBST(LOAD_ALL_MODULES)\n  APACHE_SUBST(APR_BINDIR)\n  APACHE_SUBST(APR_INCLUDEDIR)\n  APACHE_SUBST(APR_VERSION)\n  APACHE_SUBST(APR_CONFIG)\n  APACHE_SUBST(APU_BINDIR)\n  APACHE_SUBST(APU_INCLUDEDIR)\n  APACHE_SUBST(APU_VERSION)\n  APACHE_SUBST(APU_CONFIG)\n  APACHE_SUBST(APREQ_MAJOR_VERSION)\n  APACHE_SUBST(APREQ_LIBTOOL_VERSION)\n\n  abs_srcdir=\"`(cd $srcdir && pwd)`\"\n\n  AC_MSG_NOTICE([creating config_vars.mk])\n  test -d build || $mkdir_p build\n  > build/config_vars.mk\n  for i in $APACHE_VAR_SUBST; do\n    eval echo \"$i = \\$$i\" >> build/config_vars.mk\n  done\n])\n\ndnl\ndnl APACHE_TYPE_RLIM_T\ndnl\ndnl If rlim_t is not defined, define it to int\ndnl\nAC_DEFUN([APACHE_TYPE_RLIM_T], [\n  AC_CACHE_CHECK([for rlim_t], ac_cv_type_rlim_t, [\n    AC_TRY_COMPILE([\n#include <sys/types.h>\n#include <sys/time.h>\n#include <sys/resource.h>\n], [rlim_t spoon;], [\n      ac_cv_type_rlim_t=yes\n    ],[ac_cv_type_rlim_t=no\n    ])\n  ])\n  if test \"$ac_cv_type_rlim_t\" = \"no\" ; then\n      AC_DEFINE(rlim_t, int,\n          [Define to 'int' if <sys/resource.h> doesn't define it for us])\n  fi\n])\n\ndnl the list of build variables which are available for customization on a\ndnl per module subdir basis (to be inserted into modules.mk with a \"MOD_\"\ndnl prefix, i.e. MOD_CFLAGS etc.). Used in APACHE_MODPATH_{INIT,FINISH}.\ndefine(mod_buildvars, [CFLAGS CXXFLAGS CPPFLAGS LDFLAGS LIBS INCLUDES])\ndnl\ndnl APACHE_MODPATH_INIT(modpath)\nAC_DEFUN([APACHE_MODPATH_INIT],[\n  current_dir=$1\n  modpath_current=modules/$1\n  modpath_static=\n  modpath_shared=\n  for var in mod_buildvars; do\n    eval MOD_$var=\n  done\n  test -d $1 || $srcdir/build/mkdir.sh $modpath_current\n  > $modpath_current/modules.mk\n])dnl\ndnl\nAC_DEFUN([APACHE_MODPATH_FINISH],[\n  echo \"DISTCLEAN_TARGETS = modules.mk\" >> $modpath_current/modules.mk\n  echo \"static = $modpath_static\" >> $modpath_current/modules.mk\n  echo \"shared = $modpath_shared\" >> $modpath_current/modules.mk\n  for var in mod_buildvars; do\n    if eval val=\\\"\\$MOD_$var\\\"; test -n \"$val\"; then\n      echo \"MOD_$var = $val\" >> $modpath_current/modules.mk\n    fi\n  done\n  if test ! -z \"$modpath_static\" -o ! -z \"$modpath_shared\"; then\n    MODULE_DIRS=\"$MODULE_DIRS $current_dir\"\n  else\n    MODULE_CLEANDIRS=\"$MODULE_CLEANDIRS $current_dir\"\n  fi\n  APACHE_FAST_OUTPUT($modpath_current/Makefile)\n])dnl\ndnl\ndnl APACHE_MODPATH_ADD(name[, shared[, objects [, ldflags[, libs]]]])\nAC_DEFUN([APACHE_MODPATH_ADD],[\n  if test -z \"$3\"; then\n    objects=\"mod_$1.lo\"\n  else\n    objects=\"$3\"\n  fi\n\n  if test -z \"$module_standalone\"; then\n    if test -z \"$2\"; then\n      # The filename of a convenience library must have a \"lib\" prefix:\n      libname=\"libmod_$1.la\"\n      BUILTIN_LIBS=\"$BUILTIN_LIBS $modpath_current/$libname\"\n      modpath_static=\"$modpath_static $libname\"\n      cat >>$modpath_current/modules.mk<<EOF\n$libname: $objects\n\t\\$(MOD_LINK) $objects $5\nEOF\n      if test ! -z \"$5\"; then\n        APR_ADDTO(AP_LIBS, [$5])\n      fi\n    else\n      apache_need_shared=yes\n      libname=\"mod_$1.la\"\n      shobjects=`echo $objects | sed 's/\\.lo/.slo/g'`\n      modpath_shared=\"$modpath_shared $libname\"\n      cat >>$modpath_current/modules.mk<<EOF\n$libname: $shobjects\n\t\\$(SH_LINK) -rpath \\$(libexecdir) -module -avoid-version $4 $objects $5\nEOF\n    fi\n  fi\n])dnl\ndnl Same as APACHE_MODPATH_INIT/FINISH but for MPMs\ndnl APACHE_MPMPATH_INIT(mpmpath)\nAC_DEFUN([APACHE_MPMPATH_INIT],[\n  current_dir=$1\n  modpath_current=server/mpm/$1\n  modpath_static=\n  modpath_shared=\n  for var in mod_buildvars; do\n    eval MOD_$var=\n  done\n  test -d $1 || $srcdir/build/mkdir.sh $modpath_current\n  > $modpath_current/modules.mk\n])dnl\ndnl\nAC_DEFUN([APACHE_MPMPATH_FINISH],[\n  for var in mod_buildvars; do\n    if eval val=\\\"\\$MOD_$var\\\"; test -n \"$val\"; then\n      echo \"MOD_$var = $val\" >> $modpath_current/modules.mk\n    fi\n  done\n])dnl\n\ndnl\ndnl APACHE_MPM_MODULE(name[, shared[, objects[, config[, path[, libs]]]]])\ndnl\ndnl Provide information for building the MPM.  (Enablement is handled using\ndnl --with-mpm/--enable-mpms-shared.)\ndnl\ndnl name     -- name of MPM, same as MPM directory name\ndnl shared   -- \"shared\" to indicate shared module build, empty string otherwise\ndnl objects  -- one or more .lo files to link into the MPM module (default: mpmname.lo)\ndnl config   -- configuration logic to run if the MPM is enabled\ndnl path     -- relative path to MPM (default: server/mpm/mpmname)\ndnl libs     -- libs needed by this MPM\ndnl\nAC_DEFUN([APACHE_MPM_MODULE],[\n    if ap_mpm_is_enabled $1; then\n        if test -z \"$3\"; then\n            objects=\"$1.lo\"\n        else\n            objects=\"$3\"\n        fi\n\n        if test -z \"$5\"; then\n            mpmpath=\"server/mpm/$1\"\n        else\n            mpmpath=$5\n        fi\n\n        dnl VPATH support\n        test -d $mpmpath || $srcdir/build/mkdir.sh $mpmpath\n\n        APACHE_FAST_OUTPUT($mpmpath/Makefile)\n\n        if test -z \"$2\"; then\n            APR_ADDTO(AP_LIBS, [$6])\n            libname=\"lib$1.la\"\n            cat >>$mpmpath/modules.mk<<EOF\n$libname: $objects\n\t\\$(MOD_LINK) $objects\nDISTCLEAN_TARGETS = modules.mk\nstatic = $libname\nshared =\nEOF\n        else\n            apache_need_shared=yes\n            libname=\"mod_mpm_$1.la\"\n            shobjects=`echo $objects | sed 's/\\.lo/.slo/g'`\n            cat >>$mpmpath/modules.mk<<EOF\n$libname: $shobjects\n\t\\$(SH_LINK) -rpath \\$(libexecdir) -module -avoid-version $objects $6\nDISTCLEAN_TARGETS = modules.mk\nstatic =\nshared = $libname\nEOF\n            MPM_MODULES=\"$MPM_MODULES mpm_$1\"\n            # add default MPM to LoadModule list\n            if test $1 = $default_mpm; then\n                ENABLED_MPM_MODULE=\"mpm_$1\"\n            fi\n        fi\n        $4\n    fi\n])dnl\n\ndnl\ndnl APACHE_MODULE(name, helptext[, objects[, structname[, default[, config[, prereq_module]]]]])\ndnl\ndnl default is one of:\ndnl   yes    -- enabled by default. user must explicitly disable.\ndnl   no     -- disabled under default, most, all. user must explicitly enable.\ndnl   most   -- disabled by default. enabled explicitly or with most or all.\ndnl   static -- enabled as static by default, must be explicitly changed.\ndnl   \"\"     -- disabled under default, most. enabled explicitly or with all.\ndnl             XXX: The arg must really be empty here. Passing an empty shell\ndnl             XXX: variable doesn't work for some reason. This should be\ndnl             XXX: fixed.\ndnl\ndnl basically: yes/no is a hard setting. \"most\" means follow the \"most\"\ndnl            setting. otherwise, fall under the \"all\" setting.\ndnl            explicit yes/no always overrides, except if the user selects\ndnl            \"reallyall\".\ndnl\ndnl prereq_module is a module (without the \"mod_\" prefix) that must be enabled\ndnl   if the current module is enabled.  If the current module is built\ndnl   statically, prereq_module must be built statically, too.  If these\ndnl   conditions are not fulfilled, configure will abort if the current module\ndnl   has been enabled explicitly. Otherwise, configure will disable the\ndnl   current module.\ndnl   prereq_module's APACHE_MODULE() statement must have been processed\ndnl   before the current APACHE_MODULE() statement.\ndnl\nAC_DEFUN([APACHE_MODULE],[\n  AC_MSG_CHECKING(whether to enable mod_$1)\n  define([optname],[--]ifelse($5,yes,disable,enable)[-]translit($1,_,-))dnl\n  AC_ARG_ENABLE(translit($1,_,-),APACHE_HELP_STRING(optname(),$2),force_$1=$enableval,enable_$1=ifelse($5,,maybe-all,$5))\n  undefine([optname])dnl\n  _apmod_extra_msg=\"\"\n  dnl If the module was not explicitly requested, allow it to disable itself if\n  dnl its pre-reqs fail.\n  case \"$enable_$1\" in\n    yes|static|shared)\n      _apmod_required=\"yes\"\n      ;;\n    *)\n      _apmod_required=\"no\"\n      ;;\n  esac\n  if test \"$enable_$1\" = \"static\" -o \"$enable_$1\" = \"shared\"; then\n    :\n  elif test \"$enable_$1\" = \"yes\"; then\n    enable_$1=$module_default\n  elif test \"$enable_$1\" = \"few\"; then\n    if test \"$module_selection\" = \"few\" -o \"$module_selection\" = \"most\" -o \\\n            \"$module_selection\" = \"all\" -o \"$module_selection\" = \"reallyall\"\n    then\n      enable_$1=$module_default\n    else\n      enable_$1=no\n    fi\n    _apmod_extra_msg=\" ($module_selection)\"\n  elif test \"$enable_$1\" = \"most\"; then\n    if test \"$module_selection\" = \"most\" -o \"$module_selection\" = \"all\" -o \\\n            \"$module_selection\" = \"reallyall\"\n    then\n      enable_$1=$module_default\n    else\n      enable_$1=no\n    fi\n    _apmod_extra_msg=\" ($module_selection)\"\n  elif test \"$enable_$1\" = \"all\" -o \"$enable_$1\" = \"maybe-all\"; then\n    if test \"$module_selection\" = \"all\" -o \"$module_selection\" = \"reallyall\"\n    then\n      enable_$1=$module_default\n      _apmod_extra_msg=\" ($module_selection)\"\n    else\n      enable_$1=no\n    fi\n  elif test \"$enable_$1\" = \"reallyall\" -o \"$enable_$1\" = \"no\" ; then\n    if test \"$module_selection\" = \"reallyall\" -a \"$force_$1\" != \"no\" ; then\n      enable_$1=$module_default\n      _apmod_extra_msg=\" ($module_selection)\"\n    else\n      enable_$1=no\n    fi\n  else\n    enable_$1=no\n  fi\n  if test \"$enable_$1\" != \"no\"; then\n    dnl If we plan to enable it, allow the module to run some autoconf magic\n    dnl that may disable it because of missing dependencies.\n    ifelse([$6$7],,:,\n           [AC_MSG_RESULT([checking dependencies])\n            ifelse([$7],,:,[m4_foreach([prereq],[$7],\n                           [if test \"$enable_[]prereq\" = \"no\" ; then\n                              enable_$1=no\n                              AC_MSG_WARN(\"mod_[]prereq is disabled but required for mod_$1\")\n                            elif test \"$enable_$1\" = \"static\" && test \"$enable_[]prereq\" != \"static\" ; then\n                              enable_$1=$enable_[]prereq\n                              AC_MSG_WARN(\"building mod_$1 shared because mod_[]prereq is built shared\")\n                            el])se])\n            ifelse([$6],,:,[  $6])\n            ifelse([$7],,:,[fi])\n            AC_MSG_CHECKING(whether to enable mod_$1)\n            if test \"$enable_$1\" = \"no\"; then\n              if test \"$_apmod_required\" = \"no\"; then\n                _apmod_extra_msg=\" (disabled)\"\n              else\n                AC_MSG_ERROR([mod_$1 has been requested but can not be built due to prerequisite failures])\n              fi\n            fi])\n  fi\n  AC_MSG_RESULT($enable_$1$_apmod_extra_msg)\n  if test \"$enable_$1\" != \"no\"; then\n    case \"$enable_$1\" in\n    static*)\n      MODLIST=\"$MODLIST ifelse($4,,$1,$4)\"\n      if test \"$1\" = \"so\"; then\n          sharedobjs=yes\n      fi\n      shared=\"\";;\n    *)\n      sharedobjs=yes\n      shared=yes\n      DSO_MODULES=\"$DSO_MODULES $1\"\n      if test \"$5\" = \"yes\" ; then\n        ENABLED_DSO_MODULES=\"${ENABLED_DSO_MODULES},$1\"\n      fi\n      ;;\n    esac\n    define([modprefix], [MOD_]translit($1, [a-z-], [A-Z_]))\n    APACHE_MODPATH_ADD($1, $shared, $3,, [\\$(]modprefix[_LDADD)])\n    APACHE_SUBST(modprefix[_LDADD])\n    undefine([modprefix])\n  fi\n])dnl\n\ndnl\ndnl APACHE_ENABLE_MODULES\ndnl\nAC_DEFUN([APACHE_ENABLE_MODULES],[\n  module_selection=most\n  module_default=shared\n\n  dnl Check whether we have DSO support.\n  dnl If \"yes\", we build shared modules by default.\n  APR_CHECK_APR_DEFINE(APR_HAS_DSO)\n\n  if test $ac_cv_define_APR_HAS_DSO = \"no\"; then\n    AC_MSG_WARN([Missing DSO support - building static modules by default.])\n    module_default=static\n  fi\n\n\n  AC_ARG_ENABLE(modules,\n  APACHE_HELP_STRING(--enable-modules=MODULE-LIST,Space-separated list of modules to enable | \"all\" | \"most\" | \"few\" | \"none\" | \"reallyall\"),[\n    if test \"$enableval\" = \"none\"; then\n       module_default=no\n       module_selection=none\n    else\n      for i in $enableval; do\n        if test \"$i\" = \"all\" -o \"$i\" = \"most\" -o \"$i\" = \"few\" -o \"$i\" = \"reallyall\"\n        then\n          module_selection=$i\n        else\n          i=`echo $i | sed 's/-/_/g'`\n          eval \"enable_$i=shared\"\n        fi\n      done\n    fi\n  ])\n  \n  AC_ARG_ENABLE(mods-shared,\n  APACHE_HELP_STRING(--enable-mods-shared=MODULE-LIST,Space-separated list of shared modules to enable | \"all\" | \"most\" | \"few\" | \"reallyall\"),[\n    for i in $enableval; do\n      if test \"$i\" = \"all\" -o \"$i\" = \"most\" -o \"$i\" = \"few\" -o \"$i\" = \"reallyall\"\n      then\n        module_selection=$i\n        module_default=shared\n      else\n        i=`echo $i | sed 's/-/_/g'`\n    \teval \"enable_$i=shared\"\n      fi\n    done\n  ])\n  \n  AC_ARG_ENABLE(mods-static,\n  APACHE_HELP_STRING(--enable-mods-static=MODULE-LIST,Space-separated list of static modules to enable | \"all\" | \"most\" | \"few\" | \"reallyall\"),[\n    for i in $enableval; do\n      if test \"$i\" = \"all\" -o \"$i\" = \"most\" -o \"$i\" = \"few\" -o \"$i\" = \"reallyall\"; then\n        module_selection=$i\n        module_default=static\n      else\n        i=`echo $i | sed 's/-/_/g'`\n    \teval \"enable_$i=static\"\n      fi\n    done\n  ])\n])\n\nAC_DEFUN([APACHE_REQUIRE_CXX],[\n  if test -z \"$apache_cxx_done\"; then\n    AC_PROG_CXX\n    AC_PROG_CXXCPP\n    apache_cxx_done=yes\n  fi\n])\n\ndnl\ndnl APACHE_CHECK_OPENSSL\ndnl\ndnl Configure for OpenSSL, giving preference to\ndnl \"--with-ssl=<path>\" if it was specified.\ndnl\nAC_DEFUN([APACHE_CHECK_OPENSSL],[\n  AC_CACHE_CHECK([for OpenSSL], [ac_cv_openssl], [\n    dnl initialise the variables we use\n    ac_cv_openssl=no\n    ap_openssl_found=\"\"\n    ap_openssl_base=\"\"\n    ap_openssl_libs=\"\"\n    ap_openssl_mod_cflags=\"\"\n    ap_openssl_mod_ldflags=\"\"\n\n    dnl Determine the OpenSSL base directory, if any\n    AC_MSG_CHECKING([for user-provided OpenSSL base directory])\n    AC_ARG_WITH(ssl, APACHE_HELP_STRING(--with-ssl=PATH,OpenSSL installation directory), [\n      dnl If --with-ssl specifies a directory, we use that directory\n      if test \"x$withval\" != \"xyes\" -a \"x$withval\" != \"x\"; then\n        dnl This ensures $withval is actually a directory and that it is absolute\n        ap_openssl_base=\"`cd $withval ; pwd`\"\n      fi\n    ])\n    if test \"x$ap_openssl_base\" = \"x\"; then\n      AC_MSG_RESULT(none)\n    else\n      AC_MSG_RESULT($ap_openssl_base)\n    fi\n\n    dnl Run header and version checks\n    saved_CPPFLAGS=\"$CPPFLAGS\"\n    saved_LIBS=\"$LIBS\"\n    saved_LDFLAGS=\"$LDFLAGS\"\n\n    dnl Before doing anything else, load in pkg-config variables\n    if test -n \"$PKGCONFIG\"; then\n      saved_PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH\"\n      if test \"x$ap_openssl_base\" != \"x\"; then\n        if test -f \"${ap_openssl_base}/lib/pkgconfig/openssl.pc\"; then\n          dnl Ensure that the given path is used by pkg-config too, otherwise\n          dnl the system openssl.pc might be picked up instead.\n          PKG_CONFIG_PATH=\"${ap_openssl_base}/lib/pkgconfig${PKG_CONFIG_PATH+:}${PKG_CONFIG_PATH}\"\n          export PKG_CONFIG_PATH\n        elif test -f \"${ap_openssl_base}/lib64/pkgconfig/openssl.pc\"; then\n          dnl Ensure that the given path is used by pkg-config too, otherwise\n          dnl the system openssl.pc might be picked up instead.\n          PKG_CONFIG_PATH=\"${ap_openssl_base}/lib64/pkgconfig${PKG_CONFIG_PATH+:}${PKG_CONFIG_PATH}\"\n          export PKG_CONFIG_PATH\n        fi\n      fi\n      AC_ARG_ENABLE(ssl-staticlib-deps,APACHE_HELP_STRING(--enable-ssl-staticlib-deps,[link mod_ssl with dependencies of OpenSSL's static libraries (as indicated by \"pkg-config --static\"). Must be specified in addition to --enable-ssl.]), [\n        if test \"$enableval\" = \"yes\"; then\n          PKGCONFIG_LIBOPTS=\"--static\"\n        fi\n      ])\n      ap_openssl_libs=\"`$PKGCONFIG $PKGCONFIG_LIBOPTS --libs-only-l --silence-errors openssl`\"\n      if test $? -eq 0; then\n        ap_openssl_found=\"yes\"\n        pkglookup=\"`$PKGCONFIG --cflags-only-I openssl`\"\n        APR_ADDTO(CPPFLAGS, [$pkglookup])\n        APR_ADDTO(MOD_CFLAGS, [$pkglookup])\n        APR_ADDTO(ab_CFLAGS, [$pkglookup])\n        pkglookup=\"`$PKGCONFIG $PKGCONFIG_LIBOPTS --libs-only-L openssl`\"\n        APR_ADDTO(LDFLAGS, [$pkglookup])\n        APR_ADDTO(MOD_LDFLAGS, [$pkglookup])\n        pkglookup=\"`$PKGCONFIG $PKGCONFIG_LIBOPTS --libs-only-other openssl`\"\n        APR_ADDTO(LDFLAGS, [$pkglookup])\n        APR_ADDTO(MOD_LDFLAGS, [$pkglookup])\n      fi\n      PKG_CONFIG_PATH=\"$saved_PKG_CONFIG_PATH\"\n    fi\n\n    dnl fall back to the user-supplied directory if not found via pkg-config\n    if test \"x$ap_openssl_base\" != \"x\" -a \"x$ap_openssl_found\" = \"x\"; then\n      APR_ADDTO(CPPFLAGS, [-I$ap_openssl_base/include])\n      APR_ADDTO(MOD_CFLAGS, [-I$ap_openssl_base/include])\n      APR_ADDTO(ab_CFLAGS, [-I$ap_openssl_base/include])\n      APR_ADDTO(LDFLAGS, [-L$ap_openssl_base/lib])\n      APR_ADDTO(MOD_LDFLAGS, [-L$ap_openssl_base/lib])\n      if test \"x$ap_platform_runtime_link_flag\" != \"x\"; then\n        APR_ADDTO(LDFLAGS, [$ap_platform_runtime_link_flag$ap_openssl_base/lib])\n        APR_ADDTO(MOD_LDFLAGS, [$ap_platform_runtime_link_flag$ap_openssl_base/lib])\n      fi\n    fi\n\n    AC_MSG_CHECKING([for OpenSSL version >= 0.9.8a])\n    AC_TRY_COMPILE([#include <openssl/opensslv.h>],[\n#if !defined(OPENSSL_VERSION_NUMBER)\n#error \"Missing OpenSSL version\"\n#endif\n#if OPENSSL_VERSION_NUMBER < 0x0090801f\n#error \"Unsupported OpenSSL version \" OPENSSL_VERSION_TEXT\n#endif],\n      [AC_MSG_RESULT(yes)\n       ac_cv_openssl=yes],\n      [AC_MSG_RESULT(no)])\n\n    if test \"x$ac_cv_openssl\" = \"xyes\"; then\n      ap_openssl_libs=\"${ap_openssl_libs:--lssl -lcrypto} `$apr_config --libs`\"\n      APR_ADDTO(MOD_LDFLAGS, [$ap_openssl_libs])\n      APR_ADDTO(LIBS, [$ap_openssl_libs])\n      APR_SETVAR(ab_LIBS, [$MOD_LDFLAGS])\n      APACHE_SUBST(ab_CFLAGS)\n      APACHE_SUBST(ab_LIBS)\n\n      dnl Run library and function checks\n      liberrors=\"\"\n      AC_CHECK_HEADERS([openssl/engine.h])\n      AC_CHECK_FUNCS([SSL_CTX_new], [], [liberrors=\"yes\"])\n      AC_CHECK_FUNCS([OPENSSL_init_ssl])\n      AC_CHECK_FUNCS([ENGINE_init ENGINE_load_builtin_engines RAND_egd \\\n                      CRYPTO_set_id_callback])\n      if test \"x$liberrors\" != \"x\"; then\n        AC_MSG_WARN([OpenSSL libraries are unusable])\n      fi\n    else\n      AC_MSG_WARN([OpenSSL version is too old])\n    fi\n\n    dnl restore\n    CPPFLAGS=\"$saved_CPPFLAGS\"\n    LIBS=\"$saved_LIBS\"\n    LDFLAGS=\"$saved_LDFLAGS\"\n\n    dnl cache MOD_LDFLAGS, MOD_CFLAGS\n    ap_openssl_mod_cflags=$MOD_CFLAGS\n    ap_openssl_mod_ldflags=$MOD_LDFLAGS\n  ])\n  if test \"x$ac_cv_openssl\" = \"xyes\"; then\n    AC_DEFINE(HAVE_OPENSSL, 1, [Define if OpenSSL is available])\n    APR_ADDTO(MOD_LDFLAGS, [$ap_openssl_mod_ldflags])\n    APR_ADDTO(MOD_CFLAGS, [$ap_openssl_mod_cflags])\n  fi\n\n  dnl On most platforms, the default multithreading logic in OpenSSL 1.0.x uses\n  dnl a threadid that is based on the address of errno. We need to double-check\n  dnl that &errno is, in fact, different for each thread before using that\n  dnl default.\n  AC_CACHE_CHECK([if OpenSSL can use &errno as a THREADID],\n                 [ac_cv_openssl_use_errno_threadid], [\n    ac_cv_openssl_use_errno_threadid=no\n\n    save_CFLAGS=$CFLAGS\n    save_LIBS=$LIBS\n\n    CFLAGS=`$apr_config --cflags --cppflags --includes`\n    LIBS=`$apr_config --link-ld`\n\n    AC_RUN_IFELSE([\n      AC_LANG_PROGRAM([[\n          #include <stdlib.h>\n\n          #include \"apr_pools.h\"\n          #include \"apr_thread_cond.h\"\n          #include \"apr_thread_proc.h\"\n\n          #define NUM_THREADS 10\n\n          struct thread_data {\n              apr_thread_mutex_t *mutex;\n              apr_thread_cond_t  *cv;\n              int                *init_count;\n              void               *errno_addr;\n          };\n\n          /**\n           * Thread entry point. Waits for all the threads to be started, then\n           * records the address of errno into the thread_data.\n           */\n          void * APR_THREAD_FUNC tmain(apr_thread_t *thread, void *data)\n          {\n              struct thread_data *tdata = data;\n\n              /* The only point of this barrier is to make sure that all threads\n               * are started before we record &errno, hopefully preventing any\n               * false negatives in case a platform \"recycles\" threads. */\n              apr_thread_mutex_lock(tdata->mutex);\n              ++(*tdata->init_count);\n\n              if (*tdata->init_count == NUM_THREADS) {\n                  apr_thread_cond_broadcast(tdata->cv);\n              } else {\n                  while (*tdata->init_count != NUM_THREADS) {\n                      apr_thread_cond_wait(tdata->cv, tdata->mutex);\n                  }\n              }\n              apr_thread_mutex_unlock(tdata->mutex);\n\n              tdata->errno_addr = &errno;\n              return NULL;\n          }\n      ]], [[\n          int ret = 0;\n          apr_status_t status;\n          int i;\n          int j;\n\n          apr_pool_t         *pool;\n          apr_thread_mutex_t *mutex;\n          apr_thread_cond_t  *cv;\n          int                init_count = 0;\n\n          struct thread_data tdata[NUM_THREADS] = { 0 };\n          apr_thread_t *threads[NUM_THREADS] = { 0 };\n\n          if (apr_initialize() != APR_SUCCESS) {\n              exit(1);\n          }\n\n          /* Set up the shared APR primitives. */\n          if ((apr_pool_create(&pool, NULL) != APR_SUCCESS)\n              || (apr_thread_mutex_create(&mutex, 0, pool) != APR_SUCCESS)\n              || (apr_thread_cond_create(&cv, pool) != APR_SUCCESS)) {\n              ret = 2;\n              goto out;\n          }\n\n          /* Start every thread. */\n          for (i = 0; i < NUM_THREADS; ++i) {\n              tdata[i].mutex = mutex;\n              tdata[i].cv = cv;\n              tdata[i].init_count = &init_count;\n\n              status = apr_thread_create(&threads[i], NULL, tmain, &tdata[i],\n                                         pool);\n              if (status != APR_SUCCESS) {\n                  ret = 3;\n                  goto out;\n              }\n          }\n\n          /* Wait for them to finish (they'll record and exit after every one\n           * has been started). */\n          for (i = 0; i < NUM_THREADS; ++i) {\n              apr_thread_join(&status, threads[i]);\n              if (status != APR_SUCCESS) {\n                  ret = 4;\n                  goto out;\n              }\n          }\n\n          /* Check that no addresses were duplicated. */\n          for (i = 0; i < NUM_THREADS - 1; ++i) {\n              for (j = i + 1; j < NUM_THREADS; ++j) {\n                  if (tdata[i].errno_addr == tdata[j].errno_addr) {\n                      ret = 5;\n                      goto out;\n                  }\n              }\n          }\n\n      out:\n          apr_terminate();\n          exit(ret);\n      ]])\n    ], [\n      ac_cv_openssl_use_errno_threadid=yes\n    ], [\n      ac_cv_openssl_use_errno_threadid=no\n    ], [\n      dnl Assume the worst when cross-compiling; users can override via either\n      dnl cachevars or the config header if necessary.\n      ac_cv_openssl_use_errno_threadid=no\n    ])\n\n    CFLAGS=$save_CFLAGS\n    LIBS=$save_LIBS\n  ])\n  if test \"x$ac_cv_openssl_use_errno_threadid\" = \"xyes\"; then\n    AC_DEFINE(AP_OPENSSL_USE_ERRNO_THREADID, 1,\n              [Define if OpenSSL can use an errno-based threadid callback on this platform])\n  fi\n])\n\ndnl\ndnl APACHE_CHECK_SERF\ndnl\ndnl Configure for the detected libserf, giving preference to\ndnl \"--with-serf=<path>\" if it was specified.\ndnl\nAC_DEFUN([APACHE_CHECK_SERF], [\n  AC_CACHE_CHECK([for libserf], [ac_cv_serf], [\n    ac_cv_serf=no\n    serf_prefix=/usr\n    SERF_LIBS=\"\"\n    AC_ARG_WITH(serf, APACHE_HELP_STRING([--with-serf=PATH],\n                                    [Serf client library]),\n    [\n        if test \"$withval\" = \"yes\" ; then\n          serf_prefix=/usr\n        else\n          serf_prefix=$withval\n        fi\n    ])\n\n    if test \"$serf_prefix\" != \"no\" ; then\n      save_cppflags=\"$CPPFLAGS\"\n      CPPFLAGS=\"$CPPFLAGS $APR_INCLUDES $APU_INCLUDES -I$serf_prefix/include/serf-0\"\n      AC_CHECK_HEADERS(serf.h,[\n        save_ldflags=\"$LDFLAGS\"\n        LDFLAGS=\"$LDFLAGS -L$serf_prefix/lib\"\n        AC_CHECK_LIB(serf-0, serf_context_create,[ac_cv_serf=\"yes\"])\n        LDFLAGS=\"$save_ldflags\"])\n      CPPFLAGS=\"$save_cppflags\"\n    fi\n  ])\n\n  APACHE_SUBST(SERF_LIBS)\n  if test \"$ac_cv_serf\" = \"yes\"; then\n    AC_DEFINE(HAVE_SERF, 1, [Define if libserf is available])\n    APR_SETVAR(SERF_LIBS, [-L$serf_prefix/lib -lserf-0])\n    APR_ADDTO(MOD_INCLUDES, [-I$serf_prefix/include/serf-0])\n  fi\n])\n\nAC_DEFUN([APACHE_CHECK_SYSTEMD], [\ndnl Check for systemd support for listen.c's socket activation.\ncase $host in\n*-linux-*)\n   if test -n \"$PKGCONFIG\" && $PKGCONFIG --exists libsystemd; then\n      SYSTEMD_LIBS=`$PKGCONFIG --libs libsystemd`\n   elif test -n \"$PKGCONFIG\" && $PKGCONFIG --exists libsystemd-daemon; then\n      SYSTEMD_LIBS=`$PKGCONFIG --libs libsystemd-daemon`\n   else\n      AC_CHECK_LIB(systemd-daemon, sd_notify, SYSTEMD_LIBS=\"-lsystemd-daemon\")\n   fi\n   if test -n \"$SYSTEMD_LIBS\"; then\n      AC_CHECK_HEADERS(systemd/sd-daemon.h)\n      if test \"${ac_cv_header_systemd_sd_daemon_h}\" = \"no\"; then\n        AC_MSG_WARN([Your system does not support systemd.])\n      else\n        AC_DEFINE(HAVE_SYSTEMD, 1, [Define if systemd is supported])\n      fi\n   fi\n   ;;\nesac\n])\n\ndnl\ndnl APACHE_EXPORT_ARGUMENTS\ndnl Export (via APACHE_SUBST) the various path-related variables that\ndnl apache will use while generating scripts like autoconf and apxs and\ndnl the default config file.\n\nAC_DEFUN([APACHE_SUBST_EXPANDED_ARG],[\n  APR_EXPAND_VAR(exp_$1, [$]$1)\n  APACHE_SUBST(exp_$1)\n  APR_PATH_RELATIVE(rel_$1, [$]exp_$1, ${prefix})\n  APACHE_SUBST(rel_$1)\n])\n\nAC_DEFUN([APACHE_EXPORT_ARGUMENTS],[\n  APACHE_SUBST_EXPANDED_ARG(exec_prefix)\n  APACHE_SUBST_EXPANDED_ARG(bindir)\n  APACHE_SUBST_EXPANDED_ARG(sbindir)\n  APACHE_SUBST_EXPANDED_ARG(libdir)\n  APACHE_SUBST_EXPANDED_ARG(libexecdir)\n  APACHE_SUBST_EXPANDED_ARG(mandir)\n  APACHE_SUBST_EXPANDED_ARG(sysconfdir)\n  APACHE_SUBST_EXPANDED_ARG(datadir)\n  APACHE_SUBST_EXPANDED_ARG(installbuilddir)\n  APACHE_SUBST_EXPANDED_ARG(errordir)\n  APACHE_SUBST_EXPANDED_ARG(iconsdir)\n  APACHE_SUBST_EXPANDED_ARG(htdocsdir)\n  APACHE_SUBST_EXPANDED_ARG(manualdir)\n  APACHE_SUBST_EXPANDED_ARG(cgidir)\n  APACHE_SUBST_EXPANDED_ARG(includedir)\n  APACHE_SUBST_EXPANDED_ARG(localstatedir)\n  APACHE_SUBST_EXPANDED_ARG(runtimedir)\n  APACHE_SUBST_EXPANDED_ARG(logfiledir)\n  APACHE_SUBST_EXPANDED_ARG(proxycachedir)\n  APACHE_SUBST_EXPANDED_ARG(statedir)\n])\n\ndnl \ndnl APACHE_CHECK_APxVER({apr|apu}, major, minor, \ndnl                     [actions-if-ok], [actions-if-not-ok])\ndnl\ndnl Checks for APR or APR-util of given major/minor version or later; \ndnl if so, runs actions-if-ok; otherwise runs actions-if-not-ok if given.\ndnl If the version is not satisfactory and actions-if-not-ok is not\ndnl given, then an error is printed and the configure script is aborted.\ndnl\ndnl The first argument must be [apr] or [apu].\ndnl\nAC_DEFUN([APACHE_CHECK_APxVER], [\ndefine(ap_ckver_major, translit($1, [apru], [APRU])[_MAJOR_VERSION])\ndefine(ap_ckver_minor, translit($1, [apru], [APRU])[_MINOR_VERSION])\ndefine(ap_ckver_cvar, [ap_cv_$1ver$2$3])\ndefine(ap_ckver_name, ifelse([$1],[apr],[APR],[APR-util]))\n\nap_ckver_CPPFLAGS=\"$CPPFLAGS\"\nCPPFLAGS=\"$CPPFLAGS `$[$1]_config --includes`\"\n\nAC_CACHE_CHECK([for ap_ckver_name version $2.$3.0 or later], ap_ckver_cvar, [\nAC_EGREP_CPP([good], [\n#include <$1_version.h>\n#if ]ap_ckver_major[ > $2 || (]ap_ckver_major[ == $2 && ]ap_ckver_minor[ >= $3)\ngood\n#endif\n], [ap_ckver_cvar=yes], [ap_ckver_cvar=no])])\n\nif test \"$ap_ckver_cvar\" = \"yes\"; then\n  ifelse([$4],[],[:],[$4])\nelse\n  ifelse([$5],[],[AC_MSG_ERROR([ap_ckver_name version $2.$3.0 or later is required])], [$5])\nfi\n\nCPPFLAGS=\"$ap_ckver_CPPFLAGS\"\n\nundefine([ap_ckver_major])\nundefine([ap_ckver_minor])\nundefine([ap_ckver_cvar])\nundefine([ap_ckver_name])\n])\n\ndnl\ndnl APACHE_CHECK_VOID_PTR_LEN\ndnl\ndnl Checks if the size of a void pointer is at least as big as a \"long\" \ndnl integer type.\ndnl\nAC_DEFUN([APACHE_CHECK_VOID_PTR_LEN], [\n\nAC_CACHE_CHECK([for void pointer length], [ap_cv_void_ptr_lt_long],\n[AC_TRY_RUN([\nint main(void)\n{\n    return sizeof(void *) < sizeof(long); \n}], [ap_cv_void_ptr_lt_long=no], [ap_cv_void_ptr_lt_long=yes], \n    [ap_cv_void_ptr_lt_long=\"cross compile - not checked\"])])\n\nif test \"$ap_cv_void_ptr_lt_long\" = \"yes\"; then\n    AC_MSG_ERROR([Size of \"void *\" is less than size of \"long\"])\nfi\n])\n\ndnl\ndnl APACHE_CHECK_APR_HAS_LDAP\ndnl\ndnl Check if APR_HAS_LDAP is 1\ndnl Unfortunately, we can't use APR_CHECK_APR_DEFINE (because it only includes apr.h)\ndnl or APR_CHECK_DEFINE (because it only checks for defined'ness and not for 0/1).\ndnl\nAC_DEFUN([APACHE_CHECK_APR_HAS_LDAP], [\n  AC_CACHE_CHECK([for ldap support in apr/apr-util],ac_cv_APR_HAS_LDAP,[\n    apache_old_cppflags=\"$CPPFLAGS\"\n    CPPFLAGS=\"$CPPFLAGS $INCLUDES\"\n    AC_EGREP_CPP(YES_IS_DEFINED, [\n#include <apr_ldap.h>\n#if APR_HAS_LDAP\nYES_IS_DEFINED\n#endif\n    ], ac_cv_APR_HAS_LDAP=yes, ac_cv_APR_HAS_LDAP=no)\n    CPPFLAGS=\"$apache_old_cppflags\"\n  ])\n])\n\ndnl\ndnl APACHE_ADD_GCC_CFLAG\ndnl\ndnl Check if compiler is gcc and supports flag. If yes, add to NOTEST_CFLAGS.\ndnl NOTEST_CFLAGS is merged lately, thus it won't accumulate in CFLAGS here.\ndnl Also, AC_LANG_PROGRAM() itself is known to trigger [-Wstrict-prototypes]\ndnl with some autoconf versions, so we force -Wno-strict-prototypes for the\ndnl check to avoid spurious failures when adding flags like -Werror.\ndnl\nAC_DEFUN([APACHE_ADD_GCC_CFLAG], [\n  define([ap_gcc_ckvar], [ac_cv_gcc_]translit($1, [-:.=], [____]))\n  if test \"$GCC\" = \"yes\"; then\n    AC_CACHE_CHECK([whether gcc accepts $1], ap_gcc_ckvar, [\n      save_CFLAGS=\"$CFLAGS\"\n      CFLAGS=\"$CFLAGS $1 -Wno-strict-prototypes\"\n      AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],\n        [ap_gcc_ckvar=yes], [ap_gcc_ckvar=no])\n      CFLAGS=\"$save_CFLAGS\"\n    ])\n    if test \"$]ap_gcc_ckvar[\" = \"yes\" ; then\n       APR_ADDTO(NOTEST_CFLAGS,[$1])\n    fi\n  fi\n  undefine([ap_gcc_ckvar])\n])\n\n\ndnl\ndnl APACHE_CHECK_JANSSON\ndnl\ndnl Configure for libjansson, giving preference to\ndnl \"--with-jansson=<path>\" if it was specified.\ndnl\nAC_DEFUN([APACHE_CHECK_JANSSON],[\n  AC_CACHE_CHECK([for jansson], [ac_cv_jansson], [\n    dnl initialise the variables we use\n    ac_cv_jansson=no\n    ap_jansson_found=\"\"\n    ap_jansson_base=\"\"\n    ap_jansson_libs=\"\"\n\n    dnl Determine the jansson base directory, if any\n    AC_MSG_CHECKING([for user-provided jansson base directory])\n    AC_ARG_WITH(jansson, APACHE_HELP_STRING(--with-jansson=PATH, jansson installation directory), [\n      dnl If --with-jansson specifies a directory, we use that directory\n      if test \"x$withval\" != \"xyes\" -a \"x$withval\" != \"x\"; then\n        dnl This ensures $withval is actually a directory and that it is absolute\n        ap_jansson_base=\"`cd $withval ; pwd`\"\n      fi\n    ])\n    if test \"x$ap_jansson_base\" = \"x\"; then\n      AC_MSG_RESULT(none)\n    else\n      AC_MSG_RESULT($ap_jansson_base)\n    fi\n\n    dnl Run header and version checks\n    saved_CPPFLAGS=\"$CPPFLAGS\"\n    saved_LIBS=\"$LIBS\"\n    saved_LDFLAGS=\"$LDFLAGS\"\n\n    dnl Before doing anything else, load in pkg-config variables\n    if test -n \"$PKGCONFIG\"; then\n      saved_PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH\"\n      AC_MSG_CHECKING([for pkg-config along $PKG_CONFIG_PATH])\n      if test \"x$ap_jansson_base\" != \"x\" ; then\n        if test -f \"${ap_jansson_base}/lib/pkgconfig/libjansson.pc\"; then\n          dnl Ensure that the given path is used by pkg-config too, otherwise\n          dnl the system libjansson.pc might be picked up instead.\n          PKG_CONFIG_PATH=\"${ap_jansson_base}/lib/pkgconfig${PKG_CONFIG_PATH+:}${PKG_CONFIG_PATH}\"\n          export PKG_CONFIG_PATH\n        elif test -f \"${ap_jansson_base}/lib64/pkgconfig/libjansson.pc\"; then\n          dnl Ensure that the given path is used by pkg-config too, otherwise\n          dnl the system libjansson.pc might be picked up instead.\n          PKG_CONFIG_PATH=\"${ap_jansson_base}/lib64/pkgconfig${PKG_CONFIG_PATH+:}${PKG_CONFIG_PATH}\"\n          export PKG_CONFIG_PATH\n        fi\n      fi\n      AC_ARG_ENABLE(jansson-staticlib-deps,APACHE_HELP_STRING(--enable-jansson-staticlib-deps,[link mod_md with dependencies of libjansson's static libraries (as indicated by \"pkg-config --static\"). Must be specified in addition to --enable-md.]), [\n        if test \"$enableval\" = \"yes\"; then\n          PKGCONFIG_LIBOPTS=\"--static\"\n        fi\n      ])\n      ap_jansson_libs=\"`$PKGCONFIG $PKGCONFIG_LIBOPTS --libs-only-l --silence-errors libjansson`\"\n      if test $? -eq 0; then\n        ap_jansson_found=\"yes\"\n        pkglookup=\"`$PKGCONFIG --cflags-only-I libjansson`\"\n        APR_ADDTO(CPPFLAGS, [$pkglookup])\n        APR_ADDTO(MOD_CFLAGS, [$pkglookup])\n        pkglookup=\"`$PKGCONFIG $PKGCONFIG_LIBOPTS --libs-only-L libjansson`\"\n        APR_ADDTO(LDFLAGS, [$pkglookup])\n        APR_ADDTO(MOD_LDFLAGS, [$pkglookup])\n        pkglookup=\"`$PKGCONFIG $PKGCONFIG_LIBOPTS --libs-only-other libjansson`\"\n        APR_ADDTO(LDFLAGS, [$pkglookup])\n        APR_ADDTO(MOD_LDFLAGS, [$pkglookup])\n      fi\n      PKG_CONFIG_PATH=\"$saved_PKG_CONFIG_PATH\"\n    fi\n\n    dnl fall back to the user-supplied directory if not found via pkg-config\n    if test \"x$ap_jansson_base\" != \"x\" -a \"x$ap_jansson_found\" = \"x\"; then\n      APR_ADDTO(CPPFLAGS, [-I$ap_jansson_base/include])\n      APR_ADDTO(MOD_CFLAGS, [-I$ap_jansson_base/include])\n      APR_ADDTO(LDFLAGS, [-L$ap_jansson_base/lib])\n      APR_ADDTO(MOD_LDFLAGS, [-L$ap_jansson_base/lib])\n      if test \"x$ap_platform_runtime_link_flag\" != \"x\"; then\n        APR_ADDTO(LDFLAGS, [$ap_platform_runtime_link_flag$ap_jansson_base/lib])\n        APR_ADDTO(MOD_LDFLAGS, [$ap_platform_runtime_link_flag$ap_jansson_base/lib])\n      fi\n    fi\n\n    # attempts to include jansson.h fail me. So lets make sure we can at least\n    # include its other header file\n    AC_TRY_COMPILE([#include <jansson_config.h>],[],\n      [AC_MSG_RESULT(OK) \n       ac_cv_jansson=yes], \n       [AC_MSG_RESULT(FAILED)])\n\n    if test \"x$ac_cv_jansson\" = \"xyes\"; then\n      ap_jansson_libs=\"${ap_jansson_libs:--ljansson} `$apr_config --libs`\"\n    fi\n\n    dnl restore\n    CPPFLAGS=\"$saved_CPPFLAGS\"\n    LIBS=\"$saved_LIBS\"\n    LDFLAGS=\"$saved_LDFLAGS\"\n  ])\n  if test \"x$ac_cv_jansson\" = \"xyes\"; then\n    AC_DEFINE(HAVE_JANSSON, 1, [Define if jansson is available])\n  fi\n])\n"
        },
        {
          "name": "ap.d",
          "type": "blob",
          "size": 2.453125,
          "content": "#pragma D depends_on provider io\ntypedef struct request_rec {\n    uintptr_t pool;\n    uintptr_t connection;\n    uintptr_t server;\n    uintptr_t next;\n    uintptr_t prev;\n    uintptr_t main;\n    char *the_request;\n    int assbackwards;\n    int proxyreq;\n    int header_only;\n    char *protocol;\n    int proto_num;\n    char *hostname;\n    int64_t request_time;\n    char *status_line;\n    int status;\n    const char *method;\n    int method_number;\n    int64_t allowed;\n    uintptr_t allowed_xmethods;\n    uintptr_t allowed_methods;\n    offset_t sent_bodyct;\n    offset_t bytes_sent;\n    int64_t mtime;\n    int chunked;\n    char *range;\n    offset_t clength;\n    offset_t remaining;\n    offset_t read_length;\n    int read_body;\n    int read_chunked;\n    unsigned expecting_100;\n    uintptr_t headers_in;\n    uintptr_t headers_out;\n    uintptr_t err_headers_out;\n    uintptr_t subprocess_env;\n    uintptr_t notes;\n    char *content_type;   /* Break these out --- we dispatch on 'em */\n    char *handler;        /* What we *really* dispatch on */\n    char *content_encoding;\n    uintptr_t content_languages;\n    char *vlist_validator;\n    char *user;\n    char *ap_auth_type;\n    int no_cache;\n    int no_local_copy;\n    char *unparsed_uri;\n    char *uri;\n    char *filename;\n    char *canonical_filename;\n    char *path_info;\n    char *args;\n    /* finfo */\n    uintptr_t finfo_pool;\n    int32_t finfo_valid;\n    int32_t finfo_protection;\n    int32_t finfo_filetype;\n    int finfo_user;\n    int finfo_group;\n    uint64_t finfo_inode;\n    uint64_t finfo_device;\n    int32_t finfo_nlink;\n    offset_t finfo_size;\n    offset_t finfo_csize;\n    int64_t finfo_atime;\n    int64_t finfo_mtime;\n    int64_t finfo_ctime;\n    char *finfo_fname;\n    char *finfo_name;\n    uintptr_t finfo_ffilehand;\n    /* parsed_uri */\n    char *uri_scheme;\n    char *uri_hostinfo;\n    char *uri_user;\n    char *uri_password;\n    char *uri_hostname;\n    char *uri_port_str;\n    char *uri_path;\n    char *uri_query;\n    char *uri_fragment;\n    uintptr_t uri_hostent;\n    uint16_t uri_port;\n    unsigned uri_is_initialized:1;\n    unsigned uri_dns_looked_up:1;\n    unsigned uri_dns_resolved:1;\n\n    /* back to request_rec */\n    int used_path_info;\n    uintptr_t per_dir_config;\n    uintptr_t request_config;\n    uintptr_t htaccess;\n    uintptr_t output_filters;\n    uintptr_t input_filters;\n    uintptr_t proto_output_filters;\n    uintptr_t proto_input_filters;\n    int eos_sent;\n    uintptr_t kept_body;\n    uintptr_t invoke_mtx;\n} request_rec;\n\n"
        },
        {
          "name": "apache_probes.d",
          "type": "blob",
          "size": 9.6748046875,
          "content": "provider ap {\n  /* Explicit, core */\n  probe internal__redirect(char *, char *);\n  probe process__request__entry(uintptr_t, char *);\n  probe process__request__return(uintptr_t, char *, uint32_t);\n  probe read__request__entry(uintptr_t, uintptr_t);\n  probe read__request__success(uintptr_t, char *, char *, char *, uint32_t);\n  probe read__request__failure(uintptr_t);\n\n  /* Explicit, modules */\n  probe proxy__run(uintptr_t, uintptr_t, uintptr_t, char *, int);\n  probe proxy__run__finished(uintptr_t, int, int);\n  probe rewrite__log(uintptr_t, int, int, char *, char *);\n\n  /* Implicit, APR hooks */\n  probe access_checker__entry();\n  probe access_checker__dispatch__invoke(char *);\n  probe access_checker__dispatch__complete(char *, uint32_t);\n  probe access_checker__return(uint32_t);\n  probe auth_checker__entry();\n  probe auth_checker__dispatch__invoke(char *);\n  probe auth_checker__dispatch__complete(char *, uint32_t);\n  probe auth_checker__return(uint32_t);\n  probe check_config__entry();\n  probe check_config__dispatch__invoke(char *);\n  probe check_config__dispatch__complete(char *, uint32_t);\n  probe check_config__return(uint32_t);\n  probe check_user_id__entry();\n  probe check_user_id__dispatch__invoke(char *);\n  probe check_user_id__dispatch__complete(char *, uint32_t);\n  probe check_user_id__return(uint32_t);\n  probe child_init__entry();\n  probe child_init__dispatch__invoke(char *);\n  probe child_init__dispatch__complete(char *, uint32_t);\n  probe child_init__return(uint32_t);\n  probe create_connection__entry();\n  probe create_connection__dispatch__invoke(char *);\n  probe create_connection__dispatch__complete(char *, uint32_t);\n  probe create_connection__return(uint32_t);\n  probe create_request__entry();\n  probe create_request__dispatch__invoke(char *);\n  probe create_request__dispatch__complete(char *, uint32_t);\n  probe create_request__return(uint32_t);\n  probe default_port__entry();\n  probe default_port__dispatch__invoke(char *);\n  probe default_port__dispatch__complete(char *, uint32_t);\n  probe default_port__return(uint32_t);\n  probe drop_privileges__entry();\n  probe drop_privileges__dispatch__invoke(char *);\n  probe drop_privileges__dispatch__complete(char *, uint32_t);\n  probe drop_privileges__return(uint32_t);\n  probe error_log__entry();\n  probe error_log__dispatch__invoke(char *);\n  probe error_log__dispatch__complete(char *, uint32_t);\n  probe error_log__return(uint32_t);\n  probe fatal_exception__entry();\n  probe fatal_exception__dispatch__invoke(char *);\n  probe fatal_exception__dispatch__complete(char *, uint32_t);\n  probe fatal_exception__return(uint32_t);\n  probe fixups__entry();\n  probe fixups__dispatch__invoke(char *);\n  probe fixups__dispatch__complete(char *, uint32_t);\n  probe fixups__return(uint32_t);\n  probe get_mgmt_items__entry();\n  probe get_mgmt_items__dispatch__invoke(char *);\n  probe get_mgmt_items__dispatch__complete(char *, uint32_t);\n  probe get_mgmt_items__return(uint32_t);\n  probe get_suexec_identity__entry();\n  probe get_suexec_identity__dispatch__invoke(char *);\n  probe get_suexec_identity__dispatch__complete(char *, uint32_t);\n  probe get_suexec_identity__return(uint32_t);\n  probe handler__entry();\n  probe handler__dispatch__invoke(char *);\n  probe handler__dispatch__complete(char *, uint32_t);\n  probe handler__return(uint32_t);\n  probe header_parser__entry();\n  probe header_parser__dispatch__invoke(char *);\n  probe header_parser__dispatch__complete(char *, uint32_t);\n  probe header_parser__return(uint32_t);\n  probe http_scheme__entry();\n  probe http_scheme__dispatch__invoke(char *);\n  probe http_scheme__dispatch__complete(char *, uint32_t);\n  probe http_scheme__return(uint32_t);\n  probe insert_error_filter__entry();\n  probe insert_error_filter__dispatch__invoke(char *);\n  probe insert_error_filter__dispatch__complete(char *, uint32_t);\n  probe insert_error_filter__return(uint32_t);\n  probe insert_filter__entry();\n  probe insert_filter__dispatch__invoke(char *);\n  probe insert_filter__dispatch__complete(char *, uint32_t);\n  probe insert_filter__return(uint32_t);\n  probe log_transaction__entry();\n  probe log_transaction__dispatch__invoke(char *);\n  probe log_transaction__dispatch__complete(char *, uint32_t);\n  probe log_transaction__return(uint32_t);\n  probe map_to_storage__entry();\n  probe map_to_storage__dispatch__invoke(char *);\n  probe map_to_storage__dispatch__complete(char *, uint32_t);\n  probe map_to_storage__return(uint32_t);\n  probe monitor__entry();\n  probe monitor__dispatch__invoke(char *);\n  probe monitor__dispatch__complete(char *, uint32_t);\n  probe monitor__return(uint32_t);\n  probe mpm__entry();\n  probe mpm__dispatch__invoke(char *);\n  probe mpm__dispatch__complete(char *, uint32_t);\n  probe mpm__return(uint32_t);\n  probe mpm_get_name__entry();\n  probe mpm_get_name__dispatch__invoke(char *);\n  probe mpm_get_name__dispatch__complete(char *, uint32_t);\n  probe mpm_get_name__return(uint32_t);\n  probe mpm_note_child_killed__entry();\n  probe mpm_note_child_killed__dispatch__invoke(char *);\n  probe mpm_note_child_killed__dispatch__complete(char *, uint32_t);\n  probe mpm_note_child_killed__return(uint32_t);\n  probe mpm_register_timed_callback__entry();\n  probe mpm_register_timed_callback__dispatch__invoke(char *);\n  probe mpm_register_timed_callback__dispatch__complete(char *, uint32_t);\n  probe mpm_register_timed_callback__return(uint32_t);\n  probe mpm_query__entry();\n  probe mpm_query__dispatch__invoke(char *);\n  probe mpm_query__dispatch__complete(char *, uint32_t);\n  probe mpm_query__return(uint32_t);\n  probe open_logs__entry();\n  probe open_logs__dispatch__invoke(char *);\n  probe open_logs__dispatch__complete(char *, uint32_t);\n  probe open_logs__return(uint32_t);\n  probe optional_fn_retrieve__entry();\n  probe optional_fn_retrieve__dispatch__invoke(char *);\n  probe optional_fn_retrieve__dispatch__complete(char *, uint32_t);\n  probe optional_fn_retrieve__return(uint32_t);\n  probe post_config__entry();\n  probe post_config__dispatch__invoke(char *);\n  probe post_config__dispatch__complete(char *, uint32_t);\n  probe post_config__return(uint32_t);\n  probe post_read_request__entry();\n  probe post_read_request__dispatch__invoke(char *);\n  probe post_read_request__dispatch__complete(char *, uint32_t);\n  probe post_read_request__return(uint32_t);\n  probe pre_config__entry();\n  probe pre_config__dispatch__invoke(char *);\n  probe pre_config__dispatch__complete(char *, uint32_t);\n  probe pre_config__return(uint32_t);\n  probe pre_connection__entry();\n  probe pre_connection__dispatch__invoke(char *);\n  probe pre_connection__dispatch__complete(char *, uint32_t);\n  probe pre_connection__return(uint32_t);\n  probe pre_mpm__entry();\n  probe pre_mpm__dispatch__invoke(char *);\n  probe pre_mpm__dispatch__complete(char *, uint32_t);\n  probe pre_mpm__return(uint32_t);\n  probe process_connection__entry();\n  probe process_connection__dispatch__invoke(char *);\n  probe process_connection__dispatch__complete(char *, uint32_t);\n  probe process_connection__return(uint32_t);\n  probe quick_handler__entry();\n  probe quick_handler__dispatch__invoke(char *);\n  probe quick_handler__dispatch__complete(char *, uint32_t);\n  probe quick_handler__return(uint32_t);\n  probe test_config__entry();\n  probe test_config__dispatch__invoke(char *);\n  probe test_config__dispatch__complete(char *, uint32_t);\n  probe test_config__return(uint32_t);\n  probe translate_name__entry();\n  probe translate_name__dispatch__invoke(char *);\n  probe translate_name__dispatch__complete(char *, uint32_t);\n  probe translate_name__return(uint32_t);\n  probe type_checker__entry();\n  probe type_checker__dispatch__invoke(char *);\n  probe type_checker__dispatch__complete(char *, uint32_t);\n  probe type_checker__return(uint32_t);\n\n  /* Implicit, APR hooks for proxy */\n  probe canon_handler__entry();\n  probe canon_handler__dispatch__invoke(char *);\n  probe canon_handler__dispatch__complete(char *, uint32_t);\n  probe canon_handler__return(uint32_t);\n  probe post_request__entry();\n  probe post_request__dispatch__invoke(char *);\n  probe post_request__dispatch__complete(char *, uint32_t);\n  probe post_request__return(uint32_t);\n  probe pre_request__entry();\n  probe pre_request__dispatch__invoke(char *);\n  probe pre_request__dispatch__complete(char *, uint32_t);\n  probe pre_request__return(uint32_t);\n  probe scheme_handler__entry();\n  probe scheme_handler__dispatch__invoke(char *);\n  probe scheme_handler__dispatch__complete(char *, uint32_t);\n  probe scheme_handler__return(uint32_t);\n\n  /* Implicit, APR hooks for dav */\n  probe find_liveprop__entry();\n  probe find_liveprop__dispatch__invoke(char *);\n  probe find_liveprop__dispatch__complete(char *, uint32_t);\n  probe find_liveprop__return(uint32_t);\n  probe gather_propsets__entry();\n  probe gather_propsets__dispatch__invoke(char *);\n  probe gather_propsets__dispatch__complete(char *, uint32_t);\n  probe gather_propsets__return(uint32_t);\n  probe insert_all_liveprops__entry();\n  probe insert_all_liveprops__dispatch__invoke(char *);\n  probe insert_all_liveprops__dispatch__complete(char *, uint32_t);\n  probe insert_all_liveprops__return(uint32_t);\n\n  /* Implicit, APR hooks for watchdog */\n  probe watchdog_exit__entry();\n  probe watchdog_exit__dispatch__invoke(char *);\n  probe watchdog_exit__dispatch__complete(char *, uint32_t);\n  probe watchdog_exit__return(uint32_t);\n  probe watchdog_init__entry();\n  probe watchdog_init__dispatch__invoke(char *);\n  probe watchdog_init__dispatch__complete(char *, uint32_t);\n  probe watchdog_init__return(uint32_t);\n  probe watchdog_need__entry();\n  probe watchdog_need__dispatch__invoke(char *);\n  probe watchdog_need__dispatch__complete(char *, uint32_t);\n  probe watchdog_need__return(uint32_t);\n  probe watchdog_step__entry();\n  probe watchdog_step__dispatch__invoke(char *);\n  probe watchdog_step__dispatch__complete(char *, uint32_t);\n  probe watchdog_step__return(uint32_t);\n};\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "buildconf",
          "type": "blob",
          "size": 10.6337890625,
          "content": "#!/bin/sh\n#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n#\n# buildconf: Build the support scripts needed to compile from a\n#            checked-out version of the source code.\n\n# version check for AC_PROG_CC_C99\nac_version=`${AUTOCONF:-autoconf} --version 2>/dev/null|sed -e 's/^[^0-9]*//;s/[a-z]* *$//;q'`\ncase \"$ac_version\" in\n# versions older than 2.50 are denied by AC_PREREQ\n2.5*)\n    echo WARNING: You are using an outdated version of autoconf.\n    echo WARNING: This may lead to less than optimal performance of httpd.\n    echo WARNING: You should use autoconf 2.60 or newer.\n    sleep 1\n    ;;\nesac\n\n# set a couple of defaults for where we should be looking for our support libs.\n# can be overridden with --with-apr=[dir] and --with-apr-util=[dir]\n\napr_src_dir=\"srclib/apr ../apr\"\napu_src_dir=\"\"\n\n# By default, touch the checked-in sources to suppress regeneration of\n# the ap_expr parser.\nregen_expr=no\n\nwhile test $# -gt 0 \ndo\n    # Normalize\n    case \"$1\" in\n    -*=*) optarg=`echo \"$1\" | sed 's/[-_a-zA-Z0-9]*=//'` ;;\n    *) optarg= ;;\n    esac\n\n    case \"$1\" in\n    --with-apr=*)\n        apr_src_dir=$optarg\n        ;;\n\n    --with-apr-util=*)\n        apu_src_dir=$optarg\n        ;;\n\n    --with-regen-expr)\n        regen_expr=yes\n        ;;\n    \n    -h|--help)\n        cat <<EOF\nbuildconf: generates the files needed to configure httpd.\n\nUsage: $0 [OPTION]...\n\nConfiguration:\n  -h, --help               display this help and exit\n\n  --with-apr=SRCDIR        define a space-separated list of directories to\n                           search for the APR source code. If, instead of a\n                           directory, an apr-config executable name is passed,\n                           APR-Config Mode is enabled (see below). Defaults to\n                           \"srclib/apr ../apr\"\n  --with-apr-util=SRCDIR   define a space-separated list of directories to\n                           search for the APR-util source code. Defaults to the\n                           same location as the --with-apr SRCDIR, but with\n                           \"apr\" replaced with \"apr-util\" or \"aprutil\". Ignored\n                           in APR-Config Mode.\n\n  --with-regen-expr        suppress the timestamp adjustment which prevents the \n                           rebuild of the ap_expr expression parser\n\nAPR-Config Mode:\n\n  When passing an apr-config executable to --with-apr, buildconf will attempt to\n  copy build scripts from various installed locations on your system instead of\n  an APR source tree. This allows you to configure httpd from source without\n  also requiring you to download the APR and/or APR-util sources.\n\n  For example:\n\n      ./buildconf --with-apr=apr-1-config\n\n  For this functionality to work reliably, you must have automake >= 1.12 and be\n  using a distribution that includes both find_apr.m4 and find_apu.m4 in the\n  --installbuilddir pointed to by apr-config.\n\nEnvironment variables used by buildconf:\n  AUTOCONF           autoconf executable name [autoconf]\n  AUTOMAKE           automake executable name [automake]\n  AUTOHEADER         autoheader executable name [autoheader]\nEOF\n        exit\n        ;;\n\n    *)\n        echo \"unknown option $1 (try --help for usage)\"\n        exit 1\n        ;;\n    esac\n\n    shift\ndone\n\n#\n# Check to be sure that we have the srclib dependencies checked-out, or that a\n# working apr-config installation has been specified.\n#\n\nshould_exit=0\napr_config=         # path to apr-config (empty if using a source directory)\napr_found=0\napu_found=0\napr_major_version=2\n\nfor dir in $apr_src_dir\ndo\n    if [ -f \"${dir}/build/apr_common.m4\" ]; then\n        echo \"found apr source: ${dir}\"\n        apr_src_dir=$dir\n        apr_found=1\n        break\n    elif which \"${dir}\" >/dev/null 2>&1; then\n        # We're using apr-config. Do a sanity check.\n        apr_config=`which \"${dir}\"`\n        echo \"testing apr-config executable: ${apr_config}\"\n\n        version=`\"${apr_config}\" --version`\n        version=`echo \"${version}\" | sed -n '/^[0-9][0-9]*\\.[0-9][0-9]*\\.[0-9][0-9]*$/p'`\n\n        if [ -z \"${version}\" ]; then\n            echo \"apr-config gave us an invalid --version\"\n            apr_config=\n            continue\n        fi\n\n        echo \"using apr-config version ${version}\"\n        apr_major_version=${version} # we'll make a real \"major version\" later\n        apr_src_dir=`\"${apr_config}\" --installbuilddir`\n        apr_found=1\n        break\n    fi\ndone\n\nif [ $apr_found -lt 1 ]; then\n    echo \"\"\n    echo \"APR could not be found automatically.\"\n    echo \"\"\n    echo \"Please refer to the documentation on APR in the httpd INSTALL file.\"\n    echo \"\"\n    should_exit=1\nelif [ -n \"${apr_config}\" ]; then\n    apr_major_version=`echo \"${apr_major_version}\" | sed 's/\\..*//'`\nelse\n    apr_major_version=`grep \"#define APR_MAJOR_VERSION\" \\\n                      $apr_src_dir/include/apr_version.h | sed 's/[^0-9]//g'`\nfi\n\n# Find APR-util. Note: if we're using apr-config, we can completely skip this,\n# even if APR is version 1. That's because we only end up caring about\n# find_apu.m4, which is not actually installed in the standard APR-util\n# distribution to begin with.\nif [ -z \"${apr_config}\" -a $apr_major_version -lt 2 ] ; then\n    if test -z \"$apu_src_dir\"; then\n        apu_src_dir=`echo $apr_src_dir | sed -e 's#/apr#/apr-util#g;'`\n        apu_src_dir=\"$apu_src_dir `echo $apr_src_dir | sed -e 's#/apr#/aprutil#;g'`\"\n        apu_src_dir=\"$apu_src_dir srclib/apr-util ../apr-util\"\n    fi\n\n    for dir in $apu_src_dir\n    do\n        if [ -f \"${dir}/Makefile.in\" ]; then\n            echo \"found apr-util source: ${dir}\"\n            apu_src_dir=$dir\n            apu_found=1\n            break\n        fi\n    done\n\n    if [ $apu_found -lt 1 ]; then\n        echo \"\"\n        echo \"You are using APR 1.x but APR-util 1.x was not found.\"\n        echo \"\"\n        echo \"Please refer to the documentation on APR in the httpd INSTALL file.\"\n        echo \"\"\n        should_exit=1\n    fi\nfi\n\nif [ $should_exit -gt 0 ]; then\n    exit 1\nfi\n\n# These are temporary until Roy finishes the other build changes\n#\ntouch .deps\nrm -f aclocal.m4\nrm -f generated_lists\n\n# Remove autoconf 2.5x cache directories\nrm -rf autom4te*.cache\n\ncase \"`uname`\" in\n*BSD/OS*)\n    ./build/bsd_makefile;;\nesac\n#\n# end temporary stuff\n\napr_configure=\"$apr_src_dir/configure\"\nif [ $apr_major_version -lt 2 ] ; then\n    aprutil_configure=\"$apu_src_dir/configure\"\nfi\nconfig_h_in=\"include/ap_config_auto.h.in\"\n\ncross_compile_warning=\"warning: AC_TRY_RUN called without default to allow cross compiling\"\n\nif [ \"$apr_src_dir\" = \"srclib/apr\" ]; then\n    echo rebuilding $apr_configure\n    (cd srclib/apr && ./buildconf) || {\n        echo \"./buildconf failed for apr\"\n        exit 1\n    }\n    rm -f srclib/apr/apr.spec\nfi\n\napr_src_dir=`cd $apr_src_dir && pwd` \n\nif [ $apr_major_version -lt 2 ] ; then\n    if [ \"$apu_src_dir\" = \"srclib/apr-util\" ]; then\n        echo rebuilding $aprutil_configure\n        (cd srclib/apr-util && ./buildconf --with-apr=$apr_src_dir) || {\n            echo \"./buildconf failed for apr-util\" \n            exit 1\n        }\n        rm -f srclib/apr-util/apr-util.spec\n    fi\n\n    apu_src_dir=`cd $apu_src_dir && pwd`\nfi\n\necho copying build files\nif [ -n \"${apr_config}\" ]; then\n    # If we're using apr-config, we switch things up a little bit:\n    # - use automake's config.* scripts instead of APR's\n    # - use the included PrintPath instead of copying from APR\n    # - assume find_apu.m4 is also in APR's --installbuilddir\n\n    # Figure out where to copy config.* from.\n    automake=${AUTOMAKE:-automake}\n    am_libdir=`\"${automake}\" --print-libdir`\n    cp \"${am_libdir}/config.guess\" \"${am_libdir}/config.sub\" build\n\n    # Remember that in this case, $apr_src_dir points to the build directory.\n    cp \"$apr_src_dir/apr_common.m4\" \"$apr_src_dir/find_apr.m4\" build\n    if [ $apr_major_version -lt 2 ] ; then\n        cp \"$apr_src_dir/find_apu.m4\" build\n    fi\nelse\n    cp $apr_src_dir/build/config.guess $apr_src_dir/build/config.sub \\\n       $apr_src_dir/build/PrintPath $apr_src_dir/build/apr_common.m4 \\\n       $apr_src_dir/build/find_apr.m4 build\n    if [ $apr_major_version -lt 2 ] ; then\n        cp $apu_src_dir/build/find_apu.m4 build\n    fi\nfi\n\n# Remove any libtool files so one can switch between libtool 1.3\n# and libtool 1.4 by simply rerunning the buildconf script.\n(cd build ; rm -f ltconfig ltmain.sh)\n\nif [ -z \"${apr_config}\" ]; then\n    # Optionally copy libtool-1.3.x files\n    if [ -f $apr_src_dir/build/ltconfig ]; then\n        cp $apr_src_dir/build/ltconfig build\n    fi\n    if [ -f $apr_src_dir/build/ltmain.sh ]; then\n        cp $apr_src_dir/build/ltmain.sh build\n    fi\nfi\n\necho rebuilding $config_h_in\nrm -f $config_h_in\n${AUTOHEADER:-autoheader} 2>&1 | grep -v \"$cross_compile_warning\"\n\necho rebuilding configure\nrm -f config.cache\n${AUTOCONF:-autoconf} 2>&1 | grep -v \"$cross_compile_warning\"\n\n# Remove autoconf 2.5x cache directories\nrm -rf autom4te*.cache\n\n# Remove possible bsd_converted file\nrm -rf bsd_converted\n\nif [ -f `which cut` ]; then\n  echo rebuilding rpm spec file\n  ( VMMN=`build/get-version.sh mmn include/ap_mmn.h MODULE_MAGIC_NUMBER`\n    EPOCH=`build/get-version.sh epoch include/ap_release.h AP_SERVER`\n    REVISION=`build/get-version.sh all include/ap_release.h AP_SERVER`\n    VERSION=`echo $REVISION | cut -d- -s -f1`\n    RELEASE=`echo $REVISION | cut -d- -s -f2`\n    if [ \"x$VERSION\" = \"x\" ]; then\n      VERSION=$REVISION\n      RELEASE=1\n    fi\n    cat ./build/rpm/httpd.spec.in | \\\n    sed -e \"s/APACHE_VERSION/$VERSION/\" \\\n        -e \"s/APACHE_RELEASE/$RELEASE/\" \\\n        -e \"s/APACHE_MMN/$VMMN/\" \\\n        -e \"s/APACHE_EPOCH/$EPOCH/\" \\\n    > httpd.spec )\nfi\n\nif [ x$regen_expr = xno ]; then\n    # ensure that the ap_expr expression parser sources are never regenerated\n    # when running make\n    echo buildconf: Fixing timestamps for ap_expr sources to prevent regeneration\n    cd server\n    touch util_expr_parse.y util_expr_scan.l\n    sleep 1\n    touch util_expr_parse.c util_expr_parse.h util_expr_scan.c\n    cd ..\nelse\n    echo buildconf: Fixing timestamps for ap_expr sources to ensure regeneration\n    touch server/util_expr_parse.[yl]\nfi\n\nexit 0\n"
        },
        {
          "name": "changes-entries",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.layout",
          "type": "blob",
          "size": 15.208984375,
          "content": "##\n##  config.layout -- Pre-defined Installation Path Layouts\n##\n##  Hints:\n##  - layouts can be loaded with configure's --enable-layout=ID option\n##  - when no --enable-layout option is given, the default layout is `Apache'\n##  - a trailing plus character (`+') on paths is replaced with a \n##    `/<target>' suffix where <target> is currently hardcoded to 'apache2'.\n##    (This may become a configurable parameter at some point.)\n##\n\n#   Classical Apache path layout.\n<Layout Apache>\n    prefix:        /usr/local/apache2\n    exec_prefix:   ${prefix}\n    bindir:        ${exec_prefix}/bin\n    sbindir:       ${exec_prefix}/bin\n    libdir:        ${exec_prefix}/lib\n    libexecdir:    ${exec_prefix}/modules\n    mandir:        ${prefix}/man\n    sysconfdir:    ${prefix}/conf\n    datadir:       ${prefix}\n    installbuilddir: ${datadir}/build\n    errordir:      ${datadir}/error\n    iconsdir:      ${datadir}/icons\n    htdocsdir:     ${datadir}/htdocs\n    manualdir:     ${datadir}/manual\n    cgidir:        ${datadir}/cgi-bin\n    includedir:    ${prefix}/include\n    localstatedir: ${prefix}\n    runtimedir:    ${localstatedir}/logs\n    statedir:      ${localstatedir}/state\n    logfiledir:    ${localstatedir}/logs\n    proxycachedir: ${localstatedir}/proxy\n</Layout>\n\n#   GNU standards conforming path layout.\n#   See FSF's GNU project `make-stds' document for details.\n<Layout GNU>\n    prefix:        /usr/local\n    exec_prefix:   ${prefix}\n    bindir:        ${exec_prefix}/bin\n    sbindir:       ${exec_prefix}/sbin\n    libdir:        ${exec_prefix}/lib\n    libexecdir:    ${exec_prefix}/libexec\n    mandir:        ${prefix}/man\n    sysconfdir:    ${prefix}/etc+\n    datadir:       ${prefix}/share+\n    installbuilddir: ${datadir}/build\n    errordir:      ${datadir}/error\n    iconsdir:      ${datadir}/icons\n    htdocsdir:     ${datadir}/htdocs\n    manualdir:     ${datadir}/manual\n    cgidir:        ${datadir}/cgi-bin\n    includedir:    ${prefix}/include+\n    localstatedir: ${prefix}/var+\n    runtimedir:    ${localstatedir}/run\n    statedir:      ${localstatedir}/state\n    logfiledir:    ${localstatedir}/log\n    proxycachedir: ${localstatedir}/proxy\n</Layout>\n\n#   Mac OS X Server (Rhapsody)\n<Layout Mac OS X Server>\n    prefix:        /Local/Library/WebServer\n    exec_prefix:   /usr\n    bindir:        ${exec_prefix}/bin\n    sbindir:       ${exec_prefix}/sbin\n    libdir:        ${exec_prefix}/lib\n    libexecdir:    /System/Library/Apache/Modules\n    mandir:        ${exec_prefix}/share/man\n    sysconfdir:    ${prefix}/Configuration\n    datadir:       ${prefix}\n    installbuilddir: /System/Library/Apache/Build\n    errordir:      /System/Library/Apache/Error\n    iconsdir:      /System/Library/Apache/Icons\n    manualdir:     /System/Library/Apache/Manual\n    htdocsdir:     ${datadir}/Documents\n    cgidir:        ${datadir}/CGI-Executables\n    includedir:    /System/Library/Frameworks/Apache.framework/Versions/2.0/Headers\n    localstatedir: /var\n    runtimedir:    ${prefix}/Logs\n    statedir:      ${prefix}/State\n    logfiledir:    ${prefix}/Logs\n    proxycachedir: ${prefix}/ProxyCache\n</Layout>\n\n#   Darwin/Mac OS Layout\n<Layout Darwin>\n    prefix:        /usr\n    exec_prefix:   ${prefix}\n    bindir:        ${exec_prefix}/bin\n    sbindir:       ${exec_prefix}/sbin\n    libdir:        ${exec_prefix}/lib\n    libexecdir:    ${exec_prefix}/libexec+\n    mandir:        ${prefix}/share/man\n    datadir:       /Library/WebServer\n    sysconfdir:    /etc+\n    installbuilddir: ${prefix}/share/httpd/build\n    errordir:      ${prefix}/share/httpd/error\n    iconsdir:      ${prefix}/share/httpd/icons\n    htdocsdir:     ${datadir}/Documents\n    manualdir:     ${datadir}/share/httpd/manual\n    cgidir:        ${datadir}/CGI-Executables\n    includedir:    ${prefix}/include+\n    localstatedir: /var\n    runtimedir:    ${localstatedir}/run\n    statedir:      ${localstatedir}/state\n    logfiledir:    ${localstatedir}/log+\n    proxycachedir: ${runtimedir}/proxy\n</Layout>\n\n#   Red Hat Linux 7.x layout\n<Layout RedHat>\n    prefix:        /usr\n    exec_prefix:   ${prefix}\n    bindir:        ${prefix}/bin\n    sbindir:       ${prefix}/sbin\n    libdir:        ${prefix}/lib\n    libexecdir:    ${prefix}/lib/apache\n    mandir:        ${prefix}/man\n    sysconfdir:    /etc/httpd/conf\n    datadir:       /var/www\n    installbuilddir: ${datadir}/build\n    errordir:      ${datadir}/error\n    iconsdir:      ${datadir}/icons\n    htdocsdir:     ${datadir}/html\n    manualdir:     ${datadir}/manual\n    cgidir:        ${datadir}/cgi-bin\n    includedir:    ${prefix}/include/apache\n    localstatedir: /var\n    runtimedir:    ${localstatedir}/run\n    statedir:      ${localstatedir}/lib/httpd\n    logfiledir:    ${localstatedir}/log/httpd\n    proxycachedir: ${localstatedir}/cache/httpd\n</Layout>     \n\n# Layout used in Fedora httpd packaging.\n<Layout Fedora>\n    prefix:        /usr\n    localstatedir: /var\n    exec_prefix:   ${prefix}\n    bindir:        ${prefix}/bin\n    sbindir:       ${prefix}/sbin\n    libdir:        ${prefix}/lib\n    libexecdir:    ${prefix}/libexec\n    mandir:        ${prefix}/man\n    sysconfdir:    /etc/httpd/conf\n    datadir:       ${prefix}/share/httpd\n    installbuilddir: ${libdir}/httpd/build\n    errordir:      ${datadir}/error\n    iconsdir:      ${datadir}/icons\n    htdocsdir:     ${localstatedir}/www/html\n    manualdir:     ${datadir}/manual\n    cgidir:        ${localstatedir}/www/cgi-bin\n    includedir:    ${prefix}/include/httpd\n    runtimedir:    /run/httpd\n    logfiledir:    ${localstatedir}/log/httpd\n    statedir:      ${localstatedir}/lib/httpd\n    proxycachedir: ${localstatedir}/cache/httpd/proxy\n</Layout>     \n\n#   According to the /opt filesystem conventions\n<Layout opt>\n    prefix:        /opt/apache\n    exec_prefix:   ${prefix}\n    bindir:        ${exec_prefix}/bin\n    sbindir:       ${exec_prefix}/sbin\n    libdir:        ${exec_prefix}/lib\n    libexecdir:    ${exec_prefix}/libexec\n    mandir:        ${prefix}/man\n    sysconfdir:    /etc${prefix}\n    datadir:       ${prefix}/share\n    installbuilddir: ${datadir}/build\n    errordir:      ${datadir}/error\n    iconsdir:      ${datadir}/icons\n    htdocsdir:     ${datadir}/htdocs\n    manualdir:     ${datadir}/manual\n    cgidir:        ${datadir}/cgi-bin\n    includedir:    ${prefix}/include\n    localstatedir: /var${prefix}\n    runtimedir:    ${localstatedir}/run\n    logfiledir:    ${localstatedir}/logs\n    statedir:      ${localstatedir}/state\n    proxycachedir: ${localstatedir}/proxy\n</Layout>\n\n#   SuSE 6.x layout\n<Layout SuSE>\n    prefix:        /usr\n    exec_prefix:   ${prefix}\n    bindir:        ${prefix}/bin\n    sbindir:       ${prefix}/sbin\n    libdir:        ${prefix}/lib\n    libexecdir:    ${prefix}/lib/apache\n    mandir:        ${prefix}/share/man\n    sysconfdir:    /etc/httpd\n    datadir:       /usr/local/httpd\n    installbuilddir: ${datadir}/build\n    errordir:      ${datadir}/error\n    iconsdir:      ${datadir}/icons\n    htdocsdir:     ${datadir}/htdocs\n    manualdir:     ${datadir}/manual\n    cgidir:        ${datadir}/cgi-bin\n    includedir:    ${prefix}/include/apache\n    localstatedir: /var/lib/httpd\n    statedir:      ${localstatedir}\n    runtimedir:    /var/run\n    logfiledir:    /var/log/httpd\n    proxycachedir: /var/cache/httpd\n</Layout>\n\n#   BSD/OS layout\n<Layout BSDI>\n    prefix:        /var/www\n    exec_prefix:   /usr/contrib\n    bindir:        ${exec_prefix}/bin\n    sbindir:       ${exec_prefix}/bin\n    libdir:        ${exec_prefix}/lib\n    libexecdir:    ${exec_prefix}/libexec/apache\n    mandir:        ${exec_prefix}/man\n    sysconfdir:    ${prefix}/conf\n    datadir:       ${prefix}\n    installbuilddir: ${datadir}/build\n    errordir:      ${datadir}/error\n    iconsdir:      ${datadir}/icons\n    htdocsdir:     ${datadir}/htdocs\n    manualdir:     ${datadir}/manual\n    cgidir:        ${datadir}/cgi-bin\n    includedir:    ${exec_prefix}/include/apache\n    localstatedir: /var\n    runtimedir:    ${localstatedir}/run\n    logfiledir:    ${localstatedir}/log/httpd\n    statedir:      ${prefix}/state\n    proxycachedir: ${localstatedir}/proxy\n</Layout>\n\n#   Solaris 8 Layout\n<Layout Solaris>\n    prefix:        /usr/apache\n    exec_prefix:   ${prefix}\n    bindir:        ${exec_prefix}/bin\n    sbindir:       ${exec_prefix}/bin\n    libdir:        ${exec_prefix}/lib\n    libexecdir:    ${exec_prefix}/libexec\n    mandir:        ${exec_prefix}/man\n    sysconfdir:    /etc/apache\n    datadir:       /var/apache\n    installbuilddir: ${datadir}/build\n    errordir:      ${datadir}/error\n    iconsdir:      ${datadir}/icons\n    htdocsdir:     ${datadir}/htdocs\n    manualdir:     ${datadir}/manual\n    cgidir:        ${datadir}/cgi-bin\n    includedir:    ${exec_prefix}/include\n    localstatedir: ${prefix}\n    runtimedir:    /var/run\n    statedir:      ${datadir}/state\n    logfiledir:    ${datadir}/logs\n    proxycachedir: ${datadir}/proxy\n</Layout>\n\n#   OpenBSD Layout\n<Layout OpenBSD>\n    prefix:        /var/www\n    exec_prefix:   /usr\n    bindir:        ${exec_prefix}/bin\n    sbindir:       ${exec_prefix}/sbin\n    libdir:        ${exec_prefix}/lib\n    libexecdir:    ${exec_prefix}/lib/apache/modules\n    mandir:        ${exec_prefix}/share/man\n    sysconfdir:    ${prefix}/conf\n    datadir:       ${prefix}\n    installbuilddir: ${prefix}/build\n    errordir:      ${prefix}/error\n    iconsdir:      ${prefix}/icons\n    htdocsdir:     ${prefix}/htdocs\n    manualdir:     ${datadir}/manual\n    cgidir:        ${prefix}/cgi-bin\n    includedir:    ${exec_prefix}/lib/apache/include\n    localstatedir: ${prefix}\n    runtimedir:    ${prefix}/logs\n    logfiledir:    ${prefix}/logs\n    statedir:      ${prefix}/state\n    proxycachedir: ${prefix}/proxy\n</Layout>\n\n# FreeBSD Layout\n<Layout FreeBSD>\n  prefix:        /usr/local\n  exec_prefix:   ${prefix}\n  bindir:        ${exec_prefix}/bin\n  sbindir:       ${exec_prefix}/sbin\n  libdir:        ${exec_prefix}/lib\n  libexecdir:    ${exec_prefix}/libexec/apache2\n  mandir:        ${prefix}/man\n  sysconfdir:    ${prefix}/etc/apache2\n  datadir:       ${prefix}/www\n  installbuilddir: ${prefix}/share/apache2/build\n  errordir:      ${datadir}/error\n  iconsdir:      ${datadir}/icons\n  htdocsdir:     ${datadir}/data\n  manualdir:     ${prefix}/share/doc/apache2\n  cgidir:        ${datadir}/cgi-bin\n  includedir:    ${prefix}/include/apache2\n  localstatedir: /var\n  runtimedir:    ${localstatedir}/run\n  logfiledir:    ${localstatedir}/log\n  proxycachedir: ${datadir}/proxy\n</Layout>\n\n# Debian layout\n<Layout Debian>\n    prefix:        \n    exec_prefix:   ${prefix}/usr\n    bindir:        ${exec_prefix}/bin\n    sbindir:       ${exec_prefix}/sbin\n    libdir:        ${exec_prefix}/lib\n    libexecdir:    ${exec_prefix}/lib/apache2/modules\n    mandir:        ${exec_prefix}/share/man\n    sysconfdir:    ${prefix}/etc/apache2\n    datadir:       ${exec_prefix}/share/apache2\n    iconsdir:      ${datadir}/icons\n    htdocsdir:     ${prefix}/usr/share/apache2/default-site/htdocs\n    manualdir:     ${htdocsdir}/manual\n    cgidir:        ${prefix}/usr/lib/cgi-bin\n    includedir:    ${exec_prefix}/include/apache2\n    localstatedir: ${prefix}/var/lock/apache2\n    statedir:      ${prefix}/var/lib/apache2\n    runtimedir:    ${prefix}/var/run/apache2\n    logfiledir:    ${prefix}/var/log/apache2\n    proxycachedir: ${prefix}/var/cache/apache2/proxy\n    infodir:       ${exec_prefix}/share/info\n    installbuilddir: ${prefix}/usr/share/apache2/build\n    errordir:      ${datadir}/error\n</Layout>\n\n# Generic RPM layout\n<Layout RPM>\n    prefix:        /usr\n    exec_prefix:   ${prefix}\n    bindir:        ${prefix}/bin\n    sbindir:       ${prefix}/sbin\n    libdir:        ${prefix}/lib\n    libexecdir:    ${libdir}/httpd/modules\n    mandir:        ${prefix}/share/man\n    sysconfdir:    /etc/httpd/conf\n    installbuilddir: ${libdir}/httpd/build\n    includedir:    ${prefix}/include/httpd\n    localstatedir: /var\n    datadir:       ${localstatedir}/www\n    errordir:      ${datadir}/error\n    iconsdir:      ${datadir}/icons\n    htdocsdir:     ${datadir}/html\n    manualdir:     ${datadir}/manual\n    cgidir:        ${datadir}/cgi-bin\n    runtimedir:    ${localstatedir}/run\n    statedir:      ${localstatedir}/lib/httpd\n    logfiledir:    ${localstatedir}/log/httpd\n    proxycachedir: ${localstatedir}/cache/httpd/cache-root\n</Layout>\n\n# AIX layout\n<Layout AIX>\n    prefix:        /opt/httpd\n    exec_prefix:   /opt/httpd\n    bindir:        ${exec_prefix}/bin\n    sbindir:       ${exec_prefix}/sbin\n    libdir:        ${exec_prefix}/lib\n    libexecdir:    ${exec_prefix}/libexec\n    mandir:        /usr/share/man\n    sysconfdir:    /etc/httpd\n    datadir:       /var/httpd\n    installbuilddir: ${datadir}/build\n    errordir:      ${datadir}/error\n    htdocsdir:     ${datadir}/htdocs\n    cgidir:        ${datadir}/cgi-bin\n    iconsdir:      ${prefix}/icons\n    manualdir:     ${prefix}/manual\n    includedir:    ${prefix}/include\n    localstatedir: /var/httpd\n    statedir:      ${localstatedir}/state\n    runtimedir:    ${localstatedir}/run\n    logfiledir:    ${localstatedir}/logs\n    proxycachedir: ${localstatedir}/proxy\n</Layout>\n\n#   NetBSD (pkgsrc) layout\n<Layout NetBSD>\n    prefix:        /usr/pkg\n    exec_prefix:   ${prefix}\n    bindir:        ${exec_prefix}/bin\n    sbindir:       ${exec_prefix}/sbin\n    libexecdir:    ${exec_prefix}/lib/httpd\n    mandir:        ${prefix}/man\n    sysconfdir:    /usr/pkg/etc\n    datadir:       ${prefix}/share/httpd\n    installbuilddir: ${datadir}/build\n    errordir:      ${datadir}/error\n    iconsdir:      ${datadir}/icons\n    htdocsdir:     ${datadir}/htdocs\n    manualdir:     ${datadir}/manual\n    cgidir:        ${exec_prefix}/libexec/cgi-bin\n    includedir:    ${prefix}/include/httpd\n    localstatedir: /var\n    runtimedir:    ${localstatedir}/run\n    logfiledir:    ${localstatedir}/log/httpd\n    proxycachedir: ${localstatedir}/db/httpd/proxy\n</Layout>\n\n# FHS layout\n<Layout Slackware-FHS>\n    prefix:          /usr\n    exec_prefix:     ${prefix}\n    bindir:          ${prefix}/bin\n    sbindir:         ${prefix}/sbin\n    libdir:          ${prefix}/lib/httpd\n    libexecdir:      ${prefix}/lib/httpd/modules\n    installbuilddir: ${prefix}/lib/httpd/build\n    mandir:          ${prefix}/man\n    sysconfdir:      /etc/httpd\n    datadir:         /srv/httpd\n    iconsdir:        ${datadir}/icons\n    htdocsdir:       ${datadir}/htdocs\n    manualdir:       ${htdocsdir}/manual\n    cgidir:          ${datadir}/cgi-bin\n    errordir:        ${datadir}/error\n    includedir:      ${prefix}/include/httpd\n    localstatedir:   /var\n    runtimedir:      ${localstatedir}/run/httpd\n    statedir:        ${localstatedir}/lib/httpd\n    logfiledir:      ${localstatedir}/log/httpd\n    proxycachedir:   ${localstatedir}/cache/httpd\n</Layout>\n\n# OpenWrt layout\n<Layout OpenWrt>\n    prefix:          /usr\n    exec_prefix:     ${prefix}\n    bindir:          ${prefix}/bin\n    sbindir:         ${prefix}/sbin\n    libdir:          ${prefix}/lib\n    libexecdir:      ${prefix}/lib+\n    mandir:          ${prefix}/share/man\n    sysconfdir:      /etc+\n    datadir:         ${prefix}/share+\n    installbuilddir: ${datadir}/build\n    errordir:        ${datadir}/error\n    iconsdir:        ${datadir}/icons\n    htdocsdir:       ${datadir}/htdocs\n    manualdir:       /usr/share/doc/apache2/manual\n    cgidir:          ${datadir}/cgi-bin\n    includedir:      ${prefix}/include+\n    localstatedir:   /var\n    runtimedir:      ${localstatedir}/run+\n    logfiledir:      ${localstatedir}/log+\n    proxycachedir:   ${localstatedir}/cache/apache2\n</Layout>\n\n"
        },
        {
          "name": "configure.in",
          "type": "blob",
          "size": 35.962890625,
          "content": "dnl\ndnl Autoconf configuration for Apache httpd\ndnl\ndnl     Use ./buildconf to produce a configure script\ndnl\n\nAC_PREREQ(2.60)\nAC_INIT(ABOUT_APACHE)\n\nAC_CONFIG_HEADER(include/ap_config_auto.h)\nAC_CONFIG_AUX_DIR(build)\n\ndnl Absolute source/build directory\nabs_srcdir=`(cd $srcdir && pwd)`\nabs_builddir=`pwd`\n\ndnl Ensure that the httpd version is included\nHTTPD_VERSION=`$abs_srcdir/build/get-version.sh all $abs_srcdir/include/ap_release.h AP_SERVER`\nHTTPD_MMN=`$abs_srcdir/build/get-version.sh mmn $abs_srcdir/include/ap_mmn.h MODULE_MAGIC_NUMBER`\n\ndnl #\ndnl # Include our own M4 macros along with those for APR and libtool\ndnl #\nsinclude(build/apr_common.m4)\nsinclude(build/find_apr.m4)\nsinclude(build/find_apu.m4)\nsinclude(acinclude.m4)\n\ndnl Later versions of autoconf (>= 2.62) by default cause the produced\ndnl configure script to emit at least warnings when it comes across unknown\ndnl command line options. These versions also have the macro\ndnl AC_DISABLE_OPTION_CHECKING defined which turns this off by default.\ndnl We want to have this turned off here since our configure calls can\ndnl contain options for APR / APR-UTIL configure that are unknown to us.\ndnl So avoid confusing the user by turning this off. See also PR 45221.\nifdef([AC_DISABLE_OPTION_CHECKING], [AC_DISABLE_OPTION_CHECKING])\n\ndnl XXX we can't just use AC_PREFIX_DEFAULT because that isn't subbed in\ndnl by configure until it is too late.  Is that how it should be or not?\ndnl Something seems broken here.                                               \nAC_PREFIX_DEFAULT(/usr/local/apache2)\n\ndnl Get the layout here, so we can pass the required variables to apr\nAPR_ENABLE_LAYOUT(Apache, [errordir iconsdir htdocsdir cgidir statedir manualdir proxycachedir])\n\ndnl reparse the configure arguments.\nAPR_PARSE_ARGUMENTS\n\ndnl export expanded and relative configure argument variables\nAPACHE_EXPORT_ARGUMENTS\n\ndnl Save user-defined environment settings for later restoration\ndnl\nAPR_SAVE_THE_ENVIRONMENT(CPPFLAGS)\nAPR_SAVE_THE_ENVIRONMENT(CFLAGS)\nAPR_SAVE_THE_ENVIRONMENT(CXXFLAGS)\nAPR_SAVE_THE_ENVIRONMENT(LDFLAGS)\nAPR_SAVE_THE_ENVIRONMENT(LIBS)\nAPR_SAVE_THE_ENVIRONMENT(INCLUDES)\n\ndnl Generate ./config.nice for reproducing runs of configure\ndnl\nAPR_CONFIG_NICE(config.nice)\n\nnl='\n'\ndnl Check that mkdir -p works\nAPR_MKDIR_P_CHECK($top_srcdir/build/mkdir.sh)\n\ndnl get an EGREP to use in the Makefiles\nAC_PROG_EGREP\nAPACHE_SUBST(EGREP)\n\ndnl ## Run configure for packages Apache uses\n\ndnl shared library support for these packages doesn't currently\ndnl work on some platforms\n\nAC_CANONICAL_SYSTEM\n\norig_prefix=\"$prefix\"\n\nAC_MSG_NOTICE([])\nAC_MSG_NOTICE([Configuring Apache Portable Runtime library...])\nAC_MSG_NOTICE([])\n\nAC_ARG_WITH(included-apr,\nAPACHE_HELP_STRING(--with-included-apr,Use bundled copies of APR/APR-Util))\n\nif test \"x$with_included_apr\" = \"xyes\"; then\n  apr_found=reconfig\n  if test ! -d srclib/apr && test ! -d $srcdir/srclib/apr; then\n    AC_MSG_ERROR([Bundled APR requested but not found at ./srclib/. Please refer to the documentation on APR in the httpd INSTALL file.])\n  fi\nelse \n  APR_FIND_APR(\"$srcdir/srclib/apr\", \"./srclib/apr\", 1, 1 2, [\n    version=`$apr_config --version`\n    case x${version} in\n    x1.[[0-5]].*)\n      AC_MSG_WARN([APR version 1.6.0 or later is required, found $version])\n      apr_acceptable=no\n      ;;\n    esac\n    unset version\n   ])\nfi\n\nif test \"$apr_found\" = \"no\"; then\n  AC_MSG_ERROR([APR not found.  Please refer to the documentation on APR in the httpd INSTALL file.])\nfi\n\nif test \"$apr_found\" = \"reconfig\"; then\n  APR_SUBDIR_CONFIG(srclib/apr,\n                    [$apache_apr_flags --prefix=$prefix --exec-prefix=$exec_prefix --libdir=$libdir --includedir=$includedir --bindir=$bindir --datadir=$datadir --with-installbuilddir=$installbuilddir],\n                    [--enable-layout=*|\\'--enable-layout=*])\n  dnl We must be the first to build and the last to be cleaned\n  AP_BUILD_SRCLIB_DIRS=\"apr $AP_BUILD_SRCLIB_DIRS\"\n  AP_CLEAN_SRCLIB_DIRS=\"$AP_CLEAN_SRCLIB_DIRS apr\"\n\n  dnl We have to find apr-N-config when we reconfigure APR.\n  for majorver in 1 2; do\n    test_apr_config=\"./srclib/apr/apr-${majorver}-config\"\n    if test -f \"$test_apr_config\"; then\n      apr_config=\"$test_apr_config\"\n    fi\n  done\nfi\n\nAPR_SETIFNULL(CC, `$apr_config --cc`)\nAPR_SETIFNULL(CPP, `$apr_config --cpp`)\nAPR_ADDTO(CFLAGS, `$apr_config --cflags`)\nAPR_ADDTO(CPPFLAGS, `$apr_config --cppflags`)\ndnl internal-only CPPFLAGS (shouldn't affect third-party module builds)\nINTERNAL_CPPFLAGS=\"\"\nAPR_ADDTO(LDFLAGS, `$apr_config --ldflags`)\nSHLIBPATH_VAR=`$apr_config --shlib-path-var`\nAPR_BINDIR=`$apr_config --bindir`\nAPR_INCLUDEDIR=`$apr_config --includedir`\nAPR_INCLUDES=`$apr_config --includes`\nAPR_VERSION=`$apr_config --version`\napr_major_version=`echo ${APR_VERSION} | sed 's,\\..*,,'`\nAPR_CONFIG=\"$APR_BINDIR/apr-${apr_major_version}-config\"\n\nAC_MSG_NOTICE([])\nAC_MSG_NOTICE([Configuring Apache Portable Runtime Utility library...])\nAC_MSG_NOTICE([])\n\nif test \"x${apr_major_version}\" = \"x2\"; then\n  apu_found=obsolete\nelif test \"x$with_included_apr\" = \"xyes\"; then\n  apu_found=reconfig\n  if test ! -d srclib/apr-util && test ! -d $srcdir/srclib/apr-util; then\n    AC_MSG_ERROR([Bundled APR-Util requested but not found at ./srclib/.  Please refer to the documentation on APR in the httpd INSTALL file.])\n  fi\nelse \n   dnl If httpd is buildconf'ed against an apr 2.x tree, then 1.x\n   dnl isn't supported. \n   ifdef([APR_FIND_APU], [\n     APR_FIND_APU(\"$srcdir/srclib/apr-util\", \"./srclib/apr-util\", \n                  1, ${apr_major_version})\n   ], [apu_found=no])\nfi\n\nif test \"$apu_found\" = \"no\"; then\n  AC_MSG_ERROR([APR-util not found.  Please refer to the documentation on APR in the httpd INSTALL file.])\nfi\n\n# Catch some misconfigurations:\ncase ${apr_found}.${apu_found} in\nreconfig.yes)\n  AC_MSG_ERROR([Cannot use an external APR-util with the bundled APR])\n  ;;\nyes.reconfig)\n  AC_MSG_ERROR([Cannot use an external APR with the bundled APR-util])\n  ;;\nesac  \n\nif test \"$apu_found\" = \"reconfig\"; then\n  APR_SUBDIR_CONFIG(srclib/apr-util,\n                    [--with-apr=../apr --prefix=$prefix --exec-prefix=$exec_prefix --libdir=$libdir --includedir=$includedir --bindir=$bindir],\n                    [--enable-layout=*|\\'--enable-layout=*])\n  dnl We must be the last to build and the first to be cleaned\n  AP_BUILD_SRCLIB_DIRS=\"$AP_BUILD_SRCLIB_DIRS apr-util\"\n  AP_CLEAN_SRCLIB_DIRS=\"apr-util $AP_CLEAN_SRCLIB_DIRS\"\n  dnl APR and APR-Util major versions must match\n  apu_config=\"./srclib/apr-util/apu-${apr_major_version}-config\"\nfi\n\nif test \"$apu_found\" = \"obsolete\"; then\n  AC_MSG_NOTICE([APR-util obsoleted, woohoo])\nelse\n  APR_ADDTO(LDFLAGS, `$apu_config --ldflags`)\n  APU_BINDIR=`$apu_config --bindir`\n  APU_INCLUDEDIR=`$apu_config --includedir`\n  APU_INCLUDES=`$apu_config --includes`\n  APU_VERSION=`$apu_config --version`\n  APU_CONFIG=\"$APU_BINDIR/apu-`echo ${APU_VERSION} | sed 's,\\..*,,'`-config\"\nfi\n\ndnl In case we picked up CC and CPP from APR, get that info into the\ndnl config cache so that PCRE uses it.  Otherwise, CC and CPP used for\ndnl PCRE and for our config tests will be whatever PCRE determines.\nAC_PROG_CC\nAC_PROG_CPP\n\ndnl Try to get c99 support for variadic macros\nifdef([AC_PROG_CC_C99], [AC_PROG_CC_C99])\n\ndnl In case of cross compilation we set CC_FOR_BUILD to cc unless\ndnl we got already CC_FOR_BUILD from environment.\nif test \"x${build_alias}\" != \"x${host_alias}\"; then\n  if test \"x${CC_FOR_BUILD}\" = \"x\"; then\n    CC_FOR_BUILD=cc\n  fi\nfi\n\nif test \"x${cache_file}\" = \"x/dev/null\"; then\n  # Likewise, ensure that CC and CPP are passed through to the pcre\n  # configure script iff caching is disabled (the autoconf 2.5x default).\n  export CC; export CPP\nfi\n\nAC_ARG_WITH(pcre,\nAPACHE_HELP_STRING(--with-pcre=PATH,Use external PCRE library))\nif test \"x$with_pcre\" = \"x\" || test \"$with_pcre\" = \"yes\"; then\n  with_pcre=\"$PATH\"\nelse if command -v $with_pcre 2>/dev/null; then :; else\n  with_pcre=\"$with_pcre/bin:$with_pcre\"\nfi\nfi\n\nAC_CHECK_TARGET_TOOLS(PCRE_CONFIG, [pcre2-config pcre-config],\n                      [`command -v $with_pcre 2>/dev/null`], $with_pcre)\n\nif test \"x$PCRE_CONFIG\" != \"x\"; then\n  if $PCRE_CONFIG --version >/dev/null 2>&1; then :; else\n    AC_MSG_ERROR([Did not find working script at $PCRE_CONFIG])\n  fi\n  case `$PCRE_CONFIG --version` in\n  [1[0-9].*])\n    AC_DEFINE(HAVE_PCRE2, 1, [Detected PCRE2]) \n    ;;\n  [[1-5].*])\n    AC_MSG_ERROR([Need at least pcre version 6.7])\n    ;;\n  [6.[0-6]*])\n    AC_MSG_ERROR([Need at least pcre version 6.7])\n    ;;\n  esac\n  AC_MSG_NOTICE([Using external PCRE library from $PCRE_CONFIG])\n  APR_ADDTO(PCRE_INCLUDES, [`$PCRE_CONFIG --cflags`])\n  APR_ADDTO(PCRE_LIBS, [`$PCRE_CONFIG --libs8 2>/dev/null || $PCRE_CONFIG --libs`])\n  APR_ADDTO(HTTPD_LIBS, [\\$(PCRE_LIBS)])\nelse\n  AC_MSG_ERROR([pcre(2)-config for libpcre not found. PCRE is required and available from http://pcre.org/])\nfi\nAPACHE_SUBST(PCRE_LIBS)\n\nAC_MSG_NOTICE([])\nAC_MSG_NOTICE([Configuring Apache httpd...])\nAC_MSG_NOTICE([])\n\ndnl If the source dir is not equal to the build dir, \ndnl then we are running in VPATH mode.\n\nAPR_ADDTO(INCLUDES, [-I.])\n\nif test \"$abs_builddir\" != \"$abs_srcdir\"; then\n  APR_ADDTO(INCLUDES, [-I\\$(top_builddir)/include])\nfi\n\nAPR_ADDTO(INCLUDES, [-I\\$(top_srcdir)/os/\\$(OS_DIR) -I\\$(top_srcdir)/include])\n\n# apr/apr-util --includes may pick up system paths for dependent\n# libraries, so ensure these are later in INCLUDES than local source\n# directories.\nAPR_ADDTO(INCLUDES, $APR_INCLUDES)\nAPR_ADDTO(INCLUDES, $APU_INCLUDES)\n\ndnl Add in path to PCRE includes\nAPR_ADDTO(INCLUDES, $PCRE_INCLUDES)\n\nsave_CPPFLAGS=\"$CPPFLAGS\"\nCPPFLAGS=\"$CPPFLAGS $PCRE_INCLUDES\"\nAC_EGREP_CPP(yes,\n[\n#ifdef HAVE_PCRE2\nyes\n#else\n#include <pcre.h>\n#ifdef PCRE_DUPNAMES\nyes\n#endif\n#endif\n],pcre_have_dupnames=yes,pcre_have_dupnames=no)\nif test \"$pcre_have_dupnames\" != \"yes\"; then\n    AC_MSG_ERROR([pcre version does not support PCRE_DUPNAMES])\nfi\nCPPFLAGS=\"$save_CPPFLAGS\"\n\nAC_MSG_NOTICE([])\nAC_MSG_NOTICE([Applying OS-specific hints for httpd...])\nAC_MSG_NOTICE([])\n\ncase $host in\n  *os2*)\n      # Use a custom made libtool replacement\n      echo \"using aplibtool\"\n      LIBTOOL=\"$abs_srcdir/srclib/apr/build/aplibtool\"\n      SH_LIBTOOL=\"$LIBTOOL --shared --export-all\"\n      SH_LIBS=\"\\$(ALL_LIBS)\"\n      CORE_IMPLIB_FILE=\"ApacheCoreOS2.la\"\n      CORE_IMPLIB=\"$abs_srcdir/server/$CORE_IMPLIB_FILE\"\n      MK_IMPLIB=\"emximp\"\n      other_targets=\"$other_targets os2core\"\n      INSTALL_PROG_FLAGS=\"-e .exe\"\n      SHLTCFLAGS=\"\"\n      LTCFLAGS=\"\"\n      ;;\n  *)\n      if test \"x$LTFLAGS\" = \"x\"; then\n          LTFLAGS='--silent'\n      fi\n      my_libtool=`$apr_config --apr-libtool`\n      LIBTOOL=\"$my_libtool \\$(LTFLAGS)\"\n      libtoolversion=`$my_libtool --version`\n      case $libtoolversion in\n          *1.[[45]]* | *[[2-9]].[[0-9]]*)\n              SH_LIBTOOL='$(LIBTOOL)'\n              SHLTCFLAGS=\"-prefer-pic\"\n              LTCFLAGS=\"-prefer-non-pic -static\"\n              ;;\n          *)\n              SH_LIBTOOL='$(SHELL) $(top_builddir)/shlibtool $(LTFLAGS)'\n              SHLTCFLAGS=\"\"\n              LTCFLAGS=\"\"\n              ;;\n      esac\n      ;;\nesac\nAPACHE_SUBST(SHLTCFLAGS)\nAPACHE_SUBST(LTCFLAGS)\n\ncase $host in\n  *-apple-aux3*)\n      APR_SETVAR(SINGLE_LISTEN_UNSERIALIZED_ACCEPT, [1])\n      ;;\n  *os2-emx*)\n      APR_SETVAR(SINGLE_LISTEN_UNSERIALIZED_ACCEPT, [1])\n      ;;\n  *-linux-*)\n      case `uname -r` in\n        # Unserialized accept() was not recommended until Linux 2.2.\n        [[01]].* | 2.[[01]]* )\n            ;;\n        * )\n            APR_SETVAR(SINGLE_LISTEN_UNSERIALIZED_ACCEPT, [1])\n            ;;\n      esac\n      ;;\n  *486-*-bsdi* | *-netbsd* | *-freebsd* | *-apple-darwin* | *-dec-osf* | *-qnx)\n      APR_SETVAR(SINGLE_LISTEN_UNSERIALIZED_ACCEPT, [1])\n      ;;\n  *-solaris2*)\n      dnl This is a hack -- we should be using AC_TRY_RUN instead\n      ap_platform_runtime_link_flag=\"-R\"\n      dnl solaris 8 and above don't have a thundering herd\n      dnl not sure about rev's before this one.\n      case `uname -r` in\n        5.[[567]]*)\n            ;;\n        * )\n            APR_SETVAR(SINGLE_LISTEN_UNSERIALIZED_ACCEPT, [1])\n            ;;\n      esac\n      ;;\n  *cygwin*)\n      APR_SETVAR(SINGLE_LISTEN_UNSERIALIZED_ACCEPT, [1])\n      ;;\n  *mingw32*)\n      APR_ADDTO(INTERNAL_CPPFLAGS, [-DAP_DECLARE_EXPORT])\n      APR_ADDTO(INTERNAL_CPPFLAGS, [-DAPREQ_DECLARE_EXPORT])\n      APR_SETIFNULL(ac_cv_func_times, [no])\n      APR_SETIFNULL(ac_cv_func_getpwnam, [no])\n      APR_SETIFNULL(ac_cv_func_getgrnam, [no])\n      ;;\n  *aix*)\n      aixver=`echo $host | sed 's/^[[^0-9]]*//' | sed 's/\\.//g'`\n      if test $aixver -ge 4320; then\n        APR_SETVAR(SINGLE_LISTEN_UNSERIALIZED_ACCEPT, [1])\n      fi\n      ;;\n  *os390*)\n      APR_SETVAR(SINGLE_LISTEN_UNSERIALIZED_ACCEPT, [1])\n      ;;\nesac\n\nAPR_SETVAR(AP_NONBLOCK_WHEN_MULTI_LISTEN, [1])\n\ndnl\ndnl Process command line arguments. This is done early in the process so the\ndnl user can get feedback quickly in case of an error.\ndnl\ndnl ### need to move some of the arguments \"up here\"\n\ndnl ## Check for programs\n\nAC_PATH_PROG(RM, rm)\nAC_PATH_PROG(PKGCONFIG, pkg-config)\nAC_PATH_PROG(RSYNC, rsync)\nAC_PATH_PROG(SVN, svn)\nAC_PROG_AWK\nAC_PROG_LN_S\nAC_CHECK_TOOL(RANLIB, ranlib, true)\ndnl AC_PATH_PROG(PERL_PATH, perl)\nAC_CHECK_PROGS(LYNX_PATH,[lynx links elinks], [lynx])\n\n# Hard-coded install programs\nMKINSTALLDIRS=\"\\$(abs_srcdir)/build/mkdir.sh\"\nINSTALL=\"\\$(LIBTOOL) --mode=install \\$(abs_srcdir)/build/install.sh -c\"\nAPACHE_SUBST(MKINSTALLDIRS)\nAPACHE_SUBST(INSTALL)\n\ndnl Various OS checks that apparently set required flags\nifdef([AC_USE_SYSTEM_EXTENSIONS], [\nAC_USE_SYSTEM_EXTENSIONS\n], [\nAC_AIX\nAC_MINIX\n])\n\nAC_ISC_POSIX\n\n# Ensure that satisfactory versions of apr and apr-util are \n# found if external copies are configured.\nif test \"${apr_found}\" = \"yes\"; then\n  # Require at least APR 1.3.x otherwise fail\n  APACHE_CHECK_APxVER([apr], 1, 3)\nfi\n\nif test \"${apu_found}\" = \"yes\"; then\n  # Require at least APR-util 1.3.x otherwise fail\n  if test \"${apr_found}\" = \"yes\"; then\n    # we need to add the APR includes to CPPFLAGS\n    apu_ckver_CPPFLAGS=\"$CPPFLAGS\"\n    CPPFLAGS=\"$CPPFLAGS `$apr_config --includes`\"\n    APACHE_CHECK_APxVER([apu], 1, 3)\n    CPPFLAGS=\"$apu_ckver_CPPFLAGS\"\n  else\n    APACHE_CHECK_APxVER([apu], 1, 3)\n  fi\nfi\n\ndnl Check for what we can generate dependency files with\nAPR_CHECK_DEPEND\n\ndnl ## Check for libraries\n\ndnl ## Check for header files\n\ndnl I think these are just used all over the place, so just check for\ndnl them at the base of the tree. If some are specific to a single\ndnl directory, they should be moved (Comment #Spoon)\n\ndnl Regarding standard header files: AC_HEADER_STDC doesn't set symbols\ndnl HAVE_STRING_H, HAVE_STDLIB_H, etc., so those are checked for\ndnl explicitly so that the normal HAVE_xxx_H symbol is defined.\n\nAC_HEADER_STDC\nAC_CHECK_HEADERS( \\\nstring.h \\\nlimits.h \\\nunistd.h \\\nsys/socket.h \\\npwd.h \\\ngrp.h \\\npthread_np.h \\\nstrings.h \\\nsys/prctl.h \\\nsys/procctl.h \\\nsys/processor.h \\\nsys/sem.h \\\nsys/sdt.h \\\nsys/loadavg.h\n)\nAC_HEADER_SYS_WAIT\n\ndnl ## Check for typedefs, structures, and compiler characteristics.\n\nAC_C_CONST\n\ndnl ## Check for library functions\ndnl ## sqrt() only needed in support/ab.c\nsaved_LIBS=\"$LIBS\"\nLIBS=\"\"\nAC_SEARCH_LIBS(sqrt, m)\nMATH_LIBS=\"$LIBS\"\nAPACHE_SUBST(MATH_LIBS)\nLIBS=\"$saved_LIBS\"\n\nsaved_LIBS=\"$LIBS\"\nLIBS=\"\"\nAC_SEARCH_LIBS(crypt, crypt)\nCRYPT_LIBS=\"$LIBS\"\nAPACHE_SUBST(CRYPT_LIBS)\n\nif test \"$ac_cv_search_crypt\" != \"no\"; then\n   # Test crypt() with the SHA-512 test vector from https://akkadia.org/drepper/SHA-crypt.txt\n   AC_CACHE_CHECK([whether crypt() supports SHA-2], [ap_cv_crypt_sha2], [\n    AC_RUN_IFELSE([AC_LANG_PROGRAM([[\n#include <crypt.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define PASSWD_0 \"Hello world!\"\n#define SALT_0 \"\\$6\\$saltstring\"\n#define EXPECT_0 \"\\$6\\$saltstring\\$svn8UoSVapNtMuq1ukKS4tPQd8iKwSMHWjl/O817G3uBnIFNjnQJu\" \\\n               \"esI68u4OTLiBFdcbYEdFCoEOfaS35inz1\"\n]], [char *result = crypt(PASSWD_0, SALT_0);\n     if (!result) return 1;\n     if (strcmp(result, EXPECT_0)) return 2;\n])], [ap_cv_crypt_sha2=yes], [ap_cv_crypt_sha2=no], [ap_cv_crypt_sha2=no])])\n   if test \"$ap_cv_crypt_sha2\" = yes; then\n     AC_DEFINE([HAVE_CRYPT_SHA2], 1, [Define if crypt() supports SHA-2 hashes])\n   fi\nfi\n\nLIBS=\"$saved_LIBS\"\n\ndnl See Comment #Spoon\n\nAC_CHECK_FUNCS( \\\ngetpwnam \\\ngetgrnam \\\ninitgroups \\\nbindprocessor \\\nprctl \\\nprocctl \\\npthread_getthreadid_np \\\ntimegm \\\ngetpgid \\\nfopen64 \\\ngetloadavg \\\ngettid\n)\n\ndnl confirm that a void pointer is large enough to store a long integer\nAPACHE_CHECK_VOID_PTR_LEN\n\nif test $ac_cv_func_gettid = no; then\n  # On Linux before glibc 2.30, gettid() is only usable via syscall()\n  AC_CACHE_CHECK([for gettid() via syscall], ap_cv_gettid,\n[AC_TRY_RUN(#define _GNU_SOURCE\n#include <unistd.h>\n#include <sys/syscall.h>\n#include <sys/types.h>\nint main(int argc, char **argv) {\npid_t t = syscall(SYS_gettid); return t == -1 ? 1 : 0; },\n  [ap_cv_gettid=yes], [ap_cv_gettid=no], [ap_cv_gettid=no])])\n  if test \"$ap_cv_gettid\" = \"yes\"; then\n      AC_DEFINE(HAVE_SYS_GETTID, 1, [Define if you have gettid() via syscall()])\n  fi\nfi\n\ncase ${host}X${ac_cv_func_gettid}X${ap_cv_gettid} in\n*linux-*XyesX* | *linux-*XnoXyes)\n     AC_DEFINE(DEFAULT_LOG_TID, [\"g\"], [Define as default argument for thread id in error logging])\n     ;;\nesac\n\ndnl ## Check for the tm_gmtoff field in struct tm to get the timezone diffs\nAC_CACHE_CHECK([for tm_gmtoff in struct tm], ac_cv_struct_tm_gmtoff,\n[AC_TRY_COMPILE([#include <sys/types.h>\n#include <time.h>], [struct tm tm; tm.tm_gmtoff;],\n  ac_cv_struct_tm_gmtoff=yes, ac_cv_struct_tm_gmtoff=no)])\nif test \"$ac_cv_struct_tm_gmtoff\" = \"yes\"; then\n    AC_DEFINE(HAVE_GMTOFF, 1, [Define if struct tm has a tm_gmtoff field])\nfi\n\nAC_CHECK_DECL(CMSG_DATA,,, [#include <sys/types.h>\n#include <sys/socket.h>])\nif test $ac_cv_have_decl_CMSG_DATA = \"yes\"; then\n   AC_DEFINE([HAVE_FDPASSING], 1, [Define if file descriptor passing is supported])\n   ap_has_fdpassing=1\nelse\n   ap_has_fdpassing=0\n   AC_MSG_WARN([This system does not support file descriptor passing.])\nfi\n\nAPACHE_CHECK_SYSTEMD\n\ndnl ## Set up any appropriate OS-specific environment variables for apachectl\n\ncase $host in\n    *aix*)\n        # for 32-bit builds, increase MAXDATA to allow lots of threads\n        if test x$OBJECT_MODE != x64; then\n            OS_SPECIFIC_VARS=\"LDR_CNTRL=\\\"MAXDATA=0x80000000\\\" ; export LDR_CNTRL ;\"\n        fi\n        OS_SPECIFIC_VARS=\"$OS_SPECIFIC_VARS AIXTHREAD_SCOPE=S ; export AIXTHREAD_SCOPE\"\n        OS_SPECIFIC_VARS=\"$OS_SPECIFIC_VARS ; AIXTHREAD_MUTEX_DEBUG=OFF ; export AIXTHREAD_MUTEX_DEBUG\"\n        OS_SPECIFIC_VARS=\"$OS_SPECIFIC_VARS ; AIXTHREAD_RWLOCK_DEBUG=OFF ; export AIXTHREAD_RWLOCK_DEBUG\"\n        OS_SPECIFIC_VARS=\"$OS_SPECIFIC_VARS ; AIXTHREAD_COND_DEBUG=OFF ; export AIXTHREAD_COND_DEBUG\"\n        OS_SPECIFIC_VARS=\"$OS_SPECIFIC_VARS ; SPINLOOPTIME=1000 ; export SPINLOOPTIME\"\n        OS_SPECIFIC_VARS=\"$OS_SPECIFIC_VARS ; YIELDLOOPTIME=8 ; export YIELDLOOPTIME\"\n        OS_SPECIFIC_VARS=\"$OS_SPECIFIC_VARS ; MALLOCMULTIHEAP=considersize,heaps:8 ; export MALLOCMULTIHEAP\"\n        ;;\n    *os390*)\n        OS_SPECIFIC_VARS=\"export _CEE_RUNOPTS=\\\"STACK(,,ANY)\\\" ; export _EDC_ADD_ERRNO2=1\"\n        ;;\n    *)\n        OS_SPECIFIC_VARS=\"\"\nesac\n      \nAC_ARG_WITH(port,APACHE_HELP_STRING(--with-port=PORT,Port on which to listen (default is 80)),\n        [if test \"$withval\" = \"yes\"; then AC_MSG_ERROR('option --with-port requires a value (the TCP port number)'); else PORT=\"$withval\"; fi],\n\t[PORT=80])\n\nAC_ARG_WITH(sslport,APACHE_HELP_STRING(--with-sslport=SSLPORT,Port on which to securelisten (default is 443)),\n        [if test \"$withval\" = \"yes\"; then AC_MSG_ERROR('option --with-sslport requires a value (the SSL TCP port number)'); else SSLPORT=\"$withval\"; fi],\n\t[SSLPORT=443])\n\nDTRACE=true\nAC_ARG_ENABLE(dtrace,APACHE_HELP_STRING(--enable-dtrace,Enable DTrace probes),\n[\n  enable_dtrace=$enableval\n  if test \"$enableval\" = \"yes\"; then\n    APR_ADDTO(CPPFLAGS, -DAPR_DTRACE_PROVIDER)\n    AC_MSG_ERROR('DTrace Support in the build system is not complete. Patches Welcome!')\n  fi\n],\n[\n  enable_dtrace=no\n])\n\ndnl Disabled dtrace build for now.\nenable_dtrace=no\n\ncase $host in\n  *-solaris2*)\n    if test $enable_dtrace = \"yes\" -a \"$ac_cv_header_sys_sdt_h\" = \"yes\"; then\n        AC_DEFINE(AP_ENABLE_DTRACE, 1,\n                  [Enable DTrace probes])\n        DTRACE=\"/usr/sbin/dtrace $DTRACEFLAGS\"\n        test -f include/apache_probes.h || $DTRACE -h -s apache_probes.d -o include/apache_probes.h\n    fi\n    ;;\nesac\n\nAPACHE_SUBST(DTRACE)\n\nAC_ARG_ENABLE(hook-probes,APACHE_HELP_STRING(--enable-hook-probes,Enable APR hook probes),\n[\n    if test \"$enableval\" = \"yes\"; then\n        AC_DEFINE(AP_HOOK_PROBES_ENABLED, 1,\n                  [Enable the APR hook probes capability, reading from ap_hook_probes.h])\n        APR_ADDTO(INTERNAL_CPPFLAGS, -DAP_HOOK_PROBES_ENABLED)\n    fi\n])dnl\n\nAC_ARG_ENABLE(exception-hook,APACHE_HELP_STRING(--enable-exception-hook,Enable fatal exception hook),\n[\n    if test \"$enableval\" = \"yes\"; then\n        AC_DEFINE(AP_ENABLE_EXCEPTION_HOOK, 1,\n                  [Allow modules to run hook after a fatal exception])\n    fi\n])dnl\n\nAC_ARG_ENABLE(load-all-modules,APACHE_HELP_STRING(--enable-load-all-modules,Load all modules),\n[\n  LOAD_ALL_MODULES=$enableval\n  AC_MSG_NOTICE([Setting \"LOAD_ALL_MODULES\" to $LOAD_ALL_MODULES])\n],\n[\n  LOAD_ALL_MODULES=\"no\"\n])\n\nAC_ARG_ENABLE(maintainer-mode,APACHE_HELP_STRING(--enable-maintainer-mode,Turn on debugging and compile time warnings and load all compiled modules),\n[\n  if test \"$enableval\" = \"yes\"; then\n    APR_ADDTO(NOTEST_CPPFLAGS, -DAP_DEBUG)\n    if test \"$GCC\" = \"yes\"; then\n      APACHE_ADD_GCC_CFLAG([-std=c89])\n      APACHE_ADD_GCC_CFLAG([-Werror])\n      APACHE_ADD_GCC_CFLAG([-Wall])\n      APACHE_ADD_GCC_CFLAG([-Wstrict-prototypes])\n      APACHE_ADD_GCC_CFLAG([-Wmissing-prototypes])\n      APACHE_ADD_GCC_CFLAG([-Wmissing-declarations])\n      APACHE_ADD_GCC_CFLAG([-Wdeclaration-after-statement])\n      APACHE_ADD_GCC_CFLAG([-Wpointer-arith])\n      APACHE_ADD_GCC_CFLAG([-Wformat])\n      APACHE_ADD_GCC_CFLAG([-Wformat-security])\n      APACHE_ADD_GCC_CFLAG([-Wunused])\n    elif test \"$AIX_XLC\" = \"yes\"; then\n      APR_ADDTO(NOTEST_CFLAGS,-qfullpath -qcheck=all -qinfo=pro)\n    fi\n    if test \"x$enable_load_all_modules\" = \"x\"; then\n      LOAD_ALL_MODULES=yes\n      AC_MSG_NOTICE([Maintainer mode setting \"LOAD_ALL_MODULES\" to $LOAD_ALL_MODULES])\n    fi\n    if test \"x$enable_bucketeer\" = \"x\"; then\n      enable_bucketeer=yes\n      AC_MSG_NOTICE([Maintainer mode setting \"enable_bucketeer\" to yes])\n    fi\n  fi\n])dnl\n\nAC_ARG_ENABLE(debugger-mode,APACHE_HELP_STRING(--enable-debugger-mode,Turn on debugging and compile time warnings and turn off optimization),\n[\n  if test \"$enableval\" = \"yes\"; then\n    APR_ADDTO(NOTEST_CPPFLAGS, -DAP_DEBUG)\n    if test \"$GCC\" = \"yes\"; then\n      APACHE_ADD_GCC_CFLAG([-O0])\n      APACHE_ADD_GCC_CFLAG([-Wall])\n      APACHE_ADD_GCC_CFLAG([-Wstrict-prototypes])\n      APACHE_ADD_GCC_CFLAG([-Wmissing-prototypes])\n      APACHE_ADD_GCC_CFLAG([-Wmissing-declarations])\n      APACHE_ADD_GCC_CFLAG([-Wdeclaration-after-statement])\n      APACHE_ADD_GCC_CFLAG([-Werror=declaration-after-statement])\n      APACHE_ADD_GCC_CFLAG([-Wpointer-arith])\n      APACHE_ADD_GCC_CFLAG([-Wformat])\n      APACHE_ADD_GCC_CFLAG([-Wformat-security])\n      APACHE_ADD_GCC_CFLAG([-Werror=format-security])\n    elif test \"$AIX_XLC\" = \"yes\"; then\n      APR_ADDTO(NOTEST_CFLAGS,-qfullpath -qinitauto=FE -qcheck=all -qinfo=pro)\n    fi\n  fi\n])dnl\n\ndnl Conditionally enable PIE support for GNU toolchains.\nAC_ARG_ENABLE(pie,APACHE_HELP_STRING(--enable-pie,Build httpd as a Position Independent Executable))\nif test \"$enable_pie\" = \"yes\"; then\n   AC_CACHE_CHECK([whether $CC accepts PIE flags], [ap_cv_cc_pie], [\n     save_CFLAGS=$CFLAGS\n     save_LDFLAGS=$LDFLAGS\n     CFLAGS=\"$CFLAGS -fPIE\"\n     LDFLAGS=\"$LDFLAGS -pie\"\n     AC_TRY_RUN([static int foo[30000]; int main () { return 0; }],\n      [ap_cv_cc_pie=yes], [ap_cv_cc_pie=no], [ap_cv_cc_pie=yes])\n     CFLAGS=$save_CFLAGS\n     LDFLAGS=$save_LDFLAGS\n   ])\n   if test \"$ap_cv_cc_pie\" = \"yes\"; then\n     PICFLAGS=\"-fPIE\"\n     PILDFLAGS=\"-pie\"\n   else\n     AC_ERROR([--enable-pie requested but $CC failed using PIE flags])\n   fi\nfi\nAPACHE_SUBST(PICFLAGS)\nAPACHE_SUBST(PILDFLAGS)\n\nap_reduced_exports=no\nEXPORTS_DOT_C=exports.c\nLIBMAIN_LIB=server/libmain.la\nAPACHE_SUBST(EXPORTS_DOT_C)\nAPACHE_SUBST(LIBMAIN_LIB)\n\nAC_ARG_ENABLE(reduced-exports,\nAPACHE_HELP_STRING(--enable-reduced-exports,Reduce binary size if using shared APR libraries),\n[\n  if test \"$enableval\" = \"yes\" -a \"$GCC\" = \"yes\"; then\n    ap_reduced_exports=yes\n  fi\n])\n\nif test \"$ap_reduced_exports\" = \"yes\"; then\n  EXPORTS_DOT_C=\n  LIBMAIN_LIB=\"-Wl,--whole-archive,server/.libs/libmain.a,--no-whole-archive\"\n  AC_MSG_NOTICE([Using reduced symbol exports])\nelse\n  AC_DEFINE(AP_FORCE_EXPORTS, 1, [Force symbol exports for dependent libraries])\nfi\n\nAC_ARG_WITH(valgrind,\n  [  --with-valgrind[[=DIR]]   Enable code to reduce valgrind false positives\n                          (optionally: set path to valgrind headers) ],\n  [ if test \"$withval\" != no; then\n      if test \"$withval\" = yes; then\n        withval=/usr/include/valgrind\n      fi\n      APR_ADDTO(CPPFLAGS, -I$withval)\n      AC_CHECK_HEADERS(valgrind.h memcheck.h)\n      APR_IFALLYES(header:valgrind.h header:memcheck.h,\n        [AC_DEFINE(HAVE_VALGRIND, 1, [Compile in valgrind support]) ],\n        [AC_MSG_ERROR(valgrind headers not found) ]\n      )\n    fi ]\n)\n\ndnl Enable the unit test executable if Check is installed.\ndnl TODO: at the moment, only pkg-config discovery is supported.\nAC_MSG_CHECKING([for Check to enable unit tests])\nif test \"x$PKGCONFIG\" != \"x\" -a \"$ap_reduced_exports\" = \"no\" && `$PKGCONFIG --atleast-version='0.9.12' check`; then\n  UNITTEST_CFLAGS=`$PKGCONFIG --cflags check`\n  UNITTEST_LIBS=`$PKGCONFIG --libs check`\n  other_targets=\"$other_targets test/httpdunit\"\n\n  AC_MSG_RESULT([yes])\nelse\n  AC_MSG_RESULT([no])\nfi\nAPACHE_SUBST(UNITTEST_CFLAGS)\nAPACHE_SUBST(UNITTEST_LIBS)\n\n\nprefix=\"$orig_prefix\"\nAPACHE_ENABLE_MODULES\n\ndnl reading config stubs\nesyscmd(./build/config-stubs .)\n\nAPACHE_SUBST(progname)\nAPACHE_SUBST(OS)\nAPACHE_SUBST(OS_DIR)\nAPACHE_SUBST(BUILTIN_LIBS)\nAPACHE_SUBST(SHLIBPATH_VAR)\nAPACHE_SUBST(OS_SPECIFIC_VARS)\nAPACHE_SUBST(HTTPD_LIBS)\n\nPRE_SHARED_CMDS='echo \"\"'\nPOST_SHARED_CMDS='echo \"\"'\n\ndnl apache_need_shared tells us if Apache modules are being built as DSOs\n\nif test \"$apache_need_shared\" = \"yes\"; then\n  if test -f $ac_aux_dir/ltconfig; then\n    $SHELL $ac_aux_dir/ltconfig --output=shlibtool --disable-static --srcdir=$ac_aux_dir --cache-file=./config.cache $ac_aux_dir/ltmain.sh\n  fi\n  shared_build=\"shared-build\"\nfi\n\ndnl enable_so tells us if *any* modules can be built as DSOs\n\nif test \"$enable_so\" = \"yes\" -o \"$enable_so\" = \"static\"; then\n  case $host in\n    *-ibm-aix*)\n      APR_ADDTO(HTTPD_LDFLAGS, [-Wl,-uXML_Parse -Wl,-bE:$abs_builddir/server/httpd.exp])\n      APR_ADDTO(SH_LDFLAGS, [\\$(EXTRA_LDFLAGS) \\$(EXTRA_LIBS)])\n      APR_ADDTO(UTIL_LDFLAGS, [-Wl,-uXML_Parse])\n      ;;\n    *os390)\n      APR_ADDTO(HTTPD_LDFLAGS, [--main=$abs_srcdir/server/main.o --core-dll=$abs_srcdir/apachecore.dll])\n      APR_ADDTO(SH_LDFLAGS, [--core-dll=$abs_srcdir/apachecore.dll])\n  esac\n  MOD_SO_ENABLED=yes\nfi\nAC_SUBST(MOD_SO_ENABLED)\n\nAPACHE_SUBST(PRE_SHARED_CMDS)\nAPACHE_SUBST(POST_SHARED_CMDS)\nAPACHE_SUBST(shared_build)\n\nAC_ARG_WITH(program-name,\nAPACHE_HELP_STRING(--with-program-name,alternate executable name),[\n  progname=\"$withval\" ], [\n  progname=\"httpd\"] )\n\n# SuExec parameters\nAC_ARG_WITH(suexec-bin,\nAPACHE_HELP_STRING(--with-suexec-bin,Path to suexec binary),[\n  AC_DEFINE_UNQUOTED(SUEXEC_BIN, \"$withval\", [Path to suexec binary] )\n] )\n\nAC_ARG_WITH(suexec-caller,\nAPACHE_HELP_STRING(--with-suexec-caller,User allowed to call SuExec),[\n  AC_DEFINE_UNQUOTED(AP_HTTPD_USER, \"$withval\", [User allowed to call SuExec] ) ] )\n\nAC_ARG_WITH(suexec-userdir,\nAPACHE_HELP_STRING(--with-suexec-userdir,User subdirectory),[\n  AC_DEFINE_UNQUOTED(AP_USERDIR_SUFFIX, \"$withval\", [User subdirectory] ) ] )\n\nAC_ARG_WITH(suexec-docroot,\nAPACHE_HELP_STRING(--with-suexec-docroot,SuExec root directory),[\n  AC_DEFINE_UNQUOTED(AP_DOC_ROOT, \"$withval\", [SuExec root directory] ) ] )\n\nAC_ARG_WITH(suexec-uidmin,\nAPACHE_HELP_STRING(--with-suexec-uidmin,Minimal allowed UID),[\n  AC_DEFINE_UNQUOTED(AP_UID_MIN, $withval, [Minimum allowed UID] ) ] )\n\nAC_ARG_WITH(suexec-gidmin,\nAPACHE_HELP_STRING(--with-suexec-gidmin,Minimal allowed GID),[\n  AC_DEFINE_UNQUOTED(AP_GID_MIN, $withval, [Minimum allowed GID] ) ] )\n\nAC_ARG_WITH(suexec-logfile,\nAPACHE_HELP_STRING(--with-suexec-logfile,Set the logfile),[\n  if test \"x$withval\" = \"xyes\"; then\n    AC_MSG_ERROR([log filename required for --with-suexec-logfile option])\n  elif test \"x$withval\" != \"xno\"; then\n    AC_DEFINE_UNQUOTED(AP_LOG_EXEC, \"$withval\", [SuExec log file])\n  fi\n])\n\nAC_ARG_WITH(suexec-syslog,\nAPACHE_HELP_STRING(--with-suexec-syslog,Use syslog for suexec logging),[\n  if test $withval = \"yes\"; then\n    if test \"x${with_suexec_logfile}\" != \"xno\"; then\n      AC_MSG_NOTICE([hint: use \"--without-suexec-logfile --with-suexec-syslog\"])\n      AC_MSG_ERROR([suexec does not support both logging to file and syslog])\n    fi\n    AC_CHECK_FUNCS([vsyslog], [], [\n       AC_MSG_ERROR([cannot support syslog from suexec without vsyslog()])])\n    AC_DEFINE(AP_LOG_SYSLOG, 1, [SuExec log to syslog])\n  fi    \n])\n\n\nAC_ARG_WITH(suexec-safepath,\nAPACHE_HELP_STRING(--with-suexec-safepath,Set the safepath),[\n  AC_DEFINE_UNQUOTED(AP_SAFE_PATH, \"$withval\", [safe shell path for SuExec] ) ] )\n\nAC_ARG_WITH(suexec-umask,\nAPACHE_HELP_STRING(--with-suexec-umask,umask for suexec'd process),[\n  AC_DEFINE_UNQUOTED(AP_SUEXEC_UMASK, 0$withval, [umask for suexec'd process] ) ] )\n\nINSTALL_SUEXEC=setuid\nAC_ARG_ENABLE([suexec-capabilities], \nAPACHE_HELP_STRING(--enable-suexec-capabilities,Use Linux capability bits not setuid root suexec), [\n  if test \"$enableval\" = \"yes\"; then\n    INSTALL_SUEXEC=caps\n    AC_DEFINE(AP_SUEXEC_CAPABILITIES, 1, \n              [Enable if suexec is installed with Linux capabilities, not setuid])\n  fi\n])\nAPACHE_SUBST(INSTALL_SUEXEC)\n\ndnl APR should go after the other libs, so the right symbols can be picked up\nif test x${apu_found} != xobsolete; then\n  AP_LIBS=\"$AP_LIBS `$apu_config --avoid-ldap --link-libtool --libs`\"\nfi\nAP_LIBS=\"$AP_LIBS `$apr_config --link-libtool --libs`\" \nAPACHE_SUBST(AP_LIBS)\nAPACHE_SUBST(AP_BUILD_SRCLIB_DIRS)\nAPACHE_SUBST(AP_CLEAN_SRCLIB_DIRS)\n\nif test \"$SINGLE_LISTEN_UNSERIALIZED_ACCEPT\" = \"1\"; then\n    AC_DEFINE(SINGLE_LISTEN_UNSERIALIZED_ACCEPT, 1, \n              [This platform doesn't suffer from the thundering herd problem])\nfi\n\nif test \"$AP_NONBLOCK_WHEN_MULTI_LISTEN\" = \"1\"; then\n    AC_DEFINE(AP_NONBLOCK_WHEN_MULTI_LISTEN, 1, \n              [Listening sockets are non-blocking when there are more than 1])\nfi\n\nAPR_CHECK_APR_DEFINE(APR_HAVE_IPV6)\n\nAC_ARG_ENABLE(v4-mapped,APACHE_HELP_STRING(--enable-v4-mapped,Allow IPv6 sockets to handle IPv4 connections),\n[ \n  v4mapped=$enableval\n],\n[\n    case $host in\n    *freebsd[[1234]].*)\n        v4mapped=yes\n        ;;\n    *freebsd*|*netbsd*|*openbsd*)\n        v4mapped=no\n        ;;\n    *)\n        v4mapped=yes\n        ;;\n    esac\n    if ap_mpm_is_enabled winnt; then\n        dnl WinNT MPM doesn't support this.\n        v4mapped=no\n    fi\n])\n\nif test $v4mapped = \"yes\" -a $ac_cv_define_APR_HAVE_IPV6 = \"yes\"; then\n    AC_DEFINE(AP_ENABLE_V4_MAPPED, 1,\n              [Allow IPv4 connections on IPv6 listening sockets])\nfi\n\nAC_ARG_ENABLE(bsd-makefiles,APACHE_HELP_STRING(--enable-bsd-makefiles,use BSD Makefile syntax),\n[\n  FORCE_BSD_MAKEFILE=$enableval\n  AC_MSG_NOTICE([Setting \"FORCE_BSD_MAKEFILE\" to $FORCE_BSD_MAKEFILE])\n],\n[\n  FORCE_BSD_MAKEFILE=\"auto\"\n])\n\nAC_ARG_WITH([test-suite],\n    APACHE_HELP_STRING([--with-test-suite=PATH], [enable in-tree 'make check' with the given Apache::Test suite location]),\n    [\n        if test \"x$withval\" = \"xyes\"; then\n            AC_MSG_ERROR([option --with-test-suite requires a directory]);\n        else\n            test -f \"$withval/Makefile.PL\" || AC_MSG_ERROR([--with-test-suite directory $withval does not contain the expected Makefile.PL])\n            TEST_SUITE_LOCATION=\"$withval\"\n            WITH_TEST_SUITE=yes\n        fi\n    ],\n    [ WITH_TEST_SUITE=no ]\n)\n\nAPACHE_SUBST(TEST_SUITE_LOCATION)\nAPACHE_SUBST(WITH_TEST_SUITE)\n\nAPACHE_FAST_OUTPUT(Makefile modules/Makefile srclib/Makefile) \nAPACHE_FAST_OUTPUT(os/Makefile server/Makefile)\nAPACHE_FAST_OUTPUT(support/Makefile)\n\nif test -d ./test; then\n    APACHE_FAST_OUTPUT(test/Makefile)\n    AC_CONFIG_FILES([test/pyhttpd/config.ini])\n    APACHE_FAST_OUTPUT(test/clients/Makefile)\nfi\n\ndnl ## Finalize the variables\nAC_MSG_NOTICE([])\nAC_MSG_NOTICE([Restore user-defined environment settings...])\nAC_MSG_NOTICE([])\n\nAPACHE_CONF_SEL_CC=${CC}\nAPACHE_CONF_SEL_CFLAGS=\"${CFLAGS} ${EXTRA_CFLAGS} ${NOTEST_CFLAGS}\"\nAPACHE_CONF_SEL_CPPFLAGS=\"${CPPFLAGS} ${EXTRA_CPPFLAGS} ${NOTEST_CPPFLAGS}\"\nAPACHE_CONF_SEL_LDFLAGS=\"${LDFLAGS} ${EXTRA_LDFLAGS} ${NOTEST_LDFLAGS}\"\nAPACHE_CONF_SEL_LIBS=\"${LIBS} ${EXTRA_LIBS} ${NOTEST_LIBS}\"\nAPACHE_CONF_SEL_CPP=${CPP}\n\nAPR_RESTORE_THE_ENVIRONMENT(CPPFLAGS, EXTRA_)\nAPR_RESTORE_THE_ENVIRONMENT(CFLAGS, EXTRA_)\nAPR_RESTORE_THE_ENVIRONMENT(CXXFLAGS, EXTRA_)\nAPR_RESTORE_THE_ENVIRONMENT(LDFLAGS, EXTRA_)\nAPR_RESTORE_THE_ENVIRONMENT(LIBS, EXTRA_)\nAPR_RESTORE_THE_ENVIRONMENT(INCLUDES, EXTRA_)\n\nAC_MSG_NOTICE([])\nAC_MSG_NOTICE([Construct makefiles and header files...])\nAC_MSG_NOTICE([])\n\nAPACHE_GEN_CONFIG_VARS\n\nAPR_EXPAND_VAR(ap_prefix, $prefix)\nAC_DEFINE_UNQUOTED(HTTPD_ROOT, \"${ap_prefix}\",\n\t[Root directory of the Apache install area])\nAC_DEFINE_UNQUOTED(SERVER_CONFIG_FILE, \"${rel_sysconfdir}/${progname}.conf\",\n\t[Location of the config file, relative to the Apache root directory])\nAC_DEFINE_UNQUOTED(AP_TYPES_CONFIG_FILE, \"${rel_sysconfdir}/mime.types\",\n\t[Location of the MIME types config file, relative to the Apache root directory])\n\nperlbin=`$ac_aux_dir/PrintPath perl`\nif test \"x$perlbin\" = \"x\"; then\n    perlbin=\"/replace/with/path/to/perl/interpreter\"\nfi\nAC_SUBST(perlbin)\n\ndnl If we are running on a BSD variant, see if we need to use the BSD .include syntax.\n\nap_make_include=include\nap_make_ifdef=ifdef\nap_make_else=else\nap_make_endif=endif\nap_make_delimiter=' '\nif test \"x$FORCE_BSD_MAKEFILE\" = \"xno\"; then\n  BSD_MAKEFILE=no\nelif test \"x$FORCE_BSD_MAKEFILE\" = \"xyes\"; then\n  BSD_MAKEFILE=yes\nelse\n  case $host in\n  *bsd*)\n      # Check whether they've installed GNU make\n      if make --version > /dev/null 2>&1; then\n          BSD_MAKEFILE=no\n      elif gmake --version > /dev/null 2>&1; then\n          BSD_MAKEFILE=no\n      else\n          BSD_MAKEFILE=yes\n      fi\n      ;;\n  *)\n      BSD_MAKEFILE=no\n      ;;\n  esac\nfi\nif test \"x$BSD_MAKEFILE\" = \"xyes\"; then\n  ap_make_include=.include\n  ap_make_ifdef=.ifdef\n  ap_make_else=.else\n  ap_make_endif=.endif\n  ap_make_delimiter='\"'\nfi\nAC_MSG_NOTICE([using BSD Makefile syntax... $BSD_MAKEFILE])\n\nAC_SUBST(ap_make_include)\nAC_SUBST(ap_make_ifdef)\nAC_SUBST(ap_make_else)\nAC_SUBST(ap_make_endif)\nAC_SUBST(ap_make_delimiter)\n\ndnl Ensure that docs/conf is created.\ntest -d docs/conf||$mkdir_p docs/conf\n\nAC_CONFIG_FILES(docs/conf/httpd.conf docs/conf/extra/httpd-autoindex.conf docs/conf/extra/httpd-dav.conf docs/conf/extra/httpd-default.conf docs/conf/extra/httpd-info.conf docs/conf/extra/httpd-languages.conf docs/conf/extra/httpd-manual.conf docs/conf/extra/httpd-mpm.conf docs/conf/extra/httpd-multilang-errordoc.conf docs/conf/extra/httpd-policy.conf docs/conf/extra/httpd-ssl.conf docs/conf/extra/httpd-userdir.conf docs/conf/extra/httpd-vhosts.conf docs/conf/extra/proxy-html.conf docs/conf/extra/httpd-macro.conf include/ap_config_layout.h support/apxs support/apachectl support/dbmmanage support/envvars-std support/log_server_status support/logresolve.pl support/phf_abuse_log.cgi support/split-logfile build/rules.mk build/pkg/pkginfo build/config_vars.sh)\nAC_CONFIG_COMMANDS([default],\n  [$SHELL $srcdir/build/fastgen.sh $srcdir $ac_cv_mkdir_p $BSD_MAKEFILE $APACHE_FAST_OUTPUT_FILES >&AS_MESSAGE_FD],\n  [ac_cv_mkdir_p=$ac_cv_mkdir_p\nBSD_MAKEFILE=$BSD_MAKEFILE\nAPACHE_FAST_OUTPUT_FILES=\"$APACHE_FAST_OUTPUT_FILES\"\n])\nAC_CONFIG_COMMANDS([modules.c], [\n## Build modules.c\nrm -f modules.c\necho $MODLIST | $AWK -f $srcdir/build/build-modules-c.awk > modules.c\n], [MODLIST=\"$MODLIST\"])\nAC_OUTPUT\n\nAC_MSG_NOTICE([summary of build options:\n\n    Server Version: ${HTTPD_VERSION}\n    Install prefix: ${prefix}\n    C compiler:     ${APACHE_CONF_SEL_CC}\n    CFLAGS:         ${APACHE_CONF_SEL_CFLAGS}\n    CPPFLAGS:       ${APACHE_CONF_SEL_CPPFLAGS}\n    LDFLAGS:        ${APACHE_CONF_SEL_LDFLAGS}\n    LIBS:           ${APACHE_CONF_SEL_LIBS}\n    C preprocessor: ${APACHE_CONF_SEL_CPP}\n])\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "emacs-style",
          "type": "blob",
          "size": 0.3935546875,
          "content": "(add-hook 'c-mode-hook\n          (function (lambda ()\n\t\t\t(c-set-offset 'inclass' ++)\n\t\t\t(c-set-offset 'defun-block-intro' ++)\n\t\t\t(c-set-offset 'statement-block-intro' ++)\n\t\t\t(c-set-offset 'substatement' ++)\n\t\t\t(c-set-offset 'brace-list-intro' ++)\n\t\t\t(c-set-offset 'statement-case-intro' ++)\n\t\t\t(c-set-offset 'inextern-lang' 0)\n\t\t\t)))\n(setq c++-mode-hook c-mode-hook)\n(setq-default indent-tabs-mode nil)\n"
        },
        {
          "name": "httpd.dsp",
          "type": "blob",
          "size": 4.02734375,
          "content": "# Microsoft Developer Studio Project File - Name=\"httpd\" - Package Owner=<4>\n# Microsoft Developer Studio Generated Build File, Format Version 6.00\n# ** DO NOT EDIT **\n\n# TARGTYPE \"Win32 (x86) Console Application\" 0x0103\n\nCFG=httpd - Win32 Release\n!MESSAGE This is not a valid makefile. To build this project using NMAKE,\n!MESSAGE use the Export Makefile command and run\n!MESSAGE \n!MESSAGE NMAKE /f \"httpd.mak\".\n!MESSAGE \n!MESSAGE You can specify a configuration when running NMAKE\n!MESSAGE by defining the macro CFG on the command line. For example:\n!MESSAGE \n!MESSAGE NMAKE /f \"httpd.mak\" CFG=\"httpd - Win32 Release\"\n!MESSAGE \n!MESSAGE Possible choices for configuration are:\n!MESSAGE \n!MESSAGE \"httpd - Win32 Release\" (based on \"Win32 (x86) Console Application\")\n!MESSAGE \"httpd - Win32 Debug\" (based on \"Win32 (x86) Console Application\")\n!MESSAGE \n\n# Begin Project\n# PROP AllowPerConfigDependencies 0\n# PROP Scc_ProjName \"\"\n# PROP Scc_LocalPath \"\"\nCPP=cl.exe\nRSC=rc.exe\n\n!IF  \"$(CFG)\" == \"httpd - Win32 Release\"\n\n# PROP BASE Use_MFC 0\n# PROP BASE Use_Debug_Libraries 0\n# PROP BASE Output_Dir \"Release\"\n# PROP BASE Intermediate_Dir \"Release\"\n# PROP BASE Target_Dir \"\"\n# PROP Use_MFC 0\n# PROP Use_Debug_Libraries 0\n# PROP Output_Dir \"Release\"\n# PROP Intermediate_Dir \"Release\"\n# PROP Ignore_Export_Lib 0\n# PROP Target_Dir \"\"\n# ADD BASE CPP /nologo /MD /W3 /O2 /D \"WIN32\" /D \"NDEBUG\" /D \"_CONSOLE\" /D \"SHARED_MODULE\" /FD /c\n# ADD CPP /nologo /MD /W3 /O2 /Oy- /Zi /I \"./include\" /I \"./srclib/apr/include\" /I \"./srclib/apr-util/include\" /D \"NDEBUG\" /D \"WIN32\" /D \"_CONSOLE\" /Fd\"Release\\httpd\" /FD /c\n# ADD BASE RSC /l 0x409 /d \"NDEBUG\"\n# ADD RSC /l 0x409 /i \"./include\" /i \"./srclib/apr/include\" /d \"NDEBUG\" /d \"APP_FILE\" /d BIN_NAME=\"httpd.exe\" /d LONG_NAME=\"Apache HTTP Server\" /d ICON_FILE=\"apache.ico\"\nBSC32=bscmake.exe\n# ADD BASE BSC32 /nologo\n# ADD BSC32 /nologo\nLINK32=link.exe\n# ADD BASE LINK32 kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib /nologo /subsystem:console\n# ADD LINK32 kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib /nologo /stack:0x40000 /subsystem:console /debug /opt:ref\n# Begin Special Build Tool\nTargetPath=.\\Release\\httpd.exe\nSOURCE=\"$(InputPath)\"\nPostBuild_Desc=Embed .manifest\nPostBuild_Cmds=if exist $(TargetPath).manifest mt.exe -manifest $(TargetPath).manifest -outputresource:$(TargetPath);1\n# End Special Build Tool\n\n!ELSEIF  \"$(CFG)\" == \"httpd - Win32 Debug\"\n\n# PROP BASE Use_MFC 0\n# PROP BASE Use_Debug_Libraries 1\n# PROP BASE Output_Dir \"Debug\"\n# PROP BASE Intermediate_Dir \"Debug\"\n# PROP BASE Target_Dir \"\"\n# PROP Use_MFC 0\n# PROP Use_Debug_Libraries 1\n# PROP Output_Dir \"Debug\"\n# PROP Intermediate_Dir \"Debug\"\n# PROP Ignore_Export_Lib 0\n# PROP Target_Dir \"\"\n# ADD BASE CPP /nologo /MDd /W3 /EHsc /Zi /Od /D \"WIN32\" /D \"_DEBUG\" /D \"_CONSOLE\" /FD /c\n# ADD CPP /nologo /MDd /W3 /EHsc /Zi /Od /I \"./include\" /I \"./srclib/apr/include\" /I \"./srclib/apr-util/include\" /D \"_DEBUG\" /D \"WIN32\" /D \"_CONSOLE\" /Fd\"Debug\\httpd\" /FD /c\n# SUBTRACT CPP /YX\n# ADD BASE RSC /l 0x409 /d \"_DEBUG\"\n# ADD RSC /l 0x409 /i \"./include\" /i \"./srclib/apr/include\" /d \"_DEBUG\" /d \"APP_FILE\" /d BIN_NAME=\"httpd.exe\" /d LONG_NAME=\"Apache HTTP Server\" /d ICON_FILE=\"apache.ico\"\nBSC32=bscmake.exe\n# ADD BASE BSC32 /nologo\n# ADD BSC32 /nologo\nLINK32=link.exe\n# ADD BASE LINK32 kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib /nologo /subsystem:console /incremental:no /debug\n# ADD LINK32 kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib /nologo /stack:0x40000 /subsystem:console /incremental:no /debug\n# Begin Special Build Tool\nTargetPath=.\\Debug\\httpd.exe\nSOURCE=\"$(InputPath)\"\nPostBuild_Desc=Embed .manifest\nPostBuild_Cmds=if exist $(TargetPath).manifest mt.exe -manifest $(TargetPath).manifest -outputresource:$(TargetPath);1\n# End Special Build Tool\n\n!ENDIF \n\n# Begin Target\n\n# Name \"httpd - Win32 Release\"\n# Name \"httpd - Win32 Debug\"\n# Begin Source File\n\nSOURCE=.\\build\\win32\\Apache.ico\n# End Source File\n# Begin Source File\n\nSOURCE=.\\build\\win32\\httpd.rc\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\main.c\n# End Source File\n# End Target\n# End Project\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "libapreq.dsp",
          "type": "blob",
          "size": 6.3310546875,
          "content": "# Microsoft Developer Studio Project File - Name=\"libapreq\" - Package Owner=<4>\r\n# Microsoft Developer Studio Generated Build File, Format Version 6.00\r\n# ** DO NOT EDIT **\r\n\r\n# TARGTYPE \"Win32 (x86) Dynamic-Link Library\" 0x0102\r\n\r\nCFG=libapreq - Win32 Release\r\n!MESSAGE This is not a valid makefile. To build this project using NMAKE,\r\n!MESSAGE use the Export Makefile command and run\r\n!MESSAGE \r\n!MESSAGE NMAKE /f \"libapreq.mak\".\r\n!MESSAGE \r\n!MESSAGE You can specify a configuration when running NMAKE\r\n!MESSAGE by defining the macro CFG on the command line. For example:\r\n!MESSAGE \r\n!MESSAGE NMAKE /f \"libapreq.mak\" CFG=\"libapreq - Win32 Release\"\r\n!MESSAGE \r\n!MESSAGE Possible choices for configuration are:\r\n!MESSAGE \r\n!MESSAGE \"libapreq - Win32 Release\" (based on \"Win32 (x86) Dynamic-Link Library\")\r\n!MESSAGE \"libapreq - Win32 Debug\" (based on \"Win32 (x86) Dynamic-Link Library\")\r\n!MESSAGE \r\n\r\n# Begin Project\r\n# PROP AllowPerConfigDependencies 0\r\n# PROP Scc_ProjName \"\"\r\n# PROP Scc_LocalPath \"\"\r\nCPP=cl.exe\r\nMTL=midl.exe\r\nRSC=rc.exe\r\n\r\n!IF  \"$(CFG)\" == \"libapreq - Win32 Release\"\r\n\r\n# PROP BASE Use_MFC 0\r\n# PROP BASE Use_Debug_Libraries 0\r\n# PROP BASE Output_Dir \"Release\"\r\n# PROP BASE Intermediate_Dir \"Release\"\r\n# PROP BASE Target_Dir \"\"\r\n# PROP Use_MFC 0\r\n# PROP Use_Debug_Libraries 0\r\n# PROP Output_Dir \"Release\"\r\n# PROP Intermediate_Dir \"Release\"\r\n# PROP Ignore_Export_Lib 0\r\n# PROP Target_Dir \"\"\r\n# ADD BASE CPP /nologo /MD /W3 /O2 /D \"NDEBUG\" /D \"WIN32\" /D \"_WINDOWS\" /D \"AP_DECLARE_EXPORT\" /D \"APREQ_DECLARE_EXPORT\" /FD /c\r\n# ADD CPP /nologo /MD /W3 /Zi /O2 /Oy- /I \"./include\" /I \"./srclib/apr/include\" /I \"./srclib/apr-util/include\" /I \"./srclib/pcre\" /D \"NDEBUG\" /D \"WIN32\" /D \"_WINDOWS\" /D \"AP_DECLARE_EXPORT\" /D \"APREQ_DECLARE_EXPORT\" /Fd\"Release\\libapreq_cl\" /FD /c\r\n# ADD BASE MTL /nologo /D \"NDEBUG\" /win32\r\n# ADD MTL /nologo /D \"NDEBUG\" /mktyplib203 /win32\r\n# ADD BASE RSC /l 0x409 /d \"NDEBUG\"\r\n# ADD RSC /l 0x409 /fo\"Release/libapreq.res\" /i \"./include\" /i \"./srclib/apr/include\" /d \"NDEBUG\" /d BIN_NAME=\"libapreq.dll\" /d LONG_NAME=\"libapreq\"\r\nBSC32=bscmake.exe\r\n# ADD BASE BSC32 /nologo\r\n# ADD BSC32 /nologo\r\nLINK32=link.exe\r\n# ADD BASE LINK32 kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib /nologo /subsystem:windows /dll /machine:IX86\r\n# ADD LINK32 pcre.lib kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib /nologo /subsystem:windows /dll /debug /machine:IX86 /libpath:\"./srclib/pcre\" /base:@\"os\\win32\\BaseAddr.ref\",libapreq.dll /opt:ref\r\n# Begin Special Build Tool\r\nTargetPath=.\\Release\\libapreq.dll\r\nSOURCE=\"$(InputPath)\"\r\nPostBuild_Desc=Embed .manifest\r\nPostBuild_Cmds=if exist $(TargetPath).manifest mt.exe -manifest $(TargetPath).manifest -outputresource:$(TargetPath);2\r\n# End Special Build Tool\r\n\r\n!ELSEIF  \"$(CFG)\" == \"libapreq - Win32 Debug\"\r\n\r\n# PROP BASE Use_MFC 0\r\n# PROP BASE Use_Debug_Libraries 1\r\n# PROP BASE Output_Dir \"Debug\"\r\n# PROP BASE Intermediate_Dir \"Debug\"\r\n# PROP BASE Target_Dir \"\"\r\n# PROP Use_MFC 0\r\n# PROP Use_Debug_Libraries 1\r\n# PROP Output_Dir \"Debug\"\r\n# PROP Intermediate_Dir \"Debug\"\r\n# PROP Ignore_Export_Lib 0\r\n# PROP Target_Dir \"\"\r\n# ADD BASE CPP /nologo /MDd /W3 /Zi /Od /D \"_DEBUG\" /D \"WIN32\" /D \"_WINDOWS\"/D \"AP_DECLARE_EXPORT\" /D \"APREQ_DECLARE_EXPORT\"  /FD /EHsc /c\r\n# ADD CPP /nologo /MDd /W3 /Zi /Od /I \"./include\" /I \"./srclib/apr/include\" /I \"./srclib/apr-util/include\" /I \"./srclib/pcre\" /D \"_DEBUG\" /D \"WIN32\" /D \"_WINDOWS\" /D \"AP_DECLARE_EXPORT\" /D \"APREQ_DECLARE_EXPORT\" /Fd\"Debug\\libapreq_cl\" /FD /EHsc /c\r\n# ADD BASE MTL /nologo /D \"_DEBUG\" /win32\r\n# ADD MTL /nologo /D \"_DEBUG\" /mktyplib203 /win32\r\n# ADD BASE RSC /l 0x409 /d \"_DEBUG\"\r\n# ADD RSC /l 0x409 /fo\"Debug/libapreq.res\" /i \"./include\" /i \"./srclib/apr/include\" /d \"_DEBUG\" /d BIN_NAME=\"libapreq.dll\" /d LONG_NAME=\"libapreq\"\r\nBSC32=bscmake.exe\r\n# ADD BASE BSC32 /nologo\r\n# ADD BSC32 /nologo\r\nLINK32=link.exe\r\n# ADD BASE LINK32 kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib /nologo /subsystem:windows /dll /incremental:no /debug /machine:IX86\r\n# ADD LINK32 pcred.lib kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib /nologo /subsystem:windows /dll /incremental:no /debug /machine:IX86 /libpath:\"./srclib/pcre\" /base:@\"os\\win32\\BaseAddr.ref\",libapreq.dll\r\n# Begin Special Build Tool\r\nTargetPath=.\\Debug\\libapreq.dll\r\nSOURCE=\"$(InputPath)\"\r\nPostBuild_Desc=Embed .manifest\r\nPostBuild_Cmds=if exist $(TargetPath).manifest mt.exe -manifest $(TargetPath).manifest -outputresource:$(TargetPath);2\r\n# End Special Build Tool\r\n\r\n!ENDIF \r\n\r\n# Begin Target\r\n\r\n# Name \"libapreq - Win32 Release\"\r\n# Name \"libapreq - Win32 Debug\"\r\n# Begin Group \"headers\"\r\n\r\n# PROP Default_Filter \"cpp;c;cxx;rc;def;r;odl;hpj;bat;for;f90\"\r\n# Begin Source File\r\n\r\nSOURCE=.\\include\\ap_config.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\include\\ap_release.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\include\\apreq.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\include\\apreq_cookie.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\include\\apreq_error.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\include\\apreq_module.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\include\\apreq_param.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\include\\apreq_parser.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\include\\apreq_util.h\r\n# End Source File\r\n# End Group\r\n# Begin Group \"libapreq\"\r\n\r\n# PROP Default_Filter \"\"\r\n# Begin Source File\r\n\r\nSOURCE=.\\server\\apreq_cookie.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\server\\apreq_error.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\server\\apreq_module.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\server\\apreq_module_cgi.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\server\\apreq_module_custom.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\server\\apreq_param.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\server\\apreq_parser.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\server\\apreq_parser_header.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\server\\apreq_parser_multipart.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\server\\apreq_parser_urlencoded.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\server\\apreq_util.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\server\\buildmark.c\r\n# PROP Exclude_From_Build 1\r\n# End Source File\r\n# End Group\r\n# Begin Source File\r\n\r\nSOURCE=.\\build\\win32\\httpd.rc\r\n# End Source File\r\n# End Target\r\n# End Project\r\n"
        },
        {
          "name": "libhttpd.dsp",
          "type": "blob",
          "size": 20.5078125,
          "content": "# Microsoft Developer Studio Project File - Name=\"libhttpd\" - Package Owner=<4>\n# Microsoft Developer Studio Generated Build File, Format Version 6.00\n# ** DO NOT EDIT **\n\n# TARGTYPE \"Win32 (x86) Dynamic-Link Library\" 0x0102\n\nCFG=libhttpd - Win32 Release\n!MESSAGE This is not a valid makefile. To build this project using NMAKE,\n!MESSAGE use the Export Makefile command and run\n!MESSAGE \n!MESSAGE NMAKE /f \"libhttpd.mak\".\n!MESSAGE \n!MESSAGE You can specify a configuration when running NMAKE\n!MESSAGE by defining the macro CFG on the command line. For example:\n!MESSAGE \n!MESSAGE NMAKE /f \"libhttpd.mak\" CFG=\"libhttpd - Win32 Release\"\n!MESSAGE \n!MESSAGE Possible choices for configuration are:\n!MESSAGE \n!MESSAGE \"libhttpd - Win32 Release\" (based on \"Win32 (x86) Dynamic-Link Library\")\n!MESSAGE \"libhttpd - Win32 Debug\" (based on \"Win32 (x86) Dynamic-Link Library\")\n!MESSAGE \"libhttpd - Win32 Lexical\" (based on \"Win32 (x86) Dynamic-Link Library\")\n!MESSAGE \n\n# Begin Project\n# PROP AllowPerConfigDependencies 0\n# PROP Scc_ProjName \"\"\n# PROP Scc_LocalPath \"\"\nCPP=cl.exe\nMTL=midl.exe\nRSC=rc.exe\n\n!IF  \"$(CFG)\" == \"libhttpd - Win32 Release\"\n\n# PROP BASE Use_MFC 0\n# PROP BASE Use_Debug_Libraries 0\n# PROP BASE Output_Dir \"Release\"\n# PROP BASE Intermediate_Dir \"Release\"\n# PROP BASE Target_Dir \"\"\n# PROP Use_MFC 0\n# PROP Use_Debug_Libraries 0\n# PROP Output_Dir \"Release\"\n# PROP Intermediate_Dir \"Release\"\n# PROP Ignore_Export_Lib 0\n# PROP Target_Dir \"\"\n# ADD BASE CPP /nologo /MD /W3 /O2 /D \"NDEBUG\" /D \"WIN32\" /D \"_WINDOWS\" /D \"AP_DECLARE_EXPORT\" /FD /c\n# ADD CPP /nologo /MD /W3 /O2 /Oy- /Zi /I \"./include\" /I \"./srclib/apr/include\" /I \"./srclib/apr-util/include\" /I \"./srclib/pcre\" /D \"NDEBUG\" /D \"WIN32\" /D \"_WINDOWS\" /D \"AP_DECLARE_EXPORT\" /Fd\"Release\\libhttpd_cl\" /FD /c\n# ADD BASE MTL /nologo /D \"NDEBUG\" /win32\n# ADD MTL /nologo /D \"NDEBUG\" /mktyplib203 /win32\n# ADD BASE RSC /l 0x409 /d \"NDEBUG\"\n# ADD RSC /l 0x409 /fo\"Release/libhttpd.res\" /i \"./include\" /i \"./srclib/apr/include\" /d \"NDEBUG\" /d BIN_NAME=\"libhttpd.dll\" /d LONG_NAME=\"Apache HTTP Server Core\"\nBSC32=bscmake.exe\n# ADD BASE BSC32 /nologo\n# ADD BSC32 /nologo\nLINK32=link.exe\n# ADD BASE LINK32 kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib /nologo /subsystem:windows /dll\n# ADD LINK32 pcre.lib kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib \"Release\\buildmark.obj\" /nologo /subsystem:windows /dll /debug /libpath:\"./srclib/pcre\" /base:@\"os\\win32\\BaseAddr.ref\",libhttpd.dll /opt:ref\n# Begin Special Build Tool\nTargetPath=.\\Release\\libhttpd.dll\nSOURCE=\"$(InputPath)\"\nPreLink_Desc=Compiling buildmark\nPreLink_Cmds=cl.exe /nologo /MD /W3 /O2 /Oy- /Zi /I \"./include\" /I \"./srclib/apr/include\" /I \"./srclib/apr-util/include\" /I \"./srclib/pcre\" /D \"NDEBUG\" /D \"WIN32\" /D \"_WINDOWS\" /D \"AP_DECLARE_EXPORT\" /Fd\"Release\\libhttpd\" /FD /c server\\buildmark.c /Fo\"Release\\buildmark.obj\"\nPostBuild_Desc=Embed .manifest\nPostBuild_Cmds=if exist $(TargetPath).manifest mt.exe -manifest $(TargetPath).manifest -outputresource:$(TargetPath);2\n# End Special Build Tool\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Debug\"\n\n# PROP BASE Use_MFC 0\n# PROP BASE Use_Debug_Libraries 1\n# PROP BASE Output_Dir \"Debug\"\n# PROP BASE Intermediate_Dir \"Debug\"\n# PROP BASE Target_Dir \"\"\n# PROP Use_MFC 0\n# PROP Use_Debug_Libraries 1\n# PROP Output_Dir \"Debug\"\n# PROP Intermediate_Dir \"Debug\"\n# PROP Ignore_Export_Lib 0\n# PROP Target_Dir \"\"\n# ADD BASE CPP /nologo /MDd /W3 /EHsc /Zi /Od /D \"_DEBUG\" /D \"WIN32\" /D \"_WINDOWS\" /D \"AP_DECLARE_EXPORT\" /FD /c\n# ADD CPP /nologo /MDd /W3 /EHsc /Zi /Od /I \"./include\" /I \"./srclib/apr/include\" /I \"./srclib/apr-util/include\" /I \"./srclib/pcre\" /D \"_DEBUG\" /D \"WIN32\" /D \"_WINDOWS\" /D \"AP_DECLARE_EXPORT\" /Fd\"Debug\\libhttpd_cl\" /FD /c\n# ADD BASE MTL /nologo /D \"_DEBUG\" /win32\n# ADD MTL /nologo /D \"_DEBUG\" /mktyplib203 /win32\n# ADD BASE RSC /l 0x409 /d \"_DEBUG\"\n# ADD RSC /l 0x409 /fo\"Debug/libhttpd.res\" /i \"./include\" /i \"./srclib/apr/include\" /d \"_DEBUG\" /d BIN_NAME=\"libhttpd.dll\" /d LONG_NAME=\"Apache HTTP Server Core\"\nBSC32=bscmake.exe\n# ADD BASE BSC32 /nologo\n# ADD BSC32 /nologo\nLINK32=link.exe\n# ADD BASE LINK32 kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib /nologo /subsystem:windows /dll /incremental:no /debug\n# ADD LINK32 pcred.lib kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib \"Debug\\buildmark.obj\" /nologo /subsystem:windows /dll /incremental:no /debug /libpath:\"./srclib/pcre\" /base:@\"os\\win32\\BaseAddr.ref\",libhttpd.dll\n# Begin Special Build Tool\nTargetPath=.\\Debug\\libhttpd.dll\nSOURCE=\"$(InputPath)\"\nPreLink_Desc=Compiling buildmark\nPreLink_Cmds=cl.exe /nologo /MDd /W3 /EHsc /Zi /Od /I \"./include\" /I \"./srclib/apr/include\" /I \"./srclib/apr-util/include\" /I \"./srclib/pcre\" /D \"_DEBUG\" /D \"WIN32\" /D \"_WINDOWS\" /D \"AP_DECLARE_EXPORT\" /Fd\"Debug\\libhttpd\" /FD /c server\\buildmark.c /Fo\"Debug\\buildmark.obj\"\nPostBuild_Desc=Embed .manifest\nPostBuild_Cmds=if exist $(TargetPath).manifest mt.exe -manifest $(TargetPath).manifest -outputresource:$(TargetPath);2\n# End Special Build Tool\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Lexical\"\n\n# PROP BASE Use_MFC 0\n# PROP BASE Use_Debug_Libraries 0\n# PROP BASE Output_Dir \"Release\"\n# PROP BASE Intermediate_Dir \"Release\"\n# PROP BASE Target_Dir \"\"\n# PROP Use_MFC 0\n# PROP Use_Debug_Libraries 0\n# PROP Output_Dir \"Release\"\n# PROP Intermediate_Dir \"Release\"\n# PROP Ignore_Export_Lib 0\n# PROP Target_Dir \"\"\n# ADD BASE CPP /nologo /MD /W3 /O2 /D \"NDEBUG\" /D \"WIN32\" /D \"_WINDOWS\" /D \"AP_DECLARE_EXPORT\" /FD /c\n# ADD CPP /nologo /MD /W3 /O2 /Oy- /Zi /I \"./include\" /I \"./srclib/apr/include\" /I \"./srclib/apr-util/include\" /I \"./srclib/pcre\" /D \"NDEBUG\" /D \"WIN32\" /D \"_WINDOWS\" /D \"AP_DECLARE_EXPORT\" /Fd\"Release\\libhttpd_cl\" /FD /c\n# ADD BASE MTL /nologo /D \"NDEBUG\" /win32\n# ADD MTL /nologo /D \"NDEBUG\" /mktyplib203 /win32\n# ADD BASE RSC /l 0x409 /d \"NDEBUG\"\n# ADD RSC /l 0x409 /fo\"Release/libhttpd.res\" /i \"./include\" /i \"./srclib/apr/include\" /d \"NDEBUG\" /d BIN_NAME=\"libhttpd.dll\" /d LONG_NAME=\"Apache HTTP Server Core\"\nBSC32=bscmake.exe\n# ADD BASE BSC32 /nologo\n# ADD BSC32 /nologo\nLINK32=link.exe\n# ADD BASE LINK32 kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib /nologo /subsystem:windows /dll\n# ADD LINK32 pcre.lib kernel32.lib user32.lib advapi32.lib ws2_32.lib mswsock.lib \"Release\\buildmark.obj\" /nologo /subsystem:windows /dll /debug /libpath:\"./srclib/pcre\" /base:@\"os\\win32\\BaseAddr.ref\",libhttpd.dll /opt:ref\n# Begin Special Build Tool\nTargetPath=.\\Release\\libhttpd.dll\nSOURCE=\"$(InputPath)\"\nPreLink_Desc=Compiling buildmark\nPreLink_Cmds=cl.exe /nologo /MD /W3 /O2 /Oy- /Zi /I \"./include\" /I \"./srclib/apr/include\" /I \"./srclib/apr-util/include\" /I \"./srclib/pcre\" /D \"NDEBUG\" /D \"WIN32\" /D \"_WINDOWS\" /D \"AP_DECLARE_EXPORT\" /Fd\"Release\\libhttpd\" /FD /c server\\buildmark.c /Fo\"Release\\buildmark.obj\"\nPostBuild_Desc=Embed .manifest\nPostBuild_Cmds=if exist $(TargetPath).manifest mt.exe -manifest $(TargetPath).manifest -outputresource:$(TargetPath);2\n# End Special Build Tool\n\n\n!ENDIF \n\n# Begin Target\n\n# Name \"libhttpd - Win32 Release\"\n# Name \"libhttpd - Win32 Debug\"\n# Name \"libhttpd - Win32 Lexical\"\n# Begin Group \"headers\"\n\n# PROP Default_Filter \"cpp;c;cxx;rc;def;r;odl;hpj;bat;for;f90\"\n# Begin Source File\n\nSOURCE=.\\include\\ap_compat.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\ap_config.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\ap_expr.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\ap_mmn.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\ap_release.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\http_config.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\http_connection.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\http_core.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\http_log.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\http_main.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\http_protocol.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\http_request.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\http_ssl.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\http_vhost.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\httpd.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\os\\win32\\win32_config_layout.h\n\n!IF  \"$(CFG)\" == \"libhttpd - Win32 Release\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/ap_config_layout.h\nInputPath=.\\os\\win32\\win32_config_layout.h\n\n\".\\include\\ap_config_layout.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\os\\win32\\win32_config_layout.h > .\\include\\ap_config_layout.h\n\n# End Custom Build\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Debug\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/ap_config_layout.h\nInputPath=.\\os\\win32\\win32_config_layout.h\n\n\".\\include\\ap_config_layout.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\os\\win32\\win32_config_layout.h > .\\include\\ap_config_layout.h\n\n# End Custom Build\n\n!ENDIF \n\n# End Source File\n# Begin Source File\n\nSOURCE=.\\modules\\generators\\mod_cgi.h\n\n!IF  \"$(CFG)\" == \"libhttpd - Win32 Release\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/mod_cgi.h\nInputPath=.\\modules\\generators\\mod_cgi.h\n\n\".\\include\\mod_cgi.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\modules\\generators\\mod_cgi.h > .\\include\\mod_cgi.h\n\n# End Custom Build\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Debug\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/mod_cgi.h\nInputPath=.\\modules\\generators\\mod_cgi.h\n\n\".\\include\\mod_cgi.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\modules\\generators\\mod_cgi.h > .\\include\\mod_cgi.h\n\n# End Custom Build\n\n!ENDIF \n\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\mod_core.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\modules\\dav\\main\\mod_dav.h\n\n!IF  \"$(CFG)\" == \"libhttpd - Win32 Release\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/mod_dav.h\nInputPath=.\\modules\\dav\\main\\mod_dav.h\n\n\".\\include\\mod_dav.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\modules\\dav\\main\\mod_dav.h > .\\include\\mod_dav.h\n\n# End Custom Build\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Debug\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/mod_dav.h\nInputPath=.\\modules\\dav\\main\\mod_dav.h\n\n\".\\include\\mod_dav.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\modules\\dav\\main\\mod_dav.h > .\\include\\mod_dav.h\n\n# End Custom Build\n\n!ENDIF \n\n# End Source File\n# Begin Source File\n\nSOURCE=.\\modules\\filters\\mod_include.h\n\n!IF  \"$(CFG)\" == \"libhttpd - Win32 Release\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/mod_include.h\nInputPath=.\\modules\\filters\\mod_include.h\n\n\".\\include\\mod_include.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\modules\\filters\\mod_include.h > .\\include\\mod_include.h\n\n# End Custom Build\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Debug\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/mod_include.h\nInputPath=.\\modules\\filters\\mod_include.h\n\n\".\\include\\mod_include.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\modules\\filters\\mod_include.h > .\\include\\mod_include.h\n\n# End Custom Build\n\n!ENDIF \n\n# End Source File\n# Begin Source File\n\nSOURCE=.\\modules\\proxy\\mod_proxy.h\n\n!IF  \"$(CFG)\" == \"libhttpd - Win32 Release\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/mod_proxy.h\nInputPath=.\\modules\\proxy\\mod_proxy.h\n\n\".\\include\\mod_proxy.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\modules\\proxy\\mod_proxy.h > .\\include\\mod_proxy.h\n\n# End Custom Build\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Debug\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/mod_proxy.h\nInputPath=.\\modules\\proxy\\mod_proxy.h\n\n\".\\include\\mod_proxy.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\modules\\proxy\\mod_proxy.h > .\\include\\mod_proxy.h\n\n# End Custom Build\n\n!ENDIF \n\n# End Source File\n# Begin Source File\n\nSOURCE=.\\modules\\core\\mod_so.h\n\n!IF  \"$(CFG)\" == \"libhttpd - Win32 Release\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/mod_so.h\nInputPath=.\\modules\\core\\mod_so.h\n\n\".\\include\\mod_so.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\modules\\core\\mod_so.h > .\\include\\mod_so.h\n\n# End Custom Build\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Debug\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/mod_so.h\nInputPath=.\\modules\\core\\mod_so.h\n\n\".\\include\\mod_so.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\modules\\core\\mod_so.h > .\\include\\mod_so.h\n\n# End Custom Build\n\n!ENDIF \n\n# End Source File\n# Begin Source File\n\nSOURCE=.\\os\\win32\\os.h\n\n!IF  \"$(CFG)\" == \"libhttpd - Win32 Release\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/os.h\nInputPath=.\\os\\win32\\os.h\n\n\".\\include\\os.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\os\\win32\\os.h > .\\include\\os.h\n\n# End Custom Build\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Debug\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Creating include/os.h\nInputPath=.\\os\\win32\\os.h\n\n\".\\include\\os.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\ttype .\\os\\win32\\os.h > .\\include\\os.h\n\n# End Custom Build\n\n!ENDIF \n\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\test_char.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\util_cookies.h\n# End Source File\n# End Group\n# Begin Group \"httpd\"\n\n# PROP Default_Filter \"\"\n# Begin Source File\n\nSOURCE=.\\server\\buildmark.c\n# PROP Exclude_From_Build 1\n# End Source File\n# Begin Source File\n\nSOURCE=.\\modules\\http\\byterange_filter.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\modules\\http\\chunk_filter.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\config.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\connection.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\core.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\core_filters.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\modules\\http\\http_core.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\modules\\http\\http_filters.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\modules\\http\\http_protocol.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\modules\\http\\http_request.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\log.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\protocol.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\request.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\ssl.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\vhost.c\n# End Source File\n# End Group\n# Begin Group \"modules\"\n\n# PROP Default_Filter \"\"\n# Begin Source File\n\nSOURCE=.\\modules\\core\\mod_so.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\modules\\arch\\win32\\mod_win32.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\os\\win32\\modules.c\n# End Source File\n# End Group\n# Begin Group \"util\"\n\n# PROP Default_Filter \"\"\n# Begin Source File\n\nSOURCE=.\\include\\ap_regex.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\eoc_bucket.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\eor_bucket.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\error_bucket.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\headers_bucket.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_cfgtree.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\util_cfgtree.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\util_charset.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_cookies.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_debug.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\util_ebcdic.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_etag.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_expr_private.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_expr_eval.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_expr_scan.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_expr_scan.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_expr_parse.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_expr_parse.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_fcgi.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\util_fcgi.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_filter.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\util_filter.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_md5.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\util_md5.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_mutex.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\util_mutex.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_pcre.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_regex.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_script.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\util_script.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_time.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\util_varbuf.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\os\\win32\\util_win32.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_xml.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\util_xml.h\n# End Source File\n# End Group\n# Begin Group \"mpm_winnt\"\n\n# PROP Default_Filter \"\"\n# Begin Source File\n\nSOURCE=.\\include\\ap_listen.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\os\\win32\\ap_regkey.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\ap_regkey.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\mpm\\winnt\\child.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\listen.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\mpm_common.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\mpm_common.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\mpm\\winnt\\mpm_default.h\n\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\mpm\\winnt\\mpm_winnt.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\mpm\\winnt\\mpm_winnt.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\mpm\\winnt\\nt_eventlog.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\provider.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\scoreboard.c\n# End Source File\n# Begin Source File\n\nSOURCE=.\\include\\scoreboard.h\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\mpm\\winnt\\service.c\n# End Source File\n# End Group\n# Begin Source File\n\nSOURCE=.\\server\\gen_test_char.exe\n\n!IF  \"$(CFG)\" == \"libhttpd - Win32 Release\"\n\n# PROP Ignore_Default_Tool 1\nUSERDEP__GEN_T=\".\\include\\os.h\"\t\n# Begin Custom Build - Generating test_char.h from gen_test_char.exe\nInputPath=.\\server\\gen_test_char.exe\n\n\".\\server\\test_char.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\t.\\server\\gen_test_char.exe >.\\server\\test_char.h\n\n# End Custom Build\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Debug\"\n\n# PROP Ignore_Default_Tool 1\nUSERDEP__GEN_T=\".\\include\\os.h\"\t\n# Begin Custom Build - Generating test_char.h from gen_test_char.exe\nInputPath=.\\server\\gen_test_char.exe\n\n\".\\server\\test_char.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\t.\\server\\gen_test_char.exe >.\\server\\test_char.h\n\n# End Custom Build\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Lexical\"\n\n# PROP Ignore_Default_Tool 1\nUSERDEP__GEN_T=\".\\include\\os.h\"\n# Begin Custom Build - Generating test_char.h from gen_test_char.exe\nInputPath=.\\server\\gen_test_char.exe\n\n\".\\server\\test_char.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\t.\\server\\gen_test_char.exe >.\\server\\test_char.h\n\n# End Custom Build\n\n!ENDIF \n\n# End Source File\n# Begin Group \"Generated Files\"\n\n# PROP Default_Filter \"\"\n# Begin Source File\n\nSOURCE=.\\server\\util_expr_parse.y\n\n!IF  \"$(CFG)\" == \"libhttpd - Win32 Release\"\n\n# PROP Exclude_From_Build 1\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Debug\"\n\n# PROP Exclude_From_Build 1\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Lexical\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Generating util_expr_parse.c/.h from util_expr_parse.y\nInputPath=.\\server\\util_expr_parse.y\n\nBuildCmds= \\\n\tbison -pap_expr_yy --defines=.\\server\\util_expr_parse.h -o .\\server\\util_expr_parse.c .\\server\\util_expr_parse.y\n\n\".\\server\\util_expr_parse.c\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n   $(BuildCmds)\n\n\".\\server\\util_expr_parse.h\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n   $(BuildCmds)\n# End Custom Build\n\n!ENDIF\n\n# End Source File\n# Begin Source File\n\nSOURCE=.\\server\\util_expr_scan.l\n\n!IF  \"$(CFG)\" == \"libhttpd - Win32 Release\"\n\n# PROP Exclude_From_Build 1\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Debug\"\n\n# PROP Exclude_From_Build 1\n\n!ELSEIF  \"$(CFG)\" == \"libhttpd - Win32 Lexical\"\n\n# PROP Ignore_Default_Tool 1\n# Begin Custom Build - Generating util_expr_scan.c from util_expr_scan.l\nInputPath=.\\server\\util_expr_scan.l\n\n\".\\server\\util_expr_scan.c\" : $(SOURCE) \"$(INTDIR)\" \"$(OUTDIR)\"\n\tflex -Pap_expr_yy -o .\\server\\util_expr_scan.c .\\server\\util_expr_scan.l\n\n# End Custom Build\n\n!ENDIF\n\n# End Source File\n# End Group\n# Begin Source File\n\nSOURCE=.\\build\\win32\\httpd.rc\n# End Source File\n# End Target\n# End Project\n"
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "os",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "srclib",
          "type": "tree",
          "content": null
        },
        {
          "name": "support",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}