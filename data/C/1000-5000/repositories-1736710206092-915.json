{
  "metadata": {
    "timestamp": 1736710206092,
    "page": 915,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Aorimn/dislocker",
      "stars": 1625,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4619140625,
          "content": "*.o\n*.kate-swp\n#*~\n*.swp\n*.gz\nsrc/dislocker\nsrc/dislocker-bek\nsrc/dislocker-file\nsrc/dislocker-find\nsrc/dislocker-fuse\nsrc/dislocker-metadata\nsrc/libdislocker.so*\n\n# Configured files\ninclude/dislocker/ssl_bindings.h\nsrc/dislocker-find.rb\n\n# Unit test files\n*.gcno\n*.gcda\n*.gcov\n\n# cmake files\nCMakeCache.txt\nCMakeFiles\nMakefile\ncmake_install.cmake\ncmake_uninstall.cmake\ninstall_manifest.txt\n\n# macOS produced files\n.DS_Store\n*.dylib\n*.bundle\n\n# Visual Studio Code\n.vscode/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.0849609375,
          "content": "language: c\n\ncompiler:\n    - clang\n    - gcc\n\njobs:\n  include:\n    - os: linux\n      disk: focal\n    - os: linux\n      disk: bionic\n    - os: linux\n      dist: xenial\n    - os: osx\n      osx_image: xcode11.6\n\nbefore_install:\n    - echo $PATH\n    - if [ \"$TRAVIS_OS_NAME\" = \"linux\" ]; then sudo apt-get update -qq; fi\n    - if [ \"$TRAVIS_OS_NAME\" = \"linux\" ]; then sudo apt-get install -qq libfuse-dev ruby-dev libmbedtls-dev; fi\n    - if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then brew update; fi\n    - if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then brew install -v Caskroom/cask/macfuse; fi\n    - if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then ./src/mbed_install.sh; fi\n    - if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then export PATH=\"/usr/bin:/usr/local/bin:$PATH\"; fi\n\ninstall:\n    - if [ \"$TRAVIS_OS_NAME\" = \"linux\" ]; then cmake .; fi\n    - if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then cmake . -DCMAKE_C_COMPILER=/usr/bin/clang; fi\n    - make VERBOSE=1\n    - sudo make install\n\nscript:\n    - make travis-test\n\nnotifications:\n    email:\n        recipients:\n            - aorimn@gmail.com\n\n        on_success: always\n        on_failure: always\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.7294921875,
          "content": "# v0.7.3\nThis version is only used to update dislocker's brew file and the BitBake recipe\nfor OSX's and BitBake's users to be able to download v0.7.2. If you're not an OSX\nnor a BitBake user, you can use either v0.7.2 or v0.7.3, this won't make any\ndifference.\n\n# v0.7.2\n- Bugfixes:\n    - Fix compilation on OSX when ruby dependency is installed\n\n- Feature improvement:\n    - Reported NTFS volume size is more accurate (thanks @haobinnan)\n    - Add ability to decrypt from a VMK file (thanks Seunghun Han)\n    - Add ability to read the user password from the environment variable `DISLOCKER_PASSWORD` (thanks @mhogomchungu)\n    - Add ability to read the user password from pipes (thanks @mhogomchungu)\n    - Decryption/encryption speed has been improved by disabling faulty threading\n\n# v0.7.1\nThis version is only used to update dislocker's brew file and the BitBake recipe\nfor OSX's and BitBake's users to be able to download v0.7. If you're not an OSX\nnor a BitBake user, you can use either v0.7 or v0.7.1, this won't make any\ndifference.\n\n# v0.7\n- Feature improvement:\n    - dislocker can now be run from /etc/fstab. This also means that the `-o`\n    option for the offset had to be changed. It is now `-O`;\n    - dislocker on FreeBSD can now read devices, not just partition dumps.\n\n- Compatibility improvement:\n    - OSX support and dependencies have been updated;\n    - Thanks to Eric Johnson, from Leidos, a BitBake recipe is now available.\n\n# v0.6.1\nThis version is only used to update dislocker's brew file for OSX users\nto be able to download v0.6. If you're not an OSX user, you can use either v0.6\nor v0.6.1, this won't make any difference.\n\n# v0.6\n- Features improvement:\n    - Read/write on Windows 10 (v1511) encrypted volumes - AES-XTS 128/256.\n\n# v0.5.2\nMinor fixes for downstream packaging and larger distribution coverage.\n\n# v0.5.1\nThis version is only used to update dislocker's brew file for OSX users\nto be able to download v0.5. If you're not an OSX user, you can use either v0.5\nor v0.5.1, this won't make any difference.\n\n# v0.5\n- Bugfixes:\n    - Support for old and new versions of PolarSSL (now called mbedTLS);\n    - Various crashes have been fixed.\n\n- Features improvement:\n    - Read/write on FAT-formatted volumes encrypted by BitLocker;\n    - Some Ruby bindings have been added to the library;\n    - A Ruby script has thus been added to look for BitLocker-encrypted volumes.\n\n- Notable changes:\n    - Compilation/installation now goes through [cmake](https://cmake.org/), be\n    sure to review the INSTALL.md file.\n\n# v0.4.1\nThis version is only used to update dislocker's brew file for OSX users\nto be able to download v0.4. If you're not an OSX user, you can use either v0.4\nor v0.4.1, this won't make any difference.\n\n# v0.4\n- Bugfixes:\n    - Installation process is now ok;\n    - Various crashes have been fixed;\n    - Some minor display errors have been fixed.\n\n- Features improvement:\n    - Adding of the write capability on some Windows 8 encrypted volumes;\n    - Stealth password and recovery key in `ps' output;\n    - Adding `--stateok' argument to tell dislocker not to check for the BitLocker\n    volume state - as in 'partially decrypted', 'partially encrypted', and so on:\n        - One can read partially encrypted volumes now!\n\n- Notable changes:\n    - A brew file is now available for OSX users;\n    - The embedded PolarSSL library has been removed, due to licensing problems\n      when packaging, so users need to install PolarSSL on their own now - see\n      INSTALL.md for hints on how to do it;\n    - The core part is now a library - dynamic shared object or dynamic library,\n      depending on the OS - and four binaries are now using this library.\n        - The library is not yet for use by other developers, its interface is not\n          well enough defined yet.\n        - The NOTE part of the README.md/INSTALL.md files lists these binaries.\n\n- Portability:\n    - Support added for FreeBSD.\n\n\n# v0.3\n- Bugfixes:\n    - One can now read from a device from /dev;\n        - The stat() syscall returns a *null size* (0) for these devices and\n          dislocker used this size to tell the partition's size, which induced to\n          present a zero-length NTFS file hence this bug.\n    - Code cleaned and reorganised (yes, it's a bugfix);\n    - Better BitLocker's files handling. This is not optimal yet, as it should\n      involve the NTFS layer, which is currently completely dislocker-independant.\n\n- Features improvement:\n    - One can write on a BitLocker encrypted volume;\n    - Adding `--readonly' argument to deny writes on the BitLocker volume;\n    - Adding `--fvek' argument to decrypt a volume directly from a specially\n      crafted FVEK file;\n    - Default verbosity to CRITICAL level instead of QUIET, hence the `--quiet'\n      option has been added;\n    - One can use a user password to decrypt a volume through the\n      '--user-password' option now.\n\n- Notable changes:\n    - OpenSSL is no longer used for decryption (and encryption). An embedded\n      PolarSSL code is compiled along with the rest of Dislocker.\n\n\n# v0.2\n- Features improvement:\n    - Now also able to decrypt/read BitLocker encrypted partitions from Windows\n      Vista;\n    - Better arguments handling (added verbosity and logging redirection);\n    - Now able to pass an offset for the beginning of the partition (useful when\n      all the disk has been copied instead of the partition);\n    - Rules added into the Makefile: \"make file\" and \"make fuse\" to make binaries\n      for using with FUSE or decrypting in a different file.\n\n- Portability:\n    - Support added for MacOSX (using osxfuse, tested on Snow Leopard).\n\n\n# v0.1\n- Features:\n    - Decrypt BitLocker encrypted partitions from Windows 7 only;\n    - A FUSE module is available for reading partitions;\n    - Possibility to decrypt the entire partition into a file.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.9384765625,
          "content": "# Dislocker -- enables to read/write on BitLocker encrypted partitions under\n# Linux\n# Copyright (C) 2012-2013  Romain Coltel, Herv√© Schauer Consultants\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,\n# USA.\n\ncmake_minimum_required (VERSION 2.6)\nproject (dislocker C)\n\nset (AUTHOR \"Romain Coltel\")\n\nfind_program (GIT_EXE NAMES git PATHS /usr/bin /usr/local/bin)\n\nif(GIT_EXE)\n\texecute_process (\n\t\tCOMMAND ${GIT_EXE} rev-parse --abbrev-ref HEAD\n\t\tWORKING_DIRECTORY ${PROJECT_SOURCE_DIR}\n\t\tOUTPUT_VARIABLE GIT_RELEASE_BRANCH\n\t)\n\texecute_process (\n\t\tCOMMAND ${GIT_EXE} log -n 1 --pretty=format:%t\n\t\tWORKING_DIRECTORY ${PROJECT_SOURCE_DIR}\n\t\tOUTPUT_VARIABLE GIT_RELEASE_COMMIT\n\t)\n\tstring (STRIP \"${GIT_RELEASE_BRANCH}\" GIT_RELEASE_BRANCH)\n\tstring (STRIP \"${GIT_RELEASE_COMMIT}\" GIT_RELEASE_COMMIT)\n\tadd_definitions (-DVERSION_DBG=\"${GIT_RELEASE_BRANCH}:${GIT_RELEASE_COMMIT}\")\nendif()\n\n\nset (VERSION_MAJOR 0)\nset (VERSION_MINOR 7)\nset (VERSION_RELEASE 2)\nset (VERSION \"${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_RELEASE}\")\n\nadd_subdirectory (${PROJECT_SOURCE_DIR}/src)\n\nconfigure_file(\n\t\"${CMAKE_CURRENT_SOURCE_DIR}/cmake/cmake_uninstall.cmake.in\"\n\t\"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\"\n\tIMMEDIATE @ONLY\n)\nadd_custom_target(uninstall\n\tCOMMAND \"${CMAKE_COMMAND}\" -P \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\"\n)\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 5.056640625,
          "content": "# INTRODUCTION\n\nThis file describes how to install dislocker onto your machine.\n\n# REQUIREMENTS\n\nYou need:\n\n- Compiler, gcc or clang;\n- cmake (at least version 2.6);\n- make (or gmake, for FreeBSD);\n- pkg-config;\n- Headers for FUSE;\n- Headers for mbedTLS (previously known as PolarSSL);\n- A partition encrypted with BitLocker, from Windows Vista, 7 or 8.\n\n\nIf you have Ruby headers, the library will compile with some Ruby bindings and\nanother program - see the NOTE section below - will be available.\n\nFor Debian-like distros based on Debian Jessie or Ubuntu 14.04 or older:\n\n- `aptitude install gcc cmake make libfuse-dev libpolarssl-dev ruby-dev`\n\nFor Debian-like distros based on Debian Stretch or Ubuntu 16.04 or later:\n\n- `aptitude install gcc cmake make libfuse-dev libmbedtls-dev ruby-dev pkgconf`\n\nFor Fedora-like:\n\n- `dnf install gcc cmake make fuse-devel mbedtls-devel ruby-devel rubypick`\n\nAlternatively, running `dnf install dislocker fuse-dislocker` to use the\nalready existing RPM packages in Fedora could be a clever idea.\n\nFor RHEL-like (including CentOS Scientific Linux):\n\n- `yum install gcc cmake make fuse-devel mbedtls-devel ruby-devel /usr/bin/ruby`\n\nAlternatively, running `yum install dislocker fuse-dislocker` to use the\nalready existing RPM packages in EPEL could be a clever idea.\n\nFor FreeBSD:\n\n- `pkg install cmake gmake fusefs-libs mbedtls`\n\nFor OSX: Follow the instructions in the next section.\n\nNote that the code expects at least FUSE 2.6.\n\nFor macOS:\n\nInstall HomeBrew https://brew.sh\n- `brew install cmake pkgconf mbedtls`\n\n# INSTALLING\n\nEach OS type has its own section below, beware to follow yours:\n\n## If you are on MacOSX...\n\nJust install Homebrew (http://brew.sh/) and run the following commands:\n```\nbrew update\nbrew install Caskroom/cask/macfuse\nbrew install src/dislocker.rb\n```\nThis will install dislocker.\n\n## If you're on FreeBSD...\n\nFollow the instructions below (next subsection) by replacing 'make' with 'gmake'.\n\n## If you are NOT on MacOSX...\n\nIf you already have installed the dependencies (see REQUIREMENTS section above),\nyou have to type the following commands to install the binaries on your system:\n```\ncmake .\nmake\nsudo make install\n```\nDon't forget the dot (.) on the cmake command-line. If you only want to generate\nthe binaries, without installing them, you can skip the last command (the one\nbeginning with sudo).\n\nNote that the '-Werror' flag in the cmake WARN_FLAGS variable may break the\ncompilation for useless warnings. If you know what you're doing, you can remove\nit by running the following cmake command instead of the one above:\n```\ncmake -D WARN_FLAGS:STRING=\"-Wall -Wextra\" .\n```\n\nSee the [cmake documentation](http://www.cmake.org/documentation/) if you want\nto customize the build.\n\nOnce installed, see `dislocker(1)` for details on how to use it.\n\n# UNINSTALLING\n\nI'm sure you don't want to do that. But if you're really forced by someone, just\ntype `make uninstall` as super-user.\n\n# mbedTLS 2.0.0\n\nSince the version 2.0.0 of mbedTLS, the build moves \"crypto\" functions such\nas AES and SHA256 into a separate, libmbedcrypto, library. However, a typo\ndidn't installed this library, resulting in some packagers not providing this\nlibrary, thus breaking the dislocker compilation.\nIf you have this problem, it's recommended to run the following commands (they\nhave been put in the src/mbed_install.sh script, if you don't want to\ncopy/paste from here):\n```\ngit clone https://github.com/ARMmbed/mbedtls.git\ncd mbedtls\ngit checkout mbedtls-2.0.0\n```\nThen apply the patch given by the following command:\n```\ngit show 6f42417b library/CMakeLists.txt\n```\nAnd compile/install the library:\n```\ncmake .\nmake\nsudo make install\n```\n\nYou can then resume the installation where you have left it.\n\n# PORTABILITY\n\nGlobally, this was successfully tested on Linux x86/x86_64, MacOSX and FreeBSD.\nIt won't work on Windows and may not work on other BSDs (not tested).\n\nFor MacOSX, it has been tested against OSXFUSE 2.3.8 and 2.3.9.\n\nCases where you need to remove the '-Werror' from the WARN_FLAGS variable:\n\n- You're on Ubuntu 10.04;\n- You're using GCC with a version older than 4.3.\n\n\nWhether it works or not, feel free to send comments and feedbacks to\n[dislocker __AT__ hsc __DOT__ fr]().\n\n# NOTE\n\nFive binaries are built when compiling dislocker as described in the `INSTALL.md`\nfile:\n\n1. `dislocker-bek`: for dissecting a .bek file and printing information about it\n\n2. `dislocker-metadata`: for printing information about a BitLocker-encrypted volume\n\n3. `dislocker-find`: not a binary but a Ruby script which tries to find BitLocker\n  encrypted partition among the plugged-in disks (only work if the library is\n  compiled with the Ruby bindings)\n\n4. `dislocker-file`: for decrypting a BitLocker encrypted partition into a flat file\nformatted as an NTFS partition you can mount\n\n5. `dislocker-fuse`: the one you're using when calling `dislocker',\nwhich dynamically decrypts a BitLocker encrypted partition using FUSE\n\nYou can build each one independently providing it as the makefile target. For\ninstance, if you want to compile dislocker-fuse only, you'd simply run:\n```bash\n$ cmake .\n$ make dislocker-fuse\n```\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.41796875,
          "content": "# Dislocker [![Build Status](https://travis-ci.org/Aorimn/dislocker.svg?branch=develop)](https://travis-ci.org/Aorimn/dislocker)\n\n## Introduction and explanations\n\nThis software has been designed to read BitLocker encrypted partitions under a\nLinux system. The driver has the capability to read/write on:\n - Windows Vista, 7, 8, 8.1 and 10 encrypted partitions - that's AES-CBC,\n   AES-XTS, 128 or 256 bits, with or without the Elephant diffuser, encrypted\n   partitions;\n - BitLocker-To-Go encrypted partitions - that's USB/FAT32 partitions.\n\nThe core driver is composed of a library, with multiple binaries (see the NOTES\nsection below) using this library. Two binaries are of interest when wanting to\ndecrypt a BitLocker encrypted partition:\n\n1. `dislocker-fuse`: binary using FUSE to dynamically decrypt the BitLocker-ed\npartition. You have to give it a mount point where, once keys are decrypted, a\nfile named `dislocker-file` appears. This file is a virtual NTFS partition, so\nyou can mount it as any NTFS partition and then read from or write to it. Note\nthat writing to the NTFS virtual file will change the underlying BitLocker\npartition's content.\n\n2. `dislocker-file`: binary decrypting a BitLocker encrypted partition into a flat\nfile. This file has to be given through command line and, once dislocker-file is\nfinished, will be an NTFS partition. It won't have any link to the original\nBitLocker partition. Therefore, if you write to this file, the BitLocker volume\nwon't change, only the NTFS file will. Note that this may take a long time to\ncreate that file, depending on the size of the encrypted partition. But\nafterward, once the partition is decrypted, the access to the NTFS partition\nwill be faster. Another thing to think about is the size on your disk this\nbinary needs: the same size as the volume you're trying to decrypt.\nNevertheless, once the partition is decrypted, you can mount your file as any\nNTFS partition.\n\nThanks goes to Rogier Wolff for testing, hugsy for all the OSX support and\npatches, Will Dyson for the patches, and all the people who give feedbacks.\n\n## Installation and requirements\n\nSee `INSTALL.md` for things dealing with the install process.\nOnce installed, see `dislocker(1)` for details on how to use it.\n\n## Bugs\n\nThere may be bugs, and I'll be happy to hear about it!\n\nFeel free to send comments and feedbacks to [dislocker __AT__ hsc __DOT__ fr](),\nor to open an [issue](https://github.com/Aorimn/dislocker/issues).\n\n## A note on Bitlocker-To-Go\n\nMicrosoft's idea behind BitLocker-To-Go is that computers running Microsoft\noperating systems will be able to mount encrypted removable media without too\nmuch trouble.\n\nTo achieve this, the data on the media has a dual format. First it is\na valid FAT32 filesystem. In that filesystem they store executables and\ndatafiles that allow access to the encrypted volume. Besides that you\nwill see big \"encrypted\" files that hold the actual encrypted volume.\n\nOn the other side, it is a BitLocker volume. Just with some unused space, from\nthe BitLocker point-of-view. That's where the FAT32 stuff lives.\n\nSo, to access a  BitLocker-To-Go encrypted media, the whole partition is the\nvolume that dislocker works with. The use of dislocker is therefore the same\nwhether the volume is a standard BitLocker partition or a BitLocker-To-Go one.\n\n## A note on fstab\n\nBitLocker partitions can be mount-ed using the /etc/fstab file and dislocker's\nlong options.\nThe line below is an example line, which has to be adapted to each case:\n```\n/dev/sda2 /mnt/dislocker fuse.dislocker user-password=blah,nofail 0 0\n```\n\n## Note\n\nFive binaries are built when compiling dislocker as described in the `INSTALL.md`\nfile:\n\n1. `dislocker-bek`: for dissecting a .bek file and printing information about it\n\n2. `dislocker-metadata`: for printing information about a BitLocker-encrypted volume\n\n3. `dislocker-find`: not a binary but a Ruby script which tries to find BitLocker\n  encrypted partition among the plugged-in disks (only work if the library is\n  compiled with the Ruby bindings)\n\n4. `dislocker-file`: for decrypting a BitLocker encrypted partition into a flat file\nformatted as an NTFS partition you can mount\n\n5. `dislocker-fuse`: the one you're using when calling `dislocker',\nwhich dynamically decrypts a BitLocker encrypted partition using FUSE\n\nYou can build each one independently providing it as the makefile target. For\ninstance, if you want to compile dislocker-fuse only, you'd simply run:\n```bash\n$ cmake .\n$ make dislocker-fuse\n```\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}