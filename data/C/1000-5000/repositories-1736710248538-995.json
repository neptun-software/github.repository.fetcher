{
  "metadata": {
    "timestamp": 1736710248538,
    "page": 995,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjEwMDA=",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "oracle/bpftune",
      "stars": 1534,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.06640625,
          "content": "*.o\n*.so*\n*.8\n*.skel.h\n*.skel.legacy.h\n*.skel.nobtf.h\n*.swp\n*.plist\n"
        },
        {
          "name": "CASE_STUDIES.md",
          "type": "blob",
          "size": 5.833984375,
          "content": "# Case studies\n\nBelow are a set of real customer bugs (all customer details removed) which\nrelate to various network tunable issues.\n\n# TCP buffer exhaustion and iSCSI\n\nOrabug 34281824\n\nA number of systems lost connectivity simultaneously; logging revealed\n\n```\n May 26 02:39:23 systemname kernel: TCP: out of memory â€“ consider tuning tcp_mem\n\n```\n\nTurns out the tcp_mem parameters were set to\n\n```\nnet.ipv4.tcp_mem = 65536  131072  262144\n```\n\n...and upping them to \n\n```\nnet.ipv4.tcp_mem = 9246282        12328377        18492564\n```\n\n...resolves the problem.\n\n## Conclusion\n\ntcp_mem exhaustion leads to very broken behaviour; we should avoid\nit at all costs. Adaptively increase tcp_mem[2] when we approach the exhaustion\nlimit.\n\nHowever we have to consider the effect; if a large number of connections\nare active, we can exhaust system memory.  The problem is that some settings\nare global (such as tcp_[wr]mem, and different sockets have different\npriorities; we should, for example always support iSCSI buffer space\ndemands.  To handle this, may be worth clamping lower-priority service\nbuffer sizes to limit overheads in the case that a service needs a larger\nbuffer size.\n\nSee tcp_buffer_tuner (8) for more details.\n\n# NFS server not responding \n\nOrabug 33106618\n\nNFS server was not responding; a lot of retransmissions/out of order segments.  Saw\n\n```\nkernel: nfs: server 192.168.x.x not responding, still trying\n```\n\nNever fully root-caused, but a bunch of the tunables were set to low defaults:\n\n```\nTCP Read and Write Buffer\nCurrent Values\n/proc/sys/net/ipv4/tcp_rmem\n4096 87380 6291456\n/proc/sys/net/ipv4/tcp_wmem\n4096 16384 4194304\n```\n\nSuggestion was to set the following:\n\n```\nnet.core.rmem_max = 67108864\nnet.core.wmem_max = 67108864\nnet.ipv4.tcp_rmem = 4096 87380 33554432\nnet.ipv4.tcp_wmem = 4096 87380 33554432\nnet.core.netdev_max_backlog = 30000\n```\n\n...and problems went away.\n\n## Conclusion\n\nAgain we see value of adaptively increasing wmem/rmem rather than sticking\nwith too-low defaults.\n\nnet.core.netdev_max_backlog is by default 1000; this is too low on\nfaster systems as it represents the maximum length of the receive queue.\n\n# Short listen backlog\n\nTCP listen system call specifies a backlog which represents the maximum length\nthe queue of completely established connections waiting for accept() calls.\ntcp_max_syn_backlog represents the max number of incomplete sockets that can\nbe queued, but if syncookies are enabled, this is ignored.\n \nIf the value in listen backlog is > proc.net.core.somaxconn it is silently\ntruncated to that value.\n\n## Conclusion\n\nIf we see listen calls with backlog > proc.net.core.somaxconn, might make\nsense to increase proc.net.core.somaxconn to honour app request.\n\n# Too-small proc.net.core.netdev_max_backlog\n\nThis value defaults to 1000 and represents the maximum number of packets\nto keep in the receive queue; received data is stored in that queue when it\nleaves the ring buffer and faster network devices need a larger backlog.\n\n## Conclusion\n\nMultiple bug reports suggest increasing the netdev max backlog to 30000.\n\n# High CPU usage in ksoftirq processes\n\nOrabug: 31835223\n\nSeeing large amounts of time spent in page freeing from skb codepath:\n\n```\n    15.31%    15.07%  iperf            [kernel.kallsyms]                      \n            [k] __free_pages_ok\n                      |\n                      ---__free_pages_ok\n                         |\n                         |--99.97%-- free_compound_page\n                         |          __put_compound_page\n                         |          put_compound_page\n                         |          put_page\n                         |          |\n                         |          |--99.82%-- skb_release_data\n                         |          |          skb_release_all\n                         |          |          __kfree_skb\n                         |          |          |\n                         |          |          |--68.49%-- tcp_recvmsg\n                         |          |          |          inet_recvmsg\n                         |          |          |          sock_recvmsg\n                         |          |          |          SYSC_recvfrom\n                         |          |          |          sys_recvfrom\n                         |          |          |          \nsystem_call_fastpath\n                         |          |          |          __libc_recv\n                         |          |          |\n                         |          |          |--31.49%--\ntcp_clean_rtx_queue\n                         |          |          |          tcp_ack\n                         |          |          |          tcp_rcv_established\n                         |          |          |          tcp_v4_do_rcv\n                         |          |          |          |\n\n```\n\nTurns out tcp ack receive frees up packets, but because they are order\n3 (32Kb) the zone lock for ZONE_NORMAL was required and lock contention\nfrom all of these requests span up CPU usage to 99%. Switching to slab\nallocation or order-0 page avoids this as the per-CPU free lists are\nused instead which do not require locking.  A tunable was introduced:\n\nnet.core.net_high_order_alloc_disable\n\n\n...which defaults to 0.\n\n## Conclusion\n\nMight be worth enabling this if we see high cpu utilization for ksoftirqd.\n\n# Congestion control and high-speed links\n\nOrabug: 31565670\n\nIntermittent high CPU load driven by NFS causing hangs; turns out\nsettings were not optimal for 10G network.  Similar observations as\nabove, with additional use of htcp as congestion control algorithm.\n\n## Conclusion\n\nWould be good to auto-select htcp for high-speed links; it is more\naggressive in increasing the congestion window after loss events.\nHow do we distinguish which connections to use it for? Papers\ndescribe high BDP links as being appropriate.  This is implemented\nbut behaves worse than BBR for large-loss > 10% links so might\nmake sense in a narrow loss-range.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.4091796875,
          "content": "# Contributing to bpftune\n\nWe welcome your contributions! There are multiple ways to contribute.\n\n## Opening issues\n\nFor bugs or enhancement requests, please file a GitHub issue unless it is security related. When filing a bug remember that the better written the bug is, the more likely it is to be fixed. If you think you have found a security vulnerability, do not raise a GitHub issue and follow the instructions in our security policy documented in SECURITY.md.\n\n## Contributing code\n\nWe welcome your code contributions. Before submitting code via a pull request, you will need to have signed the Oracle Contributor Agreement (OCA) at\n\nhttps://oca.opensource.oracle.com/\n\n...and your commits need to include the following line using the name and e-mail address you used to sign the OCA:\n\nSigned-off-by: Your Name <you@example.org>\n\nThis can be automatically added to pull requests by committing with --sign-off or -s, e.g.\n\ngit commit --signoff\n\nOnly pull requests from committers that can be verified as having signed the OCA can be accepted.\n\n## Pull request process\n\n-   Ensure there is an issue created to track and discuss the fix or enhancement you intend to submit.\n-    Fork this repository.\n-    Create a branch in your fork to implement the changes. We recommend using the issue number as part of your branch name, e.g. 1234-fixes.\n-    Ensure that any documentation is updated with the changes that are required by your change.\n-    Ensure that any samples are updated if the base image has been changed.\n-    Ensure that all changes comply to project coding conventions as documented here\n-    Ensure that there is at least one test that would fail without the fix and passes post fix.\n-    Submit the pull request. Do not leave the pull request blank. Explain exactly what your changes are meant to do and provide simple steps on how to validate your changes. Ensure that you reference the issue you created as well.\n-    We will assign the pull request for review before it is submitted internally and the PR is closed.\n\n## Code of conduct\n\nFollow the Golden Rule. If you would like more specific guidelines, see the Contributor Covenant Code of Conduct at\n\nhttps://www.contributor-covenant.org/version/1/4/code-of-conduct/\n\n## Technical guide to contribution\n\nThe architecture used is\n\n- a core daemon, src/bpftune.c\n- a library, libbpftune which consists of functions used by core daemon\n  and tuners, such as logging, BPF setup etc, src/libbpftune.c; and\n- a set of plug-in shared object tuners which are loaded when bpftune\n  starts; sysctl_tuner.[bpf.]c, neigh_table_tuner.[bpf.]c\n\n## Adding a tuner\n\nTuners are added as plug-in .so objects built as tuner_name.c, and each tuner\nhas a BPF program named tuner_name.bpf.c.  To add a new tuner, add these\nfiles and simply add tuner_name to TUNERS in src/Makefile.\n\nTuners can also be built outside of bpftune; see the sample_tuner/\nsubdirectory for a simple example and sample Makefile.\n\n## BPF component (tuner_name.bpf.c)\n\nThe BPF code must\n\n```\n#include <bpftune/bpftune.bpf.h>\n```\n\n...since that header includes all relevant definitions and includes\nthe definition of the BPF ring buffer that tuners use to communicate\nwith userspace:\n\n```\nstruct {\n        __uint(type, BPF_MAP_TYPE_RINGBUF);\n        __uint(max_entries, 64 * 1024);\n} ringbuf_map SEC(\".maps\");\n\n```\n\nOn startup BPF reuses the map fd across all BPF objects; in other\nwords they all share this ring buffer to communication with bpftune.\n\nIt also include a global variable:\n\n```\nunsigned int tuner_id;\n```\n\nWhen bpftune loads the tuner, it assigns this tuner id to the\nBPF object.  This allows us to send events from the BPF programs\nin that object which identify the tuner source.  The tuner id\nin the ringbuf event allows us to call the event handler callback\nin the appropriate tuner.\n\n## Legacy kernel handling\n\nHere \"legacy\" implies lack of fentry, fexit, tp_btf and BPF\niter programs.  BPF ringbuf is assumed.  For each tuner, we\nbuild a version with BPFTUNE_LEGACY defined.  This corresponds\nto around v5.6 of the kernel, but for Oracle Linux it corresponds\nto UEK6U3 (v5.4-based) since it includes backports of ringbuf\nsupport.\n\nTo support per-namespace policies, support for netns cookies\nis required, and this is orthogonal to legacy/full support.\nSo legacy support does not necessarily imply no netns cookie\nsupport (currently the aarch64 platform is legacy as it\ndoes not support BPF trampoline).\n\nTo test what level of bpftune support (if any) is provided\non your system, run \"bpftune -S\"; it provides feedback like this:\n\n```\n$ bpftune -S\nbpftune works fully\nbpftune supports per-netns policy (via netns cookie)\n```\n\nIf you add new BPF features, check the probe program\nprobe.bpf.c; it may need updating.\n\nIf the BPF program just consists of fentry programs, simply use\nthe BPF_FENTRY() wrapper - it will convert to kprobes\nfor the legacy version.  For other cases see these examples:\n\n- using raw_tracepoint instead of tp_btf, see sysctl_tuner.bpf.c\n- using kprobe+kretprobe instead of fexit access to calling args,\n  see neigh_table_tuner.bpf.c\n- using kretprobe instead of fexit (where no access to calling\n  args is needed), see tcp_buffer_tuner.bpf.c\n\nAlso use BPF_CORE_READ() rather than direct dereference where\npossible as that will work for both kprobe and fentry for example.\n\nFor maps, use the BPF_MAP_DEF() definitions which will invoke\nthe older libbpf map definition if using an older libbpf.\n\n## Userspace component - tuner_name.c\n\nIt should #include <libbpftune.h>, and must consist of the following\nfunctions\n\n```\nint init(struct bpftuner *tuner, int ringbuf_map_fd);\n\nvoid fini(struct bpftuner *tuner);\n\nvoid event_handler(struct bpftuner *tuner, struct bpftune_event *event,\n\t\t   void *ctx);\n```\n\nThe init function is called on tuner initialization, and is passed\nthe fd referring to the ring buffer map which is shared across tuners.\nThe init() function should do any additional BPF attachment not covered\nby SEC() names (such as attaching to a cgroup), and initialize any\nglobal variables.  All tuners should call\n\n```\nbpftuner_bpf_init(tuner_name, ringbuf_map_fd);\n```\n\n...since this loads the associated BPF skeleton.  In addition, if\nthe tuner auto-tunes any sysctls, an array of \"struct bpftunable_desc\":\n\n```\nstruct bpftunable_desc {\n        unsigned int id;\n        enum bpftunable_type type;\n        const char *name;\n        __u64 flags;\n        __u8 num_values;\n};\n```\n\n...should be added naming them, and\n\n```\n\tbpftuner_tunables_init(tuner, num_descs, descs);\n```\n\n...should be called.  This informs bpftune so that if the sysctl\ntuner sees a modification of a sysctl that should be auto-tuned,\nwe can disable the associated tuner.  So for example if the\nneigh_table_tuner manages sysctl \"net.ipv4.neigh.default.gc_thresh3\",\nso if the sysctl BPF program sees it being modified, we can disable\nthe associated neigh_table_tuner.\n\nIf any data structures are common across userspace and BPF, they\nshould be added to a tuner_name.h file which both include.\n\nRemember to include both the skel.h and skel.legacy.h files.\n\n## Events\n\nWhen an event the user-space component needs to know about occurs,\na ringbuf event should be sent.  The event structure is:\n\n```\nstruct bpftune_event {\n        unsigned int tuner_id;\n        unsigned int scenario_id;\n        union {\n                struct bpftunable_update update[BPFTUNE_MAX_TUNABLES];\n                char str[BPFTUNE_MAX_NAME];\n                __u8 raw_data[BPFTUNE_MAX_DATA];\n        };\n};\n```\n\nThe scenario refers to the event type (seen packet loss to remote\nsystem), and the payload can be a string, a raw data structure etc.\n\n## Overhead\n\nWhen choosing BPF events to instrument, please try to avoid very\nhigh-frequency events.  Try to use fentry instead of kprobe,\ntp_btf instead of tracepoint etc as these perform much better.\n\nTo test overhead of your tuner, there are iperf3/qperf tests\nthat compare baseline performance versus performance when\nbpftune runs.  For example:\n\n```\n$ cd test\n$ TUNER=tcp_buffer_tuner.so sh iperf3_test.sh\n...\n$ TUNER=tcp_buffer_tuner.so sh qperf_test.sh\n...\n```\n\nReplace TUNER value with the name of the tuner you want to assess.\n\n## Tests\n\nTests are mandatory for tuners; in the test directory you can see\nlots of examples.  The test framework uses network namespaces to\nsupport iperf3 runs within the same system.  Tests should validate\ntuning behaviour works, and ideally improves performance.  In\naddition, ensure to test both legacy (where legacy mode is forced\nvia \"-L\") and non-legacy modes.  See ./TESTING.md for more details\non tests.\n"
        },
        {
          "name": "FEATURE_PLAN.md",
          "type": "blob",
          "size": 7.8779296875,
          "content": "# Plan for features, completed, to-do and possible future work\n\n## Completed tasks\n\n### Basic bpftune framework support\n - add configurable logging support syslog/stdout\n - add support for adding tuners dynamically via shared object\n - add support for adding BPF programs via skeleton\n - add support for specifying tunables associated with tuner\n - bpftune systemd service specification\n - add support for legacy tuner fallback; if the system does\n   not support BPF features required, fall back to legacy version\n   of tuner if available.\n - switch off tuners on per-ns basis; we should not switch off\n   global tuners if someone fiddles with a tunable in a network\n   namespace; make sure we have per-namespace disable for tuners.\n   This assumes any customizations for namespace config of tunables\n   on container bringup will stop us auto-tuning; this may need to\n   be revisited in the future.\n - configurable learning rate: learning can be specified to bpftune\n   via the \"-r\" parameter; this ranges from 0-4.  The learning\n   rate values relate to when changes are made; i.e. within a\n   specific % of a limit, we increase the limit by the same %; so\n\t- learning rate 0: within 1% of a limit, increase it by 1%\n\t- learning rate 1: within 3% of a limit, increase it by 3%\n\t- learning rate 2: withing 6% of a limit, increase it by 6%\n\t- learning rate 3: within 12% of a limit, increase it by 12%\n\t- learning rate 4: within 25% of a limit, increase it by 25%\n   There is an inherent tradeoff in learning rate selection; a\n   higher rate will make larger changes less frequently, while a lower\n   rate will make smaller changes more frequently, but only if limits\n   are closely approached.\n - we notice new tuners appearing/disappearing from /usr/lib64/bpftune\n   via inotify.  We watch the above directory for tuner addition or\n   removal to allow packages to separately deliver their own tuners.\n - make (lib)bpftune assume capabilities as needed; this reduces the\n   threat surface of a service that requires CAP_SYS_ADMIN.\n - We deliver a bpftune-devel package to support separate tuner\n   development.\n - And also show a sample standalone tuner in sample_tuner/ ; it\n   demonstrates how to build a tuner .so and install it in\n   /usr/local/lib64/bpftune; it is monitored for tuner appearance\n   and disappearance also.\n\n### sysctl tuner\n - add support for dynamically disabling relevant tuner if tunables change\n   via sysctl tuner (tested)\n\n### neighbour table tuner\n - tuner watches for neigh table adds, and increases table size\n   if we approach full such that we do not drop neighbour information.\n   Done on a per-table basis via netlink to target changes to\n   tables which need it (tested)\n\n### connection tuner\n - tuner monitors min RTT, max delivery rate on a per-host basis\n   in order to identify which congestion control algorithm\n   approaches the ideal rate where it fills the pipe but does\n   not under- or over-estimate congestion.  Reinforcement learning\n   is used to select actions that minimize cost (which is defined\n   as divergence from optimal min RTT/max delivery rate).\n\n### TCP buffer size tuner\n - tuner watches for tcp_expand_sndbuf() and checks if we approach\n   tcp_wmem[2] max buffer size; if so increase buffer size to\n   accommodate more data since app needs more space.  Also watch\n   for correlation between [wr]mem and smoothed round-trip time;\n   if we see these correlate, we are introducing latency so stop\n   increasing buffer size (tested)\n - tuner watches for tcp_rcv_space_adjust() and if we approach\n   tcp_rmem[2] increase buffer size to accommodate more space. (tested)\n - tuner watches for tcp memory pressure/exhaustion.  For the former\n   we scale up all tcp_mem[2] value, for the latter we reduce\n   tcp_[wr]mem[2], since we want to avoid memory exhaustion if\n   possible (tested)\n \n### netns tuner\n - tuner iterates over network namespaces at init and watches\n   for netns add events so that we can maintain tuner state\n   for non-global network namespaces also.\n\n### Summary mode on exit\n - bpftune reports what changes were made to tunables on exit\n   as a kind of summarization mode.\n\n### Rollback mode\n\n - If run with \"-R\" (rollback), sysctl changes will be undone,\n   so the user can explore what auto-tuning is done without\n   making long-term changes.\n\n### Packaging\n - added a \"make pkg\" target which creates rpm\n - set up other/bpftune for ol8 builds\n\n### add support for aarch64/older kernels\n- Add legacy kprobe support also as this will be needed for\n  aarch64 which did not get BPF trampoline until 6.5; legacy\n  is needed for older kernels that do not have fentry/fexit or\n  iterators.  Added \"bpftune -S\" support that auto-detects\n  level of support provided, and legacy tuners are used\n  if full support is not possible.\n  This support is now present and each tuner builds a\n  legacy version, using definition BPFTUNE_LEGACY to\n  distinguish.  This replaces fentry with kprobes etc.\n  See CONTRIBUTING.md for more details on how to support\n  legacy mode.\n\n### Test suite\n\n - tests should validate core features and tunable behaviour\n\n - tests should run quickly (<5min)\n\n - tests should not require remote system to run (use netns)\n\n### Documentation\n\n- document bpftune + options with manual page\n- document each tuner with manual page\n- add CONTRIBUTING.md to describe how to contribute, goals and key\n  design constraints\n\n## To do tasks\n\n### TCP buffer tuner improvements\n- one problem is hard to have a one max buffer size to fit all;\n  can we use snd buffer clamping (via bpf_setsockopt) to clamp for\n  small flows? this would be a good strategy to mimimize overhead\n  for non-critical flows during memory crunches. tp->snd_cwnd_clamp\n  and tp->window_clamp are clamping values for send/receive windows.\n  use TCP_BPF_SNDCWND_CLAMP, TCP_WINDOW_CLAMP for these.  Problem:\n  \"moderate rcvbuf\" behaviour alters window clamp so may need to\n  be a send-side only approach.\n- look at netdev_max_backlog; tune that too? Tune up when we\n  see drops, also set net.core.flow_limit_cpu_bitmap to enable\n  per-flow limits; these orient drops towards busier flows, ensuring\n  that small flows get prioritized; see\n  https://www.kernel.org/doc/html/latest/networking/scaling.html\n  Initial implementation in net_buffer_tuner for netdev_max_backlog\n- initial buffer sizing: can we find a heuristic to minimize an\n  error signal (number of updates to buffer size?).  Problem:\n  this could devolve into simply setting [wr]mem[1] = [wr]mem[2].\n  Pole balancing problem?  Set by well-know service history?\n  If we stash the buffer sizes on connection destroy, we can\n  learn and use sockops prog to set initial buffer size.\n  use BPF_SOCK_OPS_RWND_INIT to set default recieve buffer size\n  and bpf_setsockopt(.., TCP_BPF_IW, ..) to set send buffer size.\n- look at SO_[SND|RCV]BPF setting; does that need to be\n  overridden? If we can trace cases where more buffer would\n  help maybe we can learn which well-known ports do buffer\n  sizing wrong? Perhaps at a minimum we should catch cases\n  where SO_[SND|RCV]BUF is not honoured do to [wr]mem_max\n  settings and adjust [wr]mem_max?\n\n### Connection tuner improvements\n- done; see bpftune-tcp-conn (8)\n\n### neigh table tuner\n\n- look at gc frequency and churn; optimize this also?\n\n- should we enable drop_gratuitous_arp if we see a lot of\n  entries added?\n\n## Future work\n\n- assessing tuner strategy: are we helping or making things\n  worse? Support multiple strategies per tuner, explore the\n  best?  Multiple strategy support has landed, not used yet.\n- kernel support for tunable override via bpf? Have decision points\n  in kernel be over-rideable by BPF; would need to have sysctl\n  denote \"this is BPF tuned\" somehow...\n- mem tuning (min_free_kbytes etc)?\n- kernel tunables (numa balancing, pid max, threads_max, etc)\n- vm tunables?\n- limiting ulimit? see OraBug 29123482\n\tOraBug 34378084 - Excessive Locking after switch back\n- have a dedicated bpftune user, and make bpftune only executable\n  by that user so we start with the right privilege set\n\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 19.041015625,
          "content": "Copyright (c) 2023, Oracle and/or its affiliates.\n\nThis software is available to you under\n\nSPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note\n\nBeing under the terms of the GNU General Public License version 2.\n\nSPDX-URL: https://spdx.org/licenses/GPL-2.0.html\n\nLicense-Text:\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n                       51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n\nWith an explicit syscall exception, as stated:\n\nSPDX-Exception-Identifier: Linux-syscall-note\nSPDX-URL: https://spdx.org/licenses/Linux-syscall-note.html\nSPDX-Licenses: GPL-2.0\nUsage-Guide:\n  This exception is used together with one of the above SPDX-Licenses\n  to mark user space API (uapi) header files so they can be included\n  into non GPL compliant user space application code.\n  To use this exception add it with the keyword WITH to one of the\n  identifiers in the SPDX-Licenses tag:\n    SPDX-License-Identifier: <SPDX-License> WITH Linux-syscall-note\nLicense-Text:\n\n   NOTE! This copyright does *not* cover user programs that use kernel\n services by normal system calls - this is merely considered normal use\n of the kernel, and does *not* fall under the heading of \"derived work\".\n Also note that the GPL below is copyrighted by the Free Software\n Foundation, but the instance of code that it refers to (the Linux\n kernel) is copyrighted by me and others who actually wrote it.\n\n Also note that the only valid version of the GPL as far as the kernel\n is concerned is _this_ particular version of the license (ie v2, not\n v2.2 or v3.x or whatever), unless explicitly otherwise stated.\n\nLinus Torvalds\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.1357421875,
          "content": "# SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note\n#\n# Copyright (c) 2023, Oracle and/or its affiliates.\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public\n# License v2 as published by the Free Software Foundation.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public\n# License along with this program; if not, write to the\n# Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n# Boston, MA 021110-1307, USA.\n#\n\nPKG_NAME = `rpmspec -q --queryformat=\"%{NAME}-%{VERSION}-%{RELEASE}\\n\" buildrpm/bpftune.spec | head -1`.`uname -m`\nPKG_ARCHIVE = `rpmspec -q --queryformat=\"%{NAME}-%{VERSION}\\n\" buildrpm/bpftune.spec | head -1`\nPKG_DIR ?=  ${HOME}/rpmbuild\nSRC_DIR = $(PKG_DIR)/SOURCES\nTHIS_DIR = `basename $PWD`\nLICENSEDIR ?= $(PKG_DIR)/BUILD\nBUILD_DIR = $(PKG_DIR)/BUILDROOT/$(PKG_NAME)\n\nDESTDIR ?=\nprefix ?= /usr\ninstallprefix ?= $(DESTDIR)/$(prefix)\n\nINSTALLPATH = $(installprefix)\n\n.DELETE_ON_ERROR:\n\n.PHONY: all clean\n\nall: srcdir docdir testdir\n\t\nsrcdir:\n\tcd src; make\ndocdir:\n\tcd docs; make man\n\ntestdir: srcdir\n\tcd test; make\n\ntest:\tFORCE\n\tcd test; make test\n\npkg:    all\n\tmkdir -p $(SRC_DIR) $(BUILD_DIR) $(BUILD_DIR)/$(prefix) $(LICENSEDIR);\\\n\trm -fr $(SRC_DIR)/$(PKG_ARCHIVE)* ;\\\n\tgit archive --format=tar --prefix=$(PKG_ARCHIVE)/ -o $(SRC_DIR)/$(PKG_ARCHIVE).tar HEAD;\\\n\tbzip2 $(SRC_DIR)/$(PKG_ARCHIVE).tar ; \\\n\tcp -pr LICENSE* $(LICENSEDIR) ;\\\n\tDESTDIR=$(BUILD_DIR) installprefix=$(BUILD_DIR)/$(prefix) rpmbuild --define \"_topdir $(PKG_DIR)\" -ba buildrpm/bpftune.spec\n\nFORCE:\n\t\nclean: srcclean docclean testclean\n\ndistclean: clean distclean_src\n\t\nsrcclean:\n\tcd src; make clean\ndocclean:\n\tcd docs; make clean\ndistclean_src:\n\tcd src; make distclean\ntestclean:\n\tcd test; make clean\n\ninstall: srcinstall includeinstall docinstall\n\t\nsrcinstall:\n\tcd src; make install\nincludeinstall:\n\tcd include; make install\ndocinstall:\n\tcd docs; make install\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.181640625,
          "content": "# bpftune - BPF driven auto-tuning\n\nbpftune aims to provide lightweight, always-on auto-tuning of system\nbehaviour.  The key benefit it provides are\n\n- by using BPF observability features, we can continuously monitor\n  and adjust system behaviour\n- because we can observe system behaviour at a fine grain (rather\n  than using coarse system-wide stats), we can tune at a finer grain\n  too (individual socket policies, individual device policies etc)\n\n## The problem\n\nThe Linux kernel contains a large number of tunables; these\noften take the form of sysctl(8) parameters, and are usually\nintroduced for situations where there is no one \"right\" answer\nfor a configuration choice.  The number of tunables available\nis quite daunting.  On a 6.2 kernel we see\n\n```\n# sysctl --all 2>/dev/null|wc -l\n1624\n```\n\n[See here for an excellent writeup on network-related tunables.](https://github.com/leandromoreira/linux-network-performance-parameters).\n\nAt the same time, individual systems get a lot less care\nand adminstrator attention than they used to; phrases like\n\"cattle not pets\" exemplify this.  Given the modern cloud\narchitectures used for most deployments, most systems never\nhave any human adminstrator interaction after initial\nprovisioning; in fact given the scale requirements, this\nis often an explicit design goal - \"no ssh'ing in!\".\n\nThese two observations are not unrelated; in an earlier\nera of fewer, larger systems, tuning by administrators was\nmore feasible.\n\nThese trends - system complexity combined with minimal\nadmin interaction suggest a rethink in terms of tunable\nmanagement.\n\nA lot of lore accumulates around these tunables, and to help\nclarify why we developed bpftune, we will use a straw-man\nversion of the approach taken with tunables:\n\n\"find the set of magic numbers that will work for the\n system forever\"\n\nThis is obviously a caricature of how administrators\napproach the problem, but it does highlight a critical\nimplicit assumption - that systems are static.\n\nAnd that gets to the \"BPF\" in bpftune; BPF provides means\nto carry out low-overhead observability of systems. So\nnot only can we observe the system and tune appropriately,\nwe can also observe the effect of that tuning and re-tune\nif necessary.\n\n## Key design principles\n\n- Minimize overhead.  Use observability features sparingly; do not\n  trace very high frequency events.\n- Be explicit about policy changes providing both a \"what\" - what\n  change was made - and a \"why\" - how does it help? syslog logging\n  makes policy actions explicit with explanations\n- Get out of the way of the administrator.  We can use BPF\n  observability to see if the admin sets tunable values that we\n  are auto-tuning; if they do, we need to get out of the way and\n  disable auto-tuning of the related feature set.\n- Don't replace tunables with more tunables! bpftune is designed to\n  be zero configuration; there are no options, and we try to avoid\n  magic numbers where possible.\n- Use push-pull approaches. For example, with tcp buffer sizing,\n  we often want to get out of the way of applications and bump\n  up tcp sndbuf and rcvbuf, but at a certain point we run the\n  risk of exhausting TCP memory.  We can however monitor if we\n  are approaching TCP memory pressure and if so we can tune down\n  values that we've tuned up.  In this way, we can let the system\n  find a balance between providing resources and exhausting them.\n  In some cases, we won't need to tune up values; they may be fine\n  as they are. But in other cases these limits block optimal performance,\n  and if they are raised safely - with awareness of global memory\n  limits - we can get out the way of improved performance.  Another\n  concern is that increasing buffer size leads to latency - to\n  handle that, we correlate buffer size changes and TCP smoothed\n  round-trip time; if the correlation between these exceeds a\n  threshold (0.7) we stop increasing buffer size.\n\n## Concepts\n\nThe key components are\n\n- tuners: each tuner manages tunables and handles events sent\n  from BPF programs to userspace via the shared ring buffer.\n  Each tuner has an associated set of tunables that it manages.\n\n- optional strategies: a tuner can specify multiple strategies;\n  after running for a while a strategy times out and we assess\n  if a better strategy is available.  Each strategy specifies a\n\t- name\n\t- description\n\t- timeout\t\n\t- evaluation function\n\t- set of BPF program names in tuner associated with strategy\n\n  Strategies are optional and should be set in the tuner init()\n  method via bpftune_strategies_add().  See test/strategy\n  for a coded example.  When a strategy times out, the various\n  evaluation functions are called and the highest-value evaluation\n  dictates the next stratgey.\n\n  Strategies provide a way of providing multiple schemes for\n  auto-tuning the same set of tunables, where the choice is\n  guided by an evaluation of the effectiveness of the strategies.\n\n- events specify a\n\t- tuner id: which tuner the event is destined for\n\t- a scenario: what happened\n\t- an associated netns (if supported)\n\t- information about the event (IP address etc)\n\n- the tuner then responds to the event guided by the active strategy;\n  increase or decrease a tunable value, etc.  Describing the event\n  in the log is key; this allows an admin to understand what\n  changed and why.\n\n## Architecture\n\n- bpftune is a daemon which manages a set of .so plugin tuners;\n  each of these is a shared object that is loaded on start-up.\n- tuners can be enabled or disabled; a tuner is automatically\n  disabled if the admin changes associated tunables manually.\n- tuners share a global BPF ring buffer which allows posting of\n  events from BPF programs to userspace.  For example, if the\n  sysctl tuner sees a systl being set, it posts an event.\n- each tuner has an associated id (set when it is loaded),\n  and events posted contain the tuner id.\n- each tuner has a BPF component (built using a BPF skeleton)\n  and a userspace component.  The latter has init(), fini()\n  and event_handler() entrypoints.  When an event is\n  received, the tuner id is used to identify the appropriate\n  event handler and its event_handler() callback function is run.\n- init, fini and event_handler functions are loaded from the\n  tuner .so object.\n- BPF components should include bpftune.bpf.h; it contains\n  the common map definitions (ringbuf, etc) and shared variables\n  such as learning rate and tuner ids that each tuner needs.\n\n## Supported tuners\n\n- TCP connection tuner: auto-tune choice of congestion control algorithm.\n  See [bpftune-tcp-conn (8)](./docs/bpftune-tcp-conn.rst)\n- IP fragmentation tuner: auto-tune IP fragmentation memory limits\n  to support fragment reassembly.  See [bpftune-ip-frag (8)](./docs/bpftune-ip-frag.rst)\n- neighbour table tuner: auto-tune neighbour table sizes by growing\n  tables when approaching full. See [bpftune-neigh (8)](./docs/bpftune-neigh.rst)\n- sysctl tuner: monitor sysctl setting and if it collides with an\n  auto-tuned sysctl value, disable the associated tuner.  See\n  [bpftune-sysctl (8)](./docs/bpftune-sysctl.rst)\n- TCP buffer tuner: auto-tune max and initial buffer sizes.  See\n  [bpftune-tcp-buffer (8)](./docs/bpftune-tcp-buffer.rst)\n- net buffer tuner: auto-tune tunables related to core networking.\n  See [bpftune-net-buffer (8)](./docs/bpftune-net-buffer.rst)\n- netns tuner: notices addition and removal of network namespaces,\n  which helps power namespace awareness for bpftune as a whole.\n  Namespace awareness is important as we want to be able to auto-tune\n  containers also.  See [bpftune-netns (8)](./docs/bpftune-netns.rst)\n\n## Code organization\n\nBoth core bpftune.c and individual tuners use the libbpftune library.\nIt handles logging, tuner init/fini, and BPF init/fini.\n\nEach tuner shared object defines an init(), fini() and event_handler()\nfunction. These respectively set up and clean up BPF and handle events\nthat originate from the BPF code.\n\n## Getting Started\n\nIf building the repository manually, simply run\n\n```\n$ make ; sudo make install\n```\nat the top-level of the repository.  bpftune also supports a\n\n```\n$ make pkg\n```\n\ntarget, which will make a bpftune RPM.  See ./buildrpm/bpftune.spec\n\nWe can also build with non-standard libdir for distros which do not\nuse /usr/lib64 like CachyOS; in this case to install to /usr/lib\ninstead\n\n```\n$ make libdir=lib\n$ sudo make install libdir=lib\n```\n\nTo build the following packages are needed (names may vary by distro);\n\n- libbpf, libbpf-devel >= 0.6\n- libcap-devel\n- bpftool >= 4.18\n- libnl3-devel (on some distros like Debian libnl-route-3-dev is needed)\n- clang >= 11\n- llvm >= 11\n- python3-docutils\n\nFrom the kernel side, the kernel needs to support BPF ring buffer\n(around the 5.6 kernel, though 5.4 is supported on Oracle Linux\nas ring buffer support was backported), and kernel BTF is\nrequired (CONFIG_DEBUG_INFO_BTF=y).  Verify /sys/kernel/btf/vmlinux\nis present.\n\nTo enable bpftune as a service\n\n```\n$ sudo service bpftune start\n```\n\n...and to enable it by default\n\n```\n$ sudo systemctl enable bpftune\n```\n\nbpftune logs to syslog so /var/log/messages will contain details\nof any tuning carried out.\n\nbpftune can also be run in the foreground as a program; to redirect\noutput to stdout/stderr, run\n\n```\n$ sudo bpftune -s\n```\n\nOn exit, bpftune will summarize any tuning done.\n\nQueries of bpftune state can be done via `bpftune -q`.\n\n## Tests\n\nTests are supplied for each tuner in the tests/ subdirectory.\n\"make test\" runs all the tests.  Tests use network namespaces\nto simulate interactions with remote hosts. See ./TESTING.md\nfor more details.\n\n## Does my system support bpftune?\n\nSimply run \"bpftune -S\" to see:\n\n```\n$ bpftune -S\nbpftune works fully\nbpftune supports per-netns policy (via netns cookie)\n```\n\nTwo aspects are important here\n\n- does the system support fentry/fexit etc? If so full support\n  is likely.\n- does the system support network namespace cookies? If so\n  per-network-namespace policy is supported.\n\n## Demo\n\nSimply starting bpftune and observing changes made via /var/log/messages\ncan be instructive.  For example, on a standard VM with sysctl defaults,\nI ran\n\n```\n$ service bpftune start\n```\n\n...and went about normal development activities such as cloning git\ntrees from upstream, building kernels, etc.  From the log we see\nsome of the adjustments bpftune made to accommodate these activities\n\n```\n$ sudo grep bpftune /var/log/messages\n...\nApr 19 16:14:59 bpftest bpftune[2778]: bpftune works fully\nApr 19 16:14:59 bpftest bpftune[2778]: bpftune supports per-netns policy (via netns cookie)\nApr 19 16:18:40 bpftest bpftune[2778]: Scenario 'specify bbr congestion control' occurred for tunable 'TCP congestion control' in global ns. Because loss rate has exceeded 1 percent for a connection, use bbr congestion control algorithm instead of default\nApr 19 16:18:40 bpftest bpftune[2778]: due to loss events for 145.40.68.75, specify 'bbr' congestion control algorithm\nApr 19 16:26:53 bpftest bpftune[2778]: Scenario 'need to increase TCP buffer size(s)' occurred for tunable 'net.ipv4.tcp_rmem' in global ns. Need to increase buffer size(s) to maximize throughput\nApr 19 16:26:53 bpftest bpftune[2778]: Due to need to increase max buffer size to maximize throughput change net.ipv4.tcp_rmem(min default max) from (4096 131072 6291456) -> (4096 131072 7864320)\nApr 19 16:26:53 bpftest bpftune[2778]: Scenario 'need to increase TCP buffer size(s)' occurred for tunable 'net.ipv4.tcp_rmem' in global ns. Need to increase buffer size(s) to maximize throughput\nApr 19 16:26:53 bpftest bpftune[2778]: Due to need to increase max buffer size to maximize throughput change net.ipv4.tcp_rmem(min default max) from (4096 131072 7864320) -> (4096 131072 9830400)\nApr 19 16:29:04 bpftest bpftune[2778]: Scenario 'specify bbr congestion control' occurred for tunable 'TCP congestion control' in global ns. Because loss rate has exceeded 1 percent for a connection, use bbr congestion control algorithm instead of default\nApr 19 16:29:04 bpftest bpftune[2778]: due to loss events for 140.91.12.81, specify 'bbr' congestion control algorithm\n```\n\nTo deterministically trigger bpftune behaviour, one approach we can\ntake is to download a large file with inappropriate settings.\n\nIn one window, set tcp rmem max to a too-low value, and run bpftune\nas a program logging to stdout/stderr (-s):\n\n```\n$ sudo sysctl -w net.ipv4.tcp_rmem=\"4096 131072 1310720\"\nnet.ipv4.tcp_rmem = 4096 131072 1310720\n$ sudo bpftune -s\n```\n\nIn another window, wget a large file:\n\n```\n$ wget https://yum.oracle.com/ISOS/OracleLinux/OL8/u7/x86_64/OracleLinux-R8-U7-x86_64-dvd.iso\n```\n\nIn the first window, we see bpftune tuning up rmem:\n\n```\nbpftune: bpftune works in legacy mode\nbpftune: bpftune does not support per-netns policy (via netns cookie)\nbpftune: Scenario 'need to increase TCP buffer size(s)' occurred for tunable 'net.ipv4.tcp_rmem' in global ns. Need to increase buffer size(s) to maximize throughput\nbpftune: Due to need to increase max buffer size to maximize throughput change net.ipv4.tcp_rmem(min default max) from (4096 131072 1310720) -> (4096 131072 1638400)\n```\n\nThis occurs multiple times, and on exit (Ctrl+C) we see\nthe summary of changes made:\n\n```\nbpftune: Summary: scenario 'need to increase TCP buffer size(s)' occurred 9 times for tunable 'net.ipv4.tcp_rmem' in global ns. Need to increase buffer size(s) to maximize throughput\nbpftune: sysctl 'net.ipv4.tcp_rmem' changed from (4096 131072 1310720 ) -> (4096 131072 9765625 )\n```\n\n## For more info\n\nSee the docs/ subdirectory for manual pages covering bpftune\nand associated tuners.\n\nbpftune was presented at the eBPF summit; [video here](https://www.youtube.com/watch?v=X0TvfH8hrQE&t=420s).\n\nbpftune [was also discussed on Liz Rice's excellent eCHO eBPF podcast](https://www.youtube.com/watch?v=3ylmGE6sW8w), specifically in the context of using reinforcement learning in BPF \n## Contributing\n\nThis project welcomes contributions from the community. Before submitting a pull request, please [review our contribution guide](./CONTRIBUTING.md)\n\n## Security\n\nPlease consult the [security guide](./SECURITY.md) for our responsible security vulnerability disclosure process\n\n## License\n\nCopyright (c) 2023 Oracle and/or its affiliates.\n\nThis software is available to you under\n\nSPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note\n\nBeing under the terms of the GNU General Public License version 2.\n\nSPDX-URL: https://spdx.org/licenses/GPL-2.0.html\n\nSee [the license file](./LICENSE.txt) for more details.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.6962890625,
          "content": "# Reporting security vulnerabilities\n\nOracle values the independent security research community and believes that\nresponsible disclosure of security vulnerabilities helps us ensure the security\nand privacy of all our users.\n\nPlease do NOT raise a GitHub Issue to report a security vulnerability. If you\nbelieve you have found a security vulnerability, please submit a report to\n[secalert_us@oracle.com][1] preferably with a proof of concept. Please review\nsome additional information on [how to report security vulnerabilities to Oracle][2].\nWe encourage people who contact Oracle Security to use email encryption using\n[our encryption key][3].\n\nWe ask that you do not use other channels or contact the project maintainers\ndirectly.\n\nNon-vulnerability related security issues including ideas for new or improved\nsecurity features are welcome on GitHub Issues.\n\n## Security updates, alerts and bulletins\n\nSecurity updates will be released on a regular cadence. Many of our projects\nwill typically release security fixes in conjunction with the\nOracle Critical Patch Update program. Additional\ninformation, including past advisories, is available on our [security alerts][4]\npage.\n\n## Security-related information\n\nWe will provide security related information such as a threat model, considerations\nfor secure use, or any known security issues in our documentation. Please note\nthat labs and sample code are intended to demonstrate a concept and may not be\nsufficiently hardened for production use.\n\n[1]: mailto:secalert_us@oracle.com\n[2]: https://www.oracle.com/corporate/security-practices/assurance/vulnerability/reporting.html\n[3]: https://www.oracle.com/security-alerts/encryptionkey.html\n[4]: https://www.oracle.com/security-alerts/\n"
        },
        {
          "name": "TESTING.md",
          "type": "blob",
          "size": 3.8251953125,
          "content": "# bpftune tests\n\nTests aim to exercise the behaviour of tuners and compare baseline/test\nto assess performance improvements or overheads.  Per-tuner tests\ncover the various tuners, along with general logging tests.\n\nTests should cover both normal and legacy mode where appropriate.\n\nTests operate locally using network namespaces and veth pairs\nto generate traffic.\n\nNetwork namespace awareness requires support for netns cookies,\nwhich is not available in 5.4 kernels.  In such cases, tests\nrequiring netns cookie support are skipped automatically.\n\n# Configuration\n\nInstall packages used to facilitate testing:\n\n```\n$ sudo dnf install iperf3 qperf proxyt kernel-uek-modules-extra clang llvm bpftool libbpf-devel libcap-devel \n$ sudo dnf module install container-tools:ol8\n```\n\niperf3, qperf are needed for perf testing; kernel-uek-modules-extra is\nneeded for sch-netem; proxyt is used by podman to connect to the container\nregistry; may not be needed depending on the network connectivity/podman\nconfig used.  If podman is not installed or registry reachable, tests\nwill be skipped.\n\nThe latter 5 packages are needed to build the sample tuner.\n\npodman is optional and is used to verify container support in bpftune.\n\nPackage names may differ for different distros.\n\n# General tests\n\n## Support test\n\nEnsure \"bpftune -S\" shows right support level (none/legacy/full)\nfor system, and shows if per-netns policy is supported (via\nnetns cookie).\n\n## Logging tests\n\nVerify logging works with syslog, stdout/stderr.\n\n## Service test\n\nVerify enabling/disabling bpftune via service works and bpftune\nis running/logging.\n\n## Capabilities test\n\nEnsure capabilities are dropped after initialization using\ngetpcaps(8).\n\n## Inotify tests\n\nVerify that removing or adding a tuner is noticed and the tuner\nis cleaned up/initialized appropriately.\n\n## Sample tests\n\nWe provide a bare-bones sample tuner in sample_tuner/ ; it is\nan example of a user-provided tuner that is built using\nbpftune-devel and is installed in /usr/local/lib64/bpftune.\nThe test verifies that\n - installing it after bpftune has started triggers inotify\n   events to load the tuner\n - events are successfully triggered for the tuner once\n   loaded\n - it is unloaded on remove from the directory\n\n# Per-tuner tests\n\n## sysctl tests\n\nVerify that calling sysctl with a tuner-managed value switches off\nthe tuner in question (getting out of the way of the admin).\nAlso verify that when a tunable is modified in a network namespace,\nonly the network namespace tuning is switched off.\n\n## neigh_table tests (gc_thresh[2])\n\nEnsure that the neigh table tuner notices the ARP/IPv6 neighbour\ntable filling up and expands it via netlink request.\n\n## mem_pressure tests (tcp_mem[1])\n\nWith artificially low memory pressure value, generate traffic\nand ensure mem pressure (tcp_mem[1]) is bumped up.\n\n## mem exhaustion tests (tcp_mem[2])\n\nWith artificially low memory exhaustion value, generate traffic\nand ensure mem exhaustion value (tcp_mem[2]) is bumped up.\n\n## rmem tests (tcp_rmem[2])\n\ncheck rmem max is increased when limit reached for receive buffer\nsize for global and non-global netns (where netns support is\npresent).  Use an artifically low max to trigger bpftune tuning.\n\n## wmem tests (tcp_wmem[2])\n\ncheck wmem max is increased when limit reached for send buffer\nsize for global and non-global netns (where netns support is\npresent).  Use an artificially low max to trigger buftune tuning.\n\n## cong tests\n\nUse tc to generate lossy connection and ensure that BBR is\nused as congestion control algorithm when loss rate exceeds 1%.\n\n# Performance tests\n\n## iperf3 tests\n\nMeasure baseline versus test (bpftune running) throughput.\n\n## qperf tests\n\nMeasure baseline versus test (bpftune running) throughput/latency.\n\n## TBD yum install\n\nMeasure baseline versus test for package download.\n\n## TBD large file wget\n\nMeasure baseline versus test for large file download.\n"
        },
        {
          "name": "THIRD_PARTY_LICENSES.txt",
          "type": "blob",
          "size": 93.396484375,
          "content": "Third Party Attributions\n\nThe following software (or subsets of the software) are dependencies of this\nproject.\n\nThe following section (\"Third Party Runtime Dependencies\") contains dependencies\nthat are used at runtime by an application built using this code.\n\nThird Party Runtime Dependencies\n================================\nThe following are dependencies of bpftune - libbpf, libnl3 and libcap -\nwhich are dynamically linked.\n\n-------------------------------------------------------------------------------\nlibbpf is dual-licensed using BSD-2-Clause or LGPL-2.1\n-------------------------------------------------------------------------------\n\nCopyright (c) 2003-2013 Thomas Graf <tgraf@suug.ch>\nCopyright (C) 2013-2015 Alexei Starovoitov <ast@kernel.org>\nCopyright (C) 2015 Wang Nan <wangnan0@huawei.com>\nCopyright (C) 2015 Huawei Inc.\nCopyright(c) 2018 - 2019 Intel Corporation.\nCopyright (c) 2018 Facebook\nCopyright (c) 2019 Facebook\nCopyright (C) 2017 Nicira, Inc.\nCopyright (C) 2019 Isovalent, Inc.\nCopyright (c) 2019 Netronome Systems, Inc.\n\nValid-License-Identifier: BSD-2-Clause\nSPDX-URL: https://spdx.org/licenses/BSD-2-Clause.html\nUsage-Guide:\n  To use the BSD 2-clause \"Simplified\" License put the following SPDX\n  tag/value pair into a comment according to the placement guidelines in\n  the licensing rules documentation:\n    SPDX-License-Identifier: BSD-2-Clause\nLicense-Text:\n\nCopyright (c) <year> <owner> . All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice,\n   this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\nValid-License-Identifier: LGPL-2.1\nValid-License-Identifier: LGPL-2.1+\nSPDX-URL: https://spdx.org/licenses/LGPL-2.1.html\nUsage-Guide:\n  To use this license in source code, put one of the following SPDX\n  tag/value pairs into a comment according to the placement\n  guidelines in the licensing rules documentation.\n  For 'GNU Lesser General Public License (LGPL) version 2.1 only' use:\n    SPDX-License-Identifier: LGPL-2.1\n  For 'GNU Lesser General Public License (LGPL) version 2.1 or any later\n  version' use:\n    SPDX-License-Identifier: LGPL-2.1+\nLicense-Text:\n\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 2.1, February 1999\n\nCopyright (C) 1991, 1999 Free Software Foundation, Inc.\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL. It also counts as\nthe successor of the GNU Library Public License, version 2, hence the\nversion number 2.1.]\n\nPreamble\n\nThe licenses for most software are designed to take away your freedom to\nshare and change it. By contrast, the GNU General Public Licenses are\nintended to guarantee your freedom to share and change free software--to\nmake sure the software is free for all its users.\n\nThis license, the Lesser General Public License, applies to some specially\ndesignated software packages--typically libraries--of the Free Software\nFoundation and other authors who decide to use it. You can use it too, but\nwe suggest you first think carefully about whether this license or the\nordinary General Public License is the better strategy to use in any\nparticular case, based on the explanations below.\n\nWhen we speak of free software, we are referring to freedom of use, not\nprice. Our General Public Licenses are designed to make sure that you have\nthe freedom to distribute copies of free software (and charge for this\nservice if you wish); that you receive source code or can get it if you\nwant it; that you can change the software and use pieces of it in new free\nprograms; and that you are informed that you can do these things.\n\nTo protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights. These restrictions translate to certain responsibilities for you if\nyou distribute copies of the library or if you modify it.\n\nFor example, if you distribute copies of the library, whether gratis or for\na fee, you must give the recipients all the rights that we gave you. You\nmust make sure that they, too, receive or can get the source code. If you\nlink other code with the library, you must provide complete object files to\nthe recipients, so that they can relink them with the library after making\nchanges to the library and recompiling it. And you must show them these\nterms so they know their rights.\n\nWe protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\nTo protect each distributor, we want to make it very clear that there is no\nwarranty for the free library. Also, if the library is modified by someone\nelse and passed on, the recipients should know that what they have is not\nthe original version, so that the original author's reputation will not be\naffected by problems that might be introduced by others.\n\nFinally, software patents pose a constant threat to the existence of any\nfree program. We wish to make sure that a company cannot effectively\nrestrict the users of a free program by obtaining a restrictive license\nfrom a patent holder. Therefore, we insist that any patent license obtained\nfor a version of the library must be consistent with the full freedom of\nuse specified in this license.\n\nMost GNU software, including some libraries, is covered by the ordinary GNU\nGeneral Public License. This license, the GNU Lesser General Public\nLicense, applies to certain designated libraries, and is quite different\nfrom the ordinary General Public License. We use this license for certain\nlibraries in order to permit linking those libraries into non-free\nprograms.\n\nWhen a program is linked with a library, whether statically or using a\nshared library, the combination of the two is legally speaking a combined\nwork, a derivative of the original library. The ordinary General Public\nLicense therefore permits such linking only if the entire combination fits\nits criteria of freedom. The Lesser General Public License permits more lax\ncriteria for linking other code with the library.\n\nWe call this license the \"Lesser\" General Public License because it does\nLess to protect the user's freedom than the ordinary General Public\nLicense. It also provides other free software developers Less of an\nadvantage over competing non-free programs. These disadvantages are the\nreason we use the ordinary General Public License for many\nlibraries. However, the Lesser license provides advantages in certain\nspecial circumstances.\n\nFor example, on rare occasions, there may be a special need to encourage\nthe widest possible use of a certain library, so that it becomes a de-facto\nstandard. To achieve this, non-free programs must be allowed to use the\nlibrary. A more frequent case is that a free library does the same job as\nwidely used non-free libraries. In this case, there is little to gain by\nlimiting the free library to free software only, so we use the Lesser\nGeneral Public License.\n\nIn other cases, permission to use a particular library in non-free programs\nenables a greater number of people to use a large body of free\nsoftware. For example, permission to use the GNU C Library in non-free\nprograms enables many more people to use the whole GNU operating system, as\nwell as its variant, the GNU/Linux operating system.\n\nAlthough the Lesser General Public License is Less protective of the users'\nfreedom, it does ensure that the user of a program that is linked with the\nLibrary has the freedom and the wherewithal to run that program using a\nmodified version of the Library.\n\nThe precise terms and conditions for copying, distribution and modification\nfollow. Pay close attention to the difference between a \"work based on the\nlibrary\" and a \"work that uses the library\". The former contains code\nderived from the library, whereas the latter must be combined with the\nlibrary in order to run.\n\nTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n0. This License Agreement applies to any software library or other program\n   which contains a notice placed by the copyright holder or other\n   authorized party saying it may be distributed under the terms of this\n   Lesser General Public License (also called \"this License\"). Each\n   licensee is addressed as \"you\".\n\n   A \"library\" means a collection of software functions and/or data\n   prepared so as to be conveniently linked with application programs\n   (which use some of those functions and data) to form executables.\n\n   The \"Library\", below, refers to any such software library or work which\n   has been distributed under these terms. A \"work based on the Library\"\n   means either the Library or any derivative work under copyright law:\n   that is to say, a work containing the Library or a portion of it, either\n   verbatim or with modifications and/or translated straightforwardly into\n   another language. (Hereinafter, translation is included without\n   limitation in the term \"modification\".)\n\n   \"Source code\" for a work means the preferred form of the work for making\n   modifications to it. For a library, complete source code means all the\n   source code for all modules it contains, plus any associated interface\n   definition files, plus the scripts used to control compilation and\n   installation of the library.\n\n    Activities other than copying, distribution and modification are not\n    covered by this License; they are outside its scope. The act of running\n    a program using the Library is not restricted, and output from such a\n    program is covered only if its contents constitute a work based on the\n    Library (independent of the use of the Library in a tool for writing\n    it). Whether that is true depends on what the Library does and what the\n    program that uses the Library does.\n\n1. You may copy and distribute verbatim copies of the Library's complete\n   source code as you receive it, in any medium, provided that you\n   conspicuously and appropriately publish on each copy an appropriate\n   copyright notice and disclaimer of warranty; keep intact all the notices\n   that refer to this License and to the absence of any warranty; and\n   distribute a copy of this License along with the Library.\n\n   You may charge a fee for the physical act of transferring a copy, and\n   you may at your option offer warranty protection in exchange for a fee.\n\n2. You may modify your copy or copies of the Library or any portion of it,\n   thus forming a work based on the Library, and copy and distribute such\n   modifications or work under the terms of Section 1 above, provided that\n   you also meet all of these conditions:\n\n   a) The modified work must itself be a software library.\n\n   b) You must cause the files modified to carry prominent notices stating\n      that you changed the files and the date of any change.\n\n   c) You must cause the whole of the work to be licensed at no charge to\n      all third parties under the terms of this License.\n\n   d) If a facility in the modified Library refers to a function or a table\n      of data to be supplied by an application program that uses the\n      facility, other than as an argument passed when the facility is\n      invoked, then you must make a good faith effort to ensure that, in\n      the event an application does not supply such function or table, the\n      facility still operates, and performs whatever part of its purpose\n      remains meaningful.\n\n   (For example, a function in a library to compute square roots has a\n    purpose that is entirely well-defined independent of the\n    application. Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must be\n    optional: if the application does not supply it, the square root\n    function must still compute square roots.)\n\n   These requirements apply to the modified work as a whole. If\n   identifiable sections of that work are not derived from the Library, and\n   can be reasonably considered independent and separate works in\n   themselves, then this License, and its terms, do not apply to those\n   sections when you distribute them as separate works. But when you\n   distribute the same sections as part of a whole which is a work based on\n   the Library, the distribution of the whole must be on the terms of this\n   License, whose permissions for other licensees extend to the entire\n   whole, and thus to each and every part regardless of who wrote it.\n\n   Thus, it is not the intent of this section to claim rights or contest\n   your rights to work written entirely by you; rather, the intent is to\n   exercise the right to control the distribution of derivative or\n   collective works based on the Library.\n\n   In addition, mere aggregation of another work not based on the Library\n   with the Library (or with a work based on the Library) on a volume of a\n   storage or distribution medium does not bring the other work under the\n   scope of this License.\n\n3. You may opt to apply the terms of the ordinary GNU General Public\n   License instead of this License to a given copy of the Library. To do\n   this, you must alter all the notices that refer to this License, so that\n   they refer to the ordinary GNU General Public License, version 2,\n   instead of to this License. (If a newer version than version 2 of the\n   ordinary GNU General Public License has appeared, then you can specify\n   that version instead if you wish.) Do not make any other change in these\n   notices.\n\n   Once this change is made in a given copy, it is irreversible for that\n   copy, so the ordinary GNU General Public License applies to all\n   subsequent copies and derivative works made from that copy.\n\n   This option is useful when you wish to copy part of the code of the\n   Library into a program that is not a library.\n\n4. You may copy and distribute the Library (or a portion or derivative of\n   it, under Section 2) in object code or executable form under the terms\n   of Sections 1 and 2 above provided that you accompany it with the\n   complete corresponding machine-readable source code, which must be\n   distributed under the terms of Sections 1 and 2 above on a medium\n   customarily used for software interchange.\n\n   If distribution of object code is made by offering access to copy from a\n   designated place, then offering equivalent access to copy the source\n   code from the same place satisfies the requirement to distribute the\n   source code, even though third parties are not compelled to copy the\n   source along with the object code.\n\n5. A program that contains no derivative of any portion of the Library, but\n   is designed to work with the Library by being compiled or linked with\n   it, is called a \"work that uses the Library\". Such a work, in isolation,\n   is not a derivative work of the Library, and therefore falls outside the\n   scope of this License.\n\n   However, linking a \"work that uses the Library\" with the Library creates\n   an executable that is a derivative of the Library (because it contains\n   portions of the Library), rather than a \"work that uses the\n   library\". The executable is therefore covered by this License. Section 6\n   states terms for distribution of such executables.\n\n   When a \"work that uses the Library\" uses material from a header file\n   that is part of the Library, the object code for the work may be a\n   derivative work of the Library even though the source code is\n   not. Whether this is true is especially significant if the work can be\n   linked without the Library, or if the work is itself a library. The\n   threshold for this to be true is not precisely defined by law.\n\n   If such an object file uses only numerical parameters, data structure\n   layouts and accessors, and small macros and small inline functions (ten\n   lines or less in length), then the use of the object file is\n   unrestricted, regardless of whether it is legally a derivative\n   work. (Executables containing this object code plus portions of the\n   Library will still fall under Section 6.)\n\n   Otherwise, if the work is a derivative of the Library, you may\n   distribute the object code for the work under the terms of Section\n   6. Any executables containing that work also fall under Section 6,\n   whether or not they are linked directly with the Library itself.\n\n6. As an exception to the Sections above, you may also combine or link a\n   \"work that uses the Library\" with the Library to produce a work\n   containing portions of the Library, and distribute that work under terms\n   of your choice, provided that the terms permit modification of the work\n   for the customer's own use and reverse engineering for debugging such\n   modifications.\n\n   You must give prominent notice with each copy of the work that the\n   Library is used in it and that the Library and its use are covered by\n   this License. You must supply a copy of this License. If the work during\n   execution displays copyright notices, you must include the copyright\n   notice for the Library among them, as well as a reference directing the\n   user to the copy of this License. Also, you must do one of these things:\n\n   a) Accompany the work with the complete corresponding machine-readable\n      source code for the Library including whatever changes were used in\n      the work (which must be distributed under Sections 1 and 2 above);\n      and, if the work is an executable linked with the Library, with the\n      complete machine-readable \"work that uses the Library\", as object\n      code and/or source code, so that the user can modify the Library and\n      then relink to produce a modified executable containing the modified\n      Library. (It is understood that the user who changes the contents of\n      definitions files in the Library will not necessarily be able to\n      recompile the application to use the modified definitions.)\n\n   b) Use a suitable shared library mechanism for linking with the\n      Library. A suitable mechanism is one that (1) uses at run time a copy\n      of the library already present on the user's computer system, rather\n      than copying library functions into the executable, and (2) will\n      operate properly with a modified version of the library, if the user\n      installs one, as long as the modified version is interface-compatible\n      with the version that the work was made with.\n\n   c) Accompany the work with a written offer, valid for at least three\n      years, to give the same user the materials specified in Subsection\n      6a, above, for a charge no more than the cost of performing this\n      distribution.\n\n   d) If distribution of the work is made by offering access to copy from a\n      designated place, offer equivalent access to copy the above specified\n      materials from the same place.\n\n   e) Verify that the user has already received a copy of these materials\n      or that you have already sent this user a copy.\n\n   For an executable, the required form of the \"work that uses the Library\"\n   must include any data and utility programs needed for reproducing the\n   executable from it. However, as a special exception, the materials to be\n   distributed need not include anything that is normally distributed (in\n   either source or binary form) with the major components (compiler,\n   kernel, and so on) of the operating system on which the executable runs,\n   unless that component itself accompanies the executable.\n\n   It may happen that this requirement contradicts the license restrictions\n   of other proprietary libraries that do not normally accompany the\n   operating system. Such a contradiction means you cannot use both them\n   and the Library together in an executable that you distribute.\n\n7. You may place library facilities that are a work based on the Library\n   side-by-side in a single library together with other library facilities\n   not covered by this License, and distribute such a combined library,\n   provided that the separate distribution of the work based on the Library\n   and of the other library facilities is otherwise permitted, and provided\n   that you do these two things:\n\n   a) Accompany the combined library with a copy of the same work based on\n      the Library, uncombined with any other library facilities. This must\n      be distributed under the terms of the Sections above.\n\n   b) Give prominent notice with the combined library of the fact that part\n      of it is a work based on the Library, and explaining where to find\n      the accompanying uncombined form of the same work.\n\n8. You may not copy, modify, sublicense, link with, or distribute the\n   Library except as expressly provided under this License. Any attempt\n   otherwise to copy, modify, sublicense, link with, or distribute the\n   Library is void, and will automatically terminate your rights under this\n   License. However, parties who have received copies, or rights, from you\n   under this License will not have their licenses terminated so long as\n   such parties remain in full compliance.\n\n9. You are not required to accept this License, since you have not signed\n   it. However, nothing else grants you permission to modify or distribute\n   the Library or its derivative works. These actions are prohibited by law\n   if you do not accept this License. Therefore, by modifying or\n   distributing the Library (or any work based on the Library), you\n   indicate your acceptance of this License to do so, and all its terms and\n   conditions for copying, distributing or modifying the Library or works\n   based on it.\n\n10. Each time you redistribute the Library (or any work based on the\n    Library), the recipient automatically receives a license from the\n    original licensor to copy, distribute, link with or modify the Library\n    subject to these terms and conditions. You may not impose any further\n    restrictions on the recipients' exercise of the rights granted\n    herein. You are not responsible for enforcing compliance by third\n    parties with this License.\n\n11. If, as a consequence of a court judgment or allegation of patent\n    infringement or for any other reason (not limited to patent issues),\n    conditions are imposed on you (whether by court order, agreement or\n    otherwise) that contradict the conditions of this License, they do not\n    excuse you from the conditions of this License. If you cannot\n    distribute so as to satisfy simultaneously your obligations under this\n    License and any other pertinent obligations, then as a consequence you\n    may not distribute the Library at all. For example, if a patent license\n    would not permit royalty-free redistribution of the Library by all\n    those who receive copies directly or indirectly through you, then the\n    only way you could satisfy both it and this License would be to refrain\n    entirely from distribution of the Library.\n\n    If any portion of this section is held invalid or unenforceable under\n    any particular circumstance, the balance of the section is intended to\n    apply, and the section as a whole is intended to apply in other\n    circumstances.\n\n    It is not the purpose of this section to induce you to infringe any\n    patents or other property right claims or to contest validity of any\n    such claims; this section has the sole purpose of protecting the\n    integrity of the free software distribution system which is implemented\n    by public license practices. Many people have made generous\n    contributions to the wide range of software distributed through that\n    system in reliance on consistent application of that system; it is up\n    to the author/donor to decide if he or she is willing to distribute\n    software through any other system and a licensee cannot impose that\n    choice.\n\n    This section is intended to make thoroughly clear what is believed to\n    be a consequence of the rest of this License.\n\n12. If the distribution and/or use of the Library is restricted in certain\n    countries either by patents or by copyrighted interfaces, the original\n    copyright holder who places the Library under this License may add an\n    explicit geographical distribution limitation excluding those\n    countries, so that distribution is permitted only in or among countries\n    not thus excluded. In such case, this License incorporates the\n    limitation as if written in the body of this License.\n\n13. The Free Software Foundation may publish revised and/or new versions of\n    the Lesser General Public License from time to time. Such new versions\n    will be similar in spirit to the present version, but may differ in\n    detail to address new problems or concerns.\n\n    Each version is given a distinguishing version number. If the Library\n    specifies a version number of this License which applies to it and \"any\n    later version\", you have the option of following the terms and\n    conditions either of that version or of any later version published by\n    the Free Software Foundation. If the Library does not specify a license\n    version number, you may choose any version ever published by the Free\n    Software Foundation.\n\n14. If you wish to incorporate parts of the Library into other free\n    programs whose distribution conditions are incompatible with these,\n    write to the author to ask for permission. For software which is\n    copyrighted by the Free Software Foundation, write to the Free Software\n    Foundation; we sometimes make exceptions for this. Our decision will be\n    guided by the two goals of preserving the free status of all\n    derivatives of our free software and of promoting the sharing and reuse\n    of software generally.\n\nNO WARRANTY\n\n15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\n    FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN\n    OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\n    PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER\n    EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE\n    ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE LIBRARY IS WITH\n    YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL\n    NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n    WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\n    REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU FOR\n    DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL\n    DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE LIBRARY\n    (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED\n    INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF\n    THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR\n    OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\nEND OF TERMS AND CONDITIONS\n\nHow to Apply These Terms to Your New Libraries\n\nIf you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change. You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\nTo apply these terms, attach the following notices to the library. It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\none line to give the library's name and an idea of what it does.\nCopyright (C) year name of author\n\nThis library is free software; you can redistribute it and/or modify it\nunder the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation; either version 2.1 of the License, or (at\nyour option) any later version.\n\nThis library is distributed in the hope that it will be useful, but WITHOUT\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License\nfor more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with this library; if not, write to the Free Software Foundation,\nInc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Also add\ninformation on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary. Here is a sample; alter the names:\n\nYoyodyne, Inc., hereby disclaims all copyright interest in\nthe library `Frob' (a library for tweaking knobs) written\nby James Random Hacker.\n\nsignature of Ty Coon, 1 April 1990\nTy Coon, President of Vice\nThat's all there is to it!\n\n-------------------------------------------------------------------------------\nvmlinux*.h, bpf.h - all needed for compilation -\nare from the Linux kernel codebase and licensed under the GPLv2\n-------------------------------------------------------------------------------\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n\n-------------------------------------------------------------------------------\nlibnl3 is licensed using LGPLv2\n-------------------------------------------------------------------------------\n                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n^L\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n^L\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n^L\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n^L\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n^L\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n^L\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n^L\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n^L\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n^L\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n\n-------------------------------------------------------------------------------\nlibcap is licensed using LGPLv2+\n-------------------------------------------------------------------------------\n\nUnless otherwise *explicitly* stated, the following text describes the\nlicensed conditions under which the contents of this libcap release\nmay be used and distributed:\n\n-------------------------------------------------------------------------\nRedistribution and use in source and binary forms of libcap, with\nor without modification, are permitted provided that the following\nconditions are met:\n\n1. Redistributions of source code must retain any existing copyright\n   notice, and this entire permission notice in its entirety,\n   including the disclaimer of warranties.\n\n2. Redistributions in binary form must reproduce all prior and current\n   copyright notices, this list of conditions, and the following\n   disclaimer in the documentation and/or other materials provided\n   with the distribution.\n\n3. The name of any author may not be used to endorse or promote\n   products derived from this software without their specific prior\n   written permission.\n\nALTERNATIVELY, this product may be distributed under the terms of the\nGNU General Public License (v2.0 - see below), in which case the\nprovisions of the GNU GPL are required INSTEAD OF the above\nrestrictions.  (This clause is necessary due to a potential conflict\nbetween the GNU GPL and the restrictions contained in a BSD-style\ncopyright.)\n\nTHIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED\nWARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS\nOF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\nTORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\nUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGE.\n-------------------------------------------------------------------------\n\n-------------------------\nFull text of gpl-2.0.txt:\n-------------------------\n\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "TROUBLESHOOTING.md",
          "type": "blob",
          "size": 5.8359375,
          "content": "# Troubleshooting Guide\n\n# Checking bpftune support\n\nThe first step is to determine if bpftune is supported on the system; this\ncan be done via \n\n```\n$ sudo bpftune -S\nbpftune: bpftune works in legacy mode\nbpftune: bpftune supports per-netns policy (via netns cookie)\n```\n\nlegacy mode will be used if there is no fentry/fexit, but it requires\nat a minimum raw tracepoint support, cgroup/sysctl BPF program support\nand BPF ring buffer support.  So if any of these are missing, bpftune\nis not supported.  If you see a \"not supported\" error, it is worth\nadding debug flags to dig deeper.  For example, in this case,\nthe libbpf used cannot read vmlinux BTF and as a result full bpftune\nsupport is not available:\n\n```\n$ sudo bpftune -dS\n\nbpftune: set caps (count 1)\nbpftune: set caps (count 2)\nbpftune: drop caps (count 1)\nbpftune: set caps (count 2)\nbpftune: libbpf: loading object 'probe_bpf' from buffer\nbpftune: libbpf: elf: section(3) fentry/setup_net, size 16, link 0, flags 6, type=1\nbpftune: libbpf: sec 'fentry/setup_net': found program 'entry__setup_net' at insn offset 0 (0 bytes), code size 2 insns (16 bytes)\nbpftune: libbpf: elf: section(4) tp_btf/neigh_create, size 16, link 0, flags 6, type=1\nbpftune: libbpf: sec 'tp_btf/neigh_create': found program 'bpftune_neigh_create' at insn offset 0 (0 bytes), code size 2 insns (16 bytes)\nbpftune: libbpf: elf: section(5) cgroup/sysctl, size 16, link 0, flags 6, type=1\nbpftune: libbpf: sec 'cgroup/sysctl': found program 'sysctl_write' at insn offset 0 (0 bytes), code size 2 insns (16 bytes)\nbpftune: libbpf: elf: section(6) license, size 7, link 0, flags 3, type=1\nbpftune: libbpf: license of probe_bpf is GPL v2\nbpftune: libbpf: elf: section(7) .bss, size 25, link 0, flags 3, type=8\nbpftune: libbpf: elf: section(8) .maps, size 112, link 0, flags 3, type=1\nbpftune: libbpf: elf: section(15) .BTF, size 1670, link 0, flags 0, type=1\nbpftune: libbpf: elf: section(17) .BTF.ext, size 160, link 0, flags 0, type=1\nbpftune: libbpf: elf: section(24) .symtab, size 552, link 1, flags 0, type=2\nbpftune: libbpf: looking for externs among 23 symbols...\nbpftune: libbpf: collected 0 externs total\nbpftune: libbpf: map 'ring_buffer_map': at sec_idx 8, offset 0.\nbpftune: libbpf: map 'ring_buffer_map': found type = 27.\nbpftune: libbpf: map 'ring_buffer_map': found max_entries = 131072.\nbpftune: libbpf: map 'netns_map': at sec_idx 8, offset 16.\nbpftune: libbpf: map 'netns_map': found type = 1.\nbpftune: libbpf: map 'netns_map': found key [12], sz = 8.\nbpftune: libbpf: map 'netns_map': found value [12], sz = 8.\nbpftune: libbpf: map 'netns_map': found max_entries = 65536.\nbpftune: libbpf: map 'last_event_map': at sec_idx 8, offset 48.\nbpftune: libbpf: map 'last_event_map': found type = 1.\nbpftune: libbpf: map 'last_event_map': found key [12], sz = 8.\nbpftune: libbpf: map 'last_event_map': found value [12], sz = 8.\nbpftune: libbpf: map 'last_event_map': found max_entries = 65536.\nbpftune: libbpf: map 'probe_hash_map': at sec_idx 8, offset 80.\nbpftune: libbpf: map 'probe_hash_map': found type = 1.\nbpftune: libbpf: map 'probe_hash_map': found key [12], sz = 8.\nbpftune: libbpf: map 'probe_hash_map': found value [12], sz = 8.\nbpftune: libbpf: map 'probe_hash_map': found max_entries = 65536.\nbpftune: libbpf: map 'probe_bp.bss' (global data): at sec_idx 7, offset 0, flags 400.\nbpftune: libbpf: map 4 is \"probe_bp.bss\"\nbpftune: libbpf: Unsupported BTF_KIND:19\nbpftune: libbpf: loading kernel BTF '/sys/kernel/btf/vmlinux': -22\nbpftune: libbpf: failed to find valid kernel BTF\nbpftune: libbpf: Error loading vmlinux BTF: -3\nbpftune: libbpf: failed to load object 'probe_bpf'\nbpftune: libbpf: failed to load BPF skeleton 'probe_bpf': -3\nbpftune: full bpftune support not available: Unknown error -3\n...\n```\n\nSo we see the reason why; if bpftune cannot read kernel BTF,\nit cannot use fentry/fexit BPF programs which use BTF.\n\n# Debugging bpftune behaviour\n\nbpftune is run via service mostly, so examining logs in /var/log/messages\ncan help here.  However by default logging is only informational, so\nagain debug messaging would have to be enabled by specifying the -d\nflag in /lib/systemd/system/bpftune.service and restarting.\n\nThe -d flag is passed through to bpf programs also, so \n\n```\n$ sudo cat /sys/kernel/debug/tracing/trace_pipe\n```\nwill show any bpftune_debug() messages emitted by BPF programs.\n\n# Checking bpf program attachment\n\n```\n$ sudo bpftool prog\n```\n\n...will show the bpf programs currently loaded; most bpftune\nprograms will begin with bpftune_*\n\n```\n$ sudo bpftool map\n```\n...will show associated maps, and these can be dumped via\n\n```\n$ sudo bpftool map dump id <id of map>\n```\n\n...where the id is the number to the left of the \":\"; i.e.\n\n```\n$ sudo bpftool map\n...\n149: array  name net_buff.bss  flags 0x400\n\tkey 4B  value 49B  max_entries 1  memlock 8192B\n\tbtf_id 269\n...\n$ sudo bpftool map dump id 149\n[{\n        \"value\": {\n            \".bss\": [{\n                    \"drop_count\": 0\n                },{\n                    \"drop_interval_start\": 0\n                },{\n                    \"flow_limit_cpu_bitmap\": 0\n                },{\n                    \"bpftune_learning_rate\": 4\n                },{\n                    \"tuner_id\": 6\n                },{\n                    \"bpftune_pid\": 129053\n                },{\n                    \"bpftune_init_net\": 0\n                },{\n                    \"debug\": true\n                }\n            ]\n        }\n    }\n]\n```\n\n# General problem or tuner-specific problem?\n\nbpftune + libbpftune implement the general BPF load/attach and\nevent handling, so bugs in these areas will likely be found\nthere.  Tuners consist of the tuner_name.c/tuner_name.bpf.c.\n\nCheck the init()/fini() methods for setup/teardown issues,\nevent_handler() for event handling issues.\n\nSee ./CONTRIBUTING.md for more details on bpftune internals.\n\n# Running tests\n\nTests can be a useful way to isolate tuner-specific issues.\n\nSee ./TESTING.md to explore what tests are available.\n"
        },
        {
          "name": "buildrpm",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample_tuner",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}