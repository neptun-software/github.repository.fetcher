{
  "metadata": {
    "timestamp": 1736710084495,
    "page": 707,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Lora-net/LoRaMac-node",
      "stars": 1901,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2822265625,
          "content": "lst/\r\nobj/\r\nbin/\r\nbuild/\r\ntmp/\r\n*.bin\r\n.kdev4\r\n*.log\r\n*.dep\r\n*.uvgui.*\r\n*.uvgui_*.bak\r\n*.uvguix.*\r\n*.uvguix_*.bak\r\n*_uvopt.bak\r\n*_uvoptx.bak\r\n*_uvproj.bak\r\n*_uvprojx.bak\r\n*.ctx\r\n*.dbi\r\n*.xdb\r\n*.svn\r\n*.pbxproj\r\n*.cogui\r\n*.comarker\r\n.directory\r\n.vscode/launch.json\r\n.cmaketools.json\r\nipch/\r\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.3076171875,
          "content": "[submodule \"src/radio/lr1110/lr1110_driver\"]\n\tpath = src/radio/lr1110/lr1110_driver\n\turl = https://github.com/Lora-net/lr1110_driver.git\n[submodule \"src/peripherals/atecc608a-tnglora-se/cryptoauthlib\"]\n\tpath = src/peripherals/atecc608a-tnglora-se/cryptoauthlib\n\turl = https://github.com/MicrochipTech/cryptoauthlib\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 50.322265625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## LoRaWAN pre-certification results\n\nPlease refer to [Releases pre-certification-results](https://github.com/Lora-net/LoRaMac-node/wiki/releases-pre-certification-results) document for further information.\n\n## [Unreleased]\n\n## [4.7.0] - 2022-12-09\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.4\" and \"LoRaWAN specification 1.1.0 + FCntDwn ERRATA\" with \"LoRaWAN Regional Parameters 2-1.0.3\"\n- GitHub reported issues corrections.\n\n### Known limitations\n\n- SAMR34 platform does not implement NVM storage functionality. This is a requirement for LoRaWAN versions greater or equal to 1.0.4.\n  No work on this subject is forseen by the maintainers. Implementation proposals are welcome.\n\n### Added\n\n- Trigger NVM update on `MacGroup2.DutyCycleOn` change\n- Configure radio sync word upon state restoration from NVM\n- Added missing return status initialization for Class A\n- Added a check for `GroupId` in order to avoid out of bounds access\n- Make LBT RSSI free channel threshold and carrier sense time (CST) parameters configurable\n- Signal NVM data change in `LoRaMacMc*` functions\n- Teach `LoRaMacIsBusy` return false if the MAC is stopped\n- Added support for new release of ARIB STD-T108 Ver1.4 under AS923 region\n- Support LoRaWAN 1.1 with ATECC608A/B secure element\n- Added a function to reset the stack internal state machine\n- Added an option for MAC commands to verify against an explicit confirmation\n- Added a check to verify that `SystemMaxRxError` provided value is in the range 0..500 ms\n\n### Changed\n\n- Updated regions implementation to regional parameters RP2-1.0.3\n- Move AdrAckLimit and AdrAckDelay to NVM `MacGroup2`\n- Refactored and improved the way the duty-cycle is managed\n\n### Fixed\n\n- Fixed class B multicast handling in `LoRaMacClassBProcessMulticastSlot()`\n- Restore `RegionGroup2` in `RestoreNvmData`\n- Fix a duty cycle related deadlock in `ScheduleTx`\n- Fixed where `LastDownFCnt` update takes place for LoRaWAN 1.1.x\n- Fixes for class C activation and deactivation\n- Don't `memset` the TX/RX buffer when radio is set to receive mode\n- Fixed usage of wrong API for general purpose keys\n- Fixed and refactored JoinReq, `ReJoinType0Req`, `ReJoinType1Req`, `ReJoinType2Req` handling\n- Fixed Rx windows timer handling\n- Fixed FUOTA fragmentation implementation\n- Fixed time credits check as proposed\n- Fixed potential buffer overflow in `ProcessRadioRxDone` - [Security](###security)\n- Applied the proposed fix for the CRC check of empty `struct`\n- Fixed inconsistent handling of undefined callbacks\n- Fixed `HardFault_Handler` for Cortex-M0 targets\n- Fixed ABP join handling to be similar to OTAA join handling\n- Fixed issue with RX2 data rate in case of 0x0F for `RxParamSetupReq` and `JoinAccept`\n\n### Removed\n\n- Removed useless `FOptsLen` filed check\n- Removed unused `ACTIVE_REGION` pre-processing check\n\n### Security\n\n- Security breach found by Simon WÃ¶rner(@SWW13) please refer to security advisory - [security advisory - CVE-2022-39274](https://github.com/Lora-net/LoRaMac-node/security/advisories/GHSA-7vv8-73pc-63c2)\n\n## [4.6.0] - 2022-01-11\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.4\" and \"LoRaWAN specification 1.1.0 + FCntDwn ERRATA\" with \"LoRaWAN Regional Parameters 2-1.0.1\"\n- GitHub reported issues corrections.\n\n### Known limitations\n\n- SAMR34 platform does not implement NVM storage functionality. This is a requirement for LoRaWAN versions greater or equal to 1.0.4.\n  No work on this subject is forseen by the maintainers. Implementation proposals are welcome.\n\n### Added\n\n- Added NbTrans default value reset under JoinAccept processing\n- Added missing Class B certification commands\n- Added missing `classBParams.NetworkActivation` variable initialization\n- Added Class B remote multicast setup support\n- Added data rate validation to the join accept message handling\n- Added channel id limits verification to DlChannelReq handling\n\n### Changed\n\n- Changed `LmHandlerDeviceTimeReq` API to be publicly accessible\n- Changed improved the way `USE_LRWAN_1_1_X_CRYPTO` pre-processing directive is used\n- Changed improved the way `JoinNonce` is checked\n\n### Fixed\n\n- Fixed first beacon acquisition after receiving a `DeviceTimeAns`.\n- Fixed `LmHandlerParams_t` `PingSlotPeriodicity` field type from `bool` to `uint8_t`\n- Fixed i2c.h to include \"utilities.h\".\n- Fixed VSCode `periodic-uplink-lpp` project default LoRaWAN class selection\n- Fixed SX127x FSK transmission when radio current operating mode is RX.\n\n### Removed\n\n- Removed no more needed `MLME_SCHEDULE_UPLINK` notification\n\n## [4.5.2] - 2021-05-28\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.4\" and \"LoRaWAN Regional Parameters 2-1.0.1\"\n- GitHub reported issues corrections.\n\n### Known limitations\n\n- SAMR34 platform does not implement NVM storage functionality. This is a requirement for LoRaWAN versions greater or equal to 1.0.4.\n  No work on this subject is forseen by the maintainers. Implementation proposals are welcome.\n\n### Added\n\n- Added possibility to override periodic-uplink-lpp example `LORAWAN_DEFAULT_CLASS`\n- Added I2C driver support for B-L072Z-LRWAN1 and Nucleo platforms to the build system\n- Added battery voltage and MCU temperature reading functions implementation for Nucleo platforms\n- Added a default value for `Request->ReqReturn.DutyCycleWaitTime` to ensure that a valid value is always returned\n- Added SX126x `REG_RX_GAIN` and `REG_TX_MODULATION` to the radio registers retention list\n- Added SX126x missing registers definitions\n- Added radio image calibration enforcement after radio initialization and radio sleep cold start.\n- Added possibility to query minimal Tx data rate\n\n### Changed\n\n- Updated ADC driver based on en.en-st-stm32cubeide examples\n- Changed improved the way `LmHandler` handles the packages transmissions\n- Changed certification `OnTxPeriodicityChanged` callback implementation in order to directly apply the requested change\n- Changed the `LmHandler` initialization to apply user default data rate\n- Changed SX1272 and SX1276 FSK FIFO threshold from 15 to 31 in order to give more time for the MCU to make other processing tasks\n- Changed the way `IrqFired` global variable is handled by `RadioIrqProcess`\n- Changed the place of call to `TimerStop( &RxTimeoutTimer )` on `RadioIrqProcess` implementation\n- Changed utilities.h `SUCCESS`/`FAIL` definition by an enumeration `LMN_STATUS_OK`/`LMN_STATUS_ERROR`\n\n### Fixed\n\n- Fixed Null pointer exception when CN470 region was selected\n- Fixed `src/system/gps.c` HasFix variable type from `double` to `bool`\n- Fixed Class C downlink handling\n- Fixed I2C driver for L476\n- Fixed re-transmissions handling when ClassB or ClassC downlink is received\n- Fixed certification `FPort224DisableReq` command NVM handling\n- Fixed Class B & C confirmed downlink acknowledge management when `CLASS_B_C_RESP_TIMEOUT` expires\n- Fixed an issue when receiving downlinks in class C window during a class A procedure\n- Fixed SX126x and LR1110 driver IrqFired variable management\n- Fixed `LmhpCompliance.c` `periodicity` array size computation\n- Fixed join back-off by not storing band usage on the NVM memory.\n- Fixed `LoRaMacMibGetRequestConfirm` `MIB_SE_PIN` handling\n- Fixed ping-slot frequency to take in account the `AS923_FREQ_OFFSET_HZ` parameter\n- Fixed fragmentation loop variable type in order to allow more than 255 fragments\n- Fixed `RtcMs2Tick` conversion on SAMR34\n- Fixed compiling issue when RU864 region is selected\n- Fixed `MLME_SCHEDULE_UPLINK` handling.\n\n### Removed\n\n- Removed STM32 platforms system wake up time calibration\n\n## [4.5.1] - 2021-01-18\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.4\" and \"LoRaWAN Regional Parameters 2-1.0.1\"\n- GitHub reported issues corrections.\n\n### Fixed\n\n- Fixed compiling issues\n\n## [4.4.7] - 2021-01-18\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.3\" and \"LoRaWAN Regional Parameters v1.0.3revA\"\n- **Release 4.4.7 is an hotfix of 4.4.6 and is the last one supporting \"LoRaWAN specification 1.0.3\"**\n\n### Changed\n\n- Changed examples GitHub version to 4.4.7\n\n### Fixed\n\n- Fixed compiling issues when KR920 or RU864 regions are selected\n- Fixed compiling issues for `fuota-test-01` example\n\n## [4.5.0] - 2020-12-18\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.4\" and \"LoRaWAN Regional Parameters 2-1.0.1\"\n- GitHub reported issues corrections. Please refer to [Release Version 4.5.0](https://github.com/Lora-net/LoRaMac-node/milestone/5)\n\n### Added\n\n- Added implementation of LoRaWAN 1.0.4 changes\n- Added implementation for new Certification protocol specification\n- Added GitHub repository and firmware examples version definitions\n\n## [4.4.6] - 2020-12-18\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.3\" and \"LoRaWAN Regional Parameters v1.0.3revA\"\n- GitHub reported issues corrections. Please refer to [Release Version 4.4.6](https://github.com/Lora-net/LoRaMac-node/milestone/8)\n- **Release 4.4.6 is the last one supporting \"LoRaWAN specification 1.0.3\"**\n\n### Changed\n\n- Refactored MAC layer and examples Non Volatile Memory data handling\n- Changed `NewChannelReq` amd `DlChannelReq` handling to ignore command for `AU915`, `CN470` and `US915` regions\n- Updated behavior of `SX126xSetLoRaSymbNumTimeout` to round up the timeout to the nearest possible number of symbol.\n- Changed radio drivers floating point to integer computations\n- Improved `GetNextLowerTxDr` function implementation.\n- Changed SX1272 and SX1276 FSK FIFO handling by using `FifoLevel` IRQ instead of `FifoEmpty` IRQ  \n  **WARNING** *DIO1 IRQ MCU pin detection has changed from `RISING` to `RISING_FALLING` edge.*\n- Changed IMST boards default power source to `USB_POWER`\n\n### Fixed\n\n- Fixed certification test application handling\n- Fixed `ping-pong` and `rx-sensi` examples to use the right `FSK_BANDWIDTH` and `FSK_AFC_BANDWIDTH` parameters\n- Fixed one byte transmissions over I2C\n- Fixed `RegionIN865RxParamSetupReq` `DrOffset` verification\n- Fixed STM platforms IRQ handlers when using a C++ compiler\n- Fixed an issue where the Join back off algorithm wasn't being applied when the duty-cycle enforcement was OFF\n- Fixed `AU915_MAX_RX1_DR_OFFSET` value to 5 instead of 6\n\n### Removed\n\n- Removed ClassA, ClassB and ClassC examples.\n\n## [4.5.0-rc.1] - 2020-11-24\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.4\" and \"LoRaWAN Regional Parameters 2-1.0.1\"\n- GitHub reported issues corrections. Please refer to [Release Version 4.5.0](https://github.com/Lora-net/LoRaMac-node/milestone/5)\n\n### Added\n\n- Added implementation of LoRaWAN 1.0.4 changes\n- Added implementation for new Certification protocol specification\n- Added GitHub repository and firmware examples version definitions\n\n### Changed\n\n- Changed IMST boards default power source to USB_POWER\n\n### Fixed\n\n- Fixed an issue where the Join back off algorithm wasn't being applied when the duty-cycle enforcement was OFF.\n- Fixed `AU915_MAX_RX1_DR_OFFSET` value to 5 instead of 6\n\n### Removed\n\n- Removed NvmCtxCallback calls as they should only be done when a modification happens.\n- Removed ClassA, ClassB and ClassC examples.\n\n## [4.4.5] - 2020-10-14\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.3\" and \"LoRaWAN Regional Parameters v1.0.3revA\"\n- GitHub reported issues corrections. Please refer to [Release Version 4.4.5](https://github.com/Lora-net/LoRaMac-node/milestone/7)\n\n### Added\n\n- Added to `FRAGMENTATION_FRAG_SESSION_SETUP_REQ` checks which verify `FragNb` and `FragSize` validity.\n- Added missing call to `SX126xSetOperatingMode` on `SX126xSetTxContinuousWave` and `SX126xSetTxInfinitePreamble` functions\n- Added new specific board API to initialize the RF switch (`SX126xIoRfSwitchInit`)\n- Add to AS923 and KR920 regions a definition for the Rx bandwidth to be used while executing the LBT algorithm\n- Added support for other AS923 channel sub plan groups.\n- Added FPort filtering to loramac handler packages.\n- Added missing NVM update notifications\n\n### Changed\n\n- Refactored function `RegionXXInitDefaults`. Fixes an issue on US based bands where the channels mask was not being reset.\n- Changed hard coded `JoinAccept` max payload size (33) by `LORAMAC_JOIN_ACCEPT_FRAME_MAX_SIZE` definition.\n- Moved radio operating mode management to specific board implementation\n- Changed radio `IsChannelFree API` in order to provide reception bandwidth\n- AS923 default downlink dwell time setting changed to disabled\n- Back port 1.0.4 region implementation improvements\n- Changed `RegionCommonComputeSymbolTimeLoRa`, `RegionCommonComputeSymbolTimeFsk` and `RegionCommonComputeRxWindowParameters`\n  API implementations to use integer divisions instead of double division.\n- Changed DeriveSessionKey10x and DeriveSessionKey11x functions API (Removed pointer based variable usage)\n\n### Fixed\n\n- Fixed `SX126xSetLoRaSymbNumTimeout` to call the workaround only if the number of symbols is equal to or higher than 64.\n- Fixed IAR C++ compiler warnings\n- Fixed missing `{` after `extern \"C\"` in `cmac.h` file\n- Fixed `FragSessionStatusAns` message construction for `Received&index` field\n- Fixed `LoRaMacCryptoHandleJoinAccept` function `DevNonce`, `RJCount0` and `RJCount1` handling.\n- Fixed nonce variable declaration\n- Fixed `LoRaMacCrypto.c` conditional pre-processing.\n- Fixed missing `Rx1Frequency` reset for dynamic channel plans\n- Applied Japan ARIB restrictions to the `AS923_1_JP` sub plan\n- Applied Regional Parameters 1.0.3.revA ERRATA note concerning the ClassB beacon format\n- Fixed SAMR34 compiling issue when `USE_RADIO_DEBUG` directive is defined\n- Fixed `SX126xClearIrqStatus` call to only clear read flags\n- Fixed GFSK bandwidth handling for SX126x and LR1110 radios.\n- Fixed version handling for MC root keys derivation\n- Fixed Class B initialization.\n- Fixed duty-cycle implementation\n\n## [4.4.4] - 2020-05-26\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.3\" and \"LoRaWAN Regional Parameters v1.0.3revA\"\n- GitHub reported issues corrections. Please refer to [Release Version 4.4.4](https://github.com/Lora-net/LoRaMac-node/milestone/6)\n\n### Added\n\n- Added the possibility to setup multicast channels locally\n- Added new `SecureElementProcessJoinAccept` API to the `secure-element.h`\n- Added possibility to select the secure-element to be used as well as to select if it is pre-provisioned or not\n- Added support for LR1110 radio\n- Added support for LR1110 crypto-engine to be used as secure-element\n- Added support for ATECC608A-TNGLORA secure-element\n- Added `LoRaMacDeInitialization` API to ease dynamic region change\n- Added possibility to query implemented versions of the LoRaWAN MAC layer and Regional Parameters specifications\n- Added `MOTE_MAC_TX_PARAM_SETUP_ANS` as sticky MAC command\n- Added a filter to handle multicast downlinks exceptions\n- Added `CHANGELOG.md` file\n\n### Changed\n\n- Updated examples to use OTAA activation method by default\n- Updated `LmhpFragmentation` implementation\n- Updated Radio APIs to handle 32-bit register addresses\n- Changed SX126x driver to only process a received packet when there is no CRC error\n- Moved `Commissioning.h` files to a single one located under `src/apps/LoRaMac/common` directory\n- Updated `Radio.TimeOnAir` API in order to be independent of the current hardware settings\n- Moved keys definition and management to the secure-element implementation\n- Moved device identity to secure-element `se-identity.h` file\n- Changed support of SAML21 platform by SAMR34 platform\n- Changed the `MlmeRequest` and `McpsRequest` APIs to report back when the next transmission is possible\n- Changed `ResetMacParameters` to perform a complete re-initialization of the regional layer after processing the join accept\n- Updated the implementation to verify the MAC commands size\n- Changed the way the duty-cycle management is handled\n\n### Removed\n\n- Removed the LoRaWAN keys display on serial terminal\n- Removed `GEN_APP_KEY` support as it is equivalent to LoRaWAN 1.1.x `APP_KEY`\n- Removed tables definition for repeater support. LoRa-Alliance will provide details on these tables usage in future versions\n- Removed Changelog chapter from `readme.md` file\n\n### Fixed\n\n- Fixed `SX126xGetRandom` API implementation\n- Fixed SX126x driver missing call to `RadioStandby` in LoRa modem case inside `RadioSetRxConfig` API\n- Fixed SX126x driver `LoRaSymbNumTimeout` handling\n- Fixed soft-se/cmac for misaligned 32-bit access\n- Fixed ping-pong and rx-sensi projects for packets with sizes bigger than 64 bytes handling\n- Fixed missing switch case `PHY_BEACON_CHANNEL_FREQ` for *AU915* region\n- Fixed default data rates for Class B beacon and ping-slots for *AU915* region\n- Fixed join request limitation due to duty cycle restrictions\n- Fixed `SRV_MAC_DEVICE_TIME_ANS`, `SRV_MAC_PING_SLOT_INFO_ANS` and `SRV_MAC_BEACON_TIMING_ANS` processing to be executed only if corresponding MLME request is queued\n- Fixed issue where the stack could get stuck in MCPS busy state after MLME Device Time Request\n- Fixed duty-cycle enforcement by disabling it for *IN865* region\n- Fixed potential issue where the `FCntUp` counter could sometimes be incremented by 2 instead of 1\n- Fixed wrong beacon time-on-air calculation\n\n### Security\n\n- Security breach found by Tencent Blade Team please refer to [security advisory - CVE-2020-11068](https://github.com/Lora-net/LoRaMac-node/security/advisories/GHSA-559p-6xgm-fpv9)\n\n## [4.4.3] - 2019-12-17\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.3\" and \"LoRaWAN Regional Parameters v1.0.3revA\"\n- GitHub reported issues corrections. Please refer to [Release Version 4.4.3](https://github.com/Lora-net/LoRaMac-node/milestone/4)\n\n## [4.4.2] - 2019-07-19\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.3\" and \"LoRaWAN Regional Parameters v1.0.3revA\"\n- GitHub reported issues corrections. Please refer to [Release Version 4.4.2](https://github.com/Lora-net/LoRaMac-node/milestone/2)\n\n### Added\n\n- Added new refactored application examples\n- Added LoRa-Alliance defined application layer protocols support. Only FUOTA test scenario 01 required features are currently implemented  \n  - \"Clock Synchronization\" package\n  - \"Fragmented data block transport\" package\n  - \"Remote multicast setup\" package\n- Added a NVM context management module. (Disabled by default)\n- Added secure-element support\n- Added B-L072Z-LRWAN1 platform support\n- Added NucleoL476 platform support\n- Added NucleoL476 platform support\n- Added IMST new platforms\n- Added *RU864* region support\n- Added ClassB support\n- Added a callback to notify the upper layer to call `LoRaMacProcess` function\n- Added support for RxC windows (ClassC) required by the application layer protocols\n\n### Changed\n\n- Examples application refactoring plus the addition of the application status display on the serial port. (921600-8-N-1)\n- Refactored `timer.c/h`, `rtc-driver.c/h` and added a `systime.c/h` module\n- Functions in ISR context have been moved to main context\n- Changed `BoardDisableIrq` and `BoardEnableIrq` functions by `CRITICAL_SECTION_BEGIN` and `CRITICAL_SECTION_END`\n  respectively\n- Heavily refactored the `LoRaMac.c` and `LoRaMac.h` implementation\n- Changed multicast channels handling according to the application layer protocols\n\n### Removed\n\n- Removed SensorNode platform support\n- Removed MoteII platform support\n- Removed LoRaMote platform support\n- Removed *US915-Hybrid* region support\n\n## Fixed\n\n- Applied SX1272 and SX1276 radios errata note 3.1 to the radio drivers implementation\n- Fixed `printf` and `scanf` functions when GCC is used as compiler\n\n## [4.4.1] - 2018-03-07\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.2\" and \"LoRaWAN Regional Parameters v1.0.2rB\"\n- GitHub reported issues corrections. Please refer to [Release Version 4.4.1](https://github.com/Lora-net/LoRaMac-node/milestone/1)\n\n### Added\n\n- Added SX126x radio support\n- Added NucleoL073 and NucleoL152 board platforms support\n- Added Microchip/Atmel SAML21 Xplained Pro hardware platform support\n- Added CMAKE build system support\n\n### Removed\n\n- Removed CoIDE projects support\n- Removed Keil projects support\n\n## [4.4.0] - 2017-09-08\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.2\" and \"LoRaWAN Regional Parameters v1.0.2rB\"\n- GitHub reported issues corrections\n\n### Added\n\n- Added SX126x radio support\n- Added NucleoL073 and NucleoL152 board platforms support\n- Added Microchip/Atmel SAML21 Xplained Pro hardware platform support\n- Added CMAKE build system support\n- Added the support for all \"LoRaWAN Regional Parameters v1.0.2rB\" document defined regions\n\n### Changed\n\n- Changed radio driver to perform the LBT carrier sense continuously for a given period of time\n- Changed implementation to support 1.0.2 specification additions\n\n## [4.3.2] - 2017-04-19\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.2\"\n- GitHub reported issues corrections\n\n### Added\n\n- Added an algorithm to automatically compute the Rx windows parameters. (Window `symbolTimeout` and `Offset` from\n downlink expected time)\n- Added a workaround to reset the radio in case a `TxTimeout` occurs\n- Added newly defined `TxCw`(Tx Continuous Wave) certification protocol command\n\n### Changed\n\n- Changed radio driver to perform the LBT carrier sense continuously for a given period of time\n- Changed implementation to support 1.0.2 specification additions\n- Changed FSK modem handling to use the provided `symbolTimeout` (1 symbol equals 1 byte) when in `RxSingle` mode\n- Changed `GpioMcuInit` function to first configure the output pin state before activating the pin\n- Changed the `AdrAckCounter` handling as expected by the test houses\n- Relocate parameter settings from `ResetMacParameters` to the initialization\n- Changed MAC layer indications handling\n\n### Removed\n\n- Removed useless `LoRaMacPayload` buffer\n\n### Fixed\n\n- Fixed an overflow issue that could happen with `NmeaStringSize` variable\n- Fixed an issue where the node stopped transmitting\n\n## [4.3.1] - 2017-02-27\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.1\"\n- GitHub reported issues corrections\n\n### Added\n\n- Added MoteII platform based on the IMST module iM881A (STM32L051C8)\n- Added NAMote72 platform\n- Added TxCw (Tx continuous wave) LoRaWAN compliance protocol command\n- Added TxContinuousWave support to the radio drivers\n- Added region CN470 support\n\n### Changed\n\n- Updated the MAC layer in order to be LoRaWAN version 1.0.1 compliant (Mainly US915 bug fixes)\n- Updated SensorNode projects according to the new MCU reference STM32L151CBU6. Bigger memories\n- Updated ST HAL drivers\n  - STM32L1xx_HAL-Driver : V1.2.0\n  - STM32L0xx_HAL_Driver : V1.7.0\n\n### Removed\n\n- Removed api-v3 support from the project\n\n### Fixed\n\n- Fixed compliance test protocol command 0x06 behavior\n- Fixed US band in order to pass the LoRaWAN certification\n\n## [4.3.0] - 2016-06-22\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.1\"\n- GitHub reported issues corrections\n\n### Added\n\n- Added radio `RX_TIMEOUT` irq clear into the irq handler\n- Added retransmission back-off\n- Added debug pin support to LoRaMote platform\n- Added a function to verify the RX frequency of window 2 for US band\n\n### Changed\n\n- Applied to all application files the certification protocol change for LoRaWAN 1.0.1 compliance tests  \n  **REMARK**: api-v3 application files aren't updated\n- Update of the STM32L0 HAL to version 1.6.0\n- Consolidated the line endings across all project files\n  Windows line endings has been choose for almost every file\n- Updated maximum payload size for US band\n- Update data rate offset table for US band\n- Make MAC commands sticky\n- Updated and improved MPL3115 device driver\n- RTC driver major update\n\n### Removed\n\n- Removed the end less loop from `HAL_UART_ErrorCallback`\n- Remove the `TxPower` limitation for US band on `LoRaMacMibSetRequestConfirm` function. The power will be limited\n  anyway when the `SendFrameOnChannel` functions is called\n\n### Fixed\n\n- Issue(#81): Bug fix in function `LoRaMacMlmeRequest` case `MLME_JOIN`. Function will return `LORAMAC_STATUS_BUSY` in\n  case the MAC is in status `MAC_TX_DELAYED`\n- Issue(#83): Bug fix in parameter validation\n- Issue(#84): Fix issue of `CalibrateTimer` function\n- Applied pull request #87\n- Issue(#88): Bug fix in function `PrepareFrame` where repeated MAC commands were not handled correctly\n- Fixed `OnRadioRxDone` Node now drops frames on port 0 with fOpts > 0\n- Fixed `OnRadioRxDone` Node now receives frames with fOpts > 0 when no payload is present\n\n## [4.2.0] - 2016-05-13\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.0\"\n- GitHub reported issues corrections\n\n### Added\n\n- Added a definition for the LoRaWAN device address. Add an IEEE_OUI for the LoRaWAN device EUI\n- Added a definition for the default data rate\n- Introduce individual MIN and MAX datarates for RX and TX\n- Added the possibility to set and get the `ChannelsDefaultDatarate`\n- Introduce a new status `MAC_RX_ABORT`. Reset `MAC_TX_RUNNING` only in `OnMacStateCheckTimerEvent`\n\n### Changed\n\n- Update STM32L1xx_HAL_Driver version to 1.5. Update related drivers and implementations accordingly  \n  **REMARK**: This change implies that the time base had to be changed from microseconds to milliseconds\n- Optimize radio drivers regarding FSK PER\n- Increase RTC tick frequency for higher resolution\n- Update the radio wake up time\n- Update channel mask handling for US915 hybrid mode to support any block in the channel mask\n- Optimization of the RX symbol timeout\n- Replace definition `LORAMAC_DEFAULT_DATARATE` by `ChannelsDefaultDatarate` in `LoRaMacChannelAdd`\n- Accept MAC information of duplicated, confirmed downlinks\n\n### Fixed\n\n- Fixed the frequency check condition for // ERRATA 2.1 - Sensitivity Optimization with a 500 kHz Bandwidth\n- Fixed an issue when calling `SX127xInit` function more than once\n- Issue(#66) correction of functions `SX1276SetOpMode` and `SX1272SetOpMode`\n- Issue(#68): Fix for low level RF switch control\n- Issue(#56) correction\n- Issue(#63) correct the maximum payload length in RX mode\n- Fixed Tx power setting loss for repeated join requests on US band\n- Issue(#59): Add the possibility to set the uplink and downlink counter\n- Issue(#72): Fix of possible array overrun in `LoRaMacChannelRemove`\n- Issue(#74): Drop frames with a downlink counter difference greater or equal to `MAX_FCNT_GAP`\n\n## [4.1.0] - 2016-03-10\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.0\"\n- GitHub reported issues corrections\n- This version has passed all mandatory LoRa-Alliance compliance tests  \n  *One of the optional tests is unsuccessful (FSK downlinks PER on Rx1 and Rx2 windows) and is currently under investigation*\n\n### Added\n\n- Add missing documentation about `MIB_REPEATER_SUPPORT`. (Issue #42)\n- Add a new `LoRaMacState` to allow adding channels during TX procedure. (Issue #43)\n- Add a new function `PrepareRxDoneAbort` to prepare a break-out of `OnRadioRxDone` in case of an error\n\n### Changed\n\n- Application state machine. Relocate setting sleep state and update the duty cycle in compliance test mode\n- Changed `TimerHwDelayMs` function to be re-entrant\n- Rename attribute `nbRetries` to `NbTrials` in structure `McpsReqConfirmed_t`. (Issue #37)\n- Updated implementation of `SetNextChannel`. Added enabling default channels in case of join request. (Issue #39)\n- Relocate the activation of `LoRaMacFlags.Bits.McpsInd` in `OnRadioRxDone`\n- Reset status of `NodeAckRequested` if we received an ACK or in case of timeout\n- Improved and corrected `AdrNextDr` function\n\n### Removed\n\n- Removed support for Raisonance Ride7 IDE (Reduces the amount of work to be done at each new release)\n- Removed the Bleeper-72 and Bleeper-76 platforms support as these are now deprecated\n- Removed additional EU868 channels from the LoRaWAN implementation files. GitHub (Issue #49)  \n  The creation of these additional channels has been moved to the application example\n\n### Fixed\n\n- Fixed `TimerIrqHandler`. Now, it is possible to insert timers in callback\n- Fixed FSK modem packets bigger than 64 bytes handling (Issue #36)\n- Fixed default channels activation in case all others are disabled. (Issue #39)\n- Fixed default channel setting in case none is enabled\n- Fixed `SRV_MAC_NEW_CHANNEL_REQ` MAC command by adding a fix to the `macIndex` variable on US915 band\n- Start the MacStateCheckTimer in OnRxDone and related error cases with a short interval to handle events promptly. (Issue #44)\n\n## [4.0.0] - 2015-12-18\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.0\"\n- GitHub reported issues corrections\n\n### Added\n\n- LoRaWAN certification protocol implementation\n\n### Changed\n\n- STACKFORCE new API integration\n- Reverse the EUIs arrays in the MAC layer\n\n## [3.4.1] - 2015-11-06\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.0\"\n- GitHub reported issues corrections\n\n### Fixed\n\n- Fixed downlink counter roll over management when several downlinks were missed\n- Fixed the Radio maximum payload length management. Radio was filtering received frames with a length bigger than the transmitted one\n- Applied Pull request #22 solution proposition\n\n## [3.4.0] - 2015-10-30\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.0\"\n- GitHub reported issues corrections\n\n### Added\n\n- Added TimerStop function calls to each timer event callback\n- Added some missing variables casts. Helps on code portability\n- Added const variable attribute when necessary to functions prototypes\n- Added `LORAMAC_MIN_RX1_DR_OFFSET` and `LORAMAC_MAX_RX1_DR_OFFSET` definitions to `LoRaMac-board.h`. Can be different\n upon used PHY layer\n- Added the limitation of output power according to the number of enabled channels for US915 band\n- Added the limitation of the applicative payload length according to the data rate. Does not yet take in account the\n MAC commands buffer. (Issue #15)\n\n### Changed\n\n- Changed all applications in order to have preprocessing definitions on top of the files and added relevant comments\n- Applications LED control is no more done into the timer callback functions but instead on the main while loop\n- Changed types names for `stdint.h` names. Helps on code portability\n- Renamed `rand` and `srand` to `rand1` and `srand1`. Helps on code portability\n- Moved `ID1`, `ID2` and `ID3` definition from `board.h` to `board.c`, `usb-cdc-board.c` and `usb-dfu-board.c`\n- Renamed `BoardMeasureBatterieLevel` to `BoardGetBatteryLevel`\n- Added `SetMaxPayloadLength` API function to SX1272 and SX1276 radio drivers\n- Changed the name of Radio API Status function to `GetStatus`\n- Changed AES/CMAC types names for `stdint.h` names. Helps on code portability (Issue #20)\n- Moved `__ffs` function from `utilities.h` to `spi-board.c`. This function is only used there\n- Added support for the US915 band (Normal mode and hybrid mode. Hybrid mode is a temporary configuration up until servers support it automatically) (Issue #16)\n- Replaced the usage of `__IO` attribute by `volatile`\n- Renamed `LoRaMacEvent_t` into `LoRaMacCallbacks_t` and added a function pointer for getting battery level status\n- Renamed `LoRaMacSetDutyCycleOn` into `LoRaMacSetTestDutyCycleOn`\n- Renamed `LoRaMacSetMicTest` into `LoRaMacTestSetMic`\n- Increased the PHY buffer size to 250\n- `LoRaMacEventInfo.TxDatarate` now returns LoRaWAN data rate (DR0 -> DR7) instead of (SF12 -> DF7)\n- `LoRaMac-board.h` now implements the settings for the PHY layers specified by LoRaWAN 1.0 specification. (EU433, CN780, EU868, US915) (Issue #19)\n\n### Removed\n\n- Removed `NULL` definition from `board.h`\n- Removed the definition of `RAND_SEED`. It has been replaced by a function named `BoardGetRandomSeed`\n- Removed `fputc` function redefinition from `Utilities.c`\n- Removed the usage of `PACKED` attribute for data structures\n- Removed `IsChannelFree` check on `LoRaMacSetNextChannel` function. LoRaWAN is an ALHOA protocol. (Pull request #8)\n\n### Fixed\n\n- Fixed timings comments. Timing values are most of the time us based\n- Fixed and simplified the downlink sequence counter management\n- Fixed channel mask management for EU868 band\n- Fixed `LoRaMacPrepareFrame` function behavior when no applicative payload is present\n- Fixed `MacCommandBufferIndex` management. (Issue #18)\n\n## [3.3.0] - 2015-08-07\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.0\"\n- GitHub reported issues corrections\n\n### Added\n\n- Added the support for LoRaWAN Class C devices\n- Added the possibility to change the channel mask and number of repetitions trough SRV_MAC_LINK_ADR_REQ command when ADR is disabled\n\n### Changed\n\n- Increased FSK SyncWord timeout value in order to listen for longer time if a down link is available or not. Makes FSK downlink more reliable\n- Increased the UART USB FIFO buffer size in order to handle bigger chunks of data\n- Renamed data rates as per LoRaWAN specification\n- Changed confirmed messages function to use default datarate when ADR control is off\n- After a Join accept the node falls back to the default datarate. Enables the user to Join a network using a different datarate from its own default one\n- Moved the MAC commands processing to the right places. FOpts field before the Payload and Port 0 just after the decryption. (Pull request #9)\n\n### Fixed\n\n- Implemented the radios errata note workarounds. SX1276 errata 2.3 \"Receiver Spurious Reception of a LoRa Signal\" is not yet implemented\n- Fixed handling of the MAC commands which was done incorrectly the condition to verify the length of the buffer has changed from `<` to `<=`\n- Fixed `Rx1DrOffset` management. In previous version DR1 was missing for all offsets\n- Fixed default FSK channel frequency\n- Fixed a firmware freeze when one of the following situations arrived in `OnRxDone` callback: bad address, bad MIC, bad frame. (Pull request #10)\n- Fixed weird conditions to check data rate on MAC command `SRV_MAC_NEW_CHANNEL_REQ` (Pull request #7)\n- Fixed join accept message handling to be ignored if already joined (Pull request #6)\n- Fixed channel index verification should use OR on `SRV_MAC_NEW_CHANNEL_REQ` command (Pull request #5)\n- Fixed the CFList management on JoinAccept. The `for` loop indexes were wrong. (Pull request #4)\n- Fixed AES key size (Pull request #3)\n\n## [3.2.0] - 2015-04-30\n\n### General\n\n- Release based on \"LoRaWAN specification 1.0.0\"\n- GitHub reported issues corrections\n\n### Added\n\n- Added the support of packed structures when using IAR tool chain\n- Added a function to get the time in us\n- Added a typedef for time variables (TimerTime_t)\n- Added a function that returns if the GPS has a fix or not\n- Added missing MAC commands and updated others when necessary\n  - Corrected the Port 0 MAC commands decryption\n  - Changed the way the upper layer is notified. Now it is only  notified\n    when all the operations are finished\n\n      When a ClassA Tx cycle starts a timer is launched to check every second if everything is finished\n\n  - Added a new parameter to `LoRaMacEventFlags` structure that indicates on which Rx window the data has been received\n  - Added a new parameter to `LoRaMacEventFlags` structure that indicates if there is applicative data on the received payload\n  - Corrected ADR MAC command behavior\n  - DutyCycle enforcement implementation (EU868 PHY only)\n\n    **REMARK 1** *The regulatory duty cycle enforcement is enabled by default which means that for lower data rates the\n     node may not transmit a new frame as quickly as requested  \n    The formula used to compute the node idle time is*\n\n        Toff = TimeOnAir / DutyCycle - TxTimeOnAir\n\n    *Example:*  \n    *A device just transmitted a 0.5 s long frame on one default channel\n    This channel is in a sub-band allowing 1% duty-cycle. Therefore this whole sub-band (868 MHz - 868.6 MHz) will be\n     unavailable for 49.5 s.*\n\n    **REMARK 2** *The duty cycle enforcement can be disabled for test purposes by calling the `LoRaMacSetDutyCycleOn`\n     function with false parameter.*\n  - Implemented aggregated duty cycle management\n  - Added a function to create new channels\n  - Implemented the missing features on the JoinAccept MAC command\n  - Updated LoRaMacJoinDecrypt function to handle the CFList field\n- Added the possibility to chose to use either public or private networks\n\n### Changed\n\n- Cosmetic updates\n- Changed the TimeOnAir radio function to return a uint32_t value instead of a double. The value is in us\n- Changed the GetPosition functions to return a latitude and longitude of 0 and altitude of 65535 when no GPS fix\n- Due to duty cycle management the applicative API has changed  \n  All applications must be updated accordingly\n\n### Removed\n\n- Removed support for previous LoRaMac/LoRaWAN specifications\n\n### Fixed\n\n- Fixed the 250 kHz bandwidth choice for the FSK modem\n\n## [3.1.0] - 2015-01-30\n\n### General\n\n- Release based on \"LoRaMac specification R3.0.0\"\n- GitHub reported issues corrections\n\n### Added\n\n- Started to add support for CooCox CoIDE Integrated Development Environment  \n  Currently only LoRaMote and SensorNode platform projects are available\n- Added the support of different tool chains for the `HardFault_Handler` function\n- Added an invalid bandwidth to the Bandwidths table in order to avoid an error\n when selecting 250 kHz bandwidth when using FSK modem\n- Added another timer in order increment the tick counter without blocking the normal timer count\n- Added the possibility to switch between low power timers and normal timers on the fly\n- Added an I2C EEPROM driver\n- Added the possibility to analyze an hard fault interrupt\n- Added the possibility to configure almost all the MAC parameters\n- Added the functions to read the Up and Down Link sequence counters\n\n### Changed\n\n- Updated GCC compiler linker scripts\n- Changed the RSSI values type from int8_t to int16_t. We can have RSSI values below -128 dBm\n- Updated radio API to support FHSS and CAD handling\n- Changed all structures declarations to be packed\n- Automatically activate the channel once it is created\n\n### Fixed\n\n- Fixed Radio drivers I&Q signals inversion to be possible in Rx and in Tx  \n  Added some missing radio state machine initialization\n- Fixed SNR computation on RxDone interrupt\n- Fixed in `SetRxConfig` function the FSK modem preamble register name\n- Fixed RTC alarm setup which could be set to an invalid date\n- Fixed I2C driver by correcting the 2 bytes internal address management  \n  Corrected buffer read function when more that 1 byte was to be read\n  Added a function to wait for the I2C bus to become IDLE\n- Fixed and improved USB Virtual COM Port management files  \n  Corrected the USB CDC and USB UART drivers\n- Fixed RxWindow2 data rate management\n- Fixed `SrvAckRequested` variable was never reset\n- Fixed tstIndoor applications for LoRaMac R3.0 support\n- Fixed the `LoRaMacSetNextChannel` function\n- Fixed the port 0 MAC command decoding\n- Fixed the Acknowledgment retries management when only 1 trial is needed  \n  Before the device was issuing at least 2 trials\n- Fixed server mac new channel req answer\n- Fixed `SRV_MAC_RX2_SETUP_REQ` frequency handling\n  Added a x100 multiplication\n- Fixed `SRV_MAC_NEW_CHANNEL_REQ`  \n  Removed the DutyCycle parameter decoding\n- Fixed `NbRepTimeoutTimer` initial value. `RxWindow2Delay` already contains `RxWindow1Delay` in it\n\n## [3.0.0] - 2014-07-18\n\n### General\n\n- Release based on \"LoRaMac specification R3.0.0\"\n- GitHub reported issues corrections\n\n### Added\n\n- Added to Radio API the possibility to select the modem\n\n### Changed\n\n- Changed radio callbacks events to timeout when it is a timeout event and error when it is a CRC error\n- Radio API updated\n- Updated ping-pong applications\n- Updated tx-cw applications\n- Updated LoRaMac applications in order to handle LoRaMac returned functions calls status\n- Updated LoRaMac applications to toggle LED2 each time there is an application payload down link\n- Updated tstIndoor application to handle correctly more than 6 channels\n- Changed the MPL3115 altitude variable from unsigned to signed value\n- Changed the usage of pow(2, n) by defining POW2 functions Saves ~2 KBytes of code\n- MAC commands implemented\n  - LinkCheckReq                        **YES**\n  - LinkCheckAns                        **YES**\n  - LinkADRReq                          **YES**\n  - LinkADRAns                          **YES**\n  - DutyCycleReq                        **YES**\n  - DutyCycleAns                        **YES**\n  - Rx2SetupReq                         **YES**\n  - Rx2SetupAns                         **YES**\n  - DevStatusReq                        **YES**\n  - DevStatusAns                        **YES**\n  - JoinReq                             **YES**\n  - JoinAccept                          **YES**\n  - NewChannelReq                       **YES**\n  - NewChannelAns                       **YES**\n- Features implemented\n  - Possibility to shut-down the device **YES** (Possible by issuing DutyCycleReq MAC command)\n  - Duty cycle management enforcement   **NO**\n  - Acknowledgments retries             **YES**\n  - Unconfirmed messages retries        **YES**\n\n### Fixed\n\n- Fixed RSSI reading formulas as well as changed the RSSI and SNR values from double to int8_t type\n- Fixed an issue potentially arriving when LOW_POWER_MODE_ENABLE wasn't defined  \n  A timer interrupt could be generated while the TimerList could already be emptied\n\n## [2.3.0-RC2] - 2014-07-10\n\n### General\n\n- Release based on \"LoRaMac specification R2.2.1\"\n- GitHub reported issues corrections\n\n### Fixed\n\n- Fixed all radios antenna switch low power mode handling\n- Fixed SX1276 antenna switch control\n\n## [2.3.0-RC1] - 2014-06-06\n\n### General\n\n- GitHub reported issues corrections\n\n### Added\n\n- Added the support for SX1276 radio\n- Added Bleeper-76 and SensorNode platforms support\n- Added to the radio drivers a function that generates a random value from RSSI readings\n- Added a project to transmit a continuous wave and a project to measure the the radio sensitivity\n- Added a bootloader project for the LoRaMote and SensorNode platforms\n- Added a function to the timer driver that checks if a timer is already in the list or not\n- Added the UART Overrun bit exception handling to the UART driver\n\n### Changed\n\n- Radio driver RxDone callback function API has changed (size parameter is no more a pointer)\n  - Previous function prototype:  \n    `void    ( *RxDone )( uint8_t *payload, uint16_t *size, double rssi, double snr, uint8_t rawSnr );`\n  - New function prototype:  \n    `void    ( *RxDone )( uint8_t *payload, uint16_t size, double rssi, double snr, uint8_t rawSnr );`\n- The LoRaMac application for Bleeper platforms now sends the Selector and LED status plus the sensors values\n  - The application payload for the Bleeper platforms is as follows:  \n    LoRaMac port 1:\n\n        { 0xX0/0xX1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }\n          ----------  ----------  ----------  ----------  ----\n              |           |           |           |        |\n        SELECTOR/LED  PRESSURE   TEMPERATURE  ALTITUDE  BATTERY\n        MSB nibble = SELECTOR               (barometric)\n        LSB bit    = LED\n- Redefined `rand()` and `srand()` standard C functions. These functions are redefined in order to get the same behavior across different compiler tool chains implementations\n- GPS driver improvements. Made independent of the board platform\n- Simplified the RTC management\n- MAC commands implemented\n  - LinkCheckReq                        **YES**\n  - LinkCheckAns                        **YES**\n  - LinkADRReq                          **YES**\n  - LinkADRAns                          **YES**\n  - DutyCycleReq                        **YES** (LoRaMac specification R2.2.1)\n  - DutyCycleAns                        **YES** (LoRaMac specification R2.2.1)\n  - Rx2SetupReq                         **YES** (LoRaMac specification R2.2.1)\n  - Rx2SetupAns                         **YES** (LoRaMac specification R2.2.1)\n  - DevStatusReq                        **YES**\n  - DevStatusAns                        **YES**\n  - JoinReq                             **YES**\n  - JoinAccept                          **YES** (LoRaMac specification R2.2.1)\n  - NewChannelReq                       **YES** (LoRaMac specification R2.2.1)\n  - NewChannelAns                       **YES** (LoRaMac specification R2.2.1)\n- Features implemented\n  - Possibility to shut-down the device **YES** (Possible by issuing DutyCycleReq MAC command)\n  - Duty cycle management enforcement   **NO**\n  - Acknowledgments retries             **WORK IN PROGRESS** (Not fully debugged. Disabled by default)\n  - Unconfirmed messages retries        **WORK IN PROGRESS** (LoRaMac specification R2.2.1)\n- Due to new specification the `LoRaMacInitNwkIds` LoRaMac API function had to be modified\n  - Previous function prototype:  \n      `void LoRaMacInitNwkIds( uint32_t devAddr, uint8_t *nwkSKey, uint8_t *appSKey );`\n  - New function prototype:  \n      `void LoRaMacInitNwkIds( uint32_t netID, uint32_t devAddr, uint8_t *nwkSKey, uint8_t *appSKey );`\n- Changed the LoRaMac channels management\n- LoRaMac channels definition has been moved to `LoRaMac-board.h` file located in each specific board directory\n\n### Removed\n\n- Removed dependency of spi-board files to the `__builtin_ffs` function  \n    This function is only available on GNU compiler tool suite  \n    Removed --gnu compiler option from Keil projects  \n    Added own `__ffs` function implementation to `utilities.h` file\n- Removed obsolete class1 devices support\n\n### Fixed\n\n- Fixed Radio continuous reception mode\n\n## [2.2.0] - 2014-04-07\n\n### General\n\n- GitHub reported issues corrections\n\n### Added\n\n- Added IMST SK-iM880A starter kit board support to the project\n  - The application payload for the SK-iM880A platform is as follows:  \n    LoRaMac port 3:\n\n            { 0x00/0x01, 0x00, 0x00, 0x00 }\n             ----------  ----- ----------\n                  |        |       |\n                 LED     POTI     VDD\n\n### Changed\n\n- Ping-Pong applications have been split per supported board\n- Made fifo functions coding style coherent with the project\n- UART driver is now independent of the used MCU\n\n### Fixed\n\n- Fixed the SX1272 output power management\n  - Added a variable to store the current Radio channel\n  - Added missing FSK bit definition\n\n## [2.1.0] - 2014-03-28\n\n### General\n\n- GitHub reported issues corrections\n\n### Added\n\n- Added to the radio driver the possibility to choose the preamble length and rxSingle symbol timeout in reception\n- Added Hex coder selector driver for the Bleeper board\n- Added acknowledgments retries management\n  - Split the `LoRaMacSendOnChannel` function in `LoRaMacPrepareFrame` and `LoRaMacSendFrameOnChannel`\n     `LoRaMacSendOnChannel` now calls the 2 newly defined functions  \n    **WARNING**: By default the acknowledgment retries specific code isn't enabled  \n    The current http://iot.semtech.com server version doesn't support it\n- Added `LORAMAC_EVENT_INFO_STATUS_MAC_ERROR` event info status\n\n### Changed\n\n- The timers and RTC management has been rewritten\n- Improved the UART and UP501 GPS drivers\n- Changed copyright Unicode character to (C) in all source files\n- MAC commands implemented\n  - LinkCheckReq                 **YES**\n  - LinkCheckAns                 **YES**\n  - LinkADRReq                   **YES**\n  - LinkADRAns                   **YES**\n  - DevStatusReq                 **YES**\n  - DevStatusAns                 **YES**\n  - JoinReq                      **YES**\n  - JoinAccept                   **YES**\n\n### Fixed\n\n- Fixed GPIO pin names management\n- Fixed the antenna switch management in the SX1272 driver\n- Fixed issues on JoinRequest and JoinAccept MAC commands\n\n## [2.0.0] - 2014-02-21\n\n### General\n\n- GitHub reported issues corrections\n\n### Added\n\n- Added new MAC layer application API implementation\n- Added sensors drivers implementation\n\n### Changed\n\n- The LoRaMac applications now sends the LED status plus the sensors values\n  For the LoRaMote platform the application also sends the GPS coordinates\n  - The application payload for the Bleeper platform is as follows:  \n    LoRaMac port 1:\n\n          { 0x00/0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }\n           ----------  ----------  ----------  ----------  ----\n               |           |           |           |        |\n              LED      PRESSURE   TEMPERATURE  ALTITUDE  BATTERY\n                                             (barometric)\n\n  - The application payload for the LoRaMote platform is as follows:  \n    LoRaMac port 2:\n\n          { 0x00/0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }\n            ----------  ----------  ----------  ----------  ----  ----------------  ----------------  ----------\n                |           |           |           |        |           |                 |              |\n               LED      PRESSURE   TEMPERATURE  ALTITUDE  BATTERY    LATITUDE          LONGITUDE      ALTITUDE\n                                              (barometric)                                              (gps)\n- Changed applications examples according to the new MAC layer API\n- MAC commands implemented\n  - LinkCheckReq                 **YES**\n  - LinkCheckAns                 **YES**\n  - LinkADRReq                   **YES**\n  - LinkADRAns                   **YES**\n  - DevStatusReq                 **YES**\n  - DevStatusAns                 **YES**\n  - JoinReq                      **YES (Not tested)**\n  - JoinAccept                   **YES (Not tested)**\n\n### Known bugs\n\n- Still some issues with RTC/Timer. Will be solved in a future version\n\n## [1.1.0] - 2014-01-24\n\n### General\n\n- GitHub reported issues corrections\n\n### Added\n\n- Implemented an application LED control\n  - If the server sends on port 1 an application payload of one byte with the following contents:\n\n        0: LED off\n        1: LED on\n - The node transmits periodically on port 1 the LED status on 1st byte and the message \"Hello World!!!!\"\n   the array looks lik\n\n        { 0, 'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd', '!', '!', '!', '!' }\n\n### Changed\n\n- MAC commands implemented\n  - LinkCheckReq                 **NO**\n  - LinkCheckAns                 **NO**\n  - LinkADRReq                   **YES**\n  - LinkADRAns                   **YES**\n  - DevStatusReq                 **YES**\n  - DevStatusAns                 **YES**\n\n### Known bugs\n\n- There is an issue when launching an asynchronous Timer. Will be solved in a future version\n\n## [1.1.0-RC1] - 2014-01-20\n\n### Added\n\n- Added Doc directory. The directory contains:\n  - LoRa MAC specification\n  - Bleeper board schematic\n\n### Changed\n\n- Changed LoRaMac according to Release1 of the specification. Main changes are:\n  - MAC API changed\n  - Frame format\n  - ClassA first ADR implementation\n  - MAC commands implemented\n    - LinkCheckReq              **NO**\n    - LinkCheckAns              **NO**\n    - LinkADRReq                **YES**\n    - LinkADRAns                **NO**\n    - DevStatusReq              **NO**\n    - DevStatusAns              **NO**\n- Timers and RTC rewriting. Known bugs are:\n  - The Radio wakeup time is taken in account for all timings\n  - When opening the second reception window the microcontroller sometimes doesn't enter in low power mode\n\n## [1.0.0] - 2013-11-28\n\n### General\n\n- Initial version of the LoRa MAC node firmware implementation\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 0.8115234375,
          "content": "##\r\n##   ______                              _\r\n##  / _____)             _              | |\r\n## ( (____  _____ ____ _| |_ _____  ____| |__\r\n##  \\____ \\| ___ |    (_   _) ___ |/ ___)  _ \\\r\n##  _____) ) ____| | | || |_| ____( (___| | | |\r\n## (______/|_____)_|_|_| \\__)_____)\\____)_| |_|\r\n## (C)2013-2017 Semtech\r\n##  ___ _____ _   ___ _  _____ ___  ___  ___ ___\r\n## / __|_   _/_\\ / __| |/ / __/ _ \\| _ \\/ __| __|\r\n## \\__ \\ | |/ _ \\ (__| ' <| _| (_) |   / (__| _|\r\n## |___/ |_/_/ \\_\\___|_|\\_\\_| \\___/|_|_\\\\___|___|\r\n## embedded.connectivity.solutions.==============\r\n##\r\n## License:  Revised BSD License, see LICENSE.TXT file included in the project\r\n## Authors:  Johannes Bruder (STACKFORCE), Miguel Luis (Semtech)\r\n##\r\nproject(loramac-node)\r\ncmake_minimum_required(VERSION 3.6)\r\n\r\nadd_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/src)\r\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.513671875,
          "content": "Revised BSD License\r\nCopyright Semtech Corporation 2013. All rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n    * Redistributions of source code must retain the above copyright\r\n      notice, this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright\r\n      notice, this list of conditions and the following disclaimer in the\r\n      documentation and/or other materials provided with the distribution.\r\n    * Neither the name of the Semtech corporation nor the\r\n      names of its contributors may be used to endorse or promote products\r\n      derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\nARE DISCLAIMED. IN NO EVENT SHALL SEMTECH CORPORATION BE LIABLE FOR ANY DIRECT,\r\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.884765625,
          "content": "# LoRaWAN end-device stack implementation and example projects\n\n>**Subsequent to the availability of a new and feature enhanced LoRaWANÂ® stack within [LoRa Basicsâ¢ Modem](https://github.com/Lora-net/SWL2001), Semtech has decided to transition LoRaMac-Node to maintenance mode (critical bug fixes will still be supported).**\n>\n>**LoRa Basicsâ¢ Modem is the platform implementing new LoRaWAN features (i.e. Relay, CSMA) and will support future improvements introduced by the LoRa Alliance (e.g. LoRaWAN 1.2).\nWhile the formerly introduced LoRaMac-Node stack transitions to maintenance mode Semtech recommends customers to use [LoRa Basicsâ¢ Modem](https://github.com/Lora-net/SWL2001) for new designs.**\n\n## Introduction\n\nThe aim of this project is to show an example of an end-device LoRaWAN stack implementation.\n\nThis project has 2 active branches in place.\n\n| Branch        | L2 spec       | RP spec   | Tag/Milestone       | Class     | Comments      |\n| ------------- |:-------------:|:---------:|:---------:|:---------:|:--------------|\n| | [1.0.4](https://resources.lora-alliance.org/technical-specifications/ts001-1-0-4-lorawan-l2-1-0-4-specification) / [1.1.0](https://resources.lora-alliance.org/technical-specifications/lorawan-specification-v1-1) + [FCntDwn ERRATA](https://resources.lora-alliance.org/technical-specifications/fopts-encryption-usage-of-fcntdwn-errata-on-the-lorawan-l2-1-1-specification) | [2-1.0.3](https://resources.lora-alliance.org/technical-specifications/rp2-1-0-3-lorawan-regional-parameters) | [v4.7.0](https://github.com/Lora-net/LoRaMac-node/releases/tag/v4.7.0) | A/B/C | LoRaWAN L2 1.0.4 - **_Released_** |\n| [master](https://github.com/Lora-net/LoRaMac-node/tree/master) | [1.0.4](https://resources.lora-alliance.org/technical-specifications/ts001-1-0-4-lorawan-l2-1-0-4-specification) / [1.1.0](https://resources.lora-alliance.org/technical-specifications/lorawan-specification-v1-1) + [FCntDwn ERRATA](https://resources.lora-alliance.org/technical-specifications/fopts-encryption-usage-of-fcntdwn-errata-on-the-lorawan-l2-1-1-specification) | [2-1.0.3](https://resources.lora-alliance.org/technical-specifications/rp2-1-0-3-lorawan-regional-parameters) | [v4.7.0](https://github.com/Lora-net/LoRaMac-node/milestone/10) | A/B/C |  LoRaWAN L2 1.0.4 / 1.1.0 |\n| [v5.0.0-branch](https://github.com/Lora-net/LoRaMac-node/tree/v5.0.0-branch) | [1.0.4](https://resources.lora-alliance.org/technical-specifications/ts001-1-0-4-lorawan-l2-1-0-4-specification) / [1.1.0](https://resources.lora-alliance.org/technical-specifications/lorawan-specification-v1-1) + [FCntDwn ERRATA](https://resources.lora-alliance.org/technical-specifications/fopts-encryption-usage-of-fcntdwn-errata-on-the-lorawan-l2-1-1-specification) | [2-1.0.3](https://resources.lora-alliance.org/technical-specifications/rp2-1-0-3-lorawan-regional-parameters) | [M 5.0.0](https://github.com/Lora-net/LoRaMac-node/milestone/11) | A/B/C |  LoRaWAN L2 1.0.4 / 1.1.0 - Adds support for LR-FHSS modulation |\n\nThis project fully implements ClassA, ClassB and ClassC end-device classes and it also provides SX1272/73, SX1276/77/78/79, SX1261/2 and LR1110 radio drivers.\n\nFor each currently supported platform example applications are provided.\n\n* **LoRaMac/fuota-test-01**: FUOTA test scenario 01 end-device example application. (Based on provided application common packages)\n\n* **LoRaMac/periodic-uplink-lpp**: ClassA/B/C end-device example application. Periodically uplinks a frame using the Cayenne LPP protocol. (Based on provided application common packages)\n\n* **ping-pong**: Point to point RF link example application.\n\n* **rx-sensi**: Example application useful to measure the radio sensitivity level using an RF generator.\n\n* **tx-cw**: Example application to show how to generate an RF Continuous Wave transmission.\n\n**Note**: *Each LoRaWAN application example (LoRaMac/\\*) includes an implementation of the LoRa-Alliance; LoRaWAN certification protocol.*\n\n**Note**: *The LoRaWAN stack API documentation can be found at: http://stackforce.github.io/LoRaMac-doc/*\n\n## Supported platforms\n\nThis project currently provides support for the below platforms.  \nThis project can be ported to other platforms using different MCU than the ones currently supported.  \nThe [Porting Guide](https://stackforce.github.io/LoRaMac-doc/LoRaMac-doc-v4.7.0/_p_o_r_t_i_n_g__g_u_i_d_e.html) document provides guide lines on how to port the project to other platforms.\n\n* NAMote72\n  * [NAMote72 platform documentation](doc/NAMote72-platform.md)\n\n* NucleoLxxx - Discovery kit\n  * [NucleoLxxx and Discovery kit platforms documentation](doc/NucleoLxxx-platform.md)\n\n* SKiM880B, SKiM980A, SKiM881AXL\n  * [SKiM88xx platforms documentation](doc/SKiM88xx-platform.md)\n\n* SAMR34\n  * [SAMR34 platform documentation](doc/SAMR34-platform.md)\n\n## Getting Started\n\n### Prerequisites\n\nPlease follow instructions provided by [Development environment](doc/development-environment.md) document.\n\n### Cloning the repository\n\nClone the repository from GitHub\n\n```bash\n$ git clone https://github.com/lora-net/loramac-node.git loramac-node\n```\n\nLoRaMac-node project contains Git submodules that must be initialized\n\n```bash\n$ cd loramac-node\n$ git submodule update --init\n```\n\n### Secure-element commissioning\n\nThis project currently supports 3 different secure-elements `soft-se`, `lr1110-se`\nand `atecc608a-tnglora-se` implementations.\n\nIn order to personalize the MCU binary file with LoRaWAN EUIs or/and AES128 keys\none must follow the instructions provided by [soft-se](####soft-se),\n [lr1110-se](####lr1110-se) and [atecc608a-tnglora-se](####atecc608a-tnglora-se) chapters\n\n#### soft-se\n\n*soft-se* is a pure software emulation of a secure-element. It means that everything is located on the host MCU memories. The `DevEUI`, `JoinEUI` and `AES128 keys` may be stored on a non-volatile memory through dedicated APIs.\n\nIn order to update the end-device identity (`DevEUI`, `JoinEUI` and `AES128 keys`) one must update the `se-identity.h` file located under `./src/peripherals/soft-se/` directory.  \n\n**Note:** In previous versions of this project this was done inside `Commissioning.h` files located under each provided example directory.\n\n#### lr1110-se\n\n*lr1110-se* abstraction implementation handles all the required exchanges with the LR1110 radio crypto-engine.\n\nAll LR1110 radio chips are pre-provisioned out of factory in order to be used with [LoRa Cloud Device Join Service](https://www.loracloud.com/documentation/join_service).  \n\nIn case other Join Servers are to be used the `DevEUI`, `Pin`, `JoinEUI` and `AES128 keys` can be updated by following the instructions provided on chapter \"13. LR1110 Provisioning\" of the [LR1110 User Manual](https://semtech.my.salesforce.com/sfc/p/#E0000000JelG/a/2R000000Q2PM/KGm1YHDoHhtaicNYHCIAnh0CbG3yodEuWWJ2WrFRafM).\n\nWhen the compile option `SECURE_ELEMENT_PRE_PROVISIONED` is set to `ON` the *lr1110-se* will use the factory provisioned data (`DevEUI`, `JoinEUI` and `AES128 keys`).  \nWhen the compile option `SECURE_ELEMENT_PRE_PROVISIONED` is set to `OFF` the *lr1110-se* has to be provisioned by following one of the methods described on chapter \"13. LR1110 Provisioning\" of the [LR1110 User Manual](https://semtech.my.salesforce.com/sfc/p/#E0000000JelG/a/2R000000Q2PM/KGm1YHDoHhtaicNYHCIAnh0CbG3yodEuWWJ2WrFRafM).\nThe `DevEUI`, `Pin` and `JoinEUI` can be changed by editing the `se-identity.h` file located in `./src/peripherals/lr1110-se/` directory.\n\n#### atecc608a-tnglora-se\n\nThe *atecc608a-tnglora-se* abstraction implementation handles all the required exchanges with the ATECC608A-TNGLORA and ATECC608B-TNGLORA secure-elements.\n\nThis secure-element is always pre-provisioned and its contents can't be changed.\n\n### Building Process\n\n#### Command line\n\n**periodic-uplink-lpp** example for NucleoL476 platform with LR1110MB1DIS MBED shield and using LR1110 pre-provisioned secure-element\n\n```bash\n$ mkdir build\n$ cd build\n$ cmake -DCMAKE_BUILD_TYPE=Release \\\n        -DTOOLCHAIN_PREFIX=\"<replace by toolchain path>\" \\\n        -DCMAKE_TOOLCHAIN_FILE=\"../cmake/toolchain-arm-none-eabi.cmake\" \\\n        -DAPPLICATION=\"LoRaMac\" \\\n        -DSUB_PROJECT=\"periodic-uplink-lpp\" \\\n        -DCLASSB_ENABLED=\"ON\" \\\n        -DACTIVE_REGION=\"LORAMAC_REGION_EU868\" \\\n        -DREGION_EU868=\"ON\" \\\n        -DREGION_US915=\"OFF\" \\\n        -DREGION_CN779=\"OFF\" \\\n        -DREGION_EU433=\"OFF\" \\\n        -DREGION_AU915=\"OFF\" \\\n        -DREGION_AS923=\"OFF\" \\\n        -DREGION_CN470=\"OFF\" \\\n        -DREGION_KR920=\"OFF\" \\\n        -DREGION_IN865=\"OFF\" \\\n        -DREGION_RU864=\"OFF\" \\\n        -DBOARD=\"NucleoL476\" \\\n        -DMBED_RADIO_SHIELD=\"LR1110MB1XXS\" \\\n        -DSECURE_ELEMENT=\"LR1110_SE\" \\\n        -DSECURE_ELEMENT_PRE_PROVISIONED=\"ON\" \\\n        -DUSE_RADIO_DEBUG=\"ON\" ..\n$ make\n```\n\n**ping-pong** example using LoRa modulation for NucleoL476 platform with LR1110MB1DIS MBED shield\n\n```bash\n$ mkdir build\n$ cd build\n$ cmake -DCMAKE_BUILD_TYPE=Release \\\n        -DTOOLCHAIN_PREFIX=\"<replace by toolchain path>\" \\\n        -DCMAKE_TOOLCHAIN_FILE=\"../cmake/toolchain-arm-none-eabi.cmake\" \\\n        -DAPPLICATION=\"ping-pong\" \\\n        -DMODULATION:\"LORA\" \\\n        -DREGION_EU868=\"ON\" \\\n        -DREGION_US915=\"OFF\" \\\n        -DREGION_CN779=\"OFF\" \\\n        -DREGION_EU433=\"OFF\" \\\n        -DREGION_AU915=\"OFF\" \\\n        -DREGION_AS923=\"OFF\" \\\n        -DREGION_CN470=\"OFF\" \\\n        -DREGION_KR920=\"OFF\" \\\n        -DREGION_IN865=\"OFF\" \\\n        -DREGION_RU864=\"OFF\" \\\n        -DBOARD=\"NucleoL476\" \\\n        -DMBED_RADIO_SHIELD=\"LR1110MB1XXS\" \\\n        -DUSE_RADIO_DEBUG=\"ON\" ..\n$ make\n```\n\n#### VSCode\n\n**periodic-uplink-lpp** example for NucleoL476 platform with LR1110MB1DIS MBED shield and using LR1110 pre-provisioned secure-element\n\n* Please edit .vscode/settings.json file\n\n<details>\n  <summary>Click to expand!</summary>\n<p>\n\n```json\n// Place your settings in this file to overwrite default and user settings.\n{\n    \"cmake.configureSettings\": {\n\n        // In case your GNU ARM-Toolchain is not installed under the default\n        // path:\n        //     Windows : No default path. Specify the path where the\n        //               toolchain is installed. i.e:\n        //               \"C:/PROGRA~2/GNUTOO~1/92019-~1\".\n        //     Linux   : /usr\n        //     OSX     : /usr/local\n        // It is required to uncomment and to fill the following line.\n        \"TOOLCHAIN_PREFIX\":\"/path/to/toolchain\",\n\n        // In case your OpenOCD is not installed under the default path:\n        //     Windows : C:/openocd/bin/openocd.exe\n        //     Linux   : /usr/bin/openocd\n        //     OSX     : /usr/local/bin/openocd\n        // Please uncomment the following line and fill it accordingly.\n        //\"OPENOCD_BIN\":\"C:/openocd/bin/openocd.exe\",\n\n        // Specifies the path to the CMAKE toolchain file.\n        \"CMAKE_TOOLCHAIN_FILE\":\"cmake/toolchain-arm-none-eabi.cmake\",\n\n        // Determines the application. You can choose between:\n        // LoRaMac (Default), ping-pong, rx-sensi, tx-cw.\n        \"APPLICATION\":\"LoRaMac\",\n\n        // Select LoRaMac sub project. You can choose between:\n        // periodic-uplink-lpp, fuota-test-01.\n        \"SUB_PROJECT\":\"periodic-uplink-lpp\",\n\n        // Switch for Class B support of LoRaMac:\n        \"CLASSB_ENABLED\":\"ON\",\n\n        // Select the active region for which the stack will be initialized.\n        // You can choose between:\n        // LORAMAC_REGION_EU868, LORAMAC_REGION_US915, ..\n        \"ACTIVE_REGION\":\"LORAMAC_REGION_EU868\",\n\n        // Select the type of modulation, applicable to the ping-pong or\n        // rx-sensi applications. You can choose between:\n        // LORA or FSK\n        \"MODULATION\":\"LORA\",\n\n        // Target board, the following boards are supported:\n        // NAMote72, NucleoL073 (Default), NucleoL152, NucleoL476, SAMR34, SKiM880B, SKiM980A, SKiM881AXL, B-L072Z-LRWAN1.\n        \"BOARD\":\"NucleoL476\",\n\n        // MBED Radio shield selection. (Applies only to Nucleo platforms)\n        // The following shields are supported:\n        // SX1272MB2DAS, SX1276MB1LAS, SX1276MB1MAS, SX1261MBXBAS(Default), SX1262MBXCAS, SX1262MBXDAS, LR1110MB1XXS.\n        \"MBED_RADIO_SHIELD\":\"LR1110MB1XXS\",\n\n        // Secure element type selection the following are supported\n        // SOFT_SE(Default), LR1110_SE, ATECC608A_TNGLORA_SE\n        \"SECURE_ELEMENT\":\"LR1110_SE\",\n\n        // Secure element is pre-provisioned\n        \"SECURE_ELEMENT_PRE_PROVISIONED\":\"ON\",\n\n        // Region support activation, Select the ones you want to support.\n        // By default only REGION_EU868 support is enabled.\n        \"REGION_EU868\":\"ON\",\n        \"REGION_US915\":\"OFF\",\n        \"REGION_CN779\":\"OFF\",\n        \"REGION_EU433\":\"OFF\",\n        \"REGION_AU915\":\"OFF\",\n        \"REGION_AS923\":\"OFF\",\n        \"REGION_CN470\":\"OFF\",\n        \"REGION_KR920\":\"OFF\",\n        \"REGION_IN865\":\"OFF\",\n        \"REGION_RU864\":\"OFF\",\n        \"USE_RADIO_DEBUG\":\"ON\"\n    }\n}\n```\n\n</p>\n</details>\n\n* Click on \"CMake: Debug: Ready\" and select build type Debug or Release.  \n![cmake configure](doc/images/vscode-cmake-configure.png)\n* Wait for configuration process to finish\n* Click on \"Build\" to build the project.  \n![cmake build](doc/images/vscode-cmake-build.png)\n* Wait for build process to finish\n* Binary files will be available under `./build/src/apps/LoRaMac/`\n  * LoRaMac-periodic-uplink-lpp     - elf format\n  * LoRaMac-periodic-uplink-lpp.bin - binary format\n  * LoRaMac-periodic-uplink-lpp.hex - hex format\n\n**ping-pong** example using LoRa modulation for NucleoL476 platform with LR1110MB1DIS MBED shield\n\n* Please edit .vscode/settings.json file\n\n<details>\n  <summary>Click to expand!</summary>\n<p>\n\n```json\n// Place your settings in this file to overwrite default and user settings.\n{\n    \"cmake.configureSettings\": {\n\n        // In case your GNU ARM-Toolchain is not installed under the default\n        // path:\n        //     Windows : No default path. Specify the path where the\n        //               toolchain is installed. i.e:\n        //               \"C:/PROGRA~2/GNUTOO~1/92019-~1\".\n        //     Linux   : /usr\n        //     OSX     : /usr/local\n        // It is required to uncomment and to fill the following line.\n        \"TOOLCHAIN_PREFIX\":\"/path/to/toolchain\",\n\n        // In case your OpenOCD is not installed under the default path:\n        //     Windows : C:/openocd/bin/openocd.exe\n        //     Linux   : /usr/bin/openocd\n        //     OSX     : /usr/local/bin/openocd\n        // Please uncomment the following line and fill it accordingly.\n        //\"OPENOCD_BIN\":\"C:/openocd/bin/openocd.exe\",\n\n        // Specifies the path to the CMAKE toolchain file.\n        \"CMAKE_TOOLCHAIN_FILE\":\"cmake/toolchain-arm-none-eabi.cmake\",\n\n        // Determines the application. You can choose between:\n        // LoRaMac (Default), ping-pong, rx-sensi, tx-cw.\n        \"APPLICATION\":\"ping-pong\",\n\n        // Select LoRaMac sub project. You can choose between:\n        // periodic-uplink-lpp, fuota-test-01.\n        \"SUB_PROJECT\":\"periodic-uplink-lpp\",\n\n        // Switch for Class B support of LoRaMac:\n        \"CLASSB_ENABLED\":\"ON\",\n\n        // Select the active region for which the stack will be initialized.\n        // You can choose between:\n        // LORAMAC_REGION_EU868, LORAMAC_REGION_US915, ..\n        \"ACTIVE_REGION\":\"LORAMAC_REGION_EU868\",\n\n        // Select the type of modulation, applicable to the ping-pong or\n        // rx-sensi applications. You can choose between:\n        // LORA or FSK\n        \"MODULATION\":\"LORA\",\n\n        // Target board, the following boards are supported:\n        // NAMote72, NucleoL073 (Default), NucleoL152, NucleoL476, SAMR34, SKiM880B, SKiM980A, SKiM881AXL, B-L072Z-LRWAN1.\n        \"BOARD\":\"NucleoL476\",\n\n        // MBED Radio shield selection. (Applies only to Nucleo platforms)\n        // The following shields are supported:\n        // SX1272MB2DAS, SX1276MB1LAS, SX1276MB1MAS, SX1261MBXBAS(Default), SX1262MBXCAS, SX1262MBXDAS, LR1110MB1XXS.\n        \"MBED_RADIO_SHIELD\":\"SX1261MBXBAS\",\n\n        // Secure element type selection the following are supported\n        // SOFT_SE(Default), LR1110_SE, ATECC608A_TNGLORA_SE\n        \"SECURE_ELEMENT\":\"SOFT_SE\",\n\n        // Secure element is pre-provisioned\n        \"SECURE_ELEMENT_PRE_PROVISIONED\":\"ON\",\n\n        // Region support activation, Select the ones you want to support.\n        // By default only REGION_EU868 support is enabled.\n        \"REGION_EU868\":\"ON\",\n        \"REGION_US915\":\"OFF\",\n        \"REGION_CN779\":\"OFF\",\n        \"REGION_EU433\":\"OFF\",\n        \"REGION_AU915\":\"OFF\",\n        \"REGION_AS923\":\"OFF\",\n        \"REGION_CN470\":\"OFF\",\n        \"REGION_KR920\":\"OFF\",\n        \"REGION_IN865\":\"OFF\",\n        \"REGION_RU864\":\"OFF\",\n        \"USE_RADIO_DEBUG\":\"ON\"\n    }\n}\n```\n\n</p>\n</details>\n\n* Click on \"CMake: Debug: Ready\" and select build type Debug or Release.  \n![cmake configure](doc/images/vscode-cmake-configure.png)\n* Wait for configuration process to finish\n* Click on \"Build\" to build the project.  \n![cmake build](doc/images/vscode-cmake-build.png)\n* Wait for build process to finish\n* Binary files will be available under `./build/src/apps/ping-pong/`\n  * ping-pong     - elf format\n  * ping-pong.bin - binary format\n  * ping-pong.hex - hex format\n\n### Serial console NVM management\n\nThe `periodic-uplink-lpp` and `fuota-test-01` examples allow to reset the NVM storage through the serial interface.\n\nIn order to reset the NVM contents one must hit `ESC` + `N` keyboard keys on a serial terminal.\n\nThe serial terminal will show the following after `ESC` + `N` keyboard keys are hit. After reseting the end-device the clean NVM will be used.\n\n```text\nESC + N\n\n\nNVM factory reset succeed\n\n\nPLEASE RESET THE END-DEVICE\n```\n\n## Acknowledgments\n\n* The mbed (https://mbed.org/) project was used at the beginning as source of\ninspiration.\n* This program uses the AES algorithm implementation (http://www.gladman.me.uk/) by Brian Gladman.\n* This program uses the CMAC algorithm implementation\n(http://www.cse.chalmers.se/research/group/dcs/masters/contikisec/) by Lander Casado, Philippas Tsigas.\n* [The Things Industries](https://www.thethingsindustries.com/) for providing\n Microchip/Atmel SAMR34 platform and ATECC608A-TNGLORA secure-element support.\n* Tencent Blade Team for security breach findings and solving propositions.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.7900390625,
          "content": "# Security Policy\n\n## Supported Versions\n\nVulnerability fixes will always be applied on [master](https://github.com/Lora-net/LoRaMac-node/tree/master) branch and included in next release.\nWe may consider to hotfix the most recent release depending on the circumstances. Older releases will not be hotfixed.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| [master](https://github.com/Lora-net/LoRaMac-node/tree/master) | :white_check_mark: |\n| [latest release](https://github.com/Lora-net/LoRaMac-node/releases/latest)   | :question:                |\n| older releases   | :x:                |\n\n## Reporting a Vulnerability\n\nPlease report security concerns, perceived or implemented vulnerabilities in the source code of this project to: [LoRa-Net@semtech.com](mailto:LoRa-Net@semtech.com)\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}