{
  "metadata": {
    "timestamp": 1736710185323,
    "page": 878,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "facebookarchive/libphenom",
      "stars": 1660,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".arcconfig",
          "type": "blob",
          "size": 0.2275390625,
          "content": "{\n  \"project_id\"  : \"phenom\",\n  \"lint_engine\" : \"PhenomLintEngine\",\n  \"unit_engine\" : \"PhenomUnitEngine\",\n  \"load\"        : [\"arcanist\"],\n  \"copyright_holder\" : \"Facebook, Inc.\",\n  \"conduit_uri\" : \"https://phabricator.fb.com/api/\"\n}\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.55078125,
          "content": "Makefile.in\naclocal.m4\nautom4te.cache/\nconfigure\nconfdefs.h\nconfig.log\n.deps/\n.acaux/\nMakefile.in\nMakefile\n*.o\n*.lo\n*.so\n*.la\n.libs\nconfig.status\nlibtool\n*.swp\ncompile\nstamp-h1\ninclude/phenom/config.h\ninclude/phenom/feature_test.h\ninclude/phenom/stamp-h2\ninclude/phenom_build_config.h.in~\ninclude/phenom_build_config.h.in\ninclude/phenom_build_config.h\ntests/suite.log\ntests/*.t\ntests/*.t.*\ntests/bench/*.t\ntests/bench/*.t.*\ntests/bench/*.png\n*.png\n.dirstamp\n*.a\n*.rpm\n*.dSYM\n*.plist\n.DS_Store\n.nfs*\ncore\ndocs/declmap.js\nlibphenom.pc\nexamples/echo\nexamples/sclient\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.099609375,
          "content": "language:\n  - c\n\ncompiler:\n  - gcc\n  - clang\n\nbefore_script: ./travis/deps.sh\nscript: ./travis/run.sh\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.935546875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 4.9072265625,
          "content": "\nlib_LTLIBRARIES = libphenom.la\n\npkgconfigdir = $(libdir)/pkgconfig\npkgconfig_DATA = libphenom.pc\n\nlibphenom_la_CPPFLAGS = \\\n\t-Ithirdparty/ck/include -Iinclude -I$(top_srcdir)\\\n\t-DPHENOM_IMPL=1\nlibphenom_la_CFLAGS = @IRONMANCFLAGS@\nlibphenom_la_SOURCES = \\\n\tcorelib/init.c \\\n\tcorelib/buf.c \\\n\tcorelib/config.c \\\n\tcorelib/counter.c \\\n\tcorelib/debug_console.c \\\n\tcorelib/dns/addrinfo.c \\\n\tcorelib/dtoa.c \\\n\tcorelib/error.c \\\n\tcorelib/hook.c \\\n\tcorelib/log.c \\\n\tcorelib/memory.c \\\n\tcorelib/openssl/bio_stream.c \\\n\tcorelib/openssl/bio_bufq.c \\\n\tcorelib/openssl/init.c \\\n\tcorelib/openssl/ssl_stream.c \\\n\tcorelib/pingfd.c \\\n\tcorelib/pipe2.c \\\n\tcorelib/pprintf.c \\\n\tcorelib/nbio/common.c \\\n\tcorelib/nbio/epoll.c \\\n\tcorelib/nbio/kqueue.c \\\n\tcorelib/nbio/portfs.c \\\n\tcorelib/job.c \\\n\tcorelib/string.c \\\n\tcorelib/net/listener.c \\\n\tcorelib/net/sockaddr.c \\\n\tcorelib/net/socket.c \\\n\tcorelib/thread.c \\\n\tcorelib/timerwheel.c \\\n\tcorelib/vprintf.c \\\n\tcorelib/variant/variant.c \\\n\tcorelib/variant/json-dump.c \\\n\tcorelib/variant/json-load.c \\\n\tcorelib/variant/pack.c \\\n\tcorelib/variant/path.c \\\n\tcorelib/hash/murmur.c \\\n\tcorelib/hash/table.c \\\n\tcorelib/streams/copy.c \\\n\tcorelib/streams/make.c \\\n\tcorelib/streams/read.c \\\n\tcorelib/streams/write.c \\\n\tcorelib/streams/fd.c \\\n\tcorelib/streams/string.c \\\n\tcorelib/streams/temp.c\n\nif GIMLI\ngimli_libphenom_la_LDFLAGS = -module\ngimli_libphenom_la_CPPFLAGS = \\\n\t-Iinclude -I$(top_srcdir)\\\n\t-DPHENOM_IMPL=1\ngimli_libphenom_la_CFLAGS = @IRONMANCFLAGS@\ngimli_libphenom_la_LIBADD = libphenom.la\ngimli_libphenom_la_SOURCES = \\\n\tcorelib/gimli/boot.c \\\n\tcorelib/gimli/counter.c \\\n\tcorelib/gimli/log.c \\\n\tcorelib/gimli/thread.c \\\n\tcorelib/gimli/sockaddr.c\nlib_LTLIBRARIES += gimli_libphenom.la\nendif\n\n# some automakes put include/phenom in here, which causes conflicts\n# with system includes so we turn off default includes by default.\nDEFAULT_INCLUDES =\n\nnoinst_LIBRARIES = libtap.a\nlibtap_a_CPPFLAGS = -Iinclude\nlibtap_a_SOURCES = thirdparty/tap/tap.c\n\nTEST_CPPFLAGS = -Ithirdparty/tap -Iinclude -DPHENOM_IMPL\nTEST_LDADD = libphenom.la libtap.a\n# don't drive me mad when I'm tab completing\nTEST_SUITE_LOG = tests/suite.log\nTESTS = tests/counter.t tests/memory.t tests/timer.t tests/printf.t \\\n\t\t\t\ttests/iobasic.t tests/stream.t tests/tpool.t \\\n\t\t\t\ttests/string.t \\\n\t\t\t\ttests/hashtable.t \\\n\t\t\t\ttests/sockaddr.t \\\n\t\t\t\ttests/dns.t \\\n\t\t\t\ttests/variant.t \\\n\t\t\t\ttests/buf.t \\\n\t\t\t\ttests/bench/iopipes.t\nnoinst_PROGRAMS = $(TESTS) $(EXAMPLES)\n\nEXAMPLES = examples/echo examples/sclient\n\n# generate a rule that we can use to ensure that\n# the test programs are built\nbuild-tests: $(TESTS)\n.PHONY: build-tests docs clean-docs\n\nall-local: docs check-lint\nclean-local: clean-docs\ninstall-exec-local: install-phenom-hdrs\n\nPYTHON=@PYTHON@\nexport PYTHON\n\ncheck-lint:\n\t./thirdparty/clint.sh\n\ninstall-phenom-hdrs:\n\t$(mkdir_p) \"$(DESTDIR)$(includedir)/phenom\"\n\t$(INSTALL_HEADER) include/phenom/*.h $(DESTDIR)$(includedir)/phenom\n\nclean-docs:\n\t-rm docs/declmap.js\n\ndocs: docs/declmap.js\n\nupdate-www: docs\n\tPRETTY_VIA_PYTHON=1 @PHP@ mkdoc.php\n\ttest -d ../phenom-pages\n\tcp docs/* ../phenom-pages/\n\ndocs/declmap.js: mkdoc.php include/phenom/*.h README.markdown\n\t@PHP@ mkdoc.php\n\nexamples_echo_CPPFLAGS = $(TEST_CPPFLAGS)\nexamples_echo_LDADD = $(TEST_LDADD)\n\nexamples_sclient_CPPFLAGS = $(TEST_CPPFLAGS)\nexamples_sclient_LDADD = $(TEST_LDADD)\n\ntests_counter_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_counter_t_LDADD = $(TEST_LDADD)\n\ntests_memory_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_memory_t_LDADD = $(TEST_LDADD)\n\ntests_timer_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_timer_t_LDADD = $(TEST_LDADD)\n\ntests_printf_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_printf_t_LDADD = $(TEST_LDADD)\n\ntests_iobasic_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_iobasic_t_LDADD = $(TEST_LDADD)\n\ntests_hashtable_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_hashtable_t_LDADD = $(TEST_LDADD)\n\ntests_sockaddr_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_sockaddr_t_LDADD = $(TEST_LDADD)\n\ntests_buf_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_buf_t_LDADD = $(TEST_LDADD)\n\ntests_dns_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_dns_t_LDADD = $(TEST_LDADD)\n\ntests_stream_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_stream_t_LDADD = $(TEST_LDADD)\n\ntests_string_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_string_t_LDADD = $(TEST_LDADD)\n\ntests_tpool_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_tpool_t_LDADD = $(TEST_LDADD)\n\ntests_variant_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_variant_t_LDADD = $(TEST_LDADD)\n\nif HAVE_LIBEVENT\nLIBEVENT=-levent\nendif\ntests_bench_iopipes_t_CPPFLAGS = $(TEST_CPPFLAGS)\ntests_bench_iopipes_t_LDADD = $(TEST_LDADD) $(LIBEVENT)\n\nif HAVE_CLANG\n# See http://blog.alexrp.com/2013/09/26/clangs-static-analyzer-and-automake/\nanalyze_srcs = $(filter %.c, $(libphenom_la_SOURCES))\nanalyze_plists = $(analyze_srcs:%.c=%.plist)\nMOSTLYCLEANFILES = $(analyze_plists)\n\n$(analyze_plists): %.plist: %.c\n\t@echo \"  CCSA  \" $<\n\t@$(COMPILE) --analyze $(libphenom_la_CPPFLAGS) $< -o $@\n\nclang-analyze: $(analyze_plists)\nclang-clean:\n\t-rm -f $(analyze_plists)\nelse\nclang-analyze:\nclang-clean:\nendif\n.PHONY: clang-analyze clang-clean\n"
        },
        {
          "name": "README.markdown",
          "type": "blob",
          "size": 5.720703125,
          "content": "**NOTE: THIS PROJECT HAS BEEN DEPRECATED AND IS NO LONGER ACTIVELY MAINTAINED**\n\nAs of 2019-03-08, this project will no longer be maintained and will be archived. Thank you to all the contributors and users of `libphenom` for their work over the years.\n\nIf you are looking for a comparable library (albeit in C++) that has many of the same features and more, you should check out the actively-maintained [folly](https://github.com/facebook/folly) library.\n\nThe rest of the README is preserved as-is for historical purposes:\n\n# libPhenom\n\nlibPhenom is an eventing framework for building high performance and high\nscalability systems in C\n\n## System Requirements\n\nlibPhenom is known to compile and pass its test suite on:\n\n * Linux systems with `epoll`\n * OS X\n * Illumos and Solaris style systems that have `port_create(3C)`.\n\nlibPhenom has been known to compile and pass its test suite on these\nsystems, but they have not been tried in a little while, so may require\na little bit of TLC:\n\n * BSDish systems that have the `kqueue(2)` facility, including\n   FreeBSD 9.1 and OpenBSD 5.2\n\nlibPhenom depends on:\n\n * `pkg-config` to find dependencies.\n * [Concurrency Kit](http://concurrencykit.org/) for its excellent\n   concurrency primitives and key data structures.\n   If you are on OS/X, you can `brew install concurrencykit`.\n   On other platforms, you will You will need to install\n   CK yourself as it is not widely distributed at this time.\n   We expect to be able to find CK using `pkg-config`.\n * **OpenSSL** is required; this should be provided by your OS.\n   You will need to install `openssl-devel` or `libssl-dev` or a similarly\n   named package.\n * **autoconf**, **automake** and **libtool** are required to build libPhenom\n\nlibPhenom works best if built with GCC version 4.3 or later, but should\nbe able to build with any C99 compiler.\n\n[![Build Status](https://travis-ci.org/facebook/libphenom.png)](https://travis-ci.org/facebook/libphenom)\n\n## Facilities\n\n * Memory management with counters - record how much of which kinds\n   of memory your application is using.\n * Jobs - decompose your application into portions of work\n   and let the phenom scheduler manage getting them done\n * streaming I/O with buffers\n * Handy data structures (hash tables, lists, queues)\n * Variant data type to enable serialization and deserialization of\n   JSON\n * A printf implementation with registerable object formatting\n\n## Goals\n\n * Balance ease of use with performance\n * Aim to be neutral wrt. your choice of threaded or event-based dispatch\n   and work well with both.\n * Where possible, avoid contention points in our implementation so as to\n   avoid limiting scalability with the number of cores in the system.\n\n## How to use these docs\n\nIf you're reading these on http://facebook.github.io/libphenom, simply start\ntyping and the search box will suggest topics.  You may select topics from the\n`Topics` menu or browse the header files via the `Headers` menu.\n\n## Getting it\n\nYou can obtain the sources from https://github.com/facebook/libphenom:\n\n```bash\n$ git clone https://github.com/facebook/libphenom.git\n```\n\nor [grab a snapshot of master](https://github.com/facebook/libphenom/archive/master.zip)\n\n\n\n## Build\n\n```bash\n$ ./autogen.sh\n$ ./configure\n$ make\n$ make check\n$ sudo make install\n```\n\n## Quick Start for using the library\n\nYou'll want to set up the main loop using something like this:\n\n```c\n// Always include phenom/defs.h first to correctly set up the compilation env\n#include \"phenom/defs.h\"\n#include \"phenom/configuration.h\"\n#include \"phenom/job.h\"\n#include \"phenom/log.h\"\n#include \"phenom/sysutil.h\"\n\nint main(int argc, char **argv)\n{\n  // Must be called prior to calling any other phenom functions\n  ph_library_init();\n  // Optional config file for tuning internals\n  ph_config_load_config_file(\"/path/to/my/config.json\");\n  // Enable the non-blocking IO manager\n  ph_nbio_init(0);\n\n  // Do stuff here to register client/server stuff.\n  // This enables a very simple request/response console\n  // that allows you to run diagnostic commands:\n  // `echo memory | nc -UC /tmp/phenom-debug-console`\n  // (on BSD systems, use `nc -Uc`!)\n  // The code behind this is in\n  // https://github.com/facebook/libphenom/blob/master/corelib/debug_console.c\n  ph_debug_console_start(\"/tmp/phenom-debug-console\");\n\n  // Run\n  ph_sched_run();\n\n  return 0;\n}\n```\n\nAnd compile it using something like this: (you need optimization enabled)\n\n```bash\n$ gcc -O2 main.c `pkg-config libphenom --cflags --libs`\n```\n\n(this will link against `libphenom`).\n\nA more detailed example can be found at https://github.com/facebook/libphenom/blob/master/examples/echo.c\n\nWant more inspiration?  Take a look at the code in the test suite.\n\n## Status\n\nWe're still hacking and evolving this library, so there may be some rough\nedges.  We're very open to feedback; check out the Contributing section\nbelow.\n\n## Getting Help\n\nWe've started an IRC channel for realtime conversations; join us in\n[#phenom @ freenode](irc://#phenom@chat.freenode.net/)\n\n## Contributing\n\nIf you're thinking of hacking on libPhenom we'd love to hear from you!\nFeel free to use the Github issue tracker and pull requests to discuss and\nsubmit code changes.\n\nWe (Facebook) have to ask for a \"Contributor License Agreement\" from someone\nwho sends in a patch or code that we want to include in the codebase.  This is\na legal requirement; a similar situation applies to Apache and other ASF\nprojects.\n\nIf we ask you to fill out a CLA we'll direct you to [our online CLA\npage](https://developers.facebook.com/opensource/cla) where you can complete it\neasily.  We use the same form as the Apache CLA so that friction is minimal.\n\n## License\n\nlibPhenom is made available under the terms of the Apache License 2.0.  See the\nLICENSE file that accompanies this distribution for the full text of the\nlicense.\n\n"
        },
        {
          "name": "arcanist",
          "type": "tree",
          "content": null
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.3505859375,
          "content": "#!/bin/sh\n# vim:ts=2:sw=2:et:\nif test ! -d .acaux ; then\n  mkdir .acaux\nfi\nif test -d \"autom4te.cache\" ; then\n  rm -rf autom4te.cache\nfi\naclocal\nautoheader\ncase `uname` in\n  Darwin)\n    LIBTOOLIZE=${LIBTOOLIZE:-glibtoolize}\n    ;;\n  *)\n    LIBTOOLIZE=${LIBTOOLIZE:-libtoolize}\n    ;;\nesac\n$LIBTOOLIZE --no-warn -i -f\nautomake --add-missing --foreign\nautoconf\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 8.314453125,
          "content": "AC_INIT([phenom], [0.2], [], [phenom])\nAC_CONFIG_AUX_DIR([.acaux])\nAC_CONFIG_SRCDIR([LICENSE])\nAC_CANONICAL_TARGET\nAC_LANG(C)\n\ncase \"$target_os-$target_cpu\" in\n  solaris*i386)\n    dnl force us to consider this a 64-bit system.\n    dnl also: you'd have to be insane to run 32-bit intel solaris.\n    target_cpu=x86_64\n    LDFLAGS=\"$LDFLAGS -lumem\"\n    ;;\nesac\ncase \"$target_cpu\" in\n  x86_64|amd64)\n    CFLAGS=\"$CFLAGS -m64 -fno-omit-frame-pointer\"\n    ;;\n\ti*86|pentium*|athlon*|k5|k6|k6_2|k6_3)\n    target_cpu=i686\n    CFLAGS=\"$CFLAGS -m32 -march=i686 -msse -msse2\"\n    ;;\nesac\n\ndnl We always want large file support in our implementation.\ndnl The functions we provide explicitly use 64-bit types and\ndnl thus we do not force this requirement on our clients\nCFLAGS=\"$CFLAGS -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64\"\n\nAM_INIT_AUTOMAKE([dist-bzip2 subdir-objects])\nLT_INIT\n\nAC_PROG_CC\nAC_C_BIGENDIAN\nAC_C_INLINE\n\nAM_PROG_CC_C_O\nAM_PROG_AS\n\nlenient=no\nAC_ARG_ENABLE(lenient, [\n  --enable-lenient  Turn off more pedantic levels of warnings\n                    and compilation checks\n],[\n   lenient=$enableval\n])\n\nplacate_valgrind=no\nAC_ARG_ENABLE(placate-valgrind, [\n  --enable-placate-valgrind  Attempt to release all memory on shutdown\n],[\n   placate_valgrind=$enableval\n])\nif test \"$placate_valgrind\" == \"yes\" ; then\n  AC_DEFINE(PH_PLACATE_VALGRIND, [1], [Placate valgrind])\nfi\n\nstack_protect=no\nAC_ARG_ENABLE(stack-protector, [\n  --enable-stack-protector  Enable stack protection in the same\n                            way that rpmbuild does on some systems.\n],[\n   stack_protect=$enableval\n])\n\nAC_DEFUN([HAVE_COMPILER_FLAG],[\n  AC_MSG_CHECKING([if compiler supports $2])\n  save_cflags=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS $2\"\n  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[\n    AC_MSG_RESULT(yes)\n    $1=yes\n  ],[\n    AC_MSG_RESULT(no)\n    $1=no\n  ])\n  CFLAGS=\"$save_cflags\"\n])\n\nASAN=no\nAC_ARG_ENABLE(address-sanitizer, [\n  --enable-address-sanitizer  Enable ASAN compilation. See\n    https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer\n],[\n   HAVE_COMPILER_FLAG(ASAN, -fsanitize=address)\n])\n\ndnl flags we'll export to the pkg-config file\nPC_CFLAGS=\"\"\nPC_LIBS=\"\"\n\nAC_SEARCH_LIBS([pthread_create], [pthread])\nAC_SEARCH_LIBS([socket], [socket])\nAC_SEARCH_LIBS([clock_gettime], [rt])\nAC_SEARCH_LIBS([inet_pton], [nsl])\n\nPC_LIBS=\"$LIBS\"\n\ncase \"$CC\" in\n  *clang*)\n    HAVE_CLANG=yes\n    ;;\n  *)\n    HAVE_CLANG=no\n    ;;\nesac\nAM_CONDITIONAL(HAVE_CLANG, test \"x$HAVE_CLANG\" = xyes)\n\nAC_PATH_PROG(PYTHON, python, true)\nAC_PATH_PROG(PKG_CONFIG, pkg-config, false)\n\nif ! $PKG_CONFIG --exists --print-errors openssl ; then\n  AC_MSG_ERROR([openssl is required])\nfi\n\npkg_config_libs() {\n  pkg_config_rpath=\"\"\n  case \"$target_os\" in\n    solaris*|darwin*)\n      ;;\n    *)\n      dnl GNU LD specific; Solaris wants s/L/R/ but moving fast for now\n      pkg_config_rpath=`$PKG_CONFIG --libs-only-L $1 | sed -e 's/L/Wl,-rpath=/'`\n      ;;\n  esac\n  echo \"`$PKG_CONFIG --libs $1` $pkg_config_rpath\"\n}\n\nCFLAGS=\"$CFLAGS `$PKG_CONFIG --cflags openssl`\"\nLIBS=\"$LIBS `$PKG_CONFIG --libs openssl`\"\n\ncase \"$target_os\" in\n  darwin*)\n    dnl Apple deprecated the use of their OpenSSL headers in 10.7 and up.\n    dnl Pretend we're building for 10.6 and up and the deprecation warnings\n    dnl go away\n    PC_CFLAGS=\"$PC_CFLAGS -DMAC_OS_X_VERSION_MIN_REQUIRED=MAC_OS_X_VERSION_10_6\"\n    ;;\nesac\n\n# If you're bumping the CK max-version here, you must also bump it in\n# travis/deps.sh otherwise you will break the CI build\nif ! $PKG_CONFIG --exists --atleast-version=0.5.0 --max-version=0.5.1 --print-errors ck ; then\n  AC_MSG_ERROR([ck is required])\nfi\nCFLAGS=\"$CFLAGS `$PKG_CONFIG --cflags ck`\"\nLIBS=\"$LIBS `pkg_config_libs ck`\"\n\nAC_PATH_PROG(PHP, php, true)\nAC_SUBST(PHP)\n\ngimli=no\nAC_ARG_WITH(gimli, [\n  --with-gimli    Enable support for the gimli process monitor\n                  https://bitbucket.org/wez/gimli/\n],[\n   gimli=$withval\n])\nif test \"x$gimli\" != \"xno\" ; then\n  prefixes=\"$gimli /usr/local /usr\"\n  mylibdir=\"lib\"\n  rpath=\"-R\"\n  case $target_os-$target_cpu in\n    linux-*64)\n      mylibdir=\"lib64 lib\"\n      rpath=\"-Wl,-rpath=\"\n      ;;\n    linux*)\n      rpath=\"-Wl,-rpath=\"\n      ;;\n  esac\n  save_flags=\"$LDFLAGS\"\n  save_libs=\"$LIBS\"\n  save_cppflags=\"$CPPFLAGS\"\n  gimli_dir=\"\"\n  AC_MSG_CHECKING([for gimli])\n  for dir in $prefixes ; do\n    for ldir in $mylibdir ; do\n      LDFLAGS=\"$save_flags $rpath$dir/$ldir -L$dir/$ldir\"\n      LIBS=\"$save_libs -lgimli\"\n      CPPFLAGS=\"$save_cppflags -I$dir/include\"\n      AC_TRY_LINK([\n        #include <libgimli.h>\n      ],[gimli_heartbeat_attach();],\n        [gimli_dir=$dir]\n      )\n      if test -n \"$gimli_dir\" ; then\n        AC_CHECK_HEADERS(libgimli.h)\n        save_flags=\"$save_flags $rpath$dir/$ldir -L$dir/$ldir\"\n        save_libs=\"$save_libs -lgimli\"\n        save_cppflags=\"$save_cppflags -I$dir/include\"\n        AC_MSG_RESULT([yes])\n        USE_GIMLI=yes\n        AC_DEFINE([USE_GIMLI], 1, [Use gimli])\n        break\n      fi\n    done\n  done\n  LDFLAGS=\"$save_flags\"\n  LIBS=\"$save_libs\"\n  CPPFLAGS=\"$save_cppflags\"\n  if test \"xUSE_GIMLI\" != xyes ; then\n    AC_MSG_RESULT([no])\n  fi\nfi\nAM_CONDITIONAL(GIMLI, test \"x$USE_GIMLI\" = xyes)\n\ndnl for comparitive benchmarking\nAC_ARG_ENABLE(libevent-comparison, [\n  --enable-libevent-comparison  Build iopipes.c with libevent support\n],[\n  SAVE_LIBS=\"$LIBS\"\n  AC_SEARCH_LIBS([event_add], [event],[\n    HAVE_LIBEVENT=yes\n    AC_DEFINE(HAVE_LIBEVENT, 1, have libevent)\n  ])\n  LIBS=\"$SAVE_LIBS\"\n])\nAM_CONDITIONAL(HAVE_LIBEVENT, test \"x$HAVE_LIBEVENT\" = xyes)\n\nhave_thread=no\nAC_TRY_COMPILE([__thread int tls;],[tls;],\n               [have_thread=yes])\nif test \"$have_thread\" == \"yes\" ; then\n  case \"$target_os\" in\n    solaris*)\n      dnl I get linker errors with this enabled; seems broken\n      ;;\n    *)\n      AC_DEFINE(HAVE___THREAD, [], [Have __thread TLS])\n      ;;\n  esac\nfi\n\nAC_CHECK_HEADERS(\\\nalloca.h \\\ninttypes.h \\\nlocale.h \\\nport.h \\\npthread.h \\\nstdbool.h \\\nstddef.h \\\nstdint.h \\\nstring.h \\\nsys/inotify.h \\\nsys/epoll.h \\\nsys/event.h \\\nsys/eventfd.h \\\nsys/param.h \\\nsys/processor.h \\\nsys/procset.h \\\nsys/resource.h \\\nsys/timerfd.h \\\n)\n\ndnl needs NBBY on FreeBSD\nAC_CHECK_HEADERS([sys/cpuset.h],[],[],[[\n#ifdef HAVE_SYS_PARAM_H\n#include <sys/param.h>\n#endif\n]])\n\nAC_CHECK_HEADERS([pthread_np.h],[],[],[[\n#include <pthread.h>\n]])\n\nAC_CHECK_FUNCS(\\\naccept4 \\\nasprintf \\\nbacktrace \\\nbacktrace_symbols \\\nbacktrace_symbols_fd \\\nclock_gettime \\\ncpuset_setaffinity \\\nepoll_create \\\nepoll_create1 \\\ngetpagesize \\\ninotify_init \\\nkqueue \\\nlocaleconv \\\npipe2 \\\nport_create \\\nprocessor_bind \\\npthread_getname_np \\\npthread_set_name_np \\\npthread_setname_np \\\npthread_setaffinity_np \\\npthread_mach_thread_np \\\nstrerror_r \\\nstrtoll \\\nsysctlbyname \\\nthread_policy_set \\\ntimerfd_create \\\n)\n\n# Do this after we've looked for functions\nif test -n \"$GCC\" ; then\n  GCC_VERSION=`$CC -dumpversion`\n  GCC_VERSION_MAJOR=`echo $GCC_VERSION | cut -d. -f1`\n  GCC_VERSION_MINOR=`echo $GCC_VERSION | cut -d. -f2`\n\n  # Need to select c1x if we want to use _Static_assert\n  if expr \\( $GCC_VERSION_MAJOR \\* 10000 \\) \\+ \\( $GCC_VERSION_MINOR \\* 100 \\) \\>= 40600 >/dev/null ; then\n    GCC_STD=gnu1x\n  else\n    GCC_STD=gnu99\n  fi\n  # export the std setting so that clients can use ph_static_assert\n  PC_CFLAGS=\"$PC_CFLAGS -std=$GCC_STD\"\n  CFLAGS=\"$CFLAGS -std=$GCC_STD \\\n    -pedantic -Wall -Wextra -Wno-declaration-after-statement \\\n    -W -Wundef -Wendif-labels -Wshadow -Wpointer-arith -Wcast-align \\\n    -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes \\\n    -Wno-nested-externs -Winline -Wdisabled-optimization \\\n    -fstrict-aliasing -pipe -Wno-parentheses\"\nfi\nAC_SUBST(PC_CFLAGS)\nAC_SUBST(PC_LIBS)\n\nif test \"$ASAN\" == \"yes\" ; then\n  CFLAGS=\"$CFLAGS -fsanitize=address -fno-common\"\nelse\n  if test -n \"$GCC\" -a \"$stack_protect\" == \"yes\" ; then\n    CFLAGS=\"$CFLAGS -Wp,-D_FORTIFY_SOURCE=2 -fexceptions \\\n      -fstack-protector --param=ssp-buffer-size=4\"\n  fi\nfi\n\ndnl CK needs optimization enabled otherwise it breaks.\ndnl So turn it on unless an optimization level was explicitly\ndnl specified in CFLAGS\ncase \"$CFLAGS\" in\n  *-O*)\n    ;;\n  *)\n    CFLAGS=\"$CFLAGS -O2\"\n    ;;\nesac\ndnl always include debug info in what we build\nCFLAGS=\"$CFLAGS -g -gdwarf-2\"\n\nIRONMANCFLAGS=\"\"\nif test -n \"$GCC\" -a \"$lenient\" == \"no\" ; then\n  IRONMANCFLAGS=\"-Werror\"\nfi\nAC_SUBST(IRONMANCFLAGS)\n\nAC_CONFIG_HEADER([include/phenom_build_config.h include/phenom/feature_test.h])\nAC_CONFIG_FILES([Makefile libphenom.pc])\nAC_OUTPUT\n\ndnl vim:ts=2:sw=2:\n"
        },
        {
          "name": "corelib",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "libphenom.pc.in",
          "type": "blob",
          "size": 0.2880859375,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nincludedir=@includedir@\nlibdir=@libdir@\n\nName: libPhenom\nDescription: library of awesome for C apps\nRequires: openssl\nURL: https://github.com/facebook/libphenom\nVersion: @VERSION@\nLibs: -L${libdir} -lphenom @PC_LIBS@\nCflags: @PC_CFLAGS@ -I${includedir}\n"
        },
        {
          "name": "mkdoc.php",
          "type": "blob",
          "size": 5.177734375,
          "content": "#!/usr/bin/env php\n<?php\n// Extract markdown docs from header files\n// vim:ts=2:sw=2:et:\n\n// Which files to process\n$files = array_flip(explode(\"\\n\", trim(\n  stream_get_contents(\n    popen('find include/phenom -name \\*.h', 'r')\n  )\n)));\n\n// Which files to exclude\n$suppress = array_flip(array(\n  'include/phenom/config.h',\n  'include/phenom/queue.h',\n));\n\n// The final file list\n$files = array_diff_key($files, $suppress);\n\nif (!is_dir('docs')) {\n  mkdir('docs');\n}\n\nksort($files);\n\n// First pass to extract the content\n$docs = array();\n\n// Synthesize the main page from the top-level readme\n$docs['README'] = array(\n  'name' => 'README',\n  'title' => 'README',\n  'content' => file_get_contents('README.markdown'),\n  'decl_titles' => array(),\n);\n\nforeach ($files as $incname => $_) {\n  process_include($incname, $docs);\n}\n\n// Build out a map of decl title to filename\n$decl_map = array();\nforeach ($docs as $doc) {\n  foreach ($doc['decl_titles'] as $title) {\n    $decl_map[$title] = $doc['title'];\n  }\n}\n\nfunction pretty_json($data)\n{\n  if (defined('JSON_PRETTY_PRINT')) {\n    return json_encode($data, JSON_PRETTY_PRINT);\n  }\n\n  $json = json_encode($data);\n\n  if (getenv(\"PRETTY_VIA_PYTHON\")) {\n    $input = tmpfile();\n    fwrite($input, $json);\n    rewind($input);\n    $proc = proc_open('python -mjson.tool',\n      array(\n        0 => $input,\n        1 => array('pipe', 'w'),\n        2 => array('file', '/dev/null', 'w')\n      ),\n      $pipes\n    );\n    $json = stream_get_contents($pipes[1]);\n  }\n\n  return $json;\n}\n\n// Save the document information\nfile_put_contents(\"docs/declmap.js\",\n  'var declmap = '.pretty_json($decl_map) . \";\\n\" .\n  'var docs = '.pretty_json($docs) . \";\\n\"\n);\n\nexit(0);\n\nfunction process_include($incname, &$docs) {\n  $incfile = file_get_contents($incname);\n\n  preg_match(',^include/phenom/(.*)\\.h$,', $incname, $matches);\n  $target = $matches[1];\n\n  $md = array();\n\n  $decl_titles = array();\n  $page_title = null;\n\n  preg_match_all(',/\\*\\*.*?\\*/,s', $incfile, $matches, PREG_OFFSET_CAPTURE);\n  foreach ($matches[0] as $i => $entry) {\n    list($comment, $offset) = $entry;\n\n    // Look ahead and see if we can find the first C-ish declaration.\n    $decl = '';\n    $title = '';\n\n    $remainder = ltrim(substr($incfile, $offset + strlen($comment)));\n    if (preg_match(',^[^/;]+;,s', $remainder, $declm)) {\n      $decl = is_plausible_decl($declm[0], $title);\n    } else if (preg_match(',^struct(.*?)\\n\\};,s', $remainder, $declm)) {\n      $decl = is_plausible_decl($declm[0], $title);\n    }\n    $extracted = extract_from_comment($comment, $title);\n\n    if ($title && !$page_title) {\n      $page_title = $title;\n    }\n\n    // If we're not the first section and we don't have a title,\n    // emit a horizontal rule to separate the content\n    if ($i && !$title) {\n      $md[] = \"\\n* * *\\n\";\n    }\n    if ($title) {\n      $decl_titles[] = $title;\n\n      $md[] = sprintf(\"\\n### %s\\n\", $title);\n    }\n\n    // If we found a declaration, emit a code block for it\n    if ($decl) {\n      $md[] = sprintf(\"\\n```c\\n%s\\n```\\n\\n\", $decl);\n    }\n\n    // and the docblock content\n    $md[] = sprintf(\"\\n%s\\n\", $extracted);\n  }\n\n  $docs[$target] = array(\n    'name' => $target,\n    'title' => $target, //$page_title,\n    'content' => implode('', $md),\n    'decl_titles' => $decl_titles,\n    'raw_content' => htmlspecialchars($incfile, ENT_QUOTES, 'utf-8'),\n  );\n}\n\nfunction strip_comments($text) {\n  $text = preg_replace(',/\\*(.*?)\\*/,s', '', $text);\n  $text = preg_replace(\",//[^\\n]+,s\", '', $text);\n  return $text;\n}\n\nfunction is_plausible_decl($text, &$title) {\n  // Don't go too far into inline functions\n  if (preg_match('/^\\s*static inline (.*?)\\{/s', $text, $matches)) {\n    $text = $matches[1];\n  }\n\n  // Sanity check; if there are blank lines in there, we probably\n  // got too much, unless this is a struct\n  if (!preg_match('/^struct/', $text) && strpos($text, \"\\n\\n\") !== false) {\n    return '';\n  }\n\n  $text = trim($text);\n\n  // Look for what is probably the function name\n  $stripped = strip_comments($text);\n  if (preg_match(',^typedef\\s+\\S+\\s+\\(\\*(ph_[a-zA-Z0-9_]+)\\),', $stripped, $matches)) {\n    $title = $matches[1];\n  } else if (preg_match(',^(struct\\s+\\S+),', $stripped, $matches)) {\n    $title = $matches[1];\n  } else if (preg_match(',((ph|PH)_[a-zA-Z0-9_]+)\\(,', $stripped, $matches)) {\n    $title = $matches[1];\n  } else if (preg_match(',(struct\\s+\\S+),', $stripped, $matches)) {\n    $title = $matches[1];\n  }\n\n  return $text;\n}\n\n// Fixup comment\n// remove the C-style comment surrounds from the docblock.\n// If every line begins with stars, strip those.\nfunction extract_from_comment($comment, &$title) {\n  $lines = explode(\"\\n\", $comment);\n  $munged = array();\n\n  // First line is the summary.  We render it with emphasis\n  $first = array_shift($lines);\n  $first = preg_replace(',\\*/\\s*$,', '', $first);\n  $first = '*' . trim(substr($first, 3)) . \"*\\n\";\n  if ($first != \"**\\n\") {\n    $munged[] = $first;\n  }\n\n  // Remove closing comment bit from last line\n  $last = array_pop($lines);\n  $last = preg_replace(',\\s+\\*/$,', '', $last);\n  if (strlen($last)) {\n    $lines[] = $last;\n  }\n\n  // Remove leading comment decoration\n  foreach ($lines as $line) {\n    $line = preg_replace(',^ \\*\\s?,', '', $line);\n    $munged[] = $line;\n  }\n\n  return implode(\"\\n\", $munged);\n}\n\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "thirdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "travis",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}