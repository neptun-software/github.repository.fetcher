{
  "metadata": {
    "timestamp": 1736709802669,
    "page": 257,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mintty/wsltty",
      "stars": 3119,
      "defaultBranch": "master",
      "files": [
        {
          "name": "0001-notify-size-change-inband.patch",
          "type": "blob",
          "size": 7.681640625,
          "content": "diff --git a/src/wslbridge2-backend.cpp b/src/wslbridge2-backend.cpp\nindex 8b86cc6..63a19e5 100644\n--- a/src/wslbridge2-backend.cpp\n+++ b/src/wslbridge2-backend.cpp\n@@ -17,6 +17,7 @@\n #include <sys/wait.h>\n #include <unistd.h>\n #include <wordexp.h>\n+#include <limits.h> // PIPE_BUF\n \n #include <string>\n #include <vector>\n@@ -196,6 +197,7 @@ int main(int argc, char *argv[])\n \n         ssize_t readRet = 0, writeRet = 0;\n         char data[1024]; /* Buffer to hold raw data from pty */\n+        assert(sizeof data <= PIPE_BUF);\n \n         do\n         {\n@@ -206,8 +208,85 @@ int main(int argc, char *argv[])\n             if (fds[0].revents & POLLIN)\n             {\n                 readRet = recv(ioSockets.inputSock, data, sizeof data, 0);\n-                if (readRet > 0)\n-                    writeRet = write(mfd_dp, data, readRet);\n+                char * s = data;\n+                int len = readRet;\n+                writeRet = 1;\n+                while (writeRet > 0 && len > 0)\n+                {\n+                    if (!*s)\n+                    {\n+                        // dispatch NUL escaped inband information\n+                        s++;\n+                        len--;\n+\n+                        if (len < 9 && s + 9 >= data + sizeof data)\n+                        {\n+                            // make room for additional loading\n+                            memcpy(data, s, len);\n+                            s = data;\n+                        }\n+\n+                        // ensure 1 more byte is loaded to dispatch on\n+                        if (!len)\n+                        {\n+                            readRet = recv(ioSockets.inputSock, s, 1, 0);\n+                            if (readRet > 0)\n+                            {\n+                                len += readRet;\n+                            }\n+                            else\n+                            {\n+                                writeRet = -1;\n+                                break;\n+                            }\n+                        }\n+                        if (*s == 2)\n+                        {\n+                            // STX: escaped NUL\n+                            s++;\n+                            len--;\n+                            writeRet = write(mfd_dp, \"\", 1);\n+                        }\n+                        else if (*s == 16)\n+                        {\n+                            // DLE: terminal window size change\n+                            s++;\n+                            len--;\n+                            // ensure 8 more bytes are loaded for winsize\n+                            while (readRet > 0 && len < 8)\n+                            {\n+                                readRet = recv(ioSockets.inputSock, s + len, 8 - len, 0);\n+                                if (readRet > 0)\n+                                {\n+                                    len += readRet;\n+                                }\n+                            }\n+                            if (readRet <= 0)\n+                            {\n+                                writeRet = -1;\n+                                break;\n+                            }\n+                            struct winsize * winsp = (struct winsize *)s;\n+                            s += 8;\n+                            len -= 8;\n+                            winsp->ws_xpixel = 0;\n+                            winsp->ws_ypixel = 0;\n+                            ret = ioctl(mfd, TIOCSWINSZ, winsp);\n+                            if (ret != 0)\n+                                perror(\"ioctl(TIOCSWINSZ)\");\n+                        }\n+                    }\n+                    else\n+                    {\n+                        int n = strnlen(s, len);\n+                        writeRet = write(mfd_dp, s, n);\n+                        if (writeRet > 0)\n+                        {\n+                            s += writeRet;\n+                            len -= writeRet;\n+                        }\n+                    }\n+                }\n             }\n \n             /* Resize window when buffer received in control socket */\ndiff --git a/src/wslbridge2.cpp b/src/wslbridge2.cpp\nindex 300ad57..3ba9096 100644\n--- a/src/wslbridge2.cpp\n+++ b/src/wslbridge2.cpp\n@@ -43,19 +43,41 @@ union IoSockets\n /* global variable */\n static volatile union IoSockets g_ioSockets = { 0 };\n \n+#define dont_debug_inband\n+#define dont_use_controlsocket\n+\n static void resize_window(int signum)\n {\n+#ifdef use_controlsocket\n+#warning this may crash for unknown reason, maybe terminate the backend\n     struct winsize winp;\n+    ioctl(STDIN_FILENO, TIOCGWINSZ, &winp);\n \n     /* Send terminal window size to control socket */\n-    ioctl(STDIN_FILENO, TIOCGWINSZ, &winp);\n     send(g_ioSockets.controlSock, (char *)&winp, sizeof winp, 0);\n+#else\n+    static char wins[2 + sizeof(struct winsize)] = {0, 16};\n+    static struct winsize * winsp = (struct winsize *)&wins[2];\n+    ioctl(STDIN_FILENO, TIOCGWINSZ, winsp);\n+\n+#ifdef debug_inband\n+    /* Send terminal window size inband, visualized as ESC sequence */\n+    char resizesc[55];\n+    //sprintf(resizesc, \"\\e_8;%u;%u\\a\", winsp->ws_row, winsp->ws_col);\n+    sprintf(resizesc, \"^[_8;%u;%u^G\", winsp->ws_row, winsp->ws_col);\n+    send(g_ioSockets.inputSock, resizesc, strlen(resizesc), 0);\n+#else\n+    /* Send terminal window size inband, with NUL escape */\n+    send(g_ioSockets.inputSock, wins, sizeof wins, 0);\n+#endif\n+#endif\n }\n \n static void* send_buffer(void *param)\n {\n     int ret;\n     char data[1024];\n+    assert(sizeof data <= PIPE_BUF);\n \n     while (1)\n     {\n@@ -65,8 +87,33 @@ static void* send_buffer(void *param)\n             closesocket(g_ioSockets.inputSock);\n             break;\n         }\n-        if (!send(g_ioSockets.inputSock, data, ret, 0))\n-            break;\n+            char * s = data;\n+            int len = ret;\n+            while (ret > 0 && len > 0)\n+            {\n+                if (!*s)\n+                {\n+                    // send NUL STX\n+#ifdef debug_inband\n+                    ret = send(g_ioSockets.inputSock, (void*)\"nul\", 3, 0);\n+#else\n+                    static char NUL_STX[] = {0, 2};\n+                    ret = send(g_ioSockets.inputSock, NUL_STX, 2, 0);\n+#endif\n+                    s++;\n+                    len--;\n+                }\n+                else\n+                {\n+                    int n = strnlen(s, len);\n+                    ret = send(g_ioSockets.inputSock, s, n, 0);\n+                    if (ret > 0)\n+                    {\n+                        s += ret;\n+                        len -= ret;\n+                    }\n+                }\n+            }\n     }\n \n     pthread_exit(&ret);\n@@ -480,16 +527,6 @@ int main(int argc, char *argv[])\n         g_ioSockets.controlSock = win_local_accept(controlSock);\n     }\n \n-    /* Capture window resize signal and send buffer to control socket */\n-    {\n-    struct sigaction act;\n-    memset(&act, 0, sizeof act);\n-    act.sa_handler = resize_window;\n-    act.sa_flags = SA_RESTART;\n-    ret = sigaction(SIGWINCH, &act, NULL);\n-    assert(ret == 0);\n-    }\n-\n     /* Create thread to send input buffer to input socket */\n     pthread_t tidInput;\n     ret = pthread_create(&tidInput, nullptr, send_buffer, nullptr);\n@@ -502,6 +539,17 @@ int main(int argc, char *argv[])\n \n     termState.enterRawMode();\n \n+    /* Create thread to send window size through control socket */\n+    struct sigaction act = {};\n+    act.sa_handler = resize_window;\n+    act.sa_flags = SA_RESTART;\n+    ret = sigaction(SIGWINCH, &act, NULL);\n+    assert(ret == 0);\n+\n+    /* Notify initial size in case it's changed since starting */\n+    //resize_window(0);\n+    kill(getpid(), SIGWINCH);\n+\n     /*\n      * wsltty#254: WORKAROUND: Terminates input thread forcefully\n      * when output thread exits. Need some inter-thread syncing.\n"
        },
        {
          "name": "0002-add-com-for-lifted-wsl.patch",
          "type": "blob",
          "size": 1.919921875,
          "content": "diff -rup src/sav/GetVmId.cpp src/GetVmId.cpp\n--- src/sav/GetVmId.cpp\t2021-04-27 13:50:51.000000000 +0000\n+++ src/GetVmId.cpp\t2022-02-03 19:43:53.684999800 +0000\n@@ -46,11 +46,24 @@ void ComInit(void)\n                                 EOAC_STATIC_CLOAKING, NULL);\n     assert(hRes == 0);\n \n-    hRes = CoCreateInstance(CLSID_LxssUserSession,\n+    // First try with COM server in lifted WSL service\n+    hRes = CoCreateInstance(CLSID_WslService,\n                             NULL,\n                             CLSCTX_LOCAL_SERVER,\n-                            IID_ILxssUserSession,\n+                            IID_IWSLService,\n                             (PVOID *)&wslSession);\n+\n+\n+    // Now try with COM server in system WSL service\n+    if (FAILED(hRes))\n+    {\n+        hRes = CoCreateInstance(CLSID_LxssUserSession,\n+                                NULL,\n+                                CLSCTX_LOCAL_SERVER,\n+                                IID_ILxssUserSession,\n+                                (PVOID *)&wslSession);\n+    }\n+\n     assert(hRes == 0);\n }\n \ndiff -rup src/sav/LxssUserSession.hpp src/LxssUserSession.hpp\n--- src/sav/LxssUserSession.hpp\t2021-04-27 13:50:51.000000000 +0000\n+++ src/LxssUserSession.hpp\t2022-02-03 19:45:22.846298200 +0000\n@@ -11,14 +11,26 @@\n #ifndef LXSSUSERSESSION_H\n #define LXSSUSERSESSION_H\n \n-/* Class identifier */\n+// COM IDs for lifted WSL service\n+static const GUID CLSID_WslService = {\n+    0xF122531F,\n+    0x326B,\n+    0x4514,\n+    { 0x85, 0xAE, 0xDC, 0x99, 0xD3, 0x1D, 0x82, 0x56 } };\n+\n+static const GUID IID_IWSLService = {\n+    0x50047071,\n+    0x122C,\n+    0x4CAD,\n+    { 0x9C, 0x93, 0x94, 0x72, 0x0E, 0xB7, 0x7B, 0x06 } };\n+\n+// COM IDs for system WSL service\n static const GUID CLSID_LxssUserSession = {\n     0x4F476546,\n     0xB412,\n     0x4579,\n     { 0xB6, 0x4C, 0x12, 0x3D, 0xF3, 0x31, 0xE3, 0xD6 } };\n \n-/* Interface identifier */\n static const GUID IID_ILxssUserSession = {\n     0x536A6BCF,\n     0xFE04,\n"
        },
        {
          "name": "0012-get-vmid-from-registry.patch",
          "type": "blob",
          "size": 1.54296875,
          "content": "--- wslbridge2/src/wslbridge2.cpp\t2024-10-10 20:20:21.931891800 +0000\n+++ wslbridge2-0.12/src/wslbridge2.cpp\t2024-10-08 09:31:35.954145800 +0000\n@@ -228,6 +228,26 @@ static void start_dummy(std::wstring wsl\n     CloseHandle(pi.hThread);\n }\n \n+bool GetIdFromRegistry(GUID *guid) {\n+    HKEY hKeyRoot = HKEY_LOCAL_MACHINE;\n+    std::wstring subKey = L\"SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\HostComputeService\\\\VolatileStore\\\\ComputeSystem\";\n+    HKEY hKey;\n+    if (RegOpenKeyEx(hKeyRoot, subKey.c_str(), 0, KEY_READ, &hKey) == ERROR_SUCCESS) {\n+        DWORD index = 0;\n+        WCHAR keyName[256];\n+        DWORD keyNameSize = sizeof(keyName) / sizeof(keyName[0]);\n+\n+        while (RegEnumKeyEx(hKey, index, keyName, &keyNameSize, nullptr, nullptr, nullptr, nullptr) == ERROR_SUCCESS) {\n+            RegCloseKey(hKey);\n+            std::wstring id = L\"{\" + std::wstring(keyName) + L\"}\";\n+            return IIDFromString(id.c_str(), guid) == S_OK;\n+        }\n+        RegCloseKey(hKey);\n+    }\n+    return false;\n+}\n+\n+\n int main(int argc, char *argv[])\n {\n     /* Minimum requirement Windows 10 build 17763 aka. version 1809 */\n@@ -387,8 +407,8 @@ int main(int argc, char *argv[])\n         if (LiftedWSLVersion)\n             start_dummy(wslPath, wslCmdLine, distroName, debugMode);\n \n-        const HRESULT hRes = GetVmId(&DistroId, &VmId, LiftedWSLVersion);\n-        if (hRes != 0)\n+        const bool hRes = GetIdFromRegistry(&VmId);\n+        if (!hRes)\n             fatal(\"GetVmId: %s\\n\", GetErrorMessage(hRes).c_str());\n \n         inputSock = win_vsock_create();\n"
        },
        {
          "name": "LICENSE.mintty",
          "type": "blob",
          "size": 1.78515625,
          "content": "mintty is copyright 2008-23 Andy Koppe, 2015-23 Thomas Wolff.\n\nLicensed under the terms of the GNU General Public License version 3 or later,\namended with the bundling clause to clarify ambiguous interpretation.\n\nThe bundling clause can be found in the accompanying file LICENSE.bundling.\n\nThe GPL license text can be found in the accompanying file LICENSE.GPL, \nat /usr/share/doc/common-licenses/GPL-3.0 on Cygwin installs, \nor on the GNU website at http://www.gnu.org/licenses/gpl.html.\n\nSources are available from the project page at http://mintty.github.io/.\n\nBased on PuTTY version 0.60 by Simon Tatham and contributors.\nBig thanks to everyone involved for their work on PuTTY.\nSee LICENSE.PuTTY for PuTTY's copyright notice, contributors, and license.\nThe sources of PuTTY 0.60 can be downloaded from\nftp://ftp.chiark.greenend.org.uk/users/sgtatham/putty-0.60.\n\nThe minibidi algorithm is under MIT license as quoted in the source file.\n\nSixel code (sixel.c) is relicensed under GPL like mintty with the \npermission of its author (kmiya@culti); Sixel colour conversion code \n(sixel_hls.c) is licensed by its author Ross Combs under the license \nquoted in the source file.\n\nThe program icon is the apps/utilities-terminal icon from KDE's Oxygen theme,\nretrieved from http://websvn.kde.org/trunk/KDE/kdebase/runtime/pics/oxygen. \nThanks to the KDE artists for their sleek design. The Oxygen icons are licensed\nunder the terms of the LGPLv3; see LICENSE.Oxygen for details.\n\nThe colour schemes / theme files bundled with mintty are included \nunder various licenses. The source and license or permission are \nquoted in the respective theme files.\n\nBell sounds files are included, mostly under the creative commons license \n(https://creativecommons.org/publicdomain/zero/1.0/), see also the README \nin the sounds subdirectory.\n\n"
        },
        {
          "name": "LICENSE.wslbridge2",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.083984375,
          "content": "Mintty as a terminal for WSL (Windows Subsystem for Linux).\n\n<img align=right src=wsltty.png>\n\n### Overview ###\n\nWSLtty components\n* wsltty package components (see below) in the user’s local application folder \n  `%LOCALAPPDATA%`\n* a wsltty configuration directory in the user’s application folder `%APPDATA%`\n  (“home”-located configuration files from a previously installed version \n  will be migrated to the new default location)\n* Start Menu shortcuts to start WSL terminals\n* Desktop shorcut to start a terminal for the default WSL distribution\n* `*.bat` scripts to invoke WSL terminals from the command line\n* optional context menu entries for Windows Explorer to start WSL terminals in the respective folder\n* install/uninstall context menu items from Start Menu subfolder `WSLtty`\n\n---\n\n### Requirements ###\n\nTo connect to WSL, wsltty uses wslbridge2, which uses undocumented \nWindows APIs that have been changed various times, so wslbridge2 needed \nto catch up with incompatible changes, particularly to support WSL V2.\n(See e.g. issue #343; to work with WSL V2, wsltty 2.0.0 needed a WSL update \nto [release 1.3.17](https://github.com/microsoft/WSL/releases/tag/1.3.17).)\n\nSince release 3.0.5, WSLtty requires Windows version 1809 (the November 2018 release).\n\nBy end of 2024, wsltty works again with recent updates of the WSL subsystem.\n\n---\n\n### Installation from this repository ###\n\n#### WSLtty installer ([Download](https://github.com/mintty/wsltty/releases) standalone installation) ####\n\nFrom the [release downloads](https://github.com/mintty/wsltty/releases), \nrun the wsltty-VERSION-x86_64-install.exe installer to install \nthe components listed above. Make sure to select a 64-bit installer \non a 64-bit system.\nIf Windows complains with a “Windows protected your PC” popup, \nyou may need to click “Run anyway” to proceed with the installation.\nYou may need to open the Properties of the installer first, tab “General” \nsection “Security” (if available) and select “Unblock”, \nto enable the “Run anyway” button.\n\n#### WSLtty Portable installer\n\nFor a portable installation, e.g. on a USB stick, choose the \n“-install-portable.exe” file for download. Installation will prompt \nfor a portable installation folder interactively. \nFor example, choosing `U:\\opt` will create and use folder \n`U:\\opt\\wsltty` both as installation directory and configuration directory.\nPortable installation does not install any start menu or desktop shortcuts \nand no context menu entries. It creates a shortcut in the selected \nportable installation folder to start the default WSL distribution.\n\nNote: For an update installation, either the parent directory or the target \ndirectory itself can be selected.\n\nNote: If you rename or move the installation directory, the icon of the \n“WSL Terminal Portable” shortcut will not work anymore; re-run the \ninstall-portable.bat script in the installation folder to refresh it.\n\n#### Installation from archive ####\n\nIn case a local anti-virus guard barfs about the wsltty installer, the \nrelease also contains a `.cab` file. Download it, open it, extract its files \nto some temporary deployment directory, and invoke `install.bat` from there, \nor `install-portable.bat` for a portable installation.\n\n#### Quiet installer ####\n\nThe wsltty-VERSION-x86_64-install-quiet.exe installer is intended for \nintegration in another installation framework.\n\n#### Installation from source repository ####\n\nCheckout the wsltty repository, or download the source archive, unpack and rename the directory to `wsltty`.\nInstall Alpine WSL from the Microsoft Store.\nInvoke `make build`, then `make install`.\n\nNote this has to be done within a Cygwin environment. A minimal Cygwin \nenvironment for this purpose would be installed with the \n[Cygwin installer](https://cygwin.com/setup-x86_64.exe) \nfrom [cygwin.com](https://cygwin.com/), \nwith additional packages `make`, `gcc-g++`, `unzip`, `zoo`, `patch`, (`lcab`).\n\n#### Build installers ####\n\nInstall a minimal Cygwin environment plus the additional packages as \nlisted for «Installation from source repository».\nInvoke `make pkg` or just `make`.\n\n#### Installation to non-default locations ####\n\n(For experts)\nWithin the installation process, provide parameters to the script `install.bat`.\nThe optional first parameter designates the installation target,\nthe optional second parameter designates the configuration directory.\n\n### Installation with other package management environments ###\n\nNote: These are 3rd-party packages, not managed by this repository.\n\n#### Windows Package Manager ####\n\n([Check package](https://github.com/microsoft/winget-pkgs/tree/master/manifests/m/Mintty/WSLtty))\nTo install wsltty from the \n[Windows Package Manager Community Repository](https://github.com/microsoft/winget-pkgs), \ninvoke one of\n* `winget install wsltty`\n* `winget upgrade wsltty`\n\n#### Chocolatey ####\n\n([Check package](https://community.chocolatey.org/packages/wsltty))\nIf you use the [Chocolatey package manager](https://chocolatey.org/), \ninvoke one of\n* `choco install wsltty`\n* `choco upgrade wsltty`\n\n#### Scoop ####\n\n([Check package](https://scoop.sh/#/apps?q=wsltty))\nIf you use the [Scoop package manager](https://scoop.sh/), \n* `scoop bucket add extras`\n\nthen, invoke one of\n* `scoop install wsltty`\n* `scoop update wsltty`\n\n### Uninstallation ###\n\nTo uninstall wsltty desktop, start menu, and context menu integration:\nOpen a Windows `cmd`, go into the wsltty installation folder:\n`cd %LOCALAPPDATA%\\wsltty` and run the `uninstall` script.\nTo uninstall wsltty software completely, remove the installation folder manually.\n\n---\n\n### Invocation ###\n\nWSLtty can be invoked with\n* installed Start Menu shortcuts (or Desktop shortcuts if copied there)\n* *.bat scripts (optionally with WSL command as parameters) (see [Command line scripts](#command-line-scripts-wslbat) below)\n* Explorer context menu (if installed from the Start Menu `WSLtty` subfolder)\n\nStarting the mintty terminal directly from the WSLtty installation location \nis discouraged because that would bypass essential options.\n\n#### WSL V2 ####\n\nTerminal communication with WSL via its modes V1 or V2 is handled \nautomatically by wsltty (mintty and the wslbridge2 gateway).\n\n#### Starting issues ####\n\nIf wsltty fails with an \n`Error: Could not fork child process: Resource temporarily unavailable`...,\nits runtime may be affected by some over-ambitious virus defense strategy.\nFor example, with Windows Defender, option “Force randomization for images” \nshould be disabled.\n\nIf wsltty fails with an error message that mentions a disk mount path (e.g. `/mnt/c`),\nworkarounds may be the shutdown of the WSL V2 virtual machine (`wsl --shutdown` on the distro) \nor turning off “fast startup” in the Windows power settings (#246, #248).\n\n#### WSL shell starting issues ####\n\nWith WSL V2, an additional background shell is run which may cause trouble \nfor example when setting up automatic interaction between Windows side and \nWSL side \n(see https://github.com/mintty/wsltty/issues/197#issuecomment-687030527).\nAs a workaround, the following may be added to (the beginning of) the \nWSL shell initialization script `.bashrc` (adapt for other shells):\n```\n    # work around https://github.com/mintty/wsltty/issues/197\n    if [[ -n \"$WSL_DISTRO_NAME\" ]]; then\n      command -v cmd.exe > /dev/null || exit\n    fi\n```\n\n---\n\n### Configuration ###\n\n#### Start Menu and Desktop shortcuts ####\n\nIn the Start Menu, the following shortcuts are installed:\n* Shortcut <img align=absmiddle height=40 src=tux1.png>`WSL Terminal` to start the default WSL distribution (as configured with the Windows tool `wslconfig` or `wsl -s`)\n* For each installed WSL distribution, for example `Ubuntu`, a shortcut like <img align=absmiddle height=40 src=ubuntu1.png>`Ubuntu Terminal` to start in the WSL user home\n\nIn the Start Menu subfolder WSLtty, the following additional shortcuts are installed:\n* Shortcut <img align=absmiddle height=40 src=tux1.png>`WSL Terminal %` to start the default WSL distribution in the Windows %USERPROFILE% home\n* For each installed WSL distribution, for example `Ubuntu`, a shortcut like <img align=absmiddle height=40 src=ubuntu1.png>`Ubuntu Terminal %` to start in the Windows %USERPROFILE% home\n\nOne Desktop shortcut is installed:\n* Shortcut <img align=absmiddle height=40 src=tux1.png>`WSL Terminal` to start the default WSL distribution (as configured with the Windows tool `wslconfig` or `wsl -s`)\n\nOther, distribution-specific shortcuts can be copied to the desktop \nfrom the Start Menu if desired.\n\nThe Start menu folder WSLtty contains the link \n<img align=absmiddle height=25 src=https://user-images.githubusercontent.com/12740416/57078483-a7846a00-6cee-11e9-9c5e-8c2e9e56cae4.png>`configure WSL shortcuts`.\nThis function is initially run when wsltty is installed.\nIt should be rerun after adding or removing WSL distributions, \nin order to create the respective set of shortcuts in the Start menu.\n\n#### Command line scripts `wsl*.bat` ####\n\nWSLtty installs the following scripts into `%LOCALAPPDATA%\\Microsoft\\WindowsApps` \n(and a copy in its application folder `%LOCALAPPDATA%\\wsltty`):\n\n* For each installed WSL distribution, e.g. Ubuntu, a command script like `Ubuntu.bat` to start in the current folder/directory\n* For each installed WSL distribution, e.g. Ubuntu, a command script like `Ubuntu~.bat` to start in the WSL user home\n* `WSL.bat` and `WSL~.bat` to start the default WSL distribution\n\nGiven that `%LOCALAPPDATA%\\Microsoft\\WindowsApps` is in your PATH,\nthe scripts can be invoked from cmd.exe, PowerShell, or via WIN+R.\n\n#### Context menu entries ####\n\nWSLtty provides context menu entries for all installed WSL distributions \nand one for the configured default distribution,\nto start a respective WSL terminal in a specific folder from an Explorer window.\nThey are not installed by default.\n\nTo add launch entries for the default or all WSL distributions to the \nExplorer context menu, or remove them, run the respective script from the \nStart Menu subfolder `WSLtty`:\n* <img align=absmiddle height=25 src=https://user-images.githubusercontent.com/12740416/57078483-a7846a00-6cee-11e9-9c5e-8c2e9e56cae4.png>`add default to context menu`\n  adds context menu entries for the default WSL distribution\n* <img align=absmiddle height=25 src=https://user-images.githubusercontent.com/12740416/57078483-a7846a00-6cee-11e9-9c5e-8c2e9e56cae4.png>`add to context menu`\n  adds context menu entries for all WSL distributions\n* <img align=absmiddle height=25 src=https://user-images.githubusercontent.com/12740416/57078483-a7846a00-6cee-11e9-9c5e-8c2e9e56cae4.png>`remove from context menu`\n  removes context menu entries for WSL distributions\n\n#### Icon ####\n\nWsltty installation and the mintty terminal try to use the icon of the \nrespective WSL distribution. If it cannot be determined, a penguin icon \nis used as a fallback. You can replace it with your preferred default icon \nby replacing the icon file `%LOCALAPPDATA%\\wsltty\\wsl.ico`.\n\n#### Mintty settings ####\n\nMintty can maintain its configuration file in various locations, \nwith the following precedence:\n* file given with mintty option `-c` (not used by wsltty default installation)\n* file `config` in directory given with mintty option `--configdir`\n  * **`%APPDATA%\\wsltty\\config`** in the default wsltty installation\n* `%HOME%\\.minttyrc` (usage deprecated with wsltty)\n* `%HOME%\\.config\\mintty\\config` (usage deprecated with wsltty)\n* common config file for all mintty installation instances\n  * **`%APPDATA%\\mintty\\config`**\n* `%LOCALAPPDATA%\\wsltty\\etc\\minttyrc` (usage deprecated with wsltty)\n\nNote:\n* `%APPDATA%\\wsltty\\config` is the user configuration file location. \n  Further subdirectories of `%APPDATA%\\wsltty` are used for language, \n  themes, and sounds resource configuration. \n  Note the distinction from `%LOCALAPPDATA%\\wsltty` which is the default \n  wsltty software installation location.\n* The `%APPDATA%\\mintty\\config` option provides the possibility to \n  maintain common mintty settings for various installations (like \n  wsltty, Cygwin, MinGW/msys, Git for Windows, MinEd for Windows).\n* (About deprecated options) By default, `%HOME%` would refer to the \n  root directory of the cygwin standalone installation hosting wsltty. \n  So `%HOME%` would mean `%LOCALAPPDATA%\\wsltty\\home\\%USERNAME%`.\n  If you define `HOME` at Windows level, this changes accordingly.\n  Note, however, that the WSL `$HOME` is a completely different setting.\n\n#### Emoji deployment ####\n\nMintty and the wsltty package do not bundle actual emoji graphics but \nthere are scripts to support easy download and deployment.\nIf you have another instance of mintty installed (e.g. in cygwin) \nand have emojis deployed already in the common config folder \n`%APPDATA%\\mintty\\emojis`, they will be reused by wsltty.\n\nTo deploy emojis standalone for wsltty, use the scripts installed in \n`%APPDATA%\\wsltty\\emojis` within WSL:\n* `cd $(wslpath \"$APPDATA/wsltty/emojis\")`\n* `getemojis` to provide emoji graphics as listed by Unicode.org\n* `getflags` to provide emoji flag graphics (extending Unicode dynamically) from various sources\n\n#### Shell selection and Login shell ####\n\nThe WSLtty deployment does not impose a shell preference;\nit invokes the user’s default shell in login mode by the final `-` parameter:\n* `%LOCALAPPDATA%\\wsltty\\bin\\mintty.exe --WSL= --configdir=\"%APPDATA%\\wsltty\" -`\n\nYou may tweak shortcuts, scripts, or context menu entries as follows:\n\nTo launch a default shell in non-login mode, remove the final dash.\n\nTo invoke your preferred shell, replace the final dash with \na shell pathname and an optional `-l` parameter \n* `%LOCALAPPDATA%\\wsltty\\bin\\mintty.exe --WSL= --configdir=\"%APPDATA%\\wsltty\" /bin/bash -l`\n\n---\n\n### WSL locale setup and character encoding ###\n\nCharacter encoding setup by locale setting is propagated from the terminal \ntowards WSL. So you can select your favourite locale with configuration \noptions or with command-line options, for example in a copied dedicated \ndesktop shortcut.\n\nIf for example you wish to run WSL in GB18030 encoding, you may set options\n`Locale=zh_CN` and `Charset=GB18030` and the WSL shell will adopt that \nsetting, provided that the selected locale is configured to be available \nin the locale database of the WSL distribution.\nThis can be achieved in Ubuntu with the following commands:\n* `sudo mkdir -p /var/lib/locales/supported.d`\n* `sudo echo zh_CN.GB18030 GB18030 >> /var/lib/locales/supported.d/local`\n* `sudo locale-gen`\n\n---\n\n### Components and Credits ###\n\nFor mintty, see the [Mintty homepage](http://mintty.github.io/) \n(with further screenshots), \nthe [Mintty manual page](http://mintty.github.io/mintty.1.html), \n<br>and the [Mintty Wiki](https://github.com/mintty/mintty/wiki), \nincluding a [Hints and Tips page](https://github.com/mintty/mintty/wiki/Tips).\n\nIt is based on [Cygwin](http://cygwin.com) \nand includes its runtime library ([sources](http://mirrors.dotsrc.org/cygwin/x86/release/cygwin)).\n\nFor interacting with WSL, [wslbridge](https://github.com/rprichard/wslbridge)\nused to be the gateway prototype.\nMany thanks for this enabling gateway go to Ryan Prichard.\n\nFor recent changes in WSL, particularly WSL mode V2, the new gateway \n[wslbridge2](https://github.com/Biswa96/wslbridge2) is used instead.\nMany thanks for this further development and maintenance go to Biswapriyo Nath.\n\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "3.7.7\n"
        },
        {
          "name": "add default to context menu.lnk",
          "type": "blob",
          "size": 1.919921875,
          "content": null
        },
        {
          "name": "add to context menu.lnk",
          "type": "blob",
          "size": 1.787109375,
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.72265625,
          "content": "# This file is part of wsltty project\n\n# Build image; of course wsltty has nothing to do with Visual Studio -\n# this is just the name of Appveyor's build environment image\n# that also contains cygwin\nimage: Visual Studio 2022\n\n# Version format\nversion: \"#{build}\"\n\n# Do not increment build number after pull requests\npull_requests:\n  do_not_increment_build_number: true\n\n# Do not start a new build when a new Git tag is created\nskip_tags: true\n\ninit:\n- cmd: |\n    set PATH=C:\\cygwin64;C:\\cygwin64\\bin;%windir%\\System32\n    setup-x86_64 -q -P unzip -P zoo -P patch -P lcab\n    winget install Alpine\n\nbuild_script:\n- cmd: |\n    make\n\ntest_script:\n- cmd: |\n    bin\\mintty.exe --log mintty.log --exec echo hello mintty\n    grep echo mintty.log\n"
        },
        {
          "name": "cmd2.bat",
          "type": "blob",
          "size": 0.01953125,
          "content": "%1 \"%from%\" \"%to%\"\r\n"
        },
        {
          "name": "config-distros.sh",
          "type": "blob",
          "size": 13.3505859375,
          "content": "#! /bin/sh\n\n# dash built-in echo enforces interpretation of \\t etc\nechoc () {\n  #cmd /c echo $*\n  printf '%s\\n' \"$*\"\n}\n\ncopy () {\n  from=\"$1\"\n  to=\"$2\"\n  export from to\n  cmd /c cmd2.bat copy\n}\n\ndelete () {\n  from=\"$1\"\n  to=\"$1\"\t# same again, to fill parameter\n  export from to\n  cmd /c cmd2.bat del/F\n}\n\ncompare () {\n  from=\"$1\"\n  to=\"$2\"\n  export from to\n  cmd /c cmd2.bat comp/M\n}\n\n\ncase \"$installdir\" in\n?*)\tcustominst=true;;\n\"\")\tcustominst=false;;\nesac\n\nINSTDIR=\"${installdir:-$LOCALAPPDATA/wsltty}\"\nechoc \"Installing wsltty into $INSTDIR\"\nINSTDIR=`cd \"$INSTDIR\"; pwd`\ninstallcop=${installdir:-\"$LOCALAPPDATA\\\\wsltty\"}\ninstalldir=${installdir:-'%LOCALAPPDATA%\\wsltty'}\n\ntarget=\"$installdir\"'\\bin\\mintty.exe'\ncase \"$INSTDIR\" in\n*/)\tTARGETPATH=\"$INSTDIR\"bin/mintty.exe;;\n*)\tTARGETPATH=\"$INSTDIR\"/bin/mintty.exe;;\nesac\n\nCONFDIR=\"${configdir:-$APPDATA/wsltty}\"\nconfigdir=${configdir:-'%APPDATA%\\wsltty'}\n\nPATH=/bin:\"$PATH\":$SYSTEMROOT/System32\n\ncontextmenu=false\nremove=false\nalldistros=true\nconfig=true\n\ncase \"/$0\" in\n*/wsl*)\n  config=false;;\nesac\n\ncase \"$1\" in\n-info)\n  config=false\n  shift;;\n-shortcuts)\n  shift;;\n-shortcuts-remove)\n  remove=true\n  shift;;\n-default)\n  alldistros=false\n  shift;;\n-contextmenu)\n  contextmenu=true\n  shift;;\n-contextmenu-default)\n  contextmenu=true\n  alldistros=false\n  shift;;\n-contextmenu-remove)\n  contextmenu=true\n  remove=true\n  direckey='/HKEY_CURRENT_USER/Software/Classes/Directory'\n\n  regtool list \"$direckey/shell\" 2>/dev/null |\n  while read name\n  do\n    case `regtool get \"$direckey/shell/$name/command/\"` in\n    *bin\\\\mintty.exe*/bin/wslbridge*|*bin\\\\mintty.exe*--WSL*)\n      regtool remove \"$direckey/shell/$name/command\"\n      regtool remove \"$direckey/shell/$name\"\n      ;;\n    esac\n  done\n\n  regtool list \"$direckey/Background/shell\" 2>/dev/null |\n  while read name\n  do\n    case `regtool get \"$direckey/Background/shell/$name/command/\"` in\n    *bin\\\\mintty.exe*/bin/wslbridge*|*bin\\\\mintty.exe*--WSL*)\n      regtool remove \"$direckey/Background/shell/$name/command\"\n      regtool remove \"$direckey/Background/shell/$name\"\n      ;;\n    esac\n  done\n  exit\n  shift;;\nesac\n\n\nif $config && ! $contextmenu\nthen\n  # remove shortcut entries in Start menu and cmd-line bat shortcuts\n  (cd \"$INSTDIR\"\n   for lnk in *.lnk\n   do\n     if compare \"$lnk\" \"$APPDATA\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\$lnk\"\n     then delete \"$APPDATA\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\$lnk\"\n     fi\n   done\n   for bat in *.bat\n   do\n     if compare \"$bat\" \"$LOCALAPPDATA\\\\Microsoft\\\\WindowsApps\\\\$bat\"\n     then delete \"$LOCALAPPDATA\\\\Microsoft\\\\WindowsApps\\\\$bat\"\n     fi\n   done\n  )\nfi\n\n# test w/o WSL: call this script with REGTOOLFAKE=true dash config-distros.sh\nif ${REGTOOLFAKE:-false}\nthen\nregtool () {\n  case \"$1\" in\n  -*)  shift;;\n  esac\n  key=`echo $2 | sed -e 's,.*{\\(.*\\)}.*,\\1,' -e t -e d`\n  case \"$1.$2\" in\n  list.*)\n        if $contextmenu\n        then  echo \"{0}\"\n        else  echo \"{1}\"; echo \"{2}\"\n        fi;;\n  get.*/DistributionName)\n        echo \"distro$key\";;\n  get.*/BasePath)\n        echo \"C:\\\\Program\\\\{$key}\\\\State\";;\n  get.*/PackageFamilyName)\n        echo \"distro{$key}\";;\n  get.*/PackageFullName)\n        echo \"C:\\\\Program\\\\{$key}\";;\n  esac\n}\nfi\n\n\nif $config\nthen while read line; do echo \"$line\"; done <</EOB > mkbat.bat\n@echo off\r\necho Creating %1.bat\r\n\r\necho @echo off> %1.bat\r\necho rem Start mintty terminal for WSL package %name% in current directory>> %1.bat\r\necho %target% -i \"%icon%\" %minttyargs% %bridgeargs% %%*>> %1.bat\r\n/EOB\nfi\n\nif $custominst && $config && ! $remove\nthen\n  #mkshortcut.exe -n \"add to context menu\" -a \"$installdir/config-distros.sh -contextmenu\" \"$installdir/bin/dash.exe\" -i '%SystemRoot%\\System32\\filemgmt.dll' -s min -d \"\" -w \"$installdir\"\n  #mkshortcut.exe -n \"add default to context menu\" -a \"$installdir/config-distros.sh -contextmenu-default\" \"$installdir/bin/dash.exe\" -i '%SystemRoot%\\System32\\filemgmt.dll' -s min -d \"\" -w \"$installdir\"\n  #mkshortcut.exe -n \"remove from context menu\" -a \"$installdir/config-distros.sh -contextmenu-remove\" \"$installdir/bin/dash.exe\" -i '%SystemRoot%\\System32\\filemgmt.dll' -s min -d \"\" -w \"$installdir\"\n  #mkshortcut.exe -n \"configure WSL shortcuts\" -a \"$installdir/config-distros.sh\" \"$installdir/bin/dash.exe\" -i '%SystemRoot%\\System32\\filemgmt.dll' -s min -d \"\" -w \"$installdir\"\n\n  icon='%SystemRoot%\\System32\\filemgmt.dll'\n  wdir=\"$installdir\"\n  target=\"$installdir/bin/dash.exe\"\n  minttyargs=\"/config-distros.sh\"\n  bridgeargs=\n  export icon wdir target minttyargs bridgeargs\n  cscript /nologo mkshortcut.vbs \"/name:configure WSL shortcuts\" \"/min:true\"\n  bridgeargs=-contextmenu\n  cscript /nologo mkshortcut.vbs \"/name:add to context menu\" \"/min:true\"\n  bridgeargs=-contextmenu-default\n  cscript /nologo mkshortcut.vbs \"/name:add default to context menu\" \"/min:true\"\n  bridgeargs=-contextmenu-remove\n  cscript /nologo mkshortcut.vbs \"/name:remove from context menu\" \"/min:true\"\n\n  copy \"add to context menu.lnk\" \"$APPDATA\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\WSLtty\"\n  copy \"add default to context menu.lnk\" \"$APPDATA\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\WSLtty\"\n  copy \"remove from context menu.lnk\" \"$APPDATA\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\WSLtty\"\n  copy \"configure WSL shortcuts.lnk\" \"$APPDATA\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\WSLtty\"\n\n  # restore target\n  target=\"$installdir\"'\\bin\\mintty.exe'\nfi\n\nlxss=\"/HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/Lxss\"\nschema=\"/HKEY_CURRENT_USER/Software/Classes/Local Settings/Software/Microsoft/Windows/CurrentVersion/AppModel/SystemAppData\"\n\nappex () {\n  while read line\n  do\n\tcase \"$line\" in\n\t*Application*Executable*)\n\t\tfor item in $line\n\t\tdo\tcase \"$item\" in\n\t\t\tExecutable=*)\n\t\t\t\teval $item\n\t\t\t\techo \"$Executable\"\n\t\t\t\tbreak;;\n\t\t\tesac\n\t\tdone\n\t\tbreak;;\n\tesac\n  done < $*\n}\n\nconfig () {\n  guid=\"$1\"\n  ok=false\n  case $guid in\n  {*)\n    distro=`regtool get \"$lxss/$guid/DistributionName\"`\n    case \"$distro\" in\n    Legacy)\n    \tname=\"Bash on Windows\"\n    \tlauncher=\"$SYSTEMROOT/System32/bash.exe\"\n    \t;;\n    *)\tname=\"$distro\"\n    \tlauncher=\"$LOCALAPPDATA/Microsoft/WindowsApps/$distro.exe\"\n    \t;;\n    esac\n    basepath=`regtool get \"$lxss/$guid/BasePath\"`\n    if package=`regtool -q get \"$lxss/$guid/PackageFamilyName\"`\n    then\n    \tdistrinst=`regtool get \"$schema/$package/Schemas/PackageFullName\"`\n    \t# get actual executable path (may not match $distro) from app manifest\n    \tmanifest=\"$ProgramW6432/WindowsApps/$distrinst/AppxManifest.xml\"\n    \tpsh_cmd='([xml]$(Get-Content '\"\\\"$manifest\\\"\"')).Package.Applications.Application.Executable'\n    \texecutable=`appex \"$manifest\"`\n    \tif [ -r \"$ProgramW6432/WindowsApps/$distrinst/$executable\" ]\n    \tthen\ticon=\"$ProgramW6432/WindowsApps/$distrinst/$executable\"\n    \telif [ -r \"$ProgramW6432/WindowsApps/$distrinst/images/icon.ico\" ]\n    \tthen\ticon=\"$ProgramW6432/WindowsApps/$distrinst/images/icon.ico\"\n    \telse\ticon=\"$installcop\"'\\wsl.ico'\n    \tfi\n    \troot=\"$basepath/rootfs\"\n    elif [ -f \"$basepath/$distro.exe\" ]\n    then\n    \ticon=\"$basepath/$distro.exe\"\n    \troot=\"$basepath/rootfs\"\n    elif [ -d \"$LOCALAPPDATA/lxss\" ]\n    then\n    \t# legacy \"Bash on Windows\"\n    \ticon=\"$LOCALAPPDATA/lxss/bash.ico\"\n    \troot=\"$basepath\"\n    else\n    \t# imported distro? (#226, #236)\n    \ticon=\"$installcop\"'\\wsl.ico'\n    \troot=\"$basepath/rootfs\"\n    fi\n\n    # invocation parameters for mintty\n    minttyargs='--WSL=\"'\"$distro\"'\" --configdir=\"'\"$configdir\"'\"'\n    # MINTARGS deprecated; used for mkshortcut.exe rather than mkshortcut.vbs\n    MINTARGS='--WSL=\"'\"$distro\"'\" --configdir=\"'\"$CONFDIR\"'\"'\n    # invocation commands (deprecated for mintty, used for start menu scripts)\n    #bridgeargs='--distro-guid \"'\"$guid\"'\" -t'\n\n    ok=true;;\n  DefaultDistribution|\"\")\t# WSL default installation\n    distro=\n    name=WSL\n    icon=\"$installcop\"'\\wsl.ico'\n    minttyargs='--WSL= --configdir=\"'\"$configdir\"'\"'\n    MINTARGS='--WSL= --configdir=\"'\"$CONFDIR\"'\"'\n    #bridgeargs='-t'\n\n    ok=true;;\n  esac\n  bridgeargs=\" -\"\t# now used to request login mode\n\n  echoc \"distro '$distro'\"\n  echoc \"- name '$name'\"\n  echoc \"- guid $guid\"\n  echoc \"- (launcher $launcher)\"\n  echoc \"- icon $icon\"\n  echoc \"- root $root\"\n  wdir=%USERPROFILE%\n\n  case \"$name\" in\n  docker*)\techo skipping docker system\n  \t\treturn;;\n  esac\n  case \"$root\" in\n  *\\\\Docker*)\techo skipping docker system\n  \t\treturn;;\n  esac\n\n  if $ok && ! $remove && [ -n \"$distro\" ]\n  then\t# fix #163: backend missing +x with certain mount options\n\techo Setting +x wslbridge2 backends for distro \"'$distro'\"\n\t(cd \"$INSTDIR\"; cd bin; PATH=\"${WINDIR}/Sysnative:${PATH}\" wsl.exe -d \"$distro\" chmod +x wslbridge2-backend)\n#\t(cd \"$LOCALAPPDATA/wsltty/bin\"; wsl.exe -d \"$distro\" chmod +x wslbridge2-backend)\n#\t(cd ... ; \"$SYSTEMROOT/System32/bash.exe\" \"$guid\" -c chmod +x wslbridge2-backend)\n  fi\n\n  if $ok && $config\n  then\n    export wdir name target minttyargs bridgeargs icon\n\n    if $contextmenu\n    then\n      # context menu entries\n      direckey='HKEY_CURRENT_USER\\Software\\Classes\\Directory'\n      keyname=\"${name}_Terminal\"\n      if $remove\n      then\n        # obsolete; handled above\n        reg delete \"$direckey\\\\shell\\\\$keyname\" /f\n        reg delete \"$direckey\\\\Background\\\\shell\\\\$keyname\" /f\n      else\n        direckey='/HKEY_CURRENT_USER/Software/Classes/Directory'\n        echoc Registry setting \"$direckey/[Background/]shell/$keyname\"\n        target=\"$installcop\"'\\bin\\mintty.exe'\n\n        regtool add \"$direckey/shell\"\n        regtool add \"$direckey/shell/$keyname\"\n        regtool set \"$direckey/shell/$keyname/\" -s \"$name Terminal\"\n        regtool set \"$direckey/shell/$keyname/Icon\" -s \"$icon\"\n        regtool add \"$direckey/shell/$keyname/command\"\n        regtool set \"$direckey/shell/$keyname/command/\" -s \"\\\"$target\\\" -i \\\"$icon\\\" --dir \\\"%1\\\" $MINTARGS $bridgeargs\"\n\n        regtool add \"$direckey/Background/shell\"\n        regtool add \"$direckey/Background/shell/$keyname\"\n        regtool set \"$direckey/Background/shell/$keyname/\" -s \"$name Terminal\"\n        regtool set \"$direckey/Background/shell/$keyname/Icon\" -s \"$icon\"\n        regtool add \"$direckey/Background/shell/$keyname/command\"\n        regtool set \"$direckey/Background/shell/$keyname/command/\" -s \"\\\"$target\\\" -i \\\"$icon\\\" $MINTARGS $bridgeargs\"\n      fi\n    else\n      # invocation shortcuts and scripts\n      if $remove\n      then\n        delete \"$APPDATA\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\$name Terminal.lnk\"\n        delete \"$LOCALAPPDATA\\\\Microsoft\\\\WindowsApps\\\\$name.bat\"\n        delete \"$LOCALAPPDATA\\\\Microsoft\\\\WindowsApps\\\\$name~.bat\"\n\n        if [ \"$name\" = \"WSL\" ]\n        then\n              # determine actual Desktop folder\n              desktopkey='\\HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\Desktop'\n              desktop=`regtool get \"$desktopkey\"`\n              case \"$desktop\" in\n              %USERPROFILE%*)\tdesktop=\"$USERPROFILE${desktop#%USERPROFILE%}\";;\n              esac\n              delete \"$desktop\\\\$name Terminal.lnk\"\n        fi\n      else\n        # desktop shortcut in %USERPROFILE% -> Start Menu - WSLtty\n        cscript /nologo mkshortcut.vbs \"/name:$name Terminal %\"\n        #mkshortcut.exe -n \"$name Terminal %\" -i \"$icon\" \"$TARGETPATH\" -a \"$MINTARGS\" -d \"\" -w %USERPROFILE%\n        copy \"$name Terminal %.lnk\" \"$APPDATA\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\WSLtty\"\n\n        # launch script in . -> WSLtty home, WindowsApps launch folder\n        cmd /C mkbat.bat \"$name\"\n        copy \"$name.bat\" \"$LOCALAPPDATA\\\\Microsoft\\\\WindowsApps\"\n\n        # store backup copies in installation dir\n        if [ \"$PWD\" != \"$INSTDIR\" ]\n        then\n              copy \"$name Terminal %.lnk\" \"$installcop\"\n              copy \"$name.bat\" \"$installcop\"\n        fi\n\n        # prepare versions to target WSL home directory\n        #bridgeargs=\"-C~ $bridgeargs\"\n        minttyargs=\"$minttyargs -~\"\n        MINTARGS=\"$MINTARGS -~\"\n\n        # desktop shortcut in ~ -> Start Menu\n        cscript /nologo mkshortcut.vbs \"/name:$name Terminal\"\n        #mkshortcut.exe -n \"$name Terminal\" -i \"$icon\" \"$TARGETPATH\" -a \"$MINTARGS\" -d \"\" -w %USERPROFILE%\n        copy \"$name Terminal.lnk\" \"$APPDATA\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\"\n\n        # default desktop shortcut in ~ -> Desktop\n        if [ \"$name\" = \"WSL\" ]\n        then\n              #copy \"$name Terminal.lnk\" \"$USERPROFILE\\\\Desktop\"\n              #copy \"$name Terminal.lnk\" \"$APPDATA\\\\..\\\\Desktop\\\\\"\n              # the above does not work reliably (see #166)\n              # determine actual Desktop folder\n              desktopkey='\\HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\Desktop'\n              desktop=`regtool get \"$desktopkey\"`\n              case \"$desktop\" in\n              %USERPROFILE%*)\tdesktop=\"$USERPROFILE${desktop#%USERPROFILE%}\";;\n              esac\n              copy \"$name Terminal.lnk\" \"$desktop\\\\\"\n        fi\n\n        # launch script in ~ -> WSLtty home, WindowsApps launch folder\n        cmd /C mkbat.bat \"$name~\"\n        copy \"$name~.bat\" \"$LOCALAPPDATA\\\\Microsoft\\\\WindowsApps\"\n\n        # store backup copies in installation dir\n        if [ \"$PWD\" != \"$INSTDIR\" ]\n        then\n              copy \"$name Terminal.lnk\" \"$installcop\"\n              copy \"$name~.bat\" \"$installcop\"\n        fi\n      fi\n\n    fi\n  fi\n}\n\n# ensure proper parameter passing to cmd /C\nchcp.com 65001 # just in case; seems to work without as well\n\n# configure for all distros, plus default distro\nfor guid in `\n  if $alldistros\n  then  regtool list \"$lxss\" 2>/dev/null\n  else  echo DefaultDistribution\n  fi || echo \"No WSL packages registered\" >&2\n`\ndo\tconfig $guid\ndone\n\n"
        },
        {
          "name": "configure WSL shortcuts.lnk",
          "type": "blob",
          "size": 1.76171875,
          "content": null
        },
        {
          "name": "dequote.bat",
          "type": "blob",
          "size": 0.109375,
          "content": "@echo off\r\nrem https://ss64.com/nt/syntax-dequote.html\r\nfor /f \"delims=\" %%A in ('echo %%%1%%') do set %1=%%~A\r\n"
        },
        {
          "name": "install-portable.bat",
          "type": "blob",
          "size": 1.43359375,
          "content": "@echo off\r\n\r\nchcp 65001 > nul\r\n\r\nif not exist \"WSL Terminal Portable.lnk\" goto install\r\necho Rebuilding WSL Terminal Portable shortcut\r\nset instdir=%~dp0\r\ngoto shortcut\r\n\r\n:install\r\n\r\necho Installing WSL Terminal Portable\r\necho Select target folder in popup dialog ...\r\n\r\nset sel=\"Select folder to place installation of portable wsltty\"\r\n\r\nfor /f \"usebackq delims=\" %%f in (`powershell \"(new-object -COM Shell.Application).BrowseForFolder(0, '%sel%', 0, 0).self.path\"`) do set f=%%f\r\nset instdir=%f%\\wsltty\r\nif exist %f%\\LICENSE.mintty set instdir=%f%\r\n\r\nif \"%f%\"==\"\" (\r\n\techo No installation selected\r\n\tpause\r\n\texit\r\n) else if not exist \"%f%\" (\r\n\techo Invalid installation folder %instdir%\r\n\tpause\r\n\texit\r\n)\r\n\r\nrem call main installation\r\ncall install \"%instdir%\" \"%instdir%\" /P\r\nrem this already changes into \"%instdir%\"\r\n\r\nrem copy additional portable installation files\r\nrem do this after call install as that deletes previous .bat files\r\ncopy \"%~dp0\\install-portable.bat\" .\r\ndir \"%instdir%\"\\install-portable.bat\r\n\r\n:shortcut\r\n\r\nrem create shortcut\r\ncd /D \"%instdir%\"\r\nrem set drive-relative path for shortcut working directory and icon\r\nset instpath=%instdir:~2%\r\nset target=%%COMSPEC%%\r\nset minttyargs=/C bin\\mintty.exe --WSL= --icon=/wsl.ico --configdir=. -~\r\nset bridgeargs= -\r\nrem set wdir=%instpath%\r\nrem let mkshortcut set working directory to empty:\r\nset wdir=.\r\nset icon=%instpath%\\wsl.ico\r\ncscript /nologo mkshortcut.vbs \"/name:WSL Terminal Portable\"\r\n\r\n"
        },
        {
          "name": "install.bat",
          "type": "blob",
          "size": 5.8623046875,
          "content": "@echo off\r\n\r\nset refinstalldir=%%LOCALAPPDATA%%\\wsltty\r\nset refconfigdir=%%APPDATA%%\\wsltty\r\nif \"%installdir%\" == \"\" set installdir=\"%LOCALAPPDATA%\\wsltty\"\r\nif \"%configdir%\" == \"\" set configdir=\"%APPDATA%\\wsltty\"\r\ncall dequote installdir\r\ncall dequote configdir\r\nset oldroot=\"%installdir%\"\r\nset oldhomedir=\"%installdir%\\home\\%USERNAME%\"\r\ncall dequote oldroot\r\ncall dequote oldhomedir\r\nset oldconfigdir=\"%oldhomedir%\\.config\\mintty\"\r\ncall dequote oldconfigdir\r\n\r\nrem override installdir, configdir if parameters given\r\nset arg1=%1\r\ncall dequote arg1\r\nif \"%arg1%\" == \"%%arg1%%\" goto deploy\r\nset refinstalldir=%arg1%\r\nset installdir=%arg1%\r\nset arg2=%2\r\ncall dequote arg2\r\nif \"%arg2%\" == \"%%arg2%%\" goto deploy\r\nset refconfigdir=%arg2%\r\nset configdir=%arg2%\r\n\r\n:deploy\r\n\r\nmkdir \"%installdir%\" 2> nul:\r\n\r\nrem clean up previous installation artefacts\r\ndel /Q \"%installdir%\\*.bat\"\r\ndel /Q \"%installdir%\\*.lnk\"\r\n\r\ncopy LICENSE.mintty \"%installdir%\"\r\ncopy LICENSE.wslbridge2 \"%installdir%\"\r\n\r\ncopy \"add to context menu.lnk\" \"%installdir%\"\r\ncopy \"add default to context menu.lnk\" \"%installdir%\"\r\ncopy \"remove from context menu.lnk\" \"%installdir%\"\r\ncopy \"configure WSL shortcuts.lnk\" \"%installdir%\"\r\nrem copy \"WSL Terminal.lnk\" \"%installdir%\"\r\nrem copy \"WSL Terminal %%.lnk\" \"%installdir%\"\r\ncopy config-distros.sh \"%installdir%\"\r\n\r\ncopy mkshortcut.vbs \"%installdir%\"\r\ncopy cmd2.bat \"%installdir%\"\r\ncopy dequote.bat \"%installdir%\"\r\n\r\nrem allow persistent customization of default icon:\r\nif not exist \"%installdir%\\wsl.ico\" copy tux.ico \"%installdir%\\wsl.ico\"\r\n\r\ncopy uninstall.bat \"%installdir%\"\r\n\r\nif not exist \"%installdir%\\bin\" goto instbin\r\nrem move previous programs possibly in use out of the way\r\ndel /Q \"%installdir%\\bin\\*.old\" 2> nul:\r\nren \"%installdir%\\bin\\cygwin1.dll\" cygwin1.dll.old\r\nren \"%installdir%\\bin\\cygwin-console-helper.exe\" cygwin-console-helper.exe.old\r\nren \"%installdir%\\bin\\mintty.exe\" mintty.exe.old\r\nren \"%installdir%\\bin\\wslbridge2.exe\" wslbridge2.exe.old\r\nren \"%installdir%\\bin\\wslbridge2-backend\" wslbridge2-backend.old\r\ndel /Q \"%installdir%\\bin\\*.old\" 2> nul:\r\n\r\n:instbin\r\nmkdir \"%installdir%\\bin\" 2> nul:\r\ncopy cygwin1.dll \"%installdir%\\bin\"\r\ncopy cygwin-console-helper.exe \"%installdir%\\bin\"\r\ncopy mintty.exe \"%installdir%\\bin\"\r\ncopy wslbridge2.exe \"%installdir%\\bin\"\r\ncopy wslbridge2-backend \"%installdir%\\bin\"\r\n\r\ncopy dash.exe \"%installdir%\\bin\"\r\ncopy regtool.exe \"%installdir%\\bin\"\r\ncopy zoo.exe \"%installdir%\\bin\"\r\n\r\nrem copy mkshortcut.exe \"%installdir%\"\\bin\r\nrem copy cygpopt-0.dll \"%installdir%\"\\bin\r\nrem copy cygiconv-2.dll \"%installdir%\"\\bin\r\nrem copy cygintl-8.dll \"%installdir%\"\\bin\r\n\r\nrem create system config directory and copy config archive and scripts\r\nmkdir \"%installdir%\\usr\\share\\mintty\\lang\" 2> nul:\r\ncopy lang.zoo \"%installdir%\\usr\\share\\mintty\\lang\"\r\nmkdir \"%installdir%\\usr\\share\\mintty\\themes\" 2> nul:\r\ncopy themes.zoo \"%installdir%\\usr\\share\\mintty\\themes\"\r\nmkdir \"%installdir%\\usr\\share\\mintty\\sounds\" 2> nul:\r\ncopy sounds.zoo \"%installdir%\\usr\\share\\mintty\\sounds\"\r\nmkdir \"%installdir%\\usr\\share\\mintty\\info\" 2> nul:\r\ncopy charnames.txt \"%installdir%\\usr\\share\\mintty\\info\"\r\nmkdir \"%installdir%\\usr\\share\\mintty\\icon\" 2> nul:\r\ncopy tux.ico \"%installdir%\\usr\\share\\mintty\\icon\"\r\ncopy mintty.ico \"%installdir%\\usr\\share\\mintty\\icon\"\r\nmkdir \"%installdir%\\usr\\share\\mintty\\emojis\" 2> nul:\r\ncopy getemojis \"%installdir%\\usr\\share\\mintty\\emojis\" 2> nul:\r\ncopy getflags \"%installdir%\\usr\\share\\mintty\\emojis\" 2> nul:\r\n\r\n\r\nrem create Start Menu Folder\r\nset smf=\"%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\WSLtty\"\r\ncall dequote smf\r\nmkdir \"%smf%\" 2> nul:\r\n\r\nrem clean up previous installation\r\ndel /Q \"%smf%\\*.lnk\"\r\n\r\ncopy \"wsltty home & help.url\" \"%smf%\"\r\ncopy \"add to context menu.lnk\" \"%smf%\"\r\ncopy \"add default to context menu.lnk\" \"%smf%\"\r\ncopy \"remove from context menu.lnk\" \"%smf%\"\r\ncopy \"configure WSL shortcuts.lnk\" \"%smf%\"\r\nrem copy \"WSL Terminal.lnk\" \"%smf%\"\r\nrem copy \"WSL Terminal %%.lnk\" \"%smf%\"\r\nrem clean up previous installation\r\nrmdir /S /Q \"%smf%\\context menu shortcuts\" 2> nul:\r\n\r\nrem unpack config files in system config directory\r\ncd /D \"%installdir%\\usr\\share\\mintty\\lang\"\r\n\"%installdir%\\bin\\zoo\" xO lang\r\ncd /D \"%installdir%\\usr\\share\\mintty\\themes\"\r\n\"%installdir%\\bin\\zoo\" xO themes\r\ncd /D \"%installdir%\\usr\\share\\mintty\\sounds\"\r\n\"%installdir%\\bin\\zoo\" xO sounds\r\ncd /D \"%installdir%\"\r\n\r\n\r\n:migrate configuration\r\n\r\nrem migrate old config resource files to new config dir\r\nif exist \"%configdir%\" goto configfile\r\nif not exist \"%oldconfigdir%\" goto configfile\r\nif exist \"%oldhomedir%\\.minttyrc\" copy \"%oldhomedir%\\.minttyrc\" \"%oldconfigdir%\\config\" && del \"%oldhomedir%\\.minttyrc\"\r\nxcopy /E /I /Y \"%oldconfigdir%\" \"%configdir%\" && rmdir /S /Q \"%oldconfigdir%\"\r\nrmdir \"%oldhomedir%\\.config\"\r\n:configfile\r\nif exist \"%configdir%\\config\" goto deloldhome\r\nif exist \"%oldhomedir%\\.minttyrc\" copy \"%oldhomedir%\\.minttyrc\" \"%configdir%\\config\" && del \"%oldhomedir%\\.minttyrc\"\r\n:deloldhome\r\nrmdir \"%oldhomedir%\" 2> nul:\r\nrmdir \"%oldroot%\\home\" 2> nul:\r\n\r\n\r\n:userconfig\r\n\r\nrem create user config directory and subfolders, copy scripts\r\nmkdir \"%configdir%\\lang\" 2> nul:\r\nmkdir \"%configdir%\\themes\" 2> nul:\r\nmkdir \"%configdir%\\sounds\" 2> nul:\r\nmkdir \"%configdir%\\emojis\" 2> nul:\r\ncopy \"%installdir%\\usr\\share\\mintty\\emojis\\getemojis\" \"%configdir%\\emojis\" 2> nul:\r\ncopy \"%installdir%\\usr\\share\\mintty\\emojis\\getflags\" \"%configdir%\\emojis\" 2> nul:\r\n\r\nrem create config file if it does not yet exist\r\nif exist \"%configdir%\\config\" goto appconfig\r\necho # To use common configuration in %%APPDATA%%\\mintty, simply remove this file>\"%configdir%\\config\"\r\nif \"%3\" == \"/P\" echo # Do not remove this file for WSLtty Portable>>\"%configdir%\\config\"\r\n\r\n\r\n:appconfig\r\n\r\nrem skip configuration for WSLtty Portable\r\nif \"%3\" == \"/P\" goto end\r\n\r\nrem distro-specific stuff: shortcuts and launch scripts\r\ncd /D \"%installdir%\"\r\necho Configuring for WSL distributions\r\nbin\\dash.exe \"config-distros.sh\"\r\nrem rem bin\\dash.exe \"config-distros.sh\" -contextmenu\r\n\r\n\r\n:end\r\n"
        },
        {
          "name": "makefile",
          "type": "blob",
          "size": 11.44140625,
          "content": "#############################################################################\n# build a wsltty installer package:\n# configure ver=... and minttyver= in this makefile\n# make targets:\n# make [all]\tbuild a distributable installer (default)\n# make pkg\tbuild an installer, bypassing the system checks\n# make build\tbuild the software (no installer)\n# make install\tinstall wsltty locally from build (no installer needed)\n# make wsltty\tbuild the software, using the local copy of mintty\n\n\n# wsltty release\nver=3.7.7\n\n# wsltty appx release - must have 4 parts!\nverx=3.7.7.1\n\n\n##############################\n# mintty release version\n\nminttyver=3.7.7\n\nminrepo=git@github.com:mintty/mintty.git\n\n##############################\n\n# wslbridge2 repository and release version\nrepo=Biswa96/wslbridge2\nwslbridgever=0.13\n\n# wslbridge2 fork repository and version\n#repo=mintty/wslbridge2\n#wslbridgever=0.5.1\n\n\n# wslbridge2 release or fork archive and dir\narchive=v$(wslbridgever)\nwslbridgedir=wslbridge2-$(wslbridgever)\n\n\n# wslbridge2 latest version\n#archive=master\n#wslbridgedir=wslbridge2-$(archive)\n\n\n# wslbridge2 branch or commit version (from fix-window-resize branch) and dir\n#commit=70e0dcea1db122d076ce1578f2a45280cc92d09f\n#commit=8b6dd7ee2b3102d72248990c21764c5cf86c6612\n# trying post-0.12 WSL V2 patches:\n#commit=5b2b652d1a7355b004e7860b4370a585737e5ac9\n#commit=274530b35a05df203d3a69f0e28d5015844f39bd\n# pixel size patch + fix (retagged as 0.13):\n#commit=a7162d852ff438d2d5a8dd8dae61795addb3d980\n#archive=$(commit)\n#wslbridgedir=wslbridge2-$(archive)\n\n\n##############################\n\n# mintty branch or commit version\n#minttyver=master\n\n# wslbridge branch or commit to build from source;\nwslbridge=wslbridge-source wslbridge-frontend wslbridge-backend\n\n##############################\n# build backend on a musl-libc-based distribution\n# (reportedly not needed anymore but untested)\nBuildDistr=-d Alpine\n\n##############################\n# Windows SDK version for appx\nWINSDKKEY=/HKEY_LOCAL_MACHINE/SOFTWARE/WOW6432Node/Microsoft/.NET Framework Platform/Setup/Multi-Targeting Pack\nWINSDKVER=`regtool list '$(WINSDKKEY)' | sed -e '$$ q' -e d`\n\n#############################################################################\n# default target\n\nall:\tall-$(notdir $(CURDIR))\n\n# targets and version checking\n\nall-wsltty:\tcheck committed pkg\n\nall-wsltty.appx:\tappx\n\ncommitted:\n\tif git status -suno | sed -e \"s,^..,,\" | grep .; then false; fi\n\n#############################################################################\n# target checking and some defs\n\nTARGET := $(shell $(CC) -dumpmachine)\n\nifeq ($(TARGET), i686-pc-cygwin)\n  sys := cygwin32\nelse ifeq ($(TARGET), x86_64-pc-cygwin)\n  sys := cygwin64\nelse ifeq ($(TARGET), i686-pc-msys)\n  sys := msys32\nelse ifeq ($(TARGET), x86_64-pc-msys)\n  sys := msys64\nelse\n  $(error Target '$(TARGET)' not supported)\nendif\n\nwget=curl -R -L --connect-timeout 55 -O\nwgeto=curl -R -L --connect-timeout 55\n\n#############################################################################\n# system check:\n# - ensure the path name drag-and-drop adaptation works (-> Cygwin, not MSYS)\n# - 64 Bit (x86_64) for more stable invocation (avoid fork issues)\n\narch:=$(shell uname -m)\n\ncheck:\t# checkarch\n\techo Building for:\n\techo $(arch) | grep .\n\t# checking suitable host environment; run `make pkg` to bypass\n\t# check cygwin (vs msys) for proper drag-and-drop paths:\n\tuname | grep CYGWIN\n\ncheckarch:\n\t# check 32 bit to ensure 32-Bit Windows support, just in case:\n\t#uname -m | grep i686\n\t# check 64 bit to provide 64-Bit stability support:\n\t#uname -m | grep x86_64\n\n#############################################################################\n# patch version information for appx package configuration\n\nfix-verx:\n\techo patching $(WINSDKVER) into Launcher config\n\tcd Launcher; sed -i~ -e \"/<supportedRuntime / s,Version=v[.0-9]*,Version=$(WINSDKVER),\" app.config\n\techo patched app.config\n\tcd Launcher; sed -i~ -e \"/<TargetFrameworkVersion>/ s,v[.0-9]*,$(WINSDKVER),\" Launcher.csproj\n\techo patched Launcher.csproj\n\techo patching $(verx) into app config\n\tsed -i~ -e '/<Identity / s,Version=\"[.0-9]*\",Version=\"$(verx)\",' AppxManifest.xml\n\techo patched AppxManifest.xml\n\n#############################################################################\n# clear binaries\n\nclean:\n\trm -fr $(wslbridgedir)/bin\n\trm -fr bin\n\n#############################################################################\n# generation\n\nwslbridge:\t$(wslbridge)\n\n$(wslbridgedir).zip:\n\t$(wgeto) https://github.com/$(repo)/archive/$(archive).zip -o $(wslbridgedir).zip\n\nwslbridge-source:\t$(wslbridgedir).zip\n\tunzip -o $(wslbridgedir).zip\n\tcp $(wslbridgedir)/LICENSE LICENSE.wslbridge2\n\t# the following two patches are obsolete with wslbridge2 v0.9\n\t# patch to fix #220\n\t# test case in mintty: (sleep 0.1; echo -e \"\\e[31;80t\") & wslbridge2\n\t#cd $(wslbridgedir); patch -p1 < ../0001-notify-size-change-inband.patch\n\t# patch to https://github.com/Biswa96/wslbridge2/commit/41575379b416703c49e2687e957440239a4cdfb7\n\t#cd $(wslbridgedir); patch -p0 < ../0002-add-com-for-lifted-wsl.patch\n\t# patch to fix WSL 2 launching, again\n\t# this was replaced with another patch upstream\n\t#cd $(wslbridgedir); patch -p1 < ../0012-get-vmid-from-registry.patch\n\t# patch to add WINCH/pty pixel size support (Biswa96/wslbridge2#44)\n\t#cd $(wslbridgedir); patch -p1 < ../0013-pty-pixel-size.patch\n\t# patch to fix the pixel patch of 0.13\n\t#cd $(wslbridgedir); patch -p1 < ../0013-pty-pixel-size-fix.patch\n\nwslbridge-frontend:\n\techo ------------- Compiling wslbridge2 frontend\n\tmkdir -p bin\n\t# frontend build\n\tcd $(wslbridgedir)/src; make -f Makefile.frontend RELEASE=1\n\t# extract binaries\n\tcp $(wslbridgedir)/bin/wslbridge2.exe bin/\n\nwindir=$(shell cd \"${WINDIR}\"; pwd)\n\nwslbridge-backend:\n\techo ------------- Compiling wslbridge2 backend\n\t#uname -m | grep x86_64\n\tmkdir -p bin\n\t# provide dependencies for backend build\n\tPATH=\"$(windir)/Sysnative:${PATH}\" cmd /C wsl.exe -u root $(BuildDistr) $(shell env | grep http_proxy=) apk add make g++ linux-headers < /dev/null\n\t# invoke backend build\n\tcd $(wslbridgedir)/src; PATH=\"$(windir)/Sysnative:${PATH}\" cmd /C wsl.exe $(BuildDistr) make -f Makefile.backend RELEASE=1 < /dev/null\n\t# extract binaries\n\tcp $(wslbridgedir)/bin/wslbridge2-backend bin/\n\nmintty-get:\tmintty-git\t# mintty-download or mintty-git\n\tcp mintty-$(minttyver)/icon/terminal.ico mintty.ico\n\nmintty-download:\n\t$(wgeto) https://github.com/mintty/mintty/archive/$(minttyver).zip -o mintty-$(minttyver).zip\n\tunzip -o mintty-$(minttyver).zip\n\nmintty-git:\n\ttest -d mintty-$(minttyver) || git clone --branch $(minttyver) --depth 1 $(minrepo) mintty-$(minttyver)\n\tcd mintty-$(minttyver); git checkout $(minttyver)\n\nwslbuild=LDFLAGS=\"-static -static-libgcc -s\"\nappxbuild=$(wslbuild) CCOPT=-DWSLTTY_APPX\nwslversion=VERSION_SUFFIX=\"– wsltty $(ver)\" WSLTTY_VERSION=\"$(ver)\"\nappxversion=VERSION_SUFFIX=\"– wsltty appx $(verx)\" WSLTTY_VERSION=\"$(verx)\"\n\nmintty-build:\n\t# ensure rebuild of version-specific check and message\n\trm -f mintty-$(minttyver)/bin/*/windialog.o\n\trm -f mintty-$(minttyver)/bin/*/winmain.o\n\t# build mintty\n\tcd mintty-$(minttyver)/src; make $(wslbuild) $(wslversion)\n\tmkdir -p bin\n\tcp mintty-$(minttyver)/bin/mintty.exe bin/\n\tstrip bin/mintty.exe\n\nmintty-build-appx:\n\t# ensure rebuild of version-specific check and message\n\trm -f mintty-$(minttyver)/bin/*/windialog.o\n\t# build mintty\n\tcd mintty-$(minttyver)/src; make $(appxbuild) $(appxversion)\n\tmkdir -p bin\n\tcp mintty-$(minttyver)/bin/mintty.exe bin/\n\tstrip bin/mintty.exe\n\nmintty-pkg:\n\tcp mintty-$(minttyver)/LICENSE LICENSE.mintty\n\tcd mintty-$(minttyver)/lang; zoo a lang *.po; mv lang.zoo ../../\n\tcd mintty-$(minttyver)/themes; zoo a themes *[!~]; mv themes.zoo ../../\n\tcd mintty-$(minttyver)/sounds; zoo a sounds *.wav *.WAV *.md; mv sounds.zoo ../../\n\t# add charnames.txt to support \"Character Info\"\n\tcd mintty-$(minttyver)/src; sh ./mknames\n\tcp mintty-$(minttyver)/src/charnames.txt .\n\nmintty-appx:\n\tmkdir -p usr/share/mintty\n\tcd usr/share/mintty; mkdir -p lang themes sounds info emojis\n\tcp mintty-$(minttyver)/lang/*.po usr/share/mintty/lang/\n\tcp mintty-$(minttyver)/themes/*[!~] usr/share/mintty/themes/\n\tcp mintty-$(minttyver)/sounds/*.wav usr/share/mintty/sounds/\n\tcp mintty-$(minttyver)/sounds/*.WAV usr/share/mintty/sounds/\n\t# add charnames.txt to support \"Character Info\"\n\tcd mintty-$(minttyver)/src; sh ./mknames\n\tcp mintty-$(minttyver)/src/charnames.txt usr/share/mintty/info/\n\tcp /usr/share/mintty/emojis/get*[!~] usr/share/mintty/emojis/\n\ncygwin:\t# mkshortcutexe\n\tmkdir -p bin\n\tcp /bin/cygwin1.dll bin/\n\tcp /bin/cygwin-console-helper.exe bin/\n\tcp /bin/dash.exe bin/\n\tcp /bin/regtool.exe bin/\n\tcp /bin/zoo.exe bin/\n\nmkshortcutexe:\tbin/mkshortcut.exe\n\nbin/mkshortcut.exe:\tmkshortcut.c\n\techo mksh\n\tgcc -o bin/mkshortcut mkshortcut.c -lpopt -lole32 /usr/lib/w32api/libuuid.a\n\tcp /bin/cygpopt-0.dll bin/\n\tcp /bin/cygiconv-2.dll bin/\n\tcp /bin/cygintl-8.dll bin/\n\nappx-bin:\n\tmkdir -p bin\n\tcp /bin/cygwin1.dll bin/\n\tcp /bin/cygwin-console-helper.exe bin/\n\nCAB=wsltty-$(ver)-$(arch)\n\ncopcab:\tver\n\tmkdir -p $(CAB)\n\tcp bin/cygwin1.dll $(CAB)/\n\tcp bin/cygwin-console-helper.exe $(CAB)/\n\tcp bin/dash.exe $(CAB)/\n\tcp bin/regtool.exe $(CAB)/\n\tcp bin/mintty.exe $(CAB)/\n\tcp bin/zoo.exe $(CAB)/\n\tcp lang.zoo $(CAB)/\n\tcp themes.zoo $(CAB)/\n\tcp sounds.zoo $(CAB)/\n\tcp charnames.txt $(CAB)/\n\tcp bin/wslbridge2.exe $(CAB)/\n\tcp bin/wslbridge2-backend $(CAB)/\n\tcp mkshortcut.vbs $(CAB)/\n\t#cp bin/mkshortcut.exe $(CAB)/\n\t#cp bin/cygpopt-0.dll $(CAB)/\n\t#cp bin/cygiconv-2.dll $(CAB)/\n\t#cp bin/cygintl-8.dll $(CAB)/\n\tcp LICENSE.* $(CAB)/\n\tcp VERSION $(CAB)/\n\tcp *.lnk $(CAB)/\n\tcp *.ico $(CAB)/\n\tcp *.url $(CAB)/\n\tcp *.bat $(CAB)/\n\tcp config-distros.sh $(CAB)/\n\tcp mkshortcut.vbs $(CAB)/\n\tcp mintty-$(minttyver)/tools/get*[!~] $(CAB)/\n\ncop:\tcopcab\n\tmkdir -p rel\n\tcp -fl $(CAB)/* rel/\n\ninstaller:\tcop cab normal-installer silent-installer portable-installer\n\ncab:\n\t# build cab archive\n\tlcab -r $(CAB) rel/$(CAB).cab\n\nnormal-installer:\n\t# prepare build of installer\n\trm -f rel/$(CAB)-install.exe\n\tsed -e \"s,%version%,$(ver),\" -e \"s,%arch%,$(arch),\" makewinx.cfg > rel/wsltty.SED\n\t# build installer\n\tcd rel; iexpress /n wsltty.SED\n\nsilent-installer:\n\t# prepare build of installer\n\trm -f rel/$(CAB)-install-quiet.exe\n\tcd rel; sed -e \"/ShowInstallProgramWindow/ s/0/1/\" -e \"/HideExtractAnimation/ s/0/1/\" -e \"/InstallPrompt/ s/=.*/=/\" -e \"/FinishMessage/ s/=.*/=/\" -e \"/TargetName/ s/install.exe/install-quiet.exe/\" wsltty.SED > wsltty-quiet.SED\n\t# build installer\n\tcd rel; iexpress /n wsltty-quiet.SED\n\nInstallPrompt=Install Mintty terminal for WSL Portable?\nFinishMessage=Mintty for WSL Portable installation finished\n\nportable-installer:\n\t# prepare build of installer\n\trm -f rel/$(CAB)-install-portable.exe\n\tcd rel; sed -e \"/InstallPrompt/ s/=.*/=$(InstallPrompt)/\" -e \"/FinishMessage/ s/=.*/=$(FinishMessage)/\" -e \"/AppLaunched/ s/install/install-portable/\" -e \"/TargetName/ s/install.exe/install-portable.exe/\" wsltty.SED > wsltty-portable.SED\n\t# build installer\n\tcd rel; iexpress /n wsltty-portable.SED\n\ninstall:\tcop installbat\n\ninstallbat:\n\tcd rel; cmd /C install\n\nver:\n\techo $(ver) > VERSION\n\nmintty:\tmintty-get mintty-build\n\nmintty-usr:\tmintty-get mintty-appx\n\n# local wsltty build target:\nwsltty:\twslbridge cygwin mintty-build mintty-pkg\n\n# build software without installer:\nbuild:\twslbridge cygwin mintty-get mintty-build mintty-pkg\n\n# standalone wsltty package build target:\npkg:\twslbridge cygwin mintty-get mintty-build mintty-pkg installer\n\n# appx package contents target:\nwsltty-appx:\twslbridge appx-bin mintty-get mintty-build-appx mintty-appx\n\n# appx package target:\nappx:\twsltty-appx fix-verx\n\tsh ./build.sh\n\n#############################################################################\n# end\n"
        },
        {
          "name": "makewinx.cfg",
          "type": "blob",
          "size": 2.005859375,
          "content": "[Version]\r\nClass=IEXPRESS\r\nSEDVersion=3\r\n\r\n[Options]\r\nPackagePurpose=InstallApp\r\nShowInstallProgramWindow=0\r\nHideExtractAnimation=0\r\nUseLongFileName=1\r\nInsideCompressed=0\r\nCAB_FixedSize=0\r\nCAB_ResvCodeSigning=0\r\nRebootMode=N\r\nInstallPrompt=%InstallPrompt%\r\nDisplayLicense=%DisplayLicense%\r\nFinishMessage=%FinishMessage%\r\nTargetName=%TargetName%\r\nFriendlyName=%FriendlyName%\r\nAppLaunched=%AppLaunched%\r\nPostInstallCmd=%PostInstallCmd%\r\nAdminQuietInstCmd=%AdminQuietInstCmd%\r\nUserQuietInstCmd=%UserQuietInstCmd%\r\nSourceFiles=SourceFiles\r\n\r\n[Strings]\r\nInstallPrompt=Install Mintty terminal for WSL?\r\nDisplayLicense=\r\nFinishMessage=Mintty for WSL installed - for documentation and configuration see https://github.com/mintty/wsltty\r\nTargetName=wsltty-%version%-%arch%-install.exe\r\nFriendlyName=wsltty\r\nAppLaunched=cmd.exe /c install.bat\r\nPostInstallCmd=<None>\r\nAdminQuietInstCmd=\r\nUserQuietInstCmd=\r\nFILE0=\"cygwin1.dll\"\r\nFILE1=\"cygwin-console-helper.exe\"\r\nFILE2=\"mintty.exe\"\r\nFILE3=\"wslbridge2.exe\"\r\nFILE4=\"wslbridge2-backend\"\r\nFILE5=\"LICENSE.mintty\"\r\nFILE6=\"LICENSE.wslbridge2\"\r\nFILE7=\"config-distros.sh\"\r\nFILE8=\"configure WSL shortcuts.lnk\"\r\nFILE9=\"charnames.txt\"\r\nFILE10=\"VERSION\"\r\nFILE11=\"dash.exe\"\r\nFILE12=\"regtool.exe\"\r\nFILE13=\"install.bat\"\r\nFILE14=\"uninstall.bat\"\r\nFILE15=\"tux.ico\"\r\nFILE16=\"add to context menu.lnk\"\r\nFILE17=\"add default to context menu.lnk\"\r\nFILE18=\"remove from context menu.lnk\"\r\nFILE19=\"wsltty home & help.url\"\r\nFILE20=\"zoo.exe\"\r\nFILE21=\"lang.zoo\"\r\nFILE22=\"themes.zoo\"\r\nFILE23=\"sounds.zoo\"\r\nFILE24=\"mintty.ico\"\r\nFILE25=\"mkshortcut.vbs\"\r\nFILE26=\"dequote.bat\"\r\nFILE27=\"cmd2.bat\"\r\nFILE28=\"install-portable.bat\"\r\nFILE29=\"getemojis\"\r\nFILE30=\"getflags\"\r\n\r\n[SourceFiles]\r\nSourceFiles0=.\r\n\r\n[SourceFiles0]\r\n%FILE0%=\r\n%FILE1%=\r\n%FILE2%=\r\n%FILE3%=\r\n%FILE4%=\r\n%FILE5%=\r\n%FILE6%=\r\n%FILE7%=\r\n%FILE8%=\r\n%FILE9%=\r\n%FILE10%=\r\n%FILE11%=\r\n%FILE12%=\r\n%FILE13%=\r\n%FILE14%=\r\n%FILE15%=\r\n%FILE16%=\r\n%FILE17%=\r\n%FILE18%=\r\n%FILE19%=\r\n%FILE20%=\r\n%FILE21%=\r\n%FILE22%=\r\n%FILE23%=\r\n%FILE24%=\r\n%FILE25%=\r\n%FILE26%=\r\n%FILE27%=\r\n%FILE28%=\r\n%FILE29%=\r\n%FILE30%=\r\n\r\n"
        },
        {
          "name": "mkshortcut.c",
          "type": "blob",
          "size": 23.1015625,
          "content": "/* This is a tweaked version of mkshortcut.c -- create a Windows shortcut\n   Changes:\n   * Facilitate path entries starting with Windows environment variables.\n     (works for working directory and icon location but not for target path)\n   * Do not barf on Windows path syntax.\n */\n\n#include <sys/cygwin.h>\n#include <string.h>\n#include <wchar.h>\n\n#define dont_debug_cygwin_create_path\n\n/* Preserve leading Windows environment variable for shortcut entries.\n   So e.g. %USERPROFILE% is not pseudo-resolved to some subdirectory \n   but can be used as working directory.\n   NOTE:\n   This works for working directory and icon location but not for the \n   target path which is still polluted with a drive prefix by Windows.\n */\nvoid * _cygwin_create_path (int line, cygwin_conv_path_t what, const void *from)\n{\n  what &= CCP_CONVTYPE_MASK;\n  void * to = cygwin_create_path(what, from);\n  if (what == CCP_WIN_W_TO_POSIX ? *(wchar_t*)from == '%' : *(char*)from == '%') {\n    if (what == CCP_POSIX_TO_WIN_W) {\n      to = wcschr(to, '%') ?: to;\n    } else {\n      to = strchr(to, '%') ?: to;\n    }\n  }\n#ifdef debug_cygwin_create_path\n  switch (what) {\n    case CCP_POSIX_TO_WIN_A:\n      printf(\"[%d] %s -> %s\\n\", line, from, to);\n      break;\n    case CCP_POSIX_TO_WIN_W:\n      printf(\"[%d] %s -> %ls\\n\", line, from, to);\n      break;\n    case CCP_WIN_A_TO_POSIX:\n      printf(\"[%d] %s -> %s\\n\", line, from, to);\n      break;\n    case CCP_WIN_W_TO_POSIX:\n      printf(\"[%d] %ls -> %s\\n\", line, from, to);\n      break;\n  }\n#endif\n  return to;\n}\n\n#define cygwin_create_path(what, from)\t_cygwin_create_path(__LINE__, what, from)\n\n\n/* mkshortcut.c -- create a Windows shortcut\n *\n * Copyright (c) 2002 Joshua Daniel Franklin\n *\n * Unicode-enabled by (C) 2015 Thomas Wolff\n * semantic changes:\n        Allow dir to be empty (legal in shortcut)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * See the COPYING file for full license information.\n *\n * Exit values\n *   1: user error (syntax error)\n *   2: system error (out of memory, etc.)\n *   3: windows error (interface failed)\n *\n * Compile with: gcc -o mkshortcut mkshortcut.c -lpopt -lole32 /usr/lib/w32api/libuuid.a\n *  (You'd need to uncomment the moved to common.h lines.)\n *\n */\n\n#if HAVE_CONFIG_H\n# include \"config.h\"\n#endif\n\n//#include \"common.h\"\n#include <stdio.h>\n#include <popt.h>\n#include <sys/stat.h>\n#include <errno.h>\n#define PACKAGE_VERSION \"*\"\n\n#include <locale.h>\n\n#include <wchar.h>\n\n#define NOCOMATTRIBUTE\n\n#include <shlobj.h>\n#include <olectl.h>\n/* moved to common.h */\n/*\n#include <stdio.h>\n#include <popt.h>\n*/\n#include <sys/cygwin.h>\n#include <string.h> // strlen\n\n\nstatic const char versionID[] = PACKAGE_VERSION;\nstatic const char revID[] =\n  \"$Id$\";\nstatic const char copyrightID[] =\n  \"Copyright (c) 2002\\nJoshua Daniel Franklin. All rights reserved.\\nLicensed under GPL v2.0\\n\";\n\ntypedef struct optvals_s\n{\n  int icon_flag;\n  int unix_flag;\n  int windows_flag;\n  int allusers_flag;\n  int desktop_flag;\n  int smprograms_flag;\n  int show_flag;\n  int offset;\n  char *name_arg;\n  char *desc_arg;\n  char *dir_name_arg;\n  char *argument_arg;\n  char *target_arg;\n  char *icon_name_arg;\n} optvals;\n\nstatic int mkshortcut (optvals opts);\nstatic void printTopDescription (FILE * f, char *name);\nstatic void printBottomDescription (FILE * f, char *name);\nstatic const char *getVersion ();\nstatic void usage (FILE * f, char *name);\nstatic void help (FILE * f, char *name);\nstatic void version (FILE * f, char *name);\nstatic void license (FILE * f, char *name);\n\nstatic char *program_name;\nstatic poptContext optCon;\n\nstatic WCHAR *\ntowcs (const char * s)\n{\n  int sizew = (strlen (s) * 2 + 1); // worst case: surrogates\n  WCHAR * ws = malloc (sizew * sizeof (WCHAR));\n  mbstowcs (ws, s, sizew);\n  return ws;\n}\n\nint\nmain (int argc, const char **argv)\n{\n  const char **rest;\n  int rc;\n  int ec = 0;\n  optvals opts;\n\n  const char *tmp_str;\n  int icon_offset_flag;\n  const char *arg;\n\n  struct poptOption helpOptionsTable[] = {\n    {\"help\", 'h', POPT_ARG_NONE, NULL, '?',\n     \"Show this help message\", NULL},\n    {\"usage\", '\\0', POPT_ARG_NONE, NULL, 'u',\n     \"Display brief usage message\", NULL},\n    {\"version\", 'v', POPT_ARG_NONE, NULL, 'v',\n     \"Display version information\", NULL},\n    {\"license\", '\\0', POPT_ARG_NONE, NULL, 'l',\n     \"Display licensing information\", NULL},\n    {NULL, '\\0', 0, NULL, 0, NULL, NULL}\n  };\n\n  struct poptOption generalOptionsTable[] = {\n    {\"arguments\", 'a', POPT_ARG_STRING, NULL, 'a',\n     \"Use arguments ARGS\", \"ARGS\"},\n    {\"desc\", 'd', POPT_ARG_STRING, NULL, 'd',\n     \"Text for description/tooltip (defaults to POSIX path of TARGET)\",\n     \"DESC\"},\n    {\"icon\", 'i', POPT_ARG_STRING, NULL, 'i',\n     \"Icon file for link to use\", \"ICONFILE\"},\n    {\"iconoffset\", 'j', POPT_ARG_INT, &(opts.offset), 'j',\n     \"Offset of icon in icon file (default is 0)\", NULL},\n    {\"name\", 'n', POPT_ARG_STRING, NULL, 'n',\n     \"Name for link (defaults to TARGET)\", \"NAME\"},\n    {\"show\", 's', POPT_ARG_STRING, NULL, 's',\n     \"Window to show: normal, minimized, maximized\", \"norm|min|max\"},\n    {\"workingdir\", 'w', POPT_ARG_STRING, NULL, 'w',\n     \"Set working directory (defaults to directory path of TARGET)\", \"PATH\"},\n    {\"allusers\", 'A', POPT_ARG_VAL, &(opts.allusers_flag), 1,\n     \"Use 'All Users' instead of current user for -D,-P\", NULL},\n    {\"desktop\", 'D', POPT_ARG_VAL, &(opts.desktop_flag), 1,\n     \"Create link relative to 'Desktop' directory\", NULL},\n    {\"smprograms\", 'P', POPT_ARG_VAL, &(opts.smprograms_flag), 1,\n     \"Create link relative to Start Menu 'Programs' directory\", NULL},\n    {NULL, '\\0', 0, NULL, 0, NULL, NULL}\n  };\n\n  struct poptOption opt[] = {\n    {NULL, '\\0', POPT_ARG_INCLUDE_TABLE, generalOptionsTable, 0,\n     \"General options\", NULL},\n    {NULL, '\\0', POPT_ARG_INCLUDE_TABLE, helpOptionsTable, 0,\n     \"Help options\", NULL},\n    {NULL, '\\0', 0, NULL, 0, NULL, NULL}\n  };\n\n  setlocale (LC_CTYPE, \"\");\n\n  tmp_str = strrchr (argv[0], '/');\n  if (tmp_str == NULL)\n    {\n      tmp_str = strrchr (argv[0], '\\\\');\n    }\n  if (tmp_str == NULL)\n    {\n      tmp_str = argv[0];\n    }\n  else\n    {\n      tmp_str++;\n    }\n  if ((program_name = strdup (tmp_str)) == NULL)\n    {\n      fprintf (stderr, \"%s: memory allocation error\\n\", argv[0]);\n      exit (2);\n    }\n\n  icon_offset_flag = 0;\n\n  opts.offset = 0;\n  opts.icon_flag = 0;\n  opts.unix_flag = 0;\n  opts.windows_flag = 0;\n  opts.allusers_flag = 0;\n  opts.desktop_flag = 0;\n  opts.smprograms_flag = 0;\n  opts.show_flag = SW_SHOWNORMAL;\n  opts.target_arg = NULL;\n  opts.argument_arg = NULL;\n  opts.name_arg = NULL;\n  opts.desc_arg = NULL;\n  opts.dir_name_arg = NULL;\n  opts.icon_name_arg = NULL;\n\n  /* Parse options */\n  optCon = poptGetContext (NULL, argc, argv, opt, 0);\n  poptSetOtherOptionHelp (optCon, \"[OPTION]* TARGET\");\n  while ((rc = poptGetNextOpt (optCon)) > 0)\n    {\n      switch (rc)\n        {\n        case '?':\n          help (stdout, program_name);\n          goto exit;\n        case 'u':\n          usage (stdout, program_name);\n          goto exit;\n        case 'v':\n          version (stdout, program_name);\n          goto exit;\n        case 'l':\n          license (stdout, program_name);\n          goto exit;\n        case 'd':\n          if (arg = poptGetOptArg (optCon))\n            {\n              if ((opts.desc_arg = strdup (arg)) == NULL)\n                {\n                  fprintf (stderr, \"%s: memory allocation error\\n\",\n                           program_name);\n                  ec = 2;\n                  goto exit;\n                }\n            }\n          break;\n        case 'i':\n          opts.icon_flag = 1;\n          if (arg = poptGetOptArg (optCon))\n            {\n              opts.icon_name_arg = (char *) cygwin_create_path (\n                  CCP_POSIX_TO_WIN_A, arg);\n              if (opts.icon_name_arg == NULL)\n                {\n                  fprintf (stderr, \"%s: error converting posix path to win32 (%s)\\n\",\n                           program_name, strerror (errno));\n                  ec = 2;\n                  goto exit;\n                }\n            }\n          break;\n        case 'j':\n          icon_offset_flag = 1;\n          break;\n        case 'n':\n          if (arg = poptGetOptArg (optCon))\n            {\n              if ((opts.name_arg = strdup (arg)) == NULL)\n                {\n                  fprintf (stderr, \"%s: memory allocation error\\n\",\n                           program_name);\n                  ec = 2;\n                  goto exit;\n                }\n            }\n          break;\n        case 's':\n          if (arg = poptGetOptArg (optCon))\n            {\n              if (strcmp (arg, \"min\") == 0)\n                {\n                  opts.show_flag = SW_SHOWMINNOACTIVE;\n                }\n              else if (strcmp (arg, \"max\") == 0)\n                {\n                  opts.show_flag = SW_SHOWMAXIMIZED;\n                }\n              else if (strcmp (arg, \"norm\") == 0)\n                {\n                  opts.show_flag = SW_SHOWNORMAL;\n                }\n              else\n                {\n                  fprintf (stderr, \"%s: %s not valid for show window\\n\",\n                           program_name, arg);\n                  ec = 2;\n                  goto exit;\n                }\n            }\n          break;\n        case 'w':\n          if (arg = poptGetOptArg (optCon))\n            {\n              if ((opts.dir_name_arg = strdup (arg)) == NULL)\n                {\n                  fprintf (stderr, \"%s: memory allocation error\\n\",\n                           program_name);\n                  ec = 2;\n                  goto exit;\n                }\n            }\n          break;\n        case 'a':\n          if (arg = poptGetOptArg (optCon))\n            {\n              if ((opts.argument_arg = strdup (arg)) == NULL)\n                {\n                  fprintf (stderr, \"%s: memory allocation error\\n\",\n                           program_name);\n                  ec = 2;\n                  goto exit;\n                }\n            }\n          break;\n          // case 'A' \n          // case 'D'\n          // case 'P' all handled by popt itself\n        }\n    }\n\n  if (icon_offset_flag & !opts.icon_flag)\n    {\n      fprintf (stderr,\n               \"%s: --iconoffset|-j only valid in conjuction with --icon|-i\\n\",\n               program_name);\n      usage (stderr, program_name);\n      ec = 1;\n      goto exit;\n    }\n\n  if (opts.smprograms_flag && opts.desktop_flag)\n    {\n      fprintf (stderr,\n               \"%s: --smprograms|-P not valid in conjuction with --desktop|-D\\n\",\n               program_name);\n      usage (stderr, program_name);\n      ec = 1;\n      goto exit;\n    }\n\n  if (rc < -1)\n    {\n      fprintf (stderr, \"%s: bad argument %s: %s\\n\",\n               program_name, poptBadOption (optCon, POPT_BADOPTION_NOALIAS),\n               poptStrerror (rc));\n      ec = 1;\n      goto exit;\n    }\n\n  rest = poptGetArgs (optCon);\n\n  if (rest && *rest)\n    {\n      if ((opts.target_arg = strdup (*rest)) == NULL)\n        {\n          fprintf (stderr, \"%s: memory allocation error\\n\", program_name);\n          ec = 2;\n          goto exit;\n        }\n      rest++;\n      if (rest && *rest)\n        {\n          fprintf (stderr, \"%s: Too many arguments: \", program_name);\n          while (*rest)\n            fprintf (stderr, \"%s \", *rest++);\n          fprintf (stderr, \"\\n\");\n          usage (stderr, program_name);\n          ec = 1;\n        }\n      else\n        {\n          // THE MEAT GOES HERE\n          ec = mkshortcut (opts);\n        }\n    }\n  else\n    {\n      fprintf (stderr, \"%s: TARGET not specified\\n\", program_name);\n      usage (stderr, program_name);\n      ec = 1;\n    }\n\nexit:\n  return ec;\n}\n\nstatic char *\nxstrncat (char **dest, const char *add)\n{\n  size_t n = strlen (add);\n  size_t len = strlen (*dest) + n + 1;\n  char *s = (char *) realloc (*dest, len * sizeof (char));\n  if (!s)\n  {\n    fprintf (stderr, \"%s: out of memory\\n\", program_name);\n    exit (2);\n  }\n  *dest = s;\n  return strncat (*dest, add, n);\n}\n\nint\nmkshortcut (optvals opts)\n{\n  char * link_name = NULL;\n  WCHAR * exe_name = NULL;\n  WCHAR * dir_name = NULL;\n  WCHAR * desc = NULL;\n  char * buf_str;\n  char * tmp_str;\n  char * base_str;\n  int tmp;\n\n  /* For OLE interface */\n  LPITEMIDLIST id;\n  HRESULT hres;\n  IShellLinkW * shell_link;\n  IPersistFile * persist_file;\n\n  exe_name = (WCHAR *) cygwin_create_path (CCP_POSIX_TO_WIN_W, opts.target_arg);\n  if (!exe_name)\n    {\n      fprintf (stderr, \"%s: error converting posix path to win32 (%s)\\n\",\n               program_name, strerror (errno));\n      return 2;\n    }\n\n#ifdef colon_stuff\n  /*  If there's a colon in the TARGET, it should be a URL */\n  if (strchr (opts.target_arg, ':') != NULL)\n    {\n      /*  Nope, somebody's trying a W32 path  */\n      if (opts.target_arg[1] == ':')\n        {\n          fprintf (stderr, \"%s: all paths must be in POSIX format\\n\",\n                   program_name);\n          usage (stderr, program_name);\n          return 1;\n        }\n      dir_name = L\"\";\n    }\n  /* Convert TARGET to win32 path */\n  else\n#endif\n    {\n      buf_str = strdup (opts.target_arg);\n\n      if (opts.dir_name_arg != NULL)\n      /*  Get a working dir from 'w' option */\n        {\n#ifdef colon_stuff\n          if (strchr (opts.dir_name_arg, ':') != NULL)\n            {\n              fprintf (stderr, \"%s: all paths must be in POSIX format\\n\",\n                       program_name);\n              usage (stderr, program_name);\n              return 1;\n            }\n#endif\n          dir_name = (WCHAR *) cygwin_create_path (CCP_POSIX_TO_WIN_W,\n                                                   opts.dir_name_arg);\n          if (!dir_name)\n          {\n            fprintf (stderr, \"%s: error converting posix path to win32 (%s)\\n\",\n                     program_name, strerror (errno));\n            return 2;\n          }\n        }\n      else\n      /*  Allow dir to be empty (legal in shortcut) */\n        {\n          dir_name = L\"\";\n        }\n    }\n\n  /*  Generate a name for the link if not given */\n  if (opts.name_arg == NULL)\n    {\n      /*  Strip trailing /'s if any */\n      buf_str = strdup (opts.target_arg);\n      base_str = buf_str;\n      tmp_str = buf_str;\n      tmp = strlen (buf_str) - 1;\n      while (strrchr (buf_str, '/') == (buf_str + tmp))\n        {\n          buf_str[tmp] = '\\0';\n          tmp--;\n        }\n      /*  Get basename */\n      while (*buf_str)\n        {\n          if (*buf_str == '/')\n            tmp_str = buf_str + 1;\n          buf_str++;\n        }\n      link_name = strdup (tmp_str);\n    }\n  /*  User specified a name, so check it and convert  */\n  else\n    {\n      if (opts.desktop_flag || opts.smprograms_flag)\n        {\n          /*  Cannot have absolute path relative to Desktop/SM Programs */\n          if (opts.name_arg[0] == '/')\n            {\n              fprintf (stderr,\n                       \"%s: absolute pathnames not allowed with -D/-P\\n\",\n                       program_name);\n              usage (stderr, program_name);\n              return 1;\n            }\n        }\n      /*  Sigh. Another W32 path */\n#ifdef colon_stuff\n      if (strchr (opts.name_arg, ':') != NULL)\n        {\n          fprintf (stderr, \"%s: all paths must be in POSIX format\\n\",\n                   program_name);\n          usage (stderr, program_name);\n          return 1;\n        }\n#endif\n      link_name = (char *) cygwin_create_path (\n          CCP_POSIX_TO_WIN_A | CCP_RELATIVE, opts.name_arg);\n          // passing multi-byte characters transparently per byte\n      if (!link_name)\n      {\n        fprintf (stderr, \"%s: error converting posix path to win32 (%s)\\n\",\n                 program_name, strerror (errno));\n        return 2;\n      }\n    }\n\n  /*  Add suffix to link name if necessary */\n  if (strlen (link_name) > 4)\n    {\n      tmp = strlen (link_name) - 4;\n      if (strncmp (link_name + tmp, \".lnk\", 4) != 0)\n        xstrncat (&link_name, \".lnk\");\n    }\n  else\n    xstrncat (&link_name, \".lnk\");\n\n  /*  Prepend relative path if necessary  */\n  if (opts.desktop_flag)\n    {\n      char local_buf[MAX_PATH];\n      buf_str = strdup (link_name);\n\n      if (!opts.allusers_flag)\n        SHGetSpecialFolderLocation (NULL, CSIDL_DESKTOPDIRECTORY, &id);\n      else\n        SHGetSpecialFolderLocation (NULL, CSIDL_COMMON_DESKTOPDIRECTORY, &id);\n      SHGetPathFromIDList (id, local_buf);\n      /*  Make sure Win95 without \"All Users\" has output  */\n      if (strlen (local_buf) == 0)\n        {\n          SHGetSpecialFolderLocation (NULL, CSIDL_DESKTOPDIRECTORY, &id);\n          SHGetPathFromIDList (id, local_buf);\n        }\n      link_name = strdup (local_buf);\n      xstrncat (&link_name, \"\\\\\");\n      xstrncat (&link_name, buf_str);\n    }\n\n  if (opts.smprograms_flag)\n    {\n      char local_buf[MAX_PATH];\n      buf_str = strdup (link_name);\n\n      if (!opts.allusers_flag)\n        SHGetSpecialFolderLocation (NULL, CSIDL_PROGRAMS, &id);\n      else\n        SHGetSpecialFolderLocation (NULL, CSIDL_COMMON_PROGRAMS, &id);\n      SHGetPathFromIDList (id, local_buf);\n      /*  Make sure Win95 without \"All Users\" has output  */\n      if (strlen (local_buf) == 0)\n        {\n          SHGetSpecialFolderLocation (NULL, CSIDL_PROGRAMS, &id);\n          SHGetPathFromIDList (id, local_buf);\n        }\n      link_name = strdup (local_buf);\n      xstrncat (&link_name, \"\\\\\");\n      xstrncat (&link_name, buf_str);\n    }\n\n  /*  Make link name Unicode-compliant  */\n  WCHAR * widename = towcs (link_name);\n\n  /* After Windows 7, saving link to relative path fails; work around that */\n#ifdef corrupt_memory\n  WCHAR widepath[MAX_PATH];\n  hres = GetFullPathNameW (widename, sizeof (widepath), widepath, NULL);\n  if (hres == 0)\n    {\n      fprintf (stderr, \"%s: Could not qualify link name\\n\", program_name);\n      return 2;\n    }\n#else\n  WCHAR * widepath = (WCHAR *) cygwin_create_path (CCP_POSIX_TO_WIN_W, link_name);\n#endif\n  link_name = (char *) cygwin_create_path (CCP_WIN_W_TO_POSIX, widepath);\n\n  /* Setup description text */\n  if (opts.desc_arg != NULL)\n    {\n      desc = towcs (opts.desc_arg);\n    }\n  else\n    {\n      /* Put the POSIX path in the \"Description\", just to be nice */\n      desc = towcs (cygwin_create_path (CCP_WIN_A_TO_POSIX, exe_name));\n      if (!desc)\n      {\n        fprintf (stderr, \"%s: error converting win32 path to posix (%s)\\n\",\n                 program_name, strerror (errno));\n        return 2;\n      }\n    }\n\n  /*  Beginning of Windows interface */\n  hres = OleInitialize (NULL);\n  if (hres != S_FALSE && hres != S_OK)\n    {\n      fprintf (stderr, \"%s: Could not initialize OLE interface\\n\",\n               program_name);\n      return 3;\n    }\n\n  hres =\n    CoCreateInstance (&CLSID_ShellLink, NULL, CLSCTX_INPROC_SERVER,\n                      &IID_IShellLinkW, (void **) &shell_link);\n  if (SUCCEEDED (hres))\n    {\n      hres =\n        shell_link->lpVtbl->QueryInterface (shell_link, &IID_IPersistFile,\n                                            (void **) &persist_file);\n      if (SUCCEEDED (hres))\n        {\n          shell_link->lpVtbl->SetPath (shell_link, exe_name);\n          shell_link->lpVtbl->SetDescription (shell_link, desc);\n          shell_link->lpVtbl->SetWorkingDirectory (shell_link, dir_name);\n          if (opts.argument_arg)\n            shell_link->lpVtbl->SetArguments (shell_link,\n                                              towcs (opts.argument_arg));\n          if (opts.icon_flag)\n            shell_link->lpVtbl->SetIconLocation (shell_link,\n                                                 towcs (opts.icon_name_arg),\n                                                 opts.offset);\n          if (opts.show_flag != SW_SHOWNORMAL)\n            shell_link->lpVtbl->SetShowCmd (shell_link, opts.show_flag);\n\n          hres = persist_file->lpVtbl->Save (persist_file, widepath, TRUE);\n          if (!SUCCEEDED (hres))\n            {\n              fprintf (stderr,\n                       \"%s: Saving \\\"%s\\\" failed; does the target directory exist?\\n\",\n                       program_name, link_name);\n              return 3;\n            }\n          persist_file->lpVtbl->Release (persist_file);\n          shell_link->lpVtbl->Release (shell_link);\n\n          /* If we are creating shortcut for all users, ensure it is readable by all users */\n          if (opts.allusers_flag)\n            {\n              char *posixpath = (char *) cygwin_create_path (\n                CCP_WIN_W_TO_POSIX | CCP_ABSOLUTE, widepath);\n              if (posixpath && *posixpath)\n                {\n                  struct stat statbuf;\n                  if (stat (posixpath, &statbuf))\n                  {\n                    fprintf (stderr,\n                             \"%s: stat \\\"%s\\\" failed\\n\",\n                             program_name, posixpath);\n                  }\n                  else if (chmod (posixpath, statbuf.st_mode|S_IRUSR|S_IRGRP|S_IROTH))\n                  {\n                    fprintf (stderr,\n                             \"%s: chmod \\\"%s\\\" failed\\n\",\n                             program_name, posixpath);\n                  }\n                }\n            }\n          return 0;\n        }\n      else\n        {\n          fprintf (stderr, \"%s: QueryInterface failed\\n\", program_name);\n          return 3;\n        }\n    }\n  else\n    {\n      fprintf (stderr, \"%s: CoCreateInstance failed\\n\", program_name);\n      return 3;\n    }\n}\n\nstatic const char *\ngetVersion ()\n{\n  return versionID;\n}\n\nstatic void\nprintTopDescription (FILE * f, char *name)\n{\n  char s[20];\n  fprintf (f, \"%s is part of cygutils version %s\\n\", name, getVersion ());\n  fprintf (f, \"  create a Windows shortcut\\n\\n\");\n}\n\nstatic void\nprintBottomDescription (FILE * f, char *name)\n{\n  fprintf (f,\n           \"\\nNOTE: All filename arguments must be in unix (POSIX) format\\n\");\n}\n\nstatic void\nprintLicense (FILE * f, char *name)\n{\n  fprintf (f,\n           \"This program is free software: you can redistribute it and/or modify\\n\"\n           \"it under the terms of the GNU General Public License as published by\\n\"\n           \"the Free Software Foundation, either version 3 of the License, or\\n\"\n           \"(at your option) any later version.\\n\\n\"\n           \"This program is distributed in the hope that it will be useful,\\n\"\n           \"but WITHOUT ANY WARRANTY; without even the implied warranty of\\n\"\n           \"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n\"\n           \"GNU General Public License for more details.\\n\\n\"\n           \"You should have received a copy of the GNU General Public License\\n\"\n           \"along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n\"\n           \"See the COPYING file for full license information.\\n\");\n}\n\nstatic void\nusage (FILE * f, char *name)\n{\n  poptPrintUsage (optCon, f, 0);\n}\n\nstatic void\nhelp (FILE * f, char *name)\n{\n  printTopDescription (f, name);\n  poptPrintHelp (optCon, f, 0);\n  printBottomDescription (f, name);\n}\n\nstatic void\nversion (FILE * f, char *name)\n{\n  printTopDescription (f, name);\n  fprintf (f, copyrightID);\n}\n\nstatic void\nlicense (FILE * f, char *name)\n{\n  printTopDescription (f, name);\n  printLicense (f, name);\n}\n"
        },
        {
          "name": "mkshortcut.vbs",
          "type": "blob",
          "size": 2.291015625,
          "content": "rem cscript mkshortcut.vbs [/param:arg] /target:link\r\n\r\nrem /target:%LOCALAPPDATA%\\wsltty\\bin\\mintty.exe\r\nrem /wdir:%USERPROFILE%\r\nrem /icon:%LOCALAPPDATA%\\wsltty\\wsl.ico\r\nrem deprecated: /icon:%LOCALAPPDATA%\\lxss\\bash.ico\r\nrem deprecated: %\r\nrem /arguments:--wsl -o Locale=C -o Charset=UTF-8 /bin/wslbridge -t /bin/bash\r\nrem deprecated: ~\r\nrem /arguments:--wsl -o Locale=C -o Charset=UTF-8 /bin/wslbridge -C~ -t /bin/bash\r\nrem deprecated: -l\r\nrem /arguments:--wsl -o Locale=C -o Charset=UTF-8 /bin/wslbridge -t /bin/bash -l\r\n\r\nrem General - Name:\r\nname = Wscript.Arguments.Named(\"name\") & \".lnk\"\r\nset wshell = WScript.CreateObject(\"WScript.Shell\")\r\nwscript.echo \"Creating \" & name\r\nset lnk = wshell.CreateShortcut(name)\r\n\r\nrem Target:\r\nrem lnk.TargetPath = Wscript.Arguments.Named(\"target\")\r\nrem lnk.Arguments = Wscript.Arguments.Named(\"arguments\")\r\n\r\nlnk.TargetPath = wshell.ExpandEnvironmentStrings(\"%target%\")\r\nminttyargs = wshell.ExpandEnvironmentStrings(\"%minttyargs%\")\r\nbridgeargs = wshell.ExpandEnvironmentStrings(\"%bridgeargs%\")\r\nlnk.Arguments = minttyargs & \" \" & bridgeargs\r\nrem wscript.echo \"minttyargs: \" & minttyargs\r\nrem wscript.echo lnk.Arguments\r\n\r\nrem Start in:\r\nrem Working directory; Arguments.Named would take \"/wdir:C:\\...\" parameters\r\nrem wdir = Wscript.Arguments.Named(\"wdir\")\r\nrem Working directory; function ExpandEnvironmentStrings cannot pass empty\r\nwdir = wshell.ExpandEnvironmentStrings(\"%wdir%\")\r\nif IsEmpty(wdir) then\r\n  lnk.WorkingDirectory = \"%USERPROFILE%\"\r\nelseif wdir = \".\" then\r\n  lnk.WorkingDirectory = \"\"\r\nelse\r\n  lnk.WorkingDirectory = wdir\r\nend if\r\n\r\nrem Icon:\r\nrem icon = Wscript.Arguments.Named(\"icon\")\r\nrem rem iconoffset = Wscript.Arguments.Named(\"iconoffset\")\r\nrem rem icon = icon & \", \" & iconoffset\r\nicon = wshell.ExpandEnvironmentStrings(\"%icon%\")\r\nrem wscript.echo \"icon: \" & icon\r\nlnk.IconLocation = icon\r\nrem rem lnk.IconLocation = \"%LOCALAPPDATA%\\lxss\\bash.ico\"\r\nrem lnk.IconLocation = \"%LOCALAPPDATA%\\wsltty\\wsl.ico\"\r\n\r\nrem Shorcut key:\r\nrem lnk.HotKey = \"ALT+CTRL+W\"\r\n\r\nrem Run:\r\nrem 1: Normal 7: Minimized 3: Maximized\r\nrem lnk.WindowStyle = 1\r\nmin = Wscript.Arguments.Named(\"min\")\r\nif min then\r\n  lnk.WindowStyle = 7\r\nend if\r\n\r\nrem Comment:\r\nrem lnk.IconLocation = Wscript.Arguments.Named(\"desc\")\r\nrem lnk.Description = \"WSLtty\"\r\n\r\nlnk.Save\r\nwscript.echo \"Created \" & name\r\nwscript.echo\r\n"
        },
        {
          "name": "remove from context menu.lnk",
          "type": "blob",
          "size": 1.80078125,
          "content": null
        },
        {
          "name": "tux.ico",
          "type": "blob",
          "size": 472.505859375,
          "content": null
        },
        {
          "name": "tux1.png",
          "type": "blob",
          "size": 14.2626953125,
          "content": null
        },
        {
          "name": "ubuntu1.png",
          "type": "blob",
          "size": 15.146484375,
          "content": null
        },
        {
          "name": "uninstall.bat",
          "type": "blob",
          "size": 0.5234375,
          "content": "@echo off\r\n\r\nif \"%installdir%\" == \"\" set installdir=\"%LOCALAPPDATA%\\wsltty\"\r\ncall dequote installdir\r\n\r\n\r\n:shortcuts\r\n\r\nrem delete Start Menu Folder\r\nset smf=\"%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\WSLtty\"\r\ncall dequote smf\r\nrmdir /S /Q \"%smf%\"\r\n\r\n\r\n:start menu\r\n\r\ncd /D \"%installdir%\"\r\nbin\\dash.exe config-distros.sh -shortcuts-remove\r\n\r\n\r\n:explorer context menu\r\n\r\ncd /D \"%installdir%\"\r\nbin\\dash.exe config-distros.sh -contextmenu-remove\r\n\r\n\r\n:undeploy\r\n\r\ncd /D \"%installdir%\"\r\nrem currently not removing software\r\n\r\n\r\n:end\r\n"
        },
        {
          "name": "wsltty home & help.url",
          "type": "blob",
          "size": 0.0546875,
          "content": "[InternetShortcut]\r\nURL=https://github.com/mintty/wsltty"
        },
        {
          "name": "wsltty.png",
          "type": "blob",
          "size": 10.669921875,
          "content": null
        }
      ]
    }
  ]
}