{
  "metadata": {
    "timestamp": 1736710119190,
    "page": 753,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DanBloomberg/leptonica",
      "stars": 1842,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5859375,
          "content": "# backup files\n*~\n\n# build directories\n/build*\n/.cppan*\n/.sw*\n/win*\n/bin\n\n# files in prog without a .\n/prog/*\n!/prog/*/\n!/prog/*.*\n\n# files generated by build\n*.exe\n*.la\n*.lo\n*.log\n*.o\n*.pc\n*.lnk\n.deps\n.libs\nmakefile\nMakefile\nMakefile.in\n/aclocal.m4\n/autom4te.cache\n/config/\n/config.status\n/config_auto.h\n/configure\n/lib/\n/libtool\n/m4/\n/obj/\n/src/endianness.h\n/stamp-h1\ncmake/templates/LeptonicaConfig-version.cmake\ncmake/templates/LeptonicaConfig.cmake\n\n# files generated by compiling conv2doxy\nconv2doxy\n\n# files generated by doxygen\n/doxygen.log\n/doc/*.tmp\n/doc/html/*\n\n# test results\n/prog/*.trs\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 12.9150390625,
          "content": "#\n# leptonica\n#\n\n# ##############################################################################\n#\n# cmake settings\n#\n# ##############################################################################\n\ncmake_minimum_required(VERSION 3.10)\ncmake_policy(SET CMP0054 NEW)\n\n# In-source builds are disabled.\nif(\"${CMAKE_CURRENT_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_BINARY_DIR}\")\n  message(\n    FATAL_ERROR\n      \"CMake generation is not possible within the source directory!\"\n      \"\\n Remove the CMakeCache.txt file and try again from another folder\"\n      \", e.g.:\\n \"\n      \"\\n rm CMakeCache.txt\"\n      \"\\n mkdir build\"\n      \"\\n cd build\"\n      \"\\n cmake ..\")\nendif()\n\nset(CMAKE_MODULE_PATH \"${CMAKE_MODULE_PATH};${CMAKE_CURRENT_SOURCE_DIR}/cmake\")\n\nset(EXECUTABLE_OUTPUT_PATH \"${CMAKE_CURRENT_BINARY_DIR}/bin\")\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${EXECUTABLE_OUTPUT_PATH}\")\n\n# Use solution folders.\nset_property(GLOBAL PROPERTY USE_FOLDERS ON)\nset_property(GLOBAL PROPERTY PREDEFINED_TARGETS_FOLDER \"CMake Targets\")\n\n# ##############################################################################\n#\n# project settings\n#\n# ##############################################################################\n\nproject(\n  leptonica\n  LANGUAGES C\n  VERSION 1.85.1)\nset(CMAKE_C_STANDARD 11)\nset(CMAKE_C_STANDARD_REQUIRED ON)\n\n# Standard installation paths\ninclude(GNUInstallDirs)\n\nset(MINIMUM_WEBPMUX_VERSION 0.5.0)\n\noption(BUILD_PROG \"Build utility programs\" OFF)\nif(WIN32)\n  option(SW_BUILD \"Build with sw\" ON)\nelse()\n  option(SW_BUILD \"Build with sw\" OFF)\nendif()\nif(UNIX OR MINGW)\n  option(SYM_LINK \"Create symlink leptonica -> lept on UNIX\" OFF)\nendif()\noption(STRICT_CONF\n       \"Strict configuration - fail when the optional library is not found\" OFF)\noption(ENABLE_ZLIB \"Enable ZLIB support\" ON)\noption(ENABLE_PNG \"Enable PNG support\" ON)\noption(ENABLE_GIF \"Enable GIF support\" ON)\noption(ENABLE_JPEG \"Enable JPEG support\" ON)\noption(ENABLE_TIFF \"Enable TIFF support\" ON)\noption(ENABLE_WEBP \"Enable WebP support\" ON)\noption(ENABLE_OPENJPEG \"Enable OpenJPEG support\" ON)\n\nset(leptonica_INSTALL_CMAKE_DIR\n    \"lib/cmake/leptonica\"\n    CACHE STRING \"Install destination for CMake package files\")\n\nif(NOT SW_BUILD)\n  find_package(PkgConfig QUIET)\n  if(ENABLE_ZLIB)\n    find_package(ZLIB)\n    if(ZLIB_FOUND)\n      set(pkgs_private \"${pkgs_private} zlib\")\n    else()\n      if(STRICT_CONF)\n        message(\n          FATAL_ERROR\n            \"Could not find ZLIB libs.\\n Use -DENABLE_ZLIB=OFF to disable ZLIB support.\"\n        )\n      endif(STRICT_CONF)\n    endif(ZLIB_FOUND)\n  endif(ENABLE_ZLIB)\n  if(ENABLE_PNG)\n    find_package(PNG)\n    if(PNG_FOUND)\n      set(pkgs_private \"${pkgs_private} libpng\")\n    else()\n      if(STRICT_CONF)\n        message(\n          FATAL_ERROR\n            \"Could not find PNG libs.\\n Use -DENABLE_PNG=OFF to disable PNG support.\"\n        )\n      endif(STRICT_CONF)\n    endif(PNG_FOUND)\n  endif(ENABLE_PNG)\n  if(ENABLE_GIF)\n    find_package(GIF 5)\n    if(GIF_FOUND)\n      set(libs_private \"${libs_private} -lgif\")\n    else()\n      if(STRICT_CONF)\n        message(\n          FATAL_ERROR\n            \"Could not find GIF 5 libs.\\n Use -DENABLE_GIF=OFF to disable GIF support.\"\n        )\n      endif(STRICT_CONF)\n    endif(GIF_FOUND)\n  endif(ENABLE_GIF)\n  if(ENABLE_JPEG)\n    find_package(JPEG)\n    if(JPEG_FOUND)\n      set(pkgs_private \"${pkgs_private} libjpeg\")\n    else()\n      if(STRICT_CONF)\n        message(\n          FATAL_ERROR\n            \"Could not find JPEG libs.\\n Use -DENABLE_JPEG=OFF to disable JPEG support.\"\n        )\n      endif(STRICT_CONF)\n    endif(JPEG_FOUND)\n  endif(ENABLE_JPEG)\n  if(ENABLE_TIFF)\n    find_package(TIFF)\n    if(TIFF_FOUND)\n      set(pkgs_private \"${pkgs_private} libtiff-4\")\n    else()\n      if(STRICT_CONF)\n        message(\n          FATAL_ERROR\n            \"Could not find TIFF libs.\\n Use -DENABLE_TIFF=OFF to disable TIFF support.\"\n        )\n      endif(STRICT_CONF)\n    endif(TIFF_FOUND)\n  endif(ENABLE_TIFF)\n  if(ENABLE_WEBP)\n    find_package(WebP ${MINIMUM_WEBPMUX_VERSION} CONFIG)\n    set(pkgs_private \"${pkgs_private} libwebp libwebpmux\")\n    if(NOT TARGET WebP::webp)\n      find_path(WebP_INCLUDE_DIR  NAMES webp/decode.h)\n      find_path(WebP_MUX_INCLUDE_DIR NAMES webp/mux.h)\n      find_library(WebP_LIBRARY NAMES webp)\n      find_library(WebP_MUX_LIBRARY NAMES webpmux)\n      if(WebP_INCLUDE_DIR\n         AND WebP_MUX_INCLUDE_DIR\n         AND WebP_LIBRARY)\n        message(STATUS \"Found non-cmake WebP: ${WebP_LIBRARY}\")\n        set(WebP_INCLUDE_DIR S \"${WebP_INCLUDE_DIR};${WebP_MUX_INCLUDE_DIR}\")\n        set(WebP_LIBRARIES \"${WebP_LIBRARY}\")\n        if(WebP_MUX_LIBRARY)\n          list(APPEND WebP_LIBRARIES \"${WebP_MUX_LIBRARY}\")\n        else()\n          message(STATUS \"Library webpmux not found!\")\n        endif(WebP_MUX_LIBRARY)\n        set(WebP_FOUND 1)\n      endif()  # WebP_INCLUDE_DIR\n    endif(NOT TARGET WebP::webp)\n    if(WebP_FOUND)\n      set(HAVE_LIBWEBP 1)\n      set(HAVE_LIBWEBP_ANIM 1)\n      include_directories(${WebP_INCLUDE_DIR})\n      include_directories(${WebP_MUX_INCLUDE_DIR})\n       message(STATUS \"Found WebP: ${WebP_LIBRARIES} (${WebP_VERSION})\")\n      else()\n        message(\n          STATUS\n            \"WebP_INCLUDE_DIR : ${WebP_INCLUDE_DIR}\\nWebP_MUX_INCLUDE_DIR: ${WebP_MUX_INCLUDE_DIR}\\nWebP_LIBRARY: ${WebP_LIBRARY}\\nWebP_MUX_LIBRARY: ${WebP_MUX_LIBRARY}\"\n        )\n        if(STRICT_CONF)\n          message(\n            FATAL_ERROR\n              \"Could not find WebP libs.\\n Use -DENABLE_WEBP=OFF to disable WebP support.\"\n          )\n        endif(STRICT_CONF)\n    endif(WebP_FOUND)\n  endif(ENABLE_WEBP)\n  if(ENABLE_OPENJPEG)\n    find_package(OpenJPEG CONFIG)\n    if(OpenJPEG_FOUND)\n      set(OPENJPEG_VERSION ${OPENJPEG_MAJOR_VERSION}.${OPENJPEG_MINOR_VERSION})\n        if(${OPENJPEG_VERSION} LESS \"2.1\")\n          message (STATUS \"Your libopenjp version is too old ${OPENJPEG_VERSION}\")\n          set(HAVE_LIBJP2K 0)\n        else(${OPENJPEG_VERSION} LESS \"2.1\")\n          set(pkgs_private \"${pkgs_private} libopenjp2\")\n          set(HAVE_LIBJP2K 1)\n          include_directories(${OPENJPEG_INCLUDE_DIRS})\n          if(WIN32)\n            if(BUILD_SHARED_LIBS)\n              add_definitions(-DOPJ_EXPORTS)\n            else()\n              add_definitions(-DOPJ_STATIC)\n            endif()\n          endif(WIN32)\n          message(STATUS\n          \"Found OpenJPEG: ${OPENJPEG_LIBRARIES} (${OPENJPEG_VERSION}.${OPENJPEG_BUILD_VERSION})\")\n        endif(${OPENJPEG_VERSION} LESS \"2.1\")\n    else()\n      if(STRICT_CONF)\n        message(\n          FATAL_ERROR\n          \"Could not find OpenJPEG libs.\\n Use -DENABLE_OPENJPEG=OFF to disable OpenJPEG support.\"\n        )\n      endif(STRICT_CONF)\n    endif(OpenJPEG_FOUND)\n  endif(ENABLE_OPENJPEG)\nelse() # SW_BUILD=ON\n  find_package(SW REQUIRED)\n  sw_add_package(\n    org.sw.demo.gif org.sw.demo.jpeg org.sw.demo.glennrp.png org.sw.demo.tiff\n    org.sw.demo.webmproject.webp org.sw.demo.uclouvain.openjpeg.openjp2)\n  sw_execute()\n\n  add_definitions(\n    -DHAVE_LIBGIF=1\n    -DHAVE_LIBJPEG=1\n    -DHAVE_LIBPNG=1\n    -DHAVE_LIBTIFF=1\n    -DHAVE_LIBWEBP=1\n    -DHAVE_LIBWEBP_ANIM=1\n    -DHAVE_LIBZ=1\n    -DHAVE_LIBJP2K=1)\nendif()\n\ninclude(CheckLibraryExists)\n\ncheck_library_exists(m sin \"\" HAVE_LIBM)\nif(HAVE_LIBM)\n  set(libs_private \"${libs_private} -lm\")\nendif(HAVE_LIBM)\n\nif(${CMAKE_SYSTEM_NAME} MATCHES \"kFreeBSD.*|DragonFly.*|FreeBSD\")\n  set(FREEBSD ON)\nendif(${CMAKE_SYSTEM_NAME} MATCHES \"kFreeBSD.*|DragonFly.*|FreeBSD\")\n\n# ##############################################################################\n#\n# compiler and linker\n#\n# ##############################################################################\n\nif(CMAKE_C_COMPILER_ID MATCHES \"Clang\")\n  set(CLANG 1)\nendif()\n\n# Set a default build type if none was specified\nif(NOT CMAKE_BUILD_TYPE)\n  message(STATUS \"Setting build type to 'Release' as none was specified.\")\n  set(CMAKE_BUILD_TYPE\n      Release\n      CACHE STRING \"Choose the type of build.\" FORCE)\n  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"Debug\" \"Release\")\nelse()\n  message(\"CMAKE_BUILD_TYPE = ${CMAKE_BUILD_TYPE}\")\nendif()\n\ninclude(CheckCCompilerFlag)\n\n# Check for valid compiler flags\nmacro(CHECK_CCXX_COMPILER_FLAG flag_ result_)\n  check_c_compiler_flag(${flag_} C_HAS${result_})\nendmacro()\n\nif(MSVC)\n  add_definitions(-D_CRT_SECURE_NO_WARNINGS)\n  add_compile_options(\"$<$<CONFIG:Release>:/W1;/Ox>\")\n  add_compile_options(\"$<$<CONFIG:Debug>:/W4;/DDEBUG>\")\n  if(NOT CLANG)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} /MP\")\n  endif()\nelse()\n  if(CMAKE_BUILD_TYPE MATCHES \"[Dd][Ee][Bb][Uu][Gg]\")\n    # Enable warnings and Optimize for Debugging\n    foreach(\n      flag_\n      -Wall\n      -Wextra\n      -Werror=format-security\n      -pedantic\n      -Og\n      -g3\n      \"-fdebug-prefix-map=${CMAKE_SOURCE_DIR}=.\")\n      string(REGEX REPLACE \"[^A-Za-z0-9]\" \"_\" flag_var \"${flag_}\")\n      check_ccxx_compiler_flag(${flag_} ${flag_var})\n      if(C_HAS${flag_var})\n        set(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} ${flag_}\")\n      endif()\n    endforeach()\n    add_definitions(-DDEBUG)\n  endif()\nendif()\n\n# ##############################################################################\n#\n# configure\n#\n# ##############################################################################\n\nset(AUTOCONFIG_SRC ${CMAKE_CURRENT_BINARY_DIR}/config_auto.h.in)\nset(AUTOCONFIG ${CMAKE_CURRENT_BINARY_DIR}/src/config_auto.h)\nif(HAVE_LIBJP2K)\n  set(ADDITIONAL_INCLUDE_DIRS \"${JP2K_INCLUDE_DIR}\")\nendif()\nset(CMAKE_REQUIRED_INCLUDES\n    ${CMAKE_REQUIRED_INCLUDES} \"${CMAKE_PREFIX_PATH}/include\"\n    \"${CMAKE_INSTALL_PREFIX}/include\" \"${ADDITIONAL_INCLUDE_DIRS}\")\n\ninclude(Configure)\n\nconfigure_file(${AUTOCONFIG_SRC} ${AUTOCONFIG} @ONLY)\n\nset(INCLUDE_DIR \"${CMAKE_INSTALL_PREFIX}/include\"\n                \"${CMAKE_INSTALL_PREFIX}/include/leptonica\")\n\n# ##############################################################################\n#\n# Show summary\n#\n# ##############################################################################\nmessage(STATUS)\nmessage(STATUS \"General configuration for Leptonica ${VERSION_PLAIN}\")\nmessage(STATUS \"--------------------------------------------------------\")\nmessage(STATUS \"Build type: ${CMAKE_BUILD_TYPE}\")\nmessage(STATUS \"Compiler: ${CMAKE_C_COMPILER_ID}\")\nmessage(STATUS \"C compiler options:\n  ${CMAKE_C_FLAGS_${CMAKE_BUILD_TYPE_UP}} ${CMAKE_C_FLAGS}\")\nmessage(STATUS \"Linker options: ${CMAKE_EXE_LINKER_FLAGS}\n  ${CMAKE_EXE_LINKER_FLAGS_${CMAKE_BUILD_TYPE_UP}}\")\nmessage(STATUS \"Install directory: ${CMAKE_INSTALL_PREFIX}\")\nmessage(STATUS)\nmessage(STATUS \"Build with sw [SW_BUILD]: ${SW_BUILD}\")\nmessage(STATUS \"Build utility programs [BUILD_PROG]: ${BUILD_PROG}\")\nif(NOT SW_BUILD)\n  message(STATUS \"Used ZLIB library: ${ZLIB_LIBRARIES}\")\n  message(STATUS \"Used PNG library:  ${PNG_LIBRARIES}\")\n  message(STATUS \"Used JPEG library: ${JPEG_LIBRARIES}\")\n  message(STATUS \"Used OpenJPEG library: ${OPENJPEG_LIBRARIES}\")\n  message(STATUS \"Used TIFF library: ${TIFF_LIBRARIES}\")\n  message(STATUS \"Used GIF library:  ${GIF_LIBRARIES}\")\n  message(STATUS \"Used WebP library: ${WebP_LIBRARIES}\")\nendif()\nmessage(STATUS \"--------------------------------------------------------\")\nmessage(STATUS)\n\n# ##############################################################################\n#\n# build\n#\n# ##############################################################################\n\nadd_definitions(-DHAVE_CONFIG_H)\n\ninclude_directories(${CMAKE_CURRENT_SOURCE_DIR}/src)\ninclude_directories(${CMAKE_CURRENT_BINARY_DIR}/src)\n\nif(BUILD_PROG)\n  add_subdirectory(prog)\nendif()\n\nadd_subdirectory(src)\n\nget_target_property(leptonica_NAME leptonica NAME)\nget_target_property(leptonica_OUTPUT_NAME leptonica OUTPUT_NAME)\n\nconfigure_file(lept.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/lept.pc.in @ONLY)\n# to resolve generator expression in OUTPUT_NAME\nset(pkg_conf_name lept.pc)\nif(WIN32)\n  set(pkg_conf_name lept_$<CONFIG>.pc)\nendif(WIN32)\nfile(GENERATE\n    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${pkg_conf_name}\n    INPUT ${CMAKE_CURRENT_BINARY_DIR}/lept.pc.in)\n\nconfigure_file(\n  ${CMAKE_CURRENT_SOURCE_DIR}/cmake/templates/LeptonicaConfig-version.cmake.in\n  ${CMAKE_CURRENT_BINARY_DIR}/LeptonicaConfig-version.cmake @ONLY)\nconfigure_file(\n  ${CMAKE_CURRENT_SOURCE_DIR}/cmake/templates/LeptonicaConfig.cmake.in\n  ${CMAKE_CURRENT_BINARY_DIR}/LeptonicaConfig.cmake @ONLY)\n\ninstall(FILES ${CMAKE_CURRENT_BINARY_DIR}/${pkg_conf_name}\n        DESTINATION lib/pkgconfig)\ninstall(FILES ${CMAKE_CURRENT_BINARY_DIR}/LeptonicaConfig.cmake\n              ${CMAKE_CURRENT_BINARY_DIR}/LeptonicaConfig-version.cmake\n        DESTINATION ${leptonica_INSTALL_CMAKE_DIR})\n\n# ##############################################################################\n# uninstall target\n# ##############################################################################\nif(NOT TARGET uninstall)\n  configure_file(\n    \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/templates/cmake_uninstall.cmake.in\"\n    \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\" IMMEDIATE @ONLY)\n\n  add_custom_target(\n    uninstall COMMAND ${CMAKE_COMMAND} -P\n                      ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)\nendif()\n\n# ##############################################################################\n"
        },
        {
          "name": "Doxyfile",
          "type": "blob",
          "size": 104.12109375,
          "content": "# Doxyfile 1.8.14\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project.\n#\n# All text after a double hash (##) is considered a comment and is placed in\n# front of the TAG it is preceding.\n#\n# All text after a single hash (#) is considered a comment and will be ignored.\n# The format is:\n# TAG = value [value, ...]\n# For lists, items can also be appended using:\n# TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\\\" \\\").\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# This tag specifies the encoding used for all characters in the config file\n# that follow. The default is UTF-8 which is also the encoding used for all text\n# before the first occurrence of this tag. Doxygen uses libiconv (or the iconv\n# built into libc) for the transcoding. See\n# https://www.gnu.org/software/libiconv/ for the list of possible encodings.\n# The default value is: UTF-8.\n\nDOXYFILE_ENCODING      = UTF-8\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded by\n# double-quotes, unless you are using Doxywizard) that should identify the\n# project for which the documentation is generated. This name is used in the\n# title of most generated pages and in a few other places.\n# The default value is: My Project.\n\nPROJECT_NAME           = Leptonica\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 1.85.1\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          = \"Image processing and image analysis suite\"\n\n# With the PROJECT_LOGO tag one can specify a logo or an icon that is included\n# in the documentation. The maximum height of the logo should not exceed 55\n# pixels and the maximum width should not exceed 200 pixels. Doxygen will copy\n# the logo to the output directory.\n\nPROJECT_LOGO           = moller52.jpg\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path\n# into which the generated documentation will be written. If a relative path is\n# entered, it will be relative to the location where doxygen was started. If\n# left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       = doc\n\n# If the CREATE_SUBDIRS tag is set to YES then doxygen will create 4096 sub-\n# directories (in 2 levels) under the output directory of each output format and\n# will distribute the generated files over these directories. Enabling this\n# option can be useful when feeding doxygen a huge amount of source files, where\n# putting all generated files in the same directory would otherwise causes\n# performance problems for the file system.\n# The default value is: NO.\n\nCREATE_SUBDIRS         = NO\n\n# If the ALLOW_UNICODE_NAMES tag is set to YES, doxygen will allow non-ASCII\n# characters to appear in the names of generated files. If set to NO, non-ASCII\n# characters will be escaped, for example _xE3_x81_x84 will be used for Unicode\n# U+3044.\n# The default value is: NO.\n\nALLOW_UNICODE_NAMES    = NO\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# Possible values are: Afrikaans, Arabic, Armenian, Brazilian, Catalan, Chinese,\n# Chinese-Traditional, Croatian, Czech, Danish, Dutch, English (United States),\n# Esperanto, Farsi (Persian), Finnish, French, German, Greek, Hungarian,\n# Indonesian, Italian, Japanese, Japanese-en (Japanese with English messages),\n# Korean, Korean-en (Korean with English messages), Latvian, Lithuanian,\n# Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese, Romanian, Russian,\n# Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish, Swedish, Turkish,\n# Ukrainian and Vietnamese.\n# The default value is: English.\n\nOUTPUT_LANGUAGE        = English\n\n# If the BRIEF_MEMBER_DESC tag is set to YES, doxygen will include brief member\n# descriptions after the members that are listed in the file and class\n# documentation (similar to Javadoc). Set to NO to disable this.\n# The default value is: YES.\n\nBRIEF_MEMBER_DESC      = NO\n\n# If the REPEAT_BRIEF tag is set to YES, doxygen will prepend the brief\n# description of a member or function before the detailed description\n#\n# Note: If both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n# brief descriptions will be completely suppressed.\n# The default value is: YES.\n\nREPEAT_BRIEF           = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator that is\n# used to form the text in various listings. Each string in this list, if found\n# as the leading text of the brief description, will be stripped from the text\n# and the result, after processing the whole list, is used as the annotated\n# text. Otherwise, the brief description is used as-is. If left blank, the\n# following values are used ($name is automatically replaced with the name of\n# the entity):The $name class, The $name widget, The $name file, is, provides,\n# specifies, contains, represents, a, an and the.\n\nABBREVIATE_BRIEF       = \n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# doxygen will generate a detailed section even if there is only a brief\n# description.\n# The default value is: NO.\n\nALWAYS_DETAILED_SEC    = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n# inherited members of a class in the documentation of that class as if those\n# members were ordinary class members. Constructors, destructors and assignment\n# operators of the base classes will not be shown.\n# The default value is: NO.\n\nINLINE_INHERITED_MEMB  = NO\n\n# If the FULL_PATH_NAMES tag is set to YES, doxygen will prepend the full path\n# before files name in the file list and in the header files. If set to NO the\n# shortest path that makes the file name unique will be used\n# The default value is: YES.\n\nFULL_PATH_NAMES        = YES\n\n# The STRIP_FROM_PATH tag can be used to strip a user-defined part of the path.\n# Stripping is only done if one of the specified strings matches the left-hand\n# part of the path. The tag can be used to show relative paths in the file list.\n# If left blank the directory from which doxygen is run is used as the path to\n# strip.\n#\n# Note that you can specify absolute paths here, but also relative paths, which\n# will be relative from the directory where doxygen is started.\n# This tag requires that the tag FULL_PATH_NAMES is set to YES.\n\nSTRIP_FROM_PATH        = \n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of the\n# path mentioned in the documentation of a class, which tells the reader which\n# header file to include in order to use a class. If left blank only the name of\n# the header file containing the class definition is used. Otherwise one should\n# specify the list of include paths that are normally passed to the compiler\n# using the -I flag.\n\nSTRIP_FROM_INC_PATH    = \n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter (but\n# less readable) file names. This can be useful is your file systems doesn't\n# support long names like on DOS, Mac, or CD-ROM.\n# The default value is: NO.\n\nSHORT_NAMES            = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then doxygen will interpret the\n# first line (until the first dot) of a Javadoc-style comment as the brief\n# description. If set to NO, the Javadoc-style will behave just like regular Qt-\n# style comments (thus requiring an explicit @brief command for a brief\n# description.)\n# The default value is: NO.\n\nJAVADOC_AUTOBRIEF      = NO\n\n# If the QT_AUTOBRIEF tag is set to YES then doxygen will interpret the first\n# line (until the first dot) of a Qt-style comment as the brief description. If\n# set to NO, the Qt-style will behave just like regular Qt-style comments (thus\n# requiring an explicit \\brief command for a brief description.)\n# The default value is: NO.\n\nQT_AUTOBRIEF           = NO\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make doxygen treat a\n# multi-line C++ special comment block (i.e. a block of //! or /// comments) as\n# a brief description. This used to be the default behavior. The new default is\n# to treat a multi-line C++ comment block as a detailed description. Set this\n# tag to YES if you prefer the old behavior instead.\n#\n# Note that setting this tag to YES also means that rational rose comments are\n# not recognized any more.\n# The default value is: NO.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# If the INHERIT_DOCS tag is set to YES then an undocumented member inherits the\n# documentation from any documented member that it re-implements.\n# The default value is: YES.\n\nINHERIT_DOCS           = YES\n\n# If the SEPARATE_MEMBER_PAGES tag is set to YES then doxygen will produce a new\n# page for each member. If set to NO, the documentation of a member will be part\n# of the file/class/namespace that contains it.\n# The default value is: NO.\n\nSEPARATE_MEMBER_PAGES  = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab. Doxygen\n# uses this value to replace tabs by spaces in code fragments.\n# Minimum value: 1, maximum value: 16, default value: 4.\n\nTAB_SIZE               = 4\n\n# This tag can be used to specify a number of aliases that act as commands in\n# the documentation. An alias has the form:\n# name=value\n# For example adding\n# \"sideeffect=@par Side Effects:\\n\"\n# will allow you to put the command \\sideeffect (or @sideeffect) in the\n# documentation, which will result in a user-defined paragraph with heading\n# \"Side Effects:\". You can put \\n's in the value part of an alias to insert\n# newlines (in the resulting output). You can put ^^ in the value part of an\n# alias to insert a newline as if a physical newline was in the original file.\n\nALIASES                = \n\n# This tag can be used to specify a number of word-keyword mappings (TCL only).\n# A mapping has the form \"name=value\". For example adding \"class=itcl::class\"\n# will allow you to use the command class in the itcl::class meaning.\n\nTCL_SUBST              = \n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources\n# only. Doxygen will then generate output that is more tailored for C. For\n# instance, some of the names that are used will be different. The list of all\n# members will be omitted, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_FOR_C  = YES\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java or\n# Python sources only. Doxygen will then generate output that is more tailored\n# for that language. For instance, namespaces will be presented as packages,\n# qualified scopes will look different, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\n# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran\n# sources. Doxygen will then generate output that is tailored for Fortran.\n# The default value is: NO.\n\nOPTIMIZE_FOR_FORTRAN   = NO\n\n# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL\n# sources. Doxygen will then generate output that is tailored for VHDL.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_VHDL   = NO\n\n# Doxygen selects the parser to use depending on the extension of the files it\n# parses. With this tag you can assign which parser to use for a given\n# extension. Doxygen has a built-in mapping, but you can override or extend it\n# using this tag. The format is ext=language, where ext is a file extension, and\n# language is one of the parsers supported by doxygen: IDL, Java, Javascript,\n# C#, C, C++, D, PHP, Objective-C, Python, Fortran (fixed format Fortran:\n# FortranFixed, free formatted Fortran: FortranFree, unknown formatted Fortran:\n# Fortran. In the later case the parser tries to guess whether the code is fixed\n# or free formatted code, this is the default for Fortran type files), VHDL. For\n# instance to make doxygen treat .inc files as Fortran files (default is PHP),\n# and .f files as C (default is Fortran), use: inc=Fortran f=C.\n#\n# Note: For files without extension you can use no_extension as a placeholder.\n#\n# Note that for custom extensions you also need to set FILE_PATTERNS otherwise\n# the files are not read by doxygen.\n\nEXTENSION_MAPPING      = inc=C\n\n# If the MARKDOWN_SUPPORT tag is enabled then doxygen pre-processes all comments\n# according to the Markdown format, which allows for more readable\n# documentation. See http://daringfireball.net/projects/markdown/ for details.\n# The output of markdown processing is further processed by doxygen, so you can\n# mix doxygen, HTML, and XML commands with Markdown formatting. Disable only in\n# case of backward compatibilities issues.\n# The default value is: YES.\n\nMARKDOWN_SUPPORT       = YES\n\n# When the TOC_INCLUDE_HEADINGS tag is set to a non-zero value, all headings up\n# to that level are automatically included in the table of contents, even if\n# they do not have an id attribute.\n# Note: This feature currently applies only to Markdown headings.\n# Minimum value: 0, maximum value: 99, default value: 0.\n# This tag requires that the tag MARKDOWN_SUPPORT is set to YES.\n\nTOC_INCLUDE_HEADINGS   = 0\n\n# When enabled doxygen tries to link words that correspond to documented\n# classes, or namespaces to their corresponding documentation. Such a link can\n# be prevented in individual cases by putting a % sign in front of the word or\n# globally by setting AUTOLINK_SUPPORT to NO.\n# The default value is: YES.\n\nAUTOLINK_SUPPORT       = YES\n\n# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want\n# to include (a tag file for) the STL sources as input, then you should set this\n# tag to YES in order to let doxygen match functions declarations and\n# definitions whose arguments contain STL classes (e.g. func(std::string);\n# versus func(std::string) {}). This also make the inheritance and collaboration\n# diagrams that involve STL classes more complete and accurate.\n# The default value is: NO.\n\nBUILTIN_STL_SUPPORT    = NO\n\n# If you use Microsoft's C++/CLI language, you should set this option to YES to\n# enable parsing support.\n# The default value is: NO.\n\nCPP_CLI_SUPPORT        = NO\n\n# Set the SIP_SUPPORT tag to YES if your project consists of sip (see:\n# https://www.riverbankcomputing.com/software/sip/intro) sources only. Doxygen\n# will parse them like normal C++ but will assume all classes use public instead\n# of private inheritance when no explicit protection keyword is present.\n# The default value is: NO.\n\nSIP_SUPPORT            = NO\n\n# For Microsoft's IDL there are propget and propput attributes to indicate\n# getter and setter methods for a property. Setting this option to YES will make\n# doxygen to replace the get and set methods by a property in the documentation.\n# This will only work if the methods are indeed getting or setting a simple\n# type. If this is not the case, or you want to show the methods anyway, you\n# should set this option to NO.\n# The default value is: YES.\n\nIDL_PROPERTY_SUPPORT   = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n# The default value is: NO.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# If one adds a struct or class to a group and this option is enabled, then also\n# any nested class or struct is added to the same group. By default this option\n# is disabled and one has to add nested compounds explicitly via \\ingroup.\n# The default value is: NO.\n\nGROUP_NESTED_COMPOUNDS = NO\n\n# Set the SUBGROUPING tag to YES to allow class member groups of the same type\n# (for instance a group of public functions) to be put as a subgroup of that\n# type (e.g. under the Public Functions section). Set it to NO to prevent\n# subgrouping. Alternatively, this can be done per class using the\n# \\nosubgrouping command.\n# The default value is: YES.\n\nSUBGROUPING            = YES\n\n# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and unions\n# are shown inside the group in which they are included (e.g. using \\ingroup)\n# instead of on a separate page (for HTML and Man pages) or section (for LaTeX\n# and RTF).\n#\n# Note that this feature does not work in combination with\n# SEPARATE_MEMBER_PAGES.\n# The default value is: NO.\n\nINLINE_GROUPED_CLASSES = NO\n\n# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and unions\n# with only public data fields or simple typedef fields will be shown inline in\n# the documentation of the scope in which they are defined (i.e. file,\n# namespace, or group documentation), provided this scope is documented. If set\n# to NO, structs, classes, and unions are shown on a separate page (for HTML and\n# Man pages) or section (for LaTeX and RTF).\n# The default value is: NO.\n\nINLINE_SIMPLE_STRUCTS  = NO\n\n# When TYPEDEF_HIDES_STRUCT tag is enabled, a typedef of a struct, union, or\n# enum is documented as struct, union, or enum with the name of the typedef. So\n# typedef struct TypeS {} TypeT, will appear in the documentation as a struct\n# with name TypeT. When disabled the typedef will appear as a member of a file,\n# namespace, or class. And the struct will be named TypeS. This can typically be\n# useful for C code in case the coding convention dictates that all compound\n# types are typedef'ed and only the typedef is referenced, never the tag name.\n# The default value is: NO.\n\nTYPEDEF_HIDES_STRUCT   = NO\n\n# The size of the symbol lookup cache can be set using LOOKUP_CACHE_SIZE. This\n# cache is used to resolve symbols given their name and scope. Since this can be\n# an expensive process and often the same symbol appears multiple times in the\n# code, doxygen keeps a cache of pre-resolved symbols. If the cache is too small\n# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\nLOOKUP_CACHE_SIZE      = 0\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES, doxygen will assume all entities in\n# documentation are documented, even if no documentation was available. Private\n# class members and static file members will be hidden unless the\n# EXTRACT_PRIVATE respectively EXTRACT_STATIC tags are set to YES.\n# Note: This will also disable the warnings about undocumented members that are\n# normally produced when WARNINGS is set to YES.\n# The default value is: NO.\n\nEXTRACT_ALL            = NO\n\n# If the EXTRACT_PRIVATE tag is set to YES, all private members of a class will\n# be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PRIVATE        = NO\n\n# If the EXTRACT_PACKAGE tag is set to YES, all members with package or internal\n# scope will be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PACKAGE        = NO\n\n# If the EXTRACT_STATIC tag is set to YES, all static members of a file will be\n# included in the documentation.\n# The default value is: NO.\n\nEXTRACT_STATIC         = YES\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES, classes (and structs) defined\n# locally in source files will be included in the documentation. If set to NO,\n# only classes defined in header files are included. Does not have any effect\n# for Java sources.\n# The default value is: YES.\n\nEXTRACT_LOCAL_CLASSES  = YES\n\n# This flag is only useful for Objective-C code. If set to YES, local methods,\n# which are defined in the implementation section but not in the interface are\n# included in the documentation. If set to NO, only methods in the interface are\n# included.\n# The default value is: NO.\n\nEXTRACT_LOCAL_METHODS  = NO\n\n# If this flag is set to YES, the members of anonymous namespaces will be\n# extracted and appear in the documentation as a namespace called\n# 'anonymous_namespace{file}', where file will be replaced with the base name of\n# the file that contains the anonymous namespace. By default anonymous namespace\n# are hidden.\n# The default value is: NO.\n\nEXTRACT_ANON_NSPACES   = YES\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, doxygen will hide all\n# undocumented members inside documented classes or files. If set to NO these\n# members will be included in the various overviews, but no documentation\n# section is generated. This option has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy. If set\n# to NO, these classes will be included in the various overviews. This option\n# has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, doxygen will hide all friend\n# (class|struct|union) declarations. If set to NO, these declarations will be\n# included in the documentation.\n# The default value is: NO.\n\nHIDE_FRIEND_COMPOUNDS  = NO\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, doxygen will hide any\n# documentation blocks found inside the body of a function. If set to NO, these\n# blocks will be appended to the function's detailed documentation block.\n# The default value is: NO.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation that is typed after a\n# \\internal command is included. If the tag is set to NO then the documentation\n# will be excluded. Set it to YES to include the internal documentation.\n# The default value is: NO.\n\nINTERNAL_DOCS          = NO\n\n# If the CASE_SENSE_NAMES tag is set to NO then doxygen will only generate file\n# names in lower-case letters. If set to YES, upper-case letters are also\n# allowed. This is useful if you have classes or files whose names only differ\n# in case and if your file system supports case sensitive file names. Windows\n# and Mac users are advised to set this option to NO.\n# The default value is: system dependent.\n\nCASE_SENSE_NAMES       = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO then doxygen will show members with\n# their full class and namespace scopes in the documentation. If set to YES, the\n# scope will be hidden.\n# The default value is: NO.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the HIDE_COMPOUND_REFERENCE tag is set to NO (default) then doxygen will\n# append additional text to a page's title, such as Class Reference. If set to\n# YES the compound reference will be hidden.\n# The default value is: NO.\n\nHIDE_COMPOUND_REFERENCE= NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES then doxygen will put a list of\n# the files that are included by a file in the documentation of that file.\n# The default value is: YES.\n\nSHOW_INCLUDE_FILES     = YES\n\n# If the SHOW_GROUPED_MEMB_INC tag is set to YES then Doxygen will add for each\n# grouped member an include statement to the documentation, telling the reader\n# which file to include in order to use the member.\n# The default value is: NO.\n\nSHOW_GROUPED_MEMB_INC  = NO\n\n# If the FORCE_LOCAL_INCLUDES tag is set to YES then doxygen will list include\n# files with double quotes in the documentation rather than with sharp brackets.\n# The default value is: NO.\n\nFORCE_LOCAL_INCLUDES   = NO\n\n# If the INLINE_INFO tag is set to YES then a tag [inline] is inserted in the\n# documentation for inline members.\n# The default value is: YES.\n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order.\n# The default value is: YES.\n\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n# The default value is: NO.\n\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n# Note: If SORT_BRIEF_DOCS is set to NO this option is ignored for sorting brief\n# member documentation.\n# Note: If SORT_MEMBER_DOCS is set to NO this option is ignored for sorting\n# detailed member documentation.\n# The default value is: NO.\n\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n\nSORT_GROUP_NAMES       = NO\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be sorted by\n# fully-qualified names, including namespaces. If set to NO, the class list will\n# be sorted only by class name, not including the namespace part.\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n# Note: This option applies only to the class list, not to the alphabetical\n# list.\n# The default value is: NO.\n\nSORT_BY_SCOPE_NAME     = NO\n\n# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to do proper\n# type resolution of all parameters of a function it will reject a match between\n# the prototype and the implementation of a member function even if there is\n# only one candidate or it is obvious which candidate to choose by doing a\n# simple string match. By disabling STRICT_PROTO_MATCHING doxygen will still\n# accept a match between prototype and implementation in such cases.\n# The default value is: NO.\n\nSTRICT_PROTO_MATCHING  = NO\n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or disable (NO) the todo\n# list. This list is created by putting \\todo commands in the documentation.\n# The default value is: YES.\n\nGENERATE_TODOLIST      = YES\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or disable (NO) the test\n# list. This list is created by putting \\test commands in the documentation.\n# The default value is: YES.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable (YES) or disable (NO) the bug\n# list. This list is created by putting \\bug commands in the documentation.\n# The default value is: YES.\n\nGENERATE_BUGLIST       = YES\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or disable (NO)\n# the deprecated list. This list is created by putting \\deprecated commands in\n# the documentation.\n# The default value is: YES.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional documentation\n# sections, marked by \\if <section_label> ... \\endif and \\cond <section_label>\n# ... \\endcond blocks.\n\nENABLED_SECTIONS       = \n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines that the\n# initial value of a variable or macro / define can have for it to appear in the\n# documentation. If the initializer consists of more lines than specified here\n# it will be hidden. Use a value of 0 to hide initializers completely. The\n# appearance of the value of individual variables and macros / defines can be\n# controlled using \\showinitializer or \\hideinitializer command in the\n# documentation regardless of this setting.\n# Minimum value: 0, maximum value: 10000, default value: 30.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES, the\n# list will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\nSHOW_USED_FILES        = YES\n\n# Set the SHOW_FILES tag to NO to disable the generation of the Files page. This\n# will remove the Files entry from the Quick Index and from the Folder Tree View\n# (if specified).\n# The default value is: YES.\n\nSHOW_FILES             = YES\n\n# Set the SHOW_NAMESPACES tag to NO to disable the generation of the Namespaces\n# page. This will remove the Namespaces entry from the Quick Index and from the\n# Folder Tree View (if specified).\n# The default value is: YES.\n\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n# version. For an example see the documentation.\n\nFILE_VERSION_FILTER    = \n\n# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed\n# by doxygen. The layout file controls the global structure of the generated\n# output files in an output format independent way. To create the layout file\n# that represents doxygen's defaults, run doxygen with the -l option. You can\n# optionally specify a file name after the option, if omitted DoxygenLayout.xml\n# will be used as the name of the layout file.\n#\n# Note that if you run doxygen from a directory containing a file called\n# DoxygenLayout.xml, doxygen will parse it automatically even if the LAYOUT_FILE\n# tag is left empty.\n\nLAYOUT_FILE            = \n\n# The CITE_BIB_FILES tag can be used to specify one or more bib files containing\n# the reference definitions. This must be a list of .bib files. The .bib\n# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also https://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES         = \n\n#---------------------------------------------------------------------------\n# Configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated to\n# standard output by doxygen. If QUIET is set to YES this implies that the\n# messages are off.\n# The default value is: NO.\n\nQUIET                  = YES\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated to standard error (stderr) by doxygen. If WARNINGS is set to YES\n# this implies that the warnings are on.\n#\n# Tip: Turn warnings on while writing the documentation.\n# The default value is: YES.\n\nWARNINGS               = YES\n\n# If the WARN_IF_UNDOCUMENTED tag is set to YES then doxygen will generate\n# warnings for undocumented members. If EXTRACT_ALL is set to YES then this flag\n# will automatically be disabled.\n# The default value is: YES.\n\nWARN_IF_UNDOCUMENTED   = YES\n\n# If the WARN_IF_DOC_ERROR tag is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some parameters\n# in a documented function, or documenting parameters that don't exist or using\n# markup commands wrongly.\n# The default value is: YES.\n\nWARN_IF_DOC_ERROR      = YES\n\n# This WARN_NO_PARAMDOC option can be enabled to get warnings for functions that\n# are documented, but have no documentation for their parameters or return\n# value. If set to NO, doxygen will only warn about wrong or incomplete\n# parameter documentation, but not about the absence of documentation.\n# The default value is: NO.\n\nWARN_NO_PARAMDOC       = YES\n\n# If the WARN_AS_ERROR tag is set to YES then doxygen will immediately stop when\n# a warning is encountered.\n# The default value is: NO.\n\nWARN_AS_ERROR          = NO\n\n# The WARN_FORMAT tag determines the format of the warning messages that doxygen\n# can produce. The string should contain the $file, $line, and $text tags, which\n# will be replaced by the file and line number from which the warning originated\n# and the warning text. Optionally the format may contain $version, which will\n# be replaced by the version of the file (if it could be obtained via\n# FILE_VERSION_FILTER)\n# The default value is: $file:$line: $text.\n\nWARN_FORMAT            = \"$file:$line: $text\"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning and error\n# messages should be written. If left blank the output is written to standard\n# error (stderr).\n\nWARN_LOGFILE           = doxygen.log\n\n#---------------------------------------------------------------------------\n# Configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag is used to specify the files and/or directories that contain\n# documented source files. You may enter file names like myfile.cpp or\n# directories like /usr/src/myproject. Separate the files or directories with\n# spaces. See also FILE_PATTERNS and EXTENSION_MAPPING\n# Note: If this tag is empty the current directory is searched.\n\nINPUT                  = src\n\n# This tag can be used to specify the character encoding of the source files\n# that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses\n# libiconv (or the iconv built into libc) for the transcoding. See the libiconv\n# documentation (see: https://www.gnu.org/software/libiconv/) for the list of\n# possible encodings.\n# The default value is: UTF-8.\n\nINPUT_ENCODING         = UTF-8\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard patterns (like *.cpp and\n# *.h) to filter out the source-files in the directories.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# read by doxygen.\n#\n# If left blank the following patterns are tested:*.c, *.cc, *.cxx, *.cpp,\n# *.c++, *.java, *.ii, *.ixx, *.ipp, *.i++, *.inl, *.idl, *.ddl, *.odl, *.h,\n# *.hh, *.hxx, *.hpp, *.h++, *.cs, *.d, *.php, *.php4, *.php5, *.phtml, *.inc,\n# *.m, *.markdown, *.md, *.mm, *.dox, *.py, *.pyw, *.f90, *.f95, *.f03, *.f08,\n# *.f, *.for, *.tcl, *.vhd, *.vhdl, *.ucf and *.qsf.\n\nFILE_PATTERNS          = *.c \\\n                         *.h \\\n                         mainpage.txt\n\n# The RECURSIVE tag can be used to specify whether or not subdirectories should\n# be searched for input files as well.\n# The default value is: NO.\n\nRECURSIVE              = YES\n\n# The EXCLUDE tag can be used to specify files and/or directories that should be\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n#\n# Note that relative paths are relative to the directory from which doxygen is\n# run.\n\nEXCLUDE                = \n\n# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or\n# directories that are symbolic links (a Unix file system feature) are excluded\n# from the input.\n# The default value is: NO.\n\nEXCLUDE_SYMLINKS       = NO\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories.\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories for example use the pattern */test/*\n\nEXCLUDE_PATTERNS       = \n\n# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names\n# (namespaces, classes, functions, etc.) that should be excluded from the\n# output. The symbol name can be a fully qualified name, a word, or if the\n# wildcard * is used, a substring. Examples: ANamespace, AClass,\n# AClass::ANamespace, ANamespace::*Test\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories use the pattern */test/*\n\nEXCLUDE_SYMBOLS        = \n\n# The EXAMPLE_PATH tag can be used to specify one or more files or directories\n# that contain example code fragments that are included (see the \\include\n# command).\n\nEXAMPLE_PATH           = prog\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp and\n# *.h) to filter out the source-files in the directories. If left blank all\n# files are included.\n\nEXAMPLE_PATTERNS       = *.c \\\n                         *.h\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\dontinclude commands\n# irrespective of the value of the RECURSIVE tag.\n# The default value is: NO.\n\nEXAMPLE_RECURSIVE      = NO\n\n# The IMAGE_PATH tag can be used to specify one or more files or directories\n# that contain images that are to be included in the documentation (see the\n# \\image command).\n\nIMAGE_PATH             = prog\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command:\n#\n# <filter> <input-file>\n#\n# where <filter> is the value of the INPUT_FILTER tag, and <input-file> is the\n# name of an input file. Doxygen will then use the output that the filter\n# program writes to standard output. If FILTER_PATTERNS is specified, this tag\n# will be ignored.\n#\n# Note that the filter must not add or remove lines; it is applied before the\n# code is scanned, but not when the output code is generated. If lines are added\n# or removed, the anchors will not be placed correctly.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# properly processed by doxygen.\n\nINPUT_FILTER           = \n\n# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern\n# basis. Doxygen will compare the file name with each pattern and apply the\n# filter if there is a match. The filters are a list of the form: pattern=filter\n# (like *.cpp=my_cpp_filter). See INPUT_FILTER for further information on how\n# filters are used. If the FILTER_PATTERNS tag is empty or if none of the\n# patterns match the file name, INPUT_FILTER is applied.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# properly processed by doxygen.\n\nFILTER_PATTERNS        = \n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER) will also be used to filter the input files that are used for\n# producing the source files to browse (i.e. when SOURCE_BROWSER is set to YES).\n# The default value is: NO.\n\nFILTER_SOURCE_FILES    = NO\n\n# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file\n# pattern. A pattern will override the setting for FILTER_PATTERN (if any) and\n# it is also possible to disable source filtering for a specific pattern using\n# *.ext= (so without naming a filter).\n# This tag requires that the tag FILTER_SOURCE_FILES is set to YES.\n\nFILTER_SOURCE_PATTERNS = \n\n# If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that\n# is part of the input, its contents will be placed on the main page\n# (index.html). This can be useful if you have a project on for instance GitHub\n# and want to reuse the introduction page also for the doxygen output.\n\nUSE_MDFILE_AS_MAINPAGE = \n\n#---------------------------------------------------------------------------\n# Configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will be\n# generated. Documented entities will be cross-referenced with these sources.\n#\n# Note: To get rid of all source code in the generated output, make sure that\n# also VERBATIM_HEADERS is set to NO.\n# The default value is: NO.\n\nSOURCE_BROWSER         = YES\n\n# Setting the INLINE_SOURCES tag to YES will include the body of functions,\n# classes and enums directly into the documentation.\n# The default value is: NO.\n\nINLINE_SOURCES         = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES will instruct doxygen to hide any\n# special comment blocks from generated source code fragments. Normal C, C++ and\n# Fortran comments will always remain visible.\n# The default value is: YES.\n\nSTRIP_CODE_COMMENTS    = YES\n\n# If the REFERENCED_BY_RELATION tag is set to YES then for each documented\n# function all documented functions referencing it will be listed.\n# The default value is: NO.\n\nREFERENCED_BY_RELATION = YES\n\n# If the REFERENCES_RELATION tag is set to YES then for each documented function\n# all documented entities called/used by that function will be listed.\n# The default value is: NO.\n\nREFERENCES_RELATION    = YES\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES and SOURCE_BROWSER tag is set\n# to YES then the hyperlinks from functions in REFERENCES_RELATION and\n# REFERENCED_BY_RELATION lists will link to the source code. Otherwise they will\n# link to the documentation.\n# The default value is: YES.\n\nREFERENCES_LINK_SOURCE = YES\n\n# If SOURCE_TOOLTIPS is enabled (the default) then hovering a hyperlink in the\n# source code will show a tooltip with additional information such as prototype,\n# brief description and links to the definition and documentation. Since this\n# will make the HTML file larger and loading of large files a bit slower, you\n# can opt to disable this feature.\n# The default value is: YES.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nSOURCE_TOOLTIPS        = YES\n\n# If the USE_HTAGS tag is set to YES then the references to source code will\n# point to the HTML generated by the htags(1) tool instead of doxygen built-in\n# source browser. The htags tool is part of GNU's global source tagging system\n# (see https://www.gnu.org/software/global/global.html). You will need version\n# 4.8.6 or higher.\n#\n# To use it do the following:\n# - Install the latest version of global\n# - Enable SOURCE_BROWSER and USE_HTAGS in the config file\n# - Make sure the INPUT points to the root of the source tree\n# - Run doxygen as normal\n#\n# Doxygen will invoke htags (and that will in turn invoke gtags), so these\n# tools must be available from the command line (i.e. in the search path).\n#\n# The result: instead of the source browser generated by doxygen, the links to\n# source code will now point to the output of htags.\n# The default value is: NO.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nUSE_HTAGS              = NO\n\n# If the VERBATIM_HEADERS tag is set the YES then doxygen will generate a\n# verbatim copy of the header file for each class for which an include is\n# specified. Set to NO to disable this.\n# See also: Section \\class.\n# The default value is: YES.\n\nVERBATIM_HEADERS       = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index of all\n# compounds will be generated. Enable this if the project contains a lot of\n# classes, structs, unions or interfaces.\n# The default value is: YES.\n\nALPHABETICAL_INDEX     = YES\n\n# The COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns in\n# which the alphabetical index list will be split.\n# Minimum value: 1, maximum value: 20, default value: 5.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nCOLS_IN_ALPHA_INDEX    = 5\n\n# In case all classes in a project start with a common prefix, all classes will\n# be put under the same header in the alphabetical index. The IGNORE_PREFIX tag\n# can be used to specify a prefix (or a list of prefixes) that should be ignored\n# while generating the index headers.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nIGNORE_PREFIX          = \n\n#---------------------------------------------------------------------------\n# Configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES, doxygen will generate HTML output\n# The default value is: YES.\n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_OUTPUT            = html\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for each\n# generated HTML page (for example: .htm, .php, .asp).\n# The default value is: .html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a user-defined HTML header file for\n# each generated HTML page. If the tag is left blank doxygen will generate a\n# standard header.\n#\n# To get valid HTML the header file that includes any scripts and style sheets\n# that doxygen needs, which is dependent on the configuration options used (e.g.\n# the setting GENERATE_TREEVIEW). It is highly recommended to start with a\n# default header using\n# doxygen -w html new_header.html new_footer.html new_stylesheet.css\n# YourConfigFile\n# and then modify the file new_header.html. See also section \"Doxygen usage\"\n# for information on how to generate the default header that doxygen normally\n# uses.\n# Note: The header is subject to change so you typically have to regenerate the\n# default header when upgrading to a newer version of doxygen. For a description\n# of the possible markers and block names see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_HEADER            = \n\n# The HTML_FOOTER tag can be used to specify a user-defined HTML footer for each\n# generated HTML page. If the tag is left blank doxygen will generate a standard\n# footer. See HTML_HEADER for more information on how to generate a default\n# footer and what special commands can be used inside the footer. See also\n# section \"Doxygen usage\" for information on how to generate the default footer\n# that doxygen normally uses.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FOOTER            = \n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading style\n# sheet that is used by each HTML page. It can be used to fine-tune the look of\n# the HTML output. If left blank doxygen will generate a default style sheet.\n# See also section \"Doxygen usage\" for information on how to generate the style\n# sheet that doxygen normally uses.\n# Note: It is recommended to use HTML_EXTRA_STYLESHEET instead of this tag, as\n# it is more robust and this tag (HTML_STYLESHEET) will in the future become\n# obsolete.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_STYLESHEET        = \n\n# The HTML_EXTRA_STYLESHEET tag can be used to specify additional user-defined\n# cascading style sheets that are included after the standard style sheets\n# created by doxygen. Using this option one can overrule certain style aspects.\n# This is preferred over using HTML_STYLESHEET since it does not replace the\n# standard style sheet and is therefore more robust against future updates.\n# Doxygen will copy the style sheet files to the output directory.\n# Note: The order of the extra style sheet files is of importance (e.g. the last\n# style sheet in the list overrules the setting of the previous ones in the\n# list). For an example see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_STYLESHEET  = \n\n# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the HTML output directory. Note\n# that these files will be copied to the base HTML output directory. Use the\n# $relpath^ marker in the HTML_HEADER and/or HTML_FOOTER files to load these\n# files. In the HTML_STYLESHEET file, use the file name only. Also note that the\n# files will be copied as-is; there are no commands or markers available.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_FILES       = moller52.jpg\n\n# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output. Doxygen\n# will adjust the colors in the style sheet and background images according to\n# this color. Hue is specified as an angle on a colorwheel, see\n# https://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_HUE    = 60\n\n# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of the colors\n# in the HTML output. For a value of 0 the output will use grayscales only. A\n# value of 255 will produce the most vivid colors.\n# Minimum value: 0, maximum value: 255, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_SAT    = 100\n\n# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to the\n# luminance component of the colors in the HTML output. Values below 100\n# gradually make the output lighter, whereas values above 100 make the output\n# darker. The value divided by 100 is the actual gamma applied, so 80 represents\n# a gamma of 0.8, The value 220 represents a gamma of 2.2, and 100 does not\n# change the gamma.\n# Minimum value: 40, maximum value: 240, default value: 80.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_GAMMA  = 80\n\n# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML\n# page will contain the date and time when the page was generated. Setting this\n# to YES can help to show when doxygen was last run and thus if the\n# documentation is up to date.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_TIMESTAMP         = NO\n\n# If the HTML_DYNAMIC_MENUS tag is set to YES then the generated HTML\n# documentation will contain a main index with vertical navigation menus that\n# are dynamically created via Javascript. If disabled, the navigation index will\n# consists of multiple levels of tabs that are statically embedded in every HTML\n# page. Disable this option to support browsers that do not have Javascript,\n# like the Qt help browser.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_DYNAMIC_MENUS     = YES\n\n# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML\n# documentation will contain sections that can be hidden and shown after the\n# page has loaded.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_DYNAMIC_SECTIONS  = YES\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n# tree by default.\n# Minimum value: 0, maximum value: 9999, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_INDEX_NUM_ENTRIES = 100\n\n# If the GENERATE_DOCSET tag is set to YES, additional index files will be\n# generated that can be used as input for Apple's Xcode 3 integrated development\n# environment (see: https://developer.apple.com/tools/xcode/), introduced with\n# OSX 10.5 (Leopard). To create a documentation set, doxygen will generate a\n# Makefile in the HTML output directory. Running make will produce the docset in\n# that directory and running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See https://developer.apple.com/tools/creatingdocsetswithdoxygen.html\n# for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_DOCSET        = NO\n\n# This tag determines the name of the docset feed. A documentation feed provides\n# an umbrella under which multiple documentation sets from a single provider\n# (such as a company or product suite) can be grouped.\n# The default value is: Doxygen generated docs.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_FEEDNAME        = \"Doxygen generated docs\"\n\n# This tag specifies a string that should uniquely identify the documentation\n# set bundle. This should be a reverse domain-name style string, e.g.\n# com.mycompany.MyDocSet. Doxygen will append .docset to the name.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_BUNDLE_ID       = org.doxygen.Project\n\n# The DOCSET_PUBLISHER_ID tag specifies a string that should uniquely identify\n# the documentation publisher. This should be a reverse domain-name style\n# string, e.g. com.mycompany.MyDocSet.documentation.\n# The default value is: org.doxygen.Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_ID    = org.doxygen.Publisher\n\n# The DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.\n# The default value is: Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_NAME  = Publisher\n\n# If the GENERATE_HTMLHELP tag is set to YES then doxygen generates three\n# additional HTML index files: index.hhp, index.hhc, and index.hhk. The\n# index.hhp is a project file that can be read by Microsoft's HTML Help Workshop\n# (see: http://www.microsoft.com/en-us/download/details.aspx?id=21138) on\n# Windows.\n#\n# The HTML Help Workshop contains a compiler that can convert all HTML output\n# generated by doxygen into a single compiled HTML file (.chm). Compiled HTML\n# files are now used as the Windows 98 help format, and will replace the old\n# Windows help format (.hlp) on all Windows platforms in the future. Compressed\n# HTML files also contain an index, a table of contents, and you can search for\n# words in the documentation. The HTML workshop also contains a viewer for\n# compressed HTML files.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_HTMLHELP      = NO\n\n# The CHM_FILE tag can be used to specify the file name of the resulting .chm\n# file. You can add a path in front of the file if the result should not be\n# written to the html output directory.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_FILE               = \n\n# The HHC_LOCATION tag can be used to specify the location (absolute path\n# including file name) of the HTML help compiler (hhc.exe). If non-empty,\n# doxygen will try to run the HTML help compiler on the generated index.hhp.\n# The file has to be specified with full path.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nHHC_LOCATION           = \n\n# The GENERATE_CHI flag controls if a separate .chi index file is generated\n# (YES) or that it should be included in the master .chm file (NO).\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nGENERATE_CHI           = NO\n\n# The CHM_INDEX_ENCODING is used to encode HtmlHelp index (hhk), content (hhc)\n# and project file content.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_INDEX_ENCODING     = \n\n# The BINARY_TOC flag controls whether a binary table of contents is generated\n# (YES) or a normal table of contents (NO) in the .chm file. Furthermore it\n# enables the Previous and Next buttons.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nBINARY_TOC             = NO\n\n# The TOC_EXPAND flag can be set to YES to add extra items for group members to\n# the table of contents of the HTML help documentation and to the tree view.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nTOC_EXPAND             = NO\n\n# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and\n# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated that\n# can be used as input for Qt's qhelpgenerator to generate a Qt Compressed Help\n# (.qch) of the generated HTML documentation.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_QHP           = NO\n\n# If the QHG_LOCATION tag is specified, the QCH_FILE tag can be used to specify\n# the file name of the resulting .qch file. The path specified is relative to\n# the HTML output folder.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQCH_FILE               = \n\n# The QHP_NAMESPACE tag specifies the namespace to use when generating Qt Help\n# Project output. For more information please see Qt Help Project / Namespace\n# (see: http://doc.qt.io/qt-4.8/qthelpproject.html#namespace).\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_NAMESPACE          = org.doxygen.Project\n\n# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating Qt\n# Help Project output. For more information please see Qt Help Project / Virtual\n# Folders (see: http://doc.qt.io/qt-4.8/qthelpproject.html#virtual-folders).\n# The default value is: doc.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_VIRTUAL_FOLDER     = doc\n\n# If the QHP_CUST_FILTER_NAME tag is set, it specifies the name of a custom\n# filter to add. For more information please see Qt Help Project / Custom\n# Filters (see: http://doc.qt.io/qt-4.8/qthelpproject.html#custom-filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_NAME   = \n\n# The QHP_CUST_FILTER_ATTRS tag specifies the list of the attributes of the\n# custom filter to add. For more information please see Qt Help Project / Custom\n# Filters (see: http://doc.qt.io/qt-4.8/qthelpproject.html#custom-filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_ATTRS  = \n\n# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this\n# project's filter section matches. Qt Help Project / Filter Attributes (see:\n# http://doc.qt.io/qt-4.8/qthelpproject.html#filter-attributes).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_SECT_FILTER_ATTRS  = \n\n# The QHG_LOCATION tag can be used to specify the location of Qt's\n# qhelpgenerator. If non-empty doxygen will try to run qhelpgenerator on the\n# generated .qhp file.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHG_LOCATION           = \n\n# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files will be\n# generated, together with the HTML files, they form an Eclipse help plugin. To\n# install this plugin and make it available under the help contents menu in\n# Eclipse, the contents of the directory containing the HTML and XML files needs\n# to be copied into the plugins directory of eclipse. The name of the directory\n# within the plugins directory should be the same as the ECLIPSE_DOC_ID value.\n# After copying Eclipse needs to be restarted before the help appears.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_ECLIPSEHELP   = NO\n\n# A unique identifier for the Eclipse help plugin. When installing the plugin\n# the directory name containing the HTML and XML files should also have this\n# name. Each documentation set should have its own identifier.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_ECLIPSEHELP is set to YES.\n\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nDISABLE_INDEX          = NO\n\n# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index\n# structure should be generated to display hierarchical information. If the tag\n# value is set to YES, a side panel will be generated containing a tree-like\n# index structure (just like the one that is generated for HTML Help). For this\n# to work a browser that supports JavaScript, DHTML, CSS and frames is required\n# (i.e. any modern browser). Windows users are probably better off using the\n# HTML help feature. Via custom style sheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine-tune the look of the index. As an example, the default style\n# sheet generated by doxygen has an example that shows how to put an image at\n# the root of the tree instead of the PROJECT_NAME. Since the tree basically has\n# the same information as the tab index, you could consider setting\n# DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_TREEVIEW      = YES\n\n# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values that\n# doxygen will group on one line in the generated HTML documentation.\n#\n# Note that a value of 0 will completely suppress the enum values from appearing\n# in the overview section.\n# Minimum value: 0, maximum value: 20, default value: 4.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nENUM_VALUES_PER_LINE   = 4\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be used\n# to set the initial width (in pixels) of the frame in which the tree is shown.\n# Minimum value: 0, maximum value: 1500, default value: 250.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nTREEVIEW_WIDTH         = 250\n\n# If the EXT_LINKS_IN_WINDOW option is set to YES, doxygen will open links to\n# external symbols imported via tag files in a separate window.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nEXT_LINKS_IN_WINDOW    = NO\n\n# Use this tag to change the font size of LaTeX formulas included as images in\n# the HTML documentation. When you change the font size after a successful\n# doxygen run you need to manually remove any form_*.png images from the HTML\n# output directory to force them to be regenerated.\n# Minimum value: 8, maximum value: 50, default value: 10.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_FONTSIZE       = 10\n\n# Use the FORMULA_TRANSPARENT tag to determine whether or not the images\n# generated for formulas are transparent PNGs. Transparent PNGs are not\n# supported properly for IE 6.0, but are supported on all modern browsers.\n#\n# Note that when changing this option you need to delete any form_*.png files in\n# the HTML output directory before the changes have effect.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_TRANSPARENT    = YES\n\n# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax (see\n# https://www.mathjax.org) which uses client side Javascript for the rendering\n# instead of using pre-rendered bitmaps. Use this if you do not have LaTeX\n# installed or if you want to formulas look prettier in the HTML output. When\n# enabled you may also need to install MathJax separately and configure the path\n# to it using the MATHJAX_RELPATH option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nUSE_MATHJAX            = NO\n\n# When MathJax is enabled you can set the default output format to be used for\n# the MathJax output. See the MathJax site (see:\n# http://docs.mathjax.org/en/latest/output.html) for more details.\n# Possible values are: HTML-CSS (which is slower, but has the best\n# compatibility), NativeMML (i.e. MathML) and SVG.\n# The default value is: HTML-CSS.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_FORMAT         = HTML-CSS\n\n# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n# MathJax from https://www.mathjax.org before deployment.\n# The default value is: https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_RELPATH        = http://cdn.mathjax.org/mathjax/latest\n\n# The MATHJAX_EXTENSIONS tag can be used to specify one or more MathJax\n# extension names that should be enabled during MathJax rendering. For example\n# MATHJAX_EXTENSIONS = TeX/AMSmath TeX/AMSsymbols\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_EXTENSIONS     = \n\n# The MATHJAX_CODEFILE tag can be used to specify a file with javascript pieces\n# of code that will be used on startup of the MathJax code. See the MathJax site\n# (see: http://docs.mathjax.org/en/latest/output.html) for more details. For an\n# example see the documentation.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_CODEFILE       = \n\n# When the SEARCHENGINE tag is enabled doxygen will generate a search box for\n# the HTML output. The underlying search engine uses javascript and DHTML and\n# should work on any modern browser. Note that when using HTML help\n# (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets (GENERATE_DOCSET)\n# there is already a search function so this one should typically be disabled.\n# For large projects the javascript based search engine can be slow, then\n# enabling SERVER_BASED_SEARCH may provide a better solution. It is possible to\n# search using the keyboard; to jump to the search box use <access key> + S\n# (what the <access key> is depends on the OS and browser, but it is typically\n# <CTRL>, <ALT>/<option>, or both). Inside the search box use the <cursor down\n# key> to jump into the search results window, the results can be navigated\n# using the <cursor keys>. Press <Enter> to select an item or <escape> to cancel\n# the search. The filter options can be selected when the cursor is inside the\n# search box by pressing <Shift>+<cursor down>. Also here use the <cursor keys>\n# to select a filter and <Enter> or <escape> to activate or cancel the filter\n# option.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nSEARCHENGINE           = YES\n\n# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using Javascript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n#\n# Doxygen ships with an example indexer (doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see: https://xapian.org/).\n#\n# See the section \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH        = NO\n\n# The SEARCHENGINE_URL should point to a search engine hosted by a web server\n# which will return the search results when EXTERNAL_SEARCH is enabled.\n#\n# Doxygen ships with an example indexer (doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see: https://xapian.org/). See the section \"External Indexing and\n# Searching\" for details.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHENGINE_URL       = \n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the unindexed\n# search data is written to a file for indexing by an external tool. With the\n# SEARCHDATA_FILE tag the name of this file can be specified.\n# The default file is: searchdata.xml.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHDATA_FILE        = searchdata.xml\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the\n# EXTERNAL_SEARCH_ID tag can be used as an identifier for the project. This is\n# useful in combination with EXTRA_SEARCH_MAPPINGS to search through multiple\n# projects and redirect the results back to the right project.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH_ID     = \n\n# The EXTRA_SEARCH_MAPPINGS tag can be used to enable searching through doxygen\n# projects other than the one defined by this configuration file, but that are\n# all added to the same external search index. Each project needs to have a\n# unique id set via EXTERNAL_SEARCH_ID. The search mapping then maps the id of\n# to a relative location where the documentation can be found. The format is:\n# EXTRA_SEARCH_MAPPINGS = tagname1=loc1 tagname2=loc2 ...\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTRA_SEARCH_MAPPINGS  = \n\n#---------------------------------------------------------------------------\n# Configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES, doxygen will generate LaTeX output.\n# The default value is: YES.\n\nGENERATE_LATEX         = NO\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_OUTPUT           = latex\n\n# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be\n# invoked.\n#\n# Note that when enabling USE_PDFLATEX this option is only used for generating\n# bitmaps for formulas in the HTML output, but not in the Makefile that is\n# written to the output directory.\n# The default file is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_CMD_NAME         = latex\n\n# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to generate\n# index for LaTeX.\n# The default file is: makeindex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nMAKEINDEX_CMD_NAME     = makeindex\n\n# If the COMPACT_LATEX tag is set to YES, doxygen generates more compact LaTeX\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nCOMPACT_LATEX          = NO\n\n# The PAPER_TYPE tag can be used to set the paper type that is used by the\n# printer.\n# Possible values are: a4 (210 x 297 mm), letter (8.5 x 11 inches), legal (8.5 x\n# 14 inches) and executive (7.25 x 10.5 inches).\n# The default value is: a4.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPAPER_TYPE             = a4\n\n# The EXTRA_PACKAGES tag can be used to specify one or more LaTeX package names\n# that should be included in the LaTeX output. The package can be specified just\n# by its name or with the correct syntax as to be used with the LaTeX\n# \\usepackage command. To get the times font for instance you can specify :\n# EXTRA_PACKAGES=times or EXTRA_PACKAGES={times}\n# To use the option intlimits with the amsmath package you can specify:\n# EXTRA_PACKAGES=[intlimits]{amsmath}\n# If left blank no extra packages will be included.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nEXTRA_PACKAGES         = \n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for the\n# generated LaTeX document. The header should contain everything until the first\n# chapter. If it is left blank doxygen will generate a standard header. See\n# section \"Doxygen usage\" for information on how to let doxygen write the\n# default header to a separate file.\n#\n# Note: Only use a user-defined header if you know what you are doing! The\n# following commands have a special meaning inside the header: $title,\n# $datetime, $date, $doxygenversion, $projectname, $projectnumber,\n# $projectbrief, $projectlogo. Doxygen will replace $title with the empty\n# string, for the replacement values of the other commands the user is referred\n# to HTML_HEADER.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HEADER           = \n\n# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for the\n# generated LaTeX document. The footer should contain everything after the last\n# chapter. If it is left blank doxygen will generate a standard footer. See\n# LATEX_HEADER for more information on how to generate a default footer and what\n# special commands can be used inside the footer.\n#\n# Note: Only use a user-defined footer if you know what you are doing!\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_FOOTER           = \n\n# The LATEX_EXTRA_STYLESHEET tag can be used to specify additional user-defined\n# LaTeX style sheets that are included after the standard style sheets created\n# by doxygen. Using this option one can overrule certain style aspects. Doxygen\n# will copy the style sheet files to the output directory.\n# Note: The order of the extra style sheet files is of importance (e.g. the last\n# style sheet in the list overrules the setting of the previous ones in the\n# list).\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_STYLESHEET = \n\n# The LATEX_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the LATEX_OUTPUT output\n# directory. Note that the files will be copied as-is; there are no commands or\n# markers available.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_FILES      = \n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated is\n# prepared for conversion to PDF (using ps2pdf or pdflatex). The PDF file will\n# contain links (just like the HTML output) instead of page references. This\n# makes the output suitable for online browsing using a PDF viewer.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPDF_HYPERLINKS         = YES\n\n# If the USE_PDFLATEX tag is set to YES, doxygen will use pdflatex to generate\n# the PDF file directly from the LaTeX files. Set this option to YES, to get a\n# higher quality PDF documentation.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nUSE_PDFLATEX           = YES\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode\n# command to the generated LaTeX files. This will instruct LaTeX to keep running\n# if errors occur, instead of asking the user for help. This option is also used\n# when generating formulas in HTML.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BATCHMODE        = NO\n\n# If the LATEX_HIDE_INDICES tag is set to YES then doxygen will not include the\n# index chapters (such as File Index, Compound Index, etc.) in the output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HIDE_INDICES     = NO\n\n# If the LATEX_SOURCE_CODE tag is set to YES then doxygen will include source\n# code with syntax highlighting in the LaTeX output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_SOURCE_CODE      = NO\n\n# The LATEX_BIB_STYLE tag can be used to specify the style to use for the\n# bibliography, e.g. plainnat, or ieeetr. See\n# https://en.wikipedia.org/wiki/BibTeX and \\cite for more info.\n# The default value is: plain.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BIB_STYLE        = plain\n\n# If the LATEX_TIMESTAMP tag is set to YES then the footer of each generated\n# page will contain the date and time when the page was generated. Setting this\n# to NO can help when comparing the output of multiple runs.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_TIMESTAMP        = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES, doxygen will generate RTF output. The\n# RTF output is optimized for Word 97 and may not look too pretty with other RTF\n# readers/editors.\n# The default value is: NO.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: rtf.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_OUTPUT             = rtf\n\n# If the COMPACT_RTF tag is set to YES, doxygen generates more compact RTF\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated will\n# contain hyperlink fields. The RTF file will contain links (just like the HTML\n# output) instead of page references. This makes the output suitable for online\n# browsing using Word or some other Word compatible readers that support those\n# fields.\n#\n# Note: WordPad (write) and others do not support links.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's config\n# file, i.e. a series of assignments. You only have to provide replacements,\n# missing definitions are set to their default value.\n#\n# See also section \"Doxygen usage\" for information on how to generate the\n# default style sheet that doxygen normally uses.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_STYLESHEET_FILE    = \n\n# Set optional variables used in the generation of an RTF document. Syntax is\n# similar to doxygen's config file. A template extensions file can be generated\n# using doxygen -e rtf extensionFile.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_EXTENSIONS_FILE    = \n\n# If the RTF_SOURCE_CODE tag is set to YES then doxygen will include source code\n# with syntax highlighting in the RTF output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_SOURCE_CODE        = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES, doxygen will generate man pages for\n# classes and files.\n# The default value is: NO.\n\nGENERATE_MAN           = NO\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it. A directory man3 will be created inside the directory specified by\n# MAN_OUTPUT.\n# The default directory is: man.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_OUTPUT             = man\n\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_EXTENSION          = .3\n\n# The MAN_SUBDIR tag determines the name of the directory created within\n# MAN_OUTPUT in which the man pages are placed. If defaults to man followed by\n# MAN_EXTENSION with the initial . removed.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_SUBDIR             = \n\n# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_LINKS              = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES, doxygen will generate an XML file that\n# captures the structure of the code including all documentation.\n# The default value is: NO.\n\nGENERATE_XML           = NO\n\n# The XML_OUTPUT tag is used to specify where the XML pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: xml.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_OUTPUT             = xml\n\n# If the XML_PROGRAMLISTING tag is set to YES, doxygen will dump the program\n# listings (including syntax highlighting and cross-referencing information) to\n# the XML output. Note that enabling this will significantly increase the size\n# of the XML output.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_PROGRAMLISTING     = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the DOCBOOK output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_DOCBOOK tag is set to YES, doxygen will generate Docbook files\n# that can be used to generate PDF.\n# The default value is: NO.\n\nGENERATE_DOCBOOK       = NO\n\n# The DOCBOOK_OUTPUT tag is used to specify where the Docbook pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be put in\n# front of it.\n# The default directory is: docbook.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_OUTPUT         = docbook\n\n# If the DOCBOOK_PROGRAMLISTING tag is set to YES, doxygen will include the\n# program listings (including syntax highlighting and cross-referencing\n# information) to the DOCBOOK output. Note that enabling this will significantly\n# increase the size of the DOCBOOK output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_PROGRAMLISTING = NO\n\n#---------------------------------------------------------------------------\n# Configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_AUTOGEN_DEF tag is set to YES, doxygen will generate an\n# AutoGen Definitions (see http://autogen.sourceforge.net/) file that captures\n# the structure of the code including all documentation. Note that this feature\n# is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_PRETTY         = YES\n\n# The names of the make variables in the generated doxyrules.make file are\n# prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. This is useful\n# so different doxyrules.make files included by the same Makefile don't\n# overwrite each other's variables.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_MAKEVAR_PREFIX = \n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES, doxygen will evaluate all\n# C-preprocessor directives found in the sources and include files.\n# The default value is: YES.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names\n# in the source code. If set to NO, only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nMACRO_EXPANSION        = NO\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES then\n# the macro expansion is limited to the macros specified with the PREDEFINED and\n# EXPAND_AS_DEFINED tags.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_ONLY_PREDEF     = NO\n\n# If the SEARCH_INCLUDES tag is set to YES, the include files in the\n# INCLUDE_PATH will be searched if a #include is found.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by the\n# preprocessor.\n# This tag requires that the tag SEARCH_INCLUDES is set to YES.\n\nINCLUDE_PATH           = \n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will be\n# used.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nINCLUDE_FILE_PATTERNS  = \n\n# The PREDEFINED tag can be used to specify one or more macro names that are\n# defined before the preprocessor is started (similar to the -D option of e.g.\n# gcc). The argument of the tag is a list of macros of the form: name or\n# name=definition (no spaces). If the definition and the \"=\" are omitted, \"=1\"\n# is assumed. To prevent a macro definition from being undefined via #undef or\n# recursively expanded use the := operator instead of the = operator.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nPREDEFINED             = \n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this\n# tag can be used to specify a list of macro names that should be expanded. The\n# macro definition that is found in the sources will be used. Use the PREDEFINED\n# tag if you want to use a different macro definition that overrules the\n# definition found in the source code.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_AS_DEFINED      = \n\n# If the SKIP_FUNCTION_MACROS tag is set to YES then doxygen's preprocessor will\n# remove all references to function-like macros that are alone on a line, have\n# an all uppercase name, and do not end with a semicolon. Such function macros\n# are typically used for boiler-plate code, and will confuse the parser if not\n# removed.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES tag can be used to specify one or more tag files. For each tag\n# file the location of the external documentation should be added. The format of\n# a tag file without this location is as follows:\n# TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n# TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where loc1 and loc2 can be relative or absolute paths or URLs. See the\n# section \"Linking to external documentation\" for more information about the use\n# of tag files.\n# Note: Each tag file must have a unique name (where the name does NOT include\n# the path). If a tag file is not located in the directory in which doxygen is\n# run, you must also specify the path to the tagfile here.\n\nTAGFILES               = \n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create a\n# tag file that is based on the input files it reads. See section \"Linking to\n# external documentation\" for more information about the usage of tag files.\n\nGENERATE_TAGFILE       = \n\n# If the ALLEXTERNALS tag is set to YES, all external class will be listed in\n# the class index. If set to NO, only the inherited external classes will be\n# listed.\n# The default value is: NO.\n\nALLEXTERNALS           = NO\n\n# If the EXTERNAL_GROUPS tag is set to YES, all external groups will be listed\n# in the modules index. If set to NO, only the current project's groups will be\n# listed.\n# The default value is: YES.\n\nEXTERNAL_GROUPS        = YES\n\n# If the EXTERNAL_PAGES tag is set to YES, all external pages will be listed in\n# the related pages index. If set to NO, only the current project's pages will\n# be listed.\n# The default value is: YES.\n\nEXTERNAL_PAGES         = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of 'which perl').\n# The default file (with absolute path) is: /usr/bin/perl.\n\nPERL_PATH              = /usr/bin/perl\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If the CLASS_DIAGRAMS tag is set to YES, doxygen will generate a class diagram\n# (in HTML and LaTeX) for classes with base or super classes. Setting the tag to\n# NO turns the diagrams off. Note that this option also works with HAVE_DOT\n# disabled, but it is recommended to install and use dot, since it yields more\n# powerful graphs.\n# The default value is: YES.\n\nCLASS_DIAGRAMS         = YES\n\n# You can define message sequence charts within doxygen comments using the \\msc\n# command. Doxygen will then run the mscgen tool (see:\n# http://www.mcternan.me.uk/mscgen/)) to produce the chart and insert it in the\n# documentation. The MSCGEN_PATH tag allows you to specify the directory where\n# the mscgen tool resides. If left empty the tool is assumed to be found in the\n# default search path.\n\nMSCGEN_PATH            = \n\n# You can include diagrams made with dia in doxygen documentation. Doxygen will\n# then run dia to produce the diagram and insert it in the documentation. The\n# DIA_PATH tag allows you to specify the directory where the dia binary resides.\n# If left empty dia is assumed to be found in the default search path.\n\nDIA_PATH               = \n\n# If set to YES the inheritance and collaboration graphs will hide inheritance\n# and usage relations if the target is undocumented or is not a class.\n# The default value is: YES.\n\nHIDE_UNDOC_RELATIONS   = YES\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz (see:\n# http://www.graphviz.org/), a graph visualization toolkit from AT&T and Lucent\n# Bell Labs. The other options in this section have no effect if this option is\n# set to NO\n# The default value is: NO.\n\nHAVE_DOT               = NO\n\n# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_NUM_THREADS        = 0\n\n# When you want a differently looking font in the dot files that doxygen\n# generates you can specify the font name using DOT_FONTNAME. You need to make\n# sure dot is able to find the font, which can be done by putting it in a\n# standard location or by setting the DOTFONTPATH environment variable or by\n# setting DOT_FONTPATH to the directory containing the font.\n# The default value is: Helvetica.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTNAME           = Helvetica\n\n# The DOT_FONTSIZE tag can be used to set the size (in points) of the font of\n# dot graphs.\n# Minimum value: 4, maximum value: 24, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTSIZE           = 10\n\n# By default doxygen will tell dot to use the default font as specified with\n# DOT_FONTNAME. If you specify a different font using DOT_FONTNAME you can set\n# the path where dot can find it using this tag.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTPATH           = \n\n# If the CLASS_GRAPH tag is set to YES then doxygen will generate a graph for\n# each documented class showing the direct and indirect inheritance relations.\n# Setting this tag to YES will force the CLASS_DIAGRAMS tag to NO.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH tag is set to YES then doxygen will generate a\n# graph for each documented class showing the direct and indirect implementation\n# dependencies (inheritance, containment, and class references variables) of the\n# class with other documented classes.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCOLLABORATION_GRAPH    = YES\n\n# If the GROUP_GRAPHS tag is set to YES then doxygen will generate a graph for\n# groups, showing the direct groups dependencies.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGROUP_GRAPHS           = YES\n\n# If the UML_LOOK tag is set to YES, doxygen will generate inheritance and\n# collaboration diagrams in a style similar to the OMG's Unified Modeling\n# Language.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LOOK               = NO\n\n# If the UML_LOOK tag is enabled, the fields and methods are shown inside the\n# class node. If there are many fields or methods and many nodes the graph may\n# become too big to be useful. The UML_LIMIT_NUM_FIELDS threshold limits the\n# number of items for each type to make the size more manageable. Set this to 0\n# for no limit. Note that the threshold may be exceeded by 50% before the limit\n# is enforced. So when you set the threshold to 10, up to 15 fields may appear,\n# but if the number exceeds 15, the total amount of fields shown is limited to\n# 10.\n# Minimum value: 0, maximum value: 100, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LIMIT_NUM_FIELDS   = 10\n\n# If the TEMPLATE_RELATIONS tag is set to YES then the inheritance and\n# collaboration graphs will show the relations between templates and their\n# instances.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nTEMPLATE_RELATIONS     = NO\n\n# If the INCLUDE_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are set to\n# YES then doxygen will generate a graph for each documented file showing the\n# direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDE_GRAPH          = YES\n\n# If the INCLUDED_BY_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are\n# set to YES then doxygen will generate a graph for each documented file showing\n# the direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDED_BY_GRAPH      = YES\n\n# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command. Disabling a call graph can be\n# accomplished by means of the command \\hidecallgraph.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALL_GRAPH             = NO\n\n# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command. Disabling a caller graph can be\n# accomplished by means of the command \\hidecallergraph.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALLER_GRAPH           = NO\n\n# If the GRAPHICAL_HIERARCHY tag is set to YES then doxygen will graphical\n# hierarchy of all classes instead of a textual one.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# If the DIRECTORY_GRAPH tag is set to YES then doxygen will show the\n# dependencies a directory has on other directories in a graphical way. The\n# dependency relations are determined by the #include relations between the\n# files in the directories.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDIRECTORY_GRAPH        = YES\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot. For an explanation of the image formats see the section\n# output formats in the documentation of the dot tool (Graphviz (see:\n# http://www.graphviz.org/)).\n# Note: If you choose svg you need to set HTML_FILE_EXTENSION to xhtml in order\n# to make the SVG files visible in IE 9+ (other browsers do not have this\n# requirement).\n# Possible values are: png, jpg, gif, svg, png:gd, png:gd:gd, png:cairo,\n# png:cairo:gd, png:cairo:cairo, png:cairo:gdiplus, png:gdiplus and\n# png:gdiplus:gdiplus.\n# The default value is: png.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_IMAGE_FORMAT       = png\n\n# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to\n# enable generation of interactive SVG images that allow zooming and panning.\n#\n# Note that this requires a modern browser other than Internet Explorer. Tested\n# and working are Firefox, Chrome, Safari, and Opera.\n# Note: For IE 9+ you need to set HTML_FILE_EXTENSION to xhtml in order to make\n# the SVG files visible. Older versions of IE do not have SVG support.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINTERACTIVE_SVG        = NO\n\n# The DOT_PATH tag can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found in the path.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_PATH               = \n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the \\dotfile\n# command).\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOTFILE_DIRS           = \n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           = \n\n# The DIAFILE_DIRS tag can be used to specify one or more directories that\n# contain dia files that are included in the documentation (see the \\diafile\n# command).\n\nDIAFILE_DIRS           = \n\n# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the\n# path where java can find the plantuml.jar file. If left blank, it is assumed\n# PlantUML is not used or called during a preprocessing step. Doxygen will\n# generate a warning when it encounters a \\startuml command in this case and\n# will not generate output for the diagram.\n\nPLANTUML_JAR_PATH      = \n\n# When using plantuml, the PLANTUML_CFG_FILE tag can be used to specify a\n# configuration file for plantuml.\n\nPLANTUML_CFG_FILE      = \n\n# When using plantuml, the specified paths are searched for files specified by\n# the !include statement in a plantuml block.\n\nPLANTUML_INCLUDE_PATH  = \n\n# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_GRAPH_MAX_NODES    = 50\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nMAX_DOT_GRAPH_DEPTH    = 0\n\n# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent\n# background. This is disabled by default, because dot on Windows does not seem\n# to support this out of the box.\n#\n# Warning: Depending on the platform used, enabling this option may lead to\n# badly anti-aliased labels on the edges of a graph (i.e. they become hard to\n# read).\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_TRANSPARENT        = NO\n\n# Set the DOT_MULTI_TARGETS tag to YES to allow dot to generate multiple output\n# files in one run (i.e. multiple -o and -T options on the command line). This\n# makes dot run faster, but since only newer versions of dot (>1.8.10) support\n# this, this feature is disabled by default.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_MULTI_TARGETS      = NO\n\n# If the GENERATE_LEGEND tag is set to YES doxygen will generate a legend page\n# explaining the meaning of the various boxes and arrows in the dot generated\n# graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES, doxygen will remove the intermediate dot\n# files that are used to generate the various graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_CLEANUP            = YES\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 2.1005859375,
          "content": "ACLOCAL_AMFLAGS = -I m4\nAUTOMAKE_OPTIONS = foreign\nEXTRA_DIST = config README.html leptonica-license.txt moller52.jpg version-notes.html make-for-auto make-for-local autogen.sh Doxyfile\n\npkgconfigdir = $(libdir)/pkgconfig\npkgconfig_DATA = lept.pc\n\nSUBDIRS = src prog\n\n# The fuzzing tests are run by OSS-Fuzz https://oss-fuzz.com/,\n# but can also be run locally.\n# Note: -fsanitize=fuzzer currently requires the clang++ compiler.\n\n# LIB_FUZZING_ENGINE can be overridden by the caller.\n# This is used by OSS-Fuzz.\nLIB_FUZZING_ENGINE ?= -fsanitize=fuzzer\n\nFUZZERS :=\nFUZZERS += adaptmap_fuzzer\nFUZZERS += affine_fuzzer\nFUZZERS += barcode_fuzzer\nFUZZERS += baseline_fuzzer\nFUZZERS += bilateral_fuzzer\nFUZZERS += binarize_fuzzer\nFUZZERS += blend_fuzzer\nFUZZERS += boxfunc_fuzzer\nFUZZERS += boxfunc3_fuzzer\nFUZZERS += boxfunc4_fuzzer\nFUZZERS += boxfunc5_fuzzer\nFUZZERS += ccbord_fuzzer\nFUZZERS += checkerboard_fuzzer\nFUZZERS += classapp_fuzzer\nFUZZERS += colorfill_fuzzer\nFUZZERS += colorquant_fuzzer\nFUZZERS += compare_fuzzer\nFUZZERS += dewarp_fuzzer\nFUZZERS += edge_fuzzer\nFUZZERS += enhance_fuzzer\nFUZZERS += fhmtgen_fuzzer\nFUZZERS += finditalic_fuzzer\nFUZZERS += flipdetect_fuzzer\nFUZZERS += fpix2_fuzzer\nFUZZERS += graphics_fuzzer\nFUZZERS += graymorph_fuzzer\nFUZZERS += grayquant_fuzzer\nFUZZERS += jpegiostub_fuzzer\nFUZZERS += kernel_fuzzer\nFUZZERS += mask_fuzzer\nFUZZERS += maze_fuzzer\nFUZZERS += morph_fuzzer\nFUZZERS += morphapp_fuzzer\nFUZZERS += pageseg_fuzzer\nFUZZERS += paintcmap_fuzzer\nFUZZERS += pix1_fuzzer\nFUZZERS += pix3_fuzzer\nFUZZERS += pix4_fuzzer\nFUZZERS += pixa_recog_fuzzer\nFUZZERS += pixconv_fuzzer\nFUZZERS += pix_orient_fuzzer\nFUZZERS += pix_rotate_shear_fuzzer\nFUZZERS += recog_basic_fuzzer\n\nfuzzers: $(FUZZERS)\n\n$(FUZZERS): all\n\n%_fuzzer: $(top_srcdir)/prog/fuzzing/%_fuzzer.cc\n\t$(CXX) $(CXXFLAGS) -g $(LIB_FUZZING_ENGINE) \\\n          -I $(top_srcdir)/src \\\n          -I $(builddir)/src \\\n          $< \\\n          $(builddir)/src/.libs/libleptonica.a \\\n          $(GIFLIB_LIBS) \\\n          $(JPEG_LIBS) \\\n          $(LIBJP2K_LIBS) \\\n          $(LIBPNG_LIBS) \\\n          $(LIBTIFF_LIBS) \\\n          $(LIBWEBP_LIBS) \\\n          -o $@\n"
        },
        {
          "name": "README.html",
          "type": "blob",
          "size": 56.52734375,
          "content": "<html>\n<body BGCOLOR=FFFFE4>\n\n<!-- JS Window Closer -----\n<form>\n<center>\n<input type=\"button\" onclick=\"window.close();\" value=\"Close this window\">\n</center>\n</form>\n----- JS Window Closer -->\n\n\n<!-- Creative Commons License -->\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/2.5/\"><img alt=\"Creative Commons License\" border=\"0\" src=\"http://creativecommons.org/images/public/somerights20.gif\" /></a>\nThis work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by/2.5/\">Creative Commons Attribution 2.5 License</a>.\n<!-- /Creative Commons License -->\n\n\n<!--\n\n<rdf:RDF xmlns=\"http://web.resource.org/cc/\"\n  xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n  xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n<Work rdf:about=\"\">\n  <dc:title>leptonica</dc:title>\n  <dc:date>2001</dc:date>\n  <dc:description>An open source C library for efficient image processing and image analysis operations</dc:description>\n  <dc:creator><Agent>\n    <dc:title>Dan S. Bloomberg</dc:title>\n  </Agent></dc:creator>\n  <dc:rights><Agent>\n    <dc:title>Dan S. Bloomberg</dc:title>\n  </Agent></dc:rights>\n  <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/Text\" />\n  <dc:source rdf:resource=\"www.leptonica.com\"/>\n  <license rdf:resource=\"http://creativecommons.org/licenses/by/2.5/\" />\n</Work>\n\n<License rdf:about=\"http://creativecommons.org/licenses/by/2.5/\">\n  <permits rdf:resource=\"http://web.resource.org/cc/Reproduction\" />\n  <permits rdf:resource=\"http://web.resource.org/cc/Distribution\" />\n  <requires rdf:resource=\"http://web.resource.org/cc/Notice\" />\n  <requires rdf:resource=\"http://web.resource.org/cc/Attribution\" />\n  <permits rdf:resource=\"http://web.resource.org/cc/DerivativeWorks\" />\n</License>\n\n</rdf:RDF>\n\n-->\n\n<pre>\n/*====================================================================*\n -  Copyright (C) 2001 Leptonica.  All rights reserved.\n -\n -  Redistribution and use in source and binary forms, with or without\n -  modification, are permitted provided that the following conditions\n -  are met:\n -  1. Redistributions of source code must retain the above copyright\n -     notice, this list of conditions and the following disclaimer.\n -  2. Redistributions in binary form must reproduce the above\n -     copyright notice, this list of conditions and the following\n -     disclaimer in the documentation and/or other materials\n -     provided with the distribution.\n -\n -  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n -  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n -  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n -  A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL ANY\n -  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n -  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n -  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n -  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n -  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n -  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n -  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *====================================================================*/\n\nREADME (version 1.85.0)\nFile update: Oct 16 2024\n---------------------------\n\ngunzip leptonica-1.85.0.tar.gz\ntar -xvf leptonica-1.85.0.tar\n\n</pre>\n\n<!--Navigation Panel-->\n<hr>\n<P>\n<A HREF=\"#BUILDING\">Building leptonica</A><br>\n<A HREF=\"#DEPENDENCIES\">I/O libraries leptonica is dependent on</A><br>\n<A HREF=\"#DOXYGEN\">Generating documentation using doxygen</A><br>\n<A HREF=\"#DEVELOP\">Developing with leptonica</A><br>\n<A HREF=\"#CONTENTS\">What's in leptonica?</A><br>\n<P>\n<hr>\n<!--End of Navigation Panel-->\n\n\n<h2> <A NAME=\"BUILDING\">\nBuilding leptonica\n</h2>\n\n<pre>\n1. Top view\n\n  This tar includes:\n    (1) src: library source and function prototypes for building liblept\n    (2) prog: source for regression test, usage example programs, and\n        sample images\n  for building on these platforms:\n     -  Linux on x86 (i386) and AMD 64 (x64)\n     -  OSX (both powerPC and x86).\n     -  Cygwin, msys and mingw on x86\n  There is an additional zip file for building with MS Visual Studio.\n\n  Libraries, executables and prototypes are easily made, as described below.\n\n  When you extract from the archive, all files are put in a\n  subdirectory 'leptonica-1.85.0'.  In that directory you will\n  find a src directory containing the source files for the library,\n  and a prog directory containing source files for various\n  testing and example programs.\n\n2. Building on Linux/Unix/MacOS\n\n  The software can be downloaded from either a release tar file or\n  from the current head of the source.  For the latter, go to a directory\n  and clone the tree into it (note the '.' at the end):\n     cd [some directory]\n     git clone https://github.com/DanBloomberg/leptonica.git .\n\n  There are three ways to build the library:\n\n    (1) By customization:  Use the existing static makefile,\n        src/makefile.static and customize the build by setting flags\n        in src/environ.h.  See details below.\n        Note: if you are going to develop with leptonica, the static\n        makefiles are useful.\n\n    (2) Using autoconf (supported by James Le Cuirot).\n        Run ./configure in this directory to\n        build Makefiles here and in src.  Autoconf handles the\n        following automatically:\n            * architecture endianness\n            * enabling Leptonica I/O image read/write functions that\n              depend on external libraries (if the libraries exist)\n            * enabling functions for redirecting formatted image stream\n              I/O to memory (on Linux only)\n        After running ./configure: make; make install.  There's also\n        a 'make check' for testing.\n\n    (3) Using cmake (supported by Egor Pugin).\n        The build must always be in a different directory from the root\n        of the source (here).  It is common to build in a subdirectory\n        of the root.  From the root directory, do this:\n            mkdir build\n            cd build\n          Then to make only the library:\n            cmake ..\n            make\n          To make both the library and the programs:\n            cmake .. -DBUILD_PROG=1\n            make\n        To clean out the current build, just remove everything in\n        the build subdirectory.\n\n  In more detail for these three methods:\n\n    (1) Customization using the static makefiles:\n\n       * FIRST THING: Run make-for-local.  This simply renames\n               src/makefile.static  -->  src/makefile\n               prog/makefile.static -->  prog/makefile\n         [Note: the autoconf build will not work if you have any files\n          named \"makefile\" in src or prog.  If you've already run\n          make-for-local and renamed the static makefiles, and you then\n          want to build with autoconf, run make-for-auto to rename them\n          back to makefile.static.]\n\n       * You can customize for:\n         (a) Including Leptonica image I/O functions that depend on external\n             libraries, such as libpng.  Use environment variables in\n             src/environ.h, such as HAVE_LIBPNG.\n         (b) Disabling the GNU functions for redirecting formatted stream I/O\n             to memory.  By default, HAVE_FMEMOPEN is enabled in src/environ.h.\n         (c) Using special memory allocators (see src/environ.h).\n         (d) Changing compile and runtime defaults for messages to stderr.\n             The default in src/environ.h is to output info, warning and\n             error messages.\n         (e) Specifying the location of the object code.  By default it\n             goes into a tree whose root is also the parent of the src\n             and prog directories.  This can be changed using the\n             ROOT_DIR variable in makefile.\n\n       * Build the library:\n         - To make an optimized version of the library (in src):\n               make\n         - To make a debug version of the library (in src):\n               make DEBUG=yes debug\n         - To make a shared library version (in src):\n               make SHARED=yes shared\n         - To make the prototype extraction program (in src):\n               make   (to make the library first)\n               make xtractprotos\n\n       * To use shared libraries, you need to include the location of\n         the shared libraries in your LD_LIBRARY_PATH.  For example,\n         after you have built programs with 'make SHARED=yes' in the\n         prog directory, you need to tell the programs where the shared\n         libraries are:\n             export LD_LIBRARY_PATH=../lib/shared:$LD_LIBRARY_PATH\n\n       * Make the programs in prog/ (after you have make liblept):\n         - Customize the makefile by setting ALL_LIBS to link the\n           external image I/O libraries.  By default, ALL_LIBS assumes that\n           libtiff, libjpeg and libpng are available.\n         - To make an optimized version of all programs (in prog):\n               make\n         - To make a debug version of all programs (in prog):\n               make DEBUG=yes\n         - To make a shared library version of all programs (in prog):\n               make SHARED=yes\n         - To run the programs, be sure to set\n             export LD_LIBRARY_PATH=../lib/shared:$LD_LIBRARY_PATH\n\n    (2) Building using autoconf  (Thanks to James Le Cuirot)\n\n       * If you downloaded from a release tar, it will be \"configure ready\".\n       * If you cloned from the git master tree, you need to make the\n         configure executable.  To do this, run\n            autogen.sh.\n\n       Use the standard incantation, in the root directory (the\n       directory with configure):\n          ./configure    [build the Makefile]\n          make   [builds the library and shared library versions of\n                  all the progs]\n          make install  [as root; this puts liblept.a into /usr/local/lib/\n                         and 13 of the progs into /usr/local/bin/ ]\n          make [-j2] check  [runs the alltests_reg set of regression tests.\n                             This works even if you build in a different\n                             place from the distribution. The -j parameter\n                             should not exceed half the number of cores.\n                     NOTE: If the test fails, it's likely due to a race\n                           condition.  Rerun with 'make check']\n\n       Configure supports installing in a local directory (e.g., one that\n       doesn't require root access).  For example, to install in $HOME/local,\n           ./configure --prefix=$HOME/local/\n           make install\n       For different ways to build and link leptonica with tesseract, see\n           https://github.com/tesseract-ocr/tesseract/wiki/Compiling\n       In brief, using autotools to build tesseract and then install it\n       in $HOME/local (after installing leptonica there), do the\n       following from your tesseract root source directory:\n            ./autogen.sh\n            LIBLEPT_HEADERSDIR=$HOME/local/include ./configure \\\n               --prefix=$HOME/local/ --with-extra-libraries=$HOME/local/lib\n            make install\n\n       Configure also supports building in a separate directory from the\n       source.  Run \"/(path-to)/leptonica-1.85.0/configure\" and then \"make\"\n       from the desired build directory.\n\n       Configure has a number of useful options; run \"configure --help\" for\n       details.  If you're not planning to modify the library, adding the\n       \"--disable-dependency-tracking\" option will speed up the build.  By\n       default, both static and shared versions of the library are built.  Add\n       the \"--disable-shared\" or \"--disable-static\" option if one or the other\n       isn't needed.  To skip building the programs, use \"--disable-programs\".\n\n       By default, the library is built with debugging symbols.  If you do not\n       want these, use \"CFLAGS=-O2 ./configure\" to eliminate symbols for\n       subsequent compilations, or \"make CFLAGS=-O2\" to override the default\n       for compilation only.  Another option is to use the 'install-strip'\n       target (i.e., \"make install-strip\") to remove the debugging symbols\n       when the library is installed.\n\n       Finally, if you find that the installed programs are unable to link\n       at runtime to the installed library, which is in /usr/local/lib,\n       try to run configure in this way:\n           LDFLAGS=\"-Wl,-rpath -Wl,/usr/local/lib\" ./configure\n       which causes the compiler to pass those options through to the linker.\n\n       For the Debian distribution, out of all the programs in the prog\n       directory, we only build a small subset of general purpose\n       utility programs.  This subset is the same set of programs that\n       'make install' puts into /usr/local/bin.  It has no dependency on\n       the image files that are bundled in the prog directory for testing.\n\n    (3) Using cmake\n\n       The usual method is to build in a directory that is a subdirectory\n       of the root.  First do this from the root directory:\n            mkdir build\n            cd build\n\n       The default build (shared libraries, no debug, only the library)\n       is made with\n            cmake ..\n       For other options, you can use these flags on the cmake line:\n       * To make a static library:\n            cmake .. -DBUILD_SHARED_LIBS=OFF\n            make\n       * To make a dynamic library (default) and STATIC (or builtin) dependencies:\n            cmake .. -DSW_BUILD_SHARED_LIBS=0\n            make\n       * To build with debug:\n            cmake .. -DCMAKE_BUILD_TYPE=Debug\n            make\n       * To make both the library and the programs:\n            cmake .. -DBUILD_PROG=1\n            make\n\n       The programs are put in build/bin/\n       To run these (e.g., for testing), move them to the prog\n       directory and run them from there:\n          cd bin\n          mv * ../../prog/\n          cd ../../prog\n          alltests_reg generate\n          alltests_reg compare\n\n       To build the library directly from the root directory instead of\n       the build subdirectory:\n          mkdir build\n          cmake -H . -Bbuild   (-H means the source directory,\n                                -B means the directory for the build\n          make\n\n3. Building on Windows\n\n   (a) Building with Visual Studio\n\n       1. Download the latest SW\n              (Software Network https://software-network.org/)\n          client from https://software-network.org/client/\n       2. Unpack it, add to PATH.\n       3. Run once to perform cmake integration:\n          sw setup\n       4. Run:\n          git clone https://github.com/danbloomberg/leptonica\n          cd leptonica\n          mkdir build\n          cd build\n          cmake ..\n       5. Build a solution (leptonica.sin) in your Visual Studio version.\n\n   (b) Building for mingw32 with <a href=\"http://www.mingw.org/\">MSYS</a>\n       (Thanks to David Bryan)\n\n       MSYS is a Unix-compatible build environment for the Windows-native\n       mingw32 compiler.  Selecting the \"mingw-developer-toolkit\",\n       \"mingw32-base\", and \"msys-base\" packages during installation will allow\n       building the library with autoconf as in (2) above.  It will also allow\n       building with the static makefile as in (1) above if this option is used\n       in the make command line:\n\n         CC='gcc -std=c99 -U__STRICT_ANSI__'\n\n       Only the static library may be built this way; the autoconf method must\n       be used if a shared (DLL) library is desired.\n\n       External image libraries (see below) must be downloaded separately,\n       built, and installed before building the library.  Pre-built libraries\n       are available from the <a\n       href=\"http://sourceforge.net/projects/ezwinports/\">ezwinports</a> project.\n\n   (c) Building for <a href=\"http://www.cygwin.com/\">Cygwin</a>\n       (Thanks to David Bryan)\n\n       Cygwin is a Unix-compatible build and runtime environment.  Adding the\n       \"binutils\", \"gcc-core\", and \"make\" packages from the \"Devel\" category and\n       the \"diffutils\" package from the \"Utils\" category to the packages\n       installed by default will allow building the library with autoconf as in\n       (2) above.  Pre-built external image libraries are available in the\n       \"Graphics\" and \"Libs\" categories and may be selected for installation.\n       If the libraries are not installed into the /lib, /usr/lib, or\n       /usr/local/lib directories, you must run make with the\n       \"LDFLAGS=-L/(path-to-image)/lib\" option.  Building may also be performed\n       with the static makefile as in (1) above if this option is used in the\n       make command:\n\n         CC='gcc -std=c99 -U__STRICT_ANSI__'\n\n       Only the static library may be built this way; the autoconf method must\n       be used if a shared (DLL) library is desired.\n\n4. Building and running oss-fuzz programs\n\n   The oss-fuzz programs are in prog/fuzzing/.  They are run by oss-fuzz\n   on a continual basis with random inputs.  They can also be built and\n   run locally.  On ubuntu 24.04, clang-18 is required to build these\n   programs. It can be installed using\n       sudo apt-get install clang-18\n   On 22.04, use clang-14.\n\n   Stefan Weil has provided this method for building the fuzzing programs.\n   From your github root:\n       ./autogen.sh    (to make configure)\n       mkdir -p bin/fuzzer\n       cd bin/fuzzer\n   Run configure to generate the Makefiles:\n     address sanitizer issue:\n       ../../configure CC=clang-18 CXX=clang++-18 CFLAGS=\"-g -O2 \\\n       -D_GLIBCXX_DEBUG -fsanitize=fuzzer-no-link,address,undefined\" \\\n       CXXFLAGS=\"-g -O2 -D_GLIBCXX_DEBUG \\\n       -fsanitize=fuzzer-no-link,address,undefined\"\n     memory sanitizer issue:\n       ../../configure CC=clang-18 CXX=clang++-18 CFLAGS=\"-g -O2 \\\n       -D_GLIBCXX_DEBUG -fsanitize=fuzzer-no-link,memory,undefined\" \\\n       CXXFLAGS=\"-g -O2 -D_GLIBCXX_DEBUG \\\n       -fsanitize=fuzzer-no-link,memory,undefined\"\n   Build:\n     address sanitizer issue:\n       make fuzzers CXX=clang++-18 CXXFLAGS=\"-g -O2 -D_GLIBCXX_DEBUG \\\n       -fsanitize=fuzzer,address,undefined\"\n     memory sanitizer issue:\n       make fuzzers CXX=clang++-18 CXXFLAGS=\"-g -O2 -D_GLIBCXX_DEBUG \\\n       -fsanitize=fuzzer,memory,undefined\"\n\n   When an oss-fuzz issue has been created, download the Reproducer\n   Testcase file (e.g, name it \"/tmp/payload\").  To run one of the\n   fuzzing executables in bin/fuzzer, e.g., pix4_fuzzer:\n       cd ../../prog/fuzzing\n       ../../bin/fuzzer/pix4_fuzzer /tmp/payload\n\n5. The 270+ programs in the prog directory are an integral part of this\n   package.  They can be divided into four groups:\n\n   (1) Programs that are useful applications for running on the\n       command line.  They can be installed from autoconf builds\n       using 'make install'.  Examples of these are the PostScript\n       and pdf conversion programs: converttopdf, converttops,\n       convertfilestopdf, convertfilestops, convertsegfilestopdf,\n       convertsegfilestops, imagetops, printimage and printsplitimage.\n\n   (2) Programs that are used as regression tests in alltests_reg.\n       These are named *_reg, and 100 of them are invoked together\n       (alltests_reg).  The regression test framework has been\n       standardized, and regresstion tests are relatively easy\n       to write.  See regutils.h for details.\n\n   (3) Other regression tests, some of which have not (yet) been\n       put into the framework.  They are also named *_reg.\n\n   (4) Programs that were used to test library functions or auto-generate\n       library code.  These are useful for testing the behavior of small\n       sets of functions and for providing example code.\n\n6. Sanitizers can be used on all the regression tests in alltests_reg.c.\n\n   First run autogen.sh to generate the configure script\n     autogen.sh\n   Then run configure to generate the Makefile with the address sanitizer\n     ./configure '--disable-shared' '--enable-debug' 'CFLAGS=-D_GLIBCXX_DEBUG -DDEBUG=1 -Wall -pedantic -g -O0 -fsanitize=address,undefined -fstack-protector-strong -ftrapv'\n   Make and run all the regression tests\n      make check\n</pre>\n\n<h2> <A NAME=\"DEPENDENCIES\">\nI/O libraries leptonica is dependent on\n</h2>\n\n<pre>\n   Leptonica is configured to handle image I/O using these external\n   libraries: libjpeg, libtiff, libpng, libz, libwebp, libgif, libopenjp2\n\n   These libraries are easy to obtain.  For example, using the\n   Debian package manager:\n       sudo apt-get install <package>\n   where <package> = {libpng-dev, libjpeg62-turbo-dev, libtiff5-dev,\n                      libwebp-dev, libopenjp2-7-dev, libgif-dev}.\n\n   Leptonica also allows image I/O with bmp and pnm formats, for which\n   we provide the serializers (encoders and decoders).  It also\n   gives output drivers for wrapping images in PostScript and PDF, which\n   in turn use tiffg4, jpeg and flate (i.e., zlib) encoding.  PDF will\n   also wrap jpeg2000 images.\n\n   There is a programmatic interface to gnuplot.  To use it, you\n   need only the gnuplot executable (suggest version 3.7.2 or later);\n   the gnuplot library is not required.\n\n   If you build with automake, libraries on your system will be\n   automatically found and used.\n\n   The rest of this section is for building with the static makefiles.\n   The entries in environ.h specify which of these libraries to use.\n   The default is to link to these four libraries:\n      libjpeg.a  (standard jfif jpeg library, version 6b or 7, 8 or 9))\n      libtiff.a  (standard Leffler tiff library, version 3.7.4 or later;\n      libpng.a   (standard png library, suggest version 1.4.0 or later)\n      libz.a     (standard gzip library, suggest version 1.2.3)\n                  current non-beta version is 3.8.2)\n\n   These libraries (and their shared versions) should be in /usr/lib.\n   (If they're not, you can change the LDFLAGS variable in the makefile.)\n   Additionally, for compilation, the following header files are\n   assumed to be in /usr/include:\n      jpeg:  jconfig.h\n      png:   png.h, pngconf.h\n      tiff:  tiff.h, tiffio.h\n\n   If for some reason you do not want to link to specific libraries,\n   even if you have them, stub files are included for the ten\n   different output formats:\n        bmp, jpeg, png, pnm, ps, pdf, tiff, gif, webp and jp2.\n   For example, if you don't want to include the tiff library,\n   in environ.h set:\n       #define  HAVE_LIBTIFF   0\n   and the stubs will be linked in.\n\n   To read and write webp files:\n      (1) Download libwebp from sourceforge\n      (2) #define HAVE_LIBWEBP   1  (in environ.h)\n      (3) In prog/makefile, edit ALL_LIBS to include -lwebp\n      (4) The library will be installed into /usr/local/lib.\n          You may need to add that directory to LDFLAGS; or, equivalently,\n          add that path to the LD_LIBRARY_PATH environment variable.\n\n   To read and write jpeg2000 files:\n      (1) Download libopenjp2, version 2.3, from their distribution.\n      (2) #define HAVE_LIBJP2K   1  (in environ.h)\n      (2a) If you have version 2.X, X != 3, edit LIBJP2K_HEADER  (in environ.h)\n      (3) In prog/makefile, edit ALL_LIBS to include -lopenjp2\n      (4) The library will be installed into /usr/local/lib.\n\n   To read and write gif files:\n      (1) Download version giflib-5.1.X+ from souceforge\n      (2) #define  HAVE_LIBGIF   1  (in environ.h)\n      (3) In prog/makefile, edit ALL_LIBS to include -lgif\n      (4) The library will be installed into /usr/local/lib.\n</pre>\n\n\n<h2> <A NAME=\"DOXYGEN\">\nGenerating documentation using doxygen\n</h2>\n\n<pre>\nThe source code is set up to allow generation of documentation using doxygen.\nTo do this:\n(1) Download the Debian doxygen package:\n     sudo apt-get install doxygen\n(2) In the root client directory containing Doxyfile:\n     doxygen Doxyfile\nThe documentation will be generated in a 'doc' subdirectory, accessible\nfrom this file (relative to the root)\n    ./doc/html/index.html\n</pre>\n\n\n<h2> <A NAME=\"DEVELOP\">\nDeveloping with leptonica\n</h2>\n\n<pre>\nYou are encouraged to use the static makefiles if you are developing\napplications using leptonica.  The following instructions assume\nthat you are using the static makefiles and customizing environ.h.\n\n1. Automatic generation of prototypes\n\n   The prototypes are automatically generated by the program xtractprotos.\n   They can either be put in-line into allheaders.h, or they can be\n   written to a file leptprotos.h, which is #included in allheaders.h.\n   Note: (1) We supply the former version of allheaders.h.\n         (2) all .c files simply include allheaders.h.\n\n   First, make xtractprotos:\n       make xtractprotos\n\n   Then to generate the prototypes and make allheaders.h, do one of\n   these two things:\n       make allheaders  [puts everything into allheaders.h]\n       make allprotos   [generates a file leptprotos.h containing the\n                         function prototypes, and includes it in allheaders.h]\n\n   Things to note about xtractprotos, assuming that you are developing\n   in Leptonica and need to regenerate the prototypes in allheaders.h:\n\n     (1) xtractprotos is part of Leptonica.  You can 'make' it in either\n         src or prog (see the makefile).\n     (2) You can output the prototypes for any C file to stdout by running:\n             xtractprotos <cfile>     or\n             xtractprotos -prestring=[string] <cfile>\n     (3) The source for xtractprotos has been packaged up into a tar\n         containing just the Leptonica files necessary for building it\n         in Linux.  The tar file is available at:\n             www.leptonica.com/source/xtractlib-1.5.tar.gz\n\n2. Global parameter to enable development and testing\n\n   For security reasons, with the exception of the regression utility\n   (regutils.c), leptonica as shipped (starting with 1.77) does not allow:\n      * 'system(3)' fork/exec\n      * writes to temp files with compiled-in names\n   System calls are used either to run gnuplot or display an image on\n   the screen.  \n\n   This is enforced with a global parameter, LeptDebugOK, initialized to 0.\n   It can be overridden either at compile time by changing the initialization\n   (in writefile.c), or at runtime, using setLeptDebugOK().\n   The programs in the prog directory, which mostly test functions in\n   the library, are not subject to this restriction.\n\n3. GNU runtime functions for stream redirection to memory\n\n   There are two non-standard gnu functions, fmemopen() and open_memstream(),\n   that only work on Linux and conveniently allow memory I/O with a file\n   stream interface.  This is convenient for compressing and decompressing\n   image data to memory rather than to file.  Stubs are provided\n   for all these I/O functions.  Default is to enable them; OSX developers\n   must disable by setting #define HAVE_FMEMOPEN  0  (in environ.h).\n   If these functions are not enabled, raster to compressed data in\n   memory is accomplished safely but through a temporary file.\n   See 9 for more details on image I/O formats.\n\n   If you're building with the autoconf programs, these two functions are\n   automatically enabled if available.\n\n4. Runtime functions not available on all platforms\n\n   Some functions are not available on all systems.  One example of such a\n   function is fstatat().  If possible, such functions will be replaced by\n   wrappers, stubs or behavioral equivalent functions.  By default, such\n   functions are disabled; enable them by setting #define HAVE_FUNC  1 (in\n   environ.h).\n\n   If you're building with the autoconf or cmake programs, these functions are\n   automatically enabled if available.\n\n5. Typedefs\n\n   A deficiency of C is that no standard has been universally\n   adopted for typedefs of the built-in types.  As a result,\n   typedef conflicts are common, and cause no end of havoc when\n   you try to link different libraries.  If you're lucky, you\n   can find an order in which the libraries can be linked\n   to avoid these conflicts, but the state of affairs is aggravating.\n\n   The most common typedefs use lower case variables: uint8, int8, ...\n   The png library avoids typedef conflicts by altruistically\n   appending \"png_\" to the type names.  Following that approach,\n   Leptonica appends \"l_\" to the type name.  This should avoid\n   just about all conflicts.  In the highly unlikely event that it doesn't,\n   here's a simple way to change the type declarations throughout\n   the Leptonica code:\n    (1) customize a file \"converttypes.sed\" with the following lines:\n        /l_uint8/s//YOUR_UINT8_NAME/g\n        /l_int8/s//YOUR_INT8_NAME/g\n        /l_uint16/s//YOUR_UINT16_NAME/g\n        /l_int16/s//YOUR_INT16_NAME/g\n        /l_uint32/s//YOUR_UINT32_NAME/g\n        /l_int32/s//YOUR_INT32_NAME/g\n        /l_float32/s//YOUR_FLOAT32_NAME/g\n        /l_float64/s//YOUR_FLOAT64_NAME/g\n    (2) in the src and prog directories:\n       - if you have a version of sed that does in-place conversion:\n            sed -i -f converttypes.sed *\n       - else, do something like (in csh)\n           foreach file (*)\n           sed -f converttypes.sed $file > tempdir/$file\n           end\n\n   If you are using Leptonica with a large code base that typedefs the\n   built-in types differently from Leptonica, just edit the typedefs\n   in environ.h.  This should have no side-effects with other libraries,\n   and no issues should arise with the location in which liblept is\n   included.\n\n   For compatibility with 64 bit hardware and compilers, where\n   necessary we use the typedefs in stdint.h to specify the pointer\n   size (either 4 or 8 byte).\n\n6. Compile and runtime control over stderr output (see environ.h and utils1.c)\n\n   Leptonica provides both compile-time and run-time control over\n   messages and debug output (thanks to Dave Bryan).  Both compile-time\n   and run-time severity thresholds can be set.  The runtime threshold\n   can also be set by an environmental variable.  Messages are\n   vararg-formatted and of 3 types: error, warning, informational.\n   These are all macros, and can be further suppressed when\n   NO_CONSOLE_IO is defined on the compile line.  For production code\n   where no output is to go to stderr, compile with -DNO_CONSOLE_IO.\n\n   Runtime redirection of stderr output is also possible, using a\n   callback mechanism.  The callback function is registered using\n   leptSetStderrHandler().   See utils1.c for details.\n\n7. In-memory raster format (Pix)\n\n   Unlike many other open source packages, Leptonica uses packed\n   data for images with all bit/pixel (bpp) depths, allowing us\n   to process pixels in parallel.  For example, rasterops works\n   on all depths with 32-bit parallel operations throughout.\n   Leptonica is also explicitly configured to work on both little-endian\n   and big-endian hardware.  RGB image pixels are always stored\n   in 32-bit words, and a few special functions are provided for\n   scaling and rotation of RGB images that have been optimized by\n   making explicit assumptions about the location of the R, G and B\n   components in the 32-bit pixel.  In such cases, the restriction\n   is documented in the function header.  The in-memory data structure\n   used throughout Leptonica to hold the packed data is a Pix,\n   which is defined and documented in pix.h.  The alpha component\n   in RGB images is significantly better supported, starting in 1.70.\n\n   Additionally, a FPix is provided for handling 2D arrays of floats,\n   and a DPix is provided for 2D arrays of doubles.  Converters\n   between these and the Pix are given.\n\n8. Conversion between Pix and other in-memory raster formats\n\n . If you use Leptonica with other imaging libraries, you will need\n   functions to convert between the Pix and other image data\n   structures.  To make a Pix from other image data structures, you\n   will need to understand pixel packing, pixel padding, component\n   ordering and byte ordering on raster lines.  See the file pix.h\n   for the specification of image data in the pix.\n\n9. Custom memory management\n\n   Leptonica allows you to use custom memory management (allocator,\n   deallocator).  For Pix, which tend to be large, the alloc/dealloc\n   functions can be set programmatically.  For all other structs and arrays,\n   the allocators are specified in environ.h.  Default functions\n   are malloc and free.  We have also provided a sample custom\n   allocator/deallocator for Pix, in pixalloc.c.\n</pre>\n\n\n<h2> <A NAME=\"CONTENTS\">\nWhat's in leptonica?\n</h2>\n<pre>\n1. Rasterops\n\n   This is a source for a clean, fast implementation of rasterops.\n   You can find details starting at the Leptonica home page,\n   and also by looking directly at the source code.\n   Some of the low-level code is in roplow.c, and an interface is\n   given in rop.c to the simple Pix image data structure.\n\n2. Binary morphology\n\n   This is a source for efficient implementations of binary morphology\n   Details are found starting at the Leptonica home page, and by reading\n   the source code.\n\n   Binary morphology is implemented two ways:\n\n     (a) Successive full image rasterops for arbitrary\n         structuring elements (Sels)\n\n     (b) Destination word accumulation (dwa) for specific Sels.\n         This code is automatically generated.  See, for example,\n         the code in fmorphgen.1.c and fmorphgenlow.1.c.\n         These files were generated by running the program\n         prog/fmorphautogen.c. Results can be checked by comparing dwa\n         and full image rasterops; e.g., prog/fmorphauto_reg.c.\n\n   Method (b) is considerably faster than (a), which is the\n   reason we've gone to the effort of supporting the use\n   of this method for all Sels.  We also support two different\n   boundary conditions for erosion.\n\n   Similarly, dwa code for the general hit-miss transform can\n   be auto-generated from an array of hit-miss Sels.\n   When prog/fhmtautogen.c is compiled and run, it generates\n   the dwa C code in fhmtgen.1.c and fhmtgenlow.1.c.  These\n   files can then be compiled into the libraries or into other programs.\n   Results can be checked by comparing dwa and rasterop results;\n   e.g., prog/fhmtauto_reg.c\n\n   Several functions with simple parsers are provided to execute a\n   sequence of morphological operations (plus binary rank reduction\n   and replicative expansion).  See morphseq.c.\n\n   The structuring element is represented by a simple Sel data structure\n   defined in morph.h.  We provide (at least) seven ways to generate\n   Sels in sel1.c, and several simple methods to generate hit-miss\n   Sels for pattern finding in selgen.c.\n\n   In use, the most common morphological Sels are separable bricks,\n   of dimension n x m (where either n or m, but not both, is commonly 1).\n   Accordingly, we provide separable morphological operations on brick\n   Sels, using for binary both rasterops and dwa.  Parsers are provided\n   for a sequence of separable binary (rasterop and dwa) and grayscale\n   brick morphological operations, in morphseq.c.  The main\n   advantage in using the parsers is that you don't have to create\n   and destroy Sels, or do any of the intermediate image bookkeeping.\n\n   We also give composable separable brick functions for binary images,\n   for both rasterop and dwa.  These decompose each of the linear\n   operations into a sequence of two operations at different scales,\n   reducing the operation count to a sum of decomposition factors,\n   rather than the (un-decomposed) product of factors.\n   As always, parsers are provided for a sequence of such operations.\n\n3. Grayscale morphology and rank order filters\n\n   We give an efficient implementation of grayscale morphology for brick\n   Sels.  See the Leptonica home page and the source code.\n\n   Brick Sels are separable into linear horizontal and vertical elements.\n   We use the van Herk/Gil-Werman algorithm, that performs the calculations\n   in a time that is independent of the size of the Sels.  Implementations\n   of tophat and hdome are also given.\n\n   We also provide grayscale rank order filters for brick filters.\n   The rank order filter is a generalization of grayscale morphology,\n   that selects the rank-valued pixel (rather than the min or max).\n   A color rank order filter applies the grayscale rank operation\n   independently to each of the (r,g,b) components.\n\n4. Image scaling\n\n   Leptonica provides many simple and relatively efficient\n   implementations of image scaling.  Some of them are listed here;\n   for the full set see the web page and the source code.\n\n   Grayscale and color images are scaled using:\n      - sampling\n      - lowpass filtering followed by sampling,\n      - area mapping\n      - linear interpolation\n\n   Scaling operations with antialiased sampling, area mapping,\n   and linear interpolation are limited to 2, 4 and 8 bpp gray,\n   24 bpp full RGB color, and 2, 4 and 8 bpp colormapped\n   (bpp == bits/pixel).  Scaling operations with simple sampling\n   can be done at 1, 2, 4, 8, 16 and 32 bpp.  Linear interpolation\n   is slower but gives better results, especially for upsampling.\n   For moderate downsampling, best results are obtained with area\n   mapping scaling.  With very high downsampling, either area mapping\n   or antialias sampling (lowpass filter followed by sampling) give\n   good results.  Fast area map with power-of-2 reduction are also\n   provided.  Optional sharpening after resampling is provided to\n   improve appearance by reducing the visual effect of averaging\n   across sharp boundaries.\n\n   For fast analysis of grayscale and color images, it is useful to\n   have integer subsampling combined with pixel depth reduction.\n   RGB color images can thus be converted to low-resolution\n   grayscale and binary images.\n\n   For binary scaling, the dest pixel can be selected from the\n   closest corresponding source pixel.  For the special case of\n   power-of-2 binary reduction, low-pass rank-order filtering can be\n   done in advance.  Isotropic integer expansion is done by pixel replication.\n\n   We also provide 2x, 3x, 4x, 6x, 8x, and 16x scale-to-gray reduction\n   on binary images, to produce high quality reduced grayscale images.\n   These are integrated into a scale-to-gray function with arbitrary\n   reduction.\n\n   Conversely, we have special 2x and 4x scale-to-binary expansion\n   on grayscale images, using linear interpolation on grayscale\n   raster line buffers followed by either thresholding or dithering.\n\n   There are also image depth converters that don't have scaling,\n   such as unpacking operations from 1 bpp to grayscale, and\n   thresholding and dithering operations from grayscale to 1, 2 and 4 bpp.\n\n5. Image shear and rotation (and affine, projective, ...)\n\n   Image shear is implemented with both rasterops and linear interpolation.\n   The rasterop implementation is faster and has no constraints on image\n   depth.  We provide horizontal and vertical shearing about an\n   arbitrary point (really, a line), both in-place and from source to dest.\n   The interpolated shear is used on 8 bpp and 32 bpp images, and\n   gives a smoother result.  Shear is used for the fastest implementations\n   of rotation.\n\n   There are three different types of general image rotators:\n\n     a.  Grayscale rotation using area mapping\n         - pixRotateAM() for 8 bit gray and 24 bit color, about center\n         - pixRotateAMCorner() for 8 bit gray, about image UL corner\n         - pixRotateAMColorFast() for faster 24 bit color, about center\n\n     b.  Rotation of an image of arbitrary bit depth, using\n         either 2 or 3 shears.  These rotations can be done\n         about an arbitrary point, and they can be either\n         from source to dest or in-place; e.g.\n         - pixRotateShear()\n         - pixRotateShearIP()\n\n     c.  Rotation by sampling.  This can be used on images of arbitrary\n         depth, and done about an arbitrary point.  Colormaps are retained.\n\n   The area mapping rotations are slower and more accurate, because each\n   new pixel is composed using an average of four neighboring pixels\n   in the original image; this is sometimes also also called \"antialiasing\".\n   Very fast color area mapping rotation is provided.\n\n   The shear rotations are much faster, and work on images of arbitrary\n   pixel depth, but they just move pixels around without doing any averaging.\n   The pixRotateShearIP() operates on the image in-place.\n\n   We also provide orthogonal rotators (90, 180, 270 degree; left-right\n   flip and top-bottom flip) for arbitrary image depth.\n   And we provide implementations of affine, projective and bilinear\n   transforms, with both sampling (for speed) and interpolation\n   (for antialiasing).\n\n6. Sequential algorithms\n\n   We provide a number of fast sequential algorithms, including\n   binary and grayscale seedfill, and the distance function for\n   a binary image.  The most efficient binary seedfill is\n   pixSeedfill(), which uses Luc Vincent's algorithm to iterate\n   raster- and antiraster-ordered propagation, and can be used\n   for either 4- or 8-connected fills.  Similar raster/antiraster\n   sequential algorithms are used to generate a distance map from\n   a binary image, and for grayscale seedfill.  We also use Heckbert's\n   stack-based filling algorithm for identifying 4- and 8-connected\n   components in a binary image.  A fast implementation of the\n   watershed transform, using a priority queue, is included.\n\n7. Image enhancement\n\n   Some simple image enhancement routines for grayscale and color\n   images have been provided.  These include intensity mapping with\n   gamma correction and contrast enhancement, histogram equalization,\n   edge sharpening, smoothing, and various color-shifting operations.\n\n8. Convolution and cousins\n\n   A number of standard image processing operations are also\n   included, such as block convolution, binary block rank filtering,\n   grayscale and rgb rank order filtering, and edge and local\n   minimum/maximum extraction.   Generic convolution is included,\n   for both separable and non-separable kernels, using float arrays\n   in the Pix.  Two implementations are included for grayscale and\n   color bilateral filtering: a straightforward (slow) one, and a\n   fast, approximate, separable one.\n\n9. Image I/O\n\n   Some facilities have been provided for image input and output.\n   This is of course required to build executables that handle images,\n   and many examples of such programs, most of which are for\n   testing, can be built in the prog directory.  Functions have been\n   provided to allow reading and writing of files in JPEG, PNG,\n   TIFF, BMP, PNM ,GIF, WEBP and JP2 formats.  These formats were chosen\n   for the following reasons:\n\n    - JFIF JPEG is the standard method for lossy compression\n      of grayscale and color images.  It is supported natively\n      in all browsers, and uses a good open source compression\n      library.  Decompression is supported by the rasterizers\n      in PS and PDF, for level 2 and above.  It has a progressive\n      mode that compresses about 10% better than standard, but\n      is considerably slower to decompress.  See jpegio.c.\n\n    - PNG is the standard method for lossless compression\n      of binary, grayscale and color images.  It is supported\n      natively in all browsers, and uses a good open source\n      compression library (zlib).  It is superior in almost every\n      respect to GIF (which, until recently, contained proprietary\n      LZW compression).  See pngio.c.\n\n    - TIFF is a common interchange format, which supports different\n      depths, colormaps, etc., and also has a relatively good and\n      widely used binary compression format (CCITT Group 4).\n      Decompression of G4 is supported by rasterizers in PS and PDF,\n      level 2 and above.  G4 compresses better than PNG for most\n      text and line art images, but it does quite poorly for halftones.\n      It has good and stable support by Leffler's open source library,\n      which is clean and small.  Tiff also supports multipage\n      images through a directory structure.  Note: because jpeg is\n      a supported tiff compression mode, leptonica requires linking\n      both libtiff and libjpeg to read and write tiff.  See tiffio.c\n\n    - BMP has (until recently) had no compression.  It is a simple\n      format with colormaps that requires no external libraries.\n      It is commonly used because it is a Microsoft standard,\n      but has little besides simplicity to recommend it.  See bmpio.c.\n\n    - PNM is a very simple, old format that still has surprisingly\n      wide use in the image processing community.  It does not\n      support compression or colormaps, but it does support binary,\n      grayscale and rgb images.  Like BMP, the implementation\n      is simple and requires no external libraries.  See pnmio.c.\n\n    - WEBP is a new wavelet encoding method derived from libvpx,\n      a video compression library.  It is rapidly growing in acceptance,\n      and is supported natively in several browsers.  Leptonica provides\n      an interface through webp into the underlying codec.  You need\n      to download libwebp.  See webpio.c.\n\n    - JP2 (jpeg2000) is a wavelet encoding method, that has clear\n      advantages over jpeg in compression and quality (especially when\n      the image has sharp edges, such as scanned documents), but is\n      only slowly growing in acceptance.  For it to be widely supported,\n      it will require support on a major browser (as with webp).\n      Leptonica provides an interface through openjpeg into the underlying\n      codec.  You need to download libopenjp2, version 2.X.  See jp2kio.c.\n\n    - GIF is still widely used in the world.  With the expiration\n      of the LZW patent, it is practical to add support for GIF files.\n      The open source gif library is relatively incomplete and\n      unsupported (because of the Sperry-Rand-Burroughs-Univac\n      patent history).  Leptonica supports versions 5.1+.  See gifio.c.\n\n   Here's a summary of compression support and limitations:\n      - All formats except JPEG, WEBP and JP2K support 1 bpp binary.\n      - All formats support 8 bpp grayscale (GIF must have a colormap).\n      - All formats except GIF support rgb color.\n      - All formats except PNM, JPEG, WEBP and JP2K support 8 bpp colormap.\n      - PNG and PNM support 2 and 4 bpp images.\n      - PNG supports 2 and 4 bpp colormap, and 16 bpp without colormap.\n      - PNG, JPEG, TIFF, WEBP, JP2K and GIF support image compression;\n        PNM and BMP do not.\n      - WEBP supports rgb color and rgba.\n      - JP2 supports 8 bpp grayscale, rgb color and rgba.\n   Use prog/ioformats_reg for a regression test on all formats, including\n   thorough testing on TIFF.\n   For more thorough testing on other formats, use:\n      - prog/pngio_reg for PNG.\n      - prog/gifio_reg for GIF\n      - prog/webpio_reg for WEBP\n      - prog/jp2kio_reg for JP2\n\n   We provide generators for PS output, from all types of input images.\n   The output can be either uncompressed or compressed with level 2\n   (ccittg4 or dct) or level 3 (flate) encoding.  You have flexibility\n   for scaling and placing of images, and for printing at different\n   resolutions.  You can also compose mixed raster (text, image) PS.\n   See psio1.c for examples of how to output PS for different applications.\n   As examples of usage, see:\n     * prog/converttops.c for a general image --> PS conversion\n           for printing.  You can specify the PS compression level (1, 2, or 3).\n     * prog/imagetops.c for a special image --> PS conversion\n           for printing at maximum size on 8.5 x 11 paper.  You can\n           specify the PS compression level (1, 2, or 3).\n     * prog/convertfilestops.c to generate a multipage level 3 compressed\n           PS file that can then be converted to pdf with ps2pdf.\n     * prog/convertsegfilestops.c to generate a multipage, mixed raster,\n           level 2 compressed PS file.\n\n   We provide generators for PDF output, again from all types of input\n   images, and with ccittg4, dct, flate and jpx (jpeg2000) compression.\n   You can do the following for PDF:\n     * Put any number of images onto a page, with specified input\n       resolution, location and compression.\n     * Write a mixed raster PDF, given an input image and a segmentation\n       mask.  Non-image regions are written in G4 (fax) encoding.\n     * Concatenate single-page PDF wrapped images into a single PDF file.\n     * Build a PDF file of all images in a directory or array of file names.\n   As examples of usage, see:\n     * prog/converttopdf.c: fast pdf generation with one image/page.\n       For speed, this avoids transcoding whenever possible.\n     * prog/convertfilestopdf.c: more flexibility in the output.  You\n       can set the resolution, scaling, encoding type and jpeg quality.\n     * prog/convertsegfilestopdf.c: generates a multipage, mixed raster pdf,\n       with separate controls for compressing text and non-text regions.\n\n   Note: any or all of these I/O library calls can be stubbed out at\n         compile time, using the environment variables in environ.h.\n\n   For all formatted reads and writes, we support read from memory\n   and write to memory.  The gnu C runtime library (glibc) supports\n   two I/O functions, open_memstream() and fmemopen(), which read\n   and write directly to memory as if writing to a file stream.\n     * On all platforms, leptonica supports direct read/write with memory\n       for TIFF, PNG, BMP, GIF and WEBP formats.\n     * On linux, leptonica uses the special gnu libraries to enable\n       direct read/write with memory for JPEG, PNM and JP2.\n     * On platforms without the gnu libraries, such as OSX, Windows\n       and Solaris, read/write with memory for JPEG, PNM and JP2 goes\n       through temp files.\n   To enable/disable memory I/O for image read/write, see environ.h.\n\n   We also provide fast serialization and deserialization between a pix\n   in memory and a file (spixio.c).  This works on all types of pix images.\n\n10. Colormap removal and color quantization\n\n   Leptonica provides functions that remove colormaps, for conversion\n   to either 8 bpp gray or 24 bpp RGB.  It also provides the inverse\n   function to colormap removal; namely, color quantization\n   from 24 bpp full color to 8 bpp colormap with some number\n   of colormap colors.  Several versions are provided, some that\n   use a fast octree vector quantizer and others that use\n   a variation of the median cut quantizer.  For high-level interfaces,\n   see for example: pixConvertRGBToColormap(), pixOctreeColorQuant(),\n   pixOctreeQuantByPopulation(), pixFixedOctcubeQuant256(),\n   and pixMedianCutQuant().\n\n11. Programmatic image display\n\n   For debugging, pixDisplay() and pixDisplayWithTitle() in writefile.c\n   can be called to display an image using one of several display\n   programs (xzgv, xli, xv, l_view).  If necessary to fit on the screen,\n   the image is reduced in size, with 1 bpp images being converted\n   to grayscale for readability.  Another common debug method is to\n   accumulate intermediate images in a pixa, and then either view these\n   as a mosaic (using functions in pixafunc2.c), or gather them into\n   a compressed PDF or PostScript file for viewing with evince.  Common\n   image display programs are: xzgv, xli, xv, display, gthumb, gqview,\n   evince, gv and acroread.\n\n12. Document image analysis\n\n   Many functions have been included specifically to help with\n   document image analysis.  These include skew and text orientation\n   detection; page segmentation; baseline finding for text;\n   unsupervised classification of connected components, characters\n   and words; dewarping camera images; adaptive binarization; and\n   a simple book-adaptive classifier for various character sets,\n   segmentation for newspaper articles, etc.\n\n13. Data structures\n\n   Several simple data structures are provided for safe and efficient handling\n   of arrays of numbers, strings, pointers, and bytes.  The generic\n   pointer array is implemented in four ways: as a stack, a queue,\n   a heap (used to implement a priority queue), and an array with\n   insertion and deletion, from which the stack operations form a subset.\n   Byte arrays are implemented both as a wrapper around the actual\n   array and as a queue.  The string arrays are particularly useful\n   for both parsing and composing text.  Generic lists with\n   doubly-linked cons cells are also provided.  Other data structures\n   are provided for handling ordered sets and maps, as well as hash sets\n   and hash maps.\n\n14. Examples of programs that are easily built using the library:\n\n    - for plotting x-y data, we give a programmatic interface\n      to the gnuplot program, with output to X11, png, ps or eps.\n      We also allow serialization of the plot data, in a form\n      such that the data can be read, the commands generated,\n      and (finally) the plot constructed by running gnuplot.\n\n    - a simple jbig2-type classifier, using various distance\n      metrics between image components (correlation, rank\n      hausdorff); see prog/jbcorrelation.c, prog/jbrankhaus.c.\n\n    - a simple color segmenter, giving a smoothed image\n      with a small number of the most significant colors.\n\n    - a program for converting all images in a directory\n      to a PostScript file, and a program for printing an image\n      in any (supported) format to a PostScript printer.\n\n    - various programs for generating pdf files from compressed\n      images, including very fast ones that don't scale and\n      avoid transcoding if possible.\n\n    - converters between binary images and SVG format.\n\n    - an adaptive recognition utility for training and identifying\n      text characters in a multipage document such as a book.\n\n    - a bitmap font facility that allows painting text onto\n      images.  We currently support one font in several sizes.\n      The font images and postscript programs for generating\n      them are stored in prog/fonts/, and also as compiled strings\n      in bmfdata.h.\n\n    - a binary maze game lets you generate mazes and find shortest\n      paths between two arbitrary points, if such a path exists.\n      You can also compute the \"shortest\" (i.e., least cost) path\n      between points on a grayscale image.\n\n    - a 1D barcode reader.  This is still in an early stage of development,\n      with little testing, and it only decodes 6 formats.\n\n    - a utility that will dewarp images of text that were captured\n      with a camera at close range.\n\n    - a sudoku solver and generator, including a good test for uniqueness\n\n    - see (13, above) for other document image applications.\n\n15. JBig2 encoder\n\n   Leptonica supports an open source jbig2 encoder (yes, there is one!),\n   which can be downloaded from:\n       http://www.imperialviolet.org/jbig2.html.\n   To build the encoder, use the most recent version.  This bundles\n   Leptonica 1.63.  Once you've built the encoder, use it to compress\n   a set of input image files:  (e.g.)\n       ./jbig2 -v -s <imagefile1 ...>  >   <jbig2_file>\n   You can also generate a pdf wrapping for the output jbig2.  To do that,\n   call jbig2 with the -p arg, which generates a symbol file (output.sym)\n   plus a set of location files for each input image (output.0000, ...):\n        ./jbig2 -v -s -p <imagefile1 ...>\n   and then generate the pdf:\n       python pdf.py output  >  <pdf_file>\n   See the usage documentation for the jbig2 compressor at:\n       http://www.imperialviolet.org/binary/jbig2enc.html\n   You can uncompress the jbig2 files using jbig2dec, which can be\n   downloaded and built from:\n       http://jbig2dec.sourceforge.net/\n\n16. Versions\n\n   New versions of the Leptonica library are released several times\n   a year, and version numbers are provided for each release in the\n   following files:\n       src/makefile.static\n       CMakeLists.txt\n       configure.ac\n       allheaders_top.txt  (and propagated to allheaders.h)\n   All even versions from 1.42 to 1.60 were originally archived at\n   http://code.google.com/p/leptonica, as well as all versions after 1.60.\n   These have now been transferred by Egor Pugin to github:\n       github.com/danbloomberg/leptonica\n   where all releases (1.42 - 1.85.0) are available; e.g.,\n       https://github.com/DanBloomberg/leptonica/releases/tag/1.85.0\n   The more recent releases, from 1.80, are also available at\n       leptonica.org/download.html\n   Note that if you are downloading from github, the releases are more\n   likely to be stable than the master.  Also, if you download from\n   the master and use autotools (e.g., Makefile.am), you must first run\n   autogen.sh to generate the configure program and the Makefiles.\n\n   The number of downloads of leptonica increased by nearly an order\n   of magnitude with 1.69, due to bundling with tesseract and\n   incorporation in ubuntu 12-04.  Jeff Breidenbach has built all\n   the Debian releases, which require release version numbers.\n   The Debian binary release versions to date are:\n        1.69 : 3.0.0\n        1.70 : 4.0.0\n        1.71 : 4.2.0\n        1.72 : 4.3.0\n        1.73 : 5.0.0\n        1.74 : 5.1.0\n        1.75 : 5.2.0\n        1.76 : 5.3.0\n        1.77 : 5.3.0\n        1.78 : 5.3.0\n        1.79 : 5.4.0\n        1.80 : 5.4.0\n        1.81 : 5.4.0\n        1.82 : 5.4.0\n        1.83 : 6.0.0\n        1.84 : 6.0.0\n        1.85 : 6.0.0   (in progress)\n\n   A brief version chronology is maintained in version-notes.html.\n   Starting with gcc 4.3.3, error warnings (-Werror) are given for\n   minor infractions like not checking return values of built-in C\n   functions.  I have attempted to eliminate these warnings.\n   In any event, you will see warnings with the -Wall flag.\n\n</pre>\n\n<!-- JS Window Closer -----\n<form>\n<center>\n<input type=\"button\" onclick=\"window.close();\" value=\"Close this window\">\n</center>\n</form>\n----- JS Window Closer -->\n\n</body>\n</html>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.32421875,
          "content": "# Leptonica Library #\n\n[![sw](https://github.com/DanBloomberg/leptonica/actions/workflows/sw.yml/badge.svg)](https://github.com/DanBloomberg/leptonica/actions/workflows/sw.yml)\n\nwww.leptonica.org\n\n## The library supports many operations that are useful on ##\n\n  * Document images\n  * Natural images\n\n## Fundamental image processing and image analysis operations ##\n\n  * Rasterop (aka bitblt)\n  * Affine transforms (scaling, translation, rotation, shear) on images of arbitrary pixel depth\n  * Projective and bilinear transforms\n  * Binary and grayscale morphology, rank order filters, and convolution\n  * Seedfill and connected components\n  * Image transformations with changes in pixel depth, both at the same scale and with scale change\n  * Pixelwise masking, blending, enhancement, arithmetic ops, etc.\n\n## Ancillary utilities ##\n\n  * I/O for standard image formats (_jpg_, _png_, _tiff_, _webp_, _jp2_, _bmp_, _pnm_, _gif_, _ps_, _pdf_)\n  * Utilities to handle arrays of image-related data types (e.g., _pixa_, _boxa_, _pta_)\n  * Utilities for stacks, generic arrays, queues, heaps, lists, sets, ordered maps, hashmaps; number and string arrays; etc.\n\n## Examples of some applications enabled and implemented ##\n\n  * Octcube-based color quantization (w/ and w/out dithering)\n  * Modified median cut color quantization (w/ and w/out dithering)\n  * Determination of skew and orientation of text images\n  * Adaptive background normalization and binarization\n  * Segmentation of page images with mixed text and images\n  * Color segmentation by clustering and seed-filling\n  * Location of baselines and local skew determination\n  * jbig2 unsupervised classifier\n  * Border representations of 1 bpp images and raster conversion for SVG\n  * Postscript generation (levels 1, 2 and 3) of images for device-independent output\n  * PDF generation (G4, DCT, FLATE) of images for device-independent output\n  * Connectivity-preserving thinning and thickening of 1 bpp images\n  * Image warping (captcha, stereoscopic)\n  * Image dewarping based on content (textlines)\n  * Watershed transform\n  * Greedy splitting of components into rectangles\n  * Location of largest fg or bg rectangles in 1 bpp images\n  * Search for least-cost paths on binary and grayscale images\n  * Barcode reader for 1D barcodes (very early version as of 1.55)\n\n## Implementation characteristics ##\n\n  * _Efficient_: image data is packed binary (into 32-bit words); operations on 32-bit data whenever possible\n  * _Simple_: small number of data structures; simplest implementations provided that are efficient\n  * _Consistent_: data allocated on the heap with simple ownership rules; function names usually begin with primary data structure (e.g., _pix_); simple code patterns throughout\n  * _Robust_: all ptr args checked; extensive use of accessors; exit not permitted\n  * _Tested_: over 140 regression tests provided for basic functions and applications; valgrind tested\n  * _ANSI C_: automatically generated prototype header file\n  * _Portable_: endian-independent; builds in Linux, macOS, MinGW, Cygwin, Windows\n  * _Thread-safe_: uses atomic operations for reference counting\n  * _Documentation_: large number of in-line comments; doxygen; web pages for further background\n  * _Examples_: many programs provided to test and show usage of over 2700 functions in the library\n\n\n## Open Source Projects that use Leptonica ##\n  * [tesseract](https://github.com/tesseract-ocr/tesseract/) (optical character recognition)\n  * [OpenCV](https://github.com/opencv/opencv) (computer vision library)\n  * [jbig2enc](https://github.com/agl/jbig2enc) (encodes multipage binary image documents with jbig2 compression)\n\n## Major contributors to Leptonica ##\n  * Jeff Breidenbach: Jeff has built every Debian distribution for Leptonica. He has also made many improvements to formatted image I/O, including tiff, png and pdf. He is a continuous and practical advocate for simplification.\n  * David Bryan: David has worked for years to support Leptonica on multiple platforms. He designed many nice features in Leptonica, such as the severity-based error messaging system, and has identified and fixed countless bugs. And he has built and tested many distribution on cross-compilers.\n  * James Le Cuirot: James has written and supported the autotools scripts on Leptonica distributions for many years, and has helped test many recent distributions.\n  * Egor Pugin: Egor is co-maintainer of Leptonica on GitHub. He ported everything, including all the old distributions, from Google Code when it shut down. He set Leptonica up for appveyor and travis testing, and has implemented the sw project, which simplifies building executables on Windows.\n  * Stefan Weil: Stefan is a co-maintainer of Leptonica on GitHub. He has worked from the beginning to clean up the Leptonica GitHub distribution, including removing errors in the source code.  Among other things: he suggested and implemented the use of Coverity Scan; made the library thread-safe by implementing atomic operations for reference counting; and helped remove internal struct data from the public interface.\n  * Zdenko Podobny: Zdenko is a co-maintainer of Leptonica on GitHub. He has worked, mostly behind the scenes as a primary maintainer of tesseract, to help with Leptonica builds on all platforms, and coordinate with its use in tesseract.\n  * Jürgen Buchmüller: Jürgen wrote text converters to modify Leptonica source code so that it generates documentation using doxygen. He also wrote tiff wrappers for memory I/O.\n  * Adam Korczynski: Adam is an expert in testing libraries for safety.  He has built most of the open source fuzzers for Leptonica in the oss-fuzz project, with significant code coverage.\n  * Tom Powers: Tom supported the port of Leptonica to Windows for many years.  He made many contributions to code quality and documentation.\n\n## Installing Leptonica (vcpkg)\n  * You can build and install Leptonica using [vcpkg](https://github.com/Microsoft/vcpkg/) dependency manager:\n\n  ``` sh or powershell\n      git clone https://github.com/Microsoft/vcpkg.git\n      cd vcpkg\n      ./bootstrap-vcpkg.sh # \"./bootstrap-vcpkg.bat\" for powershell\n      ./vcpkg integrate install\n      ./vcpkg install leptonica\n  ```\n\n  * The Leptonica port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.330078125,
          "content": "#!/bin/sh\n#\n#  autogen.sh\n\nlibtoolize -c -f 2>/dev/null || glibtoolize -c -f\naclocal\nautoheader -f\nautoconf\nif grep -q PKG_CHECK_MODULES configure; then\n  # The generated configure is invalid because pkg-config is unavailable.\n  rm configure\n  echo \"Error, missing pkg-config. Check the build requirements.\"\n  exit 1\nfi\nautomake -a -c -f\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 9.0380859375,
          "content": "AC_PREREQ([2.69])\nAC_INIT([leptonica], [1.85.1])\nAC_CONFIG_AUX_DIR([config])\nAC_CONFIG_HEADERS([config_auto.h:config/config.h.in])\nAC_CONFIG_SRCDIR([src/adaptmap.c])\n\nAC_CONFIG_MACRO_DIR([m4])\nLT_INIT\n\nAM_INIT_AUTOMAKE\nAC_LANG(C)\nAC_CANONICAL_HOST\n\n# Checks for programs.\nAC_PROG_AWK\nAC_PROG_CC\nAC_PROG_CPP\nAC_PROG_INSTALL\nAC_PROG_LN_S\nAC_PROG_MAKE_SET\n\n# Checks for arguments.\nAC_ARG_WITH([zlib], AS_HELP_STRING([--without-zlib], [do not include zlib support]))\nAC_ARG_WITH([libpng], AS_HELP_STRING([--without-libpng], [do not include libpng support]))\nAC_ARG_WITH([jpeg], AS_HELP_STRING([--without-jpeg], [do not include jpeg support]))\nAC_ARG_WITH([giflib], AS_HELP_STRING([--without-giflib], [do not include giflib support]))\nAC_ARG_WITH([libtiff], AS_HELP_STRING([--without-libtiff], [do not include libtiff support]))\nAC_ARG_WITH([libwebp], AS_HELP_STRING([--without-libwebp], [do not include libwebp support]))\nAC_ARG_WITH([libwebpmux], AS_HELP_STRING([--without-libwebpmux], [do not include libwebpmux support]))\nAC_ARG_WITH([libopenjpeg], AS_HELP_STRING([--without-libopenjpeg], [do not include libopenjpeg support]))\n\nAC_ARG_ENABLE([programs], AS_HELP_STRING([--disable-programs], [do not build additional programs]))\nAM_CONDITIONAL([ENABLE_PROGRAMS], [test \"x$enable_programs\" != xno])\n\n# Checks for libraries.\nLT_LIB_M\n\nAS_IF([test \"x$with_zlib\" = xno], [\n  zlib_missing=untried\n], [\n  zlib_missing=\n\n  PKG_CHECK_MODULES([ZLIB], [zlib], [\n    AC_DEFINE([HAVE_LIBZ], 1, [Define to 1 if you have zlib.])\n  ], [\n    AC_CHECK_LIB([z], [deflate], [:], [zlib_missing=library])\n    AC_CHECK_HEADER([zlib.h], [:], [zlib_missing=header])\n\n    AS_IF([test \"x$zlib_missing\" = x], [\n      AC_DEFINE([HAVE_LIBZ], 1, [Define to 1 if you have zlib.]) AC_SUBST([ZLIB_LIBS], [-lz])\n    ], [\n      AS_IF([test \"x$with_zlib\" = xyes], AC_MSG_ERROR([zlib support requested but $zlib_missing not found]))\n    ])\n  ])\n])\n\nAS_IF([test \"x$with_libpng\" = xno], [\n  libpng_missing=untried\n], [\n  libpng_missing=\n\n  PKG_CHECK_MODULES([LIBPNG], [libpng], [\n    AC_DEFINE([HAVE_LIBPNG], 1, [Define to 1 if you have libpng.])\n  ], [\n    AC_CHECK_LIB([png], [png_read_png], [:], [libpng_missing=library], [$LIBM $ZLIB_LIBS])\n    AC_CHECK_HEADER([png.h], [:], [libpng_missing=headers])\n\n    AS_IF([test \"x$libpng_missing\" = x], [\n      AC_DEFINE([HAVE_LIBPNG], 1, [Define to 1 if you have libpng.]) AC_SUBST([LIBPNG_LIBS], [-lpng])\n    ], [\n      AS_IF([test \"x$with_libpng\" = xyes], AC_MSG_ERROR([libpng support requested but $libpng_missing not found]))\n    ])\n  ])\n])\n\nAS_IF([test \"x$with_jpeg\" = xno], [\n  jpeg_missing=untried\n], [\n  jpeg_missing=\n\n  PKG_CHECK_MODULES([JPEG], [libjpeg], [\n    AC_DEFINE([HAVE_LIBJPEG], 1, [Define to 1 if you have jpeg.])\n  ], [\n    AC_CHECK_LIB([jpeg], [jpeg_read_scanlines], [:], [jpeg_missing=library])\n    AC_CHECK_HEADER([jpeglib.h], [:], [jpeg_missing=headers])\n\n    AS_IF([test \"x$jpeg_missing\" = x], [\n      AC_DEFINE([HAVE_LIBJPEG], 1, [Define to 1 if you have jpeg.]) AC_SUBST([JPEG_LIBS], [-ljpeg])\n    ], [\n      AS_IF([test \"x$with_jpeg\" = xyes], AC_MSG_ERROR([jpeg support requested but $jpeg_missing not found]))\n    ])\n  ])\n])\n\nAS_IF([test \"x$with_giflib\" = xno], [\n  giflib_missing=untried\n], [\n  giflib_missing=\n\n  AC_CHECK_LIB([gif], [DGifOpenFileHandle], [:], [giflib_missing=library])\n  AC_CHECK_HEADER([gif_lib.h], [:], [giflib_missing=header])\n\n  AS_IF([test \"x$giflib_missing\" = x], [\n    AC_MSG_CHECKING([giflib is at least version 5.1 (but not 5.1.2)])\n    AC_PREPROC_IFELSE([\n      AC_LANG_SOURCE([[\n#include <gif_lib.h>\n#if !defined GIFLIB_MAJOR || GIFLIB_MAJOR < 5 || (GIFLIB_MAJOR == 5 && GIFLIB_MINOR == 0)\n#error giflib version too old\n#elif GIFLIB_MAJOR == 5 && GIFLIB_MINOR == 1 && GIFLIB_RELEASE == 2\n#error giflib 5.1.2 is broken\n#endif\n      ]])\n    ], [\n      AC_MSG_RESULT([yes])\n      AC_DEFINE([HAVE_LIBGIF], 1, [Define to 1 if you have giflib.]) AC_SUBST([GIFLIB_LIBS], [-lgif])\n    ], [\n      AC_MSG_RESULT([no])\n      AS_IF([test \"x$with_giflib\" = xyes], AC_MSG_ERROR([giflib version too old or broken]))\n      giflib_missing=old\n    ])\n  ], [\n    AS_IF([test \"x$with_giflib\" = xyes], AC_MSG_ERROR([giflib support requested but $giflib_missing not found]))\n  ])\n])\n\nAM_CONDITIONAL([HAVE_LIBGIF], [test \"x$giflib_missing\" = x])\n\nAS_IF([test \"x$with_libtiff\" = xno], [\n  libtiff_missing=untried\n], [\n  libtiff_missing=\n\n  PKG_CHECK_MODULES([LIBTIFF], [libtiff-4], [\n    AC_DEFINE([HAVE_LIBTIFF], 1, [Define to 1 if you have libtiff.])\n  ], [\n    AC_CHECK_LIB([tiff], [TIFFOpen], [:], [libtiff_missing=library], [$LIBM $ZLIB_LIBS $JPEG_LIBS])\n    AC_CHECK_HEADER([tiff.h], [:], [libtiff_missing=headers])\n\n    AS_IF([test \"x$libtiff_missing\" = x], [\n      AC_DEFINE([HAVE_LIBTIFF], 1, [Define to 1 if you have libtiff.]) AC_SUBST([LIBTIFF_LIBS], [-ltiff])\n    ], [\n      AS_IF([test \"x$with_libtiff\" = xyes], AC_MSG_ERROR([libtiff support requested but $libtiff_missing not found]))\n    ])\n  ])\n])\n\nAS_IF([test \"x$with_libwebp\" = xno], [\n  libwebp_missing=untried\n], [\n  libwebp_missing=\n\n  PKG_CHECK_MODULES([LIBWEBP], [libwebp], [\n    AC_DEFINE([HAVE_LIBWEBP], 1, [Define to 1 if you have libwebp.])\n  ], [\n    AC_CHECK_LIB([webp], [WebPGetInfo], [:], [libwebp_missing=library], [$LIBM])\n    AC_CHECK_HEADER([webp/encode.h], [:], [libwebp_missing=headers])\n\n    AS_IF([test \"x$libwebp_missing\" = x], [\n      AC_DEFINE([HAVE_LIBWEBP], 1, [Define to 1 if you have libwebp.]) AC_SUBST([LIBWEBP_LIBS], [-lwebp])\n    ], [\n      AS_IF([test \"x$with_libwebp\" = xyes], AC_MSG_ERROR([libwebp support requested but $libwebp_missing not found]))\n    ])\n  ])\n])\n\nAM_CONDITIONAL([HAVE_LIBWEBP], [test \"x$libwebp_missing\" = x])\n\nAS_IF([test \"x$with_libwebpmux\" = xno], [\n  libwebpmux_missing=untried\n], [\n  libwebpmux_missing=\n\n  PKG_CHECK_MODULES([LIBWEBPMUX], [libwebpmux >= 0.5.0], [\n    AC_DEFINE([HAVE_LIBWEBP_ANIM], 1, [Define to 1 if you have libwebpmux.])\n  ], [\n    AC_CHECK_LIB([webpmux], [WebPAnimEncoderOptionsInit], [:], [libwebpmux_missing=library], [$LIBM])\n\n    AS_IF([test \"x$libwebpmux_missing\" = x], [\n      AC_DEFINE([HAVE_LIBWEBP_ANIM], 1, [Define to 1 if you have libwebpmux.]) AC_SUBST([LIBWEBPMUX_LIBS], [-lwebpmux])\n    ], [\n      AS_IF([test \"x$with_libwebpmux\" = xyes], AC_MSG_ERROR([libwebpmux support requested but $libwebpmux_missing not found]))\n    ])\n  ])\n])\n\nAM_CONDITIONAL([HAVE_LIBWEBP_ANIM], [test \"x$libwebpmux_missing\" = x])\n\nAS_IF([test \"x$with_libopenjpeg\" = xno], [\n  libopenjpeg_missing=untried\n], [\n  libopenjpeg_missing=\n\n  PKG_CHECK_MODULES([LIBJP2K], [libopenjp2 >= 2.0.0], [\n    AC_DEFINE([HAVE_LIBJP2K], 1, [Define to 1 if you have libopenjp2.])\n  ], [\n    AC_CHECK_LIB([openjp2], [opj_create_decompress], [:], [libopenjpeg_missing=library])\n    AC_CHECK_HEADERS([openjpeg-2.3/openjpeg.h openjpeg-2.2/openjpeg.h openjpeg-2.1/openjpeg.h openjpeg-2.0/openjpeg.h],\n      [AC_DEFINE_UNQUOTED([LIBJP2K_HEADER], [<$ac_header>], [Path to <openjpeg.h> header file.]) break],\n      [libopenjpeg_missing=headers]\n    )\n\n    AS_IF([test \"x$libopenjpeg_missing\" = x], [\n      AC_DEFINE([HAVE_LIBJP2K], 1, [Define to 1 if you have libopenjp2.]) AC_SUBST([LIBJP2K_LIBS], [-lopenjp2])\n    ], [\n      AS_IF([test \"x$with_libopenjpeg\" = xyes], AC_MSG_ERROR([libopenjp2 support requested but $libopenjpeg_missing not found]))\n    ])\n  ])\n])\n\nAM_CONDITIONAL([HAVE_LIBJP2K], [test \"x$libopenjpeg_missing\" = x])\n\n# Check whether to enable debugging\nAC_MSG_CHECKING([whether to enable debugging])\nAC_ARG_ENABLE([debug],\n  AS_HELP_STRING([--enable-debug], [turn on debugging [default=no]]))\nAC_MSG_RESULT([$enable_debug])\nif test x\"$enable_debug\" = x\"yes\"; then\n    CFLAGS=\"-g -Wall -DDEBUG -pedantic -Og -g3\"\nfi\n\ncase \"$host_os\" in\n  mingw32*)\n  AC_SUBST([GDI_LIBS], [-lgdi32])\n  CPPFLAGS=\"${CPPFLAGS} -D__USE_MINGW_ANSI_STDIO\" ;;\nesac\n\n# Enable less verbose output when building.\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\n# Checks for typedefs, structures, and compiler characteristics.\nAC_TYPE_SIZE_T\nAC_C_BIGENDIAN\n\nAC_SUBST([APPLE_UNIVERSAL_BUILD], [0])\nAC_SUBST([ENDIANNESS], [L_LITTLE_ENDIAN])\n\ncase \"$ac_cv_c_bigendian\" in\n  yes) AC_SUBST([ENDIANNESS], [L_BIG_ENDIAN]) ;;\n  universal) AC_SUBST([APPLE_UNIVERSAL_BUILD], [1]) ;;\nesac\n\n# Add the -Wl and --as-needed flags to gcc compiler\nAC_MSG_CHECKING([whether compiler supports -Wl,--as-needed])\nOLD_LDFLAGS=\"${LDFLAGS}\"\nLDFLAGS=\"-Wl,--as-needed ${LDFLAGS}\"\n\nAC_LINK_IFELSE([AC_LANG_PROGRAM()],\n  AC_MSG_RESULT([yes]),\n  LDFLAGS=\"${OLD_LDFLAGS}\"; AC_MSG_RESULT([no])\n)\n\n# Checks for library functions.\nAC_CHECK_FUNCS([fmemopen])\nAC_CHECK_FUNC([fstatat])\nAC_CHECK_FUNC([dirfd])\n\n# Configuration files\nAC_CONFIG_FILES([Makefile src/endianness.h src/Makefile prog/Makefile lept.pc])\n\n# cmake configuration. Get versions from PACKAGE_VERSION.\nAX_SPLIT_VERSION\nAC_SUBST([VERSION_PLAIN], [\"${PACKAGE_VERSION}\"])\nAC_SUBST([VERSION_MAJOR], [$(echo \"$AX_MAJOR_VERSION\" | $SED 's/^[[^0-9]]*//')])\nAC_SUBST([VERSION_MINOR], [$AX_MINOR_VERSION])\nAC_SUBST([VERSION_PATCH], [$(echo \"$AX_POINT_VERSION\" | $SED 's/^\\([[0-9]][[0-9]]*\\).*/\\1/')])\nINCLUDE_PATH=`eval echo $includedir`\nAC_SUBST([INCLUDE_DIR], [\"${INCLUDE_PATH}/leptonica\"])\nAC_SUBST([leptonica_OUTPUT_NAME], [\"leptonica\"])\n\n# Create symlink\nAC_PROG_LN_S\n\nAC_OUTPUT\n"
        },
        {
          "name": "lept.pc.cmake",
          "type": "blob",
          "size": 0.404296875,
          "content": "prefix=@CMAKE_INSTALL_PREFIX@\nexec_prefix=${prefix}/bin\nlibdir=${prefix}/lib\nincludedir=${prefix}/include\n\nName: @leptonica_NAME@\nDescription: An open source C library for efficient image processing and image analysis operations\nVersion: @leptonica_VERSION@\nRequires.private: @pkgs_private@\nLibs: -L${libdir} -l@leptonica_OUTPUT_NAME@\nLibs.private: @libs_private@\nCflags: -I${includedir} -I${includedir}/leptonica\n"
        },
        {
          "name": "lept.pc.in",
          "type": "blob",
          "size": 0.4150390625,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\nincludedir=@includedir@/leptonica\n\nName: leptonica\nDescription: An open source C library for efficient image processing and image analysis operations\nVersion: @VERSION@\nLibs: -L${libdir} -l@leptonica_OUTPUT_NAME@\nLibs.private: @ZLIB_LIBS@ @LIBPNG_LIBS@ @JPEG_LIBS@ @LIBJP2K_LIBS@ @GIFLIB_LIBS@ @LIBTIFF_LIBS@ @LIBWEBP_LIBS@ @LIBWEBPMUX_LIBS@\nCflags: -I${includedir}\n\n"
        },
        {
          "name": "leptonica-license.txt",
          "type": "blob",
          "size": 1.4853515625,
          "content": "/*====================================================================*\n -  Copyright (C) 2001-2020 Leptonica.  All rights reserved.\n -\n -  Redistribution and use in source and binary forms, with or without\n -  modification, are permitted provided that the following conditions\n -  are met:\n -  1. Redistributions of source code must retain the above copyright\n -     notice, this list of conditions and the following disclaimer.\n -  2. Redistributions in binary form must reproduce the above\n -     copyright notice, this list of conditions and the following\n -     disclaimer in the documentation and/or other materials\n -     provided with the distribution.\n -\n -  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n -  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n -  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n -  A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL ANY\n -  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n -  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n -  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n -  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n -  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n -  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n -  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *====================================================================*/\n\n"
        },
        {
          "name": "lok.lua",
          "type": "blob",
          "size": 3.3916015625,
          "content": "--[[\n\tModify Leptonica's *.c file functions returning\n\t\"0 if OK, 1 on error\" to use the l_ok typedef.\n--]]\n\ndebug = false\n\n---\n-- copy a file src to dst\n-- \\param src source filename\n-- \\param dst destination filename\n-- \\param blocksize block size for copying (default 1M)\n-- \\return true on success; nil,error on error\nfunction copyfile(src, dst, blocksize)\n\tblocksize = blocksize or 1024*1024\n\tlocal fs, fd, err\n\t-- return after closing the file descriptors\n\tlocal function ret(...)\n\t\tif fs then fs:close() end\n\t\tif fd then fd:close() end\n\t\treturn ...\n\tend\n\tfs, err = io.open(src)\n\tif not fs then return ret(nil, err) end\n\tfd, err = io.open(dst, \"wb\")\n\tif not fd then return ret(nil, err) end\n\twhile true do\n\t\tlocal ok, data\n\t\tdata = fs:read(blocksize)\n\t\tif not data then break end\n\t\tok, err = fd:write(data)\n\t\tif not ok then return ret(nil, err) end\n\tend\n\treturn ret(true)\nend\n\n---\n-- List the array table (t) contents to fd.\n-- \\param fd io file descriptor\n-- \\param t array table to list\nfunction list(fd, t)\n\tif t ~= nil then\n\t\tfor _,l in ipairs(t) do\n\t\t\tfd:write(l .. '\\n')\n\t\tend\n\tend\nend\n\n---\n--- Modify the file fs and write the result to fd.\n-- \\param fs source file stream\n-- \\param fd destination file stream\n-- \\return true on success\nfunction modify(fs, fd)\n\tlocal state = 0\t\t-- parsing state\n\tlocal to_l_ok = false\t-- true, if the l_int32 return type should be changed\n\tlocal b_file = false\t-- true, have seen a \\file comment\n\n\twhile true do\n\t\tline = fs:read()\n\t\tif line == nil then\n\t\t\t-- end of file\n\t\t\tbreak\n\t\tend\n\n\t\tif line:match('^/%*[!*]$') then\n\t\t\t-- start of Doxygen comment\n\t\t\t-- introduces a new function\n\t\t\t-- go to state 1 (inside doxygen comment)\n\t\t\tstate = 1\n\t\tend\n\n\t\tif state == 3 then\n\t\t\t-- 2nd line after a comment\n\t\t\t-- contains the name of the function\n\t\t\t-- go to state 4 (skip until end of function)\n\t\t\tstate = 4\n\t\tend\n\n\t\tif state == 2 then\n\t\t\t-- 1st line after a comment\n\t\t\t-- contains the return type\n\t\t\tif to_l_ok and line == 'l_int32' then\n\t\t\t\tline = 'l_ok'\n\t\t\tend\n\t\t\tif b_file then\n\t\t\t\t-- back to state 0 (look for doxygen comment)\n\t\t\t\tstate = 0\n\t\t\t\tto_l_ok = false\n\t\t\t\tb_file = false\n\t\t\telse\n\t\t\t\t-- go to state 3 (2nd line after doxygen comment)\n\t\t\t\tstate = 3\n\t\t\tend\n\t\tend\n\n\t\tif line == ' */' then\n\t\t\t-- end of Doxygen comment\n\t\t\t-- go to state 2 (1st line after doxygen comment)\n\t\t\tstate = 2\n\t\tend\n\n\t\tif state == 1 then\n\t\t\t-- inside doxygen comment\n\t\t\tif line:match(\"%\\\\return%s+0 if OK\") then\n\t\t\t\t-- magic words that indicate l_ok return type\n\t\t\t\tto_l_ok = true\n\t\t\tend\n\t\t\tif line:match(\"%\\\\file%s+\") then\n\t\t\t\t-- this is a file comment\n\t\t\t\tb_file = true\n\t\t\tend\n\t\tend\n\n\t\tif debug then\n\t\t\tif to_l_ok then\n\t\t\t\tprint(\"[\" .. state .. \";1] \" .. line)\n\t\t\telse\n\t\t\t\tprint(\"[\" .. state .. \";0] \" .. line)\n\t\t\tend\n\t\tend\n\n\t\tif state == 4 and line == '}' then\n\t\t\t-- end of a function\n\t\t\t-- print(\"name='\" .. name .. \"'\")\n\t\t\t-- back to state 0 (look for doxygen comment)\n\t\t\tstate = 0\n\t\t\tto_l_ok = false\n\t\t\tb_file = false\n\t\tend\n\t\tfd:write(line .. '\\n')\n\tend\n\treturn true\nend\n\n---\n-- Main function.\n-- \\param arg table array of command line parameters\n\nscript = arg[0] or \"\"\nif #arg < 1 then\n\tprint(\"Usage: lua \" .. script ..\" src/*.c\")\nend\n\nfor i = 1, #arg do\n\tlocal input = arg[i]\n\tlocal backup = input .. \"~\"\n\tlocal ok, err = copyfile(input, backup)\n\tif not ok then\n\t\tprint(\"Error copying \" .. input ..\" to \" .. backup .. \": \" ..err)\n\tend\n\tlocal fs = io.open(backup)\n\tlocal fd = io.open(input, \"wb\")\n\tmodify(fs, fd)\n\tfd:close()\n\tfs:close()\nend\n"
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "make-for-auto",
          "type": "blob",
          "size": 0.173828125,
          "content": "#!/bin/sh\n#\n# make-for-auto\n#\n# Run this to make with autoconf if you've previously run make-for-local\n\nmv src/makefile src/makefile.static\nmv prog/makefile prog/makefile.static\n"
        },
        {
          "name": "make-for-local",
          "type": "blob",
          "size": 0.1611328125,
          "content": "#!/bin/sh\n#\n# make-for-local\n#\n# Run this first if you want to use these static makefiles\n\ncp src/makefile.static src/makefile\ncp prog/makefile.static prog/makefile\n"
        },
        {
          "name": "moller52.jpg",
          "type": "blob",
          "size": 9.384765625,
          "content": null
        },
        {
          "name": "prog",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "style-guide.txt",
          "type": "blob",
          "size": 8.318359375,
          "content": "/*====================================================================*\n -  Copyright (C) 2001 Leptonica.  All rights reserved.\n -\n -  Redistribution and use in source and binary forms, with or without\n -  modification, are permitted provided that the following conditions\n -  are met:\n -  1. Redistributions of source code must retain the above copyright\n -     notice, this list of conditions and the following disclaimer.\n -  2. Redistributions in binary form must reproduce the above\n -     copyright notice, this list of conditions and the following\n -     disclaimer in the documentation and/or other materials\n -     provided with the distribution.\n -\n -  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n -  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n -  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n -  A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL ANY\n -  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n -  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n -  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n -  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n -  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n -  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n -  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *====================================================================*/\n\n                        style-guide.txt\n\n                         10 May 2019\n\nThis is not a complete guide to the coding style in leptonica.\nIt covers most of the typographic issues and the most frequent\ncoding patterns, such as how to check input args to functions.\nIn general, you need to look at existing code to verify that your\ncode meets the style guidelines.  And if you find any aberrant code,\nplease let me know!\n\nThe C code in leptonica follows these conventions:\n\n(1) ANSI C, with no exceptions\n\n   (a) C-style comments only:   /*  */\n\n   (b) Variables are declared at the beginning of a function.\n       [This is more strict than ANSI C, which only requires declarations\n       to be at the beginning of a scope delineated by braces.]\n\n   (c) Use typedefs for structs like Pix; e.g.,\n          function(PIX  *pixs)\n       Do not do this (omitting the 'struct' keyword); it is valid C++,\n       but not C:\n          function(Pix  *pixs)\n\n(2) Formatting\n\n   (a) White space:  4 space indentation.  No tabs, ever.  No trailing spaces.\n\n   (b) The code is set up to work with doxygen.  Function headers are in\n       this format:\n\n      /*!\n       * \\brief   pixSelectByAreaFraction()\n       *\n       * \\param[in]    pixs 1 bpp\n       * \\param[in]    thresh threshold ratio of fg pixels to (w * h)\n       * \\param[in]    connectivity 4 or 8\n       * \\param[in]    type L_SELECT_IF_LT, L_SELECT_IF_GT,\n       *                    L_SELECT_IF_LTE, L_SELECT_IF_GTE\n       * \\param[out]   pchanged [optional] 1 if changed; 0 if clone returned\n       * \\return  pixd, or NULL on error\n       *\n       * <pre>\n       * Notes:\n       *      (1) The args specify constraints on the amount of foreground\n       *          coverage of the components that are kept.\n       *   ....\n       * </pre>\n       */\n\n   (c) Function definition has return value on separate line and starting\n       brace on separate line.\n\n       PIX *\n       function(...)\n       {\n\n   (d) Function arguments and local variables line up vertically;\n       allow at least 2 spaces between type and variable name (including '*')\n\n       function(PIX        *pixs,\n                l_int32     factor,\n                l_float32  *pave)\n       {\n       char        buf[BUF_SIZE];\n       l_int32     w, h, d;\n       l_float32  *vect;\n\n   (e) Braces are placed like this for 'if', 'while', 'do':\n\n       if (...) {\n           ...\n       } else if (...) {\n           ...\n       }\n\n       The exceptions are for the beginning of a function and for the switch:\n\n       switch (x)\n       {\n       case 1:\n           ...\n       ...\n       }\n\n       Braces are required if any of the clauses have more than one statement:\n\n       if (...) {\n           x = 0;\n       } else {\n           x++;\n           y = 3.0 * x;\n       }\n\n   (f) Section headers should look like this:\n\n   /*----------------------------------------------------------------------*\n    *                  Statistics in an arbitrary rectangle                *\n    *----------------------------------------------------------------------*/\n\n   (g) Major inline comments (starting a section) should be indented\n       4 extra spaces and start with a capital.  Multiple line comments\n       should be formatted like this:\n\n           /* If w and h not input, determine the minimum size required\n            * to contain the origin and all c.c. */\n\n   (h) Minor inline comments (e.g., at the end of a line) should have\n       2 spaces and no leading capital; e.g.\n\n          if (i && ((i % ncols) == 0)) {  /* start new row */\n\n(3) Naming\n\n   (a) Function names begin with lower case and successive words have\n       the first letter capitalized; e.g., boxIntersects().\n\n   (b) The first word in the function name is the name of the primary\n       input data structure (if there is one); otherwise it can\n       name the output data structure (if there is one).\n\n   (c) Variable names are as short as possible, without causing confusion.\n\n   (d) Pointers to data structures are typically named by the type of\n       struct, without a leading 'p'; e.g., pixt, boxt.\n\n   (e) When ptrs are input to a function, in order to return a value,\n       if the local name would be 'ave', the pointer is 'pave'.\n\n   (f) Preprocessor variables and enums are named all caps,\n       with '_' between parts.\n\n   (g) Static constants defined in a file should have the first letter of\n       each word capitalized.  (There are also some that are formatted\n       like enums, with all caps and '_' between parts.)\n \n   (h) There are very few globals in the library.  Of these, there\n       are just a handful of static globals that can be changed.\n       Const globals are named with each word beginning with a capital; e.g.,\n            ImageFileFormatExtensions[]\n       Static globals that can be changed are named like preprocessor\n       variables, except they are prepended by 'var_'; e.g.,\n            var_PNG_WRITE_ALPHA\n       Functions that set these static globals are named with a\n       pre-pended 'l_'; e.g.,\n            l_pngSetWriteAlpha()\n\n   (i) Where there may be issues with namespace collisions with other\n       libraries, function names can be prepended with 'l_'; e.g.,\n            l_amapInsert()\n\n(4) Arg checking\n\n   Both number values and ptrs can be returned in function arguments.\n   The following applies equally to both types, and happens at the\n   beginning of the function.  We distinguish between returned entities\n   that are optional and required.  The following sequence of tests\n   and initializations guarantees that no uninitialized arguments\n   are returned:\n\n   (a) First, all optional values are initialized if possible:\n\n          if (pboxa) *pboxa = NULL;  // Boxa **pboxa is optional\n\n   (b) Second, if there is more than 1 required value, each is\n       initialized if possible:\n\n          if (pnar) *pnar = NULL;  // Numa **pnar is required\n          if (pnag) *pnag = NULL;  // Numa **pnag is required\n\n       Then all required arguments are tested in arbitrary order.\n\n       But if there is exactly 1 required value, it can be checked\n       and initialized if possible:\n\n          if (!ppixd)\n              return ERROR_INT(\"&pixd not defined, procName, 1);\n          *ppixd = NULL;\n\n(5) Miscellaneous\n\n   (a) Look around at the code after reviewing the guidelines.\n\n   (b) Return nothing on stdout.\n\n   (c) Returns to stderr should be blockable by compiler flags, such\n       as NO_CONSOLE_IO, and by setting message severity thresholds\n       both at compile and at run time.  Naked fprintf(stderr, ...)\n       should be avoided in the library.\n\n   (d) Applications (in prog) that hand a FILE ptr to a library function,\n       or accept heap-allocated data from a library function, should\n       use special wrappers.  See lept_*() functions in utils.c.\n\n   (e) Changes to existing data structures and API changes should be\n       avoided if possible.\n\n   (f) Accessors are typically provided for struct fields that have\n       extensive use.\n\n\n"
        },
        {
          "name": "sw.cpp",
          "type": "blob",
          "size": 17.29296875,
          "content": "void build(Solution &s)\n{\n    auto add_deps = [](auto &t)\n    {\n        t += \"HAVE_LIBGIF\"_d;\n        t += \"HAVE_LIBJP2K\"_d;\n        t += \"HAVE_LIBJPEG\"_d;\n        t += \"HAVE_LIBPNG\"_d;\n        t += \"HAVE_LIBTIFF\"_d;\n        t += \"HAVE_LIBWEBP\"_d;\n        t += \"HAVE_LIBWEBP_ANIM\"_d;\n        t += \"HAVE_LIBZ\"_d;\n\n        t += \"org.sw.demo.gif\"_dep;\n        t += \"org.sw.demo.jpeg\"_dep;\n        t += \"org.sw.demo.uclouvain.openjpeg.openjp2\"_dep;\n        t += \"org.sw.demo.glennrp.png\"_dep;\n        t += \"org.sw.demo.tiff\"_dep;\n        t += \"org.sw.demo.webmproject.webp\"_dep;\n    };\n\n    auto &leptonica = s.addTarget<LibraryTarget>(\"danbloomberg.leptonica\", \"1.85.1\");\n    leptonica += Git(\"https://github.com/DanBloomberg/leptonica\");\n\n    {\n        leptonica.setChecks(\"leptonica\");\n        leptonica.ApiName = \"LEPT_DLL\";\n\n        leptonica +=\n            \"src/.*\\\\.c\"_rr,\n            \"src/.*\\\\.h\"_rr,\n            \"src/endianness.h.in\";\n\n        leptonica.Public +=\n            \"src\"_id;\n\n        add_deps(leptonica);\n\n        leptonica += \"LIBJP2K_HEADER=\\\"openjpeg.h\\\"\"_d;\n        leptonica.Public += \"HAVE_CONFIG_H\"_d;\n\n        if (leptonica.Variables[\"WORDS_BIGENDIAN\"] == 1)\n            leptonica.Variables[\"ENDIANNESS\"] = \"L_BIG_ENDIAN\";\n        else\n            leptonica.Variables[\"ENDIANNESS\"] = \"L_LITTLE_ENDIAN\";\n\n        leptonica.Variables[\"APPLE_UNIVERSAL_BUILD\"] = \"defined (__APPLE_CC__)\";\n\n        leptonica.configureFile(\"src/endianness.h.in\", \"endianness.h\");\n        leptonica.writeFileOnce(\"config_auto.h\");\n\n        if (leptonica.getBuildSettings().TargetOS.Type == OSType::Windows ||\n            leptonica.getBuildSettings().TargetOS.Type == OSType::Mingw)\n            leptonica += \"User32.lib\"_slib, \"Gdi32.lib\"_slib;\n    }\n\n    auto &progs = leptonica.addDirectory(\"progs\");\n    {\n        auto add_prog = [&s, &progs, &leptonica, &add_deps](const String &name, const Files &files) -> decltype(auto)\n        {\n            auto &t = progs.addExecutable(name);\n            t.Scope = TargetScope::Test;\n            t.setRootDirectory(\"prog\");\n            t += files;\n            t += leptonica;\n            add_deps(t);\n            return t;\n        };\n\n        StringMap<Files> m_progs{\n            {\"adaptmap_reg\", {\"adaptmap_reg.c\"}},\n            {\"adaptnorm_reg\", {\"adaptnorm_reg.c\"}},\n            {\"affine_reg\", {\"affine_reg.c\"}},\n            {\"alltests_reg\", {\"alltests_reg.c\"}},\n            {\"alphaops_reg\", {\"alphaops_reg.c\"}},\n            {\"alphaxform_reg\", {\"alphaxform_reg.c\"}},\n            {\"baseline_reg\", {\"baseline_reg.c\"}},\n            {\"bilateral1_reg\", {\"bilateral1_reg.c\"}},\n            {\"bilateral2_reg\", {\"bilateral2_reg.c\"}},\n            {\"bilinear_reg\", {\"bilinear_reg.c\"}},\n            {\"binarize_reg\", {\"binarize_reg.c\"}},\n            {\"binmorph1_reg\", {\"binmorph1_reg.c\"}},\n            {\"binmorph2_reg\", {\"binmorph2_reg.c\"}},\n            {\"binmorph3_reg\", {\"binmorph3_reg.c\"}},\n            {\"binmorph4_reg\", {\"binmorph4_reg.c\"}},\n            {\"binmorph5_reg\", {\"binmorph5_reg.c\"}},\n            {\"binmorph6_reg\", {\"binmorph6_reg.c\"}},\n            {\"blackwhite_reg\", {\"blackwhite_reg.c\"}},\n            {\"blend1_reg\", {\"blend1_reg.c\"}},\n            {\"blend2_reg\", {\"blend2_reg.c\"}},\n            {\"blend3_reg\", {\"blend3_reg.c\"}},\n            {\"blend4_reg\", {\"blend4_reg.c\"}},\n            {\"blend5_reg\", {\"blend5_reg.c\"}},\n            {\"boxa1_reg\", {\"boxa1_reg.c\"}},\n            {\"boxa2_reg\", {\"boxa2_reg.c\"}},\n            {\"boxa3_reg\", {\"boxa3_reg.c\"}},\n            {\"boxa4_reg\", {\"boxa4_reg.c\"}},\n            {\"bytea_reg\", {\"bytea_reg.c\"}},\n            {\"ccbord_reg\", {\"ccbord_reg.c\"}},\n            {\"ccthin1_reg\", {\"ccthin1_reg.c\"}},\n            {\"ccthin2_reg\", {\"ccthin2_reg.c\"}},\n            {\"checkerboard_reg\", {\"checkerboard_reg.c\"}},\n            {\"circle_reg\", {\"circle_reg.c\"}},\n            {\"cmapquant_reg\", {\"cmapquant_reg.c\"}},\n            {\"colorcontent_reg\", {\"colorcontent_reg.c\"}},\n            {\"colorfill_reg\", {\"colorfill_reg.c\"}},\n            {\"coloring_reg\", {\"coloring_reg.c\"}},\n            {\"colorize_reg\", {\"colorize_reg.c\"}},\n            {\"colormask_reg\", {\"colormask_reg.c\"}},\n            {\"colormorph_reg\", {\"colormorph_reg.c\"}},\n            {\"colorquant_reg\", {\"colorquant_reg.c\"}},\n            {\"colorseg_reg\", {\"colorseg_reg.c\"}},\n            {\"colorspace_reg\", {\"colorspace_reg.c\"}},\n            {\"compare_reg\", {\"compare_reg.c\"}},\n            {\"compfilter_reg\", {\"compfilter_reg.c\"}},\n            {\"conncomp_reg\", {\"conncomp_reg.c\"}},\n            {\"conversion_reg\", {\"conversion_reg.c\"}},\n            {\"convolve_reg\", {\"convolve_reg.c\"}},\n            {\"crop_reg\", {\"crop_reg.c\"}},\n            {\"dewarp_reg\", {\"dewarp_reg.c\"}},\n            {\"distance_reg\", {\"distance_reg.c\"}},\n            {\"dither_reg\", {\"dither_reg.c\"}},\n            {\"dna_reg\", {\"dna_reg.c\"}},\n            {\"dwamorph1_reg\", {\"dwamorph1_reg.c\", \"dwalinear.3.c\", \"dwalinearlow.3.c\"}},\n            {\"dwamorph2_reg\", {\"dwamorph2_reg.c\", \"dwalinear.3.c\", \"dwalinearlow.3.c\"}},\n            {\"edge_reg\", {\"edge_reg.c\"}},\n            {\"encoding_reg\", {\"encoding_reg.c\"}},\n            {\"enhance_reg\", {\"enhance_reg.c\"}},\n            {\"equal_reg\", {\"equal_reg.c\"}},\n            {\"expand_reg\", {\"expand_reg.c\"}},\n            {\"extrema_reg\", {\"extrema_reg.c\"}},\n            {\"falsecolor_reg\", {\"falsecolor_reg.c\"}},\n            {\"fhmtauto_reg\", {\"fhmtauto_reg.c\"}},\n            {\"files_reg\", {\"files_reg.c\"}},\n            {\"findcorners_reg\", {\"findcorners_reg.c\"}},\n            {\"findpattern1_reg\", {\"findpattern1_reg.c\"}},\n            {\"findpattern2_reg\", {\"findpattern2_reg.c\"}},\n            {\"flipdetect_reg\", {\"flipdetect_reg.c\"}},\n            {\"fmorphauto_reg\", {\"fmorphauto_reg.c\"}},\n            {\"fpix1_reg\", {\"fpix1_reg.c\"}},\n            {\"fpix2_reg\", {\"fpix2_reg.c\"}},\n            {\"genfonts_reg\", {\"genfonts_reg.c\"}},\n            {\"gifio_reg\", {\"gifio_reg.c\"}},\n            {\"grayfill_reg\", {\"grayfill_reg.c\"}},\n            {\"graymorph1_reg\", {\"graymorph1_reg.c\"}},\n            {\"graymorph2_reg\", {\"graymorph2_reg.c\"}},\n            {\"grayquant_reg\", {\"grayquant_reg.c\"}},\n            {\"hardlight_reg\", {\"hardlight_reg.c\"}},\n            {\"hash_reg\", {\"hash_reg.c\"}},\n            {\"heap_reg\", {\"heap_reg.c\"}},\n            {\"insert_reg\", {\"insert_reg.c\"}},\n            {\"ioformats_reg\", {\"ioformats_reg.c\"}},\n            {\"iomisc_reg\", {\"iomisc_reg.c\"}},\n            {\"italic_reg\", {\"italic_reg.c\"}},\n            {\"jbclass_reg\", {\"jbclass_reg.c\"}},\n            {\"jp2kio_reg\", {\"jp2kio_reg.c\"}},\n            {\"jpegio_reg\", {\"jpegio_reg.c\"}},\n            {\"kernel_reg\", {\"kernel_reg.c\"}},\n            {\"label_reg\", {\"label_reg.c\"}},\n            {\"lineremoval_reg\", {\"lineremoval_reg.c\"}},\n            {\"locminmax_reg\", {\"locminmax_reg.c\"}},\n            {\"logicops_reg\", {\"logicops_reg.c\"}},\n            {\"lowaccess_reg\", {\"lowaccess_reg.c\"}},\n            {\"lowsat_reg\", {\"lowsat_reg.c\"}},\n            {\"maze_reg\", {\"maze_reg.c\"}},\n            {\"mtiff_reg\", {\"mtiff_reg.c\"}},\n            {\"multitype_reg\", {\"multitype_reg.c\"}},\n            {\"nearline_reg\", {\"nearline_reg.c\"}},\n            {\"newspaper_reg\", {\"newspaper_reg.c\"}},\n            {\"numa1_reg\", {\"numa1_reg.c\"}},\n            {\"numa2_reg\", {\"numa2_reg.c\"}},\n            {\"numa3_reg\", {\"numa3_reg.c\"}},\n            {\"overlap_reg\", {\"overlap_reg.c\"}},\n            {\"pageseg_reg\", {\"pageseg_reg.c\"}},\n            {\"paintmask_reg\", {\"paintmask_reg.c\"}},\n            {\"paint_reg\", {\"paint_reg.c\"}},\n            {\"partition_reg\", {\"partition_reg.c\"}},\n            {\"pdfio1_reg\", {\"pdfio1_reg.c\"}},\n            {\"pdfio2_reg\", {\"pdfio2_reg.c\"}},\n            {\"pdfseg_reg\", {\"pdfseg_reg.c\"}},\n            {\"pixa1_reg\", {\"pixa1_reg.c\"}},\n            {\"pixa2_reg\", {\"pixa2_reg.c\"}},\n            {\"pixadisp_reg\", {\"pixadisp_reg.c\"}},\n            {\"pixalloc_reg\", {\"pixalloc_reg.c\"}},\n            {\"pixcomp_reg\", {\"pixcomp_reg.c\"}},\n            {\"pixmem_reg\", {\"pixmem_reg.c\"}},\n            {\"pixserial_reg\", {\"pixserial_reg.c\"}},\n            {\"pixtile_reg\", {\"pixtile_reg.c\"}},\n            {\"pngio_reg\", {\"pngio_reg.c\"}},\n            {\"pnmio_reg\", {\"pnmio_reg.c\"}},\n            {\"projection_reg\", {\"projection_reg.c\"}},\n            {\"projective_reg\", {\"projective_reg.c\"}},\n            {\"psioseg_reg\", {\"psioseg_reg.c\"}},\n            {\"psio_reg\", {\"psio_reg.c\"}},\n            {\"pta_reg\", {\"pta_reg.c\"}},\n            {\"ptra1_reg\", {\"ptra1_reg.c\"}},\n            {\"ptra2_reg\", {\"ptra2_reg.c\"}},\n            {\"quadtree_reg\", {\"quadtree_reg.c\"}},\n            {\"rankbin_reg\", {\"rankbin_reg.c\"}},\n            {\"rankhisto_reg\", {\"rankhisto_reg.c\"}},\n            {\"rank_reg\", {\"rank_reg.c\"}},\n            {\"rasteropip_reg\", {\"rasteropip_reg.c\"}},\n            {\"rasterop_reg\", {\"rasterop_reg.c\"}},\n            {\"rectangle_reg\", {\"rectangle_reg.c\"}},\n            {\"rotate1_reg\", {\"rotate1_reg.c\"}},\n            {\"rotate2_reg\", {\"rotate2_reg.c\"}},\n            {\"scale_reg\", {\"scale_reg.c\"}},\n            {\"selio_reg\", {\"selio_reg.c\"}},\n            {\"shear1_reg\", {\"shear1_reg.c\"}},\n            {\"shear2_reg\", {\"shear2_reg.c\"}},\n            {\"skew_reg\", {\"skew_reg.c\"}},\n            {\"smallpix_reg\", {\"smallpix_reg.c\"}},\n            {\"smoothedge_reg\", {\"smoothedge_reg.c\"}},\n            {\"speckle_reg\", {\"speckle_reg.c\"}},\n            {\"splitcomp_reg\", {\"splitcomp_reg.c\"}},\n            {\"string_reg\", {\"string_reg.c\"}},\n            {\"subpixel_reg\", {\"subpixel_reg.c\"}},\n            {\"texturefill_reg\", {\"texturefill_reg.c\"}},\n            {\"threshnorm_reg\", {\"threshnorm_reg.c\"}},\n            {\"translate_reg\", {\"translate_reg.c\"}},\n            {\"warper_reg\", {\"warper_reg.c\"}},\n            {\"watershed_reg\", {\"watershed_reg.c\"}},\n            {\"webpio_reg\", {\"webpio_reg.c\"}},\n            {\"webpanimio_reg\", {\"webpanimio_reg.c\"}},\n            {\"wordboxes_reg\", {\"wordboxes_reg.c\"}},\n            {\"writetext_reg\", {\"writetext_reg.c\"}},\n            {\"xformbox_reg\", {\"xformbox_reg.c\"}},\n            {\"adaptmap_dark\", {\"adaptmap_dark.c\"}},\n            {\"arabic_lines\", {\"arabic_lines.c\"}},\n            {\"arithtest\", {\"arithtest.c\"}},\n            {\"autogentest1\", {\"autogentest1.c\"}},\n            {\"autogentest2\", {\"autogentest2.c\", \"autogen.137.c\"}},\n            {\"barcodetest\", {\"barcodetest.c\"}},\n            {\"binarize_set\", {\"binarize_set.c\"}},\n            {\"binarizefiles\", {\"binarizefiles.c\"}},\n            {\"bincompare\", {\"bincompare.c\"}},\n            {\"blendcmaptest\", {\"blendcmaptest.c\"}},\n            {\"buffertest\", {\"buffertest.c\"}},\n            {\"ccbordtest\", {\"ccbordtest.c\"}},\n            {\"cctest1\", {\"cctest1.c\"}},\n            {\"cleanpdf\", {\"cleanpdf.c\"}},\n            {\"colorsegtest\", {\"colorsegtest.c\"}},\n            {\"comparepages\", {\"comparepages.c\"}},\n            {\"comparepixa\", {\"comparepixa.c\"}},\n            {\"comparetest\", {\"comparetest.c\"}},\n            {\"compresspdf\", {\"compresspdf.c\"}},\n            {\"contrasttest\", {\"contrasttest.c\"}},\n            {\"convertfilestopdf\", {\"convertfilestopdf.c\"}},\n            {\"convertfilestops\", {\"convertfilestops.c\"}},\n            {\"convertformat\", {\"convertformat.c\"}},\n            {\"convertsegfilestopdf\", {\"convertsegfilestopdf.c\"}},\n            {\"convertsegfilestops\", {\"convertsegfilestops.c\"}},\n            {\"converttogray\", {\"converttogray.c\"}},\n            {\"converttopdf\", {\"converttopdf.c\"}},\n            {\"converttops\", {\"converttops.c\"}},\n            {\"cornertest\", {\"cornertest.c\"}},\n            {\"corrupttest\", {\"corrupttest.c\"}},\n            {\"croppdf\", {\"croppdf.c\"}},\n            {\"croptext\", {\"croptext.c\"}},\n            {\"deskew_it\", {\"deskew_it.c\"}},\n            {\"dewarprules\", {\"dewarprules.c\"}},\n            {\"dewarptest1\", {\"dewarptest1.c\"}},\n            {\"dewarptest2\", {\"dewarptest2.c\"}},\n            {\"dewarptest3\", {\"dewarptest3.c\"}},\n            {\"dewarptest4\", {\"dewarptest4.c\"}},\n            {\"dewarptest5\", {\"dewarptest5.c\"}},\n            {\"digitprep1\", {\"digitprep1.c\"}},\n            {\"displayboxa\", {\"displayboxa.c\"}},\n            {\"displayboxes_on_pixa\", {\"displayboxes_on_pixa.c\"}},\n            {\"displaypix\", {\"displaypix.c\"}},\n            {\"displaypixa\", {\"displaypixa.c\"}},\n            {\"dwalineargen\", {\"dwalineargen.c\"}},\n            {\"fcombautogen\", {\"fcombautogen.c\"}},\n            {\"fhmtautogen\", {\"fhmtautogen.c\"}},\n            {\"fileinfo\", {\"fileinfo.c\"}},\n            {\"findbinding\", {\"findbinding.c\"}},\n            {\"find_colorregions\", {\"find_colorregions.c\"}},\n            {\"findpattern1\", {\"findpattern1.c\"}},\n            {\"findpattern2\", {\"findpattern2.c\"}},\n            {\"findpattern3\", {\"findpattern3.c\"}},\n            {\"fmorphautogen\", {\"fmorphautogen.c\"}},\n            {\"fpixcontours\", {\"fpixcontours.c\"}},\n            {\"gammatest\", {\"gammatest.c\"}},\n            {\"graphicstest\", {\"graphicstest.c\"}},\n            {\"graymorphtest\", {\"graymorphtest.c\"}},\n            {\"hashtest\", {\"hashtest.c\"}},\n            {\"histoduptest\", {\"histoduptest.c\"}},\n            {\"histotest\", {\"histotest.c\"}},\n            {\"htmlviewer\", {\"htmlviewer.c\"}},\n            {\"imagetops\", {\"imagetops.c\"}},\n            {\"jbcorrelation\", {\"jbcorrelation.c\"}},\n            {\"jbrankhaus\", {\"jbrankhaus.c\"}},\n            {\"jbwords\", {\"jbwords.c\"}},\n            {\"lightcolortest\", {\"lightcolortest.c\"}},\n            {\"listtest\", {\"listtest.c\"}},\n            {\"livre_adapt\", {\"livre_adapt.c\"}},\n            {\"livre_hmt\", {\"livre_hmt.c\"}},\n            {\"livre_makefigs\", {\"livre_makefigs.c\"}},\n            {\"livre_orient\", {\"livre_orient.c\"}},\n            {\"livre_pageseg\", {\"livre_pageseg.c\"}},\n            {\"livre_seedgen\", {\"livre_seedgen.c\"}},\n            {\"livre_tophat\", {\"livre_tophat.c\"}},\n            {\"maketile\", {\"maketile.c\"}},\n            {\"maptest\", {\"maptest.c\"}},\n            {\"messagetest\", {\"messagetest.c\"}},\n            {\"misctest1\", {\"misctest1.c\"}},\n            {\"misctest2\", {\"misctest2.c\"}},\n            {\"modifyhuesat\", {\"modifyhuesat.c\"}},\n            {\"morphseq_reg\", {\"morphseq_reg.c\"}},\n            {\"morphtest1\", {\"morphtest1.c\"}},\n            {\"numaranktest\", {\"numaranktest.c\"}},\n            {\"otsutest1\", {\"otsutest1.c\"}},\n            {\"otsutest2\", {\"otsutest2.c\"}},\n            {\"pagesegtest1\", {\"pagesegtest1.c\"}},\n            {\"pagesegtest2\", {\"pagesegtest2.c\"}},\n            {\"partifytest\", {\"partifytest.c\"}},\n            {\"partitiontest\", {\"partitiontest.c\"}},\n            {\"percolatetest\", {\"percolatetest.c\"}},\n            {\"pixaatest\", {\"pixaatest.c\"}},\n            {\"pixafileinfo\", {\"pixafileinfo.c\"}},\n            {\"plottest\", {\"plottest.c\"}},\n            {\"printimage\", {\"printimage.c\"}},\n            {\"printsplitimage\", {\"printsplitimage.c\"}},\n            {\"printtiff\", {\"printtiff.c\"}},\n            {\"rasteroptest\", {\"rasteroptest.c\"}},\n            {\"rbtreetest\", {\"rbtreetest.c\"}},\n            {\"recog_bootnum1\", {\"recog_bootnum1.c\"}},\n            {\"recog_bootnum2\", {\"recog_bootnum2.c\"}},\n            {\"recog_bootnum3\", {\"recog_bootnum3.c\"}},\n            {\"recogsort\", {\"recogsort.c\"}},\n            {\"recogtest1\", {\"recogtest1.c\"}},\n            {\"recogtest2\", {\"recogtest2.c\"}},\n            {\"recogtest3\", {\"recogtest3.c\"}},\n            {\"recogtest4\", {\"recogtest4.c\"}},\n            {\"recogtest5\", {\"recogtest5.c\"}},\n            {\"recogtest6\", {\"recogtest6.c\"}},\n            {\"recogtest7\", {\"recogtest7.c\"}},\n            {\"reducetest\", {\"reducetest.c\"}},\n            {\"removecmap\", {\"removecmap.c\"}},\n            {\"renderfonts\", {\"renderfonts.c\"}},\n            {\"replacebytes\", {\"replacebytes.c\"}},\n            {\"rotatefastalt\", {\"rotatefastalt.c\"}},\n            {\"rotate_it\", {\"rotate_it.c\"}},\n            {\"rotateorthtest1\", {\"rotateorthtest1.c\"}},\n            {\"rotateorth_reg\", {\"rotateorth_reg.c\"}},\n            {\"rotatetest1\", {\"rotatetest1.c\"}},\n            {\"runlengthtest\", {\"runlengthtest.c\"}},\n            {\"scaleandtile\", {\"scaleandtile.c\"}},\n            {\"scaleimages\", {\"scaleimages.c\"}},\n            {\"scale_it\", {\"scale_it.c\"}},\n            {\"scaletest1\", {\"scaletest1.c\"}},\n            {\"scaletest2\", {\"scaletest2.c\"}},\n            {\"seedfilltest\", {\"seedfilltest.c\"}},\n            {\"seedspread_reg\", {\"seedspread_reg.c\"}},\n            {\"settest\", {\"settest.c\"}},\n            {\"sharptest\", {\"sharptest.c\"}},\n            {\"sheartest\", {\"sheartest.c\"}},\n            {\"showedges\", {\"showedges.c\"}},\n            {\"skewtest\", {\"skewtest.c\"}},\n            {\"sorttest\", {\"sorttest.c\"}},\n            {\"splitimage2pdf\", {\"splitimage2pdf.c\"}},\n            {\"splitpdf\", {\"splitpdf.c\"}},\n            {\"sudokutest\", {\"sudokutest.c\"}},\n            {\"textorient\", {\"textorient.c\"}},\n            {\"tiffpdftest\", {\"tiffpdftest.c\"}},\n            {\"trctest\", {\"trctest.c\"}},\n            {\"underlinetest\", {\"underlinetest.c\"}},\n            {\"warpertest\", {\"warpertest.c\"}},\n            {\"wordsinorder\", {\"wordsinorder.c\"}},\n            {\"writemtiff\", {\"writemtiff.c\"}},\n            {\"xtractprotos\", {\"xtractprotos.c\"}},\n            {\"yuvtest\", {\"yuvtest.c\"}},\n        };\n\n        for (auto &[p, files] : m_progs)\n            add_prog(p, files);\n    }\n}\n#pragma optimize(\"\", on)\n\nvoid check(Checker &c)\n{\n    auto &s = c.addSet(\"leptonica\");\n    s.checkFunctionExists(\"fmemopen\");\n    s.checkFunctionExists(\"fstatat\");\n    s.checkFunctionExists(\"dirfd\");\n    s.checkIncludeExists(\"dlfcn.h\");\n    s.checkIncludeExists(\"inttypes.h\");\n    s.checkIncludeExists(\"memory.h\");\n    s.checkIncludeExists(\"stdint.h\");\n    s.checkIncludeExists(\"stdlib.h\");\n    s.checkIncludeExists(\"strings.h\");\n    s.checkIncludeExists(\"string.h\");\n    s.checkIncludeExists(\"sys/stat.h\");\n    s.checkIncludeExists(\"sys/types.h\");\n    s.checkIncludeExists(\"unistd.h\");\n    s.checkTypeSize(\"size_t\");\n    s.checkTypeSize(\"void *\");\n}\n"
        },
        {
          "name": "version-notes.html",
          "type": "blob",
          "size": 92.703125,
          "content": "<html>\n<body BGCOLOR=FFFFE4>\n\n<!-- JS Window Closer -----\n<form>\n<center>\n<input type=\"button\" onclick=\"window.close();\" value=\"Close this window\">\n</center>\n</form>\n----- JS Window Closer -->\n\n<!-- Creative Commons License -->\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/2.5/\"><img alt=\"Creative Commons License\" border=\"0\" src=\"http://creativecommons.org/images/public/somerights20.gif\" /></a>\nThis work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by/2.5/\">Creative Commons Attribution 2.5 License</a>.\n<!-- /Creative Commons License -->\n\n\n<!--\n\n<rdf:RDF xmlns=\"http://web.resource.org/cc/\"\n  xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n  xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n<Work rdf:about=\"\">\n  <dc:title>leptonica</dc:title>\n  <dc:date>2001</dc:date>\n  <dc:description>An open source C library for efficient image processing and image analysis operations</dc:description>\n  <dc:creator><Agent>\n    <dc:title>Dan S. Bloomberg</dc:title>\n  </Agent></dc:creator>\n  <dc:rights><Agent>\n    <dc:title>Dan S. Bloomberg</dc:title>\n  </Agent></dc:rights>\n  <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/Text\" />\n  <dc:source rdf:resource=\"www.leptonica.com\"/>\n  <license rdf:resource=\"http://creativecommons.org/licenses/by/2.5/\" />\n</Work>\n\n<License rdf:about=\"http://creativecommons.org/licenses/by/2.5/\">\n  <permits rdf:resource=\"http://web.resource.org/cc/Reproduction\" />\n  <permits rdf:resource=\"http://web.resource.org/cc/Distribution\" />\n  <requires rdf:resource=\"http://web.resource.org/cc/Notice\" />\n  <requires rdf:resource=\"http://web.resource.org/cc/Attribution\" />\n  <permits rdf:resource=\"http://web.resource.org/cc/DerivativeWorks\" />\n</License>\n\n</rdf:RDF>\n\n-->\n\n<pre>\n/*====================================================================*\n -  Copyright (C) 2001 Leptonica.  All rights reserved.\n -\n -  Redistribution and use in source and binary forms, with or without\n -  modification, are permitted provided that the following conditions\n -  are met:\n -  1. Redistributions of source code must retain the above copyright\n -     notice, this list of conditions and the following disclaimer.\n -  2. Redistributions in binary form must reproduce the above\n -     copyright notice, this list of conditions and the following\n -     disclaimer in the documentation and/or other materials\n -     provided with the distribution.\n -\n -  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n -  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n -  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n -  A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL ANY\n -  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n -  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n -  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n -  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n -  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n -  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n -  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *====================================================================*/\n</pre>\n\n\n<h2 align=center>Version Notes for Leptonica</h2>\n<h3 align=center>3 Jan 2024</h3>\n\n<hr>\n<h2 align=center>  <IMG SRC=\"moller52.jpg\" border=1 ALIGN_MIDDLE> </h2>\n<hr>\n\n<p>\nNote: The following are highlights of the changes in each version.\nThey are <i>not</i> a complete listing of the modifications.\n\n<pre>\n\n1.86.0  Not released\n        * Modify compressFilesToPdf() to allow upscale interpolation for\n          low resolution pdfs.\n        * Source files changed: pageseg.c, pdfapp.c\n        * Prog files changed: binarizefiles.c, compresspdf.c, croppdf.c,\n          misctest2.c\n\n1.85.0  Oct 16, 2024\n        * Use wrapper callSystemDebug() instead of system() in programs.\n        * Fixed Issue #730: artifacts and bad compression with pixWriteJp2k.\n          Results are now identical with ImageMagick convert (to jp2).\n        * With PR732, Anton Tykhyy made pix(Read,Write)MemJp2k work with\n          direct memory access using openjpeg opj_stream functions. This\n          removes need for temp file on Windows when writing to/from memory.\n        * Achieve consistency with fclose() in library and lept_fclose()\n          in progs.  Ditto for lept_free, lept_calloc, lept_fopen(), etc.\n        * Fix generation of bad colormap indices in\n          jbcorrelation and jbrankhaus\n        * Fixed coverity scan issues.\n        * Added findpattern2_reg.c to show generation of sels and their use.\n        * Added misctest2.c to show crop and clean page functions.\n        * Added page crop option for removing noise on left and right sides.\n        * Added page crop option to allow printing to full width of paper.\n        * Added page crop option to extract page within larger black image.\n        * Added renderpdf.c to library, to render pdfs as page images with\n          a specified resolution.\n        * Modified cleanpdf.c to use l_pdfRenderFiles().\n        * Issues #750, #752: problems in bmpio.c with taking address of\n          packed member.\n        * Source files changed: adaptmap.c affinecompose.c,\n          bmpio.c, boxbasic.c, colormap.c, compare.c,\n          dewarp1.c, dnabasic.c, fpix1.c, gifio.c,\n          gplot.c, grayquant.c, jbclass.c, jp2kheader.c,\n          jp2kheaderstub.c, jp2kio.c, jpegio.c, libversions.c,\n          morphseq.c, numabasic.c, pageseg.c partify.c, pdfapp.c,\n          pdfio2.c, pix2.c, pixabasic.c, pixcomp.c, pixconv.c,\n          pnmio.c, psio2.c, ptabasic.c,\n          readfile.c, recogbasic.c, renderpdf.c,\n          sarray1.c, sel1.c, utils2.c, writefile.c,\n          allheaders.h, environ.h\n        * Prog files changed: alltests_reg.c, binmorph3_reg.c,\n          blend2_reg.c, blend4_reg.c cleanpdf.c, compressedpdf.c, croppdf.c,\n          findpattern_reg.c, findpattern1_reg.c findpattern2_reg.c,\n          htmlviewer.c, jbcorrelation.c, jbrankhaus.c,\n          jp2kio_reg.c, libre_makefigs.c, misctest1.c, misctest2.c,\n          pdfio2_reg.c, printimage.c, printsplitimage.c,\n          printtiff.c, psioseg_reg.c, splitpdf.c,\n          string_reg.c, tiffpdftest.c, xtractprotos.c\n\n1.84.1  Jan 3, 2024\n        * Remove support for openjpeg versions < 2.1.\n        * Improve error handling for stringLength() and stringCat(), and\n          add tests in prog/string_reg.\n        * Source files changed: blend.c, dnafunc1.c, jp2kio.c, pageseg.c,\n          partify.c, pix1.c, ptafunc2.c, sarray2.c, utils2.c\n        * Prog files changed: boxa3_reg.c, string_reg.c, writetext_reg.c,\n          deskew_it.c\n\n1.84.0  Dec 23, 2023\n        * Add getPdfPageCount() to find the number of pages in a pdf file.\n        * Add getPdfPageSizes() and getPdfMediaBoxSizes() to find the\n          information necessary to render images properly.  Modify cleanpdf.c\n          and concatpdf.c to use this information.\n        * Add prog/splitpdf.c to split a pdf file into nearly equal page sets.\n        * Add ability to read and write rgba in bmp format, and\n          test in ioformats_reg.\n        * Add regression test prog/partition_reg.c\n        * Change the autotools library name from liblept to libleptonica,\n          to be consistent with the cmake library name.  (Apologies to Jeff!)\n        * Add tests for 24 bit pix reading and writing in bmp and png in\n          ioformats_reg.  Test new pixDisplayDiff() for visualizing diffs.\n        * Allow prog/concatpdf to output pdf with tiffg4 encoding and with\n          mixed tiffg4 and DCT encoding depending on image color content.\n        * Rename prog/concatpdf --> prog/compresspdf\n        * Put image processing and generation of output pdf from compresspdf\n          and cleanpdf into functions in new files: pdfapp.c, pdfappstub.c.\n        * Add versatile function for cropping an image and filling to\n          page size, along with prog/croppdf to do this on pdf file.\n\n1.83.0  Dec 20, 2022\n        * Simplify setting the title of pdf files.\n        * Catch tiff failure to open stream in fopenTiffMemStream()\n        * Check for POSIX functions fstatat() and dirfd() before use.\n        * In prog/cleanpdf: do not allow threshold to exceed 190.  Make all\n          parameters required; do not use default values for invalid parameters.\n        * In prog/concatpdf: add input param for title; add jpeg quality factor\n        * Fix flaky hash_reg test on i686: sets generated from SelectRange()\n          can depend slightly on platform.\n        * Convenience function for adding multiple black and white borders.\n        * Fix oss-fuzz issue 42202: underined shift in l_convertCharstrToInt().\n        * Fix oss-fuzz issue 43841: made pixCountPixels() more efficient.\n        * Fix oss-fuzz issue 44008: pixCountArbInRect() used wrong depth.\n        * Always return tiff resolution of 0 (unknown) if not set.\n        * Simplify operations on pix memory to help avoid mem leaks\n        * Make bmp non-support of 32-bit bmp (rgba) files explicit.\n        * Improve tiff read resolution conversion by rounding.\n        * Use stdatomic.h to make cloning string safe.\n          Remove all *GetRefcount() and *ChangeRefcount() accessors.\n        * Replace procName and mainName strings by __func__.\n        * Remove information about fields in many structs from the public\n          interface allheaders.h, instead putting them in internal files\n          pix_internal.h, array_internal.h and ccbord_internal.h.\n        * Increase the .so number from 5.4.0 to 6.0.0.\n        * Rename the autotools generated libraries from liblept to libleptonica\n        * Fix potential memory leaks from recogAverageSamples() and\n          recogDebugAverages() by not destroying a recog.\n\n1.82.0  Sept 22, 2021\n        * Fix issue-585: reading tiff rgb with tiffbpl = 1.5 * packedbpl.\n        * Fix issue-586: failure to properly wrap tiff-g4 in pdf without\n          transcoding.  The fix is to do transcoding for tiff-g4, as was\n          done before April 2021.\n\n1.81.1  June 11, 2021\n        * Added choice of codec (JP2 or J2K) when writing jp2k files.\n        * Fix use of hashmap with key based on dna.\n\n1.81.0  June 6, 2021\n        * Fixed problems with tiff pdf wrapping photometry.\n        * Fixed scaling issues in prog/cleanpdf for printing.\n        * New progs: tiffpdftest, hashtest\n        * Fixed uninitialized data error in pixAddBorderGeneral() and\n          pixRemoveBorderGeneral()\n        * Rewrote Numa functions that discretize into bins.  Have\n          binning by both sorting and histogram. \n        * Rewrote and simplified pixGetRankColorArray() and pixGetBinnedColor().\n        * Added tests to prog/rankbin_reg.c.\n        * Simplified fpixCopy() and dpixCopy(), and functions that use them.\n        * Check input for bilateral transforms.\n        * Add function for splitting a file evenly by lines. \n        * Check input for getFilenamesInDirectory()\n        * Many new fuzzers.\n        * Use size_t for all size inputs to ascii85 encoding/decoding\n        * New regression tests: encoding_reg.c, binmorph6_reg.c,\n          flipdetect_reg.c\n        * Reworked concatpdf for generality, using the Poppler package.\n        * Removed dwa flipdetection from the library.  All the dwa code\n          is now in flipdetectdwa.c.notused.  Likewise prog/flipselgen.c\n          is retained for completeness, renamed flipselgen.c.notused,\n          and is not compiled.\n        * Added hashmap utility (hashmap.c, hashmap.h).\n        * Removed functions using dnahash on strings, pts and doubles.\n        * Improved the speed of hashing for strings and doubles.\n        * Added function for tiling images in pairs for comparison.\n        * Added null terminations to serialized strings written to memory,\n          preventing buffer overrun by strlen() [fixed by Stefan Weil].\n        * No longer use \"NoInit\" versions of pix creation in leptonica.\n          because they risk reading uninitialized data.  These functions\n          remain in the library because they are in use in applications.\n        * Add two composite binarization functions, from prog/binarize_set.\n        * Giulio Lunati fixed pnm reading to work with stdin input.\n        * Removed several of the boxa compare and modify functions.\n        * Implemented reading jpeg200 data encded in j2k \"codestream\" format.\n          Can now read data in both jp2 and j2k.\n\n1.80.0  28 July 2020\n        * Improve bmp handling of 1 bpp images and sanity checking of params.\n        * Add function to display all rgb gamut colors\n        * in Makefile.am, use option serial-tests to avoid races in testing\n        * Make m4 subdirectory and add ax_split_version.m4 there\n        * Simple function for hue-invariant mapping (pixMapWithInvariantHue)\n        * Fixed bug in limit of ptra size when used for sorting by bins.\n        * Use hashmap to count pixel colors in RGB(A) images.\n        * Convert hashtest program to regression test hash_reg.\n        * Convert croptest program to regression test crop_reg.\n        * New color segmentation by region growing (colorfill.c)\n        * New regression tests: colorfill_reg, circle_reg, ccbord_reg.\n        * Set maxima for all allocations for common leptonica data structures.\n        * Don't fail when downscaling 2, 4, 8, and 32 bpp images, even\n          to one pixel, invoking pixScaleSmooth().\n        * New functions that select 1 bpp components based on their area.\n        * Incremental addition to sorted array of numbers.\n        * new prog/fuzzing directory for oss-fuzz based fuzzing programs\n        * use of pixcmapIsValid() with extra argument to determine validity\n          with the pix it is attached to.\n        * Use lept_stderr() in all programs in the prog directory.\n        * New program rasteroptest() for thorough testing of rasterop functions.\n        * Removed the pixSaveTiled*() functions\n        * Stubbed pixDisplayWrite().  Last used in tesseract 3.04.01 (2/2016).\n\n1.79.0  1 Jan 2020\n        * Clean up auto-generation of files; removed 'register'\n        * Some fixes for issues identified by fuzzer\n        * New source files: checkerboard.c\n        * New programs: replacebytes.c, webpanimio_reg.c, partifytest.c,\n          rectangle_reg.c, lowsat_reg.c, rotate_it.c, scale_it.c, dewarp_it.c,\n          pdfio1_reg.c, pdfio2_reg.c, checkerboard_reg.c, underlinetest.c.\n        * Convert to standard reg test: heap_reg.c, pixa1_reg.c, smallpix_reg.c\n        * Improve data checking when reading image file headers\n          (pnm, png, jpeg, tiff)\n        * Fix some bugs in pnm reading\n        * Fix inconsistencies with the encoding type flags in pdf writing\n        * Allow tiff to write images with colormaps\n        * Fix errors in PS code; made some functions static\n        * Add code for animated webp (requires webp mux and demux libraries)\n        * Add \"partify\" application for separating parts in a musical score\n        * Enable tif read/write of gray+alpha and rgba; filter out tiff\n          pixels that are not uint and compression by tile\n        * Apply consistent formatting of static const variables\n        * Add programs for scaling, rotation and deskew, named dewkew_it,\n          rotate_it and scale_it, for useful operations on arbitrary images.\n        * Convert pdfiotest program to two regression tests: pdfio1_reg\n          and pdfio2_reg.\n        * Remove all use of strncat; use stringCat().\n        * New functions from removing outliers in sequences of boxes.\n        * Generalize pixAverageInRect(): mask, region and range filters,\n          and subsampling.  New pixAverageInRectRGB().\n        * Fix int overflow bug in pixMedianCut(); required new heap accessor.\n        * New pixMultiplyGray() allows pix to be multiplied by an array (or\n          another pix)\n        * Better routines for counting color.\n        * Lossless conversion for RGB to cmap with not more than 256 colors.\n        * New histo based global thresholding: pixThresholdByHisto().\n        * Allow most reg tests to run even if external libraries are not\n          available.\n        * New one-line gplot functions that return a pix.\n        * New application to find where corners meet in a checkerboard.\n        * Add utility functions for painting through mask in cmap pix,\n          creating a hit-miss sela from a color pix, equality of two pta.\n        * Proper handling of 1 bpp colormap tiffs: remove when reading,\n          preserve when writing.\n        * Deprecate three pixSaveTile*() functions; removed all calls to\n          these from the library and progs.\n        * Include auto_config.h explicitly in all src and prog files.\n        * Improve input data checking for bmp files.\n        * Added pixAutoPhotoinvert() for tesseract, to automatically photo-\n          invert text regions where the background is black and text is white.\n\n1.78.0  21 Mar 19\n        * Various improvements in handling boxa sequences and transforms.\n        * New regression tests: boxa4_reg, string_reg\n        * New function for copying a pix, filtered by a boxa.\n        * Modify histogram method for image comparison.\n        * More careful attention to invalid boxes in box geometry functions.\n        * Better string and array functions for search and replace.\n        * Convenience functions for generating simple masks.\n        * Allow pdf writing of jp2k images, in full generality.\n        * Allow writing compressed ps images for printing.\n        * Modified enum comments to include a suggested enum name.\n        * New program: imagetops\n\n1.77.0  14 Dec 18\n        Here is the current status of CVE issues with leptonica; see\n          https://security-tracker.debian.org/tracker/source-package/leptonlib\n        * CVE-2018-7442: potential injection attack because '/' is allowed\n          in gplot rootdir.\n          Functions using this command have been disabled by default in the \n          distribution, starting with 1.76.0.  As for the specific issue, it \n          is impossible to specify a general path without using the standard\n          directory subdivider '/'.\n        * CVE-2018-7186: number of characters not limited in fscanf or sscanf,\n          allowing possible attack with buffer overflow.\n          This has been fixed in 1.75.3.\n        * CVE-2018-3836: command injection vulnerability in gplotMakeOutput().\n          This has been fixed in 1.75.3, using stringCheckForChars() to block\n          rootnames containing any of: ;&|>\"?*$()/<\n        * CVE-2017-18196: duplicated path components.\n          This was fixed in 1.75.3.\n        * CVE-2018-7441: hardcoded /tmp pathnames.\n          These are all wrapped in special debug functions that are not\n          enabled by default in the distribution, starting with 1.76.0.\n        * CVE-2018-7247: input 'rootname' can overflow a buffer.\n          This was fixed in 1.76.0, using snprintf().\n        * CVE-2018-7440: command injection in gplotMakeOutput using $(command).\n          Fixed in 1.75.3, which blocks '$' as well as 11 other characters.\n        Wrapped the few 'system' calls in an extra layer of debug code.\n        More coverity scan fixes; defects are about 1 per 10,000 source lines.\n        New regression tests: numa1_reg, numa2_reg, lowaccess_reg,\n          pixmem_reg.\n        New non-regression test programs: histoduptest\n        Juergen Buchmueller is working on Lua bindings.  He typedef'd l_ok\n          and used it in 1100 functions that return a success/failure status.\n          He also helped clean up remaining issues in the doxygen-generated\n          documentation.\n        Using a packed struct for bmp headers to avoid crash on\n          some big-endians.\n        Fixed a bug in the prototype parser for xtractprotos that was\n          surfaced by a typedef declaration for the bmp headers.\n        Cleaned up IOS guards to avoid compiling a system(3) call on IOS.\n        Renamed autobuild --> autogen.sh\n        Added some basic pixa functions for rotation and translation.\n        Added an iterative method to find rectangular coverings for\n          arbitrary connected components.\n        Converted two tests to reg tests running in alltests_reg:\n          ptra1_reg, ptra2_reg\n        Enabled read/write for standard jpeg compressed tiff images.\n        Enabled reading for the old (deprecated) jpeg-encoded tiffs.\n        Fix range selectors for pixa, pixaa, boxa, boxaa, pta:\n          Now, last = -1 goes to the end.\n        When reading tiff --> pix, insert IMAGEDESCRIPTION into text field.\n        Converted iotest to reg test iomisc_reg; added to alltests_reg\n        Converted rasterop_reg into a standard regression test; added\n          to alltests_reg.\n        Converted boxa2_reg and fhmtauto_reg into standard regression tests;\n          added to alltests_reg.\n        Split boxa sequence functions out of boxfunc4.c, into a new boxfunc5.c.\n        Simplified bmp header and made reading more clearly endian\n          agnostic (Juergen Buchmueller)\n        New boxa3_reg regression test. This tests sequences of boxes\n          by two new boxfunctions in boxfunc5.c.\n        New bootnumgen4.c for more digit templates.\n        Rename prog/recog_bootnum.c --> prog/recog_bootname1.c\n        New in prog: recog_bootnum2.c, recog_bootnum3.c, recogtest7.c\n        Fixed uninitialized data in pixCentroid() on 1 bpp pix.\n        New reg test: bytea_reg.c.  (removed byteatest.c)\n        Fixed bug in non-transcoding pdf generation from 1 bpp png.\n        Added LGTM to static analyzers that run over the library.\n\n1.76.0  1 May 18\n        Modify infrastructure to fix outstanding security issues. By default,\n          you can no longer create temp directories and temp files whose\n          names are known to the compiler.  Also, prevent \"system\" calls,\n          which were used for image display and gnuplot.\n        Replaced remaining sprintf() with snprintf() in prog tests.\n        Added non-transcoding functions for generating pdf from jpeg pixacomp\n        Add control of jpeg quality from pixWriteMem() and pixWriteStream()\n        Fixed getFilenamesInDirectory() to properly identify directories\n        Prevent size overflow in calloc for kernel; cleaned it up fpix and dpix\n        bmp reading now accepts negative height\n        Simplified splitimage2pdf; it no longer uses ps2pdf\n        Remove name-mangling WRITE_AS_NAMED compile option.\n        Removed 2 deprecated write functions.\n        Added these regression tests:\n           locminmax_reg, speckle_reg, watershed_reg,\n\n1.75.3  15 Feb 18\n        Fixed some coverity scan issues.\n        Autotools fix to check for png if enabling gnuplot (James Le Cuirot).\n\n1.75.2  11 Feb 18\n        Converted several progs to standard regression tests.\n        Added these tests to the alltests_reg suite:\n         adaptnorm_reg, binmorph1_reg, binmorph3_reg, equal_reg,\n         extrema_reg, grayfill_reg, falsecolor_reg, grayquant_reg.\n        Autotools fix for restricting giflib to 5.1+, and allowing\n        openjpeg 2.3 (James Le Cuirot).\n\n1.75.1  31 Jan 18\n        Simpler and more accurate function for finding word masks from\n        text image; better debugging and more thorough testing.\n        Added to regression test set: prog/italic_reg\n        Fix for potential injection attack using gplot rootdir.\n        Bug fix for bmp reading to set opacity.\n\n1.75.0  24 Jan 18\n        This is a new version, for major Ubuntu release 18.04.\n        $TMPDIR path rewriting turned off on Unix; only used for Windows.\n        Added pix conversion to depth 2 and 4.  We now have general\n          converters to 1, 2, 4, 8, 16 and 32 bpp. \n        Modified giflib to use read/write from/to memory; no temp files;\n          no longer support versions before 5.1.\n        Move most low-level code from separate files to their callers;\n          about 30 of them became static.\n        Improved table detection on scanned page images (tests: pageseg_reg.c)\n        Added support for write/compare regression tests for files.\n        Modified printimage for more flexibility.\n        Enable lookup by key on comma-separated key/value text file.\n        Update README.html for building with Visual Studio.\n        Improved functions for getting pixel averages in RGB images\n        Simplified and speedup of unsharp masking.\n        New function for detecting and correcting text orientation. \n        Remove slow sharpening operation when not appropriate during scaling.\n        Better handling of gplots with 0 or 1 data point.\n        Coverity scan fixes.\n        Modified jpeg2000 header to use openjpeg 2.3.\n        Improved depth accessors for pixa and pixaa; added size accessors\n          for pixa and pixaa.\n        Bug fix in webp interface on read error.\n        New function that finds the closest boxes in a boxa to any particular\n          box, in each of 4 directions.\n        New regression tests in automated sequence: blend5_reg, quadtree_reg,\n        wordboxes_reg.\n        New program: textorient\n        Removed programs: snapcolortest\n\n1.74.4  11 Jun 17\n        Converted two progs to reg tests\n        New version because 1.74.3 had some spurious files (xtractprotos,\n        endianness.h)\n\n1.74.3  9 Jun 17\n        Coverity scan fixes.\n        Several fixes for running on Windows, including subtle one with tiff\n        encoding depending on pad bits.\n        Utility and test if a page image likely has a table.\n        Remove use of pixCreateTemplateNoInit() where it may cause problems.\n        Make release 'configure-make ready'\n\n1.74.2  19 May 17\n        Many simplifications and improvements to recognizer.\n        Cleanup of doxygen comments\n        Encoded pdf title in escape 4-byte hex (for safety)\n        Fixed several hundered coverity scan possible leaks\n        Added about 20 regression tests to the automated set.\n        Improved vertical alignment of dewarp.\n        Implemented preliminary method for correcting dewarp foreshortening\n        due to page curvature.\n        Improved multipage tiff reading and writing.\n        Added a new version of textline finding.\n        Fixed bug in fast 2D sharpening code (used in some scaling ops)\n        BMP i/o rewritten to implement memory version directly.\n        PNG i/o functions added for encoding and decoding directly to memory.\n        Method for finding light color regions on scanned page images.\n\n1.74.1  3 Jan 17\n        Configuration changes to support the patch number in the\n        version (major.minor.patch).\n        Removed all remaining pixDisplayWrite() calls in prog/.\n        Cleaned up and/or promoted about 15 programs to full regression\n        tests.  There are now 95 tests in the regression set.\n        Over half the initial coverity scan warnings have been removed.\n\n1.74.0 10 Dec 16\n       Leptonica development was moved to github.  The master is at:\n          github.com/danbloomberg/leptonica\n       Egor Pugin is the maintainer of the site.\n       A very large number of changes have been made.  Some of them follow;\n       details can be found in the git commit messages.\n       Static makefiles modified to work with gnu*9 and c*9.\n       Modify SET macros to work on windows.\n       New modes for RGB --> gray conversion.\n       New functions added for displaying a pix from a pixa.\n       Split out sort/hash/set/map functions for dna, sarray and pta.\n       More robust horizontal deskew on multi-column page images.\n       Improve webpio_reg test.\n       Remove X11 display for gplot; it is no longer supported.\n       Remove most sleep calls, which were put in for gplot; no longer needed.\n       Removed use of gthumb in library.\n       Removed use of pixDisplayWrite() in the library; still in some progs.\n       Improved test for endianness in makefile.static; no longer requires\n       any local files or building and running a program.\n       Modified all files for doxygen output (spearheaded by\n          Juergen Buchmueller)\n       Improved plotting of the boxes in a boxa.\n       Replaced the slow point hash function with a simple fast one.\n       Added pam (4 component) format writing to pnmio.c (Juergen Buchmueller)\n       Improved rendering of pixa in side/by/sides.\n       Better utilities for pixa and pixacomp.\n       Add read/write serialization functions from/to memory for all\n       the major data structures that do not already have them.\n       More serialized boot recognizers stored as self-generating code.\n       Cleaned up generating an adapted recognizer from the boot recognizer.\n       Simplified temp file naming; removed most instances of named\n       temp files from non-debug code; use tmpfile() and a wrapper\n       l_makeTempFilename().\n       Simplify and streamline multipage tiff reading (Jeff Breidenbach).\n       Improvement of Otsu thresholding.\n       Recognize outstanding contributors to leptonica over the years.\n       New gif mem read/write interface that avoids writing a temp file,\n       contributed by Tobias Peirick.\n       Use double arrays (dna) instead of float (numa) for set ops.\n       Enrolled in coverity scan to find potential bugs (Stefan Weil\n       managed it). Fixed about 200 of them, mostly potential memory\n       leaks from early function exit.\n       Cleanup of gray quantization functions and tests.\n       Refactored connectivity-conserving operations, to make them more useful.\n       Provided methods for measuring and regularizing the width of strokes.\n       Removed viewfiles.c from library; code is now in prog htmlviewer.c.\n       Better debugging in page segmentation (pageseg.c)\n       Deprecated the pixDisplayWrite*() debugging methods.\n       Added about 15 regression tests to the framework in alltests_reg.c\n       Final mods for compatibility with tesseract 4.00.\n           \n1.73   25 Jan 16\n       All lept_* functions have been rewritten to avoid path rewrites for\n       output to temp files, which were introduced in 1.72.\n       Now, (1) files are written to the directory specified and (2) we\n       are careful to write to subdirectories of /tmp/lept/ for all test\n       programs, starting with the reg tests and prog/dewarp* and\n       prog/recog*.  This also required re-writing stringcode.c and\n       stringtemplate1.txt to write temp files to subdirectories.\n       Goal is to write to the specified path while not spamming the\n       /tmp and /tmp/lept directories.  This is particularly important\n       on windows because files in the <TEMP> directory are not cleared\n       on reboot.\n       Naming changes (to avoid collisions):\n         #defines MALLOC --> LEPT_MALLOC, CALLOC --> LEPT_CALLOC, etc.\n         ByteBuffer --> L_ByteBuffer\n       Added grayscale histogram functions that can be used to compare images.\n       Added functions to determine if an image region has horizontal\n       text lines.\n       Added functions to compare photo regions of images to determine\n       if they're essentially the same.\n       Added red-black tree utility functions to implement maps and sets.\n       The keys for maps and sets can be 64-bit entities (signed and\n       unsigned integers and doubles).\n       Implemented hashsets and hashmaps, using 64 bit keys.\n       Replaced the numaHash by l_dnaHash; removed numa2d\n       Improved security of tiff and gif reading, to prevent memory corruption\n       when reading bad data.\n       Removed src files: bootnumgen.c\n       Added src files: rbtree.c, rbtree.h, map.c, bootnumgen1.c, bootnumgen2.c\n       Added prog files: rbtreetest.c, maptest.c, settest.c, hashtest.c,\n                         recog_bootnum.c, percolatetest.c\n       Added files for building using cmake (Egor Pugin)\n\n1.72   5 Apr 15\n       Better handling of 1 bpp colormap read/write with png so that\n       they are losseless.  The colormap is always removed on read and\n       the conversion is to the simplest non-cmapped pix that can fully\n       represent the input -- both with and without alpha.\n       Fixed overflow bug in pixCorrelationBinary().\n       Fixed orientation flags and handling of 16 bit RGB in tiff.\n       Also new wrappers to TIFFClientOpen(), so we no longer go through\n       the file descriptor for memory operations.\n       Improvements in the dewarp functions.\n       New box sequence smoothings.\n       New antialiased painting through mask; previously it was only\n       implemented for connected components in a mask.\n       Better error handling and debug output with jpeg2000 read/write.\n       Implemented base64 encoding.  This allows binary data to be represented\n       as a C string that can be compiled.  Used this in bmf utility.\n       Implemented automatic code generation for deserialization from\n       compiled strings (stringcode.*)\n       Regression tests write to leptonica subdir of <Temp> in windows; in\n       unix it is optional.  This avoids spamming the <Temp> directory.\n       Added new colorspace conversions (XYZ, LAB).\n       New source files: encoding.c, bmfdata.h, stringcode.c, stringcode.h,\n         bootnumgen.c.\n       Removed source files: convolvelow.c, graymorphlow.c\n       New programs: genfonts_reg, colorize_reg, texturefill_reg,\n         autogentest1, autogentest2.\n       alltests_reg now has 66 tests.\n\n1.71   18 Jun 14\n       This version supports tesseract 3.04.  In particular, 3.04\n        has automatic conversion of a set of scanned images, either in a\n        directory or coming directly from a scanner, into pdf with injected\n        text.  This is something we've wanted to do for several years!\n       Improved jp2k header reading, including resolution.\n       Removed src files: rotateorthlow.c, pdfio.c, pdfiostub.c\n       Renamed jp2kio.c, jp2kiostub.c ==> jp2kheader.c, jp2kheaderstub.c.\n        These header reading functions parse the jp2k files, and\n        don't require a jpeg2000 library.\n       New jp2kio.c, jp2kiostub.c, that uses openjpeg-2.X to read\n       and write jp2k.  We now support I/O from these formats:\n         png, tiff, jpeg, bmp, pnm, webp, gif and jp2k\n        as well as writing to PostScript and pdf.\n       New pdfio1.c, pdfio1stub.c, pdfio2.c pdfio2stub.c, where we've\n        split functions into high and low level.\n       Fixed memory bug in bilateral.c\n       Improved reading/write of binary data from file.  For example,\n        l_binaryReadStream() can now be used to capture data piped\n        in via stdin.\n       Font directory now arg passed in everywhere (not hardcoded)\n       Don't write temporary files to /tmp; only to a small number of\n       subdirectories, to avoid spamming the /tmp directory.  E.g.,\n       for regression tests, the current output is now to /tmp/regout/.\n       For jpeg reading modify pixReadJpeg() to take as a hint\n        a bit flag that allows extraction of only the luminance channel.\n       Allow wrapping of pdf objects from png images without transcoding\n        (thanks to Jeff Breidenbach)\n       Better support for alpha on read/write with png, including\n       1 bpp with colormap, alpha (supported in png with transparency array)\n\n1.70   3 Feb 14   (distribution to debian; ubuntu 14-04; 4.1.0)\n       New bilateral filtering.\n       New simple character recognition utility.\n       Improved dewarping functionality, in model building and rendering.\n        More flexible use of ref models.\n       Better and more consistent handling of alpha layer in RGBA, though\n        use of the spp field.  Ability to handle more png files with alpha,\n        including palette with alpha.\n       New fast converters from jpeg and jpeg2000 to pdf, without transcoding.\n       Made bmp reader (and pix reading in general) more robust; avoid\n        size overflow errors.\n       New text labelling operations; depth conversion of a set of images\n       New license (essentially BSD 2-clause), to specify conditions\n        for both source and binary distribution.\n       Improved auto make: make all progs, install just 11, test 61.\n       New src files: bilateral.{c,h}, dewarp1.c, dewarp2.c,\n           dewarp3.c, dewarp4.c, jp2kio.c, jp2kiostub.c,\n           pixlabel.c, recogbasic.c, recogdid.c, recogident.c,\n           recogtrain.c, recog.h\n       New prog files: adaptmap_dark.c, alphaxform_ret.c,\n           bilateral_reg.c, binarize_reg.c, binarize_set.c,\n           blackwhite_reg.c, blend1_reg.c, blend3_reg.c, blend4_reg.c,\n           boxa1_reg.c, colorcontent_reg.c, coloring_reg.c,\n           colorspace_reg.c, compare_reg.c, converttopdf.c,\n           croptest.c, dewarprules.c, dewarptest1.c, dewarptest2.c,\n           dewarptest3.c, dewarptest4.c, displayboxa.c, displaypix.c,\n           displaypixa.c, findcorners_reg.c, fpix1_reg.c,\n           fpix2_reg.c, fpixcontours.c, insert_reg.c, italictest.c,\n           jpegio_reg.c, label_reg.c, multitype_reg.c, nearline_reg.c,\n           newspaper_reg.c, numa1_reg.c, numa2_reg.c, recogsort.c,\n           recogtest1.c, shear1_reg.c, webpio_reg.c, wordboxes_reg.c\n       Removed src files: arithlow.c, binexpandlow.c, binreducelow.c,\n           dewarp.c\n       Removed prog files: blend_reg.c, blendtest1.c,\n           dewarptest.c, fpix_reg.c, inserttest.c, numa_reg.c, rotatetest2.c\n           shear_reg, xvdisp.c\n\n1.69   16 Jan 12   (distribution to debian; ubuntu 12-04; 3.0.0)\n       Fixed bug in pdf generation for large files, using a new\n        double array (dnabasic.c).  Added several new modes for pdf\n        generation from sets of images.\n       Dewarp based on image content now aligns to left and right margins;\n        works at book level; is more robust to bad disparity models;\n        version 2 serialization.\n       Fixed regutils to return the actual number of errors.\n       Improved sorting efficiency of numas in cases where binning,\n        which is order N, makes sense.\n       Fixed fpix serialization (now version 2).\n       New version (5) of xtractprotos, allows putting prototypes in-line in\n        allheaders.h.  Having them separately in leptprotos.h still an option\n       New copyright (BSD, 2 clause) on src files.\n       Removed all trailing whitespace in src files.\n       New src files: boxfunc4.c coloring.c, dnabasic.c\n       New prog files: dna_reg.c, alphaops_reg.c\n       Removed prog file: alphaclean_reg.c\n\n1.68   10 Mar 11\n       Fixed windows issues with passing pointers across C-runtime boundaries\n       when using dlls, by providing special functions (e.g., lept_fopen()).\n       Proper version numbers are now set with automake.\n       New utility (quadtree.c) for generating quadtree statistics.\n       New utility (in colorspace.c) for conversions to and from YUV.\n       Refactored functions for assembling image data for generating\n       either PS or PDF images using g4, jpeg or flate encoding.\n       Better tempfile names, using current time in microseconds.\n       Functions for getting resolution from jpeg and png files.\n       Use size_t throughout for reading and writing binary data.\n       Deprecate arrayRead*() and arrayWrite() functions; replace in\n       the library with l_binaryRead*() and l_binaryWrite().\n       Better handling of colormap images for in-place rasterop and shear.\n       New utility (bytearray.c) for parsing and handling binary data;\n       used for generating PDF files.\n       New utility (pdfio.c) for generating PDF files.\n       Refactored regutils functions to make them simpler to use.\n       Top-level deskew now works on any image.\n       Added functions in utils.c for cross-platform development, mostly\n       for functions that make and remove directories, copy, move\n       and delete files, etc.  It should now be straightforward to write\n       programs that will compile and run on windows.\n       Reg tests have better printout; all give timings.\n       New utility program: convertfilestopdf\n\n1.67   9 Nov 10\n       Autoconf: now built with James Cuirot's config files that\n         build the library and all 200 progs.\n       New sudoku solver.  Just a game, but there are interesting aspects.\n       Modified parseprotos.c to reject a type of \"extern\" decl.\n       Add faster implementation for very small gray morphology\n         operations (3x1, 1x3, 3x3).\n       Eliminate warnings on recent gcc if you don't check return values\n         from fread, fscanf, fgets, system, etc.\n       Convolution: new functions for windowed variance and stdev; allow\n         non-square kernel for windowed mean square.\n       Put stdio.h and stdlib.h in alltypes.h, so they're not required\n         in any .c files.\n       Replace numaConvolve(), which is just a windowed mean, by\n         windowed statistics functions (mean, mean square, variance).\n       Generalize pixExtractOnLine() for arbitrary lines.\n       Add pix interface to webp (webpio.c, webpiostub.c).  This is a\n         new open source codec, based on the video codec vpx (webm).\n       Serialization of FPix and DPix\n       Interconversion between FPix and DPix\n       Integer scaling of FPix and DPix; includes the last row and column.\n       New convertfiles.c: depth conversion on files in a directory.\n       Testing programs in prog:\n           convolve_reg.c, numa_reg.c: expanded test set\n           projection_reg.c (tests pixRowStats(), pixColumnStats())\n           dewarptest.c: output ps and pdf files\n           writemtiff.c: simple driver to write images to a single file\n\n1.66   3 Aug 10\n       More tweaks for including (or not) bounding box hints for\n         PS wrapping.  Default is to write b.b., but not in functions\n         that wrap images as full pages (psio1.c, psio2.c)\n       pix4.c split in two files, and added function to identify c.c.\n         that are sufficiently similar in shape to rectangles (pix5.c)\n       Modify 2 and 4 bit setters to clip the input value so that it can\n         only affect the pixel requested (arrayaccess.c, arrayaccess,h)\n       New pseudorandom sequence functions (numafunc1.c)\n       Dewarping camera-based images using textlines (dewarp.c, prog/dewarp*)\n       Geometrical function for aggregating overlapping bounding boxes.\n       Programs to generate figures for book chapter \"Document Image\n         Applications\" in \"Mathematical Morphology: theory and applications\"\n         (see: http:/www.leptonica.org/najman-talbot-book-chapter.html)\n         (prog/livre*.c)\n       Functions that do affine and other operations in images with\n         alpha blending at edges: pix*WithAlpha().  Also do this\n         with a gamma/inverse-gamma wrapper to further reduce edge aliasing.\n          (rotate.c, scale.c, projective.c, affine.c, bilinear.c,\n           prog/alphaxform_reg.c)\n       Improved color segmentation (fixed bugs; made faster)\n       Higher order least square fits: quadratic, cubic, quartic. (pts.c)\n       Various mods for otsu binarization and the *SplitDistribution*()\n         functions (numafunc2.c, prog/otsutest2.c)\n       Control sampling in convolution output (convolve.c, prog/fpix_reg.c)\n       Morphological operations on numas (numafunc1.c, numafunc2.c,\n         prog/numa_reg.c)\n       Pix serialization wrapped so we can use pixRead(), etc on these\n         files (spixio.c, readfile.c, writefile.c)\n       Gif read/write to memory fixed (and cheated -- using files) (gifio.c)\n       New fpix and dpix accessors; contour rendering on fpix (fpix1.c, fpix2.c)\n       Various functions for linearly mapping colors and displaying arrays\n         of colors (pix4.c, blend.c, prog/rankhisto_reg.c)\n       Functions for getting approximate ranges of colors and color\n         components in an image (pix4.c, colormap.c)\n       Cleaned up windows platform and compiler defines and macros.\n\n1.65   5 Apr 10\n       Added regression test utility functions for standardizing and\n         automating construction and running of regression tests.  Makes the\n         golden files when the 2nd arg to the reg test is 'generate'.\n         (regutils.{c,h})\n         Converted 22 reg tests in prog to use this; invoked with alltests_reg.\n         Goal is to put all prog/*_reg.c into this format and put a set\n         of golden files on the web.\n       Small fixes in gifio for handling streams properly.\n       New functions for shifting colors, hue invariant transforms, etc\n         (blend.c)\n       prog/dwamorph*.c: rename *1_reg.c to dwalineargen.c; others\n         converted to standard reg tests.\n       New rgb convolution functions.\n       For PS output, write all images with a bounding box hint and with\n         page numbers, which works for both embedded (e.g., in tex) and\n         full page generated PS.  Once converted to pdf, this is fine\n         in all situation.\n       New functions for initialization and random insertion with pixcomp.\n       For color quantization, make the lightest color white if sufficiently\n         close; ditto for black (colorquant1.c, colorquant2.c).\n       Rank binning of 8 bpp and rgb images (numafunc2.c, pix4.c)\n       A function to rank colors by the intensity of the minimum comp (pix4.c)\n       New pixRotateBinaryNice(), rotates 1 bpp pix in such a way that\n         the shear lines aren't visible. (rotate.c)\n       New pixSaveTiledWithText(), a convenience function to append text\n         to images that are being tiled. (writefile.c)\n       Stereoscopic warping functions and stereo pair functions (warper.c)\n       Linear interpolated shear -- better than rasterop shear (shear.c)\n       Option to use higher quality chroma (U,V) sampling in jpeg (jpegio.c)\n       Rename Bmf --> L_Bmf.\n       New tests in prog:\n         alltests_reg.c alphaclean_reg.c, psio_reg.c, rankbin_reg.c,\n         rankhisto_reg.c, warpertest.c\n\n1.64   3 Jan 10\n       Easy setup for standard byte processing on 8 bpp pix (pix2.c)\n       Evaluation of difference between similar images; test for\n       similar images and (compare.c)\n       Subpixel scaling, with color input and separate scale factors (pixconv.c)\n       Fix tiff header reader to get correct format (tiffio.c)\n       Enable pixDisplay() to work with i_view (windows) and with\n         xzgv and xli as well as xv; allow application to choose\n         which to use (writefile.c).\n       Use a mask to specify regions that are changed by a morphological\n         operation (morphapp.c).\n       Improve the default sharpening for scaling (scale.c)\n       Function to test for equivalence of file data (utils.c)\n       Select and read image files with embedded index (readfile.c)\n       Fix box size calculation in pixEmbedForRotation(); solution\n         provided by Brent Sundheimer.\n       New pixDisplayMultiple(), instead of calling gthumb directly; this\n         is now set up to use i_view for windows.\n       Changed criteria for determining if an image is color (colorcontent.c,\n         colorquant{1,2}.c.\n       Optional mode where the filename extension is automatically written\n         to output image files; particularly useful for windows.\n       Initialize boxa and pixa as full, with minimal placeholders.\n       Get rank valued numbers and boxes in numa and boxa.\n       Cute implementation for finding largest solid rectangle (maze.c)\n       New median cut quantization for mixed (color/gray) images (colorquant2.c)\n       Many changes to allow the library and applications be built easily\n         in windows.  There is now a thorough windows readme, written by Tom\n         Powers, for doing this.  The windows build information and\n         project files are now in a new vs2008 directory.\n\n1.63   8 Nov 09\n       Added pixScaleToGrayFast(), a faster version with very similar quality.\n       Fixed scaleGrayLILow() to handle edge pixels more accurately\n       Text processing:\n         new text application (finditalic.c, prog/finditalic.c) for locating\n           words in italic type style.\n         Easier to add text to a pix using the bitmap font stored in\n           the font directory; see, e.g., prog/writetxt_reg.c.\n       Blending of 2 images with an alpha channel: pixBlendWithGrayMask()\n       Fixed bug in color segmentation; it now (again) works properly.\n       New utility (pixcomp.c) for handling compressed pix arrays in\n          memory; new PixComp and PixaComp structs.\n       Fast serialization of pix without compressing (pixSerializeToMemory\n          and pixDeserializeFromMemory); required serialized colormaps\n       FileI/O: new functions for reading file headers.\n          PostScript generation modernized; split psio.c into psio1.c\n            and psio2.c; added level 3 (flate) encoding.\n          new functions for reading and writing multipage tiffs, for\n            arbitrary input images.  For writing, compression is lossless\n            (either g4 or zip)\n          update all I/O stub files\n       Miscellaneous: new pixaAddBorderGeneral(); new functions in pix3.c\n          for counting fg pixels and summing 8 bpp pixels by column and row;\n          new numaUniformSampling() for resampling with interpolation;\n          subpixel scaling.\n       New or improved regression tests in prog:\n          extrema_reg, pixalloc_reg, blend2_reg, rotateorth_reg,\n          ioformats_reg, colorseg_reg, pixcomp_reg, pixserial_reg,\n          writetext_reg, psioseg_reg, subpixel_reg.\n       Interface changes:\n         findFileFormat() and findFileFormatBuffer(): now returns format\n             using input ptr.  The function return value is 0 if OK; 1 on error\n         rename: pixThresholdPixels() --> pixThresholdPixelSum()\n\n1.62   26 Jul 09\n       Expanded composite Dwa implementation as a sequence of operations,\n       so that it now works beyond a size of 63.  It's typically about 2x\n       faster than the composite rasterop implementation (with help\n       from Ankur Jain).  Also use data transfer instead of data copy\n       whenever possible.  Thorough tests with binmorph4_reg and binmorph5_reg.\n       New functions in colorseg.c for masking and histogramming in HSV\n       color space.\n       Treat string constants rigorously as const char*, initializing\n       to char[] if to be used as non-const, or in some cases casting\n       to char*.  This avoids compiler warnings.\n       Improved color quantization using existing colormap for octcubes\n       and a new version for grayscale.  This will rigorously map most\n       black and most white octcubes (rsp) to black and white\n       if they exist in the colormap.\n       Fast quantization to an existing colormap for color and grayscale.\n       Fixed some bugs; e.g., in pixAffineSampled() for 1 bpp with\n       L_BRING_IN_BLACK; reading and writing pnm for 2 and 4 bpp.\n       In pngio.c, enable compile time control over these settings:\n         converting 16 bpp --> 8 bpp on read\n         removing alpha channel on read\n         setting zlib compression on write\n       For general scaling, allow sharpening to be optional, and provided\n       faster sharpening operations.\n       Improve support for 16 bpp grayscale.\n       For scaleToGray* functions, reduce the width truncation.\n       In psio.c, new functions for converting segmented page images\n       (text and image) into level 2 PostScript.\n       Removed all implicit casting to const char*.\n       New custom pix memory allocator, designed for large pix whose\n       memory needs to be reused many times.\n       In xtractprotos, we now allow prepending an arbitrary string to\n       each prototype.\n       In environ.h, additions for MSVC to work with VC++6, including\n       prototpye strings for dll import and export (thanks to Ray Smith).\n       In colorseg.c, new functions for building HSV histograms, finding \n       peaks, and generating masks based on the peaks.\n       New or improved regression tests:\n         pixalloc_reg, binmorph4_reg, binmorph5_reg, conversion_reg,\n         scale_reg, cmapquant_reg, \n\n1.61   26 Apr 09\n       New histo-based grayscale quantization: pixGrayQuantizeFromHisto(),\n       that is used in new pixQuanitzeIfFewColorsMixed().\n       Made final fix in pixBlockconv().  No underflows; no more overflows!\n       More efficient rgb write with pnm.\n       Add proto to jpegiostub.c, allowing proper use of the stubber.\n       Fix several filter functions to use proper test on filter size; viz.,\n         pixMinMaxTiles(), several functions in convolve.c.\n       Redo shear implementation to handle arbitrary angles, to handle\n         colormapped images, and to avoid the singularity at pi/2.\n       Removed both static vars from pixSaveTiled().\n       Generalized pixRotate() to handle colormapped images, and to use\n         pixRotateBySampling() in place of the removed pixRotateEuclidean().\n       New skew finder for full angle range, pixFindSkewOrthogonalRange().\n       For skew detection, now allow shear about image center as well as\n         about the UL corner.\n       New rotation reg tests: rotate1_reg.c and rotate2_reg.c.\n       Better serialization format for boxaa; introduce new version numbers\n         for boxaa, pixa, and boxa, as required.\n       Proper init in boxGetGeometry(), boxaGetBoxGeometry(), and the\n         accessors in sel1.c and kernel.c.\n       Improved Numa functions in numafunc1.c and numafunc2.c; in\n         particular, numaMakeHistogramAuto() and numaGetStatsUsingHistogram().\n         With all histo generators, make sure the start and binsize params\n         are properly set and are used.\n         Interface change: Use these parameters implicitly in\n         numaHistogramGetRankFromVal() and numaHistogramGetValFromRank().\n       Interface change to ptaGetLinearLSF(): add 1 optional parameter.\n       In several pixaDisplay*() functions, handle colormaps properly.\n       pixafunc.c split to pixafunc1.c and pixafunc2.c.\n         New connected component selections and options in pixaSort.\n       Patch from Tony Dovgal for reading tiff rgba files.\n       Added new logical operation options for numas.\n       New pixConvertRGBToGrayMinMax() that chooses min or max of 3 components.\n       Computation of pixelwise aligned stats between multiple images\n         of the same size (e.g., video), in pix4.c.\n       Very fast binsort implemented for boxa and pixa.\n       Cleanup and rename stack, queue, heap and ptra functions:\n         all structs and typedefs start with \"L_\"\n         all functions start with \"l\"\n       Sel creation for crosses and T junctions.\n       New thresholding operations to binary; split out from adaptmap.c\n         into binarize.c.\n       Implementation of sauvola binarization, including use of pixtiling.\n       Added composite parallel union and intersection morphological operations.\n       Small changes to scaling and rotation to improve accuracy; only\n         visible on very tiny, symmetric images.\n       Implemented DPix (double precision data); useful for the mean\n         square accumulator for sauvola binarization.\n       New fast hybrid grayscale seedfill, in addition to the interative\n         version (contributed by Ankur Jain).\n       New or improved regression tests:\n         rotate1_reg, rotate2_reg, shear_reg, numa_reg, skew_reg,\n         ptra1_reg, ptra2_reg, paint_reg, smallpix_reg, pta_reg,\n         pixmem_reg, binarize_reg, grayfill_reg.\n\n\n1.60   19 Jan 09\n       Fixed bug in pixBlockconv(), introduced in 1.59, that causes\n       overflow when convolving with an image that has white (255)\n       at the edges.  [quickly found by Dave Bryan]\n       Include function to display freetype fonts in a pix.\n       The files freetype.c and freetype.h are in the distribution, but are not\n       yet linked into the library.  This is contributed by Tony Dovgal,\n       and this version works only for MSVC.\n       Found that the problems with binary compression in giflib are fixed\n       with giflib 4.1.6.\n\n1.59   11 Jan 09\n       Lots of changes since 1.58.\n       New files: affinecompose.c, ptra.c, warper.c, watershed.{h,c}.\n          Split: boxfunc.c --> (boxfunc1.c, boxfunc2.c, boxfunc3.c)\n       Improved connected component filtering, with logical functions\n       applied to indicator arrays (pix4.c, pixafunc.c, numafunc1.c).\n       Function to determine if an image can be quantized nicely with\n       only a few colors (colorcontent.c, pixconv.c).\n       New gray seed-filling functions (seedfill.c, seedfilllow.c).\n       Fixed bugs in tophats and hdome, due to misuse of pixSubtractGray()\n       (morphapp.c).\n       New function for improving contrast (adaptmap.c)\n       Watershed transform (still slightly buggy) (watershed.c,h).\n       Fast random access into a pix using line pointers (pix1.c, arrayaccess.*)\n       Conversions of colormaps from gray to color and v.v. (colormap.c)\n       Seedfill function that applies an upper limit to the fill\n       distance (seedfill.c)\n       New function for warping images with random harmonic distortion\n       (with help from Tony Dovgal).\n       New generic ptr array utility: all O(1) functions of a stack plus\n       random replace, insert and delete (ptra.c).\n       Simple functions for colorizing a grayscale image with an arbitrary\n       color (pixconv.c, colormap.c)\n       Flexible affine transforms (translation, scale, rotation) on pta\n       and boxa (affinecompose.c).\n       Clipping of foreground (both exact and approximate) starting from\n       within a rectangular region of the image (pix4.c)\n       Blending a colored rectangle over an image (pix2.c, boxfunc3.c)\n       Generation of rectangle covering of mask components (boxfunc3.c).\n       Block convolution using tiles (for very large images)  (convolve.c)\n       New or improved regression tests in prog:\n          locminmax_reg, lowaccess_reg, grayfill_reg, adaptnorm_reg,\n          xformbox_reg, warper_reg, cmapquant_reg, compfilter_reg,\n          splitcomp_reg, affine_reg, bilinear_reg, projective_reg\n       Acknowledgments:\n       (1) Big thanks to Tony Dovgal for helping with the warping\n           (e.g. for captcha).  Tony also provided an implementation that\n           allows rendering truetype fonts into a Pix on windows.\n           This is not yet incorporated, because it opens a huge\n           \"can of worms,\" which is OK if you're going fishing but\n           maybe not if you're trying to support leptonica on many platforms.\n           TBD.\n       (2) David Shao provided a libtools build system that includes\n           building the prog directory!  I believe this will work, but it\n           is is not yet included because of problems I continue to have\n           with macros in version 2.61 of gnu libtools.\n       (3) Steve Rogers is working on a MSVC build for the prog directory.\n           I hope to have this available for 1.60.\n\n1.58   27 Sept 08\n       Added serialization for numaa.\n       New octree quantizer pixOctreeQuantByPopulation(), that uses a\n       mixture of level2 and level4 octcubes.  Renamed many functions\n       in colorquant1.c, and arranged/documented them more carefully.\n       Revised documentation in leptonica.org/papers/colorquant.pdf.\n       Simplified customization for I/O libraries and fmemopen() in environ.h.\n       Fixed bugs in colormap.c, viewfiles.c, pixarith.c.\n       Verified Adam Langley's jbig2enc (encoding jbig2 and generating pdf from\n       these encoded files) works properly with the current version -- see\n       Section 24 of README.html for usage and build hints.\n       New separable convolution; let pixConvolve() take 8, 16 and 32 bpp input.\n       New floating pt pix (FPix) utility, which allows convolution and\n       arithmetic operations on FPix; also interconversion to Pix.\n       Ability to read headers on multipage tiff.\n       More robust updown text detection in flipdetect.c.\n       Use of sharpening to improve scaling when the scale factor is near 1.0.\n       See prog/fpix_reg.c for regression test and usage.\n       See prog/blend_reg.c for blending regression test, with new functions.\n\n1.57   13 Jul 08\n       New Debian distribution for 1.57 (thanks to Jeff Breidenbach).\n       Improved the Otsu-type approach for finding a binarization threshold,\n       by choosing the min in the histogram subject to constraints\n       (numafunc2.c, adaptmap.c)\n       New function pixSeedspread() in seedfill.c, similar to a voronoi tiling,\n       that is used for adaptive thresholding in pixThresholdSpreadNorm().\n       In the process, fixed a small bug in pixDistanceFunction().\n       (The approach was suggested by Ray Smith, and uses the fast\n       Vincent distance function method to expand each seed.)\n       Generalized the functions in kernel.c to use float weights\n       for general convolution (Version 2 for kernel), and added\n       gaussian kernel generation.\n       Put all jpeg header functions into jpegio.c, where they belong.\n       Fixed bugs in pixaInsertPix() and pixaRemovePix().\n       Added read/write serialization for Numaa.\n       New functions for comparing two images using bounding boxes (classapp.c).\n\n1.56   12 May 08\n       Added several new 1d barcode decoders.  The functional interface\n       is still in flux.\n       Autoconf!   To get this working, it was necessary to: determine and\n       set the endian flag; select which libraries are to be linked;\n       determine if stream-based memory I/O is enabled.\n       This required a major cleanup of the include files, minimizing\n       dependencies on external library header files, and getting everything\n       to work with both autoconf (HAVE_CONFIG_H) and the old\n       customized makefile.  Customization is now all in environ.h.\n       pixSaveTiled(): a new way to display tiled images.\n       pixtiling.c: interface for splitting an image into a set of\n       overlapping tiles, using mirrored borders for tiles touching the\n       image boundary.\n       pixBlendHardLight(): new blending mode with nice visual effects.\n       pixColorFraction(): determines extent of color in image\n       Both octree and median-cut color quantization check first if\n       image is essentially grayscale; improvements to both algorithms.\n       box*TransformOrdered(): general sequence of linear transforms.\n       colorquant_reg.c, xformbox_reg.c, hardlight_reg.c: new regr tests.\n\n1.55   16 Mar 08\n       New functions for combining two images arbitrarily through a mask,\n       including mirrored tiling (pix3.c)\n       Modify pixSetMasked*() to work on all images (pix3.c)\n       New functions for extracting masked regions such as pixClipMasked()\n       (pix3.c) and pixMaskConnComp() and pixMaskBoxa() (boxfunc.c).\n       New functions to separate fg from bg (pix3.c), one of which is supported\n       by numaSplitDistribution (numafunc.c).\n       Modify sobel edge detector to take another parameter (edge.c)\n       Support for 4 bpp cmyk color space in jpeg (jpegio.c)\n       Modified median cut color quantization (colorquant2.c)\n       Renamed colorquant.c (for octree quant) --> colorquant1.c.\n       Absorbed conncomp.h and colorquant.h into specific files that\n       depend on them (colorquant1.c, conncomp.c, pix.h)\n       General convolution with utility for building kernels\n       (convolve.c, kernel.c)\n       Initial implementation of 1D barcode reader.  So far, we just have the\n       signal processing to locate barcodes on a page, deskew them, and\n       find the bar widths, along with decoders for two formats.\n       (readbarcode.*, prog/barcodetest.c)\n       Made the default to stub out read/write for non-tiff image formats\n       to memory; it doesn't work on Macs & they were complaining (*io.c)\n       Include MSVC project files for building leptonlib under\n       windows (leptonlib.*)\n\n1.54   21 Jan 08\n       Histogram equalization (enhance.c).\n       New functions for pixaa: serialization (r/w), creation\n       from pixa, and a tiled/scaled display into a pixa (pixabasic.c,\n       pixafunc.c).\n       Read/write of tiff to memory (instead of a file, using\n       the TIFFClientOpen() callback interface), contributed by Adam\n       Langley (tiffio.c, testing in prog/ioformats_reg).\n       Improved image statistics functions, both over tiles and\n       through a mask over the entire image.  Added standard deviation\n       and variance; enable statistics for rgb and colormapped images,\n       in addition to 8 bpp grayscale (pix3.c).  New function to\n       extract rgb components from a colormapped image (pix2.c).\n       Fix pixWriteStringPS() to work with all depths and colormap (psio.c)\n       Enable all non-tiff formats to also write and read to/from memory (*io.c)\n       Added support for read/write to gif, contributed by Tony Dovgal\n       (gifio.c, gifiostub.c, imageio.h).  See Makefile for instructions\n       on enabling this.\n\n1.53   29 Dec 07\n       Add 4th arg to pixDistanceFunction() to specify b.c.,\n       and fixed output to 16 bpp grayscale pix. (seedfill*.c)\n       New un-normalized block grayscale convolution (convolve.c)\n       Fixed bug in getLogBase2(), so that pixMaxDynamicRange() works\n       properly.  This is useful for displaying a 16 bpp pix as\n       8 bpp (pixarith.c).  New function for getting rank val for\n       rgb over a region specified by a mask (pix3.c).  New function\n       for extremem values of rgb colormap (colormap.c).  New\n       function pixGlobalNormNoSatRGB(), a variant of pixGlobalNormRGB()\n       that prevents saturation for any component above a specified\n       rank value (adaptmap.c).  Added mechanism for memory\n       management of pix (pix1.c).  Added selective morphology by\n       region given by a mask (morphapp.c).  Fixed prototype extracdtion\n       to work properly with function prototypes as args; released\n       version 1.2 of xtractprotos (parseprotos.c, xtractprotos.c).\n       Add a boxa field for pixaa, along with serialization (pixabasic.c),\n       and modified display of pixaa to include this (pixafunc.c).\n       Coalesced the version numbers for pixa, pixaa, boxa, and boxaa\n       serialization (pix.h).\n       New progs: modifyhuesat displays modified versions on a grid;\n       textlinemask shows simple methods for extracting textline masks.\n\n1.52   25 Nov 07\n       Implemented Breuel's whitespace partitioning algorithm (partition.c).\n       Generalized pixColorMagnitude() to allow different methods\n       for computing the color amount of a pixel (colorcontent.c).\n       New methods for computing overlap of boxes (boxfunc.c).\n       New methods for painting (solid) and drawing (outline) of boxes,\n       replacing boxaDisplay() with pixDrawBoxa*() and pixPaintBoxa*()\n       (pix2.c, boxfunc.c).\n       Ray Smith fixed bug in the distance function (seedfilllow.c).\n       For pixConvertTo1() and pixConvertTo8(), treat input pixs as a\n       const and never return a clone or altered cmap (pixconv.c).\n       Make pixGlobalNormalRGB() crash-proof (adaptmap.c).\n       Tony Dovgal added ability to read jpeg comment (jpegio.c).\n\n1.51   21 Oct 07\n       Improved histogramming of gray and color images (pix3.c)\n       Histogram statistics (numafunc.c).  Better handling of tiff\n       formats, testing rle and packbits output and improving\n       level 2 postscript conversion efficiency (readfile.c, psio.c).\n       Test program for r/w and display of Sels (prog/seliotest.c).\n       Use endiantest to determine automatically which flags to set\n       when compiling for big- or little-endians (endiantest.c)\n       Compute a color magnitude for each rgb pixel (colorcontent.c).\n       Allow separate modification of hue and saturation (enhance.c).\n       Global transform of color image for arbitrary white point (adaptmap.c).\n   \n1.50   07 Oct 07\n       |||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n       NOTE CAREFULLY: The  image format enum in imageio.h has\n       changed.  This is an ABI change, and it requires\n       recompilation of the library.\n       |||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n       Suggestions by David Bryan again resulted in several changes,\n       including improvements to the dwa generating functions and interfaces.\n       Major improvements for dwa code generation, including an\n       optional filename for the output code, adding function prototypes\n       to the code so it can easily be linked outside the library.\n       Addition of 2-way composable dwa functions for bricks, with\n       code addition to the library, and a new interpreter for dwa\n       composable brick sequences  (fmorphauto.c, fhmtauto.c,\n       morphtemplate1.c, hmttemplate1.c, morphdwa.c, dwacomb*.2.c, morphseq.c)\n       Exhaustively tested in six programs (prog/binmorph*_reg,\n       prog/dwamorph*_reg).\n       New input modes for Sels, from both color bitmap editors\n       and a simple file format (sel1.c).\n       Better Sel generation functions in sel2.c, including combs for\n       composable brick operations and linear bricks for comparison.\n       Removed unnecessary copies for more efficient border add'n & removal. \n       Added RLE basline enc/dec for tiff.\n       Binary morphology documentation on the web page updated for these\n       changes/additions.\n       William Rucklidge unrolled inner loops and added LUTs to\n       speed up several more functions, including correlation\n       (correlscore.c), centroid calculation (morphapp.c),\n       2x linear interp grayscale scanning (scalelow.c),\n       thresholding to binary (grayquantlow.c), and removal\n       of colormaps to gray (pixconv.c).\n\n1.49   23 Sep 07\n       |||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n       NOTE CAREFULLY: The  image format enum in imageio.h has\n       changed.  This is an ABI change, and it requires\n       recompilation of the library.\n       |||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n       Suggestions by David Bryan resulted in several changes.\n       pixUnpackBinary() unpacks to all depths.\n       Can now write and read tiff in LZW and ZIP (gzip) formats.\n       These, like uncompressed tiff, work on all bit depths.\n       Also enabled pnm 16 bpp r/w, both non-ascii and ascii.\n       ioFormatTest() now has better coverage and clarity; this is\n       used in prog/ioformats_reg.c.\n       Rewrite of morphautogen code to implement opening and closing atomically.\n       Cleaner interaction with new text templates (fmorphauto.c,\n       fhmtauto.c, sarray.c, *template*.txt,).\n       More regression testing (e.g., binmorph1_reg.c, binmorph3_reg.c).\n\n1.48   30 Aug 07\n       William Rucklidge sped up pixCorrelationScore() by in-lining\n       all bit operations (jbclass.c).\n       Generalized rank filtering from 8 bpp to color (rank.c).\n       Fixed many functions that take a dest pix so that they don't fail if\n       the dimensions or depth are not consistent with the src pix.\n       The underlying change for this is to pixCopy() (pix1.c).\n       Improved display of Sel as a pix; added selaDisplayInPix() to\n       display all Sels in a Sela, orthogonal rotations of Sels (sel1.c).\n       New functions for thinning and thickening while preserving connectivity\n       and avoiding both free end erosion and dendritic cruft (ccthin.c,\n       prog/ccthin1_reg.c, prog/ccthin2_reg.c).\n       New function pixaDisplayTiledInRows() for compactly tiling pix\n       in a pixa, plus documentation of different existing methods. (pixafunc.c)\n\n1.47   22 Jul 07\n       New brick rank order filter (rank.c, prog/ranktest.c, prog/rank_reg.c).\n       Use mirror reflection b.c. to avoid special processing at\n       boundaries (pix2.c).  Simple sobel edge detector (edge.c).\n       Utility for assempling level 2 compressed images in PostScript\n       (psio.c, prog/convertfilestops.c).  Enable read/write of 16 bpp,\n       grayscale tiff (tiffio.c, pix2.c).\n       New function for finding the number of c.c., which is a bit\n         faster than finding the b.b. or the component images (conncomp.c)\n       New functions for finding local extrema in grayscale image (seedfill.c)\n\n1.46   28 Jun 07\n       Added interpreted mode for color morphology (morphseq.c).\n       In functions, make effort to consistently do early initialization\n       of ptrs to objects returned on the heap.  This is to try to\n       avoid letting functions return uninitialized objects, even if\n       the return early because of bad input.\n       Split pixa.c into 2 files; revised the component filtering\n       in both pixafunc.c and boxfunc.c.  Added component filtering\n       for \"thin\" components.\n       Added subsampling functions for numa and pta.\n       Word segmentation now works at both full and half resolution.\n       Better methods for displaying and tiling (for debugging),\n       using pixDisplayWrite(), pixaReadFiles() and pixaDisplayTiledAndScaled().\n\n1.45   27 May 07\n       Further improvements of orientation and mirror flip detection\n       (flipdetect.c).  Added 2x rank downscaling and general integer\n       replicative expansion (scale.c).  Simplified interface for\n       averaging, and included tiled averaging, which is yet another\n       integer reduction scaling function (pix3.c).\n\n1.44   1 May 07\n       Split pix2.c into (pix2.c, pix3.c), with basic housekeeping\n       functions (e.g., ops on borders, padding) in pix2.c.\n       Split numarray.c into (numabasic.c, numafunc.c), with\n       constructors and accessors in numabasic.c.  Added a number\n       of histogram, rank value and interpolation functions to numafunc.c.\n       Add rms and rank difference comparison functions (compare.c).\n       Separated orientation and mirror flip detection; fixed the latter\n       (flipdetect.c).\n\n1.43   24 Mar 07\n       New and fixed functions for handling word boxes (classapp.c)\n       More consistent use of L_* flags (e.g., sarray.h, morph.h)\n       Morphology on color images (gray ops on each component) (colormorph.c)\n       New methods for generating sels; we now have five methods in\n       sel1.c and 3 others in selgen.c.  Also a function that\n       displays Sels as an image, for use in documentation (sel1.c)\n       New high-level converters, such as pixConvertTo8(), pixConvertTo32(),\n        pixConvertLossless()   (pixconv.c)\n       Identify regression tests, and rename them as prog/*_reg.c.\n       Complete revision of plotting package (gplot.c)\n       New functions for comparing pix (compare.c)\n       New morph application functions, such as the ability to run a\n       morph sequence separately on selected c.c. in an image, and\n       a fast, quasi-tophat function (morphapp.c)\n       Cleanup and new interfaces to border representations of c.c. (ccbord.c)\n       Page segmentation application (pageseg.c)\n       Better serialization with version control for all major structs.\n       Morphological brick operations with 2-way composite sels (morph.c)\n\n1.42   26 Dec 06\n       New sorting functions, including 2-d sorting, for boxa and pixa,\n       and functions that sort by index (e.g., pixa --> pixa and\n       for 2d, pixa --> pixaa; ditto for boxa).  \n       New accessors for pix dimensions.  A new strtokSafe() to\n       substitute for strtok_r (utils.c).\n       Page flip detection, using both rasterop and dwa morphology\n       (flipdetect.c), with dwa generation (fliphmtgen.c) and testing\n       (prog/fliptest.c).\n       Increased basic sels from 42 to 52 (sel2.c).\n       Better high-level interfaces for binary morphology with\n       brick (separable) sels, both for rasterop (morph.c) and for\n       dwa (morphdwa.c); fully tested for both asymmetric and\n       symmetric b.c. (prog/morphtest3.c).  Faster area mapping\n       reduction for power-of-2 scaling.\n\n1.41   5 Nov 06\n       Simplified morph enums, removing all unused ones (morph.h).\n       Added new high-level interfaces for adaptive mapping (adaptmap.c).\n       New method to extract color content of images (colorcontent.c).\n       New method to generate sels from text strings, and to identify\n       roman text that is not properly oriented (thanks to Adam Langley).\n       Fast grayscale min/max (rank) scale reduction by integer factors.\n       New accessors for box and sel, that should be used when possible.\n       Thresholding grayscale mask by bandpass (grayquant.c).\n       Use of strtok_r() for thread safety.\n\n1.40   15 Oct 06\n       Fixed xtractprotos for cygwin.  Minor fixes and improved documentation\n       (baseline.c, conncomp.c, pix2.c, morphseq.c, pts.c, numarray.c,\n       utils.c, skew.c).  Add ability to quantize an rgb image to a\n       specified colormap (colorquant.c); tested in prog/cmapquanttest.c.\n       Modifications to allow conditional compilation on MS VC++,\n       and to allow I/O calls to be stubbed out (new files: *iostub.c,\n       zlibmemstub.c, pstdint.h, arrayaccess.h.ms60)\n \n1.39   31 Aug 06\n       |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n       NOTE CAREFULLY:  There has been an interface change to make\n       affine, bilinear and projective transforms more general.\n       The implementation has been changed to allow them to handle\n       all image types and to make them faster (esp. with both sampled\n       and interpolated mapping on color images).\n       |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n       Added prog/Makefile.mingw to build executables.  This is still\n       in a relatively raw state.  It is necessary to download\n       gnuwin32 packages for 4 libraries (jpeg, png, zlib, tiff)\n       to link with leptonlib and the main, and I still have not\n       been able to build static executables (they require jpeg2b.dll, etc.).\n\n1.38   8 Aug 06\n       |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n       NOTE CAREFULLY: There has been an interface change to both\n       simplify and generalize the grayscale morphology operations:\n           pixErodeGray(), pixDilateGray(), pixOpenGray(),\n\t   pixCloseGray(), pixTophat() and pixMorphGradient().\n       The prototypes are not changed; old code will compile, but\n       it will be wrong!  The old interface had a size and a type\n       (horizontal, vertical, square).  The new interface takes\n       horizontal and vertical Sel dimensions.\n       |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n       For cross-compilation to make windows programs, you can use\n       src/Makefile.mingw to make a windows version of the library.\n       6x scale-to-gray function donated by Alberto Accomazzi.\n       Interpreter added for sequence of grayscale morphological\n       operations, including the tophat (morphseq.c).\n       Pixacc container added to simplify the interface\n       for accumulator arithmetic using Pix.\n       Removed fmorph.c and fmorphlow.c from the library.  These are\n       very limited and were deprecated in favor of fmorphauto(), which\n       autogens the code from (nearly) any Sel.\n       Fixed some of the gray morphology operations, which had errors\n       on the boundary.  All gray morph ops should now be rigorously\n       OK (graymorph.c).  For testing of graymorph dualities, the \n       the graymorph interpreter, etc., see prog/morphgraytest.c. \n\n1.37   10 Jul 06\n       [After v.36 was released, Jeff Breidenbach built a Debian\n       distribution of Leptonica based on v.36, and you can now get Leptonica\n       as a Debian package.  Use \"apt-cache search leptonica\" to see\n       what is available.]  The libraries are now combined into a single\n       library (liblept.a, liblept.so) and the function prototypes are\n       also in a single file (leptprotos.h).  cextract was found not\n       to work on recent versions of linux that support 64 bit data types,\n       and it is no longer distributed with leptonica.  Instead, I wrote\n       a prototype extractor in leptonica (xtractprotos).  When you\n       'make allprotos', it now uses this program.  The shared libraries\n       now have major and minor numbers corresponding to the version.\n\n1.36   17 Jun 06\n       Line graphics generation (graphics.c) reorganized; separated out pta\n       generation from rendering.  Can now render with alpha blending.\n       Examples of use are given in prog/graphicstest.c.\n       Sort functions for basic geometrical objects now have the option\n       of returning a numa giving the sort order on the original array.\n       The pixa sort can sort with either clones or copies of the pix.\n\n1.35   21 May 06\n       The efficiency of the multipage jbig unsupervised classifier is\n       significantly improved due to a NumaHash struture implemented\n       by Adam Langley.  Functions for computing runlength in 1 bpp\n       images have been added.\n\n1.34   7 May 06\n       Completely rewrote the jbig unsupervised classifier.\n       It now works on multiple pages, and is more accurate in performing\n       visually lossless substitutions.  You can classify by connected\n       components, characters, or words.  The old data structures\n       and interfaces have been removed.  New unpackers from 1 to 2 and\n       1 to 4 bpp, with and without colormaps in the dest.\n\n1.33   18 Mar 06\n       Generalized color snap to have different src and target colors,\n       and to include colormaps (blend.c).  Distribute into root directory\n       that specifies the version number (e.g., 1.33).  Add color\n       space conversion between rgb and hsv.  Re-bundle thresholding\n       code from (binarize*.c, dibitize*.c) to grayquant*.c.\n       pixThreshold8() now also quantizes 8 bpp --> 8 bpp.\n       High-level pixRotate() that optionally expands image sufficiently\n       so that no pixels are lost in any sequence of rotations (rotate.c).\n       Generalize shear to specify color of pixels brought in, including\n       for in-place operation (shear.c, rotateshear.c).  Faster version of\n       color rotation by area mapping, both about center and about UL corner.\n       You can now use the standard color rotator (pixRotateAM) and get\n       nearly the same speed as with the \"Fast\" one.\n\n1.32   4 Feb 06\n       Ability to specify a sequence of binary morphological\n       (& binary reduction/expansion) operations in a single\n       function (morphseq.c).  Fast downscaling combined with conversion\n       from rbg to gray and to binary (scale.c).  Utility for\n       segmenting images by color (colorseg.c).\n\n1.31   7 Jan 06\n       Remove more complicated functions that threshold to 2 bpp, \n       retaining the simplest interface.  Retest all thresholding and\n       dithering.  Add \"ascii\" write of PNM.  Improve graphics writing\n       of lines; generalize to colormaps.  New colorization functions\n       (paintcmap.c, blend.c).\n\n1.30   22 Dec 05\n       Remove most instances of fprintf(stderr, ...), except within\n       DEBUG or encapsulated in error, warning or info macros. \n       As a result, there is no output to stderr if NO_CONSOLE_IO is defined. \n       Adaptive mapping to make bg uniform (adaptmap.c).  A few bug fixes.\n       New PostScript output functions for embedding PS files\n       (prog/converttops).  Generalized some image enhancement functions.\n       New functions for generating hit-miss sels.\n\n1.29   12 Nov 05\n       More flexible blending of two images, with and without colormaps\n       (see blend.c).  Painting colormapped images through masks, etc\n       (see paintcmap.c).  More flexible interface for gamma and\n       contrast enhancement (see enhance.c).\n\n1.28   8 Oct 05\n       Removed all pix colormaps for 1 bpp.  Allow programmatic resetting\n       of binary morphology boundary conditions.  Added (yet) another\n       simple octcube color quantizer.  New colormap operations.\n\n1.27   24 Sep 05\n       Renamed many of the enums and typedefs to avoid namespace\n       collisions.  This includes structs and typedefs for BMP.\n       Interface change to pixClipRectangle(); apologies to everyone\n       whose code is broken by these changes -- I hope it's worth it.\n       Removed colormap.h; simplified all colormap usage, hiding details\n       from all but a few colormap functions.  Am now saving file format\n       in the pix when an image is read, and can by default write\n       out in this format.  Resolution info added for jpeg and png.\n       Added L_INFO* macros and l_info* fctns for printing\n       (e.g., debugging) info.  Suggestions and code kindly\n       supplied by Dave Bryan, who helped solve compatibility issues\n       with MINGW32 (e.g., in timing and directory functions).\n       Added some blending and linear TRC functions.\n       Generalized pixEqual() to include all cases with and without\n       colormaps.  New regression tests in prog: ioformats, equaltest.\n\n1.26   24 Jul 05\n       Generalized affine pointwise to do interpolation as well as\n       sampling.  For both projective and bilinear transforms,\n       implemented using both sampling and interpolation.\n       Added function to remove keystoning by computing the necessary\n       projective transform and doing it.  Also find baselines in text images.\n       Added downscaling using accurate area-mapping over subpixels.\n\n1.25   25 Jun 05\n       Better endian conversion fctns for 2 and 4 byte words.\n       Remove colormaps before converting by thresholds.\n       Added functions to read header parameters for png and tiff.\n\n1.24   5 Jun 05\n       Added image splitting to allow printing in tiles (as several pages).\n       Added new octree quantization function to generate 4 and 8 bpp\n       colormapped output (not dithered).  Fixed bmp resolution.\n       Added new flag for colormap removal (using dest depth based on\n       src colormap).  Added I/O tests (prog/ioformats.c)\n\n1.23   10 Apr 05\n       Added thresholding from 8 bpp to 2 and 4 bpp, allowing specification\n       of both the number of output levels and whether or not a colormap\n       is made.\n\n1.22   27 Mar 05\n       Add pointer queue facility.  To demonstrate it, you can now\n       generate a binary maze using a cellular automaton and find\n       the shortest path between two points in the maze.  Add heap\n       of pointers (keyed on the first field), which is used to\n       implement a priority queue.  This is applied to search for\n       a \"least cost\" path on a grayscale image (a generalization\n       of a binary maze).\n\n1.21   28 Feb 05\n       Read/write of colormaps to file.  For gplot, add a new\n       latex output terminal.  Bring ptrs into 21st century by\n       including stdint.h, and using uintptr_t for the ptr address\n       arithmetic in arrayaccess.*.  This seems to be OK back to\n       RH 7.0, but if you run into trouble with an earlier\n       C compiler, let me know.  Also, use enums for global\n       constants whenever possible, and qualify named constants\n       (e.g., ADD --> ARITH_ADD, HORIZ --> MORPH_HORIZ) to avoid\n       possible interactions with other libraries.\n\n1.20   31 Jan 05\n       Speed up of tiffio and pngio with byte swap generating new pix.\n       In textops.c, ability to split string into paragraphs, \n       in preparation for more general typesetting.\n       Automatic hit-miss Sel generation for pattern matching.\n       Fast downscaling using a lowpass filter and subsampling.\n       Generalization of several grayscale and color operations\n       to work on colormapped images.  Improved scale-to-gray and\n       scaling reduction operations to be antialiased for best results.\n\n1.19   30 Nov 04\n       Additions to fileIO: (1) new jpeg reading options, such as\n       returning warnings and scaled raster; (2) ability to write\n       custom tiff flags.  Better tiling functions.\n       Edge extraction, both with grayscale morphology\n       and clipped convolution filters.  More general painting\n       through a binary mask: pixSetMaskedGeneral().\n       Unpacking from binary to 8, 16 and 32 bpp.  Thresholding\n       and dithering from 8 bpp to 2 bpp (\"dibitization\").  New bitmap\n       font facility, using a single rendered font in a variety of\n       sizes: allows painting the text on an image (binary, gray, RGB).\n       (People have asked for the ability to write text on images).\n\n1.18   25 Aug 04\n       Changed typedefs of built-in types to avoid possible conflicts.\n       Cleaned up and tested all programs in the prog directory.\n       Simplified and fixed the pixSetMasked() and pixCombineMasked()\n       functions.\n\n1.17   31 May 04\n       Implemented distance function for 16 bpp.  We can now generate\n       out 16 bpp PNG.  Simple programs for generating PS from a\n       directory of g4tiff or jpeg images.  Changed implementation of\n       erosion to allow either asymmetric or symmetric boundary conditions.\n       The distinction is described on the binary morphology web page.\n       Allow read/write of multipage TIFF files.  Implemented\n       read/write of PNM files.\n\n1.16   31 Mar 04\n       New depth conversion functions, improved conversion to false color,\n       new contour rendering (onto 1 bpp or onto the src grayscale image),\n       new orthogonal rotations, better interface for doing arithmetic\n       on 2-d arrays using a pix, improved distance function.\n\n1.15   31 Jan 04\n       Fast interpolated color rotation with 4x4 subpixels; has\n       nearly the accuracy of the slower method using 16x16 subpixels.\n       Demonstration of line removal from grayscale sketch in\n       prog/lineremoval.c.  Conversion of grayscale to false color.\n       Fixed shear and rotation functions to handle angle = 0.0 properly.\n       Other small fixes and interface improvements.\n\n1.14   30 Nov 03\n       Small implementation changes to list.c.  Better sorting\n       routines for number arrays (numa), plus sorting for box\n       arrays (boxa) and pix arrays (pixa).  PostScript wrapper\n       for jpeg.  Better handling of colormaps, and a simple\n       function to convert an RGB pix with not more than 256\n       colors to the smallest colormapped pix.  PS output wrappers\n       for JFIF JPEG and TIFF G4 files.  Comments compatible\n       with doxygen for automatic documentation.\n\n1.13   31 Oct 03\n       Cleaned up documentation in src.  Made libraries and test programs\n       ANSI C++ compliant.  Added special cases to rasterops for\n       alignment to word boundaries.  Fixed pngio.c to work with\n       most recent libpng (1.2.5).\n\n1.12   30 Jun 03\n       Implemented border chain representation from a binary image,\n       writes/reads a compressed version, and renders the original\n       image back from the borders.   Also writes outline file out\n       in svg format.  Number arrays (numa) and point arrays (pta)\n       are also extended to 2nd level arrays (numaa, ptaa).\n       Serialized I/O for boxa, pta, and pixa.\n\n1.11   31 May 03\n       Implemented generic list handling, for doubly-linked\n       list cons cells and arbitrary objects.\n\n1.10   14 Apr 03\n       Implemented simple image enhancements in gray and color:\n       gamma correction, contrast enhancement, unsharp masking.\n       Extended smoothing via block convolution to color.\n       Implemented auto-gen'd DWA version of hit-miss transform;\n       the code for generating these hmt routines is very similar to\n       that for DWA auto-gen'd erosion and dilation.\n       \n1.9    28 Feb 03\n       Implemented a safe, expandable byte queue.  As an example of\n       its use, implemented memory-to-memory compression and decompression\n       using zlib.  Generalized PS write to include RGB color.\n       Implemented a method to find image skew.\n\n1.8    31 Jan 03\n       Implemented a simple 1-pass color quantization with dithering,\n       and improved the 2-pass octree color quantization.\n       Documented with an application page, that includes jbig2.\n       Added new general sampling operations and made a table\n       that summarizes the available scaling operations.\n\n1.7    31 Dec 02\n       Added pixHtmlViewer(), a formatter that allows portable viewing of\n       a set of images (like a slide show) in a browser.\n       Implemented better octree color quantization, with variable\n       number of colors, pruning the octree for good color clusters,\n       and fast traversal for pixel assignment to colormap.\n\n1.6    30 Nov 02\n       Generalized shear and shear rotation to arbitrary locations\n       about which the operation is performed.  Implemented in-place\n       translation using pixRasteropIP().  Implemented arbitrary\n       affine transform of image two ways: pointwise and sequential.\n       Added binarization by error diffusion.  Added simple color\n       quantization by octree.\n\n1.5    31 Oct 02\n       Put jpeglib.h in local directory.  This, along with the jmorecfg.h\n       file there prevents compiler warnings about redefined typedefs.\n       Compiled everything with g++ to make strictly ansi C compatible.\n       Added interface gplotFromFile() for simple file-based plotting with \n       gnuplot 3.7.2.   Added functions to convert 2, 4 and 8 bpp\n       color-mapped (i.e., paletted) images to 24 bpp color or\n       8 bpp grayscale.  Added several jbig2 application cores that\n       only require a simple wrapper to make into programs.\n\n1.4    30 Sep 02\n       Added interface to gnuplot 3.7.2 and to x11 display of images. \n       Added new functions with arrays of images for use in applications\n       such as jbig2 encoders, along with a simple jbig2 implementation\n       using either hausdorff or correlation scoring.  Added centroid\n       finder for images.  For accessing image arrays from arrays of\n       image arrays, added a \"new reference\" (NEW_REF) flag, with a\n       ref count attached to the array.  Added power-of-2 binary\n       expansion and reduction.\n\n1.3    30 Jun 02\n       Extended connected components to 8.  Added morphological\n       operations tophat and hdome, along with clipped arithmetic\n       operators on grayscale images.  Fixed memory error in\n       rasteropGeneralLow() that was found using valgrind.\n       Tested most operations with valgrind for memory errors.\n       Replaced integer arrays with number arrays, to include floats.\n       Added arithmetic functions on grayscale images.\n\n1.2    30 May 02\n       Added connected component utility, stack utility, pix arrays,\n       line drawing and seed filling.  Binary reconstruction,\n       both morphological and raster-oriented, are now supported\n       for 4 and 8 connected fills.  Added the distance function\n       on binary images, grayscale reconstruction, and grayscale\n       morphology using the Gil-Werman method.\n\n1.1    30 Apr 02\n       Added orthogonal rotations, binary scaling, PS output,\n       binary reconstruction, integer arrays, structuring element\n       input/output.\n\n1.0    25 Feb 02\n       Initial distribution, with rasterops, binary morphology (two\n       implementations: rasterops and dwa), affine transforms\n       (translation, shear, scaling, rotation), fast convolution,\n       and basic i/o (BMP, PNG and JPEG).\n\n\n\n</pre>\n\n<!-- JS Window Closer -----\n<form>\n<center>\n<input type=\"button\" onclick=\"window.close();\" value=\"Close this window\">\n</center>\n</form>\n----- JS Window Closer -->\n\n</body>\n</html>\n\n"
        }
      ]
    }
  ]
}