{
  "metadata": {
    "timestamp": 1736710200789,
    "page": 907,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RogueMaster/awesome-flipperzero-withModules",
      "stars": 1629,
      "defaultBranch": "rogue_main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 2.015625,
          "content": "[submodule \"PLAYGROUND\"]\n\tpath = PLAYGROUND\n\turl = https://github.com/UberGuidoZ/Flipper.git\n[submodule \"nfc/Amiibo\"]\n\tpath = nfc/Amiibo\n\turl = https://github.com/RogueMaster/FlipperAmiibo\n[submodule \"scripts/dolphin_state\"]\n\tpath = scripts/dolphin_state\n\turl = https://github.com/DroomOne/FlipperScripts\n[submodule \"music_player\"]\n\tpath = music_player\n\turl = https://github.com/neverfa11ing/FlipperMusicRTTTL\n[submodule \"fw/OFW\"]\n\tpath = fw/OFW\n\turl = https://github.com/flipperdevices/flipperzero-firmware\n[submodule \"wifiPenTool\"]\n\tpath = wifiPenTool\n\turl = https://github.com/FroggMaster/ESP32-Wi-Fi-Penetration-Tool\n[submodule \"fw/unleashed\"]\n\tpath = fw/unleashed\n\turl = https://github.com/Eng1n33r/flipperzero-firmware.git\n[submodule \"fw/RogueMasterWApps\"]\n\tpath = fw/RogueMasterWApps\n\turl = https://github.com/RogueMaster/flipperzero-firmware-wPlugins.git\n[submodule \"scripts/AmiboConverterV2\"]\n\tpath = scripts/AmiboConverterV2\n\turl = https://github.com/Lanjelin/AmiiboConverter.git\n[submodule \"fw/squach\"]\n\tpath = fw/squach\n\turl = https://github.com/skizzophrenic/SquachWare-CFW.git\n[submodule \"scripts/FBT-AARCH64\"]\n\tpath = scripts/FBT-AARCH64\n\turl = https://github.com/qqmajikpp/FBT-AARCH64.git\n[submodule \"scripts/Logi-Downgrade-for-NRF24\"]\n\tpath = scripts/Logi-Downgrade-for-NRF24\n\turl = https://github.com/qqmajikpp/Logi-Downgrade-for-NRF24.git\n[submodule \"badusb/FlipperShits\"]\n\tpath = badusb/FlipperShits\n\turl = https://github.com/aleff-github/my-flipper-shits.git\n[submodule \"badusb/CharlesTheGreat77\"]\n\tpath = badusb/CharlesTheGreat77\n\turl = https://github.com/CharlesTheGreat77/BADUSB.git\n[submodule \"fw/OFW-GOOD-FAPS\"]\n\tpath = fw/OFW-GOOD-FAPS\n\turl = https://github.com/flipperdevices/flipperzero-good-faps.git\n[submodule \"fw/OFW-APP-CATALOG\"]\n\tpath = fw/OFW-APP-CATALOG\n\turl = https://github.com/flipperdevices/flipper-application-catalog.git\n[submodule \"fw/UL-PLUGINS\"]\n\tpath = fw/UL-PLUGINS\n\turl = https://github.com/xMasterX/all-the-plugins.git\n[submodule \"fw/mntm\"]\n\tpath = fw/mntm\n\turl = https://github.com/Next-Flip/Momentum-Firmware.git\n"
        },
        {
          "name": "FAQ.md",
          "type": "blob",
          "size": 27.849609375,
          "content": "<a id=\"top\" href=\"https://github.com/djsime1/awesome-flipperzero\">\n  <img src=\"https://user-images.githubusercontent.com/8518150/179464273-7927420c-b60a-48ab-9eb9-d69b563c0a0b.png\" align=\"center\" alt=\"Flipper Zero FAQ\" title=\"Flipper Zero FAQ\">\n</a>\n\n<table align=\"center\">\n  <tr><th colspan=\"8\">Table of Contents</th></tr>\n  <tr>\n    <td><a href=\"#meta-\">Meta</a></td>\n    <td><a href=\"#general-\">General</a></td>\n    <td><a href=\"#sub-ghz-\">Sub-GHz</a></td>\n    <td><a href=\"#nfc--rfid-\">NFC & RFID</a></td>\n    <td><a href=\"#infrared-\">Infrared</a></td>\n    <td><a href=\"#badusb-\">BadUSB</a></td>\n    <td><a href=\"#ibutton-\">iButton</a></td>\n    <td><a href=\"#wifi-board-\">WiFi board</a></td>\n  </tr>\n<table>\n\n## Preamble [🔝](#top)\n- *This is a community FAQ. Please consider also reading the [Official docs](https://docs.flipperzero.one/).*\n- *It is written with information from the latest dev firmware, you may have to wait for a firmware (pre)release before some of the questions/answers become relevant.*\n- *This FAQ is still being worked on, and contributions are welcome.*\n- *If your question isn't answered here, **SEARCH** the [Discord](https://flipperzero.one/discord) and check pinned messages before asking there.*\n\n\n\n## Meta [🔝](#top)\n\n### What is Awesome Flipper Zero?\n> It's an [Awesome List](https://github.com/sindresorhus/awesome/blob/main/awesome.md) that I ([djsime1](https://dj.je)) created shortly after receiving Lurat, my lovely dolphin sidekick.\n\n### What is an Awesome List?\n> An [Awesome List](https://github.com/sindresorhus/awesome/blob/main/awesome.md) is a collection of links and resources related to some project or topic. Think of it like a central curated hub to discover interesting stuff.\n\n\n### How can I contribute to this repo?\n> Perferably, open a [Pull Request](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request) with your changes, or use one of the methods in the next question to contact me.\n\n### I found a mistake, broken link, or something else. What should I do?\n> Open a [new discussion](https://github.com/djsime1/awesome-flipperzero/discussions/new) on this repo, or contact me via one of the methods listed on [this page](https://dj.je/pages/contact).\n\n### Why are there so many unmerged pull requests?\n> If there's multiple small pull requests open at the same time, I'll often merge them together as a single update. Due to the way GitHub works, I'm unable to mark them as merged when I do this. To compensate, I include the contributors as co-authors on the commit, and mention the Pull Request ID's as part of the update message.\n\n### This is really cool! Is there a way I can donate to you?\n. You can find my [PATREON](https://www.patreon.com/RogueMaster) to donate\n\n\n## General [🔝](#top)\n\n### What MicroSD Card should I use?\n> - It should be a reputable brand (Like SanDisk, Sony, etc.) because often cheaper cards don't fully support the communication protocol Flipper uses. \n> - The card should have a capacity between 4 and 64 GB, but an 8 GB card is MORE than enough.\n> - After inserting the card, use the Flipper's setting menu to format (clear) and test the card.\n> - Before ejecting the card, unmount it via the Settings menu to ensure data isn't corrupted.\n> - Note: You might need a paperclip or similar object to push the SD Card in and out of the device.\n> - Read the [official documentation](https://docs.flipperzero.one/basics/sd-card) for more information!\n\n### How do I install databases and dumps?\n> Make sure there's a working MicroSD Card in the device first by following the steps above.\n> Once you download the dump, you can use qFlipper or the Flipper mobile app to transfer them. If you're transfering a large file or many at once, you can also eject the SD Card from Flipper and insert it in your computer for faster transfers.\n> - In qFlipper: Plug your device in, go to the file browser tab, navigate into the SD Card, and drop files in their corresponding folders (The folder names are similar to the file extensions).\n> - For mobile apps: Make sure you're connected via Bluetooth, save the file to the app's archive, and synchronize it back to the device.\n> - For plugging the SD Card into your PC, drop files in their corresponding folders (The folder names are similar to the file extensions).\n\n### How do I install applications and plugins?\n> Assuming the application has been packaged as a `.fap` file, installing it is as easy as placing it inside the `apps` directory on your Flipper's SD card. You can launch the app from the `Applications` app. If the app hasn't been compiled into a `.fap`, either *kindly* ask the author or compile it yourself.\n\n### How do I install custom firmwares?\n> Make sure there's a working MicroSD Card in your Flipper and head over to [RM Custom Firmware](https://github.com/RogueMaster/flipperzero-firmware-wPlugins/releases/latest). Make sure qFlipper is closed. Use the Web Installer link and you will be all set. Alternatively, look for releases and find the `.dfu` file or update package (typically a `.tar`, `.tar.gz`, or `.zip` file, it always contains a file named `update.fuf`).\n> - If you only have a `.dfu`, it must be installed using the \"Install from file\" option in qFlipper. Select the file and begin the installation.\n> - If you have an update package, you can either install it with qFlipper, or install it manually through the Micro SD card by following the steps below.\n> - To manually install an update package, extract and transfer the folder (not the original archive file) to the `update` folder on the SD Card (create the folder if it doesn't already exist). Once transferred, go to the desktop/idle screen of the Flipper, press down to access the file browser, then left to view all folders. From there, open the `update` folder (typically at the bottom of the list) and find the folder you just transferred. Lastly, select the file named `update` and choose \"Run in app\" to install the firmware.\n> \n> If there was no pre-compiled update file/package, you'll have to build the firmware yourself. See the next question for details.\n> For more information, read the [official documentation](https://docs.flipperzero.one/basics/firmware-update).\n\n### Where and when are developer Q&A sessions held?\n> Question and Answer session are held every week on Saturday, at 01:00 and 13:00 (GMT)\n> \n> | Time zone      | Side A  |  Side B |\n> | :------------: | :-----: | :-----: |\n> | GMT/UTC        | 01:00   | 13:00   |\n> | Pacific (PDT)  | 6:00 PM | 6:00 AM |\n> | Mountain (MDT) | 7:00 PM | 7:00 AM |\n> | Central (CDT)  | 8:00 PM | 8:00 AM |\n> | Eastern (EDT)  | 9:00 PM | 9:00 AM |\n> | China Standard | 09:00   | 21:00   |\n> | India Standard | 06:30   | 18:30   |\n\n### Are there archives of past Q&A sessions?\n> Archival is a community effort, so only some are available.\n> [https://github.com/flipperdevices/flipper-questions-and-answers](https://github.com/flipperdevices/flipper-questions-and-answers)\n\n### How do I write/compile my own applications/plugins/firmware/assets?\n<blockquote>\n  <em>(The following is a summary of the <a href=\"https://github.com/flipperdevices/flipperzero-firmware/blob/dev/documentation/fbt.md\">official FBT docs</a>.)</em><br>\n  Since the introduction of <a href=\"https://github.com/flipperdevices/flipperzero-firmware/blob/dev/documentation/fbt.md\">Flipper Build Tool (FBT)</a>, this has become very easy! You should have a basic understanding of working on a command line before proceeding. The only prerequisite install is <a href=\"https://git-scm.com/downloads\">Git</a>. You should also have an IDE installed, <a href=\"https://code.visualstudio.com/\">VSCode</a> is recommended since the <a href=\"https://github.com/flipperdevices/flipperzero-firmware\">firmware repo</a> has <a href=\"https://github.com/flipperdevices/flipperzero-firmware/blob/dev/documentation/fbt.md#vscode-integration\">config files</a> for it.\n  <details>\n    <summary>Expand me for the rest of the steps.</summary>\n    <em>(WIP, sorry to curb your enthusiasm.)</em>\n  </details>\n</blockquote>\n  \n### Can I make my own Flipper instead of buying one?\n> Probably not. While the firmware and schematics are mostly public, actually sourcing the components is extremely difficult. Multiple core pieces, such as the screen, were specifically produced to be used in Flipper manufacturing.\n  \n### How do I get a black-shell Flipper?\n> This is no longer possible*, they were Kickstarter-backer exclusives.\n> (*No longer possible unless you're willing to shill out hundreds of dollars for one on eBay.)\n  \n### How do I invert the screen/change backlight color/change case cover, etc.\n> These are all hardware mods, generally inaccessible to the average user. Look up/ask around on how to do them if you're really interested, [r/flipperzero](https://old.reddit.com/r/flipperzero/) is a good place to start.\n\n### Will there be future hardware revisions?\n> Technically speaking, there's going to be a **very minor** hardware revision in the near future. Functionally speaking, it will be identical to every other Flipper Zero already sold. The revision only replaces a few internal components and doesn't offer any new features compared to existing devices, so don't bother waiting to buy it.\n> Besides that, there are concepts for a [Flipper One](https://flipperzero.one/one), but without a timeline for release.\n\n### What is Dummy Mode?\n> Currently, it only allows the Snake game to be opened when active. In the future, it will hide every app except games, in case your device is ever inspected or seized.\n\n### My device is frozen, how do I reboot/fix it?\n> - To reboot the device: hold the BACK and LEFT buttons, then release simultaneously. If that didn't work, *disconnect the USB cable* and hold BACK for 30 seconds. This will preform a normal reboot.\n> - To enter DFU/Recovery mode: Hold BACK and LEFT, then release BACK while still holding LEFT after a few seconds. When the screen lights up, you can release LEFT.\n> - To exit DFU/Recovery mode: Follow steps for a normal reboot under the first bullet point.\n> \n> If nothing works or the device is completely bricked, first make sure it's charged by plugging it in for 15-30 minutes. As a final resort, if you can't get it to turn on after charging, *unplug the USB cable* and hold OK plus BACK for 30 seconds. **There will be no indication**, but the device is now in recovery mode. Plug it in to a PC and use qFlipper to recover the firmware.\n> Read the official docs for [Control](https://docs.flipperzero.one/basics/control), [Reboot](https://docs.flipperzero.one/basics/reboot), and [Firmware recovery](https://docs.flipperzero.one/basics/firmware-update/firmware-recovery).\n\n### How do I access the CLI/Logs?\n<blockquote>\n  To access the Serial CLI, click one of the following based on your platform.\n  <details>\n    <summary>Desktop web browser*</summary>\n    <em>*Chromium browsers only, such as: Google Chrome, Microsoft Edge, Opera/Opera GX, Brave, and Vivaldi.</em>\n    <ul>\n      <li>Connect your Flipper via USB.</li>\n      <li>Ensure qFlipper and any other serial terminals are closed.</li>\n      <li>Open <a href=\"https://my.flipp.dev/\">my.flipp.dev</a> in one of the aforementioned browsers.</li>\n      <li>Click <kbd>CONNECT</kbd> and select \"USB Serial Device\" from the list.</li>\n      <li>Wait until you can see your device details on screen.</li>\n      <li>Select the 💻 CLI item from the left sidebar.</li>\n      <li><strong>Done!</strong></li>\n    </ul>\n  </details>\n  <details>\n    <summary>Windows</summary>\n    <ul>\n      <li>Install <a href=\"https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html\">PuTTY</a> if it isn't already.</li>\n      <li>Connect your Flipper via USB.</li>\n      <li>Open qFlipper and look for the COM port next to the Flipper's name. <em>(Should say COM followed by a number, like COM1)</em></li>\n      <li>Take note of the COM port number.</li>\n      <li><strong>CLOSE qFlipper</strong>, otherwise the next steps won't work.</li>\n      <li>Open PuTTY and ensure you're on the Session screen.</li>\n      <li>Select \"Serial\" under connection type.</li>\n      <li>Set serial line to the COM port. <em>(Just COM followed by the number, like COM1)</em></li>\n      <li>Set speed to <code>115200</code></li>\n      <li><em>Optional: Save the session settings for easy connection later.</em></li>\n      <li>Finally, click <kbd>Open</kbd> to enter the CLI.</li>\n      <li><strong>Done!</strong></li>\n      <li>If you get an \"Access Denied\" error, make sure qFlipper isn't running!</li>\n    </ul>\n  </details>\n  <details>\n    <summary>MacOS/Linux</summary>\n    <em>Note: I'm a filthy Windows user without any way to verify this procedure. Let me know if it's wrong!</em>\n    <ul>\n      <li>Install <a href=\"https://www.gnu.org/software/screen/\">GNU Screen</a> if it isn't already.</li>\n      <li>Connect your Flipper via USB.</li>\n      <li>Open qFlipper and look for the device path next to the Flipper's name. <em>(Starts with /dev/tty)</em></li>\n      <li><em>Alternatively: Run <code>ls /dev/tty.*</code> in a terminal.</em></li>\n      <li>Take note of the full device path.</li>\n      <li><strong>CLOSE qFlipper</strong>, otherwise the next steps won't work.</li>\n      <li>Open a terminal.</li>\n      <li>Run <code>screen PATH 115200</code>, replacing PATH with the device path from earlier.</li>\n      <li><strong>Done!</strong></li>\n    </ul>\n  </details>\n  <details>\n    <summary>Android</summary>\n    <ul>\n      <li>Install <a href=\"https://play.google.com/store/apps/details?id=de.kai_morich.serial_usb_terminal\">Serial USB Terminal</a> if it isn't already.</li>\n      <li>Open the app and go to the Connections screen in the hamburger menu <em>(3 bars icon)</em></li>\n      <li>Connect your Flipper via USB.</li>\n      <li>Click the refresh icon if it doesn't automatically show up.</li>\n      <li>Allow Serial USB Terminal to access Flipper if prompted.</li>\n      <li>If it doesn't automatically connect, click the connect icon in the upper right. <em>(2 plugs icon)</em></li>\n      <li><strong>Done!</strong></li>\n      <li><em>Note: To exit log mode, you'll have to disconnect and reconnect using the icon.</em></li>\n    </ul>\n  </details>\n  <details>\n    <summary>iPhone</summary>\n    Unfortunately, iOS is incapable of accessing a serial terminal over USB; try one of the other methods.\n  </details>\n  On the Flipper, open the settings, go to System, and set Log Level to Debug. <em>(You can keep Debug set to off unless someone asks you to turn it on)</em>\n  Once you have the CLI open, type <code>log</code> and press enter to start watching logs. Press <code>Ctrl-C</code> or <code>Cmd-C</code> to exit log mode.\n</blockquote>\n\n### How can I tell if I'm running the Iceman edition firmware?\n<blockquote>\n  From the idle screen, press right to open your Flipper's passport.\n  Check for the Iceman logo on the left, like in this screenshot:\n  <details>\n    <summary>(Click to reveal screenshot)</summary>\n    <img src=\"https://user-images.githubusercontent.com/8518150/203851157-e0ce2065-dd55-4e37-a5aa-5b07ed62e872.png\" alt=\"Iceman firmware screenshot\">\n  </details>\n</blockquote>\n\n\n\n## Sub-GHz [🔝](#top)\n\n### How do I hack my neighbors garage or unlock some random persons car?!?\n> Short answer: You don't. That's illegal, and NOT what Flipper was designed for.\n\n### What does \"This frequency can only be used for RX in your region\" mean?\n> Due to legal regulations, Flipper is not allowed to transmit on certain frequencies depending on your device's provisioned location.\n> Provisioning occurs whenever you update your firmware via qFlipper or the mobile app and is based on your rough location.\n\n### How do I find the frequency of a device/transponder?\n> If it's a commonly used frequency, bring the device *really close* to the Flipper and use the Frequency analyzer.\n> If that didn't work, check for the device's FCC ID. It's legally required to be somewhere on the device if it's sold in the US.\n> Then, look up that ID on [FCC ID.io](https://fccid.io). \n\n### I can't tune Flipper to capture a specific frequency.\n> You'll need to edit the `setting_user` and `setting_frequency_analyzer_user` to change the frequencies available for selection in the app. The files are located in `subghz/assets` on the SD card.\n> Note that this won't magically unlock those frequencies, you're still bound by the device's limitations.\n\n### I captured a garage/car/etc. signal, but it doesn't work when I replay it.\n> Unless the item of interest is extremely old, it probably uses rolling codes. Read more below.\n\n### What is a rolling code?\n> Think of it like this: Imagine your garage door was programmed to open whenever it received the code \"1234\" from a transponder.\n> This would be a static code, where a replay attack (Read RAW) would be able to open the garage.\n> Since replay attacks are so easy, most devices will shuffle the code after each use.\n> So the first time you open your garage, the transponder sends \"1234\" and the second time it sends \"5678.\"\n> Rolling codes aren't that simple, but you get the gist.\n\n### I replayed a rolling code and now my original keyfob/transponder doesn't work.\n> You'll have to re-sync your old device manually, since it's now lagging behind on the rolling code.\n\n### What is a Debruin/Brute force code?\n> A brute force code tries every possible code for a specific bit length, however this is inefficient.\n> Example: 0001, 0002, 0003, 0004 ... 9998, 9999.\n> Debruin sequences are more efficient by merging multiple codes together.\n> Example: 365, 136, and 650 can all be found in 13650 by looking at groups of 3 digits individually.\n\n### Can I attach a more powerful antenna?\n> Yes and no. You can't just attach any antenna directly via the GPIO pins, however you could use a separate processor on a protoboard and control it from Flipper, assuming you write your own code to do that.\n> For example, you could write your own code on a NRF24 and accompanying Flipper app to control it over GPIO. \n\n\n\n## NFC & RFID [🔝](#top)\n\n### Feature/Compatability table\n\n| Card name/type    | Read | Write | Save | Emulate | Notes                             |\n| :---------------- | :--: | :---: | :--: | :-----: | :-------------------------------- |\n| Mifare Classic    | ✅   | ✅    | ✅   | ✅      | Emulation can be a hit or miss    |\n| Mifare DESFire    | ✅   |       |      |         | Can read public files             |\n| Mifare Ultralight | ✅   |       | ✅   | ✅      | Unlock tags with various methods  |\n| NTAG-21X          | ✅   |       | ✅   | ✅      | Very similar to Mifare Ultralight |\n| EMV Cards         |      |       | ❌   | ❌      | Read of public data was removed because it was misunderstood.  Will come back as community app |\n| NFC-B             |      |       |      | ❌      | No hardware support for emulation |\n| iClass/PicoPass   | ✅   | ✅    | ✅   |         |                                   |\n| EM4100/EM4102     | ✅   | ❌    | ✅   | ✅      |                                   |\n| H10301            | ✅   | ❌    | ✅   | ✅      |                                   |\n| Indala            | ✅   | ❌    | ✅   | ✅      |  Some lengths not supported  |\n| T5577             | ✅   | ✅    | ✅   | ✅      |                                   |\n| EM4305            | ✅   |       | ✅   | ✅      |                                   |\n| Paxton Net2       | ❌   | ❌    | ❌   | ❌      | No support for Hitag2             |\n| Legic Prime       | ❌   | ❌    | ❌   | ❌      | Proprietary protocol              |\n\n***Key:*** *Check = Already implimented as of latest official firmware. No mark = Could be implemented in the future. Cross mark = Unlikely to ever be implemented or impossible.*\n\n### How do I identify which type of card/tag I have?\n> To determine the protocol (NFC, RFID, or iClass/PicoPass) you'll need to attempt reading in each corresponding app. If nothing works, check the tag/card for any markings or indications. As a last resort, take a picture of the card/fob and the reader and ask in the [Flipper Discord server](https://flipperzero.one/discord).\n\n### How do I identify which type of NFC tag I have?\n> Run the \"Read card\" action in the NFC app. Only NFC-A type tags are supported (Mifare/NTAG/Some EMV).\n> Once successfully read, the tag's type is displayed in bold at the top of the screen.\n\n### Which NFC tags can I write?\n> Currently, Mifare Classic's are the only NFC card that can be written to.\n> More will be added in the future with firmware updates.\n\n### I was told a Mifare Ultralight/NTAG tag has password-protected sectors. What does that mean?\n> Either the read was interrupted, or the tag is actually password protected.\n> First, try reading the tag again but make sure it stays on the back of the device until the info screen pops up.\n> If you're still seeing the warning, Flipper can unlock *legally distinct NFC-enabled figurines that are pronounced like \"Ameebo\"* and Xaomi air filter tags, but be warned that there's a risk of **bricking** your tag if you use the wrong password too many times.\n\n### Why does it take so long to read a Mifare Classic?\n> Mifare classics are split up into sectors, these sectors are protected by two keys. To read a Mifare Classic, Flipper uses a dictionary attack, which takes a big list currently comprised of 1241 common keys, and checks them individually against each sector on the card. If you know the keys, they can be manually added to the User Dictionary under the \"Extra Actions\" menu.\n\n### What does it mean when no sectors could be read on a Mifare Classic?\n> The data on Mifare Classic cards is split up into sectors, and each sector is protected by two keys.\n> If no sectors were read, then Flipper's dictionary attack has failed to find any valid keys.\n> If you know the keys, you can manually input them under the \"Extra Actions\" menu of the NFC app. Otherwise, try attacking the reader with mfkey32v2 as described a few questions down.\n\n### What does it mean when some but not all sectors could be read on a Mifare Classic?\n> The data on Mifare Classic cards is split up into sectors, and each sector is protected by two keys.\n> The read wasn't successful, but it didn't fail either. Some of the card's data was read and saved, but not all.\n> Even if not all sectors were read, you should inspect the dump with the mobile app to see if the missing data is necessary or not. In a few rare cases, semi-read cards can be emulated in place of the original without issue.\n> If you still need the rest of the keys, read the next question.\n\n### How to I get Mifare Classic keys from a reader with [mfkey32v2](https://github.com/equipter/mfkey32v2)?\n> (WIP, Note to self: https://regex101.com/r/iXmE2N/2)\n\n### Why isn't Mifare Classic emulation working?\n> Flipper emulates Mifare Classics according to official specification docs (at 13.56 mhz), however certain card readers operate at slightly different frequencies (such as 13.50 mhz). Since Flipper is unable to detect the frequency (like a real card does), it also can't correct for these minor errors.\n> As a result, data transmission doesn't always occur when the reader expects it, and thus emulation is imperfect.\n> There are a few theoretical ways to fix this with software, but the best option would require a new hardware revision.\n\n### Why can't I save/emulate Mifare DESFire?\n> DESFire is a very complicated and much more secure chipset. There are no known attacks against it yet.\n\n### What are the .shd files in the NFC directory?\n> These are shadow files, and they're created whenever an emulated tag is written to. \n> They store a copy of the original file with whatever was written. This way, the original file remains untouched.\n\n### How do I edit the data in a saved tag?\n> You'll need to use a NFC-enabled smartphone with an app that can write tags. One of the easiest to use apps is called NFC Tools, available for both [Android](https://play.google.com/store/apps/details?id=com.wakdev.wdnfc) and [iOS](https://apps.apple.com/us/app/nfc-tools/id1252962749). Due to Mifare Classic emulation quirks, you can only edit the data of saved NTAG and Mifare Ultralight tags. Create an empty NTAG216 with the \"Add Manually\" action in the NFC app if you don't have one already. Save that tag, then open it from the list. Once you start emulating the tag, you can use the NFC Tools smartphone app to write information on to the emulated tag. This is saved to a .shd file with the same name as the emulated tag. If you need a quick way to generate a tag containing a URL, you can use [Flipper Maker's NFC Creator tool](https://flippermaker.github.io/) online.\n\n### Why doesn't my bank card work when I emulate it?\n> EMV Credit/Debit cards are mostly encrypted. The information Flipper reads is the unencrypted portion of the card. This alone is not enough to emulate and complete a transaction. It is impossible to read the encrypted parts.\n\n### Is there any way to save then emulate a bank card to authorize transactions?\n> No, as explained in the previous question.\n\n### Why does the NFC feature table say bank cards can be read?\n> Most NFC-enabled bank cards expose their card number unencrypted. The expiration date, CVV, and ZIP code are not revealed.\n> The card number alone is not enough to create a transaction, thus there's no reason to add a save option.\n\n### Can Flipper emulate a payment terminal and authorize transactions?\n> No. Are you starting to see a pattern here?\n\n### Where is the \"USB/LibNFC NFC Reader\" feature mentioned in the [September blog post](https://blog.flipperzero.one/september-progress/)?\n> This was scrapped due to timing issues, more details in [this GitHub issue](https://github.com/flipperdevices/flipperzero-firmware/issues/1173#issuecomment-1127728562).\n\n### Where can I learn more about NFC and RFID technology?\n> - Introduction to both Low Frequency and High Frequency: https://blog.flipperzero.one/rfid/\n> - Types of NFC https://www.rfwireless-world.com/Tutorials/NFC-Type1-Tag-vs-NFC-Type2-Tag-vs-NFC-Type3-Tag-NFC-Type4-Tag-Types.html\n> - Mifare Classic: https://learn.adafruit.com/adafruit-pn532-rfid-nfc/mifare\n> - The Mifare Family: https://en.wikipedia.org/wiki/MIFARE\n> - Datasheets: http://www.proxmark.org/files/Documents/\n> - Common RFID Standards and protocols: https://www.asiarfid.com/common-rfid-standards-and-protocols.html\n> - RFID Standards: ISO, IEC, EPCglobal: https://www.electronics-notes.com/articles/connectivity/rfid-radio-frequency-identification/standards-iec-iso-epcglobal.php\n\n## Infrared [🔝](#top)\n\n### How do I add more devices to the \"Universal Remotes\" menu?\n> While it isn't possible to add new items under the universal menu, there exist plenty of repositories containing many dumps of IR remotes. The most popular is [Flipper-IRDB](https://github.com/logickworkshop/Flipper-IRDB).\n> (Note: When downloading, it's *highly recommended* to unmount the SD Card from your Flipper and directly plug it in to your computer.) If you only need a remote for one device, you can use [Flipper Maker's IR Device tool](https://flippermaker.github.io/) to create and transfer it on the go.\n\n### The universal TV remote doesn't work besides the power button.\n> The stock universal tv remote database mostly contains power codes, and very few of everything else. This file (Located at `infrared/assets/tv.ir` on the SD Card) be manually replaced with one containing extra codes for all buttons. To do so, download [this file](https://raw.githubusercontent.com/UberGuidoZ/Flipper/main/Infrared/tv.ir) and use qFlipper to transfer it into the path from the previous sentence.\n\n### What are CSV/Pronto/IR Plus codes?\n> All three are different formats of infrared databases. They are not natively compatible with Flipper, but repositories exist that hold converted and compatible versions, such as [Flipper-IRDB](https://github.com/logickworkshop/Flipper-IRDB).\n\n\n\n## BadUSB [🔝](#top)\n\n### I'm on a Non-US QWERTY keyboard, how do I make scripts work?\n> Until a solution is put into the firmware, your best choice is trying one of the following converters:\n> - [http://helppox.com/badusbconvert.html](http://helppox.com/badusbconvert.html)\n> - [https://flippermaker.github.io/](https://flippermaker.github.io/) (BadUSB String To Alt Code)\n\n\n\n## iButton [🔝](#top)\n> *(WIP)*\n\n\n\n## WiFi board [🔝](#top)\n> *(WIP)*\n"
        },
        {
          "name": "Firmwares.md",
          "type": "blob",
          "size": 9.5615234375,
          "content": "<h1>Flipper Zero firmware differences</h1>\n<h3>\n    <code>::</code> Last updated April 25, 2024. <code>::</code>\n</h3>\n<p>This document will <em>(hopefully)</em> maintain a list of differences between various forks of the <a\n    href=\"#official\">Flipper Zero firmware</a>. <br>If I had a dollar for every time I&#39;ve seen this question asked,\n  I wouldn&#39;t be in college debt. ¯\\_(ツ)_/¯</p>\n    <table><tr>\n      <td>\n        <strong>Jump to:</strong>\n      </td>\n      <td><a href=\"#plugins\">RogueMaster</a></td>\n      <td><a href=\"#unleashed\">Unleashed</a></td>\n      <td><a href=\"#Momentum\">Momentum</a></td>\n      <td><a href=\"#official\">Official</a></td>\n      <td><a href=\"#Xtreme\">Xtreme</a></td>\n      <td><a href=\"#Dexv\">Xvirus</a></td>\n      <td><a href=\"#Squachware\">Squachware</a></td>\n      <td><a href=\"#summary\">Summary (TL;DR)</a></td>\n    </tr></table>\n\n<h2 id=\"plugins\">RogueMaster<kbd>\n    <a href=\"https://github.com/RogueMaster/flipperzero-firmware-wPlugins\">RogueMaster/flipperzero-firmware-wPlugins</a>\n  </kbd>\n</h2>\n<ul>\n  <li>Remains the best and most updated firmware in the community</li>\n  <li>Built off Unleashed as the base firmware (which is a fork of Official dev firmware.)</li>\n  <li>First to allow for rename through Name Changer app.</li>\n  <li>First to allow for removal of Sub-GHz regional transmission restrictions through Extend Range app.</li>\n  <li>Passport fully customizable</li>\n  <li>Removes Sub-GHz regional transmission restrictions after changes to <em>extend_range.txt</em> file.</li>\n  <li>Allows Sub-GHz extended frequency range (i.e. restaurant pagers) through <em>extend_range.txt</em> file.</li>\n  <li>Has Sub-GHz protocols and all the other changes taken from Unleashed FW (see <a href=\"#unleashed\">changes</a>).</li>\n  <li>Adds extra custom assets <em>(Mifare classic dict, example files, fun files, etc)</em>.</li>\n  <li>Includes some PRs from Unleashed and Official firmware that are not yet merged <em>(bleeding edge)</em>.</li>\n  <li>Includes a number of games, some experimental, as well as a real \"Games Only Mode\".</li>\n  <li>Includes an enhanced new \"Dolphin Level\" system.</li>\n  <li>Has added most known community tweaks, plugins & games</li>\n  <li>Also includes a number of other small tweaks and changes.</li>\n  <ul><li>More details and full list in their <a href=\"https://github.com/RogueMaster/flipperzero-firmware-wPlugins#readme\">README</a>.</li></ul>\n\n</ul>\n<h2 id=\"unleashed\">\n    Unleashed\n    <kbd>\n        <a href=\"https://github.com/DarkFlippers/unleashed-firmware\">DarkFlippers/unleashed-firmware</a>\n    </kbd>\n</h2>\n<ul>\n    <li>Somewhat active development and Discord community.</li>\n    <li>Removes Sub-GHz regional transmission restrictions by default.</li>\n    <li>Allows Sub-GHz extended frequency range (i.e. restaurant pagers) through <em>dangerous_settings</em> file.</li>\n    <li>Adds extra Sub-GHz frequencies by default through Official <em>setting_user</em> file.</li>\n    <li>Adds extra Mifare classic keys to included dict file and leaves user file untouched.</li>\n    <li>Can be used to capture and send dynamic encrypted protocols/rolling codes. <em>(Modern garage doors, etc.)</em>\n    </li>\n    <li>Encrypted Sub-GHz signals and codes can be added manually.</li>\n    <li>Current modified and new Sub-GHz protocols list <a\n            href=\"https://github.com/DarkFlippers/unleashed-firmware#current-modified-and-new-subghz-protocols-list\">can\n            be found here</a>.</li>\n    <li>Comes with extra apps and plugins from the general community through SD Application loader (FAP files).\n        <ul>\n            <li>More details and full list of changes can be found in their <a\n                    href=\"https://github.com/DarkFlippers/unleashed-firmware#readme\">README</a>.</li>\n        </ul>\n</ul>\n  \n<h2 id=\"Momentum\">\n    Momentum\n    <kbd>\n        <a href=\"https://github.com/Next-Flip/Momentum-Firmware\">Next-Flip/Momentum-Firmware</a>\n    </kbd>\n</h2>\n<ul>\n    <li>Xtreme but without the NSFW BS, a direct continuation of the Xtreme firmware.</li>\n    <li>Adds custom UI and custom Main Menu themes, and asset packs (icons, animations)</li>\n    <li>Removes Sub-GHz regional transmission restrictions by default.</li>\n    <li>Allows Sub-GHz extended frequency range (i.e. restaurant pagers) through Momentum Settings App.</li>\n    <li>Allows changing Flipper's name via Momentum Settings App</li>\n    <li>Has Sub-GHz protocols and most of the other changes taken from Unleashed FW (see <a href=\"#unleashed\">changes</a>).</li>\n    <li>Adds extra custom assets <em>(Mifare classic dict, more animations (installed separately), example files, etc)</em>.</li>\n    <li>Includes an enhanced/improved \"Dolphin Level\" system similar to RogueMaster.</li>\n    <li>Includes extra apps and plugins from the general community through SD Application loader (FAP files).</li>\n    <li>Also includes a number of other small tweaks, changes, and stability fixes.</li>\n</ul>\n\n<h2 id=\"official\">Official<kbd>\n    <a href=\"https://github.com/flipperdevices/flipperzero-firmware\">flipperdevices/flipperzero-firmware</a>\n  </kbd>\n</h2>\n<ul>\n  <li>Has region-locked Sub-GHz transmission because of legal limitations.</li>\n  <li>Has no ability to save and send rolling codes (dynamic encrypted) in Sub-GHz, only shows them in captured list.\n  </li>\n  <li>Factory-set device name that shows everywhere (Bluetooth broadcast, USB connection, etc) that cannot be changed.</li>\n    <li><em>The Flipper team has a list of device names with their corresponding production information <a href=\"https://discord.com/channels/740930220399525928/765282833744265246/971881286543224852\">(No shipping address)</a> so they can assist you easier in case of an RMA.</em></li>\n  </ul>\n<h1 id=\"official\">Outdated Below\n  </kbd>\n</h1>\n<h2 id=\"Xtreme\">\n    Xtreme\n    <kbd>\n        <a href=\"https://github.com/Flipper-XFW/Xtreme-Firmware\">Flipper-XFW/Xtreme-Firmware</a>\n    </kbd>\n</h2>\n<ul>\n    <li>Built from RogueMaster originally then converted to fork of <a href=\"#unleashed\">Unleashed</a> + <a href=\"#official\">Official</a> FW for future development.</li>\n    <li>Adds custom UI and custom Main Menu themes, and asset packs (icons, animations)</li>\n    <li>Removes Sub-GHz regional transmission restrictions by default.</li>\n    <li>Allows Sub-GHz extended frequency range (i.e. restaurant pagers) through Xtreme Settings App.</li>\n    <li>Allows changing Flipper's name via Xtreme Settings App</li>\n    <li>Has Sub-GHz protocols and most of the other changes taken from Unleashed FW (see <a href=\"#unleashed\">changes</a>).</li>\n    <li>Adds extra custom assets <em>(Mifare classic dict, more animations (installed separately), example files, etc)</em>.</li>\n    <li>Includes an enhanced/improved \"Dolphin Level\" system similar to RogueMaster.</li>\n    <li>Includes extra apps and plugins from the general community through SD Application loader (FAP files).</li>\n    <li>Also includes a number of other small tweaks, changes, and stability fixes.</li>\n</ul>\n<h2 id=\"Dexv\">\n    Xvirus\n    <kbd>\n        <a href=\"https://github.com/Xvirus-Team/xvirus-firmware\">Xvirus-Team/xvirus-firmware</a>\n    </kbd>\n</h2>\n<ul>\n    <li>Fork of <a href=\"#unleashed\">Unleashed FW</a></li>\n    <li>Adds custom-themed graphics that are not included in the Official Firmware.</li>\n    <li>Removes Sub-GHz regional transmission restrictions after changes to <em>extend_range.txt</em> file.</li>\n    <li>Allows Sub-GHz extended frequency range (i.e. restaurant pagers) through <em>extend_range.txt</em> file.</li>\n    <li>Has Sub-GHz protocols and most of the other changes taken from Unleashed FW (see <a href=\"#unleashed\">changes</a>).</li>\n    <li>Adds extra custom assets <em>(Mifare classic dict, example files, etc)</em>.</li>\n    <li>Includes extra apps and plugins from the general community through SD Application loader (FAP files).</li>\n</ul>\n<h2 id=\"Squachware\">\n    Squachware\n    <kbd>\n        <a href=\"https://github.com/skizzophrenic/SquachWare-CFW\">skizzophrenic/SquachWare-CFW - [TalkingSasquach](https://www.youtube.com/@TalkingSasquach)</a>\n    </kbd>\n</h2>\n<ul>\n    <li><em>(OEM+)</em></li>\n    <li>Fork of <a href=\"#official\">Official</a>.</li>\n    <li>Adds custom-themed graphics that are not included in the Official Firmware.</li>\n    <li>Keeps Sub-GHz regional transmission restrictions like Official Firmware.</li>\n    <li>Has many of the apps that are available from <a href=\"#plugins\">RogueMaster</a>.</li>\n    <li>Fresh and active firmware forked from OFW.</li>\n    <li>Adds custom animations/moods.</li>\n    <li>Includes built-in name changer! (No recompile required to change your devices name).</li>\n    <li>Includes extra community based apps and plugins through SD Application loader (FAP files).</li>\n    <li>Includes community based Bad USB scripts.</li>\n    <li>Includes community based Sub-GHz files.</li>\n            <ul>\n            <li>More details can be found in their <a\n                    href=\"https://github.com/skizzophrenic/SquachWare-CFW\">README</a>.</li>\n        </ul>\n</ul>\n<h2 id=\"summary\">\n    📝 Summary\n    <kbd>(TL;DR)</kbd>\n</h2>\n<ul>\n    <li>Staying up to date with upstream (official) firmware is important.</li>\n    <li>TX restriction removal is illegal in most circumstances, use at your own risk.</li>\n    <li>RogueMaster is more focused on visual tweaks, new items, and changes (some experimental).</li>\n    <li>RogueMaster is based on Unleashed and OFW and keeps up to date on both on a daily basis.</li>\n    <li>Unleashed is more focused on core functionality, stability, and Sub-GHz protocols.</li>\n    <li>SquachWare is forked from OFW, adding lots of custom stuff to play with out of the box all while retaining the securities and comfort of OFW.</li>\n</ul>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 6.8828125,
          "content": "Creative Commons Legal Code\n\nCC0 1.0 Universal\n\n    CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\n    LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\n    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\n    INFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\n    REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\n    PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\n    THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\n    HEREUNDER.\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\n\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n"
        },
        {
          "name": "PLAYGROUND",
          "type": "commit",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 20.9775390625,
          "content": "<h1 align=\"center\"><a href='https://github.com/RogueMaster/flipperzero-firmware-wPlugins/releases/latest' target='_blank'>GET FIRMWARE HERE</a></H1>\n\n<h1 align=\"center\"><a href='https://rogue-master.net'><img src=\"https://lh3.googleusercontent.com/d/1EqKVTt3clsfM8pFoZVfl4kPzm9oNqWkY\" width=\"40%\"></a>\n<br><a href='https://discord.gg/gF2bBUzAFe' target='_blank'><img src='https://lh3.googleusercontent.com/d/1Ytf8DOQZuFhzWUL2Vm-TTPVrdwRt5wi-' alt='Discord' title='Discord'></a>\n&nbsp;<a href='https://github.com/RogueMaster/flipperzero-firmware-wPlugins/releases/latest' target='_blank'><img src='https://lh3.googleusercontent.com/d/1DvytrGJms7OaLDrYDA8hTawwqdoi5rDo' alt='Firmware GitHub' title='Firmware GitHub'></a>\n&nbsp;<a href='https://www.patreon.com/RogueMaster?filters[tag]=Latest%20Release' target='_blank'><img src='https://lh3.googleusercontent.com/d/1iYQlRQXM7nA4IAdcPwvcKRSTCMoi8tug' alt='Latest PATREON Release' title='Latest PATREON Release'></a>\n&nbsp;<a href='https://shop.rogue-master.net/' target='_blank'><img src='https://lh3.googleusercontent.com/d/1jMPWENvOTabzjJALFj82U72LGsRWuUuQ' alt='RM Merch'' title='RM Merch'></a>\n&nbsp;<a href='https://github.com/RogueMaster/awesome-flipperzero-withModules' target='_blank'><img src='https://lh3.googleusercontent.com/d/1gjui0-UZNerG13PUblXjmr1YaSAjIf2k' alt='More Research / Assets' title='More Research / Assets'></a></h1>\n\n# [Support Me On Patreon to get the best assets updated frequently!](https://www.patreon.com/RogueMaster)\n\n## [This repo is an improved fork of the OG Awesome Flipper Collection by djsime1!](https://github.com/djsime1/awesome-flipperzero)\n\n<h3 align=\"center\">\n  A collection of Awesome resources for the <a href=\"https://flipperzero.one\">Flipper Zero</a> device.<br>\n  <h2 align=\"center\">... and every repo you need to clone...</h2>\n</h3>\n\n<table align=\"center\"><tr>\n  <td>\n    <h3 align=\"center\">\n    👋 New to Flipper Zero? Got questions?<br>\n    Check out the <a href=\"https://github.com/RogueMaster/awesome-flipperzero-withModules/blob/rogue_main/FAQ.md\">FAQ Document</a>❗\n    </h3>\n  </td>\n  <td>\n    <h3 align=\"center\">\n    🚫 Not affiliated with<br>\n    <a href=\"https://www.flipperdevices.com/\">Flipper Devices Inc.</a>\n    </h3>\n  </td>\n</tr></table>\n\n<hr>\n\n<!-- DO NOT MODIFY ABOVE -->\n\n## Databases & Dumps\n- [`My-Flipper-Shits` Free and open-source \\[BadUSB\\] payloads for Flipper Zero.](https://github.com/aleff-github/my-flipper-shits/)\n- [`UberGuidoZ Playground` Large collection of files, documentation, and dumps of all kinds.](https://github.com/UberGuidoZ/Flipper)\n- [`DownGit` Create a GitHub Resource Download Link](https://uberguidoz.github.io/DownGit/)\n- [`Flipper-IRDB` Many IR dumps for various appliances.](https://github.com/logickworkshop/Flipper-IRDB)\n- [`FlipperZero-TouchTunes` Dumps of TouchTune's remote.](https://github.com/jimilinuxguy/flipperzero-touchtunes)\n- [`Flipper Maker` Generate Flipper Zero files on the fly.](https://flippermaker.github.io/)\n- [`FlipperAmiibo` Bank vault of Amiibos to Flipper's format.](https://github.com/Gioman101/FlipperAmiibo)\n- [`FlipperMusicRTTTL` Collection of musics for FlipperZero Music Player.](https://github.com/neverfa11ing/FlipperMusicRTTTL)\n- [`flipper-music-files` Much smaller collection of musics for FlipperZero Music Player.](https://github.com/Tonsil/flipper-music-files)\n- [`Flipper BadUSB Payloads` Collection of payloads formatted to work on the Flipper Zero.](https://github.com/I-Am-Jakoby/Flipper-Zero-BadUSB)\n- [`FlipperZero-Goodies` Intercom keys, scripts, etc.](https://github.com/wetox-team/flipperzero-goodies)\n- [`T119 bruteforcer` Triggers Retekess T119 restaurant pagers.](https://github.com/xb8/t119bruteforcer)\n- [`flipperzero-bruteforce` Generate .sub files to brute force Sub-GHz OOK.](https://github.com/tobiabocchi/flipperzero-bruteforce)\n- [`UNC0V3R3D BadUSB collection` Yet another BadUSB collection.](https://github.com/UNC0V3R3D/Flipper_Zero-BadUsb)\n- [`Flipper-StarNew` Universal Intercom Keys.](https://github.com/GlUTEN-BASH/Flipper-Starnew)\n- [`FalsePhilosophers Flipper BadUSB` Flipper zero community ducky payload repo.](https://github.com/FalsePhilosopher/badusb)\n- [`My-Flipper-Shits` Free and open-source \\[BadUSB\\] payloads for Flipper Zero.](https://github.com/aleff-github/my-flipper-shits/)\n- [`SerialHex2FlipperZeroInfrared` Convert IR serial messages into FlipperZero compatible IR files.](https://github.com/maehw/SerialHex2FlipperZeroInfrared)\n\n## Applications & Plugins\n- [`The Flipper Zero user interface editor` The GUI editor/generator for Flipper Zero.](https://ilin.pt/stuff/fui-editor/)\n- [`Web Flasher` Flash latest FW from your browser without qFlipper, also lets you paint](https://my.flipp.dev/)\n- [`Flipper-Plugin-Tutorial` Building a Custom \"Hello world\" plugin.](https://github.com/mfulz/Flipper-Plugin-Tutorial)\n- [`Flipper-Plugin-Tutorial` Updated plugin tutorial based on new build methods.](https://github.com/csBlueChip/FlipperZero_plugin_howto)\n- [`Spectrum analyzer` Sub-GHz frequency spectrum analyzer.](https://github.com/jolcese/flipperzero-firmware/tree/spectrum/applications/spectrum_analyzer)\n- [`Doom` Doom Flipper Zero edition.](https://github.com/p4nic4ttack/doom-flipper-zero)\n- [`Tetris` A rudimentary Tetris game.](https://github.com/jeffplang/flipperzero-firmware/tree/tetris_game/applications/tetris_game)\n- [`Flappy Bird` The name says it all.](https://github.com/DroomOne/flipperzero-firmware/tree/dev/applications%2Fflappy_bird)\n- [`T-Rex Runner` Flipper zero port of Chrome's game.](https://github.com/Rrycbarm/t-rex-runner)\n- [`Mouse jiggler` Keeps PC screens on by acting as a moving mouse.](https://github.com/MuddledBox/flipperzero-firmware/tree/Mouse_Jiggler/applications/mouse_jiggler)\n- [`floopper-bloopper` LD#47 Game.](https://github.com/glitchcore/floopper-bloopper)\n- [`NRF24 & Mousejacking` PoC NRF24 library and mousejack exploitation app.](https://github.com/mothball187/flipperzero-nrf24)\n- [`UPC-A Barcode Generator` Can be used to create any UPC-A barcode.](https://github.com/McAzzaMan/flipperzero-firmware/tree/UPC-A_Barcode_Generator/applications/barcode_generator)\n- [`Sentry Safe` Plugin that can open any Sentry Safe and Master Lock electronic safe without entering pin code.](https://github.com/H4ckd4ddy/flipperzero-sentry-safe-plugin)\n- [`Dec/Hex Converter` Small \"real time\" decimal/hexadecimal converter.](https://github.com/theisolinearchip/flipperzero_stuff/tree/main/applications/dec_hex_converter)\n- [`MultiConverter` Multi-unit converter that can be easily expanded with new units and conversion methods.](https://github.com/theisolinearchip/flipperzero_stuff/tree/main/applications/multi_converter)\n- [`Doom` Doom-like clone for Flipper Zero.](https://github.com/p4nic4ttack/doom-flipper-zero)\n- [`bpm-tapper` Tap along to a song to measure beats per minute.](https://github.com/panki27/bpm-tapper)\n- [`Metronome` Musical metronome.](https://github.com/panki27/Metronome)\n- [`USB Keyboard` A refactor of the BT remote to work over USB. Allows the Flipper to act as an USB HID keyboard.](https://github.com/huuck/FlipperZeroUSBKeyboard)\n- [`Minesweeper` Minesweeper implementation.](https://github.com/panki27/minesweeper)\n- [`SD Load Applications` Prebuilt applications (FAP) for popular firmware options.](https://github.com/UberGuidoZ/Flipper/tree/main/Applications)\n- [`Tuning Fork` Use your flipper as a tuning fork.](https://github.com/besya/flipperzero-tuning-fork)\n- [`GPS` Display data from a serial GPS module.](https://github.com/ezod/flipperzero-gps)\n- [`USB HID Autofire` Send left-clicks as a USB HID device.](https://github.com/pbek/usb_hid_autofire)\n- [`Flipper Authenticator` Generate TOTP authentication codes.](https://github.com/akopachov/flipper-zero_authenticator/)\n- [`Unitemp` Temperature, humidity and pressure sensors reader (DHT11/22, DS18B20, BMP280, HTU21x and more)](https://github.com/quen0n/unitemp-flipperzero)\n- [`Flipp Pomodoro` Pomodoro Timer Tool for productivity.](https://github.com/Th3Un1q3/flipp_pomodoro)\n- [`COM Port Scanner Emulator` Barcode Scanner Emulator.](https://github.com/polarikus/flipper-zero_bc_scanner_emulator)\n- [`Xbox Controller` Easy controller for Xbox One with IR](https://github.com/gebeto/flipper-xbox-controller)\n- [`Reversi` The classic Reversi game](https://github.com/dimat/flipperzero-reversi)\n- [`Servo Tester` Servo Tester App](https://github.com/mhasbini/ServoTesterApp)\n\n## Firmwares & Tweaks\n\n<table align=\"right\">\n  <tr><th><strong>Hey you!</strong></th></tr>\n  <tr><td>🔰 <em><a href=\"https://github.com/RogueMaster/awesome-flipperzero-withModules/blob/rogue_main/Firmwares.md\">Click here</a> for a feature<br>comparison of these firmwares!</em></td></tr>\n</table>\n\n- [`RogueMaster` Unleashed + Official FW fork with assorted community plugins, tweaks, & games.](https://github.com/RogueMaster/flipperzero-firmware-wPlugins)\n- [`Unleashed` Unlocked firmware with rolling codes support & community plugins, stable tweaks, and games.](https://github.com/DarkFlippers/unleashed-firmware)\n- [`SquachWare` Fork of official firmware which adds custom graphics, community applications & files.](https://github.com/skizzophrenic/SquachWare-CFW)\n- [`v1nc flipper zero firmware` Unleashed fork with support for different Duckyscript keyboard layouts & community plugins.](https://github.com/v1nc/flipperzero-firmware)\n- [`Wetox` Very similar to the official branch, with a few small tweaks.](https://github.com/wetox-team/flipperzero-firmware)\n- [`Muddled Forks` Less-active firmware modifications.](https://github.com/MuddledBox/flipperzero-firmware/tree/muddled_dev)\n- [`OpenHaystack BLE mod` Very old PoC that makes Flipper behave like an AirTag.](https://github.com/AlexStrNik/flipperzero-firmware)\n\n## Graphics & Animations\n- [`Talking Sasquach Animations` Literally wrote the book on making animations.](https://github.com/skizzophrenic/Talking-Sasquach)\n- [`Lab401 Animation Video` YouTube video with a step by step from Talking Sasquach.](https://www.youtube.com/watch?v=Nq5DXhOMo5s)\n- [`Kuronons Graphics` Custom animations, passport backgrounds & profile pictures.](https://github.com/Kuronons/FZ_graphics)\n- [`Flipper Zero Animation Process` Google Doc step by step from Talking Sasquach.](https://docs.google.com/document/d/e/2PACX-1vR_nZRakD6iwJVQS8Pf4y7Wm4klcucrC7EKVO8m_DQV63To7e-alqD0yaoO3sTygjcChfcRo80Hdeet/pub)\n- [`Flipper Animation Manager` Visualize and manage animations directly from your computer.](https://github.com/Ooggle/FlipperAnimationManager)\n- [`zip2Animation` Utility to assist in creating animations.](https://github.com/CharlesTheGreat77/zip2Animation)\n- [`H4XV's Gif2Anim` Gif2FlipperAnimation Converter](https://github.com/H4XV/flipper-animation-generator)\n- [`Haseosama Animations` Great collection of custom animations.](https://github.com/Haseosama/FZ_Animations)\n- [`Animations by stopoxy` Another great custom animation collection.](https://github.com/stopoxy/FZAnimations)\n- [`Wr3nch Animations` Some custom animations and scripts.](https://github.com/wrenchathome/flip0anims)\n- [`Dexv Graphics` Custom animations and resources.](https://github.com/DXVVAY/dexv-graphics)\n- [`DoobTheGoober Animations` Custom animations from the creator of zip2Animation](https://github.com/CharlesTheGreat77/FlipperZeroAnimation)\n- [`UberGuidoZ Graphics` Brief description and links to resources, including PYX host.](https://github.com/UberGuidoZ/Flipper/tree/main/Graphics)\n- [`Animations by mnenkov` A dump with animations and manifest creator for batch files.](https://github.com/mnenkov/flipper-zero-animations)\n- [`H4XV Gif2FlipperAnimation Converter` Converts gifs to Flipper Animations](https://github.com/H4XV/flipper-animation-generator)\n\n## Modules & Cases\n- [`Dying the Flipper Zero Stock Case Black` Using Rit Dyemore Graphite](https://www.reddit.com/r/flipperzero/comments/vhb8hv/with_inspiration_and_info_from_uchillbasss_ive)\n- [`Oneamongthetrees Animations/Graphics` Collection of custom animations and passport icons.](https://github.com/oneamongthetrees/fz-gfx)\n- [`Ultimate Flipper Zero Case` 3D printed case with room for 3rd party modules & 2x WiFi dev board slots.](https://www.printables.com/model/527482-ultimate-flipper-case)\n- [`FlipperZero-Hardware` 3D-Printable cases with custom iButton interface.](https://github.com/s0ko1ex/FlipperZero-Hardware)\n- [`Flipper Zero Cases` 3D-Printable case & cover models.](https://github.com/MuddledBox/FlipperZeroCases)\n- [`FlipperZero-Protoboards-Kicad` KiCad prototype boards.](https://github.com/lomalkin/flipperzero-protoboards-kicad)\n- [`Pelican case` Big case to hold Flipper and USB.](https://www.printables.com/model/204882-flipper-zero-case)\n- [`Hard case` Smaller than pelican case, but still bulky.](https://www.thingiverse.com/thing:5387015)\n- [`WiFi Module v1 Case` Small cover for the WiFi dev board.](https://www.printables.com/model/179910-case-for-flipper-zero-wi-fi-module-v1)\n- [`Flipper screen protector` An alternative screen protector for Flipper.](https://www.photodon.com/p/2419-01.html)\n- [`WiFi Scanner Module` Scans for WiFi networks via a custom Wemos module board.](https://github.com/SequoiaSan/FlipperZero-WiFi-Scanner_Module)\n- [`WiFi Scanner Module Flasher` Web flasher for module firmware above.](https://sequoiasan.github.io/FlipperZero-WiFi-Scanner_Module/)\n- [`WiFi DSTIKE Deauther` Preforms WiFi deauth attacks via a custom ESP8266 module board.](https://github.com/SequoiaSan/FlipperZero-Wifi-ESP8266-Deauther-Module)\n- [`WiFi Deauther Module Flasher` Web flasher for module firmware above.](https://sequoiasan.github.io/FlipperZero-Wifi-ESP8266-Deauther-Module/)\n- [`Skadis holder` Flipper Zero holder for Ikea Skadis.](https://www.thingiverse.com/thing:5434476)\n- [`Flipper Zero Boards` ESP32 and NRF24 daughterboards for the Flipper.](https://github.com/DrB0rk/Flipper-Zero-Boards)\n- [`Flipper Zero Car Mount` Uses foam from the original box.](https://www.thingiverse.com/thing:5464899)\n- [`Soft TPU cover` Similar to the official silicone case.](https://www.printables.com/en/model/272676-soft-tpu-flipper-zero-cover)\n- [`Flipper-Boy` Flipper Zero Case with 22mm Watch Strap Adapter.](https://www.printables.com/model/304243-flipper-boy)\n- [`WiFi Devboard Pelican Case` Top case that works with the 4mm FZ Pelican case.](https://github.com/Z3BRO/Flipper-Zero-Pelican-Case-Wifi-Devboard)\n- [`FlipperZero RGB backlight` Replacing stock backlight with RGB](https://github.com/quen0n/flipperzero-firmware-rgb)\n- [`The Mayhem Fin` ESP32 with WiFi, BT/BLE, Micro-SD, Camera, Flashlight, NRF24/CC1101, and more.](https://github.com/eried/flipperzero-mayhem)\n- [Flipper Skin (By Unknown)](https://www.dropbox.com/sh/qae45juc44ukzib/AADEqb8G2rcyeIj6ZcKStqs7a?dl=0)\n- [`Flipper-Zero-Backpacks` Backpack addon boards with ESP32, Raspberry Pi, Protoboards etc.](https://github.com/Chrismettal/flipper-zero-backpacks)\n\n## Off-device & Debugging\n- [`Official Web Interface` Web interface to interact with Flipper, including Paint and SUB/IR analyzer.](https://lab.flipper.net/)\n- [`OOK to .sub` Python script to generate Flipper RAW .sub files from OOK bitstreams.](https://gist.github.com/jinschoi/f39dbd82e4e3d99d32ab6a9b8dfc2f55)\n- [`csv2ir` Script to convert IRDB CSV's to Flipper .ir files.](https://github.com/Spexivus/csv2ir)\n- [`flipperzero-sesproject` Segger Embedded Studio project.](https://github.com/hedger/flipperzero-sesproject)\n- [`FlipperScripts` Modify the state and level of your dolphin.](https://github.com/DroomOne/FlipperScripts)\n- [`Viewing system logs` Dump system logs to serial CLI.](https://gist.github.com/jaflo/50c35c46f3ecada7a18c9e5cc203a3f8)\n- [`AmiiboFlipperConverter` Script that converts Amiibo's to Flipper format.](https://github.com/Lucaslhm/AmiiboFlipperConverter/)\n- [`CLI Tools` Python scripts to screenshot/stream screen.](https://github.com/lomalkin/flipperzero-cli-tools)\n- [`Flipper File Toolbox` Scripts for generating Flipper data files.](https://github.com/evilpete/flipper_toolbox)\n- [`Marauder for Wifi Dev Board` See Flipper.bin in Releases by JustCallMeKoko.](https://github.com/justcallmekoko/ESP32Marauder)\n- [`VertProntoIR2FlipperIR` Converts Vert Pronto IR codes to Flipper format.](https://github.com/SkeletonMan03/VertProntoIR2FlipperIR)\n- [`FlippMibo` Yet another Amiibo to Flipper conversion script.](https://github.com/0xz00n/FlipMiibo)\n- [`mfkey32v2` MFC key recovery reader attack.](https://github.com/equipter/mfkey32v2)\n- [`Fztea` Connect to your Flipper's UI over serial or make it accessible via SSH.](https://github.com/jon4hz/fztea)\n- [`pyFlipper` Unofficial CLI wrapper writter in Python.](https://github.com/wh00hw/pyFlipper)\n- [`SUB Plotters / comparers` Python package to plot and compare multiple .sub files.](https://github.com/ShotokanZH/flipper_sub_plotters_comparers)\n- [`ClassicConverter` Converts Mifare Classic binary files to Flipper.](https://github.com/equipter/ClassicConverter)\n- [`ClassicConverterWeb` Converts between Mifare Classic binary and Flipper NFC file.](https://micsen.github.io/flipperNfcToBin/)\n- [`musicxml2fmf` Converts MusicXML files to Flipper Music Format.](https://github.com/white-gecko/musicxml2fmf)\n- [`BadUSB keyboard converter` Payload converted for non-US keyboard layouts.](http://helppox.com/badusbconvert.html)\n- [`U2F SSH Keys` U2F ECDSA SSH Key Generation using Flipper Zero.](https://gist.github.com/BlackPropaganda/44c40f7855a90e289a9477b654e54eb1)\n- [`flipper0` Rusty crate with safe interface to Flipper Firmware and autogen bindings underneath.](https://crates.io/crates/flipper0)\n- [`flipperzero-rs` Hand-crafted bindings to Flipper Firmware with custom build tool.](https://github.com/dcoles/flipperzero-rs)\n- [`fzfs` Flipper Zero filesystem driver.](https://github.com/dakhnod/fzfs)\n- [`Pagger` Sub-GHz generators for restaurants/kiosks paging systems.](https://meoker.github.io/pagger/)\n- [`FBT-AARCH64` A script that sets up FBT's toolchain on ARM devices.](https://github.com/qqmajikpp/FBT-AARCH64)\n- [`flipper2mct` A script to convert Flipper NFC files to Mifare Classic Tools format for MC 1k & 4k.](https://gist.github.com/ardubev16/339ee55e0e610e9241dd236c11ac3c3d)\n\n## Notes & References\n\n<table align=\"right\">\n  <tr><th><strong>Need help using your Flipper Zero?</strong></th></tr>\n  <tr><td>📕 <em>Give the <a href=\"https://docs.flipper.net/\">official documentation</a> a read!</em></td></tr>\n</table>\n\n- [`Official battery self-repair guide` How to troubleshoot battery issues.](https://cdn.flipperzero.one/self-repair-guide.pdf)\n- [`Official firmware recovery guide` How to troubleshoot firmware issues.](https://docs.flipperzero.one/basics/firmware-update/firmware-recovery)\n- [`FZ Firmware Comparisons` Comparison of custom firmwares listed in this repo.](https://github.com/djsime1/awesome-flipperzero/blob/main/Firmwares.md)\n- [`Flipper Zero Hacking 101` Guides with screenshots, files, and general help.](https://flipper.pingywon.com/)\n- [`Reset forgotten PIN` How to reset your device's PIN code.](https://gist.github.com/djsime1/18d73b981249859f17aab3e2bfd2b600)\n- [`Atmanos Flipper Software Docs` Flipper development tutorials and information.](https://flipper.atmanos.com/docs/overview/intro)\n- [`Flipper Zero GPIO Pinout` Official GPIO pinouts.](https://miro.com/app/board/uXjVO_LaYYI=/?moveToWidget=3458764522696947614&cot=10)\n- [`Add-on Modules GPIO Pinouts` ESP32, ESP8266, ESP32-CAM, ESP32-WROOM, NRF24.](https://github.com/UberGuidoZ/Flipper/tree/main/GPIO)\n- [`Firmware roadmap` Official stock firmware roadmap.](https://miro.com/app/board/uXjVO_3D6xU=/?moveToWidget=3458764522498020058&cot=14)\n- [`Flipper Zero SW&HW keynote` (OUTDATED) Hardware & software architecture document.](https://miro.com/app/board/o9J_l1XZfbw=/?moveToWidget=3458764514405659414&cot=14)\n- [`WiFi Dev Board How To` with Marauder firmware by JustCallMeKoko](https://www.reddit.com/r/flipperzero/comments/vn29z2/wifi_dev_board_with_marauder_firmware/)\n- [`Unofficial Community Wiki` To help consolidate all things Flipper (official and unofficial).](https://flipperzero.miraheze.org/wiki/Main_Page)\n- [`Flipper Zero disassembly guide` Difficulty: Moderate, Time: 8-15 Minutes.](https://www.ifixit.com/Guide/Flipper+Zero+Disassembly/151455)\n- [`Alternative disassembly video` Third-party video for disassembling the Flipper.](https://youtu.be/38pHe7M4vl8)\n- [`ESP32 Marauder on WiFi dev board` Portable WiFi/Bluetooth pentesting.](https://github.com/justcallmekoko/ESP32Marauder/wiki/flipper-zero)\n- [`ESP32 Marauder guide video` Companion video for the above link.](https://youtu.be/_YLTpNo5xa0)\n- [`Flipper Skylanders` How to read a Skylanders figure with Flipper.](https://github.com/V0lk3n/Flipper-Skylanders)\n- [`Flipper Zero Dimensions` Basic info on screen and case dimensions.](https://github.com/UberGuidoZ/Flipper/tree/main/FlipperZero_Dimensions)\n- [`Application CI/CD Guide` A complete guide on how to adopt flipper application to regular API changes.](https://gist.github.com/Th3Un1q3/233fa6900d13caa95c6383e53a92bed1)\n\n<!-- DO NOT MODIFY BELOW -->\n\n<hr>\n<h3 align=\"center\">🆕 Want to make changes? ✨</h3>\n<div align=\"center\">\n  You can <kbd><a href=\"https://github.com/RogueMaster/awesome-flipperzero-withModules/edit/rogue_main/README.md\">Edit this file</a></kbd> and open a Pull Request.<br>\n  Read the <a href=\"https://github.com/RogueMaster/awesome-flipperzero-withModules/blob/rogue_main/FAQ.md#meta-\">Meta FAQ section</a> for more info.\n</div>\n"
        },
        {
          "name": "apps_data",
          "type": "tree",
          "content": null
        },
        {
          "name": "badusb",
          "type": "tree",
          "content": null
        },
        {
          "name": "fw",
          "type": "tree",
          "content": null
        },
        {
          "name": "graphics",
          "type": "tree",
          "content": null
        },
        {
          "name": "music_player",
          "type": "commit",
          "content": null
        },
        {
          "name": "nfc",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "update",
          "type": "tree",
          "content": null
        },
        {
          "name": "wifiPenTool",
          "type": "commit",
          "content": null
        }
      ]
    }
  ]
}