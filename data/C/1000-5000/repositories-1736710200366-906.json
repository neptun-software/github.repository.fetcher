{
  "metadata": {
    "timestamp": 1736710200366,
    "page": 906,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cloudwu/pbc",
      "stars": 1629,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0791015625,
          "content": "*.suo\r\n*.sdf\r\n*.opensdf\r\n*.d\r\n*.o\r\nDebug\r\nRelease\r\nbuild\r\n.DS_Store\r\nxcuserdata\r\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.703125,
          "content": "# ref: http://docs.travis-ci.com/user/build-configuration\n\nlanguage: erlang\n\nenv:\n    global:\n        - DEPS_BUILD_DIR=$TRAVIS_BUILD_DIR/deps\n        - LJ_REPO=\"https://github.com/LuaJIT/LuaJIT.git\"\n        - INC_DIR=/usr/local/include\n    matrix:\n        - LUA=lua-5.1    LUA_TYPE=lua    LUA_DIST=lua-5.1.5 LUA_BD=lua   LUA_INC=$INC_DIR\n        - LUA=lua-5.2    LUA_TYPE=lua    LUA_DIST=lua-5.2.4 LUA_BD=lua   LUA_INC=$INC_DIR\n        - LUA=lua-5.3    LUA_TYPE=lua    LUA_DIST=lua-5.3.2 LUA_BD=lua53 LUA_INC=$INC_DIR\n        - LUA=luajit-2.0 LUA_TYPE=luajit LJ_BR=master       LUA_BD=lua   LUA_INC=$INC_DIR/$LUA\n        - LUA=luajit-2.1 LUA_TYPE=luajit LJ_BR=v2.1         LUA_BD=lua   LUA_INC=$INC_DIR/$LUA\n\nbefore_install:\n    - mkdir -p $DEPS_BUILD_DIR\n    - sudo apt-get update -qq\n    - sudo apt-get install libprotobuf-dev protobuf-compiler\n    - LUA_BIN=lua\n\ninstall:\n    # install Lua/LuaJIT\n    - cd $DEPS_BUILD_DIR\n    - if [ \"$LUA_TYPE\" == \"luajit\" ]; then\n          git clone -b $LJ_BR $LJ_REPO luajit2.git && cd luajit2.git && LJ_TAG=`git describe --abbre=0` && LUA_BIN=\"luajit-${LJ_TAG:1}\" && sudo make install;\n      fi\n    - if [ \"$LUA_TYPE\" == \"lua\" ]; then\n          wget \"http://www.lua.org/ftp/$LUA_DIST.tar.gz\" && tar xzf $LUA_DIST.tar.gz && cd $LUA_DIST && sudo make linux test install;\n      fi\n    # build lib\n    - cd $TRAVIS_BUILD_DIR\n    - make\n    # build lib bindings\n    - make -C binding/$LUA_BD LUADIR=$LUA_INC\n\nbefore_script:\n    # back to home directory\n    - cd $TRAVIS_BUILD_DIR\n    # check executables\n    - which $LUA_BIN 2>/dev/null && $LUA_BIN -v\n\nscript:\n    - cd $TRAVIS_BUILD_DIR/binding/$LUA_BD\n    - $LUA_BIN test.lua\n\nnotifications:\n    email:\n        on_success: change\n        on_failure: always\n"
        },
        {
          "name": "Android.mk",
          "type": "blob",
          "size": 0.396484375,
          "content": "LOCAL_PATH := $(call my-dir)\n\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE := pbc\n\nLOCAL_MODULE_FILENAME := libpbc\n\nLOCAL_SRC_FILES := \\\n src/alloc.c \\\r\nsrc/array.c \\\r\nsrc/bootstrap.c \\\r\nsrc/context.c \\\r\nsrc/decode.c \\\r\nsrc/map.c \\\r\nsrc/pattern.c \\\r\nsrc/proto.c \\\r\nsrc/register.c \\\r\nsrc/rmessage.c \\\r\nsrc/stringpool.c \\\r\nsrc/varint.c \\\r\nsrc/wmessage.c \\\n\n\n\nLOCAL_C_INCLUDES+= src\\\n\n\ninclude $(BUILD_STATIC_LIBRARY)\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.626953125,
          "content": "CC = gcc\nCFLAGS = -O2 -fPIC -Wall\nAR = ar rc\n\nBUILD = build\n\n.PHONY : all lib clean tool\n\nLIBSRCS = context.c varint.c array.c pattern.c register.c proto.c map.c alloc.c rmessage.c wmessage.c bootstrap.c stringpool.c decode.c\nLIBNAME = libpbc.a\n\nTESTSRCS = addressbook.c pattern.c pbc.c float.c map.c test.c decode.c\nPROTOSRCS = addressbook.proto descriptor.proto float.proto test.proto\n\nBUILD_O = $(BUILD)/o\n\nall : lib test\n\nlib : $(LIBNAME)\n\nclean :\n\trm -rf $(BUILD)\n\n$(BUILD) : $(BUILD_O)\n\n$(BUILD_O) :\n\tmkdir -p $@\n\nTOOL := $(BUILD)/dump\n\ntool : $(TOOL)\n\n$(TOOL) : | $(BUILD)\n$(TOOL) : $(LIBNAME)\n$(TOOL) : tool/dump.c\n\tcd $(BUILD) && $(CC) $(CFLAGS) -I.. -L. -o dump ../$< -lpbc\n\nLIB_O :=\n\ndefine BUILD_temp\n  TAR :=  $(BUILD_O)/$(notdir $(basename $(1)))\n  LIB_O := $(LIB_O) $$(TAR).o\n  $$(TAR).o : | $(BUILD_O)\n  -include $$(TAR).d\n  $$(TAR).o : src/$(1)\n\t$(CC) $(CFLAGS) -c -Isrc -I. -o $$@ -MMD $$<\nendef\n\n$(foreach s,$(LIBSRCS),$(eval $(call BUILD_temp,$(s))))\n\n$(LIBNAME) : $(LIB_O)\n\tcd $(BUILD) && $(AR) $(LIBNAME) $(addprefix ../,$^)\n\nTEST :=\n\ndefine TEST_temp\n  TAR :=  $(BUILD)/$(notdir $(basename $(1)))\n  TEST := $(TEST) $$(TAR)\n  $$(TAR) : | $(BUILD)\n  $$(TAR) : $(LIBNAME)\n  $$(TAR) : test/$(1) \n\tcd $(BUILD) && $(CC) $(CFLAGS) -I.. -L. -o $$(notdir $$@) ../$$< -lpbc\nendef\n\n$(foreach s,$(TESTSRCS),$(eval $(call TEST_temp,$(s))))\n\ntest : $(TEST) proto\n\nPROTO :=\n\ndefine PROTO_temp\n  TAR :=  $(BUILD)/$(notdir $(basename $(1)))\n  PROTO := $(PROTO) $$(TAR).pb\n  $$(TAR).pb : | $(BUILD)\n  $$(TAR).pb : test/$(1)\n\tprotoc -o$$@ $$<\nendef\n\n$(foreach s,$(PROTOSRCS),$(eval $(call PROTO_temp,$(s))))\n\nproto : $(PROTO)\n\n.PHONY : all lib test proto clean\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.7197265625,
          "content": "## PBC\n\n[![travis-ci status](https://travis-ci.org/cloudwu/pbc.svg?branch=master)](https://travis-ci.org/cloudwu/pbc)\n\nPBC is a google protocol buffers library for C without code generation.\n\n## Quick Example\n\n    package tutorial;\n    \n    message Person {\n      required string name = 1;\n      required int32 id = 2;        // Unique ID number for this person.\n      optional string email = 3;\n    \n      enum PhoneType {\n        MOBILE = 0;\n        HOME = 1;\n        WORK = 2;\n      }\n    \n      message PhoneNumber {\n        required string number = 1;\n        optional PhoneType type = 2 [default = HOME];\n      }\n    \n      repeated PhoneNumber phone = 4;\n    }\n\n```C\nstruct pbc_rmessage * m = pbc_rmessage_new(env, \"tutorial.Person\", slice);\nprintf(\"name = %s\\n\", pbc_rmessage_string(m , \"name\" , 0 , NULL));\nprintf(\"id = %d\\n\", pbc_rmessage_integer(m , \"id\" , 0 , NULL));\nprintf(\"email = %s\\n\", pbc_rmessage_string(m , \"email\" , 0 , NULL));\n\nint phone_n = pbc_rmessage_size(m, \"phone\");\nint i;\n\nfor (i=0;i<phone_n;i++) {\n\tstruct pbc_rmessage * p = pbc_rmessage_message(m , \"phone\", i);\n\tprintf(\"\\tnumber[%d] = %s\\n\",i,pbc_rmessage_string(p , \"number\", i ,NULL));\n\tprintf(\"\\ttype[%d] = %s\\n\",i,pbc_rmessage_string(p, \"type\", i, NULL));\n}\n\npbc_rmessage_delete(m);\n```\n\n## Message API\n\nYou can use *wmessage* for encoding , and *rmessage* for decoding.\n\nSee test/addressbook.c for details.\n\n## Pattern API\n\nIf you need better performance , you can use pbc_pattern_xxx api .\n\nSee test/pattern.c for details.\n\nPattern api is faster and less memory used because it can access data in native C struct.\n\n## Extension\n\nPBC support extension in a very simple way . PBC add a specific prefix to every extension field name. \n\n## Service\n\nNot supported\n\n## Enum\n\nWith message API , you can use both string and integer as enum type . They must be integer in Pattern API. \n\n## Lua bindings\n\ncd binding/lua && make\nor\ncd binding/lua53 && make\n\nSee https://github.com/cloudwu/pbc/tree/master/binding/lua/README.md\n\n## Building pbc - Using vcpkg\n\nYou can download and install pbc using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:\n\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.sh\n    ./vcpkg integrate install\n    ./vcpkg install pbc\n\nThe pbc port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\n## Question ?\n\n* Send me email : http://www.codingnow.com/2000/gmail.gif\n* My Blog : http://blog.codingnow.com\n* Design : http://blog.codingnow.com/2011/12/protocol_buffers_for_c.html (in Chinese)\n* Build for Visual Studio 2012 : https://github.com/miaodadao/pbc\n\n\n"
        },
        {
          "name": "binding",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_ios.sh",
          "type": "blob",
          "size": 3.2470703125,
          "content": "#!/bin/bash\n\n#  Automatic build script for pbc\n###########################################################################\n#  Change values here\n#\nSDKVERSION=$(xcrun -sdk iphoneos --show-sdk-version);\n#\n###########################################################################\n#\n# Don't change anything here\nWORKING_DIR=\"$(cd $(dirname $0))\";\ncd \"$WORKING_DIR\";\n\nARCHS=\"i386 x86_64 armv7 armv7s arm64\";\nDEVELOPER_ROOT=$(xcode-select -print-path);\n\n# ======================= options ======================= \nwhile getopts \"a:d:hs:-\" OPTION; do\n    case $OPTION in\n        a)\n            ARCHS=\"$OPTARG\";\n        ;;\n        d)\n            DEVELOPER_ROOT=\"$OPTARG\";\n        ;;\n        h)\n            echo \"usage: $0 [options] [-- [make options]]\";\n            echo \"options:\";\n            echo \"-a [archs]                    which arch need to built, multiple values must be split by space(default: $ARCHS)\";\n            echo \"-d [developer root directory] developer root directory, we use xcode-select -print-path to find default value.(default: $DEVELOPER_ROOT)\";\n            echo \"-s [sdk version]              sdk version, we use xcrun -sdk iphoneos --show-sdk-version to find default value.(default: $SDKVERSION)\";\n            echo \"-h                            help message.\";\n            exit 0;\n        ;;\n        s)\n            SDKVERSION=\"$SDKVERSION\";\n        ;;\n        -) \n            break;\n            break;\n        ;;\n        ?)  #当有不认识的选项的时候arg为?\n            echo \"unkonw argument detected\";\n            exit 1;\n        ;;\n    esac\ndone\n\nshift $(($OPTIND-1));\n\necho \"Ready to build for ios\";\necho \"WORKING_DIR=${WORKING_DIR}\";\necho \"ARCHS=${ARCHS}\";\necho \"DEVELOPER_ROOT=${DEVELOPER_ROOT}\";\necho \"SDKVERSION=${SDKVERSION}\";\necho \"make options=$@\";\n\n##########\nfor ARCH in ${ARCHS}; do\n    echo \"================== Compling $ARCH ==================\";\n    if [[ \"${ARCH}\" == \"i386\" || \"${ARCH}\" == \"x86_64\" ]]; then\n        PLATFORM=\"iPhoneSimulator\";\n    else\n        PLATFORM=\"iPhoneOS\";\n    fi\n\n    if [ -e build/o ]; then\n        rm -rf build/o;\n    fi\n    echo \"Building pbc for ${PLATFORM} ${SDKVERSION} ${ARCH}\";\n    \n    echo \"Please stand by...\";\n    \n    export DEVROOT=\"${DEVELOPER_ROOT}/Platforms/${PLATFORM}.platform/Developer\";\n    export SDKROOT=\"${DEVROOT}/SDKs/${PLATFORM}${SDKVERSION}.sdk\";\n    export BUILD_TOOLS=\"${DEVELOPER_ROOT}\";\n    #export CC=\"${BUILD_TOOLS}/usr/bin/gcc -arch ${ARCH}\";\n    export CC=${BUILD_TOOLS}/usr/bin/gcc;\n    #export LD=${BUILD_TOOLS}/usr/bin/ld;\n    #export CPP=${BUILD_TOOLS}/usr/bin/cpp;\n    #export CXX=${BUILD_TOOLS}/usr/bin/g++;\n    export AR=${DEVELOPER_ROOT}/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar;\n    #export AS=${DEVROOT}/usr/bin/as;\n    #export NM=${DEVROOT}/usr/bin/nm;\n    #export CXXCPP=${BUILD_TOOLS}/usr/bin/cpp;\n    #export RANLIB=${BUILD_TOOLS}/usr/bin/ranlib;\n    #export LDFLAGS=\"-arch ${ARCH} -isysroot ${SDKROOT} \";\n    export CFLAGS=\"-arch ${ARCH} -isysroot ${SDKROOT} -O2 -fPIC -Wall\";\n   \n    make libpbc.a CC=\"$CC\" AR=\"$AR rc\" CFLAGS=\"$CFLAGS\" $@;\n    mv -f build/libpbc.a \"build/libpbc-$ARCH.a\";\ndone\n\ncd \"$WORKING_DIR\";\necho \"Linking and packaging library...\";\n\nfor LIB_NAME in \"libpbc\"; do\n    lipo -create build/$LIB_NAME-*.a -output \"build/$LIB_NAME.a\";\n    echo \"build/$LIB_NAME.a built.\";\ndone\n"
        },
        {
          "name": "license.txt",
          "type": "blob",
          "size": 1.048828125,
          "content": "Copyright (C) 2011 by Cloud Wu <cloudwu@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "pbc.h",
          "type": "blob",
          "size": 3.5361328125,
          "content": "#ifndef PROTOBUF_C_H\n#define PROTOBUF_C_H\n\n#include <stdio.h>\n#include <stdint.h>\n\n#define PBC_ARRAY_CAP 64\n\n#define PBC_NOEXIST -1\n#define PBC_INT 1\n#define PBC_REAL 2\n#define PBC_BOOL 3\n#define PBC_ENUM 4\n#define PBC_STRING 5\n#define PBC_MESSAGE 6\n#define PBC_FIXED64 7\n#define PBC_FIXED32 8\n#define PBC_BYTES 9\n#define PBC_INT64 10\n#define PBC_UINT 11\n#define PBC_UNKNOWN 12\n#define PBC_REPEATED 128\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\ntypedef struct _pbc_array { char _data[PBC_ARRAY_CAP]; } pbc_array[1];\n\nstruct pbc_slice {\n\tvoid *buffer;\n\tint len;\n};\n\nstruct pbc_pattern;\nstruct pbc_env;\nstruct pbc_rmessage;\nstruct pbc_wmessage;\n\nstruct pbc_env * pbc_new(void);\nvoid pbc_delete(struct pbc_env *);\nint pbc_register(struct pbc_env *, struct pbc_slice * slice);\nint pbc_type(struct pbc_env *, const char * type_name , const char * key , const char ** type);\nconst char * pbc_error(struct pbc_env *);\n\n// callback api\nunion pbc_value {\n\tstruct {\n\t\tuint32_t low;\n\t\tuint32_t hi;\n\t} i;\n\tdouble f;\n\tstruct pbc_slice s;\n\tstruct {\n\t\tint id;\n\t\tconst char * name;\n\t} e;\n};\n\ntypedef void (*pbc_decoder)(void *ud, int type, const char * type_name, union pbc_value *v, int id, const char *key);\nint pbc_decode(struct pbc_env * env, const char * type_name , struct pbc_slice * slice, pbc_decoder f, void *ud);\n\n// message api\n\nstruct pbc_rmessage * pbc_rmessage_new(struct pbc_env * env, const char * type_name , struct pbc_slice * slice);\nvoid pbc_rmessage_delete(struct pbc_rmessage *);\n\nuint32_t pbc_rmessage_integer(struct pbc_rmessage * , const char *key , int index, uint32_t *hi);\ndouble pbc_rmessage_real(struct pbc_rmessage * , const char *key , int index);\nconst char * pbc_rmessage_string(struct pbc_rmessage * , const char *key , int index, int *sz);\nstruct pbc_rmessage * pbc_rmessage_message(struct pbc_rmessage *, const char *key, int index);\nint pbc_rmessage_size(struct pbc_rmessage *, const char *key);\nint pbc_rmessage_next(struct pbc_rmessage *, const char **key);\n\nstruct pbc_wmessage * pbc_wmessage_new(struct pbc_env * env, const char *type_name);\nvoid pbc_wmessage_delete(struct pbc_wmessage *);\n\n// for negative integer, pass -1 to hi\nint pbc_wmessage_integer(struct pbc_wmessage *, const char *key, uint32_t low, uint32_t hi);\nint pbc_wmessage_real(struct pbc_wmessage *, const char *key, double v);\nint pbc_wmessage_string(struct pbc_wmessage *, const char *key, const char * v, int len);\nstruct pbc_wmessage * pbc_wmessage_message(struct pbc_wmessage *, const char *key);\nvoid * pbc_wmessage_buffer(struct pbc_wmessage *, struct pbc_slice * slice);\n\n// array api \n\nint pbc_array_size(pbc_array);\nuint32_t pbc_array_integer(pbc_array array, int index, uint32_t *hi);\ndouble pbc_array_real(pbc_array array, int index);\nstruct pbc_slice * pbc_array_slice(pbc_array array, int index);\n\nvoid pbc_array_push_integer(pbc_array array, uint32_t low, uint32_t hi);\nvoid pbc_array_push_slice(pbc_array array, struct pbc_slice *);\nvoid pbc_array_push_real(pbc_array array, double v);\n\nstruct pbc_pattern * pbc_pattern_new(struct pbc_env * , const char * message, const char *format, ...);\nvoid pbc_pattern_delete(struct pbc_pattern *);\n\n// return unused bytes , -1 for error\nint pbc_pattern_pack(struct pbc_pattern *, void *input, struct pbc_slice * s);\n\n// <0 for error\nint pbc_pattern_unpack(struct pbc_pattern *, struct pbc_slice * s , void * output);\n\nvoid pbc_pattern_set_default(struct pbc_pattern * , void *data);\nvoid pbc_pattern_close_arrays(struct pbc_pattern *, void *data);\n\nint pbc_enum_id(struct pbc_env *env, const char *enum_type, const char *enum_name);\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif\n"
        },
        {
          "name": "pbc.sln",
          "type": "blob",
          "size": 0.8515625,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 2012\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"pbc\", \"pbc.vcxproj\", \"{82356F33-956B-4931-9977-BD7994B1C761}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tDebug|Win32 = Debug|Win32\r\n\t\tRelease|Win32 = Release|Win32\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{82356F33-956B-4931-9977-BD7994B1C761}.Debug|Win32.ActiveCfg = Debug|Win32\r\n\t\t{82356F33-956B-4931-9977-BD7994B1C761}.Debug|Win32.Build.0 = Debug|Win32\r\n\t\t{82356F33-956B-4931-9977-BD7994B1C761}.Release|Win32.ActiveCfg = Release|Win32\r\n\t\t{82356F33-956B-4931-9977-BD7994B1C761}.Release|Win32.Build.0 = Release|Win32\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "pbc.vcxproj",
          "type": "blob",
          "size": 5.0439453125,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ItemGroup Label=\"ProjectConfigurations\">\r\n    <ProjectConfiguration Include=\"Debug|Win32\">\r\n      <Configuration>Debug</Configuration>\r\n      <Platform>Win32</Platform>\r\n    </ProjectConfiguration>\r\n    <ProjectConfiguration Include=\"Release|Win32\">\r\n      <Configuration>Release</Configuration>\r\n      <Platform>Win32</Platform>\r\n    </ProjectConfiguration>\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <ClInclude Include=\"pbc.h\" />\r\n    <ClInclude Include=\"src\\alloc.h\" />\r\n    <ClInclude Include=\"src\\array.h\" />\r\n    <ClInclude Include=\"src\\bootstrap.h\" />\r\n    <ClInclude Include=\"src\\context.h\" />\r\n    <ClInclude Include=\"src\\descriptor.pbc.h\" />\r\n    <ClInclude Include=\"src\\map.h\" />\r\n    <ClInclude Include=\"src\\pattern.h\" />\r\n    <ClInclude Include=\"src\\proto.h\" />\r\n    <ClInclude Include=\"src\\stringpool.h\" />\r\n    <ClInclude Include=\"src\\varint.h\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <ClCompile Include=\"src\\alloc.c\" />\r\n    <ClCompile Include=\"src\\array.c\" />\r\n    <ClCompile Include=\"src\\bootstrap.c\" />\r\n    <ClCompile Include=\"src\\context.c\" />\r\n    <ClCompile Include=\"src\\decode.c\" />\r\n    <ClCompile Include=\"src\\map.c\" />\r\n    <ClCompile Include=\"src\\pattern.c\" />\r\n    <ClCompile Include=\"src\\proto.c\" />\r\n    <ClCompile Include=\"src\\register.c\" />\r\n    <ClCompile Include=\"src\\rmessage.c\" />\r\n    <ClCompile Include=\"src\\stringpool.c\" />\r\n    <ClCompile Include=\"src\\varint.c\" />\r\n    <ClCompile Include=\"src\\wmessage.c\" />\r\n  </ItemGroup>\r\n  <PropertyGroup Label=\"Globals\">\r\n    <ProjectGuid>{82356F33-956B-4931-9977-BD7994B1C761}</ProjectGuid>\r\n    <Keyword>Win32Proj</Keyword>\r\n    <RootNamespace>ConsoleApplication1</RootNamespace>\r\n  </PropertyGroup>\r\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\r\n    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n    <UseDebugLibraries>true</UseDebugLibraries>\r\n    <PlatformToolset>v110_xp</PlatformToolset>\r\n    <CharacterSet>Unicode</CharacterSet>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\r\n    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n    <UseDebugLibraries>false</UseDebugLibraries>\r\n    <PlatformToolset>v110_xp</PlatformToolset>\r\n    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n    <CharacterSet>Unicode</CharacterSet>\r\n  </PropertyGroup>\r\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\r\n  <ImportGroup Label=\"ExtensionSettings\">\r\n  </ImportGroup>\r\n  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n  </ImportGroup>\r\n  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n  </ImportGroup>\r\n  <PropertyGroup Label=\"UserMacros\" />\r\n  <PropertyGroup />\r\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n    <ClCompile>\r\n      <WarningLevel>Level3</WarningLevel>\r\n      <Optimization>Disabled</Optimization>\r\n      <PreprocessorDefinitions>WIN32;_LIB;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n      <AdditionalIncludeDirectories>.;.\\pbc;.\\pbc\\src</AdditionalIncludeDirectories>\r\n      <SDLCheck>true</SDLCheck>\r\n      <CompileAs>CompileAsCpp</CompileAs>\r\n      <DisableSpecificWarnings>4146;4273;4244;4018</DisableSpecificWarnings>\r\n    </ClCompile>\r\n    <Link>\r\n      <SubSystem>Windows</SubSystem>\r\n      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n    </Link>\r\n    <Lib />\r\n  </ItemDefinitionGroup>\r\n  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n    <ClCompile>\r\n      <WarningLevel>Level3</WarningLevel>\r\n      <Optimization>MaxSpeed</Optimization>\r\n      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n      <IntrinsicFunctions>true</IntrinsicFunctions>\r\n      <PreprocessorDefinitions>WIN32;_LIB;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n      <AdditionalIncludeDirectories>.;.\\pbc;.\\pbc\\src</AdditionalIncludeDirectories>\r\n      <SDLCheck>true</SDLCheck>\r\n      <CompileAs>CompileAsCpp</CompileAs>\r\n      <DisableSpecificWarnings>4146;4273;4244;4018</DisableSpecificWarnings>\r\n    </ClCompile>\r\n    <Link>\r\n      <SubSystem>Windows</SubSystem>\r\n      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n      <OptimizeReferences>true</OptimizeReferences>\r\n    </Link>\r\n    <Lib />\r\n  </ItemDefinitionGroup>\r\n  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n  <ImportGroup Label=\"ExtensionTargets\">\r\n  </ImportGroup>\r\n</Project>"
        },
        {
          "name": "pbc.vcxproj.filters",
          "type": "blob",
          "size": 2.3388671875,
          "content": "﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <ItemGroup>\r\n    <Filter Include=\"src\">\r\n      <UniqueIdentifier>{aa230bd6-7da2-4cfb-af39-52310e429716}</UniqueIdentifier>\r\n    </Filter>\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <ClInclude Include=\"src\\alloc.h\">\r\n      <Filter>src</Filter>\r\n    </ClInclude>\r\n    <ClInclude Include=\"src\\array.h\">\r\n      <Filter>src</Filter>\r\n    </ClInclude>\r\n    <ClInclude Include=\"src\\bootstrap.h\">\r\n      <Filter>src</Filter>\r\n    </ClInclude>\r\n    <ClInclude Include=\"src\\context.h\">\r\n      <Filter>src</Filter>\r\n    </ClInclude>\r\n    <ClInclude Include=\"src\\descriptor.pbc.h\">\r\n      <Filter>src</Filter>\r\n    </ClInclude>\r\n    <ClInclude Include=\"src\\map.h\">\r\n      <Filter>src</Filter>\r\n    </ClInclude>\r\n    <ClInclude Include=\"src\\pattern.h\">\r\n      <Filter>src</Filter>\r\n    </ClInclude>\r\n    <ClInclude Include=\"src\\proto.h\">\r\n      <Filter>src</Filter>\r\n    </ClInclude>\r\n    <ClInclude Include=\"src\\stringpool.h\">\r\n      <Filter>src</Filter>\r\n    </ClInclude>\r\n    <ClInclude Include=\"src\\varint.h\">\r\n      <Filter>src</Filter>\r\n    </ClInclude>\r\n    <ClInclude Include=\"pbc.h\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <ClCompile Include=\"src\\array.c\">\r\n      <Filter>src</Filter>\r\n    </ClCompile>\r\n    <ClCompile Include=\"src\\bootstrap.c\">\r\n      <Filter>src</Filter>\r\n    </ClCompile>\r\n    <ClCompile Include=\"src\\context.c\">\r\n      <Filter>src</Filter>\r\n    </ClCompile>\r\n    <ClCompile Include=\"src\\decode.c\">\r\n      <Filter>src</Filter>\r\n    </ClCompile>\r\n    <ClCompile Include=\"src\\map.c\">\r\n      <Filter>src</Filter>\r\n    </ClCompile>\r\n    <ClCompile Include=\"src\\pattern.c\">\r\n      <Filter>src</Filter>\r\n    </ClCompile>\r\n    <ClCompile Include=\"src\\proto.c\">\r\n      <Filter>src</Filter>\r\n    </ClCompile>\r\n    <ClCompile Include=\"src\\register.c\">\r\n      <Filter>src</Filter>\r\n    </ClCompile>\r\n    <ClCompile Include=\"src\\rmessage.c\">\r\n      <Filter>src</Filter>\r\n    </ClCompile>\r\n    <ClCompile Include=\"src\\stringpool.c\">\r\n      <Filter>src</Filter>\r\n    </ClCompile>\r\n    <ClCompile Include=\"src\\varint.c\">\r\n      <Filter>src</Filter>\r\n    </ClCompile>\r\n    <ClCompile Include=\"src\\wmessage.c\">\r\n      <Filter>src</Filter>\r\n    </ClCompile>\r\n    <ClCompile Include=\"src\\alloc.c\">\r\n      <Filter>src</Filter>\r\n    </ClCompile>\r\n  </ItemGroup>\r\n</Project>"
        },
        {
          "name": "pbc.xcodeproj",
          "type": "tree",
          "content": null
        },
        {
          "name": "pbc",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tool",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}