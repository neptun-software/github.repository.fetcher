{
  "metadata": {
    "timestamp": 1736709866566,
    "page": 347,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "WiringPi/WiringPi",
      "stars": 2844,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0859375,
          "content": "*.o\n*.so\nlib*.so.*\n*~\ndebian-template/wiringPi\ndebian-template/wiringpi-*.deb\ngpio/gpio\n"
        },
        {
          "name": "COPYING.LESSER",
          "type": "blob",
          "size": 7.4716796875,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 0.546875,
          "content": "\nHow to install wiringPi\n=======================\n\nThe easiest way is to use the supplied 'build' script:\n\n  ./build\n\nthat should do a complete install or upgrade of wiringPi for you.\n\nThat will install a dynamic library.\n\nSome distributions do not have /usr/local/lib in the default LD_LIBRARY_PATH. To\nfix this, you need to edit /etc/ld.so.conf and add in a single line:\n\n  /usr/local/lib\n\nthen run the ldconfig command.\n\n  sudo ldconfig\n\nTo un-install wiringPi:\n\n  ./build uninstall\n\nFor help and support see:\n\n* https://github.com/WiringPi/WiringPi/issues\n\n"
        },
        {
          "name": "People",
          "type": "blob",
          "size": 0.8984375,
          "content": "\nJust a quick note to some people who've provided help, suggestions,\nbug-fixes, etc. along the way...\n\nNick Lott: (And others)\n  Hints about making it work with C++\n\nPhilipp Stefan Neininger:\n  Minor bug in the Makefile to do with cross compiling\n\nChris McSweeny\n  Hints and tips about the use of arithmetic in gettimeofday()\n    inside the dealyMicrosecondsHard() function.\n  And spotting a couple of schoolboy errors in the (experimental)\n  softServo code, prompting me to completely re-write it.\n\nArmin (Via projects website)\n  Some pointers about the i2c-dev.h files.\n\nArno Wagner\n  Suggestions for the mmap calls in wiringPiSetup()\n\nCHARLES Thibaut:\n  A small issue in softTone\n\nXian Stannard\n  Fixing some typos in the man page!\n\nAndre Crone\n  Suggested the __WIRING_PI.H__ round wiringPi.h\n\nRik Teerling\n  Pointing out some silly mistooks in the I2C code...\n\nAnd everyone else that's been working on this project!"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.3271484375,
          "content": "# WiringPi Library\nWelcome to the WiringPi Library, the highly performant GPIO access library for Raspberry Pi boards. This library is written in C and is designed to provide fast and efficient control of the GPIO pins by directly accessing the hardware registers using DMA. \n\n**Key Features:** \n- **Support:** WiringPi supports all Raspberry Pi Boards including Pi 5 ( :construction: On the Pi 5, only the GCLK functionality is currently not supported due to missing documentation of the RP1 chip).\n- **High Performance:** By directly accessing the hardware registers, WiringPi ensures minimal latency and maximum performance for your GPIO operations.\n- **Wide Adoption:** WiringPi is widely used in numerous projects, making it a reliable choice for your Raspberry Pi GPIO needs.\n\nWhether you’re working on a simple LED blink project or a complex automation system, WiringPi provides the tools you need to get the job done efficiently.\n\n## How to use\n\nTo compile programs with wiringPi Library, you need to include `wiringPi.h` as well as link against `wiringPi`:\n\n```c\n#include <wiringPi.h> // Include WiringPi library!\n\nint main(void)\n{\n  // uses BCM numbering of the GPIOs and directly accesses the GPIO registers.\n  wiringPiSetupGpio();\n\n  // pin mode ..(INPUT, OUTPUT, PWM_OUTPUT, GPIO_CLOCK)\n  // set pin 17 to input\n  pinMode(17, INPUT);\n\n  // pull up/down mode (PUD_OFF, PUD_UP, PUD_DOWN) => down\n  pullUpDnControl(17, PUD_DOWN);\n\n  // get state of pin 17\n  int value = digitalRead(17);\n\n  if (HIGH == value)\n  {\n    // your code\n  }\n}\n```\n\nTo compile this code, link against wiringPi:\n\n```sh\ngcc -o myapp myapp.c -l wiringPi\n```\n\nBe sure to check out the [examples](./examples/), build them using Make:\n\n```sh\ncd examples\nmake <example-name | really-all>\n```\n\nThe tool `gpio` can be used to set single pins as well as get the state of everything at once:\n\n```\npi@wiringdemo:~ $ gpio readall\n +-----+-----+---------+------+---+---Pi 3B--+---+------+---------+-----+-----+\n | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |\n +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+\n |     |     |    3.3v |      |   |  1 || 2  |   |      | 5v      |     |     |\n |   2 |   8 |   SDA.1 |   IN | 1 |  3 || 4  |   |      | 5v      |     |     |\n |   3 |   9 |   SCL.1 |   IN | 1 |  5 || 6  |   |      | 0v      |     |     |\n |   4 |   7 | GPIO. 7 |   IN | 0 |  7 || 8  | 0 | IN   | TxD     | 15  | 14  |\n |     |     |      0v |      |   |  9 || 10 | 1 | IN   | RxD     | 16  | 15  |\n |  17 |   0 | GPIO. 0 |   IN | 1 | 11 || 12 | 1 | IN   | GPIO. 1 | 1   | 18  |\n |  27 |   2 | GPIO. 2 |   IN | 1 | 13 || 14 |   |      | 0v      |     |     |\n |  22 |   3 | GPIO. 3 |   IN | 1 | 15 || 16 | 0 | IN   | GPIO. 4 | 4   | 23  |\n |     |     |    3.3v |      |   | 17 || 18 | 1 | IN   | GPIO. 5 | 5   | 24  |\n |  10 |  12 |    MOSI |   IN | 0 | 19 || 20 |   |      | 0v      |     |     |\n |   9 |  13 |    MISO |   IN | 0 | 21 || 22 | 1 | IN   | GPIO. 6 | 6   | 25  |\n |  11 |  14 |    SCLK |   IN | 0 | 23 || 24 | 1 | IN   | CE0     | 10  | 8   |\n |     |     |      0v |      |   | 25 || 26 | 0 | IN   | CE1     | 11  | 7   |\n |   0 |  30 |   SDA.0 |   IN | 1 | 27 || 28 | 1 | IN   | SCL.0   | 31  | 1   |\n |   5 |  21 | GPIO.21 |   IN | 0 | 29 || 30 |   |      | 0v      |     |     |\n |   6 |  22 | GPIO.22 |   IN | 0 | 31 || 32 | 1 | IN   | GPIO.26 | 26  | 12  |\n |  13 |  23 | GPIO.23 |   IN | 1 | 33 || 34 |   |      | 0v      |     |     |\n |  19 |  24 | GPIO.24 |   IN | 1 | 35 || 36 | 1 | IN   | GPIO.27 | 27  | 16  |\n |  26 |  25 | GPIO.25 |   IN | 1 | 37 || 38 | 1 | IN   | GPIO.28 | 28  | 20  |\n |     |     |      0v |      |   | 39 || 40 | 1 | IN   | GPIO.29 | 29  | 21  |\n +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+\n | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |\n +-----+-----+---------+------+---+---Pi 3B--+---+------+---------+-----+-----+\n```\n\n\n## Installing\n\nYou can either build it yourself or use the prebuilt binaries:\n\n### From Source\n\n1. create debian-package\n\n```sh\n# fetch the source\nsudo apt install git\ngit clone https://github.com/WiringPi/WiringPi.git\ncd WiringPi\n\n# build the package\n./build debian\nmv debian-template/wiringpi-3.0-1.deb .\n\n# install it\nsudo apt install ./wiringpi-3.0-1.deb\n```\n\n\n### Prebuilt Binaries\n\nGrab the latest release from [here](https://github.com/WiringPi/WiringPi/releases).\n\n\nUnzip/use the portable prebuilt verison:\n\n```sh\n# unzip the archive\ntar -xfv wiringpi_3.0.tar.gz\n```\n\nInstall the debian package:\n\n```sh\n# install a dpkg\nsudo apt install ./wiringpi-3.0-1.deb\n```\n\n\n## Ports\n\nwiringPi has been wrapped for multiple languages:\n\n* Node - https://github.com/WiringPi/WiringPi-Node\n* Perl - https://github.com/WiringPi/WiringPi-Perl\n* PHP - https://github.com/WiringPi/WiringPi-PHP\n* Python - https://github.com/WiringPi/WiringPi-Python\n* Ruby - https://github.com/WiringPi/WiringPi-Ruby\n\n## Support\n\nPlease use the [issue system](https://github.com/WiringPi/WiringPi/issues) of GitHub.\n\nIf you're not sure whether to create an issue or not, please engage in [discussions](https://github.com/WiringPi/WiringPi/discussions)!\n\nPlease do not email Gordon or @Gadgetoid.\n\nPlease don't email GC2 for reporting issues, you might [contact us](mailto:wiringpi@gc2.at) for anything that's not meant for the public.\n\n## History\n\nThis repository is the continuation of 'Gordon's wiringPi 2.5' which has been [deprecated](https://web.archive.org/web/20220405225008/http://wiringpi.com/wiringpi-deprecated/), a while ago.\n\n* The last \"old wiringPi\" source of Gordon's release can be found at the\n  [`final_source_2.50`](https://github.com/WiringPi/WiringPi/tree/final_official_2.50) tag.\n* The default `master` branch contains code that has been written since version 2.5\n  to provide support for newer hardware as well as new features.\n\n:information_source:️ Since 2024, [GC2](https://github.com/GrazerComputerClub) has taken over maintenance of the project, supporting new OS versions as well as current hardware generations. We are dedicated to keeping the arguably best-performing GPIO Library for Raspberry Pi running smoothly. We strive to do our best, but please note that this is a community effort, and we cannot provide any guarantees or take responsibility for implementing specific features you may need.\n\n## Debug\n\nWIRINGPI_DEBUG=1 ./my_wiringpi_program\n\nWIRINGPI_DEBUG=1 gpio readall\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0048828125,
          "content": "3.12\n"
        },
        {
          "name": "build",
          "type": "blob",
          "size": 4.638671875,
          "content": "#!/bin/sh -e\n\n# build\n#\tSimple wiringPi build and install script\n#\n#\tCopyright (c) 2012-2024 Gordon Henderson and contributors\n#################################################################################\n# This file is part of wiringPi:\n#\tA \"wiring\" library for the Raspberry Pi\n#\n#    wiringPi is free software: you can redistribute it and/or modify\n#    it under the terms of the GNU Lesser General Public License as published by\n#    the Free Software Foundation, either version 3 of the License, or\n#    (at your option) any later version.\n#\n#    wiringPi is distributed in the hope that it will be useful,\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#    GNU Lesser General Public License for more details.\n#\n#    You should have received a copy of the GNU Lesser General Public License\n#    along with wiringPi.  If not, see <http://www.gnu.org/licenses/>.\n#################################################################################\n#\n# wiringPi is designed to run on a Raspberry Pi only.\n#\tHowever if you're clever enough to actually look at this script to\n#\tsee why it's not building for you, then good luck.\n#\n#\tTo everyone else: Stop using cheap alternatives. Support the\n#\tRaspberry Pi Foundation\tas they're the only ones putting money\n#\tback into education!\n#################################################################################\n\ncheck_make_ok() {\n  if [ $? != 0 ]; then\n    echo \"\"\n    echo \"Make Failed...\"\n    echo \"Please check the messages and fix any problems. If you're still stuck,\"\n    echo \"then raise a GitHub issue with the output and as many details as you can\"\n    echo \"  https://github.com/WiringPi/WiringPi/issues\"\n    echo \"\"\n    exit 1\n  fi\n}\n\nsudo=${WIRINGPI_SUDO-sudo}\n\nif [ x$1 = \"xclean\" ]; then\n  cd wiringPi\n  echo -n \"wiringPi:   \"\t; make clean\n  cd ../devLib\n  echo -n \"DevLib:     \"\t; make clean\n  cd ../gpio\n  echo -n \"gpio:       \"\t; make clean\n  cd ../examples\n  echo -n \"Examples:   \"\t; make clean\n  cd Gertboard\n  echo -n \"Gertboard:  \"\t; make clean\n  cd ../PiFace\n  echo -n \"PiFace:     \"\t; make clean\n  cd ../q2w\n  echo -n \"Quick2Wire: \"\t; make clean\n  cd ../PiGlow\n  echo -n \"PiGlow:     \"\t; make clean\n  cd ../scrollPhat\n  echo -n \"scrollPhat: \"\t; make clean\n  cd ../..\n  echo -n \"Deb: \" ; rm  -f debian-template/wiringpi*.deb\n  echo\n  exit\nfi\n\nif [ x$1 = \"xuninstall\" ]; then\n  cd wiringPi\n  echo -n \"wiringPi: \" ; $sudo make uninstall\n  cd ../devLib\n  echo -n \"DevLib:   \" ; $sudo make uninstall\n  cd ../gpio\n  echo -n \"gpio:     \" ; $sudo make uninstall\n  exit\nfi\n\n# Only if you know what you're doing!\n\nif [ x$1 = \"xdebian\" ]; then\n  vMaj=`cut -d. -f1 VERSION`\n  vMin=`cut -d. -f2 VERSION`\n  here=`pwd`\n  deb_destdir=${here}/debian-template/wiringPi\n  cd debian-template/wiringPi\n  export VERSION=$vMaj.$vMin\n  export ARCH=$(dpkg-architecture -qDEB_HOST_ARCH)\n  echo version:$VERSION architecture:$ARCH\n  envsubst < control_template > DEBIAN/control\n  rm -rf usr\n  cd $here/wiringPi\n  make install-deb DEB_DESTDIR=${deb_destdir}\n  cd $here/devLib\n  make install-deb INCLUDE='-I. -I../wiringPi' DEB_DESTDIR=${deb_destdir}\n  cd $here/gpio\n  make install-deb INCLUDE='-I../wiringPi -I../devLib' LDFLAGS=-L../debian-template/wiringPi/usr/lib DEB_DESTDIR=${deb_destdir}\n  cd $here/debian-template\n  fakeroot dpkg-deb --build wiringPi\n  dpkg-name -o wiringPi.deb\n  exit\nfi\n\nif [ x$1 != \"x\" ]; then\n  echo \"Usage: $0 [clean | uninstall]\"\n  exit 1\nfi\n\n  echo \"wiringPi Build script\"\n  echo \"=====================\"\n  echo\n\n  hardware=`fgrep Hardware /proc/cpuinfo | head -1 | awk '{ print $3 }'`\n\n  echo\n  echo \"WiringPi Library\"\n  cd wiringPi\n  $sudo make uninstall\n  if [ x$1 = \"xstatic\" ]; then\n    make -j5 static\n    check_make_ok\n    $sudo make install-static\n  else\n    make -j5\n    check_make_ok\n    $sudo make install\n  fi\n  check_make_ok\n\n  echo\n  echo \"WiringPi Devices Library\"\n  cd ../devLib\n  $sudo make uninstall\n  if [ x$1 = \"xstatic\" ]; then\n    make -j5 static\n    check_make_ok\n    $sudo make install-static\n  else\n    make -j5\n    check_make_ok\n    $sudo make install\n  fi\n  check_make_ok\n\n  echo\n  echo \"GPIO Utility\"\n  cd ../gpio\n  make -j5\n  check_make_ok\n  $sudo make install\n  check_make_ok\n\n# echo\n# echo \"wiringPi Daemon\"\n# cd ../wiringPiD\n# make -j5\n# check_make_ok\n# $sudo make install\n# check_make_ok\n\n# echo\n# echo \"Examples\"\n# cd ../examples\n# make\n# cd ..\n\necho\necho All Done.\necho \"\"\necho \"NOTE: To compile programs with wiringPi, you need to add:\"\necho \"    -lwiringPi\"\necho \"  to your compile line(s) To use the Gertboard, MaxDetect, etc.\"\necho \"  code (the devLib), you need to also add:\"\necho \"    -lwiringPiDev\"\necho \"  to your compile line(s).\"\necho \"\"\n"
        },
        {
          "name": "debian-template",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "devLib",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "gpio",
          "type": "tree",
          "content": null
        },
        {
          "name": "newVersion",
          "type": "blob",
          "size": 1.314453125,
          "content": "#!/bin/sh -e\n#\n# newVersion:\n#\tUtility to create the version.h include file for the gpio command.\n#\tand the Debian package\n#\n#\tCopyright (c) 2012-2015 Gordon Henderson\n#################################################################################\n# This file is part of wiringPi:\n#\tA \"wiring\" library for the Raspberry Pi\n#\n#    wiringPi is free software: you can redistribute it and/or modify\n#    it under the terms of the GNU Lesser General Public License as published by\n#    the Free Software Foundation, either version 3 of the License, or\n#    (at your option) any later version.\n#\n#    wiringPi is distributed in the hope that it will be useful,\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#    GNU Lesser General Public License for more details.\n#\n#    You should have received a copy of the GNU Lesser General Public License\n#    along with wiringPi.  If not, see <http://www.gnu.org/licenses/>.\n#################################################################################\n\necho Updating to version: `cat VERSION`\n\nrm -f version.h\nvMaj=`cut -d. -f1 VERSION`\nvMin=`cut -d. -f2 VERSION`\necho \"#define VERSION \\\"`cat VERSION`\\\"\" > version.h\necho \"#define VERSION_MAJOR $vMaj\"\t\t>> version.h\necho \"#define VERSION_MINOR $vMin\"\t\t>> version.h\n\n"
        },
        {
          "name": "pins",
          "type": "tree",
          "content": null
        },
        {
          "name": "reinstall",
          "type": "blob",
          "size": 1.23828125,
          "content": "#!/bin/sh\nvMaj=`cut -d. -f1 VERSION`\nvMin=`cut -d. -f2 VERSION`\nWPIVERSION=$vMaj.$vMin\nARCH=$(dpkg-architecture -qDEB_HOST_ARCH)\n\nif [ -f /etc/os-release ]; then\n    # load vars from /etc/os-release\n    . /etc/os-release\n    if [ \"$ID\" = \"raspbian\" ] || [ \"$ID\" = \"debian\" ] || [ \"$ID\" = \"linuxmint\" ]; then\n        if [ \"$ID\" = \"raspbian\" ]; then\n            echo OS: Raspberry Pi OS\n        else\n            echo OS: Debian\n        fi\n        echo using all in one deb-package\n        echo ============================\n        echo \n\n        sudo apt -y remove wiringpi\n        ./build clean\n        ./build debian\n        mv debian-template/wiringpi_${WPIVERSION}_${ARCH}.deb .\n        sudo apt install ./wiringpi_${WPIVERSION}_${ARCH}.deb\n\n    elif [ \"$ID\" = \"debian\" ] || [ \"$ID\" = \"linuxmint\" ]; then\n        echo OS: Ubuntu/Mint\n        echo using 3 deb-package\n        echo ===================\n        echo \n\n        sudo apt -y remove libwiringpi2\n        sudo apt -y remove libwiringpi3\n        sudo apt -y remove wiringpi libwiringpi-dev\n        ./build clean\n        ./build ubuntu\n        #mv debian-template/wiringpi_${WPIVERSION}_armhf.deb .\n        #sudo apt install ./wiringpi_${WPIVERSION}_armhf.deb\n    fi\n\nelse\n    echo OS unknown, exit\n    exit\nfi"
        },
        {
          "name": "version.h",
          "type": "blob",
          "size": 0.0703125,
          "content": "#define VERSION \"3.12\"\n#define VERSION_MAJOR 3\n#define VERSION_MINOR 12\n"
        },
        {
          "name": "wiringPi",
          "type": "tree",
          "content": null
        },
        {
          "name": "wiringPiD",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}